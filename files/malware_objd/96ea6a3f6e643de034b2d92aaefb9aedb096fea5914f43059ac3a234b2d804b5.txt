
96ea6a3f6e643de034b2d92aaefb9aedb096fea5914f43059ac3a234b2d804b5.exe:     file format pei-i386


Disassembly of section .text:

10001000 <.text>:
10001000:	jmp    DWORD PTR ds:0x1009517c
10001006:	int3   
10001007:	int3   
10001008:	int3   
10001009:	int3   
1000100a:	int3   
1000100b:	int3   
1000100c:	int3   
1000100d:	int3   
1000100e:	int3   
1000100f:	int3   
10001010:	push   esi
10001011:	mov    esi,DWORD PTR [esp+0x8]
10001015:	test   esi,esi
10001017:	je     0x10001046
10001019:	mov    eax,DWORD PTR [esp+0xc]
1000101d:	test   eax,eax
1000101f:	je     0x10001046
10001021:	mov    ecx,DWORD PTR [esp+0x10]
10001025:	mov    edx,DWORD PTR [esp+0x14]
10001029:	push   ecx
1000102a:	push   esi
1000102b:	push   0xffffffff
1000102d:	push   eax
1000102e:	push   0x0
10001030:	push   edx
10001031:	mov    WORD PTR [esi],0x0
10001036:	call   DWORD PTR ds:0x10034080
1000103c:	neg    eax
1000103e:	sbb    eax,eax
10001040:	and    eax,esi
10001042:	pop    esi
10001043:	ret    0x10
10001046:	xor    eax,eax
10001048:	pop    esi
10001049:	ret    0x10
1000104c:	int3   
1000104d:	int3   
1000104e:	int3   
1000104f:	int3   
10001050:	push   esi
10001051:	mov    esi,DWORD PTR [esp+0x8]
10001055:	test   esi,esi
10001057:	je     0x10001088
10001059:	mov    eax,DWORD PTR [esp+0xc]
1000105d:	test   eax,eax
1000105f:	je     0x10001088
10001061:	mov    ecx,DWORD PTR [esp+0x10]
10001065:	mov    edx,DWORD PTR [esp+0x14]
10001069:	push   0x0
1000106b:	push   0x0
1000106d:	push   ecx
1000106e:	push   esi
1000106f:	push   0xffffffff
10001071:	push   eax
10001072:	push   0x0
10001074:	push   edx
10001075:	mov    BYTE PTR [esi],0x0
10001078:	call   DWORD PTR ds:0x1003402c
1000107e:	neg    eax
10001080:	sbb    eax,eax
10001082:	and    eax,esi
10001084:	pop    esi
10001085:	ret    0x10
10001088:	xor    eax,eax
1000108a:	pop    esi
1000108b:	ret    0x10
1000108e:	int3   
1000108f:	int3   
10001090:	mov    eax,DWORD PTR [esp+0x4]
10001094:	push   0x10085c24
10001099:	lea    ecx,[esp+0x8]
1000109d:	push   ecx
1000109e:	mov    DWORD PTR [esp+0xc],eax
100010a2:	call   0x1001621e
100010a7:	int3   
100010a8:	int3   
100010a9:	int3   
100010aa:	int3   
100010ab:	int3   
100010ac:	int3   
100010ad:	int3   
100010ae:	int3   
100010af:	int3   
100010b0:	mov    eax,DWORD PTR [esp+0x4]
100010b4:	cmp    eax,0x50
100010b7:	ja     0x100010db
100010b9:	movzx  ecx,BYTE PTR [eax+0x100010f8]
100010c0:	jmp    DWORD PTR [ecx*4+0x100010e8]
100010c7:	push   0x8007000e
100010cc:	call   0x10001090
100010d1:	push   0x80070057
100010d6:	call   0x10001090
100010db:	push   0x80004005
100010e0:	call   0x10001090
100010e5:	ret    
100010e6:	mov    edi,edi
100010e8:	in     eax,0x10
100010ea:	add    BYTE PTR [eax],dl
100010ec:	(bad)  
100010ed:	adc    BYTE PTR [eax],al
100010ef:	adc    cl,dl
100010f1:	adc    BYTE PTR [eax],al
100010f3:	adc    bl,bl
100010f5:	adc    BYTE PTR [eax],al
100010f7:	adc    BYTE PTR [eax],al
100010f9:	add    eax,DWORD PTR [ebx]
100010fb:	add    eax,DWORD PTR [ebx]
100010fd:	add    eax,DWORD PTR [ebx]
100010ff:	add    eax,DWORD PTR [ebx]
10001101:	add    eax,DWORD PTR [ebx]
10001103:	add    eax,DWORD PTR [ecx]
10001105:	add    eax,DWORD PTR [ebx]
10001107:	add    eax,DWORD PTR [ebx]
10001109:	add    eax,DWORD PTR [ebx]
1000110b:	add    eax,DWORD PTR [ebx]
1000110d:	add    eax,DWORD PTR [edx]
1000110f:	add    eax,DWORD PTR [ebx]
10001111:	add    eax,DWORD PTR [ebx]
10001113:	add    eax,DWORD PTR [ebx]
10001115:	add    eax,DWORD PTR [ebx]
10001117:	add    eax,DWORD PTR [ebx]
10001119:	add    eax,DWORD PTR [edx]
1000111b:	add    eax,DWORD PTR [ebx]
1000111d:	add    eax,DWORD PTR [ebx]
1000111f:	add    eax,DWORD PTR [ebx]
10001121:	add    eax,DWORD PTR [ebx]
10001123:	add    eax,DWORD PTR [ebx]
10001125:	add    eax,DWORD PTR [ebx]
10001127:	add    eax,DWORD PTR [ebx]
10001129:	add    eax,DWORD PTR [ebx]
1000112b:	add    eax,DWORD PTR [ebx]
1000112d:	add    eax,DWORD PTR [ebx]
1000112f:	add    eax,DWORD PTR [ebx]
10001131:	add    eax,DWORD PTR [ebx]
10001133:	add    eax,DWORD PTR [ebx]
10001135:	add    eax,DWORD PTR [ebx]
10001137:	add    eax,DWORD PTR [ebx]
10001139:	add    eax,DWORD PTR [ebx]
1000113b:	add    eax,DWORD PTR [ebx]
1000113d:	add    eax,DWORD PTR [ebx]
1000113f:	add    eax,DWORD PTR [ebx]
10001141:	add    eax,DWORD PTR [ebx]
10001143:	add    eax,DWORD PTR [ebx]
10001145:	add    eax,DWORD PTR [ebx]
10001147:	add    eax,DWORD PTR [eax]
10001149:	int3   
1000114a:	int3   
1000114b:	int3   
1000114c:	int3   
1000114d:	int3   
1000114e:	int3   
1000114f:	int3   
10001150:	mov    eax,DWORD PTR [esp+0x10]
10001154:	mov    ecx,DWORD PTR [esp+0xc]
10001158:	mov    edx,DWORD PTR [esp+0x8]
1000115c:	push   eax
1000115d:	mov    eax,DWORD PTR [esp+0x8]
10001161:	push   ecx
10001162:	push   edx
10001163:	push   eax
10001164:	call   0x100164ce
10001169:	push   eax
1000116a:	call   0x100010b0
1000116f:	add    esp,0x14
10001172:	ret    
10001173:	int3   
10001174:	int3   
10001175:	int3   
10001176:	int3   
10001177:	int3   
10001178:	int3   
10001179:	int3   
1000117a:	int3   
1000117b:	int3   
1000117c:	int3   
1000117d:	int3   
1000117e:	int3   
1000117f:	int3   
10001180:	push   ebx
10001181:	mov    ebx,DWORD PTR [esp+0x8]
10001185:	push   edi
10001186:	mov    edi,DWORD PTR [esp+0x10]
1000118a:	push   edi
1000118b:	push   ebx
1000118c:	call   DWORD PTR ds:0x10034090
10001192:	test   eax,eax
10001194:	jne    0x10001199
10001196:	pop    edi
10001197:	pop    ebx
10001198:	ret    
10001199:	push   esi
1000119a:	push   eax
1000119b:	call   DWORD PTR ds:0x1003408c
100011a1:	mov    esi,eax
100011a3:	test   esi,esi
100011a5:	je     0x100011d4
100011a7:	push   edi
100011a8:	push   ebx
100011a9:	call   DWORD PTR ds:0x10034088
100011af:	mov    ecx,DWORD PTR [esp+0x18]
100011b3:	add    eax,esi
100011b5:	and    ecx,0xf
100011b8:	jbe    0x100011d0
100011ba:	lea    ebx,[ebx+0x0]
100011c0:	cmp    esi,eax
100011c2:	jae    0x100011d4
100011c4:	sub    ecx,0x1
100011c7:	movzx  edx,WORD PTR [esi]
100011ca:	lea    esi,[esi+edx*2+0x2]
100011ce:	jne    0x100011c0
100011d0:	cmp    esi,eax
100011d2:	jb     0x100011da
100011d4:	pop    esi
100011d5:	pop    edi
100011d6:	xor    eax,eax
100011d8:	pop    ebx
100011d9:	ret    
100011da:	mov    ax,WORD PTR [esi]
100011dd:	neg    ax
100011e0:	sbb    eax,eax
100011e2:	and    eax,esi
100011e4:	pop    esi
100011e5:	pop    edi
100011e6:	pop    ebx
100011e7:	ret    
100011e8:	int3   
100011e9:	int3   
100011ea:	int3   
100011eb:	int3   
100011ec:	int3   
100011ed:	int3   
100011ee:	int3   
100011ef:	int3   
100011f0:	push   ebx
100011f1:	push   ebp
100011f2:	push   esi
100011f3:	push   edi
100011f4:	xor    edi,edi
100011f6:	push   edi
100011f7:	mov    ecx,0x10096c9c
100011fc:	call   0x10015884
10001201:	mov    esi,eax
10001203:	test   esi,esi
10001205:	lea    ebp,[edi+0x1]
10001208:	je     0x10001257
1000120a:	mov    ebx,DWORD PTR [esp+0x14]
1000120e:	mov    edi,edi
10001210:	test   edi,edi
10001212:	jne    0x10001257
10001214:	mov    eax,DWORD PTR [esp+0x18]
10001218:	mov    ecx,ebx
1000121a:	shr    ecx,0x4
1000121d:	add    ecx,0x1
10001220:	push   eax
10001221:	movzx  edx,cx
10001224:	push   edx
10001225:	push   0x6
10001227:	push   esi
10001228:	call   DWORD PTR ds:0x10034094
1000122e:	test   eax,eax
10001230:	je     0x10001243
10001232:	push   ebx
10001233:	push   eax
10001234:	push   esi
10001235:	call   0x10001180
1000123a:	mov    edi,eax
1000123c:	add    esp,0xc
1000123f:	test   edi,edi
10001241:	jne    0x1000125e
10001243:	push   ebp
10001244:	mov    ecx,0x10096c9c
10001249:	call   0x10015884
1000124e:	mov    esi,eax
10001250:	add    ebp,0x1
10001253:	test   esi,esi
10001255:	jne    0x10001210
10001257:	pop    edi
10001258:	pop    esi
10001259:	pop    ebp
1000125a:	xor    eax,eax
1000125c:	pop    ebx
1000125d:	ret    
1000125e:	pop    edi
1000125f:	mov    eax,esi
10001261:	pop    esi
10001262:	pop    ebp
10001263:	pop    ebx
10001264:	ret    
10001265:	int3   
10001266:	int3   
10001267:	int3   
10001268:	int3   
10001269:	int3   
1000126a:	int3   
1000126b:	int3   
1000126c:	int3   
1000126d:	int3   
1000126e:	int3   
1000126f:	int3   
10001270:	mov    eax,DWORD PTR [esp+0x8]
10001274:	ret    
10001275:	int3   
10001276:	int3   
10001277:	int3   
10001278:	int3   
10001279:	int3   
1000127a:	int3   
1000127b:	int3   
1000127c:	int3   
1000127d:	int3   
1000127e:	int3   
1000127f:	int3   
10001280:	ret    
10001281:	int3   
10001282:	int3   
10001283:	int3   
10001284:	int3   
10001285:	int3   
10001286:	int3   
10001287:	int3   
10001288:	int3   
10001289:	int3   
1000128a:	int3   
1000128b:	int3   
1000128c:	int3   
1000128d:	int3   
1000128e:	int3   
1000128f:	int3   
10001290:	push   esi
10001291:	lea    eax,[esp+0x8]
10001295:	push   eax
10001296:	mov    esi,ecx
10001298:	call   0x100162be
1000129d:	mov    DWORD PTR [esi],0x1003450c
100012a3:	mov    eax,esi
100012a5:	pop    esi
100012a6:	ret    0x4
100012a9:	int3   
100012aa:	int3   
100012ab:	int3   
100012ac:	int3   
100012ad:	int3   
100012ae:	int3   
100012af:	int3   
100012b0:	mov    DWORD PTR [ecx],0x1003450c
100012b6:	jmp    0x1001637c
100012bb:	int3   
100012bc:	int3   
100012bd:	int3   
100012be:	int3   
100012bf:	int3   
100012c0:	push   esi
100012c1:	mov    esi,ecx
100012c3:	mov    DWORD PTR [esi],0x1003450c
100012c9:	call   0x1001637c
100012ce:	test   BYTE PTR [esp+0x8],0x1
100012d3:	je     0x100012de
100012d5:	push   esi
100012d6:	call   0x10015b26
100012db:	add    esp,0x4
100012de:	mov    eax,esi
100012e0:	pop    esi
100012e1:	ret    0x4
100012e4:	int3   
100012e5:	int3   
100012e6:	int3   
100012e7:	int3   
100012e8:	int3   
100012e9:	int3   
100012ea:	int3   
100012eb:	int3   
100012ec:	int3   
100012ed:	int3   
100012ee:	int3   
100012ef:	int3   
100012f0:	mov    eax,DWORD PTR [esp+0xc]
100012f4:	cmp    eax,0x4
100012f7:	mov    ecx,DWORD PTR [esp+0x8]
100012fb:	mov    edx,DWORD PTR [esp+0x4]
100012ff:	push   esi
10001300:	push   edi
10001301:	jb     0x10001317
10001303:	mov    esi,DWORD PTR [edx]
10001305:	cmp    esi,DWORD PTR [ecx]
10001307:	jne    0x1000131b
10001309:	sub    eax,0x4
1000130c:	add    ecx,0x4
1000130f:	add    edx,0x4
10001312:	cmp    eax,0x4
10001315:	jae    0x10001303
10001317:	test   eax,eax
10001319:	je     0x10001379
1000131b:	movzx  esi,BYTE PTR [edx]
1000131e:	movzx  edi,BYTE PTR [ecx]
10001321:	sub    esi,edi
10001323:	jne    0x1000136a
10001325:	sub    eax,0x1
10001328:	add    ecx,0x1
1000132b:	add    edx,0x1
1000132e:	test   eax,eax
10001330:	je     0x10001379
10001332:	movzx  esi,BYTE PTR [edx]
10001335:	movzx  edi,BYTE PTR [ecx]
10001338:	sub    esi,edi
1000133a:	jne    0x1000136a
1000133c:	sub    eax,0x1
1000133f:	add    ecx,0x1
10001342:	add    edx,0x1
10001345:	test   eax,eax
10001347:	je     0x10001379
10001349:	movzx  esi,BYTE PTR [edx]
1000134c:	movzx  edi,BYTE PTR [ecx]
1000134f:	sub    esi,edi
10001351:	jne    0x1000136a
10001353:	sub    eax,0x1
10001356:	add    ecx,0x1
10001359:	add    edx,0x1
1000135c:	test   eax,eax
1000135e:	je     0x10001379
10001360:	movzx  esi,BYTE PTR [edx]
10001363:	movzx  eax,BYTE PTR [ecx]
10001366:	sub    esi,eax
10001368:	je     0x10001379
1000136a:	test   esi,esi
1000136c:	mov    eax,0x1
10001371:	jg     0x1000137b
10001373:	pop    edi
10001374:	or     eax,0xffffffff
10001377:	pop    esi
10001378:	ret    
10001379:	xor    eax,eax
1000137b:	pop    edi
1000137c:	pop    esi
1000137d:	ret    
1000137e:	int3   
1000137f:	int3   
10001380:	mov    eax,ecx
10001382:	mov    DWORD PTR [eax],0x0
10001388:	ret    
10001389:	int3   
1000138a:	int3   
1000138b:	int3   
1000138c:	int3   
1000138d:	int3   
1000138e:	int3   
1000138f:	int3   
10001390:	push   0xffffffff
10001392:	push   0x1002a948
10001397:	mov    eax,fs:0x0
1000139d:	push   eax
1000139e:	push   ecx
1000139f:	push   esi
100013a0:	mov    eax,ds:0x100951fc
100013a5:	xor    eax,esp
100013a7:	push   eax
100013a8:	lea    eax,[esp+0xc]
100013ac:	mov    fs:0x0,eax
100013b2:	mov    esi,ecx
100013b4:	mov    DWORD PTR [esp+0x8],esi
100013b8:	call   0x100162ad
100013bd:	xor    eax,eax
100013bf:	mov    DWORD PTR [esp+0x14],eax
100013c3:	lea    ecx,[esi+0xc]
100013c6:	mov    DWORD PTR [esi],0x10034500
100013cc:	push   0xffffffff
100013ce:	mov    DWORD PTR [ecx+0x14],eax
100013d1:	mov    DWORD PTR [ecx+0x18],0xf
100013d8:	push   eax
100013d9:	mov    BYTE PTR [ecx+0x4],al
100013dc:	mov    eax,DWORD PTR [esp+0x24]
100013e0:	push   eax
100013e1:	call   0x10003820
100013e6:	mov    eax,esi
100013e8:	mov    ecx,DWORD PTR [esp+0xc]
100013ec:	mov    DWORD PTR fs:0x0,ecx
100013f3:	pop    ecx
100013f4:	pop    esi
100013f5:	add    esp,0x10
100013f8:	ret    0x4
100013fb:	int3   
100013fc:	int3   
100013fd:	int3   
100013fe:	int3   
100013ff:	int3   
10001400:	mov    eax,DWORD PTR [esp+0x4]
10001404:	push   esi
10001405:	push   eax
10001406:	mov    esi,ecx
10001408:	call   0x10001390
1000140d:	mov    DWORD PTR [esi],0x100344f4
10001413:	mov    eax,esi
10001415:	pop    esi
10001416:	ret    0x4
10001419:	int3   
1000141a:	int3   
1000141b:	int3   
1000141c:	int3   
1000141d:	int3   
1000141e:	int3   
1000141f:	int3   
10001420:	push   esi
10001421:	mov    esi,ecx
10001423:	mov    DWORD PTR [esi],0x10034500
10001429:	cmp    DWORD PTR [esi+0x24],0x10
1000142d:	jb     0x1000143b
1000142f:	mov    eax,DWORD PTR [esi+0x10]
10001432:	push   eax
10001433:	call   0x10015b26
10001438:	add    esp,0x4
1000143b:	xor    eax,eax
1000143d:	mov    DWORD PTR [esi+0x24],0xf
10001444:	mov    DWORD PTR [esi+0x20],eax
10001447:	mov    BYTE PTR [esi+0x10],al
1000144a:	mov    ecx,esi
1000144c:	pop    esi
1000144d:	jmp    0x1001637c
10001452:	int3   
10001453:	int3   
10001454:	int3   
10001455:	int3   
10001456:	int3   
10001457:	int3   
10001458:	int3   
10001459:	int3   
1000145a:	int3   
1000145b:	int3   
1000145c:	int3   
1000145d:	int3   
1000145e:	int3   
1000145f:	int3   
10001460:	push   esi
10001461:	mov    esi,ecx
10001463:	mov    DWORD PTR [esi],0x10034500
10001469:	cmp    DWORD PTR [esi+0x24],0x10
1000146d:	jb     0x1000147b
1000146f:	mov    eax,DWORD PTR [esi+0x10]
10001472:	push   eax
10001473:	call   0x10015b26
10001478:	add    esp,0x4
1000147b:	xor    eax,eax
1000147d:	mov    DWORD PTR [esi+0x24],0xf
10001484:	mov    DWORD PTR [esi+0x20],eax
10001487:	mov    ecx,esi
10001489:	mov    BYTE PTR [esi+0x10],al
1000148c:	call   0x1001637c
10001491:	test   BYTE PTR [esp+0x8],0x1
10001496:	je     0x100014a1
10001498:	push   esi
10001499:	call   0x10015b26
1000149e:	add    esp,0x4
100014a1:	mov    eax,esi
100014a3:	pop    esi
100014a4:	ret    0x4
100014a7:	int3   
100014a8:	int3   
100014a9:	int3   
100014aa:	int3   
100014ab:	int3   
100014ac:	int3   
100014ad:	int3   
100014ae:	int3   
100014af:	int3   
100014b0:	mov    eax,DWORD PTR [esp+0x4]
100014b4:	push   esi
100014b5:	push   eax
100014b6:	mov    esi,ecx
100014b8:	call   0x10001390
100014bd:	mov    DWORD PTR [esi],0x10034518
100014c3:	mov    eax,esi
100014c5:	pop    esi
100014c6:	ret    0x4
100014c9:	int3   
100014ca:	int3   
100014cb:	int3   
100014cc:	int3   
100014cd:	int3   
100014ce:	int3   
100014cf:	int3   
100014d0:	push   0xffffffff
100014d2:	push   0x1002a918
100014d7:	mov    eax,fs:0x0
100014dd:	push   eax
100014de:	push   esi
100014df:	mov    eax,ds:0x100951fc
100014e4:	xor    eax,esp
100014e6:	push   eax
100014e7:	lea    eax,[esp+0x8]
100014eb:	mov    fs:0x0,eax
100014f1:	mov    esi,DWORD PTR [esp+0x18]
100014f5:	mov    ecx,esi
100014f7:	call   0x100162ad
100014fc:	xor    eax,eax
100014fe:	mov    DWORD PTR [esp+0x10],eax
10001502:	lea    ecx,[esi+0xc]
10001505:	mov    DWORD PTR [esi],0x1006cde0
1000150b:	push   0xffffffff
1000150d:	mov    DWORD PTR [ecx+0x14],eax
10001510:	mov    DWORD PTR [ecx+0x18],0xf
10001517:	push   eax
10001518:	mov    BYTE PTR [ecx+0x4],al
1000151b:	mov    eax,DWORD PTR [esp+0x24]
1000151f:	push   eax
10001520:	call   0x10003820
10001525:	mov    eax,esi
10001527:	mov    ecx,DWORD PTR [esp+0x8]
1000152b:	mov    DWORD PTR fs:0x0,ecx
10001532:	pop    ecx
10001533:	pop    esi
10001534:	add    esp,0xc
10001537:	ret    0x8
1000153a:	int3   
1000153b:	int3   
1000153c:	int3   
1000153d:	int3   
1000153e:	int3   
1000153f:	int3   
10001540:	cmp    DWORD PTR [ecx+0x24],0x10
10001544:	jb     0x1000154a
10001546:	mov    eax,DWORD PTR [ecx+0x10]
10001549:	ret    
1000154a:	lea    eax,[ecx+0x10]
1000154d:	ret    
1000154e:	int3   
1000154f:	int3   
10001550:	push   0xffffffff
10001552:	push   0x1002a8e8
10001557:	mov    eax,fs:0x0
1000155d:	push   eax
1000155e:	push   ecx
1000155f:	push   esi
10001560:	push   edi
10001561:	mov    eax,ds:0x100951fc
10001566:	xor    eax,esp
10001568:	push   eax
10001569:	lea    eax,[esp+0x10]
1000156d:	mov    fs:0x0,eax
10001573:	mov    esi,ecx
10001575:	mov    DWORD PTR [esp+0xc],esi
10001579:	mov    edi,DWORD PTR [esp+0x20]
1000157d:	push   edi
1000157e:	call   0x10016324
10001583:	xor    edx,edx
10001585:	mov    DWORD PTR [esp+0x18],edx
10001589:	push   0xffffffff
1000158b:	lea    ecx,[esi+0xc]
1000158e:	mov    DWORD PTR [esi],0x1006cde0
10001594:	lea    eax,[edi+0xc]
10001597:	push   edx
10001598:	mov    DWORD PTR [ecx+0x18],0xf
1000159f:	mov    DWORD PTR [ecx+0x14],edx
100015a2:	push   eax
100015a3:	mov    BYTE PTR [ecx+0x4],dl
100015a6:	call   0x10003820
100015ab:	mov    eax,esi
100015ad:	mov    ecx,DWORD PTR [esp+0x10]
100015b1:	mov    DWORD PTR fs:0x0,ecx
100015b8:	pop    ecx
100015b9:	pop    edi
100015ba:	pop    esi
100015bb:	add    esp,0x10
100015be:	ret    0x4
100015c1:	int3   
100015c2:	int3   
100015c3:	int3   
100015c4:	int3   
100015c5:	int3   
100015c6:	int3   
100015c7:	int3   
100015c8:	int3   
100015c9:	int3   
100015ca:	int3   
100015cb:	int3   
100015cc:	int3   
100015cd:	int3   
100015ce:	int3   
100015cf:	int3   
100015d0:	push   ecx
100015d1:	push   edi
100015d2:	mov    edi,DWORD PTR [ecx]
100015d4:	test   edi,edi
100015d6:	je     0x10001619
100015d8:	push   0x0
100015da:	lea    ecx,[esp+0x8]
100015de:	call   0x10015aa2
100015e3:	mov    eax,DWORD PTR [edi+0x4]
100015e6:	test   eax,eax
100015e8:	jbe    0x100015f5
100015ea:	cmp    eax,0xffffffff
100015ed:	jae    0x100015f5
100015ef:	add    eax,0xffffffff
100015f2:	mov    DWORD PTR [edi+0x4],eax
100015f5:	push   esi
100015f6:	mov    esi,DWORD PTR [edi+0x4]
100015f9:	neg    esi
100015fb:	sbb    esi,esi
100015fd:	not    esi
100015ff:	lea    ecx,[esp+0x8]
10001603:	and    esi,edi
10001605:	call   0x10015ac3
1000160a:	test   esi,esi
1000160c:	je     0x10001618
1000160e:	mov    eax,DWORD PTR [esi]
10001610:	mov    edx,DWORD PTR [eax]
10001612:	push   0x1
10001614:	mov    ecx,esi
10001616:	call   edx
10001618:	pop    esi
10001619:	pop    edi
1000161a:	pop    ecx
1000161b:	ret    
1000161c:	int3   
1000161d:	int3   
1000161e:	int3   
1000161f:	int3   
10001620:	mov    eax,DWORD PTR [esp+0x4]
10001624:	push   esi
10001625:	push   eax
10001626:	mov    esi,ecx
10001628:	call   0x10001640
1000162d:	mov    DWORD PTR [esi],0x10034518
10001633:	mov    eax,esi
10001635:	pop    esi
10001636:	ret    0x4
10001639:	int3   
1000163a:	int3   
1000163b:	int3   
1000163c:	int3   
1000163d:	int3   
1000163e:	int3   
1000163f:	int3   
10001640:	push   0xffffffff
10001642:	push   0x1002a8b8
10001647:	mov    eax,fs:0x0
1000164d:	push   eax
1000164e:	push   ecx
1000164f:	push   esi
10001650:	push   edi
10001651:	mov    eax,ds:0x100951fc
10001656:	xor    eax,esp
10001658:	push   eax
10001659:	lea    eax,[esp+0x10]
1000165d:	mov    fs:0x0,eax
10001663:	mov    esi,ecx
10001665:	mov    DWORD PTR [esp+0xc],esi
10001669:	mov    edi,DWORD PTR [esp+0x20]
1000166d:	push   edi
1000166e:	call   0x10016324
10001673:	xor    edx,edx
10001675:	mov    DWORD PTR [esp+0x18],edx
10001679:	push   0xffffffff
1000167b:	lea    ecx,[esi+0xc]
1000167e:	mov    DWORD PTR [esi],0x10034500
10001684:	lea    eax,[edi+0xc]
10001687:	push   edx
10001688:	mov    DWORD PTR [ecx+0x18],0xf
1000168f:	mov    DWORD PTR [ecx+0x14],edx
10001692:	push   eax
10001693:	mov    BYTE PTR [ecx+0x4],dl
10001696:	call   0x10003820
1000169b:	mov    eax,esi
1000169d:	mov    ecx,DWORD PTR [esp+0x10]
100016a1:	mov    DWORD PTR fs:0x0,ecx
100016a8:	pop    ecx
100016a9:	pop    edi
100016aa:	pop    esi
100016ab:	add    esp,0x10
100016ae:	ret    0x4
100016b1:	int3   
100016b2:	int3   
100016b3:	int3   
100016b4:	int3   
100016b5:	int3   
100016b6:	int3   
100016b7:	int3   
100016b8:	int3   
100016b9:	int3   
100016ba:	int3   
100016bb:	int3   
100016bc:	int3   
100016bd:	int3   
100016be:	int3   
100016bf:	int3   
100016c0:	mov    eax,esi
100016c2:	mov    edx,0xe3
100016c7:	push   edi
100016c8:	mov    ecx,DWORD PTR [eax+0x4]
100016cb:	mov    edi,DWORD PTR [eax]
100016cd:	xor    edi,ecx
100016cf:	and    edi,0x7ffffffe
100016d5:	xor    edi,DWORD PTR [eax]
100016d7:	and    cl,0x1
100016da:	shr    edi,1
100016dc:	sub    edx,0x1
100016df:	neg    cl
100016e1:	sbb    ecx,ecx
100016e3:	and    ecx,0x9908b0df
100016e9:	xor    edi,ecx
100016eb:	xor    edi,DWORD PTR [eax+0x634]
100016f1:	add    eax,0x4
100016f4:	test   edx,edx
100016f6:	mov    DWORD PTR [eax-0x4],edi
100016f9:	jne    0x100016c8
100016fb:	mov    edx,0x18c
10001700:	mov    ecx,DWORD PTR [eax+0x4]
10001703:	mov    edi,DWORD PTR [eax]
10001705:	xor    edi,ecx
10001707:	and    edi,0x7ffffffe
1000170d:	xor    edi,DWORD PTR [eax]
1000170f:	and    cl,0x1
10001712:	shr    edi,1
10001714:	neg    cl
10001716:	sbb    ecx,ecx
10001718:	and    ecx,0x9908b0df
1000171e:	xor    edi,ecx
10001720:	xor    edi,DWORD PTR [eax-0x38c]
10001726:	add    eax,0x4
10001729:	sub    edx,0x1
1000172c:	mov    DWORD PTR [eax-0x4],edi
1000172f:	jne    0x10001700
10001731:	mov    ecx,DWORD PTR [esi]
10001733:	mov    edx,DWORD PTR [eax]
10001735:	xor    edx,ecx
10001737:	and    edx,0x7ffffffe
1000173d:	xor    edx,DWORD PTR [eax]
1000173f:	and    cl,0x1
10001742:	shr    edx,1
10001744:	neg    cl
10001746:	pop    edi
10001747:	sbb    ecx,ecx
10001749:	and    ecx,0x9908b0df
1000174f:	xor    edx,ecx
10001751:	xor    edx,DWORD PTR [eax-0x38c]
10001757:	mov    DWORD PTR [eax],edx
10001759:	mov    DWORD PTR [esi+0x9c4],0x270
10001763:	mov    DWORD PTR [esi+0x9c0],esi
10001769:	ret    
1000176a:	int3   
1000176b:	int3   
1000176c:	int3   
1000176d:	int3   
1000176e:	int3   
1000176f:	int3   
10001770:	push   esi
10001771:	mov    esi,eax
10001773:	push   edi
10001774:	mov    ecx,0x1
10001779:	mov    DWORD PTR [esi],edx
1000177b:	jmp    0x10001780
1000177d:	lea    ecx,[ecx+0x0]
10001780:	mov    edx,DWORD PTR [eax]
10001782:	mov    edi,edx
10001784:	shr    edi,0x1e
10001787:	xor    edi,edx
10001789:	imul   edi,edi,0x6c078965
1000178f:	add    edi,ecx
10001791:	mov    DWORD PTR [eax+0x4],edi
10001794:	add    ecx,0x1
10001797:	add    eax,0x4
1000179a:	cmp    ecx,0x270
100017a0:	jl     0x10001780
100017a2:	call   0x100016c0
100017a7:	pop    edi
100017a8:	pop    esi
100017a9:	ret    
100017aa:	int3   
100017ab:	int3   
100017ac:	int3   
100017ad:	int3   
100017ae:	int3   
100017af:	int3   
100017b0:	push   esi
100017b1:	push   edi
100017b2:	mov    edi,ebx
100017b4:	shr    edi,1
100017b6:	or     edi,ebx
100017b8:	mov    esi,eax
100017ba:	mov    eax,edi
100017bc:	shr    eax,0x2
100017bf:	or     edi,eax
100017c1:	mov    ecx,edi
100017c3:	shr    ecx,0x4
100017c6:	or     edi,ecx
100017c8:	mov    edx,edi
100017ca:	shr    edx,0x8
100017cd:	or     edi,edx
100017cf:	mov    eax,edi
100017d1:	shr    eax,0x10
100017d4:	or     edi,eax
100017d6:	cmp    DWORD PTR [esi+0x9c4],0x0
100017dd:	jne    0x100017e4
100017df:	call   0x100016c0
100017e4:	mov    eax,DWORD PTR [esi+0x9c0]
100017ea:	add    DWORD PTR [esi+0x9c4],0xffffffff
100017f1:	mov    ecx,DWORD PTR [eax]
100017f3:	add    eax,0x4
100017f6:	mov    edx,ecx
100017f8:	shr    edx,0xb
100017fb:	xor    ecx,edx
100017fd:	mov    DWORD PTR [esi+0x9c0],eax
10001803:	mov    eax,ecx
10001805:	and    eax,0xff3a58ad
1000180a:	shl    eax,0x7
1000180d:	xor    ecx,eax
1000180f:	mov    edx,ecx
10001811:	and    edx,0xffffdf8c
10001817:	shl    edx,0xf
1000181a:	xor    ecx,edx
1000181c:	mov    eax,ecx
1000181e:	shr    eax,0x12
10001821:	xor    eax,ecx
10001823:	and    eax,edi
10001825:	cmp    eax,ebx
10001827:	ja     0x100017d6
10001829:	pop    edi
1000182a:	pop    esi
1000182b:	ret    
1000182c:	int3   
1000182d:	int3   
1000182e:	int3   
1000182f:	int3   
10001830:	cmp    DWORD PTR ds:0x10097978,0x0
10001837:	jne    0x100018b8
10001839:	push   esi
1000183a:	push   0x11c
1000183f:	push   0x0
10001841:	push   0x10097980
10001846:	mov    DWORD PTR ds:0x1009797c,0x0
10001850:	call   0x10016580
10001855:	mov    esi,DWORD PTR ds:0x10034160
1000185b:	add    esp,0xc
1000185e:	push   0x10097980
10001863:	mov    DWORD PTR ds:0x10097980,0x114
1000186d:	call   esi
1000186f:	test   eax,eax
10001871:	je     0x100018b4
10001873:	cmp    DWORD PTR ds:0x10097990,0x2
1000187a:	mov    DWORD PTR ds:0x10097978,0x1
10001884:	jne    0x100018b4
10001886:	cmp    DWORD PTR ds:0x10097984,0x5
1000188d:	jb     0x100018b4
1000188f:	push   0x11c
10001894:	push   0x0
10001896:	push   0x10097980
1000189b:	call   0x10016580
100018a0:	add    esp,0xc
100018a3:	push   0x10097980
100018a8:	mov    DWORD PTR ds:0x10097980,0x11c
100018b2:	call   esi
100018b4:	mov    eax,edi
100018b6:	pop    esi
100018b7:	ret    
100018b8:	mov    eax,edi
100018ba:	ret    
100018bb:	int3   
100018bc:	int3   
100018bd:	int3   
100018be:	int3   
100018bf:	int3   
100018c0:	push   ebp
100018c1:	mov    ebp,esp
100018c3:	and    esp,0xfffffff8
100018c6:	push   0xffffffff
100018c8:	push   0x1002a720
100018cd:	mov    eax,fs:0x0
100018d3:	push   eax
100018d4:	sub    esp,0x50
100018d7:	push   ebx
100018d8:	push   esi
100018d9:	push   edi
100018da:	mov    eax,ds:0x100951fc
100018df:	xor    eax,esp
100018e1:	push   eax
100018e2:	lea    eax,[esp+0x60]
100018e6:	mov    fs:0x0,eax
100018ec:	xor    ebx,ebx
100018ee:	push   0x4000
100018f3:	mov    DWORD PTR [esp+0x18],ebx
100018f7:	call   0x10015a45
100018fc:	mov    edi,eax
100018fe:	push   0x38
10001900:	mov    DWORD PTR [esp+0x70],ebx
10001904:	push   0x100826dc
10001909:	lea    eax,[esp+0x30]
1000190d:	push   0x2f
1000190f:	push   eax
10001910:	mov    DWORD PTR [esp+0x58],ebx
10001914:	mov    DWORD PTR [esp+0x5c],ebx
10001918:	mov    DWORD PTR [esp+0x60],ebx
1000191c:	mov    DWORD PTR [esp+0x3c],ebx
10001920:	mov    DWORD PTR [esp+0x38],ebx
10001924:	call   0x10026160
10001929:	add    esp,0x14
1000192c:	test   eax,eax
1000192e:	je     0x1000195d
10001930:	mov    esi,DWORD PTR [ebp+0x8]
10001933:	push   ebx
10001934:	mov    DWORD PTR [esp+0x1c],ebx
10001938:	mov    DWORD PTR [esi],ebx
1000193a:	call   0x10015b26
1000193f:	push   edi
10001940:	call   0x10015b26
10001945:	add    esp,0x8
10001948:	mov    eax,esi
1000194a:	mov    ecx,DWORD PTR [esp+0x60]
1000194e:	mov    DWORD PTR fs:0x0,ecx
10001955:	pop    ecx
10001956:	pop    edi
10001957:	pop    esi
10001958:	pop    ebx
10001959:	mov    esp,ebp
1000195b:	pop    ebp
1000195c:	ret    
1000195d:	mov    ecx,DWORD PTR [ebp+0x10]
10001960:	mov    edx,DWORD PTR [ebp+0xc]
10001963:	mov    DWORD PTR [esp+0x28],ecx
10001967:	mov    DWORD PTR [esp+0x24],edx
1000196b:	jmp    0x10001970
1000196d:	lea    ecx,[ecx+0x0]
10001970:	lea    ecx,[esp+0x24]
10001974:	lea    eax,[ebx+edi*1]
10001977:	push   0x4
10001979:	push   ecx
1000197a:	mov    DWORD PTR [esp+0x3c],0x4000
10001982:	mov    DWORD PTR [esp+0x38],eax
10001986:	call   0x10026340
1000198b:	mov    esi,eax
1000198d:	add    esp,0x8
10001990:	cmp    esi,0xfffffffc
10001993:	mov    DWORD PTR [esp+0x18],esi
10001997:	jl     0x100019ab
10001999:	cmp    esi,0xfffffffd
1000199c:	jle    0x10001a42
100019a2:	cmp    esi,0x2
100019a5:	je     0x10001a42
100019ab:	mov    ecx,DWORD PTR [esp+0x34]
100019af:	mov    eax,0x4000
100019b4:	sub    eax,ecx
100019b6:	add    ebx,eax
100019b8:	test   ecx,ecx
100019ba:	mov    DWORD PTR [esp+0x14],ebx
100019be:	jne    0x10001a29
100019c0:	mov    esi,edi
100019c2:	mov    DWORD PTR [esp+0x1c],ecx
100019c6:	mov    DWORD PTR [esp+0x20],esi
100019ca:	add    ebx,0x4000
100019d0:	push   ebx
100019d1:	mov    BYTE PTR [esp+0x6c],0x1
100019d6:	call   0x10015a45
100019db:	mov    edi,eax
100019dd:	add    esp,0x4
100019e0:	test   edi,edi
100019e2:	mov    DWORD PTR [esp+0x10],0x0
100019ea:	je     0x100019f6
100019ec:	push   0x0
100019ee:	call   0x10015b26
100019f3:	add    esp,0x4
100019f6:	mov    edx,DWORD PTR [esp+0x10]
100019fa:	push   edx
100019fb:	call   0x10015b26
10001a00:	mov    ebx,DWORD PTR [esp+0x18]
10001a04:	push   ebx
10001a05:	push   esi
10001a06:	push   edi
10001a07:	call   0x10016820
10001a0c:	push   esi
10001a0d:	mov    BYTE PTR [esp+0x7c],0x0
10001a12:	call   0x10015b26
10001a17:	add    esp,0x14
10001a1a:	cmp    DWORD PTR [esp+0x34],0x0
10001a1f:	je     0x10001970
10001a25:	mov    esi,DWORD PTR [esp+0x18]
10001a29:	lea    ecx,[esp+0x24]
10001a2d:	push   ecx
10001a2e:	call   0x10027930
10001a33:	add    esp,0x4
10001a36:	cmp    esi,0x1
10001a39:	jne    0x10001a82
10001a3b:	mov    edx,DWORD PTR [ebp+0x14]
10001a3e:	mov    DWORD PTR [edx],ebx
10001a40:	jmp    0x10001aa6
10001a42:	lea    eax,[esp+0x24]
10001a46:	push   eax
10001a47:	call   0x10027930
10001a4c:	mov    esi,DWORD PTR [ebp+0x8]
10001a4f:	push   0x0
10001a51:	mov    DWORD PTR [esp+0x28],0x0
10001a59:	mov    DWORD PTR [esi],0x0
10001a5f:	call   0x10015b26
10001a64:	push   edi
10001a65:	call   0x10015b26
10001a6a:	add    esp,0xc
10001a6d:	mov    eax,esi
10001a6f:	mov    ecx,DWORD PTR [esp+0x60]
10001a73:	mov    DWORD PTR fs:0x0,ecx
10001a7a:	pop    ecx
10001a7b:	pop    edi
10001a7c:	pop    esi
10001a7d:	pop    ebx
10001a7e:	mov    esp,ebp
10001a80:	pop    ebp
10001a81:	ret    
10001a82:	test   edi,edi
10001a84:	mov    DWORD PTR [esp+0x18],0x0
10001a8c:	je     0x10001a97
10001a8e:	push   edi
10001a8f:	call   0x10015b26
10001a94:	add    esp,0x4
10001a97:	mov    eax,DWORD PTR [esp+0x18]
10001a9b:	push   eax
10001a9c:	xor    edi,edi
10001a9e:	call   0x10015b26
10001aa3:	add    esp,0x4
10001aa6:	mov    esi,DWORD PTR [ebp+0x8]
10001aa9:	push   0x0
10001aab:	mov    DWORD PTR [esi],edi
10001aad:	call   0x10015b26
10001ab2:	add    esp,0x4
10001ab5:	mov    eax,esi
10001ab7:	mov    ecx,DWORD PTR [esp+0x60]
10001abb:	mov    DWORD PTR fs:0x0,ecx
10001ac2:	pop    ecx
10001ac3:	pop    edi
10001ac4:	pop    esi
10001ac5:	pop    ebx
10001ac6:	mov    esp,ebp
10001ac8:	pop    ebp
10001ac9:	ret    
10001aca:	int3   
10001acb:	int3   
10001acc:	int3   
10001acd:	int3   
10001ace:	int3   
10001acf:	int3   
10001ad0:	sub    esp,0x1c
10001ad3:	lea    eax,[esp+0x8]
10001ad7:	push   eax
10001ad8:	call   DWORD PTR ds:0x100340f8
10001ade:	lea    ecx,[esp]
10001ae1:	push   ecx
10001ae2:	lea    edx,[esp+0xc]
10001ae6:	push   edx
10001ae7:	call   DWORD PTR ds:0x100340e4
10001aed:	mov    edx,DWORD PTR [esp+0x4]
10001af1:	mov    eax,DWORD PTR [esp]
10001af4:	add    esp,0x1c
10001af7:	ret    
10001af8:	int3   
10001af9:	int3   
10001afa:	int3   
10001afb:	int3   
10001afc:	int3   
10001afd:	int3   
10001afe:	int3   
10001aff:	int3   
10001b00:	sub    esp,0x74
10001b03:	mov    eax,ds:0x100951fc
10001b08:	xor    eax,esp
10001b0a:	mov    DWORD PTR [esp+0x70],eax
10001b0e:	mov    eax,DWORD PTR [esp+0x78]
10001b12:	movzx  ecx,BYTE PTR [eax+0xf]
10001b16:	movzx  edx,BYTE PTR [eax+0xe]
10001b1a:	push   ecx
10001b1b:	movzx  ecx,BYTE PTR [eax+0xd]
10001b1f:	push   edx
10001b20:	movzx  edx,BYTE PTR [eax+0xc]
10001b24:	push   ecx
10001b25:	movzx  ecx,BYTE PTR [eax+0xb]
10001b29:	push   edx
10001b2a:	movzx  edx,BYTE PTR [eax+0xa]
10001b2e:	push   ecx
10001b2f:	movzx  ecx,BYTE PTR [eax+0x9]
10001b33:	push   edx
10001b34:	movzx  edx,BYTE PTR [eax+0x8]
10001b38:	push   ecx
10001b39:	movzx  ecx,WORD PTR [eax+0x6]
10001b3d:	push   edx
10001b3e:	movzx  edx,WORD PTR [eax+0x4]
10001b42:	mov    eax,DWORD PTR [eax]
10001b44:	push   ecx
10001b45:	push   edx
10001b46:	push   eax
10001b47:	push   0x100826fc
10001b4c:	push   0x32
10001b4e:	push   0x10082728
10001b53:	mov    DWORD PTR [esp+0x38],0x0
10001b5b:	call   0x10003340
10001b60:	add    esp,0xc
10001b63:	push   eax
10001b64:	lea    ecx,[esp+0x34]
10001b68:	push   ecx
10001b69:	call   0x10017493
10001b6e:	lea    eax,[esp+0x38]
10001b72:	mov    DWORD PTR [esi+0x18],0xf
10001b79:	mov    DWORD PTR [esi+0x14],0x0
10001b80:	add    esp,0x34
10001b83:	mov    BYTE PTR [esi+0x4],0x0
10001b87:	lea    edx,[eax+0x1]
10001b8a:	lea    ebx,[ebx+0x0]
10001b90:	mov    cl,BYTE PTR [eax]
10001b92:	add    eax,0x1
10001b95:	test   cl,cl
10001b97:	jne    0x10001b90
10001b99:	sub    eax,edx
10001b9b:	push   eax
10001b9c:	lea    edx,[esp+0x8]
10001ba0:	push   edx
10001ba1:	mov    ecx,esi
10001ba3:	call   0x10003900
10001ba8:	mov    ecx,DWORD PTR [esp+0x70]
10001bac:	xor    ecx,esp
10001bae:	mov    eax,esi
10001bb0:	call   0x10015b2b
10001bb5:	add    esp,0x74
10001bb8:	ret    
10001bb9:	int3   
10001bba:	int3   
10001bbb:	int3   
10001bbc:	int3   
10001bbd:	int3   
10001bbe:	int3   
10001bbf:	int3   
10001bc0:	push   0xffffffff
10001bc2:	push   0x1002afe1
10001bc7:	mov    eax,fs:0x0
10001bcd:	push   eax
10001bce:	sub    esp,0x48
10001bd1:	push   ebx
10001bd2:	push   esi
10001bd3:	push   edi
10001bd4:	mov    eax,ds:0x100951fc
10001bd9:	xor    eax,esp
10001bdb:	push   eax
10001bdc:	lea    eax,[esp+0x58]
10001be0:	mov    fs:0x0,eax
10001be6:	xor    ebx,ebx
10001be8:	mov    DWORD PTR [esp+0x60],ebx
10001bec:	mov    DWORD PTR [esp+0x10],ebx
10001bf0:	mov    eax,ds:0x10096c80
10001bf5:	mov    edx,DWORD PTR [eax+0xc]
10001bf8:	mov    ecx,0x10096c80
10001bfd:	call   edx
10001bff:	mov    edi,DWORD PTR [esp+0x68]
10001c03:	add    eax,0x10
10001c06:	mov    DWORD PTR [edi],eax
10001c08:	mov    DWORD PTR [esp+0x60],ebx
10001c0c:	mov    ecx,0x1
10001c11:	sub    ecx,DWORD PTR [eax-0x4]
10001c14:	mov    eax,DWORD PTR [eax-0x8]
10001c17:	sub    eax,0x800
10001c1c:	or     eax,ecx
10001c1e:	mov    DWORD PTR [esp+0x10],0x1
10001c26:	jge    0x10001c34
10001c28:	push   0x800
10001c2d:	mov    ecx,edi
10001c2f:	call   0x10004940
10001c34:	mov    eax,DWORD PTR [edi]
10001c36:	push   0x800
10001c3b:	push   eax
10001c3c:	call   DWORD PTR ds:0x100340d8
10001c42:	test   eax,eax
10001c44:	jne    0x10001cac
10001c46:	push   0x10082768
10001c4b:	push   0x1c
10001c4d:	push   0x1008278c
10001c52:	call   0x10003340
10001c57:	mov    ecx,eax
10001c59:	add    esp,0xc
10001c5c:	mov    DWORD PTR [esp+0x2c],0xf
10001c64:	mov    DWORD PTR [esp+0x28],ebx
10001c68:	mov    BYTE PTR [esp+0x18],bl
10001c6c:	lea    esi,[ecx+0x1]
10001c6f:	nop
10001c70:	mov    dl,BYTE PTR [ecx]
10001c72:	add    ecx,0x1
10001c75:	cmp    dl,bl
10001c77:	jne    0x10001c70
10001c79:	sub    ecx,esi
10001c7b:	push   ecx
10001c7c:	push   eax
10001c7d:	lea    ecx,[esp+0x1c]
10001c81:	call   0x10003900
10001c86:	lea    eax,[esp+0x14]
10001c8a:	push   eax
10001c8b:	lea    ecx,[esp+0x34]
10001c8f:	push   ecx
10001c90:	mov    DWORD PTR [esp+0x68],0x1
10001c98:	call   0x100014d0
10001c9d:	push   0x10085c78
10001ca2:	lea    edx,[esp+0x34]
10001ca6:	push   edx
10001ca7:	call   0x1001621e
10001cac:	mov    edx,DWORD PTR [edi]
10001cae:	cmp    edx,ebx
10001cb0:	jne    0x10001cb6
10001cb2:	xor    eax,eax
10001cb4:	jmp    0x10001cd1
10001cb6:	mov    eax,edx
10001cb8:	lea    esi,[eax+0x2]
10001cbb:	jmp    0x10001cc0
10001cbd:	lea    ecx,[ecx+0x0]
10001cc0:	mov    cx,WORD PTR [eax]
10001cc3:	add    eax,0x2
10001cc6:	cmp    cx,bx
10001cc9:	jne    0x10001cc0
10001ccb:	sub    eax,esi
10001ccd:	sar    eax,1
10001ccf:	js     0x10001d15
10001cd1:	cmp    eax,DWORD PTR [edx-0x8]
10001cd4:	jg     0x10001d15
10001cd6:	mov    DWORD PTR [edx-0xc],eax
10001cd9:	mov    ecx,DWORD PTR [edi]
10001cdb:	mov    WORD PTR [ecx+eax*2],bx
10001cdf:	mov    ecx,DWORD PTR [edi]
10001ce1:	mov    edx,DWORD PTR [ecx-0xc]
10001ce4:	lea    eax,[edx-0x1]
10001ce7:	cmp    eax,ebx
10001ce9:	jl     0x10001d15
10001ceb:	cmp    eax,edx
10001ced:	jg     0x10001d15
10001cef:	movzx  eax,WORD PTR [ecx+eax*2]
10001cf3:	cmp    ax,0x5c
10001cf7:	je     0x10001d00
10001cf9:	push   0x5c
10001cfb:	call   0x10002f10
10001d00:	mov    eax,edi
10001d02:	mov    ecx,DWORD PTR [esp+0x58]
10001d06:	mov    DWORD PTR fs:0x0,ecx
10001d0d:	pop    ecx
10001d0e:	pop    edi
10001d0f:	pop    esi
10001d10:	pop    ebx
10001d11:	add    esp,0x54
10001d14:	ret    
10001d15:	push   0x80070057
10001d1a:	call   0x10001090
10001d1f:	int3   
10001d20:	push   0xffffffff
10001d22:	push   0x1002b461
10001d27:	mov    eax,fs:0x0
10001d2d:	push   eax
10001d2e:	sub    esp,0x50
10001d31:	push   ebx
10001d32:	push   ebp
10001d33:	push   esi
10001d34:	push   edi
10001d35:	mov    eax,ds:0x100951fc
10001d3a:	xor    eax,esp
10001d3c:	push   eax
10001d3d:	lea    eax,[esp+0x64]
10001d41:	mov    fs:0x0,eax
10001d47:	mov    esi,DWORD PTR [esp+0x74]
10001d4b:	xor    ebx,ebx
10001d4d:	push   ebx
10001d4e:	mov    DWORD PTR [esp+0x70],ebx
10001d52:	push   esi
10001d53:	mov    DWORD PTR [esp+0x20],ebx
10001d57:	call   0x10001bc0
10001d5c:	add    esp,0x8
10001d5f:	mov    DWORD PTR [esp+0x6c],ebx
10001d63:	mov    eax,DWORD PTR [esi]
10001d65:	mov    ebp,0x1
10001d6a:	sub    eax,0x10
10001d6d:	cmp    DWORD PTR [eax+0xc],ebp
10001d70:	mov    DWORD PTR [esp+0x18],ebp
10001d74:	jle    0x10001d81
10001d76:	mov    eax,DWORD PTR [eax+0x4]
10001d79:	push   eax
10001d7a:	mov    ecx,esi
10001d7c:	call   0x10003d30
10001d81:	mov    eax,DWORD PTR [esi]
10001d83:	push   0x5c
10001d85:	push   eax
10001d86:	call   0x10017015
10001d8b:	mov    edi,eax
10001d8d:	add    esp,0x8
10001d90:	cmp    edi,ebx
10001d92:	jne    0x10001df7
10001d94:	push   0x100827ac
10001d99:	push   0x18
10001d9b:	push   0x100827dc
10001da0:	call   0x10003340
10001da5:	mov    ecx,eax
10001da7:	add    esp,0xc
10001daa:	mov    DWORD PTR [esp+0x34],0xf
10001db2:	mov    DWORD PTR [esp+0x30],ebx
10001db6:	mov    BYTE PTR [esp+0x20],bl
10001dba:	lea    esi,[ecx+0x1]
10001dbd:	lea    ecx,[ecx+0x0]
10001dc0:	mov    dl,BYTE PTR [ecx]
10001dc2:	add    ecx,ebp
10001dc4:	cmp    dl,bl
10001dc6:	jne    0x10001dc0
10001dc8:	sub    ecx,esi
10001dca:	push   ecx
10001dcb:	push   eax
10001dcc:	lea    ecx,[esp+0x24]
10001dd0:	call   0x10003900
10001dd5:	lea    ecx,[esp+0x1c]
10001dd9:	push   ecx
10001dda:	lea    edx,[esp+0x3c]
10001dde:	push   edx
10001ddf:	mov    DWORD PTR [esp+0x74],ebp
10001de3:	call   0x100014d0
10001de8:	push   0x10085c78
10001ded:	lea    eax,[esp+0x3c]
10001df1:	push   eax
10001df2:	call   0x1001621e
10001df7:	mov    eax,DWORD PTR [esi]
10001df9:	sub    eax,0x10
10001dfc:	cmp    DWORD PTR [eax+0xc],ebp
10001dff:	jle    0x10001e0c
10001e01:	mov    ecx,DWORD PTR [eax+0x4]
10001e04:	push   ecx
10001e05:	mov    ecx,esi
10001e07:	call   0x10003d30
10001e0c:	mov    ecx,DWORD PTR [esi]
10001e0e:	sub    edi,ecx
10001e10:	sar    edi,1
10001e12:	add    edi,ebp
10001e14:	cmp    ecx,ebx
10001e16:	jne    0x10001e1c
10001e18:	xor    eax,eax
10001e1a:	jmp    0x10001e37
10001e1c:	mov    eax,ecx
10001e1e:	lea    ebp,[eax+0x2]
10001e21:	mov    dx,WORD PTR [eax]
10001e24:	add    eax,0x2
10001e27:	cmp    dx,bx
10001e2a:	jne    0x10001e21
10001e2c:	sub    eax,ebp
10001e2e:	sar    eax,1
10001e30:	js     0x10001e8a
10001e32:	mov    ebp,0x1
10001e37:	cmp    eax,DWORD PTR [ecx-0x8]
10001e3a:	jg     0x10001e8a
10001e3c:	mov    DWORD PTR [ecx-0xc],eax
10001e3f:	mov    edx,DWORD PTR [esi]
10001e41:	mov    WORD PTR [edx+eax*2],bx
10001e45:	mov    eax,DWORD PTR [esi]
10001e47:	sub    eax,0x10
10001e4a:	mov    ecx,ebp
10001e4c:	sub    ecx,DWORD PTR [eax+0xc]
10001e4f:	mov    eax,DWORD PTR [eax+0x8]
10001e52:	sub    eax,edi
10001e54:	or     eax,ecx
10001e56:	jge    0x10001e60
10001e58:	push   edi
10001e59:	mov    ecx,esi
10001e5b:	call   0x10004940
10001e60:	cmp    edi,ebx
10001e62:	jl     0x10001e8a
10001e64:	mov    eax,DWORD PTR [esi]
10001e66:	cmp    edi,DWORD PTR [eax-0x8]
10001e69:	jg     0x10001e8a
10001e6b:	mov    DWORD PTR [eax-0xc],edi
10001e6e:	mov    eax,DWORD PTR [esi]
10001e70:	mov    WORD PTR [eax+edi*2],bx
10001e74:	mov    eax,esi
10001e76:	mov    ecx,DWORD PTR [esp+0x64]
10001e7a:	mov    DWORD PTR fs:0x0,ecx
10001e81:	pop    ecx
10001e82:	pop    edi
10001e83:	pop    esi
10001e84:	pop    ebp
10001e85:	pop    ebx
10001e86:	add    esp,0x5c
10001e89:	ret    
10001e8a:	push   0x80070057
10001e8f:	call   0x10001090
10001e94:	int3   
10001e95:	int3   
10001e96:	int3   
10001e97:	int3   
10001e98:	int3   
10001e99:	int3   
10001e9a:	int3   
10001e9b:	int3   
10001e9c:	int3   
10001e9d:	int3   
10001e9e:	int3   
10001e9f:	int3   
10001ea0:	push   ebp
10001ea1:	mov    ebp,esp
10001ea3:	push   0xffffffff
10001ea5:	push   0x1002b5bf
10001eaa:	mov    eax,fs:0x0
10001eb0:	push   eax
10001eb1:	sub    esp,0x134
10001eb7:	mov    eax,ds:0x100951fc
10001ebc:	xor    eax,ebp
10001ebe:	mov    DWORD PTR [ebp-0x10],eax
10001ec1:	push   ebx
10001ec2:	push   esi
10001ec3:	push   edi
10001ec4:	push   eax
10001ec5:	lea    eax,[ebp-0xc]
10001ec8:	mov    fs:0x0,eax
10001ece:	call   DWORD PTR ds:0x1009517c
10001ed4:	mov    ebx,eax
10001ed6:	lea    eax,[ebp-0x7c]
10001ed9:	push   eax
10001eda:	call   0x10001d20
10001edf:	add    esp,0x4
10001ee2:	push   0x0
10001ee4:	push   0x0
10001ee6:	lea    ecx,[ebp-0x88]
10001eec:	push   ecx
10001eed:	lea    edx,[ebp-0x84]
10001ef3:	push   edx
10001ef4:	lea    eax,[ebp-0x80]
10001ef7:	push   eax
10001ef8:	push   0x0
10001efa:	mov    DWORD PTR [ebp-0x4],0x0
10001f01:	mov    ecx,DWORD PTR [ebp-0x7c]
10001f04:	push   0x0
10001f06:	push   ecx
10001f07:	call   DWORD PTR ds:0x100340e0
10001f0d:	test   eax,eax
10001f0f:	jne    0x1000203f
10001f15:	call   DWORD PTR ds:0x1003407c
10001f1b:	push   0xa
10001f1d:	lea    edx,[ebp-0x78]
10001f20:	push   edx
10001f21:	push   eax
10001f22:	call   0x10017380
10001f27:	mov    eax,DWORD PTR [ebp-0x7c]
10001f2a:	add    esp,0xc
10001f2d:	test   eax,eax
10001f2f:	mov    edi,eax
10001f31:	je     0x10001f5f
10001f33:	push   eax
10001f34:	call   DWORD PTR ds:0x10034028
10001f3a:	add    eax,0x1
10001f3d:	cmp    eax,0x3fffffff
10001f42:	jle    0x10001f48
10001f44:	xor    edi,edi
10001f46:	jmp    0x10001f5f
10001f48:	lea    esi,[eax+eax*1]
10001f4b:	mov    eax,esi
10001f4d:	call   0x10015b40
10001f52:	mov    eax,esp
10001f54:	push   ebx
10001f55:	push   esi
10001f56:	push   edi
10001f57:	push   eax
10001f58:	call   0x10001050
10001f5d:	mov    edi,eax
10001f5f:	push   0x10082828
10001f64:	push   0x21
10001f66:	push   0x1008285c
10001f6b:	call   0x10003340
10001f70:	mov    ecx,eax
10001f72:	add    esp,0xc
10001f75:	mov    DWORD PTR [ebp-0x8c],0xf
10001f7f:	mov    DWORD PTR [ebp-0x90],0x0
10001f89:	mov    BYTE PTR [ebp-0xa0],0x0
10001f90:	lea    esi,[ecx+0x1]
10001f93:	mov    dl,BYTE PTR [ecx]
10001f95:	add    ecx,0x1
10001f98:	test   dl,dl
10001f9a:	jne    0x10001f93
10001f9c:	sub    ecx,esi
10001f9e:	push   ecx
10001f9f:	push   eax
10001fa0:	lea    ecx,[ebp-0xa4]
10001fa6:	call   0x10003900
10001fab:	lea    eax,[ebp-0xa4]
10001fb1:	push   eax
10001fb2:	lea    esi,[ebp-0xe8]
10001fb8:	mov    BYTE PTR [ebp-0x4],0x1
10001fbc:	call   0x10006b00
10001fc1:	add    esp,0x4
10001fc4:	mov    esi,eax
10001fc6:	push   0x100827fc
10001fcb:	push   0x7
10001fcd:	push   0x10082820
10001fd2:	mov    BYTE PTR [ebp-0x4],0x2
10001fd6:	call   0x10003340
10001fdb:	add    esp,0xc
10001fde:	push   esi
10001fdf:	mov    edi,eax
10001fe1:	lea    esi,[ebp-0x104]
10001fe7:	call   0x10006b00
10001fec:	add    esp,0x4
10001fef:	push   eax
10001ff0:	lea    edi,[ebp-0x78]
10001ff3:	lea    esi,[ebp-0x13c]
10001ff9:	mov    BYTE PTR [ebp-0x4],0x3
10001ffd:	call   0x10006b00
10002002:	add    esp,0x4
10002005:	push   eax
10002006:	mov    edi,0x100827f8
1000200b:	lea    esi,[ebp-0x120]
10002011:	mov    BYTE PTR [ebp-0x4],0x4
10002015:	call   0x10006b00
1000201a:	add    esp,0x4
1000201d:	push   eax
1000201e:	lea    ecx,[ebp-0xcc]
10002024:	push   ecx
10002025:	mov    BYTE PTR [ebp-0x4],0x5
10002029:	call   0x100014d0
1000202e:	push   0x10085c78
10002033:	lea    edx,[ebp-0xcc]
10002039:	push   edx
1000203a:	call   0x1001621e
1000203f:	mov    esi,DWORD PTR [ebp-0x80]
10002042:	mov    DWORD PTR [ebp-0x4],0xffffffff
10002049:	mov    eax,DWORD PTR [ebp-0x7c]
1000204c:	add    eax,0xfffffff0
1000204f:	lea    ecx,[eax+0xc]
10002052:	or     edx,0xffffffff
10002055:	lock xadd DWORD PTR [ecx],edx
10002059:	dec    edx
1000205a:	test   edx,edx
1000205c:	jg     0x10002068
1000205e:	mov    ecx,DWORD PTR [eax]
10002060:	mov    edx,DWORD PTR [ecx]
10002062:	push   eax
10002063:	mov    eax,DWORD PTR [edx+0x4]
10002066:	call   eax
10002068:	mov    eax,esi
1000206a:	lea    esp,[ebp-0x150]
10002070:	mov    ecx,DWORD PTR [ebp-0xc]
10002073:	mov    DWORD PTR fs:0x0,ecx
1000207a:	pop    ecx
1000207b:	pop    edi
1000207c:	pop    esi
1000207d:	pop    ebx
1000207e:	mov    ecx,DWORD PTR [ebp-0x10]
10002081:	xor    ecx,ebp
10002083:	call   0x10015b2b
10002088:	mov    esp,ebp
1000208a:	pop    ebp
1000208b:	ret    
1000208c:	int3   
1000208d:	int3   
1000208e:	int3   
1000208f:	int3   
10002090:	push   ebp
10002091:	mov    ebp,esp
10002093:	and    esp,0xfffffff8
10002096:	push   ecx
10002097:	push   edi
10002098:	mov    DWORD PTR [esp+0x4],0x0
100020a0:	call   0x10001ea0
100020a5:	mov    ecx,DWORD PTR [ebp+0xc]
100020a8:	mov    edi,DWORD PTR [ebp+0x8]
100020ab:	push   ecx
100020ac:	mov    ecx,DWORD PTR [ebp+0x10]
100020af:	mov    edx,eax
100020b1:	call   0x100022d0
100020b6:	add    esp,0x4
100020b9:	mov    eax,edi
100020bb:	pop    edi
100020bc:	mov    esp,ebp
100020be:	pop    ebp
100020bf:	ret    
100020c0:	sub    esp,0x8
100020c3:	mov    DWORD PTR [esp],0x0
100020ca:	mov    DWORD PTR [esp+0x4],0x0
100020d2:	call   DWORD PTR ds:0x1009517c
100020d8:	mov    eax,DWORD PTR [esp+0x10]
100020dc:	mov    eax,DWORD PTR [eax]
100020de:	lea    ecx,[esp+0x4]
100020e2:	push   ecx
100020e3:	push   0x0
100020e5:	lea    edx,[esp+0x8]
100020e9:	push   edx
100020ea:	push   0x0
100020ec:	push   0x0
100020ee:	push   0x4
100020f0:	push   0x1
100020f2:	push   eax
100020f3:	call   DWORD PTR ds:0x10034008
100020f9:	test   eax,eax
100020fb:	jne    0x10002118
100020fd:	mov    ecx,DWORD PTR [esp+0xc]
10002101:	mov    edx,DWORD PTR [ecx]
10002103:	push   eax
10002104:	mov    eax,DWORD PTR [esp+0x4]
10002108:	push   eax
10002109:	push   0x0
1000210b:	push   0x0
1000210d:	push   0x4
1000210f:	push   0x1
10002111:	push   edx
10002112:	call   DWORD PTR ds:0x10034010
10002118:	add    esp,0x8
1000211b:	ret    
1000211c:	int3   
1000211d:	int3   
1000211e:	int3   
1000211f:	int3   
10002120:	mov    eax,0x10000000
10002125:	ret    
10002126:	int3   
10002127:	int3   
10002128:	int3   
10002129:	int3   
1000212a:	int3   
1000212b:	int3   
1000212c:	int3   
1000212d:	int3   
1000212e:	int3   
1000212f:	int3   
10002130:	push   ecx
10002131:	mov    eax,DWORD PTR [esp+0xc]
10002135:	push   esi
10002136:	mov    esi,DWORD PTR [esp+0xc]
1000213a:	push   eax
1000213b:	push   esi
1000213c:	mov    DWORD PTR [esp+0xc],0x0
10002144:	call   0x10002160
10002149:	add    esp,0x8
1000214c:	mov    eax,esi
1000214e:	pop    esi
1000214f:	pop    ecx
10002150:	ret    
10002151:	int3   
10002152:	int3   
10002153:	int3   
10002154:	int3   
10002155:	int3   
10002156:	int3   
10002157:	int3   
10002158:	int3   
10002159:	int3   
1000215a:	int3   
1000215b:	int3   
1000215c:	int3   
1000215d:	int3   
1000215e:	int3   
1000215f:	int3   
10002160:	push   0xffffffff
10002162:	push   0x1002ab38
10002167:	mov    eax,fs:0x0
1000216d:	push   eax
1000216e:	push   ecx
1000216f:	push   ebp
10002170:	push   esi
10002171:	mov    eax,ds:0x100951fc
10002176:	xor    eax,esp
10002178:	push   eax
10002179:	lea    eax,[esp+0x10]
1000217d:	mov    fs:0x0,eax
10002183:	mov    ebp,DWORD PTR [esp+0x20]
10002187:	mov    DWORD PTR [esp+0xc],0x0
1000218f:	mov    eax,ds:0x10096c80
10002194:	mov    edx,DWORD PTR [eax+0xc]
10002197:	mov    ecx,0x10096c80
1000219c:	call   edx
1000219e:	lea    esi,[eax+0x10]
100021a1:	mov    DWORD PTR [esp+0xc],esi
100021a5:	mov    DWORD PTR [esp+0x18],0x0
100021ad:	mov    eax,DWORD PTR [esi-0x8]
100021b0:	mov    ecx,0x1
100021b5:	sub    ecx,DWORD PTR [esi-0x4]
100021b8:	sub    eax,0x104
100021bd:	or     eax,ecx
100021bf:	jge    0x100021d3
100021c1:	push   0x104
100021c6:	lea    ecx,[esp+0x10]
100021ca:	call   0x10004940
100021cf:	mov    esi,DWORD PTR [esp+0xc]
100021d3:	cmp    DWORD PTR [esi-0x8],0x104
100021da:	jge    0x100021e6
100021dc:	push   0x80070057
100021e1:	call   0x10001090
100021e6:	push   0x104
100021eb:	push   esi
100021ec:	mov    DWORD PTR [esi-0xc],0x104
100021f3:	push   0x10000000
100021f8:	mov    WORD PTR [esi+0x208],0x0
10002201:	call   DWORD PTR ds:0x100340d4
10002207:	mov    eax,esi
10002209:	lea    edx,[eax+0x2]
1000220c:	lea    esp,[esp+0x0]
10002210:	mov    cx,WORD PTR [eax]
10002213:	add    eax,0x2
10002216:	test   cx,cx
10002219:	jne    0x10002210
1000221b:	sub    eax,edx
1000221d:	sar    eax,1
1000221f:	js     0x100021dc
10002221:	cmp    eax,DWORD PTR [esi-0x8]
10002224:	jg     0x100021dc
10002226:	cmp    BYTE PTR [esp+0x24],cl
1000222a:	mov    DWORD PTR [esi-0xc],eax
1000222d:	mov    WORD PTR [esi+eax*2],cx
10002231:	je     0x10002261
10002233:	add    esi,0xfffffff0
10002236:	push   esi
10002237:	call   0x10004990
1000223c:	add    eax,0x10
1000223f:	mov    DWORD PTR [ebp+0x0],eax
10002242:	add    esp,0x4
10002245:	mov    DWORD PTR [esp+0x18],0xffffffff
1000224d:	lea    eax,[esi+0xc]
10002250:	or     ecx,0xffffffff
10002253:	lock xadd DWORD PTR [eax],ecx
10002257:	dec    ecx
10002258:	test   ecx,ecx
1000225a:	jg     0x100022b6
1000225c:	mov    ecx,DWORD PTR [esi]
1000225e:	push   esi
1000225f:	jmp    0x100022af
10002261:	push   0x5c
10002263:	push   esi
10002264:	call   0x100172f4
10002269:	add    esp,0x8
1000226c:	test   eax,eax
1000226e:	je     0x1000227b
10002270:	sub    eax,esi
10002272:	sar    eax,1
10002274:	mov    ecx,eax
10002276:	cmp    ecx,0xffffffff
10002279:	jne    0x1000227f
1000227b:	xor    ecx,ecx
1000227d:	jmp    0x10002282
1000227f:	add    ecx,0x1
10002282:	mov    eax,DWORD PTR [esi-0xc]
10002285:	sub    eax,ecx
10002287:	push   eax
10002288:	push   ebp
10002289:	lea    ecx,[esp+0x14]
1000228d:	call   0x10002fa0
10002292:	lea    eax,[esi-0x10]
10002295:	mov    DWORD PTR [esp+0x18],0xffffffff
1000229d:	lea    ecx,[eax+0xc]
100022a0:	or     edx,0xffffffff
100022a3:	lock xadd DWORD PTR [ecx],edx
100022a7:	dec    edx
100022a8:	test   edx,edx
100022aa:	jg     0x100022b6
100022ac:	mov    ecx,DWORD PTR [eax]
100022ae:	push   eax
100022af:	mov    edx,DWORD PTR [ecx]
100022b1:	mov    eax,DWORD PTR [edx+0x4]
100022b4:	call   eax
100022b6:	mov    eax,ebp
100022b8:	mov    ecx,DWORD PTR [esp+0x10]
100022bc:	mov    DWORD PTR fs:0x0,ecx
100022c3:	pop    ecx
100022c4:	pop    esi
100022c5:	pop    ebp
100022c6:	add    esp,0x10
100022c9:	ret    
100022ca:	int3   
100022cb:	int3   
100022cc:	int3   
100022cd:	int3   
100022ce:	int3   
100022cf:	int3   
100022d0:	push   ebp
100022d1:	mov    ebp,esp
100022d3:	push   0xffffffff
100022d5:	push   0x1002b40f
100022da:	mov    eax,fs:0x0
100022e0:	push   eax
100022e1:	sub    esp,0xa14
100022e7:	mov    eax,ds:0x100951fc
100022ec:	xor    eax,ebp
100022ee:	mov    DWORD PTR [ebp-0x14],eax
100022f1:	push   ebx
100022f2:	push   esi
100022f3:	push   eax
100022f4:	lea    eax,[ebp-0xc]
100022f7:	mov    fs:0x0,eax
100022fd:	mov    esi,ecx
100022ff:	mov    ecx,DWORD PTR [ebp+0x8]
10002302:	xor    eax,eax
10002304:	mov    DWORD PTR [ebp-0x4],eax
10002307:	mov    DWORD PTR [ebp-0x30],eax
1000230a:	lea    eax,[esi+esi*4]
1000230d:	lea    eax,[ecx+eax*2]
10002310:	add    edx,eax
10002312:	lea    eax,[ebp-0xa1c]
10002318:	mov    DWORD PTR [ebp-0x34],edi
1000231b:	call   0x10001770
10002320:	mov    ebx,0x1
10002325:	test   BYTE PTR ds:0x10097ab4,bl
1000232b:	jne    0x100023ed
10002331:	or     DWORD PTR ds:0x10097ab4,ebx
10002337:	push   0x10082948
1000233c:	push   0x3
1000233e:	push   0x10082940
10002343:	mov    DWORD PTR [ebp-0x4],ebx
10002346:	call   0x10003540
1000234b:	add    esp,0xc
1000234e:	push   0x10082914
10002353:	push   0x3
10002355:	push   0x1008290c
1000235a:	mov    ds:0x1009792c,eax
1000235f:	mov    DWORD PTR ds:0x10097930,ebx
10002365:	call   0x10003540
1000236a:	add    esp,0xc
1000236d:	push   0x100828dc
10002372:	push   0x0
10002374:	push   0x100826d8
10002379:	mov    ds:0x10097934,eax
1000237e:	mov    DWORD PTR ds:0x10097938,ebx
10002384:	call   0x10003540
10002389:	add    esp,0xc
1000238c:	push   0x100828b4
10002391:	push   0x0
10002393:	push   0x100826d8
10002398:	mov    ds:0x1009793c,eax
1000239d:	mov    DWORD PTR ds:0x10097940,ebx
100023a3:	call   0x10003540
100023a8:	add    esp,0xc
100023ab:	push   0x1008288c
100023b0:	push   0x4
100023b2:	push   0x10082880
100023b7:	mov    ds:0x10097944,eax
100023bc:	mov    DWORD PTR ds:0x10097948,ebx
100023c2:	call   0x10003540
100023c7:	add    esp,0xc
100023ca:	mov    ds:0x1009794c,eax
100023cf:	mov    DWORD PTR ds:0x10097950,ebx
100023d5:	mov    DWORD PTR ds:0x10097954,0x100826d8
100023df:	mov    DWORD PTR ds:0x10097958,0x2
100023e9:	mov    BYTE PTR [ebp-0x4],0x0
100023ed:	lea    ecx,[esi-0x1]
100023f0:	cmp    ecx,0x5
100023f3:	ja     0x1000240e
100023f5:	mov    eax,DWORD PTR [ebp+0x8]
100023f8:	lea    edx,[esi+esi*2]
100023fb:	lea    ecx,[eax+edx*2]
100023fe:	mov    eax,DWORD PTR [ecx*8+0x100978fc]
10002405:	mov    esi,DWORD PTR [ecx*8+0x10097900]
1000240c:	jmp    0x10002415
1000240e:	mov    eax,0x100826d8
10002413:	xor    esi,esi
10002415:	push   eax
10002416:	mov    ecx,edi
10002418:	call   0x10002d70
1000241d:	xor    ecx,ecx
1000241f:	mov    eax,esi
10002421:	sub    eax,ebx
10002423:	mov    DWORD PTR [ebp-0x4],ecx
10002426:	mov    DWORD PTR [ebp-0x30],ebx
10002429:	je     0x1000254d
1000242f:	sub    eax,ebx
10002431:	jne    0x1000252a
10002437:	mov    DWORD PTR [ebp-0x20],eax
1000243a:	mov    DWORD PTR [ebp-0x1c],eax
1000243d:	mov    DWORD PTR [ebp-0x18],eax
10002440:	or     ebx,0xffffffff
10002443:	lea    eax,[ebp-0xa1c]
10002449:	call   0x100017b0
1000244e:	mov    DWORD PTR [ebp-0x24],eax
10002451:	or     ebx,0xffffffff
10002454:	lea    eax,[ebp-0xa1c]
1000245a:	call   0x100017b0
1000245f:	mov    DWORD PTR [ebp-0x20],eax
10002462:	or     ebx,0xffffffff
10002465:	lea    eax,[ebp-0xa1c]
1000246b:	call   0x100017b0
10002470:	mov    DWORD PTR [ebp-0x1c],eax
10002473:	or     ebx,0xffffffff
10002476:	lea    eax,[ebp-0xa1c]
1000247c:	call   0x100017b0
10002481:	mov    DWORD PTR [ebp-0x18],eax
10002484:	call   DWORD PTR ds:0x1009517c
1000248a:	lea    ecx,[ebp-0x24]
1000248d:	push   ecx
1000248e:	lea    esi,[ebp-0x50]
10002491:	mov    DWORD PTR [ebp-0x28],eax
10002494:	call   0x10001b00
10002499:	add    esp,0x4
1000249c:	mov    DWORD PTR [ebp-0x4],0x2
100024a3:	cmp    DWORD PTR [eax+0x18],0x10
100024a7:	jb     0x100024ae
100024a9:	mov    ebx,DWORD PTR [eax+0x4]
100024ac:	jmp    0x100024b1
100024ae:	lea    ebx,[eax+0x4]
100024b1:	test   ebx,ebx
100024b3:	jne    0x100024bb
100024b5:	xor    eax,eax
100024b7:	xor    ecx,ecx
100024b9:	jmp    0x1000250f
100024bb:	push   ebx
100024bc:	call   DWORD PTR ds:0x10034038
100024c2:	mov    esi,eax
100024c4:	add    esi,0x1
100024c7:	cmp    esi,0x3fffffff
100024cd:	jle    0x100024d5
100024cf:	xor    eax,eax
100024d1:	xor    ecx,ecx
100024d3:	jmp    0x1000250f
100024d5:	lea    eax,[esi+esi*1]
100024d8:	call   0x10015b40
100024dd:	mov    edx,DWORD PTR [ebp-0x28]
100024e0:	mov    eax,esp
100024e2:	push   edx
100024e3:	push   esi
100024e4:	push   ebx
100024e5:	push   eax
100024e6:	call   0x10001010
100024eb:	test   eax,eax
100024ed:	jne    0x100024f3
100024ef:	xor    ecx,ecx
100024f1:	jmp    0x1000250f
100024f3:	mov    ecx,eax
100024f5:	lea    esi,[ecx+0x2]
100024f8:	jmp    0x10002500
100024fa:	lea    ebx,[ebx+0x0]
10002500:	mov    dx,WORD PTR [ecx]
10002503:	add    ecx,0x2
10002506:	test   dx,dx
10002509:	jne    0x10002500
1000250b:	sub    ecx,esi
1000250d:	sar    ecx,1
1000250f:	push   ecx
10002510:	push   eax
10002511:	mov    ecx,edi
10002513:	call   0x10003be0
10002518:	cmp    DWORD PTR [ebp-0x38],0x10
1000251c:	jb     0x1000252a
1000251e:	mov    eax,DWORD PTR [ebp-0x4c]
10002521:	push   eax
10002522:	call   0x10015b26
10002527:	add    esp,0x4
1000252a:	mov    eax,edi
1000252c:	lea    esp,[ebp-0xa2c]
10002532:	mov    ecx,DWORD PTR [ebp-0xc]
10002535:	mov    DWORD PTR fs:0x0,ecx
1000253c:	pop    ecx
1000253d:	pop    esi
1000253e:	pop    ebx
1000253f:	mov    ecx,DWORD PTR [ebp-0x14]
10002542:	xor    ecx,ebp
10002544:	call   0x10015b2b
10002549:	mov    esp,ebp
1000254b:	pop    ebp
1000254c:	ret    
1000254d:	mov    DWORD PTR [ebp-0x28],ecx
10002550:	mov    ebx,0x23
10002555:	lea    eax,[ebp-0xa1c]
1000255b:	call   0x100017b0
10002560:	cmp    eax,0xa
10002563:	jae    0x10002570
10002565:	add    eax,0x30
10002568:	movzx  ecx,ax
1000256b:	mov    DWORD PTR [ebp-0x2c],ecx
1000256e:	jmp    0x10002579
10002570:	add    eax,0x57
10002573:	movzx  edx,ax
10002576:	mov    DWORD PTR [ebp-0x2c],edx
10002579:	mov    eax,DWORD PTR [edi]
1000257b:	mov    ebx,DWORD PTR [eax-0xc]
1000257e:	mov    ecx,0x1
10002583:	sub    ecx,DWORD PTR [eax-0x4]
10002586:	mov    eax,DWORD PTR [eax-0x8]
10002589:	lea    esi,[ebx+0x1]
1000258c:	sub    eax,esi
1000258e:	or     eax,ecx
10002590:	jge    0x1000259a
10002592:	push   esi
10002593:	mov    ecx,edi
10002595:	call   0x10004940
1000259a:	test   esi,esi
1000259c:	mov    eax,DWORD PTR [edi]
1000259e:	mov    cx,WORD PTR [ebp-0x2c]
100025a2:	mov    WORD PTR [eax+ebx*2],cx
100025a6:	jl     0x100025cd
100025a8:	mov    eax,DWORD PTR [edi]
100025aa:	cmp    esi,DWORD PTR [eax-0x8]
100025ad:	jg     0x100025cd
100025af:	mov    DWORD PTR [eax-0xc],esi
100025b2:	mov    eax,DWORD PTR [ebp-0x28]
100025b5:	mov    edx,DWORD PTR [edi]
100025b7:	add    eax,0x1
100025ba:	cmp    eax,0x5
100025bd:	mov    WORD PTR [edx+esi*2],0x0
100025c3:	mov    DWORD PTR [ebp-0x28],eax
100025c6:	jl     0x10002550
100025c8:	jmp    0x1000252a
100025cd:	push   0x80070057
100025d2:	call   0x10001090
100025d7:	int3   
100025d8:	int3   
100025d9:	int3   
100025da:	int3   
100025db:	int3   
100025dc:	int3   
100025dd:	int3   
100025de:	int3   
100025df:	int3   
100025e0:	push   0xffffffff
100025e2:	push   0x1002b558
100025e7:	mov    eax,fs:0x0
100025ed:	push   eax
100025ee:	sub    esp,0x8
100025f1:	push   edi
100025f2:	mov    eax,ds:0x100951fc
100025f7:	xor    eax,esp
100025f9:	push   eax
100025fa:	lea    eax,[esp+0x10]
100025fe:	mov    fs:0x0,eax
10002604:	cmp    DWORD PTR ds:0x1009795c,0x0
1000260b:	jne    0x100026b4
10002611:	push   0x10082978
10002616:	push   0x12
10002618:	push   0x100829ac
1000261d:	mov    DWORD PTR ds:0x1009795c,0xc
10002627:	mov    DWORD PTR ds:0x10097964,0x0
10002631:	call   0x10003540
10002636:	add    esp,0xc
10002639:	push   eax
1000263a:	lea    ecx,[esp+0x10]
1000263e:	call   0x10002d70
10002643:	lea    edi,[esp+0xb]
10002647:	mov    DWORD PTR [esp+0x18],0x0
1000264f:	call   0x10001830
10002654:	call   0x1000c340
10002659:	cmp    eax,0x6a
1000265c:	je     0x10002668
1000265e:	call   0x1000c340
10002663:	cmp    eax,0x6b
10002666:	jne    0x10002678
10002668:	push   0xf
1000266a:	push   0x100829d4
1000266f:	lea    ecx,[esp+0x14]
10002673:	call   0x10003be0
10002678:	mov    eax,DWORD PTR [esp+0xc]
1000267c:	push   0x0
1000267e:	push   0x10097960
10002683:	push   0x1
10002685:	push   eax
10002686:	call   DWORD PTR ds:0x1003400c
1000268c:	mov    DWORD PTR [esp+0x18],0xffffffff
10002694:	mov    eax,DWORD PTR [esp+0xc]
10002698:	add    eax,0xfffffff0
1000269b:	lea    ecx,[eax+0xc]
1000269e:	or     edx,0xffffffff
100026a1:	lock xadd DWORD PTR [ecx],edx
100026a5:	dec    edx
100026a6:	test   edx,edx
100026a8:	jg     0x100026b4
100026aa:	mov    ecx,DWORD PTR [eax]
100026ac:	mov    edx,DWORD PTR [ecx]
100026ae:	push   eax
100026af:	mov    eax,DWORD PTR [edx+0x4]
100026b2:	call   eax
100026b4:	mov    eax,0x1009795c
100026b9:	mov    ecx,DWORD PTR [esp+0x10]
100026bd:	mov    DWORD PTR fs:0x0,ecx
100026c4:	pop    ecx
100026c5:	pop    edi
100026c6:	add    esp,0x14
100026c9:	ret    
100026ca:	int3   
100026cb:	int3   
100026cc:	int3   
100026cd:	int3   
100026ce:	int3   
100026cf:	int3   
100026d0:	push   0xffffffff
100026d2:	push   0x1002b7e1
100026d7:	mov    eax,fs:0x0
100026dd:	push   eax
100026de:	sub    esp,0xc
100026e1:	push   esi
100026e2:	push   edi
100026e3:	mov    eax,ds:0x100951fc
100026e8:	xor    eax,esp
100026ea:	push   eax
100026eb:	lea    eax,[esp+0x18]
100026ef:	mov    fs:0x0,eax
100026f5:	xor    edi,edi
100026f7:	mov    DWORD PTR [esp+0x20],edi
100026fb:	mov    DWORD PTR [esp+0xc],edi
100026ff:	mov    eax,ds:0x10096c80
10002704:	mov    edx,DWORD PTR [eax+0xc]
10002707:	mov    ecx,0x10096c80
1000270c:	call   edx
1000270e:	mov    esi,DWORD PTR [esp+0x28]
10002712:	add    eax,0x10
10002715:	mov    DWORD PTR [esi],eax
10002717:	cmp    BYTE PTR [esp+0x2c],0x0
1000271c:	mov    DWORD PTR [esp+0x20],edi
10002720:	mov    DWORD PTR [esp+0xc],0x1
10002728:	je     0x10002773
1000272a:	lea    eax,[esp+0x10]
1000272e:	push   edi
1000272f:	push   eax
10002730:	call   0x10001bc0
10002735:	add    esp,0x8
10002738:	mov    DWORD PTR [esp+0x20],0x1
10002740:	mov    eax,DWORD PTR [eax]
10002742:	mov    ecx,DWORD PTR [eax-0xc]
10002745:	push   ecx
10002746:	push   eax
10002747:	mov    ecx,esi
10002749:	call   0x10003be0
1000274e:	mov    BYTE PTR [esp+0x20],0x0
10002753:	mov    eax,DWORD PTR [esp+0x10]
10002757:	add    eax,0xfffffff0
1000275a:	lea    ecx,[eax+0xc]
1000275d:	or     edx,0xffffffff
10002760:	lock xadd DWORD PTR [ecx],edx
10002764:	dec    edx
10002765:	test   edx,edx
10002767:	jg     0x10002773
10002769:	mov    ecx,DWORD PTR [eax]
1000276b:	mov    edx,DWORD PTR [ecx]
1000276d:	push   eax
1000276e:	mov    eax,DWORD PTR [edx+0x4]
10002771:	call   eax
10002773:	push   0x1
10002775:	lea    ecx,[esp+0x18]
10002779:	push   0x2
1000277b:	push   ecx
1000277c:	call   0x10002090
10002781:	mov    edi,eax
10002783:	push   0x100829f4
10002788:	push   0x4
1000278a:	push   0x10082a28
1000278f:	mov    DWORD PTR [esp+0x38],0x2
10002797:	call   0x10003540
1000279c:	push   eax
1000279d:	lea    edx,[esp+0x2c]
100027a1:	push   edi
100027a2:	push   edx
100027a3:	call   0x100030b0
100027a8:	add    esp,0x24
100027ab:	mov    BYTE PTR [esp+0x20],0x3
100027b0:	mov    eax,DWORD PTR [eax]
100027b2:	mov    ecx,DWORD PTR [eax-0xc]
100027b5:	push   ecx
100027b6:	push   eax
100027b7:	mov    ecx,esi
100027b9:	call   0x10003be0
100027be:	mov    BYTE PTR [esp+0x20],0x2
100027c3:	mov    eax,DWORD PTR [esp+0x10]
100027c7:	add    eax,0xfffffff0
100027ca:	lea    ecx,[eax+0xc]
100027cd:	or     edx,0xffffffff
100027d0:	lock xadd DWORD PTR [ecx],edx
100027d4:	dec    edx
100027d5:	test   edx,edx
100027d7:	jg     0x100027e3
100027d9:	mov    ecx,DWORD PTR [eax]
100027db:	mov    edx,DWORD PTR [ecx]
100027dd:	push   eax
100027de:	mov    eax,DWORD PTR [edx+0x4]
100027e1:	call   eax
100027e3:	mov    BYTE PTR [esp+0x20],0x0
100027e8:	mov    eax,DWORD PTR [esp+0x14]
100027ec:	add    eax,0xfffffff0
100027ef:	lea    ecx,[eax+0xc]
100027f2:	or     edx,0xffffffff
100027f5:	lock xadd DWORD PTR [ecx],edx
100027f9:	dec    edx
100027fa:	test   edx,edx
100027fc:	jg     0x10002808
100027fe:	mov    ecx,DWORD PTR [eax]
10002800:	mov    edx,DWORD PTR [ecx]
10002802:	push   eax
10002803:	mov    eax,DWORD PTR [edx+0x4]
10002806:	call   eax
10002808:	mov    eax,esi
1000280a:	mov    ecx,DWORD PTR [esp+0x18]
1000280e:	mov    DWORD PTR fs:0x0,ecx
10002815:	pop    ecx
10002816:	pop    edi
10002817:	pop    esi
10002818:	add    esp,0x18
1000281b:	ret    
1000281c:	int3   
1000281d:	int3   
1000281e:	int3   
1000281f:	int3   
10002820:	push   0xffffffff
10002822:	push   0x1002b791
10002827:	mov    eax,fs:0x0
1000282d:	push   eax
1000282e:	sub    esp,0xc
10002831:	push   esi
10002832:	push   edi
10002833:	mov    eax,ds:0x100951fc
10002838:	xor    eax,esp
1000283a:	push   eax
1000283b:	lea    eax,[esp+0x18]
1000283f:	mov    fs:0x0,eax
10002845:	xor    edi,edi
10002847:	mov    DWORD PTR [esp+0x20],edi
1000284b:	mov    DWORD PTR [esp+0xc],edi
1000284f:	mov    eax,ds:0x10096c80
10002854:	mov    edx,DWORD PTR [eax+0xc]
10002857:	mov    ecx,0x10096c80
1000285c:	call   edx
1000285e:	mov    esi,DWORD PTR [esp+0x28]
10002862:	add    eax,0x10
10002865:	mov    DWORD PTR [esi],eax
10002867:	cmp    BYTE PTR [esp+0x2c],0x0
1000286c:	mov    DWORD PTR [esp+0x20],edi
10002870:	mov    DWORD PTR [esp+0xc],0x1
10002878:	je     0x100028c3
1000287a:	lea    eax,[esp+0x10]
1000287e:	push   edi
1000287f:	push   eax
10002880:	call   0x10001bc0
10002885:	add    esp,0x8
10002888:	mov    DWORD PTR [esp+0x20],0x1
10002890:	mov    eax,DWORD PTR [eax]
10002892:	mov    ecx,DWORD PTR [eax-0xc]
10002895:	push   ecx
10002896:	push   eax
10002897:	mov    ecx,esi
10002899:	call   0x10003be0
1000289e:	mov    BYTE PTR [esp+0x20],0x0
100028a3:	mov    eax,DWORD PTR [esp+0x10]
100028a7:	add    eax,0xfffffff0
100028aa:	lea    ecx,[eax+0xc]
100028ad:	or     edx,0xffffffff
100028b0:	lock xadd DWORD PTR [ecx],edx
100028b4:	dec    edx
100028b5:	test   edx,edx
100028b7:	jg     0x100028c3
100028b9:	mov    ecx,DWORD PTR [eax]
100028bb:	mov    edx,DWORD PTR [ecx]
100028bd:	push   eax
100028be:	mov    eax,DWORD PTR [edx+0x4]
100028c1:	call   eax
100028c3:	push   0x1
100028c5:	lea    ecx,[esp+0x18]
100028c9:	push   0x3
100028cb:	push   ecx
100028cc:	call   0x10002090
100028d1:	mov    edi,eax
100028d3:	push   0x10082a34
100028d8:	push   0x4
100028da:	push   0x10082a28
100028df:	mov    DWORD PTR [esp+0x38],0x2
100028e7:	call   0x10003540
100028ec:	push   eax
100028ed:	lea    edx,[esp+0x2c]
100028f1:	push   edi
100028f2:	push   edx
100028f3:	call   0x100030b0
100028f8:	add    esp,0x24
100028fb:	mov    BYTE PTR [esp+0x20],0x3
10002900:	mov    eax,DWORD PTR [eax]
10002902:	mov    ecx,DWORD PTR [eax-0xc]
10002905:	push   ecx
10002906:	push   eax
10002907:	mov    ecx,esi
10002909:	call   0x10003be0
1000290e:	mov    BYTE PTR [esp+0x20],0x2
10002913:	mov    eax,DWORD PTR [esp+0x10]
10002917:	add    eax,0xfffffff0
1000291a:	lea    ecx,[eax+0xc]
1000291d:	or     edx,0xffffffff
10002920:	lock xadd DWORD PTR [ecx],edx
10002924:	dec    edx
10002925:	test   edx,edx
10002927:	jg     0x10002933
10002929:	mov    ecx,DWORD PTR [eax]
1000292b:	mov    edx,DWORD PTR [ecx]
1000292d:	push   eax
1000292e:	mov    eax,DWORD PTR [edx+0x4]
10002931:	call   eax
10002933:	mov    BYTE PTR [esp+0x20],0x0
10002938:	mov    eax,DWORD PTR [esp+0x14]
1000293c:	add    eax,0xfffffff0
1000293f:	lea    ecx,[eax+0xc]
10002942:	or     edx,0xffffffff
10002945:	lock xadd DWORD PTR [ecx],edx
10002949:	dec    edx
1000294a:	test   edx,edx
1000294c:	jg     0x10002958
1000294e:	mov    ecx,DWORD PTR [eax]
10002950:	mov    edx,DWORD PTR [ecx]
10002952:	push   eax
10002953:	mov    eax,DWORD PTR [edx+0x4]
10002956:	call   eax
10002958:	mov    eax,esi
1000295a:	mov    ecx,DWORD PTR [esp+0x18]
1000295e:	mov    DWORD PTR fs:0x0,ecx
10002965:	pop    ecx
10002966:	pop    edi
10002967:	pop    esi
10002968:	add    esp,0x18
1000296b:	ret    
1000296c:	int3   
1000296d:	int3   
1000296e:	int3   
1000296f:	int3   
10002970:	push   0xffffffff
10002972:	push   0x1002a803
10002977:	mov    eax,fs:0x0
1000297d:	push   eax
1000297e:	sub    esp,0x434
10002984:	mov    eax,ds:0x100951fc
10002989:	xor    eax,esp
1000298b:	mov    DWORD PTR [esp+0x430],eax
10002992:	push   ebx
10002993:	push   ebp
10002994:	push   esi
10002995:	push   edi
10002996:	mov    eax,ds:0x100951fc
1000299b:	xor    eax,esp
1000299d:	push   eax
1000299e:	lea    eax,[esp+0x448]
100029a5:	mov    fs:0x0,eax
100029ab:	mov    eax,DWORD PTR [esp+0x458]
100029b2:	push   eax
100029b3:	push   0x18
100029b5:	mov    DWORD PTR [esp+0x458],0x0
100029c0:	call   0x100153e0
100029c5:	mov    esi,eax
100029c7:	mov    DWORD PTR [esp+0x18],esi
100029cb:	or     ebp,0xffffffff
100029ce:	cmp    esi,ebp
100029d0:	mov    BYTE PTR [esp+0x450],0x1
100029d8:	jne    0x10002a06
100029da:	call   DWORD PTR ds:0x1003407c
100029e0:	push   ebp
100029e1:	mov    esi,eax
100029e3:	call   DWORD PTR ds:0x10034058
100029e9:	push   esi
100029ea:	call   DWORD PTR ds:0x10034078
100029f0:	mov    DWORD PTR [esp+0x450],ebp
100029f7:	mov    eax,DWORD PTR [esp+0x45c]
100029fe:	add    eax,0xfffffff0
10002a01:	jmp    0x10002ac2
10002a06:	lea    ecx,[esp+0x1c]
10002a0a:	push   ecx
10002a0b:	push   esi
10002a0c:	mov    DWORD PTR [esp+0x24],0x428
10002a14:	call   0x100153e6
10002a19:	test   eax,eax
10002a1b:	jne    0x10002a52
10002a1d:	test   esi,esi
10002a1f:	je     0x10002a37
10002a21:	call   DWORD PTR ds:0x1003407c
10002a27:	push   esi
10002a28:	mov    edi,eax
10002a2a:	call   DWORD PTR ds:0x10034058
10002a30:	push   edi
10002a31:	call   DWORD PTR ds:0x10034078
10002a37:	mov    DWORD PTR [esp+0x450],ebp
10002a3e:	mov    eax,DWORD PTR [esp+0x45c]
10002a45:	add    eax,0xfffffff0
10002a48:	lea    edx,[eax+0xc]
10002a4b:	lock xadd DWORD PTR [edx],ebp
10002a4f:	dec    ebp
10002a50:	jmp    0x10002aca
10002a52:	mov    edi,DWORD PTR [esp+0x45c]
10002a59:	lea    esp,[esp+0x0]
10002a60:	cmp    DWORD PTR [edi-0x4],0x1
10002a64:	jle    0x10002a7d
10002a66:	mov    ecx,DWORD PTR [edi-0xc]
10002a69:	push   ecx
10002a6a:	lea    ecx,[esp+0x460]
10002a71:	call   0x10003d30
10002a76:	mov    edi,DWORD PTR [esp+0x45c]
10002a7d:	lea    edx,[esp+0x3c]
10002a81:	push   edi
10002a82:	push   edx
10002a83:	call   0x1001678b
10002a88:	add    esp,0x8
10002a8b:	test   eax,eax
10002a8d:	je     0x10002b02
10002a8f:	lea    eax,[esp+0x1c]
10002a93:	push   eax
10002a94:	push   esi
10002a95:	call   0x100153ec
10002a9a:	test   eax,eax
10002a9c:	jne    0x10002a60
10002a9e:	test   esi,esi
10002aa0:	je     0x10002ab8
10002aa2:	call   DWORD PTR ds:0x1003407c
10002aa8:	push   esi
10002aa9:	mov    ebx,eax
10002aab:	call   DWORD PTR ds:0x10034058
10002ab1:	push   ebx
10002ab2:	call   DWORD PTR ds:0x10034078
10002ab8:	mov    DWORD PTR [esp+0x450],ebp
10002abf:	lea    eax,[edi-0x10]
10002ac2:	lea    ecx,[eax+0xc]
10002ac5:	lock xadd DWORD PTR [ecx],ebp
10002ac9:	dec    ebp
10002aca:	test   ebp,ebp
10002acc:	jg     0x10002ad8
10002ace:	mov    ecx,DWORD PTR [eax]
10002ad0:	mov    edx,DWORD PTR [ecx]
10002ad2:	push   eax
10002ad3:	mov    eax,DWORD PTR [edx+0x4]
10002ad6:	call   eax
10002ad8:	xor    al,al
10002ada:	mov    ecx,DWORD PTR [esp+0x448]
10002ae1:	mov    DWORD PTR fs:0x0,ecx
10002ae8:	pop    ecx
10002ae9:	pop    edi
10002aea:	pop    esi
10002aeb:	pop    ebp
10002aec:	pop    ebx
10002aed:	mov    ecx,DWORD PTR [esp+0x430]
10002af4:	xor    ecx,esp
10002af6:	call   0x10015b2b
10002afb:	add    esp,0x440
10002b01:	ret    
10002b02:	test   esi,esi
10002b04:	je     0x10002b1c
10002b06:	call   DWORD PTR ds:0x1003407c
10002b0c:	push   esi
10002b0d:	mov    ebx,eax
10002b0f:	call   DWORD PTR ds:0x10034058
10002b15:	push   ebx
10002b16:	call   DWORD PTR ds:0x10034078
10002b1c:	lea    eax,[edi-0x10]
10002b1f:	mov    DWORD PTR [esp+0x450],ebp
10002b26:	lea    ecx,[eax+0xc]
10002b29:	lock xadd DWORD PTR [ecx],ebp
10002b2d:	dec    ebp
10002b2e:	test   ebp,ebp
10002b30:	jg     0x10002b3c
10002b32:	mov    ecx,DWORD PTR [eax]
10002b34:	mov    edx,DWORD PTR [ecx]
10002b36:	push   eax
10002b37:	mov    eax,DWORD PTR [edx+0x4]
10002b3a:	call   eax
10002b3c:	mov    al,0x1
10002b3e:	jmp    0x10002ada
10002b40:	xor    ax,ax
10002b43:	ret    
10002b44:	int3   
10002b45:	int3   
10002b46:	int3   
10002b47:	int3   
10002b48:	int3   
10002b49:	int3   
10002b4a:	int3   
10002b4b:	int3   
10002b4c:	int3   
10002b4d:	int3   
10002b4e:	int3   
10002b4f:	int3   
10002b50:	mov    eax,ecx
10002b52:	xor    ecx,ecx
10002b54:	mov    DWORD PTR [eax+0x18],0xf
10002b5b:	mov    DWORD PTR [eax+0x14],ecx
10002b5e:	mov    BYTE PTR [eax+0x4],cl
10002b61:	ret    
10002b62:	int3   
10002b63:	int3   
10002b64:	int3   
10002b65:	int3   
10002b66:	int3   
10002b67:	int3   
10002b68:	int3   
10002b69:	int3   
10002b6a:	int3   
10002b6b:	int3   
10002b6c:	int3   
10002b6d:	int3   
10002b6e:	int3   
10002b6f:	int3   
10002b70:	mov    edx,DWORD PTR [esp+0x4]
10002b74:	push   esi
10002b75:	mov    esi,ecx
10002b77:	mov    eax,edx
10002b79:	push   edi
10002b7a:	mov    DWORD PTR [esi+0x18],0xf
10002b81:	mov    DWORD PTR [esi+0x14],0x0
10002b88:	mov    BYTE PTR [esi+0x4],0x0
10002b8c:	lea    edi,[eax+0x1]
10002b8f:	nop
10002b90:	mov    cl,BYTE PTR [eax]
10002b92:	add    eax,0x1
10002b95:	test   cl,cl
10002b97:	jne    0x10002b90
10002b99:	sub    eax,edi
10002b9b:	push   eax
10002b9c:	push   edx
10002b9d:	mov    ecx,esi
10002b9f:	call   0x10003900
10002ba4:	pop    edi
10002ba5:	mov    eax,esi
10002ba7:	pop    esi
10002ba8:	ret    0x4
10002bab:	int3   
10002bac:	int3   
10002bad:	int3   
10002bae:	int3   
10002baf:	int3   
10002bb0:	push   esi
10002bb1:	mov    esi,ecx
10002bb3:	cmp    DWORD PTR [esi+0x18],0x10
10002bb7:	jb     0x10002bc5
10002bb9:	mov    eax,DWORD PTR [esi+0x4]
10002bbc:	push   eax
10002bbd:	call   0x10015b26
10002bc2:	add    esp,0x4
10002bc5:	xor    eax,eax
10002bc7:	mov    DWORD PTR [esi+0x18],0xf
10002bce:	mov    DWORD PTR [esi+0x14],eax
10002bd1:	mov    BYTE PTR [esi+0x4],al
10002bd4:	pop    esi
10002bd5:	ret    
10002bd6:	int3   
10002bd7:	int3   
10002bd8:	int3   
10002bd9:	int3   
10002bda:	int3   
10002bdb:	int3   
10002bdc:	int3   
10002bdd:	int3   
10002bde:	int3   
10002bdf:	int3   
10002be0:	mov    eax,DWORD PTR [esp+0x4]
10002be4:	push   0xffffffff
10002be6:	push   0x0
10002be8:	push   eax
10002be9:	call   0x10003820
10002bee:	ret    0x4
10002bf1:	int3   
10002bf2:	int3   
10002bf3:	int3   
10002bf4:	int3   
10002bf5:	int3   
10002bf6:	int3   
10002bf7:	int3   
10002bf8:	int3   
10002bf9:	int3   
10002bfa:	int3   
10002bfb:	int3   
10002bfc:	int3   
10002bfd:	int3   
10002bfe:	int3   
10002bff:	int3   
10002c00:	push   esi
10002c01:	mov    esi,DWORD PTR [esp+0x8]
10002c05:	mov    eax,esi
10002c07:	push   edi
10002c08:	lea    edi,[eax+0x1]
10002c0b:	jmp    0x10002c10
10002c0d:	lea    ecx,[ecx+0x0]
10002c10:	mov    dl,BYTE PTR [eax]
10002c12:	add    eax,0x1
10002c15:	test   dl,dl
10002c17:	jne    0x10002c10
10002c19:	sub    eax,edi
10002c1b:	push   eax
10002c1c:	push   esi
10002c1d:	call   0x10003900
10002c22:	pop    edi
10002c23:	pop    esi
10002c24:	ret    0x4
10002c27:	int3   
10002c28:	int3   
10002c29:	int3   
10002c2a:	int3   
10002c2b:	int3   
10002c2c:	int3   
10002c2d:	int3   
10002c2e:	int3   
10002c2f:	int3   
10002c30:	mov    ecx,DWORD PTR [esp+0x4]
10002c34:	push   ebx
10002c35:	push   ebp
10002c36:	mov    ebp,DWORD PTR [esp+0x10]
10002c3a:	push   esi
10002c3b:	mov    esi,eax
10002c3d:	mov    edx,DWORD PTR [esi+0x18]
10002c40:	cmp    edx,0x10
10002c43:	push   edi
10002c44:	lea    ebx,[esi+0x4]
10002c47:	jb     0x10002c4d
10002c49:	mov    eax,DWORD PTR [ebx]
10002c4b:	jmp    0x10002c4f
10002c4d:	mov    eax,ebx
10002c4f:	cmp    ecx,eax
10002c51:	jb     0x10002c80
10002c53:	cmp    edx,0x10
10002c56:	jb     0x10002c5c
10002c58:	mov    eax,DWORD PTR [ebx]
10002c5a:	jmp    0x10002c5e
10002c5c:	mov    eax,ebx
10002c5e:	mov    edi,DWORD PTR [esi+0x14]
10002c61:	add    edi,eax
10002c63:	cmp    edi,ecx
10002c65:	jbe    0x10002c80
10002c67:	cmp    edx,0x10
10002c6a:	jb     0x10002c6e
10002c6c:	mov    ebx,DWORD PTR [ebx]
10002c6e:	sub    ecx,ebx
10002c70:	push   ecx
10002c71:	push   esi
10002c72:	mov    eax,ebp
10002c74:	call   0x10003730
10002c79:	pop    edi
10002c7a:	pop    esi
10002c7b:	pop    ebp
10002c7c:	pop    ebx
10002c7d:	ret    0x8
10002c80:	mov    eax,DWORD PTR [esi+0x14]
10002c83:	or     ecx,0xffffffff
10002c86:	sub    ecx,eax
10002c88:	cmp    ecx,ebp
10002c8a:	jbe    0x10002c93
10002c8c:	lea    edx,[eax+ebp*1]
10002c8f:	cmp    edx,eax
10002c91:	jae    0x10002c98
10002c93:	call   0x100159c7
10002c98:	test   ebp,ebp
10002c9a:	jbe    0x10002d10
10002c9c:	mov    edi,DWORD PTR [esi+0x14]
10002c9f:	add    edi,ebp
10002ca1:	cmp    edi,0xfffffffe
10002ca4:	jbe    0x10002cab
10002ca6:	call   0x100159c7
10002cab:	mov    eax,DWORD PTR [esi+0x18]
10002cae:	cmp    eax,edi
10002cb0:	jae    0x10002cce
10002cb2:	mov    eax,DWORD PTR [esi+0x14]
10002cb5:	push   eax
10002cb6:	push   edi
10002cb7:	mov    ecx,esi
10002cb9:	call   0x10004620
10002cbe:	test   edi,edi
10002cc0:	jbe    0x10002d10
10002cc2:	mov    eax,DWORD PTR [esi+0x18]
10002cc5:	cmp    eax,0x10
10002cc8:	jb     0x10002ce8
10002cca:	mov    edx,DWORD PTR [ebx]
10002ccc:	jmp    0x10002cea
10002cce:	test   edi,edi
10002cd0:	jne    0x10002cc0
10002cd2:	cmp    eax,0x10
10002cd5:	mov    DWORD PTR [esi+0x14],edi
10002cd8:	jb     0x10002cdc
10002cda:	mov    ebx,DWORD PTR [ebx]
10002cdc:	pop    edi
10002cdd:	mov    eax,esi
10002cdf:	pop    esi
10002ce0:	pop    ebp
10002ce1:	mov    BYTE PTR [ebx],0x0
10002ce4:	pop    ebx
10002ce5:	ret    0x8
10002ce8:	mov    edx,ebx
10002cea:	mov    ecx,DWORD PTR [esi+0x14]
10002ced:	push   ebp
10002cee:	mov    ebp,DWORD PTR [esp+0x18]
10002cf2:	sub    eax,ecx
10002cf4:	push   ebp
10002cf5:	push   eax
10002cf6:	add    ecx,edx
10002cf8:	push   ecx
10002cf9:	call   0x100161a3
10002cfe:	add    esp,0x10
10002d01:	cmp    DWORD PTR [esi+0x18],0x10
10002d05:	mov    DWORD PTR [esi+0x14],edi
10002d08:	jb     0x10002d0c
10002d0a:	mov    ebx,DWORD PTR [ebx]
10002d0c:	mov    BYTE PTR [ebx+edi*1],0x0
10002d10:	pop    edi
10002d11:	mov    eax,esi
10002d13:	pop    esi
10002d14:	pop    ebp
10002d15:	pop    ebx
10002d16:	ret    0x8
10002d19:	int3   
10002d1a:	int3   
10002d1b:	int3   
10002d1c:	int3   
10002d1d:	int3   
10002d1e:	int3   
10002d1f:	int3   
10002d20:	mov    eax,DWORD PTR [ecx+0x14]
10002d23:	ret    
10002d24:	int3   
10002d25:	int3   
10002d26:	int3   
10002d27:	int3   
10002d28:	int3   
10002d29:	int3   
10002d2a:	int3   
10002d2b:	int3   
10002d2c:	int3   
10002d2d:	int3   
10002d2e:	int3   
10002d2f:	int3   
10002d30:	mov    eax,ds:0x10096c80
10002d35:	mov    edx,DWORD PTR [eax+0xc]
10002d38:	push   esi
10002d39:	mov    esi,ecx
10002d3b:	mov    ecx,0x10096c80
10002d40:	call   edx
10002d42:	add    eax,0x10
10002d45:	mov    DWORD PTR [esi],eax
10002d47:	mov    eax,esi
10002d49:	pop    esi
10002d4a:	ret    
10002d4b:	int3   
10002d4c:	int3   
10002d4d:	int3   
10002d4e:	int3   
10002d4f:	int3   
10002d50:	mov    eax,DWORD PTR [esp+0x4]
10002d54:	mov    eax,DWORD PTR [eax]
10002d56:	push   esi
10002d57:	sub    eax,0x10
10002d5a:	push   eax
10002d5b:	mov    esi,ecx
10002d5d:	call   0x10004990
10002d62:	add    eax,0x10
10002d65:	mov    DWORD PTR [esi],eax
10002d67:	add    esp,0x4
10002d6a:	mov    eax,esi
10002d6c:	pop    esi
10002d6d:	ret    0x4
10002d70:	push   0xffffffff
10002d72:	push   0x1002ac68
10002d77:	mov    eax,fs:0x0
10002d7d:	push   eax
10002d7e:	push   ecx
10002d7f:	push   esi
10002d80:	push   edi
10002d81:	mov    eax,ds:0x100951fc
10002d86:	xor    eax,esp
10002d88:	push   eax
10002d89:	lea    eax,[esp+0x10]
10002d8d:	mov    fs:0x0,eax
10002d93:	mov    edi,ecx
10002d95:	mov    DWORD PTR [esp+0xc],edi
10002d99:	mov    eax,ds:0x10096c80
10002d9e:	mov    edx,DWORD PTR [eax+0xc]
10002da1:	mov    ecx,0x10096c80
10002da6:	call   edx
10002da8:	add    eax,0x10
10002dab:	mov    DWORD PTR [edi],eax
10002dad:	mov    edx,DWORD PTR [esp+0x20]
10002db1:	test   edx,edx
10002db3:	mov    DWORD PTR [esp+0x18],0x0
10002dbb:	je     0x10002de2
10002dbd:	test   edx,0xffff0000
10002dc3:	jne    0x10002de6
10002dc5:	movzx  esi,dx
10002dc8:	push   0x0
10002dca:	push   esi
10002dcb:	call   0x100011f0
10002dd0:	add    esp,0x8
10002dd3:	test   eax,eax
10002dd5:	je     0x10002e08
10002dd7:	push   esi
10002dd8:	push   eax
10002dd9:	mov    ecx,edi
10002ddb:	call   0x10005170
10002de0:	jmp    0x10002e08
10002de2:	xor    eax,eax
10002de4:	jmp    0x10002dff
10002de6:	mov    eax,edx
10002de8:	lea    esi,[eax+0x2]
10002deb:	jmp    0x10002df0
10002ded:	lea    ecx,[ecx+0x0]
10002df0:	mov    cx,WORD PTR [eax]
10002df3:	add    eax,0x2
10002df6:	test   cx,cx
10002df9:	jne    0x10002df0
10002dfb:	sub    eax,esi
10002dfd:	sar    eax,1
10002dff:	push   eax
10002e00:	push   edx
10002e01:	mov    ecx,edi
10002e03:	call   0x10004890
10002e08:	mov    eax,edi
10002e0a:	mov    ecx,DWORD PTR [esp+0x10]
10002e0e:	mov    DWORD PTR fs:0x0,ecx
10002e15:	pop    ecx
10002e16:	pop    edi
10002e17:	pop    esi
10002e18:	add    esp,0x10
10002e1b:	ret    0x4
10002e1e:	int3   
10002e1f:	int3   
10002e20:	push   0xffffffff
10002e22:	push   0x1002ac38
10002e27:	mov    eax,fs:0x0
10002e2d:	push   eax
10002e2e:	push   ecx
10002e2f:	push   esi
10002e30:	push   edi
10002e31:	mov    eax,ds:0x100951fc
10002e36:	xor    eax,esp
10002e38:	push   eax
10002e39:	lea    eax,[esp+0x10]
10002e3d:	mov    fs:0x0,eax
10002e43:	mov    esi,ecx
10002e45:	mov    DWORD PTR [esp+0xc],esi
10002e49:	mov    eax,ds:0x10096c80
10002e4e:	mov    edx,DWORD PTR [eax+0xc]
10002e51:	mov    ecx,0x10096c80
10002e56:	call   edx
10002e58:	add    eax,0x10
10002e5b:	mov    DWORD PTR [esi],eax
10002e5d:	mov    eax,DWORD PTR [esp+0x20]
10002e61:	test   eax,eax
10002e63:	mov    DWORD PTR [esp+0x18],0x0
10002e6b:	je     0x10002e91
10002e6d:	test   eax,0xffff0000
10002e72:	jne    0x10002e91
10002e74:	movzx  edi,ax
10002e77:	push   0x0
10002e79:	push   edi
10002e7a:	call   0x100011f0
10002e7f:	add    esp,0x8
10002e82:	test   eax,eax
10002e84:	je     0x10002e99
10002e86:	push   edi
10002e87:	push   eax
10002e88:	mov    ecx,esi
10002e8a:	call   0x10005170
10002e8f:	jmp    0x10002e99
10002e91:	push   eax
10002e92:	mov    ecx,esi
10002e94:	call   0x10003aa0
10002e99:	mov    eax,esi
10002e9b:	mov    ecx,DWORD PTR [esp+0x10]
10002e9f:	mov    DWORD PTR fs:0x0,ecx
10002ea6:	pop    ecx
10002ea7:	pop    edi
10002ea8:	pop    esi
10002ea9:	add    esp,0x10
10002eac:	ret    0x4
10002eaf:	int3   
10002eb0:	mov    eax,DWORD PTR [esp+0x4]
10002eb4:	push   esi
10002eb5:	push   eax
10002eb6:	mov    esi,ecx
10002eb8:	call   0x10003b60
10002ebd:	mov    eax,esi
10002ebf:	pop    esi
10002ec0:	ret    0x4
10002ec3:	int3   
10002ec4:	int3   
10002ec5:	int3   
10002ec6:	int3   
10002ec7:	int3   
10002ec8:	int3   
10002ec9:	int3   
10002eca:	int3   
10002ecb:	int3   
10002ecc:	int3   
10002ecd:	int3   
10002ece:	int3   
10002ecf:	int3   
10002ed0:	mov    edx,DWORD PTR [esp+0x4]
10002ed4:	test   edx,edx
10002ed6:	push   edi
10002ed7:	mov    edi,ecx
10002ed9:	jne    0x10002eea
10002edb:	xor    eax,eax
10002edd:	push   eax
10002ede:	push   edx
10002edf:	call   0x10003be0
10002ee4:	mov    eax,edi
10002ee6:	pop    edi
10002ee7:	ret    0x4
10002eea:	mov    eax,edx
10002eec:	push   esi
10002eed:	lea    esi,[eax+0x2]
10002ef0:	mov    cx,WORD PTR [eax]
10002ef3:	add    eax,0x2
10002ef6:	test   cx,cx
10002ef9:	jne    0x10002ef0
10002efb:	sub    eax,esi
10002efd:	pop    esi
10002efe:	sar    eax,1
10002f00:	push   eax
10002f01:	push   edx
10002f02:	mov    ecx,edi
10002f04:	call   0x10003be0
10002f09:	mov    eax,edi
10002f0b:	pop    edi
10002f0c:	ret    0x4
10002f0f:	int3   
10002f10:	mov    eax,DWORD PTR [edi]
10002f12:	mov    edx,DWORD PTR [eax-0x8]
10002f15:	push   ebx
10002f16:	mov    ebx,DWORD PTR [eax-0xc]
10002f19:	push   esi
10002f1a:	mov    ecx,0x1
10002f1f:	sub    ecx,DWORD PTR [eax-0x4]
10002f22:	lea    esi,[ebx+0x1]
10002f25:	sub    edx,esi
10002f27:	or     ecx,edx
10002f29:	jge    0x10002f33
10002f2b:	push   esi
10002f2c:	mov    ecx,edi
10002f2e:	call   0x10004940
10002f33:	test   esi,esi
10002f35:	mov    eax,DWORD PTR [edi]
10002f37:	mov    cx,WORD PTR [esp+0xc]
10002f3c:	mov    WORD PTR [eax+ebx*2],cx
10002f40:	jl     0x10002f5b
10002f42:	mov    eax,DWORD PTR [edi]
10002f44:	cmp    esi,DWORD PTR [eax-0x8]
10002f47:	jg     0x10002f5b
10002f49:	mov    DWORD PTR [eax-0xc],esi
10002f4c:	mov    edx,DWORD PTR [edi]
10002f4e:	mov    WORD PTR [edx+esi*2],0x0
10002f54:	pop    esi
10002f55:	mov    eax,edi
10002f57:	pop    ebx
10002f58:	ret    0x4
10002f5b:	push   0x80070057
10002f60:	call   0x10001090
10002f65:	int3   
10002f66:	int3   
10002f67:	int3   
10002f68:	int3   
10002f69:	int3   
10002f6a:	int3   
10002f6b:	int3   
10002f6c:	int3   
10002f6d:	int3   
10002f6e:	int3   
10002f6f:	int3   
10002f70:	push   esi
10002f71:	mov    esi,ecx
10002f73:	mov    ecx,DWORD PTR [esp+0x8]
10002f77:	mov    eax,DWORD PTR [esi]
10002f79:	push   ecx
10002f7a:	push   eax
10002f7b:	call   0x100172f4
10002f80:	add    esp,0x8
10002f83:	test   eax,eax
10002f85:	jne    0x10002f8e
10002f87:	or     eax,0xffffffff
10002f8a:	pop    esi
10002f8b:	ret    0x4
10002f8e:	sub    eax,DWORD PTR [esi]
10002f90:	pop    esi
10002f91:	sar    eax,1
10002f93:	ret    0x4
10002f96:	int3   
10002f97:	int3   
10002f98:	int3   
10002f99:	int3   
10002f9a:	int3   
10002f9b:	int3   
10002f9c:	int3   
10002f9d:	int3   
10002f9e:	int3   
10002f9f:	int3   
10002fa0:	push   ecx
10002fa1:	push   ebx
10002fa2:	push   esi
10002fa3:	push   edi
10002fa4:	mov    edi,DWORD PTR [esp+0x18]
10002fa8:	test   edi,edi
10002faa:	mov    ebx,ecx
10002fac:	mov    DWORD PTR [esp+0xc],0x0
10002fb4:	jge    0x10002fb8
10002fb6:	xor    edi,edi
10002fb8:	mov    eax,DWORD PTR [ebx]
10002fba:	mov    esi,DWORD PTR [eax-0xc]
10002fbd:	cmp    edi,esi
10002fbf:	jl     0x10002fdf
10002fc1:	add    eax,0xfffffff0
10002fc4:	push   eax
10002fc5:	call   0x10004990
10002fca:	add    esp,0x4
10002fcd:	mov    ecx,eax
10002fcf:	mov    eax,DWORD PTR [esp+0x14]
10002fd3:	pop    edi
10002fd4:	add    ecx,0x10
10002fd7:	pop    esi
10002fd8:	mov    DWORD PTR [eax],ecx
10002fda:	pop    ebx
10002fdb:	pop    ecx
10002fdc:	ret    0x8
10002fdf:	mov    eax,DWORD PTR [eax-0x10]
10002fe2:	test   eax,eax
10002fe4:	je     0x10002ff3
10002fe6:	mov    edx,DWORD PTR [eax]
10002fe8:	mov    ecx,eax
10002fea:	mov    eax,DWORD PTR [edx+0x10]
10002fed:	call   eax
10002fef:	test   eax,eax
10002ff1:	jne    0x10003003
10002ff3:	mov    edx,DWORD PTR ds:0x10096c80
10002ff9:	mov    eax,DWORD PTR [edx+0x10]
10002ffc:	mov    ecx,0x10096c80
10003001:	call   eax
10003003:	mov    ecx,DWORD PTR [ebx]
10003005:	sub    esi,edi
10003007:	push   eax
10003008:	lea    edx,[ecx+esi*2]
1000300b:	mov    esi,DWORD PTR [esp+0x18]
1000300f:	push   edi
10003010:	push   edx
10003011:	mov    ecx,esi
10003013:	call   0x100047a0
10003018:	pop    edi
10003019:	mov    eax,esi
1000301b:	pop    esi
1000301c:	pop    ebx
1000301d:	pop    ecx
1000301e:	ret    0x8
10003021:	int3   
10003022:	int3   
10003023:	int3   
10003024:	int3   
10003025:	int3   
10003026:	int3   
10003027:	int3   
10003028:	int3   
10003029:	int3   
1000302a:	int3   
1000302b:	int3   
1000302c:	int3   
1000302d:	int3   
1000302e:	int3   
1000302f:	int3   
10003030:	push   ecx
10003031:	push   esi
10003032:	mov    esi,DWORD PTR [esp+0x10]
10003036:	test   esi,esi
10003038:	push   edi
10003039:	mov    edi,ecx
1000303b:	mov    DWORD PTR [esp+0x8],0x0
10003043:	jge    0x10003047
10003045:	xor    esi,esi
10003047:	mov    eax,DWORD PTR [edi]
10003049:	cmp    esi,DWORD PTR [eax-0xc]
1000304c:	jl     0x1000306b
1000304e:	add    eax,0xfffffff0
10003051:	push   eax
10003052:	call   0x10004990
10003057:	add    esp,0x4
1000305a:	mov    ecx,eax
1000305c:	mov    eax,DWORD PTR [esp+0x10]
10003060:	add    ecx,0x10
10003063:	pop    edi
10003064:	mov    DWORD PTR [eax],ecx
10003066:	pop    esi
10003067:	pop    ecx
10003068:	ret    0x8
1000306b:	mov    ecx,DWORD PTR [eax-0x10]
1000306e:	test   ecx,ecx
10003070:	je     0x1000307d
10003072:	mov    edx,DWORD PTR [ecx]
10003074:	mov    eax,DWORD PTR [edx+0x10]
10003077:	call   eax
10003079:	test   eax,eax
1000307b:	jne    0x1000308d
1000307d:	mov    edx,DWORD PTR ds:0x10096c80
10003083:	mov    eax,DWORD PTR [edx+0x10]
10003086:	mov    ecx,0x10096c80
1000308b:	call   eax
1000308d:	mov    ecx,DWORD PTR [edi]
1000308f:	push   eax
10003090:	push   esi
10003091:	mov    esi,DWORD PTR [esp+0x18]
10003095:	push   ecx
10003096:	mov    ecx,esi
10003098:	call   0x100047a0
1000309d:	pop    edi
1000309e:	mov    eax,esi
100030a0:	pop    esi
100030a1:	pop    ecx
100030a2:	ret    0x8
100030a5:	int3   
100030a6:	int3   
100030a7:	int3   
100030a8:	int3   
100030a9:	int3   
100030aa:	int3   
100030ab:	int3   
100030ac:	int3   
100030ad:	int3   
100030ae:	int3   
100030af:	int3   
100030b0:	push   0xffffffff
100030b2:	push   0x1002ab09
100030b7:	mov    eax,fs:0x0
100030bd:	push   eax
100030be:	push   ecx
100030bf:	push   ebp
100030c0:	push   esi
100030c1:	push   edi
100030c2:	mov    eax,ds:0x100951fc
100030c7:	xor    eax,esp
100030c9:	push   eax
100030ca:	lea    eax,[esp+0x14]
100030ce:	mov    fs:0x0,eax
100030d4:	mov    ebp,DWORD PTR [esp+0x28]
100030d8:	mov    DWORD PTR [esp+0x1c],0x0
100030e0:	mov    DWORD PTR [esp+0x10],0x0
100030e8:	mov    eax,DWORD PTR [ebp+0x0]
100030eb:	mov    ecx,DWORD PTR [eax-0x10]
100030ee:	test   ecx,ecx
100030f0:	je     0x100030fd
100030f2:	mov    edx,DWORD PTR [ecx]
100030f4:	mov    eax,DWORD PTR [edx+0x10]
100030f7:	call   eax
100030f9:	test   eax,eax
100030fb:	jne    0x1000310d
100030fd:	mov    edx,DWORD PTR ds:0x10096c80
10003103:	mov    eax,DWORD PTR [edx+0x10]
10003106:	mov    ecx,0x10096c80
1000310b:	call   eax
1000310d:	xor    ecx,ecx
1000310f:	test   eax,eax
10003111:	setne  cl
10003114:	test   ecx,ecx
10003116:	jne    0x10003122
10003118:	push   0x80004005
1000311d:	call   0x10001090
10003122:	mov    edx,DWORD PTR [eax]
10003124:	mov    ecx,eax
10003126:	mov    eax,DWORD PTR [edx+0xc]
10003129:	call   eax
1000312b:	mov    esi,DWORD PTR [esp+0x24]
1000312f:	add    eax,0x10
10003132:	mov    DWORD PTR [esi],eax
10003134:	mov    edi,DWORD PTR [esp+0x2c]
10003138:	test   edi,edi
1000313a:	mov    DWORD PTR [esp+0x1c],0x0
10003142:	mov    DWORD PTR [esp+0x10],0x1
1000314a:	jne    0x10003150
1000314c:	xor    eax,eax
1000314e:	jmp    0x10003164
10003150:	mov    eax,edi
10003152:	lea    edx,[eax+0x2]
10003155:	mov    cx,WORD PTR [eax]
10003158:	add    eax,0x2
1000315b:	test   cx,cx
1000315e:	jne    0x10003155
10003160:	sub    eax,edx
10003162:	sar    eax,1
10003164:	mov    ecx,DWORD PTR [ebp+0x0]
10003167:	mov    edx,DWORD PTR [ecx-0xc]
1000316a:	push   eax
1000316b:	push   edi
1000316c:	push   edx
1000316d:	push   ecx
1000316e:	push   esi
1000316f:	call   0x10003ca0
10003174:	add    esp,0x14
10003177:	mov    eax,esi
10003179:	mov    ecx,DWORD PTR [esp+0x14]
1000317d:	mov    DWORD PTR fs:0x0,ecx
10003184:	pop    ecx
10003185:	pop    edi
10003186:	pop    esi
10003187:	pop    ebp
10003188:	add    esp,0x10
1000318b:	ret    
1000318c:	int3   
1000318d:	int3   
1000318e:	int3   
1000318f:	int3   
10003190:	push   esi
10003191:	mov    esi,ecx
10003193:	mov    eax,DWORD PTR [esi]
10003195:	sub    eax,0x10
10003198:	cmp    DWORD PTR [eax+0xc],0x1
1000319c:	jle    0x100031a7
1000319e:	mov    eax,DWORD PTR [eax+0x4]
100031a1:	push   eax
100031a2:	call   0x10003d30
100031a7:	mov    eax,DWORD PTR [esi]
100031a9:	pop    esi
100031aa:	ret    
100031ab:	int3   
100031ac:	int3   
100031ad:	int3   
100031ae:	int3   
100031af:	int3   
100031b0:	push   esi
100031b1:	mov    esi,ecx
100031b3:	mov    eax,DWORD PTR [esi]
100031b5:	mov    edx,DWORD PTR [eax-0x8]
100031b8:	sub    eax,0x10
100031bb:	mov    ecx,0x1
100031c0:	sub    ecx,DWORD PTR [eax+0xc]
100031c3:	mov    eax,DWORD PTR [esp+0x8]
100031c7:	sub    edx,eax
100031c9:	or     ecx,edx
100031cb:	jge    0x100031d5
100031cd:	push   eax
100031ce:	mov    ecx,esi
100031d0:	call   0x10004940
100031d5:	mov    eax,DWORD PTR [esi]
100031d7:	pop    esi
100031d8:	ret    0x4
100031db:	int3   
100031dc:	int3   
100031dd:	int3   
100031de:	int3   
100031df:	int3   
100031e0:	mov    eax,DWORD PTR [ecx]
100031e2:	mov    eax,DWORD PTR [eax-0xc]
100031e5:	ret    
100031e6:	int3   
100031e7:	int3   
100031e8:	int3   
100031e9:	int3   
100031ea:	int3   
100031eb:	int3   
100031ec:	int3   
100031ed:	int3   
100031ee:	int3   
100031ef:	int3   
100031f0:	mov    eax,DWORD PTR [esp+0x4]
100031f4:	cmp    eax,0xffffffff
100031f7:	jne    0x10003213
100031f9:	mov    eax,DWORD PTR [ecx]
100031fb:	test   eax,eax
100031fd:	je     0x10003217
100031ff:	push   esi
10003200:	lea    esi,[eax+0x2]
10003203:	mov    dx,WORD PTR [eax]
10003206:	add    eax,0x2
10003209:	test   dx,dx
1000320c:	jne    0x10003203
1000320e:	sub    eax,esi
10003210:	sar    eax,1
10003212:	pop    esi
10003213:	test   eax,eax
10003215:	jl     0x1000322c
10003217:	mov    edx,DWORD PTR [ecx]
10003219:	cmp    eax,DWORD PTR [edx-0x8]
1000321c:	jg     0x1000322c
1000321e:	mov    DWORD PTR [edx-0xc],eax
10003221:	mov    ecx,DWORD PTR [ecx]
10003223:	mov    WORD PTR [ecx+eax*2],0x0
10003229:	ret    0x4
1000322c:	push   0x80070057
10003231:	call   0x10001090
10003236:	int3   
10003237:	int3   
10003238:	int3   
10003239:	int3   
1000323a:	int3   
1000323b:	int3   
1000323c:	int3   
1000323d:	int3   
1000323e:	int3   
1000323f:	int3   
10003240:	push   esi
10003241:	mov    esi,DWORD PTR [esp+0x8]
10003245:	push   edi
10003246:	mov    edi,ecx
10003248:	mov    eax,DWORD PTR [edi]
1000324a:	mov    edx,DWORD PTR [eax-0x8]
1000324d:	sub    eax,0x10
10003250:	mov    ecx,0x1
10003255:	sub    ecx,DWORD PTR [eax+0xc]
10003258:	sub    edx,esi
1000325a:	or     ecx,edx
1000325c:	jge    0x10003266
1000325e:	push   esi
1000325f:	mov    ecx,edi
10003261:	call   0x10004940
10003266:	test   esi,esi
10003268:	jl     0x10003281
1000326a:	mov    eax,DWORD PTR [edi]
1000326c:	cmp    esi,DWORD PTR [eax-0x8]
1000326f:	jg     0x10003281
10003271:	mov    DWORD PTR [eax-0xc],esi
10003274:	mov    eax,DWORD PTR [edi]
10003276:	pop    edi
10003277:	mov    WORD PTR [eax+esi*2],0x0
1000327d:	pop    esi
1000327e:	ret    0x4
10003281:	push   0x80070057
10003286:	call   0x10001090
1000328b:	int3   
1000328c:	int3   
1000328d:	int3   
1000328e:	int3   
1000328f:	int3   
10003290:	push   esi
10003291:	mov    esi,ecx
10003293:	push   edi
10003294:	mov    edi,DWORD PTR [esi]
10003296:	test   edi,edi
10003298:	je     0x100032b2
1000329a:	push   ebx
1000329b:	call   DWORD PTR ds:0x1003407c
100032a1:	push   edi
100032a2:	mov    ebx,eax
100032a4:	call   DWORD PTR ds:0x10034058
100032aa:	push   ebx
100032ab:	call   DWORD PTR ds:0x10034078
100032b1:	pop    ebx
100032b2:	pop    edi
100032b3:	mov    DWORD PTR [esi],0x0
100032b9:	pop    esi
100032ba:	ret    
100032bb:	int3   
100032bc:	int3   
100032bd:	int3   
100032be:	int3   
100032bf:	int3   
100032c0:	mov    eax,ecx
100032c2:	mov    ecx,DWORD PTR [esp+0x4]
100032c6:	mov    DWORD PTR [eax],ecx
100032c8:	ret    0x4
100032cb:	int3   
100032cc:	int3   
100032cd:	int3   
100032ce:	int3   
100032cf:	int3   
100032d0:	mov    eax,ecx
100032d2:	mov    ecx,DWORD PTR [esp+0x4]
100032d6:	mov    edx,DWORD PTR [ecx]
100032d8:	mov    DWORD PTR [ecx],0x0
100032de:	mov    DWORD PTR [eax],edx
100032e0:	ret    0x4
100032e3:	int3   
100032e4:	int3   
100032e5:	int3   
100032e6:	int3   
100032e7:	int3   
100032e8:	int3   
100032e9:	int3   
100032ea:	int3   
100032eb:	int3   
100032ec:	int3   
100032ed:	int3   
100032ee:	int3   
100032ef:	int3   
100032f0:	mov    eax,DWORD PTR [esp+0x4]
100032f4:	push   esi
100032f5:	push   edi
100032f6:	mov    edi,DWORD PTR [eax]
100032f8:	mov    esi,ecx
100032fa:	mov    DWORD PTR [eax],0x0
10003300:	mov    eax,DWORD PTR [esi]
10003302:	cmp    edi,eax
10003304:	je     0x1000330f
10003306:	push   eax
10003307:	call   0x10015b26
1000330c:	add    esp,0x4
1000330f:	mov    DWORD PTR [esi],edi
10003311:	pop    edi
10003312:	mov    eax,esi
10003314:	pop    esi
10003315:	ret    0x4
10003318:	int3   
10003319:	int3   
1000331a:	int3   
1000331b:	int3   
1000331c:	int3   
1000331d:	int3   
1000331e:	int3   
1000331f:	int3   
10003320:	mov    eax,DWORD PTR [ecx]
10003322:	push   eax
10003323:	call   0x10015b26
10003328:	pop    ecx
10003329:	ret    
1000332a:	int3   
1000332b:	int3   
1000332c:	int3   
1000332d:	int3   
1000332e:	int3   
1000332f:	int3   
10003330:	mov    eax,DWORD PTR [ecx]
10003332:	ret    
10003333:	int3   
10003334:	int3   
10003335:	int3   
10003336:	int3   
10003337:	int3   
10003338:	int3   
10003339:	int3   
1000333a:	int3   
1000333b:	int3   
1000333c:	int3   
1000333d:	int3   
1000333e:	int3   
1000333f:	int3   
10003340:	push   ebp
10003341:	mov    ebp,esp
10003343:	and    esp,0xfffffff8
10003346:	push   0xffffffff
10003348:	push   0x1002af90
1000334d:	mov    eax,fs:0x0
10003353:	push   eax
10003354:	sub    esp,0x50
10003357:	mov    eax,ds:0x100951fc
1000335c:	xor    eax,esp
1000335e:	mov    DWORD PTR [esp+0x48],eax
10003362:	push   ebx
10003363:	push   esi
10003364:	push   edi
10003365:	mov    eax,ds:0x100951fc
1000336a:	xor    eax,esp
1000336c:	push   eax
1000336d:	lea    eax,[esp+0x60]
10003371:	mov    fs:0x0,eax
10003377:	mov    eax,ds:0x10097968
1000337c:	mov    esi,DWORD PTR [ebp+0x8]
1000337f:	xor    edi,edi
10003381:	cmp    eax,edi
10003383:	mov    DWORD PTR [esp+0x1c],esi
10003387:	jne    0x10003397
10003389:	push   edi
1000338a:	push   edi
1000338b:	push   edi
1000338c:	call   DWORD PTR ds:0x100340c8
10003392:	mov    ds:0x10097968,eax
10003397:	push   0xffffffff
10003399:	push   eax
1000339a:	call   DWORD PTR ds:0x1003404c
100033a0:	test   eax,eax
100033a2:	je     0x100033ab
100033a4:	mov    eax,esi
100033a6:	jmp    0x10003517
100033ab:	mov    eax,DWORD PTR [ebp+0xc]
100033ae:	push   eax
100033af:	push   esi
100033b0:	lea    ecx,[esp+0x28]
100033b4:	mov    DWORD PTR [esp+0x40],0xf
100033bc:	mov    DWORD PTR [esp+0x3c],edi
100033c0:	mov    BYTE PTR [esp+0x2c],0x0
100033c5:	call   0x10003900
100033ca:	lea    ecx,[esp+0x20]
100033ce:	push   ecx
100033cf:	lea    edx,[esp+0x18]
100033d3:	push   edx
100033d4:	mov    DWORD PTR [esp+0x70],edi
100033d8:	call   0x10003df0
100033dd:	mov    ecx,eax
100033df:	call   0x10004210
100033e4:	call   0x10003df0
100033e9:	mov    esi,DWORD PTR [esp+0x14]
100033ed:	cmp    esi,edi
100033ef:	mov    ebx,DWORD PTR [eax+0x4]
100033f2:	je     0x100033f8
100033f4:	cmp    esi,eax
100033f6:	je     0x100033fd
100033f8:	call   0x10016193
100033fd:	mov    edi,DWORD PTR [esp+0x18]
10003401:	cmp    edi,ebx
10003403:	jne    0x1000347a
10003405:	sub    esp,0x1c
10003408:	mov    ecx,esp
1000340a:	mov    DWORD PTR [esp+0x30],esp
1000340e:	push   0xffffffff
10003410:	push   0x0
10003412:	lea    eax,[esp+0x44]
10003416:	mov    DWORD PTR [ecx+0x18],0xf
1000341d:	mov    DWORD PTR [ecx+0x14],0x0
10003424:	push   eax
10003425:	mov    BYTE PTR [ecx+0x4],0x0
10003429:	call   0x10003820
1000342e:	lea    ecx,[esp+0x58]
10003432:	push   ecx
10003433:	call   0x10003e80
10003438:	add    esp,0x20
1000343b:	lea    edx,[esp+0x20]
1000343f:	push   edx
10003440:	mov    BYTE PTR [esp+0x6c],0x1
10003445:	call   0x10003df0
1000344a:	mov    ecx,eax
1000344c:	call   0x100040b0
10003451:	push   0xffffffff
10003453:	push   0x0
10003455:	lea    ecx,[esp+0x44]
10003459:	push   ecx
1000345a:	mov    ecx,eax
1000345c:	call   0x10003820
10003461:	mov    BYTE PTR [esp+0x68],0x0
10003466:	cmp    DWORD PTR [esp+0x54],0x10
1000346b:	jb     0x1000347a
1000346d:	mov    edx,DWORD PTR [esp+0x40]
10003471:	push   edx
10003472:	call   0x10015b26
10003477:	add    esp,0x4
1000347a:	mov    eax,DWORD PTR [ebp+0x10]
1000347d:	movzx  ecx,BYTE PTR [eax]
10003480:	cmp    ecx,0x100
10003486:	jge    0x100034a3
10003488:	lea    edx,[esp+0x20]
1000348c:	push   edx
1000348d:	lea    eax,[esp+0x18]
10003491:	push   eax
10003492:	call   0x10003df0
10003497:	mov    ecx,eax
10003499:	call   0x10004210
1000349e:	mov    esi,DWORD PTR [eax]
100034a0:	mov    edi,DWORD PTR [eax+0x4]
100034a3:	call   0x10003df0
100034a8:	test   esi,esi
100034aa:	mov    ebx,DWORD PTR [eax+0x4]
100034ad:	je     0x100034b3
100034af:	cmp    esi,eax
100034b1:	je     0x100034b8
100034b3:	call   0x10016193
100034b8:	cmp    edi,ebx
100034ba:	je     0x100034df
100034bc:	test   esi,esi
100034be:	jne    0x100034c5
100034c0:	call   0x10016193
100034c5:	cmp    edi,DWORD PTR [esi+0x4]
100034c8:	jne    0x100034cf
100034ca:	call   0x10016193
100034cf:	cmp    DWORD PTR [edi+0x40],0x10
100034d3:	jb     0x100034da
100034d5:	mov    edi,DWORD PTR [edi+0x2c]
100034d8:	jmp    0x100034e3
100034da:	add    edi,0x2c
100034dd:	jmp    0x100034e3
100034df:	mov    edi,DWORD PTR [esp+0x1c]
100034e3:	mov    eax,ds:0x10097968
100034e8:	test   eax,eax
100034ea:	jne    0x100034fa
100034ec:	push   eax
100034ed:	push   eax
100034ee:	push   eax
100034ef:	call   DWORD PTR ds:0x100340c8
100034f5:	mov    ds:0x10097968,eax
100034fa:	push   eax
100034fb:	call   DWORD PTR ds:0x100340a8
10003501:	cmp    DWORD PTR [esp+0x38],0x10
10003506:	jb     0x10003515
10003508:	mov    ecx,DWORD PTR [esp+0x24]
1000350c:	push   ecx
1000350d:	call   0x10015b26
10003512:	add    esp,0x4
10003515:	mov    eax,edi
10003517:	mov    ecx,DWORD PTR [esp+0x60]
1000351b:	mov    DWORD PTR fs:0x0,ecx
10003522:	pop    ecx
10003523:	pop    edi
10003524:	pop    esi
10003525:	pop    ebx
10003526:	mov    ecx,DWORD PTR [esp+0x48]
1000352a:	xor    ecx,esp
1000352c:	call   0x10015b2b
10003531:	mov    esp,ebp
10003533:	pop    ebp
10003534:	ret    
10003535:	int3   
10003536:	int3   
10003537:	int3   
10003538:	int3   
10003539:	int3   
1000353a:	int3   
1000353b:	int3   
1000353c:	int3   
1000353d:	int3   
1000353e:	int3   
1000353f:	int3   
10003540:	push   ebp
10003541:	mov    ebp,esp
10003543:	and    esp,0xfffffff8
10003546:	push   0xffffffff
10003548:	push   0x1002af50
1000354d:	mov    eax,fs:0x0
10003553:	push   eax
10003554:	sub    esp,0x50
10003557:	mov    eax,ds:0x100951fc
1000355c:	xor    eax,esp
1000355e:	mov    DWORD PTR [esp+0x48],eax
10003562:	push   ebx
10003563:	push   esi
10003564:	push   edi
10003565:	mov    eax,ds:0x100951fc
1000356a:	xor    eax,esp
1000356c:	push   eax
1000356d:	lea    eax,[esp+0x60]
10003571:	mov    fs:0x0,eax
10003577:	mov    eax,ds:0x10097968
1000357c:	mov    esi,DWORD PTR [ebp+0x8]
1000357f:	xor    edi,edi
10003581:	cmp    eax,edi
10003583:	mov    DWORD PTR [esp+0x1c],esi
10003587:	jne    0x10003597
10003589:	push   edi
1000358a:	push   edi
1000358b:	push   edi
1000358c:	call   DWORD PTR ds:0x100340c8
10003592:	mov    ds:0x10097968,eax
10003597:	push   0xffffffff
10003599:	push   eax
1000359a:	call   DWORD PTR ds:0x1003404c
100035a0:	test   eax,eax
100035a2:	je     0x100035ab
100035a4:	mov    eax,esi
100035a6:	jmp    0x10003712
100035ab:	mov    eax,DWORD PTR [ebp+0xc]
100035ae:	push   eax
100035af:	push   esi
100035b0:	lea    ecx,[esp+0x28]
100035b4:	mov    DWORD PTR [esp+0x40],0x7
100035bc:	mov    DWORD PTR [esp+0x3c],edi
100035c0:	mov    WORD PTR [esp+0x2c],di
100035c5:	call   0x10004dc0
100035ca:	lea    ecx,[esp+0x20]
100035ce:	push   ecx
100035cf:	lea    edx,[esp+0x18]
100035d3:	push   edx
100035d4:	mov    DWORD PTR [esp+0x70],edi
100035d8:	call   0x10003f50
100035dd:	mov    ecx,eax
100035df:	call   0x10004420
100035e4:	call   0x10003f50
100035e9:	mov    esi,DWORD PTR [esp+0x14]
100035ed:	cmp    esi,edi
100035ef:	mov    ebx,DWORD PTR [eax+0x4]
100035f2:	je     0x100035f8
100035f4:	cmp    esi,eax
100035f6:	je     0x100035fd
100035f8:	call   0x10016193
100035fd:	mov    edi,DWORD PTR [esp+0x18]
10003601:	cmp    edi,ebx
10003603:	jne    0x10003675
10003605:	sub    esp,0x1c
10003608:	mov    ecx,esp
1000360a:	mov    DWORD PTR [esp+0x30],esp
1000360e:	xor    ebx,ebx
10003610:	push   0xffffffff
10003612:	push   ebx
10003613:	lea    eax,[esp+0x44]
10003617:	mov    DWORD PTR [ecx+0x18],0x7
1000361e:	mov    DWORD PTR [ecx+0x14],ebx
10003621:	push   eax
10003622:	mov    WORD PTR [ecx+0x4],bx
10003626:	call   0x10004cd0
1000362b:	lea    ecx,[esp+0x58]
1000362f:	push   ecx
10003630:	call   0x10003fe0
10003635:	add    esp,0x20
10003638:	lea    edx,[esp+0x20]
1000363c:	push   edx
1000363d:	mov    BYTE PTR [esp+0x6c],0x1
10003642:	call   0x10003f50
10003647:	mov    ecx,eax
10003649:	call   0x100042c0
1000364e:	push   0xffffffff
10003650:	push   ebx
10003651:	lea    ecx,[esp+0x44]
10003655:	push   ecx
10003656:	mov    ecx,eax
10003658:	call   0x10004cd0
1000365d:	mov    BYTE PTR [esp+0x68],bl
10003661:	cmp    DWORD PTR [esp+0x54],0x8
10003666:	jb     0x10003675
10003668:	mov    edx,DWORD PTR [esp+0x40]
1000366c:	push   edx
1000366d:	call   0x10015b26
10003672:	add    esp,0x4
10003675:	mov    eax,DWORD PTR [ebp+0x10]
10003678:	movzx  ecx,BYTE PTR [eax]
1000367b:	cmp    ecx,0x100
10003681:	jge    0x1000369e
10003683:	lea    edx,[esp+0x20]
10003687:	push   edx
10003688:	lea    eax,[esp+0x18]
1000368c:	push   eax
1000368d:	call   0x10003f50
10003692:	mov    ecx,eax
10003694:	call   0x10004420
10003699:	mov    esi,DWORD PTR [eax]
1000369b:	mov    edi,DWORD PTR [eax+0x4]
1000369e:	call   0x10003f50
100036a3:	test   esi,esi
100036a5:	mov    ebx,DWORD PTR [eax+0x4]
100036a8:	je     0x100036ae
100036aa:	cmp    esi,eax
100036ac:	je     0x100036b3
100036ae:	call   0x10016193
100036b3:	cmp    edi,ebx
100036b5:	je     0x100036da
100036b7:	test   esi,esi
100036b9:	jne    0x100036c0
100036bb:	call   0x10016193
100036c0:	cmp    edi,DWORD PTR [esi+0x4]
100036c3:	jne    0x100036ca
100036c5:	call   0x10016193
100036ca:	cmp    DWORD PTR [edi+0x40],0x8
100036ce:	jb     0x100036d5
100036d0:	mov    edi,DWORD PTR [edi+0x2c]
100036d3:	jmp    0x100036de
100036d5:	add    edi,0x2c
100036d8:	jmp    0x100036de
100036da:	mov    edi,DWORD PTR [esp+0x1c]
100036de:	mov    eax,ds:0x10097968
100036e3:	test   eax,eax
100036e5:	jne    0x100036f5
100036e7:	push   eax
100036e8:	push   eax
100036e9:	push   eax
100036ea:	call   DWORD PTR ds:0x100340c8
100036f0:	mov    ds:0x10097968,eax
100036f5:	push   eax
100036f6:	call   DWORD PTR ds:0x100340a8
100036fc:	cmp    DWORD PTR [esp+0x38],0x8
10003701:	jb     0x10003710
10003703:	mov    ecx,DWORD PTR [esp+0x24]
10003707:	push   ecx
10003708:	call   0x10015b26
1000370d:	add    esp,0x4
10003710:	mov    eax,edi
10003712:	mov    ecx,DWORD PTR [esp+0x60]
10003716:	mov    DWORD PTR fs:0x0,ecx
1000371d:	pop    ecx
1000371e:	pop    edi
1000371f:	pop    esi
10003720:	pop    ebx
10003721:	mov    ecx,DWORD PTR [esp+0x48]
10003725:	xor    ecx,esp
10003727:	call   0x10015b2b
1000372c:	mov    esp,ebp
1000372e:	pop    ebp
1000372f:	ret    
10003730:	push   ebx
10003731:	push   ebp
10003732:	mov    ebp,DWORD PTR [esp+0xc]
10003736:	push   edi
10003737:	mov    edi,DWORD PTR [esp+0x14]
1000373b:	cmp    DWORD PTR [ebp+0x14],edi
1000373e:	mov    ebx,eax
10003740:	jae    0x10003747
10003742:	call   0x10015a06
10003747:	mov    eax,DWORD PTR [ebp+0x14]
1000374a:	sub    eax,edi
1000374c:	cmp    eax,ebx
1000374e:	jae    0x10003752
10003750:	mov    ebx,eax
10003752:	mov    eax,DWORD PTR [esi+0x14]
10003755:	or     ecx,0xffffffff
10003758:	sub    ecx,eax
1000375a:	cmp    ecx,ebx
1000375c:	jbe    0x10003765
1000375e:	lea    edx,[eax+ebx*1]
10003761:	cmp    edx,eax
10003763:	jae    0x1000376a
10003765:	call   0x100159c7
1000376a:	test   ebx,ebx
1000376c:	jbe    0x10003816
10003772:	mov    edi,DWORD PTR [esi+0x14]
10003775:	add    edi,ebx
10003777:	cmp    edi,0xfffffffe
1000377a:	jbe    0x10003781
1000377c:	call   0x100159c7
10003781:	mov    eax,DWORD PTR [esi+0x18]
10003784:	cmp    eax,edi
10003786:	jae    0x100037a3
10003788:	mov    eax,DWORD PTR [esi+0x14]
1000378b:	push   eax
1000378c:	push   edi
1000378d:	mov    ecx,esi
1000378f:	call   0x10004620
10003794:	test   edi,edi
10003796:	jbe    0x10003816
10003798:	cmp    DWORD PTR [ebp+0x18],0x10
1000379c:	jb     0x100037cb
1000379e:	mov    ebp,DWORD PTR [ebp+0x4]
100037a1:	jmp    0x100037ce
100037a3:	test   edi,edi
100037a5:	jne    0x10003796
100037a7:	cmp    eax,0x10
100037aa:	mov    DWORD PTR [esi+0x14],edi
100037ad:	jb     0x100037bd
100037af:	mov    eax,DWORD PTR [esi+0x4]
100037b2:	pop    edi
100037b3:	pop    ebp
100037b4:	mov    BYTE PTR [eax],0x0
100037b7:	mov    eax,esi
100037b9:	pop    ebx
100037ba:	ret    0x8
100037bd:	pop    edi
100037be:	lea    eax,[esi+0x4]
100037c1:	pop    ebp
100037c2:	mov    BYTE PTR [eax],0x0
100037c5:	mov    eax,esi
100037c7:	pop    ebx
100037c8:	ret    0x8
100037cb:	add    ebp,0x4
100037ce:	mov    eax,DWORD PTR [esi+0x18]
100037d1:	cmp    eax,0x10
100037d4:	jb     0x100037db
100037d6:	mov    edx,DWORD PTR [esi+0x4]
100037d9:	jmp    0x100037de
100037db:	lea    edx,[esi+0x4]
100037de:	mov    ecx,DWORD PTR [esi+0x14]
100037e1:	push   ebx
100037e2:	mov    ebx,DWORD PTR [esp+0x18]
100037e6:	add    ebp,ebx
100037e8:	sub    eax,ecx
100037ea:	push   ebp
100037eb:	push   eax
100037ec:	add    ecx,edx
100037ee:	push   ecx
100037ef:	call   0x100161a3
100037f4:	add    esp,0x10
100037f7:	cmp    DWORD PTR [esi+0x18],0x10
100037fb:	mov    DWORD PTR [esi+0x14],edi
100037fe:	jb     0x1000380f
10003800:	mov    eax,DWORD PTR [esi+0x4]
10003803:	mov    BYTE PTR [eax+edi*1],0x0
10003807:	pop    edi
10003808:	pop    ebp
10003809:	mov    eax,esi
1000380b:	pop    ebx
1000380c:	ret    0x8
1000380f:	lea    eax,[esi+0x4]
10003812:	mov    BYTE PTR [eax+edi*1],0x0
10003816:	pop    edi
10003817:	pop    ebp
10003818:	mov    eax,esi
1000381a:	pop    ebx
1000381b:	ret    0x8
1000381e:	int3   
1000381f:	int3   
10003820:	push   ebx
10003821:	mov    ebx,DWORD PTR [esp+0x8]
10003825:	push   ebp
10003826:	mov    ebp,DWORD PTR [esp+0x10]
1000382a:	cmp    DWORD PTR [ebx+0x14],ebp
1000382d:	push   esi
1000382e:	push   edi
1000382f:	mov    esi,ecx
10003831:	jae    0x10003838
10003833:	call   0x10015a06
10003838:	mov    edi,DWORD PTR [ebx+0x14]
1000383b:	mov    eax,DWORD PTR [esp+0x1c]
1000383f:	sub    edi,ebp
10003841:	cmp    eax,edi
10003843:	jae    0x10003847
10003845:	mov    edi,eax
10003847:	cmp    esi,ebx
10003849:	jne    0x1000386a
1000384b:	push   0xffffffff
1000384d:	add    edi,ebp
1000384f:	push   edi
10003850:	mov    ecx,esi
10003852:	call   0x10004590
10003857:	push   ebp
10003858:	push   0x0
1000385a:	mov    ecx,esi
1000385c:	call   0x10004590
10003861:	pop    edi
10003862:	mov    eax,esi
10003864:	pop    esi
10003865:	pop    ebp
10003866:	pop    ebx
10003867:	ret    0xc
1000386a:	cmp    edi,0xfffffffe
1000386d:	jbe    0x10003874
1000386f:	call   0x100159c7
10003874:	mov    eax,DWORD PTR [esi+0x18]
10003877:	cmp    eax,edi
10003879:	jae    0x10003896
1000387b:	mov    eax,DWORD PTR [esi+0x14]
1000387e:	push   eax
1000387f:	push   edi
10003880:	mov    ecx,esi
10003882:	call   0x10004620
10003887:	test   edi,edi
10003889:	jbe    0x100038f1
1000388b:	cmp    DWORD PTR [ebx+0x18],0x10
1000388f:	jb     0x100038c0
10003891:	mov    edx,DWORD PTR [ebx+0x4]
10003894:	jmp    0x100038c3
10003896:	test   edi,edi
10003898:	jne    0x10003889
1000389a:	cmp    eax,0x10
1000389d:	mov    DWORD PTR [esi+0x14],edi
100038a0:	jb     0x100038b1
100038a2:	mov    eax,DWORD PTR [esi+0x4]
100038a5:	pop    edi
100038a6:	mov    BYTE PTR [eax],0x0
100038a9:	mov    eax,esi
100038ab:	pop    esi
100038ac:	pop    ebp
100038ad:	pop    ebx
100038ae:	ret    0xc
100038b1:	lea    eax,[esi+0x4]
100038b4:	pop    edi
100038b5:	mov    BYTE PTR [eax],0x0
100038b8:	mov    eax,esi
100038ba:	pop    esi
100038bb:	pop    ebp
100038bc:	pop    ebx
100038bd:	ret    0xc
100038c0:	lea    edx,[ebx+0x4]
100038c3:	mov    ecx,DWORD PTR [esi+0x18]
100038c6:	cmp    ecx,0x10
100038c9:	lea    ebx,[esi+0x4]
100038cc:	jb     0x100038d2
100038ce:	mov    eax,DWORD PTR [ebx]
100038d0:	jmp    0x100038d4
100038d2:	mov    eax,ebx
100038d4:	push   edi
100038d5:	add    edx,ebp
100038d7:	push   edx
100038d8:	push   ecx
100038d9:	push   eax
100038da:	call   0x100161a3
100038df:	add    esp,0x10
100038e2:	cmp    DWORD PTR [esi+0x18],0x10
100038e6:	mov    DWORD PTR [esi+0x14],edi
100038e9:	jb     0x100038ed
100038eb:	mov    ebx,DWORD PTR [ebx]
100038ed:	mov    BYTE PTR [ebx+edi*1],0x0
100038f1:	pop    edi
100038f2:	mov    eax,esi
100038f4:	pop    esi
100038f5:	pop    ebp
100038f6:	pop    ebx
100038f7:	ret    0xc
100038fa:	int3   
100038fb:	int3   
100038fc:	int3   
100038fd:	int3   
100038fe:	int3   
100038ff:	int3   
10003900:	push   ebx
10003901:	push   ebp
10003902:	push   esi
10003903:	mov    esi,ecx
10003905:	mov    ecx,DWORD PTR [esi+0x18]
10003908:	cmp    ecx,0x10
1000390b:	lea    ebx,[esi+0x4]
1000390e:	jb     0x10003914
10003910:	mov    eax,DWORD PTR [ebx]
10003912:	jmp    0x10003916
10003914:	mov    eax,ebx
10003916:	mov    ebp,DWORD PTR [esp+0x10]
1000391a:	cmp    ebp,eax
1000391c:	jb     0x1000394f
1000391e:	cmp    ecx,0x10
10003921:	jb     0x10003927
10003923:	mov    eax,DWORD PTR [ebx]
10003925:	jmp    0x10003929
10003927:	mov    eax,ebx
10003929:	mov    edx,DWORD PTR [esi+0x14]
1000392c:	add    edx,eax
1000392e:	cmp    edx,ebp
10003930:	jbe    0x1000394f
10003932:	cmp    ecx,0x10
10003935:	jb     0x10003939
10003937:	mov    ebx,DWORD PTR [ebx]
10003939:	mov    eax,DWORD PTR [esp+0x14]
1000393d:	push   eax
1000393e:	sub    ebp,ebx
10003940:	push   ebp
10003941:	push   esi
10003942:	mov    ecx,esi
10003944:	call   0x10003820
10003949:	pop    esi
1000394a:	pop    ebp
1000394b:	pop    ebx
1000394c:	ret    0x8
1000394f:	push   edi
10003950:	mov    edi,DWORD PTR [esp+0x18]
10003954:	cmp    edi,0xfffffffe
10003957:	jbe    0x1000395e
10003959:	call   0x100159c7
1000395e:	mov    eax,DWORD PTR [esi+0x18]
10003961:	cmp    eax,edi
10003963:	jae    0x10003981
10003965:	mov    ecx,DWORD PTR [esi+0x14]
10003968:	push   ecx
10003969:	push   edi
1000396a:	mov    ecx,esi
1000396c:	call   0x10004620
10003971:	test   edi,edi
10003973:	jbe    0x100039b8
10003975:	mov    ecx,DWORD PTR [esi+0x18]
10003978:	cmp    ecx,0x10
1000397b:	jb     0x1000399b
1000397d:	mov    eax,DWORD PTR [ebx]
1000397f:	jmp    0x1000399d
10003981:	test   edi,edi
10003983:	jne    0x10003973
10003985:	cmp    eax,0x10
10003988:	mov    DWORD PTR [esi+0x14],edi
1000398b:	jb     0x1000398f
1000398d:	mov    ebx,DWORD PTR [ebx]
1000398f:	pop    edi
10003990:	mov    eax,esi
10003992:	pop    esi
10003993:	pop    ebp
10003994:	mov    BYTE PTR [ebx],0x0
10003997:	pop    ebx
10003998:	ret    0x8
1000399b:	mov    eax,ebx
1000399d:	push   edi
1000399e:	push   ebp
1000399f:	push   ecx
100039a0:	push   eax
100039a1:	call   0x100161a3
100039a6:	add    esp,0x10
100039a9:	cmp    DWORD PTR [esi+0x18],0x10
100039ad:	mov    DWORD PTR [esi+0x14],edi
100039b0:	jb     0x100039b4
100039b2:	mov    ebx,DWORD PTR [ebx]
100039b4:	mov    BYTE PTR [ebx+edi*1],0x0
100039b8:	pop    edi
100039b9:	mov    eax,esi
100039bb:	pop    esi
100039bc:	pop    ebp
100039bd:	pop    ebx
100039be:	ret    0x8
100039c1:	int3   
100039c2:	int3   
100039c3:	int3   
100039c4:	int3   
100039c5:	int3   
100039c6:	int3   
100039c7:	int3   
100039c8:	int3   
100039c9:	int3   
100039ca:	int3   
100039cb:	int3   
100039cc:	int3   
100039cd:	int3   
100039ce:	int3   
100039cf:	int3   
100039d0:	push   ebx
100039d1:	push   ebp
100039d2:	mov    ebp,DWORD PTR [esp+0xc]
100039d6:	push   esi
100039d7:	push   edi
100039d8:	mov    edi,ecx
100039da:	cmp    DWORD PTR [edi+0x14],ebp
100039dd:	jae    0x100039e4
100039df:	call   0x10015a06
100039e4:	mov    eax,DWORD PTR [edi+0x14]
100039e7:	mov    esi,DWORD PTR [esp+0x18]
100039eb:	sub    eax,ebp
100039ed:	cmp    eax,esi
100039ef:	jae    0x100039f3
100039f1:	mov    esi,eax
100039f3:	mov    ebx,DWORD PTR [esp+0x20]
100039f7:	cmp    esi,ebx
100039f9:	mov    eax,esi
100039fb:	jb     0x100039ff
100039fd:	mov    eax,ebx
100039ff:	cmp    DWORD PTR [edi+0x18],0x10
10003a03:	jb     0x10003a0a
10003a05:	mov    edi,DWORD PTR [edi+0x4]
10003a08:	jmp    0x10003a0d
10003a0a:	add    edi,0x4
10003a0d:	push   eax
10003a0e:	mov    eax,DWORD PTR [esp+0x20]
10003a12:	push   eax
10003a13:	add    edi,ebp
10003a15:	push   edi
10003a16:	call   0x100012f0
10003a1b:	add    esp,0xc
10003a1e:	test   eax,eax
10003a20:	jne    0x10003a37
10003a22:	cmp    esi,ebx
10003a24:	jae    0x10003a30
10003a26:	pop    edi
10003a27:	pop    esi
10003a28:	pop    ebp
10003a29:	or     eax,0xffffffff
10003a2c:	pop    ebx
10003a2d:	ret    0x10
10003a30:	xor    eax,eax
10003a32:	cmp    esi,ebx
10003a34:	setne  al
10003a37:	pop    edi
10003a38:	pop    esi
10003a39:	pop    ebp
10003a3a:	pop    ebx
10003a3b:	ret    0x10
10003a3e:	int3   
10003a3f:	int3   
10003a40:	mov    ecx,DWORD PTR [esp+0x4]
10003a44:	sub    esp,0xc
10003a47:	test   ecx,ecx
10003a49:	ja     0x10003a5c
10003a4b:	xor    ecx,ecx
10003a4d:	push   ecx
10003a4e:	call   0x10016464
10003a53:	add    esp,0x4
10003a56:	add    esp,0xc
10003a59:	ret    0x4
10003a5c:	or     eax,0xffffffff
10003a5f:	xor    edx,edx
10003a61:	div    ecx
10003a63:	cmp    eax,0x1
10003a66:	jae    0x10003a4d
10003a68:	lea    eax,[esp+0x10]
10003a6c:	push   eax
10003a6d:	lea    ecx,[esp+0x4]
10003a71:	mov    DWORD PTR [esp+0x14],0x0
10003a79:	call   0x100162be
10003a7e:	push   0x10085d44
10003a83:	lea    ecx,[esp+0x4]
10003a87:	push   ecx
10003a88:	mov    DWORD PTR [esp+0x8],0x1003450c
10003a90:	call   0x1001621e
10003a95:	int3   
10003a96:	int3   
10003a97:	int3   
10003a98:	int3   
10003a99:	int3   
10003a9a:	int3   
10003a9b:	int3   
10003a9c:	int3   
10003a9d:	int3   
10003a9e:	int3   
10003a9f:	int3   
10003aa0:	push   ebx
10003aa1:	mov    ebx,DWORD PTR [esp+0x8]
10003aa5:	test   ebx,ebx
10003aa7:	push   ebp
10003aa8:	push   esi
10003aa9:	push   edi
10003aaa:	mov    edi,ecx
10003aac:	je     0x10003b24
10003aae:	call   DWORD PTR ds:0x1009517c
10003ab4:	mov    ebp,DWORD PTR ds:0x10034080
10003aba:	push   0x0
10003abc:	push   0x0
10003abe:	push   0xffffffff
10003ac0:	push   ebx
10003ac1:	push   0x0
10003ac3:	push   eax
10003ac4:	call   ebp
10003ac6:	mov    esi,eax
10003ac8:	sub    esi,0x1
10003acb:	test   esi,esi
10003acd:	jle    0x10003b24
10003acf:	mov    eax,DWORD PTR [edi]
10003ad1:	mov    edx,DWORD PTR [eax-0x8]
10003ad4:	sub    eax,0x10
10003ad7:	mov    ecx,0x1
10003adc:	sub    ecx,DWORD PTR [eax+0xc]
10003adf:	sub    edx,esi
10003ae1:	or     ecx,edx
10003ae3:	jge    0x10003aed
10003ae5:	push   esi
10003ae6:	mov    ecx,edi
10003ae8:	call   0x10004940
10003aed:	mov    eax,DWORD PTR [edi]
10003aef:	push   esi
10003af0:	push   eax
10003af1:	push   0xffffffff
10003af3:	push   ebx
10003af4:	push   0x0
10003af6:	call   DWORD PTR ds:0x1009517c
10003afc:	push   eax
10003afd:	call   ebp
10003aff:	mov    eax,DWORD PTR [edi]
10003b01:	cmp    esi,DWORD PTR [eax-0x8]
10003b04:	jg     0x10003b1a
10003b06:	mov    DWORD PTR [eax-0xc],esi
10003b09:	mov    eax,DWORD PTR [edi]
10003b0b:	mov    WORD PTR [eax+esi*2],0x0
10003b11:	mov    eax,edi
10003b13:	pop    edi
10003b14:	pop    esi
10003b15:	pop    ebp
10003b16:	pop    ebx
10003b17:	ret    0x4
10003b1a:	push   0x80070057
10003b1f:	call   0x10001090
10003b24:	mov    ecx,edi
10003b26:	call   0x10004820
10003b2b:	mov    eax,edi
10003b2d:	pop    edi
10003b2e:	pop    esi
10003b2f:	pop    ebp
10003b30:	pop    ebx
10003b31:	ret    0x4
10003b34:	int3   
10003b35:	int3   
10003b36:	int3   
10003b37:	int3   
10003b38:	int3   
10003b39:	int3   
10003b3a:	int3   
10003b3b:	int3   
10003b3c:	int3   
10003b3d:	int3   
10003b3e:	int3   
10003b3f:	int3   
10003b40:	mov    eax,DWORD PTR [ecx]
10003b42:	sub    eax,0x10
10003b45:	lea    ecx,[eax+0xc]
10003b48:	or     edx,0xffffffff
10003b4b:	lock xadd DWORD PTR [ecx],edx
10003b4f:	dec    edx
10003b50:	test   edx,edx
10003b52:	jg     0x10003b5e
10003b54:	mov    ecx,DWORD PTR [eax]
10003b56:	mov    edx,DWORD PTR [ecx]
10003b58:	push   eax
10003b59:	mov    eax,DWORD PTR [edx+0x4]
10003b5c:	call   eax
10003b5e:	ret    
10003b5f:	int3   
10003b60:	mov    eax,DWORD PTR [esp+0x4]
10003b64:	push   esi
10003b65:	push   edi
10003b66:	mov    edi,ecx
10003b68:	mov    ecx,DWORD PTR [eax]
10003b6a:	mov    esi,DWORD PTR [edi]
10003b6c:	lea    eax,[ecx-0x10]
10003b6f:	sub    esi,0x10
10003b72:	cmp    eax,esi
10003b74:	je     0x10003bca
10003b76:	cmp    DWORD PTR [esi+0xc],0x0
10003b7a:	push   ebx
10003b7b:	lea    ebx,[esi+0xc]
10003b7e:	jl     0x10003bb6
10003b80:	mov    edx,DWORD PTR [eax]
10003b82:	cmp    edx,DWORD PTR [esi]
10003b84:	jne    0x10003bb6
10003b86:	push   ebp
10003b87:	push   eax
10003b88:	call   0x10004990
10003b8d:	mov    ebp,eax
10003b8f:	add    esp,0x4
10003b92:	or     eax,0xffffffff
10003b95:	lock xadd DWORD PTR [ebx],eax
10003b99:	dec    eax
10003b9a:	test   eax,eax
10003b9c:	jg     0x10003ba8
10003b9e:	mov    ecx,DWORD PTR [esi]
10003ba0:	mov    edx,DWORD PTR [ecx]
10003ba2:	mov    eax,DWORD PTR [edx+0x4]
10003ba5:	push   esi
10003ba6:	call   eax
10003ba8:	add    ebp,0x10
10003bab:	mov    DWORD PTR [edi],ebp
10003bad:	pop    ebp
10003bae:	pop    ebx
10003baf:	mov    eax,edi
10003bb1:	pop    edi
10003bb2:	pop    esi
10003bb3:	ret    0x4
10003bb6:	mov    edx,DWORD PTR [ecx-0xc]
10003bb9:	push   edx
10003bba:	push   ecx
10003bbb:	mov    ecx,edi
10003bbd:	call   0x10004890
10003bc2:	pop    ebx
10003bc3:	mov    eax,edi
10003bc5:	pop    edi
10003bc6:	pop    esi
10003bc7:	ret    0x4
10003bca:	mov    eax,edi
10003bcc:	pop    edi
10003bcd:	pop    esi
10003bce:	ret    0x4
10003bd1:	int3   
10003bd2:	int3   
10003bd3:	int3   
10003bd4:	int3   
10003bd5:	int3   
10003bd6:	int3   
10003bd7:	int3   
10003bd8:	int3   
10003bd9:	int3   
10003bda:	int3   
10003bdb:	int3   
10003bdc:	int3   
10003bdd:	int3   
10003bde:	int3   
10003bdf:	int3   
10003be0:	push   ebx
10003be1:	push   ebp
10003be2:	push   esi
10003be3:	mov    esi,DWORD PTR [esp+0x10]
10003be7:	mov    ebp,ecx
10003be9:	mov    eax,DWORD PTR [ebp+0x0]
10003bec:	mov    ebx,DWORD PTR [eax-0xc]
10003bef:	mov    ecx,DWORD PTR [esp+0x14]
10003bf3:	sub    esi,eax
10003bf5:	mov    edx,0x1
10003bfa:	sub    edx,DWORD PTR [eax-0x4]
10003bfd:	mov    eax,DWORD PTR [eax-0x8]
10003c00:	push   edi
10003c01:	lea    edi,[ebx+ecx*1]
10003c04:	sub    eax,edi
10003c06:	sar    esi,1
10003c08:	or     edx,eax
10003c0a:	jge    0x10003c14
10003c0c:	push   edi
10003c0d:	mov    ecx,ebp
10003c0f:	call   0x10004940
10003c14:	cmp    esi,ebx
10003c16:	mov    ecx,DWORD PTR [ebp+0x0]
10003c19:	ja     0x10003c22
10003c1b:	lea    edx,[ecx+esi*2]
10003c1e:	mov    DWORD PTR [esp+0x14],edx
10003c22:	mov    eax,DWORD PTR [esp+0x18]
10003c26:	mov    edx,DWORD PTR [esp+0x14]
10003c2a:	add    eax,eax
10003c2c:	push   eax
10003c2d:	push   edx
10003c2e:	push   eax
10003c2f:	lea    eax,[ecx+ebx*2]
10003c32:	push   eax
10003c33:	call   0x100161a3
10003c38:	add    esp,0x10
10003c3b:	test   edi,edi
10003c3d:	jl     0x10003c5a
10003c3f:	mov    eax,DWORD PTR [ebp+0x0]
10003c42:	cmp    edi,DWORD PTR [eax-0x8]
10003c45:	jg     0x10003c5a
10003c47:	mov    DWORD PTR [eax-0xc],edi
10003c4a:	mov    ecx,DWORD PTR [ebp+0x0]
10003c4d:	mov    WORD PTR [ecx+edi*2],0x0
10003c53:	pop    edi
10003c54:	pop    esi
10003c55:	pop    ebp
10003c56:	pop    ebx
10003c57:	ret    0x8
10003c5a:	push   0x80070057
10003c5f:	call   0x10001090
10003c64:	int3   
10003c65:	int3   
10003c66:	int3   
10003c67:	int3   
10003c68:	int3   
10003c69:	int3   
10003c6a:	int3   
10003c6b:	int3   
10003c6c:	int3   
10003c6d:	int3   
10003c6e:	int3   
10003c6f:	int3   
10003c70:	mov    eax,DWORD PTR [esp+0x4]
10003c74:	test   eax,eax
10003c76:	jl     0x10003c8d
10003c78:	mov    edx,DWORD PTR [ecx]
10003c7a:	cmp    eax,DWORD PTR [edx-0x8]
10003c7d:	jg     0x10003c8d
10003c7f:	mov    DWORD PTR [edx-0xc],eax
10003c82:	mov    ecx,DWORD PTR [ecx]
10003c84:	mov    WORD PTR [ecx+eax*2],0x0
10003c8a:	ret    0x4
10003c8d:	push   0x80070057
10003c92:	call   0x10001090
10003c97:	int3   
10003c98:	int3   
10003c99:	int3   
10003c9a:	int3   
10003c9b:	int3   
10003c9c:	int3   
10003c9d:	int3   
10003c9e:	int3   
10003c9f:	int3   
10003ca0:	mov    eax,DWORD PTR [esp+0x14]
10003ca4:	push   ebp
10003ca5:	mov    ebp,DWORD PTR [esp+0x8]
10003ca9:	push   esi
10003caa:	mov    esi,DWORD PTR [esp+0x14]
10003cae:	push   edi
10003caf:	lea    edi,[esi+eax*1]
10003cb2:	mov    eax,DWORD PTR [ebp+0x0]
10003cb5:	mov    edx,DWORD PTR [eax-0x8]
10003cb8:	sub    eax,0x10
10003cbb:	mov    ecx,0x1
10003cc0:	sub    ecx,DWORD PTR [eax+0xc]
10003cc3:	sub    edx,edi
10003cc5:	or     ecx,edx
10003cc7:	jge    0x10003cd1
10003cc9:	push   edi
10003cca:	mov    ecx,ebp
10003ccc:	call   0x10004940
10003cd1:	mov    eax,DWORD PTR [esp+0x14]
10003cd5:	push   ebx
10003cd6:	mov    ebx,DWORD PTR [ebp+0x0]
10003cd9:	add    esi,esi
10003cdb:	push   esi
10003cdc:	push   eax
10003cdd:	push   esi
10003cde:	push   ebx
10003cdf:	call   0x100161a3
10003ce4:	mov    eax,DWORD PTR [esp+0x34]
10003ce8:	mov    ecx,DWORD PTR [esp+0x30]
10003cec:	add    eax,eax
10003cee:	push   eax
10003cef:	push   ecx
10003cf0:	push   eax
10003cf1:	add    esi,ebx
10003cf3:	push   esi
10003cf4:	call   0x100161a3
10003cf9:	add    esp,0x20
10003cfc:	test   edi,edi
10003cfe:	pop    ebx
10003cff:	jl     0x10003d19
10003d01:	mov    eax,DWORD PTR [ebp+0x0]
10003d04:	cmp    edi,DWORD PTR [eax-0x8]
10003d07:	jg     0x10003d19
10003d09:	mov    DWORD PTR [eax-0xc],edi
10003d0c:	mov    edx,DWORD PTR [ebp+0x0]
10003d0f:	mov    WORD PTR [edx+edi*2],0x0
10003d15:	pop    edi
10003d16:	pop    esi
10003d17:	pop    ebp
10003d18:	ret    
10003d19:	push   0x80070057
10003d1e:	call   0x10001090
10003d23:	int3   
10003d24:	int3   
10003d25:	int3   
10003d26:	int3   
10003d27:	int3   
10003d28:	int3   
10003d29:	int3   
10003d2a:	int3   
10003d2b:	int3   
10003d2c:	int3   
10003d2d:	int3   
10003d2e:	int3   
10003d2f:	int3   
10003d30:	push   ecx
10003d31:	push   ebx
10003d32:	push   ebp
10003d33:	push   esi
10003d34:	mov    esi,DWORD PTR [ecx]
10003d36:	mov    ebx,DWORD PTR [esi-0xc]
10003d39:	sub    esi,0x10
10003d3c:	mov    DWORD PTR [esp+0xc],ecx
10003d40:	mov    ecx,DWORD PTR [esi]
10003d42:	mov    eax,DWORD PTR [ecx]
10003d44:	mov    edx,DWORD PTR [eax+0x10]
10003d47:	push   edi
10003d48:	call   edx
10003d4a:	mov    edx,DWORD PTR [eax]
10003d4c:	mov    ebp,DWORD PTR [esp+0x18]
10003d50:	push   0x2
10003d52:	mov    ecx,eax
10003d54:	mov    eax,DWORD PTR [edx]
10003d56:	push   ebp
10003d57:	call   eax
10003d59:	mov    edi,eax
10003d5b:	test   edi,edi
10003d5d:	jne    0x10003d64
10003d5f:	call   0x10004930
10003d64:	cmp    ebx,ebp
10003d66:	jge    0x10003d6a
10003d68:	mov    ebp,ebx
10003d6a:	lea    eax,[ebp+ebp*1+0x2]
10003d6e:	push   eax
10003d6f:	lea    ecx,[esi+0x10]
10003d72:	push   ecx
10003d73:	push   eax
10003d74:	lea    ebp,[edi+0x10]
10003d77:	push   ebp
10003d78:	call   0x100161a3
10003d7d:	add    esp,0x10
10003d80:	mov    DWORD PTR [edi+0x4],ebx
10003d83:	lea    edx,[esi+0xc]
10003d86:	or     eax,0xffffffff
10003d89:	lock xadd DWORD PTR [edx],eax
10003d8d:	dec    eax
10003d8e:	test   eax,eax
10003d90:	jg     0x10003d9c
10003d92:	mov    ecx,DWORD PTR [esi]
10003d94:	mov    edx,DWORD PTR [ecx]
10003d96:	mov    eax,DWORD PTR [edx+0x4]
10003d99:	push   esi
10003d9a:	call   eax
10003d9c:	mov    ecx,DWORD PTR [esp+0x10]
10003da0:	pop    edi
10003da1:	pop    esi
10003da2:	mov    DWORD PTR [ecx],ebp
10003da4:	pop    ebp
10003da5:	pop    ebx
10003da6:	pop    ecx
10003da7:	ret    0x4
10003daa:	int3   
10003dab:	int3   
10003dac:	int3   
10003dad:	int3   
10003dae:	int3   
10003daf:	int3   
10003db0:	push   esi
10003db1:	mov    esi,ecx
10003db3:	push   edi
10003db4:	mov    edi,DWORD PTR [esi]
10003db6:	test   edi,edi
10003db8:	je     0x10003ddd
10003dba:	push   ebx
10003dbb:	call   DWORD PTR ds:0x1003407c
10003dc1:	push   edi
10003dc2:	mov    ebx,eax
10003dc4:	call   DWORD PTR ds:0x10034058
10003dca:	push   ebx
10003dcb:	call   DWORD PTR ds:0x10034078
10003dd1:	mov    eax,DWORD PTR [esp+0x10]
10003dd5:	pop    ebx
10003dd6:	pop    edi
10003dd7:	mov    DWORD PTR [esi],eax
10003dd9:	pop    esi
10003dda:	ret    0x4
10003ddd:	mov    ecx,DWORD PTR [esp+0xc]
10003de1:	pop    edi
10003de2:	mov    DWORD PTR [esi],ecx
10003de4:	pop    esi
10003de5:	ret    0x4
10003de8:	int3   
10003de9:	int3   
10003dea:	int3   
10003deb:	int3   
10003dec:	int3   
10003ded:	int3   
10003dee:	int3   
10003def:	int3   
10003df0:	push   0xffffffff
10003df2:	push   0x1002af1e
10003df7:	mov    eax,fs:0x0
10003dfd:	push   eax
10003dfe:	mov    eax,ds:0x100951fc
10003e03:	xor    eax,esp
10003e05:	push   eax
10003e06:	lea    eax,[esp+0x4]
10003e0a:	mov    fs:0x0,eax
10003e10:	test   BYTE PTR ds:0x10097924,0x1
10003e17:	jne    0x10003e69
10003e19:	or     DWORD PTR ds:0x10097924,0x1
10003e20:	mov    ecx,0x10097918
10003e25:	mov    DWORD PTR [esp+0xc],0x0
10003e2d:	call   0x10006850
10003e32:	mov    ds:0x1009791c,eax
10003e37:	mov    BYTE PTR [eax+0x45],0x1
10003e3b:	mov    eax,ds:0x1009791c
10003e40:	mov    DWORD PTR [eax+0x4],eax
10003e43:	mov    eax,ds:0x1009791c
10003e48:	mov    DWORD PTR [eax],eax
10003e4a:	mov    eax,ds:0x1009791c
10003e4f:	mov    DWORD PTR [eax+0x8],eax
10003e52:	push   0x10033af0
10003e57:	mov    DWORD PTR ds:0x10097920,0x0
10003e61:	call   0x10016057
10003e66:	add    esp,0x4
10003e69:	mov    eax,0x10097918
10003e6e:	mov    ecx,DWORD PTR [esp+0x4]
10003e72:	mov    DWORD PTR fs:0x0,ecx
10003e79:	pop    ecx
10003e7a:	add    esp,0xc
10003e7d:	ret    
10003e7e:	int3   
10003e7f:	int3   
10003e80:	push   0xffffffff
10003e82:	push   0x1002aac8
10003e87:	mov    eax,fs:0x0
10003e8d:	push   eax
10003e8e:	push   ecx
10003e8f:	push   ebx
10003e90:	push   ebp
10003e91:	push   esi
10003e92:	push   edi
10003e93:	mov    eax,ds:0x100951fc
10003e98:	xor    eax,esp
10003e9a:	push   eax
10003e9b:	lea    eax,[esp+0x18]
10003e9f:	mov    fs:0x0,eax
10003ea5:	mov    esi,DWORD PTR [esp+0x28]
10003ea9:	xor    eax,eax
10003eab:	mov    DWORD PTR [esp+0x14],eax
10003eaf:	mov    DWORD PTR [esp+0x20],eax
10003eb3:	push   0xffffffff
10003eb5:	mov    DWORD PTR [esi+0x14],eax
10003eb8:	mov    DWORD PTR [esi+0x18],0xf
10003ebf:	lea    ebp,[esi+0x4]
10003ec2:	push   eax
10003ec3:	mov    BYTE PTR [ebp+0x0],al
10003ec6:	lea    eax,[esp+0x34]
10003eca:	push   eax
10003ecb:	mov    ecx,esi
10003ecd:	call   0x10003820
10003ed2:	mov    eax,DWORD PTR [esi+0x14]
10003ed5:	mov    edi,0x1
10003eda:	cmp    eax,edi
10003edc:	jbe    0x10003f1d
10003ede:	cmp    edi,eax
10003ee0:	jbe    0x10003ee7
10003ee2:	call   0x10016193
10003ee7:	cmp    DWORD PTR [esi+0x18],0x10
10003eeb:	jb     0x10003ef2
10003eed:	mov    ebx,DWORD PTR [ebp+0x0]
10003ef0:	jmp    0x10003ef4
10003ef2:	mov    ebx,ebp
10003ef4:	lea    ecx,[edi-0x1]
10003ef7:	cmp    ecx,DWORD PTR [esi+0x14]
10003efa:	jbe    0x10003f01
10003efc:	call   0x10016193
10003f01:	cmp    DWORD PTR [esi+0x18],0x10
10003f05:	jb     0x10003f0c
10003f07:	mov    eax,DWORD PTR [ebp+0x0]
10003f0a:	jmp    0x10003f0e
10003f0c:	mov    eax,ebp
10003f0e:	mov    dl,BYTE PTR [eax+edi*1-0x1]
10003f12:	xor    BYTE PTR [ebx+edi*1],dl
10003f15:	add    edi,0x1
10003f18:	cmp    edi,DWORD PTR [esi+0x14]
10003f1b:	jb     0x10003ee7
10003f1d:	cmp    DWORD PTR [esp+0x44],0x10
10003f22:	jb     0x10003f31
10003f24:	mov    eax,DWORD PTR [esp+0x30]
10003f28:	push   eax
10003f29:	call   0x10015b26
10003f2e:	add    esp,0x4
10003f31:	mov    eax,esi
10003f33:	mov    ecx,DWORD PTR [esp+0x18]
10003f37:	mov    DWORD PTR fs:0x0,ecx
10003f3e:	pop    ecx
10003f3f:	pop    edi
10003f40:	pop    esi
10003f41:	pop    ebp
10003f42:	pop    ebx
10003f43:	add    esp,0x10
10003f46:	ret    
10003f47:	int3   
10003f48:	int3   
10003f49:	int3   
10003f4a:	int3   
10003f4b:	int3   
10003f4c:	int3   
10003f4d:	int3   
10003f4e:	int3   
10003f4f:	int3   
10003f50:	push   0xffffffff
10003f52:	push   0x1002aeee
10003f57:	mov    eax,fs:0x0
10003f5d:	push   eax
10003f5e:	mov    eax,ds:0x100951fc
10003f63:	xor    eax,esp
10003f65:	push   eax
10003f66:	lea    eax,[esp+0x4]
10003f6a:	mov    fs:0x0,eax
10003f70:	test   BYTE PTR ds:0x10097914,0x1
10003f77:	jne    0x10003fc9
10003f79:	or     DWORD PTR ds:0x10097914,0x1
10003f80:	mov    ecx,0x10097908
10003f85:	mov    DWORD PTR [esp+0xc],0x0
10003f8d:	call   0x10006850
10003f92:	mov    ds:0x1009790c,eax
10003f97:	mov    BYTE PTR [eax+0x45],0x1
10003f9b:	mov    eax,ds:0x1009790c
10003fa0:	mov    DWORD PTR [eax+0x4],eax
10003fa3:	mov    eax,ds:0x1009790c
10003fa8:	mov    DWORD PTR [eax],eax
10003faa:	mov    eax,ds:0x1009790c
10003faf:	mov    DWORD PTR [eax+0x8],eax
10003fb2:	push   0x10033aa0
10003fb7:	mov    DWORD PTR ds:0x10097910,0x0
10003fc1:	call   0x10016057
10003fc6:	add    esp,0x4
10003fc9:	mov    eax,0x10097908
10003fce:	mov    ecx,DWORD PTR [esp+0x4]
10003fd2:	mov    DWORD PTR fs:0x0,ecx
10003fd9:	pop    ecx
10003fda:	add    esp,0xc
10003fdd:	ret    
10003fde:	int3   
10003fdf:	int3   
10003fe0:	push   0xffffffff
10003fe2:	push   0x1002a888
10003fe7:	mov    eax,fs:0x0
10003fed:	push   eax
10003fee:	push   ecx
10003fef:	push   ebx
10003ff0:	push   ebp
10003ff1:	push   esi
10003ff2:	push   edi
10003ff3:	mov    eax,ds:0x100951fc
10003ff8:	xor    eax,esp
10003ffa:	push   eax
10003ffb:	lea    eax,[esp+0x18]
10003fff:	mov    fs:0x0,eax
10004005:	mov    esi,DWORD PTR [esp+0x28]
10004009:	xor    eax,eax
1000400b:	mov    DWORD PTR [esp+0x14],eax
1000400f:	mov    DWORD PTR [esp+0x20],eax
10004013:	push   0xffffffff
10004015:	mov    DWORD PTR [esi+0x14],eax
10004018:	mov    DWORD PTR [esi+0x18],0x7
1000401f:	lea    ebp,[esi+0x4]
10004022:	push   eax
10004023:	mov    WORD PTR [ebp+0x0],ax
10004027:	lea    eax,[esp+0x34]
1000402b:	push   eax
1000402c:	mov    ecx,esi
1000402e:	call   0x10004cd0
10004033:	mov    eax,DWORD PTR [esi+0x14]
10004036:	mov    edi,0x1
1000403b:	cmp    eax,edi
1000403d:	jbe    0x10004080
1000403f:	cmp    edi,eax
10004041:	jbe    0x10004048
10004043:	call   0x10016193
10004048:	cmp    DWORD PTR [esi+0x18],0x8
1000404c:	jb     0x10004053
1000404e:	mov    ebx,DWORD PTR [ebp+0x0]
10004051:	jmp    0x10004055
10004053:	mov    ebx,ebp
10004055:	lea    ecx,[edi-0x1]
10004058:	cmp    ecx,DWORD PTR [esi+0x14]
1000405b:	jbe    0x10004062
1000405d:	call   0x10016193
10004062:	cmp    DWORD PTR [esi+0x18],0x8
10004066:	jb     0x1000406d
10004068:	mov    eax,DWORD PTR [ebp+0x0]
1000406b:	jmp    0x1000406f
1000406d:	mov    eax,ebp
1000406f:	mov    dx,WORD PTR [eax+edi*2-0x2]
10004074:	xor    WORD PTR [ebx+edi*2],dx
10004078:	add    edi,0x1
1000407b:	cmp    edi,DWORD PTR [esi+0x14]
1000407e:	jb     0x10004048
10004080:	cmp    DWORD PTR [esp+0x44],0x8
10004085:	jb     0x10004094
10004087:	mov    eax,DWORD PTR [esp+0x30]
1000408b:	push   eax
1000408c:	call   0x10015b26
10004091:	add    esp,0x4
10004094:	mov    eax,esi
10004096:	mov    ecx,DWORD PTR [esp+0x18]
1000409a:	mov    DWORD PTR fs:0x0,ecx
100040a1:	pop    ecx
100040a2:	pop    edi
100040a3:	pop    esi
100040a4:	pop    ebp
100040a5:	pop    ebx
100040a6:	add    esp,0x10
100040a9:	ret    
100040aa:	int3   
100040ab:	int3   
100040ac:	int3   
100040ad:	int3   
100040ae:	int3   
100040af:	int3   
100040b0:	push   ebp
100040b1:	mov    ebp,esp
100040b3:	and    esp,0xfffffff8
100040b6:	push   0xffffffff
100040b8:	push   0x1002aec0
100040bd:	mov    eax,fs:0x0
100040c3:	push   eax
100040c4:	sub    esp,0x60
100040c7:	push   ebx
100040c8:	push   esi
100040c9:	push   edi
100040ca:	mov    eax,ds:0x100951fc
100040cf:	xor    eax,esp
100040d1:	push   eax
100040d2:	lea    eax,[esp+0x70]
100040d6:	mov    fs:0x0,eax
100040dc:	mov    edi,ecx
100040de:	mov    ebx,DWORD PTR [ebp+0x8]
100040e1:	push   ebx
100040e2:	call   0x10005660
100040e7:	test   edi,edi
100040e9:	mov    esi,eax
100040eb:	jne    0x100040f2
100040ed:	call   0x10016193
100040f2:	mov    eax,DWORD PTR [edi+0x4]
100040f5:	cmp    esi,eax
100040f7:	je     0x10004121
100040f9:	cmp    DWORD PTR [esi+0x24],0x10
100040fd:	mov    ecx,DWORD PTR [esi+0x20]
10004100:	jb     0x10004107
10004102:	mov    eax,DWORD PTR [esi+0x10]
10004105:	jmp    0x1000410a
10004107:	lea    eax,[esi+0x10]
1000410a:	push   ecx
1000410b:	push   eax
1000410c:	mov    eax,DWORD PTR [ebx+0x14]
1000410f:	push   eax
10004110:	push   0x0
10004112:	mov    ecx,ebx
10004114:	call   0x100039d0
10004119:	test   eax,eax
1000411b:	jge    0x100041d5
10004121:	xor    eax,eax
10004123:	mov    DWORD PTR [esp+0x30],0xf
1000412b:	mov    DWORD PTR [esp+0x2c],eax
1000412f:	mov    BYTE PTR [esp+0x1c],al
10004133:	lea    ecx,[esp+0x18]
10004137:	push   ecx
10004138:	push   ebx
10004139:	lea    ecx,[esp+0x3c]
1000413d:	mov    DWORD PTR [esp+0x80],eax
10004144:	call   0x10004c50
10004149:	push   eax
1000414a:	push   esi
1000414b:	push   edi
1000414c:	lea    edx,[esp+0x1c]
10004150:	push   edx
10004151:	mov    ecx,edi
10004153:	mov    BYTE PTR [esp+0x88],0x1
1000415b:	call   0x10004a00
10004160:	cmp    DWORD PTR [esp+0x68],0x10
10004165:	mov    edi,DWORD PTR [eax]
10004167:	mov    esi,DWORD PTR [eax+0x4]
1000416a:	jb     0x10004179
1000416c:	mov    eax,DWORD PTR [esp+0x54]
10004170:	push   eax
10004171:	call   0x10015b26
10004176:	add    esp,0x4
10004179:	xor    ebx,ebx
1000417b:	cmp    DWORD PTR [esp+0x4c],0x10
10004180:	mov    DWORD PTR [esp+0x68],0xf
10004188:	mov    DWORD PTR [esp+0x64],ebx
1000418c:	mov    BYTE PTR [esp+0x54],bl
10004190:	jb     0x1000419f
10004192:	mov    ecx,DWORD PTR [esp+0x38]
10004196:	push   ecx
10004197:	call   0x10015b26
1000419c:	add    esp,0x4
1000419f:	cmp    DWORD PTR [esp+0x30],0x10
100041a4:	mov    DWORD PTR [esp+0x4c],0xf
100041ac:	mov    DWORD PTR [esp+0x48],ebx
100041b0:	mov    BYTE PTR [esp+0x38],bl
100041b4:	jb     0x100041c3
100041b6:	mov    edx,DWORD PTR [esp+0x1c]
100041ba:	push   edx
100041bb:	call   0x10015b26
100041c0:	add    esp,0x4
100041c3:	mov    DWORD PTR [esp+0x30],0xf
100041cb:	mov    DWORD PTR [esp+0x2c],ebx
100041cf:	mov    BYTE PTR [esp+0x1c],bl
100041d3:	jmp    0x100041d7
100041d5:	xor    ebx,ebx
100041d7:	cmp    edi,ebx
100041d9:	jne    0x100041e0
100041db:	call   0x10016193
100041e0:	cmp    esi,DWORD PTR [edi+0x4]
100041e3:	jne    0x100041ea
100041e5:	call   0x10016193
100041ea:	lea    eax,[esi+0x28]
100041ed:	mov    ecx,DWORD PTR [esp+0x70]
100041f1:	mov    DWORD PTR fs:0x0,ecx
100041f8:	pop    ecx
100041f9:	pop    edi
100041fa:	pop    esi
100041fb:	pop    ebx
100041fc:	mov    esp,ebp
100041fe:	pop    ebp
100041ff:	ret    0x4
10004202:	int3   
10004203:	int3   
10004204:	int3   
10004205:	int3   
10004206:	int3   
10004207:	int3   
10004208:	int3   
10004209:	int3   
1000420a:	int3   
1000420b:	int3   
1000420c:	int3   
1000420d:	int3   
1000420e:	int3   
1000420f:	int3   
10004210:	sub    esp,0x18
10004213:	push   ebx
10004214:	mov    ebx,DWORD PTR [esp+0x24]
10004218:	push   esi
10004219:	push   edi
1000421a:	push   ebx
1000421b:	mov    esi,ecx
1000421d:	call   0x10005660
10004222:	test   esi,esi
10004224:	mov    edi,eax
10004226:	mov    DWORD PTR [esp+0x14],edi
1000422a:	jne    0x10004231
1000422c:	call   0x10016193
10004231:	cmp    edi,DWORD PTR [esi+0x4]
10004234:	mov    DWORD PTR [esp+0x10],esi
10004238:	je     0x10004264
1000423a:	cmp    DWORD PTR [edi+0x24],0x10
1000423e:	mov    eax,DWORD PTR [edi+0x20]
10004241:	jb     0x10004248
10004243:	mov    edi,DWORD PTR [edi+0x10]
10004246:	jmp    0x1000424b
10004248:	add    edi,0x10
1000424b:	push   eax
1000424c:	mov    eax,DWORD PTR [ebx+0x14]
1000424f:	push   edi
10004250:	push   eax
10004251:	push   0x0
10004253:	mov    ecx,ebx
10004255:	call   0x100039d0
1000425a:	test   eax,eax
1000425c:	jl     0x10004264
1000425e:	lea    ecx,[esp+0x10]
10004262:	jmp    0x10004273
10004264:	mov    ecx,DWORD PTR [esi+0x4]
10004267:	mov    DWORD PTR [esp+0x1c],ecx
1000426b:	mov    DWORD PTR [esp+0x18],esi
1000426f:	lea    ecx,[esp+0x18]
10004273:	mov    edx,DWORD PTR [ecx]
10004275:	mov    eax,DWORD PTR [esp+0x28]
10004279:	mov    ecx,DWORD PTR [ecx+0x4]
1000427c:	pop    edi
1000427d:	pop    esi
1000427e:	mov    DWORD PTR [eax],edx
10004280:	mov    DWORD PTR [eax+0x4],ecx
10004283:	pop    ebx
10004284:	add    esp,0x18
10004287:	ret    0x8
1000428a:	int3   
1000428b:	int3   
1000428c:	int3   
1000428d:	int3   
1000428e:	int3   
1000428f:	int3   
10004290:	push   esi
10004291:	mov    esi,ecx
10004293:	cmp    DWORD PTR [esi+0x18],0x8
10004297:	jb     0x100042a5
10004299:	mov    eax,DWORD PTR [esi+0x4]
1000429c:	push   eax
1000429d:	call   0x10015b26
100042a2:	add    esp,0x4
100042a5:	xor    eax,eax
100042a7:	mov    DWORD PTR [esi+0x18],0x7
100042ae:	mov    DWORD PTR [esi+0x14],eax
100042b1:	mov    WORD PTR [esi+0x4],ax
100042b5:	pop    esi
100042b6:	ret    
100042b7:	int3   
100042b8:	int3   
100042b9:	int3   
100042ba:	int3   
100042bb:	int3   
100042bc:	int3   
100042bd:	int3   
100042be:	int3   
100042bf:	int3   
100042c0:	push   ebp
100042c1:	mov    ebp,esp
100042c3:	and    esp,0xfffffff8
100042c6:	push   0xffffffff
100042c8:	push   0x1002ae90
100042cd:	mov    eax,fs:0x0
100042d3:	push   eax
100042d4:	sub    esp,0x60
100042d7:	push   ebx
100042d8:	push   esi
100042d9:	push   edi
100042da:	mov    eax,ds:0x100951fc
100042df:	xor    eax,esp
100042e1:	push   eax
100042e2:	lea    eax,[esp+0x70]
100042e6:	mov    fs:0x0,eax
100042ec:	mov    edi,ecx
100042ee:	mov    ebx,DWORD PTR [ebp+0x8]
100042f1:	push   ebx
100042f2:	call   0x10005af0
100042f7:	test   edi,edi
100042f9:	mov    esi,eax
100042fb:	jne    0x10004302
100042fd:	call   0x10016193
10004302:	mov    eax,DWORD PTR [edi+0x4]
10004305:	cmp    esi,eax
10004307:	je     0x10004331
10004309:	cmp    DWORD PTR [esi+0x24],0x8
1000430d:	mov    ecx,DWORD PTR [esi+0x20]
10004310:	jb     0x10004317
10004312:	mov    eax,DWORD PTR [esi+0x10]
10004315:	jmp    0x1000431a
10004317:	lea    eax,[esi+0x10]
1000431a:	push   ecx
1000431b:	push   eax
1000431c:	mov    eax,DWORD PTR [ebx+0x14]
1000431f:	push   eax
10004320:	push   0x0
10004322:	mov    ecx,ebx
10004324:	call   0x10006bf0
10004329:	test   eax,eax
1000432b:	jge    0x100043e9
10004331:	xor    eax,eax
10004333:	mov    DWORD PTR [esp+0x30],0x7
1000433b:	mov    DWORD PTR [esp+0x2c],eax
1000433f:	mov    WORD PTR [esp+0x1c],ax
10004344:	lea    ecx,[esp+0x18]
10004348:	push   ecx
10004349:	push   ebx
1000434a:	lea    ecx,[esp+0x3c]
1000434e:	mov    DWORD PTR [esp+0x80],eax
10004355:	call   0x100050f0
1000435a:	push   eax
1000435b:	push   esi
1000435c:	push   edi
1000435d:	lea    edx,[esp+0x1c]
10004361:	push   edx
10004362:	mov    ecx,edi
10004364:	mov    BYTE PTR [esp+0x88],0x1
1000436c:	call   0x10004ea0
10004371:	cmp    DWORD PTR [esp+0x68],0x8
10004376:	mov    edi,DWORD PTR [eax]
10004378:	mov    esi,DWORD PTR [eax+0x4]
1000437b:	jb     0x1000438a
1000437d:	mov    eax,DWORD PTR [esp+0x54]
10004381:	push   eax
10004382:	call   0x10015b26
10004387:	add    esp,0x4
1000438a:	xor    ebx,ebx
1000438c:	cmp    DWORD PTR [esp+0x4c],0x8
10004391:	mov    DWORD PTR [esp+0x68],0x7
10004399:	mov    DWORD PTR [esp+0x64],ebx
1000439d:	mov    WORD PTR [esp+0x54],bx
100043a2:	jb     0x100043b1
100043a4:	mov    ecx,DWORD PTR [esp+0x38]
100043a8:	push   ecx
100043a9:	call   0x10015b26
100043ae:	add    esp,0x4
100043b1:	cmp    DWORD PTR [esp+0x30],0x8
100043b6:	mov    DWORD PTR [esp+0x4c],0x7
100043be:	mov    DWORD PTR [esp+0x48],ebx
100043c2:	mov    WORD PTR [esp+0x38],bx
100043c7:	jb     0x100043d6
100043c9:	mov    edx,DWORD PTR [esp+0x1c]
100043cd:	push   edx
100043ce:	call   0x10015b26
100043d3:	add    esp,0x4
100043d6:	mov    DWORD PTR [esp+0x30],0x7
100043de:	mov    DWORD PTR [esp+0x2c],ebx
100043e2:	mov    WORD PTR [esp+0x1c],bx
100043e7:	jmp    0x100043eb
100043e9:	xor    ebx,ebx
100043eb:	cmp    edi,ebx
100043ed:	jne    0x100043f4
100043ef:	call   0x10016193
100043f4:	cmp    esi,DWORD PTR [edi+0x4]
100043f7:	jne    0x100043fe
100043f9:	call   0x10016193
100043fe:	lea    eax,[esi+0x28]
10004401:	mov    ecx,DWORD PTR [esp+0x70]
10004405:	mov    DWORD PTR fs:0x0,ecx
1000440c:	pop    ecx
1000440d:	pop    edi
1000440e:	pop    esi
1000440f:	pop    ebx
10004410:	mov    esp,ebp
10004412:	pop    ebp
10004413:	ret    0x4
10004416:	int3   
10004417:	int3   
10004418:	int3   
10004419:	int3   
1000441a:	int3   
1000441b:	int3   
1000441c:	int3   
1000441d:	int3   
1000441e:	int3   
1000441f:	int3   
10004420:	sub    esp,0x18
10004423:	push   ebx
10004424:	mov    ebx,DWORD PTR [esp+0x24]
10004428:	push   esi
10004429:	push   edi
1000442a:	push   ebx
1000442b:	mov    esi,ecx
1000442d:	call   0x10005af0
10004432:	test   esi,esi
10004434:	mov    edi,eax
10004436:	mov    DWORD PTR [esp+0x14],edi
1000443a:	jne    0x10004441
1000443c:	call   0x10016193
10004441:	cmp    edi,DWORD PTR [esi+0x4]
10004444:	mov    DWORD PTR [esp+0x10],esi
10004448:	je     0x10004474
1000444a:	cmp    DWORD PTR [edi+0x24],0x8
1000444e:	mov    eax,DWORD PTR [edi+0x20]
10004451:	jb     0x10004458
10004453:	mov    edi,DWORD PTR [edi+0x10]
10004456:	jmp    0x1000445b
10004458:	add    edi,0x10
1000445b:	push   eax
1000445c:	mov    eax,DWORD PTR [ebx+0x14]
1000445f:	push   edi
10004460:	push   eax
10004461:	push   0x0
10004463:	mov    ecx,ebx
10004465:	call   0x10006bf0
1000446a:	test   eax,eax
1000446c:	jl     0x10004474
1000446e:	lea    ecx,[esp+0x10]
10004472:	jmp    0x10004483
10004474:	mov    ecx,DWORD PTR [esi+0x4]
10004477:	mov    DWORD PTR [esp+0x1c],ecx
1000447b:	mov    DWORD PTR [esp+0x18],esi
1000447f:	lea    ecx,[esp+0x18]
10004483:	mov    edx,DWORD PTR [ecx]
10004485:	mov    eax,DWORD PTR [esp+0x28]
10004489:	mov    ecx,DWORD PTR [ecx+0x4]
1000448c:	pop    edi
1000448d:	pop    esi
1000448e:	mov    DWORD PTR [eax],edx
10004490:	mov    DWORD PTR [eax+0x4],ecx
10004493:	pop    ebx
10004494:	add    esp,0x18
10004497:	ret    0x8
1000449a:	int3   
1000449b:	int3   
1000449c:	int3   
1000449d:	int3   
1000449e:	int3   
1000449f:	int3   
100044a0:	push   esi
100044a1:	mov    esi,ecx
100044a3:	mov    eax,DWORD PTR [esi]
100044a5:	test   eax,eax
100044a7:	push   edi
100044a8:	mov    edi,DWORD PTR [esp+0xc]
100044ac:	je     0x100044b2
100044ae:	cmp    eax,DWORD PTR [edi]
100044b0:	je     0x100044b7
100044b2:	call   0x10016193
100044b7:	mov    eax,DWORD PTR [esi+0x4]
100044ba:	xor    ecx,ecx
100044bc:	cmp    eax,DWORD PTR [edi+0x4]
100044bf:	pop    edi
100044c0:	sete   cl
100044c3:	mov    al,cl
100044c5:	pop    esi
100044c6:	ret    0x4
100044c9:	int3   
100044ca:	int3   
100044cb:	int3   
100044cc:	int3   
100044cd:	int3   
100044ce:	int3   
100044cf:	int3   
100044d0:	mov    eax,DWORD PTR [esp+0x4]
100044d4:	push   esi
100044d5:	push   eax
100044d6:	mov    esi,ecx
100044d8:	call   0x10001640
100044dd:	mov    DWORD PTR [esi],0x100344f4
100044e3:	mov    eax,esi
100044e5:	pop    esi
100044e6:	ret    0x4
100044e9:	int3   
100044ea:	int3   
100044eb:	int3   
100044ec:	int3   
100044ed:	int3   
100044ee:	int3   
100044ef:	int3   
100044f0:	push   ebx
100044f1:	push   esi
100044f2:	mov    esi,ecx
100044f4:	cmp    DWORD PTR [esi+0x34],0x10
100044f8:	jb     0x10004506
100044fa:	mov    eax,DWORD PTR [esi+0x20]
100044fd:	push   eax
100044fe:	call   0x10015b26
10004503:	add    esp,0x4
10004506:	xor    ebx,ebx
10004508:	mov    DWORD PTR [esi+0x34],0xf
1000450f:	mov    DWORD PTR [esi+0x30],ebx
10004512:	mov    BYTE PTR [esi+0x20],bl
10004515:	cmp    DWORD PTR [esi+0x18],0x10
10004519:	jb     0x10004527
1000451b:	mov    ecx,DWORD PTR [esi+0x4]
1000451e:	push   ecx
1000451f:	call   0x10015b26
10004524:	add    esp,0x4
10004527:	mov    DWORD PTR [esi+0x14],ebx
1000452a:	mov    DWORD PTR [esi+0x18],0xf
10004531:	mov    BYTE PTR [esi+0x4],bl
10004534:	pop    esi
10004535:	pop    ebx
10004536:	ret    
10004537:	int3   
10004538:	int3   
10004539:	int3   
1000453a:	int3   
1000453b:	int3   
1000453c:	int3   
1000453d:	int3   
1000453e:	int3   
1000453f:	int3   
10004540:	push   esi
10004541:	mov    esi,ecx
10004543:	cmp    DWORD PTR [esi+0x34],0x8
10004547:	push   edi
10004548:	jb     0x10004556
1000454a:	mov    eax,DWORD PTR [esi+0x20]
1000454d:	push   eax
1000454e:	call   0x10015b26
10004553:	add    esp,0x4
10004556:	xor    edi,edi
10004558:	mov    DWORD PTR [esi+0x34],0x7
1000455f:	mov    DWORD PTR [esi+0x30],edi
10004562:	mov    WORD PTR [esi+0x20],di
10004566:	cmp    DWORD PTR [esi+0x18],0x8
1000456a:	jb     0x10004578
1000456c:	mov    ecx,DWORD PTR [esi+0x4]
1000456f:	push   ecx
10004570:	call   0x10015b26
10004575:	add    esp,0x4
10004578:	mov    DWORD PTR [esi+0x14],edi
1000457b:	mov    DWORD PTR [esi+0x18],0x7
10004582:	mov    WORD PTR [esi+0x4],di
10004586:	pop    edi
10004587:	pop    esi
10004588:	ret    
10004589:	int3   
1000458a:	int3   
1000458b:	int3   
1000458c:	int3   
1000458d:	int3   
1000458e:	int3   
1000458f:	int3   
10004590:	push   ebx
10004591:	mov    ebx,DWORD PTR [esp+0x8]
10004595:	push   esi
10004596:	mov    esi,ecx
10004598:	cmp    DWORD PTR [esi+0x14],ebx
1000459b:	push   edi
1000459c:	jae    0x100045a3
1000459e:	call   0x10015a06
100045a3:	mov    eax,DWORD PTR [esi+0x14]
100045a6:	mov    edi,DWORD PTR [esp+0x14]
100045aa:	sub    eax,ebx
100045ac:	cmp    eax,edi
100045ae:	jae    0x100045b2
100045b0:	mov    edi,eax
100045b2:	test   edi,edi
100045b4:	jbe    0x1000460b
100045b6:	mov    ecx,DWORD PTR [esi+0x18]
100045b9:	cmp    ecx,0x10
100045bc:	push   ebp
100045bd:	lea    ebp,[esi+0x4]
100045c0:	jb     0x100045cb
100045c2:	mov    edx,DWORD PTR [ebp+0x0]
100045c5:	mov    DWORD PTR [esp+0x14],edx
100045c9:	jmp    0x100045cf
100045cb:	mov    DWORD PTR [esp+0x14],ebp
100045cf:	cmp    ecx,0x10
100045d2:	jb     0x100045d9
100045d4:	mov    edx,DWORD PTR [ebp+0x0]
100045d7:	jmp    0x100045db
100045d9:	mov    edx,ebp
100045db:	sub    eax,edi
100045dd:	push   eax
100045de:	mov    eax,DWORD PTR [esp+0x18]
100045e2:	add    eax,ebx
100045e4:	add    eax,edi
100045e6:	push   eax
100045e7:	sub    ecx,ebx
100045e9:	push   ecx
100045ea:	add    edx,ebx
100045ec:	push   edx
100045ed:	call   0x100164ce
100045f2:	mov    eax,DWORD PTR [esi+0x14]
100045f5:	sub    eax,edi
100045f7:	add    esp,0x10
100045fa:	cmp    DWORD PTR [esi+0x18],0x10
100045fe:	mov    DWORD PTR [esi+0x14],eax
10004601:	jb     0x10004606
10004603:	mov    ebp,DWORD PTR [ebp+0x0]
10004606:	mov    BYTE PTR [eax+ebp*1],0x0
1000460a:	pop    ebp
1000460b:	pop    edi
1000460c:	mov    eax,esi
1000460e:	pop    esi
1000460f:	pop    ebx
10004610:	ret    0x8
10004613:	int3   
10004614:	int3   
10004615:	int3   
10004616:	int3   
10004617:	int3   
10004618:	int3   
10004619:	int3   
1000461a:	int3   
1000461b:	int3   
1000461c:	int3   
1000461d:	int3   
1000461e:	int3   
1000461f:	int3   
10004620:	push   ebp
10004621:	mov    ebp,esp
10004623:	push   0xffffffff
10004625:	push   0x1002a860
1000462a:	mov    eax,fs:0x0
10004630:	push   eax
10004631:	sub    esp,0x1c
10004634:	push   ebx
10004635:	push   esi
10004636:	push   edi
10004637:	mov    eax,ds:0x100951fc
1000463c:	xor    eax,ebp
1000463e:	push   eax
1000463f:	lea    eax,[ebp-0xc]
10004642:	mov    fs:0x0,eax
10004648:	mov    DWORD PTR [ebp-0x10],esp
1000464b:	mov    edi,ecx
1000464d:	mov    DWORD PTR [ebp-0x14],edi
10004650:	mov    eax,DWORD PTR [ebp+0x8]
10004653:	mov    esi,eax
10004655:	or     esi,0xf
10004658:	cmp    esi,0xfffffffe
1000465b:	jbe    0x10004661
1000465d:	mov    esi,eax
1000465f:	jmp    0x10004683
10004661:	mov    ebx,DWORD PTR [edi+0x18]
10004664:	mov    eax,0xaaaaaaab
10004669:	mul    esi
1000466b:	mov    ecx,ebx
1000466d:	shr    ecx,1
1000466f:	shr    edx,1
10004671:	cmp    edx,ecx
10004673:	jae    0x10004683
10004675:	mov    eax,0xfffffffe
1000467a:	sub    eax,ecx
1000467c:	cmp    ebx,eax
1000467e:	ja     0x10004683
10004680:	lea    esi,[ecx+ebx*1]
10004683:	xor    ebx,ebx
10004685:	lea    ecx,[esi+0x1]
10004688:	cmp    ecx,ebx
1000468a:	mov    DWORD PTR [ebp-0x4],ebx
1000468d:	ja     0x1000469f
1000468f:	xor    ecx,ecx
10004691:	push   ecx
10004692:	call   0x10016464
10004697:	add    esp,0x4
1000469a:	mov    DWORD PTR [ebp+0x8],eax
1000469d:	jmp    0x100046f7
1000469f:	or     eax,0xffffffff
100046a2:	xor    edx,edx
100046a4:	div    ecx
100046a6:	cmp    eax,0x1
100046a9:	jae    0x10004691
100046ab:	lea    ecx,[ebp-0x18]
100046ae:	push   ecx
100046af:	lea    ecx,[ebp-0x28]
100046b2:	mov    DWORD PTR [ebp-0x18],ebx
100046b5:	call   0x100162be
100046ba:	push   0x10085d44
100046bf:	lea    edx,[ebp-0x28]
100046c2:	push   edx
100046c3:	mov    DWORD PTR [ebp-0x28],0x1003450c
100046ca:	call   0x1001621e
100046cf:	mov    eax,DWORD PTR [ebp+0x8]
100046d2:	mov    ecx,DWORD PTR [ebp-0x14]
100046d5:	mov    DWORD PTR [ebp-0x1c],eax
100046d8:	add    eax,0x1
100046db:	mov    DWORD PTR [ebp-0x10],esp
100046de:	push   eax
100046df:	mov    BYTE PTR [ebp-0x4],0x2
100046e3:	call   0x10003a40
100046e8:	mov    DWORD PTR [ebp+0x8],eax
100046eb:	mov    eax,0x100046f1
100046f0:	ret    
100046f1:	mov    edi,DWORD PTR [ebp-0x14]
100046f4:	mov    esi,DWORD PTR [ebp-0x1c]
100046f7:	mov    ebx,DWORD PTR [ebp+0xc]
100046fa:	test   ebx,ebx
100046fc:	jbe    0x1000471e
100046fe:	cmp    DWORD PTR [edi+0x18],0x10
10004702:	jb     0x10004709
10004704:	mov    eax,DWORD PTR [edi+0x4]
10004707:	jmp    0x1000470c
10004709:	lea    eax,[edi+0x4]
1000470c:	mov    ecx,DWORD PTR [ebp+0x8]
1000470f:	push   ebx
10004710:	push   eax
10004711:	lea    eax,[esi+0x1]
10004714:	push   eax
10004715:	push   ecx
10004716:	call   0x100161a3
1000471b:	add    esp,0x10
1000471e:	cmp    DWORD PTR [edi+0x18],0x10
10004722:	jb     0x10004730
10004724:	mov    edx,DWORD PTR [edi+0x4]
10004727:	push   edx
10004728:	call   0x10015b26
1000472d:	add    esp,0x4
10004730:	cmp    esi,0x10
10004733:	mov    ecx,DWORD PTR [ebp+0x8]
10004736:	lea    eax,[edi+0x4]
10004739:	mov    BYTE PTR [eax],0x0
1000473c:	mov    DWORD PTR [eax],ecx
1000473e:	mov    DWORD PTR [edi+0x18],esi
10004741:	mov    DWORD PTR [edi+0x14],ebx
10004744:	jb     0x10004748
10004746:	mov    eax,ecx
10004748:	mov    BYTE PTR [eax+ebx*1],0x0
1000474c:	mov    ecx,DWORD PTR [ebp-0xc]
1000474f:	mov    DWORD PTR fs:0x0,ecx
10004756:	pop    ecx
10004757:	pop    edi
10004758:	pop    esi
10004759:	pop    ebx
1000475a:	mov    esp,ebp
1000475c:	pop    ebp
1000475d:	ret    0x8
10004760:	mov    esi,DWORD PTR [ebp-0x14]
10004763:	cmp    DWORD PTR [esi+0x18],0x10
10004767:	jb     0x10004775
10004769:	mov    eax,DWORD PTR [esi+0x4]
1000476c:	push   eax
1000476d:	call   0x10015b26
10004772:	add    esp,0x4
10004775:	push   0x0
10004777:	mov    DWORD PTR [esi+0x18],0xf
1000477e:	mov    DWORD PTR [esi+0x14],0x0
10004785:	push   0x0
10004787:	mov    BYTE PTR [esi+0x4],0x0
1000478b:	call   0x1001621e
10004790:	int3   
10004791:	int3   
10004792:	int3   
10004793:	int3   
10004794:	int3   
10004795:	int3   
10004796:	int3   
10004797:	int3   
10004798:	int3   
10004799:	int3   
1000479a:	int3   
1000479b:	int3   
1000479c:	int3   
1000479d:	int3   
1000479e:	int3   
1000479f:	int3   
100047a0:	push   edi
100047a1:	mov    edi,ecx
100047a3:	mov    ecx,DWORD PTR [esp+0x10]
100047a7:	test   ecx,ecx
100047a9:	jne    0x100047b5
100047ab:	push   0x80004005
100047b0:	call   0x10001090
100047b5:	push   ebx
100047b6:	mov    ebx,DWORD PTR [esp+0xc]
100047ba:	test   ebx,ebx
100047bc:	push   esi
100047bd:	mov    esi,DWORD PTR [esp+0x14]
100047c1:	jne    0x100047d1
100047c3:	test   esi,esi
100047c5:	je     0x100047d1
100047c7:	push   0x80070057
100047cc:	call   0x10001090
100047d1:	mov    eax,DWORD PTR [ecx]
100047d3:	mov    edx,DWORD PTR [eax]
100047d5:	push   0x2
100047d7:	push   esi
100047d8:	call   edx
100047da:	test   eax,eax
100047dc:	jne    0x100047e3
100047de:	call   0x10004930
100047e3:	add    eax,0x10
100047e6:	test   esi,esi
100047e8:	mov    DWORD PTR [edi],eax
100047ea:	jl     0x100047c7
100047ec:	cmp    esi,DWORD PTR [eax-0x8]
100047ef:	jg     0x100047c7
100047f1:	mov    DWORD PTR [eax-0xc],esi
100047f4:	mov    ecx,DWORD PTR [edi]
100047f6:	lea    eax,[esi+esi*1]
100047f9:	push   eax
100047fa:	push   ebx
100047fb:	mov    WORD PTR [eax+ecx*1],0x0
10004801:	mov    edx,DWORD PTR [edi]
10004803:	push   eax
10004804:	push   edx
10004805:	call   0x100161a3
1000480a:	add    esp,0x10
1000480d:	pop    esi
1000480e:	pop    ebx
1000480f:	mov    eax,edi
10004811:	pop    edi
10004812:	ret    0xc
10004815:	int3   
10004816:	int3   
10004817:	int3   
10004818:	int3   
10004819:	int3   
1000481a:	int3   
1000481b:	int3   
1000481c:	int3   
1000481d:	int3   
1000481e:	int3   
1000481f:	int3   
10004820:	push   esi
10004821:	mov    esi,ecx
10004823:	mov    ecx,DWORD PTR [esi]
10004825:	cmp    DWORD PTR [ecx-0xc],0x0
10004829:	lea    eax,[ecx-0x10]
1000482c:	push   edi
1000482d:	mov    edi,DWORD PTR [eax]
1000482f:	je     0x1000487f
10004831:	cmp    DWORD PTR [eax+0xc],0x0
10004835:	lea    edx,[eax+0xc]
10004838:	jge    0x1000485b
1000483a:	cmp    DWORD PTR [ecx-0x8],0x0
1000483e:	jge    0x1000484a
10004840:	push   0x80070057
10004845:	call   0x10001090
1000484a:	mov    DWORD PTR [ecx-0xc],0x0
10004851:	mov    eax,DWORD PTR [esi]
10004853:	pop    edi
10004854:	mov    WORD PTR [eax],0x0
10004859:	pop    esi
1000485a:	ret    
1000485b:	or     ecx,0xffffffff
1000485e:	lock xadd DWORD PTR [edx],ecx
10004862:	dec    ecx
10004863:	test   ecx,ecx
10004865:	jg     0x10004871
10004867:	mov    ecx,DWORD PTR [eax]
10004869:	mov    edx,DWORD PTR [ecx]
1000486b:	push   eax
1000486c:	mov    eax,DWORD PTR [edx+0x4]
1000486f:	call   eax
10004871:	mov    edx,DWORD PTR [edi]
10004873:	mov    eax,DWORD PTR [edx+0xc]
10004876:	mov    ecx,edi
10004878:	call   eax
1000487a:	add    eax,0x10
1000487d:	mov    DWORD PTR [esi],eax
1000487f:	pop    edi
10004880:	pop    esi
10004881:	ret    
10004882:	int3   
10004883:	int3   
10004884:	int3   
10004885:	int3   
10004886:	int3   
10004887:	int3   
10004888:	int3   
10004889:	int3   
1000488a:	int3   
1000488b:	int3   
1000488c:	int3   
1000488d:	int3   
1000488e:	int3   
1000488f:	int3   
10004890:	push   ebx
10004891:	mov    ebx,DWORD PTR [esp+0xc]
10004895:	test   ebx,ebx
10004897:	push   ebp
10004898:	mov    ebp,ecx
1000489a:	jne    0x100048a6
1000489c:	call   0x10004820
100048a1:	pop    ebp
100048a2:	pop    ebx
100048a3:	ret    0x8
100048a6:	push   esi
100048a7:	mov    esi,DWORD PTR [esp+0x10]
100048ab:	test   esi,esi
100048ad:	jne    0x100048b9
100048af:	push   0x80070057
100048b4:	call   0x10001090
100048b9:	mov    eax,DWORD PTR [ebp+0x0]
100048bc:	mov    edx,DWORD PTR [eax-0x8]
100048bf:	mov    ecx,0x1
100048c4:	sub    ecx,DWORD PTR [eax-0x4]
100048c7:	sub    esi,eax
100048c9:	sub    edx,ebx
100048cb:	sar    esi,1
100048cd:	or     ecx,edx
100048cf:	push   edi
100048d0:	mov    edi,DWORD PTR [eax-0xc]
100048d3:	jge    0x100048dd
100048d5:	push   ebx
100048d6:	mov    ecx,ebp
100048d8:	call   0x10004940
100048dd:	mov    eax,DWORD PTR [ebp+0x0]
100048e0:	cmp    esi,edi
100048e2:	lea    edi,[ebx+ebx*1]
100048e5:	push   edi
100048e6:	ja     0x100048f5
100048e8:	lea    ecx,[eax+esi*2]
100048eb:	push   ecx
100048ec:	push   edi
100048ed:	push   eax
100048ee:	call   0x100164ce
100048f3:	jmp    0x10004901
100048f5:	mov    edx,DWORD PTR [esp+0x18]
100048f9:	push   edx
100048fa:	push   edi
100048fb:	push   eax
100048fc:	call   0x100161a3
10004901:	add    esp,0x10
10004904:	test   ebx,ebx
10004906:	jl     0x10004923
10004908:	mov    eax,DWORD PTR [ebp+0x0]
1000490b:	cmp    ebx,DWORD PTR [eax-0x8]
1000490e:	jg     0x10004923
10004910:	mov    DWORD PTR [eax-0xc],ebx
10004913:	mov    eax,DWORD PTR [ebp+0x0]
10004916:	mov    WORD PTR [edi+eax*1],0x0
1000491c:	pop    edi
1000491d:	pop    esi
1000491e:	pop    ebp
1000491f:	pop    ebx
10004920:	ret    0x8
10004923:	push   0x80070057
10004928:	call   0x10001090
1000492d:	int3   
1000492e:	int3   
1000492f:	int3   
10004930:	push   0x8007000e
10004935:	call   0x10001090
1000493a:	int3   
1000493b:	int3   
1000493c:	int3   
1000493d:	int3   
1000493e:	int3   
1000493f:	int3   
10004940:	mov    eax,DWORD PTR [ecx]
10004942:	mov    edx,DWORD PTR [esp+0x4]
10004946:	sub    eax,0x10
10004949:	push   esi
1000494a:	mov    esi,DWORD PTR [eax+0x4]
1000494d:	cmp    esi,edx
1000494f:	jle    0x10004953
10004951:	mov    edx,esi
10004953:	cmp    DWORD PTR [eax+0xc],0x1
10004957:	pop    esi
10004958:	jle    0x10004963
1000495a:	mov    DWORD PTR [esp+0x4],edx
1000495e:	jmp    0x10003d30
10004963:	mov    eax,DWORD PTR [eax+0x8]
10004966:	cmp    eax,edx
10004968:	jge    0x10004989
1000496a:	cmp    eax,0x400
1000496f:	jle    0x10004978
10004971:	add    eax,0x400
10004976:	jmp    0x1000497a
10004978:	add    eax,eax
1000497a:	cmp    eax,edx
1000497c:	jge    0x10004980
1000497e:	mov    eax,edx
10004980:	mov    DWORD PTR [esp+0x4],eax
10004984:	jmp    0x10005240
10004989:	ret    0x4
1000498c:	int3   
1000498d:	int3   
1000498e:	int3   
1000498f:	int3   
10004990:	push   esi
10004991:	mov    esi,DWORD PTR [esp+0x8]
10004995:	mov    ecx,DWORD PTR [esi]
10004997:	mov    eax,DWORD PTR [ecx]
10004999:	mov    edx,DWORD PTR [eax+0x10]
1000499c:	push   edi
1000499d:	call   edx
1000499f:	cmp    DWORD PTR [esi+0xc],0x0
100049a3:	lea    ecx,[esi+0xc]
100049a6:	jl     0x100049bc
100049a8:	cmp    eax,DWORD PTR [esi]
100049aa:	jne    0x100049bc
100049ac:	mov    edi,esi
100049ae:	mov    eax,0x1
100049b3:	lock xadd DWORD PTR [ecx],eax
100049b7:	mov    eax,edi
100049b9:	pop    edi
100049ba:	pop    esi
100049bb:	ret    
100049bc:	mov    ecx,DWORD PTR [esi+0x4]
100049bf:	mov    edx,DWORD PTR [eax]
100049c1:	mov    edx,DWORD PTR [edx]
100049c3:	push   0x2
100049c5:	push   ecx
100049c6:	mov    ecx,eax
100049c8:	call   edx
100049ca:	mov    edi,eax
100049cc:	test   edi,edi
100049ce:	jne    0x100049d5
100049d0:	jmp    0x10004930
100049d5:	mov    eax,DWORD PTR [esi+0x4]
100049d8:	mov    DWORD PTR [edi+0x4],eax
100049db:	mov    eax,DWORD PTR [esi+0x4]
100049de:	lea    eax,[eax+eax*1+0x2]
100049e2:	push   eax
100049e3:	add    esi,0x10
100049e6:	push   esi
100049e7:	push   eax
100049e8:	lea    ecx,[edi+0x10]
100049eb:	push   ecx
100049ec:	call   0x100161a3
100049f1:	add    esp,0x10
100049f4:	mov    eax,edi
100049f6:	pop    edi
100049f7:	pop    esi
100049f8:	ret    
100049f9:	int3   
100049fa:	int3   
100049fb:	int3   
100049fc:	int3   
100049fd:	int3   
100049fe:	int3   
100049ff:	int3   
10004a00:	push   ebp
10004a01:	mov    ebp,esp
10004a03:	and    esp,0xfffffff8
10004a06:	sub    esp,0x14
10004a09:	push   ebx
10004a0a:	push   esi
10004a0b:	mov    esi,ecx
10004a0d:	cmp    DWORD PTR [esi+0x8],0x0
10004a11:	push   edi
10004a12:	jne    0x10004a34
10004a14:	mov    eax,DWORD PTR [ebp+0x14]
10004a17:	mov    ecx,DWORD PTR [esi+0x4]
10004a1a:	mov    edi,DWORD PTR [ebp+0x8]
10004a1d:	push   eax
10004a1e:	push   ecx
10004a1f:	push   0x1
10004a21:	push   edi
10004a22:	mov    ecx,esi
10004a24:	call   0x10005410
10004a29:	mov    eax,edi
10004a2b:	pop    edi
10004a2c:	pop    esi
10004a2d:	pop    ebx
10004a2e:	mov    esp,ebp
10004a30:	pop    ebp
10004a31:	ret    0x10
10004a34:	mov    edx,DWORD PTR [esi+0x4]
10004a37:	mov    edi,DWORD PTR [ebp+0xc]
10004a3a:	test   edi,edi
10004a3c:	mov    eax,DWORD PTR [edx]
10004a3e:	mov    DWORD PTR [esp+0x18],eax
10004a42:	je     0x10004a48
10004a44:	cmp    edi,esi
10004a46:	je     0x10004a4d
10004a48:	call   0x10016193
10004a4d:	mov    ebx,DWORD PTR [ebp+0x10]
10004a50:	cmp    ebx,DWORD PTR [esp+0x18]
10004a54:	jne    0x10004a87
10004a56:	mov    edi,DWORD PTR [ebp+0x14]
10004a59:	lea    ecx,[ebx+0xc]
10004a5c:	push   ecx
10004a5d:	push   edi
10004a5e:	mov    ecx,esi
10004a60:	call   0x10004c10
10004a65:	test   al,al
10004a67:	je     0x10004be3
10004a6d:	push   edi
10004a6e:	mov    edi,DWORD PTR [ebp+0x8]
10004a71:	push   ebx
10004a72:	push   0x1
10004a74:	push   edi
10004a75:	mov    ecx,esi
10004a77:	call   0x10005410
10004a7c:	mov    eax,edi
10004a7e:	pop    edi
10004a7f:	pop    esi
10004a80:	pop    ebx
10004a81:	mov    esp,ebp
10004a83:	pop    ebp
10004a84:	ret    0x10
10004a87:	test   edi,edi
10004a89:	mov    edx,DWORD PTR [esi+0x4]
10004a8c:	mov    DWORD PTR [esp+0x18],edx
10004a90:	je     0x10004a96
10004a92:	cmp    edi,esi
10004a94:	je     0x10004a9b
10004a96:	call   0x10016193
10004a9b:	cmp    ebx,DWORD PTR [esp+0x18]
10004a9f:	mov    edi,DWORD PTR [ebp+0x14]
10004aa2:	mov    ecx,esi
10004aa4:	jne    0x10004ade
10004aa6:	mov    eax,DWORD PTR [esi+0x4]
10004aa9:	mov    eax,DWORD PTR [eax+0x8]
10004aac:	add    eax,0xc
10004aaf:	push   edi
10004ab0:	push   eax
10004ab1:	call   0x10004c10
10004ab6:	test   al,al
10004ab8:	je     0x10004be3
10004abe:	mov    ecx,DWORD PTR [esi+0x4]
10004ac1:	mov    edx,DWORD PTR [ecx+0x8]
10004ac4:	push   edi
10004ac5:	mov    edi,DWORD PTR [ebp+0x8]
10004ac8:	push   edx
10004ac9:	push   0x0
10004acb:	push   edi
10004acc:	mov    ecx,esi
10004ace:	call   0x10005410
10004ad3:	mov    eax,edi
10004ad5:	pop    edi
10004ad6:	pop    esi
10004ad7:	pop    ebx
10004ad8:	mov    esp,ebp
10004ada:	pop    ebp
10004adb:	ret    0x10
10004ade:	lea    eax,[ebx+0xc]
10004ae1:	push   eax
10004ae2:	push   edi
10004ae3:	call   0x10004c10
10004ae8:	test   al,al
10004aea:	je     0x10004b4f
10004aec:	mov    eax,DWORD PTR [ebp+0xc]
10004aef:	lea    ecx,[esp+0xc]
10004af3:	mov    DWORD PTR [esp+0xc],eax
10004af7:	mov    DWORD PTR [esp+0x10],ebx
10004afb:	call   0x100063d0
10004b00:	mov    ecx,DWORD PTR [esp+0x10]
10004b04:	add    ecx,0xc
10004b07:	push   edi
10004b08:	push   ecx
10004b09:	mov    ecx,esi
10004b0b:	call   0x10004c10
10004b10:	test   al,al
10004b12:	je     0x10004b4f
10004b14:	mov    eax,DWORD PTR [esp+0x10]
10004b18:	mov    edx,DWORD PTR [eax+0x8]
10004b1b:	cmp    BYTE PTR [edx+0x45],0x0
10004b1f:	push   edi
10004b20:	mov    edi,DWORD PTR [ebp+0x8]
10004b23:	mov    ecx,esi
10004b25:	je     0x10004b3b
10004b27:	push   eax
10004b28:	push   0x0
10004b2a:	push   edi
10004b2b:	call   0x10005410
10004b30:	mov    eax,edi
10004b32:	pop    edi
10004b33:	pop    esi
10004b34:	pop    ebx
10004b35:	mov    esp,ebp
10004b37:	pop    ebp
10004b38:	ret    0x10
10004b3b:	push   ebx
10004b3c:	push   0x1
10004b3e:	push   edi
10004b3f:	call   0x10005410
10004b44:	mov    eax,edi
10004b46:	pop    edi
10004b47:	pop    esi
10004b48:	pop    ebx
10004b49:	mov    esp,ebp
10004b4b:	pop    ebp
10004b4c:	ret    0x10
10004b4f:	push   edi
10004b50:	lea    eax,[ebx+0xc]
10004b53:	push   eax
10004b54:	mov    ecx,esi
10004b56:	call   0x10004c10
10004b5b:	test   al,al
10004b5d:	je     0x10004be3
10004b63:	mov    ecx,DWORD PTR [esi+0x4]
10004b66:	mov    eax,DWORD PTR [ebp+0xc]
10004b69:	mov    DWORD PTR [esp+0x18],ecx
10004b6d:	lea    ecx,[esp+0xc]
10004b71:	mov    DWORD PTR [esp+0xc],eax
10004b75:	mov    DWORD PTR [esp+0x10],ebx
10004b79:	mov    DWORD PTR [esp+0x14],esi
10004b7d:	call   0x10006460
10004b82:	lea    edx,[esp+0x14]
10004b86:	push   edx
10004b87:	lea    ecx,[esp+0x10]
10004b8b:	call   0x100044a0
10004b90:	test   al,al
10004b92:	jne    0x10004ba8
10004b94:	mov    eax,DWORD PTR [esp+0x10]
10004b98:	add    eax,0xc
10004b9b:	push   eax
10004b9c:	push   edi
10004b9d:	mov    ecx,esi
10004b9f:	call   0x10004c10
10004ba4:	test   al,al
10004ba6:	je     0x10004be3
10004ba8:	mov    ecx,DWORD PTR [ebx+0x8]
10004bab:	cmp    BYTE PTR [ecx+0x45],0x0
10004baf:	push   edi
10004bb0:	mov    edi,DWORD PTR [ebp+0x8]
10004bb3:	mov    ecx,esi
10004bb5:	je     0x10004bcb
10004bb7:	push   ebx
10004bb8:	push   0x0
10004bba:	push   edi
10004bbb:	call   0x10005410
10004bc0:	mov    eax,edi
10004bc2:	pop    edi
10004bc3:	pop    esi
10004bc4:	pop    ebx
10004bc5:	mov    esp,ebp
10004bc7:	pop    ebp
10004bc8:	ret    0x10
10004bcb:	mov    edx,DWORD PTR [esp+0x14]
10004bcf:	push   edx
10004bd0:	push   0x1
10004bd2:	push   edi
10004bd3:	call   0x10005410
10004bd8:	mov    eax,edi
10004bda:	pop    edi
10004bdb:	pop    esi
10004bdc:	pop    ebx
10004bdd:	mov    esp,ebp
10004bdf:	pop    ebp
10004be0:	ret    0x10
10004be3:	push   edi
10004be4:	lea    eax,[esp+0x18]
10004be8:	push   eax
10004be9:	mov    ecx,esi
10004beb:	call   0x10005280
10004bf0:	mov    edx,DWORD PTR [eax]
10004bf2:	mov    ecx,DWORD PTR [ebp+0x8]
10004bf5:	pop    edi
10004bf6:	mov    DWORD PTR [ecx],edx
10004bf8:	mov    eax,DWORD PTR [eax+0x4]
10004bfb:	pop    esi
10004bfc:	mov    DWORD PTR [ecx+0x4],eax
10004bff:	mov    eax,ecx
10004c01:	pop    ebx
10004c02:	mov    esp,ebp
10004c04:	pop    ebp
10004c05:	ret    0x10
10004c08:	int3   
10004c09:	int3   
10004c0a:	int3   
10004c0b:	int3   
10004c0c:	int3   
10004c0d:	int3   
10004c0e:	int3   
10004c0f:	int3   
10004c10:	mov    eax,DWORD PTR [esp+0x8]
10004c14:	cmp    DWORD PTR [eax+0x18],0x10
10004c18:	mov    ecx,DWORD PTR [eax+0x14]
10004c1b:	jb     0x10004c22
10004c1d:	mov    eax,DWORD PTR [eax+0x4]
10004c20:	jmp    0x10004c25
10004c22:	add    eax,0x4
10004c25:	push   ecx
10004c26:	mov    ecx,DWORD PTR [esp+0x8]
10004c2a:	push   eax
10004c2b:	mov    eax,DWORD PTR [ecx+0x14]
10004c2e:	push   eax
10004c2f:	push   0x0
10004c31:	call   0x100039d0
10004c36:	xor    ecx,ecx
10004c38:	test   eax,eax
10004c3a:	setl   cl
10004c3d:	mov    al,cl
10004c3f:	ret    0x8
10004c42:	int3   
10004c43:	int3   
10004c44:	int3   
10004c45:	int3   
10004c46:	int3   
10004c47:	int3   
10004c48:	int3   
10004c49:	int3   
10004c4a:	int3   
10004c4b:	int3   
10004c4c:	int3   
10004c4d:	int3   
10004c4e:	int3   
10004c4f:	int3   
10004c50:	push   0xffffffff
10004c52:	push   0x1002aa98
10004c57:	mov    eax,fs:0x0
10004c5d:	push   eax
10004c5e:	push   ecx
10004c5f:	push   ebx
10004c60:	push   esi
10004c61:	mov    eax,ds:0x100951fc
10004c66:	xor    eax,esp
10004c68:	push   eax
10004c69:	lea    eax,[esp+0x10]
10004c6d:	mov    fs:0x0,eax
10004c73:	mov    esi,ecx
10004c75:	mov    DWORD PTR [esp+0xc],esi
10004c79:	mov    eax,DWORD PTR [esp+0x20]
10004c7d:	xor    ebx,ebx
10004c7f:	push   0xffffffff
10004c81:	push   ebx
10004c82:	mov    DWORD PTR [esi+0x18],0xf
10004c89:	mov    DWORD PTR [esi+0x14],ebx
10004c8c:	push   eax
10004c8d:	mov    BYTE PTR [esi+0x4],bl
10004c90:	call   0x10003820
10004c95:	mov    edx,DWORD PTR [esp+0x24]
10004c99:	push   0xffffffff
10004c9b:	lea    ecx,[esi+0x1c]
10004c9e:	mov    DWORD PTR [esp+0x1c],ebx
10004ca2:	push   ebx
10004ca3:	mov    DWORD PTR [ecx+0x18],0xf
10004caa:	mov    DWORD PTR [ecx+0x14],ebx
10004cad:	push   edx
10004cae:	mov    BYTE PTR [ecx+0x4],bl
10004cb1:	call   0x10003820
10004cb6:	mov    eax,esi
10004cb8:	mov    ecx,DWORD PTR [esp+0x10]
10004cbc:	mov    DWORD PTR fs:0x0,ecx
10004cc3:	pop    ecx
10004cc4:	pop    esi
10004cc5:	pop    ebx
10004cc6:	add    esp,0x10
10004cc9:	ret    0x8
10004ccc:	int3   
10004ccd:	int3   
10004cce:	int3   
10004ccf:	int3   
10004cd0:	push   ebx
10004cd1:	mov    ebx,DWORD PTR [esp+0xc]
10004cd5:	push   ebp
10004cd6:	mov    ebp,DWORD PTR [esp+0xc]
10004cda:	cmp    DWORD PTR [ebp+0x14],ebx
10004cdd:	push   esi
10004cde:	push   edi
10004cdf:	mov    esi,ecx
10004ce1:	jae    0x10004ce8
10004ce3:	call   0x10015a06
10004ce8:	mov    edi,DWORD PTR [ebp+0x14]
10004ceb:	mov    eax,DWORD PTR [esp+0x1c]
10004cef:	sub    edi,ebx
10004cf1:	cmp    eax,edi
10004cf3:	jae    0x10004cf7
10004cf5:	mov    edi,eax
10004cf7:	cmp    esi,ebp
10004cf9:	jne    0x10004d1a
10004cfb:	push   0xffffffff
10004cfd:	add    edi,ebx
10004cff:	push   edi
10004d00:	mov    ecx,esi
10004d02:	call   0x100056f0
10004d07:	push   ebx
10004d08:	push   0x0
10004d0a:	mov    ecx,esi
10004d0c:	call   0x100056f0
10004d11:	pop    edi
10004d12:	mov    eax,esi
10004d14:	pop    esi
10004d15:	pop    ebp
10004d16:	pop    ebx
10004d17:	ret    0xc
10004d1a:	cmp    edi,0x7ffffffe
10004d20:	jbe    0x10004d27
10004d22:	call   0x100159c7
10004d27:	mov    eax,DWORD PTR [esi+0x18]
10004d2a:	cmp    eax,edi
10004d2c:	jae    0x10004d49
10004d2e:	mov    eax,DWORD PTR [esi+0x14]
10004d31:	push   eax
10004d32:	push   edi
10004d33:	mov    ecx,esi
10004d35:	call   0x10005d00
10004d3a:	test   edi,edi
10004d3c:	jbe    0x10004db6
10004d3e:	cmp    DWORD PTR [ebp+0x18],0x8
10004d42:	jb     0x10004d75
10004d44:	mov    ecx,DWORD PTR [ebp+0x4]
10004d47:	jmp    0x10004d78
10004d49:	test   edi,edi
10004d4b:	jne    0x10004d3c
10004d4d:	cmp    eax,0x8
10004d50:	mov    DWORD PTR [esi+0x14],edi
10004d53:	jb     0x10004d64
10004d55:	mov    eax,DWORD PTR [esi+0x4]
10004d58:	mov    WORD PTR [eax],di
10004d5b:	pop    edi
10004d5c:	mov    eax,esi
10004d5e:	pop    esi
10004d5f:	pop    ebp
10004d60:	pop    ebx
10004d61:	ret    0xc
10004d64:	lea    eax,[esi+0x4]
10004d67:	pop    edi
10004d68:	mov    WORD PTR [eax],0x0
10004d6d:	mov    eax,esi
10004d6f:	pop    esi
10004d70:	pop    ebp
10004d71:	pop    ebx
10004d72:	ret    0xc
10004d75:	lea    ecx,[ebp+0x4]
10004d78:	cmp    DWORD PTR [esi+0x18],0x8
10004d7c:	lea    ebp,[esi+0x4]
10004d7f:	jb     0x10004d86
10004d81:	mov    eax,DWORD PTR [ebp+0x0]
10004d84:	jmp    0x10004d88
10004d86:	mov    eax,ebp
10004d88:	mov    edx,DWORD PTR [esp+0x18]
10004d8c:	lea    ecx,[ecx+edx*2]
10004d8f:	lea    ebx,[edi+edi*1]
10004d92:	push   ebx
10004d93:	push   ecx
10004d94:	mov    ecx,DWORD PTR [esi+0x18]
10004d97:	lea    edx,[ecx+ecx*1]
10004d9a:	push   edx
10004d9b:	push   eax
10004d9c:	call   0x100161a3
10004da1:	add    esp,0x10
10004da4:	cmp    DWORD PTR [esi+0x18],0x8
10004da8:	mov    DWORD PTR [esi+0x14],edi
10004dab:	jb     0x10004db0
10004dad:	mov    ebp,DWORD PTR [ebp+0x0]
10004db0:	mov    WORD PTR [ebx+ebp*1],0x0
10004db6:	pop    edi
10004db7:	mov    eax,esi
10004db9:	pop    esi
10004dba:	pop    ebp
10004dbb:	pop    ebx
10004dbc:	ret    0xc
10004dbf:	int3   
10004dc0:	push   ebp
10004dc1:	push   esi
10004dc2:	mov    esi,ecx
10004dc4:	mov    edx,DWORD PTR [esi+0x18]
10004dc7:	cmp    edx,0x8
10004dca:	push   edi
10004dcb:	lea    ebp,[esi+0x4]
10004dce:	jb     0x10004dd5
10004dd0:	mov    ecx,DWORD PTR [ebp+0x0]
10004dd3:	jmp    0x10004dd7
10004dd5:	mov    ecx,ebp
10004dd7:	mov    eax,DWORD PTR [esp+0x10]
10004ddb:	cmp    eax,ecx
10004ddd:	jb     0x10004e15
10004ddf:	cmp    edx,0x8
10004de2:	jb     0x10004de9
10004de4:	mov    ecx,DWORD PTR [ebp+0x0]
10004de7:	jmp    0x10004deb
10004de9:	mov    ecx,ebp
10004deb:	mov    edi,DWORD PTR [esi+0x14]
10004dee:	lea    ecx,[ecx+edi*2]
10004df1:	cmp    ecx,eax
10004df3:	jbe    0x10004e15
10004df5:	cmp    edx,0x8
10004df8:	jb     0x10004dfd
10004dfa:	mov    ebp,DWORD PTR [ebp+0x0]
10004dfd:	mov    edx,DWORD PTR [esp+0x14]
10004e01:	sub    eax,ebp
10004e03:	push   edx
10004e04:	sar    eax,1
10004e06:	push   eax
10004e07:	push   esi
10004e08:	mov    ecx,esi
10004e0a:	call   0x10004cd0
10004e0f:	pop    edi
10004e10:	pop    esi
10004e11:	pop    ebp
10004e12:	ret    0x8
10004e15:	mov    edi,DWORD PTR [esp+0x14]
10004e19:	cmp    edi,0x7ffffffe
10004e1f:	jbe    0x10004e26
10004e21:	call   0x100159c7
10004e26:	mov    eax,DWORD PTR [esi+0x18]
10004e29:	cmp    eax,edi
10004e2b:	jae    0x10004e4a
10004e2d:	mov    eax,DWORD PTR [esi+0x14]
10004e30:	push   eax
10004e31:	push   edi
10004e32:	mov    ecx,esi
10004e34:	call   0x10005d00
10004e39:	test   edi,edi
10004e3b:	jbe    0x10004e92
10004e3d:	mov    ecx,DWORD PTR [esi+0x18]
10004e40:	cmp    ecx,0x8
10004e43:	jb     0x10004e67
10004e45:	mov    eax,DWORD PTR [ebp+0x0]
10004e48:	jmp    0x10004e69
10004e4a:	test   edi,edi
10004e4c:	jne    0x10004e3b
10004e4e:	cmp    eax,0x8
10004e51:	mov    DWORD PTR [esi+0x14],edi
10004e54:	jb     0x10004e59
10004e56:	mov    ebp,DWORD PTR [ebp+0x0]
10004e59:	pop    edi
10004e5a:	mov    eax,esi
10004e5c:	pop    esi
10004e5d:	mov    WORD PTR [ebp+0x0],0x0
10004e63:	pop    ebp
10004e64:	ret    0x8
10004e67:	mov    eax,ebp
10004e69:	mov    edx,DWORD PTR [esp+0x10]
10004e6d:	push   ebx
10004e6e:	lea    ebx,[edi+edi*1]
10004e71:	push   ebx
10004e72:	push   edx
10004e73:	add    ecx,ecx
10004e75:	push   ecx
10004e76:	push   eax
10004e77:	call   0x100161a3
10004e7c:	add    esp,0x10
10004e7f:	cmp    DWORD PTR [esi+0x18],0x8
10004e83:	mov    DWORD PTR [esi+0x14],edi
10004e86:	jb     0x10004e8b
10004e88:	mov    ebp,DWORD PTR [ebp+0x0]
10004e8b:	mov    WORD PTR [ebx+ebp*1],0x0
10004e91:	pop    ebx
10004e92:	pop    edi
10004e93:	mov    eax,esi
10004e95:	pop    esi
10004e96:	pop    ebp
10004e97:	ret    0x8
10004e9a:	int3   
10004e9b:	int3   
10004e9c:	int3   
10004e9d:	int3   
10004e9e:	int3   
10004e9f:	int3   
10004ea0:	push   ebp
10004ea1:	mov    ebp,esp
10004ea3:	and    esp,0xfffffff8
10004ea6:	sub    esp,0x14
10004ea9:	push   ebx
10004eaa:	push   esi
10004eab:	mov    esi,ecx
10004ead:	cmp    DWORD PTR [esi+0x8],0x0
10004eb1:	push   edi
10004eb2:	jne    0x10004ed4
10004eb4:	mov    eax,DWORD PTR [ebp+0x14]
10004eb7:	mov    ecx,DWORD PTR [esi+0x4]
10004eba:	mov    edi,DWORD PTR [ebp+0x8]
10004ebd:	push   eax
10004ebe:	push   ecx
10004ebf:	push   0x1
10004ec1:	push   edi
10004ec2:	mov    ecx,esi
10004ec4:	call   0x100058a0
10004ec9:	mov    eax,edi
10004ecb:	pop    edi
10004ecc:	pop    esi
10004ecd:	pop    ebx
10004ece:	mov    esp,ebp
10004ed0:	pop    ebp
10004ed1:	ret    0x10
10004ed4:	mov    edx,DWORD PTR [esi+0x4]
10004ed7:	mov    edi,DWORD PTR [ebp+0xc]
10004eda:	test   edi,edi
10004edc:	mov    eax,DWORD PTR [edx]
10004ede:	mov    DWORD PTR [esp+0x18],eax
10004ee2:	je     0x10004ee8
10004ee4:	cmp    edi,esi
10004ee6:	je     0x10004eed
10004ee8:	call   0x10016193
10004eed:	mov    ebx,DWORD PTR [ebp+0x10]
10004ef0:	cmp    ebx,DWORD PTR [esp+0x18]
10004ef4:	jne    0x10004f27
10004ef6:	mov    edi,DWORD PTR [ebp+0x14]
10004ef9:	lea    ecx,[ebx+0xc]
10004efc:	push   ecx
10004efd:	push   edi
10004efe:	mov    ecx,esi
10004f00:	call   0x100050b0
10004f05:	test   al,al
10004f07:	je     0x10005083
10004f0d:	push   edi
10004f0e:	mov    edi,DWORD PTR [ebp+0x8]
10004f11:	push   ebx
10004f12:	push   0x1
10004f14:	push   edi
10004f15:	mov    ecx,esi
10004f17:	call   0x100058a0
10004f1c:	mov    eax,edi
10004f1e:	pop    edi
10004f1f:	pop    esi
10004f20:	pop    ebx
10004f21:	mov    esp,ebp
10004f23:	pop    ebp
10004f24:	ret    0x10
10004f27:	test   edi,edi
10004f29:	mov    edx,DWORD PTR [esi+0x4]
10004f2c:	mov    DWORD PTR [esp+0x18],edx
10004f30:	je     0x10004f36
10004f32:	cmp    edi,esi
10004f34:	je     0x10004f3b
10004f36:	call   0x10016193
10004f3b:	cmp    ebx,DWORD PTR [esp+0x18]
10004f3f:	mov    edi,DWORD PTR [ebp+0x14]
10004f42:	mov    ecx,esi
10004f44:	jne    0x10004f7e
10004f46:	mov    eax,DWORD PTR [esi+0x4]
10004f49:	mov    eax,DWORD PTR [eax+0x8]
10004f4c:	add    eax,0xc
10004f4f:	push   edi
10004f50:	push   eax
10004f51:	call   0x100050b0
10004f56:	test   al,al
10004f58:	je     0x10005083
10004f5e:	mov    ecx,DWORD PTR [esi+0x4]
10004f61:	mov    edx,DWORD PTR [ecx+0x8]
10004f64:	push   edi
10004f65:	mov    edi,DWORD PTR [ebp+0x8]
10004f68:	push   edx
10004f69:	push   0x0
10004f6b:	push   edi
10004f6c:	mov    ecx,esi
10004f6e:	call   0x100058a0
10004f73:	mov    eax,edi
10004f75:	pop    edi
10004f76:	pop    esi
10004f77:	pop    ebx
10004f78:	mov    esp,ebp
10004f7a:	pop    ebp
10004f7b:	ret    0x10
10004f7e:	lea    eax,[ebx+0xc]
10004f81:	push   eax
10004f82:	push   edi
10004f83:	call   0x100050b0
10004f88:	test   al,al
10004f8a:	je     0x10004fef
10004f8c:	mov    eax,DWORD PTR [ebp+0xc]
10004f8f:	lea    ecx,[esp+0xc]
10004f93:	mov    DWORD PTR [esp+0xc],eax
10004f97:	mov    DWORD PTR [esp+0x10],ebx
10004f9b:	call   0x100063d0
10004fa0:	mov    ecx,DWORD PTR [esp+0x10]
10004fa4:	add    ecx,0xc
10004fa7:	push   edi
10004fa8:	push   ecx
10004fa9:	mov    ecx,esi
10004fab:	call   0x100050b0
10004fb0:	test   al,al
10004fb2:	je     0x10004fef
10004fb4:	mov    eax,DWORD PTR [esp+0x10]
10004fb8:	mov    edx,DWORD PTR [eax+0x8]
10004fbb:	cmp    BYTE PTR [edx+0x45],0x0
10004fbf:	push   edi
10004fc0:	mov    edi,DWORD PTR [ebp+0x8]
10004fc3:	mov    ecx,esi
10004fc5:	je     0x10004fdb
10004fc7:	push   eax
10004fc8:	push   0x0
10004fca:	push   edi
10004fcb:	call   0x100058a0
10004fd0:	mov    eax,edi
10004fd2:	pop    edi
10004fd3:	pop    esi
10004fd4:	pop    ebx
10004fd5:	mov    esp,ebp
10004fd7:	pop    ebp
10004fd8:	ret    0x10
10004fdb:	push   ebx
10004fdc:	push   0x1
10004fde:	push   edi
10004fdf:	call   0x100058a0
10004fe4:	mov    eax,edi
10004fe6:	pop    edi
10004fe7:	pop    esi
10004fe8:	pop    ebx
10004fe9:	mov    esp,ebp
10004feb:	pop    ebp
10004fec:	ret    0x10
10004fef:	push   edi
10004ff0:	lea    eax,[ebx+0xc]
10004ff3:	push   eax
10004ff4:	mov    ecx,esi
10004ff6:	call   0x100050b0
10004ffb:	test   al,al
10004ffd:	je     0x10005083
10005003:	mov    ecx,DWORD PTR [esi+0x4]
10005006:	mov    eax,DWORD PTR [ebp+0xc]
10005009:	mov    DWORD PTR [esp+0x18],ecx
1000500d:	lea    ecx,[esp+0xc]
10005011:	mov    DWORD PTR [esp+0xc],eax
10005015:	mov    DWORD PTR [esp+0x10],ebx
10005019:	mov    DWORD PTR [esp+0x14],esi
1000501d:	call   0x10006460
10005022:	lea    edx,[esp+0x14]
10005026:	push   edx
10005027:	lea    ecx,[esp+0x10]
1000502b:	call   0x100044a0
10005030:	test   al,al
10005032:	jne    0x10005048
10005034:	mov    eax,DWORD PTR [esp+0x10]
10005038:	add    eax,0xc
1000503b:	push   eax
1000503c:	push   edi
1000503d:	mov    ecx,esi
1000503f:	call   0x100050b0
10005044:	test   al,al
10005046:	je     0x10005083
10005048:	mov    ecx,DWORD PTR [ebx+0x8]
1000504b:	cmp    BYTE PTR [ecx+0x45],0x0
1000504f:	push   edi
10005050:	mov    edi,DWORD PTR [ebp+0x8]
10005053:	mov    ecx,esi
10005055:	je     0x1000506b
10005057:	push   ebx
10005058:	push   0x0
1000505a:	push   edi
1000505b:	call   0x100058a0
10005060:	mov    eax,edi
10005062:	pop    edi
10005063:	pop    esi
10005064:	pop    ebx
10005065:	mov    esp,ebp
10005067:	pop    ebp
10005068:	ret    0x10
1000506b:	mov    edx,DWORD PTR [esp+0x14]
1000506f:	push   edx
10005070:	push   0x1
10005072:	push   edi
10005073:	call   0x100058a0
10005078:	mov    eax,edi
1000507a:	pop    edi
1000507b:	pop    esi
1000507c:	pop    ebx
1000507d:	mov    esp,ebp
1000507f:	pop    ebp
10005080:	ret    0x10
10005083:	push   edi
10005084:	lea    eax,[esp+0x18]
10005088:	push   eax
10005089:	mov    ecx,esi
1000508b:	call   0x10005790
10005090:	mov    edx,DWORD PTR [eax]
10005092:	mov    ecx,DWORD PTR [ebp+0x8]
10005095:	pop    edi
10005096:	mov    DWORD PTR [ecx],edx
10005098:	mov    eax,DWORD PTR [eax+0x4]
1000509b:	pop    esi
1000509c:	mov    DWORD PTR [ecx+0x4],eax
1000509f:	mov    eax,ecx
100050a1:	pop    ebx
100050a2:	mov    esp,ebp
100050a4:	pop    ebp
100050a5:	ret    0x10
100050a8:	int3   
100050a9:	int3   
100050aa:	int3   
100050ab:	int3   
100050ac:	int3   
100050ad:	int3   
100050ae:	int3   
100050af:	int3   
100050b0:	mov    eax,DWORD PTR [esp+0x8]
100050b4:	cmp    DWORD PTR [eax+0x18],0x8
100050b8:	mov    ecx,DWORD PTR [eax+0x14]
100050bb:	jb     0x100050c2
100050bd:	mov    eax,DWORD PTR [eax+0x4]
100050c0:	jmp    0x100050c5
100050c2:	add    eax,0x4
100050c5:	push   ecx
100050c6:	mov    ecx,DWORD PTR [esp+0x8]
100050ca:	push   eax
100050cb:	mov    eax,DWORD PTR [ecx+0x14]
100050ce:	push   eax
100050cf:	push   0x0
100050d1:	call   0x10006bf0
100050d6:	xor    ecx,ecx
100050d8:	test   eax,eax
100050da:	setl   cl
100050dd:	mov    al,cl
100050df:	ret    0x8
100050e2:	int3   
100050e3:	int3   
100050e4:	int3   
100050e5:	int3   
100050e6:	int3   
100050e7:	int3   
100050e8:	int3   
100050e9:	int3   
100050ea:	int3   
100050eb:	int3   
100050ec:	int3   
100050ed:	int3   
100050ee:	int3   
100050ef:	int3   
100050f0:	push   0xffffffff
100050f2:	push   0x1002aa68
100050f7:	mov    eax,fs:0x0
100050fd:	push   eax
100050fe:	push   ecx
100050ff:	push   esi
10005100:	push   edi
10005101:	mov    eax,ds:0x100951fc
10005106:	xor    eax,esp
10005108:	push   eax
10005109:	lea    eax,[esp+0x10]
1000510d:	mov    fs:0x0,eax
10005113:	mov    esi,ecx
10005115:	mov    DWORD PTR [esp+0xc],esi
10005119:	mov    eax,DWORD PTR [esp+0x20]
1000511d:	xor    edi,edi
1000511f:	push   0xffffffff
10005121:	push   edi
10005122:	mov    DWORD PTR [esi+0x18],0x7
10005129:	mov    DWORD PTR [esi+0x14],edi
1000512c:	push   eax
1000512d:	mov    WORD PTR [esi+0x4],di
10005131:	call   0x10004cd0
10005136:	mov    edx,DWORD PTR [esp+0x24]
1000513a:	push   0xffffffff
1000513c:	lea    ecx,[esi+0x1c]
1000513f:	mov    DWORD PTR [esp+0x1c],edi
10005143:	push   edi
10005144:	mov    DWORD PTR [ecx+0x18],0x7
1000514b:	mov    DWORD PTR [ecx+0x14],edi
1000514e:	push   edx
1000514f:	mov    WORD PTR [ecx+0x4],di
10005153:	call   0x10004cd0
10005158:	mov    eax,esi
1000515a:	mov    ecx,DWORD PTR [esp+0x10]
1000515e:	mov    DWORD PTR fs:0x0,ecx
10005165:	pop    ecx
10005166:	pop    edi
10005167:	pop    esi
10005168:	add    esp,0x10
1000516b:	ret    0x8
1000516e:	int3   
1000516f:	int3   
10005170:	push   ebx
10005171:	push   esi
10005172:	mov    esi,DWORD PTR [esp+0x10]
10005176:	mov    eax,esi
10005178:	shr    eax,0x4
1000517b:	push   edi
1000517c:	mov    edi,DWORD PTR [esp+0x10]
10005180:	add    eax,0x1
10005183:	mov    ebx,ecx
10005185:	movzx  ecx,ax
10005188:	push   0x6
1000518a:	push   ecx
1000518b:	push   edi
1000518c:	call   DWORD PTR ds:0x10034084
10005192:	test   eax,eax
10005194:	je     0x100051a7
10005196:	push   esi
10005197:	push   eax
10005198:	push   edi
10005199:	call   0x10001180
1000519e:	mov    esi,eax
100051a0:	add    esp,0xc
100051a3:	test   esi,esi
100051a5:	jne    0x100051af
100051a7:	pop    edi
100051a8:	pop    esi
100051a9:	xor    eax,eax
100051ab:	pop    ebx
100051ac:	ret    0x8
100051af:	mov    eax,DWORD PTR [ebx]
100051b1:	movzx  edi,WORD PTR [esi]
100051b4:	sub    eax,0x10
100051b7:	mov    edx,0x1
100051bc:	sub    edx,DWORD PTR [eax+0xc]
100051bf:	mov    eax,DWORD PTR [eax+0x8]
100051c2:	sub    eax,edi
100051c4:	or     edx,eax
100051c6:	jge    0x100051d0
100051c8:	push   edi
100051c9:	mov    ecx,ebx
100051cb:	call   0x10004940
100051d0:	movzx  eax,WORD PTR [esi]
100051d3:	cmp    eax,0xffffffff
100051d6:	push   ebp
100051d7:	mov    ebp,DWORD PTR [ebx]
100051d9:	lea    edx,[esi+0x2]
100051dc:	jne    0x100051f5
100051de:	mov    eax,edx
100051e0:	lea    esi,[eax+0x2]
100051e3:	mov    cx,WORD PTR [eax]
100051e6:	add    eax,0x2
100051e9:	test   cx,cx
100051ec:	jne    0x100051e3
100051ee:	sub    eax,esi
100051f0:	sar    eax,1
100051f2:	add    eax,0x1
100051f5:	lea    ecx,[eax+eax*1]
100051f8:	push   ecx
100051f9:	push   edx
100051fa:	lea    esi,[edi+edi*1]
100051fd:	push   esi
100051fe:	push   ebp
100051ff:	call   0x100161a3
10005204:	push   eax
10005205:	call   0x100010b0
1000520a:	add    esp,0x14
1000520d:	test   edi,edi
1000520f:	pop    ebp
10005210:	jl     0x1000522f
10005212:	mov    eax,DWORD PTR [ebx]
10005214:	cmp    edi,DWORD PTR [eax-0x8]
10005217:	jg     0x1000522f
10005219:	mov    DWORD PTR [eax-0xc],edi
1000521c:	mov    edx,DWORD PTR [ebx]
1000521e:	pop    edi
1000521f:	mov    WORD PTR [esi+edx*1],0x0
10005225:	pop    esi
10005226:	mov    eax,0x1
1000522b:	pop    ebx
1000522c:	ret    0x8
1000522f:	push   0x80070057
10005234:	call   0x10001090
10005239:	int3   
1000523a:	int3   
1000523b:	int3   
1000523c:	int3   
1000523d:	int3   
1000523e:	int3   
1000523f:	int3   
10005240:	mov    edx,DWORD PTR [esp+0x4]
10005244:	push   esi
10005245:	mov    esi,ecx
10005247:	mov    eax,DWORD PTR [esi]
10005249:	mov    ecx,DWORD PTR [eax-0x10]
1000524c:	sub    eax,0x10
1000524f:	cmp    DWORD PTR [eax+0x8],edx
10005252:	jge    0x10005269
10005254:	test   edx,edx
10005256:	jle    0x10005269
10005258:	push   edi
10005259:	mov    edi,DWORD PTR [ecx]
1000525b:	push   0x2
1000525d:	push   edx
1000525e:	push   eax
1000525f:	mov    eax,DWORD PTR [edi+0x8]
10005262:	call   eax
10005264:	test   eax,eax
10005266:	pop    edi
10005267:	jne    0x1000526e
10005269:	call   0x10004930
1000526e:	add    eax,0x10
10005271:	mov    DWORD PTR [esi],eax
10005273:	pop    esi
10005274:	ret    0x4
10005277:	int3   
10005278:	int3   
10005279:	int3   
1000527a:	int3   
1000527b:	int3   
1000527c:	int3   
1000527d:	int3   
1000527e:	int3   
1000527f:	int3   
10005280:	push   ebp
10005281:	mov    ebp,esp
10005283:	and    esp,0xfffffff8
10005286:	sub    esp,0x24
10005289:	push   ebx
1000528a:	push   esi
1000528b:	push   edi
1000528c:	mov    edi,ecx
1000528e:	mov    eax,DWORD PTR [edi+0x4]
10005291:	mov    esi,DWORD PTR [eax+0x4]
10005294:	cmp    BYTE PTR [esi+0x45],0x0
10005298:	mov    ecx,eax
1000529a:	mov    al,0x1
1000529c:	mov    DWORD PTR [esp+0x28],edi
100052a0:	mov    DWORD PTR [esp+0x10],ecx
100052a4:	mov    BYTE PTR [esp+0x18],al
100052a8:	jne    0x10005348
100052ae:	mov    edx,DWORD PTR [ebp+0xc]
100052b1:	mov    eax,DWORD PTR [edx+0x14]
100052b4:	mov    ecx,DWORD PTR [edx+0x18]
100052b7:	mov    DWORD PTR [esp+0x20],eax
100052bb:	mov    DWORD PTR [esp+0x1c],eax
100052bf:	mov    DWORD PTR [esp+0x24],ecx
100052c3:	jmp    0x100052cc
100052c5:	mov    edx,DWORD PTR [ebp+0xc]
100052c8:	mov    eax,DWORD PTR [esp+0x1c]
100052cc:	cmp    DWORD PTR [esi+0x24],0x10
100052d0:	mov    ebx,DWORD PTR [esi+0x20]
100052d3:	mov    DWORD PTR [esp+0x10],esi
100052d7:	jb     0x100052de
100052d9:	mov    ecx,DWORD PTR [esi+0x10]
100052dc:	jmp    0x100052e1
100052de:	lea    ecx,[esi+0x10]
100052e1:	mov    edi,DWORD PTR [esp+0x20]
100052e5:	cmp    eax,edi
100052e7:	mov    DWORD PTR [esp+0x14],ecx
100052eb:	jae    0x100052ef
100052ed:	mov    edi,eax
100052ef:	cmp    edi,ebx
100052f1:	mov    ecx,edi
100052f3:	jb     0x100052f7
100052f5:	mov    ecx,ebx
100052f7:	cmp    DWORD PTR [esp+0x24],0x10
100052fc:	lea    eax,[edx+0x4]
100052ff:	jb     0x10005303
10005301:	mov    eax,DWORD PTR [eax]
10005303:	mov    edx,DWORD PTR [esp+0x14]
10005307:	push   ecx
10005308:	push   edx
10005309:	push   eax
1000530a:	call   0x100012f0
1000530f:	add    esp,0xc
10005312:	test   eax,eax
10005314:	jne    0x10005328
10005316:	cmp    edi,ebx
10005318:	jae    0x1000531f
1000531a:	or     eax,0xffffffff
1000531d:	jmp    0x10005326
1000531f:	xor    eax,eax
10005321:	cmp    edi,ebx
10005323:	setne  al
10005326:	test   eax,eax
10005328:	setl   al
1000532b:	test   al,al
1000532d:	mov    BYTE PTR [esp+0x18],al
10005331:	je     0x10005337
10005333:	mov    esi,DWORD PTR [esi]
10005335:	jmp    0x1000533a
10005337:	mov    esi,DWORD PTR [esi+0x8]
1000533a:	cmp    BYTE PTR [esi+0x45],0x0
1000533e:	je     0x100052c5
10005340:	mov    edi,DWORD PTR [esp+0x28]
10005344:	mov    ecx,DWORD PTR [esp+0x10]
10005348:	test   al,al
1000534a:	mov    esi,ecx
1000534c:	mov    DWORD PTR [esp+0x2c],esi
10005350:	mov    DWORD PTR [esp+0x28],edi
10005354:	je     0x10005399
10005356:	mov    eax,DWORD PTR [edi+0x4]
10005359:	cmp    ecx,DWORD PTR [eax]
1000535b:	jne    0x1000538c
1000535d:	mov    edx,DWORD PTR [ebp+0xc]
10005360:	push   edx
10005361:	push   ecx
10005362:	push   0x1
10005364:	lea    eax,[esp+0x34]
10005368:	push   eax
10005369:	mov    ecx,edi
1000536b:	call   0x10005410
10005370:	mov    ecx,eax
10005372:	mov    edx,DWORD PTR [ecx]
10005374:	mov    eax,DWORD PTR [ebp+0x8]
10005377:	mov    ecx,DWORD PTR [ecx+0x4]
1000537a:	mov    DWORD PTR [eax+0x4],ecx
1000537d:	mov    BYTE PTR [eax+0x8],0x1
10005381:	mov    DWORD PTR [eax],edx
10005383:	pop    edi
10005384:	pop    esi
10005385:	pop    ebx
10005386:	mov    esp,ebp
10005388:	pop    ebp
10005389:	ret    0x8
1000538c:	lea    ecx,[esp+0x28]
10005390:	call   0x100063d0
10005395:	mov    esi,DWORD PTR [esp+0x2c]
10005399:	mov    ebx,DWORD PTR [ebp+0xc]
1000539c:	cmp    DWORD PTR [ebx+0x18],0x10
100053a0:	mov    edx,DWORD PTR [ebx+0x14]
100053a3:	lea    ecx,[esi+0xc]
100053a6:	jb     0x100053ad
100053a8:	mov    eax,DWORD PTR [ebx+0x4]
100053ab:	jmp    0x100053b0
100053ad:	lea    eax,[ebx+0x4]
100053b0:	push   edx
100053b1:	mov    edx,DWORD PTR [ecx+0x14]
100053b4:	push   eax
100053b5:	push   edx
100053b6:	push   0x0
100053b8:	call   0x100039d0
100053bd:	test   eax,eax
100053bf:	jge    0x100053f4
100053c1:	mov    eax,DWORD PTR [esp+0x10]
100053c5:	mov    ecx,DWORD PTR [esp+0x18]
100053c9:	push   ebx
100053ca:	push   eax
100053cb:	push   ecx
100053cc:	lea    edx,[esp+0x34]
100053d0:	push   edx
100053d1:	mov    ecx,edi
100053d3:	call   0x10005410
100053d8:	mov    ecx,eax
100053da:	mov    edx,DWORD PTR [ecx]
100053dc:	mov    eax,DWORD PTR [ebp+0x8]
100053df:	mov    ecx,DWORD PTR [ecx+0x4]
100053e2:	mov    DWORD PTR [eax+0x4],ecx
100053e5:	mov    BYTE PTR [eax+0x8],0x1
100053e9:	mov    DWORD PTR [eax],edx
100053eb:	pop    edi
100053ec:	pop    esi
100053ed:	pop    ebx
100053ee:	mov    esp,ebp
100053f0:	pop    ebp
100053f1:	ret    0x8
100053f4:	mov    eax,DWORD PTR [ebp+0x8]
100053f7:	mov    edx,DWORD PTR [esp+0x28]
100053fb:	pop    edi
100053fc:	mov    DWORD PTR [eax+0x4],esi
100053ff:	pop    esi
10005400:	mov    BYTE PTR [eax+0x8],0x0
10005404:	mov    DWORD PTR [eax],edx
10005406:	pop    ebx
10005407:	mov    esp,ebp
10005409:	pop    ebp
1000540a:	ret    0x8
1000540d:	int3   
1000540e:	int3   
1000540f:	int3   
10005410:	push   ebp
10005411:	mov    ebp,esp
10005413:	and    esp,0xfffffff8
10005416:	push   0xffffffff
10005418:	push   0x1002ae58
1000541d:	mov    eax,fs:0x0
10005423:	push   eax
10005424:	sub    esp,0x50
10005427:	push   ebx
10005428:	push   esi
10005429:	push   edi
1000542a:	mov    eax,ds:0x100951fc
1000542f:	xor    eax,esp
10005431:	push   eax
10005432:	lea    eax,[esp+0x60]
10005436:	mov    fs:0x0,eax
1000543c:	mov    edi,ecx
1000543e:	xor    ebx,ebx
10005440:	cmp    DWORD PTR [edi+0x8],0x4924923
10005447:	jb     0x10005492
10005449:	push   0x13
1000544b:	push   0x10082a60
10005450:	lea    ecx,[esp+0x20]
10005454:	mov    DWORD PTR [esp+0x38],0xf
1000545c:	mov    DWORD PTR [esp+0x34],ebx
10005460:	mov    BYTE PTR [esp+0x24],bl
10005464:	call   0x10003900
10005469:	lea    eax,[esp+0x18]
1000546d:	push   eax
1000546e:	lea    ecx,[esp+0x38]
10005472:	mov    DWORD PTR [esp+0x6c],ebx
10005476:	call   0x10001390
1000547b:	push   0x10085d0c
10005480:	lea    ecx,[esp+0x38]
10005484:	push   ecx
10005485:	mov    DWORD PTR [esp+0x3c],0x100344f4
1000548d:	call   0x1001621e
10005492:	mov    edx,DWORD PTR [ebp+0x14]
10005495:	mov    eax,DWORD PTR [edi+0x4]
10005498:	mov    esi,DWORD PTR [ebp+0x10]
1000549b:	push   ebx
1000549c:	push   edx
1000549d:	push   eax
1000549e:	push   esi
1000549f:	push   eax
100054a0:	call   0x10005c60
100054a5:	add    DWORD PTR [edi+0x8],0x1
100054a9:	mov    ecx,eax
100054ab:	mov    eax,DWORD PTR [edi+0x4]
100054ae:	cmp    esi,eax
100054b0:	mov    DWORD PTR [esp+0x14],ecx
100054b4:	jne    0x100054c6
100054b6:	mov    DWORD PTR [eax+0x4],ecx
100054b9:	mov    eax,DWORD PTR [edi+0x4]
100054bc:	mov    DWORD PTR [eax],ecx
100054be:	mov    edx,DWORD PTR [edi+0x4]
100054c1:	mov    DWORD PTR [edx+0x8],ecx
100054c4:	jmp    0x100054e6
100054c6:	cmp    BYTE PTR [ebp+0xc],bl
100054c9:	je     0x100054d8
100054cb:	mov    DWORD PTR [esi],ecx
100054cd:	mov    eax,DWORD PTR [edi+0x4]
100054d0:	cmp    esi,DWORD PTR [eax]
100054d2:	jne    0x100054e6
100054d4:	mov    DWORD PTR [eax],ecx
100054d6:	jmp    0x100054e6
100054d8:	mov    DWORD PTR [esi+0x8],ecx
100054db:	mov    eax,DWORD PTR [edi+0x4]
100054de:	cmp    esi,DWORD PTR [eax+0x8]
100054e1:	jne    0x100054e6
100054e3:	mov    DWORD PTR [eax+0x8],ecx
100054e6:	mov    edx,DWORD PTR [ecx+0x4]
100054e9:	cmp    BYTE PTR [edx+0x44],bl
100054ec:	lea    eax,[ecx+0x4]
100054ef:	mov    esi,ecx
100054f1:	jne    0x10005632
100054f7:	mov    ecx,DWORD PTR [eax]
100054f9:	mov    edx,DWORD PTR [ecx+0x4]
100054fc:	cmp    ecx,DWORD PTR [edx]
100054fe:	jne    0x100055a5
10005504:	mov    edx,DWORD PTR [edx+0x8]
10005507:	cmp    BYTE PTR [edx+0x44],bl
1000550a:	je     0x100055ac
10005510:	cmp    esi,DWORD PTR [ecx+0x8]
10005513:	jne    0x10005550
10005515:	mov    esi,ecx
10005517:	mov    ecx,DWORD PTR [esi+0x8]
1000551a:	mov    eax,DWORD PTR [ecx]
1000551c:	mov    DWORD PTR [esi+0x8],eax
1000551f:	mov    eax,DWORD PTR [ecx]
10005521:	cmp    BYTE PTR [eax+0x45],bl
10005524:	jne    0x10005529
10005526:	mov    DWORD PTR [eax+0x4],esi
10005529:	mov    edx,DWORD PTR [esi+0x4]
1000552c:	lea    eax,[esi+0x4]
1000552f:	mov    DWORD PTR [ecx+0x4],edx
10005532:	mov    edx,DWORD PTR [edi+0x4]
10005535:	cmp    esi,DWORD PTR [edx+0x4]
10005538:	jne    0x1000553f
1000553a:	mov    DWORD PTR [edx+0x4],ecx
1000553d:	jmp    0x1000554c
1000553f:	mov    edx,DWORD PTR [eax]
10005541:	cmp    esi,DWORD PTR [edx]
10005543:	jne    0x10005549
10005545:	mov    DWORD PTR [edx],ecx
10005547:	jmp    0x1000554c
10005549:	mov    DWORD PTR [edx+0x8],ecx
1000554c:	mov    DWORD PTR [ecx],esi
1000554e:	mov    DWORD PTR [eax],ecx
10005550:	mov    ecx,DWORD PTR [eax]
10005552:	mov    BYTE PTR [ecx+0x44],0x1
10005556:	mov    edx,DWORD PTR [eax]
10005558:	mov    ecx,DWORD PTR [edx+0x4]
1000555b:	mov    BYTE PTR [ecx+0x44],bl
1000555e:	mov    edx,DWORD PTR [eax]
10005560:	mov    eax,DWORD PTR [edx+0x4]
10005563:	mov    ecx,DWORD PTR [eax]
10005565:	mov    edx,DWORD PTR [ecx+0x8]
10005568:	mov    DWORD PTR [eax],edx
1000556a:	mov    edx,DWORD PTR [ecx+0x8]
1000556d:	cmp    BYTE PTR [edx+0x45],bl
10005570:	jne    0x10005575
10005572:	mov    DWORD PTR [edx+0x4],eax
10005575:	mov    edx,DWORD PTR [eax+0x4]
10005578:	mov    DWORD PTR [ecx+0x4],edx
1000557b:	mov    edx,DWORD PTR [edi+0x4]
1000557e:	cmp    eax,DWORD PTR [edx+0x4]
10005581:	jne    0x1000558e
10005583:	mov    DWORD PTR [edx+0x4],ecx
10005586:	mov    DWORD PTR [ecx+0x8],eax
10005589:	jmp    0x1000561c
1000558e:	mov    edx,DWORD PTR [eax+0x4]
10005591:	cmp    eax,DWORD PTR [edx+0x8]
10005594:	jne    0x1000559e
10005596:	mov    DWORD PTR [edx+0x8],ecx
10005599:	mov    DWORD PTR [ecx+0x8],eax
1000559c:	jmp    0x1000561c
1000559e:	mov    DWORD PTR [edx],ecx
100055a0:	mov    DWORD PTR [ecx+0x8],eax
100055a3:	jmp    0x1000561c
100055a5:	mov    edx,DWORD PTR [edx]
100055a7:	cmp    BYTE PTR [edx+0x44],bl
100055aa:	jne    0x100055c3
100055ac:	mov    BYTE PTR [ecx+0x44],0x1
100055b0:	mov    BYTE PTR [edx+0x44],0x1
100055b4:	mov    edx,DWORD PTR [eax]
100055b6:	mov    ecx,DWORD PTR [edx+0x4]
100055b9:	mov    BYTE PTR [ecx+0x44],bl
100055bc:	mov    edx,DWORD PTR [eax]
100055be:	mov    esi,DWORD PTR [edx+0x4]
100055c1:	jmp    0x1000561f
100055c3:	cmp    esi,DWORD PTR [ecx]
100055c5:	jne    0x100055d1
100055c7:	mov    esi,ecx
100055c9:	push   esi
100055ca:	mov    ecx,edi
100055cc:	call   0x10005fb0
100055d1:	mov    eax,DWORD PTR [esi+0x4]
100055d4:	mov    BYTE PTR [eax+0x44],0x1
100055d8:	mov    ecx,DWORD PTR [esi+0x4]
100055db:	mov    edx,DWORD PTR [ecx+0x4]
100055de:	mov    BYTE PTR [edx+0x44],bl
100055e1:	mov    eax,DWORD PTR [esi+0x4]
100055e4:	mov    eax,DWORD PTR [eax+0x4]
100055e7:	mov    ecx,DWORD PTR [eax+0x8]
100055ea:	mov    edx,DWORD PTR [ecx]
100055ec:	mov    DWORD PTR [eax+0x8],edx
100055ef:	mov    edx,DWORD PTR [ecx]
100055f1:	cmp    BYTE PTR [edx+0x45],bl
100055f4:	jne    0x100055f9
100055f6:	mov    DWORD PTR [edx+0x4],eax
100055f9:	mov    edx,DWORD PTR [eax+0x4]
100055fc:	mov    DWORD PTR [ecx+0x4],edx
100055ff:	mov    edx,DWORD PTR [edi+0x4]
10005602:	cmp    eax,DWORD PTR [edx+0x4]
10005605:	jne    0x1000560c
10005607:	mov    DWORD PTR [edx+0x4],ecx
1000560a:	jmp    0x1000561a
1000560c:	mov    edx,DWORD PTR [eax+0x4]
1000560f:	cmp    eax,DWORD PTR [edx]
10005611:	jne    0x10005617
10005613:	mov    DWORD PTR [edx],ecx
10005615:	jmp    0x1000561a
10005617:	mov    DWORD PTR [edx+0x8],ecx
1000561a:	mov    DWORD PTR [ecx],eax
1000561c:	mov    DWORD PTR [eax+0x4],ecx
1000561f:	mov    ecx,DWORD PTR [esi+0x4]
10005622:	cmp    BYTE PTR [ecx+0x44],bl
10005625:	lea    eax,[esi+0x4]
10005628:	je     0x100054f7
1000562e:	mov    ecx,DWORD PTR [esp+0x14]
10005632:	mov    edx,DWORD PTR [edi+0x4]
10005635:	mov    eax,DWORD PTR [edx+0x4]
10005638:	mov    BYTE PTR [eax+0x44],0x1
1000563c:	mov    eax,DWORD PTR [ebp+0x8]
1000563f:	mov    DWORD PTR [eax+0x4],ecx
10005642:	mov    DWORD PTR [eax],edi
10005644:	mov    ecx,DWORD PTR [esp+0x60]
10005648:	mov    DWORD PTR fs:0x0,ecx
1000564f:	pop    ecx
10005650:	pop    edi
10005651:	pop    esi
10005652:	pop    ebx
10005653:	mov    esp,ebp
10005655:	pop    ebp
10005656:	ret    0x10
10005659:	int3   
1000565a:	int3   
1000565b:	int3   
1000565c:	int3   
1000565d:	int3   
1000565e:	int3   
1000565f:	int3   
10005660:	push   ecx
10005661:	mov    eax,DWORD PTR [ecx+0x4]
10005664:	push   esi
10005665:	mov    esi,DWORD PTR [eax+0x4]
10005668:	cmp    BYTE PTR [esi+0x45],0x0
1000566c:	mov    DWORD PTR [esp+0x4],eax
10005670:	jne    0x100056e7
10005672:	mov    eax,DWORD PTR [esp+0xc]
10005676:	mov    ecx,DWORD PTR [eax+0x18]
10005679:	push   ebx
1000567a:	mov    ebx,DWORD PTR [eax+0x14]
1000567d:	push   ebp
1000567e:	push   edi
1000567f:	mov    DWORD PTR [esp+0x18],ecx
10005683:	lea    ebp,[eax+0x4]
10005686:	cmp    DWORD PTR [esp+0x18],0x10
1000568b:	jb     0x10005692
1000568d:	mov    edx,DWORD PTR [ebp+0x0]
10005690:	jmp    0x10005694
10005692:	mov    edx,ebp
10005694:	mov    edi,DWORD PTR [esi+0x20]
10005697:	mov    eax,edi
10005699:	cmp    eax,edi
1000569b:	jae    0x1000569d
1000569d:	cmp    edi,ebx
1000569f:	mov    ecx,edi
100056a1:	jb     0x100056a5
100056a3:	mov    ecx,ebx
100056a5:	cmp    DWORD PTR [esi+0x24],0x10
100056a9:	jb     0x100056b0
100056ab:	mov    eax,DWORD PTR [esi+0x10]
100056ae:	jmp    0x100056b3
100056b0:	lea    eax,[esi+0x10]
100056b3:	push   ecx
100056b4:	push   edx
100056b5:	push   eax
100056b6:	call   0x100012f0
100056bb:	add    esp,0xc
100056be:	test   eax,eax
100056c0:	jne    0x100056cd
100056c2:	cmp    edi,ebx
100056c4:	jb     0x100056cf
100056c6:	cmp    edi,ebx
100056c8:	setne  al
100056cb:	test   eax,eax
100056cd:	jge    0x100056d4
100056cf:	mov    esi,DWORD PTR [esi+0x8]
100056d2:	jmp    0x100056da
100056d4:	mov    DWORD PTR [esp+0x10],esi
100056d8:	mov    esi,DWORD PTR [esi]
100056da:	cmp    BYTE PTR [esi+0x45],0x0
100056de:	je     0x10005686
100056e0:	mov    eax,DWORD PTR [esp+0x10]
100056e4:	pop    edi
100056e5:	pop    ebp
100056e6:	pop    ebx
100056e7:	pop    esi
100056e8:	pop    ecx
100056e9:	ret    0x4
100056ec:	int3   
100056ed:	int3   
100056ee:	int3   
100056ef:	int3   
100056f0:	push   ebx
100056f1:	mov    ebx,DWORD PTR [esp+0x8]
100056f5:	push   esi
100056f6:	mov    esi,ecx
100056f8:	cmp    DWORD PTR [esi+0x14],ebx
100056fb:	push   edi
100056fc:	jae    0x10005703
100056fe:	call   0x10015a06
10005703:	mov    eax,DWORD PTR [esi+0x14]
10005706:	mov    edi,DWORD PTR [esp+0x14]
1000570a:	sub    eax,ebx
1000570c:	cmp    eax,edi
1000570e:	jae    0x10005712
10005710:	mov    edi,eax
10005712:	test   edi,edi
10005714:	jbe    0x1000577f
10005716:	mov    ecx,DWORD PTR [esi+0x18]
10005719:	cmp    ecx,0x8
1000571c:	push   ebp
1000571d:	lea    ebp,[esi+0x4]
10005720:	jb     0x1000572b
10005722:	mov    edx,DWORD PTR [ebp+0x0]
10005725:	mov    DWORD PTR [esp+0x14],edx
10005729:	jmp    0x1000572f
1000572b:	mov    DWORD PTR [esp+0x14],ebp
1000572f:	cmp    ecx,0x8
10005732:	jb     0x1000573d
10005734:	mov    edx,DWORD PTR [ebp+0x0]
10005737:	mov    DWORD PTR [esp+0x18],edx
1000573b:	jmp    0x10005741
1000573d:	mov    DWORD PTR [esp+0x18],ebp
10005741:	mov    edx,DWORD PTR [esp+0x14]
10005745:	sub    eax,edi
10005747:	add    eax,eax
10005749:	push   eax
1000574a:	lea    eax,[ebx+edi*1]
1000574d:	lea    eax,[edx+eax*2]
10005750:	sub    ecx,ebx
10005752:	push   eax
10005753:	add    ecx,ecx
10005755:	push   ecx
10005756:	mov    ecx,DWORD PTR [esp+0x24]
1000575a:	lea    edx,[ecx+ebx*2]
1000575d:	push   edx
1000575e:	call   0x100164ce
10005763:	mov    eax,DWORD PTR [esi+0x14]
10005766:	sub    eax,edi
10005768:	add    esp,0x10
1000576b:	cmp    DWORD PTR [esi+0x18],0x8
1000576f:	mov    DWORD PTR [esi+0x14],eax
10005772:	jb     0x10005777
10005774:	mov    ebp,DWORD PTR [ebp+0x0]
10005777:	mov    WORD PTR [ebp+eax*2+0x0],0x0
1000577e:	pop    ebp
1000577f:	pop    edi
10005780:	mov    eax,esi
10005782:	pop    esi
10005783:	pop    ebx
10005784:	ret    0x8
10005787:	int3   
10005788:	int3   
10005789:	int3   
1000578a:	int3   
1000578b:	int3   
1000578c:	int3   
1000578d:	int3   
1000578e:	int3   
1000578f:	int3   
10005790:	push   ebp
10005791:	mov    ebp,esp
10005793:	and    esp,0xfffffff8
10005796:	sub    esp,0x14
10005799:	mov    eax,DWORD PTR [ecx+0x4]
1000579c:	push   ebx
1000579d:	push   esi
1000579e:	mov    esi,DWORD PTR [eax+0x4]
100057a1:	cmp    BYTE PTR [esi+0x45],0x0
100057a5:	mov    ebx,eax
100057a7:	mov    al,0x1
100057a9:	push   edi
100057aa:	mov    edi,DWORD PTR [ebp+0xc]
100057ad:	mov    DWORD PTR [esp+0x14],ecx
100057b1:	mov    BYTE PTR [esp+0x10],al
100057b5:	jne    0x100057f7
100057b7:	cmp    DWORD PTR [esi+0x24],0x8
100057bb:	mov    ecx,DWORD PTR [esi+0x20]
100057be:	mov    ebx,esi
100057c0:	jb     0x100057c7
100057c2:	mov    eax,DWORD PTR [esi+0x10]
100057c5:	jmp    0x100057ca
100057c7:	lea    eax,[esi+0x10]
100057ca:	push   ecx
100057cb:	push   eax
100057cc:	mov    eax,DWORD PTR [edi+0x14]
100057cf:	push   eax
100057d0:	push   0x0
100057d2:	mov    ecx,edi
100057d4:	call   0x10006bf0
100057d9:	test   eax,eax
100057db:	setl   al
100057de:	test   al,al
100057e0:	mov    BYTE PTR [esp+0x10],al
100057e4:	je     0x100057ea
100057e6:	mov    esi,DWORD PTR [esi]
100057e8:	jmp    0x100057ed
100057ea:	mov    esi,DWORD PTR [esi+0x8]
100057ed:	cmp    BYTE PTR [esi+0x45],0x0
100057f1:	je     0x100057b7
100057f3:	mov    ecx,DWORD PTR [esp+0x14]
100057f7:	test   al,al
100057f9:	mov    esi,ebx
100057fb:	mov    DWORD PTR [esp+0x1c],esi
100057ff:	mov    DWORD PTR [esp+0x18],ecx
10005803:	je     0x10005843
10005805:	mov    edx,DWORD PTR [ecx+0x4]
10005808:	cmp    ebx,DWORD PTR [edx]
1000580a:	jne    0x10005836
1000580c:	push   edi
1000580d:	push   ebx
1000580e:	push   0x1
10005810:	lea    eax,[esp+0x24]
10005814:	push   eax
10005815:	call   0x100058a0
1000581a:	mov    ecx,eax
1000581c:	mov    edx,DWORD PTR [ecx]
1000581e:	mov    eax,DWORD PTR [ebp+0x8]
10005821:	mov    ecx,DWORD PTR [ecx+0x4]
10005824:	mov    DWORD PTR [eax+0x4],ecx
10005827:	mov    BYTE PTR [eax+0x8],0x1
1000582b:	mov    DWORD PTR [eax],edx
1000582d:	pop    edi
1000582e:	pop    esi
1000582f:	pop    ebx
10005830:	mov    esp,ebp
10005832:	pop    ebp
10005833:	ret    0x8
10005836:	lea    ecx,[esp+0x18]
1000583a:	call   0x100063d0
1000583f:	mov    esi,DWORD PTR [esp+0x1c]
10005843:	cmp    DWORD PTR [edi+0x18],0x8
10005847:	mov    edx,DWORD PTR [edi+0x14]
1000584a:	lea    ecx,[esi+0xc]
1000584d:	jb     0x10005854
1000584f:	mov    eax,DWORD PTR [edi+0x4]
10005852:	jmp    0x10005857
10005854:	lea    eax,[edi+0x4]
10005857:	push   edx
10005858:	mov    edx,DWORD PTR [ecx+0x14]
1000585b:	push   eax
1000585c:	push   edx
1000585d:	push   0x0
1000585f:	call   0x10006bf0
10005864:	test   eax,eax
10005866:	jge    0x1000587a
10005868:	mov    eax,DWORD PTR [esp+0x10]
1000586c:	push   edi
1000586d:	push   ebx
1000586e:	lea    ecx,[esp+0x20]
10005872:	push   eax
10005873:	push   ecx
10005874:	mov    ecx,DWORD PTR [esp+0x24]
10005878:	jmp    0x10005815
1000587a:	mov    eax,DWORD PTR [ebp+0x8]
1000587d:	mov    edx,DWORD PTR [esp+0x18]
10005881:	pop    edi
10005882:	mov    DWORD PTR [eax+0x4],esi
10005885:	pop    esi
10005886:	mov    BYTE PTR [eax+0x8],0x0
1000588a:	mov    DWORD PTR [eax],edx
1000588c:	pop    ebx
1000588d:	mov    esp,ebp
1000588f:	pop    ebp
10005890:	ret    0x8
10005893:	int3   
10005894:	int3   
10005895:	int3   
10005896:	int3   
10005897:	int3   
10005898:	int3   
10005899:	int3   
1000589a:	int3   
1000589b:	int3   
1000589c:	int3   
1000589d:	int3   
1000589e:	int3   
1000589f:	int3   
100058a0:	push   ebp
100058a1:	mov    ebp,esp
100058a3:	and    esp,0xfffffff8
100058a6:	push   0xffffffff
100058a8:	push   0x1002ae28
100058ad:	mov    eax,fs:0x0
100058b3:	push   eax
100058b4:	sub    esp,0x50
100058b7:	push   ebx
100058b8:	push   esi
100058b9:	push   edi
100058ba:	mov    eax,ds:0x100951fc
100058bf:	xor    eax,esp
100058c1:	push   eax
100058c2:	lea    eax,[esp+0x60]
100058c6:	mov    fs:0x0,eax
100058cc:	mov    edi,ecx
100058ce:	xor    ebx,ebx
100058d0:	cmp    DWORD PTR [edi+0x8],0x4924923
100058d7:	jb     0x10005922
100058d9:	push   0x13
100058db:	push   0x10082a60
100058e0:	lea    ecx,[esp+0x20]
100058e4:	mov    DWORD PTR [esp+0x38],0xf
100058ec:	mov    DWORD PTR [esp+0x34],ebx
100058f0:	mov    BYTE PTR [esp+0x24],bl
100058f4:	call   0x10003900
100058f9:	lea    eax,[esp+0x18]
100058fd:	push   eax
100058fe:	lea    ecx,[esp+0x38]
10005902:	mov    DWORD PTR [esp+0x6c],ebx
10005906:	call   0x10001390
1000590b:	push   0x10085d0c
10005910:	lea    ecx,[esp+0x38]
10005914:	push   ecx
10005915:	mov    DWORD PTR [esp+0x3c],0x100344f4
1000591d:	call   0x1001621e
10005922:	mov    edx,DWORD PTR [ebp+0x14]
10005925:	mov    eax,DWORD PTR [edi+0x4]
10005928:	mov    esi,DWORD PTR [ebp+0x10]
1000592b:	push   ebx
1000592c:	push   edx
1000592d:	push   eax
1000592e:	push   esi
1000592f:	push   eax
10005930:	call   0x10006010
10005935:	add    DWORD PTR [edi+0x8],0x1
10005939:	mov    ecx,eax
1000593b:	mov    eax,DWORD PTR [edi+0x4]
1000593e:	cmp    esi,eax
10005940:	mov    DWORD PTR [esp+0x14],ecx
10005944:	jne    0x10005956
10005946:	mov    DWORD PTR [eax+0x4],ecx
10005949:	mov    eax,DWORD PTR [edi+0x4]
1000594c:	mov    DWORD PTR [eax],ecx
1000594e:	mov    edx,DWORD PTR [edi+0x4]
10005951:	mov    DWORD PTR [edx+0x8],ecx
10005954:	jmp    0x10005976
10005956:	cmp    BYTE PTR [ebp+0xc],bl
10005959:	je     0x10005968
1000595b:	mov    DWORD PTR [esi],ecx
1000595d:	mov    eax,DWORD PTR [edi+0x4]
10005960:	cmp    esi,DWORD PTR [eax]
10005962:	jne    0x10005976
10005964:	mov    DWORD PTR [eax],ecx
10005966:	jmp    0x10005976
10005968:	mov    DWORD PTR [esi+0x8],ecx
1000596b:	mov    eax,DWORD PTR [edi+0x4]
1000596e:	cmp    esi,DWORD PTR [eax+0x8]
10005971:	jne    0x10005976
10005973:	mov    DWORD PTR [eax+0x8],ecx
10005976:	mov    edx,DWORD PTR [ecx+0x4]
10005979:	cmp    BYTE PTR [edx+0x44],bl
1000597c:	lea    eax,[ecx+0x4]
1000597f:	mov    esi,ecx
10005981:	jne    0x10005ac2
10005987:	mov    ecx,DWORD PTR [eax]
10005989:	mov    edx,DWORD PTR [ecx+0x4]
1000598c:	cmp    ecx,DWORD PTR [edx]
1000598e:	jne    0x10005a35
10005994:	mov    edx,DWORD PTR [edx+0x8]
10005997:	cmp    BYTE PTR [edx+0x44],bl
1000599a:	je     0x10005a3c
100059a0:	cmp    esi,DWORD PTR [ecx+0x8]
100059a3:	jne    0x100059e0
100059a5:	mov    esi,ecx
100059a7:	mov    ecx,DWORD PTR [esi+0x8]
100059aa:	mov    eax,DWORD PTR [ecx]
100059ac:	mov    DWORD PTR [esi+0x8],eax
100059af:	mov    eax,DWORD PTR [ecx]
100059b1:	cmp    BYTE PTR [eax+0x45],bl
100059b4:	jne    0x100059b9
100059b6:	mov    DWORD PTR [eax+0x4],esi
100059b9:	mov    edx,DWORD PTR [esi+0x4]
100059bc:	lea    eax,[esi+0x4]
100059bf:	mov    DWORD PTR [ecx+0x4],edx
100059c2:	mov    edx,DWORD PTR [edi+0x4]
100059c5:	cmp    esi,DWORD PTR [edx+0x4]
100059c8:	jne    0x100059cf
100059ca:	mov    DWORD PTR [edx+0x4],ecx
100059cd:	jmp    0x100059dc
100059cf:	mov    edx,DWORD PTR [eax]
100059d1:	cmp    esi,DWORD PTR [edx]
100059d3:	jne    0x100059d9
100059d5:	mov    DWORD PTR [edx],ecx
100059d7:	jmp    0x100059dc
100059d9:	mov    DWORD PTR [edx+0x8],ecx
100059dc:	mov    DWORD PTR [ecx],esi
100059de:	mov    DWORD PTR [eax],ecx
100059e0:	mov    ecx,DWORD PTR [eax]
100059e2:	mov    BYTE PTR [ecx+0x44],0x1
100059e6:	mov    edx,DWORD PTR [eax]
100059e8:	mov    ecx,DWORD PTR [edx+0x4]
100059eb:	mov    BYTE PTR [ecx+0x44],bl
100059ee:	mov    edx,DWORD PTR [eax]
100059f0:	mov    eax,DWORD PTR [edx+0x4]
100059f3:	mov    ecx,DWORD PTR [eax]
100059f5:	mov    edx,DWORD PTR [ecx+0x8]
100059f8:	mov    DWORD PTR [eax],edx
100059fa:	mov    edx,DWORD PTR [ecx+0x8]
100059fd:	cmp    BYTE PTR [edx+0x45],bl
10005a00:	jne    0x10005a05
10005a02:	mov    DWORD PTR [edx+0x4],eax
10005a05:	mov    edx,DWORD PTR [eax+0x4]
10005a08:	mov    DWORD PTR [ecx+0x4],edx
10005a0b:	mov    edx,DWORD PTR [edi+0x4]
10005a0e:	cmp    eax,DWORD PTR [edx+0x4]
10005a11:	jne    0x10005a1e
10005a13:	mov    DWORD PTR [edx+0x4],ecx
10005a16:	mov    DWORD PTR [ecx+0x8],eax
10005a19:	jmp    0x10005aac
10005a1e:	mov    edx,DWORD PTR [eax+0x4]
10005a21:	cmp    eax,DWORD PTR [edx+0x8]
10005a24:	jne    0x10005a2e
10005a26:	mov    DWORD PTR [edx+0x8],ecx
10005a29:	mov    DWORD PTR [ecx+0x8],eax
10005a2c:	jmp    0x10005aac
10005a2e:	mov    DWORD PTR [edx],ecx
10005a30:	mov    DWORD PTR [ecx+0x8],eax
10005a33:	jmp    0x10005aac
10005a35:	mov    edx,DWORD PTR [edx]
10005a37:	cmp    BYTE PTR [edx+0x44],bl
10005a3a:	jne    0x10005a53
10005a3c:	mov    BYTE PTR [ecx+0x44],0x1
10005a40:	mov    BYTE PTR [edx+0x44],0x1
10005a44:	mov    edx,DWORD PTR [eax]
10005a46:	mov    ecx,DWORD PTR [edx+0x4]
10005a49:	mov    BYTE PTR [ecx+0x44],bl
10005a4c:	mov    edx,DWORD PTR [eax]
10005a4e:	mov    esi,DWORD PTR [edx+0x4]
10005a51:	jmp    0x10005aaf
10005a53:	cmp    esi,DWORD PTR [ecx]
10005a55:	jne    0x10005a61
10005a57:	mov    esi,ecx
10005a59:	push   esi
10005a5a:	mov    ecx,edi
10005a5c:	call   0x10005fb0
10005a61:	mov    eax,DWORD PTR [esi+0x4]
10005a64:	mov    BYTE PTR [eax+0x44],0x1
10005a68:	mov    ecx,DWORD PTR [esi+0x4]
10005a6b:	mov    edx,DWORD PTR [ecx+0x4]
10005a6e:	mov    BYTE PTR [edx+0x44],bl
10005a71:	mov    eax,DWORD PTR [esi+0x4]
10005a74:	mov    eax,DWORD PTR [eax+0x4]
10005a77:	mov    ecx,DWORD PTR [eax+0x8]
10005a7a:	mov    edx,DWORD PTR [ecx]
10005a7c:	mov    DWORD PTR [eax+0x8],edx
10005a7f:	mov    edx,DWORD PTR [ecx]
10005a81:	cmp    BYTE PTR [edx+0x45],bl
10005a84:	jne    0x10005a89
10005a86:	mov    DWORD PTR [edx+0x4],eax
10005a89:	mov    edx,DWORD PTR [eax+0x4]
10005a8c:	mov    DWORD PTR [ecx+0x4],edx
10005a8f:	mov    edx,DWORD PTR [edi+0x4]
10005a92:	cmp    eax,DWORD PTR [edx+0x4]
10005a95:	jne    0x10005a9c
10005a97:	mov    DWORD PTR [edx+0x4],ecx
10005a9a:	jmp    0x10005aaa
10005a9c:	mov    edx,DWORD PTR [eax+0x4]
10005a9f:	cmp    eax,DWORD PTR [edx]
10005aa1:	jne    0x10005aa7
10005aa3:	mov    DWORD PTR [edx],ecx
10005aa5:	jmp    0x10005aaa
10005aa7:	mov    DWORD PTR [edx+0x8],ecx
10005aaa:	mov    DWORD PTR [ecx],eax
10005aac:	mov    DWORD PTR [eax+0x4],ecx
10005aaf:	mov    ecx,DWORD PTR [esi+0x4]
10005ab2:	cmp    BYTE PTR [ecx+0x44],bl
10005ab5:	lea    eax,[esi+0x4]
10005ab8:	je     0x10005987
10005abe:	mov    ecx,DWORD PTR [esp+0x14]
10005ac2:	mov    edx,DWORD PTR [edi+0x4]
10005ac5:	mov    eax,DWORD PTR [edx+0x4]
10005ac8:	mov    BYTE PTR [eax+0x44],0x1
10005acc:	mov    eax,DWORD PTR [ebp+0x8]
10005acf:	mov    DWORD PTR [eax+0x4],ecx
10005ad2:	mov    DWORD PTR [eax],edi
10005ad4:	mov    ecx,DWORD PTR [esp+0x60]
10005ad8:	mov    DWORD PTR fs:0x0,ecx
10005adf:	pop    ecx
10005ae0:	pop    edi
10005ae1:	pop    esi
10005ae2:	pop    ebx
10005ae3:	mov    esp,ebp
10005ae5:	pop    ebp
10005ae6:	ret    0x10
10005ae9:	int3   
10005aea:	int3   
10005aeb:	int3   
10005aec:	int3   
10005aed:	int3   
10005aee:	int3   
10005aef:	int3   
10005af0:	mov    eax,DWORD PTR [ecx+0x4]
10005af3:	push   ebp
10005af4:	push   esi
10005af5:	mov    esi,DWORD PTR [eax+0x4]
10005af8:	cmp    BYTE PTR [esi+0x45],0x0
10005afc:	mov    ebp,eax
10005afe:	jne    0x10005b46
10005b00:	push   ebx
10005b01:	push   edi
10005b02:	mov    edi,DWORD PTR [esp+0x14]
10005b06:	lea    ebx,[edi+0x4]
10005b09:	lea    esp,[esp+0x0]
10005b10:	cmp    DWORD PTR [edi+0x18],0x8
10005b14:	mov    edx,DWORD PTR [edi+0x14]
10005b17:	lea    ecx,[esi+0xc]
10005b1a:	jb     0x10005b20
10005b1c:	mov    eax,DWORD PTR [ebx]
10005b1e:	jmp    0x10005b22
10005b20:	mov    eax,ebx
10005b22:	push   edx
10005b23:	push   eax
10005b24:	mov    eax,DWORD PTR [ecx+0x14]
10005b27:	push   eax
10005b28:	push   0x0
10005b2a:	call   0x10006bf0
10005b2f:	test   eax,eax
10005b31:	jge    0x10005b38
10005b33:	mov    esi,DWORD PTR [esi+0x8]
10005b36:	jmp    0x10005b3c
10005b38:	mov    ebp,esi
10005b3a:	mov    esi,DWORD PTR [esi]
10005b3c:	cmp    BYTE PTR [esi+0x45],0x0
10005b40:	je     0x10005b10
10005b42:	pop    edi
10005b43:	mov    eax,ebp
10005b45:	pop    ebx
10005b46:	pop    esi
10005b47:	pop    ebp
10005b48:	ret    0x4
10005b4b:	int3   
10005b4c:	int3   
10005b4d:	int3   
10005b4e:	int3   
10005b4f:	int3   
10005b50:	push   ebp
10005b51:	mov    ebp,esp
10005b53:	and    esp,0xfffffff8
10005b56:	sub    esp,0x14
10005b59:	push   ebx
10005b5a:	push   esi
10005b5b:	push   edi
10005b5c:	mov    edi,ecx
10005b5e:	mov    eax,DWORD PTR [edi+0x4]
10005b61:	mov    ebx,DWORD PTR [eax]
10005b63:	mov    eax,DWORD PTR [ebp+0xc]
10005b66:	test   eax,eax
10005b68:	je     0x10005b6e
10005b6a:	cmp    eax,edi
10005b6c:	je     0x10005b73
10005b6e:	call   0x10016193
10005b73:	mov    esi,DWORD PTR [ebp+0x10]
10005b76:	cmp    esi,ebx
10005b78:	jne    0x10005bd0
10005b7a:	mov    eax,DWORD PTR [ebp+0x14]
10005b7d:	test   eax,eax
10005b7f:	mov    ebx,DWORD PTR [edi+0x4]
10005b82:	je     0x10005b88
10005b84:	cmp    eax,edi
10005b86:	je     0x10005b8d
10005b88:	call   0x10016193
10005b8d:	cmp    DWORD PTR [ebp+0x18],ebx
10005b90:	jne    0x10005bd0
10005b92:	mov    ecx,DWORD PTR [edi+0x4]
10005b95:	mov    edx,DWORD PTR [ecx+0x4]
10005b98:	push   edx
10005b99:	mov    ecx,edi
10005b9b:	call   0x10006990
10005ba0:	mov    eax,DWORD PTR [edi+0x4]
10005ba3:	mov    DWORD PTR [eax+0x4],eax
10005ba6:	mov    eax,DWORD PTR [edi+0x4]
10005ba9:	mov    DWORD PTR [edi+0x8],0x0
10005bb0:	mov    DWORD PTR [eax],eax
10005bb2:	mov    eax,DWORD PTR [edi+0x4]
10005bb5:	mov    DWORD PTR [eax+0x8],eax
10005bb8:	mov    eax,DWORD PTR [edi+0x4]
10005bbb:	mov    ecx,DWORD PTR [eax]
10005bbd:	mov    eax,DWORD PTR [ebp+0x8]
10005bc0:	mov    DWORD PTR [eax+0x4],ecx
10005bc3:	mov    DWORD PTR [eax],edi
10005bc5:	pop    edi
10005bc6:	pop    esi
10005bc7:	pop    ebx
10005bc8:	mov    esp,ebp
10005bca:	pop    ebp
10005bcb:	ret    0x14
10005bce:	mov    edi,edi
10005bd0:	mov    ebx,DWORD PTR [ebp+0xc]
10005bd3:	test   ebx,ebx
10005bd5:	je     0x10005bdc
10005bd7:	cmp    ebx,DWORD PTR [ebp+0x14]
10005bda:	je     0x10005be1
10005bdc:	call   0x10016193
10005be1:	cmp    esi,DWORD PTR [ebp+0x18]
10005be4:	je     0x10005c4e
10005be6:	test   ebx,ebx
10005be8:	mov    DWORD PTR [esp+0x14],esi
10005bec:	jne    0x10005bf3
10005bee:	call   0x10016193
10005bf3:	cmp    BYTE PTR [esi+0x45],0x0
10005bf7:	je     0x10005c00
10005bf9:	call   0x10016193
10005bfe:	jmp    0x10005c3a
10005c00:	mov    eax,DWORD PTR [esi+0x8]
10005c03:	cmp    BYTE PTR [eax+0x45],0x0
10005c07:	jne    0x10005c1f
10005c09:	mov    esi,eax
10005c0b:	mov    eax,DWORD PTR [esi]
10005c0d:	cmp    BYTE PTR [eax+0x45],0x0
10005c11:	jne    0x10005c3a
10005c13:	mov    esi,eax
10005c15:	mov    eax,DWORD PTR [esi]
10005c17:	cmp    BYTE PTR [eax+0x45],0x0
10005c1b:	je     0x10005c13
10005c1d:	jmp    0x10005c3a
10005c1f:	mov    eax,DWORD PTR [esi+0x4]
10005c22:	cmp    BYTE PTR [eax+0x45],0x0
10005c26:	jne    0x10005c38
10005c28:	cmp    esi,DWORD PTR [eax+0x8]
10005c2b:	jne    0x10005c38
10005c2d:	mov    esi,eax
10005c2f:	mov    eax,DWORD PTR [eax+0x4]
10005c32:	cmp    BYTE PTR [eax+0x45],0x0
10005c36:	je     0x10005c28
10005c38:	mov    esi,eax
10005c3a:	mov    edx,DWORD PTR [esp+0x14]
10005c3e:	push   edx
10005c3f:	push   ebx
10005c40:	lea    eax,[esp+0x20]
10005c44:	push   eax
10005c45:	mov    ecx,edi
10005c47:	call   0x100060b0
10005c4c:	jmp    0x10005bd0
10005c4e:	mov    eax,DWORD PTR [ebp+0x8]
10005c51:	pop    edi
10005c52:	mov    DWORD PTR [eax+0x4],esi
10005c55:	pop    esi
10005c56:	mov    DWORD PTR [eax],ebx
10005c58:	pop    ebx
10005c59:	mov    esp,ebp
10005c5b:	pop    ebp
10005c5c:	ret    0x14
10005c5f:	int3   
10005c60:	push   ebp
10005c61:	mov    ebp,esp
10005c63:	push   0xffffffff
10005c65:	push   0x1002aa41
10005c6a:	mov    eax,fs:0x0
10005c70:	push   eax
10005c71:	sub    esp,0xc
10005c74:	push   ebx
10005c75:	push   esi
10005c76:	push   edi
10005c77:	mov    eax,ds:0x100951fc
10005c7c:	xor    eax,ebp
10005c7e:	push   eax
10005c7f:	lea    eax,[ebp-0xc]
10005c82:	mov    fs:0x0,eax
10005c88:	mov    DWORD PTR [ebp-0x10],esp
10005c8b:	push   0x48
10005c8d:	call   0x10016464
10005c92:	mov    esi,eax
10005c94:	mov    DWORD PTR [ebp-0x4],0x0
10005c9b:	add    esp,0x4
10005c9e:	mov    DWORD PTR [ebp-0x14],esi
10005ca1:	mov    DWORD PTR [ebp-0x18],esi
10005ca4:	test   esi,esi
10005ca6:	mov    BYTE PTR [ebp-0x4],0x1
10005caa:	je     0x10005cd3
10005cac:	mov    eax,DWORD PTR [ebp+0x8]
10005caf:	mov    ecx,DWORD PTR [ebp+0xc]
10005cb2:	mov    edx,DWORD PTR [ebp+0x10]
10005cb5:	mov    DWORD PTR [esi],eax
10005cb7:	mov    eax,DWORD PTR [ebp+0x14]
10005cba:	mov    DWORD PTR [esi+0x4],ecx
10005cbd:	push   eax
10005cbe:	lea    ecx,[esi+0xc]
10005cc1:	mov    DWORD PTR [esi+0x8],edx
10005cc4:	call   0x10006890
10005cc9:	mov    cl,BYTE PTR [ebp+0x18]
10005ccc:	mov    BYTE PTR [esi+0x44],cl
10005ccf:	mov    BYTE PTR [esi+0x45],0x0
10005cd3:	mov    eax,esi
10005cd5:	mov    ecx,DWORD PTR [ebp-0xc]
10005cd8:	mov    DWORD PTR fs:0x0,ecx
10005cdf:	pop    ecx
10005ce0:	pop    edi
10005ce1:	pop    esi
10005ce2:	pop    ebx
10005ce3:	mov    esp,ebp
10005ce5:	pop    ebp
10005ce6:	ret    0x14
10005ce9:	mov    edx,DWORD PTR [ebp-0x14]
10005cec:	push   edx
10005ced:	call   0x10015b26
10005cf2:	add    esp,0x4
10005cf5:	push   0x0
10005cf7:	push   0x0
10005cf9:	call   0x1001621e
10005cfe:	int3   
10005cff:	int3   
10005d00:	push   ebp
10005d01:	mov    ebp,esp
10005d03:	push   0xffffffff
10005d05:	push   0x1002a840
10005d0a:	mov    eax,fs:0x0
10005d10:	push   eax
10005d11:	sub    esp,0xc
10005d14:	push   ebx
10005d15:	push   esi
10005d16:	push   edi
10005d17:	mov    eax,ds:0x100951fc
10005d1c:	xor    eax,ebp
10005d1e:	push   eax
10005d1f:	lea    eax,[ebp-0xc]
10005d22:	mov    fs:0x0,eax
10005d28:	mov    DWORD PTR [ebp-0x10],esp
10005d2b:	mov    edi,ecx
10005d2d:	mov    DWORD PTR [ebp-0x14],edi
10005d30:	mov    eax,DWORD PTR [ebp+0x8]
10005d33:	mov    esi,eax
10005d35:	or     esi,0x7
10005d38:	cmp    esi,0x7ffffffe
10005d3e:	jbe    0x10005d44
10005d40:	mov    esi,eax
10005d42:	jmp    0x10005d66
10005d44:	mov    ebx,DWORD PTR [edi+0x18]
10005d47:	mov    eax,0xaaaaaaab
10005d4c:	mul    esi
10005d4e:	mov    ecx,ebx
10005d50:	shr    ecx,1
10005d52:	shr    edx,1
10005d54:	cmp    edx,ecx
10005d56:	jae    0x10005d66
10005d58:	mov    eax,0x7ffffffe
10005d5d:	sub    eax,ecx
10005d5f:	cmp    ebx,eax
10005d61:	ja     0x10005d66
10005d63:	lea    esi,[ecx+ebx*1]
10005d66:	lea    ecx,[esi+0x1]
10005d69:	push   ecx
10005d6a:	mov    ecx,edi
10005d6c:	mov    DWORD PTR [ebp-0x4],0x0
10005d73:	call   0x100064d0
10005d78:	mov    DWORD PTR [ebp+0x8],eax
10005d7b:	jmp    0x10005da5
10005d7d:	mov    eax,DWORD PTR [ebp+0x8]
10005d80:	mov    ecx,DWORD PTR [ebp-0x14]
10005d83:	mov    DWORD PTR [ebp-0x18],eax
10005d86:	add    eax,0x1
10005d89:	mov    DWORD PTR [ebp-0x10],esp
10005d8c:	push   eax
10005d8d:	mov    BYTE PTR [ebp-0x4],0x2
10005d91:	call   0x100064d0
10005d96:	mov    DWORD PTR [ebp+0x8],eax
10005d99:	mov    eax,0x10005d9f
10005d9e:	ret    
10005d9f:	mov    edi,DWORD PTR [ebp-0x14]
10005da2:	mov    esi,DWORD PTR [ebp-0x18]
10005da5:	mov    ebx,DWORD PTR [ebp+0xc]
10005da8:	test   ebx,ebx
10005daa:	jbe    0x10005dd0
10005dac:	cmp    DWORD PTR [edi+0x18],0x8
10005db0:	jb     0x10005db7
10005db2:	mov    eax,DWORD PTR [edi+0x4]
10005db5:	jmp    0x10005dba
10005db7:	lea    eax,[edi+0x4]
10005dba:	mov    ecx,DWORD PTR [ebp+0x8]
10005dbd:	lea    edx,[ebx+ebx*1]
10005dc0:	push   edx
10005dc1:	push   eax
10005dc2:	lea    eax,[esi+esi*1+0x2]
10005dc6:	push   eax
10005dc7:	push   ecx
10005dc8:	call   0x100161a3
10005dcd:	add    esp,0x10
10005dd0:	cmp    DWORD PTR [edi+0x18],0x8
10005dd4:	jb     0x10005de2
10005dd6:	mov    edx,DWORD PTR [edi+0x4]
10005dd9:	push   edx
10005dda:	call   0x10015b26
10005ddf:	add    esp,0x4
10005de2:	cmp    esi,0x8
10005de5:	mov    ecx,DWORD PTR [ebp+0x8]
10005de8:	lea    eax,[edi+0x4]
10005deb:	mov    WORD PTR [eax],0x0
10005df0:	mov    DWORD PTR [eax],ecx
10005df2:	mov    DWORD PTR [edi+0x18],esi
10005df5:	mov    DWORD PTR [edi+0x14],ebx
10005df8:	jb     0x10005dfc
10005dfa:	mov    eax,ecx
10005dfc:	mov    WORD PTR [eax+ebx*2],0x0
10005e02:	mov    ecx,DWORD PTR [ebp-0xc]
10005e05:	mov    DWORD PTR fs:0x0,ecx
10005e0c:	pop    ecx
10005e0d:	pop    edi
10005e0e:	pop    esi
10005e0f:	pop    ebx
10005e10:	mov    esp,ebp
10005e12:	pop    ebp
10005e13:	ret    0x8
10005e16:	mov    esi,DWORD PTR [ebp-0x14]
10005e19:	cmp    DWORD PTR [esi+0x18],0x8
10005e1d:	jb     0x10005e2b
10005e1f:	mov    eax,DWORD PTR [esi+0x4]
10005e22:	push   eax
10005e23:	call   0x10015b26
10005e28:	add    esp,0x4
10005e2b:	xor    eax,eax
10005e2d:	push   eax
10005e2e:	mov    DWORD PTR [esi+0x18],0x7
10005e35:	mov    DWORD PTR [esi+0x14],eax
10005e38:	push   eax
10005e39:	mov    WORD PTR [esi+0x4],ax
10005e3d:	call   0x1001621e
10005e42:	int3   
10005e43:	int3   
10005e44:	int3   
10005e45:	int3   
10005e46:	int3   
10005e47:	int3   
10005e48:	int3   
10005e49:	int3   
10005e4a:	int3   
10005e4b:	int3   
10005e4c:	int3   
10005e4d:	int3   
10005e4e:	int3   
10005e4f:	int3   
10005e50:	push   ebp
10005e51:	mov    ebp,esp
10005e53:	and    esp,0xfffffff8
10005e56:	sub    esp,0x14
10005e59:	push   ebx
10005e5a:	push   esi
10005e5b:	push   edi
10005e5c:	mov    edi,ecx
10005e5e:	mov    eax,DWORD PTR [edi+0x4]
10005e61:	mov    ebx,DWORD PTR [eax]
10005e63:	mov    eax,DWORD PTR [ebp+0xc]
10005e66:	test   eax,eax
10005e68:	je     0x10005e6e
10005e6a:	cmp    eax,edi
10005e6c:	je     0x10005e73
10005e6e:	call   0x10016193
10005e73:	mov    esi,DWORD PTR [ebp+0x10]
10005e76:	cmp    esi,ebx
10005e78:	jne    0x10005ed0
10005e7a:	mov    eax,DWORD PTR [ebp+0x14]
10005e7d:	test   eax,eax
10005e7f:	mov    ebx,DWORD PTR [edi+0x4]
10005e82:	je     0x10005e88
10005e84:	cmp    eax,edi
10005e86:	je     0x10005e8d
10005e88:	call   0x10016193
10005e8d:	cmp    DWORD PTR [ebp+0x18],ebx
10005e90:	jne    0x10005ed0
10005e92:	mov    ecx,DWORD PTR [edi+0x4]
10005e95:	mov    edx,DWORD PTR [ecx+0x4]
10005e98:	push   edx
10005e99:	mov    ecx,edi
10005e9b:	call   0x10006a10
10005ea0:	mov    eax,DWORD PTR [edi+0x4]
10005ea3:	mov    DWORD PTR [eax+0x4],eax
10005ea6:	mov    eax,DWORD PTR [edi+0x4]
10005ea9:	mov    DWORD PTR [edi+0x8],0x0
10005eb0:	mov    DWORD PTR [eax],eax
10005eb2:	mov    eax,DWORD PTR [edi+0x4]
10005eb5:	mov    DWORD PTR [eax+0x8],eax
10005eb8:	mov    eax,DWORD PTR [edi+0x4]
10005ebb:	mov    ecx,DWORD PTR [eax]
10005ebd:	mov    eax,DWORD PTR [ebp+0x8]
10005ec0:	mov    DWORD PTR [eax+0x4],ecx
10005ec3:	mov    DWORD PTR [eax],edi
10005ec5:	pop    edi
10005ec6:	pop    esi
10005ec7:	pop    ebx
10005ec8:	mov    esp,ebp
10005eca:	pop    ebp
10005ecb:	ret    0x14
10005ece:	mov    edi,edi
10005ed0:	mov    ebx,DWORD PTR [ebp+0xc]
10005ed3:	test   ebx,ebx
10005ed5:	je     0x10005edc
10005ed7:	cmp    ebx,DWORD PTR [ebp+0x14]
10005eda:	je     0x10005ee1
10005edc:	call   0x10016193
10005ee1:	cmp    esi,DWORD PTR [ebp+0x18]
10005ee4:	je     0x10005f4e
10005ee6:	test   ebx,ebx
10005ee8:	mov    DWORD PTR [esp+0x14],esi
10005eec:	jne    0x10005ef3
10005eee:	call   0x10016193
10005ef3:	cmp    BYTE PTR [esi+0x45],0x0
10005ef7:	je     0x10005f00
10005ef9:	call   0x10016193
10005efe:	jmp    0x10005f3a
10005f00:	mov    eax,DWORD PTR [esi+0x8]
10005f03:	cmp    BYTE PTR [eax+0x45],0x0
10005f07:	jne    0x10005f1f
10005f09:	mov    esi,eax
10005f0b:	mov    eax,DWORD PTR [esi]
10005f0d:	cmp    BYTE PTR [eax+0x45],0x0
10005f11:	jne    0x10005f3a
10005f13:	mov    esi,eax
10005f15:	mov    eax,DWORD PTR [esi]
10005f17:	cmp    BYTE PTR [eax+0x45],0x0
10005f1b:	je     0x10005f13
10005f1d:	jmp    0x10005f3a
10005f1f:	mov    eax,DWORD PTR [esi+0x4]
10005f22:	cmp    BYTE PTR [eax+0x45],0x0
10005f26:	jne    0x10005f38
10005f28:	cmp    esi,DWORD PTR [eax+0x8]
10005f2b:	jne    0x10005f38
10005f2d:	mov    esi,eax
10005f2f:	mov    eax,DWORD PTR [eax+0x4]
10005f32:	cmp    BYTE PTR [eax+0x45],0x0
10005f36:	je     0x10005f28
10005f38:	mov    esi,eax
10005f3a:	mov    edx,DWORD PTR [esp+0x14]
10005f3e:	push   edx
10005f3f:	push   ebx
10005f40:	lea    eax,[esp+0x20]
10005f44:	push   eax
10005f45:	mov    ecx,edi
10005f47:	call   0x10006530
10005f4c:	jmp    0x10005ed0
10005f4e:	mov    eax,DWORD PTR [ebp+0x8]
10005f51:	pop    edi
10005f52:	mov    DWORD PTR [eax+0x4],esi
10005f55:	pop    esi
10005f56:	mov    DWORD PTR [eax],ebx
10005f58:	pop    ebx
10005f59:	mov    esp,ebp
10005f5b:	pop    ebp
10005f5c:	ret    0x14
10005f5f:	int3   
10005f60:	mov    edx,DWORD PTR [esp+0x4]
10005f64:	mov    eax,DWORD PTR [edx+0x8]
10005f67:	push   esi
10005f68:	mov    esi,DWORD PTR [eax]
10005f6a:	mov    DWORD PTR [edx+0x8],esi
10005f6d:	mov    esi,DWORD PTR [eax]
10005f6f:	cmp    BYTE PTR [esi+0x45],0x0
10005f73:	jne    0x10005f78
10005f75:	mov    DWORD PTR [esi+0x4],edx
10005f78:	mov    esi,DWORD PTR [edx+0x4]
10005f7b:	mov    DWORD PTR [eax+0x4],esi
10005f7e:	mov    ecx,DWORD PTR [ecx+0x4]
10005f81:	cmp    edx,DWORD PTR [ecx+0x4]
10005f84:	pop    esi
10005f85:	jne    0x10005f92
10005f87:	mov    DWORD PTR [ecx+0x4],eax
10005f8a:	mov    DWORD PTR [eax],edx
10005f8c:	mov    DWORD PTR [edx+0x4],eax
10005f8f:	ret    0x4
10005f92:	mov    ecx,DWORD PTR [edx+0x4]
10005f95:	cmp    edx,DWORD PTR [ecx]
10005f97:	jne    0x10005fa3
10005f99:	mov    DWORD PTR [ecx],eax
10005f9b:	mov    DWORD PTR [eax],edx
10005f9d:	mov    DWORD PTR [edx+0x4],eax
10005fa0:	ret    0x4
10005fa3:	mov    DWORD PTR [ecx+0x8],eax
10005fa6:	mov    DWORD PTR [eax],edx
10005fa8:	mov    DWORD PTR [edx+0x4],eax
10005fab:	ret    0x4
10005fae:	int3   
10005faf:	int3   
10005fb0:	mov    edx,DWORD PTR [esp+0x4]
10005fb4:	mov    eax,DWORD PTR [edx]
10005fb6:	push   esi
10005fb7:	mov    esi,DWORD PTR [eax+0x8]
10005fba:	mov    DWORD PTR [edx],esi
10005fbc:	mov    esi,DWORD PTR [eax+0x8]
10005fbf:	cmp    BYTE PTR [esi+0x45],0x0
10005fc3:	jne    0x10005fc8
10005fc5:	mov    DWORD PTR [esi+0x4],edx
10005fc8:	mov    esi,DWORD PTR [edx+0x4]
10005fcb:	mov    DWORD PTR [eax+0x4],esi
10005fce:	mov    ecx,DWORD PTR [ecx+0x4]
10005fd1:	cmp    edx,DWORD PTR [ecx+0x4]
10005fd4:	pop    esi
10005fd5:	jne    0x10005fe3
10005fd7:	mov    DWORD PTR [ecx+0x4],eax
10005fda:	mov    DWORD PTR [eax+0x8],edx
10005fdd:	mov    DWORD PTR [edx+0x4],eax
10005fe0:	ret    0x4
10005fe3:	mov    ecx,DWORD PTR [edx+0x4]
10005fe6:	cmp    edx,DWORD PTR [ecx+0x8]
10005fe9:	jne    0x10005ff7
10005feb:	mov    DWORD PTR [ecx+0x8],eax
10005fee:	mov    DWORD PTR [eax+0x8],edx
10005ff1:	mov    DWORD PTR [edx+0x4],eax
10005ff4:	ret    0x4
10005ff7:	mov    DWORD PTR [ecx],eax
10005ff9:	mov    DWORD PTR [eax+0x8],edx
10005ffc:	mov    DWORD PTR [edx+0x4],eax
10005fff:	ret    0x4
10006002:	int3   
10006003:	int3   
10006004:	int3   
10006005:	int3   
10006006:	int3   
10006007:	int3   
10006008:	int3   
10006009:	int3   
1000600a:	int3   
1000600b:	int3   
1000600c:	int3   
1000600d:	int3   
1000600e:	int3   
1000600f:	int3   
10006010:	push   ebp
10006011:	mov    ebp,esp
10006013:	push   0xffffffff
10006015:	push   0x1002aa11
1000601a:	mov    eax,fs:0x0
10006020:	push   eax
10006021:	sub    esp,0xc
10006024:	push   ebx
10006025:	push   esi
10006026:	push   edi
10006027:	mov    eax,ds:0x100951fc
1000602c:	xor    eax,ebp
1000602e:	push   eax
1000602f:	lea    eax,[ebp-0xc]
10006032:	mov    fs:0x0,eax
10006038:	mov    DWORD PTR [ebp-0x10],esp
1000603b:	push   0x48
1000603d:	call   0x10016464
10006042:	mov    esi,eax
10006044:	mov    DWORD PTR [ebp-0x4],0x0
1000604b:	add    esp,0x4
1000604e:	mov    DWORD PTR [ebp-0x14],esi
10006051:	mov    DWORD PTR [ebp-0x18],esi
10006054:	test   esi,esi
10006056:	mov    BYTE PTR [ebp-0x4],0x1
1000605a:	je     0x10006083
1000605c:	mov    eax,DWORD PTR [ebp+0x8]
1000605f:	mov    ecx,DWORD PTR [ebp+0xc]
10006062:	mov    edx,DWORD PTR [ebp+0x10]
10006065:	mov    DWORD PTR [esi],eax
10006067:	mov    eax,DWORD PTR [ebp+0x14]
1000606a:	mov    DWORD PTR [esi+0x4],ecx
1000606d:	push   eax
1000606e:	lea    ecx,[esi+0xc]
10006071:	mov    DWORD PTR [esi+0x8],edx
10006074:	call   0x10006910
10006079:	mov    cl,BYTE PTR [ebp+0x18]
1000607c:	mov    BYTE PTR [esi+0x44],cl
1000607f:	mov    BYTE PTR [esi+0x45],0x0
10006083:	mov    eax,esi
10006085:	mov    ecx,DWORD PTR [ebp-0xc]
10006088:	mov    DWORD PTR fs:0x0,ecx
1000608f:	pop    ecx
10006090:	pop    edi
10006091:	pop    esi
10006092:	pop    ebx
10006093:	mov    esp,ebp
10006095:	pop    ebp
10006096:	ret    0x14
10006099:	mov    edx,DWORD PTR [ebp-0x14]
1000609c:	push   edx
1000609d:	call   0x10015b26
100060a2:	add    esp,0x4
100060a5:	push   0x0
100060a7:	push   0x0
100060a9:	call   0x1001621e
100060ae:	int3   
100060af:	int3   
100060b0:	push   ebp
100060b1:	mov    ebp,esp
100060b3:	and    esp,0xfffffff8
100060b6:	push   0xffffffff
100060b8:	push   0x1002adf8
100060bd:	mov    eax,fs:0x0
100060c3:	push   eax
100060c4:	sub    esp,0x50
100060c7:	push   ebx
100060c8:	push   esi
100060c9:	push   edi
100060ca:	mov    eax,ds:0x100951fc
100060cf:	xor    eax,esp
100060d1:	push   eax
100060d2:	lea    eax,[esp+0x60]
100060d6:	mov    fs:0x0,eax
100060dc:	mov    DWORD PTR [esp+0x14],ecx
100060e0:	mov    edi,DWORD PTR [ebp+0x10]
100060e3:	cmp    BYTE PTR [edi+0x45],0x0
100060e7:	je     0x10006135
100060e9:	push   0x1b
100060eb:	xor    esi,esi
100060ed:	push   0x10082a74
100060f2:	lea    ecx,[esp+0x20]
100060f6:	mov    DWORD PTR [esp+0x38],0xf
100060fe:	mov    DWORD PTR [esp+0x34],esi
10006102:	mov    BYTE PTR [esp+0x24],0x0
10006107:	call   0x10003900
1000610c:	lea    eax,[esp+0x18]
10006110:	push   eax
10006111:	lea    ecx,[esp+0x38]
10006115:	mov    DWORD PTR [esp+0x6c],esi
10006119:	call   0x10001390
1000611e:	push   0x10085cd0
10006123:	lea    ecx,[esp+0x38]
10006127:	push   ecx
10006128:	mov    DWORD PTR [esp+0x3c],0x10034518
10006130:	call   0x1001621e
10006135:	lea    ecx,[ebp+0xc]
10006138:	call   0x10006460
1000613d:	mov    ecx,DWORD PTR [edi]
1000613f:	cmp    BYTE PTR [ecx+0x45],0x0
10006143:	je     0x1000614a
10006145:	mov    ebx,DWORD PTR [edi+0x8]
10006148:	jmp    0x10006161
1000614a:	mov    edx,DWORD PTR [edi+0x8]
1000614d:	cmp    BYTE PTR [edx+0x45],0x0
10006151:	je     0x10006157
10006153:	mov    ebx,ecx
10006155:	jmp    0x10006161
10006157:	mov    eax,DWORD PTR [ebp+0x10]
1000615a:	cmp    eax,edi
1000615c:	mov    ebx,DWORD PTR [eax+0x8]
1000615f:	jne    0x100061dd
10006161:	cmp    BYTE PTR [ebx+0x45],0x0
10006165:	mov    esi,DWORD PTR [edi+0x4]
10006168:	jne    0x1000616d
1000616a:	mov    DWORD PTR [ebx+0x4],esi
1000616d:	mov    ecx,DWORD PTR [esp+0x14]
10006171:	mov    eax,DWORD PTR [ecx+0x4]
10006174:	cmp    DWORD PTR [eax+0x4],edi
10006177:	jne    0x1000617e
10006179:	mov    DWORD PTR [eax+0x4],ebx
1000617c:	jmp    0x10006189
1000617e:	cmp    DWORD PTR [esi],edi
10006180:	jne    0x10006186
10006182:	mov    DWORD PTR [esi],ebx
10006184:	jmp    0x10006189
10006186:	mov    DWORD PTR [esi+0x8],ebx
10006189:	mov    eax,DWORD PTR [ecx+0x4]
1000618c:	cmp    DWORD PTR [eax],edi
1000618e:	jne    0x100061ac
10006190:	cmp    BYTE PTR [ebx+0x45],0x0
10006194:	je     0x1000619a
10006196:	mov    eax,esi
10006198:	jmp    0x100061a7
1000619a:	push   ebx
1000619b:	call   0x10006ab0
100061a0:	mov    ecx,DWORD PTR [esp+0x18]
100061a4:	add    esp,0x4
100061a7:	mov    edx,DWORD PTR [ecx+0x4]
100061aa:	mov    DWORD PTR [edx],eax
100061ac:	mov    eax,DWORD PTR [ecx+0x4]
100061af:	cmp    DWORD PTR [eax+0x8],edi
100061b2:	jne    0x1000623c
100061b8:	cmp    BYTE PTR [ebx+0x45],0x0
100061bc:	je     0x100061c8
100061be:	mov    edx,DWORD PTR [ecx+0x4]
100061c1:	mov    eax,esi
100061c3:	mov    DWORD PTR [edx+0x8],eax
100061c6:	jmp    0x1000623c
100061c8:	push   ebx
100061c9:	call   0x10006a90
100061ce:	mov    ecx,DWORD PTR [esp+0x18]
100061d2:	mov    edx,DWORD PTR [ecx+0x4]
100061d5:	add    esp,0x4
100061d8:	mov    DWORD PTR [edx+0x8],eax
100061db:	jmp    0x1000623c
100061dd:	mov    DWORD PTR [ecx+0x4],eax
100061e0:	mov    ecx,DWORD PTR [edi]
100061e2:	mov    DWORD PTR [eax],ecx
100061e4:	cmp    eax,DWORD PTR [edi+0x8]
100061e7:	jne    0x100061ed
100061e9:	mov    esi,eax
100061eb:	jmp    0x10006207
100061ed:	cmp    BYTE PTR [ebx+0x45],0x0
100061f1:	mov    esi,DWORD PTR [eax+0x4]
100061f4:	jne    0x100061f9
100061f6:	mov    DWORD PTR [ebx+0x4],esi
100061f9:	mov    DWORD PTR [esi],ebx
100061fb:	mov    edx,DWORD PTR [edi+0x8]
100061fe:	mov    DWORD PTR [eax+0x8],edx
10006201:	mov    ecx,DWORD PTR [edi+0x8]
10006204:	mov    DWORD PTR [ecx+0x4],eax
10006207:	mov    edx,DWORD PTR [esp+0x14]
1000620b:	mov    ecx,DWORD PTR [edx+0x4]
1000620e:	cmp    DWORD PTR [ecx+0x4],edi
10006211:	jne    0x10006218
10006213:	mov    DWORD PTR [ecx+0x4],eax
10006216:	jmp    0x10006226
10006218:	mov    ecx,DWORD PTR [edi+0x4]
1000621b:	cmp    DWORD PTR [ecx],edi
1000621d:	jne    0x10006223
1000621f:	mov    DWORD PTR [ecx],eax
10006221:	jmp    0x10006226
10006223:	mov    DWORD PTR [ecx+0x8],eax
10006226:	mov    ecx,DWORD PTR [edi+0x4]
10006229:	mov    DWORD PTR [eax+0x4],ecx
1000622c:	mov    cl,BYTE PTR [eax+0x44]
1000622f:	mov    dl,BYTE PTR [edi+0x44]
10006232:	mov    BYTE PTR [eax+0x44],dl
10006235:	mov    BYTE PTR [edi+0x44],cl
10006238:	mov    ecx,DWORD PTR [esp+0x14]
1000623c:	cmp    BYTE PTR [edi+0x44],0x1
10006240:	jne    0x10006351
10006246:	mov    eax,DWORD PTR [ecx+0x4]
10006249:	cmp    ebx,DWORD PTR [eax+0x4]
1000624c:	je     0x1000634d
10006252:	cmp    BYTE PTR [ebx+0x44],0x1
10006256:	jne    0x1000634d
1000625c:	mov    eax,DWORD PTR [esi]
1000625e:	cmp    ebx,eax
10006260:	jne    0x100062d0
10006262:	mov    eax,DWORD PTR [esi+0x8]
10006265:	cmp    BYTE PTR [eax+0x44],0x0
10006269:	jne    0x10006280
1000626b:	mov    BYTE PTR [eax+0x44],0x1
1000626f:	push   esi
10006270:	mov    BYTE PTR [esi+0x44],0x0
10006274:	call   0x10005f60
10006279:	mov    eax,DWORD PTR [esi+0x8]
1000627c:	mov    ecx,DWORD PTR [esp+0x14]
10006280:	cmp    BYTE PTR [eax+0x45],0x0
10006284:	jne    0x10006305
10006286:	mov    edx,DWORD PTR [eax]
10006288:	cmp    BYTE PTR [edx+0x44],0x1
1000628c:	jne    0x10006297
1000628e:	mov    edx,DWORD PTR [eax+0x8]
10006291:	cmp    BYTE PTR [edx+0x44],0x1
10006295:	je     0x10006301
10006297:	mov    edx,DWORD PTR [eax+0x8]
1000629a:	cmp    BYTE PTR [edx+0x44],0x1
1000629e:	jne    0x100062b7
100062a0:	mov    edx,DWORD PTR [eax]
100062a2:	mov    BYTE PTR [edx+0x44],0x1
100062a6:	push   eax
100062a7:	mov    BYTE PTR [eax+0x44],0x0
100062ab:	call   0x10005fb0
100062b0:	mov    eax,DWORD PTR [esi+0x8]
100062b3:	mov    ecx,DWORD PTR [esp+0x14]
100062b7:	mov    dl,BYTE PTR [esi+0x44]
100062ba:	mov    BYTE PTR [eax+0x44],dl
100062bd:	mov    BYTE PTR [esi+0x44],0x1
100062c1:	mov    eax,DWORD PTR [eax+0x8]
100062c4:	push   esi
100062c5:	mov    BYTE PTR [eax+0x44],0x1
100062c9:	call   0x10005f60
100062ce:	jmp    0x1000634d
100062d0:	cmp    BYTE PTR [eax+0x44],0x0
100062d4:	jne    0x100062ea
100062d6:	mov    BYTE PTR [eax+0x44],0x1
100062da:	push   esi
100062db:	mov    BYTE PTR [esi+0x44],0x0
100062df:	call   0x10005fb0
100062e4:	mov    eax,DWORD PTR [esi]
100062e6:	mov    ecx,DWORD PTR [esp+0x14]
100062ea:	cmp    BYTE PTR [eax+0x45],0x0
100062ee:	jne    0x10006305
100062f0:	mov    edx,DWORD PTR [eax+0x8]
100062f3:	cmp    BYTE PTR [edx+0x44],0x1
100062f7:	jne    0x10006318
100062f9:	mov    edx,DWORD PTR [eax]
100062fb:	cmp    BYTE PTR [edx+0x44],0x1
100062ff:	jne    0x10006318
10006301:	mov    BYTE PTR [eax+0x44],0x0
10006305:	mov    eax,DWORD PTR [ecx+0x4]
10006308:	mov    ebx,esi
1000630a:	cmp    ebx,DWORD PTR [eax+0x4]
1000630d:	mov    esi,DWORD PTR [esi+0x4]
10006310:	jne    0x10006252
10006316:	jmp    0x1000634d
10006318:	mov    edx,DWORD PTR [eax]
1000631a:	cmp    BYTE PTR [edx+0x44],0x1
1000631e:	jne    0x10006337
10006320:	mov    edx,DWORD PTR [eax+0x8]
10006323:	mov    BYTE PTR [edx+0x44],0x1
10006327:	push   eax
10006328:	mov    BYTE PTR [eax+0x44],0x0
1000632c:	call   0x10005f60
10006331:	mov    eax,DWORD PTR [esi]
10006333:	mov    ecx,DWORD PTR [esp+0x14]
10006337:	mov    dl,BYTE PTR [esi+0x44]
1000633a:	mov    BYTE PTR [eax+0x44],dl
1000633d:	mov    BYTE PTR [esi+0x44],0x1
10006341:	mov    eax,DWORD PTR [eax]
10006343:	push   esi
10006344:	mov    BYTE PTR [eax+0x44],0x1
10006348:	call   0x10005fb0
1000634d:	mov    BYTE PTR [ebx+0x44],0x1
10006351:	cmp    DWORD PTR [edi+0x40],0x10
10006355:	jb     0x10006363
10006357:	mov    ecx,DWORD PTR [edi+0x2c]
1000635a:	push   ecx
1000635b:	call   0x10015b26
10006360:	add    esp,0x4
10006363:	xor    esi,esi
10006365:	mov    ebx,0xf
1000636a:	mov    DWORD PTR [edi+0x40],ebx
1000636d:	mov    DWORD PTR [edi+0x3c],esi
10006370:	mov    BYTE PTR [edi+0x2c],0x0
10006374:	cmp    DWORD PTR [edi+0x24],0x10
10006378:	jb     0x10006386
1000637a:	mov    edx,DWORD PTR [edi+0x10]
1000637d:	push   edx
1000637e:	call   0x10015b26
10006383:	add    esp,0x4
10006386:	mov    DWORD PTR [edi+0x24],ebx
10006389:	mov    DWORD PTR [edi+0x20],esi
1000638c:	push   edi
1000638d:	mov    BYTE PTR [edi+0x10],0x0
10006391:	call   0x10015b26
10006396:	mov    ecx,DWORD PTR [esp+0x18]
1000639a:	mov    eax,DWORD PTR [ecx+0x8]
1000639d:	add    esp,0x4
100063a0:	cmp    eax,esi
100063a2:	jbe    0x100063aa
100063a4:	add    eax,0xffffffff
100063a7:	mov    DWORD PTR [ecx+0x8],eax
100063aa:	mov    eax,DWORD PTR [ebp+0x8]
100063ad:	mov    ecx,DWORD PTR [ebp+0xc]
100063b0:	mov    edx,DWORD PTR [ebp+0x10]
100063b3:	mov    DWORD PTR [eax],ecx
100063b5:	mov    DWORD PTR [eax+0x4],edx
100063b8:	mov    ecx,DWORD PTR [esp+0x60]
100063bc:	mov    DWORD PTR fs:0x0,ecx
100063c3:	pop    ecx
100063c4:	pop    edi
100063c5:	pop    esi
100063c6:	pop    ebx
100063c7:	mov    esp,ebp
100063c9:	pop    ebp
100063ca:	ret    0xc
100063cd:	int3   
100063ce:	int3   
100063cf:	int3   
100063d0:	push   esi
100063d1:	mov    esi,ecx
100063d3:	cmp    DWORD PTR [esi],0x0
100063d6:	jne    0x100063dd
100063d8:	call   0x10016193
100063dd:	mov    eax,DWORD PTR [esi+0x4]
100063e0:	cmp    BYTE PTR [eax+0x45],0x0
100063e4:	je     0x100063f8
100063e6:	mov    eax,DWORD PTR [eax+0x8]
100063e9:	mov    DWORD PTR [esi+0x4],eax
100063ec:	cmp    BYTE PTR [eax+0x45],0x0
100063f0:	je     0x10006457
100063f2:	pop    esi
100063f3:	jmp    0x10016193
100063f8:	mov    ecx,DWORD PTR [eax]
100063fa:	cmp    BYTE PTR [ecx+0x45],0x0
100063fe:	jne    0x10006420
10006400:	mov    eax,DWORD PTR [ecx+0x8]
10006403:	cmp    BYTE PTR [eax+0x45],0x0
10006407:	jne    0x1000641b
10006409:	lea    esp,[esp+0x0]
10006410:	mov    ecx,eax
10006412:	mov    eax,DWORD PTR [ecx+0x8]
10006415:	cmp    BYTE PTR [eax+0x45],0x0
10006419:	je     0x10006410
1000641b:	mov    DWORD PTR [esi+0x4],ecx
1000641e:	pop    esi
1000641f:	ret    
10006420:	mov    eax,DWORD PTR [eax+0x4]
10006423:	cmp    BYTE PTR [eax+0x45],0x0
10006427:	jne    0x10006445
10006429:	lea    esp,[esp+0x0]
10006430:	mov    ecx,DWORD PTR [esi+0x4]
10006433:	cmp    ecx,DWORD PTR [eax]
10006435:	jne    0x10006445
10006437:	mov    DWORD PTR [esi+0x4],eax
1000643a:	mov    edx,eax
1000643c:	mov    eax,DWORD PTR [edx+0x4]
1000643f:	cmp    BYTE PTR [eax+0x45],0x0
10006443:	je     0x10006430
10006445:	mov    ecx,DWORD PTR [esi+0x4]
10006448:	cmp    BYTE PTR [ecx+0x45],0x0
1000644c:	je     0x10006454
1000644e:	pop    esi
1000644f:	jmp    0x10016193
10006454:	mov    DWORD PTR [esi+0x4],eax
10006457:	pop    esi
10006458:	ret    
10006459:	int3   
1000645a:	int3   
1000645b:	int3   
1000645c:	int3   
1000645d:	int3   
1000645e:	int3   
1000645f:	int3   
10006460:	push   esi
10006461:	mov    esi,ecx
10006463:	cmp    DWORD PTR [esi],0x0
10006466:	jne    0x1000646d
10006468:	call   0x10016193
1000646d:	mov    eax,DWORD PTR [esi+0x4]
10006470:	cmp    BYTE PTR [eax+0x45],0x0
10006474:	je     0x1000647c
10006476:	pop    esi
10006477:	jmp    0x10016193
1000647c:	mov    ecx,DWORD PTR [eax+0x8]
1000647f:	cmp    BYTE PTR [ecx+0x45],0x0
10006483:	jne    0x1000649f
10006485:	mov    eax,DWORD PTR [ecx]
10006487:	cmp    BYTE PTR [eax+0x45],0x0
1000648b:	jne    0x1000649a
1000648d:	lea    ecx,[ecx+0x0]
10006490:	mov    ecx,eax
10006492:	mov    eax,DWORD PTR [ecx]
10006494:	cmp    BYTE PTR [eax+0x45],0x0
10006498:	je     0x10006490
1000649a:	mov    DWORD PTR [esi+0x4],ecx
1000649d:	pop    esi
1000649e:	ret    
1000649f:	mov    eax,DWORD PTR [eax+0x4]
100064a2:	cmp    BYTE PTR [eax+0x45],0x0
100064a6:	jne    0x100064be
100064a8:	mov    ecx,DWORD PTR [esi+0x4]
100064ab:	cmp    ecx,DWORD PTR [eax+0x8]
100064ae:	jne    0x100064be
100064b0:	mov    DWORD PTR [esi+0x4],eax
100064b3:	mov    edx,eax
100064b5:	mov    eax,DWORD PTR [edx+0x4]
100064b8:	cmp    BYTE PTR [eax+0x45],0x0
100064bc:	je     0x100064a8
100064be:	mov    DWORD PTR [esi+0x4],eax
100064c1:	pop    esi
100064c2:	ret    
100064c3:	int3   
100064c4:	int3   
100064c5:	int3   
100064c6:	int3   
100064c7:	int3   
100064c8:	int3   
100064c9:	int3   
100064ca:	int3   
100064cb:	int3   
100064cc:	int3   
100064cd:	int3   
100064ce:	int3   
100064cf:	int3   
100064d0:	mov    ecx,DWORD PTR [esp+0x4]
100064d4:	sub    esp,0xc
100064d7:	test   ecx,ecx
100064d9:	ja     0x100064ef
100064db:	xor    ecx,ecx
100064dd:	lea    edx,[ecx+ecx*1]
100064e0:	push   edx
100064e1:	call   0x10016464
100064e6:	add    esp,0x4
100064e9:	add    esp,0xc
100064ec:	ret    0x4
100064ef:	or     eax,0xffffffff
100064f2:	xor    edx,edx
100064f4:	div    ecx
100064f6:	cmp    eax,0x2
100064f9:	jae    0x100064dd
100064fb:	lea    eax,[esp+0x10]
100064ff:	push   eax
10006500:	lea    ecx,[esp+0x4]
10006504:	mov    DWORD PTR [esp+0x14],0x0
1000650c:	call   0x100162be
10006511:	push   0x10085d44
10006516:	lea    ecx,[esp+0x4]
1000651a:	push   ecx
1000651b:	mov    DWORD PTR [esp+0x8],0x1003450c
10006523:	call   0x1001621e
10006528:	int3   
10006529:	int3   
1000652a:	int3   
1000652b:	int3   
1000652c:	int3   
1000652d:	int3   
1000652e:	int3   
1000652f:	int3   
10006530:	push   ebp
10006531:	mov    ebp,esp
10006533:	and    esp,0xfffffff8
10006536:	push   0xffffffff
10006538:	push   0x1002adc8
1000653d:	mov    eax,fs:0x0
10006543:	push   eax
10006544:	sub    esp,0x50
10006547:	push   ebx
10006548:	push   esi
10006549:	push   edi
1000654a:	mov    eax,ds:0x100951fc
1000654f:	xor    eax,esp
10006551:	push   eax
10006552:	lea    eax,[esp+0x60]
10006556:	mov    fs:0x0,eax
1000655c:	mov    DWORD PTR [esp+0x14],ecx
10006560:	mov    edi,DWORD PTR [ebp+0x10]
10006563:	cmp    BYTE PTR [edi+0x45],0x0
10006567:	je     0x100065b5
10006569:	push   0x1b
1000656b:	xor    esi,esi
1000656d:	push   0x10082a74
10006572:	lea    ecx,[esp+0x20]
10006576:	mov    DWORD PTR [esp+0x38],0xf
1000657e:	mov    DWORD PTR [esp+0x34],esi
10006582:	mov    BYTE PTR [esp+0x24],0x0
10006587:	call   0x10003900
1000658c:	lea    eax,[esp+0x18]
10006590:	push   eax
10006591:	lea    ecx,[esp+0x38]
10006595:	mov    DWORD PTR [esp+0x6c],esi
10006599:	call   0x10001390
1000659e:	push   0x10085cd0
100065a3:	lea    ecx,[esp+0x38]
100065a7:	push   ecx
100065a8:	mov    DWORD PTR [esp+0x3c],0x10034518
100065b0:	call   0x1001621e
100065b5:	lea    ecx,[ebp+0xc]
100065b8:	call   0x10006460
100065bd:	mov    ecx,DWORD PTR [edi]
100065bf:	cmp    BYTE PTR [ecx+0x45],0x0
100065c3:	je     0x100065ca
100065c5:	mov    ebx,DWORD PTR [edi+0x8]
100065c8:	jmp    0x100065e1
100065ca:	mov    edx,DWORD PTR [edi+0x8]
100065cd:	cmp    BYTE PTR [edx+0x45],0x0
100065d1:	je     0x100065d7
100065d3:	mov    ebx,ecx
100065d5:	jmp    0x100065e1
100065d7:	mov    eax,DWORD PTR [ebp+0x10]
100065da:	cmp    eax,edi
100065dc:	mov    ebx,DWORD PTR [eax+0x8]
100065df:	jne    0x1000665d
100065e1:	cmp    BYTE PTR [ebx+0x45],0x0
100065e5:	mov    esi,DWORD PTR [edi+0x4]
100065e8:	jne    0x100065ed
100065ea:	mov    DWORD PTR [ebx+0x4],esi
100065ed:	mov    ecx,DWORD PTR [esp+0x14]
100065f1:	mov    eax,DWORD PTR [ecx+0x4]
100065f4:	cmp    DWORD PTR [eax+0x4],edi
100065f7:	jne    0x100065fe
100065f9:	mov    DWORD PTR [eax+0x4],ebx
100065fc:	jmp    0x10006609
100065fe:	cmp    DWORD PTR [esi],edi
10006600:	jne    0x10006606
10006602:	mov    DWORD PTR [esi],ebx
10006604:	jmp    0x10006609
10006606:	mov    DWORD PTR [esi+0x8],ebx
10006609:	mov    eax,DWORD PTR [ecx+0x4]
1000660c:	cmp    DWORD PTR [eax],edi
1000660e:	jne    0x1000662c
10006610:	cmp    BYTE PTR [ebx+0x45],0x0
10006614:	je     0x1000661a
10006616:	mov    eax,esi
10006618:	jmp    0x10006627
1000661a:	push   ebx
1000661b:	call   0x10006ab0
10006620:	mov    ecx,DWORD PTR [esp+0x18]
10006624:	add    esp,0x4
10006627:	mov    edx,DWORD PTR [ecx+0x4]
1000662a:	mov    DWORD PTR [edx],eax
1000662c:	mov    eax,DWORD PTR [ecx+0x4]
1000662f:	cmp    DWORD PTR [eax+0x8],edi
10006632:	jne    0x100066bc
10006638:	cmp    BYTE PTR [ebx+0x45],0x0
1000663c:	je     0x10006648
1000663e:	mov    edx,DWORD PTR [ecx+0x4]
10006641:	mov    eax,esi
10006643:	mov    DWORD PTR [edx+0x8],eax
10006646:	jmp    0x100066bc
10006648:	push   ebx
10006649:	call   0x10006a90
1000664e:	mov    ecx,DWORD PTR [esp+0x18]
10006652:	mov    edx,DWORD PTR [ecx+0x4]
10006655:	add    esp,0x4
10006658:	mov    DWORD PTR [edx+0x8],eax
1000665b:	jmp    0x100066bc
1000665d:	mov    DWORD PTR [ecx+0x4],eax
10006660:	mov    ecx,DWORD PTR [edi]
10006662:	mov    DWORD PTR [eax],ecx
10006664:	cmp    eax,DWORD PTR [edi+0x8]
10006667:	jne    0x1000666d
10006669:	mov    esi,eax
1000666b:	jmp    0x10006687
1000666d:	cmp    BYTE PTR [ebx+0x45],0x0
10006671:	mov    esi,DWORD PTR [eax+0x4]
10006674:	jne    0x10006679
10006676:	mov    DWORD PTR [ebx+0x4],esi
10006679:	mov    DWORD PTR [esi],ebx
1000667b:	mov    edx,DWORD PTR [edi+0x8]
1000667e:	mov    DWORD PTR [eax+0x8],edx
10006681:	mov    ecx,DWORD PTR [edi+0x8]
10006684:	mov    DWORD PTR [ecx+0x4],eax
10006687:	mov    edx,DWORD PTR [esp+0x14]
1000668b:	mov    ecx,DWORD PTR [edx+0x4]
1000668e:	cmp    DWORD PTR [ecx+0x4],edi
10006691:	jne    0x10006698
10006693:	mov    DWORD PTR [ecx+0x4],eax
10006696:	jmp    0x100066a6
10006698:	mov    ecx,DWORD PTR [edi+0x4]
1000669b:	cmp    DWORD PTR [ecx],edi
1000669d:	jne    0x100066a3
1000669f:	mov    DWORD PTR [ecx],eax
100066a1:	jmp    0x100066a6
100066a3:	mov    DWORD PTR [ecx+0x8],eax
100066a6:	mov    ecx,DWORD PTR [edi+0x4]
100066a9:	mov    DWORD PTR [eax+0x4],ecx
100066ac:	mov    cl,BYTE PTR [eax+0x44]
100066af:	mov    dl,BYTE PTR [edi+0x44]
100066b2:	mov    BYTE PTR [eax+0x44],dl
100066b5:	mov    BYTE PTR [edi+0x44],cl
100066b8:	mov    ecx,DWORD PTR [esp+0x14]
100066bc:	cmp    BYTE PTR [edi+0x44],0x1
100066c0:	jne    0x100067d1
100066c6:	mov    eax,DWORD PTR [ecx+0x4]
100066c9:	cmp    ebx,DWORD PTR [eax+0x4]
100066cc:	je     0x100067cd
100066d2:	cmp    BYTE PTR [ebx+0x44],0x1
100066d6:	jne    0x100067cd
100066dc:	mov    eax,DWORD PTR [esi]
100066de:	cmp    ebx,eax
100066e0:	jne    0x10006750
100066e2:	mov    eax,DWORD PTR [esi+0x8]
100066e5:	cmp    BYTE PTR [eax+0x44],0x0
100066e9:	jne    0x10006700
100066eb:	mov    BYTE PTR [eax+0x44],0x1
100066ef:	push   esi
100066f0:	mov    BYTE PTR [esi+0x44],0x0
100066f4:	call   0x10005f60
100066f9:	mov    eax,DWORD PTR [esi+0x8]
100066fc:	mov    ecx,DWORD PTR [esp+0x14]
10006700:	cmp    BYTE PTR [eax+0x45],0x0
10006704:	jne    0x10006785
10006706:	mov    edx,DWORD PTR [eax]
10006708:	cmp    BYTE PTR [edx+0x44],0x1
1000670c:	jne    0x10006717
1000670e:	mov    edx,DWORD PTR [eax+0x8]
10006711:	cmp    BYTE PTR [edx+0x44],0x1
10006715:	je     0x10006781
10006717:	mov    edx,DWORD PTR [eax+0x8]
1000671a:	cmp    BYTE PTR [edx+0x44],0x1
1000671e:	jne    0x10006737
10006720:	mov    edx,DWORD PTR [eax]
10006722:	mov    BYTE PTR [edx+0x44],0x1
10006726:	push   eax
10006727:	mov    BYTE PTR [eax+0x44],0x0
1000672b:	call   0x10005fb0
10006730:	mov    eax,DWORD PTR [esi+0x8]
10006733:	mov    ecx,DWORD PTR [esp+0x14]
10006737:	mov    dl,BYTE PTR [esi+0x44]
1000673a:	mov    BYTE PTR [eax+0x44],dl
1000673d:	mov    BYTE PTR [esi+0x44],0x1
10006741:	mov    eax,DWORD PTR [eax+0x8]
10006744:	push   esi
10006745:	mov    BYTE PTR [eax+0x44],0x1
10006749:	call   0x10005f60
1000674e:	jmp    0x100067cd
10006750:	cmp    BYTE PTR [eax+0x44],0x0
10006754:	jne    0x1000676a
10006756:	mov    BYTE PTR [eax+0x44],0x1
1000675a:	push   esi
1000675b:	mov    BYTE PTR [esi+0x44],0x0
1000675f:	call   0x10005fb0
10006764:	mov    eax,DWORD PTR [esi]
10006766:	mov    ecx,DWORD PTR [esp+0x14]
1000676a:	cmp    BYTE PTR [eax+0x45],0x0
1000676e:	jne    0x10006785
10006770:	mov    edx,DWORD PTR [eax+0x8]
10006773:	cmp    BYTE PTR [edx+0x44],0x1
10006777:	jne    0x10006798
10006779:	mov    edx,DWORD PTR [eax]
1000677b:	cmp    BYTE PTR [edx+0x44],0x1
1000677f:	jne    0x10006798
10006781:	mov    BYTE PTR [eax+0x44],0x0
10006785:	mov    eax,DWORD PTR [ecx+0x4]
10006788:	mov    ebx,esi
1000678a:	cmp    ebx,DWORD PTR [eax+0x4]
1000678d:	mov    esi,DWORD PTR [esi+0x4]
10006790:	jne    0x100066d2
10006796:	jmp    0x100067cd
10006798:	mov    edx,DWORD PTR [eax]
1000679a:	cmp    BYTE PTR [edx+0x44],0x1
1000679e:	jne    0x100067b7
100067a0:	mov    edx,DWORD PTR [eax+0x8]
100067a3:	mov    BYTE PTR [edx+0x44],0x1
100067a7:	push   eax
100067a8:	mov    BYTE PTR [eax+0x44],0x0
100067ac:	call   0x10005f60
100067b1:	mov    eax,DWORD PTR [esi]
100067b3:	mov    ecx,DWORD PTR [esp+0x14]
100067b7:	mov    dl,BYTE PTR [esi+0x44]
100067ba:	mov    BYTE PTR [eax+0x44],dl
100067bd:	mov    BYTE PTR [esi+0x44],0x1
100067c1:	mov    eax,DWORD PTR [eax]
100067c3:	push   esi
100067c4:	mov    BYTE PTR [eax+0x44],0x1
100067c8:	call   0x10005fb0
100067cd:	mov    BYTE PTR [ebx+0x44],0x1
100067d1:	cmp    DWORD PTR [edi+0x40],0x8
100067d5:	jb     0x100067e3
100067d7:	mov    ecx,DWORD PTR [edi+0x2c]
100067da:	push   ecx
100067db:	call   0x10015b26
100067e0:	add    esp,0x4
100067e3:	xor    esi,esi
100067e5:	mov    ebx,0x7
100067ea:	mov    DWORD PTR [edi+0x40],ebx
100067ed:	mov    DWORD PTR [edi+0x3c],esi
100067f0:	mov    WORD PTR [edi+0x2c],si
100067f4:	cmp    DWORD PTR [edi+0x24],0x8
100067f8:	jb     0x10006806
100067fa:	mov    edx,DWORD PTR [edi+0x10]
100067fd:	push   edx
100067fe:	call   0x10015b26
10006803:	add    esp,0x4
10006806:	mov    DWORD PTR [edi+0x24],ebx
10006809:	mov    DWORD PTR [edi+0x20],esi
1000680c:	push   edi
1000680d:	mov    WORD PTR [edi+0x10],si
10006811:	call   0x10015b26
10006816:	mov    ecx,DWORD PTR [esp+0x18]
1000681a:	mov    eax,DWORD PTR [ecx+0x8]
1000681d:	add    esp,0x4
10006820:	cmp    eax,esi
10006822:	jbe    0x1000682a
10006824:	add    eax,0xffffffff
10006827:	mov    DWORD PTR [ecx+0x8],eax
1000682a:	mov    eax,DWORD PTR [ebp+0x8]
1000682d:	mov    ecx,DWORD PTR [ebp+0xc]
10006830:	mov    edx,DWORD PTR [ebp+0x10]
10006833:	mov    DWORD PTR [eax],ecx
10006835:	mov    DWORD PTR [eax+0x4],edx
10006838:	mov    ecx,DWORD PTR [esp+0x60]
1000683c:	mov    DWORD PTR fs:0x0,ecx
10006843:	pop    ecx
10006844:	pop    edi
10006845:	pop    esi
10006846:	pop    ebx
10006847:	mov    esp,ebp
10006849:	pop    ebp
1000684a:	ret    0xc
1000684d:	int3   
1000684e:	int3   
1000684f:	int3   
10006850:	push   0x48
10006852:	call   0x10016464
10006857:	add    esp,0x4
1000685a:	test   eax,eax
1000685c:	je     0x10006864
1000685e:	mov    DWORD PTR [eax],0x0
10006864:	lea    ecx,[eax+0x4]
10006867:	test   ecx,ecx
10006869:	je     0x10006871
1000686b:	mov    DWORD PTR [ecx],0x0
10006871:	lea    ecx,[eax+0x8]
10006874:	test   ecx,ecx
10006876:	je     0x1000687e
10006878:	mov    DWORD PTR [ecx],0x0
1000687e:	mov    BYTE PTR [eax+0x44],0x1
10006882:	mov    BYTE PTR [eax+0x45],0x0
10006886:	ret    
10006887:	int3   
10006888:	int3   
10006889:	int3   
1000688a:	int3   
1000688b:	int3   
1000688c:	int3   
1000688d:	int3   
1000688e:	int3   
1000688f:	int3   
10006890:	push   0xffffffff
10006892:	push   0x1002a9d8
10006897:	mov    eax,fs:0x0
1000689d:	push   eax
1000689e:	push   ecx
1000689f:	push   ebx
100068a0:	push   esi
100068a1:	push   edi
100068a2:	mov    eax,ds:0x100951fc
100068a7:	xor    eax,esp
100068a9:	push   eax
100068aa:	lea    eax,[esp+0x14]
100068ae:	mov    fs:0x0,eax
100068b4:	mov    esi,ecx
100068b6:	mov    DWORD PTR [esp+0x10],esi
100068ba:	mov    edi,DWORD PTR [esp+0x24]
100068be:	xor    ebx,ebx
100068c0:	push   0xffffffff
100068c2:	push   ebx
100068c3:	mov    DWORD PTR [esi+0x18],0xf
100068ca:	mov    DWORD PTR [esi+0x14],ebx
100068cd:	push   edi
100068ce:	mov    BYTE PTR [esi+0x4],bl
100068d1:	call   0x10003820
100068d6:	push   0xffffffff
100068d8:	lea    ecx,[esi+0x1c]
100068db:	mov    DWORD PTR [esp+0x20],ebx
100068df:	lea    eax,[edi+0x1c]
100068e2:	push   ebx
100068e3:	mov    DWORD PTR [ecx+0x18],0xf
100068ea:	mov    DWORD PTR [ecx+0x14],ebx
100068ed:	push   eax
100068ee:	mov    BYTE PTR [ecx+0x4],bl
100068f1:	call   0x10003820
100068f6:	mov    eax,esi
100068f8:	mov    ecx,DWORD PTR [esp+0x14]
100068fc:	mov    DWORD PTR fs:0x0,ecx
10006903:	pop    ecx
10006904:	pop    edi
10006905:	pop    esi
10006906:	pop    ebx
10006907:	add    esp,0x10
1000690a:	ret    0x4
1000690d:	int3   
1000690e:	int3   
1000690f:	int3   
10006910:	push   0xffffffff
10006912:	push   0x1002a9a8
10006917:	mov    eax,fs:0x0
1000691d:	push   eax
1000691e:	push   ecx
1000691f:	push   ebx
10006920:	push   esi
10006921:	push   edi
10006922:	mov    eax,ds:0x100951fc
10006927:	xor    eax,esp
10006929:	push   eax
1000692a:	lea    eax,[esp+0x14]
1000692e:	mov    fs:0x0,eax
10006934:	mov    esi,ecx
10006936:	mov    DWORD PTR [esp+0x10],esi
1000693a:	mov    ebx,DWORD PTR [esp+0x24]
1000693e:	xor    edi,edi
10006940:	push   0xffffffff
10006942:	push   edi
10006943:	mov    DWORD PTR [esi+0x18],0x7
1000694a:	mov    DWORD PTR [esi+0x14],edi
1000694d:	push   ebx
1000694e:	mov    WORD PTR [esi+0x4],di
10006952:	call   0x10004cd0
10006957:	push   0xffffffff
10006959:	lea    ecx,[esi+0x1c]
1000695c:	mov    DWORD PTR [esp+0x20],edi
10006960:	lea    eax,[ebx+0x1c]
10006963:	push   edi
10006964:	mov    DWORD PTR [ecx+0x18],0x7
1000696b:	mov    DWORD PTR [ecx+0x14],edi
1000696e:	push   eax
1000696f:	mov    WORD PTR [ecx+0x4],di
10006973:	call   0x10004cd0
10006978:	mov    eax,esi
1000697a:	mov    ecx,DWORD PTR [esp+0x14]
1000697e:	mov    DWORD PTR fs:0x0,ecx
10006985:	pop    ecx
10006986:	pop    edi
10006987:	pop    esi
10006988:	pop    ebx
10006989:	add    esp,0x10
1000698c:	ret    0x4
1000698f:	int3   
10006990:	push   ecx
10006991:	push   ebx
10006992:	push   esi
10006993:	mov    esi,DWORD PTR [esp+0x10]
10006997:	xor    ebx,ebx
10006999:	cmp    BYTE PTR [esi+0x45],bl
1000699c:	push   edi
1000699d:	mov    DWORD PTR [esp+0xc],ecx
100069a1:	mov    edi,esi
100069a3:	jne    0x10006a06
100069a5:	push   ebp
100069a6:	lea    ebp,[ebx+0xf]
100069a9:	lea    esp,[esp+0x0]
100069b0:	mov    eax,DWORD PTR [edi+0x8]
100069b3:	mov    ecx,DWORD PTR [esp+0x10]
100069b7:	push   eax
100069b8:	call   0x10006990
100069bd:	cmp    DWORD PTR [esi+0x40],0x10
100069c1:	mov    edi,DWORD PTR [edi]
100069c3:	jb     0x100069d1
100069c5:	mov    ecx,DWORD PTR [esi+0x2c]
100069c8:	push   ecx
100069c9:	call   0x10015b26
100069ce:	add    esp,0x4
100069d1:	mov    DWORD PTR [esi+0x40],ebp
100069d4:	mov    DWORD PTR [esi+0x3c],ebx
100069d7:	mov    BYTE PTR [esi+0x2c],bl
100069da:	cmp    DWORD PTR [esi+0x24],0x10
100069de:	jb     0x100069ec
100069e0:	mov    edx,DWORD PTR [esi+0x10]
100069e3:	push   edx
100069e4:	call   0x10015b26
100069e9:	add    esp,0x4
100069ec:	mov    DWORD PTR [esi+0x24],ebp
100069ef:	mov    DWORD PTR [esi+0x20],ebx
100069f2:	push   esi
100069f3:	mov    BYTE PTR [esi+0x10],bl
100069f6:	call   0x10015b26
100069fb:	add    esp,0x4
100069fe:	cmp    BYTE PTR [edi+0x45],bl
10006a01:	mov    esi,edi
10006a03:	je     0x100069b0
10006a05:	pop    ebp
10006a06:	pop    edi
10006a07:	pop    esi
10006a08:	pop    ebx
10006a09:	pop    ecx
10006a0a:	ret    0x4
10006a0d:	int3   
10006a0e:	int3   
10006a0f:	int3   
10006a10:	push   ecx
10006a11:	push   ebx
10006a12:	push   esi
10006a13:	mov    esi,DWORD PTR [esp+0x10]
10006a17:	xor    ebx,ebx
10006a19:	cmp    BYTE PTR [esi+0x45],bl
10006a1c:	push   edi
10006a1d:	mov    DWORD PTR [esp+0xc],ecx
10006a21:	mov    edi,esi
10006a23:	jne    0x10006a88
10006a25:	push   ebp
10006a26:	lea    ebp,[ebx+0x7]
10006a29:	lea    esp,[esp+0x0]
10006a30:	mov    eax,DWORD PTR [edi+0x8]
10006a33:	mov    ecx,DWORD PTR [esp+0x10]
10006a37:	push   eax
10006a38:	call   0x10006a10
10006a3d:	cmp    DWORD PTR [esi+0x40],0x8
10006a41:	mov    edi,DWORD PTR [edi]
10006a43:	jb     0x10006a51
10006a45:	mov    ecx,DWORD PTR [esi+0x2c]
10006a48:	push   ecx
10006a49:	call   0x10015b26
10006a4e:	add    esp,0x4
10006a51:	mov    DWORD PTR [esi+0x40],ebp
10006a54:	mov    DWORD PTR [esi+0x3c],ebx
10006a57:	mov    WORD PTR [esi+0x2c],bx
10006a5b:	cmp    DWORD PTR [esi+0x24],0x8
10006a5f:	jb     0x10006a6d
10006a61:	mov    edx,DWORD PTR [esi+0x10]
10006a64:	push   edx
10006a65:	call   0x10015b26
10006a6a:	add    esp,0x4
10006a6d:	mov    DWORD PTR [esi+0x24],ebp
10006a70:	mov    DWORD PTR [esi+0x20],ebx
10006a73:	push   esi
10006a74:	mov    WORD PTR [esi+0x10],bx
10006a78:	call   0x10015b26
10006a7d:	add    esp,0x4
10006a80:	cmp    BYTE PTR [edi+0x45],bl
10006a83:	mov    esi,edi
10006a85:	je     0x10006a30
10006a87:	pop    ebp
10006a88:	pop    edi
10006a89:	pop    esi
10006a8a:	pop    ebx
10006a8b:	pop    ecx
10006a8c:	ret    0x4
10006a8f:	int3   
10006a90:	mov    eax,DWORD PTR [esp+0x4]
10006a94:	mov    ecx,DWORD PTR [eax+0x8]
10006a97:	cmp    BYTE PTR [ecx+0x45],0x0
10006a9b:	jne    0x10006aab
10006a9d:	lea    ecx,[ecx+0x0]
10006aa0:	mov    eax,ecx
10006aa2:	mov    ecx,DWORD PTR [eax+0x8]
10006aa5:	cmp    BYTE PTR [ecx+0x45],0x0
10006aa9:	je     0x10006aa0
10006aab:	ret    
10006aac:	int3   
10006aad:	int3   
10006aae:	int3   
10006aaf:	int3   
10006ab0:	mov    eax,DWORD PTR [esp+0x4]
10006ab4:	mov    ecx,DWORD PTR [eax]
10006ab6:	cmp    BYTE PTR [ecx+0x45],0x0
10006aba:	jne    0x10006aca
10006abc:	lea    esp,[esp+0x0]
10006ac0:	mov    eax,ecx
10006ac2:	mov    ecx,DWORD PTR [eax]
10006ac4:	cmp    BYTE PTR [ecx+0x45],0x0
10006ac8:	je     0x10006ac0
10006aca:	ret    
10006acb:	int3   
10006acc:	int3   
10006acd:	int3   
10006ace:	int3   
10006acf:	int3   
10006ad0:	mov    eax,DWORD PTR [esp+0x8]
10006ad4:	mov    ecx,DWORD PTR [esp+0xc]
10006ad8:	or     edx,0xffffffff
10006adb:	sub    edx,eax
10006add:	cmp    edx,ecx
10006adf:	jae    0x10006ae7
10006ae1:	mov    eax,0x80070057
10006ae6:	ret    
10006ae7:	add    eax,ecx
10006ae9:	mov    ecx,DWORD PTR [esp+0x4]
10006aed:	mov    DWORD PTR [ecx],eax
10006aef:	xor    eax,eax
10006af1:	ret    
10006af2:	int3   
10006af3:	int3   
10006af4:	int3   
10006af5:	int3   
10006af6:	int3   
10006af7:	int3   
10006af8:	int3   
10006af9:	int3   
10006afa:	int3   
10006afb:	int3   
10006afc:	int3   
10006afd:	int3   
10006afe:	int3   
10006aff:	int3   
10006b00:	push   0xffffffff
10006b02:	push   0x1002ac08
10006b07:	mov    eax,fs:0x0
10006b0d:	push   eax
10006b0e:	sub    esp,0x20
10006b11:	push   ebx
10006b12:	push   ebp
10006b13:	mov    eax,ds:0x100951fc
10006b18:	xor    eax,esp
10006b1a:	push   eax
10006b1b:	lea    eax,[esp+0x2c]
10006b1f:	mov    fs:0x0,eax
10006b25:	mov    eax,DWORD PTR [esp+0x3c]
10006b29:	xor    ebx,ebx
10006b2b:	push   0xffffffff
10006b2d:	push   ebx
10006b2e:	push   eax
10006b2f:	lea    ecx,[esp+0x1c]
10006b33:	mov    DWORD PTR [esp+0x18],ebx
10006b37:	mov    DWORD PTR [esp+0x34],0xf
10006b3f:	mov    DWORD PTR [esp+0x30],ebx
10006b43:	mov    BYTE PTR [esp+0x20],bl
10006b47:	call   0x10003820
10006b4c:	mov    eax,edi
10006b4e:	mov    DWORD PTR [esp+0x34],ebx
10006b52:	lea    ebp,[eax+0x1]
10006b55:	mov    cl,BYTE PTR [eax]
10006b57:	add    eax,0x1
10006b5a:	cmp    cl,bl
10006b5c:	jne    0x10006b55
10006b5e:	sub    eax,ebp
10006b60:	push   eax
10006b61:	push   edi
10006b62:	lea    eax,[esp+0x18]
10006b66:	call   0x10002c30
10006b6b:	push   0xffffffff
10006b6d:	push   ebx
10006b6e:	mov    DWORD PTR [esi+0x18],0xf
10006b75:	mov    DWORD PTR [esi+0x14],ebx
10006b78:	push   eax
10006b79:	mov    ecx,esi
10006b7b:	mov    BYTE PTR [esi+0x4],bl
10006b7e:	call   0x10003820
10006b83:	cmp    DWORD PTR [esp+0x28],0x10
10006b88:	jb     0x10006b97
10006b8a:	mov    ecx,DWORD PTR [esp+0x14]
10006b8e:	push   ecx
10006b8f:	call   0x10015b26
10006b94:	add    esp,0x4
10006b97:	mov    eax,esi
10006b99:	mov    ecx,DWORD PTR [esp+0x2c]
10006b9d:	mov    DWORD PTR fs:0x0,ecx
10006ba4:	pop    ecx
10006ba5:	pop    ebp
10006ba6:	pop    ebx
10006ba7:	add    esp,0x2c
10006baa:	ret    
10006bab:	int3   
10006bac:	int3   
10006bad:	int3   
10006bae:	int3   
10006baf:	int3   
10006bb0:	mov    eax,DWORD PTR [esp+0x4]
10006bb4:	mov    cl,BYTE PTR [eax]
10006bb6:	push   esi
10006bb7:	mov    esi,DWORD PTR [esp+0xc]
10006bbb:	mov    dl,BYTE PTR [esi]
10006bbd:	mov    BYTE PTR [eax],dl
10006bbf:	mov    BYTE PTR [esi],cl
10006bc1:	pop    esi
10006bc2:	ret    
10006bc3:	int3   
10006bc4:	int3   
10006bc5:	int3   
10006bc6:	int3   
10006bc7:	int3   
10006bc8:	int3   
10006bc9:	int3   
10006bca:	int3   
10006bcb:	int3   
10006bcc:	int3   
10006bcd:	int3   
10006bce:	int3   
10006bcf:	int3   
10006bd0:	mov    eax,DWORD PTR [esp+0x4]
10006bd4:	push   esi
10006bd5:	push   eax
10006bd6:	mov    esi,ecx
10006bd8:	call   0x10016324
10006bdd:	mov    DWORD PTR [esi],0x1003450c
10006be3:	mov    eax,esi
10006be5:	pop    esi
10006be6:	ret    0x4
10006be9:	int3   
10006bea:	int3   
10006beb:	int3   
10006bec:	int3   
10006bed:	int3   
10006bee:	int3   
10006bef:	int3   
10006bf0:	push   ebx
10006bf1:	push   ebp
10006bf2:	push   esi
10006bf3:	push   edi
10006bf4:	mov    edi,DWORD PTR [esp+0x14]
10006bf8:	mov    esi,ecx
10006bfa:	cmp    DWORD PTR [esi+0x14],edi
10006bfd:	jae    0x10006c04
10006bff:	call   0x10015a06
10006c04:	mov    eax,DWORD PTR [esi+0x14]
10006c07:	mov    ebx,DWORD PTR [esp+0x18]
10006c0b:	sub    eax,edi
10006c0d:	cmp    eax,ebx
10006c0f:	jae    0x10006c13
10006c11:	mov    ebx,eax
10006c13:	mov    ebp,DWORD PTR [esp+0x20]
10006c17:	cmp    ebx,ebp
10006c19:	mov    edx,ebx
10006c1b:	jb     0x10006c1f
10006c1d:	mov    edx,ebp
10006c1f:	cmp    DWORD PTR [esi+0x18],0x8
10006c23:	jb     0x10006c2a
10006c25:	mov    eax,DWORD PTR [esi+0x4]
10006c28:	jmp    0x10006c2d
10006c2a:	lea    eax,[esi+0x4]
10006c2d:	test   edx,edx
10006c2f:	mov    ecx,DWORD PTR [esp+0x1c]
10006c33:	lea    eax,[eax+edi*2]
10006c36:	jbe    0x10006c5d
10006c38:	mov    si,WORD PTR [eax]
10006c3b:	cmp    si,WORD PTR [ecx]
10006c3e:	jne    0x10006c4d
10006c40:	add    eax,0x2
10006c43:	add    ecx,0x2
10006c46:	sub    edx,0x1
10006c49:	jne    0x10006c38
10006c4b:	jmp    0x10006c5d
10006c4d:	movzx  eax,WORD PTR [eax]
10006c50:	cmp    ax,WORD PTR [ecx]
10006c53:	sbb    eax,eax
10006c55:	and    eax,0xfffffffe
10006c58:	add    eax,0x1
10006c5b:	jne    0x10006c72
10006c5d:	cmp    ebx,ebp
10006c5f:	jae    0x10006c6b
10006c61:	pop    edi
10006c62:	pop    esi
10006c63:	pop    ebp
10006c64:	or     eax,0xffffffff
10006c67:	pop    ebx
10006c68:	ret    0x10
10006c6b:	xor    eax,eax
10006c6d:	cmp    ebx,ebp
10006c6f:	setne  al
10006c72:	pop    edi
10006c73:	pop    esi
10006c74:	pop    ebp
10006c75:	pop    ebx
10006c76:	ret    0x10
10006c79:	int3   
10006c7a:	int3   
10006c7b:	int3   
10006c7c:	int3   
10006c7d:	int3   
10006c7e:	int3   
10006c7f:	int3   
10006c80:	push   esi
10006c81:	push   0x1009796c
10006c86:	mov    esi,ecx
10006c88:	call   DWORD PTR ds:0x100340dc
10006c8e:	mov    eax,esi
10006c90:	pop    esi
10006c91:	ret    
10006c92:	int3   
10006c93:	int3   
10006c94:	int3   
10006c95:	int3   
10006c96:	int3   
10006c97:	int3   
10006c98:	int3   
10006c99:	int3   
10006c9a:	int3   
10006c9b:	int3   
10006c9c:	int3   
10006c9d:	int3   
10006c9e:	int3   
10006c9f:	int3   
10006ca0:	push   0x1009796c
10006ca5:	call   DWORD PTR ds:0x100340ec
10006cab:	ret    
10006cac:	int3   
10006cad:	int3   
10006cae:	int3   
10006caf:	int3   
10006cb0:	mov    eax,ds:0x10097aa0
10006cb5:	push   eax
10006cb6:	call   DWORD PTR ds:0x1003409c
10006cbc:	ret    
10006cbd:	int3   
10006cbe:	int3   
10006cbf:	int3   
10006cc0:	push   ebx
10006cc1:	mov    ebx,DWORD PTR ds:0x10034070
10006cc7:	push   ebp
10006cc8:	mov    ebp,DWORD PTR ds:0x100340fc
10006cce:	push   esi
10006ccf:	push   edi
10006cd0:	mov    edi,DWORD PTR [esp+0x14]
10006cd4:	xor    esi,esi
10006cd6:	push   0x0
10006cd8:	push   0x0
10006cda:	push   0x1009796c
10006cdf:	call   ebp
10006ce1:	test   eax,eax
10006ce3:	je     0x10006cf7
10006ce5:	cmp    edi,0xffffffff
10006ce8:	je     0x10006cee
10006cea:	cmp    esi,edi
10006cec:	ja     0x10006cfe
10006cee:	push   0xa
10006cf0:	call   ebx
10006cf2:	add    esi,0xa
10006cf5:	jmp    0x10006cd6
10006cf7:	pop    edi
10006cf8:	pop    esi
10006cf9:	pop    ebp
10006cfa:	mov    al,0x1
10006cfc:	pop    ebx
10006cfd:	ret    
10006cfe:	pop    edi
10006cff:	pop    esi
10006d00:	pop    ebp
10006d01:	xor    al,al
10006d03:	pop    ebx
10006d04:	ret    
10006d05:	int3   
10006d06:	int3   
10006d07:	int3   
10006d08:	int3   
10006d09:	int3   
10006d0a:	int3   
10006d0b:	int3   
10006d0c:	int3   
10006d0d:	int3   
10006d0e:	int3   
10006d0f:	int3   
10006d10:	sub    esp,0x8
10006d13:	mov    edx,DWORD PTR [esp+0x10]
10006d17:	mov    eax,DWORD PTR [esp+0xc]
10006d1b:	mov    ecx,DWORD PTR ds:0x10097aa0
10006d21:	push   edx
10006d22:	mov    DWORD PTR [esp+0x4],eax
10006d26:	push   0x0
10006d28:	lea    eax,[esp+0x8]
10006d2c:	push   eax
10006d2d:	push   0x2
10006d2f:	mov    DWORD PTR [esp+0x14],ecx
10006d33:	call   DWORD PTR ds:0x1003406c
10006d39:	add    esp,0x8
10006d3c:	ret    
10006d3d:	int3   
10006d3e:	int3   
10006d3f:	int3   
10006d40:	mov    eax,ecx
10006d42:	mov    cl,BYTE PTR [esp+0x8]
10006d46:	mov    BYTE PTR [eax],cl
10006d48:	mov    DWORD PTR [eax+0x4],0xffffffff
10006d4f:	mov    BYTE PTR [eax+0x8],0x1
10006d53:	ret    0x8
10006d56:	int3   
10006d57:	int3   
10006d58:	int3   
10006d59:	int3   
10006d5a:	int3   
10006d5b:	int3   
10006d5c:	int3   
10006d5d:	int3   
10006d5e:	int3   
10006d5f:	int3   
10006d60:	push   esi
10006d61:	mov    esi,ecx
10006d63:	push   edi
10006d64:	mov    edi,DWORD PTR [esi+0x4]
10006d67:	test   edi,edi
10006d69:	je     0x10006d83
10006d6b:	push   ebx
10006d6c:	call   DWORD PTR ds:0x1003407c
10006d72:	push   edi
10006d73:	mov    ebx,eax
10006d75:	call   DWORD PTR ds:0x10034058
10006d7b:	push   ebx
10006d7c:	call   DWORD PTR ds:0x10034078
10006d82:	pop    ebx
10006d83:	pop    edi
10006d84:	mov    DWORD PTR [esi+0x4],0x0
10006d8b:	pop    esi
10006d8c:	ret    
10006d8d:	int3   
10006d8e:	int3   
10006d8f:	int3   
10006d90:	push   0xffffffff
10006d92:	push   0x1002b3c0
10006d97:	mov    eax,fs:0x0
10006d9d:	push   eax
10006d9e:	sub    esp,0x10
10006da1:	push   ebx
10006da2:	push   esi
10006da3:	mov    eax,ds:0x100951fc
10006da8:	xor    eax,esp
10006daa:	push   eax
10006dab:	lea    eax,[esp+0x1c]
10006daf:	mov    fs:0x0,eax
10006db5:	mov    esi,ecx
10006db7:	mov    eax,ds:0x10096c80
10006dbc:	mov    edx,DWORD PTR [eax+0xc]
10006dbf:	mov    ecx,0x10096c80
10006dc4:	call   edx
10006dc6:	add    eax,0x10
10006dc9:	mov    DWORD PTR [esp+0x18],eax
10006dcd:	mov    DWORD PTR [esp+0x24],0x0
10006dd5:	mov    eax,ds:0x10096c80
10006dda:	mov    edx,DWORD PTR [eax+0xc]
10006ddd:	mov    ecx,0x10096c80
10006de2:	call   edx
10006de4:	add    eax,0x10
10006de7:	mov    DWORD PTR [esp+0x14],eax
10006deb:	mov    BYTE PTR [esp+0x24],0x1
10006df0:	mov    eax,ds:0x10096c80
10006df5:	mov    edx,DWORD PTR [eax+0xc]
10006df8:	mov    ecx,0x10096c80
10006dfd:	call   edx
10006dff:	add    eax,0x10
10006e02:	mov    DWORD PTR [esp+0x10],eax
10006e06:	mov    BYTE PTR [esp+0x24],0x2
10006e0b:	mov    eax,ds:0x10096c80
10006e10:	mov    edx,DWORD PTR [eax+0xc]
10006e13:	mov    ecx,0x10096c80
10006e18:	call   edx
10006e1a:	add    eax,0x10
10006e1d:	mov    DWORD PTR [esp+0xc],eax
10006e21:	mov    edx,DWORD PTR [esp+0x2c]
10006e25:	lea    eax,[esp+0x10]
10006e29:	push   eax
10006e2a:	lea    ecx,[esp+0x1c]
10006e2e:	push   ecx
10006e2f:	push   edx
10006e30:	lea    edx,[esp+0x18]
10006e34:	lea    ebx,[esp+0x20]
10006e38:	mov    ecx,esi
10006e3a:	mov    BYTE PTR [esp+0x30],0x3
10006e3f:	call   0x10006ef0
10006e44:	mov    BYTE PTR [esp+0x24],0x2
10006e49:	mov    eax,DWORD PTR [esp+0xc]
10006e4d:	add    eax,0xfffffff0
10006e50:	lea    ecx,[eax+0xc]
10006e53:	or     edx,0xffffffff
10006e56:	lock xadd DWORD PTR [ecx],edx
10006e5a:	dec    edx
10006e5b:	test   edx,edx
10006e5d:	jg     0x10006e69
10006e5f:	mov    ecx,DWORD PTR [eax]
10006e61:	mov    edx,DWORD PTR [ecx]
10006e63:	push   eax
10006e64:	mov    eax,DWORD PTR [edx+0x4]
10006e67:	call   eax
10006e69:	mov    BYTE PTR [esp+0x24],0x1
10006e6e:	mov    eax,DWORD PTR [esp+0x10]
10006e72:	add    eax,0xfffffff0
10006e75:	lea    ecx,[eax+0xc]
10006e78:	or     edx,0xffffffff
10006e7b:	lock xadd DWORD PTR [ecx],edx
10006e7f:	dec    edx
10006e80:	test   edx,edx
10006e82:	jg     0x10006e8e
10006e84:	mov    ecx,DWORD PTR [eax]
10006e86:	mov    edx,DWORD PTR [ecx]
10006e88:	push   eax
10006e89:	mov    eax,DWORD PTR [edx+0x4]
10006e8c:	call   eax
10006e8e:	mov    BYTE PTR [esp+0x24],0x0
10006e93:	mov    eax,DWORD PTR [esp+0x14]
10006e97:	add    eax,0xfffffff0
10006e9a:	lea    ecx,[eax+0xc]
10006e9d:	or     edx,0xffffffff
10006ea0:	lock xadd DWORD PTR [ecx],edx
10006ea4:	dec    edx
10006ea5:	test   edx,edx
10006ea7:	jg     0x10006eb3
10006ea9:	mov    ecx,DWORD PTR [eax]
10006eab:	mov    edx,DWORD PTR [ecx]
10006ead:	push   eax
10006eae:	mov    eax,DWORD PTR [edx+0x4]
10006eb1:	call   eax
10006eb3:	mov    DWORD PTR [esp+0x24],0xffffffff
10006ebb:	mov    eax,DWORD PTR [esp+0x18]
10006ebf:	add    eax,0xfffffff0
10006ec2:	lea    ecx,[eax+0xc]
10006ec5:	or     edx,0xffffffff
10006ec8:	lock xadd DWORD PTR [ecx],edx
10006ecc:	dec    edx
10006ecd:	test   edx,edx
10006ecf:	jg     0x10006edb
10006ed1:	mov    ecx,DWORD PTR [eax]
10006ed3:	mov    edx,DWORD PTR [ecx]
10006ed5:	push   eax
10006ed6:	mov    eax,DWORD PTR [edx+0x4]
10006ed9:	call   eax
10006edb:	mov    ecx,DWORD PTR [esp+0x1c]
10006edf:	mov    DWORD PTR fs:0x0,ecx
10006ee6:	pop    ecx
10006ee7:	pop    esi
10006ee8:	pop    ebx
10006ee9:	add    esp,0x1c
10006eec:	ret    0x4
10006eef:	int3   
10006ef0:	push   ebp
10006ef1:	mov    ebp,esp
10006ef3:	and    esp,0xfffffff8
10006ef6:	push   0xffffffff
10006ef8:	push   0x1002b36b
10006efd:	mov    eax,fs:0x0
10006f03:	push   eax
10006f04:	sub    esp,0x16c
10006f0a:	mov    eax,ds:0x100951fc
10006f0f:	xor    eax,esp
10006f11:	mov    DWORD PTR [esp+0x164],eax
10006f18:	push   esi
10006f19:	push   edi
10006f1a:	mov    eax,ds:0x100951fc
10006f1f:	xor    eax,esp
10006f21:	push   eax
10006f22:	lea    eax,[esp+0x178]
10006f29:	mov    fs:0x0,eax
10006f2f:	mov    eax,DWORD PTR [ebp+0x10]
10006f32:	mov    esi,DWORD PTR [ebp+0x8]
10006f35:	mov    edi,DWORD PTR [ebp+0xc]
10006f38:	push   0x110
10006f3d:	mov    DWORD PTR [esp+0x14],eax
10006f41:	lea    eax,[esp+0x60]
10006f45:	push   eax
10006f46:	mov    DWORD PTR [esp+0x1c],edx
10006f4a:	push   0x110
10006f4f:	mov    edx,eax
10006f51:	push   edx
10006f52:	push   0x1
10006f54:	call   0x10007410
10006f59:	test   eax,eax
10006f5b:	jne    0x10006fcb
10006f5d:	push   0x10082a90
10006f62:	push   0x1f
10006f64:	push   0x10082ac0
10006f69:	call   0x10003340
10006f6e:	add    esp,0xc
10006f71:	xor    edi,edi
10006f73:	mov    ecx,eax
10006f75:	mov    DWORD PTR [esp+0x30],0xf
10006f7d:	mov    DWORD PTR [esp+0x2c],edi
10006f81:	mov    BYTE PTR [esp+0x1c],0x0
10006f86:	lea    esi,[ecx+0x1]
10006f89:	lea    esp,[esp+0x0]
10006f90:	mov    dl,BYTE PTR [ecx]
10006f92:	add    ecx,0x1
10006f95:	test   dl,dl
10006f97:	jne    0x10006f90
10006f99:	sub    ecx,esi
10006f9b:	push   ecx
10006f9c:	push   eax
10006f9d:	lea    ecx,[esp+0x20]
10006fa1:	call   0x10003900
10006fa6:	lea    eax,[esp+0x18]
10006faa:	push   eax
10006fab:	lea    ecx,[esp+0x38]
10006faf:	push   ecx
10006fb0:	mov    DWORD PTR [esp+0x188],edi
10006fb7:	call   0x100014d0
10006fbc:	push   0x10085c78
10006fc1:	lea    edx,[esp+0x38]
10006fc5:	push   edx
10006fc6:	call   0x1001621e
10006fcb:	mov    eax,DWORD PTR [esp+0x9c]
10006fd2:	mov    ecx,DWORD PTR [esp+0xa0]
10006fd9:	mov    edx,DWORD PTR [esp+0xa4]
10006fe0:	mov    DWORD PTR [esi],eax
10006fe2:	mov    eax,DWORD PTR [esp+0xa8]
10006fe9:	mov    DWORD PTR [esi+0x4],ecx
10006fec:	mov    DWORD PTR [esi+0x8],edx
10006fef:	mov    DWORD PTR [esi+0xc],eax
10006ff2:	lea    eax,[esp+0x5c]
10006ff6:	lea    edx,[eax+0x2]
10006ff9:	lea    esp,[esp+0x0]
10007000:	mov    cx,WORD PTR [eax]
10007003:	add    eax,0x2
10007006:	test   cx,cx
10007009:	jne    0x10007000
1000700b:	sub    eax,edx
1000700d:	sar    eax,1
1000700f:	push   eax
10007010:	lea    ecx,[esp+0x60]
10007014:	push   ecx
10007015:	mov    ecx,edi
10007017:	call   0x10004890
1000701c:	lea    eax,[esp+0xac]
10007023:	lea    edx,[eax+0x2]
10007026:	mov    cx,WORD PTR [eax]
10007029:	add    eax,0x2
1000702c:	test   cx,cx
1000702f:	jne    0x10007026
10007031:	sub    eax,edx
10007033:	sar    eax,1
10007035:	push   eax
10007036:	lea    edx,[esp+0xb0]
1000703d:	push   edx
1000703e:	mov    ecx,ebx
10007040:	call   0x10004890
10007045:	lea    eax,[esp+0xec]
1000704c:	lea    edx,[eax+0x2]
1000704f:	nop
10007050:	mov    cx,WORD PTR [eax]
10007053:	add    eax,0x2
10007056:	test   cx,cx
10007059:	jne    0x10007050
1000705b:	mov    ecx,DWORD PTR [esp+0x10]
1000705f:	sub    eax,edx
10007061:	sar    eax,1
10007063:	push   eax
10007064:	lea    eax,[esp+0xf0]
1000706b:	push   eax
1000706c:	call   0x10004890
10007071:	lea    eax,[esp+0x12c]
10007078:	lea    edx,[eax+0x2]
1000707b:	jmp    0x10007080
1000707d:	lea    ecx,[ecx+0x0]
10007080:	mov    cx,WORD PTR [eax]
10007083:	add    eax,0x2
10007086:	test   cx,cx
10007089:	jne    0x10007080
1000708b:	sub    eax,edx
1000708d:	sar    eax,1
1000708f:	push   eax
10007090:	lea    ecx,[esp+0x130]
10007097:	push   ecx
10007098:	mov    ecx,DWORD PTR [esp+0x1c]
1000709c:	call   0x10004890
100070a1:	mov    ecx,DWORD PTR [esp+0x178]
100070a8:	mov    DWORD PTR fs:0x0,ecx
100070af:	pop    ecx
100070b0:	pop    edi
100070b1:	pop    esi
100070b2:	mov    ecx,DWORD PTR [esp+0x164]
100070b9:	xor    ecx,esp
100070bb:	call   0x10015b2b
100070c0:	mov    esp,ebp
100070c2:	pop    ebp
100070c3:	ret    0xc
100070c6:	int3   
100070c7:	int3   
100070c8:	int3   
100070c9:	int3   
100070ca:	int3   
100070cb:	int3   
100070cc:	int3   
100070cd:	int3   
100070ce:	int3   
100070cf:	int3   
100070d0:	push   ebp
100070d1:	mov    ebp,esp
100070d3:	and    esp,0xfffffff8
100070d6:	push   0xffffffff
100070d8:	push   0x1002b338
100070dd:	mov    eax,fs:0x0
100070e3:	push   eax
100070e4:	sub    esp,0x50
100070e7:	push   ebx
100070e8:	push   esi
100070e9:	push   edi
100070ea:	mov    eax,ds:0x100951fc
100070ef:	xor    eax,esp
100070f1:	push   eax
100070f2:	lea    eax,[esp+0x60]
100070f6:	mov    fs:0x0,eax
100070fc:	xor    ebx,ebx
100070fe:	mov    DWORD PTR [esp+0x10],ebx
10007102:	mov    DWORD PTR [esp+0x14],ebx
10007106:	push   0xa
10007108:	mov    DWORD PTR [esp+0x6c],ebx
1000710c:	call   0x10015a45
10007111:	mov    edi,eax
10007113:	add    esp,0x4
10007116:	mov    DWORD PTR [esp+0x10],edi
1000711a:	mov    eax,DWORD PTR [ebp+0x10]
1000711d:	cmp    eax,ebx
1000711f:	mov    BYTE PTR [esp+0x68],0x1
10007124:	mov    DWORD PTR [edi+0x4],0x2
1000712b:	je     0x10007134
1000712d:	mov    ax,WORD PTR [eax]
10007130:	mov    WORD PTR [edi+0x8],ax
10007134:	mov    eax,DWORD PTR [edi+0x4]
10007137:	mov    ecx,DWORD PTR [ebp+0x8]
1000713a:	add    eax,0x8
1000713d:	push   eax
1000713e:	push   edi
1000713f:	push   eax
10007140:	push   edi
10007141:	push   0x3
10007143:	call   0x10007410
10007148:	test   eax,eax
1000714a:	jne    0x100071af
1000714c:	push   0x10082ae0
10007151:	push   0x19
10007153:	push   0x10082b20
10007158:	call   0x10003340
1000715d:	mov    ecx,eax
1000715f:	add    esp,0xc
10007162:	mov    DWORD PTR [esp+0x30],0xf
1000716a:	mov    DWORD PTR [esp+0x2c],ebx
1000716e:	mov    BYTE PTR [esp+0x1c],0x0
10007173:	lea    esi,[ecx+0x1]
10007176:	mov    dl,BYTE PTR [ecx]
10007178:	add    ecx,0x1
1000717b:	test   dl,dl
1000717d:	jne    0x10007176
1000717f:	sub    ecx,esi
10007181:	push   ecx
10007182:	push   eax
10007183:	lea    ecx,[esp+0x20]
10007187:	call   0x10003900
1000718c:	lea    ecx,[esp+0x18]
10007190:	push   ecx
10007191:	lea    edx,[esp+0x38]
10007195:	push   edx
10007196:	mov    BYTE PTR [esp+0x70],0x2
1000719b:	call   0x100014d0
100071a0:	push   0x10085c78
100071a5:	lea    eax,[esp+0x38]
100071a9:	push   eax
100071aa:	call   0x1001621e
100071af:	cmp    DWORD PTR [edi],0x1
100071b2:	jne    0x10007208
100071b4:	mov    ebx,DWORD PTR [edi+0x4]
100071b7:	lea    ecx,[ebx+0x8]
100071ba:	push   ecx
100071bb:	call   0x10015a45
100071c0:	mov    esi,eax
100071c2:	add    esp,0x4
100071c5:	cmp    esi,edi
100071c7:	je     0x100071d2
100071c9:	push   edi
100071ca:	call   0x10015b26
100071cf:	add    esp,0x4
100071d2:	mov    eax,DWORD PTR [ebp+0x10]
100071d5:	test   eax,eax
100071d7:	mov    edi,esi
100071d9:	mov    DWORD PTR [esp+0x10],edi
100071dd:	mov    DWORD PTR [esi+0x4],ebx
100071e0:	je     0x100071e9
100071e2:	mov    dx,WORD PTR [eax]
100071e5:	mov    WORD PTR [esi+0x8],dx
100071e9:	mov    eax,DWORD PTR [esi+0x4]
100071ec:	mov    ecx,DWORD PTR [ebp+0x8]
100071ef:	add    eax,0x8
100071f2:	push   eax
100071f3:	push   esi
100071f4:	push   eax
100071f5:	push   esi
100071f6:	push   0x3
100071f8:	call   0x10007410
100071fd:	test   eax,eax
100071ff:	je     0x10007251
10007201:	cmp    DWORD PTR [esi],0x1
10007204:	je     0x100071b4
10007206:	xor    ebx,ebx
10007208:	cmp    DWORD PTR [edi],ebx
1000720a:	je     0x100072b9
10007210:	push   0x10082b78
10007215:	push   0x19
10007217:	push   0x10082b20
1000721c:	call   0x10003340
10007221:	add    esp,0xc
10007224:	push   eax
10007225:	lea    ecx,[esp+0x1c]
10007229:	call   0x10002b70
1000722e:	lea    eax,[esp+0x18]
10007232:	push   eax
10007233:	lea    ecx,[esp+0x38]
10007237:	push   ecx
10007238:	mov    BYTE PTR [esp+0x70],0x4
1000723d:	call   0x100014d0
10007242:	push   0x10085c78
10007247:	lea    edx,[esp+0x38]
1000724b:	push   edx
1000724c:	call   0x1001621e
10007251:	push   0x10082b3c
10007256:	push   0x19
10007258:	push   0x10082b20
1000725d:	call   0x10003340
10007262:	mov    ecx,eax
10007264:	add    esp,0xc
10007267:	mov    DWORD PTR [esp+0x30],0xf
1000726f:	mov    DWORD PTR [esp+0x2c],0x0
10007277:	mov    BYTE PTR [esp+0x1c],0x0
1000727c:	lea    esi,[ecx+0x1]
1000727f:	nop
10007280:	mov    dl,BYTE PTR [ecx]
10007282:	add    ecx,0x1
10007285:	test   dl,dl
10007287:	jne    0x10007280
10007289:	sub    ecx,esi
1000728b:	push   ecx
1000728c:	push   eax
1000728d:	lea    ecx,[esp+0x20]
10007291:	call   0x10003900
10007296:	lea    eax,[esp+0x18]
1000729a:	push   eax
1000729b:	lea    ecx,[esp+0x38]
1000729f:	push   ecx
100072a0:	mov    BYTE PTR [esp+0x70],0x3
100072a5:	call   0x100014d0
100072aa:	push   0x10085c78
100072af:	lea    edx,[esp+0x38]
100072b3:	push   edx
100072b4:	call   0x1001621e
100072b9:	mov    eax,DWORD PTR [edi+0x4]
100072bc:	mov    esi,DWORD PTR [ebp+0xc]
100072bf:	push   eax
100072c0:	lea    eax,[edi+0x8]
100072c3:	mov    DWORD PTR [esi+0x18],0xf
100072ca:	mov    DWORD PTR [esi+0x14],ebx
100072cd:	push   eax
100072ce:	mov    ecx,esi
100072d0:	mov    BYTE PTR [esi+0x4],0x0
100072d4:	call   0x10003900
100072d9:	push   edi
100072da:	call   0x10015b26
100072df:	add    esp,0x4
100072e2:	push   ebx
100072e3:	call   0x10015b26
100072e8:	add    esp,0x4
100072eb:	mov    eax,esi
100072ed:	mov    ecx,DWORD PTR [esp+0x60]
100072f1:	mov    DWORD PTR fs:0x0,ecx
100072f8:	pop    ecx
100072f9:	pop    edi
100072fa:	pop    esi
100072fb:	pop    ebx
100072fc:	mov    esp,ebp
100072fe:	pop    ebp
100072ff:	ret    0xc
10007302:	int3   
10007303:	int3   
10007304:	int3   
10007305:	int3   
10007306:	int3   
10007307:	int3   
10007308:	int3   
10007309:	int3   
1000730a:	int3   
1000730b:	int3   
1000730c:	int3   
1000730d:	int3   
1000730e:	int3   
1000730f:	int3   
10007310:	push   ebp
10007311:	mov    ebp,esp
10007313:	and    esp,0xfffffff8
10007316:	push   0xffffffff
10007318:	push   0x1002b2e8
1000731d:	mov    eax,fs:0x0
10007323:	push   eax
10007324:	sub    esp,0x50
10007327:	push   esi
10007328:	mov    eax,ds:0x100951fc
1000732d:	xor    eax,esp
1000732f:	push   eax
10007330:	lea    eax,[esp+0x58]
10007334:	mov    fs:0x0,eax
1000733a:	mov    eax,DWORD PTR [ebp+0x8]
1000733d:	push   0x4
1000733f:	lea    edx,[esp+0x10]
10007343:	push   edx
10007344:	mov    DWORD PTR [esp+0x14],eax
10007348:	push   0x4
1000734a:	mov    eax,edx
1000734c:	push   eax
1000734d:	push   0x2
1000734f:	call   0x10007410
10007354:	test   eax,eax
10007356:	jne    0x100073c2
10007358:	push   0x10082bb8
1000735d:	push   0x12
1000735f:	push   0x10082bec
10007364:	call   0x10003340
10007369:	mov    ecx,eax
1000736b:	add    esp,0xc
1000736e:	mov    DWORD PTR [esp+0x28],0xf
10007376:	mov    DWORD PTR [esp+0x24],0x0
1000737e:	mov    BYTE PTR [esp+0x14],0x0
10007383:	lea    esi,[ecx+0x1]
10007386:	mov    dl,BYTE PTR [ecx]
10007388:	add    ecx,0x1
1000738b:	test   dl,dl
1000738d:	jne    0x10007386
1000738f:	sub    ecx,esi
10007391:	push   ecx
10007392:	push   eax
10007393:	lea    ecx,[esp+0x18]
10007397:	call   0x10003900
1000739c:	lea    ecx,[esp+0x10]
100073a0:	push   ecx
100073a1:	lea    edx,[esp+0x30]
100073a5:	push   edx
100073a6:	mov    DWORD PTR [esp+0x68],0x0
100073ae:	call   0x100014d0
100073b3:	push   0x10085c78
100073b8:	lea    eax,[esp+0x30]
100073bc:	push   eax
100073bd:	call   0x1001621e
100073c2:	cmp    DWORD PTR [esp+0xc],0x0
100073c7:	setne  al
100073ca:	mov    ecx,DWORD PTR [esp+0x58]
100073ce:	mov    DWORD PTR fs:0x0,ecx
100073d5:	pop    ecx
100073d6:	pop    esi
100073d7:	mov    esp,ebp
100073d9:	pop    ebp
100073da:	ret    0x4
100073dd:	int3   
100073de:	int3   
100073df:	int3   
100073e0:	push   ecx
100073e1:	push   esi
100073e2:	mov    esi,DWORD PTR [esp+0xc]
100073e6:	lea    eax,[esp+0x10]
100073ea:	push   eax
100073eb:	push   esi
100073ec:	push   ecx
100073ed:	mov    DWORD PTR [esp+0x10],0x0
100073f5:	call   0x100070d0
100073fa:	mov    eax,esi
100073fc:	pop    esi
100073fd:	pop    ecx
100073fe:	ret    0x8
10007401:	int3   
10007402:	int3   
10007403:	int3   
10007404:	int3   
10007405:	int3   
10007406:	int3   
10007407:	int3   
10007408:	int3   
10007409:	int3   
1000740a:	int3   
1000740b:	int3   
1000740c:	int3   
1000740d:	int3   
1000740e:	int3   
1000740f:	int3   
10007410:	push   0xffffffff
10007412:	push   0x1002b2b8
10007417:	mov    eax,fs:0x0
1000741d:	push   eax
1000741e:	push   ecx
1000741f:	push   ebx
10007420:	push   ebp
10007421:	push   esi
10007422:	push   edi
10007423:	mov    eax,ds:0x100951fc
10007428:	xor    eax,esp
1000742a:	push   eax
1000742b:	lea    eax,[esp+0x18]
1000742f:	mov    fs:0x0,eax
10007435:	mov    esi,ecx
10007437:	xor    ebp,ebp
10007439:	mov    DWORD PTR [esp+0x14],ebp
1000743d:	mov    DWORD PTR [esp+0x20],ebp
10007441:	cmp    BYTE PTR [esi],0x0
10007444:	jne    0x10007451
10007446:	call   0x10007510
1000744b:	mov    ebp,eax
1000744d:	mov    ebx,ebp
1000744f:	jmp    0x10007487
10007451:	cmp    DWORD PTR [esi+0x4],0xffffffff
10007455:	jne    0x10007484
10007457:	call   0x10007510
1000745c:	mov    edi,DWORD PTR [esi+0x4]
1000745f:	test   edi,edi
10007461:	mov    DWORD PTR [esp+0x14],eax
10007465:	je     0x1000747d
10007467:	call   DWORD PTR ds:0x1003407c
1000746d:	push   edi
1000746e:	mov    ebx,eax
10007470:	call   DWORD PTR ds:0x10034058
10007476:	push   ebx
10007477:	call   DWORD PTR ds:0x10034078
1000747d:	mov    eax,DWORD PTR [esp+0x14]
10007481:	mov    DWORD PTR [esi+0x4],eax
10007484:	mov    ebx,DWORD PTR [esi+0x4]
10007487:	cmp    ebx,0xffffffff
1000748a:	jne    0x100074aa
1000748c:	test   ebp,ebp
1000748e:	je     0x100074a6
10007490:	call   DWORD PTR ds:0x1003407c
10007496:	push   ebp
10007497:	mov    esi,eax
10007499:	call   DWORD PTR ds:0x10034058
1000749f:	push   esi
100074a0:	call   DWORD PTR ds:0x10034078
100074a6:	xor    eax,eax
100074a8:	jmp    0x100074f5
100074aa:	mov    ecx,DWORD PTR [esp+0x38]
100074ae:	mov    edx,DWORD PTR [esp+0x30]
100074b2:	mov    edi,DWORD PTR [esp+0x34]
100074b6:	push   ecx
100074b7:	mov    ecx,DWORD PTR [esp+0x2c]
100074bb:	push   edx
100074bc:	mov    edx,DWORD PTR [esp+0x34]
100074c0:	push   esi
100074c1:	call   0x10007710
100074c6:	mov    edi,eax
100074c8:	test   edi,edi
100074ca:	jne    0x100074d9
100074cc:	cmp    BYTE PTR [esi],al
100074ce:	je     0x100074d9
100074d0:	push   eax
100074d1:	lea    ecx,[esi+0x4]
100074d4:	call   0x10003db0
100074d9:	test   ebp,ebp
100074db:	je     0x100074f3
100074dd:	call   DWORD PTR ds:0x1003407c
100074e3:	push   ebp
100074e4:	mov    esi,eax
100074e6:	call   DWORD PTR ds:0x10034058
100074ec:	push   esi
100074ed:	call   DWORD PTR ds:0x10034078
100074f3:	mov    eax,edi
100074f5:	mov    ecx,DWORD PTR [esp+0x18]
100074f9:	mov    DWORD PTR fs:0x0,ecx
10007500:	pop    ecx
10007501:	pop    edi
10007502:	pop    esi
10007503:	pop    ebp
10007504:	pop    ebx
10007505:	add    esp,0x10
10007508:	ret    0x14
1000750b:	int3   
1000750c:	int3   
1000750d:	int3   
1000750e:	int3   
1000750f:	int3   
10007510:	push   ebp
10007511:	mov    ebp,esp
10007513:	and    esp,0xfffffff8
10007516:	push   0xffffffff
10007518:	push   0x1002b28e
1000751d:	mov    eax,fs:0x0
10007523:	push   eax
10007524:	sub    esp,0x14
10007527:	push   ebx
10007528:	push   ebp
10007529:	push   esi
1000752a:	push   edi
1000752b:	mov    eax,ds:0x100951fc
10007530:	xor    eax,esp
10007532:	push   eax
10007533:	lea    eax,[esp+0x28]
10007537:	mov    fs:0x0,eax
1000753d:	xor    edi,edi
1000753f:	mov    DWORD PTR [esp+0x1c],edi
10007543:	mov    DWORD PTR [esp+0x30],edi
10007547:	mov    eax,ds:0x10097aa4
1000754c:	push   eax
1000754d:	lea    ecx,[esp+0x1c]
10007551:	call   0x10002d70
10007556:	mov    ebx,0x1
1000755b:	mov    BYTE PTR [esp+0x30],bl
1000755f:	test   BYTE PTR ds:0x10097ab0,bl
10007565:	jne    0x100075b2
10007567:	or     DWORD PTR ds:0x10097ab0,ebx
1000756d:	push   0x10082c00
10007572:	push   0xb
10007574:	push   0x10082c40
10007579:	mov    BYTE PTR [esp+0x3c],0x2
1000757e:	call   0x10003340
10007583:	add    esp,0xc
10007586:	push   eax
10007587:	push   0x10082c4c
1000758c:	push   0xc
1000758e:	push   0x10082c8c
10007593:	call   0x10003340
10007598:	add    esp,0xc
1000759b:	push   eax
1000759c:	call   DWORD PTR ds:0x10034100
100075a2:	push   eax
100075a3:	call   DWORD PTR ds:0x10034044
100075a9:	mov    ds:0x10097aac,eax
100075ae:	mov    BYTE PTR [esp+0x30],bl
100075b2:	mov    ebx,DWORD PTR ds:0x1003407c
100075b8:	mov    ecx,DWORD PTR [esp+0x18]
100075bc:	push   0x0
100075be:	push   0x0
100075c0:	push   0x3
100075c2:	push   0x0
100075c4:	push   0x0
100075c6:	push   0xc0000000
100075cb:	push   ecx
100075cc:	call   DWORD PTR ds:0x10097aac
100075d2:	test   edi,edi
100075d4:	mov    esi,eax
100075d6:	je     0x100075ee
100075d8:	call   ebx
100075da:	push   edi
100075db:	mov    ebp,eax
100075dd:	call   DWORD PTR ds:0x10034058
100075e3:	push   ebp
100075e4:	mov    ebp,DWORD PTR ds:0x10034078
100075ea:	call   ebp
100075ec:	jmp    0x100075f4
100075ee:	mov    ebp,DWORD PTR ds:0x10034078
100075f4:	cmp    esi,0xffffffff
100075f7:	mov    edi,esi
100075f9:	mov    DWORD PTR [esp+0x1c],edi
100075fd:	jne    0x10007625
100075ff:	call   ebx
10007601:	cmp    eax,0xe7
10007606:	jne    0x100076c1
1000760c:	mov    edx,DWORD PTR [esp+0x18]
10007610:	push   0x1f4
10007615:	push   edx
10007616:	call   DWORD PTR ds:0x10034104
1000761c:	test   eax,eax
1000761e:	jne    0x100075b8
10007620:	jmp    0x100076c3
10007625:	push   0x0
10007627:	push   0x0
10007629:	lea    eax,[esp+0x28]
1000762d:	push   eax
1000762e:	push   esi
1000762f:	mov    DWORD PTR [esp+0x30],0x2
10007637:	call   DWORD PTR ds:0x10034108
1000763d:	test   eax,eax
1000763f:	jne    0x1000767e
10007641:	call   ebx
10007643:	mov    BYTE PTR [esp+0x30],0x0
10007648:	mov    eax,DWORD PTR [esp+0x18]
1000764c:	add    eax,0xfffffff0
1000764f:	lea    ecx,[eax+0xc]
10007652:	or     edx,0xffffffff
10007655:	lock xadd DWORD PTR [ecx],edx
10007659:	dec    edx
1000765a:	test   edx,edx
1000765c:	jg     0x10007668
1000765e:	mov    ecx,DWORD PTR [eax]
10007660:	mov    edx,DWORD PTR [ecx]
10007662:	push   eax
10007663:	mov    eax,DWORD PTR [edx+0x4]
10007666:	call   eax
10007668:	test   esi,esi
1000766a:	je     0x100076f7
10007670:	call   ebx
10007672:	push   esi
10007673:	mov    edi,eax
10007675:	call   DWORD PTR ds:0x10034058
1000767b:	push   edi
1000767c:	jmp    0x100076f5
1000767e:	mov    BYTE PTR [esp+0x30],0x0
10007683:	mov    eax,DWORD PTR [esp+0x18]
10007687:	add    eax,0xfffffff0
1000768a:	mov    DWORD PTR [esp+0x1c],0x0
10007692:	lea    ecx,[eax+0xc]
10007695:	or     edx,0xffffffff
10007698:	lock xadd DWORD PTR [ecx],edx
1000769c:	dec    edx
1000769d:	test   edx,edx
1000769f:	jg     0x100076ab
100076a1:	mov    ecx,DWORD PTR [eax]
100076a3:	mov    edx,DWORD PTR [ecx]
100076a5:	push   eax
100076a6:	mov    eax,DWORD PTR [edx+0x4]
100076a9:	call   eax
100076ab:	mov    eax,esi
100076ad:	mov    ecx,DWORD PTR [esp+0x28]
100076b1:	mov    DWORD PTR fs:0x0,ecx
100076b8:	pop    ecx
100076b9:	pop    edi
100076ba:	pop    esi
100076bb:	pop    ebp
100076bc:	pop    ebx
100076bd:	mov    esp,ebp
100076bf:	pop    ebp
100076c0:	ret    
100076c1:	call   ebx
100076c3:	mov    BYTE PTR [esp+0x30],0x0
100076c8:	mov    eax,DWORD PTR [esp+0x18]
100076cc:	add    eax,0xfffffff0
100076cf:	or     edx,0xffffffff
100076d2:	lea    ecx,[eax+0xc]
100076d5:	lock xadd DWORD PTR [ecx],edx
100076d9:	dec    edx
100076da:	test   edx,edx
100076dc:	jg     0x100076e8
100076de:	mov    ecx,DWORD PTR [eax]
100076e0:	mov    edx,DWORD PTR [ecx]
100076e2:	push   eax
100076e3:	mov    eax,DWORD PTR [edx+0x4]
100076e6:	call   eax
100076e8:	call   ebx
100076ea:	push   0xffffffff
100076ec:	mov    esi,eax
100076ee:	call   DWORD PTR ds:0x10034058
100076f4:	push   esi
100076f5:	call   ebp
100076f7:	or     eax,0xffffffff
100076fa:	mov    ecx,DWORD PTR [esp+0x28]
100076fe:	mov    DWORD PTR fs:0x0,ecx
10007705:	pop    ecx
10007706:	pop    edi
10007707:	pop    esi
10007708:	pop    ebp
10007709:	pop    ebx
1000770a:	mov    esp,ebp
1000770c:	pop    ebp
1000770d:	ret    
1000770e:	int3   
1000770f:	int3   
10007710:	push   ebp
10007711:	mov    ebp,esp
10007713:	and    esp,0xfffffff8
10007716:	sub    esp,0x5c
10007719:	mov    eax,ds:0x100951fc
1000771e:	xor    eax,esp
10007720:	mov    DWORD PTR [esp+0x58],eax
10007724:	xor    eax,eax
10007726:	cmp    BYTE PTR ds:0x10097970,al
1000772c:	push   esi
1000772d:	mov    esi,edx
1000772f:	mov    WORD PTR [esp+0x18],ax
10007734:	mov    DWORD PTR [esp+0x1a],eax
10007738:	mov    DWORD PTR [esp+0x1e],eax
1000773c:	mov    DWORD PTR [esp+0x22],eax
10007740:	mov    WORD PTR [esp+0x26],ax
10007745:	mov    DWORD PTR [esp+0x28],eax
10007749:	mov    DWORD PTR [esp+0x2c],eax
1000774d:	mov    DWORD PTR [esp+0x30],eax
10007751:	mov    DWORD PTR [esp+0x34],eax
10007755:	mov    DWORD PTR [esp+0x38],eax
10007759:	mov    WORD PTR [esp+0x3c],ax
1000775e:	mov    DWORD PTR [esp+0x3e],eax
10007762:	mov    DWORD PTR [esp+0x42],eax
10007766:	mov    DWORD PTR [esp+0x46],eax
1000776a:	mov    WORD PTR [esp+0x4a],ax
1000776f:	mov    DWORD PTR [esp+0x4c],eax
10007773:	mov    DWORD PTR [esp+0x50],eax
10007777:	mov    DWORD PTR [esp+0x54],eax
1000777b:	mov    DWORD PTR [esp+0x58],eax
1000777f:	jne    0x100077ce
10007781:	mov    DWORD PTR [esp+0x28],ecx
10007785:	call   DWORD PTR ds:0x100340a0
1000778b:	mov    ecx,DWORD PTR [ebp+0x10]
1000778e:	mov    DWORD PTR [esp+0x2c],eax
10007792:	mov    eax,DWORD PTR [ebp+0xc]
10007795:	cmp    esi,edi
10007797:	mov    DWORD PTR [esp+0x30],eax
1000779b:	mov    eax,DWORD PTR [ebp+0x8]
1000779e:	sete   dl
100077a1:	cmp    BYTE PTR [eax+0x8],0x0
100077a5:	mov    DWORD PTR [esp+0x34],ecx
100077a9:	mov    BYTE PTR [esp+0x38],dl
100077ad:	je     0x100077c3
100077af:	push   0x8
100077b1:	lea    ecx,[esp+0x1c]
100077b5:	push   0x100826e4
100077ba:	push   ecx
100077bb:	call   0x100178ee
100077c0:	add    esp,0xc
100077c3:	mov    eax,0x24
100077c8:	lea    ecx,[esp+0x18]
100077cc:	jmp    0x1000780f
100077ce:	mov    edx,DWORD PTR [ebp+0xc]
100077d1:	mov    eax,DWORD PTR [ebp+0x10]
100077d4:	cmp    esi,edi
100077d6:	mov    DWORD PTR [esp+0x50],edx
100077da:	mov    edx,DWORD PTR [ebp+0x8]
100077dd:	mov    DWORD PTR [esp+0x4c],ecx
100077e1:	sete   cl
100077e4:	cmp    BYTE PTR [edx+0x8],0x0
100077e8:	mov    DWORD PTR [esp+0x54],eax
100077ec:	mov    BYTE PTR [esp+0x58],cl
100077f0:	je     0x10007806
100077f2:	push   0x8
100077f4:	lea    eax,[esp+0x40]
100077f8:	push   0x100826e4
100077fd:	push   eax
100077fe:	call   0x100178ee
10007803:	add    esp,0xc
10007806:	mov    eax,0x20
1000780b:	lea    ecx,[esp+0x3c]
1000780f:	push   0x0
10007811:	lea    edx,[esp+0x14]
10007815:	push   edx
10007816:	push   eax
10007817:	push   ecx
10007818:	push   ebx
10007819:	call   DWORD PTR ds:0x100340ac
1000781f:	test   eax,eax
10007821:	jne    0x10007837
10007823:	xor    eax,eax
10007825:	pop    esi
10007826:	mov    ecx,DWORD PTR [esp+0x58]
1000782a:	xor    ecx,esp
1000782c:	call   0x10015b2b
10007831:	mov    esp,ebp
10007833:	pop    ebp
10007834:	ret    0xc
10007837:	mov    ecx,DWORD PTR [ebp+0xc]
1000783a:	push   0x0
1000783c:	lea    eax,[esp+0x14]
10007840:	push   eax
10007841:	push   ecx
10007842:	push   esi
10007843:	push   ebx
10007844:	call   DWORD PTR ds:0x100340ac
1000784a:	test   eax,eax
1000784c:	je     0x10007823
1000784e:	mov    esi,DWORD PTR ds:0x10034068
10007854:	xor    eax,eax
10007856:	push   eax
10007857:	lea    edx,[esp+0x18]
1000785b:	push   edx
1000785c:	mov    DWORD PTR [esp+0x10],eax
10007860:	mov    DWORD PTR [esp+0x14],eax
10007864:	push   0x8
10007866:	lea    eax,[esp+0x14]
1000786a:	push   eax
1000786b:	push   ebx
1000786c:	call   esi
1000786e:	test   eax,eax
10007870:	je     0x10007823
10007872:	cmp    DWORD PTR [esp+0x8],0x0
10007877:	je     0x10007823
10007879:	mov    eax,DWORD PTR [esp+0xc]
1000787d:	cmp    eax,DWORD PTR [ebp+0x10]
10007880:	ja     0x10007823
10007882:	test   eax,eax
10007884:	je     0x10007896
10007886:	push   0x0
10007888:	lea    ecx,[esp+0x18]
1000788c:	push   ecx
1000788d:	push   eax
1000788e:	push   edi
1000788f:	push   ebx
10007890:	call   esi
10007892:	test   eax,eax
10007894:	je     0x10007823
10007896:	mov    ecx,DWORD PTR [esp+0x5c]
1000789a:	pop    esi
1000789b:	xor    ecx,esp
1000789d:	mov    eax,0x1
100078a2:	call   0x10015b2b
100078a7:	mov    esp,ebp
100078a9:	pop    ebp
100078aa:	ret    0xc
100078ad:	int3   
100078ae:	int3   
100078af:	int3   
100078b0:	cmp    DWORD PTR [ecx+0x18],0x10
100078b4:	jb     0x100078ba
100078b6:	mov    eax,DWORD PTR [ecx+0x4]
100078b9:	ret    
100078ba:	lea    eax,[ecx+0x4]
100078bd:	ret    
100078be:	int3   
100078bf:	int3   
100078c0:	mov    eax,DWORD PTR [ecx]
100078c2:	mov    DWORD PTR [ecx],0x0
100078c8:	ret    
100078c9:	int3   
100078ca:	int3   
100078cb:	int3   
100078cc:	int3   
100078cd:	int3   
100078ce:	int3   
100078cf:	int3   
100078d0:	push   esi
100078d1:	mov    esi,ecx
100078d3:	mov    DWORD PTR [esi],0x1006cde0
100078d9:	cmp    DWORD PTR [esi+0x24],0x10
100078dd:	jb     0x100078eb
100078df:	mov    eax,DWORD PTR [esi+0x10]
100078e2:	push   eax
100078e3:	call   0x10015b26
100078e8:	add    esp,0x4
100078eb:	xor    eax,eax
100078ed:	mov    DWORD PTR [esi+0x24],0xf
100078f4:	mov    DWORD PTR [esi+0x20],eax
100078f7:	mov    BYTE PTR [esi+0x10],al
100078fa:	mov    ecx,esi
100078fc:	pop    esi
100078fd:	jmp    0x1001637c
10007902:	int3   
10007903:	int3   
10007904:	int3   
10007905:	int3   
10007906:	int3   
10007907:	int3   
10007908:	int3   
10007909:	int3   
1000790a:	int3   
1000790b:	int3   
1000790c:	int3   
1000790d:	int3   
1000790e:	int3   
1000790f:	int3   
10007910:	push   esi
10007911:	mov    esi,ecx
10007913:	mov    DWORD PTR [esi],0x1006cde0
10007919:	cmp    DWORD PTR [esi+0x24],0x10
1000791d:	jb     0x1000792b
1000791f:	mov    eax,DWORD PTR [esi+0x10]
10007922:	push   eax
10007923:	call   0x10015b26
10007928:	add    esp,0x4
1000792b:	xor    eax,eax
1000792d:	mov    DWORD PTR [esi+0x24],0xf
10007934:	mov    DWORD PTR [esi+0x20],eax
10007937:	mov    ecx,esi
10007939:	mov    BYTE PTR [esi+0x10],al
1000793c:	call   0x1001637c
10007941:	test   BYTE PTR [esp+0x8],0x1
10007946:	je     0x10007951
10007948:	push   esi
10007949:	call   0x10015b26
1000794e:	add    esp,0x4
10007951:	mov    eax,esi
10007953:	pop    esi
10007954:	ret    0x4
10007957:	int3   
10007958:	int3   
10007959:	int3   
1000795a:	int3   
1000795b:	int3   
1000795c:	int3   
1000795d:	int3   
1000795e:	int3   
1000795f:	int3   
10007960:	jmp    0x100170de
10007965:	int3   
10007966:	int3   
10007967:	int3   
10007968:	int3   
10007969:	int3   
1000796a:	int3   
1000796b:	int3   
1000796c:	int3   
1000796d:	int3   
1000796e:	int3   
1000796f:	int3   
10007970:	jmp    0x10017273
10007975:	int3   
10007976:	int3   
10007977:	int3   
10007978:	int3   
10007979:	int3   
1000797a:	int3   
1000797b:	int3   
1000797c:	int3   
1000797d:	int3   
1000797e:	int3   
1000797f:	int3   
10007980:	push   ecx
10007981:	xor    eax,eax
10007983:	cmp    WORD PTR [esp+0x8],ax
10007988:	mov    DWORD PTR [esp],eax
1000798b:	je     0x100079a0
1000798d:	mov    DWORD PTR [esp+0x8],eax
10007991:	push   0x10085d78
10007996:	lea    eax,[esp+0xc]
1000799a:	push   eax
1000799b:	call   0x1001621e
100079a0:	push   0x25
100079a2:	push   0x1008389c
100079a7:	push   0xbf4
100079ac:	push   0x10082ca8
100079b1:	push   esi
100079b2:	call   0x1000b680
100079b7:	add    esp,0x14
100079ba:	mov    eax,esi
100079bc:	pop    ecx
100079bd:	ret    
100079be:	int3   
100079bf:	int3   
100079c0:	push   ecx
100079c1:	xor    eax,eax
100079c3:	cmp    WORD PTR [esp+0x8],ax
100079c8:	mov    DWORD PTR [esp],eax
100079cb:	je     0x100079e0
100079cd:	mov    DWORD PTR [esp+0x8],eax
100079d1:	push   0x10085d78
100079d6:	lea    eax,[esp+0xc]
100079da:	push   eax
100079db:	call   0x1001621e
100079e0:	push   0x25
100079e2:	push   0x1008391c
100079e7:	push   0x53
100079e9:	push   0x100838c8
100079ee:	push   esi
100079ef:	call   0x1000b680
100079f4:	add    esp,0x14
100079f7:	mov    eax,esi
100079f9:	pop    ecx
100079fa:	ret    
100079fb:	int3   
100079fc:	int3   
100079fd:	int3   
100079fe:	int3   
100079ff:	int3   
10007a00:	sub    esp,0x8
10007a03:	xor    eax,eax
10007a05:	cmp    WORD PTR [esp+0xc],ax
10007a0a:	mov    DWORD PTR [esp+0x4],eax
10007a0e:	je     0x10007a23
10007a10:	mov    DWORD PTR [esp+0xc],eax
10007a14:	push   0x10085d78
10007a19:	lea    eax,[esp+0x10]
10007a1d:	push   eax
10007a1e:	call   0x1001621e
10007a23:	push   0x25
10007a25:	push   0x100839d8
10007a2a:	push   0x8e
10007a2f:	push   0x10083948
10007a34:	push   esi
10007a35:	call   0x1000b680
10007a3a:	add    esp,0x14
10007a3d:	mov    eax,esi
10007a3f:	add    esp,0x8
10007a42:	ret    
10007a43:	int3   
10007a44:	int3   
10007a45:	int3   
10007a46:	int3   
10007a47:	int3   
10007a48:	int3   
10007a49:	int3   
10007a4a:	int3   
10007a4b:	int3   
10007a4c:	int3   
10007a4d:	int3   
10007a4e:	int3   
10007a4f:	int3   
10007a50:	mov    DWORD PTR [ecx],0x100842ac
10007a56:	ret    
10007a57:	int3   
10007a58:	int3   
10007a59:	int3   
10007a5a:	int3   
10007a5b:	int3   
10007a5c:	int3   
10007a5d:	int3   
10007a5e:	int3   
10007a5f:	int3   
10007a60:	test   BYTE PTR [esp+0x4],0x1
10007a65:	push   esi
10007a66:	mov    esi,ecx
10007a68:	mov    DWORD PTR [esi],0x100842ac
10007a6e:	je     0x10007a79
10007a70:	push   esi
10007a71:	call   0x10015b26
10007a76:	add    esp,0x4
10007a79:	mov    eax,esi
10007a7b:	pop    esi
10007a7c:	ret    0x4
10007a7f:	int3   
10007a80:	push   0xffffffff
10007a82:	push   0x1002a978
10007a87:	mov    eax,fs:0x0
10007a8d:	push   eax
10007a8e:	push   esi
10007a8f:	mov    eax,ds:0x100951fc
10007a94:	xor    eax,esp
10007a96:	push   eax
10007a97:	lea    eax,[esp+0x8]
10007a9b:	mov    fs:0x0,eax
10007aa1:	mov    esi,DWORD PTR [esp+0x18]
10007aa5:	mov    eax,DWORD PTR [esp+0x1c]
10007aa9:	mov    DWORD PTR [esp+0x10],0x0
10007ab1:	mov    DWORD PTR [esi],0x100842b8
10007ab7:	mov    eax,DWORD PTR [eax]
10007ab9:	sub    eax,0x10
10007abc:	push   eax
10007abd:	call   0x10004990
10007ac2:	add    esp,0x4
10007ac5:	add    eax,0x10
10007ac8:	mov    DWORD PTR [esi+0x4],eax
10007acb:	mov    eax,esi
10007acd:	mov    ecx,DWORD PTR [esp+0x8]
10007ad1:	mov    DWORD PTR fs:0x0,ecx
10007ad8:	pop    ecx
10007ad9:	pop    esi
10007ada:	add    esp,0xc
10007add:	ret    0x8
10007ae0:	mov    ecx,DWORD PTR [ecx+0x4]
10007ae3:	push   ecx
10007ae4:	call   DWORD PTR ds:0x10034098
10007aea:	test   eax,eax
10007aec:	jne    0x10007af3
10007aee:	xor    edx,edx
10007af0:	ret    0x4
10007af3:	mov    ecx,DWORD PTR [esp+0x4]
10007af7:	push   ecx
10007af8:	push   eax
10007af9:	call   DWORD PTR ds:0x10034044
10007aff:	xor    edx,edx
10007b01:	ret    0x4
10007b04:	int3   
10007b05:	int3   
10007b06:	int3   
10007b07:	int3   
10007b08:	int3   
10007b09:	int3   
10007b0a:	int3   
10007b0b:	int3   
10007b0c:	int3   
10007b0d:	int3   
10007b0e:	int3   
10007b0f:	int3   
10007b10:	push   esi
10007b11:	mov    esi,ecx
10007b13:	mov    eax,DWORD PTR [esi+0x4]
10007b16:	sub    eax,0x10
10007b19:	lea    ecx,[eax+0xc]
10007b1c:	or     edx,0xffffffff
10007b1f:	lock xadd DWORD PTR [ecx],edx
10007b23:	dec    edx
10007b24:	test   edx,edx
10007b26:	jg     0x10007b32
10007b28:	mov    ecx,DWORD PTR [eax]
10007b2a:	mov    edx,DWORD PTR [ecx]
10007b2c:	push   eax
10007b2d:	mov    eax,DWORD PTR [edx+0x4]
10007b30:	call   eax
10007b32:	test   BYTE PTR [esp+0x8],0x1
10007b37:	mov    DWORD PTR [esi],0x100842ac
10007b3d:	je     0x10007b48
10007b3f:	push   esi
10007b40:	call   0x10015b26
10007b45:	add    esp,0x4
10007b48:	mov    eax,esi
10007b4a:	pop    esi
10007b4b:	ret    0x4
10007b4e:	int3   
10007b4f:	int3   
10007b50:	push   0xffffffff
10007b52:	push   0x1002abe3
10007b57:	mov    eax,fs:0x0
10007b5d:	push   eax
10007b5e:	push   ecx
10007b5f:	push   esi
10007b60:	mov    eax,ds:0x100951fc
10007b65:	xor    eax,esp
10007b67:	push   eax
10007b68:	lea    eax,[esp+0xc]
10007b6c:	mov    fs:0x0,eax
10007b72:	xor    esi,esi
10007b74:	push   0x8
10007b76:	mov    DWORD PTR [esp+0x18],esi
10007b7a:	call   0x10016464
10007b7f:	add    esp,0x4
10007b82:	mov    DWORD PTR [esp+0x8],eax
10007b86:	cmp    eax,esi
10007b88:	mov    BYTE PTR [esp+0x14],0x1
10007b8d:	je     0x10007b9c
10007b8f:	lea    ecx,[esp+0x1c]
10007b93:	push   ecx
10007b94:	push   eax
10007b95:	call   0x10007a80
10007b9a:	mov    esi,eax
10007b9c:	mov    DWORD PTR [esp+0x14],0xffffffff
10007ba4:	mov    eax,DWORD PTR [esp+0x1c]
10007ba8:	add    eax,0xfffffff0
10007bab:	lea    edx,[eax+0xc]
10007bae:	or     ecx,0xffffffff
10007bb1:	lock xadd DWORD PTR [edx],ecx
10007bb5:	dec    ecx
10007bb6:	test   ecx,ecx
10007bb8:	jg     0x10007bc4
10007bba:	mov    ecx,DWORD PTR [eax]
10007bbc:	mov    edx,DWORD PTR [ecx]
10007bbe:	push   eax
10007bbf:	mov    eax,DWORD PTR [edx+0x4]
10007bc2:	call   eax
10007bc4:	mov    eax,esi
10007bc6:	mov    ecx,DWORD PTR [esp+0xc]
10007bca:	mov    DWORD PTR fs:0x0,ecx
10007bd1:	pop    ecx
10007bd2:	pop    esi
10007bd3:	add    esp,0x10
10007bd6:	ret    
10007bd7:	int3   
10007bd8:	int3   
10007bd9:	int3   
10007bda:	int3   
10007bdb:	int3   
10007bdc:	int3   
10007bdd:	int3   
10007bde:	int3   
10007bdf:	int3   
10007be0:	mov    eax,DWORD PTR [eax]
10007be2:	ret    
10007be3:	int3   
10007be4:	int3   
10007be5:	int3   
10007be6:	int3   
10007be7:	int3   
10007be8:	int3   
10007be9:	int3   
10007bea:	int3   
10007beb:	int3   
10007bec:	int3   
10007bed:	int3   
10007bee:	int3   
10007bef:	int3   
10007bf0:	push   esi
10007bf1:	mov    esi,eax
10007bf3:	call   0x10007d00
10007bf8:	mov    ecx,esi
10007bfa:	pop    esi
10007bfb:	jmp    0x1000a210
10007c00:	push   0xffffffff
10007c02:	push   0x1002ad98
10007c07:	mov    eax,fs:0x0
10007c0d:	push   eax
10007c0e:	sub    esp,0x28
10007c11:	push   ebx
10007c12:	push   ebp
10007c13:	push   esi
10007c14:	push   edi
10007c15:	mov    eax,ds:0x100951fc
10007c1a:	xor    eax,esp
10007c1c:	push   eax
10007c1d:	lea    eax,[esp+0x3c]
10007c21:	mov    fs:0x0,eax
10007c27:	mov    esi,ecx
10007c29:	call   DWORD PTR ds:0x10034138
10007c2f:	mov    DWORD PTR [esp+0x18],eax
10007c33:	call   0x10007d00
10007c38:	push   0x0
10007c3a:	push   0x4
10007c3c:	call   0x100153e0
10007c41:	mov    edi,eax
10007c43:	mov    DWORD PTR [esp+0x1c],edi
10007c47:	cmp    edi,0xffffffff
10007c4a:	mov    DWORD PTR [esp+0x44],0x0
10007c52:	jne    0x10007c5d
10007c54:	call   DWORD PTR ds:0x1003407c
10007c5a:	push   edi
10007c5b:	jmp    0x10007ccc
10007c5d:	lea    eax,[esp+0x20]
10007c61:	push   eax
10007c62:	push   edi
10007c63:	mov    DWORD PTR [esp+0x28],0x1c
10007c6b:	call   0x100153f2
10007c70:	test   eax,eax
10007c72:	je     0x10007cc1
10007c74:	mov    ebx,DWORD PTR ds:0x1003411c
10007c7a:	mov    ebp,DWORD PTR ds:0x10034134
10007c80:	mov    ecx,DWORD PTR [esp+0x4c]
10007c84:	cmp    DWORD PTR [esp+0x2c],ecx
10007c88:	jne    0x10007cb2
10007c8a:	mov    eax,DWORD PTR [esp+0x28]
10007c8e:	cmp    DWORD PTR [esp+0x18],eax
10007c92:	je     0x10007cb2
10007c94:	push   eax
10007c95:	push   0x0
10007c97:	push   0x2
10007c99:	call   ebx
10007c9b:	lea    edx,[esp+0x14]
10007c9f:	push   edx
10007ca0:	mov    ecx,esi
10007ca2:	mov    DWORD PTR [esp+0x18],eax
10007ca6:	call   0x1000a1c0
10007cab:	mov    eax,DWORD PTR [esp+0x14]
10007caf:	push   eax
10007cb0:	call   ebp
10007cb2:	lea    ecx,[esp+0x20]
10007cb6:	push   ecx
10007cb7:	push   edi
10007cb8:	call   0x100153f8
10007cbd:	test   eax,eax
10007cbf:	jne    0x10007c80
10007cc1:	test   edi,edi
10007cc3:	je     0x10007cdb
10007cc5:	call   DWORD PTR ds:0x1003407c
10007ccb:	push   edi
10007ccc:	mov    esi,eax
10007cce:	call   DWORD PTR ds:0x10034058
10007cd4:	push   esi
10007cd5:	call   DWORD PTR ds:0x10034078
10007cdb:	mov    ecx,DWORD PTR [esp+0x3c]
10007cdf:	mov    DWORD PTR fs:0x0,ecx
10007ce6:	pop    ecx
10007ce7:	pop    edi
10007ce8:	pop    esi
10007ce9:	pop    ebp
10007cea:	pop    ebx
10007ceb:	add    esp,0x34
10007cee:	ret    0x4
10007cf1:	int3   
10007cf2:	int3   
10007cf3:	int3   
10007cf4:	int3   
10007cf5:	int3   
10007cf6:	int3   
10007cf7:	int3   
10007cf8:	int3   
10007cf9:	int3   
10007cfa:	int3   
10007cfb:	int3   
10007cfc:	int3   
10007cfd:	int3   
10007cfe:	int3   
10007cff:	int3   
10007d00:	mov    ecx,esi
10007d02:	call   0x1000a170
10007d07:	test   eax,eax
10007d09:	je     0x10007d4c
10007d0b:	push   ebx
10007d0c:	mov    ebx,DWORD PTR ds:0x10034058
10007d12:	push   edi
10007d13:	mov    edi,DWORD PTR ds:0x1003413c
10007d19:	lea    esp,[esp+0x0]
10007d20:	mov    ecx,esi
10007d22:	call   0x1000a190
10007d27:	mov    eax,DWORD PTR [eax]
10007d29:	push   eax
10007d2a:	call   edi
10007d2c:	mov    ecx,esi
10007d2e:	call   0x1000a190
10007d33:	mov    ecx,DWORD PTR [eax]
10007d35:	push   ecx
10007d36:	call   ebx
10007d38:	mov    ecx,esi
10007d3a:	call   0x1000a1f0
10007d3f:	mov    ecx,esi
10007d41:	call   0x1000a170
10007d46:	test   eax,eax
10007d48:	jne    0x10007d20
10007d4a:	pop    edi
10007d4b:	pop    ebx
10007d4c:	ret    
10007d4d:	int3   
10007d4e:	int3   
10007d4f:	int3   
10007d50:	push   0xffffffff
10007d52:	push   0x1002ad6a
10007d57:	mov    eax,fs:0x0
10007d5d:	push   eax
10007d5e:	sub    esp,0x24
10007d61:	push   ebx
10007d62:	push   ebp
10007d63:	push   esi
10007d64:	push   edi
10007d65:	mov    eax,ds:0x100951fc
10007d6a:	xor    eax,esp
10007d6c:	push   eax
10007d6d:	lea    eax,[esp+0x38]
10007d71:	mov    fs:0x0,eax
10007d77:	mov    esi,ecx
10007d79:	mov    edi,DWORD PTR [esp+0x48]
10007d7d:	xor    ebx,ebx
10007d7f:	mov    DWORD PTR [esp+0x14],ebx
10007d83:	mov    DWORD PTR [edi],ebx
10007d85:	mov    DWORD PTR [esp+0x40],ebx
10007d89:	lea    ecx,[edi+0x894]
10007d8f:	push   ebx
10007d90:	mov    DWORD PTR [edi+0x4],esi
10007d93:	mov    DWORD PTR [edi+0x888],ebx
10007d99:	mov    BYTE PTR [edi+0x890],bl
10007d9f:	call   0x1000a020
10007da4:	push   esi
10007da5:	push   ebx
10007da6:	push   0x1f0fff
10007dab:	mov    BYTE PTR [esp+0x4c],0x1
10007db0:	call   DWORD PTR ds:0x10034054
10007db6:	mov    esi,DWORD PTR [edi]
10007db8:	test   esi,esi
10007dba:	mov    ebp,eax
10007dbc:	je     0x10007dda
10007dbe:	call   DWORD PTR ds:0x1003407c
10007dc4:	push   esi
10007dc5:	mov    DWORD PTR [esp+0x18],eax
10007dc9:	call   DWORD PTR ds:0x10034058
10007dcf:	mov    eax,DWORD PTR [esp+0x14]
10007dd3:	push   eax
10007dd4:	call   DWORD PTR ds:0x10034078
10007dda:	push   0x8
10007ddc:	mov    DWORD PTR [edi],ebp
10007dde:	call   0x10016464
10007de3:	mov    ebp,eax
10007de5:	add    esp,0x4
10007de8:	mov    DWORD PTR [esp+0x18],ebp
10007dec:	test   ebp,ebp
10007dee:	mov    BYTE PTR [esp+0x40],0x2
10007df3:	je     0x10007e1b
10007df5:	push   0x0
10007df7:	lea    esi,[esp+0x20]
10007dfb:	call   0x10007980
10007e00:	add    esp,0x4
10007e03:	mov    BYTE PTR [esp+0x40],0x3
10007e08:	mov    ebx,0x1
10007e0d:	push   ebp
10007e0e:	mov    ecx,eax
10007e10:	mov    DWORD PTR [esp+0x18],ebx
10007e14:	call   0x1000c540
10007e19:	jmp    0x10007e1d
10007e1b:	xor    eax,eax
10007e1d:	push   eax
10007e1e:	lea    ecx,[edi+0x894]
10007e24:	call   0x1000a0b0
10007e29:	test   bl,0x1
10007e2c:	je     0x10007e42
10007e2e:	cmp    DWORD PTR [esp+0x34],0x10
10007e33:	jb     0x10007e42
10007e35:	mov    ecx,DWORD PTR [esp+0x20]
10007e39:	push   ecx
10007e3a:	call   0x10015b26
10007e3f:	add    esp,0x4
10007e42:	mov    eax,edi
10007e44:	mov    ecx,DWORD PTR [esp+0x38]
10007e48:	mov    DWORD PTR fs:0x0,ecx
10007e4f:	pop    ecx
10007e50:	pop    edi
10007e51:	pop    esi
10007e52:	pop    ebp
10007e53:	pop    ebx
10007e54:	add    esp,0x30
10007e57:	ret    0x4
10007e5a:	int3   
10007e5b:	int3   
10007e5c:	int3   
10007e5d:	int3   
10007e5e:	int3   
10007e5f:	int3   
10007e60:	push   0xffffffff
10007e62:	push   0x1002ad0e
10007e67:	mov    eax,fs:0x0
10007e6d:	push   eax
10007e6e:	sub    esp,0x98
10007e74:	push   ebx
10007e75:	push   ebp
10007e76:	push   esi
10007e77:	push   edi
10007e78:	mov    eax,ds:0x100951fc
10007e7d:	xor    eax,esp
10007e7f:	push   eax
10007e80:	lea    eax,[esp+0xac]
10007e87:	mov    fs:0x0,eax
10007e8d:	mov    ebx,ecx
10007e8f:	mov    ebp,DWORD PTR [esp+0xbc]
10007e96:	mov    esi,DWORD PTR [ebp+0x3c]
10007e99:	mov    ecx,DWORD PTR [esi+ebp*1+0x50]
10007e9d:	mov    edx,DWORD PTR [esi+ebp*1+0x34]
10007ea1:	mov    eax,DWORD PTR [ebx]
10007ea3:	push   0x40
10007ea5:	add    esi,ebp
10007ea7:	push   0x3000
10007eac:	push   ecx
10007ead:	push   edx
10007eae:	push   eax
10007eaf:	call   DWORD PTR ds:0x10034110
10007eb5:	mov    edi,eax
10007eb7:	test   edi,edi
10007eb9:	jne    0x10007f25
10007ebb:	mov    ecx,DWORD PTR [esi+0x50]
10007ebe:	mov    eax,DWORD PTR [ebx]
10007ec0:	push   0x40
10007ec2:	push   0x3000
10007ec7:	push   ecx
10007ec8:	push   edi
10007ec9:	push   eax
10007eca:	call   DWORD PTR ds:0x10034110
10007ed0:	mov    edi,eax
10007ed2:	test   edi,edi
10007ed4:	jne    0x10007f25
10007ed6:	xor    esi,esi
10007ed8:	push   esi
10007ed9:	push   0x100826fa
10007ede:	lea    ecx,[esp+0x28]
10007ee2:	mov    DWORD PTR [esp+0x40],0xf
10007eea:	mov    DWORD PTR [esp+0x3c],esi
10007eee:	mov    BYTE PTR [esp+0x2c],0x0
10007ef3:	call   0x10003900
10007ef8:	lea    edx,[esp+0x20]
10007efc:	push   edx
10007efd:	lea    eax,[esp+0x5c]
10007f01:	push   eax
10007f02:	mov    DWORD PTR [esp+0xbc],esi
10007f09:	call   0x100014d0
10007f0e:	push   0x10085db4
10007f13:	lea    ecx,[esp+0x5c]
10007f17:	push   ecx
10007f18:	mov    DWORD PTR [esp+0x60],0x100842a0
10007f20:	call   0x1001621e
10007f25:	mov    eax,DWORD PTR [ebx]
10007f27:	lea    edx,[esp+0x1c]
10007f2b:	push   edx
10007f2c:	mov    DWORD PTR [esp+0x20],0x0
10007f34:	mov    ecx,DWORD PTR [esi+0x54]
10007f37:	push   ecx
10007f38:	push   ebp
10007f39:	push   edi
10007f3a:	push   eax
10007f3b:	call   DWORD PTR ds:0x10034128
10007f41:	test   eax,eax
10007f43:	jne    0x10007fa1
10007f45:	call   DWORD PTR ds:0x1003407c
10007f4b:	push   0x0
10007f4d:	push   0x100826fa
10007f52:	lea    ecx,[esp+0x28]
10007f56:	mov    DWORD PTR [esp+0x40],0xf
10007f5e:	mov    DWORD PTR [esp+0x3c],0x0
10007f66:	mov    BYTE PTR [esp+0x2c],0x0
10007f6b:	call   0x10003900
10007f70:	lea    edx,[esp+0x20]
10007f74:	push   edx
10007f75:	lea    eax,[esp+0x5c]
10007f79:	push   eax
10007f7a:	mov    DWORD PTR [esp+0xbc],0x1
10007f85:	call   0x100014d0
10007f8a:	push   0x10085db4
10007f8f:	lea    ecx,[esp+0x5c]
10007f93:	push   ecx
10007f94:	mov    DWORD PTR [esp+0x60],0x100842a0
10007f9c:	call   0x1001621e
10007fa1:	movzx  eax,WORD PTR [esi+0x6]
10007fa5:	sub    eax,0x1
10007fa8:	movzx  edx,WORD PTR [esi+0x14]
10007fac:	lea    ebp,[edx+esi*1+0x18]
10007fb0:	mov    DWORD PTR [esp+0x18],0x0
10007fb8:	js     0x10008001
10007fba:	add    ebp,0x10
10007fbd:	lea    ecx,[ecx+0x0]
10007fc0:	mov    ecx,DWORD PTR [ebp+0x0]
10007fc3:	test   ecx,ecx
10007fc5:	je     0x10007fe8
10007fc7:	mov    edx,DWORD PTR [ebp-0x4]
10007fca:	mov    eax,DWORD PTR [ebx]
10007fcc:	push   0x0
10007fce:	push   ecx
10007fcf:	mov    ecx,DWORD PTR [ebp+0x4]
10007fd2:	add    ecx,DWORD PTR [esp+0xc4]
10007fd9:	add    edx,edi
10007fdb:	push   ecx
10007fdc:	push   edx
10007fdd:	push   eax
10007fde:	call   DWORD PTR ds:0x10034128
10007fe4:	test   eax,eax
10007fe6:	je     0x1000802c
10007fe8:	movzx  ecx,WORD PTR [esi+0x6]
10007fec:	mov    eax,DWORD PTR [esp+0x18]
10007ff0:	add    eax,0x1
10007ff3:	sub    ecx,0x1
10007ff6:	add    ebp,0x28
10007ff9:	cmp    eax,ecx
10007ffb:	mov    DWORD PTR [esp+0x18],eax
10007fff:	jle    0x10007fc0
10008001:	mov    eax,edi
10008003:	cdq    
10008004:	mov    DWORD PTR [ebx+0x70],eax
10008007:	mov    DWORD PTR [ebx+0x74],edx
1000800a:	mov    edx,DWORD PTR [esi+0x50]
1000800d:	mov    DWORD PTR [ebx+0x78],edx
10008010:	mov    ecx,DWORD PTR [esp+0xac]
10008017:	mov    DWORD PTR fs:0x0,ecx
1000801e:	pop    ecx
1000801f:	pop    edi
10008020:	pop    esi
10008021:	pop    ebp
10008022:	pop    ebx
10008023:	add    esp,0xa4
10008029:	ret    0x4
1000802c:	call   DWORD PTR ds:0x1003407c
10008032:	mov    ebx,DWORD PTR [ebx]
10008034:	push   0x8000
10008039:	push   0x0
1000803b:	push   edi
1000803c:	push   ebx
1000803d:	call   DWORD PTR ds:0x10034124
10008043:	push   0x0
10008045:	push   0x100826fa
1000804a:	lea    ecx,[esp+0x44]
1000804e:	mov    DWORD PTR [esp+0x5c],0xf
10008056:	mov    DWORD PTR [esp+0x58],0x0
1000805e:	mov    BYTE PTR [esp+0x48],0x0
10008063:	call   0x10003900
10008068:	lea    edx,[esp+0x3c]
1000806c:	push   edx
1000806d:	lea    eax,[esp+0x84]
10008074:	push   eax
10008075:	mov    DWORD PTR [esp+0xbc],0x2
10008080:	call   0x100014d0
10008085:	push   0x10085db4
1000808a:	lea    ecx,[esp+0x84]
10008091:	push   ecx
10008092:	mov    DWORD PTR [esp+0x88],0x100842a0
1000809d:	call   0x1001621e
100080a2:	int3   
100080a3:	int3   
100080a4:	int3   
100080a5:	int3   
100080a6:	int3   
100080a7:	int3   
100080a8:	int3   
100080a9:	int3   
100080aa:	int3   
100080ab:	int3   
100080ac:	int3   
100080ad:	int3   
100080ae:	int3   
100080af:	int3   
100080b0:	mov    eax,DWORD PTR [esp+0x4]
100080b4:	push   esi
100080b5:	push   eax
100080b6:	mov    esi,ecx
100080b8:	call   0x10001550
100080bd:	mov    DWORD PTR [esi],0x100842a0
100080c3:	mov    eax,esi
100080c5:	pop    esi
100080c6:	ret    0x4
100080c9:	int3   
100080ca:	int3   
100080cb:	int3   
100080cc:	int3   
100080cd:	int3   
100080ce:	int3   
100080cf:	int3   
100080d0:	push   0xffffffff
100080d2:	push   0x1002b24e
100080d7:	mov    eax,fs:0x0
100080dd:	push   eax
100080de:	sub    esp,0xa8
100080e4:	push   ebx
100080e5:	push   ebp
100080e6:	push   esi
100080e7:	mov    eax,ds:0x100951fc
100080ec:	xor    eax,esp
100080ee:	push   eax
100080ef:	lea    eax,[esp+0xb8]
100080f6:	mov    fs:0x0,eax
100080fc:	lea    eax,[esp+0x18]
10008100:	push   eax
10008101:	call   DWORD PTR ds:0x100340f8
10008107:	lea    ecx,[esp+0x38]
1000810b:	push   ecx
1000810c:	lea    edx,[esp+0x1c]
10008110:	push   edx
10008111:	call   DWORD PTR ds:0x100340e4
10008117:	mov    ecx,DWORD PTR [esp+0x38]
1000811b:	mov    eax,DWORD PTR [esp+0x3c]
1000811f:	sub    ecx,0x2a69c000
10008125:	push   0x2
10008127:	sbb    eax,0xc9
1000812c:	xor    ebx,ebx
1000812e:	push   ebx
1000812f:	push   ebx
10008130:	mov    DWORD PTR [edi+0x80],ecx
10008136:	lea    ecx,[esp+0x40]
1000813a:	mov    DWORD PTR [edi+0x84],eax
10008140:	mov    eax,DWORD PTR [edi]
10008142:	push   ecx
10008143:	push   eax
10008144:	push   eax
10008145:	mov    DWORD PTR [esp+0x4c],ebx
10008149:	call   DWORD PTR ds:0x100340d0
1000814f:	push   eax
10008150:	call   DWORD PTR ds:0x10034140
10008156:	mov    eax,DWORD PTR [esp+0x34]
1000815a:	push   0x10083a00
1000815f:	cdq    
10008160:	push   0x9
10008162:	push   0x10083a38
10008167:	mov    DWORD PTR [edi+0x68],eax
1000816a:	mov    DWORD PTR [edi+0x6c],edx
1000816d:	call   0x10003540
10008172:	add    esp,0x8
10008175:	mov    ecx,esp
10008177:	mov    DWORD PTR [esp+0x3c],esp
1000817b:	push   eax
1000817c:	call   0x10002d70
10008181:	call   0x10007b50
10008186:	add    esp,0x4
10008189:	push   eax
1000818a:	lea    ecx,[esp+0x18]
1000818e:	call   0x1000a020
10008193:	lea    ecx,[esp+0x14]
10008197:	mov    DWORD PTR [esp+0xc0],ebx
1000819e:	call   0x1000a090
100081a3:	push   0x10083a4c
100081a8:	mov    esi,eax
100081aa:	mov    ebp,DWORD PTR [esi]
100081ac:	push   0xd
100081ae:	push   0x10083a84
100081b3:	call   0x10003340
100081b8:	mov    edx,DWORD PTR [ebp+0x0]
100081bb:	add    esp,0xc
100081be:	push   eax
100081bf:	mov    ecx,esi
100081c1:	call   edx
100081c3:	lea    ecx,[esp+0x14]
100081c7:	mov    DWORD PTR [esp+0x58],eax
100081cb:	call   0x1000a090
100081d0:	push   0x10083a94
100081d5:	mov    esi,eax
100081d7:	mov    ebp,DWORD PTR [esi]
100081d9:	push   0xf
100081db:	push   0x10083acc
100081e0:	call   0x10003340
100081e5:	add    esp,0xc
100081e8:	push   eax
100081e9:	mov    eax,DWORD PTR [ebp+0x0]
100081ec:	mov    ecx,esi
100081ee:	call   eax
100081f0:	lea    ecx,[esp+0x14]
100081f4:	mov    DWORD PTR [esp+0x48],eax
100081f8:	call   0x1000a090
100081fd:	mov    esi,eax
100081ff:	mov    ebp,DWORD PTR [esi]
10008201:	push   0x10083adc
10008206:	push   0xe
10008208:	push   0x10083b18
1000820d:	call   0x10003340
10008212:	mov    edx,DWORD PTR [ebp+0x0]
10008215:	add    esp,0xc
10008218:	push   eax
10008219:	mov    ecx,esi
1000821b:	call   edx
1000821d:	lea    ecx,[esp+0x14]
10008221:	mov    DWORD PTR [esp+0x50],eax
10008225:	call   0x1000a090
1000822a:	push   0x10083b28
1000822f:	mov    esi,eax
10008231:	mov    ebp,DWORD PTR [esi]
10008233:	push   0x12
10008235:	push   0x10083b64
1000823a:	call   0x10003340
1000823f:	add    esp,0xc
10008242:	push   eax
10008243:	mov    eax,DWORD PTR [ebp+0x0]
10008246:	mov    ecx,esi
10008248:	call   eax
1000824a:	lea    ecx,[esp+0x14]
1000824e:	mov    DWORD PTR [esp+0x5c],eax
10008252:	call   0x1000a090
10008257:	push   0x10083b78
1000825c:	mov    esi,eax
1000825e:	mov    ebp,DWORD PTR [esi]
10008260:	push   0x14
10008262:	push   0x10083bb8
10008267:	call   0x10003340
1000826c:	mov    edx,DWORD PTR [ebp+0x0]
1000826f:	add    esp,0xc
10008272:	push   eax
10008273:	mov    ecx,esi
10008275:	call   edx
10008277:	lea    ecx,[esp+0x14]
1000827b:	mov    DWORD PTR [esp+0x4c],eax
1000827f:	call   0x1000a090
10008284:	push   0x10083bd0
10008289:	mov    esi,eax
1000828b:	mov    ebp,DWORD PTR [esi]
1000828d:	push   0xa
1000828f:	push   0x10083c00
10008294:	call   0x10003340
10008299:	add    esp,0xc
1000829c:	push   eax
1000829d:	mov    eax,DWORD PTR [ebp+0x0]
100082a0:	mov    ecx,esi
100082a2:	call   eax
100082a4:	lea    ecx,[esp+0x14]
100082a8:	mov    DWORD PTR [esp+0x54],eax
100082ac:	call   0x1000a090
100082b1:	push   0x10083c0c
100082b6:	mov    esi,eax
100082b8:	mov    ebp,DWORD PTR [esi]
100082ba:	push   0x15
100082bc:	push   0x10083c30
100082c1:	call   0x10003340
100082c6:	mov    edx,DWORD PTR [ebp+0x0]
100082c9:	add    esp,0xc
100082cc:	push   eax
100082cd:	mov    ecx,esi
100082cf:	call   edx
100082d1:	lea    ecx,[esp+0x14]
100082d5:	mov    DWORD PTR [esp+0x40],eax
100082d9:	call   0x1000a090
100082de:	push   0x10083c48
100082e3:	mov    esi,eax
100082e5:	mov    ebp,DWORD PTR [esi]
100082e7:	push   0x7
100082e9:	push   0x10083c84
100082ee:	call   0x10003340
100082f3:	add    esp,0xc
100082f6:	push   eax
100082f7:	mov    eax,DWORD PTR [ebp+0x0]
100082fa:	mov    ecx,esi
100082fc:	call   eax
100082fe:	lea    ecx,[esp+0x14]
10008302:	mov    DWORD PTR [esp+0x44],eax
10008306:	call   0x1000a090
1000830b:	mov    esi,eax
1000830d:	mov    ebp,DWORD PTR [esi]
1000830f:	push   0x10083c8c
10008314:	push   0x14
10008316:	push   0x10083cc0
1000831b:	call   0x10003340
10008320:	mov    edx,DWORD PTR [ebp+0x0]
10008323:	add    esp,0xc
10008326:	push   eax
10008327:	mov    ecx,esi
10008329:	call   edx
1000832b:	lea    ecx,[esp+0x60]
1000832f:	mov    DWORD PTR [esp+0x38],eax
10008333:	call   0x1000a120
10008338:	mov    BYTE PTR [esp+0xc0],0x1
10008340:	mov    eax,DWORD PTR [edi+0x4]
10008343:	push   eax
10008344:	lea    ecx,[esp+0x64]
10008348:	call   0x10007c00
1000834d:	push   0x10083cd8
10008352:	push   0xf
10008354:	push   0x10083d0c
10008359:	call   0x10003340
1000835e:	mov    ecx,eax
10008360:	add    esp,0xc
10008363:	mov    DWORD PTR [esp+0x30],0xf
1000836b:	mov    DWORD PTR [esp+0x2c],ebx
1000836f:	mov    BYTE PTR [esp+0x1c],bl
10008373:	lea    esi,[ecx+0x1]
10008376:	mov    dl,BYTE PTR [ecx]
10008378:	add    ecx,0x1
1000837b:	cmp    dl,bl
1000837d:	jne    0x10008376
1000837f:	sub    ecx,esi
10008381:	push   ecx
10008382:	push   eax
10008383:	lea    ecx,[esp+0x20]
10008387:	call   0x10003900
1000838c:	lea    ecx,[esp+0x18]
10008390:	lea    ebp,[edi+0x894]
10008396:	push   ecx
10008397:	mov    BYTE PTR [esp+0xc4],0x2
1000839f:	mov    esi,DWORD PTR [edi]
100083a1:	mov    ecx,ebp
100083a3:	call   0x1000a090
100083a8:	call   0x1000c5d0
100083ad:	add    eax,DWORD PTR [edi+0x88c]
100083b3:	mov    edx,DWORD PTR [esp+0x58]
100083b7:	push   eax
100083b8:	push   edx
100083b9:	call   0x1000ca00
100083be:	cdq    
100083bf:	add    esp,0x8
100083c2:	mov    BYTE PTR [esp+0xc0],0x1
100083ca:	cmp    DWORD PTR [esp+0x30],0x10
100083cf:	mov    DWORD PTR [edi+0x8],eax
100083d2:	mov    DWORD PTR [edi+0xc],edx
100083d5:	jb     0x100083e4
100083d7:	mov    eax,DWORD PTR [esp+0x1c]
100083db:	push   eax
100083dc:	call   0x10015b26
100083e1:	add    esp,0x4
100083e4:	push   0x10083d1c
100083e9:	push   0x11
100083eb:	push   0x10083d48
100083f0:	call   0x10003340
100083f5:	mov    esi,eax
100083f7:	mov    ecx,esi
100083f9:	add    esp,0xc
100083fc:	mov    DWORD PTR [esp+0x30],0xf
10008404:	mov    DWORD PTR [esp+0x2c],ebx
10008408:	mov    BYTE PTR [esp+0x1c],bl
1000840c:	lea    edx,[ecx+0x1]
1000840f:	nop
10008410:	mov    al,BYTE PTR [ecx]
10008412:	add    ecx,0x1
10008415:	cmp    al,bl
10008417:	jne    0x10008410
10008419:	sub    ecx,edx
1000841b:	push   ecx
1000841c:	push   esi
1000841d:	lea    ecx,[esp+0x20]
10008421:	call   0x10003900
10008426:	lea    ecx,[esp+0x18]
1000842a:	push   ecx
1000842b:	mov    BYTE PTR [esp+0xc4],0x3
10008433:	mov    esi,DWORD PTR [edi]
10008435:	mov    ecx,ebp
10008437:	call   0x1000a090
1000843c:	call   0x1000c5d0
10008441:	add    eax,DWORD PTR [edi+0x88c]
10008447:	mov    edx,DWORD PTR [esp+0x48]
1000844b:	push   eax
1000844c:	push   edx
1000844d:	call   0x1000ca00
10008452:	cdq    
10008453:	add    esp,0x8
10008456:	mov    BYTE PTR [esp+0xc0],0x1
1000845e:	cmp    DWORD PTR [esp+0x30],0x10
10008463:	mov    DWORD PTR [edi+0x10],eax
10008466:	mov    DWORD PTR [edi+0x14],edx
10008469:	jb     0x10008478
1000846b:	mov    eax,DWORD PTR [esp+0x1c]
1000846f:	push   eax
10008470:	call   0x10015b26
10008475:	add    esp,0x4
10008478:	push   0x10083d5c
1000847d:	push   0x10
1000847f:	push   0x10083d94
10008484:	call   0x10003340
10008489:	mov    esi,eax
1000848b:	mov    ecx,esi
1000848d:	add    esp,0xc
10008490:	mov    DWORD PTR [esp+0x30],0xf
10008498:	mov    DWORD PTR [esp+0x2c],ebx
1000849c:	mov    BYTE PTR [esp+0x1c],bl
100084a0:	lea    eax,[ecx+0x1]
100084a3:	mov    dl,BYTE PTR [ecx]
100084a5:	add    ecx,0x1
100084a8:	cmp    dl,bl
100084aa:	jne    0x100084a3
100084ac:	sub    ecx,eax
100084ae:	push   ecx
100084af:	push   esi
100084b0:	lea    ecx,[esp+0x20]
100084b4:	call   0x10003900
100084b9:	lea    ecx,[esp+0x18]
100084bd:	push   ecx
100084be:	mov    BYTE PTR [esp+0xc4],0x4
100084c6:	mov    esi,DWORD PTR [edi]
100084c8:	mov    ecx,ebp
100084ca:	call   0x1000a090
100084cf:	call   0x1000c5d0
100084d4:	add    eax,DWORD PTR [edi+0x88c]
100084da:	mov    edx,DWORD PTR [esp+0x50]
100084de:	push   eax
100084df:	push   edx
100084e0:	call   0x1000ca00
100084e5:	cdq    
100084e6:	add    esp,0x8
100084e9:	mov    BYTE PTR [esp+0xc0],0x1
100084f1:	cmp    DWORD PTR [esp+0x30],0x10
100084f6:	mov    DWORD PTR [edi+0x28],eax
100084f9:	mov    DWORD PTR [edi+0x2c],edx
100084fc:	jb     0x1000850b
100084fe:	mov    eax,DWORD PTR [esp+0x1c]
10008502:	push   eax
10008503:	call   0x10015b26
10008508:	add    esp,0x4
1000850b:	push   0x10083da8
10008510:	push   0x14
10008512:	push   0x10083de0
10008517:	call   0x10003340
1000851c:	mov    esi,eax
1000851e:	mov    ecx,esi
10008520:	add    esp,0xc
10008523:	mov    DWORD PTR [esp+0x30],0xf
1000852b:	mov    DWORD PTR [esp+0x2c],ebx
1000852f:	mov    BYTE PTR [esp+0x1c],bl
10008533:	lea    eax,[ecx+0x1]
10008536:	mov    dl,BYTE PTR [ecx]
10008538:	add    ecx,0x1
1000853b:	cmp    dl,bl
1000853d:	jne    0x10008536
1000853f:	sub    ecx,eax
10008541:	push   ecx
10008542:	push   esi
10008543:	lea    ecx,[esp+0x20]
10008547:	call   0x10003900
1000854c:	lea    ecx,[esp+0x18]
10008550:	push   ecx
10008551:	mov    BYTE PTR [esp+0xc4],0x5
10008559:	mov    esi,DWORD PTR [edi]
1000855b:	mov    ecx,ebp
1000855d:	call   0x1000a090
10008562:	call   0x1000c5d0
10008567:	add    eax,DWORD PTR [edi+0x88c]
1000856d:	mov    edx,DWORD PTR [esp+0x5c]
10008571:	push   eax
10008572:	push   edx
10008573:	call   0x1000ca00
10008578:	cdq    
10008579:	add    esp,0x8
1000857c:	mov    BYTE PTR [esp+0xc0],0x1
10008584:	cmp    DWORD PTR [esp+0x30],0x10
10008589:	mov    DWORD PTR [edi+0x18],eax
1000858c:	mov    DWORD PTR [edi+0x1c],edx
1000858f:	jb     0x1000859e
10008591:	mov    eax,DWORD PTR [esp+0x1c]
10008595:	push   eax
10008596:	call   0x10015b26
1000859b:	add    esp,0x4
1000859e:	push   0x10083df8
100085a3:	push   0x16
100085a5:	push   0x10083e2c
100085aa:	call   0x10003340
100085af:	mov    esi,eax
100085b1:	mov    ecx,esi
100085b3:	add    esp,0xc
100085b6:	mov    DWORD PTR [esp+0x30],0xf
100085be:	mov    DWORD PTR [esp+0x2c],ebx
100085c2:	mov    BYTE PTR [esp+0x1c],bl
100085c6:	lea    eax,[ecx+0x1]
100085c9:	lea    esp,[esp+0x0]
100085d0:	mov    dl,BYTE PTR [ecx]
100085d2:	add    ecx,0x1
100085d5:	cmp    dl,bl
100085d7:	jne    0x100085d0
100085d9:	sub    ecx,eax
100085db:	push   ecx
100085dc:	push   esi
100085dd:	lea    ecx,[esp+0x20]
100085e1:	call   0x10003900
100085e6:	lea    ecx,[esp+0x18]
100085ea:	push   ecx
100085eb:	mov    BYTE PTR [esp+0xc4],0x6
100085f3:	mov    esi,DWORD PTR [edi]
100085f5:	mov    ecx,ebp
100085f7:	call   0x1000a090
100085fc:	call   0x1000c5d0
10008601:	add    eax,DWORD PTR [edi+0x88c]
10008607:	mov    edx,DWORD PTR [esp+0x4c]
1000860b:	push   eax
1000860c:	push   edx
1000860d:	call   0x1000ca00
10008612:	cdq    
10008613:	add    esp,0x8
10008616:	mov    BYTE PTR [esp+0xc0],0x1
1000861e:	cmp    DWORD PTR [esp+0x30],0x10
10008623:	mov    DWORD PTR [edi+0x20],eax
10008626:	mov    DWORD PTR [edi+0x24],edx
10008629:	jb     0x10008638
1000862b:	mov    eax,DWORD PTR [esp+0x1c]
1000862f:	push   eax
10008630:	call   0x10015b26
10008635:	add    esp,0x4
10008638:	push   0x10083e44
1000863d:	push   0x17
1000863f:	push   0x10083e80
10008644:	call   0x10003340
10008649:	mov    esi,eax
1000864b:	mov    ecx,esi
1000864d:	add    esp,0xc
10008650:	mov    DWORD PTR [esp+0x30],0xf
10008658:	mov    DWORD PTR [esp+0x2c],ebx
1000865c:	mov    BYTE PTR [esp+0x1c],bl
10008660:	lea    eax,[ecx+0x1]
10008663:	mov    dl,BYTE PTR [ecx]
10008665:	add    ecx,0x1
10008668:	cmp    dl,bl
1000866a:	jne    0x10008663
1000866c:	sub    ecx,eax
1000866e:	push   ecx
1000866f:	push   esi
10008670:	lea    ecx,[esp+0x20]
10008674:	call   0x10003900
10008679:	lea    ecx,[esp+0x18]
1000867d:	push   ecx
1000867e:	mov    BYTE PTR [esp+0xc4],0x7
10008686:	mov    esi,DWORD PTR [edi]
10008688:	mov    ecx,ebp
1000868a:	call   0x1000a090
1000868f:	call   0x1000c5d0
10008694:	add    eax,DWORD PTR [edi+0x88c]
1000869a:	mov    edx,DWORD PTR [esp+0x40]
1000869e:	push   eax
1000869f:	push   edx
100086a0:	call   0x1000ca00
100086a5:	cdq    
100086a6:	add    esp,0x8
100086a9:	mov    BYTE PTR [esp+0xc0],0x1
100086b1:	cmp    DWORD PTR [esp+0x30],0x10
100086b6:	mov    DWORD PTR [edi+0x30],eax
100086b9:	mov    DWORD PTR [edi+0x34],edx
100086bc:	jb     0x100086cb
100086be:	mov    eax,DWORD PTR [esp+0x1c]
100086c2:	push   eax
100086c3:	call   0x10015b26
100086c8:	add    esp,0x4
100086cb:	push   0x10083e98
100086d0:	push   0xc
100086d2:	push   0x10083ed4
100086d7:	call   0x10003340
100086dc:	mov    esi,eax
100086de:	mov    ecx,esi
100086e0:	add    esp,0xc
100086e3:	mov    DWORD PTR [esp+0x30],0xf
100086eb:	mov    DWORD PTR [esp+0x2c],ebx
100086ef:	mov    BYTE PTR [esp+0x1c],bl
100086f3:	lea    edx,[ecx+0x1]
100086f6:	mov    al,BYTE PTR [ecx]
100086f8:	add    ecx,0x1
100086fb:	cmp    al,bl
100086fd:	jne    0x100086f6
100086ff:	sub    ecx,edx
10008701:	push   ecx
10008702:	push   esi
10008703:	lea    ecx,[esp+0x20]
10008707:	call   0x10003900
1000870c:	lea    ecx,[esp+0x18]
10008710:	push   ecx
10008711:	mov    BYTE PTR [esp+0xc4],0x8
10008719:	mov    esi,DWORD PTR [edi]
1000871b:	mov    ecx,ebp
1000871d:	call   0x1000a090
10008722:	call   0x1000c5d0
10008727:	add    eax,DWORD PTR [edi+0x88c]
1000872d:	mov    edx,DWORD PTR [esp+0x54]
10008731:	push   eax
10008732:	push   edx
10008733:	call   0x1000ca00
10008738:	cdq    
10008739:	add    esp,0x8
1000873c:	mov    BYTE PTR [esp+0xc0],0x1
10008744:	cmp    DWORD PTR [esp+0x30],0x10
10008749:	mov    DWORD PTR [edi+0x38],eax
1000874c:	mov    DWORD PTR [edi+0x3c],edx
1000874f:	jb     0x1000875e
10008751:	mov    eax,DWORD PTR [esp+0x1c]
10008755:	push   eax
10008756:	call   0x10015b26
1000875b:	add    esp,0x4
1000875e:	push   0x10083ee4
10008763:	push   0x9
10008765:	push   0x10083f1c
1000876a:	call   0x10003340
1000876f:	mov    esi,eax
10008771:	mov    ecx,esi
10008773:	add    esp,0xc
10008776:	mov    DWORD PTR [esp+0x30],0xf
1000877e:	mov    DWORD PTR [esp+0x2c],ebx
10008782:	mov    BYTE PTR [esp+0x1c],bl
10008786:	lea    eax,[ecx+0x1]
10008789:	lea    esp,[esp+0x0]
10008790:	mov    dl,BYTE PTR [ecx]
10008792:	add    ecx,0x1
10008795:	cmp    dl,bl
10008797:	jne    0x10008790
10008799:	sub    ecx,eax
1000879b:	push   ecx
1000879c:	push   esi
1000879d:	lea    ecx,[esp+0x20]
100087a1:	call   0x10003900
100087a6:	lea    ecx,[esp+0x18]
100087aa:	push   ecx
100087ab:	mov    BYTE PTR [esp+0xc4],0x9
100087b3:	mov    esi,DWORD PTR [edi]
100087b5:	mov    ecx,ebp
100087b7:	call   0x1000a090
100087bc:	call   0x1000c5d0
100087c1:	add    eax,DWORD PTR [edi+0x88c]
100087c7:	mov    edx,DWORD PTR [esp+0x44]
100087cb:	push   eax
100087cc:	push   edx
100087cd:	call   0x1000ca00
100087d2:	cdq    
100087d3:	add    esp,0x8
100087d6:	mov    BYTE PTR [esp+0xc0],0x1
100087de:	cmp    DWORD PTR [esp+0x30],0x10
100087e3:	mov    DWORD PTR [edi+0x40],eax
100087e6:	mov    DWORD PTR [edi+0x44],edx
100087e9:	jb     0x100087f8
100087eb:	mov    eax,DWORD PTR [esp+0x1c]
100087ef:	push   eax
100087f0:	call   0x10015b26
100087f5:	add    esp,0x4
100087f8:	push   0x10083f28
100087fd:	push   0x16
100087ff:	push   0x10083f68
10008804:	call   0x10003340
10008809:	mov    esi,eax
1000880b:	mov    ecx,esi
1000880d:	add    esp,0xc
10008810:	mov    DWORD PTR [esp+0x30],0xf
10008818:	mov    DWORD PTR [esp+0x2c],ebx
1000881c:	mov    BYTE PTR [esp+0x1c],bl
10008820:	lea    eax,[ecx+0x1]
10008823:	mov    dl,BYTE PTR [ecx]
10008825:	add    ecx,0x1
10008828:	cmp    dl,bl
1000882a:	jne    0x10008823
1000882c:	sub    ecx,eax
1000882e:	push   ecx
1000882f:	push   esi
10008830:	lea    ecx,[esp+0x20]
10008834:	call   0x10003900
10008839:	lea    ecx,[esp+0x18]
1000883d:	push   ecx
1000883e:	mov    BYTE PTR [esp+0xc4],0xa
10008846:	mov    esi,DWORD PTR [edi]
10008848:	mov    ecx,ebp
1000884a:	call   0x1000a090
1000884f:	call   0x1000c5d0
10008854:	add    eax,DWORD PTR [edi+0x88c]
1000885a:	mov    edx,DWORD PTR [esp+0x38]
1000885e:	push   eax
1000885f:	push   edx
10008860:	call   0x1000ca00
10008865:	cdq    
10008866:	add    esp,0x8
10008869:	mov    BYTE PTR [esp+0xc0],0x1
10008871:	cmp    DWORD PTR [esp+0x30],0x10
10008876:	mov    DWORD PTR [edi+0x48],eax
10008879:	mov    DWORD PTR [edi+0x4c],edx
1000887c:	jb     0x1000888b
1000887e:	mov    eax,DWORD PTR [esp+0x1c]
10008882:	push   eax
10008883:	call   0x10015b26
10008888:	add    esp,0x4
1000888b:	mov    ecx,DWORD PTR [edi+0x8]
1000888e:	or     ecx,DWORD PTR [edi+0xc]
10008891:	je     0x10008924
10008897:	mov    edx,DWORD PTR [edi+0x10]
1000889a:	or     edx,DWORD PTR [edi+0x14]
1000889d:	je     0x10008924
100088a3:	mov    eax,DWORD PTR [edi+0x28]
100088a6:	or     eax,DWORD PTR [edi+0x2c]
100088a9:	je     0x10008924
100088ab:	mov    ecx,DWORD PTR [edi+0x18]
100088ae:	or     ecx,DWORD PTR [edi+0x1c]
100088b1:	je     0x10008924
100088b3:	mov    edx,DWORD PTR [edi+0x20]
100088b6:	or     edx,DWORD PTR [edi+0x24]
100088b9:	je     0x10008924
100088bb:	mov    eax,DWORD PTR [edi+0x30]
100088be:	or     eax,DWORD PTR [edi+0x34]
100088c1:	je     0x10008924
100088c3:	mov    ecx,DWORD PTR [edi+0x38]
100088c6:	or     ecx,DWORD PTR [edi+0x3c]
100088c9:	je     0x10008924
100088cb:	mov    edx,DWORD PTR [edi+0x40]
100088ce:	or     edx,DWORD PTR [edi+0x44]
100088d1:	je     0x10008924
100088d3:	mov    eax,DWORD PTR [edi+0x48]
100088d6:	or     eax,DWORD PTR [edi+0x4c]
100088d9:	je     0x10008924
100088db:	push   edi
100088dc:	call   0x10008ae0
100088e1:	lea    esi,[esp+0x60]
100088e5:	call   0x10007d00
100088ea:	mov    ecx,esi
100088ec:	call   0x1000a210
100088f1:	call   DWORD PTR ds:0x100340a0
100088f7:	lea    ecx,[esp+0x14]
100088fb:	mov    DWORD PTR [esp+0xc0],0xffffffff
10008906:	call   0x1000a230
1000890b:	mov    ecx,DWORD PTR [esp+0xb8]
10008912:	mov    DWORD PTR fs:0x0,ecx
10008919:	pop    ecx
1000891a:	pop    esi
1000891b:	pop    ebp
1000891c:	pop    ebx
1000891d:	add    esp,0xb4
10008923:	ret    
10008924:	push   ebx
10008925:	push   0x100826fa
1000892a:	lea    ecx,[esp+0x7c]
1000892e:	mov    DWORD PTR [esp+0x94],0xf
10008939:	mov    DWORD PTR [esp+0x90],ebx
10008940:	mov    BYTE PTR [esp+0x80],bl
10008947:	call   0x10003900
1000894c:	lea    ecx,[esp+0x74]
10008950:	push   ecx
10008951:	lea    edx,[esp+0x94]
10008958:	push   edx
10008959:	mov    BYTE PTR [esp+0xc8],0xb
10008961:	call   0x100014d0
10008966:	push   0x10085c78
1000896b:	lea    eax,[esp+0x94]
10008972:	push   eax
10008973:	call   0x1001621e
10008978:	int3   
10008979:	int3   
1000897a:	int3   
1000897b:	int3   
1000897c:	int3   
1000897d:	int3   
1000897e:	int3   
1000897f:	int3   
10008980:	push   0xffffffff
10008982:	push   0x1002b1a8
10008987:	mov    eax,fs:0x0
1000898d:	push   eax
1000898e:	sub    esp,0x1c
10008991:	push   ebx
10008992:	push   ebp
10008993:	push   edi
10008994:	mov    eax,ds:0x100951fc
10008999:	xor    eax,esp
1000899b:	push   eax
1000899c:	lea    eax,[esp+0x2c]
100089a0:	mov    fs:0x0,eax
100089a6:	mov    eax,DWORD PTR [esi]
100089a8:	mov    ebx,DWORD PTR ds:0x10034110
100089ae:	push   0x4
100089b0:	push   0x3000
100089b5:	push   0x880
100089ba:	push   0x0
100089bc:	push   eax
100089bd:	call   ebx
100089bf:	lea    edi,[esi+0x894]
100089c5:	mov    ecx,edi
100089c7:	mov    DWORD PTR [esi+0x888],eax
100089cd:	call   0x1000a090
100089d2:	mov    eax,DWORD PTR [eax]
100089d4:	mov    ebp,DWORD PTR [eax+0x6]
100089d7:	mov    eax,DWORD PTR [esi]
100089d9:	push   0x40
100089db:	push   0x3000
100089e0:	push   ebp
100089e1:	push   0x0
100089e3:	push   eax
100089e4:	call   ebx
100089e6:	push   eax
100089e7:	mov    ecx,edi
100089e9:	mov    DWORD PTR [esi+0x88c],eax
100089ef:	call   0x1000a090
100089f4:	call   0x1000c6c0
100089f9:	mov    ecx,edi
100089fb:	call   0x1000a090
10008a00:	mov    eax,DWORD PTR [eax]
10008a02:	mov    ecx,DWORD PTR [esi]
10008a04:	push   0x0
10008a06:	push   ebp
10008a07:	mov    ebp,DWORD PTR ds:0x10034128
10008a0d:	add    eax,0x12
10008a10:	push   eax
10008a11:	mov    eax,DWORD PTR [esi+0x88c]
10008a17:	push   eax
10008a18:	push   ecx
10008a19:	call   ebp
10008a1b:	test   eax,eax
10008a1d:	jne    0x10008a25
10008a1f:	call   DWORD PTR ds:0x1003407c
10008a25:	push   0x10083f80
10008a2a:	push   0xe
10008a2c:	push   0x10083fc0
10008a31:	call   0x10003340
10008a36:	mov    ecx,eax
10008a38:	add    esp,0xc
10008a3b:	mov    DWORD PTR [esp+0x28],0xf
10008a43:	mov    DWORD PTR [esp+0x24],0x0
10008a4b:	mov    BYTE PTR [esp+0x14],0x0
10008a50:	lea    ebx,[ecx+0x1]
10008a53:	mov    dl,BYTE PTR [ecx]
10008a55:	add    ecx,0x1
10008a58:	test   dl,dl
10008a5a:	jne    0x10008a53
10008a5c:	sub    ecx,ebx
10008a5e:	push   ecx
10008a5f:	push   eax
10008a60:	lea    ecx,[esp+0x18]
10008a64:	call   0x10003900
10008a69:	lea    ecx,[esp+0x10]
10008a6d:	push   ecx
10008a6e:	xor    ebx,ebx
10008a70:	mov    ecx,edi
10008a72:	mov    DWORD PTR [esp+0x38],ebx
10008a76:	call   0x1000a090
10008a7b:	call   0x1000c5d0
10008a80:	cmp    DWORD PTR [esp+0x28],0x10
10008a85:	mov    edi,eax
10008a87:	jb     0x10008a96
10008a89:	mov    edx,DWORD PTR [esp+0x14]
10008a8d:	push   edx
10008a8e:	call   0x10015b26
10008a93:	add    esp,0x4
10008a96:	mov    eax,DWORD PTR [esi]
10008a98:	push   ebx
10008a99:	push   0x4
10008a9b:	lea    ecx,[esi+0x888]
10008aa1:	push   ecx
10008aa2:	mov    ecx,DWORD PTR [esi+0x88c]
10008aa8:	add    ecx,edi
10008aaa:	push   ecx
10008aab:	push   eax
10008aac:	mov    DWORD PTR [esp+0x3c],0xf
10008ab4:	mov    DWORD PTR [esp+0x38],ebx
10008ab8:	mov    BYTE PTR [esp+0x28],0x0
10008abd:	call   ebp
10008abf:	test   eax,eax
10008ac1:	jne    0x10008ac9
10008ac3:	call   DWORD PTR ds:0x1003407c
10008ac9:	mov    ecx,DWORD PTR [esp+0x2c]
10008acd:	mov    DWORD PTR fs:0x0,ecx
10008ad4:	pop    ecx
10008ad5:	pop    edi
10008ad6:	pop    ebp
10008ad7:	pop    ebx
10008ad8:	add    esp,0x28
10008adb:	ret    
10008adc:	int3   
10008add:	int3   
10008ade:	int3   
10008adf:	int3   
10008ae0:	push   0xffffffff
10008ae2:	push   0x1002acc8
10008ae7:	mov    eax,fs:0x0
10008aed:	push   eax
10008aee:	sub    esp,0x48
10008af1:	mov    eax,ds:0x100951fc
10008af6:	xor    eax,esp
10008af8:	push   eax
10008af9:	lea    eax,[esp+0x4c]
10008afd:	mov    fs:0x0,eax
10008b03:	mov    eax,DWORD PTR [esp+0x5c]
10008b07:	mov    ecx,DWORD PTR [eax]
10008b09:	push   0x0
10008b0b:	push   0x880
10008b10:	lea    edx,[eax+0x8]
10008b13:	mov    eax,DWORD PTR [eax+0x888]
10008b19:	push   edx
10008b1a:	push   eax
10008b1b:	push   ecx
10008b1c:	call   DWORD PTR ds:0x10034128
10008b22:	test   eax,eax
10008b24:	jne    0x10008b6b
10008b26:	push   eax
10008b27:	push   0x100826fa
10008b2c:	lea    ecx,[esp+0xc]
10008b30:	mov    DWORD PTR [esp+0x24],0xf
10008b38:	mov    DWORD PTR [esp+0x20],eax
10008b3c:	mov    BYTE PTR [esp+0x10],al
10008b40:	call   0x10003900
10008b45:	lea    ecx,[esp+0x4]
10008b49:	push   ecx
10008b4a:	lea    edx,[esp+0x24]
10008b4e:	push   edx
10008b4f:	mov    DWORD PTR [esp+0x5c],0x0
10008b57:	call   0x100014d0
10008b5c:	push   0x10085c78
10008b61:	lea    eax,[esp+0x24]
10008b65:	push   eax
10008b66:	call   0x1001621e
10008b6b:	mov    ecx,DWORD PTR [esp+0x4c]
10008b6f:	mov    DWORD PTR fs:0x0,ecx
10008b76:	pop    ecx
10008b77:	add    esp,0x54
10008b7a:	ret    0x4
10008b7d:	int3   
10008b7e:	int3   
10008b7f:	int3   
10008b80:	push   ebp
10008b81:	mov    ebp,esp
10008b83:	push   0xfffffffe
10008b85:	push   0x10085df8
10008b8a:	push   0x10017df0
10008b8f:	mov    eax,fs:0x0
10008b95:	push   eax
10008b96:	sub    esp,0x28
10008b99:	push   ebx
10008b9a:	push   esi
10008b9b:	push   edi
10008b9c:	mov    eax,ds:0x100951fc
10008ba1:	xor    DWORD PTR [ebp-0x8],eax
10008ba4:	xor    eax,ebp
10008ba6:	push   eax
10008ba7:	lea    eax,[ebp-0x10]
10008baa:	mov    fs:0x0,eax
10008bb0:	mov    esi,DWORD PTR [ebp+0x8]
10008bb3:	xor    ebx,ebx
10008bb5:	mov    DWORD PTR [ebp-0x2c],ebx
10008bb8:	mov    DWORD PTR [ebp-0x30],ebx
10008bbb:	mov    DWORD PTR [ebp-0x20],ebx
10008bbe:	mov    DWORD PTR [ebp-0x34],ebx
10008bc1:	mov    DWORD PTR [ebp-0x38],ebx
10008bc4:	mov    DWORD PTR [ebp-0x24],ebx
10008bc7:	mov    BYTE PTR [ebp-0x19],bl
10008bca:	mov    DWORD PTR [ebp-0x4],ebx
10008bcd:	push   0x4
10008bcf:	push   0x3000
10008bd4:	push   0x1020
10008bd9:	push   ebx
10008bda:	push   esi
10008bdb:	call   DWORD PTR ds:0x10034110
10008be1:	mov    edi,eax
10008be3:	mov    DWORD PTR [ebp-0x2c],edi
10008be6:	test   edi,edi
10008be8:	jne    0x10008bf5
10008bea:	call   DWORD PTR ds:0x1003407c
10008bf0:	jmp    0x10008cbd
10008bf5:	lea    eax,[ebp-0x24]
10008bf8:	push   eax
10008bf9:	push   0x1020
10008bfe:	mov    ecx,DWORD PTR [ebp+0x14]
10008c01:	push   ecx
10008c02:	push   edi
10008c03:	push   esi
10008c04:	call   DWORD PTR ds:0x10034128
10008c0a:	test   eax,eax
10008c0c:	je     0x10008cbd
10008c12:	push   0x40
10008c14:	push   0x3000
10008c19:	mov    edx,DWORD PTR [ebp+0x10]
10008c1c:	push   edx
10008c1d:	push   0x0
10008c1f:	push   esi
10008c20:	call   DWORD PTR ds:0x10034110
10008c26:	mov    ebx,eax
10008c28:	mov    DWORD PTR [ebp-0x30],ebx
10008c2b:	test   ebx,ebx
10008c2d:	je     0x10008cbd
10008c33:	lea    eax,[ebp-0x24]
10008c36:	push   eax
10008c37:	mov    ecx,DWORD PTR [ebp+0x10]
10008c3a:	push   ecx
10008c3b:	mov    edx,DWORD PTR [ebp+0xc]
10008c3e:	push   edx
10008c3f:	push   ebx
10008c40:	push   esi
10008c41:	call   DWORD PTR ds:0x10034128
10008c47:	test   eax,eax
10008c49:	je     0x10008cbd
10008c4b:	mov    DWORD PTR [ebp-0x28],0x0
10008c52:	lea    eax,[ebp-0x28]
10008c55:	push   eax
10008c56:	push   0xf01ff
10008c5b:	push   esi
10008c5c:	call   DWORD PTR ds:0x10034014
10008c62:	test   eax,eax
10008c64:	je     0x10008cbd
10008c66:	mov    ecx,DWORD PTR [ebp-0x28]
10008c69:	push   ecx
10008c6a:	call   DWORD PTR ds:0x10034004
10008c70:	test   eax,eax
10008c72:	je     0x10008cbd
10008c74:	lea    edx,[ebp-0x34]
10008c77:	push   edx
10008c78:	push   0x0
10008c7a:	push   edi
10008c7b:	push   ebx
10008c7c:	push   0x0
10008c7e:	push   0x0
10008c80:	push   esi
10008c81:	call   DWORD PTR ds:0x10034144
10008c87:	mov    DWORD PTR [ebp-0x20],eax
10008c8a:	test   eax,eax
10008c8c:	je     0x10008cbd
10008c8e:	call   DWORD PTR ds:0x10034000
10008c94:	push   0xffffffff
10008c96:	mov    eax,DWORD PTR [ebp-0x20]
10008c99:	push   eax
10008c9a:	call   DWORD PTR ds:0x1003404c
10008ca0:	lea    ecx,[ebp-0x24]
10008ca3:	push   ecx
10008ca4:	push   0x1020
10008ca9:	mov    edx,DWORD PTR [ebp+0x14]
10008cac:	push   edx
10008cad:	push   edi
10008cae:	push   esi
10008caf:	call   DWORD PTR ds:0x10034118
10008cb5:	test   eax,eax
10008cb7:	je     0x10008cbd
10008cb9:	mov    BYTE PTR [ebp-0x19],0x1
10008cbd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10008cc4:	call   0x10008ce7
10008cc9:	mov    al,BYTE PTR [ebp-0x19]
10008ccc:	mov    ecx,DWORD PTR [ebp-0x10]
10008ccf:	mov    DWORD PTR fs:0x0,ecx
10008cd6:	pop    ecx
10008cd7:	pop    edi
10008cd8:	pop    esi
10008cd9:	pop    ebx
10008cda:	mov    esp,ebp
10008cdc:	pop    ebp
10008cdd:	ret    
10008cde:	mov    esi,DWORD PTR [ebp+0x8]
10008ce1:	mov    edi,DWORD PTR [ebp-0x2c]
10008ce4:	mov    ebx,DWORD PTR [ebp-0x30]
10008ce7:	test   edi,edi
10008ce9:	je     0x10008cfa
10008ceb:	push   0x8000
10008cf0:	push   0x0
10008cf2:	push   edi
10008cf3:	push   esi
10008cf4:	call   DWORD PTR ds:0x10034124
10008cfa:	test   ebx,ebx
10008cfc:	je     0x10008d0d
10008cfe:	push   0x8000
10008d03:	push   0x0
10008d05:	push   ebx
10008d06:	push   esi
10008d07:	call   DWORD PTR ds:0x10034124
10008d0d:	mov    eax,DWORD PTR [ebp-0x20]
10008d10:	test   eax,eax
10008d12:	je     0x10008d29
10008d14:	lea    ecx,[ebp-0x38]
10008d17:	push   ecx
10008d18:	push   eax
10008d19:	call   DWORD PTR ds:0x1003410c
10008d1f:	mov    edx,DWORD PTR [ebp-0x20]
10008d22:	push   edx
10008d23:	call   DWORD PTR ds:0x10034058
10008d29:	ret    
10008d2a:	int3   
10008d2b:	int3   
10008d2c:	int3   
10008d2d:	int3   
10008d2e:	int3   
10008d2f:	int3   
10008d30:	push   ebp
10008d31:	mov    ebp,esp
10008d33:	push   0xffffffff
10008d35:	push   0x1002b171
10008d3a:	mov    eax,fs:0x0
10008d40:	push   eax
10008d41:	push   ecx
10008d42:	mov    eax,0x1060
10008d47:	call   0x10016550
10008d4c:	mov    eax,ds:0x100951fc
10008d51:	xor    eax,ebp
10008d53:	mov    DWORD PTR [ebp-0x14],eax
10008d56:	push   ebx
10008d57:	push   esi
10008d58:	push   edi
10008d59:	push   eax
10008d5a:	lea    eax,[ebp-0xc]
10008d5d:	mov    fs:0x0,eax
10008d63:	mov    DWORD PTR [ebp-0x10],esp
10008d66:	mov    ebx,DWORD PTR [ebp+0xc]
10008d69:	mov    eax,DWORD PTR [ebp+0x8]
10008d6c:	push   0x1018
10008d71:	xor    edi,edi
10008d73:	lea    edx,[ebp-0x1030]
10008d79:	push   edi
10008d7a:	push   edx
10008d7b:	mov    DWORD PTR [ebp-0x104c],eax
10008d81:	mov    DWORD PTR [ebp-0x1048],ecx
10008d87:	mov    BYTE PTR [ebp-0x1038],0x0
10008d8e:	call   0x10016580
10008d93:	mov    eax,ebx
10008d95:	add    esp,0xc
10008d98:	lea    edx,[eax+0x2]
10008d9b:	jmp    0x10008da0
10008d9d:	lea    ecx,[ecx+0x0]
10008da0:	mov    cx,WORD PTR [eax]
10008da3:	add    eax,0x2
10008da6:	cmp    cx,di
10008da9:	jne    0x10008da0
10008dab:	sub    eax,edx
10008dad:	sar    eax,1
10008daf:	cmp    eax,0x400
10008db4:	ja     0x10008f5f
10008dba:	push   edi
10008dbb:	lea    ecx,[ebp-0x103c]
10008dc1:	call   0x1000a020
10008dc6:	push   0x10083fd0
10008dcb:	push   0xc
10008dcd:	mov    DWORD PTR [ebp-0x4],edi
10008dd0:	push   0x10084010
10008dd5:	mov    BYTE PTR [ebp-0x4],0x1
10008dd9:	call   0x10003540
10008dde:	add    esp,0xc
10008de1:	push   ecx
10008de2:	mov    ecx,esp
10008de4:	mov    DWORD PTR [ebp-0x1050],esp
10008dea:	push   eax
10008deb:	call   0x10002d70
10008df0:	call   0x10007b50
10008df5:	add    esp,0x4
10008df8:	push   eax
10008df9:	lea    ecx,[ebp-0x103c]
10008dff:	call   0x1000a280
10008e04:	mov    DWORD PTR [ebp-0x4],edi
10008e07:	jmp    0x10008e1b
10008e09:	mov    DWORD PTR [ebp-0x4],0x0
10008e10:	mov    eax,0x10008e16
10008e15:	ret    
10008e16:	mov    ebx,DWORD PTR [ebp+0xc]
10008e19:	xor    edi,edi
10008e1b:	lea    ecx,[ebp-0x103c]
10008e21:	call   0x1000a270
10008e26:	test   eax,eax
10008e28:	je     0x10008f4d
10008e2e:	push   edi
10008e2f:	lea    esi,[ebp-0x106c]
10008e35:	call   0x10007a00
10008e3a:	add    esp,0x4
10008e3d:	lea    ecx,[ebp-0x1044]
10008e43:	push   ecx
10008e44:	mov    ecx,eax
10008e46:	mov    BYTE PTR [ebp-0x4],0x3
10008e4a:	call   0x1000c540
10008e4f:	mov    BYTE PTR [ebp-0x4],0x5
10008e53:	cmp    DWORD PTR [ebp-0x1054],0x10
10008e5a:	jb     0x10008e6b
10008e5c:	mov    edx,DWORD PTR [ebp-0x1068]
10008e62:	push   edx
10008e63:	call   0x10015b26
10008e68:	add    esp,0x4
10008e6b:	lea    ecx,[ebp-0x103c]
10008e71:	mov    DWORD PTR [ebp-0x1054],0xf
10008e7b:	mov    DWORD PTR [ebp-0x1058],edi
10008e81:	mov    BYTE PTR [ebp-0x1068],0x0
10008e88:	mov    BYTE PTR [ebp-0x1038],0x0
10008e8f:	call   0x1000a090
10008e94:	push   0x1008402c
10008e99:	mov    esi,eax
10008e9b:	mov    edi,DWORD PTR [esi]
10008e9d:	push   0x17
10008e9f:	push   0x1008406c
10008ea4:	call   0x10003340
10008ea9:	add    esp,0xc
10008eac:	push   eax
10008ead:	mov    eax,DWORD PTR [edi]
10008eaf:	mov    ecx,esi
10008eb1:	call   eax
10008eb3:	lea    ecx,[ebp-0x103c]
10008eb9:	mov    DWORD PTR [ebp-0x1030],eax
10008ebf:	mov    DWORD PTR [ebp-0x102c],edx
10008ec5:	call   0x1000a090
10008eca:	push   0x10084084
10008ecf:	mov    esi,eax
10008ed1:	mov    edi,DWORD PTR [esi]
10008ed3:	push   0x17
10008ed5:	push   0x100840c0
10008eda:	call   0x10003340
10008edf:	mov    edx,DWORD PTR [edi]
10008ee1:	add    esp,0xc
10008ee4:	push   eax
10008ee5:	mov    ecx,esi
10008ee7:	call   edx
10008ee9:	mov    DWORD PTR [ebp-0x1024],edx
10008eef:	lea    edx,[ebp-0x1020]
10008ef5:	mov    DWORD PTR [ebp-0x1028],eax
10008efb:	mov    eax,ebx
10008efd:	sub    edx,ebx
10008eff:	nop
10008f00:	movzx  ecx,WORD PTR [eax]
10008f03:	mov    WORD PTR [edx+eax*1],cx
10008f07:	add    eax,0x2
10008f0a:	test   cx,cx
10008f0d:	jne    0x10008f00
10008f0f:	mov    eax,DWORD PTR [ebp-0x1044]
10008f15:	lea    edx,[ebp-0x1038]
10008f1b:	push   edx
10008f1c:	mov    DWORD PTR [ebp-0x20],0x40
10008f23:	mov    ecx,DWORD PTR [eax+0x6]
10008f26:	push   ecx
10008f27:	add    eax,0x12
10008f2a:	push   eax
10008f2b:	mov    eax,DWORD PTR [ebp-0x104c]
10008f31:	push   eax
10008f32:	call   0x10008b80
10008f37:	add    esp,0x10
10008f3a:	test   al,al
10008f3c:	jne    0x10008f63
10008f3e:	mov    ecx,DWORD PTR [ebp-0x1044]
10008f44:	push   ecx
10008f45:	call   0x10015b26
10008f4a:	add    esp,0x4
10008f4d:	lea    ecx,[ebp-0x103c]
10008f53:	mov    DWORD PTR [ebp-0x4],0xffffffff
10008f5a:	call   0x1000a230
10008f5f:	xor    eax,eax
10008f61:	jmp    0x10008fb2
10008f63:	mov    esi,DWORD PTR [ebp-0x20]
10008f66:	cmp    esi,0x40
10008f69:	jae    0x10008f8f
10008f6b:	mov    edx,DWORD PTR [ebp-0x1048]
10008f71:	lea    eax,[ebp-0x820]
10008f77:	mov    ecx,eax
10008f79:	sub    edx,ecx
10008f7b:	jmp    0x10008f80
10008f7d:	lea    ecx,[ecx+0x0]
10008f80:	movzx  ecx,WORD PTR [eax]
10008f83:	mov    WORD PTR [edx+eax*1],cx
10008f87:	add    eax,0x2
10008f8a:	test   cx,cx
10008f8d:	jne    0x10008f80
10008f8f:	mov    edx,DWORD PTR [ebp-0x1044]
10008f95:	push   edx
10008f96:	call   0x10015b26
10008f9b:	add    esp,0x4
10008f9e:	lea    ecx,[ebp-0x103c]
10008fa4:	mov    DWORD PTR [ebp-0x4],0xffffffff
10008fab:	call   0x1000a230
10008fb0:	mov    eax,esi
10008fb2:	mov    ecx,DWORD PTR [ebp-0xc]
10008fb5:	mov    DWORD PTR fs:0x0,ecx
10008fbc:	pop    ecx
10008fbd:	pop    edi
10008fbe:	pop    esi
10008fbf:	pop    ebx
10008fc0:	mov    ecx,DWORD PTR [ebp-0x14]
10008fc3:	xor    ecx,ebp
10008fc5:	call   0x10015b2b
10008fca:	mov    esp,ebp
10008fcc:	pop    ebp
10008fcd:	ret    
10008fce:	int3   
10008fcf:	int3   
10008fd0:	mov    ecx,DWORD PTR [eax]
10008fd2:	push   ecx
10008fd3:	call   0x10015b26
10008fd8:	pop    ecx
10008fd9:	ret    
10008fda:	int3   
10008fdb:	int3   
10008fdc:	int3   
10008fdd:	int3   
10008fde:	int3   
10008fdf:	int3   
10008fe0:	push   ebp
10008fe1:	mov    ebp,esp
10008fe3:	push   0xffffffff
10008fe5:	push   0x1002b121
10008fea:	mov    eax,fs:0x0
10008ff0:	push   eax
10008ff1:	push   ecx
10008ff2:	mov    eax,0x105c
10008ff7:	call   0x10016550
10008ffc:	mov    eax,ds:0x100951fc
10009001:	xor    eax,ebp
10009003:	mov    DWORD PTR [ebp-0x18],eax
10009006:	push   ebx
10009007:	push   esi
10009008:	push   edi
10009009:	push   eax
1000900a:	lea    eax,[ebp-0xc]
1000900d:	mov    fs:0x0,eax
10009013:	mov    DWORD PTR [ebp-0x10],esp
10009016:	mov    ebx,DWORD PTR [ebp+0xc]
10009019:	mov    eax,DWORD PTR [ebp+0x8]
1000901c:	push   0x1018
10009021:	xor    edi,edi
10009023:	lea    ecx,[ebp-0x1034]
10009029:	push   edi
1000902a:	push   ecx
1000902b:	mov    DWORD PTR [ebp-0x1044],eax
10009031:	mov    BYTE PTR [ebp-0x103c],0x0
10009038:	call   0x10016580
1000903d:	mov    eax,ebx
1000903f:	add    esp,0xc
10009042:	lea    edx,[eax+0x2]
10009045:	mov    cx,WORD PTR [eax]
10009048:	add    eax,0x2
1000904b:	cmp    cx,di
1000904e:	jne    0x10009045
10009050:	sub    eax,edx
10009052:	sar    eax,1
10009054:	cmp    eax,0x400
10009059:	ja     0x10009238
1000905f:	mov    eax,DWORD PTR [ebp+0x10]
10009062:	lea    edx,[eax+0x2]
10009065:	mov    cx,WORD PTR [eax]
10009068:	add    eax,0x2
1000906b:	cmp    cx,di
1000906e:	jne    0x10009065
10009070:	sub    eax,edx
10009072:	sar    eax,1
10009074:	cmp    eax,0x400
10009079:	ja     0x10009238
1000907f:	push   edi
10009080:	lea    ecx,[ebp-0x1040]
10009086:	call   0x1000a020
1000908b:	push   0x100840d8
10009090:	push   0xc
10009092:	mov    DWORD PTR [ebp-0x4],edi
10009095:	push   0x10084010
1000909a:	mov    BYTE PTR [ebp-0x4],0x1
1000909e:	call   0x10003540
100090a3:	add    esp,0xc
100090a6:	push   ecx
100090a7:	mov    ecx,esp
100090a9:	mov    DWORD PTR [ebp-0x1050],esp
100090af:	push   eax
100090b0:	call   0x10002d70
100090b5:	call   0x10007b50
100090ba:	add    esp,0x4
100090bd:	push   eax
100090be:	lea    ecx,[ebp-0x1040]
100090c4:	call   0x1000a280
100090c9:	mov    DWORD PTR [ebp-0x4],edi
100090cc:	jmp    0x100090e0
100090ce:	mov    DWORD PTR [ebp-0x4],0x0
100090d5:	mov    eax,0x100090db
100090da:	ret    
100090db:	mov    ebx,DWORD PTR [ebp+0xc]
100090de:	xor    edi,edi
100090e0:	lea    ecx,[ebp-0x1040]
100090e6:	call   0x1000a270
100090eb:	test   eax,eax
100090ed:	je     0x10009226
100090f3:	push   edi
100090f4:	lea    esi,[ebp-0x106c]
100090fa:	call   0x10007a00
100090ff:	add    esp,0x4
10009102:	lea    edx,[ebp-0x104c]
10009108:	push   edx
10009109:	mov    ecx,eax
1000910b:	mov    BYTE PTR [ebp-0x4],0x3
1000910f:	call   0x1000c540
10009114:	mov    BYTE PTR [ebp-0x4],0x5
10009118:	cmp    DWORD PTR [ebp-0x1054],0x10
1000911f:	jb     0x10009130
10009121:	mov    eax,DWORD PTR [ebp-0x1068]
10009127:	push   eax
10009128:	call   0x10015b26
1000912d:	add    esp,0x4
10009130:	lea    ecx,[ebp-0x1040]
10009136:	mov    DWORD PTR [ebp-0x1054],0xf
10009140:	mov    DWORD PTR [ebp-0x1058],edi
10009146:	mov    BYTE PTR [ebp-0x1068],0x0
1000914d:	mov    BYTE PTR [ebp-0x103c],0x1
10009154:	call   0x1000a090
10009159:	push   0x10084114
1000915e:	mov    esi,eax
10009160:	mov    edi,DWORD PTR [esi]
10009162:	push   0x17
10009164:	push   0x1008406c
10009169:	call   0x10003340
1000916e:	mov    edx,DWORD PTR [edi]
10009170:	add    esp,0xc
10009173:	push   eax
10009174:	mov    ecx,esi
10009176:	call   edx
10009178:	lea    ecx,[ebp-0x1040]
1000917e:	mov    DWORD PTR [ebp-0x1034],eax
10009184:	mov    DWORD PTR [ebp-0x1030],edx
1000918a:	call   0x1000a090
1000918f:	push   0x10084140
10009194:	mov    esi,eax
10009196:	mov    edi,DWORD PTR [esi]
10009198:	push   0x17
1000919a:	push   0x100840c0
1000919f:	call   0x10003340
100091a4:	add    esp,0xc
100091a7:	push   eax
100091a8:	mov    eax,DWORD PTR [edi]
100091aa:	mov    ecx,esi
100091ac:	call   eax
100091ae:	mov    DWORD PTR [ebp-0x1028],edx
100091b4:	lea    edx,[ebp-0x1024]
100091ba:	mov    DWORD PTR [ebp-0x102c],eax
100091c0:	mov    eax,ebx
100091c2:	sub    edx,ebx
100091c4:	movzx  ecx,WORD PTR [eax]
100091c7:	mov    WORD PTR [edx+eax*1],cx
100091cb:	add    eax,0x2
100091ce:	test   cx,cx
100091d1:	jne    0x100091c4
100091d3:	mov    eax,DWORD PTR [ebp+0x10]
100091d6:	lea    edx,[ebp-0x824]
100091dc:	sub    edx,eax
100091de:	mov    edi,edi
100091e0:	movzx  ecx,WORD PTR [eax]
100091e3:	mov    WORD PTR [edx+eax*1],cx
100091e7:	add    eax,0x2
100091ea:	test   cx,cx
100091ed:	jne    0x100091e0
100091ef:	mov    eax,DWORD PTR [ebp-0x104c]
100091f5:	mov    ecx,DWORD PTR [eax+0x6]
100091f8:	lea    edx,[ebp-0x103c]
100091fe:	push   edx
100091ff:	push   ecx
10009200:	add    eax,0x12
10009203:	push   eax
10009204:	mov    eax,DWORD PTR [ebp-0x1044]
1000920a:	push   eax
1000920b:	call   0x10008b80
10009210:	add    esp,0x10
10009213:	test   al,al
10009215:	jne    0x1000923c
10009217:	mov    ecx,DWORD PTR [ebp-0x104c]
1000921d:	push   ecx
1000921e:	call   0x10015b26
10009223:	add    esp,0x4
10009226:	lea    ecx,[ebp-0x1040]
1000922c:	mov    DWORD PTR [ebp-0x4],0xffffffff
10009233:	call   0x1000a230
10009238:	xor    eax,eax
1000923a:	jmp    0x10009262
1000923c:	mov    edx,DWORD PTR [ebp-0x104c]
10009242:	push   edx
10009243:	call   0x10015b26
10009248:	add    esp,0x4
1000924b:	lea    ecx,[ebp-0x1040]
10009251:	mov    DWORD PTR [ebp-0x4],0xffffffff
10009258:	call   0x1000a230
1000925d:	mov    eax,0x1
10009262:	mov    ecx,DWORD PTR [ebp-0xc]
10009265:	mov    DWORD PTR fs:0x0,ecx
1000926c:	pop    ecx
1000926d:	pop    edi
1000926e:	pop    esi
1000926f:	pop    ebx
10009270:	mov    ecx,DWORD PTR [ebp-0x18]
10009273:	xor    ecx,ebp
10009275:	call   0x10015b2b
1000927a:	mov    esp,ebp
1000927c:	pop    ebp
1000927d:	ret    
1000927e:	int3   
1000927f:	int3   
10009280:	push   0xffffffff
10009282:	push   0x1002b51b
10009287:	mov    eax,fs:0x0
1000928d:	push   eax
1000928e:	sub    esp,0x88
10009294:	mov    eax,ds:0x100951fc
10009299:	xor    eax,esp
1000929b:	mov    DWORD PTR [esp+0x84],eax
100092a2:	push   edi
100092a3:	mov    eax,ds:0x100951fc
100092a8:	xor    eax,esp
100092aa:	push   eax
100092ab:	lea    eax,[esp+0x90]
100092b2:	mov    fs:0x0,eax
100092b8:	mov    BYTE PTR [esi+0x890],0x0
100092bf:	mov    eax,ds:0x10096c80
100092c4:	mov    edx,DWORD PTR [eax+0xc]
100092c7:	mov    ecx,0x10096c80
100092cc:	call   edx
100092ce:	add    eax,0x10
100092d1:	mov    DWORD PTR [esp+0x8],eax
100092d5:	mov    DWORD PTR [esp+0x98],0x0
100092e0:	mov    eax,DWORD PTR [esi+0x4]
100092e3:	push   eax
100092e4:	push   0x10084180
100092e9:	push   0x10
100092eb:	push   0x100841bc
100092f0:	call   0x10003540
100092f5:	add    esp,0xc
100092f8:	push   eax
100092f9:	lea    ecx,[esp+0x10]
100092fd:	push   ecx
100092fe:	call   0x1000ab30
10009303:	mov    edx,DWORD PTR [esp+0x14]
10009307:	mov    eax,DWORD PTR [esi]
10009309:	add    esp,0xc
1000930c:	push   edx
1000930d:	push   eax
1000930e:	lea    ecx,[esp+0x14]
10009312:	call   0x10008d30
10009317:	add    esp,0x8
1000931a:	test   eax,eax
1000931c:	je     0x10009378
1000931e:	lea    eax,[esp+0xc]
10009322:	push   eax
10009323:	call   0x1001653f
10009328:	mov    edi,eax
1000932a:	add    esp,0x4
1000932d:	test   edi,edi
1000932f:	je     0x10009378
10009331:	mov    eax,DWORD PTR [esi]
10009333:	push   0x0
10009335:	push   0x880
1000933a:	lea    ecx,[esi+0x8]
1000933d:	push   ecx
1000933e:	push   edi
1000933f:	push   eax
10009340:	call   DWORD PTR ds:0x10034118
10009346:	test   eax,eax
10009348:	jne    0x1000936b
1000934a:	mov    DWORD PTR [esp+0x98],0xffffffff
10009355:	mov    eax,DWORD PTR [esp+0x8]
10009359:	add    eax,0xfffffff0
1000935c:	lea    edx,[eax+0xc]
1000935f:	or     ecx,0xffffffff
10009362:	lock xadd DWORD PTR [edx],ecx
10009366:	dec    ecx
10009367:	test   ecx,ecx
10009369:	jmp    0x10009397
1000936b:	mov    DWORD PTR [esi+0x888],edi
10009371:	mov    BYTE PTR [esi+0x890],0x1
10009378:	mov    DWORD PTR [esp+0x98],0xffffffff
10009383:	mov    eax,DWORD PTR [esp+0x8]
10009387:	add    eax,0xfffffff0
1000938a:	or     edx,0xffffffff
1000938d:	lea    ecx,[eax+0xc]
10009390:	lock xadd DWORD PTR [ecx],edx
10009394:	dec    edx
10009395:	test   edx,edx
10009397:	jg     0x100093a3
10009399:	mov    ecx,DWORD PTR [eax]
1000939b:	mov    edx,DWORD PTR [ecx]
1000939d:	push   eax
1000939e:	mov    eax,DWORD PTR [edx+0x4]
100093a1:	call   eax
100093a3:	mov    ecx,DWORD PTR [esp+0x90]
100093aa:	mov    DWORD PTR fs:0x0,ecx
100093b1:	pop    ecx
100093b2:	pop    edi
100093b3:	mov    ecx,DWORD PTR [esp+0x84]
100093ba:	xor    ecx,esp
100093bc:	call   0x10015b2b
100093c1:	add    esp,0x94
100093c7:	ret    
100093c8:	int3   
100093c9:	int3   
100093ca:	int3   
100093cb:	int3   
100093cc:	int3   
100093cd:	int3   
100093ce:	int3   
100093cf:	int3   
100093d0:	push   ebp
100093d1:	mov    ebp,esp
100093d3:	and    esp,0xfffffff8
100093d6:	push   0xffffffff
100093d8:	push   0x1002b6b1
100093dd:	mov    eax,fs:0x0
100093e3:	push   eax
100093e4:	sub    esp,0x874
100093ea:	mov    eax,ds:0x100951fc
100093ef:	xor    eax,esp
100093f1:	mov    DWORD PTR [esp+0x86c],eax
100093f8:	push   esi
100093f9:	push   edi
100093fa:	mov    eax,ds:0x100951fc
100093ff:	xor    eax,esp
10009401:	push   eax
10009402:	lea    eax,[esp+0x880]
10009409:	mov    fs:0x0,eax
1000940f:	mov    eax,DWORD PTR [ebp+0x8]
10009412:	mov    edi,ecx
10009414:	mov    esi,edi
10009416:	mov    DWORD PTR [esp+0x14],eax
1000941a:	call   0x10009280
1000941f:	cmp    BYTE PTR [edi+0x890],0x0
10009426:	je     0x1000951d
1000942c:	push   ecx
1000942d:	lea    esi,[edi+0x88]
10009433:	mov    ecx,esp
10009435:	mov    DWORD PTR [esp+0x1c],esp
10009439:	push   esi
1000943a:	call   0x10002d70
1000943f:	mov    ecx,DWORD PTR [edi+0x4]
10009442:	push   ecx
10009443:	call   0x10002970
10009448:	add    esp,0x8
1000944b:	test   al,al
1000944d:	je     0x10009496
1000944f:	xor    esi,esi
10009451:	push   esi
10009452:	push   0x100826fa
10009457:	lea    ecx,[esp+0x38]
1000945b:	mov    DWORD PTR [esp+0x50],0xf
10009463:	mov    DWORD PTR [esp+0x4c],esi
10009467:	mov    BYTE PTR [esp+0x3c],0x0
1000946c:	call   0x10003900
10009471:	lea    edx,[esp+0x30]
10009475:	push   edx
10009476:	lea    eax,[esp+0x50]
1000947a:	push   eax
1000947b:	mov    DWORD PTR [esp+0x890],esi
10009482:	call   0x100014d0
10009487:	push   0x10085c78
1000948c:	lea    ecx,[esp+0x50]
10009490:	push   ecx
10009491:	call   0x1001621e
10009496:	mov    edx,esi
10009498:	mov    eax,ebx
1000949a:	sub    edx,ebx
1000949c:	lea    esp,[esp+0x0]
100094a0:	movzx  ecx,WORD PTR [eax]
100094a3:	mov    WORD PTR [edx+eax*1],cx
100094a7:	add    eax,0x2
100094aa:	test   cx,cx
100094ad:	jne    0x100094a0
100094af:	lea    ecx,[esp+0x1c]
100094b3:	call   0x1000a120
100094b8:	mov    DWORD PTR [esp+0x888],0x1
100094c3:	mov    edx,DWORD PTR [edi+0x4]
100094c6:	push   edx
100094c7:	lea    ecx,[esp+0x20]
100094cb:	call   0x10007c00
100094d0:	mov    eax,DWORD PTR [edi+0x70]
100094d3:	mov    ecx,DWORD PTR [edi]
100094d5:	xor    edx,edx
100094d7:	push   0x8000
100094dc:	push   edx
100094dd:	push   eax
100094de:	push   ecx
100094df:	mov    DWORD PTR [edi+0x70],edx
100094e2:	mov    DWORD PTR [edi+0x74],edx
100094e5:	mov    DWORD PTR [edi+0x78],edx
100094e8:	call   DWORD PTR ds:0x10034124
100094ee:	mov    eax,DWORD PTR [esp+0x14]
100094f2:	push   eax
100094f3:	mov    ecx,edi
100094f5:	call   0x10007e60
100094fa:	push   edi
100094fb:	call   0x10008ae0
10009500:	lea    esi,[esp+0x1c]
10009504:	mov    DWORD PTR [esp+0x888],0xffffffff
1000950f:	call   0x10007d00
10009514:	mov    ecx,esi
10009516:	call   0x1000a210
1000951b:	jmp    0x10009555
1000951d:	lea    edx,[edi+0x88]
10009523:	mov    eax,ebx
10009525:	sub    edx,ebx
10009527:	jmp    0x10009530
10009529:	lea    esp,[esp+0x0]
10009530:	movzx  ecx,WORD PTR [eax]
10009533:	mov    WORD PTR [edx+eax*1],cx
10009537:	add    eax,0x2
1000953a:	test   cx,cx
1000953d:	jne    0x10009530
1000953f:	call   0x10008980
10009544:	mov    ecx,DWORD PTR [esp+0x14]
10009548:	push   ecx
10009549:	mov    ecx,edi
1000954b:	call   0x10007e60
10009550:	call   0x100080d0
10009555:	mov    eax,DWORD PTR [edi+0x888]
1000955b:	push   0xa
1000955d:	lea    edx,[esp+0x78]
10009561:	push   edx
10009562:	cdq    
10009563:	push   edx
10009564:	push   eax
10009565:	call   0x100179a1
1000956a:	mov    eax,ds:0x10096c80
1000956f:	mov    edx,DWORD PTR [eax+0xc]
10009572:	add    esp,0x10
10009575:	mov    ecx,0x10096c80
1000957a:	call   edx
1000957c:	add    eax,0x10
1000957f:	mov    DWORD PTR [esp+0x10],eax
10009583:	mov    DWORD PTR [esp+0x888],0x2
1000958e:	mov    eax,DWORD PTR [edi+0x4]
10009591:	push   eax
10009592:	push   0x100841e0
10009597:	push   0x10
10009599:	push   0x100841bc
1000959e:	call   0x10003540
100095a3:	add    esp,0xc
100095a6:	push   eax
100095a7:	lea    ecx,[esp+0x18]
100095ab:	push   ecx
100095ac:	call   0x1000ab30
100095b1:	mov    eax,DWORD PTR [esp+0x1c]
100095b5:	mov    edi,DWORD PTR [edi]
100095b7:	add    esp,0xc
100095ba:	lea    edx,[esp+0x74]
100095be:	push   edx
100095bf:	push   eax
100095c0:	push   edi
100095c1:	call   0x10008fe0
100095c6:	mov    DWORD PTR [esp+0x894],0xffffffff
100095d1:	mov    eax,DWORD PTR [esp+0x1c]
100095d5:	add    eax,0xfffffff0
100095d8:	add    esp,0xc
100095db:	lea    ecx,[eax+0xc]
100095de:	or     edx,0xffffffff
100095e1:	lock xadd DWORD PTR [ecx],edx
100095e5:	dec    edx
100095e6:	test   edx,edx
100095e8:	jg     0x100095f4
100095ea:	mov    ecx,DWORD PTR [eax]
100095ec:	mov    edx,DWORD PTR [ecx]
100095ee:	push   eax
100095ef:	mov    eax,DWORD PTR [edx+0x4]
100095f2:	call   eax
100095f4:	mov    ecx,DWORD PTR [esp+0x880]
100095fb:	mov    DWORD PTR fs:0x0,ecx
10009602:	pop    ecx
10009603:	pop    edi
10009604:	pop    esi
10009605:	mov    ecx,DWORD PTR [esp+0x86c]
1000960c:	xor    ecx,esp
1000960e:	call   0x10015b2b
10009613:	mov    esp,ebp
10009615:	pop    ebp
10009616:	ret    0x4
10009619:	int3   
1000961a:	int3   
1000961b:	int3   
1000961c:	int3   
1000961d:	int3   
1000961e:	int3   
1000961f:	int3   
10009620:	push   ebp
10009621:	mov    ebp,esp
10009623:	push   0xffffffff
10009625:	push   0x1002b736
1000962a:	mov    eax,fs:0x0
10009630:	push   eax
10009631:	sub    esp,0x8bc
10009637:	mov    eax,ds:0x100951fc
1000963c:	xor    eax,ebp
1000963e:	mov    DWORD PTR [ebp-0x14],eax
10009641:	push   ebx
10009642:	push   esi
10009643:	push   edi
10009644:	push   eax
10009645:	lea    eax,[ebp-0xc]
10009648:	mov    fs:0x0,eax
1000964e:	mov    DWORD PTR [ebp-0x10],esp
10009651:	mov    esi,DWORD PTR [ebp+0x8]
10009654:	mov    edi,DWORD PTR [ebp+0xc]
10009657:	mov    ebx,DWORD PTR [ebp+0x10]
1000965a:	lea    eax,[ebp-0x8ac]
10009660:	push   eax
10009661:	mov    ecx,esi
10009663:	mov    DWORD PTR [ebp-0x4],0x0
1000966a:	call   0x10007d50
1000966f:	push   edi
10009670:	lea    ecx,[ebp-0x8ac]
10009676:	mov    BYTE PTR [ebp-0x4],0x1
1000967a:	call   0x100093d0
1000967f:	call   DWORD PTR ds:0x1009517c
10009685:	mov    edi,eax
10009687:	call   DWORD PTR ds:0x100340a0
1000968d:	cmp    esi,eax
1000968f:	je     0x100096f8
10009691:	test   ebx,ebx
10009693:	jne    0x100096a9
10009695:	mov    ecx,DWORD PTR [ebp-0x8ac]
1000969b:	xor    eax,eax
1000969d:	push   eax
1000969e:	push   ecx
1000969f:	call   0x10009bc0
100096a4:	add    esp,0x8
100096a7:	jmp    0x100096ff
100096a9:	push   ebx
100096aa:	call   DWORD PTR ds:0x10034028
100096b0:	add    eax,0x1
100096b3:	cmp    eax,0x3fffffff
100096b8:	jle    0x100096ce
100096ba:	mov    ecx,DWORD PTR [ebp-0x8ac]
100096c0:	xor    eax,eax
100096c2:	push   eax
100096c3:	push   ecx
100096c4:	call   0x10009bc0
100096c9:	add    esp,0x8
100096cc:	jmp    0x100096ff
100096ce:	lea    esi,[eax+eax*1]
100096d1:	mov    eax,esi
100096d3:	call   0x10015b40
100096d8:	mov    DWORD PTR [ebp-0x10],esp
100096db:	mov    eax,esp
100096dd:	push   edi
100096de:	push   esi
100096df:	push   ebx
100096e0:	push   eax
100096e1:	call   0x10001050
100096e6:	mov    ecx,DWORD PTR [ebp-0x8ac]
100096ec:	push   eax
100096ed:	push   ecx
100096ee:	call   0x10009bc0
100096f3:	add    esp,0x8
100096f6:	jmp    0x100096ff
100096f8:	push   ebx
100096f9:	call   DWORD PTR ds:0x1003412c
100096ff:	lea    ecx,[ebp-0x18]
10009702:	call   0x1000a040
10009707:	mov    esi,DWORD PTR [ebp-0x8ac]
1000970d:	test   esi,esi
1000970f:	je     0x10009727
10009711:	call   DWORD PTR ds:0x1003407c
10009717:	push   esi
10009718:	mov    edi,eax
1000971a:	call   DWORD PTR ds:0x10034058
10009720:	push   edi
10009721:	call   DWORD PTR ds:0x10034078
10009727:	lea    esp,[ebp-0x8d8]
1000972d:	mov    ecx,DWORD PTR [ebp-0xc]
10009730:	mov    DWORD PTR fs:0x0,ecx
10009737:	pop    ecx
10009738:	pop    edi
10009739:	pop    esi
1000973a:	pop    ebx
1000973b:	mov    ecx,DWORD PTR [ebp-0x14]
1000973e:	xor    ecx,ebp
10009740:	call   0x10015b2b
10009745:	mov    esp,ebp
10009747:	pop    ebp
10009748:	ret    
10009749:	push   0x100826fa
1000974e:	lea    ecx,[ebp-0x8c8]
10009754:	call   0x10002b70
10009759:	lea    edx,[ebp-0x8c8]
1000975f:	push   edx
10009760:	push   0x0
10009762:	push   0x4
10009764:	mov    BYTE PTR [ebp-0x4],0x3
10009768:	call   0x1000c2a0
1000976d:	add    esp,0xc
10009770:	lea    ecx,[ebp-0x8c8]
10009776:	call   0x10002bb0
1000977b:	mov    eax,0x10009727
10009780:	ret    
10009781:	int3   
10009782:	int3   
10009783:	int3   
10009784:	int3   
10009785:	int3   
10009786:	int3   
10009787:	int3   
10009788:	int3   
10009789:	int3   
1000978a:	int3   
1000978b:	int3   
1000978c:	int3   
1000978d:	int3   
1000978e:	int3   
1000978f:	int3   
10009790:	push   edi
10009791:	lea    ecx,[esi+0x894]
10009797:	call   0x1000a040
1000979c:	mov    edi,DWORD PTR [esi]
1000979e:	test   edi,edi
100097a0:	je     0x100097ba
100097a2:	push   ebx
100097a3:	call   DWORD PTR ds:0x1003407c
100097a9:	push   edi
100097aa:	mov    ebx,eax
100097ac:	call   DWORD PTR ds:0x10034058
100097b2:	push   ebx
100097b3:	call   DWORD PTR ds:0x10034078
100097b9:	pop    ebx
100097ba:	mov    DWORD PTR [esi],0x0
100097c0:	pop    edi
100097c1:	ret    
100097c2:	int3   
100097c3:	int3   
100097c4:	int3   
100097c5:	int3   
100097c6:	int3   
100097c7:	int3   
100097c8:	int3   
100097c9:	int3   
100097ca:	int3   
100097cb:	int3   
100097cc:	int3   
100097cd:	int3   
100097ce:	int3   
100097cf:	int3   
100097d0:	push   ebp
100097d1:	mov    ebp,esp
100097d3:	push   0xffffffff
100097d5:	push   0x1002b6f6
100097da:	mov    eax,fs:0x0
100097e0:	push   eax
100097e1:	push   ecx
100097e2:	sub    esp,0x910
100097e8:	mov    eax,ds:0x100951fc
100097ed:	xor    eax,ebp
100097ef:	mov    DWORD PTR [ebp-0x18],eax
100097f2:	push   ebx
100097f3:	push   esi
100097f4:	push   edi
100097f5:	push   eax
100097f6:	lea    eax,[ebp-0xc]
100097f9:	mov    fs:0x0,eax
100097ff:	mov    DWORD PTR [ebp-0x10],esp
10009802:	mov    DWORD PTR [ebp-0x4],0x0
10009809:	lea    eax,[ebp-0x8b0]
1000980f:	push   eax
10009810:	mov    ecx,DWORD PTR [ebp+0x8]
10009813:	call   0x10007d50
10009818:	mov    DWORD PTR [ebp-0x914],eax
1000981e:	mov    BYTE PTR [ebp-0x4],0x1
10009822:	mov    ecx,DWORD PTR [ebp+0xc]
10009825:	push   ecx
10009826:	mov    ebx,DWORD PTR [ebp+0x10]
10009829:	lea    ecx,[ebp-0x8b0]
1000982f:	call   0x100093d0
10009834:	call   0x10001000
10009839:	mov    DWORD PTR [ebp-0x8b8],eax
1000983f:	mov    edx,DWORD PTR [ebp+0x10]
10009842:	mov    DWORD PTR [ebp-0x8b4],edx
10009848:	cmp    DWORD PTR [ebp-0x8b4],0x0
1000984f:	jne    0x1000985d
10009851:	mov    DWORD PTR [ebp-0x918],0x0
1000985b:	jmp    0x100098ca
1000985d:	mov    eax,DWORD PTR [ebp-0x8b4]
10009863:	push   eax
10009864:	call   DWORD PTR ds:0x10034028
1000986a:	add    eax,0x1
1000986d:	mov    DWORD PTR [ebp-0x14],eax
10009870:	cmp    DWORD PTR [ebp-0x14],0x3fffffff
10009877:	jle    0x10009885
10009879:	mov    DWORD PTR [ebp-0x91c],0x0
10009883:	jmp    0x100098be
10009885:	mov    eax,DWORD PTR [ebp-0x14]
10009888:	shl    eax,1
1000988a:	call   0x10015b40
1000988f:	mov    DWORD PTR [ebp-0x920],esp
10009895:	mov    DWORD PTR [ebp-0x10],esp
10009898:	mov    ecx,DWORD PTR [ebp-0x8b8]
1000989e:	push   ecx
1000989f:	mov    edx,DWORD PTR [ebp-0x14]
100098a2:	shl    edx,1
100098a4:	push   edx
100098a5:	mov    eax,DWORD PTR [ebp-0x8b4]
100098ab:	push   eax
100098ac:	mov    ecx,DWORD PTR [ebp-0x920]
100098b2:	push   ecx
100098b3:	call   0x10001050
100098b8:	mov    DWORD PTR [ebp-0x91c],eax
100098be:	mov    edx,DWORD PTR [ebp-0x91c]
100098c4:	mov    DWORD PTR [ebp-0x918],edx
100098ca:	mov    eax,DWORD PTR [ebp-0x918]
100098d0:	push   eax
100098d1:	lea    eax,[ebp-0x8b0]
100098d7:	call   0x10007be0
100098dc:	push   eax
100098dd:	call   0x10009bc0
100098e2:	add    esp,0x8
100098e5:	mov    BYTE PTR [ebp-0x8bd],0x1
100098ec:	mov    BYTE PTR [ebp-0x4],0x0
100098f0:	lea    esi,[ebp-0x8b0]
100098f6:	call   0x10009790
100098fb:	mov    al,BYTE PTR [ebp-0x8bd]
10009901:	jmp    0x1000994f
10009903:	push   0x100826fa
10009908:	lea    ecx,[ebp-0x8dc]
1000990e:	call   0x10002b70
10009913:	mov    BYTE PTR [ebp-0x4],0x3
10009917:	lea    ecx,[ebp-0x8dc]
1000991d:	push   ecx
1000991e:	push   0x0
10009920:	push   0x4
10009922:	call   0x1000c2a0
10009927:	add    esp,0xc
1000992a:	mov    BYTE PTR [ebp-0x4],0x2
1000992e:	lea    ecx,[ebp-0x8dc]
10009934:	call   0x10002bb0
10009939:	mov    DWORD PTR [ebp-0x4],0xffffffff
10009940:	mov    eax,0x1000994d
10009945:	ret    
10009946:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000994d:	xor    al,al
1000994f:	lea    esp,[ebp-0x930]
10009955:	mov    ecx,DWORD PTR [ebp-0xc]
10009958:	mov    DWORD PTR fs:0x0,ecx
1000995f:	pop    ecx
10009960:	pop    edi
10009961:	pop    esi
10009962:	pop    ebx
10009963:	mov    ecx,DWORD PTR [ebp-0x18]
10009966:	xor    ecx,ebp
10009968:	call   0x10015b2b
1000996d:	mov    esp,ebp
1000996f:	pop    ebp
10009970:	ret    
10009971:	int3   
10009972:	int3   
10009973:	int3   
10009974:	int3   
10009975:	int3   
10009976:	int3   
10009977:	int3   
10009978:	int3   
10009979:	int3   
1000997a:	int3   
1000997b:	int3   
1000997c:	int3   
1000997d:	int3   
1000997e:	int3   
1000997f:	int3   
10009980:	push   ebp
10009981:	mov    ebp,esp
10009983:	sub    esp,0x14
10009986:	lea    ecx,[ebp-0x5]
10009989:	call   0x10006c80
1000998e:	mov    eax,DWORD PTR [ebp+0x8]
10009991:	mov    DWORD PTR [ebp-0x4],eax
10009994:	mov    ecx,DWORD PTR [ebp-0x4]
10009997:	mov    DWORD PTR [ebp-0x10],ecx
1000999a:	mov    edx,DWORD PTR [ebp-0x10]
1000999d:	mov    eax,DWORD PTR [edx+0x4]
100099a0:	push   eax
100099a1:	mov    ecx,DWORD PTR [ebp-0x4]
100099a4:	mov    edx,DWORD PTR [ecx]
100099a6:	push   edx
100099a7:	call   0x10006d10
100099ac:	add    esp,0x8
100099af:	push   0x0
100099b1:	mov    eax,DWORD PTR [ebp-0x4]
100099b4:	mov    ecx,DWORD PTR [eax]
100099b6:	push   ecx
100099b7:	call   DWORD PTR ds:0x10034120
100099bd:	mov    DWORD PTR [ebp-0xc],0x0
100099c4:	mov    edx,DWORD PTR [ebp-0x4]
100099c7:	mov    DWORD PTR [ebp-0x14],edx
100099ca:	mov    eax,DWORD PTR [ebp-0x14]
100099cd:	push   eax
100099ce:	call   0x10015b26
100099d3:	add    esp,0x4
100099d6:	lea    ecx,[ebp-0x5]
100099d9:	call   0x10006ca0
100099de:	mov    eax,DWORD PTR [ebp-0xc]
100099e1:	mov    esp,ebp
100099e3:	pop    ebp
100099e4:	ret    0x4
100099e7:	int3   
100099e8:	int3   
100099e9:	int3   
100099ea:	int3   
100099eb:	int3   
100099ec:	int3   
100099ed:	int3   
100099ee:	int3   
100099ef:	int3   
100099f0:	push   ebp
100099f1:	mov    ebp,esp
100099f3:	push   0xffffffff
100099f5:	push   0x1002b810
100099fa:	mov    eax,fs:0x0
10009a00:	push   eax
10009a01:	sub    esp,0x94
10009a07:	mov    eax,ds:0x100951fc
10009a0c:	xor    eax,ebp
10009a0e:	push   eax
10009a0f:	lea    eax,[ebp-0xc]
10009a12:	mov    fs:0x0,eax
10009a18:	mov    DWORD PTR [ebp-0x64],0x0
10009a1f:	push   0x40
10009a21:	push   0x0
10009a23:	lea    eax,[ebp-0x60]
10009a26:	push   eax
10009a27:	call   0x10016580
10009a2c:	add    esp,0xc
10009a2f:	mov    DWORD PTR [ebp-0x64],0x44
10009a36:	mov    DWORD PTR [ebp-0x1c],0x0
10009a3d:	xor    ecx,ecx
10009a3f:	mov    DWORD PTR [ebp-0x18],ecx
10009a42:	mov    DWORD PTR [ebp-0x14],ecx
10009a45:	mov    DWORD PTR [ebp-0x10],ecx
10009a48:	lea    edx,[ebp-0x1c]
10009a4b:	push   edx
10009a4c:	lea    eax,[ebp-0x64]
10009a4f:	push   eax
10009a50:	push   0x0
10009a52:	push   0x0
10009a54:	push   0x4
10009a56:	push   0x1
10009a58:	push   0x0
10009a5a:	push   0x0
10009a5c:	push   0x100826d8
10009a61:	mov    ecx,DWORD PTR [ebp+0xc]
10009a64:	push   ecx
10009a65:	call   DWORD PTR ds:0x100340c4
10009a6b:	test   eax,eax
10009a6d:	je     0x10009ba0
10009a73:	push   0x0
10009a75:	lea    ecx,[ebp-0x6c]
10009a78:	call   0x100032c0
10009a7d:	mov    DWORD PTR [ebp-0x4],0x0
10009a84:	mov    edx,DWORD PTR [ebp-0x1c]
10009a87:	push   edx
10009a88:	lea    ecx,[ebp-0x6c]
10009a8b:	call   0x10003db0
10009a90:	push   0x0
10009a92:	lea    ecx,[ebp-0x68]
10009a95:	call   0x100032c0
10009a9a:	mov    BYTE PTR [ebp-0x4],0x1
10009a9e:	mov    eax,DWORD PTR [ebp-0x18]
10009aa1:	push   eax
10009aa2:	lea    ecx,[ebp-0x68]
10009aa5:	call   0x10003db0
10009aaa:	mov    ecx,DWORD PTR [ebp+0x10]
10009aad:	push   ecx
10009aae:	mov    edx,DWORD PTR [ebp+0x8]
10009ab1:	push   edx
10009ab2:	mov    eax,DWORD PTR [ebp-0x14]
10009ab5:	push   eax
10009ab6:	call   0x100097d0
10009abb:	add    esp,0xc
10009abe:	movzx  ecx,al
10009ac1:	test   ecx,ecx
10009ac3:	je     0x10009b83
10009ac9:	cmp    DWORD PTR [ebp+0x14],0xffffffff
10009acd:	je     0x10009b83
10009ad3:	mov    DWORD PTR [ebp-0x78],0x8
10009ada:	mov    edx,DWORD PTR [ebp-0x78]
10009add:	push   edx
10009ade:	call   0x10016464
10009ae3:	add    esp,0x4
10009ae6:	mov    DWORD PTR [ebp-0x7c],eax
10009ae9:	cmp    DWORD PTR [ebp-0x7c],0x0
10009aed:	je     0x10009b0c
10009aef:	mov    eax,DWORD PTR [ebp-0x78]
10009af2:	push   eax
10009af3:	push   0x0
10009af5:	mov    ecx,DWORD PTR [ebp-0x7c]
10009af8:	push   ecx
10009af9:	call   0x10016580
10009afe:	add    esp,0xc
10009b01:	mov    edx,DWORD PTR [ebp-0x7c]
10009b04:	mov    DWORD PTR [ebp-0x88],edx
10009b0a:	jmp    0x10009b16
10009b0c:	mov    DWORD PTR [ebp-0x88],0x0
10009b16:	mov    eax,DWORD PTR [ebp-0x88]
10009b1c:	mov    DWORD PTR [ebp-0x70],eax
10009b1f:	mov    ecx,DWORD PTR [ebp-0x70]
10009b22:	mov    DWORD PTR [ebp-0x90],ecx
10009b28:	lea    ecx,[ebp-0x6c]
10009b2b:	call   0x100078c0
10009b30:	mov    edx,DWORD PTR [ebp-0x90]
10009b36:	mov    DWORD PTR [edx],eax
10009b38:	mov    eax,DWORD PTR [ebp-0x70]
10009b3b:	mov    ecx,DWORD PTR [ebp+0x14]
10009b3e:	mov    DWORD PTR [eax+0x4],ecx
10009b41:	mov    edx,DWORD PTR [ebp-0x70]
10009b44:	mov    DWORD PTR [ebp-0x94],edx
10009b4a:	mov    DWORD PTR [ebp-0x70],0x0
10009b51:	push   0x0
10009b53:	push   0x0
10009b55:	mov    eax,DWORD PTR [ebp-0x94]
10009b5b:	push   eax
10009b5c:	push   0x10009980
10009b61:	push   0x0
10009b63:	push   0x0
10009b65:	call   DWORD PTR ds:0x10034074
10009b6b:	mov    ecx,DWORD PTR [ebp-0x70]
10009b6e:	mov    DWORD PTR [ebp-0x98],ecx
10009b74:	mov    edx,DWORD PTR [ebp-0x98]
10009b7a:	push   edx
10009b7b:	call   0x10015b26
10009b80:	add    esp,0x4
10009b83:	mov    BYTE PTR [ebp-0x4],0x0
10009b87:	lea    ecx,[ebp-0x68]
10009b8a:	call   0x10003290
10009b8f:	mov    DWORD PTR [ebp-0x4],0xffffffff
10009b96:	lea    ecx,[ebp-0x6c]
10009b99:	call   0x10003290
10009b9e:	jmp    0x10009ba9
10009ba0:	call   DWORD PTR ds:0x1003407c
10009ba6:	mov    DWORD PTR [ebp-0x74],eax
10009ba9:	mov    ecx,DWORD PTR [ebp-0xc]
10009bac:	mov    DWORD PTR fs:0x0,ecx
10009bb3:	pop    ecx
10009bb4:	mov    esp,ebp
10009bb6:	pop    ebp
10009bb7:	ret    
10009bb8:	int3   
10009bb9:	int3   
10009bba:	int3   
10009bbb:	int3   
10009bbc:	int3   
10009bbd:	int3   
10009bbe:	int3   
10009bbf:	int3   
10009bc0:	push   ebp
10009bc1:	mov    ebp,esp
10009bc3:	push   0xffffffff
10009bc5:	push   0x1002b0cb
10009bca:	mov    eax,fs:0x0
10009bd0:	push   eax
10009bd1:	push   ecx
10009bd2:	sub    esp,0x220
10009bd8:	mov    eax,ds:0x100951fc
10009bdd:	xor    eax,ebp
10009bdf:	mov    DWORD PTR [ebp-0x3c],eax
10009be2:	push   ebx
10009be3:	push   esi
10009be4:	push   edi
10009be5:	push   eax
10009be6:	lea    eax,[ebp-0xc]
10009be9:	mov    fs:0x0,eax
10009bef:	mov    DWORD PTR [ebp-0x10],esp
10009bf2:	push   0x10084214
10009bf7:	push   0xc
10009bf9:	push   0x10084010
10009bfe:	call   0x10003540
10009c03:	add    esp,0x8
10009c06:	mov    ecx,esp
10009c08:	mov    DWORD PTR [ebp-0xd8],esp
10009c0e:	push   eax
10009c0f:	call   0x10002d70
10009c14:	mov    DWORD PTR [ebp-0x200],eax
10009c1a:	call   0x10007b50
10009c1f:	add    esp,0x4
10009c22:	mov    DWORD PTR [ebp-0x174],eax
10009c28:	mov    eax,DWORD PTR [ebp-0x174]
10009c2e:	mov    DWORD PTR [ebp-0x28],eax
10009c31:	mov    DWORD PTR [ebp-0x4],0x0
10009c38:	cmp    DWORD PTR [ebp-0x28],0x0
10009c3c:	jne    0x10009c9c
10009c3e:	mov    BYTE PTR [ebp-0xd9],0x0
10009c45:	mov    DWORD PTR [ebp-0x4],0xffffffff
10009c4c:	mov    ecx,DWORD PTR [ebp-0x28]
10009c4f:	mov    DWORD PTR [ebp-0x17c],ecx
10009c55:	mov    edx,DWORD PTR [ebp-0x17c]
10009c5b:	mov    DWORD PTR [ebp-0x178],edx
10009c61:	cmp    DWORD PTR [ebp-0x178],0x0
10009c68:	je     0x10009c87
10009c6a:	push   0x1
10009c6c:	mov    eax,DWORD PTR [ebp-0x178]
10009c72:	mov    edx,DWORD PTR [eax]
10009c74:	mov    ecx,DWORD PTR [ebp-0x178]
10009c7a:	mov    eax,DWORD PTR [edx+0x4]
10009c7d:	call   eax
10009c7f:	mov    DWORD PTR [ebp-0x204],eax
10009c85:	jmp    0x10009c91
10009c87:	mov    DWORD PTR [ebp-0x204],0x0
10009c91:	mov    al,BYTE PTR [ebp-0xd9]
10009c97:	jmp    0x1000a000
10009c9c:	mov    ecx,DWORD PTR [ebp+0x8]
10009c9f:	push   ecx
10009ca0:	call   0x10002b40
10009ca5:	add    esp,0x4
10009ca8:	push   eax
10009ca9:	lea    esi,[ebp-0xf8]
10009caf:	call   0x100079c0
10009cb4:	add    esp,0x4
10009cb7:	mov    DWORD PTR [ebp-0x208],eax
10009cbd:	mov    edx,DWORD PTR [ebp-0x208]
10009cc3:	mov    DWORD PTR [ebp-0x20c],edx
10009cc9:	mov    BYTE PTR [ebp-0x4],0x1
10009ccd:	lea    eax,[ebp-0x38]
10009cd0:	push   eax
10009cd1:	mov    ecx,DWORD PTR [ebp-0x20c]
10009cd7:	call   0x1000c540
10009cdc:	mov    BYTE PTR [ebp-0x4],0x3
10009ce0:	lea    ecx,[ebp-0xf8]
10009ce6:	call   0x10002bb0
10009ceb:	mov    BYTE PTR [ebp-0x11],0x0
10009cef:	mov    DWORD PTR [ebp-0x18],0x0
10009cf6:	mov    DWORD PTR [ebp-0x30],0x0
10009cfd:	mov    DWORD PTR [ebp-0x24],0x0
10009d04:	mov    DWORD PTR [ebp-0x2c],0x0
10009d0b:	mov    DWORD PTR [ebp-0x1c],0x0
10009d12:	mov    DWORD PTR [ebp-0x20],0x0
10009d19:	mov    BYTE PTR [ebp-0x4],0x4
10009d1d:	mov    ecx,DWORD PTR [ebp-0x28]
10009d20:	mov    DWORD PTR [ebp-0x210],ecx
10009d26:	push   0x10084240
10009d2b:	push   0xc
10009d2d:	push   0x10084278
10009d32:	call   0x10003340
10009d37:	add    esp,0xc
10009d3a:	mov    DWORD PTR [ebp-0x214],eax
10009d40:	mov    edx,DWORD PTR [ebp-0x214]
10009d46:	push   edx
10009d47:	mov    eax,DWORD PTR [ebp-0x210]
10009d4d:	mov    edx,DWORD PTR [eax]
10009d4f:	mov    ecx,DWORD PTR [ebp-0x210]
10009d55:	mov    eax,DWORD PTR [edx]
10009d57:	call   eax
10009d59:	mov    DWORD PTR [ebp-0x21c],eax
10009d5f:	mov    DWORD PTR [ebp-0x218],edx
10009d65:	mov    ecx,DWORD PTR [ebp-0x21c]
10009d6b:	mov    DWORD PTR [ebp-0xc8],ecx
10009d71:	mov    edx,DWORD PTR [ebp-0x218]
10009d77:	mov    DWORD PTR [ebp-0xc4],edx
10009d7d:	push   0x80
10009d82:	push   0x0
10009d84:	lea    eax,[ebp-0xc0]
10009d8a:	push   eax
10009d8b:	call   0x10016580
10009d90:	add    esp,0xc
10009d93:	mov    ecx,DWORD PTR [ebp+0xc]
10009d96:	mov    DWORD PTR [ebp-0x220],ecx
10009d9c:	lea    edx,[ebp-0xc0]
10009da2:	mov    DWORD PTR [ebp-0x224],edx
10009da8:	mov    eax,DWORD PTR [ebp-0x224]
10009dae:	mov    DWORD PTR [ebp-0x228],eax
10009db4:	mov    ecx,DWORD PTR [ebp-0x220]
10009dba:	mov    dl,BYTE PTR [ecx]
10009dbc:	mov    BYTE PTR [ebp-0x229],dl
10009dc2:	mov    eax,DWORD PTR [ebp-0x224]
10009dc8:	mov    cl,BYTE PTR [ebp-0x229]
10009dce:	mov    BYTE PTR [eax],cl
10009dd0:	mov    edx,DWORD PTR [ebp-0x220]
10009dd6:	add    edx,0x1
10009dd9:	mov    DWORD PTR [ebp-0x220],edx
10009ddf:	mov    eax,DWORD PTR [ebp-0x224]
10009de5:	add    eax,0x1
10009de8:	mov    DWORD PTR [ebp-0x224],eax
10009dee:	cmp    BYTE PTR [ebp-0x229],0x0
10009df5:	jne    0x10009db4
10009df7:	mov    ecx,DWORD PTR [ebp-0xc8]
10009dfd:	or     ecx,DWORD PTR [ebp-0xc4]
10009e03:	jne    0x10009e0a
10009e05:	jmp    0x10009f2f
10009e0a:	push   0x4
10009e0c:	push   0x3000
10009e11:	push   0x88
10009e16:	push   0x0
10009e18:	mov    edx,DWORD PTR [ebp+0x8]
10009e1b:	push   edx
10009e1c:	call   DWORD PTR ds:0x10034110
10009e22:	mov    DWORD PTR [ebp-0x18],eax
10009e25:	cmp    DWORD PTR [ebp-0x18],0x0
10009e29:	jne    0x10009e3c
10009e2b:	call   DWORD PTR ds:0x1003407c
10009e31:	mov    DWORD PTR [ebp-0xd4],eax
10009e37:	jmp    0x10009f2f
10009e3c:	lea    eax,[ebp-0x20]
10009e3f:	push   eax
10009e40:	push   0x88
10009e45:	lea    ecx,[ebp-0xc8]
10009e4b:	push   ecx
10009e4c:	mov    edx,DWORD PTR [ebp-0x18]
10009e4f:	push   edx
10009e50:	mov    eax,DWORD PTR [ebp+0x8]
10009e53:	push   eax
10009e54:	call   DWORD PTR ds:0x10034128
10009e5a:	lea    eax,[ebp-0x38]
10009e5d:	call   0x1000c6b0
10009e62:	mov    DWORD PTR [ebp-0xcc],eax
10009e68:	push   0x40
10009e6a:	push   0x3000
10009e6f:	mov    ecx,DWORD PTR [ebp-0xcc]
10009e75:	push   ecx
10009e76:	push   0x0
10009e78:	mov    edx,DWORD PTR [ebp+0x8]
10009e7b:	push   edx
10009e7c:	call   DWORD PTR ds:0x10034110
10009e82:	mov    DWORD PTR [ebp-0x30],eax
10009e85:	mov    eax,DWORD PTR [ebp-0x30]
10009e88:	push   eax
10009e89:	lea    eax,[ebp-0x38]
10009e8c:	call   0x1000c6c0
10009e91:	cmp    DWORD PTR [ebp-0x30],0x0
10009e95:	jne    0x10009e9c
10009e97:	jmp    0x10009f2f
10009e9c:	lea    ecx,[ebp-0x20]
10009e9f:	push   ecx
10009ea0:	mov    edx,DWORD PTR [ebp-0xcc]
10009ea6:	push   edx
10009ea7:	lea    eax,[ebp-0x38]
10009eaa:	call   0x1000c6a0
10009eaf:	push   eax
10009eb0:	mov    eax,DWORD PTR [ebp-0x30]
10009eb3:	push   eax
10009eb4:	mov    ecx,DWORD PTR [ebp+0x8]
10009eb7:	push   ecx
10009eb8:	call   DWORD PTR ds:0x10034128
10009ebe:	mov    DWORD PTR [ebp-0xd0],0x0
10009ec8:	lea    edx,[ebp-0xd0]
10009ece:	push   edx
10009ecf:	push   0xf01ff
10009ed4:	mov    eax,DWORD PTR [ebp+0x8]
10009ed7:	push   eax
10009ed8:	call   DWORD PTR ds:0x10034014
10009ede:	mov    ecx,DWORD PTR [ebp-0xd0]
10009ee4:	push   ecx
10009ee5:	call   DWORD PTR ds:0x10034004
10009eeb:	lea    edx,[ebp-0x2c]
10009eee:	push   edx
10009eef:	push   0x0
10009ef1:	mov    eax,DWORD PTR [ebp-0x18]
10009ef4:	push   eax
10009ef5:	mov    ecx,DWORD PTR [ebp-0x30]
10009ef8:	push   ecx
10009ef9:	push   0x0
10009efb:	push   0x0
10009efd:	mov    edx,DWORD PTR [ebp+0x8]
10009f00:	push   edx
10009f01:	call   DWORD PTR ds:0x10034144
10009f07:	mov    DWORD PTR [ebp-0x24],eax
10009f0a:	cmp    DWORD PTR [ebp-0x24],0x0
10009f0e:	jne    0x10009f12
10009f10:	jmp    0x10009f2f
10009f12:	call   DWORD PTR ds:0x10034000
10009f18:	push   0xffffffff
10009f1a:	mov    eax,DWORD PTR [ebp-0x24]
10009f1d:	push   eax
10009f1e:	call   DWORD PTR ds:0x1003404c
10009f24:	mov    BYTE PTR [ebp-0x11],0x1
10009f28:	jmp    0x10009f2f
10009f2a:	jmp    0x10009d1d
10009f2f:	jmp    0x10009f3e
10009f31:	mov    DWORD PTR [ebp-0x4],0x3
10009f38:	mov    eax,0x10009f45
10009f3d:	ret    
10009f3e:	mov    DWORD PTR [ebp-0x4],0x3
10009f45:	cmp    DWORD PTR [ebp-0x18],0x0
10009f49:	je     0x10009f60
10009f4b:	push   0x8000
10009f50:	push   0x0
10009f52:	mov    ecx,DWORD PTR [ebp-0x18]
10009f55:	push   ecx
10009f56:	mov    edx,DWORD PTR [ebp+0x8]
10009f59:	push   edx
10009f5a:	call   DWORD PTR ds:0x10034124
10009f60:	cmp    DWORD PTR [ebp-0x30],0x0
10009f64:	je     0x10009f7b
10009f66:	push   0x8000
10009f6b:	push   0x0
10009f6d:	mov    eax,DWORD PTR [ebp-0x30]
10009f70:	push   eax
10009f71:	mov    ecx,DWORD PTR [ebp+0x8]
10009f74:	push   ecx
10009f75:	call   DWORD PTR ds:0x10034124
10009f7b:	cmp    DWORD PTR [ebp-0x24],0x0
10009f7f:	je     0x10009f99
10009f81:	lea    edx,[ebp-0x1c]
10009f84:	push   edx
10009f85:	mov    eax,DWORD PTR [ebp-0x24]
10009f88:	push   eax
10009f89:	call   DWORD PTR ds:0x1003410c
10009f8f:	mov    ecx,DWORD PTR [ebp-0x24]
10009f92:	push   ecx
10009f93:	call   DWORD PTR ds:0x10034058
10009f99:	mov    dl,BYTE PTR [ebp-0x11]
10009f9c:	mov    BYTE PTR [ebp-0xf9],dl
10009fa2:	mov    BYTE PTR [ebp-0x4],0x0
10009fa6:	lea    eax,[ebp-0x38]
10009fa9:	call   0x10008fd0
10009fae:	mov    DWORD PTR [ebp-0x4],0xffffffff
10009fb5:	mov    eax,DWORD PTR [ebp-0x28]
10009fb8:	mov    DWORD PTR [ebp-0x1fc],eax
10009fbe:	mov    ecx,DWORD PTR [ebp-0x1fc]
10009fc4:	mov    DWORD PTR [ebp-0x1f8],ecx
10009fca:	cmp    DWORD PTR [ebp-0x1f8],0x0
10009fd1:	je     0x10009ff0
10009fd3:	push   0x1
10009fd5:	mov    edx,DWORD PTR [ebp-0x1f8]
10009fdb:	mov    eax,DWORD PTR [edx]
10009fdd:	mov    ecx,DWORD PTR [ebp-0x1f8]
10009fe3:	mov    edx,DWORD PTR [eax+0x4]
10009fe6:	call   edx
10009fe8:	mov    DWORD PTR [ebp-0x230],eax
10009fee:	jmp    0x10009ffa
10009ff0:	mov    DWORD PTR [ebp-0x230],0x0
10009ffa:	mov    al,BYTE PTR [ebp-0xf9]
1000a000:	mov    ecx,DWORD PTR [ebp-0xc]
1000a003:	mov    DWORD PTR fs:0x0,ecx
1000a00a:	pop    ecx
1000a00b:	pop    edi
1000a00c:	pop    esi
1000a00d:	pop    ebx
1000a00e:	mov    ecx,DWORD PTR [ebp-0x3c]
1000a011:	xor    ecx,ebp
1000a013:	call   0x10015b2b
1000a018:	mov    esp,ebp
1000a01a:	pop    ebp
1000a01b:	ret    
1000a01c:	int3   
1000a01d:	int3   
1000a01e:	int3   
1000a01f:	int3   
1000a020:	push   ebp
1000a021:	mov    ebp,esp
1000a023:	push   ecx
1000a024:	mov    DWORD PTR [ebp-0x4],ecx
1000a027:	mov    eax,DWORD PTR [ebp-0x4]
1000a02a:	mov    ecx,DWORD PTR [ebp+0x8]
1000a02d:	mov    DWORD PTR [eax],ecx
1000a02f:	mov    eax,DWORD PTR [ebp-0x4]
1000a032:	mov    esp,ebp
1000a034:	pop    ebp
1000a035:	ret    0x4
1000a038:	int3   
1000a039:	int3   
1000a03a:	int3   
1000a03b:	int3   
1000a03c:	int3   
1000a03d:	int3   
1000a03e:	int3   
1000a03f:	int3   
1000a040:	push   ebp
1000a041:	mov    ebp,esp
1000a043:	sub    esp,0x14
1000a046:	mov    DWORD PTR [ebp-0x10],ecx
1000a049:	mov    eax,DWORD PTR [ebp-0x10]
1000a04c:	mov    ecx,DWORD PTR [eax]
1000a04e:	mov    DWORD PTR [ebp-0x8],ecx
1000a051:	mov    edx,DWORD PTR [ebp-0x8]
1000a054:	mov    DWORD PTR [ebp-0x4],edx
1000a057:	cmp    DWORD PTR [ebp-0x4],0x0
1000a05b:	je     0x1000a083
1000a05d:	mov    eax,DWORD PTR [ebp-0x4]
1000a060:	call   0x10008fd0
1000a065:	mov    eax,0x1
1000a06a:	and    eax,0x1
1000a06d:	je     0x1000a07b
1000a06f:	mov    ecx,DWORD PTR [ebp-0x4]
1000a072:	push   ecx
1000a073:	call   0x10015b26
1000a078:	add    esp,0x4
1000a07b:	mov    edx,DWORD PTR [ebp-0x4]
1000a07e:	mov    DWORD PTR [ebp-0x14],edx
1000a081:	jmp    0x1000a08a
1000a083:	mov    DWORD PTR [ebp-0x14],0x0
1000a08a:	mov    esp,ebp
1000a08c:	pop    ebp
1000a08d:	ret    
1000a08e:	int3   
1000a08f:	int3   
1000a090:	push   ebp
1000a091:	mov    ebp,esp
1000a093:	sub    esp,0x8
1000a096:	mov    DWORD PTR [ebp-0x8],ecx
1000a099:	mov    eax,DWORD PTR [ebp-0x8]
1000a09c:	mov    ecx,DWORD PTR [eax]
1000a09e:	mov    DWORD PTR [ebp-0x4],ecx
1000a0a1:	mov    eax,DWORD PTR [ebp-0x4]
1000a0a4:	mov    esp,ebp
1000a0a6:	pop    ebp
1000a0a7:	ret    
1000a0a8:	int3   
1000a0a9:	int3   
1000a0aa:	int3   
1000a0ab:	int3   
1000a0ac:	int3   
1000a0ad:	int3   
1000a0ae:	int3   
1000a0af:	int3   
1000a0b0:	push   ebp
1000a0b1:	mov    ebp,esp
1000a0b3:	sub    esp,0x14
1000a0b6:	mov    DWORD PTR [ebp-0x10],ecx
1000a0b9:	mov    eax,DWORD PTR [ebp-0x10]
1000a0bc:	mov    ecx,DWORD PTR [ebp+0x8]
1000a0bf:	cmp    ecx,DWORD PTR [eax]
1000a0c1:	je     0x1000a104
1000a0c3:	mov    edx,DWORD PTR [ebp-0x10]
1000a0c6:	mov    eax,DWORD PTR [edx]
1000a0c8:	mov    DWORD PTR [ebp-0x8],eax
1000a0cb:	mov    ecx,DWORD PTR [ebp-0x8]
1000a0ce:	mov    DWORD PTR [ebp-0x4],ecx
1000a0d1:	cmp    DWORD PTR [ebp-0x4],0x0
1000a0d5:	je     0x1000a0fd
1000a0d7:	mov    eax,DWORD PTR [ebp-0x4]
1000a0da:	call   0x10008fd0
1000a0df:	mov    edx,0x1
1000a0e4:	and    edx,0x1
1000a0e7:	je     0x1000a0f5
1000a0e9:	mov    eax,DWORD PTR [ebp-0x4]
1000a0ec:	push   eax
1000a0ed:	call   0x10015b26
1000a0f2:	add    esp,0x4
1000a0f5:	mov    ecx,DWORD PTR [ebp-0x4]
1000a0f8:	mov    DWORD PTR [ebp-0x14],ecx
1000a0fb:	jmp    0x1000a104
1000a0fd:	mov    DWORD PTR [ebp-0x14],0x0
1000a104:	mov    edx,DWORD PTR [ebp-0x10]
1000a107:	mov    eax,DWORD PTR [ebp+0x8]
1000a10a:	mov    DWORD PTR [edx],eax
1000a10c:	mov    esp,ebp
1000a10e:	pop    ebp
1000a10f:	ret    0x4
1000a112:	int3   
1000a113:	int3   
1000a114:	int3   
1000a115:	int3   
1000a116:	int3   
1000a117:	int3   
1000a118:	int3   
1000a119:	int3   
1000a11a:	int3   
1000a11b:	int3   
1000a11c:	int3   
1000a11d:	int3   
1000a11e:	int3   
1000a11f:	int3   
1000a120:	push   ebp
1000a121:	mov    ebp,esp
1000a123:	sub    esp,0x18
1000a126:	mov    DWORD PTR [ebp-0x18],ecx
1000a129:	lea    eax,[ebp-0x12]
1000a12c:	mov    DWORD PTR [ebp-0x8],eax
1000a12f:	lea    ecx,[ebp-0x11]
1000a132:	mov    DWORD PTR [ebp-0x10],ecx
1000a135:	mov    edx,DWORD PTR [ebp-0x18]
1000a138:	mov    DWORD PTR [edx+0x4],0x0
1000a13f:	mov    eax,DWORD PTR [ebp-0x18]
1000a142:	mov    DWORD PTR [eax+0x8],0x0
1000a149:	mov    ecx,DWORD PTR [ebp-0x18]
1000a14c:	mov    DWORD PTR [ecx+0xc],0x0
1000a153:	mov    edx,DWORD PTR [ebp-0x18]
1000a156:	mov    DWORD PTR [edx+0x10],0x0
1000a15d:	mov    eax,DWORD PTR [ebp-0x18]
1000a160:	mov    esp,ebp
1000a162:	pop    ebp
1000a163:	ret    
1000a164:	int3   
1000a165:	int3   
1000a166:	int3   
1000a167:	int3   
1000a168:	int3   
1000a169:	int3   
1000a16a:	int3   
1000a16b:	int3   
1000a16c:	int3   
1000a16d:	int3   
1000a16e:	int3   
1000a16f:	int3   
1000a170:	push   ebp
1000a171:	mov    ebp,esp
1000a173:	sub    esp,0x8
1000a176:	mov    DWORD PTR [ebp-0x8],ecx
1000a179:	mov    eax,DWORD PTR [ebp-0x8]
1000a17c:	mov    ecx,DWORD PTR [eax+0x10]
1000a17f:	mov    DWORD PTR [ebp-0x4],ecx
1000a182:	mov    eax,DWORD PTR [ebp-0x4]
1000a185:	mov    esp,ebp
1000a187:	pop    ebp
1000a188:	ret    
1000a189:	int3   
1000a18a:	int3   
1000a18b:	int3   
1000a18c:	int3   
1000a18d:	int3   
1000a18e:	int3   
1000a18f:	int3   
1000a190:	push   ebp
1000a191:	mov    ebp,esp
1000a193:	sub    esp,0x20
1000a196:	mov    DWORD PTR [ebp-0x20],ecx
1000a199:	lea    eax,[ebp-0xc]
1000a19c:	push   eax
1000a19d:	mov    ecx,DWORD PTR [ebp-0x20]
1000a1a0:	call   0x1000a560
1000a1a5:	mov    DWORD PTR [ebp-0x1c],eax
1000a1a8:	mov    ecx,DWORD PTR [ebp-0x1c]
1000a1ab:	call   0x1000aaa0
1000a1b0:	mov    esp,ebp
1000a1b2:	pop    ebp
1000a1b3:	ret    
1000a1b4:	int3   
1000a1b5:	int3   
1000a1b6:	int3   
1000a1b7:	int3   
1000a1b8:	int3   
1000a1b9:	int3   
1000a1ba:	int3   
1000a1bb:	int3   
1000a1bc:	int3   
1000a1bd:	int3   
1000a1be:	int3   
1000a1bf:	int3   
1000a1c0:	push   ebp
1000a1c1:	mov    ebp,esp
1000a1c3:	sub    esp,0xc8
1000a1c9:	mov    DWORD PTR [ebp-0xc8],ecx
1000a1cf:	mov    eax,DWORD PTR [ebp+0x8]
1000a1d2:	push   eax
1000a1d3:	mov    ecx,DWORD PTR [ebp-0xc8]
1000a1d9:	call   0x1000a350
1000a1de:	mov    esp,ebp
1000a1e0:	pop    ebp
1000a1e1:	ret    0x4
1000a1e4:	int3   
1000a1e5:	int3   
1000a1e6:	int3   
1000a1e7:	int3   
1000a1e8:	int3   
1000a1e9:	int3   
1000a1ea:	int3   
1000a1eb:	int3   
1000a1ec:	int3   
1000a1ed:	int3   
1000a1ee:	int3   
1000a1ef:	int3   
1000a1f0:	push   ebp
1000a1f1:	mov    ebp,esp
1000a1f3:	sub    esp,0x8
1000a1f6:	mov    DWORD PTR [ebp-0x8],ecx
1000a1f9:	mov    ecx,DWORD PTR [ebp-0x8]
1000a1fc:	call   0x1000a2d0
1000a201:	mov    esp,ebp
1000a203:	pop    ebp
1000a204:	ret    
1000a205:	int3   
1000a206:	int3   
1000a207:	int3   
1000a208:	int3   
1000a209:	int3   
1000a20a:	int3   
1000a20b:	int3   
1000a20c:	int3   
1000a20d:	int3   
1000a20e:	int3   
1000a20f:	int3   
1000a210:	push   ebp
1000a211:	mov    ebp,esp
1000a213:	sub    esp,0x1c
1000a216:	mov    DWORD PTR [ebp-0x1c],ecx
1000a219:	mov    ecx,DWORD PTR [ebp-0x1c]
1000a21c:	call   0x1000a4b0
1000a221:	mov    esp,ebp
1000a223:	pop    ebp
1000a224:	ret    
1000a225:	int3   
1000a226:	int3   
1000a227:	int3   
1000a228:	int3   
1000a229:	int3   
1000a22a:	int3   
1000a22b:	int3   
1000a22c:	int3   
1000a22d:	int3   
1000a22e:	int3   
1000a22f:	int3   
1000a230:	push   ebp
1000a231:	mov    ebp,esp
1000a233:	sub    esp,0x10
1000a236:	mov    DWORD PTR [ebp-0xc],ecx
1000a239:	mov    eax,DWORD PTR [ebp-0xc]
1000a23c:	mov    ecx,DWORD PTR [eax]
1000a23e:	mov    DWORD PTR [ebp-0x8],ecx
1000a241:	mov    edx,DWORD PTR [ebp-0x8]
1000a244:	mov    DWORD PTR [ebp-0x4],edx
1000a247:	cmp    DWORD PTR [ebp-0x4],0x0
1000a24b:	je     0x1000a261
1000a24d:	push   0x1
1000a24f:	mov    eax,DWORD PTR [ebp-0x4]
1000a252:	mov    edx,DWORD PTR [eax]
1000a254:	mov    ecx,DWORD PTR [ebp-0x4]
1000a257:	mov    eax,DWORD PTR [edx+0x4]
1000a25a:	call   eax
1000a25c:	mov    DWORD PTR [ebp-0x10],eax
1000a25f:	jmp    0x1000a268
1000a261:	mov    DWORD PTR [ebp-0x10],0x0
1000a268:	mov    esp,ebp
1000a26a:	pop    ebp
1000a26b:	ret    
1000a26c:	int3   
1000a26d:	int3   
1000a26e:	int3   
1000a26f:	int3   
1000a270:	push   ebp
1000a271:	mov    ebp,esp
1000a273:	push   ecx
1000a274:	mov    DWORD PTR [ebp-0x4],ecx
1000a277:	mov    eax,DWORD PTR [ebp-0x4]
1000a27a:	mov    eax,DWORD PTR [eax]
1000a27c:	mov    esp,ebp
1000a27e:	pop    ebp
1000a27f:	ret    
1000a280:	push   ebp
1000a281:	mov    ebp,esp
1000a283:	sub    esp,0x10
1000a286:	mov    DWORD PTR [ebp-0xc],ecx
1000a289:	mov    eax,DWORD PTR [ebp-0xc]
1000a28c:	mov    ecx,DWORD PTR [ebp+0x8]
1000a28f:	cmp    ecx,DWORD PTR [eax]
1000a291:	je     0x1000a2c2
1000a293:	mov    edx,DWORD PTR [ebp-0xc]
1000a296:	mov    eax,DWORD PTR [edx]
1000a298:	mov    DWORD PTR [ebp-0x8],eax
1000a29b:	mov    ecx,DWORD PTR [ebp-0x8]
1000a29e:	mov    DWORD PTR [ebp-0x4],ecx
1000a2a1:	cmp    DWORD PTR [ebp-0x4],0x0
1000a2a5:	je     0x1000a2bb
1000a2a7:	push   0x1
1000a2a9:	mov    edx,DWORD PTR [ebp-0x4]
1000a2ac:	mov    eax,DWORD PTR [edx]
1000a2ae:	mov    ecx,DWORD PTR [ebp-0x4]
1000a2b1:	mov    edx,DWORD PTR [eax+0x4]
1000a2b4:	call   edx
1000a2b6:	mov    DWORD PTR [ebp-0x10],eax
1000a2b9:	jmp    0x1000a2c2
1000a2bb:	mov    DWORD PTR [ebp-0x10],0x0
1000a2c2:	mov    eax,DWORD PTR [ebp-0xc]
1000a2c5:	mov    ecx,DWORD PTR [ebp+0x8]
1000a2c8:	mov    DWORD PTR [eax],ecx
1000a2ca:	mov    esp,ebp
1000a2cc:	pop    ebp
1000a2cd:	ret    0x4
1000a2d0:	push   ebp
1000a2d1:	mov    ebp,esp
1000a2d3:	sub    esp,0x8
1000a2d6:	mov    DWORD PTR [ebp-0x8],ecx
1000a2d9:	mov    eax,DWORD PTR [ebp-0x8]
1000a2dc:	xor    ecx,ecx
1000a2de:	cmp    DWORD PTR [eax+0x10],0x0
1000a2e2:	sete   cl
1000a2e5:	movzx  edx,cl
1000a2e8:	test   edx,edx
1000a2ea:	jne    0x1000a344
1000a2ec:	mov    eax,DWORD PTR [ebp-0x8]
1000a2ef:	mov    ecx,DWORD PTR [eax+0xc]
1000a2f2:	shr    ecx,0x2
1000a2f5:	mov    DWORD PTR [ebp-0x4],ecx
1000a2f8:	mov    edx,DWORD PTR [ebp-0x8]
1000a2fb:	mov    eax,DWORD PTR [edx+0xc]
1000a2fe:	add    eax,0x1
1000a301:	mov    ecx,DWORD PTR [ebp-0x8]
1000a304:	mov    DWORD PTR [ecx+0xc],eax
1000a307:	mov    edx,DWORD PTR [ebp-0x8]
1000a30a:	mov    eax,DWORD PTR [edx+0x8]
1000a30d:	shl    eax,0x2
1000a310:	mov    ecx,DWORD PTR [ebp-0x8]
1000a313:	cmp    eax,DWORD PTR [ecx+0xc]
1000a316:	ja     0x1000a322
1000a318:	mov    edx,DWORD PTR [ebp-0x8]
1000a31b:	mov    DWORD PTR [edx+0xc],0x0
1000a322:	mov    eax,DWORD PTR [ebp-0x8]
1000a325:	mov    ecx,DWORD PTR [eax+0x10]
1000a328:	sub    ecx,0x1
1000a32b:	mov    edx,DWORD PTR [ebp-0x8]
1000a32e:	mov    DWORD PTR [edx+0x10],ecx
1000a331:	mov    eax,DWORD PTR [ebp-0x8]
1000a334:	cmp    DWORD PTR [eax+0x10],0x0
1000a338:	jne    0x1000a344
1000a33a:	mov    ecx,DWORD PTR [ebp-0x8]
1000a33d:	mov    DWORD PTR [ecx+0xc],0x0
1000a344:	mov    esp,ebp
1000a346:	pop    ebp
1000a347:	ret    
1000a348:	int3   
1000a349:	int3   
1000a34a:	int3   
1000a34b:	int3   
1000a34c:	int3   
1000a34d:	int3   
1000a34e:	int3   
1000a34f:	int3   
1000a350:	push   ebp
1000a351:	mov    ebp,esp
1000a353:	sub    esp,0xe8
1000a359:	push   esi
1000a35a:	mov    DWORD PTR [ebp-0xe4],ecx
1000a360:	mov    eax,DWORD PTR [ebp-0xe4]
1000a366:	mov    eax,DWORD PTR [eax+0xc]
1000a369:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a36f:	add    eax,DWORD PTR [ecx+0x10]
1000a372:	xor    edx,edx
1000a374:	mov    ecx,0x4
1000a379:	div    ecx
1000a37b:	test   edx,edx
1000a37d:	jne    0x1000a3a6
1000a37f:	mov    edx,DWORD PTR [ebp-0xe4]
1000a385:	mov    eax,DWORD PTR [edx+0x10]
1000a388:	add    eax,0x4
1000a38b:	shr    eax,0x2
1000a38e:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a394:	cmp    DWORD PTR [ecx+0x8],eax
1000a397:	ja     0x1000a3a6
1000a399:	push   0x1
1000a39b:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a3a1:	call   0x1000a650
1000a3a6:	mov    edx,DWORD PTR [ebp-0xe4]
1000a3ac:	mov    eax,DWORD PTR [edx+0xc]
1000a3af:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a3b5:	add    eax,DWORD PTR [ecx+0x10]
1000a3b8:	mov    DWORD PTR [ebp-0x4],eax
1000a3bb:	mov    edx,DWORD PTR [ebp-0x4]
1000a3be:	shr    edx,0x2
1000a3c1:	mov    DWORD PTR [ebp-0x8],edx
1000a3c4:	mov    eax,DWORD PTR [ebp-0xe4]
1000a3ca:	mov    ecx,DWORD PTR [eax+0x8]
1000a3cd:	cmp    ecx,DWORD PTR [ebp-0x8]
1000a3d0:	ja     0x1000a3e1
1000a3d2:	mov    edx,DWORD PTR [ebp-0xe4]
1000a3d8:	mov    eax,DWORD PTR [ebp-0x8]
1000a3db:	sub    eax,DWORD PTR [edx+0x8]
1000a3de:	mov    DWORD PTR [ebp-0x8],eax
1000a3e1:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a3e7:	mov    edx,DWORD PTR [ecx+0x4]
1000a3ea:	mov    eax,DWORD PTR [ebp-0x8]
1000a3ed:	cmp    DWORD PTR [edx+eax*4],0x0
1000a3f1:	jne    0x1000a412
1000a3f3:	push   0x4
1000a3f5:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a3fb:	add    ecx,0x1
1000a3fe:	call   0x1000aa00
1000a403:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a409:	mov    edx,DWORD PTR [ecx+0x4]
1000a40c:	mov    ecx,DWORD PTR [ebp-0x8]
1000a40f:	mov    DWORD PTR [edx+ecx*4],eax
1000a412:	mov    edx,DWORD PTR [ebp-0xe4]
1000a418:	mov    ecx,DWORD PTR [edx+0x4]
1000a41b:	mov    eax,DWORD PTR [ebp-0x4]
1000a41e:	xor    edx,edx
1000a420:	mov    esi,0x4
1000a425:	div    esi
1000a427:	mov    eax,DWORD PTR [ebp-0x8]
1000a42a:	mov    ecx,DWORD PTR [ecx+eax*4]
1000a42d:	lea    edx,[ecx+edx*4]
1000a430:	mov    DWORD PTR [ebp-0xe0],edx
1000a436:	mov    eax,DWORD PTR [ebp-0xe0]
1000a43c:	mov    DWORD PTR [ebp-0xd8],eax
1000a442:	mov    ecx,DWORD PTR [ebp-0xd8]
1000a448:	push   ecx
1000a449:	push   0x4
1000a44b:	call   0x10001270
1000a450:	add    esp,0x8
1000a453:	mov    DWORD PTR [ebp-0xdc],eax
1000a459:	cmp    DWORD PTR [ebp-0xdc],0x0
1000a460:	je     0x1000a47d
1000a462:	mov    edx,DWORD PTR [ebp-0xdc]
1000a468:	mov    eax,DWORD PTR [ebp+0x8]
1000a46b:	mov    ecx,DWORD PTR [eax]
1000a46d:	mov    DWORD PTR [edx],ecx
1000a46f:	mov    edx,DWORD PTR [ebp-0xdc]
1000a475:	mov    DWORD PTR [ebp-0xe8],edx
1000a47b:	jmp    0x1000a487
1000a47d:	mov    DWORD PTR [ebp-0xe8],0x0
1000a487:	mov    eax,DWORD PTR [ebp-0xe4]
1000a48d:	mov    ecx,DWORD PTR [eax+0x10]
1000a490:	add    ecx,0x1
1000a493:	mov    edx,DWORD PTR [ebp-0xe4]
1000a499:	mov    DWORD PTR [edx+0x10],ecx
1000a49c:	pop    esi
1000a49d:	mov    esp,ebp
1000a49f:	pop    ebp
1000a4a0:	ret    0x4
1000a4a3:	int3   
1000a4a4:	int3   
1000a4a5:	int3   
1000a4a6:	int3   
1000a4a7:	int3   
1000a4a8:	int3   
1000a4a9:	int3   
1000a4aa:	int3   
1000a4ab:	int3   
1000a4ac:	int3   
1000a4ad:	int3   
1000a4ae:	int3   
1000a4af:	int3   
1000a4b0:	push   ebp
1000a4b1:	mov    ebp,esp
1000a4b3:	sub    esp,0x1c
1000a4b6:	mov    DWORD PTR [ebp-0x1c],ecx
1000a4b9:	mov    eax,DWORD PTR [ebp-0x1c]
1000a4bc:	xor    ecx,ecx
1000a4be:	cmp    DWORD PTR [eax+0x10],0x0
1000a4c2:	sete   cl
1000a4c5:	movzx  edx,cl
1000a4c8:	test   edx,edx
1000a4ca:	jne    0x1000a4d6
1000a4cc:	mov    ecx,DWORD PTR [ebp-0x1c]
1000a4cf:	call   0x1000a5d0
1000a4d4:	jmp    0x1000a4b9
1000a4d6:	mov    eax,DWORD PTR [ebp-0x1c]
1000a4d9:	mov    ecx,DWORD PTR [eax+0x8]
1000a4dc:	mov    DWORD PTR [ebp-0x4],ecx
1000a4df:	cmp    DWORD PTR [ebp-0x4],0x0
1000a4e3:	jbe    0x1000a51a
1000a4e5:	mov    edx,DWORD PTR [ebp-0x4]
1000a4e8:	sub    edx,0x1
1000a4eb:	mov    DWORD PTR [ebp-0x4],edx
1000a4ee:	mov    eax,DWORD PTR [ebp-0x1c]
1000a4f1:	mov    ecx,DWORD PTR [eax+0x4]
1000a4f4:	mov    edx,DWORD PTR [ebp-0x4]
1000a4f7:	cmp    DWORD PTR [ecx+edx*4],0x0
1000a4fb:	je     0x1000a518
1000a4fd:	mov    eax,DWORD PTR [ebp-0x1c]
1000a500:	mov    ecx,DWORD PTR [eax+0x4]
1000a503:	mov    edx,DWORD PTR [ebp-0x4]
1000a506:	mov    eax,DWORD PTR [ecx+edx*4]
1000a509:	mov    DWORD PTR [ebp-0x10],eax
1000a50c:	mov    ecx,DWORD PTR [ebp-0x10]
1000a50f:	push   ecx
1000a510:	call   0x10015b26
1000a515:	add    esp,0x4
1000a518:	jmp    0x1000a4df
1000a51a:	mov    edx,DWORD PTR [ebp-0x1c]
1000a51d:	cmp    DWORD PTR [edx+0x4],0x0
1000a521:	je     0x1000a541
1000a523:	mov    eax,DWORD PTR [ebp-0x1c]
1000a526:	mov    ecx,DWORD PTR [eax+0x8]
1000a529:	mov    DWORD PTR [ebp-0x18],ecx
1000a52c:	mov    edx,DWORD PTR [ebp-0x1c]
1000a52f:	mov    eax,DWORD PTR [edx+0x4]
1000a532:	mov    DWORD PTR [ebp-0x14],eax
1000a535:	mov    ecx,DWORD PTR [ebp-0x14]
1000a538:	push   ecx
1000a539:	call   0x10015b26
1000a53e:	add    esp,0x4
1000a541:	mov    edx,DWORD PTR [ebp-0x1c]
1000a544:	mov    DWORD PTR [edx+0x8],0x0
1000a54b:	mov    eax,DWORD PTR [ebp-0x1c]
1000a54e:	mov    DWORD PTR [eax+0x4],0x0
1000a555:	mov    esp,ebp
1000a557:	pop    ebp
1000a558:	ret    
1000a559:	int3   
1000a55a:	int3   
1000a55b:	int3   
1000a55c:	int3   
1000a55d:	int3   
1000a55e:	int3   
1000a55f:	int3   
1000a560:	push   ebp
1000a561:	mov    ebp,esp
1000a563:	sub    esp,0x8
1000a566:	mov    DWORD PTR [ebp-0x8],ecx
1000a569:	mov    eax,DWORD PTR [ebp-0x8]
1000a56c:	mov    ecx,DWORD PTR [eax+0xc]
1000a56f:	mov    DWORD PTR [ebp-0x4],ecx
1000a572:	mov    ecx,DWORD PTR [ebp+0x8]
1000a575:	call   0x10001380
1000a57a:	mov    edx,0x1
1000a57f:	test   edx,edx
1000a581:	je     0x1000a5aa
1000a583:	cmp    DWORD PTR [ebp-0x8],0x0
1000a587:	je     0x1000a5a5
1000a589:	mov    eax,DWORD PTR [ebp-0x8]
1000a58c:	mov    ecx,DWORD PTR [eax+0xc]
1000a58f:	cmp    ecx,DWORD PTR [ebp-0x4]
1000a592:	ja     0x1000a5a5
1000a594:	mov    edx,DWORD PTR [ebp-0x8]
1000a597:	mov    eax,DWORD PTR [edx+0xc]
1000a59a:	mov    ecx,DWORD PTR [ebp-0x8]
1000a59d:	add    eax,DWORD PTR [ecx+0x10]
1000a5a0:	cmp    DWORD PTR [ebp-0x4],eax
1000a5a3:	jbe    0x1000a5aa
1000a5a5:	call   0x10016193
1000a5aa:	mov    edx,DWORD PTR [ebp+0x8]
1000a5ad:	mov    eax,DWORD PTR [ebp-0x8]
1000a5b0:	mov    DWORD PTR [edx+0x4],eax
1000a5b3:	mov    ecx,DWORD PTR [ebp+0x8]
1000a5b6:	mov    edx,DWORD PTR [ebp-0x4]
1000a5b9:	mov    DWORD PTR [ecx+0x8],edx
1000a5bc:	mov    eax,DWORD PTR [ebp+0x8]
1000a5bf:	mov    esp,ebp
1000a5c1:	pop    ebp
1000a5c2:	ret    0x4
1000a5c5:	int3   
1000a5c6:	int3   
1000a5c7:	int3   
1000a5c8:	int3   
1000a5c9:	int3   
1000a5ca:	int3   
1000a5cb:	int3   
1000a5cc:	int3   
1000a5cd:	int3   
1000a5ce:	int3   
1000a5cf:	int3   
1000a5d0:	push   ebp
1000a5d1:	mov    ebp,esp
1000a5d3:	sub    esp,0xc
1000a5d6:	mov    DWORD PTR [ebp-0xc],ecx
1000a5d9:	mov    eax,DWORD PTR [ebp-0xc]
1000a5dc:	xor    ecx,ecx
1000a5de:	cmp    DWORD PTR [eax+0x10],0x0
1000a5e2:	sete   cl
1000a5e5:	movzx  edx,cl
1000a5e8:	test   edx,edx
1000a5ea:	jne    0x1000a641
1000a5ec:	mov    eax,DWORD PTR [ebp-0xc]
1000a5ef:	mov    ecx,DWORD PTR [eax+0x10]
1000a5f2:	mov    edx,DWORD PTR [ebp-0xc]
1000a5f5:	mov    eax,DWORD PTR [edx+0xc]
1000a5f8:	lea    ecx,[ecx+eax*1-0x1]
1000a5fc:	mov    DWORD PTR [ebp-0x4],ecx
1000a5ff:	mov    edx,DWORD PTR [ebp-0x4]
1000a602:	shr    edx,0x2
1000a605:	mov    DWORD PTR [ebp-0x8],edx
1000a608:	mov    eax,DWORD PTR [ebp-0xc]
1000a60b:	mov    ecx,DWORD PTR [eax+0x8]
1000a60e:	cmp    ecx,DWORD PTR [ebp-0x8]
1000a611:	ja     0x1000a61f
1000a613:	mov    edx,DWORD PTR [ebp-0xc]
1000a616:	mov    eax,DWORD PTR [ebp-0x8]
1000a619:	sub    eax,DWORD PTR [edx+0x8]
1000a61c:	mov    DWORD PTR [ebp-0x8],eax
1000a61f:	mov    ecx,DWORD PTR [ebp-0xc]
1000a622:	mov    edx,DWORD PTR [ecx+0x10]
1000a625:	sub    edx,0x1
1000a628:	mov    eax,DWORD PTR [ebp-0xc]
1000a62b:	mov    DWORD PTR [eax+0x10],edx
1000a62e:	mov    ecx,DWORD PTR [ebp-0xc]
1000a631:	cmp    DWORD PTR [ecx+0x10],0x0
1000a635:	jne    0x1000a641
1000a637:	mov    edx,DWORD PTR [ebp-0xc]
1000a63a:	mov    DWORD PTR [edx+0xc],0x0
1000a641:	mov    esp,ebp
1000a643:	pop    ebp
1000a644:	ret    
1000a645:	int3   
1000a646:	int3   
1000a647:	int3   
1000a648:	int3   
1000a649:	int3   
1000a64a:	int3   
1000a64b:	int3   
1000a64c:	int3   
1000a64d:	int3   
1000a64e:	int3   
1000a64f:	int3   
1000a650:	push   ebp
1000a651:	mov    ebp,esp
1000a653:	sub    esp,0x168
1000a659:	mov    DWORD PTR [ebp-0x160],ecx
1000a65f:	mov    DWORD PTR [ebp-0x20],0x3fffffff
1000a666:	cmp    DWORD PTR [ebp-0x20],0x0
1000a66a:	jbe    0x1000a677
1000a66c:	mov    eax,DWORD PTR [ebp-0x20]
1000a66f:	mov    DWORD PTR [ebp-0x164],eax
1000a675:	jmp    0x1000a681
1000a677:	mov    DWORD PTR [ebp-0x164],0x1
1000a681:	mov    ecx,DWORD PTR [ebp-0x164]
1000a687:	shr    ecx,0x2
1000a68a:	mov    edx,DWORD PTR [ebp-0x160]
1000a690:	sub    ecx,DWORD PTR [edx+0x8]
1000a693:	cmp    ecx,DWORD PTR [ebp+0x8]
1000a696:	jae    0x1000a69d
1000a698:	call   0x1000aa20
1000a69d:	mov    eax,DWORD PTR [ebp-0x160]
1000a6a3:	mov    ecx,DWORD PTR [eax+0x8]
1000a6a6:	shr    ecx,1
1000a6a8:	mov    DWORD PTR [ebp-0x8],ecx
1000a6ab:	cmp    DWORD PTR [ebp-0x8],0x8
1000a6af:	jae    0x1000a6b8
1000a6b1:	mov    DWORD PTR [ebp-0x8],0x8
1000a6b8:	mov    edx,DWORD PTR [ebp+0x8]
1000a6bb:	cmp    edx,DWORD PTR [ebp-0x8]
1000a6be:	jae    0x1000a6ff
1000a6c0:	mov    DWORD PTR [ebp-0x6c],0x3fffffff
1000a6c7:	cmp    DWORD PTR [ebp-0x6c],0x0
1000a6cb:	jbe    0x1000a6d8
1000a6cd:	mov    eax,DWORD PTR [ebp-0x6c]
1000a6d0:	mov    DWORD PTR [ebp-0x168],eax
1000a6d6:	jmp    0x1000a6e2
1000a6d8:	mov    DWORD PTR [ebp-0x168],0x1
1000a6e2:	mov    ecx,DWORD PTR [ebp-0x168]
1000a6e8:	shr    ecx,0x2
1000a6eb:	sub    ecx,DWORD PTR [ebp-0x8]
1000a6ee:	mov    edx,DWORD PTR [ebp-0x160]
1000a6f4:	cmp    DWORD PTR [edx+0x8],ecx
1000a6f7:	ja     0x1000a6ff
1000a6f9:	mov    eax,DWORD PTR [ebp-0x8]
1000a6fc:	mov    DWORD PTR [ebp+0x8],eax
1000a6ff:	mov    ecx,DWORD PTR [ebp-0x160]
1000a705:	mov    edx,DWORD PTR [ecx+0xc]
1000a708:	shr    edx,0x2
1000a70b:	mov    DWORD PTR [ebp-0x4],edx
1000a70e:	mov    eax,DWORD PTR [ebp-0x160]
1000a714:	mov    ecx,DWORD PTR [eax+0x8]
1000a717:	add    ecx,DWORD PTR [ebp+0x8]
1000a71a:	mov    DWORD PTR [ebp-0x7c],ecx
1000a71d:	push   0x0
1000a71f:	mov    edx,DWORD PTR [ebp-0x7c]
1000a722:	push   edx
1000a723:	call   0x1000abd0
1000a728:	add    esp,0x8
1000a72b:	mov    DWORD PTR [ebp-0x10],eax
1000a72e:	mov    eax,DWORD PTR [ebp-0x4]
1000a731:	mov    ecx,DWORD PTR [ebp-0x10]
1000a734:	lea    edx,[ecx+eax*4]
1000a737:	mov    DWORD PTR [ebp-0xc],edx
1000a73a:	mov    eax,DWORD PTR [ebp-0x160]
1000a740:	push   eax
1000a741:	mov    ecx,DWORD PTR [ebp-0xc]
1000a744:	push   ecx
1000a745:	mov    edx,DWORD PTR [ebp-0x160]
1000a74b:	mov    eax,DWORD PTR [edx+0x8]
1000a74e:	mov    ecx,DWORD PTR [ebp-0x160]
1000a754:	mov    edx,DWORD PTR [ecx+0x4]
1000a757:	lea    eax,[edx+eax*4]
1000a75a:	push   eax
1000a75b:	mov    ecx,DWORD PTR [ebp-0x160]
1000a761:	mov    edx,DWORD PTR [ecx+0x4]
1000a764:	mov    eax,DWORD PTR [ebp-0x4]
1000a767:	lea    ecx,[edx+eax*4]
1000a76a:	push   ecx
1000a76b:	call   0x1000ab60
1000a770:	add    esp,0x10
1000a773:	mov    DWORD PTR [ebp-0xc],eax
1000a776:	mov    edx,DWORD PTR [ebp-0x4]
1000a779:	cmp    edx,DWORD PTR [ebp+0x8]
1000a77c:	ja     0x1000a8a4
1000a782:	mov    eax,DWORD PTR [ebp-0x160]
1000a788:	push   eax
1000a789:	mov    ecx,DWORD PTR [ebp-0xc]
1000a78c:	push   ecx
1000a78d:	mov    edx,DWORD PTR [ebp-0x160]
1000a793:	mov    eax,DWORD PTR [edx+0x4]
1000a796:	mov    ecx,DWORD PTR [ebp-0x4]
1000a799:	lea    edx,[eax+ecx*4]
1000a79c:	push   edx
1000a79d:	mov    eax,DWORD PTR [ebp-0x160]
1000a7a3:	mov    ecx,DWORD PTR [eax+0x4]
1000a7a6:	push   ecx
1000a7a7:	call   0x1000ab60
1000a7ac:	add    esp,0x10
1000a7af:	mov    DWORD PTR [ebp-0xc],eax
1000a7b2:	mov    DWORD PTR [ebp-0x14],0x0
1000a7b9:	mov    edx,DWORD PTR [ebp-0xc]
1000a7bc:	mov    DWORD PTR [ebp-0xd0],edx
1000a7c2:	xor    eax,eax
1000a7c4:	mov    BYTE PTR [ebp-0xba],al
1000a7ca:	mov    cl,BYTE PTR [ebp-0xbc]
1000a7d0:	mov    BYTE PTR [ebp-0xbb],cl
1000a7d6:	mov    dl,BYTE PTR [ebp-0xba]
1000a7dc:	mov    BYTE PTR [ebp-0xc9],dl
1000a7e2:	mov    eax,DWORD PTR [ebp-0xd0]
1000a7e8:	mov    DWORD PTR [ebp-0xc8],eax
1000a7ee:	mov    ecx,DWORD PTR [ebp-0xc8]
1000a7f4:	mov    DWORD PTR [ebp-0xc4],ecx
1000a7fa:	xor    edx,edx
1000a7fc:	mov    BYTE PTR [ebp-0xbd],dl
1000a802:	mov    al,BYTE PTR [ebp-0xbd]
1000a808:	push   eax
1000a809:	mov    cl,BYTE PTR [ebp-0xbe]
1000a80f:	push   ecx
1000a810:	lea    edx,[ebp-0x14]
1000a813:	push   edx
1000a814:	mov    eax,DWORD PTR [ebp+0x8]
1000a817:	sub    eax,DWORD PTR [ebp-0x4]
1000a81a:	push   eax
1000a81b:	mov    ecx,DWORD PTR [ebp-0xc4]
1000a821:	push   ecx
1000a822:	call   0x1000ad00
1000a827:	add    esp,0x14
1000a82a:	mov    DWORD PTR [ebp-0x18],0x0
1000a831:	mov    edx,DWORD PTR [ebp-0x10]
1000a834:	mov    DWORD PTR [ebp-0xe8],edx
1000a83a:	xor    eax,eax
1000a83c:	mov    BYTE PTR [ebp-0xd1],al
1000a842:	mov    cl,BYTE PTR [ebp-0xd3]
1000a848:	mov    BYTE PTR [ebp-0xd2],cl
1000a84e:	mov    dl,BYTE PTR [ebp-0xd1]
1000a854:	mov    BYTE PTR [ebp-0xe1],dl
1000a85a:	mov    eax,DWORD PTR [ebp-0xe8]
1000a860:	mov    DWORD PTR [ebp-0xe0],eax
1000a866:	mov    ecx,DWORD PTR [ebp-0xe0]
1000a86c:	mov    DWORD PTR [ebp-0xdc],ecx
1000a872:	xor    edx,edx
1000a874:	mov    BYTE PTR [ebp-0xd4],dl
1000a87a:	mov    al,BYTE PTR [ebp-0xd4]
1000a880:	push   eax
1000a881:	mov    cl,BYTE PTR [ebp-0xd5]
1000a887:	push   ecx
1000a888:	lea    edx,[ebp-0x18]
1000a88b:	push   edx
1000a88c:	mov    eax,DWORD PTR [ebp-0x4]
1000a88f:	push   eax
1000a890:	mov    ecx,DWORD PTR [ebp-0xdc]
1000a896:	push   ecx
1000a897:	call   0x1000ad00
1000a89c:	add    esp,0x14
1000a89f:	jmp    0x1000a95a
1000a8a4:	mov    edx,DWORD PTR [ebp-0x160]
1000a8aa:	push   edx
1000a8ab:	mov    eax,DWORD PTR [ebp-0xc]
1000a8ae:	push   eax
1000a8af:	mov    ecx,DWORD PTR [ebp-0x160]
1000a8b5:	mov    edx,DWORD PTR [ecx+0x4]
1000a8b8:	mov    eax,DWORD PTR [ebp+0x8]
1000a8bb:	lea    ecx,[edx+eax*4]
1000a8be:	push   ecx
1000a8bf:	mov    edx,DWORD PTR [ebp-0x160]
1000a8c5:	mov    eax,DWORD PTR [edx+0x4]
1000a8c8:	push   eax
1000a8c9:	call   0x1000ab60
1000a8ce:	add    esp,0x10
1000a8d1:	mov    ecx,DWORD PTR [ebp-0x160]
1000a8d7:	push   ecx
1000a8d8:	mov    edx,DWORD PTR [ebp-0x10]
1000a8db:	push   edx
1000a8dc:	mov    eax,DWORD PTR [ebp-0x160]
1000a8e2:	mov    ecx,DWORD PTR [eax+0x4]
1000a8e5:	mov    edx,DWORD PTR [ebp-0x4]
1000a8e8:	lea    eax,[ecx+edx*4]
1000a8eb:	push   eax
1000a8ec:	mov    ecx,DWORD PTR [ebp-0x160]
1000a8f2:	mov    edx,DWORD PTR [ecx+0x4]
1000a8f5:	mov    eax,DWORD PTR [ebp+0x8]
1000a8f8:	lea    ecx,[edx+eax*4]
1000a8fb:	push   ecx
1000a8fc:	call   0x1000ab60
1000a901:	add    esp,0x10
1000a904:	mov    DWORD PTR [ebp-0xc],eax
1000a907:	mov    DWORD PTR [ebp-0x1c],0x0
1000a90e:	mov    edx,DWORD PTR [ebp-0xc]
1000a911:	mov    DWORD PTR [ebp-0x148],edx
1000a917:	xor    eax,eax
1000a919:	mov    BYTE PTR [ebp-0x126],al
1000a91f:	mov    cl,BYTE PTR [ebp-0x128]
1000a925:	mov    BYTE PTR [ebp-0x127],cl
1000a92b:	mov    dl,BYTE PTR [ebp-0x126]
1000a931:	mov    BYTE PTR [ebp-0x141],dl
1000a937:	mov    eax,DWORD PTR [ebp-0x148]
1000a93d:	mov    DWORD PTR [ebp-0x140],eax
1000a943:	lea    ecx,[ebp-0x1c]
1000a946:	push   ecx
1000a947:	mov    edx,DWORD PTR [ebp+0x8]
1000a94a:	push   edx
1000a94b:	mov    eax,DWORD PTR [ebp-0x140]
1000a951:	push   eax
1000a952:	call   0x1000ac90
1000a957:	add    esp,0xc
1000a95a:	mov    ecx,DWORD PTR [ebp-0x160]
1000a960:	mov    edx,DWORD PTR [ecx+0x8]
1000a963:	mov    eax,DWORD PTR [ebp-0x160]
1000a969:	mov    ecx,DWORD PTR [eax+0x4]
1000a96c:	lea    edx,[ecx+edx*4]
1000a96f:	mov    DWORD PTR [ebp-0x154],edx
1000a975:	mov    eax,DWORD PTR [ebp-0x160]
1000a97b:	mov    ecx,DWORD PTR [eax+0x4]
1000a97e:	mov    edx,DWORD PTR [ebp-0x4]
1000a981:	lea    eax,[ecx+edx*4]
1000a984:	mov    DWORD PTR [ebp-0x150],eax
1000a98a:	mov    cl,BYTE PTR [ebp-0x14a]
1000a990:	mov    BYTE PTR [ebp-0x149],cl
1000a996:	mov    edx,DWORD PTR [ebp-0x160]
1000a99c:	cmp    DWORD PTR [edx+0x4],0x0
1000a9a0:	je     0x1000a9cf
1000a9a2:	mov    eax,DWORD PTR [ebp-0x160]
1000a9a8:	mov    ecx,DWORD PTR [eax+0x8]
1000a9ab:	mov    DWORD PTR [ebp-0x15c],ecx
1000a9b1:	mov    edx,DWORD PTR [ebp-0x160]
1000a9b7:	mov    eax,DWORD PTR [edx+0x4]
1000a9ba:	mov    DWORD PTR [ebp-0x158],eax
1000a9c0:	mov    ecx,DWORD PTR [ebp-0x158]
1000a9c6:	push   ecx
1000a9c7:	call   0x10015b26
1000a9cc:	add    esp,0x4
1000a9cf:	mov    edx,DWORD PTR [ebp-0x160]
1000a9d5:	mov    eax,DWORD PTR [ebp-0x10]
1000a9d8:	mov    DWORD PTR [edx+0x4],eax
1000a9db:	mov    ecx,DWORD PTR [ebp-0x160]
1000a9e1:	mov    edx,DWORD PTR [ecx+0x8]
1000a9e4:	add    edx,DWORD PTR [ebp+0x8]
1000a9e7:	mov    eax,DWORD PTR [ebp-0x160]
1000a9ed:	mov    DWORD PTR [eax+0x8],edx
1000a9f0:	mov    esp,ebp
1000a9f2:	pop    ebp
1000a9f3:	ret    0x4
1000a9f6:	int3   
1000a9f7:	int3   
1000a9f8:	int3   
1000a9f9:	int3   
1000a9fa:	int3   
1000a9fb:	int3   
1000a9fc:	int3   
1000a9fd:	int3   
1000a9fe:	int3   
1000a9ff:	int3   
1000aa00:	push   ebp
1000aa01:	mov    ebp,esp
1000aa03:	sub    esp,0x10
1000aa06:	mov    DWORD PTR [ebp-0x10],ecx
1000aa09:	push   0x0
1000aa0b:	mov    eax,DWORD PTR [ebp+0x8]
1000aa0e:	push   eax
1000aa0f:	call   0x1000abd0
1000aa14:	add    esp,0x8
1000aa17:	mov    esp,ebp
1000aa19:	pop    ebp
1000aa1a:	ret    0x4
1000aa1d:	int3   
1000aa1e:	int3   
1000aa1f:	int3   
1000aa20:	push   ebp
1000aa21:	mov    ebp,esp
1000aa23:	push   0xffffffff
1000aa25:	push   0x1002ac98
1000aa2a:	mov    eax,fs:0x0
1000aa30:	push   eax
1000aa31:	sub    esp,0x6c
1000aa34:	mov    eax,ds:0x100951fc
1000aa39:	xor    eax,ebp
1000aa3b:	push   eax
1000aa3c:	lea    eax,[ebp-0xc]
1000aa3f:	mov    fs:0x0,eax
1000aa45:	push   0x10084288
1000aa4a:	lea    ecx,[ebp-0x50]
1000aa4d:	call   0x10002b70
1000aa52:	mov    DWORD PTR [ebp-0x4],0x0
1000aa59:	lea    eax,[ebp-0x50]
1000aa5c:	push   eax
1000aa5d:	lea    ecx,[ebp-0x34]
1000aa60:	call   0x10001400
1000aa65:	push   0x10085d0c
1000aa6a:	lea    ecx,[ebp-0x34]
1000aa6d:	push   ecx
1000aa6e:	call   0x1001621e
1000aa73:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000aa7a:	lea    ecx,[ebp-0x50]
1000aa7d:	call   0x10002bb0
1000aa82:	mov    ecx,DWORD PTR [ebp-0xc]
1000aa85:	mov    DWORD PTR fs:0x0,ecx
1000aa8c:	pop    ecx
1000aa8d:	mov    esp,ebp
1000aa8f:	pop    ebp
1000aa90:	ret    
1000aa91:	int3   
1000aa92:	int3   
1000aa93:	int3   
1000aa94:	int3   
1000aa95:	int3   
1000aa96:	int3   
1000aa97:	int3   
1000aa98:	int3   
1000aa99:	int3   
1000aa9a:	int3   
1000aa9b:	int3   
1000aa9c:	int3   
1000aa9d:	int3   
1000aa9e:	int3   
1000aa9f:	int3   
1000aaa0:	push   ebp
1000aaa1:	mov    ebp,esp
1000aaa3:	sub    esp,0xc
1000aaa6:	mov    DWORD PTR [ebp-0xc],ecx
1000aaa9:	mov    eax,DWORD PTR [ebp-0xc]
1000aaac:	mov    ecx,DWORD PTR [eax+0x8]
1000aaaf:	shr    ecx,0x2
1000aab2:	mov    DWORD PTR [ebp-0x4],ecx
1000aab5:	mov    edx,DWORD PTR [ebp-0xc]
1000aab8:	mov    eax,DWORD PTR [edx+0x8]
1000aabb:	and    eax,0x3
1000aabe:	mov    DWORD PTR [ebp-0x8],eax
1000aac1:	mov    ecx,DWORD PTR [ebp-0xc]
1000aac4:	cmp    DWORD PTR [ecx+0x4],0x0
1000aac8:	jne    0x1000aacf
1000aaca:	call   0x10016193
1000aacf:	mov    edx,DWORD PTR [ebp-0xc]
1000aad2:	mov    eax,DWORD PTR [edx+0x4]
1000aad5:	mov    ecx,DWORD PTR [ebp-0xc]
1000aad8:	mov    edx,DWORD PTR [ecx+0x4]
1000aadb:	mov    eax,DWORD PTR [eax+0xc]
1000aade:	add    eax,DWORD PTR [edx+0x10]
1000aae1:	mov    ecx,DWORD PTR [ebp-0xc]
1000aae4:	cmp    DWORD PTR [ecx+0x8],eax
1000aae7:	jb     0x1000aaee
1000aae9:	call   0x10016193
1000aaee:	mov    edx,DWORD PTR [ebp-0xc]
1000aaf1:	mov    eax,DWORD PTR [edx+0x4]
1000aaf4:	mov    ecx,DWORD PTR [eax+0x8]
1000aaf7:	cmp    ecx,DWORD PTR [ebp-0x4]
1000aafa:	ja     0x1000ab0b
1000aafc:	mov    edx,DWORD PTR [ebp-0xc]
1000aaff:	mov    eax,DWORD PTR [edx+0x4]
1000ab02:	mov    ecx,DWORD PTR [ebp-0x4]
1000ab05:	sub    ecx,DWORD PTR [eax+0x8]
1000ab08:	mov    DWORD PTR [ebp-0x4],ecx
1000ab0b:	mov    edx,DWORD PTR [ebp-0xc]
1000ab0e:	mov    eax,DWORD PTR [edx+0x4]
1000ab11:	mov    ecx,DWORD PTR [eax+0x4]
1000ab14:	mov    edx,DWORD PTR [ebp-0x4]
1000ab17:	mov    eax,DWORD PTR [ecx+edx*4]
1000ab1a:	mov    ecx,DWORD PTR [ebp-0x8]
1000ab1d:	lea    eax,[eax+ecx*4]
1000ab20:	mov    esp,ebp
1000ab22:	pop    ebp
1000ab23:	ret    
1000ab24:	int3   
1000ab25:	int3   
1000ab26:	int3   
1000ab27:	int3   
1000ab28:	int3   
1000ab29:	int3   
1000ab2a:	int3   
1000ab2b:	int3   
1000ab2c:	int3   
1000ab2d:	int3   
1000ab2e:	int3   
1000ab2f:	int3   
1000ab30:	push   ebp
1000ab31:	mov    ebp,esp
1000ab33:	sub    esp,0x18
1000ab36:	lea    eax,[ebp+0x10]
1000ab39:	mov    DWORD PTR [ebp-0x4],eax
1000ab3c:	mov    ecx,DWORD PTR [ebp-0x4]
1000ab3f:	push   ecx
1000ab40:	mov    edx,DWORD PTR [ebp+0xc]
1000ab43:	push   edx
1000ab44:	mov    ecx,DWORD PTR [ebp+0x8]
1000ab47:	call   0x1000ac20
1000ab4c:	mov    DWORD PTR [ebp-0x4],0x0
1000ab53:	mov    esp,ebp
1000ab55:	pop    ebp
1000ab56:	ret    
1000ab57:	int3   
1000ab58:	int3   
1000ab59:	int3   
1000ab5a:	int3   
1000ab5b:	int3   
1000ab5c:	int3   
1000ab5d:	int3   
1000ab5e:	int3   
1000ab5f:	int3   
1000ab60:	push   ebp
1000ab61:	mov    ebp,esp
1000ab63:	sub    esp,0x20
1000ab66:	xor    eax,eax
1000ab68:	mov    BYTE PTR [ebp-0x1],al
1000ab6b:	mov    cl,BYTE PTR [ebp-0x3]
1000ab6e:	mov    BYTE PTR [ebp-0x2],cl
1000ab71:	mov    edx,DWORD PTR [ebp+0xc]
1000ab74:	mov    DWORD PTR [ebp-0x8],edx
1000ab77:	mov    eax,DWORD PTR [ebp+0x8]
1000ab7a:	mov    DWORD PTR [ebp-0x10],eax
1000ab7d:	mov    cl,BYTE PTR [ebp-0x1]
1000ab80:	mov    BYTE PTR [ebp-0x1d],cl
1000ab83:	mov    edx,DWORD PTR [ebp+0x10]
1000ab86:	mov    DWORD PTR [ebp-0x1c],edx
1000ab89:	mov    eax,DWORD PTR [ebp-0x8]
1000ab8c:	sub    eax,DWORD PTR [ebp-0x10]
1000ab8f:	sar    eax,0x2
1000ab92:	mov    DWORD PTR [ebp-0x14],eax
1000ab95:	mov    ecx,DWORD PTR [ebp-0x14]
1000ab98:	mov    edx,DWORD PTR [ebp-0x1c]
1000ab9b:	lea    eax,[edx+ecx*4]
1000ab9e:	mov    DWORD PTR [ebp-0x18],eax
1000aba1:	je     0x1000abc1
1000aba3:	mov    ecx,DWORD PTR [ebp-0x14]
1000aba6:	shl    ecx,0x2
1000aba9:	push   ecx
1000abaa:	mov    edx,DWORD PTR [ebp-0x10]
1000abad:	push   edx
1000abae:	mov    eax,DWORD PTR [ebp-0x14]
1000abb1:	shl    eax,0x2
1000abb4:	push   eax
1000abb5:	mov    ecx,DWORD PTR [ebp-0x1c]
1000abb8:	push   ecx
1000abb9:	call   0x100164ce
1000abbe:	add    esp,0x10
1000abc1:	mov    eax,DWORD PTR [ebp-0x18]
1000abc4:	mov    esp,ebp
1000abc6:	pop    ebp
1000abc7:	ret    
1000abc8:	int3   
1000abc9:	int3   
1000abca:	int3   
1000abcb:	int3   
1000abcc:	int3   
1000abcd:	int3   
1000abce:	int3   
1000abcf:	int3   
1000abd0:	push   ebp
1000abd1:	mov    ebp,esp
1000abd3:	sub    esp,0xc
1000abd6:	cmp    DWORD PTR [ebp+0x8],0x0
1000abda:	ja     0x1000abe5
1000abdc:	mov    DWORD PTR [ebp+0x8],0x0
1000abe3:	jmp    0x1000ac0a
1000abe5:	or     eax,0xffffffff
1000abe8:	xor    edx,edx
1000abea:	div    DWORD PTR [ebp+0x8]
1000abed:	cmp    eax,0x4
1000abf0:	jae    0x1000ac0a
1000abf2:	push   0x0
1000abf4:	lea    ecx,[ebp-0xc]
1000abf7:	call   0x10001290
1000abfc:	push   0x10085d44
1000ac01:	lea    eax,[ebp-0xc]
1000ac04:	push   eax
1000ac05:	call   0x1001621e
1000ac0a:	mov    ecx,DWORD PTR [ebp+0x8]
1000ac0d:	shl    ecx,0x2
1000ac10:	push   ecx
1000ac11:	call   0x10016464
1000ac16:	add    esp,0x4
1000ac19:	mov    esp,ebp
1000ac1b:	pop    ebp
1000ac1c:	ret    
1000ac1d:	int3   
1000ac1e:	int3   
1000ac1f:	int3   
1000ac20:	push   ebp
1000ac21:	mov    ebp,esp
1000ac23:	sub    esp,0x18
1000ac26:	mov    DWORD PTR [ebp-0x18],ecx
1000ac29:	cmp    DWORD PTR [ebp+0x8],0x0
1000ac2d:	jne    0x1000ac39
1000ac2f:	push   0x80070057
1000ac34:	call   0x10001090
1000ac39:	mov    eax,DWORD PTR [ebp+0xc]
1000ac3c:	push   eax
1000ac3d:	mov    ecx,DWORD PTR [ebp+0x8]
1000ac40:	push   ecx
1000ac41:	call   0x10007960
1000ac46:	add    esp,0x8
1000ac49:	mov    DWORD PTR [ebp-0x8],eax
1000ac4c:	mov    edx,DWORD PTR [ebp-0x8]
1000ac4f:	push   edx
1000ac50:	mov    ecx,DWORD PTR [ebp-0x18]
1000ac53:	call   0x100031b0
1000ac58:	mov    DWORD PTR [ebp-0x4],eax
1000ac5b:	mov    eax,DWORD PTR [ebp+0xc]
1000ac5e:	push   eax
1000ac5f:	mov    ecx,DWORD PTR [ebp+0x8]
1000ac62:	push   ecx
1000ac63:	mov    edx,DWORD PTR [ebp-0x8]
1000ac66:	add    edx,0x1
1000ac69:	push   edx
1000ac6a:	mov    eax,DWORD PTR [ebp-0x4]
1000ac6d:	push   eax
1000ac6e:	call   0x10007970
1000ac73:	add    esp,0x10
1000ac76:	mov    ecx,DWORD PTR [ebp-0x8]
1000ac79:	push   ecx
1000ac7a:	mov    ecx,DWORD PTR [ebp-0x18]
1000ac7d:	call   0x10003c70
1000ac82:	mov    esp,ebp
1000ac84:	pop    ebp
1000ac85:	ret    0x8
1000ac88:	int3   
1000ac89:	int3   
1000ac8a:	int3   
1000ac8b:	int3   
1000ac8c:	int3   
1000ac8d:	int3   
1000ac8e:	int3   
1000ac8f:	int3   
1000ac90:	push   ebp
1000ac91:	mov    ebp,esp
1000ac93:	sub    esp,0x20
1000ac96:	xor    eax,eax
1000ac98:	mov    BYTE PTR [ebp-0x1],al
1000ac9b:	mov    cl,BYTE PTR [ebp-0x1]
1000ac9e:	mov    BYTE PTR [ebp-0x1e],cl
1000aca1:	mov    dl,BYTE PTR [ebp-0x2]
1000aca4:	mov    BYTE PTR [ebp-0x1d],dl
1000aca7:	mov    eax,DWORD PTR [ebp+0x8]
1000acaa:	mov    DWORD PTR [ebp-0x1c],eax
1000acad:	mov    ecx,DWORD PTR [ebp+0xc]
1000acb0:	mov    edx,DWORD PTR [ebp-0x1c]
1000acb3:	lea    eax,[edx+ecx*4]
1000acb6:	mov    DWORD PTR [ebp-0x8],eax
1000acb9:	xor    ecx,ecx
1000acbb:	mov    BYTE PTR [ebp-0x9],cl
1000acbe:	mov    dl,BYTE PTR [ebp-0x9]
1000acc1:	mov    BYTE PTR [ebp-0x15],dl
1000acc4:	mov    eax,DWORD PTR [ebp+0xc]
1000acc7:	mov    DWORD PTR [ebp-0x14],eax
1000acca:	mov    ecx,DWORD PTR [ebp-0x1c]
1000accd:	mov    DWORD PTR [ebp-0x10],ecx
1000acd0:	jmp    0x1000ace4
1000acd2:	mov    edx,DWORD PTR [ebp-0x14]
1000acd5:	sub    edx,0x1
1000acd8:	mov    DWORD PTR [ebp-0x14],edx
1000acdb:	mov    eax,DWORD PTR [ebp-0x10]
1000acde:	add    eax,0x4
1000ace1:	mov    DWORD PTR [ebp-0x10],eax
1000ace4:	cmp    DWORD PTR [ebp-0x14],0x0
1000ace8:	jbe    0x1000acf6
1000acea:	mov    ecx,DWORD PTR [ebp-0x10]
1000aced:	mov    edx,DWORD PTR [ebp+0x10]
1000acf0:	mov    eax,DWORD PTR [edx]
1000acf2:	mov    DWORD PTR [ecx],eax
1000acf4:	jmp    0x1000acd2
1000acf6:	mov    esp,ebp
1000acf8:	pop    ebp
1000acf9:	ret    
1000acfa:	int3   
1000acfb:	int3   
1000acfc:	int3   
1000acfd:	int3   
1000acfe:	int3   
1000acff:	int3   
1000ad00:	push   ebp
1000ad01:	mov    ebp,esp
1000ad03:	sub    esp,0x14
1000ad06:	mov    eax,DWORD PTR [ebp+0xc]
1000ad09:	mov    ecx,DWORD PTR [ebp+0x8]
1000ad0c:	lea    edx,[ecx+eax*4]
1000ad0f:	mov    DWORD PTR [ebp-0x4],edx
1000ad12:	xor    eax,eax
1000ad14:	mov    BYTE PTR [ebp-0x5],al
1000ad17:	mov    cl,BYTE PTR [ebp-0x5]
1000ad1a:	mov    BYTE PTR [ebp-0x11],cl
1000ad1d:	mov    edx,DWORD PTR [ebp+0xc]
1000ad20:	mov    DWORD PTR [ebp-0x10],edx
1000ad23:	mov    eax,DWORD PTR [ebp+0x8]
1000ad26:	mov    DWORD PTR [ebp-0xc],eax
1000ad29:	jmp    0x1000ad3d
1000ad2b:	mov    ecx,DWORD PTR [ebp-0x10]
1000ad2e:	sub    ecx,0x1
1000ad31:	mov    DWORD PTR [ebp-0x10],ecx
1000ad34:	mov    edx,DWORD PTR [ebp-0xc]
1000ad37:	add    edx,0x4
1000ad3a:	mov    DWORD PTR [ebp-0xc],edx
1000ad3d:	cmp    DWORD PTR [ebp-0x10],0x0
1000ad41:	jbe    0x1000ad4f
1000ad43:	mov    eax,DWORD PTR [ebp-0xc]
1000ad46:	mov    ecx,DWORD PTR [ebp+0x10]
1000ad49:	mov    edx,DWORD PTR [ecx]
1000ad4b:	mov    DWORD PTR [eax],edx
1000ad4d:	jmp    0x1000ad2b
1000ad4f:	mov    esp,ebp
1000ad51:	pop    ebp
1000ad52:	ret    
1000ad53:	int3   
1000ad54:	int3   
1000ad55:	int3   
1000ad56:	int3   
1000ad57:	int3   
1000ad58:	int3   
1000ad59:	int3   
1000ad5a:	int3   
1000ad5b:	int3   
1000ad5c:	int3   
1000ad5d:	int3   
1000ad5e:	int3   
1000ad5f:	int3   
1000ad60:	push   ebx
1000ad61:	push   esi
1000ad62:	push   edi
1000ad63:	push   0x0
1000ad65:	push   0x0
1000ad67:	mov    esi,ecx
1000ad69:	push   esi
1000ad6a:	push   0x1000adb0
1000ad6f:	push   0x0
1000ad71:	push   0x0
1000ad73:	call   DWORD PTR ds:0x10034074
1000ad79:	mov    edi,DWORD PTR [esi+0x4]
1000ad7c:	test   edi,edi
1000ad7e:	mov    ebx,eax
1000ad80:	je     0x1000ad9a
1000ad82:	push   ebp
1000ad83:	call   DWORD PTR ds:0x1003407c
1000ad89:	push   edi
1000ad8a:	mov    ebp,eax
1000ad8c:	call   DWORD PTR ds:0x10034058
1000ad92:	push   ebp
1000ad93:	call   DWORD PTR ds:0x10034078
1000ad99:	pop    ebp
1000ad9a:	pop    edi
1000ad9b:	mov    DWORD PTR [esi+0x4],ebx
1000ad9e:	pop    esi
1000ad9f:	pop    ebx
1000ada0:	ret    
1000ada1:	int3   
1000ada2:	int3   
1000ada3:	int3   
1000ada4:	int3   
1000ada5:	int3   
1000ada6:	int3   
1000ada7:	int3   
1000ada8:	int3   
1000ada9:	int3   
1000adaa:	int3   
1000adab:	int3   
1000adac:	int3   
1000adad:	int3   
1000adae:	int3   
1000adaf:	int3   
1000adb0:	mov    eax,DWORD PTR [esp+0x4]
1000adb4:	push   eax
1000adb5:	call   0x1000ae70
1000adba:	xor    eax,eax
1000adbc:	ret    0x4
1000adbf:	int3   
1000adc0:	push   0xffffffff
1000adc2:	push   0x1002a7c8
1000adc7:	mov    eax,fs:0x0
1000adcd:	push   eax
1000adce:	sub    esp,0x8
1000add1:	push   ebx
1000add2:	push   esi
1000add3:	push   edi
1000add4:	mov    eax,ds:0x100951fc
1000add9:	xor    eax,esp
1000addb:	push   eax
1000addc:	lea    eax,[esp+0x18]
1000ade0:	mov    fs:0x0,eax
1000ade6:	push   0x1009796c
1000adeb:	call   DWORD PTR ds:0x100340dc
1000adf1:	mov    DWORD PTR [esp+0x20],0x0
1000adf9:	mov    esi,DWORD PTR [esp+0x28]
1000adfd:	mov    DWORD PTR [esp+0x28],esi
1000ae01:	mov    BYTE PTR [esp+0x20],0x2
1000ae06:	mov    eax,DWORD PTR [esi+0x4]
1000ae09:	mov    ebx,DWORD PTR [esi]
1000ae0b:	push   eax
1000ae0c:	mov    DWORD PTR [esp+0x18],ebx
1000ae10:	call   0x1000b0c0
1000ae15:	push   ebx
1000ae16:	call   DWORD PTR ds:0x10034154
1000ae1c:	push   ebx
1000ae1d:	call   DWORD PTR ds:0x1003414c
1000ae23:	test   ebx,ebx
1000ae25:	je     0x1000ae3d
1000ae27:	call   DWORD PTR ds:0x1003407c
1000ae2d:	push   ebx
1000ae2e:	mov    edi,eax
1000ae30:	call   DWORD PTR ds:0x10034058
1000ae36:	push   edi
1000ae37:	call   DWORD PTR ds:0x10034078
1000ae3d:	push   esi
1000ae3e:	call   0x10015b26
1000ae43:	add    esp,0x4
1000ae46:	push   0x1009796c
1000ae4b:	call   DWORD PTR ds:0x100340ec
1000ae51:	xor    eax,eax
1000ae53:	mov    ecx,DWORD PTR [esp+0x18]
1000ae57:	mov    DWORD PTR fs:0x0,ecx
1000ae5e:	pop    ecx
1000ae5f:	pop    edi
1000ae60:	pop    esi
1000ae61:	pop    ebx
1000ae62:	add    esp,0x14
1000ae65:	ret    0x4
1000ae68:	int3   
1000ae69:	int3   
1000ae6a:	int3   
1000ae6b:	int3   
1000ae6c:	int3   
1000ae6d:	int3   
1000ae6e:	int3   
1000ae6f:	int3   
1000ae70:	push   0xffffffff
1000ae72:	push   0x1002b673
1000ae77:	mov    eax,fs:0x0
1000ae7d:	push   eax
1000ae7e:	sub    esp,0x20
1000ae81:	push   ebx
1000ae82:	push   ebp
1000ae83:	push   esi
1000ae84:	push   edi
1000ae85:	mov    eax,ds:0x100951fc
1000ae8a:	xor    eax,esp
1000ae8c:	push   eax
1000ae8d:	lea    eax,[esp+0x34]
1000ae91:	mov    fs:0x0,eax
1000ae97:	push   0x1009796c
1000ae9c:	call   DWORD PTR ds:0x100340dc
1000aea2:	push   0x10003290
1000aea7:	push   0x1000b0b0
1000aeac:	push   0x4
1000aeae:	push   0x4
1000aeb0:	lea    eax,[esp+0x34]
1000aeb4:	xor    edi,edi
1000aeb6:	push   eax
1000aeb7:	mov    DWORD PTR [esp+0x50],edi
1000aebb:	call   0x10017a07
1000aec0:	mov    BYTE PTR [esp+0x3c],0x1
1000aec5:	mov    ecx,DWORD PTR ds:0x10097aa4
1000aecb:	push   ecx
1000aecc:	lea    ecx,[esp+0x1c]
1000aed0:	call   0x10002d70
1000aed5:	mov    BYTE PTR [esp+0x3c],0x2
1000aeda:	mov    esi,DWORD PTR [esp+0x18]
1000aede:	call   0x100025e0
1000aee3:	push   eax
1000aee4:	push   0x0
1000aee6:	push   0x800
1000aeeb:	push   0x800
1000aef0:	push   0xff
1000aef5:	push   0x6
1000aef7:	push   0x3
1000aef9:	push   esi
1000aefa:	call   DWORD PTR ds:0x10034150
1000af00:	mov    esi,DWORD PTR [esp+edi*4+0x24]
1000af04:	test   esi,esi
1000af06:	mov    ebp,eax
1000af08:	je     0x1000af20
1000af0a:	call   DWORD PTR ds:0x1003407c
1000af10:	push   esi
1000af11:	mov    ebx,eax
1000af13:	call   DWORD PTR ds:0x10034058
1000af19:	push   ebx
1000af1a:	call   DWORD PTR ds:0x10034078
1000af20:	mov    DWORD PTR [esp+edi*4+0x24],ebp
1000af24:	add    edi,0x1
1000af27:	cmp    edi,0x4
1000af2a:	jne    0x1000aeda
1000af2c:	mov    ebx,DWORD PTR ds:0x10034074
1000af32:	xor    ebp,ebp
1000af34:	mov    DWORD PTR [esp+0x1c],ebp
1000af38:	mov    eax,DWORD PTR [esp+ebp*4+0x24]
1000af3c:	push   0x0
1000af3e:	push   eax
1000af3f:	call   DWORD PTR ds:0x10034148
1000af45:	test   eax,eax
1000af47:	je     0x1000af50
1000af49:	mov    esi,0x1
1000af4e:	jmp    0x1000af62
1000af50:	call   DWORD PTR ds:0x1003407c
1000af56:	xor    edx,edx
1000af58:	cmp    eax,0x217
1000af5d:	sete   dl
1000af60:	mov    esi,edx
1000af62:	mov    eax,ds:0x10097aa0
1000af67:	push   0x0
1000af69:	push   eax
1000af6a:	call   DWORD PTR ds:0x1003404c
1000af70:	test   eax,eax
1000af72:	je     0x1000b04a
1000af78:	test   esi,esi
1000af7a:	je     0x1000afc4
1000af7c:	push   0x8
1000af7e:	call   0x10016464
1000af83:	mov    ecx,DWORD PTR [esp+0x48]
1000af87:	add    esp,0x4
1000af8a:	push   0x0
1000af8c:	push   0x0
1000af8e:	push   eax
1000af8f:	push   0x1000adc0
1000af94:	mov    DWORD PTR [eax+0x4],ecx
1000af97:	mov    ecx,DWORD PTR [esp+ebp*4+0x34]
1000af9b:	push   0x0
1000af9d:	mov    DWORD PTR [esp+ebp*4+0x38],0x0
1000afa5:	push   0x0
1000afa7:	mov    DWORD PTR [eax],ecx
1000afa9:	call   ebx
1000afab:	push   eax
1000afac:	call   DWORD PTR ds:0x10034058
1000afb2:	push   0xa
1000afb4:	call   DWORD PTR ds:0x10034070
1000afba:	push   0x0
1000afbc:	call   0x10015b26
1000afc1:	add    esp,0x4
1000afc4:	mov    edx,DWORD PTR [esp+0x18]
1000afc8:	push   0x0
1000afca:	push   0x0
1000afcc:	push   0x800
1000afd1:	push   0x800
1000afd6:	push   0xff
1000afdb:	push   0x6
1000afdd:	push   0x3
1000afdf:	push   edx
1000afe0:	call   DWORD PTR ds:0x10034150
1000afe6:	mov    esi,DWORD PTR [esp+ebp*4+0x24]
1000afea:	test   esi,esi
1000afec:	mov    edi,eax
1000afee:	je     0x1000b00a
1000aff0:	call   DWORD PTR ds:0x1003407c
1000aff6:	push   esi
1000aff7:	mov    ebp,eax
1000aff9:	call   DWORD PTR ds:0x10034058
1000afff:	push   ebp
1000b000:	call   DWORD PTR ds:0x10034078
1000b006:	mov    ebp,DWORD PTR [esp+0x1c]
1000b00a:	mov    eax,edi
1000b00c:	cmp    eax,0xffffffff
1000b00f:	mov    DWORD PTR [esp+ebp*4+0x24],edi
1000b013:	je     0x1000b04a
1000b015:	push   0x0
1000b017:	push   0x0
1000b019:	lea    ecx,[esp+0x28]
1000b01d:	push   ecx
1000b01e:	push   eax
1000b01f:	mov    DWORD PTR [esp+0x30],0x2
1000b027:	call   DWORD PTR ds:0x10034108
1000b02d:	test   eax,eax
1000b02f:	je     0x1000b04a
1000b031:	add    ebp,0x1
1000b034:	and    ebp,0x80000003
1000b03a:	jns    0x1000b041
1000b03c:	dec    ebp
1000b03d:	or     ebp,0xfffffffc
1000b040:	inc    ebp
1000b041:	mov    DWORD PTR [esp+0x1c],ebp
1000b045:	jmp    0x1000af38
1000b04a:	mov    BYTE PTR [esp+0x3c],0x1
1000b04f:	mov    eax,DWORD PTR [esp+0x18]
1000b053:	add    eax,0xfffffff0
1000b056:	lea    edx,[eax+0xc]
1000b059:	or     ecx,0xffffffff
1000b05c:	lock xadd DWORD PTR [edx],ecx
1000b060:	dec    ecx
1000b061:	test   ecx,ecx
1000b063:	jg     0x1000b06f
1000b065:	mov    ecx,DWORD PTR [eax]
1000b067:	mov    edx,DWORD PTR [ecx]
1000b069:	push   eax
1000b06a:	mov    eax,DWORD PTR [edx+0x4]
1000b06d:	call   eax
1000b06f:	push   0x10003290
1000b074:	push   0x4
1000b076:	push   0x4
1000b078:	lea    ecx,[esp+0x30]
1000b07c:	push   ecx
1000b07d:	mov    BYTE PTR [esp+0x4c],0x0
1000b082:	call   0x100175e4
1000b087:	push   0x1009796c
1000b08c:	call   DWORD PTR ds:0x100340ec
1000b092:	mov    ecx,DWORD PTR [esp+0x34]
1000b096:	mov    DWORD PTR fs:0x0,ecx
1000b09d:	pop    ecx
1000b09e:	pop    edi
1000b09f:	pop    esi
1000b0a0:	pop    ebp
1000b0a1:	pop    ebx
1000b0a2:	add    esp,0x2c
1000b0a5:	ret    0x4
1000b0a8:	int3   
1000b0a9:	int3   
1000b0aa:	int3   
1000b0ab:	int3   
1000b0ac:	int3   
1000b0ad:	int3   
1000b0ae:	int3   
1000b0af:	int3   
1000b0b0:	mov    DWORD PTR [ecx],0x0
1000b0b6:	ret    
1000b0b7:	int3   
1000b0b8:	int3   
1000b0b9:	int3   
1000b0ba:	int3   
1000b0bb:	int3   
1000b0bc:	int3   
1000b0bd:	int3   
1000b0be:	int3   
1000b0bf:	int3   
1000b0c0:	push   ebp
1000b0c1:	mov    ebp,esp
1000b0c3:	and    esp,0xfffffff8
1000b0c6:	push   0xffffffff
1000b0c8:	push   0x1002a750
1000b0cd:	mov    eax,fs:0x0
1000b0d3:	push   eax
1000b0d4:	sub    esp,0x4c
1000b0d7:	mov    eax,ds:0x100951fc
1000b0dc:	xor    eax,esp
1000b0de:	mov    DWORD PTR [esp+0x44],eax
1000b0e2:	push   esi
1000b0e3:	push   edi
1000b0e4:	mov    eax,ds:0x100951fc
1000b0e9:	xor    eax,esp
1000b0eb:	push   eax
1000b0ec:	lea    eax,[esp+0x58]
1000b0f0:	mov    fs:0x0,eax
1000b0f6:	mov    eax,DWORD PTR [ebp+0x8]
1000b0f9:	mov    DWORD PTR [esp+0x24],eax
1000b0fd:	lea    ecx,[ecx+0x0]
1000b100:	xor    edi,edi
1000b102:	xor    eax,eax
1000b104:	mov    DWORD PTR [esp+0x10],edi
1000b108:	mov    DWORD PTR [esp+0x14],edi
1000b10c:	mov    WORD PTR [esp+0x2c],di
1000b111:	mov    DWORD PTR [esp+0x2e],eax
1000b115:	mov    DWORD PTR [esp+0x32],eax
1000b119:	mov    DWORD PTR [esp+0x36],eax
1000b11d:	mov    WORD PTR [esp+0x3a],ax
1000b122:	mov    DWORD PTR [esp+0x3c],eax
1000b126:	mov    DWORD PTR [esp+0x40],eax
1000b12a:	mov    DWORD PTR [esp+0x44],eax
1000b12e:	mov    DWORD PTR [esp+0x48],eax
1000b132:	mov    DWORD PTR [esp+0x4c],eax
1000b136:	jmp    0x1000b140
1000b138:	lea    esp,[esp+0x0]
1000b13f:	nop
1000b140:	mov    esi,DWORD PTR ds:0x10034068
1000b146:	push   edi
1000b147:	lea    ecx,[esp+0x14]
1000b14b:	push   ecx
1000b14c:	push   0x24
1000b14e:	lea    edx,[esp+0x38]
1000b152:	push   edx
1000b153:	push   ebx
1000b154:	call   esi
1000b156:	cmp    eax,edi
1000b158:	je     0x1000b2ae
1000b15e:	cmp    DWORD PTR [esp+0x10],edi
1000b162:	jbe    0x1000b140
1000b164:	cmp    WORD PTR [esp+0x2c],di
1000b169:	je     0x1000b187
1000b16b:	push   0x8
1000b16d:	lea    eax,[esp+0x30]
1000b171:	push   0x100826e4
1000b176:	push   eax
1000b177:	call   0x100179d2
1000b17c:	add    esp,0xc
1000b17f:	test   eax,eax
1000b181:	jne    0x1000b2ae
1000b187:	mov    ecx,DWORD PTR [esp+0x44]
1000b18b:	push   ecx
1000b18c:	call   0x10015a45
1000b191:	mov    edi,eax
1000b193:	add    esp,0x4
1000b196:	mov    DWORD PTR [esp+0x28],edi
1000b19a:	push   0x0
1000b19c:	lea    edx,[esp+0x14]
1000b1a0:	push   edx
1000b1a1:	mov    DWORD PTR [esp+0x68],0x0
1000b1a9:	mov    eax,DWORD PTR [esp+0x4c]
1000b1ad:	push   eax
1000b1ae:	push   edi
1000b1af:	push   ebx
1000b1b0:	call   esi
1000b1b2:	test   eax,eax
1000b1b4:	je     0x1000b289
1000b1ba:	mov    DWORD PTR [esp+0xc],0x0
1000b1c2:	mov    BYTE PTR [esp+0x60],0x1
1000b1c7:	cmp    BYTE PTR [esp+0x4c],0x0
1000b1cc:	je     0x1000b1d2
1000b1ce:	mov    esi,edi
1000b1d0:	jmp    0x1000b1f3
1000b1d2:	mov    ecx,DWORD PTR [esp+0x48]
1000b1d6:	push   ecx
1000b1d7:	call   0x10015a45
1000b1dc:	mov    esi,eax
1000b1de:	add    esp,0x4
1000b1e1:	test   esi,esi
1000b1e3:	je     0x1000b1ef
1000b1e5:	push   0x0
1000b1e7:	call   0x10015b26
1000b1ec:	add    esp,0x4
1000b1ef:	mov    DWORD PTR [esp+0xc],esi
1000b1f3:	mov    edx,DWORD PTR [esp+0x48]
1000b1f7:	mov    ecx,DWORD PTR [esp+0x24]
1000b1fb:	mov    DWORD PTR [esp+0x18],edx
1000b1ff:	lea    edx,[esp+0x18]
1000b203:	push   edx
1000b204:	mov    edx,DWORD PTR [esp+0x48]
1000b208:	xor    eax,eax
1000b20a:	push   esi
1000b20b:	push   edx
1000b20c:	mov    edx,DWORD PTR [esp+0x48]
1000b210:	mov    DWORD PTR [esp+0x28],eax
1000b214:	mov    DWORD PTR [esp+0x2c],eax
1000b218:	mov    eax,DWORD PTR [ecx]
1000b21a:	mov    eax,DWORD PTR [eax+0x4]
1000b21d:	push   edi
1000b21e:	push   edx
1000b21f:	call   eax
1000b221:	movzx  eax,al
1000b224:	push   0x0
1000b226:	mov    DWORD PTR [esp+0x20],eax
1000b22a:	lea    ecx,[esp+0x18]
1000b22e:	push   ecx
1000b22f:	neg    eax
1000b231:	push   0x8
1000b233:	sbb    eax,eax
1000b235:	and    eax,DWORD PTR [esp+0x24]
1000b239:	lea    edx,[esp+0x28]
1000b23d:	push   edx
1000b23e:	push   ebx
1000b23f:	mov    DWORD PTR [esp+0x34],eax
1000b243:	call   DWORD PTR ds:0x100340ac
1000b249:	test   eax,eax
1000b24b:	je     0x1000b294
1000b24d:	mov    eax,DWORD PTR [esp+0x20]
1000b251:	test   eax,eax
1000b253:	jbe    0x1000b269
1000b255:	push   0x0
1000b257:	lea    ecx,[esp+0x18]
1000b25b:	push   ecx
1000b25c:	push   eax
1000b25d:	push   esi
1000b25e:	push   ebx
1000b25f:	call   DWORD PTR ds:0x100340ac
1000b265:	test   eax,eax
1000b267:	je     0x1000b29b
1000b269:	mov    edx,DWORD PTR [esp+0xc]
1000b26d:	push   edx
1000b26e:	call   0x10015b26
1000b273:	push   edi
1000b274:	mov    DWORD PTR [esp+0x68],0xffffffff
1000b27c:	call   0x10015b26
1000b281:	add    esp,0x8
1000b284:	jmp    0x1000b100
1000b289:	push   edi
1000b28a:	call   0x10015b26
1000b28f:	add    esp,0x4
1000b292:	jmp    0x1000b2ae
1000b294:	mov    eax,DWORD PTR [esp+0xc]
1000b298:	push   eax
1000b299:	jmp    0x1000b2a0
1000b29b:	mov    ecx,DWORD PTR [esp+0xc]
1000b29f:	push   ecx
1000b2a0:	call   0x10015b26
1000b2a5:	push   edi
1000b2a6:	call   0x10015b26
1000b2ab:	add    esp,0x8
1000b2ae:	mov    ecx,DWORD PTR [esp+0x58]
1000b2b2:	mov    DWORD PTR fs:0x0,ecx
1000b2b9:	pop    ecx
1000b2ba:	pop    edi
1000b2bb:	pop    esi
1000b2bc:	mov    ecx,DWORD PTR [esp+0x44]
1000b2c0:	xor    ecx,esp
1000b2c2:	call   0x10015b2b
1000b2c7:	mov    esp,ebp
1000b2c9:	pop    ebp
1000b2ca:	ret    0x4
1000b2cd:	int3   
1000b2ce:	int3   
1000b2cf:	int3   
1000b2d0:	push   ebp
1000b2d1:	mov    ebp,esp
1000b2d3:	and    esp,0xfffffff8
1000b2d6:	sub    esp,0x34
1000b2d9:	xor    eax,eax
1000b2db:	push   ebx
1000b2dc:	mov    DWORD PTR [esp+0x24],eax
1000b2e0:	mov    DWORD PTR [esp+0x28],eax
1000b2e4:	mov    DWORD PTR [esp+0x2c],eax
1000b2e8:	mov    DWORD PTR [esp+0x30],eax
1000b2ec:	mov    DWORD PTR [esp+0x34],eax
1000b2f0:	mov    eax,DWORD PTR [ebp+0xc]
1000b2f3:	push   esi
1000b2f4:	push   edi
1000b2f5:	mov    edi,DWORD PTR [ebp+0x8]
1000b2f8:	add    eax,0xc
1000b2fb:	mov    DWORD PTR [esp+0xc],edi
1000b2ff:	mov    DWORD PTR [esp+0x18],eax
1000b303:	mov    eax,0x14
1000b308:	lea    ecx,[esp+0x2c]
1000b30c:	mov    edx,edi
1000b30e:	mov    edi,edi
1000b310:	mov    esi,DWORD PTR [edx]
1000b312:	cmp    esi,DWORD PTR [ecx]
1000b314:	jne    0x1000b328
1000b316:	sub    eax,0x4
1000b319:	add    ecx,0x4
1000b31c:	add    edx,0x4
1000b31f:	cmp    eax,0x4
1000b322:	jae    0x1000b310
1000b324:	test   eax,eax
1000b326:	je     0x1000b385
1000b328:	movzx  esi,BYTE PTR [edx]
1000b32b:	movzx  ebx,BYTE PTR [ecx]
1000b32e:	sub    esi,ebx
1000b330:	jne    0x1000b377
1000b332:	sub    eax,0x1
1000b335:	add    ecx,0x1
1000b338:	add    edx,0x1
1000b33b:	test   eax,eax
1000b33d:	je     0x1000b385
1000b33f:	movzx  esi,BYTE PTR [edx]
1000b342:	movzx  ebx,BYTE PTR [ecx]
1000b345:	sub    esi,ebx
1000b347:	jne    0x1000b377
1000b349:	sub    eax,0x1
1000b34c:	add    ecx,0x1
1000b34f:	add    edx,0x1
1000b352:	test   eax,eax
1000b354:	je     0x1000b385
1000b356:	movzx  esi,BYTE PTR [edx]
1000b359:	movzx  ebx,BYTE PTR [ecx]
1000b35c:	sub    esi,ebx
1000b35e:	jne    0x1000b377
1000b360:	sub    eax,0x1
1000b363:	add    ecx,0x1
1000b366:	add    edx,0x1
1000b369:	test   eax,eax
1000b36b:	je     0x1000b385
1000b36d:	movzx  esi,BYTE PTR [edx]
1000b370:	movzx  ecx,BYTE PTR [ecx]
1000b373:	sub    esi,ecx
1000b375:	je     0x1000b385
1000b377:	test   esi,esi
1000b379:	mov    eax,0x1
1000b37e:	jg     0x1000b387
1000b380:	or     eax,0xffffffff
1000b383:	jmp    0x1000b387
1000b385:	xor    eax,eax
1000b387:	test   eax,eax
1000b389:	je     0x1000b46d
1000b38f:	mov    eax,DWORD PTR [ebp+0xc]
1000b392:	sub    eax,DWORD PTR [ebp+0x8]
1000b395:	cdq    
1000b396:	mov    ebx,eax
1000b398:	mov    DWORD PTR [esp+0x24],edx
1000b39c:	mov    edx,DWORD PTR [esp+0x18]
1000b3a0:	mov    eax,DWORD PTR [edx]
1000b3a2:	lea    esi,[eax+ebx*1+0x10000000]
1000b3a9:	push   esi
1000b3aa:	mov    DWORD PTR [esp+0x24],ebx
1000b3ae:	call   DWORD PTR ds:0x10034100
1000b3b4:	test   eax,eax
1000b3b6:	mov    DWORD PTR [esp+0x1c],eax
1000b3ba:	jne    0x1000b3c7
1000b3bc:	push   esi
1000b3bd:	call   DWORD PTR ds:0x10034048
1000b3c3:	mov    DWORD PTR [esp+0x1c],eax
1000b3c7:	mov    edi,DWORD PTR [edi]
1000b3c9:	mov    ecx,DWORD PTR [esp+0xc]
1000b3cd:	mov    esi,DWORD PTR [ecx+0x10]
1000b3d0:	add    edi,0x10000000
1000b3d6:	add    esi,0x10000000
1000b3dc:	cmp    DWORD PTR [edi],0x0
1000b3df:	lea    edx,[ebx+edi*1]
1000b3e2:	mov    DWORD PTR [esp+0x14],edx
1000b3e6:	je     0x1000b44e
1000b3e8:	mov    eax,DWORD PTR [esp+0x14]
1000b3ec:	mov    eax,DWORD PTR [eax]
1000b3ee:	test   eax,eax
1000b3f0:	je     0x1000b43e
1000b3f2:	js     0x1000b43e
1000b3f4:	mov    edx,DWORD PTR [esp+0x1c]
1000b3f8:	lea    ecx,[eax+ebx*1+0x10000002]
1000b3ff:	push   ecx
1000b400:	push   edx
1000b401:	call   DWORD PTR ds:0x10034044
1000b407:	mov    ebx,eax
1000b409:	xor    eax,eax
1000b40b:	mov    ecx,ebx
1000b40d:	or     ecx,eax
1000b40f:	je     0x1000b464
1000b411:	lea    edx,[esp+0x10]
1000b415:	push   edx
1000b416:	push   0x40
1000b418:	push   0x4
1000b41a:	push   esi
1000b41b:	mov    DWORD PTR [esp+0x20],eax
1000b41f:	call   DWORD PTR ds:0x10097974
1000b425:	mov    ecx,DWORD PTR [esp+0x10]
1000b429:	lea    eax,[esp+0x10]
1000b42d:	push   eax
1000b42e:	push   ecx
1000b42f:	push   0x4
1000b431:	push   esi
1000b432:	mov    DWORD PTR [esi],ebx
1000b434:	call   DWORD PTR ds:0x10097974
1000b43a:	mov    ebx,DWORD PTR [esp+0x20]
1000b43e:	add    DWORD PTR [esp+0x14],0x4
1000b443:	add    edi,0x4
1000b446:	add    esi,0x4
1000b449:	cmp    DWORD PTR [edi],0x0
1000b44c:	jne    0x1000b3e8
1000b44e:	mov    eax,0x14
1000b453:	add    DWORD PTR [esp+0xc],eax
1000b457:	add    DWORD PTR [esp+0x18],eax
1000b45b:	mov    edi,DWORD PTR [esp+0xc]
1000b45f:	jmp    0x1000b303
1000b464:	xor    al,al
1000b466:	pop    edi
1000b467:	pop    esi
1000b468:	pop    ebx
1000b469:	mov    esp,ebp
1000b46b:	pop    ebp
1000b46c:	ret    
1000b46d:	pop    edi
1000b46e:	pop    esi
1000b46f:	mov    al,0x1
1000b471:	pop    ebx
1000b472:	mov    esp,ebp
1000b474:	pop    ebp
1000b475:	ret    
1000b476:	int3   
1000b477:	int3   
1000b478:	int3   
1000b479:	int3   
1000b47a:	int3   
1000b47b:	int3   
1000b47c:	int3   
1000b47d:	int3   
1000b47e:	int3   
1000b47f:	int3   
1000b480:	mov    eax,0x853c
1000b485:	call   0x10016550
1000b48a:	mov    eax,ds:0x100951fc
1000b48f:	xor    eax,esp
1000b491:	mov    DWORD PTR [esp+0x8538],eax
1000b498:	push   ebx
1000b499:	push   esi
1000b49a:	push   edi
1000b49b:	mov    edi,DWORD PTR [esp+0x854c]
1000b4a2:	push   0x1008430c
1000b4a7:	push   0x1008431c
1000b4ac:	call   DWORD PTR ds:0x10034100
1000b4b2:	push   eax
1000b4b3:	call   DWORD PTR ds:0x10034044
1000b4b9:	mov    ds:0x10097974,eax
1000b4be:	mov    eax,ds:0x1000003c
1000b4c3:	mov    eax,DWORD PTR [eax+0x10000080]
1000b4c9:	test   eax,eax
1000b4cb:	je     0x1000b4d9
1000b4cd:	lea    ecx,[eax+0x10000000]
1000b4d3:	mov    DWORD PTR [esp+0x10],ecx
1000b4d7:	jmp    0x1000b4e1
1000b4d9:	mov    DWORD PTR [esp+0x10],0x0
1000b4e1:	push   0x10084304
1000b4e6:	push   0x2711
1000b4eb:	push   edi
1000b4ec:	call   DWORD PTR ds:0x10034084
1000b4f2:	mov    esi,eax
1000b4f4:	test   esi,esi
1000b4f6:	je     0x1000b5a5
1000b4fc:	push   esi
1000b4fd:	push   edi
1000b4fe:	call   DWORD PTR ds:0x10034090
1000b504:	mov    ebx,eax
1000b506:	test   ebx,ebx
1000b508:	je     0x1000b5a5
1000b50e:	push   esi
1000b50f:	push   edi
1000b510:	call   DWORD PTR ds:0x10034088
1000b516:	push   ebx
1000b517:	mov    esi,eax
1000b519:	call   DWORD PTR ds:0x1003408c
1000b51f:	mov    ebx,eax
1000b521:	mov    eax,0x4
1000b526:	mov    ecx,0x10082ca0
1000b52b:	mov    edx,ebx
1000b52d:	push   ebp
1000b52e:	mov    edi,edi
1000b530:	mov    edi,DWORD PTR [edx]
1000b532:	cmp    edi,DWORD PTR [ecx]
1000b534:	jne    0x1000b548
1000b536:	sub    eax,0x4
1000b539:	add    ecx,0x4
1000b53c:	add    edx,0x4
1000b53f:	cmp    eax,0x4
1000b542:	jae    0x1000b530
1000b544:	test   eax,eax
1000b546:	je     0x1000b5bf
1000b548:	movzx  edi,BYTE PTR [edx]
1000b54b:	movzx  ebp,BYTE PTR [ecx]
1000b54e:	sub    edi,ebp
1000b550:	jne    0x1000b597
1000b552:	sub    eax,0x1
1000b555:	add    ecx,0x1
1000b558:	add    edx,0x1
1000b55b:	test   eax,eax
1000b55d:	je     0x1000b5bf
1000b55f:	movzx  edi,BYTE PTR [edx]
1000b562:	movzx  ebp,BYTE PTR [ecx]
1000b565:	sub    edi,ebp
1000b567:	jne    0x1000b597
1000b569:	sub    eax,0x1
1000b56c:	add    ecx,0x1
1000b56f:	add    edx,0x1
1000b572:	test   eax,eax
1000b574:	je     0x1000b5bf
1000b576:	movzx  edi,BYTE PTR [edx]
1000b579:	movzx  ebp,BYTE PTR [ecx]
1000b57c:	sub    edi,ebp
1000b57e:	jne    0x1000b597
1000b580:	sub    eax,0x1
1000b583:	add    ecx,0x1
1000b586:	add    edx,0x1
1000b589:	test   eax,eax
1000b58b:	je     0x1000b5bf
1000b58d:	movzx  edi,BYTE PTR [edx]
1000b590:	movzx  edx,BYTE PTR [ecx]
1000b593:	sub    edi,edx
1000b595:	je     0x1000b5bf
1000b597:	test   edi,edi
1000b599:	mov    eax,0x1
1000b59e:	jg     0x1000b5c1
1000b5a0:	or     eax,0xffffffff
1000b5a3:	jmp    0x1000b5c1
1000b5a5:	pop    edi
1000b5a6:	pop    esi
1000b5a7:	xor    al,al
1000b5a9:	pop    ebx
1000b5aa:	mov    ecx,DWORD PTR [esp+0x8538]
1000b5b1:	xor    ecx,esp
1000b5b3:	call   0x10015b2b
1000b5b8:	add    esp,0x853c
1000b5be:	ret    
1000b5bf:	xor    eax,eax
1000b5c1:	test   eax,eax
1000b5c3:	pop    ebp
1000b5c4:	jne    0x1000b5a5
1000b5c6:	mov    edi,DWORD PTR [ebx+0x4]
1000b5c9:	push   edi
1000b5ca:	lea    eax,[ebx+0x8]
1000b5cd:	push   eax
1000b5ce:	lea    ecx,[esp+0x1c]
1000b5d2:	push   ecx
1000b5d3:	call   0x10016820
1000b5d8:	sub    esi,edi
1000b5da:	sub    esi,0x8
1000b5dd:	push   esi
1000b5de:	lea    edx,[edi+ebx*1+0x8]
1000b5e2:	push   edx
1000b5e3:	lea    eax,[esp+0x1028]
1000b5ea:	push   eax
1000b5eb:	call   0x10016820
1000b5f0:	add    esp,0x18
1000b5f3:	xor    ecx,ecx
1000b5f5:	xor    edx,edx
1000b5f7:	test   esi,esi
1000b5f9:	je     0x1000b619
1000b5fb:	jmp    0x1000b600
1000b5fd:	lea    ecx,[ecx+0x0]
1000b600:	mov    al,BYTE PTR [esp+edx*1+0x14]
1000b604:	xor    BYTE PTR [esp+ecx*1+0x1014],al
1000b60b:	lea    eax,[edx+0x1]
1000b60e:	xor    edx,edx
1000b610:	add    ecx,0x1
1000b613:	div    edi
1000b615:	cmp    ecx,esi
1000b617:	jne    0x1000b600
1000b619:	mov    edi,DWORD PTR [esp+0x10]
1000b61d:	lea    ecx,[esp+0xc]
1000b621:	push   ecx
1000b622:	push   0x40
1000b624:	push   esi
1000b625:	push   edi
1000b626:	mov    DWORD PTR [esp+0x1c],0x0
1000b62e:	call   DWORD PTR ds:0x10097974
1000b634:	lea    edx,[esp+0x1014]
1000b63b:	push   edx
1000b63c:	push   edi
1000b63d:	call   0x1000b2d0
1000b642:	mov    ecx,DWORD PTR [esp+0x14]
1000b646:	add    esp,0x8
1000b649:	mov    bl,al
1000b64b:	lea    eax,[esp+0xc]
1000b64f:	push   eax
1000b650:	push   ecx
1000b651:	push   esi
1000b652:	push   edi
1000b653:	call   DWORD PTR ds:0x10097974
1000b659:	mov    ecx,DWORD PTR [esp+0x8544]
1000b660:	pop    edi
1000b661:	pop    esi
1000b662:	mov    al,bl
1000b664:	pop    ebx
1000b665:	xor    ecx,esp
1000b667:	call   0x10015b2b
1000b66c:	add    esp,0x853c
1000b672:	ret    
1000b673:	int3   
1000b674:	int3   
1000b675:	int3   
1000b676:	int3   
1000b677:	int3   
1000b678:	int3   
1000b679:	int3   
1000b67a:	int3   
1000b67b:	int3   
1000b67c:	int3   
1000b67d:	int3   
1000b67e:	int3   
1000b67f:	int3   
1000b680:	push   0xffffffff
1000b682:	push   0x1002abb0
1000b687:	mov    eax,fs:0x0
1000b68d:	push   eax
1000b68e:	sub    esp,0xc
1000b691:	push   ebx
1000b692:	push   ebp
1000b693:	push   esi
1000b694:	push   edi
1000b695:	mov    eax,ds:0x100951fc
1000b69a:	xor    eax,esp
1000b69c:	push   eax
1000b69d:	lea    eax,[esp+0x20]
1000b6a1:	mov    fs:0x0,eax
1000b6a7:	xor    ebx,ebx
1000b6a9:	mov    DWORD PTR [esp+0x14],ebx
1000b6ad:	mov    edi,DWORD PTR [esp+0x38]
1000b6b1:	push   edi
1000b6b2:	call   0x10015a45
1000b6b7:	mov    esi,eax
1000b6b9:	mov    DWORD PTR [esp+0x1c],esi
1000b6bd:	mov    eax,DWORD PTR [esp+0x38]
1000b6c1:	push   edi
1000b6c2:	push   eax
1000b6c3:	push   esi
1000b6c4:	mov    DWORD PTR [esp+0x38],ebx
1000b6c8:	call   0x10016820
1000b6cd:	add    esp,0x10
1000b6d0:	xor    ecx,ecx
1000b6d2:	xor    edx,edx
1000b6d4:	cmp    edi,ebx
1000b6d6:	je     0x1000b6f6
1000b6d8:	mov    ebp,DWORD PTR [esp+0x40]
1000b6dc:	mov    ebx,DWORD PTR [esp+0x3c]
1000b6e0:	mov    al,BYTE PTR [edx+ebx*1]
1000b6e3:	xor    BYTE PTR [ecx+esi*1],al
1000b6e6:	lea    eax,[edx+0x1]
1000b6e9:	xor    edx,edx
1000b6eb:	add    ecx,0x1
1000b6ee:	div    ebp
1000b6f0:	cmp    ecx,edi
1000b6f2:	jne    0x1000b6e0
1000b6f4:	xor    ebx,ebx
1000b6f6:	lea    ecx,[esp+0x14]
1000b6fa:	push   ecx
1000b6fb:	push   edi
1000b6fc:	lea    edx,[esp+0x40]
1000b700:	push   esi
1000b701:	push   edx
1000b702:	call   0x100018c0
1000b707:	mov    ecx,DWORD PTR [eax]
1000b709:	mov    ebp,ecx
1000b70b:	mov    DWORD PTR [eax],ebx
1000b70d:	mov    DWORD PTR [esp+0x2c],ebp
1000b711:	mov    BYTE PTR [esp+0x38],0x1
1000b716:	mov    edx,DWORD PTR [esp+0x48]
1000b71a:	push   edx
1000b71b:	call   0x10015b26
1000b720:	mov    edi,DWORD PTR [esp+0x44]
1000b724:	mov    eax,DWORD PTR [esp+0x28]
1000b728:	add    esp,0x14
1000b72b:	push   eax
1000b72c:	mov    DWORD PTR [edi+0x18],0xf
1000b733:	mov    DWORD PTR [edi+0x14],ebx
1000b736:	push   ebp
1000b737:	mov    ecx,edi
1000b739:	mov    BYTE PTR [edi+0x4],0x0
1000b73d:	call   0x10003900
1000b742:	push   ebp
1000b743:	call   0x10015b26
1000b748:	push   esi
1000b749:	call   0x10015b26
1000b74e:	add    esp,0x8
1000b751:	mov    eax,edi
1000b753:	mov    ecx,DWORD PTR [esp+0x20]
1000b757:	mov    DWORD PTR fs:0x0,ecx
1000b75e:	pop    ecx
1000b75f:	pop    edi
1000b760:	pop    esi
1000b761:	pop    ebp
1000b762:	pop    ebx
1000b763:	add    esp,0x18
1000b766:	ret    
1000b767:	int3   
1000b768:	int3   
1000b769:	int3   
1000b76a:	int3   
1000b76b:	int3   
1000b76c:	int3   
1000b76d:	int3   
1000b76e:	int3   
1000b76f:	int3   
1000b770:	push   0xffffffff
1000b772:	push   0x1002ab79
1000b777:	mov    eax,fs:0x0
1000b77d:	push   eax
1000b77e:	push   ecx
1000b77f:	push   esi
1000b780:	push   edi
1000b781:	mov    eax,ds:0x100951fc
1000b786:	xor    eax,esp
1000b788:	push   eax
1000b789:	lea    eax,[esp+0x10]
1000b78d:	mov    fs:0x0,eax
1000b793:	mov    edi,DWORD PTR [esp+0x24]
1000b797:	mov    DWORD PTR [esp+0x18],0x0
1000b79f:	mov    DWORD PTR [esp+0xc],0x0
1000b7a7:	mov    eax,DWORD PTR [edi]
1000b7a9:	mov    ecx,DWORD PTR [eax-0x10]
1000b7ac:	test   ecx,ecx
1000b7ae:	je     0x1000b7bb
1000b7b0:	mov    edx,DWORD PTR [ecx]
1000b7b2:	mov    eax,DWORD PTR [edx+0x10]
1000b7b5:	call   eax
1000b7b7:	test   eax,eax
1000b7b9:	jne    0x1000b7cb
1000b7bb:	mov    edx,DWORD PTR ds:0x10096c80
1000b7c1:	mov    eax,DWORD PTR [edx+0x10]
1000b7c4:	mov    ecx,0x10096c80
1000b7c9:	call   eax
1000b7cb:	xor    ecx,ecx
1000b7cd:	test   eax,eax
1000b7cf:	setne  cl
1000b7d2:	test   ecx,ecx
1000b7d4:	jne    0x1000b7e0
1000b7d6:	push   0x80004005
1000b7db:	call   0x10001090
1000b7e0:	mov    edx,DWORD PTR [eax]
1000b7e2:	mov    ecx,eax
1000b7e4:	mov    eax,DWORD PTR [edx+0xc]
1000b7e7:	call   eax
1000b7e9:	mov    esi,DWORD PTR [esp+0x20]
1000b7ed:	add    eax,0x10
1000b7f0:	mov    DWORD PTR [esi],eax
1000b7f2:	mov    ecx,DWORD PTR [esp+0x28]
1000b7f6:	mov    DWORD PTR [esp+0x18],0x0
1000b7fe:	mov    eax,DWORD PTR [ecx]
1000b800:	mov    edx,DWORD PTR [eax-0xc]
1000b803:	mov    ecx,DWORD PTR [edi]
1000b805:	mov    edi,DWORD PTR [ecx-0xc]
1000b808:	push   edx
1000b809:	push   eax
1000b80a:	push   edi
1000b80b:	push   ecx
1000b80c:	push   esi
1000b80d:	mov    DWORD PTR [esp+0x20],0x1
1000b815:	call   0x10003ca0
1000b81a:	add    esp,0x14
1000b81d:	mov    eax,esi
1000b81f:	mov    ecx,DWORD PTR [esp+0x10]
1000b823:	mov    DWORD PTR fs:0x0,ecx
1000b82a:	pop    ecx
1000b82b:	pop    edi
1000b82c:	pop    esi
1000b82d:	add    esp,0x10
1000b830:	ret    
1000b831:	int3   
1000b832:	int3   
1000b833:	int3   
1000b834:	int3   
1000b835:	int3   
1000b836:	int3   
1000b837:	int3   
1000b838:	int3   
1000b839:	int3   
1000b83a:	int3   
1000b83b:	int3   
1000b83c:	int3   
1000b83d:	int3   
1000b83e:	int3   
1000b83f:	int3   
1000b840:	push   ecx
1000b841:	push   ebx
1000b842:	push   esi
1000b843:	push   edi
1000b844:	push   0x2710
1000b849:	call   DWORD PTR ds:0x10034070
1000b84f:	mov    esi,DWORD PTR [esp+0x14]
1000b853:	mov    ebx,DWORD PTR ds:0x100340ac
1000b859:	mov    DWORD PTR [esp+0xc],0x0
1000b861:	xor    edi,edi
1000b863:	push   0x0
1000b865:	lea    eax,[esp+0x18]
1000b869:	push   eax
1000b86a:	push   0x4
1000b86c:	lea    ecx,[esp+0x18]
1000b870:	push   ecx
1000b871:	push   esi
1000b872:	call   ebx
1000b874:	test   eax,eax
1000b876:	je     0x1000b880
1000b878:	add    edi,0x1
1000b87b:	cmp    edi,0xa
1000b87e:	jne    0x1000b863
1000b880:	test   esi,esi
1000b882:	je     0x1000b89a
1000b884:	call   DWORD PTR ds:0x1003407c
1000b88a:	push   esi
1000b88b:	mov    edi,eax
1000b88d:	call   DWORD PTR ds:0x10034058
1000b893:	push   edi
1000b894:	call   DWORD PTR ds:0x10034078
1000b89a:	pop    edi
1000b89b:	pop    esi
1000b89c:	xor    eax,eax
1000b89e:	pop    ebx
1000b89f:	pop    ecx
1000b8a0:	ret    0x4
1000b8a3:	int3   
1000b8a4:	int3   
1000b8a5:	int3   
1000b8a6:	int3   
1000b8a7:	int3   
1000b8a8:	int3   
1000b8a9:	int3   
1000b8aa:	int3   
1000b8ab:	int3   
1000b8ac:	int3   
1000b8ad:	int3   
1000b8ae:	int3   
1000b8af:	int3   
1000b8b0:	sub    esp,0x14
1000b8b3:	push   ebx
1000b8b4:	mov    ebx,DWORD PTR ds:0x100340d0
1000b8ba:	push   esi
1000b8bb:	mov    esi,DWORD PTR [esp+0x20]
1000b8bf:	push   edi
1000b8c0:	mov    edi,DWORD PTR [esi+0xc]
1000b8c3:	push   0x2
1000b8c5:	push   0x0
1000b8c7:	push   0x0
1000b8c9:	lea    eax,[esp+0x18]
1000b8cd:	push   eax
1000b8ce:	mov    DWORD PTR [esp+0x1c],0x0
1000b8d6:	call   ebx
1000b8d8:	push   eax
1000b8d9:	push   edi
1000b8da:	call   ebx
1000b8dc:	push   eax
1000b8dd:	call   DWORD PTR ds:0x10034140
1000b8e3:	test   eax,eax
1000b8e5:	je     0x1000b979
1000b8eb:	mov    ecx,DWORD PTR [esp+0xc]
1000b8ef:	push   0x0
1000b8f1:	push   0x0
1000b8f3:	push   ecx
1000b8f4:	push   0x1000b840
1000b8f9:	push   0x0
1000b8fb:	push   0x0
1000b8fd:	call   DWORD PTR ds:0x10034074
1000b903:	push   0x0
1000b905:	lea    edx,[esp+0x18]
1000b909:	push   edx
1000b90a:	push   0x4
1000b90c:	mov    edi,eax
1000b90e:	mov    eax,DWORD PTR [esi+0x8]
1000b911:	lea    ecx,[esp+0x30]
1000b915:	push   ecx
1000b916:	push   eax
1000b917:	mov    DWORD PTR [esp+0x24],edi
1000b91b:	mov    DWORD PTR [esp+0x38],0x0
1000b923:	call   DWORD PTR ds:0x10034068
1000b929:	test   eax,eax
1000b92b:	je     0x1000b95f
1000b92d:	cmp    DWORD PTR [esp+0x14],0x4
1000b932:	jne    0x1000b95f
1000b934:	mov    edx,DWORD PTR [esp+0x24]
1000b938:	mov    eax,DWORD PTR [esi+0x4]
1000b93b:	push   0x0
1000b93d:	lea    ecx,[esp+0x20]
1000b941:	push   ecx
1000b942:	mov    DWORD PTR [esp+0x20],edx
1000b946:	push   0x4
1000b948:	lea    edx,[esp+0x24]
1000b94c:	push   edx
1000b94d:	push   eax
1000b94e:	call   DWORD PTR ds:0x100340ac
1000b954:	lea    ecx,[esp+0x10]
1000b958:	call   0x10003290
1000b95d:	jmp    0x1000b979
1000b95f:	test   edi,edi
1000b961:	je     0x1000b979
1000b963:	call   DWORD PTR ds:0x1003407c
1000b969:	push   edi
1000b96a:	mov    ebx,eax
1000b96c:	call   DWORD PTR ds:0x10034058
1000b972:	push   ebx
1000b973:	call   DWORD PTR ds:0x10034078
1000b979:	call   0x1000be70
1000b97e:	push   esi
1000b97f:	call   0x10015b26
1000b984:	add    esp,0x4
1000b987:	pop    edi
1000b988:	pop    esi
1000b989:	xor    eax,eax
1000b98b:	pop    ebx
1000b98c:	add    esp,0x14
1000b98f:	ret    0x4
1000b992:	int3   
1000b993:	int3   
1000b994:	int3   
1000b995:	int3   
1000b996:	int3   
1000b997:	int3   
1000b998:	int3   
1000b999:	int3   
1000b99a:	int3   
1000b99b:	int3   
1000b99c:	int3   
1000b99d:	int3   
1000b99e:	int3   
1000b99f:	int3   
1000b9a0:	push   0xffffffff
1000b9a2:	push   0x1002b079
1000b9a7:	mov    eax,fs:0x0
1000b9ad:	push   eax
1000b9ae:	sub    esp,0x2c
1000b9b1:	mov    eax,ds:0x100951fc
1000b9b6:	xor    eax,esp
1000b9b8:	mov    DWORD PTR [esp+0x28],eax
1000b9bc:	push   ebx
1000b9bd:	push   ebp
1000b9be:	push   esi
1000b9bf:	push   edi
1000b9c0:	mov    eax,ds:0x100951fc
1000b9c5:	xor    eax,esp
1000b9c7:	push   eax
1000b9c8:	lea    eax,[esp+0x40]
1000b9cc:	mov    fs:0x0,eax
1000b9d2:	mov    ebp,DWORD PTR [esp+0x50]
1000b9d6:	mov    esi,ecx
1000b9d8:	xor    ebx,ebx
1000b9da:	mov    DWORD PTR [esp+0x18],ebx
1000b9de:	mov    DWORD PTR [esi+0x18],0xf
1000b9e5:	mov    DWORD PTR [esi+0x14],ebx
1000b9e8:	mov    DWORD PTR [esp+0x1c],esi
1000b9ec:	mov    BYTE PTR [esi+0x4],bl
1000b9ef:	mov    DWORD PTR [esp+0x48],ebx
1000b9f3:	mov    edi,0x1
1000b9f8:	mov    DWORD PTR [esp+0x18],edi
1000b9fc:	call   DWORD PTR ds:0x10034158
1000ba02:	xor    ecx,ecx
1000ba04:	cmp    ecx,ebx
1000ba06:	jle    0x1000ba15
1000ba08:	cmp    WORD PTR [eax+ecx*2-0x2],bx
1000ba0d:	jne    0x1000ba15
1000ba0f:	cmp    WORD PTR [eax+ecx*2],bx
1000ba13:	je     0x1000ba19
1000ba15:	add    ecx,edi
1000ba17:	jmp    0x1000ba04
1000ba19:	add    ecx,ecx
1000ba1b:	push   ecx
1000ba1c:	push   eax
1000ba1d:	lea    ecx,[esp+0x28]
1000ba21:	mov    DWORD PTR [esp+0x40],0xf
1000ba29:	mov    DWORD PTR [esp+0x3c],ebx
1000ba2d:	mov    BYTE PTR [esp+0x2c],bl
1000ba31:	call   0x10003900
1000ba36:	push   ebx
1000ba37:	lea    edx,[esp+0x24]
1000ba3b:	push   edx
1000ba3c:	or     eax,0xffffffff
1000ba3f:	mov    DWORD PTR [esp+0x50],edi
1000ba43:	call   0x10003730
1000ba48:	mov    BYTE PTR [esp+0x48],bl
1000ba4c:	cmp    DWORD PTR [esp+0x38],0x10
1000ba51:	jb     0x1000ba60
1000ba53:	mov    eax,DWORD PTR [esp+0x24]
1000ba57:	push   eax
1000ba58:	call   0x10015b26
1000ba5d:	add    esp,0x4
1000ba60:	mov    edx,DWORD PTR ds:0x10096c80
1000ba66:	mov    eax,DWORD PTR [edx+0xc]
1000ba69:	mov    ecx,0x10096c80
1000ba6e:	call   eax
1000ba70:	add    eax,0x10
1000ba73:	mov    DWORD PTR [esp+0x14],eax
1000ba77:	mov    DWORD PTR [esp+0x48],0x2
1000ba7f:	mov    eax,DWORD PTR [ebp+0x0]
1000ba82:	push   eax
1000ba83:	push   0x10084330
1000ba88:	push   0x5
1000ba8a:	push   0x10084370
1000ba8f:	call   0x10003540
1000ba94:	add    esp,0xc
1000ba97:	push   eax
1000ba98:	lea    ecx,[esp+0x1c]
1000ba9c:	push   ecx
1000ba9d:	call   0x1000ab30
1000baa2:	mov    eax,DWORD PTR [esp+0x20]
1000baa6:	mov    edi,DWORD PTR [eax-0xc]
1000baa9:	add    esp,0xc
1000baac:	cmp    DWORD PTR [eax-0x4],0x1
1000bab0:	jle    0x1000bac2
1000bab2:	mov    edx,edi
1000bab4:	push   edx
1000bab5:	lea    ecx,[esp+0x18]
1000bab9:	call   0x10003d30
1000babe:	mov    eax,DWORD PTR [esp+0x14]
1000bac2:	lea    ecx,[edi+edi*1+0x2]
1000bac6:	push   ecx
1000bac7:	push   eax
1000bac8:	lea    ecx,[esp+0x28]
1000bacc:	mov    DWORD PTR [esp+0x40],0xf
1000bad4:	mov    DWORD PTR [esp+0x3c],ebx
1000bad8:	mov    BYTE PTR [esp+0x2c],bl
1000badc:	call   0x10003900
1000bae1:	push   ebx
1000bae2:	lea    edx,[esp+0x24]
1000bae6:	push   edx
1000bae7:	or     eax,0xffffffff
1000baea:	mov    BYTE PTR [esp+0x50],0x3
1000baef:	call   0x10003730
1000baf4:	cmp    DWORD PTR [esp+0x38],0x10
1000baf9:	jb     0x1000bb08
1000bafb:	mov    eax,DWORD PTR [esp+0x24]
1000baff:	push   eax
1000bb00:	call   0x10015b26
1000bb05:	add    esp,0x4
1000bb08:	mov    BYTE PTR [esp+0x48],bl
1000bb0c:	mov    eax,DWORD PTR [esp+0x14]
1000bb10:	add    eax,0xfffffff0
1000bb13:	mov    DWORD PTR [esp+0x38],0xf
1000bb1b:	mov    DWORD PTR [esp+0x34],ebx
1000bb1f:	mov    BYTE PTR [esp+0x24],bl
1000bb23:	lea    ecx,[eax+0xc]
1000bb26:	or     edx,0xffffffff
1000bb29:	lock xadd DWORD PTR [ecx],edx
1000bb2d:	dec    edx
1000bb2e:	test   edx,edx
1000bb30:	jg     0x1000bb3c
1000bb32:	mov    ecx,DWORD PTR [eax]
1000bb34:	mov    edx,DWORD PTR [ecx]
1000bb36:	push   eax
1000bb37:	mov    eax,DWORD PTR [edx+0x4]
1000bb3a:	call   eax
1000bb3c:	mov    edx,DWORD PTR ds:0x10096c80
1000bb42:	mov    eax,DWORD PTR [edx+0xc]
1000bb45:	mov    ecx,0x10096c80
1000bb4a:	call   eax
1000bb4c:	add    eax,0x10
1000bb4f:	mov    DWORD PTR [esp+0x14],eax
1000bb53:	mov    DWORD PTR [esp+0x48],0x4
1000bb5b:	mov    eax,DWORD PTR [ebp+0xc]
1000bb5e:	push   eax
1000bb5f:	push   0x1008437c
1000bb64:	push   0x5
1000bb66:	push   0x100843b4
1000bb6b:	call   0x10003540
1000bb70:	add    esp,0xc
1000bb73:	push   eax
1000bb74:	lea    ecx,[esp+0x1c]
1000bb78:	push   ecx
1000bb79:	call   0x1000ab30
1000bb7e:	mov    eax,DWORD PTR [esp+0x20]
1000bb82:	mov    edi,DWORD PTR [eax-0xc]
1000bb85:	add    esp,0xc
1000bb88:	cmp    DWORD PTR [eax-0x4],0x1
1000bb8c:	jle    0x1000bb9e
1000bb8e:	mov    edx,edi
1000bb90:	push   edx
1000bb91:	lea    ecx,[esp+0x18]
1000bb95:	call   0x10003d30
1000bb9a:	mov    eax,DWORD PTR [esp+0x14]
1000bb9e:	lea    ecx,[edi+edi*1+0x2]
1000bba2:	push   ecx
1000bba3:	mov    ebp,0xf
1000bba8:	push   eax
1000bba9:	lea    ecx,[esp+0x28]
1000bbad:	mov    DWORD PTR [esp+0x40],ebp
1000bbb1:	mov    DWORD PTR [esp+0x3c],ebx
1000bbb5:	mov    BYTE PTR [esp+0x2c],bl
1000bbb9:	call   0x10003900
1000bbbe:	push   ebx
1000bbbf:	lea    edx,[esp+0x24]
1000bbc3:	push   edx
1000bbc4:	or     eax,0xffffffff
1000bbc7:	mov    BYTE PTR [esp+0x50],0x5
1000bbcc:	call   0x10003730
1000bbd1:	mov    edi,0x10
1000bbd6:	cmp    DWORD PTR [esp+0x38],edi
1000bbda:	jb     0x1000bbe9
1000bbdc:	mov    eax,DWORD PTR [esp+0x24]
1000bbe0:	push   eax
1000bbe1:	call   0x10015b26
1000bbe6:	add    esp,0x4
1000bbe9:	mov    BYTE PTR [esp+0x48],bl
1000bbed:	mov    eax,DWORD PTR [esp+0x14]
1000bbf1:	add    eax,0xfffffff0
1000bbf4:	mov    DWORD PTR [esp+0x38],ebp
1000bbf8:	mov    DWORD PTR [esp+0x34],ebx
1000bbfc:	mov    BYTE PTR [esp+0x24],bl
1000bc00:	lea    ecx,[eax+0xc]
1000bc03:	or     edx,0xffffffff
1000bc06:	lock xadd DWORD PTR [ecx],edx
1000bc0a:	dec    edx
1000bc0b:	test   edx,edx
1000bc0d:	jg     0x1000bc19
1000bc0f:	mov    ecx,DWORD PTR [eax]
1000bc11:	mov    edx,DWORD PTR [ecx]
1000bc13:	push   eax
1000bc14:	mov    eax,DWORD PTR [edx+0x4]
1000bc17:	call   eax
1000bc19:	push   0x2
1000bc1b:	push   0x1008432c
1000bc20:	lea    ecx,[esp+0x2c]
1000bc24:	push   ebp
1000bc25:	push   ecx
1000bc26:	mov    DWORD PTR [esp+0x48],ebp
1000bc2a:	mov    DWORD PTR [esp+0x44],ebx
1000bc2e:	mov    BYTE PTR [esp+0x34],bl
1000bc32:	call   0x100161a3
1000bc37:	mov    eax,DWORD PTR [esp+0x34]
1000bc3b:	add    esp,0x10
1000bc3e:	cmp    DWORD PTR [esp+0x38],edi
1000bc42:	mov    DWORD PTR [esp+0x34],0x2
1000bc4a:	jae    0x1000bc50
1000bc4c:	lea    eax,[esp+0x24]
1000bc50:	mov    BYTE PTR [eax+0x2],bl
1000bc53:	push   ebx
1000bc54:	lea    edx,[esp+0x24]
1000bc58:	push   edx
1000bc59:	or     eax,0xffffffff
1000bc5c:	mov    DWORD PTR [esp+0x50],0x6
1000bc64:	call   0x10003730
1000bc69:	cmp    DWORD PTR [esp+0x38],edi
1000bc6d:	jb     0x1000bc7c
1000bc6f:	mov    eax,DWORD PTR [esp+0x24]
1000bc73:	push   eax
1000bc74:	call   0x10015b26
1000bc79:	add    esp,0x4
1000bc7c:	mov    eax,esi
1000bc7e:	mov    ecx,DWORD PTR [esp+0x40]
1000bc82:	mov    DWORD PTR fs:0x0,ecx
1000bc89:	pop    ecx
1000bc8a:	pop    edi
1000bc8b:	pop    esi
1000bc8c:	pop    ebp
1000bc8d:	pop    ebx
1000bc8e:	mov    ecx,DWORD PTR [esp+0x28]
1000bc92:	xor    ecx,esp
1000bc94:	call   0x10015b2b
1000bc99:	add    esp,0x38
1000bc9c:	ret    
1000bc9d:	int3   
1000bc9e:	int3   
1000bc9f:	int3   
1000bca0:	push   0xffffffff
1000bca2:	push   0x1002b4e8
1000bca7:	mov    eax,fs:0x0
1000bcad:	push   eax
1000bcae:	sub    esp,0x24
1000bcb1:	push   ebx
1000bcb2:	push   ebp
1000bcb3:	push   esi
1000bcb4:	push   edi
1000bcb5:	mov    eax,ds:0x100951fc
1000bcba:	xor    eax,esp
1000bcbc:	push   eax
1000bcbd:	lea    eax,[esp+0x38]
1000bcc1:	mov    fs:0x0,eax
1000bcc7:	mov    eax,DWORD PTR [esp+0x48]
1000bccb:	xor    edi,edi
1000bccd:	push   0x10
1000bccf:	mov    DWORD PTR [esp+0x28],eax
1000bcd3:	mov    DWORD PTR [esp+0x18],edi
1000bcd7:	call   0x10016464
1000bcdc:	add    esp,0x4
1000bcdf:	cmp    eax,edi
1000bce1:	je     0x1000bcf2
1000bce3:	mov    DWORD PTR [eax],edi
1000bce5:	mov    DWORD PTR [eax+0x4],edi
1000bce8:	mov    DWORD PTR [eax+0x8],edi
1000bceb:	mov    DWORD PTR [eax+0xc],edi
1000bcee:	mov    esi,eax
1000bcf0:	jmp    0x1000bcf4
1000bcf2:	xor    esi,esi
1000bcf4:	mov    DWORD PTR [esp+0x34],esi
1000bcf8:	push   edi
1000bcf9:	lea    ecx,[esp+0x2c]
1000bcfd:	push   ecx
1000bcfe:	mov    DWORD PTR [esp+0x48],edi
1000bd02:	lea    edx,[esp+0x24]
1000bd06:	push   edx
1000bd07:	lea    eax,[esp+0x2c]
1000bd0b:	push   eax
1000bd0c:	mov    DWORD PTR [esp+0x38],0xc
1000bd14:	mov    DWORD PTR [esp+0x40],0x1
1000bd1c:	mov    DWORD PTR [esp+0x3c],edi
1000bd20:	mov    DWORD PTR [esp+0x30],edi
1000bd24:	mov    DWORD PTR [esp+0x2c],edi
1000bd28:	call   DWORD PTR ds:0x1003415c
1000bd2e:	test   eax,eax
1000bd30:	mov    ebx,DWORD PTR ds:0x1003407c
1000bd36:	mov    ebp,DWORD PTR ds:0x10034058
1000bd3c:	je     0x1000bd94
1000bd3e:	mov    edi,DWORD PTR [esi+0x8]
1000bd41:	test   edi,edi
1000bd43:	mov    ecx,DWORD PTR [esp+0x20]
1000bd47:	mov    DWORD PTR [esp+0x14],ecx
1000bd4b:	je     0x1000bd61
1000bd4d:	call   ebx
1000bd4f:	push   edi
1000bd50:	mov    DWORD PTR [esp+0x1c],eax
1000bd54:	call   ebp
1000bd56:	mov    edx,DWORD PTR [esp+0x18]
1000bd5a:	push   edx
1000bd5b:	call   DWORD PTR ds:0x10034078
1000bd61:	mov    eax,DWORD PTR [esp+0x14]
1000bd65:	mov    DWORD PTR [esi+0x8],eax
1000bd68:	mov    edi,DWORD PTR [esi+0xc]
1000bd6b:	test   edi,edi
1000bd6d:	mov    ecx,DWORD PTR [esp+0x1c]
1000bd71:	mov    DWORD PTR [esp+0x18],ecx
1000bd75:	je     0x1000bd8b
1000bd77:	call   ebx
1000bd79:	push   edi
1000bd7a:	mov    DWORD PTR [esp+0x18],eax
1000bd7e:	call   ebp
1000bd80:	mov    edx,DWORD PTR [esp+0x14]
1000bd84:	push   edx
1000bd85:	call   DWORD PTR ds:0x10034078
1000bd8b:	mov    eax,DWORD PTR [esp+0x18]
1000bd8f:	mov    DWORD PTR [esi+0xc],eax
1000bd92:	xor    edi,edi
1000bd94:	push   edi
1000bd95:	lea    ecx,[esp+0x2c]
1000bd99:	push   ecx
1000bd9a:	lea    edx,[esp+0x24]
1000bd9e:	push   edx
1000bd9f:	lea    eax,[esp+0x2c]
1000bda3:	push   eax
1000bda4:	call   DWORD PTR ds:0x1003415c
1000bdaa:	test   eax,eax
1000bdac:	je     0x1000be02
1000bdae:	mov    edi,DWORD PTR [esi]
1000bdb0:	test   edi,edi
1000bdb2:	mov    ecx,DWORD PTR [esp+0x20]
1000bdb6:	mov    DWORD PTR [esp+0x18],ecx
1000bdba:	je     0x1000bdd0
1000bdbc:	call   ebx
1000bdbe:	push   edi
1000bdbf:	mov    DWORD PTR [esp+0x18],eax
1000bdc3:	call   ebp
1000bdc5:	mov    edx,DWORD PTR [esp+0x14]
1000bdc9:	push   edx
1000bdca:	call   DWORD PTR ds:0x10034078
1000bdd0:	mov    eax,DWORD PTR [esp+0x18]
1000bdd4:	mov    DWORD PTR [esi],eax
1000bdd6:	mov    edi,DWORD PTR [esi+0x4]
1000bdd9:	test   edi,edi
1000bddb:	mov    ecx,DWORD PTR [esp+0x1c]
1000bddf:	mov    DWORD PTR [esp+0x18],ecx
1000bde3:	je     0x1000bdf9
1000bde5:	call   ebx
1000bde7:	push   edi
1000bde8:	mov    DWORD PTR [esp+0x18],eax
1000bdec:	call   ebp
1000bdee:	mov    edx,DWORD PTR [esp+0x14]
1000bdf2:	push   edx
1000bdf3:	call   DWORD PTR ds:0x10034078
1000bdf9:	mov    eax,DWORD PTR [esp+0x18]
1000bdfd:	mov    DWORD PTR [esi+0x4],eax
1000be00:	xor    edi,edi
1000be02:	mov    ecx,DWORD PTR [esp+0x24]
1000be06:	push   esi
1000be07:	call   0x1000b9a0
1000be0c:	add    esp,0x4
1000be0f:	push   edi
1000be10:	push   edi
1000be11:	push   esi
1000be12:	push   0x1000b8b0
1000be17:	push   edi
1000be18:	push   edi
1000be19:	call   DWORD PTR ds:0x10034074
1000be1f:	mov    esi,eax
1000be21:	cmp    esi,edi
1000be23:	je     0x1000be33
1000be25:	call   ebx
1000be27:	push   esi
1000be28:	mov    edi,eax
1000be2a:	call   ebp
1000be2c:	push   edi
1000be2d:	call   DWORD PTR ds:0x10034078
1000be33:	mov    eax,DWORD PTR [esp+0x24]
1000be37:	mov    ecx,DWORD PTR [esp+0x38]
1000be3b:	mov    DWORD PTR fs:0x0,ecx
1000be42:	pop    ecx
1000be43:	pop    edi
1000be44:	pop    esi
1000be45:	pop    ebp
1000be46:	pop    ebx
1000be47:	add    esp,0x30
1000be4a:	ret    
1000be4b:	int3   
1000be4c:	int3   
1000be4d:	int3   
1000be4e:	int3   
1000be4f:	int3   
1000be50:	push   esi
1000be51:	mov    esi,DWORD PTR [eax]
1000be53:	test   esi,esi
1000be55:	je     0x1000be65
1000be57:	call   0x1000be70
1000be5c:	push   esi
1000be5d:	call   0x10015b26
1000be62:	add    esp,0x4
1000be65:	pop    esi
1000be66:	ret    
1000be67:	int3   
1000be68:	int3   
1000be69:	int3   
1000be6a:	int3   
1000be6b:	int3   
1000be6c:	int3   
1000be6d:	int3   
1000be6e:	int3   
1000be6f:	int3   
1000be70:	sub    esp,0x8
1000be73:	mov    eax,DWORD PTR [esi+0xc]
1000be76:	test   eax,eax
1000be78:	push   ebx
1000be79:	mov    ebx,DWORD PTR ds:0x10034058
1000be7f:	push   ebp
1000be80:	mov    ebp,DWORD PTR ds:0x10034078
1000be86:	push   edi
1000be87:	mov    edi,DWORD PTR ds:0x1003407c
1000be8d:	mov    DWORD PTR [esp+0xc],eax
1000be91:	je     0x1000bea7
1000be93:	call   edi
1000be95:	mov    DWORD PTR [esp+0x10],eax
1000be99:	mov    eax,DWORD PTR [esp+0xc]
1000be9d:	push   eax
1000be9e:	call   ebx
1000bea0:	mov    ecx,DWORD PTR [esp+0x10]
1000bea4:	push   ecx
1000bea5:	call   ebp
1000bea7:	mov    DWORD PTR [esi+0xc],0x0
1000beae:	mov    eax,DWORD PTR [esi+0x8]
1000beb1:	test   eax,eax
1000beb3:	mov    DWORD PTR [esp+0x10],eax
1000beb7:	je     0x1000becd
1000beb9:	call   edi
1000bebb:	mov    edx,DWORD PTR [esp+0x10]
1000bebf:	push   edx
1000bec0:	mov    DWORD PTR [esp+0x10],eax
1000bec4:	call   ebx
1000bec6:	mov    eax,DWORD PTR [esp+0xc]
1000beca:	push   eax
1000becb:	call   ebp
1000becd:	mov    DWORD PTR [esi+0x8],0x0
1000bed4:	mov    eax,DWORD PTR [esi+0x4]
1000bed7:	test   eax,eax
1000bed9:	mov    DWORD PTR [esp+0x10],eax
1000bedd:	je     0x1000bef3
1000bedf:	call   edi
1000bee1:	mov    ecx,DWORD PTR [esp+0x10]
1000bee5:	push   ecx
1000bee6:	mov    DWORD PTR [esp+0x10],eax
1000beea:	call   ebx
1000beec:	mov    edx,DWORD PTR [esp+0xc]
1000bef0:	push   edx
1000bef1:	call   ebp
1000bef3:	mov    DWORD PTR [esi+0x4],0x0
1000befa:	mov    eax,DWORD PTR [esi]
1000befc:	test   eax,eax
1000befe:	mov    DWORD PTR [esp+0x10],eax
1000bf02:	je     0x1000bf12
1000bf04:	call   edi
1000bf06:	mov    edi,eax
1000bf08:	mov    eax,DWORD PTR [esp+0x10]
1000bf0c:	push   eax
1000bf0d:	call   ebx
1000bf0f:	push   edi
1000bf10:	call   ebp
1000bf12:	pop    edi
1000bf13:	pop    ebp
1000bf14:	mov    DWORD PTR [esi],0x0
1000bf1a:	pop    ebx
1000bf1b:	add    esp,0x8
1000bf1e:	ret    
1000bf1f:	int3   
1000bf20:	mov    eax,DWORD PTR [esp+0x4]
1000bf24:	push   esi
1000bf25:	push   eax
1000bf26:	mov    esi,ecx
1000bf28:	call   0x10001550
1000bf2d:	mov    DWORD PTR [esi],0x100843fc
1000bf33:	mov    eax,esi
1000bf35:	pop    esi
1000bf36:	ret    0x4
1000bf39:	int3   
1000bf3a:	int3   
1000bf3b:	int3   
1000bf3c:	int3   
1000bf3d:	int3   
1000bf3e:	int3   
1000bf3f:	int3   
1000bf40:	push   0xffffffff
1000bf42:	push   0x1002b008
1000bf47:	mov    eax,fs:0x0
1000bf4d:	push   eax
1000bf4e:	sub    esp,0x1c
1000bf51:	push   esi
1000bf52:	mov    eax,ds:0x100951fc
1000bf57:	xor    eax,esp
1000bf59:	push   eax
1000bf5a:	lea    eax,[esp+0x24]
1000bf5e:	mov    fs:0x0,eax
1000bf64:	push   0x100843c0
1000bf69:	push   0xd
1000bf6b:	push   0x100843e8
1000bf70:	call   0x10003340
1000bf75:	mov    ecx,eax
1000bf77:	add    esp,0xc
1000bf7a:	mov    DWORD PTR [esp+0x20],0xf
1000bf82:	mov    DWORD PTR [esp+0x1c],0x0
1000bf8a:	mov    BYTE PTR [esp+0xc],0x0
1000bf8f:	lea    esi,[ecx+0x1]
1000bf92:	mov    dl,BYTE PTR [ecx]
1000bf94:	add    ecx,0x1
1000bf97:	test   dl,dl
1000bf99:	jne    0x1000bf92
1000bf9b:	sub    ecx,esi
1000bf9d:	push   ecx
1000bf9e:	push   eax
1000bf9f:	lea    ecx,[esp+0x10]
1000bfa3:	call   0x10003900
1000bfa8:	lea    eax,[esp+0x8]
1000bfac:	push   eax
1000bfad:	push   edi
1000bfae:	mov    DWORD PTR [esp+0x34],0x0
1000bfb6:	call   0x100014d0
1000bfbb:	cmp    DWORD PTR [esp+0x20],0x10
1000bfc0:	jb     0x1000bfcf
1000bfc2:	mov    ecx,DWORD PTR [esp+0xc]
1000bfc6:	push   ecx
1000bfc7:	call   0x10015b26
1000bfcc:	add    esp,0x4
1000bfcf:	mov    eax,edi
1000bfd1:	mov    DWORD PTR [edi],0x100843fc
1000bfd7:	mov    ecx,DWORD PTR [esp+0x24]
1000bfdb:	mov    DWORD PTR fs:0x0,ecx
1000bfe2:	pop    ecx
1000bfe3:	pop    esi
1000bfe4:	add    esp,0x28
1000bfe7:	ret    
1000bfe8:	int3   
1000bfe9:	int3   
1000bfea:	int3   
1000bfeb:	int3   
1000bfec:	int3   
1000bfed:	int3   
1000bfee:	int3   
1000bfef:	int3   
1000bff0:	mov    edx,DWORD PTR [esp+0x4]
1000bff4:	mov    eax,ecx
1000bff6:	mov    ecx,DWORD PTR [esp+0x8]
1000bffa:	mov    DWORD PTR [eax],0x0
1000c000:	mov    DWORD PTR [eax+0x4],ecx
1000c003:	mov    DWORD PTR [eax+0x8],edx
1000c006:	ret    0x8
1000c009:	int3   
1000c00a:	int3   
1000c00b:	int3   
1000c00c:	int3   
1000c00d:	int3   
1000c00e:	int3   
1000c00f:	int3   
1000c010:	push   ebp
1000c011:	mov    ebp,esp
1000c013:	and    esp,0xfffffff8
1000c016:	push   0xffffffff
1000c018:	push   0x1002b628
1000c01d:	mov    eax,fs:0x0
1000c023:	push   eax
1000c024:	sub    esp,0x38
1000c027:	push   ebx
1000c028:	push   esi
1000c029:	push   edi
1000c02a:	mov    eax,ds:0x100951fc
1000c02f:	xor    eax,esp
1000c031:	push   eax
1000c032:	lea    eax,[esp+0x48]
1000c036:	mov    fs:0x0,eax
1000c03c:	mov    edi,DWORD PTR [ebp+0x8]
1000c03f:	mov    esi,ecx
1000c041:	xor    eax,eax
1000c043:	mov    DWORD PTR [esp+0x14],eax
1000c047:	mov    ecx,DWORD PTR [esi]
1000c049:	mov    DWORD PTR [esp+0x14],esi
1000c04d:	mov    DWORD PTR [esp+0x18],ecx
1000c051:	mov    ecx,esi
1000c053:	mov    DWORD PTR [esp+0x50],eax
1000c057:	call   0x1000c0c0
1000c05c:	mov    ecx,DWORD PTR [esi]
1000c05e:	mov    edx,DWORD PTR [esi+0x4]
1000c061:	mov    ebx,eax
1000c063:	sub    edx,ecx
1000c065:	cmp    ebx,edx
1000c067:	jbe    0x1000c07f
1000c069:	lea    edi,[esp+0x1c]
1000c06d:	call   0x1000bf40
1000c072:	push   0x10085de8
1000c077:	mov    eax,edi
1000c079:	push   eax
1000c07a:	call   0x1001621e
1000c07f:	mov    eax,DWORD PTR [esi+0x8]
1000c082:	add    eax,ecx
1000c084:	push   ebx
1000c085:	mov    DWORD PTR [edi+0x18],0xf
1000c08c:	mov    DWORD PTR [edi+0x14],0x0
1000c093:	push   eax
1000c094:	mov    ecx,edi
1000c096:	mov    BYTE PTR [edi+0x4],0x0
1000c09a:	call   0x10003900
1000c09f:	add    DWORD PTR [esi],ebx
1000c0a1:	mov    eax,edi
1000c0a3:	mov    ecx,DWORD PTR [esp+0x48]
1000c0a7:	mov    DWORD PTR fs:0x0,ecx
1000c0ae:	pop    ecx
1000c0af:	pop    edi
1000c0b0:	pop    esi
1000c0b1:	pop    ebx
1000c0b2:	mov    esp,ebp
1000c0b4:	pop    ebp
1000c0b5:	ret    0x4
1000c0b8:	int3   
1000c0b9:	int3   
1000c0ba:	int3   
1000c0bb:	int3   
1000c0bc:	int3   
1000c0bd:	int3   
1000c0be:	int3   
1000c0bf:	int3   
1000c0c0:	push   ebp
1000c0c1:	mov    ebp,esp
1000c0c3:	and    esp,0xfffffff8
1000c0c6:	push   0xffffffff
1000c0c8:	push   0x1002b4b8
1000c0cd:	mov    eax,fs:0x0
1000c0d3:	push   eax
1000c0d4:	sub    esp,0x3c
1000c0d7:	push   esi
1000c0d8:	push   edi
1000c0d9:	mov    eax,ds:0x100951fc
1000c0de:	xor    eax,esp
1000c0e0:	push   eax
1000c0e1:	lea    eax,[esp+0x48]
1000c0e5:	mov    fs:0x0,eax
1000c0eb:	mov    eax,DWORD PTR [ecx]
1000c0ed:	mov    DWORD PTR [esp+0x14],ecx
1000c0f1:	mov    DWORD PTR [esp+0x18],eax
1000c0f5:	mov    DWORD PTR [esp+0x50],0x0
1000c0fd:	mov    edi,DWORD PTR [ecx+0x4]
1000c100:	cmp    eax,edi
1000c102:	jb     0x1000c11a
1000c104:	lea    edi,[esp+0x1c]
1000c108:	call   0x1000bf40
1000c10d:	push   0x10085de8
1000c112:	mov    eax,edi
1000c114:	push   eax
1000c115:	call   0x1001621e
1000c11a:	mov    esi,DWORD PTR [ecx+0x8]
1000c11d:	mov    dl,BYTE PTR [esi+eax*1]
1000c120:	add    eax,0x1
1000c123:	cmp    eax,edi
1000c125:	mov    BYTE PTR [esp+0x10],dl
1000c129:	mov    DWORD PTR [ecx],eax
1000c12b:	jb     0x1000c143
1000c12d:	lea    edi,[esp+0x1c]
1000c131:	call   0x1000bf40
1000c136:	push   0x10085de8
1000c13b:	mov    eax,edi
1000c13d:	push   eax
1000c13e:	call   0x1001621e
1000c143:	mov    dl,BYTE PTR [eax+esi*1]
1000c146:	add    eax,0x1
1000c149:	cmp    eax,edi
1000c14b:	mov    BYTE PTR [esp+0x11],dl
1000c14f:	mov    DWORD PTR [ecx],eax
1000c151:	jb     0x1000c169
1000c153:	lea    edi,[esp+0x1c]
1000c157:	call   0x1000bf40
1000c15c:	push   0x10085de8
1000c161:	mov    eax,edi
1000c163:	push   eax
1000c164:	call   0x1001621e
1000c169:	mov    dl,BYTE PTR [eax+esi*1]
1000c16c:	add    eax,0x1
1000c16f:	cmp    eax,edi
1000c171:	mov    BYTE PTR [esp+0x12],dl
1000c175:	mov    DWORD PTR [ecx],eax
1000c177:	jb     0x1000c18f
1000c179:	lea    edi,[esp+0x1c]
1000c17d:	call   0x1000bf40
1000c182:	push   0x10085de8
1000c187:	mov    eax,edi
1000c189:	push   eax
1000c18a:	call   0x1001621e
1000c18f:	mov    dl,BYTE PTR [eax+esi*1]
1000c192:	add    eax,0x1
1000c195:	mov    BYTE PTR [esp+0x13],dl
1000c199:	mov    DWORD PTR [ecx],eax
1000c19b:	mov    eax,DWORD PTR [esp+0x10]
1000c19f:	mov    ecx,DWORD PTR [esp+0x48]
1000c1a3:	mov    DWORD PTR fs:0x0,ecx
1000c1aa:	pop    ecx
1000c1ab:	pop    edi
1000c1ac:	pop    esi
1000c1ad:	mov    esp,ebp
1000c1af:	pop    ebp
1000c1b0:	ret    
1000c1b1:	int3   
1000c1b2:	int3   
1000c1b3:	int3   
1000c1b4:	int3   
1000c1b5:	int3   
1000c1b6:	int3   
1000c1b7:	int3   
1000c1b8:	int3   
1000c1b9:	int3   
1000c1ba:	int3   
1000c1bb:	int3   
1000c1bc:	int3   
1000c1bd:	int3   
1000c1be:	int3   
1000c1bf:	int3   
1000c1c0:	push   ebp
1000c1c1:	mov    ebp,esp
1000c1c3:	and    esp,0xfffffff8
1000c1c6:	push   0xffffffff
1000c1c8:	push   0x1002b5f8
1000c1cd:	mov    eax,fs:0x0
1000c1d3:	push   eax
1000c1d4:	sub    esp,0x30
1000c1d7:	push   ebx
1000c1d8:	push   esi
1000c1d9:	push   edi
1000c1da:	mov    eax,ds:0x100951fc
1000c1df:	xor    eax,esp
1000c1e1:	push   eax
1000c1e2:	lea    eax,[esp+0x40]
1000c1e6:	mov    fs:0x0,eax
1000c1ec:	mov    esi,ecx
1000c1ee:	mov    edi,DWORD PTR [ebp+0xc]
1000c1f1:	push   edi
1000c1f2:	mov    DWORD PTR [esp+0x14],0x0
1000c1fa:	call   0x10015a45
1000c1ff:	mov    ebx,eax
1000c201:	add    esp,0x4
1000c204:	mov    DWORD PTR [esp+0x10],ebx
1000c208:	mov    DWORD PTR [esp+0x48],0x0
1000c210:	mov    eax,DWORD PTR [esi]
1000c212:	lea    ecx,[eax+edi*1]
1000c215:	cmp    ecx,DWORD PTR [esi+0x4]
1000c218:	jbe    0x1000c230
1000c21a:	lea    edi,[esp+0x14]
1000c21e:	call   0x1000bf40
1000c223:	push   0x10085de8
1000c228:	mov    edx,edi
1000c22a:	push   edx
1000c22b:	call   0x1001621e
1000c230:	mov    ecx,DWORD PTR [esi+0x8]
1000c233:	push   edi
1000c234:	add    ecx,eax
1000c236:	push   ecx
1000c237:	push   ebx
1000c238:	call   0x10016820
1000c23d:	add    DWORD PTR [esi],edi
1000c23f:	mov    esi,DWORD PTR [ebp+0x8]
1000c242:	add    esp,0xc
1000c245:	push   edi
1000c246:	mov    DWORD PTR [esi+0x18],0xf
1000c24d:	mov    DWORD PTR [esi+0x14],0x0
1000c254:	push   ebx
1000c255:	mov    ecx,esi
1000c257:	mov    BYTE PTR [esi+0x4],0x0
1000c25b:	call   0x10003900
1000c260:	push   ebx
1000c261:	call   0x10015b26
1000c266:	add    esp,0x4
1000c269:	mov    eax,esi
1000c26b:	mov    ecx,DWORD PTR [esp+0x40]
1000c26f:	mov    DWORD PTR fs:0x0,ecx
1000c276:	pop    ecx
1000c277:	pop    edi
1000c278:	pop    esi
1000c279:	pop    ebx
1000c27a:	mov    esp,ebp
1000c27c:	pop    ebp
1000c27d:	ret    0x8
1000c280:	mov    eax,DWORD PTR [ecx+0x4]
1000c283:	sub    eax,DWORD PTR [ecx]
1000c285:	ret    
1000c286:	int3   
1000c287:	int3   
1000c288:	int3   
1000c289:	int3   
1000c28a:	int3   
1000c28b:	int3   
1000c28c:	int3   
1000c28d:	int3   
1000c28e:	int3   
1000c28f:	int3   
1000c290:	mov    eax,DWORD PTR [ecx]
1000c292:	test   eax,eax
1000c294:	je     0x1000c29b
1000c296:	mov    ecx,DWORD PTR [ecx+0x4]
1000c299:	mov    DWORD PTR [eax],ecx
1000c29b:	ret    
1000c29c:	int3   
1000c29d:	int3   
1000c29e:	int3   
1000c29f:	int3   
1000c2a0:	push   ebp
1000c2a1:	mov    ebp,esp
1000c2a3:	push   0xffffffff
1000c2a5:	push   0x1002b488
1000c2aa:	mov    eax,fs:0x0
1000c2b0:	push   eax
1000c2b1:	sub    esp,0x10
1000c2b4:	push   ebx
1000c2b5:	push   esi
1000c2b6:	push   edi
1000c2b7:	mov    eax,ds:0x100951fc
1000c2bc:	xor    eax,ebp
1000c2be:	push   eax
1000c2bf:	lea    eax,[ebp-0xc]
1000c2c2:	mov    fs:0x0,eax
1000c2c8:	mov    DWORD PTR [ebp-0x10],esp
1000c2cb:	mov    DWORD PTR [ebp-0x4],0x0
1000c2d2:	mov    al,0x1
1000c2d4:	mov    BYTE PTR [ebp-0x1c],al
1000c2d7:	mov    DWORD PTR [ebp-0x18],0xffffffff
1000c2de:	mov    BYTE PTR [ebp-0x14],al
1000c2e1:	push   0x4
1000c2e3:	lea    ecx,[ebp+0x8]
1000c2e6:	push   ecx
1000c2e7:	push   0x4
1000c2e9:	mov    edx,ecx
1000c2eb:	mov    BYTE PTR [ebp-0x4],al
1000c2ee:	mov    eax,DWORD PTR [ebp+0x8]
1000c2f1:	push   edx
1000c2f2:	push   0x7
1000c2f4:	lea    ecx,[ebp-0x1c]
1000c2f7:	mov    DWORD PTR [ebp+0x8],eax
1000c2fa:	call   0x10007410
1000c2ff:	mov    edi,DWORD PTR [ebp-0x18]
1000c302:	test   edi,edi
1000c304:	je     0x1000c31c
1000c306:	call   DWORD PTR ds:0x1003407c
1000c30c:	push   edi
1000c30d:	mov    esi,eax
1000c30f:	call   DWORD PTR ds:0x10034058
1000c315:	push   esi
1000c316:	call   DWORD PTR ds:0x10034078
1000c31c:	mov    ecx,DWORD PTR [ebp-0xc]
1000c31f:	mov    DWORD PTR fs:0x0,ecx
1000c326:	pop    ecx
1000c327:	pop    edi
1000c328:	pop    esi
1000c329:	pop    ebx
1000c32a:	mov    esp,ebp
1000c32c:	pop    ebp
1000c32d:	ret    
1000c32e:	mov    eax,0x1000c31c
1000c333:	ret    
1000c334:	int3   
1000c335:	int3   
1000c336:	int3   
1000c337:	int3   
1000c338:	int3   
1000c339:	int3   
1000c33a:	int3   
1000c33b:	int3   
1000c33c:	int3   
1000c33d:	int3   
1000c33e:	int3   
1000c33f:	int3   
1000c340:	mov    ecx,DWORD PTR ds:0x10097990
1000c346:	mov    eax,ds:0x10097988
1000c34b:	mov    edx,DWORD PTR ds:0x10097984
1000c351:	push   esi
1000c352:	movzx  esi,WORD PTR ds:0x1009798c
1000c359:	push   edi
1000c35a:	xor    edi,edi
1000c35c:	cmp    ecx,0x1
1000c35f:	jne    0x1000c404
1000c365:	cmp    edx,0x4
1000c368:	jne    0x1000c4c2
1000c36e:	cmp    eax,0xa
1000c371:	jae    0x1000c3af
1000c373:	cmp    esi,0x3b6
1000c379:	jne    0x1000c382
1000c37b:	mov    edi,ecx
1000c37d:	mov    eax,edi
1000c37f:	pop    edi
1000c380:	pop    esi
1000c381:	ret    
1000c382:	lea    ecx,[esi-0x3b7]
1000c388:	cmp    ecx,0x81
1000c38e:	ja     0x1000c39a
1000c390:	mov    edi,0x2
1000c395:	mov    eax,edi
1000c397:	pop    edi
1000c398:	pop    esi
1000c399:	ret    
1000c39a:	cmp    esi,0x438
1000c3a0:	jbe    0x1000c3ac
1000c3a2:	mov    edi,0x3
1000c3a7:	mov    eax,edi
1000c3a9:	pop    edi
1000c3aa:	pop    esi
1000c3ab:	ret    
1000c3ac:	cmp    eax,0xa
1000c3af:	jne    0x1000c3f1
1000c3b1:	cmp    esi,0x7ce
1000c3b7:	jne    0x1000c3c3
1000c3b9:	mov    edi,0x4
1000c3be:	mov    eax,edi
1000c3c0:	pop    edi
1000c3c1:	pop    esi
1000c3c2:	ret    
1000c3c3:	lea    edx,[esi-0x7cf]
1000c3c9:	cmp    edx,0xb7
1000c3cf:	ja     0x1000c3db
1000c3d1:	mov    edi,0x5
1000c3d6:	mov    eax,edi
1000c3d8:	pop    edi
1000c3d9:	pop    esi
1000c3da:	ret    
1000c3db:	cmp    esi,0x887
1000c3e1:	jb     0x1000c4c2
1000c3e7:	mov    edi,0x6
1000c3ec:	mov    eax,edi
1000c3ee:	pop    edi
1000c3ef:	pop    esi
1000c3f0:	ret    
1000c3f1:	cmp    eax,0x5a
1000c3f4:	jne    0x1000c4c2
1000c3fa:	mov    edi,0x7
1000c3ff:	mov    eax,edi
1000c401:	pop    edi
1000c402:	pop    esi
1000c403:	ret    
1000c404:	cmp    ecx,0x2
1000c407:	jne    0x1000c4b8
1000c40d:	cmp    edx,0x3
1000c410:	jne    0x1000c425
1000c412:	cmp    eax,0x33
1000c415:	jne    0x1000c4c2
1000c41b:	mov    edi,0x65
1000c420:	mov    eax,edi
1000c422:	pop    edi
1000c423:	pop    esi
1000c424:	ret    
1000c425:	cmp    edx,0x4
1000c428:	jne    0x1000c43c
1000c42a:	test   eax,eax
1000c42c:	jne    0x1000c4c2
1000c432:	mov    edi,0x66
1000c437:	mov    eax,edi
1000c439:	pop    edi
1000c43a:	pop    esi
1000c43b:	ret    
1000c43c:	cmp    edx,0x5
1000c43f:	jne    0x1000c46d
1000c441:	test   eax,eax
1000c443:	jne    0x1000c44f
1000c445:	mov    edi,0x67
1000c44a:	mov    eax,edi
1000c44c:	pop    edi
1000c44d:	pop    esi
1000c44e:	ret    
1000c44f:	cmp    eax,0x1
1000c452:	jne    0x1000c45e
1000c454:	mov    edi,0x68
1000c459:	mov    eax,edi
1000c45b:	pop    edi
1000c45c:	pop    esi
1000c45d:	ret    
1000c45e:	cmp    eax,0x2
1000c461:	jne    0x1000c4c2
1000c463:	mov    edi,0x69
1000c468:	mov    eax,edi
1000c46a:	pop    edi
1000c46b:	pop    esi
1000c46c:	ret    
1000c46d:	cmp    edx,0x6
1000c470:	jne    0x1000c4c2
1000c472:	test   eax,eax
1000c474:	jne    0x1000c483
1000c476:	lea    edi,[edx+0x64]
1000c479:	call   0x1000c4d0
1000c47e:	mov    eax,edi
1000c480:	pop    edi
1000c481:	pop    esi
1000c482:	ret    
1000c483:	cmp    eax,0x1
1000c486:	jne    0x1000c49d
1000c488:	cmp    BYTE PTR ds:0x10097a9a,al
1000c48e:	jne    0x1000c4c2
1000c490:	lea    edi,[eax+0x6a]
1000c493:	call   0x1000c4d0
1000c498:	mov    eax,edi
1000c49a:	pop    edi
1000c49b:	pop    esi
1000c49c:	ret    
1000c49d:	cmp    eax,0x2
1000c4a0:	jne    0x1000c4c2
1000c4a2:	cmp    BYTE PTR ds:0x10097a9a,0x1
1000c4a9:	jne    0x1000c4c2
1000c4ab:	lea    edi,[eax+0x6a]
1000c4ae:	call   0x1000c4d0
1000c4b3:	mov    eax,edi
1000c4b5:	pop    edi
1000c4b6:	pop    esi
1000c4b7:	ret    
1000c4b8:	cmp    ecx,0x3
1000c4bb:	jne    0x1000c4c2
1000c4bd:	mov    edi,0xc9
1000c4c2:	mov    eax,edi
1000c4c4:	pop    edi
1000c4c5:	pop    esi
1000c4c6:	ret    
1000c4c7:	int3   
1000c4c8:	int3   
1000c4c9:	int3   
1000c4ca:	int3   
1000c4cb:	int3   
1000c4cc:	int3   
1000c4cd:	int3   
1000c4ce:	int3   
1000c4cf:	int3   
1000c4d0:	push   ebp
1000c4d1:	mov    ebp,esp
1000c4d3:	and    esp,0xfffffff8
1000c4d6:	push   ecx
1000c4d7:	mov    eax,ds:0x1009797c
1000c4dc:	test   eax,eax
1000c4de:	push   esi
1000c4df:	jne    0x1000c536
1000c4e1:	push   0x10084404
1000c4e6:	push   0xc
1000c4e8:	push   0x1008443c
1000c4ed:	call   0x10003540
1000c4f2:	add    esp,0xc
1000c4f5:	push   eax
1000c4f6:	call   DWORD PTR ds:0x10034098
1000c4fc:	mov    esi,eax
1000c4fe:	test   esi,esi
1000c500:	je     0x1000c531
1000c502:	push   0x10084458
1000c507:	push   0xe
1000c509:	push   0x10084498
1000c50e:	call   0x10003340
1000c513:	add    esp,0xc
1000c516:	push   eax
1000c517:	push   esi
1000c518:	call   DWORD PTR ds:0x10034044
1000c51e:	test   eax,eax
1000c520:	je     0x1000c531
1000c522:	push   0x1009797c
1000c527:	push   0x0
1000c529:	push   0x0
1000c52b:	push   0x0
1000c52d:	push   0x6
1000c52f:	call   eax
1000c531:	mov    eax,ds:0x1009797c
1000c536:	pop    esi
1000c537:	mov    esp,ebp
1000c539:	pop    ebp
1000c53a:	ret    
1000c53b:	int3   
1000c53c:	int3   
1000c53d:	int3   
1000c53e:	int3   
1000c53f:	int3   
1000c540:	push   0xffffffff
1000c542:	push   0x1002a788
1000c547:	mov    eax,fs:0x0
1000c54d:	push   eax
1000c54e:	push   ebx
1000c54f:	push   esi
1000c550:	push   edi
1000c551:	mov    eax,ds:0x100951fc
1000c556:	xor    eax,esp
1000c558:	push   eax
1000c559:	lea    eax,[esp+0x10]
1000c55d:	mov    fs:0x0,eax
1000c563:	mov    esi,ecx
1000c565:	mov    edi,DWORD PTR [esp+0x20]
1000c569:	mov    DWORD PTR [edi],0x0
1000c56f:	mov    DWORD PTR [esp+0x18],0x0
1000c577:	mov    eax,DWORD PTR [esi+0x14]
1000c57a:	mov    DWORD PTR [edi+0x4],eax
1000c57d:	mov    eax,DWORD PTR [esi+0x14]
1000c580:	push   eax
1000c581:	call   0x10015a45
1000c586:	mov    ebx,eax
1000c588:	mov    eax,DWORD PTR [edi]
1000c58a:	add    esp,0x4
1000c58d:	cmp    ebx,eax
1000c58f:	je     0x1000c59a
1000c591:	push   eax
1000c592:	call   0x10015b26
1000c597:	add    esp,0x4
1000c59a:	mov    DWORD PTR [edi],ebx
1000c59c:	cmp    DWORD PTR [esi+0x18],0x10
1000c5a0:	mov    eax,DWORD PTR [esi+0x14]
1000c5a3:	jb     0x1000c5aa
1000c5a5:	mov    esi,DWORD PTR [esi+0x4]
1000c5a8:	jmp    0x1000c5ad
1000c5aa:	add    esi,0x4
1000c5ad:	push   eax
1000c5ae:	push   esi
1000c5af:	push   ebx
1000c5b0:	call   0x10016820
1000c5b5:	add    esp,0xc
1000c5b8:	mov    eax,edi
1000c5ba:	mov    ecx,DWORD PTR [esp+0x10]
1000c5be:	mov    DWORD PTR fs:0x0,ecx
1000c5c5:	pop    ecx
1000c5c6:	pop    edi
1000c5c7:	pop    esi
1000c5c8:	pop    ebx
1000c5c9:	add    esp,0xc
1000c5cc:	ret    0x4
1000c5cf:	int3   
1000c5d0:	sub    esp,0x14
1000c5d3:	mov    eax,DWORD PTR [eax]
1000c5d5:	mov    ecx,DWORD PTR [eax+0xa]
1000c5d8:	imul   ecx,ecx,0xd
1000c5db:	add    ecx,DWORD PTR [eax+0x6]
1000c5de:	push   ebx
1000c5df:	push   ebp
1000c5e0:	lea    ebp,[ecx+eax*1+0x12]
1000c5e4:	mov    eax,DWORD PTR [eax+0xe]
1000c5e7:	test   eax,eax
1000c5e9:	push   esi
1000c5ea:	push   edi
1000c5eb:	mov    DWORD PTR [esp+0x10],0x0
1000c5f3:	mov    DWORD PTR [esp+0x20],eax
1000c5f7:	je     0x1000c679
1000c5fd:	mov    eax,DWORD PTR [esp+0x28]
1000c601:	mov    edx,DWORD PTR [eax+0x14]
1000c604:	mov    DWORD PTR [esp+0x14],edx
1000c608:	mov    edx,DWORD PTR [eax+0x18]
1000c60b:	mov    DWORD PTR [esp+0x1c],edx
1000c60f:	nop
1000c610:	lea    ebx,[ebp+0x6]
1000c613:	mov    eax,ebx
1000c615:	lea    edx,[eax+0x1]
1000c618:	mov    cl,BYTE PTR [eax]
1000c61a:	add    eax,0x1
1000c61d:	test   cl,cl
1000c61f:	jne    0x1000c618
1000c621:	mov    esi,DWORD PTR [esp+0x14]
1000c625:	sub    eax,edx
1000c627:	mov    edi,eax
1000c629:	cmp    esi,edi
1000c62b:	mov    eax,esi
1000c62d:	mov    ecx,esi
1000c62f:	jb     0x1000c633
1000c631:	mov    ecx,edi
1000c633:	cmp    DWORD PTR [esp+0x1c],0x10
1000c638:	mov    eax,DWORD PTR [esp+0x28]
1000c63c:	jb     0x1000c643
1000c63e:	mov    eax,DWORD PTR [eax+0x4]
1000c641:	jmp    0x1000c646
1000c643:	add    eax,0x4
1000c646:	push   ecx
1000c647:	push   ebx
1000c648:	push   eax
1000c649:	call   0x100012f0
1000c64e:	add    esp,0xc
1000c651:	test   eax,eax
1000c653:	jne    0x1000c662
1000c655:	cmp    esi,edi
1000c657:	jb     0x1000c662
1000c659:	cmp    esi,edi
1000c65b:	setne  al
1000c65e:	test   eax,eax
1000c660:	je     0x1000c686
1000c662:	movzx  ecx,WORD PTR [ebp+0x0]
1000c666:	mov    eax,DWORD PTR [esp+0x10]
1000c66a:	add    eax,0x1
1000c66d:	add    ebp,ecx
1000c66f:	cmp    eax,DWORD PTR [esp+0x20]
1000c673:	mov    DWORD PTR [esp+0x10],eax
1000c677:	jne    0x1000c610
1000c679:	pop    edi
1000c67a:	pop    esi
1000c67b:	pop    ebp
1000c67c:	or     eax,0xffffffff
1000c67f:	pop    ebx
1000c680:	add    esp,0x14
1000c683:	ret    0x4
1000c686:	mov    eax,DWORD PTR [ebp+0x2]
1000c689:	pop    edi
1000c68a:	pop    esi
1000c68b:	pop    ebp
1000c68c:	pop    ebx
1000c68d:	add    esp,0x14
1000c690:	ret    0x4
1000c693:	int3   
1000c694:	int3   
1000c695:	int3   
1000c696:	int3   
1000c697:	int3   
1000c698:	int3   
1000c699:	int3   
1000c69a:	int3   
1000c69b:	int3   
1000c69c:	int3   
1000c69d:	int3   
1000c69e:	int3   
1000c69f:	int3   
1000c6a0:	mov    eax,DWORD PTR [eax]
1000c6a2:	add    eax,0x12
1000c6a5:	ret    
1000c6a6:	int3   
1000c6a7:	int3   
1000c6a8:	int3   
1000c6a9:	int3   
1000c6aa:	int3   
1000c6ab:	int3   
1000c6ac:	int3   
1000c6ad:	int3   
1000c6ae:	int3   
1000c6af:	int3   
1000c6b0:	mov    ecx,DWORD PTR [eax]
1000c6b2:	mov    eax,DWORD PTR [ecx+0x6]
1000c6b5:	ret    
1000c6b6:	int3   
1000c6b7:	int3   
1000c6b8:	int3   
1000c6b9:	int3   
1000c6ba:	int3   
1000c6bb:	int3   
1000c6bc:	int3   
1000c6bd:	int3   
1000c6be:	int3   
1000c6bf:	int3   
1000c6c0:	push   ebp
1000c6c1:	push   esi
1000c6c2:	mov    esi,DWORD PTR [eax]
1000c6c4:	mov    ecx,DWORD PTR [esi+0x6]
1000c6c7:	push   edi
1000c6c8:	lea    edi,[esi+0x12]
1000c6cb:	xor    ebp,ebp
1000c6cd:	add    ecx,edi
1000c6cf:	cmp    DWORD PTR [esi+0xa],ebp
1000c6d2:	je     0x1000c706
1000c6d4:	push   ebx
1000c6d5:	cmp    BYTE PTR [ecx+0x4],0x0
1000c6d9:	jne    0x1000c6e9
1000c6db:	mov    edx,DWORD PTR [ecx+0x5]
1000c6de:	add    edx,DWORD PTR [esp+0x14]
1000c6e2:	mov    eax,DWORD PTR [ecx]
1000c6e4:	mov    DWORD PTR [edi+eax*1],edx
1000c6e7:	jmp    0x1000c6fa
1000c6e9:	mov    eax,DWORD PTR [ecx+0x5]
1000c6ec:	add    eax,DWORD PTR [esp+0x14]
1000c6f0:	mov    ebx,DWORD PTR [ecx]
1000c6f2:	cdq    
1000c6f3:	mov    DWORD PTR [edi+ebx*1],eax
1000c6f6:	mov    DWORD PTR [edi+ebx*1+0x4],edx
1000c6fa:	add    ebp,0x1
1000c6fd:	add    ecx,0xd
1000c700:	cmp    ebp,DWORD PTR [esi+0xa]
1000c703:	jne    0x1000c6d5
1000c705:	pop    ebx
1000c706:	pop    edi
1000c707:	pop    esi
1000c708:	pop    ebp
1000c709:	ret    0x4
1000c70c:	int3   
1000c70d:	int3   
1000c70e:	int3   
1000c70f:	int3   
1000c710:	sub    esp,0x8
1000c713:	push   edi
1000c714:	mov    edi,DWORD PTR ds:0x10034168
1000c71a:	lea    eax,[esp+0x4]
1000c71e:	push   eax
1000c71f:	mov    eax,ds:0x10096668
1000c724:	lea    ecx,[eax+eax*2]
1000c727:	push   0x40
1000c729:	add    ecx,ecx
1000c72b:	push   ecx
1000c72c:	push   esi
1000c72d:	mov    DWORD PTR [esp+0x14],0x0
1000c735:	call   edi
1000c737:	mov    edx,DWORD PTR [esp+0x14]
1000c73b:	sub    edx,DWORD PTR [esp+0x1c]
1000c73f:	mov    ecx,DWORD PTR [esp+0x10]
1000c743:	lea    eax,[esi+0x1]
1000c746:	sub    edx,eax
1000c748:	lea    edx,[edx+ecx*1-0x4]
1000c74c:	mov    ecx,DWORD PTR [esp+0x4]
1000c750:	mov    BYTE PTR [esi],0xe9
1000c753:	mov    DWORD PTR [eax],edx
1000c755:	lea    eax,[esp+0x8]
1000c759:	push   eax
1000c75a:	push   ecx
1000c75b:	push   0x5
1000c75d:	push   esi
1000c75e:	mov    DWORD PTR [esp+0x18],0x0
1000c766:	call   edi
1000c768:	pop    edi
1000c769:	add    esp,0x8
1000c76c:	ret    
1000c76d:	int3   
1000c76e:	int3   
1000c76f:	int3   
1000c770:	mov    eax,0x193c
1000c775:	call   0x10016550
1000c77a:	push   ebx
1000c77b:	xor    eax,eax
1000c77d:	push   ebp
1000c77e:	push   esi
1000c77f:	push   edi
1000c780:	mov    DWORD PTR [esp+0x38],eax
1000c784:	mov    DWORD PTR [esp+0x3c],eax
1000c788:	mov    DWORD PTR [esp+0x40],eax
1000c78c:	mov    DWORD PTR [esp+0x30],eax
1000c790:	mov    DWORD PTR [esp+0x34],eax
1000c794:	mov    DWORD PTR [esp+0x44],eax
1000c798:	mov    eax,DWORD PTR [esp+0x1950]
1000c79f:	lea    edx,[esp+0x20]
1000c7a3:	push   edx
1000c7a4:	mov    ebx,ecx
1000c7a6:	mov    ecx,DWORD PTR ds:0x1009666c
1000c7ac:	mov    DWORD PTR [esp+0x3c],eax
1000c7b0:	push   0x64
1000c7b2:	lea    eax,[esp+0x50]
1000c7b6:	mov    DWORD PTR [esp+0x48],ecx
1000c7ba:	xor    esi,esi
1000c7bc:	push   eax
1000c7bd:	lea    ecx,[esp+0x34]
1000c7c1:	push   ecx
1000c7c2:	mov    DWORD PTR [esp+0x30],esi
1000c7c6:	mov    DWORD PTR [esp+0x38],esi
1000c7ca:	mov    DWORD PTR [esp+0x3c],esi
1000c7ce:	mov    DWORD PTR [esp+0x4c],0x1e
1000c7d6:	call   0x10012550
1000c7db:	add    esp,0x10
1000c7de:	cmp    eax,0x3
1000c7e1:	jne    0x1000c7f0
1000c7e3:	xor    eax,eax
1000c7e5:	pop    edi
1000c7e6:	pop    esi
1000c7e7:	pop    ebp
1000c7e8:	pop    ebx
1000c7e9:	add    esp,0x193c
1000c7ef:	ret    
1000c7f0:	xor    edi,edi
1000c7f2:	xor    ebp,ebp
1000c7f4:	cmp    DWORD PTR [esp+0x20],esi
1000c7f8:	mov    DWORD PTR [esp+0x14],edi
1000c7fc:	mov    DWORD PTR [esp+0x10],esi
1000c800:	jbe    0x1000c932
1000c806:	lea    edx,[esp+0x50]
1000c80a:	mov    DWORD PTR [esp+0x18],edx
1000c80e:	jmp    0x1000c814
1000c810:	mov    edx,DWORD PTR [esp+0x18]
1000c814:	cmp    edi,DWORD PTR [esp+0x1954]
1000c81b:	jae    0x1000c932
1000c821:	mov    eax,DWORD PTR [esp+0x1950]
1000c828:	add    edi,eax
1000c82a:	mov    DWORD PTR [esp+0x1c],0xffffffff
1000c832:	lea    eax,[edx+0xa]
1000c835:	mov    cl,BYTE PTR [eax]
1000c837:	test   cl,cl
1000c839:	je     0x1000c84f
1000c83b:	cmp    cl,0x8
1000c83e:	jne    0x1000c844
1000c840:	mov    DWORD PTR [esp+0x1c],esi
1000c844:	add    esi,0x1
1000c847:	add    eax,0x4
1000c84a:	cmp    esi,0x4
1000c84d:	jne    0x1000c835
1000c84f:	mov    DWORD PTR [esp+0x24],esi
1000c853:	movzx  esi,BYTE PTR [edx]
1000c856:	push   esi
1000c857:	lea    ecx,[ebx+ebp*1]
1000c85a:	push   edi
1000c85b:	push   ecx
1000c85c:	call   0x10016820
1000c861:	add    esp,0xc
1000c864:	cmp    DWORD PTR [esp+0x24],0x1
1000c869:	jne    0x1000c903
1000c86f:	cmp    DWORD PTR [esp+0x1c],0x0
1000c874:	jne    0x1000c903
1000c87a:	mov    edx,DWORD PTR [esp+0x18]
1000c87e:	movzx  ecx,WORD PTR [edx+0xc]
1000c882:	movzx  eax,cx
1000c885:	shr    eax,0x3
1000c888:	cmp    cx,0x10
1000c88c:	jne    0x1000c8ab
1000c88e:	sub    edi,ebx
1000c890:	sub    edi,ebp
1000c892:	sub    edi,DWORD PTR [esp+0x1960]
1000c899:	sub    esi,eax
1000c89b:	add    edi,DWORD PTR [esp+0x1958]
1000c8a2:	add    esi,ebp
1000c8a4:	add    esi,ebx
1000c8a6:	add    WORD PTR [esi],di
1000c8a9:	jmp    0x1000c903
1000c8ab:	cmp    cx,0x20
1000c8af:	jne    0x1000c8cf
1000c8b1:	sub    esi,eax
1000c8b3:	mov    eax,DWORD PTR [esp+0x1958]
1000c8ba:	sub    eax,DWORD PTR [esp+0x1960]
1000c8c1:	add    esi,ebp
1000c8c3:	sub    eax,ebp
1000c8c5:	sub    eax,ebx
1000c8c7:	add    esi,ebx
1000c8c9:	add    eax,edi
1000c8cb:	add    DWORD PTR [esi],eax
1000c8cd:	jmp    0x1000c903
1000c8cf:	cmp    cx,0x40
1000c8d3:	jne    0x1000c903
1000c8d5:	sub    esi,eax
1000c8d7:	mov    eax,edi
1000c8d9:	sub    eax,ebp
1000c8db:	sub    eax,ebx
1000c8dd:	add    esi,ebp
1000c8df:	cdq    
1000c8e0:	add    esi,ebx
1000c8e2:	sub    eax,DWORD PTR [esp+0x1960]
1000c8e9:	sbb    edx,DWORD PTR [esp+0x1964]
1000c8f0:	add    eax,DWORD PTR [esp+0x1958]
1000c8f7:	adc    edx,DWORD PTR [esp+0x195c]
1000c8fe:	add    DWORD PTR [esi],eax
1000c900:	adc    DWORD PTR [esi+0x4],edx
1000c903:	mov    ecx,DWORD PTR [esp+0x18]
1000c907:	movzx  eax,BYTE PTR [ecx]
1000c90a:	add    DWORD PTR [esp+0x14],eax
1000c90e:	mov    edi,DWORD PTR [esp+0x14]
1000c912:	add    ebp,eax
1000c914:	mov    eax,DWORD PTR [esp+0x10]
1000c918:	add    eax,0x1
1000c91b:	add    ecx,0x40
1000c91e:	xor    esi,esi
1000c920:	cmp    eax,DWORD PTR [esp+0x20]
1000c924:	mov    DWORD PTR [esp+0x10],eax
1000c928:	mov    DWORD PTR [esp+0x18],ecx
1000c92c:	jb     0x1000c810
1000c932:	mov    eax,ds:0x10096668
1000c937:	mov    ecx,DWORD PTR [esp+0x1950]
1000c93e:	lea    edx,[esp+0x10]
1000c942:	push   edx
1000c943:	lea    eax,[eax+eax*2]
1000c946:	push   0x40
1000c948:	add    eax,eax
1000c94a:	add    ebx,ebp
1000c94c:	mov    ebp,DWORD PTR ds:0x10034168
1000c952:	push   eax
1000c953:	push   ebx
1000c954:	add    edi,ecx
1000c956:	mov    DWORD PTR [esp+0x20],esi
1000c95a:	call   ebp
1000c95c:	mov    eax,DWORD PTR [esp+0x1958]
1000c963:	sub    eax,DWORD PTR [esp+0x1960]
1000c96a:	lea    ecx,[ebx+0x1]
1000c96d:	sub    eax,ecx
1000c96f:	lea    edx,[eax+edi*1-0x4]
1000c973:	mov    BYTE PTR [ebx],0xe9
1000c976:	lea    eax,[esp+0x1c]
1000c97a:	push   eax
1000c97b:	mov    DWORD PTR [ecx],edx
1000c97d:	mov    ecx,DWORD PTR [esp+0x14]
1000c981:	push   ecx
1000c982:	push   0x5
1000c984:	push   ebx
1000c985:	mov    DWORD PTR [esp+0x2c],esi
1000c989:	call   ebp
1000c98b:	pop    edi
1000c98c:	pop    esi
1000c98d:	pop    ebp
1000c98e:	mov    eax,0x1
1000c993:	pop    ebx
1000c994:	add    esp,0x193c
1000c99a:	ret    
1000c99b:	int3   
1000c99c:	int3   
1000c99d:	int3   
1000c99e:	int3   
1000c99f:	int3   
1000c9a0:	mov    ecx,DWORD PTR [esp+0x1c]
1000c9a4:	mov    edx,DWORD PTR ds:0x10096668
1000c9aa:	push   ebx
1000c9ab:	mov    ebx,DWORD PTR [esp+0x10]
1000c9af:	push   esi
1000c9b0:	push   edi
1000c9b1:	mov    edi,DWORD PTR [esp+0x1c]
1000c9b5:	mov    esi,eax
1000c9b7:	mov    eax,DWORD PTR [esp+0x2c]
1000c9bb:	push   eax
1000c9bc:	push   ecx
1000c9bd:	mov    ecx,DWORD PTR [esp+0x18]
1000c9c1:	push   edi
1000c9c2:	push   ebx
1000c9c3:	push   edx
1000c9c4:	push   esi
1000c9c5:	call   0x1000c770
1000c9ca:	add    esp,0x18
1000c9cd:	test   eax,eax
1000c9cf:	jne    0x1000c9d5
1000c9d1:	pop    edi
1000c9d2:	pop    esi
1000c9d3:	pop    ebx
1000c9d4:	ret    
1000c9d5:	mov    eax,DWORD PTR [esp+0x24]
1000c9d9:	mov    ecx,DWORD PTR [esp+0x20]
1000c9dd:	mov    edx,DWORD PTR [esp+0x14]
1000c9e1:	push   edi
1000c9e2:	push   ebx
1000c9e3:	push   eax
1000c9e4:	push   ecx
1000c9e5:	push   edx
1000c9e6:	call   0x1000c710
1000c9eb:	add    esp,0x14
1000c9ee:	pop    edi
1000c9ef:	pop    esi
1000c9f0:	mov    eax,0x1
1000c9f5:	pop    ebx
1000c9f6:	ret    
1000c9f7:	int3   
1000c9f8:	int3   
1000c9f9:	int3   
1000c9fa:	int3   
1000c9fb:	int3   
1000c9fc:	int3   
1000c9fd:	int3   
1000c9fe:	int3   
1000c9ff:	int3   
1000ca00:	sub    esp,0x8
1000ca03:	push   ebx
1000ca04:	push   ebp
1000ca05:	push   edi
1000ca06:	push   0x20
1000ca08:	mov    DWORD PTR [esp+0x14],0x0
1000ca10:	call   0x10015a45
1000ca15:	add    esp,0x4
1000ca18:	push   0x20
1000ca1a:	mov    ebx,eax
1000ca1c:	call   0x10015a45
1000ca21:	mov    ebp,eax
1000ca23:	mov    eax,ds:0x10096668
1000ca28:	lea    eax,[eax+eax*2]
1000ca2b:	add    eax,eax
1000ca2d:	add    esp,0x4
1000ca30:	push   eax
1000ca31:	call   0x10015a45
1000ca36:	add    esp,0x4
1000ca39:	mov    DWORD PTR [esp+0xc],eax
1000ca3d:	mov    eax,ds:0x10096668
1000ca42:	push   0x40
1000ca44:	lea    eax,[eax+eax*2]
1000ca47:	push   0x3000
1000ca4c:	add    eax,eax
1000ca4e:	push   eax
1000ca4f:	push   0x0
1000ca51:	push   esi
1000ca52:	call   DWORD PTR ds:0x10034110
1000ca58:	mov    edi,eax
1000ca5a:	test   edi,edi
1000ca5c:	je     0x1000cb0e
1000ca62:	mov    eax,DWORD PTR [esp+0x18]
1000ca66:	push   0x0
1000ca68:	push   0x20
1000ca6a:	push   ebx
1000ca6b:	push   eax
1000ca6c:	push   esi
1000ca6d:	call   DWORD PTR ds:0x10034118
1000ca73:	test   eax,eax
1000ca75:	je     0x1000caff
1000ca7b:	mov    ecx,DWORD PTR [esp+0x1c]
1000ca7f:	push   0x0
1000ca81:	push   0x20
1000ca83:	push   ebp
1000ca84:	push   ecx
1000ca85:	push   esi
1000ca86:	call   DWORD PTR ds:0x10034118
1000ca8c:	test   eax,eax
1000ca8e:	je     0x1000caff
1000ca90:	mov    ecx,DWORD PTR [esp+0xc]
1000ca94:	mov    eax,edi
1000ca96:	sub    eax,ecx
1000ca98:	cdq    
1000ca99:	push   edx
1000ca9a:	push   eax
1000ca9b:	mov    eax,DWORD PTR [esp+0x24]
1000ca9f:	sub    eax,ebp
1000caa1:	cdq    
1000caa2:	push   edx
1000caa3:	push   eax
1000caa4:	mov    eax,DWORD PTR [esp+0x28]
1000caa8:	sub    eax,ebx
1000caaa:	cdq    
1000caab:	push   edx
1000caac:	push   eax
1000caad:	push   ebp
1000caae:	push   ecx
1000caaf:	mov    eax,ebx
1000cab1:	call   0x1000c9a0
1000cab6:	add    esp,0x20
1000cab9:	test   eax,eax
1000cabb:	je     0x1000caff
1000cabd:	mov    eax,ds:0x10096668
1000cac2:	push   0x0
1000cac4:	lea    edx,[eax+eax*2]
1000cac7:	mov    eax,DWORD PTR [esp+0x10]
1000cacb:	add    edx,edx
1000cacd:	push   edx
1000cace:	push   eax
1000cacf:	push   edi
1000cad0:	push   esi
1000cad1:	call   DWORD PTR ds:0x10034128
1000cad7:	mov    ecx,DWORD PTR [esp+0x18]
1000cadb:	push   0x0
1000cadd:	push   0x20
1000cadf:	push   ebx
1000cae0:	push   ecx
1000cae1:	push   esi
1000cae2:	call   DWORD PTR ds:0x10034128
1000cae8:	mov    edx,DWORD PTR [esp+0x1c]
1000caec:	push   0x0
1000caee:	push   0x20
1000caf0:	push   ebp
1000caf1:	push   edx
1000caf2:	push   esi
1000caf3:	call   DWORD PTR ds:0x10034128
1000caf9:	mov    DWORD PTR [esp+0x10],edi
1000cafd:	jmp    0x1000cb0e
1000caff:	push   0x8000
1000cb04:	push   0x0
1000cb06:	push   edi
1000cb07:	push   esi
1000cb08:	call   DWORD PTR ds:0x10034124
1000cb0e:	push   ebx
1000cb0f:	call   0x100178e9
1000cb14:	add    esp,0x4
1000cb17:	push   ebp
1000cb18:	call   0x100178e9
1000cb1d:	mov    eax,DWORD PTR [esp+0x10]
1000cb21:	add    esp,0x4
1000cb24:	push   eax
1000cb25:	call   0x100178e9
1000cb2a:	mov    eax,DWORD PTR [esp+0x14]
1000cb2e:	add    esp,0x4
1000cb31:	pop    edi
1000cb32:	pop    ebp
1000cb33:	pop    ebx
1000cb34:	add    esp,0x8
1000cb37:	ret    
1000cb38:	int3   
1000cb39:	int3   
1000cb3a:	int3   
1000cb3b:	int3   
1000cb3c:	int3   
1000cb3d:	int3   
1000cb3e:	int3   
1000cb3f:	int3   
1000cb40:	push   ebp
1000cb41:	mov    ebp,esp
1000cb43:	mov    eax,0x80000048
1000cb48:	pop    ebp
1000cb49:	ret    0x8
1000cb4c:	int3   
1000cb4d:	int3   
1000cb4e:	int3   
1000cb4f:	int3   
1000cb50:	push   ebp
1000cb51:	mov    ebp,esp
1000cb53:	mov    eax,0x80000048
1000cb58:	pop    ebp
1000cb59:	ret    0x14
1000cb5c:	int3   
1000cb5d:	int3   
1000cb5e:	int3   
1000cb5f:	int3   
1000cb60:	push   ebp
1000cb61:	mov    ebp,esp
1000cb63:	mov    eax,0x80000048
1000cb68:	pop    ebp
1000cb69:	ret    0x10
1000cb6c:	int3   
1000cb6d:	int3   
1000cb6e:	int3   
1000cb6f:	int3   
1000cb70:	push   ebp
1000cb71:	mov    ebp,esp
1000cb73:	mov    eax,0x80000048
1000cb78:	pop    ebp
1000cb79:	ret    0x4
1000cb7c:	int3   
1000cb7d:	int3   
1000cb7e:	int3   
1000cb7f:	int3   
1000cb80:	push   ebp
1000cb81:	mov    ebp,esp
1000cb83:	mov    eax,0x80000048
1000cb88:	pop    ebp
1000cb89:	ret    0x4
1000cb8c:	int3   
1000cb8d:	int3   
1000cb8e:	int3   
1000cb8f:	int3   
1000cb90:	push   ebp
1000cb91:	mov    ebp,esp
1000cb93:	mov    eax,0x80000048
1000cb98:	pop    ebp
1000cb99:	ret    0x4
1000cb9c:	int3   
1000cb9d:	int3   
1000cb9e:	int3   
1000cb9f:	int3   
1000cba0:	push   ebp
1000cba1:	mov    ebp,esp
1000cba3:	mov    eax,0x80000048
1000cba8:	pop    ebp
1000cba9:	ret    0xc
1000cbac:	int3   
1000cbad:	int3   
1000cbae:	int3   
1000cbaf:	int3   
1000cbb0:	push   ebp
1000cbb1:	mov    ebp,esp
1000cbb3:	mov    eax,0x80000048
1000cbb8:	pop    ebp
1000cbb9:	ret    0x10
1000cbbc:	int3   
1000cbbd:	int3   
1000cbbe:	int3   
1000cbbf:	int3   
1000cbc0:	push   ebp
1000cbc1:	mov    ebp,esp
1000cbc3:	mov    eax,0x80000048
1000cbc8:	pop    ebp
1000cbc9:	ret    0x14
1000cbcc:	int3   
1000cbcd:	int3   
1000cbce:	int3   
1000cbcf:	int3   
1000cbd0:	push   ebp
1000cbd1:	mov    ebp,esp
1000cbd3:	mov    eax,0x80000048
1000cbd8:	pop    ebp
1000cbd9:	ret    0xc
1000cbdc:	int3   
1000cbdd:	int3   
1000cbde:	int3   
1000cbdf:	int3   
1000cbe0:	push   ebp
1000cbe1:	mov    ebp,esp
1000cbe3:	mov    eax,0x80000048
1000cbe8:	pop    ebp
1000cbe9:	ret    0x8
1000cbec:	int3   
1000cbed:	int3   
1000cbee:	int3   
1000cbef:	int3   
1000cbf0:	push   ebp
1000cbf1:	mov    ebp,esp
1000cbf3:	mov    eax,0x80000048
1000cbf8:	pop    ebp
1000cbf9:	ret    0x8
1000cbfc:	int3   
1000cbfd:	int3   
1000cbfe:	int3   
1000cbff:	int3   
1000cc00:	push   ebp
1000cc01:	mov    ebp,esp
1000cc03:	mov    eax,0x80000048
1000cc08:	pop    ebp
1000cc09:	ret    0x8
1000cc0c:	int3   
1000cc0d:	int3   
1000cc0e:	int3   
1000cc0f:	int3   
1000cc10:	push   ebp
1000cc11:	mov    ebp,esp
1000cc13:	mov    eax,0x80000048
1000cc18:	pop    ebp
1000cc19:	ret    0x10
1000cc1c:	int3   
1000cc1d:	int3   
1000cc1e:	int3   
1000cc1f:	int3   
1000cc20:	push   ebp
1000cc21:	mov    ebp,esp
1000cc23:	mov    eax,0x80000048
1000cc28:	pop    ebp
1000cc29:	ret    0x1c
1000cc2c:	int3   
1000cc2d:	int3   
1000cc2e:	int3   
1000cc2f:	int3   
1000cc30:	push   ebp
1000cc31:	mov    ebp,esp
1000cc33:	mov    eax,0x80000048
1000cc38:	pop    ebp
1000cc39:	ret    0x8
1000cc3c:	int3   
1000cc3d:	int3   
1000cc3e:	int3   
1000cc3f:	int3   
1000cc40:	push   ebp
1000cc41:	mov    ebp,esp
1000cc43:	mov    eax,0x80000048
1000cc48:	pop    ebp
1000cc49:	ret    0x8
1000cc4c:	int3   
1000cc4d:	int3   
1000cc4e:	int3   
1000cc4f:	int3   
1000cc50:	push   ebp
1000cc51:	mov    ebp,esp
1000cc53:	mov    eax,0x80000048
1000cc58:	pop    ebp
1000cc59:	ret    0x1c
1000cc5c:	int3   
1000cc5d:	int3   
1000cc5e:	int3   
1000cc5f:	int3   
1000cc60:	push   ebp
1000cc61:	mov    ebp,esp
1000cc63:	push   ecx
1000cc64:	mov    DWORD PTR [ebp-0x4],0x0
1000cc6b:	mov    eax,DWORD PTR [ebp+0x14]
1000cc6e:	mov    DWORD PTR [eax],0x30000
1000cc74:	mov    eax,DWORD PTR [ebp-0x4]
1000cc77:	mov    esp,ebp
1000cc79:	pop    ebp
1000cc7a:	ret    0x10
1000cc7d:	int3   
1000cc7e:	int3   
1000cc7f:	int3   
1000cc80:	push   ebp
1000cc81:	mov    ebp,esp
1000cc83:	mov    eax,0x80000048
1000cc88:	pop    ebp
1000cc89:	ret    0x14
1000cc8c:	int3   
1000cc8d:	int3   
1000cc8e:	int3   
1000cc8f:	int3   
1000cc90:	push   ebp
1000cc91:	mov    ebp,esp
1000cc93:	mov    eax,0x80000048
1000cc98:	pop    ebp
1000cc99:	ret    0x8
1000cc9c:	int3   
1000cc9d:	int3   
1000cc9e:	int3   
1000cc9f:	int3   
1000cca0:	push   ebp
1000cca1:	mov    ebp,esp
1000cca3:	xor    eax,eax
1000cca5:	pop    ebp
1000cca6:	ret    0x8
1000cca9:	int3   
1000ccaa:	int3   
1000ccab:	int3   
1000ccac:	int3   
1000ccad:	int3   
1000ccae:	int3   
1000ccaf:	int3   
1000ccb0:	push   ebp
1000ccb1:	mov    ebp,esp
1000ccb3:	xor    eax,eax
1000ccb5:	pop    ebp
1000ccb6:	ret    0x10
1000ccb9:	int3   
1000ccba:	int3   
1000ccbb:	int3   
1000ccbc:	int3   
1000ccbd:	int3   
1000ccbe:	int3   
1000ccbf:	int3   
1000ccc0:	push   ebp
1000ccc1:	mov    ebp,esp
1000ccc3:	call   0x1000dfd0
1000ccc8:	mov    eax,DWORD PTR [ebp+0x24]
1000cccb:	mov    DWORD PTR [eax],0x1
1000ccd1:	xor    eax,eax
1000ccd3:	pop    ebp
1000ccd4:	ret    0x20
1000ccd7:	int3   
1000ccd8:	int3   
1000ccd9:	int3   
1000ccda:	int3   
1000ccdb:	int3   
1000ccdc:	int3   
1000ccdd:	int3   
1000ccde:	int3   
1000ccdf:	int3   
1000cce0:	push   ebp
1000cce1:	mov    ebp,esp
1000cce3:	xor    eax,eax
1000cce5:	pop    ebp
1000cce6:	ret    0x8
1000cce9:	int3   
1000ccea:	int3   
1000cceb:	int3   
1000ccec:	int3   
1000cced:	int3   
1000ccee:	int3   
1000ccef:	int3   
1000ccf0:	push   ebp
1000ccf1:	mov    ebp,esp
1000ccf3:	xor    eax,eax
1000ccf5:	pop    ebp
1000ccf6:	ret    0x8
1000ccf9:	int3   
1000ccfa:	int3   
1000ccfb:	int3   
1000ccfc:	int3   
1000ccfd:	int3   
1000ccfe:	int3   
1000ccff:	int3   
1000cd00:	push   ebp
1000cd01:	mov    ebp,esp
1000cd03:	xor    eax,eax
1000cd05:	pop    ebp
1000cd06:	ret    0x8
1000cd09:	int3   
1000cd0a:	int3   
1000cd0b:	int3   
1000cd0c:	int3   
1000cd0d:	int3   
1000cd0e:	int3   
1000cd0f:	int3   
1000cd10:	push   ebp
1000cd11:	mov    ebp,esp
1000cd13:	mov    eax,DWORD PTR [ebp+0xc]
1000cd16:	mov    DWORD PTR [eax],0x0
1000cd1c:	mov    ecx,DWORD PTR [ebp+0x10]
1000cd1f:	mov    DWORD PTR [ecx],0x0
1000cd25:	xor    eax,eax
1000cd27:	pop    ebp
1000cd28:	ret    0x18
1000cd2b:	int3   
1000cd2c:	int3   
1000cd2d:	int3   
1000cd2e:	int3   
1000cd2f:	int3   
1000cd30:	push   ebp
1000cd31:	mov    ebp,esp
1000cd33:	push   ecx
1000cd34:	mov    DWORD PTR [ebp-0x4],0x0
1000cd3b:	push   0x1
1000cd3d:	mov    eax,DWORD PTR [ebp+0x8]
1000cd40:	push   eax
1000cd41:	call   0x10002130
1000cd46:	add    esp,0x8
1000cd49:	mov    ecx,DWORD PTR [ebp-0x4]
1000cd4c:	or     ecx,0x1
1000cd4f:	mov    DWORD PTR [ebp-0x4],ecx
1000cd52:	mov    eax,DWORD PTR [ebp+0x8]
1000cd55:	mov    esp,ebp
1000cd57:	pop    ebp
1000cd58:	ret    
1000cd59:	int3   
1000cd5a:	int3   
1000cd5b:	int3   
1000cd5c:	int3   
1000cd5d:	int3   
1000cd5e:	int3   
1000cd5f:	int3   
1000cd60:	push   ebp
1000cd61:	mov    ebp,esp
1000cd63:	sub    esp,0xc
1000cd66:	mov    DWORD PTR [ebp-0x4],0x0
1000cd6d:	lea    eax,[ebp-0x8]
1000cd70:	push   eax
1000cd71:	call   0x1000cd30
1000cd76:	add    esp,0x4
1000cd79:	lea    ecx,[ebp-0x8]
1000cd7c:	call   0x10003190
1000cd81:	push   eax
1000cd82:	mov    ecx,DWORD PTR [ebp+0x8]
1000cd85:	push   ecx
1000cd86:	call   DWORD PTR ds:0x10034024
1000cd8c:	mov    edx,DWORD PTR [ebp-0x4]
1000cd8f:	mov    DWORD PTR [ebp-0xc],edx
1000cd92:	lea    ecx,[ebp-0x8]
1000cd95:	call   0x10003b40
1000cd9a:	mov    eax,DWORD PTR [ebp-0xc]
1000cd9d:	mov    esp,ebp
1000cd9f:	pop    ebp
1000cda0:	ret    0x4
1000cda3:	int3   
1000cda4:	int3   
1000cda5:	int3   
1000cda6:	int3   
1000cda7:	int3   
1000cda8:	int3   
1000cda9:	int3   
1000cdaa:	int3   
1000cdab:	int3   
1000cdac:	int3   
1000cdad:	int3   
1000cdae:	int3   
1000cdaf:	int3   
1000cdb0:	push   ebp
1000cdb1:	mov    ebp,esp
1000cdb3:	xor    eax,eax
1000cdb5:	pop    ebp
1000cdb6:	ret    0x10
1000cdb9:	int3   
1000cdba:	int3   
1000cdbb:	int3   
1000cdbc:	int3   
1000cdbd:	int3   
1000cdbe:	int3   
1000cdbf:	int3   
1000cdc0:	push   ebp
1000cdc1:	mov    ebp,esp
1000cdc3:	xor    eax,eax
1000cdc5:	pop    ebp
1000cdc6:	ret    0xc
1000cdc9:	int3   
1000cdca:	int3   
1000cdcb:	int3   
1000cdcc:	int3   
1000cdcd:	int3   
1000cdce:	int3   
1000cdcf:	int3   
1000cdd0:	push   ebp
1000cdd1:	mov    ebp,esp
1000cdd3:	sub    esp,0x2c
1000cdd6:	mov    eax,ds:0x100951fc
1000cddb:	xor    eax,ebp
1000cddd:	mov    DWORD PTR [ebp-0x1c],eax
1000cde0:	call   0x10001000
1000cde5:	mov    DWORD PTR [ebp-0x14],eax
1000cde8:	lea    eax,[ebp-0x10]
1000cdeb:	push   eax
1000cdec:	call   0x1000cd30
1000cdf1:	add    esp,0x4
1000cdf4:	lea    ecx,[ebp-0x10]
1000cdf7:	call   0x10003190
1000cdfc:	mov    DWORD PTR [ebp-0xc],eax
1000cdff:	cmp    DWORD PTR [ebp-0xc],0x0
1000ce03:	jne    0x1000ce0e
1000ce05:	mov    DWORD PTR [ebp-0x24],0x0
1000ce0c:	jmp    0x1000ce5d
1000ce0e:	mov    ecx,DWORD PTR [ebp-0xc]
1000ce11:	push   ecx
1000ce12:	call   DWORD PTR ds:0x10034028
1000ce18:	add    eax,0x1
1000ce1b:	mov    DWORD PTR [ebp-0x4],eax
1000ce1e:	cmp    DWORD PTR [ebp-0x4],0x3fffffff
1000ce25:	jle    0x1000ce30
1000ce27:	mov    DWORD PTR [ebp-0x28],0x0
1000ce2e:	jmp    0x1000ce57
1000ce30:	mov    eax,DWORD PTR [ebp-0x4]
1000ce33:	shl    eax,1
1000ce35:	call   0x10015b40
1000ce3a:	mov    DWORD PTR [ebp-0x2c],esp
1000ce3d:	mov    edx,DWORD PTR [ebp-0x14]
1000ce40:	push   edx
1000ce41:	mov    eax,DWORD PTR [ebp-0x4]
1000ce44:	shl    eax,1
1000ce46:	push   eax
1000ce47:	mov    ecx,DWORD PTR [ebp-0xc]
1000ce4a:	push   ecx
1000ce4b:	mov    edx,DWORD PTR [ebp-0x2c]
1000ce4e:	push   edx
1000ce4f:	call   0x10001050
1000ce54:	mov    DWORD PTR [ebp-0x28],eax
1000ce57:	mov    eax,DWORD PTR [ebp-0x28]
1000ce5a:	mov    DWORD PTR [ebp-0x24],eax
1000ce5d:	push   0x1
1000ce5f:	mov    ecx,DWORD PTR [ebp-0x24]
1000ce62:	push   ecx
1000ce63:	call   0x1000cea0
1000ce68:	mov    DWORD PTR [ebp-0x8],eax
1000ce6b:	mov    edx,DWORD PTR [ebp-0x8]
1000ce6e:	mov    DWORD PTR [ebp-0x20],edx
1000ce71:	lea    ecx,[ebp-0x10]
1000ce74:	call   0x10003b40
1000ce79:	mov    eax,DWORD PTR [ebp-0x20]
1000ce7c:	lea    esp,[ebp-0x2c]
1000ce7f:	mov    ecx,DWORD PTR [ebp-0x1c]
1000ce82:	xor    ecx,ebp
1000ce84:	call   0x10015b2b
1000ce89:	mov    esp,ebp
1000ce8b:	pop    ebp
1000ce8c:	ret    0xc
1000ce8f:	int3   
1000ce90:	push   ebp
1000ce91:	mov    ebp,esp
1000ce93:	xor    eax,eax
1000ce95:	pop    ebp
1000ce96:	ret    0xc
1000ce99:	int3   
1000ce9a:	int3   
1000ce9b:	int3   
1000ce9c:	int3   
1000ce9d:	int3   
1000ce9e:	int3   
1000ce9f:	int3   
1000cea0:	push   ebp
1000cea1:	mov    ebp,esp
1000cea3:	sub    esp,0x28
1000cea6:	cmp    DWORD PTR [ebp+0xc],0x0
1000ceaa:	je     0x1000d06c
1000ceb0:	push   0x10034468
1000ceb5:	push   0xa
1000ceb7:	push   0x10034490
1000cebc:	call   0x10003340
1000cec1:	add    esp,0xc
1000cec4:	push   eax
1000cec5:	call   DWORD PTR ds:0x10034048
1000cecb:	mov    DWORD PTR [ebp-0x8],eax
1000cece:	cmp    DWORD PTR [ebp-0x8],0x0
1000ced2:	jne    0x1000cee5
1000ced4:	mov    DWORD PTR [ebp-0x4],0x80000048
1000cedb:	jmp    0x1000d073
1000cee0:	jmp    0x1000d073
1000cee5:	push   0x1003449c
1000ceea:	push   0x13
1000ceec:	push   0x100344dc
1000cef1:	call   0x10003340
1000cef6:	add    esp,0xc
1000cef9:	push   eax
1000cefa:	mov    eax,DWORD PTR [ebp-0x8]
1000cefd:	push   eax
1000cefe:	call   DWORD PTR ds:0x10034044
1000cf04:	mov    DWORD PTR [ebp-0x18],eax
1000cf07:	cmp    DWORD PTR [ebp-0x18],0x0
1000cf0b:	jne    0x1000cf1e
1000cf0d:	mov    DWORD PTR [ebp-0x4],0x80000048
1000cf14:	jmp    0x1000d060
1000cf19:	jmp    0x1000d060
1000cf1e:	mov    DWORD PTR [ebp-0x14],0x18
1000cf25:	jmp    0x1000cf68
1000cf27:	jmp    0x1000cf68
1000cf29:	mov    ecx,DWORD PTR [ebp-0x1c]
1000cf2c:	push   ecx
1000cf2d:	push   0x20000
1000cf32:	call   DWORD PTR [ebp-0x18]
1000cf35:	mov    DWORD PTR [ebp-0x4],eax
1000cf38:	cmp    DWORD PTR [ebp-0x4],0x0
1000cf3c:	je     0x1000cf48
1000cf3e:	jmp    0x1000d056
1000cf43:	jmp    0x1000d056
1000cf48:	mov    edx,DWORD PTR [ebp-0x1c]
1000cf4b:	mov    eax,DWORD PTR [ebp-0x1c]
1000cf4e:	mov    ecx,DWORD PTR [edx+0x4]
1000cf51:	cmp    ecx,DWORD PTR [eax]
1000cf53:	jbe    0x1000cf98
1000cf55:	mov    edx,DWORD PTR [ebp-0x1c]
1000cf58:	mov    eax,DWORD PTR [edx+0x4]
1000cf5b:	mov    DWORD PTR [ebp-0x14],eax
1000cf5e:	mov    ecx,DWORD PTR [ebp-0x1c]
1000cf61:	push   ecx
1000cf62:	call   DWORD PTR ds:0x10034040
1000cf68:	mov    edx,DWORD PTR [ebp-0x14]
1000cf6b:	push   edx
1000cf6c:	push   0x40
1000cf6e:	call   DWORD PTR ds:0x1003403c
1000cf74:	mov    DWORD PTR [ebp-0x1c],eax
1000cf77:	cmp    DWORD PTR [ebp-0x1c],0x0
1000cf7b:	jne    0x1000cf8e
1000cf7d:	mov    DWORD PTR [ebp-0x4],0x80000044
1000cf84:	jmp    0x1000d060
1000cf89:	jmp    0x1000d060
1000cf8e:	mov    eax,DWORD PTR [ebp-0x1c]
1000cf91:	mov    ecx,DWORD PTR [ebp-0x14]
1000cf94:	mov    DWORD PTR [eax],ecx
1000cf96:	jmp    0x1000cf29
1000cf98:	mov    edx,DWORD PTR [ebp-0x1c]
1000cf9b:	mov    eax,DWORD PTR [ebp-0x1c]
1000cf9e:	add    eax,DWORD PTR [edx+0x14]
1000cfa1:	mov    DWORD PTR [ebp-0x10],eax
1000cfa4:	mov    DWORD PTR [ebp-0xc],0x0
1000cfab:	jmp    0x1000cfb6
1000cfad:	mov    ecx,DWORD PTR [ebp-0xc]
1000cfb0:	add    ecx,0x1
1000cfb3:	mov    DWORD PTR [ebp-0xc],ecx
1000cfb6:	mov    edx,DWORD PTR [ebp-0x1c]
1000cfb9:	mov    eax,DWORD PTR [ebp-0xc]
1000cfbc:	cmp    eax,DWORD PTR [edx+0xc]
1000cfbf:	jae    0x1000d04f
1000cfc5:	mov    ecx,DWORD PTR [ebp-0x10]
1000cfc8:	mov    edx,DWORD PTR [ebp-0x1c]
1000cfcb:	add    edx,DWORD PTR [ecx+0x8]
1000cfce:	mov    DWORD PTR [ebp-0x24],edx
1000cfd1:	mov    eax,DWORD PTR [ebp-0x24]
1000cfd4:	push   eax
1000cfd5:	call   DWORD PTR ds:0x10034038
1000cfdb:	mov    ecx,DWORD PTR [ebp-0x24]
1000cfde:	lea    edx,[ecx+eax*1-0x1]
1000cfe2:	mov    DWORD PTR [ebp-0x20],edx
1000cfe5:	jmp    0x1000cff0
1000cfe7:	mov    eax,DWORD PTR [ebp-0x20]
1000cfea:	sub    eax,0x1
1000cfed:	mov    DWORD PTR [ebp-0x20],eax
1000cff0:	mov    ecx,DWORD PTR [ebp-0x20]
1000cff3:	movsx  edx,BYTE PTR [ecx]
1000cff6:	cmp    edx,0x5c
1000cff9:	je     0x1000d005
1000cffb:	mov    eax,DWORD PTR [ebp-0x20]
1000cffe:	cmp    eax,DWORD PTR [ebp-0x24]
1000d001:	je     0x1000d005
1000d003:	jmp    0x1000cfe7
1000d005:	mov    ecx,DWORD PTR [ebp-0x20]
1000d008:	cmp    ecx,DWORD PTR [ebp-0x24]
1000d00b:	jne    0x1000d015
1000d00d:	mov    edx,DWORD PTR [ebp-0x20]
1000d010:	mov    DWORD PTR [ebp-0x28],edx
1000d013:	jmp    0x1000d01e
1000d015:	mov    eax,DWORD PTR [ebp-0x20]
1000d018:	add    eax,0x1
1000d01b:	mov    DWORD PTR [ebp-0x28],eax
1000d01e:	mov    ecx,DWORD PTR [ebp-0x28]
1000d021:	mov    DWORD PTR [ebp-0x24],ecx
1000d024:	mov    edx,DWORD PTR [ebp+0x8]
1000d027:	push   edx
1000d028:	mov    eax,DWORD PTR [ebp-0x24]
1000d02b:	push   eax
1000d02c:	call   DWORD PTR ds:0x10034034
1000d032:	test   eax,eax
1000d034:	jne    0x1000d041
1000d036:	mov    DWORD PTR [ebp-0x4],0x80000056
1000d03d:	jmp    0x1000d056
1000d03f:	jmp    0x1000d056
1000d041:	mov    ecx,DWORD PTR [ebp-0x10]
1000d044:	add    ecx,0xc
1000d047:	mov    DWORD PTR [ebp-0x10],ecx
1000d04a:	jmp    0x1000cfad
1000d04f:	mov    DWORD PTR [ebp-0x4],0x0
1000d056:	mov    edx,DWORD PTR [ebp-0x1c]
1000d059:	push   edx
1000d05a:	call   DWORD PTR ds:0x10034040
1000d060:	mov    eax,DWORD PTR [ebp-0x8]
1000d063:	push   eax
1000d064:	call   DWORD PTR ds:0x10034030
1000d06a:	jmp    0x1000d073
1000d06c:	mov    DWORD PTR [ebp-0x4],0x0
1000d073:	mov    eax,DWORD PTR [ebp-0x4]
1000d076:	mov    esp,ebp
1000d078:	pop    ebp
1000d079:	ret    0x8
1000d07c:	int3   
1000d07d:	int3   
1000d07e:	int3   
1000d07f:	int3   
1000d080:	push   ebp
1000d081:	mov    ebp,esp
1000d083:	push   0x0
1000d085:	mov    eax,ds:0x10097aa0
1000d08a:	push   eax
1000d08b:	call   DWORD PTR ds:0x1003404c
1000d091:	neg    eax
1000d093:	sbb    eax,eax
1000d095:	add    eax,0x1
1000d098:	pop    ebp
1000d099:	ret    
1000d09a:	int3   
1000d09b:	int3   
1000d09c:	int3   
1000d09d:	int3   
1000d09e:	int3   
1000d09f:	int3   
1000d0a0:	push   ebp
1000d0a1:	mov    ebp,esp
1000d0a3:	push   0xffffffff
1000d0a5:	push   0x1002a0b0
1000d0aa:	mov    eax,fs:0x0
1000d0b0:	push   eax
1000d0b1:	push   ecx
1000d0b2:	sub    esp,0x98
1000d0b8:	mov    eax,ds:0x100951fc
1000d0bd:	xor    eax,ebp
1000d0bf:	mov    DWORD PTR [ebp-0x14],eax
1000d0c2:	push   ebx
1000d0c3:	push   esi
1000d0c4:	push   edi
1000d0c5:	push   eax
1000d0c6:	lea    eax,[ebp-0xc]
1000d0c9:	mov    fs:0x0,eax
1000d0cf:	mov    DWORD PTR [ebp-0x10],esp
1000d0d2:	mov    DWORD PTR [ebp-0x4],0x0
1000d0d9:	mov    eax,DWORD PTR [ebp+0x10]
1000d0dc:	push   eax
1000d0dd:	lea    ecx,[ebp-0x50]
1000d0e0:	call   0x10002e20
1000d0e5:	mov    DWORD PTR [ebp-0x74],eax
1000d0e8:	mov    BYTE PTR [ebp-0x4],0x1
1000d0ec:	push   0x0
1000d0ee:	push   0x2c
1000d0f0:	lea    ecx,[ebp-0x50]
1000d0f3:	call   0x1000e190
1000d0f8:	mov    DWORD PTR [ebp-0x34],eax
1000d0fb:	mov    ecx,DWORD PTR [ebp-0x34]
1000d0fe:	push   ecx
1000d0ff:	lea    edx,[ebp-0x3c]
1000d102:	push   edx
1000d103:	lea    ecx,[ebp-0x50]
1000d106:	call   0x10003030
1000d10b:	mov    DWORD PTR [ebp-0x78],eax
1000d10e:	mov    BYTE PTR [ebp-0x4],0x2
1000d112:	lea    ecx,[ebp-0x50]
1000d115:	call   0x100031e0
1000d11a:	sub    eax,DWORD PTR [ebp-0x34]
1000d11d:	sub    eax,0x1
1000d120:	push   eax
1000d121:	lea    eax,[ebp-0x58]
1000d124:	push   eax
1000d125:	lea    ecx,[ebp-0x50]
1000d128:	call   0x10002fa0
1000d12d:	mov    DWORD PTR [ebp-0x7c],eax
1000d130:	mov    BYTE PTR [ebp-0x4],0x3
1000d134:	lea    ecx,[ebp-0x58]
1000d137:	call   0x1000e2e0
1000d13c:	lea    ecx,[ebp-0x58]
1000d13f:	call   0x1000e220
1000d144:	lea    ecx,[ebp-0x3c]
1000d147:	call   0x10003190
1000d14c:	mov    DWORD PTR [ebp-0x80],eax
1000d14f:	mov    ecx,DWORD PTR [ebp-0x80]
1000d152:	push   ecx
1000d153:	call   0x1001653a
1000d158:	add    esp,0x4
1000d15b:	mov    DWORD PTR [ebp-0x48],eax
1000d15e:	cmp    DWORD PTR [ebp-0x48],0x0
1000d162:	jne    0x1000d179
1000d164:	mov    DWORD PTR [ebp-0x68],0x0
1000d16b:	push   0x10085d78
1000d170:	lea    edx,[ebp-0x68]
1000d173:	push   edx
1000d174:	call   0x1001621e
1000d179:	mov    eax,DWORD PTR [ebp-0x48]
1000d17c:	push   eax
1000d17d:	push   0x0
1000d17f:	push   0x400
1000d184:	call   DWORD PTR ds:0x10034054
1000d18a:	push   eax
1000d18b:	lea    ecx,[ebp-0x44]
1000d18e:	call   0x100032c0
1000d193:	mov    DWORD PTR [ebp-0x84],eax
1000d199:	mov    BYTE PTR [ebp-0x4],0x4
1000d19d:	lea    ecx,[ebp-0x44]
1000d1a0:	call   0x10003330
1000d1a5:	mov    DWORD PTR [ebp-0x88],eax
1000d1ab:	cmp    DWORD PTR [ebp-0x88],0x0
1000d1b2:	jne    0x1000d1c9
1000d1b4:	mov    DWORD PTR [ebp-0x6c],0x0
1000d1bb:	push   0x10085d78
1000d1c0:	lea    ecx,[ebp-0x6c]
1000d1c3:	push   ecx
1000d1c4:	call   0x1001621e
1000d1c9:	push   0x1
1000d1cb:	push   0x1
1000d1cd:	lea    ecx,[ebp-0x64]
1000d1d0:	call   0x10006d40
1000d1d5:	mov    DWORD PTR [ebp-0x8c],eax
1000d1db:	mov    BYTE PTR [ebp-0x4],0x5
1000d1df:	lea    ecx,[ebp-0x44]
1000d1e2:	call   0x10003330
1000d1e7:	mov    DWORD PTR [ebp-0x90],eax
1000d1ed:	mov    edx,DWORD PTR [ebp-0x90]
1000d1f3:	push   edx
1000d1f4:	call   0x10002b40
1000d1f9:	add    esp,0x4
1000d1fc:	mov    WORD PTR [ebp-0x92],ax
1000d203:	mov    ax,WORD PTR [ebp-0x92]
1000d20a:	push   eax
1000d20b:	lea    ecx,[ebp-0x30]
1000d20e:	push   ecx
1000d20f:	lea    ecx,[ebp-0x64]
1000d212:	call   0x100073e0
1000d217:	mov    DWORD PTR [ebp-0x98],eax
1000d21d:	mov    BYTE PTR [ebp-0x4],0x6
1000d221:	lea    ecx,[ebp-0x30]
1000d224:	call   0x10002d20
1000d229:	mov    DWORD PTR [ebp-0x9c],eax
1000d22f:	cmp    DWORD PTR [ebp-0x9c],0x0
1000d236:	jne    0x1000d24d
1000d238:	mov    DWORD PTR [ebp-0x70],0x0
1000d23f:	push   0x10085d78
1000d244:	lea    edx,[ebp-0x70]
1000d247:	push   edx
1000d248:	call   0x1001621e
1000d24d:	call   0x10001000
1000d252:	mov    DWORD PTR [ebp-0x4c],eax
1000d255:	lea    ecx,[ebp-0x58]
1000d258:	call   0x10003190
1000d25d:	mov    DWORD PTR [ebp-0xa0],eax
1000d263:	mov    eax,DWORD PTR [ebp-0xa0]
1000d269:	push   eax
1000d26a:	call   0x100110c0
1000d26f:	add    esp,0x4
1000d272:	mov    DWORD PTR [ebp-0xa4],eax
1000d278:	lea    ecx,[ebp-0x30]
1000d27b:	call   0x100078b0
1000d280:	mov    DWORD PTR [ebp-0xa8],eax
1000d286:	mov    ecx,DWORD PTR [ebp-0xa4]
1000d28c:	push   ecx
1000d28d:	mov    edx,DWORD PTR [ebp-0xa8]
1000d293:	push   edx
1000d294:	mov    eax,DWORD PTR [ebp-0x48]
1000d297:	push   eax
1000d298:	call   0x10009620
1000d29d:	add    esp,0xc
1000d2a0:	mov    BYTE PTR [ebp-0x4],0x5
1000d2a4:	lea    ecx,[ebp-0x30]
1000d2a7:	call   0x10002bb0
1000d2ac:	mov    BYTE PTR [ebp-0x4],0x4
1000d2b0:	lea    ecx,[ebp-0x64]
1000d2b3:	call   0x10006d60
1000d2b8:	mov    BYTE PTR [ebp-0x4],0x3
1000d2bc:	lea    ecx,[ebp-0x44]
1000d2bf:	call   0x10003290
1000d2c4:	mov    BYTE PTR [ebp-0x4],0x2
1000d2c8:	lea    ecx,[ebp-0x58]
1000d2cb:	call   0x10003b40
1000d2d0:	mov    BYTE PTR [ebp-0x4],0x1
1000d2d4:	lea    ecx,[ebp-0x3c]
1000d2d7:	call   0x10003b40
1000d2dc:	mov    BYTE PTR [ebp-0x4],0x0
1000d2e0:	lea    ecx,[ebp-0x50]
1000d2e3:	call   0x10003b40
1000d2e8:	jmp    0x1000d2ff
1000d2ea:	push   0x0
1000d2ec:	call   DWORD PTR ds:0x10034050
1000d2f2:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000d2f9:	mov    eax,0x1000d306
1000d2fe:	ret    
1000d2ff:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000d306:	mov    ecx,DWORD PTR [ebp-0xc]
1000d309:	mov    DWORD PTR fs:0x0,ecx
1000d310:	pop    ecx
1000d311:	pop    edi
1000d312:	pop    esi
1000d313:	pop    ebx
1000d314:	mov    ecx,DWORD PTR [ebp-0x14]
1000d317:	xor    ecx,ebp
1000d319:	call   0x10015b2b
1000d31e:	mov    esp,ebp
1000d320:	pop    ebp
1000d321:	ret    0x10
1000d324:	int3   
1000d325:	int3   
1000d326:	int3   
1000d327:	int3   
1000d328:	int3   
1000d329:	int3   
1000d32a:	int3   
1000d32b:	int3   
1000d32c:	int3   
1000d32d:	int3   
1000d32e:	int3   
1000d32f:	int3   
1000d330:	push   ebp
1000d331:	mov    ebp,esp
1000d333:	push   0xffffffff
1000d335:	push   0x1002a11f
1000d33a:	mov    eax,fs:0x0
1000d340:	push   eax
1000d341:	push   ecx
1000d342:	mov    eax,0x10e8
1000d347:	call   0x10016550
1000d34c:	mov    eax,ds:0x100951fc
1000d351:	xor    eax,ebp
1000d353:	mov    DWORD PTR [ebp-0x30],eax
1000d356:	push   ebx
1000d357:	push   esi
1000d358:	push   edi
1000d359:	push   eax
1000d35a:	lea    eax,[ebp-0xc]
1000d35d:	mov    fs:0x0,eax
1000d363:	mov    DWORD PTR [ebp-0x10],esp
1000d366:	mov    DWORD PTR [ebp-0x4],0x0
1000d36d:	push   ecx
1000d36e:	mov    eax,esp
1000d370:	mov    DWORD PTR [ebp-0x1090],esp
1000d376:	push   eax
1000d377:	call   0x1000f490
1000d37c:	add    esp,0x4
1000d37f:	mov    DWORD PTR [ebp-0x10a4],eax
1000d385:	mov    ecx,DWORD PTR [ebp+0x8]
1000d388:	push   ecx
1000d389:	call   0x10002970
1000d38e:	add    esp,0x8
1000d391:	mov    BYTE PTR [ebp-0x10a5],al
1000d397:	movzx  edx,BYTE PTR [ebp-0x10a5]
1000d39e:	test   edx,edx
1000d3a0:	je     0x1000d3a9
1000d3a2:	mov    al,0x1
1000d3a4:	jmp    0x1000d78d
1000d3a9:	mov    eax,DWORD PTR [ebp+0x8]
1000d3ac:	push   eax
1000d3ad:	push   0x0
1000d3af:	push   0x410
1000d3b4:	call   DWORD PTR ds:0x10034054
1000d3ba:	push   eax
1000d3bb:	lea    ecx,[ebp-0x18]
1000d3be:	call   0x100032c0
1000d3c3:	mov    DWORD PTR [ebp-0x10ac],eax
1000d3c9:	mov    BYTE PTR [ebp-0x4],0x1
1000d3cd:	lea    ecx,[ebp-0x18]
1000d3d0:	call   0x10003330
1000d3d5:	mov    DWORD PTR [ebp-0x10b0],eax
1000d3db:	cmp    DWORD PTR [ebp-0x10b0],0x0
1000d3e2:	jne    0x1000d402
1000d3e4:	mov    BYTE PTR [ebp-0x1091],0x0
1000d3eb:	mov    BYTE PTR [ebp-0x4],0x0
1000d3ef:	lea    ecx,[ebp-0x18]
1000d3f2:	call   0x10003290
1000d3f7:	mov    al,BYTE PTR [ebp-0x1091]
1000d3fd:	jmp    0x1000d78d
1000d402:	lea    ecx,[ebp-0x18]
1000d405:	call   0x10003330
1000d40a:	mov    DWORD PTR [ebp-0x10b4],eax
1000d410:	lea    ecx,[ebp-0x1c]
1000d413:	push   ecx
1000d414:	push   0xf01ff
1000d419:	mov    edx,DWORD PTR [ebp-0x10b4]
1000d41f:	push   edx
1000d420:	call   DWORD PTR ds:0x10034014
1000d426:	push   0x0
1000d428:	lea    ecx,[ebp-0x1034]
1000d42e:	call   0x100032c0
1000d433:	mov    DWORD PTR [ebp-0x10b8],eax
1000d439:	mov    BYTE PTR [ebp-0x4],0x2
1000d43d:	mov    eax,DWORD PTR [ebp-0x1c]
1000d440:	push   eax
1000d441:	lea    ecx,[ebp-0x1034]
1000d447:	call   0x10003db0
1000d44c:	lea    ecx,[ebp-0x18]
1000d44f:	call   0x10003330
1000d454:	mov    DWORD PTR [ebp-0x10bc],eax
1000d45a:	push   0x1000
1000d45f:	lea    ecx,[ebp-0x1030]
1000d465:	push   ecx
1000d466:	push   0x0
1000d468:	mov    edx,DWORD PTR [ebp-0x10bc]
1000d46e:	push   edx
1000d46f:	call   0x10012538
1000d474:	test   eax,eax
1000d476:	jne    0x1000d4a5
1000d478:	mov    BYTE PTR [ebp-0x1092],0x0
1000d47f:	mov    BYTE PTR [ebp-0x4],0x1
1000d483:	lea    ecx,[ebp-0x1034]
1000d489:	call   0x10003290
1000d48e:	mov    BYTE PTR [ebp-0x4],0x0
1000d492:	lea    ecx,[ebp-0x18]
1000d495:	call   0x10003290
1000d49a:	mov    al,BYTE PTR [ebp-0x1092]
1000d4a0:	jmp    0x1000d78d
1000d4a5:	call   0x10011eb0
1000d4aa:	mov    BYTE PTR [ebp-0x10bd],al
1000d4b0:	movzx  eax,BYTE PTR [ebp-0x10bd]
1000d4b7:	test   eax,eax
1000d4b9:	jne    0x1000d4e8
1000d4bb:	mov    BYTE PTR [ebp-0x1093],0x1
1000d4c2:	mov    BYTE PTR [ebp-0x4],0x1
1000d4c6:	lea    ecx,[ebp-0x1034]
1000d4cc:	call   0x10003290
1000d4d1:	mov    BYTE PTR [ebp-0x4],0x0
1000d4d5:	lea    ecx,[ebp-0x18]
1000d4d8:	call   0x10003290
1000d4dd:	mov    al,BYTE PTR [ebp-0x1093]
1000d4e3:	jmp    0x1000d78d
1000d4e8:	push   0x1
1000d4ea:	push   0x1
1000d4ec:	lea    ecx,[ebp-0x108c]
1000d4f2:	call   0x10006d40
1000d4f7:	mov    DWORD PTR [ebp-0x10c4],eax
1000d4fd:	mov    BYTE PTR [ebp-0x4],0x3
1000d501:	mov    ecx,DWORD PTR [ebp+0x8]
1000d504:	push   ecx
1000d505:	lea    ecx,[ebp-0x108c]
1000d50b:	call   0x10007310
1000d510:	mov    BYTE PTR [ebp-0x10c5],al
1000d516:	movzx  edx,BYTE PTR [ebp-0x10c5]
1000d51d:	test   edx,edx
1000d51f:	jne    0x1000d55d
1000d521:	mov    BYTE PTR [ebp-0x1094],0x1
1000d528:	mov    BYTE PTR [ebp-0x4],0x2
1000d52c:	lea    ecx,[ebp-0x108c]
1000d532:	call   0x10006d60
1000d537:	mov    BYTE PTR [ebp-0x4],0x1
1000d53b:	lea    ecx,[ebp-0x1034]
1000d541:	call   0x10003290
1000d546:	mov    BYTE PTR [ebp-0x4],0x0
1000d54a:	lea    ecx,[ebp-0x18]
1000d54d:	call   0x10003290
1000d552:	mov    al,BYTE PTR [ebp-0x1094]
1000d558:	jmp    0x1000d78d
1000d55d:	lea    ecx,[ebp-0x14]
1000d560:	call   0x10002d30
1000d565:	mov    BYTE PTR [ebp-0x4],0x4
1000d569:	mov    DWORD PTR [ebp-0x1080],0x0
1000d573:	push   0x40
1000d575:	push   0x0
1000d577:	lea    eax,[ebp-0x107c]
1000d57d:	push   eax
1000d57e:	call   0x10016580
1000d583:	add    esp,0xc
1000d586:	mov    DWORD PTR [ebp-0x2c],0x0
1000d58d:	xor    ecx,ecx
1000d58f:	mov    DWORD PTR [ebp-0x28],ecx
1000d592:	mov    DWORD PTR [ebp-0x24],ecx
1000d595:	mov    DWORD PTR [ebp-0x20],ecx
1000d598:	mov    DWORD PTR [ebp-0x1080],0x44
1000d5a2:	lea    edx,[ebp-0x1098]
1000d5a8:	push   edx
1000d5a9:	call   0x1000f3d0
1000d5ae:	add    esp,0x4
1000d5b1:	mov    DWORD PTR [ebp-0x10cc],eax
1000d5b7:	mov    eax,DWORD PTR [ebp-0x10cc]
1000d5bd:	mov    DWORD PTR [ebp-0x10d0],eax
1000d5c3:	mov    BYTE PTR [ebp-0x4],0x5
1000d5c7:	mov    ecx,DWORD PTR [ebp-0x10d0]
1000d5cd:	call   0x10003190
1000d5d2:	mov    DWORD PTR [ebp-0x10d4],eax
1000d5d8:	push   0x100348a4
1000d5dd:	push   0x4
1000d5df:	push   0x100348c8
1000d5e4:	call   0x10003540
1000d5e9:	add    esp,0xc
1000d5ec:	mov    DWORD PTR [ebp-0x10d8],eax
1000d5f2:	push   0x1
1000d5f4:	push   0x0
1000d5f6:	lea    ecx,[ebp-0x109c]
1000d5fc:	push   ecx
1000d5fd:	call   0x10002090
1000d602:	add    esp,0xc
1000d605:	mov    DWORD PTR [ebp-0x10dc],eax
1000d60b:	mov    edx,DWORD PTR [ebp-0x10dc]
1000d611:	mov    DWORD PTR [ebp-0x10e0],edx
1000d617:	mov    BYTE PTR [ebp-0x4],0x6
1000d61b:	mov    eax,DWORD PTR [ebp-0x10d8]
1000d621:	push   eax
1000d622:	mov    ecx,DWORD PTR [ebp-0x10e0]
1000d628:	push   ecx
1000d629:	lea    edx,[ebp-0x10a0]
1000d62f:	push   edx
1000d630:	call   0x100030b0
1000d635:	add    esp,0xc
1000d638:	mov    DWORD PTR [ebp-0x10e4],eax
1000d63e:	mov    eax,DWORD PTR [ebp-0x10e4]
1000d644:	mov    DWORD PTR [ebp-0x10e8],eax
1000d64a:	mov    BYTE PTR [ebp-0x4],0x7
1000d64e:	push   0x100348d4
1000d653:	push   0x13
1000d655:	push   0x10034914
1000d65a:	call   0x10003540
1000d65f:	add    esp,0xc
1000d662:	mov    DWORD PTR [ebp-0x10ec],eax
1000d668:	mov    ecx,DWORD PTR [ebp-0x10d4]
1000d66e:	push   ecx
1000d66f:	mov    edx,DWORD PTR [ebp+0x8]
1000d672:	push   edx
1000d673:	mov    eax,DWORD PTR [ebp-0x10e8]
1000d679:	mov    ecx,DWORD PTR [eax]
1000d67b:	push   ecx
1000d67c:	mov    edx,DWORD PTR [ebp-0x10ec]
1000d682:	push   edx
1000d683:	lea    eax,[ebp-0x14]
1000d686:	push   eax
1000d687:	call   0x1000ab30
1000d68c:	add    esp,0x14
1000d68f:	mov    BYTE PTR [ebp-0x4],0x6
1000d693:	lea    ecx,[ebp-0x10a0]
1000d699:	call   0x10003b40
1000d69e:	mov    BYTE PTR [ebp-0x4],0x5
1000d6a2:	lea    ecx,[ebp-0x109c]
1000d6a8:	call   0x10003b40
1000d6ad:	mov    BYTE PTR [ebp-0x4],0x4
1000d6b1:	lea    ecx,[ebp-0x1098]
1000d6b7:	call   0x10003b40
1000d6bc:	lea    ecx,[ebp-0x14]
1000d6bf:	call   0x10003190
1000d6c4:	mov    DWORD PTR [ebp-0x10f0],eax
1000d6ca:	push   0x1003493c
1000d6cf:	push   0xc
1000d6d1:	push   0x10034974
1000d6d6:	call   0x10003540
1000d6db:	add    esp,0xc
1000d6de:	mov    DWORD PTR [ebp-0x10f4],eax
1000d6e4:	lea    ecx,[ebp-0x1034]
1000d6ea:	call   0x10003330
1000d6ef:	mov    DWORD PTR [ebp-0x10f8],eax
1000d6f5:	lea    ecx,[ebp-0x2c]
1000d6f8:	push   ecx
1000d6f9:	lea    edx,[ebp-0x1080]
1000d6ff:	push   edx
1000d700:	push   0x0
1000d702:	push   0x0
1000d704:	push   0x0
1000d706:	push   0x1
1000d708:	push   0x0
1000d70a:	push   0x0
1000d70c:	mov    eax,DWORD PTR [ebp-0x10f0]
1000d712:	push   eax
1000d713:	mov    ecx,DWORD PTR [ebp-0x10f4]
1000d719:	push   ecx
1000d71a:	mov    edx,DWORD PTR [ebp-0x10f8]
1000d720:	push   edx
1000d721:	call   DWORD PTR ds:0x10034018
1000d727:	test   eax,eax
1000d729:	je     0x1000d73f
1000d72b:	mov    eax,DWORD PTR [ebp-0x28]
1000d72e:	push   eax
1000d72f:	call   DWORD PTR ds:0x10034058
1000d735:	mov    ecx,DWORD PTR [ebp-0x2c]
1000d738:	push   ecx
1000d739:	call   DWORD PTR ds:0x10034058
1000d73f:	mov    BYTE PTR [ebp-0x4],0x3
1000d743:	lea    ecx,[ebp-0x14]
1000d746:	call   0x10003b40
1000d74b:	mov    BYTE PTR [ebp-0x4],0x2
1000d74f:	lea    ecx,[ebp-0x108c]
1000d755:	call   0x10006d60
1000d75a:	mov    BYTE PTR [ebp-0x4],0x1
1000d75e:	lea    ecx,[ebp-0x1034]
1000d764:	call   0x10003290
1000d769:	mov    BYTE PTR [ebp-0x4],0x0
1000d76d:	lea    ecx,[ebp-0x18]
1000d770:	call   0x10003290
1000d775:	jmp    0x1000d784
1000d777:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000d77e:	mov    eax,0x1000d78b
1000d783:	ret    
1000d784:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000d78b:	mov    al,0x1
1000d78d:	mov    ecx,DWORD PTR [ebp-0xc]
1000d790:	mov    DWORD PTR fs:0x0,ecx
1000d797:	pop    ecx
1000d798:	pop    edi
1000d799:	pop    esi
1000d79a:	pop    ebx
1000d79b:	mov    ecx,DWORD PTR [ebp-0x30]
1000d79e:	xor    ecx,ebp
1000d7a0:	call   0x10015b2b
1000d7a5:	mov    esp,ebp
1000d7a7:	pop    ebp
1000d7a8:	ret    
1000d7a9:	int3   
1000d7aa:	int3   
1000d7ab:	int3   
1000d7ac:	int3   
1000d7ad:	int3   
1000d7ae:	int3   
1000d7af:	int3   
1000d7b0:	push   ebp
1000d7b1:	mov    ebp,esp
1000d7b3:	push   0xffffffff
1000d7b5:	push   0x1002a14f
1000d7ba:	mov    eax,fs:0x0
1000d7c0:	push   eax
1000d7c1:	sub    esp,0x23c
1000d7c7:	mov    eax,ds:0x100951fc
1000d7cc:	xor    eax,ebp
1000d7ce:	mov    DWORD PTR [ebp-0x14],eax
1000d7d1:	push   eax
1000d7d2:	lea    eax,[ebp-0xc]
1000d7d5:	mov    fs:0x0,eax
1000d7db:	mov    DWORD PTR [ebp-0x244],0x0
1000d7e5:	push   0x228
1000d7ea:	push   0x0
1000d7ec:	lea    eax,[ebp-0x240]
1000d7f2:	push   eax
1000d7f3:	call   0x10016580
1000d7f8:	add    esp,0xc
1000d7fb:	push   0x0
1000d7fd:	lea    ecx,[ebp-0x10]
1000d800:	call   0x100032c0
1000d805:	mov    DWORD PTR [ebp-0x4],0x0
1000d80c:	push   0x0
1000d80e:	push   0x2
1000d810:	call   0x100153e0
1000d815:	push   eax
1000d816:	lea    ecx,[ebp-0x10]
1000d819:	call   0x10003db0
1000d81e:	lea    ecx,[ebp-0x10]
1000d821:	call   0x10003330
1000d826:	cmp    eax,0xffffffff
1000d829:	jne    0x1000d84c
1000d82b:	mov    BYTE PTR [ebp-0x245],0x0
1000d832:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000d839:	lea    ecx,[ebp-0x10]
1000d83c:	call   0x10003290
1000d841:	mov    al,BYTE PTR [ebp-0x245]
1000d847:	jmp    0x1000d94d
1000d84c:	mov    DWORD PTR [ebp-0x244],0x22c
1000d856:	lea    ecx,[ebp-0x244]
1000d85c:	push   ecx
1000d85d:	lea    ecx,[ebp-0x10]
1000d860:	call   0x10003330
1000d865:	push   eax
1000d866:	call   0x100153da
1000d86b:	test   eax,eax
1000d86d:	jne    0x1000d890
1000d86f:	mov    BYTE PTR [ebp-0x246],0x0
1000d876:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000d87d:	lea    ecx,[ebp-0x10]
1000d880:	call   0x10003290
1000d885:	mov    al,BYTE PTR [ebp-0x246]
1000d88b:	jmp    0x1000d94d
1000d890:	push   0x10034990
1000d895:	push   0xc
1000d897:	push   0x100349b8
1000d89c:	call   0x10003540
1000d8a1:	add    esp,0xc
1000d8a4:	push   eax
1000d8a5:	lea    edx,[ebp-0x220]
1000d8ab:	push   edx
1000d8ac:	call   0x1001678b
1000d8b1:	add    esp,0x8
1000d8b4:	test   eax,eax
1000d8b6:	je     0x1000d8e0
1000d8b8:	push   0x100349d4
1000d8bd:	push   0xb
1000d8bf:	push   0x100349fc
1000d8c4:	call   0x10003540
1000d8c9:	add    esp,0xc
1000d8cc:	push   eax
1000d8cd:	lea    eax,[ebp-0x220]
1000d8d3:	push   eax
1000d8d4:	call   0x1001678b
1000d8d9:	add    esp,0x8
1000d8dc:	test   eax,eax
1000d8de:	jne    0x1000d914
1000d8e0:	mov    ecx,DWORD PTR [ebp-0x23c]
1000d8e6:	push   ecx
1000d8e7:	call   0x1000d330
1000d8ec:	add    esp,0x4
1000d8ef:	movzx  edx,al
1000d8f2:	test   edx,edx
1000d8f4:	jne    0x1000d914
1000d8f6:	mov    BYTE PTR [ebp-0x247],0x0
1000d8fd:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000d904:	lea    ecx,[ebp-0x10]
1000d907:	call   0x10003290
1000d90c:	mov    al,BYTE PTR [ebp-0x247]
1000d912:	jmp    0x1000d94d
1000d914:	lea    eax,[ebp-0x244]
1000d91a:	push   eax
1000d91b:	lea    ecx,[ebp-0x10]
1000d91e:	call   0x10003330
1000d923:	push   eax
1000d924:	call   0x100153d4
1000d929:	test   eax,eax
1000d92b:	jne    0x1000d890
1000d931:	mov    BYTE PTR [ebp-0x248],0x1
1000d938:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000d93f:	lea    ecx,[ebp-0x10]
1000d942:	call   0x10003290
1000d947:	mov    al,BYTE PTR [ebp-0x248]
1000d94d:	mov    ecx,DWORD PTR [ebp-0xc]
1000d950:	mov    DWORD PTR fs:0x0,ecx
1000d957:	pop    ecx
1000d958:	mov    ecx,DWORD PTR [ebp-0x14]
1000d95b:	xor    ecx,ebp
1000d95d:	call   0x10015b2b
1000d962:	mov    esp,ebp
1000d964:	pop    ebp
1000d965:	ret    
1000d966:	int3   
1000d967:	int3   
1000d968:	int3   
1000d969:	int3   
1000d96a:	int3   
1000d96b:	int3   
1000d96c:	int3   
1000d96d:	int3   
1000d96e:	int3   
1000d96f:	int3   
1000d970:	push   ebp
1000d971:	mov    ebp,esp
1000d973:	push   0xffffffff
1000d975:	push   0x1002a1a8
1000d97a:	mov    eax,fs:0x0
1000d980:	push   eax
1000d981:	sub    esp,0x24
1000d984:	mov    eax,ds:0x100951fc
1000d989:	xor    eax,ebp
1000d98b:	push   eax
1000d98c:	lea    eax,[ebp-0xc]
1000d98f:	mov    fs:0x0,eax
1000d995:	mov    DWORD PTR [ebp-0x30],0x0
1000d99c:	push   0x0
1000d99e:	lea    ecx,[ebp-0x10]
1000d9a1:	call   0x100032c0
1000d9a6:	mov    DWORD PTR [ebp-0x4],0x1
1000d9ad:	mov    eax,DWORD PTR [ebp+0x10]
1000d9b0:	mov    DWORD PTR [eax],0x0
1000d9b6:	mov    DWORD PTR [ebp-0x18],0x400
1000d9bd:	mov    DWORD PTR [ebp-0x14],0x0
1000d9c4:	push   0x0
1000d9c6:	lea    ecx,[ebp-0x1c]
1000d9c9:	call   0x100032c0
1000d9ce:	mov    BYTE PTR [ebp-0x4],0x2
1000d9d2:	mov    DWORD PTR [ebp-0x20],0x0
1000d9d9:	push   0x0
1000d9db:	lea    ecx,[ebp-0x20]
1000d9de:	push   ecx
1000d9df:	push   0x4
1000d9e1:	lea    edx,[ebp-0x28]
1000d9e4:	push   edx
1000d9e5:	mov    eax,DWORD PTR [ebp+0xc]
1000d9e8:	push   eax
1000d9e9:	call   DWORD PTR ds:0x10034068
1000d9ef:	test   eax,eax
1000d9f1:	je     0x1000d9f9
1000d9f3:	cmp    DWORD PTR [ebp-0x20],0x4
1000d9f7:	je     0x1000da2e
1000d9f9:	lea    ecx,[ebp-0x10]
1000d9fc:	push   ecx
1000d9fd:	mov    ecx,DWORD PTR [ebp+0x8]
1000da00:	call   0x100032d0
1000da05:	mov    edx,DWORD PTR [ebp-0x30]
1000da08:	or     edx,0x1
1000da0b:	mov    DWORD PTR [ebp-0x30],edx
1000da0e:	mov    BYTE PTR [ebp-0x4],0x1
1000da12:	lea    ecx,[ebp-0x1c]
1000da15:	call   0x10003320
1000da1a:	mov    BYTE PTR [ebp-0x4],0x0
1000da1e:	lea    ecx,[ebp-0x10]
1000da21:	call   0x10003320
1000da26:	mov    eax,DWORD PTR [ebp+0x8]
1000da29:	jmp    0x1000db4d
1000da2e:	cmp    DWORD PTR [ebp-0x28],0x0
1000da32:	jne    0x1000da39
1000da34:	jmp    0x1000db09
1000da39:	mov    eax,DWORD PTR [ebp-0x14]
1000da3c:	add    eax,DWORD PTR [ebp-0x28]
1000da3f:	push   eax
1000da40:	call   0x10015a45
1000da45:	add    esp,0x4
1000da48:	mov    DWORD PTR [ebp-0x2c],eax
1000da4b:	mov    ecx,DWORD PTR [ebp-0x2c]
1000da4e:	push   ecx
1000da4f:	lea    ecx,[ebp-0x24]
1000da52:	call   0x100032c0
1000da57:	mov    BYTE PTR [ebp-0x4],0x3
1000da5b:	mov    edx,DWORD PTR [ebp-0x14]
1000da5e:	push   edx
1000da5f:	lea    ecx,[ebp-0x1c]
1000da62:	call   0x10003330
1000da67:	push   eax
1000da68:	lea    ecx,[ebp-0x24]
1000da6b:	call   0x10003330
1000da70:	push   eax
1000da71:	call   0x10016820
1000da76:	add    esp,0xc
1000da79:	lea    eax,[ebp-0x24]
1000da7c:	push   eax
1000da7d:	lea    ecx,[ebp-0x1c]
1000da80:	call   0x100032f0
1000da85:	push   0x0
1000da87:	lea    ecx,[ebp-0x20]
1000da8a:	push   ecx
1000da8b:	mov    edx,DWORD PTR [ebp-0x28]
1000da8e:	push   edx
1000da8f:	lea    ecx,[ebp-0x1c]
1000da92:	call   0x10003330
1000da97:	add    eax,DWORD PTR [ebp-0x14]
1000da9a:	push   eax
1000da9b:	mov    eax,DWORD PTR [ebp+0xc]
1000da9e:	push   eax
1000da9f:	call   DWORD PTR ds:0x10034068
1000daa5:	test   eax,eax
1000daa7:	je     0x1000dab1
1000daa9:	mov    ecx,DWORD PTR [ebp-0x20]
1000daac:	cmp    ecx,DWORD PTR [ebp-0x28]
1000daaf:	je     0x1000daef
1000dab1:	lea    edx,[ebp-0x10]
1000dab4:	push   edx
1000dab5:	mov    ecx,DWORD PTR [ebp+0x8]
1000dab8:	call   0x100032d0
1000dabd:	mov    eax,DWORD PTR [ebp-0x30]
1000dac0:	or     eax,0x1
1000dac3:	mov    DWORD PTR [ebp-0x30],eax
1000dac6:	mov    BYTE PTR [ebp-0x4],0x2
1000daca:	lea    ecx,[ebp-0x24]
1000dacd:	call   0x10003320
1000dad2:	mov    BYTE PTR [ebp-0x4],0x1
1000dad6:	lea    ecx,[ebp-0x1c]
1000dad9:	call   0x10003320
1000dade:	mov    BYTE PTR [ebp-0x4],0x0
1000dae2:	lea    ecx,[ebp-0x10]
1000dae5:	call   0x10003320
1000daea:	mov    eax,DWORD PTR [ebp+0x8]
1000daed:	jmp    0x1000db4d
1000daef:	mov    ecx,DWORD PTR [ebp-0x14]
1000daf2:	add    ecx,DWORD PTR [ebp-0x28]
1000daf5:	mov    DWORD PTR [ebp-0x14],ecx
1000daf8:	mov    BYTE PTR [ebp-0x4],0x2
1000dafc:	lea    ecx,[ebp-0x24]
1000daff:	call   0x10003320
1000db04:	jmp    0x1000d9d9
1000db09:	lea    edx,[ebp-0x1c]
1000db0c:	push   edx
1000db0d:	lea    ecx,[ebp-0x10]
1000db10:	call   0x100032f0
1000db15:	mov    eax,DWORD PTR [ebp+0x10]
1000db18:	mov    ecx,DWORD PTR [ebp-0x14]
1000db1b:	mov    DWORD PTR [eax],ecx
1000db1d:	lea    edx,[ebp-0x10]
1000db20:	push   edx
1000db21:	mov    ecx,DWORD PTR [ebp+0x8]
1000db24:	call   0x100032d0
1000db29:	mov    eax,DWORD PTR [ebp-0x30]
1000db2c:	or     eax,0x1
1000db2f:	mov    DWORD PTR [ebp-0x30],eax
1000db32:	mov    BYTE PTR [ebp-0x4],0x1
1000db36:	lea    ecx,[ebp-0x1c]
1000db39:	call   0x10003320
1000db3e:	mov    BYTE PTR [ebp-0x4],0x0
1000db42:	lea    ecx,[ebp-0x10]
1000db45:	call   0x10003320
1000db4a:	mov    eax,DWORD PTR [ebp+0x8]
1000db4d:	mov    ecx,DWORD PTR [ebp-0xc]
1000db50:	mov    DWORD PTR fs:0x0,ecx
1000db57:	pop    ecx
1000db58:	mov    esp,ebp
1000db5a:	pop    ebp
1000db5b:	ret    
1000db5c:	int3   
1000db5d:	int3   
1000db5e:	int3   
1000db5f:	int3   
1000db60:	push   ebp
1000db61:	mov    ebp,esp
1000db63:	push   0xffffffff
1000db65:	push   0x1002a1cb
1000db6a:	mov    eax,fs:0x0
1000db70:	push   eax
1000db71:	sub    esp,0x20
1000db74:	mov    eax,ds:0x100951fc
1000db79:	xor    eax,ebp
1000db7b:	push   eax
1000db7c:	lea    eax,[ebp-0xc]
1000db7f:	mov    fs:0x0,eax
1000db85:	mov    DWORD PTR [ebp-0x14],0x1
1000db8c:	push   0x1
1000db8e:	lea    eax,[ebp-0x14]
1000db91:	push   eax
1000db92:	lea    ecx,[ebp-0x1d]
1000db95:	push   ecx
1000db96:	call   0x1001253e
1000db9b:	mov    DWORD PTR [ebp-0x1c],eax
1000db9e:	cmp    DWORD PTR [ebp-0x1c],0x7a
1000dba2:	je     0x1000dbab
1000dba4:	xor    al,al
1000dba6:	jmp    0x1000dc74
1000dbab:	mov    edx,DWORD PTR [ebp-0x14]
1000dbae:	push   edx
1000dbaf:	call   0x10015a45
1000dbb4:	add    esp,0x4
1000dbb7:	mov    DWORD PTR [ebp-0x28],eax
1000dbba:	mov    eax,DWORD PTR [ebp-0x28]
1000dbbd:	push   eax
1000dbbe:	lea    ecx,[ebp-0x10]
1000dbc1:	call   0x100032c0
1000dbc6:	mov    DWORD PTR [ebp-0x4],0x0
1000dbcd:	lea    ecx,[ebp-0x10]
1000dbd0:	call   0x10003330
1000dbd5:	mov    DWORD PTR [ebp-0x18],eax
1000dbd8:	push   0x1
1000dbda:	lea    ecx,[ebp-0x14]
1000dbdd:	push   ecx
1000dbde:	mov    edx,DWORD PTR [ebp-0x18]
1000dbe1:	push   edx
1000dbe2:	call   0x1001253e
1000dbe7:	mov    DWORD PTR [ebp-0x1c],eax
1000dbea:	cmp    DWORD PTR [ebp-0x1c],0x0
1000dbee:	je     0x1000dc08
1000dbf0:	mov    BYTE PTR [ebp-0x29],0x0
1000dbf4:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000dbfb:	lea    ecx,[ebp-0x10]
1000dbfe:	call   0x10003320
1000dc03:	mov    al,BYTE PTR [ebp-0x29]
1000dc06:	jmp    0x1000dc74
1000dc08:	mov    DWORD PTR [ebp-0x24],0x0
1000dc0f:	jmp    0x1000dc1a
1000dc11:	mov    eax,DWORD PTR [ebp-0x24]
1000dc14:	add    eax,0x1
1000dc17:	mov    DWORD PTR [ebp-0x24],eax
1000dc1a:	mov    ecx,DWORD PTR [ebp-0x18]
1000dc1d:	mov    edx,DWORD PTR [ebp-0x24]
1000dc20:	cmp    edx,DWORD PTR [ecx]
1000dc22:	je     0x1000dc5e
1000dc24:	mov    eax,DWORD PTR [ebp-0x24]
1000dc27:	imul   eax,eax,0x38
1000dc2a:	mov    ecx,DWORD PTR [ebp-0x18]
1000dc2d:	cmp    DWORD PTR [ecx+eax*1+0x4],0x0
1000dc32:	jne    0x1000dc5c
1000dc34:	mov    edx,DWORD PTR [ebp-0x24]
1000dc37:	imul   edx,edx,0x38
1000dc3a:	mov    eax,DWORD PTR [ebp-0x18]
1000dc3d:	cmp    DWORD PTR [eax+edx*1+0x8],0x0
1000dc42:	jne    0x1000dc5c
1000dc44:	mov    BYTE PTR [ebp-0x2a],0x1
1000dc48:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000dc4f:	lea    ecx,[ebp-0x10]
1000dc52:	call   0x10003320
1000dc57:	mov    al,BYTE PTR [ebp-0x2a]
1000dc5a:	jmp    0x1000dc74
1000dc5c:	jmp    0x1000dc11
1000dc5e:	mov    BYTE PTR [ebp-0x2b],0x0
1000dc62:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000dc69:	lea    ecx,[ebp-0x10]
1000dc6c:	call   0x10003320
1000dc71:	mov    al,BYTE PTR [ebp-0x2b]
1000dc74:	mov    ecx,DWORD PTR [ebp-0xc]
1000dc77:	mov    DWORD PTR fs:0x0,ecx
1000dc7e:	pop    ecx
1000dc7f:	mov    esp,ebp
1000dc81:	pop    ebp
1000dc82:	ret    
1000dc83:	int3   
1000dc84:	int3   
1000dc85:	int3   
1000dc86:	int3   
1000dc87:	int3   
1000dc88:	int3   
1000dc89:	int3   
1000dc8a:	int3   
1000dc8b:	int3   
1000dc8c:	int3   
1000dc8d:	int3   
1000dc8e:	int3   
1000dc8f:	int3   
1000dc90:	push   ebp
1000dc91:	mov    ebp,esp
1000dc93:	push   0xffffffff
1000dc95:	push   0x1002a1ee
1000dc9a:	mov    eax,fs:0x0
1000dca0:	push   eax
1000dca1:	sub    esp,0x18
1000dca4:	mov    eax,ds:0x100951fc
1000dca9:	xor    eax,ebp
1000dcab:	push   eax
1000dcac:	lea    eax,[ebp-0xc]
1000dcaf:	mov    fs:0x0,eax
1000dcb5:	lea    ecx,[ebp-0xd]
1000dcb8:	call   0x10006c80
1000dcbd:	mov    DWORD PTR [ebp-0x4],0x0
1000dcc4:	mov    DWORD PTR [ebp-0x14],0x7530
1000dccb:	mov    eax,ds:0x10096998
1000dcd0:	mov    DWORD PTR [ebp-0x20],eax
1000dcd3:	mov    ecx,DWORD PTR ds:0x10097aa0
1000dcd9:	mov    DWORD PTR [ebp-0x1c],ecx
1000dcdc:	mov    edx,DWORD PTR [ebp-0x14]
1000dcdf:	push   edx
1000dce0:	push   0x0
1000dce2:	lea    eax,[ebp-0x20]
1000dce5:	push   eax
1000dce6:	push   0x2
1000dce8:	call   DWORD PTR ds:0x1003406c
1000dcee:	mov    DWORD PTR [ebp-0x18],eax
1000dcf1:	cmp    DWORD PTR [ebp-0x18],0x102
1000dcf8:	je     0x1000dd02
1000dcfa:	cmp    DWORD PTR [ebp-0x18],0x0
1000dcfe:	je     0x1000dd02
1000dd00:	jmp    0x1000dd09
1000dd02:	call   0x1000d7b0
1000dd07:	jmp    0x1000dccb
1000dd09:	mov    DWORD PTR [ebp-0x24],0x0
1000dd10:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000dd17:	lea    ecx,[ebp-0xd]
1000dd1a:	call   0x10006ca0
1000dd1f:	mov    eax,DWORD PTR [ebp-0x24]
1000dd22:	mov    ecx,DWORD PTR [ebp-0xc]
1000dd25:	mov    DWORD PTR fs:0x0,ecx
1000dd2c:	pop    ecx
1000dd2d:	mov    esp,ebp
1000dd2f:	pop    ebp
1000dd30:	ret    0x4
1000dd33:	int3   
1000dd34:	int3   
1000dd35:	int3   
1000dd36:	int3   
1000dd37:	int3   
1000dd38:	int3   
1000dd39:	int3   
1000dd3a:	int3   
1000dd3b:	int3   
1000dd3c:	int3   
1000dd3d:	int3   
1000dd3e:	int3   
1000dd3f:	int3   
1000dd40:	push   ebp
1000dd41:	mov    ebp,esp
1000dd43:	push   0xffffffff
1000dd45:	push   0x1002a211
1000dd4a:	mov    eax,fs:0x0
1000dd50:	push   eax
1000dd51:	sub    esp,0x8
1000dd54:	mov    eax,ds:0x100951fc
1000dd59:	xor    eax,ebp
1000dd5b:	push   eax
1000dd5c:	lea    eax,[ebp-0xc]
1000dd5f:	mov    fs:0x0,eax
1000dd65:	mov    BYTE PTR [ebp-0x11],0x0
1000dd69:	mov    al,BYTE PTR [ebp-0x11]
1000dd6c:	push   eax
1000dd6d:	lea    ecx,[ebp-0x10]
1000dd70:	push   ecx
1000dd71:	call   0x10001bc0
1000dd76:	add    esp,0x8
1000dd79:	mov    DWORD PTR [ebp-0x4],0x0
1000dd80:	push   0x10034a14
1000dd85:	push   0xc
1000dd87:	push   0x10034a3c
1000dd8c:	call   0x10003540
1000dd91:	add    esp,0xc
1000dd94:	push   eax
1000dd95:	lea    ecx,[ebp-0x10]
1000dd98:	call   0x10002ed0
1000dd9d:	lea    ecx,[ebp-0x10]
1000dda0:	call   0x10003190
1000dda5:	push   eax
1000dda6:	call   0x1000e7c0
1000ddab:	add    esp,0x4
1000ddae:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000ddb5:	lea    ecx,[ebp-0x10]
1000ddb8:	call   0x10003b40
1000ddbd:	mov    ecx,DWORD PTR [ebp-0xc]
1000ddc0:	mov    DWORD PTR fs:0x0,ecx
1000ddc7:	pop    ecx
1000ddc8:	mov    esp,ebp
1000ddca:	pop    ebp
1000ddcb:	ret    
1000ddcc:	int3   
1000ddcd:	int3   
1000ddce:	int3   
1000ddcf:	int3   
1000ddd0:	push   ebp
1000ddd1:	mov    ebp,esp
1000ddd3:	sub    esp,0xc
1000ddd6:	mov    DWORD PTR [ebp-0x8],0x0
1000dddd:	push   0x3c
1000dddf:	call   0x10016c62
1000dde4:	add    esp,0x4
1000dde7:	mov    DWORD PTR [ebp-0x4],eax
1000ddea:	cmp    DWORD PTR [ebp-0x4],0x0
1000ddee:	jne    0x1000ddf7
1000ddf0:	mov    al,0x1
1000ddf2:	jmp    0x1000de9f
1000ddf7:	push   0x0
1000ddf9:	lea    eax,[ebp-0x8]
1000ddfc:	push   eax
1000ddfd:	mov    ecx,DWORD PTR [ebp-0x4]
1000de00:	push   ecx
1000de01:	call   0x1001253e
1000de06:	cmp    eax,0x7a
1000de09:	jne    0x1000de30
1000de0b:	mov    edx,DWORD PTR [ebp-0x4]
1000de0e:	push   edx
1000de0f:	call   0x10016b85
1000de14:	add    esp,0x4
1000de17:	mov    eax,DWORD PTR [ebp-0x8]
1000de1a:	push   eax
1000de1b:	call   0x10016c62
1000de20:	add    esp,0x4
1000de23:	mov    DWORD PTR [ebp-0x4],eax
1000de26:	cmp    DWORD PTR [ebp-0x4],0x0
1000de2a:	jne    0x1000de30
1000de2c:	mov    al,0x1
1000de2e:	jmp    0x1000de9f
1000de30:	push   0x0
1000de32:	lea    ecx,[ebp-0x8]
1000de35:	push   ecx
1000de36:	mov    edx,DWORD PTR [ebp-0x4]
1000de39:	push   edx
1000de3a:	call   0x1001253e
1000de3f:	test   eax,eax
1000de41:	je     0x1000de53
1000de43:	mov    eax,DWORD PTR [ebp-0x4]
1000de46:	push   eax
1000de47:	call   0x10016b85
1000de4c:	add    esp,0x4
1000de4f:	mov    al,0x1
1000de51:	jmp    0x1000de9f
1000de53:	mov    DWORD PTR [ebp-0xc],0x0
1000de5a:	jmp    0x1000de65
1000de5c:	mov    ecx,DWORD PTR [ebp-0xc]
1000de5f:	add    ecx,0x1
1000de62:	mov    DWORD PTR [ebp-0xc],ecx
1000de65:	mov    edx,DWORD PTR [ebp-0x4]
1000de68:	mov    eax,DWORD PTR [ebp-0xc]
1000de6b:	cmp    eax,DWORD PTR [edx]
1000de6d:	jae    0x1000de91
1000de6f:	mov    ecx,DWORD PTR [ebp-0xc]
1000de72:	imul   ecx,ecx,0x38
1000de75:	mov    edx,DWORD PTR [ebp-0x4]
1000de78:	cmp    DWORD PTR [edx+ecx*1+0x4],0x0
1000de7d:	jne    0x1000de8f
1000de7f:	mov    eax,DWORD PTR [ebp-0x4]
1000de82:	push   eax
1000de83:	call   0x10016b85
1000de88:	add    esp,0x4
1000de8b:	mov    al,0x1
1000de8d:	jmp    0x1000de9f
1000de8f:	jmp    0x1000de5c
1000de91:	mov    ecx,DWORD PTR [ebp-0x4]
1000de94:	push   ecx
1000de95:	call   0x10016b85
1000de9a:	add    esp,0x4
1000de9d:	xor    al,al
1000de9f:	mov    esp,ebp
1000dea1:	pop    ebp
1000dea2:	ret    
1000dea3:	int3   
1000dea4:	int3   
1000dea5:	int3   
1000dea6:	int3   
1000dea7:	int3   
1000dea8:	int3   
1000dea9:	int3   
1000deaa:	int3   
1000deab:	int3   
1000deac:	int3   
1000dead:	int3   
1000deae:	int3   
1000deaf:	int3   
1000deb0:	push   ebp
1000deb1:	mov    ebp,esp
1000deb3:	sub    esp,0x8
1000deb6:	mov    DWORD PTR [ebp-0x8],0x3e8
1000debd:	mov    DWORD PTR [ebp-0x4],0x0
1000dec4:	call   0x1000ddd0
1000dec9:	movzx  eax,al
1000decc:	test   eax,eax
1000dece:	je     0x1000ded4
1000ded0:	jmp    0x1000defd
1000ded2:	jmp    0x1000def0
1000ded4:	cmp    DWORD PTR [ebp+0x8],0xffffffff
1000ded8:	je     0x1000def0
1000deda:	mov    ecx,DWORD PTR [ebp-0x4]
1000dedd:	add    ecx,0x3e8
1000dee3:	mov    DWORD PTR [ebp-0x4],ecx
1000dee6:	mov    edx,DWORD PTR [ebp-0x4]
1000dee9:	cmp    edx,DWORD PTR [ebp+0x8]
1000deec:	jbe    0x1000def0
1000deee:	jmp    0x1000defd
1000def0:	push   0x3e8
1000def5:	call   DWORD PTR ds:0x10034070
1000defb:	jmp    0x1000dec4
1000defd:	mov    esp,ebp
1000deff:	pop    ebp
1000df00:	ret    
1000df01:	int3   
1000df02:	int3   
1000df03:	int3   
1000df04:	int3   
1000df05:	int3   
1000df06:	int3   
1000df07:	int3   
1000df08:	int3   
1000df09:	int3   
1000df0a:	int3   
1000df0b:	int3   
1000df0c:	int3   
1000df0d:	int3   
1000df0e:	int3   
1000df0f:	int3   
1000df10:	push   ebp
1000df11:	mov    ebp,esp
1000df13:	push   0xffffffff
1000df15:	push   0x1002a23c
1000df1a:	mov    eax,fs:0x0
1000df20:	push   eax
1000df21:	sub    esp,0x1c
1000df24:	mov    eax,ds:0x100951fc
1000df29:	xor    eax,ebp
1000df2b:	push   eax
1000df2c:	lea    eax,[ebp-0xc]
1000df2f:	mov    fs:0x0,eax
1000df35:	lea    ecx,[ebp-0xd]
1000df38:	call   0x10006c80
1000df3d:	mov    DWORD PTR [ebp-0x4],0x0
1000df44:	mov    DWORD PTR [ebp-0x14],0x7530
1000df4b:	push   0x927c0
1000df50:	call   0x1000deb0
1000df55:	add    esp,0x4
1000df58:	call   0x1000dd40
1000df5d:	push   0x1
1000df5f:	push   0x1
1000df61:	lea    ecx,[ebp-0x24]
1000df64:	call   0x10006d40
1000df69:	mov    BYTE PTR [ebp-0x4],0x1
1000df6d:	mov    eax,DWORD PTR [ebp-0x14]
1000df70:	push   eax
1000df71:	mov    ecx,DWORD PTR ds:0x10097aa0
1000df77:	push   ecx
1000df78:	call   DWORD PTR ds:0x1003404c
1000df7e:	mov    DWORD PTR [ebp-0x18],eax
1000df81:	cmp    DWORD PTR [ebp-0x18],0x102
1000df88:	je     0x1000df98
1000df8a:	mov    BYTE PTR [ebp-0x4],0x0
1000df8e:	lea    ecx,[ebp-0x24]
1000df91:	call   0x10006d60
1000df96:	jmp    0x1000dfa6
1000df98:	mov    BYTE PTR [ebp-0x4],0x0
1000df9c:	lea    ecx,[ebp-0x24]
1000df9f:	call   0x10006d60
1000dfa4:	jmp    0x1000df58
1000dfa6:	mov    DWORD PTR [ebp-0x28],0x0
1000dfad:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000dfb4:	lea    ecx,[ebp-0xd]
1000dfb7:	call   0x10006ca0
1000dfbc:	mov    eax,DWORD PTR [ebp-0x28]
1000dfbf:	mov    ecx,DWORD PTR [ebp-0xc]
1000dfc2:	mov    DWORD PTR fs:0x0,ecx
1000dfc9:	pop    ecx
1000dfca:	mov    esp,ebp
1000dfcc:	pop    ebp
1000dfcd:	ret    0x4
1000dfd0:	push   ebp
1000dfd1:	mov    ebp,esp
1000dfd3:	push   0xffffffff
1000dfd5:	push   0x1002a25f
1000dfda:	mov    eax,fs:0x0
1000dfe0:	push   eax
1000dfe1:	push   ecx
1000dfe2:	mov    eax,ds:0x100951fc
1000dfe7:	xor    eax,ebp
1000dfe9:	push   eax
1000dfea:	lea    eax,[ebp-0xc]
1000dfed:	mov    fs:0x0,eax
1000dff3:	push   0x0
1000dff5:	push   0x0
1000dff7:	push   0x0
1000dff9:	push   0x1000df10
1000dffe:	push   0x0
1000e000:	push   0x0
1000e002:	call   DWORD PTR ds:0x10034074
1000e008:	push   eax
1000e009:	lea    ecx,[ebp-0x10]
1000e00c:	call   0x100032c0
1000e011:	mov    DWORD PTR [ebp-0x4],0x0
1000e018:	mov    ecx,0x10096934
1000e01d:	call   0x1000ad60
1000e022:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e029:	lea    ecx,[ebp-0x10]
1000e02c:	call   0x10003290
1000e031:	mov    ecx,DWORD PTR [ebp-0xc]
1000e034:	mov    DWORD PTR fs:0x0,ecx
1000e03b:	pop    ecx
1000e03c:	mov    esp,ebp
1000e03e:	pop    ebp
1000e03f:	ret    
1000e040:	push   ebp
1000e041:	mov    ebp,esp
1000e043:	push   0xffffffff
1000e045:	push   0x1002a282
1000e04a:	mov    eax,fs:0x0
1000e050:	push   eax
1000e051:	push   ecx
1000e052:	sub    esp,0x24
1000e055:	mov    eax,ds:0x100951fc
1000e05a:	xor    eax,ebp
1000e05c:	mov    DWORD PTR [ebp-0x14],eax
1000e05f:	push   ebx
1000e060:	push   esi
1000e061:	push   edi
1000e062:	push   eax
1000e063:	lea    eax,[ebp-0xc]
1000e066:	mov    fs:0x0,eax
1000e06c:	mov    DWORD PTR [ebp-0x10],esp
1000e06f:	cmp    DWORD PTR [ebp+0xc],0x1
1000e073:	jne    0x1000e087
1000e075:	mov    eax,ds:0x1009692c
1000e07a:	add    eax,0x1
1000e07d:	mov    ds:0x1009692c,eax
1000e082:	jmp    0x1000e115
1000e087:	cmp    DWORD PTR [ebp+0xc],0x0
1000e08b:	jne    0x1000e115
1000e091:	mov    ecx,DWORD PTR ds:0x1009692c
1000e097:	sub    ecx,0x1
1000e09a:	mov    DWORD PTR ds:0x1009692c,ecx
1000e0a0:	jne    0x1000e115
1000e0a2:	call   0x10006cb0
1000e0a7:	mov    DWORD PTR [ebp-0x4],0x0
1000e0ae:	push   0x1
1000e0b0:	push   0x1
1000e0b2:	lea    ecx,[ebp-0x30]
1000e0b5:	call   0x10006d40
1000e0ba:	mov    DWORD PTR [ebp-0x34],eax
1000e0bd:	mov    BYTE PTR [ebp-0x4],0x1
1000e0c1:	mov    DWORD PTR [ebp-0x24],0x0
1000e0c8:	xor    edx,edx
1000e0ca:	mov    DWORD PTR [ebp-0x20],edx
1000e0cd:	mov    DWORD PTR [ebp-0x1c],edx
1000e0d0:	mov    DWORD PTR [ebp-0x18],edx
1000e0d3:	lea    eax,[ebp-0x24]
1000e0d6:	push   eax
1000e0d7:	lea    ecx,[ebp-0x30]
1000e0da:	call   0x10006d90
1000e0df:	mov    BYTE PTR [ebp-0x4],0x0
1000e0e3:	lea    ecx,[ebp-0x30]
1000e0e6:	call   0x10006d60
1000e0eb:	jmp    0x1000e0fa
1000e0ed:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e0f4:	mov    eax,0x1000e101
1000e0f9:	ret    
1000e0fa:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e101:	push   0xffffffff
1000e103:	call   0x10006cc0
1000e108:	add    esp,0x4
1000e10b:	push   0x1
1000e10d:	call   0x1000e540
1000e112:	add    esp,0x4
1000e115:	mov    eax,0x1
1000e11a:	mov    ecx,DWORD PTR [ebp-0xc]
1000e11d:	mov    DWORD PTR fs:0x0,ecx
1000e124:	pop    ecx
1000e125:	pop    edi
1000e126:	pop    esi
1000e127:	pop    ebx
1000e128:	mov    ecx,DWORD PTR [ebp-0x14]
1000e12b:	xor    ecx,ebp
1000e12d:	call   0x10015b2b
1000e132:	mov    esp,ebp
1000e134:	pop    ebp
1000e135:	ret    0xc
1000e138:	int3   
1000e139:	int3   
1000e13a:	int3   
1000e13b:	int3   
1000e13c:	int3   
1000e13d:	int3   
1000e13e:	int3   
1000e13f:	int3   
1000e140:	push   ebp
1000e141:	mov    ebp,esp
1000e143:	movzx  eax,BYTE PTR ds:0x10096930
1000e14a:	test   eax,eax
1000e14c:	jne    0x1000e16e
1000e14e:	mov    BYTE PTR ds:0x10096930,0x1
1000e155:	call   0x10002120
1000e15a:	push   eax
1000e15b:	call   0x1000b480
1000e160:	add    esp,0x4
1000e163:	movzx  ecx,al
1000e166:	test   ecx,ecx
1000e168:	jne    0x1000e16e
1000e16a:	xor    eax,eax
1000e16c:	jmp    0x1000e17f
1000e16e:	mov    edx,DWORD PTR [ebp+0x10]
1000e171:	push   edx
1000e172:	mov    eax,DWORD PTR [ebp+0xc]
1000e175:	push   eax
1000e176:	mov    ecx,DWORD PTR [ebp+0x8]
1000e179:	push   ecx
1000e17a:	call   0x10016ff4
1000e17f:	pop    ebp
1000e180:	ret    0xc
1000e183:	int3   
1000e184:	int3   
1000e185:	int3   
1000e186:	int3   
1000e187:	int3   
1000e188:	int3   
1000e189:	int3   
1000e18a:	int3   
1000e18b:	int3   
1000e18c:	int3   
1000e18d:	int3   
1000e18e:	int3   
1000e18f:	int3   
1000e190:	push   ebp
1000e191:	mov    ebp,esp
1000e193:	sub    esp,0x10
1000e196:	mov    DWORD PTR [ebp-0xc],ecx
1000e199:	mov    ecx,DWORD PTR [ebp-0xc]
1000e19c:	call   0x100031e0
1000e1a1:	mov    DWORD PTR [ebp-0x8],eax
1000e1a4:	cmp    DWORD PTR [ebp+0xc],0x0
1000e1a8:	jl     0x1000e1b2
1000e1aa:	mov    eax,DWORD PTR [ebp+0xc]
1000e1ad:	cmp    eax,DWORD PTR [ebp-0x8]
1000e1b0:	jl     0x1000e1b7
1000e1b2:	or     eax,0xffffffff
1000e1b5:	jmp    0x1000e1fa
1000e1b7:	mov    cx,WORD PTR [ebp+0x8]
1000e1bb:	push   ecx
1000e1bc:	mov    ecx,DWORD PTR [ebp-0xc]
1000e1bf:	call   0x10003330
1000e1c4:	mov    edx,DWORD PTR [ebp+0xc]
1000e1c7:	lea    eax,[eax+edx*2]
1000e1ca:	push   eax
1000e1cb:	call   0x1000e200
1000e1d0:	add    esp,0x8
1000e1d3:	mov    DWORD PTR [ebp-0x4],eax
1000e1d6:	cmp    DWORD PTR [ebp-0x4],0x0
1000e1da:	jne    0x1000e1e5
1000e1dc:	mov    DWORD PTR [ebp-0x10],0xffffffff
1000e1e3:	jmp    0x1000e1f7
1000e1e5:	mov    ecx,DWORD PTR [ebp-0xc]
1000e1e8:	call   0x10003330
1000e1ed:	mov    ecx,DWORD PTR [ebp-0x4]
1000e1f0:	sub    ecx,eax
1000e1f2:	sar    ecx,1
1000e1f4:	mov    DWORD PTR [ebp-0x10],ecx
1000e1f7:	mov    eax,DWORD PTR [ebp-0x10]
1000e1fa:	mov    esp,ebp
1000e1fc:	pop    ebp
1000e1fd:	ret    0x8
1000e200:	push   ebp
1000e201:	mov    ebp,esp
1000e203:	mov    ax,WORD PTR [ebp+0xc]
1000e207:	push   eax
1000e208:	mov    ecx,DWORD PTR [ebp+0x8]
1000e20b:	push   ecx
1000e20c:	call   0x10017015
1000e211:	add    esp,0x8
1000e214:	pop    ebp
1000e215:	ret    
1000e216:	int3   
1000e217:	int3   
1000e218:	int3   
1000e219:	int3   
1000e21a:	int3   
1000e21b:	int3   
1000e21c:	int3   
1000e21d:	int3   
1000e21e:	int3   
1000e21f:	int3   
1000e220:	push   ebp
1000e221:	mov    ebp,esp
1000e223:	sub    esp,0x10
1000e226:	mov    DWORD PTR [ebp-0x10],ecx
1000e229:	mov    ecx,DWORD PTR [ebp-0x10]
1000e22c:	call   0x10003330
1000e231:	mov    DWORD PTR [ebp-0x4],eax
1000e234:	mov    DWORD PTR [ebp-0x8],0x0
1000e23b:	mov    eax,DWORD PTR [ebp-0x4]
1000e23e:	movzx  ecx,WORD PTR [eax]
1000e241:	test   ecx,ecx
1000e243:	je     0x1000e27e
1000e245:	mov    edx,DWORD PTR [ebp-0x4]
1000e248:	mov    ax,WORD PTR [edx]
1000e24b:	push   eax
1000e24c:	call   0x1000e2c0
1000e251:	add    esp,0x4
1000e254:	test   eax,eax
1000e256:	je     0x1000e266
1000e258:	cmp    DWORD PTR [ebp-0x8],0x0
1000e25c:	jne    0x1000e264
1000e25e:	mov    ecx,DWORD PTR [ebp-0x4]
1000e261:	mov    DWORD PTR [ebp-0x8],ecx
1000e264:	jmp    0x1000e26d
1000e266:	mov    DWORD PTR [ebp-0x8],0x0
1000e26d:	mov    edx,DWORD PTR [ebp-0x4]
1000e270:	push   edx
1000e271:	call   0x1000e2b0
1000e276:	add    esp,0x4
1000e279:	mov    DWORD PTR [ebp-0x4],eax
1000e27c:	jmp    0x1000e23b
1000e27e:	cmp    DWORD PTR [ebp-0x8],0x0
1000e282:	je     0x1000e2a2
1000e284:	mov    ecx,DWORD PTR [ebp-0x10]
1000e287:	call   0x10003330
1000e28c:	mov    ecx,DWORD PTR [ebp-0x8]
1000e28f:	sub    ecx,eax
1000e291:	sar    ecx,1
1000e293:	mov    DWORD PTR [ebp-0xc],ecx
1000e296:	mov    edx,DWORD PTR [ebp-0xc]
1000e299:	push   edx
1000e29a:	mov    ecx,DWORD PTR [ebp-0x10]
1000e29d:	call   0x10003240
1000e2a2:	mov    eax,DWORD PTR [ebp-0x10]
1000e2a5:	mov    esp,ebp
1000e2a7:	pop    ebp
1000e2a8:	ret    
1000e2a9:	int3   
1000e2aa:	int3   
1000e2ab:	int3   
1000e2ac:	int3   
1000e2ad:	int3   
1000e2ae:	int3   
1000e2af:	int3   
1000e2b0:	push   ebp
1000e2b1:	mov    ebp,esp
1000e2b3:	mov    eax,DWORD PTR [ebp+0x8]
1000e2b6:	add    eax,0x2
1000e2b9:	pop    ebp
1000e2ba:	ret    
1000e2bb:	int3   
1000e2bc:	int3   
1000e2bd:	int3   
1000e2be:	int3   
1000e2bf:	int3   
1000e2c0:	push   ebp
1000e2c1:	mov    ebp,esp
1000e2c3:	mov    ax,WORD PTR [ebp+0x8]
1000e2c7:	push   eax
1000e2c8:	call   0x1001707b
1000e2cd:	add    esp,0x4
1000e2d0:	pop    ebp
1000e2d1:	ret    
1000e2d2:	int3   
1000e2d3:	int3   
1000e2d4:	int3   
1000e2d5:	int3   
1000e2d6:	int3   
1000e2d7:	int3   
1000e2d8:	int3   
1000e2d9:	int3   
1000e2da:	int3   
1000e2db:	int3   
1000e2dc:	int3   
1000e2dd:	int3   
1000e2de:	int3   
1000e2df:	int3   
1000e2e0:	push   ebp
1000e2e1:	mov    ebp,esp
1000e2e3:	sub    esp,0x14
1000e2e6:	mov    DWORD PTR [ebp-0x14],ecx
1000e2e9:	mov    ecx,DWORD PTR [ebp-0x14]
1000e2ec:	call   0x10003330
1000e2f1:	mov    DWORD PTR [ebp-0x4],eax
1000e2f4:	mov    eax,DWORD PTR [ebp-0x4]
1000e2f7:	mov    cx,WORD PTR [eax]
1000e2fa:	push   ecx
1000e2fb:	call   0x1000e2c0
1000e300:	add    esp,0x4
1000e303:	test   eax,eax
1000e305:	je     0x1000e318
1000e307:	mov    edx,DWORD PTR [ebp-0x4]
1000e30a:	push   edx
1000e30b:	call   0x1000e2b0
1000e310:	add    esp,0x4
1000e313:	mov    DWORD PTR [ebp-0x4],eax
1000e316:	jmp    0x1000e2f4
1000e318:	mov    ecx,DWORD PTR [ebp-0x14]
1000e31b:	call   0x10003330
1000e320:	cmp    DWORD PTR [ebp-0x4],eax
1000e323:	je     0x1000e391
1000e325:	mov    ecx,DWORD PTR [ebp-0x14]
1000e328:	call   0x10003330
1000e32d:	mov    ecx,DWORD PTR [ebp-0x4]
1000e330:	sub    ecx,eax
1000e332:	sar    ecx,1
1000e334:	mov    DWORD PTR [ebp-0x10],ecx
1000e337:	mov    ecx,DWORD PTR [ebp-0x14]
1000e33a:	call   0x100031e0
1000e33f:	push   eax
1000e340:	mov    ecx,DWORD PTR [ebp-0x14]
1000e343:	call   0x100031b0
1000e348:	mov    DWORD PTR [ebp-0xc],eax
1000e34b:	mov    edx,DWORD PTR [ebp-0x10]
1000e34e:	mov    eax,DWORD PTR [ebp-0xc]
1000e351:	lea    ecx,[eax+edx*2]
1000e354:	mov    DWORD PTR [ebp-0x4],ecx
1000e357:	mov    ecx,DWORD PTR [ebp-0x14]
1000e35a:	call   0x100031e0
1000e35f:	sub    eax,DWORD PTR [ebp-0x10]
1000e362:	mov    DWORD PTR [ebp-0x8],eax
1000e365:	mov    edx,DWORD PTR [ebp-0x8]
1000e368:	lea    eax,[edx+edx*1+0x2]
1000e36c:	push   eax
1000e36d:	mov    ecx,DWORD PTR [ebp-0x4]
1000e370:	push   ecx
1000e371:	mov    edx,DWORD PTR [ebp-0x8]
1000e374:	lea    eax,[edx+edx*1+0x2]
1000e378:	push   eax
1000e379:	mov    ecx,DWORD PTR [ebp-0xc]
1000e37c:	push   ecx
1000e37d:	call   0x10001150
1000e382:	add    esp,0x10
1000e385:	mov    edx,DWORD PTR [ebp-0x8]
1000e388:	push   edx
1000e389:	mov    ecx,DWORD PTR [ebp-0x14]
1000e38c:	call   0x10003c70
1000e391:	mov    eax,DWORD PTR [ebp-0x14]
1000e394:	mov    esp,ebp
1000e396:	pop    ebp
1000e397:	ret    
1000e398:	int3   
1000e399:	int3   
1000e39a:	int3   
1000e39b:	int3   
1000e39c:	int3   
1000e39d:	int3   
1000e39e:	int3   
1000e39f:	int3   
1000e3a0:	push   ebp
1000e3a1:	mov    ebp,esp
1000e3a3:	push   ecx
1000e3a4:	mov    DWORD PTR [ebp-0x4],ecx
1000e3a7:	mov    ecx,DWORD PTR [ebp-0x4]
1000e3aa:	call   0x1000e460
1000e3af:	mov    eax,DWORD PTR [ebp-0x4]
1000e3b2:	mov    DWORD PTR [eax],0x10034a5c
1000e3b8:	mov    eax,DWORD PTR [ebp-0x4]
1000e3bb:	mov    esp,ebp
1000e3bd:	pop    ebp
1000e3be:	ret    
1000e3bf:	int3   
1000e3c0:	push   ebp
1000e3c1:	mov    ebp,esp
1000e3c3:	push   ecx
1000e3c4:	mov    DWORD PTR [ebp-0x4],ecx
1000e3c7:	mov    ecx,DWORD PTR [ebp-0x4]
1000e3ca:	call   0x1000e3f0
1000e3cf:	mov    eax,DWORD PTR [ebp+0x8]
1000e3d2:	and    eax,0x1
1000e3d5:	je     0x1000e3e3
1000e3d7:	mov    ecx,DWORD PTR [ebp-0x4]
1000e3da:	push   ecx
1000e3db:	call   0x10015b26
1000e3e0:	add    esp,0x4
1000e3e3:	mov    eax,DWORD PTR [ebp-0x4]
1000e3e6:	mov    esp,ebp
1000e3e8:	pop    ebp
1000e3e9:	ret    0x4
1000e3ec:	int3   
1000e3ed:	int3   
1000e3ee:	int3   
1000e3ef:	int3   
1000e3f0:	push   ebp
1000e3f1:	mov    ebp,esp
1000e3f3:	push   ecx
1000e3f4:	mov    DWORD PTR [ebp-0x4],ecx
1000e3f7:	mov    ecx,DWORD PTR [ebp-0x4]
1000e3fa:	call   0x1000e410
1000e3ff:	mov    esp,ebp
1000e401:	pop    ebp
1000e402:	ret    
1000e403:	int3   
1000e404:	int3   
1000e405:	int3   
1000e406:	int3   
1000e407:	int3   
1000e408:	int3   
1000e409:	int3   
1000e40a:	int3   
1000e40b:	int3   
1000e40c:	int3   
1000e40d:	int3   
1000e40e:	int3   
1000e40f:	int3   
1000e410:	push   ebp
1000e411:	mov    ebp,esp
1000e413:	push   ecx
1000e414:	mov    DWORD PTR [ebp-0x4],ecx
1000e417:	mov    eax,DWORD PTR [ebp-0x4]
1000e41a:	mov    DWORD PTR [eax],0x10034a68
1000e420:	mov    ecx,DWORD PTR [ebp-0x4]
1000e423:	add    ecx,0x4
1000e426:	call   0x10003290
1000e42b:	mov    esp,ebp
1000e42d:	pop    ebp
1000e42e:	ret    
1000e42f:	int3   
1000e430:	push   ebp
1000e431:	mov    ebp,esp
1000e433:	push   ecx
1000e434:	mov    DWORD PTR [ebp-0x4],ecx
1000e437:	mov    ecx,DWORD PTR [ebp-0x4]
1000e43a:	call   0x1000e410
1000e43f:	mov    eax,DWORD PTR [ebp+0x8]
1000e442:	and    eax,0x1
1000e445:	je     0x1000e453
1000e447:	mov    ecx,DWORD PTR [ebp-0x4]
1000e44a:	push   ecx
1000e44b:	call   0x10015b26
1000e450:	add    esp,0x4
1000e453:	mov    eax,DWORD PTR [ebp-0x4]
1000e456:	mov    esp,ebp
1000e458:	pop    ebp
1000e459:	ret    0x4
1000e45c:	int3   
1000e45d:	int3   
1000e45e:	int3   
1000e45f:	int3   
1000e460:	push   ebp
1000e461:	mov    ebp,esp
1000e463:	push   ecx
1000e464:	mov    DWORD PTR [ebp-0x4],ecx
1000e467:	mov    eax,DWORD PTR [ebp-0x4]
1000e46a:	mov    DWORD PTR [eax],0x10034a68
1000e470:	push   0x0
1000e472:	mov    ecx,DWORD PTR [ebp-0x4]
1000e475:	add    ecx,0x4
1000e478:	call   0x100032c0
1000e47d:	mov    eax,DWORD PTR [ebp-0x4]
1000e480:	mov    esp,ebp
1000e482:	pop    ebp
1000e483:	ret    
1000e484:	int3   
1000e485:	int3   
1000e486:	int3   
1000e487:	int3   
1000e488:	int3   
1000e489:	int3   
1000e48a:	int3   
1000e48b:	int3   
1000e48c:	int3   
1000e48d:	int3   
1000e48e:	int3   
1000e48f:	int3   
1000e490:	push   ebp
1000e491:	mov    ebp,esp
1000e493:	push   ecx
1000e494:	mov    BYTE PTR [ebp-0x1],0x1
1000e498:	mov    ecx,0x1009694c
1000e49d:	call   0x10002d20
1000e4a2:	test   eax,eax
1000e4a4:	jne    0x1000e4aa
1000e4a6:	mov    BYTE PTR [ebp-0x1],0x0
1000e4aa:	mov    al,BYTE PTR [ebp-0x1]
1000e4ad:	mov    esp,ebp
1000e4af:	pop    ebp
1000e4b0:	ret    
1000e4b1:	int3   
1000e4b2:	int3   
1000e4b3:	int3   
1000e4b4:	int3   
1000e4b5:	int3   
1000e4b6:	int3   
1000e4b7:	int3   
1000e4b8:	int3   
1000e4b9:	int3   
1000e4ba:	int3   
1000e4bb:	int3   
1000e4bc:	int3   
1000e4bd:	int3   
1000e4be:	int3   
1000e4bf:	int3   
1000e4c0:	push   ebp
1000e4c1:	mov    ebp,esp
1000e4c3:	push   0x0
1000e4c5:	push   0x2
1000e4c7:	mov    eax,ds:0x10096974
1000e4cc:	push   eax
1000e4cd:	mov    ecx,DWORD PTR ds:0x10096970
1000e4d3:	push   ecx
1000e4d4:	call   0x100172c0
1000e4d9:	mov    ds:0x10096970,eax
1000e4de:	mov    DWORD PTR ds:0x10096974,edx
1000e4e4:	mov    edx,DWORD PTR ds:0x10096974
1000e4ea:	cmp    edx,DWORD PTR ds:0x1008906c
1000e4f0:	jl     0x1000e519
1000e4f2:	jg     0x1000e501
1000e4f4:	mov    eax,ds:0x10096970
1000e4f9:	cmp    eax,DWORD PTR ds:0x10089068
1000e4ff:	jbe    0x1000e519
1000e501:	mov    ecx,DWORD PTR ds:0x10089068
1000e507:	mov    DWORD PTR ds:0x10096970,ecx
1000e50d:	mov    edx,DWORD PTR ds:0x1008906c
1000e513:	mov    DWORD PTR ds:0x10096974,edx
1000e519:	pop    ebp
1000e51a:	ret    
1000e51b:	int3   
1000e51c:	int3   
1000e51d:	int3   
1000e51e:	int3   
1000e51f:	int3   
1000e520:	push   ebp
1000e521:	mov    ebp,esp
1000e523:	mov    eax,ds:0x10089068
1000e528:	mov    ds:0x10096970,eax
1000e52d:	mov    ecx,DWORD PTR ds:0x1008906c
1000e533:	mov    DWORD PTR ds:0x10096974,ecx
1000e539:	pop    ebp
1000e53a:	ret    
1000e53b:	int3   
1000e53c:	int3   
1000e53d:	int3   
1000e53e:	int3   
1000e53f:	int3   
1000e540:	push   ebp
1000e541:	mov    ebp,esp
1000e543:	sub    esp,0xc
1000e546:	mov    DWORD PTR ds:0x10096bb8,0x0
1000e550:	lea    eax,[ebp-0x8]
1000e553:	push   eax
1000e554:	call   0x1000f590
1000e559:	add    esp,0x4
1000e55c:	mov    DWORD PTR [ebp-0xc],eax
1000e55f:	mov    ecx,DWORD PTR [ebp-0xc]
1000e562:	call   0x10003330
1000e567:	push   eax
1000e568:	call   DWORD PTR ds:0x10034098
1000e56e:	mov    DWORD PTR [ebp-0x4],eax
1000e571:	lea    ecx,[ebp-0x8]
1000e574:	call   0x10003b40
1000e579:	cmp    DWORD PTR [ebp-0x4],0x0
1000e57d:	je     0x1000e595
1000e57f:	mov    ecx,DWORD PTR [ebp-0x4]
1000e582:	push   ecx
1000e583:	call   DWORD PTR ds:0x10034030
1000e589:	movzx  edx,BYTE PTR [ebp+0x8]
1000e58d:	test   edx,edx
1000e58f:	je     0x1000e593
1000e591:	jmp    0x1000e595
1000e593:	jmp    0x1000e550
1000e595:	mov    esp,ebp
1000e597:	pop    ebp
1000e598:	ret    
1000e599:	int3   
1000e59a:	int3   
1000e59b:	int3   
1000e59c:	int3   
1000e59d:	int3   
1000e59e:	int3   
1000e59f:	int3   
1000e5a0:	push   ebp
1000e5a1:	mov    ebp,esp
1000e5a3:	push   0xffffffff
1000e5a5:	push   0x1002a2c0
1000e5aa:	mov    eax,fs:0x0
1000e5b0:	push   eax
1000e5b1:	push   ecx
1000e5b2:	sub    esp,0x44
1000e5b5:	push   ebx
1000e5b6:	push   esi
1000e5b7:	push   edi
1000e5b8:	mov    eax,ds:0x100951fc
1000e5bd:	xor    eax,ebp
1000e5bf:	push   eax
1000e5c0:	lea    eax,[ebp-0xc]
1000e5c3:	mov    fs:0x0,eax
1000e5c9:	mov    DWORD PTR [ebp-0x10],esp
1000e5cc:	mov    DWORD PTR [ebp-0x4],0x1
1000e5d3:	mov    BYTE PTR [ebp-0x4],0x2
1000e5d7:	call   0x10001000
1000e5dc:	mov    DWORD PTR [ebp-0x28],eax
1000e5df:	mov    ecx,0x1009694c
1000e5e4:	call   0x10002d20
1000e5e9:	mov    DWORD PTR [ebp-0x34],eax
1000e5ec:	cmp    DWORD PTR [ebp-0x34],0x0
1000e5f0:	jne    0x1000e600
1000e5f2:	mov    eax,DWORD PTR [ebp+0x8]
1000e5f5:	push   eax
1000e5f6:	mov    ecx,0x1009694c
1000e5fb:	call   0x10002be0
1000e600:	mov    ecx,0x1009697c
1000e605:	call   0x10002d20
1000e60a:	mov    DWORD PTR [ebp-0x38],eax
1000e60d:	cmp    DWORD PTR [ebp-0x38],0x0
1000e611:	jne    0x1000e621
1000e613:	mov    ecx,DWORD PTR [ebp+0xc]
1000e616:	push   ecx
1000e617:	mov    ecx,0x1009697c
1000e61c:	call   0x10002be0
1000e621:	mov    ecx,DWORD PTR [ebp+0x8]
1000e624:	call   0x10002d20
1000e629:	mov    DWORD PTR [ebp-0x3c],eax
1000e62c:	cmp    DWORD PTR [ebp-0x3c],0x0
1000e630:	je     0x1000e659
1000e632:	mov    ecx,DWORD PTR [ebp+0x8]
1000e635:	call   0x100078b0
1000e63a:	mov    DWORD PTR [ebp-0x40],eax
1000e63d:	lea    ecx,[ebp+0x14]
1000e640:	call   0x10003330
1000e645:	push   eax
1000e646:	mov    edx,DWORD PTR [ebp-0x40]
1000e649:	push   edx
1000e64a:	call   DWORD PTR ds:0x100340a0
1000e650:	push   eax
1000e651:	call   0x10009620
1000e656:	add    esp,0xc
1000e659:	lea    ecx,[ebp+0x14]
1000e65c:	call   0x10003330
1000e661:	push   eax
1000e662:	call   DWORD PTR ds:0x10034098
1000e668:	mov    DWORD PTR [ebp-0x20],eax
1000e66b:	cmp    DWORD PTR [ebp-0x20],0x0
1000e66f:	jne    0x1000e69a
1000e671:	mov    BYTE PTR [ebp-0x2d],0x0
1000e675:	mov    BYTE PTR [ebp-0x4],0x0
1000e679:	lea    ecx,[ebp+0x14]
1000e67c:	call   0x10003b40
1000e681:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e688:	lea    ecx,[ebp+0x18]
1000e68b:	call   0x10003b40
1000e690:	mov    al,BYTE PTR [ebp-0x2d]
1000e693:	jmp    0x1000e7a0
1000e698:	jmp    0x1000e6b6
1000e69a:	mov    ecx,DWORD PTR [ebp+0x8]
1000e69d:	call   0x10002d20
1000e6a2:	mov    DWORD PTR [ebp-0x44],eax
1000e6a5:	cmp    DWORD PTR [ebp-0x44],0x0
1000e6a9:	jne    0x1000e6b6
1000e6ab:	mov    ecx,DWORD PTR [ebp+0xc]
1000e6ae:	call   0x10002d20
1000e6b3:	mov    DWORD PTR [ebp-0x48],eax
1000e6b6:	push   0x1006cd5c
1000e6bb:	mov    eax,DWORD PTR [ebp-0x20]
1000e6be:	push   eax
1000e6bf:	call   DWORD PTR ds:0x10034044
1000e6c5:	mov    DWORD PTR [ebp-0x14],eax
1000e6c8:	cmp    DWORD PTR [ebp-0x14],0x0
1000e6cc:	jne    0x1000e6f5
1000e6ce:	mov    BYTE PTR [ebp-0x2e],0x0
1000e6d2:	mov    BYTE PTR [ebp-0x4],0x0
1000e6d6:	lea    ecx,[ebp+0x14]
1000e6d9:	call   0x10003b40
1000e6de:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e6e5:	lea    ecx,[ebp+0x18]
1000e6e8:	call   0x10003b40
1000e6ed:	mov    al,BYTE PTR [ebp-0x2e]
1000e6f0:	jmp    0x1000e7a0
1000e6f5:	mov    ecx,DWORD PTR [ebp+0x10]
1000e6f8:	call   0x10002d20
1000e6fd:	mov    DWORD PTR [ebp-0x4c],eax
1000e700:	mov    ecx,DWORD PTR [ebp+0x10]
1000e703:	call   0x100078b0
1000e708:	mov    DWORD PTR [ebp-0x50],eax
1000e70b:	mov    ecx,DWORD PTR [ebp-0x4c]
1000e70e:	push   ecx
1000e70f:	mov    edx,DWORD PTR [ebp-0x50]
1000e712:	push   edx
1000e713:	push   0x10096bb8
1000e718:	call   DWORD PTR [ebp-0x14]
1000e71b:	add    esp,0xc
1000e71e:	mov    BYTE PTR [ebp-0x51],al
1000e721:	mov    al,BYTE PTR [ebp-0x51]
1000e724:	mov    BYTE PTR [ebp-0x15],al
1000e727:	movzx  ecx,BYTE PTR [ebp-0x15]
1000e72b:	test   ecx,ecx
1000e72d:	je     0x1000e73c
1000e72f:	mov    edx,DWORD PTR ds:0x10096998
1000e735:	push   edx
1000e736:	call   DWORD PTR ds:0x1003409c
1000e73c:	mov    al,BYTE PTR [ebp-0x15]
1000e73f:	mov    BYTE PTR [ebp-0x2f],al
1000e742:	mov    BYTE PTR [ebp-0x4],0x0
1000e746:	lea    ecx,[ebp+0x14]
1000e749:	call   0x10003b40
1000e74e:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e755:	lea    ecx,[ebp+0x18]
1000e758:	call   0x10003b40
1000e75d:	mov    al,BYTE PTR [ebp-0x2f]
1000e760:	jmp    0x1000e7a0
1000e762:	mov    BYTE PTR [ebp-0x30],0x0
1000e766:	mov    DWORD PTR [ebp-0x4],0x1
1000e76d:	mov    eax,0x1000e782
1000e772:	ret    
1000e773:	mov    eax,0x1000e779
1000e778:	ret    
1000e779:	mov    DWORD PTR [ebp-0x4],0x1
1000e780:	jmp    0x1000e7a0
1000e782:	mov    BYTE PTR [ebp-0x4],0x0
1000e786:	lea    ecx,[ebp+0x14]
1000e789:	call   0x10003b40
1000e78e:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e795:	lea    ecx,[ebp+0x18]
1000e798:	call   0x10003b40
1000e79d:	mov    al,BYTE PTR [ebp-0x30]
1000e7a0:	mov    ecx,DWORD PTR [ebp-0xc]
1000e7a3:	mov    DWORD PTR fs:0x0,ecx
1000e7aa:	pop    ecx
1000e7ab:	pop    edi
1000e7ac:	pop    esi
1000e7ad:	pop    ebx
1000e7ae:	mov    esp,ebp
1000e7b0:	pop    ebp
1000e7b1:	ret    
1000e7b2:	int3   
1000e7b3:	int3   
1000e7b4:	int3   
1000e7b5:	int3   
1000e7b6:	int3   
1000e7b7:	int3   
1000e7b8:	int3   
1000e7b9:	int3   
1000e7ba:	int3   
1000e7bb:	int3   
1000e7bc:	int3   
1000e7bd:	int3   
1000e7be:	int3   
1000e7bf:	int3   
1000e7c0:	push   ebp
1000e7c1:	mov    ebp,esp
1000e7c3:	push   0xffffffff
1000e7c5:	push   0x1002a2fb
1000e7ca:	mov    eax,fs:0x0
1000e7d0:	push   eax
1000e7d1:	sub    esp,0x78
1000e7d4:	mov    eax,ds:0x100951fc
1000e7d9:	xor    eax,ebp
1000e7db:	mov    DWORD PTR [ebp-0x10],eax
1000e7de:	push   eax
1000e7df:	lea    eax,[ebp-0xc]
1000e7e2:	mov    fs:0x0,eax
1000e7e8:	lea    ecx,[ebp-0x50]
1000e7eb:	call   0x1000f810
1000e7f0:	mov    DWORD PTR [ebp-0x4],0x0
1000e7f7:	push   0xffffffff
1000e7f9:	mov    eax,ds:0x1009699c
1000e7fe:	push   eax
1000e7ff:	lea    ecx,[ebp-0x50]
1000e802:	call   0x1000f850
1000e807:	test   eax,eax
1000e809:	je     0x1000e826
1000e80b:	mov    BYTE PTR [ebp-0x51],0x0
1000e80f:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e816:	lea    ecx,[ebp-0x50]
1000e819:	call   0x1000f830
1000e81e:	mov    al,BYTE PTR [ebp-0x51]
1000e821:	jmp    0x1000e955
1000e826:	call   0x10001ad0
1000e82b:	mov    DWORD PTR [ebp-0x5c],eax
1000e82e:	mov    DWORD PTR [ebp-0x58],edx
1000e831:	mov    ecx,DWORD PTR ds:0x10096940
1000e837:	add    ecx,DWORD PTR ds:0x10096970
1000e83d:	mov    edx,DWORD PTR ds:0x10096944
1000e843:	adc    edx,DWORD PTR ds:0x10096974
1000e849:	mov    DWORD PTR [ebp-0x7c],ecx
1000e84c:	mov    DWORD PTR [ebp-0x78],edx
1000e84f:	mov    eax,DWORD PTR [ebp-0x78]
1000e852:	cmp    eax,DWORD PTR [ebp-0x58]
1000e855:	jb     0x1000e87c
1000e857:	ja     0x1000e861
1000e859:	mov    ecx,DWORD PTR [ebp-0x7c]
1000e85c:	cmp    ecx,DWORD PTR [ebp-0x5c]
1000e85f:	jbe    0x1000e87c
1000e861:	mov    BYTE PTR [ebp-0x5d],0x0
1000e865:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e86c:	lea    ecx,[ebp-0x50]
1000e86f:	call   0x1000f830
1000e874:	mov    al,BYTE PTR [ebp-0x5d]
1000e877:	jmp    0x1000e955
1000e87c:	call   0x1000e4c0
1000e881:	call   0x10001ad0
1000e886:	mov    DWORD PTR [ebp-0x6c],eax
1000e889:	mov    DWORD PTR [ebp-0x68],edx
1000e88c:	mov    edx,DWORD PTR [ebp-0x6c]
1000e88f:	mov    DWORD PTR ds:0x10096940,edx
1000e895:	mov    eax,DWORD PTR [ebp-0x68]
1000e898:	mov    ds:0x10096944,eax
1000e89d:	push   0x25
1000e89f:	push   0x1006cd34
1000e8a4:	push   0x38162
1000e8a9:	push   0x10034bd0
1000e8ae:	lea    ecx,[ebp-0x4c]
1000e8b1:	push   ecx
1000e8b2:	call   0x1000b680
1000e8b7:	add    esp,0x14
1000e8ba:	mov    BYTE PTR [ebp-0x4],0x1
1000e8be:	push   0x0
1000e8c0:	lea    edx,[ebp-0x4c]
1000e8c3:	push   edx
1000e8c4:	lea    ecx,[ebp-0x30]
1000e8c7:	call   0x1000f690
1000e8cc:	mov    BYTE PTR [ebp-0x4],0x2
1000e8d0:	push   0x493e0
1000e8d5:	lea    eax,[ebp-0x70]
1000e8d8:	push   eax
1000e8d9:	lea    ecx,[ebp-0x30]
1000e8dc:	call   0x1000f770
1000e8e1:	mov    DWORD PTR [ebp-0x80],eax
1000e8e4:	mov    ecx,DWORD PTR [ebp-0x80]
1000e8e7:	mov    DWORD PTR [ebp-0x84],ecx
1000e8ed:	mov    BYTE PTR [ebp-0x4],0x3
1000e8f1:	mov    ecx,DWORD PTR [ebp-0x84]
1000e8f7:	call   0x10003190
1000e8fc:	push   eax
1000e8fd:	call   0x100110c0
1000e902:	add    esp,0x4
1000e905:	push   eax
1000e906:	mov    edx,DWORD PTR [ebp+0x8]
1000e909:	push   edx
1000e90a:	lea    ecx,[ebp-0x4c]
1000e90d:	call   0x100078b0
1000e912:	push   eax
1000e913:	call   0x100099f0
1000e918:	add    esp,0x10
1000e91b:	mov    BYTE PTR [ebp-0x4],0x2
1000e91f:	lea    ecx,[ebp-0x70]
1000e922:	call   0x10003b40
1000e927:	mov    BYTE PTR [ebp-0x71],0x0
1000e92b:	mov    BYTE PTR [ebp-0x4],0x1
1000e92f:	lea    ecx,[ebp-0x30]
1000e932:	call   0x1000f7a0
1000e937:	mov    BYTE PTR [ebp-0x4],0x0
1000e93b:	lea    ecx,[ebp-0x4c]
1000e93e:	call   0x10002bb0
1000e943:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e94a:	lea    ecx,[ebp-0x50]
1000e94d:	call   0x1000f830
1000e952:	mov    al,BYTE PTR [ebp-0x71]
1000e955:	mov    ecx,DWORD PTR [ebp-0xc]
1000e958:	mov    DWORD PTR fs:0x0,ecx
1000e95f:	pop    ecx
1000e960:	mov    ecx,DWORD PTR [ebp-0x10]
1000e963:	xor    ecx,ebp
1000e965:	call   0x10015b2b
1000e96a:	mov    esp,ebp
1000e96c:	pop    ebp
1000e96d:	ret    
1000e96e:	int3   
1000e96f:	int3   
1000e970:	push   ebp
1000e971:	mov    ebp,esp
1000e973:	push   0xffffffff
1000e975:	push   0x1002a350
1000e97a:	mov    eax,fs:0x0
1000e980:	push   eax
1000e981:	sub    esp,0x34
1000e984:	mov    eax,ds:0x100951fc
1000e989:	xor    eax,ebp
1000e98b:	push   eax
1000e98c:	lea    eax,[ebp-0xc]
1000e98f:	mov    fs:0x0,eax
1000e995:	lea    ecx,[ebp-0x1c]
1000e998:	call   0x10002d30
1000e99d:	mov    DWORD PTR [ebp-0x4],0x0
1000e9a4:	push   0x104
1000e9a9:	lea    ecx,[ebp-0x1c]
1000e9ac:	call   0x100031b0
1000e9b1:	push   eax
1000e9b2:	push   0x104
1000e9b7:	call   DWORD PTR ds:0x100340c0
1000e9bd:	mov    DWORD PTR [ebp-0x10],eax
1000e9c0:	cmp    DWORD PTR [ebp-0x10],0x0
1000e9c4:	je     0x1000e9cf
1000e9c6:	cmp    DWORD PTR [ebp-0x10],0x104
1000e9cd:	jbe    0x1000e9ea
1000e9cf:	mov    BYTE PTR [ebp-0x29],0x0
1000e9d3:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e9da:	lea    ecx,[ebp-0x1c]
1000e9dd:	call   0x10003b40
1000e9e2:	mov    al,BYTE PTR [ebp-0x29]
1000e9e5:	jmp    0x1000ec09
1000e9ea:	push   0xffffffff
1000e9ec:	lea    ecx,[ebp-0x1c]
1000e9ef:	call   0x100031f0
1000e9f4:	lea    ecx,[ebp-0x20]
1000e9f7:	call   0x10002d30
1000e9fc:	mov    BYTE PTR [ebp-0x4],0x1
1000ea00:	push   0x104
1000ea05:	lea    ecx,[ebp-0x20]
1000ea08:	call   0x100031b0
1000ea0d:	push   eax
1000ea0e:	push   0x0
1000ea10:	push   0x1006cd68
1000ea15:	lea    ecx,[ebp-0x1c]
1000ea18:	call   0x10003330
1000ea1d:	push   eax
1000ea1e:	call   DWORD PTR ds:0x100340bc
1000ea24:	test   eax,eax
1000ea26:	jne    0x1000ea4f
1000ea28:	mov    BYTE PTR [ebp-0x2a],0x0
1000ea2c:	mov    BYTE PTR [ebp-0x4],0x0
1000ea30:	lea    ecx,[ebp-0x20]
1000ea33:	call   0x10003b40
1000ea38:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000ea3f:	lea    ecx,[ebp-0x1c]
1000ea42:	call   0x10003b40
1000ea47:	mov    al,BYTE PTR [ebp-0x2a]
1000ea4a:	jmp    0x1000ec09
1000ea4f:	push   0xffffffff
1000ea51:	lea    ecx,[ebp-0x20]
1000ea54:	call   0x100031f0
1000ea59:	lea    ecx,[ebp-0x20]
1000ea5c:	call   0x10003330
1000ea61:	push   eax
1000ea62:	call   DWORD PTR ds:0x100340b8
1000ea68:	push   0x0
1000ea6a:	lea    ecx,[ebp-0x20]
1000ea6d:	call   0x10003330
1000ea72:	push   eax
1000ea73:	call   DWORD PTR ds:0x100340b4
1000ea79:	push   0x1006cd6c
1000ea7e:	lea    ecx,[ebp-0x30]
1000ea81:	call   0x10002e20
1000ea86:	mov    BYTE PTR [ebp-0x4],0x2
1000ea8a:	mov    eax,DWORD PTR [ebp+0x10]
1000ea8d:	push   eax
1000ea8e:	lea    ecx,[ebp-0x30]
1000ea91:	push   ecx
1000ea92:	lea    edx,[ebp-0x20]
1000ea95:	push   edx
1000ea96:	lea    eax,[ebp-0x34]
1000ea99:	push   eax
1000ea9a:	call   0x1000b770
1000ea9f:	add    esp,0xc
1000eaa2:	mov    DWORD PTR [ebp-0x3c],eax
1000eaa5:	mov    ecx,DWORD PTR [ebp-0x3c]
1000eaa8:	mov    DWORD PTR [ebp-0x40],ecx
1000eaab:	mov    BYTE PTR [ebp-0x4],0x3
1000eaaf:	mov    edx,DWORD PTR [ebp-0x40]
1000eab2:	push   edx
1000eab3:	lea    eax,[ebp-0x18]
1000eab6:	push   eax
1000eab7:	call   0x1000b770
1000eabc:	add    esp,0xc
1000eabf:	mov    BYTE PTR [ebp-0x4],0x5
1000eac3:	lea    ecx,[ebp-0x34]
1000eac6:	call   0x10003b40
1000eacb:	mov    BYTE PTR [ebp-0x4],0x6
1000eacf:	lea    ecx,[ebp-0x30]
1000ead2:	call   0x10003b40
1000ead7:	push   0x0
1000ead9:	push   0x80
1000eade:	push   0x2
1000eae0:	push   0x0
1000eae2:	push   0x0
1000eae4:	push   0x40000000
1000eae9:	lea    ecx,[ebp-0x18]
1000eaec:	call   0x10003330
1000eaf1:	push   eax
1000eaf2:	call   DWORD PTR ds:0x100340b0
1000eaf8:	push   eax
1000eaf9:	lea    ecx,[ebp-0x14]
1000eafc:	call   0x100032c0
1000eb01:	mov    BYTE PTR [ebp-0x4],0x7
1000eb05:	lea    ecx,[ebp-0x14]
1000eb08:	call   0x10003330
1000eb0d:	cmp    eax,0xffffffff
1000eb10:	jne    0x1000eb5a
1000eb12:	call   DWORD PTR ds:0x1003407c
1000eb18:	mov    DWORD PTR [ebp-0x28],eax
1000eb1b:	mov    BYTE PTR [ebp-0x35],0x0
1000eb1f:	mov    BYTE PTR [ebp-0x4],0x6
1000eb23:	lea    ecx,[ebp-0x14]
1000eb26:	call   0x10003290
1000eb2b:	mov    BYTE PTR [ebp-0x4],0x1
1000eb2f:	lea    ecx,[ebp-0x18]
1000eb32:	call   0x10003b40
1000eb37:	mov    BYTE PTR [ebp-0x4],0x0
1000eb3b:	lea    ecx,[ebp-0x20]
1000eb3e:	call   0x10003b40
1000eb43:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000eb4a:	lea    ecx,[ebp-0x1c]
1000eb4d:	call   0x10003b40
1000eb52:	mov    al,BYTE PTR [ebp-0x35]
1000eb55:	jmp    0x1000ec09
1000eb5a:	push   0x0
1000eb5c:	lea    ecx,[ebp-0x24]
1000eb5f:	push   ecx
1000eb60:	mov    edx,DWORD PTR [ebp+0xc]
1000eb63:	push   edx
1000eb64:	mov    eax,DWORD PTR [ebp+0x8]
1000eb67:	push   eax
1000eb68:	lea    ecx,[ebp-0x14]
1000eb6b:	call   0x10003330
1000eb70:	push   eax
1000eb71:	call   DWORD PTR ds:0x100340ac
1000eb77:	test   eax,eax
1000eb79:	jne    0x1000ebb7
1000eb7b:	mov    BYTE PTR [ebp-0x36],0x0
1000eb7f:	mov    BYTE PTR [ebp-0x4],0x6
1000eb83:	lea    ecx,[ebp-0x14]
1000eb86:	call   0x10003290
1000eb8b:	mov    BYTE PTR [ebp-0x4],0x1
1000eb8f:	lea    ecx,[ebp-0x18]
1000eb92:	call   0x10003b40
1000eb97:	mov    BYTE PTR [ebp-0x4],0x0
1000eb9b:	lea    ecx,[ebp-0x20]
1000eb9e:	call   0x10003b40
1000eba3:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000ebaa:	lea    ecx,[ebp-0x1c]
1000ebad:	call   0x10003b40
1000ebb2:	mov    al,BYTE PTR [ebp-0x36]
1000ebb5:	jmp    0x1000ec09
1000ebb7:	lea    ecx,[ebp-0x18]
1000ebba:	push   ecx
1000ebbb:	mov    ecx,DWORD PTR [ebp+0x18]
1000ebbe:	call   0x10002eb0
1000ebc3:	lea    edx,[ebp-0x20]
1000ebc6:	push   edx
1000ebc7:	mov    ecx,DWORD PTR [ebp+0x14]
1000ebca:	call   0x10002eb0
1000ebcf:	mov    BYTE PTR [ebp-0x37],0x1
1000ebd3:	mov    BYTE PTR [ebp-0x4],0x6
1000ebd7:	lea    ecx,[ebp-0x14]
1000ebda:	call   0x10003290
1000ebdf:	mov    BYTE PTR [ebp-0x4],0x1
1000ebe3:	lea    ecx,[ebp-0x18]
1000ebe6:	call   0x10003b40
1000ebeb:	mov    BYTE PTR [ebp-0x4],0x0
1000ebef:	lea    ecx,[ebp-0x20]
1000ebf2:	call   0x10003b40
1000ebf7:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000ebfe:	lea    ecx,[ebp-0x1c]
1000ec01:	call   0x10003b40
1000ec06:	mov    al,BYTE PTR [ebp-0x37]
1000ec09:	mov    ecx,DWORD PTR [ebp-0xc]
1000ec0c:	mov    DWORD PTR fs:0x0,ecx
1000ec13:	pop    ecx
1000ec14:	mov    esp,ebp
1000ec16:	pop    ebp
1000ec17:	ret    
1000ec18:	int3   
1000ec19:	int3   
1000ec1a:	int3   
1000ec1b:	int3   
1000ec1c:	int3   
1000ec1d:	int3   
1000ec1e:	int3   
1000ec1f:	int3   
1000ec20:	push   ebp
1000ec21:	mov    ebp,esp
1000ec23:	push   0xffffffff
1000ec25:	push   0x1002a3b7
1000ec2a:	mov    eax,fs:0x0
1000ec30:	push   eax
1000ec31:	push   ecx
1000ec32:	mov    eax,0x1138
1000ec37:	call   0x10016550
1000ec3c:	mov    eax,ds:0x100951fc
1000ec41:	xor    eax,ebp
1000ec43:	mov    DWORD PTR [ebp-0x20],eax
1000ec46:	push   ebx
1000ec47:	push   esi
1000ec48:	push   edi
1000ec49:	push   eax
1000ec4a:	lea    eax,[ebp-0xc]
1000ec4d:	mov    fs:0x0,eax
1000ec53:	mov    DWORD PTR [ebp-0x10],esp
1000ec56:	mov    DWORD PTR [ebp-0x4],0x0
1000ec5d:	mov    ecx,DWORD PTR [ebp+0x8]
1000ec60:	call   0x1000c0c0
1000ec65:	mov    DWORD PTR [ebp-0x1108],eax
1000ec6b:	mov    eax,DWORD PTR [ebp-0x1108]
1000ec71:	mov    DWORD PTR [ebp-0x48],eax
1000ec74:	lea    ecx,[ebp-0x10cc]
1000ec7a:	push   ecx
1000ec7b:	mov    ecx,DWORD PTR [ebp+0x8]
1000ec7e:	call   0x1000c010
1000ec83:	mov    DWORD PTR [ebp-0x110c],eax
1000ec89:	mov    BYTE PTR [ebp-0x4],0x1
1000ec8d:	cmp    DWORD PTR [ebp-0x48],0x2
1000ec91:	je     0x1000ecb4
1000ec93:	mov    BYTE PTR [ebp-0x10f9],0x1
1000ec9a:	mov    BYTE PTR [ebp-0x4],0x0
1000ec9e:	lea    ecx,[ebp-0x10cc]
1000eca4:	call   0x10002bb0
1000eca9:	mov    al,BYTE PTR [ebp-0x10f9]
1000ecaf:	jmp    0x1000f081
1000ecb4:	lea    ecx,[ebp-0x10cc]
1000ecba:	call   0x10002d20
1000ecbf:	mov    DWORD PTR [ebp-0x1110],eax
1000ecc5:	cmp    DWORD PTR [ebp-0x1110],0x0
1000eccc:	jne    0x1000ecef
1000ecce:	mov    BYTE PTR [ebp-0x10fa],0x1
1000ecd5:	mov    BYTE PTR [ebp-0x4],0x0
1000ecd9:	lea    ecx,[ebp-0x10cc]
1000ecdf:	call   0x10002bb0
1000ece4:	mov    al,BYTE PTR [ebp-0x10fa]
1000ecea:	jmp    0x1000f081
1000ecef:	push   0x1006cd70
1000ecf4:	push   0xc
1000ecf6:	push   0x1006cda8
1000ecfb:	call   0x10003540
1000ed00:	add    esp,0xc
1000ed03:	mov    DWORD PTR [ebp-0x1114],eax
1000ed09:	mov    edx,DWORD PTR [ebp-0x1114]
1000ed0f:	push   edx
1000ed10:	lea    ecx,[ebp-0x10d0]
1000ed16:	call   0x10002d70
1000ed1b:	mov    DWORD PTR [ebp-0x1118],eax
1000ed21:	mov    BYTE PTR [ebp-0x4],0x2
1000ed25:	lea    ecx,[ebp-0x40]
1000ed28:	call   0x10002d30
1000ed2d:	mov    BYTE PTR [ebp-0x4],0x3
1000ed31:	lea    ecx,[ebp-0x18]
1000ed34:	call   0x10002d30
1000ed39:	mov    BYTE PTR [ebp-0x4],0x4
1000ed3d:	lea    ecx,[ebp-0x10cc]
1000ed43:	call   0x10002d20
1000ed48:	mov    DWORD PTR [ebp-0x111c],eax
1000ed4e:	lea    ecx,[ebp-0x10cc]
1000ed54:	call   0x100078b0
1000ed59:	mov    DWORD PTR [ebp-0x1120],eax
1000ed5f:	lea    eax,[ebp-0x18]
1000ed62:	push   eax
1000ed63:	lea    ecx,[ebp-0x40]
1000ed66:	push   ecx
1000ed67:	lea    edx,[ebp-0x10d0]
1000ed6d:	push   edx
1000ed6e:	mov    eax,DWORD PTR [ebp-0x111c]
1000ed74:	push   eax
1000ed75:	mov    ecx,DWORD PTR [ebp-0x1120]
1000ed7b:	push   ecx
1000ed7c:	call   0x1000e970
1000ed81:	add    esp,0x14
1000ed84:	mov    BYTE PTR [ebp-0x1121],al
1000ed8a:	movzx  edx,BYTE PTR [ebp-0x1121]
1000ed91:	test   edx,edx
1000ed93:	jne    0x1000eddd
1000ed95:	mov    BYTE PTR [ebp-0x10fb],0x1
1000ed9c:	mov    BYTE PTR [ebp-0x4],0x3
1000eda0:	lea    ecx,[ebp-0x18]
1000eda3:	call   0x10003b40
1000eda8:	mov    BYTE PTR [ebp-0x4],0x2
1000edac:	lea    ecx,[ebp-0x40]
1000edaf:	call   0x10003b40
1000edb4:	mov    BYTE PTR [ebp-0x4],0x1
1000edb8:	lea    ecx,[ebp-0x10d0]
1000edbe:	call   0x10003b40
1000edc3:	mov    BYTE PTR [ebp-0x4],0x0
1000edc7:	lea    ecx,[ebp-0x10cc]
1000edcd:	call   0x10002bb0
1000edd2:	mov    al,BYTE PTR [ebp-0x10fb]
1000edd8:	jmp    0x1000f081
1000eddd:	call   0x10001000
1000ede2:	mov    DWORD PTR [ebp-0x10ac],eax
1000ede8:	push   0x0
1000edea:	lea    eax,[ebp-0x1100]
1000edf0:	push   eax
1000edf1:	call   0x10001bc0
1000edf6:	add    esp,0x8
1000edf9:	mov    DWORD PTR [ebp-0x1128],eax
1000edff:	mov    ecx,DWORD PTR [ebp-0x1128]
1000ee05:	mov    DWORD PTR [ebp-0x112c],ecx
1000ee0b:	mov    BYTE PTR [ebp-0x4],0x5
1000ee0f:	push   0x1006cdc4
1000ee14:	mov    edx,DWORD PTR [ebp-0x112c]
1000ee1a:	push   edx
1000ee1b:	lea    eax,[ebp-0x44]
1000ee1e:	push   eax
1000ee1f:	call   0x100030b0
1000ee24:	add    esp,0xc
1000ee27:	mov    DWORD PTR [ebp-0x1130],eax
1000ee2d:	mov    BYTE PTR [ebp-0x4],0x7
1000ee31:	lea    ecx,[ebp-0x1100]
1000ee37:	call   0x10003b40
1000ee3c:	lea    ecx,[ebp-0x18]
1000ee3f:	call   0x10003330
1000ee44:	mov    DWORD PTR [ebp-0x4c],eax
1000ee47:	cmp    DWORD PTR [ebp-0x4c],0x0
1000ee4b:	jne    0x1000ee59
1000ee4d:	mov    DWORD PTR [ebp-0x1134],0x0
1000ee57:	jmp    0x1000eec0
1000ee59:	mov    ecx,DWORD PTR [ebp-0x4c]
1000ee5c:	push   ecx
1000ee5d:	call   DWORD PTR ds:0x10034028
1000ee63:	add    eax,0x1
1000ee66:	mov    DWORD PTR [ebp-0x14],eax
1000ee69:	cmp    DWORD PTR [ebp-0x14],0x3fffffff
1000ee70:	jle    0x1000ee7e
1000ee72:	mov    DWORD PTR [ebp-0x1138],0x0
1000ee7c:	jmp    0x1000eeb4
1000ee7e:	mov    eax,DWORD PTR [ebp-0x14]
1000ee81:	shl    eax,1
1000ee83:	call   0x10015b40
1000ee88:	mov    DWORD PTR [ebp-0x113c],esp
1000ee8e:	mov    DWORD PTR [ebp-0x10],esp
1000ee91:	mov    edx,DWORD PTR [ebp-0x10ac]
1000ee97:	push   edx
1000ee98:	mov    eax,DWORD PTR [ebp-0x14]
1000ee9b:	shl    eax,1
1000ee9d:	push   eax
1000ee9e:	mov    ecx,DWORD PTR [ebp-0x4c]
1000eea1:	push   ecx
1000eea2:	mov    edx,DWORD PTR [ebp-0x113c]
1000eea8:	push   edx
1000eea9:	call   0x10001050
1000eeae:	mov    DWORD PTR [ebp-0x1138],eax
1000eeb4:	mov    eax,DWORD PTR [ebp-0x1138]
1000eeba:	mov    DWORD PTR [ebp-0x1134],eax
1000eec0:	mov    ecx,DWORD PTR [ebp-0x1134]
1000eec6:	push   ecx
1000eec7:	lea    ecx,[ebp-0x1104]
1000eecd:	call   0x10002e20
1000eed2:	mov    DWORD PTR [ebp-0x1140],eax
1000eed8:	mov    BYTE PTR [ebp-0x4],0x8
1000eedc:	lea    edx,[ebp-0x44]
1000eedf:	push   edx
1000eee0:	lea    eax,[ebp-0x1104]
1000eee6:	push   eax
1000eee7:	call   0x100020c0
1000eeec:	add    esp,0x8
1000eeef:	mov    BYTE PTR [ebp-0x4],0x7
1000eef3:	lea    ecx,[ebp-0x1104]
1000eef9:	call   0x10003b40
1000eefe:	mov    DWORD PTR [ebp-0x10a8],0x0
1000ef08:	push   0x40
1000ef0a:	push   0x0
1000ef0c:	lea    ecx,[ebp-0x10a4]
1000ef12:	push   ecx
1000ef13:	call   0x10016580
1000ef18:	add    esp,0xc
1000ef1b:	mov    DWORD PTR [ebp-0x60],0x0
1000ef22:	xor    edx,edx
1000ef24:	mov    DWORD PTR [ebp-0x5c],edx
1000ef27:	mov    DWORD PTR [ebp-0x58],edx
1000ef2a:	mov    DWORD PTR [ebp-0x54],edx
1000ef2d:	mov    DWORD PTR [ebp-0x10a8],0x44
1000ef37:	mov    DWORD PTR [ebp-0x50],0x1000
1000ef3e:	lea    eax,[ebp-0x3c]
1000ef41:	push   eax
1000ef42:	call   0x1000bca0
1000ef47:	add    esp,0x4
1000ef4a:	mov    DWORD PTR [ebp-0x1144],eax
1000ef50:	mov    BYTE PTR [ebp-0x4],0x9
1000ef54:	mov    DWORD PTR [ebp-0x1c],0x0
1000ef5b:	mov    DWORD PTR [ebp-0x1c],0x400
1000ef62:	lea    ecx,[ebp-0x3c]
1000ef65:	call   0x100078b0
1000ef6a:	mov    DWORD PTR [ebp-0x1148],eax
1000ef70:	lea    ecx,[ebp-0x60]
1000ef73:	push   ecx
1000ef74:	lea    edx,[ebp-0x10a8]
1000ef7a:	push   edx
1000ef7b:	push   0x0
1000ef7d:	mov    eax,DWORD PTR [ebp-0x1148]
1000ef83:	push   eax
1000ef84:	mov    ecx,DWORD PTR [ebp-0x1c]
1000ef87:	push   ecx
1000ef88:	push   0x1
1000ef8a:	push   0x0
1000ef8c:	push   0x0
1000ef8e:	push   0x0
1000ef90:	lea    ecx,[ebp-0x18]
1000ef93:	call   0x10003330
1000ef98:	push   eax
1000ef99:	call   DWORD PTR ds:0x100340c4
1000ef9f:	test   eax,eax
1000efa1:	je     0x1000efb7
1000efa3:	mov    edx,DWORD PTR [ebp-0x5c]
1000efa6:	push   edx
1000efa7:	call   DWORD PTR ds:0x10034058
1000efad:	mov    eax,DWORD PTR [ebp-0x60]
1000efb0:	push   eax
1000efb1:	call   DWORD PTR ds:0x10034058
1000efb7:	lea    ecx,[ebp-0x18]
1000efba:	call   0x10003330
1000efbf:	push   eax
1000efc0:	call   DWORD PTR ds:0x100340b8
1000efc6:	test   eax,eax
1000efc8:	jne    0x1000efdd
1000efca:	push   0x4
1000efcc:	push   0x0
1000efce:	lea    ecx,[ebp-0x18]
1000efd1:	call   0x10003330
1000efd6:	push   eax
1000efd7:	call   DWORD PTR ds:0x100340a4
1000efdd:	lea    ecx,[ebp-0x40]
1000efe0:	call   0x10003330
1000efe5:	push   eax
1000efe6:	call   DWORD PTR ds:0x100340b8
1000efec:	test   eax,eax
1000efee:	jne    0x1000f003
1000eff0:	push   0x4
1000eff2:	push   0x0
1000eff4:	lea    ecx,[ebp-0x40]
1000eff7:	call   0x10003330
1000effc:	push   eax
1000effd:	call   DWORD PTR ds:0x100340a4
1000f003:	mov    BYTE PTR [ebp-0x4],0x7
1000f007:	lea    ecx,[ebp-0x3c]
1000f00a:	call   0x10002bb0
1000f00f:	mov    BYTE PTR [ebp-0x4],0x4
1000f013:	lea    ecx,[ebp-0x44]
1000f016:	call   0x10003b40
1000f01b:	mov    BYTE PTR [ebp-0x4],0x3
1000f01f:	lea    ecx,[ebp-0x18]
1000f022:	call   0x10003b40
1000f027:	mov    BYTE PTR [ebp-0x4],0x2
1000f02b:	lea    ecx,[ebp-0x40]
1000f02e:	call   0x10003b40
1000f033:	mov    BYTE PTR [ebp-0x4],0x1
1000f037:	lea    ecx,[ebp-0x10d0]
1000f03d:	call   0x10003b40
1000f042:	mov    BYTE PTR [ebp-0x4],0x0
1000f046:	lea    ecx,[ebp-0x10cc]
1000f04c:	call   0x10002bb0
1000f051:	jmp    0x1000f078
1000f053:	lea    ecx,[ebp-0x10f8]
1000f059:	call   0x100078d0
1000f05e:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f065:	mov    eax,0x1000f07f
1000f06a:	ret    
1000f06b:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f072:	mov    eax,0x1000f07f
1000f077:	ret    
1000f078:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f07f:	mov    al,0x1
1000f081:	lea    esp,[ebp-0x1158]
1000f087:	mov    ecx,DWORD PTR [ebp-0xc]
1000f08a:	mov    DWORD PTR fs:0x0,ecx
1000f091:	pop    ecx
1000f092:	pop    edi
1000f093:	pop    esi
1000f094:	pop    ebx
1000f095:	mov    ecx,DWORD PTR [ebp-0x20]
1000f098:	xor    ecx,ebp
1000f09a:	call   0x10015b2b
1000f09f:	mov    esp,ebp
1000f0a1:	pop    ebp
1000f0a2:	ret    
1000f0a3:	int3   
1000f0a4:	int3   
1000f0a5:	int3   
1000f0a6:	int3   
1000f0a7:	int3   
1000f0a8:	int3   
1000f0a9:	int3   
1000f0aa:	int3   
1000f0ab:	int3   
1000f0ac:	int3   
1000f0ad:	int3   
1000f0ae:	int3   
1000f0af:	int3   
1000f0b0:	push   ebp
1000f0b1:	mov    ebp,esp
1000f0b3:	push   0xffffffff
1000f0b5:	push   0x1002a415
1000f0ba:	mov    eax,fs:0x0
1000f0c0:	push   eax
1000f0c1:	sub    esp,0x84
1000f0c7:	mov    eax,ds:0x100951fc
1000f0cc:	xor    eax,ebp
1000f0ce:	mov    DWORD PTR [ebp-0x10],eax
1000f0d1:	push   eax
1000f0d2:	lea    eax,[ebp-0xc]
1000f0d5:	mov    fs:0x0,eax
1000f0db:	lea    eax,[ebp-0x64]
1000f0de:	push   eax
1000f0df:	mov    ecx,DWORD PTR [ebp+0x8]
1000f0e2:	call   0x1000c010
1000f0e7:	mov    DWORD PTR [ebp-0x4],0x0
1000f0ee:	lea    ecx,[ebp-0x48]
1000f0f1:	push   ecx
1000f0f2:	mov    ecx,DWORD PTR [ebp+0x8]
1000f0f5:	call   0x1000c010
1000f0fa:	mov    BYTE PTR [ebp-0x4],0x1
1000f0fe:	mov    ecx,DWORD PTR [ebp+0x8]
1000f101:	call   0x1000c280
1000f106:	push   eax
1000f107:	lea    edx,[ebp-0x2c]
1000f10a:	push   edx
1000f10b:	mov    ecx,DWORD PTR [ebp+0x8]
1000f10e:	call   0x1000c1c0
1000f113:	mov    BYTE PTR [ebp-0x4],0x2
1000f117:	call   0x1000e490
1000f11c:	movzx  eax,al
1000f11f:	test   eax,eax
1000f121:	jne    0x1000f15e
1000f123:	lea    ecx,[ebp-0x64]
1000f126:	call   0x1000f8e0
1000f12b:	movzx  ecx,al
1000f12e:	test   ecx,ecx
1000f130:	je     0x1000f15e
1000f132:	mov    BYTE PTR [ebp-0x4],0x1
1000f136:	lea    ecx,[ebp-0x2c]
1000f139:	call   0x10002bb0
1000f13e:	mov    BYTE PTR [ebp-0x4],0x0
1000f142:	lea    ecx,[ebp-0x48]
1000f145:	call   0x10002bb0
1000f14a:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f151:	lea    ecx,[ebp-0x64]
1000f154:	call   0x10002bb0
1000f159:	jmp    0x1000f2c5
1000f15e:	mov    ecx,0x10096978
1000f163:	call   0x1000a270
1000f168:	test   eax,eax
1000f16a:	jne    0x1000f1b7
1000f16c:	push   0x20
1000f16e:	call   0x10016464
1000f173:	add    esp,0x4
1000f176:	mov    DWORD PTR [ebp-0x6c],eax
1000f179:	mov    BYTE PTR [ebp-0x4],0x3
1000f17d:	cmp    DWORD PTR [ebp-0x6c],0x0
1000f181:	je     0x1000f196
1000f183:	push   0x1
1000f185:	lea    edx,[ebp-0x64]
1000f188:	push   edx
1000f189:	mov    ecx,DWORD PTR [ebp-0x6c]
1000f18c:	call   0x1000f690
1000f191:	mov    DWORD PTR [ebp-0x80],eax
1000f194:	jmp    0x1000f19d
1000f196:	mov    DWORD PTR [ebp-0x80],0x0
1000f19d:	mov    eax,DWORD PTR [ebp-0x80]
1000f1a0:	mov    DWORD PTR [ebp-0x68],eax
1000f1a3:	mov    BYTE PTR [ebp-0x4],0x2
1000f1a7:	mov    ecx,DWORD PTR [ebp-0x68]
1000f1aa:	push   ecx
1000f1ab:	mov    ecx,0x10096978
1000f1b0:	call   0x1000f920
1000f1b5:	jmp    0x1000f1c4
1000f1b7:	push   0x10034a7f
1000f1bc:	lea    ecx,[ebp-0x64]
1000f1bf:	call   0x10002c00
1000f1c4:	mov    ecx,0x1009696c
1000f1c9:	call   0x1000a270
1000f1ce:	test   eax,eax
1000f1d0:	jne    0x1000f226
1000f1d2:	push   0x20
1000f1d4:	call   0x10016464
1000f1d9:	add    esp,0x4
1000f1dc:	mov    DWORD PTR [ebp-0x74],eax
1000f1df:	mov    BYTE PTR [ebp-0x4],0x4
1000f1e3:	cmp    DWORD PTR [ebp-0x74],0x0
1000f1e7:	je     0x1000f1ff
1000f1e9:	push   0x1
1000f1eb:	lea    edx,[ebp-0x48]
1000f1ee:	push   edx
1000f1ef:	mov    ecx,DWORD PTR [ebp-0x74]
1000f1f2:	call   0x1000f690
1000f1f7:	mov    DWORD PTR [ebp-0x84],eax
1000f1fd:	jmp    0x1000f209
1000f1ff:	mov    DWORD PTR [ebp-0x84],0x0
1000f209:	mov    eax,DWORD PTR [ebp-0x84]
1000f20f:	mov    DWORD PTR [ebp-0x70],eax
1000f212:	mov    BYTE PTR [ebp-0x4],0x2
1000f216:	mov    ecx,DWORD PTR [ebp-0x70]
1000f219:	push   ecx
1000f21a:	mov    ecx,0x1009696c
1000f21f:	call   0x1000f920
1000f224:	jmp    0x1000f233
1000f226:	push   0x10034ada
1000f22b:	lea    ecx,[ebp-0x48]
1000f22e:	call   0x10002c00
1000f233:	mov    BYTE PTR ds:0x10096948,0x1
1000f23a:	push   ecx
1000f23b:	mov    edx,esp
1000f23d:	mov    DWORD PTR [ebp-0x78],esp
1000f240:	push   edx
1000f241:	mov    ecx,0x1009696c
1000f246:	call   0x1000f900
1000f24b:	mov    ecx,eax
1000f24d:	call   0x1000f770
1000f252:	mov    DWORD PTR [ebp-0x88],eax
1000f258:	mov    eax,DWORD PTR [ebp-0x88]
1000f25e:	mov    DWORD PTR [ebp-0x8c],eax
1000f264:	mov    BYTE PTR [ebp-0x4],0x5
1000f268:	push   ecx
1000f269:	mov    ecx,esp
1000f26b:	mov    DWORD PTR [ebp-0x7c],esp
1000f26e:	push   ecx
1000f26f:	mov    ecx,0x10096978
1000f274:	call   0x1000f900
1000f279:	mov    ecx,eax
1000f27b:	call   0x1000f770
1000f280:	mov    DWORD PTR [ebp-0x90],eax
1000f286:	lea    edx,[ebp-0x2c]
1000f289:	push   edx
1000f28a:	lea    eax,[ebp-0x48]
1000f28d:	push   eax
1000f28e:	lea    ecx,[ebp-0x64]
1000f291:	push   ecx
1000f292:	mov    BYTE PTR [ebp-0x4],0x2
1000f296:	call   0x1000e5a0
1000f29b:	add    esp,0x14
1000f29e:	mov    BYTE PTR [ebp-0x4],0x1
1000f2a2:	lea    ecx,[ebp-0x2c]
1000f2a5:	call   0x10002bb0
1000f2aa:	mov    BYTE PTR [ebp-0x4],0x0
1000f2ae:	lea    ecx,[ebp-0x48]
1000f2b1:	call   0x10002bb0
1000f2b6:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f2bd:	lea    ecx,[ebp-0x64]
1000f2c0:	call   0x10002bb0
1000f2c5:	mov    ecx,DWORD PTR [ebp-0xc]
1000f2c8:	mov    DWORD PTR fs:0x0,ecx
1000f2cf:	pop    ecx
1000f2d0:	mov    ecx,DWORD PTR [ebp-0x10]
1000f2d3:	xor    ecx,ebp
1000f2d5:	call   0x10015b2b
1000f2da:	mov    esp,ebp
1000f2dc:	pop    ebp
1000f2dd:	ret    
1000f2de:	int3   
1000f2df:	int3   
1000f2e0:	push   ebp
1000f2e1:	mov    ebp,esp
1000f2e3:	push   0xffffffff
1000f2e5:	push   0x1002a445
1000f2ea:	mov    eax,fs:0x0
1000f2f0:	push   eax
1000f2f1:	push   ecx
1000f2f2:	sub    esp,0x5c
1000f2f5:	mov    eax,ds:0x100951fc
1000f2fa:	xor    eax,ebp
1000f2fc:	mov    DWORD PTR [ebp-0x24],eax
1000f2ff:	push   ebx
1000f300:	push   esi
1000f301:	push   edi
1000f302:	push   eax
1000f303:	lea    eax,[ebp-0xc]
1000f306:	mov    fs:0x0,eax
1000f30c:	mov    DWORD PTR [ebp-0x10],esp
1000f30f:	call   0x1000e520
1000f314:	mov    DWORD PTR [ebp-0x4],0x0
1000f31b:	mov    eax,DWORD PTR [ebp+0xc]
1000f31e:	push   eax
1000f31f:	mov    ecx,DWORD PTR [ebp+0x8]
1000f322:	push   ecx
1000f323:	lea    ecx,[ebp-0x20]
1000f326:	call   0x1000bff0
1000f32b:	lea    ecx,[ebp-0x20]
1000f32e:	call   0x1000c0c0
1000f333:	mov    DWORD PTR [ebp-0x6c],eax
1000f336:	mov    edx,DWORD PTR [ebp-0x6c]
1000f339:	mov    DWORD PTR [ebp-0x14],edx
1000f33c:	cmp    DWORD PTR [ebp-0x14],0x0
1000f340:	jne    0x1000f35a
1000f342:	lea    eax,[ebp-0x20]
1000f345:	push   eax
1000f346:	call   0x1000ec20
1000f34b:	add    esp,0x4
1000f34e:	lea    ecx,[ebp-0x20]
1000f351:	push   ecx
1000f352:	call   0x1000f0b0
1000f357:	add    esp,0x4
1000f35a:	jmp    0x1000f3ab
1000f35c:	lea    ecx,[ebp-0x4c]
1000f35f:	call   0x100078d0
1000f364:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f36b:	mov    eax,0x1000f3b2
1000f370:	ret    
1000f371:	push   0x10034adb
1000f376:	lea    ecx,[ebp-0x68]
1000f379:	call   0x10002b70
1000f37e:	mov    BYTE PTR [ebp-0x4],0x2
1000f382:	lea    edx,[ebp-0x68]
1000f385:	push   edx
1000f386:	push   0x0
1000f388:	push   0x4
1000f38a:	call   0x1000c2a0
1000f38f:	add    esp,0xc
1000f392:	mov    BYTE PTR [ebp-0x4],0x1
1000f396:	lea    ecx,[ebp-0x68]
1000f399:	call   0x10002bb0
1000f39e:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f3a5:	mov    eax,0x1000f3b2
1000f3aa:	ret    
1000f3ab:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f3b2:	mov    ecx,DWORD PTR [ebp-0xc]
1000f3b5:	mov    DWORD PTR fs:0x0,ecx
1000f3bc:	pop    ecx
1000f3bd:	pop    edi
1000f3be:	pop    esi
1000f3bf:	pop    ebx
1000f3c0:	mov    ecx,DWORD PTR [ebp-0x24]
1000f3c3:	xor    ecx,ebp
1000f3c5:	call   0x10015b2b
1000f3ca:	mov    esp,ebp
1000f3cc:	pop    ebp
1000f3cd:	ret    
1000f3ce:	int3   
1000f3cf:	int3   
1000f3d0:	push   ebp
1000f3d1:	mov    ebp,esp
1000f3d3:	push   ecx
1000f3d4:	mov    DWORD PTR [ebp-0x4],0x0
1000f3db:	mov    ecx,0x10096978
1000f3e0:	call   0x1000a270
1000f3e5:	test   eax,eax
1000f3e7:	jne    0x1000f3ff
1000f3e9:	mov    ecx,DWORD PTR [ebp+0x8]
1000f3ec:	call   0x10002d30
1000f3f1:	mov    eax,DWORD PTR [ebp-0x4]
1000f3f4:	or     eax,0x1
1000f3f7:	mov    DWORD PTR [ebp-0x4],eax
1000f3fa:	mov    eax,DWORD PTR [ebp+0x8]
1000f3fd:	jmp    0x1000f420
1000f3ff:	mov    ecx,DWORD PTR [ebp+0x8]
1000f402:	push   ecx
1000f403:	mov    ecx,0x10096978
1000f408:	call   0x1000f900
1000f40d:	mov    ecx,eax
1000f40f:	call   0x1000f770
1000f414:	mov    edx,DWORD PTR [ebp-0x4]
1000f417:	or     edx,0x1
1000f41a:	mov    DWORD PTR [ebp-0x4],edx
1000f41d:	mov    eax,DWORD PTR [ebp+0x8]
1000f420:	mov    esp,ebp
1000f422:	pop    ebp
1000f423:	ret    
1000f424:	int3   
1000f425:	int3   
1000f426:	int3   
1000f427:	int3   
1000f428:	int3   
1000f429:	int3   
1000f42a:	int3   
1000f42b:	int3   
1000f42c:	int3   
1000f42d:	int3   
1000f42e:	int3   
1000f42f:	int3   
1000f430:	push   ebp
1000f431:	mov    ebp,esp
1000f433:	sub    esp,0x8
1000f436:	mov    DWORD PTR [ebp-0x8],0x0
1000f43d:	mov    DWORD PTR [ebp-0x4],0x10096978
1000f444:	mov    ecx,DWORD PTR [ebp-0x4]
1000f447:	call   0x1000a270
1000f44c:	test   eax,eax
1000f44e:	jne    0x1000f466
1000f450:	mov    ecx,DWORD PTR [ebp+0x8]
1000f453:	call   0x10002d30
1000f458:	mov    eax,DWORD PTR [ebp-0x8]
1000f45b:	or     eax,0x1
1000f45e:	mov    DWORD PTR [ebp-0x8],eax
1000f461:	mov    eax,DWORD PTR [ebp+0x8]
1000f464:	jmp    0x1000f485
1000f466:	mov    ecx,DWORD PTR [ebp+0x8]
1000f469:	push   ecx
1000f46a:	mov    ecx,DWORD PTR [ebp-0x4]
1000f46d:	call   0x1000f900
1000f472:	mov    ecx,eax
1000f474:	call   0x1000f770
1000f479:	mov    edx,DWORD PTR [ebp-0x8]
1000f47c:	or     edx,0x1
1000f47f:	mov    DWORD PTR [ebp-0x8],edx
1000f482:	mov    eax,DWORD PTR [ebp+0x8]
1000f485:	mov    esp,ebp
1000f487:	pop    ebp
1000f488:	ret    
1000f489:	int3   
1000f48a:	int3   
1000f48b:	int3   
1000f48c:	int3   
1000f48d:	int3   
1000f48e:	int3   
1000f48f:	int3   
1000f490:	push   ebp
1000f491:	mov    ebp,esp
1000f493:	push   0xffffffff
1000f495:	push   0x1002a47a
1000f49a:	mov    eax,fs:0x0
1000f4a0:	push   eax
1000f4a1:	sub    esp,0x18
1000f4a4:	mov    eax,ds:0x100951fc
1000f4a9:	xor    eax,ebp
1000f4ab:	push   eax
1000f4ac:	lea    eax,[ebp-0xc]
1000f4af:	mov    fs:0x0,eax
1000f4b5:	mov    DWORD PTR [ebp-0x1c],0x0
1000f4bc:	mov    ecx,0x10096978
1000f4c1:	call   0x1000a270
1000f4c6:	test   eax,eax
1000f4c8:	jne    0x1000f4e3
1000f4ca:	mov    ecx,DWORD PTR [ebp+0x8]
1000f4cd:	call   0x10002d30
1000f4d2:	mov    eax,DWORD PTR [ebp-0x1c]
1000f4d5:	or     eax,0x1
1000f4d8:	mov    DWORD PTR [ebp-0x1c],eax
1000f4db:	mov    eax,DWORD PTR [ebp+0x8]
1000f4de:	jmp    0x1000f579
1000f4e3:	lea    ecx,[ebp-0x14]
1000f4e6:	push   ecx
1000f4e7:	mov    ecx,0x10096978
1000f4ec:	call   0x1000f900
1000f4f1:	mov    ecx,eax
1000f4f3:	call   0x1000f770
1000f4f8:	mov    DWORD PTR [ebp-0x4],0x0
1000f4ff:	push   0x5c
1000f501:	lea    ecx,[ebp-0x14]
1000f504:	call   0x10002f70
1000f509:	mov    DWORD PTR [ebp-0x10],eax
1000f50c:	cmp    DWORD PTR [ebp-0x10],0xffffffff
1000f510:	je     0x1000f552
1000f512:	lea    ecx,[ebp-0x14]
1000f515:	call   0x100031e0
1000f51a:	sub    eax,DWORD PTR [ebp-0x10]
1000f51d:	sub    eax,0x1
1000f520:	push   eax
1000f521:	lea    edx,[ebp-0x18]
1000f524:	push   edx
1000f525:	lea    ecx,[ebp-0x14]
1000f528:	call   0x10002fa0
1000f52d:	mov    DWORD PTR [ebp-0x20],eax
1000f530:	mov    eax,DWORD PTR [ebp-0x20]
1000f533:	mov    DWORD PTR [ebp-0x24],eax
1000f536:	mov    BYTE PTR [ebp-0x4],0x1
1000f53a:	mov    ecx,DWORD PTR [ebp-0x24]
1000f53d:	push   ecx
1000f53e:	lea    ecx,[ebp-0x14]
1000f541:	call   0x10002eb0
1000f546:	mov    BYTE PTR [ebp-0x4],0x0
1000f54a:	lea    ecx,[ebp-0x18]
1000f54d:	call   0x10003b40
1000f552:	lea    edx,[ebp-0x14]
1000f555:	push   edx
1000f556:	mov    ecx,DWORD PTR [ebp+0x8]
1000f559:	call   0x10002d50
1000f55e:	mov    eax,DWORD PTR [ebp-0x1c]
1000f561:	or     eax,0x1
1000f564:	mov    DWORD PTR [ebp-0x1c],eax
1000f567:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f56e:	lea    ecx,[ebp-0x14]
1000f571:	call   0x10003b40
1000f576:	mov    eax,DWORD PTR [ebp+0x8]
1000f579:	mov    ecx,DWORD PTR [ebp-0xc]
1000f57c:	mov    DWORD PTR fs:0x0,ecx
1000f583:	pop    ecx
1000f584:	mov    esp,ebp
1000f586:	pop    ebp
1000f587:	ret    
1000f588:	int3   
1000f589:	int3   
1000f58a:	int3   
1000f58b:	int3   
1000f58c:	int3   
1000f58d:	int3   
1000f58e:	int3   
1000f58f:	int3   
1000f590:	push   ebp
1000f591:	mov    ebp,esp
1000f593:	push   0xffffffff
1000f595:	push   0x1002a4a5
1000f59a:	mov    eax,fs:0x0
1000f5a0:	push   eax
1000f5a1:	sub    esp,0x1c
1000f5a4:	mov    eax,ds:0x100951fc
1000f5a9:	xor    eax,ebp
1000f5ab:	push   eax
1000f5ac:	lea    eax,[ebp-0xc]
1000f5af:	mov    fs:0x0,eax
1000f5b5:	mov    DWORD PTR [ebp-0x20],0x0
1000f5bc:	mov    DWORD PTR [ebp-0x14],0x10096978
1000f5c3:	mov    ecx,DWORD PTR [ebp-0x14]
1000f5c6:	call   0x1000a270
1000f5cb:	test   eax,eax
1000f5cd:	jne    0x1000f5e8
1000f5cf:	mov    ecx,DWORD PTR [ebp+0x8]
1000f5d2:	call   0x10002d30
1000f5d7:	mov    eax,DWORD PTR [ebp-0x20]
1000f5da:	or     eax,0x1
1000f5dd:	mov    DWORD PTR [ebp-0x20],eax
1000f5e0:	mov    eax,DWORD PTR [ebp+0x8]
1000f5e3:	jmp    0x1000f67c
1000f5e8:	lea    ecx,[ebp-0x18]
1000f5eb:	push   ecx
1000f5ec:	mov    ecx,DWORD PTR [ebp-0x14]
1000f5ef:	call   0x1000f900
1000f5f4:	mov    ecx,eax
1000f5f6:	call   0x1000f770
1000f5fb:	mov    DWORD PTR [ebp-0x4],0x0
1000f602:	push   0x5c
1000f604:	lea    ecx,[ebp-0x18]
1000f607:	call   0x10002f70
1000f60c:	mov    DWORD PTR [ebp-0x10],eax
1000f60f:	cmp    DWORD PTR [ebp-0x10],0xffffffff
1000f613:	je     0x1000f655
1000f615:	lea    ecx,[ebp-0x18]
1000f618:	call   0x100031e0
1000f61d:	sub    eax,DWORD PTR [ebp-0x10]
1000f620:	sub    eax,0x1
1000f623:	push   eax
1000f624:	lea    edx,[ebp-0x1c]
1000f627:	push   edx
1000f628:	lea    ecx,[ebp-0x18]
1000f62b:	call   0x10002fa0
1000f630:	mov    DWORD PTR [ebp-0x24],eax
1000f633:	mov    eax,DWORD PTR [ebp-0x24]
1000f636:	mov    DWORD PTR [ebp-0x28],eax
1000f639:	mov    BYTE PTR [ebp-0x4],0x1
1000f63d:	mov    ecx,DWORD PTR [ebp-0x28]
1000f640:	push   ecx
1000f641:	lea    ecx,[ebp-0x18]
1000f644:	call   0x10002eb0
1000f649:	mov    BYTE PTR [ebp-0x4],0x0
1000f64d:	lea    ecx,[ebp-0x1c]
1000f650:	call   0x10003b40
1000f655:	lea    edx,[ebp-0x18]
1000f658:	push   edx
1000f659:	mov    ecx,DWORD PTR [ebp+0x8]
1000f65c:	call   0x10002d50
1000f661:	mov    eax,DWORD PTR [ebp-0x20]
1000f664:	or     eax,0x1
1000f667:	mov    DWORD PTR [ebp-0x20],eax
1000f66a:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f671:	lea    ecx,[ebp-0x18]
1000f674:	call   0x10003b40
1000f679:	mov    eax,DWORD PTR [ebp+0x8]
1000f67c:	mov    ecx,DWORD PTR [ebp-0xc]
1000f67f:	mov    DWORD PTR fs:0x0,ecx
1000f686:	pop    ecx
1000f687:	mov    esp,ebp
1000f689:	pop    ebp
1000f68a:	ret    
1000f68b:	int3   
1000f68c:	int3   
1000f68d:	int3   
1000f68e:	int3   
1000f68f:	int3   
1000f690:	push   ebp
1000f691:	mov    ebp,esp
1000f693:	push   0xffffffff
1000f695:	push   0x1002a4e3
1000f69a:	mov    eax,fs:0x0
1000f6a0:	push   eax
1000f6a1:	sub    esp,0x1c
1000f6a4:	mov    eax,ds:0x100951fc
1000f6a9:	xor    eax,ebp
1000f6ab:	push   eax
1000f6ac:	lea    eax,[ebp-0xc]
1000f6af:	mov    fs:0x0,eax
1000f6b5:	mov    DWORD PTR [ebp-0x18],ecx
1000f6b8:	mov    ecx,DWORD PTR [ebp-0x18]
1000f6bb:	call   0x10002d30
1000f6c0:	mov    DWORD PTR [ebp-0x4],0x0
1000f6c7:	mov    ecx,DWORD PTR [ebp-0x18]
1000f6ca:	add    ecx,0x4
1000f6cd:	call   0x10002b50
1000f6d2:	mov    BYTE PTR [ebp-0x4],0x1
1000f6d6:	movzx  eax,BYTE PTR [ebp+0xc]
1000f6da:	test   eax,eax
1000f6dc:	je     0x1000f713
1000f6de:	push   0x1
1000f6e0:	lea    ecx,[ebp-0x10]
1000f6e3:	push   ecx
1000f6e4:	call   0x100026d0
1000f6e9:	add    esp,0x8
1000f6ec:	mov    DWORD PTR [ebp-0x1c],eax
1000f6ef:	mov    edx,DWORD PTR [ebp-0x1c]
1000f6f2:	mov    DWORD PTR [ebp-0x20],edx
1000f6f5:	mov    BYTE PTR [ebp-0x4],0x2
1000f6f9:	mov    eax,DWORD PTR [ebp-0x20]
1000f6fc:	push   eax
1000f6fd:	mov    ecx,DWORD PTR [ebp-0x18]
1000f700:	call   0x10002eb0
1000f705:	mov    BYTE PTR [ebp-0x4],0x1
1000f709:	lea    ecx,[ebp-0x10]
1000f70c:	call   0x10003b40
1000f711:	jmp    0x1000f746
1000f713:	push   0x1
1000f715:	lea    ecx,[ebp-0x14]
1000f718:	push   ecx
1000f719:	call   0x10002820
1000f71e:	add    esp,0x8
1000f721:	mov    DWORD PTR [ebp-0x24],eax
1000f724:	mov    edx,DWORD PTR [ebp-0x24]
1000f727:	mov    DWORD PTR [ebp-0x28],edx
1000f72a:	mov    BYTE PTR [ebp-0x4],0x3
1000f72e:	mov    eax,DWORD PTR [ebp-0x28]
1000f731:	push   eax
1000f732:	mov    ecx,DWORD PTR [ebp-0x18]
1000f735:	call   0x10002eb0
1000f73a:	mov    BYTE PTR [ebp-0x4],0x1
1000f73e:	lea    ecx,[ebp-0x14]
1000f741:	call   0x10003b40
1000f746:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f74d:	mov    eax,DWORD PTR [ebp-0x18]
1000f750:	mov    ecx,DWORD PTR [ebp-0xc]
1000f753:	mov    DWORD PTR fs:0x0,ecx
1000f75a:	pop    ecx
1000f75b:	mov    esp,ebp
1000f75d:	pop    ebp
1000f75e:	ret    0x8
1000f761:	int3   
1000f762:	int3   
1000f763:	int3   
1000f764:	int3   
1000f765:	int3   
1000f766:	int3   
1000f767:	int3   
1000f768:	int3   
1000f769:	int3   
1000f76a:	int3   
1000f76b:	int3   
1000f76c:	int3   
1000f76d:	int3   
1000f76e:	int3   
1000f76f:	int3   
1000f770:	push   ebp
1000f771:	mov    ebp,esp
1000f773:	sub    esp,0x8
1000f776:	mov    DWORD PTR [ebp-0x8],ecx
1000f779:	mov    DWORD PTR [ebp-0x4],0x0
1000f780:	mov    eax,DWORD PTR [ebp-0x8]
1000f783:	push   eax
1000f784:	mov    ecx,DWORD PTR [ebp+0x8]
1000f787:	call   0x10002d50
1000f78c:	mov    ecx,DWORD PTR [ebp-0x4]
1000f78f:	or     ecx,0x1
1000f792:	mov    DWORD PTR [ebp-0x4],ecx
1000f795:	mov    eax,DWORD PTR [ebp+0x8]
1000f798:	mov    esp,ebp
1000f79a:	pop    ebp
1000f79b:	ret    0x4
1000f79e:	int3   
1000f79f:	int3   
1000f7a0:	push   ebp
1000f7a1:	mov    ebp,esp
1000f7a3:	push   0xffffffff
1000f7a5:	push   0x1002a508
1000f7aa:	mov    eax,fs:0x0
1000f7b0:	push   eax
1000f7b1:	push   ecx
1000f7b2:	mov    eax,ds:0x100951fc
1000f7b7:	xor    eax,ebp
1000f7b9:	push   eax
1000f7ba:	lea    eax,[ebp-0xc]
1000f7bd:	mov    fs:0x0,eax
1000f7c3:	mov    DWORD PTR [ebp-0x10],ecx
1000f7c6:	mov    DWORD PTR [ebp-0x4],0x0
1000f7cd:	push   0x4
1000f7cf:	push   0x0
1000f7d1:	mov    ecx,DWORD PTR [ebp-0x10]
1000f7d4:	call   0x10003330
1000f7d9:	push   eax
1000f7da:	call   DWORD PTR ds:0x100340a4
1000f7e0:	mov    ecx,DWORD PTR [ebp-0x10]
1000f7e3:	add    ecx,0x4
1000f7e6:	call   0x10002bb0
1000f7eb:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f7f2:	mov    ecx,DWORD PTR [ebp-0x10]
1000f7f5:	call   0x10003b40
1000f7fa:	mov    ecx,DWORD PTR [ebp-0xc]
1000f7fd:	mov    DWORD PTR fs:0x0,ecx
1000f804:	pop    ecx
1000f805:	mov    esp,ebp
1000f807:	pop    ebp
1000f808:	ret    
1000f809:	int3   
1000f80a:	int3   
1000f80b:	int3   
1000f80c:	int3   
1000f80d:	int3   
1000f80e:	int3   
1000f80f:	int3   
1000f810:	push   ebp
1000f811:	mov    ebp,esp
1000f813:	push   ecx
1000f814:	mov    DWORD PTR [ebp-0x4],ecx
1000f817:	mov    eax,DWORD PTR [ebp-0x4]
1000f81a:	mov    DWORD PTR [eax],0x0
1000f820:	mov    eax,DWORD PTR [ebp-0x4]
1000f823:	mov    esp,ebp
1000f825:	pop    ebp
1000f826:	ret    
1000f827:	int3   
1000f828:	int3   
1000f829:	int3   
1000f82a:	int3   
1000f82b:	int3   
1000f82c:	int3   
1000f82d:	int3   
1000f82e:	int3   
1000f82f:	int3   
1000f830:	push   ebp
1000f831:	mov    ebp,esp
1000f833:	push   ecx
1000f834:	mov    DWORD PTR [ebp-0x4],ecx
1000f837:	mov    ecx,DWORD PTR [ebp-0x4]
1000f83a:	call   0x1000f8b0
1000f83f:	mov    esp,ebp
1000f841:	pop    ebp
1000f842:	ret    
1000f843:	int3   
1000f844:	int3   
1000f845:	int3   
1000f846:	int3   
1000f847:	int3   
1000f848:	int3   
1000f849:	int3   
1000f84a:	int3   
1000f84b:	int3   
1000f84c:	int3   
1000f84d:	int3   
1000f84e:	int3   
1000f84f:	int3   
1000f850:	push   ebp
1000f851:	mov    ebp,esp
1000f853:	sub    esp,0x8
1000f856:	mov    DWORD PTR [ebp-0x4],ecx
1000f859:	mov    eax,DWORD PTR [ebp+0xc]
1000f85c:	push   eax
1000f85d:	mov    ecx,DWORD PTR [ebp+0x8]
1000f860:	push   ecx
1000f861:	call   0x10006d10
1000f866:	add    esp,0x8
1000f869:	mov    DWORD PTR [ebp-0x8],eax
1000f86c:	cmp    DWORD PTR [ebp-0x8],0x0
1000f870:	je     0x1000f883
1000f872:	cmp    DWORD PTR [ebp-0x8],0x1
1000f876:	je     0x1000f88f
1000f878:	cmp    DWORD PTR [ebp-0x8],0x102
1000f87f:	je     0x1000f896
1000f881:	jmp    0x1000f89d
1000f883:	mov    edx,DWORD PTR [ebp-0x4]
1000f886:	mov    eax,DWORD PTR [ebp+0x8]
1000f889:	mov    DWORD PTR [edx],eax
1000f88b:	xor    eax,eax
1000f88d:	jmp    0x1000f8a2
1000f88f:	mov    eax,0x1
1000f894:	jmp    0x1000f8a2
1000f896:	mov    eax,0x2
1000f89b:	jmp    0x1000f8a2
1000f89d:	mov    eax,0x3
1000f8a2:	mov    esp,ebp
1000f8a4:	pop    ebp
1000f8a5:	ret    0x8
1000f8a8:	int3   
1000f8a9:	int3   
1000f8aa:	int3   
1000f8ab:	int3   
1000f8ac:	int3   
1000f8ad:	int3   
1000f8ae:	int3   
1000f8af:	int3   
1000f8b0:	push   ebp
1000f8b1:	mov    ebp,esp
1000f8b3:	push   ecx
1000f8b4:	mov    DWORD PTR [ebp-0x4],ecx
1000f8b7:	mov    eax,DWORD PTR [ebp-0x4]
1000f8ba:	cmp    DWORD PTR [eax],0x0
1000f8bd:	je     0x1000f8d4
1000f8bf:	mov    ecx,DWORD PTR [ebp-0x4]
1000f8c2:	mov    edx,DWORD PTR [ecx]
1000f8c4:	push   edx
1000f8c5:	call   DWORD PTR ds:0x100340a8
1000f8cb:	mov    eax,DWORD PTR [ebp-0x4]
1000f8ce:	mov    DWORD PTR [eax],0x0
1000f8d4:	mov    esp,ebp
1000f8d6:	pop    ebp
1000f8d7:	ret    
1000f8d8:	int3   
1000f8d9:	int3   
1000f8da:	int3   
1000f8db:	int3   
1000f8dc:	int3   
1000f8dd:	int3   
1000f8de:	int3   
1000f8df:	int3   
1000f8e0:	push   ebp
1000f8e1:	mov    ebp,esp
1000f8e3:	push   ecx
1000f8e4:	mov    DWORD PTR [ebp-0x4],ecx
1000f8e7:	mov    eax,DWORD PTR [ebp-0x4]
1000f8ea:	xor    ecx,ecx
1000f8ec:	cmp    DWORD PTR [eax+0x14],0x0
1000f8f0:	sete   cl
1000f8f3:	mov    al,cl
1000f8f5:	mov    esp,ebp
1000f8f7:	pop    ebp
1000f8f8:	ret    
1000f8f9:	int3   
1000f8fa:	int3   
1000f8fb:	int3   
1000f8fc:	int3   
1000f8fd:	int3   
1000f8fe:	int3   
1000f8ff:	int3   
1000f900:	push   ebp
1000f901:	mov    ebp,esp
1000f903:	push   ecx
1000f904:	mov    DWORD PTR [ebp-0x4],ecx
1000f907:	mov    ecx,DWORD PTR [ebp-0x4]
1000f90a:	call   0x1000a270
1000f90f:	mov    esp,ebp
1000f911:	pop    ebp
1000f912:	ret    
1000f913:	int3   
1000f914:	int3   
1000f915:	int3   
1000f916:	int3   
1000f917:	int3   
1000f918:	int3   
1000f919:	int3   
1000f91a:	int3   
1000f91b:	int3   
1000f91c:	int3   
1000f91d:	int3   
1000f91e:	int3   
1000f91f:	int3   
1000f920:	push   ebp
1000f921:	mov    ebp,esp
1000f923:	sub    esp,0x10
1000f926:	mov    DWORD PTR [ebp-0xc],ecx
1000f929:	mov    eax,DWORD PTR [ebp-0xc]
1000f92c:	mov    ecx,DWORD PTR [ebp+0x8]
1000f92f:	cmp    ecx,DWORD PTR [eax]
1000f931:	je     0x1000f95d
1000f933:	mov    edx,DWORD PTR [ebp-0xc]
1000f936:	mov    eax,DWORD PTR [edx]
1000f938:	mov    DWORD PTR [ebp-0x8],eax
1000f93b:	mov    ecx,DWORD PTR [ebp-0x8]
1000f93e:	mov    DWORD PTR [ebp-0x4],ecx
1000f941:	cmp    DWORD PTR [ebp-0x4],0x0
1000f945:	je     0x1000f956
1000f947:	push   0x1
1000f949:	mov    ecx,DWORD PTR [ebp-0x4]
1000f94c:	call   0x1000f970
1000f951:	mov    DWORD PTR [ebp-0x10],eax
1000f954:	jmp    0x1000f95d
1000f956:	mov    DWORD PTR [ebp-0x10],0x0
1000f95d:	mov    edx,DWORD PTR [ebp-0xc]
1000f960:	mov    eax,DWORD PTR [ebp+0x8]
1000f963:	mov    DWORD PTR [edx],eax
1000f965:	mov    esp,ebp
1000f967:	pop    ebp
1000f968:	ret    0x4
1000f96b:	int3   
1000f96c:	int3   
1000f96d:	int3   
1000f96e:	int3   
1000f96f:	int3   
1000f970:	push   ebp
1000f971:	mov    ebp,esp
1000f973:	push   ecx
1000f974:	mov    DWORD PTR [ebp-0x4],ecx
1000f977:	mov    ecx,DWORD PTR [ebp-0x4]
1000f97a:	call   0x1000f7a0
1000f97f:	mov    eax,DWORD PTR [ebp+0x8]
1000f982:	and    eax,0x1
1000f985:	je     0x1000f993
1000f987:	mov    ecx,DWORD PTR [ebp-0x4]
1000f98a:	push   ecx
1000f98b:	call   0x10015b26
1000f990:	add    esp,0x4
1000f993:	mov    eax,DWORD PTR [ebp-0x4]
1000f996:	mov    esp,ebp
1000f998:	pop    ebp
1000f999:	ret    0x4
1000f99c:	int3   
1000f99d:	int3   
1000f99e:	int3   
1000f99f:	int3   
1000f9a0:	push   ebp
1000f9a1:	mov    ebp,esp
1000f9a3:	sub    esp,0x10
1000f9a6:	mov    DWORD PTR [ebp-0xc],ecx
1000f9a9:	mov    eax,DWORD PTR [ebp-0xc]
1000f9ac:	mov    ecx,DWORD PTR [eax]
1000f9ae:	mov    DWORD PTR [ebp-0x8],ecx
1000f9b1:	mov    edx,DWORD PTR [ebp-0x8]
1000f9b4:	mov    DWORD PTR [ebp-0x4],edx
1000f9b7:	cmp    DWORD PTR [ebp-0x4],0x0
1000f9bb:	je     0x1000f9cc
1000f9bd:	push   0x1
1000f9bf:	mov    ecx,DWORD PTR [ebp-0x4]
1000f9c2:	call   0x1000f970
1000f9c7:	mov    DWORD PTR [ebp-0x10],eax
1000f9ca:	jmp    0x1000f9d3
1000f9cc:	mov    DWORD PTR [ebp-0x10],0x0
1000f9d3:	mov    esp,ebp
1000f9d5:	pop    ebp
1000f9d6:	ret    
1000f9d7:	int3   
1000f9d8:	int3   
1000f9d9:	int3   
1000f9da:	int3   
1000f9db:	int3   
1000f9dc:	int3   
1000f9dd:	int3   
1000f9de:	int3   
1000f9df:	int3   
1000f9e0:	push   ebp
1000f9e1:	mov    ebp,esp
1000f9e3:	push   0xffffffff
1000f9e5:	push   0x1002a538
1000f9ea:	mov    eax,fs:0x0
1000f9f0:	push   eax
1000f9f1:	push   ecx
1000f9f2:	mov    eax,ds:0x100951fc
1000f9f7:	xor    eax,ebp
1000f9f9:	push   eax
1000f9fa:	lea    eax,[ebp-0xc]
1000f9fd:	mov    fs:0x0,eax
1000fa03:	cmp    DWORD PTR [ebp+0x8],0x40
1000fa07:	jg     0x1000fa0f
1000fa09:	cmp    DWORD PTR [ebp+0x8],0x0
1000fa0d:	jge    0x1000fa11
1000fa0f:	jmp    0x1000fa6b
1000fa11:	lea    ecx,[ebp-0x10]
1000fa14:	call   0x1000f810
1000fa19:	mov    DWORD PTR [ebp-0x4],0x0
1000fa20:	push   0xffffffff
1000fa22:	mov    eax,ds:0x10096aa4
1000fa27:	push   eax
1000fa28:	lea    ecx,[ebp-0x10]
1000fa2b:	call   0x1000f850
1000fa30:	test   eax,eax
1000fa32:	je     0x1000fa45
1000fa34:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000fa3b:	lea    ecx,[ebp-0x10]
1000fa3e:	call   0x1000f830
1000fa43:	jmp    0x1000fa6b
1000fa45:	mov    ecx,DWORD PTR [ebp+0x8]
1000fa48:	mov    edx,DWORD PTR [ecx*4+0x100969a0]
1000fa4f:	add    edx,0x1
1000fa52:	mov    eax,DWORD PTR [ebp+0x8]
1000fa55:	mov    DWORD PTR [eax*4+0x100969a0],edx
1000fa5c:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000fa63:	lea    ecx,[ebp-0x10]
1000fa66:	call   0x1000f830
1000fa6b:	mov    ecx,DWORD PTR [ebp-0xc]
1000fa6e:	mov    DWORD PTR fs:0x0,ecx
1000fa75:	pop    ecx
1000fa76:	mov    esp,ebp
1000fa78:	pop    ebp
1000fa79:	ret    
1000fa7a:	int3   
1000fa7b:	int3   
1000fa7c:	int3   
1000fa7d:	int3   
1000fa7e:	int3   
1000fa7f:	int3   
1000fa80:	push   ebp
1000fa81:	mov    ebp,esp
1000fa83:	push   0xffffffff
1000fa85:	push   0x1002a55b
1000fa8a:	mov    eax,fs:0x0
1000fa90:	push   eax
1000fa91:	sub    esp,0xc
1000fa94:	mov    eax,ds:0x100951fc
1000fa99:	xor    eax,ebp
1000fa9b:	push   eax
1000fa9c:	lea    eax,[ebp-0xc]
1000fa9f:	mov    fs:0x0,eax
1000faa5:	cmp    DWORD PTR [ebp+0x8],0x40
1000faa9:	jg     0x1000fab1
1000faab:	cmp    DWORD PTR [ebp+0x8],0x0
1000faaf:	jge    0x1000fab5
1000fab1:	xor    eax,eax
1000fab3:	jmp    0x1000fb12
1000fab5:	lea    ecx,[ebp-0x10]
1000fab8:	call   0x1000f810
1000fabd:	mov    DWORD PTR [ebp-0x4],0x0
1000fac4:	push   0xffffffff
1000fac6:	mov    eax,ds:0x10096aa4
1000facb:	push   eax
1000facc:	lea    ecx,[ebp-0x10]
1000facf:	call   0x1000f850
1000fad4:	test   eax,eax
1000fad6:	je     0x1000faf3
1000fad8:	mov    DWORD PTR [ebp-0x14],0x0
1000fadf:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000fae6:	lea    ecx,[ebp-0x10]
1000fae9:	call   0x1000f830
1000faee:	mov    eax,DWORD PTR [ebp-0x14]
1000faf1:	jmp    0x1000fb12
1000faf3:	mov    ecx,DWORD PTR [ebp+0x8]
1000faf6:	mov    edx,DWORD PTR [ecx*4+0x100969a0]
1000fafd:	mov    DWORD PTR [ebp-0x18],edx
1000fb00:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000fb07:	lea    ecx,[ebp-0x10]
1000fb0a:	call   0x1000f830
1000fb0f:	mov    eax,DWORD PTR [ebp-0x18]
1000fb12:	mov    ecx,DWORD PTR [ebp-0xc]
1000fb15:	mov    DWORD PTR fs:0x0,ecx
1000fb1c:	pop    ecx
1000fb1d:	mov    esp,ebp
1000fb1f:	pop    ebp
1000fb20:	ret    
1000fb21:	int3   
1000fb22:	int3   
1000fb23:	int3   
1000fb24:	int3   
1000fb25:	int3   
1000fb26:	int3   
1000fb27:	int3   
1000fb28:	int3   
1000fb29:	int3   
1000fb2a:	int3   
1000fb2b:	int3   
1000fb2c:	int3   
1000fb2d:	int3   
1000fb2e:	int3   
1000fb2f:	int3   
1000fb30:	push   ebp
1000fb31:	mov    ebp,esp
1000fb33:	push   ecx
1000fb34:	mov    DWORD PTR [ebp-0x4],ecx
1000fb37:	push   0x100
1000fb3c:	push   0x0
1000fb3e:	push   0x100969a0
1000fb43:	call   0x10016580
1000fb48:	add    esp,0xc
1000fb4b:	mov    eax,DWORD PTR [ebp-0x4]
1000fb4e:	mov    esp,ebp
1000fb50:	pop    ebp
1000fb51:	ret    
1000fb52:	int3   
1000fb53:	int3   
1000fb54:	int3   
1000fb55:	int3   
1000fb56:	int3   
1000fb57:	int3   
1000fb58:	int3   
1000fb59:	int3   
1000fb5a:	int3   
1000fb5b:	int3   
1000fb5c:	int3   
1000fb5d:	int3   
1000fb5e:	int3   
1000fb5f:	int3   
1000fb60:	push   ebp
1000fb61:	mov    ebp,esp
1000fb63:	sub    esp,0x30
1000fb66:	lea    eax,[ebp-0x8]
1000fb69:	push   eax
1000fb6a:	mov    ecx,0x10096aac
1000fb6f:	call   0x1000fd40
1000fb74:	call   0x10001ad0
1000fb79:	mov    DWORD PTR [ebp-0x18],eax
1000fb7c:	mov    DWORD PTR [ebp-0x14],edx
1000fb7f:	mov    ecx,DWORD PTR [ebp-0x18]
1000fb82:	mov    DWORD PTR [ebp-0x10],ecx
1000fb85:	mov    edx,DWORD PTR [ebp-0x14]
1000fb88:	mov    DWORD PTR [ebp-0xc],edx
1000fb8b:	lea    eax,[ebp-0x20]
1000fb8e:	push   eax
1000fb8f:	mov    ecx,0x10096aac
1000fb94:	call   0x1000fd70
1000fb99:	push   eax
1000fb9a:	lea    ecx,[ebp-0x8]
1000fb9d:	call   0x10010840
1000fba2:	movzx  ecx,al
1000fba5:	test   ecx,ecx
1000fba7:	je     0x1000fc05
1000fba9:	lea    ecx,[ebp-0x8]
1000fbac:	call   0x100107c0
1000fbb1:	mov    edx,DWORD PTR [eax+0x8]
1000fbb4:	add    edx,0x23c34600
1000fbba:	mov    eax,DWORD PTR [eax+0xc]
1000fbbd:	adc    eax,0x0
1000fbc0:	mov    DWORD PTR [ebp-0x30],edx
1000fbc3:	mov    DWORD PTR [ebp-0x2c],eax
1000fbc6:	mov    ecx,DWORD PTR [ebp-0x2c]
1000fbc9:	cmp    ecx,DWORD PTR [ebp-0xc]
1000fbcc:	ja     0x1000fbfb
1000fbce:	jb     0x1000fbd8
1000fbd0:	mov    edx,DWORD PTR [ebp-0x30]
1000fbd3:	cmp    edx,DWORD PTR [ebp-0x10]
1000fbd6:	jae    0x1000fbfb
1000fbd8:	mov    eax,DWORD PTR [ebp-0x4]
1000fbdb:	push   eax
1000fbdc:	mov    ecx,DWORD PTR [ebp-0x8]
1000fbdf:	push   ecx
1000fbe0:	lea    edx,[ebp-0x28]
1000fbe3:	push   edx
1000fbe4:	mov    ecx,0x10096aac
1000fbe9:	call   0x1000ff60
1000fbee:	mov    ecx,DWORD PTR [eax]
1000fbf0:	mov    edx,DWORD PTR [eax+0x4]
1000fbf3:	mov    DWORD PTR [ebp-0x8],ecx
1000fbf6:	mov    DWORD PTR [ebp-0x4],edx
1000fbf9:	jmp    0x1000fc03
1000fbfb:	lea    ecx,[ebp-0x8]
1000fbfe:	call   0x100107e0
1000fc03:	jmp    0x1000fb8b
1000fc05:	mov    esp,ebp
1000fc07:	pop    ebp
1000fc08:	ret    
1000fc09:	int3   
1000fc0a:	int3   
1000fc0b:	int3   
1000fc0c:	int3   
1000fc0d:	int3   
1000fc0e:	int3   
1000fc0f:	int3   
1000fc10:	push   ebp
1000fc11:	mov    ebp,esp
1000fc13:	push   0xffffffff
1000fc15:	push   0x1002a588
1000fc1a:	mov    eax,fs:0x0
1000fc20:	push   eax
1000fc21:	sub    esp,0x58
1000fc24:	mov    eax,ds:0x100951fc
1000fc29:	xor    eax,ebp
1000fc2b:	push   eax
1000fc2c:	lea    eax,[ebp-0xc]
1000fc2f:	mov    fs:0x0,eax
1000fc35:	cmp    DWORD PTR [ebp+0xc],0x4
1000fc39:	je     0x1000fc42
1000fc3b:	xor    al,al
1000fc3d:	jmp    0x1000fd2a
1000fc42:	mov    eax,DWORD PTR [ebp+0x8]
1000fc45:	mov    ecx,DWORD PTR [eax]
1000fc47:	mov    DWORD PTR [ebp-0x1c],ecx
1000fc4a:	mov    edx,DWORD PTR [ebp+0x8]
1000fc4d:	mov    DWORD PTR [ebp-0x20],edx
1000fc50:	mov    eax,DWORD PTR [ebp-0x20]
1000fc53:	mov    DWORD PTR [eax],0x0
1000fc59:	lea    ecx,[ebp-0x18]
1000fc5c:	call   0x1000f810
1000fc61:	mov    DWORD PTR [ebp-0x4],0x0
1000fc68:	push   0xffffffff
1000fc6a:	mov    ecx,DWORD PTR ds:0x10096aa8
1000fc70:	push   ecx
1000fc71:	lea    ecx,[ebp-0x18]
1000fc74:	call   0x1000f850
1000fc79:	test   eax,eax
1000fc7b:	je     0x1000fc98
1000fc7d:	mov    BYTE PTR [ebp-0x21],0x0
1000fc81:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000fc88:	lea    ecx,[ebp-0x18]
1000fc8b:	call   0x1000f830
1000fc90:	mov    al,BYTE PTR [ebp-0x21]
1000fc93:	jmp    0x1000fd2a
1000fc98:	call   0x1000fb60
1000fc9d:	lea    edx,[ebp-0x1c]
1000fca0:	push   edx
1000fca1:	lea    eax,[ebp-0x14]
1000fca4:	push   eax
1000fca5:	mov    ecx,0x10096aac
1000fcaa:	call   0x10010730
1000fcaf:	lea    ecx,[ebp-0x2c]
1000fcb2:	push   ecx
1000fcb3:	mov    ecx,0x10096aac
1000fcb8:	call   0x1000fd70
1000fcbd:	push   eax
1000fcbe:	lea    ecx,[ebp-0x14]
1000fcc1:	call   0x10010800
1000fcc6:	movzx  edx,al
1000fcc9:	test   edx,edx
1000fccb:	je     0x1000fcd6
1000fccd:	mov    eax,DWORD PTR [ebp-0x20]
1000fcd0:	mov    DWORD PTR [eax],0x1
1000fcd6:	call   0x10001ad0
1000fcdb:	mov    DWORD PTR [ebp-0x44],eax
1000fcde:	mov    DWORD PTR [ebp-0x40],edx
1000fce1:	mov    ecx,DWORD PTR [ebp-0x40]
1000fce4:	push   ecx
1000fce5:	mov    edx,DWORD PTR [ebp-0x44]
1000fce8:	push   edx
1000fce9:	mov    eax,DWORD PTR [ebp-0x1c]
1000fcec:	push   eax
1000fced:	lea    ecx,[ebp-0x54]
1000fcf0:	push   ecx
1000fcf1:	call   0x100116e0
1000fcf6:	add    esp,0x10
1000fcf9:	push   eax
1000fcfa:	lea    ecx,[ebp-0x3c]
1000fcfd:	call   0x10011700
1000fd02:	lea    edx,[ebp-0x3c]
1000fd05:	push   edx
1000fd06:	lea    eax,[ebp-0x60]
1000fd09:	push   eax
1000fd0a:	mov    ecx,0x10096aac
1000fd0f:	call   0x1000fda0
1000fd14:	mov    BYTE PTR [ebp-0x61],0x1
1000fd18:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000fd1f:	lea    ecx,[ebp-0x18]
1000fd22:	call   0x1000f830
1000fd27:	mov    al,BYTE PTR [ebp-0x61]
1000fd2a:	mov    ecx,DWORD PTR [ebp-0xc]
1000fd2d:	mov    DWORD PTR fs:0x0,ecx
1000fd34:	pop    ecx
1000fd35:	mov    esp,ebp
1000fd37:	pop    ebp
1000fd38:	ret    
1000fd39:	int3   
1000fd3a:	int3   
1000fd3b:	int3   
1000fd3c:	int3   
1000fd3d:	int3   
1000fd3e:	int3   
1000fd3f:	int3   
1000fd40:	push   ebp
1000fd41:	mov    ebp,esp
1000fd43:	push   ecx
1000fd44:	mov    DWORD PTR [ebp-0x4],ecx
1000fd47:	mov    eax,DWORD PTR [ebp-0x4]
1000fd4a:	push   eax
1000fd4b:	mov    ecx,DWORD PTR [ebp-0x4]
1000fd4e:	call   0x10010d80
1000fd53:	mov    ecx,DWORD PTR [eax]
1000fd55:	push   ecx
1000fd56:	mov    ecx,DWORD PTR [ebp+0x8]
1000fd59:	call   0x10011130
1000fd5e:	mov    eax,DWORD PTR [ebp+0x8]
1000fd61:	mov    esp,ebp
1000fd63:	pop    ebp
1000fd64:	ret    0x4
1000fd67:	int3   
1000fd68:	int3   
1000fd69:	int3   
1000fd6a:	int3   
1000fd6b:	int3   
1000fd6c:	int3   
1000fd6d:	int3   
1000fd6e:	int3   
1000fd6f:	int3   
1000fd70:	push   ebp
1000fd71:	mov    ebp,esp
1000fd73:	push   ecx
1000fd74:	mov    DWORD PTR [ebp-0x4],ecx
1000fd77:	mov    eax,DWORD PTR [ebp-0x4]
1000fd7a:	push   eax
1000fd7b:	mov    ecx,DWORD PTR [ebp-0x4]
1000fd7e:	mov    edx,DWORD PTR [ecx+0x4]
1000fd81:	push   edx
1000fd82:	mov    ecx,DWORD PTR [ebp+0x8]
1000fd85:	call   0x10011130
1000fd8a:	mov    eax,DWORD PTR [ebp+0x8]
1000fd8d:	mov    esp,ebp
1000fd8f:	pop    ebp
1000fd90:	ret    0x4
1000fd93:	int3   
1000fd94:	int3   
1000fd95:	int3   
1000fd96:	int3   
1000fd97:	int3   
1000fd98:	int3   
1000fd99:	int3   
1000fd9a:	int3   
1000fd9b:	int3   
1000fd9c:	int3   
1000fd9d:	int3   
1000fd9e:	int3   
1000fd9f:	int3   
1000fda0:	push   ebp
1000fda1:	mov    ebp,esp
1000fda3:	sub    esp,0x4c
1000fda6:	mov    DWORD PTR [ebp-0x48],ecx
1000fda9:	mov    ecx,DWORD PTR [ebp-0x48]
1000fdac:	call   0x10010f70
1000fdb1:	mov    eax,DWORD PTR [eax]
1000fdb3:	mov    DWORD PTR [ebp-0xc],eax
1000fdb6:	mov    ecx,DWORD PTR [ebp-0x48]
1000fdb9:	mov    edx,DWORD PTR [ecx+0x4]
1000fdbc:	mov    DWORD PTR [ebp-0x8],edx
1000fdbf:	mov    BYTE PTR [ebp-0x1],0x1
1000fdc3:	mov    eax,DWORD PTR [ebp-0xc]
1000fdc6:	push   eax
1000fdc7:	call   0x10010880
1000fdcc:	add    esp,0x4
1000fdcf:	movsx  ecx,BYTE PTR [eax]
1000fdd2:	test   ecx,ecx
1000fdd4:	jne    0x1000fe35
1000fdd6:	mov    edx,DWORD PTR [ebp-0xc]
1000fdd9:	mov    DWORD PTR [ebp-0x8],edx
1000fddc:	mov    eax,DWORD PTR [ebp-0xc]
1000fddf:	push   eax
1000fde0:	call   0x10010890
1000fde5:	add    esp,0x4
1000fde8:	push   eax
1000fde9:	mov    ecx,DWORD PTR [ebp+0xc]
1000fdec:	push   ecx
1000fded:	call   0x100110c0
1000fdf2:	add    esp,0x4
1000fdf5:	push   eax
1000fdf6:	mov    ecx,DWORD PTR [ebp-0x48]
1000fdf9:	call   0x100110d0
1000fdfe:	mov    BYTE PTR [ebp-0x1],al
1000fe01:	movzx  edx,BYTE PTR [ebp-0x1]
1000fe05:	test   edx,edx
1000fe07:	je     0x1000fe1c
1000fe09:	mov    eax,DWORD PTR [ebp-0xc]
1000fe0c:	push   eax
1000fe0d:	call   0x100110c0
1000fe12:	add    esp,0x4
1000fe15:	mov    ecx,DWORD PTR [eax]
1000fe17:	mov    DWORD PTR [ebp-0x4c],ecx
1000fe1a:	jmp    0x1000fe2d
1000fe1c:	mov    edx,DWORD PTR [ebp-0xc]
1000fe1f:	push   edx
1000fe20:	call   0x100108c0
1000fe25:	add    esp,0x4
1000fe28:	mov    eax,DWORD PTR [eax]
1000fe2a:	mov    DWORD PTR [ebp-0x4c],eax
1000fe2d:	mov    ecx,DWORD PTR [ebp-0x4c]
1000fe30:	mov    DWORD PTR [ebp-0xc],ecx
1000fe33:	jmp    0x1000fdc3
1000fe35:	xor    edx,edx
1000fe37:	je     0x1000fe6f
1000fe39:	mov    BYTE PTR [ebp-0x15],0x1
1000fe3d:	lea    eax,[ebp-0x15]
1000fe40:	push   eax
1000fe41:	mov    ecx,DWORD PTR [ebp+0xc]
1000fe44:	push   ecx
1000fe45:	mov    edx,DWORD PTR [ebp-0x8]
1000fe48:	push   edx
1000fe49:	mov    al,BYTE PTR [ebp-0x1]
1000fe4c:	push   eax
1000fe4d:	lea    ecx,[ebp-0x20]
1000fe50:	push   ecx
1000fe51:	mov    ecx,DWORD PTR [ebp-0x48]
1000fe54:	call   0x10010900
1000fe59:	push   eax
1000fe5a:	mov    ecx,DWORD PTR [ebp+0x8]
1000fe5d:	call   0x100111f0
1000fe62:	mov    eax,DWORD PTR [ebp+0x8]
1000fe65:	jmp    0x1000ff50
1000fe6a:	jmp    0x1000ff50
1000fe6f:	mov    edx,DWORD PTR [ebp-0x48]
1000fe72:	push   edx
1000fe73:	mov    eax,DWORD PTR [ebp-0x8]
1000fe76:	push   eax
1000fe77:	lea    ecx,[ebp-0x14]
1000fe7a:	call   0x10011130
1000fe7f:	movzx  ecx,BYTE PTR [ebp-0x1]
1000fe83:	test   ecx,ecx
1000fe85:	jne    0x1000fe89
1000fe87:	jmp    0x1000fedb
1000fe89:	lea    edx,[ebp-0x28]
1000fe8c:	push   edx
1000fe8d:	mov    ecx,DWORD PTR [ebp-0x48]
1000fe90:	call   0x1000fd40
1000fe95:	push   eax
1000fe96:	lea    ecx,[ebp-0x14]
1000fe99:	call   0x10010800
1000fe9e:	movzx  eax,al
1000fea1:	test   eax,eax
1000fea3:	je     0x1000fed3
1000fea5:	mov    BYTE PTR [ebp-0x29],0x1
1000fea9:	lea    ecx,[ebp-0x29]
1000feac:	push   ecx
1000fead:	mov    edx,DWORD PTR [ebp+0xc]
1000feb0:	push   edx
1000feb1:	mov    eax,DWORD PTR [ebp-0x8]
1000feb4:	push   eax
1000feb5:	push   0x1
1000feb7:	lea    ecx,[ebp-0x34]
1000feba:	push   ecx
1000febb:	mov    ecx,DWORD PTR [ebp-0x48]
1000febe:	call   0x10010900
1000fec3:	push   eax
1000fec4:	mov    ecx,DWORD PTR [ebp+0x8]
1000fec7:	call   0x100111f0
1000fecc:	mov    eax,DWORD PTR [ebp+0x8]
1000fecf:	jmp    0x1000ff50
1000fed1:	jmp    0x1000fedb
1000fed3:	lea    ecx,[ebp-0x14]
1000fed6:	call   0x10011150
1000fedb:	mov    edx,DWORD PTR [ebp+0xc]
1000fede:	push   edx
1000fedf:	call   0x100110c0
1000fee4:	add    esp,0x4
1000fee7:	push   eax
1000fee8:	lea    ecx,[ebp-0x14]
1000feeb:	call   0x100111d0
1000fef0:	push   eax
1000fef1:	call   0x10010890
1000fef6:	add    esp,0x4
1000fef9:	push   eax
1000fefa:	mov    ecx,DWORD PTR [ebp-0x48]
1000fefd:	call   0x100110d0
1000ff02:	movzx  eax,al
1000ff05:	test   eax,eax
1000ff07:	je     0x1000ff39
1000ff09:	mov    BYTE PTR [ebp-0x35],0x1
1000ff0d:	lea    ecx,[ebp-0x35]
1000ff10:	push   ecx
1000ff11:	mov    edx,DWORD PTR [ebp+0xc]
1000ff14:	push   edx
1000ff15:	mov    eax,DWORD PTR [ebp-0x8]
1000ff18:	push   eax
1000ff19:	mov    cl,BYTE PTR [ebp-0x1]
1000ff1c:	push   ecx
1000ff1d:	lea    edx,[ebp-0x40]
1000ff20:	push   edx
1000ff21:	mov    ecx,DWORD PTR [ebp-0x48]
1000ff24:	call   0x10010900
1000ff29:	push   eax
1000ff2a:	mov    ecx,DWORD PTR [ebp+0x8]
1000ff2d:	call   0x100111f0
1000ff32:	mov    eax,DWORD PTR [ebp+0x8]
1000ff35:	jmp    0x1000ff50
1000ff37:	jmp    0x1000ff50
1000ff39:	mov    BYTE PTR [ebp-0x41],0x0
1000ff3d:	lea    eax,[ebp-0x41]
1000ff40:	push   eax
1000ff41:	lea    ecx,[ebp-0x14]
1000ff44:	push   ecx
1000ff45:	mov    ecx,DWORD PTR [ebp+0x8]
1000ff48:	call   0x100111f0
1000ff4d:	mov    eax,DWORD PTR [ebp+0x8]
1000ff50:	mov    esp,ebp
1000ff52:	pop    ebp
1000ff53:	ret    0x8
1000ff56:	int3   
1000ff57:	int3   
1000ff58:	int3   
1000ff59:	int3   
1000ff5a:	int3   
1000ff5b:	int3   
1000ff5c:	int3   
1000ff5d:	int3   
1000ff5e:	int3   
1000ff5f:	int3   
1000ff60:	push   ebp
1000ff61:	mov    ebp,esp
1000ff63:	push   0xffffffff
1000ff65:	push   0x1002a5b8
1000ff6a:	mov    eax,fs:0x0
1000ff70:	push   eax
1000ff71:	sub    esp,0x60
1000ff74:	push   esi
1000ff75:	mov    eax,ds:0x100951fc
1000ff7a:	xor    eax,ebp
1000ff7c:	push   eax
1000ff7d:	lea    eax,[ebp-0xc]
1000ff80:	mov    fs:0x0,eax
1000ff86:	mov    DWORD PTR [ebp-0x64],ecx
1000ff89:	lea    ecx,[ebp+0xc]
1000ff8c:	call   0x100111d0
1000ff91:	push   eax
1000ff92:	call   0x10010880
1000ff97:	add    esp,0x4
1000ff9a:	movsx  eax,BYTE PTR [eax]
1000ff9d:	test   eax,eax
1000ff9f:	je     0x1000ffde
1000ffa1:	push   0x10082a74
1000ffa6:	lea    ecx,[ebp-0x60]
1000ffa9:	call   0x10002b70
1000ffae:	mov    DWORD PTR [ebp-0x4],0x0
1000ffb5:	lea    ecx,[ebp-0x60]
1000ffb8:	push   ecx
1000ffb9:	lea    ecx,[ebp-0x44]
1000ffbc:	call   0x100014b0
1000ffc1:	push   0x10085cd0
1000ffc6:	lea    edx,[ebp-0x44]
1000ffc9:	push   edx
1000ffca:	call   0x1001621e
1000ffcf:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000ffd6:	lea    ecx,[ebp-0x60]
1000ffd9:	call   0x10002bb0
1000ffde:	lea    ecx,[ebp+0xc]
1000ffe1:	call   0x100111d0
1000ffe6:	mov    DWORD PTR [ebp-0x10],eax
1000ffe9:	lea    ecx,[ebp+0xc]
1000ffec:	call   0x100107e0
1000fff1:	mov    eax,DWORD PTR [ebp-0x10]
1000fff4:	mov    DWORD PTR [ebp-0x18],eax
1000fff7:	mov    ecx,DWORD PTR [ebp-0x18]
1000fffa:	push   ecx
1000fffb:	call   0x100110c0
10010000:	add    esp,0x4
10010003:	mov    edx,DWORD PTR [eax]
10010005:	push   edx
10010006:	call   0x10010880
1001000b:	add    esp,0x4
1001000e:	movsx  eax,BYTE PTR [eax]
10010011:	test   eax,eax
10010013:	je     0x10010028
10010015:	mov    ecx,DWORD PTR [ebp-0x18]
10010018:	push   ecx
10010019:	call   0x100108c0
1001001e:	add    esp,0x4
10010021:	mov    edx,DWORD PTR [eax]
10010023:	mov    DWORD PTR [ebp-0x14],edx
10010026:	jmp    0x10010075
10010028:	mov    eax,DWORD PTR [ebp-0x18]
1001002b:	push   eax
1001002c:	call   0x100108c0
10010031:	add    esp,0x4
10010034:	mov    ecx,DWORD PTR [eax]
10010036:	push   ecx
10010037:	call   0x10010880
1001003c:	add    esp,0x4
1001003f:	movsx  edx,BYTE PTR [eax]
10010042:	test   edx,edx
10010044:	je     0x10010059
10010046:	mov    eax,DWORD PTR [ebp-0x18]
10010049:	push   eax
1001004a:	call   0x100110c0
1001004f:	add    esp,0x4
10010052:	mov    ecx,DWORD PTR [eax]
10010054:	mov    DWORD PTR [ebp-0x14],ecx
10010057:	jmp    0x10010075
10010059:	lea    ecx,[ebp+0xc]
1001005c:	call   0x100111d0
10010061:	mov    DWORD PTR [ebp-0x18],eax
10010064:	mov    edx,DWORD PTR [ebp-0x18]
10010067:	push   edx
10010068:	call   0x100108c0
1001006d:	add    esp,0x4
10010070:	mov    eax,DWORD PTR [eax]
10010072:	mov    DWORD PTR [ebp-0x14],eax
10010075:	mov    ecx,DWORD PTR [ebp-0x18]
10010078:	cmp    ecx,DWORD PTR [ebp-0x10]
1001007b:	jne    0x1001019c
10010081:	mov    edx,DWORD PTR [ebp-0x10]
10010084:	push   edx
10010085:	call   0x100108b0
1001008a:	add    esp,0x4
1001008d:	mov    eax,DWORD PTR [eax]
1001008f:	mov    DWORD PTR [ebp-0x1c],eax
10010092:	mov    ecx,DWORD PTR [ebp-0x14]
10010095:	push   ecx
10010096:	call   0x10010880
1001009b:	add    esp,0x4
1001009e:	movsx  edx,BYTE PTR [eax]
100100a1:	test   edx,edx
100100a3:	jne    0x100100b6
100100a5:	mov    eax,DWORD PTR [ebp-0x14]
100100a8:	push   eax
100100a9:	call   0x100108b0
100100ae:	add    esp,0x4
100100b1:	mov    ecx,DWORD PTR [ebp-0x1c]
100100b4:	mov    DWORD PTR [eax],ecx
100100b6:	mov    ecx,DWORD PTR [ebp-0x64]
100100b9:	call   0x10010f70
100100be:	mov    edx,DWORD PTR [eax]
100100c0:	cmp    edx,DWORD PTR [ebp-0x10]
100100c3:	jne    0x100100d4
100100c5:	mov    ecx,DWORD PTR [ebp-0x64]
100100c8:	call   0x10010f70
100100cd:	mov    ecx,DWORD PTR [ebp-0x14]
100100d0:	mov    DWORD PTR [eax],ecx
100100d2:	jmp    0x1001010b
100100d4:	mov    edx,DWORD PTR [ebp-0x1c]
100100d7:	push   edx
100100d8:	call   0x100110c0
100100dd:	add    esp,0x4
100100e0:	mov    eax,DWORD PTR [eax]
100100e2:	cmp    eax,DWORD PTR [ebp-0x10]
100100e5:	jne    0x100100fa
100100e7:	mov    ecx,DWORD PTR [ebp-0x1c]
100100ea:	push   ecx
100100eb:	call   0x100110c0
100100f0:	add    esp,0x4
100100f3:	mov    edx,DWORD PTR [ebp-0x14]
100100f6:	mov    DWORD PTR [eax],edx
100100f8:	jmp    0x1001010b
100100fa:	mov    eax,DWORD PTR [ebp-0x1c]
100100fd:	push   eax
100100fe:	call   0x100108c0
10010103:	add    esp,0x4
10010106:	mov    ecx,DWORD PTR [ebp-0x14]
10010109:	mov    DWORD PTR [eax],ecx
1001010b:	mov    ecx,DWORD PTR [ebp-0x64]
1001010e:	call   0x10010d80
10010113:	mov    edx,DWORD PTR [eax]
10010115:	cmp    edx,DWORD PTR [ebp-0x10]
10010118:	jne    0x10010151
1001011a:	mov    eax,DWORD PTR [ebp-0x14]
1001011d:	push   eax
1001011e:	call   0x10010880
10010123:	add    esp,0x4
10010126:	movsx  ecx,BYTE PTR [eax]
10010129:	test   ecx,ecx
1001012b:	je     0x10010135
1001012d:	mov    edx,DWORD PTR [ebp-0x1c]
10010130:	mov    DWORD PTR [ebp-0x68],edx
10010133:	jmp    0x10010144
10010135:	mov    eax,DWORD PTR [ebp-0x14]
10010138:	push   eax
10010139:	call   0x10010f10
1001013e:	add    esp,0x4
10010141:	mov    DWORD PTR [ebp-0x68],eax
10010144:	mov    ecx,DWORD PTR [ebp-0x64]
10010147:	call   0x10010d80
1001014c:	mov    ecx,DWORD PTR [ebp-0x68]
1001014f:	mov    DWORD PTR [eax],ecx
10010151:	mov    ecx,DWORD PTR [ebp-0x64]
10010154:	call   0x10010f50
10010159:	mov    edx,DWORD PTR [eax]
1001015b:	cmp    edx,DWORD PTR [ebp-0x10]
1001015e:	jne    0x10010197
10010160:	mov    eax,DWORD PTR [ebp-0x14]
10010163:	push   eax
10010164:	call   0x10010880
10010169:	add    esp,0x4
1001016c:	movsx  ecx,BYTE PTR [eax]
1001016f:	test   ecx,ecx
10010171:	je     0x1001017b
10010173:	mov    edx,DWORD PTR [ebp-0x1c]
10010176:	mov    DWORD PTR [ebp-0x6c],edx
10010179:	jmp    0x1001018a
1001017b:	mov    eax,DWORD PTR [ebp-0x14]
1001017e:	push   eax
1001017f:	call   0x10010ed0
10010184:	add    esp,0x4
10010187:	mov    DWORD PTR [ebp-0x6c],eax
1001018a:	mov    ecx,DWORD PTR [ebp-0x64]
1001018d:	call   0x10010f50
10010192:	mov    ecx,DWORD PTR [ebp-0x6c]
10010195:	mov    DWORD PTR [eax],ecx
10010197:	jmp    0x1001032a
1001019c:	mov    edx,DWORD PTR [ebp-0x10]
1001019f:	push   edx
100101a0:	call   0x100110c0
100101a5:	add    esp,0x4
100101a8:	mov    eax,DWORD PTR [eax]
100101aa:	push   eax
100101ab:	call   0x100108b0
100101b0:	add    esp,0x4
100101b3:	mov    ecx,DWORD PTR [ebp-0x18]
100101b6:	mov    DWORD PTR [eax],ecx
100101b8:	mov    edx,DWORD PTR [ebp-0x10]
100101bb:	push   edx
100101bc:	call   0x100110c0
100101c1:	add    esp,0x4
100101c4:	mov    esi,eax
100101c6:	mov    eax,DWORD PTR [ebp-0x18]
100101c9:	push   eax
100101ca:	call   0x100110c0
100101cf:	add    esp,0x4
100101d2:	mov    ecx,DWORD PTR [esi]
100101d4:	mov    DWORD PTR [eax],ecx
100101d6:	mov    edx,DWORD PTR [ebp-0x10]
100101d9:	push   edx
100101da:	call   0x100108c0
100101df:	add    esp,0x4
100101e2:	mov    ecx,DWORD PTR [ebp-0x18]
100101e5:	cmp    ecx,DWORD PTR [eax]
100101e7:	jne    0x100101f4
100101e9:	mov    edx,DWORD PTR [ebp-0x18]
100101ec:	mov    DWORD PTR [ebp-0x1c],edx
100101ef:	jmp    0x10010274
100101f4:	mov    eax,DWORD PTR [ebp-0x18]
100101f7:	push   eax
100101f8:	call   0x100108b0
100101fd:	add    esp,0x4
10010200:	mov    ecx,DWORD PTR [eax]
10010202:	mov    DWORD PTR [ebp-0x1c],ecx
10010205:	mov    edx,DWORD PTR [ebp-0x14]
10010208:	push   edx
10010209:	call   0x10010880
1001020e:	add    esp,0x4
10010211:	movsx  eax,BYTE PTR [eax]
10010214:	test   eax,eax
10010216:	jne    0x10010229
10010218:	mov    ecx,DWORD PTR [ebp-0x14]
1001021b:	push   ecx
1001021c:	call   0x100108b0
10010221:	add    esp,0x4
10010224:	mov    edx,DWORD PTR [ebp-0x1c]
10010227:	mov    DWORD PTR [eax],edx
10010229:	mov    eax,DWORD PTR [ebp-0x1c]
1001022c:	push   eax
1001022d:	call   0x100110c0
10010232:	add    esp,0x4
10010235:	mov    ecx,DWORD PTR [ebp-0x14]
10010238:	mov    DWORD PTR [eax],ecx
1001023a:	mov    edx,DWORD PTR [ebp-0x10]
1001023d:	push   edx
1001023e:	call   0x100108c0
10010243:	add    esp,0x4
10010246:	mov    esi,eax
10010248:	mov    eax,DWORD PTR [ebp-0x18]
1001024b:	push   eax
1001024c:	call   0x100108c0
10010251:	add    esp,0x4
10010254:	mov    ecx,DWORD PTR [esi]
10010256:	mov    DWORD PTR [eax],ecx
10010258:	mov    edx,DWORD PTR [ebp-0x10]
1001025b:	push   edx
1001025c:	call   0x100108c0
10010261:	add    esp,0x4
10010264:	mov    eax,DWORD PTR [eax]
10010266:	push   eax
10010267:	call   0x100108b0
1001026c:	add    esp,0x4
1001026f:	mov    ecx,DWORD PTR [ebp-0x18]
10010272:	mov    DWORD PTR [eax],ecx
10010274:	mov    ecx,DWORD PTR [ebp-0x64]
10010277:	call   0x10010f70
1001027c:	mov    edx,DWORD PTR [eax]
1001027e:	cmp    edx,DWORD PTR [ebp-0x10]
10010281:	jne    0x10010292
10010283:	mov    ecx,DWORD PTR [ebp-0x64]
10010286:	call   0x10010f70
1001028b:	mov    ecx,DWORD PTR [ebp-0x18]
1001028e:	mov    DWORD PTR [eax],ecx
10010290:	jmp    0x100102ea
10010292:	mov    edx,DWORD PTR [ebp-0x10]
10010295:	push   edx
10010296:	call   0x100108b0
1001029b:	add    esp,0x4
1001029e:	mov    eax,DWORD PTR [eax]
100102a0:	push   eax
100102a1:	call   0x100110c0
100102a6:	add    esp,0x4
100102a9:	mov    ecx,DWORD PTR [eax]
100102ab:	cmp    ecx,DWORD PTR [ebp-0x10]
100102ae:	jne    0x100102ce
100102b0:	mov    edx,DWORD PTR [ebp-0x10]
100102b3:	push   edx
100102b4:	call   0x100108b0
100102b9:	add    esp,0x4
100102bc:	mov    eax,DWORD PTR [eax]
100102be:	push   eax
100102bf:	call   0x100110c0
100102c4:	add    esp,0x4
100102c7:	mov    ecx,DWORD PTR [ebp-0x18]
100102ca:	mov    DWORD PTR [eax],ecx
100102cc:	jmp    0x100102ea
100102ce:	mov    edx,DWORD PTR [ebp-0x10]
100102d1:	push   edx
100102d2:	call   0x100108b0
100102d7:	add    esp,0x4
100102da:	mov    eax,DWORD PTR [eax]
100102dc:	push   eax
100102dd:	call   0x100108c0
100102e2:	add    esp,0x4
100102e5:	mov    ecx,DWORD PTR [ebp-0x18]
100102e8:	mov    DWORD PTR [eax],ecx
100102ea:	mov    edx,DWORD PTR [ebp-0x10]
100102ed:	push   edx
100102ee:	call   0x100108b0
100102f3:	add    esp,0x4
100102f6:	mov    esi,eax
100102f8:	mov    eax,DWORD PTR [ebp-0x18]
100102fb:	push   eax
100102fc:	call   0x100108b0
10010301:	add    esp,0x4
10010304:	mov    ecx,DWORD PTR [esi]
10010306:	mov    DWORD PTR [eax],ecx
10010308:	mov    edx,DWORD PTR [ebp-0x10]
1001030b:	push   edx
1001030c:	call   0x10010870
10010311:	add    esp,0x4
10010314:	push   eax
10010315:	mov    eax,DWORD PTR [ebp-0x18]
10010318:	push   eax
10010319:	call   0x10010870
1001031e:	add    esp,0x4
10010321:	push   eax
10010322:	call   0x10006bb0
10010327:	add    esp,0x8
1001032a:	mov    ecx,DWORD PTR [ebp-0x10]
1001032d:	push   ecx
1001032e:	call   0x10010870
10010333:	add    esp,0x4
10010336:	movsx  edx,BYTE PTR [eax]
10010339:	cmp    edx,0x1
1001033c:	jne    0x100106d1
10010342:	jmp    0x10010355
10010344:	mov    eax,DWORD PTR [ebp-0x14]
10010347:	push   eax
10010348:	call   0x100108b0
1001034d:	add    esp,0x4
10010350:	mov    ecx,DWORD PTR [eax]
10010352:	mov    DWORD PTR [ebp-0x1c],ecx
10010355:	mov    ecx,DWORD PTR [ebp-0x64]
10010358:	call   0x10010f70
1001035d:	mov    edx,DWORD PTR [ebp-0x14]
10010360:	cmp    edx,DWORD PTR [eax]
10010362:	je     0x100106c2
10010368:	mov    eax,DWORD PTR [ebp-0x14]
1001036b:	push   eax
1001036c:	call   0x10010870
10010371:	add    esp,0x4
10010374:	movsx  ecx,BYTE PTR [eax]
10010377:	cmp    ecx,0x1
1001037a:	jne    0x100106c2
10010380:	mov    edx,DWORD PTR [ebp-0x1c]
10010383:	push   edx
10010384:	call   0x100110c0
10010389:	add    esp,0x4
1001038c:	mov    ecx,DWORD PTR [ebp-0x14]
1001038f:	cmp    ecx,DWORD PTR [eax]
10010391:	jne    0x1001052e
10010397:	mov    edx,DWORD PTR [ebp-0x1c]
1001039a:	push   edx
1001039b:	call   0x100108c0
100103a0:	add    esp,0x4
100103a3:	mov    eax,DWORD PTR [eax]
100103a5:	mov    DWORD PTR [ebp-0x18],eax
100103a8:	mov    ecx,DWORD PTR [ebp-0x18]
100103ab:	push   ecx
100103ac:	call   0x10010870
100103b1:	add    esp,0x4
100103b4:	movsx  edx,BYTE PTR [eax]
100103b7:	test   edx,edx
100103b9:	jne    0x100103f6
100103bb:	mov    eax,DWORD PTR [ebp-0x18]
100103be:	push   eax
100103bf:	call   0x10010870
100103c4:	add    esp,0x4
100103c7:	mov    BYTE PTR [eax],0x1
100103ca:	mov    ecx,DWORD PTR [ebp-0x1c]
100103cd:	push   ecx
100103ce:	call   0x10010870
100103d3:	add    esp,0x4
100103d6:	mov    BYTE PTR [eax],0x0
100103d9:	mov    edx,DWORD PTR [ebp-0x1c]
100103dc:	push   edx
100103dd:	mov    ecx,DWORD PTR [ebp-0x64]
100103e0:	call   0x10010da0
100103e5:	mov    eax,DWORD PTR [ebp-0x1c]
100103e8:	push   eax
100103e9:	call   0x100108c0
100103ee:	add    esp,0x4
100103f1:	mov    ecx,DWORD PTR [eax]
100103f3:	mov    DWORD PTR [ebp-0x18],ecx
100103f6:	mov    edx,DWORD PTR [ebp-0x18]
100103f9:	push   edx
100103fa:	call   0x10010880
100103ff:	add    esp,0x4
10010402:	movsx  eax,BYTE PTR [eax]
10010405:	test   eax,eax
10010407:	je     0x10010414
10010409:	mov    ecx,DWORD PTR [ebp-0x1c]
1001040c:	mov    DWORD PTR [ebp-0x14],ecx
1001040f:	jmp    0x10010529
10010414:	mov    edx,DWORD PTR [ebp-0x18]
10010417:	push   edx
10010418:	call   0x100110c0
1001041d:	add    esp,0x4
10010420:	mov    eax,DWORD PTR [eax]
10010422:	push   eax
10010423:	call   0x10010870
10010428:	add    esp,0x4
1001042b:	movsx  ecx,BYTE PTR [eax]
1001042e:	cmp    ecx,0x1
10010431:	jne    0x1001046c
10010433:	mov    edx,DWORD PTR [ebp-0x18]
10010436:	push   edx
10010437:	call   0x100108c0
1001043c:	add    esp,0x4
1001043f:	mov    eax,DWORD PTR [eax]
10010441:	push   eax
10010442:	call   0x10010870
10010447:	add    esp,0x4
1001044a:	movsx  ecx,BYTE PTR [eax]
1001044d:	cmp    ecx,0x1
10010450:	jne    0x1001046c
10010452:	mov    edx,DWORD PTR [ebp-0x18]
10010455:	push   edx
10010456:	call   0x10010870
1001045b:	add    esp,0x4
1001045e:	mov    BYTE PTR [eax],0x0
10010461:	mov    eax,DWORD PTR [ebp-0x1c]
10010464:	mov    DWORD PTR [ebp-0x14],eax
10010467:	jmp    0x10010529
1001046c:	mov    ecx,DWORD PTR [ebp-0x18]
1001046f:	push   ecx
10010470:	call   0x100108c0
10010475:	add    esp,0x4
10010478:	mov    edx,DWORD PTR [eax]
1001047a:	push   edx
1001047b:	call   0x10010870
10010480:	add    esp,0x4
10010483:	movsx  eax,BYTE PTR [eax]
10010486:	cmp    eax,0x1
10010489:	jne    0x100104d1
1001048b:	mov    ecx,DWORD PTR [ebp-0x18]
1001048e:	push   ecx
1001048f:	call   0x100110c0
10010494:	add    esp,0x4
10010497:	mov    edx,DWORD PTR [eax]
10010499:	push   edx
1001049a:	call   0x10010870
1001049f:	add    esp,0x4
100104a2:	mov    BYTE PTR [eax],0x1
100104a5:	mov    eax,DWORD PTR [ebp-0x18]
100104a8:	push   eax
100104a9:	call   0x10010870
100104ae:	add    esp,0x4
100104b1:	mov    BYTE PTR [eax],0x0
100104b4:	mov    ecx,DWORD PTR [ebp-0x18]
100104b7:	push   ecx
100104b8:	mov    ecx,DWORD PTR [ebp-0x64]
100104bb:	call   0x10010f90
100104c0:	mov    edx,DWORD PTR [ebp-0x1c]
100104c3:	push   edx
100104c4:	call   0x100108c0
100104c9:	add    esp,0x4
100104cc:	mov    eax,DWORD PTR [eax]
100104ce:	mov    DWORD PTR [ebp-0x18],eax
100104d1:	mov    ecx,DWORD PTR [ebp-0x1c]
100104d4:	push   ecx
100104d5:	call   0x10010870
100104da:	add    esp,0x4
100104dd:	mov    esi,eax
100104df:	mov    edx,DWORD PTR [ebp-0x18]
100104e2:	push   edx
100104e3:	call   0x10010870
100104e8:	add    esp,0x4
100104eb:	mov    cl,BYTE PTR [esi]
100104ed:	mov    BYTE PTR [eax],cl
100104ef:	mov    edx,DWORD PTR [ebp-0x1c]
100104f2:	push   edx
100104f3:	call   0x10010870
100104f8:	add    esp,0x4
100104fb:	mov    BYTE PTR [eax],0x1
100104fe:	mov    eax,DWORD PTR [ebp-0x18]
10010501:	push   eax
10010502:	call   0x100108c0
10010507:	add    esp,0x4
1001050a:	mov    ecx,DWORD PTR [eax]
1001050c:	push   ecx
1001050d:	call   0x10010870
10010512:	add    esp,0x4
10010515:	mov    BYTE PTR [eax],0x1
10010518:	mov    edx,DWORD PTR [ebp-0x1c]
1001051b:	push   edx
1001051c:	mov    ecx,DWORD PTR [ebp-0x64]
1001051f:	call   0x10010da0
10010524:	jmp    0x100106c2
10010529:	jmp    0x100106bd
1001052e:	mov    eax,DWORD PTR [ebp-0x1c]
10010531:	push   eax
10010532:	call   0x100110c0
10010537:	add    esp,0x4
1001053a:	mov    ecx,DWORD PTR [eax]
1001053c:	mov    DWORD PTR [ebp-0x18],ecx
1001053f:	mov    edx,DWORD PTR [ebp-0x18]
10010542:	push   edx
10010543:	call   0x10010870
10010548:	add    esp,0x4
1001054b:	movsx  eax,BYTE PTR [eax]
1001054e:	test   eax,eax
10010550:	jne    0x1001058d
10010552:	mov    ecx,DWORD PTR [ebp-0x18]
10010555:	push   ecx
10010556:	call   0x10010870
1001055b:	add    esp,0x4
1001055e:	mov    BYTE PTR [eax],0x1
10010561:	mov    edx,DWORD PTR [ebp-0x1c]
10010564:	push   edx
10010565:	call   0x10010870
1001056a:	add    esp,0x4
1001056d:	mov    BYTE PTR [eax],0x0
10010570:	mov    eax,DWORD PTR [ebp-0x1c]
10010573:	push   eax
10010574:	mov    ecx,DWORD PTR [ebp-0x64]
10010577:	call   0x10010f90
1001057c:	mov    ecx,DWORD PTR [ebp-0x1c]
1001057f:	push   ecx
10010580:	call   0x100110c0
10010585:	add    esp,0x4
10010588:	mov    edx,DWORD PTR [eax]
1001058a:	mov    DWORD PTR [ebp-0x18],edx
1001058d:	mov    eax,DWORD PTR [ebp-0x18]
10010590:	push   eax
10010591:	call   0x10010880
10010596:	add    esp,0x4
10010599:	movsx  ecx,BYTE PTR [eax]
1001059c:	test   ecx,ecx
1001059e:	je     0x100105ab
100105a0:	mov    edx,DWORD PTR [ebp-0x1c]
100105a3:	mov    DWORD PTR [ebp-0x14],edx
100105a6:	jmp    0x100106bd
100105ab:	mov    eax,DWORD PTR [ebp-0x18]
100105ae:	push   eax
100105af:	call   0x100108c0
100105b4:	add    esp,0x4
100105b7:	mov    ecx,DWORD PTR [eax]
100105b9:	push   ecx
100105ba:	call   0x10010870
100105bf:	add    esp,0x4
100105c2:	movsx  edx,BYTE PTR [eax]
100105c5:	cmp    edx,0x1
100105c8:	jne    0x10010603
100105ca:	mov    eax,DWORD PTR [ebp-0x18]
100105cd:	push   eax
100105ce:	call   0x100110c0
100105d3:	add    esp,0x4
100105d6:	mov    ecx,DWORD PTR [eax]
100105d8:	push   ecx
100105d9:	call   0x10010870
100105de:	add    esp,0x4
100105e1:	movsx  edx,BYTE PTR [eax]
100105e4:	cmp    edx,0x1
100105e7:	jne    0x10010603
100105e9:	mov    eax,DWORD PTR [ebp-0x18]
100105ec:	push   eax
100105ed:	call   0x10010870
100105f2:	add    esp,0x4
100105f5:	mov    BYTE PTR [eax],0x0
100105f8:	mov    ecx,DWORD PTR [ebp-0x1c]
100105fb:	mov    DWORD PTR [ebp-0x14],ecx
100105fe:	jmp    0x100106bd
10010603:	mov    edx,DWORD PTR [ebp-0x18]
10010606:	push   edx
10010607:	call   0x100110c0
1001060c:	add    esp,0x4
1001060f:	mov    eax,DWORD PTR [eax]
10010611:	push   eax
10010612:	call   0x10010870
10010617:	add    esp,0x4
1001061a:	movsx  ecx,BYTE PTR [eax]
1001061d:	cmp    ecx,0x1
10010620:	jne    0x10010668
10010622:	mov    edx,DWORD PTR [ebp-0x18]
10010625:	push   edx
10010626:	call   0x100108c0
1001062b:	add    esp,0x4
1001062e:	mov    eax,DWORD PTR [eax]
10010630:	push   eax
10010631:	call   0x10010870
10010636:	add    esp,0x4
10010639:	mov    BYTE PTR [eax],0x1
1001063c:	mov    ecx,DWORD PTR [ebp-0x18]
1001063f:	push   ecx
10010640:	call   0x10010870
10010645:	add    esp,0x4
10010648:	mov    BYTE PTR [eax],0x0
1001064b:	mov    edx,DWORD PTR [ebp-0x18]
1001064e:	push   edx
1001064f:	mov    ecx,DWORD PTR [ebp-0x64]
10010652:	call   0x10010da0
10010657:	mov    eax,DWORD PTR [ebp-0x1c]
1001065a:	push   eax
1001065b:	call   0x100110c0
10010660:	add    esp,0x4
10010663:	mov    ecx,DWORD PTR [eax]
10010665:	mov    DWORD PTR [ebp-0x18],ecx
10010668:	mov    edx,DWORD PTR [ebp-0x1c]
1001066b:	push   edx
1001066c:	call   0x10010870
10010671:	add    esp,0x4
10010674:	mov    esi,eax
10010676:	mov    eax,DWORD PTR [ebp-0x18]
10010679:	push   eax
1001067a:	call   0x10010870
1001067f:	add    esp,0x4
10010682:	mov    cl,BYTE PTR [esi]
10010684:	mov    BYTE PTR [eax],cl
10010686:	mov    edx,DWORD PTR [ebp-0x1c]
10010689:	push   edx
1001068a:	call   0x10010870
1001068f:	add    esp,0x4
10010692:	mov    BYTE PTR [eax],0x1
10010695:	mov    eax,DWORD PTR [ebp-0x18]
10010698:	push   eax
10010699:	call   0x100110c0
1001069e:	add    esp,0x4
100106a1:	mov    ecx,DWORD PTR [eax]
100106a3:	push   ecx
100106a4:	call   0x10010870
100106a9:	add    esp,0x4
100106ac:	mov    BYTE PTR [eax],0x1
100106af:	mov    edx,DWORD PTR [ebp-0x1c]
100106b2:	push   edx
100106b3:	mov    ecx,DWORD PTR [ebp-0x64]
100106b6:	call   0x10010f90
100106bb:	jmp    0x100106c2
100106bd:	jmp    0x10010344
100106c2:	mov    eax,DWORD PTR [ebp-0x14]
100106c5:	push   eax
100106c6:	call   0x10010870
100106cb:	add    esp,0x4
100106ce:	mov    BYTE PTR [eax],0x1
100106d1:	mov    ecx,DWORD PTR [ebp-0x10]
100106d4:	push   ecx
100106d5:	mov    ecx,DWORD PTR [ebp-0x64]
100106d8:	add    ecx,0x1
100106db:	call   0x10011110
100106e0:	push   0x1
100106e2:	mov    edx,DWORD PTR [ebp-0x10]
100106e5:	push   edx
100106e6:	mov    ecx,DWORD PTR [ebp-0x64]
100106e9:	add    ecx,0x1
100106ec:	call   0x100110f0
100106f1:	mov    eax,DWORD PTR [ebp-0x64]
100106f4:	cmp    DWORD PTR [eax+0x8],0x0
100106f8:	jbe    0x10010709
100106fa:	mov    ecx,DWORD PTR [ebp-0x64]
100106fd:	mov    edx,DWORD PTR [ecx+0x8]
10010700:	sub    edx,0x1
10010703:	mov    eax,DWORD PTR [ebp-0x64]
10010706:	mov    DWORD PTR [eax+0x8],edx
10010709:	mov    ecx,DWORD PTR [ebp+0x8]
1001070c:	mov    edx,DWORD PTR [ebp+0xc]
1001070f:	mov    DWORD PTR [ecx],edx
10010711:	mov    eax,DWORD PTR [ebp+0x10]
10010714:	mov    DWORD PTR [ecx+0x4],eax
10010717:	mov    eax,DWORD PTR [ebp+0x8]
1001071a:	mov    ecx,DWORD PTR [ebp-0xc]
1001071d:	mov    DWORD PTR fs:0x0,ecx
10010724:	pop    ecx
10010725:	pop    esi
10010726:	mov    esp,ebp
10010728:	pop    ebp
10010729:	ret    0xc
1001072c:	int3   
1001072d:	int3   
1001072e:	int3   
1001072f:	int3   
10010730:	push   ebp
10010731:	mov    ebp,esp
10010733:	sub    esp,0x24
10010736:	mov    DWORD PTR [ebp-0x20],ecx
10010739:	mov    eax,DWORD PTR [ebp+0xc]
1001073c:	push   eax
1001073d:	lea    ecx,[ebp-0x8]
10010740:	push   ecx
10010741:	mov    ecx,DWORD PTR [ebp-0x20]
10010744:	call   0x100108d0
10010749:	lea    edx,[ebp-0x14]
1001074c:	push   edx
1001074d:	mov    ecx,DWORD PTR [ebp-0x20]
10010750:	call   0x1000fd70
10010755:	push   eax
10010756:	lea    ecx,[ebp-0x8]
10010759:	call   0x10010800
1001075e:	movzx  eax,al
10010761:	test   eax,eax
10010763:	jne    0x10010792
10010765:	lea    ecx,[ebp-0x8]
10010768:	call   0x100111d0
1001076d:	push   eax
1001076e:	call   0x10010890
10010773:	add    esp,0x4
10010776:	push   eax
10010777:	mov    ecx,DWORD PTR [ebp+0xc]
1001077a:	push   ecx
1001077b:	mov    ecx,DWORD PTR [ebp-0x20]
1001077e:	call   0x100110d0
10010783:	movzx  edx,al
10010786:	test   edx,edx
10010788:	jne    0x10010792
1001078a:	lea    eax,[ebp-0x8]
1001078d:	mov    DWORD PTR [ebp-0x24],eax
10010790:	jmp    0x100107a1
10010792:	lea    ecx,[ebp-0x1c]
10010795:	push   ecx
10010796:	mov    ecx,DWORD PTR [ebp-0x20]
10010799:	call   0x1000fd70
1001079e:	mov    DWORD PTR [ebp-0x24],eax
100107a1:	mov    edx,DWORD PTR [ebp-0x24]
100107a4:	mov    DWORD PTR [ebp-0xc],edx
100107a7:	mov    eax,DWORD PTR [ebp-0xc]
100107aa:	mov    ecx,DWORD PTR [eax]
100107ac:	mov    edx,DWORD PTR [eax+0x4]
100107af:	mov    eax,DWORD PTR [ebp+0x8]
100107b2:	mov    DWORD PTR [eax],ecx
100107b4:	mov    DWORD PTR [eax+0x4],edx
100107b7:	mov    eax,DWORD PTR [ebp+0x8]
100107ba:	mov    esp,ebp
100107bc:	pop    ebp
100107bd:	ret    0x8
100107c0:	push   ebp
100107c1:	mov    ebp,esp
100107c3:	push   ecx
100107c4:	mov    DWORD PTR [ebp-0x4],ecx
100107c7:	mov    ecx,DWORD PTR [ebp-0x4]
100107ca:	call   0x10011170
100107cf:	mov    esp,ebp
100107d1:	pop    ebp
100107d2:	ret    
100107d3:	int3   
100107d4:	int3   
100107d5:	int3   
100107d6:	int3   
100107d7:	int3   
100107d8:	int3   
100107d9:	int3   
100107da:	int3   
100107db:	int3   
100107dc:	int3   
100107dd:	int3   
100107de:	int3   
100107df:	int3   
100107e0:	push   ebp
100107e1:	mov    ebp,esp
100107e3:	push   ecx
100107e4:	mov    DWORD PTR [ebp-0x4],ecx
100107e7:	mov    ecx,DWORD PTR [ebp-0x4]
100107ea:	call   0x100111b0
100107ef:	mov    eax,DWORD PTR [ebp-0x4]
100107f2:	mov    esp,ebp
100107f4:	pop    ebp
100107f5:	ret    
100107f6:	int3   
100107f7:	int3   
100107f8:	int3   
100107f9:	int3   
100107fa:	int3   
100107fb:	int3   
100107fc:	int3   
100107fd:	int3   
100107fe:	int3   
100107ff:	int3   
10010800:	push   ebp
10010801:	mov    ebp,esp
10010803:	push   ecx
10010804:	mov    DWORD PTR [ebp-0x4],ecx
10010807:	mov    eax,DWORD PTR [ebp-0x4]
1001080a:	cmp    DWORD PTR [eax],0x0
1001080d:	je     0x1001081b
1001080f:	mov    ecx,DWORD PTR [ebp-0x4]
10010812:	mov    edx,DWORD PTR [ebp+0x8]
10010815:	mov    eax,DWORD PTR [ecx]
10010817:	cmp    eax,DWORD PTR [edx]
10010819:	je     0x10010820
1001081b:	call   0x10016193
10010820:	mov    ecx,DWORD PTR [ebp-0x4]
10010823:	mov    edx,DWORD PTR [ebp+0x8]
10010826:	mov    eax,DWORD PTR [ecx+0x4]
10010829:	xor    ecx,ecx
1001082b:	cmp    eax,DWORD PTR [edx+0x4]
1001082e:	sete   cl
10010831:	mov    al,cl
10010833:	mov    esp,ebp
10010835:	pop    ebp
10010836:	ret    0x4
10010839:	int3   
1001083a:	int3   
1001083b:	int3   
1001083c:	int3   
1001083d:	int3   
1001083e:	int3   
1001083f:	int3   
10010840:	push   ebp
10010841:	mov    ebp,esp
10010843:	push   ecx
10010844:	mov    DWORD PTR [ebp-0x4],ecx
10010847:	mov    eax,DWORD PTR [ebp+0x8]
1001084a:	push   eax
1001084b:	mov    ecx,DWORD PTR [ebp-0x4]
1001084e:	call   0x10010800
10010853:	movzx  eax,al
10010856:	neg    eax
10010858:	sbb    eax,eax
1001085a:	add    eax,0x1
1001085d:	mov    esp,ebp
1001085f:	pop    ebp
10010860:	ret    0x4
10010863:	int3   
10010864:	int3   
10010865:	int3   
10010866:	int3   
10010867:	int3   
10010868:	int3   
10010869:	int3   
1001086a:	int3   
1001086b:	int3   
1001086c:	int3   
1001086d:	int3   
1001086e:	int3   
1001086f:	int3   
10010870:	push   ebp
10010871:	mov    ebp,esp
10010873:	mov    eax,DWORD PTR [ebp+0x8]
10010876:	add    eax,0x20
10010879:	pop    ebp
1001087a:	ret    
1001087b:	int3   
1001087c:	int3   
1001087d:	int3   
1001087e:	int3   
1001087f:	int3   
10010880:	push   ebp
10010881:	mov    ebp,esp
10010883:	mov    eax,DWORD PTR [ebp+0x8]
10010886:	add    eax,0x21
10010889:	pop    ebp
1001088a:	ret    
1001088b:	int3   
1001088c:	int3   
1001088d:	int3   
1001088e:	int3   
1001088f:	int3   
10010890:	push   ebp
10010891:	mov    ebp,esp
10010893:	mov    eax,DWORD PTR [ebp+0x8]
10010896:	push   eax
10010897:	call   0x10011220
1001089c:	add    esp,0x4
1001089f:	push   eax
100108a0:	call   0x100110c0
100108a5:	add    esp,0x4
100108a8:	pop    ebp
100108a9:	ret    
100108aa:	int3   
100108ab:	int3   
100108ac:	int3   
100108ad:	int3   
100108ae:	int3   
100108af:	int3   
100108b0:	push   ebp
100108b1:	mov    ebp,esp
100108b3:	mov    eax,DWORD PTR [ebp+0x8]
100108b6:	add    eax,0x4
100108b9:	pop    ebp
100108ba:	ret    
100108bb:	int3   
100108bc:	int3   
100108bd:	int3   
100108be:	int3   
100108bf:	int3   
100108c0:	push   ebp
100108c1:	mov    ebp,esp
100108c3:	mov    eax,DWORD PTR [ebp+0x8]
100108c6:	add    eax,0x8
100108c9:	pop    ebp
100108ca:	ret    
100108cb:	int3   
100108cc:	int3   
100108cd:	int3   
100108ce:	int3   
100108cf:	int3   
100108d0:	push   ebp
100108d1:	mov    ebp,esp
100108d3:	push   ecx
100108d4:	mov    DWORD PTR [ebp-0x4],ecx
100108d7:	mov    eax,DWORD PTR [ebp-0x4]
100108da:	push   eax
100108db:	mov    ecx,DWORD PTR [ebp+0xc]
100108de:	push   ecx
100108df:	mov    ecx,DWORD PTR [ebp-0x4]
100108e2:	call   0x10011250
100108e7:	push   eax
100108e8:	mov    ecx,DWORD PTR [ebp+0x8]
100108eb:	call   0x10011130
100108f0:	mov    eax,DWORD PTR [ebp+0x8]
100108f3:	mov    esp,ebp
100108f5:	pop    ebp
100108f6:	ret    0x8
100108f9:	int3   
100108fa:	int3   
100108fb:	int3   
100108fc:	int3   
100108fd:	int3   
100108fe:	int3   
100108ff:	int3   
10010900:	push   ebp
10010901:	mov    ebp,esp
10010903:	push   0xffffffff
10010905:	push   0x1002a5e8
1001090a:	mov    eax,fs:0x0
10010910:	push   eax
10010911:	sub    esp,0x50
10010914:	push   esi
10010915:	mov    eax,ds:0x100951fc
1001091a:	xor    eax,ebp
1001091c:	push   eax
1001091d:	lea    eax,[ebp-0xc]
10010920:	mov    fs:0x0,eax
10010926:	mov    DWORD PTR [ebp-0x5c],ecx
10010929:	mov    ecx,DWORD PTR [ebp-0x5c]
1001092c:	call   0x10011230
10010931:	sub    eax,0x1
10010934:	mov    ecx,DWORD PTR [ebp-0x5c]
10010937:	cmp    eax,DWORD PTR [ecx+0x8]
1001093a:	ja     0x10010979
1001093c:	push   0x10082a60
10010941:	lea    ecx,[ebp-0x58]
10010944:	call   0x10002b70
10010949:	mov    DWORD PTR [ebp-0x4],0x0
10010950:	lea    edx,[ebp-0x58]
10010953:	push   edx
10010954:	lea    ecx,[ebp-0x3c]
10010957:	call   0x10001400
1001095c:	push   0x10085d0c
10010961:	lea    eax,[ebp-0x3c]
10010964:	push   eax
10010965:	call   0x1001621e
1001096a:	mov    DWORD PTR [ebp-0x4],0xffffffff
10010971:	lea    ecx,[ebp-0x58]
10010974:	call   0x10002bb0
10010979:	push   0x0
1001097b:	mov    ecx,DWORD PTR [ebp+0x14]
1001097e:	push   ecx
1001097f:	mov    edx,DWORD PTR [ebp-0x5c]
10010982:	mov    eax,DWORD PTR [edx+0x4]
10010985:	push   eax
10010986:	mov    ecx,DWORD PTR [ebp+0x10]
10010989:	push   ecx
1001098a:	mov    edx,DWORD PTR [ebp-0x5c]
1001098d:	mov    eax,DWORD PTR [edx+0x4]
10010990:	push   eax
10010991:	mov    ecx,DWORD PTR [ebp-0x5c]
10010994:	call   0x100112e0
10010999:	mov    DWORD PTR [ebp-0x10],eax
1001099c:	mov    ecx,DWORD PTR [ebp-0x5c]
1001099f:	mov    edx,DWORD PTR [ecx+0x8]
100109a2:	add    edx,0x1
100109a5:	mov    eax,DWORD PTR [ebp-0x5c]
100109a8:	mov    DWORD PTR [eax+0x8],edx
100109ab:	mov    ecx,DWORD PTR [ebp-0x5c]
100109ae:	mov    edx,DWORD PTR [ebp+0x10]
100109b1:	cmp    edx,DWORD PTR [ecx+0x4]
100109b4:	jne    0x100109df
100109b6:	mov    ecx,DWORD PTR [ebp-0x5c]
100109b9:	call   0x10010f70
100109be:	mov    ecx,DWORD PTR [ebp-0x10]
100109c1:	mov    DWORD PTR [eax],ecx
100109c3:	mov    ecx,DWORD PTR [ebp-0x5c]
100109c6:	call   0x10010d80
100109cb:	mov    edx,DWORD PTR [ebp-0x10]
100109ce:	mov    DWORD PTR [eax],edx
100109d0:	mov    ecx,DWORD PTR [ebp-0x5c]
100109d3:	call   0x10010f50
100109d8:	mov    ecx,DWORD PTR [ebp-0x10]
100109db:	mov    DWORD PTR [eax],ecx
100109dd:	jmp    0x10010a43
100109df:	movzx  edx,BYTE PTR [ebp+0xc]
100109e3:	test   edx,edx
100109e5:	je     0x10010a16
100109e7:	mov    eax,DWORD PTR [ebp+0x10]
100109ea:	push   eax
100109eb:	call   0x100110c0
100109f0:	add    esp,0x4
100109f3:	mov    ecx,DWORD PTR [ebp-0x10]
100109f6:	mov    DWORD PTR [eax],ecx
100109f8:	mov    ecx,DWORD PTR [ebp-0x5c]
100109fb:	call   0x10010d80
10010a00:	mov    edx,DWORD PTR [ebp+0x10]
10010a03:	cmp    edx,DWORD PTR [eax]
10010a05:	jne    0x10010a14
10010a07:	mov    ecx,DWORD PTR [ebp-0x5c]
10010a0a:	call   0x10010d80
10010a0f:	mov    ecx,DWORD PTR [ebp-0x10]
10010a12:	mov    DWORD PTR [eax],ecx
10010a14:	jmp    0x10010a43
10010a16:	mov    edx,DWORD PTR [ebp+0x10]
10010a19:	push   edx
10010a1a:	call   0x100108c0
10010a1f:	add    esp,0x4
10010a22:	mov    ecx,DWORD PTR [ebp-0x10]
10010a25:	mov    DWORD PTR [eax],ecx
10010a27:	mov    ecx,DWORD PTR [ebp-0x5c]
10010a2a:	call   0x10010f50
10010a2f:	mov    edx,DWORD PTR [ebp+0x10]
10010a32:	cmp    edx,DWORD PTR [eax]
10010a34:	jne    0x10010a43
10010a36:	mov    ecx,DWORD PTR [ebp-0x5c]
10010a39:	call   0x10010f50
10010a3e:	mov    ecx,DWORD PTR [ebp-0x10]
10010a41:	mov    DWORD PTR [eax],ecx
10010a43:	mov    edx,DWORD PTR [ebp-0x10]
10010a46:	mov    DWORD PTR [ebp-0x14],edx
10010a49:	mov    eax,DWORD PTR [ebp-0x14]
10010a4c:	push   eax
10010a4d:	call   0x100108b0
10010a52:	add    esp,0x4
10010a55:	mov    ecx,DWORD PTR [eax]
10010a57:	push   ecx
10010a58:	call   0x10010870
10010a5d:	add    esp,0x4
10010a60:	movsx  edx,BYTE PTR [eax]
10010a63:	test   edx,edx
10010a65:	jne    0x10010d39
10010a6b:	mov    eax,DWORD PTR [ebp-0x14]
10010a6e:	push   eax
10010a6f:	call   0x100108b0
10010a74:	add    esp,0x4
10010a77:	mov    esi,eax
10010a79:	mov    ecx,DWORD PTR [ebp-0x14]
10010a7c:	push   ecx
10010a7d:	call   0x100108b0
10010a82:	add    esp,0x4
10010a85:	mov    edx,DWORD PTR [eax]
10010a87:	push   edx
10010a88:	call   0x100108b0
10010a8d:	add    esp,0x4
10010a90:	mov    eax,DWORD PTR [eax]
10010a92:	push   eax
10010a93:	call   0x100110c0
10010a98:	add    esp,0x4
10010a9b:	mov    ecx,DWORD PTR [esi]
10010a9d:	cmp    ecx,DWORD PTR [eax]
10010a9f:	jne    0x10010bef
10010aa5:	mov    edx,DWORD PTR [ebp-0x14]
10010aa8:	push   edx
10010aa9:	call   0x100108b0
10010aae:	add    esp,0x4
10010ab1:	mov    eax,DWORD PTR [eax]
10010ab3:	push   eax
10010ab4:	call   0x100108b0
10010ab9:	add    esp,0x4
10010abc:	mov    ecx,DWORD PTR [eax]
10010abe:	push   ecx
10010abf:	call   0x100108c0
10010ac4:	add    esp,0x4
10010ac7:	mov    edx,DWORD PTR [eax]
10010ac9:	mov    DWORD PTR [ebp+0x10],edx
10010acc:	mov    eax,DWORD PTR [ebp+0x10]
10010acf:	push   eax
10010ad0:	call   0x10010870
10010ad5:	add    esp,0x4
10010ad8:	movsx  ecx,BYTE PTR [eax]
10010adb:	test   ecx,ecx
10010add:	jne    0x10010b4e
10010adf:	mov    edx,DWORD PTR [ebp-0x14]
10010ae2:	push   edx
10010ae3:	call   0x100108b0
10010ae8:	add    esp,0x4
10010aeb:	mov    eax,DWORD PTR [eax]
10010aed:	push   eax
10010aee:	call   0x10010870
10010af3:	add    esp,0x4
10010af6:	mov    BYTE PTR [eax],0x1
10010af9:	mov    ecx,DWORD PTR [ebp+0x10]
10010afc:	push   ecx
10010afd:	call   0x10010870
10010b02:	add    esp,0x4
10010b05:	mov    BYTE PTR [eax],0x1
10010b08:	mov    edx,DWORD PTR [ebp-0x14]
10010b0b:	push   edx
10010b0c:	call   0x100108b0
10010b11:	add    esp,0x4
10010b14:	mov    eax,DWORD PTR [eax]
10010b16:	push   eax
10010b17:	call   0x100108b0
10010b1c:	add    esp,0x4
10010b1f:	mov    ecx,DWORD PTR [eax]
10010b21:	push   ecx
10010b22:	call   0x10010870
10010b27:	add    esp,0x4
10010b2a:	mov    BYTE PTR [eax],0x0
10010b2d:	mov    edx,DWORD PTR [ebp-0x14]
10010b30:	push   edx
10010b31:	call   0x100108b0
10010b36:	add    esp,0x4
10010b39:	mov    eax,DWORD PTR [eax]
10010b3b:	push   eax
10010b3c:	call   0x100108b0
10010b41:	add    esp,0x4
10010b44:	mov    ecx,DWORD PTR [eax]
10010b46:	mov    DWORD PTR [ebp-0x14],ecx
10010b49:	jmp    0x10010bea
10010b4e:	mov    edx,DWORD PTR [ebp-0x14]
10010b51:	push   edx
10010b52:	call   0x100108b0
10010b57:	add    esp,0x4
10010b5a:	mov    eax,DWORD PTR [eax]
10010b5c:	push   eax
10010b5d:	call   0x100108c0
10010b62:	add    esp,0x4
10010b65:	mov    ecx,DWORD PTR [ebp-0x14]
10010b68:	cmp    ecx,DWORD PTR [eax]
10010b6a:	jne    0x10010b89
10010b6c:	mov    edx,DWORD PTR [ebp-0x14]
10010b6f:	push   edx
10010b70:	call   0x100108b0
10010b75:	add    esp,0x4
10010b78:	mov    eax,DWORD PTR [eax]
10010b7a:	mov    DWORD PTR [ebp-0x14],eax
10010b7d:	mov    ecx,DWORD PTR [ebp-0x14]
10010b80:	push   ecx
10010b81:	mov    ecx,DWORD PTR [ebp-0x5c]
10010b84:	call   0x10010da0
10010b89:	mov    edx,DWORD PTR [ebp-0x14]
10010b8c:	push   edx
10010b8d:	call   0x100108b0
10010b92:	add    esp,0x4
10010b95:	mov    eax,DWORD PTR [eax]
10010b97:	push   eax
10010b98:	call   0x10010870
10010b9d:	add    esp,0x4
10010ba0:	mov    BYTE PTR [eax],0x1
10010ba3:	mov    ecx,DWORD PTR [ebp-0x14]
10010ba6:	push   ecx
10010ba7:	call   0x100108b0
10010bac:	add    esp,0x4
10010baf:	mov    edx,DWORD PTR [eax]
10010bb1:	push   edx
10010bb2:	call   0x100108b0
10010bb7:	add    esp,0x4
10010bba:	mov    eax,DWORD PTR [eax]
10010bbc:	push   eax
10010bbd:	call   0x10010870
10010bc2:	add    esp,0x4
10010bc5:	mov    BYTE PTR [eax],0x0
10010bc8:	mov    ecx,DWORD PTR [ebp-0x14]
10010bcb:	push   ecx
10010bcc:	call   0x100108b0
10010bd1:	add    esp,0x4
10010bd4:	mov    edx,DWORD PTR [eax]
10010bd6:	push   edx
10010bd7:	call   0x100108b0
10010bdc:	add    esp,0x4
10010bdf:	mov    eax,DWORD PTR [eax]
10010be1:	push   eax
10010be2:	mov    ecx,DWORD PTR [ebp-0x5c]
10010be5:	call   0x10010f90
10010bea:	jmp    0x10010d34
10010bef:	mov    ecx,DWORD PTR [ebp-0x14]
10010bf2:	push   ecx
10010bf3:	call   0x100108b0
10010bf8:	add    esp,0x4
10010bfb:	mov    edx,DWORD PTR [eax]
10010bfd:	push   edx
10010bfe:	call   0x100108b0
10010c03:	add    esp,0x4
10010c06:	mov    eax,DWORD PTR [eax]
10010c08:	push   eax
10010c09:	call   0x100110c0
10010c0e:	add    esp,0x4
10010c11:	mov    ecx,DWORD PTR [eax]
10010c13:	mov    DWORD PTR [ebp+0x10],ecx
10010c16:	mov    edx,DWORD PTR [ebp+0x10]
10010c19:	push   edx
10010c1a:	call   0x10010870
10010c1f:	add    esp,0x4
10010c22:	movsx  eax,BYTE PTR [eax]
10010c25:	test   eax,eax
10010c27:	jne    0x10010c98
10010c29:	mov    ecx,DWORD PTR [ebp-0x14]
10010c2c:	push   ecx
10010c2d:	call   0x100108b0
10010c32:	add    esp,0x4
10010c35:	mov    edx,DWORD PTR [eax]
10010c37:	push   edx
10010c38:	call   0x10010870
10010c3d:	add    esp,0x4
10010c40:	mov    BYTE PTR [eax],0x1
10010c43:	mov    eax,DWORD PTR [ebp+0x10]
10010c46:	push   eax
10010c47:	call   0x10010870
10010c4c:	add    esp,0x4
10010c4f:	mov    BYTE PTR [eax],0x1
10010c52:	mov    ecx,DWORD PTR [ebp-0x14]
10010c55:	push   ecx
10010c56:	call   0x100108b0
10010c5b:	add    esp,0x4
10010c5e:	mov    edx,DWORD PTR [eax]
10010c60:	push   edx
10010c61:	call   0x100108b0
10010c66:	add    esp,0x4
10010c69:	mov    eax,DWORD PTR [eax]
10010c6b:	push   eax
10010c6c:	call   0x10010870
10010c71:	add    esp,0x4
10010c74:	mov    BYTE PTR [eax],0x0
10010c77:	mov    ecx,DWORD PTR [ebp-0x14]
10010c7a:	push   ecx
10010c7b:	call   0x100108b0
10010c80:	add    esp,0x4
10010c83:	mov    edx,DWORD PTR [eax]
10010c85:	push   edx
10010c86:	call   0x100108b0
10010c8b:	add    esp,0x4
10010c8e:	mov    eax,DWORD PTR [eax]
10010c90:	mov    DWORD PTR [ebp-0x14],eax
10010c93:	jmp    0x10010d34
10010c98:	mov    ecx,DWORD PTR [ebp-0x14]
10010c9b:	push   ecx
10010c9c:	call   0x100108b0
10010ca1:	add    esp,0x4
10010ca4:	mov    edx,DWORD PTR [eax]
10010ca6:	push   edx
10010ca7:	call   0x100110c0
10010cac:	add    esp,0x4
10010caf:	mov    ecx,DWORD PTR [ebp-0x14]
10010cb2:	cmp    ecx,DWORD PTR [eax]
10010cb4:	jne    0x10010cd3
10010cb6:	mov    edx,DWORD PTR [ebp-0x14]
10010cb9:	push   edx
10010cba:	call   0x100108b0
10010cbf:	add    esp,0x4
10010cc2:	mov    eax,DWORD PTR [eax]
10010cc4:	mov    DWORD PTR [ebp-0x14],eax
10010cc7:	mov    ecx,DWORD PTR [ebp-0x14]
10010cca:	push   ecx
10010ccb:	mov    ecx,DWORD PTR [ebp-0x5c]
10010cce:	call   0x10010f90
10010cd3:	mov    edx,DWORD PTR [ebp-0x14]
10010cd6:	push   edx
10010cd7:	call   0x100108b0
10010cdc:	add    esp,0x4
10010cdf:	mov    eax,DWORD PTR [eax]
10010ce1:	push   eax
10010ce2:	call   0x10010870
10010ce7:	add    esp,0x4
10010cea:	mov    BYTE PTR [eax],0x1
10010ced:	mov    ecx,DWORD PTR [ebp-0x14]
10010cf0:	push   ecx
10010cf1:	call   0x100108b0
10010cf6:	add    esp,0x4
10010cf9:	mov    edx,DWORD PTR [eax]
10010cfb:	push   edx
10010cfc:	call   0x100108b0
10010d01:	add    esp,0x4
10010d04:	mov    eax,DWORD PTR [eax]
10010d06:	push   eax
10010d07:	call   0x10010870
10010d0c:	add    esp,0x4
10010d0f:	mov    BYTE PTR [eax],0x0
10010d12:	mov    ecx,DWORD PTR [ebp-0x14]
10010d15:	push   ecx
10010d16:	call   0x100108b0
10010d1b:	add    esp,0x4
10010d1e:	mov    edx,DWORD PTR [eax]
10010d20:	push   edx
10010d21:	call   0x100108b0
10010d26:	add    esp,0x4
10010d29:	mov    eax,DWORD PTR [eax]
10010d2b:	push   eax
10010d2c:	mov    ecx,DWORD PTR [ebp-0x5c]
10010d2f:	call   0x10010da0
10010d34:	jmp    0x10010a49
10010d39:	mov    ecx,DWORD PTR [ebp-0x5c]
10010d3c:	call   0x10010f70
10010d41:	mov    ecx,DWORD PTR [eax]
10010d43:	push   ecx
10010d44:	call   0x10010870
10010d49:	add    esp,0x4
10010d4c:	mov    BYTE PTR [eax],0x1
10010d4f:	mov    edx,DWORD PTR [ebp-0x5c]
10010d52:	push   edx
10010d53:	mov    eax,DWORD PTR [ebp-0x10]
10010d56:	push   eax
10010d57:	mov    ecx,DWORD PTR [ebp+0x8]
10010d5a:	call   0x10011130
10010d5f:	mov    eax,DWORD PTR [ebp+0x8]
10010d62:	mov    ecx,DWORD PTR [ebp-0xc]
10010d65:	mov    DWORD PTR fs:0x0,ecx
10010d6c:	pop    ecx
10010d6d:	pop    esi
10010d6e:	mov    esp,ebp
10010d70:	pop    ebp
10010d71:	ret    0x10
10010d74:	int3   
10010d75:	int3   
10010d76:	int3   
10010d77:	int3   
10010d78:	int3   
10010d79:	int3   
10010d7a:	int3   
10010d7b:	int3   
10010d7c:	int3   
10010d7d:	int3   
10010d7e:	int3   
10010d7f:	int3   
10010d80:	push   ebp
10010d81:	mov    ebp,esp
10010d83:	push   ecx
10010d84:	mov    DWORD PTR [ebp-0x4],ecx
10010d87:	mov    eax,DWORD PTR [ebp-0x4]
10010d8a:	mov    ecx,DWORD PTR [eax+0x4]
10010d8d:	push   ecx
10010d8e:	call   0x100110c0
10010d93:	add    esp,0x4
10010d96:	mov    esp,ebp
10010d98:	pop    ebp
10010d99:	ret    
10010d9a:	int3   
10010d9b:	int3   
10010d9c:	int3   
10010d9d:	int3   
10010d9e:	int3   
10010d9f:	int3   
10010da0:	push   ebp
10010da1:	mov    ebp,esp
10010da3:	sub    esp,0x8
10010da6:	push   esi
10010da7:	mov    DWORD PTR [ebp-0x8],ecx
10010daa:	mov    eax,DWORD PTR [ebp+0x8]
10010dad:	push   eax
10010dae:	call   0x100108c0
10010db3:	add    esp,0x4
10010db6:	mov    ecx,DWORD PTR [eax]
10010db8:	mov    DWORD PTR [ebp-0x4],ecx
10010dbb:	mov    edx,DWORD PTR [ebp-0x4]
10010dbe:	push   edx
10010dbf:	call   0x100110c0
10010dc4:	add    esp,0x4
10010dc7:	mov    esi,eax
10010dc9:	mov    eax,DWORD PTR [ebp+0x8]
10010dcc:	push   eax
10010dcd:	call   0x100108c0
10010dd2:	add    esp,0x4
10010dd5:	mov    ecx,DWORD PTR [esi]
10010dd7:	mov    DWORD PTR [eax],ecx
10010dd9:	mov    edx,DWORD PTR [ebp-0x4]
10010ddc:	push   edx
10010ddd:	call   0x100110c0
10010de2:	add    esp,0x4
10010de5:	mov    eax,DWORD PTR [eax]
10010de7:	push   eax
10010de8:	call   0x10010880
10010ded:	add    esp,0x4
10010df0:	movsx  ecx,BYTE PTR [eax]
10010df3:	test   ecx,ecx
10010df5:	jne    0x10010e13
10010df7:	mov    edx,DWORD PTR [ebp-0x4]
10010dfa:	push   edx
10010dfb:	call   0x100110c0
10010e00:	add    esp,0x4
10010e03:	mov    eax,DWORD PTR [eax]
10010e05:	push   eax
10010e06:	call   0x100108b0
10010e0b:	add    esp,0x4
10010e0e:	mov    ecx,DWORD PTR [ebp+0x8]
10010e11:	mov    DWORD PTR [eax],ecx
10010e13:	mov    edx,DWORD PTR [ebp+0x8]
10010e16:	push   edx
10010e17:	call   0x100108b0
10010e1c:	add    esp,0x4
10010e1f:	mov    esi,eax
10010e21:	mov    eax,DWORD PTR [ebp-0x4]
10010e24:	push   eax
10010e25:	call   0x100108b0
10010e2a:	add    esp,0x4
10010e2d:	mov    ecx,DWORD PTR [esi]
10010e2f:	mov    DWORD PTR [eax],ecx
10010e31:	mov    ecx,DWORD PTR [ebp-0x8]
10010e34:	call   0x10010f70
10010e39:	mov    edx,DWORD PTR [ebp+0x8]
10010e3c:	cmp    edx,DWORD PTR [eax]
10010e3e:	jne    0x10010e4f
10010e40:	mov    ecx,DWORD PTR [ebp-0x8]
10010e43:	call   0x10010f70
10010e48:	mov    ecx,DWORD PTR [ebp-0x4]
10010e4b:	mov    DWORD PTR [eax],ecx
10010e4d:	jmp    0x10010ea7
10010e4f:	mov    edx,DWORD PTR [ebp+0x8]
10010e52:	push   edx
10010e53:	call   0x100108b0
10010e58:	add    esp,0x4
10010e5b:	mov    eax,DWORD PTR [eax]
10010e5d:	push   eax
10010e5e:	call   0x100110c0
10010e63:	add    esp,0x4
10010e66:	mov    ecx,DWORD PTR [ebp+0x8]
10010e69:	cmp    ecx,DWORD PTR [eax]
10010e6b:	jne    0x10010e8b
10010e6d:	mov    edx,DWORD PTR [ebp+0x8]
10010e70:	push   edx
10010e71:	call   0x100108b0
10010e76:	add    esp,0x4
10010e79:	mov    eax,DWORD PTR [eax]
10010e7b:	push   eax
10010e7c:	call   0x100110c0
10010e81:	add    esp,0x4
10010e84:	mov    ecx,DWORD PTR [ebp-0x4]
10010e87:	mov    DWORD PTR [eax],ecx
10010e89:	jmp    0x10010ea7
10010e8b:	mov    edx,DWORD PTR [ebp+0x8]
10010e8e:	push   edx
10010e8f:	call   0x100108b0
10010e94:	add    esp,0x4
10010e97:	mov    eax,DWORD PTR [eax]
10010e99:	push   eax
10010e9a:	call   0x100108c0
10010e9f:	add    esp,0x4
10010ea2:	mov    ecx,DWORD PTR [ebp-0x4]
10010ea5:	mov    DWORD PTR [eax],ecx
10010ea7:	mov    edx,DWORD PTR [ebp-0x4]
10010eaa:	push   edx
10010eab:	call   0x100110c0
10010eb0:	add    esp,0x4
10010eb3:	mov    ecx,DWORD PTR [ebp+0x8]
10010eb6:	mov    DWORD PTR [eax],ecx
10010eb8:	mov    edx,DWORD PTR [ebp+0x8]
10010ebb:	push   edx
10010ebc:	call   0x100108b0
10010ec1:	add    esp,0x4
10010ec4:	mov    ecx,DWORD PTR [ebp-0x4]
10010ec7:	mov    DWORD PTR [eax],ecx
10010ec9:	pop    esi
10010eca:	mov    esp,ebp
10010ecc:	pop    ebp
10010ecd:	ret    0x4
10010ed0:	push   ebp
10010ed1:	mov    ebp,esp
10010ed3:	mov    eax,DWORD PTR [ebp+0x8]
10010ed6:	push   eax
10010ed7:	call   0x100108c0
10010edc:	add    esp,0x4
10010edf:	mov    ecx,DWORD PTR [eax]
10010ee1:	push   ecx
10010ee2:	call   0x10010880
10010ee7:	add    esp,0x4
10010eea:	movsx  edx,BYTE PTR [eax]
10010eed:	test   edx,edx
10010eef:	jne    0x10010f04
10010ef1:	mov    eax,DWORD PTR [ebp+0x8]
10010ef4:	push   eax
10010ef5:	call   0x100108c0
10010efa:	add    esp,0x4
10010efd:	mov    ecx,DWORD PTR [eax]
10010eff:	mov    DWORD PTR [ebp+0x8],ecx
10010f02:	jmp    0x10010ed3
10010f04:	mov    eax,DWORD PTR [ebp+0x8]
10010f07:	pop    ebp
10010f08:	ret    
10010f09:	int3   
10010f0a:	int3   
10010f0b:	int3   
10010f0c:	int3   
10010f0d:	int3   
10010f0e:	int3   
10010f0f:	int3   
10010f10:	push   ebp
10010f11:	mov    ebp,esp
10010f13:	mov    eax,DWORD PTR [ebp+0x8]
10010f16:	push   eax
10010f17:	call   0x100110c0
10010f1c:	add    esp,0x4
10010f1f:	mov    ecx,DWORD PTR [eax]
10010f21:	push   ecx
10010f22:	call   0x10010880
10010f27:	add    esp,0x4
10010f2a:	movsx  edx,BYTE PTR [eax]
10010f2d:	test   edx,edx
10010f2f:	jne    0x10010f44
10010f31:	mov    eax,DWORD PTR [ebp+0x8]
10010f34:	push   eax
10010f35:	call   0x100110c0
10010f3a:	add    esp,0x4
10010f3d:	mov    ecx,DWORD PTR [eax]
10010f3f:	mov    DWORD PTR [ebp+0x8],ecx
10010f42:	jmp    0x10010f13
10010f44:	mov    eax,DWORD PTR [ebp+0x8]
10010f47:	pop    ebp
10010f48:	ret    
10010f49:	int3   
10010f4a:	int3   
10010f4b:	int3   
10010f4c:	int3   
10010f4d:	int3   
10010f4e:	int3   
10010f4f:	int3   
10010f50:	push   ebp
10010f51:	mov    ebp,esp
10010f53:	push   ecx
10010f54:	mov    DWORD PTR [ebp-0x4],ecx
10010f57:	mov    eax,DWORD PTR [ebp-0x4]
10010f5a:	mov    ecx,DWORD PTR [eax+0x4]
10010f5d:	push   ecx
10010f5e:	call   0x100108c0
10010f63:	add    esp,0x4
10010f66:	mov    esp,ebp
10010f68:	pop    ebp
10010f69:	ret    
10010f6a:	int3   
10010f6b:	int3   
10010f6c:	int3   
10010f6d:	int3   
10010f6e:	int3   
10010f6f:	int3   
10010f70:	push   ebp
10010f71:	mov    ebp,esp
10010f73:	push   ecx
10010f74:	mov    DWORD PTR [ebp-0x4],ecx
10010f77:	mov    eax,DWORD PTR [ebp-0x4]
10010f7a:	mov    ecx,DWORD PTR [eax+0x4]
10010f7d:	push   ecx
10010f7e:	call   0x100108b0
10010f83:	add    esp,0x4
10010f86:	mov    esp,ebp
10010f88:	pop    ebp
10010f89:	ret    
10010f8a:	int3   
10010f8b:	int3   
10010f8c:	int3   
10010f8d:	int3   
10010f8e:	int3   
10010f8f:	int3   
10010f90:	push   ebp
10010f91:	mov    ebp,esp
10010f93:	sub    esp,0x8
10010f96:	push   esi
10010f97:	mov    DWORD PTR [ebp-0x8],ecx
10010f9a:	mov    eax,DWORD PTR [ebp+0x8]
10010f9d:	push   eax
10010f9e:	call   0x100110c0
10010fa3:	add    esp,0x4
10010fa6:	mov    ecx,DWORD PTR [eax]
10010fa8:	mov    DWORD PTR [ebp-0x4],ecx
10010fab:	mov    edx,DWORD PTR [ebp-0x4]
10010fae:	push   edx
10010faf:	call   0x100108c0
10010fb4:	add    esp,0x4
10010fb7:	mov    esi,eax
10010fb9:	mov    eax,DWORD PTR [ebp+0x8]
10010fbc:	push   eax
10010fbd:	call   0x100110c0
10010fc2:	add    esp,0x4
10010fc5:	mov    ecx,DWORD PTR [esi]
10010fc7:	mov    DWORD PTR [eax],ecx
10010fc9:	mov    edx,DWORD PTR [ebp-0x4]
10010fcc:	push   edx
10010fcd:	call   0x100108c0
10010fd2:	add    esp,0x4
10010fd5:	mov    eax,DWORD PTR [eax]
10010fd7:	push   eax
10010fd8:	call   0x10010880
10010fdd:	add    esp,0x4
10010fe0:	movsx  ecx,BYTE PTR [eax]
10010fe3:	test   ecx,ecx
10010fe5:	jne    0x10011003
10010fe7:	mov    edx,DWORD PTR [ebp-0x4]
10010fea:	push   edx
10010feb:	call   0x100108c0
10010ff0:	add    esp,0x4
10010ff3:	mov    eax,DWORD PTR [eax]
10010ff5:	push   eax
10010ff6:	call   0x100108b0
10010ffb:	add    esp,0x4
10010ffe:	mov    ecx,DWORD PTR [ebp+0x8]
10011001:	mov    DWORD PTR [eax],ecx
10011003:	mov    edx,DWORD PTR [ebp+0x8]
10011006:	push   edx
10011007:	call   0x100108b0
1001100c:	add    esp,0x4
1001100f:	mov    esi,eax
10011011:	mov    eax,DWORD PTR [ebp-0x4]
10011014:	push   eax
10011015:	call   0x100108b0
1001101a:	add    esp,0x4
1001101d:	mov    ecx,DWORD PTR [esi]
1001101f:	mov    DWORD PTR [eax],ecx
10011021:	mov    ecx,DWORD PTR [ebp-0x8]
10011024:	call   0x10010f70
10011029:	mov    edx,DWORD PTR [ebp+0x8]
1001102c:	cmp    edx,DWORD PTR [eax]
1001102e:	jne    0x1001103f
10011030:	mov    ecx,DWORD PTR [ebp-0x8]
10011033:	call   0x10010f70
10011038:	mov    ecx,DWORD PTR [ebp-0x4]
1001103b:	mov    DWORD PTR [eax],ecx
1001103d:	jmp    0x10011097
1001103f:	mov    edx,DWORD PTR [ebp+0x8]
10011042:	push   edx
10011043:	call   0x100108b0
10011048:	add    esp,0x4
1001104b:	mov    eax,DWORD PTR [eax]
1001104d:	push   eax
1001104e:	call   0x100108c0
10011053:	add    esp,0x4
10011056:	mov    ecx,DWORD PTR [ebp+0x8]
10011059:	cmp    ecx,DWORD PTR [eax]
1001105b:	jne    0x1001107b
1001105d:	mov    edx,DWORD PTR [ebp+0x8]
10011060:	push   edx
10011061:	call   0x100108b0
10011066:	add    esp,0x4
10011069:	mov    eax,DWORD PTR [eax]
1001106b:	push   eax
1001106c:	call   0x100108c0
10011071:	add    esp,0x4
10011074:	mov    ecx,DWORD PTR [ebp-0x4]
10011077:	mov    DWORD PTR [eax],ecx
10011079:	jmp    0x10011097
1001107b:	mov    edx,DWORD PTR [ebp+0x8]
1001107e:	push   edx
1001107f:	call   0x100108b0
10011084:	add    esp,0x4
10011087:	mov    eax,DWORD PTR [eax]
10011089:	push   eax
1001108a:	call   0x100110c0
1001108f:	add    esp,0x4
10011092:	mov    ecx,DWORD PTR [ebp-0x4]
10011095:	mov    DWORD PTR [eax],ecx
10011097:	mov    edx,DWORD PTR [ebp-0x4]
1001109a:	push   edx
1001109b:	call   0x100108c0
100110a0:	add    esp,0x4
100110a3:	mov    ecx,DWORD PTR [ebp+0x8]
100110a6:	mov    DWORD PTR [eax],ecx
100110a8:	mov    edx,DWORD PTR [ebp+0x8]
100110ab:	push   edx
100110ac:	call   0x100108b0
100110b1:	add    esp,0x4
100110b4:	mov    ecx,DWORD PTR [ebp-0x4]
100110b7:	mov    DWORD PTR [eax],ecx
100110b9:	pop    esi
100110ba:	mov    esp,ebp
100110bc:	pop    ebp
100110bd:	ret    0x4
100110c0:	push   ebp
100110c1:	mov    ebp,esp
100110c3:	mov    eax,DWORD PTR [ebp+0x8]
100110c6:	pop    ebp
100110c7:	ret    
100110c8:	int3   
100110c9:	int3   
100110ca:	int3   
100110cb:	int3   
100110cc:	int3   
100110cd:	int3   
100110ce:	int3   
100110cf:	int3   
100110d0:	push   ebp
100110d1:	mov    ebp,esp
100110d3:	push   ecx
100110d4:	mov    DWORD PTR [ebp-0x4],ecx
100110d7:	mov    eax,DWORD PTR [ebp+0x8]
100110da:	mov    ecx,DWORD PTR [ebp+0xc]
100110dd:	mov    edx,DWORD PTR [eax]
100110df:	cmp    edx,DWORD PTR [ecx]
100110e1:	sbb    eax,eax
100110e3:	neg    eax
100110e5:	mov    esp,ebp
100110e7:	pop    ebp
100110e8:	ret    0x8
100110eb:	int3   
100110ec:	int3   
100110ed:	int3   
100110ee:	int3   
100110ef:	int3   
100110f0:	push   ebp
100110f1:	mov    ebp,esp
100110f3:	push   ecx
100110f4:	mov    DWORD PTR [ebp-0x4],ecx
100110f7:	mov    eax,DWORD PTR [ebp+0x8]
100110fa:	push   eax
100110fb:	call   0x10015b26
10011100:	add    esp,0x4
10011103:	mov    esp,ebp
10011105:	pop    ebp
10011106:	ret    0x8
10011109:	int3   
1001110a:	int3   
1001110b:	int3   
1001110c:	int3   
1001110d:	int3   
1001110e:	int3   
1001110f:	int3   
10011110:	push   ebp
10011111:	mov    ebp,esp
10011113:	push   ecx
10011114:	mov    DWORD PTR [ebp-0x4],ecx
10011117:	mov    eax,DWORD PTR [ebp+0x8]
1001111a:	push   eax
1001111b:	call   0x10011af0
10011120:	add    esp,0x4
10011123:	mov    esp,ebp
10011125:	pop    ebp
10011126:	ret    0x4
10011129:	int3   
1001112a:	int3   
1001112b:	int3   
1001112c:	int3   
1001112d:	int3   
1001112e:	int3   
1001112f:	int3   
10011130:	push   ebp
10011131:	mov    ebp,esp
10011133:	push   ecx
10011134:	mov    DWORD PTR [ebp-0x4],ecx
10011137:	mov    eax,DWORD PTR [ebp+0xc]
1001113a:	push   eax
1001113b:	mov    ecx,DWORD PTR [ebp+0x8]
1001113e:	push   ecx
1001113f:	mov    ecx,DWORD PTR [ebp-0x4]
10011142:	call   0x100113c0
10011147:	mov    eax,DWORD PTR [ebp-0x4]
1001114a:	mov    esp,ebp
1001114c:	pop    ebp
1001114d:	ret    0x8
10011150:	push   ebp
10011151:	mov    ebp,esp
10011153:	push   ecx
10011154:	mov    DWORD PTR [ebp-0x4],ecx
10011157:	mov    ecx,DWORD PTR [ebp-0x4]
1001115a:	call   0x10011400
1001115f:	mov    eax,DWORD PTR [ebp-0x4]
10011162:	mov    esp,ebp
10011164:	pop    ebp
10011165:	ret    
10011166:	int3   
10011167:	int3   
10011168:	int3   
10011169:	int3   
1001116a:	int3   
1001116b:	int3   
1001116c:	int3   
1001116d:	int3   
1001116e:	int3   
1001116f:	int3   
10011170:	push   ebp
10011171:	mov    ebp,esp
10011173:	push   ecx
10011174:	mov    DWORD PTR [ebp-0x4],ecx
10011177:	mov    eax,DWORD PTR [ebp-0x4]
1001117a:	cmp    DWORD PTR [eax],0x0
1001117d:	jne    0x10011184
1001117f:	call   0x10016193
10011184:	mov    ecx,DWORD PTR [ebp-0x4]
10011187:	mov    edx,DWORD PTR [ecx]
10011189:	mov    eax,DWORD PTR [ebp-0x4]
1001118c:	mov    ecx,DWORD PTR [eax+0x4]
1001118f:	cmp    ecx,DWORD PTR [edx+0x4]
10011192:	jne    0x10011199
10011194:	call   0x10016193
10011199:	mov    edx,DWORD PTR [ebp-0x4]
1001119c:	mov    eax,DWORD PTR [edx+0x4]
1001119f:	push   eax
100111a0:	call   0x10011220
100111a5:	add    esp,0x4
100111a8:	mov    esp,ebp
100111aa:	pop    ebp
100111ab:	ret    
100111ac:	int3   
100111ad:	int3   
100111ae:	int3   
100111af:	int3   
100111b0:	push   ebp
100111b1:	mov    ebp,esp
100111b3:	push   ecx
100111b4:	mov    DWORD PTR [ebp-0x4],ecx
100111b7:	mov    ecx,DWORD PTR [ebp-0x4]
100111ba:	call   0x10011420
100111bf:	mov    eax,DWORD PTR [ebp-0x4]
100111c2:	mov    esp,ebp
100111c4:	pop    ebp
100111c5:	ret    
100111c6:	int3   
100111c7:	int3   
100111c8:	int3   
100111c9:	int3   
100111ca:	int3   
100111cb:	int3   
100111cc:	int3   
100111cd:	int3   
100111ce:	int3   
100111cf:	int3   
100111d0:	push   ebp
100111d1:	mov    ebp,esp
100111d3:	push   ecx
100111d4:	mov    DWORD PTR [ebp-0x4],ecx
100111d7:	mov    eax,DWORD PTR [ebp-0x4]
100111da:	mov    eax,DWORD PTR [eax+0x4]
100111dd:	mov    esp,ebp
100111df:	pop    ebp
100111e0:	ret    
100111e1:	int3   
100111e2:	int3   
100111e3:	int3   
100111e4:	int3   
100111e5:	int3   
100111e6:	int3   
100111e7:	int3   
100111e8:	int3   
100111e9:	int3   
100111ea:	int3   
100111eb:	int3   
100111ec:	int3   
100111ed:	int3   
100111ee:	int3   
100111ef:	int3   
100111f0:	push   ebp
100111f1:	mov    ebp,esp
100111f3:	push   ecx
100111f4:	mov    DWORD PTR [ebp-0x4],ecx
100111f7:	mov    eax,DWORD PTR [ebp+0x8]
100111fa:	mov    ecx,DWORD PTR [eax]
100111fc:	mov    edx,DWORD PTR [eax+0x4]
100111ff:	mov    eax,DWORD PTR [ebp-0x4]
10011202:	mov    DWORD PTR [eax],ecx
10011204:	mov    DWORD PTR [eax+0x4],edx
10011207:	mov    ecx,DWORD PTR [ebp-0x4]
1001120a:	mov    edx,DWORD PTR [ebp+0xc]
1001120d:	mov    al,BYTE PTR [edx]
1001120f:	mov    BYTE PTR [ecx+0x8],al
10011212:	mov    eax,DWORD PTR [ebp-0x4]
10011215:	mov    esp,ebp
10011217:	pop    ebp
10011218:	ret    0x8
1001121b:	int3   
1001121c:	int3   
1001121d:	int3   
1001121e:	int3   
1001121f:	int3   
10011220:	push   ebp
10011221:	mov    ebp,esp
10011223:	mov    eax,DWORD PTR [ebp+0x8]
10011226:	add    eax,0x10
10011229:	pop    ebp
1001122a:	ret    
1001122b:	int3   
1001122c:	int3   
1001122d:	int3   
1001122e:	int3   
1001122f:	int3   
10011230:	push   ebp
10011231:	mov    ebp,esp
10011233:	push   ecx
10011234:	mov    DWORD PTR [ebp-0x4],ecx
10011237:	mov    ecx,DWORD PTR [ebp-0x4]
1001123a:	add    ecx,0x3
1001123d:	call   0x10011510
10011242:	mov    esp,ebp
10011244:	pop    ebp
10011245:	ret    
10011246:	int3   
10011247:	int3   
10011248:	int3   
10011249:	int3   
1001124a:	int3   
1001124b:	int3   
1001124c:	int3   
1001124d:	int3   
1001124e:	int3   
1001124f:	int3   
10011250:	push   ebp
10011251:	mov    ebp,esp
10011253:	sub    esp,0xc
10011256:	mov    DWORD PTR [ebp-0xc],ecx
10011259:	mov    ecx,DWORD PTR [ebp-0xc]
1001125c:	call   0x10010f70
10011261:	mov    eax,DWORD PTR [eax]
10011263:	mov    DWORD PTR [ebp-0x8],eax
10011266:	mov    ecx,DWORD PTR [ebp-0xc]
10011269:	mov    edx,DWORD PTR [ecx+0x4]
1001126c:	mov    DWORD PTR [ebp-0x4],edx
1001126f:	mov    eax,DWORD PTR [ebp-0x8]
10011272:	push   eax
10011273:	call   0x10010880
10011278:	add    esp,0x4
1001127b:	movsx  ecx,BYTE PTR [eax]
1001127e:	test   ecx,ecx
10011280:	jne    0x100112ce
10011282:	mov    edx,DWORD PTR [ebp+0x8]
10011285:	push   edx
10011286:	mov    eax,DWORD PTR [ebp-0x8]
10011289:	push   eax
1001128a:	call   0x10010890
1001128f:	add    esp,0x4
10011292:	push   eax
10011293:	mov    ecx,DWORD PTR [ebp-0xc]
10011296:	call   0x100110d0
1001129b:	movzx  ecx,al
1001129e:	test   ecx,ecx
100112a0:	je     0x100112b5
100112a2:	mov    edx,DWORD PTR [ebp-0x8]
100112a5:	push   edx
100112a6:	call   0x100108c0
100112ab:	add    esp,0x4
100112ae:	mov    eax,DWORD PTR [eax]
100112b0:	mov    DWORD PTR [ebp-0x8],eax
100112b3:	jmp    0x100112cc
100112b5:	mov    ecx,DWORD PTR [ebp-0x8]
100112b8:	mov    DWORD PTR [ebp-0x4],ecx
100112bb:	mov    edx,DWORD PTR [ebp-0x8]
100112be:	push   edx
100112bf:	call   0x100110c0
100112c4:	add    esp,0x4
100112c7:	mov    eax,DWORD PTR [eax]
100112c9:	mov    DWORD PTR [ebp-0x8],eax
100112cc:	jmp    0x1001126f
100112ce:	mov    eax,DWORD PTR [ebp-0x4]
100112d1:	mov    esp,ebp
100112d3:	pop    ebp
100112d4:	ret    0x4
100112d7:	int3   
100112d8:	int3   
100112d9:	int3   
100112da:	int3   
100112db:	int3   
100112dc:	int3   
100112dd:	int3   
100112de:	int3   
100112df:	int3   
100112e0:	push   ebp
100112e1:	mov    ebp,esp
100112e3:	push   0xffffffff
100112e5:	push   0x1002a621
100112ea:	mov    eax,fs:0x0
100112f0:	push   eax
100112f1:	push   ecx
100112f2:	sub    esp,0x18
100112f5:	push   ebx
100112f6:	push   esi
100112f7:	push   edi
100112f8:	mov    eax,ds:0x100951fc
100112fd:	xor    eax,ebp
100112ff:	push   eax
10011300:	lea    eax,[ebp-0xc]
10011303:	mov    fs:0x0,eax
10011309:	mov    DWORD PTR [ebp-0x10],esp
1001130c:	mov    DWORD PTR [ebp-0x20],ecx
1001130f:	push   0x1
10011311:	mov    ecx,DWORD PTR [ebp-0x20]
10011314:	add    ecx,0x1
10011317:	call   0x10011540
1001131c:	mov    DWORD PTR [ebp-0x14],eax
1001131f:	mov    DWORD PTR [ebp-0x4],0x0
10011326:	mov    eax,DWORD PTR [ebp-0x14]
10011329:	push   eax
1001132a:	push   0x28
1001132c:	call   0x10001270
10011331:	add    esp,0x8
10011334:	mov    DWORD PTR [ebp-0x1c],eax
10011337:	mov    BYTE PTR [ebp-0x4],0x1
1001133b:	cmp    DWORD PTR [ebp-0x1c],0x0
1001133f:	je     0x10011368
10011341:	mov    cl,BYTE PTR [ebp+0x18]
10011344:	push   ecx
10011345:	mov    edx,DWORD PTR [ebp+0x14]
10011348:	push   edx
10011349:	mov    eax,DWORD PTR [ebp+0x10]
1001134c:	push   eax
1001134d:	mov    ecx,DWORD PTR [ebp+0xc]
10011350:	push   ecx
10011351:	mov    edx,DWORD PTR [ebp+0x8]
10011354:	push   edx
10011355:	mov    ecx,DWORD PTR [ebp-0x1c]
10011358:	call   0x10011680
1001135d:	mov    DWORD PTR [ebp-0x24],eax
10011360:	mov    eax,DWORD PTR [ebp-0x24]
10011363:	mov    DWORD PTR [ebp-0x28],eax
10011366:	jmp    0x1001136f
10011368:	mov    DWORD PTR [ebp-0x28],0x0
1001136f:	mov    ecx,DWORD PTR [ebp-0x28]
10011372:	mov    DWORD PTR [ebp-0x18],ecx
10011375:	mov    BYTE PTR [ebp-0x4],0x0
10011379:	jmp    0x100113a2
1001137b:	push   0x1
1001137d:	mov    edx,DWORD PTR [ebp-0x14]
10011380:	push   edx
10011381:	mov    ecx,DWORD PTR [ebp-0x20]
10011384:	add    ecx,0x1
10011387:	call   0x100110f0
1001138c:	push   0x0
1001138e:	push   0x0
10011390:	call   0x1001621e
10011395:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001139c:	mov    eax,0x100113a9
100113a1:	ret    
100113a2:	mov    DWORD PTR [ebp-0x4],0xffffffff
100113a9:	mov    eax,DWORD PTR [ebp-0x14]
100113ac:	mov    ecx,DWORD PTR [ebp-0xc]
100113af:	mov    DWORD PTR fs:0x0,ecx
100113b6:	pop    ecx
100113b7:	pop    edi
100113b8:	pop    esi
100113b9:	pop    ebx
100113ba:	mov    esp,ebp
100113bc:	pop    ebp
100113bd:	ret    0x14
100113c0:	push   ebp
100113c1:	mov    ebp,esp
100113c3:	push   ecx
100113c4:	mov    DWORD PTR [ebp-0x4],ecx
100113c7:	mov    ecx,DWORD PTR [ebp-0x4]
100113ca:	call   0x100114f0
100113cf:	mov    eax,DWORD PTR [ebp-0x4]
100113d2:	mov    ecx,DWORD PTR [ebp+0x8]
100113d5:	mov    DWORD PTR [eax+0x4],ecx
100113d8:	cmp    DWORD PTR [ebp+0xc],0x0
100113dc:	jne    0x100113e3
100113de:	call   0x10016193
100113e3:	mov    edx,DWORD PTR [ebp-0x4]
100113e6:	mov    eax,DWORD PTR [ebp+0xc]
100113e9:	mov    DWORD PTR [edx],eax
100113eb:	mov    eax,DWORD PTR [ebp-0x4]
100113ee:	mov    esp,ebp
100113f0:	pop    ebp
100113f1:	ret    0x8
100113f4:	int3   
100113f5:	int3   
100113f6:	int3   
100113f7:	int3   
100113f8:	int3   
100113f9:	int3   
100113fa:	int3   
100113fb:	int3   
100113fc:	int3   
100113fd:	int3   
100113fe:	int3   
100113ff:	int3   
10011400:	push   ebp
10011401:	mov    ebp,esp
10011403:	push   ecx
10011404:	mov    DWORD PTR [ebp-0x4],ecx
10011407:	mov    ecx,DWORD PTR [ebp-0x4]
1001140a:	call   0x10011560
1001140f:	mov    eax,DWORD PTR [ebp-0x4]
10011412:	mov    esp,ebp
10011414:	pop    ebp
10011415:	ret    
10011416:	int3   
10011417:	int3   
10011418:	int3   
10011419:	int3   
1001141a:	int3   
1001141b:	int3   
1001141c:	int3   
1001141d:	int3   
1001141e:	int3   
1001141f:	int3   
10011420:	push   ebp
10011421:	mov    ebp,esp
10011423:	sub    esp,0x8
10011426:	mov    DWORD PTR [ebp-0x8],ecx
10011429:	mov    eax,DWORD PTR [ebp-0x8]
1001142c:	cmp    DWORD PTR [eax],0x0
1001142f:	jne    0x10011436
10011431:	call   0x10016193
10011436:	mov    ecx,DWORD PTR [ebp-0x8]
10011439:	mov    edx,DWORD PTR [ecx+0x4]
1001143c:	push   edx
1001143d:	call   0x10010880
10011442:	add    esp,0x4
10011445:	movsx  eax,BYTE PTR [eax]
10011448:	test   eax,eax
1001144a:	je     0x10011456
1001144c:	call   0x10016193
10011451:	jmp    0x100114ea
10011456:	mov    ecx,DWORD PTR [ebp-0x8]
10011459:	mov    edx,DWORD PTR [ecx+0x4]
1001145c:	push   edx
1001145d:	call   0x100108c0
10011462:	add    esp,0x4
10011465:	mov    eax,DWORD PTR [eax]
10011467:	push   eax
10011468:	call   0x10010880
1001146d:	add    esp,0x4
10011470:	movsx  ecx,BYTE PTR [eax]
10011473:	test   ecx,ecx
10011475:	jne    0x10011499
10011477:	mov    edx,DWORD PTR [ebp-0x8]
1001147a:	mov    eax,DWORD PTR [edx+0x4]
1001147d:	push   eax
1001147e:	call   0x100108c0
10011483:	add    esp,0x4
10011486:	mov    ecx,DWORD PTR [eax]
10011488:	push   ecx
10011489:	call   0x10010f10
1001148e:	add    esp,0x4
10011491:	mov    edx,DWORD PTR [ebp-0x8]
10011494:	mov    DWORD PTR [edx+0x4],eax
10011497:	jmp    0x100114ea
10011499:	mov    eax,DWORD PTR [ebp-0x8]
1001149c:	mov    ecx,DWORD PTR [eax+0x4]
1001149f:	push   ecx
100114a0:	call   0x100108b0
100114a5:	add    esp,0x4
100114a8:	mov    edx,DWORD PTR [eax]
100114aa:	mov    DWORD PTR [ebp-0x4],edx
100114ad:	mov    eax,DWORD PTR [ebp-0x4]
100114b0:	push   eax
100114b1:	call   0x10010880
100114b6:	add    esp,0x4
100114b9:	movsx  ecx,BYTE PTR [eax]
100114bc:	test   ecx,ecx
100114be:	jne    0x100114e1
100114c0:	mov    edx,DWORD PTR [ebp-0x4]
100114c3:	push   edx
100114c4:	call   0x100108c0
100114c9:	add    esp,0x4
100114cc:	mov    ecx,DWORD PTR [ebp-0x8]
100114cf:	mov    edx,DWORD PTR [ecx+0x4]
100114d2:	cmp    edx,DWORD PTR [eax]
100114d4:	jne    0x100114e1
100114d6:	mov    eax,DWORD PTR [ebp-0x8]
100114d9:	mov    ecx,DWORD PTR [ebp-0x4]
100114dc:	mov    DWORD PTR [eax+0x4],ecx
100114df:	jmp    0x10011499
100114e1:	mov    edx,DWORD PTR [ebp-0x8]
100114e4:	mov    eax,DWORD PTR [ebp-0x4]
100114e7:	mov    DWORD PTR [edx+0x4],eax
100114ea:	mov    esp,ebp
100114ec:	pop    ebp
100114ed:	ret    
100114ee:	int3   
100114ef:	int3   
100114f0:	push   ebp
100114f1:	mov    ebp,esp
100114f3:	push   ecx
100114f4:	mov    DWORD PTR [ebp-0x4],ecx
100114f7:	mov    ecx,DWORD PTR [ebp-0x4]
100114fa:	call   0x10001380
100114ff:	mov    eax,DWORD PTR [ebp-0x4]
10011502:	mov    esp,ebp
10011504:	pop    ebp
10011505:	ret    
10011506:	int3   
10011507:	int3   
10011508:	int3   
10011509:	int3   
1001150a:	int3   
1001150b:	int3   
1001150c:	int3   
1001150d:	int3   
1001150e:	int3   
1001150f:	int3   
10011510:	push   ebp
10011511:	mov    ebp,esp
10011513:	sub    esp,0xc
10011516:	mov    DWORD PTR [ebp-0x8],ecx
10011519:	mov    DWORD PTR [ebp-0x4],0xfffffff
10011520:	cmp    DWORD PTR [ebp-0x4],0x0
10011524:	jbe    0x1001152e
10011526:	mov    eax,DWORD PTR [ebp-0x4]
10011529:	mov    DWORD PTR [ebp-0xc],eax
1001152c:	jmp    0x10011535
1001152e:	mov    DWORD PTR [ebp-0xc],0x1
10011535:	mov    eax,DWORD PTR [ebp-0xc]
10011538:	mov    esp,ebp
1001153a:	pop    ebp
1001153b:	ret    
1001153c:	int3   
1001153d:	int3   
1001153e:	int3   
1001153f:	int3   
10011540:	push   ebp
10011541:	mov    ebp,esp
10011543:	push   ecx
10011544:	mov    DWORD PTR [ebp-0x4],ecx
10011547:	push   0x0
10011549:	mov    eax,DWORD PTR [ebp+0x8]
1001154c:	push   eax
1001154d:	call   0x10011730
10011552:	add    esp,0x8
10011555:	mov    esp,ebp
10011557:	pop    ebp
10011558:	ret    0x4
1001155b:	int3   
1001155c:	int3   
1001155d:	int3   
1001155e:	int3   
1001155f:	int3   
10011560:	push   ebp
10011561:	mov    ebp,esp
10011563:	sub    esp,0x8
10011566:	mov    DWORD PTR [ebp-0x8],ecx
10011569:	mov    eax,DWORD PTR [ebp-0x8]
1001156c:	cmp    DWORD PTR [eax],0x0
1001156f:	jne    0x10011576
10011571:	call   0x10016193
10011576:	mov    ecx,DWORD PTR [ebp-0x8]
10011579:	mov    edx,DWORD PTR [ecx+0x4]
1001157c:	push   edx
1001157d:	call   0x10010880
10011582:	add    esp,0x4
10011585:	movsx  eax,BYTE PTR [eax]
10011588:	test   eax,eax
1001158a:	je     0x100115c3
1001158c:	mov    ecx,DWORD PTR [ebp-0x8]
1001158f:	mov    edx,DWORD PTR [ecx+0x4]
10011592:	push   edx
10011593:	call   0x100108c0
10011598:	add    esp,0x4
1001159b:	mov    ecx,DWORD PTR [ebp-0x8]
1001159e:	mov    edx,DWORD PTR [eax]
100115a0:	mov    DWORD PTR [ecx+0x4],edx
100115a3:	mov    eax,DWORD PTR [ebp-0x8]
100115a6:	mov    ecx,DWORD PTR [eax+0x4]
100115a9:	push   ecx
100115aa:	call   0x10010880
100115af:	add    esp,0x4
100115b2:	movsx  edx,BYTE PTR [eax]
100115b5:	test   edx,edx
100115b7:	je     0x100115be
100115b9:	call   0x10016193
100115be:	jmp    0x10011674
100115c3:	mov    eax,DWORD PTR [ebp-0x8]
100115c6:	mov    ecx,DWORD PTR [eax+0x4]
100115c9:	push   ecx
100115ca:	call   0x100110c0
100115cf:	add    esp,0x4
100115d2:	mov    edx,DWORD PTR [eax]
100115d4:	push   edx
100115d5:	call   0x10010880
100115da:	add    esp,0x4
100115dd:	movsx  eax,BYTE PTR [eax]
100115e0:	test   eax,eax
100115e2:	jne    0x10011606
100115e4:	mov    ecx,DWORD PTR [ebp-0x8]
100115e7:	mov    edx,DWORD PTR [ecx+0x4]
100115ea:	push   edx
100115eb:	call   0x100110c0
100115f0:	add    esp,0x4
100115f3:	mov    eax,DWORD PTR [eax]
100115f5:	push   eax
100115f6:	call   0x10010ed0
100115fb:	add    esp,0x4
100115fe:	mov    ecx,DWORD PTR [ebp-0x8]
10011601:	mov    DWORD PTR [ecx+0x4],eax
10011604:	jmp    0x10011674
10011606:	mov    edx,DWORD PTR [ebp-0x8]
10011609:	mov    eax,DWORD PTR [edx+0x4]
1001160c:	push   eax
1001160d:	call   0x100108b0
10011612:	add    esp,0x4
10011615:	mov    ecx,DWORD PTR [eax]
10011617:	mov    DWORD PTR [ebp-0x4],ecx
1001161a:	mov    edx,DWORD PTR [ebp-0x4]
1001161d:	push   edx
1001161e:	call   0x10010880
10011623:	add    esp,0x4
10011626:	movsx  eax,BYTE PTR [eax]
10011629:	test   eax,eax
1001162b:	jne    0x1001164e
1001162d:	mov    ecx,DWORD PTR [ebp-0x4]
10011630:	push   ecx
10011631:	call   0x100110c0
10011636:	add    esp,0x4
10011639:	mov    edx,DWORD PTR [ebp-0x8]
1001163c:	mov    ecx,DWORD PTR [edx+0x4]
1001163f:	cmp    ecx,DWORD PTR [eax]
10011641:	jne    0x1001164e
10011643:	mov    edx,DWORD PTR [ebp-0x8]
10011646:	mov    eax,DWORD PTR [ebp-0x4]
10011649:	mov    DWORD PTR [edx+0x4],eax
1001164c:	jmp    0x10011606
1001164e:	mov    ecx,DWORD PTR [ebp-0x8]
10011651:	mov    edx,DWORD PTR [ecx+0x4]
10011654:	push   edx
10011655:	call   0x10010880
1001165a:	add    esp,0x4
1001165d:	movsx  eax,BYTE PTR [eax]
10011660:	test   eax,eax
10011662:	je     0x1001166b
10011664:	call   0x10016193
10011669:	jmp    0x10011674
1001166b:	mov    ecx,DWORD PTR [ebp-0x8]
1001166e:	mov    edx,DWORD PTR [ebp-0x4]
10011671:	mov    DWORD PTR [ecx+0x4],edx
10011674:	mov    esp,ebp
10011676:	pop    ebp
10011677:	ret    
10011678:	int3   
10011679:	int3   
1001167a:	int3   
1001167b:	int3   
1001167c:	int3   
1001167d:	int3   
1001167e:	int3   
1001167f:	int3   
10011680:	push   ebp
10011681:	mov    ebp,esp
10011683:	push   ecx
10011684:	mov    DWORD PTR [ebp-0x4],ecx
10011687:	mov    eax,DWORD PTR [ebp-0x4]
1001168a:	mov    ecx,DWORD PTR [ebp+0x8]
1001168d:	mov    DWORD PTR [eax],ecx
1001168f:	mov    edx,DWORD PTR [ebp-0x4]
10011692:	mov    eax,DWORD PTR [ebp+0xc]
10011695:	mov    DWORD PTR [edx+0x4],eax
10011698:	mov    ecx,DWORD PTR [ebp-0x4]
1001169b:	mov    edx,DWORD PTR [ebp+0x10]
1001169e:	mov    DWORD PTR [ecx+0x8],edx
100116a1:	mov    eax,DWORD PTR [ebp+0x14]
100116a4:	mov    ecx,DWORD PTR [ebp-0x4]
100116a7:	add    ecx,0x10
100116aa:	mov    edx,DWORD PTR [eax]
100116ac:	mov    DWORD PTR [ecx],edx
100116ae:	mov    edx,DWORD PTR [eax+0x4]
100116b1:	mov    DWORD PTR [ecx+0x4],edx
100116b4:	mov    edx,DWORD PTR [eax+0x8]
100116b7:	mov    DWORD PTR [ecx+0x8],edx
100116ba:	mov    eax,DWORD PTR [eax+0xc]
100116bd:	mov    DWORD PTR [ecx+0xc],eax
100116c0:	mov    ecx,DWORD PTR [ebp-0x4]
100116c3:	mov    dl,BYTE PTR [ebp+0x18]
100116c6:	mov    BYTE PTR [ecx+0x20],dl
100116c9:	mov    eax,DWORD PTR [ebp-0x4]
100116cc:	mov    BYTE PTR [eax+0x21],0x0
100116d0:	mov    eax,DWORD PTR [ebp-0x4]
100116d3:	mov    esp,ebp
100116d5:	pop    ebp
100116d6:	ret    0x14
100116d9:	int3   
100116da:	int3   
100116db:	int3   
100116dc:	int3   
100116dd:	int3   
100116de:	int3   
100116df:	int3   
100116e0:	push   ebp
100116e1:	mov    ebp,esp
100116e3:	lea    eax,[ebp+0x10]
100116e6:	push   eax
100116e7:	lea    ecx,[ebp+0xc]
100116ea:	push   ecx
100116eb:	mov    ecx,DWORD PTR [ebp+0x8]
100116ee:	call   0x10011780
100116f3:	mov    eax,DWORD PTR [ebp+0x8]
100116f6:	pop    ebp
100116f7:	ret    
100116f8:	int3   
100116f9:	int3   
100116fa:	int3   
100116fb:	int3   
100116fc:	int3   
100116fd:	int3   
100116fe:	int3   
100116ff:	int3   
10011700:	push   ebp
10011701:	mov    ebp,esp
10011703:	push   ecx
10011704:	mov    DWORD PTR [ebp-0x4],ecx
10011707:	mov    eax,DWORD PTR [ebp-0x4]
1001170a:	mov    ecx,DWORD PTR [ebp+0x8]
1001170d:	mov    edx,DWORD PTR [ecx]
1001170f:	mov    DWORD PTR [eax],edx
10011711:	mov    eax,DWORD PTR [ebp-0x4]
10011714:	mov    ecx,DWORD PTR [ebp+0x8]
10011717:	mov    edx,DWORD PTR [ecx+0x8]
1001171a:	mov    DWORD PTR [eax+0x8],edx
1001171d:	mov    ecx,DWORD PTR [ecx+0xc]
10011720:	mov    DWORD PTR [eax+0xc],ecx
10011723:	mov    eax,DWORD PTR [ebp-0x4]
10011726:	mov    esp,ebp
10011728:	pop    ebp
10011729:	ret    0x4
1001172c:	int3   
1001172d:	int3   
1001172e:	int3   
1001172f:	int3   
10011730:	push   ebp
10011731:	mov    ebp,esp
10011733:	sub    esp,0xc
10011736:	cmp    DWORD PTR [ebp+0x8],0x0
1001173a:	ja     0x10011745
1001173c:	mov    DWORD PTR [ebp+0x8],0x0
10011743:	jmp    0x1001176a
10011745:	or     eax,0xffffffff
10011748:	xor    edx,edx
1001174a:	div    DWORD PTR [ebp+0x8]
1001174d:	cmp    eax,0x28
10011750:	jae    0x1001176a
10011752:	push   0x0
10011754:	lea    ecx,[ebp-0xc]
10011757:	call   0x10001290
1001175c:	push   0x10085d44
10011761:	lea    eax,[ebp-0xc]
10011764:	push   eax
10011765:	call   0x1001621e
1001176a:	mov    ecx,DWORD PTR [ebp+0x8]
1001176d:	imul   ecx,ecx,0x28
10011770:	push   ecx
10011771:	call   0x10016464
10011776:	add    esp,0x4
10011779:	mov    esp,ebp
1001177b:	pop    ebp
1001177c:	ret    
1001177d:	int3   
1001177e:	int3   
1001177f:	int3   
10011780:	push   ebp
10011781:	mov    ebp,esp
10011783:	push   ecx
10011784:	mov    DWORD PTR [ebp-0x4],ecx
10011787:	mov    eax,DWORD PTR [ebp-0x4]
1001178a:	mov    ecx,DWORD PTR [ebp+0x8]
1001178d:	mov    edx,DWORD PTR [ecx]
1001178f:	mov    DWORD PTR [eax],edx
10011791:	mov    eax,DWORD PTR [ebp-0x4]
10011794:	mov    ecx,DWORD PTR [ebp+0xc]
10011797:	mov    edx,DWORD PTR [ecx]
10011799:	mov    DWORD PTR [eax+0x8],edx
1001179c:	mov    ecx,DWORD PTR [ecx+0x4]
1001179f:	mov    DWORD PTR [eax+0xc],ecx
100117a2:	mov    eax,DWORD PTR [ebp-0x4]
100117a5:	mov    esp,ebp
100117a7:	pop    ebp
100117a8:	ret    0x8
100117ab:	int3   
100117ac:	int3   
100117ad:	int3   
100117ae:	int3   
100117af:	int3   
100117b0:	push   ebp
100117b1:	mov    ebp,esp
100117b3:	sub    esp,0x8
100117b6:	mov    DWORD PTR [ebp-0x8],ecx
100117b9:	lea    ecx,[ebp-0x1]
100117bc:	call   0x10011820
100117c1:	push   eax
100117c2:	lea    eax,[ebp-0x2]
100117c5:	push   eax
100117c6:	mov    ecx,DWORD PTR [ebp-0x8]
100117c9:	call   0x100117e0
100117ce:	mov    eax,DWORD PTR [ebp-0x8]
100117d1:	mov    esp,ebp
100117d3:	pop    ebp
100117d4:	ret    
100117d5:	int3   
100117d6:	int3   
100117d7:	int3   
100117d8:	int3   
100117d9:	int3   
100117da:	int3   
100117db:	int3   
100117dc:	int3   
100117dd:	int3   
100117de:	int3   
100117df:	int3   
100117e0:	push   ebp
100117e1:	mov    ebp,esp
100117e3:	sub    esp,0x8
100117e6:	mov    DWORD PTR [ebp-0x8],ecx
100117e9:	push   ecx
100117ea:	mov    ecx,esp
100117ec:	mov    eax,DWORD PTR [ebp+0xc]
100117ef:	push   eax
100117f0:	call   0x10011b00
100117f5:	mov    ecx,DWORD PTR [ebp+0x8]
100117f8:	push   ecx
100117f9:	mov    ecx,DWORD PTR [ebp-0x8]
100117fc:	call   0x100118a0
10011801:	mov    ecx,DWORD PTR [ebp-0x8]
10011804:	call   0x10011830
10011809:	mov    eax,DWORD PTR [ebp-0x8]
1001180c:	mov    esp,ebp
1001180e:	pop    ebp
1001180f:	ret    0x8
10011812:	int3   
10011813:	int3   
10011814:	int3   
10011815:	int3   
10011816:	int3   
10011817:	int3   
10011818:	int3   
10011819:	int3   
1001181a:	int3   
1001181b:	int3   
1001181c:	int3   
1001181d:	int3   
1001181e:	int3   
1001181f:	int3   
10011820:	push   ebp
10011821:	mov    ebp,esp
10011823:	push   ecx
10011824:	mov    DWORD PTR [ebp-0x4],ecx
10011827:	mov    eax,DWORD PTR [ebp-0x4]
1001182a:	mov    esp,ebp
1001182c:	pop    ebp
1001182d:	ret    
1001182e:	int3   
1001182f:	int3   
10011830:	push   ebp
10011831:	mov    ebp,esp
10011833:	push   ecx
10011834:	mov    DWORD PTR [ebp-0x4],ecx
10011837:	mov    ecx,DWORD PTR [ebp-0x4]
1001183a:	call   0x100118e0
1001183f:	mov    ecx,DWORD PTR [ebp-0x4]
10011842:	mov    DWORD PTR [ecx+0x4],eax
10011845:	mov    edx,DWORD PTR [ebp-0x4]
10011848:	mov    eax,DWORD PTR [edx+0x4]
1001184b:	push   eax
1001184c:	call   0x10010880
10011851:	add    esp,0x4
10011854:	mov    BYTE PTR [eax],0x1
10011857:	mov    ecx,DWORD PTR [ebp-0x4]
1001185a:	call   0x10010f70
1001185f:	mov    ecx,DWORD PTR [ebp-0x4]
10011862:	mov    edx,DWORD PTR [ecx+0x4]
10011865:	mov    DWORD PTR [eax],edx
10011867:	mov    ecx,DWORD PTR [ebp-0x4]
1001186a:	call   0x10010d80
1001186f:	mov    ecx,DWORD PTR [ebp-0x4]
10011872:	mov    edx,DWORD PTR [ecx+0x4]
10011875:	mov    DWORD PTR [eax],edx
10011877:	mov    ecx,DWORD PTR [ebp-0x4]
1001187a:	call   0x10010f50
1001187f:	mov    ecx,DWORD PTR [ebp-0x4]
10011882:	mov    edx,DWORD PTR [ecx+0x4]
10011885:	mov    DWORD PTR [eax],edx
10011887:	mov    eax,DWORD PTR [ebp-0x4]
1001188a:	mov    DWORD PTR [eax+0x8],0x0
10011891:	mov    esp,ebp
10011893:	pop    ebp
10011894:	ret    
10011895:	int3   
10011896:	int3   
10011897:	int3   
10011898:	int3   
10011899:	int3   
1001189a:	int3   
1001189b:	int3   
1001189c:	int3   
1001189d:	int3   
1001189e:	int3   
1001189f:	int3   
100118a0:	push   ebp
100118a1:	mov    ebp,esp
100118a3:	sub    esp,0x8
100118a6:	mov    DWORD PTR [ebp-0x8],ecx
100118a9:	push   ecx
100118aa:	mov    ecx,esp
100118ac:	lea    eax,[ebp+0xc]
100118af:	push   eax
100118b0:	call   0x10011b00
100118b5:	mov    ecx,DWORD PTR [ebp+0x8]
100118b8:	push   ecx
100118b9:	mov    ecx,DWORD PTR [ebp-0x8]
100118bc:	call   0x10011a60
100118c1:	lea    edx,[ebp+0xc]
100118c4:	push   edx
100118c5:	mov    ecx,DWORD PTR [ebp-0x8]
100118c8:	add    ecx,0x3
100118cb:	call   0x10011b00
100118d0:	mov    eax,DWORD PTR [ebp-0x8]
100118d3:	mov    esp,ebp
100118d5:	pop    ebp
100118d6:	ret    0x8
100118d9:	int3   
100118da:	int3   
100118db:	int3   
100118dc:	int3   
100118dd:	int3   
100118de:	int3   
100118df:	int3   
100118e0:	push   ebp
100118e1:	mov    ebp,esp
100118e3:	push   0xffffffff
100118e5:	push   0x1002a640
100118ea:	mov    eax,fs:0x0
100118f0:	push   eax
100118f1:	push   ecx
100118f2:	sub    esp,0x24
100118f5:	push   ebx
100118f6:	push   esi
100118f7:	push   edi
100118f8:	mov    eax,ds:0x100951fc
100118fd:	xor    eax,ebp
100118ff:	push   eax
10011900:	lea    eax,[ebp-0xc]
10011903:	mov    fs:0x0,eax
10011909:	mov    DWORD PTR [ebp-0x10],esp
1001190c:	mov    DWORD PTR [ebp-0x28],ecx
1001190f:	push   0x1
10011911:	mov    ecx,DWORD PTR [ebp-0x28]
10011914:	add    ecx,0x1
10011917:	call   0x10011540
1001191c:	mov    DWORD PTR [ebp-0x18],eax
1001191f:	mov    DWORD PTR [ebp-0x14],0x0
10011926:	mov    DWORD PTR [ebp-0x4],0x0
1001192d:	mov    DWORD PTR [ebp-0x1c],0x0
10011934:	mov    eax,DWORD PTR [ebp-0x18]
10011937:	push   eax
10011938:	call   0x100110c0
1001193d:	add    esp,0x4
10011940:	mov    DWORD PTR [ebp-0x2c],eax
10011943:	lea    ecx,[ebp-0x1c]
10011946:	push   ecx
10011947:	mov    edx,DWORD PTR [ebp-0x2c]
1001194a:	push   edx
1001194b:	mov    ecx,DWORD PTR [ebp-0x28]
1001194e:	add    ecx,0x2
10011951:	call   0x10011ad0
10011956:	mov    eax,DWORD PTR [ebp-0x14]
10011959:	add    eax,0x1
1001195c:	mov    DWORD PTR [ebp-0x14],eax
1001195f:	mov    DWORD PTR [ebp-0x20],0x0
10011966:	mov    ecx,DWORD PTR [ebp-0x18]
10011969:	push   ecx
1001196a:	call   0x100108b0
1001196f:	add    esp,0x4
10011972:	mov    DWORD PTR [ebp-0x30],eax
10011975:	lea    edx,[ebp-0x20]
10011978:	push   edx
10011979:	mov    eax,DWORD PTR [ebp-0x30]
1001197c:	push   eax
1001197d:	mov    ecx,DWORD PTR [ebp-0x28]
10011980:	add    ecx,0x2
10011983:	call   0x10011ad0
10011988:	mov    ecx,DWORD PTR [ebp-0x14]
1001198b:	add    ecx,0x1
1001198e:	mov    DWORD PTR [ebp-0x14],ecx
10011991:	mov    DWORD PTR [ebp-0x24],0x0
10011998:	mov    edx,DWORD PTR [ebp-0x18]
1001199b:	push   edx
1001199c:	call   0x100108c0
100119a1:	add    esp,0x4
100119a4:	mov    DWORD PTR [ebp-0x34],eax
100119a7:	lea    eax,[ebp-0x24]
100119aa:	push   eax
100119ab:	mov    ecx,DWORD PTR [ebp-0x34]
100119ae:	push   ecx
100119af:	mov    ecx,DWORD PTR [ebp-0x28]
100119b2:	add    ecx,0x2
100119b5:	call   0x10011ad0
100119ba:	jmp    0x10011a1f
100119bc:	cmp    DWORD PTR [ebp-0x14],0x1
100119c0:	jle    0x100119da
100119c2:	mov    edx,DWORD PTR [ebp-0x18]
100119c5:	push   edx
100119c6:	call   0x100108b0
100119cb:	add    esp,0x4
100119ce:	push   eax
100119cf:	mov    ecx,DWORD PTR [ebp-0x28]
100119d2:	add    ecx,0x2
100119d5:	call   0x10011110
100119da:	cmp    DWORD PTR [ebp-0x14],0x0
100119de:	jle    0x100119f8
100119e0:	mov    eax,DWORD PTR [ebp-0x18]
100119e3:	push   eax
100119e4:	call   0x100110c0
100119e9:	add    esp,0x4
100119ec:	push   eax
100119ed:	mov    ecx,DWORD PTR [ebp-0x28]
100119f0:	add    ecx,0x2
100119f3:	call   0x10011110
100119f8:	push   0x1
100119fa:	mov    ecx,DWORD PTR [ebp-0x18]
100119fd:	push   ecx
100119fe:	mov    ecx,DWORD PTR [ebp-0x28]
10011a01:	add    ecx,0x1
10011a04:	call   0x100110f0
10011a09:	push   0x0
10011a0b:	push   0x0
10011a0d:	call   0x1001621e
10011a12:	mov    DWORD PTR [ebp-0x4],0xffffffff
10011a19:	mov    eax,0x10011a26
10011a1e:	ret    
10011a1f:	mov    DWORD PTR [ebp-0x4],0xffffffff
10011a26:	mov    edx,DWORD PTR [ebp-0x18]
10011a29:	push   edx
10011a2a:	call   0x10010870
10011a2f:	add    esp,0x4
10011a32:	mov    BYTE PTR [eax],0x1
10011a35:	mov    eax,DWORD PTR [ebp-0x18]
10011a38:	push   eax
10011a39:	call   0x10010880
10011a3e:	add    esp,0x4
10011a41:	mov    BYTE PTR [eax],0x0
10011a44:	mov    eax,DWORD PTR [ebp-0x18]
10011a47:	mov    ecx,DWORD PTR [ebp-0xc]
10011a4a:	mov    DWORD PTR fs:0x0,ecx
10011a51:	pop    ecx
10011a52:	pop    edi
10011a53:	pop    esi
10011a54:	pop    ebx
10011a55:	mov    esp,ebp
10011a57:	pop    ebp
10011a58:	ret    
10011a59:	int3   
10011a5a:	int3   
10011a5b:	int3   
10011a5c:	int3   
10011a5d:	int3   
10011a5e:	int3   
10011a5f:	int3   
10011a60:	push   ebp
10011a61:	mov    ebp,esp
10011a63:	sub    esp,0x8
10011a66:	mov    DWORD PTR [ebp-0x8],ecx
10011a69:	push   ecx
10011a6a:	mov    ecx,esp
10011a6c:	lea    eax,[ebp+0xc]
10011a6f:	push   eax
10011a70:	call   0x10011b00
10011a75:	mov    ecx,DWORD PTR [ebp+0x8]
10011a78:	push   ecx
10011a79:	mov    ecx,DWORD PTR [ebp-0x8]
10011a7c:	call   0x10011aa0
10011a81:	lea    edx,[ebp+0xc]
10011a84:	push   edx
10011a85:	mov    ecx,DWORD PTR [ebp-0x8]
10011a88:	add    ecx,0x2
10011a8b:	call   0x10011b00
10011a90:	mov    eax,DWORD PTR [ebp-0x8]
10011a93:	mov    esp,ebp
10011a95:	pop    ebp
10011a96:	ret    0x8
10011a99:	int3   
10011a9a:	int3   
10011a9b:	int3   
10011a9c:	int3   
10011a9d:	int3   
10011a9e:	int3   
10011a9f:	int3   
10011aa0:	push   ebp
10011aa1:	mov    ebp,esp
10011aa3:	push   ecx
10011aa4:	mov    DWORD PTR [ebp-0x4],ecx
10011aa7:	mov    eax,DWORD PTR [ebp+0x8]
10011aaa:	mov    cl,BYTE PTR [eax]
10011aac:	push   ecx
10011aad:	mov    ecx,DWORD PTR [ebp-0x4]
10011ab0:	call   0x10011b00
10011ab5:	lea    edx,[ebp+0xc]
10011ab8:	push   edx
10011ab9:	mov    ecx,DWORD PTR [ebp-0x4]
10011abc:	add    ecx,0x1
10011abf:	call   0x10011b00
10011ac4:	mov    eax,DWORD PTR [ebp-0x4]
10011ac7:	mov    esp,ebp
10011ac9:	pop    ebp
10011aca:	ret    0x8
10011acd:	int3   
10011ace:	int3   
10011acf:	int3   
10011ad0:	push   ebp
10011ad1:	mov    ebp,esp
10011ad3:	push   ecx
10011ad4:	mov    DWORD PTR [ebp-0x4],ecx
10011ad7:	mov    eax,DWORD PTR [ebp+0xc]
10011ada:	push   eax
10011adb:	mov    ecx,DWORD PTR [ebp+0x8]
10011ade:	push   ecx
10011adf:	call   0x10011b10
10011ae4:	add    esp,0x8
10011ae7:	mov    esp,ebp
10011ae9:	pop    ebp
10011aea:	ret    0x8
10011aed:	int3   
10011aee:	int3   
10011aef:	int3   
10011af0:	push   ebp
10011af1:	mov    ebp,esp
10011af3:	pop    ebp
10011af4:	ret    
10011af5:	int3   
10011af6:	int3   
10011af7:	int3   
10011af8:	int3   
10011af9:	int3   
10011afa:	int3   
10011afb:	int3   
10011afc:	int3   
10011afd:	int3   
10011afe:	int3   
10011aff:	int3   
10011b00:	push   ebp
10011b01:	mov    ebp,esp
10011b03:	push   ecx
10011b04:	mov    DWORD PTR [ebp-0x4],ecx
10011b07:	mov    eax,DWORD PTR [ebp-0x4]
10011b0a:	mov    esp,ebp
10011b0c:	pop    ebp
10011b0d:	ret    0x4
10011b10:	push   ebp
10011b11:	mov    ebp,esp
10011b13:	sub    esp,0xc
10011b16:	mov    eax,DWORD PTR [ebp+0x8]
10011b19:	mov    DWORD PTR [ebp-0x4],eax
10011b1c:	mov    ecx,DWORD PTR [ebp-0x4]
10011b1f:	push   ecx
10011b20:	push   0x4
10011b22:	call   0x10001270
10011b27:	add    esp,0x8
10011b2a:	mov    DWORD PTR [ebp-0x8],eax
10011b2d:	cmp    DWORD PTR [ebp-0x8],0x0
10011b31:	je     0x10011b45
10011b33:	mov    edx,DWORD PTR [ebp-0x8]
10011b36:	mov    eax,DWORD PTR [ebp+0xc]
10011b39:	mov    ecx,DWORD PTR [eax]
10011b3b:	mov    DWORD PTR [edx],ecx
10011b3d:	mov    edx,DWORD PTR [ebp-0x8]
10011b40:	mov    DWORD PTR [ebp-0xc],edx
10011b43:	jmp    0x10011b4c
10011b45:	mov    DWORD PTR [ebp-0xc],0x0
10011b4c:	mov    esp,ebp
10011b4e:	pop    ebp
10011b4f:	ret    
10011b50:	push   ebp
10011b51:	mov    ebp,esp
10011b53:	push   ecx
10011b54:	mov    DWORD PTR [ebp-0x4],ecx
10011b57:	mov    ecx,DWORD PTR [ebp-0x4]
10011b5a:	call   0x10011b70
10011b5f:	mov    esp,ebp
10011b61:	pop    ebp
10011b62:	ret    
10011b63:	int3   
10011b64:	int3   
10011b65:	int3   
10011b66:	int3   
10011b67:	int3   
10011b68:	int3   
10011b69:	int3   
10011b6a:	int3   
10011b6b:	int3   
10011b6c:	int3   
10011b6d:	int3   
10011b6e:	int3   
10011b6f:	int3   
10011b70:	push   ebp
10011b71:	mov    ebp,esp
10011b73:	push   ecx
10011b74:	mov    DWORD PTR [ebp-0x4],ecx
10011b77:	mov    ecx,DWORD PTR [ebp-0x4]
10011b7a:	call   0x10011b90
10011b7f:	mov    esp,ebp
10011b81:	pop    ebp
10011b82:	ret    
10011b83:	int3   
10011b84:	int3   
10011b85:	int3   
10011b86:	int3   
10011b87:	int3   
10011b88:	int3   
10011b89:	int3   
10011b8a:	int3   
10011b8b:	int3   
10011b8c:	int3   
10011b8d:	int3   
10011b8e:	int3   
10011b8f:	int3   
10011b90:	push   ebp
10011b91:	mov    ebp,esp
10011b93:	sub    esp,0x1c
10011b96:	mov    DWORD PTR [ebp-0x1c],ecx
10011b99:	lea    eax,[ebp-0x8]
10011b9c:	push   eax
10011b9d:	mov    ecx,DWORD PTR [ebp-0x1c]
10011ba0:	call   0x1000fd70
10011ba5:	mov    ecx,DWORD PTR [eax+0x4]
10011ba8:	push   ecx
10011ba9:	mov    edx,DWORD PTR [eax]
10011bab:	push   edx
10011bac:	lea    eax,[ebp-0x10]
10011baf:	push   eax
10011bb0:	mov    ecx,DWORD PTR [ebp-0x1c]
10011bb3:	call   0x1000fd40
10011bb8:	mov    ecx,DWORD PTR [eax+0x4]
10011bbb:	push   ecx
10011bbc:	mov    edx,DWORD PTR [eax]
10011bbe:	push   edx
10011bbf:	lea    eax,[ebp-0x18]
10011bc2:	push   eax
10011bc3:	mov    ecx,DWORD PTR [ebp-0x1c]
10011bc6:	call   0x10011c50
10011bcb:	mov    ecx,DWORD PTR [ebp-0x1c]
10011bce:	mov    edx,DWORD PTR [ecx+0x4]
10011bd1:	push   edx
10011bd2:	call   0x100110c0
10011bd7:	add    esp,0x4
10011bda:	push   eax
10011bdb:	mov    ecx,DWORD PTR [ebp-0x1c]
10011bde:	add    ecx,0x2
10011be1:	call   0x10011110
10011be6:	mov    eax,DWORD PTR [ebp-0x1c]
10011be9:	mov    ecx,DWORD PTR [eax+0x4]
10011bec:	push   ecx
10011bed:	call   0x100108b0
10011bf2:	add    esp,0x4
10011bf5:	push   eax
10011bf6:	mov    ecx,DWORD PTR [ebp-0x1c]
10011bf9:	add    ecx,0x2
10011bfc:	call   0x10011110
10011c01:	mov    edx,DWORD PTR [ebp-0x1c]
10011c04:	mov    eax,DWORD PTR [edx+0x4]
10011c07:	push   eax
10011c08:	call   0x100108c0
10011c0d:	add    esp,0x4
10011c10:	push   eax
10011c11:	mov    ecx,DWORD PTR [ebp-0x1c]
10011c14:	add    ecx,0x2
10011c17:	call   0x10011110
10011c1c:	push   0x1
10011c1e:	mov    ecx,DWORD PTR [ebp-0x1c]
10011c21:	mov    edx,DWORD PTR [ecx+0x4]
10011c24:	push   edx
10011c25:	mov    ecx,DWORD PTR [ebp-0x1c]
10011c28:	add    ecx,0x1
10011c2b:	call   0x100110f0
10011c30:	mov    eax,DWORD PTR [ebp-0x1c]
10011c33:	mov    DWORD PTR [eax+0x4],0x0
10011c3a:	mov    ecx,DWORD PTR [ebp-0x1c]
10011c3d:	mov    DWORD PTR [ecx+0x8],0x0
10011c44:	mov    esp,ebp
10011c46:	pop    ebp
10011c47:	ret    
10011c48:	int3   
10011c49:	int3   
10011c4a:	int3   
10011c4b:	int3   
10011c4c:	int3   
10011c4d:	int3   
10011c4e:	int3   
10011c4f:	int3   
10011c50:	push   ebp
10011c51:	mov    ebp,esp
10011c53:	sub    esp,0x24
10011c56:	mov    DWORD PTR [ebp-0x24],ecx
10011c59:	lea    eax,[ebp-0x8]
10011c5c:	push   eax
10011c5d:	mov    ecx,DWORD PTR [ebp-0x24]
10011c60:	call   0x1000fd40
10011c65:	push   eax
10011c66:	lea    ecx,[ebp+0xc]
10011c69:	call   0x10010800
10011c6e:	movzx  ecx,al
10011c71:	test   ecx,ecx
10011c73:	je     0x10011cac
10011c75:	lea    edx,[ebp-0x10]
10011c78:	push   edx
10011c79:	mov    ecx,DWORD PTR [ebp-0x24]
10011c7c:	call   0x1000fd70
10011c81:	push   eax
10011c82:	lea    ecx,[ebp+0x14]
10011c85:	call   0x10010800
10011c8a:	movzx  eax,al
10011c8d:	test   eax,eax
10011c8f:	je     0x10011cac
10011c91:	mov    ecx,DWORD PTR [ebp-0x24]
10011c94:	call   0x10011d00
10011c99:	mov    ecx,DWORD PTR [ebp+0x8]
10011c9c:	push   ecx
10011c9d:	mov    ecx,DWORD PTR [ebp-0x24]
10011ca0:	call   0x1000fd40
10011ca5:	mov    eax,DWORD PTR [ebp+0x8]
10011ca8:	jmp    0x10011cf3
10011caa:	jmp    0x10011cf3
10011cac:	lea    edx,[ebp+0x14]
10011caf:	push   edx
10011cb0:	lea    ecx,[ebp+0xc]
10011cb3:	call   0x10010840
10011cb8:	movzx  eax,al
10011cbb:	test   eax,eax
10011cbd:	je     0x10011ce2
10011cbf:	push   0x0
10011cc1:	lea    ecx,[ebp-0x18]
10011cc4:	push   ecx
10011cc5:	lea    ecx,[ebp+0xc]
10011cc8:	call   0x10011d60
10011ccd:	mov    edx,DWORD PTR [eax+0x4]
10011cd0:	push   edx
10011cd1:	mov    eax,DWORD PTR [eax]
10011cd3:	push   eax
10011cd4:	lea    ecx,[ebp-0x20]
10011cd7:	push   ecx
10011cd8:	mov    ecx,DWORD PTR [ebp-0x24]
10011cdb:	call   0x1000ff60
10011ce0:	jmp    0x10011cac
10011ce2:	mov    edx,DWORD PTR [ebp+0x8]
10011ce5:	mov    eax,DWORD PTR [ebp+0xc]
10011ce8:	mov    DWORD PTR [edx],eax
10011cea:	mov    ecx,DWORD PTR [ebp+0x10]
10011ced:	mov    DWORD PTR [edx+0x4],ecx
10011cf0:	mov    eax,DWORD PTR [ebp+0x8]
10011cf3:	mov    esp,ebp
10011cf5:	pop    ebp
10011cf6:	ret    0x14
10011cf9:	int3   
10011cfa:	int3   
10011cfb:	int3   
10011cfc:	int3   
10011cfd:	int3   
10011cfe:	int3   
10011cff:	int3   
10011d00:	push   ebp
10011d01:	mov    ebp,esp
10011d03:	push   ecx
10011d04:	mov    DWORD PTR [ebp-0x4],ecx
10011d07:	mov    ecx,DWORD PTR [ebp-0x4]
10011d0a:	call   0x10010f70
10011d0f:	mov    eax,DWORD PTR [eax]
10011d11:	push   eax
10011d12:	mov    ecx,DWORD PTR [ebp-0x4]
10011d15:	call   0x10011da0
10011d1a:	mov    ecx,DWORD PTR [ebp-0x4]
10011d1d:	call   0x10010f70
10011d22:	mov    ecx,DWORD PTR [ebp-0x4]
10011d25:	mov    edx,DWORD PTR [ecx+0x4]
10011d28:	mov    DWORD PTR [eax],edx
10011d2a:	mov    eax,DWORD PTR [ebp-0x4]
10011d2d:	mov    DWORD PTR [eax+0x8],0x0
10011d34:	mov    ecx,DWORD PTR [ebp-0x4]
10011d37:	call   0x10010d80
10011d3c:	mov    ecx,DWORD PTR [ebp-0x4]
10011d3f:	mov    edx,DWORD PTR [ecx+0x4]
10011d42:	mov    DWORD PTR [eax],edx
10011d44:	mov    ecx,DWORD PTR [ebp-0x4]
10011d47:	call   0x10010f50
10011d4c:	mov    ecx,DWORD PTR [ebp-0x4]
10011d4f:	mov    edx,DWORD PTR [ecx+0x4]
10011d52:	mov    DWORD PTR [eax],edx
10011d54:	mov    esp,ebp
10011d56:	pop    ebp
10011d57:	ret    
10011d58:	int3   
10011d59:	int3   
10011d5a:	int3   
10011d5b:	int3   
10011d5c:	int3   
10011d5d:	int3   
10011d5e:	int3   
10011d5f:	int3   
10011d60:	push   ebp
10011d61:	mov    ebp,esp
10011d63:	sub    esp,0xc
10011d66:	mov    DWORD PTR [ebp-0xc],ecx
10011d69:	mov    eax,DWORD PTR [ebp-0xc]
10011d6c:	mov    ecx,DWORD PTR [eax]
10011d6e:	mov    edx,DWORD PTR [eax+0x4]
10011d71:	mov    DWORD PTR [ebp-0x8],ecx
10011d74:	mov    DWORD PTR [ebp-0x4],edx
10011d77:	mov    ecx,DWORD PTR [ebp-0xc]
10011d7a:	call   0x100107e0
10011d7f:	mov    eax,DWORD PTR [ebp+0x8]
10011d82:	mov    ecx,DWORD PTR [ebp-0x8]
10011d85:	mov    DWORD PTR [eax],ecx
10011d87:	mov    edx,DWORD PTR [ebp-0x4]
10011d8a:	mov    DWORD PTR [eax+0x4],edx
10011d8d:	mov    eax,DWORD PTR [ebp+0x8]
10011d90:	mov    esp,ebp
10011d92:	pop    ebp
10011d93:	ret    0x8
10011d96:	int3   
10011d97:	int3   
10011d98:	int3   
10011d99:	int3   
10011d9a:	int3   
10011d9b:	int3   
10011d9c:	int3   
10011d9d:	int3   
10011d9e:	int3   
10011d9f:	int3   
10011da0:	push   ebp
10011da1:	mov    ebp,esp
10011da3:	sub    esp,0x8
10011da6:	mov    DWORD PTR [ebp-0x8],ecx
10011da9:	mov    eax,DWORD PTR [ebp+0x8]
10011dac:	mov    DWORD PTR [ebp-0x4],eax
10011daf:	jmp    0x10011db7
10011db1:	mov    ecx,DWORD PTR [ebp-0x4]
10011db4:	mov    DWORD PTR [ebp+0x8],ecx
10011db7:	mov    edx,DWORD PTR [ebp-0x4]
10011dba:	push   edx
10011dbb:	call   0x10010880
10011dc0:	add    esp,0x4
10011dc3:	movsx  eax,BYTE PTR [eax]
10011dc6:	test   eax,eax
10011dc8:	jne    0x10011e14
10011dca:	mov    ecx,DWORD PTR [ebp-0x4]
10011dcd:	push   ecx
10011dce:	call   0x100108c0
10011dd3:	add    esp,0x4
10011dd6:	mov    edx,DWORD PTR [eax]
10011dd8:	push   edx
10011dd9:	mov    ecx,DWORD PTR [ebp-0x8]
10011ddc:	call   0x10011da0
10011de1:	mov    eax,DWORD PTR [ebp-0x4]
10011de4:	push   eax
10011de5:	call   0x100110c0
10011dea:	add    esp,0x4
10011ded:	mov    ecx,DWORD PTR [eax]
10011def:	mov    DWORD PTR [ebp-0x4],ecx
10011df2:	mov    edx,DWORD PTR [ebp+0x8]
10011df5:	push   edx
10011df6:	mov    ecx,DWORD PTR [ebp-0x8]
10011df9:	add    ecx,0x1
10011dfc:	call   0x10011110
10011e01:	push   0x1
10011e03:	mov    eax,DWORD PTR [ebp+0x8]
10011e06:	push   eax
10011e07:	mov    ecx,DWORD PTR [ebp-0x8]
10011e0a:	add    ecx,0x1
10011e0d:	call   0x100110f0
10011e12:	jmp    0x10011db1
10011e14:	mov    esp,ebp
10011e16:	pop    ebp
10011e17:	ret    0x4
10011e1a:	int3   
10011e1b:	int3   
10011e1c:	int3   
10011e1d:	int3   
10011e1e:	int3   
10011e1f:	int3   
10011e20:	push   ebp
10011e21:	mov    ebp,esp
10011e23:	cmp    DWORD PTR [ebp+0xc],0xb4
10011e2a:	je     0x10011e30
10011e2c:	xor    al,al
10011e2e:	jmp    0x10011e48
10011e30:	push   0xb4
10011e35:	mov    eax,DWORD PTR [ebp+0x8]
10011e38:	push   eax
10011e39:	push   0x10096bc0
10011e3e:	call   0x10016820
10011e43:	add    esp,0xc
10011e46:	mov    al,0x1
10011e48:	pop    ebp
10011e49:	ret    
10011e4a:	int3   
10011e4b:	int3   
10011e4c:	int3   
10011e4d:	int3   
10011e4e:	int3   
10011e4f:	int3   
10011e50:	push   ebp
10011e51:	mov    ebp,esp
10011e53:	push   ecx
10011e54:	mov    eax,DWORD PTR [ebp+0x8]
10011e57:	mov    DWORD PTR [ebp-0x4],eax
10011e5a:	mov    ecx,DWORD PTR [ebp-0x4]
10011e5d:	cmp    DWORD PTR [ecx+0x4],0xb4
10011e64:	jae    0x10011e7d
10011e66:	mov    edx,DWORD PTR [ebp-0x4]
10011e69:	mov    DWORD PTR [edx+0x4],0xb4
10011e70:	mov    eax,DWORD PTR [ebp-0x4]
10011e73:	mov    DWORD PTR [eax],0x1
10011e79:	mov    al,0x1
10011e7b:	jmp    0x10011eab
10011e7d:	mov    ecx,DWORD PTR [ebp-0x4]
10011e80:	mov    DWORD PTR [ecx],0x0
10011e86:	mov    edx,DWORD PTR [ebp-0x4]
10011e89:	mov    DWORD PTR [edx+0x4],0xb4
10011e90:	push   0xb4
10011e95:	push   0x10096bc0
10011e9a:	mov    eax,DWORD PTR [ebp-0x4]
10011e9d:	add    eax,0x8
10011ea0:	push   eax
10011ea1:	call   0x10016820
10011ea6:	add    esp,0xc
10011ea9:	mov    al,0x1
10011eab:	mov    esp,ebp
10011ead:	pop    ebp
10011eae:	ret    
10011eaf:	int3   
10011eb0:	push   ebp
10011eb1:	mov    ebp,esp
10011eb3:	push   0xffffffff
10011eb5:	push   0x1002a668
10011eba:	mov    eax,fs:0x0
10011ec0:	push   eax
10011ec1:	sub    esp,0xc
10011ec4:	mov    eax,ds:0x100951fc
10011ec9:	xor    eax,ebp
10011ecb:	push   eax
10011ecc:	lea    eax,[ebp-0xc]
10011ecf:	mov    fs:0x0,eax
10011ed5:	lea    eax,[ebp-0x14]
10011ed8:	push   eax
10011ed9:	call   0x1000f430
10011ede:	add    esp,0x4
10011ee1:	mov    DWORD PTR [ebp-0x4],0x0
10011ee8:	lea    ecx,[ebp-0x14]
10011eeb:	call   0x10003190
10011ef0:	push   eax
10011ef1:	call   0x100110c0
10011ef6:	add    esp,0x4
10011ef9:	push   eax
10011efa:	call   DWORD PTR ds:0x10034098
10011f00:	mov    DWORD PTR [ebp-0x10],eax
10011f03:	xor    ecx,ecx
10011f05:	cmp    DWORD PTR [ebp-0x10],0x0
10011f09:	setne  cl
10011f0c:	mov    BYTE PTR [ebp-0x15],cl
10011f0f:	mov    DWORD PTR [ebp-0x4],0xffffffff
10011f16:	lea    ecx,[ebp-0x14]
10011f19:	call   0x10003b40
10011f1e:	mov    al,BYTE PTR [ebp-0x15]
10011f21:	mov    ecx,DWORD PTR [ebp-0xc]
10011f24:	mov    DWORD PTR fs:0x0,ecx
10011f2b:	pop    ecx
10011f2c:	mov    esp,ebp
10011f2e:	pop    ebp
10011f2f:	ret    
10011f30:	push   ebp
10011f31:	mov    ebp,esp
10011f33:	sub    esp,0x18
10011f36:	cmp    DWORD PTR [ebp+0xc],0xa
10011f3a:	jae    0x10011f43
10011f3c:	xor    al,al
10011f3e:	jmp    0x10012019
10011f43:	mov    eax,DWORD PTR [ebp+0x8]
10011f46:	mov    DWORD PTR [ebp-0x8],eax
10011f49:	mov    ecx,DWORD PTR [ebp-0x8]
10011f4c:	mov    dx,WORD PTR [ecx+0x8]
10011f50:	mov    WORD PTR [ebp-0x4],dx
10011f54:	call   DWORD PTR ds:0x100340d0
10011f5a:	push   eax
10011f5b:	call   0x10002b40
10011f60:	add    esp,0x4
10011f63:	mov    WORD PTR [ebp-0x14],ax
10011f67:	mov    DWORD PTR [ebp-0x10],0x0
10011f6e:	mov    DWORD PTR [ebp-0xc],0x0
10011f75:	movzx  eax,WORD PTR [ebp-0x4]
10011f79:	mov    DWORD PTR [ebp-0x18],eax
10011f7c:	cmp    DWORD PTR [ebp-0x18],0x0
10011f80:	je     0x10011f8a
10011f82:	cmp    DWORD PTR [ebp-0x18],0x9
10011f86:	je     0x10011f93
10011f88:	jmp    0x10011f9a
10011f8a:	mov    DWORD PTR [ebp-0x10],0x1009694c
10011f91:	jmp    0x10011f9a
10011f93:	mov    DWORD PTR [ebp-0x10],0x1009697c
10011f9a:	cmp    DWORD PTR [ebp-0x10],0x0
10011f9e:	jne    0x10011fa4
10011fa0:	xor    al,al
10011fa2:	jmp    0x10012019
10011fa4:	mov    ecx,DWORD PTR [ebp-0x10]
10011fa7:	call   0x10002d20
10011fac:	test   eax,eax
10011fae:	jne    0x10011fb4
10011fb0:	xor    al,al
10011fb2:	jmp    0x10012019
10011fb4:	mov    ecx,DWORD PTR [ebp-0x10]
10011fb7:	call   0x10002d20
10011fbc:	mov    ecx,DWORD PTR [ebp-0x8]
10011fbf:	cmp    eax,DWORD PTR [ecx+0x4]
10011fc2:	jbe    0x10011fdf
10011fc4:	mov    ecx,DWORD PTR [ebp-0x10]
10011fc7:	call   0x10002d20
10011fcc:	mov    edx,DWORD PTR [ebp-0x8]
10011fcf:	mov    DWORD PTR [edx+0x4],eax
10011fd2:	mov    eax,DWORD PTR [ebp-0x8]
10011fd5:	mov    DWORD PTR [eax],0x1
10011fdb:	mov    al,0x1
10011fdd:	jmp    0x10012019
10011fdf:	mov    ecx,DWORD PTR [ebp-0x8]
10011fe2:	mov    DWORD PTR [ecx],0x0
10011fe8:	mov    ecx,DWORD PTR [ebp-0x10]
10011feb:	call   0x10002d20
10011ff0:	mov    edx,DWORD PTR [ebp-0x8]
10011ff3:	mov    DWORD PTR [edx+0x4],eax
10011ff6:	mov    ecx,DWORD PTR [ebp-0x10]
10011ff9:	call   0x10002d20
10011ffe:	push   eax
10011fff:	mov    ecx,DWORD PTR [ebp-0x10]
10012002:	call   0x100078b0
10012007:	push   eax
10012008:	mov    eax,DWORD PTR [ebp-0x8]
1001200b:	add    eax,0x8
1001200e:	push   eax
1001200f:	call   0x10016820
10012014:	add    esp,0xc
10012017:	mov    al,0x1
10012019:	mov    esp,ebp
1001201b:	pop    ebp
1001201c:	ret    
1001201d:	int3   
1001201e:	int3   
1001201f:	int3   
10012020:	push   ebp
10012021:	mov    ebp,esp
10012023:	push   ecx
10012024:	mov    eax,DWORD PTR [ebp+0x8]
10012027:	mov    DWORD PTR [ebp-0x4],eax
1001202a:	mov    ecx,DWORD PTR [ebp-0x4]
1001202d:	mov    DWORD PTR [ecx],0x1
10012033:	mov    ecx,0x1009694c
10012038:	call   0x10002d20
1001203d:	test   eax,eax
1001203f:	jne    0x1001204a
10012041:	mov    edx,DWORD PTR [ebp-0x4]
10012044:	mov    DWORD PTR [edx],0x0
1001204a:	mov    al,0x1
1001204c:	mov    esp,ebp
1001204e:	pop    ebp
1001204f:	ret    
10012050:	push   ebp
10012051:	mov    ebp,esp
10012053:	push   0xffffffff
10012055:	push   0x1002a693
1001205a:	mov    eax,fs:0x0
10012060:	push   eax
10012061:	push   ecx
10012062:	sub    esp,0x64
10012065:	push   ebx
10012066:	push   esi
10012067:	push   edi
10012068:	mov    eax,ds:0x100951fc
1001206d:	xor    eax,ebp
1001206f:	push   eax
10012070:	lea    eax,[ebp-0xc]
10012073:	mov    fs:0x0,eax
10012079:	mov    DWORD PTR [ebp-0x10],esp
1001207c:	mov    DWORD PTR [ebp-0x44],ecx
1001207f:	mov    BYTE PTR [ebp-0x11],0x0
10012083:	mov    eax,DWORD PTR [ebp+0x8]
10012086:	mov    DWORD PTR [ebp-0x48],eax
10012089:	cmp    DWORD PTR [ebp-0x48],0x1000
10012090:	ja     0x100120b8
10012092:	cmp    DWORD PTR [ebp-0x48],0x1000
10012099:	je     0x100120c6
1001209b:	mov    ecx,DWORD PTR [ebp-0x48]
1001209e:	sub    ecx,0x1
100120a1:	mov    DWORD PTR [ebp-0x48],ecx
100120a4:	cmp    DWORD PTR [ebp-0x48],0x9
100120a8:	ja     0x100124d0
100120ae:	mov    edx,DWORD PTR [ebp-0x48]
100120b1:	jmp    DWORD PTR [edx*4+0x10012510]
100120b8:	cmp    DWORD PTR [ebp-0x48],0x1001
100120bf:	je     0x1001211e
100120c1:	jmp    0x100124d0
100120c6:	mov    DWORD PTR [ebp-0x4],0x0
100120cd:	mov    eax,DWORD PTR [ebp+0xc]
100120d0:	mov    DWORD PTR [ebp-0x18],eax
100120d3:	mov    ecx,DWORD PTR [ebp-0x18]
100120d6:	cmp    DWORD PTR [ecx],0x0
100120d9:	jl     0x100120ff
100120db:	mov    edx,DWORD PTR [ebp-0x18]
100120de:	cmp    DWORD PTR [edx],0x20
100120e1:	jge    0x100120ff
100120e3:	mov    eax,DWORD PTR [ebp-0x18]
100120e6:	mov    ecx,DWORD PTR [eax]
100120e8:	mov    edx,DWORD PTR [ecx*8+0x10096ab8]
100120ef:	mov    eax,DWORD PTR [ecx*8+0x10096abc]
100120f6:	mov    ecx,DWORD PTR [ebp-0x18]
100120f9:	mov    DWORD PTR [ecx+0x8],edx
100120fc:	mov    DWORD PTR [ecx+0xc],eax
100120ff:	mov    BYTE PTR [ebp-0x11],0x1
10012103:	jmp    0x10012112
10012105:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001210c:	mov    eax,0x10012119
10012111:	ret    
10012112:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012119:	jmp    0x100124f9
1001211e:	mov    DWORD PTR [ebp-0x4],0x2
10012125:	mov    edx,DWORD PTR [ebp+0xc]
10012128:	mov    DWORD PTR [ebp-0x1c],edx
1001212b:	mov    eax,DWORD PTR [ebp-0x1c]
1001212e:	cmp    DWORD PTR [eax],0x0
10012131:	jl     0x10012157
10012133:	mov    ecx,DWORD PTR [ebp-0x1c]
10012136:	cmp    DWORD PTR [ecx],0x20
10012139:	jge    0x10012157
1001213b:	mov    edx,DWORD PTR [ebp-0x1c]
1001213e:	mov    eax,DWORD PTR [edx]
10012140:	mov    ecx,DWORD PTR [ebp-0x1c]
10012143:	mov    edx,DWORD PTR [ecx+0x8]
10012146:	mov    ecx,DWORD PTR [ecx+0xc]
10012149:	mov    DWORD PTR [eax*8+0x10096ab8],edx
10012150:	mov    DWORD PTR [eax*8+0x10096abc],ecx
10012157:	mov    BYTE PTR [ebp-0x11],0x1
1001215b:	mov    edx,DWORD PTR [ebp+0x18]
1001215e:	mov    DWORD PTR [edx],0x0
10012164:	jmp    0x10012173
10012166:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001216d:	mov    eax,0x1001217a
10012172:	ret    
10012173:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001217a:	jmp    0x100124f9
1001217f:	mov    DWORD PTR [ebp-0x4],0x4
10012186:	call   0x10001000
1001218b:	mov    DWORD PTR [ebp-0x2c],eax
1001218e:	mov    eax,DWORD PTR [ebp+0xc]
10012191:	mov    DWORD PTR [ebp-0x24],eax
10012194:	mov    ecx,DWORD PTR ds:0x1008907c
1001219a:	push   ecx
1001219b:	mov    edx,DWORD PTR [ebp-0x24]
1001219e:	push   edx
1001219f:	call   0x10017324
100121a4:	add    esp,0x8
100121a7:	push   0x1
100121a9:	push   0x0
100121ab:	lea    eax,[ebp-0x3c]
100121ae:	push   eax
100121af:	call   0x10002090
100121b4:	add    esp,0xc
100121b7:	mov    DWORD PTR [ebp-0x4c],eax
100121ba:	mov    ecx,DWORD PTR [ebp-0x4c]
100121bd:	mov    DWORD PTR [ebp-0x50],ecx
100121c0:	mov    BYTE PTR [ebp-0x4],0x5
100121c4:	mov    ecx,DWORD PTR [ebp-0x50]
100121c7:	call   0x10003190
100121cc:	mov    DWORD PTR [ebp-0x54],eax
100121cf:	mov    edx,DWORD PTR [ebp-0x54]
100121d2:	push   edx
100121d3:	call   0x100110c0
100121d8:	add    esp,0x4
100121db:	mov    DWORD PTR [ebp-0x58],eax
100121de:	mov    eax,DWORD PTR [ebp-0x58]
100121e1:	push   eax
100121e2:	mov    ecx,DWORD PTR [ebp-0x24]
100121e5:	add    ecx,0x50
100121e8:	push   ecx
100121e9:	call   0x10017324
100121ee:	add    esp,0x8
100121f1:	mov    BYTE PTR [ebp-0x4],0x4
100121f5:	lea    ecx,[ebp-0x3c]
100121f8:	call   0x10003b40
100121fd:	push   0x1
100121ff:	push   0x2
10012201:	lea    edx,[ebp-0x40]
10012204:	push   edx
10012205:	call   0x10002090
1001220a:	add    esp,0xc
1001220d:	mov    DWORD PTR [ebp-0x5c],eax
10012210:	mov    eax,DWORD PTR [ebp-0x5c]
10012213:	mov    DWORD PTR [ebp-0x60],eax
10012216:	mov    BYTE PTR [ebp-0x4],0x6
1001221a:	mov    ecx,DWORD PTR [ebp-0x60]
1001221d:	call   0x10003190
10012222:	mov    DWORD PTR [ebp-0x64],eax
10012225:	mov    ecx,DWORD PTR [ebp-0x64]
10012228:	push   ecx
10012229:	call   0x100110c0
1001222e:	add    esp,0x4
10012231:	mov    DWORD PTR [ebp-0x68],eax
10012234:	mov    edx,DWORD PTR [ebp-0x68]
10012237:	push   edx
10012238:	mov    eax,DWORD PTR [ebp-0x24]
1001223b:	add    eax,0x90
10012240:	push   eax
10012241:	call   0x10017324
10012246:	add    esp,0x8
10012249:	mov    BYTE PTR [ebp-0x4],0x4
1001224d:	lea    ecx,[ebp-0x40]
10012250:	call   0x10003b40
10012255:	push   0x10089080
1001225a:	mov    ecx,DWORD PTR [ebp-0x24]
1001225d:	add    ecx,0xd0
10012263:	push   ecx
10012264:	call   0x10017324
10012269:	add    esp,0x8
1001226c:	mov    edx,DWORD PTR [ebp-0x24]
1001226f:	add    edx,0x40
10012272:	mov    eax,ds:0x1008900c
10012277:	mov    DWORD PTR [edx],eax
10012279:	mov    ecx,DWORD PTR ds:0x10089010
1001227f:	mov    DWORD PTR [edx+0x4],ecx
10012282:	mov    eax,ds:0x10089014
10012287:	mov    DWORD PTR [edx+0x8],eax
1001228a:	mov    ecx,DWORD PTR ds:0x10089018
10012290:	mov    DWORD PTR [edx+0xc],ecx
10012293:	mov    BYTE PTR [ebp-0x11],0x1
10012297:	jmp    0x100122a6
10012299:	mov    DWORD PTR [ebp-0x4],0xffffffff
100122a0:	mov    eax,0x100122ad
100122a5:	ret    
100122a6:	mov    DWORD PTR [ebp-0x4],0xffffffff
100122ad:	jmp    0x100124f9
100122b2:	mov    DWORD PTR [ebp-0x4],0x8
100122b9:	mov    edx,DWORD PTR [ebp+0xc]
100122bc:	mov    DWORD PTR [ebp-0x34],edx
100122bf:	mov    eax,DWORD PTR [ebp-0x34]
100122c2:	mov    ecx,DWORD PTR [eax]
100122c4:	push   ecx
100122c5:	call   0x1000f9e0
100122ca:	add    esp,0x4
100122cd:	mov    BYTE PTR [ebp-0x11],0x1
100122d1:	mov    edx,DWORD PTR [ebp+0x18]
100122d4:	mov    DWORD PTR [edx],0x0
100122da:	jmp    0x100122e9
100122dc:	mov    DWORD PTR [ebp-0x4],0xffffffff
100122e3:	mov    eax,0x100122f0
100122e8:	ret    
100122e9:	mov    DWORD PTR [ebp-0x4],0xffffffff
100122f0:	jmp    0x100124f9
100122f5:	mov    DWORD PTR [ebp-0x4],0xa
100122fc:	mov    eax,DWORD PTR [ebp+0xc]
100122ff:	mov    DWORD PTR [ebp-0x38],eax
10012302:	mov    ecx,DWORD PTR [ebp-0x38]
10012305:	mov    edx,DWORD PTR [ecx]
10012307:	push   edx
10012308:	call   0x1000fa80
1001230d:	add    esp,0x4
10012310:	mov    DWORD PTR [ebp-0x6c],eax
10012313:	mov    eax,DWORD PTR [ebp-0x38]
10012316:	mov    ecx,DWORD PTR [ebp-0x6c]
10012319:	mov    DWORD PTR [eax],ecx
1001231b:	mov    BYTE PTR [ebp-0x11],0x1
1001231f:	jmp    0x1001232e
10012321:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012328:	mov    eax,0x10012335
1001232d:	ret    
1001232e:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012335:	jmp    0x100124f9
1001233a:	mov    DWORD PTR [ebp-0x4],0xc
10012341:	mov    edx,DWORD PTR [ebp+0x10]
10012344:	push   edx
10012345:	mov    eax,DWORD PTR [ebp+0xc]
10012348:	push   eax
10012349:	call   0x10011e20
1001234e:	add    esp,0x8
10012351:	mov    BYTE PTR [ebp-0x6d],al
10012354:	mov    cl,BYTE PTR [ebp-0x6d]
10012357:	mov    BYTE PTR [ebp-0x11],cl
1001235a:	mov    edx,DWORD PTR [ebp+0x18]
1001235d:	mov    DWORD PTR [edx],0x0
10012363:	jmp    0x1001237b
10012365:	mov    eax,DWORD PTR [ebp+0x18]
10012368:	mov    DWORD PTR [eax],0x0
1001236e:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012375:	mov    eax,0x10012382
1001237a:	ret    
1001237b:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012382:	jmp    0x100124f9
10012387:	mov    DWORD PTR [ebp-0x4],0xe
1001238e:	mov    ecx,DWORD PTR [ebp+0x10]
10012391:	push   ecx
10012392:	mov    edx,DWORD PTR [ebp+0xc]
10012395:	push   edx
10012396:	call   0x10011e50
1001239b:	add    esp,0x8
1001239e:	mov    BYTE PTR [ebp-0x6e],al
100123a1:	mov    al,BYTE PTR [ebp-0x6e]
100123a4:	mov    BYTE PTR [ebp-0x11],al
100123a7:	jmp    0x100123bf
100123a9:	mov    ecx,DWORD PTR [ebp+0x18]
100123ac:	mov    DWORD PTR [ecx],0x0
100123b2:	mov    DWORD PTR [ebp-0x4],0xffffffff
100123b9:	mov    eax,0x100123c6
100123be:	ret    
100123bf:	mov    DWORD PTR [ebp-0x4],0xffffffff
100123c6:	jmp    0x100124f9
100123cb:	mov    DWORD PTR [ebp-0x4],0x10
100123d2:	mov    edx,DWORD PTR [ebp+0x10]
100123d5:	push   edx
100123d6:	mov    eax,DWORD PTR [ebp+0xc]
100123d9:	push   eax
100123da:	call   0x1000fc10
100123df:	add    esp,0x8
100123e2:	mov    BYTE PTR [ebp-0x6f],al
100123e5:	mov    cl,BYTE PTR [ebp-0x6f]
100123e8:	mov    BYTE PTR [ebp-0x11],cl
100123eb:	jmp    0x10012403
100123ed:	mov    edx,DWORD PTR [ebp+0x18]
100123f0:	mov    DWORD PTR [edx],0x0
100123f6:	mov    DWORD PTR [ebp-0x4],0xffffffff
100123fd:	mov    eax,0x1001240a
10012402:	ret    
10012403:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001240a:	jmp    0x100124f9
1001240f:	mov    DWORD PTR [ebp-0x4],0x12
10012416:	mov    eax,DWORD PTR [ebp+0x10]
10012419:	push   eax
1001241a:	mov    ecx,DWORD PTR [ebp+0xc]
1001241d:	push   ecx
1001241e:	call   0x10011f30
10012423:	add    esp,0x8
10012426:	mov    BYTE PTR [ebp-0x70],al
10012429:	mov    dl,BYTE PTR [ebp-0x70]
1001242c:	mov    BYTE PTR [ebp-0x11],dl
1001242f:	jmp    0x10012447
10012431:	mov    eax,DWORD PTR [ebp+0x18]
10012434:	mov    DWORD PTR [eax],0x0
1001243a:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012441:	mov    eax,0x1001244e
10012446:	ret    
10012447:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001244e:	jmp    0x100124f9
10012453:	mov    DWORD PTR [ebp-0x4],0x14
1001245a:	mov    ecx,DWORD PTR [ebp+0x10]
1001245d:	push   ecx
1001245e:	mov    edx,DWORD PTR [ebp+0xc]
10012461:	push   edx
10012462:	call   0x10012020
10012467:	add    esp,0x8
1001246a:	mov    BYTE PTR [ebp-0x71],al
1001246d:	mov    al,BYTE PTR [ebp-0x71]
10012470:	mov    BYTE PTR [ebp-0x11],al
10012473:	jmp    0x1001248b
10012475:	mov    ecx,DWORD PTR [ebp+0x18]
10012478:	mov    DWORD PTR [ecx],0x0
1001247e:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012485:	mov    eax,0x10012492
1001248a:	ret    
1001248b:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012492:	jmp    0x100124f9
10012494:	mov    DWORD PTR [ebp-0x4],0x16
1001249b:	mov    edx,DWORD PTR [ebp+0x10]
1001249e:	push   edx
1001249f:	mov    eax,DWORD PTR [ebp+0xc]
100124a2:	push   eax
100124a3:	call   0x1000f2e0
100124a8:	add    esp,0x8
100124ab:	mov    BYTE PTR [ebp-0x11],0x1
100124af:	mov    ecx,DWORD PTR [ebp+0x18]
100124b2:	mov    DWORD PTR [ecx],0x0
100124b8:	jmp    0x100124c7
100124ba:	mov    DWORD PTR [ebp-0x4],0xffffffff
100124c1:	mov    eax,0x100124ce
100124c6:	ret    
100124c7:	mov    DWORD PTR [ebp-0x4],0xffffffff
100124ce:	jmp    0x100124f9
100124d0:	cmp    DWORD PTR ds:0x10096bb8,0x0
100124d7:	je     0x100124f9
100124d9:	mov    edx,DWORD PTR [ebp+0x18]
100124dc:	push   edx
100124dd:	mov    eax,DWORD PTR [ebp+0x14]
100124e0:	push   eax
100124e1:	mov    ecx,DWORD PTR [ebp+0x10]
100124e4:	push   ecx
100124e5:	mov    edx,DWORD PTR [ebp+0xc]
100124e8:	push   edx
100124e9:	mov    eax,DWORD PTR [ebp+0x8]
100124ec:	push   eax
100124ed:	call   DWORD PTR ds:0x10096bb8
100124f3:	add    esp,0x14
100124f6:	mov    BYTE PTR [ebp-0x11],al
100124f9:	mov    al,BYTE PTR [ebp-0x11]
100124fc:	mov    ecx,DWORD PTR [ebp-0xc]
100124ff:	mov    DWORD PTR fs:0x0,ecx
10012506:	pop    ecx
10012507:	pop    edi
10012508:	pop    esi
10012509:	pop    ebx
1001250a:	mov    esp,ebp
1001250c:	pop    ebp
1001250d:	ret    0x14
10012510:	jg     0x10012533
10012512:	add    DWORD PTR [eax],edx
10012514:	retf   
10012515:	and    eax,DWORD PTR [ecx]
10012517:	adc    BYTE PTR [edi],cl
10012519:	and    al,0x1
1001251b:	adc    BYTE PTR [ebx+0x24],dl
1001251e:	add    DWORD PTR [eax],edx
10012520:	xchg   esp,eax
10012521:	and    al,0x1
10012523:	adc    al,dl
10012525:	and    al,0x1
10012527:	adc    BYTE PTR [edx-0xaeffede],dh
1001252d:	and    al,BYTE PTR [ecx]
1001252f:	adc    BYTE PTR [edx],bh
10012531:	and    eax,DWORD PTR [ecx]
10012533:	adc    BYTE PTR [edi-0xeffedd],al
10012539:	and    eax,0x1003423c
1001253e:	jmp    DWORD PTR ds:0x1003424c
10012544:	int3   
10012545:	int3   
10012546:	int3   
10012547:	int3   
10012548:	int3   
10012549:	int3   
1001254a:	int3   
1001254b:	int3   
1001254c:	int3   
1001254d:	int3   
1001254e:	int3   
1001254f:	int3   
10012550:	push   edi
10012551:	mov    edi,DWORD PTR [esp+0x14]
10012555:	test   edi,edi
10012557:	jne    0x1001255e
10012559:	lea    eax,[edi+0x1]
1001255c:	pop    edi
1001255d:	ret    
1001255e:	mov    eax,DWORD PTR [esp+0x8]
10012562:	test   eax,eax
10012564:	push   esi
10012565:	mov    DWORD PTR [edi],0x0
1001256b:	je     0x100125bd
1001256d:	mov    esi,DWORD PTR [eax+0x14]
10012570:	test   esi,esi
10012572:	jl     0x100125bd
10012574:	mov    ecx,DWORD PTR [eax+0x18]
10012577:	test   ecx,ecx
10012579:	je     0x10012585
1001257b:	cmp    ecx,0x1
1001257e:	je     0x10012585
10012580:	cmp    ecx,0x2
10012583:	jne    0x100125bd
10012585:	cmp    DWORD PTR [eax+0x10],0x0
10012589:	je     0x100125bd
1001258b:	mov    ecx,DWORD PTR [esp+0x10]
1001258f:	test   ecx,ecx
10012591:	je     0x100125bd
10012593:	mov    edx,DWORD PTR [eax+0x1c]
10012596:	and    edx,0x3
10012599:	cmp    dl,0x3
1001259c:	je     0x100125bd
1001259e:	test   esi,esi
100125a0:	jne    0x100125a8
100125a2:	lea    eax,[esi+0x1]
100125a5:	pop    esi
100125a6:	pop    edi
100125a7:	ret    
100125a8:	mov    edx,DWORD PTR [esp+0x14]
100125ac:	push   edi
100125ad:	push   edx
100125ae:	push   ecx
100125af:	push   0x0
100125b1:	push   eax
100125b2:	call   0x10012ac0
100125b7:	add    esp,0x14
100125ba:	pop    esi
100125bb:	pop    edi
100125bc:	ret    
100125bd:	pop    esi
100125be:	mov    eax,0x3
100125c3:	pop    edi
100125c4:	ret    
100125c5:	int3   
100125c6:	int3   
100125c7:	int3   
100125c8:	int3   
100125c9:	int3   
100125ca:	int3   
100125cb:	int3   
100125cc:	int3   
100125cd:	int3   
100125ce:	int3   
100125cf:	int3   
100125d0:	test   DWORD PTR [esp+0x4],0x4000
100125d8:	je     0x100125e1
100125da:	mov    eax,DWORD PTR [eax*4+0x100890c0]
100125e1:	ret    
100125e2:	int3   
100125e3:	int3   
100125e4:	int3   
100125e5:	int3   
100125e6:	int3   
100125e7:	int3   
100125e8:	int3   
100125e9:	int3   
100125ea:	int3   
100125eb:	int3   
100125ec:	int3   
100125ed:	int3   
100125ee:	int3   
100125ef:	int3   
100125f0:	test   ecx,0x2000
100125f6:	je     0x10012600
100125f8:	mov    eax,DWORD PTR [eax*4+0x100890cc]
100125ff:	ret    
10012600:	cmp    eax,0x2
10012603:	jne    0x1001262d
10012605:	and    edx,0x3000000
1001260b:	cmp    edx,0x1000000
10012611:	je     0x10012628
10012613:	test   ecx,0x2000000
10012619:	je     0x10012622
1001261b:	test   BYTE PTR [esp+0x4],0x8
10012620:	jne    0x10012628
10012622:	mov    eax,0x1
10012627:	ret    
10012628:	mov    eax,0x2
1001262d:	ret    
1001262e:	int3   
1001262f:	int3   
10012630:	sub    esp,0x18
10012633:	mov    edx,DWORD PTR [ebx+0x10]
10012636:	push   ebp
10012637:	mov    ebp,DWORD PTR [esp+0x20]
1001263b:	mov    ecx,DWORD PTR [ebp+0x28]
1001263e:	push   esi
1001263f:	xor    eax,eax
10012641:	push   ebp
10012642:	push   ebx
10012643:	mov    DWORD PTR [esp+0x10],eax
10012647:	mov    DWORD PTR [esp+0x1c],ecx
1001264b:	mov    DWORD PTR [esp+0x24],edx
1001264f:	mov    BYTE PTR [esp+0x2c],al
10012653:	mov    DWORD PTR [esp+0x20],eax
10012657:	call   0x100150a0
1001265c:	mov    esi,eax
1001265e:	add    esp,0x8
10012661:	test   esi,esi
10012663:	je     0x10012860
10012669:	cmp    DWORD PTR [ebp+0x18],0x1
1001266d:	jne    0x10012699
1001266f:	mov    eax,DWORD PTR [ebp+0x0]
10012672:	test   eax,0x2000
10012677:	je     0x10012699
10012679:	cmp    DWORD PTR [ebp+0x20],0x0
1001267d:	jne    0x10012699
1001267f:	test   BYTE PTR [esp+0x14],0x8
10012684:	je     0x10012699
10012686:	and    eax,0xffffdfff
1001268b:	push   0x3
1001268d:	push   ebp
1001268e:	mov    DWORD PTR [ebp+0x0],eax
10012691:	call   0x100149f0
10012696:	add    esp,0x8
10012699:	mov    eax,DWORD PTR [ebx+0x18]
1001269c:	cmp    eax,0x2
1001269f:	jne    0x100126b2
100126a1:	test   DWORD PTR [esi+0x8],0x800000
100126a8:	jne    0x10012860
100126ae:	cmp    eax,eax
100126b0:	je     0x100126bf
100126b2:	test   DWORD PTR [esi+0x8],0x8000000
100126b9:	jne    0x10012860
100126bf:	mov    ecx,DWORD PTR [esi+0x8]
100126c2:	test   cl,0x1
100126c5:	je     0x10012711
100126c7:	not    ecx
100126c9:	test   ecx,0x40000000
100126cf:	je     0x100126df
100126d1:	add    DWORD PTR [ebx+0x10],0x1
100126d5:	add    DWORD PTR [ebx+0x14],0xffffffff
100126d9:	js     0x10012860
100126df:	mov    ecx,DWORD PTR [ebx+0x10]
100126e2:	movzx  edx,BYTE PTR [ecx]
100126e5:	mov    ecx,DWORD PTR [esi+0x8]
100126e8:	test   ecx,0x10000000
100126ee:	mov    DWORD PTR [esp+0x8],edx
100126f2:	je     0x100126fd
100126f4:	test   dl,0x38
100126f7:	jne    0x10012860
100126fd:	test   ecx,0x100000
10012703:	je     0x10012711
10012705:	cmp    edx,0xc0
1001270b:	jb     0x10012860
10012711:	mov    edx,DWORD PTR [esp+0x14]
10012715:	add    DWORD PTR [ebx+0x10],0x1
10012719:	mov    ecx,DWORD PTR [ebp+0x0]
1001271c:	push   edx
1001271d:	mov    edx,DWORD PTR [esi+0x8]
10012720:	call   0x100125f0
10012725:	mov    DWORD PTR [esp+0x14],eax
10012729:	mov    eax,ecx
1001272b:	push   eax
1001272c:	mov    eax,DWORD PTR [ebx+0x18]
1001272f:	call   0x100125d0
10012734:	push   0x40
10012736:	push   0x0
10012738:	push   edi
10012739:	mov    DWORD PTR [esp+0x20],eax
1001273d:	call   0x10016580
10012742:	mov    BYTE PTR [edi+0xd],0xff
10012746:	mov    al,BYTE PTR [esi+0x3]
10012749:	add    esp,0x14
1001274c:	test   al,al
1001274e:	je     0x1001281a
10012754:	mov    edx,DWORD PTR [esp+0xc]
10012758:	lea    ecx,[esp+0x18]
1001275c:	push   ecx
1001275d:	mov    ecx,DWORD PTR [esp+0x14]
10012761:	push   edx
10012762:	mov    edx,DWORD PTR [esp+0x10]
10012766:	push   ecx
10012767:	push   ebp
10012768:	push   edx
10012769:	push   0x0
1001276b:	movzx  eax,al
1001276e:	push   eax
1001276f:	push   esi
10012770:	push   edi
10012771:	push   ebx
10012772:	call   0x10013800
10012777:	add    esp,0x28
1001277a:	test   eax,eax
1001277c:	je     0x10012860
10012782:	mov    al,BYTE PTR [esi+0x2]
10012785:	test   al,al
10012787:	je     0x1001281a
1001278d:	mov    ecx,DWORD PTR [esp+0xc]
10012791:	mov    edx,DWORD PTR [esp+0x10]
10012795:	push   0x0
10012797:	push   ecx
10012798:	mov    ecx,DWORD PTR [esp+0x10]
1001279c:	push   edx
1001279d:	push   ebp
1001279e:	push   ecx
1001279f:	push   0x1
100127a1:	movzx  edx,al
100127a4:	push   edx
100127a5:	push   esi
100127a6:	push   edi
100127a7:	push   ebx
100127a8:	call   0x10013800
100127ad:	add    esp,0x28
100127b0:	test   eax,eax
100127b2:	je     0x10012860
100127b8:	test   DWORD PTR [esi+0x8],0x20000
100127bf:	je     0x1001281a
100127c1:	mov    eax,DWORD PTR [esp+0xc]
100127c5:	mov    ecx,DWORD PTR [esp+0x10]
100127c9:	mov    edx,DWORD PTR [esp+0x8]
100127cd:	push   0x0
100127cf:	push   eax
100127d0:	movzx  eax,BYTE PTR [esi+0x10]
100127d4:	push   ecx
100127d5:	push   ebp
100127d6:	push   edx
100127d7:	push   0x2
100127d9:	push   eax
100127da:	push   esi
100127db:	push   edi
100127dc:	push   ebx
100127dd:	call   0x10013800
100127e2:	add    esp,0x28
100127e5:	test   eax,eax
100127e7:	je     0x10012860
100127e9:	test   DWORD PTR [esi+0x8],0x40000
100127f0:	je     0x1001281a
100127f2:	mov    ecx,DWORD PTR [esp+0xc]
100127f6:	mov    edx,DWORD PTR [esp+0x10]
100127fa:	mov    eax,DWORD PTR [esp+0x8]
100127fe:	push   0x0
10012800:	push   ecx
10012801:	movzx  ecx,BYTE PTR [esi+0x11]
10012805:	push   edx
10012806:	push   ebp
10012807:	push   eax
10012808:	push   0x3
1001280a:	push   ecx
1001280b:	push   esi
1001280c:	push   edi
1001280d:	push   ebx
1001280e:	call   0x10013800
10012813:	add    esp,0x28
10012816:	test   eax,eax
10012818:	je     0x10012860
1001281a:	test   DWORD PTR [esi+0x8],0x200000
10012821:	je     0x10012832
10012823:	push   ebx
10012824:	call   0x10015390
10012829:	mov    esi,eax
1001282b:	add    esp,0x4
1001282e:	test   esi,esi
10012830:	je     0x10012860
10012832:	test   DWORD PTR [esi+0x8],0x400000
10012839:	je     0x10012855
1001283b:	add    DWORD PTR [ebx+0x14],0xffffffff
1001283f:	js     0x10012860
10012841:	mov    eax,DWORD PTR [ebx+0x10]
10012844:	mov    cl,BYTE PTR [eax]
10012846:	add    eax,0x1
10012849:	cmp    cl,0x8
1001284c:	mov    BYTE PTR [esp+0x24],cl
10012850:	mov    DWORD PTR [ebx+0x10],eax
10012853:	jae    0x10012860
10012855:	mov    edx,DWORD PTR [ebx+0x10]
10012858:	sub    edx,DWORD PTR [ebp+0x8]
1001285b:	cmp    edx,0xf
1001285e:	jle    0x100128a5
10012860:	push   0x40
10012862:	push   0x0
10012864:	push   edi
10012865:	call   0x10016580
1001286a:	mov    eax,DWORD PTR [esp+0x28]
1001286e:	mov    BYTE PTR [edi+0xd],0xff
10012872:	mov    BYTE PTR [edi+0x8],0x1
10012876:	add    esp,0xc
10012879:	mov    DWORD PTR [ebp+0x4],0x0
10012880:	cmp    BYTE PTR [eax],0x9b
10012883:	jne    0x1001289a
10012885:	or     BYTE PTR [edi+0x3a],0x8
10012889:	pop    esi
1001288a:	mov    WORD PTR [edi+0x10],0x3db
10012890:	mov    eax,0x1
10012895:	pop    ebp
10012896:	add    esp,0x18
10012899:	ret    
1001289a:	pop    esi
1001289b:	mov    eax,0x3
100128a0:	pop    ebp
100128a1:	add    esp,0x18
100128a4:	ret    
100128a5:	mov    edx,0x1
100128aa:	cmp    DWORD PTR [esp+0x18],edx
100128ae:	jne    0x100128c0
100128b0:	test   BYTE PTR [esi+0x8],0x10
100128b4:	je     0x100128c0
100128b6:	or     DWORD PTR [ebp+0x4],0x10
100128ba:	or     WORD PTR [edi+0xa],dx
100128be:	jmp    0x100128eb
100128c0:	mov    eax,DWORD PTR [esi+0x8]
100128c3:	test   al,0x20
100128c5:	je     0x100128d8
100128c7:	test   BYTE PTR [ebp+0x0],0x20
100128cb:	je     0x100128d8
100128cd:	or     DWORD PTR [ebp+0x4],0x20
100128d1:	or     WORD PTR [edi+0xa],0x2
100128d6:	jmp    0x100128eb
100128d8:	test   al,0x40
100128da:	je     0x100128eb
100128dc:	test   BYTE PTR [ebp+0x0],0x40
100128e0:	je     0x100128eb
100128e2:	or     DWORD PTR [ebp+0x4],0x40
100128e6:	or     WORD PTR [edi+0xa],0x4
100128eb:	mov    eax,DWORD PTR [esi+0x8]
100128ee:	mov    ecx,eax
100128f0:	and    ecx,0x14000
100128f6:	cmp    ecx,0x14000
100128fc:	jne    0x1001292f
100128fe:	mov    eax,DWORD PTR [esp+0xc]
10012902:	or     DWORD PTR [ebp+0x4],0x4000
10012909:	test   eax,eax
1001290b:	je     0x10012a0b
10012911:	cmp    eax,edx
10012913:	jne    0x10012922
10012915:	mov    ax,WORD PTR [esi+0x12]
10012919:	mov    WORD PTR [edi+0x10],ax
1001291d:	jmp    0x10012a13
10012922:	mov    cx,WORD PTR [esi+0x14]
10012926:	mov    WORD PTR [edi+0x10],cx
1001292a:	jmp    0x10012a13
1001292f:	mov    ecx,eax
10012931:	and    ecx,0xc000
10012937:	cmp    ecx,0xc000
1001293d:	jne    0x10012953
1001293f:	mov    dx,WORD PTR [esi+0x4]
10012943:	mov    WORD PTR [edi+0x10],dx
10012947:	or     DWORD PTR [ebp+0x4],0x4000
1001294e:	jmp    0x10012a13
10012953:	mov    ecx,DWORD PTR [esp+0x10]
10012957:	test   ecx,ecx
10012959:	jne    0x1001297d
1001295b:	test   eax,0x10000
10012960:	je     0x10012970
10012962:	test   eax,0x1000008
10012967:	jne    0x10012970
10012969:	or     DWORD PTR [ebp+0x4],0x2000
10012970:	mov    ax,WORD PTR [esi+0x4]
10012974:	mov    WORD PTR [edi+0x10],ax
10012978:	jmp    0x10012a13
1001297d:	cmp    ecx,edx
1001297f:	jne    0x100129d2
10012981:	or     WORD PTR [edi+0xa],0x100
10012987:	test   DWORD PTR [esi+0x8],0x10000
1001298e:	je     0x10012a0b
10012990:	or     DWORD PTR [ebp+0x4],0x2000
10012997:	mov    eax,DWORD PTR [esi+0x8]
1001299a:	test   eax,0x80000
1001299f:	je     0x100129bb
100129a1:	cmp    DWORD PTR [esp+0x8],0xc0
100129a9:	jb     0x100129b5
100129ab:	mov    cx,WORD PTR [esi+0x4]
100129af:	mov    WORD PTR [edi+0x10],cx
100129b3:	jmp    0x10012a13
100129b5:	mov    dx,WORD PTR [esi+0x12]
100129b9:	jmp    0x10012a0f
100129bb:	test   eax,0x400000
100129c0:	je     0x10012a01
100129c2:	movzx  ax,BYTE PTR [esp+0x24]
100129c8:	add    ax,WORD PTR [esi+0x4]
100129cc:	mov    WORD PTR [edi+0x10],ax
100129d0:	jmp    0x10012a13
100129d2:	or     WORD PTR [edi+0xa],0x200
100129d8:	mov    eax,DWORD PTR [esi+0x8]
100129db:	test   eax,0x4010000
100129e0:	je     0x10012a0b
100129e2:	test   eax,0x4000000
100129e7:	je     0x10012a01
100129e9:	test   BYTE PTR [esp+0x14],0x8
100129ee:	je     0x10012a01
100129f0:	or     DWORD PTR [ebp+0x4],0x2000000
100129f7:	mov    ax,WORD PTR [esi+0x14]
100129fb:	mov    WORD PTR [edi+0x10],ax
100129ff:	jmp    0x10012a13
10012a01:	mov    cx,WORD PTR [esi+0x12]
10012a05:	mov    WORD PTR [edi+0x10],cx
10012a09:	jmp    0x10012a13
10012a0b:	mov    dx,WORD PTR [esi+0x4]
10012a0f:	mov    WORD PTR [edi+0x10],dx
10012a13:	test   DWORD PTR [esi+0x8],0x8000
10012a1a:	je     0x10012a2c
10012a1c:	test   DWORD PTR [ebp+0x0],0x2000
10012a23:	je     0x10012a2c
10012a25:	or     DWORD PTR [ebp+0x4],0x2000
10012a2c:	test   DWORD PTR [esi+0x8],0x20000000
10012a33:	je     0x10012a56
10012a35:	mov    eax,DWORD PTR [esi+0xc]
10012a38:	test   al,0x4
10012a3a:	je     0x10012a43
10012a3c:	test   BYTE PTR [esp+0x14],0x8
10012a41:	jne    0x10012a4e
10012a43:	test   al,0x8
10012a45:	je     0x10012a56
10012a47:	test   BYTE PTR [esp+0x14],0x10
10012a4c:	je     0x10012a56
10012a4e:	mov    ax,WORD PTR [esi+0x12]
10012a52:	mov    WORD PTR [edi+0x10],ax
10012a56:	mov    eax,DWORD PTR [esp+0xc]
10012a5a:	and    eax,0x3
10012a5d:	shl    eax,0xa
10012a60:	or     WORD PTR [edi+0xa],ax
10012a64:	test   DWORD PTR [esi+0x8],0x80000000
10012a6b:	movzx  eax,WORD PTR [edi+0xa]
10012a6f:	je     0x10012a78
10012a71:	or     eax,0x40
10012a74:	mov    WORD PTR [edi+0xa],ax
10012a78:	push   ebp
10012a79:	call   0x10014a30
10012a7e:	mov    WORD PTR [edi+0x38],ax
10012a82:	mov    cl,BYTE PTR [esi+0x1]
10012a85:	add    esp,0x4
10012a88:	cmp    BYTE PTR [edi+0xc],0x0
10012a8c:	mov    BYTE PTR [edi+0x3a],cl
10012a8f:	jne    0x10012a95
10012a91:	mov    BYTE PTR [edi+0xc],0xff
10012a95:	mov    al,BYTE PTR [edi+0xd]
10012a98:	cmp    al,0xff
10012a9a:	je     0x10012aab
10012a9c:	movzx  edx,al
10012a9f:	mov    ax,WORD PTR [edx*2+0x1008bc40]
10012aa7:	or     WORD PTR [edi+0x3c],ax
10012aab:	mov    cl,BYTE PTR [ebx+0x10]
10012aae:	sub    cl,BYTE PTR [esp+0x1c]
10012ab2:	pop    esi
10012ab3:	mov    BYTE PTR [edi+0x8],cl
10012ab6:	mov    eax,0x1
10012abb:	pop    ebp
10012abc:	add    esp,0x18
10012abf:	ret    
10012ac0:	sub    esp,0x90
10012ac6:	push   ebx
10012ac7:	push   ebp
10012ac8:	push   esi
10012ac9:	or     eax,0xffffffff
10012acc:	push   edi
10012acd:	mov    edi,DWORD PTR [esp+0xa4]
10012ad4:	mov    ebp,DWORD PTR [edi]
10012ad6:	mov    ecx,DWORD PTR [edi+0x4]
10012ad9:	mov    ebx,DWORD PTR [edi+0x10]
10012adc:	mov    edx,DWORD PTR [edi+0x14]
10012adf:	mov    DWORD PTR [esp+0x2c],eax
10012ae3:	mov    DWORD PTR [esp+0x30],eax
10012ae7:	mov    eax,DWORD PTR [edi+0x1c]
10012aea:	xor    esi,esi
10012aec:	test   al,0x2
10012aee:	mov    DWORD PTR [esp+0x1c],ebp
10012af2:	mov    DWORD PTR [esp+0x20],ecx
10012af6:	mov    DWORD PTR [esp+0x18],ebx
10012afa:	mov    DWORD PTR [esp+0x14],edx
10012afe:	je     0x10012b0a
10012b00:	mov    DWORD PTR [esp+0x2c],0xffffffff
10012b08:	jmp    0x10012b16
10012b0a:	test   al,0x1
10012b0c:	je     0x10012b1a
10012b0e:	mov    DWORD PTR [esp+0x2c],0xffff
10012b16:	mov    DWORD PTR [esp+0x30],esi
10012b1a:	test   edx,edx
10012b1c:	mov    eax,DWORD PTR [esp+0xb4]
10012b23:	mov    DWORD PTR [eax],esi
10012b25:	mov    eax,DWORD PTR [edi+0x18]
10012b28:	mov    DWORD PTR [esp+0x98],eax
10012b2f:	mov    DWORD PTR [edi+0x8],ebp
10012b32:	mov    DWORD PTR [edi+0xc],ecx
10012b35:	jg     0x10012b58
10012b37:	pop    edi
10012b38:	pop    esi
10012b39:	pop    ebp
10012b3a:	mov    eax,0x1
10012b3f:	pop    ebx
10012b40:	add    esp,0x90
10012b46:	ret    
10012b47:	jmp    0x10012b50
10012b49:	lea    esp,[esp+0x0]
10012b50:	mov    ecx,DWORD PTR [esp+0x20]
10012b54:	mov    ebp,DWORD PTR [esp+0x1c]
10012b58:	push   0x2c
10012b5a:	mov    DWORD PTR [esp+0x3c],ecx
10012b5e:	lea    ecx,[esp+0x44]
10012b62:	push   0x0
10012b64:	push   ecx
10012b65:	call   0x10016580
10012b6a:	mov    edx,DWORD PTR [esp+0xa4]
10012b71:	or     eax,0xffffffff
10012b74:	mov    DWORD PTR [esp+0x78],eax
10012b78:	mov    DWORD PTR [esp+0x7c],eax
10012b7c:	mov    DWORD PTR [esp+0x80],eax
10012b83:	mov    DWORD PTR [esp+0x84],eax
10012b8a:	mov    DWORD PTR [esp+0x88],eax
10012b91:	mov    DWORD PTR [esp+0x54],ebx
10012b95:	mov    DWORD PTR [esp+0x58],ebx
10012b99:	movzx  eax,BYTE PTR [ebx]
10012b9c:	push   edx
10012b9d:	push   eax
10012b9e:	mov    DWORD PTR [esp+0x38],0x0
10012ba6:	call   0x100148e0
10012bab:	add    esp,0x14
10012bae:	test   eax,eax
10012bb0:	je     0x10012cde
10012bb6:	mov    ecx,DWORD PTR [esp+0x98]
10012bbd:	mov    eax,DWORD PTR [esp+0x14]
10012bc1:	push   ecx
10012bc2:	lea    edx,[esp+0x44]
10012bc6:	push   edx
10012bc7:	push   eax
10012bc8:	push   ebx
10012bc9:	call   0x10014ac0
10012bce:	mov    ecx,DWORD PTR [esp+0x5c]
10012bd2:	mov    eax,ecx
10012bd4:	sub    eax,DWORD PTR [esp+0x58]
10012bd8:	add    esp,0x10
10012bdb:	sub    DWORD PTR [esp+0x14],eax
10012bdf:	mov    DWORD PTR [esp+0x24],eax
10012be3:	je     0x10012bee
10012be5:	cmp    eax,0xf
10012be8:	jne    0x10012cc6
10012bee:	mov    edx,DWORD PTR [edi+0x1c]
10012bf1:	not    edx
10012bf3:	test   dl,0x4
10012bf6:	je     0x10012cbb
10012bfc:	sub    ecx,ebx
10012bfe:	lea    edx,[ecx+esi*1]
10012c01:	cmp    edx,DWORD PTR [esp+0xb0]
10012c08:	ja     0x10012fe1
10012c0e:	cmp    ebx,DWORD PTR [esp+0x4c]
10012c12:	jae    0x10012cb2
10012c18:	mov    edx,DWORD PTR [esp+0xac]
10012c1f:	mov    edi,esi
10012c21:	imul   edi,edi,0xa8
10012c27:	mov    eax,esi
10012c29:	shl    eax,0x6
10012c2c:	add    eax,edx
10012c2e:	add    edi,edx
10012c30:	add    esi,ecx
10012c32:	mov    DWORD PTR [esp+0x10],esi
10012c36:	jmp    0x10012c44
10012c38:	jmp    0x10012c40
10012c3a:	lea    ebx,[ebx+0x0]
10012c40:	mov    eax,DWORD PTR [esp+0x28]
10012c44:	cmp    DWORD PTR [esp+0xa8],0x0
10012c4c:	mov    esi,edi
10012c4e:	jne    0x10012c52
10012c50:	mov    esi,eax
10012c52:	push   0x40
10012c54:	add    eax,0x40
10012c57:	push   0x0
10012c59:	push   esi
10012c5a:	add    edi,0xa8
10012c60:	mov    DWORD PTR [esp+0x34],eax
10012c64:	call   0x10016580
10012c69:	mov    ecx,DWORD PTR [esp+0x38]
10012c6d:	mov    edx,DWORD PTR [esp+0x3c]
10012c71:	and    edx,DWORD PTR [esp+0x44]
10012c75:	mov    WORD PTR [esi+0xa],0xffff
10012c7b:	mov    al,BYTE PTR [ebx]
10012c7d:	and    ecx,ebp
10012c7f:	add    esp,0xc
10012c82:	add    ebx,0x1
10012c85:	add    ebp,0x1
10012c88:	adc    DWORD PTR [esp+0x38],0x0
10012c8d:	cmp    ebx,DWORD PTR [esp+0x4c]
10012c91:	mov    BYTE PTR [esi+0x30],al
10012c94:	mov    BYTE PTR [esi+0x8],0x1
10012c98:	mov    DWORD PTR [esi],ecx
10012c9a:	mov    DWORD PTR [esi+0x4],edx
10012c9d:	jb     0x10012c40
10012c9f:	mov    eax,DWORD PTR [esp+0x24]
10012ca3:	mov    esi,DWORD PTR [esp+0x10]
10012ca7:	mov    ebx,DWORD PTR [esp+0x18]
10012cab:	mov    edi,DWORD PTR [esp+0xa4]
10012cb2:	mov    ecx,DWORD PTR [esp+0xb4]
10012cb9:	mov    DWORD PTR [ecx],esi
10012cbb:	cmp    DWORD PTR [esp+0x14],0x0
10012cc0:	je     0x10012b37
10012cc6:	add    ebx,eax
10012cc8:	add    DWORD PTR [esp+0x1c],eax
10012ccc:	mov    DWORD PTR [esp+0x18],ebx
10012cd0:	adc    DWORD PTR [esp+0x20],0x0
10012cd5:	cmp    eax,0xf
10012cd8:	je     0x10012fc6
10012cde:	cmp    DWORD PTR [esp+0x98],0x2
10012ce6:	jne    0x10012d3b
10012ce8:	test   DWORD PTR [esp+0x40],0x2000000
10012cf0:	je     0x10012d1a
10012cf2:	add    ebx,0xffffffff
10012cf5:	cmp    DWORD PTR [esp+0x54],ebx
10012cf9:	je     0x10012d1a
10012cfb:	and    DWORD PTR [esp+0x40],0xfdffffff
10012d03:	lea    edx,[esp+0x40]
10012d07:	push   0x0
10012d09:	push   edx
10012d0a:	mov    DWORD PTR [esp+0x60],0x0
10012d12:	call   0x100149f0
10012d17:	add    esp,0x8
10012d1a:	test   DWORD PTR [esp+0x40],0x780
10012d22:	je     0x10012d3b
10012d24:	and    DWORD PTR [esp+0x40],0xfffff87f
10012d2c:	lea    eax,[esp+0x40]
10012d30:	push   0x2
10012d32:	push   eax
10012d33:	call   0x100149f0
10012d38:	add    esp,0x8
10012d3b:	lea    eax,[esi+0x1]
10012d3e:	cmp    eax,DWORD PTR [esp+0xb0]
10012d45:	ja     0x10012fe1
10012d4b:	cmp    DWORD PTR [esp+0xa8],0x0
10012d53:	je     0x10012d5d
10012d55:	imul   esi,esi,0xa8
10012d5b:	jmp    0x10012d60
10012d5d:	shl    esi,0x6
10012d60:	add    esi,DWORD PTR [esp+0xac]
10012d67:	mov    ecx,DWORD PTR [esp+0x18]
10012d6b:	mov    edx,DWORD PTR [esp+0x14]
10012d6f:	mov    DWORD PTR [esp+0x10],eax
10012d73:	lea    eax,[esp+0x40]
10012d77:	mov    edi,esi
10012d79:	push   eax
10012d7a:	lea    ebx,[esp+0x84]
10012d81:	mov    DWORD PTR [esp+0x94],ecx
10012d88:	mov    DWORD PTR [esp+0x98],edx
10012d8f:	call   0x10012630
10012d94:	mov    ecx,DWORD PTR [esp+0xa8]
10012d9b:	add    esp,0x4
10012d9e:	test   BYTE PTR [ecx+0x1c],0x4
10012da2:	mov    DWORD PTR [esp+0x28],eax
10012da6:	je     0x10012db6
10012da8:	test   BYTE PTR [edi+0x3a],0x7
10012dac:	jne    0x10012db6
10012dae:	mov    DWORD PTR [esp+0x28],0x4
10012db6:	mov    ecx,DWORD PTR [esp+0x30]
10012dba:	and    DWORD PTR [edi+0x2c],ecx
10012dbd:	mov    eax,DWORD PTR [esp+0x2c]
10012dc1:	and    DWORD PTR [edi+0x28],eax
10012dc4:	mov    esi,ecx
10012dc6:	mov    cl,BYTE PTR [edi+0x8]
10012dc9:	and    esi,DWORD PTR [esp+0x38]
10012dcd:	movzx  ebx,cl
10012dd0:	sub    DWORD PTR [esp+0x14],ebx
10012dd4:	mov    edx,eax
10012dd6:	and    edx,ebp
10012dd8:	mov    DWORD PTR [edi],edx
10012dda:	mov    eax,ebx
10012ddc:	cdq    
10012ddd:	add    DWORD PTR [esp+0x1c],eax
10012de1:	mov    eax,DWORD PTR [esp+0x24]
10012de5:	mov    DWORD PTR [edi+0x4],esi
10012de8:	adc    DWORD PTR [esp+0x20],edx
10012dec:	mov    edx,DWORD PTR [esp+0x28]
10012df0:	add    DWORD PTR [esp+0x18],ebx
10012df4:	add    cl,al
10012df6:	cmp    edx,0x3
10012df9:	mov    BYTE PTR [edi+0x8],cl
10012dfc:	jne    0x10012ee9
10012e02:	mov    ecx,DWORD PTR [esp+0xa4]
10012e09:	mov    ecx,DWORD PTR [ecx+0x1c]
10012e0c:	not    ecx
10012e0e:	test   cl,0x4
10012e11:	je     0x10012ef3
10012e17:	mov    esi,DWORD PTR [esp+0x10]
10012e1b:	sub    esi,0x1
10012e1e:	lea    ecx,[eax+0x1]
10012e21:	test   ecx,ecx
10012e23:	mov    DWORD PTR [esp+0x10],esi
10012e27:	jbe    0x10012ef3
10012e2d:	lea    eax,[eax+esi*1+0x1]
10012e31:	cmp    eax,DWORD PTR [esp+0xb0]
10012e38:	ja     0x10012fe1
10012e3e:	mov    ecx,DWORD PTR [esp+0x4c]
10012e42:	mov    ebx,DWORD PTR [esp+0x48]
10012e46:	add    ecx,0x1
10012e49:	cmp    ebx,ecx
10012e4b:	mov    DWORD PTR [esp+0x3c],ecx
10012e4f:	jae    0x10012ef3
10012e55:	mov    edx,DWORD PTR [esp+0xac]
10012e5c:	mov    eax,esi
10012e5e:	imul   esi,esi,0xa8
10012e64:	shl    eax,0x6
10012e67:	sub    ecx,ebx
10012e69:	add    eax,edx
10012e6b:	add    esi,edx
10012e6d:	add    DWORD PTR [esp+0x10],ecx
10012e71:	jmp    0x10012e84
10012e73:	jmp    0x10012e80
10012e75:	lea    esp,[esp+0x0]
10012e7c:	lea    esp,[esp+0x0]
10012e80:	mov    eax,DWORD PTR [esp+0x24]
10012e84:	cmp    DWORD PTR [esp+0xa8],0x0
10012e8c:	mov    edi,esi
10012e8e:	jne    0x10012e92
10012e90:	mov    edi,eax
10012e92:	push   0x40
10012e94:	add    eax,0x40
10012e97:	push   0x0
10012e99:	push   edi
10012e9a:	add    esi,0xa8
10012ea0:	mov    DWORD PTR [esp+0x30],eax
10012ea4:	call   0x10016580
10012ea9:	mov    eax,DWORD PTR [esp+0x44]
10012ead:	mov    edx,DWORD PTR [esp+0x38]
10012eb1:	mov    WORD PTR [edi+0xa],0xffff
10012eb7:	mov    cl,BYTE PTR [ebx]
10012eb9:	mov    BYTE PTR [edi+0x30],cl
10012ebc:	mov    ecx,DWORD PTR [esp+0x3c]
10012ec0:	and    ecx,eax
10012ec2:	and    edx,ebp
10012ec4:	add    esp,0xc
10012ec7:	add    ebx,0x1
10012eca:	add    ebp,0x1
10012ecd:	adc    eax,0x0
10012ed0:	cmp    ebx,DWORD PTR [esp+0x3c]
10012ed4:	mov    BYTE PTR [edi+0x8],0x1
10012ed8:	mov    DWORD PTR [edi],edx
10012eda:	mov    DWORD PTR [edi+0x4],ecx
10012edd:	mov    DWORD PTR [esp+0x38],eax
10012ee1:	jb     0x10012e80
10012ee3:	mov    edx,DWORD PTR [esp+0x28]
10012ee7:	jmp    0x10012ef3
10012ee9:	cmp    edx,0x4
10012eec:	jne    0x10012ef3
10012eee:	sub    DWORD PTR [esp+0x10],0x1
10012ef3:	cmp    edx,0x1
10012ef6:	mov    eax,DWORD PTR [esp+0xb4]
10012efd:	mov    ecx,DWORD PTR [esp+0x10]
10012f01:	mov    DWORD PTR [eax],ecx
10012f03:	mov    ecx,DWORD PTR [esp+0x1c]
10012f07:	mov    eax,DWORD PTR [esp+0xa4]
10012f0e:	mov    DWORD PTR [eax+0x8],ecx
10012f11:	mov    ecx,DWORD PTR [esp+0x20]
10012f15:	mov    DWORD PTR [eax+0xc],ecx
10012f18:	jne    0x10012fb7
10012f1e:	mov    eax,DWORD PTR [eax+0x1c]
10012f21:	test   eax,0x3f8
10012f26:	je     0x10012fb7
10012f2c:	test   al,0x8
10012f2e:	je     0x10012f3f
10012f30:	mov    dl,BYTE PTR [edi+0x3a]
10012f33:	and    dl,0x7
10012f36:	cmp    dl,0x1
10012f39:	je     0x10012b37
10012f3f:	test   al,0x10
10012f41:	je     0x10012f52
10012f43:	mov    cl,BYTE PTR [edi+0x3a]
10012f46:	and    cl,0x7
10012f49:	cmp    cl,0x2
10012f4c:	je     0x10012b37
10012f52:	test   al,0x20
10012f54:	je     0x10012f65
10012f56:	mov    dl,BYTE PTR [edi+0x3a]
10012f59:	and    dl,0x7
10012f5c:	cmp    dl,0x3
10012f5f:	je     0x10012b37
10012f65:	test   al,0x40
10012f67:	je     0x10012f78
10012f69:	mov    cl,BYTE PTR [edi+0x3a]
10012f6c:	and    cl,0x7
10012f6f:	cmp    cl,0x4
10012f72:	je     0x10012b37
10012f78:	test   al,al
10012f7a:	jns    0x10012f8b
10012f7c:	mov    dl,BYTE PTR [edi+0x3a]
10012f7f:	and    dl,0x7
10012f82:	cmp    dl,0x5
10012f85:	je     0x10012b37
10012f8b:	test   eax,0x100
10012f90:	je     0x10012fa1
10012f92:	mov    cl,BYTE PTR [edi+0x3a]
10012f95:	and    cl,0x7
10012f98:	cmp    cl,0x6
10012f9b:	je     0x10012b37
10012fa1:	test   eax,0x200
10012fa6:	je     0x10012fb7
10012fa8:	mov    dl,BYTE PTR [edi+0x3a]
10012fab:	and    dl,0x7
10012fae:	cmp    dl,0x7
10012fb1:	je     0x10012b37
10012fb7:	mov    esi,DWORD PTR [esp+0x10]
10012fbb:	mov    ebx,DWORD PTR [esp+0x18]
10012fbf:	mov    edi,DWORD PTR [esp+0xa4]
10012fc6:	cmp    DWORD PTR [esp+0x14],0x0
10012fcb:	jg     0x10012b50
10012fd1:	pop    edi
10012fd2:	pop    esi
10012fd3:	pop    ebp
10012fd4:	mov    eax,0x1
10012fd9:	pop    ebx
10012fda:	add    esp,0x90
10012fe0:	ret    
10012fe1:	pop    edi
10012fe2:	pop    esi
10012fe3:	pop    ebp
10012fe4:	mov    eax,0x2
10012fe9:	pop    ebx
10012fea:	add    esp,0x90
10012ff0:	ret    
10012ff1:	int3   
10012ff2:	int3   
10012ff3:	int3   
10012ff4:	int3   
10012ff5:	int3   
10012ff6:	int3   
10012ff7:	int3   
10012ff8:	int3   
10012ff9:	int3   
10012ffa:	int3   
10012ffb:	int3   
10012ffc:	int3   
10012ffd:	int3   
10012ffe:	int3   
10012fff:	int3   
10013000:	mov    eax,DWORD PTR [esp+0x8]
10013004:	mul    DWORD PTR [esp+0xc]
10013008:	test   edx,edx
1001300a:	ja     0x10013011
1001300c:	cmp    eax,0xffffffff
1001300f:	jbe    0x10013017
10013011:	mov    eax,0x80070057
10013016:	ret    
10013017:	mov    ecx,DWORD PTR [esp+0x4]
1001301b:	mov    DWORD PTR [ecx],eax
1001301d:	xor    eax,eax
1001301f:	ret    
10013020:	lea    ecx,[eax-0x4]
10013023:	cmp    ecx,0x3
10013026:	ja     0x1001302c
10013028:	add    eax,0x3c
1001302b:	ret    
1001302c:	add    eax,0x30
1001302f:	ret    
10013030:	mov    cl,BYTE PTR [esp+0x4]
10013034:	mov    BYTE PTR [eax],cl
10013036:	mov    WORD PTR [eax+0x2],dx
1001303a:	ret    0x4
1001303d:	int3   
1001303e:	int3   
1001303f:	int3   
10013040:	mov    cl,BYTE PTR [esp+0x4]
10013044:	mov    dl,BYTE PTR [esp+0xc]
10013048:	mov    BYTE PTR [eax],cl
1001304a:	mov    cx,WORD PTR [esp+0x8]
1001304f:	mov    BYTE PTR [eax+0x1],dl
10013052:	mov    WORD PTR [eax+0x2],cx
10013056:	ret    0xc
10013059:	int3   
1001305a:	int3   
1001305b:	int3   
1001305c:	int3   
1001305d:	int3   
1001305e:	int3   
1001305f:	int3   
10013060:	sub    DWORD PTR [eax+0x14],esi
10013063:	jns    0x10013068
10013065:	xor    eax,eax
10013067:	ret    
10013068:	lea    edx,[esi-0x1]
1001306b:	cmp    edx,0x7
1001306e:	ja     0x100130b8
10013070:	jmp    DWORD PTR [edx*4+0x100130c4]
10013077:	mov    edx,DWORD PTR [eax+0x10]
1001307a:	mov    dl,BYTE PTR [edx]
1001307c:	mov    BYTE PTR [ecx],dl
1001307e:	add    DWORD PTR [eax+0x10],esi
10013081:	mov    eax,0x1
10013086:	ret    
10013087:	mov    edx,DWORD PTR [eax+0x10]
1001308a:	mov    dx,WORD PTR [edx]
1001308d:	mov    WORD PTR [ecx],dx
10013090:	add    DWORD PTR [eax+0x10],esi
10013093:	mov    eax,0x1
10013098:	ret    
10013099:	mov    edx,DWORD PTR [eax+0x10]
1001309c:	mov    edx,DWORD PTR [edx]
1001309e:	mov    DWORD PTR [ecx],edx
100130a0:	add    DWORD PTR [eax+0x10],esi
100130a3:	mov    eax,0x1
100130a8:	ret    
100130a9:	mov    edx,DWORD PTR [eax+0x10]
100130ac:	push   edi
100130ad:	mov    edi,DWORD PTR [edx]
100130af:	mov    DWORD PTR [ecx],edi
100130b1:	mov    edx,DWORD PTR [edx+0x4]
100130b4:	mov    DWORD PTR [ecx+0x4],edx
100130b7:	pop    edi
100130b8:	add    DWORD PTR [eax+0x10],esi
100130bb:	mov    eax,0x1
100130c0:	ret    
100130c1:	lea    ecx,[ecx+0x0]
100130c4:	ja     0x100130f6
100130c6:	add    DWORD PTR [eax],edx
100130c8:	xchg   DWORD PTR [eax],esi
100130ca:	add    DWORD PTR [eax],edx
100130cc:	mov    eax,0x99100130
100130d1:	xor    BYTE PTR [ecx],al
100130d3:	adc    BYTE PTR [eax-0x47effed0],bh
100130d9:	xor    BYTE PTR [ecx],al
100130db:	adc    BYTE PTR [eax-0x56effed0],bh
100130e1:	xor    BYTE PTR [ecx],al
100130e3:	adc    ah,cl
100130e5:	int3   
100130e6:	int3   
100130e7:	int3   
100130e8:	int3   
100130e9:	int3   
100130ea:	int3   
100130eb:	int3   
100130ec:	int3   
100130ed:	int3   
100130ee:	int3   
100130ef:	int3   
100130f0:	sub    DWORD PTR [ecx+0x14],edi
100130f3:	jns    0x100130f8
100130f5:	xor    eax,eax
100130f7:	ret    
100130f8:	lea    eax,[edi-0x1]
100130fb:	cmp    eax,0x7
100130fe:	ja     0x10013152
10013100:	jmp    DWORD PTR [eax*4+0x1001315c]
10013107:	mov    eax,DWORD PTR [ecx+0x10]
1001310a:	movsx  eax,BYTE PTR [eax]
1001310d:	cdq    
1001310e:	mov    DWORD PTR [esi],eax
10013110:	mov    DWORD PTR [esi+0x4],edx
10013113:	add    DWORD PTR [ecx+0x10],edi
10013116:	mov    eax,0x1
1001311b:	ret    
1001311c:	mov    edx,DWORD PTR [ecx+0x10]
1001311f:	movsx  eax,WORD PTR [edx]
10013122:	cdq    
10013123:	mov    DWORD PTR [esi],eax
10013125:	mov    DWORD PTR [esi+0x4],edx
10013128:	add    DWORD PTR [ecx+0x10],edi
1001312b:	mov    eax,0x1
10013130:	ret    
10013131:	mov    eax,DWORD PTR [ecx+0x10]
10013134:	mov    eax,DWORD PTR [eax]
10013136:	cdq    
10013137:	mov    DWORD PTR [esi],eax
10013139:	mov    DWORD PTR [esi+0x4],edx
1001313c:	add    DWORD PTR [ecx+0x10],edi
1001313f:	mov    eax,0x1
10013144:	ret    
10013145:	mov    eax,DWORD PTR [ecx+0x10]
10013148:	mov    edx,DWORD PTR [eax]
1001314a:	mov    DWORD PTR [esi],edx
1001314c:	mov    eax,DWORD PTR [eax+0x4]
1001314f:	mov    DWORD PTR [esi+0x4],eax
10013152:	add    DWORD PTR [ecx+0x10],edi
10013155:	mov    eax,0x1
1001315a:	ret    
1001315b:	nop
1001315c:	pop    es
1001315d:	xor    DWORD PTR [ecx],eax
1001315f:	adc    BYTE PTR [ecx+esi*1],bl
10013162:	add    DWORD PTR [eax],edx
10013164:	push   edx
10013165:	xor    DWORD PTR [ecx],eax
10013167:	adc    BYTE PTR [ecx],dh
10013169:	xor    DWORD PTR [ecx],eax
1001316b:	adc    BYTE PTR [edx+0x31],dl
1001316e:	add    DWORD PTR [eax],edx
10013170:	push   edx
10013171:	xor    DWORD PTR [ecx],eax
10013173:	adc    BYTE PTR [edx+0x31],dl
10013176:	add    DWORD PTR [eax],edx
10013178:	inc    ebp
10013179:	xor    DWORD PTR [ecx],eax
1001317b:	adc    ah,cl
1001317d:	int3   
1001317e:	int3   
1001317f:	int3   
10013180:	mov    eax,DWORD PTR [edi+0x28]
10013183:	push   ebx
10013184:	push   ebp
10013185:	push   esi
10013186:	mov    esi,edx
10013188:	mov    ebx,edx
1001318a:	shr    esi,0x6
1001318d:	shr    ebx,0x3
10013190:	and    esi,0x3
10013193:	and    ebx,0x7
10013196:	and    edx,0x7
10013199:	test   al,0x2
1001319b:	je     0x100131a7
1001319d:	or     DWORD PTR [edi+0x4],0x2000000
100131a4:	add    ebx,0x8
100131a7:	cmp    ebx,0x4
100131aa:	jne    0x100131bf
100131ac:	mov    ecx,DWORD PTR [esp+0x10]
100131b0:	mov    ebp,DWORD PTR [esp+0x14]
100131b4:	mov    BYTE PTR [ecx+ebp*4+0x12],0x6
100131b9:	lea    ebp,[ecx+ebp*4+0x13]
100131bd:	jmp    0x100131d3
100131bf:	mov    ebp,DWORD PTR [esp+0x10]
100131c3:	mov    ecx,DWORD PTR [esp+0x14]
100131c7:	mov    BYTE PTR [ebp+ecx*4+0x12],0x7
100131cc:	mov    ecx,DWORD PTR [esp+0x10]
100131d0:	add    ebp,0xd
100131d3:	cmp    edx,0x5
100131d6:	je     0x1001321a
100131d8:	test   al,0x1
100131da:	je     0x100131e3
100131dc:	or     DWORD PTR [edi+0x4],0x2000000
100131e3:	and    al,0x1
100131e5:	add    al,al
100131e7:	add    al,al
100131e9:	add    al,al
100131eb:	cmp    DWORD PTR [esp+0x18],0x2
100131f0:	sete   cl
100131f3:	sub    cl,0x1
100131f6:	and    ecx,0x10
100131f9:	add    al,cl
100131fb:	mov    ecx,DWORD PTR [esp+0x10]
100131ff:	add    al,dl
10013201:	cmp    ebx,0x4
10013204:	mov    BYTE PTR [ebp+0x0],al
10013207:	je     0x1001327d
10013209:	cmp    DWORD PTR [esp+0x18],0x2
1001320e:	jne    0x10013255
10013210:	mov    eax,DWORD PTR [esp+0x14]
10013214:	mov    BYTE PTR [ecx+eax*4+0x13],bl
10013218:	jmp    0x10013260
1001321a:	cmp    DWORD PTR [esp+0x1c],0x0
1001321f:	je     0x10013243
10013221:	test   al,0x1
10013223:	je     0x1001322c
10013225:	or     DWORD PTR [edi+0x4],0x2000000
1001322c:	and    al,0x1
1001322e:	add    al,al
10013230:	add    al,al
10013232:	add    al,al
10013234:	cmp    DWORD PTR [esp+0x18],0x2
10013239:	jne    0x1001323f
1001323b:	add    al,0x5
1001323d:	jmp    0x10013201
1001323f:	add    al,0x15
10013241:	jmp    0x10013201
10013243:	cmp    ebx,0x4
10013246:	jne    0x10013209
10013248:	mov    edx,DWORD PTR [esp+0x14]
1001324c:	pop    esi
1001324d:	pop    ebp
1001324e:	mov    BYTE PTR [ecx+edx*4+0x12],0x5
10013253:	pop    ebx
10013254:	ret    
10013255:	mov    edx,DWORD PTR [esp+0x14]
10013259:	add    bl,0x10
1001325c:	mov    BYTE PTR [ecx+edx*4+0x13],bl
10013260:	test   esi,esi
10013262:	je     0x10013278
10013264:	mov    ecx,esi
10013266:	mov    eax,0x1
1001326b:	shl    eax,cl
1001326d:	mov    ecx,DWORD PTR [esp+0x10]
10013271:	pop    esi
10013272:	pop    ebp
10013273:	mov    BYTE PTR [ecx+0xe],al
10013276:	pop    ebx
10013277:	ret    
10013278:	xor    eax,eax
1001327a:	mov    BYTE PTR [ecx+0xe],al
1001327d:	pop    esi
1001327e:	pop    ebp
1001327f:	pop    ebx
10013280:	ret    
10013281:	int3   
10013282:	int3   
10013283:	int3   
10013284:	int3   
10013285:	int3   
10013286:	int3   
10013287:	int3   
10013288:	int3   
10013289:	int3   
1001328a:	int3   
1001328b:	int3   
1001328c:	int3   
1001328d:	int3   
1001328e:	int3   
1001328f:	int3   
10013290:	mov    edx,DWORD PTR [esp+0x20]
10013294:	push   ebx
10013295:	push   ebp
10013296:	mov    ebp,DWORD PTR [esp+0x1c]
1001329a:	push   esi
1001329b:	xor    esi,esi
1001329d:	cmp    edx,0x3
100132a0:	push   edi
100132a1:	mov    edi,DWORD PTR [esp+0x1c]
100132a5:	mov    ebx,ecx
100132a7:	mov    ecx,DWORD PTR [ebp+0x28]
100132aa:	mov    DWORD PTR [esp+0x24],esi
100132ae:	jne    0x100134c9
100132b4:	mov    edx,DWORD PTR [esp+0x18]
100132b8:	mov    eax,DWORD PTR [esp+0x20]
100132bc:	mov    BYTE PTR [edx+eax*4+0x12],0x1
100132c1:	lea    eax,[edx+eax*4+0x14]
100132c5:	movzx  edx,WORD PTR [eax]
100132c8:	lea    esi,[edi-0xf]
100132cb:	cmp    esi,0x4c
100132ce:	mov    DWORD PTR [esp+0x30],eax
100132d2:	ja     0x1001351b
100132d8:	movzx  eax,BYTE PTR [esi+0x100137b0]
100132df:	jmp    DWORD PTR [eax*4+0x1001377c]
100132e6:	mov    eax,DWORD PTR [esp+0x28]
100132ea:	sub    eax,0x0
100132ed:	je     0x10013360
100132ef:	sub    eax,0x1
100132f2:	je     0x10013321
100132f4:	sub    eax,0x1
100132f7:	jne    0x10013343
100132f9:	cmp    edi,0x1c
100132fc:	mov    eax,0x2000000
10013301:	jne    0x10013306
10013303:	or     DWORD PTR [ebp+0x4],eax
10013306:	test   DWORD PTR [esp+0x34],eax
1001330a:	je     0x1001330f
1001330c:	or     DWORD PTR [ebp+0x4],eax
1001330f:	test   cl,0x1
10013312:	je     0x1001331a
10013314:	or     DWORD PTR [ebp+0x4],eax
10013317:	add    ebx,0x8
1001331a:	mov    edx,0x40
1001331f:	jmp    0x10013343
10013321:	or     DWORD PTR [ebp+0x4],0x2000
10013328:	test   cl,0x1
1001332b:	mov    eax,DWORD PTR [ebp+0x4]
1001332e:	je     0x1001333b
10013330:	or     eax,0x2000000
10013335:	mov    DWORD PTR [ebp+0x4],eax
10013338:	add    ebx,0x8
1001333b:	mov    edx,0x20
10013340:	add    ebx,0x10
10013343:	mov    eax,DWORD PTR [esp+0x30]
10013347:	mov    ecx,DWORD PTR [esp+0x18]
1001334b:	pop    edi
1001334c:	mov    WORD PTR [eax],dx
1001334f:	mov    edx,DWORD PTR [esp+0x1c]
10013353:	pop    esi
10013354:	pop    ebp
10013355:	mov    BYTE PTR [ecx+edx*4+0x13],bl
10013359:	mov    eax,0x1
1001335e:	pop    ebx
1001335f:	ret    
10013360:	or     DWORD PTR [ebp+0x4],0x2000
10013367:	test   cl,0x1
1001336a:	mov    eax,DWORD PTR [ebp+0x4]
1001336d:	je     0x1001337a
1001336f:	or     eax,0x2000000
10013374:	mov    DWORD PTR [ebp+0x4],eax
10013377:	add    ebx,0x8
1001337a:	mov    edx,0x10
1001337f:	add    ebx,0x20
10013382:	jmp    0x10013343
10013384:	test   cl,0x1
10013387:	mov    eax,0x2000000
1001338c:	je     0x10013394
1001338e:	or     DWORD PTR [ebp+0x4],eax
10013391:	add    ebx,0x8
10013394:	mov    edx,DWORD PTR [esp+0x14]
10013398:	cmp    DWORD PTR [edx+0x18],0x2
1001339c:	jne    0x100133b4
1001339e:	mov    edx,DWORD PTR [esp+0x34]
100133a2:	and    edx,0x3000000
100133a8:	cmp    edx,0x1000000
100133ae:	je     0x100134bf
100133b4:	test   cl,0x8
100133b7:	je     0x1001333b
100133b9:	or     DWORD PTR [ebp+0x4],eax
100133bc:	mov    edx,0x40
100133c1:	jmp    0x10013343
100133c3:	test   cl,0x1
100133c6:	je     0x100133d2
100133c8:	or     DWORD PTR [ebp+0x4],0x2000000
100133cf:	add    ebx,0x8
100133d2:	test   DWORD PTR [ebp+0x0],0x2000
100133d9:	je     0x1001333b
100133df:	or     DWORD PTR [ebp+0x4],0x2000
100133e6:	mov    edx,0x10
100133eb:	add    ebx,0x20
100133ee:	jmp    0x10013343
100133f3:	test   cl,0x1
100133f6:	je     0x10013402
100133f8:	or     DWORD PTR [ebp+0x4],0x2000000
100133ff:	add    ebx,0x8
10013402:	add    ebx,0x20
10013405:	jmp    0x10013343
1001340a:	cmp    DWORD PTR [ebp+0x18],0x1
1001340e:	jne    0x10013429
10013410:	or     DWORD PTR [ebp+0x4],0x2000000
10013417:	and    ecx,0x1
1001341a:	lea    eax,[ebx+ecx*8]
1001341d:	call   0x10013020
10013422:	mov    ebx,eax
10013424:	jmp    0x10013343
10013429:	add    ebx,0x30
1001342c:	jmp    0x10013343
10013431:	mov    edx,0x40
10013436:	add    ebx,0x53
10013439:	jmp    0x10013343
1001343e:	test   cl,0x1
10013441:	je     0x1001344d
10013443:	or     DWORD PTR [ebp+0x4],0x2000000
1001344a:	add    ebx,0x8
1001344d:	mov    edx,0x80
10013452:	add    ebx,0x5b
10013455:	jmp    0x10013343
1001345a:	test   cl,0x1
1001345d:	je     0x1001333b
10013463:	or     DWORD PTR [ebp+0x4],0x2000000
1001346a:	jmp    0x10013338
1001346f:	test   cl,0x1
10013472:	je     0x10013477
10013474:	add    ebx,0x8
10013477:	add    ebx,0x6b
1001347a:	jmp    0x10013343
1001347f:	test   cl,0x1
10013482:	je     0x10013487
10013484:	add    ebx,0x8
10013487:	test   cl,0x10
1001348a:	je     0x1001344d
1001348c:	mov    edx,0x100
10013491:	add    ebx,0x6b
10013494:	jmp    0x10013343
10013499:	test   cl,0x1
1001349c:	je     0x1001344d
1001349e:	add    ebx,0x8
100134a1:	mov    edx,0x80
100134a6:	add    ebx,0x5b
100134a9:	jmp    0x10013343
100134ae:	test   cl,0x1
100134b1:	je     0x100134b6
100134b3:	add    ebx,0x8
100134b6:	test   cl,0x8
100134b9:	je     0x1001333b
100134bf:	mov    edx,0x40
100134c4:	jmp    0x10013343
100134c9:	or     DWORD PTR [ebp+0x4],0x4000
100134d0:	test   eax,eax
100134d2:	je     0x100134e0
100134d4:	test   BYTE PTR [ebp+0x0],0x10
100134d8:	je     0x100134e0
100134da:	mov    DWORD PTR [eax],0x1
100134e0:	cmp    DWORD PTR [esp+0x2c],esi
100134e4:	jne    0x100135f5
100134ea:	test   edx,edx
100134ec:	jne    0x10013522
100134ee:	cmp    ebx,0x6
100134f1:	jne    0x10013522
100134f3:	mov    eax,DWORD PTR [esp+0x18]
100134f7:	mov    ecx,DWORD PTR [esp+0x20]
100134fb:	mov    BYTE PTR [eax+ecx*4+0x12],0x5
10013500:	mov    ecx,DWORD PTR [esp+0x14]
10013504:	lea    esi,[eax+0x28]
10013507:	lea    edi,[edx+0x2]
1001350a:	mov    BYTE PTR [eax+0xf],0x10
1001350e:	call   0x100130f0
10013513:	test   eax,eax
10013515:	jne    0x100135be
1001351b:	pop    edi
1001351c:	pop    esi
1001351d:	pop    ebp
1001351e:	xor    eax,eax
10013520:	pop    ebx
10013521:	ret    
10013522:	cmp    ebx,0x4
10013525:	jae    0x10013549
10013527:	mov    esi,DWORD PTR [esp+0x18]
1001352b:	mov    edi,DWORD PTR [esp+0x20]
1001352f:	mov    BYTE PTR [esi+edi*4+0x12],0x7
10013534:	mov    al,BYTE PTR [ebx+0x1008bd68]
1001353a:	mov    BYTE PTR [esi+0xd],al
1001353d:	mov    cl,BYTE PTR [ebx+0x1008bd70]
10013543:	mov    BYTE PTR [esi+edi*4+0x13],cl
10013547:	jmp    0x10013560
10013549:	mov    edi,DWORD PTR [esp+0x18]
1001354d:	mov    esi,DWORD PTR [esp+0x20]
10013551:	mov    BYTE PTR [edi+esi*4+0x12],0x6
10013556:	mov    al,BYTE PTR [ebx+0x1008bd68]
1001355c:	mov    BYTE PTR [edi+esi*4+0x13],al
10013560:	cmp    edx,0x1
10013563:	jne    0x10013584
10013565:	mov    eax,DWORD PTR [esp+0x18]
10013569:	mov    ecx,DWORD PTR [esp+0x14]
1001356d:	lea    esi,[eax+0x28]
10013570:	mov    edi,edx
10013572:	mov    BYTE PTR [eax+0xf],0x8
10013576:	call   0x100130f0
1001357b:	test   eax,eax
1001357d:	jne    0x100135a7
1001357f:	pop    edi
10013580:	pop    esi
10013581:	pop    ebp
10013582:	pop    ebx
10013583:	ret    
10013584:	cmp    edx,0x2
10013587:	jne    0x100135ab
10013589:	mov    eax,DWORD PTR [esp+0x18]
1001358d:	mov    ecx,DWORD PTR [esp+0x14]
10013591:	lea    esi,[eax+0x28]
10013594:	mov    edi,edx
10013596:	mov    BYTE PTR [eax+0xf],0x10
1001359a:	call   0x100130f0
1001359f:	test   eax,eax
100135a1:	je     0x1001351b
100135a7:	mov    edx,DWORD PTR [esp+0x30]
100135ab:	cmp    ebx,0x2
100135ae:	je     0x100135e3
100135b0:	cmp    ebx,0x3
100135b3:	je     0x100135e3
100135b5:	cmp    ebx,0x6
100135b8:	jne    0x100135be
100135ba:	test   edx,edx
100135bc:	jne    0x100135e3
100135be:	mov    ecx,DWORD PTR [esp+0x18]
100135c2:	mov    edx,DWORD PTR [esp+0x14]
100135c6:	mov    eax,DWORD PTR [edx+0x18]
100135c9:	push   ecx
100135ca:	push   eax
100135cb:	push   ebp
100135cc:	push   0x200
100135d1:	call   0x10014e10
100135d6:	add    esp,0x10
100135d9:	pop    edi
100135da:	pop    esi
100135db:	pop    ebp
100135dc:	mov    eax,0x1
100135e1:	pop    ebx
100135e2:	ret    
100135e3:	mov    ecx,DWORD PTR [esp+0x18]
100135e7:	mov    edx,DWORD PTR [esp+0x14]
100135eb:	mov    eax,DWORD PTR [edx+0x18]
100135ee:	push   ecx
100135ef:	push   eax
100135f0:	jmp    0x10013762
100135f5:	test   edx,edx
100135f7:	jne    0x1001364a
100135f9:	cmp    ebx,0x5
100135fc:	jne    0x1001364a
100135fe:	mov    ebx,DWORD PTR [esp+0x18]
10013602:	mov    ecx,DWORD PTR [esp+0x14]
10013606:	lea    esi,[ebx+0x28]
10013609:	lea    edi,[edx+0x4]
1001360c:	mov    BYTE PTR [ebx+0xf],0x20
10013610:	call   0x100130f0
10013615:	test   eax,eax
10013617:	je     0x1001351b
1001361d:	cmp    DWORD PTR [ecx+0x18],0x2
10013621:	jne    0x1001363c
10013623:	mov    eax,DWORD PTR [esp+0x20]
10013627:	mov    BYTE PTR [ebx+eax*4+0x12],0x6
1001362c:	mov    BYTE PTR [ebx+eax*4+0x13],0x4a
10013631:	or     WORD PTR [ebx+0xa],0x80
10013637:	jmp    0x10013713
1001363c:	mov    ecx,DWORD PTR [esp+0x20]
10013640:	mov    BYTE PTR [ebx+ecx*4+0x12],0x5
10013645:	jmp    0x10013713
1001364a:	cmp    ebx,0x4
1001364d:	jne    0x10013691
1001364f:	mov    eax,DWORD PTR [esp+0x14]
10013653:	lea    esi,[ebx-0x3]
10013656:	lea    ecx,[esp+0x24]
1001365a:	call   0x10013060
1001365f:	test   eax,eax
10013661:	je     0x1001351b
10013667:	mov    edx,DWORD PTR [esp+0x30]
1001366b:	mov    eax,DWORD PTR [esp+0x2c]
1001366f:	mov    ecx,DWORD PTR [esp+0x20]
10013673:	mov    esi,DWORD PTR [esp+0x24]
10013677:	push   edx
10013678:	mov    edx,DWORD PTR [esp+0x1c]
1001367c:	push   eax
1001367d:	push   ecx
1001367e:	push   edx
1001367f:	mov    edx,esi
10013681:	mov    edi,ebp
10013683:	call   0x10013180
10013688:	mov    edx,DWORD PTR [esp+0x40]
1001368c:	add    esp,0x10
1001368f:	jmp    0x100136bb
10013691:	test   cl,0x1
10013694:	mov    edi,DWORD PTR [esp+0x18]
10013698:	mov    eax,DWORD PTR [esp+0x20]
1001369c:	mov    BYTE PTR [edi+eax*4+0x12],0x6
100136a1:	je     0x100136ad
100136a3:	or     DWORD PTR [ebp+0x4],0x2000000
100136aa:	add    ebx,0x8
100136ad:	cmp    DWORD PTR [esp+0x2c],0x2
100136b2:	je     0x100136b7
100136b4:	add    bl,0x10
100136b7:	mov    BYTE PTR [edi+eax*4+0x13],bl
100136bb:	cmp    edx,0x1
100136be:	jne    0x100136df
100136c0:	mov    eax,DWORD PTR [esp+0x18]
100136c4:	mov    ecx,DWORD PTR [esp+0x14]
100136c8:	lea    esi,[eax+0x28]
100136cb:	mov    edi,edx
100136cd:	mov    BYTE PTR [eax+0xf],0x8
100136d1:	call   0x100130f0
100136d6:	test   eax,eax
100136d8:	jne    0x1001370f
100136da:	pop    edi
100136db:	pop    esi
100136dc:	pop    ebp
100136dd:	pop    ebx
100136de:	ret    
100136df:	cmp    edx,0x2
100136e2:	je     0x100136ed
100136e4:	mov    eax,esi
100136e6:	and    eax,0x7
100136e9:	cmp    al,0x5
100136eb:	jne    0x1001370f
100136ed:	mov    ebx,DWORD PTR [esp+0x18]
100136f1:	mov    ecx,DWORD PTR [esp+0x14]
100136f5:	lea    esi,[ebx+0x28]
100136f8:	mov    edi,0x4
100136fd:	mov    BYTE PTR [ebx+0xf],0x20
10013701:	call   0x100130f0
10013706:	test   eax,eax
10013708:	jne    0x10013713
1001370a:	pop    edi
1001370b:	pop    esi
1001370c:	pop    ebp
1001370d:	pop    ebx
1001370e:	ret    
1001370f:	mov    ebx,DWORD PTR [esp+0x18]
10013713:	mov    al,BYTE PTR [ebx+0xd]
10013716:	cmp    al,0xff
10013718:	mov    ecx,DWORD PTR [esp+0x20]
1001371c:	movzx  ecx,BYTE PTR [ebx+ecx*4+0x13]
10013721:	je     0x10013728
10013723:	movzx  ecx,al
10013726:	jmp    0x1001372e
10013728:	cmp    BYTE PTR [ebx+0xe],0x2
1001372c:	jae    0x10013738
1001372e:	cmp    ecx,0x15
10013731:	je     0x10013759
10013733:	cmp    ecx,0x14
10013736:	je     0x10013759
10013738:	mov    edx,DWORD PTR [esp+0x14]
1001373c:	mov    eax,DWORD PTR [edx+0x18]
1001373f:	push   ebx
10013740:	push   eax
10013741:	push   ebp
10013742:	push   0x200
10013747:	call   0x10014e10
1001374c:	add    esp,0x10
1001374f:	pop    edi
10013750:	pop    esi
10013751:	pop    ebp
10013752:	mov    eax,0x1
10013757:	pop    ebx
10013758:	ret    
10013759:	mov    ecx,DWORD PTR [esp+0x14]
1001375d:	mov    edx,DWORD PTR [ecx+0x18]
10013760:	push   ebx
10013761:	push   edx
10013762:	push   ebp
10013763:	push   0x100
10013768:	call   0x10014e10
1001376d:	add    esp,0x10
10013770:	pop    edi
10013771:	pop    esi
10013772:	pop    ebp
10013773:	mov    eax,0x1
10013778:	pop    ebx
10013779:	ret    
1001377a:	mov    edi,edi
1001377c:	or     dh,BYTE PTR [ecx+eax*1]
1001377f:	adc    bl,dh
10013781:	xor    eax,DWORD PTR [ecx]
10013783:	adc    dh,ah
10013785:	xor    al,BYTE PTR [ecx]
10013787:	adc    BYTE PTR [ebx+esi*1+0x33c31001],al
1001378e:	add    DWORD PTR [eax],edx
10013790:	pop    edx
10013791:	xor    al,0x1
10013793:	adc    BYTE PTR [ecx],dh
10013795:	xor    al,0x1
10013797:	adc    BYTE PTR [esi],bh
10013799:	xor    al,0x1
1001379b:	adc    BYTE PTR [esi-0x66effecc],ch
100137a1:	xor    al,0x1
100137a3:	adc    BYTE PTR [edi+0x34],ch
100137a6:	add    DWORD PTR [eax],edx
100137a8:	jg     0x100137de
100137aa:	add    DWORD PTR [eax],edx
100137ac:	sbb    esi,DWORD PTR ds:0x1001001
100137b2:	add    al,BYTE PTR [ebx]
100137b4:	add    al,0xc
100137b6:	or     al,0xc
100137b8:	or     al,0x5
100137ba:	add    eax,0xc020303
100137bf:	or     al,0xc
100137c1:	or     al,0xc
100137c3:	or     al,0xc
100137c5:	or     al,0xc
100137c7:	or     al,0xc
100137c9:	or     al,0xc
100137cb:	or     al,0xc
100137cd:	or     al,0xc
100137cf:	or     al,0xc
100137d1:	or     al,0xc
100137d3:	or     al,0xc
100137d5:	or     al,0xc
100137d7:	or     al,0xc
100137d9:	or     al,0xc
100137db:	or     al,0xc
100137dd:	or     al,0xc
100137df:	or     al,0xc
100137e1:	or     al,0xc
100137e3:	push   es
100137e4:	push   es
100137e5:	or     al,0xc
100137e7:	pop    es
100137e8:	pop    es
100137e9:	pop    es
100137ea:	pop    es
100137eb:	or     al,0x5
100137ed:	or     BYTE PTR [eax],cl
100137ef:	or     al,0x8
100137f1:	or     DWORD PTR [esp+ecx*1],ecx
100137f4:	or     al,0xc
100137f6:	or     al,0xa
100137f8:	or     al,0xc
100137fa:	or     ecx,DWORD PTR [ebx]
100137fc:	or     esp,ecx
100137fe:	int3   
100137ff:	int3   
10013800:	sub    esp,0xc
10013803:	mov    ecx,DWORD PTR [esp+0x18]
10013807:	mov    edx,DWORD PTR [ecx+0x8]
1001380a:	mov    ecx,DWORD PTR [esp+0x14]
1001380e:	push   ebx
1001380f:	push   ebp
10013810:	mov    ebp,DWORD PTR [esp+0x30]
10013814:	mov    eax,DWORD PTR [ebp+0x24]
10013817:	push   esi
10013818:	mov    esi,DWORD PTR [esp+0x30]
1001381c:	mov    DWORD PTR [esp+0x34],edx
10013820:	mov    edx,DWORD PTR [esp+0x2c]
10013824:	lea    ebx,[ecx+edx*4+0x12]
10013828:	push   edi
10013829:	mov    edi,esi
1001382b:	mov    edx,esi
1001382d:	and    esi,0x7
10013830:	mov    DWORD PTR [esp+0x34],esi
10013834:	mov    esi,DWORD PTR [esp+0x2c]
10013838:	shr    edi,0x6
1001383b:	shr    edx,0x3
1001383e:	mov    DWORD PTR [esp+0x18],eax
10013842:	mov    eax,DWORD PTR [ebp+0x28]
10013845:	and    edx,0x7
10013848:	add    esi,0xffffffec
1001384b:	xor    ecx,ecx
1001384d:	and    edi,0x3
10013850:	cmp    esi,0x48
10013853:	mov    DWORD PTR [esp+0x14],eax
10013857:	mov    DWORD PTR [esp+0x10],edx
1001385b:	ja     0x100139bc
10013861:	movzx  esi,BYTE PTR [esi+0x100146d0]
10013868:	jmp    DWORD PTR [esi*4+0x1001469c]
1001386f:	mov    eax,DWORD PTR [esp+0x44]
10013873:	test   eax,eax
10013875:	je     0x10013883
10013877:	test   BYTE PTR [ebp+0x0],0x10
1001387b:	je     0x10013883
1001387d:	mov    DWORD PTR [eax],0x1
10013883:	cmp    DWORD PTR [esp+0x3c],0x2
10013888:	jne    0x100138a9
1001388a:	or     DWORD PTR [ebp+0x4],0x2000000
10013891:	mov    ecx,0x6
10013896:	jmp    0x10013935
1001389b:	cmp    DWORD PTR [esp+0x3c],0x2
100138a0:	jne    0x100138eb
100138a2:	or     DWORD PTR [ebp+0x4],0x2000000
100138a9:	mov    ecx,0x4
100138ae:	jmp    0x10013935
100138b3:	mov    eax,DWORD PTR [esp+0x3c]
100138b7:	sub    eax,0x0
100138ba:	je     0x100138f2
100138bc:	sub    eax,0x1
100138bf:	je     0x100138e4
100138c1:	sub    eax,0x1
100138c4:	jne    0x10013935
100138c6:	mov    eax,DWORD PTR [esp+0x38]
100138ca:	and    eax,0x3000000
100138cf:	cmp    eax,0x3000000
100138d4:	jne    0x100138a9
100138d6:	or     DWORD PTR [ebp+0x4],0x2000000
100138dd:	mov    ecx,0x4
100138e2:	jmp    0x10013935
100138e4:	or     DWORD PTR [ebp+0x4],0x2000
100138eb:	mov    ecx,0x3
100138f0:	jmp    0x10013935
100138f2:	or     DWORD PTR [ebp+0x4],0x2000
100138f9:	mov    ecx,0x2
100138fe:	jmp    0x10013935
10013900:	mov    edx,DWORD PTR [esp+0x20]
10013904:	xor    ecx,ecx
10013906:	cmp    DWORD PTR [edx+0x18],0x2
1001390a:	sete   cl
1001390d:	add    ecx,0x3
10013910:	jmp    0x10013935
10013912:	cmp    edi,0x3
10013915:	jne    0x10013952
10013917:	lea    eax,[edi-0x2]
1001391a:	pop    edi
1001391b:	pop    esi
1001391c:	pop    ebp
1001391d:	pop    ebx
1001391e:	add    esp,0xc
10013921:	ret    
10013922:	mov    ecx,0x5
10013927:	jmp    0x10013935
10013929:	movzx  ecx,al
1001392c:	and    ecx,0x10
1001392f:	or     ecx,0x60
10013932:	shr    ecx,0x4
10013935:	cmp    edi,0x3
10013938:	jne    0x10013952
1001393a:	mov    eax,DWORD PTR [esp+0x44]
1001393e:	test   eax,eax
10013940:	je     0x10013948
10013942:	mov    DWORD PTR [eax],0x0
10013948:	xor    eax,eax
1001394a:	pop    edi
1001394b:	pop    esi
1001394c:	pop    ebp
1001394d:	pop    ebx
1001394e:	add    esp,0xc
10013951:	ret    
10013952:	mov    ax,WORD PTR [ecx*2+0x1008bd58]
1001395a:	mov    ecx,DWORD PTR [esp+0x38]
1001395e:	mov    edx,DWORD PTR [esp+0x40]
10013962:	mov    esi,DWORD PTR [esp+0x24]
10013966:	push   ecx
10013967:	mov    ecx,DWORD PTR [esp+0x34]
1001396b:	push   edi
1001396c:	push   edx
1001396d:	mov    edx,DWORD PTR [esp+0x38]
10013971:	mov    WORD PTR [ebx+0x2],ax
10013975:	mov    eax,DWORD PTR [esp+0x48]
10013979:	push   eax
1001397a:	mov    eax,DWORD PTR [esp+0x30]
1001397e:	push   ebp
1001397f:	push   ecx
10013980:	mov    ecx,DWORD PTR [esp+0x4c]
10013984:	push   edx
10013985:	push   esi
10013986:	push   eax
10013987:	mov    eax,DWORD PTR [esp+0x68]
1001398b:	call   0x10013290
10013990:	mov    cl,BYTE PTR [ebx]
10013992:	add    esp,0x24
10013995:	cmp    cl,0x1
10013998:	je     0x100139a4
1001399a:	cmp    cl,0x6
1001399d:	je     0x100139a4
1001399f:	cmp    cl,0x7
100139a2:	jne    0x1001394a
100139a4:	movzx  ecx,BYTE PTR [ebx+0x1]
100139a8:	mov    dx,WORD PTR [ecx*2+0x1008bc40]
100139b0:	or     WORD PTR [esi+0x3c],dx
100139b4:	pop    edi
100139b5:	pop    esi
100139b6:	pop    ebp
100139b7:	pop    ebx
100139b8:	add    esp,0xc
100139bb:	ret    
100139bc:	mov    esi,DWORD PTR [esp+0x2c]
100139c0:	lea    ecx,[esi-0xf]
100139c3:	cmp    ecx,0x4c
100139c6:	ja     0x10013b36
100139cc:	movzx  ecx,BYTE PTR [ecx+0x1001475c]
100139d3:	mov    esi,0x2000
100139d8:	jmp    DWORD PTR [ecx*4+0x1001471c]
100139df:	or     DWORD PTR [ebp+0x4],esi
100139e2:	mov    ecx,DWORD PTR [esp+0x3c]
100139e6:	cmp    ecx,0x1
100139e9:	mov    eax,DWORD PTR [ebp+0x4]
100139ec:	jne    0x10013a00
100139ee:	mov    eax,0x3
100139f3:	mov    ax,WORD PTR [eax*2+0x1008bd58]
100139fb:	jmp    0x1001395a
10013a00:	cmp    ecx,0x2
10013a03:	jne    0x10013a29
10013a05:	test   DWORD PTR [esp+0x38],0x1000000
10013a0d:	jne    0x10013a17
10013a0f:	or     eax,0x2000000
10013a14:	mov    DWORD PTR [ebp+0x4],eax
10013a17:	mov    eax,0x4
10013a1c:	mov    ax,WORD PTR [eax*2+0x1008bd58]
10013a24:	jmp    0x1001395a
10013a29:	cmp    DWORD PTR [esp+0x2c],0x10
10013a2e:	je     0x10013a33
10013a30:	or     DWORD PTR [ebp+0x4],esi
10013a33:	mov    eax,0x2
10013a38:	mov    ax,WORD PTR [eax*2+0x1008bd58]
10013a40:	jmp    0x1001395a
10013a45:	cmp    DWORD PTR [esp+0x3c],0x2
10013a4a:	jne    0x100139ee
10013a4c:	mov    edx,DWORD PTR [esp+0x38]
10013a50:	and    edx,0x3000000
10013a56:	cmp    edx,0x3000000
10013a5c:	mov    eax,0x4
10013a61:	jne    0x10013b25
10013a67:	or     DWORD PTR [ebp+0x4],0x2000000
10013a6e:	mov    ax,WORD PTR [eax*2+0x1008bd58]
10013a76:	jmp    0x1001395a
10013a7b:	test   DWORD PTR [ebp+0x0],esi
10013a7e:	je     0x100139ee
10013a84:	or     DWORD PTR [ebp+0x4],esi
10013a87:	mov    eax,0x2
10013a8c:	mov    ax,WORD PTR [eax*2+0x1008bd58]
10013a94:	jmp    0x1001395a
10013a99:	and    al,0x8
10013a9b:	neg    al
10013a9d:	sbb    eax,eax
10013a9f:	neg    eax
10013aa1:	add    eax,0x3
10013aa4:	mov    ax,WORD PTR [eax*2+0x1008bd58]
10013aac:	jmp    0x1001395a
10013ab1:	and    al,0x10
10013ab3:	neg    al
10013ab5:	sbb    eax,eax
10013ab7:	and    eax,0x3
10013aba:	add    eax,0x4
10013abd:	mov    ax,WORD PTR [eax*2+0x1008bd58]
10013ac5:	jmp    0x1001395a
10013aca:	movzx  eax,al
10013acd:	and    eax,0x10
10013ad0:	or     eax,0x60
10013ad3:	shr    eax,0x4
10013ad6:	mov    ax,WORD PTR [eax*2+0x1008bd58]
10013ade:	jmp    0x1001395a
10013ae3:	movzx  eax,al
10013ae6:	and    eax,0x10
10013ae9:	or     eax,0x20
10013aec:	shr    eax,0x3
10013aef:	mov    ax,WORD PTR [eax*2+0x1008bd58]
10013af7:	jmp    0x1001395a
10013afc:	mov    eax,0x1
10013b01:	mov    ax,WORD PTR [eax*2+0x1008bd58]
10013b09:	jmp    0x1001395a
10013b0e:	mov    eax,0x6
10013b13:	mov    ax,WORD PTR [eax*2+0x1008bd58]
10013b1b:	jmp    0x1001395a
10013b20:	mov    eax,0x7
10013b25:	mov    ax,WORD PTR [eax*2+0x1008bd58]
10013b2d:	jmp    0x1001395a
10013b32:	mov    esi,DWORD PTR [esp+0x2c]
10013b36:	lea    ecx,[esi-0x1]
10013b39:	cmp    ecx,0x57
10013b3c:	ja     0x10013948
10013b42:	movzx  ecx,BYTE PTR [ecx+0x1001487c]
10013b49:	jmp    DWORD PTR [ecx*4+0x100147ac]
10013b50:	push   0x2
10013b52:	mov    edx,0x8
10013b57:	mov    eax,ebx
10013b59:	call   0x10013030
10013b5e:	mov    ecx,DWORD PTR [esp+0x24]
10013b62:	add    ecx,0x30
10013b65:	mov    esi,0x1
10013b6a:	mov    eax,DWORD PTR [esp+0x20]
10013b6e:	call   0x10013060
10013b73:	test   eax,eax
10013b75:	jne    0x10013d5d
10013b7b:	pop    edi
10013b7c:	pop    esi
10013b7d:	pop    ebp
10013b7e:	pop    ebx
10013b7f:	add    esp,0xc
10013b82:	ret    
10013b83:	mov    eax,DWORD PTR [esp+0x3c]
10013b87:	test   eax,eax
10013b89:	jne    0x10013bac
10013b8b:	or     DWORD PTR [ebp+0x4],0x2000
10013b92:	push   0x2
10013b94:	mov    edx,0x10
10013b99:	mov    eax,ebx
10013b9b:	call   0x10013030
10013ba0:	mov    ecx,DWORD PTR [esp+0x24]
10013ba4:	add    ecx,0x30
10013ba7:	lea    esi,[edx-0xe]
10013baa:	jmp    0x10013b6a
10013bac:	cmp    eax,0x2
10013baf:	jne    0x10013be2
10013bb1:	mov    eax,DWORD PTR [esp+0x38]
10013bb5:	and    eax,0x3000000
10013bba:	cmp    eax,0x3000000
10013bbf:	jne    0x10013be2
10013bc1:	or     DWORD PTR [ebp+0x4],0x2000000
10013bc8:	push   0x2
10013bca:	mov    edx,0x40
10013bcf:	mov    eax,ebx
10013bd1:	call   0x10013030
10013bd6:	mov    ecx,DWORD PTR [esp+0x24]
10013bda:	add    ecx,0x30
10013bdd:	lea    esi,[edx-0x38]
10013be0:	jmp    0x10013b6a
10013be2:	or     DWORD PTR [ebp+0x4],0x2000
10013be9:	mov    eax,DWORD PTR [esp+0x20]
10013bed:	mov    ecx,DWORD PTR [esp+0x24]
10013bf1:	mov    BYTE PTR [ebx],0x2
10013bf4:	cmp    DWORD PTR [eax+0x18],0x2
10013bf8:	jne    0x10013c19
10013bfa:	mov    edx,0x20
10013bff:	mov    WORD PTR [ebx+0x2],dx
10013c03:	or     WORD PTR [ecx+0xa],dx
10013c07:	lea    esi,[ecx+0x30]
10013c0a:	lea    edi,[edx-0x1c]
10013c0d:	mov    ecx,eax
10013c0f:	call   0x100130f0
10013c14:	jmp    0x10013b73
10013c19:	mov    WORD PTR [ebx+0x2],0x20
10013c1f:	add    ecx,0x30
10013c22:	mov    esi,0x4
10013c27:	jmp    0x10013b6e
10013c2c:	mov    ecx,DWORD PTR [esp+0x20]
10013c30:	mov    esi,0x2000
10013c35:	test   DWORD PTR [esp+0x38],esi
10013c39:	mov    BYTE PTR [ebx],0x2
10013c3c:	je     0x10013c65
10013c3e:	test   DWORD PTR [ebp+0x0],esi
10013c41:	je     0x10013c65
10013c43:	or     DWORD PTR [ebp+0x4],esi
10013c46:	mov    eax,DWORD PTR [ecx+0x18]
10013c49:	test   eax,eax
10013c4b:	je     0x10013c5d
10013c4d:	add    eax,0xffffffff
10013c50:	cmp    eax,0x1
10013c53:	ja     0x10013c6b
10013c55:	mov    WORD PTR [ebx+0x2],0x10
10013c5b:	jmp    0x10013c6b
10013c5d:	mov    WORD PTR [ebx+0x2],0x20
10013c63:	jmp    0x10013c6b
10013c65:	mov    WORD PTR [ebx+0x2],0x8
10013c6b:	mov    eax,DWORD PTR [esp+0x24]
10013c6f:	or     WORD PTR [eax+0xa],0x20
10013c74:	lea    esi,[eax+0x30]
10013c77:	mov    edi,0x1
10013c7c:	call   0x100130f0
10013c81:	jmp    0x10013b73
10013c86:	push   0x3
10013c88:	jmp    0x10013b94
10013c8d:	push   0x3
10013c8f:	jmp    0x10013b52
10013c94:	push   0x4
10013c96:	mov    edx,0x8
10013c9b:	mov    eax,ebx
10013c9d:	call   0x10013030
10013ca2:	mov    ecx,DWORD PTR [esp+0x24]
10013ca6:	add    ecx,0x34
10013ca9:	jmp    0x10013b65
10013cae:	push   0x1
10013cb0:	mov    edx,0x8
10013cb5:	mov    eax,ebx
10013cb7:	call   0x10013030
10013cbc:	cmp    DWORD PTR [ebp+0x18],0x0
10013cc0:	je     0x10013ce1
10013cc2:	mov    eax,DWORD PTR [esp+0x14]
10013cc6:	mov    edx,DWORD PTR [esp+0x10]
10013cca:	or     DWORD PTR [ebp+0x4],0x2000000
10013cd1:	and    eax,0x4
10013cd4:	lea    eax,[edx+eax*2]
10013cd7:	call   0x10013020
10013cdc:	mov    BYTE PTR [ebx+0x1],al
10013cdf:	jmp    0x10013d5d
10013ce1:	mov    al,BYTE PTR [esp+0x10]
10013ce5:	add    al,0x30
10013ce7:	mov    BYTE PTR [ebx+0x1],al
10013cea:	jmp    0x10013d5d
10013cec:	mov    ecx,DWORD PTR [esp+0x3c]
10013cf0:	sub    ecx,0x0
10013cf3:	je     0x10013d1e
10013cf5:	sub    ecx,0x1
10013cf8:	je     0x10013d11
10013cfa:	sub    ecx,0x1
10013cfd:	jne    0x10013d5d
10013cff:	or     DWORD PTR [ebp+0x4],0x2000000
10013d06:	and    eax,0x4
10013d09:	lea    eax,[edx+eax*2]
10013d0c:	push   eax
10013d0d:	push   0x40
10013d0f:	jmp    0x10013d54
10013d11:	test   al,0x4
10013d13:	jne    0x10013d44
10013d15:	or     DWORD PTR [ebp+0x4],0x2000
10013d1c:	jmp    0x10013d4e
10013d1e:	or     DWORD PTR [ebp+0x4],0x2000
10013d25:	test   al,0x4
10013d27:	mov    ecx,DWORD PTR [ebp+0x4]
10013d2a:	je     0x10013d38
10013d2c:	or     ecx,0x2000000
10013d32:	mov    DWORD PTR [ebp+0x4],ecx
10013d35:	add    edx,0x8
10013d38:	add    edx,0x20
10013d3b:	push   edx
10013d3c:	push   0x10
10013d3e:	jmp    0x10013d54
10013d40:	test   al,0x4
10013d42:	je     0x10013d4e
10013d44:	or     DWORD PTR [ebp+0x4],0x2000000
10013d4b:	add    edx,0x8
10013d4e:	add    edx,0x10
10013d51:	push   edx
10013d52:	push   0x20
10013d54:	mov    eax,ebx
10013d56:	push   0x1
10013d58:	call   0x10013040
10013d5d:	mov    al,BYTE PTR [ebx]
10013d5f:	cmp    al,0x1
10013d61:	je     0x10013d6b
10013d63:	cmp    al,0x6
10013d65:	je     0x10013d6b
10013d67:	cmp    al,0x7
10013d69:	jne    0x10013d7f
10013d6b:	movzx  ecx,BYTE PTR [ebx+0x1]
10013d6f:	mov    dx,WORD PTR [ecx*2+0x1008bc40]
10013d77:	mov    eax,DWORD PTR [esp+0x24]
10013d7b:	or     WORD PTR [eax+0x3c],dx
10013d7f:	pop    edi
10013d80:	pop    esi
10013d81:	pop    ebp
10013d82:	mov    eax,0x1
10013d87:	pop    ebx
10013d88:	add    esp,0xc
10013d8b:	ret    
10013d8c:	test   al,0x4
10013d8e:	mov    edi,0x2000000
10013d93:	je     0x10013d9b
10013d95:	or     DWORD PTR [ebp+0x4],edi
10013d98:	add    edx,0x8
10013d9b:	mov    ecx,DWORD PTR [esp+0x20]
10013d9f:	cmp    DWORD PTR [ecx+0x18],0x2
10013da3:	jne    0x10013dbc
10013da5:	mov    esi,DWORD PTR [esp+0x38]
10013da9:	and    esi,0x3000000
10013daf:	cmp    esi,0x1000000
10013db5:	jne    0x10013dbc
10013db7:	push   edx
10013db8:	push   0x40
10013dba:	jmp    0x10013d54
10013dbc:	test   al,0x8
10013dbe:	mov    eax,ebx
10013dc0:	je     0x10013dca
10013dc2:	or     DWORD PTR [ebp+0x4],edi
10013dc5:	push   edx
10013dc6:	push   0x40
10013dc8:	jmp    0x10013d56
10013dca:	add    edx,0x10
10013dcd:	push   edx
10013dce:	push   0x20
10013dd0:	jmp    0x10013d56
10013dd2:	test   al,0x1
10013dd4:	mov    eax,DWORD PTR [esp+0x34]
10013dd8:	je     0x10013de4
10013dda:	or     DWORD PTR [ebp+0x4],0x2000000
10013de1:	add    eax,0x8
10013de4:	mov    edx,DWORD PTR [esp+0x20]
10013de8:	cmp    DWORD PTR [edx+0x18],0x2
10013dec:	jne    0x10013df6
10013dee:	push   eax
10013def:	push   0x40
10013df1:	jmp    0x10013d54
10013df6:	add    eax,0x10
10013df9:	push   eax
10013dfa:	jmp    0x10013d52
10013dff:	add    edx,0x53
10013e02:	push   edx
10013e03:	push   0x40
10013e05:	jmp    0x10013d54
10013e0a:	mov    eax,DWORD PTR [esp+0x34]
10013e0e:	add    eax,0x53
10013e11:	push   eax
10013e12:	push   0x40
10013e14:	jmp    0x10013d54
10013e19:	xor    eax,eax
10013e1b:	mov    DWORD PTR [esp+0x10],eax
10013e1f:	mov    DWORD PTR [esp+0x14],eax
10013e23:	mov    edx,eax
10013e25:	test   al,0x4
10013e27:	je     0x10013e33
10013e29:	or     DWORD PTR [ebp+0x4],0x2000000
10013e30:	add    edx,0x8
10013e33:	add    edx,0x5b
10013e36:	push   edx
10013e37:	push   0x80
10013e3c:	jmp    0x10013d54
10013e41:	test   al,0x1
10013e43:	je     0x10013e51
10013e45:	or     DWORD PTR [ebp+0x4],0x2000000
10013e4c:	add    DWORD PTR [esp+0x34],0x8
10013e51:	mov    ecx,DWORD PTR [esp+0x34]
10013e55:	add    ecx,0x5b
10013e58:	push   ecx
10013e59:	push   0x80
10013e5e:	jmp    0x10013d54
10013e63:	test   al,0x4
10013e65:	mov    eax,DWORD PTR [esp+0x20]
10013e69:	je     0x10013e77
10013e6b:	or     DWORD PTR [ebp+0x4],0x2000000
10013e72:	add    edx,0x8
10013e75:	jmp    0x10013e8a
10013e77:	cmp    DWORD PTR [eax+0x18],0x1
10013e7b:	jne    0x10013e8a
10013e7d:	test   BYTE PTR [ebp+0x0],0x10
10013e81:	je     0x10013e8a
10013e83:	add    edx,0x8
10013e86:	or     DWORD PTR [ebp+0x4],0x10
10013e8a:	cmp    edx,0x9
10013e8d:	jae    0x10013948
10013e93:	cmp    edx,0x1
10013e96:	je     0x10013948
10013e9c:	cmp    edx,0x5
10013e9f:	jb     0x10013eaa
10013ea1:	cmp    edx,0x7
10013ea4:	jbe    0x10013948
10013eaa:	mov    BYTE PTR [ebx],0x1
10013ead:	mov    eax,DWORD PTR [eax+0x18]
10013eb0:	sub    eax,0x2
10013eb3:	neg    eax
10013eb5:	sbb    eax,eax
10013eb7:	and    eax,0xffffffe0
10013eba:	add    eax,0x40
10013ebd:	add    dl,0x7b
10013ec0:	mov    WORD PTR [ebx+0x2],ax
10013ec4:	mov    BYTE PTR [ebx+0x1],dl
10013ec7:	jmp    0x10013d6b
10013ecc:	cmp    edx,0x4
10013ecf:	je     0x10013948
10013ed5:	cmp    edx,0x5
10013ed8:	je     0x10013948
10013ede:	test   al,0x4
10013ee0:	jne    0x10013948
10013ee6:	mov    ecx,DWORD PTR [esp+0x20]
10013eea:	mov    BYTE PTR [ebx],0x1
10013eed:	mov    eax,DWORD PTR [ecx+0x18]
10013ef0:	sub    eax,0x2
10013ef3:	neg    eax
10013ef5:	sbb    eax,eax
10013ef7:	and    eax,0xffffffe0
10013efa:	add    eax,0x40
10013efd:	sub    dl,0x7c
10013f00:	mov    WORD PTR [ebx+0x2],ax
10013f04:	mov    BYTE PTR [ebx+0x1],dl
10013f07:	jmp    0x10013d6b
10013f0c:	cmp    DWORD PTR [esp+0x44],0x0
10013f11:	je     0x10013f1c
10013f13:	cmp    edx,0x1
10013f16:	je     0x10013948
10013f1c:	cmp    edx,0x5
10013f1f:	ja     0x10013948
10013f25:	add    edx,0x44
10013f28:	push   edx
10013f29:	push   0x10
10013f2b:	jmp    0x10013d54
10013f30:	mov    eax,DWORD PTR [esp+0x38]
10013f34:	mov    BYTE PTR [ebx],0x1
10013f37:	mov    WORD PTR [ebx+0x2],0x10
10013f3d:	or     DWORD PTR [ebp+0x4],0x2000
10013f44:	and    eax,0x1f80
10013f49:	cmp    eax,0x400
10013f4e:	ja     0x10013f8f
10013f50:	je     0x10013f86
10013f52:	cmp    eax,0x80
10013f57:	je     0x10013f7d
10013f59:	cmp    eax,0x100
10013f5e:	je     0x10013f74
10013f60:	cmp    eax,0x200
10013f65:	jne    0x10013d5d
10013f6b:	mov    BYTE PTR [ebx+0x1],0x47
10013f6f:	jmp    0x10013d5d
10013f74:	mov    BYTE PTR [ebx+0x1],0x46
10013f78:	jmp    0x10013d5d
10013f7d:	mov    BYTE PTR [ebx+0x1],0x45
10013f81:	jmp    0x10013d5d
10013f86:	mov    BYTE PTR [ebx+0x1],0x44
10013f8a:	jmp    0x10013d5d
10013f8f:	cmp    eax,0x800
10013f94:	je     0x10013faa
10013f96:	cmp    eax,0x1000
10013f9b:	jne    0x10013d5d
10013fa1:	mov    BYTE PTR [ebx+0x1],0x49
10013fa5:	jmp    0x10013d5d
10013faa:	mov    BYTE PTR [ebx+0x1],0x48
10013fae:	jmp    0x10013d5d
10013fb3:	push   0x30
10013fb5:	push   0x8
10013fb7:	jmp    0x10013d54
10013fbc:	mov    eax,DWORD PTR [esp+0x3c]
10013fc0:	test   eax,eax
10013fc2:	jne    0x10013fd4
10013fc4:	or     DWORD PTR [ebp+0x4],0x2000
10013fcb:	push   0x20
10013fcd:	push   0x10
10013fcf:	jmp    0x10013d54
10013fd4:	cmp    eax,0x1
10013fd7:	jne    0x10013fe7
10013fd9:	or     DWORD PTR [ebp+0x4],0x2000
10013fe0:	push   0x10
10013fe2:	jmp    0x10013d52
10013fe7:	mov    eax,DWORD PTR [esp+0x38]
10013feb:	not    eax
10013fed:	test   eax,0x1000000
10013ff2:	je     0x10013ffb
10013ff4:	or     DWORD PTR [ebp+0x4],0x2000000
10013ffb:	push   0x0
10013ffd:	push   0x40
10013fff:	jmp    0x10013d54
10014004:	or     DWORD PTR [ebp+0x4],0x2000
1001400b:	cmp    DWORD PTR [esp+0x3c],0x0
10014010:	mov    esi,DWORD PTR [esp+0x20]
10014014:	jne    0x1001404f
10014016:	add    DWORD PTR [esi+0x14],0xfffffffc
1001401a:	js     0x10013948
10014020:	push   0x9
10014022:	mov    edx,0x10
10014027:	mov    eax,ebx
10014029:	call   0x10013030
1001402e:	mov    ecx,DWORD PTR [esi+0x10]
10014031:	movzx  edx,WORD PTR [ecx]
10014034:	mov    eax,DWORD PTR [esp+0x24]
10014038:	mov    DWORD PTR [eax+0x34],edx
1001403b:	mov    ecx,DWORD PTR [esi+0x10]
1001403e:	mov    dx,WORD PTR [ecx+0x2]
10014042:	mov    WORD PTR [eax+0x30],dx
10014046:	add    DWORD PTR [esi+0x10],0x4
1001404a:	jmp    0x10013d5d
1001404f:	add    DWORD PTR [esi+0x14],0xfffffffa
10014053:	js     0x10013948
10014059:	push   0x9
1001405b:	mov    edx,0x20
10014060:	mov    eax,ebx
10014062:	call   0x10013030
10014067:	mov    eax,DWORD PTR [esi+0x10]
1001406a:	mov    ecx,DWORD PTR [eax]
1001406c:	mov    eax,DWORD PTR [esp+0x24]
10014070:	mov    DWORD PTR [eax+0x34],ecx
10014073:	mov    edx,DWORD PTR [esi+0x10]
10014076:	mov    cx,WORD PTR [edx+0x4]
1001407a:	mov    WORD PTR [eax+0x30],cx
1001407e:	add    DWORD PTR [esi+0x10],0x6
10014082:	jmp    0x10013d5d
10014087:	cmp    esi,0x28
1001408a:	push   0x8
1001408c:	mov    eax,ebx
1001408e:	jne    0x100140b7
10014090:	lea    edx,[esi-0x20]
10014093:	call   0x10013030
10014098:	lea    edi,[esi-0x27]
1001409b:	mov    esi,DWORD PTR [esp+0x24]
1001409f:	mov    ecx,DWORD PTR [esp+0x20]
100140a3:	add    esi,0x30
100140a6:	call   0x100130f0
100140ab:	test   eax,eax
100140ad:	jne    0x100140f9
100140af:	pop    edi
100140b0:	pop    esi
100140b1:	pop    ebp
100140b2:	pop    ebx
100140b3:	add    esp,0xc
100140b6:	ret    
100140b7:	or     DWORD PTR [ebp+0x4],0x2000
100140be:	cmp    DWORD PTR [esp+0x40],0x0
100140c3:	jne    0x100140d4
100140c5:	mov    edx,0x10
100140ca:	call   0x10013030
100140cf:	lea    edi,[edx-0xe]
100140d2:	jmp    0x1001409b
100140d4:	mov    edx,0x20
100140d9:	call   0x10013030
100140de:	mov    esi,DWORD PTR [esp+0x24]
100140e2:	mov    ecx,DWORD PTR [esp+0x20]
100140e6:	add    esi,0x30
100140e9:	lea    edi,[edx-0x1c]
100140ec:	call   0x100130f0
100140f1:	test   eax,eax
100140f3:	je     0x10013948
100140f9:	mov    edx,DWORD PTR [esp+0x28]
100140fd:	movzx  eax,WORD PTR [edx+0x4]
10014101:	cmp    ax,0x18
10014105:	jb     0x10013d5d
1001410b:	cmp    ax,0x27
1001410f:	ja     0x10013d5d
10014115:	mov    eax,DWORD PTR [ebp+0x0]
10014118:	test   al,al
1001411a:	jns    0x10014131
1001411c:	mov    eax,DWORD PTR [esp+0x24]
10014120:	or     DWORD PTR [ebp+0x4],0x80
10014127:	or     WORD PTR [eax+0xa],0x10
1001412c:	jmp    0x10013d5d
10014131:	test   eax,0x200
10014136:	je     0x10013d5d
1001413c:	mov    eax,DWORD PTR [esp+0x24]
10014140:	or     DWORD PTR [ebp+0x4],0x200
10014147:	or     WORD PTR [eax+0xa],0x8
1001414c:	jmp    0x10013d5d
10014151:	mov    WORD PTR [ebx+0x2],0x8
10014157:	cmp    WORD PTR [ebx+0x2],0x0
1001415c:	mov    BYTE PTR [ebx],0x5
1001415f:	jne    0x1001418a
10014161:	mov    eax,DWORD PTR [esp+0x3c]
10014165:	sub    eax,0x0
10014168:	je     0x10014184
1001416a:	sub    eax,0x1
1001416d:	je     0x1001417c
1001416f:	sub    eax,0x1
10014172:	jne    0x1001418a
10014174:	mov    WORD PTR [ebx+0x2],0x40
1001417a:	jmp    0x1001418a
1001417c:	mov    WORD PTR [ebx+0x2],0x20
10014182:	jmp    0x1001418a
10014184:	mov    WORD PTR [ebx+0x2],0x10
1001418a:	mov    eax,DWORD PTR [esp+0x24]
1001418e:	mov    edi,DWORD PTR [esp+0x20]
10014192:	mov    ecx,DWORD PTR [edi+0x18]
10014195:	push   eax
10014196:	push   ecx
10014197:	push   ebp
10014198:	push   0x200
1001419d:	call   0x10014e10
100141a2:	mov    eax,DWORD PTR [esp+0x50]
100141a6:	add    esp,0x10
100141a9:	test   eax,eax
100141ab:	jne    0x100141cb
100141ad:	mov    eax,DWORD PTR [esp+0x24]
100141b1:	or     DWORD PTR [ebp+0x4],0x4000
100141b8:	mov    BYTE PTR [eax+0xf],0x10
100141bc:	lea    ecx,[eax+0x28]
100141bf:	mov    esi,0x2
100141c4:	mov    eax,edi
100141c6:	jmp    0x10013b6e
100141cb:	cmp    eax,0x1
100141ce:	mov    eax,DWORD PTR [esp+0x24]
100141d2:	lea    ecx,[eax+0x28]
100141d5:	jne    0x100141ee
100141d7:	or     DWORD PTR [ebp+0x4],0x4000
100141de:	mov    BYTE PTR [eax+0xf],0x20
100141e2:	mov    esi,0x4
100141e7:	mov    eax,edi
100141e9:	jmp    0x10013b6e
100141ee:	mov    BYTE PTR [eax+0xf],0x40
100141f2:	mov    esi,0x8
100141f7:	mov    eax,edi
100141f9:	jmp    0x10013b6e
100141fe:	push   0x2
10014200:	mov    edx,0x8
10014205:	mov    eax,ebx
10014207:	call   0x10013030
1001420c:	mov    edx,DWORD PTR [esp+0x24]
10014210:	mov    BYTE PTR [edx+0x30],0x1
10014214:	jmp    0x10013d5d
10014219:	push   0x31
1001421b:	push   0x8
1001421d:	jmp    0x10013d54
10014222:	mov    eax,DWORD PTR [esp+0x20]
10014226:	mov    ecx,DWORD PTR [eax+0x10]
10014229:	movzx  edx,BYTE PTR [ecx-0x1]
1001422d:	and    edx,0x7
10014230:	add    edx,0x4b
10014233:	jmp    0x10013d51
10014238:	push   0x4b
1001423a:	push   0x20
1001423c:	push   0x1
1001423e:	mov    eax,ebx
10014240:	call   0x10013040
10014245:	mov    eax,DWORD PTR [esp+0x20]
10014249:	mov    ecx,DWORD PTR [eax+0x10]
1001424c:	movzx  edx,BYTE PTR [ecx-0x1]
10014250:	and    edx,0x7
10014253:	add    edx,0x4b
10014256:	push   edx
10014257:	push   0x20
10014259:	lea    eax,[ebx+0x4]
1001425c:	jmp    0x10013d56
10014261:	mov    eax,DWORD PTR [esp+0x20]
10014265:	mov    ecx,DWORD PTR [eax+0x10]
10014268:	movzx  edx,BYTE PTR [ecx-0x1]
1001426c:	and    edx,0x7
1001426f:	add    edx,0x4b
10014272:	push   edx
10014273:	push   0x20
10014275:	push   0x1
10014277:	mov    eax,ebx
10014279:	call   0x10013040
1001427e:	push   0x4b
10014280:	push   0x20
10014282:	lea    eax,[ebx+0x4]
10014285:	jmp    0x10013d56
1001428a:	push   0x1
1001428c:	mov    edx,0x8
10014291:	mov    eax,ebx
10014293:	call   0x10013030
10014298:	mov    eax,DWORD PTR [esp+0x20]
1001429c:	mov    ecx,DWORD PTR [eax+0x10]
1001429f:	movzx  eax,BYTE PTR [ecx-0x1]
100142a3:	and    eax,0x7
100142a6:	test   BYTE PTR [esp+0x14],0x1
100142ab:	je     0x100142c3
100142ad:	or     DWORD PTR [ebp+0x4],0x2000000
100142b4:	add    eax,edx
100142b6:	call   0x10013020
100142bb:	mov    BYTE PTR [ebx+0x1],al
100142be:	jmp    0x10013d5d
100142c3:	cmp    DWORD PTR [ebp+0x18],0x1
100142c7:	jne    0x10013ce5
100142cd:	or     DWORD PTR [ebp+0x4],0x2000000
100142d4:	call   0x10013020
100142d9:	mov    BYTE PTR [ebx+0x1],al
100142dc:	jmp    0x10013d5d
100142e1:	mov    edx,DWORD PTR [esp+0x20]
100142e5:	mov    ecx,DWORD PTR [edx+0x10]
100142e8:	movzx  ecx,BYTE PTR [ecx-0x1]
100142ec:	mov    edx,DWORD PTR [esp+0x3c]
100142f0:	and    ecx,0x7
100142f3:	sub    edx,0x0
100142f6:	je     0x10014365
100142f8:	sub    edx,0x1
100142fb:	je     0x1001433e
100142fd:	sub    edx,0x1
10014300:	jne    0x10013d5d
10014306:	mov    edx,DWORD PTR [esp+0x38]
1001430a:	test   edx,0x1000000
10014310:	mov    edi,0x2000000
10014315:	je     0x1001432d
10014317:	test   edi,edx
10014319:	jne    0x1001432d
1001431b:	test   al,0x1
1001431d:	je     0x10014336
1001431f:	or     DWORD PTR [ebp+0x4],edi
10014322:	add    ecx,0x8
10014325:	push   ecx
10014326:	push   0x40
10014328:	jmp    0x10013d54
1001432d:	or     DWORD PTR [ebp+0x4],edi
10014330:	and    eax,0x1
10014333:	lea    ecx,[ecx+eax*8]
10014336:	push   ecx
10014337:	push   0x40
10014339:	jmp    0x10013d54
1001433e:	test   al,0x1
10014340:	je     0x10014355
10014342:	or     DWORD PTR [ebp+0x4],0x2000000
10014349:	add    ecx,0x8
1001434c:	add    ecx,0x10
1001434f:	push   ecx
10014350:	jmp    0x10013d52
10014355:	or     DWORD PTR [ebp+0x4],0x2000
1001435c:	add    ecx,0x10
1001435f:	push   ecx
10014360:	jmp    0x10013d52
10014365:	or     DWORD PTR [ebp+0x4],0x2000
1001436c:	test   al,0x1
1001436e:	mov    edx,DWORD PTR [ebp+0x4]
10014371:	je     0x1001437f
10014373:	or     edx,0x2000000
10014379:	mov    DWORD PTR [ebp+0x4],edx
1001437c:	add    ecx,0x8
1001437f:	add    ecx,0x20
10014382:	push   ecx
10014383:	push   0x10
10014385:	jmp    0x10013d54
1001438a:	or     DWORD PTR [ebp+0x4],0x4000
10014391:	mov    edx,DWORD PTR [esp+0x38]
10014395:	test   dl,0x4
10014398:	mov    BYTE PTR [ebx],0x6
1001439b:	je     0x100143dc
1001439d:	or     DWORD PTR [ebp+0x4],0x2000
100143a4:	mov    ecx,DWORD PTR [esp+0x3c]
100143a8:	test   ecx,ecx
100143aa:	mov    eax,DWORD PTR [ebp+0x4]
100143ad:	jne    0x100143b7
100143af:	mov    WORD PTR [ebx+0x2],0x10
100143b5:	jmp    0x100143e2
100143b7:	cmp    ecx,0x2
100143ba:	jne    0x100143d4
100143bc:	test   edx,0x1000000
100143c2:	je     0x100143d4
100143c4:	or     eax,0x2000000
100143c9:	mov    DWORD PTR [ebp+0x4],eax
100143cc:	mov    WORD PTR [ebx+0x2],0x40
100143d2:	jmp    0x100143e2
100143d4:	mov    WORD PTR [ebx+0x2],0x20
100143da:	jmp    0x100143e2
100143dc:	mov    WORD PTR [ebx+0x2],0x8
100143e2:	mov    eax,DWORD PTR [esp+0x24]
100143e6:	mov    edx,DWORD PTR [esp+0x20]
100143ea:	push   eax
100143eb:	mov    BYTE PTR [eax+0xc],0x0
100143ef:	mov    eax,DWORD PTR [edx+0x18]
100143f2:	push   eax
100143f3:	push   ebp
100143f4:	push   0x200
100143f9:	call   0x10014e10
100143fe:	mov    eax,DWORD PTR [esp+0x50]
10014402:	add    esp,0x10
10014405:	test   eax,eax
10014407:	jne    0x10014412
10014409:	mov    BYTE PTR [ebx+0x1],0x26
1001440d:	jmp    0x10013d5d
10014412:	sub    eax,0x1
10014415:	neg    eax
10014417:	sbb    al,al
10014419:	and    al,0xf0
1001441b:	add    al,0x16
1001441d:	mov    BYTE PTR [ebx+0x1],al
10014420:	jmp    0x10013d5d
10014425:	or     DWORD PTR [ebp+0x4],0x4000
1001442c:	mov    edx,DWORD PTR [esp+0x38]
10014430:	test   dl,0x4
10014433:	mov    BYTE PTR [ebx],0x6
10014436:	je     0x10014477
10014438:	or     DWORD PTR [ebp+0x4],0x2000
1001443f:	mov    ecx,DWORD PTR [esp+0x3c]
10014443:	test   ecx,ecx
10014445:	mov    eax,DWORD PTR [ebp+0x4]
10014448:	jne    0x10014452
1001444a:	mov    WORD PTR [ebx+0x2],0x10
10014450:	jmp    0x1001447d
10014452:	cmp    ecx,0x2
10014455:	jne    0x1001446f
10014457:	test   edx,0x1000000
1001445d:	je     0x1001446f
1001445f:	or     eax,0x2000000
10014464:	mov    DWORD PTR [ebp+0x4],eax
10014467:	mov    WORD PTR [ebx+0x2],0x40
1001446d:	jmp    0x1001447d
1001446f:	mov    WORD PTR [ebx+0x2],0x20
10014475:	jmp    0x1001447d
10014477:	mov    WORD PTR [ebx+0x2],0x8
1001447d:	cmp    DWORD PTR [esp+0x30],0x0
10014482:	jne    0x10014496
10014484:	mov    ecx,DWORD PTR [esp+0x20]
10014488:	cmp    DWORD PTR [ecx+0x18],0x2
1001448c:	je     0x10014496
1001448e:	mov    edx,DWORD PTR [esp+0x24]
10014492:	mov    BYTE PTR [edx+0xc],0xc4
10014496:	mov    eax,DWORD PTR [esp+0x40]
1001449a:	test   eax,eax
1001449c:	jne    0x100144a7
1001449e:	mov    BYTE PTR [ebx+0x1],0x27
100144a2:	jmp    0x10013d5d
100144a7:	sub    eax,0x1
100144aa:	neg    eax
100144ac:	sbb    al,al
100144ae:	and    al,0xf0
100144b0:	add    al,0x17
100144b2:	mov    BYTE PTR [ebx+0x1],al
100144b5:	jmp    0x10013d5d
100144ba:	push   0x22
100144bc:	push   0x10
100144be:	jmp    0x10013d54
100144c3:	push   0x11
100144c5:	jmp    0x10013d52
100144ca:	mov    eax,DWORD PTR [esp+0x20]
100144ce:	or     DWORD PTR [ebp+0x4],0x4000
100144d5:	mov    edi,DWORD PTR [esp+0x24]
100144d9:	mov    ecx,DWORD PTR [eax+0x18]
100144dc:	push   edi
100144dd:	push   ecx
100144de:	push   ebp
100144df:	push   0x200
100144e4:	call   0x10014e10
100144e9:	add    esp,0x10
100144ec:	push   0x30
100144ee:	push   0x8
100144f0:	push   0x7
100144f2:	mov    eax,ebx
100144f4:	call   0x10013040
100144f9:	mov    eax,DWORD PTR [esp+0x40]
100144fd:	test   eax,eax
100144ff:	jne    0x1001450a
10014501:	mov    BYTE PTR [edi+0xd],0x23
10014505:	jmp    0x10013d5d
1001450a:	cmp    eax,0x1
1001450d:	jne    0x10014518
1001450f:	mov    BYTE PTR [edi+0xd],0x13
10014513:	jmp    0x10013d5d
10014518:	or     DWORD PTR [ebp+0x4],0x2000000
1001451f:	mov    BYTE PTR [edi+0xd],0x3
10014523:	jmp    0x10013d5d
10014528:	mov    eax,DWORD PTR [esp+0x40]
1001452c:	cmp    eax,0x2
1001452f:	jne    0x1001453e
10014531:	push   0x0
10014533:	push   0x40
10014535:	push   0x6
10014537:	mov    eax,ebx
10014539:	jmp    0x10013d58
1001453e:	or     DWORD PTR [ebp+0x4],0x4000
10014545:	cmp    eax,0x1
10014548:	mov    eax,ebx
1001454a:	jne    0x10014557
1001454c:	push   0x10
1001454e:	push   0x20
10014550:	push   0x6
10014552:	jmp    0x10013d58
10014557:	push   0x20
10014559:	push   0x10
1001455b:	push   0x6
1001455d:	jmp    0x10013d58
10014562:	mov    edx,DWORD PTR [esp+0x18]
10014566:	add    edx,0x5b
10014569:	push   edx
1001456a:	push   0x80
1001456f:	jmp    0x10013d54
10014574:	mov    edi,DWORD PTR [esp+0x20]
10014578:	add    DWORD PTR [edi+0x14],0xffffffff
1001457c:	js     0x10013948
10014582:	mov    esi,0x1
10014587:	cmp    DWORD PTR [edi+0x18],esi
1001458a:	jne    0x1001459a
1001458c:	mov    eax,DWORD PTR [edi+0x10]
1001458f:	movzx  eax,BYTE PTR [eax]
10014592:	shr    eax,0x4
10014595:	and    eax,0x7
10014598:	jmp    0x100145a3
1001459a:	mov    ecx,DWORD PTR [edi+0x10]
1001459d:	movzx  eax,BYTE PTR [ecx]
100145a0:	shr    eax,0x4
100145a3:	add    eax,0x5b
100145a6:	push   eax
100145a7:	push   0x80
100145ac:	push   esi
100145ad:	mov    eax,ebx
100145af:	call   0x10013040
100145b4:	add    DWORD PTR [edi+0x10],esi
100145b7:	jmp    0x10013d5d
100145bc:	test   al,0x4
100145be:	je     0x100145c3
100145c0:	add    edx,0x8
100145c3:	test   al,0x10
100145c5:	mov    eax,ebx
100145c7:	je     0x100145d7
100145c9:	add    edx,0x6b
100145cc:	push   edx
100145cd:	push   0x100
100145d2:	jmp    0x10013d56
100145d7:	add    edx,0x5b
100145da:	push   edx
100145db:	push   0x80
100145e0:	jmp    0x10013d56
100145e5:	mov    edi,DWORD PTR [esp+0x20]
100145e9:	add    DWORD PTR [edi+0x14],0xffffffff
100145ed:	js     0x10013948
100145f3:	mov    esi,0x1
100145f8:	cmp    DWORD PTR [edi+0x18],esi
100145fb:	jne    0x1001460b
100145fd:	mov    edx,DWORD PTR [edi+0x10]
10014600:	movzx  eax,BYTE PTR [edx]
10014603:	shr    eax,0x4
10014606:	and    eax,0x7
10014609:	jmp    0x10014614
1001460b:	mov    eax,DWORD PTR [edi+0x10]
1001460e:	movzx  eax,BYTE PTR [eax]
10014611:	shr    eax,0x4
10014614:	test   BYTE PTR [ebp+0x28],0x10
10014618:	je     0x100145a3
1001461a:	add    eax,0x6b
1001461d:	push   eax
1001461e:	push   0x100
10014623:	push   esi
10014624:	mov    eax,ebx
10014626:	call   0x10013040
1001462b:	add    DWORD PTR [edi+0x10],esi
1001462e:	jmp    0x10013d5d
10014633:	test   al,0x4
10014635:	je     0x1001463a
10014637:	add    edx,0x8
1001463a:	add    edx,0x6b
1001463d:	push   edx
1001463e:	push   0x100
10014643:	jmp    0x10013d54
10014648:	mov    ecx,DWORD PTR [esp+0x18]
1001464c:	add    ecx,0x6b
1001464f:	push   ecx
10014650:	push   0x100
10014655:	jmp    0x10013d54
1001465a:	test   al,0x10
1001465c:	je     0x10014670
1001465e:	mov    edx,DWORD PTR [esp+0x18]
10014662:	add    edx,0x6b
10014665:	push   edx
10014666:	push   0x100
1001466b:	jmp    0x10013d54
10014670:	mov    eax,DWORD PTR [esp+0x18]
10014674:	add    eax,0x5b
10014677:	push   eax
10014678:	push   0x80
1001467d:	jmp    0x10013d54
10014682:	test   al,0x4
10014684:	je     0x10014689
10014686:	add    edx,0x8
10014689:	test   al,0x8
1001468b:	je     0x10013d4e
10014691:	push   edx
10014692:	push   0x40
10014694:	jmp    0x10013d54
10014699:	lea    ecx,[ecx+0x0]
1001469c:	stc    
1001469d:	cmp    BYTE PTR [ecx],al
1001469f:	adc    bl,ch
100146a1:	cmp    BYTE PTR [ecx],al
100146a3:	adc    BYTE PTR [ecx+0x22100138],ch
100146a9:	cmp    DWORD PTR [ecx],eax
100146ab:	adc    BYTE PTR [ebx+0x100138],dh
100146b1:	cmp    DWORD PTR [ecx],eax
100146b3:	adc    BYTE PTR ds:0x12100139,dh
100146b9:	cmp    DWORD PTR [ecx],eax
100146bb:	adc    BYTE PTR [ebx-0x6eeffec8],bl
100146c1:	cmp    BYTE PTR [ecx],al
100146c3:	adc    BYTE PTR [edi+0x38],ch
100146c6:	add    DWORD PTR [eax],edx
100146c8:	sub    DWORD PTR [ecx],edi
100146ca:	add    DWORD PTR [eax],edx
100146cc:	mov    esp,0x100139
100146d1:	add    DWORD PTR [edx],eax
100146d3:	add    ecx,DWORD PTR [esp+ecx*1]
100146d6:	or     al,0xc
100146d8:	or     al,0xc
100146da:	or     al,0xc
100146dc:	or     al,0xc
100146de:	or     al,0xc
100146e0:	or     al,0x4
100146e2:	or     al,0x5
100146e4:	or     al,0xc
100146e6:	push   es
100146e7:	pop    es
100146e8:	add    DWORD PTR [eax],ecx
100146ea:	add    cl,BYTE PTR [ecx]
100146ec:	or     cl,BYTE PTR [esp+ecx*1]
100146ef:	or     al,0xc
100146f1:	or     al,0xc
100146f3:	or     al,0xc
100146f5:	or     al,0xc
100146f7:	or     al,0xc
100146f9:	or     al,0xc
100146fb:	or     al,0xc
100146fd:	or     al,0xc
100146ff:	or     al,0xc
10014701:	or     al,0xc
10014703:	or     al,0xc
10014705:	or     al,0xc
10014707:	or     al,0xc
10014709:	or     al,0xc
1001470b:	or     al,0xc
1001470d:	or     al,0xc
1001470f:	or     al,0xc
10014711:	or     al,0xc
10014713:	or     al,0xc
10014715:	or     al,0xc
10014717:	or     al,0xb
10014719:	lea    ecx,[ecx+0x0]
1001471c:	cld    
1001471d:	cmp    al,BYTE PTR [ecx]
1001471f:	adc    BYTE PTR [ecx],ch
10014721:	cmp    al,BYTE PTR [ecx]
10014723:	adc    bh,bl
10014725:	cmp    DWORD PTR [ecx],eax
10014727:	adc    BYTE PTR [ebp+0x3a],al
1001472a:	add    DWORD PTR [eax],edx
1001472c:	jnp    0x10014768
1001472e:	add    DWORD PTR [eax],edx
10014730:	xor    edi,DWORD PTR [edx]
10014732:	add    DWORD PTR [eax],edx
10014734:	xor    BYTE PTR [edx],bh
10014736:	add    DWORD PTR [eax],edx
10014738:	out    dx,al
10014739:	cmp    DWORD PTR [ecx],eax
1001473b:	adc    BYTE PTR [edi],dl
1001473d:	cmp    al,BYTE PTR [ecx]
1001473f:	adc    BYTE PTR [esi],cl
10014741:	cmp    eax,DWORD PTR [ecx]
10014743:	adc    BYTE PTR [ecx+0x2010013a],bl
10014749:	cmp    eax,DWORD PTR [ecx]
1001474b:	adc    BYTE PTR [ecx-0x35effec6],dh
10014751:	cmp    al,BYTE PTR [ecx]
10014753:	adc    bl,ah
10014755:	cmp    al,BYTE PTR [ecx]
10014757:	adc    BYTE PTR [edx],dh
10014759:	cmp    eax,DWORD PTR [ecx]
1001475b:	adc    BYTE PTR [eax],al
1001475d:	add    DWORD PTR [edx],eax
1001475f:	add    eax,DWORD PTR [edi+ecx*1]
10014762:	(bad)  
10014763:	(bad)  
10014764:	sldt   WORD PTR ds:0xf060500
1001476b:	(bad)  
1001476c:	(bad)  
1001476d:	(bad)  
1001476e:	(bad)  
1001476f:	(bad)  
10014770:	(bad)  
10014771:	(bad)  
10014772:	(bad)  
10014773:	(bad)  
10014774:	(bad)  
10014775:	(bad)  
10014776:	(bad)  
10014777:	(bad)  
10014778:	(bad)  
10014779:	(bad)  
1001477a:	(bad)  
1001477b:	(bad)  
1001477c:	(bad)  
1001477d:	(bad)  
1001477e:	(bad)  
1001477f:	(bad)  
10014780:	(bad)  
10014781:	(bad)  
10014782:	(bad)  
10014783:	(bad)  
10014784:	(bad)  
10014785:	(bad)  
10014786:	(bad)  
10014787:	(bad)  
10014788:	(bad)  
10014789:	(bad)  
1001478a:	(bad)  
1001478b:	(bad)  
1001478c:	(bad)  
1001478d:	(bad)  
1001478e:	sysret 
10014790:	or     BYTE PTR [edi],cl
10014792:	syscall 
10014794:	pop    es
10014795:	or     BYTE PTR [ecx],cl
10014797:	sysret 
10014799:	add    BYTE PTR ds:0xf0a0a0f,al
1001479f:	(bad)  
100147a0:	(bad)  
100147a1:	(bad)  
100147a2:	ud2    
100147a4:	(bad)  
100147a5:	(bad)  
100147a7:	or     eax,0x498d0e
100147ac:	push   eax
100147ad:	cmp    eax,DWORD PTR [ecx]
100147af:	adc    BYTE PTR [edx-0x7ceffec5],dl
100147b5:	cmp    eax,DWORD PTR [ecx]
100147b7:	adc    cl,ch
100147b9:	cmp    eax,DWORD PTR [ecx]
100147bb:	adc    BYTE PTR [esp+edi*1],ch
100147be:	add    DWORD PTR [eax],edx
100147c0:	xchg   BYTE PTR [ecx+eax*1],bh
100147c3:	adc    BYTE PTR [ebp-0x6beffec4],cl
100147c9:	cmp    al,0x1
100147cb:	adc    BYTE PTR [esi+0x3810013c],ch
100147d1:	cmp    eax,0x3cec1001
100147d6:	add    DWORD PTR [eax],edx
100147d8:	inc    eax
100147d9:	cmp    eax,0x3d8c1001
100147de:	add    DWORD PTR [eax],edx
100147e0:	sar    BYTE PTR ds:0x3e631001,cl
100147e6:	add    DWORD PTR [eax],edx
100147e8:	int3   
100147e9:	add    DWORD PTR ds:[eax],edx
100147ec:	or     al,0x3f
100147ee:	add    DWORD PTR [eax],edx
100147f0:	xor    BYTE PTR [edi],bh
100147f2:	add    DWORD PTR [eax],edx
100147f4:	mov    bl,0x3f
100147f6:	add    DWORD PTR [eax],edx
100147f8:	retf   
100147f9:	aas    
100147fa:	add    DWORD PTR [eax],edx
100147fc:	mov    esp,0x410013f
10014801:	inc    eax
10014802:	add    DWORD PTR [eax],edx
10014804:	xchg   DWORD PTR [eax+0x1],eax
10014807:	adc    BYTE PTR [ecx+0x41],dl
1001480a:	add    DWORD PTR [eax],edx
1001480c:	push   edi
1001480d:	inc    ecx
1001480e:	add    DWORD PTR [eax],edx
10014810:	inc    BYTE PTR [ecx+0x1]
10014813:	adc    BYTE PTR [ecx],bl
10014815:	inc    edx
10014816:	add    DWORD PTR [eax],edx
10014818:	mov    al,BYTE PTR [edx+0x1]
1001481b:	adc    cl,ah
1001481d:	inc    edx
1001481e:	add    DWORD PTR [eax],edx
10014820:	mov    al,BYTE PTR [ebx+0x1]
10014823:	adc    BYTE PTR ds:0xca100144,ah
10014829:	inc    esp
1001482a:	add    DWORD PTR [eax],edx
1001482c:	sub    BYTE PTR [ebp+0x1],al
1001482f:	adc    BYTE PTR [edx-0x3ceffebc],bh
10014835:	inc    esp
10014836:	add    DWORD PTR [eax],edx
10014838:	and    al,BYTE PTR [edx+0x1]
1001483b:	adc    BYTE PTR [eax],bh
1001483d:	inc    edx
1001483e:	add    DWORD PTR [eax],edx
10014840:	popa   
10014841:	inc    edx
10014842:	add    DWORD PTR [eax],edx
10014844:	(bad)  
10014845:	cmp    eax,0x3e0a1001
1001484a:	add    DWORD PTR [eax],edx
1001484c:	and    eax,0x4110013e
10014851:	add    DWORD PTR ds:[eax],edx
10014854:	sbb    DWORD PTR [esi],edi
10014856:	add    DWORD PTR [eax],edx
10014858:	add    BYTE PTR [esi+0x1],0x10
1001485c:	bound  eax,QWORD PTR [ebp+0x1]
1001485f:	adc    BYTE PTR [ebp+eax*2+0x1],dh
10014863:	adc    BYTE PTR [ebp+eax*2+0x45e51001],bh
1001486a:	add    DWORD PTR [eax],edx
1001486c:	xor    eax,DWORD PTR [esi+0x1]
1001486f:	adc    BYTE PTR [eax+0x46],cl
10014872:	add    DWORD PTR [eax],edx
10014874:	pop    edx
10014875:	inc    esi
10014876:	add    DWORD PTR [eax],edx
10014878:	dec    eax
10014879:	cmp    DWORD PTR [ecx],eax
1001487b:	adc    BYTE PTR [eax],al
1001487d:	add    DWORD PTR [edx],eax
1001487f:	add    eax,DWORD PTR [eax*1+0x9080706]
10014886:	or     cl,BYTE PTR [ebx]
10014888:	or     al,0xd
1001488a:	xor    esi,DWORD PTR [ebx]
1001488c:	xor    esi,DWORD PTR [ebx]
1001488e:	xor    esi,DWORD PTR [ebx]
10014890:	xor    esi,DWORD PTR [ebx]
10014892:	xor    esi,DWORD PTR [ebx]
10014894:	xor    esi,DWORD PTR [ebx]
10014896:	xor    esi,DWORD PTR [ebx]
10014898:	push   cs
10014899:	movups xmm2,XMMWORD PTR [ecx]
1001489c:	adc    dl,BYTE PTR [ebx]
1001489e:	adc    al,0x14
100148a0:	xor    edx,DWORD PTR ds:0x33161633
100148a6:	xor    esi,DWORD PTR [ebx]
100148a8:	xor    esi,DWORD PTR [ebx]
100148aa:	xor    esi,DWORD PTR [ebx]
100148ac:	pop    ss
100148ad:	sbb    BYTE PTR [ecx],bl
100148af:	sbb    bl,BYTE PTR [ebx]
100148b1:	sbb    al,0x1d
100148b3:	push   ds
100148b4:	pop    ds
100148b5:	and    BYTE PTR [ecx],ah
100148b7:	and    ah,BYTE PTR [ebx]
100148b9:	and    al,0x25
100148bb:	es daa 
100148bd:	xor    esi,DWORD PTR [ebx]
100148bf:	sub    BYTE PTR [ecx],ch
100148c1:	xor    esi,DWORD PTR [ebx]
100148c3:	xor    esi,DWORD PTR [ebx]
100148c5:	sub    dh,BYTE PTR [ebx]
100148c7:	xor    esi,DWORD PTR [ebx]
100148c9:	sub    esi,DWORD PTR [ebx]
100148cb:	xor    ebp,DWORD PTR [ebp*1+0x33302f2e]
100148d2:	xor    DWORD PTR [edx],esi
100148d4:	int3   
100148d5:	int3   
100148d6:	int3   
100148d7:	int3   
100148d8:	int3   
100148d9:	int3   
100148da:	int3   
100148db:	int3   
100148dc:	int3   
100148dd:	int3   
100148de:	int3   
100148df:	int3   
100148e0:	mov    eax,DWORD PTR [esp+0x4]
100148e4:	add    eax,0xffffffda
100148e7:	cmp    eax,0xcd
100148ec:	ja     0x1001490d
100148ee:	movzx  eax,BYTE PTR [eax+0x1001491c]
100148f5:	jmp    DWORD PTR [eax*4+0x10014910]
100148fc:	xor    eax,eax
100148fe:	cmp    DWORD PTR [esp+0x8],0x2
10014903:	sete   al
10014906:	ret    
10014907:	mov    eax,0x1
1001490c:	ret    
1001490d:	xor    eax,eax
1001490f:	ret    
10014910:	pop    es
10014911:	dec    ecx
10014912:	add    DWORD PTR [eax],edx
10014914:	cld    
10014915:	dec    eax
10014916:	add    DWORD PTR [eax],edx
10014918:	or     eax,0x100149
1001491d:	add    al,BYTE PTR [edx]
1001491f:	add    al,BYTE PTR [edx]
10014921:	add    al,BYTE PTR [edx]
10014923:	add    al,BYTE PTR [eax]
10014925:	add    al,BYTE PTR [edx]
10014927:	add    al,BYTE PTR [edx]
10014929:	add    al,BYTE PTR [edx]
1001492b:	add    al,BYTE PTR [eax]
1001492d:	add    al,BYTE PTR [edx]
1001492f:	add    al,BYTE PTR [edx]
10014931:	add    al,BYTE PTR [edx]
10014933:	add    al,BYTE PTR [eax]
10014935:	add    al,BYTE PTR [ecx]
10014937:	add    DWORD PTR [ecx],eax
10014939:	add    DWORD PTR [ecx],eax
1001493b:	add    DWORD PTR [ecx],eax
1001493d:	add    DWORD PTR [ecx],eax
1001493f:	add    DWORD PTR [ecx],eax
10014941:	add    DWORD PTR [ecx],eax
10014943:	add    DWORD PTR [ecx],eax
10014945:	add    DWORD PTR [edx],eax
10014947:	add    al,BYTE PTR [edx]
10014949:	add    al,BYTE PTR [edx]
1001494b:	add    al,BYTE PTR [edx]
1001494d:	add    al,BYTE PTR [edx]
1001494f:	add    al,BYTE PTR [edx]
10014951:	add    al,BYTE PTR [edx]
10014953:	add    al,BYTE PTR [edx]
10014955:	add    al,BYTE PTR [edx]
10014957:	add    al,BYTE PTR [edx]
10014959:	add    al,BYTE PTR [eax]
1001495b:	add    BYTE PTR [eax],al
1001495d:	add    BYTE PTR [edx],al
1001495f:	add    al,BYTE PTR [edx]
10014961:	add    al,BYTE PTR [edx]
10014963:	add    al,BYTE PTR [edx]
10014965:	add    al,BYTE PTR [edx]
10014967:	add    al,BYTE PTR [edx]
10014969:	add    al,BYTE PTR [edx]
1001496b:	add    al,BYTE PTR [edx]
1001496d:	add    al,BYTE PTR [edx]
1001496f:	add    al,BYTE PTR [edx]
10014971:	add    al,BYTE PTR [edx]
10014973:	add    al,BYTE PTR [edx]
10014975:	add    al,BYTE PTR [edx]
10014977:	add    al,BYTE PTR [edx]
10014979:	add    al,BYTE PTR [edx]
1001497b:	add    al,BYTE PTR [edx]
1001497d:	add    al,BYTE PTR [edx]
1001497f:	add    al,BYTE PTR [edx]
10014981:	add    al,BYTE PTR [edx]
10014983:	add    al,BYTE PTR [edx]
10014985:	add    al,BYTE PTR [edx]
10014987:	add    al,BYTE PTR [edx]
10014989:	add    al,BYTE PTR [edx]
1001498b:	add    al,BYTE PTR [edx]
1001498d:	add    al,BYTE PTR [edx]
1001498f:	add    al,BYTE PTR [edx]
10014991:	add    al,BYTE PTR [edx]
10014993:	add    al,BYTE PTR [edx]
10014995:	add    al,BYTE PTR [edx]
10014997:	add    al,BYTE PTR [edx]
10014999:	add    al,BYTE PTR [edx]
1001499b:	add    al,BYTE PTR [edx]
1001499d:	add    al,BYTE PTR [edx]
1001499f:	add    al,BYTE PTR [edx]
100149a1:	add    al,BYTE PTR [edx]
100149a3:	add    al,BYTE PTR [edx]
100149a5:	add    al,BYTE PTR [edx]
100149a7:	add    al,BYTE PTR [edx]
100149a9:	add    al,BYTE PTR [edx]
100149ab:	add    al,BYTE PTR [edx]
100149ad:	add    al,BYTE PTR [edx]
100149af:	add    al,BYTE PTR [edx]
100149b1:	add    al,BYTE PTR [edx]
100149b3:	add    al,BYTE PTR [edx]
100149b5:	add    al,BYTE PTR [edx]
100149b7:	add    al,BYTE PTR [edx]
100149b9:	add    al,BYTE PTR [eax]
100149bb:	add    BYTE PTR [edx],al
100149bd:	add    al,BYTE PTR [edx]
100149bf:	add    al,BYTE PTR [edx]
100149c1:	add    al,BYTE PTR [edx]
100149c3:	add    al,BYTE PTR [edx]
100149c5:	add    al,BYTE PTR [edx]
100149c7:	add    al,BYTE PTR [edx]
100149c9:	add    al,BYTE PTR [edx]
100149cb:	add    al,BYTE PTR [edx]
100149cd:	add    al,BYTE PTR [edx]
100149cf:	add    al,BYTE PTR [edx]
100149d1:	add    al,BYTE PTR [edx]
100149d3:	add    al,BYTE PTR [edx]
100149d5:	add    al,BYTE PTR [edx]
100149d7:	add    al,BYTE PTR [edx]
100149d9:	add    al,BYTE PTR [edx]
100149db:	add    al,BYTE PTR [edx]
100149dd:	add    al,BYTE PTR [edx]
100149df:	add    al,BYTE PTR [edx]
100149e1:	add    al,BYTE PTR [edx]
100149e3:	add    al,BYTE PTR [edx]
100149e5:	add    al,BYTE PTR [eax]
100149e7:	add    al,BYTE PTR [eax]
100149e9:	add    ah,cl
100149eb:	int3   
100149ec:	int3   
100149ed:	int3   
100149ee:	int3   
100149ef:	int3   
100149f0:	mov    eax,DWORD PTR [esp+0x4]
100149f4:	mov    ecx,DWORD PTR [esp+0x8]
100149f8:	mov    ecx,DWORD PTR [eax+ecx*4+0x2c]
100149fc:	cmp    ecx,0xffffffff
100149ff:	je     0x10014a0c
10014a01:	mov    edx,0x1
10014a06:	shl    edx,cl
10014a08:	or     WORD PTR [eax+0x1c],dx
10014a0c:	ret    
10014a0d:	int3   
10014a0e:	int3   
10014a0f:	int3   
10014a10:	push   esi
10014a11:	push   edi
10014a12:	mov    edi,DWORD PTR [esp+0xc]
10014a16:	xor    esi,esi
10014a18:	push   esi
10014a19:	push   edi
10014a1a:	call   0x100149f0
10014a1f:	add    esi,0x1
10014a22:	add    esp,0x8
10014a25:	cmp    esi,0x5
10014a28:	jl     0x10014a18
10014a2a:	pop    edi
10014a2b:	pop    esi
10014a2c:	ret    
10014a2d:	int3   
10014a2e:	int3   
10014a2f:	int3   
10014a30:	push   ebx
10014a31:	push   esi
10014a32:	mov    esi,DWORD PTR [esp+0xc]
10014a36:	mov    ebx,DWORD PTR [esi+0x4]
10014a39:	xor    ebx,DWORD PTR [esi]
10014a3b:	test   ebx,0x2000000
10014a41:	je     0x10014a4e
10014a43:	push   0x0
10014a45:	push   esi
10014a46:	call   0x100149f0
10014a4b:	add    esp,0x8
10014a4e:	test   ebx,0x1f80
10014a54:	je     0x10014a61
10014a56:	push   0x2
10014a58:	push   esi
10014a59:	call   0x100149f0
10014a5e:	add    esp,0x8
10014a61:	test   bl,0x70
10014a64:	je     0x10014a71
10014a66:	push   0x1
10014a68:	push   esi
10014a69:	call   0x100149f0
10014a6e:	add    esp,0x8
10014a71:	test   ebx,0x2000
10014a77:	je     0x10014a84
10014a79:	push   0x3
10014a7b:	push   esi
10014a7c:	call   0x100149f0
10014a81:	add    esp,0x8
10014a84:	test   ebx,0x4000
10014a8a:	je     0x10014a97
10014a8c:	push   0x4
10014a8e:	push   esi
10014a8f:	call   0x100149f0
10014a94:	add    esp,0x8
10014a97:	mov    ax,WORD PTR [esi+0x1c]
10014a9b:	pop    esi
10014a9c:	pop    ebx
10014a9d:	ret    
10014a9e:	int3   
10014a9f:	int3   
10014aa0:	push   esi
10014aa1:	mov    esi,DWORD PTR [esp+0x10]
10014aa5:	push   edi
10014aa6:	mov    edi,DWORD PTR [esp+0xc]
10014aaa:	push   esi
10014aab:	push   edi
10014aac:	call   0x100149f0
10014ab1:	mov    eax,DWORD PTR [esp+0x18]
10014ab5:	add    esp,0x8
10014ab8:	mov    DWORD PTR [edi+esi*4+0x2c],eax
10014abc:	pop    edi
10014abd:	pop    esi
10014abe:	ret    
10014abf:	int3   
10014ac0:	push   ebx
10014ac1:	mov    ebx,DWORD PTR [esp+0x8]
10014ac5:	push   esi
10014ac6:	mov    esi,DWORD PTR [esp+0x14]
10014aca:	push   edi
10014acb:	xor    edi,edi
10014acd:	cmp    DWORD PTR [esp+0x14],edi
10014ad1:	jle    0x10014c27
10014ad7:	mov    eax,ebx
10014ad9:	sub    eax,DWORD PTR [esi+0x8]
10014adc:	cmp    eax,0xf
10014adf:	jge    0x10014c27
10014ae5:	movzx  eax,BYTE PTR [ebx]
10014ae8:	add    eax,0xffffffda
10014aeb:	cmp    eax,0xcd
10014af0:	ja     0x10014c27
10014af6:	movzx  ecx,BYTE PTR [eax+0x10014d34]
10014afd:	jmp    DWORD PTR [ecx*4+0x10014d00]
10014b04:	cmp    DWORD PTR [esp+0x1c],0x2
10014b09:	jne    0x10014c27
10014b0f:	or     DWORD PTR [esi],0x2000000
10014b15:	movzx  edx,BYTE PTR [ebx]
10014b18:	push   0x0
10014b1a:	and    edx,0xf
10014b1d:	push   edi
10014b1e:	push   esi
10014b1f:	mov    DWORD PTR [esi+0x28],edx
10014b22:	mov    DWORD PTR [esi+0x14],ebx
10014b25:	mov    DWORD PTR [esi+0x18],0x1
10014b2c:	call   0x10014aa0
10014b31:	add    esp,0xc
10014b34:	jmp    0x10014c0e
10014b39:	or     DWORD PTR [esi],0x10
10014b3c:	push   0x1
10014b3e:	push   esi
10014b3f:	call   0x100149f0
10014b44:	mov    DWORD PTR [esi+0x30],edi
10014b47:	jmp    0x10014c0b
10014b4c:	or     DWORD PTR [esi],0x20
10014b4f:	push   0x1
10014b51:	push   esi
10014b52:	call   0x100149f0
10014b57:	mov    DWORD PTR [esi+0x30],edi
10014b5a:	jmp    0x10014c0b
10014b5f:	or     DWORD PTR [esi],0x40
10014b62:	push   0x1
10014b64:	push   esi
10014b65:	call   0x100149f0
10014b6a:	mov    DWORD PTR [esi+0x30],edi
10014b6d:	jmp    0x10014c0b
10014b72:	or     DWORD PTR [esi],0x80
10014b78:	push   0x2
10014b7a:	push   esi
10014b7b:	call   0x100149f0
10014b80:	mov    DWORD PTR [esi+0x34],edi
10014b83:	jmp    0x10014c0b
10014b88:	or     DWORD PTR [esi],0x100
10014b8e:	push   0x2
10014b90:	push   esi
10014b91:	call   0x100149f0
10014b96:	mov    DWORD PTR [esi+0x34],edi
10014b99:	jmp    0x10014c0b
10014b9b:	or     DWORD PTR [esi],0x200
10014ba1:	push   0x2
10014ba3:	push   esi
10014ba4:	call   0x100149f0
10014ba9:	mov    DWORD PTR [esi+0x34],edi
10014bac:	jmp    0x10014c0b
10014bae:	or     DWORD PTR [esi],0x400
10014bb4:	push   0x2
10014bb6:	push   esi
10014bb7:	call   0x100149f0
10014bbc:	mov    DWORD PTR [esi+0x34],edi
10014bbf:	jmp    0x10014c0b
10014bc1:	or     DWORD PTR [esi],0x800
10014bc7:	push   0x2
10014bc9:	push   esi
10014bca:	call   0x100149f0
10014bcf:	mov    DWORD PTR [esi+0x34],edi
10014bd2:	jmp    0x10014c0b
10014bd4:	or     DWORD PTR [esi],0x1000
10014bda:	push   0x2
10014bdc:	push   esi
10014bdd:	call   0x100149f0
10014be2:	mov    DWORD PTR [esi+0x34],edi
10014be5:	jmp    0x10014c0b
10014be7:	or     DWORD PTR [esi],0x2000
10014bed:	push   0x3
10014bef:	push   esi
10014bf0:	call   0x100149f0
10014bf5:	mov    DWORD PTR [esi+0x38],edi
10014bf8:	jmp    0x10014c0b
10014bfa:	or     DWORD PTR [esi],0x4000
10014c00:	push   0x4
10014c02:	push   esi
10014c03:	call   0x100149f0
10014c08:	mov    DWORD PTR [esi+0x3c],edi
10014c0b:	add    esp,0x8
10014c0e:	mov    eax,DWORD PTR [esp+0x14]
10014c12:	sub    eax,0x1
10014c15:	add    ebx,0x1
10014c18:	add    edi,0x1
10014c1b:	test   eax,eax
10014c1d:	mov    DWORD PTR [esp+0x14],eax
10014c21:	jg     0x10014ad7
10014c27:	mov    eax,0x2
10014c2c:	cmp    DWORD PTR [esp+0x14],eax
10014c30:	mov    dl,0xc0
10014c32:	jl     0x10014c81
10014c34:	cmp    BYTE PTR [ebx],0xc5
10014c37:	jne    0x10014c81
10014c39:	mov    ecx,ebx
10014c3b:	sub    ecx,DWORD PTR [esi+0x8]
10014c3e:	cmp    ecx,0xd
10014c41:	jg     0x10014c81
10014c43:	cmp    DWORD PTR [esp+0x1c],eax
10014c47:	je     0x10014c4e
10014c49:	cmp    BYTE PTR [ebx+0x1],dl
10014c4c:	jb     0x10014c81
10014c4e:	or     DWORD PTR [esi],0x20000000
10014c54:	lea    eax,[ebx+0x1]
10014c57:	mov    edi,0x2
10014c5c:	mov    DWORD PTR [esi+0x10],eax
10014c5f:	mov    DWORD PTR [esi+0x18],edi
10014c62:	mov    al,BYTE PTR [eax]
10014c64:	movzx  ecx,al
10014c67:	not    ecx
10014c69:	test   cl,cl
10014c6b:	jns    0x10014c77
10014c6d:	cmp    DWORD PTR [esp+0x1c],edi
10014c71:	jne    0x10014c77
10014c73:	or     DWORD PTR [esi+0x28],0x4
10014c77:	test   al,0x4
10014c79:	je     0x10014c7f
10014c7b:	or     DWORD PTR [esi+0x28],0x10
10014c7f:	add    ebx,edi
10014c81:	mov    edi,0x3
10014c86:	cmp    DWORD PTR [esp+0x14],edi
10014c8a:	jl     0x10014cf8
10014c8c:	cmp    BYTE PTR [ebx],0xc4
10014c8f:	jne    0x10014cf8
10014c91:	mov    eax,ebx
10014c93:	sub    eax,DWORD PTR [esi+0x8]
10014c96:	cmp    eax,0xc
10014c99:	jg     0x10014cf8
10014c9b:	mov    ecx,DWORD PTR [esi]
10014c9d:	mov    eax,ecx
10014c9f:	not    eax
10014ca1:	test   eax,0x20000000
10014ca6:	je     0x10014cf8
10014ca8:	cmp    DWORD PTR [esp+0x1c],0x2
10014cad:	je     0x10014cb4
10014caf:	cmp    BYTE PTR [ebx+0x1],dl
10014cb2:	jb     0x10014cf8
10014cb4:	or     ecx,0x20000000
10014cba:	lea    eax,[ebx+0x1]
10014cbd:	mov    DWORD PTR [esi],ecx
10014cbf:	mov    DWORD PTR [esi+0x10],eax
10014cc2:	mov    DWORD PTR [esi+0x18],edi
10014cc5:	movzx  ecx,BYTE PTR [eax]
10014cc8:	not    ecx
10014cca:	sar    ecx,0x5
10014ccd:	and    ecx,0x7
10014cd0:	or     DWORD PTR [esi+0x28],ecx
10014cd3:	mov    al,BYTE PTR [eax+0x1]
10014cd6:	test   al,0x4
10014cd8:	mov    ecx,DWORD PTR [esi+0x28]
10014cdb:	je     0x10014ce3
10014cdd:	or     ecx,0x10
10014ce0:	mov    DWORD PTR [esi+0x28],ecx
10014ce3:	test   al,al
10014ce5:	jns    0x10014ceb
10014ce7:	or     DWORD PTR [esi+0x28],0x8
10014ceb:	cmp    DWORD PTR [esp+0x1c],0x2
10014cf0:	je     0x10014cf6
10014cf2:	and    DWORD PTR [esi+0x28],0xfffffff0
10014cf6:	add    ebx,edi
10014cf8:	pop    edi
10014cf9:	mov    DWORD PTR [esi+0xc],ebx
10014cfc:	pop    esi
10014cfd:	pop    ebx
10014cfe:	ret    
10014cff:	nop
10014d00:	scas   al,BYTE PTR es:[edi]
10014d01:	dec    ebx
10014d02:	add    DWORD PTR [eax],edx
10014d04:	jb     0x10014d51
10014d06:	add    DWORD PTR [eax],edx
10014d08:	mov    BYTE PTR [ebx+0x1],cl
10014d0b:	adc    BYTE PTR [ebx+0x410014b],bl
10014d11:	dec    ebx
10014d12:	add    DWORD PTR [eax],edx
10014d14:	ror    DWORD PTR [ebx+0x1],0x10
10014d18:	aam    0x4b
10014d1a:	add    DWORD PTR [eax],edx
10014d1c:	out    0x4b,eax
10014d1e:	add    DWORD PTR [eax],edx
10014d20:	cli    
10014d21:	dec    ebx
10014d22:	add    DWORD PTR [eax],edx
10014d24:	cmp    DWORD PTR [ebx+0x1],ecx
10014d27:	adc    BYTE PTR [ebx+ecx*2+0x1],cl
10014d2b:	adc    BYTE PTR [edi+0x4b],bl
10014d2e:	add    DWORD PTR [eax],edx
10014d30:	daa    
10014d31:	dec    esp
10014d32:	add    DWORD PTR [eax],edx
10014d34:	add    BYTE PTR [esp+ecx*1],cl
10014d37:	or     al,0xc
10014d39:	or     al,0xc
10014d3b:	or     al,0x1
10014d3d:	or     al,0xc
10014d3f:	or     al,0xc
10014d41:	or     al,0xc
10014d43:	or     al,0x2
10014d45:	or     al,0xc
10014d47:	or     al,0xc
10014d49:	or     al,0xc
10014d4b:	or     al,0x3
10014d4d:	or     al,0x4
10014d4f:	add    al,0x4
10014d51:	add    al,0x4
10014d53:	add    al,0x4
10014d55:	add    al,0x4
10014d57:	add    al,0x4
10014d59:	add    al,0x4
10014d5b:	add    al,0x4
10014d5d:	add    al,0xc
10014d5f:	or     al,0xc
10014d61:	or     al,0xc
10014d63:	or     al,0xc
10014d65:	or     al,0xc
10014d67:	or     al,0xc
10014d69:	or     al,0xc
10014d6b:	or     al,0xc
10014d6d:	or     al,0xc
10014d6f:	or     al,0xc
10014d71:	or     al,0x5
10014d73:	push   es
10014d74:	pop    es
10014d75:	or     BYTE PTR [esp+ecx*1],cl
10014d78:	or     al,0xc
10014d7a:	or     al,0xc
10014d7c:	or     al,0xc
10014d7e:	or     al,0xc
10014d80:	or     al,0xc
10014d82:	or     al,0xc
10014d84:	or     al,0xc
10014d86:	or     al,0xc
10014d88:	or     al,0xc
10014d8a:	or     al,0xc
10014d8c:	or     al,0xc
10014d8e:	or     al,0xc
10014d90:	or     al,0xc
10014d92:	or     al,0xc
10014d94:	or     al,0xc
10014d96:	or     al,0xc
10014d98:	or     al,0xc
10014d9a:	or     al,0xc
10014d9c:	or     al,0xc
10014d9e:	or     al,0xc
10014da0:	or     al,0xc
10014da2:	or     al,0xc
10014da4:	or     al,0xc
10014da6:	or     al,0xc
10014da8:	or     al,0xc
10014daa:	or     al,0xc
10014dac:	or     al,0xc
10014dae:	or     al,0xc
10014db0:	or     al,0xc
10014db2:	or     al,0xc
10014db4:	or     al,0xc
10014db6:	or     al,0xc
10014db8:	or     al,0xc
10014dba:	or     al,0xc
10014dbc:	or     al,0xc
10014dbe:	or     al,0xc
10014dc0:	or     al,0xc
10014dc2:	or     al,0xc
10014dc4:	or     al,0xc
10014dc6:	or     al,0xc
10014dc8:	or     al,0xc
10014dca:	or     al,0xc
10014dcc:	or     al,0xc
10014dce:	or     al,0xc
10014dd0:	or     al,0xc
10014dd2:	or     al,0xc
10014dd4:	or     al,0xc
10014dd6:	or     al,0xc
10014dd8:	or     al,0xc
10014dda:	or     al,0xc
10014ddc:	or     al,0xc
10014dde:	or     al,0xc
10014de0:	or     al,0xc
10014de2:	or     al,0xc
10014de4:	or     al,0xc
10014de6:	or     al,0xc
10014de8:	or     al,0xc
10014dea:	or     al,0xc
10014dec:	or     al,0xc
10014dee:	or     al,0xc
10014df0:	or     al,0xc
10014df2:	or     al,0xc
10014df4:	or     al,0xc
10014df6:	or     al,0xc
10014df8:	or     al,0xc
10014dfa:	or     al,0xc
10014dfc:	or     al,0xc
10014dfe:	or     DWORD PTR [edx+ecx*1],ecx
10014e01:	or     ecx,esp
10014e03:	int3   
10014e04:	int3   
10014e05:	int3   
10014e06:	int3   
10014e07:	int3   
10014e08:	int3   
10014e09:	int3   
10014e0a:	int3   
10014e0b:	int3   
10014e0c:	int3   
10014e0d:	int3   
10014e0e:	int3   
10014e0f:	int3   
10014e10:	push   esi
10014e11:	mov    esi,DWORD PTR [esp+0xc]
10014e15:	mov    eax,DWORD PTR [esi]
10014e17:	push   edi
10014e18:	mov    edi,DWORD PTR [esp+0x14]
10014e1c:	cmp    edi,0x2
10014e1f:	jne    0x10014e28
10014e21:	and    eax,0x1800
10014e26:	jmp    0x10014e2d
10014e28:	and    eax,0x1f80
10014e2d:	test   eax,eax
10014e2f:	mov    ecx,DWORD PTR [esp+0x18]
10014e33:	mov    edx,DWORD PTR [esp+0xc]
10014e37:	je     0x10014e42
10014e39:	cmp    eax,edx
10014e3b:	je     0x10014e42
10014e3d:	or     DWORD PTR [esi+0x4],eax
10014e40:	jmp    0x10014e48
10014e42:	or     BYTE PTR [ecx+0xc],0x80
10014e46:	mov    eax,edx
10014e48:	cmp    eax,0x400
10014e4d:	ja     0x10014e7e
10014e4f:	je     0x10014e78
10014e51:	cmp    eax,0x80
10014e56:	je     0x10014e72
10014e58:	cmp    eax,0x100
10014e5d:	je     0x10014e6c
10014e5f:	cmp    eax,0x200
10014e64:	jne    0x10014e96
10014e66:	or     BYTE PTR [ecx+0xc],0x47
10014e6a:	jmp    0x10014e96
10014e6c:	or     BYTE PTR [ecx+0xc],0x46
10014e70:	jmp    0x10014e96
10014e72:	or     BYTE PTR [ecx+0xc],0x45
10014e76:	jmp    0x10014e96
10014e78:	or     BYTE PTR [ecx+0xc],0x44
10014e7c:	jmp    0x10014e96
10014e7e:	cmp    eax,0x800
10014e83:	je     0x10014e92
10014e85:	cmp    eax,0x1000
10014e8a:	jne    0x10014e96
10014e8c:	or     BYTE PTR [ecx+0xc],0x49
10014e90:	jmp    0x10014e96
10014e92:	or     BYTE PTR [ecx+0xc],0x48
10014e96:	cmp    edi,0x2
10014e99:	pop    edi
10014e9a:	pop    esi
10014e9b:	jne    0x10014ea8
10014e9d:	test   eax,0x780
10014ea2:	je     0x10014ea8
10014ea4:	mov    BYTE PTR [ecx+0xc],0xff
10014ea8:	ret    
10014ea9:	int3   
10014eaa:	int3   
10014eab:	int3   
10014eac:	int3   
10014ead:	int3   
10014eae:	int3   
10014eaf:	int3   
10014eb0:	mov    ecx,DWORD PTR [esi]
10014eb2:	mov    eax,ecx
10014eb4:	and    eax,0x2060
10014eb9:	cmp    eax,0x40
10014ebc:	push   edi
10014ebd:	ja     0x10014eff
10014ebf:	je     0x10014eed
10014ec1:	test   eax,eax
10014ec3:	je     0x10014edf
10014ec5:	cmp    eax,0x20
10014ec8:	jne    0x10014f06
10014eca:	mov    eax,DWORD PTR [edx+0x4]
10014ecd:	movzx  eax,BYTE PTR [eax+0x3]
10014ed1:	mov    edi,DWORD PTR [edx+0x8]
10014ed4:	mov    eax,DWORD PTR [edi+eax*4]
10014ed7:	and    ecx,0xffffffdf
10014eda:	jmp    0x10014f66
10014edf:	mov    ecx,DWORD PTR [edx+0x4]
10014ee2:	movzx  eax,BYTE PTR [ecx]
10014ee5:	mov    ecx,DWORD PTR [edx+0x8]
10014ee8:	mov    eax,DWORD PTR [ecx+eax*4]
10014eeb:	jmp    0x10014f68
10014eed:	mov    eax,DWORD PTR [edx+0x4]
10014ef0:	movzx  eax,BYTE PTR [eax+0x2]
10014ef4:	mov    edi,DWORD PTR [edx+0x8]
10014ef7:	mov    eax,DWORD PTR [edi+eax*4]
10014efa:	and    ecx,0xffffffbf
10014efd:	jmp    0x10014f66
10014eff:	cmp    eax,0x2000
10014f04:	je     0x10014f4c
10014f06:	mov    eax,ecx
10014f08:	and    eax,0x60
10014f0b:	cmp    al,0x60
10014f0d:	je     0x10014f48
10014f0f:	test   cl,0x20
10014f12:	je     0x10014f20
10014f14:	mov    eax,DWORD PTR [edx+0x4]
10014f17:	movzx  eax,BYTE PTR [eax+0x3]
10014f1b:	and    ecx,0xffffffdf
10014f1e:	jmp    0x10014f2f
10014f20:	test   cl,0x40
10014f23:	je     0x10014f48
10014f25:	mov    eax,DWORD PTR [edx+0x4]
10014f28:	movzx  eax,BYTE PTR [eax+0x2]
10014f2c:	and    ecx,0xffffffbf
10014f2f:	mov    edi,DWORD PTR [edx+0x8]
10014f32:	mov    eax,DWORD PTR [edi+eax*4]
10014f35:	test   eax,eax
10014f37:	mov    DWORD PTR [esi],ecx
10014f39:	je     0x10014f48
10014f3b:	mov    ecx,DWORD PTR [eax+0x8]
10014f3e:	not    ecx
10014f40:	test   ecx,0x2000
10014f46:	je     0x10014f68
10014f48:	xor    eax,eax
10014f4a:	pop    edi
10014f4b:	ret    
10014f4c:	mov    eax,DWORD PTR [edx+0x4]
10014f4f:	movzx  eax,BYTE PTR [eax+0x1]
10014f53:	mov    edi,DWORD PTR [edx+0x8]
10014f56:	mov    eax,DWORD PTR [edi+eax*4]
10014f59:	mov    DWORD PTR [esi+0x20],0x1
10014f60:	and    ecx,0xffffdfff
10014f66:	mov    DWORD PTR [esi],ecx
10014f68:	test   eax,eax
10014f6a:	jne    0x10014f78
10014f6c:	mov    ecx,DWORD PTR [edx+0x4]
10014f6f:	movzx  eax,BYTE PTR [ecx]
10014f72:	mov    ecx,DWORD PTR [edx+0x8]
10014f75:	mov    eax,DWORD PTR [ecx+eax*4]
10014f78:	pop    edi
10014f79:	ret    
10014f7a:	int3   
10014f7b:	int3   
10014f7c:	int3   
10014f7d:	int3   
10014f7e:	int3   
10014f7f:	int3   
10014f80:	test   DWORD PTR [edx],0x2002070
10014f86:	mov    ecx,DWORD PTR [edx+0x10]
10014f89:	mov    al,BYTE PTR [ecx]
10014f8b:	push   ebx
10014f8c:	mov    ebx,0x4
10014f91:	je     0x10014f97
10014f93:	xor    eax,eax
10014f95:	pop    ebx
10014f96:	ret    
10014f97:	cmp    DWORD PTR [edx+0x18],0x2
10014f9b:	push   ebp
10014f9c:	push   esi
10014f9d:	jne    0x10014fb8
10014f9f:	movzx  ecx,al
10014fa2:	mov    eax,ecx
10014fa4:	not    eax
10014fa6:	sar    eax,0x3
10014fa9:	and    al,0xf
10014fab:	movzx  esi,al
10014fae:	mov    DWORD PTR [edx+0x24],esi
10014fb1:	mov    esi,0x1
10014fb6:	jmp    0x10014fd0
10014fb8:	movzx  ecx,BYTE PTR [ecx+0x1]
10014fbc:	and    eax,0x1f
10014fbf:	mov    esi,eax
10014fc1:	mov    eax,ecx
10014fc3:	not    eax
10014fc5:	sar    eax,0x3
10014fc8:	and    al,0xf
10014fca:	movzx  ebp,al
10014fcd:	mov    DWORD PTR [edx+0x24],ebp
10014fd0:	and    ecx,0x3
10014fd3:	sub    esi,0x1
10014fd6:	je     0x10014ff4
10014fd8:	sub    esi,0x1
10014fdb:	je     0x10014fed
10014fdd:	sub    esi,0x1
10014fe0:	jne    0x10015091
10014fe6:	mov    edx,0x10090fec
10014feb:	jmp    0x10014ff9
10014fed:	mov    edx,0x10092b5c
10014ff2:	jmp    0x10014ff9
10014ff4:	mov    edx,0x100943d8
10014ff9:	test   al,al
10014ffb:	jne    0x10015002
10014ffd:	mov    ebx,0x8
10015002:	add    ebx,ecx
10015004:	add    DWORD PTR [edi+0x14],0xffffffff
10015008:	mov    esi,DWORD PTR [edi+0x14]
1001500b:	js     0x10015091
10015011:	mov    ecx,DWORD PTR [edi+0x10]
10015014:	movzx  eax,BYTE PTR [ecx]
10015017:	mov    ebp,DWORD PTR [edx+0x4]
1001501a:	movzx  eax,BYTE PTR [eax+ebp*1]
1001501e:	mov    edx,DWORD PTR [edx+0x8]
10015021:	mov    eax,DWORD PTR [edx+eax*4]
10015024:	test   eax,eax
10015026:	je     0x10015091
10015028:	mov    dl,BYTE PTR [eax]
1001502a:	cmp    dl,0x5
1001502d:	je     0x10015080
1001502f:	cmp    dl,0x1
10015032:	je     0x10015091
10015034:	cmp    dl,0x4
10015037:	je     0x10015091
10015039:	lea    edx,[ecx+0x1]
1001503c:	lea    ecx,[esi-0x1]
1001503f:	test   ecx,ecx
10015041:	mov    DWORD PTR [edi+0x10],edx
10015044:	mov    DWORD PTR [edi+0x14],ecx
10015047:	jl     0x10015091
10015049:	mov    cl,BYTE PTR [eax]
1001504b:	cmp    cl,0x2
1001504e:	jne    0x10015062
10015050:	movzx  ecx,BYTE PTR [edx]
10015053:	mov    edx,DWORD PTR [eax+0x4]
10015056:	shr    ecx,0x3
10015059:	and    ecx,0x7
1001505c:	movzx  ecx,BYTE PTR [ecx+edx*1]
10015060:	jmp    0x10015071
10015062:	cmp    cl,0x3
10015065:	jne    0x10015091
10015067:	movzx  ecx,BYTE PTR [edx]
1001506a:	mov    edx,DWORD PTR [eax+0x4]
1001506d:	movzx  ecx,BYTE PTR [edx+ecx*1]
10015071:	mov    edx,DWORD PTR [eax+0x8]
10015074:	mov    eax,DWORD PTR [edx+ecx*4]
10015077:	test   eax,eax
10015079:	je     0x10015091
1001507b:	cmp    BYTE PTR [eax],0x5
1001507e:	jne    0x10015091
10015080:	mov    ecx,DWORD PTR [eax+0x4]
10015083:	movzx  edx,BYTE PTR [ecx+ebx*1]
10015087:	mov    eax,DWORD PTR [eax+0x8]
1001508a:	mov    eax,DWORD PTR [eax+edx*4]
1001508d:	pop    esi
1001508e:	pop    ebp
1001508f:	pop    ebx
10015090:	ret    
10015091:	pop    esi
10015092:	pop    ebp
10015093:	xor    eax,eax
10015095:	pop    ebx
10015096:	ret    
10015097:	int3   
10015098:	int3   
10015099:	int3   
1001509a:	int3   
1001509b:	int3   
1001509c:	int3   
1001509d:	int3   
1001509e:	int3   
1001509f:	int3   
100150a0:	sub    esp,0x8
100150a3:	push   ebx
100150a4:	push   esi
100150a5:	mov    esi,DWORD PTR [esp+0x18]
100150a9:	mov    eax,DWORD PTR [esi+0x28]
100150ac:	xor    ebx,ebx
100150ae:	test   DWORD PTR [esi],0x20000000
100150b4:	push   edi
100150b5:	mov    edi,DWORD PTR [esp+0x18]
100150b9:	mov    DWORD PTR [esp+0x10],eax
100150bd:	je     0x100150ef
100150bf:	mov    edx,esi
100150c1:	call   0x10014f80
100150c6:	test   eax,eax
100150c8:	je     0x10015388
100150ce:	test   BYTE PTR [eax+0xc],0x10
100150d2:	je     0x10015388
100150d8:	mov    ecx,DWORD PTR [esi+0x28]
100150db:	not    ecx
100150dd:	test   cl,0x10
100150e0:	je     0x10015388
100150e6:	pop    edi
100150e7:	pop    esi
100150e8:	xor    eax,eax
100150ea:	pop    ebx
100150eb:	add    esp,0x8
100150ee:	ret    
100150ef:	push   ebp
100150f0:	or     ebp,0xffffffff
100150f3:	add    DWORD PTR [edi+0x14],ebp
100150f6:	mov    eax,DWORD PTR [edi+0x14]
100150f9:	js     0x10015385
100150ff:	mov    edx,DWORD PTR [edi+0x10]
10015102:	movzx  ecx,BYTE PTR [edx]
10015105:	cmp    ecx,0x9b
1001510b:	mov    DWORD PTR [esp+0x10],ecx
1001510f:	jne    0x10015136
10015111:	push   esi
10015112:	lea    ebx,[ebp+0x2]
10015115:	call   0x10014a10
1001511a:	add    DWORD PTR [edi+0x10],ebx
1001511d:	mov    ecx,DWORD PTR [edi+0x10]
10015120:	add    esp,0x4
10015123:	add    DWORD PTR [edi+0x14],ebp
10015126:	mov    eax,DWORD PTR [edi+0x14]
10015129:	js     0x10015385
1001512f:	movzx  ecx,BYTE PTR [ecx]
10015132:	mov    DWORD PTR [esp+0x10],ecx
10015136:	mov    edx,DWORD PTR ds:0x10095138
1001513c:	movzx  edx,BYTE PTR [edx+ecx*1]
10015140:	mov    ebp,DWORD PTR ds:0x1009513c
10015146:	mov    ebp,DWORD PTR [ebp+edx*4+0x0]
1001514a:	test   ebp,ebp
1001514c:	je     0x10015385
10015152:	cmp    BYTE PTR [ebp+0x0],0x1
10015156:	jne    0x100151ea
1001515c:	test   ebx,ebx
1001515e:	jne    0x100151ea
10015164:	mov    eax,ecx
10015166:	sub    eax,0x63
10015169:	je     0x100151ce
1001516b:	sub    eax,0x2a
1001516e:	je     0x100151b3
10015170:	sub    eax,0x3
10015173:	jne    0x100151c4
10015175:	test   BYTE PTR [esi],0x40
10015178:	je     0x1001518b
1001517a:	or     DWORD PTR [esi+0x4],0x40
1001517e:	pop    ebp
1001517f:	pop    edi
10015180:	pop    esi
10015181:	mov    eax,0x10095170
10015186:	pop    ebx
10015187:	add    esp,0x8
1001518a:	ret    
1001518b:	mov    eax,DWORD PTR [esp+0x14]
1001518f:	test   al,0x8
10015191:	je     0x1001519a
10015193:	or     DWORD PTR [esi+0x4],0x2000000
1001519a:	cmp    DWORD PTR [edi+0x18],0x2
1001519e:	jne    0x100151a6
100151a0:	not    eax
100151a2:	test   al,0x1
100151a4:	je     0x100151c4
100151a6:	pop    ebp
100151a7:	pop    edi
100151a8:	pop    esi
100151a9:	mov    eax,0x10095164
100151ae:	pop    ebx
100151af:	add    esp,0x8
100151b2:	ret    
100151b3:	and    DWORD PTR [esi],0xffffe07f
100151b9:	push   0x2
100151bb:	push   esi
100151bc:	call   0x100149f0
100151c1:	add    esp,0x8
100151c4:	mov    eax,ebp
100151c6:	pop    ebp
100151c7:	pop    edi
100151c8:	pop    esi
100151c9:	pop    ebx
100151ca:	add    esp,0x8
100151cd:	ret    
100151ce:	cmp    DWORD PTR [edi+0x18],0x2
100151d2:	mov    eax,0x1009514c
100151d7:	je     0x10015387
100151dd:	pop    ebp
100151de:	pop    edi
100151df:	pop    esi
100151e0:	mov    eax,0x10095140
100151e5:	pop    ebx
100151e6:	add    esp,0x8
100151e9:	ret    
100151ea:	add    DWORD PTR [edi+0x10],0x1
100151ee:	mov    esi,DWORD PTR [edi+0x10]
100151f1:	lea    edx,[eax-0x1]
100151f4:	test   edx,edx
100151f6:	mov    DWORD PTR [edi+0x14],edx
100151f9:	jl     0x10015385
100151ff:	mov    cl,BYTE PTR [ebp+0x0]
10015202:	cmp    cl,0x2
10015205:	movzx  eax,BYTE PTR [esi]
10015208:	jne    0x10015229
1001520a:	test   ebx,ebx
1001520c:	jne    0x10015229
1001520e:	mov    ecx,DWORD PTR [ebp+0x4]
10015211:	shr    eax,0x3
10015214:	and    eax,0x7
10015217:	movzx  edx,BYTE PTR [eax+ecx*1]
1001521b:	mov    eax,DWORD PTR [ebp+0x8]
1001521e:	mov    eax,DWORD PTR [eax+edx*4]
10015221:	pop    ebp
10015222:	pop    edi
10015223:	pop    esi
10015224:	pop    ebx
10015225:	add    esp,0x8
10015228:	ret    
10015229:	cmp    cl,0x4
1001522c:	jne    0x10015292
1001522e:	cmp    eax,0xc0
10015233:	jae    0x1001523d
10015235:	shr    eax,0x3
10015238:	and    eax,0x7
1001523b:	jmp    0x10015242
1001523d:	sub    eax,0xb8
10015242:	mov    ecx,DWORD PTR [ebp+0x4]
10015245:	movzx  edx,BYTE PTR [ecx+eax*1]
10015249:	mov    eax,DWORD PTR [ebp+0x8]
1001524c:	mov    eax,DWORD PTR [eax+edx*4]
1001524f:	test   eax,eax
10015251:	je     0x10015385
10015257:	cmp    BYTE PTR [eax],0x1
1001525a:	jne    0x1001527d
1001525c:	mov    ecx,DWORD PTR [eax+0x8]
1001525f:	not    ecx
10015261:	test   ecx,0x2000
10015267:	je     0x10015387
1001526d:	test   ebx,ebx
1001526f:	jne    0x10015385
10015275:	pop    ebp
10015276:	pop    edi
10015277:	pop    esi
10015278:	pop    ebx
10015279:	add    esp,0x8
1001527c:	ret    
1001527d:	mov    edx,DWORD PTR [eax+0x4]
10015280:	movzx  ecx,BYTE PTR [edx+ebx*1]
10015284:	mov    edx,DWORD PTR [eax+0x8]
10015287:	mov    eax,DWORD PTR [edx+ecx*4]
1001528a:	pop    ebp
1001528b:	pop    edi
1001528c:	pop    esi
1001528d:	pop    ebx
1001528e:	add    esp,0x8
10015291:	ret    
10015292:	test   ebx,ebx
10015294:	jne    0x10015385
1001529a:	cmp    cl,0x3
1001529d:	jne    0x100152ef
1001529f:	mov    ecx,DWORD PTR [ebp+0x4]
100152a2:	movzx  ecx,BYTE PTR [ecx+eax*1]
100152a6:	mov    ebx,DWORD PTR [ebp+0x8]
100152a9:	mov    ebp,DWORD PTR [ebx+ecx*4]
100152ac:	test   ebp,ebp
100152ae:	je     0x10015385
100152b4:	cmp    DWORD PTR [esp+0x10],0xf
100152b9:	jne    0x100152cd
100152bb:	cmp    eax,0xf
100152be:	jne    0x100152cd
100152c0:	pop    ebp
100152c1:	pop    edi
100152c2:	pop    esi
100152c3:	mov    eax,0x1008bd74
100152c8:	pop    ebx
100152c9:	add    esp,0x8
100152cc:	ret    
100152cd:	mov    al,BYTE PTR [ebp+0x0]
100152d0:	cmp    al,0x1
100152d2:	je     0x100151c4
100152d8:	cmp    al,0x5
100152da:	jne    0x100152ef
100152dc:	mov    esi,DWORD PTR [esp+0x20]
100152e0:	mov    edx,ebp
100152e2:	call   0x10014eb0
100152e7:	pop    ebp
100152e8:	pop    edi
100152e9:	pop    esi
100152ea:	pop    ebx
100152eb:	add    esp,0x8
100152ee:	ret    
100152ef:	lea    ecx,[edx-0x1]
100152f2:	test   ecx,ecx
100152f4:	lea    eax,[esi+0x1]
100152f7:	mov    DWORD PTR [edi+0x10],eax
100152fa:	mov    DWORD PTR [edi+0x14],ecx
100152fd:	jl     0x10015385
10015303:	movzx  ecx,BYTE PTR [eax]
10015306:	mov    edi,DWORD PTR [ebp+0x4]
10015309:	mov    esi,DWORD PTR [ebp+0x8]
1001530c:	mov    edx,ecx
1001530e:	shr    edx,0x3
10015311:	and    edx,0x7
10015314:	movzx  eax,BYTE PTR [edx+edi*1]
10015318:	mov    dl,BYTE PTR [ebp+0x0]
1001531b:	cmp    dl,0x2
1001531e:	mov    eax,DWORD PTR [esi+eax*4]
10015321:	jne    0x1001533f
10015323:	test   eax,eax
10015325:	je     0x10015385
10015327:	cmp    BYTE PTR [eax],0x1
1001532a:	je     0x10015387
1001532c:	mov    esi,DWORD PTR [esp+0x20]
10015330:	mov    edx,eax
10015332:	call   0x10014eb0
10015337:	pop    ebp
10015338:	pop    edi
10015339:	pop    esi
1001533a:	pop    ebx
1001533b:	add    esp,0x8
1001533e:	ret    
1001533f:	cmp    dl,0x4
10015342:	jne    0x10015369
10015344:	test   eax,eax
10015346:	je     0x1001534e
10015348:	test   BYTE PTR [eax+0x8],0x2
1001534c:	jne    0x10015387
1001534e:	cmp    ecx,0xc0
10015354:	jb     0x10015387
10015356:	movzx  ecx,BYTE PTR [edi+ecx*1-0xb8]
1001535e:	mov    eax,DWORD PTR [esi+ecx*4]
10015361:	pop    ebp
10015362:	pop    edi
10015363:	pop    esi
10015364:	pop    ebx
10015365:	add    esp,0x8
10015368:	ret    
10015369:	cmp    dl,0x3
1001536c:	jne    0x10015385
1001536e:	movzx  edx,BYTE PTR [edi+ecx*1]
10015372:	mov    eax,DWORD PTR [esi+edx*4]
10015375:	test   eax,eax
10015377:	je     0x10015385
10015379:	mov    cl,BYTE PTR [eax]
1001537b:	cmp    cl,0x1
1001537e:	je     0x10015387
10015380:	cmp    cl,0x5
10015383:	je     0x1001532c
10015385:	xor    eax,eax
10015387:	pop    ebp
10015388:	pop    edi
10015389:	pop    esi
1001538a:	pop    ebx
1001538b:	add    esp,0x8
1001538e:	ret    
1001538f:	int3   
10015390:	mov    ecx,DWORD PTR [esp+0x4]
10015394:	push   esi
10015395:	mov    esi,DWORD PTR [ecx+0x14]
10015398:	cmp    esi,0x1
1001539b:	jl     0x100153cf
1001539d:	mov    edx,DWORD PTR [ecx+0x10]
100153a0:	movzx  eax,BYTE PTR [edx]
100153a3:	push   edi
100153a4:	mov    edi,DWORD PTR ds:0x10093660
100153aa:	movzx  eax,BYTE PTR [eax+edi*1]
100153ae:	mov    edi,DWORD PTR ds:0x10093664
100153b4:	mov    eax,DWORD PTR [edi+eax*4]
100153b7:	test   eax,eax
100153b9:	pop    edi
100153ba:	je     0x100153cf
100153bc:	cmp    BYTE PTR [eax],0x1
100153bf:	jne    0x100153cf
100153c1:	add    esi,0xffffffff
100153c4:	add    edx,0x1
100153c7:	mov    DWORD PTR [ecx+0x14],esi
100153ca:	mov    DWORD PTR [ecx+0x10],edx
100153cd:	pop    esi
100153ce:	ret    
100153cf:	xor    eax,eax
100153d1:	pop    esi
100153d2:	ret    
100153d3:	int3   
100153d4:	jmp    DWORD PTR ds:0x1003405c
100153da:	jmp    DWORD PTR ds:0x10034060
100153e0:	jmp    DWORD PTR ds:0x10034064
100153e6:	jmp    DWORD PTR ds:0x100340f0
100153ec:	jmp    DWORD PTR ds:0x100340f4
100153f2:	jmp    DWORD PTR ds:0x10034114
100153f8:	jmp    DWORD PTR ds:0x10034130
100153fe:	push   ebp
100153ff:	mov    ebp,esp
10015401:	sub    esp,0xc
10015404:	mov    eax,ds:0x100951fc
10015409:	xor    eax,ebp
1001540b:	mov    DWORD PTR [ebp-0x4],eax
1001540e:	push   esi
1001540f:	xor    esi,esi
10015411:	call   DWORD PTR ds:0x100341d0
10015417:	push   0x7
10015419:	lea    ecx,[ebp-0xc]
1001541c:	push   ecx
1001541d:	push   0x1004
10015422:	push   eax
10015423:	call   DWORD PTR ds:0x100341cc
10015429:	test   eax,eax
1001542b:	je     0x1001544c
1001542d:	mov    cl,BYTE PTR [ebp-0xc]
10015430:	test   cl,cl
10015432:	lea    eax,[ebp-0xc]
10015435:	je     0x1001544c
10015437:	imul   esi,esi,0xa
1001543a:	movsx  ecx,cl
1001543d:	inc    eax
1001543e:	lea    esi,[esi+ecx*1-0x30]
10015442:	mov    cl,BYTE PTR [eax]
10015444:	test   cl,cl
10015446:	jne    0x10015437
10015448:	test   esi,esi
1001544a:	jne    0x10015454
1001544c:	call   DWORD PTR ds:0x100341c8
10015452:	mov    esi,eax
10015454:	mov    ecx,DWORD PTR [ebp-0x4]
10015457:	mov    eax,esi
10015459:	xor    ecx,ebp
1001545b:	pop    esi
1001545c:	call   0x10015b2b
10015461:	leave  
10015462:	ret    
10015463:	push   0x3
10015465:	pop    eax
10015466:	ret    
10015467:	push   ebp
10015468:	mov    ebp,esp
1001546a:	sub    esp,0x98
10015470:	mov    eax,ds:0x100951fc
10015475:	xor    eax,ebp
10015477:	mov    DWORD PTR [ebp-0x4],eax
1001547a:	lea    eax,[ebp-0x98]
10015480:	push   eax
10015481:	mov    DWORD PTR [ebp-0x98],0x94
1001548b:	call   DWORD PTR ds:0x100341d4
10015491:	cmp    DWORD PTR [ebp-0x88],0x2
10015498:	jne    0x100154a8
1001549a:	cmp    DWORD PTR [ebp-0x94],0x5
100154a1:	mov    eax,0x10015463
100154a6:	jae    0x100154ad
100154a8:	mov    eax,0x100153fe
100154ad:	push   eax
100154ae:	push   0x1009517c
100154b3:	call   DWORD PTR ds:0x100341b4
100154b9:	call   DWORD PTR ds:0x1009517c
100154bf:	mov    ecx,DWORD PTR [ebp-0x4]
100154c2:	xor    ecx,ebp
100154c4:	call   0x10015b2b
100154c9:	leave  
100154ca:	ret    
100154cb:	cmp    BYTE PTR [ecx+0x8],0x0
100154cf:	mov    DWORD PTR [ecx],0x1007d550
100154d5:	je     0x100154e5
100154d7:	mov    ecx,DWORD PTR [ecx+0x4]
100154da:	test   ecx,ecx
100154dc:	je     0x100154e5
100154de:	push   ecx
100154df:	call   DWORD PTR ds:0x100341d8
100154e5:	ret    
100154e6:	push   DWORD PTR [esp+0x4]
100154ea:	push   0x0
100154ec:	push   DWORD PTR [ecx+0x4]
100154ef:	call   DWORD PTR ds:0x100341dc
100154f5:	ret    0x4
100154f8:	cmp    DWORD PTR [esp+0x4],0x0
100154fd:	je     0x1001550e
100154ff:	push   DWORD PTR [esp+0x4]
10015503:	push   0x0
10015505:	push   DWORD PTR [ecx+0x4]
10015508:	call   DWORD PTR ds:0x100341e0
1001550e:	ret    0x4
10015511:	push   ebp
10015512:	mov    ebp,esp
10015514:	xor    eax,eax
10015516:	cmp    DWORD PTR [ebp+0x8],eax
10015519:	jne    0x10015524
1001551b:	push   DWORD PTR [ebp+0xc]
1001551e:	mov    eax,DWORD PTR [ecx]
10015520:	call   DWORD PTR [eax]
10015522:	jmp    0x10015545
10015524:	cmp    DWORD PTR [ebp+0xc],eax
10015527:	jne    0x10015535
10015529:	push   DWORD PTR [ebp+0x8]
1001552c:	mov    eax,DWORD PTR [ecx]
1001552e:	call   DWORD PTR [eax+0x4]
10015531:	xor    eax,eax
10015533:	jmp    0x10015545
10015535:	push   DWORD PTR [ebp+0xc]
10015538:	push   DWORD PTR [ebp+0x8]
1001553b:	push   eax
1001553c:	push   DWORD PTR [ecx+0x4]
1001553f:	call   DWORD PTR ds:0x100341e4
10015545:	pop    ebp
10015546:	ret    0x8
10015549:	push   DWORD PTR [esp+0x4]
1001554d:	push   0x0
1001554f:	push   DWORD PTR [ecx+0x4]
10015552:	call   DWORD PTR ds:0x100341e8
10015558:	ret    0x4
1001555b:	push   esi
1001555c:	mov    esi,ecx
1001555e:	call   0x100154cb
10015563:	test   BYTE PTR [esp+0x8],0x1
10015568:	je     0x10015571
1001556a:	push   esi
1001556b:	call   0x10015b26
10015570:	pop    ecx
10015571:	mov    eax,esi
10015573:	pop    esi
10015574:	ret    0x4
10015577:	mov    eax,ecx
10015579:	mov    ecx,DWORD PTR [esp+0x4]
1001557d:	mov    DWORD PTR [eax+0x4],ecx
10015580:	mov    DWORD PTR [eax],0x1007d564
10015586:	xor    ecx,ecx
10015588:	mov    DWORD PTR [eax+0x14],0x2
1001558f:	mov    DWORD PTR [eax+0xc],ecx
10015592:	mov    DWORD PTR [eax+0x10],ecx
10015595:	mov    WORD PTR [eax+0x18],cx
10015599:	mov    WORD PTR [eax+0x1a],cx
1001559d:	mov    DWORD PTR [eax+0x8],eax
100155a0:	ret    0x4
100155a3:	mov    eax,DWORD PTR [esp+0x8]
100155a7:	mul    DWORD PTR [esp+0xc]
100155ab:	test   edx,edx
100155ad:	ja     0x100155b4
100155af:	cmp    eax,0xffffffff
100155b2:	jbe    0x100155ba
100155b4:	mov    eax,0x80070057
100155b9:	ret    
100155ba:	mov    ecx,DWORD PTR [esp+0x4]
100155be:	mov    DWORD PTR [ecx],eax
100155c0:	xor    eax,eax
100155c2:	ret    
100155c3:	mov    ecx,DWORD PTR [ecx+0x4]
100155c6:	mov    eax,DWORD PTR [ecx]
100155c8:	jmp    DWORD PTR [eax+0x4]
100155cb:	xor    edx,edx
100155cd:	lea    eax,[ecx+0x14]
100155d0:	inc    edx
100155d1:	lock xadd DWORD PTR [eax],edx
100155d5:	lea    eax,[ecx+0x8]
100155d8:	ret    
100155d9:	mov    eax,ecx
100155db:	ret    
100155dc:	test   BYTE PTR [esp+0x4],0x1
100155e1:	push   esi
100155e2:	mov    esi,ecx
100155e4:	mov    DWORD PTR [esi],0x1007d564
100155ea:	je     0x100155f3
100155ec:	push   esi
100155ed:	call   0x10015b26
100155f2:	pop    ecx
100155f3:	mov    eax,esi
100155f5:	pop    esi
100155f6:	ret    0x4
100155f9:	mov    eax,DWORD PTR [esp+0x8]
100155fd:	mov    ecx,DWORD PTR [esp+0xc]
10015601:	or     edx,0xffffffff
10015604:	sub    edx,eax
10015606:	cmp    edx,ecx
10015608:	jae    0x10015610
1001560a:	mov    eax,0x80070057
1001560f:	ret    
10015610:	add    eax,ecx
10015612:	mov    ecx,DWORD PTR [esp+0x4]
10015616:	mov    DWORD PTR [ecx],eax
10015618:	xor    eax,eax
1001561a:	ret    
1001561b:	push   ebp
1001561c:	mov    ebp,esp
1001561e:	push   esi
1001561f:	mov    esi,DWORD PTR [ebp+0x8]
10015622:	push   edi
10015623:	push   DWORD PTR [ebp+0xc]
10015626:	add    esi,0x8
10015629:	and    esi,0xfffffff8
1001562c:	lea    eax,[ebp+0x8]
1001562f:	push   esi
10015630:	push   eax
10015631:	mov    edi,ecx
10015633:	call   0x10013000
10015638:	add    esp,0xc
1001563b:	test   eax,eax
1001563d:	jl     0x10015675
1001563f:	push   DWORD PTR [ebp+0x8]
10015642:	lea    eax,[ebp+0x8]
10015645:	push   0x10
10015647:	push   eax
10015648:	call   0x100155f9
1001564d:	add    esp,0xc
10015650:	test   eax,eax
10015652:	jl     0x10015675
10015654:	mov    ecx,DWORD PTR [edi+0x4]
10015657:	push   DWORD PTR [ebp+0x8]
1001565a:	mov    eax,DWORD PTR [ecx]
1001565c:	call   DWORD PTR [eax]
1001565e:	test   eax,eax
10015660:	je     0x10015675
10015662:	dec    esi
10015663:	and    DWORD PTR [eax+0x4],0x0
10015667:	mov    DWORD PTR [eax],edi
10015669:	mov    DWORD PTR [eax+0xc],0x1
10015670:	mov    DWORD PTR [eax+0x8],esi
10015673:	jmp    0x10015677
10015675:	xor    eax,eax
10015677:	pop    edi
10015678:	pop    esi
10015679:	pop    ebp
1001567a:	ret    0x8
1001567d:	push   ebp
1001567e:	mov    ebp,esp
10015680:	push   esi
10015681:	mov    esi,DWORD PTR [ebp+0xc]
10015684:	push   edi
10015685:	push   DWORD PTR [ebp+0x10]
10015688:	add    esi,0x8
1001568b:	and    esi,0xfffffff8
1001568e:	lea    eax,[ebp+0xc]
10015691:	push   esi
10015692:	push   eax
10015693:	mov    edi,ecx
10015695:	call   0x100155a3
1001569a:	add    esp,0xc
1001569d:	test   eax,eax
1001569f:	jl     0x100156ce
100156a1:	push   DWORD PTR [ebp+0xc]
100156a4:	lea    eax,[ebp+0xc]
100156a7:	push   0x10
100156a9:	push   eax
100156aa:	call   0x10006ad0
100156af:	add    esp,0xc
100156b2:	test   eax,eax
100156b4:	jl     0x100156ce
100156b6:	push   DWORD PTR [ebp+0xc]
100156b9:	mov    ecx,DWORD PTR [edi+0x4]
100156bc:	push   DWORD PTR [ebp+0x8]
100156bf:	mov    eax,DWORD PTR [ecx]
100156c1:	call   DWORD PTR [eax+0x8]
100156c4:	test   eax,eax
100156c6:	je     0x100156ce
100156c8:	dec    esi
100156c9:	mov    DWORD PTR [eax+0x8],esi
100156cc:	jmp    0x100156d0
100156ce:	xor    eax,eax
100156d0:	pop    edi
100156d1:	pop    esi
100156d2:	pop    ebp
100156d3:	ret    0xc
100156d6:	push   esi
100156d7:	mov    esi,ecx
100156d9:	mov    eax,DWORD PTR [esi]
100156db:	test   eax,eax
100156dd:	je     0x100156e9
100156df:	push   eax
100156e0:	call   0x10016b85
100156e5:	and    DWORD PTR [esi],0x0
100156e8:	pop    ecx
100156e9:	and    DWORD PTR [esi+0x4],0x0
100156ed:	and    DWORD PTR [esi+0x8],0x0
100156f1:	pop    esi
100156f2:	ret    
100156f3:	push   esi
100156f4:	push   0x18
100156f6:	mov    esi,ecx
100156f8:	push   0x0
100156fa:	push   esi
100156fb:	call   0x10016580
10015700:	add    esp,0xc
10015703:	mov    eax,esi
10015705:	pop    esi
10015706:	ret    
10015707:	push   0xc
10015709:	push   0x100855c8
1001570e:	call   0x10017f88
10015713:	and    DWORD PTR [ebp-0x4],0x0
10015717:	push   ecx
10015718:	call   DWORD PTR ds:0x100341fc
1001571e:	and    DWORD PTR [ebp-0x1c],0x0
10015722:	jmp    0x10015742
10015724:	mov    eax,DWORD PTR [ebp-0x14]
10015727:	mov    eax,DWORD PTR [eax]
10015729:	mov    eax,DWORD PTR [eax]
1001572b:	xor    ecx,ecx
1001572d:	cmp    eax,0xc0000017
10015732:	sete   cl
10015735:	mov    eax,ecx
10015737:	ret    
10015738:	mov    esp,DWORD PTR [ebp-0x18]
1001573b:	mov    DWORD PTR [ebp-0x1c],0x8007000e
10015742:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10015749:	mov    eax,DWORD PTR [ebp-0x1c]
1001574c:	call   0x10017fcd
10015751:	ret    
10015752:	mov    eax,DWORD PTR [esp+0x4]
10015756:	test   eax,eax
10015758:	jne    0x10015761
1001575a:	mov    eax,0x80070057
1001575f:	jmp    0x10015772
10015761:	cmp    DWORD PTR [eax],0x2c
10015764:	jne    0x1001575a
10015766:	and    DWORD PTR [eax+0x1c],0x0
1001576a:	lea    ecx,[eax+0x4]
1001576d:	call   0x10015707
10015772:	ret    0x4
10015775:	mov    eax,DWORD PTR [esp+0x4]
10015779:	test   eax,eax
1001577b:	jl     0x1001578a
1001577d:	cmp    eax,DWORD PTR [ecx+0x4]
10015780:	jge    0x1001578a
10015782:	mov    ecx,DWORD PTR [ecx]
10015784:	lea    eax,[ecx+eax*2]
10015787:	ret    0x4
1001578a:	push   0x0
1001578c:	push   0x0
1001578e:	push   0x1
10015790:	push   0xc000008c
10015795:	call   DWORD PTR ds:0x100341f0
1001579b:	int3   
1001579c:	mov    eax,DWORD PTR [esp+0x4]
100157a0:	test   eax,eax
100157a2:	jl     0x100157b1
100157a4:	cmp    eax,DWORD PTR [ecx+0x4]
100157a7:	jge    0x100157b1
100157a9:	mov    ecx,DWORD PTR [ecx]
100157ab:	lea    eax,[ecx+eax*4]
100157ae:	ret    0x4
100157b1:	push   0x0
100157b3:	push   0x0
100157b5:	push   0x1
100157b7:	push   0xc000008c
100157bc:	call   DWORD PTR ds:0x100341f0
100157c2:	int3   
100157c3:	push   esi
100157c4:	mov    esi,ecx
100157c6:	lea    ecx,[esi+0x4]
100157c9:	call   0x100156f3
100157ce:	xor    eax,eax
100157d0:	mov    DWORD PTR [esi+0x20],eax
100157d3:	mov    DWORD PTR [esi+0x24],eax
100157d6:	mov    DWORD PTR [esi+0x28],eax
100157d9:	mov    eax,esi
100157db:	pop    esi
100157dc:	ret    
100157dd:	push   esi
100157de:	mov    esi,DWORD PTR [esp+0x8]
100157e2:	test   esi,esi
100157e4:	jne    0x100157ed
100157e6:	mov    eax,0x80070057
100157eb:	jmp    0x10015839
100157ed:	mov    eax,DWORD PTR [esi]
100157ef:	test   eax,eax
100157f1:	je     0x10015837
100157f3:	cmp    eax,0x2c
100157f6:	jne    0x100157e6
100157f8:	push   edi
100157f9:	xor    edi,edi
100157fb:	cmp    DWORD PTR [esi+0x24],edi
100157fe:	jle    0x10015821
10015800:	push   ebx
10015801:	lea    ebx,[esi+0x20]
10015804:	push   edi
10015805:	mov    ecx,ebx
10015807:	call   0x10015775
1001580c:	movzx  eax,WORD PTR [eax]
1001580f:	push   DWORD PTR [esp+0x14]
10015813:	push   eax
10015814:	call   DWORD PTR ds:0x10034244
1001581a:	inc    edi
1001581b:	cmp    edi,DWORD PTR [esi+0x24]
1001581e:	jl     0x10015804
10015820:	pop    ebx
10015821:	lea    ecx,[esi+0x20]
10015824:	call   0x100156d6
10015829:	lea    eax,[esi+0x4]
1001582c:	push   eax
1001582d:	call   DWORD PTR ds:0x10034200
10015833:	and    DWORD PTR [esi],0x0
10015836:	pop    edi
10015837:	xor    eax,eax
10015839:	pop    esi
1001583a:	ret    0x8
1001583d:	push   esi
1001583e:	mov    esi,ecx
10015840:	cmp    BYTE PTR [esi+0x4],0x0
10015844:	je     0x10015852
10015846:	push   DWORD PTR [esi]
10015848:	call   DWORD PTR ds:0x100341f8
1001584e:	mov    BYTE PTR [esi+0x4],0x0
10015852:	pop    esi
10015853:	ret    
10015854:	push   esi
10015855:	mov    esi,ecx
10015857:	lea    ecx,[esi+0x18]
1001585a:	call   0x100156f3
1001585f:	xor    eax,eax
10015861:	mov    DWORD PTR [esi+0x30],eax
10015864:	mov    DWORD PTR [esi+0x34],eax
10015867:	mov    DWORD PTR [esi+0x38],eax
1001586a:	mov    eax,esi
1001586c:	pop    esi
1001586d:	ret    
1001586e:	push   esi
1001586f:	mov    esi,ecx
10015871:	lea    eax,[esi+0x18]
10015874:	push   eax
10015875:	call   DWORD PTR ds:0x10034200
1001587b:	lea    ecx,[esi+0x30]
1001587e:	pop    esi
1001587f:	jmp    0x100156d6
10015884:	push   ebp
10015885:	mov    ebp,esp
10015887:	push   ecx
10015888:	push   ecx
10015889:	push   esi
1001588a:	mov    esi,ecx
1001588c:	lea    eax,[esi+0x18]
1001588f:	push   eax
10015890:	mov    DWORD PTR [ebp-0x8],eax
10015893:	call   DWORD PTR ds:0x100341f4
10015899:	mov    eax,DWORD PTR [esi+0x34]
1001589c:	mov    ecx,DWORD PTR [ebp+0x8]
1001589f:	cmp    ecx,eax
100158a1:	mov    BYTE PTR [ebp-0x4],0x1
100158a5:	jg     0x100158cb
100158a7:	test   ecx,ecx
100158a9:	jl     0x100158cb
100158ab:	cmp    ecx,eax
100158ad:	jne    0x100158be
100158af:	mov    esi,DWORD PTR [esi+0x8]
100158b2:	lea    ecx,[ebp-0x8]
100158b5:	call   0x1001583d
100158ba:	mov    eax,esi
100158bc:	jmp    0x100158d5
100158be:	push   ecx
100158bf:	lea    ecx,[esi+0x30]
100158c2:	call   0x1001579c
100158c7:	mov    esi,DWORD PTR [eax]
100158c9:	jmp    0x100158b2
100158cb:	lea    ecx,[ebp-0x8]
100158ce:	call   0x1001583d
100158d3:	xor    eax,eax
100158d5:	pop    esi
100158d6:	leave  
100158d7:	ret    0x4
100158da:	push   esi
100158db:	mov    esi,ecx
100158dd:	call   0x100157c3
100158e2:	push   esi
100158e3:	mov    DWORD PTR [esi],0x2c
100158e9:	call   0x10015752
100158ee:	test   eax,eax
100158f0:	jge    0x100158fc
100158f2:	mov    BYTE PTR ds:0x10097928,0x1
100158f9:	and    DWORD PTR [esi],0x0
100158fc:	mov    eax,esi
100158fe:	pop    esi
100158ff:	ret    
10015900:	push   ebp
10015901:	lea    ebp,[esp-0x78]
10015905:	sub    esp,0x98
1001590b:	mov    eax,ds:0x100951fc
10015910:	xor    eax,ebp
10015912:	mov    DWORD PTR [ebp+0x74],eax
10015915:	push   esi
10015916:	mov    esi,ecx
10015918:	call   0x10015854
1001591d:	mov    eax,0x10000000
10015922:	push   0x94
10015927:	mov    DWORD PTR [esi+0x8],eax
1001592a:	mov    DWORD PTR [esi+0x4],eax
1001592d:	lea    eax,[ebp-0x20]
10015930:	push   0x0
10015932:	push   eax
10015933:	mov    DWORD PTR [esi],0x3c
10015939:	mov    BYTE PTR [esi+0xc],0x0
1001593d:	call   0x10016580
10015942:	add    esp,0xc
10015945:	lea    eax,[ebp-0x20]
10015948:	push   eax
10015949:	mov    DWORD PTR [ebp-0x20],0x94
10015950:	call   DWORD PTR ds:0x100341d4
10015956:	cmp    DWORD PTR [ebp-0x10],0x2
1001595a:	jne    0x10015964
1001595c:	cmp    DWORD PTR [ebp-0x1c],0x5
10015960:	jb     0x1001597c
10015962:	jmp    0x10015978
10015964:	cmp    DWORD PTR [ebp-0x10],0x1
10015968:	jne    0x1001597c
1001596a:	cmp    DWORD PTR [ebp-0x1c],0x4
1001596e:	ja     0x10015978
10015970:	jne    0x1001597c
10015972:	cmp    DWORD PTR [ebp-0x18],0x0
10015976:	jbe    0x1001597c
10015978:	mov    BYTE PTR [esi+0xc],0x1
1001597c:	lea    ecx,[esi+0x18]
1001597f:	mov    DWORD PTR [esi+0x10],0x800
10015986:	mov    DWORD PTR [esi+0x14],0x1007d58c
1001598d:	call   0x10015707
10015992:	test   eax,eax
10015994:	jge    0x1001599d
10015996:	mov    BYTE PTR ds:0x10097928,0x1
1001599d:	mov    ecx,DWORD PTR [ebp+0x74]
100159a0:	mov    eax,esi
100159a2:	xor    ecx,ebp
100159a4:	pop    esi
100159a5:	call   0x10015b2b
100159aa:	add    ebp,0x78
100159ad:	leave  
100159ae:	ret    
100159af:	push   esi
100159b0:	push   DWORD PTR ds:0x10096ca0
100159b6:	mov    esi,ecx
100159b8:	push   esi
100159b9:	call   0x100157dd
100159be:	lea    ecx,[esi+0x20]
100159c1:	pop    esi
100159c2:	jmp    0x100156d6
100159c7:	push   0x44
100159c9:	mov    eax,0x1002a6b6
100159ce:	call   0x10017fe1
100159d3:	push   0x1007d59c
100159d8:	lea    ecx,[ebp-0x28]
100159db:	call   0x10002b70
100159e0:	and    DWORD PTR [ebp-0x4],0x0
100159e4:	lea    eax,[ebp-0x28]
100159e7:	push   eax
100159e8:	lea    ecx,[ebp-0x50]
100159eb:	call   0x10001390
100159f0:	push   0x10085d0c
100159f5:	lea    eax,[ebp-0x50]
100159f8:	push   eax
100159f9:	mov    DWORD PTR [ebp-0x50],0x100344f4
10015a00:	call   0x1001621e
10015a05:	int3   
10015a06:	push   0x44
10015a08:	mov    eax,0x1002a6d9
10015a0d:	call   0x10017fe1
10015a12:	push   0x1007d5ac
10015a17:	lea    ecx,[ebp-0x28]
10015a1a:	call   0x10002b70
10015a1f:	and    DWORD PTR [ebp-0x4],0x0
10015a23:	lea    eax,[ebp-0x28]
10015a26:	push   eax
10015a27:	lea    ecx,[ebp-0x50]
10015a2a:	call   0x10001390
10015a2f:	push   0x10085cd0
10015a34:	lea    eax,[ebp-0x50]
10015a37:	push   eax
10015a38:	mov    DWORD PTR [ebp-0x50],0x10034518
10015a3f:	call   0x1001621e
10015a44:	int3   
10015a45:	jmp    0x10016464
10015a4a:	push   edi
10015a4b:	push   0x10095194
10015a50:	mov    edi,ecx
10015a52:	call   DWORD PTR ds:0x100340dc
10015a58:	test   eax,eax
10015a5a:	jne    0x10015a75
10015a5c:	push   esi
10015a5d:	mov    esi,0x10096d70
10015a62:	push   esi
10015a63:	call   0x10015afa
10015a68:	add    esi,0x18
10015a6b:	cmp    esi,0x10096dd0
10015a71:	pop    ecx
10015a72:	jl     0x10015a62
10015a74:	pop    esi
10015a75:	mov    eax,edi
10015a77:	pop    edi
10015a78:	ret    
10015a79:	push   0x10095194
10015a7e:	call   DWORD PTR ds:0x100340ec
10015a84:	test   eax,eax
10015a86:	jge    0x10015aa1
10015a88:	push   esi
10015a89:	mov    esi,0x10096d70
10015a8e:	push   esi
10015a8f:	call   0x10015b05
10015a94:	add    esi,0x18
10015a97:	cmp    esi,0x10096dd0
10015a9d:	pop    ecx
10015a9e:	jl     0x10015a8e
10015aa0:	pop    esi
10015aa1:	ret    
10015aa2:	mov    eax,DWORD PTR [esp+0x4]
10015aa6:	and    eax,0x3
10015aa9:	push   esi
10015aaa:	mov    esi,ecx
10015aac:	mov    DWORD PTR [esi],eax
10015aae:	imul   eax,eax,0x18
10015ab1:	add    eax,0x10096d70
10015ab6:	push   eax
10015ab7:	call   0x10015b10
10015abc:	pop    ecx
10015abd:	mov    eax,esi
10015abf:	pop    esi
10015ac0:	ret    0x4
10015ac3:	mov    eax,DWORD PTR [ecx]
10015ac5:	imul   eax,eax,0x18
10015ac8:	add    eax,0x10096d70
10015acd:	push   eax
10015ace:	call   0x10015b1b
10015ad3:	pop    ecx
10015ad4:	ret    
10015ad5:	jmp    0x10015aef
10015ad7:	mov    ecx,DWORD PTR [eax*4+0x10096df4]
10015ade:	inc    eax
10015adf:	test   ecx,ecx
10015ae1:	mov    ds:0x1009519c,eax
10015ae6:	je     0x10015af4
10015ae8:	call   DWORD PTR [eax*4+0x10096df0]
10015aef:	mov    eax,ds:0x1009519c
10015af4:	cmp    eax,0xa
10015af7:	jb     0x10015ad7
10015af9:	ret    
10015afa:	push   DWORD PTR [esp+0x4]
10015afe:	call   DWORD PTR ds:0x100341fc
10015b04:	ret    
10015b05:	push   DWORD PTR [esp+0x4]
10015b09:	call   DWORD PTR ds:0x10034200
10015b0f:	ret    
10015b10:	push   DWORD PTR [esp+0x4]
10015b14:	call   DWORD PTR ds:0x100341f4
10015b1a:	ret    
10015b1b:	push   DWORD PTR [esp+0x4]
10015b1f:	call   DWORD PTR ds:0x100341f8
10015b25:	ret    
10015b26:	jmp    0x10016b85
10015b2b:	cmp    ecx,DWORD PTR ds:0x100951fc
10015b31:	jne    0x10015b35
10015b33:	repz ret 
10015b35:	jmp    0x10018919
10015b3a:	int3   
10015b3b:	int3   
10015b3c:	int3   
10015b3d:	int3   
10015b3e:	int3   
10015b3f:	int3   
10015b40:	push   ecx
10015b41:	lea    ecx,[esp+0x8]
10015b45:	sub    ecx,eax
10015b47:	and    ecx,0xf
10015b4a:	add    eax,ecx
10015b4c:	sbb    ecx,ecx
10015b4e:	or     eax,ecx
10015b50:	pop    ecx
10015b51:	jmp    0x10016550
10015b56:	push   ecx
10015b57:	lea    ecx,[esp+0x8]
10015b5b:	sub    ecx,eax
10015b5d:	and    ecx,0x7
10015b60:	add    eax,ecx
10015b62:	sbb    ecx,ecx
10015b64:	or     eax,ecx
10015b66:	pop    ecx
10015b67:	jmp    0x10016550
10015b6c:	push   ebp
10015b6d:	mov    ebp,esp
10015b6f:	push   ecx
10015b70:	push   ebx
10015b71:	mov    eax,DWORD PTR [ebp+0xc]
10015b74:	add    eax,0xc
10015b77:	mov    DWORD PTR [ebp-0x4],eax
10015b7a:	mov    ebx,DWORD PTR fs:0x0
10015b81:	mov    eax,DWORD PTR [ebx]
10015b83:	mov    fs:0x0,eax
10015b89:	mov    eax,DWORD PTR [ebp+0x8]
10015b8c:	mov    ebx,DWORD PTR [ebp+0xc]
10015b8f:	mov    ebp,DWORD PTR [ebp-0x4]
10015b92:	mov    esp,DWORD PTR [ebx-0x4]
10015b95:	jmp    eax
10015b97:	pop    ebx
10015b98:	leave  
10015b99:	ret    0x8
10015b9c:	pop    eax
10015b9d:	pop    ecx
10015b9e:	xchg   DWORD PTR [esp],eax
10015ba1:	jmp    eax
10015ba3:	push   ebp
10015ba4:	mov    ebp,esp
10015ba6:	push   ecx
10015ba7:	push   ecx
10015ba8:	push   ebx
10015ba9:	push   esi
10015baa:	push   edi
10015bab:	mov    esi,DWORD PTR fs:0x0
10015bb2:	mov    DWORD PTR [ebp-0x4],esi
10015bb5:	mov    DWORD PTR [ebp-0x8],0x10015bcc
10015bbc:	push   0x0
10015bbe:	push   DWORD PTR [ebp+0xc]
10015bc1:	push   DWORD PTR [ebp-0x8]
10015bc4:	push   DWORD PTR [ebp+0x8]
10015bc7:	call   0x1002a06e
10015bcc:	mov    eax,DWORD PTR [ebp+0xc]
10015bcf:	mov    eax,DWORD PTR [eax+0x4]
10015bd2:	and    eax,0xfffffffd
10015bd5:	mov    ecx,DWORD PTR [ebp+0xc]
10015bd8:	mov    DWORD PTR [ecx+0x4],eax
10015bdb:	mov    edi,DWORD PTR fs:0x0
10015be2:	mov    ebx,DWORD PTR [ebp-0x4]
10015be5:	mov    DWORD PTR [ebx],edi
10015be7:	mov    DWORD PTR fs:0x0,ebx
10015bee:	pop    edi
10015bef:	pop    esi
10015bf0:	pop    ebx
10015bf1:	leave  
10015bf2:	ret    0x8
10015bf5:	push   ebp
10015bf6:	mov    ebp,esp
10015bf8:	sub    esp,0x8
10015bfb:	push   ebx
10015bfc:	push   esi
10015bfd:	push   edi
10015bfe:	cld    
10015bff:	mov    DWORD PTR [ebp-0x4],eax
10015c02:	xor    eax,eax
10015c04:	push   eax
10015c05:	push   eax
10015c06:	push   eax
10015c07:	push   DWORD PTR [ebp-0x4]
10015c0a:	push   DWORD PTR [ebp+0x14]
10015c0d:	push   DWORD PTR [ebp+0x10]
10015c10:	push   DWORD PTR [ebp+0xc]
10015c13:	push   DWORD PTR [ebp+0x8]
10015c16:	call   0x100195c3
10015c1b:	add    esp,0x20
10015c1e:	mov    DWORD PTR [ebp-0x8],eax
10015c21:	pop    edi
10015c22:	pop    esi
10015c23:	pop    ebx
10015c24:	mov    eax,DWORD PTR [ebp-0x8]
10015c27:	mov    esp,ebp
10015c29:	pop    ebp
10015c2a:	ret    
10015c2b:	push   esi
10015c2c:	cld    
10015c2d:	mov    esi,DWORD PTR [esp+0xc]
10015c31:	mov    ecx,DWORD PTR [esi+0x8]
10015c34:	xor    ecx,esi
10015c36:	call   0x10015b2b
10015c3b:	push   0x0
10015c3d:	push   esi
10015c3e:	push   DWORD PTR [esi+0x14]
10015c41:	push   DWORD PTR [esi+0xc]
10015c44:	push   0x0
10015c46:	push   DWORD PTR [esp+0x24]
10015c4a:	push   DWORD PTR [esi+0x10]
10015c4d:	push   DWORD PTR [esp+0x24]
10015c51:	call   0x100195c3
10015c56:	add    esp,0x20
10015c59:	pop    esi
10015c5a:	ret    
10015c5b:	push   ebp
10015c5c:	mov    ebp,esp
10015c5e:	sub    esp,0x38
10015c61:	push   ebx
10015c62:	cmp    DWORD PTR [ebp+0x8],0x123
10015c69:	jne    0x10015c7d
10015c6b:	mov    eax,0x10015d04
10015c70:	mov    ecx,DWORD PTR [ebp+0xc]
10015c73:	mov    DWORD PTR [ecx],eax
10015c75:	xor    eax,eax
10015c77:	inc    eax
10015c78:	jmp    0x10015d2d
10015c7d:	and    DWORD PTR [ebp-0x28],0x0
10015c81:	mov    DWORD PTR [ebp-0x24],0x10015d30
10015c88:	mov    eax,ds:0x100951fc
10015c8d:	lea    ecx,[ebp-0x28]
10015c90:	xor    eax,ecx
10015c92:	mov    DWORD PTR [ebp-0x20],eax
10015c95:	mov    eax,DWORD PTR [ebp+0x18]
10015c98:	mov    DWORD PTR [ebp-0x1c],eax
10015c9b:	mov    eax,DWORD PTR [ebp+0xc]
10015c9e:	mov    DWORD PTR [ebp-0x18],eax
10015ca1:	mov    eax,DWORD PTR [ebp+0x1c]
10015ca4:	mov    DWORD PTR [ebp-0x14],eax
10015ca7:	mov    eax,DWORD PTR [ebp+0x20]
10015caa:	mov    DWORD PTR [ebp-0x10],eax
10015cad:	and    DWORD PTR [ebp-0xc],0x0
10015cb1:	and    DWORD PTR [ebp-0x8],0x0
10015cb5:	and    DWORD PTR [ebp-0x4],0x0
10015cb9:	mov    DWORD PTR [ebp-0xc],esp
10015cbc:	mov    DWORD PTR [ebp-0x8],ebp
10015cbf:	mov    eax,fs:0x0
10015cc5:	mov    DWORD PTR [ebp-0x28],eax
10015cc8:	lea    eax,[ebp-0x28]
10015ccb:	mov    fs:0x0,eax
10015cd1:	mov    DWORD PTR [ebp-0x38],0x1
10015cd8:	mov    eax,DWORD PTR [ebp+0x8]
10015cdb:	mov    DWORD PTR [ebp-0x34],eax
10015cde:	mov    eax,DWORD PTR [ebp+0x10]
10015ce1:	mov    DWORD PTR [ebp-0x30],eax
10015ce4:	call   0x100199a6
10015ce9:	mov    eax,DWORD PTR [eax+0x80]
10015cef:	mov    DWORD PTR [ebp-0x2c],eax
10015cf2:	lea    eax,[ebp-0x34]
10015cf5:	push   eax
10015cf6:	mov    eax,DWORD PTR [ebp+0x8]
10015cf9:	push   DWORD PTR [eax]
10015cfb:	call   DWORD PTR [ebp-0x2c]
10015cfe:	pop    ecx
10015cff:	pop    ecx
10015d00:	and    DWORD PTR [ebp-0x38],0x0
10015d04:	cmp    DWORD PTR [ebp-0x4],0x0
10015d08:	je     0x10015d21
10015d0a:	mov    ebx,DWORD PTR fs:0x0
10015d11:	mov    eax,DWORD PTR [ebx]
10015d13:	mov    ebx,DWORD PTR [ebp-0x28]
10015d16:	mov    DWORD PTR [ebx],eax
10015d18:	mov    DWORD PTR fs:0x0,ebx
10015d1f:	jmp    0x10015d2a
10015d21:	mov    eax,DWORD PTR [ebp-0x28]
10015d24:	mov    fs:0x0,eax
10015d2a:	mov    eax,DWORD PTR [ebp-0x38]
10015d2d:	pop    ebx
10015d2e:	leave  
10015d2f:	ret    
10015d30:	push   ebp
10015d31:	mov    ebp,esp
10015d33:	push   ecx
10015d34:	push   ebx
10015d35:	cld    
10015d36:	mov    eax,DWORD PTR [ebp+0xc]
10015d39:	mov    ecx,DWORD PTR [eax+0x8]
10015d3c:	xor    ecx,DWORD PTR [ebp+0xc]
10015d3f:	call   0x10015b2b
10015d44:	mov    eax,DWORD PTR [ebp+0x8]
10015d47:	mov    eax,DWORD PTR [eax+0x4]
10015d4a:	and    eax,0x66
10015d4d:	je     0x10015d60
10015d4f:	mov    eax,DWORD PTR [ebp+0xc]
10015d52:	mov    DWORD PTR [eax+0x24],0x1
10015d59:	xor    eax,eax
10015d5b:	inc    eax
10015d5c:	jmp    0x10015dca
10015d5e:	jmp    0x10015dca
10015d60:	push   0x1
10015d62:	mov    eax,DWORD PTR [ebp+0xc]
10015d65:	push   DWORD PTR [eax+0x18]
10015d68:	mov    eax,DWORD PTR [ebp+0xc]
10015d6b:	push   DWORD PTR [eax+0x14]
10015d6e:	mov    eax,DWORD PTR [ebp+0xc]
10015d71:	push   DWORD PTR [eax+0xc]
10015d74:	push   0x0
10015d76:	push   DWORD PTR [ebp+0x10]
10015d79:	mov    eax,DWORD PTR [ebp+0xc]
10015d7c:	push   DWORD PTR [eax+0x10]
10015d7f:	push   DWORD PTR [ebp+0x8]
10015d82:	call   0x100195c3
10015d87:	add    esp,0x20
10015d8a:	mov    eax,DWORD PTR [ebp+0xc]
10015d8d:	cmp    DWORD PTR [eax+0x24],0x0
10015d91:	jne    0x10015d9e
10015d93:	push   DWORD PTR [ebp+0x8]
10015d96:	push   DWORD PTR [ebp+0xc]
10015d99:	call   0x10015ba3
10015d9e:	push   0x0
10015da0:	push   0x0
10015da2:	push   0x0
10015da4:	push   0x0
10015da6:	push   0x0
10015da8:	lea    eax,[ebp-0x4]
10015dab:	push   eax
10015dac:	push   0x123
10015db1:	call   0x10015c5b
10015db6:	add    esp,0x1c
10015db9:	mov    eax,DWORD PTR [ebp-0x4]
10015dbc:	mov    ebx,DWORD PTR [ebp+0xc]
10015dbf:	mov    esp,DWORD PTR [ebx+0x1c]
10015dc2:	mov    ebp,DWORD PTR [ebx+0x20]
10015dc5:	jmp    eax
10015dc7:	xor    eax,eax
10015dc9:	inc    eax
10015dca:	pop    ebx
10015dcb:	leave  
10015dcc:	ret    
10015dcd:	push   ebp
10015dce:	mov    ebp,esp
10015dd0:	push   ecx
10015dd1:	push   ebx
10015dd2:	push   esi
10015dd3:	push   edi
10015dd4:	mov    edi,DWORD PTR [ebp+0x8]
10015dd7:	mov    eax,DWORD PTR [edi+0x10]
10015dda:	mov    esi,DWORD PTR [edi+0xc]
10015ddd:	mov    DWORD PTR [ebp-0x4],eax
10015de0:	mov    ebx,esi
10015de2:	jmp    0x10015e11
10015de4:	cmp    esi,0xffffffff
10015de7:	jne    0x10015dee
10015de9:	call   0x10019d18
10015dee:	mov    ecx,DWORD PTR [ebp-0x4]
10015df1:	dec    esi
10015df2:	mov    eax,esi
10015df4:	imul   eax,eax,0x14
10015df7:	add    eax,ecx
10015df9:	mov    ecx,DWORD PTR [ebp+0x10]
10015dfc:	cmp    DWORD PTR [eax+0x4],ecx
10015dff:	jge    0x10015e06
10015e01:	cmp    ecx,DWORD PTR [eax+0x8]
10015e04:	jle    0x10015e0b
10015e06:	cmp    esi,0xffffffff
10015e09:	jne    0x10015e14
10015e0b:	dec    DWORD PTR [ebp+0xc]
10015e0e:	mov    ebx,DWORD PTR [ebp+0x8]
10015e11:	mov    DWORD PTR [ebp+0x8],esi
10015e14:	cmp    DWORD PTR [ebp+0xc],0x0
10015e18:	jge    0x10015de4
10015e1a:	mov    eax,DWORD PTR [ebp+0x14]
10015e1d:	inc    esi
10015e1e:	mov    DWORD PTR [eax],esi
10015e20:	mov    eax,DWORD PTR [ebp+0x18]
10015e23:	mov    DWORD PTR [eax],ebx
10015e25:	cmp    ebx,DWORD PTR [edi+0xc]
10015e28:	ja     0x10015e2e
10015e2a:	cmp    esi,ebx
10015e2c:	jbe    0x10015e33
10015e2e:	call   0x10019d18
10015e33:	mov    eax,esi
10015e35:	imul   eax,eax,0x14
10015e38:	add    eax,DWORD PTR [ebp-0x4]
10015e3b:	pop    edi
10015e3c:	pop    esi
10015e3d:	pop    ebx
10015e3e:	leave  
10015e3f:	ret    
10015e40:	mov    eax,DWORD PTR [esp+0x8]
10015e44:	push   esi
10015e45:	mov    esi,DWORD PTR [esp+0x8]
10015e49:	mov    DWORD PTR [esi],eax
10015e4b:	call   0x100199a6
10015e50:	mov    eax,DWORD PTR [eax+0x98]
10015e56:	mov    DWORD PTR [esi+0x4],eax
10015e59:	call   0x100199a6
10015e5e:	mov    DWORD PTR [eax+0x98],esi
10015e64:	mov    eax,esi
10015e66:	pop    esi
10015e67:	ret    
10015e68:	call   0x100199a6
10015e6d:	mov    eax,DWORD PTR [eax+0x98]
10015e73:	jmp    0x10015e80
10015e75:	mov    ecx,DWORD PTR [eax]
10015e77:	cmp    ecx,DWORD PTR [esp+0x4]
10015e7b:	je     0x10015e86
10015e7d:	mov    eax,DWORD PTR [eax+0x4]
10015e80:	test   eax,eax
10015e82:	jne    0x10015e75
10015e84:	inc    eax
10015e85:	ret    
10015e86:	xor    eax,eax
10015e88:	ret    
10015e89:	push   esi
10015e8a:	call   0x100199a6
10015e8f:	mov    esi,DWORD PTR [esp+0x8]
10015e93:	cmp    esi,DWORD PTR [eax+0x98]
10015e99:	jne    0x10015eab
10015e9b:	call   0x100199a6
10015ea0:	mov    ecx,DWORD PTR [esi+0x4]
10015ea3:	mov    DWORD PTR [eax+0x98],ecx
10015ea9:	pop    esi
10015eaa:	ret    
10015eab:	call   0x100199a6
10015eb0:	mov    eax,DWORD PTR [eax+0x98]
10015eb6:	jmp    0x10015ec1
10015eb8:	mov    ecx,DWORD PTR [eax+0x4]
10015ebb:	cmp    esi,ecx
10015ebd:	je     0x10015ecd
10015ebf:	mov    eax,ecx
10015ec1:	cmp    DWORD PTR [eax+0x4],0x0
10015ec5:	jne    0x10015eb8
10015ec7:	pop    esi
10015ec8:	jmp    0x10019d18
10015ecd:	mov    ecx,DWORD PTR [esi+0x4]
10015ed0:	mov    DWORD PTR [eax+0x4],ecx
10015ed3:	pop    esi
10015ed4:	ret    
10015ed5:	push   ebp
10015ed6:	mov    ebp,esp
10015ed8:	sub    esp,0x18
10015edb:	mov    eax,ds:0x100951fc
10015ee0:	and    DWORD PTR [ebp-0x18],0x0
10015ee4:	lea    ecx,[ebp-0x18]
10015ee7:	xor    eax,ecx
10015ee9:	mov    ecx,DWORD PTR [ebp+0x8]
10015eec:	mov    DWORD PTR [ebp-0x10],eax
10015eef:	mov    eax,DWORD PTR [ebp+0xc]
10015ef2:	mov    DWORD PTR [ebp-0xc],eax
10015ef5:	mov    eax,DWORD PTR [ebp+0x14]
10015ef8:	inc    eax
10015ef9:	mov    DWORD PTR [ebp-0x14],0x10015c2b
10015f00:	mov    DWORD PTR [ebp-0x8],ecx
10015f03:	mov    DWORD PTR [ebp-0x4],eax
10015f06:	mov    eax,fs:0x0
10015f0c:	mov    DWORD PTR [ebp-0x18],eax
10015f0f:	lea    eax,[ebp-0x18]
10015f12:	mov    fs:0x0,eax
10015f18:	push   DWORD PTR [ebp+0x18]
10015f1b:	push   ecx
10015f1c:	push   DWORD PTR [ebp+0x10]
10015f1f:	call   0x10019d60
10015f24:	mov    ecx,eax
10015f26:	mov    eax,DWORD PTR [ebp-0x18]
10015f29:	mov    fs:0x0,eax
10015f2f:	mov    eax,ecx
10015f31:	leave  
10015f32:	ret    
10015f33:	push   ecx
10015f34:	push   ebx
10015f35:	push   ebp
10015f36:	push   esi
10015f37:	push   edi
10015f38:	push   DWORD PTR ds:0x10098c10
10015f3e:	call   0x1001978a
10015f43:	push   DWORD PTR ds:0x10098c0c
10015f49:	mov    esi,eax
10015f4b:	mov    DWORD PTR [esp+0x18],esi
10015f4f:	call   0x1001978a
10015f54:	mov    edi,eax
10015f56:	cmp    edi,esi
10015f58:	pop    ecx
10015f59:	pop    ecx
10015f5a:	jb     0x10015fe4
10015f60:	mov    ebx,edi
10015f62:	sub    ebx,esi
10015f64:	lea    ebp,[ebx+0x4]
10015f67:	cmp    ebp,0x4
10015f6a:	jb     0x10015fe4
10015f6c:	push   esi
10015f6d:	call   0x10019dac
10015f72:	mov    esi,eax
10015f74:	cmp    esi,ebp
10015f76:	pop    ecx
10015f77:	jae    0x10015fc3
10015f79:	mov    eax,0x800
10015f7e:	cmp    esi,eax
10015f80:	jae    0x10015f84
10015f82:	mov    eax,esi
10015f84:	add    eax,esi
10015f86:	cmp    eax,esi
10015f88:	jb     0x10015f9a
10015f8a:	push   eax
10015f8b:	push   DWORD PTR [esp+0x14]
10015f8f:	call   0x100187bd
10015f94:	test   eax,eax
10015f96:	pop    ecx
10015f97:	pop    ecx
10015f98:	jne    0x10015fb1
10015f9a:	lea    eax,[esi+0x10]
10015f9d:	cmp    eax,esi
10015f9f:	jb     0x10015fe4
10015fa1:	push   eax
10015fa2:	push   DWORD PTR [esp+0x14]
10015fa6:	call   0x100187bd
10015fab:	test   eax,eax
10015fad:	pop    ecx
10015fae:	pop    ecx
10015faf:	je     0x10015fe4
10015fb1:	sar    ebx,0x2
10015fb4:	push   eax
10015fb5:	lea    edi,[eax+ebx*4]
10015fb8:	call   0x10019713
10015fbd:	pop    ecx
10015fbe:	mov    ds:0x10098c10,eax
10015fc3:	push   DWORD PTR [esp+0x18]
10015fc7:	call   0x10019713
10015fcc:	mov    DWORD PTR [edi],eax
10015fce:	add    edi,0x4
10015fd1:	push   edi
10015fd2:	call   0x10019713
10015fd7:	pop    ecx
10015fd8:	mov    ds:0x10098c0c,eax
10015fdd:	mov    eax,DWORD PTR [esp+0x1c]
10015fe1:	pop    ecx
10015fe2:	jmp    0x10015fe6
10015fe4:	xor    eax,eax
10015fe6:	pop    edi
10015fe7:	pop    esi
10015fe8:	pop    ebp
10015fe9:	pop    ebx
10015fea:	pop    ecx
10015feb:	ret    
10015fec:	push   esi
10015fed:	push   0x4
10015fef:	push   0x20
10015ff1:	call   0x10018775
10015ff6:	mov    esi,eax
10015ff8:	push   esi
10015ff9:	call   0x10019713
10015ffe:	add    esp,0xc
10016001:	test   esi,esi
10016003:	mov    ds:0x10098c10,eax
10016008:	mov    ds:0x10098c0c,eax
1001600d:	jne    0x10016014
1001600f:	push   0x18
10016011:	pop    eax
10016012:	pop    esi
10016013:	ret    
10016014:	and    DWORD PTR [esi],0x0
10016017:	xor    eax,eax
10016019:	pop    esi
1001601a:	ret    
1001601b:	push   0xc
1001601d:	push   0x10085640
10016022:	call   0x10017f88
10016027:	call   0x10019eae
1001602c:	and    DWORD PTR [ebp-0x4],0x0
10016030:	push   DWORD PTR [ebp+0x8]
10016033:	call   0x10015f33
10016038:	pop    ecx
10016039:	mov    DWORD PTR [ebp-0x1c],eax
1001603c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10016043:	call   0x10016051
10016048:	mov    eax,DWORD PTR [ebp-0x1c]
1001604b:	call   0x10017fcd
10016050:	ret    
10016051:	call   0x10019eb7
10016056:	ret    
10016057:	push   DWORD PTR [esp+0x4]
1001605b:	call   0x1001601b
10016060:	neg    eax
10016062:	sbb    eax,eax
10016064:	neg    eax
10016066:	pop    ecx
10016067:	dec    eax
10016068:	ret    
10016069:	mov    eax,DWORD PTR [esp+0x4]
1001606d:	mov    ds:0x10096e20,eax
10016072:	ret    
10016073:	push   ebp
10016074:	lea    ebp,[esp-0x2a8]
1001607b:	sub    esp,0x328
10016081:	mov    eax,ds:0x100951fc
10016086:	xor    eax,ebp
10016088:	mov    DWORD PTR [ebp+0x2a4],eax
1001608e:	push   esi
1001608f:	mov    DWORD PTR [ebp+0x88],eax
10016095:	mov    DWORD PTR [ebp+0x84],ecx
1001609b:	mov    DWORD PTR [ebp+0x80],edx
100160a1:	mov    DWORD PTR [ebp+0x7c],ebx
100160a4:	mov    DWORD PTR [ebp+0x78],esi
100160a7:	mov    DWORD PTR [ebp+0x74],edi
100160aa:	data16 mov WORD PTR [ebp+0xa0],ss
100160b1:	data16 mov WORD PTR [ebp+0x94],cs
100160b8:	data16 mov WORD PTR [ebp+0x70],ds
100160bc:	data16 mov WORD PTR [ebp+0x6c],es
100160c0:	data16 mov WORD PTR [ebp+0x68],fs
100160c4:	data16 mov WORD PTR [ebp+0x64],gs
100160c8:	pushf  
100160c9:	pop    DWORD PTR [ebp+0x98]
100160cf:	mov    esi,DWORD PTR [ebp+0x2ac]
100160d5:	lea    eax,[ebp+0x2ac]
100160db:	mov    DWORD PTR [ebp+0x9c],eax
100160e1:	mov    DWORD PTR [ebp-0x28],0x10001
100160e8:	mov    DWORD PTR [ebp+0x90],esi
100160ee:	mov    eax,DWORD PTR [eax-0x4]
100160f1:	push   0x50
100160f3:	mov    DWORD PTR [ebp+0x8c],eax
100160f9:	lea    eax,[ebp-0x80]
100160fc:	push   0x0
100160fe:	push   eax
100160ff:	call   0x10016580
10016104:	lea    eax,[ebp-0x80]
10016107:	mov    DWORD PTR [ebp-0x30],eax
1001610a:	lea    eax,[ebp-0x28]
1001610d:	add    esp,0xc
10016110:	mov    DWORD PTR [ebp-0x80],0xc000000d
10016117:	mov    DWORD PTR [ebp-0x74],esi
1001611a:	mov    DWORD PTR [ebp-0x2c],eax
1001611d:	call   DWORD PTR ds:0x10034210
10016123:	push   0x0
10016125:	mov    esi,eax
10016127:	call   DWORD PTR ds:0x1003420c
1001612d:	lea    eax,[ebp-0x30]
10016130:	push   eax
10016131:	call   DWORD PTR ds:0x10034208
10016137:	test   eax,eax
10016139:	jne    0x10016147
1001613b:	test   esi,esi
1001613d:	jne    0x10016147
1001613f:	push   0x2
10016141:	call   0x1001a14b
10016146:	pop    ecx
10016147:	push   0xc000000d
1001614c:	call   DWORD PTR ds:0x100340d0
10016152:	push   eax
10016153:	call   DWORD PTR ds:0x10034120
10016159:	mov    ecx,DWORD PTR [ebp+0x2a4]
1001615f:	xor    ecx,ebp
10016161:	pop    esi
10016162:	call   0x10015b2b
10016167:	add    ebp,0x2a8
1001616d:	leave  
1001616e:	ret    
1001616f:	push   ebp
10016170:	mov    ebp,esp
10016172:	push   DWORD PTR ds:0x10096e20
10016178:	call   0x1001978a
1001617d:	test   eax,eax
1001617f:	pop    ecx
10016180:	je     0x10016185
10016182:	pop    ebp
10016183:	jmp    eax
10016185:	push   0x2
10016187:	call   0x1001a14b
1001618c:	pop    ecx
1001618d:	pop    ebp
1001618e:	jmp    0x10016073
10016193:	xor    eax,eax
10016195:	push   eax
10016196:	push   eax
10016197:	push   eax
10016198:	push   eax
10016199:	push   eax
1001619a:	call   0x1001616f
1001619f:	add    esp,0x14
100161a2:	ret    
100161a3:	push   ebp
100161a4:	mov    ebp,esp
100161a6:	push   esi
100161a7:	mov    esi,DWORD PTR [ebp+0x14]
100161aa:	push   edi
100161ab:	xor    edi,edi
100161ad:	cmp    esi,edi
100161af:	jne    0x100161b5
100161b1:	xor    eax,eax
100161b3:	jmp    0x1001621a
100161b5:	cmp    DWORD PTR [ebp+0x8],edi
100161b8:	jne    0x100161d5
100161ba:	call   0x1001a18e
100161bf:	push   0x16
100161c1:	pop    esi
100161c2:	mov    DWORD PTR [eax],esi
100161c4:	push   edi
100161c5:	push   edi
100161c6:	push   edi
100161c7:	push   edi
100161c8:	push   edi
100161c9:	call   0x1001616f
100161ce:	add    esp,0x14
100161d1:	mov    eax,esi
100161d3:	jmp    0x1001621a
100161d5:	cmp    DWORD PTR [ebp+0x10],edi
100161d8:	je     0x100161f0
100161da:	cmp    DWORD PTR [ebp+0xc],esi
100161dd:	jb     0x100161f0
100161df:	push   esi
100161e0:	push   DWORD PTR [ebp+0x10]
100161e3:	push   DWORD PTR [ebp+0x8]
100161e6:	call   0x10016820
100161eb:	add    esp,0xc
100161ee:	jmp    0x100161b1
100161f0:	push   DWORD PTR [ebp+0xc]
100161f3:	push   edi
100161f4:	push   DWORD PTR [ebp+0x8]
100161f7:	call   0x10016580
100161fc:	add    esp,0xc
100161ff:	cmp    DWORD PTR [ebp+0x10],edi
10016202:	je     0x100161ba
10016204:	cmp    DWORD PTR [ebp+0xc],esi
10016207:	jae    0x10016217
10016209:	call   0x1001a18e
1001620e:	push   0x22
10016210:	pop    ecx
10016211:	mov    DWORD PTR [eax],ecx
10016213:	mov    esi,ecx
10016215:	jmp    0x100161c4
10016217:	push   0x16
10016219:	pop    eax
1001621a:	pop    edi
1001621b:	pop    esi
1001621c:	pop    ebp
1001621d:	ret    
1001621e:	push   ebp
1001621f:	mov    ebp,esp
10016221:	sub    esp,0x20
10016224:	mov    eax,DWORD PTR [ebp+0x8]
10016227:	push   esi
10016228:	push   edi
10016229:	push   0x8
1001622b:	pop    ecx
1001622c:	mov    esi,0x1007d5cc
10016231:	lea    edi,[ebp-0x20]
10016234:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10016236:	mov    DWORD PTR [ebp-0x8],eax
10016239:	mov    eax,DWORD PTR [ebp+0xc]
1001623c:	test   eax,eax
1001623e:	pop    edi
1001623f:	mov    DWORD PTR [ebp-0x4],eax
10016242:	pop    esi
10016243:	je     0x10016251
10016245:	test   BYTE PTR [eax],0x8
10016248:	je     0x10016251
1001624a:	mov    DWORD PTR [ebp-0xc],0x1994000
10016251:	lea    eax,[ebp-0xc]
10016254:	push   eax
10016255:	push   DWORD PTR [ebp-0x10]
10016258:	push   DWORD PTR [ebp-0x1c]
1001625b:	push   DWORD PTR [ebp-0x20]
1001625e:	call   DWORD PTR ds:0x100341f0
10016264:	leave  
10016265:	ret    0x8
10016268:	push   ecx
10016269:	mov    DWORD PTR [ecx],0x1007d5f0
1001626f:	call   0x1001a1d2
10016274:	pop    ecx
10016275:	ret    
10016276:	push   esi
10016277:	mov    esi,ecx
10016279:	call   0x10016268
1001627e:	test   BYTE PTR [esp+0x8],0x1
10016283:	je     0x1001628c
10016285:	push   esi
10016286:	call   0x10015b26
1001628b:	pop    ecx
1001628c:	mov    eax,esi
1001628e:	pop    esi
1001628f:	ret    0x4
10016292:	mov    eax,DWORD PTR [esp+0x4]
10016296:	add    ecx,0x9
10016299:	push   ecx
1001629a:	add    eax,0x9
1001629d:	push   eax
1001629e:	call   0x1001a250
100162a3:	neg    eax
100162a5:	pop    ecx
100162a6:	sbb    eax,eax
100162a8:	pop    ecx
100162a9:	inc    eax
100162aa:	ret    0x4
100162ad:	mov    eax,ecx
100162af:	and    DWORD PTR [eax+0x4],0x0
100162b3:	and    DWORD PTR [eax+0x8],0x0
100162b7:	mov    DWORD PTR [eax],0x1007d5f8
100162bd:	ret    
100162be:	push   ebx
100162bf:	mov    ebx,DWORD PTR [esp+0x8]
100162c3:	push   esi
100162c4:	push   edi
100162c5:	mov    edi,ecx
100162c7:	mov    DWORD PTR [edi],0x1007d5f8
100162cd:	mov    eax,DWORD PTR [ebx]
100162cf:	test   eax,eax
100162d1:	je     0x100162f9
100162d3:	push   eax
100162d4:	call   0x100163c0
100162d9:	mov    esi,eax
100162db:	inc    esi
100162dc:	push   esi
100162dd:	call   0x10016c62
100162e2:	test   eax,eax
100162e4:	pop    ecx
100162e5:	pop    ecx
100162e6:	mov    DWORD PTR [edi+0x4],eax
100162e9:	je     0x100162fd
100162eb:	push   DWORD PTR [ebx]
100162ed:	push   esi
100162ee:	push   eax
100162ef:	call   0x1001a2d8
100162f4:	add    esp,0xc
100162f7:	jmp    0x100162fd
100162f9:	and    DWORD PTR [edi+0x4],0x0
100162fd:	mov    DWORD PTR [edi+0x8],0x1
10016304:	mov    eax,edi
10016306:	pop    edi
10016307:	pop    esi
10016308:	pop    ebx
10016309:	ret    0x4
1001630c:	mov    eax,ecx
1001630e:	mov    ecx,DWORD PTR [esp+0x4]
10016312:	mov    DWORD PTR [eax],0x1007d5f8
10016318:	mov    ecx,DWORD PTR [ecx]
1001631a:	and    DWORD PTR [eax+0x8],0x0
1001631e:	mov    DWORD PTR [eax+0x4],ecx
10016321:	ret    0x8
10016324:	push   ebx
10016325:	mov    ebx,DWORD PTR [esp+0x8]
10016329:	push   esi
1001632a:	mov    esi,ecx
1001632c:	mov    DWORD PTR [esi],0x1007d5f8
10016332:	mov    eax,DWORD PTR [ebx+0x8]
10016335:	mov    DWORD PTR [esi+0x8],eax
10016338:	test   eax,eax
1001633a:	mov    eax,DWORD PTR [ebx+0x4]
1001633d:	push   edi
1001633e:	je     0x10016371
10016340:	test   eax,eax
10016342:	je     0x1001636b
10016344:	push   eax
10016345:	call   0x100163c0
1001634a:	mov    edi,eax
1001634c:	inc    edi
1001634d:	push   edi
1001634e:	call   0x10016c62
10016353:	test   eax,eax
10016355:	pop    ecx
10016356:	pop    ecx
10016357:	mov    DWORD PTR [esi+0x4],eax
1001635a:	je     0x10016374
1001635c:	push   DWORD PTR [ebx+0x4]
1001635f:	push   edi
10016360:	push   eax
10016361:	call   0x1001a2d8
10016366:	add    esp,0xc
10016369:	jmp    0x10016374
1001636b:	and    DWORD PTR [esi+0x4],0x0
1001636f:	jmp    0x10016374
10016371:	mov    DWORD PTR [esi+0x4],eax
10016374:	pop    edi
10016375:	mov    eax,esi
10016377:	pop    esi
10016378:	pop    ebx
10016379:	ret    0x4
1001637c:	cmp    DWORD PTR [ecx+0x8],0x0
10016380:	mov    DWORD PTR [ecx],0x1007d5f8
10016386:	je     0x10016391
10016388:	push   DWORD PTR [ecx+0x4]
1001638b:	call   0x10016b85
10016390:	pop    ecx
10016391:	ret    
10016392:	mov    eax,DWORD PTR [ecx+0x4]
10016395:	test   eax,eax
10016397:	jne    0x1001639e
10016399:	mov    eax,0x1007d600
1001639e:	ret    
1001639f:	push   esi
100163a0:	mov    esi,ecx
100163a2:	call   0x1001637c
100163a7:	test   BYTE PTR [esp+0x8],0x1
100163ac:	je     0x100163b5
100163ae:	push   esi
100163af:	call   0x10015b26
100163b4:	pop    ecx
100163b5:	mov    eax,esi
100163b7:	pop    esi
100163b8:	ret    0x4
100163bb:	int3   
100163bc:	int3   
100163bd:	int3   
100163be:	int3   
100163bf:	int3   
100163c0:	mov    ecx,DWORD PTR [esp+0x4]
100163c4:	test   ecx,0x3
100163ca:	je     0x100163f0
100163cc:	mov    al,BYTE PTR [ecx]
100163ce:	add    ecx,0x1
100163d1:	test   al,al
100163d3:	je     0x10016423
100163d5:	test   ecx,0x3
100163db:	jne    0x100163cc
100163dd:	add    eax,0x0
100163e2:	lea    esp,[esp+0x0]
100163e9:	lea    esp,[esp+0x0]
100163f0:	mov    eax,DWORD PTR [ecx]
100163f2:	mov    edx,0x7efefeff
100163f7:	add    edx,eax
100163f9:	xor    eax,0xffffffff
100163fc:	xor    eax,edx
100163fe:	add    ecx,0x4
10016401:	test   eax,0x81010100
10016406:	je     0x100163f0
10016408:	mov    eax,DWORD PTR [ecx-0x4]
1001640b:	test   al,al
1001640d:	je     0x10016441
1001640f:	test   ah,ah
10016411:	je     0x10016437
10016413:	test   eax,0xff0000
10016418:	je     0x1001642d
1001641a:	test   eax,0xff000000
1001641f:	je     0x10016423
10016421:	jmp    0x100163f0
10016423:	lea    eax,[ecx-0x1]
10016426:	mov    ecx,DWORD PTR [esp+0x4]
1001642a:	sub    eax,ecx
1001642c:	ret    
1001642d:	lea    eax,[ecx-0x2]
10016430:	mov    ecx,DWORD PTR [esp+0x4]
10016434:	sub    eax,ecx
10016436:	ret    
10016437:	lea    eax,[ecx-0x3]
1001643a:	mov    ecx,DWORD PTR [esp+0x4]
1001643e:	sub    eax,ecx
10016440:	ret    
10016441:	lea    eax,[ecx-0x4]
10016444:	mov    ecx,DWORD PTR [esp+0x4]
10016448:	sub    eax,ecx
1001644a:	ret    
1001644b:	push   esi
1001644c:	push   0x1
1001644e:	push   0x10095230
10016453:	mov    esi,ecx
10016455:	call   0x1001630c
1001645a:	mov    DWORD PTR [esi],0x1003450c
10016460:	mov    eax,esi
10016462:	pop    esi
10016463:	ret    
10016464:	push   ebp
10016465:	mov    ebp,esp
10016467:	sub    esp,0xc
1001646a:	jmp    0x10016479
1001646c:	push   DWORD PTR [ebp+0x8]
1001646f:	call   0x1001a347
10016474:	test   eax,eax
10016476:	pop    ecx
10016477:	je     0x10016488
10016479:	push   DWORD PTR [ebp+0x8]
1001647c:	call   0x10016c62
10016481:	test   eax,eax
10016483:	pop    ecx
10016484:	je     0x1001646c
10016486:	leave  
10016487:	ret    
10016488:	test   BYTE PTR ds:0x10096e30,0x1
1001648f:	mov    esi,0x10096e24
10016494:	jne    0x100164af
10016496:	or     DWORD PTR ds:0x10096e30,0x1
1001649d:	mov    ecx,esi
1001649f:	call   0x1001644b
100164a4:	push   0x10033c00
100164a9:	call   0x10016057
100164ae:	pop    ecx
100164af:	push   esi
100164b0:	lea    ecx,[ebp-0xc]
100164b3:	call   0x10016324
100164b8:	push   0x10085d44
100164bd:	lea    eax,[ebp-0xc]
100164c0:	push   eax
100164c1:	mov    DWORD PTR [ebp-0xc],0x1003450c
100164c8:	call   0x1001621e
100164cd:	int3   
100164ce:	push   ebp
100164cf:	mov    ebp,esp
100164d1:	mov    eax,DWORD PTR [ebp+0x14]
100164d4:	push   esi
100164d5:	push   edi
100164d6:	xor    edi,edi
100164d8:	cmp    eax,edi
100164da:	je     0x10016523
100164dc:	cmp    DWORD PTR [ebp+0x8],edi
100164df:	jne    0x100164fc
100164e1:	call   0x1001a18e
100164e6:	push   0x16
100164e8:	pop    esi
100164e9:	mov    DWORD PTR [eax],esi
100164eb:	push   edi
100164ec:	push   edi
100164ed:	push   edi
100164ee:	push   edi
100164ef:	push   edi
100164f0:	call   0x1001616f
100164f5:	add    esp,0x14
100164f8:	mov    eax,esi
100164fa:	jmp    0x10016525
100164fc:	cmp    DWORD PTR [ebp+0x10],edi
100164ff:	je     0x100164e1
10016501:	cmp    DWORD PTR [ebp+0xc],eax
10016504:	jae    0x10016514
10016506:	call   0x1001a18e
1001650b:	push   0x22
1001650d:	pop    ecx
1001650e:	mov    DWORD PTR [eax],ecx
10016510:	mov    esi,ecx
10016512:	jmp    0x100164eb
10016514:	push   eax
10016515:	push   DWORD PTR [ebp+0x10]
10016518:	push   DWORD PTR [ebp+0x8]
1001651b:	call   0x1001a370
10016520:	add    esp,0xc
10016523:	xor    eax,eax
10016525:	pop    edi
10016526:	pop    esi
10016527:	pop    ebp
10016528:	ret    
10016529:	push   0xa
1001652b:	push   0x0
1001652d:	push   DWORD PTR [esp+0xc]
10016531:	call   0x1001a8cc
10016536:	add    esp,0xc
10016539:	ret    
1001653a:	jmp    0x10016529
1001653f:	push   0xa
10016541:	push   0x0
10016543:	push   DWORD PTR [esp+0xc]
10016547:	call   0x1001aba5
1001654c:	add    esp,0xc
1001654f:	ret    
10016550:	push   ecx
10016551:	lea    ecx,[esp+0x4]
10016555:	sub    ecx,eax
10016557:	sbb    eax,eax
10016559:	not    eax
1001655b:	and    ecx,eax
1001655d:	mov    eax,esp
1001655f:	and    eax,0xfffff000
10016564:	cmp    ecx,eax
10016566:	jb     0x10016572
10016568:	mov    eax,ecx
1001656a:	pop    ecx
1001656b:	xchg   esp,eax
1001656c:	mov    eax,DWORD PTR [eax]
1001656e:	mov    DWORD PTR [esp],eax
10016571:	ret    
10016572:	sub    eax,0x1000
10016577:	test   DWORD PTR [eax],eax
10016579:	jmp    0x10016564
1001657b:	int3   
1001657c:	int3   
1001657d:	int3   
1001657e:	int3   
1001657f:	int3   
10016580:	mov    edx,DWORD PTR [esp+0xc]
10016584:	mov    ecx,DWORD PTR [esp+0x4]
10016588:	test   edx,edx
1001658a:	je     0x100165f5
1001658c:	xor    eax,eax
1001658e:	mov    al,BYTE PTR [esp+0x8]
10016592:	test   al,al
10016594:	jne    0x100165ac
10016596:	cmp    edx,0x100
1001659c:	jb     0x100165ac
1001659e:	cmp    DWORD PTR ds:0x10098c00,0x0
100165a5:	je     0x100165ac
100165a7:	jmp    0x1001ac25
100165ac:	push   edi
100165ad:	mov    edi,ecx
100165af:	cmp    edx,0x4
100165b2:	jb     0x100165e5
100165b4:	neg    ecx
100165b6:	and    ecx,0x3
100165b9:	je     0x100165c7
100165bb:	sub    edx,ecx
100165bd:	mov    BYTE PTR [edi],al
100165bf:	add    edi,0x1
100165c2:	sub    ecx,0x1
100165c5:	jne    0x100165bd
100165c7:	mov    ecx,eax
100165c9:	shl    eax,0x8
100165cc:	add    eax,ecx
100165ce:	mov    ecx,eax
100165d0:	shl    eax,0x10
100165d3:	add    eax,ecx
100165d5:	mov    ecx,edx
100165d7:	and    edx,0x3
100165da:	shr    ecx,0x2
100165dd:	je     0x100165e5
100165df:	rep stos DWORD PTR es:[edi],eax
100165e1:	test   edx,edx
100165e3:	je     0x100165ef
100165e5:	mov    BYTE PTR [edi],al
100165e7:	add    edi,0x1
100165ea:	sub    edx,0x1
100165ed:	jne    0x100165e5
100165ef:	mov    eax,DWORD PTR [esp+0x8]
100165f3:	pop    edi
100165f4:	ret    
100165f5:	mov    eax,DWORD PTR [esp+0x4]
100165f9:	ret    
100165fa:	mov    eax,DWORD PTR [esp+0x4]
100165fe:	test   eax,eax
10016600:	push   esi
10016601:	mov    esi,ecx
10016603:	mov    BYTE PTR [esi+0xc],0x0
10016607:	jne    0x1001666c
10016609:	call   0x100199a6
1001660e:	mov    DWORD PTR [esi+0x8],eax
10016611:	mov    ecx,DWORD PTR [eax+0x6c]
10016614:	mov    DWORD PTR [esi],ecx
10016616:	mov    ecx,DWORD PTR [eax+0x68]
10016619:	mov    DWORD PTR [esi+0x4],ecx
1001661c:	mov    ecx,DWORD PTR [esi]
1001661e:	cmp    ecx,DWORD PTR ds:0x10095b08
10016624:	je     0x10016638
10016626:	mov    ecx,DWORD PTR ds:0x10095a20
1001662c:	test   DWORD PTR [eax+0x70],ecx
1001662f:	jne    0x10016638
10016631:	call   0x100182da
10016636:	mov    DWORD PTR [esi],eax
10016638:	mov    eax,DWORD PTR [esi+0x4]
1001663b:	cmp    eax,DWORD PTR ds:0x10095928
10016641:	je     0x10016659
10016643:	mov    eax,DWORD PTR [esi+0x8]
10016646:	mov    ecx,DWORD PTR ds:0x10095a20
1001664c:	test   DWORD PTR [eax+0x70],ecx
1001664f:	jne    0x10016659
10016651:	call   0x1001aed6
10016656:	mov    DWORD PTR [esi+0x4],eax
10016659:	mov    eax,DWORD PTR [esi+0x8]
1001665c:	test   BYTE PTR [eax+0x70],0x2
10016660:	jne    0x10016676
10016662:	or     DWORD PTR [eax+0x70],0x2
10016666:	mov    BYTE PTR [esi+0xc],0x1
1001666a:	jmp    0x10016676
1001666c:	mov    ecx,DWORD PTR [eax]
1001666e:	mov    DWORD PTR [esi],ecx
10016670:	mov    eax,DWORD PTR [eax+0x4]
10016673:	mov    DWORD PTR [esi+0x4],eax
10016676:	mov    eax,esi
10016678:	pop    esi
10016679:	ret    0x4
1001667c:	push   ebp
1001667d:	mov    ebp,esp
1001667f:	sub    esp,0x10
10016682:	push   ebx
10016683:	push   esi
10016684:	push   DWORD PTR [ebp+0x10]
10016687:	lea    ecx,[ebp-0x10]
1001668a:	call   0x100165fa
1001668f:	mov    ebx,DWORD PTR [ebp+0x8]
10016692:	xor    esi,esi
10016694:	cmp    ebx,esi
10016696:	jne    0x100166c7
10016698:	call   0x1001a18e
1001669d:	push   esi
1001669e:	push   esi
1001669f:	push   esi
100166a0:	push   esi
100166a1:	push   esi
100166a2:	mov    DWORD PTR [eax],0x16
100166a8:	call   0x1001616f
100166ad:	add    esp,0x14
100166b0:	cmp    BYTE PTR [ebp-0x4],0x0
100166b4:	je     0x100166bd
100166b6:	mov    eax,DWORD PTR [ebp-0x8]
100166b9:	and    DWORD PTR [eax+0x70],0xfffffffd
100166bd:	mov    eax,0x7fffffff
100166c2:	jmp    0x10016787
100166c7:	push   edi
100166c8:	mov    edi,DWORD PTR [ebp+0xc]
100166cb:	cmp    edi,esi
100166cd:	jne    0x100166fe
100166cf:	call   0x1001a18e
100166d4:	push   esi
100166d5:	push   esi
100166d6:	push   esi
100166d7:	push   esi
100166d8:	push   esi
100166d9:	mov    DWORD PTR [eax],0x16
100166df:	call   0x1001616f
100166e4:	add    esp,0x14
100166e7:	cmp    BYTE PTR [ebp-0x4],0x0
100166eb:	je     0x100166f4
100166ed:	mov    eax,DWORD PTR [ebp-0x8]
100166f0:	and    DWORD PTR [eax+0x70],0xfffffffd
100166f4:	mov    eax,0x7fffffff
100166f9:	jmp    0x10016786
100166fe:	mov    eax,DWORD PTR [ebp-0x10]
10016701:	cmp    DWORD PTR [eax+0x14],esi
10016704:	jne    0x10016740
10016706:	movzx  eax,WORD PTR [ebx]
10016709:	cmp    ax,0x41
1001670d:	jb     0x10016718
1001670f:	cmp    ax,0x5a
10016713:	ja     0x10016718
10016715:	add    eax,0x20
10016718:	movzx  esi,ax
1001671b:	movzx  eax,WORD PTR [edi]
1001671e:	cmp    ax,0x41
10016722:	jb     0x1001672d
10016724:	cmp    ax,0x5a
10016728:	ja     0x1001672d
1001672a:	add    eax,0x20
1001672d:	inc    ebx
1001672e:	inc    ebx
1001672f:	inc    edi
10016730:	inc    edi
10016731:	test   si,si
10016734:	movzx  eax,ax
10016737:	je     0x10016771
10016739:	cmp    si,ax
1001673c:	je     0x10016706
1001673e:	jmp    0x10016771
10016740:	movzx  eax,WORD PTR [ebx]
10016743:	lea    ecx,[ebp-0x10]
10016746:	push   ecx
10016747:	push   eax
10016748:	call   0x1001b385
1001674d:	movzx  esi,ax
10016750:	movzx  eax,WORD PTR [edi]
10016753:	lea    ecx,[ebp-0x10]
10016756:	push   ecx
10016757:	inc    ebx
10016758:	push   eax
10016759:	inc    ebx
1001675a:	call   0x1001b385
1001675f:	add    esp,0x10
10016762:	inc    edi
10016763:	inc    edi
10016764:	test   si,si
10016767:	movzx  eax,ax
1001676a:	je     0x10016771
1001676c:	cmp    si,ax
1001676f:	je     0x10016740
10016771:	movzx  ecx,ax
10016774:	movzx  eax,si
10016777:	sub    eax,ecx
10016779:	cmp    BYTE PTR [ebp-0x4],0x0
1001677d:	je     0x10016786
1001677f:	mov    ecx,DWORD PTR [ebp-0x8]
10016782:	and    DWORD PTR [ecx+0x70],0xfffffffd
10016786:	pop    edi
10016787:	pop    esi
10016788:	pop    ebx
10016789:	leave  
1001678a:	ret    
1001678b:	push   esi
1001678c:	xor    esi,esi
1001678e:	cmp    DWORD PTR ds:0x10096e48,esi
10016794:	push   edi
10016795:	jne    0x10016808
10016797:	mov    edi,DWORD PTR [esp+0xc]
1001679b:	cmp    edi,esi
1001679d:	jne    0x100167be
1001679f:	call   0x1001a18e
100167a4:	push   esi
100167a5:	push   esi
100167a6:	push   esi
100167a7:	push   esi
100167a8:	push   esi
100167a9:	mov    DWORD PTR [eax],0x16
100167af:	call   0x1001616f
100167b4:	add    esp,0x14
100167b7:	mov    eax,0x7fffffff
100167bc:	jmp    0x10016819
100167be:	mov    edx,DWORD PTR [esp+0x10]
100167c2:	cmp    edx,esi
100167c4:	je     0x1001679f
100167c6:	movzx  eax,WORD PTR [edi]
100167c9:	cmp    ax,0x41
100167cd:	jb     0x100167d8
100167cf:	cmp    ax,0x5a
100167d3:	ja     0x100167d8
100167d5:	add    eax,0x20
100167d8:	movzx  ecx,ax
100167db:	movzx  eax,WORD PTR [edx]
100167de:	cmp    ax,0x41
100167e2:	jb     0x100167ed
100167e4:	cmp    ax,0x5a
100167e8:	ja     0x100167ed
100167ea:	add    eax,0x20
100167ed:	inc    edi
100167ee:	inc    edi
100167ef:	inc    edx
100167f0:	inc    edx
100167f1:	cmp    cx,si
100167f4:	movzx  eax,ax
100167f7:	je     0x100167fe
100167f9:	cmp    cx,ax
100167fc:	je     0x100167c6
100167fe:	movzx  edx,ax
10016801:	movzx  eax,cx
10016804:	sub    eax,edx
10016806:	jmp    0x10016819
10016808:	push   esi
10016809:	push   DWORD PTR [esp+0x14]
1001680d:	push   DWORD PTR [esp+0x14]
10016811:	call   0x1001667c
10016816:	add    esp,0xc
10016819:	pop    edi
1001681a:	pop    esi
1001681b:	ret    
1001681c:	int3   
1001681d:	int3   
1001681e:	int3   
1001681f:	int3   
10016820:	push   ebp
10016821:	mov    ebp,esp
10016823:	push   edi
10016824:	push   esi
10016825:	mov    esi,DWORD PTR [ebp+0xc]
10016828:	mov    ecx,DWORD PTR [ebp+0x10]
1001682b:	mov    edi,DWORD PTR [ebp+0x8]
1001682e:	mov    eax,ecx
10016830:	mov    edx,ecx
10016832:	add    eax,esi
10016834:	cmp    edi,esi
10016836:	jbe    0x10016840
10016838:	cmp    edi,eax
1001683a:	jb     0x100169e4
10016840:	cmp    ecx,0x100
10016846:	jb     0x10016867
10016848:	cmp    DWORD PTR ds:0x10098c00,0x0
1001684f:	je     0x10016867
10016851:	push   edi
10016852:	push   esi
10016853:	and    edi,0xf
10016856:	and    esi,0xf
10016859:	cmp    edi,esi
1001685b:	pop    esi
1001685c:	pop    edi
1001685d:	jne    0x10016867
1001685f:	pop    esi
10016860:	pop    edi
10016861:	pop    ebp
10016862:	jmp    0x1001b4b9
10016867:	test   edi,0x3
1001686d:	jne    0x10016884
1001686f:	shr    ecx,0x2
10016872:	and    edx,0x3
10016875:	cmp    ecx,0x8
10016878:	jb     0x100168a4
1001687a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001687c:	jmp    DWORD PTR [edx*4+0x10016994]
10016883:	nop
10016884:	mov    eax,edi
10016886:	mov    edx,0x3
1001688b:	sub    ecx,0x4
1001688e:	jb     0x1001689c
10016890:	and    eax,0x3
10016893:	add    ecx,eax
10016895:	jmp    DWORD PTR [eax*4+0x100168a8]
1001689c:	jmp    DWORD PTR [ecx*4+0x100169a4]
100168a3:	nop
100168a4:	jmp    DWORD PTR [ecx*4+0x10016928]
100168ab:	nop
100168ac:	mov    eax,0xe4100168
100168b1:	push   0x69081001
100168b6:	add    DWORD PTR [eax],edx
100168b8:	and    edx,ecx
100168ba:	mov    al,BYTE PTR [esi]
100168bc:	mov    BYTE PTR [edi],al
100168be:	mov    al,BYTE PTR [esi+0x1]
100168c1:	mov    BYTE PTR [edi+0x1],al
100168c4:	mov    al,BYTE PTR [esi+0x2]
100168c7:	shr    ecx,0x2
100168ca:	mov    BYTE PTR [edi+0x2],al
100168cd:	add    esi,0x3
100168d0:	add    edi,0x3
100168d3:	cmp    ecx,0x8
100168d6:	jb     0x100168a4
100168d8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100168da:	jmp    DWORD PTR [edx*4+0x10016994]
100168e1:	lea    ecx,[ecx+0x0]
100168e4:	and    edx,ecx
100168e6:	mov    al,BYTE PTR [esi]
100168e8:	mov    BYTE PTR [edi],al
100168ea:	mov    al,BYTE PTR [esi+0x1]
100168ed:	shr    ecx,0x2
100168f0:	mov    BYTE PTR [edi+0x1],al
100168f3:	add    esi,0x2
100168f6:	add    edi,0x2
100168f9:	cmp    ecx,0x8
100168fc:	jb     0x100168a4
100168fe:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10016900:	jmp    DWORD PTR [edx*4+0x10016994]
10016907:	nop
10016908:	and    edx,ecx
1001690a:	mov    al,BYTE PTR [esi]
1001690c:	mov    BYTE PTR [edi],al
1001690e:	add    esi,0x1
10016911:	shr    ecx,0x2
10016914:	add    edi,0x1
10016917:	cmp    ecx,0x8
1001691a:	jb     0x100168a4
1001691c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001691e:	jmp    DWORD PTR [edx*4+0x10016994]
10016925:	lea    ecx,[ecx+0x0]
10016928:	mov    ebp,DWORD PTR [ecx+0x1]
1001692b:	adc    BYTE PTR [eax+0x69],bh
1001692e:	add    DWORD PTR [eax],edx
10016930:	jo     0x1001699b
10016932:	add    DWORD PTR [eax],edx
10016934:	push   0x60100169
10016939:	imul   eax,DWORD PTR [ecx],0x1695810
1001693f:	adc    BYTE PTR [eax+0x69],dl
10016942:	add    DWORD PTR [eax],edx
10016944:	dec    eax
10016945:	imul   eax,DWORD PTR [ecx],0x8e448b10
1001694b:	in     al,0x89
1001694d:	inc    esp
1001694e:	(bad)  
1001694f:	in     al,0x8b
10016951:	inc    esp
10016952:	mov    gs,eax
10016954:	mov    DWORD PTR [edi+ecx*4-0x18],eax
10016958:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
1001695c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
10016960:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
10016964:	mov    DWORD PTR [edi+ecx*4-0x10],eax
10016968:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
1001696c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
10016970:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
10016974:	mov    DWORD PTR [edi+ecx*4-0x8],eax
10016978:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
1001697c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
10016980:	lea    eax,[ecx*4+0x0]
10016987:	add    esi,eax
10016989:	add    edi,eax
1001698b:	jmp    DWORD PTR [edx*4+0x10016994]
10016992:	mov    edi,edi
10016994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10016995:	imul   eax,DWORD PTR [ecx],0x169ac10
1001699b:	adc    BYTE PTR [eax-0x33effe97],bh
100169a1:	imul   eax,DWORD PTR [ecx],0x8458b10
100169a7:	pop    esi
100169a8:	pop    edi
100169a9:	leave  
100169aa:	ret    
100169ab:	nop
100169ac:	mov    al,BYTE PTR [esi]
100169ae:	mov    BYTE PTR [edi],al
100169b0:	mov    eax,DWORD PTR [ebp+0x8]
100169b3:	pop    esi
100169b4:	pop    edi
100169b5:	leave  
100169b6:	ret    
100169b7:	nop
100169b8:	mov    al,BYTE PTR [esi]
100169ba:	mov    BYTE PTR [edi],al
100169bc:	mov    al,BYTE PTR [esi+0x1]
100169bf:	mov    BYTE PTR [edi+0x1],al
100169c2:	mov    eax,DWORD PTR [ebp+0x8]
100169c5:	pop    esi
100169c6:	pop    edi
100169c7:	leave  
100169c8:	ret    
100169c9:	lea    ecx,[ecx+0x0]
100169cc:	mov    al,BYTE PTR [esi]
100169ce:	mov    BYTE PTR [edi],al
100169d0:	mov    al,BYTE PTR [esi+0x1]
100169d3:	mov    BYTE PTR [edi+0x1],al
100169d6:	mov    al,BYTE PTR [esi+0x2]
100169d9:	mov    BYTE PTR [edi+0x2],al
100169dc:	mov    eax,DWORD PTR [ebp+0x8]
100169df:	pop    esi
100169e0:	pop    edi
100169e1:	leave  
100169e2:	ret    
100169e3:	nop
100169e4:	lea    esi,[ecx+esi*1-0x4]
100169e8:	lea    edi,[ecx+edi*1-0x4]
100169ec:	test   edi,0x3
100169f2:	jne    0x10016a18
100169f4:	shr    ecx,0x2
100169f7:	and    edx,0x3
100169fa:	cmp    ecx,0x8
100169fd:	jb     0x10016a0c
100169ff:	std    
10016a00:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10016a02:	cld    
10016a03:	jmp    DWORD PTR [edx*4+0x10016b30]
10016a0a:	mov    edi,edi
10016a0c:	neg    ecx
10016a0e:	jmp    DWORD PTR [ecx*4+0x10016ae0]
10016a15:	lea    ecx,[ecx+0x0]
10016a18:	mov    eax,edi
10016a1a:	mov    edx,0x3
10016a1f:	cmp    ecx,0x4
10016a22:	jb     0x10016a30
10016a24:	and    eax,0x3
10016a27:	sub    ecx,eax
10016a29:	jmp    DWORD PTR [eax*4+0x10016a34]
10016a30:	jmp    DWORD PTR [ecx*4+0x10016b30]
10016a37:	nop
10016a38:	inc    esp
10016a39:	push   0x1
10016a3b:	adc    BYTE PTR [eax+0x6a],ch
10016a3e:	add    DWORD PTR [eax],edx
10016a40:	nop
10016a41:	push   0x1
10016a43:	adc    BYTE PTR [edx-0x2edcfcba],cl
10016a49:	mov    BYTE PTR [edi+0x3],al
10016a4c:	sub    esi,0x1
10016a4f:	shr    ecx,0x2
10016a52:	sub    edi,0x1
10016a55:	cmp    ecx,0x8
10016a58:	jb     0x10016a0c
10016a5a:	std    
10016a5b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10016a5d:	cld    
10016a5e:	jmp    DWORD PTR [edx*4+0x10016b30]
10016a65:	lea    ecx,[ecx+0x0]
10016a68:	mov    al,BYTE PTR [esi+0x3]
10016a6b:	and    edx,ecx
10016a6d:	mov    BYTE PTR [edi+0x3],al
10016a70:	mov    al,BYTE PTR [esi+0x2]
10016a73:	shr    ecx,0x2
10016a76:	mov    BYTE PTR [edi+0x2],al
10016a79:	sub    esi,0x2
10016a7c:	sub    edi,0x2
10016a7f:	cmp    ecx,0x8
10016a82:	jb     0x10016a0c
10016a84:	std    
10016a85:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10016a87:	cld    
10016a88:	jmp    DWORD PTR [edx*4+0x10016b30]
10016a8f:	nop
10016a90:	mov    al,BYTE PTR [esi+0x3]
10016a93:	and    edx,ecx
10016a95:	mov    BYTE PTR [edi+0x3],al
10016a98:	mov    al,BYTE PTR [esi+0x2]
10016a9b:	mov    BYTE PTR [edi+0x2],al
10016a9e:	mov    al,BYTE PTR [esi+0x1]
10016aa1:	shr    ecx,0x2
10016aa4:	mov    BYTE PTR [edi+0x1],al
10016aa7:	sub    esi,0x3
10016aaa:	sub    edi,0x3
10016aad:	cmp    ecx,0x8
10016ab0:	jb     0x10016a0c
10016ab6:	std    
10016ab7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10016ab9:	cld    
10016aba:	jmp    DWORD PTR [edx*4+0x10016b30]
10016ac1:	lea    ecx,[ecx+0x0]
10016ac4:	in     al,0x6a
10016ac6:	add    DWORD PTR [eax],edx
10016ac8:	in     al,dx
10016ac9:	push   0x1
10016acb:	adc    ah,dh
10016acd:	push   0x1
10016acf:	adc    ah,bh
10016ad1:	push   0x1
10016ad3:	adc    BYTE PTR [ebx+ebp*2],al
10016ad6:	add    DWORD PTR [eax],edx
10016ad8:	or     al,0x6b
10016ada:	add    DWORD PTR [eax],edx
10016adc:	adc    al,0x6b
10016ade:	add    DWORD PTR [eax],edx
10016ae0:	daa    
10016ae1:	imul   eax,DWORD PTR [ecx],0x10
10016ae4:	mov    eax,DWORD PTR [esi+ecx*4+0x1c]
10016ae8:	mov    DWORD PTR [edi+ecx*4+0x1c],eax
10016aec:	mov    eax,DWORD PTR [esi+ecx*4+0x18]
10016af0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
10016af4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
10016af8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
10016afc:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
10016b00:	mov    DWORD PTR [edi+ecx*4+0x10],eax
10016b04:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
10016b08:	mov    DWORD PTR [edi+ecx*4+0xc],eax
10016b0c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
10016b10:	mov    DWORD PTR [edi+ecx*4+0x8],eax
10016b14:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
10016b18:	mov    DWORD PTR [edi+ecx*4+0x4],eax
10016b1c:	lea    eax,[ecx*4+0x0]
10016b23:	add    esi,eax
10016b25:	add    edi,eax
10016b27:	jmp    DWORD PTR [edx*4+0x10016b30]
10016b2e:	mov    edi,edi
10016b30:	inc    eax
10016b31:	imul   eax,DWORD PTR [ecx],0x10
10016b34:	dec    eax
10016b35:	imul   eax,DWORD PTR [ecx],0x10
10016b38:	pop    eax
10016b39:	imul   eax,DWORD PTR [ecx],0x10
10016b3c:	ins    BYTE PTR es:[edi],dx
10016b3d:	imul   eax,DWORD PTR [ecx],0x10
10016b40:	mov    eax,DWORD PTR [ebp+0x8]
10016b43:	pop    esi
10016b44:	pop    edi
10016b45:	leave  
10016b46:	ret    
10016b47:	nop
10016b48:	mov    al,BYTE PTR [esi+0x3]
10016b4b:	mov    BYTE PTR [edi+0x3],al
10016b4e:	mov    eax,DWORD PTR [ebp+0x8]
10016b51:	pop    esi
10016b52:	pop    edi
10016b53:	leave  
10016b54:	ret    
10016b55:	lea    ecx,[ecx+0x0]
10016b58:	mov    al,BYTE PTR [esi+0x3]
10016b5b:	mov    BYTE PTR [edi+0x3],al
10016b5e:	mov    al,BYTE PTR [esi+0x2]
10016b61:	mov    BYTE PTR [edi+0x2],al
10016b64:	mov    eax,DWORD PTR [ebp+0x8]
10016b67:	pop    esi
10016b68:	pop    edi
10016b69:	leave  
10016b6a:	ret    
10016b6b:	nop
10016b6c:	mov    al,BYTE PTR [esi+0x3]
10016b6f:	mov    BYTE PTR [edi+0x3],al
10016b72:	mov    al,BYTE PTR [esi+0x2]
10016b75:	mov    BYTE PTR [edi+0x2],al
10016b78:	mov    al,BYTE PTR [esi+0x1]
10016b7b:	mov    BYTE PTR [edi+0x1],al
10016b7e:	mov    eax,DWORD PTR [ebp+0x8]
10016b81:	pop    esi
10016b82:	pop    edi
10016b83:	leave  
10016b84:	ret    
10016b85:	push   0xc
10016b87:	push   0x10085660
10016b8c:	call   0x10017f88
10016b91:	mov    esi,DWORD PTR [ebp+0x8]
10016b94:	test   esi,esi
10016b96:	je     0x10016c0d
10016b98:	cmp    DWORD PTR ds:0x10098bf8,0x3
10016b9f:	jne    0x10016be4
10016ba1:	push   0x4
10016ba3:	call   0x1001b83b
10016ba8:	pop    ecx
10016ba9:	and    DWORD PTR [ebp-0x4],0x0
10016bad:	push   esi
10016bae:	call   0x1001b8b4
10016bb3:	pop    ecx
10016bb4:	mov    DWORD PTR [ebp-0x1c],eax
10016bb7:	test   eax,eax
10016bb9:	je     0x10016bc4
10016bbb:	push   esi
10016bbc:	push   eax
10016bbd:	call   0x1001b8df
10016bc2:	pop    ecx
10016bc3:	pop    ecx
10016bc4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10016bcb:	call   0x10016bdb
10016bd0:	cmp    DWORD PTR [ebp-0x1c],0x0
10016bd4:	jne    0x10016c0d
10016bd6:	push   DWORD PTR [ebp+0x8]
10016bd9:	jmp    0x10016be5
10016bdb:	push   0x4
10016bdd:	call   0x1001b763
10016be2:	pop    ecx
10016be3:	ret    
10016be4:	push   esi
10016be5:	push   0x0
10016be7:	push   DWORD PTR ds:0x10097220
10016bed:	call   DWORD PTR ds:0x100341e0
10016bf3:	test   eax,eax
10016bf5:	jne    0x10016c0d
10016bf7:	call   0x1001a18e
10016bfc:	mov    esi,eax
10016bfe:	call   DWORD PTR ds:0x1003407c
10016c04:	push   eax
10016c05:	call   0x1001a153
10016c0a:	mov    DWORD PTR [esi],eax
10016c0c:	pop    ecx
10016c0d:	call   0x10017fcd
10016c12:	ret    
10016c13:	push   0xc
10016c15:	push   0x10085680
10016c1a:	call   0x10017f88
10016c1f:	and    DWORD PTR [ebp-0x1c],0x0
10016c23:	mov    esi,DWORD PTR [ebp+0x8]
10016c26:	cmp    esi,DWORD PTR ds:0x10098be8
10016c2c:	ja     0x10016c50
10016c2e:	push   0x4
10016c30:	call   0x1001b83b
10016c35:	pop    ecx
10016c36:	and    DWORD PTR [ebp-0x4],0x0
10016c3a:	push   esi
10016c3b:	call   0x1001c088
10016c40:	pop    ecx
10016c41:	mov    DWORD PTR [ebp-0x1c],eax
10016c44:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10016c4b:	call   0x10016c59
10016c50:	mov    eax,DWORD PTR [ebp-0x1c]
10016c53:	call   0x10017fcd
10016c58:	ret    
10016c59:	push   0x4
10016c5b:	call   0x1001b763
10016c60:	pop    ecx
10016c61:	ret    
10016c62:	push   ebp
10016c63:	mov    ebp,DWORD PTR [esp+0x8]
10016c67:	cmp    ebp,0xffffffe0
10016c6a:	ja     0x10016d0f
10016c70:	push   ebx
10016c71:	mov    ebx,DWORD PTR ds:0x100341dc
10016c77:	push   esi
10016c78:	push   edi
10016c79:	xor    esi,esi
10016c7b:	cmp    DWORD PTR ds:0x10097220,esi
10016c81:	mov    edi,ebp
10016c83:	jne    0x10016c9d
10016c85:	call   0x1001c50b
10016c8a:	push   0x1e
10016c8c:	call   0x1001c36b
10016c91:	push   0xff
10016c96:	call   0x10019e99
10016c9b:	pop    ecx
10016c9c:	pop    ecx
10016c9d:	mov    eax,ds:0x10098bf8
10016ca2:	cmp    eax,0x1
10016ca5:	jne    0x10016cb5
10016ca7:	cmp    ebp,esi
10016ca9:	je     0x10016caf
10016cab:	mov    eax,ebp
10016cad:	jmp    0x10016cb2
10016caf:	xor    eax,eax
10016cb1:	inc    eax
10016cb2:	push   eax
10016cb3:	jmp    0x10016cd3
10016cb5:	cmp    eax,0x3
10016cb8:	jne    0x10016cc5
10016cba:	push   ebp
10016cbb:	call   0x10016c13
10016cc0:	cmp    eax,esi
10016cc2:	pop    ecx
10016cc3:	jne    0x10016cdc
10016cc5:	cmp    ebp,esi
10016cc7:	jne    0x10016ccc
10016cc9:	xor    edi,edi
10016ccb:	inc    edi
10016ccc:	add    edi,0xf
10016ccf:	and    edi,0xfffffff0
10016cd2:	push   edi
10016cd3:	push   esi
10016cd4:	push   DWORD PTR ds:0x10097220
10016cda:	call   ebx
10016cdc:	mov    esi,eax
10016cde:	test   esi,esi
10016ce0:	jne    0x10016d08
10016ce2:	cmp    DWORD PTR ds:0x10097694,eax
10016ce8:	push   0xc
10016cea:	pop    edi
10016ceb:	je     0x10016cfa
10016ced:	push   ebp
10016cee:	call   0x1001a347
10016cf3:	test   eax,eax
10016cf5:	pop    ecx
10016cf6:	jne    0x10016c79
10016cf8:	jmp    0x10016d01
10016cfa:	call   0x1001a18e
10016cff:	mov    DWORD PTR [eax],edi
10016d01:	call   0x1001a18e
10016d06:	mov    DWORD PTR [eax],edi
10016d08:	pop    edi
10016d09:	mov    eax,esi
10016d0b:	pop    esi
10016d0c:	pop    ebx
10016d0d:	pop    ebp
10016d0e:	ret    
10016d0f:	push   ebp
10016d10:	call   0x1001a347
10016d15:	pop    ecx
10016d16:	call   0x1001a18e
10016d1b:	mov    DWORD PTR [eax],0xc
10016d21:	xor    eax,eax
10016d23:	pop    ebp
10016d24:	ret    
10016d25:	push   ebp
10016d26:	mov    ebp,esp
10016d28:	push   ecx
10016d29:	mov    eax,DWORD PTR [ebp+0xc]
10016d2c:	cmp    eax,0x1
10016d2f:	push   ebx
10016d30:	push   esi
10016d31:	push   edi
10016d32:	jne    0x10016e4f
10016d38:	mov    ebx,DWORD PTR ds:0x100341ec
10016d3e:	mov    edi,0x94
10016d43:	push   edi
10016d44:	push   0x0
10016d46:	call   ebx
10016d48:	push   eax
10016d49:	call   DWORD PTR ds:0x100341dc
10016d4f:	mov    esi,eax
10016d51:	test   esi,esi
10016d53:	jne    0x10016d5c
10016d55:	xor    eax,eax
10016d57:	jmp    0x10016ef7
10016d5c:	push   esi
10016d5d:	mov    DWORD PTR [esi],edi
10016d5f:	call   DWORD PTR ds:0x100341d4
10016d65:	test   eax,eax
10016d67:	push   esi
10016d68:	push   0x0
10016d6a:	jne    0x10016d77
10016d6c:	call   ebx
10016d6e:	push   eax
10016d6f:	call   DWORD PTR ds:0x100341e0
10016d75:	jmp    0x10016d55
10016d77:	mov    eax,DWORD PTR [esi+0x10]
10016d7a:	mov    edi,DWORD PTR [esi+0xc]
10016d7d:	mov    DWORD PTR [ebp+0xc],eax
10016d80:	mov    eax,DWORD PTR [esi+0x4]
10016d83:	mov    DWORD PTR [ebp+0x10],eax
10016d86:	mov    eax,DWORD PTR [esi+0x8]
10016d89:	mov    DWORD PTR [ebp-0x4],eax
10016d8c:	and    edi,0x7fff
10016d92:	call   ebx
10016d94:	push   eax
10016d95:	call   DWORD PTR ds:0x100341e0
10016d9b:	mov    eax,DWORD PTR [ebp+0xc]
10016d9e:	cmp    eax,0x2
10016da1:	je     0x10016da9
10016da3:	or     edi,0x8000
10016da9:	mov    ecx,DWORD PTR [ebp-0x4]
10016dac:	mov    ds:0x10097194,eax
10016db1:	mov    eax,DWORD PTR [ebp+0x10]
10016db4:	mov    edx,eax
10016db6:	shl    edx,0x8
10016db9:	add    edx,ecx
10016dbb:	push   0x1
10016dbd:	mov    DWORD PTR ds:0x1009719c,edx
10016dc3:	mov    ds:0x100971a0,eax
10016dc8:	mov    DWORD PTR ds:0x100971a4,ecx
10016dce:	mov    DWORD PTR ds:0x10097198,edi
10016dd4:	call   0x1001b5f7
10016dd9:	test   eax,eax
10016ddb:	pop    ecx
10016ddc:	je     0x10016d55
10016de2:	call   0x10019b48
10016de7:	test   eax,eax
10016de9:	jne    0x10016df5
10016deb:	call   0x1001b651
10016df0:	jmp    0x10016d55
10016df5:	call   0x1001cc45
10016dfa:	call   DWORD PTR ds:0x10034214
10016e00:	mov    ds:0x10098c1c,eax
10016e05:	call   0x1001cb10
10016e0a:	mov    ds:0x10096e38,eax
10016e0f:	call   0x1001c544
10016e14:	test   eax,eax
10016e16:	jge    0x10016e1f
10016e18:	call   0x10019833
10016e1d:	jmp    0x10016deb
10016e1f:	call   0x1001ca57
10016e24:	test   eax,eax
10016e26:	jl     0x10016e48
10016e28:	call   0x1001c7e4
10016e2d:	test   eax,eax
10016e2f:	jl     0x10016e48
10016e31:	push   0x0
10016e33:	call   0x10019f6b
10016e38:	test   eax,eax
10016e3a:	pop    ecx
10016e3b:	jne    0x10016e48
10016e3d:	inc    DWORD PTR ds:0x10096e34
10016e43:	jmp    0x10016ef4
10016e48:	call   0x1001c798
10016e4d:	jmp    0x10016e18
10016e4f:	xor    edi,edi
10016e51:	cmp    eax,edi
10016e53:	jne    0x10016e8a
10016e55:	cmp    DWORD PTR ds:0x10096e34,edi
10016e5b:	jle    0x10016d55
10016e61:	dec    DWORD PTR ds:0x10096e34
10016e67:	cmp    DWORD PTR ds:0x100971d0,edi
10016e6d:	jne    0x10016e74
10016e6f:	call   0x1001a0f0
10016e74:	cmp    DWORD PTR [ebp+0x10],edi
10016e77:	jne    0x10016ef4
10016e79:	call   0x1001c798
10016e7e:	call   0x10019833
10016e83:	call   0x1001b651
10016e88:	jmp    0x10016ef4
10016e8a:	cmp    eax,0x2
10016e8d:	jne    0x10016ee8
10016e8f:	call   0x10019801
10016e94:	push   0x214
10016e99:	push   0x1
10016e9b:	call   0x10018775
10016ea0:	mov    esi,eax
10016ea2:	cmp    esi,edi
10016ea4:	pop    ecx
10016ea5:	pop    ecx
10016ea6:	je     0x10016d55
10016eac:	push   esi
10016ead:	push   DWORD PTR ds:0x10095374
10016eb3:	push   DWORD PTR ds:0x10097184
10016eb9:	call   0x1001978a
10016ebe:	pop    ecx
10016ebf:	call   eax
10016ec1:	test   eax,eax
10016ec3:	je     0x10016edc
10016ec5:	push   edi
10016ec6:	push   esi
10016ec7:	call   0x10019870
10016ecc:	pop    ecx
10016ecd:	pop    ecx
10016ece:	call   DWORD PTR ds:0x10034138
10016ed4:	or     DWORD PTR [esi+0x4],0xffffffff
10016ed8:	mov    DWORD PTR [esi],eax
10016eda:	jmp    0x10016ef4
10016edc:	push   esi
10016edd:	call   0x10016b85
10016ee2:	pop    ecx
10016ee3:	jmp    0x10016d55
10016ee8:	cmp    eax,0x3
10016eeb:	jne    0x10016ef4
10016eed:	push   edi
10016eee:	call   0x10019adf
10016ef3:	pop    ecx
10016ef4:	xor    eax,eax
10016ef6:	inc    eax
10016ef7:	pop    edi
10016ef8:	pop    esi
10016ef9:	pop    ebx
10016efa:	leave  
10016efb:	ret    0xc
10016efe:	push   0xc
10016f00:	push   0x100856a0
10016f05:	call   0x10017f88
10016f0a:	mov    edi,ecx
10016f0c:	mov    esi,edx
10016f0e:	mov    ebx,DWORD PTR [ebp+0x8]
10016f11:	xor    eax,eax
10016f13:	inc    eax
10016f14:	mov    DWORD PTR [ebp-0x1c],eax
10016f17:	test   esi,esi
10016f19:	jne    0x10016f27
10016f1b:	cmp    DWORD PTR ds:0x10096e34,edx
10016f21:	je     0x10016fec
10016f27:	and    DWORD PTR [ebp-0x4],0x0
10016f2b:	cmp    esi,eax
10016f2d:	je     0x10016f34
10016f2f:	cmp    esi,0x2
10016f32:	jne    0x10016f62
10016f34:	mov    eax,ds:0x1007d614
10016f39:	test   eax,eax
10016f3b:	je     0x10016f45
10016f3d:	push   edi
10016f3e:	push   esi
10016f3f:	push   ebx
10016f40:	call   eax
10016f42:	mov    DWORD PTR [ebp-0x1c],eax
10016f45:	cmp    DWORD PTR [ebp-0x1c],0x0
10016f49:	je     0x10016fe5
10016f4f:	push   edi
10016f50:	push   esi
10016f51:	push   ebx
10016f52:	call   0x10016d25
10016f57:	mov    DWORD PTR [ebp-0x1c],eax
10016f5a:	test   eax,eax
10016f5c:	je     0x10016fe5
10016f62:	push   edi
10016f63:	push   esi
10016f64:	push   ebx
10016f65:	call   0x1000e040
10016f6a:	mov    DWORD PTR [ebp-0x1c],eax
10016f6d:	cmp    esi,0x1
10016f70:	jne    0x10016f96
10016f72:	test   eax,eax
10016f74:	jne    0x10016f96
10016f76:	push   edi
10016f77:	push   eax
10016f78:	push   ebx
10016f79:	call   0x1000e040
10016f7e:	push   edi
10016f7f:	push   0x0
10016f81:	push   ebx
10016f82:	call   0x10016d25
10016f87:	mov    eax,ds:0x1007d614
10016f8c:	test   eax,eax
10016f8e:	je     0x10016f96
10016f90:	push   edi
10016f91:	push   0x0
10016f93:	push   ebx
10016f94:	call   eax
10016f96:	test   esi,esi
10016f98:	je     0x10016f9f
10016f9a:	cmp    esi,0x3
10016f9d:	jne    0x10016fc5
10016f9f:	push   edi
10016fa0:	push   esi
10016fa1:	push   ebx
10016fa2:	call   0x10016d25
10016fa7:	test   eax,eax
10016fa9:	jne    0x10016fae
10016fab:	and    DWORD PTR [ebp-0x1c],eax
10016fae:	cmp    DWORD PTR [ebp-0x1c],0x0
10016fb2:	je     0x10016fc5
10016fb4:	mov    eax,ds:0x1007d614
10016fb9:	test   eax,eax
10016fbb:	je     0x10016fc5
10016fbd:	push   edi
10016fbe:	push   esi
10016fbf:	push   ebx
10016fc0:	call   eax
10016fc2:	mov    DWORD PTR [ebp-0x1c],eax
10016fc5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10016fcc:	mov    eax,DWORD PTR [ebp-0x1c]
10016fcf:	jmp    0x10016fee
10016fd1:	mov    eax,DWORD PTR [ebp-0x14]
10016fd4:	mov    ecx,DWORD PTR [eax]
10016fd6:	mov    ecx,DWORD PTR [ecx]
10016fd8:	push   eax
10016fd9:	push   ecx
10016fda:	call   0x1001cdeb
10016fdf:	pop    ecx
10016fe0:	pop    ecx
10016fe1:	ret    
10016fe2:	mov    esp,DWORD PTR [ebp-0x18]
10016fe5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10016fec:	xor    eax,eax
10016fee:	call   0x10017fcd
10016ff3:	ret    
10016ff4:	cmp    DWORD PTR [esp+0x8],0x1
10016ff9:	jne    0x10017000
10016ffb:	call   0x1001ce06
10017000:	push   DWORD PTR [esp+0x4]
10017004:	mov    ecx,DWORD PTR [esp+0x10]
10017008:	mov    edx,DWORD PTR [esp+0xc]
1001700c:	call   0x10016efe
10017011:	pop    ecx
10017012:	ret    0xc
10017015:	mov    eax,DWORD PTR [esp+0x4]
10017019:	mov    dx,WORD PTR [esp+0x8]
1001701e:	jmp    0x10017027
10017020:	cmp    cx,dx
10017023:	je     0x10017036
10017025:	inc    eax
10017026:	inc    eax
10017027:	movzx  ecx,WORD PTR [eax]
1001702a:	test   cx,cx
1001702d:	jne    0x10017020
1001702f:	cmp    WORD PTR [eax],dx
10017032:	je     0x10017036
10017034:	xor    eax,eax
10017036:	ret    
10017037:	push   ebp
10017038:	mov    ebp,esp
1001703a:	sub    esp,0x10
1001703d:	push   DWORD PTR [ebp+0xc]
10017040:	lea    ecx,[ebp-0x10]
10017043:	call   0x100165fa
10017048:	movzx  eax,BYTE PTR [ebp+0x8]
1001704c:	mov    ecx,DWORD PTR [ebp-0x10]
1001704f:	mov    ecx,DWORD PTR [ecx+0xc8]
10017055:	movzx  eax,WORD PTR [ecx+eax*2]
10017059:	and    eax,0x8000
1001705e:	cmp    BYTE PTR [ebp-0x4],0x0
10017062:	je     0x1001706b
10017064:	mov    ecx,DWORD PTR [ebp-0x8]
10017067:	and    DWORD PTR [ecx+0x70],0xfffffffd
1001706b:	leave  
1001706c:	ret    
1001706d:	push   0x0
1001706f:	push   DWORD PTR [esp+0x8]
10017073:	call   0x10017037
10017078:	pop    ecx
10017079:	pop    ecx
1001707a:	ret    
1001707b:	push   0x8
1001707d:	push   DWORD PTR [esp+0x8]
10017081:	call   0x1001cf1c
10017086:	pop    ecx
10017087:	pop    ecx
10017088:	ret    
10017089:	push   ebp
1001708a:	mov    ebp,esp
1001708c:	sub    esp,0x20
1001708f:	push   esi
10017090:	xor    esi,esi
10017092:	cmp    DWORD PTR [ebp+0xc],esi
10017095:	jne    0x100170b4
10017097:	call   0x1001a18e
1001709c:	push   esi
1001709d:	push   esi
1001709e:	push   esi
1001709f:	push   esi
100170a0:	push   esi
100170a1:	mov    DWORD PTR [eax],0x16
100170a7:	call   0x1001616f
100170ac:	add    esp,0x14
100170af:	or     eax,0xffffffff
100170b2:	jmp    0x100170db
100170b4:	push   DWORD PTR [ebp+0x14]
100170b7:	lea    eax,[ebp-0x20]
100170ba:	push   DWORD PTR [ebp+0x10]
100170bd:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
100170c4:	push   DWORD PTR [ebp+0xc]
100170c7:	mov    DWORD PTR [ebp-0x14],0x42
100170ce:	push   eax
100170cf:	mov    DWORD PTR [ebp-0x18],esi
100170d2:	mov    DWORD PTR [ebp-0x20],esi
100170d5:	call   DWORD PTR [ebp+0x8]
100170d8:	add    esp,0x10
100170db:	pop    esi
100170dc:	leave  
100170dd:	ret    
100170de:	push   DWORD PTR [esp+0x8]
100170e2:	push   0x0
100170e4:	push   DWORD PTR [esp+0xc]
100170e8:	push   0x1001d139
100170ed:	call   0x10017089
100170f2:	add    esp,0x10
100170f5:	ret    
100170f6:	push   ebp
100170f7:	mov    ebp,esp
100170f9:	sub    esp,0x20
100170fc:	push   ebx
100170fd:	xor    ebx,ebx
100170ff:	cmp    DWORD PTR [ebp+0x14],ebx
10017102:	jne    0x10017124
10017104:	call   0x1001a18e
10017109:	push   ebx
1001710a:	push   ebx
1001710b:	push   ebx
1001710c:	push   ebx
1001710d:	push   ebx
1001710e:	mov    DWORD PTR [eax],0x16
10017114:	call   0x1001616f
10017119:	add    esp,0x14
1001711c:	or     eax,0xffffffff
1001711f:	jmp    0x100171e9
10017124:	push   esi
10017125:	mov    esi,DWORD PTR [ebp+0xc]
10017128:	push   edi
10017129:	mov    edi,DWORD PTR [ebp+0x10]
1001712c:	cmp    edi,ebx
1001712e:	je     0x10017154
10017130:	cmp    esi,ebx
10017132:	jne    0x10017154
10017134:	call   0x1001a18e
10017139:	push   ebx
1001713a:	push   ebx
1001713b:	push   ebx
1001713c:	push   ebx
1001713d:	push   ebx
1001713e:	mov    DWORD PTR [eax],0x16
10017144:	call   0x1001616f
10017149:	add    esp,0x14
1001714c:	or     eax,0xffffffff
1001714f:	jmp    0x100171e7
10017154:	cmp    edi,0x3fffffff
1001715a:	mov    DWORD PTR [ebp-0x14],0x42
10017161:	mov    DWORD PTR [ebp-0x18],esi
10017164:	mov    DWORD PTR [ebp-0x20],esi
10017167:	jbe    0x10017172
10017169:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
10017170:	jmp    0x10017178
10017172:	lea    eax,[edi+edi*1]
10017175:	mov    DWORD PTR [ebp-0x1c],eax
10017178:	push   DWORD PTR [ebp+0x1c]
1001717b:	lea    eax,[ebp-0x20]
1001717e:	push   DWORD PTR [ebp+0x18]
10017181:	push   DWORD PTR [ebp+0x14]
10017184:	push   eax
10017185:	call   DWORD PTR [ebp+0x8]
10017188:	add    esp,0x10
1001718b:	cmp    esi,ebx
1001718d:	mov    DWORD PTR [ebp+0x14],eax
10017190:	je     0x100171e7
10017192:	cmp    eax,ebx
10017194:	jl     0x100171d8
10017196:	dec    DWORD PTR [ebp-0x1c]
10017199:	js     0x100171a5
1001719b:	mov    eax,DWORD PTR [ebp-0x20]
1001719e:	mov    BYTE PTR [eax],bl
100171a0:	inc    DWORD PTR [ebp-0x20]
100171a3:	jmp    0x100171b6
100171a5:	lea    eax,[ebp-0x20]
100171a8:	push   eax
100171a9:	push   ebx
100171aa:	call   0x1001cf8a
100171af:	cmp    eax,0xffffffff
100171b2:	pop    ecx
100171b3:	pop    ecx
100171b4:	je     0x100171d8
100171b6:	dec    DWORD PTR [ebp-0x1c]
100171b9:	js     0x100171c2
100171bb:	mov    eax,DWORD PTR [ebp-0x20]
100171be:	mov    BYTE PTR [eax],bl
100171c0:	jmp    0x100171d3
100171c2:	lea    eax,[ebp-0x20]
100171c5:	push   eax
100171c6:	push   ebx
100171c7:	call   0x1001cf8a
100171cc:	cmp    eax,0xffffffff
100171cf:	pop    ecx
100171d0:	pop    ecx
100171d1:	je     0x100171d8
100171d3:	mov    eax,DWORD PTR [ebp+0x14]
100171d6:	jmp    0x100171e7
100171d8:	xor    eax,eax
100171da:	cmp    DWORD PTR [ebp-0x1c],ebx
100171dd:	mov    WORD PTR [esi+edi*2-0x2],bx
100171e2:	setge  al
100171e5:	dec    eax
100171e6:	dec    eax
100171e7:	pop    edi
100171e8:	pop    esi
100171e9:	pop    ebx
100171ea:	leave  
100171eb:	ret    
100171ec:	push   ebp
100171ed:	mov    ebp,esp
100171ef:	push   esi
100171f0:	xor    esi,esi
100171f2:	cmp    DWORD PTR [ebp+0x10],esi
100171f5:	jne    0x10017214
100171f7:	call   0x1001a18e
100171fc:	push   esi
100171fd:	push   esi
100171fe:	push   esi
100171ff:	push   esi
10017200:	push   esi
10017201:	mov    DWORD PTR [eax],0x16
10017207:	call   0x1001616f
1001720c:	add    esp,0x14
1001720f:	or     eax,0xffffffff
10017212:	jmp    0x10017270
10017214:	push   edi
10017215:	mov    edi,DWORD PTR [ebp+0x8]
10017218:	cmp    edi,esi
1001721a:	je     0x10017221
1001721c:	cmp    DWORD PTR [ebp+0xc],esi
1001721f:	ja     0x1001722e
10017221:	call   0x1001a18e
10017226:	mov    DWORD PTR [eax],0x16
1001722c:	jmp    0x1001725f
1001722e:	push   DWORD PTR [ebp+0x18]
10017231:	push   DWORD PTR [ebp+0x14]
10017234:	push   DWORD PTR [ebp+0x10]
10017237:	push   DWORD PTR [ebp+0xc]
1001723a:	push   edi
1001723b:	push   0x1001da93
10017240:	call   0x100170f6
10017245:	add    esp,0x18
10017248:	cmp    eax,esi
1001724a:	jge    0x1001724f
1001724c:	mov    WORD PTR [edi],si
1001724f:	cmp    eax,0xfffffffe
10017252:	jne    0x1001726f
10017254:	call   0x1001a18e
10017259:	mov    DWORD PTR [eax],0x22
1001725f:	push   esi
10017260:	push   esi
10017261:	push   esi
10017262:	push   esi
10017263:	push   esi
10017264:	call   0x1001616f
10017269:	add    esp,0x14
1001726c:	or     eax,0xffffffff
1001726f:	pop    edi
10017270:	pop    esi
10017271:	pop    ebp
10017272:	ret    
10017273:	push   DWORD PTR [esp+0x10]
10017277:	push   0x0
10017279:	push   DWORD PTR [esp+0x14]
1001727d:	push   DWORD PTR [esp+0x14]
10017281:	push   DWORD PTR [esp+0x14]
10017285:	call   0x100171ec
1001728a:	add    esp,0x14
1001728d:	ret    
1001728e:	push   DWORD PTR ds:0x100977ac
10017294:	call   0x1001978a
10017299:	test   eax,eax
1001729b:	pop    ecx
1001729c:	je     0x100172a0
1001729e:	call   eax
100172a0:	push   0x19
100172a2:	call   0x1001c36b
100172a7:	push   0x1
100172a9:	push   0x0
100172ab:	call   0x100188fb
100172b0:	add    esp,0xc
100172b3:	jmp    0x10018808
100172b8:	int3   
100172b9:	int3   
100172ba:	int3   
100172bb:	int3   
100172bc:	int3   
100172bd:	int3   
100172be:	int3   
100172bf:	int3   
100172c0:	mov    eax,DWORD PTR [esp+0x8]
100172c4:	mov    ecx,DWORD PTR [esp+0x10]
100172c8:	or     ecx,eax
100172ca:	mov    ecx,DWORD PTR [esp+0xc]
100172ce:	jne    0x100172d9
100172d0:	mov    eax,DWORD PTR [esp+0x4]
100172d4:	mul    ecx
100172d6:	ret    0x10
100172d9:	push   ebx
100172da:	mul    ecx
100172dc:	mov    ebx,eax
100172de:	mov    eax,DWORD PTR [esp+0x8]
100172e2:	mul    DWORD PTR [esp+0x14]
100172e6:	add    ebx,eax
100172e8:	mov    eax,DWORD PTR [esp+0x8]
100172ec:	mul    ecx
100172ee:	add    edx,ebx
100172f0:	pop    ebx
100172f1:	ret    0x10
100172f4:	mov    eax,DWORD PTR [esp+0x4]
100172f8:	mov    edx,eax
100172fa:	mov    cx,WORD PTR [eax]
100172fd:	inc    eax
100172fe:	inc    eax
100172ff:	test   cx,cx
10017302:	jne    0x100172fa
10017304:	mov    cx,WORD PTR [esp+0x8]
10017309:	dec    eax
1001730a:	dec    eax
1001730b:	cmp    eax,edx
1001730d:	je     0x10017314
1001730f:	cmp    WORD PTR [eax],cx
10017312:	jne    0x10017309
10017314:	mov    dx,WORD PTR [eax]
10017317:	sub    dx,cx
1001731a:	neg    dx
1001731d:	sbb    edx,edx
1001731f:	not    edx
10017321:	and    eax,edx
10017323:	ret    
10017324:	mov    ecx,DWORD PTR [esp+0x4]
10017328:	mov    edx,DWORD PTR [esp+0x8]
1001732c:	movzx  eax,WORD PTR [edx]
1001732f:	mov    WORD PTR [ecx],ax
10017332:	inc    ecx
10017333:	inc    ecx
10017334:	inc    edx
10017335:	inc    edx
10017336:	test   ax,ax
10017339:	jne    0x1001732c
1001733b:	mov    eax,DWORD PTR [esp+0x4]
1001733f:	ret    
10017340:	cmp    DWORD PTR [esp+0x8],0x0
10017345:	je     0x1001734d
10017347:	mov    BYTE PTR [ecx],0x2d
1001734a:	inc    ecx
1001734b:	neg    eax
1001734d:	push   esi
1001734e:	mov    esi,ecx
10017350:	xor    edx,edx
10017352:	div    DWORD PTR [esp+0x8]
10017356:	cmp    edx,0x9
10017359:	jbe    0x10017360
1001735b:	add    dl,0x57
1001735e:	jmp    0x10017363
10017360:	add    dl,0x30
10017363:	mov    BYTE PTR [ecx],dl
10017365:	inc    ecx
10017366:	test   eax,eax
10017368:	ja     0x10017350
1001736a:	mov    BYTE PTR [ecx],0x0
1001736d:	dec    ecx
1001736e:	mov    dl,BYTE PTR [esi]
10017370:	mov    al,BYTE PTR [ecx]
10017372:	mov    BYTE PTR [ecx],dl
10017374:	dec    ecx
10017375:	mov    BYTE PTR [esi],al
10017377:	inc    esi
10017378:	cmp    esi,ecx
1001737a:	jb     0x1001736e
1001737c:	pop    esi
1001737d:	ret    0x8
10017380:	push   ebp
10017381:	mov    ebp,esp
10017383:	xor    eax,eax
10017385:	cmp    DWORD PTR [ebp+0x10],0xa
10017389:	jne    0x10017391
1001738b:	cmp    DWORD PTR [ebp+0x8],eax
1001738e:	jge    0x10017391
10017390:	inc    eax
10017391:	mov    ecx,DWORD PTR [ebp+0xc]
10017394:	push   eax
10017395:	push   DWORD PTR [ebp+0x10]
10017398:	mov    eax,DWORD PTR [ebp+0x8]
1001739b:	call   0x10017340
100173a0:	mov    eax,DWORD PTR [ebp+0xc]
100173a3:	pop    ebp
100173a4:	ret    
100173a5:	push   ebx
100173a6:	push   esi
100173a7:	mov    esi,DWORD PTR [esp+0xc]
100173ab:	push   edi
100173ac:	xor    edi,edi
100173ae:	or     ebx,0xffffffff
100173b1:	cmp    esi,edi
100173b3:	jne    0x100173d1
100173b5:	call   0x1001a18e
100173ba:	push   edi
100173bb:	push   edi
100173bc:	push   edi
100173bd:	push   edi
100173be:	push   edi
100173bf:	mov    DWORD PTR [eax],0x16
100173c5:	call   0x1001616f
100173ca:	add    esp,0x14
100173cd:	or     eax,ebx
100173cf:	jmp    0x10017413
100173d1:	test   BYTE PTR [esi+0xc],0x83
100173d5:	je     0x1001740e
100173d7:	push   esi
100173d8:	call   0x1001eaf4
100173dd:	push   esi
100173de:	mov    ebx,eax
100173e0:	call   0x1001eac8
100173e5:	push   esi
100173e6:	call   0x1001ea9b
100173eb:	push   eax
100173ec:	call   0x100176de
100173f1:	add    esp,0x10
100173f4:	test   eax,eax
100173f6:	jge    0x100173fd
100173f8:	or     ebx,0xffffffff
100173fb:	jmp    0x1001740e
100173fd:	mov    eax,DWORD PTR [esi+0x1c]
10017400:	cmp    eax,edi
10017402:	je     0x1001740e
10017404:	push   eax
10017405:	call   0x10016b85
1001740a:	pop    ecx
1001740b:	mov    DWORD PTR [esi+0x1c],edi
1001740e:	mov    DWORD PTR [esi+0xc],edi
10017411:	mov    eax,ebx
10017413:	pop    edi
10017414:	pop    esi
10017415:	pop    ebx
10017416:	ret    
10017417:	push   0xc
10017419:	push   0x100856c0
1001741e:	call   0x10017f88
10017423:	or     DWORD PTR [ebp-0x1c],0xffffffff
10017427:	xor    eax,eax
10017429:	mov    esi,DWORD PTR [ebp+0x8]
1001742c:	xor    edi,edi
1001742e:	cmp    esi,edi
10017430:	setne  al
10017433:	cmp    eax,edi
10017435:	jne    0x10017454
10017437:	call   0x1001a18e
1001743c:	mov    DWORD PTR [eax],0x16
10017442:	push   edi
10017443:	push   edi
10017444:	push   edi
10017445:	push   edi
10017446:	push   edi
10017447:	call   0x1001616f
1001744c:	add    esp,0x14
1001744f:	or     eax,0xffffffff
10017452:	jmp    0x10017460
10017454:	test   BYTE PTR [esi+0xc],0x40
10017458:	je     0x10017466
1001745a:	mov    DWORD PTR [esi+0xc],edi
1001745d:	mov    eax,DWORD PTR [ebp-0x1c]
10017460:	call   0x10017fcd
10017465:	ret    
10017466:	push   esi
10017467:	call   0x1001e87c
1001746c:	pop    ecx
1001746d:	mov    DWORD PTR [ebp-0x4],edi
10017470:	push   esi
10017471:	call   0x100173a5
10017476:	pop    ecx
10017477:	mov    DWORD PTR [ebp-0x1c],eax
1001747a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10017481:	call   0x1001748b
10017486:	jmp    0x1001745d
10017488:	mov    esi,DWORD PTR [ebp+0x8]
1001748b:	push   esi
1001748c:	call   0x1001e8e6
10017491:	pop    ecx
10017492:	ret    
10017493:	push   ebp
10017494:	mov    ebp,esp
10017496:	sub    esp,0x20
10017499:	push   ebx
1001749a:	xor    ebx,ebx
1001749c:	cmp    DWORD PTR [ebp+0xc],ebx
1001749f:	jne    0x100174be
100174a1:	call   0x1001a18e
100174a6:	push   ebx
100174a7:	push   ebx
100174a8:	push   ebx
100174a9:	push   ebx
100174aa:	push   ebx
100174ab:	mov    DWORD PTR [eax],0x16
100174b1:	call   0x1001616f
100174b6:	add    esp,0x14
100174b9:	or     eax,0xffffffff
100174bc:	jmp    0x1001750b
100174be:	mov    eax,DWORD PTR [ebp+0x8]
100174c1:	cmp    eax,ebx
100174c3:	je     0x100174a1
100174c5:	push   esi
100174c6:	mov    DWORD PTR [ebp-0x18],eax
100174c9:	mov    DWORD PTR [ebp-0x20],eax
100174cc:	lea    eax,[ebp+0x10]
100174cf:	push   eax
100174d0:	push   ebx
100174d1:	push   DWORD PTR [ebp+0xc]
100174d4:	lea    eax,[ebp-0x20]
100174d7:	push   eax
100174d8:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
100174df:	mov    DWORD PTR [ebp-0x14],0x42
100174e6:	call   0x1001ed1c
100174eb:	add    esp,0x10
100174ee:	dec    DWORD PTR [ebp-0x1c]
100174f1:	mov    esi,eax
100174f3:	js     0x100174fc
100174f5:	mov    eax,DWORD PTR [ebp-0x20]
100174f8:	mov    BYTE PTR [eax],bl
100174fa:	jmp    0x10017508
100174fc:	lea    eax,[ebp-0x20]
100174ff:	push   eax
10017500:	push   ebx
10017501:	call   0x1001cf8a
10017506:	pop    ecx
10017507:	pop    ecx
10017508:	mov    eax,esi
1001750a:	pop    esi
1001750b:	pop    ebx
1001750c:	leave  
1001750d:	ret    
1001750e:	push   ebp
1001750f:	mov    ebp,esp
10017511:	sub    esp,0x10
10017514:	push   DWORD PTR [ebp+0xc]
10017517:	lea    ecx,[ebp-0x10]
1001751a:	call   0x100165fa
1001751f:	mov    eax,DWORD PTR [ebp-0x10]
10017522:	cmp    DWORD PTR [eax+0xac],0x1
10017529:	jle    0x1001753e
1001752b:	lea    eax,[ebp-0x10]
1001752e:	push   eax
1001752f:	push   0x4
10017531:	push   DWORD PTR [ebp+0x8]
10017534:	call   0x1001f6b0
10017539:	add    esp,0xc
1001753c:	jmp    0x1001754e
1001753e:	mov    eax,DWORD PTR [eax+0xc8]
10017544:	mov    ecx,DWORD PTR [ebp+0x8]
10017547:	movzx  eax,BYTE PTR [eax+ecx*2]
1001754b:	and    eax,0x4
1001754e:	cmp    BYTE PTR [ebp-0x4],0x0
10017552:	je     0x1001755b
10017554:	mov    ecx,DWORD PTR [ebp-0x8]
10017557:	and    DWORD PTR [ecx+0x70],0xfffffffd
1001755b:	leave  
1001755c:	ret    
1001755d:	cmp    DWORD PTR ds:0x10096e48,0x0
10017564:	jne    0x10017578
10017566:	mov    eax,DWORD PTR [esp+0x4]
1001756a:	mov    ecx,DWORD PTR ds:0x10095af8
10017570:	movzx  eax,BYTE PTR [ecx+eax*2]
10017574:	and    eax,0x4
10017577:	ret    
10017578:	push   0x0
1001757a:	push   DWORD PTR [esp+0x8]
1001757e:	call   0x1001750e
10017583:	pop    ecx
10017584:	pop    ecx
10017585:	ret    
10017586:	push   0x14
10017588:	push   0x100856e0
1001758d:	call   0x10017f88
10017592:	and    DWORD PTR [ebp-0x4],0x0
10017596:	dec    DWORD PTR [ebp+0x10]
10017599:	js     0x100175d5
1001759b:	mov    ecx,DWORD PTR [ebp+0x8]
1001759e:	sub    ecx,DWORD PTR [ebp+0xc]
100175a1:	mov    DWORD PTR [ebp+0x8],ecx
100175a4:	call   DWORD PTR [ebp+0x14]
100175a7:	jmp    0x10017596
100175a9:	mov    eax,DWORD PTR [ebp-0x14]
100175ac:	mov    DWORD PTR [ebp-0x1c],eax
100175af:	mov    eax,DWORD PTR [ebp-0x1c]
100175b2:	mov    eax,DWORD PTR [eax]
100175b4:	mov    DWORD PTR [ebp-0x20],eax
100175b7:	mov    eax,DWORD PTR [ebp-0x20]
100175ba:	cmp    DWORD PTR [eax],0xe06d7363
100175c0:	je     0x100175cd
100175c2:	mov    DWORD PTR [ebp-0x24],0x0
100175c9:	mov    eax,DWORD PTR [ebp-0x24]
100175cc:	ret    
100175cd:	call   0x10019ccc
100175d2:	mov    esp,DWORD PTR [ebp-0x18]
100175d5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100175dc:	call   0x10017fcd
100175e1:	ret    0x10
100175e4:	push   0xc
100175e6:	push   0x10085700
100175eb:	call   0x10017f88
100175f0:	and    DWORD PTR [ebp-0x1c],0x0
100175f4:	mov    esi,DWORD PTR [ebp+0xc]
100175f7:	mov    eax,esi
100175f9:	imul   eax,DWORD PTR [ebp+0x10]
100175fd:	add    DWORD PTR [ebp+0x8],eax
10017600:	and    DWORD PTR [ebp-0x4],0x0
10017604:	dec    DWORD PTR [ebp+0x10]
10017607:	js     0x10017614
10017609:	sub    DWORD PTR [ebp+0x8],esi
1001760c:	mov    ecx,DWORD PTR [ebp+0x8]
1001760f:	call   DWORD PTR [ebp+0x14]
10017612:	jmp    0x10017604
10017614:	mov    DWORD PTR [ebp-0x1c],0x1
1001761b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10017622:	call   0x1001762f
10017627:	call   0x10017fcd
1001762c:	ret    0x10
1001762f:	cmp    DWORD PTR [ebp-0x1c],0x0
10017633:	jne    0x10017646
10017635:	push   DWORD PTR [ebp+0x14]
10017638:	push   DWORD PTR [ebp+0x10]
1001763b:	push   DWORD PTR [ebp+0xc]
1001763e:	push   DWORD PTR [ebp+0x8]
10017641:	call   0x10017586
10017646:	ret    
10017647:	push   esi
10017648:	mov    esi,DWORD PTR [esp+0x8]
1001764c:	push   edi
1001764d:	push   esi
1001764e:	call   0x1001e5d6
10017653:	cmp    eax,0xffffffff
10017656:	pop    ecx
10017657:	je     0x100176a9
10017659:	cmp    esi,0x1
1001765c:	mov    eax,ds:0x10098ae0
10017661:	jne    0x1001766c
10017663:	test   BYTE PTR [eax+0x84],0x1
1001766a:	jne    0x10017677
1001766c:	cmp    esi,0x2
1001766f:	jne    0x1001768d
10017671:	test   BYTE PTR [eax+0x44],0x1
10017675:	je     0x1001768d
10017677:	push   0x2
10017679:	call   0x1001e5d6
1001767e:	push   0x1
10017680:	mov    edi,eax
10017682:	call   0x1001e5d6
10017687:	cmp    eax,edi
10017689:	pop    ecx
1001768a:	pop    ecx
1001768b:	je     0x100176a9
1001768d:	push   esi
1001768e:	call   0x1001e5d6
10017693:	pop    ecx
10017694:	push   eax
10017695:	call   DWORD PTR ds:0x10034058
1001769b:	test   eax,eax
1001769d:	jne    0x100176a9
1001769f:	call   DWORD PTR ds:0x1003407c
100176a5:	mov    edi,eax
100176a7:	jmp    0x100176ab
100176a9:	xor    edi,edi
100176ab:	push   esi
100176ac:	call   0x1001e555
100176b1:	mov    eax,esi
100176b3:	sar    eax,0x5
100176b6:	mov    eax,DWORD PTR [eax*4+0x10098ae0]
100176bd:	and    esi,0x1f
100176c0:	shl    esi,0x6
100176c3:	test   edi,edi
100176c5:	pop    ecx
100176c6:	mov    BYTE PTR [eax+esi*1+0x4],0x0
100176cb:	je     0x100176d9
100176cd:	push   edi
100176ce:	call   0x1001a1b4
100176d3:	pop    ecx
100176d4:	or     eax,0xffffffff
100176d7:	jmp    0x100176db
100176d9:	xor    eax,eax
100176db:	pop    edi
100176dc:	pop    esi
100176dd:	ret    
100176de:	push   0x10
100176e0:	push   0x10085720
100176e5:	call   0x10017f88
100176ea:	mov    eax,DWORD PTR [ebp+0x8]
100176ed:	cmp    eax,0xfffffffe
100176f0:	jne    0x1001770d
100176f2:	call   0x1001a1a1
100176f7:	and    DWORD PTR [eax],0x0
100176fa:	call   0x1001a18e
100176ff:	mov    DWORD PTR [eax],0x9
10017705:	or     eax,0xffffffff
10017708:	jmp    0x1001779b
1001770d:	xor    edi,edi
1001770f:	cmp    eax,edi
10017711:	jl     0x1001771b
10017713:	cmp    eax,DWORD PTR ds:0x10098ac4
10017719:	jb     0x1001773c
1001771b:	call   0x1001a1a1
10017720:	mov    DWORD PTR [eax],edi
10017722:	call   0x1001a18e
10017727:	mov    DWORD PTR [eax],0x9
1001772d:	push   edi
1001772e:	push   edi
1001772f:	push   edi
10017730:	push   edi
10017731:	push   edi
10017732:	call   0x1001616f
10017737:	add    esp,0x14
1001773a:	jmp    0x10017705
1001773c:	mov    ecx,eax
1001773e:	sar    ecx,0x5
10017741:	lea    ebx,[ecx*4+0x10098ae0]
10017748:	mov    esi,eax
1001774a:	and    esi,0x1f
1001774d:	shl    esi,0x6
10017750:	mov    ecx,DWORD PTR [ebx]
10017752:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
10017757:	and    ecx,0x1
1001775a:	je     0x1001771b
1001775c:	push   eax
1001775d:	call   0x1001e647
10017762:	pop    ecx
10017763:	mov    DWORD PTR [ebp-0x4],edi
10017766:	mov    eax,DWORD PTR [ebx]
10017768:	test   BYTE PTR [eax+esi*1+0x4],0x1
1001776d:	je     0x1001777d
1001776f:	push   DWORD PTR [ebp+0x8]
10017772:	call   0x10017647
10017777:	pop    ecx
10017778:	mov    DWORD PTR [ebp-0x1c],eax
1001777b:	jmp    0x1001778c
1001777d:	call   0x1001a18e
10017782:	mov    DWORD PTR [eax],0x9
10017788:	or     DWORD PTR [ebp-0x1c],0xffffffff
1001778c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10017793:	call   0x100177a1
10017798:	mov    eax,DWORD PTR [ebp-0x1c]
1001779b:	call   0x10017fcd
100177a0:	ret    
100177a1:	push   DWORD PTR [ebp+0x8]
100177a4:	call   0x1001e6e7
100177a9:	pop    ecx
100177aa:	ret    
100177ab:	push   ebp
100177ac:	mov    ebp,esp
100177ae:	sub    esp,0x18
100177b1:	push   ebx
100177b2:	push   esi
100177b3:	push   DWORD PTR [ebp+0xc]
100177b6:	lea    ecx,[ebp-0x18]
100177b9:	call   0x100165fa
100177be:	mov    ebx,DWORD PTR [ebp+0x8]
100177c1:	mov    esi,0x100
100177c6:	cmp    ebx,esi
100177c8:	jae    0x1001781e
100177ca:	mov    ecx,DWORD PTR [ebp-0x18]
100177cd:	cmp    DWORD PTR [ecx+0xac],0x1
100177d4:	jle    0x100177ea
100177d6:	lea    eax,[ebp-0x18]
100177d9:	push   eax
100177da:	push   0x1
100177dc:	push   ebx
100177dd:	call   0x1001f6b0
100177e2:	mov    ecx,DWORD PTR [ebp-0x18]
100177e5:	add    esp,0xc
100177e8:	jmp    0x100177f7
100177ea:	mov    eax,DWORD PTR [ecx+0xc8]
100177f0:	movzx  eax,BYTE PTR [eax+ebx*2]
100177f4:	and    eax,0x1
100177f7:	test   eax,eax
100177f9:	je     0x1001780a
100177fb:	mov    eax,DWORD PTR [ecx+0xcc]
10017801:	movzx  eax,BYTE PTR [eax+ebx*1]
10017805:	jmp    0x100178b1
1001780a:	cmp    BYTE PTR [ebp-0xc],0x0
1001780e:	je     0x10017817
10017810:	mov    eax,DWORD PTR [ebp-0x10]
10017813:	and    DWORD PTR [eax+0x70],0xfffffffd
10017817:	mov    eax,ebx
10017819:	jmp    0x100178be
1001781e:	mov    eax,DWORD PTR [ebp-0x18]
10017821:	cmp    DWORD PTR [eax+0xac],0x1
10017828:	jle    0x1001785b
1001782a:	mov    DWORD PTR [ebp+0x8],ebx
1001782d:	sar    DWORD PTR [ebp+0x8],0x8
10017831:	lea    eax,[ebp-0x18]
10017834:	push   eax
10017835:	mov    eax,DWORD PTR [ebp+0x8]
10017838:	and    eax,0xff
1001783d:	push   eax
1001783e:	call   0x10017037
10017843:	test   eax,eax
10017845:	pop    ecx
10017846:	pop    ecx
10017847:	je     0x1001785b
10017849:	mov    al,BYTE PTR [ebp+0x8]
1001784c:	push   0x2
1001784e:	mov    BYTE PTR [ebp-0x4],al
10017851:	mov    BYTE PTR [ebp-0x3],bl
10017854:	mov    BYTE PTR [ebp-0x2],0x0
10017858:	pop    ecx
10017859:	jmp    0x10017870
1001785b:	call   0x1001a18e
10017860:	mov    DWORD PTR [eax],0x2a
10017866:	xor    ecx,ecx
10017868:	mov    BYTE PTR [ebp-0x4],bl
1001786b:	mov    BYTE PTR [ebp-0x3],0x0
1001786f:	inc    ecx
10017870:	mov    eax,DWORD PTR [ebp-0x18]
10017873:	push   0x1
10017875:	push   DWORD PTR [eax+0x4]
10017878:	lea    edx,[ebp-0x8]
1001787b:	push   0x3
1001787d:	push   edx
1001787e:	push   ecx
1001787f:	lea    ecx,[ebp-0x4]
10017882:	push   ecx
10017883:	push   esi
10017884:	push   DWORD PTR [eax+0x14]
10017887:	lea    eax,[ebp-0x18]
1001788a:	push   eax
1001788b:	call   0x100186f2
10017890:	add    esp,0x24
10017893:	test   eax,eax
10017895:	je     0x1001780a
1001789b:	cmp    eax,0x1
1001789e:	jne    0x100178a6
100178a0:	movzx  eax,BYTE PTR [ebp-0x8]
100178a4:	jmp    0x100178b1
100178a6:	movzx  ecx,BYTE PTR [ebp-0x7]
100178aa:	xor    eax,eax
100178ac:	mov    ah,BYTE PTR [ebp-0x8]
100178af:	or     eax,ecx
100178b1:	cmp    BYTE PTR [ebp-0xc],0x0
100178b5:	je     0x100178be
100178b7:	mov    ecx,DWORD PTR [ebp-0x10]
100178ba:	and    DWORD PTR [ecx+0x70],0xfffffffd
100178be:	pop    esi
100178bf:	pop    ebx
100178c0:	leave  
100178c1:	ret    
100178c2:	cmp    DWORD PTR ds:0x10096e48,0x0
100178c9:	jne    0x100178db
100178cb:	mov    eax,DWORD PTR [esp+0x4]
100178cf:	lea    ecx,[eax-0x41]
100178d2:	cmp    ecx,0x19
100178d5:	ja     0x100178e8
100178d7:	add    eax,0x20
100178da:	ret    
100178db:	push   0x0
100178dd:	push   DWORD PTR [esp+0x8]
100178e1:	call   0x100177ab
100178e6:	pop    ecx
100178e7:	pop    ecx
100178e8:	ret    
100178e9:	jmp    0x10015b26
100178ee:	mov    ecx,DWORD PTR [esp+0xc]
100178f2:	test   ecx,ecx
100178f4:	push   esi
100178f5:	push   edi
100178f6:	mov    edi,DWORD PTR [esp+0xc]
100178fa:	mov    esi,edi
100178fc:	je     0x10017926
100178fe:	mov    edx,DWORD PTR [esp+0x10]
10017902:	movzx  eax,WORD PTR [edx]
10017905:	mov    WORD PTR [edi],ax
10017908:	inc    edi
10017909:	inc    edi
1001790a:	inc    edx
1001790b:	inc    edx
1001790c:	test   ax,ax
1001790f:	je     0x10017914
10017911:	dec    ecx
10017912:	jne    0x10017902
10017914:	test   ecx,ecx
10017916:	je     0x10017926
10017918:	dec    ecx
10017919:	je     0x10017926
1001791b:	xor    eax,eax
1001791d:	shr    ecx,1
1001791f:	rep stos DWORD PTR es:[edi],eax
10017921:	adc    ecx,ecx
10017923:	rep stos WORD PTR es:[edi],ax
10017926:	pop    edi
10017927:	mov    eax,esi
10017929:	pop    esi
1001792a:	ret    
1001792b:	push   ebp
1001792c:	mov    ebp,esp
1001792e:	cmp    DWORD PTR [ebp+0x14],0x0
10017932:	push   ebx
10017933:	mov    ebx,DWORD PTR [ebp+0x8]
10017936:	push   esi
10017937:	mov    esi,eax
10017939:	mov    eax,DWORD PTR [ebp+0xc]
1001793c:	push   edi
1001793d:	je     0x1001794e
1001793f:	mov    WORD PTR [esi],0x2d
10017944:	add    esi,0x2
10017947:	neg    ebx
10017949:	adc    eax,0x0
1001794c:	neg    eax
1001794e:	mov    edi,esi
10017950:	xor    ecx,ecx
10017952:	push   ecx
10017953:	push   DWORD PTR [ebp+0x10]
10017956:	push   eax
10017957:	push   ebx
10017958:	call   0x1001e710
1001795d:	cmp    ecx,0x9
10017960:	mov    DWORD PTR [ebp+0xc],ebx
10017963:	mov    ebx,eax
10017965:	mov    eax,edx
10017967:	jbe    0x1001796e
10017969:	add    ecx,0x57
1001796c:	jmp    0x10017971
1001796e:	add    ecx,0x30
10017971:	mov    WORD PTR [esi],cx
10017974:	inc    esi
10017975:	inc    esi
10017976:	test   eax,eax
10017978:	ja     0x10017950
1001797a:	jb     0x10017980
1001797c:	test   ebx,ebx
1001797e:	ja     0x10017950
10017980:	and    WORD PTR [esi],0x0
10017984:	dec    esi
10017985:	dec    esi
10017986:	mov    cx,WORD PTR [edi]
10017989:	movzx  eax,WORD PTR [esi]
1001798c:	mov    WORD PTR [esi],cx
1001798f:	dec    esi
10017990:	mov    WORD PTR [edi],ax
10017993:	dec    esi
10017994:	inc    edi
10017995:	inc    edi
10017996:	cmp    edi,esi
10017998:	jb     0x10017986
1001799a:	pop    edi
1001799b:	pop    esi
1001799c:	pop    ebx
1001799d:	pop    ebp
1001799e:	ret    0x10
100179a1:	push   ebp
100179a2:	mov    ebp,esp
100179a4:	xor    eax,eax
100179a6:	cmp    DWORD PTR [ebp+0x14],0xa
100179aa:	jne    0x100179bb
100179ac:	cmp    DWORD PTR [ebp+0xc],eax
100179af:	jg     0x100179bb
100179b1:	jl     0x100179b8
100179b3:	cmp    DWORD PTR [ebp+0x8],eax
100179b6:	jae    0x100179bb
100179b8:	xor    eax,eax
100179ba:	inc    eax
100179bb:	push   eax
100179bc:	push   DWORD PTR [ebp+0x14]
100179bf:	mov    eax,DWORD PTR [ebp+0x10]
100179c2:	push   DWORD PTR [ebp+0xc]
100179c5:	push   DWORD PTR [ebp+0x8]
100179c8:	call   0x1001792b
100179cd:	mov    eax,DWORD PTR [ebp+0x10]
100179d0:	pop    ebp
100179d1:	ret    
100179d2:	push   ebp
100179d3:	mov    ebp,esp
100179d5:	cmp    DWORD PTR [ebp+0x10],0x0
100179d9:	jne    0x100179df
100179db:	xor    eax,eax
100179dd:	pop    ebp
100179de:	ret    
100179df:	mov    edx,DWORD PTR [ebp+0xc]
100179e2:	mov    ecx,DWORD PTR [ebp+0x8]
100179e5:	dec    DWORD PTR [ebp+0x10]
100179e8:	je     0x100179fd
100179ea:	movzx  eax,WORD PTR [ecx]
100179ed:	test   ax,ax
100179f0:	je     0x100179fd
100179f2:	cmp    ax,WORD PTR [edx]
100179f5:	jne    0x100179fd
100179f7:	inc    ecx
100179f8:	inc    ecx
100179f9:	inc    edx
100179fa:	inc    edx
100179fb:	jmp    0x100179e5
100179fd:	movzx  eax,WORD PTR [ecx]
10017a00:	movzx  ecx,WORD PTR [edx]
10017a03:	sub    eax,ecx
10017a05:	pop    ebp
10017a06:	ret    
10017a07:	push   0x10
10017a09:	push   0x10085740
10017a0e:	call   0x10017f88
10017a13:	xor    eax,eax
10017a15:	mov    DWORD PTR [ebp-0x20],eax
10017a18:	mov    DWORD PTR [ebp-0x4],eax
10017a1b:	mov    DWORD PTR [ebp-0x1c],eax
10017a1e:	mov    eax,DWORD PTR [ebp-0x1c]
10017a21:	cmp    eax,DWORD PTR [ebp+0x10]
10017a24:	jge    0x10017a39
10017a26:	mov    esi,DWORD PTR [ebp+0x8]
10017a29:	mov    ecx,esi
10017a2b:	call   DWORD PTR [ebp+0x14]
10017a2e:	add    esi,DWORD PTR [ebp+0xc]
10017a31:	mov    DWORD PTR [ebp+0x8],esi
10017a34:	inc    DWORD PTR [ebp-0x1c]
10017a37:	jmp    0x10017a1e
10017a39:	mov    DWORD PTR [ebp-0x20],0x1
10017a40:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10017a47:	call   0x10017a54
10017a4c:	call   0x10017fcd
10017a51:	ret    0x14
10017a54:	cmp    DWORD PTR [ebp-0x20],0x0
10017a58:	jne    0x10017a6b
10017a5a:	push   DWORD PTR [ebp+0x18]
10017a5d:	push   DWORD PTR [ebp-0x1c]
10017a60:	push   DWORD PTR [ebp+0xc]
10017a63:	push   DWORD PTR [ebp+0x8]
10017a66:	call   0x10017586
10017a6b:	ret    
10017a6c:	mov    eax,DWORD PTR [esp+0x4]
10017a70:	test   eax,eax
10017a72:	je     0x10017a86
10017a74:	sub    eax,0x8
10017a77:	cmp    DWORD PTR [eax],0xdddd
10017a7d:	jne    0x10017a86
10017a7f:	push   eax
10017a80:	call   0x10016b85
10017a85:	pop    ecx
10017a86:	ret    
10017a87:	int3   
10017a88:	int3   
10017a89:	int3   
10017a8a:	int3   
10017a8b:	int3   
10017a8c:	int3   
10017a8d:	int3   
10017a8e:	int3   
10017a8f:	int3   
10017a90:	cmp    cl,0x40
10017a93:	jae    0x10017aaa
10017a95:	cmp    cl,0x20
10017a98:	jae    0x10017aa0
10017a9a:	shrd   eax,edx,cl
10017a9d:	shr    edx,cl
10017a9f:	ret    
10017aa0:	mov    eax,edx
10017aa2:	xor    edx,edx
10017aa4:	and    cl,0x1f
10017aa7:	shr    eax,cl
10017aa9:	ret    
10017aaa:	xor    eax,eax
10017aac:	xor    edx,edx
10017aae:	ret    
10017aaf:	push   0xc
10017ab1:	push   0x10085760
10017ab6:	call   0x10017f88
10017abb:	mov    ecx,DWORD PTR [ebp+0x8]
10017abe:	xor    edi,edi
10017ac0:	cmp    ecx,edi
10017ac2:	jbe    0x10017af2
10017ac4:	push   0xffffffe0
10017ac6:	pop    eax
10017ac7:	xor    edx,edx
10017ac9:	div    ecx
10017acb:	cmp    eax,DWORD PTR [ebp+0xc]
10017ace:	sbb    eax,eax
10017ad0:	inc    eax
10017ad1:	jne    0x10017af2
10017ad3:	call   0x1001a18e
10017ad8:	mov    DWORD PTR [eax],0xc
10017ade:	push   edi
10017adf:	push   edi
10017ae0:	push   edi
10017ae1:	push   edi
10017ae2:	push   edi
10017ae3:	call   0x1001616f
10017ae8:	add    esp,0x14
10017aeb:	xor    eax,eax
10017aed:	jmp    0x10017bc7
10017af2:	imul   ecx,DWORD PTR [ebp+0xc]
10017af6:	mov    esi,ecx
10017af8:	mov    DWORD PTR [ebp+0x8],esi
10017afb:	cmp    esi,edi
10017afd:	jne    0x10017b02
10017aff:	xor    esi,esi
10017b01:	inc    esi
10017b02:	xor    ebx,ebx
10017b04:	mov    DWORD PTR [ebp-0x1c],ebx
10017b07:	cmp    esi,0xffffffe0
10017b0a:	ja     0x10017b75
10017b0c:	cmp    DWORD PTR ds:0x10098bf8,0x3
10017b13:	jne    0x10017b60
10017b15:	add    esi,0xf
10017b18:	and    esi,0xfffffff0
10017b1b:	mov    DWORD PTR [ebp+0xc],esi
10017b1e:	mov    eax,DWORD PTR [ebp+0x8]
10017b21:	cmp    eax,DWORD PTR ds:0x10098be8
10017b27:	ja     0x10017b60
10017b29:	push   0x4
10017b2b:	call   0x1001b83b
10017b30:	pop    ecx
10017b31:	mov    DWORD PTR [ebp-0x4],edi
10017b34:	push   DWORD PTR [ebp+0x8]
10017b37:	call   0x1001c088
10017b3c:	pop    ecx
10017b3d:	mov    DWORD PTR [ebp-0x1c],eax
10017b40:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10017b47:	call   0x10017bab
10017b4c:	mov    ebx,DWORD PTR [ebp-0x1c]
10017b4f:	cmp    ebx,edi
10017b51:	je     0x10017b64
10017b53:	push   DWORD PTR [ebp+0x8]
10017b56:	push   edi
10017b57:	push   ebx
10017b58:	call   0x10016580
10017b5d:	add    esp,0xc
10017b60:	cmp    ebx,edi
10017b62:	jne    0x10017bc5
10017b64:	push   esi
10017b65:	push   0x8
10017b67:	push   DWORD PTR ds:0x10097220
10017b6d:	call   DWORD PTR ds:0x100341dc
10017b73:	mov    ebx,eax
10017b75:	cmp    ebx,edi
10017b77:	jne    0x10017bc5
10017b79:	cmp    DWORD PTR ds:0x10097694,edi
10017b7f:	je     0x10017bb4
10017b81:	push   esi
10017b82:	call   0x1001a347
10017b87:	pop    ecx
10017b88:	test   eax,eax
10017b8a:	jne    0x10017b02
10017b90:	mov    eax,DWORD PTR [ebp+0x10]
10017b93:	cmp    eax,edi
10017b95:	je     0x10017aeb
10017b9b:	mov    DWORD PTR [eax],0xc
10017ba1:	jmp    0x10017aeb
10017ba6:	xor    edi,edi
10017ba8:	mov    esi,DWORD PTR [ebp+0xc]
10017bab:	push   0x4
10017bad:	call   0x1001b763
10017bb2:	pop    ecx
10017bb3:	ret    
10017bb4:	cmp    ebx,edi
10017bb6:	jne    0x10017bc5
10017bb8:	mov    eax,DWORD PTR [ebp+0x10]
10017bbb:	cmp    eax,edi
10017bbd:	je     0x10017bc5
10017bbf:	mov    DWORD PTR [eax],0xc
10017bc5:	mov    eax,ebx
10017bc7:	call   0x10017fcd
10017bcc:	ret    
10017bcd:	push   0x10
10017bcf:	push   0x10085780
10017bd4:	call   0x10017f88
10017bd9:	mov    ebx,DWORD PTR [ebp+0x8]
10017bdc:	test   ebx,ebx
10017bde:	jne    0x10017bee
10017be0:	push   DWORD PTR [ebp+0xc]
10017be3:	call   0x10016c62
10017be8:	pop    ecx
10017be9:	jmp    0x10017dba
10017bee:	mov    esi,DWORD PTR [ebp+0xc]
10017bf1:	test   esi,esi
10017bf3:	jne    0x10017c01
10017bf5:	push   ebx
10017bf6:	call   0x10016b85
10017bfb:	pop    ecx
10017bfc:	jmp    0x10017db8
10017c01:	cmp    DWORD PTR ds:0x10098bf8,0x3
10017c08:	jne    0x10017da1
10017c0e:	xor    edi,edi
10017c10:	mov    DWORD PTR [ebp-0x1c],edi
10017c13:	cmp    esi,0xffffffe0
10017c16:	ja     0x10017da6
10017c1c:	push   0x4
10017c1e:	call   0x1001b83b
10017c23:	pop    ecx
10017c24:	mov    DWORD PTR [ebp-0x4],edi
10017c27:	push   ebx
10017c28:	call   0x1001b8b4
10017c2d:	pop    ecx
10017c2e:	mov    DWORD PTR [ebp-0x20],eax
10017c31:	cmp    eax,edi
10017c33:	je     0x10017cd7
10017c39:	cmp    esi,DWORD PTR ds:0x10098be8
10017c3f:	ja     0x10017c8a
10017c41:	push   esi
10017c42:	push   ebx
10017c43:	push   eax
10017c44:	call   0x1001bda9
10017c49:	add    esp,0xc
10017c4c:	test   eax,eax
10017c4e:	je     0x10017c55
10017c50:	mov    DWORD PTR [ebp-0x1c],ebx
10017c53:	jmp    0x10017c8a
10017c55:	push   esi
10017c56:	call   0x1001c088
10017c5b:	pop    ecx
10017c5c:	mov    DWORD PTR [ebp-0x1c],eax
10017c5f:	cmp    eax,edi
10017c61:	je     0x10017c8a
10017c63:	mov    eax,DWORD PTR [ebx-0x4]
10017c66:	dec    eax
10017c67:	cmp    eax,esi
10017c69:	jb     0x10017c6d
10017c6b:	mov    eax,esi
10017c6d:	push   eax
10017c6e:	push   ebx
10017c6f:	push   DWORD PTR [ebp-0x1c]
10017c72:	call   0x10016820
10017c77:	push   ebx
10017c78:	call   0x1001b8b4
10017c7d:	mov    DWORD PTR [ebp-0x20],eax
10017c80:	push   ebx
10017c81:	push   eax
10017c82:	call   0x1001b8df
10017c87:	add    esp,0x18
10017c8a:	cmp    DWORD PTR [ebp-0x1c],edi
10017c8d:	jne    0x10017cd7
10017c8f:	cmp    esi,edi
10017c91:	jne    0x10017c99
10017c93:	xor    esi,esi
10017c95:	inc    esi
10017c96:	mov    DWORD PTR [ebp+0xc],esi
10017c99:	add    esi,0xf
10017c9c:	and    esi,0xfffffff0
10017c9f:	mov    DWORD PTR [ebp+0xc],esi
10017ca2:	push   esi
10017ca3:	push   edi
10017ca4:	push   DWORD PTR ds:0x10097220
10017caa:	call   DWORD PTR ds:0x100341dc
10017cb0:	mov    DWORD PTR [ebp-0x1c],eax
10017cb3:	cmp    eax,edi
10017cb5:	je     0x10017cd7
10017cb7:	mov    eax,DWORD PTR [ebx-0x4]
10017cba:	dec    eax
10017cbb:	cmp    eax,esi
10017cbd:	jb     0x10017cc1
10017cbf:	mov    eax,esi
10017cc1:	push   eax
10017cc2:	push   ebx
10017cc3:	push   DWORD PTR [ebp-0x1c]
10017cc6:	call   0x10016820
10017ccb:	push   ebx
10017ccc:	push   DWORD PTR [ebp-0x20]
10017ccf:	call   0x1001b8df
10017cd4:	add    esp,0x14
10017cd7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10017cde:	call   0x10017d11
10017ce3:	cmp    DWORD PTR [ebp-0x20],0x0
10017ce7:	jne    0x10017d1a
10017ce9:	test   esi,esi
10017ceb:	jne    0x10017cee
10017ced:	inc    esi
10017cee:	add    esi,0xf
10017cf1:	and    esi,0xfffffff0
10017cf4:	mov    DWORD PTR [ebp+0xc],esi
10017cf7:	push   esi
10017cf8:	push   ebx
10017cf9:	push   0x0
10017cfb:	push   DWORD PTR ds:0x10097220
10017d01:	call   DWORD PTR ds:0x100341e4
10017d07:	mov    edi,eax
10017d09:	jmp    0x10017d1d
10017d0b:	mov    esi,DWORD PTR [ebp+0xc]
10017d0e:	mov    ebx,DWORD PTR [ebp+0x8]
10017d11:	push   0x4
10017d13:	call   0x1001b763
10017d18:	pop    ecx
10017d19:	ret    
10017d1a:	mov    edi,DWORD PTR [ebp-0x1c]
10017d1d:	test   edi,edi
10017d1f:	jne    0x10017de4
10017d25:	cmp    DWORD PTR ds:0x10097694,edi
10017d2b:	je     0x10017d59
10017d2d:	push   esi
10017d2e:	call   0x1001a347
10017d33:	pop    ecx
10017d34:	test   eax,eax
10017d36:	jne    0x10017c0e
10017d3c:	call   0x1001a18e
10017d41:	cmp    DWORD PTR [ebp-0x20],edi
10017d44:	jne    0x10017db2
10017d46:	mov    esi,eax
10017d48:	call   DWORD PTR ds:0x1003407c
10017d4e:	push   eax
10017d4f:	call   0x1001a153
10017d54:	pop    ecx
10017d55:	mov    DWORD PTR [esi],eax
10017d57:	jmp    0x10017db8
10017d59:	test   edi,edi
10017d5b:	jne    0x10017de4
10017d61:	call   0x1001a18e
10017d66:	cmp    DWORD PTR [ebp-0x20],edi
10017d69:	je     0x10017dd3
10017d6b:	mov    DWORD PTR [eax],0xc
10017d71:	jmp    0x10017de4
10017d73:	test   esi,esi
10017d75:	jne    0x10017d78
10017d77:	inc    esi
10017d78:	push   esi
10017d79:	push   ebx
10017d7a:	push   0x0
10017d7c:	push   DWORD PTR ds:0x10097220
10017d82:	call   DWORD PTR ds:0x100341e4
10017d88:	mov    edi,eax
10017d8a:	test   edi,edi
10017d8c:	jne    0x10017de4
10017d8e:	cmp    DWORD PTR ds:0x10097694,eax
10017d94:	je     0x10017dca
10017d96:	push   esi
10017d97:	call   0x1001a347
10017d9c:	pop    ecx
10017d9d:	test   eax,eax
10017d9f:	je     0x10017dc0
10017da1:	cmp    esi,0xffffffe0
10017da4:	jbe    0x10017d73
10017da6:	push   esi
10017da7:	call   0x1001a347
10017dac:	pop    ecx
10017dad:	call   0x1001a18e
10017db2:	mov    DWORD PTR [eax],0xc
10017db8:	xor    eax,eax
10017dba:	call   0x10017fcd
10017dbf:	ret    
10017dc0:	call   0x1001a18e
10017dc5:	jmp    0x10017d46
10017dca:	test   edi,edi
10017dcc:	jne    0x10017de4
10017dce:	call   0x1001a18e
10017dd3:	mov    esi,eax
10017dd5:	call   DWORD PTR ds:0x1003407c
10017ddb:	push   eax
10017ddc:	call   0x1001a153
10017de1:	mov    DWORD PTR [esi],eax
10017de3:	pop    ecx
10017de4:	mov    eax,edi
10017de6:	jmp    0x10017dba
10017de8:	int3   
10017de9:	int3   
10017dea:	int3   
10017deb:	int3   
10017dec:	int3   
10017ded:	int3   
10017dee:	int3   
10017def:	int3   
10017df0:	sub    esp,0x14
10017df3:	push   ebx
10017df4:	mov    ebx,DWORD PTR [esp+0x20]
10017df8:	push   ebp
10017df9:	push   esi
10017dfa:	mov    esi,DWORD PTR [ebx+0x8]
10017dfd:	xor    esi,DWORD PTR ds:0x100951fc
10017e03:	push   edi
10017e04:	mov    eax,DWORD PTR [esi]
10017e06:	cmp    eax,0xfffffffe
10017e09:	mov    BYTE PTR [esp+0x13],0x0
10017e0e:	mov    DWORD PTR [esp+0x18],0x1
10017e16:	lea    edi,[ebx+0x10]
10017e19:	je     0x10017e28
10017e1b:	mov    ecx,DWORD PTR [esi+0x4]
10017e1e:	add    ecx,edi
10017e20:	xor    ecx,DWORD PTR [eax+edi*1]
10017e23:	call   0x10015b2b
10017e28:	mov    ecx,DWORD PTR [esi+0xc]
10017e2b:	mov    eax,DWORD PTR [esi+0x8]
10017e2e:	add    ecx,edi
10017e30:	xor    ecx,DWORD PTR [eax+edi*1]
10017e33:	call   0x10015b2b
10017e38:	mov    eax,DWORD PTR [esp+0x28]
10017e3c:	test   BYTE PTR [eax+0x4],0x66
10017e40:	jne    0x10017f65
10017e46:	mov    ebp,DWORD PTR [ebx+0xc]
10017e49:	cmp    ebp,0xfffffffe
10017e4c:	mov    ecx,DWORD PTR [esp+0x30]
10017e50:	lea    edx,[esp+0x1c]
10017e54:	mov    DWORD PTR [esp+0x1c],eax
10017e58:	mov    DWORD PTR [esp+0x20],ecx
10017e5c:	mov    DWORD PTR [ebx-0x4],edx
10017e5f:	je     0x10017ebf
10017e61:	lea    eax,[ebp+ebp*2+0x0]
10017e65:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
10017e69:	test   ecx,ecx
10017e6b:	lea    ebx,[esi+eax*4+0x10]
10017e6f:	mov    eax,DWORD PTR [ebx]
10017e71:	mov    DWORD PTR [esp+0x14],eax
10017e75:	je     0x10017e8d
10017e77:	mov    edx,edi
10017e79:	call   0x1001ea3a
10017e7e:	test   eax,eax
10017e80:	mov    BYTE PTR [esp+0x13],0x1
10017e85:	jl     0x10017ecb
10017e87:	jg     0x10017ed5
10017e89:	mov    eax,DWORD PTR [esp+0x14]
10017e8d:	cmp    eax,0xfffffffe
10017e90:	mov    ebp,eax
10017e92:	jne    0x10017e61
10017e94:	cmp    BYTE PTR [esp+0x13],0x0
10017e99:	je     0x10017ebf
10017e9b:	mov    eax,DWORD PTR [esi]
10017e9d:	cmp    eax,0xfffffffe
10017ea0:	je     0x10017eaf
10017ea2:	mov    ecx,DWORD PTR [esi+0x4]
10017ea5:	add    ecx,edi
10017ea7:	xor    ecx,DWORD PTR [eax+edi*1]
10017eaa:	call   0x10015b2b
10017eaf:	mov    ecx,DWORD PTR [esi+0xc]
10017eb2:	mov    eax,DWORD PTR [esi+0x8]
10017eb5:	add    ecx,edi
10017eb7:	xor    ecx,DWORD PTR [eax+edi*1]
10017eba:	call   0x10015b2b
10017ebf:	mov    eax,DWORD PTR [esp+0x18]
10017ec3:	pop    edi
10017ec4:	pop    esi
10017ec5:	pop    ebp
10017ec6:	pop    ebx
10017ec7:	add    esp,0x14
10017eca:	ret    
10017ecb:	mov    DWORD PTR [esp+0x18],0x0
10017ed3:	jmp    0x10017e9b
10017ed5:	mov    ecx,DWORD PTR [esp+0x28]
10017ed9:	cmp    DWORD PTR [ecx],0xe06d7363
10017edf:	jne    0x10017f0b
10017ee1:	cmp    DWORD PTR ds:0x1007deb8,0x0
10017ee8:	je     0x10017f0b
10017eea:	push   0x1007deb8
10017eef:	call   0x100202b0
10017ef4:	add    esp,0x4
10017ef7:	test   eax,eax
10017ef9:	je     0x10017f0b
10017efb:	mov    edx,DWORD PTR [esp+0x28]
10017eff:	push   0x1
10017f01:	push   edx
10017f02:	call   DWORD PTR ds:0x1007deb8
10017f08:	add    esp,0x8
10017f0b:	mov    ecx,DWORD PTR [esp+0x2c]
10017f0f:	call   0x1001ea6a
10017f14:	mov    eax,DWORD PTR [esp+0x2c]
10017f18:	cmp    DWORD PTR [eax+0xc],ebp
10017f1b:	je     0x10017f30
10017f1d:	push   0x100951fc
10017f22:	push   edi
10017f23:	mov    edx,ebp
10017f25:	mov    ecx,eax
10017f27:	call   0x1001ea84
10017f2c:	mov    eax,DWORD PTR [esp+0x2c]
10017f30:	mov    ecx,DWORD PTR [esp+0x14]
10017f34:	mov    DWORD PTR [eax+0xc],ecx
10017f37:	mov    eax,DWORD PTR [esi]
10017f39:	cmp    eax,0xfffffffe
10017f3c:	je     0x10017f4b
10017f3e:	mov    ecx,DWORD PTR [esi+0x4]
10017f41:	add    ecx,edi
10017f43:	xor    ecx,DWORD PTR [eax+edi*1]
10017f46:	call   0x10015b2b
10017f4b:	mov    ecx,DWORD PTR [esi+0xc]
10017f4e:	mov    edx,DWORD PTR [esi+0x8]
10017f51:	add    ecx,edi
10017f53:	xor    ecx,DWORD PTR [edx+edi*1]
10017f56:	call   0x10015b2b
10017f5b:	mov    ecx,DWORD PTR [ebx+0x8]
10017f5e:	mov    edx,edi
10017f60:	jmp    0x1001ea51
10017f65:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
10017f69:	je     0x10017ebf
10017f6f:	push   0x100951fc
10017f74:	push   edi
10017f75:	mov    ecx,ebx
10017f77:	mov    edx,0xfffffffe
10017f7c:	call   0x1001ea84
10017f81:	jmp    0x10017e9b
10017f86:	int3   
10017f87:	int3   
10017f88:	push   0x10017df0
10017f8d:	push   DWORD PTR fs:0x0
10017f94:	mov    eax,DWORD PTR [esp+0x10]
10017f98:	mov    DWORD PTR [esp+0x10],ebp
10017f9c:	lea    ebp,[esp+0x10]
10017fa0:	sub    esp,eax
10017fa2:	push   ebx
10017fa3:	push   esi
10017fa4:	push   edi
10017fa5:	mov    eax,ds:0x100951fc
10017faa:	xor    DWORD PTR [ebp-0x4],eax
10017fad:	xor    eax,ebp
10017faf:	push   eax
10017fb0:	mov    DWORD PTR [ebp-0x18],esp
10017fb3:	push   DWORD PTR [ebp-0x8]
10017fb6:	mov    eax,DWORD PTR [ebp-0x4]
10017fb9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10017fc0:	mov    DWORD PTR [ebp-0x8],eax
10017fc3:	lea    eax,[ebp-0x10]
10017fc6:	mov    fs:0x0,eax
10017fcc:	ret    
10017fcd:	mov    ecx,DWORD PTR [ebp-0x10]
10017fd0:	mov    DWORD PTR fs:0x0,ecx
10017fd7:	pop    ecx
10017fd8:	pop    edi
10017fd9:	pop    edi
10017fda:	pop    esi
10017fdb:	pop    ebx
10017fdc:	mov    esp,ebp
10017fde:	pop    ebp
10017fdf:	push   ecx
10017fe0:	ret    
10017fe1:	push   eax
10017fe2:	push   DWORD PTR fs:0x0
10017fe9:	lea    eax,[esp+0xc]
10017fed:	sub    esp,DWORD PTR [esp+0xc]
10017ff1:	push   ebx
10017ff2:	push   esi
10017ff3:	push   edi
10017ff4:	mov    DWORD PTR [eax],ebp
10017ff6:	mov    ebp,eax
10017ff8:	mov    eax,ds:0x100951fc
10017ffd:	xor    eax,ebp
10017fff:	push   eax
10018000:	push   DWORD PTR [ebp-0x4]
10018003:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001800a:	lea    eax,[ebp-0xc]
1001800d:	mov    fs:0x0,eax
10018013:	ret    
10018014:	push   eax
10018015:	push   DWORD PTR fs:0x0
1001801c:	lea    eax,[esp+0xc]
10018020:	sub    esp,DWORD PTR [esp+0xc]
10018024:	push   ebx
10018025:	push   esi
10018026:	push   edi
10018027:	mov    DWORD PTR [eax],ebp
10018029:	mov    ebp,eax
1001802b:	mov    eax,ds:0x100951fc
10018030:	xor    eax,ebp
10018032:	push   eax
10018033:	mov    DWORD PTR [ebp-0x10],esp
10018036:	push   DWORD PTR [ebp-0x4]
10018039:	mov    DWORD PTR [ebp-0x4],0xffffffff
10018040:	lea    eax,[ebp-0xc]
10018043:	mov    fs:0x0,eax
10018049:	ret    
1001804a:	push   ebx
1001804b:	push   ebp
1001804c:	push   esi
1001804d:	mov    esi,DWORD PTR [esp+0x10]
10018051:	mov    eax,DWORD PTR [esi+0xbc]
10018057:	xor    ebp,ebp
10018059:	cmp    eax,ebp
1001805b:	push   edi
1001805c:	je     0x100180cd
1001805e:	cmp    eax,0x10096118
10018063:	je     0x100180cd
10018065:	mov    eax,DWORD PTR [esi+0xb0]
1001806b:	cmp    eax,ebp
1001806d:	je     0x100180cd
1001806f:	cmp    DWORD PTR [eax],ebp
10018071:	jne    0x100180cd
10018073:	mov    eax,DWORD PTR [esi+0xb8]
10018079:	cmp    eax,ebp
1001807b:	je     0x10018094
1001807d:	cmp    DWORD PTR [eax],ebp
1001807f:	jne    0x10018094
10018081:	push   eax
10018082:	call   0x10016b85
10018087:	push   DWORD PTR [esi+0xbc]
1001808d:	call   0x1002053b
10018092:	pop    ecx
10018093:	pop    ecx
10018094:	mov    eax,DWORD PTR [esi+0xb4]
1001809a:	cmp    eax,ebp
1001809c:	je     0x100180b5
1001809e:	cmp    DWORD PTR [eax],ebp
100180a0:	jne    0x100180b5
100180a2:	push   eax
100180a3:	call   0x10016b85
100180a8:	push   DWORD PTR [esi+0xbc]
100180ae:	call   0x100204fb
100180b3:	pop    ecx
100180b4:	pop    ecx
100180b5:	push   DWORD PTR [esi+0xb0]
100180bb:	call   0x10016b85
100180c0:	push   DWORD PTR [esi+0xbc]
100180c6:	call   0x10016b85
100180cb:	pop    ecx
100180cc:	pop    ecx
100180cd:	mov    eax,DWORD PTR [esi+0xc0]
100180d3:	cmp    eax,ebp
100180d5:	je     0x1001811b
100180d7:	cmp    DWORD PTR [eax],ebp
100180d9:	jne    0x1001811b
100180db:	mov    eax,DWORD PTR [esi+0xc4]
100180e1:	sub    eax,0xfe
100180e6:	push   eax
100180e7:	call   0x10016b85
100180ec:	mov    eax,DWORD PTR [esi+0xcc]
100180f2:	mov    edi,0x80
100180f7:	sub    eax,edi
100180f9:	push   eax
100180fa:	call   0x10016b85
100180ff:	mov    eax,DWORD PTR [esi+0xd0]
10018105:	sub    eax,edi
10018107:	push   eax
10018108:	call   0x10016b85
1001810d:	push   DWORD PTR [esi+0xc0]
10018113:	call   0x10016b85
10018118:	add    esp,0x10
1001811b:	lea    edi,[esi+0xd4]
10018121:	mov    eax,DWORD PTR [edi]
10018123:	cmp    eax,0x10096058
10018128:	je     0x10018141
1001812a:	cmp    DWORD PTR [eax+0xb4],ebp
10018130:	jne    0x10018141
10018132:	push   eax
10018133:	call   0x1002036b
10018138:	push   DWORD PTR [edi]
1001813a:	call   0x10016b85
1001813f:	pop    ecx
10018140:	pop    ecx
10018141:	push   0x6
10018143:	lea    edi,[esi+0x50]
10018146:	pop    ebx
10018147:	cmp    DWORD PTR [edi-0x8],0x10095a28
1001814e:	je     0x10018161
10018150:	mov    eax,DWORD PTR [edi]
10018152:	cmp    eax,ebp
10018154:	je     0x10018161
10018156:	cmp    DWORD PTR [eax],ebp
10018158:	jne    0x10018161
1001815a:	push   eax
1001815b:	call   0x10016b85
10018160:	pop    ecx
10018161:	cmp    DWORD PTR [edi-0x4],ebp
10018164:	je     0x10018178
10018166:	mov    eax,DWORD PTR [edi+0x4]
10018169:	cmp    eax,ebp
1001816b:	je     0x10018178
1001816d:	cmp    DWORD PTR [eax],ebp
1001816f:	jne    0x10018178
10018171:	push   eax
10018172:	call   0x10016b85
10018177:	pop    ecx
10018178:	add    edi,0x10
1001817b:	dec    ebx
1001817c:	jne    0x10018147
1001817e:	push   esi
1001817f:	call   0x10016b85
10018184:	pop    ecx
10018185:	pop    edi
10018186:	pop    esi
10018187:	pop    ebp
10018188:	pop    ebx
10018189:	ret    
1001818a:	push   ebx
1001818b:	push   ebp
1001818c:	push   esi
1001818d:	mov    esi,DWORD PTR [esp+0x10]
10018191:	push   edi
10018192:	mov    edi,DWORD PTR ds:0x100340dc
10018198:	push   esi
10018199:	call   edi
1001819b:	mov    eax,DWORD PTR [esi+0xb0]
100181a1:	test   eax,eax
100181a3:	je     0x100181a8
100181a5:	push   eax
100181a6:	call   edi
100181a8:	mov    eax,DWORD PTR [esi+0xb8]
100181ae:	test   eax,eax
100181b0:	je     0x100181b5
100181b2:	push   eax
100181b3:	call   edi
100181b5:	mov    eax,DWORD PTR [esi+0xb4]
100181bb:	test   eax,eax
100181bd:	je     0x100181c2
100181bf:	push   eax
100181c0:	call   edi
100181c2:	mov    eax,DWORD PTR [esi+0xc0]
100181c8:	test   eax,eax
100181ca:	je     0x100181cf
100181cc:	push   eax
100181cd:	call   edi
100181cf:	push   0x6
100181d1:	lea    ebx,[esi+0x50]
100181d4:	pop    ebp
100181d5:	cmp    DWORD PTR [ebx-0x8],0x10095a28
100181dc:	je     0x100181e7
100181de:	mov    eax,DWORD PTR [ebx]
100181e0:	test   eax,eax
100181e2:	je     0x100181e7
100181e4:	push   eax
100181e5:	call   edi
100181e7:	cmp    DWORD PTR [ebx-0x4],0x0
100181eb:	je     0x100181f7
100181ed:	mov    eax,DWORD PTR [ebx+0x4]
100181f0:	test   eax,eax
100181f2:	je     0x100181f7
100181f4:	push   eax
100181f5:	call   edi
100181f7:	add    ebx,0x10
100181fa:	dec    ebp
100181fb:	jne    0x100181d5
100181fd:	mov    eax,DWORD PTR [esi+0xd4]
10018203:	add    eax,0xb4
10018208:	push   eax
10018209:	call   edi
1001820b:	pop    edi
1001820c:	pop    esi
1001820d:	pop    ebp
1001820e:	pop    ebx
1001820f:	ret    
10018210:	push   esi
10018211:	mov    esi,DWORD PTR [esp+0x8]
10018215:	test   esi,esi
10018217:	je     0x10018298
10018219:	push   ebx
1001821a:	push   ebp
1001821b:	push   edi
1001821c:	mov    edi,DWORD PTR ds:0x100340ec
10018222:	push   esi
10018223:	call   edi
10018225:	mov    eax,DWORD PTR [esi+0xb0]
1001822b:	test   eax,eax
1001822d:	je     0x10018232
1001822f:	push   eax
10018230:	call   edi
10018232:	mov    eax,DWORD PTR [esi+0xb8]
10018238:	test   eax,eax
1001823a:	je     0x1001823f
1001823c:	push   eax
1001823d:	call   edi
1001823f:	mov    eax,DWORD PTR [esi+0xb4]
10018245:	test   eax,eax
10018247:	je     0x1001824c
10018249:	push   eax
1001824a:	call   edi
1001824c:	mov    eax,DWORD PTR [esi+0xc0]
10018252:	test   eax,eax
10018254:	je     0x10018259
10018256:	push   eax
10018257:	call   edi
10018259:	push   0x6
1001825b:	lea    ebx,[esi+0x50]
1001825e:	pop    ebp
1001825f:	cmp    DWORD PTR [ebx-0x8],0x10095a28
10018266:	je     0x10018271
10018268:	mov    eax,DWORD PTR [ebx]
1001826a:	test   eax,eax
1001826c:	je     0x10018271
1001826e:	push   eax
1001826f:	call   edi
10018271:	cmp    DWORD PTR [ebx-0x4],0x0
10018275:	je     0x10018281
10018277:	mov    eax,DWORD PTR [ebx+0x4]
1001827a:	test   eax,eax
1001827c:	je     0x10018281
1001827e:	push   eax
1001827f:	call   edi
10018281:	add    ebx,0x10
10018284:	dec    ebp
10018285:	jne    0x1001825f
10018287:	mov    eax,DWORD PTR [esi+0xd4]
1001828d:	add    eax,0xb4
10018292:	push   eax
10018293:	call   edi
10018295:	pop    edi
10018296:	pop    ebp
10018297:	pop    ebx
10018298:	mov    eax,esi
1001829a:	pop    esi
1001829b:	ret    
1001829c:	test   edi,edi
1001829e:	je     0x100182d7
100182a0:	test   eax,eax
100182a2:	je     0x100182d7
100182a4:	push   esi
100182a5:	mov    esi,DWORD PTR [eax]
100182a7:	cmp    esi,edi
100182a9:	je     0x100182d3
100182ab:	push   edi
100182ac:	mov    DWORD PTR [eax],edi
100182ae:	call   0x1001818a
100182b3:	test   esi,esi
100182b5:	pop    ecx
100182b6:	je     0x100182d3
100182b8:	push   esi
100182b9:	call   0x10018210
100182be:	cmp    DWORD PTR [esi],0x0
100182c1:	pop    ecx
100182c2:	jne    0x100182d3
100182c4:	cmp    esi,0x10095a30
100182ca:	je     0x100182d3
100182cc:	push   esi
100182cd:	call   0x1001804a
100182d2:	pop    ecx
100182d3:	mov    eax,edi
100182d5:	pop    esi
100182d6:	ret    
100182d7:	xor    eax,eax
100182d9:	ret    
100182da:	push   0xc
100182dc:	push   0x100857a0
100182e1:	call   0x10017f88
100182e6:	call   0x100199a6
100182eb:	mov    esi,eax
100182ed:	mov    eax,ds:0x10095a20
100182f2:	test   DWORD PTR [esi+0x70],eax
100182f5:	je     0x10018319
100182f7:	cmp    DWORD PTR [esi+0x6c],0x0
100182fb:	je     0x10018319
100182fd:	call   0x100199a6
10018302:	mov    esi,DWORD PTR [eax+0x6c]
10018305:	test   esi,esi
10018307:	jne    0x10018311
10018309:	push   0x20
1001830b:	call   0x10019e4f
10018310:	pop    ecx
10018311:	mov    eax,esi
10018313:	call   0x10017fcd
10018318:	ret    
10018319:	push   0xc
1001831b:	call   0x1001b83b
10018320:	pop    ecx
10018321:	and    DWORD PTR [ebp-0x4],0x0
10018325:	lea    eax,[esi+0x6c]
10018328:	mov    edi,DWORD PTR ds:0x10095b08
1001832e:	call   0x1001829c
10018333:	mov    DWORD PTR [ebp-0x1c],eax
10018336:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001833d:	call   0x10018344
10018342:	jmp    0x10018305
10018344:	push   0xc
10018346:	call   0x1001b763
1001834b:	pop    ecx
1001834c:	mov    esi,DWORD PTR [ebp-0x1c]
1001834f:	ret    
10018350:	push   ebp
10018351:	mov    ebp,esp
10018353:	sub    esp,0x14
10018356:	mov    eax,ds:0x100951fc
1001835b:	xor    eax,ebp
1001835d:	mov    DWORD PTR [ebp-0x4],eax
10018360:	push   ebx
10018361:	push   esi
10018362:	xor    ebx,ebx
10018364:	cmp    DWORD PTR ds:0x10096e4c,ebx
1001836a:	push   edi
1001836b:	mov    esi,ecx
1001836d:	jne    0x100183a7
1001836f:	push   ebx
10018370:	push   ebx
10018371:	xor    edi,edi
10018373:	inc    edi
10018374:	push   edi
10018375:	push   0x1008432c
1001837a:	push   0x100
1001837f:	push   ebx
10018380:	call   DWORD PTR ds:0x10034224
10018386:	test   eax,eax
10018388:	je     0x10018392
1001838a:	mov    DWORD PTR ds:0x10096e4c,edi
10018390:	jmp    0x100183a7
10018392:	call   DWORD PTR ds:0x1003407c
10018398:	cmp    eax,0x78
1001839b:	jne    0x100183a7
1001839d:	mov    DWORD PTR ds:0x10096e4c,0x2
100183a7:	cmp    DWORD PTR [ebp+0x14],ebx
100183aa:	jle    0x100183ce
100183ac:	mov    ecx,DWORD PTR [ebp+0x14]
100183af:	mov    eax,DWORD PTR [ebp+0x10]
100183b2:	dec    ecx
100183b3:	cmp    BYTE PTR [eax],bl
100183b5:	je     0x100183bf
100183b7:	inc    eax
100183b8:	cmp    ecx,ebx
100183ba:	jne    0x100183b2
100183bc:	or     ecx,0xffffffff
100183bf:	mov    eax,DWORD PTR [ebp+0x14]
100183c2:	sub    eax,ecx
100183c4:	dec    eax
100183c5:	cmp    eax,DWORD PTR [ebp+0x14]
100183c8:	jge    0x100183cb
100183ca:	inc    eax
100183cb:	mov    DWORD PTR [ebp+0x14],eax
100183ce:	mov    eax,ds:0x10096e4c
100183d3:	cmp    eax,0x2
100183d6:	je     0x10018587
100183dc:	cmp    eax,ebx
100183de:	je     0x10018587
100183e4:	cmp    eax,0x1
100183e7:	jne    0x100185b8
100183ed:	cmp    DWORD PTR [ebp+0x20],ebx
100183f0:	mov    DWORD PTR [ebp-0x8],ebx
100183f3:	jne    0x100183fd
100183f5:	mov    eax,DWORD PTR [esi]
100183f7:	mov    eax,DWORD PTR [eax+0x4]
100183fa:	mov    DWORD PTR [ebp+0x20],eax
100183fd:	mov    esi,DWORD PTR ds:0x10034080
10018403:	xor    eax,eax
10018405:	cmp    DWORD PTR [ebp+0x24],ebx
10018408:	push   ebx
10018409:	push   ebx
1001840a:	push   DWORD PTR [ebp+0x14]
1001840d:	setne  al
10018410:	push   DWORD PTR [ebp+0x10]
10018413:	lea    eax,[eax*8+0x1]
1001841a:	push   eax
1001841b:	push   DWORD PTR [ebp+0x20]
1001841e:	call   esi
10018420:	mov    edi,eax
10018422:	cmp    edi,ebx
10018424:	je     0x100185b8
1001842a:	jle    0x1001846f
1001842c:	push   0xffffffe0
1001842e:	xor    edx,edx
10018430:	pop    eax
10018431:	div    edi
10018433:	cmp    eax,0x2
10018436:	jb     0x1001846f
10018438:	lea    eax,[edi+edi*1+0x8]
1001843c:	cmp    eax,0x400
10018441:	ja     0x10018456
10018443:	call   0x10015b40
10018448:	mov    eax,esp
1001844a:	cmp    eax,ebx
1001844c:	je     0x1001846a
1001844e:	mov    DWORD PTR [eax],0xcccc
10018454:	jmp    0x10018467
10018456:	push   eax
10018457:	call   0x10016c62
1001845c:	cmp    eax,ebx
1001845e:	pop    ecx
1001845f:	je     0x1001846a
10018461:	mov    DWORD PTR [eax],0xdddd
10018467:	add    eax,0x8
1001846a:	mov    DWORD PTR [ebp-0xc],eax
1001846d:	jmp    0x10018472
1001846f:	mov    DWORD PTR [ebp-0xc],ebx
10018472:	cmp    DWORD PTR [ebp-0xc],ebx
10018475:	je     0x100185b8
1001847b:	push   edi
1001847c:	push   DWORD PTR [ebp-0xc]
1001847f:	push   DWORD PTR [ebp+0x14]
10018482:	push   DWORD PTR [ebp+0x10]
10018485:	push   0x1
10018487:	push   DWORD PTR [ebp+0x20]
1001848a:	call   esi
1001848c:	test   eax,eax
1001848e:	je     0x10018576
10018494:	mov    esi,DWORD PTR ds:0x10034224
1001849a:	push   ebx
1001849b:	push   ebx
1001849c:	push   edi
1001849d:	push   DWORD PTR [ebp-0xc]
100184a0:	push   DWORD PTR [ebp+0xc]
100184a3:	push   DWORD PTR [ebp+0x8]
100184a6:	call   esi
100184a8:	mov    ecx,eax
100184aa:	cmp    ecx,ebx
100184ac:	mov    DWORD PTR [ebp-0x8],ecx
100184af:	je     0x10018576
100184b5:	test   WORD PTR [ebp+0xc],0x400
100184bb:	je     0x100184e6
100184bd:	cmp    DWORD PTR [ebp+0x1c],ebx
100184c0:	je     0x10018576
100184c6:	cmp    ecx,DWORD PTR [ebp+0x1c]
100184c9:	jg     0x10018576
100184cf:	push   DWORD PTR [ebp+0x1c]
100184d2:	push   DWORD PTR [ebp+0x18]
100184d5:	push   edi
100184d6:	push   DWORD PTR [ebp-0xc]
100184d9:	push   DWORD PTR [ebp+0xc]
100184dc:	push   DWORD PTR [ebp+0x8]
100184df:	call   esi
100184e1:	jmp    0x10018576
100184e6:	cmp    ecx,ebx
100184e8:	jle    0x1001852f
100184ea:	push   0xffffffe0
100184ec:	xor    edx,edx
100184ee:	pop    eax
100184ef:	div    ecx
100184f1:	cmp    eax,0x2
100184f4:	jb     0x1001852f
100184f6:	lea    eax,[ecx+ecx*1+0x8]
100184fa:	cmp    eax,0x400
100184ff:	ja     0x10018517
10018501:	call   0x10015b40
10018506:	mov    esi,esp
10018508:	cmp    esi,ebx
1001850a:	je     0x10018576
1001850c:	mov    DWORD PTR [esi],0xcccc
10018512:	add    esi,0x8
10018515:	jmp    0x10018531
10018517:	push   eax
10018518:	call   0x10016c62
1001851d:	cmp    eax,ebx
1001851f:	pop    ecx
10018520:	je     0x1001852b
10018522:	mov    DWORD PTR [eax],0xdddd
10018528:	add    eax,0x8
1001852b:	mov    esi,eax
1001852d:	jmp    0x10018531
1001852f:	xor    esi,esi
10018531:	cmp    esi,ebx
10018533:	je     0x10018576
10018535:	push   DWORD PTR [ebp-0x8]
10018538:	push   esi
10018539:	push   edi
1001853a:	push   DWORD PTR [ebp-0xc]
1001853d:	push   DWORD PTR [ebp+0xc]
10018540:	push   DWORD PTR [ebp+0x8]
10018543:	call   DWORD PTR ds:0x10034224
10018549:	test   eax,eax
1001854b:	je     0x1001856f
1001854d:	cmp    DWORD PTR [ebp+0x1c],ebx
10018550:	push   ebx
10018551:	push   ebx
10018552:	jne    0x10018558
10018554:	push   ebx
10018555:	push   ebx
10018556:	jmp    0x1001855e
10018558:	push   DWORD PTR [ebp+0x1c]
1001855b:	push   DWORD PTR [ebp+0x18]
1001855e:	push   DWORD PTR [ebp-0x8]
10018561:	push   esi
10018562:	push   ebx
10018563:	push   DWORD PTR [ebp+0x20]
10018566:	call   DWORD PTR ds:0x1003402c
1001856c:	mov    DWORD PTR [ebp-0x8],eax
1001856f:	push   esi
10018570:	call   0x10017a6c
10018575:	pop    ecx
10018576:	push   DWORD PTR [ebp-0xc]
10018579:	call   0x10017a6c
1001857e:	mov    eax,DWORD PTR [ebp-0x8]
10018581:	pop    ecx
10018582:	jmp    0x100186e0
10018587:	cmp    DWORD PTR [ebp+0x8],ebx
1001858a:	mov    DWORD PTR [ebp-0xc],ebx
1001858d:	mov    DWORD PTR [ebp-0x10],ebx
10018590:	jne    0x1001859a
10018592:	mov    eax,DWORD PTR [esi]
10018594:	mov    eax,DWORD PTR [eax+0x14]
10018597:	mov    DWORD PTR [ebp+0x8],eax
1001859a:	cmp    DWORD PTR [ebp+0x20],ebx
1001859d:	jne    0x100185a7
1001859f:	mov    eax,DWORD PTR [esi]
100185a1:	mov    eax,DWORD PTR [eax+0x4]
100185a4:	mov    DWORD PTR [ebp+0x20],eax
100185a7:	push   DWORD PTR [ebp+0x8]
100185aa:	call   0x10020980
100185af:	cmp    eax,0xffffffff
100185b2:	pop    ecx
100185b3:	mov    DWORD PTR [ebp-0x14],eax
100185b6:	jne    0x100185bf
100185b8:	xor    eax,eax
100185ba:	jmp    0x100186e0
100185bf:	cmp    eax,DWORD PTR [ebp+0x20]
100185c2:	je     0x100186a3
100185c8:	push   ebx
100185c9:	push   ebx
100185ca:	lea    ecx,[ebp+0x14]
100185cd:	push   ecx
100185ce:	push   DWORD PTR [ebp+0x10]
100185d1:	push   eax
100185d2:	push   DWORD PTR [ebp+0x20]
100185d5:	call   0x100209c7
100185da:	add    esp,0x18
100185dd:	cmp    eax,ebx
100185df:	mov    DWORD PTR [ebp-0xc],eax
100185e2:	je     0x100185b8
100185e4:	mov    esi,DWORD PTR ds:0x10034220
100185ea:	push   ebx
100185eb:	push   ebx
100185ec:	push   DWORD PTR [ebp+0x14]
100185ef:	push   eax
100185f0:	push   DWORD PTR [ebp+0xc]
100185f3:	push   DWORD PTR [ebp+0x8]
100185f6:	call   esi
100185f8:	cmp    eax,ebx
100185fa:	mov    DWORD PTR [ebp-0x8],eax
100185fd:	jne    0x10018606
100185ff:	xor    esi,esi
10018601:	jmp    0x100186bd
10018606:	jle    0x10018645
10018608:	cmp    eax,0xffffffe0
1001860b:	ja     0x10018645
1001860d:	add    eax,0x8
10018610:	cmp    eax,0x400
10018615:	ja     0x1001862d
10018617:	call   0x10015b40
1001861c:	mov    edi,esp
1001861e:	cmp    edi,ebx
10018620:	je     0x100185ff
10018622:	mov    DWORD PTR [edi],0xcccc
10018628:	add    edi,0x8
1001862b:	jmp    0x10018647
1001862d:	push   eax
1001862e:	call   0x10016c62
10018633:	cmp    eax,ebx
10018635:	pop    ecx
10018636:	je     0x10018641
10018638:	mov    DWORD PTR [eax],0xdddd
1001863e:	add    eax,0x8
10018641:	mov    edi,eax
10018643:	jmp    0x10018647
10018645:	xor    edi,edi
10018647:	cmp    edi,ebx
10018649:	je     0x100185ff
1001864b:	push   DWORD PTR [ebp-0x8]
1001864e:	push   ebx
1001864f:	push   edi
10018650:	call   0x10016580
10018655:	add    esp,0xc
10018658:	push   DWORD PTR [ebp-0x8]
1001865b:	push   edi
1001865c:	push   DWORD PTR [ebp+0x14]
1001865f:	push   DWORD PTR [ebp-0xc]
10018662:	push   DWORD PTR [ebp+0xc]
10018665:	push   DWORD PTR [ebp+0x8]
10018668:	call   esi
1001866a:	cmp    eax,ebx
1001866c:	mov    DWORD PTR [ebp-0x8],eax
1001866f:	jne    0x10018675
10018671:	xor    esi,esi
10018673:	jmp    0x1001869a
10018675:	push   DWORD PTR [ebp+0x1c]
10018678:	lea    eax,[ebp-0x8]
1001867b:	push   DWORD PTR [ebp+0x18]
1001867e:	push   eax
1001867f:	push   edi
10018680:	push   DWORD PTR [ebp+0x20]
10018683:	push   DWORD PTR [ebp-0x14]
10018686:	call   0x100209c7
1001868b:	mov    esi,eax
1001868d:	mov    DWORD PTR [ebp-0x10],esi
10018690:	add    esp,0x18
10018693:	neg    esi
10018695:	sbb    esi,esi
10018697:	and    esi,DWORD PTR [ebp-0x8]
1001869a:	push   edi
1001869b:	call   0x10017a6c
100186a0:	pop    ecx
100186a1:	jmp    0x100186bd
100186a3:	push   DWORD PTR [ebp+0x1c]
100186a6:	push   DWORD PTR [ebp+0x18]
100186a9:	push   DWORD PTR [ebp+0x14]
100186ac:	push   DWORD PTR [ebp+0x10]
100186af:	push   DWORD PTR [ebp+0xc]
100186b2:	push   DWORD PTR [ebp+0x8]
100186b5:	call   DWORD PTR ds:0x10034220
100186bb:	mov    esi,eax
100186bd:	cmp    DWORD PTR [ebp-0xc],ebx
100186c0:	je     0x100186cb
100186c2:	push   DWORD PTR [ebp-0xc]
100186c5:	call   0x10016b85
100186ca:	pop    ecx
100186cb:	mov    eax,DWORD PTR [ebp-0x10]
100186ce:	cmp    eax,ebx
100186d0:	je     0x100186de
100186d2:	cmp    DWORD PTR [ebp+0x18],eax
100186d5:	je     0x100186de
100186d7:	push   eax
100186d8:	call   0x10016b85
100186dd:	pop    ecx
100186de:	mov    eax,esi
100186e0:	lea    esp,[ebp-0x20]
100186e3:	pop    edi
100186e4:	pop    esi
100186e5:	pop    ebx
100186e6:	mov    ecx,DWORD PTR [ebp-0x4]
100186e9:	xor    ecx,ebp
100186eb:	call   0x10015b2b
100186f0:	leave  
100186f1:	ret    
100186f2:	push   ebp
100186f3:	mov    ebp,esp
100186f5:	sub    esp,0x10
100186f8:	push   DWORD PTR [ebp+0x8]
100186fb:	lea    ecx,[ebp-0x10]
100186fe:	call   0x100165fa
10018703:	push   DWORD PTR [ebp+0x28]
10018706:	lea    ecx,[ebp-0x10]
10018709:	push   DWORD PTR [ebp+0x24]
1001870c:	push   DWORD PTR [ebp+0x20]
1001870f:	push   DWORD PTR [ebp+0x1c]
10018712:	push   DWORD PTR [ebp+0x18]
10018715:	push   DWORD PTR [ebp+0x14]
10018718:	push   DWORD PTR [ebp+0x10]
1001871b:	push   DWORD PTR [ebp+0xc]
1001871e:	call   0x10018350
10018723:	add    esp,0x20
10018726:	cmp    BYTE PTR [ebp-0x4],0x0
1001872a:	je     0x10018733
1001872c:	mov    ecx,DWORD PTR [ebp-0x8]
1001872f:	and    DWORD PTR [ecx+0x70],0xfffffffd
10018733:	leave  
10018734:	ret    
10018735:	push   esi
10018736:	push   edi
10018737:	xor    esi,esi
10018739:	push   DWORD PTR [esp+0xc]
1001873d:	call   0x10016c62
10018742:	mov    edi,eax
10018744:	test   edi,edi
10018746:	pop    ecx
10018747:	jne    0x10018770
10018749:	cmp    DWORD PTR ds:0x10096e50,eax
1001874f:	jbe    0x10018770
10018751:	push   esi
10018752:	call   DWORD PTR ds:0x10034070
10018758:	lea    eax,[esi+0x3e8]
1001875e:	cmp    eax,DWORD PTR ds:0x10096e50
10018764:	jbe    0x10018769
10018766:	or     eax,0xffffffff
10018769:	cmp    eax,0xffffffff
1001876c:	mov    esi,eax
1001876e:	jne    0x10018739
10018770:	mov    eax,edi
10018772:	pop    edi
10018773:	pop    esi
10018774:	ret    
10018775:	push   esi
10018776:	push   edi
10018777:	xor    esi,esi
10018779:	push   0x0
1001877b:	push   DWORD PTR [esp+0x14]
1001877f:	push   DWORD PTR [esp+0x14]
10018783:	call   0x10017aaf
10018788:	mov    edi,eax
1001878a:	add    esp,0xc
1001878d:	test   edi,edi
1001878f:	jne    0x100187b8
10018791:	cmp    DWORD PTR ds:0x10096e50,eax
10018797:	jbe    0x100187b8
10018799:	push   esi
1001879a:	call   DWORD PTR ds:0x10034070
100187a0:	lea    eax,[esi+0x3e8]
100187a6:	cmp    eax,DWORD PTR ds:0x10096e50
100187ac:	jbe    0x100187b1
100187ae:	or     eax,0xffffffff
100187b1:	cmp    eax,0xffffffff
100187b4:	mov    esi,eax
100187b6:	jne    0x10018779
100187b8:	mov    eax,edi
100187ba:	pop    edi
100187bb:	pop    esi
100187bc:	ret    
100187bd:	push   esi
100187be:	push   edi
100187bf:	xor    esi,esi
100187c1:	push   DWORD PTR [esp+0x10]
100187c5:	push   DWORD PTR [esp+0x10]
100187c9:	call   0x10017bcd
100187ce:	mov    edi,eax
100187d0:	test   edi,edi
100187d2:	pop    ecx
100187d3:	pop    ecx
100187d4:	jne    0x10018803
100187d6:	cmp    DWORD PTR [esp+0x10],eax
100187da:	je     0x10018803
100187dc:	cmp    DWORD PTR ds:0x10096e50,eax
100187e2:	jbe    0x10018803
100187e4:	push   esi
100187e5:	call   DWORD PTR ds:0x10034070
100187eb:	lea    eax,[esi+0x3e8]
100187f1:	cmp    eax,DWORD PTR ds:0x10096e50
100187f7:	jbe    0x100187fc
100187f9:	or     eax,0xffffffff
100187fc:	cmp    eax,0xffffffff
100187ff:	mov    esi,eax
10018801:	jne    0x100187c1
10018803:	mov    eax,edi
10018805:	pop    edi
10018806:	pop    esi
10018807:	ret    
10018808:	push   ebp
10018809:	lea    ebp,[esp-0x2a8]
10018810:	sub    esp,0x328
10018816:	mov    eax,ds:0x100951fc
1001881b:	xor    eax,ebp
1001881d:	mov    DWORD PTR [ebp+0x2a4],eax
10018823:	test   BYTE PTR ds:0x1009534c,0x1
1001882a:	push   esi
1001882b:	je     0x10018835
1001882d:	push   0xa
1001882f:	call   0x1001c36b
10018834:	pop    ecx
10018835:	call   0x10020bc6
1001883a:	test   eax,eax
1001883c:	je     0x10018846
1001883e:	push   0x16
10018840:	call   0x10020bd3
10018845:	pop    ecx
10018846:	test   BYTE PTR ds:0x1009534c,0x2
1001884d:	je     0x100188f3
10018853:	mov    DWORD PTR [ebp+0x88],eax
10018859:	mov    DWORD PTR [ebp+0x84],ecx
1001885f:	mov    DWORD PTR [ebp+0x80],edx
10018865:	mov    DWORD PTR [ebp+0x7c],ebx
10018868:	mov    DWORD PTR [ebp+0x78],esi
1001886b:	mov    DWORD PTR [ebp+0x74],edi
1001886e:	data16 mov WORD PTR [ebp+0xa0],ss
10018875:	data16 mov WORD PTR [ebp+0x94],cs
1001887c:	data16 mov WORD PTR [ebp+0x70],ds
10018880:	data16 mov WORD PTR [ebp+0x6c],es
10018884:	data16 mov WORD PTR [ebp+0x68],fs
10018888:	data16 mov WORD PTR [ebp+0x64],gs
1001888c:	pushf  
1001888d:	pop    DWORD PTR [ebp+0x98]
10018893:	mov    esi,DWORD PTR [ebp+0x2ac]
10018899:	lea    eax,[ebp+0x2ac]
1001889f:	mov    DWORD PTR [ebp+0x9c],eax
100188a5:	mov    DWORD PTR [ebp-0x28],0x10001
100188ac:	mov    DWORD PTR [ebp+0x90],esi
100188b2:	mov    eax,DWORD PTR [eax-0x4]
100188b5:	push   0x50
100188b7:	mov    DWORD PTR [ebp+0x8c],eax
100188bd:	lea    eax,[ebp-0x80]
100188c0:	push   0x0
100188c2:	push   eax
100188c3:	call   0x10016580
100188c8:	lea    eax,[ebp-0x80]
100188cb:	add    esp,0xc
100188ce:	mov    DWORD PTR [ebp-0x30],eax
100188d1:	lea    eax,[ebp-0x28]
100188d4:	push   0x0
100188d6:	mov    DWORD PTR [ebp-0x80],0x40000015
100188dd:	mov    DWORD PTR [ebp-0x74],esi
100188e0:	mov    DWORD PTR [ebp-0x2c],eax
100188e3:	call   DWORD PTR ds:0x1003420c
100188e9:	lea    eax,[ebp-0x30]
100188ec:	push   eax
100188ed:	call   DWORD PTR ds:0x10034208
100188f3:	push   0x3
100188f5:	call   0x1001a0df
100188fa:	int3   
100188fb:	mov    ecx,DWORD PTR [esp+0x8]
100188ff:	mov    eax,ds:0x1009534c
10018904:	mov    edx,DWORD PTR [esp+0x4]
10018908:	and    edx,DWORD PTR [esp+0x8]
1001890c:	not    ecx
1001890e:	and    ecx,eax
10018910:	or     ecx,edx
10018912:	mov    DWORD PTR ds:0x1009534c,ecx
10018918:	ret    
10018919:	push   ebp
1001891a:	mov    ebp,esp
1001891c:	sub    esp,0x328
10018922:	mov    ds:0x10096f60,eax
10018927:	mov    DWORD PTR ds:0x10096f5c,ecx
1001892d:	mov    DWORD PTR ds:0x10096f58,edx
10018933:	mov    DWORD PTR ds:0x10096f54,ebx
10018939:	mov    DWORD PTR ds:0x10096f50,esi
1001893f:	mov    DWORD PTR ds:0x10096f4c,edi
10018945:	data16 mov WORD PTR ds:0x10096f78,ss
1001894c:	data16 mov WORD PTR ds:0x10096f6c,cs
10018953:	data16 mov WORD PTR ds:0x10096f48,ds
1001895a:	data16 mov WORD PTR ds:0x10096f44,es
10018961:	data16 mov WORD PTR ds:0x10096f40,fs
10018968:	data16 mov WORD PTR ds:0x10096f3c,gs
1001896f:	pushf  
10018970:	pop    DWORD PTR ds:0x10096f70
10018976:	mov    eax,DWORD PTR [ebp+0x0]
10018979:	mov    ds:0x10096f64,eax
1001897e:	mov    eax,DWORD PTR [ebp+0x4]
10018981:	mov    ds:0x10096f68,eax
10018986:	lea    eax,[ebp+0x8]
10018989:	mov    ds:0x10096f74,eax
1001898e:	mov    eax,DWORD PTR [ebp-0x320]
10018994:	mov    DWORD PTR ds:0x10096eb0,0x10001
1001899e:	mov    eax,ds:0x10096f68
100189a3:	mov    ds:0x10096e64,eax
100189a8:	mov    DWORD PTR ds:0x10096e58,0xc0000409
100189b2:	mov    DWORD PTR ds:0x10096e5c,0x1
100189bc:	mov    eax,ds:0x100951fc
100189c1:	mov    DWORD PTR [ebp-0x328],eax
100189c7:	mov    eax,ds:0x10095200
100189cc:	mov    DWORD PTR [ebp-0x324],eax
100189d2:	call   DWORD PTR ds:0x10034210
100189d8:	mov    ds:0x10096ea8,eax
100189dd:	push   0x1
100189df:	call   0x1001a14b
100189e4:	pop    ecx
100189e5:	push   0x0
100189e7:	call   DWORD PTR ds:0x1003420c
100189ed:	push   0x1007deb0
100189f2:	call   DWORD PTR ds:0x10034208
100189f8:	cmp    DWORD PTR ds:0x10096ea8,0x0
100189ff:	jne    0x10018a09
10018a01:	push   0x1
10018a03:	call   0x1001a14b
10018a08:	pop    ecx
10018a09:	push   0xc0000409
10018a0e:	call   DWORD PTR ds:0x100340d0
10018a14:	push   eax
10018a15:	call   DWORD PTR ds:0x10034120
10018a1b:	leave  
10018a1c:	ret    
10018a1d:	mov    DWORD PTR [ecx],0x1007dec0
10018a23:	jmp    0x1001637c
10018a28:	push   esi
10018a29:	mov    esi,ecx
10018a2b:	mov    DWORD PTR [esi],0x1007dec0
10018a31:	call   0x1001637c
10018a36:	test   BYTE PTR [esp+0x8],0x1
10018a3b:	je     0x10018a44
10018a3d:	push   esi
10018a3e:	call   0x10015b26
10018a43:	pop    ecx
10018a44:	mov    eax,esi
10018a46:	pop    esi
10018a47:	ret    0x4
10018a4a:	push   esi
10018a4b:	push   edi
10018a4c:	mov    edi,DWORD PTR [esp+0xc]
10018a50:	mov    eax,DWORD PTR [edi+0x4]
10018a53:	test   eax,eax
10018a55:	je     0x10018aa0
10018a57:	lea    edx,[eax+0x8]
10018a5a:	cmp    BYTE PTR [edx],0x0
10018a5d:	je     0x10018aa0
10018a5f:	mov    esi,DWORD PTR [esp+0x10]
10018a63:	mov    ecx,DWORD PTR [esi+0x4]
10018a66:	cmp    eax,ecx
10018a68:	je     0x10018a7e
10018a6a:	add    ecx,0x8
10018a6d:	push   ecx
10018a6e:	push   edx
10018a6f:	call   0x1001a250
10018a74:	test   eax,eax
10018a76:	pop    ecx
10018a77:	pop    ecx
10018a78:	je     0x10018a7e
10018a7a:	xor    eax,eax
10018a7c:	jmp    0x10018aa3
10018a7e:	test   BYTE PTR [esi],0x2
10018a81:	je     0x10018a88
10018a83:	test   BYTE PTR [edi],0x8
10018a86:	je     0x10018a7a
10018a88:	mov    eax,DWORD PTR [esp+0x14]
10018a8c:	mov    eax,DWORD PTR [eax]
10018a8e:	test   al,0x1
10018a90:	je     0x10018a97
10018a92:	test   BYTE PTR [edi],0x1
10018a95:	je     0x10018a7a
10018a97:	test   al,0x2
10018a99:	je     0x10018aa0
10018a9b:	test   BYTE PTR [edi],0x2
10018a9e:	je     0x10018a7a
10018aa0:	xor    eax,eax
10018aa2:	inc    eax
10018aa3:	pop    edi
10018aa4:	pop    esi
10018aa5:	ret    
10018aa6:	mov    eax,DWORD PTR [esp+0x4]
10018aaa:	mov    eax,DWORD PTR [eax]
10018aac:	mov    eax,DWORD PTR [eax]
10018aae:	cmp    eax,0xe0434f4d
10018ab3:	je     0x10018acd
10018ab5:	cmp    eax,0xe06d7363
10018aba:	jne    0x10018ae7
10018abc:	call   0x100199a6
10018ac1:	and    DWORD PTR [eax+0x90],0x0
10018ac8:	jmp    0x10019ccc
10018acd:	call   0x100199a6
10018ad2:	cmp    DWORD PTR [eax+0x90],0x0
10018ad9:	jle    0x10018ae7
10018adb:	call   0x100199a6
10018ae0:	add    eax,0x90
10018ae5:	dec    DWORD PTR [eax]
10018ae7:	xor    eax,eax
10018ae9:	ret    
10018aea:	push   0x10
10018aec:	push   0x100857c0
10018af1:	call   0x10017f88
10018af6:	mov    edi,DWORD PTR [ebp+0x10]
10018af9:	mov    ebx,DWORD PTR [ebp+0x8]
10018afc:	cmp    DWORD PTR [edi+0x4],0x80
10018b03:	jg     0x10018b0b
10018b05:	movsx  esi,BYTE PTR [ebx+0x8]
10018b09:	jmp    0x10018b0e
10018b0b:	mov    esi,DWORD PTR [ebx+0x8]
10018b0e:	mov    DWORD PTR [ebp-0x1c],esi
10018b11:	call   0x100199a6
10018b16:	add    eax,0x90
10018b1b:	inc    DWORD PTR [eax]
10018b1d:	and    DWORD PTR [ebp-0x4],0x0
10018b21:	cmp    esi,DWORD PTR [ebp+0x14]
10018b24:	je     0x10018b8b
10018b26:	cmp    esi,0xffffffff
10018b29:	jle    0x10018b30
10018b2b:	cmp    esi,DWORD PTR [edi+0x4]
10018b2e:	jl     0x10018b35
10018b30:	call   0x10019d18
10018b35:	mov    eax,esi
10018b37:	shl    eax,0x3
10018b3a:	mov    ecx,DWORD PTR [edi+0x8]
10018b3d:	add    ecx,eax
10018b3f:	mov    esi,DWORD PTR [ecx]
10018b41:	mov    DWORD PTR [ebp-0x20],esi
10018b44:	mov    DWORD PTR [ebp-0x4],0x1
10018b4b:	cmp    DWORD PTR [ecx+0x4],0x0
10018b4f:	je     0x10018b66
10018b51:	mov    DWORD PTR [ebx+0x8],esi
10018b54:	push   0x103
10018b59:	push   ebx
10018b5a:	mov    ecx,DWORD PTR [edi+0x8]
10018b5d:	push   DWORD PTR [ecx+eax*1+0x4]
10018b61:	call   0x10019d60
10018b66:	and    DWORD PTR [ebp-0x4],0x0
10018b6a:	jmp    0x10018b86
10018b6c:	push   DWORD PTR [ebp-0x14]
10018b6f:	call   0x10018aa6
10018b74:	pop    ecx
10018b75:	ret    
10018b76:	mov    esp,DWORD PTR [ebp-0x18]
10018b79:	and    DWORD PTR [ebp-0x4],0x0
10018b7d:	mov    edi,DWORD PTR [ebp+0x10]
10018b80:	mov    ebx,DWORD PTR [ebp+0x8]
10018b83:	mov    esi,DWORD PTR [ebp-0x20]
10018b86:	mov    DWORD PTR [ebp-0x1c],esi
10018b89:	jmp    0x10018b21
10018b8b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10018b92:	call   0x10018bb0
10018b97:	cmp    esi,DWORD PTR [ebp+0x14]
10018b9a:	je     0x10018ba1
10018b9c:	call   0x10019d18
10018ba1:	mov    DWORD PTR [ebx+0x8],esi
10018ba4:	call   0x10017fcd
10018ba9:	ret    
10018baa:	mov    ebx,DWORD PTR [ebp+0x8]
10018bad:	mov    esi,DWORD PTR [ebp-0x1c]
10018bb0:	call   0x100199a6
10018bb5:	cmp    DWORD PTR [eax+0x90],0x0
10018bbc:	jle    0x10018bca
10018bbe:	call   0x100199a6
10018bc3:	add    eax,0x90
10018bc8:	dec    DWORD PTR [eax]
10018bca:	ret    
10018bcb:	mov    eax,DWORD PTR [eax]
10018bcd:	cmp    DWORD PTR [eax],0xe06d7363
10018bd3:	jne    0x10018c0d
10018bd5:	cmp    DWORD PTR [eax+0x10],0x3
10018bd9:	jne    0x10018c0d
10018bdb:	mov    ecx,DWORD PTR [eax+0x14]
10018bde:	cmp    ecx,0x19930520
10018be4:	je     0x10018bf6
10018be6:	cmp    ecx,0x19930521
10018bec:	je     0x10018bf6
10018bee:	cmp    ecx,0x19930522
10018bf4:	jne    0x10018c0d
10018bf6:	cmp    DWORD PTR [eax+0x1c],0x0
10018bfa:	jne    0x10018c0d
10018bfc:	call   0x100199a6
10018c01:	xor    ecx,ecx
10018c03:	inc    ecx
10018c04:	mov    DWORD PTR [eax+0x20c],ecx
10018c0a:	mov    eax,ecx
10018c0c:	ret    
10018c0d:	xor    eax,eax
10018c0f:	ret    
10018c10:	push   0x8
10018c12:	push   0x100857e8
10018c17:	call   0x10017f88
10018c1c:	mov    ecx,DWORD PTR [ebp+0x8]
10018c1f:	test   ecx,ecx
10018c21:	je     0x10018c4d
10018c23:	cmp    DWORD PTR [ecx],0xe06d7363
10018c29:	jne    0x10018c4d
10018c2b:	mov    eax,DWORD PTR [ecx+0x1c]
10018c2e:	test   eax,eax
10018c30:	je     0x10018c4d
10018c32:	mov    eax,DWORD PTR [eax+0x4]
10018c35:	test   eax,eax
10018c37:	je     0x10018c4d
10018c39:	and    DWORD PTR [ebp-0x4],0x0
10018c3d:	push   eax
10018c3e:	push   DWORD PTR [ecx+0x18]
10018c41:	call   0x10015b9c
10018c46:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10018c4d:	call   0x10017fcd
10018c52:	ret    
10018c53:	xor    eax,eax
10018c55:	cmp    BYTE PTR [ebp+0xc],al
10018c58:	setne  al
10018c5b:	ret    
10018c5c:	mov    esp,DWORD PTR [ebp-0x18]
10018c5f:	jmp    0x10019ccc
10018c64:	mov    ecx,DWORD PTR [esp+0x8]
10018c68:	mov    eax,DWORD PTR [ecx]
10018c6a:	push   esi
10018c6b:	mov    esi,DWORD PTR [esp+0x8]
10018c6f:	add    eax,esi
10018c71:	cmp    DWORD PTR [ecx+0x4],0x0
10018c75:	jl     0x10018c87
10018c77:	mov    edx,DWORD PTR [ecx+0x4]
10018c7a:	mov    ecx,DWORD PTR [ecx+0x8]
10018c7d:	mov    esi,DWORD PTR [edx+esi*1]
10018c80:	mov    ecx,DWORD PTR [esi+ecx*1]
10018c83:	add    ecx,edx
10018c85:	add    eax,ecx
10018c87:	pop    esi
10018c88:	ret    
10018c89:	push   ebp
10018c8a:	mov    ebp,esp
10018c8c:	sub    esp,0xc
10018c8f:	test   edi,edi
10018c91:	jne    0x10018c9d
10018c93:	call   0x10019d18
10018c98:	jmp    0x10019ccc
10018c9d:	and    DWORD PTR [ebp-0x8],0x0
10018ca1:	cmp    DWORD PTR [edi],0x0
10018ca4:	mov    BYTE PTR [ebp-0x1],0x0
10018ca8:	jle    0x10018cfd
10018caa:	push   ebx
10018cab:	push   esi
10018cac:	mov    eax,DWORD PTR [ebp+0x8]
10018caf:	mov    eax,DWORD PTR [eax+0x1c]
10018cb2:	mov    eax,DWORD PTR [eax+0xc]
10018cb5:	mov    ebx,DWORD PTR [eax]
10018cb7:	test   ebx,ebx
10018cb9:	lea    esi,[eax+0x4]
10018cbc:	jle    0x10018cf1
10018cbe:	mov    eax,DWORD PTR [ebp-0x8]
10018cc1:	shl    eax,0x4
10018cc4:	mov    DWORD PTR [ebp-0xc],eax
10018cc7:	mov    ecx,DWORD PTR [ebp+0x8]
10018cca:	push   DWORD PTR [ecx+0x1c]
10018ccd:	mov    eax,DWORD PTR [esi]
10018ccf:	push   eax
10018cd0:	mov    eax,DWORD PTR [edi+0x4]
10018cd3:	add    eax,DWORD PTR [ebp-0xc]
10018cd6:	push   eax
10018cd7:	call   0x10018a4a
10018cdc:	add    esp,0xc
10018cdf:	test   eax,eax
10018ce1:	jne    0x10018ced
10018ce3:	dec    ebx
10018ce4:	add    esi,0x4
10018ce7:	test   ebx,ebx
10018ce9:	jg     0x10018cc7
10018ceb:	jmp    0x10018cf1
10018ced:	mov    BYTE PTR [ebp-0x1],0x1
10018cf1:	inc    DWORD PTR [ebp-0x8]
10018cf4:	mov    eax,DWORD PTR [ebp-0x8]
10018cf7:	cmp    eax,DWORD PTR [edi]
10018cf9:	jl     0x10018cac
10018cfb:	pop    esi
10018cfc:	pop    ebx
10018cfd:	mov    al,BYTE PTR [ebp-0x1]
10018d00:	leave  
10018d01:	ret    
10018d02:	push   0x4
10018d04:	mov    eax,0x1002a6f4
10018d09:	call   0x10018014
10018d0e:	call   0x100199a6
10018d13:	cmp    DWORD PTR [eax+0x94],0x0
10018d1a:	je     0x10018d21
10018d1c:	call   0x10019d18
10018d21:	and    DWORD PTR [ebp-0x4],0x0
10018d25:	call   0x10019d05
10018d2a:	or     DWORD PTR [ebp-0x4],0xffffffff
10018d2e:	jmp    0x10019ccc
10018d33:	call   0x100199a6
10018d38:	mov    ecx,DWORD PTR [ebp+0x8]
10018d3b:	push   0x0
10018d3d:	push   0x0
10018d3f:	mov    DWORD PTR [eax+0x94],ecx
10018d45:	call   0x1001621e
10018d4a:	int3   
10018d4b:	push   0x2c
10018d4d:	push   0x10085860
10018d52:	call   0x10017f88
10018d57:	mov    ebx,ecx
10018d59:	mov    edi,DWORD PTR [ebp+0xc]
10018d5c:	mov    esi,DWORD PTR [ebp+0x8]
10018d5f:	mov    DWORD PTR [ebp-0x1c],ebx
10018d62:	and    DWORD PTR [ebp-0x34],0x0
10018d66:	mov    eax,DWORD PTR [edi-0x4]
10018d69:	mov    DWORD PTR [ebp-0x24],eax
10018d6c:	push   DWORD PTR [esi+0x18]
10018d6f:	lea    eax,[ebp-0x3c]
10018d72:	push   eax
10018d73:	call   0x10015e40
10018d78:	pop    ecx
10018d79:	pop    ecx
10018d7a:	mov    DWORD PTR [ebp-0x28],eax
10018d7d:	call   0x100199a6
10018d82:	mov    eax,DWORD PTR [eax+0x88]
10018d88:	mov    DWORD PTR [ebp-0x2c],eax
10018d8b:	call   0x100199a6
10018d90:	mov    eax,DWORD PTR [eax+0x8c]
10018d96:	mov    DWORD PTR [ebp-0x30],eax
10018d99:	call   0x100199a6
10018d9e:	mov    DWORD PTR [eax+0x88],esi
10018da4:	call   0x100199a6
10018da9:	mov    ecx,DWORD PTR [ebp+0x10]
10018dac:	mov    DWORD PTR [eax+0x8c],ecx
10018db2:	and    DWORD PTR [ebp-0x4],0x0
10018db6:	xor    eax,eax
10018db8:	inc    eax
10018db9:	mov    DWORD PTR [ebp+0x10],eax
10018dbc:	mov    DWORD PTR [ebp-0x4],eax
10018dbf:	push   DWORD PTR [ebp+0x1c]
10018dc2:	push   DWORD PTR [ebp+0x18]
10018dc5:	push   ebx
10018dc6:	push   DWORD PTR [ebp+0x14]
10018dc9:	push   edi
10018dca:	call   0x10015ed5
10018dcf:	add    esp,0x14
10018dd2:	mov    DWORD PTR [ebp-0x1c],eax
10018dd5:	and    DWORD PTR [ebp-0x4],0x0
10018dd9:	jmp    0x10018e4a
10018ddb:	mov    eax,DWORD PTR [ebp-0x14]
10018dde:	call   0x10018bcb
10018de3:	ret    
10018de4:	mov    esp,DWORD PTR [ebp-0x18]
10018de7:	call   0x100199a6
10018dec:	and    DWORD PTR [eax+0x20c],0x0
10018df3:	mov    esi,DWORD PTR [ebp+0x14]
10018df6:	mov    edi,DWORD PTR [ebp+0xc]
10018df9:	cmp    DWORD PTR [esi+0x4],0x80
10018e00:	jg     0x10018e08
10018e02:	movsx  ecx,BYTE PTR [edi+0x8]
10018e06:	jmp    0x10018e0b
10018e08:	mov    ecx,DWORD PTR [edi+0x8]
10018e0b:	mov    ebx,DWORD PTR [esi+0x10]
10018e0e:	and    DWORD PTR [ebp-0x20],0x0
10018e12:	mov    eax,DWORD PTR [ebp-0x20]
10018e15:	cmp    eax,DWORD PTR [esi+0xc]
10018e18:	jae    0x10018e32
10018e1a:	imul   eax,eax,0x14
10018e1d:	add    eax,ebx
10018e1f:	mov    edx,DWORD PTR [eax+0x4]
10018e22:	cmp    ecx,edx
10018e24:	jle    0x10018e66
10018e26:	cmp    ecx,DWORD PTR [eax+0x8]
10018e29:	jg     0x10018e66
10018e2b:	mov    eax,DWORD PTR [esi+0x8]
10018e2e:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10018e32:	push   ecx
10018e33:	push   esi
10018e34:	push   0x0
10018e36:	push   edi
10018e37:	call   0x10018aea
10018e3c:	add    esp,0x10
10018e3f:	and    DWORD PTR [ebp-0x1c],0x0
10018e43:	and    DWORD PTR [ebp-0x4],0x0
10018e47:	mov    esi,DWORD PTR [ebp+0x8]
10018e4a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10018e51:	mov    DWORD PTR [ebp+0x10],0x0
10018e58:	call   0x10018e71
10018e5d:	mov    eax,DWORD PTR [ebp-0x1c]
10018e60:	call   0x10017fcd
10018e65:	ret    
10018e66:	inc    DWORD PTR [ebp-0x20]
10018e69:	jmp    0x10018e12
10018e6b:	mov    edi,DWORD PTR [ebp+0xc]
10018e6e:	mov    esi,DWORD PTR [ebp+0x8]
10018e71:	mov    eax,DWORD PTR [ebp-0x24]
10018e74:	mov    DWORD PTR [edi-0x4],eax
10018e77:	push   DWORD PTR [ebp-0x28]
10018e7a:	call   0x10015e89
10018e7f:	pop    ecx
10018e80:	call   0x100199a6
10018e85:	mov    ecx,DWORD PTR [ebp-0x2c]
10018e88:	mov    DWORD PTR [eax+0x88],ecx
10018e8e:	call   0x100199a6
10018e93:	mov    ecx,DWORD PTR [ebp-0x30]
10018e96:	mov    DWORD PTR [eax+0x8c],ecx
10018e9c:	cmp    DWORD PTR [esi],0xe06d7363
10018ea2:	jne    0x10018ee6
10018ea4:	cmp    DWORD PTR [esi+0x10],0x3
10018ea8:	jne    0x10018ee6
10018eaa:	mov    eax,DWORD PTR [esi+0x14]
10018ead:	cmp    eax,0x19930520
10018eb2:	je     0x10018ec2
10018eb4:	cmp    eax,0x19930521
10018eb9:	je     0x10018ec2
10018ebb:	cmp    eax,0x19930522
10018ec0:	jne    0x10018ee6
10018ec2:	cmp    DWORD PTR [ebp-0x34],0x0
10018ec6:	jne    0x10018ee6
10018ec8:	cmp    DWORD PTR [ebp-0x1c],0x0
10018ecc:	je     0x10018ee6
10018ece:	push   DWORD PTR [esi+0x18]
10018ed1:	call   0x10015e68
10018ed6:	pop    ecx
10018ed7:	test   eax,eax
10018ed9:	je     0x10018ee6
10018edb:	push   DWORD PTR [ebp+0x10]
10018ede:	push   esi
10018edf:	call   0x10018c10
10018ee4:	pop    ecx
10018ee5:	pop    ecx
10018ee6:	ret    
10018ee7:	push   0xc
10018ee9:	push   0x10085888
10018eee:	call   0x10017f88
10018ef3:	xor    edx,edx
10018ef5:	mov    DWORD PTR [ebp-0x1c],edx
10018ef8:	mov    eax,DWORD PTR [ebp+0x10]
10018efb:	mov    ecx,DWORD PTR [eax+0x4]
10018efe:	cmp    ecx,edx
10018f00:	je     0x1001905e
10018f06:	cmp    BYTE PTR [ecx+0x8],dl
10018f09:	je     0x1001905e
10018f0f:	mov    ecx,DWORD PTR [eax+0x8]
10018f12:	cmp    ecx,edx
10018f14:	jne    0x10018f22
10018f16:	test   DWORD PTR [eax],0x80000000
10018f1c:	je     0x1001905e
10018f22:	mov    eax,DWORD PTR [eax]
10018f24:	mov    esi,DWORD PTR [ebp+0xc]
10018f27:	test   eax,eax
10018f29:	js     0x10018f2f
10018f2b:	lea    esi,[ecx+esi*1+0xc]
10018f2f:	mov    DWORD PTR [ebp-0x4],edx
10018f32:	xor    ebx,ebx
10018f34:	inc    ebx
10018f35:	push   ebx
10018f36:	test   al,0x8
10018f38:	je     0x10018f7b
10018f3a:	mov    edi,DWORD PTR [ebp+0x8]
10018f3d:	push   DWORD PTR [edi+0x18]
10018f40:	call   0x10020d83
10018f45:	pop    ecx
10018f46:	pop    ecx
10018f47:	test   eax,eax
10018f49:	je     0x10019041
10018f4f:	push   ebx
10018f50:	push   esi
10018f51:	call   0x10020d83
10018f56:	pop    ecx
10018f57:	pop    ecx
10018f58:	test   eax,eax
10018f5a:	je     0x10019041
10018f60:	mov    eax,DWORD PTR [edi+0x18]
10018f63:	mov    DWORD PTR [esi],eax
10018f65:	mov    ecx,DWORD PTR [ebp+0x14]
10018f68:	add    ecx,0x8
10018f6b:	push   ecx
10018f6c:	push   eax
10018f6d:	call   0x10018c64
10018f72:	pop    ecx
10018f73:	pop    ecx
10018f74:	mov    DWORD PTR [esi],eax
10018f76:	jmp    0x10019046
10018f7b:	mov    edi,DWORD PTR [ebp+0x14]
10018f7e:	mov    eax,DWORD PTR [ebp+0x8]
10018f81:	push   DWORD PTR [eax+0x18]
10018f84:	test   BYTE PTR [edi],bl
10018f86:	je     0x10018fd0
10018f88:	call   0x10020d83
10018f8d:	pop    ecx
10018f8e:	pop    ecx
10018f8f:	test   eax,eax
10018f91:	je     0x10019041
10018f97:	push   ebx
10018f98:	push   esi
10018f99:	call   0x10020d83
10018f9e:	pop    ecx
10018f9f:	pop    ecx
10018fa0:	test   eax,eax
10018fa2:	je     0x10019041
10018fa8:	push   DWORD PTR [edi+0x14]
10018fab:	mov    eax,DWORD PTR [ebp+0x8]
10018fae:	push   DWORD PTR [eax+0x18]
10018fb1:	push   esi
10018fb2:	call   0x1001a370
10018fb7:	add    esp,0xc
10018fba:	cmp    DWORD PTR [edi+0x14],0x4
10018fbe:	jne    0x10019046
10018fc4:	mov    eax,DWORD PTR [esi]
10018fc6:	test   eax,eax
10018fc8:	je     0x10019046
10018fca:	add    edi,0x8
10018fcd:	push   edi
10018fce:	jmp    0x10018f6c
10018fd0:	cmp    DWORD PTR [edi+0x18],edx
10018fd3:	jne    0x1001900d
10018fd5:	call   0x10020d83
10018fda:	pop    ecx
10018fdb:	pop    ecx
10018fdc:	test   eax,eax
10018fde:	je     0x10019041
10018fe0:	push   ebx
10018fe1:	push   esi
10018fe2:	call   0x10020d83
10018fe7:	pop    ecx
10018fe8:	pop    ecx
10018fe9:	test   eax,eax
10018feb:	je     0x10019041
10018fed:	push   DWORD PTR [edi+0x14]
10018ff0:	add    edi,0x8
10018ff3:	push   edi
10018ff4:	mov    eax,DWORD PTR [ebp+0x8]
10018ff7:	push   DWORD PTR [eax+0x18]
10018ffa:	call   0x10018c64
10018fff:	pop    ecx
10019000:	pop    ecx
10019001:	push   eax
10019002:	push   esi
10019003:	call   0x1001a370
10019008:	add    esp,0xc
1001900b:	jmp    0x10019046
1001900d:	call   0x10020d83
10019012:	pop    ecx
10019013:	pop    ecx
10019014:	test   eax,eax
10019016:	je     0x10019041
10019018:	push   ebx
10019019:	push   esi
1001901a:	call   0x10020d83
1001901f:	pop    ecx
10019020:	pop    ecx
10019021:	test   eax,eax
10019023:	je     0x10019041
10019025:	push   DWORD PTR [edi+0x18]
10019028:	call   0x10020d83
1001902d:	pop    ecx
1001902e:	test   eax,eax
10019030:	je     0x10019041
10019032:	test   BYTE PTR [edi],0x4
10019035:	push   0x0
10019037:	pop    eax
10019038:	setne  al
1001903b:	inc    eax
1001903c:	mov    DWORD PTR [ebp-0x1c],eax
1001903f:	jmp    0x10019046
10019041:	call   0x10019d18
10019046:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001904d:	mov    eax,DWORD PTR [ebp-0x1c]
10019050:	jmp    0x10019060
10019052:	xor    eax,eax
10019054:	inc    eax
10019055:	ret    
10019056:	mov    esp,DWORD PTR [ebp-0x18]
10019059:	jmp    0x10019ccc
1001905e:	xor    eax,eax
10019060:	call   0x10017fcd
10019065:	ret    
10019066:	push   0x8
10019068:	push   0x100858a8
1001906d:	call   0x10017f88
10019072:	mov    eax,DWORD PTR [ebp+0x10]
10019075:	test   DWORD PTR [eax],0x80000000
1001907b:	je     0x10019082
1001907d:	mov    ebx,DWORD PTR [ebp+0xc]
10019080:	jmp    0x1001908c
10019082:	mov    ecx,DWORD PTR [eax+0x8]
10019085:	mov    edx,DWORD PTR [ebp+0xc]
10019088:	lea    ebx,[ecx+edx*1+0xc]
1001908c:	and    DWORD PTR [ebp-0x4],0x0
10019090:	mov    esi,DWORD PTR [ebp+0x14]
10019093:	push   esi
10019094:	push   eax
10019095:	push   DWORD PTR [ebp+0xc]
10019098:	mov    edi,DWORD PTR [ebp+0x8]
1001909b:	push   edi
1001909c:	call   0x10018ee7
100190a1:	add    esp,0x10
100190a4:	dec    eax
100190a5:	je     0x100190c6
100190a7:	dec    eax
100190a8:	jne    0x100190de
100190aa:	push   0x1
100190ac:	lea    eax,[esi+0x8]
100190af:	push   eax
100190b0:	push   DWORD PTR [edi+0x18]
100190b3:	call   0x10018c64
100190b8:	pop    ecx
100190b9:	pop    ecx
100190ba:	push   eax
100190bb:	push   DWORD PTR [esi+0x18]
100190be:	push   ebx
100190bf:	call   0x10015b9c
100190c4:	jmp    0x100190de
100190c6:	lea    eax,[esi+0x8]
100190c9:	push   eax
100190ca:	push   DWORD PTR [edi+0x18]
100190cd:	call   0x10018c64
100190d2:	pop    ecx
100190d3:	pop    ecx
100190d4:	push   eax
100190d5:	push   DWORD PTR [esi+0x18]
100190d8:	push   ebx
100190d9:	call   0x10015b9c
100190de:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100190e5:	call   0x10017fcd
100190ea:	ret    
100190eb:	xor    eax,eax
100190ed:	inc    eax
100190ee:	ret    
100190ef:	mov    esp,DWORD PTR [ebp-0x18]
100190f2:	jmp    0x10019ccc
100190f7:	push   ebp
100190f8:	mov    ebp,esp
100190fa:	cmp    DWORD PTR [ebp+0x18],0x0
100190fe:	je     0x10019110
10019100:	push   DWORD PTR [ebp+0x18]
10019103:	push   ebx
10019104:	push   esi
10019105:	push   DWORD PTR [ebp+0x8]
10019108:	call   0x10019066
1001910d:	add    esp,0x10
10019110:	cmp    DWORD PTR [ebp+0x20],0x0
10019114:	push   DWORD PTR [ebp+0x8]
10019117:	jne    0x1001911c
10019119:	push   esi
1001911a:	jmp    0x1001911f
1001911c:	push   DWORD PTR [ebp+0x20]
1001911f:	call   0x10015ba3
10019124:	push   DWORD PTR [edi]
10019126:	push   DWORD PTR [ebp+0x14]
10019129:	push   DWORD PTR [ebp+0x10]
1001912c:	push   esi
1001912d:	call   0x10018aea
10019132:	mov    eax,DWORD PTR [edi+0x4]
10019135:	push   0x100
1001913a:	push   DWORD PTR [ebp+0x1c]
1001913d:	inc    eax
1001913e:	push   DWORD PTR [ebp+0x14]
10019141:	mov    DWORD PTR [esi+0x8],eax
10019144:	push   DWORD PTR [ebp+0xc]
10019147:	mov    ecx,DWORD PTR [ebx+0xc]
1001914a:	push   esi
1001914b:	push   DWORD PTR [ebp+0x8]
1001914e:	call   0x10018d4b
10019153:	add    esp,0x28
10019156:	test   eax,eax
10019158:	je     0x10019161
1001915a:	push   esi
1001915b:	push   eax
1001915c:	call   0x10015b6c
10019161:	pop    ebp
10019162:	ret    
10019163:	push   ebp
10019164:	mov    ebp,esp
10019166:	push   ecx
10019167:	push   ecx
10019168:	push   esi
10019169:	mov    esi,DWORD PTR [ebp+0x8]
1001916c:	cmp    DWORD PTR [esi],0x80000003
10019172:	je     0x10019252
10019178:	push   edi
10019179:	call   0x100199a6
1001917e:	cmp    DWORD PTR [eax+0x80],0x0
10019185:	je     0x100191c6
10019187:	call   0x100199a6
1001918c:	lea    edi,[eax+0x80]
10019192:	call   0x10019781
10019197:	cmp    DWORD PTR [edi],eax
10019199:	je     0x100191c6
1001919b:	cmp    DWORD PTR [esi],0xe0434f4d
100191a1:	je     0x100191c6
100191a3:	push   DWORD PTR [ebp+0x24]
100191a6:	push   DWORD PTR [ebp+0x20]
100191a9:	push   DWORD PTR [ebp+0x18]
100191ac:	push   DWORD PTR [ebp+0x14]
100191af:	push   DWORD PTR [ebp+0x10]
100191b2:	push   DWORD PTR [ebp+0xc]
100191b5:	push   esi
100191b6:	call   0x10015c5b
100191bb:	add    esp,0x1c
100191be:	test   eax,eax
100191c0:	jne    0x10019251
100191c6:	mov    edi,DWORD PTR [ebp+0x18]
100191c9:	cmp    DWORD PTR [edi+0xc],0x0
100191cd:	jne    0x100191d4
100191cf:	call   0x10019d18
100191d4:	mov    esi,DWORD PTR [ebp+0x1c]
100191d7:	lea    eax,[ebp-0x8]
100191da:	push   eax
100191db:	lea    eax,[ebp-0x4]
100191de:	push   eax
100191df:	push   esi
100191e0:	push   DWORD PTR [ebp+0x20]
100191e3:	push   edi
100191e4:	call   0x10015dcd
100191e9:	mov    edi,eax
100191eb:	mov    eax,DWORD PTR [ebp-0x4]
100191ee:	add    esp,0x14
100191f1:	cmp    eax,DWORD PTR [ebp-0x8]
100191f4:	jae    0x10019251
100191f6:	push   ebx
100191f7:	cmp    esi,DWORD PTR [edi]
100191f9:	jl     0x10019242
100191fb:	cmp    esi,DWORD PTR [edi+0x4]
100191fe:	jg     0x10019242
10019200:	mov    eax,DWORD PTR [edi+0xc]
10019203:	mov    ecx,DWORD PTR [edi+0x10]
10019206:	shl    eax,0x4
10019209:	add    eax,ecx
1001920b:	mov    ecx,DWORD PTR [eax-0xc]
1001920e:	test   ecx,ecx
10019210:	je     0x10019218
10019212:	cmp    BYTE PTR [ecx+0x8],0x0
10019216:	jne    0x10019242
10019218:	lea    ebx,[eax-0x10]
1001921b:	test   BYTE PTR [ebx],0x40
1001921e:	jne    0x10019242
10019220:	push   DWORD PTR [ebp+0x24]
10019223:	mov    esi,DWORD PTR [ebp+0xc]
10019226:	push   DWORD PTR [ebp+0x20]
10019229:	push   0x0
1001922b:	push   DWORD PTR [ebp+0x18]
1001922e:	push   DWORD PTR [ebp+0x14]
10019231:	push   DWORD PTR [ebp+0x10]
10019234:	push   DWORD PTR [ebp+0x8]
10019237:	call   0x100190f7
1001923c:	mov    esi,DWORD PTR [ebp+0x1c]
1001923f:	add    esp,0x1c
10019242:	inc    DWORD PTR [ebp-0x4]
10019245:	mov    eax,DWORD PTR [ebp-0x4]
10019248:	add    edi,0x14
1001924b:	cmp    eax,DWORD PTR [ebp-0x8]
1001924e:	jb     0x100191f7
10019250:	pop    ebx
10019251:	pop    edi
10019252:	pop    esi
10019253:	leave  
10019254:	ret    
10019255:	push   ebp
10019256:	mov    ebp,esp
10019258:	sub    esp,0x2c
1001925b:	mov    ecx,DWORD PTR [ebp+0xc]
1001925e:	push   ebx
1001925f:	mov    ebx,DWORD PTR [ebp+0x18]
10019262:	mov    eax,DWORD PTR [ebx+0x4]
10019265:	cmp    eax,0x80
1001926a:	push   esi
1001926b:	push   edi
1001926c:	mov    BYTE PTR [ebp-0x1],0x0
10019270:	jg     0x10019278
10019272:	movsx  ecx,BYTE PTR [ecx+0x8]
10019276:	jmp    0x1001927b
10019278:	mov    ecx,DWORD PTR [ecx+0x8]
1001927b:	cmp    ecx,0xffffffff
1001927e:	mov    DWORD PTR [ebp-0x8],ecx
10019281:	jl     0x10019287
10019283:	cmp    ecx,eax
10019285:	jl     0x1001928c
10019287:	call   0x10019d18
1001928c:	mov    esi,DWORD PTR [ebp+0x8]
1001928f:	mov    edi,0xe06d7363
10019294:	cmp    DWORD PTR [esi],edi
10019296:	jne    0x10019567
1001929c:	cmp    DWORD PTR [esi+0x10],0x3
100192a0:	mov    ebx,0x19930520
100192a5:	jne    0x100193d4
100192ab:	mov    eax,DWORD PTR [esi+0x14]
100192ae:	cmp    eax,ebx
100192b0:	je     0x100192c4
100192b2:	cmp    eax,0x19930521
100192b7:	je     0x100192c4
100192b9:	cmp    eax,0x19930522
100192be:	jne    0x100193d4
100192c4:	cmp    DWORD PTR [esi+0x1c],0x0
100192c8:	jne    0x100193d4
100192ce:	call   0x100199a6
100192d3:	cmp    DWORD PTR [eax+0x88],0x0
100192da:	je     0x100195a6
100192e0:	call   0x100199a6
100192e5:	mov    esi,DWORD PTR [eax+0x88]
100192eb:	mov    DWORD PTR [ebp+0x8],esi
100192ee:	call   0x100199a6
100192f3:	mov    eax,DWORD PTR [eax+0x8c]
100192f9:	push   0x1
100192fb:	push   esi
100192fc:	mov    DWORD PTR [ebp+0x10],eax
100192ff:	call   0x10020d83
10019304:	test   eax,eax
10019306:	pop    ecx
10019307:	pop    ecx
10019308:	jne    0x1001930f
1001930a:	call   0x10019d18
1001930f:	cmp    DWORD PTR [esi],edi
10019311:	jne    0x10019339
10019313:	cmp    DWORD PTR [esi+0x10],0x3
10019317:	jne    0x10019339
10019319:	mov    eax,DWORD PTR [esi+0x14]
1001931c:	cmp    eax,ebx
1001931e:	je     0x1001932e
10019320:	cmp    eax,0x19930521
10019325:	je     0x1001932e
10019327:	cmp    eax,0x19930522
1001932c:	jne    0x10019339
1001932e:	cmp    DWORD PTR [esi+0x1c],0x0
10019332:	jne    0x10019339
10019334:	call   0x10019d18
10019339:	call   0x100199a6
1001933e:	cmp    DWORD PTR [eax+0x94],0x0
10019345:	je     0x100193d4
1001934b:	call   0x100199a6
10019350:	mov    edi,DWORD PTR [eax+0x94]
10019356:	call   0x100199a6
1001935b:	push   DWORD PTR [ebp+0x8]
1001935e:	xor    esi,esi
10019360:	mov    DWORD PTR [eax+0x94],esi
10019366:	call   0x10018c89
1001936b:	test   al,al
1001936d:	pop    ecx
1001936e:	jne    0x100193cc
10019370:	xor    ebx,ebx
10019372:	cmp    DWORD PTR [edi],ebx
10019374:	jle    0x10019393
10019376:	mov    eax,DWORD PTR [edi+0x4]
10019379:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
1001937d:	push   0x10095354
10019382:	call   0x10016292
10019387:	test   al,al
10019389:	jne    0x10019398
1001938b:	inc    esi
1001938c:	add    ebx,0x10
1001938f:	cmp    esi,DWORD PTR [edi]
10019391:	jl     0x10019376
10019393:	jmp    0x10019ccc
10019398:	push   0x1
1001939a:	push   DWORD PTR [ebp+0x8]
1001939d:	call   0x10018c10
100193a2:	pop    ecx
100193a3:	pop    ecx
100193a4:	lea    eax,[ebp+0x8]
100193a7:	push   eax
100193a8:	lea    ecx,[ebp-0x2c]
100193ab:	mov    DWORD PTR [ebp+0x8],0x1007dec8
100193b2:	call   0x100162be
100193b7:	push   0x100858c4
100193bc:	lea    eax,[ebp-0x2c]
100193bf:	push   eax
100193c0:	mov    DWORD PTR [ebp-0x2c],0x1007dec0
100193c7:	call   0x1001621e
100193cc:	mov    esi,DWORD PTR [ebp+0x8]
100193cf:	mov    edi,0xe06d7363
100193d4:	cmp    DWORD PTR [esi],edi
100193d6:	jne    0x10019564
100193dc:	cmp    DWORD PTR [esi+0x10],0x3
100193e0:	jne    0x10019564
100193e6:	mov    eax,DWORD PTR [esi+0x14]
100193e9:	cmp    eax,ebx
100193eb:	je     0x100193ff
100193ed:	cmp    eax,0x19930521
100193f2:	je     0x100193ff
100193f4:	cmp    eax,0x19930522
100193f9:	jne    0x10019564
100193ff:	mov    edi,DWORD PTR [ebp+0x18]
10019402:	cmp    DWORD PTR [edi+0xc],0x0
10019406:	jbe    0x100194cb
1001940c:	lea    eax,[ebp-0x1c]
1001940f:	push   eax
10019410:	lea    eax,[ebp-0x10]
10019413:	push   eax
10019414:	push   DWORD PTR [ebp-0x8]
10019417:	push   DWORD PTR [ebp+0x20]
1001941a:	push   edi
1001941b:	call   0x10015dcd
10019420:	add    esp,0x14
10019423:	mov    edi,eax
10019425:	mov    eax,DWORD PTR [ebp-0x10]
10019428:	cmp    eax,DWORD PTR [ebp-0x1c]
1001942b:	jae    0x100194c8
10019431:	mov    eax,DWORD PTR [ebp-0x8]
10019434:	cmp    DWORD PTR [edi],eax
10019436:	jg     0x100194bd
1001943c:	cmp    eax,DWORD PTR [edi+0x4]
1001943f:	jg     0x100194bd
10019441:	mov    eax,DWORD PTR [edi+0x10]
10019444:	mov    DWORD PTR [ebp-0xc],eax
10019447:	mov    eax,DWORD PTR [edi+0xc]
1001944a:	test   eax,eax
1001944c:	mov    DWORD PTR [ebp-0x18],eax
1001944f:	jle    0x100194bd
10019451:	mov    eax,DWORD PTR [esi+0x1c]
10019454:	mov    eax,DWORD PTR [eax+0xc]
10019457:	lea    ebx,[eax+0x4]
1001945a:	mov    eax,DWORD PTR [eax]
1001945c:	test   eax,eax
1001945e:	mov    DWORD PTR [ebp-0x14],eax
10019461:	jle    0x10019486
10019463:	push   DWORD PTR [esi+0x1c]
10019466:	mov    eax,DWORD PTR [ebx]
10019468:	push   eax
10019469:	push   DWORD PTR [ebp-0xc]
1001946c:	mov    DWORD PTR [ebp-0x20],eax
1001946f:	call   0x10018a4a
10019474:	add    esp,0xc
10019477:	test   eax,eax
10019479:	jne    0x10019495
1001947b:	dec    DWORD PTR [ebp-0x14]
1001947e:	add    ebx,0x4
10019481:	cmp    DWORD PTR [ebp-0x14],eax
10019484:	jg     0x10019463
10019486:	dec    DWORD PTR [ebp-0x18]
10019489:	add    DWORD PTR [ebp-0xc],0x10
1001948d:	cmp    DWORD PTR [ebp-0x18],0x0
10019491:	jg     0x10019451
10019493:	jmp    0x100194bd
10019495:	push   DWORD PTR [ebp+0x24]
10019498:	mov    ebx,DWORD PTR [ebp-0xc]
1001949b:	push   DWORD PTR [ebp+0x20]
1001949e:	mov    BYTE PTR [ebp-0x1],0x1
100194a2:	push   DWORD PTR [ebp-0x20]
100194a5:	push   DWORD PTR [ebp+0x18]
100194a8:	push   DWORD PTR [ebp+0x14]
100194ab:	push   DWORD PTR [ebp+0x10]
100194ae:	push   esi
100194af:	mov    esi,DWORD PTR [ebp+0xc]
100194b2:	call   0x100190f7
100194b7:	mov    esi,DWORD PTR [ebp+0x8]
100194ba:	add    esp,0x1c
100194bd:	inc    DWORD PTR [ebp-0x10]
100194c0:	add    edi,0x14
100194c3:	jmp    0x10019425
100194c8:	mov    edi,DWORD PTR [ebp+0x18]
100194cb:	cmp    BYTE PTR [ebp+0x1c],0x0
100194cf:	je     0x100194db
100194d1:	push   0x1
100194d3:	push   esi
100194d4:	call   0x10018c10
100194d9:	pop    ecx
100194da:	pop    ecx
100194db:	cmp    BYTE PTR [ebp-0x1],0x0
100194df:	jne    0x10019593
100194e5:	mov    eax,DWORD PTR [edi]
100194e7:	and    eax,0x1fffffff
100194ec:	cmp    eax,0x19930521
100194f1:	jb     0x10019593
100194f7:	mov    edi,DWORD PTR [edi+0x1c]
100194fa:	test   edi,edi
100194fc:	je     0x10019593
10019502:	push   esi
10019503:	call   0x10018c89
10019508:	test   al,al
1001950a:	pop    ecx
1001950b:	jne    0x10019593
10019511:	call   0x100199a6
10019516:	call   0x100199a6
1001951b:	call   0x100199a6
10019520:	mov    DWORD PTR [eax+0x88],esi
10019526:	call   0x100199a6
1001952b:	cmp    DWORD PTR [ebp+0x24],0x0
1001952f:	mov    ecx,DWORD PTR [ebp+0x10]
10019532:	mov    DWORD PTR [eax+0x8c],ecx
10019538:	push   esi
10019539:	jne    0x10019540
1001953b:	push   DWORD PTR [ebp+0xc]
1001953e:	jmp    0x10019543
10019540:	push   DWORD PTR [ebp+0x24]
10019543:	call   0x10015ba3
10019548:	mov    esi,DWORD PTR [ebp+0x18]
1001954b:	push   0xffffffff
1001954d:	push   esi
1001954e:	push   DWORD PTR [ebp+0x14]
10019551:	push   DWORD PTR [ebp+0xc]
10019554:	call   0x10018aea
10019559:	add    esp,0x10
1001955c:	push   DWORD PTR [esi+0x1c]
1001955f:	call   0x10018d02
10019564:	mov    ebx,DWORD PTR [ebp+0x18]
10019567:	cmp    DWORD PTR [ebx+0xc],0x0
1001956b:	jbe    0x10019593
1001956d:	cmp    BYTE PTR [ebp+0x1c],0x0
10019571:	jne    0x10019393
10019577:	push   DWORD PTR [ebp+0x24]
1001957a:	push   DWORD PTR [ebp+0x20]
1001957d:	push   DWORD PTR [ebp-0x8]
10019580:	push   ebx
10019581:	push   DWORD PTR [ebp+0x14]
10019584:	push   DWORD PTR [ebp+0x10]
10019587:	push   DWORD PTR [ebp+0xc]
1001958a:	push   esi
1001958b:	call   0x10019163
10019590:	add    esp,0x20
10019593:	call   0x100199a6
10019598:	cmp    DWORD PTR [eax+0x94],0x0
1001959f:	je     0x100195a6
100195a1:	call   0x10019d18
100195a6:	pop    edi
100195a7:	pop    esi
100195a8:	pop    ebx
100195a9:	leave  
100195aa:	ret    
100195ab:	push   esi
100195ac:	push   DWORD PTR [esp+0x8]
100195b0:	mov    esi,ecx
100195b2:	call   0x10016324
100195b7:	mov    DWORD PTR [esi],0x1007dec0
100195bd:	mov    eax,esi
100195bf:	pop    esi
100195c0:	ret    0x4
100195c3:	push   ebp
100195c4:	mov    ebp,esp
100195c6:	push   ebx
100195c7:	push   esi
100195c8:	push   edi
100195c9:	call   0x100199a6
100195ce:	cmp    DWORD PTR [eax+0x20c],0x0
100195d5:	mov    eax,DWORD PTR [ebp+0x18]
100195d8:	mov    ecx,DWORD PTR [ebp+0x8]
100195db:	mov    edi,0xe06d7363
100195e0:	mov    esi,0x1fffffff
100195e5:	mov    ebx,0x19930522
100195ea:	jne    0x1001960c
100195ec:	mov    edx,DWORD PTR [ecx]
100195ee:	cmp    edx,edi
100195f0:	je     0x1001960c
100195f2:	cmp    edx,0x80000026
100195f8:	je     0x1001960c
100195fa:	mov    edx,DWORD PTR [eax]
100195fc:	and    edx,esi
100195fe:	cmp    edx,ebx
10019600:	jb     0x1001960c
10019602:	test   BYTE PTR [eax+0x20],0x1
10019606:	jne    0x1001969f
1001960c:	test   BYTE PTR [ecx+0x4],0x66
10019610:	je     0x10019635
10019612:	cmp    DWORD PTR [eax+0x4],0x0
10019616:	je     0x1001969f
1001961c:	cmp    DWORD PTR [ebp+0x1c],0x0
10019620:	jne    0x1001969f
10019622:	push   0xffffffff
10019624:	push   eax
10019625:	push   DWORD PTR [ebp+0x14]
10019628:	push   DWORD PTR [ebp+0xc]
1001962b:	call   0x10018aea
10019630:	add    esp,0x10
10019633:	jmp    0x1001969f
10019635:	cmp    DWORD PTR [eax+0xc],0x0
10019639:	jne    0x1001964d
1001963b:	mov    edx,DWORD PTR [eax]
1001963d:	and    edx,esi
1001963f:	cmp    edx,0x19930521
10019645:	jb     0x1001969f
10019647:	cmp    DWORD PTR [eax+0x1c],0x0
1001964b:	je     0x1001969f
1001964d:	cmp    DWORD PTR [ecx],edi
1001964f:	jne    0x10019683
10019651:	cmp    DWORD PTR [ecx+0x10],0x3
10019655:	jb     0x10019683
10019657:	cmp    DWORD PTR [ecx+0x14],ebx
1001965a:	jbe    0x10019683
1001965c:	mov    edx,DWORD PTR [ecx+0x1c]
1001965f:	mov    edx,DWORD PTR [edx+0x8]
10019662:	test   edx,edx
10019664:	je     0x10019683
10019666:	movzx  esi,BYTE PTR [ebp+0x24]
1001966a:	push   esi
1001966b:	push   DWORD PTR [ebp+0x20]
1001966e:	push   DWORD PTR [ebp+0x1c]
10019671:	push   eax
10019672:	push   DWORD PTR [ebp+0x14]
10019675:	push   DWORD PTR [ebp+0x10]
10019678:	push   DWORD PTR [ebp+0xc]
1001967b:	push   ecx
1001967c:	call   edx
1001967e:	add    esp,0x20
10019681:	jmp    0x100196a2
10019683:	push   DWORD PTR [ebp+0x20]
10019686:	push   DWORD PTR [ebp+0x1c]
10019689:	push   DWORD PTR [ebp+0x24]
1001968c:	push   eax
1001968d:	push   DWORD PTR [ebp+0x14]
10019690:	push   DWORD PTR [ebp+0x10]
10019693:	push   DWORD PTR [ebp+0xc]
10019696:	push   ecx
10019697:	call   0x10019255
1001969c:	add    esp,0x20
1001969f:	xor    eax,eax
100196a1:	inc    eax
100196a2:	pop    edi
100196a3:	pop    esi
100196a4:	pop    ebx
100196a5:	pop    ebp
100196a6:	ret    
100196a7:	push   ebp
100196a8:	mov    ebp,esp
100196aa:	push   ecx
100196ab:	push   ecx
100196ac:	push   ebx
100196ad:	push   esi
100196ae:	xor    esi,esi
100196b0:	lea    eax,[ebp-0x4]
100196b3:	inc    esi
100196b4:	xor    ebx,ebx
100196b6:	push   eax
100196b7:	mov    DWORD PTR [ebp-0x8],esi
100196ba:	mov    DWORD PTR [ebp-0x4],ebx
100196bd:	call   0x10019f2f
100196c2:	cmp    DWORD PTR [ebp-0x4],0x5
100196c6:	pop    ecx
100196c7:	jle    0x100196cd
100196c9:	mov    eax,esi
100196cb:	jmp    0x1001970f
100196cd:	push   edi
100196ce:	push   ebx
100196cf:	call   DWORD PTR ds:0x10034100
100196d5:	mov    esi,DWORD PTR [eax+0x3c]
100196d8:	add    esi,eax
100196da:	cmp    WORD PTR [esi+0x6],bx
100196de:	movzx  eax,WORD PTR [esi+0x14]
100196e2:	lea    edi,[eax+esi*1+0x18]
100196e6:	jbe    0x1001970b
100196e8:	push   edi
100196e9:	push   0x1007ded8
100196ee:	call   0x1001a250
100196f3:	test   eax,eax
100196f5:	pop    ecx
100196f6:	pop    ecx
100196f7:	je     0x10019707
100196f9:	movzx  eax,WORD PTR [esi+0x6]
100196fd:	inc    ebx
100196fe:	add    edi,0x28
10019701:	cmp    ebx,eax
10019703:	jb     0x100196e8
10019705:	jmp    0x1001970b
10019707:	and    DWORD PTR [ebp-0x8],0x0
1001970b:	mov    eax,DWORD PTR [ebp-0x8]
1001970e:	pop    edi
1001970f:	pop    esi
10019710:	pop    ebx
10019711:	leave  
10019712:	ret    
10019713:	push   esi
10019714:	push   DWORD PTR ds:0x10095378
1001971a:	mov    esi,DWORD PTR ds:0x1003422c
10019720:	call   esi
10019722:	test   eax,eax
10019724:	je     0x10019747
10019726:	mov    eax,ds:0x10095374
1001972b:	cmp    eax,0xffffffff
1001972e:	je     0x10019747
10019730:	push   eax
10019731:	push   DWORD PTR ds:0x10095378
10019737:	call   esi
10019739:	call   eax
1001973b:	test   eax,eax
1001973d:	je     0x10019747
1001973f:	mov    eax,DWORD PTR [eax+0x1f8]
10019745:	jmp    0x1001976d
10019747:	push   0x1007def0
1001974c:	call   DWORD PTR ds:0x10034100
10019752:	mov    esi,eax
10019754:	test   esi,esi
10019756:	je     0x1001977b
10019758:	call   0x100196a7
1001975d:	test   eax,eax
1001975f:	je     0x1001977b
10019761:	push   0x1007dee0
10019766:	push   esi
10019767:	call   DWORD PTR ds:0x10034044
1001976d:	test   eax,eax
1001976f:	je     0x1001977b
10019771:	push   DWORD PTR [esp+0x8]
10019775:	call   eax
10019777:	mov    DWORD PTR [esp+0x8],eax
1001977b:	mov    eax,DWORD PTR [esp+0x8]
1001977f:	pop    esi
10019780:	ret    
10019781:	push   0x0
10019783:	call   0x10019713
10019788:	pop    ecx
10019789:	ret    
1001978a:	push   esi
1001978b:	push   DWORD PTR ds:0x10095378
10019791:	mov    esi,DWORD PTR ds:0x1003422c
10019797:	call   esi
10019799:	test   eax,eax
1001979b:	je     0x100197be
1001979d:	mov    eax,ds:0x10095374
100197a2:	cmp    eax,0xffffffff
100197a5:	je     0x100197be
100197a7:	push   eax
100197a8:	push   DWORD PTR ds:0x10095378
100197ae:	call   esi
100197b0:	call   eax
100197b2:	test   eax,eax
100197b4:	je     0x100197be
100197b6:	mov    eax,DWORD PTR [eax+0x1fc]
100197bc:	jmp    0x100197e4
100197be:	push   0x1007def0
100197c3:	call   DWORD PTR ds:0x10034100
100197c9:	mov    esi,eax
100197cb:	test   esi,esi
100197cd:	je     0x100197f2
100197cf:	call   0x100196a7
100197d4:	test   eax,eax
100197d6:	je     0x100197f2
100197d8:	push   0x1007df00
100197dd:	push   esi
100197de:	call   DWORD PTR ds:0x10034044
100197e4:	test   eax,eax
100197e6:	je     0x100197f2
100197e8:	push   DWORD PTR [esp+0x8]
100197ec:	call   eax
100197ee:	mov    DWORD PTR [esp+0x8],eax
100197f2:	mov    eax,DWORD PTR [esp+0x8]
100197f6:	pop    esi
100197f7:	ret    
100197f8:	call   DWORD PTR ds:0x10034230
100197fe:	ret    0x4
10019801:	push   esi
10019802:	push   DWORD PTR ds:0x10095378
10019808:	call   DWORD PTR ds:0x1003422c
1001980e:	mov    esi,eax
10019810:	test   esi,esi
10019812:	jne    0x1001982f
10019814:	push   DWORD PTR ds:0x10097180
1001981a:	call   0x1001978a
1001981f:	pop    ecx
10019820:	mov    esi,eax
10019822:	push   esi
10019823:	push   DWORD PTR ds:0x10095378
10019829:	call   DWORD PTR ds:0x100341c4
1001982f:	mov    eax,esi
10019831:	pop    esi
10019832:	ret    
10019833:	mov    eax,ds:0x10095374
10019838:	cmp    eax,0xffffffff
1001983b:	je     0x10019853
1001983d:	push   eax
1001983e:	push   DWORD PTR ds:0x10097188
10019844:	call   0x1001978a
10019849:	pop    ecx
1001984a:	call   eax
1001984c:	or     DWORD PTR ds:0x10095374,0xffffffff
10019853:	mov    eax,ds:0x10095378
10019858:	cmp    eax,0xffffffff
1001985b:	je     0x1001986b
1001985d:	push   eax
1001985e:	call   DWORD PTR ds:0x100341c0
10019864:	or     DWORD PTR ds:0x10095378,0xffffffff
1001986b:	jmp    0x1001b70e
10019870:	push   0xc
10019872:	push   0x10085900
10019877:	call   0x10017f88
1001987c:	push   0x1007def0
10019881:	call   DWORD PTR ds:0x10034100
10019887:	mov    DWORD PTR [ebp-0x1c],eax
1001988a:	mov    esi,DWORD PTR [ebp+0x8]
1001988d:	mov    DWORD PTR [esi+0x5c],0x10095d38
10019894:	xor    edi,edi
10019896:	inc    edi
10019897:	mov    DWORD PTR [esi+0x14],edi
1001989a:	test   eax,eax
1001989c:	je     0x100198cd
1001989e:	call   0x100196a7
100198a3:	test   eax,eax
100198a5:	je     0x100198cd
100198a7:	push   0x1007dee0
100198ac:	push   DWORD PTR [ebp-0x1c]
100198af:	mov    ebx,DWORD PTR ds:0x10034044
100198b5:	call   ebx
100198b7:	mov    DWORD PTR [esi+0x1f8],eax
100198bd:	push   0x1007df00
100198c2:	push   DWORD PTR [ebp-0x1c]
100198c5:	call   ebx
100198c7:	mov    DWORD PTR [esi+0x1fc],eax
100198cd:	mov    DWORD PTR [esi+0x70],edi
100198d0:	mov    BYTE PTR [esi+0xc8],0x43
100198d7:	mov    BYTE PTR [esi+0x14b],0x43
100198de:	mov    eax,0x10095500
100198e3:	mov    DWORD PTR [esi+0x68],eax
100198e6:	push   eax
100198e7:	call   DWORD PTR ds:0x100340dc
100198ed:	push   0xc
100198ef:	call   0x1001b83b
100198f4:	pop    ecx
100198f5:	and    DWORD PTR [ebp-0x4],0x0
100198f9:	mov    eax,DWORD PTR [ebp+0xc]
100198fc:	mov    DWORD PTR [esi+0x6c],eax
100198ff:	test   eax,eax
10019901:	jne    0x1001990b
10019903:	mov    eax,ds:0x10095b08
10019908:	mov    DWORD PTR [esi+0x6c],eax
1001990b:	push   DWORD PTR [esi+0x6c]
1001990e:	call   0x1001818a
10019913:	pop    ecx
10019914:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001991b:	call   0x10019926
10019920:	call   0x10017fcd
10019925:	ret    
10019926:	push   0xc
10019928:	call   0x1001b763
1001992d:	pop    ecx
1001992e:	ret    
1001992f:	push   esi
10019930:	push   edi
10019931:	call   DWORD PTR ds:0x1003407c
10019937:	push   DWORD PTR ds:0x10095374
1001993d:	mov    edi,eax
1001993f:	call   0x10019801
10019944:	call   eax
10019946:	mov    esi,eax
10019948:	test   esi,esi
1001994a:	jne    0x1001999a
1001994c:	push   0x214
10019951:	push   0x1
10019953:	call   0x10018775
10019958:	mov    esi,eax
1001995a:	test   esi,esi
1001995c:	pop    ecx
1001995d:	pop    ecx
1001995e:	je     0x1001999a
10019960:	push   esi
10019961:	push   DWORD PTR ds:0x10095374
10019967:	push   DWORD PTR ds:0x10097184
1001996d:	call   0x1001978a
10019972:	pop    ecx
10019973:	call   eax
10019975:	test   eax,eax
10019977:	je     0x10019991
10019979:	push   0x0
1001997b:	push   esi
1001997c:	call   0x10019870
10019981:	pop    ecx
10019982:	pop    ecx
10019983:	call   DWORD PTR ds:0x10034138
10019989:	or     DWORD PTR [esi+0x4],0xffffffff
1001998d:	mov    DWORD PTR [esi],eax
1001998f:	jmp    0x1001999a
10019991:	push   esi
10019992:	call   0x10016b85
10019997:	pop    ecx
10019998:	xor    esi,esi
1001999a:	push   edi
1001999b:	call   DWORD PTR ds:0x10034078
100199a1:	pop    edi
100199a2:	mov    eax,esi
100199a4:	pop    esi
100199a5:	ret    
100199a6:	push   esi
100199a7:	call   0x1001992f
100199ac:	mov    esi,eax
100199ae:	test   esi,esi
100199b0:	jne    0x100199ba
100199b2:	push   0x10
100199b4:	call   0x10019e4f
100199b9:	pop    ecx
100199ba:	mov    eax,esi
100199bc:	pop    esi
100199bd:	ret    
100199be:	push   0x8
100199c0:	push   0x10085920
100199c5:	call   0x10017f88
100199ca:	mov    esi,DWORD PTR [ebp+0x8]
100199cd:	test   esi,esi
100199cf:	je     0x10019abf
100199d5:	mov    eax,DWORD PTR [esi+0x24]
100199d8:	test   eax,eax
100199da:	je     0x100199e3
100199dc:	push   eax
100199dd:	call   0x10016b85
100199e2:	pop    ecx
100199e3:	mov    eax,DWORD PTR [esi+0x2c]
100199e6:	test   eax,eax
100199e8:	je     0x100199f1
100199ea:	push   eax
100199eb:	call   0x10016b85
100199f0:	pop    ecx
100199f1:	mov    eax,DWORD PTR [esi+0x34]
100199f4:	test   eax,eax
100199f6:	je     0x100199ff
100199f8:	push   eax
100199f9:	call   0x10016b85
100199fe:	pop    ecx
100199ff:	mov    eax,DWORD PTR [esi+0x3c]
10019a02:	test   eax,eax
10019a04:	je     0x10019a0d
10019a06:	push   eax
10019a07:	call   0x10016b85
10019a0c:	pop    ecx
10019a0d:	mov    eax,DWORD PTR [esi+0x44]
10019a10:	test   eax,eax
10019a12:	je     0x10019a1b
10019a14:	push   eax
10019a15:	call   0x10016b85
10019a1a:	pop    ecx
10019a1b:	mov    eax,DWORD PTR [esi+0x48]
10019a1e:	test   eax,eax
10019a20:	je     0x10019a29
10019a22:	push   eax
10019a23:	call   0x10016b85
10019a28:	pop    ecx
10019a29:	mov    eax,DWORD PTR [esi+0x5c]
10019a2c:	cmp    eax,0x10095d38
10019a31:	je     0x10019a3a
10019a33:	push   eax
10019a34:	call   0x10016b85
10019a39:	pop    ecx
10019a3a:	push   0xd
10019a3c:	call   0x1001b83b
10019a41:	pop    ecx
10019a42:	and    DWORD PTR [ebp-0x4],0x0
10019a46:	mov    edi,DWORD PTR [esi+0x68]
10019a49:	test   edi,edi
10019a4b:	je     0x10019a67
10019a4d:	push   edi
10019a4e:	call   DWORD PTR ds:0x100340ec
10019a54:	test   eax,eax
10019a56:	jne    0x10019a67
10019a58:	cmp    edi,0x10095500
10019a5e:	je     0x10019a67
10019a60:	push   edi
10019a61:	call   0x10016b85
10019a66:	pop    ecx
10019a67:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10019a6e:	call   0x10019aca
10019a73:	push   0xc
10019a75:	call   0x1001b83b
10019a7a:	pop    ecx
10019a7b:	mov    DWORD PTR [ebp-0x4],0x1
10019a82:	mov    edi,DWORD PTR [esi+0x6c]
10019a85:	test   edi,edi
10019a87:	je     0x10019aac
10019a89:	push   edi
10019a8a:	call   0x10018210
10019a8f:	pop    ecx
10019a90:	cmp    edi,DWORD PTR ds:0x10095b08
10019a96:	je     0x10019aac
10019a98:	cmp    edi,0x10095a30
10019a9e:	je     0x10019aac
10019aa0:	cmp    DWORD PTR [edi],0x0
10019aa3:	jne    0x10019aac
10019aa5:	push   edi
10019aa6:	call   0x1001804a
10019aab:	pop    ecx
10019aac:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10019ab3:	call   0x10019ad6
10019ab8:	push   esi
10019ab9:	call   0x10016b85
10019abe:	pop    ecx
10019abf:	call   0x10017fcd
10019ac4:	ret    0x4
10019ac7:	mov    esi,DWORD PTR [ebp+0x8]
10019aca:	push   0xd
10019acc:	call   0x1001b763
10019ad1:	pop    ecx
10019ad2:	ret    
10019ad3:	mov    esi,DWORD PTR [ebp+0x8]
10019ad6:	push   0xc
10019ad8:	call   0x1001b763
10019add:	pop    ecx
10019ade:	ret    
10019adf:	cmp    DWORD PTR ds:0x10095374,0xffffffff
10019ae6:	je     0x10019b34
10019ae8:	push   edi
10019ae9:	mov    edi,DWORD PTR [esp+0x8]
10019aed:	test   edi,edi
10019aef:	jne    0x10019b17
10019af1:	push   esi
10019af2:	push   DWORD PTR ds:0x10095378
10019af8:	mov    esi,DWORD PTR ds:0x1003422c
10019afe:	call   esi
10019b00:	test   eax,eax
10019b02:	je     0x10019b16
10019b04:	push   DWORD PTR ds:0x10095374
10019b0a:	push   DWORD PTR ds:0x10095378
10019b10:	call   esi
10019b12:	call   eax
10019b14:	mov    edi,eax
10019b16:	pop    esi
10019b17:	push   0x0
10019b19:	push   DWORD PTR ds:0x10095374
10019b1f:	push   DWORD PTR ds:0x10097184
10019b25:	call   0x1001978a
10019b2a:	pop    ecx
10019b2b:	call   eax
10019b2d:	push   edi
10019b2e:	call   0x100199be
10019b33:	pop    edi
10019b34:	mov    eax,ds:0x10095378
10019b39:	cmp    eax,0xffffffff
10019b3c:	je     0x10019b47
10019b3e:	push   0x0
10019b40:	push   eax
10019b41:	call   DWORD PTR ds:0x100341c4
10019b47:	ret    
10019b48:	push   edi
10019b49:	push   0x1007def0
10019b4e:	call   DWORD PTR ds:0x10034100
10019b54:	mov    edi,eax
10019b56:	test   edi,edi
10019b58:	jne    0x10019b63
10019b5a:	call   0x10019833
10019b5f:	xor    eax,eax
10019b61:	pop    edi
10019b62:	ret    
10019b63:	push   esi
10019b64:	mov    esi,DWORD PTR ds:0x10034044
10019b6a:	push   0x1007df30
10019b6f:	push   edi
10019b70:	call   esi
10019b72:	push   0x1007df24
10019b77:	push   edi
10019b78:	mov    ds:0x1009717c,eax
10019b7d:	call   esi
10019b7f:	push   0x1007df18
10019b84:	push   edi
10019b85:	mov    ds:0x10097180,eax
10019b8a:	call   esi
10019b8c:	push   0x1007df10
10019b91:	push   edi
10019b92:	mov    ds:0x10097184,eax
10019b97:	call   esi
10019b99:	cmp    DWORD PTR ds:0x1009717c,0x0
10019ba0:	mov    esi,DWORD PTR ds:0x100341c4
10019ba6:	mov    ds:0x10097188,eax
10019bab:	je     0x10019bc3
10019bad:	cmp    DWORD PTR ds:0x10097180,0x0
10019bb4:	je     0x10019bc3
10019bb6:	cmp    DWORD PTR ds:0x10097184,0x0
10019bbd:	je     0x10019bc3
10019bbf:	test   eax,eax
10019bc1:	jne    0x10019be7
10019bc3:	mov    eax,ds:0x1003422c
10019bc8:	mov    ds:0x10097180,eax
10019bcd:	mov    eax,ds:0x100341c0
10019bd2:	mov    DWORD PTR ds:0x1009717c,0x100197f8
10019bdc:	mov    DWORD PTR ds:0x10097184,esi
10019be2:	mov    ds:0x10097188,eax
10019be7:	call   DWORD PTR ds:0x10034230
10019bed:	cmp    eax,0xffffffff
10019bf0:	mov    ds:0x10095378,eax
10019bf5:	je     0x10019cc7
10019bfb:	push   DWORD PTR ds:0x10097180
10019c01:	push   eax
10019c02:	call   esi
10019c04:	test   eax,eax
10019c06:	je     0x10019cc7
10019c0c:	call   0x1001a0ff
10019c11:	push   DWORD PTR ds:0x1009717c
10019c17:	call   0x10019713
10019c1c:	push   DWORD PTR ds:0x10097180
10019c22:	mov    ds:0x1009717c,eax
10019c27:	call   0x10019713
10019c2c:	push   DWORD PTR ds:0x10097184
10019c32:	mov    ds:0x10097180,eax
10019c37:	call   0x10019713
10019c3c:	push   DWORD PTR ds:0x10097188
10019c42:	mov    ds:0x10097184,eax
10019c47:	call   0x10019713
10019c4c:	add    esp,0x10
10019c4f:	mov    ds:0x10097188,eax
10019c54:	call   0x1001b6c5
10019c59:	test   eax,eax
10019c5b:	je     0x10019cc2
10019c5d:	push   0x100199be
10019c62:	push   DWORD PTR ds:0x1009717c
10019c68:	call   0x1001978a
10019c6d:	pop    ecx
10019c6e:	call   eax
10019c70:	cmp    eax,0xffffffff
10019c73:	mov    ds:0x10095374,eax
10019c78:	je     0x10019cc2
10019c7a:	push   0x214
10019c7f:	push   0x1
10019c81:	call   0x10018775
10019c86:	mov    esi,eax
10019c88:	test   esi,esi
10019c8a:	pop    ecx
10019c8b:	pop    ecx
10019c8c:	je     0x10019cc2
10019c8e:	push   esi
10019c8f:	push   DWORD PTR ds:0x10095374
10019c95:	push   DWORD PTR ds:0x10097184
10019c9b:	call   0x1001978a
10019ca0:	pop    ecx
10019ca1:	call   eax
10019ca3:	test   eax,eax
10019ca5:	je     0x10019cc2
10019ca7:	push   0x0
10019ca9:	push   esi
10019caa:	call   0x10019870
10019caf:	pop    ecx
10019cb0:	pop    ecx
10019cb1:	call   DWORD PTR ds:0x10034138
10019cb7:	or     DWORD PTR [esi+0x4],0xffffffff
10019cbb:	mov    DWORD PTR [esi],eax
10019cbd:	xor    eax,eax
10019cbf:	inc    eax
10019cc0:	jmp    0x10019cc9
10019cc2:	call   0x10019833
10019cc7:	xor    eax,eax
10019cc9:	pop    esi
10019cca:	pop    edi
10019ccb:	ret    
10019ccc:	push   0x8
10019cce:	push   0x10085948
10019cd3:	call   0x10017f88
10019cd8:	call   0x100199a6
10019cdd:	mov    eax,DWORD PTR [eax+0x78]
10019ce0:	test   eax,eax
10019ce2:	je     0x10019cfa
10019ce4:	and    DWORD PTR [ebp-0x4],0x0
10019ce8:	call   eax
10019cea:	jmp    0x10019cf3
10019cec:	xor    eax,eax
10019cee:	inc    eax
10019cef:	ret    
10019cf0:	mov    esp,DWORD PTR [ebp-0x18]
10019cf3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10019cfa:	call   0x10018808
10019cff:	call   0x10017fcd
10019d04:	ret    
10019d05:	call   0x100199a6
10019d0a:	mov    eax,DWORD PTR [eax+0x7c]
10019d0d:	test   eax,eax
10019d0f:	je     0x10019d13
10019d11:	call   eax
10019d13:	jmp    0x10019ccc
10019d18:	push   0x8
10019d1a:	push   0x10085968
10019d1f:	call   0x10017f88
10019d24:	push   DWORD PTR ds:0x1009718c
10019d2a:	call   0x1001978a
10019d2f:	pop    ecx
10019d30:	test   eax,eax
10019d32:	je     0x10019d4a
10019d34:	and    DWORD PTR [ebp-0x4],0x0
10019d38:	call   eax
10019d3a:	jmp    0x10019d43
10019d3c:	xor    eax,eax
10019d3e:	inc    eax
10019d3f:	ret    
10019d40:	mov    esp,DWORD PTR [ebp-0x18]
10019d43:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10019d4a:	jmp    0x10019ccc
10019d4f:	push   0x10019ccc
10019d54:	call   0x10019713
10019d59:	pop    ecx
10019d5a:	mov    ds:0x1009718c,eax
10019d5f:	ret    
10019d60:	push   ebp
10019d61:	mov    ebp,esp
10019d63:	sub    esp,0x4
10019d66:	push   ebx
10019d67:	push   ecx
10019d68:	mov    eax,DWORD PTR [ebp+0xc]
10019d6b:	add    eax,0xc
10019d6e:	mov    DWORD PTR [ebp-0x4],eax
10019d71:	mov    eax,DWORD PTR [ebp+0x8]
10019d74:	push   ebp
10019d75:	push   DWORD PTR [ebp+0x10]
10019d78:	mov    ecx,DWORD PTR [ebp+0x10]
10019d7b:	mov    ebp,DWORD PTR [ebp-0x4]
10019d7e:	call   0x10020e9c
10019d83:	push   esi
10019d84:	push   edi
10019d85:	call   eax
10019d87:	pop    edi
10019d88:	pop    esi
10019d89:	mov    ebx,ebp
10019d8b:	pop    ebp
10019d8c:	mov    ecx,DWORD PTR [ebp+0x10]
10019d8f:	push   ebp
10019d90:	mov    ebp,ebx
10019d92:	cmp    ecx,0x100
10019d98:	jne    0x10019d9f
10019d9a:	mov    ecx,0x2
10019d9f:	push   ecx
10019da0:	call   0x10020e9c
10019da5:	pop    ebp
10019da6:	pop    ecx
10019da7:	pop    ebx
10019da8:	leave  
10019da9:	ret    0xc
10019dac:	push   0x10
10019dae:	push   0x10085988
10019db3:	call   0x10017f88
10019db8:	xor    eax,eax
10019dba:	mov    ebx,DWORD PTR [ebp+0x8]
10019dbd:	xor    edi,edi
10019dbf:	cmp    ebx,edi
10019dc1:	setne  al
10019dc4:	cmp    eax,edi
10019dc6:	jne    0x10019de5
10019dc8:	call   0x1001a18e
10019dcd:	mov    DWORD PTR [eax],0x16
10019dd3:	push   edi
10019dd4:	push   edi
10019dd5:	push   edi
10019dd6:	push   edi
10019dd7:	push   edi
10019dd8:	call   0x1001616f
10019ddd:	add    esp,0x14
10019de0:	or     eax,0xffffffff
10019de3:	jmp    0x10019e38
10019de5:	cmp    DWORD PTR ds:0x10098bf8,0x3
10019dec:	jne    0x10019e26
10019dee:	push   0x4
10019df0:	call   0x1001b83b
10019df5:	pop    ecx
10019df6:	mov    DWORD PTR [ebp-0x4],edi
10019df9:	push   ebx
10019dfa:	call   0x1001b8b4
10019dff:	pop    ecx
10019e00:	mov    DWORD PTR [ebp-0x20],eax
10019e03:	cmp    eax,edi
10019e05:	je     0x10019e12
10019e07:	mov    esi,DWORD PTR [ebx-0x4]
10019e0a:	sub    esi,0x9
10019e0d:	mov    DWORD PTR [ebp-0x1c],esi
10019e10:	jmp    0x10019e15
10019e12:	mov    esi,DWORD PTR [ebp-0x1c]
10019e15:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10019e1c:	call   0x10019e46
10019e21:	cmp    DWORD PTR [ebp-0x20],edi
10019e24:	jne    0x10019e36
10019e26:	push   ebx
10019e27:	push   edi
10019e28:	push   DWORD PTR ds:0x10097220
10019e2e:	call   DWORD PTR ds:0x100341e8
10019e34:	mov    esi,eax
10019e36:	mov    eax,esi
10019e38:	call   0x10017fcd
10019e3d:	ret    
10019e3e:	xor    edi,edi
10019e40:	mov    ebx,DWORD PTR [ebp+0x8]
10019e43:	mov    esi,DWORD PTR [ebp-0x1c]
10019e46:	push   0x4
10019e48:	call   0x1001b763
10019e4d:	pop    ecx
10019e4e:	ret    
10019e4f:	call   0x1001c50b
10019e54:	push   DWORD PTR [esp+0x4]
10019e58:	call   0x1001c36b
10019e5d:	push   DWORD PTR ds:0x10095380
10019e63:	call   0x1001978a
10019e68:	push   0xff
10019e6d:	call   eax
10019e6f:	add    esp,0xc
10019e72:	ret    
10019e73:	push   0x1007df4c
10019e78:	call   DWORD PTR ds:0x10034100
10019e7e:	test   eax,eax
10019e80:	je     0x10019e98
10019e82:	push   0x1007df3c
10019e87:	push   eax
10019e88:	call   DWORD PTR ds:0x10034044
10019e8e:	test   eax,eax
10019e90:	je     0x10019e98
10019e92:	push   DWORD PTR [esp+0x4]
10019e96:	call   eax
10019e98:	ret    
10019e99:	push   DWORD PTR [esp+0x4]
10019e9d:	call   0x10019e73
10019ea2:	pop    ecx
10019ea3:	push   DWORD PTR [esp+0x4]
10019ea7:	call   DWORD PTR ds:0x10034050
10019ead:	int3   
10019eae:	push   0x8
10019eb0:	call   0x1001b83b
10019eb5:	pop    ecx
10019eb6:	ret    
10019eb7:	push   0x8
10019eb9:	call   0x1001b763
10019ebe:	pop    ecx
10019ebf:	ret    
10019ec0:	push   esi
10019ec1:	mov    esi,eax
10019ec3:	jmp    0x10019ed0
10019ec5:	mov    eax,DWORD PTR [esi]
10019ec7:	test   eax,eax
10019ec9:	je     0x10019ecd
10019ecb:	call   eax
10019ecd:	add    esi,0x4
10019ed0:	cmp    esi,DWORD PTR [esp+0x8]
10019ed4:	jb     0x10019ec5
10019ed6:	pop    esi
10019ed7:	ret    
10019ed8:	push   esi
10019ed9:	mov    esi,DWORD PTR [esp+0x8]
10019edd:	xor    eax,eax
10019edf:	jmp    0x10019ef0
10019ee1:	test   eax,eax
10019ee3:	jne    0x10019ef6
10019ee5:	mov    ecx,DWORD PTR [esi]
10019ee7:	test   ecx,ecx
10019ee9:	je     0x10019eed
10019eeb:	call   ecx
10019eed:	add    esi,0x4
10019ef0:	cmp    esi,DWORD PTR [esp+0xc]
10019ef4:	jb     0x10019ee1
10019ef6:	pop    esi
10019ef7:	ret    
10019ef8:	mov    ecx,DWORD PTR [esp+0x4]
10019efc:	push   esi
10019efd:	xor    esi,esi
10019eff:	cmp    ecx,esi
10019f01:	jne    0x10019f20
10019f03:	call   0x1001a18e
10019f08:	push   esi
10019f09:	push   esi
10019f0a:	push   esi
10019f0b:	push   esi
10019f0c:	push   esi
10019f0d:	mov    DWORD PTR [eax],0x16
10019f13:	call   0x1001616f
10019f18:	add    esp,0x14
10019f1b:	push   0x16
10019f1d:	pop    eax
10019f1e:	pop    esi
10019f1f:	ret    
10019f20:	mov    eax,ds:0x10097194
10019f25:	cmp    eax,esi
10019f27:	je     0x10019f03
10019f29:	mov    DWORD PTR [ecx],eax
10019f2b:	xor    eax,eax
10019f2d:	pop    esi
10019f2e:	ret    
10019f2f:	mov    eax,DWORD PTR [esp+0x4]
10019f33:	push   esi
10019f34:	xor    esi,esi
10019f36:	cmp    eax,esi
10019f38:	jne    0x10019f57
10019f3a:	call   0x1001a18e
10019f3f:	push   esi
10019f40:	push   esi
10019f41:	push   esi
10019f42:	push   esi
10019f43:	push   esi
10019f44:	mov    DWORD PTR [eax],0x16
10019f4a:	call   0x1001616f
10019f4f:	add    esp,0x14
10019f52:	push   0x16
10019f54:	pop    eax
10019f55:	pop    esi
10019f56:	ret    
10019f57:	cmp    DWORD PTR ds:0x10097194,esi
10019f5d:	je     0x10019f3a
10019f5f:	mov    ecx,DWORD PTR ds:0x100971a0
10019f65:	mov    DWORD PTR [eax],ecx
10019f67:	xor    eax,eax
10019f69:	pop    esi
10019f6a:	ret    
10019f6b:	cmp    DWORD PTR ds:0x1007e5ac,0x0
10019f72:	je     0x10019f8e
10019f74:	push   0x1007e5ac
10019f79:	call   0x100202b0
10019f7e:	test   eax,eax
10019f80:	pop    ecx
10019f81:	je     0x10019f8e
10019f83:	push   DWORD PTR [esp+0x4]
10019f87:	call   DWORD PTR ds:0x1007e5ac
10019f8d:	pop    ecx
10019f8e:	call   0x10020ec7
10019f93:	push   0x100342ec
10019f98:	push   0x100342d4
10019f9d:	call   0x10019ed8
10019fa2:	test   eax,eax
10019fa4:	pop    ecx
10019fa5:	pop    ecx
10019fa6:	jne    0x10019ffc
10019fa8:	push   esi
10019fa9:	push   edi
10019faa:	push   0x1001cc69
10019faf:	call   0x10016057
10019fb4:	mov    esi,0x10034254
10019fb9:	mov    eax,esi
10019fbb:	mov    edi,0x100342d0
10019fc0:	cmp    eax,edi
10019fc2:	pop    ecx
10019fc3:	jae    0x10019fd4
10019fc5:	mov    eax,DWORD PTR [esi]
10019fc7:	test   eax,eax
10019fc9:	je     0x10019fcd
10019fcb:	call   eax
10019fcd:	add    esi,0x4
10019fd0:	cmp    esi,edi
10019fd2:	jb     0x10019fc5
10019fd4:	cmp    DWORD PTR ds:0x10098c18,0x0
10019fdb:	pop    edi
10019fdc:	pop    esi
10019fdd:	je     0x10019ffa
10019fdf:	push   0x10098c18
10019fe4:	call   0x100202b0
10019fe9:	test   eax,eax
10019feb:	pop    ecx
10019fec:	je     0x10019ffa
10019fee:	push   0x0
10019ff0:	push   0x2
10019ff2:	push   0x0
10019ff4:	call   DWORD PTR ds:0x10098c18
10019ffa:	xor    eax,eax
10019ffc:	ret    
10019ffd:	push   0x10
10019fff:	push   0x100859a8
1001a004:	call   0x10017f88
1001a009:	push   0x8
1001a00b:	call   0x1001b83b
1001a010:	pop    ecx
1001a011:	xor    edi,edi
1001a013:	mov    DWORD PTR [ebp-0x4],edi
1001a016:	xor    ebx,ebx
1001a018:	inc    ebx
1001a019:	cmp    DWORD PTR ds:0x100971d4,ebx
1001a01f:	je     0x1001a09f
1001a021:	mov    DWORD PTR ds:0x100971d0,ebx
1001a027:	mov    al,BYTE PTR [ebp+0x10]
1001a02a:	mov    ds:0x100971cc,al
1001a02f:	cmp    DWORD PTR [ebp+0xc],edi
1001a032:	jne    0x1001a08f
1001a034:	push   DWORD PTR ds:0x10098c10
1001a03a:	call   0x1001978a
1001a03f:	mov    DWORD PTR [ebp-0x1c],eax
1001a042:	push   DWORD PTR ds:0x10098c0c
1001a048:	call   0x1001978a
1001a04d:	pop    ecx
1001a04e:	pop    ecx
1001a04f:	mov    esi,eax
1001a051:	mov    DWORD PTR [ebp-0x20],esi
1001a054:	cmp    DWORD PTR [ebp-0x1c],edi
1001a057:	je     0x1001a07f
1001a059:	sub    esi,0x4
1001a05c:	mov    DWORD PTR [ebp-0x20],esi
1001a05f:	cmp    esi,DWORD PTR [ebp-0x1c]
1001a062:	jb     0x1001a07f
1001a064:	cmp    DWORD PTR [esi],0x0
1001a067:	je     0x1001a059
1001a069:	mov    edi,DWORD PTR [esi]
1001a06b:	call   0x10019781
1001a070:	cmp    edi,eax
1001a072:	je     0x1001a059
1001a074:	push   edi
1001a075:	call   0x1001978a
1001a07a:	pop    ecx
1001a07b:	call   eax
1001a07d:	jmp    0x1001a059
1001a07f:	push   0x100342fc
1001a084:	mov    eax,0x100342f0
1001a089:	call   0x10019ec0
1001a08e:	pop    ecx
1001a08f:	push   0x10034304
1001a094:	mov    eax,0x10034300
1001a099:	call   0x10019ec0
1001a09e:	pop    ecx
1001a09f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001a0a6:	call   0x1001a0ca
1001a0ab:	cmp    DWORD PTR [ebp+0x10],0x0
1001a0af:	jne    0x1001a0d9
1001a0b1:	mov    DWORD PTR ds:0x100971d4,ebx
1001a0b7:	push   0x8
1001a0b9:	call   0x1001b763
1001a0be:	pop    ecx
1001a0bf:	push   DWORD PTR [ebp+0x8]
1001a0c2:	call   0x10019e99
1001a0c7:	xor    ebx,ebx
1001a0c9:	inc    ebx
1001a0ca:	cmp    DWORD PTR [ebp+0x10],0x0
1001a0ce:	je     0x1001a0d8
1001a0d0:	push   0x8
1001a0d2:	call   0x1001b763
1001a0d7:	pop    ecx
1001a0d8:	ret    
1001a0d9:	call   0x10017fcd
1001a0de:	ret    
1001a0df:	push   0x0
1001a0e1:	push   0x1
1001a0e3:	push   DWORD PTR [esp+0xc]
1001a0e7:	call   0x10019ffd
1001a0ec:	add    esp,0xc
1001a0ef:	ret    
1001a0f0:	push   0x1
1001a0f2:	push   0x0
1001a0f4:	push   0x0
1001a0f6:	call   0x10019ffd
1001a0fb:	add    esp,0xc
1001a0fe:	ret    
1001a0ff:	push   esi
1001a100:	call   0x10019781
1001a105:	mov    esi,eax
1001a107:	push   esi
1001a108:	call   0x1001a33d
1001a10d:	push   esi
1001a10e:	call   0x10020ef0
1001a113:	push   esi
1001a114:	call   0x10016069
1001a119:	push   esi
1001a11a:	call   0x1001e3af
1001a11f:	push   esi
1001a120:	call   0x10020ee6
1001a125:	push   esi
1001a126:	call   0x10020b79
1001a12b:	push   esi
1001a12c:	call   0x1001fe9d
1001a131:	push   esi
1001a132:	call   0x10019d4f
1001a137:	push   0x1001a0df
1001a13c:	call   0x10019713
1001a141:	add    esp,0x24
1001a144:	mov    ds:0x10095380,eax
1001a149:	pop    esi
1001a14a:	ret    
1001a14b:	and    DWORD PTR ds:0x10098c04,0x0
1001a152:	ret    
1001a153:	mov    eax,DWORD PTR [esp+0x4]
1001a157:	xor    ecx,ecx
1001a159:	cmp    eax,DWORD PTR [ecx*8+0x10095388]
1001a160:	je     0x1001a174
1001a162:	inc    ecx
1001a163:	cmp    ecx,0x2d
1001a166:	jb     0x1001a159
1001a168:	lea    ecx,[eax-0x13]
1001a16b:	cmp    ecx,0x11
1001a16e:	ja     0x1001a17c
1001a170:	push   0xd
1001a172:	pop    eax
1001a173:	ret    
1001a174:	mov    eax,DWORD PTR [ecx*8+0x1009538c]
1001a17b:	ret    
1001a17c:	add    eax,0xffffff44
1001a181:	push   0xe
1001a183:	pop    ecx
1001a184:	cmp    ecx,eax
1001a186:	sbb    eax,eax
1001a188:	and    eax,ecx
1001a18a:	add    eax,0x8
1001a18d:	ret    
1001a18e:	call   0x1001992f
1001a193:	test   eax,eax
1001a195:	jne    0x1001a19d
1001a197:	mov    eax,0x100954f0
1001a19c:	ret    
1001a19d:	add    eax,0x8
1001a1a0:	ret    
1001a1a1:	call   0x1001992f
1001a1a6:	test   eax,eax
1001a1a8:	jne    0x1001a1b0
1001a1aa:	mov    eax,0x100954f4
1001a1af:	ret    
1001a1b0:	add    eax,0xc
1001a1b3:	ret    
1001a1b4:	push   esi
1001a1b5:	call   0x1001a1a1
1001a1ba:	mov    ecx,DWORD PTR [esp+0x8]
1001a1be:	push   ecx
1001a1bf:	mov    DWORD PTR [eax],ecx
1001a1c1:	call   0x1001a153
1001a1c6:	pop    ecx
1001a1c7:	mov    esi,eax
1001a1c9:	call   0x1001a18e
1001a1ce:	mov    DWORD PTR [eax],esi
1001a1d0:	pop    esi
1001a1d1:	ret    
1001a1d2:	push   0xc
1001a1d4:	push   0x100859c8
1001a1d9:	call   0x10017f88
1001a1de:	push   0xe
1001a1e0:	call   0x1001b83b
1001a1e5:	pop    ecx
1001a1e6:	and    DWORD PTR [ebp-0x4],0x0
1001a1ea:	mov    esi,DWORD PTR [ebp+0x8]
1001a1ed:	mov    ecx,DWORD PTR [esi+0x4]
1001a1f0:	test   ecx,ecx
1001a1f2:	je     0x1001a223
1001a1f4:	mov    eax,ds:0x100971dc
1001a1f9:	mov    edx,0x100971d8
1001a1fe:	mov    DWORD PTR [ebp-0x1c],eax
1001a201:	test   eax,eax
1001a203:	je     0x1001a216
1001a205:	cmp    DWORD PTR [eax],ecx
1001a207:	jne    0x1001a235
1001a209:	mov    ecx,DWORD PTR [eax+0x4]
1001a20c:	mov    DWORD PTR [edx+0x4],ecx
1001a20f:	push   eax
1001a210:	call   0x10016b85
1001a215:	pop    ecx
1001a216:	push   DWORD PTR [esi+0x4]
1001a219:	call   0x10016b85
1001a21e:	pop    ecx
1001a21f:	and    DWORD PTR [esi+0x4],0x0
1001a223:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001a22a:	call   0x1001a239
1001a22f:	call   0x10017fcd
1001a234:	ret    
1001a235:	mov    edx,eax
1001a237:	jmp    0x1001a1fe
1001a239:	push   0xe
1001a23b:	call   0x1001b763
1001a240:	pop    ecx
1001a241:	ret    
1001a242:	int3   
1001a243:	int3   
1001a244:	int3   
1001a245:	int3   
1001a246:	int3   
1001a247:	int3   
1001a248:	int3   
1001a249:	int3   
1001a24a:	int3   
1001a24b:	int3   
1001a24c:	int3   
1001a24d:	int3   
1001a24e:	int3   
1001a24f:	int3   
1001a250:	mov    edx,DWORD PTR [esp+0x4]
1001a254:	mov    ecx,DWORD PTR [esp+0x8]
1001a258:	test   edx,0x3
1001a25e:	jne    0x1001a29c
1001a260:	mov    eax,DWORD PTR [edx]
1001a262:	cmp    al,BYTE PTR [ecx]
1001a264:	jne    0x1001a294
1001a266:	or     al,al
1001a268:	je     0x1001a290
1001a26a:	cmp    ah,BYTE PTR [ecx+0x1]
1001a26d:	jne    0x1001a294
1001a26f:	or     ah,ah
1001a271:	je     0x1001a290
1001a273:	shr    eax,0x10
1001a276:	cmp    al,BYTE PTR [ecx+0x2]
1001a279:	jne    0x1001a294
1001a27b:	or     al,al
1001a27d:	je     0x1001a290
1001a27f:	cmp    ah,BYTE PTR [ecx+0x3]
1001a282:	jne    0x1001a294
1001a284:	add    ecx,0x4
1001a287:	add    edx,0x4
1001a28a:	or     ah,ah
1001a28c:	jne    0x1001a260
1001a28e:	mov    edi,edi
1001a290:	xor    eax,eax
1001a292:	ret    
1001a293:	nop
1001a294:	sbb    eax,eax
1001a296:	shl    eax,1
1001a298:	add    eax,0x1
1001a29b:	ret    
1001a29c:	test   edx,0x1
1001a2a2:	je     0x1001a2bc
1001a2a4:	mov    al,BYTE PTR [edx]
1001a2a6:	add    edx,0x1
1001a2a9:	cmp    al,BYTE PTR [ecx]
1001a2ab:	jne    0x1001a294
1001a2ad:	add    ecx,0x1
1001a2b0:	or     al,al
1001a2b2:	je     0x1001a290
1001a2b4:	test   edx,0x2
1001a2ba:	je     0x1001a260
1001a2bc:	mov    ax,WORD PTR [edx]
1001a2bf:	add    edx,0x2
1001a2c2:	cmp    al,BYTE PTR [ecx]
1001a2c4:	jne    0x1001a294
1001a2c6:	or     al,al
1001a2c8:	je     0x1001a290
1001a2ca:	cmp    ah,BYTE PTR [ecx+0x1]
1001a2cd:	jne    0x1001a294
1001a2cf:	or     ah,ah
1001a2d1:	je     0x1001a290
1001a2d3:	add    ecx,0x2
1001a2d6:	jmp    0x1001a260
1001a2d8:	mov    ecx,DWORD PTR [esp+0x4]
1001a2dc:	push   ebx
1001a2dd:	xor    ebx,ebx
1001a2df:	cmp    ecx,ebx
1001a2e1:	push   esi
1001a2e2:	push   edi
1001a2e3:	je     0x1001a2ed
1001a2e5:	mov    edi,DWORD PTR [esp+0x14]
1001a2e9:	cmp    edi,ebx
1001a2eb:	ja     0x1001a308
1001a2ed:	call   0x1001a18e
1001a2f2:	push   0x16
1001a2f4:	pop    esi
1001a2f5:	mov    DWORD PTR [eax],esi
1001a2f7:	push   ebx
1001a2f8:	push   ebx
1001a2f9:	push   ebx
1001a2fa:	push   ebx
1001a2fb:	push   ebx
1001a2fc:	call   0x1001616f
1001a301:	add    esp,0x14
1001a304:	mov    eax,esi
1001a306:	jmp    0x1001a339
1001a308:	mov    esi,DWORD PTR [esp+0x18]
1001a30c:	cmp    esi,ebx
1001a30e:	jne    0x1001a314
1001a310:	mov    BYTE PTR [ecx],bl
1001a312:	jmp    0x1001a2ed
1001a314:	mov    edx,ecx
1001a316:	mov    al,BYTE PTR [esi]
1001a318:	mov    BYTE PTR [edx],al
1001a31a:	inc    edx
1001a31b:	inc    esi
1001a31c:	cmp    al,bl
1001a31e:	je     0x1001a323
1001a320:	dec    edi
1001a321:	jne    0x1001a316
1001a323:	cmp    edi,ebx
1001a325:	jne    0x1001a337
1001a327:	mov    BYTE PTR [ecx],bl
1001a329:	call   0x1001a18e
1001a32e:	push   0x22
1001a330:	pop    ecx
1001a331:	mov    DWORD PTR [eax],ecx
1001a333:	mov    esi,ecx
1001a335:	jmp    0x1001a2f7
1001a337:	xor    eax,eax
1001a339:	pop    edi
1001a33a:	pop    esi
1001a33b:	pop    ebx
1001a33c:	ret    
1001a33d:	mov    eax,DWORD PTR [esp+0x4]
1001a341:	mov    ds:0x100971e0,eax
1001a346:	ret    
1001a347:	push   DWORD PTR ds:0x100971e0
1001a34d:	call   0x1001978a
1001a352:	test   eax,eax
1001a354:	pop    ecx
1001a355:	je     0x1001a366
1001a357:	push   DWORD PTR [esp+0x4]
1001a35b:	call   eax
1001a35d:	test   eax,eax
1001a35f:	pop    ecx
1001a360:	je     0x1001a366
1001a362:	xor    eax,eax
1001a364:	inc    eax
1001a365:	ret    
1001a366:	xor    eax,eax
1001a368:	ret    
1001a369:	int3   
1001a36a:	int3   
1001a36b:	int3   
1001a36c:	int3   
1001a36d:	int3   
1001a36e:	int3   
1001a36f:	int3   
1001a370:	push   ebp
1001a371:	mov    ebp,esp
1001a373:	push   edi
1001a374:	push   esi
1001a375:	mov    esi,DWORD PTR [ebp+0xc]
1001a378:	mov    ecx,DWORD PTR [ebp+0x10]
1001a37b:	mov    edi,DWORD PTR [ebp+0x8]
1001a37e:	mov    eax,ecx
1001a380:	mov    edx,ecx
1001a382:	add    eax,esi
1001a384:	cmp    edi,esi
1001a386:	jbe    0x1001a390
1001a388:	cmp    edi,eax
1001a38a:	jb     0x1001a534
1001a390:	cmp    ecx,0x100
1001a396:	jb     0x1001a3b7
1001a398:	cmp    DWORD PTR ds:0x10098c00,0x0
1001a39f:	je     0x1001a3b7
1001a3a1:	push   edi
1001a3a2:	push   esi
1001a3a3:	and    edi,0xf
1001a3a6:	and    esi,0xf
1001a3a9:	cmp    edi,esi
1001a3ab:	pop    esi
1001a3ac:	pop    edi
1001a3ad:	jne    0x1001a3b7
1001a3af:	pop    esi
1001a3b0:	pop    edi
1001a3b1:	pop    ebp
1001a3b2:	jmp    0x1001b4b9
1001a3b7:	test   edi,0x3
1001a3bd:	jne    0x1001a3d4
1001a3bf:	shr    ecx,0x2
1001a3c2:	and    edx,0x3
1001a3c5:	cmp    ecx,0x8
1001a3c8:	jb     0x1001a3f4
1001a3ca:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001a3cc:	jmp    DWORD PTR [edx*4+0x1001a4e4]
1001a3d3:	nop
1001a3d4:	mov    eax,edi
1001a3d6:	mov    edx,0x3
1001a3db:	sub    ecx,0x4
1001a3de:	jb     0x1001a3ec
1001a3e0:	and    eax,0x3
1001a3e3:	add    ecx,eax
1001a3e5:	jmp    DWORD PTR [eax*4+0x1001a3f8]
1001a3ec:	jmp    DWORD PTR [ecx*4+0x1001a4f4]
1001a3f3:	nop
1001a3f4:	jmp    DWORD PTR [ecx*4+0x1001a478]
1001a3fb:	nop
1001a3fc:	or     BYTE PTR [ecx+eax*1+0x1a43410],ah
1001a403:	adc    BYTE PTR [eax-0x5c],bl
1001a406:	add    DWORD PTR [eax],edx
1001a408:	and    edx,ecx
1001a40a:	mov    al,BYTE PTR [esi]
1001a40c:	mov    BYTE PTR [edi],al
1001a40e:	mov    al,BYTE PTR [esi+0x1]
1001a411:	mov    BYTE PTR [edi+0x1],al
1001a414:	mov    al,BYTE PTR [esi+0x2]
1001a417:	shr    ecx,0x2
1001a41a:	mov    BYTE PTR [edi+0x2],al
1001a41d:	add    esi,0x3
1001a420:	add    edi,0x3
1001a423:	cmp    ecx,0x8
1001a426:	jb     0x1001a3f4
1001a428:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001a42a:	jmp    DWORD PTR [edx*4+0x1001a4e4]
1001a431:	lea    ecx,[ecx+0x0]
1001a434:	and    edx,ecx
1001a436:	mov    al,BYTE PTR [esi]
1001a438:	mov    BYTE PTR [edi],al
1001a43a:	mov    al,BYTE PTR [esi+0x1]
1001a43d:	shr    ecx,0x2
1001a440:	mov    BYTE PTR [edi+0x1],al
1001a443:	add    esi,0x2
1001a446:	add    edi,0x2
1001a449:	cmp    ecx,0x8
1001a44c:	jb     0x1001a3f4
1001a44e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001a450:	jmp    DWORD PTR [edx*4+0x1001a4e4]
1001a457:	nop
1001a458:	and    edx,ecx
1001a45a:	mov    al,BYTE PTR [esi]
1001a45c:	mov    BYTE PTR [edi],al
1001a45e:	add    esi,0x1
1001a461:	shr    ecx,0x2
1001a464:	add    edi,0x1
1001a467:	cmp    ecx,0x8
1001a46a:	jb     0x1001a3f4
1001a46c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001a46e:	jmp    DWORD PTR [edx*4+0x1001a4e4]
1001a475:	lea    ecx,[ecx+0x0]
1001a478:	(bad)  [ecx+eax*1+0x1a4c810]
1001a47f:	adc    al,al
1001a481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001a482:	add    DWORD PTR [eax],edx
1001a484:	mov    eax,0xb01001a4
1001a489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001a48a:	add    DWORD PTR [eax],edx
1001a48c:	test   al,0xa4
1001a48e:	add    DWORD PTR [eax],edx
1001a490:	mov    al,ds:0x981001a4
1001a495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001a496:	add    DWORD PTR [eax],edx
1001a498:	mov    eax,DWORD PTR [esi+ecx*4-0x1c]
1001a49c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
1001a4a0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
1001a4a4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
1001a4a8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
1001a4ac:	mov    DWORD PTR [edi+ecx*4-0x14],eax
1001a4b0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
1001a4b4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
1001a4b8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
1001a4bc:	mov    DWORD PTR [edi+ecx*4-0xc],eax
1001a4c0:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
1001a4c4:	mov    DWORD PTR [edi+ecx*4-0x8],eax
1001a4c8:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
1001a4cc:	mov    DWORD PTR [edi+ecx*4-0x4],eax
1001a4d0:	lea    eax,[ecx*4+0x0]
1001a4d7:	add    esi,eax
1001a4d9:	add    edi,eax
1001a4db:	jmp    DWORD PTR [edx*4+0x1001a4e4]
1001a4e2:	mov    edi,edi
1001a4e4:	hlt    
1001a4e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001a4e6:	add    DWORD PTR [eax],edx
1001a4e8:	cld    
1001a4e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001a4ea:	add    DWORD PTR [eax],edx
1001a4ec:	or     BYTE PTR [ebp-0x5ae3efff],ah
1001a4f2:	add    DWORD PTR [eax],edx
1001a4f4:	mov    eax,DWORD PTR [ebp+0x8]
1001a4f7:	pop    esi
1001a4f8:	pop    edi
1001a4f9:	leave  
1001a4fa:	ret    
1001a4fb:	nop
1001a4fc:	mov    al,BYTE PTR [esi]
1001a4fe:	mov    BYTE PTR [edi],al
1001a500:	mov    eax,DWORD PTR [ebp+0x8]
1001a503:	pop    esi
1001a504:	pop    edi
1001a505:	leave  
1001a506:	ret    
1001a507:	nop
1001a508:	mov    al,BYTE PTR [esi]
1001a50a:	mov    BYTE PTR [edi],al
1001a50c:	mov    al,BYTE PTR [esi+0x1]
1001a50f:	mov    BYTE PTR [edi+0x1],al
1001a512:	mov    eax,DWORD PTR [ebp+0x8]
1001a515:	pop    esi
1001a516:	pop    edi
1001a517:	leave  
1001a518:	ret    
1001a519:	lea    ecx,[ecx+0x0]
1001a51c:	mov    al,BYTE PTR [esi]
1001a51e:	mov    BYTE PTR [edi],al
1001a520:	mov    al,BYTE PTR [esi+0x1]
1001a523:	mov    BYTE PTR [edi+0x1],al
1001a526:	mov    al,BYTE PTR [esi+0x2]
1001a529:	mov    BYTE PTR [edi+0x2],al
1001a52c:	mov    eax,DWORD PTR [ebp+0x8]
1001a52f:	pop    esi
1001a530:	pop    edi
1001a531:	leave  
1001a532:	ret    
1001a533:	nop
1001a534:	lea    esi,[ecx+esi*1-0x4]
1001a538:	lea    edi,[ecx+edi*1-0x4]
1001a53c:	test   edi,0x3
1001a542:	jne    0x1001a568
1001a544:	shr    ecx,0x2
1001a547:	and    edx,0x3
1001a54a:	cmp    ecx,0x8
1001a54d:	jb     0x1001a55c
1001a54f:	std    
1001a550:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001a552:	cld    
1001a553:	jmp    DWORD PTR [edx*4+0x1001a680]
1001a55a:	mov    edi,edi
1001a55c:	neg    ecx
1001a55e:	jmp    DWORD PTR [ecx*4+0x1001a630]
1001a565:	lea    ecx,[ecx+0x0]
1001a568:	mov    eax,edi
1001a56a:	mov    edx,0x3
1001a56f:	cmp    ecx,0x4
1001a572:	jb     0x1001a580
1001a574:	and    eax,0x3
1001a577:	sub    ecx,eax
1001a579:	jmp    DWORD PTR [eax*4+0x1001a584]
1001a580:	jmp    DWORD PTR [ecx*4+0x1001a680]
1001a587:	nop
1001a588:	xchg   esp,eax
1001a589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001a58a:	add    DWORD PTR [eax],edx
1001a58c:	mov    eax,0xe01001a5
1001a591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001a592:	add    DWORD PTR [eax],edx
1001a594:	mov    al,BYTE PTR [esi+0x3]
1001a597:	and    edx,ecx
1001a599:	mov    BYTE PTR [edi+0x3],al
1001a59c:	sub    esi,0x1
1001a59f:	shr    ecx,0x2
1001a5a2:	sub    edi,0x1
1001a5a5:	cmp    ecx,0x8
1001a5a8:	jb     0x1001a55c
1001a5aa:	std    
1001a5ab:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001a5ad:	cld    
1001a5ae:	jmp    DWORD PTR [edx*4+0x1001a680]
1001a5b5:	lea    ecx,[ecx+0x0]
1001a5b8:	mov    al,BYTE PTR [esi+0x3]
1001a5bb:	and    edx,ecx
1001a5bd:	mov    BYTE PTR [edi+0x3],al
1001a5c0:	mov    al,BYTE PTR [esi+0x2]
1001a5c3:	shr    ecx,0x2
1001a5c6:	mov    BYTE PTR [edi+0x2],al
1001a5c9:	sub    esi,0x2
1001a5cc:	sub    edi,0x2
1001a5cf:	cmp    ecx,0x8
1001a5d2:	jb     0x1001a55c
1001a5d4:	std    
1001a5d5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001a5d7:	cld    
1001a5d8:	jmp    DWORD PTR [edx*4+0x1001a680]
1001a5df:	nop
1001a5e0:	mov    al,BYTE PTR [esi+0x3]
1001a5e3:	and    edx,ecx
1001a5e5:	mov    BYTE PTR [edi+0x3],al
1001a5e8:	mov    al,BYTE PTR [esi+0x2]
1001a5eb:	mov    BYTE PTR [edi+0x2],al
1001a5ee:	mov    al,BYTE PTR [esi+0x1]
1001a5f1:	shr    ecx,0x2
1001a5f4:	mov    BYTE PTR [edi+0x1],al
1001a5f7:	sub    esi,0x3
1001a5fa:	sub    edi,0x3
1001a5fd:	cmp    ecx,0x8
1001a600:	jb     0x1001a55c
1001a606:	std    
1001a607:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001a609:	cld    
1001a60a:	jmp    DWORD PTR [edx*4+0x1001a680]
1001a611:	lea    ecx,[ecx+0x0]
1001a614:	xor    al,0xa6
1001a616:	add    DWORD PTR [eax],edx
1001a618:	cmp    al,0xa6
1001a61a:	add    DWORD PTR [eax],edx
1001a61c:	inc    esp
1001a61d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1001a61e:	add    DWORD PTR [eax],edx
1001a620:	dec    esp
1001a621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1001a622:	add    DWORD PTR [eax],edx
1001a624:	push   esp
1001a625:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1001a626:	add    DWORD PTR [eax],edx
1001a628:	pop    esp
1001a629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1001a62a:	add    DWORD PTR [eax],edx
1001a62c:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
1001a62e:	add    DWORD PTR [eax],edx
1001a630:	ja     0x1001a5d8
1001a632:	add    DWORD PTR [eax],edx
1001a634:	mov    eax,DWORD PTR [esi+ecx*4+0x1c]
1001a638:	mov    DWORD PTR [edi+ecx*4+0x1c],eax
1001a63c:	mov    eax,DWORD PTR [esi+ecx*4+0x18]
1001a640:	mov    DWORD PTR [edi+ecx*4+0x18],eax
1001a644:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
1001a648:	mov    DWORD PTR [edi+ecx*4+0x14],eax
1001a64c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
1001a650:	mov    DWORD PTR [edi+ecx*4+0x10],eax
1001a654:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
1001a658:	mov    DWORD PTR [edi+ecx*4+0xc],eax
1001a65c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
1001a660:	mov    DWORD PTR [edi+ecx*4+0x8],eax
1001a664:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
1001a668:	mov    DWORD PTR [edi+ecx*4+0x4],eax
1001a66c:	lea    eax,[ecx*4+0x0]
1001a673:	add    esi,eax
1001a675:	add    edi,eax
1001a677:	jmp    DWORD PTR [edx*4+0x1001a680]
1001a67e:	mov    edi,edi
1001a680:	nop
1001a681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1001a682:	add    DWORD PTR [eax],edx
1001a684:	cwde   
1001a685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1001a686:	add    DWORD PTR [eax],edx
1001a688:	test   al,0xa6
1001a68a:	add    DWORD PTR [eax],edx
1001a68c:	mov    esp,0x8b1001a6
1001a691:	inc    ebp
1001a692:	or     BYTE PTR [esi+0x5f],bl
1001a695:	leave  
1001a696:	ret    
1001a697:	nop
1001a698:	mov    al,BYTE PTR [esi+0x3]
1001a69b:	mov    BYTE PTR [edi+0x3],al
1001a69e:	mov    eax,DWORD PTR [ebp+0x8]
1001a6a1:	pop    esi
1001a6a2:	pop    edi
1001a6a3:	leave  
1001a6a4:	ret    
1001a6a5:	lea    ecx,[ecx+0x0]
1001a6a8:	mov    al,BYTE PTR [esi+0x3]
1001a6ab:	mov    BYTE PTR [edi+0x3],al
1001a6ae:	mov    al,BYTE PTR [esi+0x2]
1001a6b1:	mov    BYTE PTR [edi+0x2],al
1001a6b4:	mov    eax,DWORD PTR [ebp+0x8]
1001a6b7:	pop    esi
1001a6b8:	pop    edi
1001a6b9:	leave  
1001a6ba:	ret    
1001a6bb:	nop
1001a6bc:	mov    al,BYTE PTR [esi+0x3]
1001a6bf:	mov    BYTE PTR [edi+0x3],al
1001a6c2:	mov    al,BYTE PTR [esi+0x2]
1001a6c5:	mov    BYTE PTR [edi+0x2],al
1001a6c8:	mov    al,BYTE PTR [esi+0x1]
1001a6cb:	mov    BYTE PTR [edi+0x1],al
1001a6ce:	mov    eax,DWORD PTR [ebp+0x8]
1001a6d1:	pop    esi
1001a6d2:	pop    edi
1001a6d3:	leave  
1001a6d4:	ret    
1001a6d5:	push   ebp
1001a6d6:	mov    ebp,esp
1001a6d8:	sub    esp,0x18
1001a6db:	push   ebx
1001a6dc:	push   edi
1001a6dd:	push   DWORD PTR [ebp+0x8]
1001a6e0:	lea    ecx,[ebp-0x18]
1001a6e3:	call   0x100165fa
1001a6e8:	mov    eax,DWORD PTR [ebp+0x10]
1001a6eb:	mov    edi,DWORD PTR [ebp+0xc]
1001a6ee:	xor    ebx,ebx
1001a6f0:	cmp    eax,ebx
1001a6f2:	je     0x1001a6f6
1001a6f4:	mov    DWORD PTR [eax],edi
1001a6f6:	cmp    edi,ebx
1001a6f8:	jne    0x1001a725
1001a6fa:	call   0x1001a18e
1001a6ff:	push   ebx
1001a700:	push   ebx
1001a701:	push   ebx
1001a702:	push   ebx
1001a703:	push   ebx
1001a704:	mov    DWORD PTR [eax],0x16
1001a70a:	call   0x1001616f
1001a70f:	add    esp,0x14
1001a712:	cmp    BYTE PTR [ebp-0xc],bl
1001a715:	je     0x1001a71e
1001a717:	mov    eax,DWORD PTR [ebp-0x10]
1001a71a:	and    DWORD PTR [eax+0x70],0xfffffffd
1001a71e:	xor    eax,eax
1001a720:	jmp    0x1001a8c8
1001a725:	cmp    DWORD PTR [ebp+0x14],ebx
1001a728:	je     0x1001a736
1001a72a:	cmp    DWORD PTR [ebp+0x14],0x2
1001a72e:	jl     0x1001a6fa
1001a730:	cmp    DWORD PTR [ebp+0x14],0x24
1001a734:	jg     0x1001a6fa
1001a736:	push   esi
1001a737:	movzx  esi,WORD PTR [edi]
1001a73a:	mov    DWORD PTR [ebp-0x4],ebx
1001a73d:	add    edi,0x2
1001a740:	jmp    0x1001a747
1001a742:	movzx  esi,WORD PTR [edi]
1001a745:	inc    edi
1001a746:	inc    edi
1001a747:	lea    eax,[ebp-0x18]
1001a74a:	push   eax
1001a74b:	push   0x8
1001a74d:	push   esi
1001a74e:	call   0x1001ce9a
1001a753:	add    esp,0xc
1001a756:	test   eax,eax
1001a758:	jne    0x1001a742
1001a75a:	cmp    si,0x2d
1001a75e:	jne    0x1001a766
1001a760:	or     DWORD PTR [ebp+0x18],0x2
1001a764:	jmp    0x1001a76c
1001a766:	cmp    si,0x2b
1001a76a:	jne    0x1001a771
1001a76c:	movzx  esi,WORD PTR [edi]
1001a76f:	inc    edi
1001a770:	inc    edi
1001a771:	cmp    DWORD PTR [ebp+0x14],ebx
1001a774:	jne    0x1001a7a9
1001a776:	push   esi
1001a777:	call   0x10020fcf
1001a77c:	test   eax,eax
1001a77e:	pop    ecx
1001a77f:	je     0x1001a78a
1001a781:	mov    DWORD PTR [ebp+0x14],0xa
1001a788:	jmp    0x1001a7d0
1001a78a:	movzx  eax,WORD PTR [edi]
1001a78d:	cmp    ax,0x78
1001a791:	je     0x1001a7a2
1001a793:	cmp    ax,0x58
1001a797:	je     0x1001a7a2
1001a799:	mov    DWORD PTR [ebp+0x14],0x8
1001a7a0:	jmp    0x1001a7d0
1001a7a2:	mov    DWORD PTR [ebp+0x14],0x10
1001a7a9:	cmp    DWORD PTR [ebp+0x14],0x10
1001a7ad:	jne    0x1001a7d0
1001a7af:	push   esi
1001a7b0:	call   0x10020fcf
1001a7b5:	test   eax,eax
1001a7b7:	pop    ecx
1001a7b8:	jne    0x1001a7d0
1001a7ba:	movzx  eax,WORD PTR [edi]
1001a7bd:	cmp    ax,0x78
1001a7c1:	je     0x1001a7c9
1001a7c3:	cmp    ax,0x58
1001a7c7:	jne    0x1001a7d0
1001a7c9:	inc    edi
1001a7ca:	inc    edi
1001a7cb:	movzx  esi,WORD PTR [edi]
1001a7ce:	inc    edi
1001a7cf:	inc    edi
1001a7d0:	or     eax,0xffffffff
1001a7d3:	xor    edx,edx
1001a7d5:	div    DWORD PTR [ebp+0x14]
1001a7d8:	mov    DWORD PTR [ebp-0x8],edx
1001a7db:	mov    ebx,eax
1001a7dd:	push   esi
1001a7de:	call   0x10020fcf
1001a7e3:	cmp    eax,0xffffffff
1001a7e6:	pop    ecx
1001a7e7:	jne    0x1001a810
1001a7e9:	cmp    si,0x41
1001a7ed:	jb     0x1001a7f5
1001a7ef:	cmp    si,0x5a
1001a7f3:	jbe    0x1001a7fe
1001a7f5:	lea    eax,[esi-0x61]
1001a7f8:	cmp    ax,0x19
1001a7fc:	ja     0x1001a82f
1001a7fe:	lea    eax,[esi-0x61]
1001a801:	cmp    ax,0x19
1001a805:	movzx  eax,si
1001a808:	ja     0x1001a80d
1001a80a:	sub    eax,0x20
1001a80d:	add    eax,0xffffffc9
1001a810:	cmp    eax,DWORD PTR [ebp+0x14]
1001a813:	jae    0x1001a82f
1001a815:	or     DWORD PTR [ebp+0x18],0x8
1001a819:	cmp    DWORD PTR [ebp-0x4],ebx
1001a81c:	jb     0x1001a847
1001a81e:	jne    0x1001a825
1001a820:	cmp    eax,DWORD PTR [ebp-0x8]
1001a823:	jbe    0x1001a847
1001a825:	or     DWORD PTR [ebp+0x18],0x4
1001a829:	cmp    DWORD PTR [ebp+0x10],0x0
1001a82d:	jne    0x1001a853
1001a82f:	mov    eax,DWORD PTR [ebp+0x18]
1001a832:	dec    edi
1001a833:	dec    edi
1001a834:	test   al,0x8
1001a836:	jne    0x1001a85a
1001a838:	cmp    DWORD PTR [ebp+0x10],0x0
1001a83c:	je     0x1001a841
1001a83e:	mov    edi,DWORD PTR [ebp+0xc]
1001a841:	and    DWORD PTR [ebp-0x4],0x0
1001a845:	jmp    0x1001a8a5
1001a847:	mov    ecx,DWORD PTR [ebp-0x4]
1001a84a:	imul   ecx,DWORD PTR [ebp+0x14]
1001a84e:	add    ecx,eax
1001a850:	mov    DWORD PTR [ebp-0x4],ecx
1001a853:	movzx  esi,WORD PTR [edi]
1001a856:	inc    edi
1001a857:	inc    edi
1001a858:	jmp    0x1001a7dd
1001a85a:	test   al,0x4
1001a85c:	mov    esi,0x7fffffff
1001a861:	jne    0x1001a87e
1001a863:	test   al,0x1
1001a865:	jne    0x1001a8a5
1001a867:	and    eax,0x2
1001a86a:	je     0x1001a875
1001a86c:	cmp    DWORD PTR [ebp-0x4],0x80000000
1001a873:	ja     0x1001a87e
1001a875:	test   eax,eax
1001a877:	jne    0x1001a8a5
1001a879:	cmp    DWORD PTR [ebp-0x4],esi
1001a87c:	jbe    0x1001a8a5
1001a87e:	call   0x1001a18e
1001a883:	test   BYTE PTR [ebp+0x18],0x1
1001a887:	mov    DWORD PTR [eax],0x22
1001a88d:	je     0x1001a895
1001a88f:	or     DWORD PTR [ebp-0x4],0xffffffff
1001a893:	jmp    0x1001a8a5
1001a895:	mov    al,BYTE PTR [ebp+0x18]
1001a898:	and    al,0x2
1001a89a:	neg    al
1001a89c:	sbb    eax,eax
1001a89e:	neg    eax
1001a8a0:	add    eax,esi
1001a8a2:	mov    DWORD PTR [ebp-0x4],eax
1001a8a5:	mov    eax,DWORD PTR [ebp+0x10]
1001a8a8:	test   eax,eax
1001a8aa:	pop    esi
1001a8ab:	je     0x1001a8af
1001a8ad:	mov    DWORD PTR [eax],edi
1001a8af:	test   BYTE PTR [ebp+0x18],0x2
1001a8b3:	je     0x1001a8b8
1001a8b5:	neg    DWORD PTR [ebp-0x4]
1001a8b8:	cmp    BYTE PTR [ebp-0xc],0x0
1001a8bc:	je     0x1001a8c5
1001a8be:	mov    eax,DWORD PTR [ebp-0x10]
1001a8c1:	and    DWORD PTR [eax+0x70],0xfffffffd
1001a8c5:	mov    eax,DWORD PTR [ebp-0x4]
1001a8c8:	pop    edi
1001a8c9:	pop    ebx
1001a8ca:	leave  
1001a8cb:	ret    
1001a8cc:	push   ebp
1001a8cd:	mov    ebp,esp
1001a8cf:	xor    eax,eax
1001a8d1:	cmp    DWORD PTR ds:0x10096e48,eax
1001a8d7:	push   eax
1001a8d8:	push   DWORD PTR [ebp+0x10]
1001a8db:	push   DWORD PTR [ebp+0xc]
1001a8de:	push   DWORD PTR [ebp+0x8]
1001a8e1:	jne    0x1001a8ea
1001a8e3:	push   0x10095b10
1001a8e8:	jmp    0x1001a8eb
1001a8ea:	push   eax
1001a8eb:	call   0x1001a6d5
1001a8f0:	add    esp,0x14
1001a8f3:	pop    ebp
1001a8f4:	ret    
1001a8f5:	push   ebp
1001a8f6:	mov    ebp,esp
1001a8f8:	sub    esp,0x30
1001a8fb:	push   ebx
1001a8fc:	push   esi
1001a8fd:	push   DWORD PTR [ebp+0x8]
1001a900:	lea    ecx,[ebp-0x30]
1001a903:	call   0x100165fa
1001a908:	mov    eax,DWORD PTR [ebp+0x10]
1001a90b:	mov    ebx,DWORD PTR [ebp+0xc]
1001a90e:	xor    esi,esi
1001a910:	cmp    eax,esi
1001a912:	je     0x1001a916
1001a914:	mov    DWORD PTR [eax],ebx
1001a916:	cmp    ebx,esi
1001a918:	jne    0x1001a948
1001a91a:	call   0x1001a18e
1001a91f:	push   esi
1001a920:	push   esi
1001a921:	push   esi
1001a922:	push   esi
1001a923:	push   esi
1001a924:	mov    DWORD PTR [eax],0x16
1001a92a:	call   0x1001616f
1001a92f:	add    esp,0x14
1001a932:	cmp    BYTE PTR [ebp-0x24],0x0
1001a936:	je     0x1001a93f
1001a938:	mov    eax,DWORD PTR [ebp-0x28]
1001a93b:	and    DWORD PTR [eax+0x70],0xfffffffd
1001a93f:	xor    eax,eax
1001a941:	xor    edx,edx
1001a943:	jmp    0x1001aba1
1001a948:	cmp    DWORD PTR [ebp+0x14],esi
1001a94b:	je     0x1001a959
1001a94d:	cmp    DWORD PTR [ebp+0x14],0x2
1001a951:	jl     0x1001a91a
1001a953:	cmp    DWORD PTR [ebp+0x14],0x24
1001a957:	jg     0x1001a91a
1001a959:	push   edi
1001a95a:	mov    DWORD PTR [ebp-0x8],esi
1001a95d:	mov    DWORD PTR [ebp-0x4],esi
1001a960:	movzx  esi,WORD PTR [ebx]
1001a963:	lea    edi,[ebx+0x2]
1001a966:	jmp    0x1001a96d
1001a968:	movzx  esi,WORD PTR [edi]
1001a96b:	inc    edi
1001a96c:	inc    edi
1001a96d:	lea    eax,[ebp-0x30]
1001a970:	push   eax
1001a971:	push   0x8
1001a973:	push   esi
1001a974:	call   0x1001ce9a
1001a979:	add    esp,0xc
1001a97c:	test   eax,eax
1001a97e:	jne    0x1001a968
1001a980:	cmp    si,0x2d
1001a984:	jne    0x1001a98c
1001a986:	or     DWORD PTR [ebp+0x18],0x2
1001a98a:	jmp    0x1001a992
1001a98c:	cmp    si,0x2b
1001a990:	jne    0x1001a997
1001a992:	movzx  esi,WORD PTR [edi]
1001a995:	inc    edi
1001a996:	inc    edi
1001a997:	mov    eax,DWORD PTR [ebp+0x14]
1001a99a:	test   eax,eax
1001a99c:	jl     0x1001ab86
1001a9a2:	cmp    eax,0x1
1001a9a5:	je     0x1001ab86
1001a9ab:	cmp    eax,0x24
1001a9ae:	jg     0x1001ab86
1001a9b4:	test   eax,eax
1001a9b6:	push   0x10
1001a9b8:	pop    ebx
1001a9b9:	jne    0x1001a9ea
1001a9bb:	push   esi
1001a9bc:	call   0x10020fcf
1001a9c1:	test   eax,eax
1001a9c3:	pop    ecx
1001a9c4:	je     0x1001a9cf
1001a9c6:	mov    DWORD PTR [ebp+0x14],0xa
1001a9cd:	jmp    0x1001aa10
1001a9cf:	movzx  eax,WORD PTR [edi]
1001a9d2:	cmp    ax,0x78
1001a9d6:	je     0x1001a9e7
1001a9d8:	cmp    ax,0x58
1001a9dc:	je     0x1001a9e7
1001a9de:	mov    DWORD PTR [ebp+0x14],0x8
1001a9e5:	jmp    0x1001aa10
1001a9e7:	mov    DWORD PTR [ebp+0x14],ebx
1001a9ea:	cmp    DWORD PTR [ebp+0x14],ebx
1001a9ed:	jne    0x1001aa10
1001a9ef:	push   esi
1001a9f0:	call   0x10020fcf
1001a9f5:	test   eax,eax
1001a9f7:	pop    ecx
1001a9f8:	jne    0x1001aa10
1001a9fa:	movzx  eax,WORD PTR [edi]
1001a9fd:	cmp    ax,0x78
1001aa01:	je     0x1001aa09
1001aa03:	cmp    ax,0x58
1001aa07:	jne    0x1001aa10
1001aa09:	inc    edi
1001aa0a:	inc    edi
1001aa0b:	movzx  esi,WORD PTR [edi]
1001aa0e:	inc    edi
1001aa0f:	inc    edi
1001aa10:	mov    eax,DWORD PTR [ebp+0x14]
1001aa13:	cdq    
1001aa14:	push   edx
1001aa15:	push   eax
1001aa16:	push   0xffffffff
1001aa18:	push   0xffffffff
1001aa1a:	mov    DWORD PTR [ebp-0x20],eax
1001aa1d:	mov    DWORD PTR [ebp-0x1c],edx
1001aa20:	call   0x1001e710
1001aa25:	mov    DWORD PTR [ebp-0x18],ecx
1001aa28:	mov    DWORD PTR [ebp-0x14],ebx
1001aa2b:	mov    DWORD PTR [ebp-0x10],eax
1001aa2e:	mov    DWORD PTR [ebp-0xc],edx
1001aa31:	push   esi
1001aa32:	call   0x10020fcf
1001aa37:	mov    ebx,eax
1001aa39:	cmp    ebx,0xffffffff
1001aa3c:	pop    ecx
1001aa3d:	jne    0x1001aa66
1001aa3f:	cmp    si,0x41
1001aa43:	jb     0x1001aa4b
1001aa45:	cmp    si,0x5a
1001aa49:	jbe    0x1001aa54
1001aa4b:	lea    eax,[esi-0x61]
1001aa4e:	cmp    ax,0x19
1001aa52:	ja     0x1001aaa6
1001aa54:	lea    eax,[esi-0x61]
1001aa57:	cmp    ax,0x19
1001aa5b:	movzx  eax,si
1001aa5e:	ja     0x1001aa63
1001aa60:	sub    eax,0x20
1001aa63:	lea    ebx,[eax-0x37]
1001aa66:	cmp    ebx,DWORD PTR [ebp+0x14]
1001aa69:	jae    0x1001aaa6
1001aa6b:	mov    ecx,DWORD PTR [ebp-0x4]
1001aa6e:	or     DWORD PTR [ebp+0x18],0x8
1001aa72:	cmp    ecx,DWORD PTR [ebp-0xc]
1001aa75:	jb     0x1001aac4
1001aa77:	ja     0x1001aa81
1001aa79:	mov    eax,DWORD PTR [ebp-0x8]
1001aa7c:	cmp    eax,DWORD PTR [ebp-0x10]
1001aa7f:	jb     0x1001aac4
1001aa81:	mov    eax,DWORD PTR [ebp-0x10]
1001aa84:	cmp    DWORD PTR [ebp-0x8],eax
1001aa87:	jne    0x1001aa9c
1001aa89:	cmp    ecx,DWORD PTR [ebp-0xc]
1001aa8c:	jne    0x1001aa9c
1001aa8e:	xor    eax,eax
1001aa90:	cmp    eax,DWORD PTR [ebp-0x14]
1001aa93:	jb     0x1001aac4
1001aa95:	ja     0x1001aa9c
1001aa97:	cmp    ebx,DWORD PTR [ebp-0x18]
1001aa9a:	jbe    0x1001aac4
1001aa9c:	or     DWORD PTR [ebp+0x18],0x4
1001aaa0:	cmp    DWORD PTR [ebp+0x10],0x0
1001aaa4:	jne    0x1001aadf
1001aaa6:	mov    eax,DWORD PTR [ebp+0x18]
1001aaa9:	dec    edi
1001aaaa:	dec    edi
1001aaab:	test   al,0x8
1001aaad:	jne    0x1001aae9
1001aaaf:	xor    eax,eax
1001aab1:	cmp    DWORD PTR [ebp+0x10],eax
1001aab4:	je     0x1001aab9
1001aab6:	mov    edi,DWORD PTR [ebp+0xc]
1001aab9:	mov    DWORD PTR [ebp-0x8],eax
1001aabc:	mov    DWORD PTR [ebp-0x4],eax
1001aabf:	jmp    0x1001ab4f
1001aac4:	push   ecx
1001aac5:	push   DWORD PTR [ebp-0x8]
1001aac8:	push   DWORD PTR [ebp-0x1c]
1001aacb:	push   DWORD PTR [ebp-0x20]
1001aace:	call   0x100172c0
1001aad3:	xor    ecx,ecx
1001aad5:	add    eax,ebx
1001aad7:	adc    edx,ecx
1001aad9:	mov    DWORD PTR [ebp-0x8],eax
1001aadc:	mov    DWORD PTR [ebp-0x4],edx
1001aadf:	movzx  esi,WORD PTR [edi]
1001aae2:	inc    edi
1001aae3:	inc    edi
1001aae4:	jmp    0x1001aa31
1001aae9:	test   al,0x4
1001aaeb:	mov    esi,0x7fffffff
1001aaf0:	mov    ebx,0x80000000
1001aaf5:	jne    0x1001ab1e
1001aaf7:	test   al,0x1
1001aaf9:	jne    0x1001ab4f
1001aafb:	and    eax,0x2
1001aafe:	je     0x1001ab0d
1001ab00:	cmp    DWORD PTR [ebp-0x4],ebx
1001ab03:	ja     0x1001ab1e
1001ab05:	jb     0x1001ab0d
1001ab07:	cmp    DWORD PTR [ebp-0x8],0x0
1001ab0b:	ja     0x1001ab1e
1001ab0d:	test   eax,eax
1001ab0f:	jne    0x1001ab4f
1001ab11:	cmp    DWORD PTR [ebp-0x4],esi
1001ab14:	jb     0x1001ab4f
1001ab16:	ja     0x1001ab1e
1001ab18:	cmp    DWORD PTR [ebp-0x8],0xffffffff
1001ab1c:	jbe    0x1001ab4f
1001ab1e:	call   0x1001a18e
1001ab23:	test   BYTE PTR [ebp+0x18],0x1
1001ab27:	mov    DWORD PTR [eax],0x22
1001ab2d:	je     0x1001ab39
1001ab2f:	or     DWORD PTR [ebp-0x8],0xffffffff
1001ab33:	or     DWORD PTR [ebp-0x4],0xffffffff
1001ab37:	jmp    0x1001ab4f
1001ab39:	test   BYTE PTR [ebp+0x18],0x2
1001ab3d:	je     0x1001ab48
1001ab3f:	and    DWORD PTR [ebp-0x8],0x0
1001ab43:	mov    DWORD PTR [ebp-0x4],ebx
1001ab46:	jmp    0x1001ab4f
1001ab48:	or     DWORD PTR [ebp-0x8],0xffffffff
1001ab4c:	mov    DWORD PTR [ebp-0x4],esi
1001ab4f:	mov    eax,DWORD PTR [ebp+0x10]
1001ab52:	test   eax,eax
1001ab54:	je     0x1001ab58
1001ab56:	mov    DWORD PTR [eax],edi
1001ab58:	test   BYTE PTR [ebp+0x18],0x2
1001ab5c:	je     0x1001ab71
1001ab5e:	mov    eax,DWORD PTR [ebp-0x8]
1001ab61:	mov    ecx,DWORD PTR [ebp-0x4]
1001ab64:	neg    eax
1001ab66:	adc    ecx,0x0
1001ab69:	neg    ecx
1001ab6b:	mov    DWORD PTR [ebp-0x8],eax
1001ab6e:	mov    DWORD PTR [ebp-0x4],ecx
1001ab71:	cmp    BYTE PTR [ebp-0x24],0x0
1001ab75:	je     0x1001ab7e
1001ab77:	mov    eax,DWORD PTR [ebp-0x28]
1001ab7a:	and    DWORD PTR [eax+0x70],0xfffffffd
1001ab7e:	mov    eax,DWORD PTR [ebp-0x8]
1001ab81:	mov    edx,DWORD PTR [ebp-0x4]
1001ab84:	jmp    0x1001aba0
1001ab86:	mov    eax,DWORD PTR [ebp+0x10]
1001ab89:	test   eax,eax
1001ab8b:	je     0x1001ab8f
1001ab8d:	mov    DWORD PTR [eax],ebx
1001ab8f:	cmp    BYTE PTR [ebp-0x24],0x0
1001ab93:	je     0x1001ab9c
1001ab95:	mov    eax,DWORD PTR [ebp-0x28]
1001ab98:	and    DWORD PTR [eax+0x70],0xfffffffd
1001ab9c:	xor    eax,eax
1001ab9e:	xor    edx,edx
1001aba0:	pop    edi
1001aba1:	pop    esi
1001aba2:	pop    ebx
1001aba3:	leave  
1001aba4:	ret    
1001aba5:	push   ebp
1001aba6:	mov    ebp,esp
1001aba8:	xor    eax,eax
1001abaa:	cmp    DWORD PTR ds:0x10096e48,eax
1001abb0:	push   eax
1001abb1:	push   DWORD PTR [ebp+0x10]
1001abb4:	push   DWORD PTR [ebp+0xc]
1001abb7:	push   DWORD PTR [ebp+0x8]
1001abba:	jne    0x1001abc3
1001abbc:	push   0x10095b10
1001abc1:	jmp    0x1001abc4
1001abc3:	push   eax
1001abc4:	call   0x1001a8f5
1001abc9:	add    esp,0x14
1001abcc:	pop    ebp
1001abcd:	ret    
1001abce:	push   ebp
1001abcf:	mov    ebp,esp
1001abd1:	sub    esp,0x4
1001abd4:	mov    DWORD PTR [ebp-0x4],edi
1001abd7:	mov    edi,DWORD PTR [ebp+0x8]
1001abda:	mov    ecx,DWORD PTR [ebp+0xc]
1001abdd:	shr    ecx,0x7
1001abe0:	pxor   xmm0,xmm0
1001abe4:	jmp    0x1001abee
1001abe6:	lea    esp,[esp+0x0]
1001abed:	nop
1001abee:	movdqa XMMWORD PTR [edi],xmm0
1001abf2:	movdqa XMMWORD PTR [edi+0x10],xmm0
1001abf7:	movdqa XMMWORD PTR [edi+0x20],xmm0
1001abfc:	movdqa XMMWORD PTR [edi+0x30],xmm0
1001ac01:	movdqa XMMWORD PTR [edi+0x40],xmm0
1001ac06:	movdqa XMMWORD PTR [edi+0x50],xmm0
1001ac0b:	movdqa XMMWORD PTR [edi+0x60],xmm0
1001ac10:	movdqa XMMWORD PTR [edi+0x70],xmm0
1001ac15:	lea    edi,[edi+0x80]
1001ac1b:	dec    ecx
1001ac1c:	jne    0x1001abee
1001ac1e:	mov    edi,DWORD PTR [ebp-0x4]
1001ac21:	mov    esp,ebp
1001ac23:	pop    ebp
1001ac24:	ret    
1001ac25:	push   ebp
1001ac26:	mov    ebp,esp
1001ac28:	sub    esp,0x10
1001ac2b:	mov    DWORD PTR [ebp-0x4],edi
1001ac2e:	mov    eax,DWORD PTR [ebp+0x8]
1001ac31:	cdq    
1001ac32:	mov    edi,eax
1001ac34:	xor    edi,edx
1001ac36:	sub    edi,edx
1001ac38:	and    edi,0xf
1001ac3b:	xor    edi,edx
1001ac3d:	sub    edi,edx
1001ac3f:	test   edi,edi
1001ac41:	jne    0x1001ac7f
1001ac43:	mov    ecx,DWORD PTR [ebp+0x10]
1001ac46:	mov    edx,ecx
1001ac48:	and    edx,0x7f
1001ac4b:	mov    DWORD PTR [ebp-0xc],edx
1001ac4e:	cmp    ecx,edx
1001ac50:	je     0x1001ac64
1001ac52:	sub    ecx,edx
1001ac54:	push   ecx
1001ac55:	push   eax
1001ac56:	call   0x1001abce
1001ac5b:	add    esp,0x8
1001ac5e:	mov    eax,DWORD PTR [ebp+0x8]
1001ac61:	mov    edx,DWORD PTR [ebp-0xc]
1001ac64:	test   edx,edx
1001ac66:	je     0x1001acad
1001ac68:	add    eax,DWORD PTR [ebp+0x10]
1001ac6b:	sub    eax,edx
1001ac6d:	mov    DWORD PTR [ebp-0x8],eax
1001ac70:	xor    eax,eax
1001ac72:	mov    edi,DWORD PTR [ebp-0x8]
1001ac75:	mov    ecx,DWORD PTR [ebp-0xc]
1001ac78:	rep stos BYTE PTR es:[edi],al
1001ac7a:	mov    eax,DWORD PTR [ebp+0x8]
1001ac7d:	jmp    0x1001acad
1001ac7f:	neg    edi
1001ac81:	add    edi,0x10
1001ac84:	mov    DWORD PTR [ebp-0x10],edi
1001ac87:	xor    eax,eax
1001ac89:	mov    edi,DWORD PTR [ebp+0x8]
1001ac8c:	mov    ecx,DWORD PTR [ebp-0x10]
1001ac8f:	rep stos BYTE PTR es:[edi],al
1001ac91:	mov    eax,DWORD PTR [ebp-0x10]
1001ac94:	mov    ecx,DWORD PTR [ebp+0x8]
1001ac97:	mov    edx,DWORD PTR [ebp+0x10]
1001ac9a:	add    ecx,eax
1001ac9c:	sub    edx,eax
1001ac9e:	push   edx
1001ac9f:	push   0x0
1001aca1:	push   ecx
1001aca2:	call   0x1001ac25
1001aca7:	add    esp,0xc
1001acaa:	mov    eax,DWORD PTR [ebp+0x8]
1001acad:	mov    edi,DWORD PTR [ebp-0x4]
1001acb0:	mov    esp,ebp
1001acb2:	pop    ebp
1001acb3:	ret    
1001acb4:	and    DWORD PTR ds:0x10098bfc,0x0
1001acbb:	call   0x100211a1
1001acc0:	mov    ds:0x10098bfc,eax
1001acc5:	xor    eax,eax
1001acc7:	ret    
1001acc8:	sub    eax,0x3a4
1001accd:	je     0x1001acf1
1001accf:	sub    eax,0x4
1001acd2:	je     0x1001aceb
1001acd4:	sub    eax,0xd
1001acd7:	je     0x1001ace5
1001acd9:	dec    eax
1001acda:	je     0x1001acdf
1001acdc:	xor    eax,eax
1001acde:	ret    
1001acdf:	mov    eax,0x404
1001ace4:	ret    
1001ace5:	mov    eax,0x412
1001acea:	ret    
1001aceb:	mov    eax,0x804
1001acf0:	ret    
1001acf1:	mov    eax,0x411
1001acf6:	ret    
1001acf7:	push   ebx
1001acf8:	push   ebp
1001acf9:	push   esi
1001acfa:	push   edi
1001acfb:	mov    ebp,0x101
1001ad00:	mov    esi,eax
1001ad02:	push   ebp
1001ad03:	xor    edi,edi
1001ad05:	lea    ebx,[esi+0x1c]
1001ad08:	push   edi
1001ad09:	push   ebx
1001ad0a:	call   0x10016580
1001ad0f:	mov    DWORD PTR [esi+0x4],edi
1001ad12:	mov    DWORD PTR [esi+0x8],edi
1001ad15:	mov    DWORD PTR [esi+0xc],edi
1001ad18:	xor    eax,eax
1001ad1a:	lea    edi,[esi+0x10]
1001ad1d:	stos   DWORD PTR es:[edi],eax
1001ad1e:	stos   DWORD PTR es:[edi],eax
1001ad1f:	stos   DWORD PTR es:[edi],eax
1001ad20:	mov    eax,0x10095500
1001ad25:	add    esp,0xc
1001ad28:	sub    eax,esi
1001ad2a:	mov    cl,BYTE PTR [eax+ebx*1]
1001ad2d:	mov    BYTE PTR [ebx],cl
1001ad2f:	inc    ebx
1001ad30:	dec    ebp
1001ad31:	jne    0x1001ad2a
1001ad33:	lea    ecx,[esi+0x11d]
1001ad39:	mov    esi,0x100
1001ad3e:	mov    dl,BYTE PTR [ecx+eax*1]
1001ad41:	mov    BYTE PTR [ecx],dl
1001ad43:	inc    ecx
1001ad44:	dec    esi
1001ad45:	jne    0x1001ad3e
1001ad47:	pop    edi
1001ad48:	pop    esi
1001ad49:	pop    ebp
1001ad4a:	pop    ebx
1001ad4b:	ret    
1001ad4c:	push   ebp
1001ad4d:	lea    ebp,[esp-0x49c]
1001ad54:	sub    esp,0x51c
1001ad5a:	mov    eax,ds:0x100951fc
1001ad5f:	xor    eax,ebp
1001ad61:	mov    DWORD PTR [ebp+0x498],eax
1001ad67:	push   ebx
1001ad68:	push   edi
1001ad69:	lea    eax,[ebp-0x7c]
1001ad6c:	push   eax
1001ad6d:	push   DWORD PTR [esi+0x4]
1001ad70:	call   DWORD PTR ds:0x10034228
1001ad76:	test   eax,eax
1001ad78:	mov    edi,0x100
1001ad7d:	je     0x1001ae72
1001ad83:	xor    eax,eax
1001ad85:	mov    BYTE PTR [ebp+eax*1+0x398],al
1001ad8c:	inc    eax
1001ad8d:	cmp    eax,edi
1001ad8f:	jb     0x1001ad85
1001ad91:	mov    al,BYTE PTR [ebp-0x76]
1001ad94:	test   al,al
1001ad96:	mov    BYTE PTR [ebp+0x398],0x20
1001ad9d:	je     0x1001adca
1001ad9f:	lea    ebx,[ebp-0x75]
1001ada2:	movzx  ecx,al
1001ada5:	movzx  eax,BYTE PTR [ebx]
1001ada8:	cmp    ecx,eax
1001adaa:	ja     0x1001adc2
1001adac:	sub    eax,ecx
1001adae:	inc    eax
1001adaf:	push   eax
1001adb0:	lea    edx,[ebp+ecx*1+0x398]
1001adb7:	push   0x20
1001adb9:	push   edx
1001adba:	call   0x10016580
1001adbf:	add    esp,0xc
1001adc2:	inc    ebx
1001adc3:	mov    al,BYTE PTR [ebx]
1001adc5:	inc    ebx
1001adc6:	test   al,al
1001adc8:	jne    0x1001ada2
1001adca:	push   0x0
1001adcc:	push   DWORD PTR [esi+0xc]
1001adcf:	lea    eax,[ebp-0x68]
1001add2:	push   DWORD PTR [esi+0x4]
1001add5:	push   eax
1001add6:	push   edi
1001add7:	lea    eax,[ebp+0x398]
1001addd:	push   eax
1001adde:	push   0x1
1001ade0:	push   0x0
1001ade2:	call   0x100208f1
1001ade7:	xor    ebx,ebx
1001ade9:	push   ebx
1001adea:	push   DWORD PTR [esi+0x4]
1001aded:	lea    eax,[ebp+0x298]
1001adf3:	push   edi
1001adf4:	push   eax
1001adf5:	push   edi
1001adf6:	lea    eax,[ebp+0x398]
1001adfc:	push   eax
1001adfd:	push   edi
1001adfe:	push   DWORD PTR [esi+0xc]
1001ae01:	push   ebx
1001ae02:	call   0x100186f2
1001ae07:	add    esp,0x44
1001ae0a:	push   ebx
1001ae0b:	push   DWORD PTR [esi+0x4]
1001ae0e:	lea    eax,[ebp+0x198]
1001ae14:	push   edi
1001ae15:	push   eax
1001ae16:	push   edi
1001ae17:	lea    eax,[ebp+0x398]
1001ae1d:	push   eax
1001ae1e:	push   0x200
1001ae23:	push   DWORD PTR [esi+0xc]
1001ae26:	push   ebx
1001ae27:	call   0x100186f2
1001ae2c:	add    esp,0x24
1001ae2f:	xor    eax,eax
1001ae31:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
1001ae36:	test   cl,0x1
1001ae39:	je     0x1001ae49
1001ae3b:	or     BYTE PTR [esi+eax*1+0x1d],0x10
1001ae40:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
1001ae47:	jmp    0x1001ae5a
1001ae49:	test   cl,0x2
1001ae4c:	je     0x1001ae63
1001ae4e:	or     BYTE PTR [esi+eax*1+0x1d],0x20
1001ae53:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
1001ae5a:	mov    BYTE PTR [esi+eax*1+0x11d],cl
1001ae61:	jmp    0x1001ae6b
1001ae63:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
1001ae6b:	inc    eax
1001ae6c:	cmp    eax,edi
1001ae6e:	jb     0x1001ae31
1001ae70:	jmp    0x1001aebf
1001ae72:	lea    eax,[esi+0x11d]
1001ae78:	mov    DWORD PTR [ebp-0x80],0xffffff9f
1001ae7f:	xor    ecx,ecx
1001ae81:	sub    DWORD PTR [ebp-0x80],eax
1001ae84:	mov    edx,DWORD PTR [ebp-0x80]
1001ae87:	lea    eax,[esi+ecx*1+0x11d]
1001ae8e:	add    edx,eax
1001ae90:	lea    ebx,[edx+0x20]
1001ae93:	cmp    ebx,0x19
1001ae96:	ja     0x1001aea4
1001ae98:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
1001ae9d:	mov    dl,cl
1001ae9f:	add    dl,0x20
1001aea2:	jmp    0x1001aeb3
1001aea4:	cmp    edx,0x19
1001aea7:	ja     0x1001aeb7
1001aea9:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
1001aeae:	mov    dl,cl
1001aeb0:	sub    dl,0x20
1001aeb3:	mov    BYTE PTR [eax],dl
1001aeb5:	jmp    0x1001aeba
1001aeb7:	mov    BYTE PTR [eax],0x0
1001aeba:	inc    ecx
1001aebb:	cmp    ecx,edi
1001aebd:	jb     0x1001ae84
1001aebf:	mov    ecx,DWORD PTR [ebp+0x498]
1001aec5:	pop    edi
1001aec6:	xor    ecx,ebp
1001aec8:	pop    ebx
1001aec9:	call   0x10015b2b
1001aece:	add    ebp,0x49c
1001aed4:	leave  
1001aed5:	ret    
1001aed6:	push   0xc
1001aed8:	push   0x100859e8
1001aedd:	call   0x10017f88
1001aee2:	call   0x100199a6
1001aee7:	mov    edi,eax
1001aee9:	mov    eax,ds:0x10095a20
1001aeee:	test   DWORD PTR [edi+0x70],eax
1001aef1:	je     0x1001af10
1001aef3:	cmp    DWORD PTR [edi+0x6c],0x0
1001aef7:	je     0x1001af10
1001aef9:	mov    esi,DWORD PTR [edi+0x68]
1001aefc:	test   esi,esi
1001aefe:	jne    0x1001af08
1001af00:	push   0x20
1001af02:	call   0x10019e4f
1001af07:	pop    ecx
1001af08:	mov    eax,esi
1001af0a:	call   0x10017fcd
1001af0f:	ret    
1001af10:	push   0xd
1001af12:	call   0x1001b83b
1001af17:	pop    ecx
1001af18:	and    DWORD PTR [ebp-0x4],0x0
1001af1c:	mov    esi,DWORD PTR [edi+0x68]
1001af1f:	mov    DWORD PTR [ebp-0x1c],esi
1001af22:	cmp    esi,DWORD PTR ds:0x10095928
1001af28:	je     0x1001af60
1001af2a:	test   esi,esi
1001af2c:	je     0x1001af48
1001af2e:	push   esi
1001af2f:	call   DWORD PTR ds:0x100340ec
1001af35:	test   eax,eax
1001af37:	jne    0x1001af48
1001af39:	cmp    esi,0x10095500
1001af3f:	je     0x1001af48
1001af41:	push   esi
1001af42:	call   0x10016b85
1001af47:	pop    ecx
1001af48:	mov    eax,ds:0x10095928
1001af4d:	mov    DWORD PTR [edi+0x68],eax
1001af50:	mov    esi,DWORD PTR ds:0x10095928
1001af56:	mov    DWORD PTR [ebp-0x1c],esi
1001af59:	push   esi
1001af5a:	call   DWORD PTR ds:0x100340dc
1001af60:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001af67:	call   0x1001af71
1001af6c:	jmp    0x1001aefc
1001af6e:	mov    esi,DWORD PTR [ebp-0x1c]
1001af71:	push   0xd
1001af73:	call   0x1001b763
1001af78:	pop    ecx
1001af79:	ret    
1001af7a:	push   ebp
1001af7b:	mov    ebp,esp
1001af7d:	sub    esp,0x10
1001af80:	push   ebx
1001af81:	xor    ebx,ebx
1001af83:	push   ebx
1001af84:	lea    ecx,[ebp-0x10]
1001af87:	call   0x100165fa
1001af8c:	cmp    esi,0xfffffffe
1001af8f:	mov    DWORD PTR ds:0x100971e4,ebx
1001af95:	jne    0x1001afb5
1001af97:	mov    DWORD PTR ds:0x100971e4,0x1
1001afa1:	call   DWORD PTR ds:0x1003416c
1001afa7:	cmp    BYTE PTR [ebp-0x4],bl
1001afaa:	je     0x1001aff1
1001afac:	mov    ecx,DWORD PTR [ebp-0x8]
1001afaf:	and    DWORD PTR [ecx+0x70],0xfffffffd
1001afb3:	jmp    0x1001aff1
1001afb5:	cmp    esi,0xfffffffd
1001afb8:	jne    0x1001afcc
1001afba:	mov    DWORD PTR ds:0x100971e4,0x1
1001afc4:	call   DWORD PTR ds:0x100341c8
1001afca:	jmp    0x1001afa7
1001afcc:	cmp    esi,0xfffffffc
1001afcf:	jne    0x1001afe3
1001afd1:	mov    eax,DWORD PTR [ebp-0x10]
1001afd4:	mov    eax,DWORD PTR [eax+0x4]
1001afd7:	mov    DWORD PTR ds:0x100971e4,0x1
1001afe1:	jmp    0x1001afa7
1001afe3:	cmp    BYTE PTR [ebp-0x4],bl
1001afe6:	je     0x1001afef
1001afe8:	mov    eax,DWORD PTR [ebp-0x8]
1001afeb:	and    DWORD PTR [eax+0x70],0xfffffffd
1001afef:	mov    eax,esi
1001aff1:	pop    ebx
1001aff2:	leave  
1001aff3:	ret    
1001aff4:	push   ebp
1001aff5:	mov    ebp,esp
1001aff7:	sub    esp,0x20
1001affa:	mov    eax,ds:0x100951fc
1001afff:	xor    eax,ebp
1001b001:	mov    DWORD PTR [ebp-0x4],eax
1001b004:	push   ebx
1001b005:	mov    ebx,DWORD PTR [ebp+0xc]
1001b008:	push   esi
1001b009:	mov    esi,DWORD PTR [ebp+0x8]
1001b00c:	push   edi
1001b00d:	call   0x1001af7a
1001b012:	mov    edi,eax
1001b014:	xor    esi,esi
1001b016:	cmp    edi,esi
1001b018:	mov    DWORD PTR [ebp+0x8],edi
1001b01b:	jne    0x1001b02b
1001b01d:	mov    eax,ebx
1001b01f:	call   0x1001acf7
1001b024:	xor    eax,eax
1001b026:	jmp    0x1001b1be
1001b02b:	mov    DWORD PTR [ebp-0x1c],esi
1001b02e:	xor    eax,eax
1001b030:	cmp    DWORD PTR [eax+0x10095930],edi
1001b036:	je     0x1001b0cd
1001b03c:	inc    DWORD PTR [ebp-0x1c]
1001b03f:	add    eax,0x30
1001b042:	cmp    eax,0xf0
1001b047:	jb     0x1001b030
1001b049:	cmp    edi,0xfde8
1001b04f:	je     0x1001b1bb
1001b055:	cmp    edi,0xfde9
1001b05b:	je     0x1001b1bb
1001b061:	movzx  eax,di
1001b064:	push   eax
1001b065:	call   DWORD PTR ds:0x10034020
1001b06b:	test   eax,eax
1001b06d:	je     0x1001b1bb
1001b073:	lea    eax,[ebp-0x18]
1001b076:	push   eax
1001b077:	push   edi
1001b078:	call   DWORD PTR ds:0x10034228
1001b07e:	test   eax,eax
1001b080:	je     0x1001b1af
1001b086:	push   0x101
1001b08b:	lea    eax,[ebx+0x1c]
1001b08e:	push   esi
1001b08f:	push   eax
1001b090:	call   0x10016580
1001b095:	xor    edx,edx
1001b097:	inc    edx
1001b098:	add    esp,0xc
1001b09b:	cmp    DWORD PTR [ebp-0x18],edx
1001b09e:	mov    DWORD PTR [ebx+0x4],edi
1001b0a1:	mov    DWORD PTR [ebx+0xc],esi
1001b0a4:	jbe    0x1001b1a2
1001b0aa:	cmp    BYTE PTR [ebp-0x12],0x0
1001b0ae:	je     0x1001b183
1001b0b4:	lea    esi,[ebp-0x11]
1001b0b7:	mov    cl,BYTE PTR [esi]
1001b0b9:	test   cl,cl
1001b0bb:	je     0x1001b183
1001b0c1:	movzx  eax,BYTE PTR [esi-0x1]
1001b0c5:	movzx  ecx,cl
1001b0c8:	jmp    0x1001b173
1001b0cd:	push   0x101
1001b0d2:	lea    eax,[ebx+0x1c]
1001b0d5:	push   esi
1001b0d6:	push   eax
1001b0d7:	call   0x10016580
1001b0dc:	mov    ecx,DWORD PTR [ebp-0x1c]
1001b0df:	add    esp,0xc
1001b0e2:	imul   ecx,ecx,0x30
1001b0e5:	mov    DWORD PTR [ebp-0x20],esi
1001b0e8:	lea    esi,[ecx+0x10095940]
1001b0ee:	mov    DWORD PTR [ebp-0x1c],esi
1001b0f1:	jmp    0x1001b11d
1001b0f3:	mov    al,BYTE PTR [esi+0x1]
1001b0f6:	test   al,al
1001b0f8:	je     0x1001b122
1001b0fa:	movzx  edi,BYTE PTR [esi]
1001b0fd:	movzx  eax,al
1001b100:	jmp    0x1001b114
1001b102:	mov    eax,DWORD PTR [ebp-0x20]
1001b105:	mov    al,BYTE PTR [eax+0x1009592c]
1001b10b:	or     BYTE PTR [ebx+edi*1+0x1d],al
1001b10f:	movzx  eax,BYTE PTR [esi+0x1]
1001b113:	inc    edi
1001b114:	cmp    edi,eax
1001b116:	jbe    0x1001b102
1001b118:	mov    edi,DWORD PTR [ebp+0x8]
1001b11b:	inc    esi
1001b11c:	inc    esi
1001b11d:	cmp    BYTE PTR [esi],0x0
1001b120:	jne    0x1001b0f3
1001b122:	mov    esi,DWORD PTR [ebp-0x1c]
1001b125:	inc    DWORD PTR [ebp-0x20]
1001b128:	add    esi,0x8
1001b12b:	cmp    DWORD PTR [ebp-0x20],0x4
1001b12f:	mov    DWORD PTR [ebp-0x1c],esi
1001b132:	jb     0x1001b11d
1001b134:	mov    eax,edi
1001b136:	mov    DWORD PTR [ebx+0x4],edi
1001b139:	mov    DWORD PTR [ebx+0x8],0x1
1001b140:	call   0x1001acc8
1001b145:	push   0x6
1001b147:	mov    DWORD PTR [ebx+0xc],eax
1001b14a:	lea    eax,[ebx+0x10]
1001b14d:	lea    ecx,[ecx+0x10095934]
1001b153:	pop    edx
1001b154:	mov    si,WORD PTR [ecx]
1001b157:	inc    ecx
1001b158:	mov    WORD PTR [eax],si
1001b15b:	inc    ecx
1001b15c:	inc    eax
1001b15d:	inc    eax
1001b15e:	dec    edx
1001b15f:	jne    0x1001b154
1001b161:	mov    esi,ebx
1001b163:	call   0x1001ad4c
1001b168:	jmp    0x1001b024
1001b16d:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
1001b172:	inc    eax
1001b173:	cmp    eax,ecx
1001b175:	jbe    0x1001b16d
1001b177:	inc    esi
1001b178:	inc    esi
1001b179:	cmp    BYTE PTR [esi-0x1],0x0
1001b17d:	jne    0x1001b0b7
1001b183:	lea    eax,[ebx+0x1e]
1001b186:	mov    ecx,0xfe
1001b18b:	or     BYTE PTR [eax],0x8
1001b18e:	inc    eax
1001b18f:	dec    ecx
1001b190:	jne    0x1001b18b
1001b192:	mov    eax,DWORD PTR [ebx+0x4]
1001b195:	call   0x1001acc8
1001b19a:	mov    DWORD PTR [ebx+0xc],eax
1001b19d:	mov    DWORD PTR [ebx+0x8],edx
1001b1a0:	jmp    0x1001b1a5
1001b1a2:	mov    DWORD PTR [ebx+0x8],esi
1001b1a5:	xor    eax,eax
1001b1a7:	lea    edi,[ebx+0x10]
1001b1aa:	stos   DWORD PTR es:[edi],eax
1001b1ab:	stos   DWORD PTR es:[edi],eax
1001b1ac:	stos   DWORD PTR es:[edi],eax
1001b1ad:	jmp    0x1001b161
1001b1af:	cmp    DWORD PTR ds:0x100971e4,esi
1001b1b5:	jne    0x1001b01d
1001b1bb:	or     eax,0xffffffff
1001b1be:	mov    ecx,DWORD PTR [ebp-0x4]
1001b1c1:	pop    edi
1001b1c2:	pop    esi
1001b1c3:	xor    ecx,ebp
1001b1c5:	pop    ebx
1001b1c6:	call   0x10015b2b
1001b1cb:	leave  
1001b1cc:	ret    
1001b1cd:	push   0x14
1001b1cf:	push   0x10085a08
1001b1d4:	call   0x10017f88
1001b1d9:	or     DWORD PTR [ebp-0x20],0xffffffff
1001b1dd:	call   0x100199a6
1001b1e2:	mov    edi,eax
1001b1e4:	mov    DWORD PTR [ebp-0x24],edi
1001b1e7:	call   0x1001aed6
1001b1ec:	mov    ebx,DWORD PTR [edi+0x68]
1001b1ef:	mov    esi,DWORD PTR [ebp+0x8]
1001b1f2:	call   0x1001af7a
1001b1f7:	mov    DWORD PTR [ebp+0x8],eax
1001b1fa:	cmp    eax,DWORD PTR [ebx+0x4]
1001b1fd:	je     0x1001b35a
1001b203:	push   0x220
1001b208:	call   0x10018735
1001b20d:	pop    ecx
1001b20e:	mov    ebx,eax
1001b210:	test   ebx,ebx
1001b212:	je     0x1001b35e
1001b218:	mov    ecx,0x88
1001b21d:	mov    esi,DWORD PTR [edi+0x68]
1001b220:	mov    edi,ebx
1001b222:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001b224:	and    DWORD PTR [ebx],0x0
1001b227:	push   ebx
1001b228:	push   DWORD PTR [ebp+0x8]
1001b22b:	call   0x1001aff4
1001b230:	pop    ecx
1001b231:	pop    ecx
1001b232:	mov    DWORD PTR [ebp-0x20],eax
1001b235:	test   eax,eax
1001b237:	jne    0x1001b339
1001b23d:	mov    esi,DWORD PTR [ebp-0x24]
1001b240:	push   DWORD PTR [esi+0x68]
1001b243:	call   DWORD PTR ds:0x100340ec
1001b249:	test   eax,eax
1001b24b:	jne    0x1001b25e
1001b24d:	mov    eax,DWORD PTR [esi+0x68]
1001b250:	cmp    eax,0x10095500
1001b255:	je     0x1001b25e
1001b257:	push   eax
1001b258:	call   0x10016b85
1001b25d:	pop    ecx
1001b25e:	mov    DWORD PTR [esi+0x68],ebx
1001b261:	push   ebx
1001b262:	mov    edi,DWORD PTR ds:0x100340dc
1001b268:	call   edi
1001b26a:	test   BYTE PTR [esi+0x70],0x2
1001b26e:	jne    0x1001b35e
1001b274:	test   BYTE PTR ds:0x10095a20,0x1
1001b27b:	jne    0x1001b35e
1001b281:	push   0xd
1001b283:	call   0x1001b83b
1001b288:	pop    ecx
1001b289:	and    DWORD PTR [ebp-0x4],0x0
1001b28d:	mov    eax,DWORD PTR [ebx+0x4]
1001b290:	mov    ds:0x100971f4,eax
1001b295:	mov    eax,DWORD PTR [ebx+0x8]
1001b298:	mov    ds:0x100971f8,eax
1001b29d:	mov    eax,DWORD PTR [ebx+0xc]
1001b2a0:	mov    ds:0x100971fc,eax
1001b2a5:	xor    eax,eax
1001b2a7:	mov    DWORD PTR [ebp-0x1c],eax
1001b2aa:	cmp    eax,0x5
1001b2ad:	jge    0x1001b2bf
1001b2af:	mov    cx,WORD PTR [ebx+eax*2+0x10]
1001b2b4:	mov    WORD PTR [eax*2+0x100971e8],cx
1001b2bc:	inc    eax
1001b2bd:	jmp    0x1001b2a7
1001b2bf:	xor    eax,eax
1001b2c1:	mov    DWORD PTR [ebp-0x1c],eax
1001b2c4:	cmp    eax,0x101
1001b2c9:	jge    0x1001b2d8
1001b2cb:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
1001b2cf:	mov    BYTE PTR [eax+0x10095720],cl
1001b2d5:	inc    eax
1001b2d6:	jmp    0x1001b2c1
1001b2d8:	xor    eax,eax
1001b2da:	mov    DWORD PTR [ebp-0x1c],eax
1001b2dd:	cmp    eax,0x100
1001b2e2:	jge    0x1001b2f4
1001b2e4:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
1001b2eb:	mov    BYTE PTR [eax+0x10095828],cl
1001b2f1:	inc    eax
1001b2f2:	jmp    0x1001b2da
1001b2f4:	push   DWORD PTR ds:0x10095928
1001b2fa:	call   DWORD PTR ds:0x100340ec
1001b300:	test   eax,eax
1001b302:	jne    0x1001b317
1001b304:	mov    eax,ds:0x10095928
1001b309:	cmp    eax,0x10095500
1001b30e:	je     0x1001b317
1001b310:	push   eax
1001b311:	call   0x10016b85
1001b316:	pop    ecx
1001b317:	mov    DWORD PTR ds:0x10095928,ebx
1001b31d:	push   ebx
1001b31e:	call   edi
1001b320:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001b327:	call   0x1001b32e
1001b32c:	jmp    0x1001b35e
1001b32e:	push   0xd
1001b330:	call   0x1001b763
1001b335:	pop    ecx
1001b336:	ret    
1001b337:	jmp    0x1001b35e
1001b339:	cmp    eax,0xffffffff
1001b33c:	jne    0x1001b35e
1001b33e:	cmp    ebx,0x10095500
1001b344:	je     0x1001b34d
1001b346:	push   ebx
1001b347:	call   0x10016b85
1001b34c:	pop    ecx
1001b34d:	call   0x1001a18e
1001b352:	mov    DWORD PTR [eax],0x16
1001b358:	jmp    0x1001b35e
1001b35a:	and    DWORD PTR [ebp-0x20],0x0
1001b35e:	mov    eax,DWORD PTR [ebp-0x20]
1001b361:	call   0x10017fcd
1001b366:	ret    
1001b367:	cmp    DWORD PTR ds:0x10098c14,0x0
1001b36e:	jne    0x1001b382
1001b370:	push   0xfffffffd
1001b372:	call   0x1001b1cd
1001b377:	pop    ecx
1001b378:	mov    DWORD PTR ds:0x10098c14,0x1
1001b382:	xor    eax,eax
1001b384:	ret    
1001b385:	push   ebp
1001b386:	mov    ebp,esp
1001b388:	mov    eax,0xffff
1001b38d:	sub    esp,0x14
1001b390:	cmp    WORD PTR [ebp+0x8],ax
1001b394:	je     0x1001b430
1001b39a:	push   ebx
1001b39b:	push   DWORD PTR [ebp+0xc]
1001b39e:	lea    ecx,[ebp-0x14]
1001b3a1:	call   0x100165fa
1001b3a6:	mov    ecx,DWORD PTR [ebp-0x14]
1001b3a9:	mov    edx,DWORD PTR [ecx+0x14]
1001b3ac:	xor    ebx,ebx
1001b3ae:	cmp    edx,ebx
1001b3b0:	jne    0x1001b3c6
1001b3b2:	mov    eax,DWORD PTR [ebp+0x8]
1001b3b5:	lea    ecx,[eax-0x41]
1001b3b8:	cmp    cx,0x19
1001b3bc:	ja     0x1001b3c1
1001b3be:	add    eax,0x20
1001b3c1:	movzx  eax,ax
1001b3c4:	jmp    0x1001b423
1001b3c6:	mov    eax,0x100
1001b3cb:	cmp    WORD PTR [ebp+0x8],ax
1001b3cf:	jae    0x1001b3fa
1001b3d1:	lea    eax,[ebp-0x14]
1001b3d4:	push   eax
1001b3d5:	push   0x1
1001b3d7:	push   DWORD PTR [ebp+0x8]
1001b3da:	call   0x1001ce9a
1001b3df:	add    esp,0xc
1001b3e2:	test   eax,eax
1001b3e4:	movzx  eax,WORD PTR [ebp+0x8]
1001b3e8:	je     0x1001b423
1001b3ea:	mov    ecx,DWORD PTR [ebp-0x14]
1001b3ed:	mov    ecx,DWORD PTR [ecx+0xcc]
1001b3f3:	movzx  ax,BYTE PTR [ecx+eax*1]
1001b3f8:	jmp    0x1001b3c1
1001b3fa:	push   DWORD PTR [ecx+0x4]
1001b3fd:	lea    ecx,[ebp-0x4]
1001b400:	push   0x1
1001b402:	push   ecx
1001b403:	push   0x1
1001b405:	lea    ecx,[ebp+0x8]
1001b408:	push   ecx
1001b409:	push   eax
1001b40a:	push   edx
1001b40b:	lea    eax,[ebp-0x14]
1001b40e:	push   eax
1001b40f:	call   0x1002017d
1001b414:	add    esp,0x20
1001b417:	test   eax,eax
1001b419:	movzx  eax,WORD PTR [ebp+0x8]
1001b41d:	je     0x1001b423
1001b41f:	movzx  eax,WORD PTR [ebp-0x4]
1001b423:	cmp    BYTE PTR [ebp-0x8],bl
1001b426:	je     0x1001b42f
1001b428:	mov    ecx,DWORD PTR [ebp-0xc]
1001b42b:	and    DWORD PTR [ecx+0x70],0xfffffffd
1001b42f:	pop    ebx
1001b430:	leave  
1001b431:	ret    
1001b432:	push   ebp
1001b433:	mov    ebp,esp
1001b435:	sub    esp,0x8
1001b438:	mov    DWORD PTR [ebp-0x4],edi
1001b43b:	mov    DWORD PTR [ebp-0x8],esi
1001b43e:	mov    esi,DWORD PTR [ebp+0xc]
1001b441:	mov    edi,DWORD PTR [ebp+0x8]
1001b444:	mov    ecx,DWORD PTR [ebp+0x10]
1001b447:	shr    ecx,0x7
1001b44a:	jmp    0x1001b452
1001b44c:	lea    ebx,[ebx+0x0]
1001b452:	movdqa xmm0,XMMWORD PTR [esi]
1001b456:	movdqa xmm1,XMMWORD PTR [esi+0x10]
1001b45b:	movdqa xmm2,XMMWORD PTR [esi+0x20]
1001b460:	movdqa xmm3,XMMWORD PTR [esi+0x30]
1001b465:	movdqa XMMWORD PTR [edi],xmm0
1001b469:	movdqa XMMWORD PTR [edi+0x10],xmm1
1001b46e:	movdqa XMMWORD PTR [edi+0x20],xmm2
1001b473:	movdqa XMMWORD PTR [edi+0x30],xmm3
1001b478:	movdqa xmm4,XMMWORD PTR [esi+0x40]
1001b47d:	movdqa xmm5,XMMWORD PTR [esi+0x50]
1001b482:	movdqa xmm6,XMMWORD PTR [esi+0x60]
1001b487:	movdqa xmm7,XMMWORD PTR [esi+0x70]
1001b48c:	movdqa XMMWORD PTR [edi+0x40],xmm4
1001b491:	movdqa XMMWORD PTR [edi+0x50],xmm5
1001b496:	movdqa XMMWORD PTR [edi+0x60],xmm6
1001b49b:	movdqa XMMWORD PTR [edi+0x70],xmm7
1001b4a0:	lea    esi,[esi+0x80]
1001b4a6:	lea    edi,[edi+0x80]
1001b4ac:	dec    ecx
1001b4ad:	jne    0x1001b452
1001b4af:	mov    esi,DWORD PTR [ebp-0x8]
1001b4b2:	mov    edi,DWORD PTR [ebp-0x4]
1001b4b5:	mov    esp,ebp
1001b4b7:	pop    ebp
1001b4b8:	ret    
1001b4b9:	push   ebp
1001b4ba:	mov    ebp,esp
1001b4bc:	sub    esp,0x1c
1001b4bf:	mov    DWORD PTR [ebp-0xc],edi
1001b4c2:	mov    DWORD PTR [ebp-0x8],esi
1001b4c5:	mov    DWORD PTR [ebp-0x4],ebx
1001b4c8:	mov    ebx,DWORD PTR [ebp+0xc]
1001b4cb:	mov    eax,ebx
1001b4cd:	cdq    
1001b4ce:	mov    ecx,eax
1001b4d0:	mov    eax,DWORD PTR [ebp+0x8]
1001b4d3:	xor    ecx,edx
1001b4d5:	sub    ecx,edx
1001b4d7:	and    ecx,0xf
1001b4da:	xor    ecx,edx
1001b4dc:	sub    ecx,edx
1001b4de:	cdq    
1001b4df:	mov    edi,eax
1001b4e1:	xor    edi,edx
1001b4e3:	sub    edi,edx
1001b4e5:	and    edi,0xf
1001b4e8:	xor    edi,edx
1001b4ea:	sub    edi,edx
1001b4ec:	mov    edx,ecx
1001b4ee:	or     edx,edi
1001b4f0:	jne    0x1001b53c
1001b4f2:	mov    esi,DWORD PTR [ebp+0x10]
1001b4f5:	mov    ecx,esi
1001b4f7:	and    ecx,0x7f
1001b4fa:	mov    DWORD PTR [ebp-0x18],ecx
1001b4fd:	cmp    esi,ecx
1001b4ff:	je     0x1001b514
1001b501:	sub    esi,ecx
1001b503:	push   esi
1001b504:	push   ebx
1001b505:	push   eax
1001b506:	call   0x1001b432
1001b50b:	add    esp,0xc
1001b50e:	mov    eax,DWORD PTR [ebp+0x8]
1001b511:	mov    ecx,DWORD PTR [ebp-0x18]
1001b514:	test   ecx,ecx
1001b516:	je     0x1001b58f
1001b518:	mov    ebx,DWORD PTR [ebp+0x10]
1001b51b:	mov    edx,DWORD PTR [ebp+0xc]
1001b51e:	add    edx,ebx
1001b520:	sub    edx,ecx
1001b522:	mov    DWORD PTR [ebp-0x14],edx
1001b525:	add    ebx,eax
1001b527:	sub    ebx,ecx
1001b529:	mov    DWORD PTR [ebp-0x10],ebx
1001b52c:	mov    esi,DWORD PTR [ebp-0x14]
1001b52f:	mov    edi,DWORD PTR [ebp-0x10]
1001b532:	mov    ecx,DWORD PTR [ebp-0x18]
1001b535:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001b537:	mov    eax,DWORD PTR [ebp+0x8]
1001b53a:	jmp    0x1001b58f
1001b53c:	cmp    ecx,edi
1001b53e:	jne    0x1001b575
1001b540:	neg    ecx
1001b542:	add    ecx,0x10
1001b545:	mov    DWORD PTR [ebp-0x1c],ecx
1001b548:	mov    esi,DWORD PTR [ebp+0xc]
1001b54b:	mov    edi,DWORD PTR [ebp+0x8]
1001b54e:	mov    ecx,DWORD PTR [ebp-0x1c]
1001b551:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001b553:	mov    ecx,DWORD PTR [ebp+0x8]
1001b556:	add    ecx,DWORD PTR [ebp-0x1c]
1001b559:	mov    edx,DWORD PTR [ebp+0xc]
1001b55c:	add    edx,DWORD PTR [ebp-0x1c]
1001b55f:	mov    eax,DWORD PTR [ebp+0x10]
1001b562:	sub    eax,DWORD PTR [ebp-0x1c]
1001b565:	push   eax
1001b566:	push   edx
1001b567:	push   ecx
1001b568:	call   0x1001b4b9
1001b56d:	add    esp,0xc
1001b570:	mov    eax,DWORD PTR [ebp+0x8]
1001b573:	jmp    0x1001b58f
1001b575:	mov    esi,DWORD PTR [ebp+0xc]
1001b578:	mov    edi,DWORD PTR [ebp+0x8]
1001b57b:	mov    ecx,DWORD PTR [ebp+0x10]
1001b57e:	mov    edx,ecx
1001b580:	shr    ecx,0x2
1001b583:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001b585:	mov    ecx,edx
1001b587:	and    ecx,0x3
1001b58a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001b58c:	mov    eax,DWORD PTR [ebp+0x8]
1001b58f:	mov    ebx,DWORD PTR [ebp-0x4]
1001b592:	mov    esi,DWORD PTR [ebp-0x8]
1001b595:	mov    edi,DWORD PTR [ebp-0xc]
1001b598:	mov    esp,ebp
1001b59a:	pop    ebp
1001b59b:	ret    
1001b59c:	push   ebp
1001b59d:	mov    ebp,esp
1001b59f:	push   ecx
1001b5a0:	push   ecx
1001b5a1:	push   esi
1001b5a2:	lea    eax,[ebp-0x4]
1001b5a5:	xor    esi,esi
1001b5a7:	push   eax
1001b5a8:	mov    DWORD PTR [ebp-0x4],esi
1001b5ab:	mov    DWORD PTR [ebp-0x8],esi
1001b5ae:	call   0x10019ef8
1001b5b3:	test   eax,eax
1001b5b5:	pop    ecx
1001b5b6:	je     0x1001b5c5
1001b5b8:	push   esi
1001b5b9:	push   esi
1001b5ba:	push   esi
1001b5bb:	push   esi
1001b5bc:	push   esi
1001b5bd:	call   0x10016073
1001b5c2:	add    esp,0x14
1001b5c5:	lea    eax,[ebp-0x8]
1001b5c8:	push   eax
1001b5c9:	call   0x10019f2f
1001b5ce:	test   eax,eax
1001b5d0:	pop    ecx
1001b5d1:	je     0x1001b5e0
1001b5d3:	push   esi
1001b5d4:	push   esi
1001b5d5:	push   esi
1001b5d6:	push   esi
1001b5d7:	push   esi
1001b5d8:	call   0x10016073
1001b5dd:	add    esp,0x14
1001b5e0:	cmp    DWORD PTR [ebp-0x4],0x2
1001b5e4:	pop    esi
1001b5e5:	jne    0x1001b5f2
1001b5e7:	cmp    DWORD PTR [ebp-0x8],0x5
1001b5eb:	jb     0x1001b5f2
1001b5ed:	xor    eax,eax
1001b5ef:	inc    eax
1001b5f0:	leave  
1001b5f1:	ret    
1001b5f2:	push   0x3
1001b5f4:	pop    eax
1001b5f5:	leave  
1001b5f6:	ret    
1001b5f7:	xor    eax,eax
1001b5f9:	cmp    DWORD PTR [esp+0x4],eax
1001b5fd:	push   0x0
1001b5ff:	sete   al
1001b602:	push   0x1000
1001b607:	push   eax
1001b608:	call   DWORD PTR ds:0x100340e8
1001b60e:	test   eax,eax
1001b610:	mov    ds:0x10097220,eax
1001b615:	jne    0x1001b61a
1001b617:	xor    eax,eax
1001b619:	ret    
1001b61a:	call   0x1001b59c
1001b61f:	cmp    eax,0x3
1001b622:	mov    ds:0x10098bf8,eax
1001b627:	jne    0x1001b64d
1001b629:	push   0x3f8
1001b62e:	call   0x1001b86c
1001b633:	test   eax,eax
1001b635:	pop    ecx
1001b636:	jne    0x1001b64d
1001b638:	push   DWORD PTR ds:0x10097220
1001b63e:	call   DWORD PTR ds:0x100341d8
1001b644:	and    DWORD PTR ds:0x10097220,0x0
1001b64b:	jmp    0x1001b617
1001b64d:	xor    eax,eax
1001b64f:	inc    eax
1001b650:	ret    
1001b651:	push   ebp
1001b652:	xor    ebp,ebp
1001b654:	cmp    DWORD PTR ds:0x10098bf8,0x3
1001b65b:	jne    0x1001b6b1
1001b65d:	push   ebx
1001b65e:	mov    ebx,DWORD PTR ds:0x100341e0
1001b664:	push   edi
1001b665:	xor    edi,edi
1001b667:	cmp    DWORD PTR ds:0x10098be0,ebp
1001b66d:	jle    0x1001b6a0
1001b66f:	push   esi
1001b670:	mov    esi,DWORD PTR ds:0x10098be4
1001b676:	add    esi,0x10
1001b679:	push   0x8000
1001b67e:	push   ebp
1001b67f:	push   DWORD PTR [esi-0x4]
1001b682:	call   DWORD PTR ds:0x100341a4
1001b688:	push   DWORD PTR [esi]
1001b68a:	push   ebp
1001b68b:	push   DWORD PTR ds:0x10097220
1001b691:	call   ebx
1001b693:	add    esi,0x14
1001b696:	inc    edi
1001b697:	cmp    edi,DWORD PTR ds:0x10098be0
1001b69d:	jl     0x1001b679
1001b69f:	pop    esi
1001b6a0:	push   DWORD PTR ds:0x10098be4
1001b6a6:	push   ebp
1001b6a7:	push   DWORD PTR ds:0x10097220
1001b6ad:	call   ebx
1001b6af:	pop    edi
1001b6b0:	pop    ebx
1001b6b1:	push   DWORD PTR ds:0x10097220
1001b6b7:	call   DWORD PTR ds:0x100341d8
1001b6bd:	mov    DWORD PTR ds:0x10097220,ebp
1001b6c3:	pop    ebp
1001b6c4:	ret    
1001b6c5:	push   esi
1001b6c6:	push   edi
1001b6c7:	xor    esi,esi
1001b6c9:	mov    edi,0x10097228
1001b6ce:	cmp    DWORD PTR [esi*8+0x10095b24],0x1
1001b6d6:	jne    0x1001b6f6
1001b6d8:	lea    eax,[esi*8+0x10095b20]
1001b6df:	mov    DWORD PTR [eax],edi
1001b6e1:	push   0xfa0
1001b6e6:	push   DWORD PTR [eax]
1001b6e8:	add    edi,0x18
1001b6eb:	call   0x10020f0a
1001b6f0:	test   eax,eax
1001b6f2:	pop    ecx
1001b6f3:	pop    ecx
1001b6f4:	je     0x1001b702
1001b6f6:	inc    esi
1001b6f7:	cmp    esi,0x24
1001b6fa:	jl     0x1001b6ce
1001b6fc:	xor    eax,eax
1001b6fe:	inc    eax
1001b6ff:	pop    edi
1001b700:	pop    esi
1001b701:	ret    
1001b702:	and    DWORD PTR [esi*8+0x10095b20],0x0
1001b70a:	xor    eax,eax
1001b70c:	jmp    0x1001b6ff
1001b70e:	push   ebx
1001b70f:	mov    ebx,DWORD PTR ds:0x10034200
1001b715:	push   esi
1001b716:	mov    esi,0x10095b20
1001b71b:	push   edi
1001b71c:	mov    edi,DWORD PTR [esi]
1001b71e:	test   edi,edi
1001b720:	je     0x1001b735
1001b722:	cmp    DWORD PTR [esi+0x4],0x1
1001b726:	je     0x1001b735
1001b728:	push   edi
1001b729:	call   ebx
1001b72b:	push   edi
1001b72c:	call   0x10016b85
1001b731:	and    DWORD PTR [esi],0x0
1001b734:	pop    ecx
1001b735:	add    esi,0x8
1001b738:	cmp    esi,0x10095c40
1001b73e:	jl     0x1001b71c
1001b740:	mov    esi,0x10095b20
1001b745:	pop    edi
1001b746:	mov    eax,DWORD PTR [esi]
1001b748:	test   eax,eax
1001b74a:	je     0x1001b755
1001b74c:	cmp    DWORD PTR [esi+0x4],0x1
1001b750:	jne    0x1001b755
1001b752:	push   eax
1001b753:	call   ebx
1001b755:	add    esi,0x8
1001b758:	cmp    esi,0x10095c40
1001b75e:	jl     0x1001b746
1001b760:	pop    esi
1001b761:	pop    ebx
1001b762:	ret    
1001b763:	push   ebp
1001b764:	mov    ebp,esp
1001b766:	mov    eax,DWORD PTR [ebp+0x8]
1001b769:	push   DWORD PTR [eax*8+0x10095b20]
1001b770:	call   DWORD PTR ds:0x100341f8
1001b776:	pop    ebp
1001b777:	ret    
1001b778:	push   0xc
1001b77a:	push   0x10085a28
1001b77f:	call   0x10017f88
1001b784:	xor    edi,edi
1001b786:	inc    edi
1001b787:	mov    DWORD PTR [ebp-0x1c],edi
1001b78a:	xor    ebx,ebx
1001b78c:	cmp    DWORD PTR ds:0x10097220,ebx
1001b792:	jne    0x1001b7ac
1001b794:	call   0x1001c50b
1001b799:	push   0x1e
1001b79b:	call   0x1001c36b
1001b7a0:	push   0xff
1001b7a5:	call   0x10019e99
1001b7aa:	pop    ecx
1001b7ab:	pop    ecx
1001b7ac:	mov    esi,DWORD PTR [ebp+0x8]
1001b7af:	lea    esi,[esi*8+0x10095b20]
1001b7b6:	cmp    DWORD PTR [esi],ebx
1001b7b8:	je     0x1001b7be
1001b7ba:	mov    eax,edi
1001b7bc:	jmp    0x1001b82c
1001b7be:	push   0x18
1001b7c0:	call   0x10018735
1001b7c5:	pop    ecx
1001b7c6:	mov    edi,eax
1001b7c8:	cmp    edi,ebx
1001b7ca:	jne    0x1001b7db
1001b7cc:	call   0x1001a18e
1001b7d1:	mov    DWORD PTR [eax],0xc
1001b7d7:	xor    eax,eax
1001b7d9:	jmp    0x1001b82c
1001b7db:	push   0xa
1001b7dd:	call   0x1001b83b
1001b7e2:	pop    ecx
1001b7e3:	mov    DWORD PTR [ebp-0x4],ebx
1001b7e6:	cmp    DWORD PTR [esi],ebx
1001b7e8:	jne    0x1001b816
1001b7ea:	push   0xfa0
1001b7ef:	push   edi
1001b7f0:	call   0x10020f0a
1001b7f5:	pop    ecx
1001b7f6:	pop    ecx
1001b7f7:	test   eax,eax
1001b7f9:	jne    0x1001b812
1001b7fb:	push   edi
1001b7fc:	call   0x10016b85
1001b801:	pop    ecx
1001b802:	call   0x1001a18e
1001b807:	mov    DWORD PTR [eax],0xc
1001b80d:	mov    DWORD PTR [ebp-0x1c],ebx
1001b810:	jmp    0x1001b81d
1001b812:	mov    DWORD PTR [esi],edi
1001b814:	jmp    0x1001b81d
1001b816:	push   edi
1001b817:	call   0x10016b85
1001b81c:	pop    ecx
1001b81d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001b824:	call   0x1001b832
1001b829:	mov    eax,DWORD PTR [ebp-0x1c]
1001b82c:	call   0x10017fcd
1001b831:	ret    
1001b832:	push   0xa
1001b834:	call   0x1001b763
1001b839:	pop    ecx
1001b83a:	ret    
1001b83b:	push   ebp
1001b83c:	mov    ebp,esp
1001b83e:	mov    eax,DWORD PTR [ebp+0x8]
1001b841:	push   esi
1001b842:	lea    esi,[eax*8+0x10095b20]
1001b849:	cmp    DWORD PTR [esi],0x0
1001b84c:	jne    0x1001b861
1001b84e:	push   eax
1001b84f:	call   0x1001b778
1001b854:	test   eax,eax
1001b856:	pop    ecx
1001b857:	jne    0x1001b861
1001b859:	push   0x11
1001b85b:	call   0x10019e4f
1001b860:	pop    ecx
1001b861:	push   DWORD PTR [esi]
1001b863:	call   DWORD PTR ds:0x100341f4
1001b869:	pop    esi
1001b86a:	pop    ebp
1001b86b:	ret    
1001b86c:	push   0x140
1001b871:	push   0x0
1001b873:	push   DWORD PTR ds:0x10097220
1001b879:	call   DWORD PTR ds:0x100341dc
1001b87f:	test   eax,eax
1001b881:	mov    ds:0x10098be4,eax
1001b886:	jne    0x1001b889
1001b888:	ret    
1001b889:	mov    ecx,DWORD PTR [esp+0x4]
1001b88d:	and    DWORD PTR ds:0x10097378,0x0
1001b894:	and    DWORD PTR ds:0x10098be0,0x0
1001b89b:	mov    ds:0x10098bec,eax
1001b8a0:	xor    eax,eax
1001b8a2:	mov    DWORD PTR ds:0x10098be8,ecx
1001b8a8:	mov    DWORD PTR ds:0x10098bf0,0x10
1001b8b2:	inc    eax
1001b8b3:	ret    
1001b8b4:	mov    ecx,DWORD PTR ds:0x10098be0
1001b8ba:	mov    eax,ds:0x10098be4
1001b8bf:	imul   ecx,ecx,0x14
1001b8c2:	add    ecx,eax
1001b8c4:	jmp    0x1001b8d8
1001b8c6:	mov    edx,DWORD PTR [esp+0x4]
1001b8ca:	sub    edx,DWORD PTR [eax+0xc]
1001b8cd:	cmp    edx,0x100000
1001b8d3:	jb     0x1001b8de
1001b8d5:	add    eax,0x14
1001b8d8:	cmp    eax,ecx
1001b8da:	jb     0x1001b8c6
1001b8dc:	xor    eax,eax
1001b8de:	ret    
1001b8df:	push   ebp
1001b8e0:	mov    ebp,esp
1001b8e2:	sub    esp,0x10
1001b8e5:	mov    ecx,DWORD PTR [ebp+0x8]
1001b8e8:	mov    eax,DWORD PTR [ecx+0x10]
1001b8eb:	push   esi
1001b8ec:	mov    esi,DWORD PTR [ebp+0xc]
1001b8ef:	push   edi
1001b8f0:	mov    edi,esi
1001b8f2:	sub    edi,DWORD PTR [ecx+0xc]
1001b8f5:	add    esi,0xfffffffc
1001b8f8:	shr    edi,0xf
1001b8fb:	mov    ecx,edi
1001b8fd:	imul   ecx,ecx,0x204
1001b903:	lea    ecx,[ecx+eax*1+0x144]
1001b90a:	mov    DWORD PTR [ebp-0x10],ecx
1001b90d:	mov    ecx,DWORD PTR [esi]
1001b90f:	dec    ecx
1001b910:	test   cl,0x1
1001b913:	mov    DWORD PTR [ebp-0x4],ecx
1001b916:	jne    0x1001bbef
1001b91c:	push   ebx
1001b91d:	lea    ebx,[ecx+esi*1]
1001b920:	mov    edx,DWORD PTR [ebx]
1001b922:	mov    DWORD PTR [ebp-0xc],edx
1001b925:	mov    edx,DWORD PTR [esi-0x4]
1001b928:	mov    DWORD PTR [ebp-0x8],edx
1001b92b:	mov    edx,DWORD PTR [ebp-0xc]
1001b92e:	test   dl,0x1
1001b931:	mov    DWORD PTR [ebp+0xc],ebx
1001b934:	jne    0x1001b9aa
1001b936:	sar    edx,0x4
1001b939:	dec    edx
1001b93a:	cmp    edx,0x3f
1001b93d:	jbe    0x1001b942
1001b93f:	push   0x3f
1001b941:	pop    edx
1001b942:	mov    ecx,DWORD PTR [ebx+0x4]
1001b945:	cmp    ecx,DWORD PTR [ebx+0x8]
1001b948:	jne    0x1001b98c
1001b94a:	cmp    edx,0x20
1001b94d:	mov    ebx,0x80000000
1001b952:	jae    0x1001b96d
1001b954:	mov    ecx,edx
1001b956:	shr    ebx,cl
1001b958:	lea    ecx,[edx+eax*1+0x4]
1001b95c:	not    ebx
1001b95e:	and    DWORD PTR [eax+edi*4+0x44],ebx
1001b962:	dec    BYTE PTR [ecx]
1001b964:	jne    0x1001b989
1001b966:	mov    ecx,DWORD PTR [ebp+0x8]
1001b969:	and    DWORD PTR [ecx],ebx
1001b96b:	jmp    0x1001b989
1001b96d:	lea    ecx,[edx-0x20]
1001b970:	shr    ebx,cl
1001b972:	lea    ecx,[edx+eax*1+0x4]
1001b976:	not    ebx
1001b978:	and    DWORD PTR [eax+edi*4+0xc4],ebx
1001b97f:	dec    BYTE PTR [ecx]
1001b981:	jne    0x1001b989
1001b983:	mov    ecx,DWORD PTR [ebp+0x8]
1001b986:	and    DWORD PTR [ecx+0x4],ebx
1001b989:	mov    ebx,DWORD PTR [ebp+0xc]
1001b98c:	mov    edx,DWORD PTR [ebx+0x8]
1001b98f:	mov    ebx,DWORD PTR [ebx+0x4]
1001b992:	mov    ecx,DWORD PTR [ebp-0x4]
1001b995:	add    ecx,DWORD PTR [ebp-0xc]
1001b998:	mov    DWORD PTR [edx+0x4],ebx
1001b99b:	mov    edx,DWORD PTR [ebp+0xc]
1001b99e:	mov    ebx,DWORD PTR [edx+0x4]
1001b9a1:	mov    edx,DWORD PTR [edx+0x8]
1001b9a4:	mov    DWORD PTR [ebx+0x8],edx
1001b9a7:	mov    DWORD PTR [ebp-0x4],ecx
1001b9aa:	mov    edx,ecx
1001b9ac:	sar    edx,0x4
1001b9af:	dec    edx
1001b9b0:	cmp    edx,0x3f
1001b9b3:	jbe    0x1001b9b8
1001b9b5:	push   0x3f
1001b9b7:	pop    edx
1001b9b8:	mov    ebx,DWORD PTR [ebp-0x8]
1001b9bb:	and    ebx,0x1
1001b9be:	mov    DWORD PTR [ebp-0xc],ebx
1001b9c1:	jne    0x1001ba56
1001b9c7:	sub    esi,DWORD PTR [ebp-0x8]
1001b9ca:	mov    ebx,DWORD PTR [ebp-0x8]
1001b9cd:	sar    ebx,0x4
1001b9d0:	push   0x3f
1001b9d2:	mov    DWORD PTR [ebp+0xc],esi
1001b9d5:	dec    ebx
1001b9d6:	pop    esi
1001b9d7:	cmp    ebx,esi
1001b9d9:	jbe    0x1001b9dd
1001b9db:	mov    ebx,esi
1001b9dd:	add    ecx,DWORD PTR [ebp-0x8]
1001b9e0:	mov    edx,ecx
1001b9e2:	sar    edx,0x4
1001b9e5:	dec    edx
1001b9e6:	cmp    edx,esi
1001b9e8:	mov    DWORD PTR [ebp-0x4],ecx
1001b9eb:	jbe    0x1001b9ef
1001b9ed:	mov    edx,esi
1001b9ef:	cmp    ebx,edx
1001b9f1:	je     0x1001ba51
1001b9f3:	mov    ecx,DWORD PTR [ebp+0xc]
1001b9f6:	mov    esi,DWORD PTR [ecx+0x4]
1001b9f9:	cmp    esi,DWORD PTR [ecx+0x8]
1001b9fc:	jne    0x1001ba39
1001b9fe:	cmp    ebx,0x20
1001ba01:	mov    esi,0x80000000
1001ba06:	jae    0x1001ba1f
1001ba08:	mov    ecx,ebx
1001ba0a:	shr    esi,cl
1001ba0c:	not    esi
1001ba0e:	and    DWORD PTR [eax+edi*4+0x44],esi
1001ba12:	dec    BYTE PTR [ebx+eax*1+0x4]
1001ba16:	jne    0x1001ba39
1001ba18:	mov    ecx,DWORD PTR [ebp+0x8]
1001ba1b:	and    DWORD PTR [ecx],esi
1001ba1d:	jmp    0x1001ba39
1001ba1f:	lea    ecx,[ebx-0x20]
1001ba22:	shr    esi,cl
1001ba24:	not    esi
1001ba26:	and    DWORD PTR [eax+edi*4+0xc4],esi
1001ba2d:	dec    BYTE PTR [ebx+eax*1+0x4]
1001ba31:	jne    0x1001ba39
1001ba33:	mov    ecx,DWORD PTR [ebp+0x8]
1001ba36:	and    DWORD PTR [ecx+0x4],esi
1001ba39:	mov    ecx,DWORD PTR [ebp+0xc]
1001ba3c:	mov    esi,DWORD PTR [ecx+0x8]
1001ba3f:	mov    ecx,DWORD PTR [ecx+0x4]
1001ba42:	mov    DWORD PTR [esi+0x4],ecx
1001ba45:	mov    ecx,DWORD PTR [ebp+0xc]
1001ba48:	mov    esi,DWORD PTR [ecx+0x4]
1001ba4b:	mov    ecx,DWORD PTR [ecx+0x8]
1001ba4e:	mov    DWORD PTR [esi+0x8],ecx
1001ba51:	mov    esi,DWORD PTR [ebp+0xc]
1001ba54:	jmp    0x1001ba59
1001ba56:	mov    ebx,DWORD PTR [ebp+0x8]
1001ba59:	cmp    DWORD PTR [ebp-0xc],0x0
1001ba5d:	jne    0x1001ba67
1001ba5f:	cmp    ebx,edx
1001ba61:	je     0x1001bae7
1001ba67:	mov    ecx,DWORD PTR [ebp-0x10]
1001ba6a:	lea    ecx,[ecx+edx*8]
1001ba6d:	mov    ebx,DWORD PTR [ecx+0x4]
1001ba70:	mov    DWORD PTR [esi+0x8],ecx
1001ba73:	mov    DWORD PTR [esi+0x4],ebx
1001ba76:	mov    DWORD PTR [ecx+0x4],esi
1001ba79:	mov    ecx,DWORD PTR [esi+0x4]
1001ba7c:	mov    DWORD PTR [ecx+0x8],esi
1001ba7f:	mov    ecx,DWORD PTR [esi+0x4]
1001ba82:	cmp    ecx,DWORD PTR [esi+0x8]
1001ba85:	jne    0x1001bae7
1001ba87:	mov    cl,BYTE PTR [edx+eax*1+0x4]
1001ba8b:	mov    BYTE PTR [ebp+0xf],cl
1001ba8e:	inc    cl
1001ba90:	cmp    edx,0x20
1001ba93:	mov    BYTE PTR [edx+eax*1+0x4],cl
1001ba97:	jae    0x1001babe
1001ba99:	cmp    BYTE PTR [ebp+0xf],0x0
1001ba9d:	jne    0x1001baad
1001ba9f:	mov    ecx,edx
1001baa1:	mov    ebx,0x80000000
1001baa6:	shr    ebx,cl
1001baa8:	mov    ecx,DWORD PTR [ebp+0x8]
1001baab:	or     DWORD PTR [ecx],ebx
1001baad:	mov    ebx,0x80000000
1001bab2:	mov    ecx,edx
1001bab4:	shr    ebx,cl
1001bab6:	lea    eax,[eax+edi*4+0x44]
1001baba:	or     DWORD PTR [eax],ebx
1001babc:	jmp    0x1001bae7
1001babe:	cmp    BYTE PTR [ebp+0xf],0x0
1001bac2:	jne    0x1001bad4
1001bac4:	lea    ecx,[edx-0x20]
1001bac7:	mov    ebx,0x80000000
1001bacc:	shr    ebx,cl
1001bace:	mov    ecx,DWORD PTR [ebp+0x8]
1001bad1:	or     DWORD PTR [ecx+0x4],ebx
1001bad4:	lea    ecx,[edx-0x20]
1001bad7:	mov    edx,0x80000000
1001badc:	shr    edx,cl
1001bade:	lea    eax,[eax+edi*4+0xc4]
1001bae5:	or     DWORD PTR [eax],edx
1001bae7:	mov    eax,DWORD PTR [ebp-0x4]
1001baea:	mov    DWORD PTR [esi],eax
1001baec:	mov    DWORD PTR [eax+esi*1-0x4],eax
1001baf0:	mov    eax,DWORD PTR [ebp-0x10]
1001baf3:	dec    DWORD PTR [eax]
1001baf5:	jne    0x1001bbee
1001bafb:	mov    eax,ds:0x10097378
1001bb00:	test   eax,eax
1001bb02:	je     0x1001bbe0
1001bb08:	mov    ecx,DWORD PTR ds:0x10098bf4
1001bb0e:	mov    esi,DWORD PTR ds:0x100341a4
1001bb14:	push   0x4000
1001bb19:	shl    ecx,0xf
1001bb1c:	add    ecx,DWORD PTR [eax+0xc]
1001bb1f:	mov    ebx,0x8000
1001bb24:	push   ebx
1001bb25:	push   ecx
1001bb26:	call   esi
1001bb28:	mov    ecx,DWORD PTR ds:0x10098bf4
1001bb2e:	mov    eax,ds:0x10097378
1001bb33:	mov    edx,0x80000000
1001bb38:	shr    edx,cl
1001bb3a:	or     DWORD PTR [eax+0x8],edx
1001bb3d:	mov    eax,ds:0x10097378
1001bb42:	mov    eax,DWORD PTR [eax+0x10]
1001bb45:	mov    ecx,DWORD PTR ds:0x10098bf4
1001bb4b:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
1001bb53:	mov    eax,ds:0x10097378
1001bb58:	mov    eax,DWORD PTR [eax+0x10]
1001bb5b:	dec    BYTE PTR [eax+0x43]
1001bb5e:	mov    eax,ds:0x10097378
1001bb63:	mov    ecx,DWORD PTR [eax+0x10]
1001bb66:	cmp    BYTE PTR [ecx+0x43],0x0
1001bb6a:	jne    0x1001bb75
1001bb6c:	and    DWORD PTR [eax+0x4],0xfffffffe
1001bb70:	mov    eax,ds:0x10097378
1001bb75:	cmp    DWORD PTR [eax+0x8],0xffffffff
1001bb79:	jne    0x1001bbe0
1001bb7b:	push   ebx
1001bb7c:	push   0x0
1001bb7e:	push   DWORD PTR [eax+0xc]
1001bb81:	call   esi
1001bb83:	mov    eax,ds:0x10097378
1001bb88:	push   DWORD PTR [eax+0x10]
1001bb8b:	push   0x0
1001bb8d:	push   DWORD PTR ds:0x10097220
1001bb93:	call   DWORD PTR ds:0x100341e0
1001bb99:	mov    ecx,DWORD PTR ds:0x10098be0
1001bb9f:	mov    eax,ds:0x10097378
1001bba4:	imul   ecx,ecx,0x14
1001bba7:	mov    edx,DWORD PTR ds:0x10098be4
1001bbad:	sub    ecx,eax
1001bbaf:	lea    ecx,[ecx+edx*1-0x14]
1001bbb3:	push   ecx
1001bbb4:	lea    ecx,[eax+0x14]
1001bbb7:	push   ecx
1001bbb8:	push   eax
1001bbb9:	call   0x1001a370
1001bbbe:	mov    eax,DWORD PTR [ebp+0x8]
1001bbc1:	add    esp,0xc
1001bbc4:	dec    DWORD PTR ds:0x10098be0
1001bbca:	cmp    eax,DWORD PTR ds:0x10097378
1001bbd0:	jbe    0x1001bbd6
1001bbd2:	sub    DWORD PTR [ebp+0x8],0x14
1001bbd6:	mov    eax,ds:0x10098be4
1001bbdb:	mov    ds:0x10098bec,eax
1001bbe0:	mov    eax,DWORD PTR [ebp+0x8]
1001bbe3:	mov    ds:0x10097378,eax
1001bbe8:	mov    DWORD PTR ds:0x10098bf4,edi
1001bbee:	pop    ebx
1001bbef:	pop    edi
1001bbf0:	pop    esi
1001bbf1:	leave  
1001bbf2:	ret    
1001bbf3:	mov    eax,ds:0x10098bf0
1001bbf8:	push   esi
1001bbf9:	mov    esi,DWORD PTR ds:0x10098be0
1001bbff:	push   edi
1001bc00:	xor    edi,edi
1001bc02:	cmp    esi,eax
1001bc04:	jne    0x1001bc3a
1001bc06:	add    eax,0x10
1001bc09:	imul   eax,eax,0x14
1001bc0c:	push   eax
1001bc0d:	push   DWORD PTR ds:0x10098be4
1001bc13:	push   edi
1001bc14:	push   DWORD PTR ds:0x10097220
1001bc1a:	call   DWORD PTR ds:0x100341e4
1001bc20:	cmp    eax,edi
1001bc22:	jne    0x1001bc28
1001bc24:	xor    eax,eax
1001bc26:	jmp    0x1001bca0
1001bc28:	add    DWORD PTR ds:0x10098bf0,0x10
1001bc2f:	mov    esi,DWORD PTR ds:0x10098be0
1001bc35:	mov    ds:0x10098be4,eax
1001bc3a:	imul   esi,esi,0x14
1001bc3d:	add    esi,DWORD PTR ds:0x10098be4
1001bc43:	push   0x41c4
1001bc48:	push   0x8
1001bc4a:	push   DWORD PTR ds:0x10097220
1001bc50:	call   DWORD PTR ds:0x100341dc
1001bc56:	cmp    eax,edi
1001bc58:	mov    DWORD PTR [esi+0x10],eax
1001bc5b:	je     0x1001bc24
1001bc5d:	push   0x4
1001bc5f:	push   0x2000
1001bc64:	push   0x100000
1001bc69:	push   edi
1001bc6a:	call   DWORD PTR ds:0x1003421c
1001bc70:	cmp    eax,edi
1001bc72:	mov    DWORD PTR [esi+0xc],eax
1001bc75:	jne    0x1001bc89
1001bc77:	push   DWORD PTR [esi+0x10]
1001bc7a:	push   edi
1001bc7b:	push   DWORD PTR ds:0x10097220
1001bc81:	call   DWORD PTR ds:0x100341e0
1001bc87:	jmp    0x1001bc24
1001bc89:	or     DWORD PTR [esi+0x8],0xffffffff
1001bc8d:	mov    DWORD PTR [esi],edi
1001bc8f:	mov    DWORD PTR [esi+0x4],edi
1001bc92:	inc    DWORD PTR ds:0x10098be0
1001bc98:	mov    eax,DWORD PTR [esi+0x10]
1001bc9b:	or     DWORD PTR [eax],0xffffffff
1001bc9e:	mov    eax,esi
1001bca0:	pop    edi
1001bca1:	pop    esi
1001bca2:	ret    
1001bca3:	push   ebp
1001bca4:	mov    ebp,esp
1001bca6:	push   ecx
1001bca7:	push   ecx
1001bca8:	mov    ecx,DWORD PTR [ebp+0x8]
1001bcab:	mov    eax,DWORD PTR [ecx+0x8]
1001bcae:	push   ebx
1001bcaf:	push   esi
1001bcb0:	mov    esi,DWORD PTR [ecx+0x10]
1001bcb3:	push   edi
1001bcb4:	xor    ebx,ebx
1001bcb6:	jmp    0x1001bcbb
1001bcb8:	add    eax,eax
1001bcba:	inc    ebx
1001bcbb:	test   eax,eax
1001bcbd:	jge    0x1001bcb8
1001bcbf:	mov    eax,ebx
1001bcc1:	imul   eax,eax,0x204
1001bcc7:	lea    eax,[eax+esi*1+0x144]
1001bcce:	push   0x3f
1001bcd0:	mov    DWORD PTR [ebp-0x8],eax
1001bcd3:	pop    edx
1001bcd4:	mov    DWORD PTR [eax+0x8],eax
1001bcd7:	mov    DWORD PTR [eax+0x4],eax
1001bcda:	add    eax,0x8
1001bcdd:	dec    edx
1001bcde:	jne    0x1001bcd4
1001bce0:	push   0x4
1001bce2:	mov    edi,ebx
1001bce4:	push   0x1000
1001bce9:	shl    edi,0xf
1001bcec:	add    edi,DWORD PTR [ecx+0xc]
1001bcef:	push   0x8000
1001bcf4:	push   edi
1001bcf5:	call   DWORD PTR ds:0x1003421c
1001bcfb:	test   eax,eax
1001bcfd:	jne    0x1001bd07
1001bcff:	or     eax,0xffffffff
1001bd02:	jmp    0x1001bda4
1001bd07:	lea    edx,[edi+0x7000]
1001bd0d:	cmp    edi,edx
1001bd0f:	mov    DWORD PTR [ebp-0x4],edx
1001bd12:	ja     0x1001bd57
1001bd14:	mov    ecx,edx
1001bd16:	sub    ecx,edi
1001bd18:	shr    ecx,0xc
1001bd1b:	lea    eax,[edi+0x10]
1001bd1e:	inc    ecx
1001bd1f:	or     DWORD PTR [eax-0x8],0xffffffff
1001bd23:	or     DWORD PTR [eax+0xfec],0xffffffff
1001bd2a:	lea    edx,[eax+0xffc]
1001bd30:	mov    DWORD PTR [eax],edx
1001bd32:	lea    edx,[eax-0x1004]
1001bd38:	mov    DWORD PTR [eax-0x4],0xff0
1001bd3f:	mov    DWORD PTR [eax+0x4],edx
1001bd42:	mov    DWORD PTR [eax+0xfe8],0xff0
1001bd4c:	add    eax,0x1000
1001bd51:	dec    ecx
1001bd52:	jne    0x1001bd1f
1001bd54:	mov    edx,DWORD PTR [ebp-0x4]
1001bd57:	mov    eax,DWORD PTR [ebp-0x8]
1001bd5a:	add    eax,0x1f8
1001bd5f:	lea    ecx,[edi+0xc]
1001bd62:	mov    DWORD PTR [eax+0x4],ecx
1001bd65:	mov    DWORD PTR [ecx+0x8],eax
1001bd68:	lea    ecx,[edx+0xc]
1001bd6b:	mov    DWORD PTR [eax+0x8],ecx
1001bd6e:	mov    DWORD PTR [ecx+0x4],eax
1001bd71:	and    DWORD PTR [esi+ebx*4+0x44],0x0
1001bd76:	xor    edi,edi
1001bd78:	inc    edi
1001bd79:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
1001bd80:	mov    al,BYTE PTR [esi+0x43]
1001bd83:	mov    cl,al
1001bd85:	inc    cl
1001bd87:	test   al,al
1001bd89:	mov    eax,DWORD PTR [ebp+0x8]
1001bd8c:	mov    BYTE PTR [esi+0x43],cl
1001bd8f:	jne    0x1001bd94
1001bd91:	or     DWORD PTR [eax+0x4],edi
1001bd94:	mov    edx,0x80000000
1001bd99:	mov    ecx,ebx
1001bd9b:	shr    edx,cl
1001bd9d:	not    edx
1001bd9f:	and    DWORD PTR [eax+0x8],edx
1001bda2:	mov    eax,ebx
1001bda4:	pop    edi
1001bda5:	pop    esi
1001bda6:	pop    ebx
1001bda7:	leave  
1001bda8:	ret    
1001bda9:	push   ebp
1001bdaa:	mov    ebp,esp
1001bdac:	sub    esp,0xc
1001bdaf:	mov    ecx,DWORD PTR [ebp+0x8]
1001bdb2:	mov    eax,DWORD PTR [ecx+0x10]
1001bdb5:	push   ebx
1001bdb6:	push   esi
1001bdb7:	mov    esi,DWORD PTR [ebp+0x10]
1001bdba:	push   edi
1001bdbb:	mov    edi,DWORD PTR [ebp+0xc]
1001bdbe:	mov    edx,edi
1001bdc0:	sub    edx,DWORD PTR [ecx+0xc]
1001bdc3:	add    esi,0x17
1001bdc6:	shr    edx,0xf
1001bdc9:	mov    ecx,edx
1001bdcb:	imul   ecx,ecx,0x204
1001bdd1:	lea    ecx,[ecx+eax*1+0x144]
1001bdd8:	mov    DWORD PTR [ebp-0xc],ecx
1001bddb:	mov    ecx,DWORD PTR [edi-0x4]
1001bdde:	and    esi,0xfffffff0
1001bde1:	dec    ecx
1001bde2:	cmp    esi,ecx
1001bde4:	lea    edi,[ecx+edi*1-0x4]
1001bde8:	mov    ebx,DWORD PTR [edi]
1001bdea:	mov    DWORD PTR [ebp+0x10],ecx
1001bded:	mov    DWORD PTR [ebp-0x4],ebx
1001bdf0:	jle    0x1001bf4b
1001bdf6:	test   bl,0x1
1001bdf9:	jne    0x1001bf44
1001bdff:	add    ebx,ecx
1001be01:	cmp    esi,ebx
1001be03:	jg     0x1001bf44
1001be09:	mov    ecx,DWORD PTR [ebp-0x4]
1001be0c:	sar    ecx,0x4
1001be0f:	dec    ecx
1001be10:	cmp    ecx,0x3f
1001be13:	mov    DWORD PTR [ebp-0x8],ecx
1001be16:	jbe    0x1001be1e
1001be18:	push   0x3f
1001be1a:	pop    ecx
1001be1b:	mov    DWORD PTR [ebp-0x8],ecx
1001be1e:	mov    ebx,DWORD PTR [edi+0x4]
1001be21:	cmp    ebx,DWORD PTR [edi+0x8]
1001be24:	jne    0x1001be69
1001be26:	cmp    ecx,0x20
1001be29:	mov    ebx,0x80000000
1001be2e:	jae    0x1001be4a
1001be30:	shr    ebx,cl
1001be32:	mov    ecx,DWORD PTR [ebp-0x8]
1001be35:	lea    ecx,[ecx+eax*1+0x4]
1001be39:	not    ebx
1001be3b:	and    DWORD PTR [eax+edx*4+0x44],ebx
1001be3f:	dec    BYTE PTR [ecx]
1001be41:	jne    0x1001be69
1001be43:	mov    ecx,DWORD PTR [ebp+0x8]
1001be46:	and    DWORD PTR [ecx],ebx
1001be48:	jmp    0x1001be69
1001be4a:	add    ecx,0xffffffe0
1001be4d:	shr    ebx,cl
1001be4f:	mov    ecx,DWORD PTR [ebp-0x8]
1001be52:	lea    ecx,[ecx+eax*1+0x4]
1001be56:	not    ebx
1001be58:	and    DWORD PTR [eax+edx*4+0xc4],ebx
1001be5f:	dec    BYTE PTR [ecx]
1001be61:	jne    0x1001be69
1001be63:	mov    ecx,DWORD PTR [ebp+0x8]
1001be66:	and    DWORD PTR [ecx+0x4],ebx
1001be69:	mov    ecx,DWORD PTR [edi+0x8]
1001be6c:	mov    ebx,DWORD PTR [edi+0x4]
1001be6f:	mov    DWORD PTR [ecx+0x4],ebx
1001be72:	mov    ecx,DWORD PTR [edi+0x4]
1001be75:	mov    edi,DWORD PTR [edi+0x8]
1001be78:	mov    DWORD PTR [ecx+0x8],edi
1001be7b:	mov    ecx,DWORD PTR [ebp+0x10]
1001be7e:	sub    ecx,esi
1001be80:	add    DWORD PTR [ebp-0x4],ecx
1001be83:	cmp    DWORD PTR [ebp-0x4],0x0
1001be87:	jle    0x1001bf32
1001be8d:	mov    edi,DWORD PTR [ebp-0x4]
1001be90:	mov    ecx,DWORD PTR [ebp+0xc]
1001be93:	sar    edi,0x4
1001be96:	dec    edi
1001be97:	cmp    edi,0x3f
1001be9a:	lea    ecx,[ecx+esi*1-0x4]
1001be9e:	jbe    0x1001bea3
1001bea0:	push   0x3f
1001bea2:	pop    edi
1001bea3:	mov    ebx,DWORD PTR [ebp-0xc]
1001bea6:	lea    ebx,[ebx+edi*8]
1001bea9:	mov    DWORD PTR [ebp+0x10],ebx
1001beac:	mov    ebx,DWORD PTR [ebx+0x4]
1001beaf:	mov    DWORD PTR [ecx+0x4],ebx
1001beb2:	mov    ebx,DWORD PTR [ebp+0x10]
1001beb5:	mov    DWORD PTR [ecx+0x8],ebx
1001beb8:	mov    DWORD PTR [ebx+0x4],ecx
1001bebb:	mov    ebx,DWORD PTR [ecx+0x4]
1001bebe:	mov    DWORD PTR [ebx+0x8],ecx
1001bec1:	mov    ebx,DWORD PTR [ecx+0x4]
1001bec4:	cmp    ebx,DWORD PTR [ecx+0x8]
1001bec7:	jne    0x1001bf20
1001bec9:	mov    cl,BYTE PTR [edi+eax*1+0x4]
1001becd:	mov    BYTE PTR [ebp+0x13],cl
1001bed0:	inc    cl
1001bed2:	cmp    edi,0x20
1001bed5:	mov    BYTE PTR [edi+eax*1+0x4],cl
1001bed9:	jae    0x1001bef7
1001bedb:	cmp    BYTE PTR [ebp+0x13],0x0
1001bedf:	jne    0x1001beef
1001bee1:	mov    ecx,edi
1001bee3:	mov    ebx,0x80000000
1001bee8:	shr    ebx,cl
1001beea:	mov    ecx,DWORD PTR [ebp+0x8]
1001beed:	or     DWORD PTR [ecx],ebx
1001beef:	lea    eax,[eax+edx*4+0x44]
1001bef3:	mov    ecx,edi
1001bef5:	jmp    0x1001bf17
1001bef7:	cmp    BYTE PTR [ebp+0x13],0x0
1001befb:	jne    0x1001bf0d
1001befd:	lea    ecx,[edi-0x20]
1001bf00:	mov    ebx,0x80000000
1001bf05:	shr    ebx,cl
1001bf07:	mov    ecx,DWORD PTR [ebp+0x8]
1001bf0a:	or     DWORD PTR [ecx+0x4],ebx
1001bf0d:	lea    eax,[eax+edx*4+0xc4]
1001bf14:	lea    ecx,[edi-0x20]
1001bf17:	mov    edx,0x80000000
1001bf1c:	shr    edx,cl
1001bf1e:	or     DWORD PTR [eax],edx
1001bf20:	mov    edx,DWORD PTR [ebp+0xc]
1001bf23:	mov    ecx,DWORD PTR [ebp-0x4]
1001bf26:	lea    eax,[edx+esi*1-0x4]
1001bf2a:	mov    DWORD PTR [eax],ecx
1001bf2c:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
1001bf30:	jmp    0x1001bf35
1001bf32:	mov    edx,DWORD PTR [ebp+0xc]
1001bf35:	lea    eax,[esi+0x1]
1001bf38:	mov    DWORD PTR [edx-0x4],eax
1001bf3b:	mov    DWORD PTR [edx+esi*1-0x8],eax
1001bf3f:	jmp    0x1001c080
1001bf44:	xor    eax,eax
1001bf46:	jmp    0x1001c083
1001bf4b:	jge    0x1001c080
1001bf51:	mov    ebx,DWORD PTR [ebp+0xc]
1001bf54:	sub    DWORD PTR [ebp+0x10],esi
1001bf57:	lea    ecx,[esi+0x1]
1001bf5a:	mov    DWORD PTR [ebx-0x4],ecx
1001bf5d:	lea    ebx,[ebx+esi*1-0x4]
1001bf61:	mov    esi,DWORD PTR [ebp+0x10]
1001bf64:	sar    esi,0x4
1001bf67:	dec    esi
1001bf68:	cmp    esi,0x3f
1001bf6b:	mov    DWORD PTR [ebp+0xc],ebx
1001bf6e:	mov    DWORD PTR [ebx-0x4],ecx
1001bf71:	jbe    0x1001bf76
1001bf73:	push   0x3f
1001bf75:	pop    esi
1001bf76:	test   BYTE PTR [ebp-0x4],0x1
1001bf7a:	jne    0x1001c000
1001bf80:	mov    esi,DWORD PTR [ebp-0x4]
1001bf83:	sar    esi,0x4
1001bf86:	dec    esi
1001bf87:	cmp    esi,0x3f
1001bf8a:	jbe    0x1001bf8f
1001bf8c:	push   0x3f
1001bf8e:	pop    esi
1001bf8f:	mov    ecx,DWORD PTR [edi+0x4]
1001bf92:	cmp    ecx,DWORD PTR [edi+0x8]
1001bf95:	jne    0x1001bfd9
1001bf97:	cmp    esi,0x20
1001bf9a:	mov    ebx,0x80000000
1001bf9f:	jae    0x1001bfba
1001bfa1:	mov    ecx,esi
1001bfa3:	shr    ebx,cl
1001bfa5:	lea    esi,[esi+eax*1+0x4]
1001bfa9:	not    ebx
1001bfab:	and    DWORD PTR [eax+edx*4+0x44],ebx
1001bfaf:	dec    BYTE PTR [esi]
1001bfb1:	jne    0x1001bfd6
1001bfb3:	mov    ecx,DWORD PTR [ebp+0x8]
1001bfb6:	and    DWORD PTR [ecx],ebx
1001bfb8:	jmp    0x1001bfd6
1001bfba:	lea    ecx,[esi-0x20]
1001bfbd:	shr    ebx,cl
1001bfbf:	lea    ecx,[esi+eax*1+0x4]
1001bfc3:	not    ebx
1001bfc5:	and    DWORD PTR [eax+edx*4+0xc4],ebx
1001bfcc:	dec    BYTE PTR [ecx]
1001bfce:	jne    0x1001bfd6
1001bfd0:	mov    ecx,DWORD PTR [ebp+0x8]
1001bfd3:	and    DWORD PTR [ecx+0x4],ebx
1001bfd6:	mov    ebx,DWORD PTR [ebp+0xc]
1001bfd9:	mov    ecx,DWORD PTR [edi+0x8]
1001bfdc:	mov    esi,DWORD PTR [edi+0x4]
1001bfdf:	mov    DWORD PTR [ecx+0x4],esi
1001bfe2:	mov    esi,DWORD PTR [edi+0x8]
1001bfe5:	mov    ecx,DWORD PTR [edi+0x4]
1001bfe8:	mov    DWORD PTR [ecx+0x8],esi
1001bfeb:	mov    esi,DWORD PTR [ebp+0x10]
1001bfee:	add    esi,DWORD PTR [ebp-0x4]
1001bff1:	mov    DWORD PTR [ebp+0x10],esi
1001bff4:	sar    esi,0x4
1001bff7:	dec    esi
1001bff8:	cmp    esi,0x3f
1001bffb:	jbe    0x1001c000
1001bffd:	push   0x3f
1001bfff:	pop    esi
1001c000:	mov    ecx,DWORD PTR [ebp-0xc]
1001c003:	lea    ecx,[ecx+esi*8]
1001c006:	mov    edi,DWORD PTR [ecx+0x4]
1001c009:	mov    DWORD PTR [ebx+0x8],ecx
1001c00c:	mov    DWORD PTR [ebx+0x4],edi
1001c00f:	mov    DWORD PTR [ecx+0x4],ebx
1001c012:	mov    ecx,DWORD PTR [ebx+0x4]
1001c015:	mov    DWORD PTR [ecx+0x8],ebx
1001c018:	mov    ecx,DWORD PTR [ebx+0x4]
1001c01b:	cmp    ecx,DWORD PTR [ebx+0x8]
1001c01e:	jne    0x1001c077
1001c020:	mov    cl,BYTE PTR [esi+eax*1+0x4]
1001c024:	mov    BYTE PTR [ebp+0xf],cl
1001c027:	inc    cl
1001c029:	cmp    esi,0x20
1001c02c:	mov    BYTE PTR [esi+eax*1+0x4],cl
1001c030:	jae    0x1001c04e
1001c032:	cmp    BYTE PTR [ebp+0xf],0x0
1001c036:	jne    0x1001c046
1001c038:	mov    ecx,esi
1001c03a:	mov    edi,0x80000000
1001c03f:	shr    edi,cl
1001c041:	mov    ecx,DWORD PTR [ebp+0x8]
1001c044:	or     DWORD PTR [ecx],edi
1001c046:	lea    eax,[eax+edx*4+0x44]
1001c04a:	mov    ecx,esi
1001c04c:	jmp    0x1001c06e
1001c04e:	cmp    BYTE PTR [ebp+0xf],0x0
1001c052:	jne    0x1001c064
1001c054:	lea    ecx,[esi-0x20]
1001c057:	mov    edi,0x80000000
1001c05c:	shr    edi,cl
1001c05e:	mov    ecx,DWORD PTR [ebp+0x8]
1001c061:	or     DWORD PTR [ecx+0x4],edi
1001c064:	lea    eax,[eax+edx*4+0xc4]
1001c06b:	lea    ecx,[esi-0x20]
1001c06e:	mov    edx,0x80000000
1001c073:	shr    edx,cl
1001c075:	or     DWORD PTR [eax],edx
1001c077:	mov    eax,DWORD PTR [ebp+0x10]
1001c07a:	mov    DWORD PTR [ebx],eax
1001c07c:	mov    DWORD PTR [eax+ebx*1-0x4],eax
1001c080:	xor    eax,eax
1001c082:	inc    eax
1001c083:	pop    edi
1001c084:	pop    esi
1001c085:	pop    ebx
1001c086:	leave  
1001c087:	ret    
1001c088:	push   ebp
1001c089:	mov    ebp,esp
1001c08b:	sub    esp,0x14
1001c08e:	mov    eax,ds:0x10098be0
1001c093:	mov    ecx,DWORD PTR [ebp+0x8]
1001c096:	imul   eax,eax,0x14
1001c099:	add    eax,DWORD PTR ds:0x10098be4
1001c09f:	add    ecx,0x17
1001c0a2:	and    ecx,0xfffffff0
1001c0a5:	mov    DWORD PTR [ebp-0x10],ecx
1001c0a8:	sar    ecx,0x4
1001c0ab:	push   ebx
1001c0ac:	dec    ecx
1001c0ad:	cmp    ecx,0x20
1001c0b0:	push   esi
1001c0b1:	push   edi
1001c0b2:	jge    0x1001c0bf
1001c0b4:	or     esi,0xffffffff
1001c0b7:	shr    esi,cl
1001c0b9:	or     DWORD PTR [ebp-0x8],0xffffffff
1001c0bd:	jmp    0x1001c0cc
1001c0bf:	add    ecx,0xffffffe0
1001c0c2:	or     edx,0xffffffff
1001c0c5:	xor    esi,esi
1001c0c7:	shr    edx,cl
1001c0c9:	mov    DWORD PTR [ebp-0x8],edx
1001c0cc:	mov    ecx,DWORD PTR ds:0x10098bec
1001c0d2:	mov    ebx,ecx
1001c0d4:	jmp    0x1001c0e7
1001c0d6:	mov    edx,DWORD PTR [ebx+0x4]
1001c0d9:	mov    edi,DWORD PTR [ebx]
1001c0db:	and    edx,DWORD PTR [ebp-0x8]
1001c0de:	and    edi,esi
1001c0e0:	or     edx,edi
1001c0e2:	jne    0x1001c0ee
1001c0e4:	add    ebx,0x14
1001c0e7:	cmp    ebx,eax
1001c0e9:	mov    DWORD PTR [ebp+0x8],ebx
1001c0ec:	jb     0x1001c0d6
1001c0ee:	cmp    ebx,eax
1001c0f0:	jne    0x1001c171
1001c0f2:	mov    ebx,DWORD PTR ds:0x10098be4
1001c0f8:	jmp    0x1001c10b
1001c0fa:	mov    edx,DWORD PTR [ebx+0x4]
1001c0fd:	mov    edi,DWORD PTR [ebx]
1001c0ff:	and    edx,DWORD PTR [ebp-0x8]
1001c102:	and    edi,esi
1001c104:	or     edx,edi
1001c106:	jne    0x1001c112
1001c108:	add    ebx,0x14
1001c10b:	cmp    ebx,ecx
1001c10d:	mov    DWORD PTR [ebp+0x8],ebx
1001c110:	jb     0x1001c0fa
1001c112:	cmp    ebx,ecx
1001c114:	jne    0x1001c171
1001c116:	jmp    0x1001c124
1001c118:	cmp    DWORD PTR [ebx+0x8],0x0
1001c11c:	jne    0x1001c128
1001c11e:	add    ebx,0x14
1001c121:	mov    DWORD PTR [ebp+0x8],ebx
1001c124:	cmp    ebx,eax
1001c126:	jb     0x1001c118
1001c128:	cmp    ebx,eax
1001c12a:	jne    0x1001c15d
1001c12c:	mov    ebx,DWORD PTR ds:0x10098be4
1001c132:	jmp    0x1001c13d
1001c134:	cmp    DWORD PTR [ebx+0x8],0x0
1001c138:	jne    0x1001c144
1001c13a:	add    ebx,0x14
1001c13d:	cmp    ebx,ecx
1001c13f:	mov    DWORD PTR [ebp+0x8],ebx
1001c142:	jb     0x1001c134
1001c144:	cmp    ebx,ecx
1001c146:	jne    0x1001c15d
1001c148:	call   0x1001bbf3
1001c14d:	mov    ebx,eax
1001c14f:	test   ebx,ebx
1001c151:	mov    DWORD PTR [ebp+0x8],ebx
1001c154:	jne    0x1001c15d
1001c156:	xor    eax,eax
1001c158:	jmp    0x1001c366
1001c15d:	push   ebx
1001c15e:	call   0x1001bca3
1001c163:	pop    ecx
1001c164:	mov    ecx,DWORD PTR [ebx+0x10]
1001c167:	mov    DWORD PTR [ecx],eax
1001c169:	mov    eax,DWORD PTR [ebx+0x10]
1001c16c:	cmp    DWORD PTR [eax],0xffffffff
1001c16f:	je     0x1001c156
1001c171:	mov    DWORD PTR ds:0x10098bec,ebx
1001c177:	mov    eax,DWORD PTR [ebx+0x10]
1001c17a:	mov    edx,DWORD PTR [eax]
1001c17c:	cmp    edx,0xffffffff
1001c17f:	mov    DWORD PTR [ebp-0x4],edx
1001c182:	je     0x1001c198
1001c184:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
1001c18b:	mov    edi,DWORD PTR [eax+edx*4+0x44]
1001c18f:	and    ecx,DWORD PTR [ebp-0x8]
1001c192:	and    edi,esi
1001c194:	or     ecx,edi
1001c196:	jne    0x1001c1c1
1001c198:	and    DWORD PTR [ebp-0x4],0x0
1001c19c:	mov    edx,DWORD PTR [eax+0xc4]
1001c1a2:	lea    ecx,[eax+0x44]
1001c1a5:	mov    edi,DWORD PTR [ecx]
1001c1a7:	and    edx,DWORD PTR [ebp-0x8]
1001c1aa:	and    edi,esi
1001c1ac:	or     edx,edi
1001c1ae:	jne    0x1001c1be
1001c1b0:	inc    DWORD PTR [ebp-0x4]
1001c1b3:	mov    edx,DWORD PTR [ecx+0x84]
1001c1b9:	add    ecx,0x4
1001c1bc:	jmp    0x1001c1a5
1001c1be:	mov    edx,DWORD PTR [ebp-0x4]
1001c1c1:	mov    ecx,edx
1001c1c3:	imul   ecx,ecx,0x204
1001c1c9:	lea    ecx,[ecx+eax*1+0x144]
1001c1d0:	mov    DWORD PTR [ebp-0xc],ecx
1001c1d3:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
1001c1d7:	xor    edi,edi
1001c1d9:	and    ecx,esi
1001c1db:	jne    0x1001c1ef
1001c1dd:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
1001c1e4:	and    ecx,DWORD PTR [ebp-0x8]
1001c1e7:	push   0x20
1001c1e9:	pop    edi
1001c1ea:	jmp    0x1001c1ef
1001c1ec:	add    ecx,ecx
1001c1ee:	inc    edi
1001c1ef:	test   ecx,ecx
1001c1f1:	jge    0x1001c1ec
1001c1f3:	mov    ecx,DWORD PTR [ebp-0xc]
1001c1f6:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
1001c1fa:	mov    ecx,DWORD PTR [edx]
1001c1fc:	sub    ecx,DWORD PTR [ebp-0x10]
1001c1ff:	mov    esi,ecx
1001c201:	sar    esi,0x4
1001c204:	dec    esi
1001c205:	cmp    esi,0x3f
1001c208:	mov    DWORD PTR [ebp-0x8],ecx
1001c20b:	jle    0x1001c210
1001c20d:	push   0x3f
1001c20f:	pop    esi
1001c210:	cmp    esi,edi
1001c212:	je     0x1001c319
1001c218:	mov    ecx,DWORD PTR [edx+0x4]
1001c21b:	cmp    ecx,DWORD PTR [edx+0x8]
1001c21e:	jne    0x1001c27c
1001c220:	cmp    edi,0x20
1001c223:	mov    ebx,0x80000000
1001c228:	jge    0x1001c250
1001c22a:	mov    ecx,edi
1001c22c:	shr    ebx,cl
1001c22e:	mov    ecx,DWORD PTR [ebp-0x4]
1001c231:	lea    edi,[eax+edi*1+0x4]
1001c235:	not    ebx
1001c237:	mov    DWORD PTR [ebp-0x14],ebx
1001c23a:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
1001c23e:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
1001c242:	dec    BYTE PTR [edi]
1001c244:	jne    0x1001c279
1001c246:	mov    ecx,DWORD PTR [ebp-0x14]
1001c249:	mov    ebx,DWORD PTR [ebp+0x8]
1001c24c:	and    DWORD PTR [ebx],ecx
1001c24e:	jmp    0x1001c27c
1001c250:	lea    ecx,[edi-0x20]
1001c253:	shr    ebx,cl
1001c255:	mov    ecx,DWORD PTR [ebp-0x4]
1001c258:	lea    ecx,[eax+ecx*4+0xc4]
1001c25f:	lea    edi,[eax+edi*1+0x4]
1001c263:	not    ebx
1001c265:	and    DWORD PTR [ecx],ebx
1001c267:	dec    BYTE PTR [edi]
1001c269:	mov    DWORD PTR [ebp-0x14],ebx
1001c26c:	jne    0x1001c279
1001c26e:	mov    ebx,DWORD PTR [ebp+0x8]
1001c271:	mov    ecx,DWORD PTR [ebp-0x14]
1001c274:	and    DWORD PTR [ebx+0x4],ecx
1001c277:	jmp    0x1001c27c
1001c279:	mov    ebx,DWORD PTR [ebp+0x8]
1001c27c:	cmp    DWORD PTR [ebp-0x8],0x0
1001c280:	mov    ecx,DWORD PTR [edx+0x8]
1001c283:	mov    edi,DWORD PTR [edx+0x4]
1001c286:	mov    DWORD PTR [ecx+0x4],edi
1001c289:	mov    ecx,DWORD PTR [edx+0x4]
1001c28c:	mov    edi,DWORD PTR [edx+0x8]
1001c28f:	mov    DWORD PTR [ecx+0x8],edi
1001c292:	je     0x1001c325
1001c298:	mov    ecx,DWORD PTR [ebp-0xc]
1001c29b:	lea    ecx,[ecx+esi*8]
1001c29e:	mov    edi,DWORD PTR [ecx+0x4]
1001c2a1:	mov    DWORD PTR [edx+0x8],ecx
1001c2a4:	mov    DWORD PTR [edx+0x4],edi
1001c2a7:	mov    DWORD PTR [ecx+0x4],edx
1001c2aa:	mov    ecx,DWORD PTR [edx+0x4]
1001c2ad:	mov    DWORD PTR [ecx+0x8],edx
1001c2b0:	mov    ecx,DWORD PTR [edx+0x4]
1001c2b3:	cmp    ecx,DWORD PTR [edx+0x8]
1001c2b6:	jne    0x1001c316
1001c2b8:	mov    cl,BYTE PTR [esi+eax*1+0x4]
1001c2bc:	mov    BYTE PTR [ebp+0xb],cl
1001c2bf:	inc    cl
1001c2c1:	cmp    esi,0x20
1001c2c4:	mov    BYTE PTR [esi+eax*1+0x4],cl
1001c2c8:	jge    0x1001c2ed
1001c2ca:	cmp    BYTE PTR [ebp+0xb],0x0
1001c2ce:	jne    0x1001c2db
1001c2d0:	mov    edi,0x80000000
1001c2d5:	mov    ecx,esi
1001c2d7:	shr    edi,cl
1001c2d9:	or     DWORD PTR [ebx],edi
1001c2db:	mov    ecx,esi
1001c2dd:	mov    edi,0x80000000
1001c2e2:	shr    edi,cl
1001c2e4:	mov    ecx,DWORD PTR [ebp-0x4]
1001c2e7:	or     DWORD PTR [eax+ecx*4+0x44],edi
1001c2eb:	jmp    0x1001c316
1001c2ed:	cmp    BYTE PTR [ebp+0xb],0x0
1001c2f1:	jne    0x1001c300
1001c2f3:	lea    ecx,[esi-0x20]
1001c2f6:	mov    edi,0x80000000
1001c2fb:	shr    edi,cl
1001c2fd:	or     DWORD PTR [ebx+0x4],edi
1001c300:	mov    ecx,DWORD PTR [ebp-0x4]
1001c303:	lea    edi,[eax+ecx*4+0xc4]
1001c30a:	lea    ecx,[esi-0x20]
1001c30d:	mov    esi,0x80000000
1001c312:	shr    esi,cl
1001c314:	or     DWORD PTR [edi],esi
1001c316:	mov    ecx,DWORD PTR [ebp-0x8]
1001c319:	test   ecx,ecx
1001c31b:	je     0x1001c328
1001c31d:	mov    DWORD PTR [edx],ecx
1001c31f:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
1001c323:	jmp    0x1001c328
1001c325:	mov    ecx,DWORD PTR [ebp-0x8]
1001c328:	mov    esi,DWORD PTR [ebp-0x10]
1001c32b:	add    edx,ecx
1001c32d:	lea    ecx,[esi+0x1]
1001c330:	mov    DWORD PTR [edx],ecx
1001c332:	mov    DWORD PTR [edx+esi*1-0x4],ecx
1001c336:	mov    esi,DWORD PTR [ebp-0xc]
1001c339:	mov    ecx,DWORD PTR [esi]
1001c33b:	test   ecx,ecx
1001c33d:	lea    edi,[ecx+0x1]
1001c340:	mov    DWORD PTR [esi],edi
1001c342:	jne    0x1001c35e
1001c344:	cmp    ebx,DWORD PTR ds:0x10097378
1001c34a:	jne    0x1001c35e
1001c34c:	mov    ecx,DWORD PTR [ebp-0x4]
1001c34f:	cmp    ecx,DWORD PTR ds:0x10098bf4
1001c355:	jne    0x1001c35e
1001c357:	and    DWORD PTR ds:0x10097378,0x0
1001c35e:	mov    ecx,DWORD PTR [ebp-0x4]
1001c361:	mov    DWORD PTR [eax],ecx
1001c363:	lea    eax,[edx+0x4]
1001c366:	pop    edi
1001c367:	pop    esi
1001c368:	pop    ebx
1001c369:	leave  
1001c36a:	ret    
1001c36b:	push   ecx
1001c36c:	push   ebx
1001c36d:	mov    ebx,DWORD PTR [esp+0xc]
1001c371:	push   esi
1001c372:	push   edi
1001c373:	xor    esi,esi
1001c375:	xor    edi,edi
1001c377:	cmp    ebx,DWORD PTR [edi*8+0x10095c40]
1001c37e:	je     0x1001c386
1001c380:	inc    edi
1001c381:	cmp    edi,0x17
1001c384:	jb     0x1001c377
1001c386:	cmp    edi,0x17
1001c389:	jae    0x1001c506
1001c38f:	push   ebp
1001c390:	push   0x3
1001c392:	call   0x100213cb
1001c397:	cmp    eax,0x1
1001c39a:	pop    ecx
1001c39b:	je     0x1001c4d2
1001c3a1:	push   0x3
1001c3a3:	call   0x100213cb
1001c3a8:	test   eax,eax
1001c3aa:	pop    ecx
1001c3ab:	jne    0x1001c3ba
1001c3ad:	cmp    DWORD PTR ds:0x10096e44,0x1
1001c3b4:	je     0x1001c4d2
1001c3ba:	cmp    ebx,0xfc
1001c3c0:	je     0x1001c505
1001c3c6:	push   0x1007e4f8
1001c3cb:	mov    ebx,0x314
1001c3d0:	push   ebx
1001c3d1:	mov    ebp,0x10097380
1001c3d6:	push   ebp
1001c3d7:	call   0x1001a2d8
1001c3dc:	add    esp,0xc
1001c3df:	test   eax,eax
1001c3e1:	je     0x1001c3f0
1001c3e3:	push   esi
1001c3e4:	push   esi
1001c3e5:	push   esi
1001c3e6:	push   esi
1001c3e7:	push   esi
1001c3e8:	call   0x10016073
1001c3ed:	add    esp,0x14
1001c3f0:	push   0x104
1001c3f5:	mov    esi,0x10097399
1001c3fa:	push   esi
1001c3fb:	push   0x0
1001c3fd:	mov    BYTE PTR ds:0x1009749d,0x0
1001c404:	call   DWORD PTR ds:0x100341ac
1001c40a:	test   eax,eax
1001c40c:	jne    0x1001c434
1001c40e:	push   0x1007e4e0
1001c413:	push   0x2fb
1001c418:	push   esi
1001c419:	call   0x1001a2d8
1001c41e:	add    esp,0xc
1001c421:	test   eax,eax
1001c423:	je     0x1001c434
1001c425:	xor    eax,eax
1001c427:	push   eax
1001c428:	push   eax
1001c429:	push   eax
1001c42a:	push   eax
1001c42b:	push   eax
1001c42c:	call   0x10016073
1001c431:	add    esp,0x14
1001c434:	push   esi
1001c435:	call   0x100163c0
1001c43a:	inc    eax
1001c43b:	cmp    eax,0x3c
1001c43e:	pop    ecx
1001c43f:	jbe    0x1001c479
1001c441:	push   esi
1001c442:	call   0x100163c0
1001c447:	sub    esi,0x3b
1001c44a:	add    eax,esi
1001c44c:	push   0x3
1001c44e:	mov    ecx,0x10097694
1001c453:	push   0x1007e4dc
1001c458:	sub    ecx,eax
1001c45a:	push   ecx
1001c45b:	push   eax
1001c45c:	call   0x10020686
1001c461:	add    esp,0x14
1001c464:	test   eax,eax
1001c466:	je     0x1001c479
1001c468:	xor    esi,esi
1001c46a:	push   esi
1001c46b:	push   esi
1001c46c:	push   esi
1001c46d:	push   esi
1001c46e:	push   esi
1001c46f:	call   0x10016073
1001c474:	add    esp,0x14
1001c477:	jmp    0x1001c47b
1001c479:	xor    esi,esi
1001c47b:	push   0x1007e4d8
1001c480:	push   ebx
1001c481:	push   ebp
1001c482:	call   0x100205c4
1001c487:	add    esp,0xc
1001c48a:	test   eax,eax
1001c48c:	je     0x1001c49b
1001c48e:	push   esi
1001c48f:	push   esi
1001c490:	push   esi
1001c491:	push   esi
1001c492:	push   esi
1001c493:	call   0x10016073
1001c498:	add    esp,0x14
1001c49b:	push   DWORD PTR [edi*8+0x10095c44]
1001c4a2:	push   ebx
1001c4a3:	push   ebp
1001c4a4:	call   0x100205c4
1001c4a9:	add    esp,0xc
1001c4ac:	test   eax,eax
1001c4ae:	je     0x1001c4bd
1001c4b0:	push   esi
1001c4b1:	push   esi
1001c4b2:	push   esi
1001c4b3:	push   esi
1001c4b4:	push   esi
1001c4b5:	call   0x10016073
1001c4ba:	add    esp,0x14
1001c4bd:	push   0x12010
1001c4c2:	push   0x1007e4b0
1001c4c7:	push   ebp
1001c4c8:	call   0x1002120e
1001c4cd:	add    esp,0xc
1001c4d0:	jmp    0x1001c505
1001c4d2:	push   0xfffffff4
1001c4d4:	call   DWORD PTR ds:0x100341a8
1001c4da:	mov    ebp,eax
1001c4dc:	cmp    ebp,esi
1001c4de:	je     0x1001c505
1001c4e0:	cmp    ebp,0xffffffff
1001c4e3:	je     0x1001c505
1001c4e5:	push   0x0
1001c4e7:	lea    eax,[esp+0x14]
1001c4eb:	push   eax
1001c4ec:	lea    esi,[edi*8+0x10095c44]
1001c4f3:	push   DWORD PTR [esi]
1001c4f5:	call   0x100163c0
1001c4fa:	pop    ecx
1001c4fb:	push   eax
1001c4fc:	push   DWORD PTR [esi]
1001c4fe:	push   ebp
1001c4ff:	call   DWORD PTR ds:0x100340ac
1001c505:	pop    ebp
1001c506:	pop    edi
1001c507:	pop    esi
1001c508:	pop    ebx
1001c509:	pop    ecx
1001c50a:	ret    
1001c50b:	push   0x3
1001c50d:	call   0x100213cb
1001c512:	cmp    eax,0x1
1001c515:	pop    ecx
1001c516:	je     0x1001c52d
1001c518:	push   0x3
1001c51a:	call   0x100213cb
1001c51f:	test   eax,eax
1001c521:	pop    ecx
1001c522:	jne    0x1001c543
1001c524:	cmp    DWORD PTR ds:0x10096e44,0x1
1001c52b:	jne    0x1001c543
1001c52d:	push   0xfc
1001c532:	call   0x1001c36b
1001c537:	push   0xff
1001c53c:	call   0x1001c36b
1001c541:	pop    ecx
1001c542:	pop    ecx
1001c543:	ret    
1001c544:	push   0x54
1001c546:	push   0x10085a48
1001c54b:	call   0x10017f88
1001c550:	xor    edi,edi
1001c552:	mov    DWORD PTR [ebp-0x4],edi
1001c555:	lea    eax,[ebp-0x64]
1001c558:	push   eax
1001c559:	call   DWORD PTR ds:0x100341bc
1001c55f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001c566:	push   0x40
1001c568:	push   0x20
1001c56a:	pop    esi
1001c56b:	push   esi
1001c56c:	call   0x10018775
1001c571:	pop    ecx
1001c572:	pop    ecx
1001c573:	cmp    eax,edi
1001c575:	je     0x1001c78f
1001c57b:	mov    ds:0x10098ae0,eax
1001c580:	mov    DWORD PTR ds:0x10098ac4,esi
1001c586:	lea    ecx,[eax+0x800]
1001c58c:	jmp    0x1001c5be
1001c58e:	mov    BYTE PTR [eax+0x4],0x0
1001c592:	or     DWORD PTR [eax],0xffffffff
1001c595:	mov    BYTE PTR [eax+0x5],0xa
1001c599:	mov    DWORD PTR [eax+0x8],edi
1001c59c:	mov    BYTE PTR [eax+0x24],0x0
1001c5a0:	mov    BYTE PTR [eax+0x25],0xa
1001c5a4:	mov    BYTE PTR [eax+0x26],0xa
1001c5a8:	mov    DWORD PTR [eax+0x38],edi
1001c5ab:	mov    BYTE PTR [eax+0x34],0x0
1001c5af:	add    eax,0x40
1001c5b2:	mov    ecx,DWORD PTR ds:0x10098ae0
1001c5b8:	add    ecx,0x800
1001c5be:	cmp    eax,ecx
1001c5c0:	jb     0x1001c58e
1001c5c2:	cmp    WORD PTR [ebp-0x32],di
1001c5c6:	je     0x1001c6d6
1001c5cc:	mov    eax,DWORD PTR [ebp-0x30]
1001c5cf:	cmp    eax,edi
1001c5d1:	je     0x1001c6d6
1001c5d7:	mov    edi,DWORD PTR [eax]
1001c5d9:	lea    ebx,[eax+0x4]
1001c5dc:	lea    eax,[ebx+edi*1]
1001c5df:	mov    DWORD PTR [ebp-0x1c],eax
1001c5e2:	mov    esi,0x800
1001c5e7:	cmp    edi,esi
1001c5e9:	jl     0x1001c5ed
1001c5eb:	mov    edi,esi
1001c5ed:	mov    DWORD PTR [ebp-0x20],0x1
1001c5f4:	jmp    0x1001c651
1001c5f6:	push   0x40
1001c5f8:	push   0x20
1001c5fa:	call   0x10018775
1001c5ff:	pop    ecx
1001c600:	pop    ecx
1001c601:	test   eax,eax
1001c603:	je     0x1001c65b
1001c605:	mov    ecx,DWORD PTR [ebp-0x20]
1001c608:	lea    ecx,[ecx*4+0x10098ae0]
1001c60f:	mov    DWORD PTR [ecx],eax
1001c611:	add    DWORD PTR ds:0x10098ac4,0x20
1001c618:	lea    edx,[eax+0x800]
1001c61e:	jmp    0x1001c64a
1001c620:	mov    BYTE PTR [eax+0x4],0x0
1001c624:	or     DWORD PTR [eax],0xffffffff
1001c627:	mov    BYTE PTR [eax+0x5],0xa
1001c62b:	and    DWORD PTR [eax+0x8],0x0
1001c62f:	and    BYTE PTR [eax+0x24],0x80
1001c633:	mov    BYTE PTR [eax+0x25],0xa
1001c637:	mov    BYTE PTR [eax+0x26],0xa
1001c63b:	and    DWORD PTR [eax+0x38],0x0
1001c63f:	mov    BYTE PTR [eax+0x34],0x0
1001c643:	add    eax,0x40
1001c646:	mov    edx,DWORD PTR [ecx]
1001c648:	add    edx,esi
1001c64a:	cmp    eax,edx
1001c64c:	jb     0x1001c620
1001c64e:	inc    DWORD PTR [ebp-0x20]
1001c651:	cmp    DWORD PTR ds:0x10098ac4,edi
1001c657:	jl     0x1001c5f6
1001c659:	jmp    0x1001c661
1001c65b:	mov    edi,DWORD PTR ds:0x10098ac4
1001c661:	and    DWORD PTR [ebp-0x20],0x0
1001c665:	test   edi,edi
1001c667:	jle    0x1001c6d6
1001c669:	mov    eax,DWORD PTR [ebp-0x1c]
1001c66c:	mov    ecx,DWORD PTR [eax]
1001c66e:	cmp    ecx,0xffffffff
1001c671:	je     0x1001c6c9
1001c673:	cmp    ecx,0xfffffffe
1001c676:	je     0x1001c6c9
1001c678:	mov    al,BYTE PTR [ebx]
1001c67a:	test   al,0x1
1001c67c:	je     0x1001c6c9
1001c67e:	test   al,0x8
1001c680:	jne    0x1001c68d
1001c682:	push   ecx
1001c683:	call   DWORD PTR ds:0x10034234
1001c689:	test   eax,eax
1001c68b:	je     0x1001c6c9
1001c68d:	mov    esi,DWORD PTR [ebp-0x20]
1001c690:	mov    eax,esi
1001c692:	sar    eax,0x5
1001c695:	and    esi,0x1f
1001c698:	shl    esi,0x6
1001c69b:	add    esi,DWORD PTR [eax*4+0x10098ae0]
1001c6a2:	mov    eax,DWORD PTR [ebp-0x1c]
1001c6a5:	mov    eax,DWORD PTR [eax]
1001c6a7:	mov    DWORD PTR [esi],eax
1001c6a9:	mov    al,BYTE PTR [ebx]
1001c6ab:	mov    BYTE PTR [esi+0x4],al
1001c6ae:	push   0xfa0
1001c6b3:	lea    eax,[esi+0xc]
1001c6b6:	push   eax
1001c6b7:	call   0x10020f0a
1001c6bc:	pop    ecx
1001c6bd:	pop    ecx
1001c6be:	test   eax,eax
1001c6c0:	je     0x1001c78f
1001c6c6:	inc    DWORD PTR [esi+0x8]
1001c6c9:	inc    DWORD PTR [ebp-0x20]
1001c6cc:	inc    ebx
1001c6cd:	add    DWORD PTR [ebp-0x1c],0x4
1001c6d1:	cmp    DWORD PTR [ebp-0x20],edi
1001c6d4:	jl     0x1001c669
1001c6d6:	xor    ebx,ebx
1001c6d8:	mov    esi,ebx
1001c6da:	shl    esi,0x6
1001c6dd:	add    esi,DWORD PTR ds:0x10098ae0
1001c6e3:	mov    eax,DWORD PTR [esi]
1001c6e5:	cmp    eax,0xffffffff
1001c6e8:	je     0x1001c6f5
1001c6ea:	cmp    eax,0xfffffffe
1001c6ed:	je     0x1001c6f5
1001c6ef:	or     BYTE PTR [esi+0x4],0x80
1001c6f3:	jmp    0x1001c767
1001c6f5:	mov    BYTE PTR [esi+0x4],0x81
1001c6f9:	test   ebx,ebx
1001c6fb:	jne    0x1001c702
1001c6fd:	push   0xfffffff6
1001c6ff:	pop    eax
1001c700:	jmp    0x1001c70c
1001c702:	mov    eax,ebx
1001c704:	dec    eax
1001c705:	neg    eax
1001c707:	sbb    eax,eax
1001c709:	add    eax,0xfffffff5
1001c70c:	push   eax
1001c70d:	call   DWORD PTR ds:0x100341a8
1001c713:	mov    edi,eax
1001c715:	cmp    edi,0xffffffff
1001c718:	je     0x1001c75d
1001c71a:	test   edi,edi
1001c71c:	je     0x1001c75d
1001c71e:	push   edi
1001c71f:	call   DWORD PTR ds:0x10034234
1001c725:	test   eax,eax
1001c727:	je     0x1001c75d
1001c729:	mov    DWORD PTR [esi],edi
1001c72b:	and    eax,0xff
1001c730:	cmp    eax,0x2
1001c733:	jne    0x1001c73b
1001c735:	or     BYTE PTR [esi+0x4],0x40
1001c739:	jmp    0x1001c744
1001c73b:	cmp    eax,0x3
1001c73e:	jne    0x1001c744
1001c740:	or     BYTE PTR [esi+0x4],0x8
1001c744:	push   0xfa0
1001c749:	lea    eax,[esi+0xc]
1001c74c:	push   eax
1001c74d:	call   0x10020f0a
1001c752:	pop    ecx
1001c753:	pop    ecx
1001c754:	test   eax,eax
1001c756:	je     0x1001c78f
1001c758:	inc    DWORD PTR [esi+0x8]
1001c75b:	jmp    0x1001c767
1001c75d:	or     BYTE PTR [esi+0x4],0x40
1001c761:	mov    DWORD PTR [esi],0xfffffffe
1001c767:	inc    ebx
1001c768:	cmp    ebx,0x3
1001c76b:	jl     0x1001c6d8
1001c771:	push   DWORD PTR ds:0x10098ac4
1001c777:	call   DWORD PTR ds:0x100341b0
1001c77d:	xor    eax,eax
1001c77f:	jmp    0x1001c792
1001c781:	xor    eax,eax
1001c783:	inc    eax
1001c784:	ret    
1001c785:	mov    esp,DWORD PTR [ebp-0x18]
1001c788:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001c78f:	or     eax,0xffffffff
1001c792:	call   0x10017fcd
1001c797:	ret    
1001c798:	push   esi
1001c799:	push   edi
1001c79a:	mov    esi,0x10098ae0
1001c79f:	mov    edi,DWORD PTR [esi]
1001c7a1:	test   edi,edi
1001c7a3:	je     0x1001c7d6
1001c7a5:	lea    eax,[edi+0x800]
1001c7ab:	jmp    0x1001c7c7
1001c7ad:	cmp    DWORD PTR [edi+0x8],0x0
1001c7b1:	je     0x1001c7bd
1001c7b3:	lea    eax,[edi+0xc]
1001c7b6:	push   eax
1001c7b7:	call   DWORD PTR ds:0x10034200
1001c7bd:	mov    eax,DWORD PTR [esi]
1001c7bf:	add    edi,0x40
1001c7c2:	add    eax,0x800
1001c7c7:	cmp    edi,eax
1001c7c9:	jb     0x1001c7ad
1001c7cb:	push   DWORD PTR [esi]
1001c7cd:	call   0x10016b85
1001c7d2:	and    DWORD PTR [esi],0x0
1001c7d5:	pop    ecx
1001c7d6:	add    esi,0x4
1001c7d9:	cmp    esi,0x10098be0
1001c7df:	jl     0x1001c79f
1001c7e1:	pop    edi
1001c7e2:	pop    esi
1001c7e3:	ret    
1001c7e4:	push   ebx
1001c7e5:	xor    ebx,ebx
1001c7e7:	cmp    DWORD PTR ds:0x10098c14,ebx
1001c7ed:	push   esi
1001c7ee:	push   edi
1001c7ef:	jne    0x1001c7f6
1001c7f1:	call   0x1001b367
1001c7f6:	mov    esi,DWORD PTR ds:0x10096e38
1001c7fc:	xor    edi,edi
1001c7fe:	cmp    esi,ebx
1001c800:	jne    0x1001c81a
1001c802:	or     eax,0xffffffff
1001c805:	jmp    0x1001c8a5
1001c80a:	cmp    al,0x3d
1001c80c:	je     0x1001c80f
1001c80e:	inc    edi
1001c80f:	push   esi
1001c810:	call   0x100163c0
1001c815:	pop    ecx
1001c816:	lea    esi,[esi+eax*1+0x1]
1001c81a:	mov    al,BYTE PTR [esi]
1001c81c:	cmp    al,bl
1001c81e:	jne    0x1001c80a
1001c820:	push   0x4
1001c822:	inc    edi
1001c823:	push   edi
1001c824:	call   0x10018775
1001c829:	mov    edi,eax
1001c82b:	cmp    edi,ebx
1001c82d:	pop    ecx
1001c82e:	pop    ecx
1001c82f:	mov    DWORD PTR ds:0x100971b4,edi
1001c835:	je     0x1001c802
1001c837:	mov    esi,DWORD PTR ds:0x10096e38
1001c83d:	push   ebp
1001c83e:	jmp    0x1001c880
1001c840:	push   esi
1001c841:	call   0x100163c0
1001c846:	mov    ebp,eax
1001c848:	inc    ebp
1001c849:	cmp    BYTE PTR [esi],0x3d
1001c84c:	pop    ecx
1001c84d:	je     0x1001c87e
1001c84f:	push   0x1
1001c851:	push   ebp
1001c852:	call   0x10018775
1001c857:	cmp    eax,ebx
1001c859:	pop    ecx
1001c85a:	pop    ecx
1001c85b:	mov    DWORD PTR [edi],eax
1001c85d:	je     0x1001c8a9
1001c85f:	push   esi
1001c860:	push   ebp
1001c861:	push   eax
1001c862:	call   0x1001a2d8
1001c867:	add    esp,0xc
1001c86a:	test   eax,eax
1001c86c:	je     0x1001c87b
1001c86e:	push   ebx
1001c86f:	push   ebx
1001c870:	push   ebx
1001c871:	push   ebx
1001c872:	push   ebx
1001c873:	call   0x10016073
1001c878:	add    esp,0x14
1001c87b:	add    edi,0x4
1001c87e:	add    esi,ebp
1001c880:	cmp    BYTE PTR [esi],bl
1001c882:	jne    0x1001c840
1001c884:	push   DWORD PTR ds:0x10096e38
1001c88a:	call   0x10016b85
1001c88f:	mov    DWORD PTR ds:0x10096e38,ebx
1001c895:	mov    DWORD PTR [edi],ebx
1001c897:	mov    DWORD PTR ds:0x10098c08,0x1
1001c8a1:	xor    eax,eax
1001c8a3:	pop    ecx
1001c8a4:	pop    ebp
1001c8a5:	pop    edi
1001c8a6:	pop    esi
1001c8a7:	pop    ebx
1001c8a8:	ret    
1001c8a9:	push   DWORD PTR ds:0x100971b4
1001c8af:	call   0x10016b85
1001c8b4:	mov    DWORD PTR ds:0x100971b4,ebx
1001c8ba:	or     eax,0xffffffff
1001c8bd:	jmp    0x1001c8a3
1001c8bf:	push   ebp
1001c8c0:	mov    ebp,esp
1001c8c2:	push   ecx
1001c8c3:	mov    ecx,DWORD PTR [ebp+0x10]
1001c8c6:	push   ebx
1001c8c7:	xor    eax,eax
1001c8c9:	cmp    DWORD PTR [ebp+0x8],eax
1001c8cc:	push   esi
1001c8cd:	mov    DWORD PTR [edi],eax
1001c8cf:	mov    esi,edx
1001c8d1:	mov    edx,DWORD PTR [ebp+0xc]
1001c8d4:	mov    DWORD PTR [ecx],0x1
1001c8da:	je     0x1001c8e5
1001c8dc:	mov    ebx,DWORD PTR [ebp+0x8]
1001c8df:	add    DWORD PTR [ebp+0x8],0x4
1001c8e3:	mov    DWORD PTR [ebx],edx
1001c8e5:	mov    DWORD PTR [ebp-0x4],eax
1001c8e8:	cmp    BYTE PTR [esi],0x22
1001c8eb:	jne    0x1001c8fd
1001c8ed:	xor    eax,eax
1001c8ef:	cmp    DWORD PTR [ebp-0x4],eax
1001c8f2:	mov    bl,0x22
1001c8f4:	sete   al
1001c8f7:	inc    esi
1001c8f8:	mov    DWORD PTR [ebp-0x4],eax
1001c8fb:	jmp    0x1001c939
1001c8fd:	inc    DWORD PTR [edi]
1001c8ff:	test   edx,edx
1001c901:	je     0x1001c90b
1001c903:	mov    al,BYTE PTR [esi]
1001c905:	mov    BYTE PTR [edx],al
1001c907:	inc    edx
1001c908:	mov    DWORD PTR [ebp+0xc],edx
1001c90b:	mov    bl,BYTE PTR [esi]
1001c90d:	movzx  eax,bl
1001c910:	push   eax
1001c911:	inc    esi
1001c912:	call   0x1002020e
1001c917:	test   eax,eax
1001c919:	pop    ecx
1001c91a:	je     0x1001c92f
1001c91c:	inc    DWORD PTR [edi]
1001c91e:	cmp    DWORD PTR [ebp+0xc],0x0
1001c922:	je     0x1001c92e
1001c924:	mov    ecx,DWORD PTR [ebp+0xc]
1001c927:	mov    al,BYTE PTR [esi]
1001c929:	inc    DWORD PTR [ebp+0xc]
1001c92c:	mov    BYTE PTR [ecx],al
1001c92e:	inc    esi
1001c92f:	test   bl,bl
1001c931:	mov    edx,DWORD PTR [ebp+0xc]
1001c934:	mov    ecx,DWORD PTR [ebp+0x10]
1001c937:	je     0x1001c96b
1001c939:	cmp    DWORD PTR [ebp-0x4],0x0
1001c93d:	jne    0x1001c8e8
1001c93f:	cmp    bl,0x20
1001c942:	je     0x1001c949
1001c944:	cmp    bl,0x9
1001c947:	jne    0x1001c8e8
1001c949:	test   edx,edx
1001c94b:	je     0x1001c951
1001c94d:	mov    BYTE PTR [edx-0x1],0x0
1001c951:	and    DWORD PTR [ebp-0x4],0x0
1001c955:	cmp    BYTE PTR [esi],0x0
1001c958:	je     0x1001ca47
1001c95e:	mov    al,BYTE PTR [esi]
1001c960:	cmp    al,0x20
1001c962:	je     0x1001c968
1001c964:	cmp    al,0x9
1001c966:	jne    0x1001c96e
1001c968:	inc    esi
1001c969:	jmp    0x1001c95e
1001c96b:	dec    esi
1001c96c:	jmp    0x1001c951
1001c96e:	cmp    BYTE PTR [esi],0x0
1001c971:	je     0x1001ca47
1001c977:	cmp    DWORD PTR [ebp+0x8],0x0
1001c97b:	je     0x1001c986
1001c97d:	mov    eax,DWORD PTR [ebp+0x8]
1001c980:	add    DWORD PTR [ebp+0x8],0x4
1001c984:	mov    DWORD PTR [eax],edx
1001c986:	inc    DWORD PTR [ecx]
1001c988:	xor    ebx,ebx
1001c98a:	inc    ebx
1001c98b:	xor    ecx,ecx
1001c98d:	jmp    0x1001c991
1001c98f:	inc    esi
1001c990:	inc    ecx
1001c991:	cmp    BYTE PTR [esi],0x5c
1001c994:	je     0x1001c98f
1001c996:	cmp    BYTE PTR [esi],0x22
1001c999:	jne    0x1001c9c1
1001c99b:	test   cl,0x1
1001c99e:	jne    0x1001c9bf
1001c9a0:	cmp    DWORD PTR [ebp-0x4],0x0
1001c9a4:	je     0x1001c9b2
1001c9a6:	lea    eax,[esi+0x1]
1001c9a9:	cmp    BYTE PTR [eax],0x22
1001c9ac:	jne    0x1001c9b2
1001c9ae:	mov    esi,eax
1001c9b0:	jmp    0x1001c9bf
1001c9b2:	xor    eax,eax
1001c9b4:	xor    ebx,ebx
1001c9b6:	cmp    DWORD PTR [ebp-0x4],eax
1001c9b9:	sete   al
1001c9bc:	mov    DWORD PTR [ebp-0x4],eax
1001c9bf:	shr    ecx,1
1001c9c1:	test   ecx,ecx
1001c9c3:	je     0x1001c9d7
1001c9c5:	dec    ecx
1001c9c6:	test   edx,edx
1001c9c8:	je     0x1001c9ce
1001c9ca:	mov    BYTE PTR [edx],0x5c
1001c9cd:	inc    edx
1001c9ce:	inc    DWORD PTR [edi]
1001c9d0:	test   ecx,ecx
1001c9d2:	jne    0x1001c9c5
1001c9d4:	mov    DWORD PTR [ebp+0xc],edx
1001c9d7:	mov    al,BYTE PTR [esi]
1001c9d9:	test   al,al
1001c9db:	je     0x1001ca32
1001c9dd:	cmp    DWORD PTR [ebp-0x4],0x0
1001c9e1:	jne    0x1001c9eb
1001c9e3:	cmp    al,0x20
1001c9e5:	je     0x1001ca32
1001c9e7:	cmp    al,0x9
1001c9e9:	je     0x1001ca32
1001c9eb:	test   ebx,ebx
1001c9ed:	je     0x1001ca2c
1001c9ef:	test   edx,edx
1001c9f1:	movsx  eax,al
1001c9f4:	push   eax
1001c9f5:	je     0x1001ca1a
1001c9f7:	call   0x1002020e
1001c9fc:	test   eax,eax
1001c9fe:	pop    ecx
1001c9ff:	je     0x1001ca0e
1001ca01:	mov    al,BYTE PTR [esi]
1001ca03:	mov    ecx,DWORD PTR [ebp+0xc]
1001ca06:	inc    DWORD PTR [ebp+0xc]
1001ca09:	mov    BYTE PTR [ecx],al
1001ca0b:	inc    esi
1001ca0c:	inc    DWORD PTR [edi]
1001ca0e:	mov    ecx,DWORD PTR [ebp+0xc]
1001ca11:	mov    al,BYTE PTR [esi]
1001ca13:	inc    DWORD PTR [ebp+0xc]
1001ca16:	mov    BYTE PTR [ecx],al
1001ca18:	jmp    0x1001ca27
1001ca1a:	call   0x1002020e
1001ca1f:	test   eax,eax
1001ca21:	pop    ecx
1001ca22:	je     0x1001ca27
1001ca24:	inc    esi
1001ca25:	inc    DWORD PTR [edi]
1001ca27:	inc    DWORD PTR [edi]
1001ca29:	mov    edx,DWORD PTR [ebp+0xc]
1001ca2c:	inc    esi
1001ca2d:	jmp    0x1001c988
1001ca32:	test   edx,edx
1001ca34:	je     0x1001ca3d
1001ca36:	mov    BYTE PTR [edx],0x0
1001ca39:	inc    edx
1001ca3a:	mov    DWORD PTR [ebp+0xc],edx
1001ca3d:	inc    DWORD PTR [edi]
1001ca3f:	mov    ecx,DWORD PTR [ebp+0x10]
1001ca42:	jmp    0x1001c955
1001ca47:	mov    eax,DWORD PTR [ebp+0x8]
1001ca4a:	test   eax,eax
1001ca4c:	pop    esi
1001ca4d:	pop    ebx
1001ca4e:	je     0x1001ca53
1001ca50:	and    DWORD PTR [eax],0x0
1001ca53:	inc    DWORD PTR [ecx]
1001ca55:	leave  
1001ca56:	ret    
1001ca57:	push   ebp
1001ca58:	mov    ebp,esp
1001ca5a:	sub    esp,0xc
1001ca5d:	push   ebx
1001ca5e:	xor    ebx,ebx
1001ca60:	cmp    DWORD PTR ds:0x10098c14,ebx
1001ca66:	push   esi
1001ca67:	push   edi
1001ca68:	jne    0x1001ca6f
1001ca6a:	call   0x1001b367
1001ca6f:	push   0x104
1001ca74:	mov    esi,0x10097698
1001ca79:	push   esi
1001ca7a:	push   ebx
1001ca7b:	mov    BYTE PTR ds:0x1009779c,bl
1001ca81:	call   DWORD PTR ds:0x100341ac
1001ca87:	mov    eax,ds:0x10098c1c
1001ca8c:	cmp    eax,ebx
1001ca8e:	mov    DWORD PTR ds:0x100971c4,esi
1001ca94:	je     0x1001ca9d
1001ca96:	cmp    BYTE PTR [eax],bl
1001ca98:	mov    DWORD PTR [ebp-0x4],eax
1001ca9b:	jne    0x1001caa0
1001ca9d:	mov    DWORD PTR [ebp-0x4],esi
1001caa0:	mov    edx,DWORD PTR [ebp-0x4]
1001caa3:	lea    eax,[ebp-0x8]
1001caa6:	push   eax
1001caa7:	push   ebx
1001caa8:	push   ebx
1001caa9:	lea    edi,[ebp-0xc]
1001caac:	call   0x1001c8bf
1001cab1:	mov    eax,DWORD PTR [ebp-0x8]
1001cab4:	add    esp,0xc
1001cab7:	cmp    eax,0x3fffffff
1001cabc:	jae    0x1001cb08
1001cabe:	mov    ecx,DWORD PTR [ebp-0xc]
1001cac1:	cmp    ecx,0xffffffff
1001cac4:	jae    0x1001cb08
1001cac6:	mov    edi,eax
1001cac8:	shl    edi,0x2
1001cacb:	lea    eax,[edi+ecx*1]
1001cace:	cmp    eax,ecx
1001cad0:	jb     0x1001cb08
1001cad2:	push   eax
1001cad3:	call   0x10018735
1001cad8:	mov    esi,eax
1001cada:	cmp    esi,ebx
1001cadc:	pop    ecx
1001cadd:	je     0x1001cb08
1001cadf:	mov    edx,DWORD PTR [ebp-0x4]
1001cae2:	lea    eax,[ebp-0x8]
1001cae5:	push   eax
1001cae6:	add    edi,esi
1001cae8:	push   edi
1001cae9:	push   esi
1001caea:	lea    edi,[ebp-0xc]
1001caed:	call   0x1001c8bf
1001caf2:	mov    eax,DWORD PTR [ebp-0x8]
1001caf5:	add    esp,0xc
1001caf8:	dec    eax
1001caf9:	mov    ds:0x100971a8,eax
1001cafe:	mov    DWORD PTR ds:0x100971ac,esi
1001cb04:	xor    eax,eax
1001cb06:	jmp    0x1001cb0b
1001cb08:	or     eax,0xffffffff
1001cb0b:	pop    edi
1001cb0c:	pop    esi
1001cb0d:	pop    ebx
1001cb0e:	leave  
1001cb0f:	ret    
1001cb10:	push   ecx
1001cb11:	push   ecx
1001cb12:	mov    eax,ds:0x100977a0
1001cb17:	push   ebx
1001cb18:	push   ebp
1001cb19:	push   esi
1001cb1a:	push   edi
1001cb1b:	mov    edi,DWORD PTR ds:0x10034158
1001cb21:	xor    ebx,ebx
1001cb23:	xor    esi,esi
1001cb25:	cmp    eax,ebx
1001cb27:	push   0x2
1001cb29:	pop    ebp
1001cb2a:	jne    0x1001cb59
1001cb2c:	call   edi
1001cb2e:	mov    esi,eax
1001cb30:	cmp    esi,ebx
1001cb32:	je     0x1001cb40
1001cb34:	mov    DWORD PTR ds:0x100977a0,0x1
1001cb3e:	jmp    0x1001cb62
1001cb40:	call   DWORD PTR ds:0x1003407c
1001cb46:	cmp    eax,0x78
1001cb49:	jne    0x1001cb54
1001cb4b:	mov    eax,ebp
1001cb4d:	mov    ds:0x100977a0,eax
1001cb52:	jmp    0x1001cb59
1001cb54:	mov    eax,ds:0x100977a0
1001cb59:	cmp    eax,0x1
1001cb5c:	jne    0x1001cbe6
1001cb62:	cmp    esi,ebx
1001cb64:	jne    0x1001cb75
1001cb66:	call   edi
1001cb68:	mov    esi,eax
1001cb6a:	cmp    esi,ebx
1001cb6c:	jne    0x1001cb75
1001cb6e:	xor    eax,eax
1001cb70:	jmp    0x1001cc3e
1001cb75:	cmp    WORD PTR [esi],bx
1001cb78:	mov    eax,esi
1001cb7a:	je     0x1001cb8a
1001cb7c:	add    eax,ebp
1001cb7e:	cmp    WORD PTR [eax],bx
1001cb81:	jne    0x1001cb7c
1001cb83:	add    eax,ebp
1001cb85:	cmp    WORD PTR [eax],bx
1001cb88:	jne    0x1001cb7c
1001cb8a:	mov    edi,DWORD PTR ds:0x1003402c
1001cb90:	push   ebx
1001cb91:	push   ebx
1001cb92:	push   ebx
1001cb93:	sub    eax,esi
1001cb95:	push   ebx
1001cb96:	sar    eax,1
1001cb98:	inc    eax
1001cb99:	push   eax
1001cb9a:	push   esi
1001cb9b:	push   ebx
1001cb9c:	push   ebx
1001cb9d:	mov    DWORD PTR [esp+0x34],eax
1001cba1:	call   edi
1001cba3:	mov    ebp,eax
1001cba5:	cmp    ebp,ebx
1001cba7:	je     0x1001cbdb
1001cba9:	push   ebp
1001cbaa:	call   0x10018735
1001cbaf:	cmp    eax,ebx
1001cbb1:	pop    ecx
1001cbb2:	mov    DWORD PTR [esp+0x10],eax
1001cbb6:	je     0x1001cbdb
1001cbb8:	push   ebx
1001cbb9:	push   ebx
1001cbba:	push   ebp
1001cbbb:	push   eax
1001cbbc:	push   DWORD PTR [esp+0x24]
1001cbc0:	push   esi
1001cbc1:	push   ebx
1001cbc2:	push   ebx
1001cbc3:	call   edi
1001cbc5:	test   eax,eax
1001cbc7:	jne    0x1001cbd7
1001cbc9:	push   DWORD PTR [esp+0x10]
1001cbcd:	call   0x10016b85
1001cbd2:	pop    ecx
1001cbd3:	mov    DWORD PTR [esp+0x10],ebx
1001cbd7:	mov    ebx,DWORD PTR [esp+0x10]
1001cbdb:	push   esi
1001cbdc:	call   DWORD PTR ds:0x10034180
1001cbe2:	mov    eax,ebx
1001cbe4:	jmp    0x1001cc3e
1001cbe6:	cmp    eax,ebp
1001cbe8:	je     0x1001cbee
1001cbea:	cmp    eax,ebx
1001cbec:	jne    0x1001cb6e
1001cbee:	call   DWORD PTR ds:0x10034184
1001cbf4:	mov    esi,eax
1001cbf6:	cmp    esi,ebx
1001cbf8:	je     0x1001cb6e
1001cbfe:	cmp    BYTE PTR [esi],bl
1001cc00:	je     0x1001cc0c
1001cc02:	inc    eax
1001cc03:	cmp    BYTE PTR [eax],bl
1001cc05:	jne    0x1001cc02
1001cc07:	inc    eax
1001cc08:	cmp    BYTE PTR [eax],bl
1001cc0a:	jne    0x1001cc02
1001cc0c:	sub    eax,esi
1001cc0e:	inc    eax
1001cc0f:	mov    ebp,eax
1001cc11:	push   ebp
1001cc12:	call   0x10018735
1001cc17:	mov    edi,eax
1001cc19:	cmp    edi,ebx
1001cc1b:	pop    ecx
1001cc1c:	jne    0x1001cc2a
1001cc1e:	push   esi
1001cc1f:	call   DWORD PTR ds:0x100341b8
1001cc25:	jmp    0x1001cb6e
1001cc2a:	push   ebp
1001cc2b:	push   esi
1001cc2c:	push   edi
1001cc2d:	call   0x10016820
1001cc32:	add    esp,0xc
1001cc35:	push   esi
1001cc36:	call   DWORD PTR ds:0x100341b8
1001cc3c:	mov    eax,edi
1001cc3e:	pop    edi
1001cc3f:	pop    esi
1001cc40:	pop    ebp
1001cc41:	pop    ebx
1001cc42:	pop    ecx
1001cc43:	pop    ecx
1001cc44:	ret    
1001cc45:	push   esi
1001cc46:	push   edi
1001cc47:	mov    eax,0x10084b60
1001cc4c:	mov    edi,0x10084b60
1001cc51:	cmp    eax,edi
1001cc53:	mov    esi,eax
1001cc55:	jae    0x1001cc66
1001cc57:	mov    eax,DWORD PTR [esi]
1001cc59:	test   eax,eax
1001cc5b:	je     0x1001cc5f
1001cc5d:	call   eax
1001cc5f:	add    esi,0x4
1001cc62:	cmp    esi,edi
1001cc64:	jb     0x1001cc57
1001cc66:	pop    edi
1001cc67:	pop    esi
1001cc68:	ret    
1001cc69:	push   esi
1001cc6a:	push   edi
1001cc6b:	mov    eax,0x10084b68
1001cc70:	mov    edi,0x10084b68
1001cc75:	cmp    eax,edi
1001cc77:	mov    esi,eax
1001cc79:	jae    0x1001cc8a
1001cc7b:	mov    eax,DWORD PTR [esi]
1001cc7d:	test   eax,eax
1001cc7f:	je     0x1001cc83
1001cc81:	call   eax
1001cc83:	add    esi,0x4
1001cc86:	cmp    esi,edi
1001cc88:	jb     0x1001cc7b
1001cc8a:	pop    edi
1001cc8b:	pop    esi
1001cc8c:	ret    
1001cc8d:	push   ebp
1001cc8e:	mov    ebp,esp
1001cc90:	push   ecx
1001cc91:	push   ecx
1001cc92:	push   esi
1001cc93:	call   0x1001992f
1001cc98:	mov    esi,eax
1001cc9a:	test   esi,esi
1001cc9c:	je     0x1001cde8
1001cca2:	mov    edx,DWORD PTR [esi+0x5c]
1001cca5:	mov    eax,ds:0x10095dbc
1001ccaa:	push   edi
1001ccab:	mov    edi,DWORD PTR [ebp+0x8]
1001ccae:	mov    ecx,edx
1001ccb0:	push   ebx
1001ccb1:	cmp    DWORD PTR [ecx],edi
1001ccb3:	je     0x1001ccc3
1001ccb5:	mov    ebx,eax
1001ccb7:	imul   ebx,ebx,0xc
1001ccba:	add    ecx,0xc
1001ccbd:	add    ebx,edx
1001ccbf:	cmp    ecx,ebx
1001ccc1:	jb     0x1001ccb1
1001ccc3:	imul   eax,eax,0xc
1001ccc6:	add    eax,edx
1001ccc8:	cmp    ecx,eax
1001ccca:	jae    0x1001ccd4
1001cccc:	cmp    DWORD PTR [ecx],edi
1001ccce:	jne    0x1001ccd4
1001ccd0:	mov    eax,ecx
1001ccd2:	jmp    0x1001ccd6
1001ccd4:	xor    eax,eax
1001ccd6:	test   eax,eax
1001ccd8:	je     0x1001cce4
1001ccda:	mov    ebx,DWORD PTR [eax+0x8]
1001ccdd:	test   ebx,ebx
1001ccdf:	mov    DWORD PTR [ebp-0x4],ebx
1001cce2:	jne    0x1001cceb
1001cce4:	xor    eax,eax
1001cce6:	jmp    0x1001cde6
1001cceb:	cmp    ebx,0x5
1001ccee:	jne    0x1001ccfc
1001ccf0:	and    DWORD PTR [eax+0x8],0x0
1001ccf4:	xor    eax,eax
1001ccf6:	inc    eax
1001ccf7:	jmp    0x1001cde6
1001ccfc:	cmp    ebx,0x1
1001ccff:	je     0x1001cde3
1001cd05:	mov    ecx,DWORD PTR [esi+0x60]
1001cd08:	mov    DWORD PTR [ebp-0x8],ecx
1001cd0b:	mov    ecx,DWORD PTR [ebp+0xc]
1001cd0e:	mov    DWORD PTR [esi+0x60],ecx
1001cd11:	mov    ecx,DWORD PTR [eax+0x4]
1001cd14:	cmp    ecx,0x8
1001cd17:	jne    0x1001cdd5
1001cd1d:	mov    ecx,DWORD PTR ds:0x10095db0
1001cd23:	mov    edi,DWORD PTR ds:0x10095db4
1001cd29:	mov    edx,ecx
1001cd2b:	add    edi,ecx
1001cd2d:	cmp    edx,edi
1001cd2f:	jge    0x1001cd55
1001cd31:	imul   ecx,ecx,0xc
1001cd34:	mov    edi,DWORD PTR [esi+0x5c]
1001cd37:	and    DWORD PTR [ecx+edi*1+0x8],0x0
1001cd3c:	mov    edi,DWORD PTR ds:0x10095db0
1001cd42:	mov    ebx,DWORD PTR ds:0x10095db4
1001cd48:	inc    edx
1001cd49:	add    ebx,edi
1001cd4b:	add    ecx,0xc
1001cd4e:	cmp    edx,ebx
1001cd50:	jl     0x1001cd34
1001cd52:	mov    ebx,DWORD PTR [ebp-0x4]
1001cd55:	mov    eax,DWORD PTR [eax]
1001cd57:	cmp    eax,0xc000008e
1001cd5c:	mov    edi,DWORD PTR [esi+0x64]
1001cd5f:	jne    0x1001cd6a
1001cd61:	mov    DWORD PTR [esi+0x64],0x83
1001cd68:	jmp    0x1001cdc8
1001cd6a:	cmp    eax,0xc0000090
1001cd6f:	jne    0x1001cd7a
1001cd71:	mov    DWORD PTR [esi+0x64],0x81
1001cd78:	jmp    0x1001cdc8
1001cd7a:	cmp    eax,0xc0000091
1001cd7f:	jne    0x1001cd8a
1001cd81:	mov    DWORD PTR [esi+0x64],0x84
1001cd88:	jmp    0x1001cdc8
1001cd8a:	cmp    eax,0xc0000093
1001cd8f:	jne    0x1001cd9a
1001cd91:	mov    DWORD PTR [esi+0x64],0x85
1001cd98:	jmp    0x1001cdc8
1001cd9a:	cmp    eax,0xc000008d
1001cd9f:	jne    0x1001cdaa
1001cda1:	mov    DWORD PTR [esi+0x64],0x82
1001cda8:	jmp    0x1001cdc8
1001cdaa:	cmp    eax,0xc000008f
1001cdaf:	jne    0x1001cdba
1001cdb1:	mov    DWORD PTR [esi+0x64],0x86
1001cdb8:	jmp    0x1001cdc8
1001cdba:	cmp    eax,0xc0000092
1001cdbf:	jne    0x1001cdc8
1001cdc1:	mov    DWORD PTR [esi+0x64],0x8a
1001cdc8:	push   DWORD PTR [esi+0x64]
1001cdcb:	push   0x8
1001cdcd:	call   ebx
1001cdcf:	pop    ecx
1001cdd0:	mov    DWORD PTR [esi+0x64],edi
1001cdd3:	jmp    0x1001cddc
1001cdd5:	and    DWORD PTR [eax+0x8],0x0
1001cdd9:	push   ecx
1001cdda:	call   ebx
1001cddc:	mov    eax,DWORD PTR [ebp-0x8]
1001cddf:	pop    ecx
1001cde0:	mov    DWORD PTR [esi+0x60],eax
1001cde3:	or     eax,0xffffffff
1001cde6:	pop    ebx
1001cde7:	pop    edi
1001cde8:	pop    esi
1001cde9:	leave  
1001cdea:	ret    
1001cdeb:	mov    eax,0xe06d7363
1001cdf0:	cmp    DWORD PTR [esp+0x4],eax
1001cdf4:	jne    0x1001ce03
1001cdf6:	push   DWORD PTR [esp+0x8]
1001cdfa:	push   eax
1001cdfb:	call   0x1001cc8d
1001ce00:	pop    ecx
1001ce01:	pop    ecx
1001ce02:	ret    
1001ce03:	xor    eax,eax
1001ce05:	ret    
1001ce06:	push   ebp
1001ce07:	mov    ebp,esp
1001ce09:	sub    esp,0x10
1001ce0c:	mov    eax,ds:0x100951fc
1001ce11:	and    DWORD PTR [ebp-0x8],0x0
1001ce15:	and    DWORD PTR [ebp-0x4],0x0
1001ce19:	push   ebx
1001ce1a:	push   edi
1001ce1b:	mov    edi,0xbb40e64e
1001ce20:	cmp    eax,edi
1001ce22:	mov    ebx,0xffff0000
1001ce27:	je     0x1001ce36
1001ce29:	test   ebx,eax
1001ce2b:	je     0x1001ce36
1001ce2d:	not    eax
1001ce2f:	mov    ds:0x10095200,eax
1001ce34:	jmp    0x1001ce96
1001ce36:	push   esi
1001ce37:	lea    eax,[ebp-0x8]
1001ce3a:	push   eax
1001ce3b:	call   DWORD PTR ds:0x10034178
1001ce41:	mov    esi,DWORD PTR [ebp-0x4]
1001ce44:	xor    esi,DWORD PTR [ebp-0x8]
1001ce47:	call   DWORD PTR ds:0x100340a0
1001ce4d:	xor    esi,eax
1001ce4f:	call   DWORD PTR ds:0x10034138
1001ce55:	xor    esi,eax
1001ce57:	call   DWORD PTR ds:0x10034164
1001ce5d:	xor    esi,eax
1001ce5f:	lea    eax,[ebp-0x10]
1001ce62:	push   eax
1001ce63:	call   DWORD PTR ds:0x1003417c
1001ce69:	mov    eax,DWORD PTR [ebp-0xc]
1001ce6c:	xor    eax,DWORD PTR [ebp-0x10]
1001ce6f:	xor    esi,eax
1001ce71:	cmp    esi,edi
1001ce73:	jne    0x1001ce7c
1001ce75:	mov    esi,0xbb40e64f
1001ce7a:	jmp    0x1001ce87
1001ce7c:	test   ebx,esi
1001ce7e:	jne    0x1001ce87
1001ce80:	mov    eax,esi
1001ce82:	shl    eax,0x10
1001ce85:	or     esi,eax
1001ce87:	mov    DWORD PTR ds:0x100951fc,esi
1001ce8d:	not    esi
1001ce8f:	mov    DWORD PTR ds:0x10095200,esi
1001ce95:	pop    esi
1001ce96:	pop    edi
1001ce97:	pop    ebx
1001ce98:	leave  
1001ce99:	ret    
1001ce9a:	push   ebp
1001ce9b:	mov    ebp,esp
1001ce9d:	sub    esp,0x14
1001cea0:	cmp    WORD PTR [ebp+0x8],0xffff
1001cea6:	jne    0x1001ceae
1001cea8:	and    DWORD PTR [ebp-0x4],0x0
1001ceac:	jmp    0x1001cf10
1001ceae:	cmp    WORD PTR [ebp+0x8],0x100
1001ceb4:	jae    0x1001ced0
1001ceb6:	movzx  eax,WORD PTR [ebp+0x8]
1001ceba:	mov    ecx,DWORD PTR ds:0x10095348
1001cec0:	mov    ax,WORD PTR [ecx+eax*2]
1001cec4:	and    ax,WORD PTR [ebp+0xc]
1001cec8:	movzx  eax,ax
1001cecb:	mov    DWORD PTR [ebp-0x4],eax
1001cece:	jmp    0x1001cf10
1001ced0:	push   DWORD PTR [ebp+0x10]
1001ced3:	lea    ecx,[ebp-0x14]
1001ced6:	call   0x100165fa
1001cedb:	mov    eax,DWORD PTR [ebp-0x14]
1001cede:	push   DWORD PTR [eax+0x14]
1001cee1:	push   DWORD PTR [eax+0x4]
1001cee4:	lea    eax,[ebp-0x4]
1001cee7:	push   eax
1001cee8:	push   0x1
1001ceea:	lea    eax,[ebp+0x8]
1001ceed:	push   eax
1001ceee:	lea    eax,[ebp-0x14]
1001cef1:	push   0x1
1001cef3:	push   eax
1001cef4:	call   0x10021635
1001cef9:	add    esp,0x1c
1001cefc:	test   eax,eax
1001cefe:	jne    0x1001cf03
1001cf00:	and    DWORD PTR [ebp-0x4],eax
1001cf03:	cmp    BYTE PTR [ebp-0x8],0x0
1001cf07:	je     0x1001cf10
1001cf09:	mov    eax,DWORD PTR [ebp-0xc]
1001cf0c:	and    DWORD PTR [eax+0x70],0xfffffffd
1001cf10:	movzx  eax,WORD PTR [ebp-0x4]
1001cf14:	movzx  ecx,WORD PTR [ebp+0xc]
1001cf18:	and    eax,ecx
1001cf1a:	leave  
1001cf1b:	ret    
1001cf1c:	push   ebp
1001cf1d:	mov    ebp,esp
1001cf1f:	push   ecx
1001cf20:	cmp    WORD PTR [ebp+0x8],0xffff
1001cf26:	jne    0x1001cf2c
1001cf28:	xor    eax,eax
1001cf2a:	leave  
1001cf2b:	ret    
1001cf2c:	cmp    WORD PTR [ebp+0x8],0x100
1001cf32:	jae    0x1001cf4a
1001cf34:	movzx  eax,WORD PTR [ebp+0x8]
1001cf38:	mov    ecx,DWORD PTR ds:0x10095348
1001cf3e:	movzx  eax,WORD PTR [ecx+eax*2]
1001cf42:	movzx  ecx,WORD PTR [ebp+0xc]
1001cf46:	and    eax,ecx
1001cf48:	leave  
1001cf49:	ret    
1001cf4a:	cmp    DWORD PTR ds:0x10096e48,0x0
1001cf51:	jne    0x1001cf78
1001cf53:	push   DWORD PTR ds:0x10095a44
1001cf59:	lea    eax,[ebp-0x4]
1001cf5c:	push   DWORD PTR ds:0x10095a34
1001cf62:	push   eax
1001cf63:	push   0x1
1001cf65:	lea    eax,[ebp+0x8]
1001cf68:	push   eax
1001cf69:	push   0x1
1001cf6b:	push   0x10095b10
1001cf70:	call   0x10021635
1001cf75:	add    esp,0x1c
1001cf78:	push   0x0
1001cf7a:	push   DWORD PTR [ebp+0xc]
1001cf7d:	push   DWORD PTR [ebp+0x8]
1001cf80:	call   0x1001ce9a
1001cf85:	add    esp,0xc
1001cf88:	leave  
1001cf89:	ret    
1001cf8a:	push   ebp
1001cf8b:	mov    ebp,esp
1001cf8d:	push   ecx
1001cf8e:	push   esi
1001cf8f:	mov    esi,DWORD PTR [ebp+0xc]
1001cf92:	push   esi
1001cf93:	call   0x1001ea9b
1001cf98:	mov    DWORD PTR [ebp+0xc],eax
1001cf9b:	mov    eax,DWORD PTR [esi+0xc]
1001cf9e:	test   al,0x82
1001cfa0:	pop    ecx
1001cfa1:	jne    0x1001cfba
1001cfa3:	call   0x1001a18e
1001cfa8:	mov    DWORD PTR [eax],0x9
1001cfae:	or     DWORD PTR [esi+0xc],0x20
1001cfb2:	or     eax,0xffffffff
1001cfb5:	jmp    0x1001d0e7
1001cfba:	test   al,0x40
1001cfbc:	je     0x1001cfcb
1001cfbe:	call   0x1001a18e
1001cfc3:	mov    DWORD PTR [eax],0x22
1001cfc9:	jmp    0x1001cfae
1001cfcb:	push   ebx
1001cfcc:	xor    ebx,ebx
1001cfce:	test   al,0x1
1001cfd0:	je     0x1001cfe8
1001cfd2:	test   al,0x10
1001cfd4:	mov    DWORD PTR [esi+0x4],ebx
1001cfd7:	je     0x1001d062
1001cfdd:	mov    ecx,DWORD PTR [esi+0x8]
1001cfe0:	and    eax,0xfffffffe
1001cfe3:	mov    DWORD PTR [esi],ecx
1001cfe5:	mov    DWORD PTR [esi+0xc],eax
1001cfe8:	mov    eax,DWORD PTR [esi+0xc]
1001cfeb:	and    eax,0xffffffef
1001cfee:	or     eax,0x2
1001cff1:	test   ax,0x10c
1001cff5:	mov    DWORD PTR [esi+0xc],eax
1001cff8:	mov    DWORD PTR [esi+0x4],ebx
1001cffb:	mov    DWORD PTR [ebp-0x4],ebx
1001cffe:	jne    0x1001d02c
1001d000:	call   0x1001e7a5
1001d005:	add    eax,0x20
1001d008:	cmp    esi,eax
1001d00a:	je     0x1001d018
1001d00c:	call   0x1001e7a5
1001d011:	add    eax,0x40
1001d014:	cmp    esi,eax
1001d016:	jne    0x1001d025
1001d018:	push   DWORD PTR [ebp+0xc]
1001d01b:	call   0x100216b7
1001d020:	test   eax,eax
1001d022:	pop    ecx
1001d023:	jne    0x1001d02c
1001d025:	push   esi
1001d026:	call   0x10021673
1001d02b:	pop    ecx
1001d02c:	test   WORD PTR [esi+0xc],0x108
1001d032:	push   edi
1001d033:	je     0x1001d0b9
1001d039:	mov    eax,DWORD PTR [esi+0x8]
1001d03c:	mov    edi,DWORD PTR [esi]
1001d03e:	lea    ecx,[eax+0x1]
1001d041:	mov    DWORD PTR [esi],ecx
1001d043:	mov    ecx,DWORD PTR [esi+0x18]
1001d046:	sub    edi,eax
1001d048:	dec    ecx
1001d049:	cmp    edi,ebx
1001d04b:	mov    DWORD PTR [esi+0x4],ecx
1001d04e:	jle    0x1001d06d
1001d050:	push   edi
1001d051:	push   eax
1001d052:	push   DWORD PTR [ebp+0xc]
1001d055:	call   0x1001fd88
1001d05a:	add    esp,0xc
1001d05d:	mov    DWORD PTR [ebp-0x4],eax
1001d060:	jmp    0x1001d0af
1001d062:	or     eax,0x20
1001d065:	mov    DWORD PTR [esi+0xc],eax
1001d068:	or     eax,0xffffffff
1001d06b:	jmp    0x1001d0e6
1001d06d:	mov    ecx,DWORD PTR [ebp+0xc]
1001d070:	cmp    ecx,0xffffffff
1001d073:	je     0x1001d090
1001d075:	cmp    ecx,0xfffffffe
1001d078:	je     0x1001d090
1001d07a:	mov    eax,ecx
1001d07c:	and    eax,0x1f
1001d07f:	mov    edx,ecx
1001d081:	sar    edx,0x5
1001d084:	shl    eax,0x6
1001d087:	add    eax,DWORD PTR [edx*4+0x10098ae0]
1001d08e:	jmp    0x1001d095
1001d090:	mov    eax,0x10095cf8
1001d095:	test   BYTE PTR [eax+0x4],0x20
1001d099:	je     0x1001d0af
1001d09b:	push   0x2
1001d09d:	push   ebx
1001d09e:	push   ebx
1001d09f:	push   ecx
1001d0a0:	call   0x1001e43c
1001d0a5:	and    eax,edx
1001d0a7:	add    esp,0x10
1001d0aa:	cmp    eax,0xffffffff
1001d0ad:	je     0x1001d0d4
1001d0af:	mov    eax,DWORD PTR [esi+0x8]
1001d0b2:	mov    cl,BYTE PTR [ebp+0x8]
1001d0b5:	mov    BYTE PTR [eax],cl
1001d0b7:	jmp    0x1001d0cf
1001d0b9:	xor    edi,edi
1001d0bb:	inc    edi
1001d0bc:	push   edi
1001d0bd:	lea    eax,[ebp+0x8]
1001d0c0:	push   eax
1001d0c1:	push   DWORD PTR [ebp+0xc]
1001d0c4:	call   0x1001fd88
1001d0c9:	add    esp,0xc
1001d0cc:	mov    DWORD PTR [ebp-0x4],eax
1001d0cf:	cmp    DWORD PTR [ebp-0x4],edi
1001d0d2:	je     0x1001d0dd
1001d0d4:	or     DWORD PTR [esi+0xc],0x20
1001d0d8:	or     eax,0xffffffff
1001d0db:	jmp    0x1001d0e5
1001d0dd:	mov    eax,DWORD PTR [ebp+0x8]
1001d0e0:	and    eax,0xff
1001d0e5:	pop    edi
1001d0e6:	pop    ebx
1001d0e7:	pop    esi
1001d0e8:	leave  
1001d0e9:	ret    
1001d0ea:	test   BYTE PTR [edi+0xc],0x40
1001d0ee:	push   ebx
1001d0ef:	push   esi
1001d0f0:	mov    esi,eax
1001d0f2:	mov    ebx,ecx
1001d0f4:	je     0x1001d12f
1001d0f6:	cmp    DWORD PTR [edi+0x8],0x0
1001d0fa:	jne    0x1001d12f
1001d0fc:	mov    eax,DWORD PTR [esp+0xc]
1001d100:	add    DWORD PTR [esi],eax
1001d102:	jmp    0x1001d136
1001d104:	movzx  eax,WORD PTR [ebx]
1001d107:	dec    DWORD PTR [esp+0xc]
1001d10b:	push   eax
1001d10c:	mov    eax,edi
1001d10e:	call   0x1001da49
1001d113:	inc    ebx
1001d114:	inc    ebx
1001d115:	cmp    DWORD PTR [esi],0xffffffff
1001d118:	pop    ecx
1001d119:	jne    0x1001d12f
1001d11b:	call   0x1001a18e
1001d120:	cmp    DWORD PTR [eax],0x2a
1001d123:	jne    0x1001d136
1001d125:	push   0x3f
1001d127:	mov    eax,edi
1001d129:	call   0x1001da49
1001d12e:	pop    ecx
1001d12f:	cmp    DWORD PTR [esp+0xc],0x0
1001d134:	jg     0x1001d104
1001d136:	pop    esi
1001d137:	pop    ebx
1001d138:	ret    
1001d139:	push   ebp
1001d13a:	lea    ebp,[esp-0x3f4]
1001d141:	sub    esp,0x474
1001d147:	mov    eax,ds:0x100951fc
1001d14c:	xor    eax,ebp
1001d14e:	mov    DWORD PTR [ebp+0x3f0],eax
1001d154:	mov    eax,DWORD PTR [ebp+0x3fc]
1001d15a:	push   ebx
1001d15b:	mov    ebx,DWORD PTR [ebp+0x408]
1001d161:	push   esi
1001d162:	mov    esi,DWORD PTR [ebp+0x400]
1001d168:	push   edi
1001d169:	push   DWORD PTR [ebp+0x404]
1001d16f:	xor    edi,edi
1001d171:	lea    ecx,[ebp-0x64]
1001d174:	mov    DWORD PTR [ebp-0x3c],eax
1001d177:	mov    DWORD PTR [ebp-0x28],ebx
1001d17a:	mov    DWORD PTR [ebp-0x54],edi
1001d17d:	mov    DWORD PTR [ebp-0x14],edi
1001d180:	mov    DWORD PTR [ebp-0x38],edi
1001d183:	mov    DWORD PTR [ebp-0x18],edi
1001d186:	mov    DWORD PTR [ebp-0x30],edi
1001d189:	mov    DWORD PTR [ebp-0x48],edi
1001d18c:	mov    DWORD PTR [ebp-0x34],edi
1001d18f:	call   0x100165fa
1001d194:	cmp    DWORD PTR [ebp-0x3c],edi
1001d197:	jne    0x1001d1c6
1001d199:	call   0x1001a18e
1001d19e:	push   edi
1001d19f:	push   edi
1001d1a0:	push   edi
1001d1a1:	push   edi
1001d1a2:	mov    DWORD PTR [eax],0x16
1001d1a8:	push   edi
1001d1a9:	call   0x1001616f
1001d1ae:	add    esp,0x14
1001d1b1:	cmp    BYTE PTR [ebp-0x58],0x0
1001d1b5:	je     0x1001d1be
1001d1b7:	mov    eax,DWORD PTR [ebp-0x5c]
1001d1ba:	and    DWORD PTR [eax+0x70],0xfffffffd
1001d1be:	or     eax,0xffffffff
1001d1c1:	jmp    0x1001da11
1001d1c6:	cmp    esi,edi
1001d1c8:	je     0x1001d199
1001d1ca:	movzx  edx,WORD PTR [esi]
1001d1cd:	xor    ecx,ecx
1001d1cf:	cmp    dx,di
1001d1d2:	mov    DWORD PTR [ebp-0x2c],edi
1001d1d5:	mov    DWORD PTR [ebp-0x20],edi
1001d1d8:	mov    DWORD PTR [ebp-0x50],edi
1001d1db:	mov    DWORD PTR [ebp-0x24],edx
1001d1de:	je     0x1001da01
1001d1e4:	push   0x2
1001d1e6:	pop    edi
1001d1e7:	add    esi,edi
1001d1e9:	cmp    DWORD PTR [ebp-0x2c],0x0
1001d1ed:	mov    DWORD PTR [ebp-0x4c],esi
1001d1f0:	jl     0x1001da01
1001d1f6:	lea    eax,[edx-0x20]
1001d1f9:	cmp    ax,0x58
1001d1fd:	ja     0x1001d20e
1001d1ff:	movzx  eax,dx
1001d202:	movzx  eax,BYTE PTR [eax+0x1007e530]
1001d209:	and    eax,0xf
1001d20c:	jmp    0x1001d210
1001d20e:	xor    eax,eax
1001d210:	movsx  eax,BYTE PTR [ecx+eax*8+0x1007e550]
1001d218:	push   0x7
1001d21a:	sar    eax,0x4
1001d21d:	pop    ecx
1001d21e:	cmp    eax,ecx
1001d220:	mov    DWORD PTR [ebp-0x68],eax
1001d223:	ja     0x1001d9cf
1001d229:	jmp    DWORD PTR [eax*4+0x1001da29]
1001d230:	xor    eax,eax
1001d232:	or     DWORD PTR [ebp-0x18],0xffffffff
1001d236:	mov    DWORD PTR [ebp-0x6c],eax
1001d239:	mov    DWORD PTR [ebp-0x48],eax
1001d23c:	mov    DWORD PTR [ebp-0x38],eax
1001d23f:	mov    DWORD PTR [ebp-0x30],eax
1001d242:	mov    DWORD PTR [ebp-0x14],eax
1001d245:	mov    DWORD PTR [ebp-0x34],eax
1001d248:	jmp    0x1001d9cf
1001d24d:	movzx  eax,dx
1001d250:	sub    eax,0x20
1001d253:	je     0x1001d293
1001d255:	sub    eax,0x3
1001d258:	je     0x1001d287
1001d25a:	sub    eax,0x8
1001d25d:	je     0x1001d27e
1001d25f:	sub    eax,edi
1001d261:	je     0x1001d275
1001d263:	sub    eax,0x3
1001d266:	jne    0x1001d9cf
1001d26c:	or     DWORD PTR [ebp-0x14],0x8
1001d270:	jmp    0x1001d9cf
1001d275:	or     DWORD PTR [ebp-0x14],0x4
1001d279:	jmp    0x1001d9cf
1001d27e:	or     DWORD PTR [ebp-0x14],0x1
1001d282:	jmp    0x1001d9cf
1001d287:	or     DWORD PTR [ebp-0x14],0x80
1001d28e:	jmp    0x1001d9cf
1001d293:	or     DWORD PTR [ebp-0x14],edi
1001d296:	jmp    0x1001d9cf
1001d29b:	cmp    dx,0x2a
1001d29f:	jne    0x1001d2c1
1001d2a1:	add    ebx,0x4
1001d2a4:	mov    DWORD PTR [ebp-0x28],ebx
1001d2a7:	mov    ebx,DWORD PTR [ebx-0x4]
1001d2aa:	test   ebx,ebx
1001d2ac:	mov    DWORD PTR [ebp-0x38],ebx
1001d2af:	jge    0x1001d9cf
1001d2b5:	or     DWORD PTR [ebp-0x14],0x4
1001d2b9:	neg    DWORD PTR [ebp-0x38]
1001d2bc:	jmp    0x1001d9cf
1001d2c1:	mov    eax,DWORD PTR [ebp-0x38]
1001d2c4:	imul   eax,eax,0xa
1001d2c7:	movzx  ecx,dx
1001d2ca:	lea    eax,[eax+ecx*1-0x30]
1001d2ce:	mov    DWORD PTR [ebp-0x38],eax
1001d2d1:	jmp    0x1001d9cf
1001d2d6:	and    DWORD PTR [ebp-0x18],0x0
1001d2da:	jmp    0x1001d9cf
1001d2df:	cmp    dx,0x2a
1001d2e3:	jne    0x1001d302
1001d2e5:	add    ebx,0x4
1001d2e8:	mov    DWORD PTR [ebp-0x28],ebx
1001d2eb:	mov    ebx,DWORD PTR [ebx-0x4]
1001d2ee:	test   ebx,ebx
1001d2f0:	mov    DWORD PTR [ebp-0x18],ebx
1001d2f3:	jge    0x1001d9cf
1001d2f9:	or     DWORD PTR [ebp-0x18],0xffffffff
1001d2fd:	jmp    0x1001d9cf
1001d302:	mov    eax,DWORD PTR [ebp-0x18]
1001d305:	imul   eax,eax,0xa
1001d308:	movzx  ecx,dx
1001d30b:	lea    eax,[eax+ecx*1-0x30]
1001d30f:	mov    DWORD PTR [ebp-0x18],eax
1001d312:	jmp    0x1001d9cf
1001d317:	movzx  eax,dx
1001d31a:	cmp    eax,0x49
1001d31d:	je     0x1001d367
1001d31f:	cmp    eax,0x68
1001d322:	je     0x1001d35e
1001d324:	cmp    eax,0x6c
1001d327:	je     0x1001d33e
1001d329:	cmp    eax,0x77
1001d32c:	jne    0x1001d9cf
1001d332:	or     DWORD PTR [ebp-0x14],0x800
1001d339:	jmp    0x1001d9cf
1001d33e:	cmp    WORD PTR [esi],0x6c
1001d342:	jne    0x1001d355
1001d344:	add    esi,edi
1001d346:	or     DWORD PTR [ebp-0x14],0x1000
1001d34d:	mov    DWORD PTR [ebp-0x4c],esi
1001d350:	jmp    0x1001d9cf
1001d355:	or     DWORD PTR [ebp-0x14],0x10
1001d359:	jmp    0x1001d9cf
1001d35e:	or     DWORD PTR [ebp-0x14],0x20
1001d362:	jmp    0x1001d9cf
1001d367:	movzx  eax,WORD PTR [esi]
1001d36a:	cmp    ax,0x36
1001d36e:	jne    0x1001d389
1001d370:	cmp    WORD PTR [esi+0x2],0x34
1001d375:	jne    0x1001d389
1001d377:	add    esi,0x4
1001d37a:	or     DWORD PTR [ebp-0x14],0x8000
1001d381:	mov    DWORD PTR [ebp-0x4c],esi
1001d384:	jmp    0x1001d9cf
1001d389:	cmp    ax,0x33
1001d38d:	jne    0x1001d3a8
1001d38f:	cmp    WORD PTR [esi+0x2],0x32
1001d394:	jne    0x1001d3a8
1001d396:	add    esi,0x4
1001d399:	and    DWORD PTR [ebp-0x14],0xffff7fff
1001d3a0:	mov    DWORD PTR [ebp-0x4c],esi
1001d3a3:	jmp    0x1001d9cf
1001d3a8:	cmp    ax,0x64
1001d3ac:	je     0x1001d9cf
1001d3b2:	cmp    ax,0x69
1001d3b6:	je     0x1001d9cf
1001d3bc:	cmp    ax,0x6f
1001d3c0:	je     0x1001d9cf
1001d3c6:	cmp    ax,0x75
1001d3ca:	je     0x1001d9cf
1001d3d0:	cmp    ax,0x78
1001d3d4:	je     0x1001d9cf
1001d3da:	cmp    ax,0x58
1001d3de:	je     0x1001d9cf
1001d3e4:	and    DWORD PTR [ebp-0x68],0x0
1001d3e8:	mov    eax,DWORD PTR [ebp-0x3c]
1001d3eb:	push   edx
1001d3ec:	lea    esi,[ebp-0x2c]
1001d3ef:	mov    DWORD PTR [ebp-0x34],0x1
1001d3f6:	call   0x1001da49
1001d3fb:	jmp    0x1001d9ce
1001d400:	movzx  eax,dx
1001d403:	cmp    eax,0x64
1001d406:	jg     0x1001d5b3
1001d40c:	je     0x1001d632
1001d412:	cmp    eax,0x53
1001d415:	jg     0x1001d4f2
1001d41b:	je     0x1001d47c
1001d41d:	sub    eax,0x41
1001d420:	je     0x1001d432
1001d422:	sub    eax,edi
1001d424:	je     0x1001d467
1001d426:	sub    eax,edi
1001d428:	je     0x1001d432
1001d42a:	sub    eax,edi
1001d42c:	jne    0x1001d8b3
1001d432:	add    edx,0x20
1001d435:	mov    DWORD PTR [ebp-0x6c],0x1
1001d43c:	mov    DWORD PTR [ebp-0x24],edx
1001d43f:	or     DWORD PTR [ebp-0x14],0x40
1001d443:	cmp    DWORD PTR [ebp-0x18],0x0
1001d447:	lea    esi,[ebp-0x10]
1001d44a:	mov    eax,0x200
1001d44f:	mov    DWORD PTR [ebp-0x1c],esi
1001d452:	mov    DWORD PTR [ebp-0x20],eax
1001d455:	jge    0x1001d656
1001d45b:	mov    DWORD PTR [ebp-0x18],0x6
1001d462:	jmp    0x1001d6a3
1001d467:	test   WORD PTR [ebp-0x14],0x830
1001d46d:	jne    0x1001d50f
1001d473:	or     DWORD PTR [ebp-0x14],0x20
1001d477:	jmp    0x1001d50f
1001d47c:	test   WORD PTR [ebp-0x14],0x830
1001d482:	jne    0x1001d488
1001d484:	or     DWORD PTR [ebp-0x14],0x20
1001d488:	mov    edi,DWORD PTR [ebp-0x18]
1001d48b:	cmp    edi,0xffffffff
1001d48e:	jne    0x1001d495
1001d490:	mov    edi,0x7fffffff
1001d495:	add    ebx,0x4
1001d498:	test   BYTE PTR [ebp-0x14],0x20
1001d49c:	mov    DWORD PTR [ebp-0x28],ebx
1001d49f:	mov    ebx,DWORD PTR [ebx-0x4]
1001d4a2:	mov    DWORD PTR [ebp-0x1c],ebx
1001d4a5:	je     0x1001d886
1001d4ab:	test   ebx,ebx
1001d4ad:	jne    0x1001d4b7
1001d4af:	mov    eax,ds:0x10096040
1001d4b4:	mov    DWORD PTR [ebp-0x1c],eax
1001d4b7:	and    DWORD PTR [ebp-0x20],0x0
1001d4bb:	test   edi,edi
1001d4bd:	mov    esi,DWORD PTR [ebp-0x1c]
1001d4c0:	jle    0x1001d8b3
1001d4c6:	mov    al,BYTE PTR [esi]
1001d4c8:	test   al,al
1001d4ca:	je     0x1001d8b3
1001d4d0:	lea    ecx,[ebp-0x64]
1001d4d3:	movzx  eax,al
1001d4d6:	push   ecx
1001d4d7:	push   eax
1001d4d8:	call   0x10017037
1001d4dd:	test   eax,eax
1001d4df:	pop    ecx
1001d4e0:	pop    ecx
1001d4e1:	je     0x1001d4e4
1001d4e3:	inc    esi
1001d4e4:	inc    esi
1001d4e5:	inc    DWORD PTR [ebp-0x20]
1001d4e8:	cmp    DWORD PTR [ebp-0x20],edi
1001d4eb:	jl     0x1001d4c6
1001d4ed:	jmp    0x1001d8b3
1001d4f2:	sub    eax,0x58
1001d4f5:	je     0x1001d73e
1001d4fb:	sub    eax,edi
1001d4fd:	je     0x1001d566
1001d4ff:	sub    eax,ecx
1001d501:	je     0x1001d43f
1001d507:	sub    eax,edi
1001d509:	jne    0x1001d8b3
1001d50f:	movzx  eax,WORD PTR [ebx]
1001d512:	add    ebx,0x4
1001d515:	xor    esi,esi
1001d517:	inc    esi
1001d518:	test   BYTE PTR [ebp-0x14],0x20
1001d51c:	mov    DWORD PTR [ebp-0x34],esi
1001d51f:	mov    DWORD PTR [ebp-0x28],ebx
1001d522:	mov    DWORD PTR [ebp-0x70],eax
1001d525:	je     0x1001d554
1001d527:	mov    BYTE PTR [ebp-0x40],al
1001d52a:	lea    eax,[ebp-0x64]
1001d52d:	push   eax
1001d52e:	mov    eax,DWORD PTR [ebp-0x64]
1001d531:	mov    BYTE PTR [ebp-0x3f],0x0
1001d535:	push   DWORD PTR [eax+0xac]
1001d53b:	lea    eax,[ebp-0x40]
1001d53e:	push   eax
1001d53f:	lea    eax,[ebp-0x10]
1001d542:	push   eax
1001d543:	call   0x10021909
1001d548:	add    esp,0x10
1001d54b:	test   eax,eax
1001d54d:	jge    0x1001d558
1001d54f:	mov    DWORD PTR [ebp-0x48],esi
1001d552:	jmp    0x1001d558
1001d554:	mov    WORD PTR [ebp-0x10],ax
1001d558:	lea    eax,[ebp-0x10]
1001d55b:	mov    DWORD PTR [ebp-0x1c],eax
1001d55e:	mov    DWORD PTR [ebp-0x20],esi
1001d561:	jmp    0x1001d8b3
1001d566:	mov    eax,DWORD PTR [ebx]
1001d568:	add    ebx,0x4
1001d56b:	test   eax,eax
1001d56d:	mov    DWORD PTR [ebp-0x28],ebx
1001d570:	je     0x1001d59f
1001d572:	mov    ecx,DWORD PTR [eax+0x4]
1001d575:	test   ecx,ecx
1001d577:	je     0x1001d59f
1001d579:	test   WORD PTR [ebp-0x14],0x800
1001d57f:	movsx  eax,WORD PTR [eax]
1001d582:	mov    DWORD PTR [ebp-0x1c],ecx
1001d585:	je     0x1001d596
1001d587:	cdq    
1001d588:	sub    eax,edx
1001d58a:	mov    DWORD PTR [ebp-0x34],0x1
1001d591:	jmp    0x1001d8ae
1001d596:	and    DWORD PTR [ebp-0x34],0x0
1001d59a:	jmp    0x1001d8b0
1001d59f:	mov    eax,ds:0x10096040
1001d5a4:	mov    DWORD PTR [ebp-0x1c],eax
1001d5a7:	push   eax
1001d5a8:	call   0x100163c0
1001d5ad:	pop    ecx
1001d5ae:	jmp    0x1001d8b0
1001d5b3:	cmp    eax,0x70
1001d5b6:	jg     0x1001d743
1001d5bc:	je     0x1001d737
1001d5c2:	cmp    eax,0x65
1001d5c5:	jl     0x1001d8b3
1001d5cb:	cmp    eax,0x67
1001d5ce:	jle    0x1001d43f
1001d5d4:	cmp    eax,0x69
1001d5d7:	je     0x1001d632
1001d5d9:	cmp    eax,0x6e
1001d5dc:	je     0x1001d5fd
1001d5de:	cmp    eax,0x6f
1001d5e1:	jne    0x1001d8b3
1001d5e7:	test   BYTE PTR [ebp-0x14],0x80
1001d5eb:	mov    DWORD PTR [ebp-0x24],0x8
1001d5f2:	je     0x1001d63d
1001d5f4:	or     DWORD PTR [ebp-0x14],0x200
1001d5fb:	jmp    0x1001d63d
1001d5fd:	mov    esi,DWORD PTR [ebx]
1001d5ff:	add    ebx,0x4
1001d602:	mov    DWORD PTR [ebp-0x28],ebx
1001d605:	call   0x100218f3
1001d60a:	test   eax,eax
1001d60c:	je     0x1001d9ea
1001d612:	test   BYTE PTR [ebp-0x14],0x20
1001d616:	je     0x1001d621
1001d618:	mov    ax,WORD PTR [ebp-0x2c]
1001d61c:	mov    WORD PTR [esi],ax
1001d61f:	jmp    0x1001d626
1001d621:	mov    eax,DWORD PTR [ebp-0x2c]
1001d624:	mov    DWORD PTR [esi],eax
1001d626:	mov    DWORD PTR [ebp-0x48],0x1
1001d62d:	jmp    0x1001d9bc
1001d632:	or     DWORD PTR [ebp-0x14],0x40
1001d636:	mov    DWORD PTR [ebp-0x24],0xa
1001d63d:	test   WORD PTR [ebp-0x14],0x8000
1001d643:	je     0x1001d78d
1001d649:	mov    eax,DWORD PTR [ebx]
1001d64b:	mov    edx,DWORD PTR [ebx+0x4]
1001d64e:	add    ebx,0x8
1001d651:	jmp    0x1001d7c6
1001d656:	jne    0x1001d667
1001d658:	cmp    dx,0x67
1001d65c:	jne    0x1001d6a3
1001d65e:	mov    DWORD PTR [ebp-0x18],0x1
1001d665:	jmp    0x1001d6a3
1001d667:	cmp    DWORD PTR [ebp-0x18],eax
1001d66a:	jle    0x1001d66f
1001d66c:	mov    DWORD PTR [ebp-0x18],eax
1001d66f:	cmp    DWORD PTR [ebp-0x18],0xa3
1001d676:	jle    0x1001d6a3
1001d678:	mov    edi,DWORD PTR [ebp-0x18]
1001d67b:	add    edi,0x15d
1001d681:	push   edi
1001d682:	call   0x10018735
1001d687:	test   eax,eax
1001d689:	mov    edx,DWORD PTR [ebp-0x24]
1001d68c:	pop    ecx
1001d68d:	mov    DWORD PTR [ebp-0x50],eax
1001d690:	je     0x1001d69c
1001d692:	mov    DWORD PTR [ebp-0x1c],eax
1001d695:	mov    DWORD PTR [ebp-0x20],edi
1001d698:	mov    esi,eax
1001d69a:	jmp    0x1001d6a3
1001d69c:	mov    DWORD PTR [ebp-0x18],0xa3
1001d6a3:	mov    eax,DWORD PTR [ebx]
1001d6a5:	add    ebx,0x8
1001d6a8:	mov    DWORD PTR [ebp-0x78],eax
1001d6ab:	mov    eax,DWORD PTR [ebx-0x4]
1001d6ae:	mov    DWORD PTR [ebp-0x74],eax
1001d6b1:	lea    eax,[ebp-0x64]
1001d6b4:	push   eax
1001d6b5:	push   DWORD PTR [ebp-0x6c]
1001d6b8:	movsx  eax,dl
1001d6bb:	push   DWORD PTR [ebp-0x18]
1001d6be:	mov    DWORD PTR [ebp-0x28],ebx
1001d6c1:	push   eax
1001d6c2:	push   DWORD PTR [ebp-0x20]
1001d6c5:	lea    eax,[ebp-0x78]
1001d6c8:	push   esi
1001d6c9:	push   eax
1001d6ca:	push   DWORD PTR ds:0x10096188
1001d6d0:	call   0x1001978a
1001d6d5:	pop    ecx
1001d6d6:	call   eax
1001d6d8:	mov    ebx,DWORD PTR [ebp-0x14]
1001d6db:	add    esp,0x1c
1001d6de:	and    ebx,0x80
1001d6e4:	je     0x1001d701
1001d6e6:	cmp    DWORD PTR [ebp-0x18],0x0
1001d6ea:	jne    0x1001d701
1001d6ec:	lea    eax,[ebp-0x64]
1001d6ef:	push   eax
1001d6f0:	push   esi
1001d6f1:	push   DWORD PTR ds:0x10096194
1001d6f7:	call   0x1001978a
1001d6fc:	pop    ecx
1001d6fd:	call   eax
1001d6ff:	pop    ecx
1001d700:	pop    ecx
1001d701:	cmp    WORD PTR [ebp-0x24],0x67
1001d706:	jne    0x1001d721
1001d708:	test   ebx,ebx
1001d70a:	jne    0x1001d721
1001d70c:	lea    eax,[ebp-0x64]
1001d70f:	push   eax
1001d710:	push   esi
1001d711:	push   DWORD PTR ds:0x10096190
1001d717:	call   0x1001978a
1001d71c:	pop    ecx
1001d71d:	call   eax
1001d71f:	pop    ecx
1001d720:	pop    ecx
1001d721:	cmp    BYTE PTR [esi],0x2d
1001d724:	jne    0x1001d731
1001d726:	or     DWORD PTR [ebp-0x14],0x100
1001d72d:	inc    esi
1001d72e:	mov    DWORD PTR [ebp-0x1c],esi
1001d731:	push   esi
1001d732:	jmp    0x1001d5a8
1001d737:	mov    DWORD PTR [ebp-0x18],0x8
1001d73e:	mov    DWORD PTR [ebp-0x54],ecx
1001d741:	jmp    0x1001d764
1001d743:	sub    eax,0x73
1001d746:	je     0x1001d488
1001d74c:	sub    eax,edi
1001d74e:	je     0x1001d636
1001d754:	sub    eax,0x3
1001d757:	jne    0x1001d8b3
1001d75d:	mov    DWORD PTR [ebp-0x54],0x27
1001d764:	test   BYTE PTR [ebp-0x14],0x80
1001d768:	mov    DWORD PTR [ebp-0x24],0x10
1001d76f:	je     0x1001d63d
1001d775:	mov    eax,DWORD PTR [ebp-0x54]
1001d778:	add    eax,0x51
1001d77b:	mov    WORD PTR [ebp-0x44],0x30
1001d781:	mov    WORD PTR [ebp-0x42],ax
1001d785:	mov    DWORD PTR [ebp-0x30],edi
1001d788:	jmp    0x1001d63d
1001d78d:	test   WORD PTR [ebp-0x14],0x1000
1001d793:	jne    0x1001d649
1001d799:	add    ebx,0x4
1001d79c:	test   BYTE PTR [ebp-0x14],0x20
1001d7a0:	je     0x1001d7b8
1001d7a2:	test   BYTE PTR [ebp-0x14],0x40
1001d7a6:	mov    DWORD PTR [ebp-0x28],ebx
1001d7a9:	je     0x1001d7b1
1001d7ab:	movsx  eax,WORD PTR [ebx-0x4]
1001d7af:	jmp    0x1001d7b5
1001d7b1:	movzx  eax,WORD PTR [ebx-0x4]
1001d7b5:	cdq    
1001d7b6:	jmp    0x1001d7c9
1001d7b8:	test   BYTE PTR [ebp-0x14],0x40
1001d7bc:	mov    eax,DWORD PTR [ebx-0x4]
1001d7bf:	je     0x1001d7c4
1001d7c1:	cdq    
1001d7c2:	jmp    0x1001d7c6
1001d7c4:	xor    edx,edx
1001d7c6:	mov    DWORD PTR [ebp-0x28],ebx
1001d7c9:	test   BYTE PTR [ebp-0x14],0x40
1001d7cd:	je     0x1001d7e7
1001d7cf:	test   edx,edx
1001d7d1:	jg     0x1001d7e7
1001d7d3:	jl     0x1001d7d9
1001d7d5:	test   eax,eax
1001d7d7:	jae    0x1001d7e7
1001d7d9:	neg    eax
1001d7db:	adc    edx,0x0
1001d7de:	neg    edx
1001d7e0:	or     DWORD PTR [ebp-0x14],0x100
1001d7e7:	test   WORD PTR [ebp-0x14],0x9000
1001d7ed:	mov    ebx,edx
1001d7ef:	mov    edi,eax
1001d7f1:	jne    0x1001d7f5
1001d7f3:	xor    ebx,ebx
1001d7f5:	cmp    DWORD PTR [ebp-0x18],0x0
1001d7f9:	jge    0x1001d804
1001d7fb:	mov    DWORD PTR [ebp-0x18],0x1
1001d802:	jmp    0x1001d815
1001d804:	and    DWORD PTR [ebp-0x14],0xfffffff7
1001d808:	mov    eax,0x200
1001d80d:	cmp    DWORD PTR [ebp-0x18],eax
1001d810:	jle    0x1001d815
1001d812:	mov    DWORD PTR [ebp-0x18],eax
1001d815:	mov    eax,edi
1001d817:	or     eax,ebx
1001d819:	jne    0x1001d81e
1001d81b:	and    DWORD PTR [ebp-0x30],eax
1001d81e:	lea    esi,[ebp+0x1ef]
1001d824:	mov    eax,DWORD PTR [ebp-0x18]
1001d827:	dec    DWORD PTR [ebp-0x18]
1001d82a:	test   eax,eax
1001d82c:	jg     0x1001d834
1001d82e:	mov    eax,edi
1001d830:	or     eax,ebx
1001d832:	je     0x1001d858
1001d834:	mov    eax,DWORD PTR [ebp-0x24]
1001d837:	cdq    
1001d838:	push   edx
1001d839:	push   eax
1001d83a:	push   ebx
1001d83b:	push   edi
1001d83c:	call   0x1001e710
1001d841:	add    ecx,0x30
1001d844:	cmp    ecx,0x39
1001d847:	mov    DWORD PTR [ebp-0x7c],ebx
1001d84a:	mov    edi,eax
1001d84c:	mov    ebx,edx
1001d84e:	jle    0x1001d853
1001d850:	add    ecx,DWORD PTR [ebp-0x54]
1001d853:	mov    BYTE PTR [esi],cl
1001d855:	dec    esi
1001d856:	jmp    0x1001d824
1001d858:	lea    eax,[ebp+0x1ef]
1001d85e:	sub    eax,esi
1001d860:	inc    esi
1001d861:	test   WORD PTR [ebp-0x14],0x200
1001d867:	mov    DWORD PTR [ebp-0x20],eax
1001d86a:	mov    DWORD PTR [ebp-0x1c],esi
1001d86d:	je     0x1001d8b3
1001d86f:	test   eax,eax
1001d871:	je     0x1001d87a
1001d873:	mov    ecx,esi
1001d875:	cmp    BYTE PTR [ecx],0x30
1001d878:	je     0x1001d8b3
1001d87a:	dec    DWORD PTR [ebp-0x1c]
1001d87d:	mov    ecx,DWORD PTR [ebp-0x1c]
1001d880:	mov    BYTE PTR [ecx],0x30
1001d883:	inc    eax
1001d884:	jmp    0x1001d8b0
1001d886:	test   ebx,ebx
1001d888:	jne    0x1001d892
1001d88a:	mov    eax,ds:0x10096044
1001d88f:	mov    DWORD PTR [ebp-0x1c],eax
1001d892:	mov    eax,DWORD PTR [ebp-0x1c]
1001d895:	mov    DWORD PTR [ebp-0x34],0x1
1001d89c:	jmp    0x1001d8a7
1001d89e:	dec    edi
1001d89f:	cmp    WORD PTR [eax],0x0
1001d8a3:	je     0x1001d8ab
1001d8a5:	inc    eax
1001d8a6:	inc    eax
1001d8a7:	test   edi,edi
1001d8a9:	jne    0x1001d89e
1001d8ab:	sub    eax,DWORD PTR [ebp-0x1c]
1001d8ae:	sar    eax,1
1001d8b0:	mov    DWORD PTR [ebp-0x20],eax
1001d8b3:	cmp    DWORD PTR [ebp-0x48],0x0
1001d8b7:	jne    0x1001d9bc
1001d8bd:	mov    eax,DWORD PTR [ebp-0x14]
1001d8c0:	test   al,0x40
1001d8c2:	je     0x1001d8ef
1001d8c4:	test   ax,0x100
1001d8c8:	je     0x1001d8d2
1001d8ca:	mov    WORD PTR [ebp-0x44],0x2d
1001d8d0:	jmp    0x1001d8e8
1001d8d2:	test   al,0x1
1001d8d4:	je     0x1001d8de
1001d8d6:	mov    WORD PTR [ebp-0x44],0x2b
1001d8dc:	jmp    0x1001d8e8
1001d8de:	test   al,0x2
1001d8e0:	je     0x1001d8ef
1001d8e2:	mov    WORD PTR [ebp-0x44],0x20
1001d8e8:	mov    DWORD PTR [ebp-0x30],0x1
1001d8ef:	mov    ebx,DWORD PTR [ebp-0x38]
1001d8f2:	mov    esi,DWORD PTR [ebp-0x20]
1001d8f5:	sub    ebx,esi
1001d8f7:	sub    ebx,DWORD PTR [ebp-0x30]
1001d8fa:	test   BYTE PTR [ebp-0x14],0xc
1001d8fe:	jne    0x1001d911
1001d900:	push   DWORD PTR [ebp-0x3c]
1001d903:	lea    eax,[ebp-0x2c]
1001d906:	push   ebx
1001d907:	push   0x20
1001d909:	call   0x1001da6e
1001d90e:	add    esp,0xc
1001d911:	push   DWORD PTR [ebp-0x30]
1001d914:	mov    edi,DWORD PTR [ebp-0x3c]
1001d917:	lea    eax,[ebp-0x2c]
1001d91a:	lea    ecx,[ebp-0x44]
1001d91d:	call   0x1001d0ea
1001d922:	test   BYTE PTR [ebp-0x14],0x8
1001d926:	pop    ecx
1001d927:	je     0x1001d93e
1001d929:	test   BYTE PTR [ebp-0x14],0x4
1001d92d:	jne    0x1001d93e
1001d92f:	push   edi
1001d930:	push   ebx
1001d931:	push   0x30
1001d933:	lea    eax,[ebp-0x2c]
1001d936:	call   0x1001da6e
1001d93b:	add    esp,0xc
1001d93e:	cmp    DWORD PTR [ebp-0x34],0x0
1001d942:	jne    0x1001d992
1001d944:	test   esi,esi
1001d946:	jle    0x1001d992
1001d948:	mov    edi,DWORD PTR [ebp-0x1c]
1001d94b:	mov    DWORD PTR [ebp-0x24],esi
1001d94e:	dec    DWORD PTR [ebp-0x24]
1001d951:	lea    eax,[ebp-0x64]
1001d954:	push   eax
1001d955:	mov    eax,DWORD PTR [ebp-0x64]
1001d958:	push   DWORD PTR [eax+0xac]
1001d95e:	lea    eax,[ebp-0x70]
1001d961:	push   edi
1001d962:	push   eax
1001d963:	call   0x10021909
1001d968:	add    esp,0x10
1001d96b:	test   eax,eax
1001d96d:	mov    DWORD PTR [ebp-0x7c],eax
1001d970:	jle    0x1001d98c
1001d972:	push   DWORD PTR [ebp-0x70]
1001d975:	mov    eax,DWORD PTR [ebp-0x3c]
1001d978:	lea    esi,[ebp-0x2c]
1001d97b:	call   0x1001da49
1001d980:	add    edi,DWORD PTR [ebp-0x7c]
1001d983:	cmp    DWORD PTR [ebp-0x24],0x0
1001d987:	pop    ecx
1001d988:	jg     0x1001d94e
1001d98a:	jmp    0x1001d99f
1001d98c:	or     DWORD PTR [ebp-0x2c],0xffffffff
1001d990:	jmp    0x1001d99f
1001d992:	mov    ecx,DWORD PTR [ebp-0x1c]
1001d995:	push   esi
1001d996:	lea    eax,[ebp-0x2c]
1001d999:	call   0x1001d0ea
1001d99e:	pop    ecx
1001d99f:	cmp    DWORD PTR [ebp-0x2c],0x0
1001d9a3:	jl     0x1001d9bc
1001d9a5:	test   BYTE PTR [ebp-0x14],0x4
1001d9a9:	je     0x1001d9bc
1001d9ab:	push   DWORD PTR [ebp-0x3c]
1001d9ae:	lea    eax,[ebp-0x2c]
1001d9b1:	push   ebx
1001d9b2:	push   0x20
1001d9b4:	call   0x1001da6e
1001d9b9:	add    esp,0xc
1001d9bc:	cmp    DWORD PTR [ebp-0x50],0x0
1001d9c0:	je     0x1001d9cf
1001d9c2:	push   DWORD PTR [ebp-0x50]
1001d9c5:	call   0x10016b85
1001d9ca:	and    DWORD PTR [ebp-0x50],0x0
1001d9ce:	pop    ecx
1001d9cf:	mov    esi,DWORD PTR [ebp-0x4c]
1001d9d2:	movzx  eax,WORD PTR [esi]
1001d9d5:	test   ax,ax
1001d9d8:	mov    DWORD PTR [ebp-0x24],eax
1001d9db:	je     0x1001da01
1001d9dd:	mov    ecx,DWORD PTR [ebp-0x68]
1001d9e0:	mov    ebx,DWORD PTR [ebp-0x28]
1001d9e3:	mov    edx,eax
1001d9e5:	jmp    0x1001d1e4
1001d9ea:	call   0x1001a18e
1001d9ef:	mov    DWORD PTR [eax],0x16
1001d9f5:	xor    eax,eax
1001d9f7:	push   eax
1001d9f8:	push   eax
1001d9f9:	push   eax
1001d9fa:	push   eax
1001d9fb:	push   eax
1001d9fc:	jmp    0x1001d1a9
1001da01:	cmp    BYTE PTR [ebp-0x58],0x0
1001da05:	je     0x1001da0e
1001da07:	mov    eax,DWORD PTR [ebp-0x5c]
1001da0a:	and    DWORD PTR [eax+0x70],0xfffffffd
1001da0e:	mov    eax,DWORD PTR [ebp-0x2c]
1001da11:	mov    ecx,DWORD PTR [ebp+0x3f0]
1001da17:	pop    edi
1001da18:	pop    esi
1001da19:	xor    ecx,ebp
1001da1b:	pop    ebx
1001da1c:	call   0x10015b2b
1001da21:	add    ebp,0x3f4
1001da27:	leave  
1001da28:	ret    
1001da29:	call   0x4011dc01
1001da2e:	rol    BYTE PTR [ecx],cl
1001da30:	adc    BYTE PTR [ebp-0x2e],cl
1001da33:	add    DWORD PTR [eax],edx
1001da35:	fwait
1001da36:	rol    BYTE PTR [ecx],cl
1001da38:	adc    dh,dl
1001da3a:	rol    BYTE PTR [ecx],cl
1001da3c:	adc    bh,bl
1001da3e:	rol    BYTE PTR [ecx],cl
1001da40:	adc    BYTE PTR [edi],dl
1001da42:	rol    DWORD PTR [ecx],cl
1001da44:	adc    BYTE PTR [eax],al
1001da46:	aam    0x1
1001da48:	adc    dh,dh
1001da4a:	inc    eax
1001da4b:	or     al,0x40
1001da4d:	je     0x1001da55
1001da4f:	cmp    DWORD PTR [eax+0x8],0x0
1001da53:	je     0x1001da6b
1001da55:	push   eax
1001da56:	push   DWORD PTR [esp+0x8]
1001da5a:	call   0x10021715
1001da5f:	cmp    ax,0xffff
1001da63:	pop    ecx
1001da64:	pop    ecx
1001da65:	jne    0x1001da6b
1001da67:	or     DWORD PTR [esi],0xffffffff
1001da6a:	ret    
1001da6b:	inc    DWORD PTR [esi]
1001da6d:	ret    
1001da6e:	push   ebp
1001da6f:	mov    ebp,esp
1001da71:	push   esi
1001da72:	mov    esi,eax
1001da74:	jmp    0x1001da8a
1001da76:	push   DWORD PTR [ebp+0x8]
1001da79:	mov    eax,DWORD PTR [ebp+0x10]
1001da7c:	dec    DWORD PTR [ebp+0xc]
1001da7f:	call   0x1001da49
1001da84:	cmp    DWORD PTR [esi],0xffffffff
1001da87:	pop    ecx
1001da88:	je     0x1001da90
1001da8a:	cmp    DWORD PTR [ebp+0xc],0x0
1001da8e:	jg     0x1001da76
1001da90:	pop    esi
1001da91:	pop    ebp
1001da92:	ret    
1001da93:	push   ebp
1001da94:	lea    ebp,[esp-0x3f4]
1001da9b:	sub    esp,0x474
1001daa1:	mov    eax,ds:0x100951fc
1001daa6:	xor    eax,ebp
1001daa8:	mov    DWORD PTR [ebp+0x3f0],eax
1001daae:	push   ebx
1001daaf:	mov    ebx,DWORD PTR [ebp+0x408]
1001dab5:	push   esi
1001dab6:	mov    esi,DWORD PTR [ebp+0x3fc]
1001dabc:	xor    eax,eax
1001dabe:	push   edi
1001dabf:	push   DWORD PTR [ebp+0x404]
1001dac5:	mov    edi,DWORD PTR [ebp+0x400]
1001dacb:	lea    ecx,[ebp-0x58]
1001dace:	mov    DWORD PTR [ebp-0x48],esi
1001dad1:	mov    DWORD PTR [ebp-0x24],ebx
1001dad4:	mov    DWORD PTR [ebp-0x60],eax
1001dad7:	mov    DWORD PTR [ebp-0x14],eax
1001dada:	mov    DWORD PTR [ebp-0x38],eax
1001dadd:	mov    DWORD PTR [ebp-0x18],eax
1001dae0:	mov    DWORD PTR [ebp-0x30],eax
1001dae3:	mov    DWORD PTR [ebp-0x5c],eax
1001dae6:	mov    DWORD PTR [ebp-0x34],eax
1001dae9:	call   0x100165fa
1001daee:	test   esi,esi
1001daf0:	jne    0x1001db21
1001daf2:	call   0x1001a18e
1001daf7:	mov    DWORD PTR [eax],0x16
1001dafd:	xor    eax,eax
1001daff:	push   eax
1001db00:	push   eax
1001db01:	push   eax
1001db02:	push   eax
1001db03:	push   eax
1001db04:	call   0x1001616f
1001db09:	add    esp,0x14
1001db0c:	cmp    BYTE PTR [ebp-0x4c],0x0
1001db10:	je     0x1001db19
1001db12:	mov    eax,DWORD PTR [ebp-0x50]
1001db15:	and    DWORD PTR [eax+0x70],0xfffffffd
1001db19:	or     eax,0xffffffff
1001db1c:	jmp    0x1001e377
1001db21:	xor    esi,esi
1001db23:	cmp    edi,esi
1001db25:	jne    0x1001db39
1001db27:	call   0x1001a18e
1001db2c:	push   esi
1001db2d:	push   esi
1001db2e:	push   esi
1001db2f:	push   esi
1001db30:	mov    DWORD PTR [eax],0x16
1001db36:	push   esi
1001db37:	jmp    0x1001db04
1001db39:	movzx  ecx,WORD PTR [edi]
1001db3c:	cmp    cx,si
1001db3f:	mov    DWORD PTR [ebp-0x2c],esi
1001db42:	mov    DWORD PTR [ebp-0x20],esi
1001db45:	mov    DWORD PTR [ebp-0x40],esi
1001db48:	mov    DWORD PTR [ebp-0x64],esi
1001db4b:	mov    DWORD PTR [ebp-0x28],ecx
1001db4e:	je     0x1001e367
1001db54:	push   0x2
1001db56:	pop    esi
1001db57:	add    edi,esi
1001db59:	xor    eax,eax
1001db5b:	cmp    DWORD PTR [ebp-0x2c],eax
1001db5e:	mov    DWORD PTR [ebp-0x6c],edi
1001db61:	jl     0x1001e357
1001db67:	lea    edx,[ecx-0x20]
1001db6a:	cmp    dx,0x58
1001db6e:	ja     0x1001db7d
1001db70:	movzx  eax,cx
1001db73:	movzx  eax,BYTE PTR [eax+0x1007e598]
1001db7a:	and    eax,0xf
1001db7d:	mov    edx,DWORD PTR [ebp-0x40]
1001db80:	imul   eax,eax,0x9
1001db83:	movzx  eax,BYTE PTR [eax+edx*1+0x1007e5b8]
1001db8b:	push   0x8
1001db8d:	shr    eax,0x4
1001db90:	pop    edx
1001db91:	cmp    eax,edx
1001db93:	mov    DWORD PTR [ebp-0x40],eax
1001db96:	je     0x1001daf2
1001db9c:	cmp    eax,0x7
1001db9f:	ja     0x1001e33f
1001dba5:	jmp    DWORD PTR [eax*4+0x1001e38f]
1001dbac:	xor    eax,eax
1001dbae:	or     DWORD PTR [ebp-0x18],0xffffffff
1001dbb2:	mov    DWORD PTR [ebp-0x68],eax
1001dbb5:	mov    DWORD PTR [ebp-0x5c],eax
1001dbb8:	mov    DWORD PTR [ebp-0x38],eax
1001dbbb:	mov    DWORD PTR [ebp-0x30],eax
1001dbbe:	mov    DWORD PTR [ebp-0x14],eax
1001dbc1:	mov    DWORD PTR [ebp-0x34],eax
1001dbc4:	jmp    0x1001e345
1001dbc9:	movzx  eax,cx
1001dbcc:	sub    eax,0x20
1001dbcf:	je     0x1001dc0d
1001dbd1:	sub    eax,0x3
1001dbd4:	je     0x1001dc01
1001dbd6:	sub    eax,edx
1001dbd8:	je     0x1001dbf8
1001dbda:	sub    eax,esi
1001dbdc:	je     0x1001dbef
1001dbde:	sub    eax,0x3
1001dbe1:	jne    0x1001e33f
1001dbe7:	or     DWORD PTR [ebp-0x14],edx
1001dbea:	jmp    0x1001e345
1001dbef:	or     DWORD PTR [ebp-0x14],0x4
1001dbf3:	jmp    0x1001e345
1001dbf8:	or     DWORD PTR [ebp-0x14],0x1
1001dbfc:	jmp    0x1001e345
1001dc01:	or     DWORD PTR [ebp-0x14],0x80
1001dc08:	jmp    0x1001e345
1001dc0d:	or     DWORD PTR [ebp-0x14],esi
1001dc10:	jmp    0x1001e345
1001dc15:	cmp    cx,0x2a
1001dc19:	jne    0x1001dc3a
1001dc1b:	mov    eax,DWORD PTR [ebx]
1001dc1d:	add    ebx,0x4
1001dc20:	test   eax,eax
1001dc22:	mov    DWORD PTR [ebp-0x24],ebx
1001dc25:	mov    DWORD PTR [ebp-0x38],eax
1001dc28:	jge    0x1001e345
1001dc2e:	or     DWORD PTR [ebp-0x14],0x4
1001dc32:	neg    DWORD PTR [ebp-0x38]
1001dc35:	jmp    0x1001e345
1001dc3a:	mov    eax,DWORD PTR [ebp-0x38]
1001dc3d:	imul   eax,eax,0xa
1001dc40:	movzx  ecx,cx
1001dc43:	lea    eax,[eax+ecx*1-0x30]
1001dc47:	mov    DWORD PTR [ebp-0x38],eax
1001dc4a:	jmp    0x1001e345
1001dc4f:	and    DWORD PTR [ebp-0x18],0x0
1001dc53:	jmp    0x1001e345
1001dc58:	cmp    cx,0x2a
1001dc5c:	jne    0x1001dc7a
1001dc5e:	mov    eax,DWORD PTR [ebx]
1001dc60:	add    ebx,0x4
1001dc63:	test   eax,eax
1001dc65:	mov    DWORD PTR [ebp-0x24],ebx
1001dc68:	mov    DWORD PTR [ebp-0x18],eax
1001dc6b:	jge    0x1001e345
1001dc71:	or     DWORD PTR [ebp-0x18],0xffffffff
1001dc75:	jmp    0x1001e345
1001dc7a:	mov    eax,DWORD PTR [ebp-0x18]
1001dc7d:	imul   eax,eax,0xa
1001dc80:	movzx  ecx,cx
1001dc83:	lea    eax,[eax+ecx*1-0x30]
1001dc87:	mov    DWORD PTR [ebp-0x18],eax
1001dc8a:	jmp    0x1001e345
1001dc8f:	movzx  eax,cx
1001dc92:	cmp    eax,0x49
1001dc95:	je     0x1001dcdc
1001dc97:	cmp    eax,0x68
1001dc9a:	je     0x1001dcd3
1001dc9c:	cmp    eax,0x6c
1001dc9f:	je     0x1001dcb6
1001dca1:	cmp    eax,0x77
1001dca4:	jne    0x1001e345
1001dcaa:	or     DWORD PTR [ebp-0x14],0x800
1001dcb1:	jmp    0x1001e345
1001dcb6:	cmp    WORD PTR [edi],0x6c
1001dcba:	jne    0x1001dcca
1001dcbc:	add    edi,esi
1001dcbe:	or     DWORD PTR [ebp-0x14],0x1000
1001dcc5:	jmp    0x1001e345
1001dcca:	or     DWORD PTR [ebp-0x14],0x10
1001dcce:	jmp    0x1001e345
1001dcd3:	or     DWORD PTR [ebp-0x14],0x20
1001dcd7:	jmp    0x1001e345
1001dcdc:	movzx  eax,WORD PTR [edi]
1001dcdf:	cmp    ax,0x36
1001dce3:	jne    0x1001dcfb
1001dce5:	cmp    WORD PTR [edi+0x2],0x34
1001dcea:	jne    0x1001dcfb
1001dcec:	add    edi,0x4
1001dcef:	or     DWORD PTR [ebp-0x14],0x8000
1001dcf6:	jmp    0x1001e345
1001dcfb:	cmp    ax,0x33
1001dcff:	jne    0x1001dd17
1001dd01:	cmp    WORD PTR [edi+0x2],0x32
1001dd06:	jne    0x1001dd17
1001dd08:	add    edi,0x4
1001dd0b:	and    DWORD PTR [ebp-0x14],0xffff7fff
1001dd12:	jmp    0x1001e345
1001dd17:	cmp    ax,0x64
1001dd1b:	je     0x1001e345
1001dd21:	cmp    ax,0x69
1001dd25:	je     0x1001e345
1001dd2b:	cmp    ax,0x6f
1001dd2f:	je     0x1001e345
1001dd35:	cmp    ax,0x75
1001dd39:	je     0x1001e345
1001dd3f:	cmp    ax,0x78
1001dd43:	je     0x1001e345
1001dd49:	cmp    ax,0x58
1001dd4d:	je     0x1001e345
1001dd53:	and    DWORD PTR [ebp-0x40],0x0
1001dd57:	mov    eax,DWORD PTR [ebp-0x48]
1001dd5a:	push   ecx
1001dd5b:	lea    esi,[ebp-0x2c]
1001dd5e:	mov    DWORD PTR [ebp-0x34],0x1
1001dd65:	call   0x1001da49
1001dd6a:	pop    ecx
1001dd6b:	jmp    0x1001e345
1001dd70:	movzx  eax,cx
1001dd73:	cmp    eax,0x64
1001dd76:	jg     0x1001df24
1001dd7c:	je     0x1001df9f
1001dd82:	cmp    eax,0x53
1001dd85:	jg     0x1001de62
1001dd8b:	je     0x1001ddec
1001dd8d:	sub    eax,0x41
1001dd90:	je     0x1001dda2
1001dd92:	sub    eax,esi
1001dd94:	je     0x1001ddd7
1001dd96:	sub    eax,esi
1001dd98:	je     0x1001dda2
1001dd9a:	sub    eax,esi
1001dd9c:	jne    0x1001e223
1001dda2:	add    ecx,0x20
1001dda5:	mov    DWORD PTR [ebp-0x68],0x1
1001ddac:	mov    DWORD PTR [ebp-0x28],ecx
1001ddaf:	or     DWORD PTR [ebp-0x14],0x40
1001ddb3:	cmp    DWORD PTR [ebp-0x18],0x0
1001ddb7:	lea    esi,[ebp-0x10]
1001ddba:	mov    eax,0x200
1001ddbf:	mov    DWORD PTR [ebp-0x1c],esi
1001ddc2:	mov    DWORD PTR [ebp-0x20],eax
1001ddc5:	jge    0x1001dfc3
1001ddcb:	mov    DWORD PTR [ebp-0x18],0x6
1001ddd2:	jmp    0x1001e013
1001ddd7:	test   WORD PTR [ebp-0x14],0x830
1001dddd:	jne    0x1001de80
1001dde3:	or     DWORD PTR [ebp-0x14],0x20
1001dde7:	jmp    0x1001de80
1001ddec:	test   WORD PTR [ebp-0x14],0x830
1001ddf2:	jne    0x1001ddf8
1001ddf4:	or     DWORD PTR [ebp-0x14],0x20
1001ddf8:	mov    edi,DWORD PTR [ebp-0x18]
1001ddfb:	cmp    edi,0xffffffff
1001ddfe:	jne    0x1001de05
1001de00:	mov    edi,0x7fffffff
1001de05:	add    ebx,0x4
1001de08:	test   BYTE PTR [ebp-0x14],0x20
1001de0c:	mov    DWORD PTR [ebp-0x24],ebx
1001de0f:	mov    ebx,DWORD PTR [ebx-0x4]
1001de12:	mov    DWORD PTR [ebp-0x1c],ebx
1001de15:	je     0x1001e1f6
1001de1b:	test   ebx,ebx
1001de1d:	jne    0x1001de27
1001de1f:	mov    eax,ds:0x10096040
1001de24:	mov    DWORD PTR [ebp-0x1c],eax
1001de27:	and    DWORD PTR [ebp-0x20],0x0
1001de2b:	test   edi,edi
1001de2d:	mov    esi,DWORD PTR [ebp-0x1c]
1001de30:	jle    0x1001e223
1001de36:	mov    al,BYTE PTR [esi]
1001de38:	test   al,al
1001de3a:	je     0x1001e223
1001de40:	lea    ecx,[ebp-0x58]
1001de43:	movzx  eax,al
1001de46:	push   ecx
1001de47:	push   eax
1001de48:	call   0x10017037
1001de4d:	test   eax,eax
1001de4f:	pop    ecx
1001de50:	pop    ecx
1001de51:	je     0x1001de54
1001de53:	inc    esi
1001de54:	inc    esi
1001de55:	inc    DWORD PTR [ebp-0x20]
1001de58:	cmp    DWORD PTR [ebp-0x20],edi
1001de5b:	jl     0x1001de36
1001de5d:	jmp    0x1001e223
1001de62:	sub    eax,0x58
1001de65:	je     0x1001e0aa
1001de6b:	sub    eax,esi
1001de6d:	je     0x1001ded7
1001de6f:	sub    eax,0x7
1001de72:	je     0x1001ddaf
1001de78:	sub    eax,esi
1001de7a:	jne    0x1001e223
1001de80:	movzx  eax,WORD PTR [ebx]
1001de83:	add    ebx,0x4
1001de86:	xor    esi,esi
1001de88:	inc    esi
1001de89:	test   BYTE PTR [ebp-0x14],0x20
1001de8d:	mov    DWORD PTR [ebp-0x34],esi
1001de90:	mov    DWORD PTR [ebp-0x24],ebx
1001de93:	mov    DWORD PTR [ebp-0x70],eax
1001de96:	je     0x1001dec5
1001de98:	mov    BYTE PTR [ebp-0x44],al
1001de9b:	lea    eax,[ebp-0x58]
1001de9e:	push   eax
1001de9f:	mov    eax,DWORD PTR [ebp-0x58]
1001dea2:	mov    BYTE PTR [ebp-0x43],0x0
1001dea6:	push   DWORD PTR [eax+0xac]
1001deac:	lea    eax,[ebp-0x44]
1001deaf:	push   eax
1001deb0:	lea    eax,[ebp-0x10]
1001deb3:	push   eax
1001deb4:	call   0x10021909
1001deb9:	add    esp,0x10
1001debc:	test   eax,eax
1001debe:	jge    0x1001dec9
1001dec0:	mov    DWORD PTR [ebp-0x5c],esi
1001dec3:	jmp    0x1001dec9
1001dec5:	mov    WORD PTR [ebp-0x10],ax
1001dec9:	lea    eax,[ebp-0x10]
1001decc:	mov    DWORD PTR [ebp-0x1c],eax
1001decf:	mov    DWORD PTR [ebp-0x20],esi
1001ded2:	jmp    0x1001e223
1001ded7:	mov    eax,DWORD PTR [ebx]
1001ded9:	add    ebx,0x4
1001dedc:	test   eax,eax
1001dede:	mov    DWORD PTR [ebp-0x24],ebx
1001dee1:	je     0x1001df10
1001dee3:	mov    ecx,DWORD PTR [eax+0x4]
1001dee6:	test   ecx,ecx
1001dee8:	je     0x1001df10
1001deea:	test   WORD PTR [ebp-0x14],0x800
1001def0:	movsx  eax,WORD PTR [eax]
1001def3:	mov    DWORD PTR [ebp-0x1c],ecx
1001def6:	je     0x1001df07
1001def8:	cdq    
1001def9:	sub    eax,edx
1001defb:	mov    DWORD PTR [ebp-0x34],0x1
1001df02:	jmp    0x1001e21e
1001df07:	and    DWORD PTR [ebp-0x34],0x0
1001df0b:	jmp    0x1001e220
1001df10:	mov    eax,ds:0x10096040
1001df15:	mov    DWORD PTR [ebp-0x1c],eax
1001df18:	push   eax
1001df19:	call   0x100163c0
1001df1e:	pop    ecx
1001df1f:	jmp    0x1001e220
1001df24:	cmp    eax,0x70
1001df27:	jg     0x1001e0b3
1001df2d:	je     0x1001e0a7
1001df33:	cmp    eax,0x65
1001df36:	jl     0x1001e223
1001df3c:	cmp    eax,0x67
1001df3f:	jle    0x1001ddaf
1001df45:	cmp    eax,0x69
1001df48:	je     0x1001df9f
1001df4a:	cmp    eax,0x6e
1001df4d:	je     0x1001df6a
1001df4f:	cmp    eax,0x6f
1001df52:	jne    0x1001e223
1001df58:	test   BYTE PTR [ebp-0x14],0x80
1001df5c:	mov    DWORD PTR [ebp-0x28],edx
1001df5f:	je     0x1001dfaa
1001df61:	or     DWORD PTR [ebp-0x14],0x200
1001df68:	jmp    0x1001dfaa
1001df6a:	mov    esi,DWORD PTR [ebx]
1001df6c:	add    ebx,0x4
1001df6f:	mov    DWORD PTR [ebp-0x24],ebx
1001df72:	call   0x100218f3
1001df77:	test   eax,eax
1001df79:	je     0x1001daf2
1001df7f:	test   BYTE PTR [ebp-0x14],0x20
1001df83:	je     0x1001df8e
1001df85:	mov    ax,WORD PTR [ebp-0x2c]
1001df89:	mov    WORD PTR [esi],ax
1001df8c:	jmp    0x1001df93
1001df8e:	mov    eax,DWORD PTR [ebp-0x2c]
1001df91:	mov    DWORD PTR [esi],eax
1001df93:	mov    DWORD PTR [ebp-0x5c],0x1
1001df9a:	jmp    0x1001e32c
1001df9f:	or     DWORD PTR [ebp-0x14],0x40
1001dfa3:	mov    DWORD PTR [ebp-0x28],0xa
1001dfaa:	test   WORD PTR [ebp-0x14],0x8000
1001dfb0:	je     0x1001e0fd
1001dfb6:	add    ebx,edx
1001dfb8:	mov    eax,DWORD PTR [ebx-0x8]
1001dfbb:	mov    edx,DWORD PTR [ebx-0x4]
1001dfbe:	jmp    0x1001e136
1001dfc3:	jne    0x1001dfd4
1001dfc5:	cmp    cx,0x67
1001dfc9:	jne    0x1001e013
1001dfcb:	mov    DWORD PTR [ebp-0x18],0x1
1001dfd2:	jmp    0x1001e013
1001dfd4:	cmp    DWORD PTR [ebp-0x18],eax
1001dfd7:	jle    0x1001dfdc
1001dfd9:	mov    DWORD PTR [ebp-0x18],eax
1001dfdc:	cmp    DWORD PTR [ebp-0x18],0xa3
1001dfe3:	jle    0x1001e013
1001dfe5:	mov    edi,DWORD PTR [ebp-0x18]
1001dfe8:	add    edi,0x15d
1001dfee:	push   edi
1001dfef:	call   0x10018735
1001dff4:	test   eax,eax
1001dff6:	pop    ecx
1001dff7:	mov    ecx,DWORD PTR [ebp-0x28]
1001dffa:	push   0x8
1001dffc:	mov    DWORD PTR [ebp-0x64],eax
1001dfff:	pop    edx
1001e000:	je     0x1001e00c
1001e002:	mov    DWORD PTR [ebp-0x1c],eax
1001e005:	mov    DWORD PTR [ebp-0x20],edi
1001e008:	mov    esi,eax
1001e00a:	jmp    0x1001e013
1001e00c:	mov    DWORD PTR [ebp-0x18],0xa3
1001e013:	add    ebx,edx
1001e015:	mov    eax,DWORD PTR [ebx-0x8]
1001e018:	mov    DWORD PTR [ebp-0x78],eax
1001e01b:	mov    eax,DWORD PTR [ebx-0x4]
1001e01e:	mov    DWORD PTR [ebp-0x74],eax
1001e021:	lea    eax,[ebp-0x58]
1001e024:	push   eax
1001e025:	push   DWORD PTR [ebp-0x68]
1001e028:	movsx  eax,cl
1001e02b:	push   DWORD PTR [ebp-0x18]
1001e02e:	mov    DWORD PTR [ebp-0x24],ebx
1001e031:	push   eax
1001e032:	push   DWORD PTR [ebp-0x20]
1001e035:	lea    eax,[ebp-0x78]
1001e038:	push   esi
1001e039:	push   eax
1001e03a:	push   DWORD PTR ds:0x10096188
1001e040:	call   0x1001978a
1001e045:	pop    ecx
1001e046:	call   eax
1001e048:	mov    ebx,DWORD PTR [ebp-0x14]
1001e04b:	add    esp,0x1c
1001e04e:	and    ebx,0x80
1001e054:	je     0x1001e071
1001e056:	cmp    DWORD PTR [ebp-0x18],0x0
1001e05a:	jne    0x1001e071
1001e05c:	lea    eax,[ebp-0x58]
1001e05f:	push   eax
1001e060:	push   esi
1001e061:	push   DWORD PTR ds:0x10096194
1001e067:	call   0x1001978a
1001e06c:	pop    ecx
1001e06d:	call   eax
1001e06f:	pop    ecx
1001e070:	pop    ecx
1001e071:	cmp    WORD PTR [ebp-0x28],0x67
1001e076:	jne    0x1001e091
1001e078:	test   ebx,ebx
1001e07a:	jne    0x1001e091
1001e07c:	lea    eax,[ebp-0x58]
1001e07f:	push   eax
1001e080:	push   esi
1001e081:	push   DWORD PTR ds:0x10096190
1001e087:	call   0x1001978a
1001e08c:	pop    ecx
1001e08d:	call   eax
1001e08f:	pop    ecx
1001e090:	pop    ecx
1001e091:	cmp    BYTE PTR [esi],0x2d
1001e094:	jne    0x1001e0a1
1001e096:	or     DWORD PTR [ebp-0x14],0x100
1001e09d:	inc    esi
1001e09e:	mov    DWORD PTR [ebp-0x1c],esi
1001e0a1:	push   esi
1001e0a2:	jmp    0x1001df19
1001e0a7:	mov    DWORD PTR [ebp-0x18],edx
1001e0aa:	mov    DWORD PTR [ebp-0x60],0x7
1001e0b1:	jmp    0x1001e0d4
1001e0b3:	sub    eax,0x73
1001e0b6:	je     0x1001ddf8
1001e0bc:	sub    eax,esi
1001e0be:	je     0x1001dfa3
1001e0c4:	sub    eax,0x3
1001e0c7:	jne    0x1001e223
1001e0cd:	mov    DWORD PTR [ebp-0x60],0x27
1001e0d4:	test   BYTE PTR [ebp-0x14],0x80
1001e0d8:	mov    DWORD PTR [ebp-0x28],0x10
1001e0df:	je     0x1001dfaa
1001e0e5:	mov    eax,DWORD PTR [ebp-0x60]
1001e0e8:	add    eax,0x51
1001e0eb:	mov    WORD PTR [ebp-0x3c],0x30
1001e0f1:	mov    WORD PTR [ebp-0x3a],ax
1001e0f5:	mov    DWORD PTR [ebp-0x30],esi
1001e0f8:	jmp    0x1001dfaa
1001e0fd:	test   WORD PTR [ebp-0x14],0x1000
1001e103:	jne    0x1001dfb6
1001e109:	add    ebx,0x4
1001e10c:	test   BYTE PTR [ebp-0x14],0x20
1001e110:	je     0x1001e128
1001e112:	test   BYTE PTR [ebp-0x14],0x40
1001e116:	mov    DWORD PTR [ebp-0x24],ebx
1001e119:	je     0x1001e121
1001e11b:	movsx  eax,WORD PTR [ebx-0x4]
1001e11f:	jmp    0x1001e125
1001e121:	movzx  eax,WORD PTR [ebx-0x4]
1001e125:	cdq    
1001e126:	jmp    0x1001e139
1001e128:	test   BYTE PTR [ebp-0x14],0x40
1001e12c:	mov    eax,DWORD PTR [ebx-0x4]
1001e12f:	je     0x1001e134
1001e131:	cdq    
1001e132:	jmp    0x1001e136
1001e134:	xor    edx,edx
1001e136:	mov    DWORD PTR [ebp-0x24],ebx
1001e139:	test   BYTE PTR [ebp-0x14],0x40
1001e13d:	je     0x1001e157
1001e13f:	test   edx,edx
1001e141:	jg     0x1001e157
1001e143:	jl     0x1001e149
1001e145:	test   eax,eax
1001e147:	jae    0x1001e157
1001e149:	neg    eax
1001e14b:	adc    edx,0x0
1001e14e:	neg    edx
1001e150:	or     DWORD PTR [ebp-0x14],0x100
1001e157:	test   WORD PTR [ebp-0x14],0x9000
1001e15d:	mov    ebx,edx
1001e15f:	mov    edi,eax
1001e161:	jne    0x1001e165
1001e163:	xor    ebx,ebx
1001e165:	cmp    DWORD PTR [ebp-0x18],0x0
1001e169:	jge    0x1001e174
1001e16b:	mov    DWORD PTR [ebp-0x18],0x1
1001e172:	jmp    0x1001e185
1001e174:	and    DWORD PTR [ebp-0x14],0xfffffff7
1001e178:	mov    eax,0x200
1001e17d:	cmp    DWORD PTR [ebp-0x18],eax
1001e180:	jle    0x1001e185
1001e182:	mov    DWORD PTR [ebp-0x18],eax
1001e185:	mov    eax,edi
1001e187:	or     eax,ebx
1001e189:	jne    0x1001e18e
1001e18b:	and    DWORD PTR [ebp-0x30],eax
1001e18e:	lea    esi,[ebp+0x1ef]
1001e194:	mov    eax,DWORD PTR [ebp-0x18]
1001e197:	dec    DWORD PTR [ebp-0x18]
1001e19a:	test   eax,eax
1001e19c:	jg     0x1001e1a4
1001e19e:	mov    eax,edi
1001e1a0:	or     eax,ebx
1001e1a2:	je     0x1001e1c8
1001e1a4:	mov    eax,DWORD PTR [ebp-0x28]
1001e1a7:	cdq    
1001e1a8:	push   edx
1001e1a9:	push   eax
1001e1aa:	push   ebx
1001e1ab:	push   edi
1001e1ac:	call   0x1001e710
1001e1b1:	add    ecx,0x30
1001e1b4:	cmp    ecx,0x39
1001e1b7:	mov    DWORD PTR [ebp-0x7c],ebx
1001e1ba:	mov    edi,eax
1001e1bc:	mov    ebx,edx
1001e1be:	jle    0x1001e1c3
1001e1c0:	add    ecx,DWORD PTR [ebp-0x60]
1001e1c3:	mov    BYTE PTR [esi],cl
1001e1c5:	dec    esi
1001e1c6:	jmp    0x1001e194
1001e1c8:	lea    eax,[ebp+0x1ef]
1001e1ce:	sub    eax,esi
1001e1d0:	inc    esi
1001e1d1:	test   WORD PTR [ebp-0x14],0x200
1001e1d7:	mov    DWORD PTR [ebp-0x20],eax
1001e1da:	mov    DWORD PTR [ebp-0x1c],esi
1001e1dd:	je     0x1001e223
1001e1df:	test   eax,eax
1001e1e1:	je     0x1001e1ea
1001e1e3:	mov    ecx,esi
1001e1e5:	cmp    BYTE PTR [ecx],0x30
1001e1e8:	je     0x1001e223
1001e1ea:	dec    DWORD PTR [ebp-0x1c]
1001e1ed:	mov    ecx,DWORD PTR [ebp-0x1c]
1001e1f0:	mov    BYTE PTR [ecx],0x30
1001e1f3:	inc    eax
1001e1f4:	jmp    0x1001e220
1001e1f6:	test   ebx,ebx
1001e1f8:	jne    0x1001e202
1001e1fa:	mov    eax,ds:0x10096044
1001e1ff:	mov    DWORD PTR [ebp-0x1c],eax
1001e202:	mov    eax,DWORD PTR [ebp-0x1c]
1001e205:	mov    DWORD PTR [ebp-0x34],0x1
1001e20c:	jmp    0x1001e217
1001e20e:	dec    edi
1001e20f:	cmp    WORD PTR [eax],0x0
1001e213:	je     0x1001e21b
1001e215:	add    eax,esi
1001e217:	test   edi,edi
1001e219:	jne    0x1001e20e
1001e21b:	sub    eax,DWORD PTR [ebp-0x1c]
1001e21e:	sar    eax,1
1001e220:	mov    DWORD PTR [ebp-0x20],eax
1001e223:	cmp    DWORD PTR [ebp-0x5c],0x0
1001e227:	jne    0x1001e32c
1001e22d:	mov    eax,DWORD PTR [ebp-0x14]
1001e230:	test   al,0x40
1001e232:	je     0x1001e25f
1001e234:	test   ax,0x100
1001e238:	je     0x1001e242
1001e23a:	mov    WORD PTR [ebp-0x3c],0x2d
1001e240:	jmp    0x1001e258
1001e242:	test   al,0x1
1001e244:	je     0x1001e24e
1001e246:	mov    WORD PTR [ebp-0x3c],0x2b
1001e24c:	jmp    0x1001e258
1001e24e:	test   al,0x2
1001e250:	je     0x1001e25f
1001e252:	mov    WORD PTR [ebp-0x3c],0x20
1001e258:	mov    DWORD PTR [ebp-0x30],0x1
1001e25f:	mov    ebx,DWORD PTR [ebp-0x38]
1001e262:	mov    esi,DWORD PTR [ebp-0x20]
1001e265:	sub    ebx,esi
1001e267:	sub    ebx,DWORD PTR [ebp-0x30]
1001e26a:	test   BYTE PTR [ebp-0x14],0xc
1001e26e:	jne    0x1001e281
1001e270:	push   DWORD PTR [ebp-0x48]
1001e273:	lea    eax,[ebp-0x2c]
1001e276:	push   ebx
1001e277:	push   0x20
1001e279:	call   0x1001da6e
1001e27e:	add    esp,0xc
1001e281:	push   DWORD PTR [ebp-0x30]
1001e284:	mov    edi,DWORD PTR [ebp-0x48]
1001e287:	lea    eax,[ebp-0x2c]
1001e28a:	lea    ecx,[ebp-0x3c]
1001e28d:	call   0x1001d0ea
1001e292:	test   BYTE PTR [ebp-0x14],0x8
1001e296:	pop    ecx
1001e297:	je     0x1001e2ae
1001e299:	test   BYTE PTR [ebp-0x14],0x4
1001e29d:	jne    0x1001e2ae
1001e29f:	push   edi
1001e2a0:	push   ebx
1001e2a1:	push   0x30
1001e2a3:	lea    eax,[ebp-0x2c]
1001e2a6:	call   0x1001da6e
1001e2ab:	add    esp,0xc
1001e2ae:	cmp    DWORD PTR [ebp-0x34],0x0
1001e2b2:	jne    0x1001e302
1001e2b4:	test   esi,esi
1001e2b6:	jle    0x1001e302
1001e2b8:	mov    edi,DWORD PTR [ebp-0x1c]
1001e2bb:	mov    DWORD PTR [ebp-0x28],esi
1001e2be:	dec    DWORD PTR [ebp-0x28]
1001e2c1:	lea    eax,[ebp-0x58]
1001e2c4:	push   eax
1001e2c5:	mov    eax,DWORD PTR [ebp-0x58]
1001e2c8:	push   DWORD PTR [eax+0xac]
1001e2ce:	lea    eax,[ebp-0x70]
1001e2d1:	push   edi
1001e2d2:	push   eax
1001e2d3:	call   0x10021909
1001e2d8:	add    esp,0x10
1001e2db:	test   eax,eax
1001e2dd:	mov    DWORD PTR [ebp-0x7c],eax
1001e2e0:	jle    0x1001e2fc
1001e2e2:	push   DWORD PTR [ebp-0x70]
1001e2e5:	mov    eax,DWORD PTR [ebp-0x48]
1001e2e8:	lea    esi,[ebp-0x2c]
1001e2eb:	call   0x1001da49
1001e2f0:	add    edi,DWORD PTR [ebp-0x7c]
1001e2f3:	cmp    DWORD PTR [ebp-0x28],0x0
1001e2f7:	pop    ecx
1001e2f8:	jg     0x1001e2be
1001e2fa:	jmp    0x1001e30f
1001e2fc:	or     DWORD PTR [ebp-0x2c],0xffffffff
1001e300:	jmp    0x1001e30f
1001e302:	mov    ecx,DWORD PTR [ebp-0x1c]
1001e305:	push   esi
1001e306:	lea    eax,[ebp-0x2c]
1001e309:	call   0x1001d0ea
1001e30e:	pop    ecx
1001e30f:	cmp    DWORD PTR [ebp-0x2c],0x0
1001e313:	jl     0x1001e32c
1001e315:	test   BYTE PTR [ebp-0x14],0x4
1001e319:	je     0x1001e32c
1001e31b:	push   DWORD PTR [ebp-0x48]
1001e31e:	lea    eax,[ebp-0x2c]
1001e321:	push   ebx
1001e322:	push   0x20
1001e324:	call   0x1001da6e
1001e329:	add    esp,0xc
1001e32c:	cmp    DWORD PTR [ebp-0x64],0x0
1001e330:	je     0x1001e33f
1001e332:	push   DWORD PTR [ebp-0x64]
1001e335:	call   0x10016b85
1001e33a:	and    DWORD PTR [ebp-0x64],0x0
1001e33e:	pop    ecx
1001e33f:	mov    edi,DWORD PTR [ebp-0x6c]
1001e342:	mov    ebx,DWORD PTR [ebp-0x24]
1001e345:	movzx  eax,WORD PTR [edi]
1001e348:	test   ax,ax
1001e34b:	mov    DWORD PTR [ebp-0x28],eax
1001e34e:	je     0x1001e357
1001e350:	mov    ecx,eax
1001e352:	jmp    0x1001db54
1001e357:	cmp    DWORD PTR [ebp-0x40],0x0
1001e35b:	je     0x1001e367
1001e35d:	cmp    DWORD PTR [ebp-0x40],0x7
1001e361:	jne    0x1001daf2
1001e367:	cmp    BYTE PTR [ebp-0x4c],0x0
1001e36b:	je     0x1001e374
1001e36d:	mov    eax,DWORD PTR [ebp-0x50]
1001e370:	and    DWORD PTR [eax+0x70],0xfffffffd
1001e374:	mov    eax,DWORD PTR [ebp-0x2c]
1001e377:	mov    ecx,DWORD PTR [ebp+0x3f0]
1001e37d:	pop    edi
1001e37e:	pop    esi
1001e37f:	xor    ecx,ebp
1001e381:	pop    ebx
1001e382:	call   0x10015b2b
1001e387:	add    ebp,0x3f4
1001e38d:	leave  
1001e38e:	ret    
1001e38f:	push   edi
1001e390:	fld    QWORD PTR [ecx]
1001e392:	adc    BYTE PTR [ebx+ebx*8-0x2436efff],ch
1001e399:	add    DWORD PTR [eax],edx
1001e39b:	adc    eax,0x4f1001dc
1001e3a0:	fadd   QWORD PTR [ecx]
1001e3a2:	adc    BYTE PTR [eax-0x24],bl
1001e3a5:	add    DWORD PTR [eax],edx
1001e3a7:	(bad)  
1001e3a8:	fadd   QWORD PTR [ecx]
1001e3aa:	adc    BYTE PTR [eax-0x23],dh
1001e3ad:	add    DWORD PTR [eax],edx
1001e3af:	mov    eax,DWORD PTR [esp+0x4]
1001e3b3:	mov    ds:0x100977ac,eax
1001e3b8:	ret    
1001e3b9:	push   ebp
1001e3ba:	mov    ebp,esp
1001e3bc:	push   ecx
1001e3bd:	push   ecx
1001e3be:	mov    eax,DWORD PTR [ebp+0xc]
1001e3c1:	push   esi
1001e3c2:	mov    esi,DWORD PTR [ebp+0x8]
1001e3c5:	mov    DWORD PTR [ebp-0x8],eax
1001e3c8:	mov    eax,DWORD PTR [ebp+0x10]
1001e3cb:	push   edi
1001e3cc:	push   esi
1001e3cd:	mov    DWORD PTR [ebp-0x4],eax
1001e3d0:	call   0x1001e5d6
1001e3d5:	or     edi,0xffffffff
1001e3d8:	cmp    eax,edi
1001e3da:	pop    ecx
1001e3db:	jne    0x1001e3ee
1001e3dd:	call   0x1001a18e
1001e3e2:	mov    DWORD PTR [eax],0x9
1001e3e8:	mov    eax,edi
1001e3ea:	mov    edx,edi
1001e3ec:	jmp    0x1001e438
1001e3ee:	push   DWORD PTR [ebp+0x14]
1001e3f1:	lea    ecx,[ebp-0x4]
1001e3f4:	push   ecx
1001e3f5:	push   DWORD PTR [ebp-0x8]
1001e3f8:	push   eax
1001e3f9:	call   DWORD PTR ds:0x10034218
1001e3ff:	cmp    eax,edi
1001e401:	mov    DWORD PTR [ebp-0x8],eax
1001e404:	jne    0x1001e419
1001e406:	call   DWORD PTR ds:0x1003407c
1001e40c:	test   eax,eax
1001e40e:	je     0x1001e419
1001e410:	push   eax
1001e411:	call   0x1001a1b4
1001e416:	pop    ecx
1001e417:	jmp    0x1001e3e8
1001e419:	mov    eax,esi
1001e41b:	sar    eax,0x5
1001e41e:	mov    eax,DWORD PTR [eax*4+0x10098ae0]
1001e425:	and    esi,0x1f
1001e428:	shl    esi,0x6
1001e42b:	lea    eax,[eax+esi*1+0x4]
1001e42f:	and    BYTE PTR [eax],0xfd
1001e432:	mov    eax,DWORD PTR [ebp-0x8]
1001e435:	mov    edx,DWORD PTR [ebp-0x4]
1001e438:	pop    edi
1001e439:	pop    esi
1001e43a:	leave  
1001e43b:	ret    
1001e43c:	push   0x14
1001e43e:	push   0x10085a68
1001e443:	call   0x10017f88
1001e448:	or     esi,0xffffffff
1001e44b:	mov    DWORD PTR [ebp-0x24],esi
1001e44e:	mov    DWORD PTR [ebp-0x20],esi
1001e451:	mov    eax,DWORD PTR [ebp+0x8]
1001e454:	cmp    eax,0xfffffffe
1001e457:	jne    0x1001e475
1001e459:	call   0x1001a1a1
1001e45e:	and    DWORD PTR [eax],0x0
1001e461:	call   0x1001a18e
1001e466:	mov    DWORD PTR [eax],0x9
1001e46c:	mov    eax,esi
1001e46e:	mov    edx,esi
1001e470:	jmp    0x1001e545
1001e475:	xor    edi,edi
1001e477:	cmp    eax,edi
1001e479:	jl     0x1001e483
1001e47b:	cmp    eax,DWORD PTR ds:0x10098ac4
1001e481:	jb     0x1001e4a4
1001e483:	call   0x1001a1a1
1001e488:	mov    DWORD PTR [eax],edi
1001e48a:	call   0x1001a18e
1001e48f:	mov    DWORD PTR [eax],0x9
1001e495:	push   edi
1001e496:	push   edi
1001e497:	push   edi
1001e498:	push   edi
1001e499:	push   edi
1001e49a:	call   0x1001616f
1001e49f:	add    esp,0x14
1001e4a2:	jmp    0x1001e46c
1001e4a4:	mov    ecx,eax
1001e4a6:	sar    ecx,0x5
1001e4a9:	lea    ebx,[ecx*4+0x10098ae0]
1001e4b0:	mov    esi,eax
1001e4b2:	and    esi,0x1f
1001e4b5:	shl    esi,0x6
1001e4b8:	mov    ecx,DWORD PTR [ebx]
1001e4ba:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
1001e4bf:	and    ecx,0x1
1001e4c2:	jne    0x1001e4ea
1001e4c4:	call   0x1001a1a1
1001e4c9:	mov    DWORD PTR [eax],edi
1001e4cb:	call   0x1001a18e
1001e4d0:	mov    DWORD PTR [eax],0x9
1001e4d6:	push   edi
1001e4d7:	push   edi
1001e4d8:	push   edi
1001e4d9:	push   edi
1001e4da:	push   edi
1001e4db:	call   0x1001616f
1001e4e0:	add    esp,0x14
1001e4e3:	or     edx,0xffffffff
1001e4e6:	mov    eax,edx
1001e4e8:	jmp    0x1001e545
1001e4ea:	push   eax
1001e4eb:	call   0x1001e647
1001e4f0:	pop    ecx
1001e4f1:	mov    DWORD PTR [ebp-0x4],edi
1001e4f4:	mov    eax,DWORD PTR [ebx]
1001e4f6:	test   BYTE PTR [eax+esi*1+0x4],0x1
1001e4fb:	je     0x1001e519
1001e4fd:	push   DWORD PTR [ebp+0x14]
1001e500:	push   DWORD PTR [ebp+0x10]
1001e503:	push   DWORD PTR [ebp+0xc]
1001e506:	push   DWORD PTR [ebp+0x8]
1001e509:	call   0x1001e3b9
1001e50e:	add    esp,0x10
1001e511:	mov    DWORD PTR [ebp-0x24],eax
1001e514:	mov    DWORD PTR [ebp-0x20],edx
1001e517:	jmp    0x1001e533
1001e519:	call   0x1001a18e
1001e51e:	mov    DWORD PTR [eax],0x9
1001e524:	call   0x1001a1a1
1001e529:	mov    DWORD PTR [eax],edi
1001e52b:	or     DWORD PTR [ebp-0x24],0xffffffff
1001e52f:	or     DWORD PTR [ebp-0x20],0xffffffff
1001e533:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001e53a:	call   0x1001e54b
1001e53f:	mov    eax,DWORD PTR [ebp-0x24]
1001e542:	mov    edx,DWORD PTR [ebp-0x20]
1001e545:	call   0x10017fcd
1001e54a:	ret    
1001e54b:	push   DWORD PTR [ebp+0x8]
1001e54e:	call   0x1001e6e7
1001e553:	pop    ecx
1001e554:	ret    
1001e555:	mov    ecx,DWORD PTR [esp+0x4]
1001e559:	push   ebx
1001e55a:	xor    ebx,ebx
1001e55c:	cmp    ecx,ebx
1001e55e:	push   esi
1001e55f:	push   edi
1001e560:	jl     0x1001e5bd
1001e562:	cmp    ecx,DWORD PTR ds:0x10098ac4
1001e568:	jae    0x1001e5bd
1001e56a:	mov    eax,ecx
1001e56c:	sar    eax,0x5
1001e56f:	mov    esi,ecx
1001e571:	lea    edi,[eax*4+0x10098ae0]
1001e578:	mov    eax,DWORD PTR [edi]
1001e57a:	and    esi,0x1f
1001e57d:	shl    esi,0x6
1001e580:	add    eax,esi
1001e582:	test   BYTE PTR [eax+0x4],0x1
1001e586:	je     0x1001e5bd
1001e588:	cmp    DWORD PTR [eax],0xffffffff
1001e58b:	je     0x1001e5bd
1001e58d:	cmp    DWORD PTR ds:0x10096e44,0x1
1001e594:	jne    0x1001e5b3
1001e596:	sub    ecx,ebx
1001e598:	je     0x1001e5aa
1001e59a:	dec    ecx
1001e59b:	je     0x1001e5a5
1001e59d:	dec    ecx
1001e59e:	jne    0x1001e5b3
1001e5a0:	push   ebx
1001e5a1:	push   0xfffffff4
1001e5a3:	jmp    0x1001e5ad
1001e5a5:	push   ebx
1001e5a6:	push   0xfffffff5
1001e5a8:	jmp    0x1001e5ad
1001e5aa:	push   ebx
1001e5ab:	push   0xfffffff6
1001e5ad:	call   DWORD PTR ds:0x10034174
1001e5b3:	mov    eax,DWORD PTR [edi]
1001e5b5:	or     DWORD PTR [esi+eax*1],0xffffffff
1001e5b9:	xor    eax,eax
1001e5bb:	jmp    0x1001e5d2
1001e5bd:	call   0x1001a18e
1001e5c2:	mov    DWORD PTR [eax],0x9
1001e5c8:	call   0x1001a1a1
1001e5cd:	mov    DWORD PTR [eax],ebx
1001e5cf:	or     eax,0xffffffff
1001e5d2:	pop    edi
1001e5d3:	pop    esi
1001e5d4:	pop    ebx
1001e5d5:	ret    
1001e5d6:	mov    eax,DWORD PTR [esp+0x4]
1001e5da:	cmp    eax,0xfffffffe
1001e5dd:	jne    0x1001e5f6
1001e5df:	call   0x1001a1a1
1001e5e4:	and    DWORD PTR [eax],0x0
1001e5e7:	call   0x1001a18e
1001e5ec:	mov    DWORD PTR [eax],0x9
1001e5f2:	or     eax,0xffffffff
1001e5f5:	ret    
1001e5f6:	push   esi
1001e5f7:	xor    esi,esi
1001e5f9:	cmp    eax,esi
1001e5fb:	jl     0x1001e61f
1001e5fd:	cmp    eax,DWORD PTR ds:0x10098ac4
1001e603:	jae    0x1001e61f
1001e605:	mov    ecx,eax
1001e607:	and    eax,0x1f
1001e60a:	sar    ecx,0x5
1001e60d:	mov    ecx,DWORD PTR [ecx*4+0x10098ae0]
1001e614:	shl    eax,0x6
1001e617:	add    eax,ecx
1001e619:	test   BYTE PTR [eax+0x4],0x1
1001e61d:	jne    0x1001e643
1001e61f:	call   0x1001a1a1
1001e624:	mov    DWORD PTR [eax],esi
1001e626:	call   0x1001a18e
1001e62b:	push   esi
1001e62c:	push   esi
1001e62d:	push   esi
1001e62e:	push   esi
1001e62f:	push   esi
1001e630:	mov    DWORD PTR [eax],0x9
1001e636:	call   0x1001616f
1001e63b:	add    esp,0x14
1001e63e:	or     eax,0xffffffff
1001e641:	pop    esi
1001e642:	ret    
1001e643:	mov    eax,DWORD PTR [eax]
1001e645:	pop    esi
1001e646:	ret    
1001e647:	push   0xc
1001e649:	push   0x10085a88
1001e64e:	call   0x10017f88
1001e653:	mov    edi,DWORD PTR [ebp+0x8]
1001e656:	mov    eax,edi
1001e658:	sar    eax,0x5
1001e65b:	mov    esi,edi
1001e65d:	and    esi,0x1f
1001e660:	shl    esi,0x6
1001e663:	add    esi,DWORD PTR [eax*4+0x10098ae0]
1001e66a:	mov    DWORD PTR [ebp-0x1c],0x1
1001e671:	xor    ebx,ebx
1001e673:	cmp    DWORD PTR [esi+0x8],ebx
1001e676:	jne    0x1001e6ae
1001e678:	push   0xa
1001e67a:	call   0x1001b83b
1001e67f:	pop    ecx
1001e680:	mov    DWORD PTR [ebp-0x4],ebx
1001e683:	cmp    DWORD PTR [esi+0x8],ebx
1001e686:	jne    0x1001e6a2
1001e688:	push   0xfa0
1001e68d:	lea    eax,[esi+0xc]
1001e690:	push   eax
1001e691:	call   0x10020f0a
1001e696:	pop    ecx
1001e697:	pop    ecx
1001e698:	test   eax,eax
1001e69a:	jne    0x1001e69f
1001e69c:	mov    DWORD PTR [ebp-0x1c],ebx
1001e69f:	inc    DWORD PTR [esi+0x8]
1001e6a2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001e6a9:	call   0x1001e6de
1001e6ae:	cmp    DWORD PTR [ebp-0x1c],ebx
1001e6b1:	je     0x1001e6d0
1001e6b3:	mov    eax,edi
1001e6b5:	sar    eax,0x5
1001e6b8:	and    edi,0x1f
1001e6bb:	shl    edi,0x6
1001e6be:	mov    eax,DWORD PTR [eax*4+0x10098ae0]
1001e6c5:	lea    eax,[eax+edi*1+0xc]
1001e6c9:	push   eax
1001e6ca:	call   DWORD PTR ds:0x100341f4
1001e6d0:	mov    eax,DWORD PTR [ebp-0x1c]
1001e6d3:	call   0x10017fcd
1001e6d8:	ret    
1001e6d9:	xor    ebx,ebx
1001e6db:	mov    edi,DWORD PTR [ebp+0x8]
1001e6de:	push   0xa
1001e6e0:	call   0x1001b763
1001e6e5:	pop    ecx
1001e6e6:	ret    
1001e6e7:	mov    eax,DWORD PTR [esp+0x4]
1001e6eb:	mov    ecx,eax
1001e6ed:	and    eax,0x1f
1001e6f0:	sar    ecx,0x5
1001e6f3:	mov    ecx,DWORD PTR [ecx*4+0x10098ae0]
1001e6fa:	shl    eax,0x6
1001e6fd:	lea    eax,[ecx+eax*1+0xc]
1001e701:	push   eax
1001e702:	call   DWORD PTR ds:0x100341f8
1001e708:	ret    
1001e709:	int3   
1001e70a:	int3   
1001e70b:	int3   
1001e70c:	int3   
1001e70d:	int3   
1001e70e:	int3   
1001e70f:	int3   
1001e710:	push   esi
1001e711:	mov    eax,DWORD PTR [esp+0x14]
1001e715:	or     eax,eax
1001e717:	jne    0x1001e741
1001e719:	mov    ecx,DWORD PTR [esp+0x10]
1001e71d:	mov    eax,DWORD PTR [esp+0xc]
1001e721:	xor    edx,edx
1001e723:	div    ecx
1001e725:	mov    ebx,eax
1001e727:	mov    eax,DWORD PTR [esp+0x8]
1001e72b:	div    ecx
1001e72d:	mov    esi,eax
1001e72f:	mov    eax,ebx
1001e731:	mul    DWORD PTR [esp+0x10]
1001e735:	mov    ecx,eax
1001e737:	mov    eax,esi
1001e739:	mul    DWORD PTR [esp+0x10]
1001e73d:	add    edx,ecx
1001e73f:	jmp    0x1001e788
1001e741:	mov    ecx,eax
1001e743:	mov    ebx,DWORD PTR [esp+0x10]
1001e747:	mov    edx,DWORD PTR [esp+0xc]
1001e74b:	mov    eax,DWORD PTR [esp+0x8]
1001e74f:	shr    ecx,1
1001e751:	rcr    ebx,1
1001e753:	shr    edx,1
1001e755:	rcr    eax,1
1001e757:	or     ecx,ecx
1001e759:	jne    0x1001e74f
1001e75b:	div    ebx
1001e75d:	mov    esi,eax
1001e75f:	mul    DWORD PTR [esp+0x14]
1001e763:	mov    ecx,eax
1001e765:	mov    eax,DWORD PTR [esp+0x10]
1001e769:	mul    esi
1001e76b:	add    edx,ecx
1001e76d:	jb     0x1001e77d
1001e76f:	cmp    edx,DWORD PTR [esp+0xc]
1001e773:	ja     0x1001e77d
1001e775:	jb     0x1001e786
1001e777:	cmp    eax,DWORD PTR [esp+0x8]
1001e77b:	jbe    0x1001e786
1001e77d:	dec    esi
1001e77e:	sub    eax,DWORD PTR [esp+0x10]
1001e782:	sbb    edx,DWORD PTR [esp+0x14]
1001e786:	xor    ebx,ebx
1001e788:	sub    eax,DWORD PTR [esp+0x8]
1001e78c:	sbb    edx,DWORD PTR [esp+0xc]
1001e790:	neg    edx
1001e792:	neg    eax
1001e794:	sbb    edx,0x0
1001e797:	mov    ecx,edx
1001e799:	mov    edx,ebx
1001e79b:	mov    ebx,ecx
1001e79d:	mov    ecx,eax
1001e79f:	mov    eax,esi
1001e7a1:	pop    esi
1001e7a2:	ret    0x10
1001e7a5:	mov    eax,0x10095dc0
1001e7aa:	ret    
1001e7ab:	mov    eax,ds:0x10098ac0
1001e7b0:	test   eax,eax
1001e7b2:	push   esi
1001e7b3:	push   0x14
1001e7b5:	pop    esi
1001e7b6:	jne    0x1001e7bf
1001e7b8:	mov    eax,0x200
1001e7bd:	jmp    0x1001e7c5
1001e7bf:	cmp    eax,esi
1001e7c1:	jge    0x1001e7ca
1001e7c3:	mov    eax,esi
1001e7c5:	mov    ds:0x10098ac0,eax
1001e7ca:	push   0x4
1001e7cc:	push   eax
1001e7cd:	call   0x10018775
1001e7d2:	test   eax,eax
1001e7d4:	pop    ecx
1001e7d5:	pop    ecx
1001e7d6:	mov    ds:0x10097ab8,eax
1001e7db:	jne    0x1001e7fb
1001e7dd:	push   0x4
1001e7df:	push   esi
1001e7e0:	mov    DWORD PTR ds:0x10098ac0,esi
1001e7e6:	call   0x10018775
1001e7eb:	test   eax,eax
1001e7ed:	pop    ecx
1001e7ee:	pop    ecx
1001e7ef:	mov    ds:0x10097ab8,eax
1001e7f4:	jne    0x1001e7fb
1001e7f6:	push   0x1a
1001e7f8:	pop    eax
1001e7f9:	pop    esi
1001e7fa:	ret    
1001e7fb:	xor    edx,edx
1001e7fd:	mov    ecx,0x10095dc0
1001e802:	jmp    0x1001e809
1001e804:	mov    eax,ds:0x10097ab8
1001e809:	mov    DWORD PTR [edx+eax*1],ecx
1001e80c:	add    ecx,0x20
1001e80f:	add    edx,0x4
1001e812:	cmp    ecx,0x10096040
1001e818:	jl     0x1001e804
1001e81a:	push   0xfffffffe
1001e81c:	pop    esi
1001e81d:	xor    edx,edx
1001e81f:	mov    ecx,0x10095dd0
1001e824:	push   edi
1001e825:	mov    eax,edx
1001e827:	sar    eax,0x5
1001e82a:	mov    eax,DWORD PTR [eax*4+0x10098ae0]
1001e831:	mov    edi,edx
1001e833:	and    edi,0x1f
1001e836:	shl    edi,0x6
1001e839:	mov    eax,DWORD PTR [edi+eax*1]
1001e83c:	cmp    eax,0xffffffff
1001e83f:	je     0x1001e849
1001e841:	cmp    eax,esi
1001e843:	je     0x1001e849
1001e845:	test   eax,eax
1001e847:	jne    0x1001e84b
1001e849:	mov    DWORD PTR [ecx],esi
1001e84b:	add    ecx,0x20
1001e84e:	inc    edx
1001e84f:	cmp    ecx,0x10095e30
1001e855:	jl     0x1001e825
1001e857:	pop    edi
1001e858:	xor    eax,eax
1001e85a:	pop    esi
1001e85b:	ret    
1001e85c:	call   0x1001ec72
1001e861:	cmp    BYTE PTR ds:0x100971cc,0x0
1001e868:	je     0x1001e86f
1001e86a:	call   0x10021a33
1001e86f:	push   DWORD PTR ds:0x10097ab8
1001e875:	call   0x10016b85
1001e87a:	pop    ecx
1001e87b:	ret    
1001e87c:	push   esi
1001e87d:	mov    esi,DWORD PTR [esp+0x8]
1001e881:	mov    eax,0x10095dc0
1001e886:	cmp    esi,eax
1001e888:	jb     0x1001e8ac
1001e88a:	cmp    esi,0x10096020
1001e890:	ja     0x1001e8ac
1001e892:	mov    ecx,esi
1001e894:	sub    ecx,eax
1001e896:	sar    ecx,0x5
1001e899:	add    ecx,0x10
1001e89c:	push   ecx
1001e89d:	call   0x1001b83b
1001e8a2:	or     DWORD PTR [esi+0xc],0x8000
1001e8a9:	pop    ecx
1001e8aa:	pop    esi
1001e8ab:	ret    
1001e8ac:	add    esi,0x20
1001e8af:	push   esi
1001e8b0:	call   DWORD PTR ds:0x100341f4
1001e8b6:	pop    esi
1001e8b7:	ret    
1001e8b8:	mov    eax,DWORD PTR [esp+0x4]
1001e8bc:	cmp    eax,0x14
1001e8bf:	jge    0x1001e8d7
1001e8c1:	add    eax,0x10
1001e8c4:	push   eax
1001e8c5:	call   0x1001b83b
1001e8ca:	mov    eax,DWORD PTR [esp+0xc]
1001e8ce:	or     DWORD PTR [eax+0xc],0x8000
1001e8d5:	pop    ecx
1001e8d6:	ret    
1001e8d7:	mov    eax,DWORD PTR [esp+0x8]
1001e8db:	add    eax,0x20
1001e8de:	push   eax
1001e8df:	call   DWORD PTR ds:0x100341f4
1001e8e5:	ret    
1001e8e6:	mov    eax,DWORD PTR [esp+0x4]
1001e8ea:	mov    ecx,0x10095dc0
1001e8ef:	cmp    eax,ecx
1001e8f1:	jb     0x1001e911
1001e8f3:	cmp    eax,0x10096020
1001e8f8:	ja     0x1001e911
1001e8fa:	and    DWORD PTR [eax+0xc],0xffff7fff
1001e901:	sub    eax,ecx
1001e903:	sar    eax,0x5
1001e906:	add    eax,0x10
1001e909:	push   eax
1001e90a:	call   0x1001b763
1001e90f:	pop    ecx
1001e910:	ret    
1001e911:	add    eax,0x20
1001e914:	push   eax
1001e915:	call   DWORD PTR ds:0x100341f8
1001e91b:	ret    
1001e91c:	mov    ecx,DWORD PTR [esp+0x4]
1001e920:	cmp    ecx,0x14
1001e923:	mov    eax,DWORD PTR [esp+0x8]
1001e927:	jge    0x1001e93b
1001e929:	and    DWORD PTR [eax+0xc],0xffff7fff
1001e930:	add    ecx,0x10
1001e933:	push   ecx
1001e934:	call   0x1001b763
1001e939:	pop    ecx
1001e93a:	ret    
1001e93b:	add    eax,0x20
1001e93e:	push   eax
1001e93f:	call   DWORD PTR ds:0x100341f8
1001e945:	ret    
1001e946:	int3   
1001e947:	int3   
1001e948:	push   ebx
1001e949:	push   esi
1001e94a:	push   edi
1001e94b:	mov    edx,DWORD PTR [esp+0x10]
1001e94f:	mov    eax,DWORD PTR [esp+0x14]
1001e953:	mov    ecx,DWORD PTR [esp+0x18]
1001e957:	push   ebp
1001e958:	push   edx
1001e959:	push   eax
1001e95a:	push   ecx
1001e95b:	push   ecx
1001e95c:	push   0x1001e9d8
1001e961:	push   DWORD PTR fs:0x0
1001e968:	mov    eax,ds:0x100951fc
1001e96d:	xor    eax,esp
1001e96f:	mov    DWORD PTR [esp+0x8],eax
1001e973:	mov    DWORD PTR fs:0x0,esp
1001e97a:	mov    eax,DWORD PTR [esp+0x30]
1001e97e:	mov    ebx,DWORD PTR [eax+0x8]
1001e981:	mov    ecx,DWORD PTR [esp+0x2c]
1001e985:	xor    ebx,DWORD PTR [ecx]
1001e987:	mov    esi,DWORD PTR [eax+0xc]
1001e98a:	cmp    esi,0xfffffffe
1001e98d:	je     0x1001e9ca
1001e98f:	mov    edx,DWORD PTR [esp+0x34]
1001e993:	cmp    edx,0xfffffffe
1001e996:	je     0x1001e99c
1001e998:	cmp    esi,edx
1001e99a:	jbe    0x1001e9ca
1001e99c:	lea    esi,[esi+esi*2]
1001e99f:	lea    ebx,[ebx+esi*4+0x10]
1001e9a3:	mov    ecx,DWORD PTR [ebx]
1001e9a5:	mov    DWORD PTR [eax+0xc],ecx
1001e9a8:	cmp    DWORD PTR [ebx+0x4],0x0
1001e9ac:	jne    0x1001e97a
1001e9ae:	push   0x101
1001e9b3:	mov    eax,DWORD PTR [ebx+0x8]
1001e9b6:	call   0x10020ea5
1001e9bb:	mov    ecx,0x1
1001e9c0:	mov    eax,DWORD PTR [ebx+0x8]
1001e9c3:	call   0x10020ec4
1001e9c8:	jmp    0x1001e97a
1001e9ca:	pop    DWORD PTR fs:0x0
1001e9d1:	add    esp,0x18
1001e9d4:	pop    edi
1001e9d5:	pop    esi
1001e9d6:	pop    ebx
1001e9d7:	ret    
1001e9d8:	mov    ecx,DWORD PTR [esp+0x4]
1001e9dc:	test   DWORD PTR [ecx+0x4],0x6
1001e9e3:	mov    eax,0x1
1001e9e8:	je     0x1001ea1d
1001e9ea:	mov    eax,DWORD PTR [esp+0x8]
1001e9ee:	mov    ecx,DWORD PTR [eax+0x8]
1001e9f1:	xor    ecx,eax
1001e9f3:	call   0x10015b2b
1001e9f8:	push   ebp
1001e9f9:	mov    ebp,DWORD PTR [eax+0x18]
1001e9fc:	push   DWORD PTR [eax+0xc]
1001e9ff:	push   DWORD PTR [eax+0x10]
1001ea02:	push   DWORD PTR [eax+0x14]
1001ea05:	call   0x1001e948
1001ea0a:	add    esp,0xc
1001ea0d:	pop    ebp
1001ea0e:	mov    eax,DWORD PTR [esp+0x8]
1001ea12:	mov    edx,DWORD PTR [esp+0x10]
1001ea16:	mov    DWORD PTR [edx],eax
1001ea18:	mov    eax,0x3
1001ea1d:	ret    
1001ea1e:	push   ebp
1001ea1f:	mov    ecx,DWORD PTR [esp+0x8]
1001ea23:	mov    ebp,DWORD PTR [ecx]
1001ea25:	push   DWORD PTR [ecx+0x1c]
1001ea28:	push   DWORD PTR [ecx+0x18]
1001ea2b:	push   DWORD PTR [ecx+0x28]
1001ea2e:	call   0x1001e948
1001ea33:	add    esp,0xc
1001ea36:	pop    ebp
1001ea37:	ret    0x4
1001ea3a:	push   ebp
1001ea3b:	push   esi
1001ea3c:	push   edi
1001ea3d:	push   ebx
1001ea3e:	mov    ebp,edx
1001ea40:	xor    eax,eax
1001ea42:	xor    ebx,ebx
1001ea44:	xor    edx,edx
1001ea46:	xor    esi,esi
1001ea48:	xor    edi,edi
1001ea4a:	call   ecx
1001ea4c:	pop    ebx
1001ea4d:	pop    edi
1001ea4e:	pop    esi
1001ea4f:	pop    ebp
1001ea50:	ret    
1001ea51:	mov    ebp,edx
1001ea53:	mov    esi,ecx
1001ea55:	mov    eax,ecx
1001ea57:	push   0x1
1001ea59:	call   0x10020ea5
1001ea5e:	xor    eax,eax
1001ea60:	xor    ebx,ebx
1001ea62:	xor    ecx,ecx
1001ea64:	xor    edx,edx
1001ea66:	xor    edi,edi
1001ea68:	jmp    esi
1001ea6a:	push   ebp
1001ea6b:	mov    ebp,esp
1001ea6d:	push   ebx
1001ea6e:	push   esi
1001ea6f:	push   edi
1001ea70:	push   0x0
1001ea72:	push   0x0
1001ea74:	push   0x1001ea7f
1001ea79:	push   ecx
1001ea7a:	call   0x1002a06e
1001ea7f:	pop    edi
1001ea80:	pop    esi
1001ea81:	pop    ebx
1001ea82:	pop    ebp
1001ea83:	ret    
1001ea84:	push   ebp
1001ea85:	mov    ebp,DWORD PTR [esp+0x8]
1001ea89:	push   edx
1001ea8a:	push   ecx
1001ea8b:	push   DWORD PTR [esp+0x14]
1001ea8f:	call   0x1001e948
1001ea94:	add    esp,0xc
1001ea97:	pop    ebp
1001ea98:	ret    0x8
1001ea9b:	mov    eax,DWORD PTR [esp+0x4]
1001ea9f:	push   esi
1001eaa0:	xor    esi,esi
1001eaa2:	cmp    eax,esi
1001eaa4:	jne    0x1001eac3
1001eaa6:	call   0x1001a18e
1001eaab:	push   esi
1001eaac:	push   esi
1001eaad:	push   esi
1001eaae:	push   esi
1001eaaf:	push   esi
1001eab0:	mov    DWORD PTR [eax],0x16
1001eab6:	call   0x1001616f
1001eabb:	add    esp,0x14
1001eabe:	or     eax,0xffffffff
1001eac1:	pop    esi
1001eac2:	ret    
1001eac3:	mov    eax,DWORD PTR [eax+0x10]
1001eac6:	pop    esi
1001eac7:	ret    
1001eac8:	push   esi
1001eac9:	mov    esi,DWORD PTR [esp+0x8]
1001eacd:	mov    eax,DWORD PTR [esi+0xc]
1001ead0:	test   al,0x83
1001ead2:	je     0x1001eaf2
1001ead4:	test   al,0x8
1001ead6:	je     0x1001eaf2
1001ead8:	push   DWORD PTR [esi+0x8]
1001eadb:	call   0x10016b85
1001eae0:	and    DWORD PTR [esi+0xc],0xfffffbf7
1001eae7:	xor    eax,eax
1001eae9:	pop    ecx
1001eaea:	mov    DWORD PTR [esi],eax
1001eaec:	mov    DWORD PTR [esi+0x8],eax
1001eaef:	mov    DWORD PTR [esi+0x4],eax
1001eaf2:	pop    esi
1001eaf3:	ret    
1001eaf4:	push   ebx
1001eaf5:	push   esi
1001eaf6:	mov    esi,DWORD PTR [esp+0xc]
1001eafa:	mov    eax,DWORD PTR [esi+0xc]
1001eafd:	mov    ecx,eax
1001eaff:	and    cl,0x3
1001eb02:	xor    ebx,ebx
1001eb04:	cmp    cl,0x2
1001eb07:	jne    0x1001eb48
1001eb09:	test   ax,0x108
1001eb0d:	je     0x1001eb48
1001eb0f:	mov    eax,DWORD PTR [esi+0x8]
1001eb12:	push   edi
1001eb13:	mov    edi,DWORD PTR [esi]
1001eb15:	sub    edi,eax
1001eb17:	test   edi,edi
1001eb19:	jle    0x1001eb47
1001eb1b:	push   edi
1001eb1c:	push   eax
1001eb1d:	push   esi
1001eb1e:	call   0x1001ea9b
1001eb23:	pop    ecx
1001eb24:	push   eax
1001eb25:	call   0x1001fd88
1001eb2a:	add    esp,0xc
1001eb2d:	cmp    eax,edi
1001eb2f:	jne    0x1001eb40
1001eb31:	mov    eax,DWORD PTR [esi+0xc]
1001eb34:	test   al,al
1001eb36:	jns    0x1001eb47
1001eb38:	and    eax,0xfffffffd
1001eb3b:	mov    DWORD PTR [esi+0xc],eax
1001eb3e:	jmp    0x1001eb47
1001eb40:	or     DWORD PTR [esi+0xc],0x20
1001eb44:	or     ebx,0xffffffff
1001eb47:	pop    edi
1001eb48:	mov    eax,DWORD PTR [esi+0x8]
1001eb4b:	and    DWORD PTR [esi+0x4],0x0
1001eb4f:	mov    DWORD PTR [esi],eax
1001eb51:	pop    esi
1001eb52:	mov    eax,ebx
1001eb54:	pop    ebx
1001eb55:	ret    
1001eb56:	push   esi
1001eb57:	mov    esi,DWORD PTR [esp+0x8]
1001eb5b:	test   esi,esi
1001eb5d:	jne    0x1001eb68
1001eb5f:	push   esi
1001eb60:	call   0x1001eb98
1001eb65:	pop    ecx
1001eb66:	pop    esi
1001eb67:	ret    
1001eb68:	push   esi
1001eb69:	call   0x1001eaf4
1001eb6e:	test   eax,eax
1001eb70:	pop    ecx
1001eb71:	je     0x1001eb78
1001eb73:	or     eax,0xffffffff
1001eb76:	pop    esi
1001eb77:	ret    
1001eb78:	test   WORD PTR [esi+0xc],0x4000
1001eb7e:	je     0x1001eb94
1001eb80:	push   esi
1001eb81:	call   0x1001ea9b
1001eb86:	push   eax
1001eb87:	call   0x10021ad2
1001eb8c:	pop    ecx
1001eb8d:	pop    ecx
1001eb8e:	neg    eax
1001eb90:	sbb    eax,eax
1001eb92:	pop    esi
1001eb93:	ret    
1001eb94:	xor    eax,eax
1001eb96:	pop    esi
1001eb97:	ret    
1001eb98:	push   0x14
1001eb9a:	push   0x10085aa8
1001eb9f:	call   0x10017f88
1001eba4:	xor    edi,edi
1001eba6:	mov    DWORD PTR [ebp-0x1c],edi
1001eba9:	mov    DWORD PTR [ebp-0x24],edi
1001ebac:	push   0x1
1001ebae:	call   0x1001b83b
1001ebb3:	pop    ecx
1001ebb4:	mov    DWORD PTR [ebp-0x4],edi
1001ebb7:	xor    esi,esi
1001ebb9:	mov    DWORD PTR [ebp-0x20],esi
1001ebbc:	cmp    esi,DWORD PTR ds:0x10098ac0
1001ebc2:	jge    0x1001ec4b
1001ebc8:	mov    eax,ds:0x10097ab8
1001ebcd:	lea    eax,[eax+esi*4]
1001ebd0:	cmp    DWORD PTR [eax],edi
1001ebd2:	je     0x1001ec32
1001ebd4:	mov    eax,DWORD PTR [eax]
1001ebd6:	test   BYTE PTR [eax+0xc],0x83
1001ebda:	je     0x1001ec32
1001ebdc:	push   eax
1001ebdd:	push   esi
1001ebde:	call   0x1001e8b8
1001ebe3:	pop    ecx
1001ebe4:	pop    ecx
1001ebe5:	xor    edx,edx
1001ebe7:	inc    edx
1001ebe8:	mov    DWORD PTR [ebp-0x4],edx
1001ebeb:	mov    eax,ds:0x10097ab8
1001ebf0:	mov    eax,DWORD PTR [eax+esi*4]
1001ebf3:	mov    ecx,DWORD PTR [eax+0xc]
1001ebf6:	test   cl,0x83
1001ebf9:	je     0x1001ec2a
1001ebfb:	cmp    DWORD PTR [ebp+0x8],edx
1001ebfe:	jne    0x1001ec11
1001ec00:	push   eax
1001ec01:	call   0x1001eb56
1001ec06:	pop    ecx
1001ec07:	cmp    eax,0xffffffff
1001ec0a:	je     0x1001ec2a
1001ec0c:	inc    DWORD PTR [ebp-0x1c]
1001ec0f:	jmp    0x1001ec2a
1001ec11:	cmp    DWORD PTR [ebp+0x8],edi
1001ec14:	jne    0x1001ec2a
1001ec16:	test   cl,0x2
1001ec19:	je     0x1001ec2a
1001ec1b:	push   eax
1001ec1c:	call   0x1001eb56
1001ec21:	pop    ecx
1001ec22:	cmp    eax,0xffffffff
1001ec25:	jne    0x1001ec2a
1001ec27:	or     DWORD PTR [ebp-0x24],eax
1001ec2a:	mov    DWORD PTR [ebp-0x4],edi
1001ec2d:	call   0x1001ec3a
1001ec32:	inc    esi
1001ec33:	jmp    0x1001ebb9
1001ec35:	xor    edi,edi
1001ec37:	mov    esi,DWORD PTR [ebp-0x20]
1001ec3a:	mov    eax,ds:0x10097ab8
1001ec3f:	push   DWORD PTR [eax+esi*4]
1001ec42:	push   esi
1001ec43:	call   0x1001e91c
1001ec48:	pop    ecx
1001ec49:	pop    ecx
1001ec4a:	ret    
1001ec4b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001ec52:	call   0x1001ec69
1001ec57:	cmp    DWORD PTR [ebp+0x8],0x1
1001ec5b:	mov    eax,DWORD PTR [ebp-0x1c]
1001ec5e:	je     0x1001ec63
1001ec60:	mov    eax,DWORD PTR [ebp-0x24]
1001ec63:	call   0x10017fcd
1001ec68:	ret    
1001ec69:	push   0x1
1001ec6b:	call   0x1001b763
1001ec70:	pop    ecx
1001ec71:	ret    
1001ec72:	push   0x1
1001ec74:	call   0x1001eb98
1001ec79:	pop    ecx
1001ec7a:	ret    
1001ec7b:	test   BYTE PTR [ecx+0xc],0x40
1001ec7f:	je     0x1001ec87
1001ec81:	cmp    DWORD PTR [ecx+0x8],0x0
1001ec85:	je     0x1001ecab
1001ec87:	dec    DWORD PTR [ecx+0x4]
1001ec8a:	js     0x1001ec97
1001ec8c:	mov    edx,DWORD PTR [ecx]
1001ec8e:	mov    BYTE PTR [edx],al
1001ec90:	inc    DWORD PTR [ecx]
1001ec92:	movzx  eax,al
1001ec95:	jmp    0x1001eca3
1001ec97:	movsx  eax,al
1001ec9a:	push   ecx
1001ec9b:	push   eax
1001ec9c:	call   0x1001cf8a
1001eca1:	pop    ecx
1001eca2:	pop    ecx
1001eca3:	cmp    eax,0xffffffff
1001eca6:	jne    0x1001ecab
1001eca8:	or     DWORD PTR [esi],eax
1001ecaa:	ret    
1001ecab:	inc    DWORD PTR [esi]
1001ecad:	ret    
1001ecae:	push   ebp
1001ecaf:	mov    ebp,esp
1001ecb1:	push   esi
1001ecb2:	mov    esi,eax
1001ecb4:	jmp    0x1001ecc9
1001ecb6:	mov    ecx,DWORD PTR [ebp+0x10]
1001ecb9:	mov    al,BYTE PTR [ebp+0x8]
1001ecbc:	dec    DWORD PTR [ebp+0xc]
1001ecbf:	call   0x1001ec7b
1001ecc4:	cmp    DWORD PTR [esi],0xffffffff
1001ecc7:	je     0x1001eccf
1001ecc9:	cmp    DWORD PTR [ebp+0xc],0x0
1001eccd:	jg     0x1001ecb6
1001eccf:	pop    esi
1001ecd0:	pop    ebp
1001ecd1:	ret    
1001ecd2:	test   BYTE PTR [edi+0xc],0x40
1001ecd6:	push   ebx
1001ecd7:	push   esi
1001ecd8:	mov    esi,eax
1001ecda:	mov    ebx,ecx
1001ecdc:	je     0x1001ed12
1001ecde:	cmp    DWORD PTR [edi+0x8],0x0
1001ece2:	jne    0x1001ed12
1001ece4:	mov    eax,DWORD PTR [esp+0xc]
1001ece8:	add    DWORD PTR [esi],eax
1001ecea:	jmp    0x1001ed19
1001ecec:	mov    al,BYTE PTR [ebx]
1001ecee:	dec    DWORD PTR [esp+0xc]
1001ecf2:	mov    ecx,edi
1001ecf4:	call   0x1001ec7b
1001ecf9:	inc    ebx
1001ecfa:	cmp    DWORD PTR [esi],0xffffffff
1001ecfd:	jne    0x1001ed12
1001ecff:	call   0x1001a18e
1001ed04:	cmp    DWORD PTR [eax],0x2a
1001ed07:	jne    0x1001ed19
1001ed09:	mov    ecx,edi
1001ed0b:	mov    al,0x3f
1001ed0d:	call   0x1001ec7b
1001ed12:	cmp    DWORD PTR [esp+0xc],0x0
1001ed17:	jg     0x1001ecec
1001ed19:	pop    esi
1001ed1a:	pop    ebx
1001ed1b:	ret    
1001ed1c:	push   ebp
1001ed1d:	lea    ebp,[esp-0x1f8]
1001ed24:	sub    esp,0x278
1001ed2a:	mov    eax,ds:0x100951fc
1001ed2f:	xor    eax,ebp
1001ed31:	mov    DWORD PTR [ebp+0x1f4],eax
1001ed37:	mov    eax,DWORD PTR [ebp+0x200]
1001ed3d:	push   ebx
1001ed3e:	mov    ebx,DWORD PTR [ebp+0x204]
1001ed44:	push   esi
1001ed45:	xor    esi,esi
1001ed47:	push   edi
1001ed48:	mov    edi,DWORD PTR [ebp+0x20c]
1001ed4e:	push   DWORD PTR [ebp+0x208]
1001ed54:	lea    ecx,[ebp-0x64]
1001ed57:	mov    DWORD PTR [ebp-0x30],eax
1001ed5a:	mov    DWORD PTR [ebp-0x2c],edi
1001ed5d:	mov    DWORD PTR [ebp-0x4c],esi
1001ed60:	mov    DWORD PTR [ebp-0x18],esi
1001ed63:	mov    DWORD PTR [ebp-0x40],esi
1001ed66:	mov    DWORD PTR [ebp-0x20],esi
1001ed69:	mov    DWORD PTR [ebp-0x3c],esi
1001ed6c:	mov    DWORD PTR [ebp-0x50],esi
1001ed6f:	mov    DWORD PTR [ebp-0x44],esi
1001ed72:	call   0x100165fa
1001ed77:	cmp    DWORD PTR [ebp-0x30],esi
1001ed7a:	jne    0x1001eda9
1001ed7c:	call   0x1001a18e
1001ed81:	push   esi
1001ed82:	push   esi
1001ed83:	push   esi
1001ed84:	push   esi
1001ed85:	mov    DWORD PTR [eax],0x16
1001ed8b:	push   esi
1001ed8c:	call   0x1001616f
1001ed91:	add    esp,0x14
1001ed94:	cmp    BYTE PTR [ebp-0x58],0x0
1001ed98:	je     0x1001eda1
1001ed9a:	mov    eax,DWORD PTR [ebp-0x5c]
1001ed9d:	and    DWORD PTR [eax+0x70],0xfffffffd
1001eda1:	or     eax,0xffffffff
1001eda4:	jmp    0x1001f678
1001eda9:	mov    eax,DWORD PTR [ebp-0x30]
1001edac:	test   BYTE PTR [eax+0xc],0x40
1001edb0:	jne    0x1001ee5a
1001edb6:	push   eax
1001edb7:	call   0x1001ea9b
1001edbc:	cmp    eax,0xffffffff
1001edbf:	pop    ecx
1001edc0:	je     0x1001edf8
1001edc2:	push   DWORD PTR [ebp-0x30]
1001edc5:	call   0x1001ea9b
1001edca:	cmp    eax,0xfffffffe
1001edcd:	pop    ecx
1001edce:	je     0x1001edf8
1001edd0:	push   DWORD PTR [ebp-0x30]
1001edd3:	call   0x1001ea9b
1001edd8:	push   DWORD PTR [ebp-0x30]
1001eddb:	sar    eax,0x5
1001edde:	lea    esi,[eax*4+0x10098ae0]
1001ede5:	call   0x1001ea9b
1001edea:	and    eax,0x1f
1001eded:	shl    eax,0x6
1001edf0:	add    eax,DWORD PTR [esi]
1001edf2:	pop    ecx
1001edf3:	pop    ecx
1001edf4:	xor    esi,esi
1001edf6:	jmp    0x1001edfd
1001edf8:	mov    eax,0x10095cf8
1001edfd:	test   BYTE PTR [eax+0x24],0x7f
1001ee01:	jne    0x1001ed7c
1001ee07:	push   DWORD PTR [ebp-0x30]
1001ee0a:	call   0x1001ea9b
1001ee0f:	cmp    eax,0xffffffff
1001ee12:	pop    ecx
1001ee13:	je     0x1001ee4b
1001ee15:	push   DWORD PTR [ebp-0x30]
1001ee18:	call   0x1001ea9b
1001ee1d:	cmp    eax,0xfffffffe
1001ee20:	pop    ecx
1001ee21:	je     0x1001ee4b
1001ee23:	push   DWORD PTR [ebp-0x30]
1001ee26:	call   0x1001ea9b
1001ee2b:	push   DWORD PTR [ebp-0x30]
1001ee2e:	sar    eax,0x5
1001ee31:	lea    esi,[eax*4+0x10098ae0]
1001ee38:	call   0x1001ea9b
1001ee3d:	and    eax,0x1f
1001ee40:	shl    eax,0x6
1001ee43:	add    eax,DWORD PTR [esi]
1001ee45:	pop    ecx
1001ee46:	pop    ecx
1001ee47:	xor    esi,esi
1001ee49:	jmp    0x1001ee50
1001ee4b:	mov    eax,0x10095cf8
1001ee50:	test   BYTE PTR [eax+0x24],0x80
1001ee54:	jne    0x1001ed7c
1001ee5a:	cmp    ebx,esi
1001ee5c:	je     0x1001ed7c
1001ee62:	mov    dl,BYTE PTR [ebx]
1001ee64:	xor    ecx,ecx
1001ee66:	test   dl,dl
1001ee68:	mov    DWORD PTR [ebp-0x34],esi
1001ee6b:	mov    DWORD PTR [ebp-0x28],esi
1001ee6e:	mov    DWORD PTR [ebp-0x54],esi
1001ee71:	mov    BYTE PTR [ebp-0x19],dl
1001ee74:	je     0x1001f668
1001ee7a:	inc    ebx
1001ee7b:	cmp    DWORD PTR [ebp-0x34],0x0
1001ee7f:	mov    DWORD PTR [ebp-0x48],ebx
1001ee82:	jl     0x1001f668
1001ee88:	mov    al,dl
1001ee8a:	sub    al,0x20
1001ee8c:	cmp    al,0x58
1001ee8e:	ja     0x1001eea1
1001ee90:	movsx  eax,dl
1001ee93:	movzx  eax,BYTE PTR [eax+0x1007e530]
1001ee9a:	and    eax,0xf
1001ee9d:	xor    esi,esi
1001ee9f:	jmp    0x1001eea5
1001eea1:	xor    esi,esi
1001eea3:	xor    eax,eax
1001eea5:	movsx  eax,BYTE PTR [ecx+eax*8+0x1007e550]
1001eead:	push   0x7
1001eeaf:	sar    eax,0x4
1001eeb2:	pop    ecx
1001eeb3:	cmp    eax,ecx
1001eeb5:	mov    DWORD PTR [ebp-0x74],eax
1001eeb8:	ja     0x1001f638
1001eebe:	jmp    DWORD PTR [eax*4+0x1001f690]
1001eec5:	or     DWORD PTR [ebp-0x20],0xffffffff
1001eec9:	mov    DWORD PTR [ebp-0x78],esi
1001eecc:	mov    DWORD PTR [ebp-0x50],esi
1001eecf:	mov    DWORD PTR [ebp-0x40],esi
1001eed2:	mov    DWORD PTR [ebp-0x3c],esi
1001eed5:	mov    DWORD PTR [ebp-0x18],esi
1001eed8:	mov    DWORD PTR [ebp-0x44],esi
1001eedb:	jmp    0x1001f638
1001eee0:	movsx  eax,dl
1001eee3:	sub    eax,0x20
1001eee6:	je     0x1001ef26
1001eee8:	sub    eax,0x3
1001eeeb:	je     0x1001ef1a
1001eeed:	sub    eax,0x8
1001eef0:	je     0x1001ef11
1001eef2:	dec    eax
1001eef3:	dec    eax
1001eef4:	je     0x1001ef08
1001eef6:	sub    eax,0x3
1001eef9:	jne    0x1001f638
1001eeff:	or     DWORD PTR [ebp-0x18],0x8
1001ef03:	jmp    0x1001f638
1001ef08:	or     DWORD PTR [ebp-0x18],0x4
1001ef0c:	jmp    0x1001f638
1001ef11:	or     DWORD PTR [ebp-0x18],0x1
1001ef15:	jmp    0x1001f638
1001ef1a:	or     DWORD PTR [ebp-0x18],0x80
1001ef21:	jmp    0x1001f638
1001ef26:	or     DWORD PTR [ebp-0x18],0x2
1001ef2a:	jmp    0x1001f638
1001ef2f:	cmp    dl,0x2a
1001ef32:	jne    0x1001ef54
1001ef34:	add    edi,0x4
1001ef37:	mov    DWORD PTR [ebp-0x2c],edi
1001ef3a:	mov    edi,DWORD PTR [edi-0x4]
1001ef3d:	cmp    edi,esi
1001ef3f:	mov    DWORD PTR [ebp-0x40],edi
1001ef42:	jge    0x1001f638
1001ef48:	or     DWORD PTR [ebp-0x18],0x4
1001ef4c:	neg    DWORD PTR [ebp-0x40]
1001ef4f:	jmp    0x1001f638
1001ef54:	mov    eax,DWORD PTR [ebp-0x40]
1001ef57:	imul   eax,eax,0xa
1001ef5a:	movsx  ecx,dl
1001ef5d:	lea    eax,[eax+ecx*1-0x30]
1001ef61:	mov    DWORD PTR [ebp-0x40],eax
1001ef64:	jmp    0x1001f638
1001ef69:	mov    DWORD PTR [ebp-0x20],esi
1001ef6c:	jmp    0x1001f638
1001ef71:	cmp    dl,0x2a
1001ef74:	jne    0x1001ef93
1001ef76:	add    edi,0x4
1001ef79:	mov    DWORD PTR [ebp-0x2c],edi
1001ef7c:	mov    edi,DWORD PTR [edi-0x4]
1001ef7f:	cmp    edi,esi
1001ef81:	mov    DWORD PTR [ebp-0x20],edi
1001ef84:	jge    0x1001f638
1001ef8a:	or     DWORD PTR [ebp-0x20],0xffffffff
1001ef8e:	jmp    0x1001f638
1001ef93:	mov    eax,DWORD PTR [ebp-0x20]
1001ef96:	imul   eax,eax,0xa
1001ef99:	movsx  ecx,dl
1001ef9c:	lea    eax,[eax+ecx*1-0x30]
1001efa0:	mov    DWORD PTR [ebp-0x20],eax
1001efa3:	jmp    0x1001f638
1001efa8:	cmp    dl,0x49
1001efab:	je     0x1001eff3
1001efad:	cmp    dl,0x68
1001efb0:	je     0x1001efea
1001efb2:	cmp    dl,0x6c
1001efb5:	je     0x1001efcc
1001efb7:	cmp    dl,0x77
1001efba:	jne    0x1001f638
1001efc0:	or     DWORD PTR [ebp-0x18],0x800
1001efc7:	jmp    0x1001f638
1001efcc:	cmp    BYTE PTR [ebx],0x6c
1001efcf:	jne    0x1001efe1
1001efd1:	inc    ebx
1001efd2:	or     DWORD PTR [ebp-0x18],0x1000
1001efd9:	mov    DWORD PTR [ebp-0x48],ebx
1001efdc:	jmp    0x1001f638
1001efe1:	or     DWORD PTR [ebp-0x18],0x10
1001efe5:	jmp    0x1001f638
1001efea:	or     DWORD PTR [ebp-0x18],0x20
1001efee:	jmp    0x1001f638
1001eff3:	mov    al,BYTE PTR [ebx]
1001eff5:	cmp    al,0x36
1001eff7:	jne    0x1001f010
1001eff9:	cmp    BYTE PTR [ebx+0x1],0x34
1001effd:	jne    0x1001f010
1001efff:	inc    ebx
1001f000:	inc    ebx
1001f001:	or     DWORD PTR [ebp-0x18],0x8000
1001f008:	mov    DWORD PTR [ebp-0x48],ebx
1001f00b:	jmp    0x1001f638
1001f010:	cmp    al,0x33
1001f012:	jne    0x1001f02b
1001f014:	cmp    BYTE PTR [ebx+0x1],0x32
1001f018:	jne    0x1001f02b
1001f01a:	inc    ebx
1001f01b:	inc    ebx
1001f01c:	and    DWORD PTR [ebp-0x18],0xffff7fff
1001f023:	mov    DWORD PTR [ebp-0x48],ebx
1001f026:	jmp    0x1001f638
1001f02b:	cmp    al,0x64
1001f02d:	je     0x1001f638
1001f033:	cmp    al,0x69
1001f035:	je     0x1001f638
1001f03b:	cmp    al,0x6f
1001f03d:	je     0x1001f638
1001f043:	cmp    al,0x75
1001f045:	je     0x1001f638
1001f04b:	cmp    al,0x78
1001f04d:	je     0x1001f638
1001f053:	cmp    al,0x58
1001f055:	je     0x1001f638
1001f05b:	mov    DWORD PTR [ebp-0x74],esi
1001f05e:	lea    eax,[ebp-0x64]
1001f061:	push   eax
1001f062:	movzx  eax,dl
1001f065:	push   eax
1001f066:	mov    DWORD PTR [ebp-0x44],esi
1001f069:	call   0x10017037
1001f06e:	pop    ecx
1001f06f:	test   eax,eax
1001f071:	mov    al,BYTE PTR [ebp-0x19]
1001f074:	pop    ecx
1001f075:	je     0x1001f090
1001f077:	mov    ecx,DWORD PTR [ebp-0x30]
1001f07a:	lea    esi,[ebp-0x34]
1001f07d:	call   0x1001ec7b
1001f082:	mov    al,BYTE PTR [ebx]
1001f084:	inc    ebx
1001f085:	test   al,al
1001f087:	mov    DWORD PTR [ebp-0x48],ebx
1001f08a:	je     0x1001f651
1001f090:	mov    ecx,DWORD PTR [ebp-0x30]
1001f093:	lea    esi,[ebp-0x34]
1001f096:	call   0x1001ec7b
1001f09b:	jmp    0x1001f638
1001f0a0:	movsx  eax,dl
1001f0a3:	cmp    eax,0x64
1001f0a6:	jg     0x1001f21e
1001f0ac:	je     0x1001f29d
1001f0b2:	cmp    eax,0x53
1001f0b5:	jg     0x1001f166
1001f0bb:	je     0x1001f117
1001f0bd:	sub    eax,0x41
1001f0c0:	je     0x1001f0d2
1001f0c2:	dec    eax
1001f0c3:	dec    eax
1001f0c4:	je     0x1001f106
1001f0c6:	dec    eax
1001f0c7:	dec    eax
1001f0c8:	je     0x1001f0d2
1001f0ca:	dec    eax
1001f0cb:	dec    eax
1001f0cc:	jne    0x1001f520
1001f0d2:	add    dl,0x20
1001f0d5:	mov    DWORD PTR [ebp-0x78],0x1
1001f0dc:	mov    BYTE PTR [ebp-0x19],dl
1001f0df:	or     DWORD PTR [ebp-0x18],0x40
1001f0e3:	cmp    DWORD PTR [ebp-0x20],esi
1001f0e6:	lea    ebx,[ebp-0x14]
1001f0e9:	mov    eax,0x200
1001f0ee:	mov    DWORD PTR [ebp-0x24],ebx
1001f0f1:	mov    DWORD PTR [ebp-0x68],eax
1001f0f4:	jge    0x1001f2c1
1001f0fa:	mov    DWORD PTR [ebp-0x20],0x6
1001f101:	jmp    0x1001f30f
1001f106:	test   WORD PTR [ebp-0x18],0x830
1001f10c:	jne    0x1001f183
1001f10e:	or     DWORD PTR [ebp-0x18],0x800
1001f115:	jmp    0x1001f183
1001f117:	test   WORD PTR [ebp-0x18],0x830
1001f11d:	jne    0x1001f126
1001f11f:	or     DWORD PTR [ebp-0x18],0x800
1001f126:	mov    ecx,DWORD PTR [ebp-0x20]
1001f129:	cmp    ecx,0xffffffff
1001f12c:	jne    0x1001f133
1001f12e:	mov    ecx,0x7fffffff
1001f133:	add    edi,0x4
1001f136:	test   WORD PTR [ebp-0x18],0x810
1001f13c:	mov    DWORD PTR [ebp-0x2c],edi
1001f13f:	mov    edi,DWORD PTR [edi-0x4]
1001f142:	mov    DWORD PTR [ebp-0x24],edi
1001f145:	je     0x1001f4fe
1001f14b:	cmp    edi,esi
1001f14d:	jne    0x1001f157
1001f14f:	mov    eax,ds:0x10096044
1001f154:	mov    DWORD PTR [ebp-0x24],eax
1001f157:	mov    eax,DWORD PTR [ebp-0x24]
1001f15a:	mov    DWORD PTR [ebp-0x44],0x1
1001f161:	jmp    0x1001f4f3
1001f166:	sub    eax,0x58
1001f169:	je     0x1001f3a8
1001f16f:	dec    eax
1001f170:	dec    eax
1001f171:	je     0x1001f1d0
1001f173:	sub    eax,ecx
1001f175:	je     0x1001f0df
1001f17b:	dec    eax
1001f17c:	dec    eax
1001f17d:	jne    0x1001f520
1001f183:	add    edi,0x4
1001f186:	test   WORD PTR [ebp-0x18],0x810
1001f18c:	mov    DWORD PTR [ebp-0x2c],edi
1001f18f:	je     0x1001f1b8
1001f191:	movzx  eax,WORD PTR [edi-0x4]
1001f195:	push   eax
1001f196:	push   0x200
1001f19b:	lea    eax,[ebp-0x14]
1001f19e:	push   eax
1001f19f:	lea    eax,[ebp-0x28]
1001f1a2:	push   eax
1001f1a3:	call   0x10021d12
1001f1a8:	add    esp,0x10
1001f1ab:	test   eax,eax
1001f1ad:	je     0x1001f1c5
1001f1af:	mov    DWORD PTR [ebp-0x50],0x1
1001f1b6:	jmp    0x1001f1c5
1001f1b8:	mov    al,BYTE PTR [edi-0x4]
1001f1bb:	mov    BYTE PTR [ebp-0x14],al
1001f1be:	mov    DWORD PTR [ebp-0x28],0x1
1001f1c5:	lea    eax,[ebp-0x14]
1001f1c8:	mov    DWORD PTR [ebp-0x24],eax
1001f1cb:	jmp    0x1001f520
1001f1d0:	mov    eax,DWORD PTR [edi]
1001f1d2:	add    edi,0x4
1001f1d5:	cmp    eax,esi
1001f1d7:	mov    DWORD PTR [ebp-0x2c],edi
1001f1da:	je     0x1001f20a
1001f1dc:	mov    ecx,DWORD PTR [eax+0x4]
1001f1df:	cmp    ecx,esi
1001f1e1:	je     0x1001f20a
1001f1e3:	test   WORD PTR [ebp-0x18],0x800
1001f1e9:	movsx  eax,WORD PTR [eax]
1001f1ec:	mov    DWORD PTR [ebp-0x24],ecx
1001f1ef:	je     0x1001f202
1001f1f1:	cdq    
1001f1f2:	sub    eax,edx
1001f1f4:	sar    eax,1
1001f1f6:	mov    DWORD PTR [ebp-0x44],0x1
1001f1fd:	jmp    0x1001f51d
1001f202:	mov    DWORD PTR [ebp-0x44],esi
1001f205:	jmp    0x1001f51d
1001f20a:	mov    eax,ds:0x10096040
1001f20f:	mov    DWORD PTR [ebp-0x24],eax
1001f212:	push   eax
1001f213:	call   0x100163c0
1001f218:	pop    ecx
1001f219:	jmp    0x1001f51d
1001f21e:	cmp    eax,0x70
1001f221:	jg     0x1001f3ad
1001f227:	je     0x1001f3a1
1001f22d:	cmp    eax,0x65
1001f230:	jl     0x1001f520
1001f236:	cmp    eax,0x67
1001f239:	jle    0x1001f0df
1001f23f:	cmp    eax,0x69
1001f242:	je     0x1001f29d
1001f244:	cmp    eax,0x6e
1001f247:	je     0x1001f268
1001f249:	cmp    eax,0x6f
1001f24c:	jne    0x1001f520
1001f252:	test   BYTE PTR [ebp-0x18],0x80
1001f256:	mov    DWORD PTR [ebp-0x28],0x8
1001f25d:	je     0x1001f2a8
1001f25f:	or     DWORD PTR [ebp-0x18],0x200
1001f266:	jmp    0x1001f2a8
1001f268:	mov    esi,DWORD PTR [edi]
1001f26a:	add    edi,0x4
1001f26d:	mov    DWORD PTR [ebp-0x2c],edi
1001f270:	call   0x100218f3
1001f275:	test   eax,eax
1001f277:	je     0x1001f651
1001f27d:	test   BYTE PTR [ebp-0x18],0x20
1001f281:	je     0x1001f28c
1001f283:	mov    ax,WORD PTR [ebp-0x34]
1001f287:	mov    WORD PTR [esi],ax
1001f28a:	jmp    0x1001f291
1001f28c:	mov    eax,DWORD PTR [ebp-0x34]
1001f28f:	mov    DWORD PTR [esi],eax
1001f291:	mov    DWORD PTR [ebp-0x50],0x1
1001f298:	jmp    0x1001f625
1001f29d:	or     DWORD PTR [ebp-0x18],0x40
1001f2a1:	mov    DWORD PTR [ebp-0x28],0xa
1001f2a8:	mov    ecx,DWORD PTR [ebp-0x18]
1001f2ab:	test   cx,cx
1001f2ae:	jns    0x1001f3f7
1001f2b4:	mov    eax,DWORD PTR [edi]
1001f2b6:	mov    edx,DWORD PTR [edi+0x4]
1001f2b9:	add    edi,0x8
1001f2bc:	jmp    0x1001f42c
1001f2c1:	jne    0x1001f2d1
1001f2c3:	cmp    dl,0x67
1001f2c6:	jne    0x1001f30f
1001f2c8:	mov    DWORD PTR [ebp-0x20],0x1
1001f2cf:	jmp    0x1001f30f
1001f2d1:	cmp    DWORD PTR [ebp-0x20],eax
1001f2d4:	jle    0x1001f2d9
1001f2d6:	mov    DWORD PTR [ebp-0x20],eax
1001f2d9:	cmp    DWORD PTR [ebp-0x20],0xa3
1001f2e0:	jle    0x1001f30f
1001f2e2:	mov    esi,DWORD PTR [ebp-0x20]
1001f2e5:	add    esi,0x15d
1001f2eb:	push   esi
1001f2ec:	call   0x10018735
1001f2f1:	test   eax,eax
1001f2f3:	mov    dl,BYTE PTR [ebp-0x19]
1001f2f6:	pop    ecx
1001f2f7:	mov    DWORD PTR [ebp-0x54],eax
1001f2fa:	je     0x1001f306
1001f2fc:	mov    DWORD PTR [ebp-0x24],eax
1001f2ff:	mov    DWORD PTR [ebp-0x68],esi
1001f302:	mov    ebx,eax
1001f304:	jmp    0x1001f30d
1001f306:	mov    DWORD PTR [ebp-0x20],0xa3
1001f30d:	xor    esi,esi
1001f30f:	mov    eax,DWORD PTR [edi]
1001f311:	add    edi,0x8
1001f314:	mov    DWORD PTR [ebp-0x80],eax
1001f317:	mov    eax,DWORD PTR [edi-0x4]
1001f31a:	mov    DWORD PTR [ebp-0x7c],eax
1001f31d:	lea    eax,[ebp-0x64]
1001f320:	push   eax
1001f321:	push   DWORD PTR [ebp-0x78]
1001f324:	movsx  eax,dl
1001f327:	push   DWORD PTR [ebp-0x20]
1001f32a:	mov    DWORD PTR [ebp-0x2c],edi
1001f32d:	push   eax
1001f32e:	push   DWORD PTR [ebp-0x68]
1001f331:	lea    eax,[ebp-0x80]
1001f334:	push   ebx
1001f335:	push   eax
1001f336:	push   DWORD PTR ds:0x10096188
1001f33c:	call   0x1001978a
1001f341:	pop    ecx
1001f342:	call   eax
1001f344:	mov    edi,DWORD PTR [ebp-0x18]
1001f347:	add    esp,0x1c
1001f34a:	and    edi,0x80
1001f350:	je     0x1001f36c
1001f352:	cmp    DWORD PTR [ebp-0x20],esi
1001f355:	jne    0x1001f36c
1001f357:	lea    eax,[ebp-0x64]
1001f35a:	push   eax
1001f35b:	push   ebx
1001f35c:	push   DWORD PTR ds:0x10096194
1001f362:	call   0x1001978a
1001f367:	pop    ecx
1001f368:	call   eax
1001f36a:	pop    ecx
1001f36b:	pop    ecx
1001f36c:	cmp    BYTE PTR [ebp-0x19],0x67
1001f370:	jne    0x1001f38b
1001f372:	cmp    edi,esi
1001f374:	jne    0x1001f38b
1001f376:	lea    eax,[ebp-0x64]
1001f379:	push   eax
1001f37a:	push   ebx
1001f37b:	push   DWORD PTR ds:0x10096190
1001f381:	call   0x1001978a
1001f386:	pop    ecx
1001f387:	call   eax
1001f389:	pop    ecx
1001f38a:	pop    ecx
1001f38b:	cmp    BYTE PTR [ebx],0x2d
1001f38e:	jne    0x1001f39b
1001f390:	or     DWORD PTR [ebp-0x18],0x100
1001f397:	inc    ebx
1001f398:	mov    DWORD PTR [ebp-0x24],ebx
1001f39b:	push   ebx
1001f39c:	jmp    0x1001f213
1001f3a1:	mov    DWORD PTR [ebp-0x20],0x8
1001f3a8:	mov    DWORD PTR [ebp-0x4c],ecx
1001f3ab:	jmp    0x1001f3ce
1001f3ad:	sub    eax,0x73
1001f3b0:	je     0x1001f126
1001f3b6:	dec    eax
1001f3b7:	dec    eax
1001f3b8:	je     0x1001f2a1
1001f3be:	sub    eax,0x3
1001f3c1:	jne    0x1001f520
1001f3c7:	mov    DWORD PTR [ebp-0x4c],0x27
1001f3ce:	test   BYTE PTR [ebp-0x18],0x80
1001f3d2:	mov    DWORD PTR [ebp-0x28],0x10
1001f3d9:	je     0x1001f2a8
1001f3df:	mov    al,BYTE PTR [ebp-0x4c]
1001f3e2:	add    al,0x51
1001f3e4:	mov    BYTE PTR [ebp-0x38],0x30
1001f3e8:	mov    BYTE PTR [ebp-0x37],al
1001f3eb:	mov    DWORD PTR [ebp-0x3c],0x2
1001f3f2:	jmp    0x1001f2a8
1001f3f7:	test   cx,0x1000
1001f3fc:	jne    0x1001f2b4
1001f402:	add    edi,0x4
1001f405:	test   cl,0x20
1001f408:	je     0x1001f41f
1001f40a:	test   cl,0x40
1001f40d:	mov    DWORD PTR [ebp-0x2c],edi
1001f410:	je     0x1001f418
1001f412:	movsx  eax,WORD PTR [edi-0x4]
1001f416:	jmp    0x1001f41c
1001f418:	movzx  eax,WORD PTR [edi-0x4]
1001f41c:	cdq    
1001f41d:	jmp    0x1001f42f
1001f41f:	test   cl,0x40
1001f422:	mov    eax,DWORD PTR [edi-0x4]
1001f425:	je     0x1001f42a
1001f427:	cdq    
1001f428:	jmp    0x1001f42c
1001f42a:	xor    edx,edx
1001f42c:	mov    DWORD PTR [ebp-0x2c],edi
1001f42f:	test   cl,0x40
1001f432:	je     0x1001f44c
1001f434:	cmp    edx,esi
1001f436:	jg     0x1001f44c
1001f438:	jl     0x1001f43e
1001f43a:	cmp    eax,esi
1001f43c:	jae    0x1001f44c
1001f43e:	neg    eax
1001f440:	adc    edx,0x0
1001f443:	neg    edx
1001f445:	or     DWORD PTR [ebp-0x18],0x100
1001f44c:	test   WORD PTR [ebp-0x18],0x9000
1001f452:	mov    ebx,edx
1001f454:	mov    edi,eax
1001f456:	jne    0x1001f45a
1001f458:	xor    ebx,ebx
1001f45a:	cmp    DWORD PTR [ebp-0x20],0x0
1001f45e:	jge    0x1001f469
1001f460:	mov    DWORD PTR [ebp-0x20],0x1
1001f467:	jmp    0x1001f47a
1001f469:	and    DWORD PTR [ebp-0x18],0xfffffff7
1001f46d:	mov    eax,0x200
1001f472:	cmp    DWORD PTR [ebp-0x20],eax
1001f475:	jle    0x1001f47a
1001f477:	mov    DWORD PTR [ebp-0x20],eax
1001f47a:	mov    eax,edi
1001f47c:	or     eax,ebx
1001f47e:	jne    0x1001f483
1001f480:	and    DWORD PTR [ebp-0x3c],eax
1001f483:	lea    esi,[ebp+0x1eb]
1001f489:	mov    eax,DWORD PTR [ebp-0x20]
1001f48c:	dec    DWORD PTR [ebp-0x20]
1001f48f:	test   eax,eax
1001f491:	jg     0x1001f499
1001f493:	mov    eax,edi
1001f495:	or     eax,ebx
1001f497:	je     0x1001f4bd
1001f499:	mov    eax,DWORD PTR [ebp-0x28]
1001f49c:	cdq    
1001f49d:	push   edx
1001f49e:	push   eax
1001f49f:	push   ebx
1001f4a0:	push   edi
1001f4a1:	call   0x1001e710
1001f4a6:	add    ecx,0x30
1001f4a9:	cmp    ecx,0x39
1001f4ac:	mov    DWORD PTR [ebp-0x68],ebx
1001f4af:	mov    edi,eax
1001f4b1:	mov    ebx,edx
1001f4b3:	jle    0x1001f4b8
1001f4b5:	add    ecx,DWORD PTR [ebp-0x4c]
1001f4b8:	mov    BYTE PTR [esi],cl
1001f4ba:	dec    esi
1001f4bb:	jmp    0x1001f489
1001f4bd:	lea    eax,[ebp+0x1eb]
1001f4c3:	sub    eax,esi
1001f4c5:	inc    esi
1001f4c6:	test   WORD PTR [ebp-0x18],0x200
1001f4cc:	mov    DWORD PTR [ebp-0x28],eax
1001f4cf:	mov    DWORD PTR [ebp-0x24],esi
1001f4d2:	je     0x1001f520
1001f4d4:	test   eax,eax
1001f4d6:	je     0x1001f4df
1001f4d8:	mov    ecx,esi
1001f4da:	cmp    BYTE PTR [ecx],0x30
1001f4dd:	je     0x1001f520
1001f4df:	dec    DWORD PTR [ebp-0x24]
1001f4e2:	mov    ecx,DWORD PTR [ebp-0x24]
1001f4e5:	mov    BYTE PTR [ecx],0x30
1001f4e8:	inc    eax
1001f4e9:	jmp    0x1001f51d
1001f4eb:	dec    ecx
1001f4ec:	cmp    WORD PTR [eax],si
1001f4ef:	je     0x1001f4f7
1001f4f1:	inc    eax
1001f4f2:	inc    eax
1001f4f3:	cmp    ecx,esi
1001f4f5:	jne    0x1001f4eb
1001f4f7:	sub    eax,DWORD PTR [ebp-0x24]
1001f4fa:	sar    eax,1
1001f4fc:	jmp    0x1001f51d
1001f4fe:	cmp    edi,esi
1001f500:	jne    0x1001f50a
1001f502:	mov    eax,ds:0x10096040
1001f507:	mov    DWORD PTR [ebp-0x24],eax
1001f50a:	mov    eax,DWORD PTR [ebp-0x24]
1001f50d:	jmp    0x1001f516
1001f50f:	dec    ecx
1001f510:	cmp    BYTE PTR [eax],0x0
1001f513:	je     0x1001f51a
1001f515:	inc    eax
1001f516:	cmp    ecx,esi
1001f518:	jne    0x1001f50f
1001f51a:	sub    eax,DWORD PTR [ebp-0x24]
1001f51d:	mov    DWORD PTR [ebp-0x28],eax
1001f520:	cmp    DWORD PTR [ebp-0x50],0x0
1001f524:	jne    0x1001f625
1001f52a:	mov    eax,DWORD PTR [ebp-0x18]
1001f52d:	test   al,0x40
1001f52f:	je     0x1001f556
1001f531:	test   ax,0x100
1001f535:	je     0x1001f53d
1001f537:	mov    BYTE PTR [ebp-0x38],0x2d
1001f53b:	jmp    0x1001f54f
1001f53d:	test   al,0x1
1001f53f:	je     0x1001f547
1001f541:	mov    BYTE PTR [ebp-0x38],0x2b
1001f545:	jmp    0x1001f54f
1001f547:	test   al,0x2
1001f549:	je     0x1001f556
1001f54b:	mov    BYTE PTR [ebp-0x38],0x20
1001f54f:	mov    DWORD PTR [ebp-0x3c],0x1
1001f556:	mov    ebx,DWORD PTR [ebp-0x40]
1001f559:	sub    ebx,DWORD PTR [ebp-0x28]
1001f55c:	sub    ebx,DWORD PTR [ebp-0x3c]
1001f55f:	test   BYTE PTR [ebp-0x18],0xc
1001f563:	jne    0x1001f576
1001f565:	push   DWORD PTR [ebp-0x30]
1001f568:	lea    eax,[ebp-0x34]
1001f56b:	push   ebx
1001f56c:	push   0x20
1001f56e:	call   0x1001ecae
1001f573:	add    esp,0xc
1001f576:	push   DWORD PTR [ebp-0x3c]
1001f579:	mov    edi,DWORD PTR [ebp-0x30]
1001f57c:	lea    eax,[ebp-0x34]
1001f57f:	lea    ecx,[ebp-0x38]
1001f582:	call   0x1001ecd2
1001f587:	test   BYTE PTR [ebp-0x18],0x8
1001f58b:	pop    ecx
1001f58c:	je     0x1001f5a3
1001f58e:	test   BYTE PTR [ebp-0x18],0x4
1001f592:	jne    0x1001f5a3
1001f594:	push   edi
1001f595:	push   ebx
1001f596:	push   0x30
1001f598:	lea    eax,[ebp-0x34]
1001f59b:	call   0x1001ecae
1001f5a0:	add    esp,0xc
1001f5a3:	cmp    DWORD PTR [ebp-0x44],0x0
1001f5a7:	mov    eax,DWORD PTR [ebp-0x28]
1001f5aa:	je     0x1001f5fd
1001f5ac:	test   eax,eax
1001f5ae:	jle    0x1001f5fd
1001f5b0:	mov    esi,DWORD PTR [ebp-0x24]
1001f5b3:	mov    DWORD PTR [ebp-0x68],eax
1001f5b6:	movzx  eax,WORD PTR [esi]
1001f5b9:	dec    DWORD PTR [ebp-0x68]
1001f5bc:	push   eax
1001f5bd:	push   0x6
1001f5bf:	lea    eax,[ebp+0x1ec]
1001f5c5:	push   eax
1001f5c6:	lea    eax,[ebp-0x70]
1001f5c9:	inc    esi
1001f5ca:	push   eax
1001f5cb:	inc    esi
1001f5cc:	call   0x10021d12
1001f5d1:	add    esp,0x10
1001f5d4:	test   eax,eax
1001f5d6:	jne    0x1001f5f7
1001f5d8:	cmp    DWORD PTR [ebp-0x70],eax
1001f5db:	je     0x1001f5f7
1001f5dd:	push   DWORD PTR [ebp-0x70]
1001f5e0:	lea    eax,[ebp-0x34]
1001f5e3:	lea    ecx,[ebp+0x1ec]
1001f5e9:	call   0x1001ecd2
1001f5ee:	cmp    DWORD PTR [ebp-0x68],0x0
1001f5f2:	pop    ecx
1001f5f3:	jne    0x1001f5b6
1001f5f5:	jmp    0x1001f60a
1001f5f7:	or     DWORD PTR [ebp-0x34],0xffffffff
1001f5fb:	jmp    0x1001f60a
1001f5fd:	mov    ecx,DWORD PTR [ebp-0x24]
1001f600:	push   eax
1001f601:	lea    eax,[ebp-0x34]
1001f604:	call   0x1001ecd2
1001f609:	pop    ecx
1001f60a:	cmp    DWORD PTR [ebp-0x34],0x0
1001f60e:	jl     0x1001f625
1001f610:	test   BYTE PTR [ebp-0x18],0x4
1001f614:	je     0x1001f625
1001f616:	push   edi
1001f617:	push   ebx
1001f618:	push   0x20
1001f61a:	lea    eax,[ebp-0x34]
1001f61d:	call   0x1001ecae
1001f622:	add    esp,0xc
1001f625:	cmp    DWORD PTR [ebp-0x54],0x0
1001f629:	je     0x1001f638
1001f62b:	push   DWORD PTR [ebp-0x54]
1001f62e:	call   0x10016b85
1001f633:	and    DWORD PTR [ebp-0x54],0x0
1001f637:	pop    ecx
1001f638:	mov    ebx,DWORD PTR [ebp-0x48]
1001f63b:	mov    al,BYTE PTR [ebx]
1001f63d:	test   al,al
1001f63f:	mov    BYTE PTR [ebp-0x19],al
1001f642:	je     0x1001f668
1001f644:	mov    ecx,DWORD PTR [ebp-0x74]
1001f647:	mov    edi,DWORD PTR [ebp-0x2c]
1001f64a:	mov    dl,al
1001f64c:	jmp    0x1001ee7a
1001f651:	call   0x1001a18e
1001f656:	mov    DWORD PTR [eax],0x16
1001f65c:	xor    eax,eax
1001f65e:	push   eax
1001f65f:	push   eax
1001f660:	push   eax
1001f661:	push   eax
1001f662:	push   eax
1001f663:	jmp    0x1001ed8c
1001f668:	cmp    BYTE PTR [ebp-0x58],0x0
1001f66c:	je     0x1001f675
1001f66e:	mov    eax,DWORD PTR [ebp-0x5c]
1001f671:	and    DWORD PTR [eax+0x70],0xfffffffd
1001f675:	mov    eax,DWORD PTR [ebp-0x34]
1001f678:	mov    ecx,DWORD PTR [ebp+0x1f4]
1001f67e:	pop    edi
1001f67f:	pop    esi
1001f680:	xor    ecx,ebp
1001f682:	pop    ebx
1001f683:	call   0x10015b2b
1001f688:	add    ebp,0x1f8
1001f68e:	leave  
1001f68f:	ret    
1001f690:	pop    esi
1001f691:	lock add DWORD PTR [eax],edx
1001f694:	(bad)
1001f697:	adc    al,ah
1001f699:	out    dx,al
1001f69a:	add    DWORD PTR [eax],edx
1001f69c:	das    
1001f69d:	out    dx,eax
1001f69e:	add    DWORD PTR [eax],edx
1001f6a0:	imul   ebp,edi,0xef711001
1001f6a6:	add    DWORD PTR [eax],edx
1001f6a8:	test   al,0xef
1001f6aa:	add    DWORD PTR [eax],edx
1001f6ac:	mov    al,ds:0x551001f0
1001f6b1:	mov    ebp,esp
1001f6b3:	sub    esp,0x18
1001f6b6:	push   ebx
1001f6b7:	push   DWORD PTR [ebp+0x10]
1001f6ba:	lea    ecx,[ebp-0x18]
1001f6bd:	call   0x100165fa
1001f6c2:	mov    ebx,DWORD PTR [ebp+0x8]
1001f6c5:	lea    eax,[ebx+0x1]
1001f6c8:	cmp    eax,0x100
1001f6cd:	ja     0x1001f6de
1001f6cf:	mov    eax,DWORD PTR [ebp-0x18]
1001f6d2:	mov    eax,DWORD PTR [eax+0xc8]
1001f6d8:	movzx  eax,WORD PTR [eax+ebx*2]
1001f6dc:	jmp    0x1001f753
1001f6de:	mov    DWORD PTR [ebp+0x8],ebx
1001f6e1:	sar    DWORD PTR [ebp+0x8],0x8
1001f6e5:	lea    eax,[ebp-0x18]
1001f6e8:	push   eax
1001f6e9:	mov    eax,DWORD PTR [ebp+0x8]
1001f6ec:	and    eax,0xff
1001f6f1:	push   eax
1001f6f2:	call   0x10017037
1001f6f7:	test   eax,eax
1001f6f9:	pop    ecx
1001f6fa:	pop    ecx
1001f6fb:	je     0x1001f70f
1001f6fd:	mov    al,BYTE PTR [ebp+0x8]
1001f700:	push   0x2
1001f702:	mov    BYTE PTR [ebp-0x8],al
1001f705:	mov    BYTE PTR [ebp-0x7],bl
1001f708:	mov    BYTE PTR [ebp-0x6],0x0
1001f70c:	pop    ecx
1001f70d:	jmp    0x1001f719
1001f70f:	xor    ecx,ecx
1001f711:	mov    BYTE PTR [ebp-0x8],bl
1001f714:	mov    BYTE PTR [ebp-0x7],0x0
1001f718:	inc    ecx
1001f719:	mov    eax,DWORD PTR [ebp-0x18]
1001f71c:	push   0x1
1001f71e:	push   DWORD PTR [eax+0x14]
1001f721:	push   DWORD PTR [eax+0x4]
1001f724:	lea    eax,[ebp-0x4]
1001f727:	push   eax
1001f728:	push   ecx
1001f729:	lea    eax,[ebp-0x8]
1001f72c:	push   eax
1001f72d:	lea    eax,[ebp-0x18]
1001f730:	push   0x1
1001f732:	push   eax
1001f733:	call   0x100208f1
1001f738:	add    esp,0x20
1001f73b:	test   eax,eax
1001f73d:	jne    0x1001f74f
1001f73f:	cmp    BYTE PTR [ebp-0xc],al
1001f742:	je     0x1001f74b
1001f744:	mov    eax,DWORD PTR [ebp-0x10]
1001f747:	and    DWORD PTR [eax+0x70],0xfffffffd
1001f74b:	xor    eax,eax
1001f74d:	jmp    0x1001f763
1001f74f:	movzx  eax,WORD PTR [ebp-0x4]
1001f753:	and    eax,DWORD PTR [ebp+0xc]
1001f756:	cmp    BYTE PTR [ebp-0xc],0x0
1001f75a:	je     0x1001f763
1001f75c:	mov    ecx,DWORD PTR [ebp-0x10]
1001f75f:	and    DWORD PTR [ecx+0x70],0xfffffffd
1001f763:	pop    ebx
1001f764:	leave  
1001f765:	ret    
1001f766:	push   ebp
1001f767:	lea    ebp,[esp-0x514]
1001f76e:	sub    esp,0x590
1001f774:	mov    eax,ds:0x100951fc
1001f779:	xor    eax,ebp
1001f77b:	mov    DWORD PTR [ebp+0x510],eax
1001f781:	mov    eax,DWORD PTR [ebp+0x520]
1001f787:	push   esi
1001f788:	xor    esi,esi
1001f78a:	cmp    DWORD PTR [ebp+0x524],esi
1001f790:	mov    DWORD PTR [ebp-0x64],eax
1001f793:	mov    DWORD PTR [ebp-0x60],esi
1001f796:	mov    DWORD PTR [ebp-0x68],esi
1001f799:	jne    0x1001f7a2
1001f79b:	xor    eax,eax
1001f79d:	jmp    0x1001fd72
1001f7a2:	cmp    eax,esi
1001f7a4:	jne    0x1001f7cd
1001f7a6:	call   0x1001a1a1
1001f7ab:	mov    DWORD PTR [eax],esi
1001f7ad:	call   0x1001a18e
1001f7b2:	push   esi
1001f7b3:	push   esi
1001f7b4:	push   esi
1001f7b5:	push   esi
1001f7b6:	push   esi
1001f7b7:	mov    DWORD PTR [eax],0x16
1001f7bd:	call   0x1001616f
1001f7c2:	add    esp,0x14
1001f7c5:	or     eax,0xffffffff
1001f7c8:	jmp    0x1001fd72
1001f7cd:	push   ebx
1001f7ce:	push   edi
1001f7cf:	mov    edi,DWORD PTR [ebp+0x51c]
1001f7d5:	mov    eax,edi
1001f7d7:	sar    eax,0x5
1001f7da:	lea    esi,[eax*4+0x10098ae0]
1001f7e1:	mov    eax,DWORD PTR [esi]
1001f7e3:	and    edi,0x1f
1001f7e6:	shl    edi,0x6
1001f7e9:	add    eax,edi
1001f7eb:	mov    bl,BYTE PTR [eax+0x24]
1001f7ee:	add    bl,bl
1001f7f0:	sar    bl,1
1001f7f2:	cmp    bl,0x2
1001f7f5:	mov    DWORD PTR [ebp-0x70],esi
1001f7f8:	mov    BYTE PTR [ebp-0x71],bl
1001f7fb:	je     0x1001f802
1001f7fd:	cmp    bl,0x1
1001f800:	jne    0x1001f835
1001f802:	mov    ecx,DWORD PTR [ebp+0x524]
1001f808:	not    ecx
1001f80a:	test   cl,0x1
1001f80d:	jne    0x1001f835
1001f80f:	call   0x1001a1a1
1001f814:	xor    esi,esi
1001f816:	mov    DWORD PTR [eax],esi
1001f818:	call   0x1001a18e
1001f81d:	push   esi
1001f81e:	push   esi
1001f81f:	push   esi
1001f820:	push   esi
1001f821:	push   esi
1001f822:	mov    DWORD PTR [eax],0x16
1001f828:	call   0x1001616f
1001f82d:	add    esp,0x14
1001f830:	jmp    0x1001fd65
1001f835:	test   BYTE PTR [eax+0x4],0x20
1001f839:	je     0x1001f84f
1001f83b:	push   0x2
1001f83d:	push   0x0
1001f83f:	push   0x0
1001f841:	push   DWORD PTR [ebp+0x51c]
1001f847:	call   0x1001e3b9
1001f84c:	add    esp,0x10
1001f84f:	push   DWORD PTR [ebp+0x51c]
1001f855:	call   0x100216b7
1001f85a:	test   eax,eax
1001f85c:	pop    ecx
1001f85d:	je     0x1001fa9c
1001f863:	mov    eax,DWORD PTR [esi]
1001f865:	test   BYTE PTR [edi+eax*1+0x4],0x80
1001f86a:	je     0x1001fa9c
1001f870:	call   0x100199a6
1001f875:	mov    eax,DWORD PTR [eax+0x6c]
1001f878:	xor    ecx,ecx
1001f87a:	cmp    DWORD PTR [eax+0x14],ecx
1001f87d:	lea    eax,[ebp-0x7c]
1001f880:	sete   cl
1001f883:	push   eax
1001f884:	mov    eax,DWORD PTR [esi]
1001f886:	push   DWORD PTR [edi+eax*1]
1001f889:	mov    DWORD PTR [ebp-0x78],ecx
1001f88c:	call   DWORD PTR ds:0x10034188
1001f892:	test   eax,eax
1001f894:	je     0x1001fa9c
1001f89a:	xor    ecx,ecx
1001f89c:	cmp    DWORD PTR [ebp-0x78],ecx
1001f89f:	je     0x1001f8a9
1001f8a1:	test   bl,bl
1001f8a3:	je     0x1001fa9e
1001f8a9:	call   DWORD PTR ds:0x10034170
1001f8af:	mov    ebx,DWORD PTR [ebp-0x64]
1001f8b2:	mov    DWORD PTR [ebp-0x7c],eax
1001f8b5:	xor    eax,eax
1001f8b7:	cmp    DWORD PTR [ebp+0x524],eax
1001f8bd:	mov    DWORD PTR [ebp-0x5c],eax
1001f8c0:	jbe    0x1001fd0d
1001f8c6:	mov    DWORD PTR [ebp-0x54],eax
1001f8c9:	mov    al,BYTE PTR [ebp-0x71]
1001f8cc:	test   al,al
1001f8ce:	jne    0x1001fa11
1001f8d4:	mov    cl,BYTE PTR [ebx]
1001f8d6:	mov    esi,DWORD PTR [ebp-0x70]
1001f8d9:	xor    eax,eax
1001f8db:	cmp    cl,0xa
1001f8de:	sete   al
1001f8e1:	mov    DWORD PTR [ebp-0x78],eax
1001f8e4:	mov    eax,DWORD PTR [esi]
1001f8e6:	add    eax,edi
1001f8e8:	cmp    DWORD PTR [eax+0x38],0x0
1001f8ec:	je     0x1001f90c
1001f8ee:	mov    dl,BYTE PTR [eax+0x34]
1001f8f1:	mov    BYTE PTR [ebp+0x508],dl
1001f8f7:	mov    BYTE PTR [ebp+0x509],cl
1001f8fd:	and    DWORD PTR [eax+0x38],0x0
1001f901:	push   0x2
1001f903:	lea    eax,[ebp+0x508]
1001f909:	push   eax
1001f90a:	jmp    0x1001f951
1001f90c:	movsx  eax,cl
1001f90f:	push   eax
1001f910:	call   0x1001706d
1001f915:	test   eax,eax
1001f917:	pop    ecx
1001f918:	je     0x1001f94e
1001f91a:	mov    ecx,DWORD PTR [ebp-0x64]
1001f91d:	sub    ecx,ebx
1001f91f:	add    ecx,DWORD PTR [ebp+0x524]
1001f925:	xor    eax,eax
1001f927:	inc    eax
1001f928:	cmp    ecx,eax
1001f92a:	jbe    0x1001fa86
1001f930:	push   0x2
1001f932:	lea    eax,[ebp-0x58]
1001f935:	push   ebx
1001f936:	push   eax
1001f937:	call   0x10021a1c
1001f93c:	add    esp,0xc
1001f93f:	cmp    eax,0xffffffff
1001f942:	je     0x1001fd07
1001f948:	inc    ebx
1001f949:	inc    DWORD PTR [ebp-0x54]
1001f94c:	jmp    0x1001f966
1001f94e:	push   0x1
1001f950:	push   ebx
1001f951:	lea    eax,[ebp-0x58]
1001f954:	push   eax
1001f955:	call   0x10021a1c
1001f95a:	add    esp,0xc
1001f95d:	cmp    eax,0xffffffff
1001f960:	je     0x1001fd07
1001f966:	xor    eax,eax
1001f968:	push   eax
1001f969:	push   eax
1001f96a:	push   0x5
1001f96c:	lea    ecx,[ebp+0x508]
1001f972:	push   ecx
1001f973:	push   0x1
1001f975:	lea    ecx,[ebp-0x58]
1001f978:	push   ecx
1001f979:	push   eax
1001f97a:	push   DWORD PTR [ebp-0x7c]
1001f97d:	inc    ebx
1001f97e:	inc    DWORD PTR [ebp-0x54]
1001f981:	call   DWORD PTR ds:0x1003402c
1001f987:	mov    esi,eax
1001f989:	test   esi,esi
1001f98b:	je     0x1001fd07
1001f991:	push   0x0
1001f993:	lea    eax,[ebp-0x5c]
1001f996:	push   eax
1001f997:	push   esi
1001f998:	lea    eax,[ebp+0x508]
1001f99e:	push   eax
1001f99f:	mov    eax,DWORD PTR [ebp-0x70]
1001f9a2:	mov    eax,DWORD PTR [eax]
1001f9a4:	push   DWORD PTR [edi+eax*1]
1001f9a7:	call   DWORD PTR ds:0x100340ac
1001f9ad:	test   eax,eax
1001f9af:	je     0x1001fcfe
1001f9b5:	mov    eax,DWORD PTR [ebp-0x54]
1001f9b8:	mov    ecx,DWORD PTR [ebp-0x68]
1001f9bb:	add    eax,ecx
1001f9bd:	cmp    DWORD PTR [ebp-0x5c],esi
1001f9c0:	mov    DWORD PTR [ebp-0x60],eax
1001f9c3:	jl     0x1001fd07
1001f9c9:	cmp    DWORD PTR [ebp-0x78],0x0
1001f9cd:	je     0x1001fa72
1001f9d3:	push   0x0
1001f9d5:	lea    eax,[ebp-0x5c]
1001f9d8:	push   eax
1001f9d9:	push   0x1
1001f9db:	lea    eax,[ebp+0x508]
1001f9e1:	push   eax
1001f9e2:	mov    eax,DWORD PTR [ebp-0x70]
1001f9e5:	mov    eax,DWORD PTR [eax]
1001f9e7:	mov    BYTE PTR [ebp+0x508],0xd
1001f9ee:	push   DWORD PTR [edi+eax*1]
1001f9f1:	call   DWORD PTR ds:0x100340ac
1001f9f7:	test   eax,eax
1001f9f9:	je     0x1001fcfe
1001f9ff:	cmp    DWORD PTR [ebp-0x5c],0x1
1001fa03:	jl     0x1001fd07
1001fa09:	inc    DWORD PTR [ebp-0x68]
1001fa0c:	inc    DWORD PTR [ebp-0x60]
1001fa0f:	jmp    0x1001fa72
1001fa11:	cmp    al,0x1
1001fa13:	je     0x1001fa19
1001fa15:	cmp    al,0x2
1001fa17:	jne    0x1001fa31
1001fa19:	movzx  esi,WORD PTR [ebx]
1001fa1c:	xor    ecx,ecx
1001fa1e:	cmp    si,0xa
1001fa22:	sete   cl
1001fa25:	inc    ebx
1001fa26:	inc    ebx
1001fa27:	add    DWORD PTR [ebp-0x54],0x2
1001fa2b:	mov    DWORD PTR [ebp-0x58],esi
1001fa2e:	mov    DWORD PTR [ebp-0x78],ecx
1001fa31:	cmp    al,0x1
1001fa33:	je     0x1001fa39
1001fa35:	cmp    al,0x2
1001fa37:	jne    0x1001fa72
1001fa39:	push   DWORD PTR [ebp-0x58]
1001fa3c:	call   0x10021d2d
1001fa41:	cmp    ax,WORD PTR [ebp-0x58]
1001fa45:	pop    ecx
1001fa46:	jne    0x1001fcfe
1001fa4c:	inc    DWORD PTR [ebp-0x60]
1001fa4f:	cmp    DWORD PTR [ebp-0x78],0x0
1001fa53:	je     0x1001fa72
1001fa55:	push   0xd
1001fa57:	pop    eax
1001fa58:	push   eax
1001fa59:	mov    DWORD PTR [ebp-0x58],eax
1001fa5c:	call   0x10021d2d
1001fa61:	cmp    ax,WORD PTR [ebp-0x58]
1001fa65:	pop    ecx
1001fa66:	jne    0x1001fcfe
1001fa6c:	inc    DWORD PTR [ebp-0x60]
1001fa6f:	inc    DWORD PTR [ebp-0x68]
1001fa72:	mov    eax,DWORD PTR [ebp+0x524]
1001fa78:	cmp    DWORD PTR [ebp-0x54],eax
1001fa7b:	jb     0x1001f8c9
1001fa81:	jmp    0x1001fd07
1001fa86:	mov    ecx,DWORD PTR [esi]
1001fa88:	mov    dl,BYTE PTR [ebx]
1001fa8a:	inc    DWORD PTR [ebp-0x60]
1001fa8d:	mov    BYTE PTR [edi+ecx*1+0x34],dl
1001fa91:	mov    ecx,DWORD PTR [esi]
1001fa93:	mov    DWORD PTR [edi+ecx*1+0x38],eax
1001fa97:	jmp    0x1001fd07
1001fa9c:	xor    ecx,ecx
1001fa9e:	mov    eax,DWORD PTR [esi]
1001faa0:	add    eax,edi
1001faa2:	test   BYTE PTR [eax+0x4],0x80
1001faa6:	je     0x1001fcd7
1001faac:	test   bl,bl
1001faae:	mov    eax,DWORD PTR [ebp-0x64]
1001fab1:	mov    DWORD PTR [ebp-0x58],ecx
1001fab4:	jne    0x1001fb50
1001faba:	cmp    DWORD PTR [ebp+0x524],ecx
1001fac0:	mov    DWORD PTR [ebp-0x5c],eax
1001fac3:	jbe    0x1001fd3d
1001fac9:	jmp    0x1001face
1001facb:	mov    esi,DWORD PTR [ebp-0x70]
1001face:	mov    ecx,DWORD PTR [ebp-0x5c]
1001fad1:	and    DWORD PTR [ebp-0x54],0x0
1001fad5:	sub    ecx,DWORD PTR [ebp-0x64]
1001fad8:	lea    eax,[ebp-0x50]
1001fadb:	cmp    ecx,DWORD PTR [ebp+0x524]
1001fae1:	jae    0x1001fb0a
1001fae3:	mov    edx,DWORD PTR [ebp-0x5c]
1001fae6:	inc    DWORD PTR [ebp-0x5c]
1001fae9:	mov    dl,BYTE PTR [edx]
1001faeb:	inc    ecx
1001faec:	cmp    dl,0xa
1001faef:	jne    0x1001fafb
1001faf1:	inc    DWORD PTR [ebp-0x68]
1001faf4:	mov    BYTE PTR [eax],0xd
1001faf7:	inc    eax
1001faf8:	inc    DWORD PTR [ebp-0x54]
1001fafb:	mov    BYTE PTR [eax],dl
1001fafd:	inc    eax
1001fafe:	inc    DWORD PTR [ebp-0x54]
1001fb01:	cmp    DWORD PTR [ebp-0x54],0x400
1001fb08:	jb     0x1001fadb
1001fb0a:	mov    ebx,eax
1001fb0c:	lea    eax,[ebp-0x50]
1001fb0f:	sub    ebx,eax
1001fb11:	push   0x0
1001fb13:	lea    eax,[ebp-0x6c]
1001fb16:	push   eax
1001fb17:	push   ebx
1001fb18:	lea    eax,[ebp-0x50]
1001fb1b:	push   eax
1001fb1c:	mov    eax,DWORD PTR [esi]
1001fb1e:	push   DWORD PTR [edi+eax*1]
1001fb21:	call   DWORD PTR ds:0x100340ac
1001fb27:	test   eax,eax
1001fb29:	je     0x1001fcfe
1001fb2f:	mov    eax,DWORD PTR [ebp-0x6c]
1001fb32:	add    DWORD PTR [ebp-0x60],eax
1001fb35:	cmp    eax,ebx
1001fb37:	jl     0x1001fd07
1001fb3d:	mov    eax,DWORD PTR [ebp-0x5c]
1001fb40:	sub    eax,DWORD PTR [ebp-0x64]
1001fb43:	cmp    eax,DWORD PTR [ebp+0x524]
1001fb49:	jb     0x1001facb
1001fb4b:	jmp    0x1001fd07
1001fb50:	cmp    bl,0x2
1001fb53:	mov    DWORD PTR [ebp-0x54],eax
1001fb56:	jne    0x1001fbff
1001fb5c:	cmp    DWORD PTR [ebp+0x524],ecx
1001fb62:	jbe    0x1001fd3d
1001fb68:	jmp    0x1001fb6d
1001fb6a:	mov    esi,DWORD PTR [ebp-0x70]
1001fb6d:	mov    ecx,DWORD PTR [ebp-0x54]
1001fb70:	and    DWORD PTR [ebp-0x5c],0x0
1001fb74:	sub    ecx,DWORD PTR [ebp-0x64]
1001fb77:	lea    eax,[ebp-0x50]
1001fb7a:	cmp    ecx,DWORD PTR [ebp+0x524]
1001fb80:	jae    0x1001fbb5
1001fb82:	mov    edx,DWORD PTR [ebp-0x54]
1001fb85:	add    DWORD PTR [ebp-0x54],0x2
1001fb89:	movzx  edx,WORD PTR [edx]
1001fb8c:	inc    ecx
1001fb8d:	inc    ecx
1001fb8e:	cmp    dx,0xa
1001fb92:	jne    0x1001fba3
1001fb94:	add    DWORD PTR [ebp-0x68],0x2
1001fb98:	mov    WORD PTR [eax],0xd
1001fb9d:	inc    eax
1001fb9e:	inc    eax
1001fb9f:	add    DWORD PTR [ebp-0x5c],0x2
1001fba3:	add    DWORD PTR [ebp-0x5c],0x2
1001fba7:	mov    WORD PTR [eax],dx
1001fbaa:	inc    eax
1001fbab:	inc    eax
1001fbac:	cmp    DWORD PTR [ebp-0x5c],0x3ff
1001fbb3:	jb     0x1001fb7a
1001fbb5:	mov    ebx,eax
1001fbb7:	lea    eax,[ebp-0x50]
1001fbba:	sub    ebx,eax
1001fbbc:	push   0x0
1001fbbe:	lea    eax,[ebp-0x6c]
1001fbc1:	push   eax
1001fbc2:	push   ebx
1001fbc3:	lea    eax,[ebp-0x50]
1001fbc6:	push   eax
1001fbc7:	mov    eax,DWORD PTR [esi]
1001fbc9:	push   DWORD PTR [edi+eax*1]
1001fbcc:	call   DWORD PTR ds:0x100340ac
1001fbd2:	test   eax,eax
1001fbd4:	je     0x1001fcfe
1001fbda:	mov    eax,DWORD PTR [ebp-0x6c]
1001fbdd:	add    DWORD PTR [ebp-0x60],eax
1001fbe0:	cmp    eax,ebx
1001fbe2:	jl     0x1001fd07
1001fbe8:	mov    eax,DWORD PTR [ebp-0x54]
1001fbeb:	sub    eax,DWORD PTR [ebp-0x64]
1001fbee:	cmp    eax,DWORD PTR [ebp+0x524]
1001fbf4:	jb     0x1001fb6a
1001fbfa:	jmp    0x1001fd07
1001fbff:	cmp    DWORD PTR [ebp+0x524],ecx
1001fc05:	jbe    0x1001fd3d
1001fc0b:	mov    ecx,DWORD PTR [ebp-0x54]
1001fc0e:	and    DWORD PTR [ebp-0x5c],0x0
1001fc12:	sub    ecx,DWORD PTR [ebp-0x64]
1001fc15:	push   0x2
1001fc17:	lea    eax,[ebp+0x3b4]
1001fc1d:	pop    esi
1001fc1e:	cmp    ecx,DWORD PTR [ebp+0x524]
1001fc24:	jae    0x1001fc52
1001fc26:	mov    edx,DWORD PTR [ebp-0x54]
1001fc29:	movzx  edx,WORD PTR [edx]
1001fc2c:	add    DWORD PTR [ebp-0x54],esi
1001fc2f:	add    ecx,esi
1001fc31:	cmp    dx,0xa
1001fc35:	jne    0x1001fc41
1001fc37:	mov    WORD PTR [eax],0xd
1001fc3c:	add    eax,esi
1001fc3e:	add    DWORD PTR [ebp-0x5c],esi
1001fc41:	add    DWORD PTR [ebp-0x5c],esi
1001fc44:	mov    WORD PTR [eax],dx
1001fc47:	add    eax,esi
1001fc49:	cmp    DWORD PTR [ebp-0x5c],0x152
1001fc50:	jb     0x1001fc1e
1001fc52:	xor    esi,esi
1001fc54:	push   esi
1001fc55:	push   esi
1001fc56:	push   0x2ab
1001fc5b:	lea    ecx,[ebp+0x104]
1001fc61:	push   ecx
1001fc62:	lea    ecx,[ebp+0x3b4]
1001fc68:	sub    eax,ecx
1001fc6a:	cdq    
1001fc6b:	sub    eax,edx
1001fc6d:	sar    eax,1
1001fc6f:	push   eax
1001fc70:	mov    eax,ecx
1001fc72:	push   eax
1001fc73:	push   esi
1001fc74:	push   0xfde9
1001fc79:	call   DWORD PTR ds:0x1003402c
1001fc7f:	mov    ebx,eax
1001fc81:	cmp    ebx,esi
1001fc83:	je     0x1001fcfe
1001fc85:	push   0x0
1001fc87:	lea    eax,[ebp-0x6c]
1001fc8a:	push   eax
1001fc8b:	mov    eax,ebx
1001fc8d:	sub    eax,esi
1001fc8f:	push   eax
1001fc90:	lea    eax,[ebp+esi*1+0x104]
1001fc97:	push   eax
1001fc98:	mov    eax,DWORD PTR [ebp-0x70]
1001fc9b:	mov    eax,DWORD PTR [eax]
1001fc9d:	push   DWORD PTR [edi+eax*1]
1001fca0:	call   DWORD PTR ds:0x100340ac
1001fca6:	test   eax,eax
1001fca8:	je     0x1001fcb3
1001fcaa:	add    esi,DWORD PTR [ebp-0x6c]
1001fcad:	cmp    ebx,esi
1001fcaf:	jg     0x1001fc85
1001fcb1:	jmp    0x1001fcbc
1001fcb3:	call   DWORD PTR ds:0x1003407c
1001fcb9:	mov    DWORD PTR [ebp-0x58],eax
1001fcbc:	cmp    ebx,esi
1001fcbe:	jg     0x1001fd07
1001fcc0:	mov    eax,DWORD PTR [ebp-0x54]
1001fcc3:	sub    eax,DWORD PTR [ebp-0x64]
1001fcc6:	cmp    eax,DWORD PTR [ebp+0x524]
1001fccc:	mov    DWORD PTR [ebp-0x60],eax
1001fccf:	jb     0x1001fc0b
1001fcd5:	jmp    0x1001fd07
1001fcd7:	push   0x0
1001fcd9:	lea    ecx,[ebp-0x6c]
1001fcdc:	push   ecx
1001fcdd:	push   DWORD PTR [ebp+0x524]
1001fce3:	push   DWORD PTR [ebp-0x64]
1001fce6:	push   DWORD PTR [eax]
1001fce8:	call   DWORD PTR ds:0x100340ac
1001fcee:	test   eax,eax
1001fcf0:	je     0x1001fcfe
1001fcf2:	mov    eax,DWORD PTR [ebp-0x6c]
1001fcf5:	and    DWORD PTR [ebp-0x58],0x0
1001fcf9:	mov    DWORD PTR [ebp-0x60],eax
1001fcfc:	jmp    0x1001fd07
1001fcfe:	call   DWORD PTR ds:0x1003407c
1001fd04:	mov    DWORD PTR [ebp-0x58],eax
1001fd07:	cmp    DWORD PTR [ebp-0x60],0x0
1001fd0b:	jne    0x1001fd6a
1001fd0d:	cmp    DWORD PTR [ebp-0x58],0x0
1001fd11:	je     0x1001fd3a
1001fd13:	push   0x5
1001fd15:	pop    esi
1001fd16:	cmp    DWORD PTR [ebp-0x58],esi
1001fd19:	jne    0x1001fd2f
1001fd1b:	call   0x1001a18e
1001fd20:	mov    DWORD PTR [eax],0x9
1001fd26:	call   0x1001a1a1
1001fd2b:	mov    DWORD PTR [eax],esi
1001fd2d:	jmp    0x1001fd65
1001fd2f:	push   DWORD PTR [ebp-0x58]
1001fd32:	call   0x1001a1b4
1001fd37:	pop    ecx
1001fd38:	jmp    0x1001fd65
1001fd3a:	mov    esi,DWORD PTR [ebp-0x70]
1001fd3d:	mov    eax,DWORD PTR [esi]
1001fd3f:	test   BYTE PTR [edi+eax*1+0x4],0x40
1001fd44:	je     0x1001fd52
1001fd46:	mov    eax,DWORD PTR [ebp-0x64]
1001fd49:	cmp    BYTE PTR [eax],0x1a
1001fd4c:	jne    0x1001fd52
1001fd4e:	xor    eax,eax
1001fd50:	jmp    0x1001fd70
1001fd52:	call   0x1001a18e
1001fd57:	mov    DWORD PTR [eax],0x1c
1001fd5d:	call   0x1001a1a1
1001fd62:	and    DWORD PTR [eax],0x0
1001fd65:	or     eax,0xffffffff
1001fd68:	jmp    0x1001fd70
1001fd6a:	mov    eax,DWORD PTR [ebp-0x60]
1001fd6d:	sub    eax,DWORD PTR [ebp-0x68]
1001fd70:	pop    edi
1001fd71:	pop    ebx
1001fd72:	mov    ecx,DWORD PTR [ebp+0x510]
1001fd78:	xor    ecx,ebp
1001fd7a:	pop    esi
1001fd7b:	call   0x10015b2b
1001fd80:	add    ebp,0x514
1001fd86:	leave  
1001fd87:	ret    
1001fd88:	push   0x10
1001fd8a:	push   0x10085ad0
1001fd8f:	call   0x10017f88
1001fd94:	mov    eax,DWORD PTR [ebp+0x8]
1001fd97:	cmp    eax,0xfffffffe
1001fd9a:	jne    0x1001fdb7
1001fd9c:	call   0x1001a1a1
1001fda1:	and    DWORD PTR [eax],0x0
1001fda4:	call   0x1001a18e
1001fda9:	mov    DWORD PTR [eax],0x9
1001fdaf:	or     eax,0xffffffff
1001fdb2:	jmp    0x1001fe54
1001fdb7:	xor    edi,edi
1001fdb9:	cmp    eax,edi
1001fdbb:	jl     0x1001fdc5
1001fdbd:	cmp    eax,DWORD PTR ds:0x10098ac4
1001fdc3:	jb     0x1001fde6
1001fdc5:	call   0x1001a1a1
1001fdca:	mov    DWORD PTR [eax],edi
1001fdcc:	call   0x1001a18e
1001fdd1:	mov    DWORD PTR [eax],0x9
1001fdd7:	push   edi
1001fdd8:	push   edi
1001fdd9:	push   edi
1001fdda:	push   edi
1001fddb:	push   edi
1001fddc:	call   0x1001616f
1001fde1:	add    esp,0x14
1001fde4:	jmp    0x1001fdaf
1001fde6:	mov    ecx,eax
1001fde8:	sar    ecx,0x5
1001fdeb:	lea    ebx,[ecx*4+0x10098ae0]
1001fdf2:	mov    esi,eax
1001fdf4:	and    esi,0x1f
1001fdf7:	shl    esi,0x6
1001fdfa:	mov    ecx,DWORD PTR [ebx]
1001fdfc:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
1001fe01:	and    ecx,0x1
1001fe04:	je     0x1001fdc5
1001fe06:	push   eax
1001fe07:	call   0x1001e647
1001fe0c:	pop    ecx
1001fe0d:	mov    DWORD PTR [ebp-0x4],edi
1001fe10:	mov    eax,DWORD PTR [ebx]
1001fe12:	test   BYTE PTR [eax+esi*1+0x4],0x1
1001fe17:	je     0x1001fe2f
1001fe19:	push   DWORD PTR [ebp+0x10]
1001fe1c:	push   DWORD PTR [ebp+0xc]
1001fe1f:	push   DWORD PTR [ebp+0x8]
1001fe22:	call   0x1001f766
1001fe27:	add    esp,0xc
1001fe2a:	mov    DWORD PTR [ebp-0x1c],eax
1001fe2d:	jmp    0x1001fe45
1001fe2f:	call   0x1001a18e
1001fe34:	mov    DWORD PTR [eax],0x9
1001fe3a:	call   0x1001a1a1
1001fe3f:	mov    DWORD PTR [eax],edi
1001fe41:	or     DWORD PTR [ebp-0x1c],0xffffffff
1001fe45:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001fe4c:	call   0x1001fe5a
1001fe51:	mov    eax,DWORD PTR [ebp-0x1c]
1001fe54:	call   0x10017fcd
1001fe59:	ret    
1001fe5a:	push   DWORD PTR [ebp+0x8]
1001fe5d:	call   0x1001e6e7
1001fe62:	pop    ecx
1001fe63:	ret    
1001fe64:	int3   
1001fe65:	int3   
1001fe66:	int3   
1001fe67:	int3   
1001fe68:	int3   
1001fe69:	int3   
1001fe6a:	int3   
1001fe6b:	int3   
1001fe6c:	int3   
1001fe6d:	int3   
1001fe6e:	int3   
1001fe6f:	int3   
1001fe70:	push   ebp
1001fe71:	mov    ebp,esp
1001fe73:	push   edi
1001fe74:	mov    edi,DWORD PTR [ebp+0x8]
1001fe77:	xor    eax,eax
1001fe79:	or     ecx,0xffffffff
1001fe7c:	repnz scas al,BYTE PTR es:[edi]
1001fe7e:	add    ecx,0x1
1001fe81:	neg    ecx
1001fe83:	sub    edi,0x1
1001fe86:	mov    al,BYTE PTR [ebp+0xc]
1001fe89:	std    
1001fe8a:	repnz scas al,BYTE PTR es:[edi]
1001fe8c:	add    edi,0x1
1001fe8f:	cmp    BYTE PTR [edi],al
1001fe91:	je     0x1001fe97
1001fe93:	xor    eax,eax
1001fe95:	jmp    0x1001fe99
1001fe97:	mov    eax,edi
1001fe99:	cld    
1001fe9a:	pop    edi
1001fe9b:	leave  
1001fe9c:	ret    
1001fe9d:	ret    
1001fe9e:	mov    eax,0x10023300
1001fea3:	mov    ds:0x10096170,eax
1001fea8:	mov    DWORD PTR ds:0x10096174,0x100229fc
1001feb2:	mov    DWORD PTR ds:0x10096178,0x100229ba
1001febc:	mov    DWORD PTR ds:0x1009617c,0x100229ee
1001fec6:	mov    DWORD PTR ds:0x10096180,0x10022964
1001fed0:	mov    ds:0x10096184,eax
1001fed5:	mov    DWORD PTR ds:0x10096188,0x1002327a
1001fedf:	mov    DWORD PTR ds:0x1009618c,0x1002297a
1001fee9:	mov    DWORD PTR ds:0x10096190,0x100228e4
1001fef3:	mov    DWORD PTR ds:0x10096194,0x10022873
1001fefd:	ret    
1001fefe:	call   0x1001fe9e
1001ff03:	call   0x10023386
1001ff08:	cmp    DWORD PTR [esp+0x4],0x0
1001ff0d:	mov    ds:0x100977b8,eax
1001ff12:	je     0x1001ff19
1001ff14:	call   0x10023321
1001ff19:	fnclex 
1001ff1b:	ret    
1001ff1c:	push   ebp
1001ff1d:	mov    ebp,esp
1001ff1f:	sub    esp,0x10
1001ff22:	mov    eax,ds:0x100951fc
1001ff27:	xor    eax,ebp
1001ff29:	mov    DWORD PTR [ebp-0x4],eax
1001ff2c:	push   ebx
1001ff2d:	push   esi
1001ff2e:	mov    esi,DWORD PTR ds:0x10034224
1001ff34:	xor    ebx,ebx
1001ff36:	cmp    DWORD PTR ds:0x100977bc,ebx
1001ff3c:	push   edi
1001ff3d:	mov    edi,ecx
1001ff3f:	jne    0x1001ff77
1001ff41:	push   ebx
1001ff42:	push   ebx
1001ff43:	push   0x1
1001ff45:	push   0x1008432c
1001ff4a:	push   0x100
1001ff4f:	push   ebx
1001ff50:	call   esi
1001ff52:	test   eax,eax
1001ff54:	je     0x1001ff62
1001ff56:	mov    DWORD PTR ds:0x100977bc,0x1
1001ff60:	jmp    0x1001ff77
1001ff62:	call   DWORD PTR ds:0x1003407c
1001ff68:	cmp    eax,0x78
1001ff6b:	jne    0x1001ff77
1001ff6d:	mov    DWORD PTR ds:0x100977bc,0x2
1001ff77:	cmp    DWORD PTR [ebp+0x14],ebx
1001ff7a:	jle    0x1001ff99
1001ff7c:	mov    ecx,DWORD PTR [ebp+0x14]
1001ff7f:	mov    eax,DWORD PTR [ebp+0x10]
1001ff82:	dec    ecx
1001ff83:	cmp    WORD PTR [eax],bx
1001ff86:	je     0x1001ff91
1001ff88:	inc    eax
1001ff89:	inc    eax
1001ff8a:	cmp    ecx,ebx
1001ff8c:	jne    0x1001ff82
1001ff8e:	or     ecx,0xffffffff
1001ff91:	or     eax,0xffffffff
1001ff94:	sub    eax,ecx
1001ff96:	add    DWORD PTR [ebp+0x14],eax
1001ff99:	mov    eax,ds:0x100977bc
1001ff9e:	cmp    eax,0x1
1001ffa1:	jne    0x1001ffbc
1001ffa3:	push   DWORD PTR [ebp+0x1c]
1001ffa6:	push   DWORD PTR [ebp+0x18]
1001ffa9:	push   DWORD PTR [ebp+0x14]
1001ffac:	push   DWORD PTR [ebp+0x10]
1001ffaf:	push   DWORD PTR [ebp+0xc]
1001ffb2:	push   DWORD PTR [ebp+0x8]
1001ffb5:	call   esi
1001ffb7:	jmp    0x1002016b
1001ffbc:	cmp    eax,0x2
1001ffbf:	je     0x1001ffc5
1001ffc1:	cmp    eax,ebx
1001ffc3:	jne    0x10020017
1001ffc5:	cmp    DWORD PTR [ebp+0x8],ebx
1001ffc8:	mov    DWORD PTR [ebp-0xc],ebx
1001ffcb:	jne    0x1001ffd5
1001ffcd:	mov    eax,DWORD PTR [edi]
1001ffcf:	mov    eax,DWORD PTR [eax+0x14]
1001ffd2:	mov    DWORD PTR [ebp+0x8],eax
1001ffd5:	cmp    DWORD PTR [ebp+0x20],ebx
1001ffd8:	jne    0x1001ffe2
1001ffda:	mov    eax,DWORD PTR [edi]
1001ffdc:	mov    eax,DWORD PTR [eax+0x4]
1001ffdf:	mov    DWORD PTR [ebp+0x20],eax
1001ffe2:	push   DWORD PTR [ebp+0x8]
1001ffe5:	call   0x10020980
1001ffea:	cmp    DWORD PTR [ebp+0x20],eax
1001ffed:	pop    ecx
1001ffee:	je     0x1001fff8
1001fff0:	cmp    eax,0xffffffff
1001fff3:	je     0x1001fff8
1001fff5:	mov    DWORD PTR [ebp+0x20],eax
1001fff8:	mov    esi,DWORD PTR ds:0x1003402c
1001fffe:	push   ebx
1001ffff:	push   ebx
10020000:	push   ebx
10020001:	push   ebx
10020002:	push   DWORD PTR [ebp+0x14]
10020005:	push   DWORD PTR [ebp+0x10]
10020008:	push   ebx
10020009:	push   DWORD PTR [ebp+0x20]
1002000c:	call   esi
1002000e:	mov    edi,eax
10020010:	cmp    edi,ebx
10020012:	mov    DWORD PTR [ebp-0x10],edi
10020015:	jne    0x1002001e
10020017:	xor    eax,eax
10020019:	jmp    0x1002016b
1002001e:	jle    0x10020062
10020020:	push   0xffffffe0
10020022:	xor    edx,edx
10020024:	pop    eax
10020025:	div    edi
10020027:	cmp    eax,0x1
1002002a:	jb     0x10020062
1002002c:	lea    eax,[edi+0x8]
1002002f:	cmp    eax,0x400
10020034:	ja     0x10020049
10020036:	call   0x10015b40
1002003b:	mov    eax,esp
1002003d:	cmp    eax,ebx
1002003f:	je     0x1002005d
10020041:	mov    DWORD PTR [eax],0xcccc
10020047:	jmp    0x1002005a
10020049:	push   eax
1002004a:	call   0x10016c62
1002004f:	cmp    eax,ebx
10020051:	pop    ecx
10020052:	je     0x1002005d
10020054:	mov    DWORD PTR [eax],0xdddd
1002005a:	add    eax,0x8
1002005d:	mov    DWORD PTR [ebp-0x8],eax
10020060:	jmp    0x10020065
10020062:	mov    DWORD PTR [ebp-0x8],ebx
10020065:	cmp    DWORD PTR [ebp-0x8],ebx
10020068:	je     0x10020017
1002006a:	push   ebx
1002006b:	push   ebx
1002006c:	push   edi
1002006d:	push   DWORD PTR [ebp-0x8]
10020070:	push   DWORD PTR [ebp+0x14]
10020073:	push   DWORD PTR [ebp+0x10]
10020076:	push   ebx
10020077:	push   DWORD PTR [ebp+0x20]
1002007a:	call   esi
1002007c:	test   eax,eax
1002007e:	je     0x1002015f
10020084:	push   ebx
10020085:	push   ebx
10020086:	push   edi
10020087:	push   DWORD PTR [ebp-0x8]
1002008a:	mov    edi,DWORD PTR ds:0x10034220
10020090:	push   DWORD PTR [ebp+0xc]
10020093:	push   DWORD PTR [ebp+0x8]
10020096:	call   edi
10020098:	mov    esi,eax
1002009a:	cmp    esi,ebx
1002009c:	je     0x1002015f
100200a2:	jle    0x100200e3
100200a4:	push   0xffffffe0
100200a6:	xor    edx,edx
100200a8:	pop    eax
100200a9:	div    esi
100200ab:	cmp    eax,0x1
100200ae:	jb     0x100200e3
100200b0:	lea    eax,[esi+0x8]
100200b3:	cmp    eax,0x400
100200b8:	ja     0x100200cd
100200ba:	call   0x10015b40
100200bf:	mov    eax,esp
100200c1:	cmp    eax,ebx
100200c3:	je     0x100200e1
100200c5:	mov    DWORD PTR [eax],0xcccc
100200cb:	jmp    0x100200de
100200cd:	push   eax
100200ce:	call   0x10016c62
100200d3:	cmp    eax,ebx
100200d5:	pop    ecx
100200d6:	je     0x100200e1
100200d8:	mov    DWORD PTR [eax],0xdddd
100200de:	add    eax,0x8
100200e1:	mov    ebx,eax
100200e3:	test   ebx,ebx
100200e5:	je     0x1002015f
100200e7:	push   esi
100200e8:	push   ebx
100200e9:	push   DWORD PTR [ebp-0x10]
100200ec:	push   DWORD PTR [ebp-0x8]
100200ef:	push   DWORD PTR [ebp+0xc]
100200f2:	push   DWORD PTR [ebp+0x8]
100200f5:	call   edi
100200f7:	test   eax,eax
100200f9:	je     0x10020158
100200fb:	test   WORD PTR [ebp+0xc],0x400
10020101:	je     0x10020137
10020103:	mov    eax,DWORD PTR [ebp+0x1c]
10020106:	xor    edi,edi
10020108:	cmp    eax,edi
1002010a:	mov    DWORD PTR [ebp-0xc],esi
1002010d:	je     0x10020158
1002010f:	cmp    eax,esi
10020111:	jg     0x10020116
10020113:	lea    esi,[eax-0x1]
10020116:	push   esi
10020117:	push   ebx
10020118:	push   eax
10020119:	push   DWORD PTR [ebp+0x18]
1002011c:	call   0x10020686
10020121:	add    esp,0x10
10020124:	test   eax,eax
10020126:	je     0x10020158
10020128:	push   edi
10020129:	push   edi
1002012a:	push   edi
1002012b:	push   edi
1002012c:	push   edi
1002012d:	call   0x10016073
10020132:	add    esp,0x14
10020135:	jmp    0x10020158
10020137:	xor    eax,eax
10020139:	cmp    DWORD PTR [ebp+0x1c],eax
1002013c:	jne    0x10020142
1002013e:	push   eax
1002013f:	push   eax
10020140:	jmp    0x10020148
10020142:	push   DWORD PTR [ebp+0x1c]
10020145:	push   DWORD PTR [ebp+0x18]
10020148:	push   esi
10020149:	push   ebx
1002014a:	push   0x1
1002014c:	push   DWORD PTR [ebp+0x20]
1002014f:	call   DWORD PTR ds:0x10034080
10020155:	mov    DWORD PTR [ebp-0xc],eax
10020158:	push   ebx
10020159:	call   0x10017a6c
1002015e:	pop    ecx
1002015f:	push   DWORD PTR [ebp-0x8]
10020162:	call   0x10017a6c
10020167:	mov    eax,DWORD PTR [ebp-0xc]
1002016a:	pop    ecx
1002016b:	lea    esp,[ebp-0x1c]
1002016e:	pop    edi
1002016f:	pop    esi
10020170:	pop    ebx
10020171:	mov    ecx,DWORD PTR [ebp-0x4]
10020174:	xor    ecx,ebp
10020176:	call   0x10015b2b
1002017b:	leave  
1002017c:	ret    
1002017d:	push   ebp
1002017e:	mov    ebp,esp
10020180:	sub    esp,0x10
10020183:	push   DWORD PTR [ebp+0x8]
10020186:	lea    ecx,[ebp-0x10]
10020189:	call   0x100165fa
1002018e:	push   DWORD PTR [ebp+0x24]
10020191:	lea    ecx,[ebp-0x10]
10020194:	push   DWORD PTR [ebp+0x20]
10020197:	push   DWORD PTR [ebp+0x1c]
1002019a:	push   DWORD PTR [ebp+0x18]
1002019d:	push   DWORD PTR [ebp+0x14]
100201a0:	push   DWORD PTR [ebp+0x10]
100201a3:	push   DWORD PTR [ebp+0xc]
100201a6:	call   0x1001ff1c
100201ab:	add    esp,0x1c
100201ae:	cmp    BYTE PTR [ebp-0x4],0x0
100201b2:	je     0x100201bb
100201b4:	mov    ecx,DWORD PTR [ebp-0x8]
100201b7:	and    DWORD PTR [ecx+0x70],0xfffffffd
100201bb:	leave  
100201bc:	ret    
100201bd:	push   ebp
100201be:	mov    ebp,esp
100201c0:	sub    esp,0x10
100201c3:	push   DWORD PTR [ebp+0x8]
100201c6:	lea    ecx,[ebp-0x10]
100201c9:	call   0x100165fa
100201ce:	movzx  eax,BYTE PTR [ebp+0xc]
100201d2:	mov    ecx,DWORD PTR [ebp-0xc]
100201d5:	mov    dl,BYTE PTR [ebp+0x14]
100201d8:	test   BYTE PTR [ecx+eax*1+0x1d],dl
100201dc:	jne    0x100201fc
100201de:	cmp    DWORD PTR [ebp+0x10],0x0
100201e2:	je     0x100201f6
100201e4:	mov    ecx,DWORD PTR [ebp-0x10]
100201e7:	mov    ecx,DWORD PTR [ecx+0xc8]
100201ed:	movzx  eax,WORD PTR [ecx+eax*2]
100201f1:	and    eax,DWORD PTR [ebp+0x10]
100201f4:	jmp    0x100201f8
100201f6:	xor    eax,eax
100201f8:	test   eax,eax
100201fa:	je     0x100201ff
100201fc:	xor    eax,eax
100201fe:	inc    eax
100201ff:	cmp    BYTE PTR [ebp-0x4],0x0
10020203:	je     0x1002020c
10020205:	mov    ecx,DWORD PTR [ebp-0x8]
10020208:	and    DWORD PTR [ecx+0x70],0xfffffffd
1002020c:	leave  
1002020d:	ret    
1002020e:	push   0x4
10020210:	push   0x0
10020212:	push   DWORD PTR [esp+0xc]
10020216:	push   0x0
10020218:	call   0x100201bd
1002021d:	add    esp,0x10
10020220:	ret    
10020221:	int3   
10020222:	int3   
10020223:	int3   
10020224:	int3   
10020225:	int3   
10020226:	int3   
10020227:	int3   
10020228:	int3   
10020229:	int3   
1002022a:	int3   
1002022b:	int3   
1002022c:	int3   
1002022d:	int3   
1002022e:	int3   
1002022f:	int3   
10020230:	mov    ecx,DWORD PTR [esp+0x4]
10020234:	cmp    WORD PTR [ecx],0x5a4d
10020239:	je     0x1002023e
1002023b:	xor    eax,eax
1002023d:	ret    
1002023e:	mov    eax,DWORD PTR [ecx+0x3c]
10020241:	add    eax,ecx
10020243:	cmp    DWORD PTR [eax],0x4550
10020249:	jne    0x1002023b
1002024b:	xor    ecx,ecx
1002024d:	cmp    WORD PTR [eax+0x18],0x10b
10020253:	sete   cl
10020256:	mov    eax,ecx
10020258:	ret    
10020259:	int3   
1002025a:	int3   
1002025b:	int3   
1002025c:	int3   
1002025d:	int3   
1002025e:	int3   
1002025f:	int3   
10020260:	mov    eax,DWORD PTR [esp+0x4]
10020264:	mov    ecx,DWORD PTR [eax+0x3c]
10020267:	add    ecx,eax
10020269:	movzx  eax,WORD PTR [ecx+0x14]
1002026d:	push   ebx
1002026e:	push   esi
1002026f:	movzx  esi,WORD PTR [ecx+0x6]
10020273:	xor    edx,edx
10020275:	test   esi,esi
10020277:	push   edi
10020278:	lea    eax,[eax+ecx*1+0x18]
1002027c:	jbe    0x1002029c
1002027e:	mov    edi,DWORD PTR [esp+0x14]
10020282:	mov    ecx,DWORD PTR [eax+0xc]
10020285:	cmp    edi,ecx
10020287:	jb     0x10020292
10020289:	mov    ebx,DWORD PTR [eax+0x8]
1002028c:	add    ebx,ecx
1002028e:	cmp    edi,ebx
10020290:	jb     0x1002029e
10020292:	add    edx,0x1
10020295:	add    eax,0x28
10020298:	cmp    edx,esi
1002029a:	jb     0x10020282
1002029c:	xor    eax,eax
1002029e:	pop    edi
1002029f:	pop    esi
100202a0:	pop    ebx
100202a1:	ret    
100202a2:	int3   
100202a3:	int3   
100202a4:	int3   
100202a5:	int3   
100202a6:	int3   
100202a7:	int3   
100202a8:	int3   
100202a9:	int3   
100202aa:	int3   
100202ab:	int3   
100202ac:	int3   
100202ad:	int3   
100202ae:	int3   
100202af:	int3   
100202b0:	push   ebp
100202b1:	mov    ebp,esp
100202b3:	push   0xfffffffe
100202b5:	push   0x10085af0
100202ba:	push   0x10017df0
100202bf:	mov    eax,fs:0x0
100202c5:	push   eax
100202c6:	sub    esp,0x8
100202c9:	push   ebx
100202ca:	push   esi
100202cb:	push   edi
100202cc:	mov    eax,ds:0x100951fc
100202d1:	xor    DWORD PTR [ebp-0x8],eax
100202d4:	xor    eax,ebp
100202d6:	push   eax
100202d7:	lea    eax,[ebp-0x10]
100202da:	mov    fs:0x0,eax
100202e0:	mov    DWORD PTR [ebp-0x18],esp
100202e3:	mov    DWORD PTR [ebp-0x4],0x0
100202ea:	push   0x10000000
100202ef:	call   0x10020230
100202f4:	add    esp,0x4
100202f7:	test   eax,eax
100202f9:	je     0x10020350
100202fb:	mov    eax,DWORD PTR [ebp+0x8]
100202fe:	sub    eax,0x10000000
10020303:	push   eax
10020304:	push   0x10000000
10020309:	call   0x10020260
1002030e:	add    esp,0x8
10020311:	test   eax,eax
10020313:	je     0x10020350
10020315:	mov    eax,DWORD PTR [eax+0x24]
10020318:	shr    eax,0x1f
1002031b:	not    eax
1002031d:	and    eax,0x1
10020320:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10020327:	mov    ecx,DWORD PTR [ebp-0x10]
1002032a:	mov    DWORD PTR fs:0x0,ecx
10020331:	pop    ecx
10020332:	pop    edi
10020333:	pop    esi
10020334:	pop    ebx
10020335:	mov    esp,ebp
10020337:	pop    ebp
10020338:	ret    
10020339:	mov    eax,DWORD PTR [ebp-0x14]
1002033c:	mov    ecx,DWORD PTR [eax]
1002033e:	mov    eax,DWORD PTR [ecx]
10020340:	xor    edx,edx
10020342:	cmp    eax,0xc0000005
10020347:	sete   dl
1002034a:	mov    eax,edx
1002034c:	ret    
1002034d:	mov    esp,DWORD PTR [ebp-0x18]
10020350:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10020357:	xor    eax,eax
10020359:	mov    ecx,DWORD PTR [ebp-0x10]
1002035c:	mov    DWORD PTR fs:0x0,ecx
10020363:	pop    ecx
10020364:	pop    edi
10020365:	pop    esi
10020366:	pop    ebx
10020367:	mov    esp,ebp
10020369:	pop    ebp
1002036a:	ret    
1002036b:	push   esi
1002036c:	mov    esi,DWORD PTR [esp+0x8]
10020370:	test   esi,esi
10020372:	je     0x100204f9
10020378:	push   DWORD PTR [esi+0x4]
1002037b:	call   0x10016b85
10020380:	push   DWORD PTR [esi+0x8]
10020383:	call   0x10016b85
10020388:	push   DWORD PTR [esi+0xc]
1002038b:	call   0x10016b85
10020390:	push   DWORD PTR [esi+0x10]
10020393:	call   0x10016b85
10020398:	push   DWORD PTR [esi+0x14]
1002039b:	call   0x10016b85
100203a0:	push   DWORD PTR [esi+0x18]
100203a3:	call   0x10016b85
100203a8:	push   DWORD PTR [esi]
100203aa:	call   0x10016b85
100203af:	push   DWORD PTR [esi+0x20]
100203b2:	call   0x10016b85
100203b7:	push   DWORD PTR [esi+0x24]
100203ba:	call   0x10016b85
100203bf:	push   DWORD PTR [esi+0x28]
100203c2:	call   0x10016b85
100203c7:	push   DWORD PTR [esi+0x2c]
100203ca:	call   0x10016b85
100203cf:	push   DWORD PTR [esi+0x30]
100203d2:	call   0x10016b85
100203d7:	push   DWORD PTR [esi+0x34]
100203da:	call   0x10016b85
100203df:	push   DWORD PTR [esi+0x1c]
100203e2:	call   0x10016b85
100203e7:	push   DWORD PTR [esi+0x38]
100203ea:	call   0x10016b85
100203ef:	push   DWORD PTR [esi+0x3c]
100203f2:	call   0x10016b85
100203f7:	add    esp,0x40
100203fa:	push   DWORD PTR [esi+0x40]
100203fd:	call   0x10016b85
10020402:	push   DWORD PTR [esi+0x44]
10020405:	call   0x10016b85
1002040a:	push   DWORD PTR [esi+0x48]
1002040d:	call   0x10016b85
10020412:	push   DWORD PTR [esi+0x4c]
10020415:	call   0x10016b85
1002041a:	push   DWORD PTR [esi+0x50]
1002041d:	call   0x10016b85
10020422:	push   DWORD PTR [esi+0x54]
10020425:	call   0x10016b85
1002042a:	push   DWORD PTR [esi+0x58]
1002042d:	call   0x10016b85
10020432:	push   DWORD PTR [esi+0x5c]
10020435:	call   0x10016b85
1002043a:	push   DWORD PTR [esi+0x60]
1002043d:	call   0x10016b85
10020442:	push   DWORD PTR [esi+0x64]
10020445:	call   0x10016b85
1002044a:	push   DWORD PTR [esi+0x68]
1002044d:	call   0x10016b85
10020452:	push   DWORD PTR [esi+0x6c]
10020455:	call   0x10016b85
1002045a:	push   DWORD PTR [esi+0x70]
1002045d:	call   0x10016b85
10020462:	push   DWORD PTR [esi+0x74]
10020465:	call   0x10016b85
1002046a:	push   DWORD PTR [esi+0x78]
1002046d:	call   0x10016b85
10020472:	push   DWORD PTR [esi+0x7c]
10020475:	call   0x10016b85
1002047a:	add    esp,0x40
1002047d:	push   DWORD PTR [esi+0x80]
10020483:	call   0x10016b85
10020488:	push   DWORD PTR [esi+0x84]
1002048e:	call   0x10016b85
10020493:	push   DWORD PTR [esi+0x88]
10020499:	call   0x10016b85
1002049e:	push   DWORD PTR [esi+0x8c]
100204a4:	call   0x10016b85
100204a9:	push   DWORD PTR [esi+0x90]
100204af:	call   0x10016b85
100204b4:	push   DWORD PTR [esi+0x94]
100204ba:	call   0x10016b85
100204bf:	push   DWORD PTR [esi+0x98]
100204c5:	call   0x10016b85
100204ca:	push   DWORD PTR [esi+0x9c]
100204d0:	call   0x10016b85
100204d5:	push   DWORD PTR [esi+0xa0]
100204db:	call   0x10016b85
100204e0:	push   DWORD PTR [esi+0xa4]
100204e6:	call   0x10016b85
100204eb:	push   DWORD PTR [esi+0xa8]
100204f1:	call   0x10016b85
100204f6:	add    esp,0x2c
100204f9:	pop    esi
100204fa:	ret    
100204fb:	push   esi
100204fc:	mov    esi,DWORD PTR [esp+0x8]
10020500:	test   esi,esi
10020502:	je     0x10020539
10020504:	mov    eax,DWORD PTR [esi]
10020506:	cmp    eax,DWORD PTR ds:0x10096118
1002050c:	je     0x10020515
1002050e:	push   eax
1002050f:	call   0x10016b85
10020514:	pop    ecx
10020515:	mov    eax,DWORD PTR [esi+0x4]
10020518:	cmp    eax,DWORD PTR ds:0x1009611c
1002051e:	je     0x10020527
10020520:	push   eax
10020521:	call   0x10016b85
10020526:	pop    ecx
10020527:	mov    esi,DWORD PTR [esi+0x8]
1002052a:	cmp    esi,DWORD PTR ds:0x10096120
10020530:	je     0x10020539
10020532:	push   esi
10020533:	call   0x10016b85
10020538:	pop    ecx
10020539:	pop    esi
1002053a:	ret    
1002053b:	push   esi
1002053c:	mov    esi,DWORD PTR [esp+0x8]
10020540:	test   esi,esi
10020542:	je     0x100205c2
10020544:	mov    eax,DWORD PTR [esi+0xc]
10020547:	cmp    eax,DWORD PTR ds:0x10096124
1002054d:	je     0x10020556
1002054f:	push   eax
10020550:	call   0x10016b85
10020555:	pop    ecx
10020556:	mov    eax,DWORD PTR [esi+0x10]
10020559:	cmp    eax,DWORD PTR ds:0x10096128
1002055f:	je     0x10020568
10020561:	push   eax
10020562:	call   0x10016b85
10020567:	pop    ecx
10020568:	mov    eax,DWORD PTR [esi+0x14]
1002056b:	cmp    eax,DWORD PTR ds:0x1009612c
10020571:	je     0x1002057a
10020573:	push   eax
10020574:	call   0x10016b85
10020579:	pop    ecx
1002057a:	mov    eax,DWORD PTR [esi+0x18]
1002057d:	cmp    eax,DWORD PTR ds:0x10096130
10020583:	je     0x1002058c
10020585:	push   eax
10020586:	call   0x10016b85
1002058b:	pop    ecx
1002058c:	mov    eax,DWORD PTR [esi+0x1c]
1002058f:	cmp    eax,DWORD PTR ds:0x10096134
10020595:	je     0x1002059e
10020597:	push   eax
10020598:	call   0x10016b85
1002059d:	pop    ecx
1002059e:	mov    eax,DWORD PTR [esi+0x20]
100205a1:	cmp    eax,DWORD PTR ds:0x10096138
100205a7:	je     0x100205b0
100205a9:	push   eax
100205aa:	call   0x10016b85
100205af:	pop    ecx
100205b0:	mov    esi,DWORD PTR [esi+0x24]
100205b3:	cmp    esi,DWORD PTR ds:0x1009613c
100205b9:	je     0x100205c2
100205bb:	push   esi
100205bc:	call   0x10016b85
100205c1:	pop    ecx
100205c2:	pop    esi
100205c3:	ret    
100205c4:	mov    eax,DWORD PTR [esp+0x4]
100205c8:	push   ebx
100205c9:	xor    ebx,ebx
100205cb:	cmp    eax,ebx
100205cd:	push   esi
100205ce:	push   edi
100205cf:	je     0x100205d9
100205d1:	mov    edi,DWORD PTR [esp+0x14]
100205d5:	cmp    edi,ebx
100205d7:	ja     0x100205f4
100205d9:	call   0x1001a18e
100205de:	push   0x16
100205e0:	pop    esi
100205e1:	mov    DWORD PTR [eax],esi
100205e3:	push   ebx
100205e4:	push   ebx
100205e5:	push   ebx
100205e6:	push   ebx
100205e7:	push   ebx
100205e8:	call   0x1001616f
100205ed:	add    esp,0x14
100205f0:	mov    eax,esi
100205f2:	jmp    0x10020631
100205f4:	mov    esi,DWORD PTR [esp+0x18]
100205f8:	cmp    esi,ebx
100205fa:	jne    0x10020600
100205fc:	mov    BYTE PTR [eax],bl
100205fe:	jmp    0x100205d9
10020600:	mov    edx,eax
10020602:	cmp    BYTE PTR [edx],bl
10020604:	je     0x1002060a
10020606:	inc    edx
10020607:	dec    edi
10020608:	jne    0x10020602
1002060a:	cmp    edi,ebx
1002060c:	je     0x100205fc
1002060e:	mov    cl,BYTE PTR [esi]
10020610:	mov    BYTE PTR [edx],cl
10020612:	inc    edx
10020613:	inc    esi
10020614:	cmp    cl,bl
10020616:	je     0x1002061b
10020618:	dec    edi
10020619:	jne    0x1002060e
1002061b:	cmp    edi,ebx
1002061d:	jne    0x1002062f
1002061f:	mov    BYTE PTR [eax],bl
10020621:	call   0x1001a18e
10020626:	push   0x22
10020628:	pop    ecx
10020629:	mov    DWORD PTR [eax],ecx
1002062b:	mov    esi,ecx
1002062d:	jmp    0x100205e3
1002062f:	xor    eax,eax
10020631:	pop    edi
10020632:	pop    esi
10020633:	pop    ebx
10020634:	ret    
10020635:	int3   
10020636:	int3   
10020637:	int3   
10020638:	int3   
10020639:	int3   
1002063a:	int3   
1002063b:	int3   
1002063c:	int3   
1002063d:	int3   
1002063e:	int3   
1002063f:	int3   
10020640:	push   ebp
10020641:	mov    ebp,esp
10020643:	push   esi
10020644:	xor    eax,eax
10020646:	push   eax
10020647:	push   eax
10020648:	push   eax
10020649:	push   eax
1002064a:	push   eax
1002064b:	push   eax
1002064c:	push   eax
1002064d:	push   eax
1002064e:	mov    edx,DWORD PTR [ebp+0xc]
10020651:	lea    ecx,[ecx+0x0]
10020654:	mov    al,BYTE PTR [edx]
10020656:	or     al,al
10020658:	je     0x10020663
1002065a:	add    edx,0x1
1002065d:	bts    DWORD PTR [esp],eax
10020661:	jmp    0x10020654
10020663:	mov    esi,DWORD PTR [ebp+0x8]
10020666:	or     ecx,0xffffffff
10020669:	lea    ecx,[ecx+0x0]
1002066c:	add    ecx,0x1
1002066f:	mov    al,BYTE PTR [esi]
10020671:	or     al,al
10020673:	je     0x1002067e
10020675:	add    esi,0x1
10020678:	bt     DWORD PTR [esp],eax
1002067c:	jae    0x1002066c
1002067e:	mov    eax,ecx
10020680:	add    esp,0x20
10020683:	pop    esi
10020684:	leave  
10020685:	ret    
10020686:	push   ebp
10020687:	mov    ebp,esp
10020689:	push   ebx
1002068a:	push   esi
1002068b:	mov    esi,DWORD PTR [ebp+0x8]
1002068e:	xor    ebx,ebx
10020690:	cmp    DWORD PTR [ebp+0x14],ebx
10020693:	push   edi
10020694:	jne    0x100206a6
10020696:	cmp    esi,ebx
10020698:	jne    0x100206aa
1002069a:	cmp    DWORD PTR [ebp+0xc],ebx
1002069d:	jne    0x100206b1
1002069f:	xor    eax,eax
100206a1:	pop    edi
100206a2:	pop    esi
100206a3:	pop    ebx
100206a4:	pop    ebp
100206a5:	ret    
100206a6:	cmp    esi,ebx
100206a8:	je     0x100206b1
100206aa:	mov    edi,DWORD PTR [ebp+0xc]
100206ad:	cmp    edi,ebx
100206af:	ja     0x100206cc
100206b1:	call   0x1001a18e
100206b6:	push   0x16
100206b8:	pop    esi
100206b9:	mov    DWORD PTR [eax],esi
100206bb:	push   ebx
100206bc:	push   ebx
100206bd:	push   ebx
100206be:	push   ebx
100206bf:	push   ebx
100206c0:	call   0x1001616f
100206c5:	add    esp,0x14
100206c8:	mov    eax,esi
100206ca:	jmp    0x100206a1
100206cc:	cmp    DWORD PTR [ebp+0x14],ebx
100206cf:	jne    0x100206d5
100206d1:	mov    BYTE PTR [esi],bl
100206d3:	jmp    0x1002069f
100206d5:	mov    edx,DWORD PTR [ebp+0x10]
100206d8:	cmp    edx,ebx
100206da:	jne    0x100206e0
100206dc:	mov    BYTE PTR [esi],bl
100206de:	jmp    0x100206b1
100206e0:	cmp    DWORD PTR [ebp+0x14],0xffffffff
100206e4:	mov    eax,esi
100206e6:	jne    0x100206f7
100206e8:	mov    cl,BYTE PTR [edx]
100206ea:	mov    BYTE PTR [eax],cl
100206ec:	inc    eax
100206ed:	inc    edx
100206ee:	cmp    cl,bl
100206f0:	je     0x10020710
100206f2:	dec    edi
100206f3:	jne    0x100206e8
100206f5:	jmp    0x10020710
100206f7:	mov    cl,BYTE PTR [edx]
100206f9:	mov    BYTE PTR [eax],cl
100206fb:	inc    eax
100206fc:	inc    edx
100206fd:	cmp    cl,bl
100206ff:	je     0x10020709
10020701:	dec    edi
10020702:	je     0x10020709
10020704:	dec    DWORD PTR [ebp+0x14]
10020707:	jne    0x100206f7
10020709:	cmp    DWORD PTR [ebp+0x14],ebx
1002070c:	jne    0x10020710
1002070e:	mov    BYTE PTR [eax],bl
10020710:	cmp    edi,ebx
10020712:	jne    0x1002069f
10020714:	cmp    DWORD PTR [ebp+0x14],0xffffffff
10020718:	jne    0x10020729
1002071a:	mov    eax,DWORD PTR [ebp+0xc]
1002071d:	push   0x50
1002071f:	mov    BYTE PTR [esi+eax*1-0x1],bl
10020723:	pop    eax
10020724:	jmp    0x100206a1
10020729:	mov    BYTE PTR [esi],bl
1002072b:	call   0x1001a18e
10020730:	push   0x22
10020732:	pop    ecx
10020733:	mov    DWORD PTR [eax],ecx
10020735:	mov    esi,ecx
10020737:	jmp    0x100206bb
10020739:	push   ebp
1002073a:	mov    ebp,esp
1002073c:	push   ecx
1002073d:	push   ecx
1002073e:	mov    eax,ds:0x100951fc
10020743:	xor    eax,ebp
10020745:	mov    DWORD PTR [ebp-0x4],eax
10020748:	mov    eax,ds:0x100977c4
1002074d:	push   ebx
1002074e:	push   esi
1002074f:	xor    ebx,ebx
10020751:	cmp    eax,ebx
10020753:	push   edi
10020754:	mov    edi,ecx
10020756:	jne    0x10020792
10020758:	lea    eax,[ebp-0x8]
1002075b:	push   eax
1002075c:	xor    esi,esi
1002075e:	inc    esi
1002075f:	push   esi
10020760:	push   0x1008432c
10020765:	push   esi
10020766:	call   DWORD PTR ds:0x10034194
1002076c:	test   eax,eax
1002076e:	je     0x10020778
10020770:	mov    DWORD PTR ds:0x100977c4,esi
10020776:	jmp    0x100207ac
10020778:	call   DWORD PTR ds:0x1003407c
1002077e:	cmp    eax,0x78
10020781:	jne    0x1002078d
10020783:	push   0x2
10020785:	pop    eax
10020786:	mov    ds:0x100977c4,eax
1002078b:	jmp    0x10020792
1002078d:	mov    eax,ds:0x100977c4
10020792:	cmp    eax,0x2
10020795:	je     0x1002086a
1002079b:	cmp    eax,ebx
1002079d:	je     0x1002086a
100207a3:	cmp    eax,0x1
100207a6:	jne    0x10020894
100207ac:	cmp    DWORD PTR [ebp+0x18],ebx
100207af:	mov    DWORD PTR [ebp-0x8],ebx
100207b2:	jne    0x100207bc
100207b4:	mov    eax,DWORD PTR [edi]
100207b6:	mov    eax,DWORD PTR [eax+0x4]
100207b9:	mov    DWORD PTR [ebp+0x18],eax
100207bc:	mov    esi,DWORD PTR ds:0x10034080
100207c2:	xor    eax,eax
100207c4:	cmp    DWORD PTR [ebp+0x20],ebx
100207c7:	push   ebx
100207c8:	push   ebx
100207c9:	push   DWORD PTR [ebp+0x10]
100207cc:	setne  al
100207cf:	push   DWORD PTR [ebp+0xc]
100207d2:	lea    eax,[eax*8+0x1]
100207d9:	push   eax
100207da:	push   DWORD PTR [ebp+0x18]
100207dd:	call   esi
100207df:	mov    edi,eax
100207e1:	cmp    edi,ebx
100207e3:	je     0x10020894
100207e9:	jle    0x10020827
100207eb:	cmp    edi,0x7ffffff0
100207f1:	ja     0x10020827
100207f3:	lea    eax,[edi+edi*1+0x8]
100207f7:	cmp    eax,0x400
100207fc:	ja     0x10020811
100207fe:	call   0x10015b40
10020803:	mov    eax,esp
10020805:	cmp    eax,ebx
10020807:	je     0x10020825
10020809:	mov    DWORD PTR [eax],0xcccc
1002080f:	jmp    0x10020822
10020811:	push   eax
10020812:	call   0x10016c62
10020817:	cmp    eax,ebx
10020819:	pop    ecx
1002081a:	je     0x10020825
1002081c:	mov    DWORD PTR [eax],0xdddd
10020822:	add    eax,0x8
10020825:	mov    ebx,eax
10020827:	test   ebx,ebx
10020829:	je     0x10020894
1002082b:	lea    eax,[edi+edi*1]
1002082e:	push   eax
1002082f:	push   0x0
10020831:	push   ebx
10020832:	call   0x10016580
10020837:	add    esp,0xc
1002083a:	push   edi
1002083b:	push   ebx
1002083c:	push   DWORD PTR [ebp+0x10]
1002083f:	push   DWORD PTR [ebp+0xc]
10020842:	push   0x1
10020844:	push   DWORD PTR [ebp+0x18]
10020847:	call   esi
10020849:	test   eax,eax
1002084b:	je     0x1002085e
1002084d:	push   DWORD PTR [ebp+0x14]
10020850:	push   eax
10020851:	push   ebx
10020852:	push   DWORD PTR [ebp+0x8]
10020855:	call   DWORD PTR ds:0x10034194
1002085b:	mov    DWORD PTR [ebp-0x8],eax
1002085e:	push   ebx
1002085f:	call   0x10017a6c
10020864:	mov    eax,DWORD PTR [ebp-0x8]
10020867:	pop    ecx
10020868:	jmp    0x100208df
1002086a:	xor    esi,esi
1002086c:	cmp    DWORD PTR [ebp+0x1c],ebx
1002086f:	jne    0x10020879
10020871:	mov    eax,DWORD PTR [edi]
10020873:	mov    eax,DWORD PTR [eax+0x14]
10020876:	mov    DWORD PTR [ebp+0x1c],eax
10020879:	cmp    DWORD PTR [ebp+0x18],ebx
1002087c:	jne    0x10020886
1002087e:	mov    eax,DWORD PTR [edi]
10020880:	mov    eax,DWORD PTR [eax+0x4]
10020883:	mov    DWORD PTR [ebp+0x18],eax
10020886:	push   DWORD PTR [ebp+0x1c]
10020889:	call   0x10020980
1002088e:	cmp    eax,0xffffffff
10020891:	pop    ecx
10020892:	jne    0x10020898
10020894:	xor    eax,eax
10020896:	jmp    0x100208df
10020898:	cmp    eax,DWORD PTR [ebp+0x18]
1002089b:	je     0x100208bb
1002089d:	push   ebx
1002089e:	push   ebx
1002089f:	lea    ecx,[ebp+0x10]
100208a2:	push   ecx
100208a3:	push   DWORD PTR [ebp+0xc]
100208a6:	push   eax
100208a7:	push   DWORD PTR [ebp+0x18]
100208aa:	call   0x100209c7
100208af:	mov    esi,eax
100208b1:	add    esp,0x18
100208b4:	cmp    esi,ebx
100208b6:	je     0x10020894
100208b8:	mov    DWORD PTR [ebp+0xc],esi
100208bb:	push   DWORD PTR [ebp+0x14]
100208be:	push   DWORD PTR [ebp+0x10]
100208c1:	push   DWORD PTR [ebp+0xc]
100208c4:	push   DWORD PTR [ebp+0x8]
100208c7:	push   DWORD PTR [ebp+0x1c]
100208ca:	call   DWORD PTR ds:0x10034190
100208d0:	cmp    esi,ebx
100208d2:	mov    edi,eax
100208d4:	je     0x100208dd
100208d6:	push   esi
100208d7:	call   0x10016b85
100208dc:	pop    ecx
100208dd:	mov    eax,edi
100208df:	lea    esp,[ebp-0x14]
100208e2:	pop    edi
100208e3:	pop    esi
100208e4:	pop    ebx
100208e5:	mov    ecx,DWORD PTR [ebp-0x4]
100208e8:	xor    ecx,ebp
100208ea:	call   0x10015b2b
100208ef:	leave  
100208f0:	ret    
100208f1:	push   ebp
100208f2:	mov    ebp,esp
100208f4:	sub    esp,0x10
100208f7:	push   DWORD PTR [ebp+0x8]
100208fa:	lea    ecx,[ebp-0x10]
100208fd:	call   0x100165fa
10020902:	push   DWORD PTR [ebp+0x24]
10020905:	lea    ecx,[ebp-0x10]
10020908:	push   DWORD PTR [ebp+0x20]
1002090b:	push   DWORD PTR [ebp+0x1c]
1002090e:	push   DWORD PTR [ebp+0x18]
10020911:	push   DWORD PTR [ebp+0x14]
10020914:	push   DWORD PTR [ebp+0x10]
10020917:	push   DWORD PTR [ebp+0xc]
1002091a:	call   0x10020739
1002091f:	add    esp,0x1c
10020922:	cmp    BYTE PTR [ebp-0x4],0x0
10020926:	je     0x1002092f
10020928:	mov    ecx,DWORD PTR [ebp-0x8]
1002092b:	and    DWORD PTR [ecx+0x70],0xfffffffd
1002092f:	leave  
10020930:	ret    
10020931:	int3   
10020932:	int3   
10020933:	int3   
10020934:	int3   
10020935:	int3   
10020936:	int3   
10020937:	int3   
10020938:	int3   
10020939:	int3   
1002093a:	int3   
1002093b:	int3   
1002093c:	int3   
1002093d:	int3   
1002093e:	int3   
1002093f:	int3   
10020940:	push   ebp
10020941:	mov    ebp,esp
10020943:	push   esi
10020944:	xor    eax,eax
10020946:	push   eax
10020947:	push   eax
10020948:	push   eax
10020949:	push   eax
1002094a:	push   eax
1002094b:	push   eax
1002094c:	push   eax
1002094d:	push   eax
1002094e:	mov    edx,DWORD PTR [ebp+0xc]
10020951:	lea    ecx,[ecx+0x0]
10020954:	mov    al,BYTE PTR [edx]
10020956:	or     al,al
10020958:	je     0x10020963
1002095a:	add    edx,0x1
1002095d:	bts    DWORD PTR [esp],eax
10020961:	jmp    0x10020954
10020963:	mov    esi,DWORD PTR [ebp+0x8]
10020966:	mov    edi,edi
10020968:	mov    al,BYTE PTR [esi]
1002096a:	or     al,al
1002096c:	je     0x1002097a
1002096e:	add    esi,0x1
10020971:	bt     DWORD PTR [esp],eax
10020975:	jae    0x10020968
10020977:	lea    eax,[esi-0x1]
1002097a:	add    esp,0x20
1002097d:	pop    esi
1002097e:	leave  
1002097f:	ret    
10020980:	push   ebp
10020981:	mov    ebp,esp
10020983:	sub    esp,0xc
10020986:	mov    eax,ds:0x100951fc
1002098b:	xor    eax,ebp
1002098d:	mov    DWORD PTR [ebp-0x4],eax
10020990:	push   0x6
10020992:	lea    eax,[ebp-0xc]
10020995:	push   eax
10020996:	push   0x1004
1002099b:	push   DWORD PTR [ebp+0x8]
1002099e:	mov    BYTE PTR [ebp-0x6],0x0
100209a2:	call   DWORD PTR ds:0x100341cc
100209a8:	test   eax,eax
100209aa:	jne    0x100209b1
100209ac:	or     eax,0xffffffff
100209af:	jmp    0x100209bb
100209b1:	lea    eax,[ebp-0xc]
100209b4:	push   eax
100209b5:	call   0x100237cf
100209ba:	pop    ecx
100209bb:	mov    ecx,DWORD PTR [ebp-0x4]
100209be:	xor    ecx,ebp
100209c0:	call   0x10015b2b
100209c5:	leave  
100209c6:	ret    
100209c7:	push   ebp
100209c8:	mov    ebp,esp
100209ca:	sub    esp,0x34
100209cd:	mov    eax,ds:0x100951fc
100209d2:	xor    eax,ebp
100209d4:	mov    DWORD PTR [ebp-0x4],eax
100209d7:	mov    eax,DWORD PTR [ebp+0x10]
100209da:	mov    ecx,DWORD PTR [ebp+0x18]
100209dd:	mov    DWORD PTR [ebp-0x28],eax
100209e0:	mov    eax,DWORD PTR [ebp+0x14]
100209e3:	push   ebx
100209e4:	mov    DWORD PTR [ebp-0x30],eax
100209e7:	mov    eax,DWORD PTR [eax]
100209e9:	push   esi
100209ea:	mov    DWORD PTR [ebp-0x24],eax
100209ed:	mov    eax,DWORD PTR [ebp+0x8]
100209f0:	push   edi
100209f1:	xor    edi,edi
100209f3:	cmp    eax,DWORD PTR [ebp+0xc]
100209f6:	mov    DWORD PTR [ebp-0x34],ecx
100209f9:	mov    DWORD PTR [ebp-0x20],edi
100209fc:	mov    DWORD PTR [ebp-0x2c],edi
100209ff:	je     0x10020b64
10020a05:	mov    esi,DWORD PTR ds:0x10034228
10020a0b:	lea    ecx,[ebp-0x18]
10020a0e:	push   ecx
10020a0f:	push   eax
10020a10:	call   esi
10020a12:	test   eax,eax
10020a14:	mov    ebx,DWORD PTR ds:0x10034080
10020a1a:	je     0x10020a7a
10020a1c:	cmp    DWORD PTR [ebp-0x18],0x1
10020a20:	jne    0x10020a7a
10020a22:	lea    eax,[ebp-0x18]
10020a25:	push   eax
10020a26:	push   DWORD PTR [ebp+0xc]
10020a29:	call   esi
10020a2b:	test   eax,eax
10020a2d:	je     0x10020a7a
10020a2f:	cmp    DWORD PTR [ebp-0x18],0x1
10020a33:	jne    0x10020a7a
10020a35:	mov    esi,DWORD PTR [ebp-0x24]
10020a38:	cmp    esi,0xffffffff
10020a3b:	mov    DWORD PTR [ebp-0x2c],0x1
10020a42:	jne    0x10020a50
10020a44:	push   DWORD PTR [ebp-0x28]
10020a47:	call   0x100163c0
10020a4c:	mov    esi,eax
10020a4e:	pop    ecx
10020a4f:	inc    esi
10020a50:	cmp    esi,edi
10020a52:	jle    0x10020aaf
10020a54:	cmp    esi,0x7ffffff0
10020a5a:	ja     0x10020aaf
10020a5c:	lea    eax,[esi+esi*1+0x8]
10020a60:	cmp    eax,0x400
10020a65:	ja     0x10020a96
10020a67:	call   0x10015b40
10020a6c:	mov    eax,esp
10020a6e:	cmp    eax,edi
10020a70:	je     0x10020aaa
10020a72:	mov    DWORD PTR [eax],0xcccc
10020a78:	jmp    0x10020aa7
10020a7a:	push   edi
10020a7b:	push   edi
10020a7c:	push   DWORD PTR [ebp-0x24]
10020a7f:	push   DWORD PTR [ebp-0x28]
10020a82:	push   0x1
10020a84:	push   DWORD PTR [ebp+0x8]
10020a87:	call   ebx
10020a89:	mov    esi,eax
10020a8b:	cmp    esi,edi
10020a8d:	jne    0x10020a52
10020a8f:	xor    eax,eax
10020a91:	jmp    0x10020b67
10020a96:	push   eax
10020a97:	call   0x10016c62
10020a9c:	cmp    eax,edi
10020a9e:	pop    ecx
10020a9f:	je     0x10020aaa
10020aa1:	mov    DWORD PTR [eax],0xdddd
10020aa7:	add    eax,0x8
10020aaa:	mov    DWORD PTR [ebp-0x1c],eax
10020aad:	jmp    0x10020ab2
10020aaf:	mov    DWORD PTR [ebp-0x1c],edi
10020ab2:	cmp    DWORD PTR [ebp-0x1c],edi
10020ab5:	je     0x10020a8f
10020ab7:	lea    eax,[esi+esi*1]
10020aba:	push   eax
10020abb:	push   edi
10020abc:	push   DWORD PTR [ebp-0x1c]
10020abf:	call   0x10016580
10020ac4:	add    esp,0xc
10020ac7:	push   esi
10020ac8:	push   DWORD PTR [ebp-0x1c]
10020acb:	push   DWORD PTR [ebp-0x24]
10020ace:	push   DWORD PTR [ebp-0x28]
10020ad1:	push   0x1
10020ad3:	push   DWORD PTR [ebp+0x8]
10020ad6:	call   ebx
10020ad8:	test   eax,eax
10020ada:	je     0x10020b5b
10020adc:	mov    ebx,DWORD PTR [ebp-0x34]
10020adf:	cmp    ebx,edi
10020ae1:	je     0x10020b00
10020ae3:	push   edi
10020ae4:	push   edi
10020ae5:	push   DWORD PTR [ebp+0x1c]
10020ae8:	push   ebx
10020ae9:	push   esi
10020aea:	push   DWORD PTR [ebp-0x1c]
10020aed:	push   edi
10020aee:	push   DWORD PTR [ebp+0xc]
10020af1:	call   DWORD PTR ds:0x1003402c
10020af7:	test   eax,eax
10020af9:	je     0x10020b5b
10020afb:	mov    DWORD PTR [ebp-0x20],ebx
10020afe:	jmp    0x10020b5b
10020b00:	cmp    DWORD PTR [ebp-0x2c],edi
10020b03:	mov    ebx,DWORD PTR ds:0x1003402c
10020b09:	jne    0x10020b1f
10020b0b:	push   edi
10020b0c:	push   edi
10020b0d:	push   edi
10020b0e:	push   edi
10020b0f:	push   esi
10020b10:	push   DWORD PTR [ebp-0x1c]
10020b13:	push   edi
10020b14:	push   DWORD PTR [ebp+0xc]
10020b17:	call   ebx
10020b19:	mov    esi,eax
10020b1b:	cmp    esi,edi
10020b1d:	je     0x10020b5b
10020b1f:	push   esi
10020b20:	push   0x1
10020b22:	call   0x10018775
10020b27:	cmp    eax,edi
10020b29:	pop    ecx
10020b2a:	pop    ecx
10020b2b:	mov    DWORD PTR [ebp-0x20],eax
10020b2e:	je     0x10020b5b
10020b30:	push   edi
10020b31:	push   edi
10020b32:	push   esi
10020b33:	push   eax
10020b34:	push   esi
10020b35:	push   DWORD PTR [ebp-0x1c]
10020b38:	push   edi
10020b39:	push   DWORD PTR [ebp+0xc]
10020b3c:	call   ebx
10020b3e:	cmp    eax,edi
10020b40:	jne    0x10020b50
10020b42:	push   DWORD PTR [ebp-0x20]
10020b45:	call   0x10016b85
10020b4a:	pop    ecx
10020b4b:	mov    DWORD PTR [ebp-0x20],edi
10020b4e:	jmp    0x10020b5b
10020b50:	cmp    DWORD PTR [ebp-0x24],0xffffffff
10020b54:	je     0x10020b5b
10020b56:	mov    ecx,DWORD PTR [ebp-0x30]
10020b59:	mov    DWORD PTR [ecx],eax
10020b5b:	push   DWORD PTR [ebp-0x1c]
10020b5e:	call   0x10017a6c
10020b63:	pop    ecx
10020b64:	mov    eax,DWORD PTR [ebp-0x20]
10020b67:	lea    esp,[ebp-0x40]
10020b6a:	pop    edi
10020b6b:	pop    esi
10020b6c:	pop    ebx
10020b6d:	mov    ecx,DWORD PTR [ebp-0x4]
10020b70:	xor    ecx,ebp
10020b72:	call   0x10015b2b
10020b77:	leave  
10020b78:	ret    
10020b79:	mov    eax,DWORD PTR [esp+0x4]
10020b7d:	mov    ds:0x100977c8,eax
10020b82:	mov    ds:0x100977cc,eax
10020b87:	mov    ds:0x100977d0,eax
10020b8c:	mov    ds:0x100977d4,eax
10020b91:	ret    
10020b92:	mov    eax,DWORD PTR [esp+0x4]
10020b96:	mov    ecx,DWORD PTR ds:0x10095dbc
10020b9c:	push   esi
10020b9d:	cmp    DWORD PTR [eax+0x4],edx
10020ba0:	je     0x10020bb2
10020ba2:	mov    esi,ecx
10020ba4:	imul   esi,esi,0xc
10020ba7:	add    esi,DWORD PTR [esp+0x8]
10020bab:	add    eax,0xc
10020bae:	cmp    eax,esi
10020bb0:	jb     0x10020b9d
10020bb2:	imul   ecx,ecx,0xc
10020bb5:	add    ecx,DWORD PTR [esp+0x8]
10020bb9:	pop    esi
10020bba:	cmp    eax,ecx
10020bbc:	jae    0x10020bc3
10020bbe:	cmp    DWORD PTR [eax+0x4],edx
10020bc1:	je     0x10020bc5
10020bc3:	xor    eax,eax
10020bc5:	ret    
10020bc6:	push   DWORD PTR ds:0x100977d0
10020bcc:	call   0x1001978a
10020bd1:	pop    ecx
10020bd2:	ret    
10020bd3:	push   0x20
10020bd5:	push   0x10085b10
10020bda:	call   0x10017f88
10020bdf:	xor    edi,edi
10020be1:	mov    DWORD PTR [ebp-0x1c],edi
10020be4:	mov    DWORD PTR [ebp-0x28],edi
10020be7:	mov    ebx,DWORD PTR [ebp+0x8]
10020bea:	cmp    ebx,0xb
10020bed:	jg     0x10020c3b
10020bef:	je     0x10020c06
10020bf1:	mov    eax,ebx
10020bf3:	push   0x2
10020bf5:	pop    ecx
10020bf6:	sub    eax,ecx
10020bf8:	je     0x10020c1c
10020bfa:	sub    eax,ecx
10020bfc:	je     0x10020c06
10020bfe:	sub    eax,ecx
10020c00:	je     0x10020c66
10020c02:	sub    eax,ecx
10020c04:	jne    0x10020c4a
10020c06:	call   0x1001992f
10020c0b:	mov    edi,eax
10020c0d:	mov    DWORD PTR [ebp-0x28],edi
10020c10:	test   edi,edi
10020c12:	jne    0x10020c28
10020c14:	or     eax,0xffffffff
10020c17:	jmp    0x10020d7d
10020c1c:	mov    esi,0x100977c8
10020c21:	mov    eax,ds:0x100977c8
10020c26:	jmp    0x10020c88
10020c28:	push   DWORD PTR [edi+0x5c]
10020c2b:	mov    edx,ebx
10020c2d:	call   0x10020b92
10020c32:	mov    esi,eax
10020c34:	add    esi,0x8
10020c37:	mov    eax,DWORD PTR [esi]
10020c39:	jmp    0x10020c95
10020c3b:	mov    eax,ebx
10020c3d:	sub    eax,0xf
10020c40:	je     0x10020c7e
10020c42:	sub    eax,0x6
10020c45:	je     0x10020c72
10020c47:	dec    eax
10020c48:	je     0x10020c66
10020c4a:	call   0x1001a18e
10020c4f:	mov    DWORD PTR [eax],0x16
10020c55:	xor    eax,eax
10020c57:	push   eax
10020c58:	push   eax
10020c59:	push   eax
10020c5a:	push   eax
10020c5b:	push   eax
10020c5c:	call   0x1001616f
10020c61:	add    esp,0x14
10020c64:	jmp    0x10020c14
10020c66:	mov    esi,0x100977d0
10020c6b:	mov    eax,ds:0x100977d0
10020c70:	jmp    0x10020c88
10020c72:	mov    esi,0x100977cc
10020c77:	mov    eax,ds:0x100977cc
10020c7c:	jmp    0x10020c88
10020c7e:	mov    esi,0x100977d4
10020c83:	mov    eax,ds:0x100977d4
10020c88:	mov    DWORD PTR [ebp-0x1c],0x1
10020c8f:	push   eax
10020c90:	call   0x1001978a
10020c95:	mov    DWORD PTR [ebp-0x20],eax
10020c98:	pop    ecx
10020c99:	xor    eax,eax
10020c9b:	cmp    DWORD PTR [ebp-0x20],0x1
10020c9f:	je     0x10020d7d
10020ca5:	cmp    DWORD PTR [ebp-0x20],eax
10020ca8:	jne    0x10020cb1
10020caa:	push   0x3
10020cac:	call   0x1001a0df
10020cb1:	cmp    DWORD PTR [ebp-0x1c],eax
10020cb4:	je     0x10020cbd
10020cb6:	push   eax
10020cb7:	call   0x1001b83b
10020cbc:	pop    ecx
10020cbd:	xor    eax,eax
10020cbf:	mov    DWORD PTR [ebp-0x4],eax
10020cc2:	cmp    ebx,0x8
10020cc5:	je     0x10020cd1
10020cc7:	cmp    ebx,0xb
10020cca:	je     0x10020cd1
10020ccc:	cmp    ebx,0x4
10020ccf:	jne    0x10020cec
10020cd1:	mov    ecx,DWORD PTR [edi+0x60]
10020cd4:	mov    DWORD PTR [ebp-0x2c],ecx
10020cd7:	mov    DWORD PTR [edi+0x60],eax
10020cda:	cmp    ebx,0x8
10020cdd:	jne    0x10020d1f
10020cdf:	mov    ecx,DWORD PTR [edi+0x64]
10020ce2:	mov    DWORD PTR [ebp-0x30],ecx
10020ce5:	mov    DWORD PTR [edi+0x64],0x8c
10020cec:	cmp    ebx,0x8
10020cef:	jne    0x10020d1f
10020cf1:	mov    ecx,DWORD PTR ds:0x10095db0
10020cf7:	mov    DWORD PTR [ebp-0x24],ecx
10020cfa:	mov    ecx,DWORD PTR ds:0x10095db4
10020d00:	mov    edx,DWORD PTR ds:0x10095db0
10020d06:	add    ecx,edx
10020d08:	cmp    DWORD PTR [ebp-0x24],ecx
10020d0b:	jge    0x10020d26
10020d0d:	mov    ecx,DWORD PTR [ebp-0x24]
10020d10:	imul   ecx,ecx,0xc
10020d13:	mov    edx,DWORD PTR [edi+0x5c]
10020d16:	mov    DWORD PTR [ecx+edx*1+0x8],eax
10020d1a:	inc    DWORD PTR [ebp-0x24]
10020d1d:	jmp    0x10020cfa
10020d1f:	call   0x10019781
10020d24:	mov    DWORD PTR [esi],eax
10020d26:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10020d2d:	call   0x10020d47
10020d32:	cmp    ebx,0x8
10020d35:	jne    0x10020d56
10020d37:	push   DWORD PTR [edi+0x64]
10020d3a:	push   ebx
10020d3b:	call   DWORD PTR [ebp-0x20]
10020d3e:	pop    ecx
10020d3f:	jmp    0x10020d5a
10020d41:	mov    ebx,DWORD PTR [ebp+0x8]
10020d44:	mov    edi,DWORD PTR [ebp-0x28]
10020d47:	cmp    DWORD PTR [ebp-0x1c],0x0
10020d4b:	je     0x10020d55
10020d4d:	push   0x0
10020d4f:	call   0x1001b763
10020d54:	pop    ecx
10020d55:	ret    
10020d56:	push   ebx
10020d57:	call   DWORD PTR [ebp-0x20]
10020d5a:	pop    ecx
10020d5b:	cmp    ebx,0x8
10020d5e:	je     0x10020d6a
10020d60:	cmp    ebx,0xb
10020d63:	je     0x10020d6a
10020d65:	cmp    ebx,0x4
10020d68:	jne    0x10020d7b
10020d6a:	mov    eax,DWORD PTR [ebp-0x2c]
10020d6d:	mov    DWORD PTR [edi+0x60],eax
10020d70:	cmp    ebx,0x8
10020d73:	jne    0x10020d7b
10020d75:	mov    eax,DWORD PTR [ebp-0x30]
10020d78:	mov    DWORD PTR [edi+0x64],eax
10020d7b:	xor    eax,eax
10020d7d:	call   0x10017fcd
10020d82:	ret    
10020d83:	xor    eax,eax
10020d85:	inc    eax
10020d86:	cmp    DWORD PTR [esp+0x4],0x0
10020d8b:	jne    0x10020d8f
10020d8d:	xor    eax,eax
10020d8f:	ret    
10020d90:	push   ebp
10020d91:	mov    ebp,esp
10020d93:	push   ebx
10020d94:	push   esi
10020d95:	push   edi
10020d96:	push   ebp
10020d97:	push   0x0
10020d99:	push   0x0
10020d9b:	push   0x10020da8
10020da0:	push   DWORD PTR [ebp+0x8]
10020da3:	call   0x1002a06e
10020da8:	pop    ebp
10020da9:	pop    edi
10020daa:	pop    esi
10020dab:	pop    ebx
10020dac:	mov    esp,ebp
10020dae:	pop    ebp
10020daf:	ret    
10020db0:	mov    ecx,DWORD PTR [esp+0x4]
10020db4:	test   DWORD PTR [ecx+0x4],0x6
10020dbb:	mov    eax,0x1
10020dc0:	je     0x10020df4
10020dc2:	mov    eax,DWORD PTR [esp+0x14]
10020dc6:	mov    ecx,DWORD PTR [eax-0x4]
10020dc9:	xor    ecx,eax
10020dcb:	call   0x10015b2b
10020dd0:	push   ebp
10020dd1:	mov    ebp,DWORD PTR [eax+0x10]
10020dd4:	mov    edx,DWORD PTR [eax+0x28]
10020dd7:	push   edx
10020dd8:	mov    edx,DWORD PTR [eax+0x24]
10020ddb:	push   edx
10020ddc:	call   0x10020df5
10020de1:	add    esp,0x8
10020de4:	pop    ebp
10020de5:	mov    eax,DWORD PTR [esp+0x8]
10020de9:	mov    edx,DWORD PTR [esp+0x10]
10020ded:	mov    DWORD PTR [edx],eax
10020def:	mov    eax,0x3
10020df4:	ret    
10020df5:	push   ebx
10020df6:	push   esi
10020df7:	push   edi
10020df8:	mov    eax,DWORD PTR [esp+0x10]
10020dfc:	push   ebp
10020dfd:	push   eax
10020dfe:	push   0xfffffffe
10020e00:	push   0x10020db0
10020e05:	push   DWORD PTR fs:0x0
10020e0c:	mov    eax,ds:0x100951fc
10020e11:	xor    eax,esp
10020e13:	push   eax
10020e14:	lea    eax,[esp+0x4]
10020e18:	mov    fs:0x0,eax
10020e1e:	mov    eax,DWORD PTR [esp+0x28]
10020e22:	mov    ebx,DWORD PTR [eax+0x8]
10020e25:	mov    esi,DWORD PTR [eax+0xc]
10020e28:	cmp    esi,0xffffffff
10020e2b:	je     0x10020e67
10020e2d:	cmp    DWORD PTR [esp+0x2c],0xffffffff
10020e32:	je     0x10020e3a
10020e34:	cmp    esi,DWORD PTR [esp+0x2c]
10020e38:	jbe    0x10020e67
10020e3a:	lea    esi,[esi+esi*2]
10020e3d:	mov    ecx,DWORD PTR [ebx+esi*4]
10020e40:	mov    DWORD PTR [esp+0xc],ecx
10020e44:	mov    DWORD PTR [eax+0xc],ecx
10020e47:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
10020e4c:	jne    0x10020e65
10020e4e:	push   0x101
10020e53:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
10020e57:	call   0x10020ea5
10020e5c:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
10020e60:	call   0x10020ec4
10020e65:	jmp    0x10020e1e
10020e67:	mov    ecx,DWORD PTR [esp+0x4]
10020e6b:	mov    DWORD PTR fs:0x0,ecx
10020e72:	add    esp,0x18
10020e75:	pop    edi
10020e76:	pop    esi
10020e77:	pop    ebx
10020e78:	ret    
10020e79:	xor    eax,eax
10020e7b:	mov    ecx,DWORD PTR fs:0x0
10020e82:	cmp    DWORD PTR [ecx+0x4],0x10020db0
10020e89:	jne    0x10020e9b
10020e8b:	mov    edx,DWORD PTR [ecx+0xc]
10020e8e:	mov    edx,DWORD PTR [edx+0xc]
10020e91:	cmp    DWORD PTR [ecx+0x8],edx
10020e94:	jne    0x10020e9b
10020e96:	mov    eax,0x1
10020e9b:	ret    
10020e9c:	push   ebx
10020e9d:	push   ecx
10020e9e:	mov    ebx,0x10096160
10020ea3:	jmp    0x10020eb0
10020ea5:	push   ebx
10020ea6:	push   ecx
10020ea7:	mov    ebx,0x10096160
10020eac:	mov    ecx,DWORD PTR [esp+0xc]
10020eb0:	mov    DWORD PTR [ebx+0x8],ecx
10020eb3:	mov    DWORD PTR [ebx+0x4],eax
10020eb6:	mov    DWORD PTR [ebx+0xc],ebp
10020eb9:	push   ebp
10020eba:	push   ecx
10020ebb:	push   eax
10020ebc:	pop    eax
10020ebd:	pop    ecx
10020ebe:	pop    ebp
10020ebf:	pop    ecx
10020ec0:	pop    ebx
10020ec1:	ret    0x4
10020ec4:	call   eax
10020ec6:	ret    
10020ec7:	push   esi
10020ec8:	push   edi
10020ec9:	xor    edi,edi
10020ecb:	lea    esi,[edi+0x10096170]
10020ed1:	push   DWORD PTR [esi]
10020ed3:	call   0x10019713
10020ed8:	add    edi,0x4
10020edb:	cmp    edi,0x28
10020ede:	pop    ecx
10020edf:	mov    DWORD PTR [esi],eax
10020ee1:	jb     0x10020ecb
10020ee3:	pop    edi
10020ee4:	pop    esi
10020ee5:	ret    
10020ee6:	mov    eax,DWORD PTR [esp+0x4]
10020eea:	mov    ds:0x100977dc,eax
10020eef:	ret    
10020ef0:	mov    eax,DWORD PTR [esp+0x4]
10020ef4:	mov    ds:0x100977e0,eax
10020ef9:	ret    
10020efa:	push   DWORD PTR [esp+0x4]
10020efe:	call   DWORD PTR ds:0x100341fc
10020f04:	xor    eax,eax
10020f06:	inc    eax
10020f07:	ret    0x8
10020f0a:	push   0x14
10020f0c:	push   0x10085b30
10020f11:	call   0x10017f88
10020f16:	xor    edi,edi
10020f18:	mov    DWORD PTR [ebp-0x1c],edi
10020f1b:	push   DWORD PTR ds:0x100977e0
10020f21:	call   0x1001978a
10020f26:	pop    ecx
10020f27:	mov    esi,eax
10020f29:	cmp    esi,edi
10020f2b:	jne    0x10020f80
10020f2d:	lea    eax,[ebp-0x1c]
10020f30:	push   eax
10020f31:	call   0x10019ef8
10020f36:	pop    ecx
10020f37:	cmp    eax,edi
10020f39:	je     0x10020f48
10020f3b:	push   edi
10020f3c:	push   edi
10020f3d:	push   edi
10020f3e:	push   edi
10020f3f:	push   edi
10020f40:	call   0x10016073
10020f45:	add    esp,0x14
10020f48:	cmp    DWORD PTR [ebp-0x1c],0x1
10020f4c:	je     0x10020f6f
10020f4e:	push   0x1007d618
10020f53:	call   DWORD PTR ds:0x10034100
10020f59:	cmp    eax,edi
10020f5b:	je     0x10020f6f
10020f5d:	push   0x1007e740
10020f62:	push   eax
10020f63:	call   DWORD PTR ds:0x10034044
10020f69:	mov    esi,eax
10020f6b:	cmp    esi,edi
10020f6d:	jne    0x10020f74
10020f6f:	mov    esi,0x10020efa
10020f74:	push   esi
10020f75:	call   0x10019713
10020f7a:	pop    ecx
10020f7b:	mov    ds:0x100977e0,eax
10020f80:	mov    DWORD PTR [ebp-0x4],edi
10020f83:	push   DWORD PTR [ebp+0xc]
10020f86:	push   DWORD PTR [ebp+0x8]
10020f89:	call   esi
10020f8b:	mov    DWORD PTR [ebp-0x20],eax
10020f8e:	jmp    0x10020fbf
10020f90:	mov    eax,DWORD PTR [ebp-0x14]
10020f93:	mov    eax,DWORD PTR [eax]
10020f95:	mov    eax,DWORD PTR [eax]
10020f97:	mov    DWORD PTR [ebp-0x24],eax
10020f9a:	xor    ecx,ecx
10020f9c:	cmp    eax,0xc0000017
10020fa1:	sete   cl
10020fa4:	mov    eax,ecx
10020fa6:	ret    
10020fa7:	mov    esp,DWORD PTR [ebp-0x18]
10020faa:	cmp    DWORD PTR [ebp-0x24],0xc0000017
10020fb1:	jne    0x10020fbb
10020fb3:	push   0x8
10020fb5:	call   DWORD PTR ds:0x10034078
10020fbb:	and    DWORD PTR [ebp-0x20],0x0
10020fbf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10020fc6:	mov    eax,DWORD PTR [ebp-0x20]
10020fc9:	call   0x10017fcd
10020fce:	ret    
10020fcf:	mov    ax,WORD PTR [esp+0x4]
10020fd4:	cmp    ax,0x30
10020fd8:	jb     0x1002114d
10020fde:	cmp    ax,0x3a
10020fe2:	jae    0x10020feb
10020fe4:	movzx  eax,ax
10020fe7:	sub    eax,0x30
10020fea:	ret    
10020feb:	mov    ecx,0xff10
10020ff0:	cmp    ax,cx
10020ff3:	jae    0x10021143
10020ff9:	mov    ecx,0x660
10020ffe:	cmp    ax,cx
10021001:	jb     0x1002114d
10021007:	cmp    ax,0x66a
1002100b:	jae    0x10021013
1002100d:	movzx  eax,ax
10021010:	sub    eax,ecx
10021012:	ret    
10021013:	mov    ecx,0x6f0
10021018:	cmp    ax,cx
1002101b:	jb     0x1002114d
10021021:	cmp    ax,0x6fa
10021025:	jb     0x1002100d
10021027:	mov    ecx,0x966
1002102c:	cmp    ax,cx
1002102f:	jb     0x1002114d
10021035:	cmp    ax,0x970
10021039:	jb     0x1002100d
1002103b:	mov    ecx,0x9e6
10021040:	cmp    ax,cx
10021043:	jb     0x1002114d
10021049:	cmp    ax,0x9f0
1002104d:	jb     0x1002100d
1002104f:	mov    ecx,0xa66
10021054:	cmp    ax,cx
10021057:	jb     0x1002114d
1002105d:	cmp    ax,0xa70
10021061:	jb     0x1002100d
10021063:	mov    ecx,0xae6
10021068:	cmp    ax,cx
1002106b:	jb     0x1002114d
10021071:	cmp    ax,0xaf0
10021075:	jb     0x1002100d
10021077:	mov    ecx,0xb66
1002107c:	cmp    ax,cx
1002107f:	jb     0x1002114d
10021085:	cmp    ax,0xb70
10021089:	jb     0x1002100d
1002108b:	mov    ecx,0xc66
10021090:	cmp    ax,cx
10021093:	jb     0x1002114d
10021099:	cmp    ax,0xc70
1002109d:	jb     0x1002100d
100210a3:	mov    ecx,0xce6
100210a8:	cmp    ax,cx
100210ab:	jb     0x1002114d
100210b1:	cmp    ax,0xcf0
100210b5:	jb     0x1002100d
100210bb:	mov    ecx,0xd66
100210c0:	cmp    ax,cx
100210c3:	jb     0x1002114d
100210c9:	cmp    ax,0xd70
100210cd:	jb     0x1002100d
100210d3:	mov    ecx,0xe50
100210d8:	cmp    ax,cx
100210db:	jb     0x1002114d
100210dd:	cmp    ax,0xe5a
100210e1:	jb     0x1002100d
100210e7:	mov    ecx,0xed0
100210ec:	cmp    ax,cx
100210ef:	jb     0x1002114d
100210f1:	cmp    ax,0xeda
100210f5:	jb     0x1002100d
100210fb:	add    ecx,0x50
100210fe:	cmp    ax,cx
10021101:	jb     0x1002114d
10021103:	cmp    ax,0xf2a
10021107:	jb     0x1002100d
1002110d:	mov    ecx,0x1040
10021112:	cmp    ax,cx
10021115:	jb     0x1002114d
10021117:	cmp    ax,0x104a
1002111b:	jb     0x1002100d
10021121:	mov    ecx,0x17e0
10021126:	cmp    ax,cx
10021129:	jb     0x1002114d
1002112b:	cmp    ax,0x17ea
1002112f:	jb     0x1002100d
10021135:	add    ecx,0x30
10021138:	cmp    ax,cx
1002113b:	jb     0x1002114d
1002113d:	cmp    ax,0x181a
10021141:	jmp    0x10021147
10021143:	cmp    ax,0xff1a
10021147:	jb     0x1002100d
1002114d:	or     eax,0xffffffff
10021150:	ret    
10021151:	push   0xc
10021153:	push   0x10085b50
10021158:	call   0x10017f88
1002115d:	and    DWORD PTR [ebp-0x4],0x0
10021161:	movapd xmm0,xmm1
10021165:	mov    DWORD PTR [ebp-0x1c],0x1
1002116c:	jmp    0x10021191
1002116e:	mov    eax,DWORD PTR [ebp-0x14]
10021171:	mov    eax,DWORD PTR [eax]
10021173:	mov    eax,DWORD PTR [eax]
10021175:	cmp    eax,0xc0000005
1002117a:	je     0x10021186
1002117c:	cmp    eax,0xc000001d
10021181:	je     0x10021186
10021183:	xor    eax,eax
10021185:	ret    
10021186:	xor    eax,eax
10021188:	inc    eax
10021189:	ret    
1002118a:	mov    esp,DWORD PTR [ebp-0x18]
1002118d:	and    DWORD PTR [ebp-0x1c],0x0
10021191:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10021198:	mov    eax,DWORD PTR [ebp-0x1c]
1002119b:	call   0x10017fcd
100211a0:	ret    
100211a1:	push   ebp
100211a2:	mov    ebp,esp
100211a4:	sub    esp,0x18
100211a7:	xor    eax,eax
100211a9:	push   ebx
100211aa:	mov    DWORD PTR [ebp-0x4],eax
100211ad:	mov    DWORD PTR [ebp-0xc],eax
100211b0:	mov    DWORD PTR [ebp-0x8],eax
100211b3:	push   ebx
100211b4:	pushf  
100211b5:	pop    eax
100211b6:	mov    ecx,eax
100211b8:	xor    eax,0x200000
100211bd:	push   eax
100211be:	popf   
100211bf:	pushf  
100211c0:	pop    edx
100211c1:	sub    edx,ecx
100211c3:	je     0x100211e4
100211c5:	push   ecx
100211c6:	popf   
100211c7:	xor    eax,eax
100211c9:	cpuid  
100211cb:	mov    DWORD PTR [ebp-0xc],eax
100211ce:	mov    DWORD PTR [ebp-0x18],ebx
100211d1:	mov    DWORD PTR [ebp-0x14],edx
100211d4:	mov    DWORD PTR [ebp-0x10],ecx
100211d7:	mov    eax,0x1
100211dc:	cpuid  
100211de:	mov    DWORD PTR [ebp-0x4],edx
100211e1:	mov    DWORD PTR [ebp-0x8],eax
100211e4:	pop    ebx
100211e5:	test   DWORD PTR [ebp-0x4],0x4000000
100211ec:	je     0x100211fc
100211ee:	call   0x10021151
100211f3:	test   eax,eax
100211f5:	je     0x100211fc
100211f7:	xor    eax,eax
100211f9:	inc    eax
100211fa:	jmp    0x100211fe
100211fc:	xor    eax,eax
100211fe:	pop    ebx
100211ff:	leave  
10021200:	ret    
10021201:	call   0x100211a1
10021206:	mov    ds:0x10098c00,eax
1002120b:	xor    eax,eax
1002120d:	ret    
1002120e:	push   ebp
1002120f:	mov    ebp,esp
10021211:	sub    esp,0x20
10021214:	push   ebx
10021215:	push   esi
10021216:	push   edi
10021217:	call   0x10019781
1002121c:	xor    ebx,ebx
1002121e:	cmp    DWORD PTR ds:0x10097820,ebx
10021224:	mov    DWORD PTR [ebp-0x8],eax
10021227:	mov    DWORD PTR [ebp-0x4],ebx
1002122a:	mov    DWORD PTR [ebp-0xc],ebx
1002122d:	mov    DWORD PTR [ebp-0x10],ebx
10021230:	jne    0x100212e4
10021236:	push   0x1007eedc
1002123b:	call   DWORD PTR ds:0x10034048
10021241:	mov    edi,eax
10021243:	cmp    edi,ebx
10021245:	je     0x100213c4
1002124b:	mov    esi,DWORD PTR ds:0x10034044
10021251:	push   0x1007eed0
10021256:	push   edi
10021257:	call   esi
10021259:	cmp    eax,ebx
1002125b:	je     0x100213c4
10021261:	push   eax
10021262:	call   0x10019713
10021267:	mov    DWORD PTR [esp],0x1007eec0
1002126e:	push   edi
1002126f:	mov    ds:0x10097820,eax
10021274:	call   esi
10021276:	push   eax
10021277:	call   0x10019713
1002127c:	mov    DWORD PTR [esp],0x1007eeac
10021283:	push   edi
10021284:	mov    ds:0x10097824,eax
10021289:	call   esi
1002128b:	push   eax
1002128c:	call   0x10019713
10021291:	mov    ds:0x10097828,eax
10021296:	lea    eax,[ebp-0xc]
10021299:	push   eax
1002129a:	call   0x10019ef8
1002129f:	test   eax,eax
100212a1:	pop    ecx
100212a2:	pop    ecx
100212a3:	je     0x100212b2
100212a5:	push   ebx
100212a6:	push   ebx
100212a7:	push   ebx
100212a8:	push   ebx
100212a9:	push   ebx
100212aa:	call   0x10016073
100212af:	add    esp,0x14
100212b2:	cmp    DWORD PTR [ebp-0xc],0x2
100212b6:	jne    0x100212e4
100212b8:	push   0x1007ee90
100212bd:	push   edi
100212be:	call   esi
100212c0:	push   eax
100212c1:	call   0x10019713
100212c6:	cmp    eax,ebx
100212c8:	pop    ecx
100212c9:	mov    ds:0x10097830,eax
100212ce:	je     0x100212e4
100212d0:	push   0x1007ee78
100212d5:	push   edi
100212d6:	call   esi
100212d8:	push   eax
100212d9:	call   0x10019713
100212de:	pop    ecx
100212df:	mov    ds:0x1009782c,eax
100212e4:	mov    eax,ds:0x1009782c
100212e9:	mov    ecx,DWORD PTR [ebp-0x8]
100212ec:	cmp    eax,ecx
100212ee:	je     0x10021369
100212f0:	cmp    DWORD PTR ds:0x10097830,ecx
100212f6:	je     0x10021369
100212f8:	push   eax
100212f9:	call   0x1001978a
100212fe:	push   DWORD PTR ds:0x10097830
10021304:	mov    esi,eax
10021306:	call   0x1001978a
1002130b:	cmp    esi,ebx
1002130d:	pop    ecx
1002130e:	pop    ecx
1002130f:	mov    edi,eax
10021311:	je     0x10021369
10021313:	cmp    edi,ebx
10021315:	je     0x10021369
10021317:	call   esi
10021319:	cmp    eax,ebx
1002131b:	je     0x10021336
1002131d:	lea    ecx,[ebp-0x14]
10021320:	push   ecx
10021321:	push   0xc
10021323:	lea    ecx,[ebp-0x20]
10021326:	push   ecx
10021327:	push   0x1
10021329:	push   eax
1002132a:	call   edi
1002132c:	test   eax,eax
1002132e:	je     0x10021336
10021330:	test   BYTE PTR [ebp-0x18],0x1
10021334:	jne    0x10021369
10021336:	lea    eax,[ebp-0x10]
10021339:	push   eax
1002133a:	call   0x10019f2f
1002133f:	test   eax,eax
10021341:	pop    ecx
10021342:	je     0x10021351
10021344:	push   ebx
10021345:	push   ebx
10021346:	push   ebx
10021347:	push   ebx
10021348:	push   ebx
10021349:	call   0x10016073
1002134e:	add    esp,0x14
10021351:	cmp    DWORD PTR [ebp-0x10],0x4
10021355:	jb     0x10021360
10021357:	or     DWORD PTR [ebp+0x10],0x200000
1002135e:	jmp    0x100213a4
10021360:	or     DWORD PTR [ebp+0x10],0x40000
10021367:	jmp    0x100213a4
10021369:	mov    eax,ds:0x10097824
1002136e:	cmp    eax,DWORD PTR [ebp-0x8]
10021371:	je     0x100213a4
10021373:	push   eax
10021374:	call   0x1001978a
10021379:	cmp    eax,ebx
1002137b:	pop    ecx
1002137c:	je     0x100213a4
1002137e:	call   eax
10021380:	cmp    eax,ebx
10021382:	mov    DWORD PTR [ebp-0x4],eax
10021385:	je     0x100213a4
10021387:	mov    eax,ds:0x10097828
1002138c:	cmp    eax,DWORD PTR [ebp-0x8]
1002138f:	je     0x100213a4
10021391:	push   eax
10021392:	call   0x1001978a
10021397:	cmp    eax,ebx
10021399:	pop    ecx
1002139a:	je     0x100213a4
1002139c:	push   DWORD PTR [ebp-0x4]
1002139f:	call   eax
100213a1:	mov    DWORD PTR [ebp-0x4],eax
100213a4:	push   DWORD PTR ds:0x10097820
100213aa:	call   0x1001978a
100213af:	cmp    eax,ebx
100213b1:	pop    ecx
100213b2:	je     0x100213c4
100213b4:	push   DWORD PTR [ebp+0x10]
100213b7:	push   DWORD PTR [ebp+0xc]
100213ba:	push   DWORD PTR [ebp+0x8]
100213bd:	push   DWORD PTR [ebp-0x4]
100213c0:	call   eax
100213c2:	jmp    0x100213c6
100213c4:	xor    eax,eax
100213c6:	pop    edi
100213c7:	pop    esi
100213c8:	pop    ebx
100213c9:	leave  
100213ca:	ret    
100213cb:	mov    ecx,DWORD PTR [esp+0x4]
100213cf:	push   esi
100213d0:	xor    esi,esi
100213d2:	cmp    ecx,esi
100213d4:	jl     0x100213f4
100213d6:	cmp    ecx,0x2
100213d9:	jle    0x100213e7
100213db:	cmp    ecx,0x3
100213de:	jne    0x100213f4
100213e0:	mov    eax,ds:0x10096e40
100213e5:	pop    esi
100213e6:	ret    
100213e7:	mov    eax,ds:0x10096e40
100213ec:	mov    DWORD PTR ds:0x10096e40,ecx
100213f2:	pop    esi
100213f3:	ret    
100213f4:	call   0x1001a18e
100213f9:	push   esi
100213fa:	push   esi
100213fb:	push   esi
100213fc:	push   esi
100213fd:	push   esi
100213fe:	mov    DWORD PTR [eax],0x16
10021404:	call   0x1001616f
10021409:	add    esp,0x14
1002140c:	or     eax,0xffffffff
1002140f:	pop    esi
10021410:	ret    
10021411:	push   ebp
10021412:	mov    ebp,esp
10021414:	sub    esp,0x10
10021417:	mov    eax,ds:0x100951fc
1002141c:	xor    eax,ebp
1002141e:	mov    DWORD PTR [ebp-0x4],eax
10021421:	cmp    DWORD PTR [ebp+0x14],0xffffffff
10021425:	push   ebx
10021426:	push   esi
10021427:	push   edi
10021428:	jge    0x10021431
1002142a:	xor    eax,eax
1002142c:	jmp    0x10021623
10021431:	mov    eax,ds:0x10097834
10021436:	mov    esi,DWORD PTR ds:0x10034194
1002143c:	xor    ebx,ebx
1002143e:	xor    edi,edi
10021440:	inc    ebx
10021441:	cmp    eax,edi
10021443:	jne    0x10021478
10021445:	lea    eax,[ebp-0x8]
10021448:	push   eax
10021449:	push   ebx
1002144a:	push   0x1008432c
1002144f:	push   ebx
10021450:	call   esi
10021452:	test   eax,eax
10021454:	je     0x1002145e
10021456:	mov    DWORD PTR ds:0x10097834,ebx
1002145c:	jmp    0x1002147c
1002145e:	call   DWORD PTR ds:0x1003407c
10021464:	cmp    eax,0x78
10021467:	jne    0x10021473
10021469:	push   0x2
1002146b:	pop    eax
1002146c:	mov    ds:0x10097834,eax
10021471:	jmp    0x10021478
10021473:	mov    eax,ds:0x10097834
10021478:	cmp    eax,ebx
1002147a:	jne    0x1002148f
1002147c:	push   DWORD PTR [ebp+0x18]
1002147f:	push   DWORD PTR [ebp+0x14]
10021482:	push   DWORD PTR [ebp+0x10]
10021485:	push   DWORD PTR [ebp+0xc]
10021488:	call   esi
1002148a:	jmp    0x10021623
1002148f:	cmp    eax,0x2
10021492:	je     0x10021498
10021494:	cmp    eax,edi
10021496:	jne    0x1002142a
10021498:	cmp    DWORD PTR [ebp+0x20],edi
1002149b:	mov    DWORD PTR [ebp-0xc],edi
1002149e:	jne    0x100214ab
100214a0:	mov    eax,DWORD PTR [ebp+0x8]
100214a3:	mov    eax,DWORD PTR [eax]
100214a5:	mov    eax,DWORD PTR [eax+0x14]
100214a8:	mov    DWORD PTR [ebp+0x20],eax
100214ab:	cmp    DWORD PTR [ebp+0x1c],edi
100214ae:	jne    0x100214bb
100214b0:	mov    eax,DWORD PTR [ebp+0x8]
100214b3:	mov    eax,DWORD PTR [eax]
100214b5:	mov    eax,DWORD PTR [eax+0x4]
100214b8:	mov    DWORD PTR [ebp+0x1c],eax
100214bb:	push   DWORD PTR [ebp+0x20]
100214be:	call   0x10020980
100214c3:	cmp    DWORD PTR [ebp+0x1c],eax
100214c6:	pop    ecx
100214c7:	je     0x100214d1
100214c9:	cmp    eax,0xffffffff
100214cc:	je     0x100214d1
100214ce:	mov    DWORD PTR [ebp+0x1c],eax
100214d1:	mov    ebx,DWORD PTR ds:0x1003402c
100214d7:	push   edi
100214d8:	push   edi
100214d9:	push   edi
100214da:	push   edi
100214db:	push   DWORD PTR [ebp+0x14]
100214de:	push   DWORD PTR [ebp+0x10]
100214e1:	push   edi
100214e2:	push   DWORD PTR [ebp+0x1c]
100214e5:	call   ebx
100214e7:	mov    esi,eax
100214e9:	cmp    esi,edi
100214eb:	mov    DWORD PTR [ebp-0x10],esi
100214ee:	je     0x1002142a
100214f4:	jle    0x10021531
100214f6:	cmp    esi,0xffffffe0
100214f9:	ja     0x10021531
100214fb:	lea    eax,[esi+0x8]
100214fe:	cmp    eax,0x400
10021503:	ja     0x10021518
10021505:	call   0x10015b40
1002150a:	mov    eax,esp
1002150c:	cmp    eax,edi
1002150e:	je     0x1002152c
10021510:	mov    DWORD PTR [eax],0xcccc
10021516:	jmp    0x10021529
10021518:	push   eax
10021519:	call   0x10016c62
1002151e:	cmp    eax,edi
10021520:	pop    ecx
10021521:	je     0x1002152c
10021523:	mov    DWORD PTR [eax],0xdddd
10021529:	add    eax,0x8
1002152c:	mov    DWORD PTR [ebp-0x8],eax
1002152f:	jmp    0x10021534
10021531:	mov    DWORD PTR [ebp-0x8],edi
10021534:	cmp    DWORD PTR [ebp-0x8],edi
10021537:	je     0x1002142a
1002153d:	push   esi
1002153e:	push   edi
1002153f:	push   DWORD PTR [ebp-0x8]
10021542:	call   0x10016580
10021547:	add    esp,0xc
1002154a:	push   edi
1002154b:	push   edi
1002154c:	push   esi
1002154d:	push   DWORD PTR [ebp-0x8]
10021550:	push   DWORD PTR [ebp+0x14]
10021553:	push   DWORD PTR [ebp+0x10]
10021556:	push   edi
10021557:	push   DWORD PTR [ebp+0x1c]
1002155a:	call   ebx
1002155c:	test   eax,eax
1002155e:	je     0x10021617
10021564:	lea    eax,[esi+0x1]
10021567:	cmp    eax,edi
10021569:	jle    0x100215af
1002156b:	cmp    eax,0x7ffffff0
10021570:	ja     0x100215af
10021572:	lea    eax,[esi+esi*1+0xa]
10021576:	cmp    eax,0x400
1002157b:	ja     0x10021597
1002157d:	call   0x10015b40
10021582:	mov    ebx,esp
10021584:	cmp    ebx,edi
10021586:	je     0x10021617
1002158c:	mov    DWORD PTR [ebx],0xcccc
10021592:	add    ebx,0x8
10021595:	jmp    0x100215b1
10021597:	push   eax
10021598:	call   0x10016c62
1002159d:	cmp    eax,edi
1002159f:	pop    ecx
100215a0:	je     0x100215ab
100215a2:	mov    DWORD PTR [eax],0xdddd
100215a8:	add    eax,0x8
100215ab:	mov    ebx,eax
100215ad:	jmp    0x100215b1
100215af:	xor    ebx,ebx
100215b1:	cmp    ebx,edi
100215b3:	je     0x10021617
100215b5:	cmp    DWORD PTR [ebp+0x20],edi
100215b8:	jne    0x100215c5
100215ba:	mov    eax,DWORD PTR [ebp+0x8]
100215bd:	mov    eax,DWORD PTR [eax]
100215bf:	mov    eax,DWORD PTR [eax+0x14]
100215c2:	mov    DWORD PTR [ebp+0x20],eax
100215c5:	mov    edi,DWORD PTR [ebp+0x14]
100215c8:	push   ebx
100215c9:	push   DWORD PTR [ebp-0x10]
100215cc:	add    edi,edi
100215ce:	push   DWORD PTR [ebp-0x8]
100215d1:	lea    esi,[edi+ebx*1]
100215d4:	push   DWORD PTR [ebp+0xc]
100215d7:	or     WORD PTR [esi],0xffff
100215dc:	push   DWORD PTR [ebp+0x20]
100215df:	or     WORD PTR [esi-0x2],0xffff
100215e5:	call   DWORD PTR ds:0x10034190
100215eb:	cmp    WORD PTR [esi-0x2],0xffff
100215f1:	mov    DWORD PTR [ebp-0xc],eax
100215f4:	je     0x1002160c
100215f6:	cmp    WORD PTR [esi],0xffff
100215fb:	jne    0x1002160c
100215fd:	push   edi
100215fe:	push   ebx
100215ff:	push   DWORD PTR [ebp+0x18]
10021602:	call   0x1001a370
10021607:	add    esp,0xc
1002160a:	jmp    0x10021610
1002160c:	and    DWORD PTR [ebp-0xc],0x0
10021610:	push   ebx
10021611:	call   0x10017a6c
10021616:	pop    ecx
10021617:	push   DWORD PTR [ebp-0x8]
1002161a:	call   0x10017a6c
1002161f:	mov    eax,DWORD PTR [ebp-0xc]
10021622:	pop    ecx
10021623:	lea    esp,[ebp-0x1c]
10021626:	pop    edi
10021627:	pop    esi
10021628:	pop    ebx
10021629:	mov    ecx,DWORD PTR [ebp-0x4]
1002162c:	xor    ecx,ebp
1002162e:	call   0x10015b2b
10021633:	leave  
10021634:	ret    
10021635:	push   ebp
10021636:	mov    ebp,esp
10021638:	sub    esp,0x10
1002163b:	push   DWORD PTR [ebp+0x8]
1002163e:	lea    ecx,[ebp-0x10]
10021641:	call   0x100165fa
10021646:	push   DWORD PTR [ebp+0x20]
10021649:	lea    eax,[ebp-0x10]
1002164c:	push   DWORD PTR [ebp+0x1c]
1002164f:	push   DWORD PTR [ebp+0x18]
10021652:	push   DWORD PTR [ebp+0x14]
10021655:	push   DWORD PTR [ebp+0x10]
10021658:	push   DWORD PTR [ebp+0xc]
1002165b:	push   eax
1002165c:	call   0x10021411
10021661:	add    esp,0x1c
10021664:	cmp    BYTE PTR [ebp-0x4],0x0
10021668:	je     0x10021671
1002166a:	mov    ecx,DWORD PTR [ebp-0x8]
1002166d:	and    DWORD PTR [ecx+0x70],0xfffffffd
10021671:	leave  
10021672:	ret    
10021673:	inc    DWORD PTR ds:0x100977b0
10021679:	push   0x1000
1002167e:	call   0x10018735
10021683:	test   eax,eax
10021685:	pop    ecx
10021686:	mov    ecx,DWORD PTR [esp+0x4]
1002168a:	mov    DWORD PTR [ecx+0x8],eax
1002168d:	je     0x1002169c
1002168f:	or     DWORD PTR [ecx+0xc],0x8
10021693:	mov    DWORD PTR [ecx+0x18],0x1000
1002169a:	jmp    0x100216ad
1002169c:	or     DWORD PTR [ecx+0xc],0x4
100216a0:	lea    eax,[ecx+0x14]
100216a3:	mov    DWORD PTR [ecx+0x8],eax
100216a6:	mov    DWORD PTR [ecx+0x18],0x2
100216ad:	mov    eax,DWORD PTR [ecx+0x8]
100216b0:	and    DWORD PTR [ecx+0x4],0x0
100216b4:	mov    DWORD PTR [ecx],eax
100216b6:	ret    
100216b7:	mov    eax,DWORD PTR [esp+0x4]
100216bb:	cmp    eax,0xfffffffe
100216be:	jne    0x100216ce
100216c0:	call   0x1001a18e
100216c5:	mov    DWORD PTR [eax],0x9
100216cb:	xor    eax,eax
100216cd:	ret    
100216ce:	push   esi
100216cf:	xor    esi,esi
100216d1:	cmp    eax,esi
100216d3:	jl     0x100216dd
100216d5:	cmp    eax,DWORD PTR ds:0x10098ac4
100216db:	jb     0x100216f9
100216dd:	call   0x1001a18e
100216e2:	push   esi
100216e3:	push   esi
100216e4:	push   esi
100216e5:	push   esi
100216e6:	push   esi
100216e7:	mov    DWORD PTR [eax],0x9
100216ed:	call   0x1001616f
100216f2:	add    esp,0x14
100216f5:	xor    eax,eax
100216f7:	pop    esi
100216f8:	ret    
100216f9:	mov    ecx,eax
100216fb:	and    eax,0x1f
100216fe:	sar    ecx,0x5
10021701:	mov    ecx,DWORD PTR [ecx*4+0x10098ae0]
10021708:	shl    eax,0x6
1002170b:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
10021710:	and    eax,0x40
10021713:	pop    esi
10021714:	ret    
10021715:	push   ebp
10021716:	mov    ebp,esp
10021718:	sub    esp,0x10
1002171b:	mov    eax,ds:0x100951fc
10021720:	xor    eax,ebp
10021722:	mov    DWORD PTR [ebp-0x4],eax
10021725:	push   ebx
10021726:	push   esi
10021727:	mov    esi,DWORD PTR [ebp+0xc]
1002172a:	test   BYTE PTR [esi+0xc],0x40
1002172e:	push   edi
1002172f:	jne    0x100218c4
10021735:	push   esi
10021736:	call   0x1001ea9b
1002173b:	cmp    eax,0xffffffff
1002173e:	pop    ecx
1002173f:	mov    edi,0x10095cf8
10021744:	je     0x10021774
10021746:	push   esi
10021747:	call   0x1001ea9b
1002174c:	cmp    eax,0xfffffffe
1002174f:	pop    ecx
10021750:	je     0x10021774
10021752:	push   esi
10021753:	call   0x1001ea9b
10021758:	sar    eax,0x5
1002175b:	push   esi
1002175c:	lea    ebx,[eax*4+0x10098ae0]
10021763:	call   0x1001ea9b
10021768:	and    eax,0x1f
1002176b:	pop    ecx
1002176c:	shl    eax,0x6
1002176f:	add    eax,DWORD PTR [ebx]
10021771:	pop    ecx
10021772:	jmp    0x10021776
10021774:	mov    eax,edi
10021776:	mov    al,BYTE PTR [eax+0x24]
10021779:	and    al,0x7f
1002177b:	cmp    al,0x2
1002177d:	je     0x100218c4
10021783:	push   esi
10021784:	call   0x1001ea9b
10021789:	cmp    eax,0xffffffff
1002178c:	pop    ecx
1002178d:	je     0x100217bd
1002178f:	push   esi
10021790:	call   0x1001ea9b
10021795:	cmp    eax,0xfffffffe
10021798:	pop    ecx
10021799:	je     0x100217bd
1002179b:	push   esi
1002179c:	call   0x1001ea9b
100217a1:	sar    eax,0x5
100217a4:	push   esi
100217a5:	lea    ebx,[eax*4+0x10098ae0]
100217ac:	call   0x1001ea9b
100217b1:	and    eax,0x1f
100217b4:	pop    ecx
100217b5:	shl    eax,0x6
100217b8:	add    eax,DWORD PTR [ebx]
100217ba:	pop    ecx
100217bb:	jmp    0x100217bf
100217bd:	mov    eax,edi
100217bf:	mov    al,BYTE PTR [eax+0x24]
100217c2:	and    al,0x7f
100217c4:	cmp    al,0x1
100217c6:	jne    0x10021824
100217c8:	dec    DWORD PTR [esi+0x4]
100217cb:	mov    ebx,DWORD PTR [ebp+0x8]
100217ce:	js     0x100217de
100217d0:	mov    eax,DWORD PTR [esi]
100217d2:	mov    BYTE PTR [eax],bl
100217d4:	mov    ecx,DWORD PTR [esi]
100217d6:	movzx  eax,BYTE PTR [ecx]
100217d9:	inc    ecx
100217da:	mov    DWORD PTR [esi],ecx
100217dc:	jmp    0x100217ea
100217de:	movsx  eax,bl
100217e1:	push   esi
100217e2:	push   eax
100217e3:	call   0x1001cf8a
100217e8:	pop    ecx
100217e9:	pop    ecx
100217ea:	cmp    eax,0xffffffff
100217ed:	jne    0x100217f8
100217ef:	or     ax,0xffff
100217f3:	jmp    0x100218e4
100217f8:	dec    DWORD PTR [esi+0x4]
100217fb:	js     0x1002180b
100217fd:	mov    eax,DWORD PTR [esi]
100217ff:	mov    BYTE PTR [eax],bh
10021801:	mov    ecx,DWORD PTR [esi]
10021803:	movzx  eax,BYTE PTR [ecx]
10021806:	inc    ecx
10021807:	mov    DWORD PTR [esi],ecx
10021809:	jmp    0x10021817
1002180b:	movsx  eax,bh
1002180e:	push   esi
1002180f:	push   eax
10021810:	call   0x1001cf8a
10021815:	pop    ecx
10021816:	pop    ecx
10021817:	cmp    eax,0xffffffff
1002181a:	je     0x100217ef
1002181c:	mov    ax,bx
1002181f:	jmp    0x100218e4
10021824:	push   esi
10021825:	call   0x1001ea9b
1002182a:	cmp    eax,0xffffffff
1002182d:	pop    ecx
1002182e:	je     0x1002185e
10021830:	push   esi
10021831:	call   0x1001ea9b
10021836:	cmp    eax,0xfffffffe
10021839:	pop    ecx
1002183a:	je     0x1002185e
1002183c:	push   esi
1002183d:	call   0x1001ea9b
10021842:	sar    eax,0x5
10021845:	push   esi
10021846:	lea    ebx,[eax*4+0x10098ae0]
1002184d:	call   0x1001ea9b
10021852:	and    eax,0x1f
10021855:	pop    ecx
10021856:	shl    eax,0x6
10021859:	add    eax,DWORD PTR [ebx]
1002185b:	pop    ecx
1002185c:	jmp    0x10021860
1002185e:	mov    eax,edi
10021860:	test   BYTE PTR [eax+0x4],0x80
10021864:	je     0x100218c4
10021866:	push   DWORD PTR [ebp+0x8]
10021869:	lea    eax,[ebp-0xc]
1002186c:	push   0x5
1002186e:	push   eax
1002186f:	lea    eax,[ebp-0x10]
10021872:	push   eax
10021873:	call   0x10021d12
10021878:	add    esp,0x10
1002187b:	test   eax,eax
1002187d:	jne    0x100217ef
10021883:	xor    ebx,ebx
10021885:	cmp    DWORD PTR [ebp-0x10],ebx
10021888:	jle    0x100218be
1002188a:	dec    DWORD PTR [esi+0x4]
1002188d:	js     0x100218a1
1002188f:	mov    eax,DWORD PTR [esi]
10021891:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
10021895:	mov    BYTE PTR [eax],cl
10021897:	mov    ecx,DWORD PTR [esi]
10021899:	movzx  eax,BYTE PTR [ecx]
1002189c:	inc    ecx
1002189d:	mov    DWORD PTR [esi],ecx
1002189f:	jmp    0x100218af
100218a1:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
100218a6:	push   esi
100218a7:	push   eax
100218a8:	call   0x1001cf8a
100218ad:	pop    ecx
100218ae:	pop    ecx
100218af:	cmp    eax,0xffffffff
100218b2:	je     0x100217ef
100218b8:	inc    ebx
100218b9:	cmp    ebx,DWORD PTR [ebp-0x10]
100218bc:	jl     0x1002188a
100218be:	mov    ax,WORD PTR [ebp+0x8]
100218c2:	jmp    0x100218e4
100218c4:	add    DWORD PTR [esi+0x4],0xfffffffe
100218c8:	js     0x100218d7
100218ca:	mov    ecx,DWORD PTR [esi]
100218cc:	mov    eax,DWORD PTR [ebp+0x8]
100218cf:	mov    WORD PTR [ecx],ax
100218d2:	add    DWORD PTR [esi],0x2
100218d5:	jmp    0x100218e4
100218d7:	movzx  eax,WORD PTR [ebp+0x8]
100218db:	push   esi
100218dc:	push   eax
100218dd:	call   0x100237e9
100218e2:	pop    ecx
100218e3:	pop    ecx
100218e4:	mov    ecx,DWORD PTR [ebp-0x4]
100218e7:	pop    edi
100218e8:	pop    esi
100218e9:	xor    ecx,ebp
100218eb:	pop    ebx
100218ec:	call   0x10015b2b
100218f1:	leave  
100218f2:	ret    
100218f3:	mov    eax,ds:0x100951fc
100218f8:	or     eax,0x1
100218fb:	xor    ecx,ecx
100218fd:	cmp    DWORD PTR ds:0x10097838,eax
10021903:	sete   cl
10021906:	mov    eax,ecx
10021908:	ret    
10021909:	push   ebp
1002190a:	mov    ebp,esp
1002190c:	sub    esp,0x10
1002190f:	push   ebx
10021910:	push   esi
10021911:	mov    esi,DWORD PTR [ebp+0xc]
10021914:	xor    ebx,ebx
10021916:	cmp    esi,ebx
10021918:	je     0x1002192d
1002191a:	cmp    DWORD PTR [ebp+0x10],ebx
1002191d:	je     0x1002192d
1002191f:	cmp    BYTE PTR [esi],bl
10021921:	jne    0x10021933
10021923:	mov    eax,DWORD PTR [ebp+0x8]
10021926:	cmp    eax,ebx
10021928:	je     0x1002192d
1002192a:	mov    WORD PTR [eax],bx
1002192d:	xor    eax,eax
1002192f:	pop    esi
10021930:	pop    ebx
10021931:	leave  
10021932:	ret    
10021933:	push   DWORD PTR [ebp+0x14]
10021936:	lea    ecx,[ebp-0x10]
10021939:	call   0x100165fa
1002193e:	mov    eax,DWORD PTR [ebp-0x10]
10021941:	cmp    DWORD PTR [eax+0x14],ebx
10021944:	jne    0x10021965
10021946:	mov    eax,DWORD PTR [ebp+0x8]
10021949:	cmp    eax,ebx
1002194b:	je     0x10021954
1002194d:	movzx  cx,BYTE PTR [esi]
10021951:	mov    WORD PTR [eax],cx
10021954:	cmp    BYTE PTR [ebp-0x4],bl
10021957:	je     0x10021960
10021959:	mov    eax,DWORD PTR [ebp-0x8]
1002195c:	and    DWORD PTR [eax+0x70],0xfffffffd
10021960:	xor    eax,eax
10021962:	inc    eax
10021963:	jmp    0x1002192f
10021965:	lea    eax,[ebp-0x10]
10021968:	push   eax
10021969:	movzx  eax,BYTE PTR [esi]
1002196c:	push   eax
1002196d:	call   0x10017037
10021972:	test   eax,eax
10021974:	pop    ecx
10021975:	pop    ecx
10021976:	je     0x100219f5
10021978:	mov    eax,DWORD PTR [ebp-0x10]
1002197b:	mov    ecx,DWORD PTR [eax+0xac]
10021981:	cmp    ecx,0x1
10021984:	jle    0x100219ab
10021986:	cmp    DWORD PTR [ebp+0x10],ecx
10021989:	jl     0x100219ab
1002198b:	xor    edx,edx
1002198d:	cmp    DWORD PTR [ebp+0x8],ebx
10021990:	setne  dl
10021993:	push   edx
10021994:	push   DWORD PTR [ebp+0x8]
10021997:	push   ecx
10021998:	push   esi
10021999:	push   0x9
1002199b:	push   DWORD PTR [eax+0x4]
1002199e:	call   DWORD PTR ds:0x10034080
100219a4:	test   eax,eax
100219a6:	mov    eax,DWORD PTR [ebp-0x10]
100219a9:	jne    0x100219bb
100219ab:	mov    ecx,DWORD PTR [ebp+0x10]
100219ae:	cmp    ecx,DWORD PTR [eax+0xac]
100219b4:	jb     0x100219d6
100219b6:	cmp    BYTE PTR [esi+0x1],bl
100219b9:	je     0x100219d6
100219bb:	cmp    BYTE PTR [ebp-0x4],bl
100219be:	mov    eax,DWORD PTR [eax+0xac]
100219c4:	je     0x1002192f
100219ca:	mov    ecx,DWORD PTR [ebp-0x8]
100219cd:	and    DWORD PTR [ecx+0x70],0xfffffffd
100219d1:	jmp    0x1002192f
100219d6:	call   0x1001a18e
100219db:	mov    DWORD PTR [eax],0x2a
100219e1:	cmp    BYTE PTR [ebp-0x4],bl
100219e4:	je     0x100219ed
100219e6:	mov    eax,DWORD PTR [ebp-0x8]
100219e9:	and    DWORD PTR [eax+0x70],0xfffffffd
100219ed:	or     eax,0xffffffff
100219f0:	jmp    0x1002192f
100219f5:	xor    eax,eax
100219f7:	cmp    DWORD PTR [ebp+0x8],ebx
100219fa:	setne  al
100219fd:	push   eax
100219fe:	push   DWORD PTR [ebp+0x8]
10021a01:	mov    eax,DWORD PTR [ebp-0x10]
10021a04:	push   0x1
10021a06:	push   esi
10021a07:	push   0x9
10021a09:	push   DWORD PTR [eax+0x4]
10021a0c:	call   DWORD PTR ds:0x10034080
10021a12:	test   eax,eax
10021a14:	jne    0x10021954
10021a1a:	jmp    0x100219d6
10021a1c:	push   0x0
10021a1e:	push   DWORD PTR [esp+0x10]
10021a22:	push   DWORD PTR [esp+0x10]
10021a26:	push   DWORD PTR [esp+0x10]
10021a2a:	call   0x10021909
10021a2f:	add    esp,0x10
10021a32:	ret    
10021a33:	push   0x10
10021a35:	push   0x10085b70
10021a3a:	call   0x10017f88
10021a3f:	xor    ebx,ebx
10021a41:	mov    DWORD PTR [ebp-0x1c],ebx
10021a44:	push   0x1
10021a46:	call   0x1001b83b
10021a4b:	pop    ecx
10021a4c:	mov    DWORD PTR [ebp-0x4],ebx
10021a4f:	push   0x3
10021a51:	pop    edi
10021a52:	mov    DWORD PTR [ebp-0x20],edi
10021a55:	cmp    edi,DWORD PTR ds:0x10098ac0
10021a5b:	jge    0x10021ab4
10021a5d:	mov    esi,edi
10021a5f:	shl    esi,0x2
10021a62:	mov    eax,ds:0x10097ab8
10021a67:	add    eax,esi
10021a69:	cmp    DWORD PTR [eax],ebx
10021a6b:	je     0x10021ab1
10021a6d:	mov    eax,DWORD PTR [eax]
10021a6f:	test   BYTE PTR [eax+0xc],0x83
10021a73:	je     0x10021a84
10021a75:	push   eax
10021a76:	call   0x10017417
10021a7b:	pop    ecx
10021a7c:	cmp    eax,0xffffffff
10021a7f:	je     0x10021a84
10021a81:	inc    DWORD PTR [ebp-0x1c]
10021a84:	cmp    edi,0x14
10021a87:	jl     0x10021ab1
10021a89:	mov    eax,ds:0x10097ab8
10021a8e:	mov    eax,DWORD PTR [esi+eax*1]
10021a91:	add    eax,0x20
10021a94:	push   eax
10021a95:	call   DWORD PTR ds:0x10034200
10021a9b:	mov    eax,ds:0x10097ab8
10021aa0:	push   DWORD PTR [esi+eax*1]
10021aa3:	call   0x10016b85
10021aa8:	pop    ecx
10021aa9:	mov    eax,ds:0x10097ab8
10021aae:	mov    DWORD PTR [esi+eax*1],ebx
10021ab1:	inc    edi
10021ab2:	jmp    0x10021a52
10021ab4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10021abb:	call   0x10021ac9
10021ac0:	mov    eax,DWORD PTR [ebp-0x1c]
10021ac3:	call   0x10017fcd
10021ac8:	ret    
10021ac9:	push   0x1
10021acb:	call   0x1001b763
10021ad0:	pop    ecx
10021ad1:	ret    
10021ad2:	push   0x10
10021ad4:	push   0x10085b90
10021ad9:	call   0x10017f88
10021ade:	mov    eax,DWORD PTR [ebp+0x8]
10021ae1:	cmp    eax,0xfffffffe
10021ae4:	jne    0x10021af9
10021ae6:	call   0x1001a18e
10021aeb:	mov    DWORD PTR [eax],0x9
10021af1:	or     eax,0xffffffff
10021af4:	jmp    0x10021ba3
10021af9:	xor    ebx,ebx
10021afb:	cmp    eax,ebx
10021afd:	jl     0x10021b07
10021aff:	cmp    eax,DWORD PTR ds:0x10098ac4
10021b05:	jb     0x10021b21
10021b07:	call   0x1001a18e
10021b0c:	mov    DWORD PTR [eax],0x9
10021b12:	push   ebx
10021b13:	push   ebx
10021b14:	push   ebx
10021b15:	push   ebx
10021b16:	push   ebx
10021b17:	call   0x1001616f
10021b1c:	add    esp,0x14
10021b1f:	jmp    0x10021af1
10021b21:	mov    ecx,eax
10021b23:	sar    ecx,0x5
10021b26:	lea    edi,[ecx*4+0x10098ae0]
10021b2d:	mov    esi,eax
10021b2f:	and    esi,0x1f
10021b32:	shl    esi,0x6
10021b35:	mov    ecx,DWORD PTR [edi]
10021b37:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
10021b3c:	and    ecx,0x1
10021b3f:	je     0x10021b07
10021b41:	push   eax
10021b42:	call   0x1001e647
10021b47:	pop    ecx
10021b48:	mov    DWORD PTR [ebp-0x4],ebx
10021b4b:	mov    eax,DWORD PTR [edi]
10021b4d:	test   BYTE PTR [esi+eax*1+0x4],0x1
10021b52:	je     0x10021b85
10021b54:	push   DWORD PTR [ebp+0x8]
10021b57:	call   0x1001e5d6
10021b5c:	pop    ecx
10021b5d:	push   eax
10021b5e:	call   DWORD PTR ds:0x10034154
10021b64:	test   eax,eax
10021b66:	jne    0x10021b73
10021b68:	call   DWORD PTR ds:0x1003407c
10021b6e:	mov    DWORD PTR [ebp-0x1c],eax
10021b71:	jmp    0x10021b76
10021b73:	mov    DWORD PTR [ebp-0x1c],ebx
10021b76:	cmp    DWORD PTR [ebp-0x1c],ebx
10021b79:	je     0x10021b94
10021b7b:	call   0x1001a1a1
10021b80:	mov    ecx,DWORD PTR [ebp-0x1c]
10021b83:	mov    DWORD PTR [eax],ecx
10021b85:	call   0x1001a18e
10021b8a:	mov    DWORD PTR [eax],0x9
10021b90:	or     DWORD PTR [ebp-0x1c],0xffffffff
10021b94:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10021b9b:	call   0x10021ba9
10021ba0:	mov    eax,DWORD PTR [ebp-0x1c]
10021ba3:	call   0x10017fcd
10021ba8:	ret    
10021ba9:	push   DWORD PTR [ebp+0x8]
10021bac:	call   0x1001e6e7
10021bb1:	pop    ecx
10021bb2:	ret    
10021bb3:	push   ebp
10021bb4:	mov    ebp,esp
10021bb6:	sub    esp,0x10
10021bb9:	push   ebx
10021bba:	push   esi
10021bbb:	mov    esi,DWORD PTR [ebp+0xc]
10021bbe:	xor    ebx,ebx
10021bc0:	cmp    esi,ebx
10021bc2:	push   edi
10021bc3:	mov    edi,DWORD PTR [ebp+0x10]
10021bc6:	jne    0x10021bd9
10021bc8:	cmp    edi,ebx
10021bca:	jbe    0x10021bd9
10021bcc:	mov    eax,DWORD PTR [ebp+0x8]
10021bcf:	cmp    eax,ebx
10021bd1:	je     0x10021bd5
10021bd3:	mov    DWORD PTR [eax],ebx
10021bd5:	xor    eax,eax
10021bd7:	jmp    0x10021c58
10021bd9:	mov    eax,DWORD PTR [ebp+0x8]
10021bdc:	cmp    eax,ebx
10021bde:	je     0x10021be3
10021be0:	or     DWORD PTR [eax],0xffffffff
10021be3:	cmp    edi,0x7fffffff
10021be9:	jbe    0x10021c06
10021beb:	call   0x1001a18e
10021bf0:	push   0x16
10021bf2:	pop    esi
10021bf3:	push   ebx
10021bf4:	push   ebx
10021bf5:	push   ebx
10021bf6:	push   ebx
10021bf7:	push   ebx
10021bf8:	mov    DWORD PTR [eax],esi
10021bfa:	call   0x1001616f
10021bff:	add    esp,0x14
10021c02:	mov    eax,esi
10021c04:	jmp    0x10021c58
10021c06:	push   DWORD PTR [ebp+0x18]
10021c09:	lea    ecx,[ebp-0x10]
10021c0c:	call   0x100165fa
10021c11:	mov    eax,DWORD PTR [ebp-0x10]
10021c14:	cmp    DWORD PTR [eax+0x14],ebx
10021c17:	jne    0x10021cb1
10021c1d:	mov    ax,WORD PTR [ebp+0x14]
10021c21:	cmp    ax,0xff
10021c25:	jbe    0x10021c5d
10021c27:	cmp    esi,ebx
10021c29:	je     0x10021c3a
10021c2b:	cmp    edi,ebx
10021c2d:	jbe    0x10021c3a
10021c2f:	push   edi
10021c30:	push   ebx
10021c31:	push   esi
10021c32:	call   0x10016580
10021c37:	add    esp,0xc
10021c3a:	call   0x1001a18e
10021c3f:	mov    DWORD PTR [eax],0x2a
10021c45:	call   0x1001a18e
10021c4a:	cmp    BYTE PTR [ebp-0x4],bl
10021c4d:	mov    eax,DWORD PTR [eax]
10021c4f:	je     0x10021c58
10021c51:	mov    ecx,DWORD PTR [ebp-0x8]
10021c54:	and    DWORD PTR [ecx+0x70],0xfffffffd
10021c58:	pop    edi
10021c59:	pop    esi
10021c5a:	pop    ebx
10021c5b:	leave  
10021c5c:	ret    
10021c5d:	cmp    esi,ebx
10021c5f:	je     0x10021c8f
10021c61:	cmp    edi,ebx
10021c63:	ja     0x10021c8d
10021c65:	call   0x1001a18e
10021c6a:	push   0x22
10021c6c:	pop    esi
10021c6d:	push   ebx
10021c6e:	push   ebx
10021c6f:	push   ebx
10021c70:	push   ebx
10021c71:	push   ebx
10021c72:	mov    DWORD PTR [eax],esi
10021c74:	call   0x1001616f
10021c79:	add    esp,0x14
10021c7c:	cmp    BYTE PTR [ebp-0x4],bl
10021c7f:	je     0x10021c02
10021c81:	mov    eax,DWORD PTR [ebp-0x8]
10021c84:	and    DWORD PTR [eax+0x70],0xfffffffd
10021c88:	jmp    0x10021c02
10021c8d:	mov    BYTE PTR [esi],al
10021c8f:	mov    eax,DWORD PTR [ebp+0x8]
10021c92:	cmp    eax,ebx
10021c94:	je     0x10021c9c
10021c96:	mov    DWORD PTR [eax],0x1
10021c9c:	cmp    BYTE PTR [ebp-0x4],bl
10021c9f:	je     0x10021bd5
10021ca5:	mov    eax,DWORD PTR [ebp-0x8]
10021ca8:	and    DWORD PTR [eax+0x70],0xfffffffd
10021cac:	jmp    0x10021bd5
10021cb1:	lea    ecx,[ebp+0xc]
10021cb4:	push   ecx
10021cb5:	push   ebx
10021cb6:	push   edi
10021cb7:	push   esi
10021cb8:	push   0x1
10021cba:	lea    ecx,[ebp+0x14]
10021cbd:	push   ecx
10021cbe:	push   ebx
10021cbf:	mov    DWORD PTR [ebp+0xc],ebx
10021cc2:	push   DWORD PTR [eax+0x4]
10021cc5:	call   DWORD PTR ds:0x1003402c
10021ccb:	cmp    eax,ebx
10021ccd:	je     0x10021ce3
10021ccf:	cmp    DWORD PTR [ebp+0xc],ebx
10021cd2:	jne    0x10021c3a
10021cd8:	mov    ecx,DWORD PTR [ebp+0x8]
10021cdb:	cmp    ecx,ebx
10021cdd:	je     0x10021c9c
10021cdf:	mov    DWORD PTR [ecx],eax
10021ce1:	jmp    0x10021c9c
10021ce3:	call   DWORD PTR ds:0x1003407c
10021ce9:	cmp    eax,0x7a
10021cec:	jne    0x10021c3a
10021cf2:	cmp    esi,ebx
10021cf4:	je     0x10021c65
10021cfa:	cmp    edi,ebx
10021cfc:	jbe    0x10021c65
10021d02:	push   edi
10021d03:	push   ebx
10021d04:	push   esi
10021d05:	call   0x10016580
10021d0a:	add    esp,0xc
10021d0d:	jmp    0x10021c65
10021d12:	push   0x0
10021d14:	push   DWORD PTR [esp+0x14]
10021d18:	push   DWORD PTR [esp+0x14]
10021d1c:	push   DWORD PTR [esp+0x14]
10021d20:	push   DWORD PTR [esp+0x14]
10021d24:	call   0x10021bb3
10021d29:	add    esp,0x14
10021d2c:	ret    
10021d2d:	push   ebp
10021d2e:	mov    ebp,esp
10021d30:	sub    esp,0x10
10021d33:	mov    eax,ds:0x100951fc
10021d38:	xor    eax,ebp
10021d3a:	mov    DWORD PTR [ebp-0x4],eax
10021d3d:	push   esi
10021d3e:	xor    esi,esi
10021d40:	cmp    DWORD PTR ds:0x10096198,esi
10021d46:	je     0x10021d96
10021d48:	cmp    DWORD PTR ds:0x10096544,0xfffffffe
10021d4f:	jne    0x10021d56
10021d51:	call   0x10023959
10021d56:	mov    eax,ds:0x10096544
10021d5b:	cmp    eax,0xffffffff
10021d5e:	jne    0x10021d66
10021d60:	or     ax,0xffff
10021d64:	jmp    0x10021dd6
10021d66:	push   esi
10021d67:	lea    ecx,[ebp-0x10]
10021d6a:	push   ecx
10021d6b:	push   0x1
10021d6d:	lea    ecx,[ebp+0x8]
10021d70:	push   ecx
10021d71:	push   eax
10021d72:	call   DWORD PTR ds:0x100341a0
10021d78:	test   eax,eax
10021d7a:	jne    0x10021de3
10021d7c:	cmp    DWORD PTR ds:0x10096198,0x2
10021d83:	jne    0x10021d60
10021d85:	call   DWORD PTR ds:0x1003407c
10021d8b:	cmp    eax,0x78
10021d8e:	jne    0x10021d60
10021d90:	mov    DWORD PTR ds:0x10096198,esi
10021d96:	push   esi
10021d97:	push   esi
10021d98:	push   0x5
10021d9a:	lea    eax,[ebp-0xc]
10021d9d:	push   eax
10021d9e:	push   0x1
10021da0:	lea    eax,[ebp+0x8]
10021da3:	push   eax
10021da4:	push   esi
10021da5:	call   DWORD PTR ds:0x1003419c
10021dab:	push   eax
10021dac:	call   DWORD PTR ds:0x1003402c
10021db2:	mov    ecx,DWORD PTR ds:0x10096544
10021db8:	cmp    ecx,0xffffffff
10021dbb:	je     0x10021d60
10021dbd:	push   esi
10021dbe:	lea    edx,[ebp-0x10]
10021dc1:	push   edx
10021dc2:	push   eax
10021dc3:	lea    eax,[ebp-0xc]
10021dc6:	push   eax
10021dc7:	push   ecx
10021dc8:	call   DWORD PTR ds:0x10034198
10021dce:	test   eax,eax
10021dd0:	je     0x10021d60
10021dd2:	mov    ax,WORD PTR [ebp+0x8]
10021dd6:	mov    ecx,DWORD PTR [ebp-0x4]
10021dd9:	xor    ecx,ebp
10021ddb:	pop    esi
10021ddc:	call   0x10015b2b
10021de1:	leave  
10021de2:	ret    
10021de3:	mov    DWORD PTR ds:0x10096198,0x1
10021ded:	jmp    0x10021dd2
10021def:	push   ebp
10021df0:	mov    ebp,esp
10021df2:	sub    esp,0x2c
10021df5:	mov    eax,DWORD PTR [ebp+0x8]
10021df8:	movzx  ecx,WORD PTR [eax+0xa]
10021dfc:	push   ebx
10021dfd:	mov    ebx,ecx
10021dff:	and    ecx,0x8000
10021e05:	mov    DWORD PTR [ebp-0x14],ecx
10021e08:	mov    ecx,DWORD PTR [eax+0x6]
10021e0b:	mov    DWORD PTR [ebp-0x20],ecx
10021e0e:	mov    ecx,DWORD PTR [eax+0x2]
10021e11:	movzx  eax,WORD PTR [eax]
10021e14:	and    ebx,0x7fff
10021e1a:	sub    ebx,0x3fff
10021e20:	shl    eax,0x10
10021e23:	cmp    ebx,0xffffc001
10021e29:	push   edi
10021e2a:	mov    DWORD PTR [ebp-0x1c],ecx
10021e2d:	mov    DWORD PTR [ebp-0x18],eax
10021e30:	jne    0x10021e59
10021e32:	xor    ebx,ebx
10021e34:	xor    eax,eax
10021e36:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
10021e3a:	jne    0x10021e49
10021e3c:	inc    eax
10021e3d:	cmp    eax,0x3
10021e40:	jl     0x10021e36
10021e42:	xor    eax,eax
10021e44:	jmp    0x100222ee
10021e49:	xor    eax,eax
10021e4b:	lea    edi,[ebp-0x20]
10021e4e:	stos   DWORD PTR es:[edi],eax
10021e4f:	stos   DWORD PTR es:[edi],eax
10021e50:	push   0x2
10021e52:	stos   DWORD PTR es:[edi],eax
10021e53:	pop    eax
10021e54:	jmp    0x100222ee
10021e59:	and    DWORD PTR [ebp+0x8],0x0
10021e5d:	push   esi
10021e5e:	lea    esi,[ebp-0x20]
10021e61:	lea    edi,[ebp-0x2c]
10021e64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021e67:	mov    esi,DWORD PTR ds:0x100961a4
10021e6d:	dec    esi
10021e6e:	lea    ecx,[esi+0x1]
10021e71:	mov    eax,ecx
10021e73:	cdq    
10021e74:	and    edx,0x1f
10021e77:	add    eax,edx
10021e79:	sar    eax,0x5
10021e7c:	mov    edx,ecx
10021e7e:	and    edx,0x8000001f
10021e84:	mov    DWORD PTR [ebp-0x10],ebx
10021e87:	mov    DWORD PTR [ebp-0xc],eax
10021e8a:	jns    0x10021e91
10021e8c:	dec    edx
10021e8d:	or     edx,0xffffffe0
10021e90:	inc    edx
10021e91:	lea    edi,[ebp+eax*4-0x20]
10021e95:	push   0x1f
10021e97:	xor    eax,eax
10021e99:	pop    ecx
10021e9a:	sub    ecx,edx
10021e9c:	inc    eax
10021e9d:	shl    eax,cl
10021e9f:	mov    DWORD PTR [ebp-0x8],ecx
10021ea2:	test   DWORD PTR [edi],eax
10021ea4:	je     0x10021f37
10021eaa:	mov    eax,DWORD PTR [ebp-0xc]
10021ead:	or     edx,0xffffffff
10021eb0:	shl    edx,cl
10021eb2:	not    edx
10021eb4:	test   DWORD PTR [ebp+eax*4-0x20],edx
10021eb8:	jmp    0x10021ebf
10021eba:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
10021ebf:	jne    0x10021ec9
10021ec1:	inc    eax
10021ec2:	cmp    eax,0x3
10021ec5:	jl     0x10021eba
10021ec7:	jmp    0x10021f37
10021ec9:	mov    eax,esi
10021ecb:	cdq    
10021ecc:	push   0x1f
10021ece:	pop    ecx
10021ecf:	and    edx,ecx
10021ed1:	add    eax,edx
10021ed3:	sar    eax,0x5
10021ed6:	and    esi,0x8000001f
10021edc:	jns    0x10021ee3
10021ede:	dec    esi
10021edf:	or     esi,0xffffffe0
10021ee2:	inc    esi
10021ee3:	and    DWORD PTR [ebp-0x4],0x0
10021ee7:	sub    ecx,esi
10021ee9:	xor    edx,edx
10021eeb:	inc    edx
10021eec:	shl    edx,cl
10021eee:	lea    ecx,[ebp+eax*4-0x20]
10021ef2:	mov    esi,DWORD PTR [ecx]
10021ef4:	add    esi,edx
10021ef6:	mov    DWORD PTR [ebp+0x8],esi
10021ef9:	mov    esi,DWORD PTR [ecx]
10021efb:	cmp    DWORD PTR [ebp+0x8],esi
10021efe:	jb     0x10021f22
10021f00:	cmp    DWORD PTR [ebp+0x8],edx
10021f03:	jmp    0x10021f20
10021f05:	test   ecx,ecx
10021f07:	je     0x10021f34
10021f09:	and    DWORD PTR [ebp-0x4],0x0
10021f0d:	lea    ecx,[ebp+eax*4-0x20]
10021f11:	mov    edx,DWORD PTR [ecx]
10021f13:	lea    esi,[edx+0x1]
10021f16:	cmp    esi,edx
10021f18:	mov    DWORD PTR [ebp+0x8],esi
10021f1b:	jb     0x10021f22
10021f1d:	cmp    esi,0x1
10021f20:	jae    0x10021f29
10021f22:	mov    DWORD PTR [ebp-0x4],0x1
10021f29:	dec    eax
10021f2a:	mov    edx,DWORD PTR [ebp+0x8]
10021f2d:	mov    DWORD PTR [ecx],edx
10021f2f:	mov    ecx,DWORD PTR [ebp-0x4]
10021f32:	jns    0x10021f05
10021f34:	mov    DWORD PTR [ebp+0x8],ecx
10021f37:	mov    ecx,DWORD PTR [ebp-0x8]
10021f3a:	or     eax,0xffffffff
10021f3d:	shl    eax,cl
10021f3f:	and    DWORD PTR [edi],eax
10021f41:	mov    eax,DWORD PTR [ebp-0xc]
10021f44:	inc    eax
10021f45:	cmp    eax,0x3
10021f48:	jge    0x10021f57
10021f4a:	push   0x3
10021f4c:	pop    ecx
10021f4d:	lea    edi,[ebp+eax*4-0x20]
10021f51:	sub    ecx,eax
10021f53:	xor    eax,eax
10021f55:	rep stos DWORD PTR es:[edi],eax
10021f57:	cmp    DWORD PTR [ebp+0x8],0x0
10021f5b:	je     0x10021f5e
10021f5d:	inc    ebx
10021f5e:	mov    eax,ds:0x100961a0
10021f63:	mov    ecx,eax
10021f65:	sub    ecx,DWORD PTR ds:0x100961a4
10021f6b:	cmp    ebx,ecx
10021f6d:	jge    0x10021f7c
10021f6f:	xor    eax,eax
10021f71:	lea    edi,[ebp-0x20]
10021f74:	stos   DWORD PTR es:[edi],eax
10021f75:	stos   DWORD PTR es:[edi],eax
10021f76:	stos   DWORD PTR es:[edi],eax
10021f77:	jmp    0x10022189
10021f7c:	cmp    ebx,eax
10021f7e:	jg     0x10022193
10021f84:	sub    eax,DWORD PTR [ebp-0x10]
10021f87:	lea    esi,[ebp-0x2c]
10021f8a:	mov    ecx,eax
10021f8c:	lea    edi,[ebp-0x20]
10021f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021f90:	cdq    
10021f91:	and    edx,0x1f
10021f94:	add    eax,edx
10021f96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021f97:	mov    edx,ecx
10021f99:	sar    eax,0x5
10021f9c:	and    edx,0x8000001f
10021fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021fa3:	jns    0x10021faa
10021fa5:	dec    edx
10021fa6:	or     edx,0xffffffe0
10021fa9:	inc    edx
10021faa:	and    DWORD PTR [ebp-0xc],0x0
10021fae:	and    DWORD PTR [ebp+0x8],0x0
10021fb2:	or     edi,0xffffffff
10021fb5:	mov    ecx,edx
10021fb7:	shl    edi,cl
10021fb9:	mov    DWORD PTR [ebp-0x4],0x20
10021fc0:	sub    DWORD PTR [ebp-0x4],edx
10021fc3:	not    edi
10021fc5:	mov    ebx,DWORD PTR [ebp+0x8]
10021fc8:	lea    ebx,[ebp+ebx*4-0x20]
10021fcc:	mov    esi,DWORD PTR [ebx]
10021fce:	mov    ecx,esi
10021fd0:	and    ecx,edi
10021fd2:	mov    DWORD PTR [ebp-0x10],ecx
10021fd5:	mov    ecx,edx
10021fd7:	shr    esi,cl
10021fd9:	mov    ecx,DWORD PTR [ebp-0x4]
10021fdc:	or     esi,DWORD PTR [ebp-0xc]
10021fdf:	mov    DWORD PTR [ebx],esi
10021fe1:	mov    esi,DWORD PTR [ebp-0x10]
10021fe4:	shl    esi,cl
10021fe6:	inc    DWORD PTR [ebp+0x8]
10021fe9:	cmp    DWORD PTR [ebp+0x8],0x3
10021fed:	mov    DWORD PTR [ebp-0xc],esi
10021ff0:	jl     0x10021fc5
10021ff2:	mov    esi,eax
10021ff4:	push   0x2
10021ff6:	shl    esi,0x2
10021ff9:	lea    ecx,[ebp-0x18]
10021ffc:	pop    edx
10021ffd:	sub    ecx,esi
10021fff:	cmp    edx,eax
10022001:	jl     0x1002200b
10022003:	mov    esi,DWORD PTR [ecx]
10022005:	mov    DWORD PTR [ebp+edx*4-0x20],esi
10022009:	jmp    0x10022010
1002200b:	and    DWORD PTR [ebp+edx*4-0x20],0x0
10022010:	dec    edx
10022011:	sub    ecx,0x4
10022014:	test   edx,edx
10022016:	jge    0x10021fff
10022018:	mov    esi,DWORD PTR ds:0x100961a4
1002201e:	dec    esi
1002201f:	lea    ecx,[esi+0x1]
10022022:	mov    eax,ecx
10022024:	cdq    
10022025:	and    edx,0x1f
10022028:	add    eax,edx
1002202a:	sar    eax,0x5
1002202d:	mov    edx,ecx
1002202f:	and    edx,0x8000001f
10022035:	mov    DWORD PTR [ebp-0xc],eax
10022038:	jns    0x1002203f
1002203a:	dec    edx
1002203b:	or     edx,0xffffffe0
1002203e:	inc    edx
1002203f:	push   0x1f
10022041:	pop    ecx
10022042:	sub    ecx,edx
10022044:	xor    edx,edx
10022046:	inc    edx
10022047:	shl    edx,cl
10022049:	lea    ebx,[ebp+eax*4-0x20]
1002204d:	mov    DWORD PTR [ebp-0x10],ecx
10022050:	test   DWORD PTR [ebx],edx
10022052:	je     0x100220da
10022058:	or     edx,0xffffffff
1002205b:	shl    edx,cl
1002205d:	not    edx
1002205f:	test   DWORD PTR [ebp+eax*4-0x20],edx
10022063:	jmp    0x1002206a
10022065:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1002206a:	jne    0x10022074
1002206c:	inc    eax
1002206d:	cmp    eax,0x3
10022070:	jl     0x10022065
10022072:	jmp    0x100220da
10022074:	mov    eax,esi
10022076:	cdq    
10022077:	push   0x1f
10022079:	pop    ecx
1002207a:	and    edx,ecx
1002207c:	add    eax,edx
1002207e:	sar    eax,0x5
10022081:	and    esi,0x8000001f
10022087:	jns    0x1002208e
10022089:	dec    esi
1002208a:	or     esi,0xffffffe0
1002208d:	inc    esi
1002208e:	and    DWORD PTR [ebp+0x8],0x0
10022092:	xor    edx,edx
10022094:	sub    ecx,esi
10022096:	inc    edx
10022097:	shl    edx,cl
10022099:	lea    ecx,[ebp+eax*4-0x20]
1002209d:	mov    esi,DWORD PTR [ecx]
1002209f:	lea    edi,[esi+edx*1]
100220a2:	cmp    edi,esi
100220a4:	jb     0x100220aa
100220a6:	cmp    edi,edx
100220a8:	jae    0x100220b1
100220aa:	mov    DWORD PTR [ebp+0x8],0x1
100220b1:	mov    DWORD PTR [ecx],edi
100220b3:	mov    ecx,DWORD PTR [ebp+0x8]
100220b6:	jmp    0x100220d7
100220b8:	test   ecx,ecx
100220ba:	je     0x100220da
100220bc:	lea    ecx,[ebp+eax*4-0x20]
100220c0:	mov    edx,DWORD PTR [ecx]
100220c2:	lea    esi,[edx+0x1]
100220c5:	xor    edi,edi
100220c7:	cmp    esi,edx
100220c9:	jb     0x100220d0
100220cb:	cmp    esi,0x1
100220ce:	jae    0x100220d3
100220d0:	xor    edi,edi
100220d2:	inc    edi
100220d3:	mov    DWORD PTR [ecx],esi
100220d5:	mov    ecx,edi
100220d7:	dec    eax
100220d8:	jns    0x100220b8
100220da:	mov    ecx,DWORD PTR [ebp-0x10]
100220dd:	or     eax,0xffffffff
100220e0:	shl    eax,cl
100220e2:	and    DWORD PTR [ebx],eax
100220e4:	mov    eax,DWORD PTR [ebp-0xc]
100220e7:	inc    eax
100220e8:	cmp    eax,0x3
100220eb:	jge    0x100220fa
100220ed:	push   0x3
100220ef:	pop    ecx
100220f0:	lea    edi,[ebp+eax*4-0x20]
100220f4:	sub    ecx,eax
100220f6:	xor    eax,eax
100220f8:	rep stos DWORD PTR es:[edi],eax
100220fa:	mov    ecx,DWORD PTR ds:0x100961a8
10022100:	inc    ecx
10022101:	mov    eax,ecx
10022103:	cdq    
10022104:	and    edx,0x1f
10022107:	add    eax,edx
10022109:	mov    edx,ecx
1002210b:	sar    eax,0x5
1002210e:	and    edx,0x8000001f
10022114:	jns    0x1002211b
10022116:	dec    edx
10022117:	or     edx,0xffffffe0
1002211a:	inc    edx
1002211b:	and    DWORD PTR [ebp-0xc],0x0
1002211f:	and    DWORD PTR [ebp+0x8],0x0
10022123:	or     edi,0xffffffff
10022126:	mov    ecx,edx
10022128:	shl    edi,cl
1002212a:	mov    DWORD PTR [ebp-0x4],0x20
10022131:	sub    DWORD PTR [ebp-0x4],edx
10022134:	not    edi
10022136:	mov    ebx,DWORD PTR [ebp+0x8]
10022139:	lea    ebx,[ebp+ebx*4-0x20]
1002213d:	mov    esi,DWORD PTR [ebx]
1002213f:	mov    ecx,esi
10022141:	and    ecx,edi
10022143:	mov    DWORD PTR [ebp-0x10],ecx
10022146:	mov    ecx,edx
10022148:	shr    esi,cl
1002214a:	mov    ecx,DWORD PTR [ebp-0x4]
1002214d:	or     esi,DWORD PTR [ebp-0xc]
10022150:	mov    DWORD PTR [ebx],esi
10022152:	mov    esi,DWORD PTR [ebp-0x10]
10022155:	shl    esi,cl
10022157:	inc    DWORD PTR [ebp+0x8]
1002215a:	cmp    DWORD PTR [ebp+0x8],0x3
1002215e:	mov    DWORD PTR [ebp-0xc],esi
10022161:	jl     0x10022136
10022163:	mov    esi,eax
10022165:	push   0x2
10022167:	shl    esi,0x2
1002216a:	lea    ecx,[ebp-0x18]
1002216d:	pop    edx
1002216e:	sub    ecx,esi
10022170:	cmp    edx,eax
10022172:	jl     0x1002217c
10022174:	mov    esi,DWORD PTR [ecx]
10022176:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1002217a:	jmp    0x10022181
1002217c:	and    DWORD PTR [ebp+edx*4-0x20],0x0
10022181:	dec    edx
10022182:	sub    ecx,0x4
10022185:	test   edx,edx
10022187:	jge    0x10022170
10022189:	push   0x2
1002218b:	xor    ebx,ebx
1002218d:	pop    eax
1002218e:	jmp    0x100222ed
10022193:	cmp    ebx,DWORD PTR ds:0x1009619c
10022199:	mov    ecx,DWORD PTR ds:0x100961a8
1002219f:	jl     0x10022252
100221a5:	xor    eax,eax
100221a7:	lea    edi,[ebp-0x20]
100221aa:	stos   DWORD PTR es:[edi],eax
100221ab:	stos   DWORD PTR es:[edi],eax
100221ac:	stos   DWORD PTR es:[edi],eax
100221ad:	or     DWORD PTR [ebp-0x20],0x80000000
100221b4:	mov    eax,ecx
100221b6:	cdq    
100221b7:	and    edx,0x1f
100221ba:	add    eax,edx
100221bc:	mov    edx,ecx
100221be:	sar    eax,0x5
100221c1:	and    edx,0x8000001f
100221c7:	jns    0x100221ce
100221c9:	dec    edx
100221ca:	or     edx,0xffffffe0
100221cd:	inc    edx
100221ce:	and    DWORD PTR [ebp-0xc],0x0
100221d2:	and    DWORD PTR [ebp+0x8],0x0
100221d6:	or     edi,0xffffffff
100221d9:	mov    ecx,edx
100221db:	shl    edi,cl
100221dd:	mov    DWORD PTR [ebp-0x4],0x20
100221e4:	sub    DWORD PTR [ebp-0x4],edx
100221e7:	not    edi
100221e9:	mov    ebx,DWORD PTR [ebp+0x8]
100221ec:	lea    ebx,[ebp+ebx*4-0x20]
100221f0:	mov    esi,DWORD PTR [ebx]
100221f2:	mov    ecx,esi
100221f4:	and    ecx,edi
100221f6:	mov    DWORD PTR [ebp-0x10],ecx
100221f9:	mov    ecx,edx
100221fb:	shr    esi,cl
100221fd:	mov    ecx,DWORD PTR [ebp-0x4]
10022200:	or     esi,DWORD PTR [ebp-0xc]
10022203:	mov    DWORD PTR [ebx],esi
10022205:	mov    esi,DWORD PTR [ebp-0x10]
10022208:	shl    esi,cl
1002220a:	inc    DWORD PTR [ebp+0x8]
1002220d:	cmp    DWORD PTR [ebp+0x8],0x3
10022211:	mov    DWORD PTR [ebp-0xc],esi
10022214:	jl     0x100221e9
10022216:	mov    esi,eax
10022218:	push   0x2
1002221a:	shl    esi,0x2
1002221d:	lea    ecx,[ebp-0x18]
10022220:	pop    edx
10022221:	sub    ecx,esi
10022223:	cmp    edx,eax
10022225:	jl     0x1002222f
10022227:	mov    esi,DWORD PTR [ecx]
10022229:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1002222d:	jmp    0x10022234
1002222f:	and    DWORD PTR [ebp+edx*4-0x20],0x0
10022234:	dec    edx
10022235:	sub    ecx,0x4
10022238:	test   edx,edx
1002223a:	jge    0x10022223
1002223c:	mov    eax,ds:0x1009619c
10022241:	mov    ecx,DWORD PTR ds:0x100961b0
10022247:	lea    ebx,[ecx+eax*1]
1002224a:	xor    eax,eax
1002224c:	inc    eax
1002224d:	jmp    0x100222ed
10022252:	mov    eax,ds:0x100961b0
10022257:	and    DWORD PTR [ebp-0x20],0x7fffffff
1002225e:	add    ebx,eax
10022260:	mov    eax,ecx
10022262:	cdq    
10022263:	and    edx,0x1f
10022266:	add    eax,edx
10022268:	mov    edx,ecx
1002226a:	sar    eax,0x5
1002226d:	and    edx,0x8000001f
10022273:	jns    0x1002227a
10022275:	dec    edx
10022276:	or     edx,0xffffffe0
10022279:	inc    edx
1002227a:	and    DWORD PTR [ebp-0xc],0x0
1002227e:	and    DWORD PTR [ebp+0x8],0x0
10022282:	or     esi,0xffffffff
10022285:	mov    ecx,edx
10022287:	shl    esi,cl
10022289:	mov    DWORD PTR [ebp-0x4],0x20
10022290:	sub    DWORD PTR [ebp-0x4],edx
10022293:	not    esi
10022295:	mov    ecx,DWORD PTR [ebp+0x8]
10022298:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
1002229c:	mov    ecx,edi
1002229e:	and    ecx,esi
100222a0:	mov    DWORD PTR [ebp-0x10],ecx
100222a3:	mov    ecx,edx
100222a5:	shr    edi,cl
100222a7:	mov    ecx,DWORD PTR [ebp+0x8]
100222aa:	or     edi,DWORD PTR [ebp-0xc]
100222ad:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
100222b1:	mov    edi,DWORD PTR [ebp-0x10]
100222b4:	mov    ecx,DWORD PTR [ebp-0x4]
100222b7:	shl    edi,cl
100222b9:	inc    DWORD PTR [ebp+0x8]
100222bc:	cmp    DWORD PTR [ebp+0x8],0x3
100222c0:	mov    DWORD PTR [ebp-0xc],edi
100222c3:	jl     0x10022295
100222c5:	mov    esi,eax
100222c7:	push   0x2
100222c9:	shl    esi,0x2
100222cc:	lea    ecx,[ebp-0x18]
100222cf:	pop    edx
100222d0:	sub    ecx,esi
100222d2:	cmp    edx,eax
100222d4:	jl     0x100222de
100222d6:	mov    esi,DWORD PTR [ecx]
100222d8:	mov    DWORD PTR [ebp+edx*4-0x20],esi
100222dc:	jmp    0x100222e3
100222de:	and    DWORD PTR [ebp+edx*4-0x20],0x0
100222e3:	dec    edx
100222e4:	sub    ecx,0x4
100222e7:	test   edx,edx
100222e9:	jge    0x100222d2
100222eb:	xor    eax,eax
100222ed:	pop    esi
100222ee:	push   0x1f
100222f0:	pop    ecx
100222f1:	sub    ecx,DWORD PTR ds:0x100961a8
100222f7:	shl    ebx,cl
100222f9:	mov    ecx,DWORD PTR [ebp-0x14]
100222fc:	neg    ecx
100222fe:	sbb    ecx,ecx
10022300:	and    ecx,0x80000000
10022306:	or     ebx,ecx
10022308:	mov    ecx,DWORD PTR ds:0x100961ac
1002230e:	or     ebx,DWORD PTR [ebp-0x20]
10022311:	cmp    ecx,0x40
10022314:	jne    0x10022323
10022316:	mov    ecx,DWORD PTR [ebp+0xc]
10022319:	mov    edx,DWORD PTR [ebp-0x1c]
1002231c:	mov    DWORD PTR [ecx+0x4],ebx
1002231f:	mov    DWORD PTR [ecx],edx
10022321:	jmp    0x1002232d
10022323:	cmp    ecx,0x20
10022326:	jne    0x1002232d
10022328:	mov    ecx,DWORD PTR [ebp+0xc]
1002232b:	mov    DWORD PTR [ecx],ebx
1002232d:	pop    edi
1002232e:	pop    ebx
1002232f:	leave  
10022330:	ret    
10022331:	push   ebp
10022332:	mov    ebp,esp
10022334:	sub    esp,0x2c
10022337:	mov    eax,DWORD PTR [ebp+0x8]
1002233a:	movzx  ecx,WORD PTR [eax+0xa]
1002233e:	push   ebx
1002233f:	mov    ebx,ecx
10022341:	and    ecx,0x8000
10022347:	mov    DWORD PTR [ebp-0x14],ecx
1002234a:	mov    ecx,DWORD PTR [eax+0x6]
1002234d:	mov    DWORD PTR [ebp-0x20],ecx
10022350:	mov    ecx,DWORD PTR [eax+0x2]
10022353:	movzx  eax,WORD PTR [eax]
10022356:	and    ebx,0x7fff
1002235c:	sub    ebx,0x3fff
10022362:	shl    eax,0x10
10022365:	cmp    ebx,0xffffc001
1002236b:	push   edi
1002236c:	mov    DWORD PTR [ebp-0x1c],ecx
1002236f:	mov    DWORD PTR [ebp-0x18],eax
10022372:	jne    0x1002239b
10022374:	xor    ebx,ebx
10022376:	xor    eax,eax
10022378:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
1002237c:	jne    0x1002238b
1002237e:	inc    eax
1002237f:	cmp    eax,0x3
10022382:	jl     0x10022378
10022384:	xor    eax,eax
10022386:	jmp    0x10022830
1002238b:	xor    eax,eax
1002238d:	lea    edi,[ebp-0x20]
10022390:	stos   DWORD PTR es:[edi],eax
10022391:	stos   DWORD PTR es:[edi],eax
10022392:	push   0x2
10022394:	stos   DWORD PTR es:[edi],eax
10022395:	pop    eax
10022396:	jmp    0x10022830
1002239b:	and    DWORD PTR [ebp+0x8],0x0
1002239f:	push   esi
100223a0:	lea    esi,[ebp-0x20]
100223a3:	lea    edi,[ebp-0x2c]
100223a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100223a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100223a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100223a9:	mov    esi,DWORD PTR ds:0x100961bc
100223af:	dec    esi
100223b0:	lea    ecx,[esi+0x1]
100223b3:	mov    eax,ecx
100223b5:	cdq    
100223b6:	and    edx,0x1f
100223b9:	add    eax,edx
100223bb:	sar    eax,0x5
100223be:	mov    edx,ecx
100223c0:	and    edx,0x8000001f
100223c6:	mov    DWORD PTR [ebp-0x10],ebx
100223c9:	mov    DWORD PTR [ebp-0xc],eax
100223cc:	jns    0x100223d3
100223ce:	dec    edx
100223cf:	or     edx,0xffffffe0
100223d2:	inc    edx
100223d3:	lea    edi,[ebp+eax*4-0x20]
100223d7:	push   0x1f
100223d9:	xor    eax,eax
100223db:	pop    ecx
100223dc:	sub    ecx,edx
100223de:	inc    eax
100223df:	shl    eax,cl
100223e1:	mov    DWORD PTR [ebp-0x8],ecx
100223e4:	test   DWORD PTR [edi],eax
100223e6:	je     0x10022479
100223ec:	mov    eax,DWORD PTR [ebp-0xc]
100223ef:	or     edx,0xffffffff
100223f2:	shl    edx,cl
100223f4:	not    edx
100223f6:	test   DWORD PTR [ebp+eax*4-0x20],edx
100223fa:	jmp    0x10022401
100223fc:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
10022401:	jne    0x1002240b
10022403:	inc    eax
10022404:	cmp    eax,0x3
10022407:	jl     0x100223fc
10022409:	jmp    0x10022479
1002240b:	mov    eax,esi
1002240d:	cdq    
1002240e:	push   0x1f
10022410:	pop    ecx
10022411:	and    edx,ecx
10022413:	add    eax,edx
10022415:	sar    eax,0x5
10022418:	and    esi,0x8000001f
1002241e:	jns    0x10022425
10022420:	dec    esi
10022421:	or     esi,0xffffffe0
10022424:	inc    esi
10022425:	and    DWORD PTR [ebp-0x4],0x0
10022429:	sub    ecx,esi
1002242b:	xor    edx,edx
1002242d:	inc    edx
1002242e:	shl    edx,cl
10022430:	lea    ecx,[ebp+eax*4-0x20]
10022434:	mov    esi,DWORD PTR [ecx]
10022436:	add    esi,edx
10022438:	mov    DWORD PTR [ebp+0x8],esi
1002243b:	mov    esi,DWORD PTR [ecx]
1002243d:	cmp    DWORD PTR [ebp+0x8],esi
10022440:	jb     0x10022464
10022442:	cmp    DWORD PTR [ebp+0x8],edx
10022445:	jmp    0x10022462
10022447:	test   ecx,ecx
10022449:	je     0x10022476
1002244b:	and    DWORD PTR [ebp-0x4],0x0
1002244f:	lea    ecx,[ebp+eax*4-0x20]
10022453:	mov    edx,DWORD PTR [ecx]
10022455:	lea    esi,[edx+0x1]
10022458:	cmp    esi,edx
1002245a:	mov    DWORD PTR [ebp+0x8],esi
1002245d:	jb     0x10022464
1002245f:	cmp    esi,0x1
10022462:	jae    0x1002246b
10022464:	mov    DWORD PTR [ebp-0x4],0x1
1002246b:	dec    eax
1002246c:	mov    edx,DWORD PTR [ebp+0x8]
1002246f:	mov    DWORD PTR [ecx],edx
10022471:	mov    ecx,DWORD PTR [ebp-0x4]
10022474:	jns    0x10022447
10022476:	mov    DWORD PTR [ebp+0x8],ecx
10022479:	mov    ecx,DWORD PTR [ebp-0x8]
1002247c:	or     eax,0xffffffff
1002247f:	shl    eax,cl
10022481:	and    DWORD PTR [edi],eax
10022483:	mov    eax,DWORD PTR [ebp-0xc]
10022486:	inc    eax
10022487:	cmp    eax,0x3
1002248a:	jge    0x10022499
1002248c:	push   0x3
1002248e:	pop    ecx
1002248f:	lea    edi,[ebp+eax*4-0x20]
10022493:	sub    ecx,eax
10022495:	xor    eax,eax
10022497:	rep stos DWORD PTR es:[edi],eax
10022499:	cmp    DWORD PTR [ebp+0x8],0x0
1002249d:	je     0x100224a0
1002249f:	inc    ebx
100224a0:	mov    eax,ds:0x100961b8
100224a5:	mov    ecx,eax
100224a7:	sub    ecx,DWORD PTR ds:0x100961bc
100224ad:	cmp    ebx,ecx
100224af:	jge    0x100224be
100224b1:	xor    eax,eax
100224b3:	lea    edi,[ebp-0x20]
100224b6:	stos   DWORD PTR es:[edi],eax
100224b7:	stos   DWORD PTR es:[edi],eax
100224b8:	stos   DWORD PTR es:[edi],eax
100224b9:	jmp    0x100226cb
100224be:	cmp    ebx,eax
100224c0:	jg     0x100226d5
100224c6:	sub    eax,DWORD PTR [ebp-0x10]
100224c9:	lea    esi,[ebp-0x2c]
100224cc:	mov    ecx,eax
100224ce:	lea    edi,[ebp-0x20]
100224d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100224d2:	cdq    
100224d3:	and    edx,0x1f
100224d6:	add    eax,edx
100224d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100224d9:	mov    edx,ecx
100224db:	sar    eax,0x5
100224de:	and    edx,0x8000001f
100224e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100224e5:	jns    0x100224ec
100224e7:	dec    edx
100224e8:	or     edx,0xffffffe0
100224eb:	inc    edx
100224ec:	and    DWORD PTR [ebp-0xc],0x0
100224f0:	and    DWORD PTR [ebp+0x8],0x0
100224f4:	or     edi,0xffffffff
100224f7:	mov    ecx,edx
100224f9:	shl    edi,cl
100224fb:	mov    DWORD PTR [ebp-0x4],0x20
10022502:	sub    DWORD PTR [ebp-0x4],edx
10022505:	not    edi
10022507:	mov    ebx,DWORD PTR [ebp+0x8]
1002250a:	lea    ebx,[ebp+ebx*4-0x20]
1002250e:	mov    esi,DWORD PTR [ebx]
10022510:	mov    ecx,esi
10022512:	and    ecx,edi
10022514:	mov    DWORD PTR [ebp-0x10],ecx
10022517:	mov    ecx,edx
10022519:	shr    esi,cl
1002251b:	mov    ecx,DWORD PTR [ebp-0x4]
1002251e:	or     esi,DWORD PTR [ebp-0xc]
10022521:	mov    DWORD PTR [ebx],esi
10022523:	mov    esi,DWORD PTR [ebp-0x10]
10022526:	shl    esi,cl
10022528:	inc    DWORD PTR [ebp+0x8]
1002252b:	cmp    DWORD PTR [ebp+0x8],0x3
1002252f:	mov    DWORD PTR [ebp-0xc],esi
10022532:	jl     0x10022507
10022534:	mov    esi,eax
10022536:	push   0x2
10022538:	shl    esi,0x2
1002253b:	lea    ecx,[ebp-0x18]
1002253e:	pop    edx
1002253f:	sub    ecx,esi
10022541:	cmp    edx,eax
10022543:	jl     0x1002254d
10022545:	mov    esi,DWORD PTR [ecx]
10022547:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1002254b:	jmp    0x10022552
1002254d:	and    DWORD PTR [ebp+edx*4-0x20],0x0
10022552:	dec    edx
10022553:	sub    ecx,0x4
10022556:	test   edx,edx
10022558:	jge    0x10022541
1002255a:	mov    esi,DWORD PTR ds:0x100961bc
10022560:	dec    esi
10022561:	lea    ecx,[esi+0x1]
10022564:	mov    eax,ecx
10022566:	cdq    
10022567:	and    edx,0x1f
1002256a:	add    eax,edx
1002256c:	sar    eax,0x5
1002256f:	mov    edx,ecx
10022571:	and    edx,0x8000001f
10022577:	mov    DWORD PTR [ebp-0xc],eax
1002257a:	jns    0x10022581
1002257c:	dec    edx
1002257d:	or     edx,0xffffffe0
10022580:	inc    edx
10022581:	push   0x1f
10022583:	pop    ecx
10022584:	sub    ecx,edx
10022586:	xor    edx,edx
10022588:	inc    edx
10022589:	shl    edx,cl
1002258b:	lea    ebx,[ebp+eax*4-0x20]
1002258f:	mov    DWORD PTR [ebp-0x10],ecx
10022592:	test   DWORD PTR [ebx],edx
10022594:	je     0x1002261c
1002259a:	or     edx,0xffffffff
1002259d:	shl    edx,cl
1002259f:	not    edx
100225a1:	test   DWORD PTR [ebp+eax*4-0x20],edx
100225a5:	jmp    0x100225ac
100225a7:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
100225ac:	jne    0x100225b6
100225ae:	inc    eax
100225af:	cmp    eax,0x3
100225b2:	jl     0x100225a7
100225b4:	jmp    0x1002261c
100225b6:	mov    eax,esi
100225b8:	cdq    
100225b9:	push   0x1f
100225bb:	pop    ecx
100225bc:	and    edx,ecx
100225be:	add    eax,edx
100225c0:	sar    eax,0x5
100225c3:	and    esi,0x8000001f
100225c9:	jns    0x100225d0
100225cb:	dec    esi
100225cc:	or     esi,0xffffffe0
100225cf:	inc    esi
100225d0:	and    DWORD PTR [ebp+0x8],0x0
100225d4:	xor    edx,edx
100225d6:	sub    ecx,esi
100225d8:	inc    edx
100225d9:	shl    edx,cl
100225db:	lea    ecx,[ebp+eax*4-0x20]
100225df:	mov    esi,DWORD PTR [ecx]
100225e1:	lea    edi,[esi+edx*1]
100225e4:	cmp    edi,esi
100225e6:	jb     0x100225ec
100225e8:	cmp    edi,edx
100225ea:	jae    0x100225f3
100225ec:	mov    DWORD PTR [ebp+0x8],0x1
100225f3:	mov    DWORD PTR [ecx],edi
100225f5:	mov    ecx,DWORD PTR [ebp+0x8]
100225f8:	jmp    0x10022619
100225fa:	test   ecx,ecx
100225fc:	je     0x1002261c
100225fe:	lea    ecx,[ebp+eax*4-0x20]
10022602:	mov    edx,DWORD PTR [ecx]
10022604:	lea    esi,[edx+0x1]
10022607:	xor    edi,edi
10022609:	cmp    esi,edx
1002260b:	jb     0x10022612
1002260d:	cmp    esi,0x1
10022610:	jae    0x10022615
10022612:	xor    edi,edi
10022614:	inc    edi
10022615:	mov    DWORD PTR [ecx],esi
10022617:	mov    ecx,edi
10022619:	dec    eax
1002261a:	jns    0x100225fa
1002261c:	mov    ecx,DWORD PTR [ebp-0x10]
1002261f:	or     eax,0xffffffff
10022622:	shl    eax,cl
10022624:	and    DWORD PTR [ebx],eax
10022626:	mov    eax,DWORD PTR [ebp-0xc]
10022629:	inc    eax
1002262a:	cmp    eax,0x3
1002262d:	jge    0x1002263c
1002262f:	push   0x3
10022631:	pop    ecx
10022632:	lea    edi,[ebp+eax*4-0x20]
10022636:	sub    ecx,eax
10022638:	xor    eax,eax
1002263a:	rep stos DWORD PTR es:[edi],eax
1002263c:	mov    ecx,DWORD PTR ds:0x100961c0
10022642:	inc    ecx
10022643:	mov    eax,ecx
10022645:	cdq    
10022646:	and    edx,0x1f
10022649:	add    eax,edx
1002264b:	mov    edx,ecx
1002264d:	sar    eax,0x5
10022650:	and    edx,0x8000001f
10022656:	jns    0x1002265d
10022658:	dec    edx
10022659:	or     edx,0xffffffe0
1002265c:	inc    edx
1002265d:	and    DWORD PTR [ebp-0xc],0x0
10022661:	and    DWORD PTR [ebp+0x8],0x0
10022665:	or     edi,0xffffffff
10022668:	mov    ecx,edx
1002266a:	shl    edi,cl
1002266c:	mov    DWORD PTR [ebp-0x4],0x20
10022673:	sub    DWORD PTR [ebp-0x4],edx
10022676:	not    edi
10022678:	mov    ebx,DWORD PTR [ebp+0x8]
1002267b:	lea    ebx,[ebp+ebx*4-0x20]
1002267f:	mov    esi,DWORD PTR [ebx]
10022681:	mov    ecx,esi
10022683:	and    ecx,edi
10022685:	mov    DWORD PTR [ebp-0x10],ecx
10022688:	mov    ecx,edx
1002268a:	shr    esi,cl
1002268c:	mov    ecx,DWORD PTR [ebp-0x4]
1002268f:	or     esi,DWORD PTR [ebp-0xc]
10022692:	mov    DWORD PTR [ebx],esi
10022694:	mov    esi,DWORD PTR [ebp-0x10]
10022697:	shl    esi,cl
10022699:	inc    DWORD PTR [ebp+0x8]
1002269c:	cmp    DWORD PTR [ebp+0x8],0x3
100226a0:	mov    DWORD PTR [ebp-0xc],esi
100226a3:	jl     0x10022678
100226a5:	mov    esi,eax
100226a7:	push   0x2
100226a9:	shl    esi,0x2
100226ac:	lea    ecx,[ebp-0x18]
100226af:	pop    edx
100226b0:	sub    ecx,esi
100226b2:	cmp    edx,eax
100226b4:	jl     0x100226be
100226b6:	mov    esi,DWORD PTR [ecx]
100226b8:	mov    DWORD PTR [ebp+edx*4-0x20],esi
100226bc:	jmp    0x100226c3
100226be:	and    DWORD PTR [ebp+edx*4-0x20],0x0
100226c3:	dec    edx
100226c4:	sub    ecx,0x4
100226c7:	test   edx,edx
100226c9:	jge    0x100226b2
100226cb:	push   0x2
100226cd:	xor    ebx,ebx
100226cf:	pop    eax
100226d0:	jmp    0x1002282f
100226d5:	cmp    ebx,DWORD PTR ds:0x100961b4
100226db:	mov    ecx,DWORD PTR ds:0x100961c0
100226e1:	jl     0x10022794
100226e7:	xor    eax,eax
100226e9:	lea    edi,[ebp-0x20]
100226ec:	stos   DWORD PTR es:[edi],eax
100226ed:	stos   DWORD PTR es:[edi],eax
100226ee:	stos   DWORD PTR es:[edi],eax
100226ef:	or     DWORD PTR [ebp-0x20],0x80000000
100226f6:	mov    eax,ecx
100226f8:	cdq    
100226f9:	and    edx,0x1f
100226fc:	add    eax,edx
100226fe:	mov    edx,ecx
10022700:	sar    eax,0x5
10022703:	and    edx,0x8000001f
10022709:	jns    0x10022710
1002270b:	dec    edx
1002270c:	or     edx,0xffffffe0
1002270f:	inc    edx
10022710:	and    DWORD PTR [ebp-0xc],0x0
10022714:	and    DWORD PTR [ebp+0x8],0x0
10022718:	or     edi,0xffffffff
1002271b:	mov    ecx,edx
1002271d:	shl    edi,cl
1002271f:	mov    DWORD PTR [ebp-0x4],0x20
10022726:	sub    DWORD PTR [ebp-0x4],edx
10022729:	not    edi
1002272b:	mov    ebx,DWORD PTR [ebp+0x8]
1002272e:	lea    ebx,[ebp+ebx*4-0x20]
10022732:	mov    esi,DWORD PTR [ebx]
10022734:	mov    ecx,esi
10022736:	and    ecx,edi
10022738:	mov    DWORD PTR [ebp-0x10],ecx
1002273b:	mov    ecx,edx
1002273d:	shr    esi,cl
1002273f:	mov    ecx,DWORD PTR [ebp-0x4]
10022742:	or     esi,DWORD PTR [ebp-0xc]
10022745:	mov    DWORD PTR [ebx],esi
10022747:	mov    esi,DWORD PTR [ebp-0x10]
1002274a:	shl    esi,cl
1002274c:	inc    DWORD PTR [ebp+0x8]
1002274f:	cmp    DWORD PTR [ebp+0x8],0x3
10022753:	mov    DWORD PTR [ebp-0xc],esi
10022756:	jl     0x1002272b
10022758:	mov    esi,eax
1002275a:	push   0x2
1002275c:	shl    esi,0x2
1002275f:	lea    ecx,[ebp-0x18]
10022762:	pop    edx
10022763:	sub    ecx,esi
10022765:	cmp    edx,eax
10022767:	jl     0x10022771
10022769:	mov    esi,DWORD PTR [ecx]
1002276b:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1002276f:	jmp    0x10022776
10022771:	and    DWORD PTR [ebp+edx*4-0x20],0x0
10022776:	dec    edx
10022777:	sub    ecx,0x4
1002277a:	test   edx,edx
1002277c:	jge    0x10022765
1002277e:	mov    eax,ds:0x100961b4
10022783:	mov    ecx,DWORD PTR ds:0x100961c8
10022789:	lea    ebx,[ecx+eax*1]
1002278c:	xor    eax,eax
1002278e:	inc    eax
1002278f:	jmp    0x1002282f
10022794:	mov    eax,ds:0x100961c8
10022799:	and    DWORD PTR [ebp-0x20],0x7fffffff
100227a0:	add    ebx,eax
100227a2:	mov    eax,ecx
100227a4:	cdq    
100227a5:	and    edx,0x1f
100227a8:	add    eax,edx
100227aa:	mov    edx,ecx
100227ac:	sar    eax,0x5
100227af:	and    edx,0x8000001f
100227b5:	jns    0x100227bc
100227b7:	dec    edx
100227b8:	or     edx,0xffffffe0
100227bb:	inc    edx
100227bc:	and    DWORD PTR [ebp-0xc],0x0
100227c0:	and    DWORD PTR [ebp+0x8],0x0
100227c4:	or     esi,0xffffffff
100227c7:	mov    ecx,edx
100227c9:	shl    esi,cl
100227cb:	mov    DWORD PTR [ebp-0x4],0x20
100227d2:	sub    DWORD PTR [ebp-0x4],edx
100227d5:	not    esi
100227d7:	mov    ecx,DWORD PTR [ebp+0x8]
100227da:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
100227de:	mov    ecx,edi
100227e0:	and    ecx,esi
100227e2:	mov    DWORD PTR [ebp-0x10],ecx
100227e5:	mov    ecx,edx
100227e7:	shr    edi,cl
100227e9:	mov    ecx,DWORD PTR [ebp+0x8]
100227ec:	or     edi,DWORD PTR [ebp-0xc]
100227ef:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
100227f3:	mov    edi,DWORD PTR [ebp-0x10]
100227f6:	mov    ecx,DWORD PTR [ebp-0x4]
100227f9:	shl    edi,cl
100227fb:	inc    DWORD PTR [ebp+0x8]
100227fe:	cmp    DWORD PTR [ebp+0x8],0x3
10022802:	mov    DWORD PTR [ebp-0xc],edi
10022805:	jl     0x100227d7
10022807:	mov    esi,eax
10022809:	push   0x2
1002280b:	shl    esi,0x2
1002280e:	lea    ecx,[ebp-0x18]
10022811:	pop    edx
10022812:	sub    ecx,esi
10022814:	cmp    edx,eax
10022816:	jl     0x10022820
10022818:	mov    esi,DWORD PTR [ecx]
1002281a:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1002281e:	jmp    0x10022825
10022820:	and    DWORD PTR [ebp+edx*4-0x20],0x0
10022825:	dec    edx
10022826:	sub    ecx,0x4
10022829:	test   edx,edx
1002282b:	jge    0x10022814
1002282d:	xor    eax,eax
1002282f:	pop    esi
10022830:	push   0x1f
10022832:	pop    ecx
10022833:	sub    ecx,DWORD PTR ds:0x100961c0
10022839:	shl    ebx,cl
1002283b:	mov    ecx,DWORD PTR [ebp-0x14]
1002283e:	neg    ecx
10022840:	sbb    ecx,ecx
10022842:	and    ecx,0x80000000
10022848:	or     ebx,ecx
1002284a:	mov    ecx,DWORD PTR ds:0x100961c4
10022850:	or     ebx,DWORD PTR [ebp-0x20]
10022853:	cmp    ecx,0x40
10022856:	jne    0x10022865
10022858:	mov    ecx,DWORD PTR [ebp+0xc]
1002285b:	mov    edx,DWORD PTR [ebp-0x1c]
1002285e:	mov    DWORD PTR [ecx+0x4],ebx
10022861:	mov    DWORD PTR [ecx],edx
10022863:	jmp    0x1002286f
10022865:	cmp    ecx,0x20
10022868:	jne    0x1002286f
1002286a:	mov    ecx,DWORD PTR [ebp+0xc]
1002286d:	mov    DWORD PTR [ecx],ebx
1002286f:	pop    edi
10022870:	pop    ebx
10022871:	leave  
10022872:	ret    
10022873:	push   ebp
10022874:	mov    ebp,esp
10022876:	sub    esp,0x10
10022879:	push   esi
1002287a:	push   DWORD PTR [ebp+0xc]
1002287d:	lea    ecx,[ebp-0x10]
10022880:	call   0x100165fa
10022885:	mov    esi,DWORD PTR [ebp+0x8]
10022888:	movsx  eax,BYTE PTR [esi]
1002288b:	push   eax
1002288c:	call   0x100178c2
10022891:	cmp    eax,0x65
10022894:	jmp    0x100228a2
10022896:	inc    esi
10022897:	movzx  eax,BYTE PTR [esi]
1002289a:	push   eax
1002289b:	call   0x1001755d
100228a0:	test   eax,eax
100228a2:	pop    ecx
100228a3:	jne    0x10022896
100228a5:	movsx  eax,BYTE PTR [esi]
100228a8:	push   eax
100228a9:	call   0x100178c2
100228ae:	cmp    eax,0x78
100228b1:	pop    ecx
100228b2:	jne    0x100228b6
100228b4:	inc    esi
100228b5:	inc    esi
100228b6:	mov    ecx,DWORD PTR [ebp-0x10]
100228b9:	mov    ecx,DWORD PTR [ecx+0xbc]
100228bf:	mov    ecx,DWORD PTR [ecx]
100228c1:	mov    al,BYTE PTR [esi]
100228c3:	mov    cl,BYTE PTR [ecx]
100228c5:	mov    BYTE PTR [esi],cl
100228c7:	inc    esi
100228c8:	mov    cl,BYTE PTR [esi]
100228ca:	mov    BYTE PTR [esi],al
100228cc:	mov    al,cl
100228ce:	mov    cl,BYTE PTR [esi]
100228d0:	inc    esi
100228d1:	test   cl,cl
100228d3:	jne    0x100228c8
100228d5:	cmp    BYTE PTR [ebp-0x4],cl
100228d8:	pop    esi
100228d9:	je     0x100228e2
100228db:	mov    eax,DWORD PTR [ebp-0x8]
100228de:	and    DWORD PTR [eax+0x70],0xfffffffd
100228e2:	leave  
100228e3:	ret    
100228e4:	push   ebp
100228e5:	mov    ebp,esp
100228e7:	sub    esp,0x10
100228ea:	push   esi
100228eb:	push   DWORD PTR [ebp+0xc]
100228ee:	lea    ecx,[ebp-0x10]
100228f1:	call   0x100165fa
100228f6:	mov    eax,DWORD PTR [ebp+0x8]
100228f9:	mov    cl,BYTE PTR [eax]
100228fb:	test   cl,cl
100228fd:	mov    esi,DWORD PTR [ebp-0x10]
10022900:	je     0x10022917
10022902:	mov    edx,DWORD PTR [esi+0xbc]
10022908:	mov    edx,DWORD PTR [edx]
1002290a:	mov    dl,BYTE PTR [edx]
1002290c:	cmp    cl,dl
1002290e:	je     0x10022917
10022910:	inc    eax
10022911:	mov    cl,BYTE PTR [eax]
10022913:	test   cl,cl
10022915:	jne    0x1002290c
10022917:	mov    cl,BYTE PTR [eax]
10022919:	inc    eax
1002291a:	test   cl,cl
1002291c:	je     0x10022954
1002291e:	jmp    0x1002292b
10022920:	cmp    cl,0x65
10022923:	je     0x10022931
10022925:	cmp    cl,0x45
10022928:	je     0x10022931
1002292a:	inc    eax
1002292b:	mov    cl,BYTE PTR [eax]
1002292d:	test   cl,cl
1002292f:	jne    0x10022920
10022931:	mov    edx,eax
10022933:	dec    eax
10022934:	cmp    BYTE PTR [eax],0x30
10022937:	je     0x10022933
10022939:	mov    ecx,DWORD PTR [esi+0xbc]
1002293f:	mov    ecx,DWORD PTR [ecx]
10022941:	push   ebx
10022942:	mov    bl,BYTE PTR [eax]
10022944:	cmp    bl,BYTE PTR [ecx]
10022946:	pop    ebx
10022947:	jne    0x1002294a
10022949:	dec    eax
1002294a:	mov    cl,BYTE PTR [edx]
1002294c:	inc    eax
1002294d:	inc    edx
1002294e:	test   cl,cl
10022950:	mov    BYTE PTR [eax],cl
10022952:	jne    0x1002294a
10022954:	cmp    BYTE PTR [ebp-0x4],0x0
10022958:	pop    esi
10022959:	je     0x10022962
1002295b:	mov    eax,DWORD PTR [ebp-0x8]
1002295e:	and    DWORD PTR [eax+0x70],0xfffffffd
10022962:	leave  
10022963:	ret    
10022964:	fldz   
10022966:	mov    eax,DWORD PTR [esp+0x4]
1002296a:	fcomp  QWORD PTR [eax]
1002296c:	fnstsw ax
1002296e:	test   ah,0x41
10022971:	jp     0x10022977
10022973:	xor    eax,eax
10022975:	inc    eax
10022976:	ret    
10022977:	xor    eax,eax
10022979:	ret    
1002297a:	push   ebp
1002297b:	mov    ebp,esp
1002297d:	push   ecx
1002297e:	push   ecx
1002297f:	cmp    DWORD PTR [ebp+0x8],0x0
10022983:	push   DWORD PTR [ebp+0x14]
10022986:	push   DWORD PTR [ebp+0x10]
10022989:	je     0x100229a4
1002298b:	lea    eax,[ebp-0x8]
1002298e:	push   eax
1002298f:	call   0x100239a5
10022994:	mov    ecx,DWORD PTR [ebp-0x8]
10022997:	mov    eax,DWORD PTR [ebp+0xc]
1002299a:	mov    DWORD PTR [eax],ecx
1002299c:	mov    ecx,DWORD PTR [ebp-0x4]
1002299f:	mov    DWORD PTR [eax+0x4],ecx
100229a2:	jmp    0x100229b5
100229a4:	lea    eax,[ebp+0x8]
100229a7:	push   eax
100229a8:	call   0x10023a4b
100229ad:	mov    eax,DWORD PTR [ebp+0xc]
100229b0:	mov    ecx,DWORD PTR [ebp+0x8]
100229b3:	mov    DWORD PTR [eax],ecx
100229b5:	add    esp,0xc
100229b8:	leave  
100229b9:	ret    
100229ba:	push   0x0
100229bc:	push   DWORD PTR [esp+0x10]
100229c0:	push   DWORD PTR [esp+0x10]
100229c4:	push   DWORD PTR [esp+0x10]
100229c8:	call   0x1002297a
100229cd:	add    esp,0x10
100229d0:	ret    
100229d1:	test   edi,edi
100229d3:	push   esi
100229d4:	mov    esi,eax
100229d6:	je     0x100229ec
100229d8:	push   esi
100229d9:	call   0x100163c0
100229de:	inc    eax
100229df:	push   eax
100229e0:	push   esi
100229e1:	add    esi,edi
100229e3:	push   esi
100229e4:	call   0x1001a370
100229e9:	add    esp,0x10
100229ec:	pop    esi
100229ed:	ret    
100229ee:	push   0x0
100229f0:	push   DWORD PTR [esp+0x8]
100229f4:	call   0x10022873
100229f9:	pop    ecx
100229fa:	pop    ecx
100229fb:	ret    
100229fc:	push   0x0
100229fe:	push   DWORD PTR [esp+0x8]
10022a02:	call   0x100228e4
10022a07:	pop    ecx
10022a08:	pop    ecx
10022a09:	ret    
10022a0a:	push   ebp
10022a0b:	mov    ebp,esp
10022a0d:	sub    esp,0x10
10022a10:	push   ebx
10022a11:	push   esi
10022a12:	push   edi
10022a13:	push   DWORD PTR [ebp+0x1c]
10022a16:	lea    ecx,[ebp-0x10]
10022a19:	mov    ebx,eax
10022a1b:	call   0x100165fa
10022a20:	xor    esi,esi
10022a22:	cmp    ebx,esi
10022a24:	jne    0x10022a51
10022a26:	call   0x1001a18e
10022a2b:	push   0x16
10022a2d:	pop    edi
10022a2e:	push   esi
10022a2f:	push   esi
10022a30:	push   esi
10022a31:	push   esi
10022a32:	push   esi
10022a33:	mov    DWORD PTR [eax],edi
10022a35:	call   0x1001616f
10022a3a:	add    esp,0x14
10022a3d:	cmp    BYTE PTR [ebp-0x4],0x0
10022a41:	je     0x10022a4a
10022a43:	mov    eax,DWORD PTR [ebp-0x8]
10022a46:	and    DWORD PTR [eax+0x70],0xfffffffd
10022a4a:	mov    eax,edi
10022a4c:	jmp    0x10022b72
10022a51:	cmp    DWORD PTR [ebp+0x8],esi
10022a54:	jbe    0x10022a26
10022a56:	cmp    DWORD PTR [ebp+0xc],esi
10022a59:	jle    0x10022a60
10022a5b:	mov    eax,DWORD PTR [ebp+0xc]
10022a5e:	jmp    0x10022a62
10022a60:	xor    eax,eax
10022a62:	add    eax,0x9
10022a65:	cmp    DWORD PTR [ebp+0x8],eax
10022a68:	ja     0x10022a73
10022a6a:	call   0x1001a18e
10022a6f:	push   0x22
10022a71:	jmp    0x10022a2d
10022a73:	cmp    BYTE PTR [ebp+0x18],0x0
10022a77:	je     0x10022a97
10022a79:	mov    edx,DWORD PTR [ebp+0x14]
10022a7c:	xor    eax,eax
10022a7e:	cmp    DWORD PTR [ebp+0xc],esi
10022a81:	setg   al
10022a84:	xor    ecx,ecx
10022a86:	cmp    DWORD PTR [edx],0x2d
10022a89:	sete   cl
10022a8c:	mov    edi,eax
10022a8e:	add    ecx,ebx
10022a90:	mov    eax,ecx
10022a92:	call   0x100229d1
10022a97:	mov    edi,DWORD PTR [ebp+0x14]
10022a9a:	cmp    DWORD PTR [edi],0x2d
10022a9d:	mov    esi,ebx
10022a9f:	jne    0x10022aa7
10022aa1:	mov    BYTE PTR [ebx],0x2d
10022aa4:	lea    esi,[ebx+0x1]
10022aa7:	cmp    DWORD PTR [ebp+0xc],0x0
10022aab:	jle    0x10022ac5
10022aad:	lea    eax,[esi+0x1]
10022ab0:	mov    cl,BYTE PTR [eax]
10022ab2:	mov    BYTE PTR [esi],cl
10022ab4:	mov    esi,eax
10022ab6:	mov    eax,DWORD PTR [ebp-0x10]
10022ab9:	mov    eax,DWORD PTR [eax+0xbc]
10022abf:	mov    eax,DWORD PTR [eax]
10022ac1:	mov    al,BYTE PTR [eax]
10022ac3:	mov    BYTE PTR [esi],al
10022ac5:	xor    eax,eax
10022ac7:	cmp    BYTE PTR [ebp+0x18],al
10022aca:	sete   al
10022acd:	add    eax,DWORD PTR [ebp+0xc]
10022ad0:	add    esi,eax
10022ad2:	cmp    DWORD PTR [ebp+0x8],0xffffffff
10022ad6:	jne    0x10022add
10022ad8:	or     ebx,0xffffffff
10022adb:	jmp    0x10022ae2
10022add:	sub    ebx,esi
10022adf:	add    ebx,DWORD PTR [ebp+0x8]
10022ae2:	push   0x1007eee8
10022ae7:	push   ebx
10022ae8:	push   esi
10022ae9:	call   0x1001a2d8
10022aee:	add    esp,0xc
10022af1:	xor    ebx,ebx
10022af3:	test   eax,eax
10022af5:	je     0x10022b04
10022af7:	push   ebx
10022af8:	push   ebx
10022af9:	push   ebx
10022afa:	push   ebx
10022afb:	push   ebx
10022afc:	call   0x10016073
10022b01:	add    esp,0x14
10022b04:	cmp    DWORD PTR [ebp+0x10],ebx
10022b07:	lea    ecx,[esi+0x2]
10022b0a:	je     0x10022b0f
10022b0c:	mov    BYTE PTR [esi],0x45
10022b0f:	mov    eax,DWORD PTR [edi+0xc]
10022b12:	inc    esi
10022b13:	cmp    BYTE PTR [eax],0x30
10022b16:	je     0x10022b46
10022b18:	mov    eax,DWORD PTR [edi+0x4]
10022b1b:	dec    eax
10022b1c:	jns    0x10022b23
10022b1e:	neg    eax
10022b20:	mov    BYTE PTR [esi],0x2d
10022b23:	inc    esi
10022b24:	cmp    eax,0x64
10022b27:	jl     0x10022b33
10022b29:	cdq    
10022b2a:	push   0x64
10022b2c:	pop    edi
10022b2d:	idiv   edi
10022b2f:	add    BYTE PTR [esi],al
10022b31:	mov    eax,edx
10022b33:	inc    esi
10022b34:	cmp    eax,0xa
10022b37:	jl     0x10022b43
10022b39:	cdq    
10022b3a:	push   0xa
10022b3c:	pop    edi
10022b3d:	idiv   edi
10022b3f:	add    BYTE PTR [esi],al
10022b41:	mov    eax,edx
10022b43:	add    BYTE PTR [esi+0x1],al
10022b46:	test   BYTE PTR ds:0x10097904,0x1
10022b4d:	je     0x10022b63
10022b4f:	cmp    BYTE PTR [ecx],0x30
10022b52:	jne    0x10022b63
10022b54:	push   0x3
10022b56:	lea    eax,[ecx+0x1]
10022b59:	push   eax
10022b5a:	push   ecx
10022b5b:	call   0x1001a370
10022b60:	add    esp,0xc
10022b63:	cmp    BYTE PTR [ebp-0x4],0x0
10022b67:	je     0x10022b70
10022b69:	mov    eax,DWORD PTR [ebp-0x8]
10022b6c:	and    DWORD PTR [eax+0x70],0xfffffffd
10022b70:	xor    eax,eax
10022b72:	pop    edi
10022b73:	pop    esi
10022b74:	pop    ebx
10022b75:	leave  
10022b76:	ret    
10022b77:	push   ebp
10022b78:	mov    ebp,esp
10022b7a:	sub    esp,0x2c
10022b7d:	mov    eax,ds:0x100951fc
10022b82:	xor    eax,ebp
10022b84:	mov    DWORD PTR [ebp-0x4],eax
10022b87:	mov    eax,DWORD PTR [ebp+0x8]
10022b8a:	push   ebx
10022b8b:	push   esi
10022b8c:	push   edi
10022b8d:	mov    edi,DWORD PTR [ebp+0xc]
10022b90:	push   0x16
10022b92:	pop    esi
10022b93:	push   esi
10022b94:	lea    ecx,[ebp-0x1c]
10022b97:	push   ecx
10022b98:	lea    ecx,[ebp-0x2c]
10022b9b:	push   ecx
10022b9c:	push   DWORD PTR [eax+0x4]
10022b9f:	push   DWORD PTR [eax]
10022ba1:	call   0x10023c69
10022ba6:	xor    ebx,ebx
10022ba8:	add    esp,0x14
10022bab:	cmp    edi,ebx
10022bad:	jne    0x10022bc7
10022baf:	call   0x1001a18e
10022bb4:	push   ebx
10022bb5:	push   ebx
10022bb6:	push   ebx
10022bb7:	push   ebx
10022bb8:	push   ebx
10022bb9:	mov    DWORD PTR [eax],esi
10022bbb:	call   0x1001616f
10022bc0:	add    esp,0x14
10022bc3:	mov    eax,esi
10022bc5:	jmp    0x10022c36
10022bc7:	mov    eax,DWORD PTR [ebp+0x10]
10022bca:	cmp    eax,ebx
10022bcc:	jbe    0x10022baf
10022bce:	cmp    eax,0xffffffff
10022bd1:	mov    esi,DWORD PTR [ebp+0x14]
10022bd4:	jne    0x10022bdb
10022bd6:	or     eax,0xffffffff
10022bd9:	jmp    0x10022bef
10022bdb:	xor    ecx,ecx
10022bdd:	cmp    DWORD PTR [ebp-0x2c],0x2d
10022be1:	sete   cl
10022be4:	sub    eax,ecx
10022be6:	xor    ecx,ecx
10022be8:	cmp    esi,ebx
10022bea:	setg   cl
10022bed:	sub    eax,ecx
10022bef:	lea    ecx,[ebp-0x2c]
10022bf2:	push   ecx
10022bf3:	lea    ecx,[esi+0x1]
10022bf6:	push   ecx
10022bf7:	push   eax
10022bf8:	xor    eax,eax
10022bfa:	cmp    DWORD PTR [ebp-0x2c],0x2d
10022bfe:	sete   al
10022c01:	xor    ecx,ecx
10022c03:	cmp    esi,ebx
10022c05:	setg   cl
10022c08:	add    eax,edi
10022c0a:	add    ecx,eax
10022c0c:	push   ecx
10022c0d:	call   0x10023af1
10022c12:	add    esp,0x10
10022c15:	cmp    eax,ebx
10022c17:	je     0x10022c1d
10022c19:	mov    BYTE PTR [edi],bl
10022c1b:	jmp    0x10022c36
10022c1d:	push   DWORD PTR [ebp+0x1c]
10022c20:	lea    eax,[ebp-0x2c]
10022c23:	push   ebx
10022c24:	push   eax
10022c25:	push   DWORD PTR [ebp+0x18]
10022c28:	mov    eax,edi
10022c2a:	push   esi
10022c2b:	push   DWORD PTR [ebp+0x10]
10022c2e:	call   0x10022a0a
10022c33:	add    esp,0x18
10022c36:	mov    ecx,DWORD PTR [ebp-0x4]
10022c39:	pop    edi
10022c3a:	pop    esi
10022c3b:	xor    ecx,ebp
10022c3d:	pop    ebx
10022c3e:	call   0x10015b2b
10022c43:	leave  
10022c44:	ret    
10022c45:	push   ebp
10022c46:	mov    ebp,esp
10022c48:	push   0x0
10022c4a:	push   DWORD PTR [ebp+0x18]
10022c4d:	push   DWORD PTR [ebp+0x14]
10022c50:	push   DWORD PTR [ebp+0x10]
10022c53:	push   DWORD PTR [ebp+0xc]
10022c56:	push   DWORD PTR [ebp+0x8]
10022c59:	call   0x10022b77
10022c5e:	add    esp,0x18
10022c61:	pop    ebp
10022c62:	ret    
10022c63:	push   ebp
10022c64:	mov    ebp,esp
10022c66:	sub    esp,0x24
10022c69:	push   esi
10022c6a:	push   edi
10022c6b:	push   DWORD PTR [ebp+0x1c]
10022c6e:	lea    ecx,[ebp-0x24]
10022c71:	mov    DWORD PTR [ebp-0x14],0x3ff
10022c78:	xor    edi,edi
10022c7a:	mov    DWORD PTR [ebp-0x4],0x30
10022c81:	call   0x100165fa
10022c86:	cmp    DWORD PTR [ebp+0x14],edi
10022c89:	jge    0x10022c8e
10022c8b:	mov    DWORD PTR [ebp+0x14],edi
10022c8e:	mov    esi,DWORD PTR [ebp+0xc]
10022c91:	cmp    esi,edi
10022c93:	jne    0x10022cc0
10022c95:	call   0x1001a18e
10022c9a:	push   0x16
10022c9c:	pop    esi
10022c9d:	push   edi
10022c9e:	push   edi
10022c9f:	push   edi
10022ca0:	push   edi
10022ca1:	push   edi
10022ca2:	mov    DWORD PTR [eax],esi
10022ca4:	call   0x1001616f
10022ca9:	add    esp,0x14
10022cac:	cmp    BYTE PTR [ebp-0x18],0x0
10022cb0:	je     0x10022cb9
10022cb2:	mov    eax,DWORD PTR [ebp-0x1c]
10022cb5:	and    DWORD PTR [eax+0x70],0xfffffffd
10022cb9:	mov    eax,esi
10022cbb:	jmp    0x10022fd0
10022cc0:	cmp    DWORD PTR [ebp+0x10],edi
10022cc3:	jbe    0x10022c95
10022cc5:	mov    eax,DWORD PTR [ebp+0x14]
10022cc8:	add    eax,0xb
10022ccb:	cmp    DWORD PTR [ebp+0x10],eax
10022cce:	mov    BYTE PTR [esi],0x0
10022cd1:	ja     0x10022cdc
10022cd3:	call   0x1001a18e
10022cd8:	push   0x22
10022cda:	jmp    0x10022c9c
10022cdc:	mov    edi,DWORD PTR [ebp+0x8]
10022cdf:	mov    eax,DWORD PTR [edi]
10022ce1:	mov    DWORD PTR [ebp-0xc],eax
10022ce4:	mov    eax,DWORD PTR [edi+0x4]
10022ce7:	mov    ecx,eax
10022ce9:	shr    ecx,0x14
10022cec:	mov    edx,0x7ff
10022cf1:	push   ebx
10022cf2:	and    ecx,edx
10022cf4:	xor    ebx,ebx
10022cf6:	cmp    ecx,edx
10022cf8:	jne    0x10022d8e
10022cfe:	test   ebx,ebx
10022d00:	jne    0x10022d8e
10022d06:	mov    eax,DWORD PTR [ebp+0x10]
10022d09:	cmp    eax,0xffffffff
10022d0c:	jne    0x10022d12
10022d0e:	or     eax,eax
10022d10:	jmp    0x10022d15
10022d12:	add    eax,0xfffffffe
10022d15:	push   0x0
10022d17:	push   DWORD PTR [ebp+0x14]
10022d1a:	lea    ebx,[esi+0x2]
10022d1d:	push   eax
10022d1e:	push   ebx
10022d1f:	push   edi
10022d20:	call   0x10022c45
10022d25:	add    esp,0x14
10022d28:	test   eax,eax
10022d2a:	je     0x10022d45
10022d2c:	cmp    BYTE PTR [ebp-0x18],0x0
10022d30:	mov    BYTE PTR [esi],0x0
10022d33:	je     0x10022fcf
10022d39:	mov    ecx,DWORD PTR [ebp-0x1c]
10022d3c:	and    DWORD PTR [ecx+0x70],0xfffffffd
10022d40:	jmp    0x10022fcf
10022d45:	cmp    BYTE PTR [ebx],0x2d
10022d48:	jne    0x10022d4e
10022d4a:	mov    BYTE PTR [esi],0x2d
10022d4d:	inc    esi
10022d4e:	mov    BYTE PTR [esi],0x30
10022d51:	inc    esi
10022d52:	cmp    DWORD PTR [ebp+0x18],0x0
10022d56:	push   0x65
10022d58:	sete   al
10022d5b:	dec    al
10022d5d:	and    al,0xe0
10022d5f:	add    al,0x78
10022d61:	mov    BYTE PTR [esi],al
10022d63:	inc    esi
10022d64:	push   esi
10022d65:	call   0x1001fe70
10022d6a:	test   eax,eax
10022d6c:	pop    ecx
10022d6d:	pop    ecx
10022d6e:	je     0x10022fc0
10022d74:	cmp    DWORD PTR [ebp+0x18],0x0
10022d78:	sete   cl
10022d7b:	dec    cl
10022d7d:	and    cl,0xe0
10022d80:	add    cl,0x70
10022d83:	mov    BYTE PTR [eax],cl
10022d85:	mov    BYTE PTR [eax+0x3],0x0
10022d89:	jmp    0x10022fc0
10022d8e:	and    eax,0x80000000
10022d93:	xor    ecx,ecx
10022d95:	or     ecx,eax
10022d97:	je     0x10022d9d
10022d99:	mov    BYTE PTR [esi],0x2d
10022d9c:	inc    esi
10022d9d:	mov    ebx,DWORD PTR [ebp+0x18]
10022da0:	mov    BYTE PTR [esi],0x30
10022da3:	inc    esi
10022da4:	test   ebx,ebx
10022da6:	sete   al
10022da9:	dec    al
10022dab:	and    al,0xe0
10022dad:	add    al,0x78
10022daf:	mov    BYTE PTR [esi],al
10022db1:	mov    ecx,DWORD PTR [edi+0x4]
10022db4:	inc    esi
10022db5:	neg    ebx
10022db7:	sbb    ebx,ebx
10022db9:	and    ebx,0xffffffe0
10022dbc:	and    ecx,0x7ff00000
10022dc2:	xor    eax,eax
10022dc4:	add    ebx,0x27
10022dc7:	xor    edx,edx
10022dc9:	or     eax,ecx
10022dcb:	jne    0x10022dee
10022dcd:	mov    BYTE PTR [esi],0x30
10022dd0:	mov    ecx,DWORD PTR [edi+0x4]
10022dd3:	mov    eax,DWORD PTR [edi]
10022dd5:	and    ecx,0xfffff
10022ddb:	inc    esi
10022ddc:	or     eax,ecx
10022dde:	jne    0x10022de5
10022de0:	mov    DWORD PTR [ebp-0x14],edx
10022de3:	jmp    0x10022df2
10022de5:	mov    DWORD PTR [ebp-0x14],0x3fe
10022dec:	jmp    0x10022df2
10022dee:	mov    BYTE PTR [esi],0x31
10022df1:	inc    esi
10022df2:	mov    eax,esi
10022df4:	inc    esi
10022df5:	cmp    DWORD PTR [ebp+0x14],edx
10022df8:	mov    DWORD PTR [ebp+0xc],eax
10022dfb:	jne    0x10022e01
10022dfd:	mov    BYTE PTR [eax],dl
10022dff:	jmp    0x10022e10
10022e01:	mov    ecx,DWORD PTR [ebp-0x24]
10022e04:	mov    ecx,DWORD PTR [ecx+0xbc]
10022e0a:	mov    ecx,DWORD PTR [ecx]
10022e0c:	mov    cl,BYTE PTR [ecx]
10022e0e:	mov    BYTE PTR [eax],cl
10022e10:	mov    ecx,DWORD PTR [edi+0x4]
10022e13:	mov    eax,DWORD PTR [edi]
10022e15:	and    ecx,0xfffff
10022e1b:	mov    DWORD PTR [ebp-0x8],ecx
10022e1e:	ja     0x10022e28
10022e20:	cmp    eax,edx
10022e22:	jbe    0x10022edd
10022e28:	mov    DWORD PTR [ebp-0xc],edx
10022e2b:	mov    DWORD PTR [ebp-0x8],0xf0000
10022e32:	cmp    DWORD PTR [ebp+0x14],0x0
10022e36:	jle    0x10022e85
10022e38:	mov    edx,DWORD PTR [edi+0x4]
10022e3b:	and    edx,DWORD PTR [ebp-0x8]
10022e3e:	mov    eax,DWORD PTR [edi]
10022e40:	movsx  ecx,WORD PTR [ebp-0x4]
10022e44:	and    eax,DWORD PTR [ebp-0xc]
10022e47:	and    edx,0xfffff
10022e4d:	call   0x10017a90
10022e52:	add    ax,0x30
10022e56:	movzx  eax,ax
10022e59:	cmp    ax,0x39
10022e5d:	jbe    0x10022e61
10022e5f:	add    eax,ebx
10022e61:	mov    ecx,DWORD PTR [ebp-0x8]
10022e64:	sub    DWORD PTR [ebp-0x4],0x4
10022e68:	mov    BYTE PTR [esi],al
10022e6a:	mov    eax,DWORD PTR [ebp-0xc]
10022e6d:	shrd   eax,ecx,0x4
10022e71:	shr    ecx,0x4
10022e74:	inc    esi
10022e75:	dec    DWORD PTR [ebp+0x14]
10022e78:	cmp    WORD PTR [ebp-0x4],0x0
10022e7d:	mov    DWORD PTR [ebp-0xc],eax
10022e80:	mov    DWORD PTR [ebp-0x8],ecx
10022e83:	jge    0x10022e32
10022e85:	cmp    WORD PTR [ebp-0x4],0x0
10022e8a:	jl     0x10022edd
10022e8c:	mov    edx,DWORD PTR [edi+0x4]
10022e8f:	and    edx,DWORD PTR [ebp-0x8]
10022e92:	mov    eax,DWORD PTR [edi]
10022e94:	movsx  ecx,WORD PTR [ebp-0x4]
10022e98:	and    eax,DWORD PTR [ebp-0xc]
10022e9b:	and    edx,0xfffff
10022ea1:	call   0x10017a90
10022ea6:	cmp    ax,0x8
10022eaa:	jbe    0x10022edd
10022eac:	lea    eax,[esi-0x1]
10022eaf:	mov    cl,BYTE PTR [eax]
10022eb1:	cmp    cl,0x66
10022eb4:	je     0x10022ebb
10022eb6:	cmp    cl,0x46
10022eb9:	jne    0x10022ec1
10022ebb:	mov    BYTE PTR [eax],0x30
10022ebe:	dec    eax
10022ebf:	jmp    0x10022eaf
10022ec1:	cmp    eax,DWORD PTR [ebp+0xc]
10022ec4:	je     0x10022eda
10022ec6:	mov    cl,BYTE PTR [eax]
10022ec8:	cmp    cl,0x39
10022ecb:	jne    0x10022ed4
10022ecd:	add    bl,0x3a
10022ed0:	mov    BYTE PTR [eax],bl
10022ed2:	jmp    0x10022edd
10022ed4:	inc    cl
10022ed6:	mov    BYTE PTR [eax],cl
10022ed8:	jmp    0x10022edd
10022eda:	inc    BYTE PTR [eax-0x1]
10022edd:	cmp    DWORD PTR [ebp+0x14],0x0
10022ee1:	jle    0x10022ef4
10022ee3:	push   DWORD PTR [ebp+0x14]
10022ee6:	push   0x30
10022ee8:	push   esi
10022ee9:	call   0x10016580
10022eee:	add    esp,0xc
10022ef1:	add    esi,DWORD PTR [ebp+0x14]
10022ef4:	mov    eax,DWORD PTR [ebp+0xc]
10022ef7:	cmp    BYTE PTR [eax],0x0
10022efa:	jne    0x10022efe
10022efc:	mov    esi,eax
10022efe:	cmp    DWORD PTR [ebp+0x18],0x0
10022f02:	mov    cl,0x34
10022f04:	sete   al
10022f07:	dec    al
10022f09:	and    al,0xe0
10022f0b:	add    al,0x70
10022f0d:	mov    BYTE PTR [esi],al
10022f0f:	mov    eax,DWORD PTR [edi]
10022f11:	mov    edx,DWORD PTR [edi+0x4]
10022f14:	inc    esi
10022f15:	call   0x10017a90
10022f1a:	xor    ebx,ebx
10022f1c:	and    eax,0x7ff
10022f21:	and    edx,ebx
10022f23:	sub    eax,DWORD PTR [ebp-0x14]
10022f26:	push   ebx
10022f27:	pop    ecx
10022f28:	sbb    edx,ecx
10022f2a:	js     0x10022f38
10022f2c:	jg     0x10022f32
10022f2e:	cmp    eax,ebx
10022f30:	jb     0x10022f38
10022f32:	mov    BYTE PTR [esi],0x2b
10022f35:	inc    esi
10022f36:	jmp    0x10022f42
10022f38:	mov    BYTE PTR [esi],0x2d
10022f3b:	inc    esi
10022f3c:	neg    eax
10022f3e:	adc    edx,ebx
10022f40:	neg    edx
10022f42:	cmp    edx,ebx
10022f44:	mov    edi,esi
10022f46:	mov    BYTE PTR [esi],0x30
10022f49:	jl     0x10022f6f
10022f4b:	mov    ecx,0x3e8
10022f50:	jg     0x10022f56
10022f52:	cmp    eax,ecx
10022f54:	jb     0x10022f6f
10022f56:	push   ebx
10022f57:	push   ecx
10022f58:	push   edx
10022f59:	push   eax
10022f5a:	call   0x10023d00
10022f5f:	add    al,0x30
10022f61:	mov    BYTE PTR [esi],al
10022f63:	inc    esi
10022f64:	cmp    esi,edi
10022f66:	mov    DWORD PTR [ebp-0x10],edx
10022f69:	mov    eax,ecx
10022f6b:	mov    edx,ebx
10022f6d:	jne    0x10022f7a
10022f6f:	test   edx,edx
10022f71:	jl     0x10022f91
10022f73:	jg     0x10022f7a
10022f75:	cmp    eax,0x64
10022f78:	jb     0x10022f91
10022f7a:	push   0x0
10022f7c:	push   0x64
10022f7e:	push   edx
10022f7f:	push   eax
10022f80:	call   0x10023d00
10022f85:	add    al,0x30
10022f87:	mov    BYTE PTR [esi],al
10022f89:	mov    DWORD PTR [ebp-0x10],edx
10022f8c:	inc    esi
10022f8d:	mov    eax,ecx
10022f8f:	mov    edx,ebx
10022f91:	cmp    esi,edi
10022f93:	jne    0x10022fa0
10022f95:	test   edx,edx
10022f97:	jl     0x10022fb8
10022f99:	jg     0x10022fa0
10022f9b:	cmp    eax,0xa
10022f9e:	jb     0x10022fb8
10022fa0:	push   0x0
10022fa2:	push   0xa
10022fa4:	push   edx
10022fa5:	push   eax
10022fa6:	call   0x10023d00
10022fab:	add    al,0x30
10022fad:	mov    BYTE PTR [esi],al
10022faf:	mov    DWORD PTR [ebp-0x10],edx
10022fb2:	inc    esi
10022fb3:	mov    eax,ecx
10022fb5:	mov    DWORD PTR [ebp-0x10],ebx
10022fb8:	add    al,0x30
10022fba:	mov    BYTE PTR [esi],al
10022fbc:	mov    BYTE PTR [esi+0x1],0x0
10022fc0:	cmp    BYTE PTR [ebp-0x18],0x0
10022fc4:	je     0x10022fcd
10022fc6:	mov    eax,DWORD PTR [ebp-0x1c]
10022fc9:	and    DWORD PTR [eax+0x70],0xfffffffd
10022fcd:	xor    eax,eax
10022fcf:	pop    ebx
10022fd0:	pop    edi
10022fd1:	pop    esi
10022fd2:	leave  
10022fd3:	ret    
10022fd4:	push   ebp
10022fd5:	mov    ebp,esp
10022fd7:	sub    esp,0x10
10022fda:	push   ebx
10022fdb:	push   esi
10022fdc:	push   edi
10022fdd:	push   DWORD PTR [ebp+0x14]
10022fe0:	mov    ebx,eax
10022fe2:	mov    esi,DWORD PTR [ebx+0x4]
10022fe5:	mov    edi,ecx
10022fe7:	lea    ecx,[ebp-0x10]
10022fea:	dec    esi
10022feb:	call   0x100165fa
10022ff0:	test   edi,edi
10022ff2:	jne    0x10023021
10022ff4:	call   0x1001a18e
10022ff9:	push   0x16
10022ffb:	pop    esi
10022ffc:	mov    DWORD PTR [eax],esi
10022ffe:	xor    eax,eax
10023000:	push   eax
10023001:	push   eax
10023002:	push   eax
10023003:	push   eax
10023004:	push   eax
10023005:	call   0x1001616f
1002300a:	add    esp,0x14
1002300d:	cmp    BYTE PTR [ebp-0x4],0x0
10023011:	je     0x1002301a
10023013:	mov    eax,DWORD PTR [ebp-0x8]
10023016:	and    DWORD PTR [eax+0x70],0xfffffffd
1002301a:	mov    eax,esi
1002301c:	jmp    0x100230c4
10023021:	cmp    DWORD PTR [ebp+0x8],0x0
10023025:	jbe    0x10022ff4
10023027:	cmp    BYTE PTR [ebp+0x10],0x0
1002302b:	je     0x10023045
1002302d:	cmp    esi,DWORD PTR [ebp+0xc]
10023030:	jne    0x10023045
10023032:	xor    eax,eax
10023034:	cmp    DWORD PTR [ebx],0x2d
10023037:	sete   al
1002303a:	add    eax,esi
1002303c:	add    eax,edi
1002303e:	mov    BYTE PTR [eax],0x30
10023041:	mov    BYTE PTR [eax+0x1],0x0
10023045:	cmp    DWORD PTR [ebx],0x2d
10023048:	mov    esi,edi
1002304a:	jne    0x10023052
1002304c:	mov    BYTE PTR [edi],0x2d
1002304f:	lea    esi,[edi+0x1]
10023052:	mov    eax,DWORD PTR [ebx+0x4]
10023055:	xor    edi,edi
10023057:	inc    edi
10023058:	test   eax,eax
1002305a:	jg     0x10023069
1002305c:	mov    eax,esi
1002305e:	call   0x100229d1
10023063:	mov    BYTE PTR [esi],0x30
10023066:	inc    esi
10023067:	jmp    0x1002306b
10023069:	add    esi,eax
1002306b:	cmp    DWORD PTR [ebp+0xc],0x0
1002306f:	jle    0x100230b5
10023071:	mov    eax,esi
10023073:	call   0x100229d1
10023078:	mov    eax,DWORD PTR [ebp-0x10]
1002307b:	mov    eax,DWORD PTR [eax+0xbc]
10023081:	mov    eax,DWORD PTR [eax]
10023083:	mov    al,BYTE PTR [eax]
10023085:	mov    BYTE PTR [esi],al
10023087:	mov    ebx,DWORD PTR [ebx+0x4]
1002308a:	inc    esi
1002308b:	test   ebx,ebx
1002308d:	jge    0x100230b5
1002308f:	neg    ebx
10023091:	cmp    BYTE PTR [ebp+0x10],0x0
10023095:	jne    0x1002309c
10023097:	cmp    DWORD PTR [ebp+0xc],ebx
1002309a:	jl     0x1002309f
1002309c:	mov    DWORD PTR [ebp+0xc],ebx
1002309f:	mov    edi,DWORD PTR [ebp+0xc]
100230a2:	mov    eax,esi
100230a4:	call   0x100229d1
100230a9:	push   edi
100230aa:	push   0x30
100230ac:	push   esi
100230ad:	call   0x10016580
100230b2:	add    esp,0xc
100230b5:	cmp    BYTE PTR [ebp-0x4],0x0
100230b9:	je     0x100230c2
100230bb:	mov    eax,DWORD PTR [ebp-0x8]
100230be:	and    DWORD PTR [eax+0x70],0xfffffffd
100230c2:	xor    eax,eax
100230c4:	pop    edi
100230c5:	pop    esi
100230c6:	pop    ebx
100230c7:	leave  
100230c8:	ret    
100230c9:	push   ebp
100230ca:	mov    ebp,esp
100230cc:	sub    esp,0x2c
100230cf:	mov    eax,ds:0x100951fc
100230d4:	xor    eax,ebp
100230d6:	mov    DWORD PTR [ebp-0x4],eax
100230d9:	mov    eax,DWORD PTR [ebp+0x8]
100230dc:	push   ebx
100230dd:	push   esi
100230de:	push   edi
100230df:	mov    edi,DWORD PTR [ebp+0xc]
100230e2:	push   0x16
100230e4:	pop    esi
100230e5:	push   esi
100230e6:	lea    ecx,[ebp-0x1c]
100230e9:	push   ecx
100230ea:	lea    ecx,[ebp-0x2c]
100230ed:	push   ecx
100230ee:	push   DWORD PTR [eax+0x4]
100230f1:	push   DWORD PTR [eax]
100230f3:	call   0x10023c69
100230f8:	xor    ebx,ebx
100230fa:	add    esp,0x14
100230fd:	cmp    edi,ebx
100230ff:	jne    0x10023119
10023101:	call   0x1001a18e
10023106:	push   ebx
10023107:	push   ebx
10023108:	push   ebx
10023109:	push   ebx
1002310a:	push   ebx
1002310b:	mov    DWORD PTR [eax],esi
1002310d:	call   0x1001616f
10023112:	add    esp,0x14
10023115:	mov    eax,esi
10023117:	jmp    0x10023173
10023119:	mov    eax,DWORD PTR [ebp+0x10]
1002311c:	cmp    eax,ebx
1002311e:	jbe    0x10023101
10023120:	cmp    eax,0xffffffff
10023123:	jne    0x10023129
10023125:	or     eax,eax
10023127:	jmp    0x10023134
10023129:	xor    ecx,ecx
1002312b:	cmp    DWORD PTR [ebp-0x2c],0x2d
1002312f:	sete   cl
10023132:	sub    eax,ecx
10023134:	mov    esi,DWORD PTR [ebp+0x14]
10023137:	lea    ecx,[ebp-0x2c]
1002313a:	push   ecx
1002313b:	mov    ecx,DWORD PTR [ebp-0x28]
1002313e:	add    ecx,esi
10023140:	push   ecx
10023141:	push   eax
10023142:	xor    eax,eax
10023144:	cmp    DWORD PTR [ebp-0x2c],0x2d
10023148:	sete   al
1002314b:	add    eax,edi
1002314d:	push   eax
1002314e:	call   0x10023af1
10023153:	add    esp,0x10
10023156:	cmp    eax,ebx
10023158:	je     0x1002315e
1002315a:	mov    BYTE PTR [edi],bl
1002315c:	jmp    0x10023173
1002315e:	push   DWORD PTR [ebp+0x18]
10023161:	lea    eax,[ebp-0x2c]
10023164:	push   ebx
10023165:	push   esi
10023166:	push   DWORD PTR [ebp+0x10]
10023169:	mov    ecx,edi
1002316b:	call   0x10022fd4
10023170:	add    esp,0x10
10023173:	mov    ecx,DWORD PTR [ebp-0x4]
10023176:	pop    edi
10023177:	pop    esi
10023178:	xor    ecx,ebp
1002317a:	pop    ebx
1002317b:	call   0x10015b2b
10023180:	leave  
10023181:	ret    
10023182:	push   ebp
10023183:	mov    ebp,esp
10023185:	sub    esp,0x30
10023188:	mov    eax,ds:0x100951fc
1002318d:	xor    eax,ebp
1002318f:	mov    DWORD PTR [ebp-0x4],eax
10023192:	mov    eax,DWORD PTR [ebp+0x8]
10023195:	push   ebx
10023196:	push   esi
10023197:	mov    esi,DWORD PTR [ebp+0xc]
1002319a:	push   edi
1002319b:	push   0x16
1002319d:	pop    edi
1002319e:	push   edi
1002319f:	lea    ecx,[ebp-0x1c]
100231a2:	push   ecx
100231a3:	lea    ecx,[ebp-0x30]
100231a6:	push   ecx
100231a7:	push   DWORD PTR [eax+0x4]
100231aa:	push   DWORD PTR [eax]
100231ac:	call   0x10023c69
100231b1:	xor    ebx,ebx
100231b3:	add    esp,0x14
100231b6:	cmp    esi,ebx
100231b8:	jne    0x100231d5
100231ba:	call   0x1001a18e
100231bf:	push   ebx
100231c0:	push   ebx
100231c1:	push   ebx
100231c2:	push   ebx
100231c3:	push   ebx
100231c4:	mov    DWORD PTR [eax],edi
100231c6:	call   0x1001616f
100231cb:	add    esp,0x14
100231ce:	mov    eax,edi
100231d0:	jmp    0x1002326b
100231d5:	mov    ecx,DWORD PTR [ebp+0x10]
100231d8:	cmp    ecx,ebx
100231da:	jbe    0x100231ba
100231dc:	mov    eax,DWORD PTR [ebp-0x2c]
100231df:	dec    eax
100231e0:	mov    DWORD PTR [ebp-0x20],eax
100231e3:	xor    eax,eax
100231e5:	cmp    DWORD PTR [ebp-0x30],0x2d
100231e9:	sete   al
100231ec:	cmp    ecx,0xffffffff
100231ef:	lea    edi,[eax+esi*1]
100231f2:	jne    0x100231f8
100231f4:	or     ecx,ecx
100231f6:	jmp    0x100231fa
100231f8:	sub    ecx,eax
100231fa:	lea    eax,[ebp-0x30]
100231fd:	push   eax
100231fe:	push   DWORD PTR [ebp+0x14]
10023201:	push   ecx
10023202:	push   edi
10023203:	call   0x10023af1
10023208:	add    esp,0x10
1002320b:	cmp    eax,ebx
1002320d:	je     0x10023213
1002320f:	mov    BYTE PTR [esi],bl
10023211:	jmp    0x1002326b
10023213:	mov    eax,DWORD PTR [ebp-0x2c]
10023216:	dec    eax
10023217:	cmp    DWORD PTR [ebp-0x20],eax
1002321a:	setl   cl
1002321d:	cmp    eax,0xfffffffc
10023220:	jl     0x1002324f
10023222:	cmp    eax,DWORD PTR [ebp+0x14]
10023225:	jge    0x1002324f
10023227:	cmp    cl,bl
10023229:	je     0x10023235
1002322b:	mov    al,BYTE PTR [edi]
1002322d:	inc    edi
1002322e:	test   al,al
10023230:	jne    0x1002322b
10023232:	mov    BYTE PTR [edi-0x2],bl
10023235:	push   DWORD PTR [ebp+0x1c]
10023238:	lea    eax,[ebp-0x30]
1002323b:	push   0x1
1002323d:	push   DWORD PTR [ebp+0x14]
10023240:	mov    ecx,esi
10023242:	push   DWORD PTR [ebp+0x10]
10023245:	call   0x10022fd4
1002324a:	add    esp,0x10
1002324d:	jmp    0x1002326b
1002324f:	push   DWORD PTR [ebp+0x1c]
10023252:	lea    eax,[ebp-0x30]
10023255:	push   0x1
10023257:	push   eax
10023258:	push   DWORD PTR [ebp+0x18]
1002325b:	mov    eax,esi
1002325d:	push   DWORD PTR [ebp+0x14]
10023260:	push   DWORD PTR [ebp+0x10]
10023263:	call   0x10022a0a
10023268:	add    esp,0x18
1002326b:	mov    ecx,DWORD PTR [ebp-0x4]
1002326e:	pop    edi
1002326f:	pop    esi
10023270:	xor    ecx,ebp
10023272:	pop    ebx
10023273:	call   0x10015b2b
10023278:	leave  
10023279:	ret    
1002327a:	push   ebp
1002327b:	mov    ebp,esp
1002327d:	mov    eax,DWORD PTR [ebp+0x14]
10023280:	cmp    eax,0x65
10023283:	je     0x100232e4
10023285:	cmp    eax,0x45
10023288:	je     0x100232e4
1002328a:	cmp    eax,0x66
1002328d:	jne    0x100232a8
1002328f:	push   DWORD PTR [ebp+0x20]
10023292:	push   DWORD PTR [ebp+0x18]
10023295:	push   DWORD PTR [ebp+0x10]
10023298:	push   DWORD PTR [ebp+0xc]
1002329b:	push   DWORD PTR [ebp+0x8]
1002329e:	call   0x100230c9
100232a3:	add    esp,0x14
100232a6:	pop    ebp
100232a7:	ret    
100232a8:	cmp    eax,0x61
100232ab:	je     0x100232cb
100232ad:	cmp    eax,0x41
100232b0:	je     0x100232cb
100232b2:	push   DWORD PTR [ebp+0x20]
100232b5:	push   DWORD PTR [ebp+0x1c]
100232b8:	push   DWORD PTR [ebp+0x18]
100232bb:	push   DWORD PTR [ebp+0x10]
100232be:	push   DWORD PTR [ebp+0xc]
100232c1:	push   DWORD PTR [ebp+0x8]
100232c4:	call   0x10023182
100232c9:	jmp    0x100232fb
100232cb:	push   DWORD PTR [ebp+0x20]
100232ce:	push   DWORD PTR [ebp+0x1c]
100232d1:	push   DWORD PTR [ebp+0x18]
100232d4:	push   DWORD PTR [ebp+0x10]
100232d7:	push   DWORD PTR [ebp+0xc]
100232da:	push   DWORD PTR [ebp+0x8]
100232dd:	call   0x10022c63
100232e2:	jmp    0x100232fb
100232e4:	push   DWORD PTR [ebp+0x20]
100232e7:	push   DWORD PTR [ebp+0x1c]
100232ea:	push   DWORD PTR [ebp+0x18]
100232ed:	push   DWORD PTR [ebp+0x10]
100232f0:	push   DWORD PTR [ebp+0xc]
100232f3:	push   DWORD PTR [ebp+0x8]
100232f6:	call   0x10022b77
100232fb:	add    esp,0x18
100232fe:	pop    ebp
100232ff:	ret    
10023300:	push   ebp
10023301:	mov    ebp,esp
10023303:	push   0x0
10023305:	push   DWORD PTR [ebp+0x1c]
10023308:	push   DWORD PTR [ebp+0x18]
1002330b:	push   DWORD PTR [ebp+0x14]
1002330e:	push   DWORD PTR [ebp+0x10]
10023311:	push   DWORD PTR [ebp+0xc]
10023314:	push   DWORD PTR [ebp+0x8]
10023317:	call   0x1002327a
1002331c:	add    esp,0x1c
1002331f:	pop    ebp
10023320:	ret    
10023321:	push   esi
10023322:	push   0x30000
10023327:	push   0x10000
1002332c:	xor    esi,esi
1002332e:	push   esi
1002332f:	call   0x10023ddf
10023334:	add    esp,0xc
10023337:	test   eax,eax
10023339:	je     0x10023348
1002333b:	push   esi
1002333c:	push   esi
1002333d:	push   esi
1002333e:	push   esi
1002333f:	push   esi
10023340:	call   0x10016073
10023345:	add    esp,0x14
10023348:	pop    esi
10023349:	ret    
1002334a:	push   ebp
1002334b:	mov    ebp,esp
1002334d:	sub    esp,0x18
10023350:	fld    QWORD PTR ds:0x1007eef8
10023356:	fstp   QWORD PTR [ebp-0x10]
10023359:	fld    QWORD PTR ds:0x1007eef0
1002335f:	fstp   QWORD PTR [ebp-0x18]
10023362:	fld    QWORD PTR [ebp-0x18]
10023365:	fdiv   QWORD PTR [ebp-0x10]
10023368:	fmul   QWORD PTR [ebp-0x10]
1002336b:	fsubr  QWORD PTR [ebp-0x18]
1002336e:	fstp   QWORD PTR [ebp-0x8]
10023371:	fld1   
10023373:	fcomp  QWORD PTR [ebp-0x8]
10023376:	fnstsw ax
10023378:	test   ah,0x5
1002337b:	jp     0x10023382
1002337d:	xor    eax,eax
1002337f:	inc    eax
10023380:	leave  
10023381:	ret    
10023382:	xor    eax,eax
10023384:	leave  
10023385:	ret    
10023386:	push   0x1007ef1c
1002338b:	call   DWORD PTR ds:0x10034100
10023391:	test   eax,eax
10023393:	je     0x100233aa
10023395:	push   0x1007ef00
1002339a:	push   eax
1002339b:	call   DWORD PTR ds:0x10034044
100233a1:	test   eax,eax
100233a3:	je     0x100233aa
100233a5:	push   0x0
100233a7:	call   eax
100233a9:	ret    
100233aa:	jmp    0x1002334a
100233af:	push   ebp
100233b0:	mov    ebp,esp
100233b2:	sub    esp,0x18
100233b5:	mov    eax,ds:0x100951fc
100233ba:	xor    eax,ebp
100233bc:	mov    DWORD PTR [ebp-0x4],eax
100233bf:	mov    eax,DWORD PTR [ebp+0x10]
100233c2:	push   ebx
100233c3:	push   esi
100233c4:	xor    esi,esi
100233c6:	cmp    DWORD PTR [ebp+0xc],esi
100233c9:	push   edi
100233ca:	mov    DWORD PTR [ebp-0x18],0x404e
100233d1:	mov    DWORD PTR [eax],esi
100233d3:	mov    DWORD PTR [eax+0x4],esi
100233d6:	mov    DWORD PTR [eax+0x8],esi
100233d9:	jbe    0x10023525
100233df:	mov    edx,DWORD PTR [eax]
100233e1:	mov    ebx,DWORD PTR [eax+0x4]
100233e4:	mov    esi,eax
100233e6:	lea    edi,[ebp-0x10]
100233e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100233ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100233eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100233ec:	mov    ecx,edx
100233ee:	shr    ecx,0x1f
100233f1:	lea    edi,[edx+edx*1]
100233f4:	lea    edx,[ebx+ebx*1]
100233f7:	or     edx,ecx
100233f9:	mov    ecx,DWORD PTR [eax+0x8]
100233fc:	mov    esi,ebx
100233fe:	shr    esi,0x1f
10023401:	add    ecx,ecx
10023403:	or     ecx,esi
10023405:	mov    DWORD PTR [ebp-0x14],edi
10023408:	mov    esi,edi
1002340a:	and    DWORD PTR [ebp-0x14],0x0
1002340e:	mov    ebx,edx
10023410:	shr    ebx,0x1f
10023413:	add    ecx,ecx
10023415:	shr    edi,0x1f
10023418:	or     ecx,ebx
1002341a:	mov    ebx,DWORD PTR [ebp-0x10]
1002341d:	add    esi,esi
1002341f:	add    edx,edx
10023421:	or     edx,edi
10023423:	lea    edi,[esi+ebx*1]
10023426:	cmp    edi,esi
10023428:	mov    DWORD PTR [eax],esi
1002342a:	mov    DWORD PTR [eax+0x4],edx
1002342d:	mov    DWORD PTR [eax+0x8],ecx
10023430:	jb     0x10023436
10023432:	cmp    edi,ebx
10023434:	jae    0x1002343d
10023436:	mov    DWORD PTR [ebp-0x14],0x1
1002343d:	xor    ebx,ebx
1002343f:	cmp    DWORD PTR [ebp-0x14],ebx
10023442:	mov    DWORD PTR [eax],edi
10023444:	je     0x10023460
10023446:	lea    esi,[edx+0x1]
10023449:	cmp    esi,edx
1002344b:	jb     0x10023452
1002344d:	cmp    esi,0x1
10023450:	jae    0x10023455
10023452:	xor    ebx,ebx
10023454:	inc    ebx
10023455:	test   ebx,ebx
10023457:	mov    DWORD PTR [eax+0x4],esi
1002345a:	je     0x10023460
1002345c:	inc    ecx
1002345d:	mov    DWORD PTR [eax+0x8],ecx
10023460:	mov    ecx,DWORD PTR [eax+0x4]
10023463:	mov    edx,DWORD PTR [ebp-0xc]
10023466:	lea    ebx,[ecx+edx*1]
10023469:	xor    esi,esi
1002346b:	cmp    ebx,ecx
1002346d:	jb     0x10023473
1002346f:	cmp    ebx,edx
10023471:	jae    0x10023476
10023473:	xor    esi,esi
10023475:	inc    esi
10023476:	test   esi,esi
10023478:	mov    DWORD PTR [eax+0x4],ebx
1002347b:	je     0x10023480
1002347d:	inc    DWORD PTR [eax+0x8]
10023480:	mov    ecx,DWORD PTR [ebp-0x8]
10023483:	add    DWORD PTR [eax+0x8],ecx
10023486:	and    DWORD PTR [ebp-0x14],0x0
1002348a:	lea    ecx,[edi+edi*1]
1002348d:	mov    edx,edi
1002348f:	shr    edx,0x1f
10023492:	lea    edi,[ebx+ebx*1]
10023495:	or     edi,edx
10023497:	mov    edx,DWORD PTR [eax+0x8]
1002349a:	mov    esi,ebx
1002349c:	shr    esi,0x1f
1002349f:	lea    ebx,[edx+edx*1]
100234a2:	mov    edx,DWORD PTR [ebp+0x8]
100234a5:	or     ebx,esi
100234a7:	mov    DWORD PTR [eax],ecx
100234a9:	mov    DWORD PTR [eax+0x4],edi
100234ac:	mov    DWORD PTR [eax+0x8],ebx
100234af:	movsx  edx,BYTE PTR [edx]
100234b2:	lea    esi,[ecx+edx*1]
100234b5:	cmp    esi,ecx
100234b7:	mov    DWORD PTR [ebp-0x10],edx
100234ba:	jb     0x100234c0
100234bc:	cmp    esi,edx
100234be:	jae    0x100234c7
100234c0:	mov    DWORD PTR [ebp-0x14],0x1
100234c7:	cmp    DWORD PTR [ebp-0x14],0x0
100234cb:	mov    DWORD PTR [eax],esi
100234cd:	je     0x100234eb
100234cf:	lea    ecx,[edi+0x1]
100234d2:	xor    edx,edx
100234d4:	cmp    ecx,edi
100234d6:	jb     0x100234dd
100234d8:	cmp    ecx,0x1
100234db:	jae    0x100234e0
100234dd:	xor    edx,edx
100234df:	inc    edx
100234e0:	test   edx,edx
100234e2:	mov    DWORD PTR [eax+0x4],ecx
100234e5:	je     0x100234eb
100234e7:	inc    ebx
100234e8:	mov    DWORD PTR [eax+0x8],ebx
100234eb:	dec    DWORD PTR [ebp+0xc]
100234ee:	inc    DWORD PTR [ebp+0x8]
100234f1:	cmp    DWORD PTR [ebp+0xc],0x0
100234f5:	ja     0x100233df
100234fb:	xor    esi,esi
100234fd:	jmp    0x10023525
100234ff:	mov    ecx,DWORD PTR [eax+0x4]
10023502:	mov    edx,ecx
10023504:	shr    edx,0x10
10023507:	mov    DWORD PTR [eax+0x8],edx
1002350a:	mov    edx,DWORD PTR [eax]
1002350c:	mov    edi,edx
1002350e:	shl    ecx,0x10
10023511:	shr    edi,0x10
10023514:	or     ecx,edi
10023516:	shl    edx,0x10
10023519:	add    DWORD PTR [ebp-0x18],0xfff0
10023520:	mov    DWORD PTR [eax+0x4],ecx
10023523:	mov    DWORD PTR [eax],edx
10023525:	cmp    DWORD PTR [eax+0x8],esi
10023528:	je     0x100234ff
1002352a:	mov    ebx,0x8000
1002352f:	test   DWORD PTR [eax+0x8],ebx
10023532:	jne    0x10023564
10023534:	mov    esi,DWORD PTR [eax]
10023536:	mov    edi,DWORD PTR [eax+0x4]
10023539:	add    DWORD PTR [ebp-0x18],0xffff
10023540:	mov    ecx,esi
10023542:	add    esi,esi
10023544:	shr    ecx,0x1f
10023547:	mov    DWORD PTR [eax],esi
10023549:	lea    esi,[edi+edi*1]
1002354c:	or     esi,ecx
1002354e:	mov    ecx,DWORD PTR [eax+0x8]
10023551:	mov    edx,edi
10023553:	shr    edx,0x1f
10023556:	add    ecx,ecx
10023558:	or     ecx,edx
1002355a:	test   ebx,ecx
1002355c:	mov    DWORD PTR [eax+0x4],esi
1002355f:	mov    DWORD PTR [eax+0x8],ecx
10023562:	je     0x10023534
10023564:	mov    cx,WORD PTR [ebp-0x18]
10023568:	mov    WORD PTR [eax+0xa],cx
1002356c:	mov    ecx,DWORD PTR [ebp-0x4]
1002356f:	pop    edi
10023570:	pop    esi
10023571:	xor    ecx,ebp
10023573:	pop    ebx
10023574:	call   0x10015b2b
10023579:	leave  
1002357a:	ret    
1002357b:	push   ebp
1002357c:	mov    ebp,esp
1002357e:	sub    esp,0x14
10023581:	push   esi
10023582:	push   edi
10023583:	push   DWORD PTR [ebp+0x8]
10023586:	lea    ecx,[ebp-0x14]
10023589:	call   0x100165fa
1002358e:	mov    eax,DWORD PTR [ebp+0x10]
10023591:	mov    esi,DWORD PTR [ebp+0xc]
10023594:	xor    edi,edi
10023596:	cmp    eax,edi
10023598:	je     0x1002359c
1002359a:	mov    DWORD PTR [eax],esi
1002359c:	cmp    esi,edi
1002359e:	jne    0x100235cc
100235a0:	call   0x1001a18e
100235a5:	push   edi
100235a6:	push   edi
100235a7:	push   edi
100235a8:	push   edi
100235a9:	push   edi
100235aa:	mov    DWORD PTR [eax],0x16
100235b0:	call   0x1001616f
100235b5:	add    esp,0x14
100235b8:	cmp    BYTE PTR [ebp-0x8],0x0
100235bc:	je     0x100235c5
100235be:	mov    eax,DWORD PTR [ebp-0xc]
100235c1:	and    DWORD PTR [eax+0x70],0xfffffffd
100235c5:	xor    eax,eax
100235c7:	jmp    0x100237a2
100235cc:	cmp    DWORD PTR [ebp+0x14],edi
100235cf:	je     0x100235dd
100235d1:	cmp    DWORD PTR [ebp+0x14],0x2
100235d5:	jl     0x100235a0
100235d7:	cmp    DWORD PTR [ebp+0x14],0x24
100235db:	jg     0x100235a0
100235dd:	mov    ecx,DWORD PTR [ebp-0x14]
100235e0:	push   ebx
100235e1:	mov    bl,BYTE PTR [esi]
100235e3:	mov    DWORD PTR [ebp-0x4],edi
100235e6:	lea    edi,[esi+0x1]
100235e9:	cmp    DWORD PTR [ecx+0xac],0x1
100235f0:	jle    0x10023609
100235f2:	lea    eax,[ebp-0x14]
100235f5:	push   eax
100235f6:	movzx  eax,bl
100235f9:	push   0x8
100235fb:	push   eax
100235fc:	call   0x1001f6b0
10023601:	mov    ecx,DWORD PTR [ebp-0x14]
10023604:	add    esp,0xc
10023607:	jmp    0x10023619
10023609:	mov    edx,DWORD PTR [ecx+0xc8]
1002360f:	movzx  eax,bl
10023612:	movzx  eax,BYTE PTR [edx+eax*2]
10023616:	and    eax,0x8
10023619:	test   eax,eax
1002361b:	je     0x10023622
1002361d:	mov    bl,BYTE PTR [edi]
1002361f:	inc    edi
10023620:	jmp    0x100235e9
10023622:	cmp    bl,0x2d
10023625:	jne    0x1002362d
10023627:	or     DWORD PTR [ebp+0x18],0x2
1002362b:	jmp    0x10023632
1002362d:	cmp    bl,0x2b
10023630:	jne    0x10023635
10023632:	mov    bl,BYTE PTR [edi]
10023634:	inc    edi
10023635:	mov    eax,DWORD PTR [ebp+0x14]
10023638:	test   eax,eax
1002363a:	jl     0x10023789
10023640:	cmp    eax,0x1
10023643:	je     0x10023789
10023649:	cmp    eax,0x24
1002364c:	jg     0x10023789
10023652:	test   eax,eax
10023654:	jne    0x10023680
10023656:	cmp    bl,0x30
10023659:	je     0x10023664
1002365b:	mov    DWORD PTR [ebp+0x14],0xa
10023662:	jmp    0x10023698
10023664:	mov    al,BYTE PTR [edi]
10023666:	cmp    al,0x78
10023668:	je     0x10023677
1002366a:	cmp    al,0x58
1002366c:	je     0x10023677
1002366e:	mov    DWORD PTR [ebp+0x14],0x8
10023675:	jmp    0x10023698
10023677:	mov    DWORD PTR [ebp+0x14],0x10
1002367e:	jmp    0x1002368a
10023680:	cmp    eax,0x10
10023683:	jne    0x10023698
10023685:	cmp    bl,0x30
10023688:	jne    0x10023698
1002368a:	mov    al,BYTE PTR [edi]
1002368c:	cmp    al,0x78
1002368e:	je     0x10023694
10023690:	cmp    al,0x58
10023692:	jne    0x10023698
10023694:	inc    edi
10023695:	mov    bl,BYTE PTR [edi]
10023697:	inc    edi
10023698:	mov    esi,DWORD PTR [ecx+0xc8]
1002369e:	or     eax,0xffffffff
100236a1:	xor    edx,edx
100236a3:	div    DWORD PTR [ebp+0x14]
100236a6:	movzx  ecx,bl
100236a9:	movzx  ecx,WORD PTR [esi+ecx*2]
100236ad:	test   cl,0x4
100236b0:	je     0x100236ba
100236b2:	movsx  ecx,bl
100236b5:	sub    ecx,0x30
100236b8:	jmp    0x100236d4
100236ba:	test   cx,0x103
100236bf:	je     0x100236f2
100236c1:	mov    cl,bl
100236c3:	sub    cl,0x61
100236c6:	cmp    cl,0x19
100236c9:	movsx  ecx,bl
100236cc:	ja     0x100236d1
100236ce:	sub    ecx,0x20
100236d1:	add    ecx,0xffffffc9
100236d4:	cmp    ecx,DWORD PTR [ebp+0x14]
100236d7:	jae    0x100236f2
100236d9:	or     DWORD PTR [ebp+0x18],0x8
100236dd:	cmp    DWORD PTR [ebp-0x4],eax
100236e0:	jb     0x10023709
100236e2:	jne    0x100236e8
100236e4:	cmp    ecx,edx
100236e6:	jbe    0x10023709
100236e8:	or     DWORD PTR [ebp+0x18],0x4
100236ec:	cmp    DWORD PTR [ebp+0x10],0x0
100236f0:	jne    0x10023715
100236f2:	mov    eax,DWORD PTR [ebp+0x18]
100236f5:	dec    edi
100236f6:	test   al,0x8
100236f8:	jne    0x1002371a
100236fa:	cmp    DWORD PTR [ebp+0x10],0x0
100236fe:	je     0x10023703
10023700:	mov    edi,DWORD PTR [ebp+0xc]
10023703:	and    DWORD PTR [ebp-0x4],0x0
10023707:	jmp    0x10023765
10023709:	mov    ebx,DWORD PTR [ebp-0x4]
1002370c:	imul   ebx,DWORD PTR [ebp+0x14]
10023710:	add    ebx,ecx
10023712:	mov    DWORD PTR [ebp-0x4],ebx
10023715:	mov    bl,BYTE PTR [edi]
10023717:	inc    edi
10023718:	jmp    0x100236a6
1002371a:	test   al,0x4
1002371c:	mov    esi,0x7fffffff
10023721:	jne    0x1002373e
10023723:	test   al,0x1
10023725:	jne    0x10023765
10023727:	and    eax,0x2
1002372a:	je     0x10023735
1002372c:	cmp    DWORD PTR [ebp-0x4],0x80000000
10023733:	ja     0x1002373e
10023735:	test   eax,eax
10023737:	jne    0x10023765
10023739:	cmp    DWORD PTR [ebp-0x4],esi
1002373c:	jbe    0x10023765
1002373e:	call   0x1001a18e
10023743:	test   BYTE PTR [ebp+0x18],0x1
10023747:	mov    DWORD PTR [eax],0x22
1002374d:	je     0x10023755
1002374f:	or     DWORD PTR [ebp-0x4],0xffffffff
10023753:	jmp    0x10023765
10023755:	mov    al,BYTE PTR [ebp+0x18]
10023758:	and    al,0x2
1002375a:	neg    al
1002375c:	sbb    eax,eax
1002375e:	neg    eax
10023760:	add    eax,esi
10023762:	mov    DWORD PTR [ebp-0x4],eax
10023765:	mov    eax,DWORD PTR [ebp+0x10]
10023768:	test   eax,eax
1002376a:	je     0x1002376e
1002376c:	mov    DWORD PTR [eax],edi
1002376e:	test   BYTE PTR [ebp+0x18],0x2
10023772:	je     0x10023777
10023774:	neg    DWORD PTR [ebp-0x4]
10023777:	cmp    BYTE PTR [ebp-0x8],0x0
1002377b:	je     0x10023784
1002377d:	mov    eax,DWORD PTR [ebp-0xc]
10023780:	and    DWORD PTR [eax+0x70],0xfffffffd
10023784:	mov    eax,DWORD PTR [ebp-0x4]
10023787:	jmp    0x100237a1
10023789:	mov    eax,DWORD PTR [ebp+0x10]
1002378c:	test   eax,eax
1002378e:	je     0x10023792
10023790:	mov    DWORD PTR [eax],esi
10023792:	cmp    BYTE PTR [ebp-0x8],0x0
10023796:	je     0x1002379f
10023798:	mov    eax,DWORD PTR [ebp-0xc]
1002379b:	and    DWORD PTR [eax+0x70],0xfffffffd
1002379f:	xor    eax,eax
100237a1:	pop    ebx
100237a2:	pop    edi
100237a3:	pop    esi
100237a4:	leave  
100237a5:	ret    
100237a6:	push   ebp
100237a7:	mov    ebp,esp
100237a9:	xor    eax,eax
100237ab:	cmp    DWORD PTR ds:0x10096e48,eax
100237b1:	push   eax
100237b2:	push   DWORD PTR [ebp+0x10]
100237b5:	push   DWORD PTR [ebp+0xc]
100237b8:	push   DWORD PTR [ebp+0x8]
100237bb:	jne    0x100237c4
100237bd:	push   0x10095b10
100237c2:	jmp    0x100237c5
100237c4:	push   eax
100237c5:	call   0x1002357b
100237ca:	add    esp,0x14
100237cd:	pop    ebp
100237ce:	ret    
100237cf:	push   0xa
100237d1:	push   0x0
100237d3:	push   DWORD PTR [esp+0xc]
100237d7:	call   0x100237a6
100237dc:	add    esp,0xc
100237df:	ret    
100237e0:	push   0x2
100237e2:	call   0x10019e4f
100237e7:	pop    ecx
100237e8:	ret    
100237e9:	push   ebp
100237ea:	mov    ebp,esp
100237ec:	push   ecx
100237ed:	push   esi
100237ee:	mov    esi,DWORD PTR [ebp+0xc]
100237f1:	push   esi
100237f2:	call   0x1001ea9b
100237f7:	mov    DWORD PTR [ebp+0xc],eax
100237fa:	mov    eax,DWORD PTR [esi+0xc]
100237fd:	test   al,0x82
100237ff:	pop    ecx
10023800:	jne    0x1002381b
10023802:	call   0x1001a18e
10023807:	mov    DWORD PTR [eax],0x9
1002380d:	or     DWORD PTR [esi+0xc],0x20
10023811:	mov    eax,0xffff
10023816:	jmp    0x10023956
1002381b:	test   al,0x40
1002381d:	je     0x1002382c
1002381f:	call   0x1001a18e
10023824:	mov    DWORD PTR [eax],0x22
1002382a:	jmp    0x1002380d
1002382c:	test   al,0x1
1002382e:	je     0x10023847
10023830:	and    DWORD PTR [esi+0x4],0x0
10023834:	test   al,0x10
10023836:	je     0x100238c7
1002383c:	mov    ecx,DWORD PTR [esi+0x8]
1002383f:	and    eax,0xfffffffe
10023842:	mov    DWORD PTR [esi],ecx
10023844:	mov    DWORD PTR [esi+0xc],eax
10023847:	mov    eax,DWORD PTR [esi+0xc]
1002384a:	and    DWORD PTR [esi+0x4],0x0
1002384e:	and    DWORD PTR [ebp-0x4],0x0
10023852:	push   ebx
10023853:	push   0x2
10023855:	and    eax,0xffffffef
10023858:	pop    ebx
10023859:	or     eax,ebx
1002385b:	test   ax,0x10c
1002385f:	mov    DWORD PTR [esi+0xc],eax
10023862:	jne    0x10023890
10023864:	call   0x1001e7a5
10023869:	add    eax,0x20
1002386c:	cmp    esi,eax
1002386e:	je     0x1002387c
10023870:	call   0x1001e7a5
10023875:	add    eax,0x40
10023878:	cmp    esi,eax
1002387a:	jne    0x10023889
1002387c:	push   DWORD PTR [ebp+0xc]
1002387f:	call   0x100216b7
10023884:	test   eax,eax
10023886:	pop    ecx
10023887:	jne    0x10023890
10023889:	push   esi
1002388a:	call   0x10021673
1002388f:	pop    ecx
10023890:	test   WORD PTR [esi+0xc],0x108
10023896:	push   edi
10023897:	je     0x10023920
1002389d:	mov    eax,DWORD PTR [esi+0x8]
100238a0:	mov    edi,DWORD PTR [esi]
100238a2:	lea    ecx,[eax+0x2]
100238a5:	mov    DWORD PTR [esi],ecx
100238a7:	mov    ecx,DWORD PTR [esi+0x18]
100238aa:	sub    edi,eax
100238ac:	sub    ecx,ebx
100238ae:	test   edi,edi
100238b0:	mov    DWORD PTR [esi+0x4],ecx
100238b3:	jle    0x100238d2
100238b5:	push   edi
100238b6:	push   eax
100238b7:	push   DWORD PTR [ebp+0xc]
100238ba:	call   0x1001fd88
100238bf:	add    esp,0xc
100238c2:	mov    DWORD PTR [ebp-0x4],eax
100238c5:	jmp    0x10023915
100238c7:	or     eax,0x20
100238ca:	mov    DWORD PTR [esi+0xc],eax
100238cd:	jmp    0x10023811
100238d2:	mov    ecx,DWORD PTR [ebp+0xc]
100238d5:	cmp    ecx,0xffffffff
100238d8:	je     0x100238f5
100238da:	cmp    ecx,0xfffffffe
100238dd:	je     0x100238f5
100238df:	mov    eax,ecx
100238e1:	and    eax,0x1f
100238e4:	mov    edx,ecx
100238e6:	sar    edx,0x5
100238e9:	shl    eax,0x6
100238ec:	add    eax,DWORD PTR [edx*4+0x10098ae0]
100238f3:	jmp    0x100238fa
100238f5:	mov    eax,0x10095cf8
100238fa:	test   BYTE PTR [eax+0x4],0x20
100238fe:	je     0x10023915
10023900:	push   ebx
10023901:	push   0x0
10023903:	push   0x0
10023905:	push   ecx
10023906:	call   0x1001e43c
1002390b:	and    eax,edx
1002390d:	add    esp,0x10
10023910:	cmp    eax,0xffffffff
10023913:	je     0x10023942
10023915:	mov    eax,DWORD PTR [esi+0x8]
10023918:	mov    ebx,DWORD PTR [ebp+0x8]
1002391b:	mov    WORD PTR [eax],bx
1002391e:	jmp    0x1002393d
10023920:	push   0x2
10023922:	lea    eax,[ebp-0x4]
10023925:	push   eax
10023926:	push   DWORD PTR [ebp+0xc]
10023929:	mov    edi,ebx
1002392b:	mov    ebx,DWORD PTR [ebp+0x8]
1002392e:	mov    WORD PTR [ebp-0x4],bx
10023932:	call   0x1001fd88
10023937:	add    esp,0xc
1002393a:	mov    DWORD PTR [ebp-0x4],eax
1002393d:	cmp    DWORD PTR [ebp-0x4],edi
10023940:	je     0x1002394d
10023942:	or     DWORD PTR [esi+0xc],0x20
10023946:	mov    eax,0xffff
1002394b:	jmp    0x10023954
1002394d:	mov    eax,ebx
1002394f:	and    eax,0xffff
10023954:	pop    edi
10023955:	pop    ebx
10023956:	pop    esi
10023957:	leave  
10023958:	ret    
10023959:	xor    eax,eax
1002395b:	push   eax
1002395c:	push   eax
1002395d:	push   0x3
1002395f:	push   eax
10023960:	push   0x3
10023962:	push   0x40000000
10023967:	push   0x1007ef68
1002396c:	call   DWORD PTR ds:0x1003418c
10023972:	mov    ds:0x10096544,eax
10023977:	ret    
10023978:	mov    eax,ds:0x10096544
1002397d:	cmp    eax,0xffffffff
10023980:	push   esi
10023981:	mov    esi,DWORD PTR ds:0x10034058
10023987:	je     0x10023991
10023989:	cmp    eax,0xfffffffe
1002398c:	je     0x10023991
1002398e:	push   eax
1002398f:	call   esi
10023991:	mov    eax,ds:0x10096540
10023996:	cmp    eax,0xffffffff
10023999:	je     0x100239a3
1002399b:	cmp    eax,0xfffffffe
1002399e:	je     0x100239a3
100239a0:	push   eax
100239a1:	call   esi
100239a3:	pop    esi
100239a4:	ret    
100239a5:	push   ebp
100239a6:	mov    ebp,esp
100239a8:	sub    esp,0x28
100239ab:	mov    eax,ds:0x100951fc
100239b0:	xor    eax,ebp
100239b2:	mov    DWORD PTR [ebp-0x4],eax
100239b5:	push   ebx
100239b6:	push   esi
100239b7:	mov    esi,DWORD PTR [ebp+0x8]
100239ba:	push   edi
100239bb:	push   DWORD PTR [ebp+0x10]
100239be:	mov    edi,DWORD PTR [ebp+0xc]
100239c1:	lea    ecx,[ebp-0x24]
100239c4:	call   0x100165fa
100239c9:	lea    eax,[ebp-0x24]
100239cc:	push   eax
100239cd:	xor    ebx,ebx
100239cf:	push   ebx
100239d0:	push   ebx
100239d1:	push   ebx
100239d2:	push   ebx
100239d3:	push   edi
100239d4:	lea    eax,[ebp-0x28]
100239d7:	push   eax
100239d8:	lea    eax,[ebp-0x10]
100239db:	push   eax
100239dc:	call   0x10023eb1
100239e1:	mov    DWORD PTR [ebp-0x14],eax
100239e4:	lea    eax,[ebp-0x10]
100239e7:	push   esi
100239e8:	push   eax
100239e9:	call   0x10021def
100239ee:	add    esp,0x28
100239f1:	test   BYTE PTR [ebp-0x14],0x3
100239f5:	jne    0x10023a22
100239f7:	cmp    eax,0x1
100239fa:	jne    0x10023a0d
100239fc:	cmp    BYTE PTR [ebp-0x18],bl
100239ff:	je     0x10023a08
10023a01:	mov    eax,DWORD PTR [ebp-0x1c]
10023a04:	and    DWORD PTR [eax+0x70],0xfffffffd
10023a08:	push   0x3
10023a0a:	pop    eax
10023a0b:	jmp    0x10023a3c
10023a0d:	cmp    eax,0x2
10023a10:	jne    0x10023a2e
10023a12:	cmp    BYTE PTR [ebp-0x18],bl
10023a15:	je     0x10023a1e
10023a17:	mov    eax,DWORD PTR [ebp-0x1c]
10023a1a:	and    DWORD PTR [eax+0x70],0xfffffffd
10023a1e:	push   0x4
10023a20:	jmp    0x10023a0a
10023a22:	test   BYTE PTR [ebp-0x14],0x1
10023a26:	jne    0x10023a12
10023a28:	test   BYTE PTR [ebp-0x14],0x2
10023a2c:	jne    0x100239fc
10023a2e:	cmp    BYTE PTR [ebp-0x18],bl
10023a31:	je     0x10023a3a
10023a33:	mov    eax,DWORD PTR [ebp-0x1c]
10023a36:	and    DWORD PTR [eax+0x70],0xfffffffd
10023a3a:	xor    eax,eax
10023a3c:	mov    ecx,DWORD PTR [ebp-0x4]
10023a3f:	pop    edi
10023a40:	pop    esi
10023a41:	xor    ecx,ebp
10023a43:	pop    ebx
10023a44:	call   0x10015b2b
10023a49:	leave  
10023a4a:	ret    
10023a4b:	push   ebp
10023a4c:	mov    ebp,esp
10023a4e:	sub    esp,0x28
10023a51:	mov    eax,ds:0x100951fc
10023a56:	xor    eax,ebp
10023a58:	mov    DWORD PTR [ebp-0x4],eax
10023a5b:	push   ebx
10023a5c:	push   esi
10023a5d:	mov    esi,DWORD PTR [ebp+0x8]
10023a60:	push   edi
10023a61:	push   DWORD PTR [ebp+0x10]
10023a64:	mov    edi,DWORD PTR [ebp+0xc]
10023a67:	lea    ecx,[ebp-0x24]
10023a6a:	call   0x100165fa
10023a6f:	lea    eax,[ebp-0x24]
10023a72:	push   eax
10023a73:	xor    ebx,ebx
10023a75:	push   ebx
10023a76:	push   ebx
10023a77:	push   ebx
10023a78:	push   ebx
10023a79:	push   edi
10023a7a:	lea    eax,[ebp-0x28]
10023a7d:	push   eax
10023a7e:	lea    eax,[ebp-0x10]
10023a81:	push   eax
10023a82:	call   0x10023eb1
10023a87:	mov    DWORD PTR [ebp-0x14],eax
10023a8a:	lea    eax,[ebp-0x10]
10023a8d:	push   esi
10023a8e:	push   eax
10023a8f:	call   0x10022331
10023a94:	add    esp,0x28
10023a97:	test   BYTE PTR [ebp-0x14],0x3
10023a9b:	jne    0x10023ac8
10023a9d:	cmp    eax,0x1
10023aa0:	jne    0x10023ab3
10023aa2:	cmp    BYTE PTR [ebp-0x18],bl
10023aa5:	je     0x10023aae
10023aa7:	mov    eax,DWORD PTR [ebp-0x1c]
10023aaa:	and    DWORD PTR [eax+0x70],0xfffffffd
10023aae:	push   0x3
10023ab0:	pop    eax
10023ab1:	jmp    0x10023ae2
10023ab3:	cmp    eax,0x2
10023ab6:	jne    0x10023ad4
10023ab8:	cmp    BYTE PTR [ebp-0x18],bl
10023abb:	je     0x10023ac4
10023abd:	mov    eax,DWORD PTR [ebp-0x1c]
10023ac0:	and    DWORD PTR [eax+0x70],0xfffffffd
10023ac4:	push   0x4
10023ac6:	jmp    0x10023ab0
10023ac8:	test   BYTE PTR [ebp-0x14],0x1
10023acc:	jne    0x10023ab8
10023ace:	test   BYTE PTR [ebp-0x14],0x2
10023ad2:	jne    0x10023aa2
10023ad4:	cmp    BYTE PTR [ebp-0x18],bl
10023ad7:	je     0x10023ae0
10023ad9:	mov    eax,DWORD PTR [ebp-0x1c]
10023adc:	and    DWORD PTR [eax+0x70],0xfffffffd
10023ae0:	xor    eax,eax
10023ae2:	mov    ecx,DWORD PTR [ebp-0x4]
10023ae5:	pop    edi
10023ae6:	pop    esi
10023ae7:	xor    ecx,ebp
10023ae9:	pop    ebx
10023aea:	call   0x10015b2b
10023aef:	leave  
10023af0:	ret    
10023af1:	push   ebp
10023af2:	mov    ebp,esp
10023af4:	mov    ecx,DWORD PTR [ebp+0x14]
10023af7:	push   ebx
10023af8:	push   esi
10023af9:	mov    esi,DWORD PTR [ebp+0x8]
10023afc:	xor    ebx,ebx
10023afe:	cmp    esi,ebx
10023b00:	push   edi
10023b01:	mov    edi,DWORD PTR [ecx+0xc]
10023b04:	jne    0x10023b24
10023b06:	call   0x1001a18e
10023b0b:	push   0x16
10023b0d:	pop    esi
10023b0e:	mov    DWORD PTR [eax],esi
10023b10:	push   ebx
10023b11:	push   ebx
10023b12:	push   ebx
10023b13:	push   ebx
10023b14:	push   ebx
10023b15:	call   0x1001616f
10023b1a:	add    esp,0x14
10023b1d:	mov    eax,esi
10023b1f:	jmp    0x10023ba9
10023b24:	cmp    DWORD PTR [ebp+0xc],ebx
10023b27:	jbe    0x10023b06
10023b29:	mov    edx,DWORD PTR [ebp+0x10]
10023b2c:	cmp    edx,ebx
10023b2e:	mov    BYTE PTR [esi],bl
10023b30:	jle    0x10023b36
10023b32:	mov    eax,edx
10023b34:	jmp    0x10023b38
10023b36:	xor    eax,eax
10023b38:	inc    eax
10023b39:	cmp    DWORD PTR [ebp+0xc],eax
10023b3c:	ja     0x10023b4c
10023b3e:	call   0x1001a18e
10023b43:	push   0x22
10023b45:	pop    ecx
10023b46:	mov    DWORD PTR [eax],ecx
10023b48:	mov    esi,ecx
10023b4a:	jmp    0x10023b10
10023b4c:	cmp    edx,ebx
10023b4e:	mov    BYTE PTR [esi],0x30
10023b51:	lea    eax,[esi+0x1]
10023b54:	jle    0x10023b70
10023b56:	mov    cl,BYTE PTR [edi]
10023b58:	cmp    cl,bl
10023b5a:	je     0x10023b62
10023b5c:	movsx  ecx,cl
10023b5f:	inc    edi
10023b60:	jmp    0x10023b65
10023b62:	push   0x30
10023b64:	pop    ecx
10023b65:	mov    BYTE PTR [eax],cl
10023b67:	inc    eax
10023b68:	dec    edx
10023b69:	cmp    edx,ebx
10023b6b:	jg     0x10023b56
10023b6d:	mov    ecx,DWORD PTR [ebp+0x14]
10023b70:	cmp    edx,ebx
10023b72:	mov    BYTE PTR [eax],bl
10023b74:	jl     0x10023b88
10023b76:	cmp    BYTE PTR [edi],0x35
10023b79:	jl     0x10023b88
10023b7b:	jmp    0x10023b80
10023b7d:	mov    BYTE PTR [eax],0x30
10023b80:	dec    eax
10023b81:	cmp    BYTE PTR [eax],0x39
10023b84:	je     0x10023b7d
10023b86:	inc    BYTE PTR [eax]
10023b88:	cmp    BYTE PTR [esi],0x31
10023b8b:	jne    0x10023b92
10023b8d:	inc    DWORD PTR [ecx+0x4]
10023b90:	jmp    0x10023ba7
10023b92:	lea    edi,[esi+0x1]
10023b95:	push   edi
10023b96:	call   0x100163c0
10023b9b:	inc    eax
10023b9c:	push   eax
10023b9d:	push   edi
10023b9e:	push   esi
10023b9f:	call   0x1001a370
10023ba4:	add    esp,0x10
10023ba7:	xor    eax,eax
10023ba9:	pop    edi
10023baa:	pop    esi
10023bab:	pop    ebx
10023bac:	pop    ebp
10023bad:	ret    
10023bae:	push   ebp
10023baf:	mov    ebp,esp
10023bb1:	push   ecx
10023bb2:	mov    edx,DWORD PTR [ebp+0xc]
10023bb5:	movzx  eax,WORD PTR [edx+0x6]
10023bb9:	push   ebx
10023bba:	mov    ecx,eax
10023bbc:	push   esi
10023bbd:	push   edi
10023bbe:	shr    ecx,0x4
10023bc1:	and    eax,0x8000
10023bc6:	mov    edi,0x7ff
10023bcb:	and    ecx,edi
10023bcd:	mov    DWORD PTR [ebp+0xc],eax
10023bd0:	mov    eax,DWORD PTR [edx+0x4]
10023bd3:	mov    edx,DWORD PTR [edx]
10023bd5:	movzx  ebx,cx
10023bd8:	mov    esi,0x80000000
10023bdd:	and    eax,0xfffff
10023be2:	test   ebx,ebx
10023be4:	mov    DWORD PTR [ebp-0x4],esi
10023be7:	je     0x10023bfc
10023be9:	cmp    ebx,edi
10023beb:	je     0x10023bf5
10023bed:	add    ecx,0x3c00
10023bf3:	jmp    0x10023c1d
10023bf5:	mov    edi,0x7fff
10023bfa:	jmp    0x10023c20
10023bfc:	xor    ebx,ebx
10023bfe:	cmp    eax,ebx
10023c00:	jne    0x10023c14
10023c02:	cmp    edx,ebx
10023c04:	jne    0x10023c14
10023c06:	mov    eax,DWORD PTR [ebp+0x8]
10023c09:	mov    cx,WORD PTR [ebp+0xc]
10023c0d:	mov    DWORD PTR [eax+0x4],ebx
10023c10:	mov    DWORD PTR [eax],ebx
10023c12:	jmp    0x10023c60
10023c14:	add    ecx,0x3c01
10023c1a:	mov    DWORD PTR [ebp-0x4],ebx
10023c1d:	movzx  edi,cx
10023c20:	mov    ecx,edx
10023c22:	shr    ecx,0x15
10023c25:	shl    eax,0xb
10023c28:	or     ecx,eax
10023c2a:	or     ecx,DWORD PTR [ebp-0x4]
10023c2d:	mov    eax,DWORD PTR [ebp+0x8]
10023c30:	shl    edx,0xb
10023c33:	test   esi,ecx
10023c35:	mov    DWORD PTR [eax+0x4],ecx
10023c38:	mov    DWORD PTR [eax],edx
10023c3a:	jne    0x10023c5b
10023c3c:	mov    ecx,DWORD PTR [eax]
10023c3e:	mov    edx,DWORD PTR [eax+0x4]
10023c41:	mov    ebx,ecx
10023c43:	add    edx,edx
10023c45:	shr    ebx,0x1f
10023c48:	or     edx,ebx
10023c4a:	add    ecx,ecx
10023c4c:	add    edi,0xffff
10023c52:	test   esi,edx
10023c54:	mov    DWORD PTR [eax+0x4],edx
10023c57:	mov    DWORD PTR [eax],ecx
10023c59:	je     0x10023c3c
10023c5b:	mov    ecx,DWORD PTR [ebp+0xc]
10023c5e:	or     ecx,edi
10023c60:	pop    edi
10023c61:	pop    esi
10023c62:	mov    WORD PTR [eax+0x8],cx
10023c66:	pop    ebx
10023c67:	leave  
10023c68:	ret    
10023c69:	push   ebp
10023c6a:	mov    ebp,esp
10023c6c:	sub    esp,0x30
10023c6f:	mov    eax,ds:0x100951fc
10023c74:	xor    eax,ebp
10023c76:	mov    DWORD PTR [ebp-0x4],eax
10023c79:	mov    eax,DWORD PTR [ebp+0x14]
10023c7c:	push   ebx
10023c7d:	mov    ebx,DWORD PTR [ebp+0x10]
10023c80:	push   esi
10023c81:	mov    DWORD PTR [ebp-0x30],eax
10023c84:	push   edi
10023c85:	lea    eax,[ebp+0x8]
10023c88:	push   eax
10023c89:	lea    eax,[ebp-0x10]
10023c8c:	push   eax
10023c8d:	call   0x10023bae
10023c92:	pop    ecx
10023c93:	pop    ecx
10023c94:	lea    eax,[ebp-0x2c]
10023c97:	push   eax
10023c98:	push   0x0
10023c9a:	push   0x11
10023c9c:	sub    esp,0xc
10023c9f:	lea    esi,[ebp-0x10]
10023ca2:	mov    edi,esp
10023ca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023ca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023ca6:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
10023ca8:	call   0x10024571
10023cad:	mov    esi,DWORD PTR [ebp-0x30]
10023cb0:	mov    DWORD PTR [ebx+0x8],eax
10023cb3:	movsx  eax,BYTE PTR [ebp-0x2a]
10023cb7:	mov    DWORD PTR [ebx],eax
10023cb9:	movsx  eax,WORD PTR [ebp-0x2c]
10023cbd:	mov    DWORD PTR [ebx+0x4],eax
10023cc0:	lea    eax,[ebp-0x28]
10023cc3:	push   eax
10023cc4:	push   DWORD PTR [ebp+0x18]
10023cc7:	push   esi
10023cc8:	call   0x1001a2d8
10023ccd:	add    esp,0x24
10023cd0:	test   eax,eax
10023cd2:	je     0x10023ce3
10023cd4:	xor    eax,eax
10023cd6:	push   eax
10023cd7:	push   eax
10023cd8:	push   eax
10023cd9:	push   eax
10023cda:	push   eax
10023cdb:	call   0x10016073
10023ce0:	add    esp,0x14
10023ce3:	mov    ecx,DWORD PTR [ebp-0x4]
10023ce6:	pop    edi
10023ce7:	mov    DWORD PTR [ebx+0xc],esi
10023cea:	pop    esi
10023ceb:	mov    eax,ebx
10023ced:	xor    ecx,ebp
10023cef:	pop    ebx
10023cf0:	call   0x10015b2b
10023cf5:	leave  
10023cf6:	ret    
10023cf7:	int3   
10023cf8:	int3   
10023cf9:	int3   
10023cfa:	int3   
10023cfb:	int3   
10023cfc:	int3   
10023cfd:	int3   
10023cfe:	int3   
10023cff:	int3   
10023d00:	push   edi
10023d01:	push   esi
10023d02:	push   ebp
10023d03:	xor    edi,edi
10023d05:	xor    ebp,ebp
10023d07:	mov    eax,DWORD PTR [esp+0x14]
10023d0b:	or     eax,eax
10023d0d:	jge    0x10023d24
10023d0f:	inc    edi
10023d10:	inc    ebp
10023d11:	mov    edx,DWORD PTR [esp+0x10]
10023d15:	neg    eax
10023d17:	neg    edx
10023d19:	sbb    eax,0x0
10023d1c:	mov    DWORD PTR [esp+0x14],eax
10023d20:	mov    DWORD PTR [esp+0x10],edx
10023d24:	mov    eax,DWORD PTR [esp+0x1c]
10023d28:	or     eax,eax
10023d2a:	jge    0x10023d40
10023d2c:	inc    edi
10023d2d:	mov    edx,DWORD PTR [esp+0x18]
10023d31:	neg    eax
10023d33:	neg    edx
10023d35:	sbb    eax,0x0
10023d38:	mov    DWORD PTR [esp+0x1c],eax
10023d3c:	mov    DWORD PTR [esp+0x18],edx
10023d40:	or     eax,eax
10023d42:	jne    0x10023d6c
10023d44:	mov    ecx,DWORD PTR [esp+0x18]
10023d48:	mov    eax,DWORD PTR [esp+0x14]
10023d4c:	xor    edx,edx
10023d4e:	div    ecx
10023d50:	mov    ebx,eax
10023d52:	mov    eax,DWORD PTR [esp+0x10]
10023d56:	div    ecx
10023d58:	mov    esi,eax
10023d5a:	mov    eax,ebx
10023d5c:	mul    DWORD PTR [esp+0x18]
10023d60:	mov    ecx,eax
10023d62:	mov    eax,esi
10023d64:	mul    DWORD PTR [esp+0x18]
10023d68:	add    edx,ecx
10023d6a:	jmp    0x10023db3
10023d6c:	mov    ebx,eax
10023d6e:	mov    ecx,DWORD PTR [esp+0x18]
10023d72:	mov    edx,DWORD PTR [esp+0x14]
10023d76:	mov    eax,DWORD PTR [esp+0x10]
10023d7a:	shr    ebx,1
10023d7c:	rcr    ecx,1
10023d7e:	shr    edx,1
10023d80:	rcr    eax,1
10023d82:	or     ebx,ebx
10023d84:	jne    0x10023d7a
10023d86:	div    ecx
10023d88:	mov    esi,eax
10023d8a:	mul    DWORD PTR [esp+0x1c]
10023d8e:	mov    ecx,eax
10023d90:	mov    eax,DWORD PTR [esp+0x18]
10023d94:	mul    esi
10023d96:	add    edx,ecx
10023d98:	jb     0x10023da8
10023d9a:	cmp    edx,DWORD PTR [esp+0x14]
10023d9e:	ja     0x10023da8
10023da0:	jb     0x10023db1
10023da2:	cmp    eax,DWORD PTR [esp+0x10]
10023da6:	jbe    0x10023db1
10023da8:	dec    esi
10023da9:	sub    eax,DWORD PTR [esp+0x18]
10023dad:	sbb    edx,DWORD PTR [esp+0x1c]
10023db1:	xor    ebx,ebx
10023db3:	sub    eax,DWORD PTR [esp+0x10]
10023db7:	sbb    edx,DWORD PTR [esp+0x14]
10023dbb:	dec    ebp
10023dbc:	jns    0x10023dc5
10023dbe:	neg    edx
10023dc0:	neg    eax
10023dc2:	sbb    edx,0x0
10023dc5:	mov    ecx,edx
10023dc7:	mov    edx,ebx
10023dc9:	mov    ebx,ecx
10023dcb:	mov    ecx,eax
10023dcd:	mov    eax,esi
10023dcf:	dec    edi
10023dd0:	jne    0x10023dd9
10023dd2:	neg    edx
10023dd4:	neg    eax
10023dd6:	sbb    edx,0x0
10023dd9:	pop    ebp
10023dda:	pop    esi
10023ddb:	pop    edi
10023ddc:	ret    0x10
10023ddf:	push   ebp
10023de0:	mov    ebp,esp
10023de2:	mov    eax,DWORD PTR [ebp+0x10]
10023de5:	mov    ecx,DWORD PTR [ebp+0xc]
10023de8:	and    eax,0xfff7ffff
10023ded:	and    ecx,eax
10023def:	test   ecx,0xfcf0fce0
10023df5:	push   esi
10023df6:	je     0x10023e29
10023df8:	push   edi
10023df9:	mov    edi,DWORD PTR [ebp+0x8]
10023dfc:	xor    esi,esi
10023dfe:	cmp    edi,esi
10023e00:	je     0x10023e0d
10023e02:	push   esi
10023e03:	push   esi
10023e04:	call   0x10024f65
10023e09:	pop    ecx
10023e0a:	pop    ecx
10023e0b:	mov    DWORD PTR [edi],eax
10023e0d:	call   0x1001a18e
10023e12:	push   0x16
10023e14:	pop    edi
10023e15:	push   esi
10023e16:	push   esi
10023e17:	push   esi
10023e18:	push   esi
10023e19:	push   esi
10023e1a:	mov    DWORD PTR [eax],edi
10023e1c:	call   0x1001616f
10023e21:	add    esp,0x14
10023e24:	mov    eax,edi
10023e26:	pop    edi
10023e27:	jmp    0x10023e46
10023e29:	mov    esi,DWORD PTR [ebp+0x8]
10023e2c:	test   esi,esi
10023e2e:	push   eax
10023e2f:	push   DWORD PTR [ebp+0xc]
10023e32:	je     0x10023e3d
10023e34:	call   0x10024f65
10023e39:	mov    DWORD PTR [esi],eax
10023e3b:	jmp    0x10023e42
10023e3d:	call   0x10024f65
10023e42:	pop    ecx
10023e43:	pop    ecx
10023e44:	xor    eax,eax
10023e46:	pop    esi
10023e47:	pop    ebp
10023e48:	ret    
10023e49:	int3   
10023e4a:	int3   
10023e4b:	int3   
10023e4c:	int3   
10023e4d:	int3   
10023e4e:	int3   
10023e4f:	int3   
10023e50:	push   ebp
10023e51:	mov    ebp,esp
10023e53:	push   edi
10023e54:	push   esi
10023e55:	push   ebx
10023e56:	mov    ecx,DWORD PTR [ebp+0x10]
10023e59:	or     ecx,ecx
10023e5b:	je     0x10023eaa
10023e5d:	mov    esi,DWORD PTR [ebp+0x8]
10023e60:	mov    edi,DWORD PTR [ebp+0xc]
10023e63:	mov    bh,0x41
10023e65:	mov    bl,0x5a
10023e67:	mov    dh,0x20
10023e69:	lea    ecx,[ecx+0x0]
10023e6c:	mov    ah,BYTE PTR [esi]
10023e6e:	or     ah,ah
10023e70:	mov    al,BYTE PTR [edi]
10023e72:	je     0x10023e9b
10023e74:	or     al,al
10023e76:	je     0x10023e9b
10023e78:	add    esi,0x1
10023e7b:	add    edi,0x1
10023e7e:	cmp    ah,bh
10023e80:	jb     0x10023e88
10023e82:	cmp    ah,bl
10023e84:	ja     0x10023e88
10023e86:	add    ah,dh
10023e88:	cmp    al,bh
10023e8a:	jb     0x10023e92
10023e8c:	cmp    al,bl
10023e8e:	ja     0x10023e92
10023e90:	add    al,dh
10023e92:	cmp    ah,al
10023e94:	jne    0x10023ea1
10023e96:	sub    ecx,0x1
10023e99:	jne    0x10023e6c
10023e9b:	xor    ecx,ecx
10023e9d:	cmp    ah,al
10023e9f:	je     0x10023eaa
10023ea1:	mov    ecx,0xffffffff
10023ea6:	jb     0x10023eaa
10023ea8:	neg    ecx
10023eaa:	mov    eax,ecx
10023eac:	pop    ebx
10023ead:	pop    esi
10023eae:	pop    edi
10023eaf:	leave  
10023eb0:	ret    
10023eb1:	push   ebp
10023eb2:	mov    ebp,esp
10023eb4:	sub    esp,0x7c
10023eb7:	mov    eax,ds:0x100951fc
10023ebc:	xor    eax,ebp
10023ebe:	mov    DWORD PTR [ebp-0x4],eax
10023ec1:	mov    eax,DWORD PTR [ebp+0x8]
10023ec4:	push   ebx
10023ec5:	xor    ebx,ebx
10023ec7:	push   esi
10023ec8:	xor    esi,esi
10023eca:	mov    DWORD PTR [ebp-0x7c],eax
10023ecd:	mov    eax,DWORD PTR [ebp+0xc]
10023ed0:	inc    esi
10023ed1:	xor    ecx,ecx
10023ed3:	cmp    DWORD PTR [ebp+0x24],ebx
10023ed6:	push   edi
10023ed7:	mov    DWORD PTR [ebp-0x70],eax
10023eda:	lea    edi,[ebp-0x20]
10023edd:	mov    DWORD PTR [ebp-0x74],ebx
10023ee0:	mov    DWORD PTR [ebp-0x68],esi
10023ee3:	mov    DWORD PTR [ebp-0x4c],ebx
10023ee6:	mov    DWORD PTR [ebp-0x58],ebx
10023ee9:	mov    DWORD PTR [ebp-0x5c],ebx
10023eec:	mov    DWORD PTR [ebp-0x60],ebx
10023eef:	mov    DWORD PTR [ebp-0x64],ebx
10023ef2:	mov    DWORD PTR [ebp-0x50],ebx
10023ef5:	mov    DWORD PTR [ebp-0x6c],ebx
10023ef8:	jne    0x10023f19
10023efa:	call   0x1001a18e
10023eff:	push   ebx
10023f00:	push   ebx
10023f01:	push   ebx
10023f02:	push   ebx
10023f03:	push   ebx
10023f04:	mov    DWORD PTR [eax],0x16
10023f0a:	call   0x1001616f
10023f0f:	add    esp,0x14
10023f12:	xor    eax,eax
10023f14:	jmp    0x10024532
10023f19:	mov    edx,DWORD PTR [ebp+0x10]
10023f1c:	mov    DWORD PTR [ebp-0x54],edx
10023f1f:	mov    al,BYTE PTR [edx]
10023f21:	cmp    al,0x20
10023f23:	je     0x10023f31
10023f25:	cmp    al,0x9
10023f27:	je     0x10023f31
10023f29:	cmp    al,0xa
10023f2b:	je     0x10023f31
10023f2d:	cmp    al,0xd
10023f2f:	jne    0x10023f34
10023f31:	inc    edx
10023f32:	jmp    0x10023f1f
10023f34:	mov    bl,0x30
10023f36:	mov    al,BYTE PTR [edx]
10023f38:	inc    edx
10023f39:	cmp    ecx,0xb
10023f3c:	ja     0x10024171
10023f42:	jmp    DWORD PTR [ecx*4+0x10024541]
10023f49:	mov    cl,al
10023f4b:	sub    cl,0x31
10023f4e:	cmp    cl,0x8
10023f51:	ja     0x10023f59
10023f53:	push   0x3
10023f55:	pop    ecx
10023f56:	dec    edx
10023f57:	jmp    0x10023f36
10023f59:	mov    ecx,DWORD PTR [ebp+0x24]
10023f5c:	mov    ecx,DWORD PTR [ecx]
10023f5e:	mov    ecx,DWORD PTR [ecx+0xbc]
10023f64:	mov    ecx,DWORD PTR [ecx]
10023f66:	cmp    al,BYTE PTR [ecx]
10023f68:	jne    0x10023f6f
10023f6a:	push   0x5
10023f6c:	pop    ecx
10023f6d:	jmp    0x10023f36
10023f6f:	movsx  eax,al
10023f72:	sub    eax,0x2b
10023f75:	je     0x10023f94
10023f77:	dec    eax
10023f78:	dec    eax
10023f79:	je     0x10023f88
10023f7b:	sub    eax,0x3
10023f7e:	jne    0x1002410f
10023f84:	mov    ecx,esi
10023f86:	jmp    0x10023f36
10023f88:	push   0x2
10023f8a:	pop    ecx
10023f8b:	mov    DWORD PTR [ebp-0x74],0x8000
10023f92:	jmp    0x10023f36
10023f94:	and    DWORD PTR [ebp-0x74],0x0
10023f98:	push   0x2
10023f9a:	pop    ecx
10023f9b:	jmp    0x10023f36
10023f9d:	mov    cl,al
10023f9f:	sub    cl,0x31
10023fa2:	cmp    cl,0x8
10023fa5:	mov    DWORD PTR [ebp-0x58],esi
10023fa8:	jbe    0x10023f53
10023faa:	mov    ecx,DWORD PTR [ebp+0x24]
10023fad:	mov    ecx,DWORD PTR [ecx]
10023faf:	mov    ecx,DWORD PTR [ecx+0xbc]
10023fb5:	mov    ecx,DWORD PTR [ecx]
10023fb7:	cmp    al,BYTE PTR [ecx]
10023fb9:	jne    0x10023fbf
10023fbb:	push   0x4
10023fbd:	jmp    0x10023f6c
10023fbf:	cmp    al,0x2b
10023fc1:	je     0x10023feb
10023fc3:	cmp    al,0x2d
10023fc5:	je     0x10023feb
10023fc7:	cmp    al,bl
10023fc9:	je     0x10023f84
10023fcb:	cmp    al,0x43
10023fcd:	jle    0x1002410f
10023fd3:	cmp    al,0x45
10023fd5:	jle    0x10023fe7
10023fd7:	cmp    al,0x63
10023fd9:	jle    0x1002410f
10023fdf:	cmp    al,0x65
10023fe1:	jg     0x1002410f
10023fe7:	push   0x6
10023fe9:	jmp    0x10023f6c
10023feb:	dec    edx
10023fec:	push   0xb
10023fee:	jmp    0x10023f6c
10023ff3:	mov    cl,al
10023ff5:	sub    cl,0x31
10023ff8:	cmp    cl,0x8
10023ffb:	jbe    0x10023f53
10024001:	mov    ecx,DWORD PTR [ebp+0x24]
10024004:	mov    ecx,DWORD PTR [ecx]
10024006:	mov    ecx,DWORD PTR [ecx+0xbc]
1002400c:	mov    ecx,DWORD PTR [ecx]
1002400e:	cmp    al,BYTE PTR [ecx]
10024010:	je     0x10023f6a
10024016:	cmp    al,bl
10024018:	je     0x10023f84
1002401e:	mov    edx,DWORD PTR [ebp-0x54]
10024021:	jmp    0x1002413a
10024026:	mov    DWORD PTR [ebp-0x58],esi
10024029:	jmp    0x10024045
1002402b:	cmp    al,0x39
1002402d:	jg     0x10024049
1002402f:	cmp    DWORD PTR [ebp-0x4c],0x19
10024033:	jae    0x1002403f
10024035:	inc    DWORD PTR [ebp-0x4c]
10024038:	sub    al,bl
1002403a:	mov    BYTE PTR [edi],al
1002403c:	inc    edi
1002403d:	jmp    0x10024042
1002403f:	inc    DWORD PTR [ebp-0x50]
10024042:	mov    al,BYTE PTR [edx]
10024044:	inc    edx
10024045:	cmp    al,bl
10024047:	jge    0x1002402b
10024049:	mov    ecx,DWORD PTR [ebp+0x24]
1002404c:	mov    ecx,DWORD PTR [ecx]
1002404e:	mov    ecx,DWORD PTR [ecx+0xbc]
10024054:	mov    ecx,DWORD PTR [ecx]
10024056:	cmp    al,BYTE PTR [ecx]
10024058:	je     0x10023fbb
1002405e:	cmp    al,0x2b
10024060:	je     0x10023feb
10024062:	cmp    al,0x2d
10024064:	je     0x10023feb
10024066:	jmp    0x10023fcb
1002406b:	cmp    DWORD PTR [ebp-0x4c],0x0
1002406f:	mov    DWORD PTR [ebp-0x58],esi
10024072:	mov    DWORD PTR [ebp-0x5c],esi
10024075:	jne    0x1002409d
10024077:	jmp    0x1002407f
10024079:	dec    DWORD PTR [ebp-0x50]
1002407c:	mov    al,BYTE PTR [edx]
1002407e:	inc    edx
1002407f:	cmp    al,bl
10024081:	je     0x10024079
10024083:	jmp    0x1002409d
10024085:	cmp    al,0x39
10024087:	jg     0x1002405e
10024089:	cmp    DWORD PTR [ebp-0x4c],0x19
1002408d:	jae    0x1002409a
1002408f:	inc    DWORD PTR [ebp-0x4c]
10024092:	sub    al,bl
10024094:	mov    BYTE PTR [edi],al
10024096:	inc    edi
10024097:	dec    DWORD PTR [ebp-0x50]
1002409a:	mov    al,BYTE PTR [edx]
1002409c:	inc    edx
1002409d:	cmp    al,bl
1002409f:	jge    0x10024085
100240a1:	jmp    0x1002405e
100240a3:	sub    al,bl
100240a5:	cmp    al,0x9
100240a7:	mov    DWORD PTR [ebp-0x5c],esi
100240aa:	ja     0x1002401e
100240b0:	push   0x4
100240b2:	jmp    0x10023f55
100240b7:	lea    ecx,[edx-0x2]
100240ba:	mov    DWORD PTR [ebp-0x54],ecx
100240bd:	mov    cl,al
100240bf:	sub    cl,0x31
100240c2:	cmp    cl,0x8
100240c5:	ja     0x100240ce
100240c7:	push   0x9
100240c9:	jmp    0x10023f55
100240ce:	movsx  eax,al
100240d1:	sub    eax,0x2b
100240d4:	je     0x100240f6
100240d6:	dec    eax
100240d7:	dec    eax
100240d8:	je     0x100240ea
100240da:	sub    eax,0x3
100240dd:	jne    0x1002401e
100240e3:	push   0x8
100240e5:	jmp    0x10023f6c
100240ea:	or     DWORD PTR [ebp-0x68],0xffffffff
100240ee:	push   0x7
100240f0:	pop    ecx
100240f1:	jmp    0x10023f36
100240f6:	push   0x7
100240f8:	jmp    0x10023f6c
100240fd:	mov    DWORD PTR [ebp-0x60],esi
10024100:	jmp    0x10024105
10024102:	mov    al,BYTE PTR [edx]
10024104:	inc    edx
10024105:	cmp    al,bl
10024107:	je     0x10024102
10024109:	sub    al,0x31
1002410b:	cmp    al,0x8
1002410d:	jbe    0x100240c7
1002410f:	dec    edx
10024110:	jmp    0x1002413a
10024112:	mov    cl,al
10024114:	sub    cl,0x31
10024117:	cmp    cl,0x8
1002411a:	jbe    0x100240c7
1002411c:	cmp    al,bl
1002411e:	jmp    0x100240dd
10024120:	cmp    DWORD PTR [ebp+0x20],0x0
10024124:	je     0x1002416d
10024126:	movsx  eax,al
10024129:	sub    eax,0x2b
1002412c:	lea    ecx,[edx-0x1]
1002412f:	mov    DWORD PTR [ebp-0x54],ecx
10024132:	je     0x100240f6
10024134:	dec    eax
10024135:	dec    eax
10024136:	je     0x100240ea
10024138:	mov    edx,ecx
1002413a:	cmp    DWORD PTR [ebp-0x58],0x0
1002413e:	mov    eax,DWORD PTR [ebp-0x70]
10024141:	mov    DWORD PTR [eax],edx
10024143:	je     0x100244ed
10024149:	push   0x18
1002414b:	pop    eax
1002414c:	cmp    DWORD PTR [ebp-0x4c],eax
1002414f:	jbe    0x10024161
10024151:	cmp    BYTE PTR [ebp-0x9],0x5
10024155:	jl     0x1002415a
10024157:	inc    BYTE PTR [ebp-0x9]
1002415a:	dec    edi
1002415b:	inc    DWORD PTR [ebp-0x50]
1002415e:	mov    DWORD PTR [ebp-0x4c],eax
10024161:	cmp    DWORD PTR [ebp-0x4c],0x0
10024165:	jbe    0x10024514
1002416b:	jmp    0x100241c6
1002416d:	push   0xa
1002416f:	pop    ecx
10024170:	dec    edx
10024171:	cmp    ecx,0xa
10024174:	jne    0x10023f36
1002417a:	jmp    0x1002413a
1002417c:	mov    DWORD PTR [ebp-0x60],esi
1002417f:	xor    ecx,ecx
10024181:	jmp    0x1002419c
10024183:	cmp    al,0x39
10024185:	jg     0x100241a7
10024187:	imul   ecx,ecx,0xa
1002418a:	movsx  esi,al
1002418d:	lea    ecx,[ecx+esi*1-0x30]
10024191:	cmp    ecx,0x1450
10024197:	jg     0x100241a2
10024199:	mov    al,BYTE PTR [edx]
1002419b:	inc    edx
1002419c:	cmp    al,bl
1002419e:	jge    0x10024183
100241a0:	jmp    0x100241a7
100241a2:	mov    ecx,0x1451
100241a7:	mov    DWORD PTR [ebp-0x64],ecx
100241aa:	jmp    0x100241b7
100241ac:	cmp    al,0x39
100241ae:	jg     0x1002410f
100241b4:	mov    al,BYTE PTR [edx]
100241b6:	inc    edx
100241b7:	cmp    al,bl
100241b9:	jge    0x100241ac
100241bb:	jmp    0x1002410f
100241c0:	dec    DWORD PTR [ebp-0x4c]
100241c3:	inc    DWORD PTR [ebp-0x50]
100241c6:	dec    edi
100241c7:	cmp    BYTE PTR [edi],0x0
100241ca:	je     0x100241c0
100241cc:	lea    eax,[ebp-0x3c]
100241cf:	push   eax
100241d0:	push   DWORD PTR [ebp-0x4c]
100241d3:	lea    eax,[ebp-0x20]
100241d6:	push   eax
100241d7:	call   0x100233af
100241dc:	mov    eax,DWORD PTR [ebp-0x64]
100241df:	xor    ecx,ecx
100241e1:	add    esp,0xc
100241e4:	cmp    DWORD PTR [ebp-0x68],ecx
100241e7:	jge    0x100241eb
100241e9:	neg    eax
100241eb:	add    eax,DWORD PTR [ebp-0x50]
100241ee:	cmp    DWORD PTR [ebp-0x60],ecx
100241f1:	jne    0x100241f6
100241f3:	add    eax,DWORD PTR [ebp+0x18]
100241f6:	cmp    DWORD PTR [ebp-0x5c],ecx
100241f9:	jne    0x100241fe
100241fb:	sub    eax,DWORD PTR [ebp+0x1c]
100241fe:	cmp    eax,0x1450
10024203:	jg     0x100244f6
10024209:	cmp    eax,0xffffebb0
1002420e:	jl     0x1002450d
10024214:	mov    esi,0x100961d0
10024219:	sub    esi,0x60
1002421c:	cmp    eax,ecx
1002421e:	mov    DWORD PTR [ebp-0x54],eax
10024221:	je     0x100244db
10024227:	jge    0x10024236
10024229:	neg    eax
1002422b:	mov    esi,0x10096330
10024230:	mov    DWORD PTR [ebp-0x54],eax
10024233:	sub    esi,0x60
10024236:	cmp    DWORD PTR [ebp+0x14],ecx
10024239:	jne    0x1002423f
1002423b:	mov    WORD PTR [ebp-0x3c],cx
1002423f:	cmp    DWORD PTR [ebp-0x54],ecx
10024242:	je     0x100244db
10024248:	mov    eax,DWORD PTR [ebp-0x54]
1002424b:	sar    DWORD PTR [ebp-0x54],0x3
1002424f:	add    esi,0x54
10024252:	and    eax,0x7
10024255:	test   eax,eax
10024257:	mov    DWORD PTR [ebp-0x4c],esi
1002425a:	je     0x100244d1
10024260:	imul   eax,eax,0xc
10024263:	add    eax,esi
10024265:	mov    ebx,eax
10024267:	cmp    WORD PTR [ebx],0x8000
1002426c:	mov    DWORD PTR [ebp-0x70],ebx
1002426f:	jb     0x10024285
10024271:	mov    esi,ebx
10024273:	lea    edi,[ebp-0x48]
10024276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024279:	dec    DWORD PTR [ebp-0x46]
1002427c:	mov    esi,DWORD PTR [ebp-0x4c]
1002427f:	lea    ebx,[ebp-0x48]
10024282:	mov    DWORD PTR [ebp-0x70],ebx
10024285:	movzx  edx,WORD PTR [ebx+0xa]
10024289:	mov    ecx,DWORD PTR [ebp-0x32]
1002428c:	xor    eax,eax
1002428e:	mov    DWORD PTR [ebp-0x50],eax
10024291:	mov    DWORD PTR [ebp-0x2c],eax
10024294:	mov    DWORD PTR [ebp-0x28],eax
10024297:	mov    DWORD PTR [ebp-0x24],eax
1002429a:	mov    eax,edx
1002429c:	mov    edi,0x7fff
100242a1:	xor    eax,ecx
100242a3:	and    ecx,edi
100242a5:	and    edx,edi
100242a7:	and    eax,0x8000
100242ac:	cmp    cx,0x7fff
100242b1:	lea    edi,[edx+ecx*1]
100242b4:	movzx  edi,di
100242b7:	jae    0x100244b7
100242bd:	cmp    dx,0x7fff
100242c2:	jae    0x100244b7
100242c8:	cmp    di,0xbffd
100242cd:	ja     0x100244b7
100242d3:	cmp    di,0x3fbf
100242d8:	ja     0x100242e7
100242da:	xor    eax,eax
100242dc:	mov    DWORD PTR [ebp-0x38],eax
100242df:	mov    DWORD PTR [ebp-0x3c],eax
100242e2:	jmp    0x100244ce
100242e7:	test   cx,cx
100242ea:	jne    0x1002430b
100242ec:	inc    edi
100242ed:	test   DWORD PTR [ebp-0x34],0x7fffffff
100242f4:	jne    0x1002430b
100242f6:	cmp    DWORD PTR [ebp-0x38],0x0
100242fa:	jne    0x1002430b
100242fc:	cmp    DWORD PTR [ebp-0x3c],0x0
10024300:	jne    0x1002430b
10024302:	and    WORD PTR [ebp-0x32],cx
10024306:	jmp    0x100244d1
1002430b:	xor    ecx,ecx
1002430d:	cmp    dx,cx
10024310:	jne    0x10024333
10024312:	inc    edi
10024313:	test   DWORD PTR [ebx+0x8],0x7fffffff
1002431a:	jne    0x10024333
1002431c:	cmp    DWORD PTR [ebx+0x4],ecx
1002431f:	jne    0x10024333
10024321:	cmp    DWORD PTR [ebx],ecx
10024323:	jne    0x10024333
10024325:	mov    DWORD PTR [ebp-0x34],ecx
10024328:	mov    DWORD PTR [ebp-0x38],ecx
1002432b:	mov    DWORD PTR [ebp-0x3c],ecx
1002432e:	jmp    0x100244d1
10024333:	and    DWORD PTR [ebp-0x68],ecx
10024336:	lea    esi,[ebp-0x28]
10024339:	mov    DWORD PTR [ebp-0x58],0x5
10024340:	mov    ecx,DWORD PTR [ebp-0x68]
10024343:	mov    edx,DWORD PTR [ebp-0x58]
10024346:	add    ecx,ecx
10024348:	test   edx,edx
1002434a:	mov    DWORD PTR [ebp-0x64],edx
1002434d:	jle    0x100243a4
1002434f:	lea    ecx,[ebp+ecx*1-0x3c]
10024353:	add    ebx,0x8
10024356:	mov    DWORD PTR [ebp-0x5c],ecx
10024359:	mov    DWORD PTR [ebp-0x60],ebx
1002435c:	mov    ecx,DWORD PTR [ebp-0x60]
1002435f:	mov    edx,DWORD PTR [ebp-0x5c]
10024362:	movzx  edx,WORD PTR [edx]
10024365:	movzx  ecx,WORD PTR [ecx]
10024368:	and    DWORD PTR [ebp-0x78],0x0
1002436c:	imul   ecx,edx
1002436f:	mov    edx,DWORD PTR [esi-0x4]
10024372:	lea    ebx,[edx+ecx*1]
10024375:	cmp    ebx,edx
10024377:	jb     0x1002437d
10024379:	cmp    ebx,ecx
1002437b:	jae    0x10024384
1002437d:	mov    DWORD PTR [ebp-0x78],0x1
10024384:	cmp    DWORD PTR [ebp-0x78],0x0
10024388:	mov    DWORD PTR [esi-0x4],ebx
1002438b:	je     0x10024390
1002438d:	inc    WORD PTR [esi]
10024390:	add    DWORD PTR [ebp-0x5c],0x2
10024394:	sub    DWORD PTR [ebp-0x60],0x2
10024398:	dec    DWORD PTR [ebp-0x64]
1002439b:	cmp    DWORD PTR [ebp-0x64],0x0
1002439f:	jg     0x1002435c
100243a1:	mov    ebx,DWORD PTR [ebp-0x70]
100243a4:	inc    esi
100243a5:	inc    esi
100243a6:	inc    DWORD PTR [ebp-0x68]
100243a9:	dec    DWORD PTR [ebp-0x58]
100243ac:	cmp    DWORD PTR [ebp-0x58],0x0
100243b0:	jg     0x10024340
100243b2:	add    edi,0xc002
100243b8:	test   di,di
100243bb:	jle    0x100243f8
100243bd:	test   DWORD PTR [ebp-0x24],0x80000000
100243c4:	jne    0x100243f3
100243c6:	mov    esi,DWORD PTR [ebp-0x28]
100243c9:	mov    ecx,DWORD PTR [ebp-0x2c]
100243cc:	shl    DWORD PTR [ebp-0x2c],1
100243cf:	shr    ecx,0x1f
100243d2:	mov    edx,esi
100243d4:	add    esi,esi
100243d6:	or     esi,ecx
100243d8:	mov    ecx,DWORD PTR [ebp-0x24]
100243db:	shr    edx,0x1f
100243de:	add    ecx,ecx
100243e0:	or     ecx,edx
100243e2:	add    edi,0xffff
100243e8:	test   di,di
100243eb:	mov    DWORD PTR [ebp-0x28],esi
100243ee:	mov    DWORD PTR [ebp-0x24],ecx
100243f1:	jg     0x100243bd
100243f3:	test   di,di
100243f6:	jg     0x10024445
100243f8:	add    edi,0xffff
100243fe:	test   di,di
10024401:	jge    0x10024445
10024403:	mov    ecx,edi
10024405:	neg    ecx
10024407:	movzx  esi,cx
1002440a:	add    edi,esi
1002440c:	test   BYTE PTR [ebp-0x2c],0x1
10024410:	je     0x10024415
10024412:	inc    DWORD PTR [ebp-0x50]
10024415:	mov    ecx,DWORD PTR [ebp-0x24]
10024418:	mov    ebx,DWORD PTR [ebp-0x28]
1002441b:	mov    edx,DWORD PTR [ebp-0x28]
1002441e:	shr    DWORD PTR [ebp-0x24],1
10024421:	shl    ecx,0x1f
10024424:	shr    ebx,1
10024426:	or     ebx,ecx
10024428:	mov    ecx,DWORD PTR [ebp-0x2c]
1002442b:	shl    edx,0x1f
1002442e:	shr    ecx,1
10024430:	or     ecx,edx
10024432:	dec    esi
10024433:	mov    DWORD PTR [ebp-0x28],ebx
10024436:	mov    DWORD PTR [ebp-0x2c],ecx
10024439:	jne    0x1002440c
1002443b:	cmp    DWORD PTR [ebp-0x50],esi
1002443e:	je     0x10024445
10024440:	or     WORD PTR [ebp-0x2c],0x1
10024445:	cmp    WORD PTR [ebp-0x2c],0x8000
1002444b:	ja     0x1002445e
1002444d:	mov    ecx,DWORD PTR [ebp-0x2c]
10024450:	and    ecx,0x1ffff
10024456:	cmp    ecx,0x18000
1002445c:	jne    0x10024491
1002445e:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
10024462:	jne    0x1002448e
10024464:	and    DWORD PTR [ebp-0x2a],0x0
10024468:	cmp    DWORD PTR [ebp-0x26],0xffffffff
1002446c:	jne    0x10024489
1002446e:	and    DWORD PTR [ebp-0x26],0x0
10024472:	cmp    WORD PTR [ebp-0x22],0xffff
10024478:	jne    0x10024483
1002447a:	mov    WORD PTR [ebp-0x22],0x8000
10024480:	inc    edi
10024481:	jmp    0x10024491
10024483:	inc    WORD PTR [ebp-0x22]
10024487:	jmp    0x10024491
10024489:	inc    DWORD PTR [ebp-0x26]
1002448c:	jmp    0x10024491
1002448e:	inc    DWORD PTR [ebp-0x2a]
10024491:	cmp    di,0x7fff
10024496:	mov    esi,DWORD PTR [ebp-0x4c]
10024499:	jae    0x100244b7
1002449b:	mov    cx,WORD PTR [ebp-0x2a]
1002449f:	mov    WORD PTR [ebp-0x3c],cx
100244a3:	mov    ecx,DWORD PTR [ebp-0x28]
100244a6:	mov    DWORD PTR [ebp-0x3a],ecx
100244a9:	mov    ecx,DWORD PTR [ebp-0x24]
100244ac:	or     edi,eax
100244ae:	mov    DWORD PTR [ebp-0x36],ecx
100244b1:	mov    WORD PTR [ebp-0x32],di
100244b5:	jmp    0x100244d1
100244b7:	neg    ax
100244ba:	sbb    eax,eax
100244bc:	and    DWORD PTR [ebp-0x38],0x0
100244c0:	and    eax,0x80000000
100244c5:	add    eax,0x7fff8000
100244ca:	and    DWORD PTR [ebp-0x3c],0x0
100244ce:	mov    DWORD PTR [ebp-0x34],eax
100244d1:	cmp    DWORD PTR [ebp-0x54],0x0
100244d5:	jne    0x10024248
100244db:	mov    eax,DWORD PTR [ebp-0x34]
100244de:	movzx  ecx,WORD PTR [ebp-0x3c]
100244e2:	mov    esi,DWORD PTR [ebp-0x3a]
100244e5:	mov    edx,DWORD PTR [ebp-0x36]
100244e8:	shr    eax,0x10
100244eb:	jmp    0x1002451c
100244ed:	mov    DWORD PTR [ebp-0x6c],0x4
100244f4:	jmp    0x10024514
100244f6:	xor    esi,esi
100244f8:	mov    eax,0x7fff
100244fd:	mov    edx,0x80000000
10024502:	xor    ecx,ecx
10024504:	mov    DWORD PTR [ebp-0x6c],0x2
1002450b:	jmp    0x1002451c
1002450d:	mov    DWORD PTR [ebp-0x6c],0x1
10024514:	xor    ecx,ecx
10024516:	xor    eax,eax
10024518:	xor    edx,edx
1002451a:	xor    esi,esi
1002451c:	mov    edi,DWORD PTR [ebp-0x7c]
1002451f:	or     eax,DWORD PTR [ebp-0x74]
10024522:	mov    WORD PTR [edi],cx
10024525:	mov    WORD PTR [edi+0xa],ax
10024529:	mov    eax,DWORD PTR [ebp-0x6c]
1002452c:	mov    DWORD PTR [edi+0x2],esi
1002452f:	mov    DWORD PTR [edi+0x6],edx
10024532:	mov    ecx,DWORD PTR [ebp-0x4]
10024535:	pop    edi
10024536:	pop    esi
10024537:	xor    ecx,ebp
10024539:	pop    ebx
1002453a:	call   0x10015b2b
1002453f:	leave  
10024540:	ret    
10024541:	dec    ecx
10024542:	aas    
10024543:	add    dl,BYTE PTR [eax]
10024545:	popf   
10024546:	aas    
10024547:	add    dl,BYTE PTR [eax]
10024549:	repz aas 
1002454b:	add    dl,BYTE PTR [eax]
1002454d:	es inc eax
1002454f:	add    dl,BYTE PTR [eax]
10024551:	imul   eax,DWORD PTR [eax+0x2],0x10
10024555:	mov    ds:0xb7100240,eax
1002455a:	inc    eax
1002455b:	add    dl,BYTE PTR [eax]
1002455d:	adc    al,BYTE PTR [ecx+0x2]
10024560:	adc    ch,bh
10024562:	inc    eax
10024563:	add    dl,BYTE PTR [eax]
10024565:	jl     0x100245a8
10024567:	add    dl,BYTE PTR [eax]
10024569:	jno    0x100245ac
1002456b:	add    dl,BYTE PTR [eax]
1002456d:	and    BYTE PTR [ecx+0x2],al
10024570:	adc    BYTE PTR [ebp-0x75],dl
10024573:	in     al,dx
10024574:	sub    esp,0x74
10024577:	mov    eax,ds:0x100951fc
1002457c:	xor    eax,ebp
1002457e:	mov    DWORD PTR [ebp-0x4],eax
10024581:	push   ebx
10024582:	mov    ebx,DWORD PTR [ebp+0x1c]
10024585:	push   esi
10024586:	push   edi
10024587:	lea    esi,[ebp+0x8]
1002458a:	lea    edi,[ebp-0x10]
1002458d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002458e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002458f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
10024591:	mov    edx,DWORD PTR [ebp-0x8]
10024594:	mov    ecx,edx
10024596:	mov    eax,0x8000
1002459b:	and    ecx,eax
1002459d:	and    edx,0x7fff
100245a3:	test   cx,cx
100245a6:	mov    DWORD PTR [ebp-0x60],ebx
100245a9:	mov    BYTE PTR [ebp-0x30],0xcc
100245ad:	mov    BYTE PTR [ebp-0x2f],0xcc
100245b1:	mov    BYTE PTR [ebp-0x2e],0xcc
100245b5:	mov    BYTE PTR [ebp-0x2d],0xcc
100245b9:	mov    BYTE PTR [ebp-0x2c],0xcc
100245bd:	mov    BYTE PTR [ebp-0x2b],0xcc
100245c1:	mov    BYTE PTR [ebp-0x2a],0xcc
100245c5:	mov    BYTE PTR [ebp-0x29],0xcc
100245c9:	mov    BYTE PTR [ebp-0x28],0xcc
100245cd:	mov    BYTE PTR [ebp-0x27],0xcc
100245d1:	mov    BYTE PTR [ebp-0x26],0xfb
100245d5:	mov    BYTE PTR [ebp-0x25],0x3f
100245d9:	mov    DWORD PTR [ebp-0x74],0x1
100245e0:	mov    DWORD PTR [ebp-0x6c],ecx
100245e3:	je     0x100245eb
100245e5:	mov    BYTE PTR [ebx+0x2],0x2d
100245e9:	jmp    0x100245ef
100245eb:	mov    BYTE PTR [ebx+0x2],0x20
100245ef:	test   dx,dx
100245f2:	mov    esi,DWORD PTR [ebp-0xc]
100245f5:	mov    edi,DWORD PTR [ebp-0x10]
100245f8:	jne    0x10024628
100245fa:	test   esi,esi
100245fc:	jne    0x10024628
100245fe:	test   edi,edi
10024600:	jne    0x10024628
10024602:	and    WORD PTR [ebx],di
10024605:	cmp    cx,ax
10024608:	setne  al
1002460b:	dec    al
1002460d:	and    al,0xd
1002460f:	add    al,0x20
10024611:	mov    BYTE PTR [ebx+0x2],al
10024614:	mov    BYTE PTR [ebx+0x3],0x1
10024618:	mov    BYTE PTR [ebx+0x4],0x30
1002461c:	mov    BYTE PTR [ebx+0x5],0x0
10024620:	xor    eax,eax
10024622:	inc    eax
10024623:	jmp    0x10024def
10024628:	cmp    dx,0x7fff
1002462d:	jne    0x100246d1
10024633:	mov    eax,0x80000000
10024638:	cmp    esi,eax
1002463a:	mov    WORD PTR [ebx],0x1
1002463f:	jne    0x10024645
10024641:	test   edi,edi
10024643:	je     0x10024654
10024645:	test   esi,0x40000000
1002464b:	jne    0x10024654
1002464d:	push   0x1007ef88
10024652:	jmp    0x100246a5
10024654:	test   cx,cx
10024657:	je     0x1002466c
10024659:	cmp    esi,0xc0000000
1002465f:	jne    0x1002466c
10024661:	test   edi,edi
10024663:	jne    0x100246a0
10024665:	push   0x1007ef80
1002466a:	jmp    0x10024679
1002466c:	cmp    esi,eax
1002466e:	jne    0x100246a0
10024670:	test   edi,edi
10024672:	jne    0x100246a0
10024674:	push   0x1007ef78
10024679:	lea    eax,[ebx+0x4]
1002467c:	push   0x16
1002467e:	push   eax
1002467f:	call   0x1001a2d8
10024684:	add    esp,0xc
10024687:	xor    esi,esi
10024689:	test   eax,eax
1002468b:	je     0x1002469a
1002468d:	push   esi
1002468e:	push   esi
1002468f:	push   esi
10024690:	push   esi
10024691:	push   esi
10024692:	call   0x10016073
10024697:	add    esp,0x14
1002469a:	mov    BYTE PTR [ebx+0x3],0x5
1002469e:	jmp    0x100246ca
100246a0:	push   0x1007ef70
100246a5:	lea    eax,[ebx+0x4]
100246a8:	push   0x16
100246aa:	push   eax
100246ab:	call   0x1001a2d8
100246b0:	add    esp,0xc
100246b3:	xor    esi,esi
100246b5:	test   eax,eax
100246b7:	je     0x100246c6
100246b9:	push   esi
100246ba:	push   esi
100246bb:	push   esi
100246bc:	push   esi
100246bd:	push   esi
100246be:	call   0x10016073
100246c3:	add    esp,0x14
100246c6:	mov    BYTE PTR [ebx+0x3],0x6
100246ca:	xor    eax,eax
100246cc:	jmp    0x10024def
100246d1:	movzx  ecx,dx
100246d4:	mov    ebx,ecx
100246d6:	imul   ecx,ecx,0x4d10
100246dc:	shr    ebx,0x8
100246df:	mov    eax,esi
100246e1:	shr    eax,0x18
100246e4:	lea    eax,[ebx+eax*2]
100246e7:	imul   eax,eax,0x4d
100246ea:	lea    eax,[eax+ecx*1-0x134312f4]
100246f1:	sar    eax,0x10
100246f4:	movzx  ecx,ax
100246f7:	movsx  ebx,cx
100246fa:	mov    DWORD PTR [ebp-0x4c],ecx
100246fd:	xor    eax,eax
100246ff:	mov    ecx,0x100961d0
10024704:	neg    ebx
10024706:	sub    ecx,0x60
10024709:	cmp    ebx,eax
1002470b:	mov    WORD PTR [ebp-0x16],dx
1002470f:	mov    DWORD PTR [ebp-0x1a],esi
10024712:	mov    DWORD PTR [ebp-0x1e],edi
10024715:	mov    WORD PTR [ebp-0x20],ax
10024719:	mov    DWORD PTR [ebp-0x68],ecx
1002471c:	je     0x100249d0
10024722:	jge    0x10024731
10024724:	mov    ecx,0x10096330
10024729:	neg    ebx
1002472b:	sub    ecx,0x60
1002472e:	mov    DWORD PTR [ebp-0x68],ecx
10024731:	cmp    ebx,eax
10024733:	je     0x100249d0
10024739:	add    DWORD PTR [ebp-0x68],0x54
1002473d:	mov    ecx,ebx
1002473f:	and    ecx,0x7
10024742:	sar    ebx,0x3
10024745:	test   ecx,ecx
10024747:	je     0x100249c6
1002474d:	imul   ecx,ecx,0xc
10024750:	add    ecx,DWORD PTR [ebp-0x68]
10024753:	cmp    WORD PTR [ecx],0x8000
10024758:	mov    DWORD PTR [ebp-0x64],ecx
1002475b:	jb     0x10024770
1002475d:	mov    esi,ecx
1002475f:	lea    edi,[ebp-0x3c]
10024762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024764:	lea    eax,[ebp-0x3c]
10024767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024768:	dec    DWORD PTR [ebp-0x3a]
1002476b:	mov    DWORD PTR [ebp-0x64],eax
1002476e:	mov    ecx,eax
10024770:	movzx  edi,WORD PTR [ecx+0xa]
10024774:	mov    edx,DWORD PTR [ebp-0x16]
10024777:	xor    eax,eax
10024779:	mov    ecx,edi
1002477b:	mov    esi,0x7fff
10024780:	xor    ecx,edx
10024782:	and    edx,esi
10024784:	and    edi,esi
10024786:	mov    DWORD PTR [ebp-0x48],eax
10024789:	mov    DWORD PTR [ebp-0x10],eax
1002478c:	mov    DWORD PTR [ebp-0xc],eax
1002478f:	mov    DWORD PTR [ebp-0x8],eax
10024792:	and    ecx,0x8000
10024798:	cmp    dx,si
1002479b:	lea    eax,[edi+edx*1]
1002479e:	movzx  eax,ax
100247a1:	jae    0x100249aa
100247a7:	cmp    di,si
100247aa:	jae    0x100249aa
100247b0:	cmp    ax,0xbffd
100247b4:	ja     0x100249aa
100247ba:	cmp    ax,0x3fbf
100247be:	ja     0x100247d0
100247c0:	xor    eax,eax
100247c2:	mov    DWORD PTR [ebp-0x18],eax
100247c5:	mov    DWORD PTR [ebp-0x1c],eax
100247c8:	mov    DWORD PTR [ebp-0x20],eax
100247cb:	jmp    0x100249c6
100247d0:	xor    esi,esi
100247d2:	cmp    dx,si
100247d5:	jne    0x100247f4
100247d7:	inc    eax
100247d8:	test   DWORD PTR [ebp-0x18],0x7fffffff
100247df:	jne    0x100247f4
100247e1:	cmp    DWORD PTR [ebp-0x1c],esi
100247e4:	jne    0x100247f4
100247e6:	cmp    DWORD PTR [ebp-0x20],esi
100247e9:	jne    0x100247f4
100247eb:	mov    WORD PTR [ebp-0x16],si
100247ef:	jmp    0x100249c6
100247f4:	cmp    di,si
100247f7:	jne    0x1002481d
100247f9:	mov    edx,DWORD PTR [ebp-0x64]
100247fc:	inc    eax
100247fd:	test   DWORD PTR [edx+0x8],0x7fffffff
10024804:	jne    0x1002481d
10024806:	cmp    DWORD PTR [edx+0x4],esi
10024809:	jne    0x1002481d
1002480b:	cmp    DWORD PTR [edx],esi
1002480d:	jne    0x1002481d
1002480f:	mov    DWORD PTR [ebp-0x18],esi
10024812:	mov    DWORD PTR [ebp-0x1c],esi
10024815:	mov    DWORD PTR [ebp-0x20],esi
10024818:	jmp    0x100249c6
1002481d:	lea    edi,[ebp-0xc]
10024820:	mov    DWORD PTR [ebp-0x5c],esi
10024823:	mov    DWORD PTR [ebp-0x44],edi
10024826:	mov    DWORD PTR [ebp-0x40],0x5
1002482d:	mov    edx,DWORD PTR [ebp-0x5c]
10024830:	mov    esi,DWORD PTR [ebp-0x40]
10024833:	add    edx,edx
10024835:	test   esi,esi
10024837:	mov    DWORD PTR [ebp-0x50],esi
1002483a:	jle    0x10024894
1002483c:	lea    edx,[ebp+edx*1-0x20]
10024840:	mov    DWORD PTR [ebp-0x58],edx
10024843:	mov    edx,DWORD PTR [ebp-0x64]
10024846:	add    edx,0x8
10024849:	mov    DWORD PTR [ebp-0x54],edx
1002484c:	mov    edx,DWORD PTR [ebp-0x58]
1002484f:	mov    esi,DWORD PTR [ebp-0x54]
10024852:	movzx  esi,WORD PTR [esi]
10024855:	movzx  edx,WORD PTR [edx]
10024858:	mov    edi,DWORD PTR [edi-0x4]
1002485b:	imul   edx,esi
1002485e:	and    DWORD PTR [ebp-0x70],0x0
10024862:	lea    esi,[edi+edx*1]
10024865:	cmp    esi,edi
10024867:	jb     0x1002486d
10024869:	cmp    esi,edx
1002486b:	jae    0x10024874
1002486d:	mov    DWORD PTR [ebp-0x70],0x1
10024874:	cmp    DWORD PTR [ebp-0x70],0x0
10024878:	mov    edi,DWORD PTR [ebp-0x44]
1002487b:	mov    DWORD PTR [edi-0x4],esi
1002487e:	je     0x10024883
10024880:	inc    WORD PTR [edi]
10024883:	add    DWORD PTR [ebp-0x58],0x2
10024887:	sub    DWORD PTR [ebp-0x54],0x2
1002488b:	dec    DWORD PTR [ebp-0x50]
1002488e:	cmp    DWORD PTR [ebp-0x50],0x0
10024892:	jg     0x1002484c
10024894:	inc    edi
10024895:	inc    edi
10024896:	inc    DWORD PTR [ebp-0x5c]
10024899:	dec    DWORD PTR [ebp-0x40]
1002489c:	cmp    DWORD PTR [ebp-0x40],0x0
100248a0:	mov    DWORD PTR [ebp-0x44],edi
100248a3:	jg     0x1002482d
100248a5:	add    eax,0xc002
100248aa:	test   ax,ax
100248ad:	jle    0x100248ea
100248af:	test   DWORD PTR [ebp-0x8],0x80000000
100248b6:	jne    0x100248e5
100248b8:	mov    edx,DWORD PTR [ebp-0x10]
100248bb:	mov    edi,DWORD PTR [ebp-0xc]
100248be:	mov    esi,DWORD PTR [ebp-0xc]
100248c1:	shl    DWORD PTR [ebp-0x10],1
100248c4:	shr    edx,0x1f
100248c7:	add    edi,edi
100248c9:	or     edi,edx
100248cb:	mov    edx,DWORD PTR [ebp-0x8]
100248ce:	shr    esi,0x1f
100248d1:	add    edx,edx
100248d3:	or     edx,esi
100248d5:	add    eax,0xffff
100248da:	test   ax,ax
100248dd:	mov    DWORD PTR [ebp-0xc],edi
100248e0:	mov    DWORD PTR [ebp-0x8],edx
100248e3:	jg     0x100248af
100248e5:	test   ax,ax
100248e8:	jg     0x1002493c
100248ea:	add    eax,0xffff
100248ef:	test   ax,ax
100248f2:	jge    0x1002493c
100248f4:	mov    edx,eax
100248f6:	neg    edx
100248f8:	movzx  edx,dx
100248fb:	mov    DWORD PTR [ebp-0x44],edx
100248fe:	add    eax,edx
10024900:	test   BYTE PTR [ebp-0x10],0x1
10024904:	je     0x10024909
10024906:	inc    DWORD PTR [ebp-0x48]
10024909:	mov    edx,DWORD PTR [ebp-0x8]
1002490c:	mov    edi,DWORD PTR [ebp-0xc]
1002490f:	mov    esi,DWORD PTR [ebp-0xc]
10024912:	shr    DWORD PTR [ebp-0x8],1
10024915:	shl    edx,0x1f
10024918:	shr    edi,1
1002491a:	or     edi,edx
1002491c:	mov    edx,DWORD PTR [ebp-0x10]
1002491f:	shl    esi,0x1f
10024922:	shr    edx,1
10024924:	or     edx,esi
10024926:	dec    DWORD PTR [ebp-0x44]
10024929:	mov    DWORD PTR [ebp-0xc],edi
1002492c:	mov    DWORD PTR [ebp-0x10],edx
1002492f:	jne    0x10024900
10024931:	cmp    DWORD PTR [ebp-0x48],0x0
10024935:	je     0x1002493c
10024937:	or     WORD PTR [ebp-0x10],0x1
1002493c:	cmp    WORD PTR [ebp-0x10],0x8000
10024942:	ja     0x10024955
10024944:	mov    edx,DWORD PTR [ebp-0x10]
10024947:	and    edx,0x1ffff
1002494d:	cmp    edx,0x18000
10024953:	jne    0x10024988
10024955:	cmp    DWORD PTR [ebp-0xe],0xffffffff
10024959:	jne    0x10024985
1002495b:	and    DWORD PTR [ebp-0xe],0x0
1002495f:	cmp    DWORD PTR [ebp-0xa],0xffffffff
10024963:	jne    0x10024980
10024965:	and    DWORD PTR [ebp-0xa],0x0
10024969:	cmp    WORD PTR [ebp-0x6],0xffff
1002496f:	jne    0x1002497a
10024971:	mov    WORD PTR [ebp-0x6],0x8000
10024977:	inc    eax
10024978:	jmp    0x10024988
1002497a:	inc    WORD PTR [ebp-0x6]
1002497e:	jmp    0x10024988
10024980:	inc    DWORD PTR [ebp-0xa]
10024983:	jmp    0x10024988
10024985:	inc    DWORD PTR [ebp-0xe]
10024988:	cmp    ax,0x7fff
1002498c:	jae    0x100249aa
1002498e:	mov    dx,WORD PTR [ebp-0xe]
10024992:	mov    WORD PTR [ebp-0x20],dx
10024996:	mov    edx,DWORD PTR [ebp-0xc]
10024999:	mov    DWORD PTR [ebp-0x1e],edx
1002499c:	mov    edx,DWORD PTR [ebp-0x8]
1002499f:	or     eax,ecx
100249a1:	mov    DWORD PTR [ebp-0x1a],edx
100249a4:	mov    WORD PTR [ebp-0x16],ax
100249a8:	jmp    0x100249c6
100249aa:	neg    cx
100249ad:	sbb    ecx,ecx
100249af:	and    DWORD PTR [ebp-0x1c],0x0
100249b3:	and    ecx,0x80000000
100249b9:	add    ecx,0x7fff8000
100249bf:	and    DWORD PTR [ebp-0x20],0x0
100249c3:	mov    DWORD PTR [ebp-0x18],ecx
100249c6:	test   ebx,ebx
100249c8:	jne    0x10024739
100249ce:	xor    eax,eax
100249d0:	mov    ecx,DWORD PTR [ebp-0x18]
100249d3:	shr    ecx,0x10
100249d6:	cmp    cx,0x3fff
100249db:	mov    ebx,0x7fff
100249e0:	jb     0x10024c2e
100249e6:	mov    esi,DWORD PTR [ebp-0x26]
100249e9:	inc    DWORD PTR [ebp-0x4c]
100249ec:	movzx  edx,cx
100249ef:	mov    ecx,esi
100249f1:	xor    ecx,edx
100249f3:	and    edx,ebx
100249f5:	and    esi,ebx
100249f7:	and    ecx,0x8000
100249fd:	cmp    dx,bx
10024a00:	lea    edi,[esi+edx*1]
10024a03:	mov    DWORD PTR [ebp-0x58],eax
10024a06:	mov    DWORD PTR [ebp-0x10],eax
10024a09:	mov    DWORD PTR [ebp-0xc],eax
10024a0c:	mov    DWORD PTR [ebp-0x8],eax
10024a0f:	movzx  edi,di
10024a12:	jae    0x10024c14
10024a18:	cmp    si,bx
10024a1b:	jae    0x10024c14
10024a21:	cmp    di,0xbffd
10024a26:	ja     0x10024c14
10024a2c:	cmp    di,0x3fbf
10024a31:	ja     0x10024a3b
10024a33:	mov    DWORD PTR [ebp-0x18],eax
10024a36:	jmp    0x10024c28
10024a3b:	cmp    dx,ax
10024a3e:	jne    0x10024a5d
10024a40:	inc    edi
10024a41:	test   DWORD PTR [ebp-0x18],0x7fffffff
10024a48:	jne    0x10024a5d
10024a4a:	cmp    DWORD PTR [ebp-0x1c],eax
10024a4d:	jne    0x10024a5d
10024a4f:	cmp    DWORD PTR [ebp-0x20],eax
10024a52:	jne    0x10024a5d
10024a54:	mov    WORD PTR [ebp-0x16],ax
10024a58:	jmp    0x10024c2e
10024a5d:	cmp    si,ax
10024a60:	jne    0x10024a76
10024a62:	inc    edi
10024a63:	test   DWORD PTR [ebp-0x28],0x7fffffff
10024a6a:	jne    0x10024a76
10024a6c:	cmp    DWORD PTR [ebp-0x2c],eax
10024a6f:	jne    0x10024a76
10024a71:	cmp    DWORD PTR [ebp-0x30],eax
10024a74:	je     0x10024a33
10024a76:	and    DWORD PTR [ebp-0x54],0x0
10024a7a:	lea    eax,[ebp-0xc]
10024a7d:	mov    DWORD PTR [ebp-0x40],0x5
10024a84:	mov    edx,DWORD PTR [ebp-0x54]
10024a87:	mov    esi,DWORD PTR [ebp-0x40]
10024a8a:	add    edx,edx
10024a8c:	test   esi,esi
10024a8e:	mov    DWORD PTR [ebp-0x50],esi
10024a91:	jle    0x10024ae5
10024a93:	lea    esi,[ebp-0x28]
10024a96:	lea    edx,[ebp+edx*1-0x20]
10024a9a:	mov    DWORD PTR [ebp-0x5c],esi
10024a9d:	mov    DWORD PTR [ebp-0x48],edx
10024aa0:	mov    edx,DWORD PTR [ebp-0x5c]
10024aa3:	mov    esi,DWORD PTR [ebp-0x48]
10024aa6:	movzx  esi,WORD PTR [esi]
10024aa9:	movzx  edx,WORD PTR [edx]
10024aac:	and    DWORD PTR [ebp-0x44],0x0
10024ab0:	imul   edx,esi
10024ab3:	mov    esi,DWORD PTR [eax-0x4]
10024ab6:	lea    ebx,[esi+edx*1]
10024ab9:	cmp    ebx,esi
10024abb:	jb     0x10024ac1
10024abd:	cmp    ebx,edx
10024abf:	jae    0x10024ac8
10024ac1:	mov    DWORD PTR [ebp-0x44],0x1
10024ac8:	cmp    DWORD PTR [ebp-0x44],0x0
10024acc:	mov    DWORD PTR [eax-0x4],ebx
10024acf:	je     0x10024ad4
10024ad1:	inc    WORD PTR [eax]
10024ad4:	add    DWORD PTR [ebp-0x48],0x2
10024ad8:	sub    DWORD PTR [ebp-0x5c],0x2
10024adc:	dec    DWORD PTR [ebp-0x50]
10024adf:	cmp    DWORD PTR [ebp-0x50],0x0
10024ae3:	jg     0x10024aa0
10024ae5:	inc    eax
10024ae6:	inc    eax
10024ae7:	inc    DWORD PTR [ebp-0x54]
10024aea:	dec    DWORD PTR [ebp-0x40]
10024aed:	cmp    DWORD PTR [ebp-0x40],0x0
10024af1:	jg     0x10024a84
10024af3:	add    edi,0xc002
10024af9:	xor    eax,eax
10024afb:	cmp    di,ax
10024afe:	jle    0x10024b3c
10024b00:	test   DWORD PTR [ebp-0x8],0x80000000
10024b07:	jne    0x10024b37
10024b09:	mov    edx,DWORD PTR [ebp-0x10]
10024b0c:	mov    ebx,DWORD PTR [ebp-0xc]
10024b0f:	mov    esi,DWORD PTR [ebp-0xc]
10024b12:	shl    DWORD PTR [ebp-0x10],1
10024b15:	shr    edx,0x1f
10024b18:	add    ebx,ebx
10024b1a:	or     ebx,edx
10024b1c:	mov    edx,DWORD PTR [ebp-0x8]
10024b1f:	shr    esi,0x1f
10024b22:	add    edx,edx
10024b24:	or     edx,esi
10024b26:	add    edi,0xffff
10024b2c:	cmp    di,ax
10024b2f:	mov    DWORD PTR [ebp-0xc],ebx
10024b32:	mov    DWORD PTR [ebp-0x8],edx
10024b35:	jg     0x10024b00
10024b37:	cmp    di,ax
10024b3a:	jg     0x10024b89
10024b3c:	add    edi,0xffff
10024b42:	cmp    di,ax
10024b45:	jge    0x10024b89
10024b47:	mov    eax,edi
10024b49:	neg    eax
10024b4b:	movzx  eax,ax
10024b4e:	add    edi,eax
10024b50:	test   BYTE PTR [ebp-0x10],0x1
10024b54:	je     0x10024b59
10024b56:	inc    DWORD PTR [ebp-0x58]
10024b59:	mov    edx,DWORD PTR [ebp-0x8]
10024b5c:	mov    ebx,DWORD PTR [ebp-0xc]
10024b5f:	mov    esi,DWORD PTR [ebp-0xc]
10024b62:	shr    DWORD PTR [ebp-0x8],1
10024b65:	shl    edx,0x1f
10024b68:	shr    ebx,1
10024b6a:	or     ebx,edx
10024b6c:	mov    edx,DWORD PTR [ebp-0x10]
10024b6f:	shl    esi,0x1f
10024b72:	shr    edx,1
10024b74:	or     edx,esi
10024b76:	dec    eax
10024b77:	mov    DWORD PTR [ebp-0xc],ebx
10024b7a:	mov    DWORD PTR [ebp-0x10],edx
10024b7d:	jne    0x10024b50
10024b7f:	cmp    DWORD PTR [ebp-0x58],eax
10024b82:	je     0x10024b89
10024b84:	or     WORD PTR [ebp-0x10],0x1
10024b89:	cmp    WORD PTR [ebp-0x10],0x8000
10024b8f:	ja     0x10024ba2
10024b91:	mov    edx,DWORD PTR [ebp-0x10]
10024b94:	and    edx,0x1ffff
10024b9a:	cmp    edx,0x18000
10024ba0:	jne    0x10024bd3
10024ba2:	cmp    DWORD PTR [ebp-0xe],0xffffffff
10024ba6:	jne    0x10024bd0
10024ba8:	cmp    DWORD PTR [ebp-0xa],0xffffffff
10024bac:	mov    DWORD PTR [ebp-0xe],eax
10024baf:	jne    0x10024bcb
10024bb1:	cmp    WORD PTR [ebp-0x6],0xffff
10024bb7:	mov    DWORD PTR [ebp-0xa],eax
10024bba:	jne    0x10024bc5
10024bbc:	mov    WORD PTR [ebp-0x6],0x8000
10024bc2:	inc    edi
10024bc3:	jmp    0x10024bd3
10024bc5:	inc    WORD PTR [ebp-0x6]
10024bc9:	jmp    0x10024bd3
10024bcb:	inc    DWORD PTR [ebp-0xa]
10024bce:	jmp    0x10024bd3
10024bd0:	inc    DWORD PTR [ebp-0xe]
10024bd3:	cmp    di,0x7fff
10024bd8:	jb     0x10024bf8
10024bda:	neg    cx
10024bdd:	mov    DWORD PTR [ebp-0x1c],eax
10024be0:	mov    DWORD PTR [ebp-0x20],eax
10024be3:	sbb    ecx,ecx
10024be5:	and    ecx,0x80000000
10024beb:	add    ecx,0x7fff8000
10024bf1:	mov    DWORD PTR [ebp-0x18],ecx
10024bf4:	xor    eax,eax
10024bf6:	jmp    0x10024c2e
10024bf8:	mov    ax,WORD PTR [ebp-0xe]
10024bfc:	mov    WORD PTR [ebp-0x20],ax
10024c00:	mov    eax,DWORD PTR [ebp-0xc]
10024c03:	mov    DWORD PTR [ebp-0x1e],eax
10024c06:	mov    eax,DWORD PTR [ebp-0x8]
10024c09:	or     edi,ecx
10024c0b:	mov    DWORD PTR [ebp-0x1a],eax
10024c0e:	mov    WORD PTR [ebp-0x16],di
10024c12:	jmp    0x10024bf4
10024c14:	neg    cx
10024c17:	sbb    ecx,ecx
10024c19:	and    ecx,0x80000000
10024c1f:	add    ecx,0x7fff8000
10024c25:	mov    DWORD PTR [ebp-0x18],ecx
10024c28:	mov    DWORD PTR [ebp-0x1c],eax
10024c2b:	mov    DWORD PTR [ebp-0x20],eax
10024c2e:	test   BYTE PTR [ebp+0x18],0x1
10024c32:	mov    edx,DWORD PTR [ebp-0x60]
10024c35:	mov    ecx,DWORD PTR [ebp-0x4c]
10024c38:	mov    WORD PTR [edx],cx
10024c3b:	je     0x10024c6f
10024c3d:	movsx  ecx,cx
10024c40:	add    DWORD PTR [ebp+0x14],ecx
10024c43:	cmp    DWORD PTR [ebp+0x14],eax
10024c46:	jg     0x10024c6f
10024c48:	and    WORD PTR [edx],0x0
10024c4c:	cmp    WORD PTR [ebp-0x6c],0x8000
10024c52:	mov    BYTE PTR [edx+0x3],0x1
10024c56:	setne  al
10024c59:	dec    al
10024c5b:	and    al,0xd
10024c5d:	add    al,0x20
10024c5f:	mov    BYTE PTR [edx+0x2],al
10024c62:	mov    BYTE PTR [edx+0x4],0x30
10024c66:	mov    BYTE PTR [edx+0x5],0x0
10024c6a:	jmp    0x10024620
10024c6f:	push   0x15
10024c71:	pop    ecx
10024c72:	cmp    DWORD PTR [ebp+0x14],ecx
10024c75:	jle    0x10024c7a
10024c77:	mov    DWORD PTR [ebp+0x14],ecx
10024c7a:	mov    esi,DWORD PTR [ebp-0x18]
10024c7d:	shr    esi,0x10
10024c80:	push   0x8
10024c82:	sub    esi,0x3ffe
10024c88:	mov    WORD PTR [ebp-0x16],ax
10024c8c:	pop    ebx
10024c8d:	mov    eax,DWORD PTR [ebp-0x20]
10024c90:	mov    edi,DWORD PTR [ebp-0x1c]
10024c93:	mov    ecx,DWORD PTR [ebp-0x1c]
10024c96:	shl    DWORD PTR [ebp-0x20],1
10024c99:	shr    eax,0x1f
10024c9c:	add    edi,edi
10024c9e:	or     edi,eax
10024ca0:	mov    eax,DWORD PTR [ebp-0x18]
10024ca3:	shr    ecx,0x1f
10024ca6:	add    eax,eax
10024ca8:	or     eax,ecx
10024caa:	dec    ebx
10024cab:	mov    DWORD PTR [ebp-0x1c],edi
10024cae:	mov    DWORD PTR [ebp-0x18],eax
10024cb1:	jne    0x10024c8d
10024cb3:	test   esi,esi
10024cb5:	jge    0x10024ce9
10024cb7:	neg    esi
10024cb9:	and    esi,0xff
10024cbf:	jle    0x10024ce9
10024cc1:	mov    eax,DWORD PTR [ebp-0x18]
10024cc4:	mov    edi,DWORD PTR [ebp-0x1c]
10024cc7:	mov    ecx,DWORD PTR [ebp-0x1c]
10024cca:	shr    DWORD PTR [ebp-0x18],1
10024ccd:	shl    eax,0x1f
10024cd0:	shr    edi,1
10024cd2:	or     edi,eax
10024cd4:	mov    eax,DWORD PTR [ebp-0x20]
10024cd7:	shl    ecx,0x1f
10024cda:	shr    eax,1
10024cdc:	or     eax,ecx
10024cde:	dec    esi
10024cdf:	test   esi,esi
10024ce1:	mov    DWORD PTR [ebp-0x1c],edi
10024ce4:	mov    DWORD PTR [ebp-0x20],eax
10024ce7:	jg     0x10024cc1
10024ce9:	mov    eax,DWORD PTR [ebp+0x14]
10024cec:	inc    eax
10024ced:	test   eax,eax
10024cef:	lea    ebx,[edx+0x4]
10024cf2:	mov    DWORD PTR [ebp-0x40],ebx
10024cf5:	mov    DWORD PTR [ebp-0x4c],eax
10024cf8:	jle    0x10024db3
10024cfe:	mov    edx,DWORD PTR [ebp-0x20]
10024d01:	mov    eax,DWORD PTR [ebp-0x1c]
10024d04:	lea    esi,[ebp-0x20]
10024d07:	lea    edi,[ebp-0x3c]
10024d0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024d0d:	shl    DWORD PTR [ebp-0x20],1
10024d10:	mov    edi,DWORD PTR [ebp-0x20]
10024d13:	shl    DWORD PTR [ebp-0x20],1
10024d16:	shr    edx,0x1f
10024d19:	lea    ecx,[eax+eax*1]
10024d1c:	or     ecx,edx
10024d1e:	mov    edx,DWORD PTR [ebp-0x18]
10024d21:	mov    esi,eax
10024d23:	shr    esi,0x1f
10024d26:	add    edx,edx
10024d28:	or     edx,esi
10024d2a:	mov    eax,ecx
10024d2c:	lea    esi,[ecx+ecx*1]
10024d2f:	shr    eax,0x1f
10024d32:	lea    ecx,[edx+edx*1]
10024d35:	mov    edx,DWORD PTR [ebp-0x3c]
10024d38:	shr    edi,0x1f
10024d3b:	or     ecx,eax
10024d3d:	mov    eax,DWORD PTR [ebp-0x20]
10024d40:	or     esi,edi
10024d42:	lea    edi,[edx+eax*1]
10024d45:	cmp    edi,eax
10024d47:	jb     0x10024d4d
10024d49:	cmp    edi,edx
10024d4b:	jae    0x10024d65
10024d4d:	lea    eax,[esi+0x1]
10024d50:	xor    edx,edx
10024d52:	cmp    eax,esi
10024d54:	jb     0x10024d5b
10024d56:	cmp    eax,0x1
10024d59:	jae    0x10024d5e
10024d5b:	xor    edx,edx
10024d5d:	inc    edx
10024d5e:	test   edx,edx
10024d60:	mov    esi,eax
10024d62:	je     0x10024d65
10024d64:	inc    ecx
10024d65:	mov    eax,DWORD PTR [ebp-0x38]
10024d68:	lea    edx,[eax+esi*1]
10024d6b:	cmp    edx,esi
10024d6d:	mov    DWORD PTR [ebp-0x44],edx
10024d70:	jb     0x10024d76
10024d72:	cmp    edx,eax
10024d74:	jae    0x10024d77
10024d76:	inc    ecx
10024d77:	add    ecx,DWORD PTR [ebp-0x34]
10024d7a:	shr    edx,0x1f
10024d7d:	add    ecx,ecx
10024d7f:	or     ecx,edx
10024d81:	lea    esi,[edi+edi*1]
10024d84:	mov    DWORD PTR [ebp-0x20],esi
10024d87:	mov    esi,DWORD PTR [ebp-0x44]
10024d8a:	mov    DWORD PTR [ebp-0x18],ecx
10024d8d:	shr    ecx,0x18
10024d90:	add    esi,esi
10024d92:	add    cl,0x30
10024d95:	mov    eax,edi
10024d97:	shr    eax,0x1f
10024d9a:	or     esi,eax
10024d9c:	mov    BYTE PTR [ebx],cl
10024d9e:	inc    ebx
10024d9f:	dec    DWORD PTR [ebp-0x4c]
10024da2:	cmp    DWORD PTR [ebp-0x4c],0x0
10024da6:	mov    DWORD PTR [ebp-0x1c],esi
10024da9:	mov    BYTE PTR [ebp-0x15],0x0
10024dad:	jg     0x10024cfe
10024db3:	dec    ebx
10024db4:	mov    al,BYTE PTR [ebx]
10024db6:	dec    ebx
10024db7:	cmp    al,0x35
10024db9:	jge    0x10024dc9
10024dbb:	mov    ecx,DWORD PTR [ebp-0x40]
10024dbe:	jmp    0x10024e04
10024dc0:	cmp    BYTE PTR [ebx],0x39
10024dc3:	jne    0x10024dce
10024dc5:	mov    BYTE PTR [ebx],0x30
10024dc8:	dec    ebx
10024dc9:	cmp    ebx,DWORD PTR [ebp-0x40]
10024dcc:	jae    0x10024dc0
10024dce:	cmp    ebx,DWORD PTR [ebp-0x40]
10024dd1:	mov    eax,DWORD PTR [ebp-0x60]
10024dd4:	jae    0x10024dda
10024dd6:	inc    ebx
10024dd7:	inc    WORD PTR [eax]
10024dda:	inc    BYTE PTR [ebx]
10024ddc:	sub    bl,al
10024dde:	sub    bl,0x3
10024de1:	movsx  ecx,bl
10024de4:	mov    BYTE PTR [eax+0x3],bl
10024de7:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
10024dec:	mov    eax,DWORD PTR [ebp-0x74]
10024def:	mov    ecx,DWORD PTR [ebp-0x4]
10024df2:	pop    edi
10024df3:	pop    esi
10024df4:	xor    ecx,ebp
10024df6:	pop    ebx
10024df7:	call   0x10015b2b
10024dfc:	leave  
10024dfd:	ret    
10024dfe:	cmp    BYTE PTR [ebx],0x30
10024e01:	jne    0x10024e08
10024e03:	dec    ebx
10024e04:	cmp    ebx,ecx
10024e06:	jae    0x10024dfe
10024e08:	cmp    ebx,ecx
10024e0a:	mov    eax,DWORD PTR [ebp-0x60]
10024e0d:	jae    0x10024ddc
10024e0f:	and    WORD PTR [eax],0x0
10024e13:	cmp    WORD PTR [ebp-0x6c],0x8000
10024e19:	mov    BYTE PTR [eax+0x3],0x1
10024e1d:	setne  dl
10024e20:	dec    dl
10024e22:	and    dl,0xd
10024e25:	add    dl,0x20
10024e28:	mov    BYTE PTR [eax+0x2],dl
10024e2b:	mov    BYTE PTR [ecx],0x30
10024e2e:	mov    BYTE PTR [eax+0x5],0x0
10024e32:	jmp    0x10024620
10024e37:	xor    eax,eax
10024e39:	test   bl,0x10
10024e3c:	je     0x10024e3f
10024e3e:	inc    eax
10024e3f:	test   bl,0x8
10024e42:	je     0x10024e47
10024e44:	or     eax,0x4
10024e47:	test   bl,0x4
10024e4a:	je     0x10024e4f
10024e4c:	or     eax,0x8
10024e4f:	test   bl,0x2
10024e52:	je     0x10024e57
10024e54:	or     eax,0x10
10024e57:	test   bl,0x1
10024e5a:	je     0x10024e5f
10024e5c:	or     eax,0x20
10024e5f:	test   ebx,0x80000
10024e65:	je     0x10024e6a
10024e67:	or     eax,0x2
10024e6a:	mov    ecx,ebx
10024e6c:	mov    edx,0x300
10024e71:	and    ecx,edx
10024e73:	push   esi
10024e74:	mov    esi,0x200
10024e79:	je     0x10024e9e
10024e7b:	cmp    ecx,0x100
10024e81:	je     0x10024e99
10024e83:	cmp    ecx,esi
10024e85:	je     0x10024e92
10024e87:	cmp    ecx,edx
10024e89:	jne    0x10024e9e
10024e8b:	or     eax,0xc00
10024e90:	jmp    0x10024e9e
10024e92:	or     eax,0x800
10024e97:	jmp    0x10024e9e
10024e99:	or     eax,0x400
10024e9e:	mov    ecx,ebx
10024ea0:	and    ecx,0x30000
10024ea6:	je     0x10024eb4
10024ea8:	cmp    ecx,0x10000
10024eae:	jne    0x10024eb6
10024eb0:	or     eax,esi
10024eb2:	jmp    0x10024eb6
10024eb4:	or     eax,edx
10024eb6:	test   ebx,0x40000
10024ebc:	pop    esi
10024ebd:	je     0x10024ec4
10024ebf:	or     eax,0x1000
10024ec4:	ret    
10024ec5:	xor    eax,eax
10024ec7:	test   dl,0x10
10024eca:	je     0x10024ed1
10024ecc:	mov    eax,0x80
10024ed1:	test   dl,0x8
10024ed4:	push   ebx
10024ed5:	push   esi
10024ed6:	push   edi
10024ed7:	mov    ebx,0x200
10024edc:	je     0x10024ee0
10024ede:	or     eax,ebx
10024ee0:	test   dl,0x4
10024ee3:	je     0x10024eea
10024ee5:	or     eax,0x400
10024eea:	test   dl,0x2
10024eed:	je     0x10024ef4
10024eef:	or     eax,0x800
10024ef4:	test   dl,0x1
10024ef7:	je     0x10024efe
10024ef9:	or     eax,0x1000
10024efe:	test   edx,0x80000
10024f04:	mov    edi,0x100
10024f09:	je     0x10024f0d
10024f0b:	or     eax,edi
10024f0d:	mov    ecx,edx
10024f0f:	mov    esi,0x300
10024f14:	and    ecx,esi
10024f16:	je     0x10024f37
10024f18:	cmp    ecx,edi
10024f1a:	je     0x10024f32
10024f1c:	cmp    ecx,ebx
10024f1e:	je     0x10024f2b
10024f20:	cmp    ecx,esi
10024f22:	jne    0x10024f37
10024f24:	or     eax,0x6000
10024f29:	jmp    0x10024f37
10024f2b:	or     eax,0x4000
10024f30:	jmp    0x10024f37
10024f32:	or     eax,0x2000
10024f37:	mov    ecx,0x3000000
10024f3c:	pop    edi
10024f3d:	and    edx,ecx
10024f3f:	cmp    edx,0x1000000
10024f45:	pop    esi
10024f46:	pop    ebx
10024f47:	je     0x10024f5f
10024f49:	cmp    edx,0x2000000
10024f4f:	je     0x10024f5b
10024f51:	cmp    edx,ecx
10024f53:	jne    0x10024f64
10024f55:	or     eax,0x8000
10024f5a:	ret    
10024f5b:	or     eax,0x40
10024f5e:	ret    
10024f5f:	or     eax,0x8040
10024f64:	ret    
10024f65:	sub    esp,0x10
10024f68:	push   ebx
10024f69:	push   ebp
10024f6a:	push   esi
10024f6b:	push   edi
10024f6c:	fstcw  WORD PTR [esp+0x14]
10024f71:	mov    ebx,DWORD PTR [esp+0x14]
10024f75:	xor    edx,edx
10024f77:	test   bl,0x1
10024f7a:	je     0x10024f7f
10024f7c:	push   0x10
10024f7e:	pop    edx
10024f7f:	test   bl,0x4
10024f82:	je     0x10024f87
10024f84:	or     edx,0x8
10024f87:	test   bl,0x8
10024f8a:	je     0x10024f8f
10024f8c:	or     edx,0x4
10024f8f:	test   bl,0x10
10024f92:	je     0x10024f97
10024f94:	or     edx,0x2
10024f97:	test   bl,0x20
10024f9a:	je     0x10024f9f
10024f9c:	or     edx,0x1
10024f9f:	test   bl,0x2
10024fa2:	je     0x10024faa
10024fa4:	or     edx,0x80000
10024faa:	movzx  ecx,bx
10024fad:	mov    eax,ecx
10024faf:	mov    edi,0xc00
10024fb4:	and    eax,edi
10024fb6:	mov    ebp,0x300
10024fbb:	mov    esi,0x200
10024fc0:	je     0x10024fe2
10024fc2:	cmp    eax,0x400
10024fc7:	je     0x10024fdc
10024fc9:	cmp    eax,0x800
10024fce:	je     0x10024fd8
10024fd0:	cmp    eax,edi
10024fd2:	jne    0x10024fe2
10024fd4:	or     edx,ebp
10024fd6:	jmp    0x10024fe2
10024fd8:	or     edx,esi
10024fda:	jmp    0x10024fe2
10024fdc:	or     edx,0x100
10024fe2:	and    ecx,ebp
10024fe4:	je     0x10024ff2
10024fe6:	cmp    ecx,esi
10024fe8:	jne    0x10024ff8
10024fea:	or     edx,0x10000
10024ff0:	jmp    0x10024ff8
10024ff2:	or     edx,0x20000
10024ff8:	test   bx,0x1000
10024ffd:	je     0x10025005
10024fff:	or     edx,0x40000
10025005:	mov    esi,DWORD PTR [esp+0x28]
10025009:	mov    ecx,DWORD PTR [esp+0x24]
1002500d:	mov    eax,esi
1002500f:	not    eax
10025011:	and    eax,edx
10025013:	and    ecx,esi
10025015:	or     eax,ecx
10025017:	cmp    eax,edx
10025019:	mov    DWORD PTR [esp+0x1c],eax
1002501d:	je     0x100250cd
10025023:	mov    ebx,eax
10025025:	call   0x10024e37
1002502a:	movzx  eax,ax
1002502d:	mov    DWORD PTR [esp+0x10],eax
10025031:	fldcw  WORD PTR [esp+0x10]
10025035:	fstcw  WORD PTR [esp+0x10]
1002503a:	mov    ebx,DWORD PTR [esp+0x10]
1002503e:	xor    edx,edx
10025040:	test   bl,0x1
10025043:	je     0x10025048
10025045:	push   0x10
10025047:	pop    edx
10025048:	test   bl,0x4
1002504b:	je     0x10025050
1002504d:	or     edx,0x8
10025050:	test   bl,0x8
10025053:	je     0x10025058
10025055:	or     edx,0x4
10025058:	test   bl,0x10
1002505b:	je     0x10025060
1002505d:	or     edx,0x2
10025060:	test   bl,0x20
10025063:	je     0x10025068
10025065:	or     edx,0x1
10025068:	test   bl,0x2
1002506b:	je     0x10025073
1002506d:	or     edx,0x80000
10025073:	movzx  ecx,bx
10025076:	mov    eax,ecx
10025078:	and    eax,edi
1002507a:	je     0x100250a0
1002507c:	cmp    eax,0x400
10025081:	je     0x1002509a
10025083:	cmp    eax,0x800
10025088:	je     0x10025092
1002508a:	cmp    eax,edi
1002508c:	jne    0x100250a0
1002508e:	or     edx,ebp
10025090:	jmp    0x100250a0
10025092:	or     edx,0x200
10025098:	jmp    0x100250a0
1002509a:	or     edx,0x100
100250a0:	and    ecx,ebp
100250a2:	je     0x100250b4
100250a4:	cmp    ecx,0x200
100250aa:	jne    0x100250ba
100250ac:	or     edx,0x10000
100250b2:	jmp    0x100250ba
100250b4:	or     edx,0x20000
100250ba:	test   bx,0x1000
100250bf:	je     0x100250c7
100250c1:	or     edx,0x40000
100250c7:	mov    eax,edx
100250c9:	mov    DWORD PTR [esp+0x1c],edx
100250cd:	cmp    DWORD PTR ds:0x10098c00,0x0
100250d4:	je     0x10025260
100250da:	and    esi,0x308031f
100250e0:	mov    edi,esi
100250e2:	stmxcsr DWORD PTR [esp+0x18]
100250e7:	mov    eax,DWORD PTR [esp+0x18]
100250eb:	xor    esi,esi
100250ed:	test   al,al
100250ef:	jns    0x100250f4
100250f1:	push   0x10
100250f3:	pop    esi
100250f4:	test   ax,0x200
100250f8:	je     0x100250fd
100250fa:	or     esi,0x8
100250fd:	test   ax,0x400
10025101:	je     0x10025106
10025103:	or     esi,0x4
10025106:	test   ax,0x800
1002510a:	je     0x1002510f
1002510c:	or     esi,0x2
1002510f:	test   ax,0x1000
10025113:	je     0x10025118
10025115:	or     esi,0x1
10025118:	test   ax,0x100
1002511c:	je     0x10025124
1002511e:	or     esi,0x80000
10025124:	mov    ecx,eax
10025126:	mov    ebp,0x6000
1002512b:	and    ecx,ebp
1002512d:	je     0x10025159
1002512f:	cmp    ecx,0x2000
10025135:	je     0x10025153
10025137:	cmp    ecx,0x4000
1002513d:	je     0x1002514b
1002513f:	cmp    ecx,ebp
10025141:	jne    0x10025159
10025143:	or     esi,0x300
10025149:	jmp    0x10025159
1002514b:	or     esi,0x200
10025151:	jmp    0x10025159
10025153:	or     esi,0x100
10025159:	mov    ebx,0x8040
1002515e:	and    eax,ebx
10025160:	sub    eax,0x40
10025163:	je     0x10025181
10025165:	sub    eax,0x7fc0
1002516a:	je     0x10025179
1002516c:	sub    eax,0x40
1002516f:	jne    0x10025187
10025171:	or     esi,0x1000000
10025177:	jmp    0x10025187
10025179:	or     esi,0x3000000
1002517f:	jmp    0x10025187
10025181:	or     esi,0x2000000
10025187:	mov    edx,edi
10025189:	and    edi,DWORD PTR [esp+0x24]
1002518d:	not    edx
1002518f:	and    edx,esi
10025191:	or     edx,edi
10025193:	cmp    edx,esi
10025195:	jne    0x1002519e
10025197:	mov    eax,esi
10025199:	jmp    0x10025249
1002519e:	call   0x10024ec5
100251a3:	push   eax
100251a4:	mov    DWORD PTR [esp+0x2c],eax
100251a8:	call   0x10025268
100251ad:	pop    ecx
100251ae:	stmxcsr DWORD PTR [esp+0x28]
100251b3:	mov    eax,DWORD PTR [esp+0x28]
100251b7:	xor    edx,edx
100251b9:	test   al,al
100251bb:	jns    0x100251c0
100251bd:	push   0x10
100251bf:	pop    edx
100251c0:	mov    edi,0x200
100251c5:	test   edi,eax
100251c7:	je     0x100251cc
100251c9:	or     edx,0x8
100251cc:	test   ax,0x400
100251d0:	je     0x100251d5
100251d2:	or     edx,0x4
100251d5:	test   ax,0x800
100251d9:	je     0x100251de
100251db:	or     edx,0x2
100251de:	test   ax,0x1000
100251e2:	je     0x100251e7
100251e4:	or     edx,0x1
100251e7:	mov    esi,0x100
100251ec:	test   esi,eax
100251ee:	je     0x100251f6
100251f0:	or     edx,0x80000
100251f6:	mov    ecx,eax
100251f8:	and    ecx,ebp
100251fa:	je     0x1002521e
100251fc:	cmp    ecx,0x2000
10025202:	je     0x1002521c
10025204:	cmp    ecx,0x4000
1002520a:	je     0x10025218
1002520c:	cmp    ecx,ebp
1002520e:	jne    0x1002521e
10025210:	or     edx,0x300
10025216:	jmp    0x1002521e
10025218:	or     edx,edi
1002521a:	jmp    0x1002521e
1002521c:	or     edx,esi
1002521e:	and    eax,ebx
10025220:	sub    eax,0x40
10025223:	je     0x10025241
10025225:	sub    eax,0x7fc0
1002522a:	je     0x10025239
1002522c:	sub    eax,0x40
1002522f:	jne    0x10025247
10025231:	or     edx,0x1000000
10025237:	jmp    0x10025247
10025239:	or     edx,0x3000000
1002523f:	jmp    0x10025247
10025241:	or     edx,0x2000000
10025247:	mov    eax,edx
10025249:	mov    ecx,DWORD PTR [esp+0x1c]
1002524d:	mov    edx,eax
1002524f:	xor    edx,ecx
10025251:	or     eax,ecx
10025253:	test   edx,0x8031f
10025259:	je     0x10025260
1002525b:	or     eax,0x80000000
10025260:	pop    edi
10025261:	pop    esi
10025262:	pop    ebp
10025263:	pop    ebx
10025264:	add    esp,0x10
10025267:	ret    
10025268:	push   0x8
1002526a:	push   0x10085bb0
1002526f:	call   0x10017f88
10025274:	xor    eax,eax
10025276:	cmp    DWORD PTR ds:0x10098c00,eax
1002527c:	je     0x100252d4
1002527e:	test   BYTE PTR [ebp+0x8],0x40
10025282:	je     0x100252cc
10025284:	cmp    DWORD PTR ds:0x100965d8,eax
1002528a:	je     0x100252cc
1002528c:	mov    DWORD PTR [ebp-0x4],eax
1002528f:	ldmxcsr DWORD PTR [ebp+0x8]
10025293:	jmp    0x100252c3
10025295:	mov    eax,DWORD PTR [ebp-0x14]
10025298:	mov    eax,DWORD PTR [eax]
1002529a:	mov    eax,DWORD PTR [eax]
1002529c:	cmp    eax,0xc0000005
100252a1:	je     0x100252ad
100252a3:	cmp    eax,0xc000001d
100252a8:	je     0x100252ad
100252aa:	xor    eax,eax
100252ac:	ret    
100252ad:	xor    eax,eax
100252af:	inc    eax
100252b0:	ret    
100252b1:	mov    esp,DWORD PTR [ebp-0x18]
100252b4:	and    DWORD PTR ds:0x100965d8,0x0
100252bb:	and    DWORD PTR [ebp+0x8],0xffffffbf
100252bf:	ldmxcsr DWORD PTR [ebp+0x8]
100252c3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100252ca:	jmp    0x100252d4
100252cc:	and    DWORD PTR [ebp+0x8],0xffffffbf
100252d0:	ldmxcsr DWORD PTR [ebp+0x8]
100252d4:	call   0x10017fcd
100252d9:	ret    
100252da:	int3   
100252db:	int3   
100252dc:	int3   
100252dd:	int3   
100252de:	int3   
100252df:	int3   
100252e0:	lea    eax,[edx-0x1]
100252e3:	pop    ebx
100252e4:	ret    
100252e5:	lea    esp,[esp+0x0]
100252ec:	lea    esp,[esp+0x0]
100252f0:	xor    eax,eax
100252f2:	mov    al,BYTE PTR [esp+0x8]
100252f6:	push   ebx
100252f7:	mov    ebx,eax
100252f9:	shl    eax,0x8
100252fc:	mov    edx,DWORD PTR [esp+0x8]
10025300:	test   edx,0x3
10025306:	je     0x1002531d
10025308:	mov    cl,BYTE PTR [edx]
1002530a:	add    edx,0x1
1002530d:	cmp    cl,bl
1002530f:	je     0x100252e0
10025311:	test   cl,cl
10025313:	je     0x10025366
10025315:	test   edx,0x3
1002531b:	jne    0x10025308
1002531d:	or     ebx,eax
1002531f:	push   edi
10025320:	mov    eax,ebx
10025322:	shl    ebx,0x10
10025325:	push   esi
10025326:	or     ebx,eax
10025328:	mov    ecx,DWORD PTR [edx]
1002532a:	mov    edi,0x7efefeff
1002532f:	mov    eax,ecx
10025331:	mov    esi,edi
10025333:	xor    ecx,ebx
10025335:	add    esi,eax
10025337:	add    edi,ecx
10025339:	xor    ecx,0xffffffff
1002533c:	xor    eax,0xffffffff
1002533f:	xor    ecx,edi
10025341:	xor    eax,esi
10025343:	add    edx,0x4
10025346:	and    ecx,0x81010100
1002534c:	jne    0x1002536a
1002534e:	and    eax,0x81010100
10025353:	je     0x10025328
10025355:	and    eax,0x1010100
1002535a:	jne    0x10025364
1002535c:	and    esi,0x80000000
10025362:	jne    0x10025328
10025364:	pop    esi
10025365:	pop    edi
10025366:	pop    ebx
10025367:	xor    eax,eax
10025369:	ret    
1002536a:	mov    eax,DWORD PTR [edx-0x4]
1002536d:	cmp    al,bl
1002536f:	je     0x100253a7
10025371:	test   al,al
10025373:	je     0x10025364
10025375:	cmp    ah,bl
10025377:	je     0x100253a0
10025379:	test   ah,ah
1002537b:	je     0x10025364
1002537d:	shr    eax,0x10
10025380:	cmp    al,bl
10025382:	je     0x10025399
10025384:	test   al,al
10025386:	je     0x10025364
10025388:	cmp    ah,bl
1002538a:	je     0x10025392
1002538c:	test   ah,ah
1002538e:	je     0x10025364
10025390:	jmp    0x10025328
10025392:	pop    esi
10025393:	pop    edi
10025394:	lea    eax,[edx-0x1]
10025397:	pop    ebx
10025398:	ret    
10025399:	lea    eax,[edx-0x2]
1002539c:	pop    esi
1002539d:	pop    edi
1002539e:	pop    ebx
1002539f:	ret    
100253a0:	lea    eax,[edx-0x3]
100253a3:	pop    esi
100253a4:	pop    edi
100253a5:	pop    ebx
100253a6:	ret    
100253a7:	lea    eax,[edx-0x4]
100253aa:	pop    esi
100253ab:	pop    edi
100253ac:	pop    ebx
100253ad:	ret    
100253ae:	int3   
100253af:	int3   
100253b0:	push   esi
100253b1:	mov    esi,ecx
100253b3:	mov    eax,DWORD PTR [esi+0x8]
100253b6:	test   eax,eax
100253b8:	mov    DWORD PTR [esi],0x1007ef94
100253be:	je     0x100253c8
100253c0:	mov    ecx,DWORD PTR [eax]
100253c2:	mov    edx,DWORD PTR [ecx+0x8]
100253c5:	push   eax
100253c6:	call   edx
100253c8:	cmp    DWORD PTR [esi+0xc],0x0
100253cc:	je     0x100253e5
100253ce:	call   DWORD PTR ds:0x100341ec
100253d4:	test   eax,eax
100253d6:	je     0x100253e5
100253d8:	mov    ecx,DWORD PTR [esi+0xc]
100253db:	push   ecx
100253dc:	push   0x0
100253de:	push   eax
100253df:	call   DWORD PTR ds:0x100341e0
100253e5:	pop    esi
100253e6:	ret    
100253e7:	int3   
100253e8:	int3   
100253e9:	int3   
100253ea:	int3   
100253eb:	int3   
100253ec:	int3   
100253ed:	int3   
100253ee:	int3   
100253ef:	int3   
100253f0:	sub    esp,0x10
100253f3:	mov    eax,DWORD PTR [esp+0x14]
100253f7:	mov    ecx,DWORD PTR [esp+0x18]
100253fb:	push   0x10085bcc
10025400:	lea    edx,[esp+0x4]
10025404:	push   edx
10025405:	mov    DWORD PTR [esp+0x8],0x1007ef94
1002540d:	mov    DWORD PTR [esp+0xc],eax
10025411:	mov    DWORD PTR [esp+0x10],ecx
10025415:	mov    DWORD PTR [esp+0x14],0x0
1002541d:	call   0x1001621e
10025422:	int3   
10025423:	int3   
10025424:	int3   
10025425:	int3   
10025426:	int3   
10025427:	int3   
10025428:	int3   
10025429:	int3   
1002542a:	int3   
1002542b:	int3   
1002542c:	int3   
1002542d:	int3   
1002542e:	int3   
1002542f:	int3   
10025430:	mov    eax,DWORD PTR [esp+0x4]
10025434:	push   esi
10025435:	mov    esi,ecx
10025437:	mov    DWORD PTR [esi],0x1007ef94
1002543d:	mov    ecx,DWORD PTR [eax+0x4]
10025440:	mov    DWORD PTR [esi+0x4],ecx
10025443:	mov    edx,DWORD PTR [eax+0x8]
10025446:	mov    eax,edx
10025448:	test   eax,eax
1002544a:	mov    DWORD PTR [esi+0x8],edx
1002544d:	mov    DWORD PTR [esi+0xc],0x0
10025454:	je     0x1002545e
10025456:	mov    ecx,DWORD PTR [eax]
10025458:	mov    edx,DWORD PTR [ecx+0x4]
1002545b:	push   eax
1002545c:	call   edx
1002545e:	mov    eax,esi
10025460:	pop    esi
10025461:	ret    0x4
10025464:	int3   
10025465:	int3   
10025466:	int3   
10025467:	int3   
10025468:	int3   
10025469:	int3   
1002546a:	int3   
1002546b:	int3   
1002546c:	int3   
1002546d:	int3   
1002546e:	int3   
1002546f:	int3   
10025470:	push   esi
10025471:	mov    esi,ecx
10025473:	mov    eax,DWORD PTR [esi+0x8]
10025476:	test   eax,eax
10025478:	mov    DWORD PTR [esi],0x1007ef94
1002547e:	je     0x10025488
10025480:	mov    ecx,DWORD PTR [eax]
10025482:	mov    edx,DWORD PTR [ecx+0x8]
10025485:	push   eax
10025486:	call   edx
10025488:	cmp    DWORD PTR [esi+0xc],0x0
1002548c:	je     0x100254a5
1002548e:	call   DWORD PTR ds:0x100341ec
10025494:	test   eax,eax
10025496:	je     0x100254a5
10025498:	mov    ecx,DWORD PTR [esi+0xc]
1002549b:	push   ecx
1002549c:	push   0x0
1002549e:	push   eax
1002549f:	call   DWORD PTR ds:0x100341e0
100254a5:	test   BYTE PTR [esp+0x8],0x1
100254aa:	je     0x100254b5
100254ac:	push   esi
100254ad:	call   0x10015b26
100254b2:	add    esp,0x4
100254b5:	mov    eax,esi
100254b7:	pop    esi
100254b8:	ret    0x4
100254bb:	int3   
100254bc:	int3   
100254bd:	int3   
100254be:	int3   
100254bf:	int3   
100254c0:	push   esi
100254c1:	mov    esi,eax
100254c3:	mov    eax,DWORD PTR [esi+0x1c]
100254c6:	mov    ecx,DWORD PTR [esi+0x10]
100254c9:	push   edi
100254ca:	mov    edi,DWORD PTR [eax+0x14]
100254cd:	cmp    edi,ecx
100254cf:	jbe    0x100254d3
100254d1:	mov    edi,ecx
100254d3:	test   edi,edi
100254d5:	je     0x1002550c
100254d7:	mov    eax,DWORD PTR [eax+0x10]
100254da:	mov    ecx,DWORD PTR [esi+0xc]
100254dd:	push   edi
100254de:	push   eax
100254df:	push   ecx
100254e0:	call   0x10016820
100254e5:	mov    eax,DWORD PTR [esi+0x1c]
100254e8:	add    DWORD PTR [esi+0xc],edi
100254eb:	add    DWORD PTR [eax+0x10],edi
100254ee:	add    DWORD PTR [esi+0x14],edi
100254f1:	sub    DWORD PTR [esi+0x10],edi
100254f4:	mov    eax,DWORD PTR [esi+0x1c]
100254f7:	sub    DWORD PTR [eax+0x14],edi
100254fa:	mov    esi,DWORD PTR [esi+0x1c]
100254fd:	add    esp,0xc
10025500:	cmp    DWORD PTR [esi+0x14],0x0
10025504:	jne    0x1002550c
10025506:	mov    edx,DWORD PTR [esi+0x8]
10025509:	mov    DWORD PTR [esi+0x10],edx
1002550c:	pop    edi
1002550d:	pop    esi
1002550e:	ret    
1002550f:	int3   
10025510:	mov    eax,DWORD PTR [esi+0x4]
10025513:	push   edi
10025514:	mov    edi,eax
10025516:	cmp    edi,ecx
10025518:	jbe    0x1002551c
1002551a:	mov    edi,ecx
1002551c:	test   edi,edi
1002551e:	jne    0x10025524
10025520:	xor    eax,eax
10025522:	pop    edi
10025523:	ret    
10025524:	sub    eax,edi
10025526:	mov    DWORD PTR [esi+0x4],eax
10025529:	mov    eax,DWORD PTR [esi+0x1c]
1002552c:	mov    eax,DWORD PTR [eax+0x18]
1002552f:	cmp    eax,0x1
10025532:	jne    0x10025543
10025534:	mov    ecx,DWORD PTR [esi]
10025536:	mov    edx,DWORD PTR [esi+0x30]
10025539:	push   edi
1002553a:	push   ecx
1002553b:	push   edx
1002553c:	call   0x10027980
10025541:	jmp    0x10025555
10025543:	cmp    eax,0x2
10025546:	jne    0x1002555b
10025548:	mov    eax,DWORD PTR [esi]
1002554a:	mov    ecx,DWORD PTR [esi+0x30]
1002554d:	push   edi
1002554e:	push   eax
1002554f:	push   ecx
10025550:	call   0x10029670
10025555:	mov    DWORD PTR [esi+0x30],eax
10025558:	add    esp,0xc
1002555b:	mov    edx,DWORD PTR [esi]
1002555d:	mov    eax,DWORD PTR [esp+0x8]
10025561:	push   edi
10025562:	push   edx
10025563:	push   eax
10025564:	call   0x10016820
10025569:	add    DWORD PTR [esi],edi
1002556b:	add    DWORD PTR [esi+0x8],edi
1002556e:	add    esp,0xc
10025571:	mov    eax,edi
10025573:	pop    edi
10025574:	ret    
10025575:	int3   
10025576:	int3   
10025577:	int3   
10025578:	int3   
10025579:	int3   
1002557a:	int3   
1002557b:	int3   
1002557c:	int3   
1002557d:	int3   
1002557e:	int3   
1002557f:	int3   
10025580:	sub    esp,0x14
10025583:	mov    ecx,DWORD PTR [edi+0x7c]
10025586:	mov    edx,DWORD PTR [edi+0x6c]
10025589:	push   ebx
1002558a:	push   ebp
1002558b:	mov    ebp,DWORD PTR [edi+0x78]
1002558e:	push   esi
1002558f:	mov    esi,DWORD PTR [edi+0x90]
10025595:	mov    DWORD PTR [esp+0x10],ecx
10025599:	mov    ecx,DWORD PTR [edi+0x38]
1002559c:	mov    DWORD PTR [esp+0x14],esi
100255a0:	mov    esi,DWORD PTR [edi+0x2c]
100255a3:	lea    ebx,[esi-0x106]
100255a9:	add    ecx,edx
100255ab:	cmp    edx,ebx
100255ad:	jbe    0x100255bd
100255af:	sub    edx,esi
100255b1:	add    edx,0x106
100255b7:	mov    DWORD PTR [esp+0x18],edx
100255bb:	jmp    0x100255c5
100255bd:	mov    DWORD PTR [esp+0x18],0x0
100255c5:	cmp    ebp,DWORD PTR [edi+0x8c]
100255cb:	movzx  edx,BYTE PTR [ecx+ebp*1-0x1]
100255d0:	mov    BYTE PTR [esp+0xe],dl
100255d4:	movzx  edx,BYTE PTR [ecx+ebp*1]
100255d8:	lea    esi,[ecx+0x102]
100255de:	mov    BYTE PTR [esp+0xf],dl
100255e2:	jb     0x100255e9
100255e4:	shr    DWORD PTR [esp+0x10],0x2
100255e9:	mov    edx,DWORD PTR [edi+0x74]
100255ec:	cmp    DWORD PTR [esp+0x14],edx
100255f0:	jbe    0x100255f6
100255f2:	mov    DWORD PTR [esp+0x14],edx
100255f6:	mov    edx,DWORD PTR [edi+0x38]
100255f9:	mov    bl,BYTE PTR [esp+0xf]
100255fd:	add    edx,eax
100255ff:	cmp    BYTE PTR [edx+ebp*1],bl
10025602:	jne    0x100256cf
10025608:	mov    bl,BYTE PTR [esp+0xe]
1002560c:	cmp    BYTE PTR [edx+ebp*1-0x1],bl
10025610:	jne    0x100256cf
10025616:	mov    bl,BYTE PTR [edx]
10025618:	cmp    bl,BYTE PTR [ecx]
1002561a:	jne    0x100256cf
10025620:	mov    bl,BYTE PTR [edx+0x1]
10025623:	add    edx,0x1
10025626:	cmp    bl,BYTE PTR [ecx+0x1]
10025629:	jne    0x100256cf
1002562f:	add    ecx,0x2
10025632:	add    edx,0x1
10025635:	mov    bl,BYTE PTR [ecx+0x1]
10025638:	add    ecx,0x1
1002563b:	add    edx,0x1
1002563e:	cmp    bl,BYTE PTR [edx]
10025640:	jne    0x100256a1
10025642:	mov    bl,BYTE PTR [ecx+0x1]
10025645:	add    ecx,0x1
10025648:	add    edx,0x1
1002564b:	cmp    bl,BYTE PTR [edx]
1002564d:	jne    0x100256a1
1002564f:	mov    bl,BYTE PTR [ecx+0x1]
10025652:	add    ecx,0x1
10025655:	add    edx,0x1
10025658:	cmp    bl,BYTE PTR [edx]
1002565a:	jne    0x100256a1
1002565c:	mov    bl,BYTE PTR [ecx+0x1]
1002565f:	add    ecx,0x1
10025662:	add    edx,0x1
10025665:	cmp    bl,BYTE PTR [edx]
10025667:	jne    0x100256a1
10025669:	mov    bl,BYTE PTR [ecx+0x1]
1002566c:	add    ecx,0x1
1002566f:	add    edx,0x1
10025672:	cmp    bl,BYTE PTR [edx]
10025674:	jne    0x100256a1
10025676:	mov    bl,BYTE PTR [ecx+0x1]
10025679:	add    ecx,0x1
1002567c:	add    edx,0x1
1002567f:	cmp    bl,BYTE PTR [edx]
10025681:	jne    0x100256a1
10025683:	mov    bl,BYTE PTR [ecx+0x1]
10025686:	add    ecx,0x1
10025689:	add    edx,0x1
1002568c:	cmp    bl,BYTE PTR [edx]
1002568e:	jne    0x100256a1
10025690:	mov    bl,BYTE PTR [ecx+0x1]
10025693:	add    ecx,0x1
10025696:	add    edx,0x1
10025699:	cmp    bl,BYTE PTR [edx]
1002569b:	jne    0x100256a1
1002569d:	cmp    ecx,esi
1002569f:	jb     0x10025635
100256a1:	mov    edx,ecx
100256a3:	sub    edx,esi
100256a5:	add    edx,0x102
100256ab:	cmp    edx,ebp
100256ad:	lea    ecx,[esi-0x102]
100256b3:	jle    0x100256cf
100256b5:	cmp    edx,DWORD PTR [esp+0x14]
100256b9:	mov    DWORD PTR [edi+0x70],eax
100256bc:	mov    ebp,edx
100256be:	jge    0x100256ec
100256c0:	mov    bl,BYTE PTR [edx+ecx*1-0x1]
100256c4:	mov    dl,BYTE PTR [edx+ecx*1]
100256c7:	mov    BYTE PTR [esp+0xe],bl
100256cb:	mov    BYTE PTR [esp+0xf],dl
100256cf:	mov    edx,DWORD PTR [edi+0x34]
100256d2:	and    edx,eax
100256d4:	mov    eax,DWORD PTR [edi+0x40]
100256d7:	movzx  eax,WORD PTR [eax+edx*2]
100256db:	cmp    eax,DWORD PTR [esp+0x18]
100256df:	jbe    0x100256ec
100256e1:	sub    DWORD PTR [esp+0x10],0x1
100256e6:	jne    0x100255f6
100256ec:	mov    eax,DWORD PTR [edi+0x74]
100256ef:	cmp    ebp,eax
100256f1:	ja     0x100256f5
100256f3:	mov    eax,ebp
100256f5:	pop    esi
100256f6:	pop    ebp
100256f7:	pop    ebx
100256f8:	add    esp,0x14
100256fb:	ret    
100256fc:	int3   
100256fd:	int3   
100256fe:	int3   
100256ff:	int3   
10025700:	mov    ecx,DWORD PTR [esi+0x38]
10025703:	mov    eax,DWORD PTR [esi+0x6c]
10025706:	push   ebp
10025707:	mov    ebp,DWORD PTR [esp+0x8]
1002570b:	mov    dl,BYTE PTR [ecx+ebp*1]
1002570e:	add    eax,ecx
10025710:	add    ecx,ebp
10025712:	cmp    dl,BYTE PTR [eax]
10025714:	push   edi
10025715:	lea    edi,[eax+0x102]
1002571b:	jne    0x100257ba
10025721:	mov    dl,BYTE PTR [ecx+0x1]
10025724:	cmp    dl,BYTE PTR [eax+0x1]
10025727:	jne    0x100257ba
1002572d:	add    eax,0x2
10025730:	add    ecx,0x2
10025733:	mov    dl,BYTE PTR [eax+0x1]
10025736:	add    eax,0x1
10025739:	add    ecx,0x1
1002573c:	cmp    dl,BYTE PTR [ecx]
1002573e:	jne    0x1002579f
10025740:	mov    dl,BYTE PTR [eax+0x1]
10025743:	add    eax,0x1
10025746:	add    ecx,0x1
10025749:	cmp    dl,BYTE PTR [ecx]
1002574b:	jne    0x1002579f
1002574d:	mov    dl,BYTE PTR [eax+0x1]
10025750:	add    eax,0x1
10025753:	add    ecx,0x1
10025756:	cmp    dl,BYTE PTR [ecx]
10025758:	jne    0x1002579f
1002575a:	mov    dl,BYTE PTR [eax+0x1]
1002575d:	add    eax,0x1
10025760:	add    ecx,0x1
10025763:	cmp    dl,BYTE PTR [ecx]
10025765:	jne    0x1002579f
10025767:	mov    dl,BYTE PTR [eax+0x1]
1002576a:	add    eax,0x1
1002576d:	add    ecx,0x1
10025770:	cmp    dl,BYTE PTR [ecx]
10025772:	jne    0x1002579f
10025774:	mov    dl,BYTE PTR [eax+0x1]
10025777:	add    eax,0x1
1002577a:	add    ecx,0x1
1002577d:	cmp    dl,BYTE PTR [ecx]
1002577f:	jne    0x1002579f
10025781:	mov    dl,BYTE PTR [eax+0x1]
10025784:	add    eax,0x1
10025787:	add    ecx,0x1
1002578a:	cmp    dl,BYTE PTR [ecx]
1002578c:	jne    0x1002579f
1002578e:	mov    dl,BYTE PTR [eax+0x1]
10025791:	add    eax,0x1
10025794:	add    ecx,0x1
10025797:	cmp    dl,BYTE PTR [ecx]
10025799:	jne    0x1002579f
1002579b:	cmp    eax,edi
1002579d:	jb     0x10025733
1002579f:	sub    eax,edi
100257a1:	add    eax,0x102
100257a6:	cmp    eax,0x3
100257a9:	jl     0x100257ba
100257ab:	mov    ecx,DWORD PTR [esi+0x74]
100257ae:	cmp    eax,ecx
100257b0:	mov    DWORD PTR [esi+0x70],ebp
100257b3:	jbe    0x100257bf
100257b5:	pop    edi
100257b6:	mov    eax,ecx
100257b8:	pop    ebp
100257b9:	ret    
100257ba:	mov    eax,0x2
100257bf:	pop    edi
100257c0:	pop    ebp
100257c1:	ret    
100257c2:	int3   
100257c3:	int3   
100257c4:	int3   
100257c5:	int3   
100257c6:	int3   
100257c7:	int3   
100257c8:	int3   
100257c9:	int3   
100257ca:	int3   
100257cb:	int3   
100257cc:	int3   
100257cd:	int3   
100257ce:	int3   
100257cf:	int3   
100257d0:	push   ebx
100257d1:	mov    ebx,DWORD PTR [edi+0x2c]
100257d4:	push   ebp
100257d5:	push   esi
100257d6:	mov    ebp,DWORD PTR [edi+0x3c]
100257d9:	sub    ebp,DWORD PTR [edi+0x74]
100257dc:	mov    eax,DWORD PTR [edi+0x6c]
100257df:	mov    ecx,DWORD PTR [edi+0x2c]
100257e2:	lea    edx,[ebx+ecx*1-0x106]
100257e9:	sub    ebp,eax
100257eb:	cmp    eax,edx
100257ed:	jb     0x1002584e
100257ef:	mov    eax,DWORD PTR [edi+0x38]
100257f2:	push   ebx
100257f3:	lea    ecx,[eax+ebx*1]
100257f6:	push   ecx
100257f7:	push   eax
100257f8:	call   0x10016820
100257fd:	mov    edx,DWORD PTR [edi+0x4c]
10025800:	mov    eax,DWORD PTR [edi+0x44]
10025803:	sub    DWORD PTR [edi+0x70],ebx
10025806:	sub    DWORD PTR [edi+0x6c],ebx
10025809:	add    esp,0xc
1002580c:	sub    DWORD PTR [edi+0x5c],ebx
1002580f:	lea    ecx,[eax+edx*2]
10025812:	movzx  eax,WORD PTR [ecx-0x2]
10025816:	sub    ecx,0x2
10025819:	cmp    eax,ebx
1002581b:	jb     0x10025821
1002581d:	sub    eax,ebx
1002581f:	jmp    0x10025823
10025821:	xor    eax,eax
10025823:	sub    edx,0x1
10025826:	mov    WORD PTR [ecx],ax
10025829:	jne    0x10025812
1002582b:	mov    ecx,DWORD PTR [edi+0x40]
1002582e:	mov    edx,ebx
10025830:	lea    ecx,[ecx+ebx*2]
10025833:	movzx  eax,WORD PTR [ecx-0x2]
10025837:	sub    ecx,0x2
1002583a:	cmp    eax,ebx
1002583c:	jb     0x10025842
1002583e:	sub    eax,ebx
10025840:	jmp    0x10025844
10025842:	xor    eax,eax
10025844:	sub    edx,0x1
10025847:	mov    WORD PTR [ecx],ax
1002584a:	jne    0x10025833
1002584c:	add    ebp,ebx
1002584e:	mov    esi,DWORD PTR [edi]
10025850:	cmp    DWORD PTR [esi+0x4],0x0
10025854:	je     0x100258a9
10025856:	mov    edx,DWORD PTR [edi+0x74]
10025859:	add    edx,DWORD PTR [edi+0x6c]
1002585c:	mov    ecx,ebp
1002585e:	add    edx,DWORD PTR [edi+0x38]
10025861:	push   edx
10025862:	call   0x10025510
10025867:	add    DWORD PTR [edi+0x74],eax
1002586a:	mov    edx,DWORD PTR [edi+0x74]
1002586d:	add    esp,0x4
10025870:	cmp    edx,0x3
10025873:	jb     0x10025895
10025875:	mov    eax,DWORD PTR [edi+0x6c]
10025878:	mov    ecx,DWORD PTR [edi+0x38]
1002587b:	lea    esi,[eax+ecx*1]
1002587e:	movzx  eax,BYTE PTR [esi]
10025881:	mov    ecx,DWORD PTR [edi+0x58]
10025884:	mov    DWORD PTR [edi+0x48],eax
10025887:	shl    eax,cl
10025889:	movzx  ecx,BYTE PTR [esi+0x1]
1002588d:	xor    eax,ecx
1002588f:	and    eax,DWORD PTR [edi+0x54]
10025892:	mov    DWORD PTR [edi+0x48],eax
10025895:	cmp    edx,0x106
1002589b:	jae    0x100258a9
1002589d:	mov    edx,DWORD PTR [edi]
1002589f:	cmp    DWORD PTR [edx+0x4],0x0
100258a3:	jne    0x100257d6
100258a9:	pop    esi
100258aa:	pop    ebp
100258ab:	pop    ebx
100258ac:	ret    
100258ad:	int3   
100258ae:	int3   
100258af:	int3   
100258b0:	push   esi
100258b1:	push   edi
100258b2:	mov    edi,DWORD PTR [esp+0xc]
100258b6:	mov    eax,DWORD PTR [edi+0xc]
100258b9:	mov    esi,0xffff
100258be:	add    eax,0xfffffffb
100258c1:	cmp    eax,esi
100258c3:	jae    0x100258c7
100258c5:	mov    esi,eax
100258c7:	mov    eax,DWORD PTR [edi+0x74]
100258ca:	cmp    eax,0x1
100258cd:	ja     0x100258df
100258cf:	call   0x100257d0
100258d4:	mov    eax,DWORD PTR [edi+0x74]
100258d7:	test   eax,eax
100258d9:	je     0x1002597d
100258df:	add    DWORD PTR [edi+0x6c],eax
100258e2:	mov    ecx,DWORD PTR [edi+0x5c]
100258e5:	mov    edx,DWORD PTR [edi+0x6c]
100258e8:	mov    DWORD PTR [edi+0x74],0x0
100258ef:	lea    eax,[ecx+esi*1]
100258f2:	je     0x100258f8
100258f4:	cmp    edx,eax
100258f6:	jb     0x10025931
100258f8:	sub    edx,eax
100258fa:	test   ecx,ecx
100258fc:	mov    DWORD PTR [edi+0x74],edx
100258ff:	mov    DWORD PTR [edi+0x6c],eax
10025902:	jl     0x1002590b
10025904:	mov    edx,DWORD PTR [edi+0x38]
10025907:	add    edx,ecx
10025909:	jmp    0x1002590d
1002590b:	xor    edx,edx
1002590d:	push   0x0
1002590f:	sub    eax,ecx
10025911:	push   eax
10025912:	push   edx
10025913:	push   edi
10025914:	call   0x100291c0
10025919:	mov    eax,DWORD PTR [edi+0x6c]
1002591c:	mov    DWORD PTR [edi+0x5c],eax
1002591f:	mov    eax,DWORD PTR [edi]
10025921:	add    esp,0x10
10025924:	call   0x100254c0
10025929:	mov    ecx,DWORD PTR [edi]
1002592b:	cmp    DWORD PTR [ecx+0x10],0x0
1002592f:	je     0x10025978
10025931:	mov    ecx,DWORD PTR [edi+0x5c]
10025934:	mov    edx,DWORD PTR [edi+0x6c]
10025937:	mov    eax,DWORD PTR [edi+0x2c]
1002593a:	sub    edx,ecx
1002593c:	sub    eax,0x106
10025941:	cmp    edx,eax
10025943:	jb     0x100258c7
10025945:	test   ecx,ecx
10025947:	jl     0x10025950
10025949:	mov    eax,DWORD PTR [edi+0x38]
1002594c:	add    eax,ecx
1002594e:	jmp    0x10025952
10025950:	xor    eax,eax
10025952:	push   0x0
10025954:	push   edx
10025955:	push   eax
10025956:	push   edi
10025957:	call   0x100291c0
1002595c:	mov    ecx,DWORD PTR [edi+0x6c]
1002595f:	mov    eax,DWORD PTR [edi]
10025961:	add    esp,0x10
10025964:	mov    DWORD PTR [edi+0x5c],ecx
10025967:	call   0x100254c0
1002596c:	mov    edx,DWORD PTR [edi]
1002596e:	cmp    DWORD PTR [edx+0x10],0x0
10025972:	jne    0x100258c7
10025978:	pop    edi
10025979:	xor    eax,eax
1002597b:	pop    esi
1002597c:	ret    
1002597d:	mov    esi,DWORD PTR [esp+0x10]
10025981:	test   esi,esi
10025983:	je     0x10025978
10025985:	mov    ecx,DWORD PTR [edi+0x5c]
10025988:	test   ecx,ecx
1002598a:	jl     0x10025993
1002598c:	mov    eax,DWORD PTR [edi+0x38]
1002598f:	add    eax,ecx
10025991:	jmp    0x10025995
10025993:	xor    eax,eax
10025995:	xor    edx,edx
10025997:	cmp    esi,0x4
1002599a:	sete   dl
1002599d:	push   edx
1002599e:	mov    edx,DWORD PTR [edi+0x6c]
100259a1:	sub    edx,ecx
100259a3:	push   edx
100259a4:	push   eax
100259a5:	push   edi
100259a6:	call   0x100291c0
100259ab:	mov    eax,DWORD PTR [edi+0x6c]
100259ae:	mov    DWORD PTR [edi+0x5c],eax
100259b1:	mov    eax,DWORD PTR [edi]
100259b3:	add    esp,0x10
100259b6:	call   0x100254c0
100259bb:	mov    ecx,DWORD PTR [edi]
100259bd:	xor    eax,eax
100259bf:	cmp    DWORD PTR [ecx+0x10],eax
100259c2:	jne    0x100259d3
100259c4:	cmp    esi,0x4
100259c7:	setne  al
100259ca:	pop    edi
100259cb:	pop    esi
100259cc:	sub    eax,0x1
100259cf:	and    eax,0x2
100259d2:	ret    
100259d3:	cmp    esi,0x4
100259d6:	sete   al
100259d9:	pop    edi
100259da:	pop    esi
100259db:	lea    eax,[eax+eax*1+0x1]
100259df:	ret    
100259e0:	push   ebx
100259e1:	push   ebp
100259e2:	push   esi
100259e3:	xor    ebp,ebp
100259e5:	push   edi
100259e6:	mov    edi,DWORD PTR [esp+0x14]
100259ea:	lea    ebx,[ebp+0x1]
100259ed:	lea    ecx,[ecx+0x0]
100259f0:	mov    eax,DWORD PTR [edi+0x74]
100259f3:	cmp    eax,0x106
100259f8:	jae    0x10025a1d
100259fa:	call   0x100257d0
100259ff:	mov    eax,DWORD PTR [edi+0x74]
10025a02:	cmp    eax,0x106
10025a07:	mov    esi,DWORD PTR [esp+0x18]
10025a0b:	jae    0x10025a15
10025a0d:	test   esi,esi
10025a0f:	je     0x10025c94
10025a15:	test   eax,eax
10025a17:	je     0x10025c9b
10025a1d:	cmp    eax,0x3
10025a20:	jb     0x10025a6b
10025a22:	mov    eax,DWORD PTR [edi+0x48]
10025a25:	mov    ecx,DWORD PTR [edi+0x58]
10025a28:	mov    edx,DWORD PTR [edi+0x6c]
10025a2b:	mov    esi,DWORD PTR [edi+0x34]
10025a2e:	shl    eax,cl
10025a30:	mov    ecx,DWORD PTR [edi+0x38]
10025a33:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
10025a38:	xor    eax,ecx
10025a3a:	and    eax,DWORD PTR [edi+0x54]
10025a3d:	mov    ecx,DWORD PTR [edi+0x44]
10025a40:	mov    DWORD PTR [edi+0x48],eax
10025a43:	mov    ax,WORD PTR [ecx+eax*2]
10025a47:	and    esi,edx
10025a49:	mov    edx,DWORD PTR [edi+0x40]
10025a4c:	mov    WORD PTR [edx+esi*2],ax
10025a50:	mov    ecx,DWORD PTR [edi+0x6c]
10025a53:	and    ecx,DWORD PTR [edi+0x34]
10025a56:	mov    edx,DWORD PTR [edi+0x40]
10025a59:	movzx  ebp,WORD PTR [edx+ecx*2]
10025a5d:	mov    eax,DWORD PTR [edi+0x48]
10025a60:	mov    ecx,DWORD PTR [edi+0x44]
10025a63:	mov    dx,WORD PTR [edi+0x6c]
10025a67:	mov    WORD PTR [ecx+eax*2],dx
10025a6b:	test   ebp,ebp
10025a6d:	je     0x10025ab1
10025a6f:	mov    eax,DWORD PTR [edi+0x6c]
10025a72:	mov    ecx,DWORD PTR [edi+0x2c]
10025a75:	sub    eax,ebp
10025a77:	sub    ecx,0x106
10025a7d:	cmp    eax,ecx
10025a7f:	ja     0x10025ab1
10025a81:	mov    ecx,DWORD PTR [edi+0x88]
10025a87:	cmp    ecx,0x2
10025a8a:	je     0x10025a9a
10025a8c:	cmp    ecx,0x3
10025a8f:	je     0x10025a9f
10025a91:	mov    eax,ebp
10025a93:	call   0x10025580
10025a98:	jmp    0x10025aae
10025a9a:	cmp    ecx,0x3
10025a9d:	jne    0x10025ab1
10025a9f:	cmp    eax,ebx
10025aa1:	jne    0x10025ab1
10025aa3:	push   ebp
10025aa4:	mov    esi,edi
10025aa6:	call   0x10025700
10025aab:	add    esp,0x4
10025aae:	mov    DWORD PTR [edi+0x60],eax
10025ab1:	cmp    DWORD PTR [edi+0x60],0x3
10025ab5:	jb     0x10025bf3
10025abb:	mov    dx,WORD PTR [edi+0x6c]
10025abf:	sub    dx,WORD PTR [edi+0x70]
10025ac3:	mov    al,BYTE PTR [edi+0x60]
10025ac6:	mov    esi,DWORD PTR [edi+0x16a4]
10025acc:	movzx  ecx,dx
10025acf:	mov    edx,DWORD PTR [edi+0x16a0]
10025ad5:	mov    WORD PTR [esi+edx*2],cx
10025ad9:	mov    edx,DWORD PTR [edi+0x1698]
10025adf:	mov    esi,DWORD PTR [edi+0x16a0]
10025ae5:	sub    al,0x3
10025ae7:	mov    BYTE PTR [edx+esi*1],al
10025aea:	add    DWORD PTR [edi+0x16a0],ebx
10025af0:	movzx  eax,al
10025af3:	movzx  edx,BYTE PTR [eax+0x10080300]
10025afa:	add    WORD PTR [edi+edx*4+0x498],bx
10025b02:	lea    eax,[edi+edx*4+0x498]
10025b09:	add    ecx,0xffff
10025b0f:	cmp    cx,0x100
10025b14:	jae    0x10025b22
10025b16:	movzx  eax,cx
10025b19:	movzx  eax,BYTE PTR [eax+0x10080100]
10025b20:	jmp    0x10025b2f
10025b22:	movzx  ecx,cx
10025b25:	shr    ecx,0x7
10025b28:	movzx  eax,BYTE PTR [ecx+0x10080200]
10025b2f:	add    WORD PTR [edi+eax*4+0x988],bx
10025b37:	mov    edx,DWORD PTR [edi+0x169c]
10025b3d:	xor    eax,eax
10025b3f:	sub    edx,ebx
10025b41:	cmp    DWORD PTR [edi+0x16a0],edx
10025b47:	sete   al
10025b4a:	mov    esi,eax
10025b4c:	mov    eax,DWORD PTR [edi+0x60]
10025b4f:	sub    DWORD PTR [edi+0x74],eax
10025b52:	cmp    eax,DWORD PTR [edi+0x80]
10025b58:	mov    ecx,DWORD PTR [edi+0x74]
10025b5b:	ja     0x10025bc7
10025b5d:	cmp    ecx,0x3
10025b60:	jb     0x10025bc7
10025b62:	add    eax,0xffffffff
10025b65:	mov    DWORD PTR [edi+0x60],eax
10025b68:	jmp    0x10025b70
10025b6a:	lea    ebx,[ebx+0x0]
10025b70:	add    DWORD PTR [edi+0x6c],ebx
10025b73:	mov    edx,DWORD PTR [edi+0x6c]
10025b76:	mov    ecx,DWORD PTR [edi+0x38]
10025b79:	movzx  eax,BYTE PTR [edx+ecx*1+0x2]
10025b7e:	mov    ebp,DWORD PTR [edi+0x48]
10025b81:	mov    ecx,DWORD PTR [edi+0x58]
10025b84:	shl    ebp,cl
10025b86:	mov    ecx,DWORD PTR [edi+0x44]
10025b89:	xor    eax,ebp
10025b8b:	and    eax,DWORD PTR [edi+0x54]
10025b8e:	mov    ebp,DWORD PTR [edi+0x34]
10025b91:	and    ebp,edx
10025b93:	mov    edx,DWORD PTR [edi+0x40]
10025b96:	mov    DWORD PTR [edi+0x48],eax
10025b99:	mov    ax,WORD PTR [ecx+eax*2]
10025b9d:	mov    WORD PTR [edx+ebp*2],ax
10025ba1:	mov    ecx,DWORD PTR [edi+0x6c]
10025ba4:	and    ecx,DWORD PTR [edi+0x34]
10025ba7:	mov    edx,DWORD PTR [edi+0x40]
10025baa:	movzx  ebp,WORD PTR [edx+ecx*2]
10025bae:	mov    eax,DWORD PTR [edi+0x48]
10025bb1:	mov    ecx,DWORD PTR [edi+0x44]
10025bb4:	mov    dx,WORD PTR [edi+0x6c]
10025bb8:	mov    WORD PTR [ecx+eax*2],dx
10025bbc:	add    DWORD PTR [edi+0x60],0xffffffff
10025bc0:	jne    0x10025b70
10025bc2:	jmp    0x10025c4e
10025bc7:	add    DWORD PTR [edi+0x6c],eax
10025bca:	mov    eax,DWORD PTR [edi+0x6c]
10025bcd:	mov    ecx,DWORD PTR [edi+0x38]
10025bd0:	lea    edx,[eax+ecx*1]
10025bd3:	mov    ecx,DWORD PTR [edi+0x58]
10025bd6:	mov    DWORD PTR [edi+0x60],0x0
10025bdd:	movzx  eax,BYTE PTR [edx]
10025be0:	mov    DWORD PTR [edi+0x48],eax
10025be3:	movzx  edx,BYTE PTR [edx+0x1]
10025be7:	shl    eax,cl
10025be9:	xor    eax,edx
10025beb:	and    eax,DWORD PTR [edi+0x54]
10025bee:	mov    DWORD PTR [edi+0x48],eax
10025bf1:	jmp    0x10025c51
10025bf3:	mov    eax,DWORD PTR [edi+0x6c]
10025bf6:	mov    ecx,DWORD PTR [edi+0x38]
10025bf9:	mov    al,BYTE PTR [eax+ecx*1]
10025bfc:	mov    edx,DWORD PTR [edi+0x16a0]
10025c02:	mov    ecx,DWORD PTR [edi+0x16a4]
10025c08:	mov    WORD PTR [ecx+edx*2],0x0
10025c0e:	mov    ecx,DWORD PTR [edi+0x16a0]
10025c14:	mov    edx,DWORD PTR [edi+0x1698]
10025c1a:	mov    BYTE PTR [edx+ecx*1],al
10025c1d:	add    DWORD PTR [edi+0x16a0],ebx
10025c23:	movzx  edx,al
10025c26:	add    WORD PTR [edi+edx*4+0x94],bx
10025c2e:	lea    eax,[edi+edx*4+0x94]
10025c35:	mov    eax,DWORD PTR [edi+0x169c]
10025c3b:	xor    ecx,ecx
10025c3d:	sub    eax,ebx
10025c3f:	cmp    DWORD PTR [edi+0x16a0],eax
10025c45:	sete   cl
10025c48:	add    DWORD PTR [edi+0x74],0xffffffff
10025c4c:	mov    esi,ecx
10025c4e:	add    DWORD PTR [edi+0x6c],ebx
10025c51:	test   esi,esi
10025c53:	je     0x100259f0
10025c59:	mov    ecx,DWORD PTR [edi+0x5c]
10025c5c:	test   ecx,ecx
10025c5e:	jl     0x10025c67
10025c60:	mov    eax,DWORD PTR [edi+0x38]
10025c63:	add    eax,ecx
10025c65:	jmp    0x10025c69
10025c67:	xor    eax,eax
10025c69:	mov    edx,DWORD PTR [edi+0x6c]
10025c6c:	push   0x0
10025c6e:	sub    edx,ecx
10025c70:	push   edx
10025c71:	push   eax
10025c72:	push   edi
10025c73:	call   0x100291c0
10025c78:	mov    eax,DWORD PTR [edi+0x6c]
10025c7b:	mov    DWORD PTR [edi+0x5c],eax
10025c7e:	mov    eax,DWORD PTR [edi]
10025c80:	add    esp,0x10
10025c83:	call   0x100254c0
10025c88:	mov    ecx,DWORD PTR [edi]
10025c8a:	cmp    DWORD PTR [ecx+0x10],0x0
10025c8e:	jne    0x100259f0
10025c94:	pop    edi
10025c95:	pop    esi
10025c96:	pop    ebp
10025c97:	xor    eax,eax
10025c99:	pop    ebx
10025c9a:	ret    
10025c9b:	mov    ecx,DWORD PTR [edi+0x5c]
10025c9e:	test   ecx,ecx
10025ca0:	jl     0x10025ca9
10025ca2:	mov    eax,DWORD PTR [edi+0x38]
10025ca5:	add    eax,ecx
10025ca7:	jmp    0x10025cab
10025ca9:	xor    eax,eax
10025cab:	xor    edx,edx
10025cad:	cmp    esi,0x4
10025cb0:	sete   dl
10025cb3:	push   edx
10025cb4:	mov    edx,DWORD PTR [edi+0x6c]
10025cb7:	sub    edx,ecx
10025cb9:	push   edx
10025cba:	push   eax
10025cbb:	push   edi
10025cbc:	call   0x100291c0
10025cc1:	mov    eax,DWORD PTR [edi+0x6c]
10025cc4:	mov    DWORD PTR [edi+0x5c],eax
10025cc7:	mov    eax,DWORD PTR [edi]
10025cc9:	add    esp,0x10
10025ccc:	call   0x100254c0
10025cd1:	mov    ecx,DWORD PTR [edi]
10025cd3:	xor    eax,eax
10025cd5:	cmp    DWORD PTR [ecx+0x10],eax
10025cd8:	jne    0x10025ceb
10025cda:	cmp    esi,0x4
10025cdd:	setne  al
10025ce0:	pop    edi
10025ce1:	pop    esi
10025ce2:	pop    ebp
10025ce3:	pop    ebx
10025ce4:	sub    eax,0x1
10025ce7:	and    eax,0x2
10025cea:	ret    
10025ceb:	cmp    esi,0x4
10025cee:	sete   al
10025cf1:	pop    edi
10025cf2:	pop    esi
10025cf3:	pop    ebp
10025cf4:	pop    ebx
10025cf5:	lea    eax,[eax+eax*1+0x1]
10025cf9:	ret    
10025cfa:	int3   
10025cfb:	int3   
10025cfc:	int3   
10025cfd:	int3   
10025cfe:	int3   
10025cff:	int3   
10025d00:	push   ecx
10025d01:	push   ebx
10025d02:	push   ebp
10025d03:	push   esi
10025d04:	push   edi
10025d05:	mov    edi,DWORD PTR [esp+0x18]
10025d09:	mov    DWORD PTR [esp+0x10],0x0
10025d11:	mov    ebp,0x1
10025d16:	mov    eax,DWORD PTR [edi+0x74]
10025d19:	cmp    eax,0x106
10025d1e:	jae    0x10025d43
10025d20:	call   0x100257d0
10025d25:	mov    eax,DWORD PTR [edi+0x74]
10025d28:	cmp    eax,0x106
10025d2d:	mov    esi,DWORD PTR [esp+0x1c]
10025d31:	jae    0x10025d3b
10025d33:	test   esi,esi
10025d35:	je     0x10025f96
10025d3b:	test   eax,eax
10025d3d:	je     0x1002604b
10025d43:	cmp    eax,0x3
10025d46:	jb     0x10025d95
10025d48:	mov    eax,DWORD PTR [edi+0x48]
10025d4b:	mov    ecx,DWORD PTR [edi+0x58]
10025d4e:	mov    edx,DWORD PTR [edi+0x6c]
10025d51:	mov    esi,DWORD PTR [edi+0x34]
10025d54:	shl    eax,cl
10025d56:	mov    ecx,DWORD PTR [edi+0x38]
10025d59:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
10025d5e:	xor    eax,ecx
10025d60:	and    eax,DWORD PTR [edi+0x54]
10025d63:	mov    ecx,DWORD PTR [edi+0x44]
10025d66:	mov    DWORD PTR [edi+0x48],eax
10025d69:	movzx  eax,WORD PTR [ecx+eax*2]
10025d6d:	and    esi,edx
10025d6f:	mov    edx,DWORD PTR [edi+0x40]
10025d72:	mov    WORD PTR [edx+esi*2],ax
10025d76:	mov    ecx,DWORD PTR [edi+0x6c]
10025d79:	and    ecx,DWORD PTR [edi+0x34]
10025d7c:	mov    edx,DWORD PTR [edi+0x40]
10025d7f:	movzx  eax,WORD PTR [edx+ecx*2]
10025d83:	mov    ecx,DWORD PTR [edi+0x48]
10025d86:	mov    edx,DWORD PTR [edi+0x44]
10025d89:	mov    DWORD PTR [esp+0x10],eax
10025d8d:	movzx  eax,WORD PTR [edi+0x6c]
10025d91:	mov    WORD PTR [edx+ecx*2],ax
10025d95:	mov    edx,DWORD PTR [edi+0x70]
10025d98:	mov    ecx,DWORD PTR [edi+0x60]
10025d9b:	mov    DWORD PTR [edi+0x64],edx
10025d9e:	mov    edx,DWORD PTR [esp+0x10]
10025da2:	test   edx,edx
10025da4:	mov    ebx,0x2
10025da9:	mov    DWORD PTR [edi+0x78],ecx
10025dac:	mov    DWORD PTR [edi+0x60],ebx
10025daf:	je     0x10025e22
10025db1:	mov    eax,ecx
10025db3:	cmp    eax,DWORD PTR [edi+0x80]
10025db9:	jae    0x10025e22
10025dbb:	mov    eax,DWORD PTR [edi+0x6c]
10025dbe:	mov    ecx,DWORD PTR [edi+0x2c]
10025dc1:	sub    eax,edx
10025dc3:	sub    ecx,0x106
10025dc9:	cmp    eax,ecx
10025dcb:	ja     0x10025e22
10025dcd:	mov    ecx,DWORD PTR [edi+0x88]
10025dd3:	cmp    ecx,ebx
10025dd5:	je     0x10025de5
10025dd7:	cmp    ecx,0x3
10025dda:	je     0x10025dea
10025ddc:	mov    eax,edx
10025dde:	call   0x10025580
10025de3:	jmp    0x10025df9
10025de5:	cmp    ecx,0x3
10025de8:	jne    0x10025dfc
10025dea:	cmp    eax,ebp
10025dec:	jne    0x10025dfc
10025dee:	push   edx
10025def:	mov    esi,edi
10025df1:	call   0x10025700
10025df6:	add    esp,0x4
10025df9:	mov    DWORD PTR [edi+0x60],eax
10025dfc:	mov    eax,DWORD PTR [edi+0x60]
10025dff:	cmp    eax,0x5
10025e02:	ja     0x10025e22
10025e04:	cmp    DWORD PTR [edi+0x88],ebp
10025e0a:	je     0x10025e1f
10025e0c:	cmp    eax,0x3
10025e0f:	jne    0x10025e22
10025e11:	mov    edx,DWORD PTR [edi+0x6c]
10025e14:	sub    edx,DWORD PTR [edi+0x70]
10025e17:	cmp    edx,0x1000
10025e1d:	jbe    0x10025e22
10025e1f:	mov    DWORD PTR [edi+0x60],ebx
10025e22:	mov    eax,DWORD PTR [edi+0x78]
10025e25:	cmp    eax,0x3
10025e28:	jb     0x10025f9e
10025e2e:	cmp    DWORD PTR [edi+0x60],eax
10025e31:	ja     0x10025f9e
10025e37:	mov    dx,WORD PTR [edi+0x6c]
10025e3b:	sub    dx,WORD PTR [edi+0x64]
10025e3f:	mov    eax,DWORD PTR [edi+0x6c]
10025e42:	mov    ecx,DWORD PTR [edi+0x74]
10025e45:	mov    ebx,DWORD PTR [edi+0x16a4]
10025e4b:	lea    esi,[eax+ecx*1-0x3]
10025e4f:	mov    al,BYTE PTR [edi+0x78]
10025e52:	sub    dx,bp
10025e55:	movzx  ecx,dx
10025e58:	mov    edx,DWORD PTR [edi+0x16a0]
10025e5e:	mov    WORD PTR [ebx+edx*2],cx
10025e62:	mov    edx,DWORD PTR [edi+0x1698]
10025e68:	mov    ebx,DWORD PTR [edi+0x16a0]
10025e6e:	sub    al,0x3
10025e70:	mov    BYTE PTR [edx+ebx*1],al
10025e73:	add    DWORD PTR [edi+0x16a0],ebp
10025e79:	movzx  eax,al
10025e7c:	movzx  edx,BYTE PTR [eax+0x10080300]
10025e83:	add    WORD PTR [edi+edx*4+0x498],bp
10025e8b:	lea    eax,[edi+edx*4+0x498]
10025e92:	add    ecx,0xffff
10025e98:	cmp    cx,0x100
10025e9d:	jae    0x10025eab
10025e9f:	movzx  eax,cx
10025ea2:	movzx  eax,BYTE PTR [eax+0x10080100]
10025ea9:	jmp    0x10025eb8
10025eab:	movzx  ecx,cx
10025eae:	shr    ecx,0x7
10025eb1:	movzx  eax,BYTE PTR [ecx+0x10080200]
10025eb8:	add    WORD PTR [edi+eax*4+0x988],bp
10025ec0:	mov    edx,DWORD PTR [edi+0x169c]
10025ec6:	mov    eax,DWORD PTR [edi+0x78]
10025ec9:	sub    edx,ebp
10025ecb:	xor    ebx,ebx
10025ecd:	cmp    DWORD PTR [edi+0x16a0],edx
10025ed3:	mov    ecx,ebp
10025ed5:	sete   bl
10025ed8:	sub    ecx,eax
10025eda:	add    DWORD PTR [edi+0x74],ecx
10025edd:	add    eax,0xfffffffe
10025ee0:	mov    DWORD PTR [edi+0x78],eax
10025ee3:	add    DWORD PTR [edi+0x6c],ebp
10025ee6:	mov    edx,DWORD PTR [edi+0x6c]
10025ee9:	cmp    edx,esi
10025eeb:	ja     0x10025f3c
10025eed:	mov    eax,DWORD PTR [edi+0x48]
10025ef0:	mov    ecx,DWORD PTR [edi+0x58]
10025ef3:	mov    ebp,DWORD PTR [edi+0x34]
10025ef6:	shl    eax,cl
10025ef8:	mov    ecx,DWORD PTR [edi+0x38]
10025efb:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
10025f00:	xor    eax,ecx
10025f02:	and    eax,DWORD PTR [edi+0x54]
10025f05:	mov    ecx,DWORD PTR [edi+0x44]
10025f08:	mov    DWORD PTR [edi+0x48],eax
10025f0b:	movzx  eax,WORD PTR [ecx+eax*2]
10025f0f:	and    ebp,edx
10025f11:	mov    edx,DWORD PTR [edi+0x40]
10025f14:	mov    WORD PTR [edx+ebp*2],ax
10025f18:	mov    ecx,DWORD PTR [edi+0x6c]
10025f1b:	and    ecx,DWORD PTR [edi+0x34]
10025f1e:	mov    edx,DWORD PTR [edi+0x40]
10025f21:	movzx  eax,WORD PTR [edx+ecx*2]
10025f25:	mov    ecx,DWORD PTR [edi+0x48]
10025f28:	mov    edx,DWORD PTR [edi+0x44]
10025f2b:	mov    DWORD PTR [esp+0x10],eax
10025f2f:	movzx  eax,WORD PTR [edi+0x6c]
10025f33:	mov    WORD PTR [edx+ecx*2],ax
10025f37:	mov    ebp,0x1
10025f3c:	add    DWORD PTR [edi+0x78],0xffffffff
10025f40:	jne    0x10025ee3
10025f42:	add    DWORD PTR [edi+0x6c],ebp
10025f45:	test   ebx,ebx
10025f47:	mov    eax,DWORD PTR [edi+0x6c]
10025f4a:	mov    DWORD PTR [edi+0x68],0x0
10025f51:	mov    DWORD PTR [edi+0x60],0x2
10025f58:	je     0x10025d16
10025f5e:	mov    edx,DWORD PTR [edi+0x5c]
10025f61:	test   edx,edx
10025f63:	jl     0x10025f6c
10025f65:	mov    ecx,DWORD PTR [edi+0x38]
10025f68:	add    ecx,edx
10025f6a:	jmp    0x10025f6e
10025f6c:	xor    ecx,ecx
10025f6e:	push   0x0
10025f70:	sub    eax,edx
10025f72:	push   eax
10025f73:	push   ecx
10025f74:	push   edi
10025f75:	call   0x100291c0
10025f7a:	mov    ecx,DWORD PTR [edi+0x6c]
10025f7d:	mov    eax,DWORD PTR [edi]
10025f7f:	add    esp,0x10
10025f82:	mov    DWORD PTR [edi+0x5c],ecx
10025f85:	call   0x100254c0
10025f8a:	mov    edx,DWORD PTR [edi]
10025f8c:	cmp    DWORD PTR [edx+0x10],0x0
10025f90:	jne    0x10025d16
10025f96:	pop    edi
10025f97:	pop    esi
10025f98:	pop    ebp
10025f99:	xor    eax,eax
10025f9b:	pop    ebx
10025f9c:	pop    ecx
10025f9d:	ret    
10025f9e:	cmp    DWORD PTR [edi+0x68],0x0
10025fa2:	je     0x1002603c
10025fa8:	mov    eax,DWORD PTR [edi+0x6c]
10025fab:	mov    ecx,DWORD PTR [edi+0x38]
10025fae:	mov    al,BYTE PTR [eax+ecx*1-0x1]
10025fb2:	mov    edx,DWORD PTR [edi+0x16a0]
10025fb8:	mov    ecx,DWORD PTR [edi+0x16a4]
10025fbe:	mov    WORD PTR [ecx+edx*2],0x0
10025fc4:	mov    edx,DWORD PTR [edi+0x1698]
10025fca:	mov    ecx,DWORD PTR [edi+0x16a0]
10025fd0:	mov    BYTE PTR [edx+ecx*1],al
10025fd3:	add    DWORD PTR [edi+0x16a0],ebp
10025fd9:	movzx  edx,al
10025fdc:	add    WORD PTR [edi+edx*4+0x94],bp
10025fe4:	lea    eax,[edi+edx*4+0x94]
10025feb:	mov    eax,DWORD PTR [edi+0x169c]
10025ff1:	sub    eax,ebp
10025ff3:	cmp    DWORD PTR [edi+0x16a0],eax
10025ff9:	jne    0x1002602a
10025ffb:	mov    ecx,DWORD PTR [edi+0x5c]
10025ffe:	test   ecx,ecx
10026000:	jl     0x10026009
10026002:	mov    eax,DWORD PTR [edi+0x38]
10026005:	add    eax,ecx
10026007:	jmp    0x1002600b
10026009:	xor    eax,eax
1002600b:	mov    edx,DWORD PTR [edi+0x6c]
1002600e:	push   0x0
10026010:	sub    edx,ecx
10026012:	push   edx
10026013:	push   eax
10026014:	push   edi
10026015:	call   0x100291c0
1002601a:	mov    eax,DWORD PTR [edi+0x6c]
1002601d:	mov    DWORD PTR [edi+0x5c],eax
10026020:	mov    eax,DWORD PTR [edi]
10026022:	add    esp,0x10
10026025:	call   0x100254c0
1002602a:	mov    ecx,DWORD PTR [edi]
1002602c:	add    DWORD PTR [edi+0x6c],ebp
1002602f:	add    DWORD PTR [edi+0x74],0xffffffff
10026033:	cmp    DWORD PTR [ecx+0x10],0x0
10026037:	jmp    0x10025f90
1002603c:	add    DWORD PTR [edi+0x6c],ebp
1002603f:	add    DWORD PTR [edi+0x74],0xffffffff
10026043:	mov    DWORD PTR [edi+0x68],ebp
10026046:	jmp    0x10025d16
1002604b:	cmp    DWORD PTR [edi+0x68],0x0
1002604f:	je     0x1002609b
10026051:	mov    edx,DWORD PTR [edi+0x6c]
10026054:	mov    eax,DWORD PTR [edi+0x38]
10026057:	mov    al,BYTE PTR [edx+eax*1-0x1]
1002605b:	mov    ecx,DWORD PTR [edi+0x16a0]
10026061:	mov    edx,DWORD PTR [edi+0x16a4]
10026067:	mov    WORD PTR [edx+ecx*2],0x0
1002606d:	mov    edx,DWORD PTR [edi+0x16a0]
10026073:	mov    ecx,DWORD PTR [edi+0x1698]
10026079:	mov    BYTE PTR [ecx+edx*1],al
1002607c:	add    DWORD PTR [edi+0x16a0],ebp
10026082:	movzx  eax,al
10026085:	add    WORD PTR [edi+eax*4+0x94],bp
1002608d:	lea    eax,[edi+eax*4+0x94]
10026094:	mov    DWORD PTR [edi+0x68],0x0
1002609b:	mov    ecx,DWORD PTR [edi+0x5c]
1002609e:	test   ecx,ecx
100260a0:	jl     0x100260a9
100260a2:	mov    eax,DWORD PTR [edi+0x38]
100260a5:	add    eax,ecx
100260a7:	jmp    0x100260ab
100260a9:	xor    eax,eax
100260ab:	xor    edx,edx
100260ad:	cmp    esi,0x4
100260b0:	sete   dl
100260b3:	push   edx
100260b4:	mov    edx,DWORD PTR [edi+0x6c]
100260b7:	sub    edx,ecx
100260b9:	push   edx
100260ba:	push   eax
100260bb:	push   edi
100260bc:	call   0x100291c0
100260c1:	mov    eax,DWORD PTR [edi+0x6c]
100260c4:	mov    DWORD PTR [edi+0x5c],eax
100260c7:	mov    eax,DWORD PTR [edi]
100260c9:	add    esp,0x10
100260cc:	call   0x100254c0
100260d1:	mov    ecx,DWORD PTR [edi]
100260d3:	xor    eax,eax
100260d5:	cmp    DWORD PTR [ecx+0x10],eax
100260d8:	jne    0x100260ec
100260da:	cmp    esi,0x4
100260dd:	setne  al
100260e0:	pop    edi
100260e1:	pop    esi
100260e2:	pop    ebp
100260e3:	pop    ebx
100260e4:	sub    eax,0x1
100260e7:	and    eax,0x2
100260ea:	pop    ecx
100260eb:	ret    
100260ec:	cmp    esi,0x4
100260ef:	sete   al
100260f2:	pop    edi
100260f3:	pop    esi
100260f4:	pop    ebp
100260f5:	pop    ebx
100260f6:	lea    eax,[eax+eax*1+0x1]
100260fa:	pop    ecx
100260fb:	ret    
100260fc:	int3   
100260fd:	int3   
100260fe:	int3   
100260ff:	int3   
10026100:	mov    edx,DWORD PTR [esp+0x4]
10026104:	xor    ecx,ecx
10026106:	cmp    edx,ecx
10026108:	je     0x10026157
1002610a:	mov    eax,DWORD PTR [edx+0x1c]
1002610d:	cmp    eax,ecx
1002610f:	je     0x10026157
10026111:	mov    DWORD PTR [eax+0x1c],ecx
10026114:	mov    DWORD PTR [edx+0x14],ecx
10026117:	mov    DWORD PTR [edx+0x8],ecx
1002611a:	mov    DWORD PTR [edx+0x18],ecx
1002611d:	mov    DWORD PTR [edx+0x30],0x1
10026124:	mov    DWORD PTR [eax],ecx
10026126:	mov    DWORD PTR [eax+0x4],ecx
10026129:	mov    DWORD PTR [eax+0xc],ecx
1002612c:	mov    DWORD PTR [eax+0x20],ecx
1002612f:	mov    DWORD PTR [eax+0x28],ecx
10026132:	mov    DWORD PTR [eax+0x2c],ecx
10026135:	mov    DWORD PTR [eax+0x30],ecx
10026138:	mov    DWORD PTR [eax+0x38],ecx
1002613b:	mov    DWORD PTR [eax+0x3c],ecx
1002613e:	lea    ecx,[eax+0x530]
10026144:	mov    DWORD PTR [eax+0x14],0x8000
1002614b:	mov    DWORD PTR [eax+0x6c],ecx
1002614e:	mov    DWORD PTR [eax+0x50],ecx
10026151:	mov    DWORD PTR [eax+0x4c],ecx
10026154:	xor    eax,eax
10026156:	ret    
10026157:	mov    eax,0xfffffffe
1002615c:	ret    
1002615d:	int3   
1002615e:	int3   
1002615f:	int3   
10026160:	mov    eax,DWORD PTR [esp+0xc]
10026164:	push   edi
10026165:	xor    edi,edi
10026167:	cmp    eax,edi
10026169:	je     0x10026224
1002616f:	cmp    BYTE PTR [eax],0x31
10026172:	jne    0x10026224
10026178:	cmp    DWORD PTR [esp+0x14],0x38
1002617d:	jne    0x10026224
10026183:	push   esi
10026184:	mov    esi,DWORD PTR [esp+0xc]
10026188:	cmp    esi,edi
1002618a:	je     0x1002621c
10026190:	cmp    DWORD PTR [esi+0x20],edi
10026193:	mov    DWORD PTR [esi+0x18],edi
10026196:	jne    0x100261a2
10026198:	mov    DWORD PTR [esi+0x20],0x10029690
1002619f:	mov    DWORD PTR [esi+0x28],edi
100261a2:	cmp    DWORD PTR [esi+0x24],edi
100261a5:	jne    0x100261ae
100261a7:	mov    DWORD PTR [esi+0x24],0x100296b0
100261ae:	mov    eax,DWORD PTR [esi+0x28]
100261b1:	mov    ecx,DWORD PTR [esi+0x20]
100261b4:	push   0x2530
100261b9:	push   0x1
100261bb:	push   eax
100261bc:	call   ecx
100261be:	add    esp,0xc
100261c1:	cmp    eax,edi
100261c3:	jne    0x100261cd
100261c5:	pop    esi
100261c6:	mov    eax,0xfffffffc
100261cb:	pop    edi
100261cc:	ret    
100261cd:	mov    ecx,DWORD PTR [esp+0x10]
100261d1:	cmp    ecx,edi
100261d3:	mov    DWORD PTR [esi+0x1c],eax
100261d6:	jge    0x100261df
100261d8:	mov    DWORD PTR [eax+0x8],edi
100261db:	neg    ecx
100261dd:	jmp    0x100261f2
100261df:	mov    edx,ecx
100261e1:	sar    edx,0x4
100261e4:	add    edx,0x1
100261e7:	cmp    ecx,0x30
100261ea:	mov    DWORD PTR [eax+0x8],edx
100261ed:	jge    0x100261f2
100261ef:	and    ecx,0xf
100261f2:	lea    edx,[ecx-0x8]
100261f5:	cmp    edx,0x7
100261f8:	ja     0x1002620c
100261fa:	push   esi
100261fb:	mov    DWORD PTR [eax+0x24],ecx
100261fe:	mov    DWORD PTR [eax+0x34],edi
10026201:	call   0x10026100
10026206:	add    esp,0x4
10026209:	pop    esi
1002620a:	pop    edi
1002620b:	ret    
1002620c:	mov    ecx,DWORD PTR [esi+0x24]
1002620f:	push   eax
10026210:	mov    eax,DWORD PTR [esi+0x28]
10026213:	push   eax
10026214:	call   ecx
10026216:	add    esp,0x8
10026219:	mov    DWORD PTR [esi+0x1c],edi
1002621c:	pop    esi
1002621d:	mov    eax,0xfffffffe
10026222:	pop    edi
10026223:	ret    
10026224:	mov    eax,0xfffffffa
10026229:	pop    edi
1002622a:	ret    
1002622b:	int3   
1002622c:	int3   
1002622d:	int3   
1002622e:	int3   
1002622f:	int3   
10026230:	mov    DWORD PTR [eax+0x4c],0x1007f050
10026237:	mov    DWORD PTR [eax+0x54],0x9
1002623e:	mov    DWORD PTR [eax+0x50],0x1007f850
10026245:	mov    DWORD PTR [eax+0x58],0x5
1002624c:	ret    
1002624d:	int3   
1002624e:	int3   
1002624f:	int3   
10026250:	push   ebp
10026251:	push   esi
10026252:	mov    esi,DWORD PTR [ebx+0x1c]
10026255:	xor    ebp,ebp
10026257:	cmp    DWORD PTR [esi+0x34],ebp
1002625a:	push   edi
1002625b:	mov    edi,eax
1002625d:	jne    0x10026286
1002625f:	mov    ecx,DWORD PTR [esi+0x24]
10026262:	mov    edx,DWORD PTR [ebx+0x20]
10026265:	mov    eax,0x1
1002626a:	shl    eax,cl
1002626c:	mov    ecx,DWORD PTR [ebx+0x28]
1002626f:	push   0x1
10026271:	push   eax
10026272:	push   ecx
10026273:	call   edx
10026275:	add    esp,0xc
10026278:	cmp    eax,ebp
1002627a:	mov    DWORD PTR [esi+0x34],eax
1002627d:	jne    0x10026286
1002627f:	pop    edi
10026280:	pop    esi
10026281:	lea    eax,[ebp+0x1]
10026284:	pop    ebp
10026285:	ret    
10026286:	cmp    DWORD PTR [esi+0x28],ebp
10026289:	jne    0x1002629e
1002628b:	mov    ecx,DWORD PTR [esi+0x24]
1002628e:	mov    eax,0x1
10026293:	shl    eax,cl
10026295:	mov    DWORD PTR [esi+0x30],ebp
10026298:	mov    DWORD PTR [esi+0x2c],ebp
1002629b:	mov    DWORD PTR [esi+0x28],eax
1002629e:	sub    edi,DWORD PTR [ebx+0x10]
100262a1:	mov    eax,DWORD PTR [esi+0x28]
100262a4:	cmp    edi,eax
100262a6:	jb     0x100262ca
100262a8:	mov    ecx,DWORD PTR [ebx+0xc]
100262ab:	mov    edx,DWORD PTR [esi+0x34]
100262ae:	push   eax
100262af:	sub    ecx,eax
100262b1:	push   ecx
100262b2:	push   edx
100262b3:	call   0x10016820
100262b8:	mov    eax,DWORD PTR [esi+0x28]
100262bb:	add    esp,0xc
100262be:	pop    edi
100262bf:	mov    DWORD PTR [esi+0x30],ebp
100262c2:	mov    DWORD PTR [esi+0x2c],eax
100262c5:	pop    esi
100262c6:	xor    eax,eax
100262c8:	pop    ebp
100262c9:	ret    
100262ca:	sub    eax,DWORD PTR [esi+0x30]
100262cd:	mov    ebp,eax
100262cf:	cmp    ebp,edi
100262d1:	jbe    0x100262d5
100262d3:	mov    ebp,edi
100262d5:	mov    ecx,DWORD PTR [ebx+0xc]
100262d8:	mov    edx,DWORD PTR [esi+0x34]
100262db:	add    edx,DWORD PTR [esi+0x30]
100262de:	push   ebp
100262df:	sub    ecx,edi
100262e1:	push   ecx
100262e2:	push   edx
100262e3:	call   0x10016820
100262e8:	add    esp,0xc
100262eb:	sub    edi,ebp
100262ed:	je     0x10026311
100262ef:	mov    eax,DWORD PTR [ebx+0xc]
100262f2:	mov    ecx,DWORD PTR [esi+0x34]
100262f5:	push   edi
100262f6:	sub    eax,edi
100262f8:	push   eax
100262f9:	push   ecx
100262fa:	call   0x10016820
100262ff:	mov    edx,DWORD PTR [esi+0x28]
10026302:	add    esp,0xc
10026305:	mov    DWORD PTR [esi+0x30],edi
10026308:	pop    edi
10026309:	mov    DWORD PTR [esi+0x2c],edx
1002630c:	pop    esi
1002630d:	xor    eax,eax
1002630f:	pop    ebp
10026310:	ret    
10026311:	add    DWORD PTR [esi+0x30],ebp
10026314:	mov    ecx,DWORD PTR [esi+0x30]
10026317:	mov    eax,DWORD PTR [esi+0x28]
1002631a:	cmp    ecx,eax
1002631c:	jne    0x10026325
1002631e:	mov    DWORD PTR [esi+0x30],0x0
10026325:	mov    ecx,DWORD PTR [esi+0x2c]
10026328:	cmp    ecx,eax
1002632a:	jae    0x10026331
1002632c:	add    ecx,ebp
1002632e:	mov    DWORD PTR [esi+0x2c],ecx
10026331:	pop    edi
10026332:	pop    esi
10026333:	xor    eax,eax
10026335:	pop    ebp
10026336:	ret    
10026337:	int3   
10026338:	int3   
10026339:	int3   
1002633a:	int3   
1002633b:	int3   
1002633c:	int3   
1002633d:	int3   
1002633e:	int3   
1002633f:	int3   
10026340:	mov    eax,DWORD PTR [esp+0x4]
10026344:	sub    esp,0x2c
10026347:	test   eax,eax
10026349:	push   edi
1002634a:	je     0x1002789c
10026350:	mov    edi,DWORD PTR [eax+0x1c]
10026353:	test   edi,edi
10026355:	je     0x1002789c
1002635b:	cmp    DWORD PTR [eax+0xc],0x0
1002635f:	je     0x1002789c
10026365:	cmp    DWORD PTR [eax],0x0
10026368:	jne    0x10026374
1002636a:	cmp    DWORD PTR [eax+0x4],0x0
1002636e:	jne    0x1002789c
10026374:	cmp    DWORD PTR [edi],0xb
10026377:	jne    0x1002637f
10026379:	mov    DWORD PTR [edi],0xc
1002637f:	mov    ecx,DWORD PTR [eax+0xc]
10026382:	mov    edx,DWORD PTR [eax+0x4]
10026385:	push   ebx
10026386:	mov    ebx,DWORD PTR [edi+0x38]
10026389:	push   ebp
1002638a:	mov    ebp,DWORD PTR [eax]
1002638c:	mov    DWORD PTR [esp+0x24],ecx
10026390:	mov    ecx,DWORD PTR [eax+0x10]
10026393:	mov    eax,DWORD PTR [edi]
10026395:	cmp    eax,0x1c
10026398:	push   esi
10026399:	mov    esi,DWORD PTR [edi+0x3c]
1002639c:	mov    DWORD PTR [esp+0x1c],ecx
100263a0:	mov    DWORD PTR [esp+0x10],edx
100263a4:	mov    DWORD PTR [esp+0x18],ebx
100263a8:	mov    DWORD PTR [esp+0x38],edx
100263ac:	mov    DWORD PTR [esp+0x2c],ecx
100263b0:	mov    DWORD PTR [esp+0x30],0x0
100263b8:	ja     0x10027749
100263be:	mov    edi,edi
100263c0:	jmp    DWORD PTR [eax*4+0x100278a8]
100263c7:	cmp    DWORD PTR [edi+0x8],0x0
100263cb:	jne    0x100263d8
100263cd:	mov    DWORD PTR [edi],0xc
100263d3:	jmp    0x1002773e
100263d8:	cmp    esi,0x10
100263db:	jae    0x10026408
100263dd:	lea    ecx,[ecx+0x0]
100263e0:	test   edx,edx
100263e2:	je     0x1002779c
100263e8:	movzx  eax,BYTE PTR [ebp+0x0]
100263ec:	mov    ecx,esi
100263ee:	shl    eax,cl
100263f0:	sub    edx,0x1
100263f3:	add    esi,0x8
100263f6:	add    ebp,0x1
100263f9:	add    ebx,eax
100263fb:	cmp    esi,0x10
100263fe:	mov    DWORD PTR [esp+0x10],edx
10026402:	mov    DWORD PTR [esp+0x18],ebx
10026406:	jb     0x100263e0
10026408:	test   BYTE PTR [edi+0x8],0x2
1002640c:	je     0x1002645b
1002640e:	cmp    ebx,0x8b1f
10026414:	jne    0x1002645b
10026416:	push   0x0
10026418:	push   0x0
1002641a:	push   0x0
1002641c:	call   0x10029670
10026421:	mov    DWORD PTR [edi+0x18],eax
10026424:	push   0x2
10026426:	lea    ecx,[esp+0x30]
1002642a:	mov    BYTE PTR [esp+0x30],0x1f
1002642f:	mov    BYTE PTR [esp+0x31],0x8b
10026434:	mov    edx,DWORD PTR [edi+0x18]
10026437:	push   ecx
10026438:	push   edx
10026439:	call   0x10029670
1002643e:	mov    edx,DWORD PTR [esp+0x28]
10026442:	xor    ebx,ebx
10026444:	add    esp,0x18
10026447:	mov    DWORD PTR [edi+0x18],eax
1002644a:	mov    DWORD PTR [esp+0x18],ebx
1002644e:	xor    esi,esi
10026450:	mov    DWORD PTR [edi],0x1
10026456:	jmp    0x1002773e
1002645b:	mov    eax,DWORD PTR [edi+0x20]
1002645e:	test   eax,eax
10026460:	mov    DWORD PTR [edi+0x10],0x0
10026467:	je     0x10026470
10026469:	mov    DWORD PTR [eax+0x30],0xffffffff
10026470:	test   BYTE PTR [edi+0x8],0x1
10026474:	je     0x10026521
1002647a:	movzx  eax,bl
1002647d:	shl    eax,0x8
10026480:	mov    ecx,ebx
10026482:	shr    ecx,0x8
10026485:	add    eax,ecx
10026487:	xor    edx,edx
10026489:	mov    ecx,0x1f
1002648e:	div    ecx
10026490:	test   edx,edx
10026492:	jne    0x10026521
10026498:	mov    edx,ebx
1002649a:	and    dl,0xf
1002649d:	cmp    dl,0x8
100264a0:	je     0x100264b6
100264a2:	mov    eax,DWORD PTR [esp+0x40]
100264a6:	mov    edx,DWORD PTR [esp+0x10]
100264aa:	mov    DWORD PTR [eax+0x18],0x1007fa9c
100264b1:	jmp    0x10027738
100264b6:	shr    ebx,0x4
100264b9:	mov    ecx,ebx
100264bb:	and    ecx,0xf
100264be:	add    ecx,0x8
100264c1:	sub    esi,0x4
100264c4:	cmp    ecx,DWORD PTR [edi+0x24]
100264c7:	mov    DWORD PTR [esp+0x18],ebx
100264cb:	jbe    0x100264e1
100264cd:	mov    ecx,DWORD PTR [esp+0x40]
100264d1:	mov    edx,DWORD PTR [esp+0x10]
100264d5:	mov    DWORD PTR [ecx+0x18],0x1007fa88
100264dc:	jmp    0x10027738
100264e1:	mov    edx,0x1
100264e6:	shl    edx,cl
100264e8:	push   0x0
100264ea:	push   0x0
100264ec:	push   0x0
100264ee:	mov    DWORD PTR [edi+0x14],edx
100264f1:	call   0x10027980
100264f6:	mov    ecx,DWORD PTR [esp+0x4c]
100264fa:	mov    edx,DWORD PTR [esp+0x1c]
100264fe:	shr    ebx,0x8
10026501:	not    ebx
10026503:	and    ebx,0x2
10026506:	or     ebx,0x9
10026509:	mov    DWORD PTR [edi+0x18],eax
1002650c:	mov    DWORD PTR [ecx+0x30],eax
1002650f:	mov    DWORD PTR [edi],ebx
10026511:	xor    ebx,ebx
10026513:	add    esp,0xc
10026516:	mov    DWORD PTR [esp+0x18],ebx
1002651a:	xor    esi,esi
1002651c:	jmp    0x1002773e
10026521:	mov    edx,DWORD PTR [esp+0x40]
10026525:	mov    DWORD PTR [edx+0x18],0x1007fa70
1002652c:	mov    edx,DWORD PTR [esp+0x10]
10026530:	jmp    0x10027738
10026535:	cmp    esi,0x10
10026538:	jae    0x10026568
1002653a:	lea    ebx,[ebx+0x0]
10026540:	test   edx,edx
10026542:	je     0x1002779c
10026548:	movzx  eax,BYTE PTR [ebp+0x0]
1002654c:	mov    ecx,esi
1002654e:	shl    eax,cl
10026550:	sub    edx,0x1
10026553:	add    esi,0x8
10026556:	add    ebp,0x1
10026559:	add    ebx,eax
1002655b:	cmp    esi,0x10
1002655e:	mov    DWORD PTR [esp+0x10],edx
10026562:	mov    DWORD PTR [esp+0x18],ebx
10026566:	jb     0x10026540
10026568:	cmp    bl,0x8
1002656b:	mov    DWORD PTR [edi+0x10],ebx
1002656e:	je     0x10026580
10026570:	mov    ecx,DWORD PTR [esp+0x40]
10026574:	mov    DWORD PTR [ecx+0x18],0x1007fa9c
1002657b:	jmp    0x10027738
10026580:	test   ebx,0xe000
10026586:	je     0x10026598
10026588:	mov    eax,DWORD PTR [esp+0x40]
1002658c:	mov    DWORD PTR [eax+0x18],0x1007fa54
10026593:	jmp    0x10027738
10026598:	mov    eax,DWORD PTR [edi+0x20]
1002659b:	test   eax,eax
1002659d:	je     0x100265a9
1002659f:	mov    ecx,ebx
100265a1:	shr    ecx,0x8
100265a4:	and    ecx,0x1
100265a7:	mov    DWORD PTR [eax],ecx
100265a9:	test   DWORD PTR [edi+0x10],0x200
100265b0:	je     0x100265d7
100265b2:	mov    BYTE PTR [esp+0x20],bl
100265b6:	shr    ebx,0x8
100265b9:	push   0x2
100265bb:	lea    edx,[esp+0x24]
100265bf:	mov    BYTE PTR [esp+0x25],bl
100265c3:	mov    eax,DWORD PTR [edi+0x18]
100265c6:	push   edx
100265c7:	push   eax
100265c8:	call   0x10029670
100265cd:	mov    edx,DWORD PTR [esp+0x1c]
100265d1:	add    esp,0xc
100265d4:	mov    DWORD PTR [edi+0x18],eax
100265d7:	xor    ebx,ebx
100265d9:	xor    esi,esi
100265db:	mov    DWORD PTR [edi],0x2
100265e1:	jmp    0x100265e8
100265e3:	cmp    esi,0x20
100265e6:	jae    0x1002660c
100265e8:	test   edx,edx
100265ea:	je     0x1002779c
100265f0:	movzx  eax,BYTE PTR [ebp+0x0]
100265f4:	mov    ecx,esi
100265f6:	shl    eax,cl
100265f8:	sub    edx,0x1
100265fb:	add    esi,0x8
100265fe:	add    ebp,0x1
10026601:	add    ebx,eax
10026603:	cmp    esi,0x20
10026606:	mov    DWORD PTR [esp+0x10],edx
1002660a:	jb     0x100265e8
1002660c:	mov    eax,DWORD PTR [edi+0x20]
1002660f:	test   eax,eax
10026611:	je     0x10026616
10026613:	mov    DWORD PTR [eax+0x4],ebx
10026616:	test   DWORD PTR [edi+0x10],0x200
1002661d:	je     0x10026656
1002661f:	mov    BYTE PTR [esp+0x20],bl
10026623:	mov    ecx,ebx
10026625:	mov    edx,ebx
10026627:	shr    ecx,0x8
1002662a:	shr    edx,0x10
1002662d:	shr    ebx,0x18
10026630:	push   0x4
10026632:	lea    eax,[esp+0x24]
10026636:	mov    BYTE PTR [esp+0x25],cl
1002663a:	mov    BYTE PTR [esp+0x26],dl
1002663e:	mov    BYTE PTR [esp+0x27],bl
10026642:	mov    ecx,DWORD PTR [edi+0x18]
10026645:	push   eax
10026646:	push   ecx
10026647:	call   0x10029670
1002664c:	mov    edx,DWORD PTR [esp+0x1c]
10026650:	add    esp,0xc
10026653:	mov    DWORD PTR [edi+0x18],eax
10026656:	xor    ebx,ebx
10026658:	xor    esi,esi
1002665a:	mov    DWORD PTR [edi],0x3
10026660:	jmp    0x10026667
10026662:	cmp    esi,0x10
10026665:	jae    0x1002668b
10026667:	test   edx,edx
10026669:	je     0x1002779c
1002666f:	movzx  eax,BYTE PTR [ebp+0x0]
10026673:	mov    ecx,esi
10026675:	shl    eax,cl
10026677:	sub    edx,0x1
1002667a:	add    esi,0x8
1002667d:	add    ebp,0x1
10026680:	add    ebx,eax
10026682:	cmp    esi,0x10
10026685:	mov    DWORD PTR [esp+0x10],edx
10026689:	jb     0x10026667
1002668b:	mov    eax,DWORD PTR [edi+0x20]
1002668e:	test   eax,eax
10026690:	je     0x100266a8
10026692:	mov    ecx,ebx
10026694:	and    ecx,0xff
1002669a:	mov    DWORD PTR [eax+0x8],ecx
1002669d:	mov    ecx,DWORD PTR [edi+0x20]
100266a0:	mov    eax,ebx
100266a2:	shr    eax,0x8
100266a5:	mov    DWORD PTR [ecx+0xc],eax
100266a8:	test   DWORD PTR [edi+0x10],0x200
100266af:	je     0x100266d6
100266b1:	mov    BYTE PTR [esp+0x20],bl
100266b5:	shr    ebx,0x8
100266b8:	push   0x2
100266ba:	lea    edx,[esp+0x24]
100266be:	mov    BYTE PTR [esp+0x25],bl
100266c2:	mov    eax,DWORD PTR [edi+0x18]
100266c5:	push   edx
100266c6:	push   eax
100266c7:	call   0x10029670
100266cc:	mov    edx,DWORD PTR [esp+0x1c]
100266d0:	add    esp,0xc
100266d3:	mov    DWORD PTR [edi+0x18],eax
100266d6:	xor    ebx,ebx
100266d8:	mov    DWORD PTR [esp+0x18],ebx
100266dc:	xor    esi,esi
100266de:	mov    DWORD PTR [edi],0x4
100266e4:	test   DWORD PTR [edi+0x10],0x400
100266eb:	je     0x1002675b
100266ed:	cmp    esi,0x10
100266f0:	jae    0x10026716
100266f2:	test   edx,edx
100266f4:	je     0x1002779c
100266fa:	movzx  eax,BYTE PTR [ebp+0x0]
100266fe:	mov    ecx,esi
10026700:	shl    eax,cl
10026702:	sub    edx,0x1
10026705:	add    esi,0x8
10026708:	add    ebp,0x1
1002670b:	add    ebx,eax
1002670d:	cmp    esi,0x10
10026710:	mov    DWORD PTR [esp+0x10],edx
10026714:	jb     0x100266f2
10026716:	mov    eax,DWORD PTR [edi+0x20]
10026719:	test   eax,eax
1002671b:	mov    DWORD PTR [edi+0x40],ebx
1002671e:	je     0x10026723
10026720:	mov    DWORD PTR [eax+0x14],ebx
10026723:	test   DWORD PTR [edi+0x10],0x200
1002672a:	je     0x10026751
1002672c:	mov    BYTE PTR [esp+0x20],bl
10026730:	shr    ebx,0x8
10026733:	push   0x2
10026735:	lea    ecx,[esp+0x24]
10026739:	mov    BYTE PTR [esp+0x25],bl
1002673d:	mov    edx,DWORD PTR [edi+0x18]
10026740:	push   ecx
10026741:	push   edx
10026742:	call   0x10029670
10026747:	mov    edx,DWORD PTR [esp+0x1c]
1002674b:	add    esp,0xc
1002674e:	mov    DWORD PTR [edi+0x18],eax
10026751:	xor    ebx,ebx
10026753:	mov    DWORD PTR [esp+0x18],ebx
10026757:	xor    esi,esi
10026759:	jmp    0x10026769
1002675b:	mov    eax,DWORD PTR [edi+0x20]
1002675e:	test   eax,eax
10026760:	je     0x10026769
10026762:	mov    DWORD PTR [eax+0x10],0x0
10026769:	mov    DWORD PTR [edi],0x5
1002676f:	test   DWORD PTR [edi+0x10],0x400
10026776:	je     0x1002681e
1002677c:	mov    eax,DWORD PTR [edi+0x40]
1002677f:	cmp    eax,edx
10026781:	mov    DWORD PTR [esp+0x14],eax
10026785:	jbe    0x1002678d
10026787:	mov    eax,edx
10026789:	mov    DWORD PTR [esp+0x14],edx
1002678d:	test   eax,eax
1002678f:	je     0x10026814
10026795:	mov    ecx,DWORD PTR [edi+0x20]
10026798:	test   ecx,ecx
1002679a:	je     0x100267e3
1002679c:	mov    ecx,DWORD PTR [ecx+0x10]
1002679f:	test   ecx,ecx
100267a1:	mov    DWORD PTR [esp+0x34],ecx
100267a5:	je     0x100267e3
100267a7:	mov    ecx,DWORD PTR [edi+0x20]
100267aa:	mov    ecx,DWORD PTR [ecx+0x14]
100267ad:	sub    ecx,DWORD PTR [edi+0x40]
100267b0:	mov    edx,DWORD PTR [edi+0x20]
100267b3:	mov    edx,DWORD PTR [edx+0x18]
100267b6:	mov    DWORD PTR [esp+0x24],ecx
100267ba:	add    ecx,eax
100267bc:	cmp    ecx,edx
100267be:	jbe    0x100267c6
100267c0:	sub    edx,DWORD PTR [esp+0x24]
100267c4:	mov    eax,edx
100267c6:	mov    edx,DWORD PTR [esp+0x34]
100267ca:	push   eax
100267cb:	mov    eax,DWORD PTR [esp+0x28]
100267cf:	add    edx,eax
100267d1:	push   ebp
100267d2:	push   edx
100267d3:	call   0x10016820
100267d8:	mov    eax,DWORD PTR [esp+0x20]
100267dc:	mov    edx,DWORD PTR [esp+0x1c]
100267e0:	add    esp,0xc
100267e3:	test   DWORD PTR [edi+0x10],0x200
100267ea:	je     0x10026809
100267ec:	mov    ecx,DWORD PTR [esp+0x14]
100267f0:	mov    edx,DWORD PTR [edi+0x18]
100267f3:	push   ecx
100267f4:	push   ebp
100267f5:	push   edx
100267f6:	call   0x10029670
100267fb:	mov    edx,DWORD PTR [esp+0x1c]
100267ff:	mov    DWORD PTR [edi+0x18],eax
10026802:	mov    eax,DWORD PTR [esp+0x20]
10026806:	add    esp,0xc
10026809:	sub    edx,eax
1002680b:	add    ebp,eax
1002680d:	sub    DWORD PTR [edi+0x40],eax
10026810:	mov    DWORD PTR [esp+0x10],edx
10026814:	cmp    DWORD PTR [edi+0x40],0x0
10026818:	jne    0x1002779c
1002681e:	mov    DWORD PTR [edi+0x40],0x0
10026825:	mov    DWORD PTR [edi],0x6
1002682b:	test   DWORD PTR [edi+0x10],0x800
10026832:	je     0x100268c8
10026838:	test   edx,edx
1002683a:	je     0x1002779c
10026840:	xor    eax,eax
10026842:	movzx  ecx,BYTE PTR [eax+ebp*1]
10026846:	add    eax,0x1
10026849:	mov    DWORD PTR [esp+0x14],eax
1002684d:	mov    eax,DWORD PTR [edi+0x20]
10026850:	test   eax,eax
10026852:	mov    DWORD PTR [esp+0x24],ecx
10026856:	je     0x1002687e
10026858:	mov    ecx,DWORD PTR [eax+0x1c]
1002685b:	test   ecx,ecx
1002685d:	mov    DWORD PTR [esp+0x34],ecx
10026861:	je     0x1002687e
10026863:	mov    ecx,DWORD PTR [edi+0x40]
10026866:	cmp    ecx,DWORD PTR [eax+0x20]
10026869:	jae    0x1002687e
1002686b:	mov    edx,DWORD PTR [esp+0x34]
1002686f:	mov    al,BYTE PTR [esp+0x24]
10026873:	mov    BYTE PTR [edx+ecx*1],al
10026876:	add    DWORD PTR [edi+0x40],0x1
1002687a:	mov    edx,DWORD PTR [esp+0x10]
1002687e:	cmp    DWORD PTR [esp+0x24],0x0
10026883:	je     0x1002688d
10026885:	mov    eax,DWORD PTR [esp+0x14]
10026889:	cmp    eax,edx
1002688b:	jb     0x10026842
1002688d:	test   DWORD PTR [edi+0x10],0x200
10026894:	je     0x100268af
10026896:	mov    ecx,DWORD PTR [esp+0x14]
1002689a:	mov    edx,DWORD PTR [edi+0x18]
1002689d:	push   ecx
1002689e:	push   ebp
1002689f:	push   edx
100268a0:	call   0x10029670
100268a5:	mov    edx,DWORD PTR [esp+0x1c]
100268a9:	add    esp,0xc
100268ac:	mov    DWORD PTR [edi+0x18],eax
100268af:	mov    eax,DWORD PTR [esp+0x14]
100268b3:	sub    edx,eax
100268b5:	add    ebp,eax
100268b7:	cmp    DWORD PTR [esp+0x24],0x0
100268bc:	mov    DWORD PTR [esp+0x10],edx
100268c0:	jne    0x1002779c
100268c6:	jmp    0x100268d6
100268c8:	mov    eax,DWORD PTR [edi+0x20]
100268cb:	test   eax,eax
100268cd:	je     0x100268d6
100268cf:	mov    DWORD PTR [eax+0x1c],0x0
100268d6:	mov    DWORD PTR [edi+0x40],0x0
100268dd:	mov    DWORD PTR [edi],0x7
100268e3:	test   DWORD PTR [edi+0x10],0x1000
100268ea:	je     0x10026986
100268f0:	test   edx,edx
100268f2:	je     0x1002779c
100268f8:	xor    eax,eax
100268fa:	lea    ebx,[ebx+0x0]
10026900:	movzx  ecx,BYTE PTR [eax+ebp*1]
10026904:	add    eax,0x1
10026907:	mov    DWORD PTR [esp+0x14],eax
1002690b:	mov    eax,DWORD PTR [edi+0x20]
1002690e:	test   eax,eax
10026910:	mov    DWORD PTR [esp+0x24],ecx
10026914:	je     0x1002693c
10026916:	mov    ecx,DWORD PTR [eax+0x24]
10026919:	test   ecx,ecx
1002691b:	mov    DWORD PTR [esp+0x34],ecx
1002691f:	je     0x1002693c
10026921:	mov    ecx,DWORD PTR [edi+0x40]
10026924:	cmp    ecx,DWORD PTR [eax+0x28]
10026927:	jae    0x1002693c
10026929:	mov    edx,DWORD PTR [esp+0x34]
1002692d:	mov    al,BYTE PTR [esp+0x24]
10026931:	mov    BYTE PTR [edx+ecx*1],al
10026934:	add    DWORD PTR [edi+0x40],0x1
10026938:	mov    edx,DWORD PTR [esp+0x10]
1002693c:	cmp    DWORD PTR [esp+0x24],0x0
10026941:	je     0x1002694b
10026943:	mov    eax,DWORD PTR [esp+0x14]
10026947:	cmp    eax,edx
10026949:	jb     0x10026900
1002694b:	test   DWORD PTR [edi+0x10],0x200
10026952:	je     0x1002696d
10026954:	mov    ecx,DWORD PTR [esp+0x14]
10026958:	mov    edx,DWORD PTR [edi+0x18]
1002695b:	push   ecx
1002695c:	push   ebp
1002695d:	push   edx
1002695e:	call   0x10029670
10026963:	mov    edx,DWORD PTR [esp+0x1c]
10026967:	add    esp,0xc
1002696a:	mov    DWORD PTR [edi+0x18],eax
1002696d:	mov    eax,DWORD PTR [esp+0x14]
10026971:	sub    edx,eax
10026973:	add    ebp,eax
10026975:	cmp    DWORD PTR [esp+0x24],0x0
1002697a:	mov    DWORD PTR [esp+0x10],edx
1002697e:	jne    0x1002779c
10026984:	jmp    0x10026994
10026986:	mov    eax,DWORD PTR [edi+0x20]
10026989:	test   eax,eax
1002698b:	je     0x10026994
1002698d:	mov    DWORD PTR [eax+0x24],0x0
10026994:	mov    DWORD PTR [edi],0x8
1002699a:	test   DWORD PTR [edi+0x10],0x200
100269a1:	je     0x100269f0
100269a3:	cmp    esi,0x10
100269a6:	jae    0x100269d0
100269a8:	test   edx,edx
100269aa:	je     0x1002779c
100269b0:	movzx  eax,BYTE PTR [ebp+0x0]
100269b4:	mov    ecx,esi
100269b6:	shl    eax,cl
100269b8:	sub    edx,0x1
100269bb:	add    esi,0x8
100269be:	add    ebp,0x1
100269c1:	add    ebx,eax
100269c3:	cmp    esi,0x10
100269c6:	mov    DWORD PTR [esp+0x10],edx
100269ca:	mov    DWORD PTR [esp+0x18],ebx
100269ce:	jb     0x100269a8
100269d0:	movzx  ecx,WORD PTR [edi+0x18]
100269d4:	cmp    ebx,ecx
100269d6:	je     0x100269e8
100269d8:	mov    eax,DWORD PTR [esp+0x40]
100269dc:	mov    DWORD PTR [eax+0x18],0x1007fa40
100269e3:	jmp    0x10027738
100269e8:	xor    ebx,ebx
100269ea:	mov    DWORD PTR [esp+0x18],ebx
100269ee:	xor    esi,esi
100269f0:	mov    eax,DWORD PTR [edi+0x20]
100269f3:	test   eax,eax
100269f5:	je     0x10026a0d
100269f7:	mov    ecx,DWORD PTR [edi+0x10]
100269fa:	sar    ecx,0x9
100269fd:	and    ecx,0x1
10026a00:	mov    DWORD PTR [eax+0x2c],ecx
10026a03:	mov    edx,DWORD PTR [edi+0x20]
10026a06:	mov    DWORD PTR [edx+0x30],0x1
10026a0d:	push   0x0
10026a0f:	push   0x0
10026a11:	push   0x0
10026a13:	call   0x10029670
10026a18:	mov    ecx,DWORD PTR [esp+0x4c]
10026a1c:	mov    edx,DWORD PTR [esp+0x1c]
10026a20:	mov    DWORD PTR [edi+0x18],eax
10026a23:	mov    DWORD PTR [ecx+0x30],eax
10026a26:	add    esp,0xc
10026a29:	mov    DWORD PTR [edi],0xb
10026a2f:	jmp    0x1002773e
10026a34:	cmp    esi,0x20
10026a37:	jae    0x10026a68
10026a39:	lea    esp,[esp+0x0]
10026a40:	test   edx,edx
10026a42:	je     0x1002779c
10026a48:	movzx  eax,BYTE PTR [ebp+0x0]
10026a4c:	mov    ecx,esi
10026a4e:	shl    eax,cl
10026a50:	sub    edx,0x1
10026a53:	add    esi,0x8
10026a56:	add    ebp,0x1
10026a59:	add    ebx,eax
10026a5b:	cmp    esi,0x20
10026a5e:	mov    DWORD PTR [esp+0x10],edx
10026a62:	mov    DWORD PTR [esp+0x18],ebx
10026a66:	jb     0x10026a40
10026a68:	mov    ecx,ebx
10026a6a:	and    ecx,0xff00
10026a70:	mov    eax,ebx
10026a72:	shl    eax,0x10
10026a75:	add    ecx,eax
10026a77:	xor    eax,eax
10026a79:	mov    ah,BYTE PTR [esp+0x1a]
10026a7d:	shl    ecx,0x8
10026a80:	shr    ebx,0x18
10026a83:	add    ecx,eax
10026a85:	lea    eax,[ecx+ebx*1]
10026a88:	mov    ecx,DWORD PTR [esp+0x40]
10026a8c:	mov    DWORD PTR [edi+0x18],eax
10026a8f:	mov    DWORD PTR [ecx+0x30],eax
10026a92:	xor    ebx,ebx
10026a94:	xor    esi,esi
10026a96:	mov    DWORD PTR [edi],0xa
10026a9c:	cmp    DWORD PTR [edi+0xc],0x0
10026aa0:	je     0x10027756
10026aa6:	push   0x0
10026aa8:	push   0x0
10026aaa:	push   0x0
10026aac:	call   0x10027980
10026ab1:	mov    edx,DWORD PTR [esp+0x4c]
10026ab5:	mov    DWORD PTR [edi+0x18],eax
10026ab8:	mov    DWORD PTR [edx+0x30],eax
10026abb:	mov    edx,DWORD PTR [esp+0x1c]
10026abf:	add    esp,0xc
10026ac2:	mov    DWORD PTR [edi],0xb
10026ac8:	cmp    DWORD PTR [esp+0x44],0x5
10026acd:	je     0x1002779c
10026ad3:	cmp    DWORD PTR [edi+0x4],0x0
10026ad7:	je     0x10026af1
10026ad9:	mov    ecx,esi
10026adb:	and    ecx,0x7
10026ade:	shr    ebx,cl
10026ae0:	sub    esi,ecx
10026ae2:	mov    DWORD PTR [edi],0x18
10026ae8:	mov    DWORD PTR [esp+0x18],ebx
10026aec:	jmp    0x1002773e
10026af1:	cmp    esi,0x3
10026af4:	jae    0x10026b1a
10026af6:	test   edx,edx
10026af8:	je     0x1002779c
10026afe:	movzx  eax,BYTE PTR [ebp+0x0]
10026b02:	mov    ecx,esi
10026b04:	shl    eax,cl
10026b06:	sub    edx,0x1
10026b09:	add    esi,0x8
10026b0c:	add    ebp,0x1
10026b0f:	add    ebx,eax
10026b11:	cmp    esi,0x3
10026b14:	mov    DWORD PTR [esp+0x10],edx
10026b18:	jb     0x10026af6
10026b1a:	mov    ecx,ebx
10026b1c:	shr    ebx,1
10026b1e:	mov    eax,ebx
10026b20:	and    ecx,0x1
10026b23:	and    eax,0x3
10026b26:	sub    esi,0x1
10026b29:	cmp    eax,0x3
10026b2c:	mov    DWORD PTR [edi+0x4],ecx
10026b2f:	ja     0x10026b8f
10026b31:	jmp    DWORD PTR [eax*4+0x1002791c]
10026b38:	shr    ebx,0x2
10026b3b:	mov    DWORD PTR [edi],0xd
10026b41:	mov    DWORD PTR [esp+0x18],ebx
10026b45:	sub    esi,0x2
10026b48:	jmp    0x1002773e
10026b4d:	mov    eax,edi
10026b4f:	call   0x10026230
10026b54:	shr    ebx,0x2
10026b57:	mov    DWORD PTR [edi],0x12
10026b5d:	mov    DWORD PTR [esp+0x18],ebx
10026b61:	sub    esi,0x2
10026b64:	jmp    0x1002773e
10026b69:	shr    ebx,0x2
10026b6c:	mov    DWORD PTR [edi],0xf
10026b72:	mov    DWORD PTR [esp+0x18],ebx
10026b76:	sub    esi,0x2
10026b79:	jmp    0x1002773e
10026b7e:	mov    eax,DWORD PTR [esp+0x40]
10026b82:	mov    DWORD PTR [eax+0x18],0x1007fa2c
10026b89:	mov    DWORD PTR [edi],0x1b
10026b8f:	shr    ebx,0x2
10026b92:	mov    DWORD PTR [esp+0x18],ebx
10026b96:	sub    esi,0x2
10026b99:	jmp    0x1002773e
10026b9e:	mov    ecx,esi
10026ba0:	and    ecx,0x7
10026ba3:	shr    ebx,cl
10026ba5:	sub    esi,ecx
10026ba7:	cmp    esi,0x20
10026baa:	mov    DWORD PTR [esp+0x18],ebx
10026bae:	jae    0x10026bd8
10026bb0:	test   edx,edx
10026bb2:	je     0x1002779c
10026bb8:	movzx  eax,BYTE PTR [ebp+0x0]
10026bbc:	mov    ecx,esi
10026bbe:	shl    eax,cl
10026bc0:	sub    edx,0x1
10026bc3:	add    esi,0x8
10026bc6:	add    ebp,0x1
10026bc9:	add    ebx,eax
10026bcb:	cmp    esi,0x20
10026bce:	mov    DWORD PTR [esp+0x10],edx
10026bd2:	mov    DWORD PTR [esp+0x18],ebx
10026bd6:	jb     0x10026bb0
10026bd8:	mov    ecx,ebx
10026bda:	mov    eax,ebx
10026bdc:	not    ecx
10026bde:	and    eax,0xffff
10026be3:	shr    ecx,0x10
10026be6:	cmp    eax,ecx
10026be8:	je     0x10026bfa
10026bea:	mov    eax,DWORD PTR [esp+0x40]
10026bee:	mov    DWORD PTR [eax+0x18],0x1007fa0c
10026bf5:	jmp    0x10027738
10026bfa:	xor    ebx,ebx
10026bfc:	mov    DWORD PTR [edi+0x40],eax
10026bff:	mov    DWORD PTR [esp+0x18],ebx
10026c03:	xor    esi,esi
10026c05:	mov    DWORD PTR [edi],0xe
10026c0b:	mov    eax,DWORD PTR [edi+0x40]
10026c0e:	test   eax,eax
10026c10:	mov    DWORD PTR [esp+0x14],eax
10026c14:	je     0x100272cc
10026c1a:	cmp    eax,edx
10026c1c:	jbe    0x10026c24
10026c1e:	mov    eax,edx
10026c20:	mov    DWORD PTR [esp+0x14],edx
10026c24:	mov    ecx,DWORD PTR [esp+0x1c]
10026c28:	cmp    eax,ecx
10026c2a:	jbe    0x10026c32
10026c2c:	mov    eax,ecx
10026c2e:	mov    DWORD PTR [esp+0x14],eax
10026c32:	test   eax,eax
10026c34:	je     0x1002779c
10026c3a:	mov    ecx,DWORD PTR [esp+0x14]
10026c3e:	mov    edx,DWORD PTR [esp+0x28]
10026c42:	push   ecx
10026c43:	push   ebp
10026c44:	push   edx
10026c45:	call   0x10016820
10026c4a:	mov    eax,DWORD PTR [esp+0x20]
10026c4e:	sub    DWORD PTR [esp+0x1c],eax
10026c52:	sub    DWORD PTR [esp+0x28],eax
10026c56:	add    DWORD PTR [esp+0x34],eax
10026c5a:	mov    edx,DWORD PTR [esp+0x1c]
10026c5e:	add    esp,0xc
10026c61:	add    ebp,eax
10026c63:	sub    DWORD PTR [edi+0x40],eax
10026c66:	jmp    0x1002773e
10026c6b:	cmp    esi,0xe
10026c6e:	jae    0x10026c94
10026c70:	test   edx,edx
10026c72:	je     0x1002779c
10026c78:	movzx  eax,BYTE PTR [ebp+0x0]
10026c7c:	mov    ecx,esi
10026c7e:	shl    eax,cl
10026c80:	sub    edx,0x1
10026c83:	add    esi,0x8
10026c86:	add    ebp,0x1
10026c89:	add    ebx,eax
10026c8b:	cmp    esi,0xe
10026c8e:	mov    DWORD PTR [esp+0x10],edx
10026c92:	jb     0x10026c70
10026c94:	mov    ecx,ebx
10026c96:	and    ecx,0x1f
10026c99:	shr    ebx,0x5
10026c9c:	add    ecx,0x101
10026ca2:	mov    eax,ebx
10026ca4:	mov    DWORD PTR [edi+0x60],ecx
10026ca7:	shr    ebx,0x5
10026caa:	mov    ecx,ebx
10026cac:	and    eax,0x1f
10026caf:	and    ecx,0xf
10026cb2:	add    eax,0x1
10026cb5:	add    ecx,0x4
10026cb8:	shr    ebx,0x4
10026cbb:	sub    esi,0xe
10026cbe:	cmp    DWORD PTR [edi+0x60],0x11e
10026cc5:	mov    DWORD PTR [edi+0x64],eax
10026cc8:	mov    DWORD PTR [edi+0x5c],ecx
10026ccb:	mov    DWORD PTR [esp+0x18],ebx
10026ccf:	ja     0x10026dc5
10026cd5:	cmp    eax,0x1e
10026cd8:	ja     0x10026dc5
10026cde:	mov    DWORD PTR [edi+0x68],0x0
10026ce5:	mov    DWORD PTR [edi],0x10
10026ceb:	mov    ecx,DWORD PTR [edi+0x68]
10026cee:	cmp    ecx,DWORD PTR [edi+0x5c]
10026cf1:	jae    0x10026d48
10026cf3:	cmp    esi,0x3
10026cf6:	jae    0x10026d1c
10026cf8:	test   edx,edx
10026cfa:	je     0x1002779c
10026d00:	movzx  eax,BYTE PTR [ebp+0x0]
10026d04:	mov    ecx,esi
10026d06:	shl    eax,cl
10026d08:	sub    edx,0x1
10026d0b:	add    esi,0x8
10026d0e:	add    ebp,0x1
10026d11:	add    ebx,eax
10026d13:	cmp    esi,0x3
10026d16:	mov    DWORD PTR [esp+0x10],edx
10026d1a:	jb     0x10026cf8
10026d1c:	mov    eax,DWORD PTR [edi+0x68]
10026d1f:	movzx  eax,WORD PTR [eax*2+0x1007f8d0]
10026d27:	movzx  ecx,bl
10026d2a:	and    ecx,0x7
10026d2d:	mov    WORD PTR [edi+eax*2+0x70],cx
10026d32:	add    DWORD PTR [edi+0x68],0x1
10026d36:	mov    ecx,DWORD PTR [edi+0x68]
10026d39:	shr    ebx,0x3
10026d3c:	sub    esi,0x3
10026d3f:	cmp    ecx,DWORD PTR [edi+0x5c]
10026d42:	mov    DWORD PTR [esp+0x18],ebx
10026d46:	jb     0x10026cf3
10026d48:	cmp    DWORD PTR [edi+0x68],0x13
10026d4c:	jae    0x10026d79
10026d4e:	mov    ecx,0x1
10026d53:	xor    eax,eax
10026d55:	jmp    0x10026d60
10026d57:	lea    esp,[esp+0x0]
10026d5e:	mov    edi,edi
10026d60:	mov    edx,DWORD PTR [edi+0x68]
10026d63:	movzx  edx,WORD PTR [edx*2+0x1007f8d0]
10026d6b:	mov    WORD PTR [edi+edx*2+0x70],ax
10026d70:	add    DWORD PTR [edi+0x68],ecx
10026d73:	cmp    DWORD PTR [edi+0x68],0x13
10026d77:	jb     0x10026d60
10026d79:	lea    eax,[edi+0x530]
10026d7f:	lea    ecx,[edi+0x6c]
10026d82:	mov    DWORD PTR [ecx],eax
10026d84:	mov    DWORD PTR [edi+0x4c],eax
10026d87:	lea    edx,[edi+0x2f0]
10026d8d:	push   edx
10026d8e:	lea    eax,[edi+0x54]
10026d91:	push   eax
10026d92:	push   ecx
10026d93:	mov    DWORD PTR [eax],0x7
10026d99:	push   0x13
10026d9b:	lea    eax,[edi+0x70]
10026d9e:	push   eax
10026d9f:	push   0x0
10026da1:	call   0x10029b80
10026da6:	mov    edx,DWORD PTR [esp+0x28]
10026daa:	add    esp,0x18
10026dad:	test   eax,eax
10026daf:	mov    DWORD PTR [esp+0x30],eax
10026db3:	je     0x10026dd5
10026db5:	mov    ecx,DWORD PTR [esp+0x40]
10026db9:	mov    DWORD PTR [ecx+0x18],0x1007f9f0
10026dc0:	jmp    0x10027738
10026dc5:	mov    eax,DWORD PTR [esp+0x40]
10026dc9:	mov    DWORD PTR [eax+0x18],0x1007f9cc
10026dd0:	jmp    0x10027738
10026dd5:	mov    DWORD PTR [edi+0x68],0x0
10026ddc:	mov    DWORD PTR [edi],0x11
10026de2:	mov    eax,DWORD PTR [edi+0x64]
10026de5:	add    eax,DWORD PTR [edi+0x60]
10026de8:	cmp    DWORD PTR [edi+0x68],eax
10026deb:	jae    0x10027029
10026df1:	mov    ecx,DWORD PTR [edi+0x54]
10026df4:	mov    eax,0x1
10026df9:	shl    eax,cl
10026dfb:	mov    ecx,DWORD PTR [edi+0x4c]
10026dfe:	sub    eax,0x1
10026e01:	and    eax,ebx
10026e03:	mov    eax,DWORD PTR [ecx+eax*4]
10026e06:	mov    ecx,eax
10026e08:	shr    ecx,0x8
10026e0b:	movzx  ecx,cl
10026e0e:	cmp    ecx,esi
10026e10:	mov    DWORD PTR [esp+0x14],eax
10026e14:	jbe    0x10026e5a
10026e16:	test   edx,edx
10026e18:	je     0x1002779c
10026e1e:	movzx  eax,BYTE PTR [ebp+0x0]
10026e22:	mov    ecx,esi
10026e24:	shl    eax,cl
10026e26:	mov    ecx,DWORD PTR [edi+0x54]
10026e29:	sub    edx,0x1
10026e2c:	add    esi,0x8
10026e2f:	add    ebx,eax
10026e31:	mov    eax,0x1
10026e36:	shl    eax,cl
10026e38:	mov    ecx,DWORD PTR [edi+0x4c]
10026e3b:	add    ebp,0x1
10026e3e:	mov    DWORD PTR [esp+0x10],edx
10026e42:	sub    eax,0x1
10026e45:	and    eax,ebx
10026e47:	mov    eax,DWORD PTR [ecx+eax*4]
10026e4a:	mov    ecx,eax
10026e4c:	shr    ecx,0x8
10026e4f:	movzx  ecx,cl
10026e52:	cmp    ecx,esi
10026e54:	mov    DWORD PTR [esp+0x14],eax
10026e58:	ja     0x10026e16
10026e5a:	mov    ecx,eax
10026e5c:	shr    ecx,0x10
10026e5f:	cmp    ecx,0x10
10026e62:	jae    0x10026ebb
10026e64:	mov    ecx,eax
10026e66:	shr    ecx,0x8
10026e69:	movzx  ecx,cl
10026e6c:	cmp    esi,ecx
10026e6e:	jae    0x10026e9a
10026e70:	test   edx,edx
10026e72:	je     0x1002779c
10026e78:	movzx  eax,BYTE PTR [ebp+0x0]
10026e7c:	mov    ecx,esi
10026e7e:	shl    eax,cl
10026e80:	sub    edx,0x1
10026e83:	add    esi,0x8
10026e86:	add    ebp,0x1
10026e89:	add    ebx,eax
10026e8b:	mov    eax,DWORD PTR [esp+0x14]
10026e8f:	movzx  ecx,ah
10026e92:	cmp    esi,ecx
10026e94:	mov    DWORD PTR [esp+0x10],edx
10026e98:	jb     0x10026e70
10026e9a:	movzx  ecx,ah
10026e9d:	mov    eax,DWORD PTR [edi+0x68]
10026ea0:	shr    ebx,cl
10026ea2:	sub    esi,ecx
10026ea4:	mov    cx,WORD PTR [esp+0x16]
10026ea9:	mov    WORD PTR [edi+eax*2+0x70],cx
10026eae:	add    DWORD PTR [edi+0x68],0x1
10026eb2:	mov    DWORD PTR [esp+0x18],ebx
10026eb6:	jmp    0x1002701a
10026ebb:	mov    cx,WORD PTR [esp+0x16]
10026ec0:	cmp    cx,0x10
10026ec4:	jne    0x10026f31
10026ec6:	movzx  ecx,ah
10026ec9:	lea    eax,[ecx+0x2]
10026ecc:	cmp    esi,eax
10026ece:	mov    DWORD PTR [esp+0x24],ecx
10026ed2:	jae    0x10026efe
10026ed4:	test   edx,edx
10026ed6:	je     0x1002779c
10026edc:	movzx  eax,BYTE PTR [ebp+0x0]
10026ee0:	mov    ecx,esi
10026ee2:	shl    eax,cl
10026ee4:	mov    ecx,DWORD PTR [esp+0x24]
10026ee8:	sub    edx,0x1
10026eeb:	add    esi,0x8
10026eee:	add    ebx,eax
10026ef0:	lea    eax,[ecx+0x2]
10026ef3:	add    ebp,0x1
10026ef6:	cmp    esi,eax
10026ef8:	mov    DWORD PTR [esp+0x10],edx
10026efc:	jb     0x10026ed4
10026efe:	mov    eax,DWORD PTR [edi+0x68]
10026f01:	shr    ebx,cl
10026f03:	sub    esi,ecx
10026f05:	test   eax,eax
10026f07:	mov    DWORD PTR [esp+0x18],ebx
10026f0b:	je     0x10027080
10026f11:	movzx  ecx,WORD PTR [edi+eax*2+0x6e]
10026f16:	mov    eax,ebx
10026f18:	and    eax,0x3
10026f1b:	add    eax,0x3
10026f1e:	shr    ebx,0x2
10026f21:	mov    DWORD PTR [esp+0x24],ecx
10026f25:	mov    DWORD PTR [esp+0x14],eax
10026f29:	sub    esi,0x2
10026f2c:	jmp    0x10026fe0
10026f31:	cmp    cx,0x11
10026f35:	movzx  ecx,ah
10026f38:	mov    DWORD PTR [esp+0x24],ecx
10026f3c:	jne    0x10026f87
10026f3e:	lea    eax,[ecx+0x3]
10026f41:	cmp    esi,eax
10026f43:	jae    0x10026f6f
10026f45:	test   edx,edx
10026f47:	je     0x1002779c
10026f4d:	movzx  eax,BYTE PTR [ebp+0x0]
10026f51:	mov    ecx,esi
10026f53:	shl    eax,cl
10026f55:	mov    ecx,DWORD PTR [esp+0x24]
10026f59:	sub    edx,0x1
10026f5c:	add    esi,0x8
10026f5f:	add    ebx,eax
10026f61:	lea    eax,[ecx+0x3]
10026f64:	add    ebp,0x1
10026f67:	cmp    esi,eax
10026f69:	mov    DWORD PTR [esp+0x10],edx
10026f6d:	jb     0x10026f45
10026f6f:	shr    ebx,cl
10026f71:	mov    eax,ebx
10026f73:	and    eax,0x7
10026f76:	add    eax,0x3
10026f79:	mov    DWORD PTR [esp+0x14],eax
10026f7d:	shr    ebx,0x3
10026f80:	mov    eax,0xfffffffd
10026f85:	jmp    0x10026fd0
10026f87:	lea    eax,[ecx+0x7]
10026f8a:	cmp    esi,eax
10026f8c:	jae    0x10026fba
10026f8e:	mov    edi,edi
10026f90:	test   edx,edx
10026f92:	je     0x1002779c
10026f98:	movzx  eax,BYTE PTR [ebp+0x0]
10026f9c:	mov    ecx,esi
10026f9e:	shl    eax,cl
10026fa0:	mov    ecx,DWORD PTR [esp+0x24]
10026fa4:	sub    edx,0x1
10026fa7:	add    esi,0x8
10026faa:	add    ebx,eax
10026fac:	lea    eax,[ecx+0x7]
10026faf:	add    ebp,0x1
10026fb2:	cmp    esi,eax
10026fb4:	mov    DWORD PTR [esp+0x10],edx
10026fb8:	jb     0x10026f90
10026fba:	shr    ebx,cl
10026fbc:	mov    eax,ebx
10026fbe:	and    eax,0x7f
10026fc1:	add    eax,0xb
10026fc4:	mov    DWORD PTR [esp+0x14],eax
10026fc8:	shr    ebx,0x7
10026fcb:	mov    eax,0xfffffff9
10026fd0:	sub    eax,ecx
10026fd2:	add    esi,eax
10026fd4:	mov    eax,DWORD PTR [esp+0x14]
10026fd8:	mov    DWORD PTR [esp+0x24],0x0
10026fe0:	mov    ecx,DWORD PTR [edi+0x68]
10026fe3:	add    ecx,eax
10026fe5:	mov    eax,DWORD PTR [edi+0x64]
10026fe8:	add    eax,DWORD PTR [edi+0x60]
10026feb:	mov    DWORD PTR [esp+0x18],ebx
10026fef:	cmp    ecx,eax
10026ff1:	ja     0x10027090
10026ff7:	cmp    DWORD PTR [esp+0x14],0x0
10026ffc:	je     0x1002701a
10026ffe:	mov    eax,DWORD PTR [esp+0x24]
10027002:	mov    ecx,DWORD PTR [edi+0x68]
10027005:	sub    DWORD PTR [esp+0x14],0x1
1002700a:	mov    WORD PTR [edi+ecx*2+0x70],ax
1002700f:	add    DWORD PTR [edi+0x68],0x1
10027013:	cmp    DWORD PTR [esp+0x14],0x0
10027018:	jne    0x10027002
1002701a:	mov    eax,DWORD PTR [edi+0x64]
1002701d:	add    eax,DWORD PTR [edi+0x60]
10027020:	cmp    DWORD PTR [edi+0x68],eax
10027023:	jb     0x10026df1
10027029:	cmp    DWORD PTR [edi],0x1b
1002702c:	je     0x1002773e
10027032:	lea    eax,[edi+0x530]
10027038:	lea    ecx,[edi+0x6c]
1002703b:	mov    DWORD PTR [ecx],eax
1002703d:	lea    edx,[edi+0x2f0]
10027043:	push   edx
10027044:	mov    DWORD PTR [edi+0x4c],eax
10027047:	lea    eax,[edi+0x54]
1002704a:	push   eax
1002704b:	push   ecx
1002704c:	mov    ecx,DWORD PTR [edi+0x60]
1002704f:	push   ecx
10027050:	lea    edx,[edi+0x70]
10027053:	push   edx
10027054:	push   0x1
10027056:	mov    DWORD PTR [eax],0x9
1002705c:	call   0x10029b80
10027061:	add    esp,0x18
10027064:	test   eax,eax
10027066:	mov    DWORD PTR [esp+0x30],eax
1002706a:	je     0x100270a0
1002706c:	mov    eax,DWORD PTR [esp+0x40]
10027070:	mov    edx,DWORD PTR [esp+0x10]
10027074:	mov    DWORD PTR [eax+0x18],0x1007f9b0
1002707b:	jmp    0x10027738
10027080:	mov    ecx,DWORD PTR [esp+0x40]
10027084:	mov    DWORD PTR [ecx+0x18],0x1007f994
1002708b:	jmp    0x10027738
10027090:	mov    eax,DWORD PTR [esp+0x40]
10027094:	mov    DWORD PTR [eax+0x18],0x1007f994
1002709b:	jmp    0x10027738
100270a0:	mov    edx,DWORD PTR [edi+0x6c]
100270a3:	lea    ecx,[edi+0x6c]
100270a6:	mov    DWORD PTR [edi+0x50],edx
100270a9:	lea    edx,[edi+0x2f0]
100270af:	push   edx
100270b0:	lea    eax,[edi+0x58]
100270b3:	push   eax
100270b4:	push   ecx
100270b5:	mov    ecx,DWORD PTR [edi+0x60]
100270b8:	mov    DWORD PTR [eax],0x6
100270be:	mov    eax,DWORD PTR [edi+0x64]
100270c1:	push   eax
100270c2:	lea    edx,[edi+ecx*2+0x70]
100270c6:	push   edx
100270c7:	push   0x2
100270c9:	call   0x10029b80
100270ce:	mov    edx,DWORD PTR [esp+0x28]
100270d2:	add    esp,0x18
100270d5:	test   eax,eax
100270d7:	mov    DWORD PTR [esp+0x30],eax
100270db:	je     0x100270ed
100270dd:	mov    eax,DWORD PTR [esp+0x40]
100270e1:	mov    DWORD PTR [eax+0x18],0x1007f97c
100270e8:	jmp    0x10027738
100270ed:	mov    DWORD PTR [edi],0x12
100270f3:	cmp    edx,0x6
100270f6:	jb     0x10027161
100270fc:	cmp    DWORD PTR [esp+0x1c],0x102
10027104:	jb     0x10027161
10027106:	mov    eax,DWORD PTR [esp+0x40]
1002710a:	mov    edx,DWORD PTR [esp+0x1c]
1002710e:	mov    ecx,DWORD PTR [esp+0x28]
10027112:	mov    DWORD PTR [eax+0x10],edx
10027115:	mov    edx,DWORD PTR [esp+0x2c]
10027119:	mov    DWORD PTR [eax+0xc],ecx
1002711c:	mov    ecx,DWORD PTR [esp+0x10]
10027120:	push   edx
10027121:	mov    DWORD PTR [eax],ebp
10027123:	mov    DWORD PTR [eax+0x4],ecx
10027126:	push   eax
10027127:	mov    DWORD PTR [edi+0x38],ebx
1002712a:	mov    DWORD PTR [edi+0x3c],esi
1002712d:	call   0x100296c0
10027132:	mov    eax,DWORD PTR [esp+0x48]
10027136:	mov    edx,DWORD PTR [eax+0x10]
10027139:	mov    ecx,DWORD PTR [eax+0xc]
1002713c:	mov    ebp,DWORD PTR [eax]
1002713e:	mov    eax,DWORD PTR [eax+0x4]
10027141:	mov    ebx,DWORD PTR [edi+0x38]
10027144:	mov    esi,DWORD PTR [edi+0x3c]
10027147:	mov    DWORD PTR [esp+0x24],edx
1002714b:	add    esp,0x8
1002714e:	mov    DWORD PTR [esp+0x28],ecx
10027152:	mov    DWORD PTR [esp+0x10],eax
10027156:	mov    DWORD PTR [esp+0x18],ebx
1002715a:	mov    edx,eax
1002715c:	jmp    0x1002773e
10027161:	mov    ecx,DWORD PTR [edi+0x54]
10027164:	mov    eax,0x1
10027169:	shl    eax,cl
1002716b:	sub    eax,0x1
1002716e:	and    eax,ebx
10027170:	mov    ecx,eax
10027172:	mov    eax,DWORD PTR [edi+0x4c]
10027175:	mov    eax,DWORD PTR [eax+ecx*4]
10027178:	mov    ecx,eax
1002717a:	shr    ecx,0x8
1002717d:	movzx  ecx,cl
10027180:	cmp    ecx,esi
10027182:	mov    DWORD PTR [esp+0x14],eax
10027186:	jbe    0x100271cc
10027188:	test   edx,edx
1002718a:	je     0x1002779c
10027190:	movzx  eax,BYTE PTR [ebp+0x0]
10027194:	mov    ecx,esi
10027196:	shl    eax,cl
10027198:	mov    ecx,DWORD PTR [edi+0x54]
1002719b:	sub    edx,0x1
1002719e:	add    esi,0x8
100271a1:	add    ebx,eax
100271a3:	mov    eax,0x1
100271a8:	shl    eax,cl
100271aa:	mov    ecx,DWORD PTR [edi+0x4c]
100271ad:	add    ebp,0x1
100271b0:	mov    DWORD PTR [esp+0x10],edx
100271b4:	sub    eax,0x1
100271b7:	and    eax,ebx
100271b9:	mov    eax,DWORD PTR [ecx+eax*4]
100271bc:	mov    ecx,eax
100271be:	shr    ecx,0x8
100271c1:	movzx  ecx,cl
100271c4:	cmp    ecx,esi
100271c6:	mov    DWORD PTR [esp+0x14],eax
100271ca:	ja     0x10027188
100271cc:	test   al,al
100271ce:	je     0x1002729d
100271d4:	test   al,0xf0
100271d6:	jne    0x1002729d
100271dc:	mov    ecx,eax
100271de:	shr    ecx,0x8
100271e1:	mov    DWORD PTR [esp+0x34],ecx
100271e5:	movzx  ecx,cl
100271e8:	mov    DWORD PTR [esp+0x24],ecx
100271ec:	movzx  ecx,al
100271ef:	add    ecx,DWORD PTR [esp+0x24]
100271f3:	mov    DWORD PTR [esp+0x18],eax
100271f7:	mov    eax,0x1
100271fc:	shl    eax,cl
100271fe:	mov    ecx,DWORD PTR [esp+0x24]
10027202:	sub    eax,0x1
10027205:	and    eax,ebx
10027207:	shr    eax,cl
10027209:	mov    ecx,DWORD PTR [esp+0x14]
1002720d:	shr    ecx,0x10
10027210:	add    eax,ecx
10027212:	mov    ecx,eax
10027214:	mov    eax,DWORD PTR [edi+0x4c]
10027217:	mov    eax,DWORD PTR [eax+ecx*4]
1002721a:	movzx  ecx,BYTE PTR [esp+0x34]
1002721f:	mov    DWORD PTR [esp+0x14],eax
10027223:	shr    eax,0x8
10027226:	movzx  eax,al
10027229:	add    eax,ecx
1002722b:	cmp    eax,esi
1002722d:	jbe    0x10027290
10027233:	test   edx,edx
10027235:	je     0x1002779c
1002723b:	movzx  eax,BYTE PTR [ebp+0x0]
1002723f:	mov    ecx,esi
10027241:	shl    eax,cl
10027243:	mov    ecx,DWORD PTR [esp+0x18]
10027247:	sub    edx,0x1
1002724a:	add    esi,0x8
1002724d:	add    ebx,eax
1002724f:	movzx  eax,ch
10027252:	add    ecx,eax
10027254:	mov    DWORD PTR [esp+0x24],eax
10027258:	mov    eax,0x1
1002725d:	shl    eax,cl
1002725f:	mov    ecx,DWORD PTR [esp+0x24]
10027263:	add    ebp,0x1
10027266:	mov    DWORD PTR [esp+0x10],edx
1002726a:	sub    eax,0x1
1002726d:	and    eax,ebx
1002726f:	shr    eax,cl
10027271:	movzx  ecx,WORD PTR [esp+0x1a]
10027276:	add    eax,ecx
10027278:	mov    ecx,DWORD PTR [edi+0x4c]
1002727b:	mov    eax,DWORD PTR [ecx+eax*4]
1002727e:	mov    DWORD PTR [esp+0x14],eax
10027282:	shr    eax,0x8
10027285:	movzx  eax,al
10027288:	add    eax,DWORD PTR [esp+0x24]
1002728c:	cmp    eax,esi
1002728e:	ja     0x10027233
10027290:	movzx  ecx,BYTE PTR [esp+0x19]
10027295:	mov    eax,DWORD PTR [esp+0x14]
10027299:	shr    ebx,cl
1002729b:	sub    esi,ecx
1002729d:	mov    ecx,eax
1002729f:	shr    ecx,0x8
100272a2:	movzx  ecx,cl
100272a5:	shr    ebx,cl
100272a7:	sub    esi,ecx
100272a9:	mov    DWORD PTR [esp+0x24],ecx
100272ad:	mov    ecx,eax
100272af:	shr    ecx,0x10
100272b2:	test   al,al
100272b4:	mov    DWORD PTR [esp+0x18],ebx
100272b8:	mov    DWORD PTR [edi+0x40],ecx
100272bb:	jne    0x100272c8
100272bd:	mov    DWORD PTR [edi],0x17
100272c3:	jmp    0x1002773e
100272c8:	test   al,0x20
100272ca:	je     0x100272d7
100272cc:	mov    DWORD PTR [edi],0xb
100272d2:	jmp    0x1002773e
100272d7:	test   al,0x40
100272d9:	je     0x100272eb
100272db:	mov    eax,DWORD PTR [esp+0x40]
100272df:	mov    DWORD PTR [eax+0x18],0x1007f960
100272e6:	jmp    0x10027738
100272eb:	and    eax,0xf
100272ee:	mov    DWORD PTR [edi+0x48],eax
100272f1:	mov    DWORD PTR [edi],0x13
100272f7:	mov    eax,DWORD PTR [edi+0x48]
100272fa:	test   eax,eax
100272fc:	je     0x1002733c
100272fe:	cmp    esi,eax
10027300:	jae    0x10027326
10027302:	test   edx,edx
10027304:	je     0x1002779c
1002730a:	movzx  eax,BYTE PTR [ebp+0x0]
1002730e:	mov    ecx,esi
10027310:	shl    eax,cl
10027312:	sub    edx,0x1
10027315:	add    esi,0x8
10027318:	add    ebp,0x1
1002731b:	add    ebx,eax
1002731d:	cmp    esi,DWORD PTR [edi+0x48]
10027320:	mov    DWORD PTR [esp+0x10],edx
10027324:	jb     0x10027302
10027326:	mov    ecx,DWORD PTR [edi+0x48]
10027329:	mov    eax,0x1
1002732e:	shl    eax,cl
10027330:	sub    eax,0x1
10027333:	and    eax,ebx
10027335:	add    DWORD PTR [edi+0x40],eax
10027338:	shr    ebx,cl
1002733a:	sub    esi,ecx
1002733c:	mov    DWORD PTR [edi],0x14
10027342:	mov    ecx,DWORD PTR [edi+0x58]
10027345:	mov    eax,0x1
1002734a:	shl    eax,cl
1002734c:	sub    eax,0x1
1002734f:	and    eax,ebx
10027351:	mov    ecx,eax
10027353:	mov    eax,DWORD PTR [edi+0x50]
10027356:	mov    eax,DWORD PTR [eax+ecx*4]
10027359:	mov    ecx,eax
1002735b:	shr    ecx,0x8
1002735e:	movzx  ecx,cl
10027361:	cmp    ecx,esi
10027363:	mov    DWORD PTR [esp+0x14],eax
10027367:	jbe    0x100273b4
10027369:	lea    esp,[esp+0x0]
10027370:	test   edx,edx
10027372:	je     0x1002779c
10027378:	movzx  eax,BYTE PTR [ebp+0x0]
1002737c:	mov    ecx,esi
1002737e:	shl    eax,cl
10027380:	mov    ecx,DWORD PTR [edi+0x58]
10027383:	sub    edx,0x1
10027386:	add    esi,0x8
10027389:	add    ebx,eax
1002738b:	mov    eax,0x1
10027390:	shl    eax,cl
10027392:	mov    ecx,DWORD PTR [edi+0x50]
10027395:	add    ebp,0x1
10027398:	mov    DWORD PTR [esp+0x10],edx
1002739c:	sub    eax,0x1
1002739f:	and    eax,ebx
100273a1:	mov    eax,DWORD PTR [ecx+eax*4]
100273a4:	mov    ecx,eax
100273a6:	shr    ecx,0x8
100273a9:	movzx  ecx,cl
100273ac:	cmp    ecx,esi
100273ae:	mov    DWORD PTR [esp+0x14],eax
100273b2:	ja     0x10027370
100273b4:	test   al,0xf0
100273b6:	jne    0x1002747d
100273bc:	mov    ecx,eax
100273be:	shr    ecx,0x8
100273c1:	mov    DWORD PTR [esp+0x34],ecx
100273c5:	movzx  ecx,cl
100273c8:	mov    DWORD PTR [esp+0x24],ecx
100273cc:	movzx  ecx,al
100273cf:	add    ecx,DWORD PTR [esp+0x24]
100273d3:	mov    DWORD PTR [esp+0x18],eax
100273d7:	mov    eax,0x1
100273dc:	shl    eax,cl
100273de:	mov    ecx,DWORD PTR [esp+0x24]
100273e2:	sub    eax,0x1
100273e5:	and    eax,ebx
100273e7:	shr    eax,cl
100273e9:	mov    ecx,DWORD PTR [esp+0x14]
100273ed:	shr    ecx,0x10
100273f0:	add    eax,ecx
100273f2:	mov    ecx,eax
100273f4:	mov    eax,DWORD PTR [edi+0x50]
100273f7:	mov    eax,DWORD PTR [eax+ecx*4]
100273fa:	movzx  ecx,BYTE PTR [esp+0x34]
100273ff:	mov    DWORD PTR [esp+0x14],eax
10027403:	shr    eax,0x8
10027406:	movzx  eax,al
10027409:	add    eax,ecx
1002740b:	cmp    eax,esi
1002740d:	jbe    0x10027470
10027413:	test   edx,edx
10027415:	je     0x1002779c
1002741b:	movzx  eax,BYTE PTR [ebp+0x0]
1002741f:	mov    ecx,esi
10027421:	shl    eax,cl
10027423:	mov    ecx,DWORD PTR [esp+0x18]
10027427:	sub    edx,0x1
1002742a:	add    esi,0x8
1002742d:	add    ebx,eax
1002742f:	movzx  eax,ch
10027432:	add    ecx,eax
10027434:	mov    DWORD PTR [esp+0x24],eax
10027438:	mov    eax,0x1
1002743d:	shl    eax,cl
1002743f:	mov    ecx,DWORD PTR [esp+0x24]
10027443:	add    ebp,0x1
10027446:	mov    DWORD PTR [esp+0x10],edx
1002744a:	sub    eax,0x1
1002744d:	and    eax,ebx
1002744f:	shr    eax,cl
10027451:	movzx  ecx,WORD PTR [esp+0x1a]
10027456:	add    eax,ecx
10027458:	mov    ecx,DWORD PTR [edi+0x50]
1002745b:	mov    eax,DWORD PTR [ecx+eax*4]
1002745e:	mov    DWORD PTR [esp+0x14],eax
10027462:	shr    eax,0x8
10027465:	movzx  eax,al
10027468:	add    eax,DWORD PTR [esp+0x24]
1002746c:	cmp    eax,esi
1002746e:	ja     0x10027413
10027470:	movzx  ecx,BYTE PTR [esp+0x19]
10027475:	mov    eax,DWORD PTR [esp+0x14]
10027479:	shr    ebx,cl
1002747b:	sub    esi,ecx
1002747d:	mov    ecx,eax
1002747f:	shr    ecx,0x8
10027482:	movzx  ecx,cl
10027485:	shr    ebx,cl
10027487:	sub    esi,ecx
10027489:	test   al,0x40
1002748b:	mov    DWORD PTR [esp+0x24],ecx
1002748f:	mov    DWORD PTR [esp+0x18],ebx
10027493:	je     0x100274a5
10027495:	mov    eax,DWORD PTR [esp+0x40]
10027499:	mov    DWORD PTR [eax+0x18],0x1007f948
100274a0:	jmp    0x10027738
100274a5:	mov    ecx,eax
100274a7:	shr    ecx,0x10
100274aa:	and    eax,0xf
100274ad:	mov    DWORD PTR [edi+0x44],ecx
100274b0:	mov    DWORD PTR [edi+0x48],eax
100274b3:	mov    DWORD PTR [edi],0x15
100274b9:	mov    eax,DWORD PTR [edi+0x48]
100274bc:	test   eax,eax
100274be:	je     0x10027502
100274c0:	cmp    esi,eax
100274c2:	jae    0x100274e8
100274c4:	test   edx,edx
100274c6:	je     0x1002779c
100274cc:	movzx  eax,BYTE PTR [ebp+0x0]
100274d0:	mov    ecx,esi
100274d2:	shl    eax,cl
100274d4:	sub    edx,0x1
100274d7:	add    esi,0x8
100274da:	add    ebp,0x1
100274dd:	add    ebx,eax
100274df:	cmp    esi,DWORD PTR [edi+0x48]
100274e2:	mov    DWORD PTR [esp+0x10],edx
100274e6:	jb     0x100274c4
100274e8:	mov    ecx,DWORD PTR [edi+0x48]
100274eb:	mov    eax,0x1
100274f0:	shl    eax,cl
100274f2:	sub    eax,0x1
100274f5:	and    eax,ebx
100274f7:	add    DWORD PTR [edi+0x44],eax
100274fa:	shr    ebx,cl
100274fc:	sub    esi,ecx
100274fe:	mov    DWORD PTR [esp+0x18],ebx
10027502:	mov    ecx,DWORD PTR [edi+0x2c]
10027505:	sub    ecx,DWORD PTR [esp+0x1c]
10027509:	add    ecx,DWORD PTR [esp+0x2c]
1002750d:	cmp    DWORD PTR [edi+0x44],ecx
10027510:	jbe    0x10027522
10027512:	mov    eax,DWORD PTR [esp+0x40]
10027516:	mov    DWORD PTR [eax+0x18],0x1007f928
1002751d:	jmp    0x10027738
10027522:	mov    DWORD PTR [edi],0x16
10027528:	cmp    DWORD PTR [esp+0x1c],0x0
1002752d:	je     0x1002779c
10027533:	mov    ecx,DWORD PTR [esp+0x2c]
10027537:	sub    ecx,DWORD PTR [esp+0x1c]
1002753b:	mov    eax,DWORD PTR [edi+0x44]
1002753e:	cmp    eax,ecx
10027540:	jbe    0x1002757e
10027542:	sub    eax,ecx
10027544:	mov    ecx,DWORD PTR [edi+0x30]
10027547:	cmp    eax,ecx
10027549:	mov    DWORD PTR [esp+0x14],eax
1002754d:	jbe    0x1002755f
1002754f:	sub    eax,ecx
10027551:	mov    ecx,DWORD PTR [edi+0x34]
10027554:	add    ecx,DWORD PTR [edi+0x28]
10027557:	mov    DWORD PTR [esp+0x14],eax
1002755b:	sub    ecx,eax
1002755d:	jmp    0x1002756b
1002755f:	mov    ecx,DWORD PTR [edi+0x34]
10027562:	sub    ecx,eax
10027564:	add    ecx,DWORD PTR [edi+0x30]
10027567:	mov    eax,DWORD PTR [esp+0x14]
1002756b:	mov    DWORD PTR [esp+0x24],ecx
1002756f:	mov    ecx,DWORD PTR [edi+0x40]
10027572:	cmp    eax,ecx
10027574:	mov    DWORD PTR [esp+0x34],ecx
10027578:	jbe    0x10027593
1002757a:	mov    eax,ecx
1002757c:	jmp    0x1002758f
1002757e:	mov    ecx,DWORD PTR [esp+0x28]
10027582:	sub    ecx,eax
10027584:	mov    eax,DWORD PTR [edi+0x40]
10027587:	mov    DWORD PTR [esp+0x24],ecx
1002758b:	mov    DWORD PTR [esp+0x34],eax
1002758f:	mov    DWORD PTR [esp+0x14],eax
10027593:	mov    ecx,DWORD PTR [esp+0x1c]
10027597:	cmp    eax,ecx
10027599:	jbe    0x100275a1
1002759b:	mov    eax,ecx
1002759d:	mov    DWORD PTR [esp+0x14],eax
100275a1:	sub    ecx,eax
100275a3:	mov    DWORD PTR [esp+0x1c],ecx
100275a7:	mov    ecx,DWORD PTR [esp+0x34]
100275ab:	sub    ecx,eax
100275ad:	mov    eax,DWORD PTR [esp+0x28]
100275b1:	mov    DWORD PTR [edi+0x40],ecx
100275b4:	mov    ecx,DWORD PTR [esp+0x24]
100275b8:	mov    cl,BYTE PTR [ecx]
100275ba:	add    DWORD PTR [esp+0x24],0x1
100275bf:	mov    BYTE PTR [eax],cl
100275c1:	add    eax,0x1
100275c4:	sub    DWORD PTR [esp+0x14],0x1
100275c9:	jne    0x100275b4
100275cb:	cmp    DWORD PTR [edi+0x40],0x0
100275cf:	mov    DWORD PTR [esp+0x28],eax
100275d3:	jne    0x1002773e
100275d9:	mov    DWORD PTR [edi],0x12
100275df:	jmp    0x1002773e
100275e4:	cmp    DWORD PTR [esp+0x1c],0x0
100275e9:	je     0x1002779c
100275ef:	mov    eax,DWORD PTR [esp+0x28]
100275f3:	mov    cl,BYTE PTR [edi+0x40]
100275f6:	mov    BYTE PTR [eax],cl
100275f8:	add    eax,0x1
100275fb:	sub    DWORD PTR [esp+0x1c],0x1
10027600:	mov    DWORD PTR [esp+0x28],eax
10027604:	mov    DWORD PTR [edi],0x12
1002760a:	jmp    0x1002773e
1002760f:	cmp    DWORD PTR [edi+0x8],0x0
10027613:	je     0x100276dc
10027619:	cmp    esi,0x20
1002761c:	jae    0x10027648
1002761e:	mov    edi,edi
10027620:	test   edx,edx
10027622:	je     0x1002779c
10027628:	movzx  eax,BYTE PTR [ebp+0x0]
1002762c:	mov    ecx,esi
1002762e:	shl    eax,cl
10027630:	sub    edx,0x1
10027633:	add    esi,0x8
10027636:	add    ebp,0x1
10027639:	add    ebx,eax
1002763b:	cmp    esi,0x20
1002763e:	mov    DWORD PTR [esp+0x10],edx
10027642:	mov    DWORD PTR [esp+0x18],ebx
10027646:	jb     0x10027620
10027648:	mov    eax,DWORD PTR [esp+0x2c]
1002764c:	sub    eax,DWORD PTR [esp+0x1c]
10027650:	mov    ecx,DWORD PTR [esp+0x40]
10027654:	add    DWORD PTR [ecx+0x14],eax
10027657:	add    DWORD PTR [edi+0x1c],eax
1002765a:	test   eax,eax
1002765c:	mov    DWORD PTR [esp+0x2c],eax
10027660:	je     0x10027691
10027662:	mov    ecx,DWORD PTR [esp+0x28]
10027666:	mov    edx,DWORD PTR [edi+0x18]
10027669:	push   eax
1002766a:	sub    ecx,eax
1002766c:	cmp    DWORD PTR [edi+0x10],0x0
10027670:	push   ecx
10027671:	push   edx
10027672:	je     0x1002767b
10027674:	call   0x10029670
10027679:	jmp    0x10027680
1002767b:	call   0x10027980
10027680:	mov    ecx,DWORD PTR [esp+0x4c]
10027684:	mov    edx,DWORD PTR [esp+0x1c]
10027688:	mov    DWORD PTR [edi+0x18],eax
1002768b:	add    esp,0xc
1002768e:	mov    DWORD PTR [ecx+0x30],eax
10027691:	cmp    DWORD PTR [edi+0x10],0x0
10027695:	mov    eax,DWORD PTR [esp+0x1c]
10027699:	mov    DWORD PTR [esp+0x2c],eax
1002769d:	mov    eax,ebx
1002769f:	jne    0x100276bf
100276a1:	and    eax,0xff00
100276a6:	mov    ecx,ebx
100276a8:	shl    ecx,0x10
100276ab:	add    eax,ecx
100276ad:	xor    ecx,ecx
100276af:	mov    ch,BYTE PTR [esp+0x1a]
100276b3:	shl    eax,0x8
100276b6:	add    eax,ecx
100276b8:	mov    ecx,ebx
100276ba:	shr    ecx,0x18
100276bd:	add    eax,ecx
100276bf:	cmp    eax,DWORD PTR [edi+0x18]
100276c2:	je     0x100276d4
100276c4:	mov    eax,DWORD PTR [esp+0x40]
100276c8:	mov    DWORD PTR [eax+0x18],0x1007f910
100276cf:	jmp    0x10027738
100276d4:	xor    ebx,ebx
100276d6:	mov    DWORD PTR [esp+0x18],ebx
100276da:	xor    esi,esi
100276dc:	mov    DWORD PTR [edi],0x19
100276e2:	cmp    DWORD PTR [edi+0x8],0x0
100276e6:	je     0x10027784
100276ec:	cmp    DWORD PTR [edi+0x10],0x0
100276f0:	je     0x10027784
100276f6:	cmp    esi,0x20
100276f9:	jae    0x10027728
100276fb:	jmp    0x10027700
100276fd:	lea    ecx,[ecx+0x0]
10027700:	test   edx,edx
10027702:	je     0x1002779c
10027708:	movzx  eax,BYTE PTR [ebp+0x0]
1002770c:	mov    ecx,esi
1002770e:	shl    eax,cl
10027710:	sub    edx,0x1
10027713:	add    esi,0x8
10027716:	add    ebp,0x1
10027719:	add    ebx,eax
1002771b:	cmp    esi,0x20
1002771e:	mov    DWORD PTR [esp+0x10],edx
10027722:	mov    DWORD PTR [esp+0x18],ebx
10027726:	jb     0x10027700
10027728:	cmp    ebx,DWORD PTR [edi+0x1c]
1002772b:	je     0x10027780
1002772d:	mov    ecx,DWORD PTR [esp+0x40]
10027731:	mov    DWORD PTR [ecx+0x18],0x1007f8f8
10027738:	mov    DWORD PTR [edi],0x1b
1002773e:	mov    eax,DWORD PTR [edi]
10027740:	cmp    eax,0x1c
10027743:	jbe    0x100263c0
10027749:	mov    eax,0xfffffffe
1002774e:	pop    esi
1002774f:	pop    ebp
10027750:	pop    ebx
10027751:	pop    edi
10027752:	add    esp,0x2c
10027755:	ret    
10027756:	mov    eax,DWORD PTR [esp+0x40]
1002775a:	mov    ecx,DWORD PTR [esp+0x28]
1002775e:	mov    DWORD PTR [eax+0xc],ecx
10027761:	mov    ecx,DWORD PTR [esp+0x1c]
10027765:	mov    DWORD PTR [eax],ebp
10027767:	mov    DWORD PTR [eax+0x10],ecx
1002776a:	mov    DWORD PTR [eax+0x4],edx
1002776d:	mov    DWORD PTR [edi+0x3c],esi
10027770:	pop    esi
10027771:	pop    ebp
10027772:	mov    DWORD PTR [edi+0x38],ebx
10027775:	pop    ebx
10027776:	mov    eax,0x2
1002777b:	pop    edi
1002777c:	add    esp,0x2c
1002777f:	ret    
10027780:	xor    ebx,ebx
10027782:	xor    esi,esi
10027784:	mov    DWORD PTR [edi],0x1a
1002778a:	mov    DWORD PTR [esp+0x30],0x1
10027792:	jmp    0x1002779c
10027794:	mov    DWORD PTR [esp+0x30],0xfffffffd
1002779c:	mov    eax,DWORD PTR [esp+0x40]
100277a0:	mov    ecx,DWORD PTR [esp+0x28]
100277a4:	mov    DWORD PTR [eax+0xc],ecx
100277a7:	mov    ecx,DWORD PTR [esp+0x1c]
100277ab:	mov    DWORD PTR [eax+0x10],ecx
100277ae:	mov    DWORD PTR [eax],ebp
100277b0:	mov    DWORD PTR [eax+0x4],edx
100277b3:	cmp    DWORD PTR [edi+0x28],0x0
100277b7:	mov    DWORD PTR [edi+0x38],ebx
100277ba:	mov    DWORD PTR [edi+0x3c],esi
100277bd:	jne    0x100277cd
100277bf:	cmp    DWORD PTR [edi],0x18
100277c2:	jge    0x100277f1
100277c4:	mov    edx,DWORD PTR [esp+0x2c]
100277c8:	cmp    edx,DWORD PTR [eax+0x10]
100277cb:	je     0x100277f1
100277cd:	mov    eax,DWORD PTR [esp+0x2c]
100277d1:	mov    ebx,DWORD PTR [esp+0x40]
100277d5:	call   0x10026250
100277da:	test   eax,eax
100277dc:	je     0x100277f1
100277de:	mov    DWORD PTR [edi],0x1c
100277e4:	pop    esi
100277e5:	pop    ebp
100277e6:	pop    ebx
100277e7:	mov    eax,0xfffffffc
100277ec:	pop    edi
100277ed:	add    esp,0x2c
100277f0:	ret    
100277f1:	mov    esi,DWORD PTR [esp+0x40]
100277f5:	mov    ebp,DWORD PTR [esp+0x38]
100277f9:	sub    ebp,DWORD PTR [esi+0x4]
100277fc:	mov    ebx,DWORD PTR [esp+0x2c]
10027800:	sub    ebx,DWORD PTR [esi+0x10]
10027803:	add    DWORD PTR [esi+0x8],ebp
10027806:	add    DWORD PTR [esi+0x14],ebx
10027809:	add    DWORD PTR [edi+0x1c],ebx
1002780c:	cmp    DWORD PTR [edi+0x8],0x0
10027810:	je     0x10027846
10027812:	test   ebx,ebx
10027814:	je     0x10027846
10027816:	cmp    DWORD PTR [edi+0x10],0x0
1002781a:	push   ebx
1002781b:	je     0x1002782e
1002781d:	mov    ecx,DWORD PTR [esi+0xc]
10027820:	mov    edx,DWORD PTR [edi+0x18]
10027823:	sub    ecx,ebx
10027825:	push   ecx
10027826:	push   edx
10027827:	call   0x10029670
1002782c:	jmp    0x1002783d
1002782e:	mov    eax,DWORD PTR [esi+0xc]
10027831:	mov    ecx,DWORD PTR [edi+0x18]
10027834:	sub    eax,ebx
10027836:	push   eax
10027837:	push   ecx
10027838:	call   0x10027980
1002783d:	mov    DWORD PTR [edi+0x18],eax
10027840:	add    esp,0xc
10027843:	mov    DWORD PTR [esi+0x30],eax
10027846:	mov    edx,DWORD PTR [edi+0x4]
10027849:	neg    edx
1002784b:	sbb    edx,edx
1002784d:	and    edx,0x40
10027850:	xor    eax,eax
10027852:	cmp    DWORD PTR [edi],0xb
10027855:	setne  al
10027858:	sub    eax,0x1
1002785b:	and    eax,0x80
10027860:	add    edx,eax
10027862:	add    edx,DWORD PTR [edi+0x3c]
10027865:	test   ebp,ebp
10027867:	mov    DWORD PTR [esi+0x2c],edx
1002786a:	jne    0x10027870
1002786c:	test   ebx,ebx
1002786e:	je     0x10027877
10027870:	cmp    DWORD PTR [esp+0x44],0x4
10027875:	jne    0x10027890
10027877:	mov    eax,DWORD PTR [esp+0x30]
1002787b:	test   eax,eax
1002787d:	jne    0x1002774e
10027883:	pop    esi
10027884:	pop    ebp
10027885:	pop    ebx
10027886:	mov    eax,0xfffffffb
1002788b:	pop    edi
1002788c:	add    esp,0x2c
1002788f:	ret    
10027890:	mov    eax,DWORD PTR [esp+0x30]
10027894:	pop    esi
10027895:	pop    ebp
10027896:	pop    ebx
10027897:	pop    edi
10027898:	add    esp,0x2c
1002789b:	ret    
1002789c:	mov    eax,0xfffffffe
100278a1:	pop    edi
100278a2:	add    esp,0x2c
100278a5:	ret    
100278a6:	mov    edi,edi
100278a8:	(bad)  
100278a9:	arpl   WORD PTR [edx],ax
100278ab:	adc    BYTE PTR ds:0xe3100265,dh
100278b1:	add    dl,BYTE PTR gs:[eax]
100278b4:	bound  esp,QWORD PTR [esi+0x2]
100278b7:	adc    ah,ah
100278b9:	data16 add dl,BYTE PTR [eax]
100278bc:	outs   dx,DWORD PTR ds:[esi]
100278bd:	add    dl,BYTE PTR [bx+si]
100278c0:	sub    ebp,DWORD PTR [eax+0x2]
100278c3:	adc    bl,ah
100278c5:	push   0x699a1002
100278ca:	add    dl,BYTE PTR [eax]
100278cc:	xor    al,0x6a
100278ce:	add    dl,BYTE PTR [eax]
100278d0:	pushf  
100278d1:	push   0x2
100278d3:	adc    al,cl
100278d5:	push   0x2
100278d7:	adc    bl,dl
100278d9:	push   0x2
100278db:	adc    BYTE PTR [esi+0xb10026b],bl
100278e1:	ins    BYTE PTR es:[edi],dx
100278e2:	add    dl,BYTE PTR [eax]
100278e4:	imul   ebp,DWORD PTR [edx+eax*1+0x10],0xffffffeb
100278e9:	ins    BYTE PTR es:[edi],dx
100278ea:	add    dl,BYTE PTR [eax]
100278ec:	loop   0x1002795b
100278ee:	add    dl,BYTE PTR [eax]
100278f0:	repz jo 0x100278f5
100278f3:	adc    bh,dh
100278f5:	jb     0x100278f9
100278f7:	adc    BYTE PTR [edx+0x73],al
100278fa:	add    dl,BYTE PTR [eax]
100278fc:	mov    ecx,0x28100274
10027901:	jne    0x10027905
10027903:	adc    ah,ah
10027905:	jne    0x10027909
10027907:	adc    BYTE PTR [edi],cl
10027909:	jbe    0x1002790d
1002790b:	adc    dl,ah
1002790d:	jbe    0x10027911
1002790f:	adc    BYTE PTR [edx-0x6beffd89],cl
10027915:	ja     0x10027919
10027917:	adc    ah,ah
10027919:	ja     0x1002791d
1002791b:	adc    BYTE PTR [eax],bh
1002791d:	imul   eax,DWORD PTR [edx],0x10
10027920:	dec    ebp
10027921:	imul   eax,DWORD PTR [edx],0x10
10027924:	imul   ebp,DWORD PTR [ebx+0x2],0x26b7e10
1002792b:	adc    ah,cl
1002792d:	int3   
1002792e:	int3   
1002792f:	int3   
10027930:	push   esi
10027931:	mov    esi,DWORD PTR [esp+0x8]
10027935:	test   esi,esi
10027937:	je     0x10027973
10027939:	mov    eax,DWORD PTR [esi+0x1c]
1002793c:	test   eax,eax
1002793e:	je     0x10027973
10027940:	mov    ecx,DWORD PTR [esi+0x24]
10027943:	test   ecx,ecx
10027945:	je     0x10027973
10027947:	mov    eax,DWORD PTR [eax+0x34]
1002794a:	test   eax,eax
1002794c:	je     0x10027958
1002794e:	push   eax
1002794f:	mov    eax,DWORD PTR [esi+0x28]
10027952:	push   eax
10027953:	call   ecx
10027955:	add    esp,0x8
10027958:	mov    ecx,DWORD PTR [esi+0x1c]
1002795b:	mov    edx,DWORD PTR [esi+0x28]
1002795e:	mov    eax,DWORD PTR [esi+0x24]
10027961:	push   ecx
10027962:	push   edx
10027963:	call   eax
10027965:	add    esp,0x8
10027968:	mov    DWORD PTR [esi+0x1c],0x0
1002796f:	xor    eax,eax
10027971:	pop    esi
10027972:	ret    
10027973:	mov    eax,0xfffffffe
10027978:	pop    esi
10027979:	ret    
1002797a:	int3   
1002797b:	int3   
1002797c:	int3   
1002797d:	int3   
1002797e:	int3   
1002797f:	int3   
10027980:	mov    ecx,DWORD PTR [esp+0x4]
10027984:	push   ebx
10027985:	mov    ebx,DWORD PTR [esp+0x10]
10027989:	push   edi
1002798a:	mov    edi,ecx
1002798c:	shr    edi,0x10
1002798f:	and    ecx,0xffff
10027995:	cmp    ebx,0x1
10027998:	jne    0x100279cb
1002799a:	mov    eax,DWORD PTR [esp+0x10]
1002799e:	movzx  edx,BYTE PTR [eax]
100279a1:	add    ecx,edx
100279a3:	cmp    ecx,0xfff1
100279a9:	jb     0x100279b1
100279ab:	sub    ecx,0xfff1
100279b1:	add    edi,ecx
100279b3:	cmp    edi,0xfff1
100279b9:	jb     0x100279c1
100279bb:	sub    edi,0xfff1
100279c1:	mov    eax,edi
100279c3:	shl    eax,0x10
100279c6:	pop    edi
100279c7:	or     eax,ecx
100279c9:	pop    ebx
100279ca:	ret    
100279cb:	push   esi
100279cc:	mov    esi,DWORD PTR [esp+0x14]
100279d0:	test   esi,esi
100279d2:	jne    0x100279db
100279d4:	lea    eax,[esi+0x1]
100279d7:	pop    esi
100279d8:	pop    edi
100279d9:	pop    ebx
100279da:	ret    
100279db:	cmp    ebx,0x10
100279de:	jae    0x10027a1f
100279e0:	test   ebx,ebx
100279e2:	je     0x100279f5
100279e4:	movzx  eax,BYTE PTR [esi]
100279e7:	add    ecx,eax
100279e9:	sub    ebx,0x1
100279ec:	add    esi,0x1
100279ef:	add    edi,ecx
100279f1:	test   ebx,ebx
100279f3:	jne    0x100279e4
100279f5:	cmp    ecx,0xfff1
100279fb:	jb     0x10027a03
100279fd:	sub    ecx,0xfff1
10027a03:	mov    eax,0x80078071
10027a08:	mul    edi
10027a0a:	shr    edx,0xf
10027a0d:	mov    eax,edx
10027a0f:	shl    eax,0x4
10027a12:	sub    eax,edx
10027a14:	add    eax,edi
10027a16:	pop    esi
10027a17:	shl    eax,0x10
10027a1a:	pop    edi
10027a1b:	or     eax,ecx
10027a1d:	pop    ebx
10027a1e:	ret    
10027a1f:	cmp    ebx,0x15b0
10027a25:	jb     0x10027b09
10027a2b:	mov    eax,0x5e6ea9af
10027a30:	mul    ebx
10027a32:	push   ebp
10027a33:	mov    ebp,edx
10027a35:	shr    ebp,0xb
10027a38:	jmp    0x10027a40
10027a3a:	lea    ebx,[ebx+0x0]
10027a40:	sub    ebx,0x15b0
10027a46:	mov    eax,0x15b
10027a4b:	jmp    0x10027a50
10027a4d:	lea    ecx,[ecx+0x0]
10027a50:	movzx  edx,BYTE PTR [esi]
10027a53:	add    ecx,edx
10027a55:	movzx  edx,BYTE PTR [esi+0x1]
10027a59:	add    edi,ecx
10027a5b:	add    ecx,edx
10027a5d:	movzx  edx,BYTE PTR [esi+0x2]
10027a61:	add    edi,ecx
10027a63:	add    ecx,edx
10027a65:	movzx  edx,BYTE PTR [esi+0x3]
10027a69:	add    edi,ecx
10027a6b:	add    ecx,edx
10027a6d:	movzx  edx,BYTE PTR [esi+0x4]
10027a71:	add    edi,ecx
10027a73:	add    ecx,edx
10027a75:	movzx  edx,BYTE PTR [esi+0x5]
10027a79:	add    edi,ecx
10027a7b:	add    ecx,edx
10027a7d:	movzx  edx,BYTE PTR [esi+0x6]
10027a81:	add    edi,ecx
10027a83:	add    ecx,edx
10027a85:	movzx  edx,BYTE PTR [esi+0x7]
10027a89:	add    edi,ecx
10027a8b:	add    ecx,edx
10027a8d:	movzx  edx,BYTE PTR [esi+0x8]
10027a91:	add    edi,ecx
10027a93:	add    ecx,edx
10027a95:	movzx  edx,BYTE PTR [esi+0x9]
10027a99:	add    edi,ecx
10027a9b:	add    ecx,edx
10027a9d:	movzx  edx,BYTE PTR [esi+0xa]
10027aa1:	add    edi,ecx
10027aa3:	add    ecx,edx
10027aa5:	movzx  edx,BYTE PTR [esi+0xb]
10027aa9:	add    edi,ecx
10027aab:	add    ecx,edx
10027aad:	movzx  edx,BYTE PTR [esi+0xc]
10027ab1:	add    edi,ecx
10027ab3:	add    ecx,edx
10027ab5:	movzx  edx,BYTE PTR [esi+0xd]
10027ab9:	add    edi,ecx
10027abb:	add    ecx,edx
10027abd:	movzx  edx,BYTE PTR [esi+0xe]
10027ac1:	add    edi,ecx
10027ac3:	add    ecx,edx
10027ac5:	movzx  edx,BYTE PTR [esi+0xf]
10027ac9:	add    edi,ecx
10027acb:	add    ecx,edx
10027acd:	add    edi,ecx
10027acf:	add    esi,0x10
10027ad2:	sub    eax,0x1
10027ad5:	jne    0x10027a50
10027adb:	mov    eax,0x80078071
10027ae0:	mul    ecx
10027ae2:	shr    edx,0xf
10027ae5:	imul   edx,edx,0xffff000f
10027aeb:	add    ecx,edx
10027aed:	mov    eax,0x80078071
10027af2:	mul    edi
10027af4:	shr    edx,0xf
10027af7:	imul   edx,edx,0xffff000f
10027afd:	add    edi,edx
10027aff:	sub    ebp,0x1
10027b02:	jne    0x10027a40
10027b08:	pop    ebp
10027b09:	test   ebx,ebx
10027b0b:	je     0x10027be7
10027b11:	cmp    ebx,0x10
10027b14:	jb     0x10027bae
10027b1a:	mov    eax,ebx
10027b1c:	shr    eax,0x4
10027b1f:	nop
10027b20:	movzx  edx,BYTE PTR [esi]
10027b23:	add    ecx,edx
10027b25:	movzx  edx,BYTE PTR [esi+0x1]
10027b29:	add    edi,ecx
10027b2b:	add    ecx,edx
10027b2d:	movzx  edx,BYTE PTR [esi+0x2]
10027b31:	add    edi,ecx
10027b33:	add    ecx,edx
10027b35:	movzx  edx,BYTE PTR [esi+0x3]
10027b39:	add    edi,ecx
10027b3b:	add    ecx,edx
10027b3d:	movzx  edx,BYTE PTR [esi+0x4]
10027b41:	add    edi,ecx
10027b43:	add    ecx,edx
10027b45:	movzx  edx,BYTE PTR [esi+0x5]
10027b49:	add    edi,ecx
10027b4b:	add    ecx,edx
10027b4d:	movzx  edx,BYTE PTR [esi+0x6]
10027b51:	add    edi,ecx
10027b53:	add    ecx,edx
10027b55:	movzx  edx,BYTE PTR [esi+0x7]
10027b59:	add    edi,ecx
10027b5b:	add    ecx,edx
10027b5d:	movzx  edx,BYTE PTR [esi+0x8]
10027b61:	add    edi,ecx
10027b63:	add    ecx,edx
10027b65:	movzx  edx,BYTE PTR [esi+0x9]
10027b69:	add    edi,ecx
10027b6b:	add    ecx,edx
10027b6d:	movzx  edx,BYTE PTR [esi+0xa]
10027b71:	add    edi,ecx
10027b73:	add    ecx,edx
10027b75:	movzx  edx,BYTE PTR [esi+0xb]
10027b79:	add    edi,ecx
10027b7b:	add    ecx,edx
10027b7d:	movzx  edx,BYTE PTR [esi+0xc]
10027b81:	add    edi,ecx
10027b83:	add    ecx,edx
10027b85:	movzx  edx,BYTE PTR [esi+0xd]
10027b89:	add    edi,ecx
10027b8b:	add    ecx,edx
10027b8d:	movzx  edx,BYTE PTR [esi+0xe]
10027b91:	add    edi,ecx
10027b93:	add    ecx,edx
10027b95:	movzx  edx,BYTE PTR [esi+0xf]
10027b99:	add    edi,ecx
10027b9b:	add    ecx,edx
10027b9d:	sub    ebx,0x10
10027ba0:	add    edi,ecx
10027ba2:	add    esi,0x10
10027ba5:	sub    eax,0x1
10027ba8:	jne    0x10027b20
10027bae:	test   ebx,ebx
10027bb0:	je     0x10027bc3
10027bb2:	movzx  eax,BYTE PTR [esi]
10027bb5:	add    ecx,eax
10027bb7:	sub    ebx,0x1
10027bba:	add    esi,0x1
10027bbd:	add    edi,ecx
10027bbf:	test   ebx,ebx
10027bc1:	jne    0x10027bb2
10027bc3:	mov    eax,0x80078071
10027bc8:	mul    ecx
10027bca:	shr    edx,0xf
10027bcd:	imul   edx,edx,0xffff000f
10027bd3:	add    ecx,edx
10027bd5:	mov    eax,0x80078071
10027bda:	mul    edi
10027bdc:	shr    edx,0xf
10027bdf:	imul   edx,edx,0xffff000f
10027be5:	add    edi,edx
10027be7:	mov    eax,edi
10027be9:	pop    esi
10027bea:	shl    eax,0x10
10027bed:	pop    edi
10027bee:	or     eax,ecx
10027bf0:	pop    ebx
10027bf1:	ret    
10027bf2:	int3   
10027bf3:	int3   
10027bf4:	int3   
10027bf5:	int3   
10027bf6:	int3   
10027bf7:	int3   
10027bf8:	int3   
10027bf9:	int3   
10027bfa:	int3   
10027bfb:	int3   
10027bfc:	int3   
10027bfd:	int3   
10027bfe:	int3   
10027bff:	int3   
10027c00:	push   esi
10027c01:	lea    eax,[edx+0x94]
10027c07:	mov    ecx,0x11e
10027c0c:	xor    esi,esi
10027c0e:	mov    edi,edi
10027c10:	mov    WORD PTR [eax],si
10027c13:	add    eax,0x4
10027c16:	sub    ecx,0x1
10027c19:	jne    0x10027c10
10027c1b:	lea    eax,[edx+0x988]
10027c21:	mov    ecx,0x1e
10027c26:	mov    WORD PTR [eax],si
10027c29:	add    eax,0x4
10027c2c:	sub    ecx,0x1
10027c2f:	jne    0x10027c26
10027c31:	lea    eax,[edx+0xa7c]
10027c37:	mov    ecx,0x13
10027c3c:	lea    esp,[esp+0x0]
10027c40:	mov    WORD PTR [eax],si
10027c43:	add    eax,0x4
10027c46:	sub    ecx,0x1
10027c49:	jne    0x10027c40
10027c4b:	mov    DWORD PTR [edx+0x16ac],esi
10027c51:	mov    DWORD PTR [edx+0x16a8],esi
10027c57:	mov    DWORD PTR [edx+0x16b0],esi
10027c5d:	mov    DWORD PTR [edx+0x16a0],esi
10027c63:	mov    WORD PTR [edx+0x494],0x1
10027c6c:	pop    esi
10027c6d:	ret    
10027c6e:	int3   
10027c6f:	int3   
10027c70:	push   ecx
10027c71:	mov    edx,DWORD PTR [eax+0x1450]
10027c77:	push   ebp
10027c78:	push   esi
10027c79:	mov    esi,DWORD PTR [esp+0x10]
10027c7d:	mov    ebp,DWORD PTR [eax+esi*4+0xb5c]
10027c84:	lea    ecx,[esi+esi*1]
10027c87:	cmp    ecx,edx
10027c89:	mov    DWORD PTR [esp+0x8],ebp
10027c8d:	jg     0x10027d2b
10027c93:	push   ebx
10027c94:	jge    0x10027cca
10027c96:	mov    esi,DWORD PTR [eax+ecx*4+0xb60]
10027c9d:	mov    ebp,DWORD PTR [eax+ecx*4+0xb5c]
10027ca4:	movzx  edx,WORD PTR [edi+esi*4]
10027ca8:	movzx  ebx,WORD PTR [edi+ebp*4]
10027cac:	cmp    dx,bx
10027caf:	jb     0x10027cc3
10027cb1:	jne    0x10027cc6
10027cb3:	mov    dl,BYTE PTR [esi+eax*1+0x1458]
10027cba:	cmp    dl,BYTE PTR [eax+ebp*1+0x1458]
10027cc1:	ja     0x10027cc6
10027cc3:	add    ecx,0x1
10027cc6:	mov    ebp,DWORD PTR [esp+0xc]
10027cca:	mov    esi,DWORD PTR [eax+ecx*4+0xb5c]
10027cd1:	movzx  edx,WORD PTR [edi+ebp*4]
10027cd5:	movzx  ebx,WORD PTR [edi+esi*4]
10027cd9:	cmp    dx,bx
10027cdc:	jb     0x10027d0b
10027cde:	jne    0x10027cf0
10027ce0:	mov    dl,BYTE PTR [eax+ebp*1+0x1458]
10027ce7:	cmp    dl,BYTE PTR [esi+eax*1+0x1458]
10027cee:	jbe    0x10027d1b
10027cf0:	mov    edx,DWORD PTR [esp+0x14]
10027cf4:	mov    DWORD PTR [eax+edx*4+0xb5c],esi
10027cfb:	mov    edx,DWORD PTR [eax+0x1450]
10027d01:	mov    DWORD PTR [esp+0x14],ecx
10027d05:	add    ecx,ecx
10027d07:	cmp    ecx,edx
10027d09:	jle    0x10027c94
10027d0b:	mov    ecx,DWORD PTR [esp+0x14]
10027d0f:	pop    ebx
10027d10:	pop    esi
10027d11:	mov    DWORD PTR [eax+ecx*4+0xb5c],ebp
10027d18:	pop    ebp
10027d19:	pop    ecx
10027d1a:	ret    
10027d1b:	mov    edx,DWORD PTR [esp+0x14]
10027d1f:	pop    ebx
10027d20:	pop    esi
10027d21:	mov    DWORD PTR [eax+edx*4+0xb5c],ebp
10027d28:	pop    ebp
10027d29:	pop    ecx
10027d2a:	ret    
10027d2b:	mov    DWORD PTR [eax+esi*4+0xb5c],ebp
10027d32:	pop    esi
10027d33:	pop    ebp
10027d34:	pop    ecx
10027d35:	ret    
10027d36:	int3   
10027d37:	int3   
10027d38:	int3   
10027d39:	int3   
10027d3a:	int3   
10027d3b:	int3   
10027d3c:	int3   
10027d3d:	int3   
10027d3e:	int3   
10027d3f:	int3   
10027d40:	sub    esp,0x20
10027d43:	mov    edx,DWORD PTR [ecx+0x4]
10027d46:	push   ebx
10027d47:	mov    ebx,DWORD PTR [ecx]
10027d49:	mov    ecx,DWORD PTR [ecx+0x8]
10027d4c:	mov    DWORD PTR [esp+0x18],edx
10027d50:	mov    edx,DWORD PTR [ecx+0x4]
10027d53:	push   ebp
10027d54:	mov    ebp,DWORD PTR [ecx]
10027d56:	mov    DWORD PTR [esp+0x24],edx
10027d5a:	mov    edx,DWORD PTR [ecx+0x8]
10027d5d:	push   esi
10027d5e:	mov    esi,DWORD PTR [ecx+0x10]
10027d61:	xor    ecx,ecx
10027d63:	mov    DWORD PTR [eax+0xb3c],ecx
10027d69:	mov    DWORD PTR [eax+0xb40],ecx
10027d6f:	mov    DWORD PTR [eax+0xb44],ecx
10027d75:	mov    DWORD PTR [eax+0xb48],ecx
10027d7b:	mov    DWORD PTR [eax+0xb4c],ecx
10027d81:	mov    DWORD PTR [eax+0xb50],ecx
10027d87:	mov    DWORD PTR [eax+0xb54],ecx
10027d8d:	mov    DWORD PTR [eax+0xb58],ecx
10027d93:	mov    DWORD PTR [esp+0x24],edx
10027d97:	mov    edx,DWORD PTR [eax+0x1454]
10027d9d:	mov    edx,DWORD PTR [eax+edx*4+0xb5c]
10027da4:	push   edi
10027da5:	mov    WORD PTR [ebx+edx*4+0x2],cx
10027daa:	mov    edi,DWORD PTR [eax+0x1454]
10027db0:	add    edi,0x1
10027db3:	cmp    edi,0x23d
10027db9:	mov    DWORD PTR [esp+0x1c],esi
10027dbd:	mov    DWORD PTR [esp+0x18],ecx
10027dc1:	jge    0x10027f4f
10027dc7:	lea    ecx,[eax+edi*4+0xb5c]
10027dce:	mov    DWORD PTR [esp+0x14],ecx
10027dd2:	mov    ecx,0x23d
10027dd7:	sub    ecx,edi
10027dd9:	add    edi,ecx
10027ddb:	mov    DWORD PTR [esp+0x20],ecx
10027ddf:	mov    DWORD PTR [esp+0x10],edi
10027de3:	jmp    0x10027de9
10027de5:	mov    esi,DWORD PTR [esp+0x1c]
10027de9:	mov    edx,DWORD PTR [esp+0x14]
10027ded:	mov    edx,DWORD PTR [edx]
10027def:	movzx  ecx,WORD PTR [ebx+edx*4+0x2]
10027df4:	movzx  ecx,WORD PTR [ebx+ecx*4+0x2]
10027df9:	add    ecx,0x1
10027dfc:	cmp    ecx,esi
10027dfe:	jle    0x10027e07
10027e00:	add    DWORD PTR [esp+0x18],0x1
10027e05:	mov    ecx,esi
10027e07:	cmp    edx,DWORD PTR [esp+0x24]
10027e0b:	mov    WORD PTR [ebx+edx*4+0x2],cx
10027e10:	jg     0x10027e5a
10027e12:	mov    edi,DWORD PTR [esp+0x28]
10027e16:	add    WORD PTR [eax+ecx*2+0xb3c],0x1
10027e1f:	xor    esi,esi
10027e21:	cmp    edx,edi
10027e23:	jl     0x10027e30
10027e25:	mov    esi,edx
10027e27:	sub    esi,edi
10027e29:	mov    edi,DWORD PTR [esp+0x2c]
10027e2d:	mov    esi,DWORD PTR [edi+esi*4]
10027e30:	movzx  edi,WORD PTR [ebx+edx*4]
10027e34:	movzx  edi,di
10027e37:	add    ecx,esi
10027e39:	imul   ecx,edi
10027e3c:	add    DWORD PTR [eax+0x16a8],ecx
10027e42:	test   ebp,ebp
10027e44:	je     0x10027e56
10027e46:	movzx  edx,WORD PTR [ebp+edx*4+0x2]
10027e4b:	add    edx,esi
10027e4d:	imul   edx,edi
10027e50:	add    DWORD PTR [eax+0x16ac],edx
10027e56:	mov    edi,DWORD PTR [esp+0x10]
10027e5a:	add    DWORD PTR [esp+0x14],0x4
10027e5f:	sub    DWORD PTR [esp+0x20],0x1
10027e64:	jne    0x10027de5
10027e6a:	mov    ebp,DWORD PTR [esp+0x18]
10027e6e:	test   ebp,ebp
10027e70:	je     0x10027f4f
10027e76:	mov    ecx,DWORD PTR [esp+0x1c]
10027e7a:	lea    edx,[ecx-0x1]
10027e7d:	mov    DWORD PTR [esp+0x2c],edx
10027e81:	lea    esi,[eax+ecx*2+0xb3c]
10027e88:	jmp    0x10027e90
10027e8a:	lea    ebx,[ebx+0x0]
10027e90:	mov    ecx,DWORD PTR [esp+0x2c]
10027e94:	cmp    WORD PTR [eax+ecx*2+0xb3c],0x0
10027e9d:	lea    edx,[eax+ecx*2+0xb3c]
10027ea4:	jne    0x10027eb2
10027ea6:	sub    edx,0x2
10027ea9:	sub    ecx,0x1
10027eac:	cmp    WORD PTR [edx],0x0
10027eb0:	je     0x10027ea6
10027eb2:	add    WORD PTR [eax+ecx*2+0xb3c],0xffff
10027ebc:	add    WORD PTR [eax+ecx*2+0xb3e],0x2
10027ec5:	add    WORD PTR [esi],0xffff
10027eca:	sub    ebp,0x2
10027ecd:	test   ebp,ebp
10027ecf:	jg     0x10027e90
10027ed1:	mov    edx,DWORD PTR [esp+0x1c]
10027ed5:	test   edx,edx
10027ed7:	je     0x10027f4f
10027ed9:	mov    DWORD PTR [esp+0x20],esi
10027edd:	lea    ecx,[ecx+0x0]
10027ee0:	movzx  esi,WORD PTR [esi]
10027ee3:	test   esi,esi
10027ee5:	mov    DWORD PTR [esp+0x1c],esi
10027ee9:	je     0x10027f3d
10027eeb:	lea    ebp,[eax+edi*4+0xb5c]
10027ef2:	mov    ecx,DWORD PTR [ebp-0x4]
10027ef5:	sub    DWORD PTR [esp+0x10],0x1
10027efa:	sub    ebp,0x4
10027efd:	cmp    ecx,DWORD PTR [esp+0x24]
10027f01:	mov    DWORD PTR [esp+0x2c],ebp
10027f05:	jg     0x10027f35
10027f07:	movzx  edi,WORD PTR [ebx+ecx*4+0x2]
10027f0c:	cmp    edi,edx
10027f0e:	lea    esi,[ebx+ecx*4+0x2]
10027f12:	je     0x10027f2c
10027f14:	movzx  ecx,WORD PTR [ebx+ecx*4]
10027f18:	mov    ebp,edx
10027f1a:	sub    ebp,edi
10027f1c:	imul   ebp,ecx
10027f1f:	add    DWORD PTR [eax+0x16a8],ebp
10027f25:	mov    ebp,DWORD PTR [esp+0x2c]
10027f29:	mov    WORD PTR [esi],dx
10027f2c:	sub    DWORD PTR [esp+0x1c],0x1
10027f31:	mov    esi,DWORD PTR [esp+0x1c]
10027f35:	test   esi,esi
10027f37:	jne    0x10027ef2
10027f39:	mov    edi,DWORD PTR [esp+0x10]
10027f3d:	mov    esi,DWORD PTR [esp+0x20]
10027f41:	sub    edx,0x1
10027f44:	sub    esi,0x2
10027f47:	test   edx,edx
10027f49:	mov    DWORD PTR [esp+0x20],esi
10027f4d:	jne    0x10027ee0
10027f4f:	pop    edi
10027f50:	pop    esi
10027f51:	pop    ebp
10027f52:	pop    ebx
10027f53:	add    esp,0x20
10027f56:	ret    
10027f57:	int3   
10027f58:	int3   
10027f59:	int3   
10027f5a:	int3   
10027f5b:	int3   
10027f5c:	int3   
10027f5d:	int3   
10027f5e:	int3   
10027f5f:	int3   
10027f60:	sub    esp,0xc
10027f63:	push   ebx
10027f64:	push   ebp
10027f65:	mov    ebp,DWORD PTR [esp+0x18]
10027f69:	push   esi
10027f6a:	push   edi
10027f6b:	movzx  edi,WORD PTR [eax+0x2]
10027f6f:	xor    edx,edx
10027f71:	test   edi,edi
10027f73:	mov    ebx,ecx
10027f75:	mov    DWORD PTR [esp+0x14],0xffffffff
10027f7d:	lea    ecx,[edx+0x7]
10027f80:	lea    esi,[edx+0x4]
10027f83:	jne    0x10027f8d
10027f85:	mov    ecx,0x8a
10027f8a:	lea    esi,[edx+0x3]
10027f8d:	test   ebx,ebx
10027f8f:	mov    WORD PTR [eax+ebx*4+0x6],0xffff
10027f96:	jl     0x1002803a
10027f9c:	add    eax,0x6
10027f9f:	add    ebx,0x1
10027fa2:	mov    DWORD PTR [esp+0x18],ebx
10027fa6:	mov    DWORD PTR [esp+0x10],eax
10027faa:	mov    ebx,0x1
10027faf:	nop
10027fb0:	mov    eax,edi
10027fb2:	mov    edi,DWORD PTR [esp+0x10]
10027fb6:	movzx  edi,WORD PTR [edi]
10027fb9:	add    edx,ebx
10027fbb:	cmp    edx,ecx
10027fbd:	jge    0x10027fc3
10027fbf:	cmp    eax,edi
10027fc1:	je     0x1002802b
10027fc3:	cmp    edx,esi
10027fc5:	jge    0x10027fd1
10027fc7:	add    WORD PTR [ebp+eax*4+0xa7c],dx
10027fcf:	jmp    0x10028001
10027fd1:	test   eax,eax
10027fd3:	je     0x10027fec
10027fd5:	cmp    eax,DWORD PTR [esp+0x14]
10027fd9:	je     0x10027fe3
10027fdb:	add    WORD PTR [ebp+eax*4+0xa7c],bx
10027fe3:	add    WORD PTR [ebp+0xabc],bx
10027fea:	jmp    0x10028001
10027fec:	cmp    edx,0xa
10027fef:	jg     0x10027ffa
10027ff1:	add    WORD PTR [ebp+0xac0],bx
10027ff8:	jmp    0x10028001
10027ffa:	add    WORD PTR [ebp+0xac4],bx
10028001:	xor    edx,edx
10028003:	test   edi,edi
10028005:	mov    DWORD PTR [esp+0x14],eax
10028009:	jne    0x10028015
1002800b:	mov    ecx,0x8a
10028010:	lea    esi,[edx+0x3]
10028013:	jmp    0x1002802b
10028015:	cmp    eax,edi
10028017:	jne    0x10028023
10028019:	mov    ecx,0x6
1002801e:	lea    esi,[ecx-0x3]
10028021:	jmp    0x1002802b
10028023:	mov    ecx,0x7
10028028:	lea    esi,[ecx-0x3]
1002802b:	add    DWORD PTR [esp+0x10],0x4
10028030:	sub    DWORD PTR [esp+0x18],ebx
10028034:	jne    0x10027fb0
1002803a:	pop    edi
1002803b:	pop    esi
1002803c:	pop    ebp
1002803d:	pop    ebx
1002803e:	add    esp,0xc
10028041:	ret    
10028042:	int3   
10028043:	int3   
10028044:	int3   
10028045:	int3   
10028046:	int3   
10028047:	int3   
10028048:	int3   
10028049:	int3   
1002804a:	int3   
1002804b:	int3   
1002804c:	int3   
1002804d:	int3   
1002804e:	int3   
1002804f:	int3   
10028050:	sub    esp,0x18
10028053:	push   ebx
10028054:	push   ebp
10028055:	movzx  ebp,WORD PTR [edx+0x2]
10028059:	push   esi
1002805a:	xor    esi,esi
1002805c:	test   ebp,ebp
1002805e:	push   edi
1002805f:	mov    ebx,ecx
10028061:	mov    DWORD PTR [esp+0x1c],0xffffffff
10028069:	mov    DWORD PTR [esp+0x14],ebp
1002806d:	lea    ecx,[esi+0x7]
10028070:	lea    edi,[esi+0x4]
10028073:	jne    0x1002807d
10028075:	mov    ecx,0x8a
1002807a:	lea    edi,[ebp+0x3]
1002807d:	test   ebx,ebx
1002807f:	jl     0x10028553
10028085:	add    edx,0x6
10028088:	add    ebx,0x1
1002808b:	mov    DWORD PTR [esp+0x18],edx
1002808f:	mov    DWORD PTR [esp+0x20],ebx
10028093:	mov    ebp,0x1
10028098:	jmp    0x100280a0
1002809a:	lea    ebx,[ebx+0x0]
100280a0:	mov    ebx,DWORD PTR [esp+0x18]
100280a4:	movzx  ebx,WORD PTR [ebx]
100280a7:	mov    edx,DWORD PTR [esp+0x14]
100280ab:	add    esi,ebp
100280ad:	cmp    esi,ecx
100280af:	mov    DWORD PTR [esp+0x24],edx
100280b3:	mov    DWORD PTR [esp+0x14],ebx
100280b7:	mov    DWORD PTR [esp+0x10],esi
100280bb:	jge    0x100280c5
100280bd:	cmp    edx,ebx
100280bf:	je     0x10028544
100280c5:	cmp    esi,edi
100280c7:	jge    0x1002816f
100280cd:	lea    ecx,[ecx+0x0]
100280d0:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
100280d8:	mov    ecx,DWORD PTR [eax+0x16bc]
100280de:	mov    ebx,0x10
100280e3:	sub    ebx,edi
100280e5:	cmp    ecx,ebx
100280e7:	jle    0x10028144
100280e9:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
100280f1:	mov    edx,esi
100280f3:	shl    edx,cl
100280f5:	mov    ecx,DWORD PTR [eax+0x8]
100280f8:	or     WORD PTR [eax+0x16b8],dx
100280ff:	movzx  ebx,BYTE PTR [eax+0x16b8]
10028106:	mov    edx,DWORD PTR [eax+0x14]
10028109:	mov    BYTE PTR [ecx+edx*1],bl
1002810c:	add    DWORD PTR [eax+0x14],ebp
1002810f:	mov    ecx,DWORD PTR [eax+0x14]
10028112:	movzx  ebx,BYTE PTR [eax+0x16b9]
10028119:	mov    edx,DWORD PTR [eax+0x8]
1002811c:	mov    BYTE PTR [ecx+edx*1],bl
1002811f:	mov    edx,DWORD PTR [eax+0x16bc]
10028125:	add    DWORD PTR [eax+0x14],ebp
10028128:	mov    cl,0x10
1002812a:	sub    cl,dl
1002812c:	shr    si,cl
1002812f:	lea    ecx,[edx+edi*1-0x10]
10028133:	mov    edx,DWORD PTR [esp+0x24]
10028137:	mov    WORD PTR [eax+0x16b8],si
1002813e:	mov    esi,DWORD PTR [esp+0x10]
10028142:	jmp    0x10028158
10028144:	mov    bx,WORD PTR [eax+edx*4+0xa7c]
1002814c:	shl    bx,cl
1002814f:	or     WORD PTR [eax+0x16b8],bx
10028156:	add    ecx,edi
10028158:	sub    esi,ebp
1002815a:	mov    DWORD PTR [eax+0x16bc],ecx
10028160:	mov    DWORD PTR [esp+0x10],esi
10028164:	jne    0x100280d0
1002816a:	jmp    0x10028516
1002816f:	test   edx,edx
10028171:	je     0x1002831c
10028177:	cmp    edx,DWORD PTR [esp+0x1c]
1002817b:	je     0x1002821d
10028181:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
10028189:	mov    ecx,DWORD PTR [eax+0x16bc]
1002818f:	mov    ebx,0x10
10028194:	sub    ebx,edi
10028196:	cmp    ecx,ebx
10028198:	mov    DWORD PTR [esp+0x1c],edi
1002819c:	jle    0x100281f9
1002819e:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
100281a6:	mov    edi,esi
100281a8:	shl    edi,cl
100281aa:	mov    ecx,DWORD PTR [eax+0x8]
100281ad:	or     WORD PTR [eax+0x16b8],di
100281b4:	movzx  ebx,BYTE PTR [eax+0x16b8]
100281bb:	mov    edi,DWORD PTR [eax+0x14]
100281be:	mov    BYTE PTR [ecx+edi*1],bl
100281c1:	add    DWORD PTR [eax+0x14],ebp
100281c4:	movzx  ebx,BYTE PTR [eax+0x16b9]
100281cb:	mov    ecx,DWORD PTR [eax+0x8]
100281ce:	mov    edi,DWORD PTR [eax+0x14]
100281d1:	mov    BYTE PTR [edi+ecx*1],bl
100281d4:	mov    ebx,DWORD PTR [eax+0x16bc]
100281da:	add    DWORD PTR [eax+0x14],ebp
100281dd:	mov    cl,0x10
100281df:	sub    cl,bl
100281e1:	shr    si,cl
100281e4:	mov    ecx,DWORD PTR [esp+0x1c]
100281e8:	lea    ecx,[ebx+ecx*1-0x10]
100281ec:	mov    WORD PTR [eax+0x16b8],si
100281f3:	mov    esi,DWORD PTR [esp+0x10]
100281f7:	jmp    0x10028211
100281f9:	mov    di,WORD PTR [eax+edx*4+0xa7c]
10028201:	shl    di,cl
10028204:	or     WORD PTR [eax+0x16b8],di
1002820b:	mov    edi,DWORD PTR [esp+0x1c]
1002820f:	add    ecx,edi
10028211:	sub    esi,ebp
10028213:	mov    DWORD PTR [eax+0x16bc],ecx
10028219:	mov    DWORD PTR [esp+0x10],esi
1002821d:	movzx  edi,WORD PTR [eax+0xabe]
10028224:	mov    ecx,DWORD PTR [eax+0x16bc]
1002822a:	mov    ebx,0x10
1002822f:	sub    ebx,edi
10028231:	cmp    ecx,ebx
10028233:	mov    DWORD PTR [esp+0x1c],edi
10028237:	jle    0x10028293
10028239:	movzx  esi,WORD PTR [eax+0xabc]
10028240:	mov    edi,esi
10028242:	shl    edi,cl
10028244:	mov    ecx,DWORD PTR [eax+0x8]
10028247:	or     WORD PTR [eax+0x16b8],di
1002824e:	movzx  ebx,BYTE PTR [eax+0x16b8]
10028255:	mov    edi,DWORD PTR [eax+0x14]
10028258:	mov    BYTE PTR [ecx+edi*1],bl
1002825b:	add    DWORD PTR [eax+0x14],ebp
1002825e:	movzx  ebx,BYTE PTR [eax+0x16b9]
10028265:	mov    ecx,DWORD PTR [eax+0x8]
10028268:	mov    edi,DWORD PTR [eax+0x14]
1002826b:	mov    BYTE PTR [edi+ecx*1],bl
1002826e:	mov    ebx,DWORD PTR [eax+0x16bc]
10028274:	add    DWORD PTR [eax+0x14],ebp
10028277:	mov    cl,0x10
10028279:	sub    cl,bl
1002827b:	shr    si,cl
1002827e:	mov    ecx,DWORD PTR [esp+0x1c]
10028282:	lea    ecx,[ebx+ecx*1-0x10]
10028286:	mov    WORD PTR [eax+0x16b8],si
1002828d:	mov    esi,DWORD PTR [esp+0x10]
10028291:	jmp    0x100282aa
10028293:	mov    di,WORD PTR [eax+0xabc]
1002829a:	shl    di,cl
1002829d:	or     WORD PTR [eax+0x16b8],di
100282a4:	mov    edi,DWORD PTR [esp+0x1c]
100282a8:	add    ecx,edi
100282aa:	add    esi,0xfffffffd
100282ad:	cmp    ecx,0xe
100282b0:	mov    DWORD PTR [eax+0x16bc],ecx
100282b6:	jle    0x1002830b
100282b8:	mov    edi,esi
100282ba:	shl    edi,cl
100282bc:	mov    ecx,DWORD PTR [eax+0x8]
100282bf:	or     WORD PTR [eax+0x16b8],di
100282c6:	movzx  ebx,BYTE PTR [eax+0x16b8]
100282cd:	mov    edi,DWORD PTR [eax+0x14]
100282d0:	mov    BYTE PTR [ecx+edi*1],bl
100282d3:	add    DWORD PTR [eax+0x14],ebp
100282d6:	movzx  ebx,BYTE PTR [eax+0x16b9]
100282dd:	mov    edi,DWORD PTR [eax+0x14]
100282e0:	mov    ecx,DWORD PTR [eax+0x8]
100282e3:	mov    BYTE PTR [edi+ecx*1],bl
100282e6:	mov    ebx,DWORD PTR [eax+0x16bc]
100282ec:	add    DWORD PTR [eax+0x14],ebp
100282ef:	mov    cl,0x10
100282f1:	sub    cl,bl
100282f3:	shr    si,cl
100282f6:	add    ebx,0xfffffff2
100282f9:	mov    DWORD PTR [eax+0x16bc],ebx
100282ff:	mov    WORD PTR [eax+0x16b8],si
10028306:	jmp    0x10028516
1002830b:	shl    esi,cl
1002830d:	or     WORD PTR [eax+0x16b8],si
10028314:	add    ecx,0x2
10028317:	jmp    0x10028510
1002831c:	cmp    esi,0xa
1002831f:	mov    ecx,DWORD PTR [eax+0x16bc]
10028325:	mov    ebx,0x10
1002832a:	jg     0x10028424
10028330:	movzx  edi,WORD PTR [eax+0xac2]
10028337:	sub    ebx,edi
10028339:	cmp    ecx,ebx
1002833b:	mov    DWORD PTR [esp+0x1c],edi
1002833f:	jle    0x1002839b
10028341:	movzx  esi,WORD PTR [eax+0xac0]
10028348:	mov    edi,esi
1002834a:	shl    edi,cl
1002834c:	mov    ecx,DWORD PTR [eax+0x8]
1002834f:	or     WORD PTR [eax+0x16b8],di
10028356:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002835d:	mov    edi,DWORD PTR [eax+0x14]
10028360:	mov    BYTE PTR [ecx+edi*1],bl
10028363:	add    DWORD PTR [eax+0x14],ebp
10028366:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002836d:	mov    ecx,DWORD PTR [eax+0x8]
10028370:	mov    edi,DWORD PTR [eax+0x14]
10028373:	mov    BYTE PTR [edi+ecx*1],bl
10028376:	mov    ebx,DWORD PTR [eax+0x16bc]
1002837c:	add    DWORD PTR [eax+0x14],ebp
1002837f:	mov    cl,0x10
10028381:	sub    cl,bl
10028383:	shr    si,cl
10028386:	mov    ecx,DWORD PTR [esp+0x1c]
1002838a:	lea    ecx,[ebx+ecx*1-0x10]
1002838e:	mov    WORD PTR [eax+0x16b8],si
10028395:	mov    esi,DWORD PTR [esp+0x10]
10028399:	jmp    0x100283b2
1002839b:	mov    di,WORD PTR [eax+0xac0]
100283a2:	shl    di,cl
100283a5:	or     WORD PTR [eax+0x16b8],di
100283ac:	mov    edi,DWORD PTR [esp+0x1c]
100283b0:	add    ecx,edi
100283b2:	add    esi,0xfffffffd
100283b5:	cmp    ecx,0xd
100283b8:	mov    DWORD PTR [eax+0x16bc],ecx
100283be:	jle    0x10028413
100283c0:	mov    edi,esi
100283c2:	shl    edi,cl
100283c4:	mov    ecx,DWORD PTR [eax+0x8]
100283c7:	or     WORD PTR [eax+0x16b8],di
100283ce:	movzx  ebx,BYTE PTR [eax+0x16b8]
100283d5:	mov    edi,DWORD PTR [eax+0x14]
100283d8:	mov    BYTE PTR [ecx+edi*1],bl
100283db:	add    DWORD PTR [eax+0x14],ebp
100283de:	movzx  ebx,BYTE PTR [eax+0x16b9]
100283e5:	mov    edi,DWORD PTR [eax+0x14]
100283e8:	mov    ecx,DWORD PTR [eax+0x8]
100283eb:	mov    BYTE PTR [edi+ecx*1],bl
100283ee:	mov    ebx,DWORD PTR [eax+0x16bc]
100283f4:	add    DWORD PTR [eax+0x14],ebp
100283f7:	mov    cl,0x10
100283f9:	sub    cl,bl
100283fb:	shr    si,cl
100283fe:	add    ebx,0xfffffff3
10028401:	mov    DWORD PTR [eax+0x16bc],ebx
10028407:	mov    WORD PTR [eax+0x16b8],si
1002840e:	jmp    0x10028516
10028413:	shl    esi,cl
10028415:	or     WORD PTR [eax+0x16b8],si
1002841c:	add    ecx,0x3
1002841f:	jmp    0x10028510
10028424:	movzx  edi,WORD PTR [eax+0xac6]
1002842b:	sub    ebx,edi
1002842d:	cmp    ecx,ebx
1002842f:	mov    DWORD PTR [esp+0x1c],edi
10028433:	jle    0x1002848f
10028435:	movzx  esi,WORD PTR [eax+0xac4]
1002843c:	mov    edi,esi
1002843e:	shl    edi,cl
10028440:	mov    ecx,DWORD PTR [eax+0x8]
10028443:	or     WORD PTR [eax+0x16b8],di
1002844a:	movzx  ebx,BYTE PTR [eax+0x16b8]
10028451:	mov    edi,DWORD PTR [eax+0x14]
10028454:	mov    BYTE PTR [ecx+edi*1],bl
10028457:	add    DWORD PTR [eax+0x14],ebp
1002845a:	movzx  ebx,BYTE PTR [eax+0x16b9]
10028461:	mov    ecx,DWORD PTR [eax+0x8]
10028464:	mov    edi,DWORD PTR [eax+0x14]
10028467:	mov    BYTE PTR [edi+ecx*1],bl
1002846a:	mov    ebx,DWORD PTR [eax+0x16bc]
10028470:	add    DWORD PTR [eax+0x14],ebp
10028473:	mov    cl,0x10
10028475:	sub    cl,bl
10028477:	shr    si,cl
1002847a:	mov    ecx,DWORD PTR [esp+0x1c]
1002847e:	lea    ecx,[ebx+ecx*1-0x10]
10028482:	mov    WORD PTR [eax+0x16b8],si
10028489:	mov    esi,DWORD PTR [esp+0x10]
1002848d:	jmp    0x100284a6
1002848f:	mov    di,WORD PTR [eax+0xac4]
10028496:	shl    di,cl
10028499:	or     WORD PTR [eax+0x16b8],di
100284a0:	mov    edi,DWORD PTR [esp+0x1c]
100284a4:	add    ecx,edi
100284a6:	add    esi,0xfffffff5
100284a9:	cmp    ecx,0x9
100284ac:	mov    DWORD PTR [eax+0x16bc],ecx
100284b2:	jle    0x10028504
100284b4:	mov    edi,esi
100284b6:	shl    edi,cl
100284b8:	mov    ecx,DWORD PTR [eax+0x8]
100284bb:	or     WORD PTR [eax+0x16b8],di
100284c2:	movzx  ebx,BYTE PTR [eax+0x16b8]
100284c9:	mov    edi,DWORD PTR [eax+0x14]
100284cc:	mov    BYTE PTR [ecx+edi*1],bl
100284cf:	add    DWORD PTR [eax+0x14],ebp
100284d2:	movzx  ebx,BYTE PTR [eax+0x16b9]
100284d9:	mov    edi,DWORD PTR [eax+0x14]
100284dc:	mov    ecx,DWORD PTR [eax+0x8]
100284df:	mov    BYTE PTR [edi+ecx*1],bl
100284e2:	mov    ebx,DWORD PTR [eax+0x16bc]
100284e8:	add    DWORD PTR [eax+0x14],ebp
100284eb:	mov    cl,0x10
100284ed:	sub    cl,bl
100284ef:	shr    si,cl
100284f2:	add    ebx,0xfffffff7
100284f5:	mov    DWORD PTR [eax+0x16bc],ebx
100284fb:	mov    WORD PTR [eax+0x16b8],si
10028502:	jmp    0x10028516
10028504:	shl    esi,cl
10028506:	or     WORD PTR [eax+0x16b8],si
1002850d:	add    ecx,0x7
10028510:	mov    DWORD PTR [eax+0x16bc],ecx
10028516:	mov    ecx,DWORD PTR [esp+0x14]
1002851a:	xor    esi,esi
1002851c:	test   ecx,ecx
1002851e:	mov    DWORD PTR [esp+0x1c],edx
10028522:	jne    0x1002852e
10028524:	mov    ecx,0x8a
10028529:	lea    edi,[esi+0x3]
1002852c:	jmp    0x10028544
1002852e:	cmp    edx,ecx
10028530:	jne    0x1002853c
10028532:	mov    ecx,0x6
10028537:	lea    edi,[ecx-0x3]
1002853a:	jmp    0x10028544
1002853c:	mov    ecx,0x7
10028541:	lea    edi,[ecx-0x3]
10028544:	add    DWORD PTR [esp+0x18],0x4
10028549:	sub    DWORD PTR [esp+0x20],ebp
1002854d:	jne    0x100280a0
10028553:	pop    edi
10028554:	pop    esi
10028555:	pop    ebp
10028556:	pop    ebx
10028557:	add    esp,0x18
1002855a:	ret    
1002855b:	int3   
1002855c:	int3   
1002855d:	int3   
1002855e:	int3   
1002855f:	int3   
10028560:	push   ecx
10028561:	mov    ecx,DWORD PTR [eax+0x16bc]
10028567:	cmp    ecx,0xb
1002856a:	push   ebx
1002856b:	mov    ebx,DWORD PTR [esp+0x14]
1002856f:	push   ebp
10028570:	push   esi
10028571:	push   edi
10028572:	mov    ebp,0x1
10028577:	jle    0x100285d7
10028579:	mov    esi,DWORD PTR [esp+0x18]
1002857d:	add    esi,0xfffffeff
10028583:	mov    edx,esi
10028585:	shl    edx,cl
10028587:	mov    ecx,DWORD PTR [eax+0x14]
1002858a:	or     WORD PTR [eax+0x16b8],dx
10028591:	movzx  ebx,BYTE PTR [eax+0x16b8]
10028598:	mov    edx,DWORD PTR [eax+0x8]
1002859b:	mov    BYTE PTR [ecx+edx*1],bl
1002859e:	add    DWORD PTR [eax+0x14],ebp
100285a1:	movzx  ebx,BYTE PTR [eax+0x16b9]
100285a8:	mov    ecx,DWORD PTR [eax+0x14]
100285ab:	mov    edx,DWORD PTR [eax+0x8]
100285ae:	mov    BYTE PTR [ecx+edx*1],bl
100285b1:	mov    edx,DWORD PTR [eax+0x16bc]
100285b7:	add    DWORD PTR [eax+0x14],ebp
100285ba:	mov    ebx,DWORD PTR [esp+0x20]
100285be:	mov    cl,0x10
100285c0:	sub    cl,dl
100285c2:	shr    si,cl
100285c5:	add    edx,0xfffffff5
100285c8:	mov    DWORD PTR [eax+0x16bc],edx
100285ce:	mov    WORD PTR [eax+0x16b8],si
100285d5:	jmp    0x100285f3
100285d7:	mov    edx,DWORD PTR [esp+0x18]
100285db:	add    edx,0xfffffeff
100285e1:	shl    edx,cl
100285e3:	or     WORD PTR [eax+0x16b8],dx
100285ea:	add    ecx,0x5
100285ed:	mov    DWORD PTR [eax+0x16bc],ecx
100285f3:	mov    ecx,DWORD PTR [eax+0x16bc]
100285f9:	cmp    ecx,0xb
100285fc:	jle    0x1002865d
100285fe:	mov    esi,DWORD PTR [esp+0x1c]
10028602:	add    esi,0xffffffff
10028605:	mov    edx,esi
10028607:	shl    edx,cl
10028609:	mov    ecx,DWORD PTR [eax+0x14]
1002860c:	mov    DWORD PTR [esp+0x10],ebx
10028610:	or     WORD PTR [eax+0x16b8],dx
10028617:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002861e:	mov    edx,DWORD PTR [eax+0x8]
10028621:	mov    BYTE PTR [ecx+edx*1],bl
10028624:	add    DWORD PTR [eax+0x14],ebp
10028627:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002862e:	mov    ecx,DWORD PTR [eax+0x14]
10028631:	mov    edx,DWORD PTR [eax+0x8]
10028634:	mov    BYTE PTR [ecx+edx*1],bl
10028637:	mov    edx,DWORD PTR [eax+0x16bc]
1002863d:	add    DWORD PTR [eax+0x14],ebp
10028640:	mov    ebx,DWORD PTR [esp+0x10]
10028644:	mov    cl,0x10
10028646:	sub    cl,dl
10028648:	shr    si,cl
1002864b:	add    edx,0xfffffff5
1002864e:	mov    DWORD PTR [eax+0x16bc],edx
10028654:	mov    WORD PTR [eax+0x16b8],si
1002865b:	jmp    0x10028676
1002865d:	mov    edx,DWORD PTR [esp+0x1c]
10028661:	add    edx,0xffffffff
10028664:	shl    edx,cl
10028666:	or     WORD PTR [eax+0x16b8],dx
1002866d:	add    ecx,0x5
10028670:	mov    DWORD PTR [eax+0x16bc],ecx
10028676:	mov    ecx,DWORD PTR [eax+0x16bc]
1002867c:	cmp    ecx,0xc
1002867f:	jle    0x100286dc
10028681:	lea    esi,[ebx-0x4]
10028684:	mov    edx,esi
10028686:	shl    edx,cl
10028688:	mov    ecx,DWORD PTR [eax+0x14]
1002868b:	mov    DWORD PTR [esp+0x10],ebx
1002868f:	or     WORD PTR [eax+0x16b8],dx
10028696:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002869d:	mov    edx,DWORD PTR [eax+0x8]
100286a0:	mov    BYTE PTR [ecx+edx*1],bl
100286a3:	add    DWORD PTR [eax+0x14],ebp
100286a6:	movzx  ebx,BYTE PTR [eax+0x16b9]
100286ad:	mov    ecx,DWORD PTR [eax+0x14]
100286b0:	mov    edx,DWORD PTR [eax+0x8]
100286b3:	mov    BYTE PTR [ecx+edx*1],bl
100286b6:	mov    edx,DWORD PTR [eax+0x16bc]
100286bc:	add    DWORD PTR [eax+0x14],ebp
100286bf:	mov    ebx,DWORD PTR [esp+0x10]
100286c3:	mov    cl,0x10
100286c5:	sub    cl,dl
100286c7:	shr    si,cl
100286ca:	add    edx,0xfffffff4
100286cd:	mov    DWORD PTR [eax+0x16bc],edx
100286d3:	mov    WORD PTR [eax+0x16b8],si
100286da:	jmp    0x100286f1
100286dc:	lea    edx,[ebx-0x4]
100286df:	shl    edx,cl
100286e1:	or     WORD PTR [eax+0x16b8],dx
100286e8:	add    ecx,0x4
100286eb:	mov    DWORD PTR [eax+0x16bc],ecx
100286f1:	xor    edi,edi
100286f3:	test   ebx,ebx
100286f5:	jle    0x10028793
100286fb:	jmp    0x10028700
100286fd:	lea    ecx,[ecx+0x0]
10028700:	mov    ecx,DWORD PTR [eax+0x16bc]
10028706:	cmp    ecx,0xd
10028709:	movzx  edx,BYTE PTR [edi+0x1007fb2c]
10028710:	jle    0x1002876e
10028712:	movzx  esi,WORD PTR [eax+edx*4+0xa7e]
1002871a:	mov    edx,esi
1002871c:	shl    edx,cl
1002871e:	mov    ecx,DWORD PTR [eax+0x14]
10028721:	or     WORD PTR [eax+0x16b8],dx
10028728:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002872f:	mov    edx,DWORD PTR [eax+0x8]
10028732:	mov    BYTE PTR [ecx+edx*1],bl
10028735:	add    DWORD PTR [eax+0x14],ebp
10028738:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002873f:	mov    ecx,DWORD PTR [eax+0x14]
10028742:	mov    edx,DWORD PTR [eax+0x8]
10028745:	mov    BYTE PTR [ecx+edx*1],bl
10028748:	mov    edx,DWORD PTR [eax+0x16bc]
1002874e:	add    DWORD PTR [eax+0x14],ebp
10028751:	mov    ebx,DWORD PTR [esp+0x20]
10028755:	mov    cl,0x10
10028757:	sub    cl,dl
10028759:	shr    si,cl
1002875c:	add    edx,0xfffffff3
1002875f:	mov    DWORD PTR [eax+0x16bc],edx
10028765:	mov    WORD PTR [eax+0x16b8],si
1002876c:	jmp    0x10028789
1002876e:	mov    dx,WORD PTR [eax+edx*4+0xa7e]
10028776:	shl    dx,cl
10028779:	or     WORD PTR [eax+0x16b8],dx
10028780:	add    ecx,0x3
10028783:	mov    DWORD PTR [eax+0x16bc],ecx
10028789:	add    edi,ebp
1002878b:	cmp    edi,ebx
1002878d:	jl     0x10028700
10028793:	mov    ecx,DWORD PTR [esp+0x18]
10028797:	add    ecx,0xffffffff
1002879a:	lea    edx,[eax+0x94]
100287a0:	call   0x10028050
100287a5:	mov    ecx,DWORD PTR [esp+0x1c]
100287a9:	pop    edi
100287aa:	pop    esi
100287ab:	pop    ebp
100287ac:	add    ecx,0xffffffff
100287af:	lea    edx,[eax+0x988]
100287b5:	pop    ebx
100287b6:	add    esp,0x4
100287b9:	jmp    0x10028050
100287be:	int3   
100287bf:	int3   
100287c0:	sub    esp,0xc
100287c3:	push   ebx
100287c4:	mov    ebx,DWORD PTR [esp+0x14]
100287c8:	push   ebp
100287c9:	xor    ecx,ecx
100287cb:	cmp    DWORD PTR [eax+0x16a0],ecx
100287d1:	push   esi
100287d2:	push   edi
100287d3:	je     0x10028b12
100287d9:	lea    esp,[esp+0x0]
100287e0:	mov    edx,DWORD PTR [eax+0x16a4]
100287e6:	movzx  ebp,WORD PTR [edx+ecx*2]
100287ea:	mov    edx,DWORD PTR [eax+0x1698]
100287f0:	movzx  esi,BYTE PTR [ecx+edx*1]
100287f4:	add    ecx,0x1
100287f7:	test   ebp,ebp
100287f9:	mov    DWORD PTR [esp+0x18],ecx
100287fd:	mov    ecx,DWORD PTR [eax+0x16bc]
10028803:	jne    0x1002888a
10028809:	movzx  edi,WORD PTR [ebx+esi*4+0x2]
1002880e:	mov    edx,0x10
10028813:	sub    edx,edi
10028815:	cmp    ecx,edx
10028817:	jle    0x10028875
10028819:	movzx  esi,WORD PTR [ebx+esi*4]
1002881d:	mov    edx,esi
1002881f:	shl    edx,cl
10028821:	mov    ecx,DWORD PTR [eax+0x8]
10028824:	mov    DWORD PTR [esp+0x10],ebx
10028828:	or     WORD PTR [eax+0x16b8],dx
1002882f:	movzx  ebx,BYTE PTR [eax+0x16b8]
10028836:	mov    edx,DWORD PTR [eax+0x14]
10028839:	mov    BYTE PTR [ecx+edx*1],bl
1002883c:	add    DWORD PTR [eax+0x14],0x1
10028840:	movzx  ebx,BYTE PTR [eax+0x16b9]
10028847:	mov    ecx,DWORD PTR [eax+0x14]
1002884a:	mov    edx,DWORD PTR [eax+0x8]
1002884d:	mov    BYTE PTR [ecx+edx*1],bl
10028850:	mov    edx,DWORD PTR [eax+0x16bc]
10028856:	add    DWORD PTR [eax+0x14],0x1
1002885a:	mov    ebx,DWORD PTR [esp+0x10]
1002885e:	mov    cl,0x10
10028860:	sub    cl,dl
10028862:	shr    si,cl
10028865:	lea    ecx,[edx+edi*1-0x10]
10028869:	mov    WORD PTR [eax+0x16b8],si
10028870:	jmp    0x10028afc
10028875:	mov    dx,WORD PTR [ebx+esi*4]
10028879:	shl    dx,cl
1002887c:	or     WORD PTR [eax+0x16b8],dx
10028883:	add    ecx,edi
10028885:	jmp    0x10028afc
1002888a:	movzx  edx,BYTE PTR [esi+0x10080300]
10028891:	movzx  edi,WORD PTR [ebx+edx*4+0x406]
10028899:	mov    ebx,0x10
1002889e:	sub    ebx,edi
100288a0:	cmp    ecx,ebx
100288a2:	mov    DWORD PTR [esp+0x10],edi
100288a6:	mov    edi,DWORD PTR [esp+0x20]
100288aa:	mov    DWORD PTR [esp+0x14],edx
100288ae:	jle    0x10028913
100288b0:	movzx  edi,WORD PTR [edi+edx*4+0x404]
100288b8:	mov    edx,edi
100288ba:	shl    edx,cl
100288bc:	mov    ecx,DWORD PTR [eax+0x8]
100288bf:	or     WORD PTR [eax+0x16b8],dx
100288c6:	movzx  ebx,BYTE PTR [eax+0x16b8]
100288cd:	mov    edx,DWORD PTR [eax+0x14]
100288d0:	mov    BYTE PTR [ecx+edx*1],bl
100288d3:	add    DWORD PTR [eax+0x14],0x1
100288d7:	mov    ecx,DWORD PTR [eax+0x14]
100288da:	movzx  ebx,BYTE PTR [eax+0x16b9]
100288e1:	mov    edx,DWORD PTR [eax+0x8]
100288e4:	mov    BYTE PTR [ecx+edx*1],bl
100288e7:	mov    edx,DWORD PTR [eax+0x16bc]
100288ed:	add    DWORD PTR [eax+0x14],0x1
100288f1:	mov    cl,0x10
100288f3:	sub    cl,dl
100288f5:	shr    di,cl
100288f8:	mov    ecx,DWORD PTR [esp+0x10]
100288fc:	lea    edx,[edx+ecx*1-0x10]
10028900:	mov    DWORD PTR [eax+0x16bc],edx
10028906:	mov    edx,DWORD PTR [esp+0x14]
1002890a:	mov    WORD PTR [eax+0x16b8],di
10028911:	jmp    0x10028931
10028913:	mov    di,WORD PTR [edi+edx*4+0x404]
1002891b:	shl    di,cl
1002891e:	or     WORD PTR [eax+0x16b8],di
10028925:	mov    edi,DWORD PTR [esp+0x10]
10028929:	add    ecx,edi
1002892b:	mov    DWORD PTR [eax+0x16bc],ecx
10028931:	mov    edi,DWORD PTR [edx*4+0x1007fab8]
10028938:	test   edi,edi
1002893a:	mov    ebx,DWORD PTR [esp+0x20]
1002893e:	je     0x100289ba
10028940:	sub    esi,DWORD PTR [edx*4+0x10080400]
10028947:	mov    ecx,DWORD PTR [eax+0x16bc]
1002894d:	mov    edx,0x10
10028952:	sub    edx,edi
10028954:	cmp    ecx,edx
10028956:	jle    0x100289a9
10028958:	mov    edx,esi
1002895a:	shl    edx,cl
1002895c:	mov    ecx,DWORD PTR [eax+0x8]
1002895f:	or     WORD PTR [eax+0x16b8],dx
10028966:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002896d:	mov    edx,DWORD PTR [eax+0x14]
10028970:	mov    BYTE PTR [ecx+edx*1],bl
10028973:	add    DWORD PTR [eax+0x14],0x1
10028977:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002897e:	mov    ecx,DWORD PTR [eax+0x14]
10028981:	mov    edx,DWORD PTR [eax+0x8]
10028984:	mov    BYTE PTR [ecx+edx*1],bl
10028987:	mov    edx,DWORD PTR [eax+0x16bc]
1002898d:	add    DWORD PTR [eax+0x14],0x1
10028991:	mov    ebx,DWORD PTR [esp+0x20]
10028995:	mov    cl,0x10
10028997:	sub    cl,dl
10028999:	shr    si,cl
1002899c:	lea    ecx,[edx+edi*1-0x10]
100289a0:	mov    WORD PTR [eax+0x16b8],si
100289a7:	jmp    0x100289b4
100289a9:	shl    esi,cl
100289ab:	or     WORD PTR [eax+0x16b8],si
100289b2:	add    ecx,edi
100289b4:	mov    DWORD PTR [eax+0x16bc],ecx
100289ba:	sub    ebp,0x1
100289bd:	cmp    ebp,0x100
100289c3:	jae    0x100289ce
100289c5:	movzx  edi,BYTE PTR [ebp+0x10080100]
100289cc:	jmp    0x100289da
100289ce:	mov    edx,ebp
100289d0:	shr    edx,0x7
100289d3:	movzx  edi,BYTE PTR [edx+0x10080200]
100289da:	mov    ecx,DWORD PTR [esp+0x24]
100289de:	movzx  edx,WORD PTR [ecx+edi*4+0x2]
100289e3:	mov    ecx,DWORD PTR [eax+0x16bc]
100289e9:	mov    esi,0x10
100289ee:	sub    esi,edx
100289f0:	cmp    ecx,esi
100289f2:	mov    DWORD PTR [esp+0x14],edx
100289f6:	jle    0x10028a5b
100289f8:	mov    edx,DWORD PTR [esp+0x24]
100289fc:	movzx  esi,WORD PTR [edx+edi*4]
10028a00:	mov    edx,esi
10028a02:	shl    edx,cl
10028a04:	mov    ecx,DWORD PTR [eax+0x8]
10028a07:	or     WORD PTR [eax+0x16b8],dx
10028a0e:	movzx  ebx,BYTE PTR [eax+0x16b8]
10028a15:	mov    edx,DWORD PTR [eax+0x14]
10028a18:	mov    BYTE PTR [ecx+edx*1],bl
10028a1b:	add    DWORD PTR [eax+0x14],0x1
10028a1f:	movzx  ebx,BYTE PTR [eax+0x16b9]
10028a26:	mov    ecx,DWORD PTR [eax+0x14]
10028a29:	mov    edx,DWORD PTR [eax+0x8]
10028a2c:	mov    BYTE PTR [ecx+edx*1],bl
10028a2f:	mov    edx,DWORD PTR [eax+0x16bc]
10028a35:	add    DWORD PTR [eax+0x14],0x1
10028a39:	mov    ebx,DWORD PTR [esp+0x20]
10028a3d:	mov    cl,0x10
10028a3f:	sub    cl,dl
10028a41:	shr    si,cl
10028a44:	mov    ecx,DWORD PTR [esp+0x14]
10028a48:	lea    edx,[edx+ecx*1-0x10]
10028a4c:	mov    DWORD PTR [eax+0x16bc],edx
10028a52:	mov    WORD PTR [eax+0x16b8],si
10028a59:	jmp    0x10028a75
10028a5b:	mov    esi,DWORD PTR [esp+0x24]
10028a5f:	mov    si,WORD PTR [esi+edi*4]
10028a63:	shl    si,cl
10028a66:	or     WORD PTR [eax+0x16b8],si
10028a6d:	add    ecx,edx
10028a6f:	mov    DWORD PTR [eax+0x16bc],ecx
10028a75:	mov    esi,DWORD PTR [edi*4+0x1007fb40]
10028a7c:	test   esi,esi
10028a7e:	je     0x10028b02
10028a84:	mov    ecx,DWORD PTR [eax+0x16bc]
10028a8a:	sub    ebp,DWORD PTR [edi*4+0x10080478]
10028a91:	mov    edx,0x10
10028a96:	sub    edx,esi
10028a98:	cmp    ecx,edx
10028a9a:	jle    0x10028af1
10028a9c:	mov    edx,ebp
10028a9e:	shl    edx,cl
10028aa0:	mov    ecx,DWORD PTR [eax+0x8]
10028aa3:	mov    DWORD PTR [esp+0x14],ebx
10028aa7:	or     WORD PTR [eax+0x16b8],dx
10028aae:	movzx  ebx,BYTE PTR [eax+0x16b8]
10028ab5:	mov    edx,DWORD PTR [eax+0x14]
10028ab8:	mov    BYTE PTR [ecx+edx*1],bl
10028abb:	add    DWORD PTR [eax+0x14],0x1
10028abf:	movzx  ebx,BYTE PTR [eax+0x16b9]
10028ac6:	mov    ecx,DWORD PTR [eax+0x14]
10028ac9:	mov    edx,DWORD PTR [eax+0x8]
10028acc:	mov    BYTE PTR [ecx+edx*1],bl
10028acf:	mov    edx,DWORD PTR [eax+0x16bc]
10028ad5:	add    DWORD PTR [eax+0x14],0x1
10028ad9:	mov    ebx,DWORD PTR [esp+0x14]
10028add:	mov    cl,0x10
10028adf:	sub    cl,dl
10028ae1:	shr    bp,cl
10028ae4:	lea    ecx,[edx+esi*1-0x10]
10028ae8:	mov    WORD PTR [eax+0x16b8],bp
10028aef:	jmp    0x10028afc
10028af1:	shl    ebp,cl
10028af3:	or     WORD PTR [eax+0x16b8],bp
10028afa:	add    ecx,esi
10028afc:	mov    DWORD PTR [eax+0x16bc],ecx
10028b02:	mov    ecx,DWORD PTR [esp+0x18]
10028b06:	cmp    ecx,DWORD PTR [eax+0x16a0]
10028b0c:	jb     0x100287e0
10028b12:	movzx  edi,WORD PTR [ebx+0x402]
10028b19:	mov    ecx,DWORD PTR [eax+0x16bc]
10028b1f:	mov    edx,0x10
10028b24:	sub    edx,edi
10028b26:	cmp    ecx,edx
10028b28:	jle    0x10028b9d
10028b2a:	movzx  esi,WORD PTR [ebx+0x400]
10028b31:	mov    edx,esi
10028b33:	shl    edx,cl
10028b35:	mov    ecx,DWORD PTR [eax+0x8]
10028b38:	mov    DWORD PTR [esp+0x20],ebx
10028b3c:	or     WORD PTR [eax+0x16b8],dx
10028b43:	mov    edx,DWORD PTR [eax+0x14]
10028b46:	mov    bl,BYTE PTR [eax+0x16b8]
10028b4c:	mov    BYTE PTR [ecx+edx*1],bl
10028b4f:	add    DWORD PTR [eax+0x14],0x1
10028b53:	mov    ebp,DWORD PTR [eax+0x14]
10028b56:	mov    ecx,DWORD PTR [eax+0x8]
10028b59:	mov    dl,BYTE PTR [eax+0x16b9]
10028b5f:	mov    ebx,DWORD PTR [esp+0x20]
10028b63:	mov    BYTE PTR [ecx+ebp*1],dl
10028b66:	mov    edx,DWORD PTR [eax+0x16bc]
10028b6c:	add    DWORD PTR [eax+0x14],0x1
10028b70:	mov    cl,0x10
10028b72:	sub    cl,dl
10028b74:	shr    si,cl
10028b77:	lea    ecx,[edx+edi*1-0x10]
10028b7b:	pop    edi
10028b7c:	mov    DWORD PTR [eax+0x16bc],ecx
10028b82:	mov    WORD PTR [eax+0x16b8],si
10028b89:	movzx  edx,WORD PTR [ebx+0x402]
10028b90:	pop    esi
10028b91:	pop    ebp
10028b92:	mov    DWORD PTR [eax+0x16b4],edx
10028b98:	pop    ebx
10028b99:	add    esp,0xc
10028b9c:	ret    
10028b9d:	mov    dx,WORD PTR [ebx+0x400]
10028ba4:	shl    dx,cl
10028ba7:	or     WORD PTR [eax+0x16b8],dx
10028bae:	add    ecx,edi
10028bb0:	pop    edi
10028bb1:	mov    DWORD PTR [eax+0x16bc],ecx
10028bb7:	movzx  ecx,WORD PTR [ebx+0x402]
10028bbe:	pop    esi
10028bbf:	pop    ebp
10028bc0:	mov    DWORD PTR [eax+0x16b4],ecx
10028bc6:	pop    ebx
10028bc7:	add    esp,0xc
10028bca:	ret    
10028bcb:	int3   
10028bcc:	int3   
10028bcd:	int3   
10028bce:	int3   
10028bcf:	int3   
10028bd0:	xor    eax,eax
10028bd2:	lea    ecx,[edx+0x94]
10028bd8:	cmp    WORD PTR [ecx],0x0
10028bdc:	jne    0x10028be9
10028bde:	add    eax,0x1
10028be1:	add    ecx,0x4
10028be4:	cmp    eax,0x9
10028be7:	jl     0x10028bd8
10028be9:	cmp    eax,0x9
10028bec:	jne    0x10028c8d
10028bf2:	mov    eax,0xe
10028bf7:	lea    ecx,[edx+0xd0]
10028bfd:	lea    ecx,[ecx+0x0]
10028c00:	cmp    WORD PTR [ecx-0x4],0x0
10028c05:	jne    0x10028c8d
10028c0b:	cmp    WORD PTR [ecx],0x0
10028c0f:	jne    0x10028c46
10028c11:	cmp    WORD PTR [ecx+0x4],0x0
10028c16:	jne    0x10028c57
10028c18:	cmp    WORD PTR [ecx+0x8],0x0
10028c1d:	jne    0x10028c68
10028c1f:	cmp    WORD PTR [ecx+0xc],0x0
10028c24:	jne    0x10028c79
10028c26:	cmp    WORD PTR [ecx+0x10],0x0
10028c2b:	jne    0x10028c8a
10028c2d:	add    eax,0x6
10028c30:	add    ecx,0x18
10028c33:	cmp    eax,0x20
10028c36:	jl     0x10028c00
10028c38:	mov    edx,DWORD PTR [edx]
10028c3a:	xor    ecx,ecx
10028c3c:	cmp    eax,0x20
10028c3f:	sete   cl
10028c42:	mov    DWORD PTR [edx+0x2c],ecx
10028c45:	ret    
10028c46:	mov    edx,DWORD PTR [edx]
10028c48:	xor    ecx,ecx
10028c4a:	add    eax,0x1
10028c4d:	cmp    eax,0x20
10028c50:	sete   cl
10028c53:	mov    DWORD PTR [edx+0x2c],ecx
10028c56:	ret    
10028c57:	mov    edx,DWORD PTR [edx]
10028c59:	xor    ecx,ecx
10028c5b:	add    eax,0x2
10028c5e:	cmp    eax,0x20
10028c61:	sete   cl
10028c64:	mov    DWORD PTR [edx+0x2c],ecx
10028c67:	ret    
10028c68:	mov    edx,DWORD PTR [edx]
10028c6a:	xor    ecx,ecx
10028c6c:	add    eax,0x3
10028c6f:	cmp    eax,0x20
10028c72:	sete   cl
10028c75:	mov    DWORD PTR [edx+0x2c],ecx
10028c78:	ret    
10028c79:	mov    edx,DWORD PTR [edx]
10028c7b:	xor    ecx,ecx
10028c7d:	add    eax,0x4
10028c80:	cmp    eax,0x20
10028c83:	sete   cl
10028c86:	mov    DWORD PTR [edx+0x2c],ecx
10028c89:	ret    
10028c8a:	add    eax,0x5
10028c8d:	mov    edx,DWORD PTR [edx]
10028c8f:	xor    ecx,ecx
10028c91:	cmp    eax,0x20
10028c94:	sete   cl
10028c97:	mov    DWORD PTR [edx+0x2c],ecx
10028c9a:	ret    
10028c9b:	int3   
10028c9c:	int3   
10028c9d:	int3   
10028c9e:	int3   
10028c9f:	int3   
10028ca0:	xor    eax,eax
10028ca2:	push   esi
10028ca3:	mov    esi,ecx
10028ca5:	and    esi,0x1
10028ca8:	or     eax,esi
10028caa:	sub    edx,0x1
10028cad:	shr    ecx,1
10028caf:	add    eax,eax
10028cb1:	test   edx,edx
10028cb3:	jg     0x10028ca3
10028cb5:	shr    eax,1
10028cb7:	pop    esi
10028cb8:	ret    
10028cb9:	int3   
10028cba:	int3   
10028cbb:	int3   
10028cbc:	int3   
10028cbd:	int3   
10028cbe:	int3   
10028cbf:	int3   
10028cc0:	mov    edx,DWORD PTR [eax+0x16bc]
10028cc6:	cmp    edx,0x8
10028cc9:	push   ebx
10028cca:	push   esi
10028ccb:	jle    0x10028d0a
10028ccd:	movzx  ebx,BYTE PTR [eax+0x16b8]
10028cd4:	mov    edx,DWORD PTR [eax+0x14]
10028cd7:	mov    ecx,DWORD PTR [eax+0x8]
10028cda:	mov    BYTE PTR [ecx+edx*1],bl
10028cdd:	movzx  ebx,BYTE PTR [eax+0x16b9]
10028ce4:	mov    edx,DWORD PTR [eax+0x8]
10028ce7:	mov    esi,0x1
10028cec:	add    DWORD PTR [eax+0x14],esi
10028cef:	mov    ecx,DWORD PTR [eax+0x14]
10028cf2:	mov    BYTE PTR [ecx+edx*1],bl
10028cf5:	add    DWORD PTR [eax+0x14],esi
10028cf8:	xor    ecx,ecx
10028cfa:	pop    esi
10028cfb:	mov    WORD PTR [eax+0x16b8],cx
10028d02:	mov    DWORD PTR [eax+0x16bc],ecx
10028d08:	pop    ebx
10028d09:	ret    
10028d0a:	xor    ecx,ecx
10028d0c:	cmp    edx,ecx
10028d0e:	jle    0x10028d23
10028d10:	mov    esi,DWORD PTR [eax+0x14]
10028d13:	mov    edx,DWORD PTR [eax+0x8]
10028d16:	mov    bl,BYTE PTR [eax+0x16b8]
10028d1c:	mov    BYTE PTR [edx+esi*1],bl
10028d1f:	add    DWORD PTR [eax+0x14],0x1
10028d23:	pop    esi
10028d24:	mov    WORD PTR [eax+0x16b8],cx
10028d2b:	mov    DWORD PTR [eax+0x16bc],ecx
10028d31:	pop    ebx
10028d32:	ret    
10028d33:	int3   
10028d34:	int3   
10028d35:	int3   
10028d36:	int3   
10028d37:	int3   
10028d38:	int3   
10028d39:	int3   
10028d3a:	int3   
10028d3b:	int3   
10028d3c:	int3   
10028d3d:	int3   
10028d3e:	int3   
10028d3f:	int3   
10028d40:	push   ebx
10028d41:	push   esi
10028d42:	push   edi
10028d43:	mov    ebx,ecx
10028d45:	mov    esi,edx
10028d47:	call   0x10028cc0
10028d4c:	cmp    DWORD PTR [esp+0x10],0x0
10028d51:	mov    DWORD PTR [eax+0x16b4],0x8
10028d5b:	mov    edi,0x1
10028d60:	je     0x10028d9c
10028d62:	mov    ecx,DWORD PTR [eax+0x14]
10028d65:	mov    edx,DWORD PTR [eax+0x8]
10028d68:	mov    BYTE PTR [ecx+edx*1],bl
10028d6b:	add    DWORD PTR [eax+0x14],edi
10028d6e:	mov    ecx,DWORD PTR [eax+0x14]
10028d71:	mov    edx,DWORD PTR [eax+0x8]
10028d74:	mov    BYTE PTR [ecx+edx*1],bh
10028d77:	add    DWORD PTR [eax+0x14],edi
10028d7a:	mov    edx,DWORD PTR [eax+0x8]
10028d7d:	push   ebp
10028d7e:	mov    ebp,DWORD PTR [eax+0x14]
10028d81:	mov    cl,bl
10028d83:	not    cl
10028d85:	mov    BYTE PTR [edx+ebp*1],cl
10028d88:	add    DWORD PTR [eax+0x14],edi
10028d8b:	mov    ebp,DWORD PTR [eax+0x14]
10028d8e:	mov    edx,DWORD PTR [eax+0x8]
10028d91:	mov    ecx,ebx
10028d93:	not    ecx
10028d95:	mov    BYTE PTR [edx+ebp*1],ch
10028d98:	add    DWORD PTR [eax+0x14],edi
10028d9b:	pop    ebp
10028d9c:	test   ebx,ebx
10028d9e:	je     0x10028dbe
10028da0:	mov    ecx,DWORD PTR [eax+0x14]
10028da3:	mov    edx,DWORD PTR [eax+0x8]
10028da6:	sub    ebx,edi
10028da8:	mov    DWORD PTR [esp+0x10],ebx
10028dac:	mov    bl,BYTE PTR [esi]
10028dae:	mov    BYTE PTR [ecx+edx*1],bl
10028db1:	mov    ebx,DWORD PTR [esp+0x10]
10028db5:	add    DWORD PTR [eax+0x14],edi
10028db8:	add    esi,edi
10028dba:	test   ebx,ebx
10028dbc:	jne    0x10028da0
10028dbe:	pop    edi
10028dbf:	pop    esi
10028dc0:	pop    ebx
10028dc1:	ret    
10028dc2:	int3   
10028dc3:	int3   
10028dc4:	int3   
10028dc5:	int3   
10028dc6:	int3   
10028dc7:	int3   
10028dc8:	int3   
10028dc9:	int3   
10028dca:	int3   
10028dcb:	int3   
10028dcc:	int3   
10028dcd:	int3   
10028dce:	int3   
10028dcf:	int3   
10028dd0:	sub    esp,0x24
10028dd3:	mov    eax,ds:0x100951fc
10028dd8:	xor    eax,esp
10028dda:	mov    DWORD PTR [esp+0x20],eax
10028dde:	push   esi
10028ddf:	lea    esi,[esp+0x6]
10028de3:	xor    ecx,ecx
10028de5:	mov    eax,0x1
10028dea:	sub    edx,esi
10028dec:	lea    esp,[esp+0x0]
10028df0:	lea    esi,[edx+eax*2]
10028df3:	mov    si,WORD PTR [esp+esi*1+0x4]
10028df8:	add    si,cx
10028dfb:	add    si,si
10028dfe:	movzx  ecx,si
10028e01:	mov    WORD PTR [esp+eax*2+0x4],cx
10028e06:	add    eax,0x1
10028e09:	cmp    eax,0xf
10028e0c:	jle    0x10028df0
10028e0e:	xor    esi,esi
10028e10:	test   ebx,ebx
10028e12:	jl     0x10028e3d
10028e14:	movzx  edx,WORD PTR [edi+esi*4+0x2]
10028e19:	test   edx,edx
10028e1b:	je     0x10028e36
10028e1d:	movzx  eax,WORD PTR [esp+edx*2+0x4]
10028e22:	movzx  ecx,ax
10028e25:	add    eax,0x1
10028e28:	mov    WORD PTR [esp+edx*2+0x4],ax
10028e2d:	call   0x10028ca0
10028e32:	mov    WORD PTR [edi+esi*4],ax
10028e36:	add    esi,0x1
10028e39:	cmp    esi,ebx
10028e3b:	jle    0x10028e14
10028e3d:	mov    ecx,DWORD PTR [esp+0x24]
10028e41:	pop    esi
10028e42:	xor    ecx,esp
10028e44:	call   0x10015b2b
10028e49:	add    esp,0x24
10028e4c:	ret    
10028e4d:	int3   
10028e4e:	int3   
10028e4f:	int3   
10028e50:	sub    esp,0x8
10028e53:	mov    eax,DWORD PTR [esp+0xc]
10028e57:	push   ebx
10028e58:	push   ebp
10028e59:	push   edi
10028e5a:	mov    edi,DWORD PTR [eax]
10028e5c:	mov    eax,DWORD PTR [eax+0x8]
10028e5f:	mov    ecx,DWORD PTR [eax+0xc]
10028e62:	mov    ebp,DWORD PTR [eax]
10028e64:	xor    edx,edx
10028e66:	or     ebx,0xffffffff
10028e69:	xor    eax,eax
10028e6b:	cmp    ecx,edx
10028e6d:	mov    DWORD PTR [esp+0x10],ecx
10028e71:	mov    DWORD PTR [esp+0xc],ebx
10028e75:	mov    DWORD PTR [esi+0x1450],edx
10028e7b:	mov    DWORD PTR [esi+0x1454],0x23d
10028e85:	jle    0x10028ebe
10028e87:	cmp    WORD PTR [edi+eax*4],dx
10028e8b:	je     0x10028eb0
10028e8d:	add    DWORD PTR [esi+0x1450],0x1
10028e94:	mov    ecx,DWORD PTR [esi+0x1450]
10028e9a:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
10028ea1:	mov    DWORD PTR [esp+0xc],eax
10028ea5:	mov    BYTE PTR [eax+esi*1+0x1458],dl
10028eac:	mov    ebx,eax
10028eae:	jmp    0x10028eb5
10028eb0:	mov    WORD PTR [edi+eax*4+0x2],dx
10028eb5:	add    eax,0x1
10028eb8:	cmp    eax,DWORD PTR [esp+0x10]
10028ebc:	jl     0x10028e87
10028ebe:	cmp    DWORD PTR [esi+0x1450],0x2
10028ec5:	jge    0x10028f19
10028ec7:	cmp    ebx,0x2
10028eca:	jge    0x10028ed3
10028ecc:	add    ebx,0x1
10028ecf:	mov    eax,ebx
10028ed1:	jmp    0x10028ed5
10028ed3:	xor    eax,eax
10028ed5:	add    DWORD PTR [esi+0x1450],0x1
10028edc:	mov    ecx,DWORD PTR [esi+0x1450]
10028ee2:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
10028ee9:	mov    WORD PTR [edi+eax*4],0x1
10028eef:	mov    BYTE PTR [esi+eax*1+0x1458],dl
10028ef6:	add    DWORD PTR [esi+0x16a8],0xffffffff
10028efd:	cmp    ebp,edx
10028eff:	je     0x10028f0c
10028f01:	movzx  eax,WORD PTR [ebp+eax*4+0x2]
10028f06:	sub    DWORD PTR [esi+0x16ac],eax
10028f0c:	cmp    DWORD PTR [esi+0x1450],0x2
10028f13:	jl     0x10028ec7
10028f15:	mov    DWORD PTR [esp+0xc],ebx
10028f19:	mov    ecx,DWORD PTR [esp+0x18]
10028f1d:	mov    DWORD PTR [ecx+0x4],ebx
10028f20:	mov    eax,DWORD PTR [esi+0x1450]
10028f26:	cdq    
10028f27:	sub    eax,edx
10028f29:	mov    ebp,eax
10028f2b:	sar    ebp,1
10028f2d:	cmp    ebp,0x1
10028f30:	jl     0x10028f45
10028f32:	push   ebp
10028f33:	mov    eax,esi
10028f35:	call   0x10027c70
10028f3a:	sub    ebp,0x1
10028f3d:	add    esp,0x4
10028f40:	cmp    ebp,0x1
10028f43:	jge    0x10028f32
10028f45:	mov    ebx,DWORD PTR [esp+0x10]
10028f49:	lea    esp,[esp+0x0]
10028f50:	mov    eax,DWORD PTR [esi+0x1450]
10028f56:	mov    edx,DWORD PTR [esi+eax*4+0xb5c]
10028f5d:	mov    ebp,DWORD PTR [esi+0xb60]
10028f63:	add    eax,0xffffffff
10028f66:	mov    DWORD PTR [esi+0x1450],eax
10028f6c:	push   0x1
10028f6e:	mov    eax,esi
10028f70:	mov    DWORD PTR [esi+0xb60],edx
10028f76:	call   0x10027c70
10028f7b:	mov    eax,DWORD PTR [esi+0xb60]
10028f81:	or     edx,0xffffffff
10028f84:	add    DWORD PTR [esi+0x1454],edx
10028f8a:	mov    ecx,DWORD PTR [esi+0x1454]
10028f90:	mov    DWORD PTR [esi+ecx*4+0xb5c],ebp
10028f97:	add    DWORD PTR [esi+0x1454],edx
10028f9d:	mov    ecx,DWORD PTR [esi+0x1454]
10028fa3:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
10028faa:	mov    cx,WORD PTR [edi+eax*4]
10028fae:	add    cx,WORD PTR [edi+ebp*4]
10028fb2:	add    esp,0x4
10028fb5:	mov    WORD PTR [edi+ebx*4],cx
10028fb9:	mov    cl,BYTE PTR [esi+eax*1+0x1458]
10028fc0:	mov    dl,BYTE PTR [esi+ebp*1+0x1458]
10028fc7:	cmp    dl,cl
10028fc9:	jb     0x10028fd0
10028fcb:	movzx  ecx,dl
10028fce:	jmp    0x10028fd3
10028fd0:	movzx  ecx,cl
10028fd3:	add    cl,0x1
10028fd6:	mov    BYTE PTR [esi+ebx*1+0x1458],cl
10028fdd:	movzx  ecx,bx
10028fe0:	mov    WORD PTR [edi+eax*4+0x2],cx
10028fe5:	mov    WORD PTR [edi+ebp*4+0x2],cx
10028fea:	mov    DWORD PTR [esi+0xb60],ebx
10028ff0:	push   0x1
10028ff2:	mov    eax,esi
10028ff4:	add    ebx,0x1
10028ff7:	call   0x10027c70
10028ffc:	add    esp,0x4
10028fff:	cmp    DWORD PTR [esi+0x1450],0x2
10029006:	jge    0x10028f50
1002900c:	add    DWORD PTR [esi+0x1454],0xffffffff
10029013:	mov    eax,DWORD PTR [esi+0x1454]
10029019:	mov    edx,DWORD PTR [esi+0xb60]
1002901f:	mov    ecx,DWORD PTR [esp+0x18]
10029023:	mov    DWORD PTR [esi+eax*4+0xb5c],edx
1002902a:	mov    eax,esi
1002902c:	call   0x10027d40
10029031:	mov    ebx,DWORD PTR [esp+0xc]
10029035:	lea    edx,[esi+0xb3c]
1002903b:	call   0x10028dd0
10029040:	pop    edi
10029041:	pop    ebp
10029042:	pop    ebx
10029043:	add    esp,0x8
10029046:	ret    
10029047:	int3   
10029048:	int3   
10029049:	int3   
1002904a:	int3   
1002904b:	int3   
1002904c:	int3   
1002904d:	int3   
1002904e:	int3   
1002904f:	int3   
10029050:	push   esi
10029051:	mov    esi,eax
10029053:	mov    ecx,DWORD PTR [esi+0xb1c]
10029059:	lea    eax,[esi+0x94]
1002905f:	push   esi
10029060:	call   0x10027f60
10029065:	mov    ecx,DWORD PTR [esi+0xb28]
1002906b:	lea    eax,[esi+0x988]
10029071:	push   esi
10029072:	call   0x10027f60
10029077:	lea    eax,[esi+0xb30]
1002907d:	push   eax
1002907e:	call   0x10028e50
10029083:	add    esp,0xc
10029086:	mov    eax,0x12
1002908b:	jmp    0x10029090
1002908d:	lea    ecx,[ecx+0x0]
10029090:	movzx  ecx,BYTE PTR [eax+0x1007fb2c]
10029097:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
100290a0:	jne    0x1002910d
100290a2:	movzx  edx,BYTE PTR [eax+0x1007fb2b]
100290a9:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
100290b2:	jne    0x100290ec
100290b4:	movzx  ecx,BYTE PTR [eax+0x1007fb2a]
100290bb:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
100290c4:	jne    0x100290fb
100290c6:	movzx  edx,BYTE PTR [eax+0x1007fb29]
100290cd:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
100290d6:	jne    0x1002910a
100290d8:	sub    eax,0x4
100290db:	cmp    eax,0x3
100290de:	jge    0x10029090
100290e0:	lea    ecx,[eax+eax*2+0x11]
100290e4:	add    DWORD PTR [esi+0x16a8],ecx
100290ea:	pop    esi
100290eb:	ret    
100290ec:	sub    eax,0x1
100290ef:	lea    ecx,[eax+eax*2+0x11]
100290f3:	add    DWORD PTR [esi+0x16a8],ecx
100290f9:	pop    esi
100290fa:	ret    
100290fb:	sub    eax,0x2
100290fe:	lea    ecx,[eax+eax*2+0x11]
10029102:	add    DWORD PTR [esi+0x16a8],ecx
10029108:	pop    esi
10029109:	ret    
1002910a:	sub    eax,0x3
1002910d:	lea    ecx,[eax+eax*2+0x11]
10029111:	add    DWORD PTR [esi+0x16a8],ecx
10029117:	pop    esi
10029118:	ret    
10029119:	int3   
1002911a:	int3   
1002911b:	int3   
1002911c:	int3   
1002911d:	int3   
1002911e:	int3   
1002911f:	int3   
10029120:	mov    eax,DWORD PTR [esp+0x4]
10029124:	mov    ecx,DWORD PTR [eax+0x16bc]
1002912a:	cmp    ecx,0xd
1002912d:	jle    0x10029198
1002912f:	push   ebx
10029130:	push   esi
10029131:	mov    esi,DWORD PTR [esp+0x18]
10029135:	mov    edx,esi
10029137:	shl    edx,cl
10029139:	mov    ecx,DWORD PTR [eax+0x8]
1002913c:	or     WORD PTR [eax+0x16b8],dx
10029143:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002914a:	mov    edx,DWORD PTR [eax+0x14]
1002914d:	mov    BYTE PTR [ecx+edx*1],bl
10029150:	movzx  ebx,BYTE PTR [eax+0x16b9]
10029157:	add    DWORD PTR [eax+0x14],0x1
1002915b:	mov    ecx,DWORD PTR [eax+0x14]
1002915e:	mov    edx,DWORD PTR [eax+0x8]
10029161:	mov    BYTE PTR [ecx+edx*1],bl
10029164:	mov    edx,DWORD PTR [eax+0x16bc]
1002916a:	add    DWORD PTR [eax+0x14],0x1
1002916e:	mov    cl,0x10
10029170:	sub    cl,dl
10029172:	shr    si,cl
10029175:	mov    ecx,DWORD PTR [esp+0x14]
10029179:	add    edx,0xfffffff3
1002917c:	mov    DWORD PTR [eax+0x16bc],edx
10029182:	mov    edx,DWORD PTR [esp+0x10]
10029186:	mov    WORD PTR [eax+0x16b8],si
1002918d:	pop    esi
1002918e:	pop    ebx
1002918f:	push   0x1
10029191:	call   0x10028d40
10029196:	pop    ecx
10029197:	ret    
10029198:	mov    edx,DWORD PTR [esp+0x10]
1002919c:	shl    edx,cl
1002919e:	add    ecx,0x3
100291a1:	mov    DWORD PTR [eax+0x16bc],ecx
100291a7:	mov    ecx,DWORD PTR [esp+0xc]
100291ab:	or     WORD PTR [eax+0x16b8],dx
100291b2:	mov    edx,DWORD PTR [esp+0x8]
100291b6:	push   0x1
100291b8:	call   0x10028d40
100291bd:	pop    ecx
100291be:	ret    
100291bf:	int3   
100291c0:	push   ecx
100291c1:	push   ebx
100291c2:	mov    ebx,DWORD PTR [esp+0x14]
100291c6:	push   esi
100291c7:	mov    esi,DWORD PTR [esp+0x10]
100291cb:	cmp    DWORD PTR [esi+0x84],0x0
100291d2:	push   edi
100291d3:	mov    DWORD PTR [esp+0xc],0x0
100291db:	jle    0x10029234
100291dd:	test   ebx,ebx
100291df:	jbe    0x100291f0
100291e1:	mov    eax,DWORD PTR [esi]
100291e3:	cmp    DWORD PTR [eax+0x2c],0x2
100291e7:	jne    0x100291f0
100291e9:	mov    edx,esi
100291eb:	call   0x10028bd0
100291f0:	lea    ecx,[esi+0xb18]
100291f6:	push   ecx
100291f7:	call   0x10028e50
100291fc:	lea    edx,[esi+0xb24]
10029202:	push   edx
10029203:	call   0x10028e50
10029208:	add    esp,0x8
1002920b:	mov    eax,esi
1002920d:	call   0x10029050
10029212:	mov    edx,DWORD PTR [esi+0x16a8]
10029218:	mov    ecx,DWORD PTR [esi+0x16ac]
1002921e:	add    edx,0xa
10029221:	add    ecx,0xa
10029224:	shr    edx,0x3
10029227:	shr    ecx,0x3
1002922a:	cmp    ecx,edx
1002922c:	mov    DWORD PTR [esp+0xc],eax
10029230:	ja     0x10029239
10029232:	jmp    0x10029237
10029234:	lea    ecx,[ebx+0x5]
10029237:	mov    edx,ecx
10029239:	lea    eax,[ebx+0x4]
1002923c:	cmp    eax,edx
1002923e:	ja     0x1002925d
10029240:	mov    eax,DWORD PTR [esp+0x18]
10029244:	test   eax,eax
10029246:	je     0x1002925d
10029248:	mov    edi,DWORD PTR [esp+0x20]
1002924c:	push   edi
1002924d:	push   ebx
1002924e:	push   eax
1002924f:	push   esi
10029250:	call   0x10029120
10029255:	add    esp,0x10
10029258:	jmp    0x100293b2
1002925d:	cmp    DWORD PTR [esi+0x88],0x4
10029264:	je     0x10029328
1002926a:	cmp    ecx,edx
1002926c:	je     0x10029328
10029272:	mov    ecx,DWORD PTR [esi+0x16bc]
10029278:	cmp    ecx,0xd
1002927b:	mov    edi,DWORD PTR [esp+0x20]
1002927f:	lea    edx,[edi+0x4]
10029282:	jle    0x100292d6
10029284:	mov    eax,edx
10029286:	shl    eax,cl
10029288:	mov    ecx,DWORD PTR [esi+0x8]
1002928b:	or     WORD PTR [esi+0x16b8],ax
10029292:	movzx  ebx,BYTE PTR [esi+0x16b8]
10029299:	mov    eax,DWORD PTR [esi+0x14]
1002929c:	mov    BYTE PTR [ecx+eax*1],bl
1002929f:	add    DWORD PTR [esi+0x14],0x1
100292a3:	movzx  ebx,BYTE PTR [esi+0x16b9]
100292aa:	mov    ecx,DWORD PTR [esi+0x14]
100292ad:	mov    eax,DWORD PTR [esi+0x8]
100292b0:	mov    BYTE PTR [ecx+eax*1],bl
100292b3:	mov    ebx,DWORD PTR [esi+0x16bc]
100292b9:	add    DWORD PTR [esi+0x14],0x1
100292bd:	mov    cl,0x10
100292bf:	sub    cl,bl
100292c1:	shr    dx,cl
100292c4:	add    ebx,0xfffffff3
100292c7:	mov    DWORD PTR [esi+0x16bc],ebx
100292cd:	mov    WORD PTR [esi+0x16b8],dx
100292d4:	jmp    0x100292e8
100292d6:	shl    edx,cl
100292d8:	or     WORD PTR [esi+0x16b8],dx
100292df:	add    ecx,0x3
100292e2:	mov    DWORD PTR [esi+0x16bc],ecx
100292e8:	mov    eax,DWORD PTR [esp+0xc]
100292ec:	mov    ecx,DWORD PTR [esi+0xb28]
100292f2:	mov    edx,DWORD PTR [esi+0xb1c]
100292f8:	add    eax,0x1
100292fb:	push   eax
100292fc:	add    ecx,0x1
100292ff:	push   ecx
10029300:	add    edx,0x1
10029303:	push   edx
10029304:	mov    eax,esi
10029306:	call   0x10028560
1002930b:	lea    eax,[esi+0x988]
10029311:	push   eax
10029312:	lea    ecx,[esi+0x94]
10029318:	push   ecx
10029319:	mov    eax,esi
1002931b:	call   0x100287c0
10029320:	add    esp,0x14
10029323:	jmp    0x100293b2
10029328:	mov    ecx,DWORD PTR [esi+0x16bc]
1002932e:	cmp    ecx,0xd
10029331:	mov    edi,DWORD PTR [esp+0x20]
10029335:	lea    eax,[edi+0x2]
10029338:	jle    0x1002938c
1002933a:	mov    edx,eax
1002933c:	shl    edx,cl
1002933e:	mov    ecx,DWORD PTR [esi+0x8]
10029341:	or     WORD PTR [esi+0x16b8],dx
10029348:	movzx  ebx,BYTE PTR [esi+0x16b8]
1002934f:	mov    edx,DWORD PTR [esi+0x14]
10029352:	mov    BYTE PTR [ecx+edx*1],bl
10029355:	add    DWORD PTR [esi+0x14],0x1
10029359:	movzx  ebx,BYTE PTR [esi+0x16b9]
10029360:	mov    ecx,DWORD PTR [esi+0x14]
10029363:	mov    edx,DWORD PTR [esi+0x8]
10029366:	mov    BYTE PTR [ecx+edx*1],bl
10029369:	mov    edx,DWORD PTR [esi+0x16bc]
1002936f:	add    DWORD PTR [esi+0x14],0x1
10029373:	mov    cl,0x10
10029375:	sub    cl,dl
10029377:	shr    ax,cl
1002937a:	add    edx,0xfffffff3
1002937d:	mov    DWORD PTR [esi+0x16bc],edx
10029383:	mov    WORD PTR [esi+0x16b8],ax
1002938a:	jmp    0x1002939e
1002938c:	shl    eax,cl
1002938e:	or     WORD PTR [esi+0x16b8],ax
10029395:	add    ecx,0x3
10029398:	mov    DWORD PTR [esi+0x16bc],ecx
1002939e:	push   0x10080088
100293a3:	push   0x1007fc08
100293a8:	mov    eax,esi
100293aa:	call   0x100287c0
100293af:	add    esp,0x8
100293b2:	mov    edx,esi
100293b4:	call   0x10027c00
100293b9:	test   edi,edi
100293bb:	pop    edi
100293bc:	je     0x100293ca
100293be:	mov    eax,esi
100293c0:	pop    esi
100293c1:	pop    ebx
100293c2:	add    esp,0x4
100293c5:	jmp    0x10028cc0
100293ca:	pop    esi
100293cb:	pop    ebx
100293cc:	pop    ecx
100293cd:	ret    
100293ce:	int3   
100293cf:	int3   
100293d0:	push   esi
100293d1:	mov    esi,edx
100293d3:	test   esi,esi
100293d5:	not    eax
100293d7:	je     0x10029402
100293d9:	lea    esp,[esp+0x0]
100293e0:	test   cl,0x3
100293e3:	je     0x10029402
100293e5:	movzx  edx,BYTE PTR [ecx]
100293e8:	xor    edx,eax
100293ea:	and    edx,0xff
100293f0:	shr    eax,0x8
100293f3:	xor    eax,DWORD PTR [edx*4+0x100804f0]
100293fa:	add    ecx,0x1
100293fd:	sub    esi,0x1
10029400:	jne    0x100293e0
10029402:	cmp    esi,0x20
10029405:	push   ebx
10029406:	push   edi
10029407:	jb     0x100295ec
1002940d:	mov    edi,esi
1002940f:	shr    edi,0x5
10029412:	xor    eax,DWORD PTR [ecx]
10029414:	add    ecx,0x4
10029417:	mov    edx,eax
10029419:	shr    edx,0x10
1002941c:	movzx  ebx,ah
1002941f:	and    edx,0xff
10029425:	mov    edx,DWORD PTR [edx*4+0x100808f0]
1002942c:	xor    edx,DWORD PTR [ebx*4+0x10080cf0]
10029433:	mov    ebx,eax
10029435:	and    eax,0xff
1002943a:	shr    ebx,0x18
1002943d:	xor    edx,DWORD PTR [ebx*4+0x100804f0]
10029444:	add    ecx,0x4
10029447:	xor    edx,DWORD PTR [eax*4+0x100810f0]
1002944e:	add    ecx,0x4
10029451:	xor    edx,DWORD PTR [ecx-0x8]
10029454:	add    ecx,0x4
10029457:	mov    eax,edx
10029459:	shr    eax,0x10
1002945c:	and    eax,0xff
10029461:	mov    eax,DWORD PTR [eax*4+0x100808f0]
10029468:	movzx  ebx,dh
1002946b:	xor    eax,DWORD PTR [ebx*4+0x10080cf0]
10029472:	mov    ebx,edx
10029474:	and    edx,0xff
1002947a:	shr    ebx,0x18
1002947d:	xor    eax,DWORD PTR [ebx*4+0x100804f0]
10029484:	add    ecx,0x4
10029487:	xor    eax,DWORD PTR [edx*4+0x100810f0]
1002948e:	add    ecx,0x4
10029491:	xor    eax,DWORD PTR [ecx-0x10]
10029494:	mov    edx,eax
10029496:	shr    edx,0x10
10029499:	movzx  ebx,ah
1002949c:	and    edx,0xff
100294a2:	mov    edx,DWORD PTR [edx*4+0x100808f0]
100294a9:	xor    edx,DWORD PTR [ebx*4+0x10080cf0]
100294b0:	mov    ebx,eax
100294b2:	and    eax,0xff
100294b7:	shr    ebx,0x18
100294ba:	xor    edx,DWORD PTR [ebx*4+0x100804f0]
100294c1:	xor    edx,DWORD PTR [eax*4+0x100810f0]
100294c8:	xor    edx,DWORD PTR [ecx-0xc]
100294cb:	mov    eax,edx
100294cd:	shr    eax,0x10
100294d0:	and    eax,0xff
100294d5:	mov    eax,DWORD PTR [eax*4+0x100808f0]
100294dc:	movzx  ebx,dh
100294df:	xor    eax,DWORD PTR [ebx*4+0x10080cf0]
100294e6:	mov    ebx,edx
100294e8:	and    edx,0xff
100294ee:	shr    ebx,0x18
100294f1:	xor    eax,DWORD PTR [ebx*4+0x100804f0]
100294f8:	xor    eax,DWORD PTR [edx*4+0x100810f0]
100294ff:	xor    eax,DWORD PTR [ecx-0x8]
10029502:	mov    edx,eax
10029504:	shr    edx,0x10
10029507:	movzx  ebx,ah
1002950a:	and    edx,0xff
10029510:	mov    edx,DWORD PTR [edx*4+0x100808f0]
10029517:	xor    edx,DWORD PTR [ebx*4+0x10080cf0]
1002951e:	mov    ebx,eax
10029520:	and    eax,0xff
10029525:	shr    ebx,0x18
10029528:	xor    edx,DWORD PTR [ebx*4+0x100804f0]
1002952f:	xor    edx,DWORD PTR [eax*4+0x100810f0]
10029536:	xor    edx,DWORD PTR [ecx-0x4]
10029539:	mov    eax,edx
1002953b:	shr    eax,0x10
1002953e:	and    eax,0xff
10029543:	mov    eax,DWORD PTR [eax*4+0x100808f0]
1002954a:	movzx  ebx,dh
1002954d:	xor    eax,DWORD PTR [ebx*4+0x10080cf0]
10029554:	mov    ebx,edx
10029556:	shr    ebx,0x18
10029559:	xor    eax,DWORD PTR [ebx*4+0x100804f0]
10029560:	and    edx,0xff
10029566:	xor    eax,DWORD PTR [edx*4+0x100810f0]
1002956d:	xor    eax,DWORD PTR [ecx]
1002956f:	add    ecx,0x4
10029572:	mov    edx,eax
10029574:	shr    edx,0x10
10029577:	movzx  ebx,ah
1002957a:	and    edx,0xff
10029580:	mov    edx,DWORD PTR [edx*4+0x100808f0]
10029587:	xor    edx,DWORD PTR [ebx*4+0x10080cf0]
1002958e:	mov    ebx,eax
10029590:	and    eax,0xff
10029595:	shr    ebx,0x18
10029598:	xor    edx,DWORD PTR [ebx*4+0x100804f0]
1002959f:	add    ecx,0x4
100295a2:	xor    edx,DWORD PTR [eax*4+0x100810f0]
100295a9:	sub    esi,0x20
100295ac:	xor    edx,DWORD PTR [ecx-0x4]
100295af:	mov    eax,edx
100295b1:	shr    eax,0x10
100295b4:	and    eax,0xff
100295b9:	mov    eax,DWORD PTR [eax*4+0x100808f0]
100295c0:	movzx  ebx,dh
100295c3:	xor    eax,DWORD PTR [ebx*4+0x10080cf0]
100295ca:	mov    ebx,edx
100295cc:	shr    ebx,0x18
100295cf:	xor    eax,DWORD PTR [ebx*4+0x100804f0]
100295d6:	and    edx,0xff
100295dc:	xor    eax,DWORD PTR [edx*4+0x100810f0]
100295e3:	sub    edi,0x1
100295e6:	jne    0x10029412
100295ec:	cmp    esi,0x4
100295ef:	jb     0x10029639
100295f1:	mov    edx,esi
100295f3:	shr    edx,0x2
100295f6:	xor    eax,DWORD PTR [ecx]
100295f8:	add    ecx,0x4
100295fb:	mov    edi,eax
100295fd:	shr    edi,0x10
10029600:	and    edi,0xff
10029606:	mov    edi,DWORD PTR [edi*4+0x100808f0]
1002960d:	movzx  ebx,ah
10029610:	xor    edi,DWORD PTR [ebx*4+0x10080cf0]
10029617:	mov    ebx,eax
10029619:	shr    ebx,0x18
1002961c:	xor    edi,DWORD PTR [ebx*4+0x100804f0]
10029623:	and    eax,0xff
10029628:	xor    edi,DWORD PTR [eax*4+0x100810f0]
1002962f:	sub    esi,0x4
10029632:	sub    edx,0x1
10029635:	mov    eax,edi
10029637:	jne    0x100295f6
10029639:	test   esi,esi
1002963b:	pop    edi
1002963c:	pop    ebx
1002963d:	je     0x1002965d
1002963f:	nop
10029640:	movzx  edx,BYTE PTR [ecx]
10029643:	xor    edx,eax
10029645:	and    edx,0xff
1002964b:	shr    eax,0x8
1002964e:	xor    eax,DWORD PTR [edx*4+0x100804f0]
10029655:	add    ecx,0x1
10029658:	sub    esi,0x1
1002965b:	jne    0x10029640
1002965d:	not    eax
1002965f:	pop    esi
10029660:	ret    
10029661:	int3   
10029662:	int3   
10029663:	int3   
10029664:	int3   
10029665:	int3   
10029666:	int3   
10029667:	int3   
10029668:	int3   
10029669:	int3   
1002966a:	int3   
1002966b:	int3   
1002966c:	int3   
1002966d:	int3   
1002966e:	int3   
1002966f:	int3   
10029670:	mov    ecx,DWORD PTR [esp+0x8]
10029674:	test   ecx,ecx
10029676:	jne    0x1002967b
10029678:	xor    eax,eax
1002967a:	ret    
1002967b:	mov    edx,DWORD PTR [esp+0xc]
1002967f:	mov    eax,DWORD PTR [esp+0x4]
10029683:	jmp    0x100293d0
10029688:	int3   
10029689:	int3   
1002968a:	int3   
1002968b:	int3   
1002968c:	int3   
1002968d:	int3   
1002968e:	int3   
1002968f:	int3   
10029690:	mov    eax,DWORD PTR [esp+0x8]
10029694:	imul   eax,DWORD PTR [esp+0xc]
10029699:	push   eax
1002969a:	call   0x10016c62
1002969f:	add    esp,0x4
100296a2:	ret    
100296a3:	int3   
100296a4:	int3   
100296a5:	int3   
100296a6:	int3   
100296a7:	int3   
100296a8:	int3   
100296a9:	int3   
100296aa:	int3   
100296ab:	int3   
100296ac:	int3   
100296ad:	int3   
100296ae:	int3   
100296af:	int3   
100296b0:	mov    eax,DWORD PTR [esp+0x8]
100296b4:	push   eax
100296b5:	call   0x10016b85
100296ba:	pop    ecx
100296bb:	ret    
100296bc:	int3   
100296bd:	int3   
100296be:	int3   
100296bf:	int3   
100296c0:	sub    esp,0x3c
100296c3:	push   ebx
100296c4:	push   ebp
100296c5:	push   esi
100296c6:	push   edi
100296c7:	mov    ecx,DWORD PTR [esp+0x50]
100296cb:	mov    eax,DWORD PTR [ecx+0x1c]
100296ce:	mov    edx,DWORD PTR [ecx+0x4]
100296d1:	mov    ebx,DWORD PTR [eax+0x38]
100296d4:	mov    ebp,DWORD PTR [ecx]
100296d6:	sub    ebp,0x1
100296d9:	lea    edx,[edx+ebp*1-0x5]
100296dd:	mov    DWORD PTR [esp+0x14],edx
100296e1:	mov    esi,DWORD PTR [ecx+0xc]
100296e4:	mov    ecx,DWORD PTR [ecx+0x10]
100296e7:	mov    edx,ecx
100296e9:	sub    edx,DWORD PTR [esp+0x54]
100296ed:	sub    esi,0x1
100296f0:	add    edx,esi
100296f2:	lea    ecx,[ecx+esi*1-0x101]
100296f9:	mov    DWORD PTR [esp+0x38],edx
100296fd:	mov    edx,DWORD PTR [eax+0x28]
10029700:	mov    DWORD PTR [esp+0x2c],ecx
10029704:	mov    ecx,DWORD PTR [eax+0x2c]
10029707:	mov    DWORD PTR [esp+0x28],edx
1002970b:	mov    edx,DWORD PTR [eax+0x30]
1002970e:	mov    DWORD PTR [esp+0x3c],ecx
10029712:	mov    ecx,DWORD PTR [eax+0x34]
10029715:	mov    DWORD PTR [esp+0x44],edx
10029719:	mov    edx,DWORD PTR [eax+0x4c]
1002971c:	mov    DWORD PTR [esp+0x40],ecx
10029720:	mov    ecx,DWORD PTR [eax+0x50]
10029723:	mov    DWORD PTR [esp+0x20],edx
10029727:	mov    DWORD PTR [esp+0x24],ecx
1002972b:	mov    ecx,DWORD PTR [eax+0x54]
1002972e:	mov    edx,0x1
10029733:	shl    edx,cl
10029735:	mov    ecx,DWORD PTR [eax+0x58]
10029738:	mov    DWORD PTR [esp+0x18],eax
1002973c:	mov    edi,DWORD PTR [eax+0x3c]
1002973f:	mov    DWORD PTR [esp+0x54],0x1
10029747:	mov    eax,DWORD PTR [esp+0x54]
1002974b:	shl    eax,cl
1002974d:	sub    edx,0x1
10029750:	mov    DWORD PTR [esp+0x10],ebp
10029754:	mov    DWORD PTR [esp+0x48],edx
10029758:	sub    eax,0x1
1002975b:	mov    DWORD PTR [esp+0x30],eax
1002975f:	nop
10029760:	cmp    edi,0xf
10029763:	jae    0x10029789
10029765:	movzx  eax,BYTE PTR [ebp+0x1]
10029769:	add    ebp,0x1
1002976c:	mov    ecx,edi
1002976e:	shl    eax,cl
10029770:	add    ebp,0x1
10029773:	add    edi,0x8
10029776:	mov    ecx,edi
10029778:	add    ebx,eax
1002977a:	movzx  eax,BYTE PTR [ebp+0x0]
1002977e:	shl    eax,cl
10029780:	mov    DWORD PTR [esp+0x10],ebp
10029784:	add    ebx,eax
10029786:	add    edi,0x8
10029789:	mov    ecx,DWORD PTR [esp+0x20]
1002978d:	and    edx,ebx
1002978f:	mov    eax,DWORD PTR [ecx+edx*4]
10029792:	mov    edx,eax
10029794:	shr    edx,0x8
10029797:	movzx  ecx,dl
1002979a:	movzx  edx,al
1002979d:	shr    ebx,cl
1002979f:	sub    edi,ecx
100297a1:	test   edx,edx
100297a3:	je     0x100297e8
100297a5:	test   dl,0x10
100297a8:	jne    0x100297f5
100297aa:	test   dl,0x40
100297ad:	jne    0x10029afa
100297b3:	mov    ecx,0x1
100297b8:	mov    DWORD PTR [esp+0x54],ecx
100297bc:	mov    ecx,edx
100297be:	mov    edx,DWORD PTR [esp+0x54]
100297c2:	shl    edx,cl
100297c4:	shr    eax,0x10
100297c7:	sub    edx,0x1
100297ca:	and    edx,ebx
100297cc:	add    edx,eax
100297ce:	mov    eax,DWORD PTR [esp+0x20]
100297d2:	mov    eax,DWORD PTR [eax+edx*4]
100297d5:	mov    ecx,eax
100297d7:	shr    ecx,0x8
100297da:	movzx  ecx,cl
100297dd:	movzx  edx,al
100297e0:	shr    ebx,cl
100297e2:	sub    edi,ecx
100297e4:	test   edx,edx
100297e6:	jne    0x100297a5
100297e8:	add    esi,0x1
100297eb:	shr    eax,0x10
100297ee:	mov    BYTE PTR [esi],al
100297f0:	jmp    0x10029a55
100297f5:	shr    eax,0x10
100297f8:	and    edx,0xf
100297fb:	mov    DWORD PTR [esp+0x54],eax
100297ff:	je     0x1002982f
10029801:	cmp    edi,edx
10029803:	jae    0x10029819
10029805:	movzx  eax,BYTE PTR [ebp+0x1]
10029809:	add    ebp,0x1
1002980c:	mov    ecx,edi
1002980e:	shl    eax,cl
10029810:	mov    DWORD PTR [esp+0x10],ebp
10029814:	add    ebx,eax
10029816:	add    edi,0x8
10029819:	mov    ecx,edx
1002981b:	mov    eax,0x1
10029820:	shl    eax,cl
10029822:	sub    eax,0x1
10029825:	and    eax,ebx
10029827:	add    DWORD PTR [esp+0x54],eax
1002982b:	shr    ebx,cl
1002982d:	sub    edi,edx
1002982f:	cmp    edi,0xf
10029832:	jae    0x10029858
10029834:	movzx  edx,BYTE PTR [ebp+0x1]
10029838:	add    ebp,0x1
1002983b:	movzx  eax,BYTE PTR [ebp+0x1]
1002983f:	mov    ecx,edi
10029841:	add    ebp,0x1
10029844:	shl    edx,cl
10029846:	add    edi,0x8
10029849:	mov    ecx,edi
1002984b:	shl    eax,cl
1002984d:	add    ebx,edx
1002984f:	mov    DWORD PTR [esp+0x10],ebp
10029853:	add    ebx,eax
10029855:	add    edi,0x8
10029858:	mov    ecx,DWORD PTR [esp+0x30]
1002985c:	mov    edx,DWORD PTR [esp+0x24]
10029860:	and    ecx,ebx
10029862:	mov    edx,DWORD PTR [edx+ecx*4]
10029865:	mov    eax,edx
10029867:	shr    eax,0x8
1002986a:	movzx  ecx,al
1002986d:	movzx  eax,dl
10029870:	shr    ebx,cl
10029872:	sub    edi,ecx
10029874:	test   al,0x10
10029876:	mov    DWORD PTR [esp+0x1c],edx
1002987a:	jne    0x100298bb
1002987c:	lea    esp,[esp+0x0]
10029880:	test   al,0x40
10029882:	jne    0x10029aed
10029888:	mov    ecx,eax
1002988a:	movzx  eax,WORD PTR [esp+0x1e]
1002988f:	mov    edx,0x1
10029894:	shl    edx,cl
10029896:	mov    ecx,DWORD PTR [esp+0x24]
1002989a:	sub    edx,0x1
1002989d:	and    edx,ebx
1002989f:	add    edx,eax
100298a1:	mov    edx,DWORD PTR [ecx+edx*4]
100298a4:	mov    eax,edx
100298a6:	shr    eax,0x8
100298a9:	movzx  ecx,al
100298ac:	movzx  eax,dl
100298af:	shr    ebx,cl
100298b1:	sub    edi,ecx
100298b3:	test   al,0x10
100298b5:	mov    DWORD PTR [esp+0x1c],edx
100298b9:	je     0x10029880
100298bb:	shr    edx,0x10
100298be:	and    eax,0xf
100298c1:	cmp    edi,eax
100298c3:	mov    DWORD PTR [esp+0x1c],edx
100298c7:	jae    0x100298f5
100298c9:	movzx  edx,BYTE PTR [ebp+0x1]
100298cd:	add    ebp,0x1
100298d0:	mov    ecx,edi
100298d2:	shl    edx,cl
100298d4:	add    edi,0x8
100298d7:	mov    DWORD PTR [esp+0x10],ebp
100298db:	add    ebx,edx
100298dd:	cmp    edi,eax
100298df:	jae    0x100298f5
100298e1:	movzx  edx,BYTE PTR [ebp+0x1]
100298e5:	add    ebp,0x1
100298e8:	mov    ecx,edi
100298ea:	shl    edx,cl
100298ec:	mov    DWORD PTR [esp+0x10],ebp
100298f0:	add    ebx,edx
100298f2:	add    edi,0x8
100298f5:	mov    ecx,0x1
100298fa:	mov    edx,ecx
100298fc:	mov    ecx,eax
100298fe:	shl    edx,cl
10029900:	sub    edi,eax
10029902:	sub    edx,0x1
10029905:	and    edx,ebx
10029907:	mov    ecx,edx
10029909:	mov    edx,DWORD PTR [esp+0x1c]
1002990d:	add    edx,ecx
1002990f:	mov    ecx,eax
10029911:	mov    eax,esi
10029913:	sub    eax,DWORD PTR [esp+0x38]
10029917:	shr    ebx,cl
10029919:	cmp    edx,eax
1002991b:	mov    DWORD PTR [esp+0x1c],edx
1002991f:	jbe    0x10029a74
10029925:	mov    ebp,edx
10029927:	sub    ebp,eax
10029929:	cmp    ebp,DWORD PTR [esp+0x3c]
1002992d:	ja     0x10029ad2
10029933:	mov    ecx,DWORD PTR [esp+0x40]
10029937:	mov    eax,DWORD PTR [esp+0x44]
1002993b:	add    ecx,0xffffffff
1002993e:	test   eax,eax
10029940:	mov    DWORD PTR [esp+0x34],ecx
10029944:	jne    0x10029972
10029946:	mov    eax,DWORD PTR [esp+0x28]
1002994a:	sub    eax,ebp
1002994c:	add    ecx,eax
1002994e:	cmp    ebp,DWORD PTR [esp+0x54]
10029952:	jae    0x100299ea
10029958:	sub    DWORD PTR [esp+0x54],ebp
1002995c:	lea    esp,[esp+0x0]
10029960:	mov    al,BYTE PTR [ecx+0x1]
10029963:	add    ecx,0x1
10029966:	add    esi,0x1
10029969:	sub    ebp,0x1
1002996c:	mov    BYTE PTR [esi],al
1002996e:	jne    0x10029960
10029970:	jmp    0x100299e6
10029972:	cmp    eax,ebp
10029974:	jae    0x100299c8
10029976:	mov    edx,eax
10029978:	sub    edx,ebp
1002997a:	add    edx,DWORD PTR [esp+0x28]
1002997e:	sub    ebp,eax
10029980:	add    ecx,edx
10029982:	cmp    ebp,DWORD PTR [esp+0x54]
10029986:	jae    0x100299ea
10029988:	sub    DWORD PTR [esp+0x54],ebp
1002998c:	lea    esp,[esp+0x0]
10029990:	mov    dl,BYTE PTR [ecx+0x1]
10029993:	add    ecx,0x1
10029996:	add    esi,0x1
10029999:	sub    ebp,0x1
1002999c:	mov    BYTE PTR [esi],dl
1002999e:	jne    0x10029990
100299a0:	cmp    eax,DWORD PTR [esp+0x54]
100299a4:	mov    ecx,DWORD PTR [esp+0x34]
100299a8:	jae    0x100299ea
100299aa:	sub    DWORD PTR [esp+0x54],eax
100299ae:	mov    ebp,eax
100299b0:	mov    al,BYTE PTR [ecx+0x1]
100299b3:	add    ecx,0x1
100299b6:	add    esi,0x1
100299b9:	sub    ebp,0x1
100299bc:	mov    BYTE PTR [esi],al
100299be:	jne    0x100299b0
100299c0:	mov    ecx,esi
100299c2:	sub    ecx,DWORD PTR [esp+0x1c]
100299c6:	jmp    0x100299ea
100299c8:	sub    eax,ebp
100299ca:	add    ecx,eax
100299cc:	cmp    ebp,DWORD PTR [esp+0x54]
100299d0:	jae    0x100299ea
100299d2:	sub    DWORD PTR [esp+0x54],ebp
100299d6:	mov    al,BYTE PTR [ecx+0x1]
100299d9:	add    ecx,0x1
100299dc:	add    esi,0x1
100299df:	sub    ebp,0x1
100299e2:	mov    BYTE PTR [esi],al
100299e4:	jne    0x100299d6
100299e6:	mov    ecx,esi
100299e8:	sub    ecx,edx
100299ea:	mov    eax,DWORD PTR [esp+0x54]
100299ee:	cmp    eax,0x2
100299f1:	jbe    0x10029a31
100299f3:	lea    edx,[eax-0x3]
100299f6:	mov    eax,0xaaaaaaab
100299fb:	mul    edx
100299fd:	mov    ebp,edx
100299ff:	shr    ebp,1
10029a01:	add    ebp,0x1
10029a04:	movzx  eax,BYTE PTR [ecx+0x1]
10029a08:	sub    DWORD PTR [esp+0x54],0x3
10029a0d:	add    ecx,0x1
10029a10:	add    esi,0x1
10029a13:	mov    BYTE PTR [esi],al
10029a15:	mov    dl,BYTE PTR [ecx+0x1]
10029a18:	add    ecx,0x1
10029a1b:	add    esi,0x1
10029a1e:	mov    BYTE PTR [esi],dl
10029a20:	movzx  eax,BYTE PTR [ecx+0x1]
10029a24:	add    ecx,0x1
10029a27:	add    esi,0x1
10029a2a:	sub    ebp,0x1
10029a2d:	mov    BYTE PTR [esi],al
10029a2f:	jne    0x10029a04
10029a31:	mov    ebp,DWORD PTR [esp+0x54]
10029a35:	test   ebp,ebp
10029a37:	je     0x10029a51
10029a39:	mov    dl,BYTE PTR [ecx+0x1]
10029a3c:	add    ecx,0x1
10029a3f:	add    esi,0x1
10029a42:	cmp    ebp,0x1
10029a45:	mov    BYTE PTR [esi],dl
10029a47:	jbe    0x10029a51
10029a49:	mov    al,BYTE PTR [ecx+0x1]
10029a4c:	add    esi,0x1
10029a4f:	mov    BYTE PTR [esi],al
10029a51:	mov    ebp,DWORD PTR [esp+0x10]
10029a55:	mov    edx,DWORD PTR [esp+0x14]
10029a59:	cmp    ebp,edx
10029a5b:	jae    0x10029b24
10029a61:	cmp    esi,DWORD PTR [esp+0x2c]
10029a65:	jae    0x10029b24
10029a6b:	mov    edx,DWORD PTR [esp+0x48]
10029a6f:	jmp    0x10029760
10029a74:	mov    eax,esi
10029a76:	sub    eax,edx
10029a78:	jmp    0x10029a80
10029a7a:	lea    ebx,[ebx+0x0]
10029a80:	movzx  ecx,BYTE PTR [eax+0x1]
10029a84:	add    eax,0x1
10029a87:	mov    BYTE PTR [esi+0x1],cl
10029a8a:	mov    dl,BYTE PTR [eax+0x1]
10029a8d:	add    esi,0x1
10029a90:	add    eax,0x1
10029a93:	add    esi,0x1
10029a96:	mov    BYTE PTR [esi],dl
10029a98:	movzx  ecx,BYTE PTR [eax+0x1]
10029a9c:	add    eax,0x1
10029a9f:	add    esi,0x1
10029aa2:	mov    BYTE PTR [esi],cl
10029aa4:	mov    ecx,DWORD PTR [esp+0x54]
10029aa8:	sub    ecx,0x3
10029aab:	cmp    ecx,0x2
10029aae:	mov    DWORD PTR [esp+0x54],ecx
10029ab2:	ja     0x10029a80
10029ab4:	test   ecx,ecx
10029ab6:	je     0x10029a55
10029ab8:	mov    dl,BYTE PTR [eax+0x1]
10029abb:	add    eax,0x1
10029abe:	add    esi,0x1
10029ac1:	cmp    ecx,0x1
10029ac4:	mov    BYTE PTR [esi],dl
10029ac6:	jbe    0x10029a55
10029ac8:	mov    al,BYTE PTR [eax+0x1]
10029acb:	add    esi,0x1
10029ace:	mov    BYTE PTR [esi],al
10029ad0:	jmp    0x10029a55
10029ad2:	mov    ecx,DWORD PTR [esp+0x50]
10029ad6:	mov    edx,DWORD PTR [esp+0x18]
10029ada:	mov    ebp,DWORD PTR [esp+0x10]
10029ade:	mov    DWORD PTR [ecx+0x18],0x1007f928
10029ae5:	mov    DWORD PTR [edx],0x1b
10029aeb:	jmp    0x10029b20
10029aed:	mov    eax,DWORD PTR [esp+0x50]
10029af1:	mov    DWORD PTR [eax+0x18],0x1007f948
10029af8:	jmp    0x10029b16
10029afa:	test   dl,0x20
10029afd:	je     0x10029b0b
10029aff:	mov    edx,DWORD PTR [esp+0x18]
10029b03:	mov    DWORD PTR [edx],0xb
10029b09:	jmp    0x10029b20
10029b0b:	mov    eax,DWORD PTR [esp+0x50]
10029b0f:	mov    DWORD PTR [eax+0x18],0x1007f960
10029b16:	mov    ecx,DWORD PTR [esp+0x18]
10029b1a:	mov    DWORD PTR [ecx],0x1b
10029b20:	mov    edx,DWORD PTR [esp+0x14]
10029b24:	mov    eax,edi
10029b26:	shr    eax,0x3
10029b29:	sub    ebp,eax
10029b2b:	add    eax,eax
10029b2d:	add    eax,eax
10029b2f:	add    eax,eax
10029b31:	sub    edi,eax
10029b33:	mov    ecx,edi
10029b35:	mov    eax,0x1
10029b3a:	shl    eax,cl
10029b3c:	mov    ecx,DWORD PTR [esp+0x50]
10029b40:	sub    edx,ebp
10029b42:	add    edx,0x5
10029b45:	sub    eax,0x1
10029b48:	and    ebx,eax
10029b4a:	lea    eax,[ebp+0x1]
10029b4d:	mov    DWORD PTR [ecx],eax
10029b4f:	lea    eax,[esi+0x1]
10029b52:	mov    DWORD PTR [ecx+0xc],eax
10029b55:	mov    eax,DWORD PTR [esp+0x2c]
10029b59:	sub    eax,esi
10029b5b:	add    eax,0x101
10029b60:	mov    DWORD PTR [ecx+0x10],eax
10029b63:	mov    eax,DWORD PTR [esp+0x18]
10029b67:	mov    DWORD PTR [ecx+0x4],edx
10029b6a:	mov    DWORD PTR [eax+0x3c],edi
10029b6d:	pop    edi
10029b6e:	pop    esi
10029b6f:	pop    ebp
10029b70:	mov    DWORD PTR [eax+0x38],ebx
10029b73:	pop    ebx
10029b74:	add    esp,0x3c
10029b77:	ret    
10029b78:	int3   
10029b79:	int3   
10029b7a:	int3   
10029b7b:	int3   
10029b7c:	int3   
10029b7d:	int3   
10029b7e:	int3   
10029b7f:	int3   
10029b80:	sub    esp,0x8c
10029b86:	mov    eax,ds:0x100951fc
10029b8b:	xor    eax,esp
10029b8d:	mov    DWORD PTR [esp+0x88],eax
10029b94:	mov    eax,DWORD PTR [esp+0xa4]
10029b9b:	mov    edx,DWORD PTR [esp+0xa0]
10029ba2:	push   ebx
10029ba3:	mov    ebx,DWORD PTR [esp+0xa0]
10029baa:	push   ebp
10029bab:	mov    ebp,DWORD PTR [esp+0x9c]
10029bb2:	push   esi
10029bb3:	mov    esi,DWORD PTR [esp+0xa4]
10029bba:	mov    DWORD PTR [esp+0x18],eax
10029bbe:	xor    eax,eax
10029bc0:	test   esi,esi
10029bc2:	mov    DWORD PTR [esp+0x50],ebp
10029bc6:	mov    DWORD PTR [esp+0x38],ebx
10029bca:	mov    DWORD PTR [esp+0x48],edx
10029bce:	mov    DWORD PTR [esp+0x54],eax
10029bd2:	mov    DWORD PTR [esp+0x58],eax
10029bd6:	mov    DWORD PTR [esp+0x5c],eax
10029bda:	mov    DWORD PTR [esp+0x60],eax
10029bde:	mov    DWORD PTR [esp+0x64],eax
10029be2:	mov    DWORD PTR [esp+0x68],eax
10029be6:	mov    DWORD PTR [esp+0x6c],eax
10029bea:	mov    DWORD PTR [esp+0x70],eax
10029bee:	jbe    0x10029c06
10029bf0:	movzx  ecx,WORD PTR [ebp+eax*2+0x0]
10029bf5:	add    WORD PTR [esp+ecx*2+0x54],0x1
10029bfb:	lea    ecx,[esp+ecx*2+0x54]
10029bff:	add    eax,0x1
10029c02:	cmp    eax,esi
10029c04:	jb     0x10029bf0
10029c06:	mov    eax,DWORD PTR [edx]
10029c08:	mov    DWORD PTR [esp+0x10],eax
10029c0c:	mov    ecx,0xf
10029c11:	cmp    WORD PTR [esp+ecx*2+0x54],0x0
10029c17:	jne    0x10029c21
10029c19:	sub    ecx,0x1
10029c1c:	cmp    ecx,0x1
10029c1f:	jae    0x10029c11
10029c21:	cmp    eax,ecx
10029c23:	mov    DWORD PTR [esp+0x1c],ecx
10029c27:	jbe    0x10029c2f
10029c29:	mov    DWORD PTR [esp+0x10],ecx
10029c2d:	mov    eax,ecx
10029c2f:	test   ecx,ecx
10029c31:	jne    0x10029c74
10029c33:	mov    WORD PTR [esp+0xe],cx
10029c38:	mov    ecx,DWORD PTR [ebx]
10029c3a:	mov    BYTE PTR [esp+0xc],0x40
10029c3f:	mov    BYTE PTR [esp+0xd],0x1
10029c44:	mov    eax,DWORD PTR [esp+0xc]
10029c48:	mov    DWORD PTR [ecx],eax
10029c4a:	add    DWORD PTR [ebx],0x4
10029c4d:	mov    ecx,DWORD PTR [ebx]
10029c4f:	pop    esi
10029c50:	mov    DWORD PTR [ecx],eax
10029c52:	add    DWORD PTR [ebx],0x4
10029c55:	pop    ebp
10029c56:	mov    DWORD PTR [edx],0x1
10029c5c:	xor    eax,eax
10029c5e:	pop    ebx
10029c5f:	mov    ecx,DWORD PTR [esp+0x88]
10029c66:	xor    ecx,esp
10029c68:	call   0x10015b2b
10029c6d:	add    esp,0x8c
10029c73:	ret    
10029c74:	mov    esi,0x1
10029c79:	lea    esp,[esp+0x0]
10029c80:	cmp    WORD PTR [esp+esi*2+0x54],0x0
10029c86:	jne    0x10029cc4
10029c88:	cmp    WORD PTR [esp+esi*2+0x56],0x0
10029c8e:	jne    0x10029cb2
10029c90:	cmp    WORD PTR [esp+esi*2+0x58],0x0
10029c96:	jne    0x10029cb7
10029c98:	cmp    WORD PTR [esp+esi*2+0x5a],0x0
10029c9e:	jne    0x10029cbc
10029ca0:	cmp    WORD PTR [esp+esi*2+0x5c],0x0
10029ca6:	jne    0x10029cc1
10029ca8:	add    esi,0x5
10029cab:	cmp    esi,0xf
10029cae:	jbe    0x10029c80
10029cb0:	jmp    0x10029cc4
10029cb2:	add    esi,0x1
10029cb5:	jmp    0x10029cc4
10029cb7:	add    esi,0x2
10029cba:	jmp    0x10029cc4
10029cbc:	add    esi,0x3
10029cbf:	jmp    0x10029cc4
10029cc1:	add    esi,0x4
10029cc4:	cmp    eax,esi
10029cc6:	jae    0x10029ccc
10029cc8:	mov    DWORD PTR [esp+0x10],esi
10029ccc:	mov    edx,0x1
10029cd1:	mov    eax,edx
10029cd3:	push   edi
10029cd4:	movzx  edi,WORD PTR [esp+eax*2+0x58]
10029cd9:	add    edx,edx
10029cdb:	sub    edx,edi
10029cdd:	js     0x10029cfb
10029cdf:	add    eax,0x1
10029ce2:	cmp    eax,0xf
10029ce5:	jbe    0x10029cd4
10029ce7:	test   edx,edx
10029ce9:	mov    edi,DWORD PTR [esp+0xa0]
10029cf0:	jle    0x10029d03
10029cf2:	test   edi,edi
10029cf4:	je     0x10029cfb
10029cf6:	cmp    ecx,0x1
10029cf9:	je     0x10029d03
10029cfb:	or     eax,0xffffffff
10029cfe:	jmp    0x1002a055
10029d03:	mov    WORD PTR [esp+0x7a],0x0
10029d0a:	mov    eax,0x2
10029d0f:	nop
10029d10:	mov    cx,WORD PTR [esp+eax*1+0x78]
10029d15:	add    cx,WORD PTR [esp+eax*1+0x58]
10029d1a:	add    eax,0x2
10029d1d:	cmp    eax,0x1e
10029d20:	mov    WORD PTR [esp+eax*1+0x78],cx
10029d25:	jb     0x10029d10
10029d27:	mov    ecx,DWORD PTR [esp+0x1c]
10029d2b:	xor    eax,eax
10029d2d:	cmp    DWORD PTR [esp+0xa8],eax
10029d34:	jbe    0x10029d67
10029d36:	cmp    WORD PTR [ebp+eax*2+0x0],0x0
10029d3c:	je     0x10029d5b
10029d3e:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
10029d43:	movzx  edx,WORD PTR [esp+edx*2+0x78]
10029d48:	mov    WORD PTR [ecx+edx*2],ax
10029d4c:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
10029d51:	add    WORD PTR [esp+edx*2+0x78],0x1
10029d57:	lea    edx,[esp+edx*2+0x78]
10029d5b:	add    eax,0x1
10029d5e:	cmp    eax,DWORD PTR [esp+0xa8]
10029d65:	jb     0x10029d36
10029d67:	mov    eax,edi
10029d69:	sub    eax,0x0
10029d6c:	mov    edx,0xffffffff
10029d71:	je     0x10029db4
10029d73:	sub    eax,0x1
10029d76:	je     0x10029d8e
10029d78:	mov    DWORD PTR [esp+0x2c],0x10082648
10029d80:	mov    DWORD PTR [esp+0x38],0x10082688
10029d88:	mov    DWORD PTR [esp+0x30],edx
10029d8c:	jmp    0x10029dc4
10029d8e:	mov    eax,0x100825c8
10029d93:	sub    eax,0x202
10029d98:	mov    DWORD PTR [esp+0x2c],eax
10029d9c:	mov    eax,0x10082608
10029da1:	sub    eax,0x202
10029da6:	mov    DWORD PTR [esp+0x38],eax
10029daa:	mov    DWORD PTR [esp+0x30],0x100
10029db2:	jmp    0x10029dc4
10029db4:	mov    DWORD PTR [esp+0x38],ecx
10029db8:	mov    DWORD PTR [esp+0x2c],ecx
10029dbc:	mov    DWORD PTR [esp+0x30],0x13
10029dc4:	mov    eax,DWORD PTR [ebx]
10029dc6:	mov    ecx,DWORD PTR [esp+0x14]
10029dca:	mov    DWORD PTR [esp+0x24],eax
10029dce:	mov    eax,0x1
10029dd3:	shl    eax,cl
10029dd5:	xor    ebp,ebp
10029dd7:	xor    ebx,ebx
10029dd9:	cmp    edi,0x1
10029ddc:	lea    ecx,[eax-0x1]
10029ddf:	mov    DWORD PTR [esp+0x18],esi
10029de3:	mov    DWORD PTR [esp+0x34],edx
10029de7:	mov    DWORD PTR [esp+0x44],eax
10029deb:	mov    DWORD PTR [esp+0x28],eax
10029def:	mov    DWORD PTR [esp+0x40],ecx
10029df3:	jne    0x10029e00
10029df5:	cmp    eax,0x5b0
10029dfa:	jae    0x1002a050
10029e00:	mov    edx,DWORD PTR [esp+0x1c]
10029e04:	mov    DWORD PTR [esp+0x1c],edx
10029e08:	jmp    0x10029e10
10029e0a:	lea    ebx,[ebx+0x0]
10029e10:	mov    al,BYTE PTR [esp+0x18]
10029e14:	mov    esi,DWORD PTR [esp+0x1c]
10029e18:	mov    edx,DWORD PTR [esp+0x30]
10029e1c:	sub    al,bl
10029e1e:	mov    BYTE PTR [esp+0x11],al
10029e22:	movzx  eax,WORD PTR [esi]
10029e25:	movzx  ecx,ax
10029e28:	cmp    ecx,edx
10029e2a:	jge    0x10029e38
10029e2c:	mov    BYTE PTR [esp+0x10],0x0
10029e31:	mov    WORD PTR [esp+0x12],ax
10029e36:	jmp    0x10029e65
10029e38:	jle    0x10029e59
10029e3a:	movzx  eax,WORD PTR [esi]
10029e3d:	mov    ecx,DWORD PTR [esp+0x38]
10029e41:	add    eax,eax
10029e43:	mov    dl,BYTE PTR [eax+ecx*1]
10029e46:	mov    ecx,DWORD PTR [esp+0x2c]
10029e4a:	mov    BYTE PTR [esp+0x10],dl
10029e4e:	mov    dx,WORD PTR [eax+ecx*1]
10029e52:	mov    WORD PTR [esp+0x12],dx
10029e57:	jmp    0x10029e65
10029e59:	mov    BYTE PTR [esp+0x10],0x60
10029e5e:	mov    WORD PTR [esp+0x12],0x0
10029e65:	mov    ecx,DWORD PTR [esp+0x18]
10029e69:	mov    eax,DWORD PTR [esp+0x44]
10029e6d:	sub    ecx,ebx
10029e6f:	mov    edx,0x1
10029e74:	shl    edx,cl
10029e76:	mov    ecx,ebx
10029e78:	mov    edi,ebp
10029e7a:	shr    edi,cl
10029e7c:	mov    ecx,DWORD PTR [esp+0x24]
10029e80:	mov    DWORD PTR [esp+0x50],eax
10029e84:	lea    esi,[edx*4+0x0]
10029e8b:	add    edi,eax
10029e8d:	lea    ecx,[ecx+edi*4]
10029e90:	mov    edi,DWORD PTR [esp+0x10]
10029e94:	sub    eax,edx
10029e96:	sub    ecx,esi
10029e98:	test   eax,eax
10029e9a:	mov    DWORD PTR [ecx],edi
10029e9c:	jne    0x10029e94
10029e9e:	mov    edx,DWORD PTR [esp+0x18]
10029ea2:	lea    ecx,[edx-0x1]
10029ea5:	mov    eax,0x1
10029eaa:	shl    eax,cl
10029eac:	test   ebp,eax
10029eae:	je     0x10029eb6
10029eb0:	shr    eax,1
10029eb2:	test   ebp,eax
10029eb4:	jne    0x10029eb0
10029eb6:	test   eax,eax
10029eb8:	je     0x10029ec5
10029eba:	lea    ecx,[eax-0x1]
10029ebd:	and    ecx,ebp
10029ebf:	add    ecx,eax
10029ec1:	mov    ebp,ecx
10029ec3:	jmp    0x10029ec7
10029ec5:	xor    ebp,ebp
10029ec7:	add    WORD PTR [esp+edx*2+0x58],0xffff
10029ece:	movzx  eax,WORD PTR [esp+edx*2+0x58]
10029ed3:	add    DWORD PTR [esp+0x1c],0x2
10029ed8:	test   ax,ax
10029edb:	jne    0x10029efa
10029edd:	cmp    edx,DWORD PTR [esp+0x20]
10029ee1:	je     0x10029fc3
10029ee7:	mov    edx,DWORD PTR [esp+0x1c]
10029eeb:	movzx  eax,WORD PTR [edx]
10029eee:	mov    ecx,DWORD PTR [esp+0x54]
10029ef2:	movzx  edx,WORD PTR [ecx+eax*2]
10029ef6:	mov    DWORD PTR [esp+0x18],edx
10029efa:	cmp    edx,DWORD PTR [esp+0x14]
10029efe:	jbe    0x10029e10
10029f04:	mov    esi,DWORD PTR [esp+0x40]
10029f08:	and    esi,ebp
10029f0a:	cmp    esi,DWORD PTR [esp+0x34]
10029f0e:	mov    DWORD PTR [esp+0x48],esi
10029f12:	je     0x10029e10
10029f18:	test   ebx,ebx
10029f1a:	jne    0x10029f20
10029f1c:	mov    ebx,DWORD PTR [esp+0x14]
10029f20:	mov    eax,DWORD PTR [esp+0x24]
10029f24:	mov    ecx,DWORD PTR [esp+0x50]
10029f28:	lea    edx,[eax+ecx*4]
10029f2b:	mov    ecx,DWORD PTR [esp+0x18]
10029f2f:	sub    ecx,ebx
10029f31:	mov    DWORD PTR [esp+0x24],edx
10029f35:	mov    eax,0x1
10029f3a:	lea    edx,[ebx+ecx*1]
10029f3d:	shl    eax,cl
10029f3f:	cmp    edx,DWORD PTR [esp+0x20]
10029f43:	jae    0x10029f6e
10029f45:	lea    esi,[esp+edx*2+0x58]
10029f49:	lea    esp,[esp+0x0]
10029f50:	movzx  edi,WORD PTR [esi]
10029f53:	sub    eax,edi
10029f55:	test   eax,eax
10029f57:	jle    0x10029f6a
10029f59:	add    edx,0x1
10029f5c:	add    ecx,0x1
10029f5f:	add    esi,0x2
10029f62:	add    eax,eax
10029f64:	cmp    edx,DWORD PTR [esp+0x20]
10029f68:	jb     0x10029f50
10029f6a:	mov    esi,DWORD PTR [esp+0x48]
10029f6e:	mov    eax,0x1
10029f73:	shl    eax,cl
10029f75:	add    DWORD PTR [esp+0x28],eax
10029f79:	cmp    DWORD PTR [esp+0xa0],0x1
10029f81:	mov    DWORD PTR [esp+0x44],eax
10029f85:	jne    0x10029f95
10029f87:	cmp    DWORD PTR [esp+0x28],0x5b0
10029f8f:	jae    0x1002a050
10029f95:	mov    edx,esi
10029f97:	mov    esi,DWORD PTR [esp+0x3c]
10029f9b:	mov    eax,DWORD PTR [esi]
10029f9d:	mov    BYTE PTR [eax+edx*4],cl
10029fa0:	mov    ecx,DWORD PTR [esi]
10029fa2:	mov    al,BYTE PTR [esp+0x14]
10029fa6:	mov    BYTE PTR [ecx+edx*4+0x1],al
10029faa:	mov    eax,DWORD PTR [esi]
10029fac:	mov    ecx,DWORD PTR [esp+0x24]
10029fb0:	sub    ecx,eax
10029fb2:	sar    ecx,0x2
10029fb5:	mov    DWORD PTR [esp+0x34],edx
10029fb9:	mov    WORD PTR [eax+edx*4+0x2],cx
10029fbe:	jmp    0x10029e10
10029fc3:	mov    edi,DWORD PTR [esp+0x3c]
10029fc7:	mov    al,dl
10029fc9:	sub    al,bl
10029fcb:	test   ebp,ebp
10029fcd:	mov    BYTE PTR [esp+0x10],0x40
10029fd2:	mov    BYTE PTR [esp+0x11],al
10029fd6:	mov    WORD PTR [esp+0x12],0x0
10029fdd:	je     0x1002a035
10029fdf:	mov    esi,DWORD PTR [esp+0x24]
10029fe3:	test   ebx,ebx
10029fe5:	je     0x1002a005
10029fe7:	mov    ecx,DWORD PTR [esp+0x40]
10029feb:	and    ecx,ebp
10029fed:	cmp    ecx,DWORD PTR [esp+0x34]
10029ff1:	je     0x1002a005
10029ff3:	mov    eax,DWORD PTR [esp+0x14]
10029ff7:	mov    esi,DWORD PTR [edi]
10029ff9:	xor    ebx,ebx
10029ffb:	mov    DWORD PTR [esp+0x18],eax
10029fff:	mov    BYTE PTR [esp+0x11],al
1002a003:	mov    edx,eax
1002a005:	mov    ecx,ebx
1002a007:	mov    eax,ebp
1002a009:	shr    eax,cl
1002a00b:	mov    ecx,DWORD PTR [esp+0x10]
1002a00f:	mov    DWORD PTR [esi+eax*4],ecx
1002a012:	lea    ecx,[edx-0x1]
1002a015:	mov    eax,0x1
1002a01a:	shl    eax,cl
1002a01c:	test   ebp,eax
1002a01e:	je     0x1002a026
1002a020:	shr    eax,1
1002a022:	test   ebp,eax
1002a024:	jne    0x1002a020
1002a026:	test   eax,eax
1002a028:	je     0x1002a035
1002a02a:	lea    ecx,[eax-0x1]
1002a02d:	and    ecx,ebp
1002a02f:	add    ecx,eax
1002a031:	mov    ebp,ecx
1002a033:	jne    0x10029fe3
1002a035:	mov    edx,DWORD PTR [esp+0x28]
1002a039:	mov    ecx,DWORD PTR [esp+0x4c]
1002a03d:	lea    eax,[edx*4+0x0]
1002a044:	add    DWORD PTR [edi],eax
1002a046:	mov    edx,DWORD PTR [esp+0x14]
1002a04a:	mov    DWORD PTR [ecx],edx
1002a04c:	xor    eax,eax
1002a04e:	jmp    0x1002a055
1002a050:	mov    eax,0x1
1002a055:	mov    ecx,DWORD PTR [esp+0x98]
1002a05c:	pop    edi
1002a05d:	pop    esi
1002a05e:	pop    ebp
1002a05f:	pop    ebx
1002a060:	xor    ecx,esp
1002a062:	call   0x10015b2b
1002a067:	add    esp,0x8c
1002a06d:	ret    
1002a06e:	jmp    DWORD PTR ds:0x10034204
1002a074:	int3   
1002a075:	int3   
1002a076:	int3   
1002a077:	int3   
1002a078:	int3   
1002a079:	int3   
1002a07a:	int3   
1002a07b:	int3   
1002a07c:	int3   
1002a07d:	int3   
1002a07e:	int3   
1002a07f:	int3   
1002a080:	lea    ecx,[ebp-0x50]
1002a083:	jmp    0x10003b40
1002a088:	lea    ecx,[ebp-0x3c]
1002a08b:	jmp    0x10003b40
1002a090:	lea    ecx,[ebp-0x58]
1002a093:	jmp    0x10003b40
1002a098:	lea    ecx,[ebp-0x44]
1002a09b:	jmp    0x10003290
1002a0a0:	lea    ecx,[ebp-0x64]
1002a0a3:	jmp    0x10006d60
1002a0a8:	lea    ecx,[ebp-0x30]
1002a0ab:	jmp    0x10002bb0
1002a0b0:	mov    edx,DWORD PTR [esp+0x8]
1002a0b4:	lea    eax,[edx+0xc]
1002a0b7:	mov    ecx,DWORD PTR [edx-0xac]
1002a0bd:	xor    ecx,eax
1002a0bf:	call   0x10015b2b
1002a0c4:	mov    ecx,DWORD PTR [edx-0x8]
1002a0c7:	xor    ecx,eax
1002a0c9:	call   0x10015b2b
1002a0ce:	mov    eax,0x10084b94
1002a0d3:	jmp    0x10015bf5
1002a0d8:	lea    ecx,[ebp-0x18]
1002a0db:	jmp    0x10003290
1002a0e0:	lea    ecx,[ebp-0x1034]
1002a0e6:	jmp    0x10003290
1002a0eb:	lea    ecx,[ebp-0x108c]
1002a0f1:	jmp    0x10006d60
1002a0f6:	lea    ecx,[ebp-0x14]
1002a0f9:	jmp    0x10003b40
1002a0fe:	lea    ecx,[ebp-0x1098]
1002a104:	jmp    0x10003b40
1002a109:	lea    ecx,[ebp-0x109c]
1002a10f:	jmp    0x10003b40
1002a114:	lea    ecx,[ebp-0x10a0]
1002a11a:	jmp    0x10003b40
1002a11f:	mov    edx,DWORD PTR [esp+0x8]
1002a123:	lea    eax,[edx+0xc]
1002a126:	mov    ecx,DWORD PTR [edx-0x10fc]
1002a12c:	xor    ecx,eax
1002a12e:	call   0x10015b2b
1002a133:	mov    ecx,DWORD PTR [edx-0x24]
1002a136:	xor    ecx,eax
1002a138:	call   0x10015b2b
1002a13d:	mov    eax,0x10084c1c
1002a142:	jmp    0x10015bf5
1002a147:	lea    ecx,[ebp-0x10]
1002a14a:	jmp    0x10003290
1002a14f:	mov    edx,DWORD PTR [esp+0x8]
1002a153:	lea    eax,[edx+0xc]
1002a156:	mov    ecx,DWORD PTR [edx-0x240]
1002a15c:	xor    ecx,eax
1002a15e:	call   0x10015b2b
1002a163:	mov    ecx,DWORD PTR [edx-0x8]
1002a166:	xor    ecx,eax
1002a168:	call   0x10015b2b
1002a16d:	mov    eax,0x10084c90
1002a172:	jmp    0x10015bf5
1002a177:	lea    ecx,[ebp-0x10]
1002a17a:	jmp    0x10003320
1002a17f:	lea    ecx,[ebp-0x1c]
1002a182:	jmp    0x10003320
1002a187:	mov    eax,DWORD PTR [ebp-0x30]
1002a18a:	and    eax,0x1
1002a18d:	je     0x1002a19f
1002a193:	and    DWORD PTR [ebp-0x30],0xfffffffe
1002a197:	mov    ecx,DWORD PTR [ebp+0x8]
1002a19a:	jmp    0x10003320
1002a19f:	ret    
1002a1a0:	lea    ecx,[ebp-0x24]
1002a1a3:	jmp    0x10003320
1002a1a8:	mov    edx,DWORD PTR [esp+0x8]
1002a1ac:	lea    eax,[edx+0xc]
1002a1af:	mov    ecx,DWORD PTR [edx-0x28]
1002a1b2:	xor    ecx,eax
1002a1b4:	call   0x10015b2b
1002a1b9:	mov    eax,0x10084cd4
1002a1be:	jmp    0x10015bf5
1002a1c3:	lea    ecx,[ebp-0x10]
1002a1c6:	jmp    0x10003320
1002a1cb:	mov    edx,DWORD PTR [esp+0x8]
1002a1cf:	lea    eax,[edx+0xc]
1002a1d2:	mov    ecx,DWORD PTR [edx-0x24]
1002a1d5:	xor    ecx,eax
1002a1d7:	call   0x10015b2b
1002a1dc:	mov    eax,0x10084d00
1002a1e1:	jmp    0x10015bf5
1002a1e6:	lea    ecx,[ebp-0xd]
1002a1e9:	jmp    0x10006ca0
1002a1ee:	mov    edx,DWORD PTR [esp+0x8]
1002a1f2:	lea    eax,[edx+0xc]
1002a1f5:	mov    ecx,DWORD PTR [edx-0x1c]
1002a1f8:	xor    ecx,eax
1002a1fa:	call   0x10015b2b
1002a1ff:	mov    eax,0x10084d2c
1002a204:	jmp    0x10015bf5
1002a209:	lea    ecx,[ebp-0x10]
1002a20c:	jmp    0x10003b40
1002a211:	mov    edx,DWORD PTR [esp+0x8]
1002a215:	lea    eax,[edx+0xc]
1002a218:	mov    ecx,DWORD PTR [edx-0xc]
1002a21b:	xor    ecx,eax
1002a21d:	call   0x10015b2b
1002a222:	mov    eax,0x10084d58
1002a227:	jmp    0x10015bf5
1002a22c:	lea    ecx,[ebp-0xd]
1002a22f:	jmp    0x10006ca0
1002a234:	lea    ecx,[ebp-0x24]
1002a237:	jmp    0x10006d60
1002a23c:	mov    edx,DWORD PTR [esp+0x8]
1002a240:	lea    eax,[edx+0xc]
1002a243:	mov    ecx,DWORD PTR [edx-0x20]
1002a246:	xor    ecx,eax
1002a248:	call   0x10015b2b
1002a24d:	mov    eax,0x10084d8c
1002a252:	jmp    0x10015bf5
1002a257:	lea    ecx,[ebp-0x10]
1002a25a:	jmp    0x10003290
1002a25f:	mov    edx,DWORD PTR [esp+0x8]
1002a263:	lea    eax,[edx+0xc]
1002a266:	mov    ecx,DWORD PTR [edx-0x8]
1002a269:	xor    ecx,eax
1002a26b:	call   0x10015b2b
1002a270:	mov    eax,0x10084db8
1002a275:	jmp    0x10015bf5
1002a27a:	lea    ecx,[ebp-0x30]
1002a27d:	jmp    0x10006d60
1002a282:	mov    edx,DWORD PTR [esp+0x8]
1002a286:	lea    eax,[edx+0xc]
1002a289:	mov    ecx,DWORD PTR [edx-0x38]
1002a28c:	xor    ecx,eax
1002a28e:	call   0x10015b2b
1002a293:	mov    ecx,DWORD PTR [edx-0x8]
1002a296:	xor    ecx,eax
1002a298:	call   0x10015b2b
1002a29d:	mov    eax,0x10084e18
1002a2a2:	jmp    0x10015bf5
1002a2a7:	int3   
1002a2a8:	int3   
1002a2a9:	int3   
1002a2aa:	int3   
1002a2ab:	int3   
1002a2ac:	int3   
1002a2ad:	int3   
1002a2ae:	int3   
1002a2af:	int3   
1002a2b0:	lea    ecx,[ebp+0x18]
1002a2b3:	jmp    0x10003b40
1002a2b8:	lea    ecx,[ebp+0x14]
1002a2bb:	jmp    0x10003b40
1002a2c0:	mov    edx,DWORD PTR [esp+0x8]
1002a2c4:	lea    eax,[edx+0xc]
1002a2c7:	mov    ecx,DWORD PTR [edx-0x58]
1002a2ca:	xor    ecx,eax
1002a2cc:	call   0x10015b2b
1002a2d1:	mov    eax,0x10084e80
1002a2d6:	jmp    0x10015bf5
1002a2db:	lea    ecx,[ebp-0x50]
1002a2de:	jmp    0x1000f830
1002a2e3:	lea    ecx,[ebp-0x4c]
1002a2e6:	jmp    0x10002bb0
1002a2eb:	lea    ecx,[ebp-0x30]
1002a2ee:	jmp    0x1000f7a0
1002a2f3:	lea    ecx,[ebp-0x70]
1002a2f6:	jmp    0x10003b40
1002a2fb:	mov    edx,DWORD PTR [esp+0x8]
1002a2ff:	lea    eax,[edx+0xc]
1002a302:	mov    ecx,DWORD PTR [edx-0x7c]
1002a305:	xor    ecx,eax
1002a307:	call   0x10015b2b
1002a30c:	mov    ecx,DWORD PTR [edx-0x4]
1002a30f:	xor    ecx,eax
1002a311:	call   0x10015b2b
1002a316:	mov    eax,0x10084ec4
1002a31b:	jmp    0x10015bf5
1002a320:	lea    ecx,[ebp-0x1c]
1002a323:	jmp    0x10003b40
1002a328:	lea    ecx,[ebp-0x20]
1002a32b:	jmp    0x10003b40
1002a330:	lea    ecx,[ebp-0x30]
1002a333:	jmp    0x10003b40
1002a338:	lea    ecx,[ebp-0x34]
1002a33b:	jmp    0x10003b40
1002a340:	lea    ecx,[ebp-0x18]
1002a343:	jmp    0x10003b40
1002a348:	lea    ecx,[ebp-0x14]
1002a34b:	jmp    0x10003290
1002a350:	mov    edx,DWORD PTR [esp+0x8]
1002a354:	lea    eax,[edx+0xc]
1002a357:	mov    ecx,DWORD PTR [edx-0x38]
1002a35a:	xor    ecx,eax
1002a35c:	call   0x10015b2b
1002a361:	mov    eax,0x10084ee8
1002a366:	jmp    0x10015bf5
1002a36b:	lea    ecx,[ebp-0x10cc]
1002a371:	jmp    0x10002bb0
1002a376:	lea    ecx,[ebp-0x10d0]
1002a37c:	jmp    0x10003b40
1002a381:	lea    ecx,[ebp-0x40]
1002a384:	jmp    0x10003b40
1002a389:	lea    ecx,[ebp-0x18]
1002a38c:	jmp    0x10003b40
1002a391:	lea    ecx,[ebp-0x1100]
1002a397:	jmp    0x10003b40
1002a39c:	lea    ecx,[ebp-0x44]
1002a39f:	jmp    0x10003b40
1002a3a4:	lea    ecx,[ebp-0x1104]
1002a3aa:	jmp    0x10003b40
1002a3af:	lea    ecx,[ebp-0x3c]
1002a3b2:	jmp    0x10002bb0
1002a3b7:	mov    edx,DWORD PTR [esp+0x8]
1002a3bb:	lea    eax,[edx+0xc]
1002a3be:	mov    ecx,DWORD PTR [edx-0x114c]
1002a3c4:	xor    ecx,eax
1002a3c6:	call   0x10015b2b
1002a3cb:	mov    ecx,DWORD PTR [edx-0x14]
1002a3ce:	xor    ecx,eax
1002a3d0:	call   0x10015b2b
1002a3d5:	mov    eax,0x10084f80
1002a3da:	jmp    0x10015bf5
1002a3df:	lea    ecx,[ebp-0x64]
1002a3e2:	jmp    0x10002bb0
1002a3e7:	lea    ecx,[ebp-0x48]
1002a3ea:	jmp    0x10002bb0
1002a3ef:	lea    ecx,[ebp-0x2c]
1002a3f2:	jmp    0x10002bb0
1002a3f7:	mov    eax,DWORD PTR [ebp-0x6c]
1002a3fa:	push   eax
1002a3fb:	call   0x10015b26
1002a400:	pop    ecx
1002a401:	ret    
1002a402:	mov    eax,DWORD PTR [ebp-0x74]
1002a405:	push   eax
1002a406:	call   0x10015b26
1002a40b:	pop    ecx
1002a40c:	ret    
1002a40d:	mov    ecx,DWORD PTR [ebp-0x78]
1002a410:	jmp    0x10003b40
1002a415:	mov    edx,DWORD PTR [esp+0x8]
1002a419:	lea    eax,[edx+0xc]
1002a41c:	mov    ecx,DWORD PTR [edx-0x88]
1002a422:	xor    ecx,eax
1002a424:	call   0x10015b2b
1002a429:	mov    ecx,DWORD PTR [edx-0x4]
1002a42c:	xor    ecx,eax
1002a42e:	call   0x10015b2b
1002a433:	mov    eax,0x10084ffc
1002a438:	jmp    0x10015bf5
1002a43d:	lea    ecx,[ebp-0x68]
1002a440:	jmp    0x10002bb0
1002a445:	mov    edx,DWORD PTR [esp+0x8]
1002a449:	lea    eax,[edx+0xc]
1002a44c:	mov    ecx,DWORD PTR [edx-0x70]
1002a44f:	xor    ecx,eax
1002a451:	call   0x10015b2b
1002a456:	mov    ecx,DWORD PTR [edx-0x18]
1002a459:	xor    ecx,eax
1002a45b:	call   0x10015b2b
1002a460:	mov    eax,0x1008509c
1002a465:	jmp    0x10015bf5
1002a46a:	lea    ecx,[ebp-0x14]
1002a46d:	jmp    0x10003b40
1002a472:	lea    ecx,[ebp-0x18]
1002a475:	jmp    0x10003b40
1002a47a:	mov    edx,DWORD PTR [esp+0x8]
1002a47e:	lea    eax,[edx+0xc]
1002a481:	mov    ecx,DWORD PTR [edx-0x1c]
1002a484:	xor    ecx,eax
1002a486:	call   0x10015b2b
1002a48b:	mov    eax,0x100850d0
1002a490:	jmp    0x10015bf5
1002a495:	lea    ecx,[ebp-0x18]
1002a498:	jmp    0x10003b40
1002a49d:	lea    ecx,[ebp-0x1c]
1002a4a0:	jmp    0x10003b40
1002a4a5:	mov    edx,DWORD PTR [esp+0x8]
1002a4a9:	lea    eax,[edx+0xc]
1002a4ac:	mov    ecx,DWORD PTR [edx-0x20]
1002a4af:	xor    ecx,eax
1002a4b1:	call   0x10015b2b
1002a4b6:	mov    eax,0x10085104
1002a4bb:	jmp    0x10015bf5
1002a4c0:	mov    ecx,DWORD PTR [ebp-0x18]
1002a4c3:	jmp    0x10003b40
1002a4c8:	mov    ecx,DWORD PTR [ebp-0x18]
1002a4cb:	add    ecx,0x4
1002a4ce:	jmp    0x10002bb0
1002a4d3:	lea    ecx,[ebp-0x10]
1002a4d6:	jmp    0x10003b40
1002a4db:	lea    ecx,[ebp-0x14]
1002a4de:	jmp    0x10003b40
1002a4e3:	mov    edx,DWORD PTR [esp+0x8]
1002a4e7:	lea    eax,[edx+0xc]
1002a4ea:	mov    ecx,DWORD PTR [edx-0x20]
1002a4ed:	xor    ecx,eax
1002a4ef:	call   0x10015b2b
1002a4f4:	mov    eax,0x10085148
1002a4f9:	jmp    0x10015bf5
1002a4fe:	int3   
1002a4ff:	int3   
1002a500:	mov    ecx,DWORD PTR [ebp-0x10]
1002a503:	jmp    0x10003b40
1002a508:	mov    edx,DWORD PTR [esp+0x8]
1002a50c:	lea    eax,[edx+0xc]
1002a50f:	mov    ecx,DWORD PTR [edx-0x8]
1002a512:	xor    ecx,eax
1002a514:	call   0x10015b2b
1002a519:	mov    eax,0x10085174
1002a51e:	jmp    0x10015bf5
1002a523:	int3   
1002a524:	int3   
1002a525:	int3   
1002a526:	int3   
1002a527:	int3   
1002a528:	int3   
1002a529:	int3   
1002a52a:	int3   
1002a52b:	int3   
1002a52c:	int3   
1002a52d:	int3   
1002a52e:	int3   
1002a52f:	int3   
1002a530:	lea    ecx,[ebp-0x10]
1002a533:	jmp    0x1000f830
1002a538:	mov    edx,DWORD PTR [esp+0x8]
1002a53c:	lea    eax,[edx+0xc]
1002a53f:	mov    ecx,DWORD PTR [edx-0x8]
1002a542:	xor    ecx,eax
1002a544:	call   0x10015b2b
1002a549:	mov    eax,0x100851a0
1002a54e:	jmp    0x10015bf5
1002a553:	lea    ecx,[ebp-0x10]
1002a556:	jmp    0x1000f830
1002a55b:	mov    edx,DWORD PTR [esp+0x8]
1002a55f:	lea    eax,[edx+0xc]
1002a562:	mov    ecx,DWORD PTR [edx-0x10]
1002a565:	xor    ecx,eax
1002a567:	call   0x10015b2b
1002a56c:	mov    eax,0x100851cc
1002a571:	jmp    0x10015bf5
1002a576:	int3   
1002a577:	int3   
1002a578:	int3   
1002a579:	int3   
1002a57a:	int3   
1002a57b:	int3   
1002a57c:	int3   
1002a57d:	int3   
1002a57e:	int3   
1002a57f:	int3   
1002a580:	lea    ecx,[ebp-0x18]
1002a583:	jmp    0x1000f830
1002a588:	mov    edx,DWORD PTR [esp+0x8]
1002a58c:	lea    eax,[edx+0xc]
1002a58f:	mov    ecx,DWORD PTR [edx-0x5c]
1002a592:	xor    ecx,eax
1002a594:	call   0x10015b2b
1002a599:	mov    eax,0x100851f8
1002a59e:	jmp    0x10015bf5
1002a5a3:	int3   
1002a5a4:	int3   
1002a5a5:	int3   
1002a5a6:	int3   
1002a5a7:	int3   
1002a5a8:	int3   
1002a5a9:	int3   
1002a5aa:	int3   
1002a5ab:	int3   
1002a5ac:	int3   
1002a5ad:	int3   
1002a5ae:	int3   
1002a5af:	int3   
1002a5b0:	lea    ecx,[ebp-0x60]
1002a5b3:	jmp    0x10002bb0
1002a5b8:	mov    edx,DWORD PTR [esp+0x8]
1002a5bc:	lea    eax,[edx+0xc]
1002a5bf:	mov    ecx,DWORD PTR [edx-0x68]
1002a5c2:	xor    ecx,eax
1002a5c4:	call   0x10015b2b
1002a5c9:	mov    eax,0x10085224
1002a5ce:	jmp    0x10015bf5
1002a5d3:	int3   
1002a5d4:	int3   
1002a5d5:	int3   
1002a5d6:	int3   
1002a5d7:	int3   
1002a5d8:	int3   
1002a5d9:	int3   
1002a5da:	int3   
1002a5db:	int3   
1002a5dc:	int3   
1002a5dd:	int3   
1002a5de:	int3   
1002a5df:	int3   
1002a5e0:	lea    ecx,[ebp-0x58]
1002a5e3:	jmp    0x10002bb0
1002a5e8:	mov    edx,DWORD PTR [esp+0x8]
1002a5ec:	lea    eax,[edx+0xc]
1002a5ef:	mov    ecx,DWORD PTR [edx-0x58]
1002a5f2:	xor    ecx,eax
1002a5f4:	call   0x10015b2b
1002a5f9:	mov    eax,0x10085250
1002a5fe:	jmp    0x10015bf5
1002a603:	int3   
1002a604:	int3   
1002a605:	int3   
1002a606:	int3   
1002a607:	int3   
1002a608:	int3   
1002a609:	int3   
1002a60a:	int3   
1002a60b:	int3   
1002a60c:	int3   
1002a60d:	int3   
1002a60e:	int3   
1002a60f:	int3   
1002a610:	mov    eax,DWORD PTR [ebp-0x14]
1002a613:	push   eax
1002a614:	mov    ecx,DWORD PTR [ebp-0x1c]
1002a617:	push   ecx
1002a618:	call   0x10001280
1002a61d:	add    esp,0x8
1002a620:	ret    
1002a621:	mov    edx,DWORD PTR [esp+0x8]
1002a625:	lea    eax,[edx+0xc]
1002a628:	mov    ecx,DWORD PTR [edx-0x2c]
1002a62b:	xor    ecx,eax
1002a62d:	call   0x10015b2b
1002a632:	mov    eax,0x100852b0
1002a637:	jmp    0x10015bf5
1002a63c:	int3   
1002a63d:	int3   
1002a63e:	int3   
1002a63f:	int3   
1002a640:	mov    edx,DWORD PTR [esp+0x8]
1002a644:	lea    eax,[edx+0xc]
1002a647:	mov    ecx,DWORD PTR [edx-0x38]
1002a64a:	xor    ecx,eax
1002a64c:	call   0x10015b2b
1002a651:	mov    eax,0x10085308
1002a656:	jmp    0x10015bf5
1002a65b:	int3   
1002a65c:	int3   
1002a65d:	int3   
1002a65e:	int3   
1002a65f:	int3   
1002a660:	lea    ecx,[ebp-0x14]
1002a663:	jmp    0x10003b40
1002a668:	mov    edx,DWORD PTR [esp+0x8]
1002a66c:	lea    eax,[edx+0xc]
1002a66f:	mov    ecx,DWORD PTR [edx-0x10]
1002a672:	xor    ecx,eax
1002a674:	call   0x10015b2b
1002a679:	mov    eax,0x10085334
1002a67e:	jmp    0x10015bf5
1002a683:	lea    ecx,[ebp-0x3c]
1002a686:	jmp    0x10003b40
1002a68b:	lea    ecx,[ebp-0x40]
1002a68e:	jmp    0x10003b40
1002a693:	mov    edx,DWORD PTR [esp+0x8]
1002a697:	lea    eax,[edx+0xc]
1002a69a:	mov    ecx,DWORD PTR [edx-0x78]
1002a69d:	xor    ecx,eax
1002a69f:	call   0x10015b2b
1002a6a4:	mov    eax,0x10085408
1002a6a9:	jmp    0x10015bf5
1002a6ae:	lea    ecx,[ebp-0x28]
1002a6b1:	jmp    0x10002bb0
1002a6b6:	mov    edx,DWORD PTR [esp+0x8]
1002a6ba:	lea    eax,[edx+0xc]
1002a6bd:	mov    ecx,DWORD PTR [edx-0x54]
1002a6c0:	xor    ecx,eax
1002a6c2:	call   0x10015b2b
1002a6c7:	mov    eax,0x100855ec
1002a6cc:	jmp    0x10015bf5
1002a6d1:	lea    ecx,[ebp-0x28]
1002a6d4:	jmp    0x10002bb0
1002a6d9:	mov    edx,DWORD PTR [esp+0x8]
1002a6dd:	lea    eax,[edx+0xc]
1002a6e0:	mov    ecx,DWORD PTR [edx-0x54]
1002a6e3:	xor    ecx,eax
1002a6e5:	call   0x10015b2b
1002a6ea:	mov    eax,0x10085618
1002a6ef:	jmp    0x10015bf5
1002a6f4:	mov    edx,DWORD PTR [esp+0x8]
1002a6f8:	lea    eax,[edx+0xc]
1002a6fb:	mov    ecx,DWORD PTR [edx-0x14]
1002a6fe:	xor    ecx,eax
1002a700:	call   0x10015b2b
1002a705:	mov    eax,0x10085838
1002a70a:	jmp    0x10015bf5
1002a70f:	int3   
1002a710:	lea    ecx,[ebp-0x50]
1002a713:	jmp    0x10003320
1002a718:	lea    ecx,[ebp-0x4c]
1002a71b:	jmp    0x10003320
1002a720:	mov    edx,DWORD PTR [esp+0x8]
1002a724:	lea    eax,[edx-0x5c]
1002a727:	mov    ecx,DWORD PTR [edx-0x60]
1002a72a:	xor    ecx,eax
1002a72c:	call   0x10015b2b
1002a731:	mov    eax,0x10085e24
1002a736:	jmp    0x10015bf5
1002a73b:	int3   
1002a73c:	int3   
1002a73d:	int3   
1002a73e:	int3   
1002a73f:	int3   
1002a740:	lea    ecx,[ebp-0x3c]
1002a743:	jmp    0x10003320
1002a748:	lea    ecx,[ebp-0x58]
1002a74b:	jmp    0x10003320
1002a750:	mov    edx,DWORD PTR [esp+0x8]
1002a754:	lea    eax,[edx-0x54]
1002a757:	mov    ecx,DWORD PTR [edx-0x58]
1002a75a:	xor    ecx,eax
1002a75c:	call   0x10015b2b
1002a761:	add    eax,0x8
1002a764:	mov    ecx,DWORD PTR [edx-0x8]
1002a767:	xor    ecx,eax
1002a769:	call   0x10015b2b
1002a76e:	mov    eax,0x10085e58
1002a773:	jmp    0x10015bf5
1002a778:	int3   
1002a779:	int3   
1002a77a:	int3   
1002a77b:	int3   
1002a77c:	int3   
1002a77d:	int3   
1002a77e:	int3   
1002a77f:	int3   
1002a780:	mov    ecx,DWORD PTR [ebp+0x4]
1002a783:	jmp    0x10003320
1002a788:	mov    edx,DWORD PTR [esp+0x8]
1002a78c:	lea    eax,[edx-0xc]
1002a78f:	mov    ecx,DWORD PTR [edx-0x10]
1002a792:	xor    ecx,eax
1002a794:	call   0x10015b2b
1002a799:	mov    eax,0x10085e84
1002a79e:	jmp    0x10015bf5
1002a7a3:	int3   
1002a7a4:	int3   
1002a7a5:	int3   
1002a7a6:	int3   
1002a7a7:	int3   
1002a7a8:	int3   
1002a7a9:	int3   
1002a7aa:	int3   
1002a7ab:	int3   
1002a7ac:	int3   
1002a7ad:	int3   
1002a7ae:	int3   
1002a7af:	int3   
1002a7b0:	lea    ecx,[ebp-0x11]
1002a7b3:	jmp    0x10006ca0
1002a7b8:	lea    eax,[ebp+0x4]
1002a7bb:	jmp    0x10008fd0
1002a7c0:	lea    ecx,[ebp-0x10]
1002a7c3:	jmp    0x10003290
1002a7c8:	mov    edx,DWORD PTR [esp+0x8]
1002a7cc:	lea    eax,[edx-0x14]
1002a7cf:	mov    ecx,DWORD PTR [edx-0x18]
1002a7d2:	xor    ecx,eax
1002a7d4:	call   0x10015b2b
1002a7d9:	mov    eax,0x10085ec0
1002a7de:	jmp    0x10015bf5
1002a7e3:	int3   
1002a7e4:	int3   
1002a7e5:	int3   
1002a7e6:	int3   
1002a7e7:	int3   
1002a7e8:	int3   
1002a7e9:	int3   
1002a7ea:	int3   
1002a7eb:	int3   
1002a7ec:	int3   
1002a7ed:	int3   
1002a7ee:	int3   
1002a7ef:	int3   
1002a7f0:	lea    ecx,[ebp+0x8]
1002a7f3:	jmp    0x10003b40
1002a7f8:	lea    ecx,[ebp-0x43c]
1002a7fe:	jmp    0x10003290
1002a803:	mov    edx,DWORD PTR [esp+0x8]
1002a807:	lea    eax,[edx-0x444]
1002a80d:	mov    ecx,DWORD PTR [edx-0x448]
1002a813:	xor    ecx,eax
1002a815:	call   0x10015b2b
1002a81a:	add    eax,0x10
1002a81d:	mov    ecx,DWORD PTR [edx-0x4]
1002a820:	xor    ecx,eax
1002a822:	call   0x10015b2b
1002a827:	mov    eax,0x10085ef4
1002a82c:	jmp    0x10015bf5
1002a831:	int3   
1002a832:	int3   
1002a833:	int3   
1002a834:	int3   
1002a835:	int3   
1002a836:	int3   
1002a837:	int3   
1002a838:	int3   
1002a839:	int3   
1002a83a:	int3   
1002a83b:	int3   
1002a83c:	int3   
1002a83d:	int3   
1002a83e:	int3   
1002a83f:	int3   
1002a840:	mov    edx,DWORD PTR [esp+0x8]
1002a844:	lea    eax,[edx+0xc]
1002a847:	mov    ecx,DWORD PTR [edx-0x1c]
1002a84a:	xor    ecx,eax
1002a84c:	call   0x10015b2b
1002a851:	mov    eax,0x10085f80
1002a856:	jmp    0x10015bf5
1002a85b:	int3   
1002a85c:	int3   
1002a85d:	int3   
1002a85e:	int3   
1002a85f:	int3   
1002a860:	mov    edx,DWORD PTR [esp+0x8]
1002a864:	lea    eax,[edx+0xc]
1002a867:	mov    ecx,DWORD PTR [edx-0x2c]
1002a86a:	xor    ecx,eax
1002a86c:	call   0x10015b2b
1002a871:	mov    eax,0x1008600c
1002a876:	jmp    0x10015bf5
1002a87b:	int3   
1002a87c:	int3   
1002a87d:	int3   
1002a87e:	int3   
1002a87f:	int3   
1002a880:	lea    ecx,[ebp+0x8]
1002a883:	jmp    0x10004290
1002a888:	mov    edx,DWORD PTR [esp+0x8]
1002a88c:	lea    eax,[edx-0x14]
1002a88f:	mov    ecx,DWORD PTR [edx-0x18]
1002a892:	xor    ecx,eax
1002a894:	call   0x10015b2b
1002a899:	mov    eax,0x10086038
1002a89e:	jmp    0x10015bf5
1002a8a3:	int3   
1002a8a4:	int3   
1002a8a5:	int3   
1002a8a6:	int3   
1002a8a7:	int3   
1002a8a8:	int3   
1002a8a9:	int3   
1002a8aa:	int3   
1002a8ab:	int3   
1002a8ac:	int3   
1002a8ad:	int3   
1002a8ae:	int3   
1002a8af:	int3   
1002a8b0:	mov    ecx,DWORD PTR [ebp-0x10]
1002a8b3:	jmp    0x1001637c
1002a8b8:	mov    edx,DWORD PTR [esp+0x8]
1002a8bc:	lea    eax,[edx-0xc]
1002a8bf:	mov    ecx,DWORD PTR [edx-0x10]
1002a8c2:	xor    ecx,eax
1002a8c4:	call   0x10015b2b
1002a8c9:	mov    eax,0x10086064
1002a8ce:	jmp    0x10015bf5
1002a8d3:	int3   
1002a8d4:	int3   
1002a8d5:	int3   
1002a8d6:	int3   
1002a8d7:	int3   
1002a8d8:	int3   
1002a8d9:	int3   
1002a8da:	int3   
1002a8db:	int3   
1002a8dc:	int3   
1002a8dd:	int3   
1002a8de:	int3   
1002a8df:	int3   
1002a8e0:	mov    ecx,DWORD PTR [ebp-0x10]
1002a8e3:	jmp    0x1001637c
1002a8e8:	mov    edx,DWORD PTR [esp+0x8]
1002a8ec:	lea    eax,[edx-0xc]
1002a8ef:	mov    ecx,DWORD PTR [edx-0x10]
1002a8f2:	xor    ecx,eax
1002a8f4:	call   0x10015b2b
1002a8f9:	mov    eax,0x10086090
1002a8fe:	jmp    0x10015bf5
1002a903:	int3   
1002a904:	int3   
1002a905:	int3   
1002a906:	int3   
1002a907:	int3   
1002a908:	int3   
1002a909:	int3   
1002a90a:	int3   
1002a90b:	int3   
1002a90c:	int3   
1002a90d:	int3   
1002a90e:	int3   
1002a90f:	int3   
1002a910:	mov    ecx,DWORD PTR [ebp+0x4]
1002a913:	jmp    0x1001637c
1002a918:	mov    edx,DWORD PTR [esp+0x8]
1002a91c:	lea    eax,[edx-0x4]
1002a91f:	mov    ecx,DWORD PTR [edx-0x8]
1002a922:	xor    ecx,eax
1002a924:	call   0x10015b2b
1002a929:	mov    eax,0x100860bc
1002a92e:	jmp    0x10015bf5
1002a933:	int3   
1002a934:	int3   
1002a935:	int3   
1002a936:	int3   
1002a937:	int3   
1002a938:	int3   
1002a939:	int3   
1002a93a:	int3   
1002a93b:	int3   
1002a93c:	int3   
1002a93d:	int3   
1002a93e:	int3   
1002a93f:	int3   
1002a940:	mov    ecx,DWORD PTR [ebp-0x10]
1002a943:	jmp    0x1001637c
1002a948:	mov    edx,DWORD PTR [esp+0x8]
1002a94c:	lea    eax,[edx-0x8]
1002a94f:	mov    ecx,DWORD PTR [edx-0xc]
1002a952:	xor    ecx,eax
1002a954:	call   0x10015b2b
1002a959:	mov    eax,0x100860e8
1002a95e:	jmp    0x10015bf5
1002a963:	int3   
1002a964:	int3   
1002a965:	int3   
1002a966:	int3   
1002a967:	int3   
1002a968:	int3   
1002a969:	int3   
1002a96a:	int3   
1002a96b:	int3   
1002a96c:	int3   
1002a96d:	int3   
1002a96e:	int3   
1002a96f:	int3   
1002a970:	mov    ecx,DWORD PTR [ebp+0x4]
1002a973:	jmp    0x10007a50
1002a978:	mov    edx,DWORD PTR [esp+0x8]
1002a97c:	lea    eax,[edx-0x4]
1002a97f:	mov    ecx,DWORD PTR [edx-0x8]
1002a982:	xor    ecx,eax
1002a984:	call   0x10015b2b
1002a989:	mov    eax,0x10086114
1002a98e:	jmp    0x10015bf5
1002a993:	int3   
1002a994:	int3   
1002a995:	int3   
1002a996:	int3   
1002a997:	int3   
1002a998:	int3   
1002a999:	int3   
1002a99a:	int3   
1002a99b:	int3   
1002a99c:	int3   
1002a99d:	int3   
1002a99e:	int3   
1002a99f:	int3   
1002a9a0:	mov    ecx,DWORD PTR [ebp-0x10]
1002a9a3:	jmp    0x10004290
1002a9a8:	mov    edx,DWORD PTR [esp+0x8]
1002a9ac:	lea    eax,[edx-0x10]
1002a9af:	mov    ecx,DWORD PTR [edx-0x14]
1002a9b2:	xor    ecx,eax
1002a9b4:	call   0x10015b2b
1002a9b9:	mov    eax,0x10086140
1002a9be:	jmp    0x10015bf5
1002a9c3:	int3   
1002a9c4:	int3   
1002a9c5:	int3   
1002a9c6:	int3   
1002a9c7:	int3   
1002a9c8:	int3   
1002a9c9:	int3   
1002a9ca:	int3   
1002a9cb:	int3   
1002a9cc:	int3   
1002a9cd:	int3   
1002a9ce:	int3   
1002a9cf:	int3   
1002a9d0:	mov    ecx,DWORD PTR [ebp-0x10]
1002a9d3:	jmp    0x10002bb0
1002a9d8:	mov    edx,DWORD PTR [esp+0x8]
1002a9dc:	lea    eax,[edx-0x10]
1002a9df:	mov    ecx,DWORD PTR [edx-0x14]
1002a9e2:	xor    ecx,eax
1002a9e4:	call   0x10015b2b
1002a9e9:	mov    eax,0x1008616c
1002a9ee:	jmp    0x10015bf5
1002a9f3:	int3   
1002a9f4:	int3   
1002a9f5:	int3   
1002a9f6:	int3   
1002a9f7:	int3   
1002a9f8:	int3   
1002a9f9:	int3   
1002a9fa:	int3   
1002a9fb:	int3   
1002a9fc:	int3   
1002a9fd:	int3   
1002a9fe:	int3   
1002a9ff:	int3   
1002aa00:	mov    eax,DWORD PTR [ebp-0x14]
1002aa03:	push   eax
1002aa04:	mov    ecx,DWORD PTR [ebp-0x18]
1002aa07:	push   ecx
1002aa08:	call   0x10001280
1002aa0d:	add    esp,0x8
1002aa10:	ret    
1002aa11:	mov    edx,DWORD PTR [esp+0x8]
1002aa15:	lea    eax,[edx+0xc]
1002aa18:	mov    ecx,DWORD PTR [edx-0x1c]
1002aa1b:	xor    ecx,eax
1002aa1d:	call   0x10015b2b
1002aa22:	mov    eax,0x100861cc
1002aa27:	jmp    0x10015bf5
1002aa2c:	int3   
1002aa2d:	int3   
1002aa2e:	int3   
1002aa2f:	int3   
1002aa30:	mov    eax,DWORD PTR [ebp-0x14]
1002aa33:	push   eax
1002aa34:	mov    ecx,DWORD PTR [ebp-0x18]
1002aa37:	push   ecx
1002aa38:	call   0x10001280
1002aa3d:	add    esp,0x8
1002aa40:	ret    
1002aa41:	mov    edx,DWORD PTR [esp+0x8]
1002aa45:	lea    eax,[edx+0xc]
1002aa48:	mov    ecx,DWORD PTR [edx-0x1c]
1002aa4b:	xor    ecx,eax
1002aa4d:	call   0x10015b2b
1002aa52:	mov    eax,0x1008622c
1002aa57:	jmp    0x10015bf5
1002aa5c:	int3   
1002aa5d:	int3   
1002aa5e:	int3   
1002aa5f:	int3   
1002aa60:	mov    ecx,DWORD PTR [ebp-0x10]
1002aa63:	jmp    0x10004290
1002aa68:	mov    edx,DWORD PTR [esp+0x8]
1002aa6c:	lea    eax,[edx-0xc]
1002aa6f:	mov    ecx,DWORD PTR [edx-0x10]
1002aa72:	xor    ecx,eax
1002aa74:	call   0x10015b2b
1002aa79:	mov    eax,0x10086258
1002aa7e:	jmp    0x10015bf5
1002aa83:	int3   
1002aa84:	int3   
1002aa85:	int3   
1002aa86:	int3   
1002aa87:	int3   
1002aa88:	int3   
1002aa89:	int3   
1002aa8a:	int3   
1002aa8b:	int3   
1002aa8c:	int3   
1002aa8d:	int3   
1002aa8e:	int3   
1002aa8f:	int3   
1002aa90:	mov    ecx,DWORD PTR [ebp-0x10]
1002aa93:	jmp    0x10002bb0
1002aa98:	mov    edx,DWORD PTR [esp+0x8]
1002aa9c:	lea    eax,[edx-0xc]
1002aa9f:	mov    ecx,DWORD PTR [edx-0x10]
1002aaa2:	xor    ecx,eax
1002aaa4:	call   0x10015b2b
1002aaa9:	mov    eax,0x10086284
1002aaae:	jmp    0x10015bf5
1002aab3:	int3   
1002aab4:	int3   
1002aab5:	int3   
1002aab6:	int3   
1002aab7:	int3   
1002aab8:	int3   
1002aab9:	int3   
1002aaba:	int3   
1002aabb:	int3   
1002aabc:	int3   
1002aabd:	int3   
1002aabe:	int3   
1002aabf:	int3   
1002aac0:	lea    ecx,[ebp+0x8]
1002aac3:	jmp    0x10002bb0
1002aac8:	mov    edx,DWORD PTR [esp+0x8]
1002aacc:	lea    eax,[edx-0x14]
1002aacf:	mov    ecx,DWORD PTR [edx-0x18]
1002aad2:	xor    ecx,eax
1002aad4:	call   0x10015b2b
1002aad9:	mov    eax,0x100862b0
1002aade:	jmp    0x10015bf5
1002aae3:	int3   
1002aae4:	int3   
1002aae5:	int3   
1002aae6:	int3   
1002aae7:	int3   
1002aae8:	int3   
1002aae9:	int3   
1002aaea:	int3   
1002aaeb:	int3   
1002aaec:	int3   
1002aaed:	int3   
1002aaee:	int3   
1002aaef:	int3   
1002aaf0:	mov    eax,DWORD PTR [ebp-0x10]
1002aaf3:	and    eax,0x1
1002aaf6:	je     0x1002ab08
1002aafc:	and    DWORD PTR [ebp-0x10],0xfffffffe
1002ab00:	mov    ecx,DWORD PTR [ebp+0x4]
1002ab03:	jmp    0x10003b40
1002ab08:	ret    
1002ab09:	mov    edx,DWORD PTR [esp+0x8]
1002ab0d:	lea    eax,[edx-0x10]
1002ab10:	mov    ecx,DWORD PTR [edx-0x14]
1002ab13:	xor    ecx,eax
1002ab15:	call   0x10015b2b
1002ab1a:	mov    eax,0x100862dc
1002ab1f:	jmp    0x10015bf5
1002ab24:	int3   
1002ab25:	int3   
1002ab26:	int3   
1002ab27:	int3   
1002ab28:	int3   
1002ab29:	int3   
1002ab2a:	int3   
1002ab2b:	int3   
1002ab2c:	int3   
1002ab2d:	int3   
1002ab2e:	int3   
1002ab2f:	int3   
1002ab30:	lea    ecx,[ebp-0x10]
1002ab33:	jmp    0x10003b40
1002ab38:	mov    edx,DWORD PTR [esp+0x8]
1002ab3c:	lea    eax,[edx-0xc]
1002ab3f:	mov    ecx,DWORD PTR [edx-0x10]
1002ab42:	xor    ecx,eax
1002ab44:	call   0x10015b2b
1002ab49:	mov    eax,0x10086308
1002ab4e:	jmp    0x10015bf5
1002ab53:	int3   
1002ab54:	int3   
1002ab55:	int3   
1002ab56:	int3   
1002ab57:	int3   
1002ab58:	int3   
1002ab59:	int3   
1002ab5a:	int3   
1002ab5b:	int3   
1002ab5c:	int3   
1002ab5d:	int3   
1002ab5e:	int3   
1002ab5f:	int3   
1002ab60:	mov    eax,DWORD PTR [ebp-0x10]
1002ab63:	and    eax,0x1
1002ab66:	je     0x1002ab78
1002ab6c:	and    DWORD PTR [ebp-0x10],0xfffffffe
1002ab70:	mov    ecx,DWORD PTR [ebp+0x4]
1002ab73:	jmp    0x10003b40
1002ab78:	ret    
1002ab79:	mov    edx,DWORD PTR [esp+0x8]
1002ab7d:	lea    eax,[edx-0xc]
1002ab80:	mov    ecx,DWORD PTR [edx-0x10]
1002ab83:	xor    ecx,eax
1002ab85:	call   0x10015b2b
1002ab8a:	mov    eax,0x10086334
1002ab8f:	jmp    0x10015bf5
1002ab94:	int3   
1002ab95:	int3   
1002ab96:	int3   
1002ab97:	int3   
1002ab98:	int3   
1002ab99:	int3   
1002ab9a:	int3   
1002ab9b:	int3   
1002ab9c:	int3   
1002ab9d:	int3   
1002ab9e:	int3   
1002ab9f:	int3   
1002aba0:	lea    eax,[ebp-0x14]
1002aba3:	jmp    0x10008fd0
1002aba8:	lea    ecx,[ebp-0x10]
1002abab:	jmp    0x10003320
1002abb0:	mov    edx,DWORD PTR [esp+0x8]
1002abb4:	lea    eax,[edx-0x1c]
1002abb7:	mov    ecx,DWORD PTR [edx-0x20]
1002abba:	xor    ecx,eax
1002abbc:	call   0x10015b2b
1002abc1:	mov    eax,0x10086368
1002abc6:	jmp    0x10015bf5
1002abcb:	int3   
1002abcc:	int3   
1002abcd:	int3   
1002abce:	int3   
1002abcf:	int3   
1002abd0:	lea    ecx,[ebp+0x4]
1002abd3:	jmp    0x10003b40
1002abd8:	mov    eax,DWORD PTR [ebp-0x10]
1002abdb:	push   eax
1002abdc:	call   0x10015b26
1002abe1:	pop    ecx
1002abe2:	ret    
1002abe3:	mov    edx,DWORD PTR [esp+0x8]
1002abe7:	lea    eax,[edx-0x8]
1002abea:	mov    ecx,DWORD PTR [edx-0xc]
1002abed:	xor    ecx,eax
1002abef:	call   0x10015b2b
1002abf4:	mov    eax,0x1008639c
1002abf9:	jmp    0x10015bf5
1002abfe:	int3   
1002abff:	int3   
1002ac00:	lea    ecx,[ebp-0x28]
1002ac03:	jmp    0x10002bb0
1002ac08:	mov    edx,DWORD PTR [esp+0x8]
1002ac0c:	lea    eax,[edx-0x28]
1002ac0f:	mov    ecx,DWORD PTR [edx-0x2c]
1002ac12:	xor    ecx,eax
1002ac14:	call   0x10015b2b
1002ac19:	mov    eax,0x100863c8
1002ac1e:	jmp    0x10015bf5
1002ac23:	int3   
1002ac24:	int3   
1002ac25:	int3   
1002ac26:	int3   
1002ac27:	int3   
1002ac28:	int3   
1002ac29:	int3   
1002ac2a:	int3   
1002ac2b:	int3   
1002ac2c:	int3   
1002ac2d:	int3   
1002ac2e:	int3   
1002ac2f:	int3   
1002ac30:	mov    ecx,DWORD PTR [ebp-0x10]
1002ac33:	jmp    0x10003b40
1002ac38:	mov    edx,DWORD PTR [esp+0x8]
1002ac3c:	lea    eax,[edx-0xc]
1002ac3f:	mov    ecx,DWORD PTR [edx-0x10]
1002ac42:	xor    ecx,eax
1002ac44:	call   0x10015b2b
1002ac49:	mov    eax,0x100863f4
1002ac4e:	jmp    0x10015bf5
1002ac53:	int3   
1002ac54:	int3   
1002ac55:	int3   
1002ac56:	int3   
1002ac57:	int3   
1002ac58:	int3   
1002ac59:	int3   
1002ac5a:	int3   
1002ac5b:	int3   
1002ac5c:	int3   
1002ac5d:	int3   
1002ac5e:	int3   
1002ac5f:	int3   
1002ac60:	mov    ecx,DWORD PTR [ebp-0x10]
1002ac63:	jmp    0x10003b40
1002ac68:	mov    edx,DWORD PTR [esp+0x8]
1002ac6c:	lea    eax,[edx-0xc]
1002ac6f:	mov    ecx,DWORD PTR [edx-0x10]
1002ac72:	xor    ecx,eax
1002ac74:	call   0x10015b2b
1002ac79:	mov    eax,0x10086420
1002ac7e:	jmp    0x10015bf5
1002ac83:	int3   
1002ac84:	int3   
1002ac85:	int3   
1002ac86:	int3   
1002ac87:	int3   
1002ac88:	int3   
1002ac89:	int3   
1002ac8a:	int3   
1002ac8b:	int3   
1002ac8c:	int3   
1002ac8d:	int3   
1002ac8e:	int3   
1002ac8f:	int3   
1002ac90:	lea    ecx,[ebp-0x50]
1002ac93:	jmp    0x10002bb0
1002ac98:	mov    edx,DWORD PTR [esp+0x8]
1002ac9c:	lea    eax,[edx+0xc]
1002ac9f:	mov    ecx,DWORD PTR [edx-0x70]
1002aca2:	xor    ecx,eax
1002aca4:	call   0x10015b2b
1002aca9:	mov    eax,0x1008644c
1002acae:	jmp    0x10015bf5
1002acb3:	int3   
1002acb4:	int3   
1002acb5:	int3   
1002acb6:	int3   
1002acb7:	int3   
1002acb8:	int3   
1002acb9:	int3   
1002acba:	int3   
1002acbb:	int3   
1002acbc:	int3   
1002acbd:	int3   
1002acbe:	int3   
1002acbf:	int3   
1002acc0:	lea    ecx,[ebp-0x54]
1002acc3:	jmp    0x10002bb0
1002acc8:	mov    edx,DWORD PTR [esp+0x8]
1002accc:	lea    eax,[edx-0x48]
1002accf:	mov    ecx,DWORD PTR [edx-0x4c]
1002acd2:	xor    ecx,eax
1002acd4:	call   0x10015b2b
1002acd9:	mov    eax,0x10086478
1002acde:	jmp    0x10015bf5
1002ace3:	int3   
1002ace4:	int3   
1002ace5:	int3   
1002ace6:	int3   
1002ace7:	int3   
1002ace8:	int3   
1002ace9:	int3   
1002acea:	int3   
1002aceb:	int3   
1002acec:	int3   
1002aced:	int3   
1002acee:	int3   
1002acef:	int3   
1002acf0:	lea    ecx,[ebp-0x98]
1002acf6:	jmp    0x10002bb0
1002acfb:	lea    ecx,[ebp-0x98]
1002ad01:	jmp    0x10002bb0
1002ad06:	lea    ecx,[ebp-0x7c]
1002ad09:	jmp    0x10002bb0
1002ad0e:	mov    edx,DWORD PTR [esp+0x8]
1002ad12:	lea    eax,[edx-0xa8]
1002ad18:	mov    ecx,DWORD PTR [edx-0xac]
1002ad1e:	xor    ecx,eax
1002ad20:	call   0x10015b2b
1002ad25:	mov    eax,0x100864b4
1002ad2a:	jmp    0x10015bf5
1002ad2f:	int3   
1002ad30:	mov    ecx,DWORD PTR [ebp+0x4]
1002ad33:	jmp    0x10003290
1002ad38:	mov    ecx,DWORD PTR [ebp+0x4]
1002ad3b:	add    ecx,0x894
1002ad41:	jmp    0x1000a040
1002ad46:	mov    eax,DWORD PTR [ebp-0x2c]
1002ad49:	push   eax
1002ad4a:	call   0x10015b26
1002ad4f:	pop    ecx
1002ad50:	ret    
1002ad51:	mov    eax,DWORD PTR [ebp-0x30]
1002ad54:	and    eax,0x1
1002ad57:	je     0x1002ad69
1002ad5d:	and    DWORD PTR [ebp-0x30],0xfffffffe
1002ad61:	lea    ecx,[ebp-0x28]
1002ad64:	jmp    0x10002bb0
1002ad69:	ret    
1002ad6a:	mov    edx,DWORD PTR [esp+0x8]
1002ad6e:	lea    eax,[edx-0x34]
1002ad71:	mov    ecx,DWORD PTR [edx-0x38]
1002ad74:	xor    ecx,eax
1002ad76:	call   0x10015b2b
1002ad7b:	mov    eax,0x10086500
1002ad80:	jmp    0x10015bf5
1002ad85:	int3   
1002ad86:	int3   
1002ad87:	int3   
1002ad88:	int3   
1002ad89:	int3   
1002ad8a:	int3   
1002ad8b:	int3   
1002ad8c:	int3   
1002ad8d:	int3   
1002ad8e:	int3   
1002ad8f:	int3   
1002ad90:	lea    ecx,[ebp-0x2c]
1002ad93:	jmp    0x10003290
1002ad98:	mov    edx,DWORD PTR [esp+0x8]
1002ad9c:	lea    eax,[edx-0x38]
1002ad9f:	mov    ecx,DWORD PTR [edx-0x3c]
1002ada2:	xor    ecx,eax
1002ada4:	call   0x10015b2b
1002ada9:	mov    eax,0x1008652c
1002adae:	jmp    0x10015bf5
1002adb3:	int3   
1002adb4:	int3   
1002adb5:	int3   
1002adb6:	int3   
1002adb7:	int3   
1002adb8:	int3   
1002adb9:	int3   
1002adba:	int3   
1002adbb:	int3   
1002adbc:	int3   
1002adbd:	int3   
1002adbe:	int3   
1002adbf:	int3   
1002adc0:	lea    ecx,[ebp-0x54]
1002adc3:	jmp    0x10002bb0
1002adc8:	mov    edx,DWORD PTR [esp+0x8]
1002adcc:	lea    eax,[edx-0x5c]
1002adcf:	mov    ecx,DWORD PTR [edx-0x60]
1002add2:	xor    ecx,eax
1002add4:	call   0x10015b2b
1002add9:	mov    eax,0x10086558
1002adde:	jmp    0x10015bf5
1002ade3:	int3   
1002ade4:	int3   
1002ade5:	int3   
1002ade6:	int3   
1002ade7:	int3   
1002ade8:	int3   
1002ade9:	int3   
1002adea:	int3   
1002adeb:	int3   
1002adec:	int3   
1002aded:	int3   
1002adee:	int3   
1002adef:	int3   
1002adf0:	lea    ecx,[ebp-0x54]
1002adf3:	jmp    0x10002bb0
1002adf8:	mov    edx,DWORD PTR [esp+0x8]
1002adfc:	lea    eax,[edx-0x5c]
1002adff:	mov    ecx,DWORD PTR [edx-0x60]
1002ae02:	xor    ecx,eax
1002ae04:	call   0x10015b2b
1002ae09:	mov    eax,0x10086584
1002ae0e:	jmp    0x10015bf5
1002ae13:	int3   
1002ae14:	int3   
1002ae15:	int3   
1002ae16:	int3   
1002ae17:	int3   
1002ae18:	int3   
1002ae19:	int3   
1002ae1a:	int3   
1002ae1b:	int3   
1002ae1c:	int3   
1002ae1d:	int3   
1002ae1e:	int3   
1002ae1f:	int3   
1002ae20:	lea    ecx,[ebp-0x54]
1002ae23:	jmp    0x10002bb0
1002ae28:	mov    edx,DWORD PTR [esp+0x8]
1002ae2c:	lea    eax,[edx-0x5c]
1002ae2f:	mov    ecx,DWORD PTR [edx-0x60]
1002ae32:	xor    ecx,eax
1002ae34:	call   0x10015b2b
1002ae39:	mov    eax,0x100865b0
1002ae3e:	jmp    0x10015bf5
1002ae43:	int3   
1002ae44:	int3   
1002ae45:	int3   
1002ae46:	int3   
1002ae47:	int3   
1002ae48:	int3   
1002ae49:	int3   
1002ae4a:	int3   
1002ae4b:	int3   
1002ae4c:	int3   
1002ae4d:	int3   
1002ae4e:	int3   
1002ae4f:	int3   
1002ae50:	lea    ecx,[ebp-0x54]
1002ae53:	jmp    0x10002bb0
1002ae58:	mov    edx,DWORD PTR [esp+0x8]
1002ae5c:	lea    eax,[edx-0x5c]
1002ae5f:	mov    ecx,DWORD PTR [edx-0x60]
1002ae62:	xor    ecx,eax
1002ae64:	call   0x10015b2b
1002ae69:	mov    eax,0x100865dc
1002ae6e:	jmp    0x10015bf5
1002ae73:	int3   
1002ae74:	int3   
1002ae75:	int3   
1002ae76:	int3   
1002ae77:	int3   
1002ae78:	int3   
1002ae79:	int3   
1002ae7a:	int3   
1002ae7b:	int3   
1002ae7c:	int3   
1002ae7d:	int3   
1002ae7e:	int3   
1002ae7f:	int3   
1002ae80:	lea    ecx,[ebp-0x64]
1002ae83:	jmp    0x10004290
1002ae88:	lea    ecx,[ebp-0x48]
1002ae8b:	jmp    0x10004540
1002ae90:	mov    edx,DWORD PTR [esp+0x8]
1002ae94:	lea    eax,[edx-0x6c]
1002ae97:	mov    ecx,DWORD PTR [edx-0x70]
1002ae9a:	xor    ecx,eax
1002ae9c:	call   0x10015b2b
1002aea1:	mov    eax,0x10086610
1002aea6:	jmp    0x10015bf5
1002aeab:	int3   
1002aeac:	int3   
1002aead:	int3   
1002aeae:	int3   
1002aeaf:	int3   
1002aeb0:	lea    ecx,[ebp-0x64]
1002aeb3:	jmp    0x10002bb0
1002aeb8:	lea    ecx,[ebp-0x48]
1002aebb:	jmp    0x100044f0
1002aec0:	mov    edx,DWORD PTR [esp+0x8]
1002aec4:	lea    eax,[edx-0x6c]
1002aec7:	mov    ecx,DWORD PTR [edx-0x70]
1002aeca:	xor    ecx,eax
1002aecc:	call   0x10015b2b
1002aed1:	mov    eax,0x10086644
1002aed6:	jmp    0x10015bf5
1002aedb:	int3   
1002aedc:	int3   
1002aedd:	int3   
1002aede:	int3   
1002aedf:	int3   
1002aee0:	mov    eax,ds:0x10097914
1002aee5:	and    eax,0xfffffffe
1002aee8:	mov    ds:0x10097914,eax
1002aeed:	ret    
1002aeee:	mov    edx,DWORD PTR [esp+0x8]
1002aef2:	lea    eax,[edx]
1002aef4:	mov    ecx,DWORD PTR [edx-0x4]
1002aef7:	xor    ecx,eax
1002aef9:	call   0x10015b2b
1002aefe:	mov    eax,0x10086670
1002af03:	jmp    0x10015bf5
1002af08:	int3   
1002af09:	int3   
1002af0a:	int3   
1002af0b:	int3   
1002af0c:	int3   
1002af0d:	int3   
1002af0e:	int3   
1002af0f:	int3   
1002af10:	mov    eax,ds:0x10097924
1002af15:	and    eax,0xfffffffe
1002af18:	mov    ds:0x10097924,eax
1002af1d:	ret    
1002af1e:	mov    edx,DWORD PTR [esp+0x8]
1002af22:	lea    eax,[edx]
1002af24:	mov    ecx,DWORD PTR [edx-0x4]
1002af27:	xor    ecx,eax
1002af29:	call   0x10015b2b
1002af2e:	mov    eax,0x1008669c
1002af33:	jmp    0x10015bf5
1002af38:	int3   
1002af39:	int3   
1002af3a:	int3   
1002af3b:	int3   
1002af3c:	int3   
1002af3d:	int3   
1002af3e:	int3   
1002af3f:	int3   
1002af40:	lea    ecx,[ebp-0x4c]
1002af43:	jmp    0x10004290
1002af48:	lea    ecx,[ebp-0x30]
1002af4b:	jmp    0x10004290
1002af50:	mov    edx,DWORD PTR [esp+0x8]
1002af54:	lea    eax,[edx-0x5c]
1002af57:	mov    ecx,DWORD PTR [edx-0x60]
1002af5a:	xor    ecx,eax
1002af5c:	call   0x10015b2b
1002af61:	add    eax,0xc
1002af64:	mov    ecx,DWORD PTR [edx-0x8]
1002af67:	xor    ecx,eax
1002af69:	call   0x10015b2b
1002af6e:	mov    eax,0x100866d0
1002af73:	jmp    0x10015bf5
1002af78:	int3   
1002af79:	int3   
1002af7a:	int3   
1002af7b:	int3   
1002af7c:	int3   
1002af7d:	int3   
1002af7e:	int3   
1002af7f:	int3   
1002af80:	lea    ecx,[ebp-0x4c]
1002af83:	jmp    0x10002bb0
1002af88:	lea    ecx,[ebp-0x30]
1002af8b:	jmp    0x10002bb0
1002af90:	mov    edx,DWORD PTR [esp+0x8]
1002af94:	lea    eax,[edx-0x5c]
1002af97:	mov    ecx,DWORD PTR [edx-0x60]
1002af9a:	xor    ecx,eax
1002af9c:	call   0x10015b2b
1002afa1:	add    eax,0xc
1002afa4:	mov    ecx,DWORD PTR [edx-0x8]
1002afa7:	xor    ecx,eax
1002afa9:	call   0x10015b2b
1002afae:	mov    eax,0x10086704
1002afb3:	jmp    0x10015bf5
1002afb8:	int3   
1002afb9:	int3   
1002afba:	int3   
1002afbb:	int3   
1002afbc:	int3   
1002afbd:	int3   
1002afbe:	int3   
1002afbf:	int3   
1002afc0:	mov    eax,DWORD PTR [ebp-0x54]
1002afc3:	and    eax,0x1
1002afc6:	je     0x1002afd8
1002afcc:	and    DWORD PTR [ebp-0x54],0xfffffffe
1002afd0:	mov    ecx,DWORD PTR [ebp+0x4]
1002afd3:	jmp    0x10003b40
1002afd8:	ret    
1002afd9:	lea    ecx,[ebp-0x50]
1002afdc:	jmp    0x10002bb0
1002afe1:	mov    edx,DWORD PTR [esp+0x8]
1002afe5:	lea    eax,[edx-0x54]
1002afe8:	mov    ecx,DWORD PTR [edx-0x58]
1002afeb:	xor    ecx,eax
1002afed:	call   0x10015b2b
1002aff2:	mov    eax,0x10086738
1002aff7:	jmp    0x10015bf5
1002affc:	int3   
1002affd:	int3   
1002affe:	int3   
1002afff:	int3   
1002b000:	lea    ecx,[ebp-0x28]
1002b003:	jmp    0x10002bb0
1002b008:	mov    edx,DWORD PTR [esp+0x8]
1002b00c:	lea    eax,[edx-0x20]
1002b00f:	mov    ecx,DWORD PTR [edx-0x24]
1002b012:	xor    ecx,eax
1002b014:	call   0x10015b2b
1002b019:	mov    eax,0x10086764
1002b01e:	jmp    0x10015bf5
1002b023:	int3   
1002b024:	int3   
1002b025:	int3   
1002b026:	int3   
1002b027:	int3   
1002b028:	int3   
1002b029:	int3   
1002b02a:	int3   
1002b02b:	int3   
1002b02c:	int3   
1002b02d:	int3   
1002b02e:	int3   
1002b02f:	int3   
1002b030:	mov    eax,DWORD PTR [ebp-0x34]
1002b033:	and    eax,0x1
1002b036:	je     0x1002b048
1002b03c:	and    DWORD PTR [ebp-0x34],0xfffffffe
1002b040:	mov    ecx,DWORD PTR [ebp-0x30]
1002b043:	jmp    0x10002bb0
1002b048:	ret    
1002b049:	lea    ecx,[ebp-0x2c]
1002b04c:	jmp    0x10002bb0
1002b051:	lea    ecx,[ebp-0x38]
1002b054:	jmp    0x10003b40
1002b059:	lea    ecx,[ebp-0x2c]
1002b05c:	jmp    0x10002bb0
1002b061:	lea    ecx,[ebp-0x38]
1002b064:	jmp    0x10003b40
1002b069:	lea    ecx,[ebp-0x2c]
1002b06c:	jmp    0x10002bb0
1002b071:	lea    ecx,[ebp-0x2c]
1002b074:	jmp    0x10002bb0
1002b079:	mov    edx,DWORD PTR [esp+0x8]
1002b07d:	lea    eax,[edx-0x3c]
1002b080:	mov    ecx,DWORD PTR [edx-0x40]
1002b083:	xor    ecx,eax
1002b085:	call   0x10015b2b
1002b08a:	add    eax,0x10
1002b08d:	mov    ecx,DWORD PTR [edx-0x4]
1002b090:	xor    ecx,eax
1002b092:	call   0x10015b2b
1002b097:	mov    eax,0x100867c0
1002b09c:	jmp    0x10015bf5
1002b0a1:	int3   
1002b0a2:	int3   
1002b0a3:	int3   
1002b0a4:	int3   
1002b0a5:	int3   
1002b0a6:	int3   
1002b0a7:	int3   
1002b0a8:	int3   
1002b0a9:	int3   
1002b0aa:	int3   
1002b0ab:	int3   
1002b0ac:	int3   
1002b0ad:	int3   
1002b0ae:	int3   
1002b0af:	int3   
1002b0b0:	lea    ecx,[ebp-0x28]
1002b0b3:	jmp    0x1000a230
1002b0b8:	lea    ecx,[ebp-0xf8]
1002b0be:	jmp    0x10002bb0
1002b0c3:	lea    eax,[ebp-0x38]
1002b0c6:	jmp    0x10008fd0
1002b0cb:	mov    edx,DWORD PTR [esp+0x8]
1002b0cf:	lea    eax,[edx+0xc]
1002b0d2:	mov    ecx,DWORD PTR [edx-0x234]
1002b0d8:	xor    ecx,eax
1002b0da:	call   0x10015b2b
1002b0df:	mov    ecx,DWORD PTR [edx-0x30]
1002b0e2:	xor    ecx,eax
1002b0e4:	call   0x10015b2b
1002b0e9:	mov    eax,0x10086838
1002b0ee:	jmp    0x10015bf5
1002b0f3:	int3   
1002b0f4:	int3   
1002b0f5:	int3   
1002b0f6:	int3   
1002b0f7:	int3   
1002b0f8:	int3   
1002b0f9:	int3   
1002b0fa:	int3   
1002b0fb:	int3   
1002b0fc:	int3   
1002b0fd:	int3   
1002b0fe:	int3   
1002b0ff:	int3   
1002b100:	lea    ecx,[ebp-0x1040]
1002b106:	jmp    0x1000a230
1002b10b:	lea    ecx,[ebp-0x106c]
1002b111:	jmp    0x10002bb0
1002b116:	lea    eax,[ebp-0x104c]
1002b11c:	jmp    0x10008fd0
1002b121:	mov    edx,DWORD PTR [esp+0x8]
1002b125:	lea    eax,[edx+0xc]
1002b128:	mov    ecx,DWORD PTR [edx-0x1070]
1002b12e:	xor    ecx,eax
1002b130:	call   0x10015b2b
1002b135:	mov    ecx,DWORD PTR [edx-0xc]
1002b138:	xor    ecx,eax
1002b13a:	call   0x10015b2b
1002b13f:	mov    eax,0x100868b0
1002b144:	jmp    0x10015bf5
1002b149:	int3   
1002b14a:	int3   
1002b14b:	int3   
1002b14c:	int3   
1002b14d:	int3   
1002b14e:	int3   
1002b14f:	int3   
1002b150:	lea    ecx,[ebp-0x103c]
1002b156:	jmp    0x1000a230
1002b15b:	lea    ecx,[ebp-0x106c]
1002b161:	jmp    0x10002bb0
1002b166:	lea    eax,[ebp-0x1044]
1002b16c:	jmp    0x10008fd0
1002b171:	mov    edx,DWORD PTR [esp+0x8]
1002b175:	lea    eax,[edx+0xc]
1002b178:	mov    ecx,DWORD PTR [edx-0x1074]
1002b17e:	xor    ecx,eax
1002b180:	call   0x10015b2b
1002b185:	mov    ecx,DWORD PTR [edx-0x8]
1002b188:	xor    ecx,eax
1002b18a:	call   0x10015b2b
1002b18f:	mov    eax,0x10086928
1002b194:	jmp    0x10015bf5
1002b199:	int3   
1002b19a:	int3   
1002b19b:	int3   
1002b19c:	int3   
1002b19d:	int3   
1002b19e:	int3   
1002b19f:	int3   
1002b1a0:	lea    ecx,[ebp-0x28]
1002b1a3:	jmp    0x10002bb0
1002b1a8:	mov    edx,DWORD PTR [esp+0x8]
1002b1ac:	lea    eax,[edx-0x28]
1002b1af:	mov    ecx,DWORD PTR [edx-0x2c]
1002b1b2:	xor    ecx,eax
1002b1b4:	call   0x10015b2b
1002b1b9:	mov    eax,0x10086954
1002b1be:	jmp    0x10015bf5
1002b1c3:	int3   
1002b1c4:	int3   
1002b1c5:	int3   
1002b1c6:	int3   
1002b1c7:	int3   
1002b1c8:	int3   
1002b1c9:	int3   
1002b1ca:	int3   
1002b1cb:	int3   
1002b1cc:	int3   
1002b1cd:	int3   
1002b1ce:	int3   
1002b1cf:	int3   
1002b1d0:	lea    ecx,[ebp-0xb0]
1002b1d6:	jmp    0x1000a230
1002b1db:	lea    eax,[ebp-0x64]
1002b1de:	jmp    0x10007bf0
1002b1e3:	lea    ecx,[ebp-0xac]
1002b1e9:	jmp    0x10002bb0
1002b1ee:	lea    ecx,[ebp-0xac]
1002b1f4:	jmp    0x10002bb0
1002b1f9:	lea    ecx,[ebp-0xac]
1002b1ff:	jmp    0x10002bb0
1002b204:	lea    ecx,[ebp-0xac]
1002b20a:	jmp    0x10002bb0
1002b20f:	lea    ecx,[ebp-0xac]
1002b215:	jmp    0x10002bb0
1002b21a:	lea    ecx,[ebp-0xac]
1002b220:	jmp    0x10002bb0
1002b225:	lea    ecx,[ebp-0xac]
1002b22b:	jmp    0x10002bb0
1002b230:	lea    ecx,[ebp-0xac]
1002b236:	jmp    0x10002bb0
1002b23b:	lea    ecx,[ebp-0xac]
1002b241:	jmp    0x10002bb0
1002b246:	lea    ecx,[ebp-0x50]
1002b249:	jmp    0x10002bb0
1002b24e:	mov    edx,DWORD PTR [esp+0x8]
1002b252:	lea    eax,[edx-0xb4]
1002b258:	mov    ecx,DWORD PTR [edx-0xb8]
1002b25e:	xor    ecx,eax
1002b260:	call   0x10015b2b
1002b265:	mov    eax,0x100869d8
1002b26a:	jmp    0x10015bf5
1002b26f:	int3   
1002b270:	lea    ecx,[ebp-0x18]
1002b273:	jmp    0x10003290
1002b278:	lea    ecx,[ebp-0x1c]
1002b27b:	jmp    0x10003b40
1002b280:	mov    eax,ds:0x10097ab0
1002b285:	and    eax,0xfffffffe
1002b288:	mov    ds:0x10097ab0,eax
1002b28d:	ret    
1002b28e:	mov    edx,DWORD PTR [esp+0x8]
1002b292:	lea    eax,[edx-0x24]
1002b295:	mov    ecx,DWORD PTR [edx-0x28]
1002b298:	xor    ecx,eax
1002b29a:	call   0x10015b2b
1002b29f:	mov    eax,0x10086a14
1002b2a4:	jmp    0x10015bf5
1002b2a9:	int3   
1002b2aa:	int3   
1002b2ab:	int3   
1002b2ac:	int3   
1002b2ad:	int3   
1002b2ae:	int3   
1002b2af:	int3   
1002b2b0:	lea    ecx,[ebp-0x10]
1002b2b3:	jmp    0x10003290
1002b2b8:	mov    edx,DWORD PTR [esp+0x8]
1002b2bc:	lea    eax,[edx-0x14]
1002b2bf:	mov    ecx,DWORD PTR [edx-0x18]
1002b2c2:	xor    ecx,eax
1002b2c4:	call   0x10015b2b
1002b2c9:	mov    eax,0x10086a40
1002b2ce:	jmp    0x10015bf5
1002b2d3:	int3   
1002b2d4:	int3   
1002b2d5:	int3   
1002b2d6:	int3   
1002b2d7:	int3   
1002b2d8:	int3   
1002b2d9:	int3   
1002b2da:	int3   
1002b2db:	int3   
1002b2dc:	int3   
1002b2dd:	int3   
1002b2de:	int3   
1002b2df:	int3   
1002b2e0:	lea    ecx,[ebp-0x54]
1002b2e3:	jmp    0x10002bb0
1002b2e8:	mov    edx,DWORD PTR [esp+0x8]
1002b2ec:	lea    eax,[edx-0x54]
1002b2ef:	mov    ecx,DWORD PTR [edx-0x58]
1002b2f2:	xor    ecx,eax
1002b2f4:	call   0x10015b2b
1002b2f9:	mov    eax,0x10086a6c
1002b2fe:	jmp    0x10015bf5
1002b303:	int3   
1002b304:	int3   
1002b305:	int3   
1002b306:	int3   
1002b307:	int3   
1002b308:	int3   
1002b309:	int3   
1002b30a:	int3   
1002b30b:	int3   
1002b30c:	int3   
1002b30d:	int3   
1002b30e:	int3   
1002b30f:	int3   
1002b310:	lea    ecx,[ebp-0x58]
1002b313:	jmp    0x10003320
1002b318:	lea    eax,[ebp-0x5c]
1002b31b:	jmp    0x10008fd0
1002b320:	lea    ecx,[ebp-0x54]
1002b323:	jmp    0x10002bb0
1002b328:	lea    ecx,[ebp-0x54]
1002b32b:	jmp    0x10002bb0
1002b330:	lea    ecx,[ebp-0x54]
1002b333:	jmp    0x10002bb0
1002b338:	mov    edx,DWORD PTR [esp+0x8]
1002b33c:	lea    eax,[edx-0x5c]
1002b33f:	mov    ecx,DWORD PTR [edx-0x60]
1002b342:	xor    ecx,eax
1002b344:	call   0x10015b2b
1002b349:	mov    eax,0x10086ab8
1002b34e:	jmp    0x10015bf5
1002b353:	int3   
1002b354:	int3   
1002b355:	int3   
1002b356:	int3   
1002b357:	int3   
1002b358:	int3   
1002b359:	int3   
1002b35a:	int3   
1002b35b:	int3   
1002b35c:	int3   
1002b35d:	int3   
1002b35e:	int3   
1002b35f:	int3   
1002b360:	lea    ecx,[ebp-0x16c]
1002b366:	jmp    0x10002bb0
1002b36b:	mov    edx,DWORD PTR [esp+0x8]
1002b36f:	lea    eax,[edx-0x174]
1002b375:	mov    ecx,DWORD PTR [edx-0x178]
1002b37b:	xor    ecx,eax
1002b37d:	call   0x10015b2b
1002b382:	add    eax,0x8
1002b385:	mov    ecx,DWORD PTR [edx-0x8]
1002b388:	xor    ecx,eax
1002b38a:	call   0x10015b2b
1002b38f:	mov    eax,0x10086ae4
1002b394:	jmp    0x10015bf5
1002b399:	int3   
1002b39a:	int3   
1002b39b:	int3   
1002b39c:	int3   
1002b39d:	int3   
1002b39e:	int3   
1002b39f:	int3   
1002b3a0:	lea    ecx,[ebp-0x10]
1002b3a3:	jmp    0x10003b40
1002b3a8:	lea    ecx,[ebp-0x14]
1002b3ab:	jmp    0x10003b40
1002b3b0:	lea    ecx,[ebp-0x18]
1002b3b3:	jmp    0x10003b40
1002b3b8:	lea    ecx,[ebp-0x1c]
1002b3bb:	jmp    0x10003b40
1002b3c0:	mov    edx,DWORD PTR [esp+0x8]
1002b3c4:	lea    eax,[edx-0x18]
1002b3c7:	mov    ecx,DWORD PTR [edx-0x1c]
1002b3ca:	xor    ecx,eax
1002b3cc:	call   0x10015b2b
1002b3d1:	mov    eax,0x10086b28
1002b3d6:	jmp    0x10015bf5
1002b3db:	int3   
1002b3dc:	int3   
1002b3dd:	int3   
1002b3de:	int3   
1002b3df:	int3   
1002b3e0:	mov    eax,ds:0x10097ab4
1002b3e5:	and    eax,0xfffffffe
1002b3e8:	mov    ds:0x10097ab4,eax
1002b3ed:	ret    
1002b3ee:	mov    eax,DWORD PTR [ebp-0x30]
1002b3f1:	and    eax,0x1
1002b3f4:	je     0x1002b406
1002b3fa:	and    DWORD PTR [ebp-0x30],0xfffffffe
1002b3fe:	mov    ecx,DWORD PTR [ebp-0x34]
1002b401:	jmp    0x10003b40
1002b406:	ret    
1002b407:	lea    ecx,[ebp-0x50]
1002b40a:	jmp    0x10002bb0
1002b40f:	mov    edx,DWORD PTR [esp+0x8]
1002b413:	lea    eax,[edx+0xc]
1002b416:	mov    ecx,DWORD PTR [edx-0xa20]
1002b41c:	xor    ecx,eax
1002b41e:	call   0x10015b2b
1002b423:	mov    ecx,DWORD PTR [edx-0x8]
1002b426:	xor    ecx,eax
1002b428:	call   0x10015b2b
1002b42d:	mov    eax,0x10086b64
1002b432:	jmp    0x10015bf5
1002b437:	int3   
1002b438:	int3   
1002b439:	int3   
1002b43a:	int3   
1002b43b:	int3   
1002b43c:	int3   
1002b43d:	int3   
1002b43e:	int3   
1002b43f:	int3   
1002b440:	mov    eax,DWORD PTR [ebp-0x58]
1002b443:	and    eax,0x1
1002b446:	je     0x1002b458
1002b44c:	and    DWORD PTR [ebp-0x58],0xfffffffe
1002b450:	mov    ecx,DWORD PTR [ebp+0x4]
1002b453:	jmp    0x10003b40
1002b458:	ret    
1002b459:	lea    ecx,[ebp-0x54]
1002b45c:	jmp    0x10002bb0
1002b461:	mov    edx,DWORD PTR [esp+0x8]
1002b465:	lea    eax,[edx-0x60]
1002b468:	mov    ecx,DWORD PTR [edx-0x64]
1002b46b:	xor    ecx,eax
1002b46d:	call   0x10015b2b
1002b472:	mov    eax,0x10086b98
1002b477:	jmp    0x10015bf5
1002b47c:	int3   
1002b47d:	int3   
1002b47e:	int3   
1002b47f:	int3   
1002b480:	lea    ecx,[ebp-0x1c]
1002b483:	jmp    0x10006d60
1002b488:	mov    edx,DWORD PTR [esp+0x8]
1002b48c:	lea    eax,[edx+0xc]
1002b48f:	mov    ecx,DWORD PTR [edx-0x20]
1002b492:	xor    ecx,eax
1002b494:	call   0x10015b2b
1002b499:	mov    eax,0x10086bf8
1002b49e:	jmp    0x10015bf5
1002b4a3:	int3   
1002b4a4:	int3   
1002b4a5:	int3   
1002b4a6:	int3   
1002b4a7:	int3   
1002b4a8:	int3   
1002b4a9:	int3   
1002b4aa:	int3   
1002b4ab:	int3   
1002b4ac:	int3   
1002b4ad:	int3   
1002b4ae:	int3   
1002b4af:	int3   
1002b4b0:	lea    ecx,[ebp-0x40]
1002b4b3:	jmp    0x1000c290
1002b4b8:	mov    edx,DWORD PTR [esp+0x8]
1002b4bc:	lea    eax,[edx-0x44]
1002b4bf:	mov    ecx,DWORD PTR [edx-0x48]
1002b4c2:	xor    ecx,eax
1002b4c4:	call   0x10015b2b
1002b4c9:	mov    eax,0x10086c24
1002b4ce:	jmp    0x10015bf5
1002b4d3:	int3   
1002b4d4:	int3   
1002b4d5:	int3   
1002b4d6:	int3   
1002b4d7:	int3   
1002b4d8:	int3   
1002b4d9:	int3   
1002b4da:	int3   
1002b4db:	int3   
1002b4dc:	int3   
1002b4dd:	int3   
1002b4de:	int3   
1002b4df:	int3   
1002b4e0:	lea    eax,[ebp-0x10]
1002b4e3:	jmp    0x1000be50
1002b4e8:	mov    edx,DWORD PTR [esp+0x8]
1002b4ec:	lea    eax,[edx-0x34]
1002b4ef:	mov    ecx,DWORD PTR [edx-0x38]
1002b4f2:	xor    ecx,eax
1002b4f4:	call   0x10015b2b
1002b4f9:	mov    eax,0x10086c50
1002b4fe:	jmp    0x10015bf5
1002b503:	int3   
1002b504:	int3   
1002b505:	int3   
1002b506:	int3   
1002b507:	int3   
1002b508:	int3   
1002b509:	int3   
1002b50a:	int3   
1002b50b:	int3   
1002b50c:	int3   
1002b50d:	int3   
1002b50e:	int3   
1002b50f:	int3   
1002b510:	lea    ecx,[ebp-0x94]
1002b516:	jmp    0x10003b40
1002b51b:	mov    edx,DWORD PTR [esp+0x8]
1002b51f:	lea    eax,[edx-0x8c]
1002b525:	mov    ecx,DWORD PTR [edx-0x90]
1002b52b:	xor    ecx,eax
1002b52d:	call   0x10015b2b
1002b532:	add    eax,0x4
1002b535:	mov    ecx,DWORD PTR [edx-0x4]
1002b538:	xor    ecx,eax
1002b53a:	call   0x10015b2b
1002b53f:	mov    eax,0x10086c7c
1002b544:	jmp    0x10015bf5
1002b549:	int3   
1002b54a:	int3   
1002b54b:	int3   
1002b54c:	int3   
1002b54d:	int3   
1002b54e:	int3   
1002b54f:	int3   
1002b550:	lea    ecx,[ebp-0x10]
1002b553:	jmp    0x10003b40
1002b558:	mov    edx,DWORD PTR [esp+0x8]
1002b55c:	lea    eax,[edx-0xc]
1002b55f:	mov    ecx,DWORD PTR [edx-0x10]
1002b562:	xor    ecx,eax
1002b564:	call   0x10015b2b
1002b569:	mov    eax,0x10086ca8
1002b56e:	jmp    0x10015bf5
1002b573:	int3   
1002b574:	int3   
1002b575:	int3   
1002b576:	int3   
1002b577:	int3   
1002b578:	int3   
1002b579:	int3   
1002b57a:	int3   
1002b57b:	int3   
1002b57c:	int3   
1002b57d:	int3   
1002b57e:	int3   
1002b57f:	int3   
1002b580:	lea    ecx,[ebp-0x7c]
1002b583:	jmp    0x10003b40
1002b588:	lea    ecx,[ebp-0xa4]
1002b58e:	jmp    0x10002bb0
1002b593:	lea    ecx,[ebp-0xe8]
1002b599:	jmp    0x10002bb0
1002b59e:	lea    ecx,[ebp-0x104]
1002b5a4:	jmp    0x10002bb0
1002b5a9:	lea    ecx,[ebp-0x13c]
1002b5af:	jmp    0x10002bb0
1002b5b4:	lea    ecx,[ebp-0x120]
1002b5ba:	jmp    0x10002bb0
1002b5bf:	mov    edx,DWORD PTR [esp+0x8]
1002b5c3:	lea    eax,[edx+0xc]
1002b5c6:	mov    ecx,DWORD PTR [edx-0x144]
1002b5cc:	xor    ecx,eax
1002b5ce:	call   0x10015b2b
1002b5d3:	mov    ecx,DWORD PTR [edx-0x4]
1002b5d6:	xor    ecx,eax
1002b5d8:	call   0x10015b2b
1002b5dd:	mov    eax,0x10086cfc
1002b5e2:	jmp    0x10015bf5
1002b5e7:	int3   
1002b5e8:	int3   
1002b5e9:	int3   
1002b5ea:	int3   
1002b5eb:	int3   
1002b5ec:	int3   
1002b5ed:	int3   
1002b5ee:	int3   
1002b5ef:	int3   
1002b5f0:	lea    ecx,[ebp-0x3c]
1002b5f3:	jmp    0x10003320
1002b5f8:	mov    edx,DWORD PTR [esp+0x8]
1002b5fc:	lea    eax,[edx-0x3c]
1002b5ff:	mov    ecx,DWORD PTR [edx-0x40]
1002b602:	xor    ecx,eax
1002b604:	call   0x10015b2b
1002b609:	mov    eax,0x10086d28
1002b60e:	jmp    0x10015bf5
1002b613:	int3   
1002b614:	int3   
1002b615:	int3   
1002b616:	int3   
1002b617:	int3   
1002b618:	int3   
1002b619:	int3   
1002b61a:	int3   
1002b61b:	int3   
1002b61c:	int3   
1002b61d:	int3   
1002b61e:	int3   
1002b61f:	int3   
1002b620:	lea    ecx,[ebp-0x40]
1002b623:	jmp    0x1000c290
1002b628:	mov    edx,DWORD PTR [esp+0x8]
1002b62c:	lea    eax,[edx-0x44]
1002b62f:	mov    ecx,DWORD PTR [edx-0x48]
1002b632:	xor    ecx,eax
1002b634:	call   0x10015b2b
1002b639:	mov    eax,0x10086d54
1002b63e:	jmp    0x10015bf5
1002b643:	int3   
1002b644:	int3   
1002b645:	int3   
1002b646:	int3   
1002b647:	int3   
1002b648:	int3   
1002b649:	int3   
1002b64a:	int3   
1002b64b:	int3   
1002b64c:	int3   
1002b64d:	int3   
1002b64e:	int3   
1002b64f:	int3   
1002b650:	lea    ecx,[ebp-0x29]
1002b653:	jmp    0x10006ca0
1002b658:	push   0x10003290
1002b65d:	push   0x4
1002b65f:	push   0x4
1002b661:	lea    eax,[ebp-0x1c]
1002b664:	push   eax
1002b665:	call   0x100175e4
1002b66a:	ret    
1002b66b:	lea    ecx,[ebp-0x28]
1002b66e:	jmp    0x10003b40
1002b673:	mov    edx,DWORD PTR [esp+0x8]
1002b677:	lea    eax,[edx-0x30]
1002b67a:	mov    ecx,DWORD PTR [edx-0x34]
1002b67d:	xor    ecx,eax
1002b67f:	call   0x10015b2b
1002b684:	mov    eax,0x10086d90
1002b689:	jmp    0x10015bf5
1002b68e:	int3   
1002b68f:	int3   
1002b690:	lea    ecx,[ebp-0x85c]
1002b696:	jmp    0x10002bb0
1002b69b:	lea    eax,[ebp-0x870]
1002b6a1:	jmp    0x10007bf0
1002b6a6:	lea    ecx,[ebp-0x87c]
1002b6ac:	jmp    0x10003b40
1002b6b1:	mov    edx,DWORD PTR [esp+0x8]
1002b6b5:	lea    eax,[edx-0x87c]
1002b6bb:	mov    ecx,DWORD PTR [edx-0x880]
1002b6c1:	xor    ecx,eax
1002b6c3:	call   0x10015b2b
1002b6c8:	add    eax,0x8
1002b6cb:	mov    ecx,DWORD PTR [edx-0x8]
1002b6ce:	xor    ecx,eax
1002b6d0:	call   0x10015b2b
1002b6d5:	mov    eax,0x10086dcc
1002b6da:	jmp    0x10015bf5
1002b6df:	int3   
1002b6e0:	lea    esi,[ebp-0x8b0]
1002b6e6:	jmp    0x10009790
1002b6eb:	lea    ecx,[ebp-0x8dc]
1002b6f1:	jmp    0x10002bb0
1002b6f6:	mov    edx,DWORD PTR [esp+0x8]
1002b6fa:	lea    eax,[edx+0xc]
1002b6fd:	mov    ecx,DWORD PTR [edx-0x924]
1002b703:	xor    ecx,eax
1002b705:	call   0x10015b2b
1002b70a:	mov    ecx,DWORD PTR [edx-0xc]
1002b70d:	xor    ecx,eax
1002b70f:	call   0x10015b2b
1002b714:	mov    eax,0x10086e34
1002b719:	jmp    0x10015bf5
1002b71e:	int3   
1002b71f:	int3   
1002b720:	lea    esi,[ebp-0x8ac]
1002b726:	jmp    0x10009790
1002b72b:	lea    ecx,[ebp-0x8c8]
1002b731:	jmp    0x10002bb0
1002b736:	mov    edx,DWORD PTR [esp+0x8]
1002b73a:	lea    eax,[edx+0xc]
1002b73d:	mov    ecx,DWORD PTR [edx-0x8cc]
1002b743:	xor    ecx,eax
1002b745:	call   0x10015b2b
1002b74a:	mov    ecx,DWORD PTR [edx-0x8]
1002b74d:	xor    ecx,eax
1002b74f:	call   0x10015b2b
1002b754:	mov    eax,0x10086e9c
1002b759:	jmp    0x10015bf5
1002b75e:	int3   
1002b75f:	int3   
1002b760:	mov    eax,DWORD PTR [ebp-0x18]
1002b763:	and    eax,0x1
1002b766:	je     0x1002b778
1002b76c:	and    DWORD PTR [ebp-0x18],0xfffffffe
1002b770:	mov    ecx,DWORD PTR [ebp+0x4]
1002b773:	jmp    0x10003b40
1002b778:	ret    
1002b779:	lea    ecx,[ebp-0x14]
1002b77c:	jmp    0x10003b40
1002b781:	lea    ecx,[ebp-0x10]
1002b784:	jmp    0x10003b40
1002b789:	lea    ecx,[ebp-0x14]
1002b78c:	jmp    0x10003b40
1002b791:	mov    edx,DWORD PTR [esp+0x8]
1002b795:	lea    eax,[edx-0x14]
1002b798:	mov    ecx,DWORD PTR [edx-0x18]
1002b79b:	xor    ecx,eax
1002b79d:	call   0x10015b2b
1002b7a2:	mov    eax,0x10086ee0
1002b7a7:	jmp    0x10015bf5
1002b7ac:	int3   
1002b7ad:	int3   
1002b7ae:	int3   
1002b7af:	int3   
1002b7b0:	mov    eax,DWORD PTR [ebp-0x18]
1002b7b3:	and    eax,0x1
1002b7b6:	je     0x1002b7c8
1002b7bc:	and    DWORD PTR [ebp-0x18],0xfffffffe
1002b7c0:	mov    ecx,DWORD PTR [ebp+0x4]
1002b7c3:	jmp    0x10003b40
1002b7c8:	ret    
1002b7c9:	lea    ecx,[ebp-0x14]
1002b7cc:	jmp    0x10003b40
1002b7d1:	lea    ecx,[ebp-0x10]
1002b7d4:	jmp    0x10003b40
1002b7d9:	lea    ecx,[ebp-0x14]
1002b7dc:	jmp    0x10003b40
1002b7e1:	mov    edx,DWORD PTR [esp+0x8]
1002b7e5:	lea    eax,[edx-0x14]
1002b7e8:	mov    ecx,DWORD PTR [edx-0x18]
1002b7eb:	xor    ecx,eax
1002b7ed:	call   0x10015b2b
1002b7f2:	mov    eax,0x10086f24
1002b7f7:	jmp    0x10015bf5
1002b7fc:	int3   
1002b7fd:	int3   
1002b7fe:	int3   
1002b7ff:	int3   
1002b800:	lea    ecx,[ebp-0x6c]
1002b803:	jmp    0x10003290
1002b808:	lea    ecx,[ebp-0x68]
1002b80b:	jmp    0x10003290
1002b810:	mov    edx,DWORD PTR [esp+0x8]
1002b814:	lea    eax,[edx+0xc]
1002b817:	mov    ecx,DWORD PTR [edx-0x98]
1002b81d:	xor    ecx,eax
1002b81f:	call   0x10015b2b
1002b824:	mov    eax,0x10086f58
1002b829:	jmp    0x10015bf5
1002b82e:	int3   
1002b82f:	int3   
1002b830:	push   edi
1002b831:	mov    edi,0x10097a9c
1002b836:	call   0x10001830
1002b83b:	pop    edi
1002b83c:	ret    
1002b83d:	int3   
1002b83e:	int3   
1002b83f:	int3   
1002b840:	push   0x0
1002b842:	push   0x0
1002b844:	push   0x1
1002b846:	push   0x0
1002b848:	call   DWORD PTR ds:0x100340cc
1002b84e:	mov    ds:0x10097aa0,eax
1002b853:	ret    
1002b854:	int3   
1002b855:	int3   
1002b856:	int3   
1002b857:	int3   
1002b858:	int3   
1002b859:	int3   
1002b85a:	int3   
1002b85b:	int3   
1002b85c:	int3   
1002b85d:	int3   
1002b85e:	int3   
1002b85f:	int3   
1002b860:	push   0x100842c0
1002b865:	push   0xf
1002b867:	push   0x100842e4
1002b86c:	call   0x10003540
1002b871:	add    esp,0xc
1002b874:	mov    ds:0x10097aa4,eax
1002b879:	ret    
1002b87a:	int3   
1002b87b:	int3   
1002b87c:	int3   
1002b87d:	int3   
1002b87e:	int3   
1002b87f:	int3   
1002b880:	push   edi
1002b881:	mov    edi,0x10097aa8
1002b886:	call   0x10001830
1002b88b:	pop    edi
1002b88c:	ret    
1002b88d:	int3   
1002b88e:	int3   
1002b88f:	int3   
1002b890:	push   ebp
1002b891:	mov    ebp,esp
1002b893:	push   0x10034680
1002b898:	push   0x10
1002b89a:	push   0x100346b4
1002b89f:	call   0x10003340
1002b8a4:	add    esp,0xc
1002b8a7:	mov    ds:0x10096928,eax
1002b8ac:	pop    ebp
1002b8ad:	ret    
1002b8ae:	int3   
1002b8af:	int3   
1002b8b0:	push   ebp
1002b8b1:	mov    ebp,esp
1002b8b3:	push   0x100346c8
1002b8b8:	push   0x10
1002b8ba:	push   0x100346f8
1002b8bf:	call   0x10003340
1002b8c4:	add    esp,0xc
1002b8c7:	mov    ds:0x10096924,eax
1002b8cc:	pop    ebp
1002b8cd:	ret    
1002b8ce:	int3   
1002b8cf:	int3   
1002b8d0:	push   ebp
1002b8d1:	mov    ebp,esp
1002b8d3:	push   0x1003470c
1002b8d8:	push   0x10
1002b8da:	push   0x10034730
1002b8df:	call   0x10003340
1002b8e4:	add    esp,0xc
1002b8e7:	mov    ds:0x10096920,eax
1002b8ec:	pop    ebp
1002b8ed:	ret    
1002b8ee:	int3   
1002b8ef:	int3   
1002b8f0:	push   ebp
1002b8f1:	mov    ebp,esp
1002b8f3:	mov    ecx,0x10096934
1002b8f8:	call   0x1000e3a0
1002b8fd:	push   0x10033b40
1002b902:	call   0x10016057
1002b907:	add    esp,0x4
1002b90a:	pop    ebp
1002b90b:	ret    
1002b90c:	int3   
1002b90d:	int3   
1002b90e:	int3   
1002b90f:	int3   
1002b910:	push   ebp
1002b911:	mov    ebp,esp
1002b913:	push   0x0
1002b915:	push   0x0
1002b917:	push   0x0
1002b919:	call   DWORD PTR ds:0x100340c8
1002b91f:	mov    ds:0x1009699c,eax
1002b924:	pop    ebp
1002b925:	ret    
1002b926:	int3   
1002b927:	int3   
1002b928:	int3   
1002b929:	int3   
1002b92a:	int3   
1002b92b:	int3   
1002b92c:	int3   
1002b92d:	int3   
1002b92e:	int3   
1002b92f:	int3   
1002b930:	push   ebp
1002b931:	mov    ebp,esp
1002b933:	push   0x0
1002b935:	mov    ecx,0x10096968
1002b93a:	call   0x100032c0
1002b93f:	push   0x10033b50
1002b944:	call   0x10016057
1002b949:	add    esp,0x4
1002b94c:	pop    ebp
1002b94d:	ret    
1002b94e:	int3   
1002b94f:	int3   
1002b950:	push   ebp
1002b951:	mov    ebp,esp
1002b953:	mov    ecx,0x1009694c
1002b958:	call   0x10002b50
1002b95d:	push   0x10033b60
1002b962:	call   0x10016057
1002b967:	add    esp,0x4
1002b96a:	pop    ebp
1002b96b:	ret    
1002b96c:	int3   
1002b96d:	int3   
1002b96e:	int3   
1002b96f:	int3   
1002b970:	push   ebp
1002b971:	mov    ebp,esp
1002b973:	mov    ecx,0x1009697c
1002b978:	call   0x10002b50
1002b97d:	push   0x10033b70
1002b982:	call   0x10016057
1002b987:	add    esp,0x4
1002b98a:	pop    ebp
1002b98b:	ret    
1002b98c:	int3   
1002b98d:	int3   
1002b98e:	int3   
1002b98f:	int3   
1002b990:	push   ebp
1002b991:	mov    ebp,esp
1002b993:	push   0x0
1002b995:	push   0x0
1002b997:	push   0x0
1002b999:	push   0x0
1002b99b:	call   DWORD PTR ds:0x100340cc
1002b9a1:	mov    ds:0x10096998,eax
1002b9a6:	pop    ebp
1002b9a7:	ret    
1002b9a8:	int3   
1002b9a9:	int3   
1002b9aa:	int3   
1002b9ab:	int3   
1002b9ac:	int3   
1002b9ad:	int3   
1002b9ae:	int3   
1002b9af:	int3   
1002b9b0:	push   ebp
1002b9b1:	mov    ebp,esp
1002b9b3:	mov    eax,ds:0x10089060
1002b9b8:	mov    ds:0x10096970,eax
1002b9bd:	mov    ecx,DWORD PTR ds:0x10089064
1002b9c3:	mov    DWORD PTR ds:0x10096974,ecx
1002b9c9:	pop    ebp
1002b9ca:	ret    
1002b9cb:	int3   
1002b9cc:	int3   
1002b9cd:	int3   
1002b9ce:	int3   
1002b9cf:	int3   
1002b9d0:	push   ebp
1002b9d1:	mov    ebp,esp
1002b9d3:	push   0x0
1002b9d5:	mov    ecx,0x10096978
1002b9da:	call   0x1000a020
1002b9df:	push   0x10033b80
1002b9e4:	call   0x10016057
1002b9e9:	add    esp,0x4
1002b9ec:	pop    ebp
1002b9ed:	ret    
1002b9ee:	int3   
1002b9ef:	int3   
1002b9f0:	push   ebp
1002b9f1:	mov    ebp,esp
1002b9f3:	push   0x0
1002b9f5:	mov    ecx,0x1009696c
1002b9fa:	call   0x1000a020
1002b9ff:	push   0x10033b90
1002ba04:	call   0x10016057
1002ba09:	add    esp,0x4
1002ba0c:	pop    ebp
1002ba0d:	ret    
1002ba0e:	int3   
1002ba0f:	int3   
1002ba10:	push   ebp
1002ba11:	mov    ebp,esp
1002ba13:	push   0x0
1002ba15:	push   0x0
1002ba17:	push   0x0
1002ba19:	call   DWORD PTR ds:0x100340c8
1002ba1f:	mov    ds:0x10096aa4,eax
1002ba24:	pop    ebp
1002ba25:	ret    
1002ba26:	int3   
1002ba27:	int3   
1002ba28:	int3   
1002ba29:	int3   
1002ba2a:	int3   
1002ba2b:	int3   
1002ba2c:	int3   
1002ba2d:	int3   
1002ba2e:	int3   
1002ba2f:	int3   
1002ba30:	push   ebp
1002ba31:	mov    ebp,esp
1002ba33:	mov    ecx,0x10096aa0
1002ba38:	call   0x1000fb30
1002ba3d:	pop    ebp
1002ba3e:	ret    
1002ba3f:	int3   
1002ba40:	push   ebp
1002ba41:	mov    ebp,esp
1002ba43:	push   0x0
1002ba45:	push   0x0
1002ba47:	push   0x0
1002ba49:	call   DWORD PTR ds:0x100340c8
1002ba4f:	mov    ds:0x10096aa8,eax
1002ba54:	pop    ebp
1002ba55:	ret    
1002ba56:	int3   
1002ba57:	int3   
1002ba58:	int3   
1002ba59:	int3   
1002ba5a:	int3   
1002ba5b:	int3   
1002ba5c:	int3   
1002ba5d:	int3   
1002ba5e:	int3   
1002ba5f:	int3   
1002ba60:	push   ebp
1002ba61:	mov    ebp,esp
1002ba63:	mov    ecx,0x10096aac
1002ba68:	call   0x100117b0
1002ba6d:	push   0x10033ba0
1002ba72:	call   0x10016057
1002ba77:	add    esp,0x4
1002ba7a:	pop    ebp
1002ba7b:	ret    
1002ba7c:	int3   
1002ba7d:	int3   
1002ba7e:	int3   
1002ba7f:	int3   
1002ba80:	push   ebx
1002ba81:	push   ebp
1002ba82:	push   esi
1002ba83:	push   edi
1002ba84:	push   0x1007b734
1002ba89:	push   0x9
1002ba8b:	push   0x1007b728
1002ba90:	call   0x10003340
1002ba95:	mov    edi,0x3
1002ba9a:	push   0x1007b700
1002ba9f:	push   edi
1002baa0:	push   0x1007b6fc
1002baa5:	mov    ds:0x10089d54,eax
1002baaa:	mov    DWORD PTR ds:0x10089d58,edi
1002bab0:	call   0x10003340
1002bab5:	mov    esi,0x4
1002baba:	push   0x1007b6d8
1002babf:	push   esi
1002bac0:	push   0x1007b6d0
1002bac5:	mov    ds:0x10089d5c,eax
1002baca:	mov    DWORD PTR ds:0x10089d60,esi
1002bad0:	call   0x10003340
1002bad5:	push   0x1007b6a0
1002bada:	push   edi
1002badb:	push   0x1007b69c
1002bae0:	mov    ds:0x10089d64,eax
1002bae5:	mov    DWORD PTR ds:0x10089d68,edi
1002baeb:	call   0x10003340
1002baf0:	mov    ebp,0x2
1002baf5:	push   0x1007b674
1002bafa:	push   ebp
1002bafb:	push   0x1007b670
1002bb00:	mov    ds:0x10089d6c,eax
1002bb05:	mov    DWORD PTR ds:0x10089d70,ebp
1002bb0b:	call   0x10003340
1002bb10:	push   0x1007b648
1002bb15:	push   edi
1002bb16:	push   0x1007b644
1002bb1b:	mov    ds:0x10089d74,eax
1002bb20:	mov    DWORD PTR ds:0x10089d78,edi
1002bb26:	call   0x10003340
1002bb2b:	add    esp,0x48
1002bb2e:	push   0x1007b608
1002bb33:	push   edi
1002bb34:	push   0x1007b604
1002bb39:	mov    ds:0x10089d7c,eax
1002bb3e:	mov    DWORD PTR ds:0x10089d80,edi
1002bb44:	call   0x10003340
1002bb49:	push   0x1007b5e0
1002bb4e:	push   edi
1002bb4f:	push   0x1007b5dc
1002bb54:	mov    ds:0x10089d84,eax
1002bb59:	mov    DWORD PTR ds:0x10089d88,edi
1002bb5f:	call   0x10003340
1002bb64:	push   0x1007b5b8
1002bb69:	push   edi
1002bb6a:	push   0x1007b5b4
1002bb6f:	mov    ds:0x10089d8c,eax
1002bb74:	mov    DWORD PTR ds:0x10089d90,edi
1002bb7a:	call   0x10003340
1002bb7f:	push   0x1007b574
1002bb84:	push   edi
1002bb85:	push   0x1007b570
1002bb8a:	mov    ds:0x10089d94,eax
1002bb8f:	mov    DWORD PTR ds:0x10089d98,edi
1002bb95:	call   0x10003340
1002bb9a:	push   0x1007b540
1002bb9f:	push   edi
1002bba0:	push   0x1007b53c
1002bba5:	mov    ds:0x10089d9c,eax
1002bbaa:	mov    DWORD PTR ds:0x10089da0,edi
1002bbb0:	call   0x10003340
1002bbb5:	push   0x1007b508
1002bbba:	push   edi
1002bbbb:	push   0x1007b504
1002bbc0:	mov    ds:0x10089da4,eax
1002bbc5:	mov    DWORD PTR ds:0x10089da8,edi
1002bbcb:	call   0x10003340
1002bbd0:	add    esp,0x48
1002bbd3:	mov    ds:0x10089dac,eax
1002bbd8:	mov    DWORD PTR ds:0x10089db0,edi
1002bbde:	push   0x1007b4c8
1002bbe3:	push   edi
1002bbe4:	push   0x1007b4c4
1002bbe9:	call   0x10003340
1002bbee:	push   0x1007b488
1002bbf3:	push   edi
1002bbf4:	push   0x1007b484
1002bbf9:	mov    ds:0x10089db4,eax
1002bbfe:	mov    DWORD PTR ds:0x10089db8,edi
1002bc04:	call   0x10003340
1002bc09:	push   0x1007b450
1002bc0e:	push   edi
1002bc0f:	push   0x1007b44c
1002bc14:	mov    ds:0x10089dbc,eax
1002bc19:	mov    DWORD PTR ds:0x10089dc0,edi
1002bc1f:	call   0x10003340
1002bc24:	push   0x1007b410
1002bc29:	push   edi
1002bc2a:	push   0x1007b40c
1002bc2f:	mov    ds:0x10089dc4,eax
1002bc34:	mov    DWORD PTR ds:0x10089dc8,edi
1002bc3a:	call   0x10003340
1002bc3f:	push   0x1007b3d4
1002bc44:	push   edi
1002bc45:	push   0x1007b3d0
1002bc4a:	mov    ds:0x10089dcc,eax
1002bc4f:	mov    DWORD PTR ds:0x10089dd0,edi
1002bc55:	call   0x10003340
1002bc5a:	mov    ebx,0x5
1002bc5f:	push   0x1007b3a4
1002bc64:	push   ebx
1002bc65:	push   0x1007b39c
1002bc6a:	mov    ds:0x10089dd4,eax
1002bc6f:	mov    DWORD PTR ds:0x10089dd8,ebx
1002bc75:	call   0x10003340
1002bc7a:	add    esp,0x48
1002bc7d:	push   0x1007b36c
1002bc82:	push   esi
1002bc83:	push   0x1007b364
1002bc88:	mov    ds:0x10089ddc,eax
1002bc8d:	mov    DWORD PTR ds:0x10089de0,esi
1002bc93:	call   0x10003340
1002bc98:	push   0x1007b334
1002bc9d:	push   ebx
1002bc9e:	push   0x1007b32c
1002bca3:	mov    ds:0x10089de4,eax
1002bca8:	mov    DWORD PTR ds:0x10089de8,ebx
1002bcae:	call   0x10003340
1002bcb3:	push   0x1007b300
1002bcb8:	push   esi
1002bcb9:	push   0x1007b2f8
1002bcbe:	mov    ds:0x10089dec,eax
1002bcc3:	mov    DWORD PTR ds:0x10089df0,esi
1002bcc9:	call   0x10003340
1002bcce:	push   0x1007b2c8
1002bcd3:	push   esi
1002bcd4:	push   0x1007b2c0
1002bcd9:	mov    ds:0x10089df4,eax
1002bcde:	mov    DWORD PTR ds:0x10089df8,esi
1002bce4:	call   0x10003340
1002bce9:	push   0x1007b28c
1002bcee:	push   edi
1002bcef:	push   0x1007b288
1002bcf4:	mov    ds:0x10089dfc,eax
1002bcf9:	mov    DWORD PTR ds:0x10089e00,edi
1002bcff:	call   0x10003340
1002bd04:	push   0x1007b248
1002bd09:	push   esi
1002bd0a:	push   0x1007b240
1002bd0f:	mov    ds:0x10089e04,eax
1002bd14:	mov    DWORD PTR ds:0x10089e08,esi
1002bd1a:	call   0x10003340
1002bd1f:	add    esp,0x48
1002bd22:	push   0x1007b208
1002bd27:	push   ebp
1002bd28:	push   0x1007b204
1002bd2d:	mov    ds:0x10089e0c,eax
1002bd32:	mov    DWORD PTR ds:0x10089e10,ebp
1002bd38:	call   0x10003340
1002bd3d:	mov    ds:0x10089e14,eax
1002bd42:	mov    DWORD PTR ds:0x10089e18,edi
1002bd48:	push   0x1007b1c8
1002bd4d:	push   edi
1002bd4e:	push   0x1007b1c4
1002bd53:	call   0x10003340
1002bd58:	push   0x1007b194
1002bd5d:	push   ebp
1002bd5e:	push   0x1007b190
1002bd63:	mov    ds:0x10089e1c,eax
1002bd68:	mov    DWORD PTR ds:0x10089e20,ebp
1002bd6e:	call   0x10003340
1002bd73:	push   0x1007b16c
1002bd78:	push   edi
1002bd79:	push   0x1007b168
1002bd7e:	mov    ds:0x10089e24,eax
1002bd83:	mov    DWORD PTR ds:0x10089e28,edi
1002bd89:	call   0x10003340
1002bd8e:	push   0x1007b134
1002bd93:	push   ebp
1002bd94:	push   0x1007b130
1002bd99:	mov    ds:0x10089e2c,eax
1002bd9e:	mov    DWORD PTR ds:0x10089e30,ebp
1002bda4:	call   0x10003340
1002bda9:	push   0x1007b104
1002bdae:	push   edi
1002bdaf:	push   0x1007b100
1002bdb4:	mov    ds:0x10089e34,eax
1002bdb9:	mov    DWORD PTR ds:0x10089e38,edi
1002bdbf:	call   0x10003340
1002bdc4:	add    esp,0x48
1002bdc7:	push   0x1007b0d0
1002bdcc:	push   edi
1002bdcd:	push   0x1007b0cc
1002bdd2:	mov    ds:0x10089e3c,eax
1002bdd7:	mov    DWORD PTR ds:0x10089e40,edi
1002bddd:	call   0x10003340
1002bde2:	push   0x1007b094
1002bde7:	push   ebp
1002bde8:	push   0x1007b090
1002bded:	mov    ds:0x10089e44,eax
1002bdf2:	mov    DWORD PTR ds:0x10089e48,ebp
1002bdf8:	call   0x10003340
1002bdfd:	push   0x1007b054
1002be02:	push   ebp
1002be03:	push   0x1007b050
1002be08:	mov    ds:0x10089e4c,eax
1002be0d:	mov    DWORD PTR ds:0x10089e50,ebp
1002be13:	call   0x10003340
1002be18:	push   0x1007b028
1002be1d:	push   edi
1002be1e:	push   0x1007b024
1002be23:	mov    ds:0x10089e54,eax
1002be28:	mov    DWORD PTR ds:0x10089e58,edi
1002be2e:	call   0x10003340
1002be33:	push   0x1007afec
1002be38:	push   ebp
1002be39:	push   0x1007afe8
1002be3e:	mov    ds:0x10089e5c,eax
1002be43:	mov    DWORD PTR ds:0x10089e60,ebp
1002be49:	call   0x10003340
1002be4e:	push   0x1007afbc
1002be53:	push   edi
1002be54:	push   0x1007afb8
1002be59:	mov    ds:0x10089e64,eax
1002be5e:	mov    DWORD PTR ds:0x10089e68,edi
1002be64:	call   0x10003340
1002be69:	add    esp,0x48
1002be6c:	push   0x1007af8c
1002be71:	push   ebp
1002be72:	push   0x1007af88
1002be77:	mov    ds:0x10089e6c,eax
1002be7c:	mov    DWORD PTR ds:0x10089e70,ebp
1002be82:	call   0x10003340
1002be87:	push   0x1007af60
1002be8c:	push   edi
1002be8d:	push   0x1007af5c
1002be92:	mov    ds:0x10089e74,eax
1002be97:	mov    DWORD PTR ds:0x10089e78,edi
1002be9d:	call   0x10003340
1002bea2:	mov    ds:0x10089e7c,eax
1002bea7:	mov    DWORD PTR ds:0x10089e80,edi
1002bead:	push   0x1007af38
1002beb2:	push   edi
1002beb3:	push   0x1007af34
1002beb8:	call   0x10003340
1002bebd:	push   0x1007aefc
1002bec2:	push   ebp
1002bec3:	push   0x1007aef8
1002bec8:	mov    ds:0x10089e84,eax
1002becd:	mov    DWORD PTR ds:0x10089e88,ebp
1002bed3:	call   0x10003340
1002bed8:	push   0x1007aec8
1002bedd:	push   esi
1002bede:	push   0x1007aec0
1002bee3:	mov    ds:0x10089e8c,eax
1002bee8:	mov    DWORD PTR ds:0x10089e90,esi
1002beee:	call   0x10003340
1002bef3:	push   0x1007ae90
1002bef8:	push   esi
1002bef9:	push   0x1007ae88
1002befe:	mov    ds:0x10089e94,eax
1002bf03:	mov    DWORD PTR ds:0x10089e98,esi
1002bf09:	call   0x10003340
1002bf0e:	add    esp,0x48
1002bf11:	push   0x1007ae5c
1002bf16:	push   edi
1002bf17:	push   0x1007ae58
1002bf1c:	mov    ds:0x10089e9c,eax
1002bf21:	mov    DWORD PTR ds:0x10089ea0,edi
1002bf27:	call   0x10003340
1002bf2c:	push   0x1007ae2c
1002bf31:	push   edi
1002bf32:	push   0x1007ae28
1002bf37:	mov    ds:0x10089ea4,eax
1002bf3c:	mov    DWORD PTR ds:0x10089ea8,edi
1002bf42:	call   0x10003340
1002bf47:	push   0x1007adf4
1002bf4c:	push   edi
1002bf4d:	push   0x1007adf0
1002bf52:	mov    ds:0x10089eac,eax
1002bf57:	mov    DWORD PTR ds:0x10089eb0,edi
1002bf5d:	call   0x10003340
1002bf62:	push   0x1007adb0
1002bf67:	push   esi
1002bf68:	push   0x1007ada8
1002bf6d:	mov    ds:0x10089eb4,eax
1002bf72:	mov    DWORD PTR ds:0x10089eb8,esi
1002bf78:	call   0x10003340
1002bf7d:	push   0x1007ad7c
1002bf82:	push   esi
1002bf83:	push   0x1007ad74
1002bf88:	mov    ds:0x10089ebc,eax
1002bf8d:	mov    DWORD PTR ds:0x10089ec0,esi
1002bf93:	call   0x10003340
1002bf98:	push   0x1007ad50
1002bf9d:	push   edi
1002bf9e:	push   0x1007ad4c
1002bfa3:	mov    ds:0x10089ec4,eax
1002bfa8:	mov    DWORD PTR ds:0x10089ec8,edi
1002bfae:	call   0x10003340
1002bfb3:	add    esp,0x48
1002bfb6:	push   0x1007ad24
1002bfbb:	push   edi
1002bfbc:	push   0x1007ad20
1002bfc1:	mov    ds:0x10089ecc,eax
1002bfc6:	mov    DWORD PTR ds:0x10089ed0,edi
1002bfcc:	call   0x10003340
1002bfd1:	push   0x1007ace4
1002bfd6:	push   edi
1002bfd7:	push   0x1007ace0
1002bfdc:	mov    ds:0x10089ed4,eax
1002bfe1:	mov    DWORD PTR ds:0x10089ed8,edi
1002bfe7:	call   0x10003340
1002bfec:	mov    ebp,0x8
1002bff1:	push   0x1007aca4
1002bff6:	push   ebp
1002bff7:	push   0x1007ac98
1002bffc:	mov    ds:0x10089edc,eax
1002c001:	mov    DWORD PTR ds:0x10089ee0,ebp
1002c007:	call   0x10003340
1002c00c:	mov    ds:0x10089ee4,eax
1002c011:	mov    DWORD PTR ds:0x10089ee8,ebx
1002c017:	push   0x1007ac64
1002c01c:	push   ebx
1002c01d:	push   0x1007ac5c
1002c022:	call   0x10003340
1002c027:	push   0x1007ac38
1002c02c:	push   esi
1002c02d:	push   0x1007ac30
1002c032:	mov    ds:0x10089eec,eax
1002c037:	mov    DWORD PTR ds:0x10089ef0,esi
1002c03d:	call   0x10003340
1002c042:	push   0x1007abfc
1002c047:	push   esi
1002c048:	push   0x1007abf4
1002c04d:	mov    ds:0x10089ef4,eax
1002c052:	mov    DWORD PTR ds:0x10089ef8,esi
1002c058:	call   0x10003340
1002c05d:	add    esp,0x48
1002c060:	push   0x1007abc0
1002c065:	push   esi
1002c066:	push   0x1007abb8
1002c06b:	mov    ds:0x10089efc,eax
1002c070:	mov    DWORD PTR ds:0x10089f00,esi
1002c076:	call   0x10003340
1002c07b:	push   0x1007ab78
1002c080:	push   esi
1002c081:	push   0x1007ab70
1002c086:	mov    ds:0x10089f04,eax
1002c08b:	mov    DWORD PTR ds:0x10089f08,esi
1002c091:	call   0x10003340
1002c096:	push   0x1007ab3c
1002c09b:	push   esi
1002c09c:	push   0x1007ab34
1002c0a1:	mov    ds:0x10089f0c,eax
1002c0a6:	mov    DWORD PTR ds:0x10089f10,esi
1002c0ac:	call   0x10003340
1002c0b1:	push   0x1007ab08
1002c0b6:	push   esi
1002c0b7:	push   0x1007ab00
1002c0bc:	mov    ds:0x10089f14,eax
1002c0c1:	mov    DWORD PTR ds:0x10089f18,esi
1002c0c7:	call   0x10003340
1002c0cc:	push   0x1007aadc
1002c0d1:	push   esi
1002c0d2:	push   0x1007aad4
1002c0d7:	mov    ds:0x10089f1c,eax
1002c0dc:	mov    DWORD PTR ds:0x10089f20,esi
1002c0e2:	call   0x10003340
1002c0e7:	push   0x1007aaa8
1002c0ec:	push   esi
1002c0ed:	push   0x1007aaa0
1002c0f2:	mov    ds:0x10089f24,eax
1002c0f7:	mov    DWORD PTR ds:0x10089f28,esi
1002c0fd:	call   0x10003340
1002c102:	add    esp,0x48
1002c105:	push   0x1007aa6c
1002c10a:	push   edi
1002c10b:	push   0x1007aa68
1002c110:	mov    ds:0x10089f2c,eax
1002c115:	mov    DWORD PTR ds:0x10089f30,edi
1002c11b:	call   0x10003340
1002c120:	push   0x1007aa44
1002c125:	push   edi
1002c126:	push   0x1007aa40
1002c12b:	mov    ds:0x10089f34,eax
1002c130:	mov    DWORD PTR ds:0x10089f38,edi
1002c136:	call   0x10003340
1002c13b:	push   0x1007aa10
1002c140:	push   edi
1002c141:	push   0x1007aa0c
1002c146:	mov    ds:0x10089f3c,eax
1002c14b:	mov    DWORD PTR ds:0x10089f40,edi
1002c151:	call   0x10003340
1002c156:	push   0x1007a9d8
1002c15b:	push   ebx
1002c15c:	push   0x1007a9d0
1002c161:	mov    ds:0x10089f44,eax
1002c166:	mov    DWORD PTR ds:0x10089f48,ebx
1002c16c:	call   0x10003340
1002c171:	push   0x1007a990
1002c176:	mov    ds:0x10089f4c,eax
1002c17b:	mov    DWORD PTR ds:0x10089f50,ebx
1002c181:	push   ebx
1002c182:	push   0x1007a988
1002c187:	call   0x10003340
1002c18c:	push   0x1007a95c
1002c191:	push   esi
1002c192:	push   0x1007a954
1002c197:	mov    ds:0x10089f54,eax
1002c19c:	mov    DWORD PTR ds:0x10089f58,esi
1002c1a2:	call   0x10003340
1002c1a7:	add    esp,0x48
1002c1aa:	push   0x1007a920
1002c1af:	push   ebx
1002c1b0:	push   0x1007a918
1002c1b5:	mov    ds:0x10089f5c,eax
1002c1ba:	mov    DWORD PTR ds:0x10089f60,ebx
1002c1c0:	call   0x10003340
1002c1c5:	push   0x1007a8dc
1002c1ca:	push   edi
1002c1cb:	push   0x1007a8d8
1002c1d0:	mov    ds:0x10089f64,eax
1002c1d5:	mov    DWORD PTR ds:0x10089f68,edi
1002c1db:	call   0x10003340
1002c1e0:	push   0x1007a8ac
1002c1e5:	push   esi
1002c1e6:	push   0x1007a8a4
1002c1eb:	mov    ds:0x10089f6c,eax
1002c1f0:	mov    DWORD PTR ds:0x10089f70,esi
1002c1f6:	call   0x10003340
1002c1fb:	push   0x1007a868
1002c200:	push   esi
1002c201:	push   0x1007a860
1002c206:	mov    ds:0x10089f74,eax
1002c20b:	mov    DWORD PTR ds:0x10089f78,esi
1002c211:	call   0x10003340
1002c216:	push   0x1007a83c
1002c21b:	push   edi
1002c21c:	push   0x1007a838
1002c221:	mov    ds:0x10089f7c,eax
1002c226:	mov    DWORD PTR ds:0x10089f80,edi
1002c22c:	call   0x10003340
1002c231:	push   0x1007a80c
1002c236:	push   edi
1002c237:	push   0x1007a808
1002c23c:	mov    ds:0x10089f84,eax
1002c241:	mov    DWORD PTR ds:0x10089f88,edi
1002c247:	call   0x10003340
1002c24c:	add    esp,0x48
1002c24f:	push   0x1007a7e0
1002c254:	push   esi
1002c255:	push   0x1007a7d8
1002c25a:	mov    ds:0x10089f8c,eax
1002c25f:	mov    DWORD PTR ds:0x10089f90,esi
1002c265:	call   0x10003340
1002c26a:	push   0x1007a7b0
1002c26f:	push   esi
1002c270:	push   0x1007a7a8
1002c275:	mov    ds:0x10089f94,eax
1002c27a:	mov    DWORD PTR ds:0x10089f98,esi
1002c280:	call   0x10003340
1002c285:	mov    esi,0x6
1002c28a:	push   0x1007a770
1002c28f:	push   esi
1002c290:	push   0x1007a768
1002c295:	mov    ds:0x10089f9c,eax
1002c29a:	mov    DWORD PTR ds:0x10089fa0,esi
1002c2a0:	call   0x10003340
1002c2a5:	push   0x1007a740
1002c2aa:	push   ebx
1002c2ab:	push   0x1007a738
1002c2b0:	mov    ds:0x10089fa4,eax
1002c2b5:	mov    DWORD PTR ds:0x10089fa8,ebx
1002c2bb:	call   0x10003340
1002c2c0:	push   0x1007a710
1002c2c5:	push   0x4
1002c2c7:	push   0x1007a708
1002c2cc:	mov    ds:0x10089fac,eax
1002c2d1:	mov    DWORD PTR ds:0x10089fb0,0x4
1002c2db:	call   0x10003340
1002c2e0:	push   0x1007a6d0
1002c2e5:	mov    ds:0x10089fb4,eax
1002c2ea:	mov    DWORD PTR ds:0x10089fb8,0x4
1002c2f4:	push   0x4
1002c2f6:	push   0x1007a6c8
1002c2fb:	call   0x10003340
1002c300:	add    esp,0x48
1002c303:	push   0x1007a688
1002c308:	push   ebx
1002c309:	push   0x1007a680
1002c30e:	mov    ds:0x10089fbc,eax
1002c313:	mov    DWORD PTR ds:0x10089fc0,ebx
1002c319:	call   0x10003340
1002c31e:	push   0x1007a654
1002c323:	push   ebx
1002c324:	push   0x1007a64c
1002c329:	mov    ds:0x10089fc4,eax
1002c32e:	mov    DWORD PTR ds:0x10089fc8,ebx
1002c334:	call   0x10003340
1002c339:	push   0x1007a628
1002c33e:	push   0x2
1002c340:	push   0x1007a624
1002c345:	mov    ds:0x10089fcc,eax
1002c34a:	mov    DWORD PTR ds:0x10089fd0,0x2
1002c354:	call   0x10003340
1002c359:	push   0x1007a5ec
1002c35e:	push   edi
1002c35f:	push   0x1007a5e8
1002c364:	mov    ds:0x10089fd4,eax
1002c369:	mov    DWORD PTR ds:0x10089fd8,edi
1002c36f:	call   0x10003340
1002c374:	push   0x1007a5b4
1002c379:	push   0x4
1002c37b:	push   0x1007a5ac
1002c380:	mov    ds:0x10089fdc,eax
1002c385:	mov    DWORD PTR ds:0x10089fe0,0x4
1002c38f:	call   0x10003340
1002c394:	push   0x1007a57c
1002c399:	push   edi
1002c39a:	push   0x1007a578
1002c39f:	mov    ds:0x10089fe4,eax
1002c3a4:	mov    DWORD PTR ds:0x10089fe8,edi
1002c3aa:	call   0x10003340
1002c3af:	add    esp,0x48
1002c3b2:	mov    edi,0x7
1002c3b7:	push   0x1007a554
1002c3bc:	push   edi
1002c3bd:	push   0x1007a54c
1002c3c2:	mov    ds:0x10089fec,eax
1002c3c7:	mov    DWORD PTR ds:0x10089ff0,edi
1002c3cd:	call   0x10003340
1002c3d2:	push   0x1007a528
1002c3d7:	push   0x4
1002c3d9:	push   0x1007a520
1002c3de:	mov    ds:0x10089ff4,eax
1002c3e3:	mov    DWORD PTR ds:0x10089ff8,0x4
1002c3ed:	call   0x10003340
1002c3f2:	push   0x1007a4f0
1002c3f7:	push   0x3
1002c3f9:	push   0x1007a4ec
1002c3fe:	mov    ds:0x10089ffc,eax
1002c403:	mov    DWORD PTR ds:0x1008a000,0x3
1002c40d:	call   0x10003340
1002c412:	push   0x1007a4b0
1002c417:	push   0x3
1002c419:	push   0x1007a4ac
1002c41e:	mov    ds:0x1008a004,eax
1002c423:	mov    DWORD PTR ds:0x1008a008,0x3
1002c42d:	call   0x10003340
1002c432:	push   0x1007a470
1002c437:	push   0x3
1002c439:	push   0x1007a46c
1002c43e:	mov    ds:0x1008a00c,eax
1002c443:	mov    DWORD PTR ds:0x1008a010,0x3
1002c44d:	call   0x10003340
1002c452:	push   0x1007a444
1002c457:	push   0x3
1002c459:	push   0x1007a440
1002c45e:	mov    ds:0x1008a014,eax
1002c463:	mov    DWORD PTR ds:0x1008a018,0x3
1002c46d:	call   0x10003340
1002c472:	add    esp,0x48
1002c475:	mov    ds:0x1008a01c,eax
1002c47a:	mov    DWORD PTR ds:0x1008a020,0x3
1002c484:	push   0x1007a404
1002c489:	push   0x3
1002c48b:	push   0x1007a400
1002c490:	call   0x10003340
1002c495:	push   0x1007a3cc
1002c49a:	push   0x3
1002c49c:	push   0x1007a3c8
1002c4a1:	mov    ds:0x1008a024,eax
1002c4a6:	mov    DWORD PTR ds:0x1008a028,0x3
1002c4b0:	call   0x10003340
1002c4b5:	push   0x1007a3a4
1002c4ba:	push   0x3
1002c4bc:	push   0x1007a3a0
1002c4c1:	mov    ds:0x1008a02c,eax
1002c4c6:	mov    DWORD PTR ds:0x1008a030,0x3
1002c4d0:	call   0x10003340
1002c4d5:	push   0x1007a374
1002c4da:	push   0x3
1002c4dc:	push   0x1007a370
1002c4e1:	mov    ds:0x1008a034,eax
1002c4e6:	mov    DWORD PTR ds:0x1008a038,0x3
1002c4f0:	call   0x10003340
1002c4f5:	push   0x1007a338
1002c4fa:	push   0x3
1002c4fc:	push   0x1007a334
1002c501:	mov    ds:0x1008a03c,eax
1002c506:	mov    DWORD PTR ds:0x1008a040,0x3
1002c510:	call   0x10003340
1002c515:	push   0x1007a308
1002c51a:	push   0x3
1002c51c:	push   0x1007a304
1002c521:	mov    ds:0x1008a044,eax
1002c526:	mov    DWORD PTR ds:0x1008a048,0x3
1002c530:	call   0x10003340
1002c535:	add    esp,0x48
1002c538:	push   0x1007a2c8
1002c53d:	push   edi
1002c53e:	push   0x1007a2c0
1002c543:	mov    ds:0x1008a04c,eax
1002c548:	mov    DWORD PTR ds:0x1008a050,edi
1002c54e:	call   0x10003340
1002c553:	push   0x1007a298
1002c558:	push   0x4
1002c55a:	push   0x1007a290
1002c55f:	mov    ds:0x1008a054,eax
1002c564:	mov    DWORD PTR ds:0x1008a058,0x4
1002c56e:	call   0x10003340
1002c573:	push   0x1007a25c
1002c578:	push   esi
1002c579:	push   0x1007a254
1002c57e:	mov    ds:0x1008a05c,eax
1002c583:	mov    DWORD PTR ds:0x1008a060,esi
1002c589:	call   0x10003340
1002c58e:	push   0x1007a230
1002c593:	push   0x4
1002c595:	push   0x1007a228
1002c59a:	mov    ds:0x1008a064,eax
1002c59f:	mov    DWORD PTR ds:0x1008a068,0x4
1002c5a9:	call   0x10003340
1002c5ae:	push   0x1007a1f8
1002c5b3:	push   esi
1002c5b4:	push   0x1007a1f0
1002c5b9:	mov    ds:0x1008a06c,eax
1002c5be:	mov    DWORD PTR ds:0x1008a070,esi
1002c5c4:	call   0x10003340
1002c5c9:	push   0x1007a1b8
1002c5ce:	push   0x3
1002c5d0:	push   0x1007a1b4
1002c5d5:	mov    ds:0x1008a074,eax
1002c5da:	mov    DWORD PTR ds:0x1008a078,0x3
1002c5e4:	call   0x10003340
1002c5e9:	add    esp,0x48
1002c5ec:	push   0x1007a174
1002c5f1:	push   ebx
1002c5f2:	push   0x1007a16c
1002c5f7:	mov    ds:0x1008a07c,eax
1002c5fc:	mov    DWORD PTR ds:0x1008a080,ebx
1002c602:	call   0x10003340
1002c607:	push   0x1007a13c
1002c60c:	mov    ds:0x1008a084,eax
1002c611:	mov    DWORD PTR ds:0x1008a088,0x3
1002c61b:	push   0x3
1002c61d:	push   0x1007a138
1002c622:	call   0x10003340
1002c627:	push   0x1007a0fc
1002c62c:	push   ebx
1002c62d:	push   0x1007a0f4
1002c632:	mov    ds:0x1008a08c,eax
1002c637:	mov    DWORD PTR ds:0x1008a090,ebx
1002c63d:	call   0x10003340
1002c642:	push   0x1007a0d0
1002c647:	push   ebx
1002c648:	push   0x1007a0c8
1002c64d:	mov    ds:0x1008a094,eax
1002c652:	mov    DWORD PTR ds:0x1008a098,ebx
1002c658:	call   0x10003340
1002c65d:	push   0x1007a09c
1002c662:	push   ebx
1002c663:	push   0x1007a094
1002c668:	mov    ds:0x1008a09c,eax
1002c66d:	mov    DWORD PTR ds:0x1008a0a0,ebx
1002c673:	call   0x10003340
1002c678:	push   0x1007a05c
1002c67d:	push   ebx
1002c67e:	push   0x1007a054
1002c683:	mov    ds:0x1008a0a4,eax
1002c688:	mov    DWORD PTR ds:0x1008a0a8,ebx
1002c68e:	call   0x10003340
1002c693:	add    esp,0x48
1002c696:	push   0x1007a028
1002c69b:	push   ebp
1002c69c:	push   0x1007a01c
1002c6a1:	mov    ds:0x1008a0ac,eax
1002c6a6:	mov    DWORD PTR ds:0x1008a0b0,ebp
1002c6ac:	call   0x10003340
1002c6b1:	push   0x10079ff8
1002c6b6:	push   edi
1002c6b7:	push   0x10079ff0
1002c6bc:	mov    ds:0x1008a0b4,eax
1002c6c1:	mov    DWORD PTR ds:0x1008a0b8,edi
1002c6c7:	call   0x10003340
1002c6cc:	push   0x10079fc0
1002c6d1:	push   esi
1002c6d2:	push   0x10079fb8
1002c6d7:	mov    ds:0x1008a0bc,eax
1002c6dc:	mov    DWORD PTR ds:0x1008a0c0,esi
1002c6e2:	call   0x10003340
1002c6e7:	push   0x10079f80
1002c6ec:	push   ebx
1002c6ed:	push   0x10079f78
1002c6f2:	mov    ds:0x1008a0c4,eax
1002c6f7:	mov    DWORD PTR ds:0x1008a0c8,ebx
1002c6fd:	call   0x10003340
1002c702:	push   0x10079f40
1002c707:	push   esi
1002c708:	push   0x10079f38
1002c70d:	mov    ds:0x1008a0cc,eax
1002c712:	mov    DWORD PTR ds:0x1008a0d0,esi
1002c718:	call   0x10003340
1002c71d:	push   0x10079f0c
1002c722:	push   ebx
1002c723:	push   0x10079f04
1002c728:	mov    ds:0x1008a0d4,eax
1002c72d:	mov    DWORD PTR ds:0x1008a0d8,ebx
1002c733:	call   0x10003340
1002c738:	add    esp,0x48
1002c73b:	push   0x10079edc
1002c740:	push   esi
1002c741:	push   0x10079ed4
1002c746:	mov    ds:0x1008a0dc,eax
1002c74b:	mov    DWORD PTR ds:0x1008a0e0,esi
1002c751:	call   0x10003340
1002c756:	push   0x10079eb0
1002c75b:	push   ebx
1002c75c:	push   0x10079ea8
1002c761:	mov    ds:0x1008a0e4,eax
1002c766:	mov    DWORD PTR ds:0x1008a0e8,ebx
1002c76c:	call   0x10003340
1002c771:	push   0x10079e7c
1002c776:	push   esi
1002c777:	mov    ds:0x1008a0ec,eax
1002c77c:	mov    DWORD PTR ds:0x1008a0f0,esi
1002c782:	push   0x10079e74
1002c787:	call   0x10003340
1002c78c:	push   0x10079e40
1002c791:	push   esi
1002c792:	push   0x10079e38
1002c797:	mov    ds:0x1008a0f4,eax
1002c79c:	mov    DWORD PTR ds:0x1008a0f8,esi
1002c7a2:	call   0x10003340
1002c7a7:	push   0x10079dfc
1002c7ac:	push   ebx
1002c7ad:	push   0x10079df4
1002c7b2:	mov    ds:0x1008a0fc,eax
1002c7b7:	mov    DWORD PTR ds:0x1008a100,ebx
1002c7bd:	call   0x10003340
1002c7c2:	push   0x10079db8
1002c7c7:	push   ebx
1002c7c8:	push   0x10079db0
1002c7cd:	mov    ds:0x1008a104,eax
1002c7d2:	mov    DWORD PTR ds:0x1008a108,ebx
1002c7d8:	call   0x10003340
1002c7dd:	add    esp,0x48
1002c7e0:	push   0x10079d80
1002c7e5:	push   esi
1002c7e6:	push   0x10079d78
1002c7eb:	mov    ds:0x1008a10c,eax
1002c7f0:	mov    DWORD PTR ds:0x1008a110,esi
1002c7f6:	call   0x10003340
1002c7fb:	push   0x10079d38
1002c800:	push   ebx
1002c801:	push   0x10079d30
1002c806:	mov    ds:0x1008a114,eax
1002c80b:	mov    DWORD PTR ds:0x1008a118,ebx
1002c811:	call   0x10003340
1002c816:	push   0x10079d08
1002c81b:	push   esi
1002c81c:	push   0x10079d00
1002c821:	mov    ds:0x1008a11c,eax
1002c826:	mov    DWORD PTR ds:0x1008a120,esi
1002c82c:	call   0x10003340
1002c831:	push   0x10079ccc
1002c836:	push   ebx
1002c837:	push   0x10079cc4
1002c83c:	mov    ds:0x1008a124,eax
1002c841:	mov    DWORD PTR ds:0x1008a128,ebx
1002c847:	call   0x10003340
1002c84c:	push   0x10079c94
1002c851:	push   esi
1002c852:	push   0x10079c8c
1002c857:	mov    ds:0x1008a12c,eax
1002c85c:	mov    DWORD PTR ds:0x1008a130,esi
1002c862:	call   0x10003340
1002c867:	push   0x10079c54
1002c86c:	push   esi
1002c86d:	push   0x10079c4c
1002c872:	mov    ds:0x1008a134,eax
1002c877:	mov    DWORD PTR ds:0x1008a138,esi
1002c87d:	call   0x10003340
1002c882:	add    esp,0x48
1002c885:	push   0x10079c10
1002c88a:	push   ebx
1002c88b:	push   0x10079c08
1002c890:	mov    ds:0x1008a13c,eax
1002c895:	mov    DWORD PTR ds:0x1008a140,ebx
1002c89b:	call   0x10003340
1002c8a0:	push   0x10079bc8
1002c8a5:	push   0x4
1002c8a7:	push   0x10079bc0
1002c8ac:	mov    ds:0x1008a144,eax
1002c8b1:	mov    DWORD PTR ds:0x1008a148,0x4
1002c8bb:	call   0x10003340
1002c8c0:	push   0x10079b88
1002c8c5:	push   ebx
1002c8c6:	push   0x10079b80
1002c8cb:	mov    ds:0x1008a14c,eax
1002c8d0:	mov    DWORD PTR ds:0x1008a150,ebx
1002c8d6:	call   0x10003340
1002c8db:	push   0x10079b54
1002c8e0:	push   0x4
1002c8e2:	push   0x10079b4c
1002c8e7:	mov    ds:0x1008a154,eax
1002c8ec:	mov    DWORD PTR ds:0x1008a158,0x4
1002c8f6:	call   0x10003340
1002c8fb:	push   0x10079b18
1002c900:	push   ebx
1002c901:	push   0x10079b10
1002c906:	mov    ds:0x1008a15c,eax
1002c90b:	mov    DWORD PTR ds:0x1008a160,ebx
1002c911:	call   0x10003340
1002c916:	push   0x10079ad8
1002c91b:	push   0x4
1002c91d:	push   0x10079ad0
1002c922:	mov    ds:0x1008a164,eax
1002c927:	mov    DWORD PTR ds:0x1008a168,0x4
1002c931:	call   0x10003340
1002c936:	add    esp,0x48
1002c939:	push   0x10079aac
1002c93e:	push   ebx
1002c93f:	push   0x10079aa4
1002c944:	mov    ds:0x1008a16c,eax
1002c949:	mov    DWORD PTR ds:0x1008a170,ebx
1002c94f:	call   0x10003340
1002c954:	push   0x10079a6c
1002c959:	push   ebx
1002c95a:	push   0x10079a64
1002c95f:	mov    ds:0x1008a174,eax
1002c964:	mov    DWORD PTR ds:0x1008a178,ebx
1002c96a:	call   0x10003340
1002c96f:	push   0x10079a2c
1002c974:	push   0x4
1002c976:	push   0x10079a24
1002c97b:	mov    ds:0x1008a17c,eax
1002c980:	mov    DWORD PTR ds:0x1008a180,0x4
1002c98a:	call   0x10003340
1002c98f:	push   0x100799e4
1002c994:	push   0x4
1002c996:	push   0x100799dc
1002c99b:	mov    ds:0x1008a184,eax
1002c9a0:	mov    DWORD PTR ds:0x1008a188,0x4
1002c9aa:	call   0x10003340
1002c9af:	push   0x100799b4
1002c9b4:	push   ebx
1002c9b5:	push   0x100799ac
1002c9ba:	mov    ds:0x1008a18c,eax
1002c9bf:	mov    DWORD PTR ds:0x1008a190,ebx
1002c9c5:	call   0x10003340
1002c9ca:	push   0x1007996c
1002c9cf:	push   0x4
1002c9d1:	push   0x10079964
1002c9d6:	mov    ds:0x1008a194,eax
1002c9db:	mov    DWORD PTR ds:0x1008a198,0x4
1002c9e5:	call   0x10003340
1002c9ea:	add    esp,0x48
1002c9ed:	push   0x10079930
1002c9f2:	push   ebx
1002c9f3:	push   0x10079928
1002c9f8:	mov    ds:0x1008a19c,eax
1002c9fd:	mov    DWORD PTR ds:0x1008a1a0,ebx
1002ca03:	call   0x10003340
1002ca08:	push   0x100798e8
1002ca0d:	push   0x4
1002ca0f:	push   0x100798e0
1002ca14:	mov    ds:0x1008a1a4,eax
1002ca19:	mov    DWORD PTR ds:0x1008a1a8,0x4
1002ca23:	call   0x10003340
1002ca28:	push   0x100798b8
1002ca2d:	push   ebx
1002ca2e:	push   0x100798b0
1002ca33:	mov    ds:0x1008a1ac,eax
1002ca38:	mov    DWORD PTR ds:0x1008a1b0,ebx
1002ca3e:	call   0x10003340
1002ca43:	push   0x10079884
1002ca48:	push   ebx
1002ca49:	push   0x1007987c
1002ca4e:	mov    ds:0x1008a1b4,eax
1002ca53:	mov    DWORD PTR ds:0x1008a1b8,ebx
1002ca59:	call   0x10003340
1002ca5e:	push   0x1007984c
1002ca63:	push   0x4
1002ca65:	push   0x10079844
1002ca6a:	mov    ds:0x1008a1bc,eax
1002ca6f:	mov    DWORD PTR ds:0x1008a1c0,0x4
1002ca79:	call   0x10003340
1002ca7e:	mov    ds:0x1008a1c4,eax
1002ca83:	push   0x10079810
1002ca88:	push   ebx
1002ca89:	push   0x10079808
1002ca8e:	mov    DWORD PTR ds:0x1008a1c8,ebx
1002ca94:	call   0x10003340
1002ca99:	add    esp,0x48
1002ca9c:	push   0x100797e0
1002caa1:	push   0x2
1002caa3:	push   0x100797dc
1002caa8:	mov    ds:0x1008a1cc,eax
1002caad:	mov    DWORD PTR ds:0x1008a1d0,0x2
1002cab7:	call   0x10003340
1002cabc:	push   0x100797b8
1002cac1:	push   0x4
1002cac3:	push   0x100797b0
1002cac8:	mov    ds:0x1008a1d4,eax
1002cacd:	mov    DWORD PTR ds:0x1008a1d8,0x4
1002cad7:	call   0x10003340
1002cadc:	push   0x10079780
1002cae1:	push   0x3
1002cae3:	push   0x1007977c
1002cae8:	mov    ds:0x1008a1dc,eax
1002caed:	mov    DWORD PTR ds:0x1008a1e0,0x3
1002caf7:	call   0x10003340
1002cafc:	push   0x10079740
1002cb01:	push   0x3
1002cb03:	push   0x1007973c
1002cb08:	mov    ds:0x1008a1e4,eax
1002cb0d:	mov    DWORD PTR ds:0x1008a1e8,0x3
1002cb17:	call   0x10003340
1002cb1c:	push   0x10079710
1002cb21:	push   0x4
1002cb23:	push   0x10079708
1002cb28:	mov    ds:0x1008a1ec,eax
1002cb2d:	mov    DWORD PTR ds:0x1008a1f0,0x4
1002cb37:	call   0x10003340
1002cb3c:	push   0x100796cc
1002cb41:	push   edi
1002cb42:	push   0x100796c4
1002cb47:	mov    ds:0x1008a1f4,eax
1002cb4c:	mov    DWORD PTR ds:0x1008a1f8,edi
1002cb52:	call   0x10003340
1002cb57:	add    esp,0x48
1002cb5a:	push   0x100796a0
1002cb5f:	push   0x3
1002cb61:	push   0x1007969c
1002cb66:	mov    ds:0x1008a1fc,eax
1002cb6b:	mov    DWORD PTR ds:0x1008a200,0x3
1002cb75:	call   0x10003340
1002cb7a:	push   0x10079664
1002cb7f:	push   0x3
1002cb81:	push   0x10079660
1002cb86:	mov    ds:0x1008a204,eax
1002cb8b:	mov    DWORD PTR ds:0x1008a208,0x3
1002cb95:	call   0x10003340
1002cb9a:	push   0x10079628
1002cb9f:	push   0x3
1002cba1:	push   0x10079624
1002cba6:	mov    ds:0x1008a20c,eax
1002cbab:	mov    DWORD PTR ds:0x1008a210,0x3
1002cbb5:	call   0x10003340
1002cbba:	push   0x100795fc
1002cbbf:	push   0x3
1002cbc1:	push   0x100795f8
1002cbc6:	mov    ds:0x1008a214,eax
1002cbcb:	mov    DWORD PTR ds:0x1008a218,0x3
1002cbd5:	call   0x10003340
1002cbda:	push   0x100795b8
1002cbdf:	push   ebx
1002cbe0:	push   0x100795b0
1002cbe5:	mov    ds:0x1008a21c,eax
1002cbea:	mov    DWORD PTR ds:0x1008a220,ebx
1002cbf0:	call   0x10003340
1002cbf5:	push   0x10079570
1002cbfa:	push   0x3
1002cbfc:	push   0x1007956c
1002cc01:	mov    ds:0x1008a224,eax
1002cc06:	mov    DWORD PTR ds:0x1008a228,0x3
1002cc10:	call   0x10003340
1002cc15:	add    esp,0x48
1002cc18:	mov    ds:0x1008a22c,eax
1002cc1d:	push   0x10079534
1002cc22:	push   0x3
1002cc24:	push   0x10079530
1002cc29:	mov    DWORD PTR ds:0x1008a230,0x3
1002cc33:	call   0x10003340
1002cc38:	push   0x10079508
1002cc3d:	push   ebx
1002cc3e:	push   0x10079500
1002cc43:	mov    ds:0x1008a234,eax
1002cc48:	mov    DWORD PTR ds:0x1008a238,ebx
1002cc4e:	call   0x10003340
1002cc53:	push   0x100794c0
1002cc58:	push   0x4
1002cc5a:	push   0x100794b8
1002cc5f:	mov    ds:0x1008a23c,eax
1002cc64:	mov    DWORD PTR ds:0x1008a240,0x4
1002cc6e:	call   0x10003340
1002cc73:	push   0x10079484
1002cc78:	push   esi
1002cc79:	push   0x1007947c
1002cc7e:	mov    ds:0x1008a244,eax
1002cc83:	mov    DWORD PTR ds:0x1008a248,esi
1002cc89:	call   0x10003340
1002cc8e:	push   0x10079440
1002cc93:	push   ebx
1002cc94:	push   0x10079438
1002cc99:	mov    ds:0x1008a24c,eax
1002cc9e:	mov    DWORD PTR ds:0x1008a250,ebx
1002cca4:	call   0x10003340
1002cca9:	push   0x100793f8
1002ccae:	push   0x4
1002ccb0:	push   0x100793f0
1002ccb5:	mov    ds:0x1008a254,eax
1002ccba:	mov    DWORD PTR ds:0x1008a258,0x4
1002ccc4:	call   0x10003340
1002ccc9:	add    esp,0x48
1002cccc:	push   0x100793c8
1002ccd1:	push   0x3
1002ccd3:	push   0x100793c4
1002ccd8:	mov    ds:0x1008a25c,eax
1002ccdd:	mov    DWORD PTR ds:0x1008a260,0x3
1002cce7:	call   0x10003340
1002ccec:	push   0x100793a0
1002ccf1:	push   0x4
1002ccf3:	push   0x10079398
1002ccf8:	mov    ds:0x1008a264,eax
1002ccfd:	mov    DWORD PTR ds:0x1008a268,0x4
1002cd07:	call   0x10003340
1002cd0c:	push   0x10079364
1002cd11:	push   0x3
1002cd13:	push   0x10079360
1002cd18:	mov    ds:0x1008a26c,eax
1002cd1d:	mov    DWORD PTR ds:0x1008a270,0x3
1002cd27:	call   0x10003340
1002cd2c:	push   0x10079324
1002cd31:	push   0x4
1002cd33:	push   0x1007931c
1002cd38:	mov    ds:0x1008a274,eax
1002cd3d:	mov    DWORD PTR ds:0x1008a278,0x4
1002cd47:	call   0x10003340
1002cd4c:	push   0x100792e0
1002cd51:	push   0x4
1002cd53:	push   0x100792d8
1002cd58:	mov    ds:0x1008a27c,eax
1002cd5d:	mov    DWORD PTR ds:0x1008a280,0x4
1002cd67:	call   0x10003340
1002cd6c:	push   0x100792b0
1002cd71:	push   0x4
1002cd73:	push   0x100792a8
1002cd78:	mov    ds:0x1008a284,eax
1002cd7d:	mov    DWORD PTR ds:0x1008a288,0x4
1002cd87:	call   0x10003340
1002cd8c:	add    esp,0x48
1002cd8f:	push   0x1007927c
1002cd94:	push   0x4
1002cd96:	push   0x10079274
1002cd9b:	mov    ds:0x1008a28c,eax
1002cda0:	mov    DWORD PTR ds:0x1008a290,0x4
1002cdaa:	call   0x10003340
1002cdaf:	mov    ds:0x1008a294,eax
1002cdb4:	mov    DWORD PTR ds:0x1008a298,0x4
1002cdbe:	push   0x10079238
1002cdc3:	push   0x4
1002cdc5:	push   0x10079230
1002cdca:	call   0x10003340
1002cdcf:	push   0x10079200
1002cdd4:	push   0x4
1002cdd6:	push   0x100791f8
1002cddb:	mov    ds:0x1008a29c,eax
1002cde0:	mov    DWORD PTR ds:0x1008a2a0,0x4
1002cdea:	call   0x10003340
1002cdef:	push   0x100791d4
1002cdf4:	push   0x4
1002cdf6:	push   0x100791cc
1002cdfb:	mov    ds:0x1008a2a4,eax
1002ce00:	mov    DWORD PTR ds:0x1008a2a8,0x4
1002ce0a:	call   0x10003340
1002ce0f:	push   0x100791a8
1002ce14:	push   0x4
1002ce16:	push   0x100791a0
1002ce1b:	mov    ds:0x1008a2ac,eax
1002ce20:	mov    DWORD PTR ds:0x1008a2b0,0x4
1002ce2a:	call   0x10003340
1002ce2f:	push   0x10079174
1002ce34:	push   esi
1002ce35:	push   0x1007916c
1002ce3a:	mov    ds:0x1008a2b4,eax
1002ce3f:	mov    DWORD PTR ds:0x1008a2b8,esi
1002ce45:	call   0x10003340
1002ce4a:	add    esp,0x48
1002ce4d:	push   0x10079130
1002ce52:	push   esi
1002ce53:	push   0x10079128
1002ce58:	mov    ds:0x1008a2bc,eax
1002ce5d:	mov    DWORD PTR ds:0x1008a2c0,esi
1002ce63:	call   0x10003340
1002ce68:	push   0x100790e8
1002ce6d:	push   ebp
1002ce6e:	push   0x100790dc
1002ce73:	mov    ds:0x1008a2c4,eax
1002ce78:	mov    DWORD PTR ds:0x1008a2c8,ebp
1002ce7e:	call   0x10003340
1002ce83:	push   0x100790b4
1002ce88:	push   ebp
1002ce89:	push   0x100790a8
1002ce8e:	mov    ds:0x1008a2cc,eax
1002ce93:	mov    DWORD PTR ds:0x1008a2d0,ebp
1002ce99:	call   0x10003340
1002ce9e:	push   0x1007906c
1002cea3:	push   esi
1002cea4:	push   0x10079064
1002cea9:	mov    ds:0x1008a2d4,eax
1002ceae:	mov    DWORD PTR ds:0x1008a2d8,esi
1002ceb4:	call   0x10003340
1002ceb9:	push   0x10079028
1002cebe:	push   edi
1002cebf:	push   0x10079020
1002cec4:	mov    ds:0x1008a2dc,eax
1002cec9:	mov    DWORD PTR ds:0x1008a2e0,edi
1002cecf:	call   0x10003340
1002ced4:	push   0x10078fe8
1002ced9:	push   ebx
1002ceda:	push   0x10078fe0
1002cedf:	mov    ds:0x1008a2e4,eax
1002cee4:	mov    DWORD PTR ds:0x1008a2e8,ebx
1002ceea:	call   0x10003340
1002ceef:	add    esp,0x48
1002cef2:	push   0x10078fa4
1002cef7:	push   esi
1002cef8:	push   0x10078f9c
1002cefd:	mov    ds:0x1008a2ec,eax
1002cf02:	mov    DWORD PTR ds:0x1008a2f0,esi
1002cf08:	call   0x10003340
1002cf0d:	push   0x10078f78
1002cf12:	push   esi
1002cf13:	push   0x10078f70
1002cf18:	mov    ds:0x1008a2f4,eax
1002cf1d:	mov    DWORD PTR ds:0x1008a2f8,esi
1002cf23:	call   0x10003340
1002cf28:	mov    ds:0x1008a2fc,eax
1002cf2d:	mov    DWORD PTR ds:0x1008a300,ebx
1002cf33:	push   0x10078f40
1002cf38:	push   ebx
1002cf39:	push   0x10078f38
1002cf3e:	call   0x10003340
1002cf43:	push   0x10078f04
1002cf48:	push   edi
1002cf49:	push   0x10078efc
1002cf4e:	mov    ds:0x1008a304,eax
1002cf53:	mov    DWORD PTR ds:0x1008a308,edi
1002cf59:	call   0x10003340
1002cf5e:	push   0x10078ebc
1002cf63:	push   esi
1002cf64:	push   0x10078eb4
1002cf69:	mov    ds:0x1008a30c,eax
1002cf6e:	mov    DWORD PTR ds:0x1008a310,esi
1002cf74:	call   0x10003340
1002cf79:	push   0x10078e7c
1002cf7e:	push   esi
1002cf7f:	push   0x10078e74
1002cf84:	mov    ds:0x1008a314,eax
1002cf89:	mov    DWORD PTR ds:0x1008a318,esi
1002cf8f:	call   0x10003340
1002cf94:	add    esp,0x48
1002cf97:	push   0x10078e34
1002cf9c:	push   0x4
1002cf9e:	push   0x10078e2c
1002cfa3:	mov    ds:0x1008a31c,eax
1002cfa8:	mov    DWORD PTR ds:0x1008a320,0x4
1002cfb2:	call   0x10003340
1002cfb7:	push   0x10078df8
1002cfbc:	push   0x4
1002cfbe:	push   0x10078df0
1002cfc3:	mov    ds:0x1008a324,eax
1002cfc8:	mov    DWORD PTR ds:0x1008a328,0x4
1002cfd2:	call   0x10003340
1002cfd7:	push   0x10078dc4
1002cfdc:	push   esi
1002cfdd:	push   0x10078dbc
1002cfe2:	mov    ds:0x1008a32c,eax
1002cfe7:	mov    DWORD PTR ds:0x1008a330,esi
1002cfed:	call   0x10003340
1002cff2:	push   0x10078d80
1002cff7:	push   edi
1002cff8:	push   0x10078d78
1002cffd:	mov    ds:0x1008a334,eax
1002d002:	mov    DWORD PTR ds:0x1008a338,edi
1002d008:	call   0x10003340
1002d00d:	push   0x10078d4c
1002d012:	push   esi
1002d013:	push   0x10078d44
1002d018:	mov    ds:0x1008a33c,eax
1002d01d:	mov    DWORD PTR ds:0x1008a340,esi
1002d023:	call   0x10003340
1002d028:	push   0x10078d18
1002d02d:	push   esi
1002d02e:	push   0x10078d10
1002d033:	mov    ds:0x1008a344,eax
1002d038:	mov    DWORD PTR ds:0x1008a348,esi
1002d03e:	call   0x10003340
1002d043:	add    esp,0x48
1002d046:	push   0x10078cd4
1002d04b:	push   ebp
1002d04c:	push   0x10078cc8
1002d051:	mov    ds:0x1008a34c,eax
1002d056:	mov    DWORD PTR ds:0x1008a350,ebp
1002d05c:	call   0x10003340
1002d061:	push   0x10078ca4
1002d066:	push   0x9
1002d068:	push   0x10078c98
1002d06d:	mov    ds:0x1008a354,eax
1002d072:	mov    DWORD PTR ds:0x1008a358,0x9
1002d07c:	call   0x10003340
1002d081:	push   0x10078c60
1002d086:	push   ebx
1002d087:	push   0x10078c58
1002d08c:	mov    ds:0x1008a35c,eax
1002d091:	mov    DWORD PTR ds:0x1008a360,ebx
1002d097:	call   0x10003340
1002d09c:	push   0x10078c18
1002d0a1:	mov    ds:0x1008a364,eax
1002d0a6:	mov    DWORD PTR ds:0x1008a368,ebx
1002d0ac:	push   ebx
1002d0ad:	push   0x10078c0c
1002d0b2:	call   0x10003340
1002d0b7:	push   0x10078bd4
1002d0bc:	push   ebx
1002d0bd:	push   0x10078bcc
1002d0c2:	mov    ds:0x1008a36c,eax
1002d0c7:	mov    DWORD PTR ds:0x1008a370,ebx
1002d0cd:	call   0x10003340
1002d0d2:	push   0x10078ba8
1002d0d7:	push   ebx
1002d0d8:	push   0x10078ba0
1002d0dd:	mov    ds:0x1008a374,eax
1002d0e2:	mov    DWORD PTR ds:0x1008a378,ebx
1002d0e8:	call   0x10003340
1002d0ed:	add    esp,0x48
1002d0f0:	push   0x10078b6c
1002d0f5:	push   esi
1002d0f6:	push   0x10078b64
1002d0fb:	mov    ds:0x1008a37c,eax
1002d100:	mov    DWORD PTR ds:0x1008a380,esi
1002d106:	call   0x10003340
1002d10b:	push   0x10078b38
1002d110:	push   edi
1002d111:	push   0x10078b30
1002d116:	mov    ds:0x1008a384,eax
1002d11b:	mov    DWORD PTR ds:0x1008a388,edi
1002d121:	call   0x10003340
1002d126:	push   0x10078af8
1002d12b:	push   edi
1002d12c:	push   0x10078af0
1002d131:	mov    ds:0x1008a38c,eax
1002d136:	mov    DWORD PTR ds:0x1008a390,edi
1002d13c:	call   0x10003340
1002d141:	push   0x10078acc
1002d146:	push   ebx
1002d147:	push   0x10078ac4
1002d14c:	mov    ds:0x1008a394,eax
1002d151:	mov    DWORD PTR ds:0x1008a398,ebx
1002d157:	call   0x10003340
1002d15c:	push   0x10078a84
1002d161:	push   ebx
1002d162:	push   0x10078a7c
1002d167:	mov    ds:0x1008a39c,eax
1002d16c:	mov    DWORD PTR ds:0x1008a3a0,ebx
1002d172:	call   0x10003340
1002d177:	push   0x10078a4c
1002d17c:	push   edi
1002d17d:	push   0x10078a44
1002d182:	mov    ds:0x1008a3a4,eax
1002d187:	mov    DWORD PTR ds:0x1008a3a8,edi
1002d18d:	call   0x10003340
1002d192:	add    esp,0x48
1002d195:	push   0x10078a18
1002d19a:	push   ebx
1002d19b:	push   0x10078a10
1002d1a0:	mov    ds:0x1008a3ac,eax
1002d1a5:	mov    DWORD PTR ds:0x1008a3b0,ebx
1002d1ab:	call   0x10003340
1002d1b0:	push   0x100789d0
1002d1b5:	push   ebx
1002d1b6:	push   0x100789c8
1002d1bb:	mov    ds:0x1008a3b4,eax
1002d1c0:	mov    DWORD PTR ds:0x1008a3b8,ebx
1002d1c6:	call   0x10003340
1002d1cb:	push   0x100789a4
1002d1d0:	push   edi
1002d1d1:	push   0x1007899c
1002d1d6:	mov    ds:0x1008a3bc,eax
1002d1db:	mov    DWORD PTR ds:0x1008a3c0,edi
1002d1e1:	call   0x10003340
1002d1e6:	push   0x10078970
1002d1eb:	push   ebx
1002d1ec:	push   0x10078968
1002d1f1:	mov    ds:0x1008a3c4,eax
1002d1f6:	mov    DWORD PTR ds:0x1008a3c8,ebx
1002d1fc:	call   0x10003340
1002d201:	push   0x1007892c
1002d206:	push   ebp
1002d207:	mov    ds:0x1008a3cc,eax
1002d20c:	mov    DWORD PTR ds:0x1008a3d0,ebp
1002d212:	push   0x10078920
1002d217:	call   0x10003340
1002d21c:	push   0x100788fc
1002d221:	push   ebp
1002d222:	push   0x100788f0
1002d227:	mov    ds:0x1008a3d4,eax
1002d22c:	mov    DWORD PTR ds:0x1008a3d8,ebp
1002d232:	call   0x10003340
1002d237:	add    esp,0x48
1002d23a:	push   0x100788bc
1002d23f:	push   esi
1002d240:	push   0x100788b4
1002d245:	mov    ds:0x1008a3dc,eax
1002d24a:	mov    DWORD PTR ds:0x1008a3e0,esi
1002d250:	call   0x10003340
1002d255:	push   0x1007888c
1002d25a:	push   ebx
1002d25b:	push   0x10078884
1002d260:	mov    ds:0x1008a3e4,eax
1002d265:	mov    DWORD PTR ds:0x1008a3e8,ebx
1002d26b:	call   0x10003340
1002d270:	push   0x10078844
1002d275:	push   edi
1002d276:	push   0x1007883c
1002d27b:	mov    ds:0x1008a3ec,eax
1002d280:	mov    DWORD PTR ds:0x1008a3f0,edi
1002d286:	call   0x10003340
1002d28b:	push   0x10078818
1002d290:	push   ebx
1002d291:	push   0x10078810
1002d296:	mov    ds:0x1008a3f4,eax
1002d29b:	mov    DWORD PTR ds:0x1008a3f8,ebx
1002d2a1:	call   0x10003340
1002d2a6:	push   0x100787d4
1002d2ab:	push   ebp
1002d2ac:	push   0x100787c8
1002d2b1:	mov    ds:0x1008a3fc,eax
1002d2b6:	mov    DWORD PTR ds:0x1008a400,ebp
1002d2bc:	call   0x10003340
1002d2c1:	push   0x10078798
1002d2c6:	push   edi
1002d2c7:	push   0x10078790
1002d2cc:	mov    ds:0x1008a404,eax
1002d2d1:	mov    DWORD PTR ds:0x1008a408,edi
1002d2d7:	call   0x10003340
1002d2dc:	add    esp,0x48
1002d2df:	push   0x1007875c
1002d2e4:	push   esi
1002d2e5:	push   0x10078754
1002d2ea:	mov    ds:0x1008a40c,eax
1002d2ef:	mov    DWORD PTR ds:0x1008a410,esi
1002d2f5:	call   0x10003340
1002d2fa:	push   0x10078720
1002d2ff:	push   edi
1002d300:	push   0x10078718
1002d305:	mov    ds:0x1008a414,eax
1002d30a:	mov    DWORD PTR ds:0x1008a418,edi
1002d310:	call   0x10003340
1002d315:	push   0x100786f4
1002d31a:	push   esi
1002d31b:	push   0x100786ec
1002d320:	mov    ds:0x1008a41c,eax
1002d325:	mov    DWORD PTR ds:0x1008a420,esi
1002d32b:	call   0x10003340
1002d330:	push   0x100786b8
1002d335:	push   esi
1002d336:	push   0x100786b0
1002d33b:	mov    ds:0x1008a424,eax
1002d340:	mov    DWORD PTR ds:0x1008a428,esi
1002d346:	call   0x10003340
1002d34b:	push   0x1007868c
1002d350:	push   ebx
1002d351:	push   0x10078684
1002d356:	mov    ds:0x1008a42c,eax
1002d35b:	mov    DWORD PTR ds:0x1008a430,ebx
1002d361:	call   0x10003340
1002d366:	push   0x10078654
1002d36b:	push   ebx
1002d36c:	push   0x1007864c
1002d371:	mov    ds:0x1008a434,eax
1002d376:	mov    DWORD PTR ds:0x1008a438,ebx
1002d37c:	call   0x10003340
1002d381:	add    esp,0x48
1002d384:	push   0x10078620
1002d389:	push   esi
1002d38a:	push   0x10078618
1002d38f:	mov    ds:0x1008a43c,eax
1002d394:	mov    DWORD PTR ds:0x1008a440,esi
1002d39a:	call   0x10003340
1002d39f:	push   0x100785ec
1002d3a4:	push   esi
1002d3a5:	push   0x100785e4
1002d3aa:	mov    ds:0x1008a444,eax
1002d3af:	mov    DWORD PTR ds:0x1008a448,esi
1002d3b5:	call   0x10003340
1002d3ba:	push   0x100785c0
1002d3bf:	push   edi
1002d3c0:	push   0x100785b8
1002d3c5:	mov    ds:0x1008a44c,eax
1002d3ca:	mov    DWORD PTR ds:0x1008a450,edi
1002d3d0:	call   0x10003340
1002d3d5:	push   0x10078578
1002d3da:	push   edi
1002d3db:	push   0x10078570
1002d3e0:	mov    ds:0x1008a454,eax
1002d3e5:	mov    DWORD PTR ds:0x1008a458,edi
1002d3eb:	call   0x10003340
1002d3f0:	push   0x10078544
1002d3f5:	push   edi
1002d3f6:	push   0x1007853c
1002d3fb:	mov    ds:0x1008a45c,eax
1002d400:	mov    DWORD PTR ds:0x1008a460,edi
1002d406:	call   0x10003340
1002d40b:	push   0x10078518
1002d410:	push   esi
1002d411:	push   0x10078510
1002d416:	mov    ds:0x1008a464,eax
1002d41b:	mov    DWORD PTR ds:0x1008a468,esi
1002d421:	call   0x10003340
1002d426:	add    esp,0x48
1002d429:	push   0x100784e0
1002d42e:	push   esi
1002d42f:	push   0x100784d8
1002d434:	mov    ds:0x1008a46c,eax
1002d439:	mov    DWORD PTR ds:0x1008a470,esi
1002d43f:	call   0x10003340
1002d444:	push   0x100784b4
1002d449:	push   ebp
1002d44a:	push   0x100784a8
1002d44f:	mov    ds:0x1008a474,eax
1002d454:	mov    DWORD PTR ds:0x1008a478,ebp
1002d45a:	call   0x10003340
1002d45f:	push   0x10078474
1002d464:	push   edi
1002d465:	push   0x1007846c
1002d46a:	mov    ds:0x1008a47c,eax
1002d46f:	mov    DWORD PTR ds:0x1008a480,edi
1002d475:	call   0x10003340
1002d47a:	push   0x1007843c
1002d47f:	push   ebp
1002d480:	push   0x10078430
1002d485:	mov    ds:0x1008a484,eax
1002d48a:	mov    DWORD PTR ds:0x1008a488,ebp
1002d490:	call   0x10003340
1002d495:	push   0x10078408
1002d49a:	push   edi
1002d49b:	push   0x10078400
1002d4a0:	mov    ds:0x1008a48c,eax
1002d4a5:	mov    DWORD PTR ds:0x1008a490,edi
1002d4ab:	call   0x10003340
1002d4b0:	push   0x100783dc
1002d4b5:	push   edi
1002d4b6:	push   0x100783d4
1002d4bb:	mov    ds:0x1008a494,eax
1002d4c0:	mov    DWORD PTR ds:0x1008a498,edi
1002d4c6:	call   0x10003340
1002d4cb:	add    esp,0x48
1002d4ce:	push   0x100783ac
1002d4d3:	push   0x9
1002d4d5:	push   0x100783a0
1002d4da:	mov    ds:0x1008a49c,eax
1002d4df:	mov    DWORD PTR ds:0x1008a4a0,0x9
1002d4e9:	call   0x10003340
1002d4ee:	push   0x10078374
1002d4f3:	push   ebp
1002d4f4:	push   0x10078368
1002d4f9:	mov    ds:0x1008a4a4,eax
1002d4fe:	mov    DWORD PTR ds:0x1008a4a8,ebp
1002d504:	call   0x10003340
1002d509:	push   0x10078328
1002d50e:	push   ebp
1002d50f:	push   0x1007831c
1002d514:	mov    ds:0x1008a4ac,eax
1002d519:	mov    DWORD PTR ds:0x1008a4b0,ebp
1002d51f:	call   0x10003340
1002d524:	push   0x100782e8
1002d529:	push   ebp
1002d52a:	push   0x100782dc
1002d52f:	mov    ds:0x1008a4b4,eax
1002d534:	mov    DWORD PTR ds:0x1008a4b8,ebp
1002d53a:	call   0x10003340
1002d53f:	push   0x100782b8
1002d544:	push   0x9
1002d546:	push   0x100782ac
1002d54b:	mov    ds:0x1008a4bc,eax
1002d550:	mov    DWORD PTR ds:0x1008a4c0,0x9
1002d55a:	call   0x10003340
1002d55f:	push   0x10078278
1002d564:	push   0x9
1002d566:	push   0x1007826c
1002d56b:	mov    ds:0x1008a4c4,eax
1002d570:	mov    DWORD PTR ds:0x1008a4c8,0x9
1002d57a:	call   0x10003340
1002d57f:	add    esp,0x48
1002d582:	push   0x10078244
1002d587:	push   ebp
1002d588:	push   0x10078238
1002d58d:	mov    ds:0x1008a4cc,eax
1002d592:	mov    DWORD PTR ds:0x1008a4d0,ebp
1002d598:	call   0x10003340
1002d59d:	push   0x100781fc
1002d5a2:	push   ebp
1002d5a3:	push   0x100781f0
1002d5a8:	mov    ds:0x1008a4d4,eax
1002d5ad:	mov    DWORD PTR ds:0x1008a4d8,ebp
1002d5b3:	call   0x10003340
1002d5b8:	push   0x100781b8
1002d5bd:	push   0x9
1002d5bf:	push   0x100781ac
1002d5c4:	mov    ds:0x1008a4dc,eax
1002d5c9:	mov    DWORD PTR ds:0x1008a4e0,0x9
1002d5d3:	call   0x10003340
1002d5d8:	push   0x1007816c
1002d5dd:	push   0x9
1002d5df:	push   0x10078160
1002d5e4:	mov    ds:0x1008a4e4,eax
1002d5e9:	mov    DWORD PTR ds:0x1008a4e8,0x9
1002d5f3:	call   0x10003340
1002d5f8:	push   0x10078120
1002d5fd:	push   edi
1002d5fe:	push   0x10078118
1002d603:	mov    ds:0x1008a4ec,eax
1002d608:	mov    DWORD PTR ds:0x1008a4f0,edi
1002d60e:	call   0x10003340
1002d613:	push   0x100780f4
1002d618:	push   esi
1002d619:	push   0x100780ec
1002d61e:	mov    ds:0x1008a4f4,eax
1002d623:	mov    DWORD PTR ds:0x1008a4f8,esi
1002d629:	call   0x10003340
1002d62e:	add    esp,0x48
1002d631:	push   0x100780c0
1002d636:	push   esi
1002d637:	push   0x100780b8
1002d63c:	mov    ds:0x1008a4fc,eax
1002d641:	mov    DWORD PTR ds:0x1008a500,esi
1002d647:	call   0x10003340
1002d64c:	push   0x10078094
1002d651:	push   ebp
1002d652:	push   0x10078088
1002d657:	mov    ds:0x1008a504,eax
1002d65c:	mov    DWORD PTR ds:0x1008a508,ebp
1002d662:	call   0x10003340
1002d667:	mov    ds:0x1008a50c,eax
1002d66c:	push   0x10078064
1002d671:	push   ebp
1002d672:	push   0x10078058
1002d677:	mov    DWORD PTR ds:0x1008a510,ebp
1002d67d:	call   0x10003340
1002d682:	push   0x10078024
1002d687:	push   edi
1002d688:	push   0x1007801c
1002d68d:	mov    ds:0x1008a514,eax
1002d692:	mov    DWORD PTR ds:0x1008a518,edi
1002d698:	call   0x10003340
1002d69d:	push   0x10077ff4
1002d6a2:	push   edi
1002d6a3:	push   0x10077fec
1002d6a8:	mov    ds:0x1008a51c,eax
1002d6ad:	mov    DWORD PTR ds:0x1008a520,edi
1002d6b3:	call   0x10003340
1002d6b8:	push   0x10077fb8
1002d6bd:	push   0x9
1002d6bf:	push   0x10077fac
1002d6c4:	mov    ds:0x1008a524,eax
1002d6c9:	mov    DWORD PTR ds:0x1008a528,0x9
1002d6d3:	call   0x10003340
1002d6d8:	add    esp,0x48
1002d6db:	push   0x10077f80
1002d6e0:	push   0xb
1002d6e2:	push   0x10077f74
1002d6e7:	mov    ds:0x1008a52c,eax
1002d6ec:	mov    DWORD PTR ds:0x1008a530,0xb
1002d6f6:	call   0x10003340
1002d6fb:	push   0x10077f50
1002d700:	push   0xa
1002d702:	push   0x10077f44
1002d707:	mov    ds:0x1008a534,eax
1002d70c:	mov    DWORD PTR ds:0x1008a538,0xa
1002d716:	call   0x10003340
1002d71b:	push   0x10077f10
1002d720:	push   0xa
1002d722:	push   0x10077f04
1002d727:	mov    ds:0x1008a53c,eax
1002d72c:	mov    DWORD PTR ds:0x1008a540,0xa
1002d736:	call   0x10003340
1002d73b:	push   0x10077ec8
1002d740:	push   0xa
1002d742:	push   0x10077ebc
1002d747:	mov    ds:0x1008a544,eax
1002d74c:	mov    DWORD PTR ds:0x1008a548,0xa
1002d756:	call   0x10003340
1002d75b:	push   0x10077e84
1002d760:	push   esi
1002d761:	push   0x10077e7c
1002d766:	mov    ds:0x1008a54c,eax
1002d76b:	mov    DWORD PTR ds:0x1008a550,esi
1002d771:	call   0x10003340
1002d776:	push   0x10077e58
1002d77b:	push   esi
1002d77c:	push   0x10077e50
1002d781:	mov    ds:0x1008a554,eax
1002d786:	mov    DWORD PTR ds:0x1008a558,esi
1002d78c:	call   0x10003340
1002d791:	add    esp,0x48
1002d794:	push   0x10077e10
1002d799:	push   edi
1002d79a:	push   0x10077e08
1002d79f:	mov    ds:0x1008a55c,eax
1002d7a4:	mov    DWORD PTR ds:0x1008a560,edi
1002d7aa:	call   0x10003340
1002d7af:	push   0x10077dcc
1002d7b4:	push   edi
1002d7b5:	push   0x10077dc4
1002d7ba:	mov    ds:0x1008a564,eax
1002d7bf:	mov    DWORD PTR ds:0x1008a568,edi
1002d7c5:	call   0x10003340
1002d7ca:	push   0x10077d84
1002d7cf:	push   ebp
1002d7d0:	push   0x10077d78
1002d7d5:	mov    ds:0x1008a56c,eax
1002d7da:	mov    DWORD PTR ds:0x1008a570,ebp
1002d7e0:	call   0x10003340
1002d7e5:	mov    ds:0x1008a574,eax
1002d7ea:	mov    DWORD PTR ds:0x1008a578,ebp
1002d7f0:	push   0x10077d4c
1002d7f5:	push   ebp
1002d7f6:	push   0x10077d40
1002d7fb:	call   0x10003340
1002d800:	push   0x10077d08
1002d805:	push   ebp
1002d806:	push   0x10077cfc
1002d80b:	mov    ds:0x1008a57c,eax
1002d810:	mov    DWORD PTR ds:0x1008a580,ebp
1002d816:	call   0x10003340
1002d81b:	push   0x10077cc8
1002d820:	push   ebp
1002d821:	push   0x10077cbc
1002d826:	mov    ds:0x1008a584,eax
1002d82b:	mov    DWORD PTR ds:0x1008a588,ebp
1002d831:	call   0x10003340
1002d836:	add    esp,0x48
1002d839:	push   0x10077c88
1002d83e:	push   0x9
1002d840:	push   0x10077c7c
1002d845:	mov    ds:0x1008a58c,eax
1002d84a:	mov    DWORD PTR ds:0x1008a590,0x9
1002d854:	call   0x10003340
1002d859:	push   0x10077c58
1002d85e:	push   0x9
1002d860:	push   0x10077c4c
1002d865:	mov    ds:0x1008a594,eax
1002d86a:	mov    DWORD PTR ds:0x1008a598,0x9
1002d874:	call   0x10003340
1002d879:	push   0x10077c18
1002d87e:	push   edi
1002d87f:	push   0x10077c10
1002d884:	mov    ds:0x1008a59c,eax
1002d889:	mov    DWORD PTR ds:0x1008a5a0,edi
1002d88f:	call   0x10003340
1002d894:	push   0x10077be8
1002d899:	push   edi
1002d89a:	push   0x10077be0
1002d89f:	mov    ds:0x1008a5a4,eax
1002d8a4:	mov    DWORD PTR ds:0x1008a5a8,edi
1002d8aa:	call   0x10003340
1002d8af:	push   0x10077ba4
1002d8b4:	push   edi
1002d8b5:	push   0x10077b9c
1002d8ba:	mov    ds:0x1008a5ac,eax
1002d8bf:	mov    DWORD PTR ds:0x1008a5b0,edi
1002d8c5:	call   0x10003340
1002d8ca:	push   0x10077b6c
1002d8cf:	push   edi
1002d8d0:	push   0x10077b64
1002d8d5:	mov    ds:0x1008a5b4,eax
1002d8da:	mov    DWORD PTR ds:0x1008a5b8,edi
1002d8e0:	call   0x10003340
1002d8e5:	add    esp,0x48
1002d8e8:	push   0x10077b28
1002d8ed:	push   ebp
1002d8ee:	push   0x10077b1c
1002d8f3:	mov    ds:0x1008a5bc,eax
1002d8f8:	mov    DWORD PTR ds:0x1008a5c0,ebp
1002d8fe:	call   0x10003340
1002d903:	push   0x10077af0
1002d908:	push   ebp
1002d909:	push   0x10077ae4
1002d90e:	mov    ds:0x1008a5c4,eax
1002d913:	mov    DWORD PTR ds:0x1008a5c8,ebp
1002d919:	call   0x10003340
1002d91e:	push   0x10077ab4
1002d923:	push   0x9
1002d925:	push   0x10077aa8
1002d92a:	mov    ds:0x1008a5cc,eax
1002d92f:	mov    DWORD PTR ds:0x1008a5d0,0x9
1002d939:	call   0x10003340
1002d93e:	push   0x10077a70
1002d943:	push   0x9
1002d945:	push   0x10077a64
1002d94a:	mov    ds:0x1008a5d4,eax
1002d94f:	mov    DWORD PTR ds:0x1008a5d8,0x9
1002d959:	call   0x10003340
1002d95e:	mov    ds:0x1008a5dc,eax
1002d963:	mov    DWORD PTR ds:0x1008a5e0,0x9
1002d96d:	push   0x10077a24
1002d972:	push   0x9
1002d974:	push   0x10077a18
1002d979:	call   0x10003340
1002d97e:	push   0x100779f0
1002d983:	push   0x9
1002d985:	push   0x100779e4
1002d98a:	mov    ds:0x1008a5e4,eax
1002d98f:	mov    DWORD PTR ds:0x1008a5e8,0x9
1002d999:	call   0x10003340
1002d99e:	add    esp,0x48
1002d9a1:	push   0x100779ac
1002d9a6:	push   0xa
1002d9a8:	push   0x100779a0
1002d9ad:	mov    ds:0x1008a5ec,eax
1002d9b2:	mov    DWORD PTR ds:0x1008a5f0,0xa
1002d9bc:	call   0x10003340
1002d9c1:	push   0x10077968
1002d9c6:	push   0xa
1002d9c8:	push   0x1007795c
1002d9cd:	mov    ds:0x1008a5f4,eax
1002d9d2:	mov    DWORD PTR ds:0x1008a5f8,0xa
1002d9dc:	call   0x10003340
1002d9e1:	push   0x1007792c
1002d9e6:	push   ebp
1002d9e7:	push   0x10077920
1002d9ec:	mov    ds:0x1008a5fc,eax
1002d9f1:	mov    DWORD PTR ds:0x1008a600,ebp
1002d9f7:	call   0x10003340
1002d9fc:	push   0x100778fc
1002da01:	push   ebp
1002da02:	push   0x100778f0
1002da07:	mov    ds:0x1008a604,eax
1002da0c:	mov    DWORD PTR ds:0x1008a608,ebp
1002da12:	call   0x10003340
1002da17:	push   0x100778c4
1002da1c:	push   ebp
1002da1d:	push   0x100778b8
1002da22:	mov    ds:0x1008a60c,eax
1002da27:	mov    DWORD PTR ds:0x1008a610,ebp
1002da2d:	call   0x10003340
1002da32:	push   0x10077890
1002da37:	push   ebp
1002da38:	push   0x10077884
1002da3d:	mov    ds:0x1008a614,eax
1002da42:	mov    DWORD PTR ds:0x1008a618,ebp
1002da48:	call   0x10003340
1002da4d:	add    esp,0x48
1002da50:	push   0x10077860
1002da55:	push   0x9
1002da57:	push   0x10077854
1002da5c:	mov    ds:0x1008a61c,eax
1002da61:	mov    DWORD PTR ds:0x1008a620,0x9
1002da6b:	call   0x10003340
1002da70:	push   0x1007781c
1002da75:	push   0x9
1002da77:	push   0x10077810
1002da7c:	mov    ds:0x1008a624,eax
1002da81:	mov    DWORD PTR ds:0x1008a628,0x9
1002da8b:	call   0x10003340
1002da90:	push   0x100777d8
1002da95:	push   edi
1002da96:	push   0x100777d0
1002da9b:	mov    ds:0x1008a62c,eax
1002daa0:	mov    DWORD PTR ds:0x1008a630,edi
1002daa6:	call   0x10003340
1002daab:	push   0x100777ac
1002dab0:	push   edi
1002dab1:	push   0x100777a4
1002dab6:	mov    ds:0x1008a634,eax
1002dabb:	mov    DWORD PTR ds:0x1008a638,edi
1002dac1:	call   0x10003340
1002dac6:	push   0x1007776c
1002dacb:	push   ebp
1002dacc:	push   0x10077760
1002dad1:	mov    ds:0x1008a63c,eax
1002dad6:	mov    DWORD PTR ds:0x1008a640,ebp
1002dadc:	call   0x10003340
1002dae1:	push   0x10077734
1002dae6:	mov    ds:0x1008a644,eax
1002daeb:	mov    DWORD PTR ds:0x1008a648,ebp
1002daf1:	push   ebp
1002daf2:	push   0x10077728
1002daf7:	call   0x10003340
1002dafc:	add    esp,0x48
1002daff:	push   0x100776f0
1002db04:	push   esi
1002db05:	push   0x100776e8
1002db0a:	mov    ds:0x1008a64c,eax
1002db0f:	mov    DWORD PTR ds:0x1008a650,esi
1002db15:	call   0x10003340
1002db1a:	push   0x100776c4
1002db1f:	push   esi
1002db20:	push   0x100776bc
1002db25:	mov    ds:0x1008a654,eax
1002db2a:	mov    DWORD PTR ds:0x1008a658,esi
1002db30:	call   0x10003340
1002db35:	push   0x10077684
1002db3a:	push   edi
1002db3b:	push   0x1007767c
1002db40:	mov    ds:0x1008a65c,eax
1002db45:	mov    DWORD PTR ds:0x1008a660,edi
1002db4b:	call   0x10003340
1002db50:	push   0x10077648
1002db55:	push   edi
1002db56:	push   0x10077640
1002db5b:	mov    ds:0x1008a664,eax
1002db60:	mov    DWORD PTR ds:0x1008a668,edi
1002db66:	call   0x10003340
1002db6b:	push   0x1007761c
1002db70:	push   esi
1002db71:	push   0x10077614
1002db76:	mov    ds:0x1008a66c,eax
1002db7b:	mov    DWORD PTR ds:0x1008a670,esi
1002db81:	call   0x10003340
1002db86:	push   0x100775ec
1002db8b:	push   edi
1002db8c:	push   0x100775e4
1002db91:	mov    ds:0x1008a674,eax
1002db96:	mov    DWORD PTR ds:0x1008a678,edi
1002db9c:	call   0x10003340
1002dba1:	add    esp,0x48
1002dba4:	push   0x100775a4
1002dba9:	push   esi
1002dbaa:	push   0x1007759c
1002dbaf:	mov    ds:0x1008a67c,eax
1002dbb4:	mov    DWORD PTR ds:0x1008a680,esi
1002dbba:	call   0x10003340
1002dbbf:	push   0x1007755c
1002dbc4:	push   edi
1002dbc5:	push   0x10077554
1002dbca:	mov    ds:0x1008a684,eax
1002dbcf:	mov    DWORD PTR ds:0x1008a688,edi
1002dbd5:	call   0x10003340
1002dbda:	push   0x10077528
1002dbdf:	push   esi
1002dbe0:	push   0x10077520
1002dbe5:	mov    ds:0x1008a68c,eax
1002dbea:	mov    DWORD PTR ds:0x1008a690,esi
1002dbf0:	call   0x10003340
1002dbf5:	push   0x100774e8
1002dbfa:	push   edi
1002dbfb:	push   0x100774e0
1002dc00:	mov    ds:0x1008a694,eax
1002dc05:	mov    DWORD PTR ds:0x1008a698,edi
1002dc0b:	call   0x10003340
1002dc10:	push   0x100774bc
1002dc15:	push   edi
1002dc16:	push   0x100774b4
1002dc1b:	mov    ds:0x1008a69c,eax
1002dc20:	mov    DWORD PTR ds:0x1008a6a0,edi
1002dc26:	call   0x10003340
1002dc2b:	push   0x10077488
1002dc30:	push   ebp
1002dc31:	push   0x1007747c
1002dc36:	mov    ds:0x1008a6a4,eax
1002dc3b:	mov    DWORD PTR ds:0x1008a6a8,ebp
1002dc41:	call   0x10003340
1002dc46:	add    esp,0x48
1002dc49:	push   0x10077458
1002dc4e:	mov    ds:0x1008a6ac,eax
1002dc53:	mov    DWORD PTR ds:0x1008a6b0,0x9
1002dc5d:	push   0x9
1002dc5f:	push   0x1007744c
1002dc64:	call   0x10003340
1002dc69:	push   0x1007740c
1002dc6e:	push   0xa
1002dc70:	push   0x10077400
1002dc75:	mov    ds:0x1008a6b4,eax
1002dc7a:	mov    DWORD PTR ds:0x1008a6b8,0xa
1002dc84:	call   0x10003340
1002dc89:	push   0x100773c0
1002dc8e:	push   esi
1002dc8f:	push   0x100773b8
1002dc94:	mov    ds:0x1008a6bc,eax
1002dc99:	mov    DWORD PTR ds:0x1008a6c0,esi
1002dc9f:	call   0x10003340
1002dca4:	push   0x1007738c
1002dca9:	push   edi
1002dcaa:	push   0x10077384
1002dcaf:	mov    ds:0x1008a6c4,eax
1002dcb4:	mov    DWORD PTR ds:0x1008a6c8,edi
1002dcba:	call   0x10003340
1002dcbf:	push   0x10077358
1002dcc4:	push   esi
1002dcc5:	push   0x10077350
1002dcca:	mov    ds:0x1008a6cc,eax
1002dccf:	mov    DWORD PTR ds:0x1008a6d0,esi
1002dcd5:	call   0x10003340
1002dcda:	push   0x10077314
1002dcdf:	push   edi
1002dce0:	push   0x1007730c
1002dce5:	mov    ds:0x1008a6d4,eax
1002dcea:	mov    DWORD PTR ds:0x1008a6d8,edi
1002dcf0:	call   0x10003340
1002dcf5:	add    esp,0x48
1002dcf8:	push   0x100772e8
1002dcfd:	push   edi
1002dcfe:	push   0x100772e0
1002dd03:	mov    ds:0x1008a6dc,eax
1002dd08:	mov    DWORD PTR ds:0x1008a6e0,edi
1002dd0e:	call   0x10003340
1002dd13:	push   0x100772ac
1002dd18:	push   ebp
1002dd19:	push   0x100772a0
1002dd1e:	mov    ds:0x1008a6e4,eax
1002dd23:	mov    DWORD PTR ds:0x1008a6e8,ebp
1002dd29:	call   0x10003340
1002dd2e:	push   0x10077260
1002dd33:	push   esi
1002dd34:	push   0x10077258
1002dd39:	mov    ds:0x1008a6ec,eax
1002dd3e:	mov    DWORD PTR ds:0x1008a6f0,esi
1002dd44:	call   0x10003340
1002dd49:	push   0x10077220
1002dd4e:	push   edi
1002dd4f:	push   0x10077218
1002dd54:	mov    ds:0x1008a6f4,eax
1002dd59:	mov    DWORD PTR ds:0x1008a6f8,edi
1002dd5f:	call   0x10003340
1002dd64:	push   0x100771ec
1002dd69:	push   esi
1002dd6a:	push   0x100771e4
1002dd6f:	mov    ds:0x1008a6fc,eax
1002dd74:	mov    DWORD PTR ds:0x1008a700,esi
1002dd7a:	call   0x10003340
1002dd7f:	push   0x100771ac
1002dd84:	push   edi
1002dd85:	push   0x100771a4
1002dd8a:	mov    ds:0x1008a704,eax
1002dd8f:	mov    DWORD PTR ds:0x1008a708,edi
1002dd95:	call   0x10003340
1002dd9a:	add    esp,0x48
1002dd9d:	push   0x10077168
1002dda2:	push   esi
1002dda3:	push   0x10077160
1002dda8:	mov    ds:0x1008a70c,eax
1002ddad:	mov    DWORD PTR ds:0x1008a710,esi
1002ddb3:	call   0x10003340
1002ddb8:	push   0x10077124
1002ddbd:	push   edi
1002ddbe:	mov    ds:0x1008a714,eax
1002ddc3:	mov    DWORD PTR ds:0x1008a718,edi
1002ddc9:	push   0x1007711c
1002ddce:	call   0x10003340
1002ddd3:	push   0x100770dc
1002ddd8:	push   ebp
1002ddd9:	push   0x100770d0
1002ddde:	mov    ds:0x1008a71c,eax
1002dde3:	mov    DWORD PTR ds:0x1008a720,ebp
1002dde9:	call   0x10003340
1002ddee:	push   0x100770ac
1002ddf3:	push   0x9
1002ddf5:	push   0x100770a0
1002ddfa:	mov    ds:0x1008a724,eax
1002ddff:	mov    DWORD PTR ds:0x1008a728,0x9
1002de09:	call   0x10003340
1002de0e:	push   0x1007707c
1002de13:	push   0x9
1002de15:	push   0x10077070
1002de1a:	mov    ds:0x1008a72c,eax
1002de1f:	mov    DWORD PTR ds:0x1008a730,0x9
1002de29:	call   0x10003340
1002de2e:	push   0x10077030
1002de33:	push   0x9
1002de35:	push   0x10077024
1002de3a:	mov    ds:0x1008a734,eax
1002de3f:	mov    DWORD PTR ds:0x1008a738,0x9
1002de49:	call   0x10003340
1002de4e:	add    esp,0x48
1002de51:	push   0x10076ff4
1002de56:	push   ebp
1002de57:	push   0x10076fe8
1002de5c:	mov    ds:0x1008a73c,eax
1002de61:	mov    DWORD PTR ds:0x1008a740,ebp
1002de67:	call   0x10003340
1002de6c:	push   0x10076fa8
1002de71:	push   ebp
1002de72:	push   0x10076f9c
1002de77:	mov    ds:0x1008a744,eax
1002de7c:	mov    DWORD PTR ds:0x1008a748,ebp
1002de82:	call   0x10003340
1002de87:	push   0x10076f6c
1002de8c:	push   ebp
1002de8d:	push   0x10076f60
1002de92:	mov    ds:0x1008a74c,eax
1002de97:	mov    DWORD PTR ds:0x1008a750,ebp
1002de9d:	call   0x10003340
1002dea2:	push   0x10076f34
1002dea7:	push   ebp
1002dea8:	push   0x10076f28
1002dead:	mov    ds:0x1008a754,eax
1002deb2:	mov    DWORD PTR ds:0x1008a758,ebp
1002deb8:	call   0x10003340
1002debd:	push   0x10076efc
1002dec2:	push   ebp
1002dec3:	push   0x10076ef0
1002dec8:	mov    ds:0x1008a75c,eax
1002decd:	mov    DWORD PTR ds:0x1008a760,ebp
1002ded3:	call   0x10003340
1002ded8:	push   0x10076ebc
1002dedd:	push   ebx
1002dede:	push   0x10076eb4
1002dee3:	mov    ds:0x1008a764,eax
1002dee8:	mov    DWORD PTR ds:0x1008a768,ebx
1002deee:	call   0x10003340
1002def3:	add    esp,0x48
1002def6:	push   0x10076e78
1002defb:	push   esi
1002defc:	push   0x10076e70
1002df01:	mov    ds:0x1008a76c,eax
1002df06:	mov    DWORD PTR ds:0x1008a770,esi
1002df0c:	call   0x10003340
1002df11:	push   0x10076e3c
1002df16:	push   0xc
1002df18:	push   0x10076e2c
1002df1d:	mov    ds:0x1008a774,eax
1002df22:	mov    DWORD PTR ds:0x1008a778,0xc
1002df2c:	call   0x10003340
1002df31:	push   0x10076df4
1002df36:	push   0xc
1002df38:	push   0x10076de4
1002df3d:	mov    ds:0x1008a77c,eax
1002df42:	mov    DWORD PTR ds:0x1008a780,0xc
1002df4c:	call   0x10003340
1002df51:	push   0x10076db4
1002df56:	push   0xe
1002df58:	push   0x10076da4
1002df5d:	mov    ds:0x1008a784,eax
1002df62:	mov    DWORD PTR ds:0x1008a788,0xe
1002df6c:	call   0x10003340
1002df71:	push   0x10076d74
1002df76:	push   ebx
1002df77:	push   0x10076d6c
1002df7c:	mov    ds:0x1008a78c,eax
1002df81:	mov    DWORD PTR ds:0x1008a790,ebx
1002df87:	call   0x10003340
1002df8c:	push   0x10076d2c
1002df91:	push   esi
1002df92:	push   0x10076d24
1002df97:	mov    ds:0x1008a794,eax
1002df9c:	mov    DWORD PTR ds:0x1008a798,esi
1002dfa2:	call   0x10003340
1002dfa7:	add    esp,0x48
1002dfaa:	push   0x10076cf0
1002dfaf:	push   ebx
1002dfb0:	push   0x10076ce8
1002dfb5:	mov    ds:0x1008a79c,eax
1002dfba:	mov    DWORD PTR ds:0x1008a7a0,ebx
1002dfc0:	call   0x10003340
1002dfc5:	push   0x10076cb8
1002dfca:	push   esi
1002dfcb:	push   0x10076cb0
1002dfd0:	mov    ds:0x1008a7a4,eax
1002dfd5:	mov    DWORD PTR ds:0x1008a7a8,esi
1002dfdb:	call   0x10003340
1002dfe0:	push   0x10076c70
1002dfe5:	push   ebx
1002dfe6:	push   0x10076c68
1002dfeb:	mov    ds:0x1008a7ac,eax
1002dff0:	mov    DWORD PTR ds:0x1008a7b0,ebx
1002dff6:	call   0x10003340
1002dffb:	push   0x10076c40
1002e000:	push   esi
1002e001:	push   0x10076c38
1002e006:	mov    ds:0x1008a7b4,eax
1002e00b:	mov    DWORD PTR ds:0x1008a7b8,esi
1002e011:	call   0x10003340
1002e016:	push   0x10076c08
1002e01b:	push   ebp
1002e01c:	push   0x10076bfc
1002e021:	mov    ds:0x1008a7bc,eax
1002e026:	mov    DWORD PTR ds:0x1008a7c0,ebp
1002e02c:	call   0x10003340
1002e031:	push   0x10076bbc
1002e036:	push   0x9
1002e038:	push   0x10076bb0
1002e03d:	mov    ds:0x1008a7c4,eax
1002e042:	mov    DWORD PTR ds:0x1008a7c8,0x9
1002e04c:	call   0x10003340
1002e051:	add    esp,0x48
1002e054:	push   0x10076b70
1002e059:	push   ebp
1002e05a:	push   0x10076b64
1002e05f:	mov    ds:0x1008a7cc,eax
1002e064:	mov    DWORD PTR ds:0x1008a7d0,ebp
1002e06a:	call   0x10003340
1002e06f:	push   0x10076b3c
1002e074:	push   0x9
1002e076:	push   0x10076b30
1002e07b:	mov    ds:0x1008a7d4,eax
1002e080:	mov    DWORD PTR ds:0x1008a7d8,0x9
1002e08a:	call   0x10003340
1002e08f:	push   0x10076afc
1002e094:	push   ebp
1002e095:	push   0x10076af0
1002e09a:	mov    ds:0x1008a7dc,eax
1002e09f:	mov    DWORD PTR ds:0x1008a7e0,ebp
1002e0a5:	call   0x10003340
1002e0aa:	push   0x10076abc
1002e0af:	push   0x9
1002e0b1:	push   0x10076ab0
1002e0b6:	mov    ds:0x1008a7e4,eax
1002e0bb:	mov    DWORD PTR ds:0x1008a7e8,0x9
1002e0c5:	call   0x10003340
1002e0ca:	mov    ds:0x1008a7ec,eax
1002e0cf:	push   0x10076a74
1002e0d4:	push   ebp
1002e0d5:	push   0x10076a68
1002e0da:	mov    DWORD PTR ds:0x1008a7f0,ebp
1002e0e0:	call   0x10003340
1002e0e5:	push   0x10076a38
1002e0ea:	push   0x9
1002e0ec:	push   0x10076a2c
1002e0f1:	mov    ds:0x1008a7f4,eax
1002e0f6:	mov    DWORD PTR ds:0x1008a7f8,0x9
1002e100:	call   0x10003340
1002e105:	add    esp,0x48
1002e108:	push   0x100769f4
1002e10d:	push   ebp
1002e10e:	push   0x100769e8
1002e113:	mov    ds:0x1008a7fc,eax
1002e118:	mov    DWORD PTR ds:0x1008a800,ebp
1002e11e:	call   0x10003340
1002e123:	push   0x100769b8
1002e128:	push   0x9
1002e12a:	push   0x100769ac
1002e12f:	mov    ds:0x1008a804,eax
1002e134:	mov    DWORD PTR ds:0x1008a808,0x9
1002e13e:	call   0x10003340
1002e143:	push   0x1007697c
1002e148:	push   ebp
1002e149:	push   0x10076970
1002e14e:	mov    ds:0x1008a80c,eax
1002e153:	mov    DWORD PTR ds:0x1008a810,ebp
1002e159:	call   0x10003340
1002e15e:	push   0x10076938
1002e163:	push   0x9
1002e165:	push   0x1007692c
1002e16a:	mov    ds:0x1008a814,eax
1002e16f:	mov    DWORD PTR ds:0x1008a818,0x9
1002e179:	call   0x10003340
1002e17e:	push   0x10076904
1002e183:	push   esi
1002e184:	push   0x100768fc
1002e189:	mov    ds:0x1008a81c,eax
1002e18e:	mov    DWORD PTR ds:0x1008a820,esi
1002e194:	call   0x10003340
1002e199:	push   0x100768d8
1002e19e:	push   edi
1002e19f:	push   0x100768d0
1002e1a4:	mov    ds:0x1008a824,eax
1002e1a9:	mov    DWORD PTR ds:0x1008a828,edi
1002e1af:	call   0x10003340
1002e1b4:	add    esp,0x48
1002e1b7:	push   0x10076890
1002e1bc:	push   edi
1002e1bd:	push   0x10076888
1002e1c2:	mov    ds:0x1008a82c,eax
1002e1c7:	mov    DWORD PTR ds:0x1008a830,edi
1002e1cd:	call   0x10003340
1002e1d2:	push   0x10076848
1002e1d7:	push   ebp
1002e1d8:	push   0x10076838
1002e1dd:	mov    ds:0x1008a834,eax
1002e1e2:	mov    DWORD PTR ds:0x1008a838,ebp
1002e1e8:	call   0x10003340
1002e1ed:	push   0x10076800
1002e1f2:	push   ebp
1002e1f3:	push   0x100767f4
1002e1f8:	mov    ds:0x1008a83c,eax
1002e1fd:	mov    DWORD PTR ds:0x1008a840,ebp
1002e203:	call   0x10003340
1002e208:	push   0x100767bc
1002e20d:	push   0x9
1002e20f:	push   0x100767b0
1002e214:	mov    ds:0x1008a844,eax
1002e219:	mov    DWORD PTR ds:0x1008a848,0x9
1002e223:	call   0x10003340
1002e228:	push   0x10076774
1002e22d:	push   ebp
1002e22e:	push   0x10076768
1002e233:	mov    ds:0x1008a84c,eax
1002e238:	mov    DWORD PTR ds:0x1008a850,ebp
1002e23e:	call   0x10003340
1002e243:	mov    ds:0x1008a854,eax
1002e248:	mov    DWORD PTR ds:0x1008a858,0x9
1002e252:	push   0x10076744
1002e257:	push   0x9
1002e259:	push   0x10076738
1002e25e:	call   0x10003340
1002e263:	add    esp,0x48
1002e266:	push   0x10076714
1002e26b:	push   0xa
1002e26d:	push   0x10076708
1002e272:	mov    ds:0x1008a85c,eax
1002e277:	mov    DWORD PTR ds:0x1008a860,0xa
1002e281:	call   0x10003340
1002e286:	push   0x100766d4
1002e28b:	push   0xa
1002e28d:	push   0x100766c8
1002e292:	mov    ds:0x1008a864,eax
1002e297:	mov    DWORD PTR ds:0x1008a868,0xa
1002e2a1:	call   0x10003340
1002e2a6:	push   0x100766a4
1002e2ab:	push   ebp
1002e2ac:	push   0x10076698
1002e2b1:	mov    ds:0x1008a86c,eax
1002e2b6:	mov    DWORD PTR ds:0x1008a870,ebp
1002e2bc:	call   0x10003340
1002e2c1:	push   0x10076668
1002e2c6:	push   0x9
1002e2c8:	push   0x1007665c
1002e2cd:	mov    ds:0x1008a874,eax
1002e2d2:	mov    DWORD PTR ds:0x1008a878,0x9
1002e2dc:	call   0x10003340
1002e2e1:	push   0x10076620
1002e2e6:	push   ebp
1002e2e7:	push   0x10076614
1002e2ec:	mov    ds:0x1008a87c,eax
1002e2f1:	mov    DWORD PTR ds:0x1008a880,ebp
1002e2f7:	call   0x10003340
1002e2fc:	push   0x100765e0
1002e301:	push   0x9
1002e303:	push   0x100765d4
1002e308:	mov    ds:0x1008a884,eax
1002e30d:	mov    DWORD PTR ds:0x1008a888,0x9
1002e317:	call   0x10003340
1002e31c:	add    esp,0x48
1002e31f:	push   0x1007659c
1002e324:	push   ebp
1002e325:	push   0x10076590
1002e32a:	mov    ds:0x1008a88c,eax
1002e32f:	mov    DWORD PTR ds:0x1008a890,ebp
1002e335:	call   0x10003340
1002e33a:	push   0x10076550
1002e33f:	push   0x9
1002e341:	push   0x10076544
1002e346:	mov    ds:0x1008a894,eax
1002e34b:	mov    DWORD PTR ds:0x1008a898,0x9
1002e355:	call   0x10003340
1002e35a:	push   0x10076508
1002e35f:	push   ebp
1002e360:	push   0x100764fc
1002e365:	mov    ds:0x1008a89c,eax
1002e36a:	mov    DWORD PTR ds:0x1008a8a0,ebp
1002e370:	call   0x10003340
1002e375:	push   0x100764d0
1002e37a:	push   0x9
1002e37c:	push   0x100764c4
1002e381:	mov    ds:0x1008a8a4,eax
1002e386:	mov    DWORD PTR ds:0x1008a8a8,0x9
1002e390:	call   0x10003340
1002e395:	push   0x10076498
1002e39a:	push   ebp
1002e39b:	push   0x1007648c
1002e3a0:	mov    ds:0x1008a8ac,eax
1002e3a5:	mov    DWORD PTR ds:0x1008a8b0,ebp
1002e3ab:	call   0x10003340
1002e3b0:	push   0x10076468
1002e3b5:	push   0x9
1002e3b7:	push   0x1007645c
1002e3bc:	mov    ds:0x1008a8b4,eax
1002e3c1:	mov    DWORD PTR ds:0x1008a8b8,0x9
1002e3cb:	call   0x10003340
1002e3d0:	add    esp,0x48
1002e3d3:	mov    ds:0x1008a8bc,eax
1002e3d8:	mov    DWORD PTR ds:0x1008a8c0,ebp
1002e3de:	push   0x1007641c
1002e3e3:	push   ebp
1002e3e4:	push   0x10076410
1002e3e9:	call   0x10003340
1002e3ee:	push   0x100763d0
1002e3f3:	push   0x9
1002e3f5:	push   0x100763c4
1002e3fa:	mov    ds:0x1008a8c4,eax
1002e3ff:	mov    DWORD PTR ds:0x1008a8c8,0x9
1002e409:	call   0x10003340
1002e40e:	push   0x10076394
1002e413:	push   edi
1002e414:	push   0x1007638c
1002e419:	mov    ds:0x1008a8cc,eax
1002e41e:	mov    DWORD PTR ds:0x1008a8d0,edi
1002e424:	call   0x10003340
1002e429:	push   0x10076354
1002e42e:	push   ebp
1002e42f:	push   0x10076348
1002e434:	mov    ds:0x1008a8d4,eax
1002e439:	mov    DWORD PTR ds:0x1008a8d8,ebp
1002e43f:	call   0x10003340
1002e444:	push   0x10076308
1002e449:	push   esi
1002e44a:	push   0x10076300
1002e44f:	mov    ds:0x1008a8dc,eax
1002e454:	mov    DWORD PTR ds:0x1008a8e0,esi
1002e45a:	call   0x10003340
1002e45f:	push   0x100762d8
1002e464:	push   edi
1002e465:	push   0x100762d0
1002e46a:	mov    ds:0x1008a8e4,eax
1002e46f:	mov    DWORD PTR ds:0x1008a8e8,edi
1002e475:	call   0x10003340
1002e47a:	add    esp,0x48
1002e47d:	push   0x100762a4
1002e482:	push   esi
1002e483:	push   0x1007629c
1002e488:	mov    ds:0x1008a8ec,eax
1002e48d:	mov    DWORD PTR ds:0x1008a8f0,esi
1002e493:	call   0x10003340
1002e498:	push   0x10076268
1002e49d:	push   edi
1002e49e:	push   0x10076260
1002e4a3:	mov    ds:0x1008a8f4,eax
1002e4a8:	mov    DWORD PTR ds:0x1008a8f8,edi
1002e4ae:	call   0x10003340
1002e4b3:	push   0x10076224
1002e4b8:	push   esi
1002e4b9:	push   0x1007621c
1002e4be:	mov    ds:0x1008a8fc,eax
1002e4c3:	mov    DWORD PTR ds:0x1008a900,esi
1002e4c9:	call   0x10003340
1002e4ce:	push   0x100761f0
1002e4d3:	push   edi
1002e4d4:	push   0x100761e8
1002e4d9:	mov    ds:0x1008a904,eax
1002e4de:	mov    DWORD PTR ds:0x1008a908,edi
1002e4e4:	call   0x10003340
1002e4e9:	push   0x100761c0
1002e4ee:	push   esi
1002e4ef:	push   0x100761b8
1002e4f4:	mov    ds:0x1008a90c,eax
1002e4f9:	mov    DWORD PTR ds:0x1008a910,esi
1002e4ff:	call   0x10003340
1002e504:	push   0x1007617c
1002e509:	push   edi
1002e50a:	push   0x10076174
1002e50f:	mov    ds:0x1008a914,eax
1002e514:	mov    DWORD PTR ds:0x1008a918,edi
1002e51a:	call   0x10003340
1002e51f:	add    esp,0x48
1002e522:	push   0x10076134
1002e527:	push   esi
1002e528:	push   0x1007612c
1002e52d:	mov    ds:0x1008a91c,eax
1002e532:	mov    DWORD PTR ds:0x1008a920,esi
1002e538:	call   0x10003340
1002e53d:	mov    ds:0x1008a924,eax
1002e542:	mov    DWORD PTR ds:0x1008a928,edi
1002e548:	push   0x100760f8
1002e54d:	push   edi
1002e54e:	push   0x100760f0
1002e553:	call   0x10003340
1002e558:	push   0x100760b0
1002e55d:	push   esi
1002e55e:	push   0x100760a8
1002e563:	mov    ds:0x1008a92c,eax
1002e568:	mov    DWORD PTR ds:0x1008a930,esi
1002e56e:	call   0x10003340
1002e573:	push   0x10076080
1002e578:	push   edi
1002e579:	push   0x10076078
1002e57e:	mov    ds:0x1008a934,eax
1002e583:	mov    DWORD PTR ds:0x1008a938,edi
1002e589:	call   0x10003340
1002e58e:	push   0x10076038
1002e593:	push   esi
1002e594:	push   0x10076030
1002e599:	mov    ds:0x1008a93c,eax
1002e59e:	mov    DWORD PTR ds:0x1008a940,esi
1002e5a4:	call   0x10003340
1002e5a9:	push   0x10076000
1002e5ae:	push   edi
1002e5af:	push   0x10075ff8
1002e5b4:	mov    ds:0x1008a944,eax
1002e5b9:	mov    DWORD PTR ds:0x1008a948,edi
1002e5bf:	call   0x10003340
1002e5c4:	add    esp,0x48
1002e5c7:	push   0x10075fc8
1002e5cc:	push   esi
1002e5cd:	push   0x10075fc0
1002e5d2:	mov    ds:0x1008a94c,eax
1002e5d7:	mov    DWORD PTR ds:0x1008a950,esi
1002e5dd:	call   0x10003340
1002e5e2:	push   0x10075f9c
1002e5e7:	push   edi
1002e5e8:	push   0x10075f94
1002e5ed:	mov    ds:0x1008a954,eax
1002e5f2:	mov    DWORD PTR ds:0x1008a958,edi
1002e5f8:	call   0x10003340
1002e5fd:	push   0x10075f68
1002e602:	push   esi
1002e603:	push   0x10075f60
1002e608:	mov    ds:0x1008a95c,eax
1002e60d:	mov    DWORD PTR ds:0x1008a960,esi
1002e613:	call   0x10003340
1002e618:	push   0x10075f28
1002e61d:	push   edi
1002e61e:	push   0x10075f20
1002e623:	mov    ds:0x1008a964,eax
1002e628:	mov    DWORD PTR ds:0x1008a968,edi
1002e62e:	call   0x10003340
1002e633:	push   0x10075ee0
1002e638:	push   0xa
1002e63a:	push   0x10075ed4
1002e63f:	mov    ds:0x1008a96c,eax
1002e644:	mov    DWORD PTR ds:0x1008a970,0xa
1002e64e:	call   0x10003340
1002e653:	push   0x10075eb0
1002e658:	push   0xb
1002e65a:	push   0x10075ea4
1002e65f:	mov    ds:0x1008a974,eax
1002e664:	mov    DWORD PTR ds:0x1008a978,0xb
1002e66e:	call   0x10003340
1002e673:	add    esp,0x48
1002e676:	push   0x10075e70
1002e67b:	push   esi
1002e67c:	push   0x10075e68
1002e681:	mov    ds:0x1008a97c,eax
1002e686:	mov    DWORD PTR ds:0x1008a980,esi
1002e68c:	call   0x10003340
1002e691:	push   0x10075e30
1002e696:	push   edi
1002e697:	push   0x10075e28
1002e69c:	mov    ds:0x1008a984,eax
1002e6a1:	mov    DWORD PTR ds:0x1008a988,edi
1002e6a7:	call   0x10003340
1002e6ac:	push   0x10075dec
1002e6b1:	mov    ds:0x1008a98c,eax
1002e6b6:	mov    DWORD PTR ds:0x1008a990,0xe
1002e6c0:	push   0xe
1002e6c2:	push   0x10075ddc
1002e6c7:	call   0x10003340
1002e6cc:	push   0x10075da4
1002e6d1:	push   0xe
1002e6d3:	push   0x10075d94
1002e6d8:	mov    ds:0x1008a994,eax
1002e6dd:	mov    DWORD PTR ds:0x1008a998,0xe
1002e6e7:	call   0x10003340
1002e6ec:	push   0x10075d68
1002e6f1:	push   0xe
1002e6f3:	push   0x10075d58
1002e6f8:	mov    ds:0x1008a99c,eax
1002e6fd:	mov    DWORD PTR ds:0x1008a9a0,0xe
1002e707:	call   0x10003340
1002e70c:	push   0x10075d1c
1002e711:	push   0xe
1002e713:	push   0x10075d0c
1002e718:	mov    ds:0x1008a9a4,eax
1002e71d:	mov    DWORD PTR ds:0x1008a9a8,0xe
1002e727:	call   0x10003340
1002e72c:	add    esp,0x48
1002e72f:	push   0x10075cd4
1002e734:	push   0xb
1002e736:	push   0x10075cc8
1002e73b:	mov    ds:0x1008a9ac,eax
1002e740:	mov    DWORD PTR ds:0x1008a9b0,0xb
1002e74a:	call   0x10003340
1002e74f:	push   0x10075ca0
1002e754:	push   0xb
1002e756:	push   0x10075c94
1002e75b:	mov    ds:0x1008a9b4,eax
1002e760:	mov    DWORD PTR ds:0x1008a9b8,0xb
1002e76a:	call   0x10003340
1002e76f:	push   0x10075c60
1002e774:	push   0xb
1002e776:	push   0x10075c54
1002e77b:	mov    ds:0x1008a9bc,eax
1002e780:	mov    DWORD PTR ds:0x1008a9c0,0xb
1002e78a:	call   0x10003340
1002e78f:	push   0x10075c24
1002e794:	push   0xb
1002e796:	push   0x10075c18
1002e79b:	mov    ds:0x1008a9c4,eax
1002e7a0:	mov    DWORD PTR ds:0x1008a9c8,0xb
1002e7aa:	call   0x10003340
1002e7af:	push   0x10075bec
1002e7b4:	push   0xb
1002e7b6:	push   0x10075be0
1002e7bb:	mov    ds:0x1008a9cc,eax
1002e7c0:	mov    DWORD PTR ds:0x1008a9d0,0xb
1002e7ca:	call   0x10003340
1002e7cf:	push   0x10075ba8
1002e7d4:	push   0xb
1002e7d6:	push   0x10075b9c
1002e7db:	mov    ds:0x1008a9d4,eax
1002e7e0:	mov    DWORD PTR ds:0x1008a9d8,0xb
1002e7ea:	call   0x10003340
1002e7ef:	add    esp,0x48
1002e7f2:	push   0x10075b6c
1002e7f7:	push   0xb
1002e7f9:	push   0x10075b60
1002e7fe:	mov    ds:0x1008a9dc,eax
1002e803:	mov    DWORD PTR ds:0x1008a9e0,0xb
1002e80d:	call   0x10003340
1002e812:	push   0x10075b30
1002e817:	push   0xb
1002e819:	push   0x10075b24
1002e81e:	mov    ds:0x1008a9e4,eax
1002e823:	mov    DWORD PTR ds:0x1008a9e8,0xb
1002e82d:	call   0x10003340
1002e832:	push   0x10075afc
1002e837:	push   0xc
1002e839:	push   0x10075aec
1002e83e:	mov    ds:0x1008a9ec,eax
1002e843:	mov    DWORD PTR ds:0x1008a9f0,0xc
1002e84d:	call   0x10003340
1002e852:	push   0x10075aac
1002e857:	push   0xc
1002e859:	mov    ds:0x1008a9f4,eax
1002e85e:	mov    DWORD PTR ds:0x1008a9f8,0xc
1002e868:	push   0x10075a9c
1002e86d:	call   0x10003340
1002e872:	push   0x10075a64
1002e877:	push   0xc
1002e879:	push   0x10075a54
1002e87e:	mov    ds:0x1008a9fc,eax
1002e883:	mov    DWORD PTR ds:0x1008aa00,0xc
1002e88d:	call   0x10003340
1002e892:	push   0x10075a2c
1002e897:	push   0xc
1002e899:	push   0x10075a1c
1002e89e:	mov    ds:0x1008aa04,eax
1002e8a3:	mov    DWORD PTR ds:0x1008aa08,0xc
1002e8ad:	call   0x10003340
1002e8b2:	add    esp,0x48
1002e8b5:	push   0x100759ec
1002e8ba:	push   0xc
1002e8bc:	push   0x100759dc
1002e8c1:	mov    ds:0x1008aa0c,eax
1002e8c6:	mov    DWORD PTR ds:0x1008aa10,0xc
1002e8d0:	call   0x10003340
1002e8d5:	push   0x100759b8
1002e8da:	push   0xc
1002e8dc:	push   0x100759a8
1002e8e1:	mov    ds:0x1008aa14,eax
1002e8e6:	mov    DWORD PTR ds:0x1008aa18,0xc
1002e8f0:	call   0x10003340
1002e8f5:	push   0x10075968
1002e8fa:	push   0xc
1002e8fc:	push   0x10075954
1002e901:	mov    ds:0x1008aa1c,eax
1002e906:	mov    DWORD PTR ds:0x1008aa20,0xc
1002e910:	call   0x10003340
1002e915:	push   0x1007591c
1002e91a:	push   0xc
1002e91c:	push   0x1007590c
1002e921:	mov    ds:0x1008aa24,eax
1002e926:	mov    DWORD PTR ds:0x1008aa28,0xc
1002e930:	call   0x10003340
1002e935:	push   0x100758e4
1002e93a:	push   0xe
1002e93c:	push   0x100758d4
1002e941:	mov    ds:0x1008aa2c,eax
1002e946:	mov    DWORD PTR ds:0x1008aa30,0xe
1002e950:	call   0x10003340
1002e955:	push   0x100758a4
1002e95a:	push   0xe
1002e95c:	push   0x10075894
1002e961:	mov    ds:0x1008aa34,eax
1002e966:	mov    DWORD PTR ds:0x1008aa38,0xe
1002e970:	call   0x10003340
1002e975:	add    esp,0x48
1002e978:	push   0x10075864
1002e97d:	push   0xe
1002e97f:	push   0x10075854
1002e984:	mov    ds:0x1008aa3c,eax
1002e989:	mov    DWORD PTR ds:0x1008aa40,0xe
1002e993:	call   0x10003340
1002e998:	push   0x10075814
1002e99d:	push   0xe
1002e99f:	push   0x10075804
1002e9a4:	mov    ds:0x1008aa44,eax
1002e9a9:	mov    DWORD PTR ds:0x1008aa48,0xe
1002e9b3:	call   0x10003340
1002e9b8:	push   0x100757d4
1002e9bd:	push   0xb
1002e9bf:	push   0x100757c8
1002e9c4:	mov    ds:0x1008aa4c,eax
1002e9c9:	mov    DWORD PTR ds:0x1008aa50,0xb
1002e9d3:	call   0x10003340
1002e9d8:	push   0x100757a0
1002e9dd:	push   0xb
1002e9df:	push   0x10075794
1002e9e4:	mov    ds:0x1008aa54,eax
1002e9e9:	mov    DWORD PTR ds:0x1008aa58,0xb
1002e9f3:	call   0x10003340
1002e9f8:	push   0x10075760
1002e9fd:	push   0xb
1002e9ff:	push   0x10075754
1002ea04:	mov    ds:0x1008aa5c,eax
1002ea09:	mov    DWORD PTR ds:0x1008aa60,0xb
1002ea13:	call   0x10003340
1002ea18:	push   0x10075718
1002ea1d:	push   0xb
1002ea1f:	push   0x1007570c
1002ea24:	mov    ds:0x1008aa64,eax
1002ea29:	mov    DWORD PTR ds:0x1008aa68,0xb
1002ea33:	call   0x10003340
1002ea38:	add    esp,0x48
1002ea3b:	push   0x100756d4
1002ea40:	push   0xb
1002ea42:	push   0x100756c8
1002ea47:	mov    ds:0x1008aa6c,eax
1002ea4c:	mov    DWORD PTR ds:0x1008aa70,0xb
1002ea56:	call   0x10003340
1002ea5b:	push   0x1007569c
1002ea60:	push   0xb
1002ea62:	push   0x10075690
1002ea67:	mov    ds:0x1008aa74,eax
1002ea6c:	mov    DWORD PTR ds:0x1008aa78,0xb
1002ea76:	call   0x10003340
1002ea7b:	push   0x10075668
1002ea80:	push   0xb
1002ea82:	push   0x1007565c
1002ea87:	mov    ds:0x1008aa7c,eax
1002ea8c:	mov    DWORD PTR ds:0x1008aa80,0xb
1002ea96:	call   0x10003340
1002ea9b:	push   0x10075630
1002eaa0:	push   0xb
1002eaa2:	push   0x10075624
1002eaa7:	mov    ds:0x1008aa84,eax
1002eaac:	mov    DWORD PTR ds:0x1008aa88,0xb
1002eab6:	call   0x10003340
1002eabb:	push   0x100755ec
1002eac0:	push   0xc
1002eac2:	push   0x100755dc
1002eac7:	mov    ds:0x1008aa8c,eax
1002eacc:	mov    DWORD PTR ds:0x1008aa90,0xc
1002ead6:	call   0x10003340
1002eadb:	push   0x100755b8
1002eae0:	push   0xc
1002eae2:	push   0x100755a8
1002eae7:	mov    ds:0x1008aa94,eax
1002eaec:	mov    DWORD PTR ds:0x1008aa98,0xc
1002eaf6:	call   0x10003340
1002eafb:	add    esp,0x48
1002eafe:	push   0x10075578
1002eb03:	push   0xc
1002eb05:	push   0x10075568
1002eb0a:	mov    ds:0x1008aa9c,eax
1002eb0f:	mov    DWORD PTR ds:0x1008aaa0,0xc
1002eb19:	call   0x10003340
1002eb1e:	push   0x10075528
1002eb23:	push   0xc
1002eb25:	push   0x10075518
1002eb2a:	mov    ds:0x1008aaa4,eax
1002eb2f:	mov    DWORD PTR ds:0x1008aaa8,0xc
1002eb39:	call   0x10003340
1002eb3e:	push   0x100754ec
1002eb43:	push   0xc
1002eb45:	push   0x100754dc
1002eb4a:	mov    ds:0x1008aaac,eax
1002eb4f:	mov    DWORD PTR ds:0x1008aab0,0xc
1002eb59:	call   0x10003340
1002eb5e:	push   0x100754b4
1002eb63:	push   0xc
1002eb65:	push   0x100754a4
1002eb6a:	mov    ds:0x1008aab4,eax
1002eb6f:	mov    DWORD PTR ds:0x1008aab8,0xc
1002eb79:	call   0x10003340
1002eb7e:	push   0x1007546c
1002eb83:	push   0xc
1002eb85:	push   0x1007545c
1002eb8a:	mov    ds:0x1008aabc,eax
1002eb8f:	mov    DWORD PTR ds:0x1008aac0,0xc
1002eb99:	call   0x10003340
1002eb9e:	push   0x10075430
1002eba3:	push   0xc
1002eba5:	push   0x10075420
1002ebaa:	mov    ds:0x1008aac4,eax
1002ebaf:	mov    DWORD PTR ds:0x1008aac8,0xc
1002ebb9:	call   0x10003340
1002ebbe:	add    esp,0x48
1002ebc1:	push   0x100753fc
1002ebc6:	push   0xe
1002ebc8:	push   0x100753ec
1002ebcd:	mov    ds:0x1008aacc,eax
1002ebd2:	mov    DWORD PTR ds:0x1008aad0,0xe
1002ebdc:	call   0x10003340
1002ebe1:	push   0x100753c4
1002ebe6:	push   0xe
1002ebe8:	push   0x100753b4
1002ebed:	mov    ds:0x1008aad4,eax
1002ebf2:	mov    DWORD PTR ds:0x1008aad8,0xe
1002ebfc:	call   0x10003340
1002ec01:	push   0x1007537c
1002ec06:	push   0xe
1002ec08:	push   0x1007536c
1002ec0d:	mov    ds:0x1008aadc,eax
1002ec12:	mov    DWORD PTR ds:0x1008aae0,0xe
1002ec1c:	call   0x10003340
1002ec21:	push   0x10075340
1002ec26:	push   0xe
1002ec28:	push   0x10075330
1002ec2d:	mov    ds:0x1008aae4,eax
1002ec32:	mov    DWORD PTR ds:0x1008aae8,0xe
1002ec3c:	call   0x10003340
1002ec41:	push   0x1007530c
1002ec46:	push   0xb
1002ec48:	push   0x10075300
1002ec4d:	mov    ds:0x1008aaec,eax
1002ec52:	mov    DWORD PTR ds:0x1008aaf0,0xb
1002ec5c:	call   0x10003340
1002ec61:	push   0x100752dc
1002ec66:	push   0xb
1002ec68:	push   0x100752d0
1002ec6d:	mov    ds:0x1008aaf4,eax
1002ec72:	mov    DWORD PTR ds:0x1008aaf8,0xb
1002ec7c:	call   0x10003340
1002ec81:	add    esp,0x48
1002ec84:	push   0x100752a4
1002ec89:	push   0xb
1002ec8b:	push   0x10075298
1002ec90:	mov    ds:0x1008aafc,eax
1002ec95:	mov    DWORD PTR ds:0x1008ab00,0xb
1002ec9f:	call   0x10003340
1002eca4:	push   0x10075274
1002eca9:	push   0xb
1002ecab:	push   0x10075268
1002ecb0:	mov    ds:0x1008ab04,eax
1002ecb5:	mov    DWORD PTR ds:0x1008ab08,0xb
1002ecbf:	call   0x10003340
1002ecc4:	push   0x10075230
1002ecc9:	push   0xb
1002eccb:	push   0x10075224
1002ecd0:	mov    ds:0x1008ab0c,eax
1002ecd5:	mov    DWORD PTR ds:0x1008ab10,0xb
1002ecdf:	call   0x10003340
1002ece4:	push   0x100751f4
1002ece9:	push   0xb
1002eceb:	push   0x100751e8
1002ecf0:	mov    ds:0x1008ab14,eax
1002ecf5:	mov    DWORD PTR ds:0x1008ab18,0xb
1002ecff:	call   0x10003340
1002ed04:	push   0x100751c0
1002ed09:	push   0xb
1002ed0b:	push   0x100751b4
1002ed10:	mov    ds:0x1008ab1c,eax
1002ed15:	mov    DWORD PTR ds:0x1008ab20,0xb
1002ed1f:	call   0x10003340
1002ed24:	push   0x1007517c
1002ed29:	push   0xb
1002ed2b:	push   0x10075170
1002ed30:	mov    ds:0x1008ab24,eax
1002ed35:	mov    DWORD PTR ds:0x1008ab28,0xb
1002ed3f:	call   0x10003340
1002ed44:	add    esp,0x48
1002ed47:	push   0x1007514c
1002ed4c:	push   0xc
1002ed4e:	push   0x1007513c
1002ed53:	mov    ds:0x1008ab2c,eax
1002ed58:	mov    DWORD PTR ds:0x1008ab30,0xc
1002ed62:	call   0x10003340
1002ed67:	mov    ds:0x1008ab34,eax
1002ed6c:	push   0x10075118
1002ed71:	push   0xc
1002ed73:	push   0x10075108
1002ed78:	mov    DWORD PTR ds:0x1008ab38,0xc
1002ed82:	call   0x10003340
1002ed87:	push   0x100750cc
1002ed8c:	push   0xc
1002ed8e:	push   0x100750bc
1002ed93:	mov    ds:0x1008ab3c,eax
1002ed98:	mov    DWORD PTR ds:0x1008ab40,0xc
1002eda2:	call   0x10003340
1002eda7:	push   0x10075084
1002edac:	push   0xc
1002edae:	push   0x10075074
1002edb3:	mov    ds:0x1008ab44,eax
1002edb8:	mov    DWORD PTR ds:0x1008ab48,0xc
1002edc2:	call   0x10003340
1002edc7:	push   0x10075044
1002edcc:	push   0xc
1002edce:	push   0x10075034
1002edd3:	mov    ds:0x1008ab4c,eax
1002edd8:	mov    DWORD PTR ds:0x1008ab50,0xc
1002ede2:	call   0x10003340
1002ede7:	push   0x10075010
1002edec:	push   0xc
1002edee:	push   0x10075000
1002edf3:	mov    ds:0x1008ab54,eax
1002edf8:	mov    DWORD PTR ds:0x1008ab58,0xc
1002ee02:	call   0x10003340
1002ee07:	add    esp,0x48
1002ee0a:	push   0x10074fd0
1002ee0f:	push   0xc
1002ee11:	push   0x10074fc0
1002ee16:	mov    ds:0x1008ab5c,eax
1002ee1b:	mov    DWORD PTR ds:0x1008ab60,0xc
1002ee25:	call   0x10003340
1002ee2a:	push   0x10074f9c
1002ee2f:	push   0xc
1002ee31:	push   0x10074f8c
1002ee36:	mov    ds:0x1008ab64,eax
1002ee3b:	mov    DWORD PTR ds:0x1008ab68,0xc
1002ee45:	call   0x10003340
1002ee4a:	push   0x10074f64
1002ee4f:	push   esi
1002ee50:	push   0x10074f5c
1002ee55:	mov    ds:0x1008ab6c,eax
1002ee5a:	mov    DWORD PTR ds:0x1008ab70,esi
1002ee60:	call   0x10003340
1002ee65:	push   0x10074f2c
1002ee6a:	push   edi
1002ee6b:	push   0x10074f24
1002ee70:	mov    ds:0x1008ab74,eax
1002ee75:	mov    DWORD PTR ds:0x1008ab78,edi
1002ee7b:	call   0x10003340
1002ee80:	push   0x10074ee8
1002ee85:	push   esi
1002ee86:	push   0x10074ee0
1002ee8b:	mov    ds:0x1008ab7c,eax
1002ee90:	mov    DWORD PTR ds:0x1008ab80,esi
1002ee96:	call   0x10003340
1002ee9b:	push   0x10074ea0
1002eea0:	push   edi
1002eea1:	push   0x10074e98
1002eea6:	mov    ds:0x1008ab84,eax
1002eeab:	mov    DWORD PTR ds:0x1008ab88,edi
1002eeb1:	call   0x10003340
1002eeb6:	add    esp,0x48
1002eeb9:	push   0x10074e68
1002eebe:	push   0xa
1002eec0:	push   0x10074e5c
1002eec5:	mov    ds:0x1008ab8c,eax
1002eeca:	mov    DWORD PTR ds:0x1008ab90,0xa
1002eed4:	call   0x10003340
1002eed9:	push   0x10074e30
1002eede:	push   0xb
1002eee0:	push   0x10074e24
1002eee5:	mov    ds:0x1008ab94,eax
1002eeea:	mov    DWORD PTR ds:0x1008ab98,0xb
1002eef4:	call   0x10003340
1002eef9:	mov    ds:0x1008ab9c,eax
1002eefe:	mov    DWORD PTR ds:0x1008aba0,esi
1002ef04:	push   0x10074df8
1002ef09:	push   esi
1002ef0a:	push   0x10074df0
1002ef0f:	call   0x10003340
1002ef14:	push   0x10074dbc
1002ef19:	push   edi
1002ef1a:	push   0x10074db4
1002ef1f:	mov    ds:0x1008aba4,eax
1002ef24:	mov    DWORD PTR ds:0x1008aba8,edi
1002ef2a:	call   0x10003340
1002ef2f:	push   0x10074d84
1002ef34:	push   0xa
1002ef36:	push   0x10074d78
1002ef3b:	mov    ds:0x1008abac,eax
1002ef40:	mov    DWORD PTR ds:0x1008abb0,0xa
1002ef4a:	call   0x10003340
1002ef4f:	push   0x10074d54
1002ef54:	push   0xb
1002ef56:	push   0x10074d48
1002ef5b:	mov    ds:0x1008abb4,eax
1002ef60:	mov    DWORD PTR ds:0x1008abb8,0xb
1002ef6a:	call   0x10003340
1002ef6f:	add    esp,0x48
1002ef72:	push   0x10074d20
1002ef77:	push   ebx
1002ef78:	push   0x10074d18
1002ef7d:	mov    ds:0x1008abbc,eax
1002ef82:	mov    DWORD PTR ds:0x1008abc0,ebx
1002ef88:	call   0x10003340
1002ef8d:	push   0x10074ce8
1002ef92:	push   ebx
1002ef93:	push   0x10074ce0
1002ef98:	mov    ds:0x1008abc4,eax
1002ef9d:	mov    DWORD PTR ds:0x1008abc8,ebx
1002efa3:	call   0x10003340
1002efa8:	push   0x10074cac
1002efad:	push   0xa
1002efaf:	push   0x10074ca0
1002efb4:	mov    ds:0x1008abcc,eax
1002efb9:	mov    DWORD PTR ds:0x1008abd0,0xa
1002efc3:	call   0x10003340
1002efc8:	push   0x10074c60
1002efcd:	push   edi
1002efce:	push   0x10074c54
1002efd3:	mov    ds:0x1008abd4,eax
1002efd8:	mov    DWORD PTR ds:0x1008abd8,edi
1002efde:	call   0x10003340
1002efe3:	push   0x10074c1c
1002efe8:	push   ebp
1002efe9:	push   0x10074c10
1002efee:	mov    ds:0x1008abdc,eax
1002eff3:	mov    DWORD PTR ds:0x1008abe0,ebp
1002eff9:	call   0x10003340
1002effe:	push   0x10074bec
1002f003:	push   edi
1002f004:	push   0x10074be4
1002f009:	mov    ds:0x1008abe4,eax
1002f00e:	mov    DWORD PTR ds:0x1008abe8,edi
1002f014:	call   0x10003340
1002f019:	add    esp,0x48
1002f01c:	push   0x10074bac
1002f021:	push   ebp
1002f022:	push   0x10074ba0
1002f027:	mov    ds:0x1008abec,eax
1002f02c:	mov    DWORD PTR ds:0x1008abf0,ebp
1002f032:	call   0x10003340
1002f037:	push   0x10074b78
1002f03c:	push   edi
1002f03d:	push   0x10074b70
1002f042:	mov    ds:0x1008abf4,eax
1002f047:	mov    DWORD PTR ds:0x1008abf8,edi
1002f04d:	call   0x10003340
1002f052:	push   0x10074b30
1002f057:	push   ebp
1002f058:	push   0x10074b24
1002f05d:	mov    ds:0x1008abfc,eax
1002f062:	mov    DWORD PTR ds:0x1008ac00,ebp
1002f068:	call   0x10003340
1002f06d:	mov    ds:0x1008ac04,eax
1002f072:	mov    DWORD PTR ds:0x1008ac08,edi
1002f078:	push   0x10074af8
1002f07d:	push   edi
1002f07e:	push   0x10074af0
1002f083:	call   0x10003340
1002f088:	push   0x10074ac4
1002f08d:	push   ebp
1002f08e:	push   0x10074ab8
1002f093:	mov    ds:0x1008ac0c,eax
1002f098:	mov    DWORD PTR ds:0x1008ac10,ebp
1002f09e:	call   0x10003340
1002f0a3:	push   0x10074a88
1002f0a8:	push   edi
1002f0a9:	push   0x10074a80
1002f0ae:	mov    ds:0x1008ac14,eax
1002f0b3:	mov    DWORD PTR ds:0x1008ac18,edi
1002f0b9:	call   0x10003340
1002f0be:	add    esp,0x48
1002f0c1:	push   0x10074a4c
1002f0c6:	push   ebp
1002f0c7:	push   0x10074a40
1002f0cc:	mov    ds:0x1008ac1c,eax
1002f0d1:	mov    DWORD PTR ds:0x1008ac20,ebp
1002f0d7:	call   0x10003340
1002f0dc:	push   0x10074a18
1002f0e1:	push   edi
1002f0e2:	push   0x10074a10
1002f0e7:	mov    ds:0x1008ac24,eax
1002f0ec:	mov    DWORD PTR ds:0x1008ac28,edi
1002f0f2:	call   0x10003340
1002f0f7:	push   0x100749d0
1002f0fc:	push   ebp
1002f0fd:	push   0x100749c4
1002f102:	mov    ds:0x1008ac2c,eax
1002f107:	mov    DWORD PTR ds:0x1008ac30,ebp
1002f10d:	call   0x10003340
1002f112:	push   0x10074988
1002f117:	push   edi
1002f118:	push   0x10074980
1002f11d:	mov    ds:0x1008ac34,eax
1002f122:	mov    DWORD PTR ds:0x1008ac38,edi
1002f128:	call   0x10003340
1002f12d:	push   0x10074948
1002f132:	push   0x9
1002f134:	push   0x1007493c
1002f139:	mov    ds:0x1008ac3c,eax
1002f13e:	mov    DWORD PTR ds:0x1008ac40,0x9
1002f148:	call   0x10003340
1002f14d:	push   0x10074908
1002f152:	push   edi
1002f153:	push   0x10074900
1002f158:	mov    ds:0x1008ac44,eax
1002f15d:	mov    DWORD PTR ds:0x1008ac48,edi
1002f163:	call   0x10003340
1002f168:	add    esp,0x48
1002f16b:	push   0x100748cc
1002f170:	push   ebp
1002f171:	push   0x100748c0
1002f176:	mov    ds:0x1008ac4c,eax
1002f17b:	mov    DWORD PTR ds:0x1008ac50,ebp
1002f181:	call   0x10003340
1002f186:	push   0x10074880
1002f18b:	push   esi
1002f18c:	push   0x10074878
1002f191:	mov    ds:0x1008ac54,eax
1002f196:	mov    DWORD PTR ds:0x1008ac58,esi
1002f19c:	call   0x10003340
1002f1a1:	push   0x10074850
1002f1a6:	push   edi
1002f1a7:	push   0x10074848
1002f1ac:	mov    ds:0x1008ac5c,eax
1002f1b1:	mov    DWORD PTR ds:0x1008ac60,edi
1002f1b7:	call   0x10003340
1002f1bc:	push   0x10074820
1002f1c1:	push   esi
1002f1c2:	push   0x10074818
1002f1c7:	mov    ds:0x1008ac64,eax
1002f1cc:	mov    DWORD PTR ds:0x1008ac68,esi
1002f1d2:	call   0x10003340
1002f1d7:	push   0x100747f4
1002f1dc:	mov    ds:0x1008ac6c,eax
1002f1e1:	mov    DWORD PTR ds:0x1008ac70,edi
1002f1e7:	push   edi
1002f1e8:	push   0x100747ec
1002f1ed:	call   0x10003340
1002f1f2:	push   0x100747b8
1002f1f7:	push   esi
1002f1f8:	push   0x100747b0
1002f1fd:	mov    ds:0x1008ac74,eax
1002f202:	mov    DWORD PTR ds:0x1008ac78,esi
1002f208:	call   0x10003340
1002f20d:	add    esp,0x48
1002f210:	push   0x10074774
1002f215:	push   esi
1002f216:	push   0x1007476c
1002f21b:	mov    ds:0x1008ac7c,eax
1002f220:	mov    DWORD PTR ds:0x1008ac80,esi
1002f226:	call   0x10003340
1002f22b:	push   0x10074738
1002f230:	push   edi
1002f231:	push   0x10074730
1002f236:	mov    ds:0x1008ac84,eax
1002f23b:	mov    DWORD PTR ds:0x1008ac88,edi
1002f241:	call   0x10003340
1002f246:	push   0x100746f4
1002f24b:	push   0x9
1002f24d:	push   0x100746e8
1002f252:	mov    ds:0x1008ac8c,eax
1002f257:	mov    DWORD PTR ds:0x1008ac90,0x9
1002f261:	call   0x10003340
1002f266:	push   0x100746b4
1002f26b:	push   0xa
1002f26d:	push   0x100746a8
1002f272:	mov    ds:0x1008ac94,eax
1002f277:	mov    DWORD PTR ds:0x1008ac98,0xa
1002f281:	call   0x10003340
1002f286:	push   0x1007467c
1002f28b:	push   0xb
1002f28d:	push   0x10074670
1002f292:	mov    ds:0x1008ac9c,eax
1002f297:	mov    DWORD PTR ds:0x1008aca0,0xb
1002f2a1:	call   0x10003340
1002f2a6:	push   0x10074634
1002f2ab:	push   0xc
1002f2ad:	push   0x10074624
1002f2b2:	mov    ds:0x1008aca4,eax
1002f2b7:	mov    DWORD PTR ds:0x1008aca8,0xc
1002f2c1:	call   0x10003340
1002f2c6:	add    esp,0x48
1002f2c9:	push   0x100745f4
1002f2ce:	push   esi
1002f2cf:	push   0x100745ec
1002f2d4:	mov    ds:0x1008acac,eax
1002f2d9:	mov    DWORD PTR ds:0x1008acb0,esi
1002f2df:	call   0x10003340
1002f2e4:	push   0x100745c0
1002f2e9:	push   edi
1002f2ea:	push   0x100745b8
1002f2ef:	mov    ds:0x1008acb4,eax
1002f2f4:	mov    DWORD PTR ds:0x1008acb8,edi
1002f2fa:	call   0x10003340
1002f2ff:	push   0x10074584
1002f304:	push   ebp
1002f305:	push   0x10074578
1002f30a:	mov    ds:0x1008acbc,eax
1002f30f:	mov    DWORD PTR ds:0x1008acc0,ebp
1002f315:	call   0x10003340
1002f31a:	push   0x10074538
1002f31f:	push   0x9
1002f321:	push   0x1007452c
1002f326:	mov    ds:0x1008acc4,eax
1002f32b:	mov    DWORD PTR ds:0x1008acc8,0x9
1002f335:	call   0x10003340
1002f33a:	push   0x10074508
1002f33f:	push   esi
1002f340:	push   0x10074500
1002f345:	mov    ds:0x1008accc,eax
1002f34a:	mov    DWORD PTR ds:0x1008acd0,esi
1002f350:	call   0x10003340
1002f355:	push   0x100744d0
1002f35a:	push   esi
1002f35b:	mov    ds:0x1008acd4,eax
1002f360:	mov    DWORD PTR ds:0x1008acd8,esi
1002f366:	push   0x100744c8
1002f36b:	call   0x10003340
1002f370:	add    esp,0x48
1002f373:	push   0x10074498
1002f378:	push   edi
1002f379:	push   0x10074490
1002f37e:	mov    ds:0x1008acdc,eax
1002f383:	mov    DWORD PTR ds:0x1008ace0,edi
1002f389:	call   0x10003340
1002f38e:	push   0x10074458
1002f393:	push   edi
1002f394:	push   0x10074450
1002f399:	mov    ds:0x1008ace4,eax
1002f39e:	mov    DWORD PTR ds:0x1008ace8,edi
1002f3a4:	call   0x10003340
1002f3a9:	push   0x10074410
1002f3ae:	push   0x4
1002f3b0:	push   0x10074408
1002f3b5:	mov    ds:0x1008acec,eax
1002f3ba:	mov    DWORD PTR ds:0x1008acf0,0x4
1002f3c4:	call   0x10003340
1002f3c9:	push   0x100743dc
1002f3ce:	push   ebx
1002f3cf:	push   0x100743d4
1002f3d4:	mov    ds:0x1008acf4,eax
1002f3d9:	mov    DWORD PTR ds:0x1008acf8,ebx
1002f3df:	call   0x10003340
1002f3e4:	push   0x100743a8
1002f3e9:	push   0x4
1002f3eb:	push   0x100743a0
1002f3f0:	mov    ds:0x1008acfc,eax
1002f3f5:	mov    DWORD PTR ds:0x1008ad00,0x4
1002f3ff:	call   0x10003340
1002f404:	push   0x1007436c
1002f409:	push   ebx
1002f40a:	push   0x10074364
1002f40f:	mov    ds:0x1008ad04,eax
1002f414:	mov    DWORD PTR ds:0x1008ad08,ebx
1002f41a:	call   0x10003340
1002f41f:	add    esp,0x48
1002f422:	push   0x10074330
1002f427:	push   edi
1002f428:	push   0x10074328
1002f42d:	mov    ds:0x1008ad0c,eax
1002f432:	mov    DWORD PTR ds:0x1008ad10,edi
1002f438:	call   0x10003340
1002f43d:	push   0x10074304
1002f442:	push   ebp
1002f443:	push   0x100742f8
1002f448:	mov    ds:0x1008ad14,eax
1002f44d:	mov    DWORD PTR ds:0x1008ad18,ebp
1002f453:	call   0x10003340
1002f458:	push   0x100742c8
1002f45d:	push   0x9
1002f45f:	push   0x100742bc
1002f464:	mov    ds:0x1008ad1c,eax
1002f469:	mov    DWORD PTR ds:0x1008ad20,0x9
1002f473:	call   0x10003340
1002f478:	push   0x10074280
1002f47d:	push   0xa
1002f47f:	push   0x10074274
1002f484:	mov    ds:0x1008ad24,eax
1002f489:	mov    DWORD PTR ds:0x1008ad28,0xa
1002f493:	call   0x10003340
1002f498:	push   0x10074238
1002f49d:	push   0x9
1002f49f:	push   0x1007422c
1002f4a4:	mov    ds:0x1008ad2c,eax
1002f4a9:	mov    DWORD PTR ds:0x1008ad30,0x9
1002f4b3:	call   0x10003340
1002f4b8:	push   0x10074208
1002f4bd:	push   0x9
1002f4bf:	push   0x100741fc
1002f4c4:	mov    ds:0x1008ad34,eax
1002f4c9:	mov    DWORD PTR ds:0x1008ad38,0x9
1002f4d3:	call   0x10003340
1002f4d8:	add    esp,0x48
1002f4db:	push   0x100741cc
1002f4e0:	push   0x9
1002f4e2:	mov    ds:0x1008ad3c,eax
1002f4e7:	mov    DWORD PTR ds:0x1008ad40,0x9
1002f4f1:	push   0x100741c0
1002f4f6:	call   0x10003340
1002f4fb:	push   0x10074180
1002f500:	push   0x9
1002f502:	push   0x10074170
1002f507:	mov    ds:0x1008ad44,eax
1002f50c:	mov    DWORD PTR ds:0x1008ad48,0x9
1002f516:	call   0x10003340
1002f51b:	push   0x10074134
1002f520:	push   0xa
1002f522:	push   0x10074128
1002f527:	mov    ds:0x1008ad4c,eax
1002f52c:	mov    DWORD PTR ds:0x1008ad50,0xa
1002f536:	call   0x10003340
1002f53b:	push   0x100740f4
1002f540:	push   0x9
1002f542:	push   0x100740e8
1002f547:	mov    ds:0x1008ad54,eax
1002f54c:	mov    DWORD PTR ds:0x1008ad58,0x9
1002f556:	call   0x10003340
1002f55b:	push   0x100740a8
1002f560:	push   0x9
1002f562:	push   0x1007409c
1002f567:	mov    ds:0x1008ad5c,eax
1002f56c:	mov    DWORD PTR ds:0x1008ad60,0x9
1002f576:	call   0x10003340
1002f57b:	push   0x10074074
1002f580:	push   0x9
1002f582:	push   0x10074068
1002f587:	mov    ds:0x1008ad64,eax
1002f58c:	mov    DWORD PTR ds:0x1008ad68,0x9
1002f596:	call   0x10003340
1002f59b:	add    esp,0x48
1002f59e:	push   0x10074028
1002f5a3:	push   0xa
1002f5a5:	push   0x1007401c
1002f5aa:	mov    ds:0x1008ad6c,eax
1002f5af:	mov    DWORD PTR ds:0x1008ad70,0xa
1002f5b9:	call   0x10003340
1002f5be:	push   0x10073fe0
1002f5c3:	push   0x9
1002f5c5:	push   0x10073fd4
1002f5ca:	mov    ds:0x1008ad74,eax
1002f5cf:	mov    DWORD PTR ds:0x1008ad78,0x9
1002f5d9:	call   0x10003340
1002f5de:	push   0x10073f9c
1002f5e3:	push   0xa
1002f5e5:	push   0x10073f90
1002f5ea:	mov    ds:0x1008ad7c,eax
1002f5ef:	mov    DWORD PTR ds:0x1008ad80,0xa
1002f5f9:	call   0x10003340
1002f5fe:	push   0x10073f64
1002f603:	push   0xf
1002f605:	push   0x10073f54
1002f60a:	mov    ds:0x1008ad84,eax
1002f60f:	mov    DWORD PTR ds:0x1008ad88,0xf
1002f619:	call   0x10003340
1002f61e:	push   0x10073f2c
1002f623:	push   0x10
1002f625:	push   0x10073f18
1002f62a:	mov    ds:0x1008ad8c,eax
1002f62f:	mov    DWORD PTR ds:0x1008ad90,0x10
1002f639:	call   0x10003340
1002f63e:	push   0x10073ee8
1002f643:	push   ebp
1002f644:	push   0x10073edc
1002f649:	mov    ds:0x1008ad94,eax
1002f64e:	mov    DWORD PTR ds:0x1008ad98,ebp
1002f654:	call   0x10003340
1002f659:	add    esp,0x48
1002f65c:	push   0x10073eac
1002f661:	push   ebp
1002f662:	push   0x10073ea0
1002f667:	mov    ds:0x1008ad9c,eax
1002f66c:	mov    DWORD PTR ds:0x1008ada0,ebp
1002f672:	call   0x10003340
1002f677:	push   0x10073e64
1002f67c:	push   0x9
1002f67e:	push   0x10073e58
1002f683:	mov    ds:0x1008ada4,eax
1002f688:	mov    DWORD PTR ds:0x1008ada8,0x9
1002f692:	call   0x10003340
1002f697:	push   0x10073e28
1002f69c:	push   0x9
1002f69e:	push   0x10073e1c
1002f6a3:	mov    ds:0x1008adac,eax
1002f6a8:	mov    DWORD PTR ds:0x1008adb0,0x9
1002f6b2:	call   0x10003340
1002f6b7:	push   0x10073df8
1002f6bc:	push   esi
1002f6bd:	push   0x10073df0
1002f6c2:	mov    ds:0x1008adb4,eax
1002f6c7:	mov    DWORD PTR ds:0x1008adb8,esi
1002f6cd:	call   0x10003340
1002f6d2:	push   0x10073db0
1002f6d7:	push   esi
1002f6d8:	push   0x10073da8
1002f6dd:	mov    ds:0x1008adbc,eax
1002f6e2:	mov    DWORD PTR ds:0x1008adc0,esi
1002f6e8:	call   0x10003340
1002f6ed:	push   0x10073d70
1002f6f2:	push   esi
1002f6f3:	push   0x10073d68
1002f6f8:	mov    ds:0x1008adc4,eax
1002f6fd:	mov    DWORD PTR ds:0x1008adc8,esi
1002f703:	call   0x10003340
1002f708:	add    esp,0x48
1002f70b:	push   0x10073d30
1002f710:	push   esi
1002f711:	push   0x10073d28
1002f716:	mov    ds:0x1008adcc,eax
1002f71b:	mov    DWORD PTR ds:0x1008add0,esi
1002f721:	call   0x10003340
1002f726:	push   0x10073cec
1002f72b:	push   edi
1002f72c:	push   0x10073ce4
1002f731:	mov    ds:0x1008add4,eax
1002f736:	mov    DWORD PTR ds:0x1008add8,edi
1002f73c:	call   0x10003340
1002f741:	push   0x10073cc0
1002f746:	push   edi
1002f747:	push   0x10073cb8
1002f74c:	mov    ds:0x1008addc,eax
1002f751:	mov    DWORD PTR ds:0x1008ade0,edi
1002f757:	call   0x10003340
1002f75c:	push   0x10073c78
1002f761:	push   edi
1002f762:	push   0x10073c6c
1002f767:	mov    ds:0x1008ade4,eax
1002f76c:	mov    DWORD PTR ds:0x1008ade8,edi
1002f772:	call   0x10003340
1002f777:	push   0x10073c38
1002f77c:	push   edi
1002f77d:	push   0x10073c30
1002f782:	mov    ds:0x1008adec,eax
1002f787:	mov    DWORD PTR ds:0x1008adf0,edi
1002f78d:	call   0x10003340
1002f792:	push   0x10073bf0
1002f797:	push   edi
1002f798:	push   0x10073be8
1002f79d:	mov    ds:0x1008adf4,eax
1002f7a2:	mov    DWORD PTR ds:0x1008adf8,edi
1002f7a8:	call   0x10003340
1002f7ad:	add    esp,0x48
1002f7b0:	push   0x10073bac
1002f7b5:	push   edi
1002f7b6:	push   0x10073ba4
1002f7bb:	mov    ds:0x1008adfc,eax
1002f7c0:	mov    DWORD PTR ds:0x1008ae00,edi
1002f7c6:	call   0x10003340
1002f7cb:	push   0x10073b80
1002f7d0:	push   ebp
1002f7d1:	push   0x10073b74
1002f7d6:	mov    ds:0x1008ae04,eax
1002f7db:	mov    DWORD PTR ds:0x1008ae08,ebp
1002f7e1:	call   0x10003340
1002f7e6:	push   0x10073b48
1002f7eb:	push   ebp
1002f7ec:	push   0x10073b3c
1002f7f1:	mov    ds:0x1008ae0c,eax
1002f7f6:	mov    DWORD PTR ds:0x1008ae10,ebp
1002f7fc:	call   0x10003340
1002f801:	mov    ds:0x1008ae14,eax
1002f806:	push   0x10073b08
1002f80b:	push   ebx
1002f80c:	push   0x10073b00
1002f811:	mov    DWORD PTR ds:0x1008ae18,ebx
1002f817:	call   0x10003340
1002f81c:	push   0x10073acc
1002f821:	push   ebx
1002f822:	push   0x10073ac4
1002f827:	mov    ds:0x1008ae1c,eax
1002f82c:	mov    DWORD PTR ds:0x1008ae20,ebx
1002f832:	call   0x10003340
1002f837:	push   0x10073a8c
1002f83c:	push   esi
1002f83d:	push   0x10073a84
1002f842:	mov    ds:0x1008ae24,eax
1002f847:	mov    DWORD PTR ds:0x1008ae28,esi
1002f84d:	call   0x10003340
1002f852:	add    esp,0x48
1002f855:	push   0x10073a4c
1002f85a:	push   esi
1002f85b:	push   0x10073a44
1002f860:	mov    ds:0x1008ae2c,eax
1002f865:	mov    DWORD PTR ds:0x1008ae30,esi
1002f86b:	call   0x10003340
1002f870:	push   0x10073a18
1002f875:	push   ebx
1002f876:	push   0x10073a10
1002f87b:	mov    ds:0x1008ae34,eax
1002f880:	mov    DWORD PTR ds:0x1008ae38,ebx
1002f886:	call   0x10003340
1002f88b:	push   0x100739dc
1002f890:	push   ebx
1002f891:	push   0x100739d4
1002f896:	mov    ds:0x1008ae3c,eax
1002f89b:	mov    DWORD PTR ds:0x1008ae40,ebx
1002f8a1:	call   0x10003340
1002f8a6:	push   0x100739a4
1002f8ab:	push   esi
1002f8ac:	push   0x1007399c
1002f8b1:	mov    ds:0x1008ae44,eax
1002f8b6:	mov    DWORD PTR ds:0x1008ae48,esi
1002f8bc:	call   0x10003340
1002f8c1:	push   0x1007396c
1002f8c6:	push   esi
1002f8c7:	push   0x10073964
1002f8cc:	mov    ds:0x1008ae4c,eax
1002f8d1:	mov    DWORD PTR ds:0x1008ae50,esi
1002f8d7:	call   0x10003340
1002f8dc:	push   0x10073930
1002f8e1:	push   esi
1002f8e2:	push   0x10073928
1002f8e7:	mov    ds:0x1008ae54,eax
1002f8ec:	mov    DWORD PTR ds:0x1008ae58,esi
1002f8f2:	call   0x10003340
1002f8f7:	add    esp,0x48
1002f8fa:	push   0x100738e8
1002f8ff:	push   esi
1002f900:	push   0x100738dc
1002f905:	mov    ds:0x1008ae5c,eax
1002f90a:	mov    DWORD PTR ds:0x1008ae60,esi
1002f910:	call   0x10003340
1002f915:	push   0x100738b0
1002f91a:	push   edi
1002f91b:	push   0x100738a8
1002f920:	mov    ds:0x1008ae64,eax
1002f925:	mov    DWORD PTR ds:0x1008ae68,edi
1002f92b:	call   0x10003340
1002f930:	push   0x10073878
1002f935:	push   edi
1002f936:	push   0x10073870
1002f93b:	mov    ds:0x1008ae6c,eax
1002f940:	mov    DWORD PTR ds:0x1008ae70,edi
1002f946:	call   0x10003340
1002f94b:	push   0x10073840
1002f950:	push   0x4
1002f952:	push   0x10073838
1002f957:	mov    ds:0x1008ae74,eax
1002f95c:	mov    DWORD PTR ds:0x1008ae78,0x4
1002f966:	call   0x10003340
1002f96b:	mov    ds:0x1008ae7c,eax
1002f970:	mov    DWORD PTR ds:0x1008ae80,0x4
1002f97a:	push   0x10073808
1002f97f:	push   0x4
1002f981:	push   0x10073800
1002f986:	call   0x10003340
1002f98b:	push   0x100737dc
1002f990:	push   ebx
1002f991:	push   0x100737d4
1002f996:	mov    ds:0x1008ae84,eax
1002f99b:	mov    DWORD PTR ds:0x1008ae88,ebx
1002f9a1:	call   0x10003340
1002f9a6:	add    esp,0x48
1002f9a9:	push   0x100737b0
1002f9ae:	push   ebx
1002f9af:	push   0x100737a8
1002f9b4:	mov    ds:0x1008ae8c,eax
1002f9b9:	mov    DWORD PTR ds:0x1008ae90,ebx
1002f9bf:	call   0x10003340
1002f9c4:	push   0x10073770
1002f9c9:	push   ebx
1002f9ca:	push   0x10073768
1002f9cf:	mov    ds:0x1008ae94,eax
1002f9d4:	mov    DWORD PTR ds:0x1008ae98,ebx
1002f9da:	call   0x10003340
1002f9df:	push   0x10073744
1002f9e4:	push   ebx
1002f9e5:	push   0x1007373c
1002f9ea:	mov    ds:0x1008ae9c,eax
1002f9ef:	mov    DWORD PTR ds:0x1008aea0,ebx
1002f9f5:	call   0x10003340
1002f9fa:	push   0x10073714
1002f9ff:	push   esi
1002fa00:	push   0x1007370c
1002fa05:	mov    ds:0x1008aea4,eax
1002fa0a:	mov    DWORD PTR ds:0x1008aea8,esi
1002fa10:	call   0x10003340
1002fa15:	push   0x100736d8
1002fa1a:	push   esi
1002fa1b:	push   0x100736d0
1002fa20:	mov    ds:0x1008aeac,eax
1002fa25:	mov    DWORD PTR ds:0x1008aeb0,esi
1002fa2b:	call   0x10003340
1002fa30:	push   0x10073698
1002fa35:	push   ebx
1002fa36:	push   0x10073690
1002fa3b:	mov    ds:0x1008aeb4,eax
1002fa40:	mov    DWORD PTR ds:0x1008aeb8,ebx
1002fa46:	call   0x10003340
1002fa4b:	add    esp,0x48
1002fa4e:	push   0x1007366c
1002fa53:	push   ebx
1002fa54:	push   0x10073664
1002fa59:	mov    ds:0x1008aebc,eax
1002fa5e:	mov    DWORD PTR ds:0x1008aec0,ebx
1002fa64:	call   0x10003340
1002fa69:	push   0x10073624
1002fa6e:	push   ebx
1002fa6f:	push   0x1007361c
1002fa74:	mov    ds:0x1008aec4,eax
1002fa79:	mov    DWORD PTR ds:0x1008aec8,ebx
1002fa7f:	call   0x10003340
1002fa84:	push   0x100735ec
1002fa89:	push   ebx
1002fa8a:	push   0x100735e4
1002fa8f:	mov    ds:0x1008aecc,eax
1002fa94:	mov    DWORD PTR ds:0x1008aed0,ebx
1002fa9a:	call   0x10003340
1002fa9f:	push   0x100735a8
1002faa4:	push   esi
1002faa5:	push   0x100735a0
1002faaa:	mov    ds:0x1008aed4,eax
1002faaf:	mov    DWORD PTR ds:0x1008aed8,esi
1002fab5:	call   0x10003340
1002faba:	push   0x10073560
1002fabf:	push   esi
1002fac0:	push   0x10073558
1002fac5:	mov    ds:0x1008aedc,eax
1002faca:	mov    DWORD PTR ds:0x1008aee0,esi
1002fad0:	call   0x10003340
1002fad5:	mov    ds:0x1008aee4,eax
1002fada:	mov    DWORD PTR ds:0x1008aee8,esi
1002fae0:	push   0x1007352c
1002fae5:	push   esi
1002fae6:	push   0x10073524
1002faeb:	call   0x10003340
1002faf0:	add    esp,0x48
1002faf3:	push   0x100734e4
1002faf8:	push   esi
1002faf9:	push   0x100734dc
1002fafe:	mov    ds:0x1008aeec,eax
1002fb03:	mov    DWORD PTR ds:0x1008aef0,esi
1002fb09:	call   0x10003340
1002fb0e:	push   0x100734b0
1002fb13:	push   ebx
1002fb14:	push   0x100734a8
1002fb19:	mov    ds:0x1008aef4,eax
1002fb1e:	mov    DWORD PTR ds:0x1008aef8,ebx
1002fb24:	call   0x10003340
1002fb29:	push   0x10073470
1002fb2e:	push   ebx
1002fb2f:	push   0x10073468
1002fb34:	mov    ds:0x1008aefc,eax
1002fb39:	mov    DWORD PTR ds:0x1008af00,ebx
1002fb3f:	call   0x10003340
1002fb44:	push   0x10073434
1002fb49:	push   ebx
1002fb4a:	push   0x1007342c
1002fb4f:	mov    ds:0x1008af04,eax
1002fb54:	mov    DWORD PTR ds:0x1008af08,ebx
1002fb5a:	call   0x10003340
1002fb5f:	push   0x10073408
1002fb64:	push   ebx
1002fb65:	push   0x10073400
1002fb6a:	mov    ds:0x1008af0c,eax
1002fb6f:	mov    DWORD PTR ds:0x1008af10,ebx
1002fb75:	call   0x10003340
1002fb7a:	push   0x100733c4
1002fb7f:	push   esi
1002fb80:	push   0x100733bc
1002fb85:	mov    ds:0x1008af14,eax
1002fb8a:	mov    DWORD PTR ds:0x1008af18,esi
1002fb90:	call   0x10003340
1002fb95:	add    esp,0x48
1002fb98:	push   0x10073394
1002fb9d:	push   esi
1002fb9e:	push   0x1007338c
1002fba3:	mov    ds:0x1008af1c,eax
1002fba8:	mov    DWORD PTR ds:0x1008af20,esi
1002fbae:	call   0x10003340
1002fbb3:	push   0x1007334c
1002fbb8:	push   esi
1002fbb9:	push   0x10073344
1002fbbe:	mov    ds:0x1008af24,eax
1002fbc3:	mov    DWORD PTR ds:0x1008af28,esi
1002fbc9:	call   0x10003340
1002fbce:	push   0x10073320
1002fbd3:	push   esi
1002fbd4:	push   0x10073318
1002fbd9:	mov    ds:0x1008af2c,eax
1002fbde:	mov    DWORD PTR ds:0x1008af30,esi
1002fbe4:	call   0x10003340
1002fbe9:	push   0x100732f4
1002fbee:	push   ebp
1002fbef:	push   0x100732e8
1002fbf4:	mov    ds:0x1008af34,eax
1002fbf9:	mov    DWORD PTR ds:0x1008af38,ebp
1002fbff:	call   0x10003340
1002fc04:	push   0x100732b0
1002fc09:	push   ebp
1002fc0a:	push   0x100732a4
1002fc0f:	mov    ds:0x1008af3c,eax
1002fc14:	mov    DWORD PTR ds:0x1008af40,ebp
1002fc1a:	call   0x10003340
1002fc1f:	push   0x1007327c
1002fc24:	push   ebp
1002fc25:	push   0x10073270
1002fc2a:	mov    ds:0x1008af44,eax
1002fc2f:	mov    DWORD PTR ds:0x1008af48,ebp
1002fc35:	call   0x10003340
1002fc3a:	add    esp,0x48
1002fc3d:	mov    ds:0x1008af4c,eax
1002fc42:	mov    DWORD PTR ds:0x1008af50,ebp
1002fc48:	push   0x10073240
1002fc4d:	push   ebp
1002fc4e:	push   0x10073234
1002fc53:	call   0x10003340
1002fc58:	push   0x100731f8
1002fc5d:	push   0x9
1002fc5f:	push   0x100731ec
1002fc64:	mov    ds:0x1008af54,eax
1002fc69:	mov    DWORD PTR ds:0x1008af58,0x9
1002fc73:	call   0x10003340
1002fc78:	push   0x100731c8
1002fc7d:	push   0x9
1002fc7f:	push   0x100731bc
1002fc84:	mov    ds:0x1008af5c,eax
1002fc89:	mov    DWORD PTR ds:0x1008af60,0x9
1002fc93:	call   0x10003340
1002fc98:	push   0x10073198
1002fc9d:	push   0x9
1002fc9f:	push   0x1007318c
1002fca4:	mov    ds:0x1008af64,eax
1002fca9:	mov    DWORD PTR ds:0x1008af68,0x9
1002fcb3:	call   0x10003340
1002fcb8:	push   0x10073150
1002fcbd:	push   0x9
1002fcbf:	push   0x10073144
1002fcc4:	mov    ds:0x1008af6c,eax
1002fcc9:	mov    DWORD PTR ds:0x1008af70,0x9
1002fcd3:	call   0x10003340
1002fcd8:	push   0x10073110
1002fcdd:	push   ebp
1002fcde:	push   0x10073104
1002fce3:	mov    ds:0x1008af74,eax
1002fce8:	mov    DWORD PTR ds:0x1008af78,ebp
1002fcee:	call   0x10003340
1002fcf3:	add    esp,0x48
1002fcf6:	push   0x100730c4
1002fcfb:	push   ebp
1002fcfc:	push   0x100730b8
1002fd01:	mov    ds:0x1008af7c,eax
1002fd06:	mov    DWORD PTR ds:0x1008af80,ebp
1002fd0c:	call   0x10003340
1002fd11:	push   0x10073078
1002fd16:	push   0x9
1002fd18:	push   0x10073068
1002fd1d:	mov    ds:0x1008af84,eax
1002fd22:	mov    DWORD PTR ds:0x1008af88,0x9
1002fd2c:	call   0x10003340
1002fd31:	push   0x10073038
1002fd36:	push   0x9
1002fd38:	push   0x1007302c
1002fd3d:	mov    ds:0x1008af8c,eax
1002fd42:	mov    DWORD PTR ds:0x1008af90,0x9
1002fd4c:	call   0x10003340
1002fd51:	push   0x10072fec
1002fd56:	push   0x9
1002fd58:	push   0x10072fe0
1002fd5d:	mov    ds:0x1008af94,eax
1002fd62:	mov    DWORD PTR ds:0x1008af98,0x9
1002fd6c:	call   0x10003340
1002fd71:	push   0x10072fac
1002fd76:	push   0xa
1002fd78:	push   0x10072fa0
1002fd7d:	mov    ds:0x1008af9c,eax
1002fd82:	mov    DWORD PTR ds:0x1008afa0,0xa
1002fd8c:	call   0x10003340
1002fd91:	push   0x10072f6c
1002fd96:	push   ebx
1002fd97:	push   0x10072f64
1002fd9c:	mov    ds:0x1008afa4,eax
1002fda1:	mov    DWORD PTR ds:0x1008afa8,ebx
1002fda7:	call   0x10003340
1002fdac:	add    esp,0x48
1002fdaf:	push   0x10072f34
1002fdb4:	push   ebx
1002fdb5:	push   0x10072f2c
1002fdba:	mov    ds:0x1008afac,eax
1002fdbf:	mov    DWORD PTR ds:0x1008afb0,ebx
1002fdc5:	call   0x10003340
1002fdca:	push   0x10072ef4
1002fdcf:	mov    ds:0x1008afb4,eax
1002fdd4:	mov    DWORD PTR ds:0x1008afb8,ebx
1002fdda:	push   ebx
1002fddb:	push   0x10072eec
1002fde0:	call   0x10003340
1002fde5:	push   0x10072eac
1002fdea:	push   ebx
1002fdeb:	push   0x10072ea4
1002fdf0:	mov    ds:0x1008afbc,eax
1002fdf5:	mov    DWORD PTR ds:0x1008afc0,ebx
1002fdfb:	call   0x10003340
1002fe00:	push   0x10072e6c
1002fe05:	push   esi
1002fe06:	push   0x10072e64
1002fe0b:	mov    ds:0x1008afc4,eax
1002fe10:	mov    DWORD PTR ds:0x1008afc8,esi
1002fe16:	call   0x10003340
1002fe1b:	push   0x10072e2c
1002fe20:	push   esi
1002fe21:	push   0x10072e24
1002fe26:	mov    ds:0x1008afcc,eax
1002fe2b:	mov    DWORD PTR ds:0x1008afd0,esi
1002fe31:	call   0x10003340
1002fe36:	push   0x10072e00
1002fe3b:	push   esi
1002fe3c:	push   0x10072df8
1002fe41:	mov    ds:0x1008afd4,eax
1002fe46:	mov    DWORD PTR ds:0x1008afd8,esi
1002fe4c:	call   0x10003340
1002fe51:	add    esp,0x48
1002fe54:	push   0x10072dbc
1002fe59:	push   esi
1002fe5a:	push   0x10072db4
1002fe5f:	mov    ds:0x1008afdc,eax
1002fe64:	mov    DWORD PTR ds:0x1008afe0,esi
1002fe6a:	call   0x10003340
1002fe6f:	push   0x10072d84
1002fe74:	push   ebx
1002fe75:	push   0x10072d7c
1002fe7a:	mov    ds:0x1008afe4,eax
1002fe7f:	mov    DWORD PTR ds:0x1008afe8,ebx
1002fe85:	call   0x10003340
1002fe8a:	push   0x10072d54
1002fe8f:	push   ebx
1002fe90:	push   0x10072d4c
1002fe95:	mov    ds:0x1008afec,eax
1002fe9a:	mov    DWORD PTR ds:0x1008aff0,ebx
1002fea0:	call   0x10003340
1002fea5:	push   0x10072d18
1002feaa:	push   ebx
1002feab:	push   0x10072d10
1002feb0:	mov    ds:0x1008aff4,eax
1002feb5:	mov    DWORD PTR ds:0x1008aff8,ebx
1002febb:	call   0x10003340
1002fec0:	push   0x10072cec
1002fec5:	push   ebx
1002fec6:	push   0x10072ce4
1002fecb:	mov    ds:0x1008affc,eax
1002fed0:	mov    DWORD PTR ds:0x1008b000,ebx
1002fed6:	call   0x10003340
1002fedb:	push   0x10072ca4
1002fee0:	push   esi
1002fee1:	push   0x10072c9c
1002fee6:	mov    ds:0x1008b004,eax
1002feeb:	mov    DWORD PTR ds:0x1008b008,esi
1002fef1:	call   0x10003340
1002fef6:	add    esp,0x48
1002fef9:	push   0x10072c60
1002fefe:	push   esi
1002feff:	push   0x10072c58
1002ff04:	mov    ds:0x1008b00c,eax
1002ff09:	mov    DWORD PTR ds:0x1008b010,esi
1002ff0f:	call   0x10003340
1002ff14:	push   0x10072c2c
1002ff19:	push   esi
1002ff1a:	push   0x10072c24
1002ff1f:	mov    ds:0x1008b014,eax
1002ff24:	mov    DWORD PTR ds:0x1008b018,esi
1002ff2a:	call   0x10003340
1002ff2f:	push   0x10072bf4
1002ff34:	push   esi
1002ff35:	mov    ds:0x1008b01c,eax
1002ff3a:	mov    DWORD PTR ds:0x1008b020,esi
1002ff40:	push   0x10072bec
1002ff45:	call   0x10003340
1002ff4a:	push   0x10072bc0
1002ff4f:	push   ebx
1002ff50:	push   0x10072bb8
1002ff55:	mov    ds:0x1008b024,eax
1002ff5a:	mov    DWORD PTR ds:0x1008b028,ebx
1002ff60:	call   0x10003340
1002ff65:	push   0x10072b84
1002ff6a:	push   ebx
1002ff6b:	push   0x10072b7c
1002ff70:	mov    ds:0x1008b02c,eax
1002ff75:	mov    DWORD PTR ds:0x1008b030,ebx
1002ff7b:	call   0x10003340
1002ff80:	push   0x10072b4c
1002ff85:	push   ebx
1002ff86:	push   0x10072b44
1002ff8b:	mov    ds:0x1008b034,eax
1002ff90:	mov    DWORD PTR ds:0x1008b038,ebx
1002ff96:	call   0x10003340
1002ff9b:	add    esp,0x48
1002ff9e:	push   0x10072b0c
1002ffa3:	push   ebx
1002ffa4:	push   0x10072b04
1002ffa9:	mov    ds:0x1008b03c,eax
1002ffae:	mov    DWORD PTR ds:0x1008b040,ebx
1002ffb4:	call   0x10003340
1002ffb9:	push   0x10072ac8
1002ffbe:	push   esi
1002ffbf:	push   0x10072ac0
1002ffc4:	mov    ds:0x1008b044,eax
1002ffc9:	mov    DWORD PTR ds:0x1008b048,esi
1002ffcf:	call   0x10003340
1002ffd4:	push   0x10072a9c
1002ffd9:	push   esi
1002ffda:	push   0x10072a94
1002ffdf:	mov    ds:0x1008b04c,eax
1002ffe4:	mov    DWORD PTR ds:0x1008b050,esi
1002ffea:	call   0x10003340
1002ffef:	push   0x10072a70
1002fff4:	push   esi
1002fff5:	push   0x10072a68
1002fffa:	mov    ds:0x1008b054,eax
1002ffff:	mov    DWORD PTR ds:0x1008b058,esi
10030005:	call   0x10003340
1003000a:	push   0x10072a28
1003000f:	push   esi
10030010:	push   0x10072a20
10030015:	mov    ds:0x1008b05c,eax
1003001a:	mov    DWORD PTR ds:0x1008b060,esi
10030020:	call   0x10003340
10030025:	push   0x100729fc
1003002a:	push   ebx
1003002b:	push   0x100729f4
10030030:	mov    ds:0x1008b064,eax
10030035:	mov    DWORD PTR ds:0x1008b068,ebx
1003003b:	call   0x10003340
10030040:	add    esp,0x48
10030043:	push   0x100729c4
10030048:	push   ebx
10030049:	push   0x100729bc
1003004e:	mov    ds:0x1008b06c,eax
10030053:	mov    DWORD PTR ds:0x1008b070,ebx
10030059:	call   0x10003340
1003005e:	push   0x1007297c
10030063:	push   ebx
10030064:	push   0x10072974
10030069:	mov    ds:0x1008b074,eax
1003006e:	mov    DWORD PTR ds:0x1008b078,ebx
10030074:	call   0x10003340
10030079:	push   0x1007294c
1003007e:	push   ebx
1003007f:	push   0x10072944
10030084:	mov    ds:0x1008b07c,eax
10030089:	mov    DWORD PTR ds:0x1008b080,ebx
1003008f:	call   0x10003340
10030094:	push   0x10072920
10030099:	push   esi
1003009a:	push   0x10072918
1003009f:	mov    ds:0x1008b084,eax
100300a4:	mov    DWORD PTR ds:0x1008b088,esi
100300aa:	call   0x10003340
100300af:	push   0x100728f0
100300b4:	push   esi
100300b5:	push   0x100728e8
100300ba:	mov    ds:0x1008b08c,eax
100300bf:	mov    DWORD PTR ds:0x1008b090,esi
100300c5:	call   0x10003340
100300ca:	push   0x100728c4
100300cf:	push   esi
100300d0:	push   0x100728bc
100300d5:	mov    ds:0x1008b094,eax
100300da:	mov    DWORD PTR ds:0x1008b098,esi
100300e0:	call   0x10003340
100300e5:	add    esp,0x48
100300e8:	push   0x10072898
100300ed:	push   esi
100300ee:	push   0x10072890
100300f3:	mov    ds:0x1008b09c,eax
100300f8:	mov    DWORD PTR ds:0x1008b0a0,esi
100300fe:	call   0x10003340
10030103:	push   0x10072854
10030108:	push   0x9
1003010a:	push   0x10072848
1003010f:	mov    ds:0x1008b0a4,eax
10030114:	mov    DWORD PTR ds:0x1008b0a8,0x9
1003011e:	call   0x10003340
10030123:	push   0x10072814
10030128:	push   0xa
1003012a:	push   0x10072808
1003012f:	mov    ds:0x1008b0ac,eax
10030134:	mov    DWORD PTR ds:0x1008b0b0,0xa
1003013e:	call   0x10003340
10030143:	push   0x100727d4
10030148:	push   0x9
1003014a:	push   0x100727c8
1003014f:	mov    ds:0x1008b0b4,eax
10030154:	mov    DWORD PTR ds:0x1008b0b8,0x9
1003015e:	call   0x10003340
10030163:	push   0x10072794
10030168:	push   0xa
1003016a:	push   0x10072788
1003016f:	mov    ds:0x1008b0bc,eax
10030174:	mov    DWORD PTR ds:0x1008b0c0,0xa
1003017e:	call   0x10003340
10030183:	push   0x10072760
10030188:	push   0x9
1003018a:	push   0x10072754
1003018f:	mov    ds:0x1008b0c4,eax
10030194:	mov    DWORD PTR ds:0x1008b0c8,0x9
1003019e:	call   0x10003340
100301a3:	add    esp,0x48
100301a6:	push   0x1007272c
100301ab:	push   0xa
100301ad:	push   0x10072720
100301b2:	mov    ds:0x1008b0cc,eax
100301b7:	mov    DWORD PTR ds:0x1008b0d0,0xa
100301c1:	call   0x10003340
100301c6:	push   0x100726fc
100301cb:	push   ebp
100301cc:	push   0x100726f0
100301d1:	mov    ds:0x1008b0d4,eax
100301d6:	mov    DWORD PTR ds:0x1008b0d8,ebp
100301dc:	call   0x10003340
100301e1:	push   0x100726c8
100301e6:	push   0x9
100301e8:	push   0x100726bc
100301ed:	mov    ds:0x1008b0dc,eax
100301f2:	mov    DWORD PTR ds:0x1008b0e0,0x9
100301fc:	call   0x10003340
10030201:	push   0x10072684
10030206:	push   edi
10030207:	push   0x1007267c
1003020c:	mov    ds:0x1008b0e4,eax
10030211:	mov    DWORD PTR ds:0x1008b0e8,edi
10030217:	call   0x10003340
1003021c:	push   0x1007263c
10030221:	push   ebp
10030222:	push   0x10072630
10030227:	mov    ds:0x1008b0ec,eax
1003022c:	mov    DWORD PTR ds:0x1008b0f0,ebp
10030232:	call   0x10003340
10030237:	mov    ds:0x1008b0f4,eax
1003023c:	push   0x10072608
10030241:	push   edi
10030242:	push   0x10072600
10030247:	mov    DWORD PTR ds:0x1008b0f8,edi
1003024d:	call   0x10003340
10030252:	add    esp,0x48
10030255:	push   0x100725cc
1003025a:	push   ebp
1003025b:	push   0x100725c0
10030260:	mov    ds:0x1008b0fc,eax
10030265:	mov    DWORD PTR ds:0x1008b100,ebp
1003026b:	call   0x10003340
10030270:	push   0x1007258c
10030275:	push   edi
10030276:	push   0x10072584
1003027b:	mov    ds:0x1008b104,eax
10030280:	mov    DWORD PTR ds:0x1008b108,edi
10030286:	call   0x10003340
1003028b:	push   0x10072548
10030290:	push   ebp
10030291:	push   0x1007253c
10030296:	mov    ds:0x1008b10c,eax
1003029b:	mov    DWORD PTR ds:0x1008b110,ebp
100302a1:	call   0x10003340
100302a6:	push   0x10072500
100302ab:	push   ebp
100302ac:	push   0x100724f4
100302b1:	mov    ds:0x1008b114,eax
100302b6:	mov    DWORD PTR ds:0x1008b118,ebp
100302bc:	call   0x10003340
100302c1:	push   0x100724c0
100302c6:	push   0x9
100302c8:	push   0x100724b4
100302cd:	mov    ds:0x1008b11c,eax
100302d2:	mov    DWORD PTR ds:0x1008b120,0x9
100302dc:	call   0x10003340
100302e1:	push   0x10072480
100302e6:	push   0x9
100302e8:	push   0x10072474
100302ed:	mov    ds:0x1008b124,eax
100302f2:	mov    DWORD PTR ds:0x1008b128,0x9
100302fc:	call   0x10003340
10030301:	add    esp,0x48
10030304:	push   0x1007243c
10030309:	push   0xa
1003030b:	push   0x10072430
10030310:	mov    ds:0x1008b12c,eax
10030315:	mov    DWORD PTR ds:0x1008b130,0xa
1003031f:	call   0x10003340
10030324:	push   0x1007240c
10030329:	push   0x9
1003032b:	push   0x10072400
10030330:	mov    ds:0x1008b134,eax
10030335:	mov    DWORD PTR ds:0x1008b138,0x9
1003033f:	call   0x10003340
10030344:	push   0x100723d8
10030349:	push   0xa
1003034b:	push   0x100723cc
10030350:	mov    ds:0x1008b13c,eax
10030355:	mov    DWORD PTR ds:0x1008b140,0xa
1003035f:	call   0x10003340
10030364:	push   0x1007239c
10030369:	push   0x9
1003036b:	push   0x10072390
10030370:	mov    ds:0x1008b144,eax
10030375:	mov    DWORD PTR ds:0x1008b148,0x9
1003037f:	call   0x10003340
10030384:	push   0x10072354
10030389:	push   0xa
1003038b:	push   0x10072348
10030390:	mov    ds:0x1008b14c,eax
10030395:	mov    DWORD PTR ds:0x1008b150,0xa
1003039f:	call   0x10003340
100303a4:	push   0x1007231c
100303a9:	push   ebp
100303aa:	push   0x10072310
100303af:	mov    ds:0x1008b154,eax
100303b4:	mov    DWORD PTR ds:0x1008b158,ebp
100303ba:	call   0x10003340
100303bf:	add    esp,0x48
100303c2:	mov    ds:0x1008b15c,eax
100303c7:	push   0x100722d4
100303cc:	push   0x9
100303ce:	push   0x100722c8
100303d3:	mov    DWORD PTR ds:0x1008b160,0x9
100303dd:	call   0x10003340
100303e2:	push   0x100722a4
100303e7:	push   0xa
100303e9:	push   0x10072298
100303ee:	mov    ds:0x1008b164,eax
100303f3:	mov    DWORD PTR ds:0x1008b168,0xa
100303fd:	call   0x10003340
10030402:	push   0x10072274
10030407:	push   0xb
10030409:	push   0x10072268
1003040e:	mov    ds:0x1008b16c,eax
10030413:	mov    DWORD PTR ds:0x1008b170,0xb
1003041d:	call   0x10003340
10030422:	push   0x1007222c
10030427:	push   0xa
10030429:	push   0x10072220
1003042e:	mov    ds:0x1008b174,eax
10030433:	mov    DWORD PTR ds:0x1008b178,0xa
1003043d:	call   0x10003340
10030442:	push   0x100721f4
10030447:	push   0xb
10030449:	push   0x100721e8
1003044e:	mov    ds:0x1008b17c,eax
10030453:	mov    DWORD PTR ds:0x1008b180,0xb
1003045d:	call   0x10003340
10030462:	push   0x100721b4
10030467:	push   0x4
10030469:	push   0x100721ac
1003046e:	mov    ds:0x1008b184,eax
10030473:	mov    DWORD PTR ds:0x1008b188,0x4
1003047d:	call   0x10003340
10030482:	add    esp,0x48
10030485:	push   0x1007217c
1003048a:	push   0x4
1003048c:	push   0x10072174
10030491:	mov    ds:0x1008b18c,eax
10030496:	mov    DWORD PTR ds:0x1008b190,0x4
100304a0:	call   0x10003340
100304a5:	push   0x10072150
100304aa:	push   ebx
100304ab:	push   0x10072148
100304b0:	mov    ds:0x1008b194,eax
100304b5:	mov    DWORD PTR ds:0x1008b198,ebx
100304bb:	call   0x10003340
100304c0:	push   0x10072110
100304c5:	push   ebx
100304c6:	push   0x10072108
100304cb:	mov    ds:0x1008b19c,eax
100304d0:	mov    DWORD PTR ds:0x1008b1a0,ebx
100304d6:	call   0x10003340
100304db:	push   0x100720c8
100304e0:	push   esi
100304e1:	push   0x100720c0
100304e6:	mov    ds:0x1008b1a4,eax
100304eb:	mov    DWORD PTR ds:0x1008b1a8,esi
100304f1:	call   0x10003340
100304f6:	push   0x1007208c
100304fb:	push   esi
100304fc:	push   0x10072084
10030501:	mov    ds:0x1008b1ac,eax
10030506:	mov    DWORD PTR ds:0x1008b1b0,esi
1003050c:	call   0x10003340
10030511:	push   0x10072060
10030516:	push   edi
10030517:	push   0x10072058
1003051c:	mov    ds:0x1008b1b4,eax
10030521:	mov    DWORD PTR ds:0x1008b1b8,edi
10030527:	call   0x10003340
1003052c:	add    esp,0x48
1003052f:	push   0x10072028
10030534:	push   edi
10030535:	push   0x10072020
1003053a:	mov    ds:0x1008b1bc,eax
1003053f:	mov    DWORD PTR ds:0x1008b1c0,edi
10030545:	call   0x10003340
1003054a:	mov    ds:0x1008b1c4,eax
1003054f:	mov    DWORD PTR ds:0x1008b1c8,esi
10030555:	push   0x10071fe0
1003055a:	push   esi
1003055b:	push   0x10071fd8
10030560:	call   0x10003340
10030565:	push   0x10071f98
1003056a:	push   esi
1003056b:	push   0x10071f90
10030570:	mov    ds:0x1008b1cc,eax
10030575:	mov    DWORD PTR ds:0x1008b1d0,esi
1003057b:	call   0x10003340
10030580:	push   0x10071f58
10030585:	push   edi
10030586:	push   0x10071f50
1003058b:	mov    ds:0x1008b1d4,eax
10030590:	mov    DWORD PTR ds:0x1008b1d8,edi
10030596:	call   0x10003340
1003059b:	push   0x10071f2c
100305a0:	push   edi
100305a1:	push   0x10071f24
100305a6:	mov    ds:0x1008b1dc,eax
100305ab:	mov    DWORD PTR ds:0x1008b1e0,edi
100305b1:	call   0x10003340
100305b6:	push   0x10071ef4
100305bb:	push   edi
100305bc:	push   0x10071eec
100305c1:	mov    ds:0x1008b1e4,eax
100305c6:	mov    DWORD PTR ds:0x1008b1e8,edi
100305cc:	call   0x10003340
100305d1:	add    esp,0x48
100305d4:	push   0x10071eb4
100305d9:	push   ebp
100305da:	push   0x10071ea8
100305df:	mov    ds:0x1008b1ec,eax
100305e4:	mov    DWORD PTR ds:0x1008b1f0,ebp
100305ea:	call   0x10003340
100305ef:	push   0x10071e68
100305f4:	push   ebp
100305f5:	push   0x10071e5c
100305fa:	mov    ds:0x1008b1f4,eax
100305ff:	mov    DWORD PTR ds:0x1008b1f8,ebp
10030605:	call   0x10003340
1003060a:	push   0x10071e30
1003060f:	push   ebx
10030610:	push   0x10071e28
10030615:	mov    ds:0x1008b1fc,eax
1003061a:	mov    DWORD PTR ds:0x1008b200,ebx
10030620:	call   0x10003340
10030625:	push   0x10071e04
1003062a:	push   esi
1003062b:	push   0x10071dfc
10030630:	mov    ds:0x1008b204,eax
10030635:	mov    DWORD PTR ds:0x1008b208,esi
1003063b:	call   0x10003340
10030640:	push   0x10071dcc
10030645:	push   ebx
10030646:	push   0x10071dc4
1003064b:	mov    ds:0x1008b20c,eax
10030650:	mov    DWORD PTR ds:0x1008b210,ebx
10030656:	call   0x10003340
1003065b:	push   0x10071d94
10030660:	push   esi
10030661:	push   0x10071d8c
10030666:	mov    ds:0x1008b214,eax
1003066b:	mov    DWORD PTR ds:0x1008b218,esi
10030671:	call   0x10003340
10030676:	add    esp,0x48
10030679:	push   0x10071d60
1003067e:	push   ebx
1003067f:	push   0x10071d58
10030684:	mov    ds:0x1008b21c,eax
10030689:	mov    DWORD PTR ds:0x1008b220,ebx
1003068f:	call   0x10003340
10030694:	push   0x10071d20
10030699:	push   esi
1003069a:	push   0x10071d18
1003069f:	mov    ds:0x1008b224,eax
100306a4:	mov    DWORD PTR ds:0x1008b228,esi
100306aa:	call   0x10003340
100306af:	mov    ds:0x1008b22c,eax
100306b4:	mov    DWORD PTR ds:0x1008b230,ebx
100306ba:	push   0x10071ce0
100306bf:	push   ebx
100306c0:	push   0x10071cd8
100306c5:	call   0x10003340
100306ca:	push   0x10071cb4
100306cf:	push   esi
100306d0:	push   0x10071cac
100306d5:	mov    ds:0x1008b234,eax
100306da:	mov    DWORD PTR ds:0x1008b238,esi
100306e0:	call   0x10003340
100306e5:	push   0x10071c7c
100306ea:	push   ebx
100306eb:	push   0x10071c74
100306f0:	mov    ds:0x1008b23c,eax
100306f5:	mov    DWORD PTR ds:0x1008b240,ebx
100306fb:	call   0x10003340
10030700:	push   0x10071c3c
10030705:	push   esi
10030706:	push   0x10071c34
1003070b:	mov    ds:0x1008b244,eax
10030710:	mov    DWORD PTR ds:0x1008b248,esi
10030716:	call   0x10003340
1003071b:	add    esp,0x48
1003071e:	push   0x10071c10
10030723:	push   ebx
10030724:	push   0x10071c08
10030729:	mov    ds:0x1008b24c,eax
1003072e:	mov    DWORD PTR ds:0x1008b250,ebx
10030734:	call   0x10003340
10030739:	push   0x10071bc8
1003073e:	push   esi
1003073f:	push   0x10071bc0
10030744:	mov    ds:0x1008b254,eax
10030749:	mov    DWORD PTR ds:0x1008b258,esi
1003074f:	call   0x10003340
10030754:	push   0x10071b8c
10030759:	push   ebx
1003075a:	push   0x10071b84
1003075f:	mov    ds:0x1008b25c,eax
10030764:	mov    DWORD PTR ds:0x1008b260,ebx
1003076a:	call   0x10003340
1003076f:	push   0x10071b5c
10030774:	push   esi
10030775:	push   0x10071b54
1003077a:	mov    ds:0x1008b264,eax
1003077f:	mov    DWORD PTR ds:0x1008b268,esi
10030785:	call   0x10003340
1003078a:	push   0x10071b18
1003078f:	push   esi
10030790:	push   0x10071b10
10030795:	mov    ds:0x1008b26c,eax
1003079a:	mov    DWORD PTR ds:0x1008b270,esi
100307a0:	call   0x10003340
100307a5:	push   0x10071ad0
100307aa:	push   edi
100307ab:	push   0x10071ac8
100307b0:	mov    ds:0x1008b274,eax
100307b5:	mov    DWORD PTR ds:0x1008b278,edi
100307bb:	call   0x10003340
100307c0:	add    esp,0x48
100307c3:	push   0x10071a9c
100307c8:	push   ebx
100307c9:	push   0x10071a94
100307ce:	mov    ds:0x1008b27c,eax
100307d3:	mov    DWORD PTR ds:0x1008b280,ebx
100307d9:	call   0x10003340
100307de:	push   0x10071a64
100307e3:	push   esi
100307e4:	push   0x10071a5c
100307e9:	mov    ds:0x1008b284,eax
100307ee:	mov    DWORD PTR ds:0x1008b288,esi
100307f4:	call   0x10003340
100307f9:	push   0x10071a20
100307fe:	push   esi
100307ff:	push   0x10071a18
10030804:	mov    ds:0x1008b28c,eax
10030809:	mov    DWORD PTR ds:0x1008b290,esi
1003080f:	call   0x10003340
10030814:	push   0x100719f4
10030819:	mov    ds:0x1008b294,eax
1003081e:	mov    DWORD PTR ds:0x1008b298,edi
10030824:	push   edi
10030825:	push   0x100719ec
1003082a:	call   0x10003340
1003082f:	push   0x100719bc
10030834:	push   edi
10030835:	push   0x100719b4
1003083a:	mov    ds:0x1008b29c,eax
1003083f:	mov    DWORD PTR ds:0x1008b2a0,edi
10030845:	call   0x10003340
1003084a:	push   0x10071978
1003084f:	push   ebp
10030850:	push   0x1007196c
10030855:	mov    ds:0x1008b2a4,eax
1003085a:	mov    DWORD PTR ds:0x1008b2a8,ebp
10030860:	call   0x10003340
10030865:	add    esp,0x48
10030868:	push   0x1007192c
1003086d:	push   edi
1003086e:	push   0x10071924
10030873:	mov    ds:0x1008b2ac,eax
10030878:	mov    DWORD PTR ds:0x1008b2b0,edi
1003087e:	call   0x10003340
10030883:	push   0x100718ec
10030888:	push   ebp
10030889:	push   0x100718e0
1003088e:	mov    ds:0x1008b2b4,eax
10030893:	mov    DWORD PTR ds:0x1008b2b8,ebp
10030899:	call   0x10003340
1003089e:	push   0x100718a0
100308a3:	push   edi
100308a4:	push   0x10071898
100308a9:	mov    ds:0x1008b2bc,eax
100308ae:	mov    DWORD PTR ds:0x1008b2c0,edi
100308b4:	call   0x10003340
100308b9:	push   0x10071868
100308be:	push   ebp
100308bf:	push   0x1007185c
100308c4:	mov    ds:0x1008b2c4,eax
100308c9:	mov    DWORD PTR ds:0x1008b2c8,ebp
100308cf:	call   0x10003340
100308d4:	push   0x10071820
100308d9:	push   0x4
100308db:	push   0x10071818
100308e0:	mov    ds:0x1008b2cc,eax
100308e5:	mov    DWORD PTR ds:0x1008b2d0,0x4
100308ef:	call   0x10003340
100308f4:	push   0x100717e8
100308f9:	push   0xa
100308fb:	push   0x100717dc
10030900:	mov    ds:0x1008b2d4,eax
10030905:	mov    DWORD PTR ds:0x1008b2d8,0xa
1003090f:	call   0x10003340
10030914:	add    esp,0x48
10030917:	push   0x100717a4
1003091c:	push   ebp
1003091d:	push   0x10071798
10030922:	mov    ds:0x1008b2dc,eax
10030927:	mov    DWORD PTR ds:0x1008b2e0,ebp
1003092d:	call   0x10003340
10030932:	push   0x10071760
10030937:	push   esi
10030938:	push   0x10071758
1003093d:	mov    ds:0x1008b2e4,eax
10030942:	mov    DWORD PTR ds:0x1008b2e8,esi
10030948:	call   0x10003340
1003094d:	push   0x10071734
10030952:	push   ebx
10030953:	push   0x1007172c
10030958:	mov    ds:0x1008b2ec,eax
1003095d:	mov    DWORD PTR ds:0x1008b2f0,ebx
10030963:	call   0x10003340
10030968:	push   0x100716fc
1003096d:	push   edi
1003096e:	push   0x100716f4
10030973:	mov    ds:0x1008b2f4,eax
10030978:	mov    DWORD PTR ds:0x1008b2f8,edi
1003097e:	call   0x10003340
10030983:	push   0x100716b8
10030988:	push   edi
10030989:	mov    ds:0x1008b2fc,eax
1003098e:	mov    DWORD PTR ds:0x1008b300,edi
10030994:	push   0x100716b0
10030999:	call   0x10003340
1003099e:	push   0x10071680
100309a3:	push   esi
100309a4:	push   0x10071678
100309a9:	mov    ds:0x1008b304,eax
100309ae:	mov    DWORD PTR ds:0x1008b308,esi
100309b4:	call   0x10003340
100309b9:	add    esp,0x48
100309bc:	push   0x10071648
100309c1:	push   esi
100309c2:	push   0x10071640
100309c7:	mov    ds:0x1008b30c,eax
100309cc:	mov    DWORD PTR ds:0x1008b310,esi
100309d2:	call   0x10003340
100309d7:	push   0x10071608
100309dc:	push   edi
100309dd:	push   0x10071600
100309e2:	mov    ds:0x1008b314,eax
100309e7:	mov    DWORD PTR ds:0x1008b318,edi
100309ed:	call   0x10003340
100309f2:	push   0x100715dc
100309f7:	push   edi
100309f8:	push   0x100715d4
100309fd:	mov    ds:0x1008b31c,eax
10030a02:	mov    DWORD PTR ds:0x1008b320,edi
10030a08:	call   0x10003340
10030a0d:	push   0x100715a0
10030a12:	push   esi
10030a13:	push   0x10071598
10030a18:	mov    ds:0x1008b324,eax
10030a1d:	mov    DWORD PTR ds:0x1008b328,esi
10030a23:	call   0x10003340
10030a28:	push   0x10071574
10030a2d:	push   esi
10030a2e:	push   0x1007156c
10030a33:	mov    ds:0x1008b32c,eax
10030a38:	mov    DWORD PTR ds:0x1008b330,esi
10030a3e:	call   0x10003340
10030a43:	push   0x10071540
10030a48:	push   edi
10030a49:	push   0x10071538
10030a4e:	mov    ds:0x1008b334,eax
10030a53:	mov    DWORD PTR ds:0x1008b338,edi
10030a59:	call   0x10003340
10030a5e:	add    esp,0x48
10030a61:	push   0x100714fc
10030a66:	push   edi
10030a67:	push   0x100714f4
10030a6c:	mov    ds:0x1008b33c,eax
10030a71:	mov    DWORD PTR ds:0x1008b340,edi
10030a77:	call   0x10003340
10030a7c:	push   0x100714c4
10030a81:	push   esi
10030a82:	push   0x100714bc
10030a87:	mov    ds:0x1008b344,eax
10030a8c:	mov    DWORD PTR ds:0x1008b348,esi
10030a92:	call   0x10003340
10030a97:	push   0x1007147c
10030a9c:	push   edi
10030a9d:	push   0x10071474
10030aa2:	mov    ds:0x1008b34c,eax
10030aa7:	mov    DWORD PTR ds:0x1008b350,edi
10030aad:	call   0x10003340
10030ab2:	push   0x10071448
10030ab7:	push   0x4
10030ab9:	push   0x10071440
10030abe:	mov    ds:0x1008b354,eax
10030ac3:	mov    DWORD PTR ds:0x1008b358,0x4
10030acd:	call   0x10003340
10030ad2:	push   0x10071408
10030ad7:	push   esi
10030ad8:	push   0x10071400
10030add:	mov    ds:0x1008b35c,eax
10030ae2:	mov    DWORD PTR ds:0x1008b360,esi
10030ae8:	call   0x10003340
10030aed:	push   0x100713c0
10030af2:	push   esi
10030af3:	push   0x100713b4
10030af8:	mov    ds:0x1008b364,eax
10030afd:	mov    DWORD PTR ds:0x1008b368,esi
10030b03:	call   0x10003340
10030b08:	add    esp,0x48
10030b0b:	push   0x10071384
10030b10:	push   esi
10030b11:	push   0x1007137c
10030b16:	mov    ds:0x1008b36c,eax
10030b1b:	mov    DWORD PTR ds:0x1008b370,esi
10030b21:	call   0x10003340
10030b26:	push   0x10071344
10030b2b:	push   esi
10030b2c:	push   0x1007133c
10030b31:	mov    ds:0x1008b374,eax
10030b36:	mov    DWORD PTR ds:0x1008b378,esi
10030b3c:	call   0x10003340
10030b41:	push   0x10071314
10030b46:	push   edi
10030b47:	push   0x1007130c
10030b4c:	mov    ds:0x1008b37c,eax
10030b51:	mov    DWORD PTR ds:0x1008b380,edi
10030b57:	call   0x10003340
10030b5c:	push   0x100712e8
10030b61:	push   edi
10030b62:	push   0x100712e0
10030b67:	mov    ds:0x1008b384,eax
10030b6c:	mov    DWORD PTR ds:0x1008b388,edi
10030b72:	call   0x10003340
10030b77:	push   0x100712ac
10030b7c:	push   ebp
10030b7d:	push   0x100712a0
10030b82:	mov    ds:0x1008b38c,eax
10030b87:	mov    DWORD PTR ds:0x1008b390,ebp
10030b8d:	call   0x10003340
10030b92:	push   0x1007127c
10030b97:	push   edi
10030b98:	push   0x10071274
10030b9d:	mov    ds:0x1008b394,eax
10030ba2:	mov    DWORD PTR ds:0x1008b398,edi
10030ba8:	call   0x10003340
10030bad:	add    esp,0x48
10030bb0:	push   0x10071234
10030bb5:	push   ebp
10030bb6:	push   0x10071228
10030bbb:	mov    ds:0x1008b39c,eax
10030bc0:	mov    DWORD PTR ds:0x1008b3a0,ebp
10030bc6:	call   0x10003340
10030bcb:	push   0x100711e8
10030bd0:	push   esi
10030bd1:	push   0x100711e0
10030bd6:	mov    ds:0x1008b3a4,eax
10030bdb:	mov    DWORD PTR ds:0x1008b3a8,esi
10030be1:	call   0x10003340
10030be6:	push   0x100711bc
10030beb:	push   0x3
10030bed:	push   0x100711b8
10030bf2:	mov    ds:0x1008b3ac,eax
10030bf7:	mov    DWORD PTR ds:0x1008b3b0,0x3
10030c01:	call   0x10003340
10030c06:	push   0x10071184
10030c0b:	push   ebx
10030c0c:	push   0x1007117c
10030c11:	mov    ds:0x1008b3b4,eax
10030c16:	mov    DWORD PTR ds:0x1008b3b8,ebx
10030c1c:	call   0x10003340
10030c21:	push   0x1007114c
10030c26:	push   edi
10030c27:	push   0x10071144
10030c2c:	mov    ds:0x1008b3bc,eax
10030c31:	mov    DWORD PTR ds:0x1008b3c0,edi
10030c37:	call   0x10003340
10030c3c:	push   0x10071118
10030c41:	push   edi
10030c42:	push   0x10071110
10030c47:	mov    ds:0x1008b3c4,eax
10030c4c:	mov    DWORD PTR ds:0x1008b3c8,edi
10030c52:	call   0x10003340
10030c57:	add    esp,0x48
10030c5a:	push   0x100710d0
10030c5f:	push   edi
10030c60:	push   0x100710c8
10030c65:	mov    ds:0x1008b3cc,eax
10030c6a:	mov    DWORD PTR ds:0x1008b3d0,edi
10030c70:	call   0x10003340
10030c75:	push   0x1007109c
10030c7a:	push   0xa
10030c7c:	push   0x10071090
10030c81:	mov    ds:0x1008b3d4,eax
10030c86:	mov    DWORD PTR ds:0x1008b3d8,0xa
10030c90:	call   0x10003340
10030c95:	push   0x10071060
10030c9a:	push   ebp
10030c9b:	push   0x10071054
10030ca0:	mov    ds:0x1008b3dc,eax
10030ca5:	mov    DWORD PTR ds:0x1008b3e0,ebp
10030cab:	call   0x10003340
10030cb0:	push   0x1007101c
10030cb5:	push   ebp
10030cb6:	push   0x10071010
10030cbb:	mov    ds:0x1008b3e4,eax
10030cc0:	mov    DWORD PTR ds:0x1008b3e8,ebp
10030cc6:	call   0x10003340
10030ccb:	push   0x10070fe4
10030cd0:	push   ebp
10030cd1:	push   0x10070fd8
10030cd6:	mov    ds:0x1008b3ec,eax
10030cdb:	mov    DWORD PTR ds:0x1008b3f0,ebp
10030ce1:	call   0x10003340
10030ce6:	push   0x10070f9c
10030ceb:	push   ebp
10030cec:	push   0x10070f90
10030cf1:	mov    ds:0x1008b3f4,eax
10030cf6:	mov    DWORD PTR ds:0x1008b3f8,ebp
10030cfc:	call   0x10003340
10030d01:	add    esp,0x48
10030d04:	push   0x10070f54
10030d09:	push   edi
10030d0a:	push   0x10070f4c
10030d0f:	mov    ds:0x1008b3fc,eax
10030d14:	mov    DWORD PTR ds:0x1008b400,edi
10030d1a:	call   0x10003340
10030d1f:	push   0x10070f1c
10030d24:	push   edi
10030d25:	push   0x10070f14
10030d2a:	mov    ds:0x1008b404,eax
10030d2f:	mov    DWORD PTR ds:0x1008b408,edi
10030d35:	call   0x10003340
10030d3a:	push   0x10070ef0
10030d3f:	push   edi
10030d40:	push   0x10070ee8
10030d45:	mov    ds:0x1008b40c,eax
10030d4a:	mov    DWORD PTR ds:0x1008b410,edi
10030d50:	call   0x10003340
10030d55:	push   0x10070eb4
10030d5a:	push   0xa
10030d5c:	push   0x10070ea8
10030d61:	mov    ds:0x1008b414,eax
10030d66:	mov    DWORD PTR ds:0x1008b418,0xa
10030d70:	call   0x10003340
10030d75:	push   0x10070e80
10030d7a:	push   ebp
10030d7b:	push   0x10070e74
10030d80:	mov    ds:0x1008b41c,eax
10030d85:	mov    DWORD PTR ds:0x1008b420,ebp
10030d8b:	call   0x10003340
10030d90:	push   0x10070e40
10030d95:	push   ebp
10030d96:	push   0x10070e34
10030d9b:	mov    ds:0x1008b424,eax
10030da0:	mov    DWORD PTR ds:0x1008b428,ebp
10030da6:	call   0x10003340
10030dab:	add    esp,0x48
10030dae:	push   0x10070e10
10030db3:	push   ebp
10030db4:	push   0x10070e04
10030db9:	mov    ds:0x1008b42c,eax
10030dbe:	mov    DWORD PTR ds:0x1008b430,ebp
10030dc4:	call   0x10003340
10030dc9:	push   0x10070dc4
10030dce:	push   ebp
10030dcf:	push   0x10070db8
10030dd4:	mov    ds:0x1008b434,eax
10030dd9:	mov    DWORD PTR ds:0x1008b438,ebp
10030ddf:	call   0x10003340
10030de4:	mov    ds:0x1008b43c,eax
10030de9:	push   0x10070d7c
10030dee:	push   edi
10030def:	push   0x10070d74
10030df4:	mov    DWORD PTR ds:0x1008b440,edi
10030dfa:	call   0x10003340
10030dff:	push   0x10070d40
10030e04:	push   edi
10030e05:	push   0x10070d38
10030e0a:	mov    ds:0x1008b444,eax
10030e0f:	mov    DWORD PTR ds:0x1008b448,edi
10030e15:	call   0x10003340
10030e1a:	push   0x10070cfc
10030e1f:	push   edi
10030e20:	push   0x10070cf4
10030e25:	mov    ds:0x1008b44c,eax
10030e2a:	mov    DWORD PTR ds:0x1008b450,edi
10030e30:	call   0x10003340
10030e35:	push   0x10070cc0
10030e3a:	push   0xa
10030e3c:	push   0x10070cb4
10030e41:	mov    ds:0x1008b454,eax
10030e46:	mov    DWORD PTR ds:0x1008b458,0xa
10030e50:	call   0x10003340
10030e55:	add    esp,0x48
10030e58:	push   0x10070c88
10030e5d:	push   ebp
10030e5e:	push   0x10070c7c
10030e63:	mov    ds:0x1008b45c,eax
10030e68:	mov    DWORD PTR ds:0x1008b460,ebp
10030e6e:	call   0x10003340
10030e73:	push   0x10070c50
10030e78:	push   ebp
10030e79:	push   0x10070c44
10030e7e:	mov    ds:0x1008b464,eax
10030e83:	mov    DWORD PTR ds:0x1008b468,ebp
10030e89:	call   0x10003340
10030e8e:	push   0x10070c0c
10030e93:	push   ebp
10030e94:	push   0x10070c00
10030e99:	mov    ds:0x1008b46c,eax
10030e9e:	mov    DWORD PTR ds:0x1008b470,ebp
10030ea4:	call   0x10003340
10030ea9:	push   0x10070bd8
10030eae:	push   ebp
10030eaf:	push   0x10070bcc
10030eb4:	mov    ds:0x1008b474,eax
10030eb9:	mov    DWORD PTR ds:0x1008b478,ebp
10030ebf:	call   0x10003340
10030ec4:	push   0x10070ba4
10030ec9:	push   edi
10030eca:	push   0x10070b9c
10030ecf:	mov    ds:0x1008b47c,eax
10030ed4:	mov    DWORD PTR ds:0x1008b480,edi
10030eda:	call   0x10003340
10030edf:	push   0x10070b78
10030ee4:	push   edi
10030ee5:	push   0x10070b70
10030eea:	mov    ds:0x1008b484,eax
10030eef:	mov    DWORD PTR ds:0x1008b488,edi
10030ef5:	call   0x10003340
10030efa:	add    esp,0x48
10030efd:	push   0x10070b38
10030f02:	push   edi
10030f03:	push   0x10070b30
10030f08:	mov    ds:0x1008b48c,eax
10030f0d:	mov    DWORD PTR ds:0x1008b490,edi
10030f13:	call   0x10003340
10030f18:	push   0x10070af4
10030f1d:	push   0xa
10030f1f:	push   0x10070ae8
10030f24:	mov    ds:0x1008b494,eax
10030f29:	mov    DWORD PTR ds:0x1008b498,0xa
10030f33:	call   0x10003340
10030f38:	push   0x10070ab4
10030f3d:	push   ebp
10030f3e:	push   0x10070aa8
10030f43:	mov    ds:0x1008b49c,eax
10030f48:	mov    DWORD PTR ds:0x1008b4a0,ebp
10030f4e:	call   0x10003340
10030f53:	mov    ds:0x1008b4a4,eax
10030f58:	mov    DWORD PTR ds:0x1008b4a8,ebp
10030f5e:	push   0x10070a84
10030f63:	push   ebp
10030f64:	push   0x10070a78
10030f69:	call   0x10003340
10030f6e:	push   0x10070a3c
10030f73:	push   ebp
10030f74:	push   0x10070a30
10030f79:	mov    ds:0x1008b4ac,eax
10030f7e:	mov    DWORD PTR ds:0x1008b4b0,ebp
10030f84:	call   0x10003340
10030f89:	push   0x10070a08
10030f8e:	push   ebp
10030f8f:	push   0x100709fc
10030f94:	mov    ds:0x1008b4b4,eax
10030f99:	mov    DWORD PTR ds:0x1008b4b8,ebp
10030f9f:	call   0x10003340
10030fa4:	add    esp,0x48
10030fa7:	push   0x100709c8
10030fac:	push   ebp
10030fad:	push   0x100709bc
10030fb2:	mov    ds:0x1008b4bc,eax
10030fb7:	mov    DWORD PTR ds:0x1008b4c0,ebp
10030fbd:	call   0x10003340
10030fc2:	push   0x10070984
10030fc7:	push   ebp
10030fc8:	push   0x10070978
10030fcd:	mov    ds:0x1008b4c4,eax
10030fd2:	mov    DWORD PTR ds:0x1008b4c8,ebp
10030fd8:	call   0x10003340
10030fdd:	push   0x10070938
10030fe2:	push   ebp
10030fe3:	push   0x1007092c
10030fe8:	mov    ds:0x1008b4cc,eax
10030fed:	mov    DWORD PTR ds:0x1008b4d0,ebp
10030ff3:	call   0x10003340
10030ff8:	push   0x100708f8
10030ffd:	push   0xb
10030fff:	push   0x100708ec
10031004:	mov    ds:0x1008b4d4,eax
10031009:	mov    DWORD PTR ds:0x1008b4d8,0xb
10031013:	call   0x10003340
10031018:	push   0x100708c8
1003101d:	push   0x9
1003101f:	push   0x100708bc
10031024:	mov    ds:0x1008b4dc,eax
10031029:	mov    DWORD PTR ds:0x1008b4e0,0x9
10031033:	call   0x10003340
10031038:	push   0x1007087c
1003103d:	push   0x9
1003103f:	push   0x10070870
10031044:	mov    ds:0x1008b4e4,eax
10031049:	mov    DWORD PTR ds:0x1008b4e8,0x9
10031053:	call   0x10003340
10031058:	add    esp,0x48
1003105b:	push   0x1007083c
10031060:	push   0x9
10031062:	push   0x10070830
10031067:	mov    ds:0x1008b4ec,eax
1003106c:	mov    DWORD PTR ds:0x1008b4f0,0x9
10031076:	call   0x10003340
1003107b:	push   0x100707f8
10031080:	push   0x9
10031082:	push   0x100707ec
10031087:	mov    ds:0x1008b4f4,eax
1003108c:	mov    DWORD PTR ds:0x1008b4f8,0x9
10031096:	call   0x10003340
1003109b:	push   0x100707c4
100310a0:	push   ebp
100310a1:	push   0x100707b8
100310a6:	mov    ds:0x1008b4fc,eax
100310ab:	mov    DWORD PTR ds:0x1008b500,ebp
100310b1:	call   0x10003340
100310b6:	push   0x10070788
100310bb:	push   ebp
100310bc:	push   0x1007077c
100310c1:	mov    ds:0x1008b504,eax
100310c6:	mov    DWORD PTR ds:0x1008b508,ebp
100310cc:	call   0x10003340
100310d1:	mov    ds:0x1008b50c,eax
100310d6:	mov    DWORD PTR ds:0x1008b510,ebp
100310dc:	push   0x1007074c
100310e1:	push   ebp
100310e2:	push   0x10070740
100310e7:	call   0x10003340
100310ec:	push   0x10070708
100310f1:	push   0xb
100310f3:	push   0x100706fc
100310f8:	mov    ds:0x1008b514,eax
100310fd:	mov    DWORD PTR ds:0x1008b518,0xb
10031107:	call   0x10003340
1003110c:	add    esp,0x48
1003110f:	push   0x100706c0
10031114:	push   0x9
10031116:	push   0x100706b4
1003111b:	mov    ds:0x1008b51c,eax
10031120:	mov    DWORD PTR ds:0x1008b520,0x9
1003112a:	call   0x10003340
1003112f:	push   0x10070684
10031134:	push   0x9
10031136:	push   0x10070678
1003113b:	mov    ds:0x1008b524,eax
10031140:	mov    DWORD PTR ds:0x1008b528,0x9
1003114a:	call   0x10003340
1003114f:	push   0x10070644
10031154:	push   0x9
10031156:	push   0x10070638
1003115b:	mov    ds:0x1008b52c,eax
10031160:	mov    DWORD PTR ds:0x1008b530,0x9
1003116a:	call   0x10003340
1003116f:	push   0x10070608
10031174:	push   0x9
10031176:	push   0x100705fc
1003117b:	mov    ds:0x1008b534,eax
10031180:	mov    DWORD PTR ds:0x1008b538,0x9
1003118a:	call   0x10003340
1003118f:	push   0x100705cc
10031194:	push   ebp
10031195:	push   0x100705c0
1003119a:	mov    ds:0x1008b53c,eax
1003119f:	mov    DWORD PTR ds:0x1008b540,ebp
100311a5:	call   0x10003340
100311aa:	push   0x10070594
100311af:	push   ebp
100311b0:	push   0x10070588
100311b5:	mov    ds:0x1008b544,eax
100311ba:	mov    DWORD PTR ds:0x1008b548,ebp
100311c0:	call   0x10003340
100311c5:	add    esp,0x48
100311c8:	push   0x1007054c
100311cd:	push   ebp
100311ce:	push   0x10070540
100311d3:	mov    ds:0x1008b54c,eax
100311d8:	mov    DWORD PTR ds:0x1008b550,ebp
100311de:	call   0x10003340
100311e3:	push   0x1007050c
100311e8:	push   0xb
100311ea:	push   0x10070500
100311ef:	mov    ds:0x1008b554,eax
100311f4:	mov    DWORD PTR ds:0x1008b558,0xb
100311fe:	call   0x10003340
10031203:	push   0x100704c4
10031208:	push   0x9
1003120a:	push   0x100704b8
1003120f:	mov    ds:0x1008b55c,eax
10031214:	mov    DWORD PTR ds:0x1008b560,0x9
1003121e:	call   0x10003340
10031223:	push   0x10070478
10031228:	push   0x9
1003122a:	push   0x1007046c
1003122f:	mov    ds:0x1008b564,eax
10031234:	mov    DWORD PTR ds:0x1008b568,0x9
1003123e:	call   0x10003340
10031243:	push   0x10070430
10031248:	push   0x9
1003124a:	push   0x10070424
1003124f:	mov    ds:0x1008b56c,eax
10031254:	mov    DWORD PTR ds:0x1008b570,0x9
1003125e:	call   0x10003340
10031263:	push   0x100703ec
10031268:	mov    ds:0x1008b574,eax
1003126d:	mov    DWORD PTR ds:0x1008b578,0x9
10031277:	push   0x9
10031279:	push   0x100703e0
1003127e:	call   0x10003340
10031283:	add    esp,0x48
10031286:	push   0x100703b8
1003128b:	push   ebp
1003128c:	push   0x100703ac
10031291:	mov    ds:0x1008b57c,eax
10031296:	mov    DWORD PTR ds:0x1008b580,ebp
1003129c:	call   0x10003340
100312a1:	push   0x10070374
100312a6:	push   ebp
100312a7:	push   0x10070368
100312ac:	mov    ds:0x1008b584,eax
100312b1:	mov    DWORD PTR ds:0x1008b588,ebp
100312b7:	call   0x10003340
100312bc:	push   0x10070338
100312c1:	push   ebp
100312c2:	push   0x1007032c
100312c7:	mov    ds:0x1008b58c,eax
100312cc:	mov    DWORD PTR ds:0x1008b590,ebp
100312d2:	call   0x10003340
100312d7:	push   0x10070300
100312dc:	push   0xb
100312de:	push   0x100702f4
100312e3:	mov    ds:0x1008b594,eax
100312e8:	mov    DWORD PTR ds:0x1008b598,0xb
100312f2:	call   0x10003340
100312f7:	push   0x100702bc
100312fc:	push   0x9
100312fe:	push   0x100702b0
10031303:	mov    ds:0x1008b59c,eax
10031308:	mov    DWORD PTR ds:0x1008b5a0,0x9
10031312:	call   0x10003340
10031317:	push   0x10070270
1003131c:	push   0x9
1003131e:	push   0x10070264
10031323:	mov    ds:0x1008b5a4,eax
10031328:	mov    DWORD PTR ds:0x1008b5a8,0x9
10031332:	call   0x10003340
10031337:	add    esp,0x48
1003133a:	push   0x1007022c
1003133f:	push   0x9
10031341:	push   0x10070220
10031346:	mov    ds:0x1008b5ac,eax
1003134b:	mov    DWORD PTR ds:0x1008b5b0,0x9
10031355:	call   0x10003340
1003135a:	push   0x100701fc
1003135f:	push   0x9
10031361:	push   0x100701f0
10031366:	mov    ds:0x1008b5b4,eax
1003136b:	mov    DWORD PTR ds:0x1008b5b8,0x9
10031375:	call   0x10003340
1003137a:	push   0x100701b4
1003137f:	push   esi
10031380:	push   0x100701ac
10031385:	mov    ds:0x1008b5bc,eax
1003138a:	mov    DWORD PTR ds:0x1008b5c0,esi
10031390:	call   0x10003340
10031395:	push   0x10070178
1003139a:	push   edi
1003139b:	push   0x10070170
100313a0:	mov    ds:0x1008b5c4,eax
100313a5:	mov    DWORD PTR ds:0x1008b5c8,edi
100313ab:	call   0x10003340
100313b0:	push   0x10070138
100313b5:	push   esi
100313b6:	push   0x10070130
100313bb:	mov    ds:0x1008b5cc,eax
100313c0:	mov    DWORD PTR ds:0x1008b5d0,esi
100313c6:	call   0x10003340
100313cb:	push   0x10070104
100313d0:	push   esi
100313d1:	push   0x100700fc
100313d6:	mov    ds:0x1008b5d4,eax
100313db:	mov    DWORD PTR ds:0x1008b5d8,esi
100313e1:	call   0x10003340
100313e6:	add    esp,0x48
100313e9:	push   0x100700d0
100313ee:	mov    ds:0x1008b5dc,eax
100313f3:	mov    DWORD PTR ds:0x1008b5e0,edi
100313f9:	push   edi
100313fa:	push   0x100700c8
100313ff:	call   0x10003340
10031404:	push   0x100700a0
10031409:	push   edi
1003140a:	push   0x10070098
1003140f:	mov    ds:0x1008b5e4,eax
10031414:	mov    DWORD PTR ds:0x1008b5e8,edi
1003141a:	call   0x10003340
1003141f:	push   0x10070070
10031424:	push   0x9
10031426:	push   0x10070064
1003142b:	mov    ds:0x1008b5ec,eax
10031430:	mov    DWORD PTR ds:0x1008b5f0,0x9
1003143a:	call   0x10003340
1003143f:	push   0x10070030
10031444:	push   0xa
10031446:	push   0x10070024
1003144b:	mov    ds:0x1008b5f4,eax
10031450:	mov    DWORD PTR ds:0x1008b5f8,0xa
1003145a:	call   0x10003340
1003145f:	push   0x1006fff8
10031464:	push   edi
10031465:	push   0x1006fff0
1003146a:	mov    ds:0x1008b5fc,eax
1003146f:	mov    DWORD PTR ds:0x1008b600,edi
10031475:	call   0x10003340
1003147a:	push   0x1006ffb0
1003147f:	push   edi
10031480:	push   0x1006ffa8
10031485:	mov    ds:0x1008b604,eax
1003148a:	mov    DWORD PTR ds:0x1008b608,edi
10031490:	call   0x10003340
10031495:	add    esp,0x48
10031498:	push   0x1006ff68
1003149d:	push   edi
1003149e:	push   0x1006ff60
100314a3:	mov    ds:0x1008b60c,eax
100314a8:	mov    DWORD PTR ds:0x1008b610,edi
100314ae:	call   0x10003340
100314b3:	push   0x1006ff34
100314b8:	push   ebx
100314b9:	push   0x1006ff2c
100314be:	mov    ds:0x1008b614,eax
100314c3:	mov    DWORD PTR ds:0x1008b618,ebx
100314c9:	call   0x10003340
100314ce:	push   0x1006feec
100314d3:	push   ebp
100314d4:	push   0x1006fee0
100314d9:	mov    ds:0x1008b61c,eax
100314de:	mov    DWORD PTR ds:0x1008b620,ebp
100314e4:	call   0x10003340
100314e9:	push   0x1006feb0
100314ee:	push   ebp
100314ef:	push   0x1006fea4
100314f4:	mov    ds:0x1008b624,eax
100314f9:	mov    DWORD PTR ds:0x1008b628,ebp
100314ff:	call   0x10003340
10031504:	push   0x1006fe74
10031509:	push   0x9
1003150b:	push   0x1006fe68
10031510:	mov    ds:0x1008b62c,eax
10031515:	mov    DWORD PTR ds:0x1008b630,0x9
1003151f:	call   0x10003340
10031524:	push   0x1006fe40
10031529:	push   0x9
1003152b:	push   0x1006fe34
10031530:	mov    ds:0x1008b634,eax
10031535:	mov    DWORD PTR ds:0x1008b638,0x9
1003153f:	call   0x10003340
10031544:	add    esp,0x48
10031547:	push   0x1006fe08
1003154c:	push   ebx
1003154d:	push   0x1006fe00
10031552:	mov    ds:0x1008b63c,eax
10031557:	mov    DWORD PTR ds:0x1008b640,ebx
1003155d:	call   0x10003340
10031562:	push   0x1006fdc0
10031567:	push   esi
10031568:	mov    ds:0x1008b644,eax
1003156d:	mov    DWORD PTR ds:0x1008b648,esi
10031573:	push   0x1006fdb8
10031578:	call   0x10003340
1003157d:	push   0x1006fd7c
10031582:	push   esi
10031583:	push   0x1006fd74
10031588:	mov    ds:0x1008b64c,eax
1003158d:	mov    DWORD PTR ds:0x1008b650,esi
10031593:	call   0x10003340
10031598:	push   0x1006fd34
1003159d:	push   edi
1003159e:	push   0x1006fd2c
100315a3:	mov    ds:0x1008b654,eax
100315a8:	mov    DWORD PTR ds:0x1008b658,edi
100315ae:	call   0x10003340
100315b3:	push   0x1006fcf0
100315b8:	push   edi
100315b9:	push   0x1006fce8
100315be:	mov    ds:0x1008b65c,eax
100315c3:	mov    DWORD PTR ds:0x1008b660,edi
100315c9:	call   0x10003340
100315ce:	push   0x1006fcc4
100315d3:	push   edi
100315d4:	push   0x1006fcbc
100315d9:	mov    ds:0x1008b664,eax
100315de:	mov    DWORD PTR ds:0x1008b668,edi
100315e4:	call   0x10003340
100315e9:	add    esp,0x48
100315ec:	push   0x1006fc84
100315f1:	push   ebp
100315f2:	push   0x1006fc78
100315f7:	mov    ds:0x1008b66c,eax
100315fc:	mov    DWORD PTR ds:0x1008b670,ebp
10031602:	call   0x10003340
10031607:	push   0x1006fc48
1003160c:	push   0x9
1003160e:	push   0x1006fc3c
10031613:	mov    ds:0x1008b674,eax
10031618:	mov    DWORD PTR ds:0x1008b678,0x9
10031622:	call   0x10003340
10031627:	push   0x1006fc14
1003162c:	push   edi
1003162d:	push   0x1006fc0c
10031632:	mov    ds:0x1008b67c,eax
10031637:	mov    DWORD PTR ds:0x1008b680,edi
1003163d:	call   0x10003340
10031642:	push   0x1006fbe0
10031647:	push   ebp
10031648:	push   0x1006fbd4
1003164d:	mov    ds:0x1008b684,eax
10031652:	mov    DWORD PTR ds:0x1008b688,ebp
10031658:	call   0x10003340
1003165d:	push   0x1006fb9c
10031662:	push   edi
10031663:	push   0x1006fb94
10031668:	mov    ds:0x1008b68c,eax
1003166d:	mov    DWORD PTR ds:0x1008b690,edi
10031673:	call   0x10003340
10031678:	push   0x1006fb70
1003167d:	push   ebp
1003167e:	push   0x1006fb64
10031683:	mov    ds:0x1008b694,eax
10031688:	mov    DWORD PTR ds:0x1008b698,ebp
1003168e:	call   0x10003340
10031693:	add    esp,0x48
10031696:	push   0x1006fb40
1003169b:	push   esi
1003169c:	push   0x1006fb38
100316a1:	mov    ds:0x1008b69c,eax
100316a6:	mov    DWORD PTR ds:0x1008b6a0,esi
100316ac:	call   0x10003340
100316b1:	push   0x1006fb0c
100316b6:	push   edi
100316b7:	push   0x1006fb04
100316bc:	mov    ds:0x1008b6a4,eax
100316c1:	mov    DWORD PTR ds:0x1008b6a8,edi
100316c7:	call   0x10003340
100316cc:	push   0x1006fac8
100316d1:	push   0x4
100316d3:	push   0x1006fac0
100316d8:	mov    ds:0x1008b6ac,eax
100316dd:	mov    DWORD PTR ds:0x1008b6b0,0x4
100316e7:	call   0x10003340
100316ec:	push   0x1006fa94
100316f1:	push   ebx
100316f2:	push   0x1006fa8c
100316f7:	mov    ds:0x1008b6b4,eax
100316fc:	mov    DWORD PTR ds:0x1008b6b8,ebx
10031702:	call   0x10003340
10031707:	push   0x1006fa60
1003170c:	push   edi
1003170d:	push   0x1006fa58
10031712:	mov    ds:0x1008b6bc,eax
10031717:	mov    DWORD PTR ds:0x1008b6c0,edi
1003171d:	call   0x10003340
10031722:	push   0x1006fa1c
10031727:	push   ebp
10031728:	push   0x1006fa10
1003172d:	mov    ds:0x1008b6c4,eax
10031732:	mov    DWORD PTR ds:0x1008b6c8,ebp
10031738:	call   0x10003340
1003173d:	add    esp,0x48
10031740:	push   0x1006f9dc
10031745:	push   edi
10031746:	push   0x1006f9d4
1003174b:	mov    ds:0x1008b6cc,eax
10031750:	mov    DWORD PTR ds:0x1008b6d0,edi
10031756:	call   0x10003340
1003175b:	push   0x1006f99c
10031760:	push   esi
10031761:	push   0x1006f994
10031766:	mov    ds:0x1008b6d4,eax
1003176b:	mov    DWORD PTR ds:0x1008b6d8,esi
10031771:	call   0x10003340
10031776:	push   0x1006f96c
1003177b:	push   edi
1003177c:	push   0x1006f964
10031781:	mov    ds:0x1008b6dc,eax
10031786:	mov    DWORD PTR ds:0x1008b6e0,edi
1003178c:	call   0x10003340
10031791:	push   0x1006f934
10031796:	push   ebx
10031797:	push   0x1006f92c
1003179c:	mov    ds:0x1008b6e4,eax
100317a1:	mov    DWORD PTR ds:0x1008b6e8,ebx
100317a7:	call   0x10003340
100317ac:	push   0x1006f908
100317b1:	push   esi
100317b2:	push   0x1006f900
100317b7:	mov    ds:0x1008b6ec,eax
100317bc:	mov    DWORD PTR ds:0x1008b6f0,esi
100317c2:	call   0x10003340
100317c7:	push   0x1006f8c4
100317cc:	push   ebx
100317cd:	push   0x1006f8bc
100317d2:	mov    ds:0x1008b6f4,eax
100317d7:	mov    DWORD PTR ds:0x1008b6f8,ebx
100317dd:	call   0x10003340
100317e2:	add    esp,0x48
100317e5:	push   0x1006f894
100317ea:	push   esi
100317eb:	push   0x1006f88c
100317f0:	mov    ds:0x1008b6fc,eax
100317f5:	mov    DWORD PTR ds:0x1008b700,esi
100317fb:	call   0x10003340
10031800:	push   0x1006f858
10031805:	push   ebx
10031806:	push   0x1006f850
1003180b:	mov    ds:0x1008b704,eax
10031810:	mov    DWORD PTR ds:0x1008b708,ebx
10031816:	call   0x10003340
1003181b:	push   0x1006f828
10031820:	push   esi
10031821:	push   0x1006f820
10031826:	mov    ds:0x1008b70c,eax
1003182b:	mov    DWORD PTR ds:0x1008b710,esi
10031831:	call   0x10003340
10031836:	push   0x1006f7e4
1003183b:	push   edi
1003183c:	push   0x1006f7dc
10031841:	mov    ds:0x1008b714,eax
10031846:	mov    DWORD PTR ds:0x1008b718,edi
1003184c:	call   0x10003340
10031851:	mov    ds:0x1008b71c,eax
10031856:	push   0x1006f79c
1003185b:	push   ebp
1003185c:	push   0x1006f790
10031861:	mov    DWORD PTR ds:0x1008b720,ebp
10031867:	call   0x10003340
1003186c:	push   0x1006f754
10031871:	push   esi
10031872:	push   0x1006f74c
10031877:	mov    ds:0x1008b724,eax
1003187c:	mov    DWORD PTR ds:0x1008b728,esi
10031882:	call   0x10003340
10031887:	add    esp,0x48
1003188a:	push   0x1006f720
1003188f:	push   edi
10031890:	push   0x1006f718
10031895:	mov    ds:0x1008b72c,eax
1003189a:	mov    DWORD PTR ds:0x1008b730,edi
100318a0:	call   0x10003340
100318a5:	push   0x1006f6f0
100318aa:	push   0x9
100318ac:	push   0x1006f6e4
100318b1:	mov    ds:0x1008b734,eax
100318b6:	mov    DWORD PTR ds:0x1008b738,0x9
100318c0:	call   0x10003340
100318c5:	push   0x1006f6a8
100318ca:	push   ebp
100318cb:	push   0x1006f69c
100318d0:	mov    ds:0x1008b73c,eax
100318d5:	mov    DWORD PTR ds:0x1008b740,ebp
100318db:	call   0x10003340
100318e0:	push   0x1006f660
100318e5:	push   ebp
100318e6:	push   0x1006f654
100318eb:	mov    ds:0x1008b744,eax
100318f0:	mov    DWORD PTR ds:0x1008b748,ebp
100318f6:	call   0x10003340
100318fb:	push   0x1006f618
10031900:	push   0xa
10031902:	push   0x1006f60c
10031907:	mov    ds:0x1008b74c,eax
1003190c:	mov    DWORD PTR ds:0x1008b750,0xa
10031916:	call   0x10003340
1003191b:	push   0x1006f5d4
10031920:	push   0x9
10031922:	push   0x1006f5c8
10031927:	mov    ds:0x1008b754,eax
1003192c:	mov    DWORD PTR ds:0x1008b758,0x9
10031936:	call   0x10003340
1003193b:	add    esp,0x48
1003193e:	push   0x1006f588
10031943:	push   0x9
10031945:	push   0x1006f57c
1003194a:	mov    ds:0x1008b75c,eax
1003194f:	mov    DWORD PTR ds:0x1008b760,0x9
10031959:	call   0x10003340
1003195e:	push   0x1006f548
10031963:	push   esi
10031964:	push   0x1006f540
10031969:	mov    ds:0x1008b764,eax
1003196e:	mov    DWORD PTR ds:0x1008b768,esi
10031974:	call   0x10003340
10031979:	push   0x1006f508
1003197e:	push   edi
1003197f:	push   0x1006f500
10031984:	mov    ds:0x1008b76c,eax
10031989:	mov    DWORD PTR ds:0x1008b770,edi
1003198f:	call   0x10003340
10031994:	push   0x1006f4cc
10031999:	push   ebp
1003199a:	push   0x1006f4c0
1003199f:	mov    ds:0x1008b774,eax
100319a4:	mov    DWORD PTR ds:0x1008b778,ebp
100319aa:	call   0x10003340
100319af:	push   0x1006f49c
100319b4:	push   esi
100319b5:	push   0x1006f494
100319ba:	mov    ds:0x1008b77c,eax
100319bf:	mov    DWORD PTR ds:0x1008b780,esi
100319c5:	call   0x10003340
100319ca:	mov    ds:0x1008b784,eax
100319cf:	mov    DWORD PTR ds:0x1008b788,edi
100319d5:	push   0x1006f45c
100319da:	push   edi
100319db:	push   0x1006f454
100319e0:	call   0x10003340
100319e5:	add    esp,0x48
100319e8:	push   0x1006f418
100319ed:	push   esi
100319ee:	push   0x1006f410
100319f3:	mov    ds:0x1008b78c,eax
100319f8:	mov    DWORD PTR ds:0x1008b790,esi
100319fe:	call   0x10003340
10031a03:	push   0x1006f3e4
10031a08:	push   edi
10031a09:	push   0x1006f3dc
10031a0e:	mov    ds:0x1008b794,eax
10031a13:	mov    DWORD PTR ds:0x1008b798,edi
10031a19:	call   0x10003340
10031a1e:	push   0x1006f3ac
10031a23:	push   esi
10031a24:	push   0x1006f3a4
10031a29:	mov    ds:0x1008b79c,eax
10031a2e:	mov    DWORD PTR ds:0x1008b7a0,esi
10031a34:	call   0x10003340
10031a39:	push   0x1006f378
10031a3e:	push   edi
10031a3f:	push   0x1006f370
10031a44:	mov    ds:0x1008b7a4,eax
10031a49:	mov    DWORD PTR ds:0x1008b7a8,edi
10031a4f:	call   0x10003340
10031a54:	push   0x1006f344
10031a59:	push   0x3
10031a5b:	push   0x1006f340
10031a60:	mov    ds:0x1008b7ac,eax
10031a65:	mov    DWORD PTR ds:0x1008b7b0,0x3
10031a6f:	call   0x10003340
10031a74:	push   0x1006f304
10031a79:	push   0x4
10031a7b:	push   0x1006f2fc
10031a80:	mov    ds:0x1008b7b4,eax
10031a85:	mov    DWORD PTR ds:0x1008b7b8,0x4
10031a8f:	call   0x10003340
10031a94:	add    esp,0x48
10031a97:	push   0x1006f2d8
10031a9c:	push   esi
10031a9d:	push   0x1006f2d0
10031aa2:	mov    ds:0x1008b7bc,eax
10031aa7:	mov    DWORD PTR ds:0x1008b7c0,esi
10031aad:	call   0x10003340
10031ab2:	push   0x1006f2a8
10031ab7:	push   edi
10031ab8:	push   0x1006f2a0
10031abd:	mov    ds:0x1008b7c4,eax
10031ac2:	mov    DWORD PTR ds:0x1008b7c8,edi
10031ac8:	call   0x10003340
10031acd:	push   0x1006f278
10031ad2:	push   esi
10031ad3:	push   0x1006f270
10031ad8:	mov    ds:0x1008b7cc,eax
10031add:	mov    DWORD PTR ds:0x1008b7d0,esi
10031ae3:	call   0x10003340
10031ae8:	push   0x1006f244
10031aed:	push   edi
10031aee:	push   0x1006f23c
10031af3:	mov    ds:0x1008b7d4,eax
10031af8:	mov    DWORD PTR ds:0x1008b7d8,edi
10031afe:	call   0x10003340
10031b03:	push   0x1006f20c
10031b08:	push   esi
10031b09:	push   0x1006f204
10031b0e:	mov    ds:0x1008b7dc,eax
10031b13:	mov    DWORD PTR ds:0x1008b7e0,esi
10031b19:	call   0x10003340
10031b1e:	push   0x1006f1e0
10031b23:	push   edi
10031b24:	push   0x1006f1d8
10031b29:	mov    ds:0x1008b7e4,eax
10031b2e:	mov    DWORD PTR ds:0x1008b7e8,edi
10031b34:	call   0x10003340
10031b39:	add    esp,0x48
10031b3c:	mov    ds:0x1008b7ec,eax
10031b41:	mov    DWORD PTR ds:0x1008b7f0,0x4
10031b4b:	push   0x1006f1a0
10031b50:	push   0x4
10031b52:	push   0x1006f198
10031b57:	call   0x10003340
10031b5c:	push   0x1006f16c
10031b61:	push   ebx
10031b62:	push   0x1006f164
10031b67:	mov    ds:0x1008b7f4,eax
10031b6c:	mov    DWORD PTR ds:0x1008b7f8,ebx
10031b72:	call   0x10003340
10031b77:	push   0x1006f130
10031b7c:	push   ebx
10031b7d:	push   0x1006f128
10031b82:	mov    ds:0x1008b7fc,eax
10031b87:	mov    DWORD PTR ds:0x1008b800,ebx
10031b8d:	call   0x10003340
10031b92:	push   0x1006f0f0
10031b97:	push   esi
10031b98:	push   0x1006f0e8
10031b9d:	mov    ds:0x1008b804,eax
10031ba2:	mov    DWORD PTR ds:0x1008b808,esi
10031ba8:	call   0x10003340
10031bad:	push   0x1006f0c0
10031bb2:	push   edi
10031bb3:	push   0x1006f0b8
10031bb8:	mov    ds:0x1008b80c,eax
10031bbd:	mov    DWORD PTR ds:0x1008b810,edi
10031bc3:	call   0x10003340
10031bc8:	push   0x1006f08c
10031bcd:	push   ebp
10031bce:	push   0x1006f080
10031bd3:	mov    ds:0x1008b814,eax
10031bd8:	mov    DWORD PTR ds:0x1008b818,ebp
10031bde:	call   0x10003340
10031be3:	add    esp,0x48
10031be6:	push   0x1006f050
10031beb:	push   edi
10031bec:	push   0x1006f048
10031bf1:	mov    ds:0x1008b81c,eax
10031bf6:	mov    DWORD PTR ds:0x1008b820,edi
10031bfc:	call   0x10003340
10031c01:	push   0x1006f024
10031c06:	push   ebp
10031c07:	push   0x1006f018
10031c0c:	mov    ds:0x1008b824,eax
10031c11:	mov    DWORD PTR ds:0x1008b828,ebp
10031c17:	call   0x10003340
10031c1c:	push   0x1006efd8
10031c21:	push   esi
10031c22:	push   0x1006efcc
10031c27:	mov    ds:0x1008b82c,eax
10031c2c:	mov    DWORD PTR ds:0x1008b830,esi
10031c32:	call   0x10003340
10031c37:	push   0x1006efa0
10031c3c:	push   edi
10031c3d:	push   0x1006ef98
10031c42:	mov    ds:0x1008b834,eax
10031c47:	mov    DWORD PTR ds:0x1008b838,edi
10031c4d:	call   0x10003340
10031c52:	push   0x1006ef74
10031c57:	push   ebp
10031c58:	push   0x1006ef68
10031c5d:	mov    ds:0x1008b83c,eax
10031c62:	mov    DWORD PTR ds:0x1008b840,ebp
10031c68:	call   0x10003340
10031c6d:	push   0x1006ef34
10031c72:	push   0xa
10031c74:	push   0x1006ef28
10031c79:	mov    ds:0x1008b844,eax
10031c7e:	mov    DWORD PTR ds:0x1008b848,0xa
10031c88:	call   0x10003340
10031c8d:	add    esp,0x48
10031c90:	push   0x1006eef8
10031c95:	push   0xb
10031c97:	push   0x1006eeec
10031c9c:	mov    ds:0x1008b84c,eax
10031ca1:	mov    DWORD PTR ds:0x1008b850,0xb
10031cab:	call   0x10003340
10031cb0:	mov    ds:0x1008b854,eax
10031cb5:	mov    DWORD PTR ds:0x1008b858,ebx
10031cbb:	push   0x1006eeb4
10031cc0:	push   ebx
10031cc1:	push   0x1006eeac
10031cc6:	call   0x10003340
10031ccb:	push   0x1006ee84
10031cd0:	push   esi
10031cd1:	push   0x1006ee7c
10031cd6:	mov    ds:0x1008b85c,eax
10031cdb:	mov    DWORD PTR ds:0x1008b860,esi
10031ce1:	call   0x10003340
10031ce6:	push   0x1006ee58
10031ceb:	push   ebx
10031cec:	push   0x1006ee50
10031cf1:	mov    ds:0x1008b864,eax
10031cf6:	mov    DWORD PTR ds:0x1008b868,ebx
10031cfc:	call   0x10003340
10031d01:	push   0x1006ee18
10031d06:	push   esi
10031d07:	push   0x1006ee10
10031d0c:	mov    ds:0x1008b86c,eax
10031d11:	mov    DWORD PTR ds:0x1008b870,esi
10031d17:	call   0x10003340
10031d1c:	push   0x1006ede0
10031d21:	push   ebx
10031d22:	push   0x1006edd8
10031d27:	mov    ds:0x1008b874,eax
10031d2c:	mov    DWORD PTR ds:0x1008b878,ebx
10031d32:	call   0x10003340
10031d37:	add    esp,0x48
10031d3a:	push   0x1006ed9c
10031d3f:	push   esi
10031d40:	push   0x1006ed94
10031d45:	mov    ds:0x1008b87c,eax
10031d4a:	mov    DWORD PTR ds:0x1008b880,esi
10031d50:	call   0x10003340
10031d55:	push   0x1006ed68
10031d5a:	push   ebx
10031d5b:	push   0x1006ed60
10031d60:	mov    ds:0x1008b884,eax
10031d65:	mov    DWORD PTR ds:0x1008b888,ebx
10031d6b:	call   0x10003340
10031d70:	push   0x1006ed20
10031d75:	push   esi
10031d76:	push   0x1006ed18
10031d7b:	mov    ds:0x1008b88c,eax
10031d80:	mov    DWORD PTR ds:0x1008b890,esi
10031d86:	call   0x10003340
10031d8b:	push   0x1006ecd8
10031d90:	push   ebx
10031d91:	push   0x1006ecd0
10031d96:	mov    ds:0x1008b894,eax
10031d9b:	mov    DWORD PTR ds:0x1008b898,ebx
10031da1:	call   0x10003340
10031da6:	push   0x1006ec9c
10031dab:	push   esi
10031dac:	push   0x1006ec94
10031db1:	mov    ds:0x1008b89c,eax
10031db6:	mov    DWORD PTR ds:0x1008b8a0,esi
10031dbc:	call   0x10003340
10031dc1:	push   0x1006ec6c
10031dc6:	push   ebx
10031dc7:	push   0x1006ec64
10031dcc:	mov    ds:0x1008b8a4,eax
10031dd1:	mov    DWORD PTR ds:0x1008b8a8,ebx
10031dd7:	call   0x10003340
10031ddc:	add    esp,0x48
10031ddf:	push   0x1006ec28
10031de4:	push   esi
10031de5:	push   0x1006ec20
10031dea:	mov    ds:0x1008b8ac,eax
10031def:	mov    DWORD PTR ds:0x1008b8b0,esi
10031df5:	call   0x10003340
10031dfa:	push   0x1006ebec
10031dff:	push   ebx
10031e00:	push   0x1006ebe4
10031e05:	mov    ds:0x1008b8b4,eax
10031e0a:	mov    DWORD PTR ds:0x1008b8b8,ebx
10031e10:	call   0x10003340
10031e15:	push   0x1006ebb8
10031e1a:	mov    ds:0x1008b8bc,eax
10031e1f:	mov    DWORD PTR ds:0x1008b8c0,esi
10031e25:	push   esi
10031e26:	push   0x1006ebb0
10031e2b:	call   0x10003340
10031e30:	push   0x1006eb78
10031e35:	push   0x3
10031e37:	push   0x1006eb74
10031e3c:	mov    ds:0x1008b8c4,eax
10031e41:	mov    DWORD PTR ds:0x1008b8c8,0x3
10031e4b:	call   0x10003340
10031e50:	push   0x1006eb38
10031e55:	push   0x3
10031e57:	push   0x1006eb34
10031e5c:	mov    ds:0x1008b8cc,eax
10031e61:	mov    DWORD PTR ds:0x1008b8d0,0x3
10031e6b:	call   0x10003340
10031e70:	push   0x1006eaf4
10031e75:	push   0x3
10031e77:	push   0x1006eaf0
10031e7c:	mov    ds:0x1008b8d4,eax
10031e81:	mov    DWORD PTR ds:0x1008b8d8,0x3
10031e8b:	call   0x10003340
10031e90:	add    esp,0x48
10031e93:	push   0x1006eab8
10031e98:	push   0x3
10031e9a:	push   0x1006eab4
10031e9f:	mov    ds:0x1008b8dc,eax
10031ea4:	mov    DWORD PTR ds:0x1008b8e0,0x3
10031eae:	call   0x10003340
10031eb3:	push   0x1006ea84
10031eb8:	push   0x3
10031eba:	push   0x1006ea80
10031ebf:	mov    ds:0x1008b8e4,eax
10031ec4:	mov    DWORD PTR ds:0x1008b8e8,0x3
10031ece:	call   0x10003340
10031ed3:	push   0x1006ea58
10031ed8:	push   0x3
10031eda:	push   0x1006ea54
10031edf:	mov    ds:0x1008b8ec,eax
10031ee4:	mov    DWORD PTR ds:0x1008b8f0,0x3
10031eee:	call   0x10003340
10031ef3:	push   0x1006ea2c
10031ef8:	push   0x3
10031efa:	push   0x1006ea28
10031eff:	mov    ds:0x1008b8f4,eax
10031f04:	mov    DWORD PTR ds:0x1008b8f8,0x3
10031f0e:	call   0x10003340
10031f13:	push   0x1006e9e8
10031f18:	push   0x3
10031f1a:	push   0x1006e9e4
10031f1f:	mov    ds:0x1008b8fc,eax
10031f24:	mov    DWORD PTR ds:0x1008b900,0x3
10031f2e:	call   0x10003340
10031f33:	push   0x1006e9c0
10031f38:	push   0x4
10031f3a:	push   0x1006e9b8
10031f3f:	mov    ds:0x1008b904,eax
10031f44:	mov    DWORD PTR ds:0x1008b908,0x4
10031f4e:	call   0x10003340
10031f53:	add    esp,0x48
10031f56:	push   0x1006e980
10031f5b:	push   0x4
10031f5d:	push   0x1006e978
10031f62:	mov    ds:0x1008b90c,eax
10031f67:	mov    DWORD PTR ds:0x1008b910,0x4
10031f71:	call   0x10003340
10031f76:	push   0x1006e948
10031f7b:	push   0x4
10031f7d:	push   0x1006e940
10031f82:	mov    ds:0x1008b914,eax
10031f87:	mov    DWORD PTR ds:0x1008b918,0x4
10031f91:	call   0x10003340
10031f96:	push   0x1006e904
10031f9b:	push   ebx
10031f9c:	push   0x1006e8fc
10031fa1:	mov    ds:0x1008b91c,eax
10031fa6:	mov    DWORD PTR ds:0x1008b920,ebx
10031fac:	call   0x10003340
10031fb1:	push   0x1006e8bc
10031fb6:	push   0x4
10031fb8:	mov    ds:0x1008b924,eax
10031fbd:	mov    DWORD PTR ds:0x1008b928,0x4
10031fc7:	push   0x1006e8b4
10031fcc:	call   0x10003340
10031fd1:	push   0x1006e878
10031fd6:	push   ebx
10031fd7:	push   0x1006e870
10031fdc:	mov    ds:0x1008b92c,eax
10031fe1:	mov    DWORD PTR ds:0x1008b930,ebx
10031fe7:	call   0x10003340
10031fec:	push   0x1006e84c
10031ff1:	push   0x4
10031ff3:	push   0x1006e844
10031ff8:	mov    ds:0x1008b934,eax
10031ffd:	mov    DWORD PTR ds:0x1008b938,0x4
10032007:	call   0x10003340
1003200c:	add    esp,0x48
1003200f:	push   0x1006e814
10032014:	push   ebx
10032015:	push   0x1006e80c
1003201a:	mov    ds:0x1008b93c,eax
1003201f:	mov    DWORD PTR ds:0x1008b940,ebx
10032025:	call   0x10003340
1003202a:	push   0x1006e7d4
1003202f:	push   0x3
10032031:	push   0x1006e7d0
10032036:	mov    ds:0x1008b944,eax
1003203b:	mov    DWORD PTR ds:0x1008b948,0x3
10032045:	call   0x10003340
1003204a:	push   0x1006e798
1003204f:	push   0x3
10032051:	push   0x1006e794
10032056:	mov    ds:0x1008b94c,eax
1003205b:	mov    DWORD PTR ds:0x1008b950,0x3
10032065:	call   0x10003340
1003206a:	push   0x1006e758
1003206f:	push   0x4
10032071:	push   0x1006e750
10032076:	mov    ds:0x1008b954,eax
1003207b:	mov    DWORD PTR ds:0x1008b958,0x4
10032085:	call   0x10003340
1003208a:	push   0x1006e714
1003208f:	push   esi
10032090:	push   0x1006e70c
10032095:	mov    ds:0x1008b95c,eax
1003209a:	mov    DWORD PTR ds:0x1008b960,esi
100320a0:	call   0x10003340
100320a5:	push   0x1006e6e0
100320aa:	push   ebx
100320ab:	push   0x1006e6d8
100320b0:	mov    ds:0x1008b964,eax
100320b5:	mov    DWORD PTR ds:0x1008b968,ebx
100320bb:	call   0x10003340
100320c0:	add    esp,0x48
100320c3:	push   0x1006e6b0
100320c8:	push   0x4
100320ca:	push   0x1006e6a8
100320cf:	mov    ds:0x1008b96c,eax
100320d4:	mov    DWORD PTR ds:0x1008b970,0x4
100320de:	call   0x10003340
100320e3:	push   0x1006e674
100320e8:	push   0x4
100320ea:	push   0x1006e66c
100320ef:	mov    ds:0x1008b974,eax
100320f4:	mov    DWORD PTR ds:0x1008b978,0x4
100320fe:	call   0x10003340
10032103:	push   0x1006e644
10032108:	push   0x4
1003210a:	push   0x1006e63c
1003210f:	mov    ds:0x1008b97c,eax
10032114:	mov    DWORD PTR ds:0x1008b980,0x4
1003211e:	call   0x10003340
10032123:	push   0x1006e604
10032128:	push   0x4
1003212a:	push   0x1006e5fc
1003212f:	mov    ds:0x1008b984,eax
10032134:	mov    DWORD PTR ds:0x1008b988,0x4
1003213e:	call   0x10003340
10032143:	push   0x1006e5d4
10032148:	push   0x4
1003214a:	push   0x1006e5cc
1003214f:	mov    ds:0x1008b98c,eax
10032154:	mov    DWORD PTR ds:0x1008b990,0x4
1003215e:	call   0x10003340
10032163:	push   0x1006e5a8
10032168:	push   0x4
1003216a:	push   0x1006e5a0
1003216f:	mov    ds:0x1008b994,eax
10032174:	mov    DWORD PTR ds:0x1008b998,0x4
1003217e:	call   0x10003340
10032183:	add    esp,0x48
10032186:	push   0x1006e57c
1003218b:	push   0x4
1003218d:	push   0x1006e574
10032192:	mov    ds:0x1008b99c,eax
10032197:	mov    DWORD PTR ds:0x1008b9a0,0x4
100321a1:	call   0x10003340
100321a6:	push   0x1006e544
100321ab:	push   esi
100321ac:	push   0x1006e53c
100321b1:	mov    ds:0x1008b9a4,eax
100321b6:	mov    DWORD PTR ds:0x1008b9a8,esi
100321bc:	call   0x10003340
100321c1:	push   0x1006e50c
100321c6:	push   esi
100321c7:	push   0x1006e504
100321cc:	mov    ds:0x1008b9ac,eax
100321d1:	mov    DWORD PTR ds:0x1008b9b0,esi
100321d7:	call   0x10003340
100321dc:	push   0x1006e4d8
100321e1:	push   ebx
100321e2:	push   0x1006e4d0
100321e7:	mov    ds:0x1008b9b4,eax
100321ec:	mov    DWORD PTR ds:0x1008b9b8,ebx
100321f2:	call   0x10003340
100321f7:	push   0x1006e490
100321fc:	push   esi
100321fd:	push   0x1006e488
10032202:	mov    ds:0x1008b9bc,eax
10032207:	mov    DWORD PTR ds:0x1008b9c0,esi
1003220d:	call   0x10003340
10032212:	push   0x1006e460
10032217:	push   esi
10032218:	push   0x1006e458
1003221d:	mov    ds:0x1008b9c4,eax
10032222:	mov    DWORD PTR ds:0x1008b9c8,esi
10032228:	call   0x10003340
1003222d:	add    esp,0x48
10032230:	push   0x1006e41c
10032235:	push   0x4
10032237:	push   0x1006e414
1003223c:	mov    ds:0x1008b9cc,eax
10032241:	mov    DWORD PTR ds:0x1008b9d0,0x4
1003224b:	call   0x10003340
10032250:	push   0x1006e3ec
10032255:	push   ebx
10032256:	push   0x1006e3e4
1003225b:	mov    ds:0x1008b9d4,eax
10032260:	mov    DWORD PTR ds:0x1008b9d8,ebx
10032266:	call   0x10003340
1003226b:	push   0x1006e3a4
10032270:	push   ebx
10032271:	push   0x1006e39c
10032276:	mov    ds:0x1008b9dc,eax
1003227b:	mov    DWORD PTR ds:0x1008b9e0,ebx
10032281:	call   0x10003340
10032286:	push   0x1006e374
1003228b:	push   ebx
1003228c:	push   0x1006e36c
10032291:	mov    ds:0x1008b9e4,eax
10032296:	mov    DWORD PTR ds:0x1008b9e8,ebx
1003229c:	call   0x10003340
100322a1:	push   0x1006e330
100322a6:	push   esi
100322a7:	push   0x1006e328
100322ac:	mov    ds:0x1008b9ec,eax
100322b1:	mov    DWORD PTR ds:0x1008b9f0,esi
100322b7:	call   0x10003340
100322bc:	push   0x1006e2e8
100322c1:	push   edi
100322c2:	push   0x1006e2dc
100322c7:	mov    ds:0x1008b9f4,eax
100322cc:	mov    DWORD PTR ds:0x1008b9f8,edi
100322d2:	call   0x10003340
100322d7:	add    esp,0x48
100322da:	push   0x1006e2ac
100322df:	push   esi
100322e0:	push   0x1006e2a4
100322e5:	mov    ds:0x1008b9fc,eax
100322ea:	mov    DWORD PTR ds:0x1008ba00,esi
100322f0:	call   0x10003340
100322f5:	push   0x1006e26c
100322fa:	push   edi
100322fb:	push   0x1006e264
10032300:	mov    ds:0x1008ba04,eax
10032305:	mov    DWORD PTR ds:0x1008ba08,edi
1003230b:	call   0x10003340
10032310:	push   0x1006e234
10032315:	push   edi
10032316:	push   0x1006e22c
1003231b:	mov    ds:0x1008ba0c,eax
10032320:	mov    DWORD PTR ds:0x1008ba10,edi
10032326:	call   0x10003340
1003232b:	push   0x1006e1ec
10032330:	push   ebx
10032331:	push   0x1006e1e4
10032336:	mov    ds:0x1008ba14,eax
1003233b:	mov    DWORD PTR ds:0x1008ba18,ebx
10032341:	call   0x10003340
10032346:	push   0x1006e1ac
1003234b:	push   edi
1003234c:	push   0x1006e1a4
10032351:	mov    ds:0x1008ba1c,eax
10032356:	mov    DWORD PTR ds:0x1008ba20,edi
1003235c:	call   0x10003340
10032361:	push   0x1006e170
10032366:	push   ebx
10032367:	push   0x1006e168
1003236c:	mov    ds:0x1008ba24,eax
10032371:	mov    DWORD PTR ds:0x1008ba28,ebx
10032377:	call   0x10003340
1003237c:	add    esp,0x48
1003237f:	push   0x1006e128
10032384:	push   edi
10032385:	push   0x1006e11c
1003238a:	mov    ds:0x1008ba2c,eax
1003238f:	mov    DWORD PTR ds:0x1008ba30,edi
10032395:	call   0x10003340
1003239a:	push   0x1006e0f4
1003239f:	push   edi
100323a0:	push   0x1006e0ec
100323a5:	mov    ds:0x1008ba34,eax
100323aa:	mov    DWORD PTR ds:0x1008ba38,edi
100323b0:	call   0x10003340
100323b5:	push   0x1006e0c8
100323ba:	push   esi
100323bb:	push   0x1006e0c0
100323c0:	mov    ds:0x1008ba3c,eax
100323c5:	mov    DWORD PTR ds:0x1008ba40,esi
100323cb:	call   0x10003340
100323d0:	push   0x1006e080
100323d5:	push   0x4
100323d7:	push   0x1006e074
100323dc:	mov    ds:0x1008ba44,eax
100323e1:	mov    DWORD PTR ds:0x1008ba48,0x4
100323eb:	call   0x10003340
100323f0:	push   0x1006e03c
100323f5:	push   0x4
100323f7:	push   0x1006e034
100323fc:	mov    ds:0x1008ba4c,eax
10032401:	mov    DWORD PTR ds:0x1008ba50,0x4
1003240b:	call   0x10003340
10032410:	push   0x1006e010
10032415:	push   edi
10032416:	push   0x1006e008
1003241b:	mov    ds:0x1008ba54,eax
10032420:	mov    DWORD PTR ds:0x1008ba58,edi
10032426:	call   0x10003340
1003242b:	add    esp,0x48
1003242e:	push   0x1006dfc8
10032433:	push   esi
10032434:	push   0x1006dfbc
10032439:	mov    ds:0x1008ba5c,eax
1003243e:	mov    DWORD PTR ds:0x1008ba60,esi
10032444:	call   0x10003340
10032449:	mov    ds:0x1008ba64,eax
1003244e:	push   0x1006df7c
10032453:	push   esi
10032454:	push   0x1006df74
10032459:	mov    DWORD PTR ds:0x1008ba68,esi
1003245f:	call   0x10003340
10032464:	push   0x1006df38
10032469:	push   ebx
1003246a:	push   0x1006df30
1003246f:	mov    ds:0x1008ba6c,eax
10032474:	mov    DWORD PTR ds:0x1008ba70,ebx
1003247a:	call   0x10003340
1003247f:	push   0x1006df04
10032484:	push   ebx
10032485:	push   0x1006defc
1003248a:	mov    ds:0x1008ba74,eax
1003248f:	mov    DWORD PTR ds:0x1008ba78,ebx
10032495:	call   0x10003340
1003249a:	push   0x1006ded0
1003249f:	push   ebx
100324a0:	push   0x1006dec8
100324a5:	mov    ds:0x1008ba7c,eax
100324aa:	mov    DWORD PTR ds:0x1008ba80,ebx
100324b0:	call   0x10003340
100324b5:	push   0x1006dea0
100324ba:	push   ebx
100324bb:	push   0x1006de98
100324c0:	mov    ds:0x1008ba84,eax
100324c5:	mov    DWORD PTR ds:0x1008ba88,ebx
100324cb:	call   0x10003340
100324d0:	add    esp,0x48
100324d3:	push   0x1006de74
100324d8:	push   esi
100324d9:	push   0x1006de6c
100324de:	mov    ds:0x1008ba8c,eax
100324e3:	mov    DWORD PTR ds:0x1008ba90,esi
100324e9:	call   0x10003340
100324ee:	push   0x1006de30
100324f3:	push   ebx
100324f4:	push   0x1006de28
100324f9:	mov    ds:0x1008ba94,eax
100324fe:	mov    DWORD PTR ds:0x1008ba98,ebx
10032504:	call   0x10003340
10032509:	push   0x1006ddf0
1003250e:	push   esi
1003250f:	push   0x1006dde8
10032514:	mov    ds:0x1008ba9c,eax
10032519:	mov    DWORD PTR ds:0x1008baa0,esi
1003251f:	call   0x10003340
10032524:	push   0x1006ddc4
10032529:	push   ebx
1003252a:	push   0x1006ddbc
1003252f:	mov    ds:0x1008baa4,eax
10032534:	mov    DWORD PTR ds:0x1008baa8,ebx
1003253a:	call   0x10003340
1003253f:	push   0x1006dd8c
10032544:	push   esi
10032545:	push   0x1006dd84
1003254a:	mov    ds:0x1008baac,eax
1003254f:	mov    DWORD PTR ds:0x1008bab0,esi
10032555:	call   0x10003340
1003255a:	push   0x1006dd60
1003255f:	push   esi
10032560:	push   0x1006dd58
10032565:	mov    ds:0x1008bab4,eax
1003256a:	mov    DWORD PTR ds:0x1008bab8,esi
10032570:	call   0x10003340
10032575:	add    esp,0x48
10032578:	push   0x1006dd18
1003257d:	push   esi
1003257e:	push   0x1006dd10
10032583:	mov    ds:0x1008babc,eax
10032588:	mov    DWORD PTR ds:0x1008bac0,esi
1003258e:	call   0x10003340
10032593:	push   0x1006dcd8
10032598:	push   edi
10032599:	push   0x1006dcd0
1003259e:	mov    ds:0x1008bac4,eax
100325a3:	mov    DWORD PTR ds:0x1008bac8,edi
100325a9:	call   0x10003340
100325ae:	mov    ds:0x1008bacc,eax
100325b3:	mov    DWORD PTR ds:0x1008bad0,esi
100325b9:	push   0x1006dc9c
100325be:	push   esi
100325bf:	push   0x1006dc94
100325c4:	call   0x10003340
100325c9:	push   0x1006dc6c
100325ce:	push   edi
100325cf:	push   0x1006dc64
100325d4:	mov    ds:0x1008bad4,eax
100325d9:	mov    DWORD PTR ds:0x1008bad8,edi
100325df:	call   0x10003340
100325e4:	push   0x1006dc2c
100325e9:	push   0x4
100325eb:	push   0x1006dc24
100325f0:	mov    ds:0x1008badc,eax
100325f5:	mov    DWORD PTR ds:0x1008bae0,0x4
100325ff:	call   0x10003340
10032604:	push   0x1006dbf8
10032609:	push   esi
1003260a:	push   0x1006dbf0
1003260f:	mov    ds:0x1008bae4,eax
10032614:	mov    DWORD PTR ds:0x1008bae8,esi
1003261a:	call   0x10003340
1003261f:	add    esp,0x48
10032622:	push   0x1006dbc0
10032627:	push   0x4
10032629:	push   0x1006dbb8
1003262e:	mov    ds:0x1008baec,eax
10032633:	mov    DWORD PTR ds:0x1008baf0,0x4
1003263d:	call   0x10003340
10032642:	push   0x1006db80
10032647:	push   ebx
10032648:	push   0x1006db78
1003264d:	mov    ds:0x1008baf4,eax
10032652:	mov    DWORD PTR ds:0x1008baf8,ebx
10032658:	call   0x10003340
1003265d:	push   0x1006db44
10032662:	push   edi
10032663:	push   0x1006db3c
10032668:	mov    ds:0x1008bafc,eax
1003266d:	mov    DWORD PTR ds:0x1008bb00,edi
10032673:	call   0x10003340
10032678:	push   0x1006db00
1003267d:	push   edi
1003267e:	push   0x1006daf8
10032683:	mov    ds:0x1008bb04,eax
10032688:	mov    DWORD PTR ds:0x1008bb08,edi
1003268e:	call   0x10003340
10032693:	push   0x1006dac4
10032698:	push   ebp
10032699:	push   0x1006dab8
1003269e:	mov    ds:0x1008bb0c,eax
100326a3:	mov    DWORD PTR ds:0x1008bb10,ebp
100326a9:	call   0x10003340
100326ae:	push   0x1006da90
100326b3:	push   edi
100326b4:	push   0x1006da88
100326b9:	mov    ds:0x1008bb14,eax
100326be:	mov    DWORD PTR ds:0x1008bb18,edi
100326c4:	call   0x10003340
100326c9:	add    esp,0x48
100326cc:	mov    ebp,0x4
100326d1:	push   0x1006da5c
100326d6:	push   ebp
100326d7:	push   0x1006da54
100326dc:	mov    ds:0x1008bb1c,eax
100326e1:	mov    DWORD PTR ds:0x1008bb20,ebp
100326e7:	call   0x10003340
100326ec:	push   0x1006da30
100326f1:	push   esi
100326f2:	push   0x1006da28
100326f7:	mov    ds:0x1008bb24,eax
100326fc:	mov    DWORD PTR ds:0x1008bb28,esi
10032702:	call   0x10003340
10032707:	push   0x1006d9f8
1003270c:	push   esi
1003270d:	push   0x1006d9f0
10032712:	mov    ds:0x1008bb2c,eax
10032717:	mov    DWORD PTR ds:0x1008bb30,esi
1003271d:	call   0x10003340
10032722:	mov    ds:0x1008bb34,eax
10032727:	mov    DWORD PTR ds:0x1008bb38,esi
1003272d:	push   0x1006d9b8
10032732:	push   esi
10032733:	push   0x1006d9b0
10032738:	call   0x10003340
1003273d:	push   0x1006d984
10032742:	push   ebx
10032743:	push   0x1006d97c
10032748:	mov    ds:0x1008bb3c,eax
1003274d:	mov    DWORD PTR ds:0x1008bb40,ebx
10032753:	call   0x10003340
10032758:	push   0x1006d954
1003275d:	push   esi
1003275e:	push   0x1006d94c
10032763:	mov    ds:0x1008bb44,eax
10032768:	mov    DWORD PTR ds:0x1008bb48,esi
1003276e:	call   0x10003340
10032773:	add    esp,0x48
10032776:	push   0x1006d914
1003277b:	push   ebx
1003277c:	push   0x1006d90c
10032781:	mov    ds:0x1008bb4c,eax
10032786:	mov    DWORD PTR ds:0x1008bb50,ebx
1003278c:	call   0x10003340
10032791:	push   0x1006d8e8
10032796:	push   esi
10032797:	push   0x1006d8e0
1003279c:	mov    ds:0x1008bb54,eax
100327a1:	mov    DWORD PTR ds:0x1008bb58,esi
100327a7:	call   0x10003340
100327ac:	push   0x1006d8b8
100327b1:	push   ebx
100327b2:	push   0x1006d8b0
100327b7:	mov    ds:0x1008bb5c,eax
100327bc:	mov    DWORD PTR ds:0x1008bb60,ebx
100327c2:	call   0x10003340
100327c7:	push   0x1006d888
100327cc:	push   esi
100327cd:	push   0x1006d880
100327d2:	mov    ds:0x1008bb64,eax
100327d7:	mov    DWORD PTR ds:0x1008bb68,esi
100327dd:	call   0x10003340
100327e2:	push   0x1006d84c
100327e7:	push   ebx
100327e8:	push   0x1006d844
100327ed:	mov    ds:0x1008bb6c,eax
100327f2:	mov    DWORD PTR ds:0x1008bb70,ebx
100327f8:	call   0x10003340
100327fd:	push   0x1006d814
10032802:	push   ebx
10032803:	push   0x1006d80c
10032808:	mov    ds:0x1008bb74,eax
1003280d:	mov    DWORD PTR ds:0x1008bb78,ebx
10032813:	call   0x10003340
10032818:	add    esp,0x48
1003281b:	push   0x1006d7dc
10032820:	push   esi
10032821:	push   0x1006d7d4
10032826:	mov    ds:0x1008bb7c,eax
1003282b:	mov    DWORD PTR ds:0x1008bb80,esi
10032831:	call   0x10003340
10032836:	push   0x1006d798
1003283b:	push   esi
1003283c:	push   0x1006d790
10032841:	mov    ds:0x1008bb84,eax
10032846:	mov    DWORD PTR ds:0x1008bb88,esi
1003284c:	call   0x10003340
10032851:	push   0x1006d754
10032856:	push   ebx
10032857:	push   0x1006d74c
1003285c:	mov    ds:0x1008bb8c,eax
10032861:	mov    DWORD PTR ds:0x1008bb90,ebx
10032867:	call   0x10003340
1003286c:	push   0x1006d70c
10032871:	push   esi
10032872:	push   0x1006d704
10032877:	mov    ds:0x1008bb94,eax
1003287c:	mov    DWORD PTR ds:0x1008bb98,esi
10032882:	call   0x10003340
10032887:	mov    ds:0x1008bb9c,eax
1003288c:	mov    DWORD PTR ds:0x1008bba0,ebx
10032892:	push   0x1006d6d8
10032897:	push   ebx
10032898:	push   0x1006d6d0
1003289d:	call   0x10003340
100328a2:	push   0x1006d698
100328a7:	push   ebx
100328a8:	push   0x1006d690
100328ad:	mov    ds:0x1008bba4,eax
100328b2:	mov    DWORD PTR ds:0x1008bba8,ebx
100328b8:	call   0x10003340
100328bd:	add    esp,0x48
100328c0:	push   0x1006d650
100328c5:	push   ebx
100328c6:	push   0x1006d648
100328cb:	mov    ds:0x1008bbac,eax
100328d0:	mov    DWORD PTR ds:0x1008bbb0,ebx
100328d6:	call   0x10003340
100328db:	push   0x1006d610
100328e0:	push   esi
100328e1:	push   0x1006d608
100328e6:	mov    ds:0x1008bbb4,eax
100328eb:	mov    DWORD PTR ds:0x1008bbb8,esi
100328f1:	call   0x10003340
100328f6:	push   0x1006d5cc
100328fb:	push   esi
100328fc:	push   0x1006d5c4
10032901:	mov    ds:0x1008bbbc,eax
10032906:	mov    DWORD PTR ds:0x1008bbc0,esi
1003290c:	call   0x10003340
10032911:	push   0x1006d5a0
10032916:	push   ebx
10032917:	push   0x1006d598
1003291c:	mov    ds:0x1008bbc4,eax
10032921:	mov    DWORD PTR ds:0x1008bbc8,ebx
10032927:	call   0x10003340
1003292c:	push   0x1006d570
10032931:	push   esi
10032932:	push   0x1006d568
10032937:	mov    ds:0x1008bbcc,eax
1003293c:	mov    DWORD PTR ds:0x1008bbd0,esi
10032942:	call   0x10003340
10032947:	push   0x1006d528
1003294c:	push   ebx
1003294d:	push   0x1006d520
10032952:	mov    ds:0x1008bbd4,eax
10032957:	mov    DWORD PTR ds:0x1008bbd8,ebx
1003295d:	call   0x10003340
10032962:	add    esp,0x48
10032965:	push   0x1006d4fc
1003296a:	push   ebp
1003296b:	push   0x1006d4f4
10032970:	mov    ds:0x1008bbdc,eax
10032975:	mov    DWORD PTR ds:0x1008bbe0,ebp
1003297b:	call   0x10003340
10032980:	push   0x1006d4c0
10032985:	push   ebx
10032986:	push   0x1006d4b8
1003298b:	mov    ds:0x1008bbe4,eax
10032990:	mov    DWORD PTR ds:0x1008bbe8,ebx
10032996:	call   0x10003340
1003299b:	push   0x1006d478
100329a0:	push   edi
100329a1:	push   0x1006d470
100329a6:	mov    ds:0x1008bbec,eax
100329ab:	mov    DWORD PTR ds:0x1008bbf0,edi
100329b1:	call   0x10003340
100329b6:	push   0x1006d434
100329bb:	push   esi
100329bc:	push   0x1006d42c
100329c1:	mov    ds:0x1008bbf4,eax
100329c6:	mov    DWORD PTR ds:0x1008bbf8,esi
100329cc:	call   0x10003340
100329d1:	mov    edi,0x3
100329d6:	push   0x1006d3fc
100329db:	push   edi
100329dc:	push   0x1006d3f8
100329e1:	mov    ds:0x1008bbfc,eax
100329e6:	mov    DWORD PTR ds:0x1008bc00,edi
100329ec:	call   0x10003340
100329f1:	mov    ds:0x1008bc04,eax
100329f6:	mov    DWORD PTR ds:0x1008bc08,edi
100329fc:	push   0x1006d3d4
10032a01:	push   edi
10032a02:	push   0x1006d3d0
10032a07:	call   0x10003340
10032a0c:	add    esp,0x48
10032a0f:	push   0x1006d398
10032a14:	push   edi
10032a15:	push   0x1006d394
10032a1a:	mov    ds:0x1008bc0c,eax
10032a1f:	mov    DWORD PTR ds:0x1008bc10,edi
10032a25:	call   0x10003340
10032a2a:	push   0x1006d370
10032a2f:	push   edi
10032a30:	push   0x1006d36c
10032a35:	mov    ds:0x1008bc14,eax
10032a3a:	mov    DWORD PTR ds:0x1008bc18,edi
10032a40:	call   0x10003340
10032a45:	push   0x1006d32c
10032a4a:	push   ebp
10032a4b:	push   0x1006d324
10032a50:	mov    ds:0x1008bc1c,eax
10032a55:	mov    DWORD PTR ds:0x1008bc20,ebp
10032a5b:	call   0x10003340
10032a60:	push   0x1006d2f0
10032a65:	push   ebp
10032a66:	push   0x1006d2e8
10032a6b:	mov    ds:0x1008bc24,eax
10032a70:	mov    DWORD PTR ds:0x1008bc28,ebp
10032a76:	call   0x10003340
10032a7b:	push   0x1006d2a8
10032a80:	push   esi
10032a81:	push   0x1006d29c
10032a86:	mov    ds:0x1008bc2c,eax
10032a8b:	mov    DWORD PTR ds:0x1008bc30,esi
10032a91:	call   0x10003340
10032a96:	push   0x1006d278
10032a9b:	push   ebx
10032a9c:	push   0x1006d270
10032aa1:	mov    ds:0x1008bc34,eax
10032aa6:	mov    DWORD PTR ds:0x1008bc38,ebx
10032aac:	call   0x10003340
10032ab1:	add    esp,0x48
10032ab4:	pop    edi
10032ab5:	pop    esi
10032ab6:	pop    ebp
10032ab7:	mov    ds:0x1008bc3c,eax
10032abc:	pop    ebx
10032abd:	ret    
10032abe:	int3   
10032abf:	int3   
10032ac0:	push   ebx
10032ac1:	push   esi
10032ac2:	push   edi
10032ac3:	push   0x1007d520
10032ac8:	mov    esi,0x3
10032acd:	push   esi
10032ace:	push   0x1007d51c
10032ad3:	call   0x10003340
10032ad8:	push   0x1007d4e0
10032add:	push   esi
10032ade:	push   0x1007d4dc
10032ae3:	mov    ds:0x100898f4,eax
10032ae8:	mov    DWORD PTR ds:0x100898f8,esi
10032aee:	call   0x10003340
10032af3:	push   0x1007d4b8
10032af8:	push   esi
10032af9:	push   0x1007d4b4
10032afe:	mov    ds:0x100898fc,eax
10032b03:	mov    DWORD PTR ds:0x10089900,esi
10032b09:	call   0x10003340
10032b0e:	push   0x1007d484
10032b13:	push   esi
10032b14:	push   0x1007d480
10032b19:	mov    ds:0x10089904,eax
10032b1e:	mov    DWORD PTR ds:0x10089908,esi
10032b24:	call   0x10003340
10032b29:	push   0x1007d45c
10032b2e:	push   esi
10032b2f:	push   0x1007d458
10032b34:	mov    ds:0x1008990c,eax
10032b39:	mov    DWORD PTR ds:0x10089910,esi
10032b3f:	call   0x10003340
10032b44:	push   0x1007d424
10032b49:	push   esi
10032b4a:	push   0x1007d420
10032b4f:	mov    ds:0x10089914,eax
10032b54:	mov    DWORD PTR ds:0x10089918,esi
10032b5a:	call   0x10003340
10032b5f:	add    esp,0x48
10032b62:	push   0x1007d3f0
10032b67:	push   esi
10032b68:	push   0x1007d3ec
10032b6d:	mov    ds:0x1008991c,eax
10032b72:	mov    DWORD PTR ds:0x10089920,esi
10032b78:	call   0x10003340
10032b7d:	push   0x1007d3c8
10032b82:	push   esi
10032b83:	push   0x1007d3c4
10032b88:	mov    ds:0x10089924,eax
10032b8d:	mov    DWORD PTR ds:0x10089928,esi
10032b93:	call   0x10003340
10032b98:	mov    ebx,0x2
10032b9d:	push   0x1007d388
10032ba2:	push   ebx
10032ba3:	push   0x1007d384
10032ba8:	mov    ds:0x1008992c,eax
10032bad:	mov    DWORD PTR ds:0x10089930,ebx
10032bb3:	call   0x10003340
10032bb8:	push   0x1007d35c
10032bbd:	push   ebx
10032bbe:	push   0x1007d358
10032bc3:	mov    ds:0x10089934,eax
10032bc8:	mov    DWORD PTR ds:0x10089938,ebx
10032bce:	call   0x10003340
10032bd3:	push   0x1007d32c
10032bd8:	push   esi
10032bd9:	push   0x1007d328
10032bde:	mov    ds:0x1008993c,eax
10032be3:	mov    DWORD PTR ds:0x10089940,esi
10032be9:	call   0x10003340
10032bee:	push   0x1007d300
10032bf3:	push   esi
10032bf4:	push   0x1007d2fc
10032bf9:	mov    ds:0x10089944,eax
10032bfe:	mov    DWORD PTR ds:0x10089948,esi
10032c04:	call   0x10003340
10032c09:	add    esp,0x48
10032c0c:	push   0x1007d2c0
10032c11:	mov    ds:0x1008994c,eax
10032c16:	mov    DWORD PTR ds:0x10089950,esi
10032c1c:	push   esi
10032c1d:	push   0x1007d2bc
10032c22:	call   0x10003340
10032c27:	push   0x1007d294
10032c2c:	push   esi
10032c2d:	push   0x1007d290
10032c32:	mov    ds:0x10089954,eax
10032c37:	mov    DWORD PTR ds:0x10089958,esi
10032c3d:	call   0x10003340
10032c42:	push   0x1007d26c
10032c47:	push   esi
10032c48:	push   0x1007d268
10032c4d:	mov    ds:0x1008995c,eax
10032c52:	mov    DWORD PTR ds:0x10089960,esi
10032c58:	call   0x10003340
10032c5d:	push   0x1007d23c
10032c62:	push   esi
10032c63:	push   0x1007d238
10032c68:	mov    ds:0x10089964,eax
10032c6d:	mov    DWORD PTR ds:0x10089968,esi
10032c73:	call   0x10003340
10032c78:	push   0x1007d1f8
10032c7d:	push   esi
10032c7e:	push   0x1007d1f4
10032c83:	mov    ds:0x1008996c,eax
10032c88:	mov    DWORD PTR ds:0x10089970,esi
10032c8e:	call   0x10003340
10032c93:	push   0x1007d1d0
10032c98:	push   esi
10032c99:	push   0x1007d1cc
10032c9e:	mov    ds:0x10089974,eax
10032ca3:	mov    DWORD PTR ds:0x10089978,esi
10032ca9:	call   0x10003340
10032cae:	add    esp,0x48
10032cb1:	push   0x1007d1a0
10032cb6:	push   esi
10032cb7:	push   0x1007d19c
10032cbc:	mov    ds:0x1008997c,eax
10032cc1:	mov    DWORD PTR ds:0x10089980,esi
10032cc7:	call   0x10003340
10032ccc:	push   0x1007d168
10032cd1:	push   esi
10032cd2:	push   0x1007d164
10032cd7:	mov    ds:0x10089984,eax
10032cdc:	mov    DWORD PTR ds:0x10089988,esi
10032ce2:	call   0x10003340
10032ce7:	push   0x1007d130
10032cec:	push   esi
10032ced:	push   0x1007d12c
10032cf2:	mov    ds:0x1008998c,eax
10032cf7:	mov    DWORD PTR ds:0x10089990,esi
10032cfd:	call   0x10003340
10032d02:	push   0x1007d0fc
10032d07:	push   esi
10032d08:	push   0x1007d0f8
10032d0d:	mov    ds:0x10089994,eax
10032d12:	mov    DWORD PTR ds:0x10089998,esi
10032d18:	call   0x10003340
10032d1d:	push   0x1007d0c8
10032d22:	push   esi
10032d23:	push   0x1007d0c4
10032d28:	mov    ds:0x1008999c,eax
10032d2d:	mov    DWORD PTR ds:0x100899a0,esi
10032d33:	call   0x10003340
10032d38:	push   0x1007d09c
10032d3d:	push   esi
10032d3e:	push   0x1007d098
10032d43:	mov    ds:0x100899a4,eax
10032d48:	mov    DWORD PTR ds:0x100899a8,esi
10032d4e:	call   0x10003340
10032d53:	add    esp,0x48
10032d56:	push   0x1007d060
10032d5b:	push   esi
10032d5c:	push   0x1007d05c
10032d61:	mov    ds:0x100899ac,eax
10032d66:	mov    DWORD PTR ds:0x100899b0,esi
10032d6c:	call   0x10003340
10032d71:	push   0x1007d01c
10032d76:	push   esi
10032d77:	mov    ds:0x100899b4,eax
10032d7c:	mov    DWORD PTR ds:0x100899b8,esi
10032d82:	push   0x1007d018
10032d87:	call   0x10003340
10032d8c:	mov    edi,0x4
10032d91:	push   0x1007cfe4
10032d96:	push   edi
10032d97:	push   0x1007cfdc
10032d9c:	mov    ds:0x100899bc,eax
10032da1:	mov    DWORD PTR ds:0x100899c0,edi
10032da7:	call   0x10003340
10032dac:	push   0x1007cfb8
10032db1:	push   edi
10032db2:	push   0x1007cfb0
10032db7:	mov    ds:0x100899c4,eax
10032dbc:	mov    DWORD PTR ds:0x100899c8,edi
10032dc2:	call   0x10003340
10032dc7:	push   0x1007cf70
10032dcc:	push   edi
10032dcd:	push   0x1007cf68
10032dd2:	mov    ds:0x100899cc,eax
10032dd7:	mov    DWORD PTR ds:0x100899d0,edi
10032ddd:	call   0x10003340
10032de2:	push   0x1007cf38
10032de7:	push   edi
10032de8:	push   0x1007cf30
10032ded:	mov    ds:0x100899d4,eax
10032df2:	mov    DWORD PTR ds:0x100899d8,edi
10032df8:	call   0x10003340
10032dfd:	add    esp,0x48
10032e00:	push   0x1007cf0c
10032e05:	push   edi
10032e06:	push   0x1007cf04
10032e0b:	mov    ds:0x100899dc,eax
10032e10:	mov    DWORD PTR ds:0x100899e0,edi
10032e16:	call   0x10003340
10032e1b:	push   0x1007ced8
10032e20:	push   edi
10032e21:	push   0x1007ced0
10032e26:	mov    ds:0x100899e4,eax
10032e2b:	mov    DWORD PTR ds:0x100899e8,edi
10032e31:	call   0x10003340
10032e36:	push   0x1007ce94
10032e3b:	push   ebx
10032e3c:	push   0x1007ce90
10032e41:	mov    ds:0x100899ec,eax
10032e46:	mov    DWORD PTR ds:0x100899f0,ebx
10032e4c:	call   0x10003340
10032e51:	push   0x1007ce54
10032e56:	push   ebx
10032e57:	push   0x1007ce50
10032e5c:	mov    ds:0x100899f4,eax
10032e61:	mov    DWORD PTR ds:0x100899f8,ebx
10032e67:	call   0x10003340
10032e6c:	push   0x1007ce2c
10032e71:	push   ebx
10032e72:	push   0x1007ce28
10032e77:	mov    ds:0x100899fc,eax
10032e7c:	mov    DWORD PTR ds:0x10089a00,ebx
10032e82:	call   0x10003340
10032e87:	push   0x1007cde8
10032e8c:	push   ebx
10032e8d:	push   0x1007cde0
10032e92:	mov    ds:0x10089a04,eax
10032e97:	mov    DWORD PTR ds:0x10089a08,ebx
10032e9d:	call   0x10003340
10032ea2:	add    esp,0x48
10032ea5:	push   0x1007cdac
10032eaa:	push   ebx
10032eab:	push   0x1007cda8
10032eb0:	mov    ds:0x10089a0c,eax
10032eb5:	mov    DWORD PTR ds:0x10089a10,ebx
10032ebb:	call   0x10003340
10032ec0:	push   0x1007cd6c
10032ec5:	push   ebx
10032ec6:	push   0x1007cd68
10032ecb:	mov    ds:0x10089a14,eax
10032ed0:	mov    DWORD PTR ds:0x10089a18,ebx
10032ed6:	call   0x10003340
10032edb:	push   0x1007cd40
10032ee0:	push   ebx
10032ee1:	mov    ds:0x10089a1c,eax
10032ee6:	mov    DWORD PTR ds:0x10089a20,ebx
10032eec:	push   0x1007cd3c
10032ef1:	call   0x10003340
10032ef6:	push   0x1007cd10
10032efb:	push   ebx
10032efc:	push   0x1007cd0c
10032f01:	mov    ds:0x10089a24,eax
10032f06:	mov    DWORD PTR ds:0x10089a28,ebx
10032f0c:	call   0x10003340
10032f11:	push   0x1007ccd8
10032f16:	push   esi
10032f17:	push   0x1007ccd4
10032f1c:	mov    ds:0x10089a2c,eax
10032f21:	mov    DWORD PTR ds:0x10089a30,esi
10032f27:	call   0x10003340
10032f2c:	push   0x1007cca8
10032f31:	push   esi
10032f32:	push   0x1007cca4
10032f37:	mov    ds:0x10089a34,eax
10032f3c:	mov    DWORD PTR ds:0x10089a38,esi
10032f42:	call   0x10003340
10032f47:	add    esp,0x48
10032f4a:	push   0x1007cc74
10032f4f:	push   edi
10032f50:	push   0x1007cc6c
10032f55:	mov    ds:0x10089a3c,eax
10032f5a:	mov    DWORD PTR ds:0x10089a40,edi
10032f60:	call   0x10003340
10032f65:	push   0x1007cc30
10032f6a:	push   edi
10032f6b:	push   0x1007cc28
10032f70:	mov    ds:0x10089a44,eax
10032f75:	mov    DWORD PTR ds:0x10089a48,edi
10032f7b:	call   0x10003340
10032f80:	push   0x1007cc00
10032f85:	push   edi
10032f86:	push   0x1007cbf8
10032f8b:	mov    ds:0x10089a4c,eax
10032f90:	mov    DWORD PTR ds:0x10089a50,edi
10032f96:	call   0x10003340
10032f9b:	push   0x1007cbcc
10032fa0:	push   edi
10032fa1:	push   0x1007cbc4
10032fa6:	mov    ds:0x10089a54,eax
10032fab:	mov    DWORD PTR ds:0x10089a58,edi
10032fb1:	call   0x10003340
10032fb6:	push   0x1007cba0
10032fbb:	push   edi
10032fbc:	push   0x1007cb98
10032fc1:	mov    ds:0x10089a5c,eax
10032fc6:	mov    DWORD PTR ds:0x10089a60,edi
10032fcc:	call   0x10003340
10032fd1:	push   0x1007cb6c
10032fd6:	push   edi
10032fd7:	push   0x1007cb64
10032fdc:	mov    ds:0x10089a64,eax
10032fe1:	mov    DWORD PTR ds:0x10089a68,edi
10032fe7:	call   0x10003340
10032fec:	add    esp,0x48
10032fef:	push   0x1007cb38
10032ff4:	push   ebx
10032ff5:	push   0x1007cb34
10032ffa:	mov    ds:0x10089a6c,eax
10032fff:	mov    DWORD PTR ds:0x10089a70,ebx
10033005:	call   0x10003340
1003300a:	push   0x1007cb04
1003300f:	push   ebx
10033010:	push   0x1007cb00
10033015:	mov    ds:0x10089a74,eax
1003301a:	mov    DWORD PTR ds:0x10089a78,ebx
10033020:	call   0x10003340
10033025:	push   0x1007cad8
1003302a:	push   ebx
1003302b:	push   0x1007cad4
10033030:	mov    ds:0x10089a7c,eax
10033035:	mov    DWORD PTR ds:0x10089a80,ebx
1003303b:	call   0x10003340
10033040:	push   0x1007caa4
10033045:	push   ebx
10033046:	push   0x1007caa0
1003304b:	mov    ds:0x10089a84,eax
10033050:	mov    DWORD PTR ds:0x10089a88,ebx
10033056:	call   0x10003340
1003305b:	push   0x1007ca68
10033060:	push   ebx
10033061:	push   0x1007ca64
10033066:	mov    ds:0x10089a8c,eax
1003306b:	mov    DWORD PTR ds:0x10089a90,ebx
10033071:	call   0x10003340
10033076:	push   0x1007ca34
1003307b:	push   ebx
1003307c:	push   0x1007ca30
10033081:	mov    ds:0x10089a94,eax
10033086:	mov    DWORD PTR ds:0x10089a98,ebx
1003308c:	call   0x10003340
10033091:	add    esp,0x48
10033094:	push   0x1007ca00
10033099:	push   ebx
1003309a:	push   0x1007c9fc
1003309f:	mov    ds:0x10089a9c,eax
100330a4:	mov    DWORD PTR ds:0x10089aa0,ebx
100330aa:	call   0x10003340
100330af:	push   0x1007c9d8
100330b4:	push   ebx
100330b5:	push   0x1007c9d4
100330ba:	mov    ds:0x10089aa4,eax
100330bf:	mov    DWORD PTR ds:0x10089aa8,ebx
100330c5:	call   0x10003340
100330ca:	push   0x1007c99c
100330cf:	push   esi
100330d0:	push   0x1007c998
100330d5:	mov    ds:0x10089aac,eax
100330da:	mov    DWORD PTR ds:0x10089ab0,esi
100330e0:	call   0x10003340
100330e5:	push   0x1007c95c
100330ea:	push   esi
100330eb:	push   0x1007c958
100330f0:	mov    ds:0x10089ab4,eax
100330f5:	mov    DWORD PTR ds:0x10089ab8,esi
100330fb:	call   0x10003340
10033100:	push   0x1007c928
10033105:	push   edi
10033106:	push   0x1007c920
1003310b:	mov    ds:0x10089abc,eax
10033110:	mov    DWORD PTR ds:0x10089ac0,edi
10033116:	call   0x10003340
1003311b:	push   0x1007c8f8
10033120:	push   edi
10033121:	push   0x1007c8f0
10033126:	mov    ds:0x10089ac4,eax
1003312b:	mov    DWORD PTR ds:0x10089ac8,edi
10033131:	call   0x10003340
10033136:	add    esp,0x48
10033139:	push   0x1007c8b4
1003313e:	push   edi
1003313f:	push   0x1007c8ac
10033144:	mov    ds:0x10089acc,eax
10033149:	mov    DWORD PTR ds:0x10089ad0,edi
1003314f:	call   0x10003340
10033154:	push   0x1007c874
10033159:	push   edi
1003315a:	push   0x1007c86c
1003315f:	mov    ds:0x10089ad4,eax
10033164:	mov    DWORD PTR ds:0x10089ad8,edi
1003316a:	call   0x10003340
1003316f:	push   0x1007c834
10033174:	push   edi
10033175:	push   0x1007c82c
1003317a:	mov    ds:0x10089adc,eax
1003317f:	mov    DWORD PTR ds:0x10089ae0,edi
10033185:	call   0x10003340
1003318a:	push   0x1007c7f8
1003318f:	push   edi
10033190:	push   0x1007c7f0
10033195:	mov    ds:0x10089ae4,eax
1003319a:	mov    DWORD PTR ds:0x10089ae8,edi
100331a0:	call   0x10003340
100331a5:	push   0x1007c7cc
100331aa:	push   esi
100331ab:	push   0x1007c7c8
100331b0:	mov    ds:0x10089aec,eax
100331b5:	mov    DWORD PTR ds:0x10089af0,esi
100331bb:	call   0x10003340
100331c0:	mov    ds:0x10089af4,eax
100331c5:	push   0x1007c79c
100331ca:	push   esi
100331cb:	push   0x1007c798
100331d0:	mov    DWORD PTR ds:0x10089af8,esi
100331d6:	call   0x10003340
100331db:	add    esp,0x48
100331de:	push   0x1007c76c
100331e3:	push   esi
100331e4:	push   0x1007c768
100331e9:	mov    ds:0x10089afc,eax
100331ee:	mov    DWORD PTR ds:0x10089b00,esi
100331f4:	call   0x10003340
100331f9:	push   0x1007c730
100331fe:	push   esi
100331ff:	push   0x1007c72c
10033204:	mov    ds:0x10089b04,eax
10033209:	mov    DWORD PTR ds:0x10089b08,esi
1003320f:	call   0x10003340
10033214:	push   0x1007c6fc
10033219:	push   ebx
1003321a:	push   0x1007c6f8
1003321f:	mov    ds:0x10089b0c,eax
10033224:	mov    DWORD PTR ds:0x10089b10,ebx
1003322a:	call   0x10003340
1003322f:	push   0x1007c6d0
10033234:	push   ebx
10033235:	push   0x1007c6cc
1003323a:	mov    ds:0x10089b14,eax
1003323f:	mov    DWORD PTR ds:0x10089b18,ebx
10033245:	call   0x10003340
1003324a:	push   0x1007c68c
1003324f:	push   ebx
10033250:	push   0x1007c688
10033255:	mov    ds:0x10089b1c,eax
1003325a:	mov    DWORD PTR ds:0x10089b20,ebx
10033260:	call   0x10003340
10033265:	push   0x1007c65c
1003326a:	push   ebx
1003326b:	push   0x1007c658
10033270:	mov    ds:0x10089b24,eax
10033275:	mov    DWORD PTR ds:0x10089b28,ebx
1003327b:	call   0x10003340
10033280:	add    esp,0x48
10033283:	push   0x1007c620
10033288:	push   ebx
10033289:	push   0x1007c61c
1003328e:	mov    ds:0x10089b2c,eax
10033293:	mov    DWORD PTR ds:0x10089b30,ebx
10033299:	call   0x10003340
1003329e:	push   0x1007c5f4
100332a3:	push   ebx
100332a4:	push   0x1007c5f0
100332a9:	mov    ds:0x10089b34,eax
100332ae:	mov    DWORD PTR ds:0x10089b38,ebx
100332b4:	call   0x10003340
100332b9:	push   0x1007c5bc
100332be:	push   esi
100332bf:	push   0x1007c5b8
100332c4:	mov    ds:0x10089b3c,eax
100332c9:	mov    DWORD PTR ds:0x10089b40,esi
100332cf:	call   0x10003340
100332d4:	push   0x1007c58c
100332d9:	push   esi
100332da:	push   0x1007c588
100332df:	mov    ds:0x10089b44,eax
100332e4:	mov    DWORD PTR ds:0x10089b48,esi
100332ea:	call   0x10003340
100332ef:	push   0x1007c550
100332f4:	push   esi
100332f5:	push   0x1007c54c
100332fa:	mov    ds:0x10089b4c,eax
100332ff:	mov    DWORD PTR ds:0x10089b50,esi
10033305:	call   0x10003340
1003330a:	push   0x1007c510
1003330f:	push   esi
10033310:	push   0x1007c50c
10033315:	mov    ds:0x10089b54,eax
1003331a:	mov    DWORD PTR ds:0x10089b58,esi
10033320:	call   0x10003340
10033325:	add    esp,0x48
10033328:	mov    ds:0x10089b5c,eax
1003332d:	push   0x1007c4d4
10033332:	push   esi
10033333:	push   0x1007c4d0
10033338:	mov    DWORD PTR ds:0x10089b60,esi
1003333e:	call   0x10003340
10033343:	push   0x1007c4a8
10033348:	push   esi
10033349:	push   0x1007c4a4
1003334e:	mov    ds:0x10089b64,eax
10033353:	mov    DWORD PTR ds:0x10089b68,esi
10033359:	call   0x10003340
1003335e:	push   0x1007c46c
10033363:	push   esi
10033364:	push   0x1007c468
10033369:	mov    ds:0x10089b6c,eax
1003336e:	mov    DWORD PTR ds:0x10089b70,esi
10033374:	call   0x10003340
10033379:	push   0x1007c438
1003337e:	push   esi
1003337f:	push   0x1007c434
10033384:	mov    ds:0x10089b74,eax
10033389:	mov    DWORD PTR ds:0x10089b78,esi
1003338f:	call   0x10003340
10033394:	push   0x1007c3f8
10033399:	push   esi
1003339a:	push   0x1007c3f4
1003339f:	mov    ds:0x10089b7c,eax
100333a4:	mov    DWORD PTR ds:0x10089b80,esi
100333aa:	call   0x10003340
100333af:	push   0x1007c3c8
100333b4:	push   esi
100333b5:	push   0x1007c3c4
100333ba:	mov    ds:0x10089b84,eax
100333bf:	mov    DWORD PTR ds:0x10089b88,esi
100333c5:	call   0x10003340
100333ca:	add    esp,0x48
100333cd:	push   0x1007c388
100333d2:	push   esi
100333d3:	push   0x1007c384
100333d8:	mov    ds:0x10089b8c,eax
100333dd:	mov    DWORD PTR ds:0x10089b90,esi
100333e3:	call   0x10003340
100333e8:	push   0x1007c35c
100333ed:	push   esi
100333ee:	push   0x1007c358
100333f3:	mov    ds:0x10089b94,eax
100333f8:	mov    DWORD PTR ds:0x10089b98,esi
100333fe:	call   0x10003340
10033403:	push   0x1007c31c
10033408:	push   esi
10033409:	push   0x1007c318
1003340e:	mov    ds:0x10089b9c,eax
10033413:	mov    DWORD PTR ds:0x10089ba0,esi
10033419:	call   0x10003340
1003341e:	push   0x1007c2e4
10033423:	push   esi
10033424:	push   0x1007c2e0
10033429:	mov    ds:0x10089ba4,eax
1003342e:	mov    DWORD PTR ds:0x10089ba8,esi
10033434:	call   0x10003340
10033439:	push   0x1007c2a0
1003343e:	push   esi
1003343f:	push   0x1007c298
10033444:	mov    ds:0x10089bac,eax
10033449:	mov    DWORD PTR ds:0x10089bb0,esi
1003344f:	call   0x10003340
10033454:	push   0x1007c258
10033459:	push   esi
1003345a:	push   0x1007c254
1003345f:	mov    ds:0x10089bb4,eax
10033464:	mov    DWORD PTR ds:0x10089bb8,esi
1003346a:	call   0x10003340
1003346f:	add    esp,0x48
10033472:	push   0x1007c230
10033477:	push   esi
10033478:	push   0x1007c22c
1003347d:	mov    ds:0x10089bbc,eax
10033482:	mov    DWORD PTR ds:0x10089bc0,esi
10033488:	call   0x10003340
1003348d:	mov    ds:0x10089bc4,eax
10033492:	mov    DWORD PTR ds:0x10089bc8,edi
10033498:	push   0x1007c208
1003349d:	push   edi
1003349e:	push   0x1007c200
100334a3:	call   0x10003340
100334a8:	push   0x1007c1d0
100334ad:	push   edi
100334ae:	push   0x1007c1c8
100334b3:	mov    ds:0x10089bcc,eax
100334b8:	mov    DWORD PTR ds:0x10089bd0,edi
100334be:	call   0x10003340
100334c3:	push   0x1007c19c
100334c8:	push   edi
100334c9:	push   0x1007c194
100334ce:	mov    ds:0x10089bd4,eax
100334d3:	mov    DWORD PTR ds:0x10089bd8,edi
100334d9:	call   0x10003340
100334de:	push   0x1007c160
100334e3:	push   edi
100334e4:	push   0x1007c158
100334e9:	mov    ds:0x10089bdc,eax
100334ee:	mov    DWORD PTR ds:0x10089be0,edi
100334f4:	call   0x10003340
100334f9:	push   0x1007c118
100334fe:	push   edi
100334ff:	push   0x1007c110
10033504:	mov    ds:0x10089be4,eax
10033509:	mov    DWORD PTR ds:0x10089be8,edi
1003350f:	call   0x10003340
10033514:	add    esp,0x48
10033517:	push   0x1007c0ec
1003351c:	push   edi
1003351d:	push   0x1007c0e4
10033522:	mov    ds:0x10089bec,eax
10033527:	mov    DWORD PTR ds:0x10089bf0,edi
1003352d:	call   0x10003340
10033532:	push   0x1007c0bc
10033537:	push   edi
10033538:	push   0x1007c0b4
1003353d:	mov    ds:0x10089bf4,eax
10033542:	mov    DWORD PTR ds:0x10089bf8,edi
10033548:	call   0x10003340
1003354d:	push   0x1007c080
10033552:	push   edi
10033553:	push   0x1007c078
10033558:	mov    ds:0x10089bfc,eax
1003355d:	mov    DWORD PTR ds:0x10089c00,edi
10033563:	call   0x10003340
10033568:	push   0x1007c038
1003356d:	push   edi
1003356e:	push   0x1007c030
10033573:	mov    ds:0x10089c04,eax
10033578:	mov    DWORD PTR ds:0x10089c08,edi
1003357e:	call   0x10003340
10033583:	push   0x1007bff8
10033588:	push   edi
10033589:	push   0x1007bff0
1003358e:	mov    ds:0x10089c0c,eax
10033593:	mov    DWORD PTR ds:0x10089c10,edi
10033599:	call   0x10003340
1003359e:	mov    ebx,0x5
100335a3:	push   0x1007bfcc
100335a8:	push   ebx
100335a9:	push   0x1007bfc4
100335ae:	mov    ds:0x10089c14,eax
100335b3:	mov    DWORD PTR ds:0x10089c18,ebx
100335b9:	call   0x10003340
100335be:	add    esp,0x48
100335c1:	push   0x1007bf88
100335c6:	push   ebx
100335c7:	push   0x1007bf80
100335cc:	mov    ds:0x10089c1c,eax
100335d1:	mov    DWORD PTR ds:0x10089c20,ebx
100335d7:	call   0x10003340
100335dc:	push   0x1007bf48
100335e1:	push   ebx
100335e2:	push   0x1007bf40
100335e7:	mov    ds:0x10089c24,eax
100335ec:	mov    DWORD PTR ds:0x10089c28,ebx
100335f2:	call   0x10003340
100335f7:	mov    ds:0x10089c2c,eax
100335fc:	mov    DWORD PTR ds:0x10089c30,ebx
10033602:	push   0x1007bf08
10033607:	push   ebx
10033608:	push   0x1007bf00
1003360d:	call   0x10003340
10033612:	push   0x1007bec0
10033617:	push   ebx
10033618:	push   0x1007beb8
1003361d:	mov    ds:0x10089c34,eax
10033622:	mov    DWORD PTR ds:0x10089c38,ebx
10033628:	call   0x10003340
1003362d:	push   0x1007be80
10033632:	push   ebx
10033633:	push   0x1007be78
10033638:	mov    ds:0x10089c3c,eax
1003363d:	mov    DWORD PTR ds:0x10089c40,ebx
10033643:	call   0x10003340
10033648:	push   0x1007be44
1003364d:	push   edi
1003364e:	push   0x1007be3c
10033653:	mov    ds:0x10089c44,eax
10033658:	mov    DWORD PTR ds:0x10089c48,edi
1003365e:	call   0x10003340
10033663:	add    esp,0x48
10033666:	push   0x1007be10
1003366b:	push   edi
1003366c:	push   0x1007be08
10033671:	mov    ds:0x10089c4c,eax
10033676:	mov    DWORD PTR ds:0x10089c50,edi
1003367c:	call   0x10003340
10033681:	push   0x1007bde4
10033686:	push   edi
10033687:	push   0x1007bddc
1003368c:	mov    ds:0x10089c54,eax
10033691:	mov    DWORD PTR ds:0x10089c58,edi
10033697:	call   0x10003340
1003369c:	push   0x1007bda4
100336a1:	push   edi
100336a2:	push   0x1007bd9c
100336a7:	mov    ds:0x10089c5c,eax
100336ac:	mov    DWORD PTR ds:0x10089c60,edi
100336b2:	call   0x10003340
100336b7:	push   0x1007bd78
100336bc:	push   edi
100336bd:	push   0x1007bd70
100336c2:	mov    ds:0x10089c64,eax
100336c7:	mov    DWORD PTR ds:0x10089c68,edi
100336cd:	call   0x10003340
100336d2:	push   0x1007bd3c
100336d7:	push   edi
100336d8:	push   0x1007bd34
100336dd:	mov    ds:0x10089c6c,eax
100336e2:	mov    DWORD PTR ds:0x10089c70,edi
100336e8:	call   0x10003340
100336ed:	push   0x1007bd08
100336f2:	push   edi
100336f3:	push   0x1007bd00
100336f8:	mov    ds:0x10089c74,eax
100336fd:	mov    DWORD PTR ds:0x10089c78,edi
10033703:	call   0x10003340
10033708:	add    esp,0x48
1003370b:	push   0x1007bcc8
10033710:	push   edi
10033711:	push   0x1007bcc0
10033716:	mov    ds:0x10089c7c,eax
1003371b:	mov    DWORD PTR ds:0x10089c80,edi
10033721:	call   0x10003340
10033726:	push   0x1007bc80
1003372b:	push   edi
1003372c:	push   0x1007bc78
10033731:	mov    ds:0x10089c84,eax
10033736:	mov    DWORD PTR ds:0x10089c88,edi
1003373c:	call   0x10003340
10033741:	push   0x1007bc48
10033746:	push   edi
10033747:	push   0x1007bc40
1003374c:	mov    ds:0x10089c8c,eax
10033751:	mov    DWORD PTR ds:0x10089c90,edi
10033757:	call   0x10003340
1003375c:	mov    ds:0x10089c94,eax
10033761:	mov    DWORD PTR ds:0x10089c98,ebx
10033767:	push   0x1007bc04
1003376c:	push   ebx
1003376d:	push   0x1007bbfc
10033772:	call   0x10003340
10033777:	push   0x1007bbc4
1003377c:	push   ebx
1003377d:	push   0x1007bbbc
10033782:	mov    ds:0x10089c9c,eax
10033787:	mov    DWORD PTR ds:0x10089ca0,ebx
1003378d:	call   0x10003340
10033792:	push   0x1007bb98
10033797:	push   ebx
10033798:	push   0x1007bb90
1003379d:	mov    ds:0x10089ca4,eax
100337a2:	mov    DWORD PTR ds:0x10089ca8,ebx
100337a8:	call   0x10003340
100337ad:	add    esp,0x48
100337b0:	push   0x1007bb54
100337b5:	push   ebx
100337b6:	push   0x1007bb4c
100337bb:	mov    ds:0x10089cac,eax
100337c0:	mov    DWORD PTR ds:0x10089cb0,ebx
100337c6:	call   0x10003340
100337cb:	push   0x1007bb10
100337d0:	push   ebx
100337d1:	push   0x1007bb08
100337d6:	mov    ds:0x10089cb4,eax
100337db:	mov    DWORD PTR ds:0x10089cb8,ebx
100337e1:	call   0x10003340
100337e6:	push   0x1007bae0
100337eb:	push   ebx
100337ec:	push   0x1007bad8
100337f1:	mov    ds:0x10089cbc,eax
100337f6:	mov    DWORD PTR ds:0x10089cc0,ebx
100337fc:	call   0x10003340
10033801:	push   0x1007baac
10033806:	push   esi
10033807:	push   0x1007baa8
1003380c:	mov    ds:0x10089cc4,eax
10033811:	mov    DWORD PTR ds:0x10089cc8,esi
10033817:	call   0x10003340
1003381c:	xor    edi,edi
1003381e:	push   0x1007ba6c
10033823:	push   edi
10033824:	push   0x100826fa
10033829:	mov    ds:0x10089ccc,eax
1003382e:	mov    DWORD PTR ds:0x10089cd0,edi
10033834:	call   0x10003340
10033839:	push   0x1007ba3c
1003383e:	push   esi
1003383f:	push   0x1007ba38
10033844:	mov    ds:0x10089cd4,eax
10033849:	mov    DWORD PTR ds:0x10089cd8,esi
1003384f:	call   0x10003340
10033854:	add    esp,0x48
10033857:	push   0x1007b9fc
1003385c:	push   esi
1003385d:	push   0x1007b9f8
10033862:	mov    ds:0x10089cdc,eax
10033867:	mov    DWORD PTR ds:0x10089ce0,esi
1003386d:	call   0x10003340
10033872:	push   0x1007b9bc
10033877:	push   esi
10033878:	push   0x1007b9b8
1003387d:	mov    ds:0x10089ce4,eax
10033882:	mov    DWORD PTR ds:0x10089ce8,esi
10033888:	call   0x10003340
1003388d:	push   0x1007b984
10033892:	push   edi
10033893:	push   0x100826fa
10033898:	mov    ds:0x10089cec,eax
1003389d:	mov    DWORD PTR ds:0x10089cf0,edi
100338a3:	call   0x10003340
100338a8:	push   0x1007b960
100338ad:	push   edi
100338ae:	push   0x100826fa
100338b3:	mov    ds:0x10089cf4,eax
100338b8:	mov    DWORD PTR ds:0x10089cf8,edi
100338be:	call   0x10003340
100338c3:	mov    ds:0x10089cfc,eax
100338c8:	mov    DWORD PTR ds:0x10089d00,edi
100338ce:	push   0x1007b938
100338d3:	push   edi
100338d4:	push   0x100826fa
100338d9:	call   0x10003340
100338de:	push   0x1007b8fc
100338e3:	push   esi
100338e4:	push   0x1007b8f8
100338e9:	mov    ds:0x10089d04,eax
100338ee:	mov    DWORD PTR ds:0x10089d08,esi
100338f4:	call   0x10003340
100338f9:	add    esp,0x48
100338fc:	push   0x1007b8c8
10033901:	push   esi
10033902:	push   0x1007b8c4
10033907:	mov    ds:0x10089d0c,eax
1003390c:	mov    DWORD PTR ds:0x10089d10,esi
10033912:	call   0x10003340
10033917:	push   0x1007b89c
1003391c:	push   esi
1003391d:	push   0x1007b898
10033922:	mov    ds:0x10089d14,eax
10033927:	mov    DWORD PTR ds:0x10089d18,esi
1003392d:	call   0x10003340
10033932:	push   0x1007b86c
10033937:	push   esi
10033938:	push   0x1007b868
1003393d:	mov    ds:0x10089d1c,eax
10033942:	mov    DWORD PTR ds:0x10089d20,esi
10033948:	call   0x10003340
1003394d:	push   0x1007b834
10033952:	push   esi
10033953:	push   0x1007b830
10033958:	mov    ds:0x10089d24,eax
1003395d:	mov    DWORD PTR ds:0x10089d28,esi
10033963:	call   0x10003340
10033968:	push   0x1007b804
1003396d:	push   edi
1003396e:	push   0x100826fa
10033973:	mov    ds:0x10089d2c,eax
10033978:	mov    DWORD PTR ds:0x10089d30,edi
1003397e:	call   0x10003340
10033983:	push   0x1007b7c8
10033988:	push   edi
10033989:	push   0x100826fa
1003398e:	mov    ds:0x10089d34,eax
10033993:	mov    DWORD PTR ds:0x10089d38,edi
10033999:	call   0x10003340
1003399e:	add    esp,0x48
100339a1:	push   0x1007b7a4
100339a6:	push   esi
100339a7:	push   0x1007b7a0
100339ac:	mov    ds:0x10089d3c,eax
100339b1:	mov    DWORD PTR ds:0x10089d40,esi
100339b7:	call   0x10003340
100339bc:	push   0x1007b760
100339c1:	push   esi
100339c2:	push   0x1007b758
100339c7:	mov    ds:0x10089d44,eax
100339cc:	mov    DWORD PTR ds:0x10089d48,esi
100339d2:	call   0x10003340
100339d7:	add    esp,0x18
100339da:	pop    edi
100339db:	pop    esi
100339dc:	mov    ds:0x10089d4c,eax
100339e1:	pop    ebx
100339e2:	ret    
100339e3:	call   DWORD PTR ds:0x100341ec
100339e9:	push   0x10033baf
100339ee:	mov    DWORD PTR ds:0x10096c74,0x1007d550
100339f8:	mov    ds:0x10096c78,eax
100339fd:	mov    BYTE PTR ds:0x10096c7c,0x0
10033a04:	call   0x10016057
10033a09:	pop    ecx
10033a0a:	ret    
10033a0b:	push   0x10096c74
10033a10:	mov    ecx,0x10096c80
10033a15:	call   0x10015577
10033a1a:	push   0x10033bb9
10033a1f:	call   0x10016057
10033a24:	pop    ecx
10033a25:	ret    
10033a26:	mov    ecx,0x10096c9c
10033a2b:	call   0x10015900
10033a30:	push   0x10033bc4
10033a35:	call   0x10016057
10033a3a:	pop    ecx
10033a3b:	ret    
10033a3c:	mov    ecx,0x10096cd8
10033a41:	call   0x100158da
10033a46:	push   0x10033bce
10033a4b:	call   0x10016057
10033a50:	pop    ecx
10033a51:	ret    
10033a52:	push   0x10033bd8
10033a57:	call   0x10016057
10033a5c:	pop    ecx
10033a5d:	ret    
10033a5e:	mov    ecx,0x10096dd0
10033a63:	call   0x10015a4a
10033a68:	push   0x10033be2
10033a6d:	call   0x10016057
10033a72:	pop    ecx
10033a73:	ret    
10033a74:	mov    ecx,0x10096e1c
10033a79:	call   0x10015a4a
10033a7e:	push   0x10033bec
10033a83:	call   0x10016057
10033a88:	pop    ecx
10033a89:	ret    
10033a8a:	push   0x10033bf6
10033a8f:	call   0x10016057
10033a94:	pop    ecx
10033a95:	ret    
10033a96:	int3   
10033a97:	int3   
10033a98:	int3   
10033a99:	int3   
10033a9a:	int3   
10033a9b:	int3   
10033a9c:	int3   
10033a9d:	int3   
10033a9e:	int3   
10033a9f:	int3   
10033aa0:	push   ebp
10033aa1:	mov    ebp,esp
10033aa3:	and    esp,0xfffffff8
10033aa6:	mov    eax,ds:0x1009790c
10033aab:	mov    edx,DWORD PTR [eax]
10033aad:	sub    esp,0xc
10033ab0:	push   esi
10033ab1:	push   eax
10033ab2:	mov    ecx,0x10097908
10033ab7:	push   ecx
10033ab8:	push   edx
10033ab9:	mov    esi,ecx
10033abb:	push   esi
10033abc:	lea    eax,[esp+0x18]
10033ac0:	push   eax
10033ac1:	call   0x10005e50
10033ac6:	mov    ecx,DWORD PTR ds:0x1009790c
10033acc:	push   ecx
10033acd:	call   0x10015b26
10033ad2:	add    esp,0x4
10033ad5:	xor    eax,eax
10033ad7:	mov    ds:0x1009790c,eax
10033adc:	mov    ds:0x10097910,eax
10033ae1:	pop    esi
10033ae2:	mov    esp,ebp
10033ae4:	pop    ebp
10033ae5:	ret    
10033ae6:	int3   
10033ae7:	int3   
10033ae8:	int3   
10033ae9:	int3   
10033aea:	int3   
10033aeb:	int3   
10033aec:	int3   
10033aed:	int3   
10033aee:	int3   
10033aef:	int3   
10033af0:	push   ebp
10033af1:	mov    ebp,esp
10033af3:	and    esp,0xfffffff8
10033af6:	mov    eax,ds:0x1009791c
10033afb:	mov    edx,DWORD PTR [eax]
10033afd:	sub    esp,0xc
10033b00:	push   esi
10033b01:	push   eax
10033b02:	mov    ecx,0x10097918
10033b07:	push   ecx
10033b08:	push   edx
10033b09:	mov    esi,ecx
10033b0b:	push   esi
10033b0c:	lea    eax,[esp+0x18]
10033b10:	push   eax
10033b11:	call   0x10005b50
10033b16:	mov    ecx,DWORD PTR ds:0x1009791c
10033b1c:	push   ecx
10033b1d:	call   0x10015b26
10033b22:	add    esp,0x4
10033b25:	xor    eax,eax
10033b27:	mov    ds:0x1009791c,eax
10033b2c:	mov    ds:0x10097920,eax
10033b31:	pop    esi
10033b32:	mov    esp,ebp
10033b34:	pop    ebp
10033b35:	ret    
10033b36:	int3   
10033b37:	int3   
10033b38:	int3   
10033b39:	int3   
10033b3a:	int3   
10033b3b:	int3   
10033b3c:	int3   
10033b3d:	int3   
10033b3e:	int3   
10033b3f:	int3   
10033b40:	push   ebp
10033b41:	mov    ebp,esp
10033b43:	mov    ecx,0x10096934
10033b48:	call   0x1000e3f0
10033b4d:	pop    ebp
10033b4e:	ret    
10033b4f:	int3   
10033b50:	push   ebp
10033b51:	mov    ebp,esp
10033b53:	mov    ecx,0x10096968
10033b58:	call   0x10003290
10033b5d:	pop    ebp
10033b5e:	ret    
10033b5f:	int3   
10033b60:	push   ebp
10033b61:	mov    ebp,esp
10033b63:	mov    ecx,0x1009694c
10033b68:	call   0x10002bb0
10033b6d:	pop    ebp
10033b6e:	ret    
10033b6f:	int3   
10033b70:	push   ebp
10033b71:	mov    ebp,esp
10033b73:	mov    ecx,0x1009697c
10033b78:	call   0x10002bb0
10033b7d:	pop    ebp
10033b7e:	ret    
10033b7f:	int3   
10033b80:	push   ebp
10033b81:	mov    ebp,esp
10033b83:	mov    ecx,0x10096978
10033b88:	call   0x1000f9a0
10033b8d:	pop    ebp
10033b8e:	ret    
10033b8f:	int3   
10033b90:	push   ebp
10033b91:	mov    ebp,esp
10033b93:	mov    ecx,0x1009696c
10033b98:	call   0x1000f9a0
10033b9d:	pop    ebp
10033b9e:	ret    
10033b9f:	int3   
10033ba0:	push   ebp
10033ba1:	mov    ebp,esp
10033ba3:	mov    ecx,0x10096aac
10033ba8:	call   0x10011b50
10033bad:	pop    ebp
10033bae:	ret    
10033baf:	mov    ecx,0x10096c74
10033bb4:	jmp    0x100154cb
10033bb9:	mov    DWORD PTR ds:0x10096c80,0x1007d564
10033bc3:	ret    
10033bc4:	mov    ecx,0x10096c9c
10033bc9:	jmp    0x1001586e
10033bce:	mov    ecx,0x10096cd8
10033bd3:	jmp    0x100159af
10033bd8:	mov    ecx,0x10096d24
10033bdd:	jmp    0x100015d0
10033be2:	mov    ecx,0x10096dd0
10033be7:	jmp    0x10015a79
10033bec:	mov    ecx,0x10096e1c
10033bf1:	jmp    0x10015a79
10033bf6:	mov    ecx,0x10096e1d
10033bfb:	jmp    0x10015ad5
10033c00:	mov    DWORD PTR ds:0x10096e24,0x1003450c
10033c0a:	mov    ecx,0x10096e24
10033c0f:	jmp    0x1001637c
