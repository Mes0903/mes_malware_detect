
4dac9b991fc15db6ad07277e960dd7aaf964c8d228cadba294f7891836221f62.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    eax,DWORD PTR [ebp-0x50]
  401009:	mov    ecx,DWORD PTR [ebp-0x4c]
  40100c:	mov    edx,DWORD PTR [ebp-0x50]
  40100f:	add    DWORD PTR ds:0x428451,0x4284f1
  401019:	sub    eax,edx
  40101b:	mov    DWORD PTR ds:0x428475,ecx
  401021:	push   edi
  401022:	mov    edi,DWORD PTR [ebp-0x4c]
  401025:	mov    DWORD PTR [ebp-0x50],eax
  401028:	not    edx
  40102a:	sbb    ecx,edi
  40102c:	inc    DWORD PTR ds:0x42835d
  401032:	mov    DWORD PTR [ebp-0x4c],ecx
  401035:	or     DWORD PTR [ebp-0x50],0xcb78dc42
  40103c:	sub    DWORD PTR ds:0x428469,ecx
  401042:	or     DWORD PTR [ebp-0x4c],0x9c2b8ae8
  401049:	mov    edx,DWORD PTR ds:0x428431
  40104f:	xor    DWORD PTR ds:0x428575,edx
  401055:	mov    eax,DWORD PTR [ebp-0x58]
  401058:	jmp    0x4013f9
  40105d:	(bad)  
  40105e:	mov    edi,0x9098bf8d
  401063:	cwde   
  401064:	(bad)  
  401065:	mov    cl,BYTE PTR [esi+ebp*4-0x31]
  401069:	dec    ebp
  40106a:	pop    ebp
  40106b:	xchg   esi,eax
  40106c:	jecxz  0x40102c
  40106e:	mov    esi,0xc4bdbebe
  401073:	mov    esi,0x2c7ad5be
  401078:	xchg   edx,eax
  401079:	push   ss
  40107a:	ds out 0x1f,al
  40107d:	(bad)  [eax+0x5be9ef0]
  401083:	xchg   BYTE PTR [edi],bl
  401085:	(bad)  
  401086:	mov    ebp,0x6e65c5dd
  40108b:	mov    ecx,0x723deed2
  401090:	repnz cmc 
  401092:	adc    al,0x95
  401094:	out    0xc5,eax
  401096:	ss mov cl,0x7e
  401099:	test   DWORD PTR [edx+0xd339a63],esp
  40109f:	repz or BYTE PTR [ecx-0x2c],al
  4010a3:	fisub  WORD PTR [ebx+0x39d2cc4]
  4010a9:	mov    ?,WORD PTR [esp+eax*4-0x44]
  4010ad:	int    0xf4
  4010af:	cmp    esp,eax
  4010b1:	icebp  
  4010b2:	arpl   WORD PTR ds:0xfe52947e,dx
  4010b8:	call   0x4be36aff
  4010bd:	pop    eax
  4010be:	rcr    bl,1
  4010c0:	inc    esi
  4010c1:	dec    ebp
  4010c2:	shl    DWORD PTR [edx+0x79],0x32
  4010c6:	sub    edi,DWORD PTR [ebx-0x13b6c9c8]
  4010cc:	inc    edx
  4010cd:	(bad)
  4010d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4010d1:	mov    eax,0xc3cf49c3
  4010d6:	jnp    0x40108a
  4010d8:	cmp    DWORD PTR [esi+edi*2],edi
  4010db:	push   ebp
  4010dc:	cmp    eax,0xa73f476a
  4010e1:	ret    
  4010e2:	cmp    edx,DWORD PTR [edx-0x12e35830]
  4010e8:	sbb    esp,DWORD PTR gs:[eax-0x33da45c9]
  4010ef:	inc    esi
  4010f0:	push   ecx
  4010f1:	retf   0xb76
  4010f4:	mov    cl,0x85
  4010f6:	jp     0x4010c0
  4010f8:	adc    DWORD PTR [edx+0x2e0c55],ebp
  4010fe:	fwait
  4010ff:	(bad)  
  401100:	mov    ds:0x7e6f619c,eax
  401105:	dec    edx
  401106:	test   eax,0xf9b559ec
  40110b:	stc    
  40110c:	fisub  DWORD PTR [ebx]
  40110e:	daa    
  40110f:	adc    eax,0x7e12271f
  401114:	or     al,0xfb
  401116:	cwde   
  401117:	xchg   edi,eax
  401118:	mov    BYTE PTR [ebx-0x3690ab51],dh
  40111e:	call   0xe53d:0xfcbbea8b
  401125:	ret    
  401126:	fiadd  WORD PTR [edx]
  401128:	arpl   di,ax
  40112a:	xlat   BYTE PTR ds:[ebx]
  40112b:	fadd   st(5),st
  40112d:	xchg   ebx,eax
  40112e:	or     BYTE PTR [ecx-0x39],ah
  401131:	jnp    0x401141
  401133:	(bad)  
  401134:	xlat   BYTE PTR ds:[ebx]
  401135:	lock mov ch,bl
  401138:	in     eax,dx
  401139:	(bad)  
  40113b:	inc    esi
  40113c:	fcomp  QWORD PTR [esi+0xf]
  40113f:	out    0x37,eax
  401141:	imul   ecx,DWORD PTR [edi-0x48f3f29b],0xffffffd9
  401148:	xchg   esi,eax
  401149:	cdq    
  40114a:	hlt    
  40114b:	jle    0x401140
  40114d:	jnp    0x401196
  40114f:	mov    ss,WORD PTR [edx]
  401151:	out    0x72,al
  401153:	into   
  401154:	in     al,0x85
  401156:	loopne 0x40116a
  401158:	loop   0x4011bb
  40115a:	retf   
  40115b:	xchg   esi,eax
  40115c:	jl     0x4011b3
  40115e:	xchg   bl,ah
  401160:	cli    
  401161:	sbb    al,0xe9
  401163:	and    DWORD PTR [eax-0x82ca8cc],eax
  401169:	aas    
  40116a:	fidivr WORD PTR [ecx]
  40116c:	xor    eax,DWORD PTR [esp+eax*2+0x2d]
  401170:	scas   eax,DWORD PTR es:[edi]
  401171:	nop
  401172:	leave  
  401173:	xchg   edi,eax
  401174:	pop    eax
  401175:	repnz push DWORD PTR [ebp+0x25]
  401179:	adc    esi,DWORD PTR [edx-0x4b]
  40117c:	mov    cl,0xc5
  40117e:	fwait
  40117f:	pop    ss
  401180:	mov    edx,0xbada4c51
  401185:	xchg   ecx,eax
  401186:	sub    esi,DWORD PTR [ebx-0x4acc94d6]
  40118c:	cli    
  40118d:	retf   
  40118e:	dec    esp
  40118f:	fmul   QWORD PTR [esp+edx*2+0x11]
  401193:	push   edi
  401194:	and    bl,BYTE PTR [ebp-0x73f348db]
  40119a:	aaa    
  40119b:	loop   0x4011cb
  40119d:	call   0xe28e:0xd18630bb
  4011a4:	je     0x40119a
  4011a6:	pusha  
  4011a7:	or     ebp,ecx
  4011a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011ab:	pop    ss
  4011ac:	les    eax,FWORD PTR [edi+0x34]
  4011af:	fisttp DWORD PTR [esi-0x65590e1f]
  4011b5:	int    0x5a
  4011b7:	mov    al,ds:0x2a6937a6
  4011bc:	mov    ds:0xb10564a,eax
  4011c1:	sbb    ch,BYTE PTR [ebx+0x5f]
  4011c4:	je     0x4011ed
  4011c6:	adc    esp,eax
  4011c8:	outs   dx,DWORD PTR ds:[esi]
  4011c9:	mov    ecx,0xa6011f16
  4011ce:	mov    ch,al
  4011d0:	fwait
  4011d1:	sbb    bh,cl
  4011d3:	xchg   ebx,eax
  4011d4:	sbb    ecx,edx
  4011d6:	mov    bh,0x35
  4011d8:	cli    
  4011d9:	adc    al,0x82
  4011db:	mov    BYTE PTR [eax+0x5d],dh
  4011de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4011df:	pop    ebp
  4011e0:	push   ss
  4011e1:	xchg   esp,eax
  4011e2:	push   ecx
  4011e3:	retf   
  4011e4:	sbb    al,0x9e
  4011e6:	jl     0x4011bf
  4011e8:	fiadd  WORD PTR [ecx+0x7d510ed6]
  4011ee:	xor    al,al
  4011f0:	shl    DWORD PTR [esi+0x43],1
  4011f3:	adc    cl,BYTE PTR [ebx-0x37a08c60]
  4011f9:	xor    dl,BYTE PTR [edi]
  4011fb:	je     0x4011b5
  4011fd:	cs retf 
  4011ff:	add    eax,0xc10c342f
  401204:	xchg   esp,eax
  401205:	loop   0x401285
  401207:	hlt    
  401208:	sbb    ebp,DWORD PTR [eax]
  40120a:	ins    DWORD PTR es:[edi],dx
  40120b:	rol    BYTE PTR [ecx+0x2d],cl
  40120e:	mov    ebx,0x36504c88
  401213:	inc    ebx
  401214:	hlt    
  401215:	(bad)  
  401216:	mov    WORD PTR [edi+0x4e],?
  401219:	xchg   edx,eax
  40121a:	test   eax,0x586bd63e
  40121f:	mov    ebx,0x7ec7c53b
  401224:	inc    esi
  401225:	add    eax,0xa5f99607
  40122a:	ret    0x43c8
  40122d:	test   al,0xab
  40122f:	js     0x4011d4
  401231:	mov    edi,0x32dca4e6
  401236:	sbb    ch,cl
  401238:	and    al,0xdc
  40123a:	xchg   ebp,eax
  40123b:	or     DWORD PTR [edi-0x6f],ebp
  40123e:	mov    gs,WORD PTR [eax]
  401240:	jmp    0x75a6:0xd78f7018
  401247:	cmp    BYTE PTR [eax+0x5a962b65],cl
  40124d:	clc    
  40124e:	xor    bh,BYTE PTR [ebp+0x593a9205]
  401254:	dec    ebx
  401255:	pop    ebp
  401256:	aaa    
  401257:	jp     0x4011f8
  401259:	ja     0x401223
  40125b:	mov    ch,0x93
  40125d:	ficomp WORD PTR [ecx]
  40125f:	neg    DWORD PTR [edx-0x2f621991]
  401265:	inc    esi
  401266:	test   DWORD PTR [ebp-0x5],edx
  401269:	push   ebp
  40126a:	in     al,dx
  40126b:	cmp    al,0x12
  40126d:	gs mov ebx,0xfd5428de
  401273:	stc    
  401274:	xor    al,0xb
  401276:	icebp  
  401277:	xchg   ecx,eax
  401278:	fcomip st,st(0)
  40127a:	pop    esi
  40127b:	or     DWORD PTR [esi],edi
  40127d:	jl     0x40127b
  40127f:	jne    0x4012d5
  401281:	ret    0xf5a5
  401284:	punpcklbw mm3,mm5
  401287:	add    al,0x94
  401289:	add    eax,0x7809e856
  40128e:	pop    ss
  40128f:	jle    0x401234
  401291:	cld    
  401292:	jmp    0x401254
  401294:	clc    
  401295:	mov    ?,WORD PTR [edx]
  401297:	push   ebp
  401298:	fbstp  TBYTE PTR [edx+0x2e]
  40129b:	mov    eax,ds:0x18d5490c
  4012a0:	dec    ebx
  4012a1:	stc    
  4012a2:	push   ds
  4012a3:	das    
  4012a4:	js     0x401253
  4012a6:	enter  0x8555,0xc
  4012aa:	outs   dx,BYTE PTR ds:[esi]
  4012ac:	out    dx,al
  4012ad:	xchg   esp,eax
  4012ae:	xchg   edi,eax
  4012af:	cmp    BYTE PTR [edx+0x2d],dl
  4012b2:	inc    ecx
  4012b3:	or     DWORD PTR [ebx],esp
  4012b5:	gs in  al,0x19
  4012b8:	pusha  
  4012b9:	outs   dx,DWORD PTR ds:[esi]
  4012ba:	xor    edi,DWORD PTR [ebx+0x2c]
  4012bd:	inc    DWORD PTR [edx-0x1c2497fd]
  4012c3:	cmp    dh,BYTE PTR [esi]
  4012c5:	inc    ebx
  4012c6:	inc    eax
  4012c7:	push   0x7ed1e524
  4012cc:	data16 or ch,BYTE PTR [edi+0x48b5add]
  4012d3:	xor    bl,dl
  4012d5:	(bad)  
  4012d6:	xor    DWORD PTR [ebx+0x7f],ebp
  4012d9:	ins    DWORD PTR es:[edi],dx
  4012da:	aad    0xe6
  4012dc:	jns    0x401305
  4012de:	mov    ebp,DWORD PTR [ebx]
  4012e0:	arpl   WORD PTR [ebp+0x7a3af1ef],bx
  4012e6:	hlt    
  4012e7:	aas    
  4012e8:	ret    
  4012e9:	pop    edi
  4012ea:	maskmovq mm0,(bad)
  4012eb:	test   DWORD PTR [ebx+edx*2+0x3a],0xe5b78bad
  4012f3:	gs cmc 
  4012f5:	mov    ch,0x38
  4012f7:	push   ds
  4012f8:	dec    ecx
  4012f9:	and    al,bl
  4012fb:	dec    edi
  4012fc:	mov    al,0x56
  4012fe:	aam    0x29
  401300:	retf   
  401301:	push   edi
  401302:	mov    BYTE PTR [edi+edx*2],al
  401305:	cmp    BYTE PTR [esi],0xc7
  401308:	inc    ebp
  401309:	(bad)  
  40130a:	jg     0x401386
  40130c:	(bad)  
  40130d:	push   esp
  40130e:	push   cs
  40130f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401310:	push   esi
  401311:	mov    bh,0x12
  401313:	push   ds
  401314:	imul   esi,DWORD PTR [edi+0x5],0x5bdb3c6
  40131b:	das    
  40131c:	xor    esp,eax
  40131e:	jmp    0xaa8254a5
  401323:	das    
  401324:	cmp    DWORD PTR [edx-0x1684a86a],0x5c
  40132b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40132c:	vshufps ymm6,ymm0,YMMWORD PTR [esi-0x80],0x30
  401332:	cwde   
  401333:	mov    dl,0xdd
  401335:	sbb    BYTE PTR ds:0x5a8ec128,0x97
  40133c:	rcr    edx,1
  40133e:	add    eax,0x55d2ac1d
  401343:	add    edi,0xdadd3c00
  401349:	pop    DWORD PTR [edx+edx*1]
  40134c:	fs mov edx,0x4aa35e0d
  401352:	ror    dh,1
  401354:	ja     0x4013d4
  401356:	sbb    BYTE PTR [eax-0x7c],ch
  401359:	inc    ebx
  40135a:	jge    0x40135c
  40135c:	rcl    edi,cl
  40135e:	mov    bh,0x9d
  401360:	or     eax,0x30b80286
  401365:	xchg   BYTE PTR [ecx+0x122489b3],bh
  40136b:	cmp    dh,BYTE PTR [edi+0x10]
  40136e:	add    ch,BYTE PTR [edi+0x64f06790]
  401374:	cmp    edi,DWORD PTR [eax+0x7a]
  401377:	pop    es
  401378:	push   ebx
  401379:	sub    al,0x81
  40137b:	ins    DWORD PTR es:[edi],dx
  40137c:	fdivr  DWORD PTR [edi-0x673bf030]
  401382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401383:	ficomp WORD PTR [esi]
  401385:	add    DWORD PTR [ebx-0x7e],esp
  401388:	ds ss int 0x3
  40138c:	in     eax,0x76
  40138e:	jge    0x401365
  401390:	jbe    0x40136e
  401392:	aam    0x60
  401394:	les    eax,FWORD PTR [ebx]
  401396:	xchg   esi,eax
  401397:	fnstenv [ebx]
  401399:	dec    ebp
  40139a:	fucomip st,st(1)
  40139c:	jnp    0x4013db
  40139e:	fsubr  st(1),st
  4013a0:	jno    0x401339
  4013a2:	cs inc ebp
  4013a4:	jmp    0xe3892a1e
  4013a9:	and    BYTE PTR ds:0xad61a70d,bh
  4013af:	sub    bh,BYTE PTR [eax+0x61ee460e]
  4013b5:	(bad)  
  4013b6:	repnz mov ?,edx
  4013b9:	dec    edi
  4013ba:	ss cwde 
  4013bc:	jbe    0x40134a
  4013be:	and    dl,BYTE PTR [ecx+ebx*4+0x20]
  4013c2:	fsubr  QWORD PTR [eax-0x4c22211]
  4013c8:	test   ch,al
  4013ca:	xchg   esi,eax
  4013cb:	ret    0x7df8
  4013ce:	and    DWORD PTR [edi],ecx
  4013d0:	in     eax,dx
  4013d1:	push   ebp
  4013d2:	aam    0xf3
  4013d4:	(bad)  
  4013d5:	in     eax,0xa5
  4013d7:	sub    ecx,edi
  4013d9:	xchg   ecx,eax
  4013da:	pop    ebp
  4013db:	xor    BYTE PTR [eax+0x4227ae8b],al
  4013e1:	rcr    DWORD PTR [eax-0xe80546a],1
  4013e7:	popa   
  4013e8:	mov    al,0x6f
  4013ea:	jp     0x4013b0
  4013ec:	repz pop esi
  4013ee:	mov    eax,0x51f29b6a
  4013f4:	pop    ebp
  4013f5:	(bad)  
  4013f6:	je     0x40144e
  4013f8:	ror    BYTE PTR [ebx+0x3d03ac4d],cl
  4013fe:	rol    DWORD PTR [edx+eax*2-0x57aa7500],1
  401405:	sbb    DWORD PTR ds:0x4284e9,ecx
  40140b:	mov    edi,DWORD PTR [ebp-0x54]
  40140e:	sub    DWORD PTR ds:0x428575,0x1812
  401418:	sub    eax,edx
  40141a:	movzx  edx,BYTE PTR ds:0x428461
  401421:	jmp    0x4017c2
  401426:	test   BYTE PTR [edx+0x7cbcfc08],0x3a
  40142d:	mov    WORD PTR [esi+0x6e],es
  401430:	rcl    DWORD PTR [eax-0x5b736104],cl
  401436:	mov    ebp,0xbdbebec4
  40143b:	les    edi,FWORD PTR [esi-0xf889f42]
  401441:	xchg   ecx,eax
  401442:	jg     0x40143b
  401444:	or     dh,BYTE PTR [eax-0x73]
  401447:	xchg   esp,eax
  401448:	loope  0x401495
  40144a:	jp     0x4013fc
  40144c:	das    
  40144d:	inc    esi
  40144e:	push   cs
  40144f:	bswap  esi
  401451:	das    
  401452:	ins    DWORD PTR es:[edi],dx
  401453:	add    DWORD PTR [esi-0xd703d7c],edi
  401459:	add    ch,BYTE PTR [eax-0x56ccf08d]
  40145f:	int3   
  401460:	jmp    0x4013e2
  401462:	mov    ebx,0x19506b48
  401467:	xor    al,0x1
  401469:	cmp    BYTE PTR [ecx-0xa],dh
  40146c:	lods   eax,DWORD PTR ds:[esi]
  40146d:	(bad)  
  40146e:	mov    eax,0x919750d
  401473:	push   edx
  401474:	les    edi,FWORD PTR [ebp+eiz*1+0x4f]
  401478:	scas   eax,DWORD PTR es:[edi]
  401479:	push   0xfd3a6688
  40147e:	fimul  WORD PTR [ecx+eiz*1+0x3b25fd75]
  401485:	fwait
  401486:	mov    dl,0x4e
  401488:	ret    
  401489:	add    BYTE PTR [ebx-0x43622603],bl
  40148f:	sub    cl,BYTE PTR es:[ebx]
  401492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401493:	add    eax,0x97efb5dd
  401498:	mov    ch,0xd5
  40149a:	loopne 0x40148e
  40149c:	pop    edx
  40149d:	sub    eax,0xfb621710
  4014a2:	pop    edi
  4014a3:	and    dl,BYTE PTR [ecx-0x60]
  4014a6:	loopne 0x401457
  4014a8:	(bad)  
  4014a9:	fcomp  DWORD PTR [edi]
  4014ab:	mov    ecx,0x981f1132
  4014b0:	or     eax,0x24a88d9b
  4014b5:	jmp    0xc7bc97b2
  4014ba:	jle    0x401486
  4014bc:	jge    0x40151e
  4014be:	(bad)  
  4014bf:	out    dx,al
  4014c0:	inc    ecx
  4014c1:	sbb    eax,0xa3a4e92
  4014c6:	lea    edx,[esi+0x2b]
  4014c9:	fisubr WORD PTR [edx]
  4014cb:	inc    esi
  4014cc:	sahf   
  4014cd:	jb     0x401489
  4014cf:	or     dh,BYTE PTR [ebx+edi*1]
  4014d2:	jl     0x40145e
  4014d4:	cmp    ecx,ebx
  4014d6:	pop    eax
  4014d7:	mov    esp,ebx
  4014d9:	mov    edi,0x7bd7e4df
  4014de:	in     eax,dx
  4014df:	dec    ecx
  4014e0:	or     DWORD PTR [ecx-0x65],0x7715a826
  4014e7:	ins    BYTE PTR es:[edi],dx
  4014e8:	xor    dh,bh
  4014ea:	or     al,0x79
  4014ec:	jne    0x401490
  4014ee:	shl    BYTE PTR [esi],1
  4014f0:	(bad)  
  4014f1:	pop    ds
  4014f2:	add    cl,ah
  4014f4:	mov    dl,0x5a
  4014f6:	(bad)  
  4014f7:	dec    esp
  4014f8:	test   BYTE PTR [eax+ebx*2-0x3216d020],bh
  4014ff:	hlt    
  401500:	pop    ebx
  401501:	cmp    al,0x2d
  401503:	adc    eax,0x37260cb7
  401508:	daa    
  401509:	popa   
  40150a:	xchg   ebx,ecx
  40150c:	lea    edi,[edi]
  40150e:	loop   0x4014a1
  401510:	ins    BYTE PTR es:[edi],dx
  401511:	mov    edi,0xa85fb6d6
  401516:	stc    
  401517:	push   ecx
  401518:	test   DWORD PTR [ebx+0x329f3fd],0x83212df2
  401522:	pop    edx
  401523:	imul   esp,DWORD PTR [esi+0x62ce1623],0x869859f8
  40152d:	jns    0x401531
  40152f:	cli    
  401530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401531:	sub    eax,0x7637b37c
  401536:	jg     0x4014ce
  401538:	inc    ebx
  401539:	mov    ds:0x1b8fed92,eax
  40153e:	jp     0x401582
  401540:	sar    dl,cl
  401542:	sub    eax,0x2c56fea6
  401547:	inc    edi
  401548:	or     ch,0x35
  40154b:	aam    0x6c
  40154d:	dec    ecx
  40154e:	lock cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  401551:	inc    ecx
  401552:	mov    ecx,0xa7fce48c
  401557:	imul   esi,esi,0x26
  40155a:	or     esp,edx
  40155c:	fidiv  WORD PTR [ecx-0x45]
  40155f:	in     eax,0x1e
  401561:	adc    eax,0xda46e39d
  401566:	ins    DWORD PTR es:[edi],dx
  401567:	cli    
  401568:	retf   
  401569:	jg     0x4015e2
  40156b:	and    BYTE PTR [eax],dh
  40156d:	sub    WORD PTR [esp+edi*8-0x13],bx
  401572:	mov    WORD PTR [ebx+edx*4-0x55],?
  401576:	ret    
  401577:	push   ebp
  401578:	push   ds
  401579:	xlat   BYTE PTR ds:[ebx]
  40157a:	lea    esp,[edi]
  40157c:	scas   eax,DWORD PTR es:[edi]
  40157d:	or     edx,eax
  40157f:	mov    al,0x34
  401581:	push   esp
  401582:	fsub   DWORD PTR [edi-0x7be4af56]
  401588:	inc    ebp
  401589:	pop    edx
  40158a:	ins    DWORD PTR es:[edi],dx
  40158b:	sub    eax,0x34ee11c0
  401590:	les    eax,FWORD PTR [edi+ecx*4+0x2a74c273]
  401597:	std    
  401598:	fld    st(1)
  40159a:	fst    QWORD PTR [ebx]
  40159c:	and    al,0x9c
  40159e:	adc    dh,BYTE PTR ds:0x95c711d4
  4015a4:	or     dl,dl
  4015a6:	xlat   BYTE PTR ds:[ebx]
  4015a7:	ja     0x4015e7
  4015a9:	xchg   ecx,eax
  4015aa:	les    edx,FWORD PTR [eax+ecx*2-0xcd73f5f]
  4015b1:	ja     0x401631
  4015b3:	cmp    edi,DWORD PTR [edx-0x46152979]
  4015b9:	aam    0x6a
  4015bb:	out    0xa5,eax
  4015bd:	shl    eax,cl
  4015bf:	sub    eax,0x1b84c4ab
  4015c4:	dec    ebp
  4015c5:	test   ebp,ebp
  4015c7:	pop    esp
  4015c8:	or     DWORD PTR [esi],eax
  4015ca:	test   BYTE PTR [ecx-0x4d],ah
  4015cd:	imul   ebx,DWORD PTR [ecx+0x67414116],0xffffffda
  4015d4:	clc    
  4015d5:	fstp   QWORD PTR [ebp-0x20f1267b]
  4015db:	retf   
  4015dc:	cmp    edi,ebp
  4015de:	adc    ebx,DWORD PTR [edx+0x483fea58]
  4015e4:	sub    BYTE PTR [edx],bl
  4015e6:	mov    ebx,DWORD PTR [esi+0xe21b1aa]
  4015ec:	popf   
  4015ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015ee:	pusha  
  4015ef:	xchg   edi,eax
  4015f0:	mov    al,ds:0x48641fdd
  4015f5:	loopne 0x401666
  4015f7:	cmp    edx,DWORD PTR [edi-0x3514bbb7]
  4015fd:	mov    edi,0x73d3a649
  401602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401603:	adc    al,0x14
  401605:	xor    al,0x5
  401607:	jecxz  0x401650
  401609:	mov    esp,0x7d2d9ca7
  40160e:	dec    ebx
  40160f:	mov    al,ds:0xcd07ff6f
  401614:	xchg   esi,eax
  401615:	ins    BYTE PTR es:[edi],dx
  401616:	jg     0x40161d
  401618:	pop    edi
  401619:	sbb    BYTE PTR [ecx-0x58],bh
  40161c:	sub    edi,ebx
  40161e:	fld    DWORD PTR [eax+0x4e5acc8b]
  401624:	mov    ebx,ebx
  401626:	sti    
  401627:	jns    0x40160f
  401629:	push   edi
  40162a:	mov    ds:0x7b2fbcc0,eax
  40162f:	and    ch,BYTE PTR [ebx]
  401631:	loope  0x401607
  401633:	jmp    FWORD PTR ss:[edi+0x1d]
  401637:	jno    0x401657
  401639:	out    0x88,eax
  40163b:	jb     0x4016af
  40163d:	test   al,0x9b
  40163f:	jae    0x4015c8
  401641:	cmp    BYTE PTR ds:0x9afd61d8,bl
  401647:	jns    0x4015df
  401649:	(bad)  
  40164a:	call   0x3b31c8b
  40164f:	mov    BYTE PTR [ecx+0x52],ch
  401652:	and    eax,0x47361305
  401657:	mov    ?,WORD PTR [edi+0x64fff033]
  40165d:	add    edi,esp
  40165f:	ja     0x4016de
  401661:	inc    ecx
  401662:	retf   
  401663:	inc    esi
  401664:	repnz mov esp,0x7c498b20
  40166a:	jb     0x4016d7
  40166c:	jo     0x401678
  40166e:	in     al,0x7c
  401670:	daa    
  401671:	mov    ebp,0x34717788
  401676:	imul   edx,DWORD PTR [esi+0x6e79ab21],0x81a01564
  401680:	or     esi,DWORD PTR [esi]
  401682:	cld    
  401683:	dec    ecx
  401684:	or     eax,DWORD PTR [eax+0x1ffd0adf]
  40168a:	call   0xe649:0xf8660ec0
  401691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401692:	into   
  401693:	dec    ebx
  401694:	sti    
  401695:	push   ebp
  401696:	mov    ecx,0x550fd415
  40169b:	daa    
  40169c:	loope  0x401709
  40169e:	mov    ch,ah
  4016a0:	sub    DWORD PTR [eax],esi
  4016a2:	cmp    DWORD PTR [esi],0xffffffe7
  4016a5:	jg     0x401685
  4016a7:	sub    BYTE PTR [ecx-0x13],bl
  4016aa:	xor    edx,DWORD PTR [edx-0x3]
  4016ad:	xlat   BYTE PTR ds:[ebx]
  4016ae:	cmp    ebp,ebx
  4016b0:	out    dx,eax
  4016b1:	je     0x4016b1
  4016b3:	dec    esi
  4016b4:	mov    edi,0xbaca2ff9
  4016b9:	cmp    ebp,ebx
  4016bb:	bound  ebx,QWORD PTR [ebp-0x14]
  4016be:	ret    
  4016bf:	pop    esp
  4016c0:	mov    ss,WORD PTR [edx]
  4016c2:	push   eax
  4016c3:	dec    ebx
  4016c4:	idiv   BYTE PTR [esi]
  4016c6:	(bad)  
  4016c7:	(bad)  
  4016c8:	mov    al,0x4f
  4016ca:	ret    
  4016cb:	jbe    0x401662
  4016cd:	add    eax,0xe7553ecc
  4016d2:	dec    edx
  4016d3:	test   DWORD PTR [ecx-0x312864ba],esi
  4016d9:	gs fwait
  4016db:	fs pop ebp
  4016dd:	sbb    esi,DWORD PTR [esi+0x17b1ccd3]
  4016e3:	mov    esi,0x52852055
  4016e8:	sub    eax,0x61856720
  4016ed:	push   edx
  4016ee:	pop    ds
  4016ef:	xchg   esi,eax
  4016f0:	adc    BYTE PTR [ecx-0x7f017244],dl
  4016f6:	adc    DWORD PTR [esi+0x1d],0x29a2461d
  4016fd:	cs fcmovu st,st(2)
  401700:	shl    DWORD PTR [esi+0x496688f3],0xc7
  401707:	pop    esi
  401708:	mov    ecx,0xfc11574d
  40170d:	shl    BYTE PTR [esi],1
  40170f:	lods   al,BYTE PTR ds:[esi]
  401710:	xor    DWORD PTR [ebx+eax*2],ebp
  401713:	fisubr WORD PTR ds:0x3be5dad8
  401719:	jp     0x401783
  40171b:	jne    0x4016d0
  40171d:	popa   
  40171e:	mov    ecx,0x11ec6c1
  401723:	push   es
  401724:	mov    eax,ds:0xc09c7e16
  401729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40172a:	mov    esp,DWORD PTR [esi]
  40172c:	clc    
  40172d:	xor    edi,DWORD PTR [eax+0x5c]
  401730:	fnsave [edx-0x26]
  401733:	in     eax,dx
  401734:	adc    dl,BYTE PTR [ebx+0x33f1ef90]
  40173a:	and    eax,0x302ad868
  40173f:	or     al,0xa5
  401741:	punpckhdq mm2,QWORD PTR [ebx+0x234d27c2]
  401748:	push   esp
  401749:	push   edx
  40174a:	fiadd  WORD PTR [esi-0x16]
  40174d:	mov    esp,0x93dc8e4
  401752:	xchg   ebx,eax
  401753:	jns    0x401707
  401755:	pop    esp
  401756:	jnp    0x4016e2
  401758:	icebp  
  401759:	addr16 call 0xc926:0x449d5531
  401761:	mov    eax,ds:0xf8c4f11e
  401766:	mov    DWORD PTR [ecx-0x1b],ecx
  401769:	dec    edx
  40176a:	mov    edi,eax
  40176c:	adc    esp,ecx
  40176e:	and    DWORD PTR [edx-0x72],ebx
  401771:	enter  0x8848,0xef
  401775:	(bad)  [esi-0x59538784]
  40177b:	cld    
  40177c:	cli    
  40177d:	adc    al,0xd3
  40177f:	pop    ebx
  401780:	mov    dh,0x4b
  401782:	out    dx,al
  401783:	(bad)  
  401784:	fwait
  401785:	out    0x62,al
  401787:	push   esp
  401788:	fld    DWORD PTR [eax+0x244118ca]
  40178e:	ror    edi,cl
  401790:	pop    eax
  401791:	mov    ebx,0xdde091bd
  401796:	adc    eax,0xe9d02459
  40179b:	lock daa 
  40179d:	mov    cl,0xa3
  40179f:	sbb    ah,dh
  4017a1:	clc    
  4017a2:	add    BYTE PTR [edi+ecx*8-0x1bf04843],0x42
  4017aa:	pop    ss
  4017ab:	and    ebx,eax
  4017ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017ae:	xchg   BYTE PTR [esi],ch
  4017b0:	aaa    
  4017b1:	or     DWORD PTR [ebx-0x7b],eax
  4017b4:	inc    edx
  4017b5:	xchg   DWORD PTR [ecx],esp
  4017b7:	cmp    esp,DWORD PTR [esi-0x8901e9f]
  4017bd:	or     al,0xb8
  4017bf:	nop
  4017c0:	dec    edx
  4017c1:	sbb    cl,BYTE PTR [ecx-0x30e457bb]
  4017c7:	mov    DWORD PTR [ebp-0x54],ecx
  4017ca:	or     ecx,0x1b77
  4017d0:	or     DWORD PTR [ebp-0x58],0xcb78a05a
  4017d7:	adc    DWORD PTR ds:0x428451,edi
  4017dd:	or     DWORD PTR [ebp-0x54],0x9c2b8ae8
  4017e4:	lea    eax,[ebp+0x20]
  4017e7:	cmp    DWORD PTR ds:0x428449,0x0
  4017ee:	mov    edi,DWORD PTR ds:0x428565
  4017f4:	movzx  ecx,WORD PTR ds:0x428359
  4017fb:	mov    ecx,0x7757
  401800:	jmp    0x401860
  401805:	mov    ecx,0x59da
  40180a:	cmp    DWORD PTR ds:0x428449,0x0
  401811:	ja     0x401846
  401817:	push   0x428295
  40181c:	call   DWORD PTR ds:0x42e09c
  401822:	xor    edx,edx
  401824:	or     edx,DWORD PTR ds:0x428355
  40182a:	xor    DWORD PTR ds:0x4284c5,edx
  401830:	mov    edi,DWORD PTR ds:0x428435
  401836:	or     DWORD PTR ds:0x4284cd,edi
  40183c:	or     DWORD PTR ds:0x428345,0x7336
  401846:	sbb    DWORD PTR ds:0x428449,0x42f3
  401850:	mov    DWORD PTR ds:0x428579,0x382b
  40185a:	inc    DWORD PTR ds:0x428581
  401860:	mov    DWORD PTR [ebp-0xc],eax
  401863:	mov    eax,ds:0x422580
  401868:	mov    ecx,DWORD PTR [ebp-0xc]
  40186b:	sbb    DWORD PTR ds:0x428465,0xc55
  401875:	mov    eax,DWORD PTR [eax]
  401877:	xor    edx,edi
  401879:	add    eax,DWORD PTR [ecx]
  40187b:	mov    edi,0x32de6d5d
  401880:	mov    ecx,DWORD PTR ds:0x428461
  401886:	sbb    DWORD PTR ds:0x42840d,ecx
  40188c:	mov    DWORD PTR [ebp-0x14],eax
  40188f:	cmp    DWORD PTR ds:0x428569,0x0
  401896:	not    ecx
  401898:	mov    DWORD PTR ds:0x428479,0x2a4e
  4018a2:	mov    edx,DWORD PTR ds:0x42854d
  4018a8:	jmp    0x401900
  4018ad:	mov    DWORD PTR ds:0x428339,0x4cb6
  4018b7:	mov    eax,0x4273
  4018bc:	cmp    DWORD PTR ds:0x428569,0x0
  4018c3:	jle    0x4018e8
  4018c9:	push   DWORD PTR [ebp-0x14]
  4018cc:	push   0x428165
  4018d1:	push   0x4281f1
  4018d6:	call   DWORD PTR ds:0x42e22c
  4018dc:	add    ecx,edx
  4018de:	or     DWORD PTR ds:0x428451,0x428471
  4018e8:	and    ecx,0x1796
  4018ee:	sub    edx,0x208e
  4018f4:	xor    DWORD PTR ds:0x428465,edx
  4018fa:	sub    DWORD PTR ds:0x42846d,ebx
  401900:	mov    eax,DWORD PTR [ebp+0x18]
  401903:	mov    ecx,DWORD PTR [ebp+0x1c]
  401906:	cmp    DWORD PTR ds:0x428419,0x0
  40190d:	movzx  edx,BYTE PTR ds:0x428415
  401914:	mov    edx,DWORD PTR ds:0x4284f1
  40191a:	movzx  edx,WORD PTR ds:0x428579
  401921:	jmp    0x401971
  401926:	mov    DWORD PTR ds:0x428565,0x405c
  401930:	cmp    DWORD PTR ds:0x428419,0x0
  401937:	jge    0x401961
  40193d:	push   DWORD PTR [ebp-0xc]
  401940:	push   DWORD PTR [ebp-0x14]
  401943:	push   0x1391
  401948:	push   0x7a4e
  40194d:	call   DWORD PTR ds:0x42e0a0
  401953:	neg    edx
  401955:	add    edx,0x51c2
  40195b:	sbb    edx,DWORD PTR ds:0x428365
  401961:	adc    DWORD PTR ds:0x428561,ecx
  401967:	sub    DWORD PTR ds:0x428365,0x3064
  401971:	shrd   eax,ecx,0x2
  401975:	shr    ecx,0x2
  401978:	cmp    DWORD PTR ds:0x428475,0x0
  40197f:	mov    ecx,DWORD PTR ds:0x42844d
  401985:	mov    ecx,0x3508
  40198a:	not    edx
  40198c:	jmp    0x4019d4
  401991:	mov    DWORD PTR ds:0x428555,edi
  401997:	mov    DWORD PTR ds:0x428439,0x1955
  4019a1:	cmp    DWORD PTR ds:0x428475,0x0
  4019a8:	je     0x4019cc
  4019ae:	push   0x428243
  4019b3:	push   0x400000
  4019b8:	call   DWORD PTR ds:0x42e0a4
  4019be:	neg    edx
  4019c0:	xor    DWORD PTR ds:0x428341,0x55e7
  4019ca:	sub    ecx,ecx
  4019cc:	not    ecx
  4019ce:	and    ecx,DWORD PTR ds:0x428441
  4019d4:	mov    ecx,DWORD PTR [ebp+0x18]
  4019d7:	mov    edx,DWORD PTR [ebp+0x1c]
  4019da:	add    DWORD PTR ds:0x4284dd,0x428569
  4019e4:	xor    eax,edi
  4019e6:	xor    edx,edx
  4019e8:	or     edx,eax
  4019ea:	and    eax,0x837
  4019ef:	mov    DWORD PTR [ebp-0x3c],edx
  4019f2:	jmp    0x401d93
  4019f7:	inc    DWORD PTR [edx+0x3c]
  4019fa:	pop    ebx
  4019fb:	mov    esp,0xf09aa0bb
  401a00:	fisubr DWORD PTR [edx+0x126367e3]
  401a06:	sahf   
  401a07:	mov    esi,0xbdbebecc
  401a0c:	les    edi,FWORD PTR [esi+0x1c62b0be]
  401a12:	mov    edi,DWORD PTR [ebx]
  401a14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a15:	jne    0x4019b8
  401a17:	cmp    bl,BYTE PTR [edi]
  401a19:	hlt    
  401a1a:	shl    esp,0x62
  401a1d:	xchg   esp,eax
  401a1e:	or     al,cl
  401a20:	pop    ebx
  401a21:	inc    eax
  401a22:	cwde   
  401a23:	inc    edx
  401a24:	add    BYTE PTR [bp+si],0x8c
  401a28:	pop    ds
  401a29:	inc    edx
  401a2a:	mov    cl,BYTE PTR [ebx]
  401a2c:	and    dl,BYTE PTR [edi]
  401a2e:	cdq    
  401a2f:	inc    esp
  401a30:	outs   dx,DWORD PTR ds:[esi]
  401a31:	rcl    esi,1
  401a33:	pop    esi
  401a34:	xor    dh,al
  401a36:	repz sbb esi,DWORD PTR [esi+0x52c09635]
  401a3d:	or     al,0xe1
  401a3f:	in     al,0x34
  401a41:	ins    BYTE PTR es:[edi],dx
  401a42:	adc    BYTE PTR [edi+0x62],0xc0
  401a46:	sub    bh,bh
  401a48:	(bad)
  401a4b:	ins    BYTE PTR es:[edi],dx
  401a4c:	aad    0x55
  401a4e:	xchg   ebx,eax
  401a4f:	and    esp,edi
  401a51:	inc    edi
  401a52:	scas   eax,DWORD PTR es:[edi]
  401a53:	cmc    
  401a54:	inc    ebp
  401a55:	pop    ecx
  401a56:	sbb    bl,dl
  401a58:	jnp    0x401a59
  401a5a:	addr16 jbe 0x401a46
  401a5d:	inc    esp
  401a5e:	js     0x401ab8
  401a60:	jne    0x401a5b
  401a62:	ds dec esi
  401a64:	in     eax,0xa3
  401a66:	jp     0x401a84
  401a68:	dec    ecx
  401a69:	jmp    0x401a77
  401a6b:	out    dx,eax
  401a6c:	push   ebp
  401a6d:	xor    DWORD PTR [eax],esp
  401a6f:	arpl   WORD PTR [edx],sp
  401a71:	pop    esp
  401a72:	and    edx,esp
  401a74:	lods   al,BYTE PTR ds:[esi]
  401a75:	xchg   ebp,eax
  401a76:	mul    DWORD PTR [ecx+eax*2-0x62624e73]
  401a7d:	mov    al,0x19
  401a7f:	iret   
  401a80:	xchg   BYTE PTR [ebx+0x26884b85],dh
  401a86:	and    esp,DWORD PTR [eax]
  401a88:	mov    al,0xb
  401a8a:	cmp    eax,0x2bc1735d
  401a8f:	inc    eax
  401a90:	loope  0x401a49
  401a92:	pusha  
  401a93:	test   BYTE PTR [edx],ah
  401a95:	sbb    al,0xf9
  401a97:	mov    ebp,0x3ca87ab7
  401a9c:	push   0xffffffec
  401a9e:	repnz xor eax,DWORD PTR [esi]
  401aa1:	push   edx
  401aa2:	call   0x7d58:0xf175f62b
  401aa9:	pop    ecx
  401aaa:	cmc    
  401aab:	stos   DWORD PTR es:[edi],eax
  401aac:	(bad)  
  401aad:	mov    ch,0xfc
  401aaf:	jge    0x401b06
  401ab1:	icebp  
  401ab2:	and    al,0x65
  401ab4:	outs   dx,BYTE PTR ds:[esi]
  401ab5:	pop    ss
  401ab6:	mov    eax,ds:0x161e1d18
  401abb:	int    0xa2
  401abd:	dec    ebx
  401abe:	scas   eax,DWORD PTR es:[edi]
  401abf:	sub    DWORD PTR [eax+eax*8+0x59a0b6cd],ebp
  401ac6:	xchg   edx,eax
  401ac7:	push   ds
  401ac8:	and    eax,0xcff59943
  401acd:	dec    ebp
  401ace:	stc    
  401acf:	jl     0x401ab4
  401ad1:	mov    esp,0xef3af0ef
  401ad6:	jmp    0x401b57
  401ad8:	mov    BYTE PTR [esp-0x5f],cl
  401adc:	movzx  eax,WORD PTR [ebx+0x2a]
  401ae0:	in     al,0x83
  401ae2:	sub    esi,DWORD PTR [edi+eax*1]
  401ae5:	retf   0x2617
  401ae8:	mov    edx,0xb01b1786
  401aed:	out    0xf9,eax
  401aef:	mov    ebx,edx
  401af1:	mov    edi,0x6546ae2c
  401af6:	mov    eax,0x167c0ea7
  401afb:	mov    ah,0xee
  401afd:	and    eax,0x9c1c07f5
  401b02:	sub    ebp,esi
  401b04:	aad    0x58
  401b06:	xchg   BYTE PTR [ebp+0x1e],ah
  401b09:	xchg   ebx,eax
  401b0a:	xor    eax,0xb1920ef5
  401b0f:	push   eax
  401b10:	mov    bl,0x3
  401b12:	mov    ecx,0x779bde78
  401b17:	popa   
  401b18:	out    0x50,eax
  401b1a:	retf   
  401b1b:	dec    edi
  401b1c:	in     al,dx
  401b1d:	mov    dh,0xb8
  401b1f:	jle    0x401b57
  401b21:	in     al,0x8d
  401b23:	fld    TBYTE PTR [ecx+0x5bd9933a]
  401b29:	inc    ebp
  401b2a:	jo     0x401b75
  401b2c:	mov    ebp,0x63248d47
  401b31:	add    eax,0x97b34c6a
  401b36:	jl     0x401b58
  401b38:	add    eax,0xe6046827
  401b3d:	outs   dx,DWORD PTR ds:[esi]
  401b3e:	inc    ecx
  401b3f:	iret   
  401b40:	or     esi,DWORD PTR [eax]
  401b42:	xor    BYTE PTR [ebx+0x2250ffed],ch
  401b48:	fisttp QWORD PTR [edi+edi*8-0x76]
  401b4c:	pop    ebx
  401b4d:	pop    esi
  401b4e:	xchg   esp,eax
  401b4f:	jle    0x401b43
  401b51:	xchg   edi,eax
  401b52:	scas   al,BYTE PTR es:[edi]
  401b53:	out    dx,al
  401b54:	sub    al,0x3
  401b56:	and    eax,0x65fbf310
  401b5b:	mov    ds,WORD PTR [edi+0x4ab7b59]
  401b61:	add    al,0x4f
  401b63:	sub    BYTE PTR [bx+si+0x186d],cl
  401b68:	retf   0xce28
  401b6b:	or     ch,BYTE PTR [esi]
  401b6d:	mov    eax,0x659c27f9
  401b72:	shl    esi,cl
  401b74:	mov    ch,0xdb
  401b76:	dec    esi
  401b77:	mov    ebx,0x626a5f77
  401b7c:	push   edx
  401b7d:	mov    bl,BYTE PTR [ecx+0x50efe17]
  401b83:	shr    DWORD PTR [ecx],1
  401b85:	dec    ebx
  401b86:	push   esp
  401b87:	jmp    0x401b72
  401b89:	je     0x401b8d
  401b8b:	sbb    ebp,eax
  401b8d:	xor    bh,BYTE PTR [esp+ecx*4]
  401b90:	mov    bl,0xf3
  401b92:	rol    ah,0x5c
  401b95:	ins    DWORD PTR es:[edi],dx
  401b96:	test   eax,0xdfb9c606
  401b9b:	gs popa 
  401b9d:	gs loop 0x401c1c
  401ba0:	mov    ebp,0xd6da61d0
  401ba5:	pop    eax
  401ba6:	psllq  mm3,mm1
  401ba9:	add    al,0xcf
  401bab:	add    BYTE PTR [esi+esi*4],al
  401bae:	mov    edx,0x48432b63
  401bb3:	int3   
  401bb4:	inc    esp
  401bb5:	test   al,0xcb
  401bb7:	inc    ebp
  401bb8:	pop    eax
  401bb9:	out    0x80,eax
  401bbb:	mov    ch,0x5b
  401bbd:	mov    bh,dl
  401bbf:	(bad)  
  401bc0:	stc    
  401bc1:	neg    BYTE PTR [ebp+0x7d1c036c]
  401bc7:	mov    esi,0x13c3c208
  401bcc:	das    
  401bcd:	cwde   
  401bce:	jno    0x401be2
  401bd0:	push   esp
  401bd1:	scas   al,BYTE PTR es:[edi]
  401bd2:	mov    eax,ds:0xbc1447ea
  401bd7:	ror    BYTE PTR [esi-0x632bcdad],cl
  401bdd:	dec    edi
  401bde:	test   eax,0x6ba836cd
  401be3:	mov    fs,WORD PTR [ebp+0x1a16e717]
  401be9:	fnstsw WORD PTR [ebx]
  401beb:	je     0x401c5c
  401bed:	sub    bl,BYTE PTR [eax+0x70ac8929]
  401bf3:	jl     0x401b83
  401bf5:	scas   al,BYTE PTR es:[edi]
  401bf6:	(bad)  
  401bf7:	inc    esp
  401bf8:	ins    BYTE PTR es:[edi],dx
  401bf9:	cmc    
  401bfa:	sbb    esp,esi
  401bfc:	xor    eax,0x40f62bce
  401c01:	or     esi,edi
  401c03:	inc    ebp
  401c04:	fcomp  DWORD PTR [edi]
  401c06:	retf   
  401c07:	mov    esi,0xa41c742b
  401c0c:	xor    cl,BYTE PTR [ecx+0x2a]
  401c0f:	fldenv [ecx-0x1d]
  401c12:	fcmove st,st(6)
  401c14:	js     0x401c1e
  401c16:	pop    edx
  401c17:	pop    ds
  401c18:	aad    0x6
  401c1a:	cmp    DWORD PTR [edi-0x4],0xe058aa4e
  401c21:	or     cl,BYTE PTR [edx-0x72]
  401c24:	xor    eax,0x23c46769
  401c29:	xchg   esp,eax
  401c2a:	mov    dh,bh
  401c2c:	retf   
  401c2d:	xchg   esp,eax
  401c2e:	std    
  401c2f:	jmp    0x561c:0x4e6894e
  401c36:	rcr    dl,1
  401c38:	ret    0x27ab
  401c3b:	test   BYTE PTR [ebx+0x4],dl
  401c3e:	stos   DWORD PTR es:[edi],eax
  401c3f:	push   cs
  401c40:	ja     0x401c7d
  401c42:	scas   eax,DWORD PTR es:[edi]
  401c43:	or     DWORD PTR [esi-0x36],edi
  401c46:	mov    ebx,DWORD PTR [eax]
  401c48:	xchg   DWORD PTR [esi],ecx
  401c4a:	mov    ch,0xae
  401c4c:	(bad)  
  401c4d:	(bad)  
  401c4e:	iret   
  401c4f:	jnp    0x401c9c
  401c51:	sbb    ecx,eax
  401c53:	pop    es
  401c54:	in     eax,0x5d
  401c56:	inc    ebx
  401c57:	int    0x55
  401c59:	inc    ebp
  401c5a:	pop    ecx
  401c5b:	ins    BYTE PTR es:[edi],dx
  401c5c:	shl    ch,cl
  401c5e:	add    ch,ch
  401c60:	shr    BYTE PTR [esi-0x38b10106],1
  401c66:	loope  0x401cc3
  401c68:	jno    0x401cc3
  401c6a:	(bad)  
  401c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c6c:	or     esi,DWORD PTR [edi]
  401c6e:	es frndint 
  401c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c72:	push   edi
  401c73:	popa   
  401c74:	rol    DWORD PTR [esp+ecx*2],cl
  401c77:	dec    esp
  401c78:	es mov edx,0x760806d4
  401c7e:	jmp    0x6bd99740
  401c83:	out    0x31,eax
  401c85:	sbb    esp,0x5f34f5fe
  401c8b:	add    BYTE PTR [eax-0x1fff95fe],ah
  401c91:	int3   
  401c92:	call   0x3490a3e4
  401c97:	push   esp
  401c98:	and    eax,0x4776914
  401c9d:	movups xmm2,xmm2
  401ca0:	(bad)
  401ca3:	lea    ebp,[esi+0x6f]
  401ca6:	mov    esp,ebx
  401ca8:	aas    
  401ca9:	es ins DWORD PTR es:[edi],dx
  401cab:	out    dx,eax
  401cac:	cs cmp bh,ch
  401caf:	cmp    eax,0xa7517022
  401cb4:	icebp  
  401cb5:	push   0xfffffff2
  401cb7:	sub    edx,esp
  401cb9:	cmc    
  401cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cbb:	xchg   BYTE PTR [eax+0x6c],dl
  401cbe:	outs   dx,DWORD PTR ds:[esi]
  401cbf:	stc    
  401cc0:	add    eax,0x8d8a2356
  401cc5:	push   ebx
  401cc6:	imul   ebx,DWORD PTR [ebp+0x5096cc13],0x3e01a58
  401cd0:	dec    esi
  401cd1:	ss push 0x19ec91ef
  401cd7:	pop    eax
  401cd8:	je     0x401d36
  401cda:	jmp    0x401cb8
  401cdc:	adc    dl,0x57
  401cdf:	xor    ebp,DWORD PTR [esi+0xb]
  401ce2:	imul   ebp,edi,0xf9065abb
  401ce8:	mov    edx,0xa74ada9
  401ced:	and    ah,BYTE PTR [esi-0x1e08ade0]
  401cf3:	xor    dl,ch
  401cf5:	xchg   esi,eax
  401cf6:	xchg   ecx,eax
  401cf7:	loope  0x401d72
  401cf9:	pop    ss
  401cfa:	call   0xf615:0x7bdfa6b9
  401d01:	xchg   esi,eax
  401d02:	mov    eax,ds:0x7fe7d8ee
  401d07:	cdq    
  401d08:	out    dx,al
  401d09:	retf   0x840e
  401d0c:	adc    ebp,DWORD PTR [edi]
  401d0e:	adc    dl,0x87
  401d11:	imul   eax,esi,0xffffffdf
  401d14:	xor    eax,0xab706472
  401d19:	jae    0x401d6a
  401d1b:	addr16 add ah,bh
  401d1e:	jo     0x401d48
  401d20:	std    
  401d21:	lds    ebp,FWORD PTR [esi+0x78691f9]
  401d27:	das    
  401d28:	or     edi,DWORD PTR [esi+0x109c08b6]
  401d2e:	jae    0x401d11
  401d30:	push   eax
  401d31:	rcr    BYTE PTR [eax+eiz*4-0x66],1
  401d35:	aad    0x13
  401d37:	push   es
  401d38:	adc    dl,ch
  401d3a:	xchg   esp,eax
  401d3b:	push   ss
  401d3c:	sub    al,0xd9
  401d3e:	test   eax,0x13c1a10e
  401d43:	add    esi,esp
  401d45:	sub    edx,DWORD PTR [edi-0x7230f770]
  401d4b:	retf   0xe798
  401d4e:	or     BYTE PTR [eax+edx*2-0x35312a74],0x5
  401d56:	lahf   
  401d57:	mov    DWORD PTR [edi-0x124686bf],edi
  401d5d:	ins    BYTE PTR es:[edi],dx
  401d5e:	mov    esp,0x34f1caab
  401d63:	hlt    
  401d64:	and    ah,BYTE PTR [eax+ebp*4+0x77]
  401d68:	xor    BYTE PTR [eax+ecx*4+0x5cc82089],al
  401d6f:	and    DWORD PTR [ebx+0x6b],esp
  401d72:	xor    WORD PTR [ebp+0x74],sp
  401d76:	cdq    
  401d77:	mov    dl,0x26
  401d79:	(bad)
  401d7e:	or     DWORD PTR [edi+0x18],ebp
  401d81:	xor    ebx,DWORD PTR [ecx]
  401d83:	dec    edx
  401d85:	mov    ecx,0x2e077e2a
  401d8a:	hlt    
  401d8b:	add    DWORD PTR [edx+0x4e],ebp
  401d8e:	fadd   QWORD PTR [edx+0x23]
  401d91:	sti    
  401d92:	nop
  401d93:	mov    DWORD PTR [ebp-0x70],0x2c55
  401d9a:	mov    DWORD PTR [ebp-0x6c],0x456f
  401da1:	mov    DWORD PTR [ebp-0x70],0x78a6
  401da8:	mov    DWORD PTR [ebp-0x6c],0x188
  401daf:	sbb    DWORD PTR ds:0x428425,ecx
  401db5:	mov    DWORD PTR [ebp-0x70],0x5b3f
  401dbc:	mov    DWORD PTR [ebp-0x6c],0x3219
  401dc3:	add    DWORD PTR ds:0x42855d,0x3158
  401dcd:	mov    DWORD PTR [ebp-0x70],0x231c
  401dd4:	add    eax,DWORD PTR ds:0x42840d
  401dda:	mov    DWORD PTR [ebp-0x6c],0x1337
  401de1:	sub    DWORD PTR ds:0x428371,edx
  401de7:	mov    DWORD PTR [ebp-0x70],0x7593
  401dee:	mov    DWORD PTR [ebp-0x6c],0x11b8
  401df5:	movzx  eax,BYTE PTR ds:0x42834d
  401dfc:	and    DWORD PTR ds:0x428575,eax
  401e02:	mov    DWORD PTR [ebp-0x70],0x3b72
  401e09:	mov    DWORD PTR [ebp-0x6c],0x3abc
  401e10:	cmp    DWORD PTR ds:0x428415,0x0
  401e17:	mov    DWORD PTR ds:0x42854d,0x646
  401e21:	mov    DWORD PTR ds:0x428425,0x14a3
  401e2b:	jmp    0x401eb8
  401e30:	movzx  eax,WORD PTR ds:0x4284f1
  401e37:	mov    DWORD PTR ds:0x428415,ebx
  401e3d:	cmp    DWORD PTR ds:0x428415,0x0
  401e44:	jle    0x401e86
  401e4a:	push   DWORD PTR [ebp-0x20]
  401e4d:	push   0x428243
  401e52:	push   0x428147
  401e57:	push   0x400000
  401e5c:	call   DWORD PTR ds:0x42e230
  401e62:	xor    DWORD PTR ds:0x42854d,0x4536
  401e6c:	sub    DWORD PTR ds:0x4284d5,edi
  401e72:	sbb    DWORD PTR ds:0x42843d,0x42854d
  401e7c:	add    DWORD PTR ds:0x428465,0x5ddd
  401e86:	sbb    DWORD PTR ds:0x428575,0x428425
  401e90:	adc    DWORD PTR ds:0x428569,0x5ea9
  401e9a:	sub    DWORD PTR ds:0x428559,0x428545
  401ea4:	add    DWORD PTR ds:0x428345,0x5dac
  401eae:	add    DWORD PTR ds:0x42833d,0x46fc
  401eb8:	mov    DWORD PTR [ebp-0x68],0x1b45
  401ebf:	xor    DWORD PTR ds:0x428431,edx
  401ec5:	mov    DWORD PTR [ebp-0x64],0x767d
  401ecc:	or     DWORD PTR ds:0x42854d,edi
  401ed2:	mov    DWORD PTR [ebp-0x60],0x1d973857
  401ed9:	mov    DWORD PTR [ebp-0x5c],0x0
  401ee0:	mov    DWORD PTR [ebp-0x34],0x599d
  401ee7:	xor    eax,DWORD PTR ds:0x4284c5
  401eed:	mov    DWORD PTR [ebp-0x2c],0x165d
  401ef4:	mov    DWORD PTR [ebp-0x1c],0xc51
  401efb:	xor    eax,eax
  401efd:	add    eax,DWORD PTR ds:0x428359
  401f03:	or     eax,DWORD PTR ds:0x428435
  401f09:	mov    ds:0x428359,eax
  401f0e:	mov    DWORD PTR [ebp-0x44],0x3f55
  401f15:	cmp    DWORD PTR ds:0x42855d,0x0
  401f1c:	mov    DWORD PTR ds:0x428335,0xd43
  401f26:	mov    DWORD PTR ds:0x428579,0x5a6d
  401f30:	mov    DWORD PTR ds:0x42841d,edx
  401f36:	jmp    0x40200c
  401f3b:	mov    eax,0x36f8
  401f40:	mov    DWORD PTR ds:0x428475,edx
  401f46:	cmp    DWORD PTR ds:0x42855d,0x0
  401f4d:	jg     0x401f82
  401f53:	push   0x4521
  401f58:	push   0x4861
  401f5d:	push   DWORD PTR [ebp-0x20]
  401f60:	push   0x428238
  401f65:	push   DWORD PTR [ebp-0x28]
  401f68:	call   DWORD PTR ds:0x42e0a8
  401f6e:	adc    DWORD PTR ds:0x428445,0x7cd6
  401f78:	sbb    DWORD PTR ds:0x4284f1,0xfa0
  401f82:	adc    DWORD PTR ds:0x428451,0x42833d
  401f8c:	add    DWORD PTR ds:0x428359,0x428471
  401f96:	cmp    DWORD PTR ds:0x42854d,0x0
  401f9d:	mov    DWORD PTR ds:0x428475,0x6252
  401fa7:	mov    DWORD PTR ds:0x428371,0x40d0
  401fb1:	jmp    0x40200c
  401fb6:	mov    DWORD PTR ds:0x428555,edx
  401fbc:	cmp    DWORD PTR ds:0x42854d,0x0
  401fc3:	ja     0x401fee
  401fc9:	push   0x428165
  401fce:	call   DWORD PTR ds:0x42e234
  401fd4:	and    DWORD PTR ds:0x42835d,0x4284f9
  401fde:	sbb    DWORD PTR ds:0x428439,0x5068
  401fe8:	xor    DWORD PTR ds:0x4284f1,edi
  401fee:	and    DWORD PTR ds:0x4284e1,0x42857d
  401ff8:	xor    DWORD PTR ds:0x4284f9,0x428575
  402002:	add    DWORD PTR ds:0x428545,0xd3c
  40200c:	mov    DWORD PTR [ebp-0x44],0x1
  402013:	mov    DWORD PTR [ebp-0x44],0x42e8
  40201a:	mov    eax,DWORD PTR [ebp-0x60]
  40201d:	add    DWORD PTR ds:0x428355,0x4284cd
  402027:	shl    ecx,0x1e
  40202a:	mov    ecx,DWORD PTR [ebp-0x5c]
  40202d:	add    DWORD PTR ds:0x4284d5,0x5f4
  402037:	push   ecx
  402038:	adc    DWORD PTR ds:0x4284fd,0x428349
  402042:	push   eax
  402043:	or     DWORD PTR ds:0x428501,0x4284dd
  40204d:	push   0xddf
  402052:	sbb    DWORD PTR ds:0x428361,0x218d
  40205c:	jmp    0x4023fd
  402061:	mov    ebp,0x2b7a2504
  402066:	jl     0x401ffa
  402068:	mov    esp,0x9e22191a
  40206d:	jbe    0x4020d3
  40206f:	out    0xe3,eax
  402071:	mov    ebp,0xbdbebed2
  402076:	les    edi,FWORD PTR [esi+0x5f5e76be]
  40207c:	xchg   esp,eax
  40207d:	out    dx,al
  40207e:	adc    ah,dl
  402080:	jo     0x40206f
  402082:	faddp  st(3),st
  402084:	mov    al,0xe8
  402086:	mov    DWORD PTR [esi],edi
  402088:	fs dec ebp
  40208a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40208b:	pop    ss
  40208c:	push   edx
  40208d:	inc    ebp
  40208e:	mov    al,0x52
  402090:	jecxz  0x4020bb
  402092:	(bad)  
  402093:	mov    edx,0xc2e33eab
  402098:	ds mov ebp,0x8daa8628
  40209e:	scas   eax,DWORD PTR es:[edi]
  40209f:	xor    esi,DWORD PTR [ebx+eiz*4-0x395f3ea]
  4020a6:	call   0x4067:0xe8e030c7
  4020ad:	xchg   ebx,eax
  4020ae:	ins    BYTE PTR es:[edi],dx
  4020af:	adc    eax,0xacbb35f3
  4020b4:	inc    edi
  4020b5:	sbb    DWORD PTR [edi*4+0x32bd9326],ebx
  4020bc:	sub    BYTE PTR [edi],cl
  4020be:	dec    esi
  4020bf:	mov    bl,0x5b
  4020c1:	mov    edi,DWORD PTR [esi+0x71]
  4020c4:	fsub   DWORD PTR [ecx]
  4020c6:	add    al,0xab
  4020c8:	or     eax,0x6457c735
  4020cd:	mov    edx,0xb2a2b486
  4020d2:	jle    0x40209a
  4020d4:	fidiv  DWORD PTR [edi+0x77]
  4020d7:	clc    
  4020d8:	cmc    
  4020d9:	test   al,0x1d
  4020db:	sbb    bl,BYTE PTR ds:0x300090ec
  4020e1:	dec    esp
  4020e2:	xchg   edi,eax
  4020e3:	push   eax
  4020e4:	leave  
  4020e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020e6:	neg    BYTE PTR [eax-0x33]
  4020e9:	test   al,0x9b
  4020eb:	sub    BYTE PTR [ebp+0x562783cb],cl
  4020f1:	and    al,cl
  4020f3:	and    eax,0x633b7f19
  4020f8:	mov    cl,0x99
  4020fa:	hlt    
  4020fb:	sbb    ebx,edi
  4020fd:	and    BYTE PTR [esp+ecx*1],0x7d
  402101:	push   edx
  402102:	cmp    dh,BYTE PTR [edx-0x7437d22a]
  402108:	sbb    edi,ebp
  40210a:	add    al,0x9
  40210c:	hlt    
  40210d:	ucomiss xmm7,xmm5
  402110:	jo     0x402156
  402112:	mov    ch,0x74
  402114:	inc    esi
  402115:	fisttp QWORD PTR [edx+0xd]
  402118:	in     eax,dx
  402119:	inc    edx
  40211a:	popf   
  40211b:	repz adc cl,BYTE PTR [ebx+eax*4+0x58]
  402120:	fucom  st(1)
  402122:	nop
  402123:	retf   
  402124:	fld    DWORD PTR [edx-0x79]
  402127:	mov    eax,ds:0x3a35bb1e
  40212c:	sbb    DWORD PTR [ebp*4-0x4a7853f9],0xffffffec
  402134:	daa    
  402135:	push   ds
  402136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402137:	ds push 0x55
  40213a:	stos   DWORD PTR es:[edi],eax
  40213b:	pop    esp
  40213c:	pop    ebp
  40213d:	popf   
  40213e:	hlt    
  40213f:	fnstcw WORD PTR [esi]
  402141:	mov    al,0x3
  402143:	or     DWORD PTR [edi+0x67095889],ecx
  402149:	mov    fs,edx
  40214b:	push   esp
  40214c:	pop    ebx
  40214d:	lods   eax,DWORD PTR ds:[esi]
  40214e:	sub    ecx,DWORD PTR [edi+edi*1-0x1c]
  402152:	adc    eax,0x4a4c31a0
  402157:	adc    BYTE PTR [esp+ebx*4],bh
  40215a:	rcl    al,cl
  40215c:	add    edx,ebx
  40215e:	pushf  
  40215f:	dec    ebp
  402160:	enter  0xf67e,0x50
  402164:	inc    esi
  402165:	loope  0x40218e
  402167:	lahf   
  402168:	cmp    al,0xa0
  40216a:	xchg   edx,eax
  40216b:	popa   
  40216c:	sbb    bh,BYTE PTR [edi+0x7fd9d286]
  402172:	cdq    
  402173:	out    dx,eax
  402174:	test   al,0xe0
  402176:	ins    DWORD PTR es:[edi],dx
  402177:	adc    ebx,ebx
  402179:	or     eax,0x3b0cadc6
  40217e:	sahf   
  40217f:	cmc    
  402180:	adc    BYTE PTR [esi],cl
  402182:	jmp    0x4021d6
  402184:	ret    
  402185:	jne    0x4021f6
  402187:	mov    dh,0x95
  402189:	pop    ecx
  40218a:	out    dx,eax
  40218b:	xchg   ecx,eax
  40218c:	ret    0x22ff
  40218f:	or     esi,DWORD PTR cs:[ecx+eax*8]
  402193:	shl    ah,cl
  402195:	adc    ecx,ecx
  402197:	lds    edx,FWORD PTR [ebx-0x68]
  40219a:	lods   al,BYTE PTR ds:[esi]
  40219b:	popa   
  40219c:	lods   eax,DWORD PTR ds:[esi]
  40219d:	jecxz  0x40212b
  40219f:	fmul   st,st(7)
  4021a1:	jo     0x40215e
  4021a3:	adc    DWORD PTR [esi+0x356d2978],0x46
  4021aa:	shr    DWORD PTR [ebx],0x3e
  4021ad:	sti    
  4021ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021af:	sub    BYTE PTR [ebp+0x25b629a4],al
  4021b5:	fsub   st,st(5)
  4021b7:	push   ebp
  4021b8:	stos   BYTE PTR es:[edi],al
  4021b9:	and    eax,0x6a1f1fb
  4021be:	mov    cl,0x22
  4021c0:	mov    ebp,0x5e024c1a
  4021c5:	push   0xffffffb9
  4021c7:	aam    0xf3
  4021c9:	aad    0xcc
  4021cb:	jg     0x402194
  4021cd:	rol    BYTE PTR [edx-0x5f22aa63],1
  4021d3:	(bad)  
  4021d4:	shr    DWORD PTR [esi+0x17],1
  4021d7:	pusha  
  4021d8:	push   ds
  4021d9:	outs   dx,DWORD PTR ds:[esi]
  4021da:	out    0x89,al
  4021dc:	jmp    0x4021b3
  4021de:	fst    QWORD PTR ds:0x64b722ec
  4021e4:	(bad)  
  4021e5:	(bad)  
  4021e6:	clc    
  4021e7:	cmp    al,0x5
  4021e9:	lods   eax,DWORD PTR ds:[esi]
  4021ea:	dec    ebp
  4021eb:	mov    dl,0xae
  4021ed:	imul   esp,DWORD PTR [esi+0x74],0x97008dea
  4021f4:	aas    
  4021f5:	rol    BYTE PTR [esi+0x7fb56198],cl
  4021fb:	ins    BYTE PTR es:[edi],dx
  4021fc:	pop    eax
  4021fd:	cwde   
  4021fe:	adc    eax,DWORD PTR [ecx-0x155a18d6]
  402204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402205:	gs push esi
  402207:	pop    ds
  402208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402209:	sbb    eax,0x15377893
  40220e:	adc    al,0x1d
  402210:	pop    es
  402211:	jae    0x40220a
  402213:	sub    edx,ecx
  402215:	inc    edx
  402216:	sub    DWORD PTR [edi-0x72],ebx
  402219:	adc    BYTE PTR [edi+0x3e],ch
  40221c:	sbb    bh,BYTE PTR [edi-0x2a0fb018]
  402222:	mov    bl,0x4
  402224:	cmp    al,BYTE PTR [esi+ecx*1-0x27376a4f]
  40222b:	fstp   TBYTE PTR [eax-0x74]
  40222e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40222f:	arpl   WORD PTR [edx+0x78],sp
  402232:	pop    ecx
  402234:	mov    esi,0xeb9d159c
  402239:	pop    ecx
  40223a:	pop    ebx
  40223b:	or     edi,DWORD PTR [ebp+0x72]
  40223e:	jne    0x40221d
  402240:	sbb    BYTE PTR [ebx-0x43],ah
  402243:	fidivr DWORD PTR [eax]
  402245:	bound  eax,QWORD PTR [esi+0x40]
  402248:	xchg   edi,eax
  402249:	push   eax
  40224a:	push   ebp
  40224b:	in     eax,dx
  40224c:	jl     0x40224e
  40224e:	aad    0x41
  402250:	sti    
  402251:	hlt    
  402252:	enter  0x34dd,0xb1
  402256:	push   ds
  402257:	fcom   DWORD PTR [eax+0x70]
  40225a:	fcomp  DWORD PTR [eax-0x5e]
  40225d:	xor    eax,DWORD PTR [eax+0x132f874b]
  402263:	xor    ch,BYTE PTR [ecx-0x179968ac]
  402269:	mov    eax,0x2ae437ca
  40226e:	pop    es
  40226f:	mov    edi,0x4e5a317
  402274:	into   
  402275:	jecxz  0x402200
  402277:	neg    DWORD PTR [esi+0x7e070864]
  40227d:	mov    dl,ah
  40227f:	outs   dx,BYTE PTR ds:[esi]
  402280:	sar    edi,cl
  402282:	ja     0x40225f
  402284:	lods   al,BYTE PTR ds:[esi]
  402285:	aaa    
  402286:	js     0x402236
  402288:	mov    eax,ds:0x5ca9ccaf
  40228d:	lods   eax,DWORD PTR ds:[esi]
  40228e:	and    dl,BYTE PTR [eax+0x646550e2]
  402294:	into   
  402295:	push   es
  402296:	test   BYTE PTR [edi-0x14],ah
  402299:	add    bl,BYTE PTR [ecx+0x1]
  40229c:	das    
  40229d:	push   eax
  40229e:	imul   eax,DWORD PTR [esi-0x1c],0xffffffa5
  4022a2:	push   0xba0efb56
  4022a7:	push   cs
  4022a8:	dec    edi
  4022a9:	enter  0x660b,0x11
  4022ad:	xor    bh,BYTE PTR [ecx-0x40da1dca]
  4022b3:	push   esi
  4022b4:	mov    edi,0x5b937e7a
  4022b9:	and    al,0x4a
  4022bb:	getsec 
  4022bd:	fisttp QWORD PTR [ebx+edx*4]
  4022c0:	push   ss
  4022c1:	ds mov edi,0x7d0a3ae1
  4022c7:	and    ecx,eax
  4022c9:	xor    eax,0x493a0872
  4022ce:	imul   eax,DWORD PTR [edi+0x16],0xffffff91
  4022d2:	jb     0x40234a
  4022d4:	mov    edi,0x90edaf3a
  4022d9:	lock jb 0x402267
  4022dc:	mov    esi,0x2dc5590f
  4022e1:	fsub   st(3),st
  4022e3:	inc    eax
  4022e4:	add    eax,0x478eb7e0
  4022e9:	retw   
  4022eb:	loope  0x4022a7
  4022ed:	fcomp  DWORD PTR [eax]
  4022ef:	les    eax,FWORD PTR [esi+0x1d]
  4022f2:	xchg   DWORD PTR [ebx-0x35],eax
  4022f5:	push   eax
  4022f6:	xor    cl,BYTE PTR [ebp+ebp*2-0x33ff6301]
  4022fd:	in     eax,0x41
  4022ff:	adc    eax,DWORD PTR [esi]
  402301:	int3   
  402302:	lock xchg edx,eax
  402304:	mov    eax,ds:0x4067d1f1
  402309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40230a:	or     DWORD PTR [ecx-0x3b],edi
  40230d:	push   es
  40230e:	inc    ebx
  40230f:	arpl   WORD PTR ds:0x6e6d231e,sp
  402315:	popa   
  402316:	adc    DWORD PTR [edx+0x68],ebx
  402319:	cdq    
  40231a:	inc    edx
  40231b:	adc    eax,0x438d5859
  402320:	xlat   BYTE PTR ds:[ebx]
  402321:	sbb    DWORD PTR [edi+0x41],0xffffff99
  402325:	jno    0x4022ac
  402327:	push   ebx
  402328:	daa    
  402329:	xor    eax,0x219eb0a4
  40232e:	dec    edi
  40232f:	out    0xee,al
  402331:	cmp    BYTE PTR [eax],ch
  402333:	int3   
  402334:	(bad)
  402338:	(bad)  
  402339:	hlt    
  40233a:	ss xchg edx,eax
  40233c:	mov    bl,0xe8
  40233e:	mov    eax,ds:0x2b07113e
  402343:	aaa    
  402344:	icebp  
  402345:	xor    eax,0xb1e40797
  40234a:	shl    BYTE PTR [esi],1
  40234c:	iret   
  40234d:	adc    dl,al
  40234f:	inc    edi
  402350:	rcr    BYTE PTR [esi],cl
  402352:	repz ret 0x56c
  402356:	push   0x88c32d30
  40235b:	or     ch,bh
  40235d:	and    bl,BYTE PTR [ecx-0x5f]
  402360:	iret   
  402361:	ret    0xb6da
  402364:	mov    ebp,0xba788e4
  402369:	lahf   
  40236a:	jp     0x40233d
  40236c:	es add ecx,edi
  40236f:	inc    ebp
  402370:	pop    ebp
  402371:	enter  0xfea9,0xa8
  402375:	ds sbb al,0xf9
  402378:	push   edi
  402379:	iret   
  40237a:	cld    
  40237b:	xor    BYTE PTR [ebx-0x22],al
  40237e:	dec    ebx
  40237f:	and    bl,BYTE PTR [ebp-0x414556a8]
  402385:	push   esi
  402386:	mov    cl,0x3b
  402388:	mov    bh,0x5e
  40238a:	cmp    edx,ecx
  40238c:	ret    
  40238d:	xor    DWORD PTR [ebp+0x38],esp
  402390:	lods   al,BYTE PTR ds:[esi]
  402391:	inc    ecx
  402392:	pusha  
  402393:	adc    eax,0xec27b3dd
  402398:	lea    eax,[ebp-0x5b654e2a]
  40239e:	in     al,dx
  40239f:	push   cs
  4023a0:	lods   eax,DWORD PTR ds:[esi]
  4023a1:	inc    eax
  4023a2:	pushf  
  4023a3:	pop    edx
  4023a4:	mov    al,ds:0x1a9ead50
  4023a9:	sti    
  4023aa:	jge    0x4023a9
  4023ac:	mov    dl,0xb6
  4023ae:	push   esp
  4023af:	das    
  4023b0:	push   ebp
  4023b1:	(bad)  
  4023b2:	mov    dh,BYTE PTR gs:[esi-0x1c35742d]
  4023b9:	sbb    dh,BYTE PTR ds:0xb35cd5e5
  4023bf:	xor    BYTE PTR [eax-0x50e0807f],cl
  4023c5:	leave  
  4023c6:	jo     0x402378
  4023c8:	ret    0x25d9
  4023cb:	mov    ecx,esi
  4023cd:	and    eax,esi
  4023cf:	imul   ebx,DWORD PTR [ecx],0x1a
  4023d2:	sub    al,0x2
  4023d4:	and    DWORD PTR [edx+0x3b5ed68b],esp
  4023da:	dec    edi
  4023db:	iret   
  4023dc:	mov    bl,0xdf
  4023de:	xor    eax,DWORD PTR [esi+0x292979fe]
  4023e4:	aad    0xd3
  4023e6:	mov    edi,0x1f955f01
  4023eb:	cmp    al,0x41
  4023ed:	(bad)  
  4023ee:	daa    
  4023ef:	je     0x4023c4
  4023f1:	outs   dx,BYTE PTR ds:[esi]
  4023f2:	xor    edx,DWORD PTR [esi-0x70]
  4023f5:	push   esp
  4023f6:	fsubp  st(5),st
  4023f8:	or     BYTE PTR [ebp+edx*1-0x32],bh
  4023fc:	dec    ebp
  4023fd:	push   0x2d0f
  402402:	sbb    DWORD PTR ds:0x428439,0x428461
  40240c:	call   0x42227d
  402411:	mov    ecx,DWORD PTR [ebp-0x68]
  402414:	mov    edx,DWORD PTR ds:0x428459
  40241a:	add    DWORD PTR ds:0x428375,edx
  402420:	mov    edx,DWORD PTR [ebp-0x64]
  402423:	sub    DWORD PTR ds:0x428545,ecx
  402429:	xor    eax,ecx
  40242b:	sub    DWORD PTR ds:0x4284dd,edi
  402431:	mov    ecx,DWORD PTR [ebp-0x70]
  402434:	mov    edx,DWORD PTR [ebp-0x6c]
  402437:	neg    DWORD PTR ds:0x42857d
  40243d:	sub    eax,ecx
  40243f:	mov    ecx,DWORD PTR ds:0x422738
  402445:	lea    eax,[eax+ecx*1-0x27d2]
  40244c:	not    edx
  40244e:	mov    ecx,DWORD PTR [ebp-0x1c]
  402451:	adc    edx,DWORD PTR ds:0x4284c5
  402457:	mov    edx,DWORD PTR [ebp-0x2c]
  40245a:	neg    DWORD PTR ds:0x42843d
  402460:	or     ecx,0x4f00
  402466:	and    ecx,edx
  402468:	cmp    DWORD PTR ds:0x42832d,0x0
  40246f:	mov    DWORD PTR ds:0x428549,ebx
  402475:	mov    edx,DWORD PTR ds:0x428445
  40247b:	jmp    0x4024db
  402480:	mov    DWORD PTR ds:0x428425,0xc4d
  40248a:	cmp    DWORD PTR ds:0x42832d,0x0
  402491:	jg     0x4024b5
  402497:	push   DWORD PTR [ebp-0x24]
  40249a:	push   DWORD PTR [ebp-0x28]
  40249d:	call   DWORD PTR ds:0x42dfe8
  4024a3:	xor    edx,DWORD PTR ds:0x428421
  4024a9:	adc    DWORD PTR ds:0x4284ed,ecx
  4024af:	add    edx,0x747e
  4024b5:	or     DWORD PTR ds:0x42854d,0x36ec
  4024bf:	neg    DWORD PTR ds:0x428545
  4024c5:	adc    edx,DWORD PTR ds:0x428341
  4024cb:	sbb    DWORD PTR ds:0x428581,edi
  4024d1:	sbb    DWORD PTR ds:0x42854d,0x669d
  4024db:	mov    edx,DWORD PTR [ebp-0x34]
  4024de:	or     ecx,edx
  4024e0:	xor    ecx,0x5fdd
  4024e6:	cmp    ecx,DWORD PTR [eax]
  4024e8:	mov    DWORD PTR ds:0x4284f1,0x2fd8
  4024f2:	jne    0x408bb3
  4024f8:	mov    ecx,DWORD PTR [esi]
  4024fa:	cmp    DWORD PTR ds:0x428501,0x0
  402501:	mov    DWORD PTR ds:0x428415,edi
  402507:	not    edx
  402509:	mov    DWORD PTR ds:0x4284f1,0x71cc
  402513:	jmp    0x402572
  402518:	mov    eax,ds:0x428501
  40251d:	mov    eax,0x2d63
  402522:	cmp    DWORD PTR ds:0x428501,0x0
  402529:	je     0x40255f
  40252f:	push   0x428369
  402534:	push   DWORD PTR [ebp-0x18]
  402537:	push   0x428255
  40253c:	push   0x6ba7
  402541:	call   DWORD PTR ds:0x42dfec
  402547:	sbb    edx,DWORD PTR ds:0x428375
  40254d:	xor    edx,DWORD PTR ds:0x42836d
  402553:	and    edx,edx
  402555:	mov    DWORD PTR ds:0x428429,0x7db9
  40255f:	add    DWORD PTR ds:0x428465,edx
  402565:	inc    edx
  402566:	and    DWORD PTR ds:0x428339,ecx
  40256c:	or     DWORD PTR ds:0x428481,ecx
  402572:	mov    eax,DWORD PTR [esi+0x4]
  402575:	shrd   ecx,eax,0x2
  402579:	shr    eax,0x2
  40257c:	adc    DWORD PTR ds:0x428371,ecx
  402582:	mov    eax,DWORD PTR [esi]
  402584:	movzx  edx,BYTE PTR ds:0x428431
  40258b:	or     DWORD PTR ds:0x428565,edx
  402591:	mov    edx,DWORD PTR [esi+0x4]
  402594:	shl    eax,0x1e
  402597:	xor    ecx,edi
  402599:	xor    eax,eax
  40259b:	or     eax,ecx
  40259d:	jmp    0x40293e
  4025a2:	cmp    al,0x5
  4025a4:	ja     0x4025d8
  4025a6:	jl     0x40255c
  4025a8:	mov    esp,0xb45d5307
  4025ad:	iret   
  4025ae:	addr16 hlt 
  4025b0:	adc    bl,BYTE PTR [esi-0x41412542]
  4025b6:	mov    ebp,0xb0bebec4
  4025bb:	mov    ds:0x98c88b16,al
  4025c0:	dec    ebx
  4025c1:	test   DWORD PTR [ecx-0x60],edi
  4025c4:	(bad)  
  4025c5:	jne    0x402630
  4025c7:	(bad)  
  4025c8:	xor    al,0x8e
  4025ca:	inc    edx
  4025cb:	jecxz  0x402553
  4025cd:	xchg   esi,eax
  4025ce:	jl     0x4025d2
  4025d0:	popa   
  4025d1:	push   ecx
  4025d2:	add    dl,BYTE PTR [edi]
  4025d4:	hlt    
  4025d5:	pushf  
  4025d6:	cmp    eax,0xf11ef328
  4025db:	jbe    0x402599
  4025dd:	scas   eax,DWORD PTR es:[edi]
  4025de:	jmp    0x7412:0x2d7dfae4
  4025e5:	pusha  
  4025e6:	mov    esp,0x28b99143
  4025eb:	adc    al,0x51
  4025ed:	pop    ecx
  4025ee:	xchg   edx,eax
  4025ef:	mov    dl,0x5c
  4025f1:	sub    BYTE PTR [edx],0x41
  4025f4:	and    BYTE PTR [edx-0x78036f24],0xfc
  4025fb:	ret    0xac12
  4025fe:	jecxz  0x402619
  402600:	mov    ebp,DWORD PTR [edi-0x2d08490b]
  402606:	loopne 0x4025f0
  402608:	adc    eax,esi
  40260a:	shl    DWORD PTR [edi],1
  40260c:	scas   eax,DWORD PTR es:[edi]
  40260d:	jecxz  0x40263b
  40260f:	mov    esp,DWORD PTR [ebx-0x70a910c0]
  402615:	jnp    0x40267b
  402617:	inc    edx
  402618:	lea    ebp,[edi]
  40261a:	inc    ebx
  40261b:	dec    edi
  40261c:	push   eax
  40261d:	in     eax,dx
  40261e:	pusha  
  40261f:	sahf   
  402620:	ja     0x402632
  402622:	fwait
  402623:	shl    bh,0xc0
  402626:	mov    al,0x7e
  402628:	or     bh,BYTE PTR [ecx-0x7a]
  40262b:	inc    ebx
  40262c:	test   eax,0x4da0cdb
  402631:	aam    0x5
  402633:	inc    ebx
  402634:	(bad)  
  402635:	push   ebx
  402636:	test   ebp,edi
  402638:	cdq    
  402639:	or     BYTE PTR [ebx],al
  40263b:	cld    
  40263c:	or     cl,bl
  40263e:	cmp    BYTE PTR [esi],0x96
  402641:	rcr    al,1
  402643:	popf   
  402644:	mov    ah,0xb8
  402646:	test   BYTE PTR ds:0x7fc0a9b3,0xe0
  40264d:	and    BYTE PTR [edi+0x78732e13],0x27
  402654:	mov    bl,BYTE PTR [ebx]
  402656:	shl    esp,0x20
  402659:	inc    ecx
  40265a:	inc    ecx
  40265b:	jne    0x4026c6
  40265d:	sub    al,0xc4
  40265f:	sbb    ch,BYTE PTR [eax+0x1256d4f5]
  402665:	dec    edi
  402666:	ret    
  402667:	hlt    
  402668:	popa   
  402669:	icebp  
  40266a:	xor    eax,0x646df216
  40266f:	dec    edx
  402670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402671:	mov    dh,0x3b
  402673:	sti    
  402674:	clc    
  402675:	xchg   DWORD PTR [edx-0xadfdbcb],ebx
  40267b:	add    al,0x55
  40267d:	aas    
  40267e:	pop    edi
  40267f:	cmp    dl,BYTE PTR cs:[esi+edx*1+0xa]
  402684:	xchg   ecx,eax
  402685:	pop    ss
  402686:	imul   esp,DWORD PTR [esi+0x1ba24174],0xa5b5b08e
  402690:	sahf   
  402691:	mov    edi,0xa4934294
  402696:	ds cld 
  402698:	sbb    BYTE PTR [edx+0x5df183d1],al
  40269e:	and    ch,BYTE PTR [eax]
  4026a0:	xor    al,BYTE PTR [esp+eax*4]
  4026a3:	sbb    ch,BYTE PTR [ebp-0x367d788b]
  4026a9:	push   ds
  4026aa:	fldcw  WORD PTR [esi+0x67c7ccb6]
  4026b0:	lods   al,BYTE PTR ds:[esi]
  4026b1:	lahf   
  4026b2:	xchg   ebp,eax
  4026b3:	inc    ebx
  4026b4:	ja     0x4026b2
  4026b6:	and    al,0x11
  4026b8:	pop    ss
  4026b9:	inc    BYTE PTR [ebx+0x223ac7e6]
  4026bf:	adc    dh,al
  4026c1:	retf   
  4026c2:	jl     0x402692
  4026c4:	push   ebx
  4026c5:	bound  ebp,QWORD PTR [esi+0x19]
  4026c8:	cwde   
  4026c9:	aam    0x9d
  4026cb:	dec    edi
  4026cc:	aam    0xb5
  4026ce:	lds    edx,FWORD PTR [eax-0x3a]
  4026d1:	ret    0xb563
  4026d4:	ins    DWORD PTR es:[edi],dx
  4026d5:	jbe    0x402662
  4026d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026d8:	jb     0x402710
  4026da:	pop    es
  4026db:	dec    ebx
  4026dc:	jbe    0x4026d0
  4026de:	retf   
  4026df:	push   ebx
  4026e0:	mov    BYTE PTR [eax+0x5d9787d7],cl
  4026e6:	mov    eax,gs
  4026e8:	mov    edi,0xac43ebd8
  4026ed:	popf   
  4026ee:	les    ebp,FWORD PTR [edi]
  4026f0:	mov    ecx,DWORD PTR es:0x102f3602
  4026f7:	sbb    eax,0x48c82824
  4026fc:	mov    dh,0xa2
  4026fe:	push   es
  4026ff:	and    dl,BYTE PTR [ecx]
  402701:	jae    0x40272d
  402703:	sti    
  402704:	pop    edi
  402705:	test   eax,0xd2fd915e
  40270a:	sbb    eax,0x4ef4959
  40270f:	adc    ebp,DWORD PTR [esp+edx*4-0x71]
  402713:	fsub   DWORD PTR [ecx+0x42]
  402716:	jno    0x40273f
  402718:	cdq    
  402719:	call   0x4002:0x4b40f4b4
  402720:	loopne 0x402776
  402722:	jne    0x402797
  402724:	mov    DWORD PTR [eax+ecx*4-0x45a87271],ebp
  40272b:	(bad)
  40272e:	mov    dh,0x83
  402730:	and    bh,BYTE PTR [ecx+eiz*1+0x39]
  402734:	rcr    BYTE PTR [esi-0x72],cl
  402737:	enter  0x7096,0x90
  40273b:	push   ebx
  40273c:	pop    ecx
  40273d:	pop    ebp
  40273e:	jo     0x4027a7
  402740:	and    ah,bl
  402742:	fiadd  DWORD PTR [ebx]
  402744:	stos   BYTE PTR es:[edi],al
  402745:	inc    ecx
  402746:	stos   DWORD PTR es:[edi],eax
  402747:	ucomiss xmm7,xmm4
  40274a:	inc    esp
  40274b:	xor    DWORD PTR [ecx-0x7b],0xf13255f3
  402752:	xor    DWORD PTR [edi],ecx
  402754:	lods   al,BYTE PTR ds:[esi]
  402755:	int3   
  402756:	ss adc ah,ah
  402759:	inc    edx
  40275a:	jne    0x402728
  40275c:	mov    ah,0x4b
  40275e:	imul   eax,ecx,0x292cd0ab
  402764:	cmp    eax,0xae417c8b
  402769:	gs int 0xb7
  40276c:	mov    DWORD PTR [ebx-0x21],0x78eab7f0
  402773:	mov    ebx,DWORD PTR [ecx-0x58]
  402776:	mov    dh,0x1a
  402778:	push   edx
  402779:	inc    edi
  40277a:	or     dh,bh
  40277c:	lods   eax,DWORD PTR ds:[esi]
  40277d:	rcr    cl,1
  40277f:	das    
  402780:	push   DWORD PTR [edx-0x3c]
  402783:	fisub  WORD PTR [edx]
  402785:	jmp    0xac7b:0x4545ac3d
  40278c:	in     al,0x66
  40278e:	(bad)  
  40278f:	and    al,0x9f
  402791:	xor    cl,BYTE PTR ds:0x2e99e204
  402797:	neg    BYTE PTR [ecx]
  402799:	int    0xde
  40279b:	into   
  40279c:	out    0xb9,al
  40279e:	je     0x4027b0
  4027a0:	ret    
  4027a1:	rcr    DWORD PTR [edi],cl
  4027a3:	sar    DWORD PTR [ebp+ebp*2-0xc95d5a3],1
  4027aa:	jmp    FWORD PTR [ecx-0x24]
  4027ad:	pop    esp
  4027af:	psubb  mm7,QWORD PTR [esi]
  4027b2:	mov    BYTE PTR [edi+ebp*1+0x40],cl
  4027b6:	scas   al,BYTE PTR es:[edi]
  4027b7:	clts   
  4027b9:	inc    ecx
  4027ba:	mov    dh,0x20
  4027bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027be:	pop    edi
  4027c0:	jmp    0x402779
  4027c2:	in     al,dx
  4027c3:	sub    al,0xab
  4027c5:	lods   eax,DWORD PTR ds:[esi]
  4027c6:	(bad)  
  4027c8:	into   
  4027c9:	or     edi,DWORD PTR [eax-0x49742e3f]
  4027cf:	aaa    
  4027d0:	jno    0x402771
  4027d2:	pushf  
  4027d3:	mov    bh,0x63
  4027d5:	cmp    eax,0xd35f821c
  4027da:	out    0x35,eax
  4027dc:	in     al,0x5a
  4027de:	pop    ebp
  4027df:	(bad)  
  4027e0:	out    0x25,al
  4027e2:	ret    
  4027e3:	cmp    eax,0x93fbe677
  4027e8:	enter  0x95d5,0x98
  4027ec:	adc    bl,BYTE PTR ds:0x8ac7b7d2
  4027f2:	cmp    eax,0xc95ea5cf
  4027f7:	in     al,dx
  4027f8:	ret    
  4027f9:	mov    edi,0xa7fcb40
  4027fe:	add    ecx,esi
  402800:	fs jecxz 0x402833
  402803:	jo     0x402816
  402805:	lahf   
  402806:	xchg   ecx,eax
  402807:	adc    al,0x45
  402809:	(bad)  
  40280a:	pop    ss
  40280b:	jne    0x4027f0
  40280d:	sti    
  40280e:	inc    ebx
  40280f:	aaa    
  402810:	retf   
  402811:	sbb    bl,cl
  402813:	push   edi
  402814:	loope  0x4027b2
  402816:	cmc    
  402817:	arpl   sp,sp
  402819:	leave  
  40281a:	stos   BYTE PTR es:[edi],al
  40281b:	push   ecx
  40281c:	and    bh,0x76
  40281f:	sbb    al,0xa4
  402821:	sub    DWORD PTR [ecx-0xa],edx
  402824:	je     0x402878
  402826:	(bad)  
  402827:	mov    al,ds:0xe4f0bf49
  40282c:	xlat   BYTE PTR ds:[ebx]
  40282d:	data16 mov dh,0x7f
  402830:	adc    ecx,DWORD PTR [eax]
  402832:	mov    bh,0xf2
  402834:	jp     0x402811
  402836:	push   esp
  402837:	cmp    DWORD PTR [ecx],0x74
  40283a:	adc    BYTE PTR ds:0x702dd9ad,bl
  402840:	cmp    al,0x52
  402842:	cwde   
  402843:	test   eax,0x3259b683
  402848:	pop    ebp
  402849:	pushf  
  40284a:	jbe    0x40284e
  40284c:	(bad)  
  40284e:	mov    edx,0x56b1e25c
  402853:	jns    0x40285a
  402855:	shr    ebx,0x4a
  402858:	or     al,BYTE PTR [ebp-0x16]
  40285b:	add    ch,BYTE PTR [ebp+0x4ae6aabf]
  402861:	and    eax,0xcd5b97c
  402866:	aaa    
  402867:	and    al,BYTE PTR [ecx+ecx*8+0x1f]
  40286b:	ret    
  40286c:	das    
  40286d:	dec    ebx
  40286e:	(bad)  
  40286f:	(bad)  
  402871:	cwde   
  402872:	ja     0x402803
  402874:	jmp    0x65a3:0xf6fe23da
  40287b:	dec    ebx
  40287c:	cmp    esi,esi
  40287e:	mov    esp,0xde0a55c4
  402883:	xor    eax,0x654f5092
  402888:	gs (bad) 
  40288a:	xchg   BYTE PTR [ecx],dh
  40288c:	mov    bh,0xe3
  40288e:	sbb    al,0xb5
  402890:	ficom  DWORD PTR [esi-0x4ab2e050]
  402896:	mov    esp,0x9d3003e1
  40289b:	sbb    DWORD PTR [esi],eax
  40289d:	add    eax,0xac1d6ff
  4028a2:	ins    DWORD PTR es:[edi],dx
  4028a3:	int    0x72
  4028a5:	mov    ebp,0x543dce81
  4028aa:	test   ch,dl
  4028ac:	inc    edi
  4028ad:	inc    ebp
  4028ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028af:	call   0x1d13ca7e
  4028b4:	lock stos DWORD PTR es:[edi],eax
  4028b6:	ret    
  4028b7:	mov    eax,0xc3576ea7
  4028bc:	sbb    cl,ah
  4028be:	fwait
  4028bf:	add    DWORD PTR [edi+ebx*1],esi
  4028c2:	loopne 0x40293b
  4028c4:	mov    al,0x75
  4028c6:	std    
  4028c7:	sbb    eax,ebp
  4028c9:	ins    BYTE PTR es:[edi],dx
  4028ca:	daa    
  4028cb:	jo     0x40288e
  4028cd:	jnp    0x4028f8
  4028cf:	xchg   edi,eax
  4028d0:	xor    al,0xf4
  4028d2:	sbb    edi,DWORD PTR [edx]
  4028d4:	push   cs
  4028d5:	xchg   ebx,eax
  4028d6:	adc    BYTE PTR [ebx+0x1f2f3796],al
  4028dc:	rol    DWORD PTR [ebx+0x327580cb],1
  4028e2:	mov    ebx,0x71eda66a
  4028e7:	mov    BYTE PTR [eax-0x70cccd4a],ah
  4028ed:	int    0x6
  4028ef:	push   eax
  4028f0:	or     eax,0x81faf70a
  4028f5:	or     edx,DWORD PTR ds:0x4079e3f4
  4028fb:	mov    BYTE PTR [edx],bl
  4028fd:	vmovdqa XMMWORD PTR [eax],xmm2
  402902:	jmp    0xb2168d30
  402907:	and    eax,0xc3d8f44
  40290c:	(bad)  
  40290d:	stc    
  40290e:	outs   dx,BYTE PTR ds:[esi]
  40290f:	in     eax,0x9c
  402911:	imul   edi,edx,0xffffffe6
  402914:	mov    ebx,0xfd15ced4
  402919:	mov    cr3,edx
  40291c:	fsub   st(7),st
  40291e:	sbb    eax,0x1e3fe479
  402923:	(bad)  
  402924:	pusha  
  402925:	sbb    esp,DWORD PTR [ecx-0x17037647]
  40292b:	loopne 0x40291f
  40292d:	push   edi
  40292e:	push   0x50
  402930:	sar    BYTE PTR [edi-0x5708304a],1
  402936:	xchg   ebp,eax
  402937:	dec    esp
  402938:	xchg   edi,eax
  402939:	push   es
  40293a:	pusha  
  40293b:	rcl    DWORD PTR [edi-0x13b27425],1
  402941:	cmp    eax,DWORD PTR [ecx]
  402943:	mov    DWORD PTR ds:0x428429,0x7e19
  40294d:	jne    0x402a3a
  402953:	cmp    DWORD PTR ds:0x4284f1,0x0
  40295a:	mov    DWORD PTR ds:0x428545,edi
  402960:	mov    ecx,0x5bac
  402965:	mov    ecx,0x785
  40296a:	jmp    0x4029c0
  40296f:	mov    DWORD PTR ds:0x4284f5,0x7d3d
  402979:	mov    eax,ds:0x428351
  40297e:	cmp    DWORD PTR ds:0x4284f1,0x0
  402985:	jl     0x4029a6
  40298b:	push   0x25e9
  402990:	call   DWORD PTR ds:0x42e238
  402996:	and    ecx,0x7efc
  40299c:	and    DWORD PTR ds:0x428481,0x428369
  4029a6:	sub    edx,edx
  4029a8:	and    DWORD PTR ds:0x428555,0x3b56
  4029b2:	mov    edx,DWORD PTR ds:0x42852d
  4029b8:	mov    edx,DWORD PTR [edx]
  4029ba:	add    DWORD PTR ds:0x428445,edx
  4029c0:	mov    eax,DWORD PTR [ebp-0xc]
  4029c3:	mov    ecx,DWORD PTR [ebp+0x20]
  4029c6:	sub    DWORD PTR ds:0x428375,edi
  4029cc:	xor    DWORD PTR [eax],ecx
  4029ce:	mov    eax,DWORD PTR [ebp-0xc]
  4029d1:	or     edx,ecx
  4029d3:	mov    ecx,DWORD PTR [ebp+0x18]
  4029d6:	or     DWORD PTR ds:0x428451,ebx
  4029dc:	mov    edx,DWORD PTR [ebp+0x1c]
  4029df:	add    DWORD PTR ds:0x42834d,0x2a87
  4029e9:	shrd   ecx,edx,0x2
  4029ed:	sub    DWORD PTR ds:0x42845d,0x428435
  4029f7:	mov    DWORD PTR [ebp-0x14],ecx
  4029fa:	mov    ecx,DWORD PTR [ebp+0x18]
  4029fd:	xor    DWORD PTR [ebp-0x14],edi
  402a00:	shr    edx,0x2
  402a03:	xor    edx,0x4270
  402a09:	mov    edx,DWORD PTR [ebp+0x1c]
  402a0c:	sbb    DWORD PTR ds:0x428409,0x428425
  402a16:	xor    edx,edx
  402a18:	and    DWORD PTR ds:0x428579,0x428331
  402a22:	or     edx,DWORD PTR [ebp-0x14]
  402a25:	or     DWORD PTR ds:0x428451,0x6ae7
  402a2f:	shl    ecx,0x1e
  402a32:	xor    DWORD PTR ds:0x428369,edx
  402a38:	sub    DWORD PTR [eax],edx
  402a3a:	xor    ecx,ecx
  402a3c:	add    ecx,DWORD PTR ds:0x4284c1
  402a42:	mov    eax,ds:0x428539
  402a47:	sub    eax,ecx
  402a49:	add    ecx,DWORD PTR [ecx+eax*1]
  402a4c:	mov    eax,ds:0x422580
  402a51:	add    edx,DWORD PTR ds:0x428365
  402a57:	mov    ecx,DWORD PTR [ebp-0xc]
  402a5a:	cmp    DWORD PTR ds:0x428419,0x0
  402a61:	not    edx
  402a63:	not    DWORD PTR ds:0x42834d
  402a69:	movzx  edx,WORD PTR ds:0x42833d
  402a70:	jmp    0x402ae1
  402a75:	mov    edx,0x6743
  402a7a:	cmp    DWORD PTR ds:0x428419,0x0
  402a81:	jg     0x402ac1
  402a87:	push   0x8e71
  402a8c:	push   DWORD PTR [ebp-0x1c]
  402a8f:	call   DWORD PTR ds:0x42dff0
  402a95:	movzx  edx,WORD PTR ds:0x428469
  402a9c:	sbb    edx,DWORD PTR ds:0x428561
  402aa2:	mov    DWORD PTR ds:0x428469,edx
  402aa8:	movzx  edx,BYTE PTR ds:0x428471
  402aaf:	adc    DWORD PTR ds:0x428549,edx
  402ab5:	or     edx,0x3af6
  402abb:	and    edx,DWORD PTR ds:0x42832d
  402ac1:	or     DWORD PTR ds:0x428369,0x67f9
  402acb:	add    edx,0x3b45
  402ad1:	or     edx,DWORD PTR ds:0x4284d1
  402ad7:	adc    DWORD PTR ds:0x428549,0x3eb0
  402ae1:	mov    eax,DWORD PTR [eax]
  402ae3:	cmp    DWORD PTR ds:0x428351,0x0
  402aea:	mov    DWORD PTR ds:0x4284d9,0xab9
  402af4:	mov    edx,DWORD PTR ds:0x42836d
  402afa:	mov    DWORD PTR ds:0x428341,0x238f
  402b04:	jmp    0x402b79
  402b09:	mov    DWORD PTR ds:0x428575,ecx
  402b0f:	cmp    DWORD PTR ds:0x428351,0x0
  402b16:	ja     0x402b5f
  402b1c:	push   DWORD PTR [ebp-0x14]
  402b1f:	push   0x428191
  402b24:	push   DWORD PTR [ebp-0x10]
  402b27:	push   0x428238
  402b2c:	push   DWORD PTR [ebp-0x18]
  402b2f:	push   0x24b6
  402b34:	call   DWORD PTR ds:0x42e23c
  402b3a:	mov    edx,DWORD PTR ds:0x428375
  402b40:	sub    DWORD PTR ds:0x42835d,edx
  402b46:	sbb    DWORD PTR ds:0x428449,ebx
  402b4c:	movzx  edx,BYTE PTR ds:0x42832d
  402b53:	adc    DWORD PTR ds:0x42846d,edx
  402b59:	add    DWORD PTR ds:0x42856d,ebx
  402b5f:	xor    edx,edx
  402b61:	or     edx,DWORD PTR ds:0x42857d
  402b67:	xor    edx,DWORD PTR ds:0x4284e5
  402b6d:	mov    DWORD PTR ds:0x42857d,edx
  402b73:	add    edx,0x71a6
  402b79:	add    eax,DWORD PTR [ecx]
  402b7b:	sub    ecx,0x1eef
  402b81:	mov    DWORD PTR [ebp-0x14],eax
  402b84:	or     ecx,DWORD PTR ds:0x42845d
  402b8a:	mov    ecx,DWORD PTR [ebx]
  402b8c:	mov    eax,DWORD PTR [ebx+0x4]
  402b8f:	shrd   ecx,eax,0x2
  402b93:	cmp    DWORD PTR ds:0x42832d,0x0
  402b9a:	mov    DWORD PTR ds:0x4284d1,0x61cd
  402ba4:	mov    edx,DWORD PTR ds:0x428339
  402baa:	mov    DWORD PTR ds:0x428345,edx
  402bb0:	jmp    0x402c95
  402bb5:	mov    DWORD PTR ds:0x428349,0x124b
  402bbf:	mov    DWORD PTR ds:0x428421,0x5ddc
  402bc9:	cmp    DWORD PTR ds:0x42832d,0x0
  402bd0:	jle    0x402bf9
  402bd6:	push   0x6f74
  402bdb:	call   DWORD PTR ds:0x42e0ac
  402be1:	sub    DWORD PTR ds:0x4284ed,edx
  402be7:	and    edx,DWORD PTR ds:0x428425
  402bed:	mov    edx,DWORD PTR ds:0x428575
  402bf3:	xor    DWORD PTR ds:0x4284c5,edx
  402bf9:	mov    edx,DWORD PTR ds:0x4285b9
  402bff:	mov    edx,DWORD PTR [edx]
  402c01:	xor    DWORD PTR ds:0x428429,edx
  402c07:	and    DWORD PTR ds:0x42834d,0x245f
  402c11:	cmp    DWORD PTR ds:0x428341,0x0
  402c18:	mov    DWORD PTR ds:0x4284e1,0x70c6
  402c22:	not    edx
  402c24:	mov    edx,0x462e
  402c29:	jmp    0x402c95
  402c2e:	mov    DWORD PTR ds:0x428481,edx
  402c34:	cmp    DWORD PTR ds:0x428341,0x0
  402c3b:	jl     0x402c5f
  402c41:	push   DWORD PTR [ebp-0x18]
  402c44:	push   0x2a6e
  402c49:	call   DWORD PTR ds:0x42e240
  402c4f:	sbb    DWORD PTR ds:0x428341,0x59bd
  402c59:	sub    edx,0x641d
  402c5f:	sbb    DWORD PTR ds:0x428349,0x428501
  402c69:	sbb    DWORD PTR ds:0x4284e5,0x27b0
  402c73:	mov    edx,DWORD PTR ds:0x4284ad
  402c79:	mov    edx,DWORD PTR [edx]
  402c7b:	adc    DWORD PTR ds:0x428405,edx
  402c81:	xor    DWORD PTR ds:0x428455,0x428421
  402c8b:	sbb    DWORD PTR ds:0x428471,0x33ea
  402c95:	shr    eax,0x2
  402c98:	cmp    DWORD PTR ds:0x428445,0x0
  402c9f:	mov    DWORD PTR ds:0x428561,0x384
  402ca9:	mov    DWORD PTR ds:0x428345,0x2b95
  402cb3:	mov    edx,DWORD PTR ds:0x428549
  402cb9:	mov    DWORD PTR ds:0x428501,edx
  402cbf:	jmp    0x402d0e
  402cc4:	mov    eax,0x220e
  402cc9:	mov    DWORD PTR ds:0x4284ed,0x7b53
  402cd3:	cmp    DWORD PTR ds:0x428445,0x0
  402cda:	jbe    0x402d06
  402ce0:	push   0x3c7e
  402ce5:	push   0x1ff0
  402cea:	call   DWORD PTR ds:0x42e0b0
  402cf0:	sub    edx,0x6132
  402cf6:	sbb    DWORD PTR ds:0x428501,0x612a
  402d00:	sbb    DWORD PTR ds:0x428565,ecx
  402d06:	dec    edx
  402d07:	inc    edx
  402d08:	and    edx,DWORD PTR ds:0x428565
  402d0e:	mov    eax,DWORD PTR [ebx]
  402d10:	mov    edx,DWORD PTR [ebx+0x4]
  402d13:	dec    DWORD PTR ds:0x428405
  402d19:	xor    ecx,edi
  402d1b:	shl    eax,0x1e
  402d1e:	xor    edx,0x1700
  402d24:	xor    eax,eax
  402d26:	sub    edx,0x11fc
  402d2c:	or     eax,ecx
  402d2e:	mov    ecx,DWORD PTR [ebx]
  402d30:	cmp    DWORD PTR ds:0x428501,0x0
  402d37:	mov    DWORD PTR ds:0x428469,0x400c
  402d41:	mov    edx,DWORD PTR ds:0x42842d
  402d47:	mov    edx,DWORD PTR ds:0x4284fd
  402d4d:	jmp    0x402d9d
  402d52:	mov    DWORD PTR ds:0x428451,0x114
  402d5c:	cmp    DWORD PTR ds:0x428501,0x0
  402d63:	je     0x402d85
  402d69:	push   DWORD PTR [ebp-0x24]
  402d6c:	call   DWORD PTR ds:0x42e0b4
  402d72:	dec    edx
  402d73:	xor    edx,DWORD PTR ds:0x428559
  402d79:	or     DWORD PTR ds:0x428439,ebx
  402d7f:	sub    DWORD PTR ds:0x4284fd,ecx
  402d85:	mov    edx,DWORD PTR ds:0x42854d
  402d8b:	xor    DWORD PTR ds:0x4284ed,edx
  402d91:	xor    edx,0x442c
  402d97:	not    DWORD PTR ds:0x42833d
  402d9d:	mov    edx,DWORD PTR [ebx+0x4]
  402da0:	add    DWORD PTR ds:0x428439,0x428419
  402daa:	shrd   ecx,edx,0x2
  402dae:	shr    edx,0x2
  402db1:	mov    DWORD PTR [ebp-0x1c],ecx
  402db4:	sbb    edx,DWORD PTR ds:0x428501
  402dba:	mov    ecx,DWORD PTR [ebx]
  402dbc:	mov    edx,DWORD PTR ds:0x428481
  402dc2:	xor    DWORD PTR ds:0x4284ed,edx
  402dc8:	mov    edx,DWORD PTR [ebx+0x4]
  402dcb:	xor    DWORD PTR [ebp-0x1c],edi
  402dce:	and    DWORD PTR ds:0x428471,0x4abe
  402dd8:	xor    edx,edx
  402dda:	sub    DWORD PTR ds:0x428411,0x1446
  402de4:	or     edx,DWORD PTR [ebp-0x1c]
  402de7:	shl    ecx,0x1e
  402dea:	lea    ecx,[edx+eax*1]
  402ded:	mov    edx,DWORD PTR ds:0x42852d
  402df3:	xor    eax,eax
  402df5:	xor    eax,DWORD PTR ds:0x4285b9
  402dfb:	sub    edx,eax
  402dfd:	add    edx,DWORD PTR [edx+eax*1]
  402e00:	mov    eax,DWORD PTR [ebx]
  402e02:	xor    DWORD PTR ds:0x428571,ecx
  402e08:	mov    edx,DWORD PTR [ebx+0x4]
  402e0b:	or     DWORD PTR ds:0x42840d,0x3bc
  402e15:	shrd   eax,edx,0x2
  402e19:	shr    edx,0x2
  402e1c:	cmp    DWORD PTR ds:0x42857d,0x0
  402e23:	mov    DWORD PTR ds:0x42846d,ebx
  402e29:	mov    DWORD PTR ds:0x428471,0x656f
  402e33:	movzx  edx,BYTE PTR ds:0x428419
  402e3a:	jmp    0x402e93
  402e3f:	mov    DWORD PTR ds:0x42843d,0x5c7
  402e49:	mov    DWORD PTR ds:0x42847d,0x3013
  402e53:	cmp    DWORD PTR ds:0x42857d,0x0
  402e5a:	jle    0x402e7f
  402e60:	push   DWORD PTR [ebp-0x24]
  402e63:	call   DWORD PTR ds:0x42e0b8
  402e69:	sub    DWORD PTR ds:0x428351,0x7db0
  402e73:	sub    DWORD PTR ds:0x428581,ecx
  402e79:	adc    DWORD PTR ds:0x42840d,edx
  402e7f:	and    edx,DWORD PTR ds:0x4284e9
  402e85:	mov    edx,DWORD PTR ds:0x42839d
  402e8b:	mov    edx,DWORD PTR [edx]
  402e8d:	xor    DWORD PTR ds:0x42836d,edx
  402e93:	mov    DWORD PTR [ebp-0x1c],eax
  402e96:	not    DWORD PTR ds:0x428451
  402e9c:	mov    eax,DWORD PTR [ebx]
  402e9e:	add    DWORD PTR ds:0x4284e9,0x4968
  402ea8:	jmp    0x403249
  402ead:	cmp    al,0xdc
  402eaf:	(bad)  
  402eb0:	inc    ebp
  402eb1:	ss dec ebx
  402eb3:	mov    esp,0x8c100abc
  402eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eb9:	jbe    0x402e75
  402ebb:	stos   BYTE PTR es:[edi],al
  402ebc:	jecxz  0x402e7b
  402ebe:	loopne 0x402e7e
  402ec0:	mov    esi,0xbebec4bd
  402ec5:	jbe    0x402e4c
  402ec7:	js     0x402e5b
  402ec9:	sar    BYTE PTR [edx+0x16e4a157],1
  402ecf:	and    bl,0x2e
  402ed2:	adc    DWORD PTR [ecx],esp
  402ed4:	inc    eax
  402ed5:	add    al,0x51
  402ed7:	das    
  402ed8:	mov    WORD PTR [edi],ds
  402eda:	es pop edi
  402edc:	pop    ss
  402edd:	dec    ebp
  402ede:	das    
  402edf:	les    esp,FWORD PTR [ebx+0x1c]
  402ee2:	je     0x402f42
  402ee4:	loop   0x402f01
  402ee6:	popf   
  402ee7:	arpl   WORD PTR [eax-0x54],dx
  402eea:	scas   eax,DWORD PTR es:[edi]
  402eeb:	repnz sbb BYTE PTR [esi+0x4b02a132],0x3d
  402ef3:	xor    BYTE PTR [esi-0x644f06e1],0x4d
  402efa:	pop    esp
  402efb:	mov    ebp,0xab9a4b83
  402f00:	adc    BYTE PTR [esp+ebx*1-0x3],ah
  402f04:	jo     0x402ecd
  402f06:	icebp  
  402f07:	jo     0x402ec7
  402f09:	cwde   
  402f0a:	aam    0xdb
  402f0c:	imul   ecx,DWORD PTR [esp+eax*4+0x55d4bb06],0x4a
  402f14:	test   eax,0xab11a15e
  402f19:	adc    al,0x6e
  402f1b:	mov    bl,0x39
  402f1d:	mov    esp,0x35956857
  402f22:	push   ebp
  402f23:	and    DWORD PTR [ecx-0x51],esi
  402f26:	pop    edi
  402f27:	mov    al,0x4
  402f29:	cwde   
  402f2a:	cmp    cl,BYTE PTR [edi]
  402f2c:	repz push edx
  402f2e:	ds pop ds
  402f30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f31:	fistp  DWORD PTR [edi+ebp*4+0x65]
  402f35:	sbb    al,0xd9
  402f37:	push   ecx
  402f38:	retf   
  402f39:	jo     0x402f20
  402f3b:	sbb    al,0xc1
  402f3d:	dec    esi
  402f3e:	addr16 pusha 
  402f40:	jle    0x402fa4
  402f42:	cdq    
  402f43:	repz pop es
  402f45:	fwait
  402f46:	clc    
  402f47:	mov    WORD PTR [ebx],gs
  402f49:	jo     0x402f21
  402f4b:	lods   al,BYTE PTR ds:[esi]
  402f4c:	cdq    
  402f4d:	mov    bl,0x8
  402f4f:	cmp    DWORD PTR [edx+0x29],esi
  402f52:	in     al,dx
  402f53:	jecxz  0x402f67
  402f55:	sbb    esp,DWORD PTR [edi+0x23986d2d]
  402f5b:	out    dx,al
  402f5c:	retf   0x5c15
  402f5f:	nop
  402f60:	adc    BYTE PTR [edx+0x64900bd1],ch
  402f66:	jb     0x402f62
  402f68:	div    ah
  402f6a:	stos   DWORD PTR es:[edi],eax
  402f6b:	mov    DWORD PTR [edi],edi
  402f6d:	xchg   ebp,eax
  402f6e:	xor    al,0xf4
  402f70:	or     DWORD PTR [edi+0x384b4674],edx
  402f76:	cs cs sub al,0x92
  402f7a:	loop   0x402f5d
  402f7c:	imul   ebp,DWORD PTR [edx],0x3bea823
  402f82:	bound  esi,QWORD PTR [esi*2+0x56d14938]
  402f89:	mov    ecx,ebx
  402f8b:	enter  0xdbf,0xcb
  402f8f:	loopne 0x402f6f
  402f91:	stos   DWORD PTR es:[edi],eax
  402f92:	aad    0x28
  402f94:	pop    ds
  402f95:	sbb    al,0x47
  402f97:	adc    al,0xb4
  402f99:	leave  
  402f9a:	xchg   BYTE PTR [bp+si],cl
  402f9d:	das    
  402f9e:	sub    ebp,edx
  402fa0:	inc    esp
  402fa1:	lods   eax,DWORD PTR ds:[esi]
  402fa2:	test   bh,bh
  402fa4:	push   esi
  402fa5:	neg    ah
  402fa7:	jecxz  0x402fa4
  402fa9:	fld    st(0)
  402fab:	in     al,dx
  402fac:	ss jmp 0x402fb0
  402faf:	cwde   
  402fb0:	loope  0x403016
  402fb2:	test   eax,0x13646e6b
  402fb7:	out    dx,eax
  402fb8:	push   0xffffffc1
  402fba:	hlt    
  402fbb:	mov    ch,0x24
  402fbd:	in     eax,dx
  402fbe:	mov    esp,0xeb1aa416
  402fc3:	jne    0x402f51
  402fc5:	stc    
  402fc6:	popf   
  402fc7:	jp     0x403035
  402fc9:	xchg   ecx,eax
  402fca:	jb     0x402fd7
  402fcc:	xchg   esp,eax
  402fcd:	adc    BYTE PTR [eax-0x72],bl
  402fd0:	loopne 0x403041
  402fd2:	adc    BYTE PTR [edx-0x58b56299],ah
  402fd8:	pop    edx
  402fd9:	sti    
  402fda:	mov    ebp,0x917b0d96
  402fdf:	mov    al,0xb3
  402fe1:	jl     0x403032
  402fe3:	sub    eax,0x5325e29b
  402fe8:	push   edi
  402fe9:	lock inc edi
  402feb:	cmp    eax,0xc1348026
  402ff0:	jnp    0x403039
  402ff2:	push   esi
  402ff3:	loopne 0x403024
  402ff5:	fs (bad) 
  402ff7:	sbb    al,0x58
  402ff9:	icebp  
  402ffa:	int    0x4b
  402ffc:	cld    
  402ffd:	cs gs cwde 
  403000:	addr16 inc ebp
  403002:	dec    edx
  403003:	out    dx,eax
  403004:	dec    ecx
  403005:	add    DWORD PTR [ecx+eiz*1],ebx
  403008:	and    dh,bl
  40300a:	xchg   DWORD PTR [esp+edx*8],esp
  40300d:	mov    edx,0x58d0706d
  403012:	pop    esp
  403013:	mov    ch,0x61
  403015:	mov    ch,0xd2
  403017:	mov    ecx,0xa85005a0
  40301c:	out    dx,eax
  40301d:	cmp    BYTE PTR [edx-0x6b],0xd4
  403021:	mov    ss,WORD PTR [esi-0x26]
  403024:	int3   
  403025:	(bad)  
  403027:	or     al,0xcd
  403029:	ror    DWORD PTR [eax],1
  40302b:	jge    0x403063
  40302d:	shr    bl,cl
  40302f:	mov    eax,0xb7ace558
  403034:	ror    DWORD PTR [ebp+ebx*4-0x51c45211],cl
  40303b:	jne    0x40300e
  40303d:	jno    0x402ff1
  40303f:	sbb    eax,0x8ea4a265
  403044:	xor    eax,0xf3697a97
  403049:	pop    ebp
  40304a:	xchg   ebp,eax
  40304b:	sub    bh,bl
  40304d:	inc    ebx
  40304e:	pusha  
  40304f:	gs jmp 0xbd4b:0x2b8a65da
  403057:	jnp    0x4030a9
  403059:	dec    edx
  40305a:	in     eax,dx
  40305b:	jmp    FWORD PTR [ecx+0x19]
  40305e:	shl    DWORD PTR [bp+di],cl
  403061:	add    DWORD PTR [esi-0x1f7464a],edx
  403067:	leave  
  403068:	in     eax,dx
  403069:	hlt    
  40306a:	(bad)  
  40306b:	adc    edx,DWORD PTR [ebp+0x75]
  40306e:	add    BYTE PTR [eax+0x21],0x0
  403072:	mov    ebx,DWORD PTR [ebx]
  403074:	jbe    0x403001
  403076:	loope  0x40302e
  403078:	out    0xdb,al
  40307a:	(bad)  
  40307b:	jmp    0x7ecdb6f3
  403080:	pop    ecx
  403081:	sbb    eax,0x90680431
  403086:	xor    DWORD PTR [esi],0xffffff80
  403089:	loope  0x403049
  40308b:	mov    bh,bl
  40308d:	pusha  
  40308e:	mov    eax,ds:0x81349dda
  403093:	inc    esp
  403094:	or     ecx,DWORD PTR [edi-0x17aceff3]
  40309a:	mov    BYTE PTR [ebp+0x1ea79d55],ah
  4030a0:	call   0x5ed7:0xbccb6b4a
  4030a7:	xchg   ecx,eax
  4030a8:	xchg   ebp,ecx
  4030aa:	add    DWORD PTR [edi+0x44],ebx
  4030ad:	cmp    eax,0xe469a5ac
  4030b2:	retf   
  4030b3:	neg    DWORD PTR [edi+0x1]
  4030b6:	mov    edx,0xbdb04c8f
  4030bb:	xor    al,0x25
  4030bd:	out    0x6a,eax
  4030bf:	xchg   DWORD PTR [ebp+0x3c],ebp
  4030c2:	jno    0x40306e
  4030c4:	cmp    bl,BYTE PTR [edi-0x6a]
  4030c7:	inc    ebp
  4030c8:	jge    0x40304a
  4030ca:	popa   
  4030cb:	push   esi
  4030cc:	jge    0x403138
  4030ce:	jle    0x4030bc
  4030d0:	mov    DWORD PTR [ebx+0x370a6ac0],esp
  4030d6:	jecxz  0x403142
  4030d8:	aaa    
  4030d9:	jl     0x40313e
  4030db:	adc    BYTE PTR [esi],0x84
  4030de:	scas   eax,DWORD PTR es:[edi]
  4030df:	cmp    DWORD PTR [esi+0x5d8c820a],esi
  4030e5:	rcr    BYTE PTR [edx-0x634a6757],cl
  4030eb:	(bad)  
  4030ec:	jg     0x403163
  4030ee:	mov    eax,0xc25c2b90
  4030f3:	les    ecx,FWORD PTR [ebp+0x13]
  4030f6:	push   esi
  4030f7:	xchg   DWORD PTR [esp+esi*4+0x7ad3a1ee],esi
  4030fe:	or     eax,0x3cc5ad2e
  403103:	enter  0x73b3,0xa8
  403107:	and    DWORD PTR [ebx],ecx
  403109:	pop    esi
  40310a:	dec    ebx
  40310b:	add    esi,DWORD PTR [ecx-0x74]
  40310e:	lds    ecx,FWORD PTR [ebx]
  403110:	sub    dh,bh
  403112:	xchg   esi,eax
  403113:	sub    eax,0xb79884d7
  403118:	das    
  403119:	jb     0x40319a
  40311b:	fiadd  WORD PTR [ecx]
  40311d:	xlat   BYTE PTR ds:[ebx]
  40311e:	mov    DWORD PTR [ebx+0x45e628d],ebp
  403124:	mov    edx,0xd89884ff
  403129:	jp     0x4030c5
  40312b:	es mov ebx,0xf027ae77
  403131:	and    DWORD PTR [esi*4+0x74c8f96f],0x52db7fcb
  40313c:	lea    edi,[esi+esi*2-0x141099d3]
  403143:	es jecxz 0x40317a
  403146:	out    0xac,al
  403148:	(bad)  
  403149:	jns    0x4030ce
  40314b:	mov    ah,0xeb
  40314d:	push   esi
  40314e:	loopne 0x403164
  403150:	cmp    ebx,DWORD PTR [edx]
  403152:	pushf  
  403153:	js     0x40311d
  403155:	pop    esi
  403156:	jecxz  0x403109
  403158:	std    
  403159:	loopne 0x4031a2
  40315b:	jge    0x40319c
  40315d:	xchg   esp,eax
  40315e:	or     al,0x29
  403160:	call   0x20b25348
  403165:	(bad)  [edi-0x2d]
  403168:	and    al,0xde
  40316a:	sbb    BYTE PTR [eax-0x152f2cdf],cl
  403170:	cmp    ecx,DWORD PTR [eax+0x20]
  403173:	push   eax
  403174:	sahf   
  403175:	mov    cl,cl
  403177:	(bad)  
  403178:	cli    
  403179:	fisttp WORD PTR [ebp+0x33]
  40317c:	cmp    eax,0xf1cc6537
  403181:	pop    ebp
  403182:	(bad)  
  403183:	mov    ebx,0xea4ea07a
  403188:	adc    bl,BYTE PTR [ebp-0x7]
  40318b:	pop    eax
  40318c:	jle    0x4031a8
  40318e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40318f:	xor    al,0xbc
  403191:	xor    al,BYTE PTR [esi-0x5f]
  403194:	mov    edx,0xb800f829
  403199:	mov    edx,0xa607a26e
  40319e:	icebp  
  40319f:	push   ecx
  4031a0:	pop    ss
  4031a1:	fbld   TBYTE PTR [esi+0x2e0186a7]
  4031a7:	inc    edx
  4031a8:	lock jle 0x40313c
  4031ab:	push   0x41
  4031ad:	fdivr  DWORD PTR [ebx-0x26a60208]
  4031b3:	imul   edi,DWORD PTR [eax],0x74
  4031b6:	ins    BYTE PTR es:[edi],dx
  4031b7:	pusha  
  4031b8:	adc    bl,BYTE PTR [edi]
  4031ba:	xchg   esi,eax
  4031bb:	push   DWORD PTR [edx+0x3642e1c9]
  4031c1:	cmp    al,0x3d
  4031c3:	push   eax
  4031c4:	push   ds
  4031c5:	inc    ebx
  4031c6:	aam    0xf3
  4031c8:	sti    
  4031c9:	xor    DWORD PTR [esi+0x4a],esi
  4031cc:	das    
  4031cd:	inc    ecx
  4031ce:	neg    al
  4031d0:	cmp    bh,ah
  4031d2:	jp     0x4031a3
  4031d4:	inc    ecx
  4031d5:	inc    esi
  4031d6:	xchg   edx,eax
  4031d7:	fdivrp st(7),st
  4031d9:	in     eax,dx
  4031da:	test   eax,0x97956045
  4031df:	mov    dh,0xdb
  4031e1:	push   eax
  4031e2:	mov    ds:0x213177ac,eax
  4031e7:	and    eax,0xe5473dc7
  4031ec:	sahf   
  4031ed:	add    al,0xa8
  4031ef:	inc    edi
  4031f0:	call   0x2cfd:0xb535c6b
  4031f7:	and    cl,0xd6
  4031fa:	aas    
  4031fb:	dec    eax
  4031fc:	stc    
  4031fd:	enter  0x4e71,0xa2
  403201:	mov    esi,DWORD PTR [edi+0xa30c5bf]
  403207:	pop    ecx
  403208:	cli    
  403209:	in     al,dx
  40320a:	jmp    0x403260
  40320c:	je     0x403266
  40320e:	aam    0x7d
  403210:	outs   dx,BYTE PTR ds:[esi]
  403211:	call   0xd82efcb
  403216:	imul   ebp,edi,0xcac9a8aa
  40321c:	(bad)  
  40321d:	in     eax,0xf0
  40321f:	fcomp  DWORD PTR [edx]
  403221:	fisub  DWORD PTR [ebp+0x4]
  403224:	retf   0xd47f
  403227:	test   al,0xd5
  403229:	out    0xf3,eax
  40322b:	mov    edi,0xb2d69ca8
  403230:	mov    eax,0x8138eedf
  403235:	pop    esi
  403236:	js     0x403287
  403238:	in     al,0x51
  40323a:	jl     0x4031ed
  40323c:	retf   0x2802
  40323f:	cmp    eax,0xde5087fb
  403244:	xchg   ebp,eax
  403245:	sbb    al,0x11
  403247:	cmp    eax,edx
  403249:	mov    edx,DWORD PTR [ebx+0x4]
  40324c:	xor    DWORD PTR [ebp-0x1c],edi
  40324f:	sub    DWORD PTR ds:0x4284d9,ebx
  403255:	mov    edx,eax
  403257:	sub    DWORD PTR ds:0x428579,0x42835d
  403261:	xor    eax,eax
  403263:	or     eax,DWORD PTR [ebp-0x1c]
  403266:	shl    edx,0x1e
  403269:	mov    edx,DWORD PTR ds:0x428459
  40326f:	xor    DWORD PTR ds:0x42840d,edx
  403275:	imul   eax,ecx
  403278:	sub    DWORD PTR ds:0x4284f9,0x4172
  403282:	mov    ecx,DWORD PTR [ebx]
  403284:	add    edx,0x41d1
  40328a:	mov    edx,DWORD PTR [ebx+0x4]
  40328d:	shrd   ecx,edx,0x2
  403291:	mov    DWORD PTR [ebp-0x1c],ecx
  403294:	mov    ecx,DWORD PTR [ebx]
  403296:	or     DWORD PTR ds:0x4284c9,0x42b9
  4032a0:	xor    DWORD PTR [ebp-0x1c],edi
  4032a3:	mov    DWORD PTR ds:0x428555,0x397a
  4032ad:	shr    edx,0x2
  4032b0:	cmp    DWORD PTR ds:0x42855d,0x0
  4032b7:	mov    DWORD PTR ds:0x4284f1,0x7cee
  4032c1:	mov    edx,DWORD PTR ds:0x428405
  4032c7:	jmp    0x403370
  4032cc:	mov    DWORD PTR ds:0x42835d,0x3170
  4032d6:	cmp    DWORD PTR ds:0x42855d,0x0
  4032dd:	jge    0x403302
  4032e3:	push   DWORD PTR [ebp-0x28]
  4032e6:	call   DWORD PTR ds:0x42e244
  4032ec:	add    edx,DWORD PTR ds:0x42841d
  4032f2:	sub    edx,0x765a
  4032f8:	xor    DWORD PTR ds:0x4284d5,0x290
  403302:	sbb    DWORD PTR ds:0x428411,edi
  403308:	inc    edx
  403309:	not    edx
  40330b:	cmp    DWORD PTR ds:0x4284f1,0x0
  403312:	mov    edx,DWORD PTR ds:0x428431
  403318:	mov    DWORD PTR ds:0x4284cd,0x501f
  403322:	mov    edx,DWORD PTR ds:0x4284d1
  403328:	jmp    0x403370
  40332d:	mov    DWORD PTR ds:0x428375,0x1634
  403337:	mov    DWORD PTR ds:0x4284e9,0xaef
  403341:	cmp    DWORD PTR ds:0x4284f1,0x0
  403348:	jb     0x403364
  40334e:	call   DWORD PTR ds:0x42e0bc
  403354:	adc    DWORD PTR ds:0x428431,0x42847d
  40335e:	adc    edx,0x2d88
  403364:	and    edx,0x4ab7
  40336a:	sub    edx,DWORD PTR ds:0x428411
  403370:	mov    edx,DWORD PTR [ebx+0x4]
  403373:	or     edx,DWORD PTR ds:0x4284e9
  403379:	mov    edx,ecx
  40337b:	add    DWORD PTR ds:0x428365,0x4284d9
  403385:	xor    ecx,ecx
  403387:	adc    DWORD PTR ds:0x428335,0x428455
  403391:	or     ecx,DWORD PTR [ebp-0x1c]
  403394:	sub    DWORD PTR ds:0x42844d,0x6b10
  40339e:	shl    edx,0x1e
  4033a1:	add    DWORD PTR ds:0x42833d,ebx
  4033a7:	sub    ecx,eax
  4033a9:	mov    DWORD PTR ds:0x428409,0x9e0
  4033b3:	mov    eax,DWORD PTR [ebp-0xc]
  4033b6:	cmp    DWORD PTR [eax],ecx
  4033b8:	mov    DWORD PTR ds:0x428569,0x2658
  4033c2:	mov    eax,DWORD PTR [ebp-0xc]
  4033c5:	mov    ecx,DWORD PTR [ebp+0x18]
  4033c8:	mov    edx,DWORD PTR ds:0x428361
  4033ce:	mov    edx,DWORD PTR [ebp+0x1c]
  4033d1:	jg     0x4038e5
  4033d7:	and    DWORD PTR ds:0x428571,0xf14
  4033e1:	shrd   ecx,edx,0x2
  4033e5:	xor    DWORD PTR ds:0x428439,0x428431
  4033ef:	mov    DWORD PTR [ebp-0x1c],ecx
  4033f2:	xor    DWORD PTR ds:0x428365,edi
  4033f8:	mov    ecx,DWORD PTR [ebp+0x18]
  4033fb:	xor    DWORD PTR [ebp-0x1c],edi
  4033fe:	shl    ecx,0x1e
  403401:	mov    DWORD PTR ds:0x428415,0x71ad
  40340b:	xor    ecx,ecx
  40340d:	or     ecx,DWORD PTR [ebp-0x1c]
  403410:	shr    edx,0x2
  403413:	sub    DWORD PTR ds:0x4284fd,0x3b82
  40341d:	mov    edx,DWORD PTR [ebp+0x1c]
  403420:	cmp    DWORD PTR ds:0x4284d1,0x0
  403427:	mov    DWORD PTR ds:0x428561,0xe2a
  403431:	mov    DWORD PTR ds:0x428349,ecx
  403437:	mov    edx,0x4d53
  40343c:	jmp    0x4034b7
  403441:	mov    DWORD PTR ds:0x428575,0xfd5
  40344b:	mov    DWORD PTR ds:0x428449,ecx
  403451:	cmp    DWORD PTR ds:0x4284d1,0x0
  403458:	jae    0x4034a5
  40345e:	push   DWORD PTR [ebp-0x1c]
  403461:	push   0x633e
  403466:	push   0x428267
  40346b:	push   DWORD PTR [ebp-0x1c]
  40346e:	push   DWORD PTR [ebp-0xc]
  403471:	push   DWORD PTR [ebp-0x20]
  403474:	push   DWORD PTR [ebp-0x24]
  403477:	push   0x6c89
  40347c:	call   DWORD PTR ds:0x42dff4
  403482:	movzx  edx,WORD PTR ds:0x42842d
  403489:	sub    edx,DWORD PTR ds:0x4284e5
  40348f:	mov    DWORD PTR ds:0x42842d,edx
  403495:	mov    DWORD PTR ds:0x428361,0x6c8
  40349f:	sbb    edx,DWORD PTR ds:0x42836d
  4034a5:	mov    edx,DWORD PTR ds:0x42857d
  4034ab:	and    DWORD PTR ds:0x428435,edx
  4034b1:	inc    DWORD PTR ds:0x42832d
  4034b7:	mov    DWORD PTR [ebp-0x2c],ecx
  4034ba:	xor    DWORD PTR ds:0x428345,0x3285
  4034c4:	mov    ecx,DWORD PTR [ebx]
  4034c6:	mov    edx,DWORD PTR [ebx+0x4]
  4034c9:	and    DWORD PTR ds:0x428549,0x4bb1
  4034d3:	shrd   ecx,edx,0x2
  4034d7:	mov    DWORD PTR ds:0x428429,0x325c
  4034e1:	shr    edx,0x2
  4034e4:	add    DWORD PTR ds:0x4284e1,0x68a9
  4034ee:	mov    DWORD PTR [ebp-0x1c],ecx
  4034f1:	sub    DWORD PTR ds:0x428481,ebx
  4034f7:	mov    ecx,DWORD PTR [ebx]
  4034f9:	sub    DWORD PTR ds:0x428469,0x4284ed
  403503:	mov    edx,DWORD PTR [ebx+0x4]
  403506:	xor    DWORD PTR [ebp-0x1c],edi
  403509:	sub    DWORD PTR ds:0x428349,0x428361
  403513:	xor    edx,edx
  403515:	or     edx,DWORD PTR [ebp-0x1c]
  403518:	add    DWORD PTR ds:0x428341,0x71c0
  403522:	shl    ecx,0x1e
  403525:	adc    DWORD PTR ds:0x4284f1,0x428471
  40352f:	imul   edx,DWORD PTR [ebp-0x2c]
  403533:	and    DWORD PTR ds:0x42844d,0x15cd
  40353d:	sub    DWORD PTR [eax],edx
  40353f:	jmp    0x4041b5
  403544:	jmp    0x4038e5
  403549:	pop    ss
  40354a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40354b:	out    0xaf,eax
  40354d:	js     0x4034ff
  40354f:	cwde   
  403550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403551:	retf   
  403552:	mov    ch,0x34
  403554:	fisttp QWORD PTR [eax]
  403556:	lahf   
  403557:	cli    
  403558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403559:	mov    esi,0xbdbebee8
  40355e:	les    edi,FWORD PTR [esi-0x4490d042]
  403564:	xchg   ebx,eax
  403565:	xchg   ecx,eax
  403566:	push   0xffffffa3
  403568:	sbb    BYTE PTR [ebp+0x1c],cl
  40356b:	out    0xc4,eax
  40356d:	push   0x5dd2161
  403572:	dec    ecx
  403573:	std    
  403574:	xchg   ecx,eax
  403575:	scas   eax,DWORD PTR es:[edi]
  403576:	adc    al,0x58
  403578:	jno    0x40353d
  40357a:	xchg   DWORD PTR [ecx],ebp
  40357c:	push   eax
  40357d:	mov    ds:0xaeddad5d,al
  403582:	add    al,0x4a
  403584:	add    BYTE PTR [esi-0x45f35b95],bh
  40358a:	mov    ch,0x7
  40358c:	or     al,0x37
  40358e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40358f:	fs loop 0x40358e
  403592:	push   ds
  403593:	call   FWORD PTR [edi]
  403595:	data16 cmp al,0x80
  403598:	das    
  403599:	ss xchg ecx,eax
  40359b:	or     BYTE PTR [edi+0x45],cl
  40359e:	jns    0x403536
  4035a0:	and    DWORD PTR [edx-0x5884ae7a],ecx
  4035a6:	cmp    bh,BYTE PTR [edx-0x56a22237]
  4035ac:	shr    DWORD PTR [edx-0xcaba9cd],cl
  4035b2:	lods   al,BYTE PTR ds:[esi]
  4035b3:	stos   BYTE PTR es:[edi],al
  4035b4:	iret   
  4035b5:	gs mov bl,0xc0
  4035b8:	ret    0x7a5
  4035bb:	sbb    edi,ebp
  4035bd:	imul   BYTE PTR [eax+0x6d]
  4035c0:	and    esp,DWORD PTR [edx-0x69]
  4035c3:	push   edx
  4035c4:	cmp    al,0xb7
  4035c6:	mov    DWORD PTR [edi-0x58fce884],eax
  4035cc:	pusha  
  4035cd:	push   ss
  4035ce:	sbb    ch,0xeb
  4035d1:	sub    DWORD PTR [ecx-0x357d8e9a],0xffffffd0
  4035d8:	jae    0x4035da
  4035da:	repnz frstor [ecx]
  4035dd:	pusha  
  4035de:	scas   eax,DWORD PTR es:[edi]
  4035df:	push   edx
  4035e0:	xor    al,0xa7
  4035e2:	xchg   edx,eax
  4035e3:	in     al,0xfc
  4035e5:	or     al,0xeb
  4035e7:	push   fs
  4035e9:	test   al,0x72
  4035eb:	iret   
  4035ec:	(bad)  
  4035ee:	fmul   QWORD PTR [esi]
  4035f0:	mov    dh,0xea
  4035f2:	adc    DWORD PTR [ecx],0x15
  4035f5:	adc    edx,DWORD PTR [ecx]
  4035f7:	jo     0x40361c
  4035f9:	inc    eax
  4035fa:	fdivr  st(4),st
  4035fc:	mov    cl,0xa6
  4035fe:	int3   
  4035ff:	push   esi
  403600:	mov    DWORD PTR [eax],eax
  403602:	xor    al,0x78
  403604:	jmp    0x163:0x8cdd951b
  40360b:	dec    ebx
  40360c:	jne    0x403596
  40360e:	cmp    al,0x53
  403610:	data16 into 
  403612:	sub    edi,DWORD PTR [esi-0x67]
  403615:	les    ebx,FWORD PTR [edx-0x4eed9f8a]
  40361b:	mov    cl,0xfa
  40361d:	push   es
  40361e:	mov    BYTE PTR [esi+0x4fcae5a6],0x56
  403625:	in     eax,dx
  403626:	fadd   st(4),st
  403628:	jne    0x403606
  40362a:	adc    bh,cl
  40362c:	pop    edx
  40362d:	or     DWORD PTR [esi+0x3f],ebx
  403630:	pop    esp
  403631:	xchg   esp,eax
  403632:	(bad)  
  403633:	sbb    bh,BYTE PTR [edi]
  403635:	ret    
  403636:	int3   
  403637:	daa    
  403638:	outs   dx,DWORD PTR ds:[esi]
  403639:	cdq    
  40363a:	jle    0x403636
  40363c:	leave  
  40363d:	ds pop ebx
  40363f:	pop    ecx
  403640:	loopne 0x403641
  403642:	sti    
  403643:	ja     0x40362b
  403645:	jl     0x3b8e55a3
  40364b:	and    eax,0xd150d90c
  403650:	fadd   DWORD PTR [esi-0xe5f83c7]
  403656:	inc    ecx
  403657:	jne    0x4036c4
  403659:	(bad)  
  40365a:	repnz sub eax,0xcec8b90f
  403660:	mov    al,BYTE PTR ds:0x30bbf5b5
  403666:	pop    ecx
  403667:	aam    0x62
  403669:	fld    DWORD PTR [edi]
  40366b:	stc    
  40366c:	(bad)  
  40366d:	push   ebp
  40366e:	mov    eax,0x1f27e565
  403673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403674:	ret    0xe2d9
  403677:	mov    ebp,0xf029516a
  40367c:	sub    eax,0xf0d9e7a1
  403681:	fbstp  TBYTE PTR [ebp-0x75]
  403684:	stc    
  403685:	inc    esi
  403686:	outs   dx,DWORD PTR ds:[esi]
  403687:	pop    edx
  403688:	xor    eax,0xa48a6a04
  40368d:	add    eax,0xdfff3628
  403692:	dec    eax
  403693:	jmp    0xc05775f0
  403698:	mov    al,0x36
  40369a:	test   bl,0x3
  40369d:	test   al,0xc7
  4036a0:	mov    ah,0xea
  4036a2:	les    ebx,FWORD PTR [edi+eax*4-0x63]
  4036a6:	mov    eax,0x46151fc
  4036ab:	aaa    
  4036ac:	(bad)  
  4036ad:	outs   dx,BYTE PTR ds:[esi]
  4036ae:	sub    ebp,eax
  4036b0:	das    
  4036b1:	les    ecx,FWORD PTR [eax]
  4036b3:	ja     0x403644
  4036b5:	scas   eax,DWORD PTR es:[edi]
  4036b6:	xor    edi,ecx
  4036b8:	ret    0x9e39
  4036bb:	or     DWORD PTR [ecx-0x5b],0xffffffc2
  4036bf:	hlt    
  4036c0:	jne    0x403683
  4036c2:	cmp    esi,DWORD PTR [edi]
  4036c4:	and    dl,bl
  4036c6:	mov    ch,0x28
  4036c8:	loop   0x4036c3
  4036ca:	test   al,0x94
  4036cc:	mov    eax,ds:0x97fcc305
  4036d1:	push   cs
  4036d2:	sbb    DWORD PTR [ecx+0x4b9514f4],ebx
  4036d8:	fdivr  DWORD PTR [esi+0xb77393e]
  4036de:	imul   ecx,DWORD PTR [ebx-0x39],0x38
  4036e2:	add    DWORD PTR [ecx+0x33],edx
  4036e5:	sti    
  4036e6:	aas    
  4036e7:	imul   ebp,ebp,0x421a9e9e
  4036ed:	jne    0x403761
  4036ef:	and    eax,0xf6d1297f
  4036f4:	into   
  4036f5:	pop    eax
  4036f6:	push   esi
  4036f7:	rol    dl,cl
  4036f9:	pop    ds
  4036fa:	sbb    edx,ecx
  4036fc:	(bad)  
  4036fe:	adc    BYTE PTR [ecx-0x9],0x7e
  403702:	call   0x4fa75ce2
  403707:	int    0x8d
  403709:	add    cl,dh
  40370b:	das    
  40370c:	das    
  40370d:	data16 (bad) 
  40370f:	outs   dx,DWORD PTR ds:[esi]
  403710:	mov    BYTE PTR [edi+eax*4-0x9c76d80],ch
  403717:	jmp    0x8f2739bb
  40371c:	into   
  40371d:	mov    ch,0xbc
  40371f:	xor    DWORD PTR [esi-0x1b],0x42404a08
  403726:	jg     0x403715
  403728:	out    0x8b,eax
  40372a:	in     eax,dx
  40372b:	outs   dx,BYTE PTR ds:[esi]
  40372c:	pop    ecx
  40372d:	jmp    FWORD PTR [edi+0x5a]
  403730:	(bad)  
  403731:	aam    0x96
  403733:	adc    BYTE PTR [ebx],dl
  403735:	xchg   esp,eax
  403736:	jmp    0x4036d1
  403738:	ret    0x292f
  40373b:	add    esp,DWORD PTR [edi-0x33f822b8]
  403741:	push   cs
  403742:	(bad)  
  403743:	out    0x53,al
  403745:	ss sub dl,al
  403748:	xor    DWORD PTR [ecx+0x3e5cf697],0x268dfbf1
  403752:	jmp    0xb790:0x4dbb96d0
  403759:	std    
  40375a:	lahf   
  40375b:	outs   dx,BYTE PTR ds:[esi]
  40375c:	dec    ebx
  40375d:	mov    bl,0x48
  40375f:	test   al,0x29
  403761:	xchg   esp,eax
  403762:	stos   BYTE PTR es:[edi],al
  403763:	jg     0x403733
  403765:	jno    0x4036ee
  403767:	test   BYTE PTR gs:[esi],0xd1
  40376b:	mov    eax,0xd982ca9e
  403770:	cmp    eax,0x4c238a72
  403775:	mov    WORD PTR [ebx+edx*8+0x48],es
  403779:	add    ecx,DWORD PTR [eax+0x6474d218]
  40377f:	ror    edi,0xd5
  403782:	repz mov esp,0x97b5083d
  403788:	push   es
  403789:	mov    cl,0xfd
  40378b:	sub    ecx,DWORD PTR [ecx]
  40378d:	pop    edx
  40378e:	jbe    0x4037e0
  403790:	mul    DWORD PTR [edx+eax*1+0x6f]
  403794:	dec    ebp
  403795:	adc    al,0xd1
  403797:	cli    
  403798:	pushf  
  403799:	pop    esp
  40379a:	push   0xffffffa6
  40379c:	or     edi,DWORD PTR [edi-0x6d]
  40379f:	adc    DWORD PTR [edi+0x4a],edx
  4037a2:	sbb    edx,DWORD PTR [esi+0x6fa539b6]
  4037a8:	and    dl,BYTE PTR [esi-0x36]
  4037ab:	ins    BYTE PTR es:[edi],dx
  4037ac:	pusha  
  4037ad:	mov    ah,0x62
  4037af:	stc    
  4037b0:	cmp    eax,0x9e7c04cd
  4037b5:	inc    ebp
  4037b6:	xchg   DWORD PTR [eax-0x73],eax
  4037b9:	mov    ch,0x9e
  4037bb:	outs   dx,DWORD PTR ds:[esi]
  4037bc:	inc    ebx
  4037bd:	loope  0x40382e
  4037bf:	out    0x32,eax
  4037c1:	dec    edx
  4037c2:	jl     0x4037ea
  4037c4:	xor    edi,esp
  4037c6:	scas   eax,DWORD PTR es:[edi]
  4037c7:	push   esp
  4037c8:	mov    ecx,ss
  4037ca:	bound  ebp,QWORD PTR [esi+0x42]
  4037cd:	jmp    0x403783
  4037cf:	inc    esi
  4037d0:	or     BYTE PTR [esi-0x2ec89a92],bl
  4037d6:	sbb    al,0xfd
  4037d8:	ret    
  4037d9:	adc    eax,DWORD PTR [edx+edx*8-0x2f]
  4037dd:	dec    esp
  4037de:	and    BYTE PTR [edi-0x59ec780c],dh
  4037e4:	adc    al,BYTE PTR [eax]
  4037e6:	jmp    0x40383b
  4037e8:	push   esi
  4037e9:	jnp    0x40384b
  4037eb:	jnp    0x4037ef
  4037ed:	sub    ebp,ebp
  4037ef:	pop    edi
  4037f0:	icebp  
  4037f1:	scas   al,BYTE PTR es:[edi]
  4037f2:	cmp    eax,0xad0ae577
  4037f7:	shl    BYTE PTR [ecx],cl
  4037f9:	jns    0x403787
  4037fb:	in     al,0x5d
  4037fd:	xchg   BYTE PTR [edi],al
  4037ff:	pop    es
  403800:	dec    edi
  403801:	fmul   QWORD PTR [esi-0x54]
  403804:	clc    
  403805:	gs fs pop eax
  403808:	(bad)  
  403809:	cmp    eax,0xfd8b73b
  40380e:	out    0x3b,eax
  403810:	loopne 0x4037fe
  403812:	int3   
  403813:	clc    
  403814:	rcr    DWORD PTR [esi],1
  403816:	in     eax,0x1c
  403818:	xchg   ebp,eax
  403819:	cmp    bl,bh
  40381b:	(bad)  
  40381c:	dec    edx
  40381d:	popf   
  40381e:	(bad)  [ebp+0xadf50c1]
  403824:	icebp  
  403825:	jmp    0x129fc91f
  40382a:	and    al,BYTE PTR [esi+0x7]
  40382d:	add    eax,0xb037d662
  403832:	xchg   ebp,eax
  403833:	sbb    ebp,edi
  403835:	mov    ebx,DWORD PTR [esi+0x6ee1d8d3]
  40383b:	xor    al,0x80
  40383d:	leave  
  40383e:	mov    WORD PTR [esi],cs
  403840:	fdiv   QWORD PTR [esi-0x6c]
  403843:	push   ds
  403844:	cs and al,ch
  403847:	xchg   esp,eax
  403848:	cli    
  403849:	dec    esp
  40384a:	adc    al,0x54
  40384c:	ss mov ecx,0x5ccb337e
  403852:	xchg   ebp,eax
  403853:	pop    ds
  403854:	push   ecx
  403855:	pop    esi
  403856:	imul   ah
  403858:	push   DWORD PTR gs:[esi-0x755781a6]
  40385f:	dec    edx
  403860:	and    DWORD PTR [ecx+eiz*4],0xee3509ac
  403867:	mov    WORD PTR [edx+0x23389c13],gs
  40386d:	push   es
  40386e:	xor    ebp,DWORD PTR [ecx-0x6e5edfb1]
  403874:	cmp    dl,bl
  403876:	adc    dh,ah
  403878:	xchg   esi,eax
  403879:	ss dec edi
  40387b:	push   DWORD PTR [eax+0x18805412]
  403881:	mov    DWORD PTR [edi+ebx*8],ebp
  403884:	aam    0xef
  403886:	xor    esp,DWORD PTR cs:[esi]
  403889:	push   ss
  40388a:	xchg   ebx,eax
  40388b:	jns    0x4038ea
  40388d:	out    dx,al
  40388e:	cdq    
  40388f:	std    
  403890:	out    0x7e,eax
  403892:	sbb    eax,0x2b1f833c
  403897:	jne    0x403872
  403899:	adc    BYTE PTR [edi+0x3a24e7d4],al
  40389f:	or     edi,DWORD PTR [ecx+0x427b4caa]
  4038a5:	inc    ebx
  4038a6:	(bad)  [eax+0x11bdaff1]
  4038ac:	lock in al,dx
  4038ae:	jne    0x4038d5
  4038b0:	jae    0x403930
  4038b2:	cs std 
  4038b4:	and    dl,BYTE PTR [esi+0x66]
  4038b7:	cmc    
  4038b8:	(bad)  
  4038b9:	sub    BYTE PTR [edi],cl
  4038bb:	ja     0x403912
  4038bd:	pop    ecx
  4038be:	push   0x2d
  4038c0:	mov    WORD PTR [eax+0x37],ds
  4038c3:	sbb    cl,BYTE PTR [edi]
  4038c5:	sti    
  4038c6:	test   BYTE PTR [esi],0xc9
  4038c9:	popa   
  4038ca:	dec    esp
  4038cb:	es inc edx
  4038cd:	das    
  4038ce:	xchg   BYTE PTR [edx],al
  4038d0:	pop    edx
  4038d1:	pop    esi
  4038d2:	popf   
  4038d3:	pushf  
  4038d4:	jmp    0x5fdcbc87
  4038d9:	mov    edi,0xc3e0cd
  4038de:	imul   edx,edx,0x5a
  4038e1:	dec    esp
  4038e2:	adc    eax,0xac0f73af
  4038e7:	rol    DWORD PTR [edx],1
  4038e9:	xor    DWORD PTR ds:0x4284c5,0x428575
  4038f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4038f6:	mov    ecx,DWORD PTR [ebp+0x18]
  4038f9:	xor    DWORD PTR ds:0x428459,0x428581
  403903:	xor    DWORD PTR [ebp-0x1c],edi
  403906:	adc    DWORD PTR ds:0x428445,0x4aad
  403910:	shl    ecx,0x1e
  403913:	not    DWORD PTR ds:0x42840d
  403919:	xor    ecx,ecx
  40391b:	sub    DWORD PTR ds:0x428559,0x450d
  403925:	or     ecx,DWORD PTR [ebp-0x1c]
  403928:	jmp    0x403cc9
  40392d:	cdq    
  40392e:	jbe    0x40398b
  403930:	fidivr WORD PTR [ebx+eiz*8-0x40084545]
  403937:	mul    BYTE PTR [edx+ecx*4-0x422ee934]
  40393e:	in     eax,dx
  40393f:	mov    esi,0xbec4bdbe
  403944:	mov    esi,0xdb2abd25
  403949:	std    
  40394a:	pop    ebx
  40394b:	push   edx
  40394c:	retf   0xf67c
  40394f:	out    0x38,eax
  403951:	iret   
  403952:	imul   edx,DWORD PTR [ecx],0x14
  403955:	repnz mov esi,0xd12d043a
  40395b:	hlt    
  40395c:	pop    ebp
  40395d:	(bad)  
  40395e:	jne    0x4039c6
  403960:	cmp    DWORD PTR [edi+0x92b377],esp
  403966:	popf   
  403967:	or     ebp,DWORD PTR [esi+esi*2+0xb20f1ee]
  40396e:	or     BYTE PTR [edi],0x8d
  403971:	pusha  
  403972:	aad    0xc5
  403974:	stos   DWORD PTR es:[edi],eax
  403975:	mov    cl,0xc0
  403977:	inc    ecx
  403978:	xor    BYTE PTR [ebp+0x12e36fe4],bh
  40397e:	xchg   ecx,eax
  40397f:	sbb    edi,0x1dca73f7
  403985:	adc    ah,BYTE PTR [edx]
  403987:	xchg   DWORD PTR [ecx-0x51],ebp
  40398a:	dec    ecx
  40398b:	ins    BYTE PTR es:[edi],dx
  40398c:	adc    eax,0xe6bf8236
  403991:	ja     0x40392e
  403993:	add    ecx,DWORD PTR [edi]
  403995:	hlt    
  403996:	pop    ecx
  403997:	push   0x8fa63ec8
  40399c:	jecxz  0x4039bd
  40399e:	loopne 0x4039a8
  4039a0:	jecxz  0x40395c
  4039a2:	push   edi
  4039a3:	push   esi
  4039a4:	add    al,BYTE PTR [ebp+0x575d110d]
  4039aa:	retf   0x3b91
  4039ad:	loop   0x4039f9
  4039af:	pop    ecx
  4039b0:	out    dx,al
  4039b1:	add    ch,BYTE PTR [edi]
  4039b3:	pop    ebp
  4039b4:	lods   al,BYTE PTR ds:[esi]
  4039b5:	sub    al,0x97
  4039b7:	sub    BYTE PTR [edx+ecx*1-0x37],al
  4039bb:	dec    ebp
  4039bc:	jae    0x403942
  4039be:	out    dx,eax
  4039bf:	dec    esi
  4039c0:	xchg   edi,eax
  4039c1:	cdq    
  4039c2:	loopne 0x4039e1
  4039c4:	cmp    ch,BYTE PTR [ebx]
  4039c6:	stos   DWORD PTR es:[edi],eax
  4039c7:	scas   al,BYTE PTR es:[edi]
  4039c8:	push   esi
  4039c9:	push   ebp
  4039ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039cb:	inc    esi
  4039cc:	or     BYTE PTR [ebp+eax*2-0x47],0xc0
  4039d1:	lahf   
  4039d2:	xlat   BYTE PTR ds:[ebx]
  4039d3:	gs out 0xee,eax
  4039d6:	test   bl,cl
  4039d8:	lds    esp,FWORD PTR [ebx]
  4039da:	jl     0x403988
  4039dc:	push   ds
  4039dd:	jle    0x4039ee
  4039df:	mov    ds:0x941fe309,eax
  4039e4:	sbb    ebx,ecx
  4039e6:	cmp    dh,BYTE PTR [ebx-0x7a]
  4039e9:	pop    ebx
  4039ea:	pop    ecx
  4039eb:	sbb    DWORD PTR [ebp+0x10],eax
  4039ee:	aam    0x8a
  4039f0:	and    BYTE PTR [esi+0x1b],al
  4039f3:	popf   
  4039f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039f5:	leave  
  4039f6:	sub    DWORD PTR cs:[esi+edx*4-0x4ef068a6],ecx
  4039fe:	dec    ebx
  4039ff:	(bad)  
  403a00:	sar    dl,1
  403a02:	es xor al,cl
  403a05:	push   edx
  403a06:	shl    BYTE PTR [ecx],cl
  403a08:	sbb    esi,DWORD PTR [eax+0x70]
  403a0b:	mov    dl,0x48
  403a0d:	fld    QWORD PTR [ecx+0xb095e74]
  403a13:	int    0x2f
  403a15:	(bad)  
  403a17:	jns    0x403a28
  403a19:	xor    BYTE PTR [edi],cl
  403a1b:	inc    edx
  403a1c:	aas    
  403a1d:	mov    ah,0x93
  403a1f:	sbb    al,0xc8
  403a21:	sub    DWORD PTR [edx-0x4a],esp
  403a24:	shr    BYTE PTR [edx+0x13babe85],1
  403a2a:	std    
  403a2b:	inc    esp
  403a2c:	mov    eax,0xb9101de
  403a31:	stc    
  403a32:	push   ss
  403a33:	jmp    0x200f:0x2f31fc91
  403a3a:	adc    al,0xb4
  403a3c:	aad    0x9d
  403a3e:	push   esi
  403a3f:	sub    edi,ebx
  403a41:	je     0x403a01
  403a43:	dec    esi
  403a44:	je     0x403a37
  403a46:	enter  0x5491,0xf
  403a4a:	push   esp
  403a4c:	stc    
  403a4d:	retf   0x9081
  403a50:	cmp    cl,al
  403a52:	dec    esp
  403a53:	fcmovnu st,st(3)
  403a55:	scas   eax,DWORD PTR es:[edi]
  403a56:	push   0x34
  403a58:	sahf   
  403a59:	push   eax
  403a5a:	in     eax,0xed
  403a5c:	mov    al,0x62
  403a5e:	retf   0x73f0
  403a61:	adc    DWORD PTR [edx+ecx*4-0x2],ecx
  403a65:	nop
  403a66:	stos   DWORD PTR es:[edi],eax
  403a67:	pop    ss
  403a68:	fsubp  st(1),st
  403a6a:	outs   dx,BYTE PTR ds:[esi]
  403a6b:	cs pop ss
  403a6d:	out    dx,eax
  403a6e:	stos   BYTE PTR es:[edi],al
  403a6f:	pop    eax
  403a70:	mov    ah,0x61
  403a72:	mov    eax,ds:0xb2437261
  403a77:	adc    DWORD PTR ds:0xa1908850,esi
  403a7d:	ja     0x403a33
  403a7f:	cmp    al,0xfb
  403a81:	mov    bl,BYTE PTR [eiz*4+0x56fd8518]
  403a88:	sub    eax,edi
  403a8a:	mov    dh,0x31
  403a8c:	mov    al,BYTE PTR [ecx+0x1a]
  403a8f:	retf   
  403a90:	ins    BYTE PTR es:[edi],dx
  403a91:	jns    0x403b05
  403a93:	sub    eax,0xf581ceb9
  403a98:	inc    edi
  403a99:	or     DWORD PTR [eax],edi
  403a9b:	pop    ecx
  403a9c:	rcr    ecx,1
  403a9e:	mov    edi,0x1ec26361
  403aa3:	fnstsw WORD PTR [ebx]
  403aa5:	xor    BYTE PTR [ecx+0x68123d75],bh
  403aab:	push   ecx
  403aac:	rol    DWORD PTR [ecx],1
  403aae:	imul   esi,DWORD PTR ds:0x5128c167,0x1e
  403ab5:	int3   
  403ab6:	shl    DWORD PTR [esi],1
  403ab8:	or     BYTE PTR [ecx],bl
  403aba:	push   0xec951abf
  403abf:	mov    bl,0x7d
  403ac1:	inc    DWORD PTR [ebx+0xad0393b]
  403ac7:	loopne 0x403ac1
  403ac9:	jne    0x403aac
  403acb:	scas   al,BYTE PTR es:[edi]
  403acc:	jnp    0x403ae3
  403ace:	cdq    
  403acf:	mov    al,0x75
  403ad1:	xchg   esi,eax
  403ad2:	add    al,0x39
  403ad4:	mov    edi,0x23cfcf75
  403ad9:	pop    ds
  403ada:	fistp  QWORD PTR [esi]
  403adc:	daa    
  403add:	call   DWORD PTR [edx]
  403adf:	dec    esp
  403ae0:	xor    eax,0x69147c1e
  403ae5:	das    
  403ae6:	xchg   ebx,eax
  403ae7:	mov    WORD PTR ds:0xc49c8602,?
  403aed:	ret    0x3ef0
  403af0:	mov    eax,0xdccc2062
  403af5:	sbb    BYTE PTR ds:[esp+ebp*8-0x4c10c54d],al
  403afd:	dec    ebx
  403afe:	daa    
  403aff:	mov    ecx,0x3bd67642
  403b04:	add    DWORD PTR [ebp-0x32b55e2b],esi
  403b0a:	or     DWORD PTR ds:0x53534b01,ebp
  403b10:	ins    BYTE PTR es:[edi],dx
  403b11:	xchg   BYTE PTR [edi+ebp*2],al
  403b14:	sar    DWORD PTR [eax+0x5],cl
  403b17:	and    edi,esp
  403b19:	cmp    eax,0x420cf019
  403b1e:	mov    gs,WORD PTR [edi+0x102c0718]
  403b24:	std    
  403b25:	sub    ch,bl
  403b27:	aam    0x27
  403b29:	clc    
  403b2a:	repz scas eax,DWORD PTR es:[edi]
  403b2c:	sbb    DWORD PTR gs:[esi],esp
  403b2f:	xchg   esi,eax
  403b30:	loope  0x403b50
  403b32:	lea    ebp,[eax+0x74]
  403b35:	adc    BYTE PTR [edi],0xca
  403b38:	test   BYTE PTR [edi+0x64],0xeb
  403b3c:	out    dx,ax
  403b3e:	sub    eax,0x93869df9
  403b43:	xchg   esi,eax
  403b44:	mov    ebx,0xdc55c72e
  403b49:	ror    BYTE PTR [ebx-0x7081044a],1
  403b4f:	not    DWORD PTR [esp+ecx*8+0x2]
  403b53:	xor    ecx,esi
  403b55:	xchg   ecx,eax
  403b56:	mov    bh,BYTE PTR [ecx+ecx*1]
  403b59:	in     eax,dx
  403b5a:	add    al,0x2e
  403b5c:	inc    esi
  403b5d:	into   
  403b5e:	add    eax,0x911800d1
  403b63:	popa   
  403b64:	sahf   
  403b65:	cld    
  403b66:	add    eax,0x3cd7f411
  403b6b:	or     BYTE PTR [esi-0x28],ch
  403b6e:	sub    BYTE PTR ds:0xe1c1cdf2,0x9f
  403b75:	test   al,0x10
  403b77:	jbe    0x403bcd
  403b79:	inc    eax
  403b7a:	cmp    DWORD PTR [ebx+0x34],esi
  403b7d:	fcom   DWORD PTR [eax+0x7d]
  403b80:	out    dx,eax
  403b81:	adc    dh,bl
  403b83:	push   ds
  403b84:	cwde   
  403b85:	dec    ecx
  403b86:	add    al,ch
  403b88:	jge    0x403bbf
  403b8a:	clc    
  403b8b:	add    ch,ah
  403b8d:	pop    ds
  403b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b8f:	js     0x403b72
  403b91:	call   0x2390:0x786c12bd
  403b98:	hlt    
  403b99:	xlat   BYTE PTR ds:[ebx]
  403b9a:	sbb    cl,BYTE PTR [edi+0x705ead37]
  403ba0:	ins    BYTE PTR es:[edi],dx
  403ba1:	push   ss
  403ba2:	out    dx,eax
  403ba3:	mov    cl,0x4
  403ba5:	inc    ebx
  403ba6:	jecxz  0x403b3f
  403ba8:	fs mov dl,dh
  403bab:	mov    ebx,0xd4bccd83
  403bb0:	ret    0xfc9
  403bb3:	xor    esp,DWORD PTR [eax-0x60]
  403bb6:	sbb    DWORD PTR [esi+0x60843b9],0x8828f11
  403bc0:	pshufw mm1,QWORD PTR [ebx-0x11],0xc1
  403bc5:	xor    BYTE PTR [esi-0x338b8511],cl
  403bcb:	call   0xc8a7fdd0
  403bd0:	adc    cl,BYTE PTR [ecx+0x5837580]
  403bd6:	gs or  eax,ebx
  403bd9:	ret    
  403bda:	mov    al,ds:0x4dc485a0
  403bdf:	mov    esp,0xbce25ac9
  403be4:	mov    eax,0x8bc0e7e7
  403be9:	jg     0x403c5f
  403beb:	sbb    DWORD PTR [edx+edx*4],edx
  403bee:	mov    ch,0x6d
  403bf0:	ins    BYTE PTR es:[edi],dx
  403bf1:	adc    BYTE PTR [ebx+0x62],bl
  403bf4:	dec    esi
  403bf5:	sti    
  403bf6:	mov    bh,0x88
  403bf8:	mov    bh,0x25
  403bfa:	adc    BYTE PTR [edx],al
  403bfc:	mov    ds:0xd3f616d9,eax
  403c01:	push   edi
  403c02:	scas   eax,DWORD PTR es:[edi]
  403c03:	adc    eax,0x5a8b04ef
  403c08:	scas   al,BYTE PTR es:[edi]
  403c09:	push   cs
  403c0a:	aas    
  403c0b:	xlat   BYTE PTR ds:[ebx]
  403c0c:	(bad)  
  403c0d:	idiv   BYTE PTR [edi+0x8a86525]
  403c13:	(bad)  
  403c14:	fwait
  403c15:	js     0x403c0f
  403c17:	cli    
  403c18:	fcom   DWORD PTR [ebx-0x225f4199]
  403c1e:	mov    ds,WORD PTR [eax-0x4a]
  403c21:	out    dx,al
  403c22:	lea    esi,[ecx]
  403c24:	outs   dx,DWORD PTR ds:[esi]
  403c25:	mov    edx,0x8da07348
  403c2a:	sti    
  403c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c2c:	cmc    
  403c2d:	pushf  
  403c2e:	and    bh,BYTE PTR [edi]
  403c30:	mov    bh,0x86
  403c32:	push   0xf
  403c34:	fidiv  DWORD PTR [ecx+0x2b]
  403c37:	call   0x2a9da76e
  403c3c:	dec    esi
  403c3d:	xor    edi,edx
  403c3f:	mov    DWORD PTR [eax-0x4fd075f],ebx
  403c45:	xchg   esi,eax
  403c46:	pop    ss
  403c47:	cdq    
  403c48:	xchg   esp,eax
  403c49:	xor    DWORD PTR [eax],0xfffffff1
  403c4c:	mov    dl,0xcd
  403c4e:	sbb    edi,DWORD PTR [eax-0x21]
  403c51:	pop    esi
  403c52:	xchg   esi,eax
  403c53:	hlt    
  403c54:	mov    bh,0x7c
  403c56:	aam    0x32
  403c58:	mov    al,ds:0xd425390e
  403c5d:	and    eax,0x1d1b3856
  403c62:	add    BYTE PTR [ecx-0x54d0aa96],bl
  403c68:	mov    ah,bl
  403c6a:	and    BYTE PTR es:[edx],dl
  403c6d:	dec    edi
  403c6e:	adc    ah,ah
  403c70:	dec    esp
  403c71:	xchg   ecx,eax
  403c72:	xor    eax,0x8602f190
  403c77:	shl    DWORD PTR ds:0x931fd4c,0x7c
  403c7e:	out    dx,al
  403c7f:	xchg   DWORD PTR [ebx-0xe],ebp
  403c82:	mov    ds:0xcd0ef52b,eax
  403c87:	shl    esp,cl
  403c89:	mov    edi,0xbdc4ea9
  403c8e:	mov    ah,BYTE PTR [ecx-0x2d7349c2]
  403c94:	or     DWORD PTR [ebx],0xabd37146
  403c9a:	inc    esp
  403c9b:	enter  0x4c9d,0xe6
  403c9f:	in     al,0x61
  403ca1:	mov    al,0x1d
  403ca3:	xchg   ebp,eax
  403ca4:	inc    BYTE PTR [eax-0x5c]
  403ca7:	xor    al,BYTE PTR [edi+0x58]
  403caa:	aaa    
  403cab:	mov    bl,0x3e
  403cad:	mov    eax,es
  403caf:	leave  
  403cb0:	ficom  DWORD PTR [edi]
  403cb2:	ins    DWORD PTR es:[edi],dx
  403cb3:	dec    esi
  403cb4:	inc    esi
  403cb5:	into   
  403cb6:	test   DWORD PTR [eax-0x4b7bda63],eax
  403cbc:	push   edi
  403cbd:	ret    
  403cbe:	gs pop es
  403cc0:	jl     0x403c7a
  403cc2:	les    eax,FWORD PTR [eax]
  403cc4:	call   0xa550ad6a
  403cc9:	shr    edx,0x2
  403ccc:	movzx  edx,WORD PTR ds:0x428411
  403cd3:	and    DWORD PTR ds:0x42840d,edx
  403cd9:	mov    edx,DWORD PTR [ebp+0x1c]
  403cdc:	cmp    DWORD PTR ds:0x428475,0x0
  403ce3:	mov    edx,0xb30
  403ce8:	not    DWORD PTR ds:0x42833d
  403cee:	jmp    0x403db9
  403cf3:	mov    DWORD PTR ds:0x428341,0x7955
  403cfd:	mov    DWORD PTR ds:0x4284cd,0x3fbe
  403d07:	cmp    DWORD PTR ds:0x428475,0x0
  403d0e:	jae    0x403d49
  403d14:	push   0x2165
  403d19:	push   0x209b
  403d1e:	push   0x61ab
  403d23:	push   0x585a
  403d28:	push   DWORD PTR [ebp-0x14]
  403d2b:	call   DWORD PTR ds:0x42e0c0
  403d31:	xor    DWORD PTR ds:0x42840d,edi
  403d37:	xor    DWORD PTR ds:0x428419,edi
  403d3d:	xor    edx,DWORD PTR ds:0x428479
  403d43:	sub    DWORD PTR ds:0x428365,edi
  403d49:	sbb    DWORD PTR ds:0x428481,0x3090
  403d53:	sub    DWORD PTR ds:0x428431,ecx
  403d59:	xor    DWORD PTR ds:0x4284dd,edi
  403d5f:	cmp    DWORD PTR ds:0x42854d,0x0
  403d66:	mov    edx,0x71bd
  403d6b:	not    edx
  403d6d:	jmp    0x403db9
  403d72:	mov    edx,0x37a5
  403d77:	mov    edx,0x5337
  403d7c:	cmp    DWORD PTR ds:0x42854d,0x0
  403d83:	jle    0x403dad
  403d89:	push   0x428445
  403d8e:	call   DWORD PTR ds:0x42e0c4
  403d94:	mov    edx,DWORD PTR ds:0x428521
  403d9a:	mov    edx,DWORD PTR [edx]
  403d9c:	and    DWORD PTR ds:0x42832d,edx
  403da2:	adc    DWORD PTR ds:0x428429,0x11e9
  403dac:	dec    edx
  403dad:	and    edx,0xf08
  403db3:	sub    edx,DWORD PTR ds:0x428571
  403db9:	mov    DWORD PTR [ebp-0x2c],ecx
  403dbc:	mov    ecx,DWORD PTR [esi]
  403dbe:	add    DWORD PTR ds:0x428445,ebx
  403dc4:	mov    edx,DWORD PTR [esi+0x4]
  403dc7:	or     DWORD PTR ds:0x428335,0x428349
  403dd1:	shrd   ecx,edx,0x2
  403dd5:	xor    DWORD PTR ds:0x4284d9,0x24cb
  403ddf:	shr    edx,0x2
  403de2:	and    edx,DWORD PTR ds:0x428561
  403de8:	mov    DWORD PTR [ebp-0x1c],ecx
  403deb:	mov    ecx,DWORD PTR [esi]
  403ded:	mov    edx,DWORD PTR [esi+0x4]
  403df0:	xor    DWORD PTR [ebp-0x1c],edi
  403df3:	xor    edx,edx
  403df5:	or     edx,DWORD PTR [ebp-0x1c]
  403df8:	sub    DWORD PTR ds:0x42840d,0x5e3f
  403e02:	shl    ecx,0x1e
  403e05:	sbb    DWORD PTR ds:0x42840d,0x5068
  403e0f:	add    edx,DWORD PTR [ebp-0x2c]
  403e12:	jmp    0x4041b3
  403e17:	bound  ecx,QWORD PTR [ebx-0x73d3f5ff]
  403e1d:	push   0xffffffab
  403e1f:	(bad)  
  403e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e21:	push   ss
  403e22:	shl    DWORD PTR [esi-0x4122cd7e],1
  403e28:	cmc    
  403e29:	mov    esi,0xbec4bdbe
  403e2e:	mov    esi,0x8c98e6b5
  403e33:	out    dx,al
  403e34:	xor    BYTE PTR [ecx+0x35],0x6b
  403e38:	sbb    eax,0xde98dce8
  403e3d:	mov    eax,fs:0x11ec3e63
  403e43:	xchg   ecx,eax
  403e44:	popa   
  403e45:	cvttps2pi mm4,xmm0
  403e48:	pop    edx
  403e49:	inc    ebp
  403e4a:	mov    edi,0x363197d8
  403e4f:	dec    ebp
  403e50:	fist   WORD PTR [edi+0x47]
  403e53:	ins    BYTE PTR es:[edi],dx
  403e54:	mov    ecx,DWORD PTR [bx+di+0xd51]
  403e59:	mov    bh,BYTE PTR [esp+ecx*4]
  403e5c:	push   ss
  403e5d:	push   edi
  403e5f:	mov    ebx,DWORD PTR [ebx+0x79e6084c]
  403e65:	jns    0x403e6b
  403e67:	inc    BYTE PTR [ebx+ebp*1+0x6caa1575]
  403e6e:	mov    ecx,0x328417e0
  403e73:	mov    edi,0x4cbd59a
  403e78:	sub    BYTE PTR [edx-0x5bb8363e],cl
  403e7e:	adc    eax,edx
  403e80:	dec    eax
  403e81:	pop    ebx
  403e82:	jne    0x403e65
  403e84:	add    eax,0x858855f9
  403e89:	sahf   
  403e8a:	push   ss
  403e8b:	cmp    al,0xc7
  403e8d:	jmp    0x403e31
  403e8f:	out    dx,eax
  403e90:	popf   
  403e91:	jae    0x403ed9
  403e93:	and    BYTE PTR [esi],dh
  403e95:	jnp    0x403f08
  403e97:	sub    DWORD PTR [eax-0x2e1d5743],ebx
  403e9d:	(bad)  
  403e9e:	mov    bl,0x2d
  403ea0:	sbb    DWORD PTR [ebx+edx*8-0x5a9c23c9],eax
  403ea7:	(bad)  
  403ea8:	test   al,0xdf
  403eaa:	add    ch,BYTE PTR [esi]
  403eac:	imul   esp,DWORD PTR [eax],0xffffffa1
  403eaf:	outs   dx,DWORD PTR ds:[esi]
  403eb0:	nop
  403eb1:	fsub   st(1),st
  403eb3:	repz dec ebp
  403eb5:	jmp    0x403ec4
  403eb7:	aaa    
  403eb8:	pop    esi
  403eb9:	push   ecx
  403eba:	mov    DWORD PTR [ecx+ecx*2],edi
  403ebd:	in     eax,dx
  403ebe:	(bad)  
  403ebf:	test   BYTE PTR [eax+0x7ef53ca2],dl
  403ec5:	jo     0x403f39
  403ec7:	imul   DWORD PTR [esi+0x3e6c34a3]
  403ecd:	pop    edi
  403ece:	xchg   ebx,eax
  403ecf:	jmp    0x403f0b
  403ed1:	mov    cl,0xb5
  403ed3:	xor    al,0xc7
  403ed5:	inc    ecx
  403ed6:	out    0xa1,al
  403ed8:	fmulp  st(6),st
  403eda:	test   BYTE PTR [eax-0x594e41ec],ch
  403ee0:	pop    ebx
  403ee1:	cmp    eax,0x72317535
  403ee6:	xor    dl,BYTE PTR [esi]
  403ee8:	xor    BYTE PTR [ebx+esi*2],al
  403eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403eec:	lea    edi,[edi]
  403eee:	xlat   BYTE PTR ds:[ebx]
  403eef:	push   eax
  403ef0:	mov    ah,0x62
  403ef2:	retf   
  403ef3:	inc    esi
  403ef4:	sbb    DWORD PTR [edx-0x42016e6b],edx
  403efa:	inc    edi
  403efb:	push   eax
  403efc:	fmul   DWORD PTR [esi+0x4ea12326]
  403f02:	cmp    dl,BYTE PTR [esi-0x6b7f53e7]
  403f08:	sbb    dh,ah
  403f0a:	dec    ebx
  403f0b:	mov    ecx,DWORD PTR [ebx-0x226c7432]
  403f11:	retf   0xe95b
  403f14:	shl    DWORD PTR [edi-0x50914047],cl
  403f1a:	inc    edx
  403f1b:	cmp    eax,0xd1e540c9
  403f20:	push   ecx
  403f21:	sub    eax,0x2586e583
  403f26:	mov    ds:0x86af2ec2,al
  403f2b:	xor    DWORD PTR [esp+ebp*4+0x2f],edi
  403f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f30:	xor    DWORD PTR [eax],0xdc8bfd7d
  403f36:	shl    DWORD PTR [ebx-0x7e],cl
  403f39:	pop    ss
  403f3a:	inc    ax
  403f3c:	xlat   BYTE PTR ds:[ebx]
  403f3d:	jmp    0x403f20
  403f3f:	outs   dx,BYTE PTR ds:[esi]
  403f40:	sbb    al,0x9b
  403f42:	repnz aaa 
  403f44:	fcomp  QWORD PTR [ebx+0x579d828d]
  403f4a:	mov    dl,0xc1
  403f4c:	sub    edx,DWORD PTR [esi+0x6834b9a0]
  403f52:	and    edx,DWORD PTR [edi]
  403f54:	fisubr DWORD PTR [bp+di]
  403f57:	imul   esi,ebx,0x73
  403f5a:	repz add esp,esi
  403f5d:	add    ecx,DWORD PTR [eax-0x39]
  403f60:	cmp    eax,0xd2f18255
  403f65:	test   BYTE PTR [ebx+edi*2-0x42],dl
  403f69:	lods   eax,DWORD PTR ds:[esi]
  403f6a:	cmp    eax,edx
  403f6c:	mov    BYTE PTR [eax+0x64f2e7d0],ah
  403f72:	adc    bl,dh
  403f74:	sahf   
  403f75:	inc    esi
  403f76:	xchg   esi,eax
  403f77:	mov    bl,0x7c
  403f79:	xor    DWORD PTR [ecx-0xf],ebp
  403f7c:	enter  0x6bad,0x2e
  403f80:	in     eax,dx
  403f81:	test   DWORD PTR [edx+0x20],edx
  403f84:	aas    
  403f85:	sar    ch,0x24
  403f88:	mov    ds:0xfa9be877,al
  403f8d:	inc    esi
  403f8e:	jmp    0x403f6f
  403f90:	(bad)  
  403f92:	les    esi,FWORD PTR [eax+ebp*8]
  403f95:	mov    bh,0x16
  403f97:	fdivr  QWORD PTR [ebp+eax*8-0x42a50fa6]
  403f9e:	mov    esi,0x6219b2a4
  403fa3:	or     al,0x6a
  403fa5:	pop    ecx
  403fa6:	(bad)  
  403fa7:	pop    esp
  403fa8:	std    
  403fa9:	bound  ecx,QWORD PTR [ecx]
  403fab:	mov    gs,ebp
  403fad:	xor    al,0xf9
  403faf:	sbb    eax,0xdd8b4d3c
  403fb4:	icebp  
  403fb5:	into   
  403fb6:	xchg   BYTE PTR [ecx+0x4e7263fd],bh
  403fbc:	psllq  mm1,QWORD PTR [esi+edi*1-0x3198123e]
  403fc4:	test   al,0x60
  403fc6:	mov    bh,BYTE PTR [ebp-0x7727a04e]
  403fcc:	or     bl,bh
  403fce:	xlat   BYTE PTR ds:[ebx]
  403fcf:	das    
  403fd0:	outs   dx,DWORD PTR ds:[esi]
  403fd1:	jne    0xc99d923d
  403fd7:	mov    ebx,0x8d438581
  403fdc:	rcr    DWORD PTR [eax+0x494c9ed8],1
  403fe2:	push   eax
  403fe3:	jae    0x404043
  403fe5:	mov    WORD PTR [ebx],ss
  403fe7:	cs ss mov ebp,0x88951289
  403fee:	fmul   st(7),st
  403ff0:	ficom  DWORD PTR [ebp+0x5badb6ee]
  403ff6:	jb     0x403fab
  403ff8:	test   BYTE PTR [ebx+0x3af0a2a5],ch
  403ffe:	push   edx
  403fff:	fld    DWORD PTR ds:[ebp+0x11b95571]
  404006:	adc    edi,DWORD PTR [ebp+0x3c9d3b83]
  40400c:	inc    edx
  40400d:	pop    ebp
  40400e:	popa   
  40400f:	xchg   edx,eax
  404010:	nop
  404011:	sub    DWORD PTR [ecx+0x2d],ecx
  404014:	mov    cs,WORD PTR [ebx-0x3f]
  404017:	sub    al,0xad
  404019:	fstp   DWORD PTR [eax+edi*1+0x1f]
  40401d:	xchg   esp,eax
  40401e:	xchg   edi,eax
  40401f:	adc    DWORD PTR [esp+edx*1],ebp
  404022:	popf   
  404023:	fild   DWORD PTR [ebp-0x47]
  404026:	in     eax,dx
  404027:	jecxz  0x403fb5
  404029:	mov    bl,0xb4
  40402b:	fdiv   DWORD PTR [eax]
  40402d:	adc    ah,BYTE PTR [ebx]
  40402f:	test   WORD PTR gs:[eax+0x53f7d024],0xa17a
  404039:	mov    ds:0x434460b4,eax
  40403e:	sub    DWORD PTR [eax-0x10],esp
  404041:	bound  ebp,QWORD PTR [ecx+eax*2+0x7d]
  404045:	dec    ebp
  404046:	mov    edi,0xf68d8f31
  40404b:	xor    BYTE PTR [ebp+edi*8+0x2d],cl
  40404f:	clc    
  404050:	fcomp  QWORD PTR [esi+ebx*1-0x3750f5be]
  404057:	(bad)  
  404058:	in     eax,0x6b
  40405a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40405b:	xchg   edi,eax
  40405c:	xor    dh,al
  40405e:	ss mov edi,0x385dafc1
  404064:	xor    BYTE PTR [ecx],al
  404066:	xor    al,0xf4
  404068:	in     eax,0xe2
  40406a:	leave  
  40406b:	out    dx,eax
  40406c:	aad    0xec
  40406e:	in     eax,dx
  40406f:	mov    ah,0x54
  404071:	dec    esi
  404072:	loop   0x404047
  404074:	jecxz  0x4040bc
  404076:	jp     0x404074
  404078:	sti    
  404079:	jns    0x4040ac
  40407b:	xchg   ebx,eax
  40407c:	sub    ebp,ecx
  40407e:	or     edi,DWORD PTR [ebp+ecx*1-0xa47078d]
  404085:	mov    bh,0x29
  404087:	mov    al,ds:0x4abc7eac
  40408c:	pop    esi
  40408d:	adc    al,0x3c
  40408f:	adc    bl,BYTE PTR [ecx-0x3f66993a]
  404095:	pop    es
  404096:	pop    ebp
  404097:	aam    0x1
  404099:	mov    esp,0x48fb1001
  40409e:	dec    ebp
  40409f:	ja     0x4040c0
  4040a1:	mov    al,ds:0x756e1cb8
  4040a6:	jnp    0x40407d
  4040a8:	jae    0x4040cd
  4040aa:	les    ebp,FWORD PTR [edx]
  4040ac:	pop    ds
  4040ad:	push   cs
  4040ae:	adc    dl,BYTE PTR [eax+ebx*1]
  4040b1:	fistp  QWORD PTR [esi]
  4040b3:	mov    al,0x9c
  4040b5:	inc    esi
  4040b6:	jne    0x404040
  4040b8:	(bad)  [edi]
  4040ba:	mov    edi,0xe4eae810
  4040bf:	addr16 inc esp
  4040c1:	ds sub al,0x76
  4040c4:	into   
  4040c5:	and    bh,BYTE PTR ds:0xd09986cb
  4040cb:	test   eax,0x5aa8a99c
  4040d0:	jmp    0xa288379c
  4040d5:	mov    edi,0x59825446
  4040da:	ret    0x31bb
  4040dd:	pop    ebp
  4040de:	inc    esp
  4040df:	dec    ebx
  4040e0:	mov    ds:0xed216790,al
  4040e5:	jmp    0xc6b4:0x4e445cac
  4040ec:	mov    ah,0xb0
  4040ee:	(bad)  
  4040ef:	in     al,0x6b
  4040f1:	xlat   BYTE PTR ds:[ebx]
  4040f2:	inc    esi
  4040f3:	or     ch,BYTE PTR [edi-0x80]
  4040f6:	and    bl,BYTE PTR [ebp-0x50]
  4040f9:	(bad)  
  4040fb:	pop    esp
  4040fc:	inc    ebx
  4040fd:	and    bh,cl
  4040ff:	sbb    al,0x5b
  404101:	int    0x7e
  404103:	push   0x6028fe98
  404108:	sbb    ecx,DWORD PTR [ecx+ecx*2-0x3714120f]
  40410f:	pop    eax
  404110:	loop   0x4040a5
  404112:	adc    edx,DWORD PTR [esi-0x4e]
  404115:	(bad)
  404118:	into   
  404119:	add    ecx,eax
  40411b:	fist   DWORD PTR [ecx-0x2a9a4fa1]
  404121:	daa    
  404122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404123:	jmp    FWORD PTR [ecx-0x34474c3e]
  404129:	mov    ah,0x86
  40412b:	cwde   
  40412c:	push   ss
  40412d:	dec    ebx
  40412e:	pushf  
  40412f:	cs push ds
  404131:	cdq    
  404132:	in     al,dx
  404133:	pusha  
  404134:	int3   
  404135:	jle    0x404139
  404137:	ret    
  404138:	pop    edx
  404139:	dec    esp
  40413a:	inc    edi
  40413b:	pop    eax
  40413c:	les    eax,FWORD PTR ds:0x368b3cae
  404142:	les    edi,FWORD PTR [ebp-0x1f]
  404145:	mov    ebp,0x11c95b84
  40414a:	cld    
  40414b:	pop    edi
  40414c:	sahf   
  40414d:	inc    edi
  40414e:	pop    ss
  40414f:	xchg   ebp,eax
  404150:	push   edx
  404151:	mov    esi,0x5da8147
  404156:	ss sub eax,0xe7d5f732
  40415c:	xchg   ebx,eax
  40415d:	inc    edx
  40415e:	sti    
  40415f:	push   ss
  404160:	cwde   
  404161:	inc    esi
  404162:	shl    BYTE PTR cs:[edi],cl
  404165:	xchg   edx,eax
  404166:	fdiv   DWORD PTR [esi-0xb]
  404169:	icebp  
  40416a:	mov    ds:0x8eb52166,eax
  40416f:	mov    eax,ds:0x62bc389e
  404174:	xor    dl,BYTE PTR [ecx+eiz*1]
  404177:	shl    ah,1
  404179:	and    ebx,ebp
  40417b:	enter  0x5f53,0xd0
  40417f:	xchg   BYTE PTR [edx+0x5245eba8],dl
  404185:	sub    ch,al
  404187:	pop    esi
  404188:	dec    edx
  404189:	in     al,0xa1
  40418b:	pop    edi
  40418c:	popa   
  40418d:	pop    ebx
  40418e:	push   ss
  40418f:	(bad)  
  404190:	fldenv [ecx]
  404192:	push   ss
  404193:	dec    ecx
  404194:	sar    al,1
  404196:	fcmovnu st,st(3)
  404198:	sub    al,0x2a
  40419a:	sar    BYTE PTR [eax+0x22],cl
  40419d:	jno    0x40415b
  40419f:	fs add eax,0x9a7388b9
  4041a5:	inc    eax
  4041a6:	cmc    
  4041a7:	inc    edx
  4041a8:	rcr    DWORD PTR [eax+0x525ef664],0x55
  4041af:	pop    eax
  4041b0:	stc    
  4041b1:	mov    ebp,0x8310015c
  4041b6:	cmp    eax,0x428475
  4041bb:	add    bh,dh
  4041bd:	rol    edi,1
  4041bf:	add    eax,0x428331
  4041c4:	jmp    0x4041fe
  4041c6:	add    BYTE PTR [eax],al
  4041c8:	jmp    0x40423c
  4041cd:	mov    edx,DWORD PTR ds:0x4284cd
  4041d3:	cmp    DWORD PTR ds:0x428475,0x0
  4041da:	jne    0x40421e
  4041e0:	push   DWORD PTR [ebp-0x1c]
  4041e3:	push   0x3daa
  4041e8:	push   0x6a0e
  4041ed:	call   DWORD PTR ds:0x42dff8
  4041f3:	mov    edx,DWORD PTR ds:0x428425
  4041f9:	xor    edx,DWORD PTR ds:0x428561
  4041ff:	mov    DWORD PTR ds:0x428425,edx
  404205:	or     edx,DWORD PTR ds:0x428501
  40420b:	movzx  edx,WORD PTR ds:0x42843d
  404212:	and    DWORD PTR ds:0x428461,edx
  404218:	xor    ecx,0x6193
  40421e:	add    edx,0x3a4f
  404224:	add    DWORD PTR ds:0x428411,ecx
  40422a:	mov    ecx,DWORD PTR ds:0x4283dd
  404230:	mov    edx,DWORD PTR ds:0x428521
  404236:	sub    ecx,edx
  404238:	imul   ecx,DWORD PTR [ecx+edx*1]
  40423c:	mov    eax,DWORD PTR [esi]
  40423e:	cmp    DWORD PTR ds:0x428471,0x0
  404245:	mov    DWORD PTR ds:0x428365,0x80f
  40424f:	mov    DWORD PTR ds:0x428569,ecx
  404255:	jmp    0x4042b8
  40425a:	mov    DWORD PTR ds:0x42841d,0x4518
  404264:	cmp    DWORD PTR ds:0x428471,0x0
  40426b:	jb     0x404293
  404271:	push   DWORD PTR [ebp-0x10]
  404274:	call   DWORD PTR ds:0x42dffc
  40427a:	adc    edx,0x1a1
  404280:	xor    ecx,ecx
  404282:	add    ecx,DWORD PTR ds:0x4284b1
  404288:	mov    edx,DWORD PTR ds:0x4285a1
  40428e:	sub    ecx,edx
  404290:	xor    ecx,DWORD PTR [ecx+edx*1]
  404293:	add    DWORD PTR ds:0x42843d,0x3b89
  40429d:	sbb    DWORD PTR ds:0x428581,ecx
  4042a3:	sub    edx,edx
  4042a5:	movzx  ecx,WORD PTR ds:0x4284e9
  4042ac:	xor    ecx,DWORD PTR ds:0x428559
  4042b2:	mov    DWORD PTR ds:0x4284e9,ecx
  4042b8:	mov    ecx,DWORD PTR [esi+0x4]
  4042bb:	shrd   eax,ecx,0x2
  4042bf:	shr    ecx,0x2
  4042c2:	cmp    DWORD PTR ds:0x428579,0x0
  4042c9:	mov    DWORD PTR ds:0x4284e9,ecx
  4042cf:	mov    DWORD PTR ds:0x428479,0x365d
  4042d9:	jmp    0x404321
  4042de:	mov    DWORD PTR ds:0x428435,0x759d
  4042e8:	cmp    DWORD PTR ds:0x428579,0x0
  4042ef:	jae    0x404315
  4042f5:	call   DWORD PTR ds:0x42e248
  4042fb:	adc    edx,ecx
  4042fd:	mov    ecx,DWORD PTR ds:0x428429
  404303:	and    ecx,DWORD PTR ds:0x428565
  404309:	mov    DWORD PTR ds:0x428429,ecx
  40430f:	sbb    edx,DWORD PTR ds:0x428361
  404315:	sbb    DWORD PTR ds:0x428439,0x7721
  40431f:	add    ecx,ecx
  404321:	mov    ecx,DWORD PTR [esi]
  404323:	mov    edx,DWORD PTR [esi+0x4]
  404326:	xor    eax,edi
  404328:	shl    ecx,0x1e
  40432b:	xor    edx,edx
  40432d:	or     edx,eax
  40432f:	mov    DWORD PTR [ebp-0x4],edx
  404332:	mov    DWORD PTR [ebp-0x30],0xcb79b576
  404339:	mov    eax,0x9c2b8ae8
  40433e:	mov    DWORD PTR [ebp-0x2c],eax
  404341:	mov    DWORD PTR [ebp-0x20],0xcb79b572
  404348:	mov    DWORD PTR [ebp-0x1c],eax
  40434b:	mov    DWORD PTR [ebp-0x10],0xcb79b57e
  404352:	mov    DWORD PTR [ebp-0xc],eax
  404355:	mov    DWORD PTR [ebp-0x60],0xcb79b57a
  40435c:	mov    DWORD PTR [ebp-0x5c],eax
  40435f:	jmp    0x404700
  404364:	cmp    BYTE PTR [eax+0x14],dh
  404367:	cmp    al,0x9c
  404369:	mov    esp,0xa24d7438
  40436e:	mov    BYTE PTR [edx+eax*4-0x422ee760],ah
  404375:	sti    
  404376:	mov    esi,0xbec4bdbe
  40437b:	mov    esi,0xdb206d05
  404380:	push   ss
  404381:	add    cl,BYTE PTR [esi+0x33]
  404384:	sbb    al,0x96
  404386:	jg     0x40438a
  404388:	pop    ebx
  404389:	enter  0x8b5d,0x43
  40438d:	daa    
  40438e:	mov    eax,ds:0x5c872e1f
  404393:	jl     0x404323
  404395:	mov    ?,WORD PTR [ebp-0x325b89b1]
  40439b:	jmp    0x4a8158d9
  4043a0:	sbb    ebx,0xffffffee
  4043a3:	inc    ebp
  4043a4:	pop    esi
  4043a5:	or     BYTE PTR [esi-0xe26d7b5],bh
  4043ab:	aaa    
  4043ac:	cmp    esp,ebp
  4043ae:	dec    esi
  4043af:	test   al,0xd2
  4043b1:	add    bl,cl
  4043b3:	scas   eax,DWORD PTR es:[edi]
  4043b4:	fstp   DWORD PTR [edx-0x251f0d87]
  4043ba:	sbb    bl,BYTE PTR [edi+edi*2]
  4043bd:	out    dx,al
  4043be:	push   ebp
  4043bf:	sub    DWORD PTR ds:0xcd9d0be8,0x3f7b720e
  4043c9:	icebp  
  4043ca:	pop    esi
  4043cb:	out    dx,eax
  4043cc:	pop    edx
  4043cd:	and    al,0x12
  4043cf:	cmp    ah,BYTE PTR [edx-0x7a]
  4043d2:	call   0x3fcc4817
  4043d7:	adc    eax,0xa2e1e785
  4043dc:	test   BYTE PTR [eax+0x5f256283],dh
  4043e2:	jecxz  0x404367
  4043e4:	fcomp  st(1)
  4043e6:	cmp    BYTE PTR [edx+0x18],ah
  4043e9:	fidiv  WORD PTR [edx-0x59dfead2]
  4043ef:	and    eax,esi
  4043f1:	cwde   
  4043f2:	push   cs
  4043f3:	dec    esp
  4043f4:	dec    ebp
  4043f5:	pop    edi
  4043f6:	es jl  0x4043b2
  4043f9:	dec    edi
  4043fa:	clc    
  4043fb:	xchg   ebx,eax
  4043fc:	mov    esp,0xcf5fd3d6
  404401:	mov    dh,0xd5
  404403:	fwait
  404404:	sbb    DWORD PTR [edi-0xab94f04],esp
  40440a:	mov    cl,0xa9
  40440c:	xlat   BYTE PTR ds:[ebx]
  40440d:	inc    ebp
  40440e:	or     al,0xc3
  404410:	lock add bl,0x42
  404414:	retf   0x38fe
  404417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404418:	jmp    0x9d624e28
  40441d:	call   0xd218:0x4a9d2d7d
  404424:	cs pop ds
  404426:	cmp    esi,ebx
  404428:	sbb    esi,edi
  40442a:	scas   eax,DWORD PTR es:[edi]
  40442b:	jmp    0x4043d7
  40442d:	mov    dh,0x2f
  40442f:	mov    ds:0x591c1b42,al
  404434:	rcr    BYTE PTR [edx+0x4c064f7],0x59
  40443b:	jmp    DWORD PTR [ebx-0x3a03adca]
  404441:	push   cs
  404442:	push   ecx
  404443:	sub    al,0x66
  404445:	stos   BYTE PTR es:[edi],al
  404446:	mov    ebx,0x99486acb
  40444b:	mov    ch,0x2a
  40444d:	mov    ch,BYTE PTR [edx+0x1bc4444a]
  404453:	cwde   
  404454:	xor    al,0xc8
  404456:	cmp    BYTE PTR [ecx-0x36203fe5],al
  40445c:	pushf  
  40445d:	pop    edi
  40445e:	sbb    al,0x57
  404460:	or     DWORD PTR [edi+esi*8+0x0],0xfffffffa
  404465:	and    DWORD PTR [ebp+0x12b079d],ebp
  40446b:	dec    esp
  40446c:	je     0x404459
  40446e:	das    
  40446f:	shl    DWORD PTR [esi-0x23],cl
  404472:	dec    esp
  404473:	mov    edx,0xecc6f46f
  404478:	sub    BYTE PTR [eax-0x4c7891dd],al
  40447e:	pop    ds
  40447f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404480:	and    BYTE PTR [ecx],bh
  404482:	sbb    BYTE PTR [ecx-0x6efeb486],0x56
  404489:	add    ebx,DWORD PTR [edx]
  40448b:	jbe    0x404502
  40448d:	test   al,0x49
  40448f:	call   0xa506fad0
  404494:	mov    bl,cl
  404496:	add    edi,DWORD PTR [edi+ecx*4+0x3d]
  40449a:	loope  0x4044b8
  40449c:	fst    DWORD PTR [ebx]
  40449e:	lds    esp,FWORD PTR [ebp-0x760a7632]
  4044a4:	out    0x7c,al
  4044a6:	(bad)  
  4044a7:	jg     0x40450c
  4044a9:	hlt    
  4044aa:	aas    
  4044ab:	inc    ebp
  4044ac:	push   ebx
  4044ad:	add    ebx,DWORD PTR [edx-0x74]
  4044b0:	(bad)  
  4044b2:	push   ss
  4044b3:	lahf   
  4044b4:	jecxz  0x40449e
  4044b6:	cmp    edx,esi
  4044b8:	and    eax,0x92526e5e
  4044bd:	xchg   ebx,eax
  4044be:	dec    edx
  4044bf:	mov    ebp,0x98ba70ac
  4044c4:	cwde   
  4044c5:	ds jp  0x4044d3
  4044c8:	fcomp  DWORD PTR [esi+0x74b51772]
  4044ce:	loop   0x4044e4
  4044d0:	cwde   
  4044d1:	pop    eax
  4044d2:	pop    ecx
  4044d3:	popf   
  4044d4:	jns    0x4044c4
  4044d6:	mov    ds:0xafc3f91a,al
  4044db:	sahf   
  4044dc:	and    BYTE PTR [ebp+0x2],ch
  4044df:	add    ch,bl
  4044e1:	add    eax,0x525ee325
  4044e7:	fstp   DWORD PTR [edx]
  4044e9:	push   0xffffff81
  4044eb:	pop    ebp
  4044ec:	and    esi,ebp
  4044ee:	cs into 
  4044f0:	in     al,dx
  4044f1:	ret    0x9eec
  4044f4:	jmp    0x4913:0xcc4d66c3
  4044fb:	and    BYTE PTR [edi-0x4169e4bd],al
  404501:	mov    esi,0xd82dddf0
  404506:	std    
  404507:	nop
  404508:	and    DWORD PTR [esi+ebp*2+0x28937e0f],edx
  40450f:	es ins BYTE PTR es:[edi],dx
  404511:	lea    ecx,[edi-0x1d]
  404514:	int    0x20
  404516:	(bad)  
  404517:	lds    edx,FWORD PTR [ebx+0x7e]
  40451a:	mov    eax,0x7e4f2640
  40451f:	inc    edi
  404520:	jne    0x404545
  404522:	fstp   TBYTE PTR [edi+eiz*1-0x6953ab1c]
  404529:	aaa    
  40452a:	mov    esi,0x1a34c167
  40452f:	std    
  404530:	xor    DWORD PTR [ecx+0x2202bd94],edi
  404536:	retf   
  404537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404538:	push   edi
  404539:	mov    eax,0x84ac0e0f
  40453e:	or     al,0xee
  404540:	(bad)  
  404541:	out    dx,al
  404542:	jnp    0x404590
  404544:	pop    es
  404545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404546:	inc    esp
  404547:	push   ebp
  404548:	retf   0xabff
  40454b:	out    dx,eax
  40454c:	sbb    al,0xc5
  40454e:	int3   
  40454f:	and    eax,0xec59c749
  404554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404555:	sbb    eax,0xe3cc41f4
  40455a:	daa    
  40455b:	xchg   esi,eax
  40455c:	push   edi
  40455d:	pop    es
  40455e:	pop    edi
  40455f:	idiv   DWORD PTR [ebx+0x4a]
  404562:	fiadd  WORD PTR [esi+0x74]
  404565:	mov    al,0xc1
  404567:	lds    eax,FWORD PTR [esi+0x20]
  40456a:	xor    ah,BYTE PTR [edi-0x237ffb13]
  404570:	jmp    0x404536
  404572:	les    edi,FWORD PTR [esi-0x55]
  404575:	into   
  404576:	adc    dl,bl
  404578:	rcl    DWORD PTR [esi+0x789c2d83],1
  40457e:	mov    esp,0xdd3d822e
  404583:	mov    eax,0x3ad1ec45
  404588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404589:	mov    eax,ds:0x12d4c437
  40458e:	jle    0x4045bc
  404590:	fs neg bl
  404593:	dec    eax
  404594:	cs inc edx
  404596:	add    ebp,esi
  404598:	imul   DWORD PTR [eiz*4+0x38072e97]
  40459f:	adc    edx,DWORD PTR fs:[ebp+0xe]
  4045a3:	pop    ss
  4045a4:	imul   esp,DWORD PTR [edx],0xb2d2b04
  4045aa:	lds    ebx,FWORD PTR [esp+edx*1-0x27]
  4045ae:	pop    esi
  4045af:	xchg   BYTE PTR [edi],cl
  4045b1:	jb     0x4045f4
  4045b3:	pop    ds
  4045b4:	in     al,dx
  4045b5:	lock jecxz 0x4045d5
  4045b8:	jl     0x404635
  4045ba:	cmp    BYTE PTR [edx+edi*8+0x5d],bl
  4045be:	xor    DWORD PTR [edi+0x63304768],edi
  4045c4:	sbb    al,0x31
  4045c6:	jcxz   0x40455a
  4045c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045ca:	push   0xffffffd2
  4045cc:	adc    al,0xdb
  4045ce:	push   edx
  4045cf:	retf   
  4045d0:	add    eax,0xae428737
  4045d5:	dec    ebp
  4045d6:	out    dx,eax
  4045d7:	jl     0x404600
  4045d9:	test   eax,0xbdb90f23
  4045de:	jns    0x404593
  4045e0:	and    BYTE PTR ds:0x1895bd57,dh
  4045e6:	data16 add bh,BYTE PTR ds:[edi]
  4045ea:	push   ecx
  4045eb:	icebp  
  4045ec:	in     al,dx
  4045ed:	mov    edi,0x52ff4bc0
  4045f2:	cmp    edx,DWORD PTR [esi+0x70]
  4045f5:	aad    0xe8
  4045f7:	mul    ah
  4045f9:	inc    esi
  4045fa:	ret    
  4045fb:	jmp    0xf51f:0x5a8c603e
  404602:	pop    ebx
  404603:	xor    eax,esp
  404605:	outs   dx,BYTE PTR ds:[esi]
  404606:	jb     0x4045a8
  404608:	and    eax,0xd1717f2f
  40460d:	fwait
  40460e:	call   DWORD PTR [edx+edi*8+0x21]
  404612:	inc    edx
  404613:	dec    ebp
  404614:	mov    esi,0x2a67b185
  404619:	test   dh,dl
  40461b:	xchg   ebx,eax
  40461c:	lahf   
  40461d:	mov    eax,cs
  40461f:	sbb    DWORD PTR [eax+0x42],edx
  404622:	sti    
  404623:	jecxz  0x4045db
  404625:	and    DWORD PTR [ebp+0xd],0x79
  404629:	xlat   BYTE PTR ds:[ebx]
  40462a:	ds ret 0xd152
  40462e:	and    DWORD PTR [eax],edi
  404630:	xchg   edx,eax
  404631:	(bad)  
  404632:	jo     0x4045d9
  404634:	or     al,0x1e
  404636:	and    eax,esp
  404638:	cmp    BYTE PTR ds:0x50f74078,dl
  40463e:	pop    ebx
  40463f:	mov    dl,0xaa
  404641:	sub    al,0x54
  404643:	ja     0x404661
  404645:	daa    
  404646:	pushf  
  404647:	fwait
  404648:	nop    DWORD PTR [edi]
  40464b:	dec    ecx
  40464c:	inc    edx
  40464d:	ins    DWORD PTR es:[edi],dx
  40464e:	adc    ch,ah
  404650:	pushf  
  404651:	rol    cl,cl
  404653:	dec    ecx
  404654:	inc    edx
  404655:	inc    edi
  404656:	push   ebp
  404657:	xor    DWORD PTR ds:0xfa5b203b,eax
  40465d:	adc    bl,ah
  40465f:	inc    ebx
  404660:	and    eax,ecx
  404662:	sub    al,0xd6
  404664:	mov    esp,ds
  404666:	and    BYTE PTR [ebx],al
  404668:	xchg   DWORD PTR [ebp-0x2d],ebp
  40466b:	or     al,0xfc
  40466d:	xor    ecx,DWORD PTR [ecx+0x6b]
  404670:	pop    ebx
  404671:	fiadd  WORD PTR [ebx+esi*2-0x158e3935]
  404678:	mov    dl,0xd
  40467a:	xor    bl,BYTE PTR [edx+0x16]
  40467d:	xchg   ebx,eax
  40467e:	ja     0x40460f
  404680:	xchg   ebx,eax
  404681:	(bad)  
  404682:	enter  0x2f4,0x54
  404686:	inc    esi
  404687:	sbb    eax,0xfa8f3b01
  40468c:	mov    al,ds:0xa81f9e37
  404691:	dec    ebx
  404692:	push   es
  404693:	mov    bh,0xb7
  404695:	sub    cl,BYTE PTR [ebp+0x5c96e161]
  40469b:	sti    
  40469c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40469d:	mov    BYTE PTR [ebx],dl
  40469f:	mov    esi,0xf93bc957
  4046a4:	mov    bh,0xe9
  4046a6:	retf   
  4046a7:	cmc    
  4046a8:	in     eax,0x54
  4046aa:	adc    al,0xe8
  4046ac:	mov    es,WORD PTR [eiz*8+0x3d1d2002]
  4046b3:	xchg   esp,eax
  4046b4:	in     eax,dx
  4046b5:	pop    edx
  4046b6:	(bad)  
  4046b7:	jmp    0x404735
  4046b9:	ins    BYTE PTR es:[edi],dx
  4046ba:	pop    esi
  4046bb:	call   0x64a5:0x30db62d1
  4046c2:	gs (bad) 
  4046c4:	inc    edx
  4046c5:	mov    ds:0xd983843d,al
  4046ca:	mov    dh,0x44
  4046cc:	mov    ds,ecx
  4046ce:	call   0x502d10a3
  4046d3:	jmp    0xe758:0xc5ad5e8a
  4046da:	add    DWORD PTR [edx],esp
  4046dc:	and    DWORD PTR [ecx+ebp*1+0x31],ebp
  4046e0:	bswap  ecx
  4046e2:	xchg   esp,eax
  4046e3:	sar    DWORD PTR [ebp+0xe],1
  4046e6:	and    al,0x3c
  4046e8:	retf   0x2157
  4046eb:	loop   0x4046d1
  4046ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046ee:	sub    dl,ah
  4046f0:	push   es
  4046f1:	dec    eax
  4046f2:	fcom   DWORD PTR [ebp-0x60fab511]
  4046f8:	mov    DWORD PTR [ebp-0x6c1b13a7],ebp
  4046fe:	fldenv [ebx]
  404700:	mov    eax,DWORD PTR [ebp-0x30]
  404703:	mov    ecx,DWORD PTR [ebp-0x2c]
  404706:	shrd   eax,ecx,0x2
  40470a:	shr    ecx,0x2
  40470d:	mov    ecx,DWORD PTR [ebp-0x30]
  404710:	mov    edx,DWORD PTR [ebp-0x2c]
  404713:	xor    eax,edi
  404715:	shl    ecx,0x1e
  404718:	xor    edx,edx
  40471a:	or     eax,edx
  40471c:	lea    eax,[ebp+eax*1-0x4]
  404720:	mov    DWORD PTR [ebp-0x34],eax
  404723:	mov    eax,DWORD PTR [ebp-0x30]
  404726:	mov    ecx,DWORD PTR [ebp-0x2c]
  404729:	shrd   eax,ecx,0x2
  40472d:	shr    ecx,0x2
  404730:	mov    ecx,DWORD PTR [ebp-0x30]
  404733:	mov    edx,DWORD PTR [ebp-0x2c]
  404736:	shl    ecx,0x1e
  404739:	mov    ecx,DWORD PTR [ebp-0x14]
  40473c:	xor    eax,edi
  40473e:	xor    edx,edx
  404740:	or     eax,edx
  404742:	mov    cl,BYTE PTR [eax+ecx*1]
  404745:	mov    eax,DWORD PTR [ebp-0x34]
  404748:	xor    BYTE PTR [eax],cl
  40474a:	mov    eax,DWORD PTR [ebp-0x20]
  40474d:	mov    ecx,DWORD PTR [ebp-0x1c]
  404750:	shrd   eax,ecx,0x2
  404754:	shr    ecx,0x2
  404757:	mov    ecx,DWORD PTR [ebp-0x20]
  40475a:	mov    edx,DWORD PTR [ebp-0x1c]
  40475d:	xor    eax,edi
  40475f:	jmp    0x404b00
  404764:	xchg   esp,eax
  404765:	mov    esi,DWORD PTR [esi-0x434b497e]
  40476b:	fwait
  40476c:	or     al,dl
  40476e:	cli    
  40476f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404770:	iret   
  404771:	push   0x3bea4f8
  404776:	mov    esi,0xbec4bdbe
  40477b:	mov    esi,0x939f50cf
  404780:	inc    ebp
  404781:	int3   
  404782:	mov    dl,0x3b
  404784:	push   esi
  404785:	push   cs
  404786:	cdq    
  404787:	imul   eax,DWORD PTR ds:0x76d94853,0x4a
  40478e:	push   cs
  40478f:	inc    esi
  404790:	inc    ebp
  404791:	or     eax,esi
  404793:	xchg   edi,eax
  404794:	loope  0x4047b4
  404796:	je     0x4047d7
  404798:	push   esp
  404799:	sub    eax,0x814ac3eb
  40479e:	(bad)
  4047a3:	shl    DWORD PTR [edx-0x4ba362c5],0x7b
  4047aa:	jnp    0x40472c
  4047ac:	xchg   esi,eax
  4047ad:	popf   
  4047ae:	aaa    
  4047af:	lahf   
  4047b0:	jle    0x40482c
  4047b2:	int    0x3a
  4047b4:	mov    ch,0x58
  4047b6:	xchg   edx,eax
  4047b7:	or     cl,ch
  4047b9:	adc    al,0xa3
  4047bb:	cmp    dl,BYTE PTR [edx-0x44166096]
  4047c1:	aad    0xa1
  4047c3:	repz jbe 0x4047f8
  4047c6:	adc    al,0x36
  4047c8:	lods   eax,DWORD PTR ds:[esi]
  4047c9:	jp     0x404789
  4047cb:	or     al,0x90
  4047cd:	call   0xcb88:0xbba66e0f
  4047d4:	call   0x2c6b:0xbadfd1ed
  4047db:	aam    0xcb
  4047dd:	in     eax,dx
  4047de:	jns    0x40484e
  4047e0:	ja     0x4047b6
  4047e2:	push   esi
  4047e3:	scas   eax,DWORD PTR es:[edi]
  4047e4:	repnz add DWORD PTR [ebx+0x56502696],edx
  4047eb:	aaa    
  4047ec:	lods   eax,DWORD PTR ds:[esi]
  4047ed:	imul   esp,DWORD PTR [eax+0x45],0x46
  4047f1:	int    0x4d
  4047f3:	es clc 
  4047f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047f6:	sbb    ebx,DWORD PTR [ecx]
  4047f8:	xchg   edi,eax
  4047f9:	sahf   
  4047fa:	jne    0x40482e
  4047fc:	mov    esp,0x9924eba3
  404801:	xchg   DWORD PTR [esi+0x4b],edi
  404804:	add    DWORD PTR [edi],ebx
  404806:	jno    0x404840
  404808:	pop    edi
  404809:	fst    st(5)
  40480b:	adc    eax,DWORD PTR [eax]
  40480d:	fnsave [ebx-0x75]
  404810:	fidiv  DWORD PTR [ebx+ecx*4]
  404813:	xor    ebx,DWORD PTR [ebp+0x30dbcb1d]
  404819:	dec    eax
  40481a:	xor    al,0x8a
  40481c:	add    dl,0xcf
  40481f:	mov    gs,eax
  404821:	cwde   
  404822:	mov    ds:0x5053a74f,eax
  404827:	stos   BYTE PTR es:[edi],al
  404828:	xchg   ebx,eax
  404829:	mov    al,ds:0x2ef4bd96
  40482e:	push   esi
  40482f:	shl    edi,0xf7
  404832:	loop   0x4047e6
  404834:	popa   
  404835:	fwait
  404836:	daa    
  404837:	mov    BYTE PTR [eax],al
  404839:	pushf  
  40483a:	adc    bl,bh
  40483c:	call   0x80d3:0x63e7b0d9
  404843:	add    eax,0x80bab3f
  404848:	xor    ecx,esi
  40484a:	pop    eax
  40484b:	les    eax,FWORD PTR [ecx]
  40484d:	lds    edi,FWORD PTR [edi]
  40484f:	aad    0xb0
  404851:	add    BYTE PTR [edx+eax*2],ch
  404854:	ds push ds
  404856:	push   es
  404857:	mov    al,al
  404859:	cli    
  40485a:	mov    eax,0x550f7170
  40485f:	iret   
  404860:	fsubr  st,st(7)
  404862:	xchg   edx,eax
  404863:	cli    
  404864:	push   cs
  404865:	sub    DWORD PTR [ecx+edi*2+0x734a2df2],ebp
  40486c:	rcl    DWORD PTR [edx+eax*1-0x4cd6b6f3],cl
  404873:	sbb    BYTE PTR ds:0xff3b8c9b,ah
  404879:	sub    ecx,DWORD PTR [eax+0x1b3562a7]
  40487f:	push   eax
  404880:	mov    al,cs:0xff273cc5
  404886:	xor    edx,DWORD PTR ss:[ebx-0x8]
  40488a:	push   0xffffffcc
  40488c:	ret    0xf314
  40488f:	outs   dx,BYTE PTR ds:[esi]
  404890:	mov    BYTE PTR [esi],0xe8
  404893:	inc    edx
  404894:	test   al,0x63
  404896:	sar    DWORD PTR [eax-0x58f5a07d],1
  40489c:	and    al,0xc0
  40489e:	push   edi
  40489f:	pop    esi
  4048a0:	xor    BYTE PTR [eax],0xee
  4048a3:	lds    esp,FWORD PTR [edi]
  4048a5:	daa    
  4048a6:	mov    ds:0x45df3964,al
  4048ab:	jg     0x4048e5
  4048ad:	outs   dx,BYTE PTR ds:[esi]
  4048ae:	inc    ecx
  4048af:	mov    esi,0xc21729ec
  4048b4:	mov    al,0x91
  4048b6:	cmp    ebx,DWORD PTR [ebp+0x75]
  4048b9:	shl    DWORD PTR [ecx*8-0x513ebc31],cl
  4048c0:	stc    
  4048c1:	xchg   esp,eax
  4048c2:	jle    0x404930
  4048c4:	xchg   DWORD PTR [ebx+0x14a9d39f],ecx
  4048ca:	loope  0x4048c4
  4048cc:	fld    QWORD PTR [edx+0x4]
  4048cf:	or     eax,0x67e13fcc
  4048d4:	pop    es
  4048d5:	mov    esi,DWORD PTR [esi+0x69436599]
  4048db:	cmc    
  4048dc:	mov    dh,0x4e
  4048de:	popa   
  4048df:	or     bh,ch
  4048e1:	popf   
  4048e2:	sar    ah,1
  4048e4:	inc    ebp
  4048e5:	dec    ebx
  4048e6:	popa   
  4048e7:	adc    al,0x7c
  4048e9:	in     eax,dx
  4048ea:	out    0x89,al
  4048ec:	push   esp
  4048ed:	mov    ebp,0x91c67afe
  4048f2:	lods   eax,DWORD PTR ds:[esi]
  4048f3:	lahf   
  4048f4:	test   BYTE PTR [eax],ah
  4048f6:	xchg   esi,eax
  4048f7:	dec    ebp
  4048f8:	mov    bh,0xdc
  4048fa:	xor    al,ah
  4048fc:	(bad)  
  4048fd:	into   
  4048fe:	mov    esp,ebx
  404900:	xor    DWORD PTR es:[eax+0xcfcfc8a],esp
  404907:	imul   esi,DWORD PTR [edx-0x729b177],0xb
  40490e:	pop    ecx
  40490f:	mov    esi,0x8b1738c3
  404914:	add    DWORD PTR [edx+esi*8],eax
  404917:	push   ebx
  404918:	outs   dx,DWORD PTR ds:[esi]
  404919:	jbe    0x404961
  40491b:	lock aas 
  40491d:	rcl    BYTE PTR [eax],1
  40491f:	mov    WORD PTR [ebx+0xd],es
  404922:	pop    ecx
  404923:	xlat   BYTE PTR ds:[ebx]
  404924:	or     dh,0xba
  404927:	xchg   ebp,eax
  404928:	retf   0xbec3
  40492b:	pop    edi
  40492c:	jecxz  0x404991
  40492e:	mov    fs,WORD PTR [eax]
  404930:	(bad)  
  404931:	sbb    WORD PTR [edx],cx
  404934:	inc    esi
  404935:	fcomp  DWORD PTR [esi-0x22]
  404938:	sti    
  404939:	mov    cl,0x1f
  40493b:	cmp    BYTE PTR [ecx+eiz*1-0x2b],ch
  40493f:	jmp    0xe7b375c
  404944:	jmp    0xd4ef10c1
  404949:	add    eax,0x65e53a83
  40494e:	nop
  40494f:	cli    
  404950:	psadbw mm2,QWORD PTR ds:0xc098a717
  404957:	(bad)  
  404958:	push   0x3b10d23d
  40495d:	enter  0xe49e,0x72
  404961:	mov    ecx,0x1febd6c1
  404966:	pop    ecx
  404967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404968:	push   es
  404969:	add    eax,0x23168409
  40496e:	cdq    
  40496f:	ins    BYTE PTR es:[edi],dx
  404970:	jnp    0x404966
  404972:	sub    bl,bl
  404974:	pusha  
  404975:	rcl    DWORD PTR [ecx+edx*2],cl
  404978:	jge    0x4049d4
  40497a:	jo     0x4049cc
  40497c:	pushf  
  40497d:	jbe    0x4049fa
  40497f:	rcl    BYTE PTR [ebp-0x25],0x8e
  404983:	call   eax
  404985:	rcl    BYTE PTR [edi-0x3c5438ce],cl
  40498b:	xor    al,0xbf
  40498d:	inc    esp
  40498e:	jecxz  0x40491f
  404990:	bound  edi,QWORD PTR [ebp+0x6b09c0b6]
  404996:	jmp    0x1a12:0x5022d436
  40499d:	mov    eax,ds:0x3cdbb48
  4049a2:	pop    ecx
  4049a3:	push   ebp
  4049a4:	inc    ebp
  4049a5:	inc    ecx
  4049a6:	arpl   WORD PTR [edx-0x7],si
  4049a9:	mov    edi,0xb2237a12
  4049ae:	clc    
  4049af:	sub    bl,cl
  4049b1:	cwde   
  4049b2:	push   0x637fa488
  4049b7:	(bad)  
  4049b9:	dec    esp
  4049ba:	mov    ch,0xfd
  4049bc:	scas   eax,DWORD PTR es:[edi]
  4049bd:	jmp    0xa0df6a85
  4049c2:	stos   DWORD PTR es:[edi],eax
  4049c3:	inc    ebp
  4049c4:	retf   
  4049c5:	out    dx,al
  4049c6:	jb     0x4049dc
  4049c8:	mov    esp,0xe13be39
  4049cd:	in     eax,0xb6
  4049cf:	imul   DWORD PTR [eax-0x37]
  4049d2:	in     eax,0x54
  4049d4:	rcr    BYTE PTR [ebp-0x1422ff8f],1
  4049da:	jmp    0xe8179457
  4049df:	into   
  4049e0:	into   
  4049e1:	xor    edi,DWORD PTR [eax]
  4049e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049e4:	clc    
  4049e5:	into   
  4049e6:	jnp    0x4049c2
  4049e8:	aam    0x2
  4049ea:	mov    ds:0xf8ad3ca,eax
  4049ef:	std    
  4049f0:	out    dx,al
  4049f1:	sub    ebx,DWORD PTR [ecx]
  4049f3:	into   
  4049f4:	pusha  
  4049f5:	fwait
  4049f6:	push   ss
  4049f7:	mov    DWORD PTR [ebx+ebx*8],edx
  4049fa:	rcr    DWORD PTR [esi],0x4b
  4049fd:	(bad)  
  4049fe:	fimul  WORD PTR [ebx+0x7a]
  404a01:	xlat   BYTE PTR ds:[ebx]
  404a02:	and    esp,DWORD PTR [ebx]
  404a04:	pop    edi
  404a05:	test   al,0xf3
  404a07:	add    eax,0xa41fedce
  404a0c:	shl    BYTE PTR [edi+esi*8-0x78],1
  404a10:	or     dl,BYTE PTR [edx]
  404a12:	dec    edx
  404a13:	mov    ds,WORD PTR [edx]
  404a15:	leave  
  404a16:	ffree  st(7)
  404a18:	std    
  404a19:	dec    esp
  404a1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a1b:	mov    bl,0xe3
  404a1d:	push   eax
  404a1e:	push   ebx
  404a1f:	mov    ah,0xf
  404a21:	test   eax,0x4ccf18f6
  404a26:	outs   dx,BYTE PTR ds:[esi]
  404a27:	mov    BYTE PTR [edi+edi*1+0x55],ch
  404a2b:	icebp  
  404a2c:	xchg   edi,eax
  404a2d:	mov    ds:0xfb6a97c7,eax
  404a32:	imul   ebp,DWORD PTR [ebx],0xee933932
  404a38:	cld    
  404a39:	mov    cs,WORD PTR [ecx+0x31]
  404a3c:	sub    BYTE PTR [esi],bh
  404a3e:	mov    ds:0x8e671e25,al
  404a43:	rol    DWORD PTR [edx+ebx*2+0x26b38afc],1
  404a4a:	jbe    0x404a2e
  404a4c:	mov    ebx,0xc8e7e020
  404a51:	pop    eax
  404a52:	loop   0x404aa7
  404a54:	xchg   ebx,eax
  404a55:	inc    esi
  404a56:	leave  
  404a57:	ins    BYTE PTR es:[edi],dx
  404a58:	pusha  
  404a59:	out    dx,al
  404a5a:	xchg   esp,eax
  404a5b:	test   bl,bh
  404a5d:	adc    eax,0xec722d69
  404a62:	add    DWORD PTR [edi],edx
  404a64:	mov    edx,DWORD PTR [eax+0x43]
  404a67:	dec    eax
  404a68:	dec    esp
  404a69:	in     eax,0xd3
  404a6b:	mov    ebx,0x3eaf18f8
  404a70:	ins    BYTE PTR es:[edi],dx
  404a71:	mov    ch,0xa0
  404a73:	or     eax,0x9386061b
  404a78:	sbb    ecx,DWORD PTR [edx+0x5a6bc8f5]
  404a7e:	lock ins BYTE PTR es:[edi],dx
  404a80:	sahf   
  404a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a82:	and    al,0x64
  404a84:	int3   
  404a85:	aad    0x72
  404a87:	scas   al,BYTE PTR es:[edi]
  404a88:	jg     0x404a71
  404a8a:	mov    al,ds:0x5e4dc8e1
  404a8f:	cmp    ah,ch
  404a91:	sub    edi,ebx
  404a93:	inc    esp
  404a94:	sbb    eax,0x93e34447
  404a99:	sahf   
  404a9a:	loopne 0x404ae2
  404a9c:	mov    al,0x4e
  404a9e:	push   esp
  404a9f:	test   ch,al
  404aa1:	dec    ecx
  404aa2:	sub    ebp,DWORD PTR [esi-0x1c]
  404aa5:	pop    ebp
  404aa6:	fdiv   QWORD PTR [eax-0x6a]
  404aa9:	or     al,0x37
  404aab:	test   ebx,esi
  404aad:	fistp  DWORD PTR [ecx-0x3a8fe028]
  404ab3:	push   ebx
  404ab4:	out    0x7e,eax
  404ab6:	or     ebx,DWORD PTR [ebx]
  404ab8:	(bad)  
  404ab9:	mov    ds:0x51b226ed,eax
  404abe:	popa   
  404abf:	mul    BYTE PTR [ebp-0x3d83a57b]
  404ac5:	popa   
  404ac6:	jge    0x404b1e
  404ac8:	sub    DWORD PTR [edi+ebx*8+0x76bb8455],0xf82b35d4
  404ad3:	into   
  404ad4:	push   edx
  404ad5:	outs   dx,DWORD PTR ds:[esi]
  404ad6:	xor    ch,ch
  404ad8:	pop    ebx
  404ad9:	mov    ebp,0x95481c0d
  404ade:	arpl   WORD PTR [edi+0x3d],di
  404ae1:	js     0x404a8a
  404ae3:	ja     0x404ab0
  404ae5:	rol    bl,0x38
  404ae8:	jl     0x404aff
  404aea:	jbe    0x404ad2
  404aec:	jg     0x404b01
  404aee:	sbb    DWORD PTR [ebp-0x3761ccbb],eax
  404af4:	cmc    
  404af5:	mov    ds:0x129ccd38,eax
  404afa:	icebp  
  404afb:	(bad)  
  404afc:	fdivr  st(7),st
  404aff:	jmp    0xbd2:0x331ee1c1
  404b06:	ret    0x448d
  404b09:	add    eax,0xcc4589fc
  404b0e:	mov    eax,DWORD PTR [ebp-0x20]
  404b11:	mov    ecx,DWORD PTR [ebp-0x1c]
  404b14:	shrd   eax,ecx,0x2
  404b18:	shr    ecx,0x2
  404b1b:	mov    ecx,DWORD PTR [ebp-0x20]
  404b1e:	mov    edx,DWORD PTR [ebp-0x1c]
  404b21:	shl    ecx,0x1e
  404b24:	mov    ecx,DWORD PTR [ebp-0x14]
  404b27:	jmp    0x404ec8
  404b2c:	cmp    BYTE PTR [edx],ch
  404b2e:	push   0xffffff83
  404b30:	jl     0x404ab5
  404b32:	cmp    BYTE PTR [edx-0x61edfbc6],bh
  404b38:	jp     0x404b48
  404b3a:	push   0xffffffd1
  404b3c:	mov    ebp,0xbdbebe09
  404b41:	les    edi,FWORD PTR [esi+0x753566be]
  404b47:	fnstenv [edx]
  404b49:	inc    eax
  404b4a:	xlat   BYTE PTR ds:[ebx]
  404b4b:	mov    ebx,0x11a2d80a
  404b50:	cld    
  404b51:	dec    esi
  404b52:	mov    ch,BYTE PTR [ebx-0xceae2f0]
  404b58:	mov    cl,0x3b
  404b5a:	mov    ch,0xdb
  404b5c:	mov    edi,0xec6aa872
  404b61:	or     ch,BYTE PTR [edi-0x37]
  404b64:	mov    bh,0x59
  404b66:	push   edx
  404b67:	pop    esi
  404b68:	inc    eax
  404b69:	jb     0x404b5f
  404b6b:	aaa    
  404b6c:	dec    eax
  404b6d:	dec    esp
  404b6e:	outs   dx,BYTE PTR ds:[esi]
  404b6f:	or     eax,0x25c169c2
  404b74:	ret    
  404b75:	dec    edi
  404b76:	cmp    BYTE PTR [ebx],ch
  404b78:	sbb    eax,0xe9a8dbe7
  404b7d:	std    
  404b7e:	jae    0x404bab
  404b80:	mov    dh,0x14
  404b82:	push   0x8fa16328
  404b87:	pop    ebx
  404b88:	mov    eax,ds:0x70a8937b
  404b8d:	dec    eax
  404b8e:	pop    ebx
  404b8f:	xchg   BYTE PTR [edx+0x628e1bcc],bh
  404b95:	fimul  DWORD PTR [edx]
  404b97:	jecxz  0x404baf
  404b99:	mov    dl,0x3
  404b9b:	or     eax,0xa7e265d8
  404ba0:	mov    eax,0x2fb82474
  404ba5:	push   edx
  404ba6:	ret    
  404ba7:	fwait
  404ba8:	scas   al,BYTE PTR es:[edi]
  404ba9:	xor    al,0x94
  404bab:	inc    ebp
  404bac:	jmp    0x9103:0x93377081
  404bb3:	sub    BYTE PTR [edi+ecx*8-0x5a],ch
  404bb7:	es jb  0x404bdb
  404bba:	jne    0x404b87
  404bbc:	test   DWORD PTR [edx+0x12],0x5dccb478
  404bc3:	pop    ss
  404bc4:	fs retf 0x5cea
  404bc8:	pop    esi
  404bc9:	in     al,dx
  404bca:	lods   eax,DWORD PTR ds:[esi]
  404bcb:	ja     0x404c0d
  404bcd:	sbb    BYTE PTR [esp+eax*2-0x75ff4509],al
  404bd4:	and    DWORD PTR [ebx-0x49],esp
  404bd7:	mov    dh,0xe9
  404bd9:	(bad)  
  404bda:	inc    ebp
  404bdb:	daa    
  404bdc:	mov    ecx,esi
  404bde:	mov    esi,0xb5a34381
  404be3:	pop    edx
  404be4:	inc    edi
  404be5:	rcr    BYTE PTR [ebp-0xaa6a739],1
  404beb:	in     al,dx
  404bec:	out    dx,al
  404bed:	icebp  
  404bee:	fadd   QWORD PTR [edi]
  404bf0:	mov    edi,0x479bf762
  404bf5:	ror    BYTE PTR [edx-0x60],cl
  404bf8:	popf   
  404bf9:	call   0xf370623
  404bfe:	hlt    
  404bff:	loope  0x404c25
  404c01:	sub    eax,eax
  404c03:	cmp    BYTE PTR [edi-0x7b],dl
  404c06:	cmp    bh,0x50
  404c09:	cli    
  404c0a:	push   eax
  404c0b:	mov    ds:0x63d5a32a,eax
  404c10:	xchg   edx,eax
  404c11:	ret    
  404c12:	jecxz  0x404c1d
  404c14:	xor    edx,0xffffff83
  404c17:	jne    0x404c4e
  404c19:	fst    st(2)
  404c1b:	push   esp
  404c1c:	std    
  404c1d:	pushf  
  404c1e:	xchg   BYTE PTR [edx-0x2],ah
  404c21:	add    BYTE PTR [ecx+0x44ed6790],ch
  404c27:	xor    dh,BYTE PTR [esi]
  404c29:	mov    ebx,0x57fa3c00
  404c2e:	sub    BYTE PTR [esi],bl
  404c30:	inc    ebp
  404c31:	popa   
  404c32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c33:	(bad)  
  404c34:	mov    bh,BYTE PTR [ebx]
  404c36:	sub    ah,bl
  404c38:	inc    ebx
  404c39:	jae    0x404c48
  404c3b:	pusha  
  404c3c:	adc    bh,cl
  404c3e:	inc    edx
  404c3f:	dec    ecx
  404c40:	jb     0x404c1b
  404c42:	jmp    0x1d9265aa
  404c47:	outs   dx,DWORD PTR ds:[esi]
  404c48:	pop    es
  404c49:	mov    bh,0x2d
  404c4b:	jg     0x404c15
  404c4d:	lods   eax,DWORD PTR ds:[esi]
  404c4e:	push   ebp
  404c4f:	lahf   
  404c50:	idiv   esp
  404c52:	cmp    BYTE PTR es:[eax],ch
  404c55:	pop    edx
  404c56:	js     0x404c33
  404c58:	dec    ecx
  404c59:	sahf   
  404c5a:	sbb    DWORD PTR [ebx+0x7d],esi
  404c5d:	jge    0x404c71
  404c5f:	mov    eax,0x925f4801
  404c64:	mov    ebp,0x9713001d
  404c69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c6a:	call   0x4ec6:0x9ffaea3a
  404c71:	jne    0x404c83
  404c73:	in     eax,0xc5
  404c75:	and    DWORD PTR [eax-0x2e44dd07],esp
  404c7b:	jecxz  0x404c99
  404c7d:	xor    DWORD PTR [ebx+0x38a70faa],0x24a0140
  404c87:	sbb    BYTE PTR [ebx],bl
  404c89:	cdq    
  404c8a:	inc    ebx
  404c8b:	pop    bp
  404c8d:	jns    0x404c87
  404c8f:	sahf   
  404c90:	xchg   edi,eax
  404c91:	dec    esp
  404c92:	daa    
  404c93:	repnz xor BYTE PTR [ecx-0x5074f8de],cl
  404c9a:	mov    ch,ah
  404c9c:	fisttp DWORD PTR [eax+0x21]
  404c9f:	in     al,0x6d
  404ca1:	cmp    eax,0x18f5c465
  404ca6:	sbb    eax,0x791f3888
  404cab:	fnsave fs:[esi]
  404cae:	int3   
  404caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cb0:	stos   BYTE PTR es:[edi],al
  404cb1:	add    eax,0xcf060bdd
  404cb6:	fs pop es
  404cb8:	cmp    eax,0x292be72d
  404cbd:	loopne 0x404c60
  404cbf:	rcl    DWORD PTR ds:0xdf8b321,0x83
  404cc6:	mov    dh,0x89
  404cc8:	sbb    eax,0xeaa12ad8
  404ccd:	dec    esp
  404cce:	xor    esi,DWORD PTR [ecx]
  404cd0:	imul   ebx,DWORD PTR [ecx+0x12],0x71623131
  404cd7:	pop    esi
  404cd8:	push   eax
  404cd9:	lods   al,BYTE PTR ds:[esi]
  404cda:	(bad)  
  404cdb:	outs   dx,BYTE PTR ds:[esi]
  404cdc:	(bad)  
  404cdd:	iret   
  404cde:	push   edx
  404cdf:	inc    ebp
  404ce0:	mov    edi,DWORD PTR [ecx-0x52b09a25]
  404ce6:	div    BYTE PTR [ebx+0x43]
  404ce9:	xchg   DWORD PTR [edi+0x5b2bf85c],esi
  404cef:	mov    dl,0x69
  404cf1:	fimul  WORD PTR [ecx+0x32a620ae]
  404cf7:	out    0x76,eax
  404cf9:	hlt    
  404cfa:	jno    0x404d47
  404cfc:	je     0x404d68
  404cfe:	imul   esi,DWORD PTR [edx+0x549cd3dd],0x45
  404d05:	cmp    cl,dh
  404d07:	outs   dx,BYTE PTR ds:[esi]
  404d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d09:	inc    edx
  404d0a:	(bad)  
  404d0b:	outs   dx,BYTE PTR ds:[esi]
  404d0c:	or     BYTE PTR [ebx+0x50],bl
  404d0f:	cli    
  404d10:	fwait
  404d11:	jmp    0xfb544399
  404d16:	sub    DWORD PTR [ebp-0x26e783ae],0xff75b203
  404d20:	lods   al,BYTE PTR ds:[esi]
  404d21:	mov    DWORD PTR [ecx+0x53],esi
  404d24:	inc    ebp
  404d25:	push   ecx
  404d26:	mov    BYTE PTR [edx+0x6723501],ch
  404d2c:	icebp  
  404d2d:	xor    BYTE PTR [ecx+edi*8],ch
  404d30:	retf   0xa7d1
  404d33:	mov    DWORD PTR [ebp+0x32],ecx
  404d36:	je     0x404d86
  404d38:	aaa    
  404d39:	jecxz  0x404cc1
  404d3b:	in     eax,0x84
  404d3d:	call   0x51fd09af
  404d42:	cmp    al,0x72
  404d44:	out    dx,al
  404d45:	cmp    eax,0x85c940c2
  404d4a:	stos   DWORD PTR es:[edi],eax
  404d4b:	repz mov al,ds:0xdfcd7db5
  404d51:	retf   
  404d52:	scas   eax,DWORD PTR es:[edi]
  404d53:	cmp    BYTE PTR [edx],dh
  404d55:	repz inc eax
  404d57:	add    ah,BYTE PTR [edi-0x17]
  404d5a:	xchg   edx,eax
  404d5b:	scas   eax,DWORD PTR es:[edi]
  404d5c:	jnp    0x404d0c
  404d5e:	and    DWORD PTR [edi+0x33280d78],edx
  404d64:	shl    BYTE PTR [edi+0x5fa229ce],0x59
  404d6b:	rol    BYTE PTR [ebx+esi*1+0x371d65bd],0xdc
  404d73:	or     DWORD PTR [eax+0xb],ebp
  404d76:	retf   
  404d77:	dec    BYTE PTR [edx+0x45]
  404d7a:	or     BYTE PTR [ecx+0x52a9acb9],0xbf
  404d81:	mov    BYTE PTR [ebx-0x2ec250a8],dh
  404d87:	outs   dx,BYTE PTR ds:[esi]
  404d88:	adc    eax,0x682de894
  404d8d:	xor    DWORD PTR [esi-0x59],edi
  404d90:	shl    BYTE PTR ds:0xb1a6d837,cl
  404d96:	adc    dh,ah
  404d98:	sub    al,0xcb
  404d9a:	imul   ecx,DWORD PTR [ecx+ebx*1-0x4e],0xffffffa1
  404d9f:	mov    eax,0xc3b0ac5e
  404da4:	rol    BYTE PTR [eax],1
  404da6:	and    bl,BYTE PTR ds:0x812d40b8
  404dac:	jmp    0x404ddd
  404dae:	cmp    eax,0x1029bad5
  404db3:	push   es
  404db4:	mov    ch,0xd0
  404db6:	and    ebp,DWORD PTR [eax+0x49c14b06]
  404dbc:	clc    
  404dbd:	dec    ebp
  404dbe:	fwait
  404dbf:	lock out dx,eax
  404dc1:	call   0x1734:0xcd17ba25
  404dc8:	inc    edx
  404dc9:	jbe    0x404d8d
  404dcb:	push   ebx
  404dcc:	xor    BYTE PTR [ebp+0x66a519cd],0x37
  404dd3:	adc    BYTE PTR [edi+0x63],ah
  404dd6:	push   ss
  404dd7:	sbb    eax,0xdbd497e8
  404ddc:	and    DWORD PTR [edi+0x3bff178],edx
  404de2:	push   ebx
  404de3:	dec    ebp
  404de4:	push   DWORD PTR [ebx]
  404de6:	mov    ch,0x23
  404de8:	push   cs
  404de9:	mov    ecx,0xb8a57823
  404dee:	pushf  
  404def:	clc    
  404df0:	pop    ds
  404df1:	icebp  
  404df2:	test   BYTE PTR [esi+0x55],dl
  404df5:	in     eax,dx
  404df6:	(bad)  
  404df7:	leave  
  404df8:	int    0x48
  404dfa:	sti    
  404dfb:	(bad)  
  404dfc:	push   ss
  404dfd:	(bad)  
  404dfe:	xchg   ecx,eax
  404dff:	or     DWORD PTR [esi],esp
  404e01:	fcom   DWORD PTR [esi+0x1424f0f7]
  404e07:	sub    bh,BYTE PTR [ebp+0x74]
  404e0a:	mov    DWORD PTR [esi+ecx*8+0x718e16be],0x9f4b4f70
  404e15:	jno    0x404e7c
  404e17:	out    0xcb,eax
  404e19:	mov    ebp,DWORD PTR ds:0xaeff3cc1
  404e1f:	push   es
  404e20:	xor    edx,edx
  404e22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e23:	mov    ds:0x633b1076,al
  404e28:	cwde   
  404e29:	mov    al,0x2c
  404e2b:	imul   edi,DWORD PTR [edi],0xd87f3c23
  404e31:	mov    al,0xe3
  404e33:	outs   dx,DWORD PTR ds:[esi]
  404e34:	xor    eax,0x7fd6c3bc
  404e39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e3a:	mov    edx,0x324114fe
  404e3f:	add    dl,BYTE PTR [edx-0x14]
  404e42:	aaa    
  404e43:	adc    bh,BYTE PTR [ecx]
  404e45:	dec    ebx
  404e46:	inc    ecx
  404e47:	mov    ebx,0xb5af8419
  404e4c:	add    eax,0x8bb87359
  404e51:	fild   DWORD PTR [ecx+0x25041862]
  404e57:	xchg   BYTE PTR [ecx-0xab333c2],bh
  404e5d:	jge    0x404e32
  404e5f:	nop
  404e60:	repz test eax,0x27422219
  404e66:	cmp    al,BYTE PTR [edi+0x5d]
  404e69:	xchg   ebp,eax
  404e6a:	iret   
  404e6b:	mov    ds:0x5178be87,al
  404e70:	outs   dx,DWORD PTR ds:[esi]
  404e71:	and    BYTE PTR [edi-0x91dce47],0xc1
  404e78:	add    ch,ah
  404e7a:	(bad)  
  404e7b:	test   al,0xb0
  404e7d:	pop    es
  404e7e:	jbe    0x404e89
  404e80:	dec    edx
  404e81:	addr16 (bad) 
  404e83:	(bad)  
  404e84:	add    eax,0xf90934b3
  404e89:	fistp  QWORD PTR [edx+0x43]
  404e8c:	enter  0x62a8,0xb1
  404e90:	mov    WORD PTR [edi],gs
  404e92:	rcl    DWORD PTR ds:0x9d58780b,0x1f
  404e99:	int    0x4e
  404e9b:	mov    ebx,0x8b94761d
  404ea0:	mov    edi,0xb9ec490b
  404ea5:	mov    DWORD PTR [esi+0x7a5c0b08],edx
  404eab:	mov    ds:0x78073d65,eax
  404eb0:	scas   eax,DWORD PTR es:[edi]
  404eb1:	pop    es
  404eb2:	dec    edx
  404eb3:	shr    DWORD PTR [eax+0x71],0x4b
  404eb7:	je     0x404f2e
  404eb9:	sbb    eax,0x4e954d0a
  404ebe:	jmp    0xba95b800
  404ec3:	cld    
  404ec4:	(bad)  
  404ec5:	mov    esi,0xc7339b9d
  404eca:	xor    edx,edx
  404ecc:	or     eax,edx
  404ece:	mov    cl,BYTE PTR [eax+ecx*1]
  404ed1:	mov    eax,DWORD PTR [ebp-0x34]
  404ed4:	or     BYTE PTR [eax],cl
  404ed6:	mov    eax,DWORD PTR [ebp-0x10]
  404ed9:	mov    ecx,DWORD PTR [ebp-0xc]
  404edc:	shrd   eax,ecx,0x2
  404ee0:	shr    ecx,0x2
  404ee3:	mov    ecx,DWORD PTR [ebp-0x10]
  404ee6:	mov    edx,DWORD PTR [ebp-0xc]
  404ee9:	xor    eax,edi
  404eeb:	shl    ecx,0x1e
  404eee:	xor    edx,edx
  404ef0:	or     eax,edx
  404ef2:	lea    eax,[ebp+eax*1-0x4]
  404ef6:	mov    DWORD PTR [ebp-0x34],eax
  404ef9:	mov    eax,DWORD PTR [ebp-0x10]
  404efc:	mov    ecx,DWORD PTR [ebp-0xc]
  404eff:	shrd   eax,ecx,0x2
  404f03:	shr    ecx,0x2
  404f06:	mov    ecx,DWORD PTR [ebp-0x10]
  404f09:	mov    edx,DWORD PTR [ebp-0xc]
  404f0c:	xor    eax,edi
  404f0e:	shl    ecx,0x1e
  404f11:	mov    ecx,DWORD PTR [ebp-0x14]
  404f14:	xor    edx,edx
  404f16:	or     eax,edx
  404f18:	mov    cl,BYTE PTR [eax+ecx*1]
  404f1b:	mov    eax,DWORD PTR [ebp-0x34]
  404f1e:	add    BYTE PTR [eax],cl
  404f20:	mov    eax,DWORD PTR [ebp-0x60]
  404f23:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f26:	shrd   eax,ecx,0x2
  404f2a:	shr    ecx,0x2
  404f2d:	mov    ecx,DWORD PTR [ebp-0x60]
  404f30:	mov    edx,DWORD PTR [ebp-0x5c]
  404f33:	xor    eax,edi
  404f35:	xor    edx,edx
  404f37:	or     eax,edx
  404f39:	lea    eax,[ebp+eax*1-0x4]
  404f3d:	mov    DWORD PTR [ebp-0x34],eax
  404f40:	mov    eax,DWORD PTR [ebp-0x60]
  404f43:	shl    ecx,0x1e
  404f46:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f49:	shrd   eax,ecx,0x2
  404f4d:	shr    ecx,0x2
  404f50:	mov    ecx,DWORD PTR [ebp-0x60]
  404f53:	mov    edx,DWORD PTR [ebp-0x5c]
  404f56:	xor    eax,edi
  404f58:	xor    edx,edx
  404f5a:	or     eax,edx
  404f5c:	mov    edx,DWORD PTR [ebp+0x14]
  404f5f:	shl    ecx,0x1e
  404f62:	mov    ecx,DWORD PTR [ebp-0x14]
  404f65:	mov    cl,BYTE PTR [eax+ecx*1]
  404f68:	mov    eax,DWORD PTR [ebp-0x34]
  404f6b:	or     BYTE PTR [eax],cl
  404f6d:	jmp    0x40530e
  404f72:	mov    DWORD PTR [edx],ecx
  404f74:	push   0xabac68c5
  404f79:	mov    al,BYTE PTR [edi-0x526df5c0]
  404f7f:	mov    dl,0x5c
  404f81:	sar    DWORD PTR [esi-0x424141ef],1
  404f87:	les    edi,FWORD PTR [esi+0x2fa955be]
  404f8d:	fldcw  WORD PTR [edx]
  404f8f:	shl    DWORD PTR [edx-0x2041b720],1
  404f95:	pop    esp
  404f96:	stc    
  404f97:	(bad)
  404f9b:	pop    eax
  404f9c:	adc    al,0x30
  404f9e:	xchg   DWORD PTR [ebp+0x6259525e],esi
  404fa4:	inc    ebx
  404fa5:	adc    BYTE PTR [ecx],dh
  404fa7:	and    eax,0xb2e36d65
  404fac:	stos   DWORD PTR es:[edi],eax
  404fad:	cmc    
  404fae:	out    dx,al
  404faf:	lods   al,BYTE PTR ds:[esi]
  404fb0:	and    eax,0x9efcf2d1
  404fb5:	cmp    al,0xff
  404fb7:	sahf   
  404fb8:	das    
  404fb9:	rcl    BYTE PTR [eax+0x28dca77c],cl
  404fbf:	into   
  404fc0:	cld    
  404fc1:	xor    BYTE PTR [edi+edx*2+0x74],dl
  404fc5:	fist   WORD PTR [eax+edi*8+0x41]
  404fc9:	imul   edi,DWORD PTR [esi],0xbb9b22f5
  404fcf:	pushf  
  404fd0:	loope  0x405008
  404fd2:	push   es
  404fd3:	pushf  
  404fd4:	(bad)  
  404fd5:	xlat   BYTE PTR ds:[ebx]
  404fd6:	fdiv   st,st(6)
  404fd8:	cmp    DWORD PTR [edx],ebp
  404fda:	push   edi
  404fdb:	jns    0x404f74
  404fdd:	test   eax,0x6374e805
  404fe2:	std    
  404fe3:	sub    BYTE PTR [esi-0x59],bl
  404fe6:	lea    ebx,[edx-0x71ef8db3]
  404fec:	in     al,0x41
  404fee:	icebp  
  404fef:	stc    
  404ff0:	cmp    esi,DWORD PTR [eax-0x1f]
  404ff3:	or     DWORD PTR [eax-0x5431f1f4],0x7b
  404ffa:	fwait
  404ffb:	mov    ebx,esp
  404ffd:	je     0x404fd8
  404fff:	inc    eax
  405000:	ja     0x40505c
  405002:	cmc    
  405003:	push   ss
  405004:	pop    es
  405005:	jae    0x404f96
  405007:	cmp    DWORD PTR [ecx],esi
  405009:	mov    ebp,DWORD PTR [ebp-0x77]
  40500c:	imul   edi,ecx,0x62a98cac
  405012:	and    BYTE PTR [edx],0x34
  405015:	sbb    BYTE PTR [eax+ebx*4],0x2e
  405019:	idiv   BYTE PTR [ecx]
  40501b:	inc    DWORD PTR [edx]
  40501d:	mov    bh,0x10
  40501f:	xchg   ebp,eax
  405020:	inc    ebx
  405021:	in     al,dx
  405022:	popf   
  405023:	inc    esi
  405024:	loop   0x40506f
  405026:	fs sub eax,0x2f7a09d7
  40502c:	outs   dx,BYTE PTR ds:[esi]
  40502d:	mov    esp,0x1872f53d
  405032:	es pop esi
  405034:	sub    bl,BYTE PTR ds:[esi-0x2f]
  405038:	jb     0x40502a
  40503a:	ins    DWORD PTR es:[edi],dx
  40503b:	or     bh,BYTE PTR [esi+0x33811edc]
  405041:	sub    eax,0xe3771d70
  405046:	adc    eax,0x5908d026
  40504b:	cdq    
  40504c:	cmc    
  40504d:	shl    DWORD PTR [eax-0x63309eb2],0xd4
  405054:	or     BYTE PTR [eax],cl
  405056:	push   esp
  405057:	jecxz  0x404fe6
  405059:	dec    esi
  40505a:	and    edx,DWORD PTR [ecx-0x37192ced]
  405060:	and    edi,ebp
  405062:	xor    edx,DWORD PTR [esi+0x31]
  405065:	sub    al,0x45
  405067:	adc    bl,bl
  405069:	lds    edx,FWORD PTR [ebx+0x29]
  40506c:	mov    ch,0x89
  40506e:	fcomp  DWORD PTR [ebx+0x74f257cd]
  405074:	popf   
  405075:	xor    DWORD PTR [eax],ebx
  405077:	mov    ecx,0xd3db35e
  40507c:	lahf   
  40507d:	push   ebx
  40507e:	ss int 0x53
  405081:	test   BYTE PTR [eax],al
  405083:	xchg   edx,eax
  405084:	inc    esp
  405085:	scas   eax,DWORD PTR es:[edi]
  405086:	(bad)  
  405087:	aas    
  405088:	jg     0x4050a2
  40508a:	mov    dl,0x89
  40508c:	into   
  40508d:	xor    DWORD PTR [ecx-0x75a05143],ebx
  405093:	aad    0x9
  405095:	mov    al,0x44
  405097:	es (bad) 
  405099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40509a:	lods   eax,DWORD PTR ds:[esi]
  40509b:	rcl    BYTE PTR [edi+ebx*4-0x63],0x6d
  4050a0:	xor    DWORD PTR [edx],ecx
  4050a2:	jecxz  0x40502f
  4050a4:	pop    es
  4050a5:	inc    ebp
  4050a6:	outs   dx,DWORD PTR ds:[esi]
  4050a7:	(bad)  
  4050a8:	popf   
  4050a9:	inc    edi
  4050aa:	pop    eax
  4050ab:	clc    
  4050ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050ad:	pop    ss
  4050ae:	shld   ebp,ebx,cl
  4050b1:	das    
  4050b2:	cwde   
  4050b3:	retf   
  4050b4:	xor    eax,0x34a69a8f
  4050b9:	fs inc ecx
  4050bb:	int    0x81
  4050bd:	xlat   BYTE PTR ds:[ebx]
  4050be:	inc    edi
  4050bf:	pop    edx
  4050c0:	mov    dl,0xd3
  4050c2:	jne    0x4050bd
  4050c4:	mov    ecx,0xa69ab668
  4050ca:	sbb    al,0x4f
  4050cc:	(bad)  
  4050ce:	add    DWORD PTR [eax+eax*2-0x78219ea0],0xffffffb7
  4050d6:	stc    
  4050d7:	mov    edi,DWORD PTR [eax-0x39c95025]
  4050dd:	push   edx
  4050de:	je     0x405118
  4050e0:	xor    ecx,DWORD PTR [eax+0x7b]
  4050e3:	sti    
  4050e4:	ss push cs
  4050e6:	sar    bl,1
  4050e8:	fadd   DWORD PTR [ecx]
  4050ea:	jnp    0x40507f
  4050ec:	retf   
  4050ed:	xor    BYTE PTR [ecx+0x1],cl
  4050f0:	adc    DWORD PTR [edi+ebp*4-0x4a],edi
  4050f4:	not    DWORD PTR [ecx+0x71]
  4050f7:	jmp    0x3672:0x32fcf352
  4050fe:	arpl   WORD PTR [esi-0x6],bp
  405101:	test   DWORD PTR [ebp-0x57388135],edx
  405107:	iret   
  405108:	add    edi,DWORD PTR [eax+esi*4+0x62]
  40510c:	sub    al,0xf1
  40510e:	sbb    bl,BYTE PTR [ebp-0x69402784]
  405114:	xchg   ah,cl
  405116:	mov    bh,dl
  405118:	xchg   edx,eax
  405119:	pop    ds
  40511a:	ss mov al,0x98
  40511d:	xor    esp,ebx
  40511f:	(bad)  
  405120:	mov    ah,BYTE PTR [ecx-0x64]
  405123:	adc    dl,cl
  405125:	xchg   BYTE PTR [ecx+0x3],bl
  405128:	or     al,0x5d
  40512a:	xor    BYTE PTR [esi+0x9d22dad],0x8d
  405131:	xor    al,0x58
  405133:	push   ss
  405134:	inc    esp
  405135:	adc    BYTE PTR [ebx-0xf],cl
  405138:	or     eax,0xc2c8a8e
  40513d:	loope  0x405139
  40513f:	aam    0x33
  405141:	into   
  405142:	into   
  405143:	mov    bh,0x1f
  405145:	stos   BYTE PTR es:[edi],al
  405146:	mov    ah,0xe5
  405148:	sub    ebx,DWORD PTR [esi]
  40514a:	test   al,0x47
  40514c:	push   ds
  40514d:	jb     0x405113
  40514f:	cld    
  405150:	cmp    eax,0xb43600a7
  405155:	pop    ebp
  405156:	(bad)  
  405158:	mov    edi,0x1c219b23
  40515d:	stc    
  40515e:	mov    eax,ds:0xb13e09ab
  405163:	sar    dh,0x17
  405166:	adc    al,BYTE PTR [edi-0x6]
  405169:	cli    
  40516a:	mov    BYTE PTR [edx-0x75],al
  40516d:	pop    ebx
  40516e:	pop    ss
  40516f:	pop    esp
  405170:	cli    
  405171:	lock sub edx,ecx
  405174:	mov    DWORD PTR [edi+0x5faf847f],eax
  40517a:	jmp    DWORD PTR [ecx-0x72e592ed]
  405180:	sub    eax,DWORD PTR [eax-0x12]
  405183:	xor    eax,0xfb507252
  405188:	(bad)  
  405189:	pop    ss
  40518a:	add    al,0xbb
  40518c:	das    
  40518d:	xor    al,0xf9
  40518f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405190:	rcl    BYTE PTR [ecx-0x3a],cl
  405193:	mov    bl,0xe4
  405195:	mov    esp,DWORD PTR [ebx]
  405197:	xchg   ebp,eax
  405198:	dec    edi
  405199:	pushf  
  40519a:	or     BYTE PTR [ecx],bh
  40519c:	outs   dx,BYTE PTR ds:[esi]
  40519d:	sub    edi,DWORD PTR [eax+0x23c53c7a]
  4051a3:	loope  0x40520b
  4051a5:	add    esp,DWORD PTR ds:0x4ac65115
  4051ab:	cmp    ch,BYTE PTR [ebp-0x25]
  4051ae:	aam    0xfc
  4051b0:	xchg   edx,eax
  4051b1:	in     eax,dx
  4051b2:	pop    ebx
  4051b3:	addr16 mov eax,ds:0xff1f
  4051b7:	mov    ds:0xac17c78c,eax
  4051bc:	mov    DWORD PTR [edx-0x3a],edi
  4051bf:	fucomi st,st(2)
  4051c1:	adc    eax,0x376cd1d8
  4051c6:	sbb    al,0x64
  4051c8:	outs   dx,DWORD PTR ds:[esi]
  4051c9:	mov    bh,al
  4051cb:	dec    esi
  4051cc:	in     eax,dx
  4051cd:	push   eax
  4051ce:	pop    eax
  4051cf:	jo     0x4051d5
  4051d1:	jmp    0xd55a:0xc403bd0d
  4051d8:	dec    ebp
  4051d9:	sbb    eax,0x9e1c3281
  4051de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051df:	rol    BYTE PTR [ebx],cl
  4051e1:	in     al,dx
  4051e2:	shl    cl,1
  4051e4:	and    DWORD PTR [eax],ebp
  4051e6:	dec    edi
  4051e7:	test   DWORD PTR ds:[edi+0x6f],esi
  4051eb:	jnp    0x405201
  4051ed:	adc    bl,BYTE PTR [esi]
  4051ef:	cmp    esp,ebx
  4051f1:	push   eax
  4051f2:	test   BYTE PTR [ebx],ch
  4051f4:	xchg   ebx,eax
  4051f5:	(bad)  
  4051f7:	ja     0x40521f
  4051f9:	or     esi,edi
  4051fb:	mov    ecx,0x3a4904e4
  405200:	nop
  405201:	dec    ecx
  405202:	sbb    eax,0xd2e3d612
  405207:	inc    ebp
  405208:	pop    ebx
  405209:	xchg   ebp,eax
  40520a:	ins    BYTE PTR es:[edi],dx
  40520b:	inc    ecx
  40520c:	ins    DWORD PTR es:[edi],dx
  40520d:	sub    esi,esp
  40520f:	mov    ecx,0x38f611e3
  405214:	mov    edx,0x82c9df14
  405219:	mov    eax,0x4f12d76b
  40521e:	adc    eax,DWORD PTR [edi+ebx*8-0xd99caa3]
  405225:	push   es
  405226:	fs inc ebx
  405228:	(bad)  
  405229:	cdq    
  40522a:	pushf  
  40522b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40522c:	int3   
  40522d:	mov    edx,0xb2ae627
  405232:	inc    edi
  405233:	(bad)  
  405234:	adc    DWORD PTR [ebp-0x34],ecx
  405237:	inc    ebp
  405238:	sub    eax,0x69dd4074
  40523d:	sbb    eax,0x2dd93f24
  405242:	retf   0xf8cc
  405245:	mov    dl,0x76
  405247:	mov    WORD PTR [ebx],?
  405249:	jp     0x4052a8
  40524b:	shl    DWORD PTR [ecx+0x4a],0x99
  40524f:	xor    al,0x8e
  405252:	call   0x9851:0x986e3d4b
  405259:	repnz dec ebx
  40525b:	inc    ebx
  40525c:	cmp    al,0xa9
  40525e:	inc    eax
  40525f:	inc    edx
  405260:	fbstp  TBYTE PTR [ebx-0x5b82af94]
  405266:	push   0x4c0c15a3
  40526b:	xchg   esi,eax
  40526c:	and    al,0x28
  40526e:	sbb    al,0x31
  405270:	xchg   bx,ax
  405272:	std    
  405273:	rol    DWORD PTR [edi+0x30],cl
  405276:	fld    QWORD PTR [ebx+0x49]
  405279:	in     eax,dx
  40527a:	cmc    
  40527b:	xor    al,BYTE PTR [ecx]
  40527d:	addr16 out 0xb3,eax
  405280:	mov    dh,0x28
  405282:	mov    dh,bh
  405284:	sbb    al,0x4d
  405286:	add    eax,0xd4392f98
  40528b:	lock xchg esi,eax
  40528d:	or     eax,0x2426222d
  405292:	stos   DWORD PTR es:[edi],eax
  405293:	mov    ss,WORD PTR [ecx+0x15]
  405296:	test   BYTE PTR [ebx-0x29],dh
  405299:	das    
  40529a:	sti    
  40529b:	and    DWORD PTR [edi+0x18],ebx
  40529e:	lds    esp,FWORD PTR [edx+0x8]
  4052a1:	in     al,dx
  4052a2:	push   esi
  4052a3:	or     dl,BYTE PTR [eax+ecx*2+0x512eff2e]
  4052aa:	ret    0xa819
  4052ad:	js     0x40523e
  4052af:	pop    ds
  4052b0:	cli    
  4052b1:	lods   al,BYTE PTR ds:[esi]
  4052b2:	je     0x4052d0
  4052b4:	popf   
  4052b5:	rcl    BYTE PTR [edx+0x79],0x8e
  4052b9:	out    0x26,eax
  4052bb:	pop    ss
  4052bc:	mov    ecx,0x39043970
  4052c1:	ja     0x405315
  4052c3:	loop   0x4052cd
  4052c5:	in     eax,dx
  4052c6:	mov    eax,ds:0x645be456
  4052cb:	pop    es
  4052cc:	push   cs
  4052cd:	cmp    bh,0x2
  4052d0:	pop    ebp
  4052d1:	sbb    eax,0x6ca46257
  4052d6:	cmp    ah,BYTE PTR [eax-0x72a6adfd]
  4052dc:	xor    DWORD PTR [eax+0x32],ecx
  4052df:	push   edi
  4052e0:	and    eax,0xfd1d941
  4052e5:	sbb    al,0xd4
  4052e7:	mov    ebp,0xfeeccbcf
  4052ec:	sub    DWORD PTR [ecx],ecx
  4052ee:	xlat   BYTE PTR ds:[ebx]
  4052ef:	sub    al,BYTE PTR [esi-0x74bcfcda]
  4052f5:	push   ebx
  4052f6:	hlt    
  4052f7:	mov    ebx,0x44b4eb1
  4052fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052fd:	aas    
  4052fe:	xchg   esp,eax
  4052ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405300:	xchg   ebx,eax
  405301:	mov    ss,WORD PTR [edx+0x56082560]
  405307:	push   ss
  405308:	jp     0x4052ff
  40530a:	ffreep st(5)
  40530c:	es cdq 
  40530e:	mov    eax,DWORD PTR [ebp+0x10]
  405311:	mov    ecx,eax
  405313:	shrd   ecx,edx,0x2
  405317:	shl    eax,0x1e
  40531a:	shr    edx,0x2
  40531d:	mov    DWORD PTR [ebp+0x14],edx
  405320:	mov    DWORD PTR [ebp+0x14],eax
  405323:	xor    edx,edx
  405325:	mov    eax,ecx
  405327:	jmp    0x4056c8
  40532c:	sub    eax,0x846700b2
  405331:	jnp    0x4052e9
  405333:	mov    esp,0xe3d964fe
  405338:	aas    
  405339:	or     dl,BYTE PTR [edx-0x41e84270]
  40533f:	mov    esi,0xbebec4bd
  405344:	adc    dl,cl
  405346:	push   ss
  405347:	ret    0xbce8
  40534a:	mov    dl,0x6b
  40534c:	arpl   WORD PTR [esi-0x19],cx
  40534f:	push   ds
  405350:	test   al,0x82
  405352:	jl     0x405366
  405354:	jl     0x405394
  405356:	cld    
  405357:	data16 mov ds:0x90d933d5,al
  40535d:	push   ebp
  40535e:	iret   
  40535f:	jecxz  0x405321
  405361:	mov    ss,WORD PTR [esi-0x1e]
  405364:	mov    cl,0xe7
  405366:	bound  esi,QWORD PTR [edi+0x14]
  405369:	mov    dh,0xfa
  40536b:	xor    edx,DWORD PTR [ecx+0x74]
  40536e:	(bad)  
  40536f:	jmp    0x17145184
  405374:	adc    DWORD PTR [eax],ebx
  405376:	push   0x34e5c98d
  40537b:	sbb    cl,BYTE PTR [edx+ebx*8+0x2495ed92]
  405382:	push   0xddc8868b
  405387:	sar    cl,cl
  405389:	jl     0x40538d
  40538b:	xchg   DWORD PTR [eax],ebp
  40538d:	jno    0x40537b
  40538f:	mov    edx,0x785cbdf
  405394:	ds js  0x40538c
  405397:	scas   al,BYTE PTR es:[edi]
  405398:	mov    DWORD PTR [edx-0x18],ecx
  40539b:	jmp    0x40536e
  40539d:	clc    
  40539e:	dec    ebp
  40539f:	fs mov ebx,0x41ceb438
  4053a5:	add    al,0xec
  4053a7:	int3   
  4053a8:	pop    es
  4053a9:	shr    DWORD PTR [edi-0x22],0xd7
  4053ad:	scas   al,BYTE PTR es:[edi]
  4053ae:	inc    eax
  4053af:	mov    esp,0x76c6f589
  4053b4:	fs into 
  4053b6:	cwde   
  4053b7:	add    edi,ebx
  4053b9:	pop    esp
  4053ba:	int3   
  4053bb:	cmp    dl,BYTE PTR [eax+0xf]
  4053be:	and    DWORD PTR ds:0x1bd70acd,ebp
  4053c4:	fldenv [edx-0x12a4f40e]
  4053ca:	add    BYTE PTR [esi+0x409b606],cl
  4053d0:	ja     0x405416
  4053d2:	test   DWORD PTR [ebp-0x2a9ad90c],edx
  4053d8:	pop    edx
  4053d9:	(bad)  
  4053da:	mov    bl,0x6c
  4053dc:	inc    esp
  4053dd:	dec    ebp
  4053de:	sub    al,BYTE PTR [edx]
  4053e0:	adc    ch,dl
  4053e2:	push   0xfb9315f3
  4053e7:	int3   
  4053e8:	fnstenv [eax-0x614996b9]
  4053ee:	call   0x8b28:0x3963b2c
  4053f5:	cmp    DWORD PTR [ebx],edi
  4053f7:	and    al,0x42
  4053f9:	scas   al,BYTE PTR es:[edi]
  4053fa:	ins    DWORD PTR es:[edi],dx
  4053fb:	mov    ebx,0x73c45760
  405400:	clc    
  405401:	jmp    0x99ec:0x5ab91e46
  405408:	clc    
  405409:	setae  BYTE PTR [edi-0x13]
  40540d:	mov    ecx,0xe9802e4c
  405412:	test   al,0x55
  405414:	loope  0x40546c
  405416:	xor    cl,dh
  405418:	cmp    eax,0xf35a4491
  40541d:	adc    eax,0x9634635
  405422:	test   BYTE PTR [ecx],0x51
  405425:	adc    DWORD PTR gs:[edx-0x39],eax
  405429:	add    dl,BYTE PTR [ebx+0x3a]
  40542c:	dec    eax
  40542d:	add    eax,0xbd48147c
  405432:	xor    bh,BYTE PTR [ebp-0x2a8ff8ec]
  405438:	pop    ebp
  405439:	cmp    bh,al
  40543b:	sub    BYTE PTR [ebp+0x56],al
  40543e:	push   cs
  40543f:	and    bl,BYTE PTR [esi]
  405441:	pop    edi
  405442:	test   ecx,eax
  405444:	inc    edi
  405445:	(bad)  
  405446:	in     eax,dx
  405447:	les    ebx,FWORD PTR [ebp+esi*1-0x76f2905e]
  40544e:	aas    
  40544f:	hlt    
  405450:	pop    edx
  405451:	push   edi
  405452:	sub    ah,BYTE PTR [edi]
  405454:	mov    BYTE PTR [ecx+0x5893e33e],ah
  40545a:	xor    BYTE PTR [ecx-0x6ed6344d],bl
  405460:	cli    
  405461:	ds ds call 0x7847378b
  405468:	push   ds
  405469:	xor    eax,0x5a63769b
  40546e:	sbb    DWORD PTR [esi],ebp
  405470:	xlat   BYTE PTR ds:[ebx]
  405471:	sbb    al,0x47
  405473:	dec    ecx
  405474:	mov    esi,0xcc64290a
  405479:	jno    0x4054cc
  40547b:	push   ecx
  40547c:	out    0xd,eax
  40547e:	xor    eax,0x50fc96bb
  405483:	xor    DWORD PTR ds:0xf63ba47e,0xffffffd3
  40548a:	out    dx,al
  40548b:	cmp    al,0x62
  40548d:	dec    ebx
  40548e:	in     al,0xea
  405490:	pop    ebx
  405491:	and    DWORD PTR [edi],ebp
  405493:	and    DWORD PTR [ecx+edi*4+0x20a0ef24],ecx
  40549a:	push   edx
  40549b:	int    0x31
  40549d:	cdq    
  40549e:	inc    edx
  40549f:	retf   0x5dae
  4054a2:	sub    edi,edi
  4054a4:	dec    eax
  4054a5:	xor    edx,esp
  4054a7:	retf   
  4054a8:	cdq    
  4054a9:	or     edi,DWORD PTR [esi+0x42]
  4054ac:	ficomp WORD PTR ds:[edx+0x4d]
  4054b0:	fst    DWORD PTR [edi+0x42daa046]
  4054b6:	rol    DWORD PTR [ebp+0x79],0xb4
  4054ba:	loopne 0x40549e
  4054bc:	adc    BYTE PTR [edi+0x13],0x67
  4054c0:	xchg   ebp,eax
  4054c1:	mov    BYTE PTR [esi+0x4d],dl
  4054c4:	jbe    0x40549b
  4054c6:	mov    eax,ds:0x5c2adb4c
  4054cb:	not    BYTE PTR [esi-0x4f]
  4054ce:	pop    ebx
  4054cf:	es jb  0x405488
  4054d2:	mov    ebx,0x76f1dcb0
  4054d7:	sbb    dl,ch
  4054d9:	popa   
  4054da:	fisub  WORD PTR [eax+0x6f]
  4054dd:	and    edx,esp
  4054df:	inc    edi
  4054e0:	lea    eax,[ebp+0x4d0cea5]
  4054e6:	div    BYTE PTR [esi+0x3b71d960]
  4054ec:	dec    edi
  4054ed:	iret   
  4054ee:	dec    ebx
  4054ef:	jp     0x4054b4
  4054f1:	stc    
  4054f2:	je     0x405536
  4054f4:	or     edi,DWORD PTR [edx-0x68]
  4054f7:	mov    edx,0x1d93009f
  4054fc:	dec    eax
  4054fd:	xchg   ebp,eax
  4054fe:	xor    al,0x7f
  405500:	xchg   cl,dh
  405502:	sbb    eax,DWORD PTR [edi+0x7a]
  405505:	outs   dx,BYTE PTR ds:[esi]
  405506:	xor    eax,0x2f07ca36
  40550b:	inc    esi
  40550c:	jns    0x4054fa
  40550e:	inc    ebx
  40550f:	je     0x4054c5
  405511:	(bad)  
  405512:	arpl   WORD PTR [edx],si
  405514:	or     DWORD PTR [edx],edx
  405516:	push   ss
  405517:	cmp    eax,0xd8671de5
  40551c:	daa    
  40551d:	int3   
  40551e:	or     ebx,DWORD PTR [edx-0x6e36d836]
  405524:	inc    ebx
  405525:	xchg   ebx,eax
  405526:	addr16 mov ds:0x16f0,eax
  40552a:	jne    0x405540
  40552c:	adc    DWORD PTR [edi-0x53],esi
  40552f:	lock int3 
  405531:	iret   
  405532:	ja     0x405548
  405534:	mov    DWORD PTR [ebp-0x168269d3],0x188d70d9
  40553e:	cmp    al,0x20
  405540:	xchg   ebx,eax
  405541:	cmp    BYTE PTR [eax+0x5218cceb],ah
  405547:	add    ebx,0xc2eefd70
  40554d:	addr16 dec edi
  40554f:	mov    ebp,0x1f2eb0aa
  405554:	add    al,0x76
  405556:	int3   
  405557:	add    BYTE PTR [ecx],bl
  405559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40555a:	or     DWORD PTR [ecx+eax*1],eax
  40555d:	jp     0x405513
  40555f:	mov    al,0xa
  405561:	fwait
  405562:	xchg   ebx,eax
  405563:	mov    esp,0x310cfa09
  405568:	mov    esi,fs
  40556a:	std    
  40556b:	inc    edi
  40556c:	dec    eax
  40556d:	sbb    al,ah
  40556f:	jmp    0x405533
  405571:	pusha  
  405572:	sahf   
  405573:	aam    0xa1
  405575:	mov    eax,0x7ba6dd23
  40557a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40557b:	dec    eax
  40557c:	int3   
  40557d:	aaa    
  40557e:	xor    bl,BYTE PTR [ecx+0x2b]
  405581:	add    cl,BYTE PTR [eax]
  405583:	inc    ebx
  405584:	sbb    BYTE PTR [edi+0x58],ch
  405587:	cdq    
  405588:	ret    0xf3f5
  40558b:	jmp    0x196d:0x75343140
  405592:	mov    esp,0x1f18edc5
  405597:	ret    0x50fe
  40559a:	imul   esi,edi,0x921b9171
  4055a0:	pop    ecx
  4055a1:	in     al,dx
  4055a2:	push   ebp
  4055a3:	test   ch,al
  4055a5:	lods   eax,DWORD PTR ds:[esi]
  4055a6:	mov    edi,0xab45f442
  4055ab:	mov    DWORD PTR [edi],eax
  4055ad:	mov    ecx,0xa1259a81
  4055b2:	xchg   edi,eax
  4055b3:	daa    
  4055b4:	fsubr  QWORD PTR [esp+esi*2-0x5f616f8a]
  4055bb:	and    al,0xd2
  4055bd:	xchg   esp,eax
  4055be:	xchg   DWORD PTR [ecx-0x63],eax
  4055c1:	test   al,0x9e
  4055c3:	ss jns 0x4055d2
  4055c6:	repz sub BYTE PTR es:[ecx-0x5c],dl
  4055cb:	or     edi,DWORD PTR [edi-0x5b377486]
  4055d1:	add    ecx,DWORD PTR [edx]
  4055d3:	push   edx
  4055d4:	enter  0x7c83,0x8f
  4055d8:	jp     0x4055d7
  4055da:	retf   0x135f
  4055dd:	inc    esi
  4055de:	xchg   ecx,eax
  4055df:	inc    esp
  4055e0:	add    ch,al
  4055e2:	retf   
  4055e3:	pop    es
  4055e4:	mov    ebp,DWORD PTR [eax-0x2ddebf2d]
  4055ea:	dec    ecx
  4055eb:	std    
  4055ec:	std    
  4055ed:	add    eax,0x8b18bd17
  4055f2:	iret   
  4055f3:	dec    ebp
  4055f4:	jmp    0x131a:0x718c8d89
  4055fb:	cmp    eax,0x32c80a1c
  405600:	ds inc edx
  405602:	inc    edi
  405603:	lock xlat BYTE PTR ds:[ebx]
  405605:	jmp    FWORD PTR [ebx-0xc8da812]
  40560b:	mov    ah,0xd0
  40560d:	jmp    0x7298:0x29495c9f
  405614:	cmp    eax,0x5dba7c87
  405619:	imul   edx,DWORD PTR [ebp-0x1f996547],0xcecd4cba
  405623:	cmp    cl,BYTE PTR [ecx-0x2a3bd9df]
  405629:	lods   eax,DWORD PTR ds:[esi]
  40562a:	or     al,0x56
  40562c:	(bad)  
  40562d:	rcr    BYTE PTR [eax+0x1a],0xe1
  405631:	xor    ah,bl
  405633:	sbb    BYTE PTR [ecx-0x6c],0xcb
  405637:	pop    edi
  405638:	push   eax
  405639:	imul   esp,DWORD PTR [edi+edx*1],0xbff9e29b
  405640:	pop    esp
  405641:	jae    0x40567a
  405643:	sub    ebp,DWORD PTR [esi]
  405645:	cmp    DWORD PTR [edx],0x29
  405648:	nop
  405649:	push   eax
  40564a:	dec    ebx
  40564b:	out    dx,eax
  40564c:	adc    DWORD PTR [ebx-0x72c66ba5],ebx
  405652:	add    BYTE PTR [esi+0x3f],ch
  405655:	mov    esi,edx
  405657:	stc    
  405658:	cli    
  405659:	pop    eax
  40565a:	xchg   edx,eax
  40565b:	arpl   WORD PTR ds:0x3dde1d2f,bp
  405661:	cmc    
  405662:	sbb    eax,0xb38f4ad4
  405667:	add    al,0x52
  405669:	js     0x405607
  40566b:	das    
  40566c:	icebp  
  40566d:	jno    0x4056ac
  40566f:	mov    edx,0xb2440457
  405674:	cmp    eax,0x69c61ebd
  405679:	sub    bl,bh
  40567b:	call   0xc290c9f3
  405680:	test   dh,dl
  405682:	mov    ebp,esi
  405684:	mov    edi,0xde5a9651
  405689:	loop   0x4056e5
  40568b:	cmp    esp,esp
  40568d:	jo     0x4056d6
  40568f:	loopne 0x4056e0
  405691:	mov    esi,0x881827f7
  405696:	sbb    al,0x48
  405698:	xor    al,0x89
  40569a:	ss into 
  40569c:	xchg   DWORD PTR [edi+0x47],esp
  40569f:	mov    bl,0x1
  4056a1:	xchg   ebx,eax
  4056a2:	stc    
  4056a3:	add    ah,BYTE PTR [ebp-0x72c90a45]
  4056a9:	inc    eax
  4056aa:	add    eax,0xd939ae4b
  4056af:	rol    BYTE PTR [edx-0x71a95b3a],1
  4056b5:	mov    al,0xeb
  4056b7:	add    BYTE PTR [edx+ecx*2],cl
  4056ba:	mov    esp,0xd53f84fc
  4056bf:	xor    DWORD PTR [esp+ebp*4-0x70],edx
  4056c3:	push   ebp
  4056c4:	xor    DWORD PTR [ebp+esi*2+0xbc73304],ebx
  4056cb:	ret    0x558b
  4056ce:	cld    
  4056cf:	dec    eax
  4056d0:	not    eax
  4056d2:	jmp    0x405a73
  4056d7:	int    0x14
  4056d9:	mov    ds:0x7ab8a317,eax
  4056de:	sbb    al,0x97
  4056e0:	mov    ah,0x18
  4056e2:	rcl    DWORD PTR [edx+0x10],1
  4056e5:	(bad)  
  4056e7:	mov    esi,0xbdbebe1f
  4056ec:	les    edi,FWORD PTR [esi+0x352dc5be]
  4056f2:	xchg   esp,eax
  4056f3:	in     al,0x36
  4056f5:	dec    ebp
  4056f6:	iret   
  4056f7:	imul   edi,DWORD PTR [ebx+0x5a],0xffffffcb
  4056fb:	sub    ebp,DWORD PTR [ebx+0x35c22b45]
  405701:	pop    ds
  405702:	lods   al,BYTE PTR ds:[esi]
  405703:	(bad)  
  405704:	mov    bh,0x88
  405706:	ds loopne 0x4056cd
  405709:	xor    BYTE PTR [ebx-0x3efec5b6],0x55
  405710:	xchg   esi,eax
  405711:	mov    bh,0x4c
  405713:	aas    
  405714:	leave  
  405715:	lods   eax,DWORD PTR ds:[esi]
  405716:	push   edx
  405717:	cmp    eax,0x5afc4331
  40571c:	imul   eax,esp,0xf3b85c8f
  405722:	mov    eax,0x9b190f6f
  405727:	fcomp  st(3)
  405729:	ds in  al,0x3c
  40572c:	dec    ebp
  40572d:	stos   BYTE PTR es:[edi],al
  40572e:	cmp    edx,DWORD PTR [esi+0x48]
  405731:	or     eax,0x52a4e230
  405736:	and    al,0xe6
  405738:	(bad)  
  405739:	dec    edx
  40573a:	je     0x4056d9
  40573c:	packssdw mm4,QWORD PTR [ebx]
  40573f:	dec    ebp
  405740:	int    0x16
  405742:	sub    al,0x8a
  405744:	(bad)  
  405745:	out    dx,al
  405746:	fsub   DWORD PTR [edi]
  405748:	rol    dl,0xfa
  40574b:	jns    0x4057a2
  40574d:	icebp  
  40574e:	sbb    ax,0x65a2
  405752:	mov    bh,0x7a
  405754:	inc    esi
  405755:	rcl    DWORD PTR [ecx+0x2257fce2],1
  40575b:	push   ds
  40575c:	dec    esp
  40575d:	gs (bad) 
  40575f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405760:	mov    bl,0xad
  405762:	pop    ebp
  405763:	pop    eax
  405764:	dec    ebx
  405765:	push   ds
  405766:	push   edx
  405767:	sbb    eax,0xffffffe2
  40576a:	sub    al,0xcd
  40576c:	loope  0x4056ee
  40576e:	adc    al,0xd3
  405770:	sub    dl,dl
  405772:	fist   DWORD PTR [ebp+ebx*4-0x63a6e486]
  405779:	mov    bh,0x64
  40577b:	lea    esp,[eax+0x7dd31e01]
  405781:	(bad)  
  405782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405783:	enterw 0x723b,0x50
  405788:	cli    
  405789:	push   esi
  40578a:	push   ds
  40578b:	and    DWORD PTR [esi+0x11],eax
  40578e:	out    dx,al
  40578f:	push   ecx
  405790:	inc    ebp
  405791:	(bad)
  405794:	fstp   QWORD PTR [edi]
  405796:	jno    0x4057bc
  405798:	inc    ebp
  405799:	popa   
  40579a:	push   eax
  40579b:	push   ss
  40579c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40579d:	(bad)  
  40579e:	daa    
  40579f:	or     al,0x1f
  4057a1:	mov    ?,WORD PTR [esi+0x750fab16]
  4057a7:	pop    ecx
  4057a8:	mov    al,0xa5
  4057aa:	or     al,0xb7
  4057ac:	std    
  4057ad:	stos   BYTE PTR es:[edi],al
  4057ae:	out    dx,al
  4057af:	repz sub al,0xee
  4057b2:	xchg   ebx,eax
  4057b3:	std    
  4057b4:	mov    dh,0x45
  4057b6:	jns    0x40577d
  4057b8:	cmp    bh,BYTE PTR [edx-0x43]
  4057bb:	pushf  
  4057bc:	push   ss
  4057bd:	jmp    0x4f89:0x6094e4ac
  4057c4:	dec    ecx
  4057c5:	xchg   bh,bl
  4057c7:	fild   WORD PTR [ecx+0x35]
  4057ca:	arpl   WORD PTR [eax+0x3a63a68f],dx
  4057d0:	sub    esi,DWORD PTR [edx+0x27797f94]
  4057d6:	push   ds
  4057d7:	test   eax,0xe92a80bf
  4057dc:	mul    BYTE PTR [ebx]
  4057de:	call   0xcf8d369c
  4057e3:	xchg   esi,eax
  4057e4:	and    dl,BYTE PTR [eax+0x48]
  4057e7:	inc    eax
  4057e8:	sub    WORD PTR [edi+0x79],dx
  4057ec:	xor    DWORD PTR [ecx-0x1],ecx
  4057ef:	mov    al,ds:0x3bd850ee
  4057f4:	imul   ebx,DWORD PTR [ebx-0x781ff901],0xffffffe4
  4057fb:	fist   DWORD PTR ds:0x517de20d
  405801:	jnp    0x405849
  405803:	sub    BYTE PTR [eax-0x55],dh
  405806:	jne    0x405805
  405808:	xchg   ecx,eax
  405809:	call   DWORD PTR [ecx-0x2e]
  40580c:	js     0x4057c5
  40580e:	xor    DWORD PTR [ecx+0x3875c485],esp
  405814:	cmp    al,0xb1
  405816:	jle    0x40586f
  405818:	add    al,0x8a
  40581a:	push   ebp
  40581b:	loop   0x405850
  40581d:	lods   al,BYTE PTR ds:[esi]
  40581e:	inc    eax
  40581f:	scas   al,BYTE PTR es:[edi]
  405820:	pop    es
  405821:	xor    BYTE PTR [ebx-0x750c2236],bh
  405827:	or     dh,ah
  405829:	adc    al,0xef
  40582b:	push   ss
  40582c:	enter  0x2982,0x78
  405830:	ins    DWORD PTR es:[edi],dx
  405831:	inc    BYTE PTR [esi]
  405833:	fmul   DWORD PTR [edx]
  405835:	call   0x8ce0:0x5dfc7c50
  40583c:	lea    ecx,[esi]
  40583e:	jle    0x405868
  405840:	jmp    0xc3ebe14d
  405845:	leave  
  405846:	dec    edx
  405847:	mov    al,ds:0x5ee4ce92
  40584c:	in     eax,dx
  40584d:	ficom  WORD PTR [ebp-0x2b]
  405850:	inc    edx
  405851:	daa    
  405852:	add    al,0x17
  405854:	push   cs
  405855:	ins    BYTE PTR es:[edi],dx
  405856:	jl     0x40587e
  405858:	aam    0xd7
  40585a:	(bad)  
  40585b:	pop    ss
  40585c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40585d:	sbb    BYTE PTR ds:0x5d1f6f4b,bh
  405863:	test   al,0x40
  405865:	and    BYTE PTR [ebp-0x66],dl
  405868:	pop    esp
  405869:	push   0x7640a0a0
  40586e:	jae    0x405884
  405870:	test   BYTE PTR [edi-0x71],0xea
  405874:	or     dl,0x38
  405877:	repnz mov dl,0x1e
  40587a:	sbb    ah,ah
  40587c:	aam    0x49
  40587e:	outs   dx,DWORD PTR ds:[esi]
  40587f:	das    
  405880:	pop    ebx
  405881:	adc    BYTE PTR [ebp-0x63],0x3a
  405885:	inc    esp
  405886:	jmp    0xbd912129
  40588b:	loop   0x4058c7
  40588d:	dec    ecx
  40588e:	mov    ah,0x96
  405890:	rep ins DWORD PTR es:[edi],dx
  405892:	and    DWORD PTR [edx-0x6f],ecx
  405895:	es pop ebp
  405897:	popa   
  405898:	mov    ds:0x3e564e36,eax
  40589d:	push   0xffffff8b
  40589f:	frstor [edx-0x1987e3c4]
  4058a5:	add    al,BYTE PTR [edi-0x33]
  4058a8:	sub    eax,0x4d95af36
  4058ad:	adc    DWORD PTR [esi+0x44],esp
  4058b0:	push   0x76300ead
  4058b5:	mov    WORD PTR [esi],es
  4058b7:	sub    BYTE PTR [ebx-0x58b2f106],bl
  4058bd:	pop    ds
  4058be:	mov    ebx,0xc1943c0b
  4058c3:	sub    eax,0x80260811
  4058c8:	cdq    
  4058c9:	xor    al,ah
  4058cb:	xor    BYTE PTR [edi],0xd2
  4058ce:	std    
  4058cf:	jmp    0x40588f
  4058d1:	pop    es
  4058d2:	sub    edi,0x189690b6
  4058d8:	pop    ebp
  4058d9:	(bad)  
  4058da:	jnp    0x405919
  4058dc:	pop    esi
  4058dd:	popf   
  4058de:	in     eax,dx
  4058df:	pusha  
  4058e0:	mov    ecx,ebp
  4058e2:	call   0x18a:0xe3986edd
  4058e9:	xchg   BYTE PTR [esi+0x2a],cl
  4058ec:	mov    bh,BYTE PTR [ecx]
  4058ee:	lods   eax,DWORD PTR ds:[esi]
  4058ef:	inc    eax
  4058f0:	or     BYTE PTR [esi-0x52],ch
  4058f3:	add    eax,0xdffb0315
  4058f8:	xor    DWORD PTR [eax+0x229a24ba],edi
  4058fe:	aam    0x50
  405900:	push   esi
  405901:	es (bad) 
  405903:	lods   eax,DWORD PTR ds:[esi]
  405904:	outs   dx,BYTE PTR ds:[esi]
  405905:	xchg   BYTE PTR [ecx-0x3c],bl
  405908:	add    BYTE PTR [edi],bh
  40590a:	pop    ebx
  40590b:	popf   
  40590c:	or     al,0x18
  40590e:	imul   ebx,eax,0xffffffdb
  405911:	div    DWORD PTR es:[edi]
  405914:	sbb    cl,BYTE PTR [esi]
  405916:	push   ds
  405917:	jbe    0x4058b9
  405919:	ins    DWORD PTR es:[edi],dx
  40591a:	sbb    BYTE PTR [esi],0xb6
  40591d:	mov    eax,ds:0xbca7c94d
  405922:	pop    edi
  405923:	cmp    esi,DWORD PTR [ebx]
  405925:	jge    0x405971
  405927:	in     eax,dx
  405928:	sub    cl,bh
  40592a:	fisttp WORD PTR [esi]
  40592c:	sbb    edx,DWORD PTR [ebp-0x1d0ebd4b]
  405932:	push   esp
  405933:	cmp    bh,BYTE PTR [ecx-0x1e]
  405936:	cmp    ah,bl
  405938:	push   ebx
  405939:	pop    esi
  40593a:	mov    ebx,0xe6549fcc
  40593f:	push   cs
  405940:	push   0x6c
  405942:	pop    ds
  405943:	es repz push ebp
  405946:	pop    edx
  405947:	daa    
  405948:	adc    BYTE PTR [ecx+0x67b2e638],bl
  40594e:	pushf  
  40594f:	or     edi,ecx
  405951:	cmp    eax,0xe56d939b
  405956:	imul   edx,DWORD PTR [edi+0x47f1139e],0x506abd52
  405960:	(bad)  
  405961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405962:	inc    esi
  405963:	in     al,0x84
  405965:	mov    bh,0x8a
  405967:	in     eax,dx
  405968:	sbb    eax,0x7c5475e9
  40596d:	mov    al,ds:0x762189fc
  405972:	(bad)  
  405973:	or     DWORD PTR [esi],edx
  405975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405976:	nop
  405977:	xchg   esp,eax
  405978:	fwait
  405979:	pop    ds
  40597a:	into   
  40597b:	jge    0x405955
  40597d:	(bad)  
  40597e:	jno    0x4059c5
  405980:	lods   al,BYTE PTR ds:[esi]
  405981:	scas   eax,DWORD PTR es:[edi]
  405982:	xor    DWORD PTR ds:0x46815a8d,esi
  405988:	mov    bl,0x1
  40598a:	cli    
  40598b:	bound  edi,QWORD PTR [esi+0x1e]
  40598e:	in     al,dx
  40598f:	push   ds
  405990:	sbb    al,0xc
  405992:	add    edx,esp
  405994:	stc    
  405995:	(bad)  
  405996:	jne    0x405962
  405998:	mov    edx,0xb7505eb3
  40599d:	ins    BYTE PTR es:[edi],dx
  40599e:	out    0x50,eax
  4059a0:	add    ebp,edi
  4059a2:	lods   al,BYTE PTR ds:[esi]
  4059a3:	icebp  
  4059a4:	addr16 mov eax,ds:0x67af
  4059a8:	(bad)  [edi+0x1c3e182a]
  4059ae:	adc    edi,DWORD PTR [eax-0x676d827f]
  4059b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059b5:	sbb    DWORD PTR [edi+0x66],esi
  4059b8:	jnp    0x405969
  4059ba:	cmp    DWORD PTR [ebx-0x7],0x8cf9f94b
  4059c1:	xchg   ecx,eax
  4059c2:	inc    ebx
  4059c3:	xchg   ecx,eax
  4059c4:	and    BYTE PTR [eax+0x194adffc],0x36
  4059cb:	test   dh,dh
  4059cd:	mov    ecx,0x57d4b97d
  4059d2:	jae    0x40599e
  4059d4:	lahf   
  4059d5:	cmp    esp,ebp
  4059d7:	push   0xc6ef55d0
  4059dc:	sub    dl,dl
  4059de:	push   ss
  4059df:	inc    esi
  4059e0:	adc    BYTE PTR [edx+esi*8-0x148a67d9],bl
  4059e7:	jg     0x4059c1
  4059e9:	mov    ebp,0x110516c8
  4059ee:	adc    edi,DWORD PTR [eax+edx*8-0xa34ccd2]
  4059f5:	mov    al,0x2c
  4059f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059f8:	aad    0x9a
  4059fa:	lahf   
  4059fb:	jbe    0x405a58
  4059fd:	fstp   TBYTE PTR [edx-0x5]
  405a00:	scas   al,BYTE PTR es:[edi]
  405a01:	ins    BYTE PTR es:[edi],dx
  405a02:	push   ebx
  405a03:	jle    0x405a3d
  405a05:	adc    al,0x74
  405a07:	mov    cl,0xfc
  405a09:	add    al,0xaf
  405a0b:	pop    es
  405a0c:	pusha  
  405a0d:	adc    edi,ecx
  405a0f:	call   0x73ed9d92
  405a14:	cdq    
  405a15:	mov    bh,0xc8
  405a17:	fldcw  WORD PTR [ebx-0x1d6e1fb7]
  405a1d:	jmp    0x405a57
  405a1f:	xor    al,al
  405a21:	aas    
  405a22:	sbb    ecx,DWORD PTR [ecx+edi*1+0x1b]
  405a26:	(bad)  
  405a28:	popa   
  405a29:	push   0xfffffffb
  405a2b:	jne    0x4059eb
  405a2d:	add    BYTE PTR [edx+0x7b],0xb7
  405a31:	or     esp,DWORD PTR [edi]
  405a33:	scas   al,BYTE PTR es:[edi]
  405a34:	into   
  405a35:	dec    edi
  405a36:	nop
  405a37:	cmp    BYTE PTR [eax-0x4c52744a],dh
  405a3d:	jle    0x4059c9
  405a3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a40:	push   DWORD PTR [ebp-0x2dd36875]
  405a46:	or     BYTE PTR [ebx+0x516d033],ch
  405a4c:	sahf   
  405a4d:	cmp    al,0x4a
  405a4f:	jnp    0x405a34
  405a51:	jmp    0x440b2446
  405a56:	and    eax,0x86e2690c
  405a5b:	pop    ebp
  405a5c:	xchg   DWORD PTR [esi+0x4b25c17c],esi
  405a62:	and    DWORD PTR [ecx-0x297b415b],ecx
  405a68:	mov    esp,ecx
  405a6a:	fstp   st(7)
  405a6c:	clc    
  405a6d:	mov    ebx,0x387e1877
  405a72:	dec    edx
  405a73:	and    eax,edx
  405a75:	xor    ecx,edi
  405a77:	mov    DWORD PTR [ebp-0x4],eax
  405a7a:	mov    DWORD PTR [ebp+0x14],ecx
  405a7d:	xor    eax,eax
  405a7f:	or     DWORD PTR [ebp+0x14],eax
  405a82:	mov    eax,DWORD PTR [ebp-0x50]
  405a85:	mov    ecx,DWORD PTR [ebp-0x4c]
  405a88:	shrd   eax,ecx,0x2
  405a8c:	shr    ecx,0x2
  405a8f:	mov    cx,ax
  405a92:	mov    eax,DWORD PTR [ebp-0x50]
  405a95:	mov    edx,0x6d5d
  405a9a:	xor    cx,dx
  405a9d:	mov    edx,DWORD PTR [ebp-0x4c]
  405aa0:	xor    edx,edx
  405aa2:	shl    eax,0x1e
  405aa5:	mov    ax,dx
  405aa8:	or     ax,cx
  405aab:	mov    ecx,DWORD PTR [ebp-0x4]
  405aae:	cmp    WORD PTR [ecx],ax
  405ab1:	je     0x406288
  405ab7:	mov    eax,DWORD PTR [ebp+0x14]
  405aba:	sub    DWORD PTR [ebp-0x4],eax
  405abd:	mov    eax,DWORD PTR [esi]
  405abf:	jmp    0x405e60
  405ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ac5:	test   eax,0x3c522b52
  405aca:	mov    eax,0x46ddf0ac
  405acf:	xchg   edx,eax
  405ad0:	dec    ecx
  405ad1:	into   
  405ad2:	mov    ebp,0xbe25bdcf
  405ad7:	mov    esi,0xbebec4bd
  405adc:	es cmp cl,dl
  405adf:	ret    
  405ae0:	or     bh,0xb2
  405ae3:	test   DWORD PTR [ecx-0x14f4984b],0x5a4848fb
  405aed:	(bad)  
  405aee:	(bad)  
  405aef:	pop    edi
  405af0:	cmc    
  405af1:	retf   0xc7ec
  405af4:	jle    0x405b63
  405af6:	push   ss
  405af7:	mov    edi,0x1dfaed12
  405afc:	push   ecx
  405afd:	repnz nop
  405aff:	pop    ebp
  405b00:	cwde   
  405b01:	xchg   ecx,eax
  405b02:	dec    edx
  405b03:	je     0x405b7d
  405b05:	mov    BYTE PTR [ebp+0x31f6f53],bl
  405b0b:	scas   eax,DWORD PTR es:[edi]
  405b0c:	adc    BYTE PTR [esi+edi*1+0x7df77464],0x96
  405b14:	call   0x6a332512
  405b19:	mov    ch,BYTE PTR [edx+0x1ca1b610]
  405b1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b20:	xchg   ecx,eax
  405b21:	test   al,0xde
  405b23:	adc    eax,0x9b59cc80
  405b28:	adc    esi,DWORD PTR [edx-0x3]
  405b2b:	push   esp
  405b2c:	repz push esi
  405b2e:	mov    eax,ds:0x43cd7462
  405b33:	aas    
  405b34:	mov    ebp,0xf49d80d0
  405b39:	cmp    eax,0x244c6bd9
  405b3f:	mov    edx,0x694dbad9
  405b44:	mov    ds,WORD PTR [ebx+ebx*1]
  405b47:	pop    edx
  405b48:	icebp  
  405b49:	mov    ch,0x5e
  405b4b:	pop    ds
  405b4c:	mov    ch,0xd4
  405b4e:	dec    ecx
  405b4f:	ins    BYTE PTR es:[edi],dx
  405b50:	inc    esp
  405b51:	(bad)  
  405b52:	in     eax,0x13
  405b54:	out    0xf0,al
  405b56:	sbb    DWORD PTR [ecx-0x11ae1037],0xffffffea
  405b5d:	xchg   BYTE PTR [ebx+edi*8],al
  405b60:	sub    esi,DWORD PTR [edi-0x2cf93dad]
  405b66:	shl    DWORD PTR [esi-0x7f],1
  405b69:	jne    0x405b8d
  405b6b:	pushf  
  405b6c:	adc    al,BYTE PTR [eax]
  405b6e:	add    ebx,edi
  405b70:	sbb    bh,BYTE PTR [edi+0x41]
  405b73:	jle    0x405b01
  405b75:	push   edx
  405b76:	dec    esp
  405b77:	dec    eax
  405b78:	loop   0x405b05
  405b7a:	mov    esi,0x145ce84d
  405b7f:	shl    BYTE PTR [edi],0x9c
  405b82:	push   ebp
  405b83:	xor    eax,0x31cd3593
  405b88:	sbb    cl,al
  405b8a:	outs   dx,BYTE PTR ds:[esi]
  405b8b:	retf   0xddc
  405b8e:	stc    
  405b8f:	jns    0x405b70
  405b91:	scas   al,BYTE PTR es:[edi]
  405b92:	sub    al,0x38
  405b94:	mov    ebp,0xca0a559b
  405b99:	adc    BYTE PTR [ebp+edi*4+0x6d],0x1
  405b9e:	int    0xe
  405ba0:	leave  
  405ba1:	push   esp
  405ba2:	enter  0x13d8,0x90
  405ba6:	hlt    
  405ba7:	bound  edi,QWORD PTR [ecx+eiz*8-0xf]
  405bab:	int3   
  405bac:	push   cs
  405bad:	push   0x8ce5608
  405bb2:	loope  0x405bfa
  405bb4:	(bad)  
  405bb6:	popf   
  405bb7:	out    0xd3,al
  405bb9:	sbb    ebp,DWORD PTR [eax+ebx*4+0x27]
  405bbd:	adc    al,0x99
  405bbf:	out    0xd7,al
  405bc1:	push   es
  405bc2:	pop    eax
  405bc3:	popa   
  405bc4:	outs   dx,BYTE PTR ds:[esi]
  405bc5:	call   0xc9ea04bb
  405bca:	mov    al,cs:0x55865d3d
  405bd0:	stos   DWORD PTR es:[edi],eax
  405bd1:	sbb    BYTE PTR [ecx],bh
  405bd3:	scas   al,BYTE PTR es:[edi]
  405bd4:	leave  
  405bd5:	xor    eax,0x25529b68
  405bda:	mov    es,WORD PTR [ecx+ecx*2]
  405bdd:	int3   
  405bde:	xor    BYTE PTR [eax],bh
  405be0:	shl    DWORD PTR [edx],cl
  405be2:	shl    DWORD PTR [ecx],1
  405be4:	iret   
  405be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405be6:	cmp    eax,0x2e35c115
  405beb:	and    DWORD PTR [ebx],0x59
  405bee:	cmp    al,0x9d
  405bf0:	mov    DWORD PTR [edx+eiz*8-0x244c7a68],edx
  405bf7:	add    ecx,eax
  405bf9:	jge    0x405c76
  405bfb:	imul   ebp,DWORD PTR [edi-0x74],0x3acb5412
  405c02:	int    0x27
  405c04:	int3   
  405c05:	jno    0x405bf2
  405c07:	jno    0x405ba1
  405c09:	dec    ebp
  405c0a:	sub    al,0x43
  405c0c:	ds pop ds
  405c0e:	xchg   edi,eax
  405c0f:	sbb    eax,0xce3502b0
  405c14:	jmp    0xc8ed:0x5596b72a
  405c1b:	loopne 0x405c7c
  405c1d:	push   ebx
  405c1e:	adc    ebx,DWORD PTR [edi]
  405c20:	ret    
  405c21:	cmp    BYTE PTR [esi-0x46],dh
  405c24:	lods   al,BYTE PTR ds:[esi]
  405c25:	fcmovbe st,st(3)
  405c27:	add    esi,DWORD PTR [eax-0x29]
  405c2a:	mov    bh,0x70
  405c2c:	hlt    
  405c2d:	dec    edx
  405c2e:	je     0x405c88
  405c30:	and    dh,dh
  405c32:	pop    es
  405c33:	stos   DWORD PTR es:[edi],eax
  405c34:	pop    ecx
  405c35:	outs   dx,BYTE PTR ds:[esi]
  405c36:	push   ecx
  405c37:	add    bl,cl
  405c39:	jecxz  0x405c3b
  405c3b:	push   edi
  405c3c:	xor    BYTE PTR [ebp-0x5dfae86e],0xf3
  405c43:	ficomp DWORD PTR [esp+eax*8-0x2826f482]
  405c4a:	xlat   BYTE PTR ds:[ebx]
  405c4b:	call   0xd1df:0x5ce0a65
  405c52:	outs   dx,DWORD PTR ds:[esi]
  405c53:	push   esi
  405c54:	ret    
  405c55:	sbb    BYTE PTR [ebx-0x2a44fc02],dl
  405c5b:	rol    cl,cl
  405c5d:	repnz mov al,ds:0x4f66e428
  405c63:	mov    edi,0x56781f2f
  405c68:	repnz adc eax,0xc69976b0
  405c6e:	imul   edx,DWORD PTR cs:[ecx*2-0x2429ee77],0xeb99e841
  405c7a:	inc    ecx
  405c7b:	xor    al,0xba
  405c7d:	jns    0x405c41
  405c7f:	sbb    BYTE PTR [ecx-0x3ed8a351],0xac
  405c86:	dec    esi
  405c87:	pop    ss
  405c88:	add    bh,dl
  405c8a:	aad    0xde
  405c8c:	into   
  405c8d:	fcmovu st,st(1)
  405c8f:	cld    
  405c90:	jg     0x405cca
  405c92:	imul   ebx,DWORD PTR [ebp+esi*1-0x11141cd4],0x3b
  405c9a:	cld    
  405c9b:	iret   
  405c9c:	sahf   
  405c9d:	daa    
  405c9e:	mov    esp,0x4484dd87
  405ca3:	xor    al,0x36
  405ca5:	jecxz  0x405ce8
  405ca7:	enter  0x68be,0x16
  405cab:	mov    ecx,0x68acdca3
  405cb0:	fstp   QWORD PTR [ebx+0x32236d67]
  405cb6:	jge    0x405cd1
  405cb8:	pop    ebx
  405cb9:	fs cmp dl,dh
  405cbc:	dec    ecx
  405cbd:	jnp    0x405d21
  405cbf:	sbb    DWORD PTR [ebx-0x63f95c49],ebp
  405cc5:	inc    ebp
  405cc6:	dec    ecx
  405cc7:	sub    DWORD PTR [ecx-0x4e9d4141],edi
  405ccd:	aam    0xee
  405ccf:	inc    BYTE PTR [edi+esi*2+0x52fd60c1]
  405cd6:	into   
  405cd7:	shl    BYTE PTR [ebx],cl
  405cd9:	adc    bl,BYTE PTR [edi]
  405cdb:	push   ss
  405cdc:	test   al,0xa0
  405cde:	je     0x405c75
  405ce0:	imul   eax,DWORD PTR [esi-0x24815dbb],0xa0fef0a0
  405cea:	pop    ds
  405ceb:	inc    esi
  405cec:	cmp    al,0x3a
  405cee:	mov    edx,0xc766577c
  405cf3:	push   esp
  405cf4:	jmp    0x48d90a9f
  405cf9:	push   cs
  405cfa:	inc    esi
  405cfb:	push   ebp
  405cfc:	lods   al,BYTE PTR ds:[esi]
  405cfd:	pop    ds
  405cfe:	fsub   QWORD PTR [ebp-0x6c3698db]
  405d04:	cdq    
  405d05:	mov    ah,0x73
  405d07:	in     eax,dx
  405d08:	ds inc ebx
  405d0a:	rcl    DWORD PTR [edx],cl
  405d0c:	xlat   BYTE PTR ds:[ebx]
  405d0d:	loope  0x405d40
  405d0f:	xchg   edx,eax
  405d10:	jns    0x405cf5
  405d12:	and    eax,0x452a151c
  405d17:	lock fcmovb st,st(5)
  405d1a:	or     ebx,DWORD PTR [ebx-0x1e3ca9c]
  405d20:	jb     0x405d2d
  405d22:	or     edx,DWORD PTR [eax+0x3fcd9c4d]
  405d28:	je     0x405d97
  405d2a:	or     BYTE PTR [ebp+ecx*2+0x22576421],bh
  405d31:	(bad)  
  405d32:	out    0x8a,eax
  405d34:	test   al,0xd5
  405d36:	(bad)  
  405d37:	ficomp WORD PTR [ebx+ecx*8-0x63]
  405d3b:	popf   
  405d3c:	sbb    BYTE PTR [esi+0x2c],bl
  405d3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d40:	cs popa 
  405d42:	fdiv   QWORD PTR [ebx+ebx*1-0x32]
  405d46:	loop   0x405d45
  405d48:	retf   0x5022
  405d4b:	mov    bh,0x51
  405d4d:	mov    al,ds:0xccf1eaaf
  405d52:	imul   eax,DWORD PTR [esi-0x17],0x3
  405d56:	xchg   esp,eax
  405d57:	in     al,0xfe
  405d59:	adc    BYTE PTR [edi-0x5c],0x2
  405d5d:	add    al,0x43
  405d5f:	jb     0x405d5b
  405d61:	xchg   ebx,eax
  405d62:	adc    ch,0xc4
  405d65:	inc    ebx
  405d66:	jno    0x405d44
  405d68:	hlt    
  405d69:	out    dx,al
  405d6a:	xlat   BYTE PTR ds:[ebx]
  405d6b:	in     eax,dx
  405d6c:	inc    ebp
  405d6d:	sbb    DWORD PTR [ecx+0x6624623b],ebx
  405d73:	call   0xeccc:0x98fcf4af
  405d7a:	adc    eax,ecx
  405d7c:	push   edx
  405d7d:	and    al,0x6b
  405d7f:	sbb    BYTE PTR [edx+ecx*4+0x7bfbc662],bl
  405d86:	add    ebx,DWORD PTR [ebx-0x6f]
  405d89:	int3   
  405d8a:	jns    0x405de6
  405d8c:	outs   dx,BYTE PTR ds:[esi]
  405d8d:	adc    eax,0xd6bc8f50
  405d92:	test   bl,bl
  405d94:	test   al,0x2f
  405d96:	loope  0x405d63
  405d98:	mov    esp,0x2b190171
  405d9d:	in     al,0x2e
  405d9f:	gs xor eax,eax
  405da2:	(bad)  
  405da3:	jecxz  0x405da8
  405da5:	in     eax,0x5c
  405da7:	cmp    ah,BYTE PTR [edx-0x31]
  405daa:	jb     0x405da9
  405dac:	aad    0x86
  405dae:	cmp    eax,0xfaf3f9bb
  405db3:	xor    al,BYTE PTR [ebx-0x68]
  405db6:	aaa    
  405db7:	retf   0x553e
  405dba:	out    dx,al
  405dbb:	rcl    DWORD PTR [eax-0x67130d72],1
  405dc1:	fst    QWORD PTR [edi-0x2fa80625]
  405dc7:	daa    
  405dc8:	in     al,0xa7
  405dca:	or     DWORD PTR [ebx+0x53],0xffffff92
  405dce:	ret    
  405dcf:	sbb    BYTE PTR [edi],0xbd
  405dd2:	out    0xcb,eax
  405dd4:	addr16 lock repz pushf 
  405dd8:	dec    ebx
  405dd9:	inc    edx
  405dda:	xchg   ebp,eax
  405ddb:	stc    
  405ddc:	mov    ch,0xcb
  405dde:	sub    ecx,DWORD PTR [edx]
  405de0:	pop    esp
  405de1:	aas    
  405de2:	shl    edi,1
  405de4:	dec    edx
  405de5:	jecxz  0x405dfc
  405de7:	in     al,0x56
  405de9:	ret    0x718f
  405dec:	lods   al,BYTE PTR ds:[esi]
  405ded:	mov    ecx,?
  405def:	in     eax,0x37
  405df1:	xor    ch,BYTE PTR [eax-0xeea5d9f]
  405df7:	sbb    BYTE PTR [esi-0x12b1bb10],al
  405dfd:	sbb    ebp,DWORD PTR [esi+0xc951433]
  405e03:	push   0xffffffea
  405e05:	mov    ecx,0x20e2ed78
  405e0a:	mov    esp,0x4c75b541
  405e0f:	lds    esi,FWORD PTR [eax+0x6f4811c5]
  405e15:	jle    0x405df4
  405e17:	or     ah,dh
  405e19:	or     BYTE PTR [ebp-0x62],bl
  405e1c:	sti    
  405e1d:	cld    
  405e1e:	aas    
  405e1f:	in     eax,dx
  405e20:	pop    ss
  405e21:	loopne 0x405ddd
  405e23:	push   ebp
  405e24:	inc    eax
  405e25:	sub    DWORD PTR ds:0xc392aca0,eax
  405e2b:	enter  0xe689,0x79
  405e2f:	test   BYTE PTR [ecx-0x7b],0x25
  405e33:	test   al,0x6e
  405e35:	xchg   ecx,eax
  405e36:	cdq    
  405e37:	mov    bl,0x34
  405e39:	jle    0x405e17
  405e3b:	mov    eax,ds:0x8fe130c6
  405e40:	adc    eax,0x210d14db
  405e45:	in     eax,dx
  405e46:	outs   dx,BYTE PTR ds:[esi]
  405e47:	adc    eax,0xda839fe4
  405e4c:	cli    
  405e4d:	call   0xb605:0xd8421c8f
  405e54:	sti    
  405e55:	inc    edi
  405e56:	addr16 daa 
  405e58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e59:	aaa    
  405e5a:	imul   esi,DWORD PTR ss:[edi],0xffffffa3
  405e5e:	add    DWORD PTR [ebx+ecx*4+0x4e],ebp
  405e62:	add    al,0x8b
  405e64:	enter  0xe1c1,0x1e
  405e68:	xor    ecx,0x80000000
  405e6e:	mov    DWORD PTR [ebp-0x64],ecx
  405e71:	mov    ecx,DWORD PTR [esi]
  405e73:	mov    edx,DWORD PTR [esi+0x4]
  405e76:	jmp    0x406217
  405e7b:	pusha  
  405e7c:	adc    bh,BYTE PTR ds:0x60b2b35d
  405e82:	adc    al,0xa6
  405e84:	pop    es
  405e85:	fnstsw WORD PTR ds:[eax+0x4d]
  405e89:	jmp    0x405e6e
  405e8b:	mov    esi,0xbdbebe2d
  405e90:	les    edi,FWORD PTR [esi+0x73366ebe]
  405e96:	xchg   esp,eax
  405e97:	clc    
  405e98:	push   cs
  405e99:	and    al,0x80
  405e9b:	ret    
  405e9c:	push   ecx
  405e9d:	outs   dx,BYTE PTR ds:[esi]
  405e9e:	out    0x5e,eax
  405ea0:	sub    BYTE PTR [ebx],ah
  405ea2:	std    
  405ea3:	ins    BYTE PTR es:[edi],dx
  405ea4:	add    DWORD PTR [ebx+edi*1+0x61f6e3ef],edx
  405eab:	imul   ecx,DWORD PTR [edx+ebp*1-0x11],0x2a97931a
  405eb3:	inc    edx
  405eb4:	dec    edx
  405eb5:	xor    dh,ch
  405eb7:	stos   DWORD PTR es:[edi],eax
  405eb8:	fdiv   QWORD PTR [ecx]
  405eba:	loop   0x405f26
  405ebc:	jae    0x405f27
  405ebe:	scas   eax,DWORD PTR es:[edi]
  405ebf:	mov    al,ds:0xc6f0f4ed
  405ec4:	outs   dx,DWORD PTR ds:[esi]
  405ec5:	push   ecx
  405ec6:	(bad)  
  405ec7:	mov    eax,ds:0x80bca92
  405ecc:	jmp    0x405e6e
  405ece:	ret    0x6e1e
  405ed1:	and    eax,0x6c24d356
  405ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ed7:	mov    bl,0x84
  405ed9:	or     ebp,DWORD PTR [ecx+eiz*4]
  405edc:	lahf   
  405edd:	xchg   DWORD PTR ds:[edi-0x72],ebx
  405ee1:	xchg   edi,eax
  405ee2:	repz iret 
  405ee4:	dec    ecx
  405ee5:	sub    al,0x98
  405ee7:	shl    ah,cl
  405ee9:	(bad)  
  405eea:	mov    ah,0x32
  405eec:	(bad)  
  405eed:	and    eax,0xefa1657c
  405ef2:	dec    ecx
  405ef3:	push   eax
  405ef4:	dec    edi
  405ef5:	dec    edx
  405ef6:	pop    edi
  405ef7:	and    ch,BYTE PTR [ebx]
  405ef9:	rcr    DWORD PTR [edi-0x7c106248],0xa2
  405f00:	mov    eax,0x8e7c0dca
  405f05:	or     bl,BYTE PTR [eax]
  405f07:	ret    
  405f08:	mov    dh,0x4b
  405f0a:	adc    DWORD PTR [esi],edi
  405f0c:	mov    WORD PTR [eax+0x64],?
  405f0f:	in     al,dx
  405f10:	inc    edi
  405f11:	cmp    DWORD PTR [ebp+0x7e],0xbb5ad86f
  405f18:	xlat   BYTE PTR ds:[ebx]
  405f19:	and    ebx,DWORD PTR [edi]
  405f1b:	xchg   esp,eax
  405f1c:	sbb    eax,0xd066e92f
  405f21:	inc    eax
  405f22:	xor    BYTE PTR [edi],dh
  405f24:	inc    esi
  405f25:	mov    al,ds:0x359ba1fb
  405f2a:	and    eax,0xef18bd7b
  405f2f:	mov    esi,0x44069c12
  405f34:	or     al,0xd6
  405f36:	adc    BYTE PTR [ebx],bh
  405f38:	fst    st(2)
  405f3a:	dec    ebp
  405f3b:	lock jne 0x405f78
  405f3e:	jmp    0x231f6e76
  405f43:	loop   0x405eda
  405f45:	pop    edx
  405f46:	je     0x405fbc
  405f48:	ror    BYTE PTR [edi+0x10],0x36
  405f4c:	mov    al,0x33
  405f4e:	fwait
  405f4f:	scas   eax,DWORD PTR es:[edi]
  405f50:	ins    BYTE PTR es:[edi],dx
  405f51:	(bad)  
  405f53:	dec    esi
  405f54:	mov    bh,0x6d
  405f56:	pop    ds
  405f57:	lea    eax,[edx+0x397b735c]
  405f5d:	imul   ebx,DWORD PTR [esp+eax*1-0x358be90d],0xffffffc6
  405f65:	mov    ds:0xf3eaa605,eax
  405f6a:	xor    eax,0x2ca21217
  405f6f:	fistp  WORD PTR ds:0x28670236
  405f75:	sbb    ah,dh
  405f77:	ja     0x405fe4
  405f79:	mov    dh,0x33
  405f7b:	pop    ss
  405f7c:	push   ebp
  405f7d:	repnz xor dl,BYTE PTR [edi+esi*1]
  405f81:	add    al,0x9a
  405f83:	xchg   DWORD PTR [edi-0x1e58aba2],eax
  405f89:	jmp    0x63aa:0xd4808b9e
  405f90:	fisub  WORD PTR [ecx]
  405f92:	sbb    al,0xa8
  405f94:	cmc    
  405f95:	xchg   edx,eax
  405f96:	mov    ah,BYTE PTR [esi+0x7401ef61]
  405f9c:	pop    esp
  405f9d:	mov    dh,0xe4
  405f9f:	ret    0x5526
  405fa2:	mov    eax,ds:0xee439ff1
  405fa7:	mov    ebp,0xb4d6c282
  405fac:	or     al,0xe6
  405fae:	adc    eax,0x41215a46
  405fb3:	xchg   edx,eax
  405fb4:	cmp    al,0xd6
  405fb6:	jl     0x405fc3
  405fb8:	cmp    ebp,DWORD PTR [edi]
  405fba:	test   eax,0x60c71e96
  405fbf:	stc    
  405fc0:	or     BYTE PTR [edi+0x1d8a12dd],bh
  405fc6:	xchg   esi,eax
  405fc7:	pop    ecx
  405fc8:	aam    0x45
  405fca:	jecxz  0x405fe9
  405fcc:	int3   
  405fcd:	mov    ecx,0x98064fda
  405fd2:	call   FWORD PTR [edx+0x6cb72278]
  405fd8:	sub    eax,0x59de656b
  405fdd:	aam    0x5f
  405fdf:	(bad)  
  405fe1:	daa    
  405fe2:	inc    ebp
  405fe3:	pop    esp
  405fe4:	pop    es
  405fe5:	xchg   esi,eax
  405fe6:	push   ebp
  405fe7:	sbb    DWORD PTR [eax+0x7a1c4544],ecx
  405fed:	pop    ebp
  405fee:	dec    ebp
  405fef:	js     0x405fe6
  405ff1:	(bad)  
  405ff2:	sub    al,0xb7
  405ff4:	ja     0x405f85
  405ff6:	add    BYTE PTR [eax+0x22],al
  405ff9:	arpl   WORD PTR [ebx],ax
  405ffb:	ins    DWORD PTR es:[edi],dx
  405ffc:	dec    ebx
  405ffd:	jp     0x405f8a
  405fff:	mov    esi,0xb992a17e
  406004:	jnp    0x406023
  406006:	sbb    BYTE PTR [esp+eiz*4-0x1d0bbc66],0xb0
  40600e:	neg    ebp
  406010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406011:	sub    DWORD PTR [esi],0x6fdcf70a
  406017:	sbb    al,0xed
  406019:	and    eax,0xf4ea4521
  40601e:	mov    ch,BYTE PTR [eax]
  406020:	and    BYTE PTR [ebx],bh
  406022:	or     edx,DWORD PTR [edx]
  406024:	mov    edi,0xbf7274db
  406029:	rol    dh,1
  40602b:	add    DWORD PTR [esp+esi*4+0x34151f4a],edx
  406032:	leave  
  406033:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406034:	fnsetpm(287 only) 
  406036:	scas   al,BYTE PTR es:[edi]
  406037:	shl    BYTE PTR [esi+0x4],1
  40603a:	(bad)  
  40603c:	or     al,0x69
  40603e:	inc    esi
  40603f:	ds add eax,0xd2a6c2d3
  406045:	pop    ebp
  406046:	add    al,0x85
  406048:	add    BYTE PTR ss:[eax+0x3877b859],ch
  40604f:	mov    ch,0xf7
  406051:	leave  
  406052:	pop    esp
  406053:	icebp  
  406054:	mov    al,ds:0xe204b7be
  406059:	mov    ebx,0x41606a26
  40605e:	dec    esp
  40605f:	les    edi,FWORD PTR [edx+0x3d]
  406062:	cmp    BYTE PTR [ebp+esi*4-0x56],dh
  406066:	ins    DWORD PTR es:[edi],dx
  406067:	dec    esi
  406068:	mov    al,ds:0x8ce19413
  40606d:	sbb    bl,BYTE PTR [ebx-0x14]
  406070:	out    0xe6,al
  406072:	popa   
  406073:	test   al,0xc9
  406075:	jne    0x4060c9
  406077:	test   al,0x95
  406079:	out    0x65,eax
  40607b:	and    edx,DWORD PTR ds:0x955ee106
  406081:	cmp    al,0xd
  406083:	jp     0x4060e4
  406085:	push   ecx
  406086:	xchg   esi,eax
  406087:	xchg   esp,eax
  406088:	lea    edx,[edx+0x7a73f282]
  40608e:	rol    esi,cl
  406090:	dec    eax
  406091:	mov    gs,WORD PTR [ebx-0x77]
  406094:	lds    edi,FWORD PTR [esi+0x57]
  406097:	arpl   WORD PTR [esi+0x3c],sp
  40609a:	imul   ebx,edi,0xb5eb7851
  4060a0:	jmp    0x4e56ae95
  4060a5:	mov    ch,ah
  4060a7:	lds    edi,FWORD PTR ds:0xf9e62e79
  4060ad:	pop    ebx
  4060ae:	arpl   WORD PTR [ecx+esi*8-0x63ead0ce],dx
  4060b5:	mov    dl,0x8a
  4060b7:	in     al,dx
  4060b8:	addr16 loopne 0x40609f
  4060bb:	xchg   ebp,eax
  4060bc:	sub    eax,0x449ba525
  4060c1:	push   eax
  4060c2:	add    BYTE PTR [ecx+eiz*1-0x5efeaa44],ch
  4060c9:	pop    edi
  4060ca:	and    eax,DWORD PTR ds:0x4d24205e
  4060d0:	jo     0x40612b
  4060d2:	in     al,dx
  4060d3:	sbb    eax,0xa57d964
  4060d8:	jmp    0x6648:0x75c071be
  4060df:	xor    edi,0x7a
  4060e2:	mov    ecx,0xdf63b20d
  4060e7:	or     BYTE PTR gs:[ebx+0x78],dl
  4060eb:	sbb    ebp,DWORD PTR [bx+di-0x6c]
  4060ef:	cs push ebp
  4060f1:	(bad)  
  4060f2:	push   cs
  4060f3:	adc    al,0x4b
  4060f5:	out    0xdd,eax
  4060f7:	aad    0xfb
  4060f9:	jbe    0x406155
  4060fb:	retf   0x935a
  4060fe:	fldpi  
  406100:	mov    dh,BYTE PTR [edi-0x1452e750]
  406106:	and    BYTE PTR ds:0x7d99f63e,0x22
  40610d:	or     DWORD PTR [ebp+ebp*4-0x49],edi
  406111:	daa    
  406112:	cmp    BYTE PTR [edi],ah
  406114:	gs (bad) 
  406116:	fld    DWORD PTR [edi-0x3b5d0d32]
  40611c:	cs clc 
  40611e:	popf   
  40611f:	sahf   
  406120:	clc    
  406121:	push   0xc
  406123:	inc    esp
  406124:	fistp  WORD PTR [ecx+0x8]
  406127:	add    eax,0x332676b4
  40612c:	loopne 0x40613d
  40612e:	outs   dx,DWORD PTR ds:[esi]
  40612f:	ret    0x50ae
  406132:	(bad)  
  406133:	call   0x38b5:0xcc4c0f5d
  40613a:	int    0x29
  40613c:	mov    BYTE PTR [ecx+eiz*4+0x666c1680],ch
  406143:	out    0x9f,al
  406145:	stos   DWORD PTR es:[edi],eax
  406146:	and    eax,0x6e824fe0
  40614b:	dec    ecx
  40614c:	scas   al,BYTE PTR es:[edi]
  40614d:	stos   BYTE PTR es:[edi],al
  40614e:	xor    al,0xca
  406150:	mov    ch,0xd1
  406152:	clc    
  406153:	add    al,0x3f
  406155:	jecxz  0x4060fb
  406157:	inc    eax
  406158:	pop    ebx
  406159:	test   BYTE PTR [edx+0xc],al
  40615c:	cwde   
  40615d:	xchg   BYTE PTR [esi+0x77],ch
  406160:	fistp  QWORD PTR [esi+ebp*4+0x4a]
  406164:	hlt    
  406165:	retf   0x99d8
  406168:	jecxz  0x4061de
  40616a:	or     BYTE PTR [ebx+0x73],ah
  40616d:	jle    0x4061ba
  40616f:	fild   WORD PTR [esi+0x6878af5d]
  406175:	sub    DWORD PTR [edi+0x2a86c2a5],ebp
  40617b:	loopne 0x40619f
  40617d:	repz xor eax,0x14014089
  406183:	push   edi
  406184:	mov    ch,0x5a
  406186:	jge    0x4061df
  406188:	lahf   
  406189:	inc    edi
  40618a:	jmp    0x406189
  40618c:	jmp    0x1b6a4c2f
  406191:	idiv   dl
  406193:	leave  
  406194:	push   ds
  406195:	push   ebp
  406196:	jmp    0x29710b47
  40619b:	bound  esi,QWORD PTR [ecx+edx*2-0x52dd830b]
  4061a2:	sub    al,0x2f
  4061a4:	jo     0x406199
  4061a6:	stc    
  4061a7:	jns    0x40612b
  4061a9:	enter  0x9038,0x7a
  4061ad:	fdiv   DWORD PTR [edx]
  4061af:	gs push ebp
  4061b1:	xor    BYTE PTR [eax+0x78],0x4a
  4061b5:	ss sbb eax,0x655b72ad
  4061bb:	jecxz  0x406222
  4061bd:	pop    ss
  4061be:	(bad)  
  4061bf:	scas   al,BYTE PTR es:[edi]
  4061c0:	and    BYTE PTR [ecx-0x7b],0xd9
  4061c4:	cli    
  4061c5:	loop   0x4061d5
  4061c7:	int    0xc0
  4061c9:	out    dx,eax
  4061ca:	jmp    0x4061ae
  4061cc:	ret    
  4061cd:	push   ds
  4061ce:	dec    eax
  4061cf:	mov    ?,eax
  4061d1:	in     eax,0x51
  4061d3:	sbb    al,0x60
  4061d5:	mov    ebx,0xc3d55a01
  4061da:	sbb    ecx,DWORD PTR [esi+0x492a562a]
  4061e0:	(bad)  
  4061e1:	in     eax,dx
  4061e2:	ins    BYTE PTR es:[edi],dx
  4061e3:	iret   
  4061e4:	xor    DWORD PTR [ecx-0x693a31cc],esp
  4061ea:	fnstenv [esi]
  4061ec:	pop    DWORD PTR [ecx]
  4061ee:	call   0xb8777c3b
  4061f3:	add    DWORD PTR [edx+0x1d],esp
  4061f6:	fdiv   st(6),st
  4061f8:	jno    0x406269
  4061fa:	sub    al,0x35
  4061fc:	std    
  4061fd:	pop    ss
  4061fe:	inc    esi
  4061ff:	lock fs pop eax
  406202:	jbe    0x4061ee
  406204:	push   esi
  406205:	int    0xf3
  406207:	sahf   
  406208:	sar    ecx,cl
  40620a:	mov    BYTE PTR [ebx+eax*1-0x6332491d],al
  406211:	pushf  
  406212:	hlt    
  406213:	mov    al,ds:0x817093fc
  406218:	bnd call 0x81dc8da8
  40621e:	icebp  
  40621f:	ja     0x4061d6
  406221:	jns    0x4061ee
  406223:	shrd   ecx,edx,0x2
  406227:	shr    edx,0x2
  40622a:	or     edx,DWORD PTR [ebp-0x64]
  40622d:	xor    eax,eax
  40622f:	or     ecx,eax
  406231:	mov    eax,DWORD PTR [ebx]
  406233:	mov    DWORD PTR [ebp-0x2c],edx
  406236:	mov    edx,DWORD PTR [ebx+0x4]
  406239:	mov    edx,eax
  40623b:	xor    eax,eax
  40623d:	shl    edx,0x1e
  406240:	xor    edx,0x80000000
  406246:	mov    DWORD PTR [ebp-0x70],eax
  406249:	mov    eax,DWORD PTR [ebx]
  40624b:	mov    DWORD PTR [ebp-0x6c],edx
  40624e:	mov    edx,DWORD PTR [ebx+0x4]
  406251:	xor    eax,0xcb79b577
  406256:	xor    edx,0x9c2b8ae8
  40625c:	shrd   eax,edx,0x2
  406260:	or     eax,DWORD PTR [ebp-0x70]
  406263:	shr    edx,0x2
  406266:	mov    DWORD PTR [ebp-0x38],eax
  406269:	mov    eax,edx
  40626b:	or     eax,DWORD PTR [ebp-0x6c]
  40626e:	mov    DWORD PTR [ebp-0x5c],edx
  406271:	cmp    ecx,DWORD PTR [ebp-0x38]
  406274:	jne    0x405a82
  40627a:	cmp    DWORD PTR [ebp-0x2c],eax
  40627d:	je     0x408bb3
  406283:	jmp    0x405a82
  406288:	mov    eax,DWORD PTR [esi]
  40628a:	mov    ecx,DWORD PTR [esi+0x4]
  40628d:	mov    ecx,eax
  40628f:	shl    ecx,0x1e
  406292:	xor    ecx,0x80000000
  406298:	mov    DWORD PTR [ebp+0x14],ecx
  40629b:	mov    ecx,DWORD PTR [esi]
  40629d:	mov    edx,DWORD PTR [esi+0x4]
  4062a0:	xor    ecx,0xcb79b577
  4062a6:	xor    edx,0x9c2b8ae8
  4062ac:	shrd   ecx,edx,0x2
  4062b0:	xor    eax,eax
  4062b2:	or     ecx,eax
  4062b4:	mov    eax,DWORD PTR [ebx]
  4062b6:	mov    DWORD PTR [ebp-0x68],ecx
  4062b9:	mov    ecx,DWORD PTR [ebx+0x4]
  4062bc:	mov    ecx,eax
  4062be:	xor    eax,eax
  4062c0:	shr    edx,0x2
  4062c3:	or     edx,DWORD PTR [ebp+0x14]
  4062c6:	mov    DWORD PTR [ebp+0x10],eax
  4062c9:	mov    eax,DWORD PTR [ebx]
  4062cb:	shl    ecx,0x1e
  4062ce:	xor    ecx,0x80000000
  4062d4:	mov    DWORD PTR [ebp-0x64],edx
  4062d7:	jmp    0x406678
  4062dc:	aas    
  4062dd:	jne    0x40629e
  4062df:	arpl   ax,di
  4062e1:	jl     0x406347
  4062e3:	jns    0x40632d
  4062e5:	das    
  4062e6:	inc    esi
  4062e7:	xchg   edx,eax
  4062e8:	cld    
  4062e9:	add    eax,0x33bddd42
  4062ee:	mov    esi,0xbec4bdbe
  4062f3:	mov    esi,0x8adad85e
  4062f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062f9:	mov    ch,0xfa
  4062fb:	jge    0x4062ed
  4062fd:	and    ah,ah
  4062ff:	ds std 
  406301:	dec    ebp
  406302:	push   edx
  406303:	cmp    eax,0xec6fc0e1
  406308:	mov    DWORD PTR [ecx+eax*4+0x40],esp
  40630c:	aaa    
  40630d:	jl     0x406340
  40630f:	mov    esi,esp
  406311:	ss pop edi
  406313:	in     al,dx
  406314:	aas    
  406315:	cmp    DWORD PTR [ebx],ebp
  406317:	inc    esi
  406318:	jo     0x4062ff
  40631a:	fistp  WORD PTR [edi+0x244e184a]
  406320:	pop    es
  406321:	imul   BYTE PTR [edx+edi*2+0x67e4155e]
  406328:	repnz mov BYTE PTR [esi+0x17],dh
  40632c:	nop
  40632d:	jecxz  0x40637a
  40632f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406330:	lock jmp 0x9fb1:0xfdadbeca
  406338:	inc    ecx
  406339:	sbb    dl,ah
  40633b:	mov    cl,0x24
  40633d:	mul    BYTE PTR [esp+ebp*1-0x669e5545]
  406344:	mov    cl,0x3c
  406346:	cmp    BYTE PTR [ebx-0x79],al
  406349:	out    dx,eax
  40634a:	sbb    cl,BYTE PTR [ecx+ebx*2-0x6b]
  40634e:	mov    esp,0x70541499
  406353:	lds    esp,FWORD PTR [esi]
  406355:	cmc    
  406356:	and    ebx,eax
  406358:	sar    edi,1
  40635a:	rol    DWORD PTR [ecx+0x7477439c],0xe0
  406361:	sub    al,0xae
  406363:	sub    dh,bh
  406365:	push   edx
  406366:	popa   
  406367:	jns    0x406359
  406369:	ja     0x4063c9
  40636b:	or     BYTE PTR [edx+ecx*4],dl
  40636e:	push   esp
  40636f:	ret    
  406370:	adc    ch,BYTE PTR [ebx]
  406372:	out    dx,al
  406373:	inc    ebx
  406374:	add    al,0xec
  406376:	popa   
  406377:	stc    
  406378:	ins    BYTE PTR es:[edi],dx
  406379:	lods   eax,DWORD PTR ds:[esi]
  40637a:	jp     0x4063f8
  40637c:	fist   WORD PTR [eax+0x3ffdd58d]
  406382:	xchg   edi,eax
  406383:	mul    edi
  406385:	fisttp QWORD PTR [ebx]
  406387:	cmp    cl,0x6d
  40638a:	fs sbb al,ch
  40638d:	test   eax,0x61340e19
  406392:	xor    edx,esp
  406394:	(bad)
  406397:	xor    DWORD PTR [ebp+0x3b33832d],edx
  40639d:	push   ds
  40639e:	xchg   ebp,eax
  40639f:	pop    ebx
  4063a0:	adc    cl,BYTE PTR [esi-0x36]
  4063a3:	(bad)  
  4063a4:	fstp   st(6)
  4063a6:	ja     0x40635a
  4063a8:	and    al,0xb8
  4063aa:	iret   
  4063ab:	mov    esp,0x6fa0c74a
  4063b0:	pop    esp
  4063b1:	ret    0xbd19
  4063b4:	push   ecx
  4063b5:	test   DWORD PTR [ecx-0x6e],ebx
  4063b8:	add    DWORD PTR [ecx+0x5779b6d0],esp
  4063be:	push   es
  4063bf:	or     edi,DWORD PTR [ecx+0x2c3c9330]
  4063c5:	xchg   esi,eax
  4063c6:	pop    ebp
  4063c7:	mov    eax,ds:0x221ba092
  4063cc:	fiadd  WORD PTR ds:0x56a1b059
  4063d2:	clc    
  4063d3:	ror    BYTE PTR [edx+0x5a],1
  4063d6:	or     BYTE PTR [esi],bh
  4063d8:	sbb    edi,esi
  4063da:	add    DWORD PTR [edx+0x35],esp
  4063dd:	iret   
  4063de:	test   al,0x4f
  4063e0:	or     DWORD PTR ds:0xba84079d,eax
  4063e6:	fldenv [ecx+0x2e]
  4063e9:	or     bl,bh
  4063eb:	xchg   ebp,eax
  4063ec:	xlat   BYTE PTR ds:[ebx]
  4063ed:	add    DWORD PTR [edi+edi*1],esp
  4063f0:	xor    BYTE PTR [ecx+0x6ae33f48],dh
  4063f6:	xchg   ch,cl
  4063f8:	mov    ecx,DWORD PTR [edx-0x11e00320]
  4063fe:	ds jb  0x40645b
  406401:	mov    eax,ds:0x7dbb9316
  406406:	outs   dx,BYTE PTR ds:[esi]
  406407:	push   ecx
  406408:	push   ss
  406409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40640a:	xchg   edi,eax
  40640b:	pop    esp
  40640c:	call   0x5d77:0x54b65d99
  406413:	shr    BYTE PTR [edi-0x26],1
  406416:	ret    0x9e0
  406419:	loopne 0x406429
  40641b:	inc    eax
  40641c:	fisubr WORD PTR [ebp-0x26]
  40641f:	xchg   ebx,eax
  406420:	sub    eax,edi
  406422:	sub    dh,0x45
  406425:	xor    edi,esp
  406427:	xchg   ecx,eax
  406428:	sti    
  406429:	mov    ebp,0xf422a2f2
  40642e:	lahf   
  40642f:	jbe    0x40649b
  406431:	cmp    DWORD PTR [edx+0x2c],edx
  406434:	mov    dh,0xd3
  406436:	jns    0x406465
  406438:	xchg   edx,eax
  406439:	cmp    BYTE PTR [eax+0x646830e4],0x84
  406440:	shl    DWORD PTR [edx-0x4],1
  406443:	daa    
  406444:	cdq    
  406445:	sbb    eax,0xc8501a75
  40644a:	lods   al,BYTE PTR ds:[esi]
  40644b:	shl    DWORD PTR [edi],0xff
  40644e:	mov    ch,0xde
  406450:	jl     0x406419
  406452:	pushf  
  406453:	mov    ebx,0x42f27a7d
  406458:	stos   BYTE PTR es:[edi],al
  406459:	dec    esi
  40645a:	mov    ebp,edi
  40645c:	and    al,0x8a
  40645e:	lds    ecx,FWORD PTR [edx-0x1d91f07f]
  406464:	test   eax,0x903bc4f
  406469:	xchg   esi,eax
  40646a:	xor    dh,BYTE PTR ds:0xfa1a5cd8
  406470:	fstp   QWORD PTR [ecx]
  406472:	pop    eax
  406473:	lahf   
  406474:	push   0xffffffa0
  406476:	mov    gs,WORD PTR [esp+eiz*4-0x4d2f371a]
  40647d:	outs   dx,DWORD PTR ds:[esi]
  40647e:	jns    0x40644b
  406480:	in     al,0x6e
  406482:	xor    al,0xb8
  406484:	mov    al,bh
  406486:	adc    esi,DWORD PTR [edx]
  406488:	sbb    DWORD PTR [esi+0x6],edx
  40648b:	jmp    0xa9b6:0x133bb582
  406492:	(bad)  
  406493:	mov    edx,0xb8783112
  406498:	lock aas 
  40649a:	imul   ecx,DWORD PTR [eax],0xffffffff
  40649d:	jmp    0x406441
  40649f:	es inc edi
  4064a1:	add    dl,dh
  4064a3:	mov    dh,0x50
  4064a5:	loopne 0x4064d5
  4064a7:	retf   0x98a8
  4064aa:	mov    DWORD PTR [ecx],ebp
  4064ac:	xchg   ebp,eax
  4064ad:	call   0xc2824087
  4064b2:	cmp    esp,ecx
  4064b4:	jo     0x406450
  4064b6:	ss je  0x4064fc
  4064b9:	sub    ax,0x98ec
  4064bd:	(bad)  
  4064be:	or     edi,DWORD PTR [edi+0x6a1fac36]
  4064c4:	(bad)  
  4064c5:	hlt    
  4064c6:	stos   BYTE PTR es:[edi],al
  4064c7:	jecxz  0x406458
  4064c9:	mov    ds:0x4d2daac3,eax
  4064ce:	dec    esp
  4064cf:	int    0x4f
  4064d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064d2:	cwde   
  4064d3:	jmp    0x4064a2
  4064d5:	gs sbb cl,dl
  4064d8:	fst    DWORD PTR [ebx]
  4064da:	push   esi
  4064db:	cli    
  4064dc:	shr    DWORD PTR [esi],1
  4064de:	pminub mm6,QWORD PTR [ebx-0x78b011d]
  4064e5:	pop    ebp
  4064e6:	add    eax,0x9506077d
  4064eb:	leave  
  4064ec:	add    ebp,DWORD PTR [edi+0x673f73c]
  4064f2:	and    eax,0xc25ce507
  4064f7:	mov    al,0x4a
  4064f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064fa:	push   cs
  4064fb:	retf   0xc0a2
  4064fe:	or     BYTE PTR [eax-0x199e9ae4],ch
  406504:	out    dx,al
  406505:	int    0x86
  406507:	xchg   esi,eax
  406508:	jnp    0x4064ab
  40650a:	xor    DWORD PTR [esi+ebx*8],edi
  40650d:	mov    al,0x15
  40650f:	xor    ch,BYTE PTR [edx]
  406511:	and    al,0x64
  406513:	dec    ebx
  406514:	aas    
  406515:	dec    eax
  406516:	and    BYTE PTR gs:[ebx],bl
  406519:	mov    BYTE PTR [ebx-0x2123e61a],ah
  40651f:	ficomp WORD PTR [esp+ebp*1-0x7e]
  406523:	(bad)  
  406525:	dec    ebx
  406526:	and    ecx,DWORD PTR [edi+ebp*4]
  406529:	les    edx,FWORD PTR [edx+0x7f365e65]
  40652f:	xchg   esi,eax
  406530:	test   eax,0x3119d214
  406535:	pusha  
  406536:	jmp    0x4064df
  406538:	xchg   BYTE PTR [edx-0x39],dl
  40653b:	mov    BYTE PTR [eax+0x2d],0xac
  40653f:	test   DWORD PTR [esi],0x95ffb3eb
  406545:	fwait
  406546:	(bad)
  40654a:	retf   0x67a2
  40654d:	leave  
  40654e:	xchg   edi,eax
  40654f:	xor    BYTE PTR [ecx],0x4d
  406552:	adc    al,0x28
  406554:	mov    al,0x9a
  406556:	xchg   esp,eax
  406557:	inc    edx
  406558:	xor    eax,0x607118fe
  40655d:	ret    0x1cba
  406560:	out    dx,al
  406561:	mov    fs,WORD PTR [ecx-0x4acaad23]
  406567:	pop    ebx
  406568:	repnz sbb DWORD PTR [ebx+0x6a9928d6],ebx
  40656f:	(bad)  
  406570:	scas   al,BYTE PTR es:[edi]
  406571:	call   0x31a3:0x3ad0102
  406578:	mov    ds:0x78479b1,al
  40657d:	scas   eax,DWORD PTR es:[edi]
  40657e:	cmp    cl,ah
  406580:	adc    eax,0xb8f1bb4d
  406585:	out    dx,al
  406586:	mov    dl,BYTE PTR [esi]
  406588:	or     DWORD PTR [esi],0xe9a92815
  40658e:	out    0xe1,eax
  406590:	push   es
  406591:	and    esi,DWORD PTR [ebx-0x5e12f87e]
  406597:	mov    ebx,0x1ca5102b
  40659c:	(bad)  
  40659d:	pop    ebp
  40659e:	arpl   WORD PTR ds:0xcdd965ce,di
  4065a4:	xchg   ecx,eax
  4065a5:	mov    ecx,DWORD PTR [esi]
  4065a7:	pop    edx
  4065a8:	push   ebp
  4065a9:	or     edi,DWORD PTR [edx]
  4065ab:	clc    
  4065ac:	jo     0x406563
  4065ae:	mov    WORD PTR [ebp-0x4e2de695],?
  4065b4:	leave  
  4065b5:	rcr    BYTE PTR [eax],1
  4065b7:	xchg   ecx,eax
  4065b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065b9:	aad    0x38
  4065bb:	cdq    
  4065bc:	lea    edi,[edx-0x5e891297]
  4065c2:	cwde   
  4065c3:	nop
  4065c4:	outs   dx,BYTE PTR ds:[esi]
  4065c5:	test   eax,0x35debd02
  4065ca:	(bad)
  4065cd:	xor    ebp,edi
  4065cf:	dec    esi
  4065d0:	mov    ch,0xd5
  4065d2:	jmp    0x8f4a:0x1c952bb3
  4065d9:	xor    DWORD PTR [ebp-0x6123d791],ebp
  4065df:	push   esp
  4065e0:	and    DWORD PTR [esi],eax
  4065e2:	xchg   edi,eax
  4065e3:	sbb    al,0xf0
  4065e5:	in     eax,dx
  4065e6:	(bad)  
  4065e7:	push   edx
  4065e8:	xor    BYTE PTR [ecx-0x75],0xe8
  4065ec:	or     eax,0x2e8005
  4065f1:	js     0x406574
  4065f3:	scas   al,BYTE PTR es:[edi]
  4065f4:	retf   0x843f
  4065f7:	pop    ebp
  4065f8:	jo     0x406653
  4065fa:	sub    DWORD PTR [edx-0x2c6c1285],0x8
  406601:	jp     0x4065bf
  406603:	pop    ebx
  406604:	sar    DWORD PTR [edi+0x2],cl
  406607:	push   ebp
  406608:	inc    edi
  406609:	sub    BYTE PTR [ebp-0xb],ah
  40660c:	xchg   BYTE PTR [ebx],ch
  40660e:	mov    ebx,0x65d205cb
  406613:	shl    DWORD PTR [ecx-0x2f5b99dd],1
  406619:	dec    ecx
  40661a:	xchg   esp,eax
  40661b:	or     eax,0xce5a08da
  406620:	mov    ds:0xe1103fd5,al
  406625:	pop    edi
  406626:	xlat   BYTE PTR ds:[ebx]
  406627:	repnz push cs
  406629:	sbb    al,0x5
  40662b:	pop    ss
  40662c:	mov    ah,bl
  40662e:	jge    0x40663f
  406630:	aaa    
  406631:	pop    esi
  406632:	mov    eax,ds:0x9238871c
  406637:	scas   eax,DWORD PTR es:[edi]
  406638:	mov    esp,0x48b40335
  40663d:	and    DWORD PTR [edi],0x39f5c5e7
  406643:	rcl    DWORD PTR [edi+0x13c4c8ca],0x98
  40664a:	and    eax,0xceca0209
  40664f:	add    al,0x8d
  406651:	inc    ebx
  406652:	xor    al,BYTE PTR [eax+0x56]
  406655:	inc    esi
  406656:	pop    edi
  406657:	xor    eax,DWORD PTR [ebx-0x5a9bd33e]
  40665d:	jns    0x406695
  40665f:	mov    bh,0x56
  406661:	fild   DWORD PTR ds:0x5ec6aedf
  406667:	mov    dl,0x5c
  406669:	jmp    0x406695
  40666b:	push   es
  40666c:	xchg   edx,eax
  40666d:	push   edx
  40666e:	sbb    BYTE PTR [edi-0x8c57ea8],ch
  406674:	push   0x11
  406676:	mov    ch,0x5b
  406678:	mov    edx,DWORD PTR [ebx+0x4]
  40667b:	xor    eax,0xcb79b577
  406680:	mov    DWORD PTR [ebp+0x14],ecx
  406683:	mov    ecx,0x9c2b8ae8
  406688:	xor    edx,ecx
  40668a:	shrd   eax,edx,0x2
  40668e:	or     eax,DWORD PTR [ebp+0x10]
  406691:	shr    edx,0x2
  406694:	mov    DWORD PTR [ebp-0x70],eax
  406697:	mov    eax,edx
  406699:	or     eax,DWORD PTR [ebp+0x14]
  40669c:	mov    DWORD PTR [ebp-0x5c],edx
  40669f:	jmp    0x406a40
  4066a4:	xchg   ecx,eax
  4066a5:	cld    
  4066a6:	pop    ebx
  4066a7:	cmp    DWORD PTR [edx+eiz*4-0x15230365],0x2120920c
  4066b2:	mov    WORD PTR [esi+edi*4-0x424141c5],fs
  4066b9:	les    edi,FWORD PTR [esi-0xd987042]
  4066bf:	xchg   ecx,eax
  4066c0:	stos   BYTE PTR es:[edi],al
  4066c1:	jns    0x406677
  4066c3:	mov    dl,0x29
  4066c5:	mov    ds,WORD PTR [ecx+0x38388d9c]
  4066cb:	inc    ebp
  4066cc:	mov    ch,0x45
  4066ce:	xlat   BYTE PTR ds:[ebx]
  4066cf:	pushf  
  4066d0:	in     al,0x61
  4066d2:	push   esp
  4066d3:	call   0xdb8e66b2
  4066d8:	test   BYTE PTR [edx+0x68],ch
  4066db:	inc    esi
  4066dc:	bound  ebx,QWORD PTR [esi]
  4066de:	xchg   BYTE PTR [esi-0x61],al
  4066e1:	(bad)  
  4066e2:	push   esp
  4066e3:	aad    0xa
  4066e5:	cmp    bh,al
  4066e7:	test   DWORD PTR [edi+0x5a],ebp
  4066ea:	mov    edx,gs
  4066ec:	jns    0x406724
  4066ee:	mov    ecx,0x488568b4
  4066f3:	push   es
  4066f4:	fwait
  4066f5:	dec    ebp
  4066f6:	shl    DWORD PTR [esi+0x75],0x7c
  4066fa:	stos   DWORD PTR es:[edi],eax
  4066fb:	into   
  4066fc:	out    0x39,eax
  4066fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066ff:	inc    ecx
  406700:	popa   
  406701:	push   ecx
  406702:	les    eax,FWORD PTR ss:[edi-0x2]
  406706:	call   0xc8a3:0xd608c79c
  40670d:	lock (bad) 
  40670f:	cdq    
  406710:	in     al,dx
  406711:	dec    edx
  406712:	mov    cs,WORD PTR [ecx-0x10]
  406715:	sbb    DWORD PTR [edx],edx
  406717:	leave  
  406718:	mov    edi,0x2e3f192f
  40671d:	mov    al,ds:0x7cb440a8
  406722:	add    esp,DWORD PTR ds:0xe5f1cbfd
  406728:	daa    
  406729:	xchg   ebx,eax
  40672a:	call   DWORD PTR [edx+0x22]
  40672d:	ret    0x61a5
  406730:	frndint 
  406732:	cmp    al,0x6d
  406734:	sub    al,0xce
  406736:	loope  0x4066e3
  406738:	jnp    0x406725
  40673a:	and    al,0xfe
  40673c:	add    edi,DWORD PTR ds:0x909a29ea
  406742:	arpl   WORD PTR [ecx+0x167870d6],bp
  406748:	inc    ecx
  406749:	(bad)  
  40674a:	call   0x4652f370
  40674f:	outs   dx,DWORD PTR ds:[esi]
  406750:	loop   0x4066e4
  406752:	push   edx
  406753:	clc    
  406754:	fs push ebp
  406756:	and    ebp,0xffffffb8
  406759:	nop
  40675a:	and    DWORD PTR [ebp-0x7de8ed49],edx
  406760:	nop
  406761:	and    dl,BYTE PTR [edx+0x2c68398]
  406767:	xlat   BYTE PTR ds:[ebx]
  406768:	sbb    al,0xf0
  40676a:	ins    DWORD PTR es:[edi],dx
  40676b:	dec    edi
  40676c:	sub    esp,ebp
  40676e:	fld    QWORD PTR [edx+0x48340747]
  406774:	jmp    0x4067a5
  406776:	in     eax,dx
  406777:	lds    esp,FWORD PTR [ecx+0x15]
  40677a:	cmp    bh,BYTE PTR [eax]
  40677c:	call   0xc2e6ffb0
  406781:	jecxz  0x406755
  406783:	mov    WORD PTR [esp+esi*2+0x58d8ee3e],gs
  40678a:	imul   ebp,DWORD PTR [eax],0x68
  40678d:	lock fistp DWORD PTR [edi]
  406790:	jle    0x4067e7
  406792:	xlat   BYTE PTR ds:[ebx]
  406793:	ja     0x40678c
  406795:	mov    ebx,0x6bcb1205
  40679a:	iret   
  40679b:	sbb    eax,0xb962149f
  4067a0:	icebp  
  4067a1:	gs pusha 
  4067a3:	dec    ecx
  4067a4:	gs dec ebx
  4067a6:	add    al,0x8
  4067a8:	xor    eax,0xd05dbfde
  4067ad:	xchg   esp,eax
  4067ae:	add    DWORD PTR [eax+edx*1-0x41c11a6d],ecx
  4067b5:	jnp    0x40674d
  4067b7:	ja     0x40678e
  4067b9:	loopne 0x40678b
  4067bb:	sar    DWORD PTR [ecx-0x71bb6c1],1
  4067c1:	pop    edx
  4067c2:	pop    ebp
  4067c3:	stc    
  4067c4:	into   
  4067c5:	pop    ss
  4067c6:	pop    edx
  4067c7:	jge    0x406796
  4067c9:	push   ss
  4067ca:	sbb    eax,0x4429c977
  4067cf:	int    0x51
  4067d1:	mov    ecx,DWORD PTR ds:0xbf360ae4
  4067d7:	ret    
  4067d8:	ins    BYTE PTR es:[edi],dx
  4067d9:	inc    ecx
  4067da:	push   0xffffffc2
  4067dc:	push   es
  4067dd:	and    eax,0x7ed6e888
  4067e2:	sub    eax,0x29c45016
  4067e7:	mov    ch,0x7
  4067e9:	sbb    DWORD PTR [ecx],edi
  4067eb:	repz jmp 0x4067a0
  4067ee:	sbb    edi,ebx
  4067f0:	loope  0x40679b
  4067f2:	stos   BYTE PTR es:[edi],al
  4067f3:	dec    edx
  4067f4:	cmp    dh,BYTE PTR [edi-0x31d72d05]
  4067fa:	test   al,0xa2
  4067fc:	sub    eax,DWORD PTR [ebx-0x3a035f79]
  406802:	cli    
  406803:	gs mov ebp,0x2d0e7fd2
  406809:	aas    
  40680a:	inc    edi
  40680b:	popf   
  40680c:	jmp    0x9bd82643
  406811:	fidivr DWORD PTR [esi+eax*2+0x1e]
  406815:	push   ebx
  406816:	adc    al,0x56
  406818:	fcomp  DWORD PTR [ebp+eax*1-0x68]
  40681c:	and    BYTE PTR [edx+eax*4-0x47],cl
  406820:	iret   
  406821:	push   ss
  406822:	fsub   st(0),st
  406824:	mov    ch,0xe0
  406826:	fimul  WORD PTR [edx]
  406828:	enter  0x5f3f,0xd9
  40682c:	(bad)  
  40682d:	xor    ecx,ecx
  40682f:	imul   BYTE PTR [ecx+0x4db7f3c6]
  406835:	push   ebp
  406836:	inc    esi
  406837:	jmp    0x9c1d:0x62f85109
  40683e:	and    al,0xbf
  406840:	and    ebp,eax
  406842:	fstp   QWORD PTR [ebx-0xc099850]
  406848:	shr    BYTE PTR [ebx+0x750ae213],cl
  40684e:	jbe    0x406837
  406850:	(bad)  
  406851:	es mov esp,0xa5a028ce
  406857:	mov    ds:0x4ab32d9c,eax
  40685c:	lods   al,BYTE PTR ds:[esi]
  40685d:	jno    0x4068b9
  40685f:	inc    esi
  406860:	jmp    0x406888
  406862:	cwde   
  406863:	fcom   QWORD PTR [ebp+ebp*8+0x8]
  406867:	ds sbb eax,0x2e8a9fa5
  40686d:	loop   0x4068dc
  40686f:	ss jne 0x40683c
  406872:	add    ch,BYTE PTR [esi-0x77]
  406875:	es in  al,0xa
  406878:	adc    DWORD PTR ds:0x3e532aec,ecx
  40687e:	jl     0x40687b
  406880:	xor    BYTE PTR [ecx],dl
  406882:	int    0x2e
  406884:	xor    BYTE PTR [edx+0x32],al
  406887:	xor    BYTE PTR [ebp+0x4f9d1674],0x9b
  40688e:	cwde   
  40688f:	xor    esi,DWORD PTR [eax+0x7676919b]
  406895:	or     DWORD PTR [ebx+0xb63ab37],ecx
  40689b:	pop    edx
  40689c:	mov    ah,0xc3
  40689e:	inc    edi
  40689f:	add    DWORD PTR [esi+0x9e2e454],esp
  4068a5:	lods   eax,DWORD PTR ds:[esi]
  4068a6:	mov    edi,?
  4068a8:	(bad)  
  4068a9:	fsubr  DWORD PTR [esi-0x23]
  4068ac:	and    DWORD PTR [eax+0x4def8d38],edx
  4068b2:	mov    eax,ds:0x75c51194
  4068b7:	jle    0x4068c1
  4068b9:	sub    ah,bl
  4068bb:	or     edi,DWORD PTR [edi+ecx*8+0x4e]
  4068bf:	lods   eax,DWORD PTR ds:[esi]
  4068c0:	mov    ch,0xf0
  4068c2:	es jle 0x4068dd
  4068c5:	push   esp
  4068c6:	inc    esi
  4068c7:	add    ebp,ecx
  4068c9:	fld    QWORD PTR [edi]
  4068cb:	sbb    eax,DWORD PTR [esi-0xd30587e]
  4068d1:	ret    
  4068d2:	inc    esi
  4068d3:	loope  0x4068b2
  4068d5:	(bad)
  4068d8:	adc    DWORD PTR [edx-0x44f4c1c9],ecx
  4068de:	dec    esp
  4068df:	mov    edi,0xdd2556ad
  4068e4:	js     0x406866
  4068e6:	out    0x79,al
  4068e8:	stc    
  4068e9:	sbb    DWORD PTR [edx+0x42dfa5f7],esp
  4068ef:	xchg   BYTE PTR [esi],al
  4068f1:	adc    ch,cl
  4068f3:	dec    edi
  4068f4:	in     al,0xe4
  4068f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068f8:	pop    ebx
  4068f9:	ja     0x406938
  4068fb:	in     al,dx
  4068fc:	xchg   ecx,eax
  4068fd:	rcr    DWORD PTR [esi+0x2],cl
  406900:	lea    ebp,[esp+edi*8+0x74581b1]
  406907:	aaa    
  406908:	jns    0x406926
  40690a:	push   edx
  40690b:	jp     0x406967
  40690d:	fcom   DWORD PTR [ebx]
  40690f:	and    bl,BYTE PTR [edx+0x37]
  406912:	(bad)  
  406913:	fisttp DWORD PTR [edx-0x7240cf79]
  406919:	dec    edx
  40691a:	push   ebx
  40691b:	jo     0x4068a5
  40691d:	jg     0x4068e3
  40691f:	into   
  406920:	test   DWORD PTR [ecx+ebp*1],ebx
  406923:	ja     0x4068c3
  406925:	push   ebp
  406926:	stc    
  406927:	lods   al,BYTE PTR ds:[esi]
  406928:	dec    ecx
  406929:	jg     0x406950
  40692b:	(bad)  
  40692d:	inc    eax
  40692e:	arpl   WORD PTR [ebx],si
  406930:	stos   DWORD PTR es:[edi],eax
  406931:	dec    ebp
  406932:	push   ecx
  406933:	mov    eax,0xedda552e
  406938:	lds    ebx,FWORD PTR [ebx-0x3ac2de2f]
  40693e:	int3   
  40693f:	mov    BYTE PTR [edx+0x616012f4],cl
  406945:	push   ds
  406946:	test   eax,0xfbf50819
  40694b:	mov    ds:0xab0d1d3a,eax
  406950:	lock aad 0xb8
  406953:	adc    al,0x19
  406955:	js     0x40694d
  406957:	xor    cl,cl
  406959:	repz adc edx,DWORD PTR [edi-0x483f9971]
  406960:	sub    edx,DWORD PTR [ebp+0x231a6ee1]
  406966:	cmp    al,0x9a
  406968:	in     eax,0xb2
  40696a:	rcl    DWORD PTR [eax],1
  40696c:	das    
  40696d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40696e:	and    eax,0xb8b6a8e1
  406973:	or     esi,DWORD PTR [eax]
  406975:	jo     0x4069c6
  406977:	jmp    0xbafe:0xcb7c14fb
  40697e:	mov    esp,0xa909c5be
  406983:	daa    
  406984:	pop    esi
  406985:	or     ebx,DWORD PTR [esi+0x1]
  406988:	cmc    
  406989:	imul   edi,DWORD PTR [ebp-0x33],0x4cd2ccbc
  406990:	jge    0x4069cb
  406992:	mov    eax,ds:0x6c8777e3
  406997:	stos   BYTE PTR es:[edi],al
  406998:	(bad)  
  406999:	cli    
  40699a:	inc    edi
  40699b:	enter  0x9ee9,0xef
  40699f:	sub    al,0xe2
  4069a1:	ins    DWORD PTR es:[edi],dx
  4069a2:	jmp    0x4069d6
  4069a4:	sbb    ebx,DWORD PTR ds:0x85b469c1
  4069aa:	pop    ds
  4069ab:	aam    0xb3
  4069ad:	outs   dx,BYTE PTR ds:[esi]
  4069ae:	addr16 ja 0x406981
  4069b1:	push   ds
  4069b2:	or     al,0x1e
  4069b4:	sub    al,BYTE PTR [ebx+edi*2]
  4069b7:	mov    BYTE PTR [ebp-0x72],cl
  4069ba:	ins    DWORD PTR es:[edi],dx
  4069bb:	mov    edi,0x5b24ca15
  4069c0:	cmc    
  4069c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069c2:	adc    BYTE PTR [ebx+0x5f30647d],ah
  4069c8:	push   ds
  4069c9:	call   0x9dc98531
  4069ce:	mov    ah,0xb4
  4069d0:	sahf   
  4069d1:	push   edx
  4069d2:	jge    0x406a1f
  4069d4:	arpl   WORD PTR [edi-0x34],di
  4069d7:	mov    esi,0x4592628
  4069dc:	jl     0x40698f
  4069de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069df:	add    al,0x78
  4069e1:	or     BYTE PTR [edx],dh
  4069e3:	xchg   esi,eax
  4069e4:	stc    
  4069e5:	inc    eax
  4069e6:	xchg   edi,eax
  4069e7:	mov    DWORD PTR [edi-0x427e4d6d],eax
  4069ed:	retf   0x180f
  4069f0:	hlt    
  4069f1:	sbb    ah,BYTE PTR [esi+0x5ed2d9d6]
  4069f7:	jne    0x406983
  4069f9:	sar    DWORD PTR [ebp-0x6e],1
  4069fc:	lods   eax,DWORD PTR ds:[esi]
  4069fd:	lock add cl,al
  406a00:	sbb    al,0x11
  406a02:	das    
  406a03:	mov    eax,0xa6ea394
  406a08:	mul    BYTE PTR [eax+0x31]
  406a0b:	sbb    BYTE PTR [ecx],0x90
  406a0e:	int    0x7a
  406a10:	and    al,0xae
  406a12:	lds    eax,FWORD PTR [ebx+0x4d]
  406a15:	jle    0x406a39
  406a17:	pop    eax
  406a18:	fsubr  DWORD PTR [eax-0x10dcfa5b]
  406a1e:	dec    edi
  406a1f:	ins    DWORD PTR es:[edi],dx
  406a20:	and    al,0x62
  406a22:	mov    dl,0xa6
  406a24:	push   esp
  406a25:	stos   DWORD PTR es:[edi],eax
  406a26:	xlat   BYTE PTR ds:[ebx]
  406a27:	lock pop ds
  406a29:	cmp    BYTE PTR [edx],cl
  406a2b:	into   
  406a2c:	dec    esp
  406a2d:	adc    esp,DWORD PTR [esi+0x33b63fd6]
  406a33:	dec    ebx
  406a34:	jb     0x406a34
  406a36:	pop    eax
  406a37:	mov    DWORD PTR es:[edx+0x4fde85e6],eax
  406a3e:	or     DWORD PTR [ebp-0x77],edi
  406a41:	inc    ebp
  406a42:	xchg   esp,eax
  406a43:	mov    eax,DWORD PTR [ebp-0x70]
  406a46:	cmp    DWORD PTR [ebp-0x68],eax
  406a49:	jne    0x406a5b
  406a4f:	mov    eax,DWORD PTR [ebp-0x6c]
  406a52:	cmp    DWORD PTR [ebp-0x64],eax
  406a55:	je     0x406a96
  406a5b:	mov    eax,DWORD PTR [ebp+0x8]
  406a5e:	mov    edx,DWORD PTR [ebp+0xc]
  406a61:	mov    edx,DWORD PTR [ebp-0x4]
  406a64:	mov    edx,DWORD PTR [edx+0x3c]
  406a67:	lea    eax,[edx+eax*8+0x78]
  406a6b:	mov    edx,DWORD PTR [ebp-0x4]
  406a6e:	mov    eax,DWORD PTR [edx+eax*1]
  406a71:	mov    DWORD PTR [ebp-0x24],eax
  406a74:	mov    eax,DWORD PTR [esi]
  406a76:	mov    edx,DWORD PTR [esi+0x4]
  406a79:	shrd   eax,edx,0x2
  406a7d:	mov    DWORD PTR [ebp+0x14],eax
  406a80:	mov    eax,DWORD PTR [esi]
  406a82:	xor    DWORD PTR [ebp+0x14],edi
  406a85:	shr    edx,0x2
  406a88:	mov    edx,DWORD PTR [esi+0x4]
  406a8b:	xor    edx,edx
  406a8d:	shl    eax,0x1e
  406a90:	or     edx,DWORD PTR [ebp+0x14]
  406a93:	mov    DWORD PTR [ebp-0x28],edx
  406a96:	mov    eax,DWORD PTR [ebp-0x24]
  406a99:	mov    eax,DWORD PTR [ebp-0x24]
  406a9c:	xor    edx,edx
  406a9e:	shld   edx,eax,0x2
  406aa2:	xor    edx,ecx
  406aa4:	mov    DWORD PTR [ebp+0xc],edx
  406aa7:	mov    edx,DWORD PTR [esi]
  406aa9:	shl    eax,0x2
  406aac:	jmp    0x406e4d
  406ab1:	stos   BYTE PTR es:[edi],al
  406ab2:	outs   dx,BYTE PTR ds:[esi]
  406ab3:	jne    0x406a9b
  406ab5:	mov    ecx,0x99b2bae5
  406aba:	add    ebp,DWORD PTR [esi-0x23]
  406abd:	dec    DWORD PTR [ebx+0x54]
  406ac0:	sahf   
  406ac1:	mov    ebp,0xbdbebe41
  406ac6:	les    edi,FWORD PTR [esi+0x13c30fbe]
  406acc:	mov    esp,esi
  406ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406acf:	pop    edi
  406ad0:	ret    
  406ad1:	mov    es,WORD PTR [edx-0x37d8e995]
  406ad7:	dec    esi
  406ad8:	pop    edi
  406ad9:	shr    BYTE PTR [edx],cl
  406adb:	adc    BYTE PTR [edi+0x59bc861d],al
  406ae1:	mov    BYTE PTR [eax-0x12f1ea33],ah
  406ae7:	mov    esi,0x56161211
  406aec:	out    0xb3,eax
  406aee:	push   ss
  406aef:	cmp    BYTE PTR [edx+eax*2],al
  406af2:	call   0xec148041
  406af7:	and    DWORD PTR [ebp+0x21c95156],ebp
  406afd:	dec    eax
  406afe:	outs   dx,BYTE PTR ds:[esi]
  406aff:	bound  edi,QWORD PTR [edx]
  406b01:	jmp    0x9f09d3de
  406b06:	frstor [ebp+ebx*4-0x506726ce]
  406b0d:	cwde   
  406b0e:	cmp    DWORD PTR [ebx],esp
  406b10:	fadd   QWORD PTR [eax+edi*8+0x74]
  406b14:	inc    ebx
  406b15:	(bad)  
  406b16:	jno    0x406af0
  406b18:	call   FWORD PTR ds:0xd92c96f6
  406b1e:	and    BYTE PTR [esi],0x93
  406b21:	pop    ebx
  406b22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b23:	leave  
  406b24:	xchg   ecx,eax
  406b25:	push   esp
  406b26:	fst    st(7)
  406b28:	fisttp DWORD PTR [ecx-0xb3df088]
  406b2e:	fsubr  QWORD PTR [ecx+0x2]
  406b31:	mov    dh,0x29
  406b33:	sub    esi,DWORD PTR [ebx+0x60]
  406b36:	stos   DWORD PTR es:[edi],eax
  406b37:	jmp    0xafba49f3
  406b3c:	jmp    0x9c63:0x98d3c33f
  406b43:	jb     0x406aca
  406b45:	cmp    al,0x14
  406b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b48:	ret    
  406b49:	or     al,0x8b
  406b4b:	(bad)  
  406b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b4d:	and    BYTE PTR [ecx-0x50],dl
  406b50:	fs mov ecx,0xe976c921
  406b56:	mov    ch,0xa4
  406b58:	jg     0x406b03
  406b5a:	jae    0x406bd5
  406b5c:	stos   BYTE PTR es:[edi],al
  406b5d:	(bad)  
  406b5e:	call   0xcab6f93e
  406b63:	js     0x406b7e
  406b65:	inc    ecx
  406b66:	pop    esi
  406b67:	dec    esi
  406b68:	test   DWORD PTR [edx-0x58],ebp
  406b6b:	xchg   ebx,eax
  406b6c:	call   0x99947562
  406b71:	mov    ds:0xe6dcaebc,eax
  406b76:	sub    al,0x7d
  406b78:	pop    esi
  406b79:	fs js  0x406b60
  406b7c:	cmp    ebx,ecx
  406b7e:	or     DWORD PTR [eax-0x7b428316],esp
  406b84:	test   al,0xc1
  406b86:	cmp    edi,DWORD PTR [esi]
  406b88:	shl    BYTE PTR [ecx-0x16d40935],0x9d
  406b8f:	aaa    
  406b90:	ds jne 0x406bd9
  406b93:	mov    esi,0xc2bb4a87
  406b98:	jmp    0xcac21850
  406b9d:	inc    ecx
  406b9e:	rol    ecx,1
  406ba0:	inc    esp
  406ba1:	and    BYTE PTR [esi-0x57ebb130],ah
  406ba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ba8:	and    al,0xc2
  406baa:	nop
  406bab:	jbe    0x406be9
  406bad:	push   eax
  406bae:	sub    dh,BYTE PTR [eax+0x7e3ea21b]
  406bb4:	fst    st(0)
  406bb6:	fld    TBYTE PTR [edx]
  406bb8:	pop    ebp
  406bb9:	cdq    
  406bba:	sbb    eax,0x37a6b0f4
  406bbf:	xor    DWORD PTR [ebp-0x6ba93d6c],0x149941eb
  406bc9:	mov    WORD PTR [ecx+0x2c],es
  406bcc:	cmp    dh,0x50
  406bcf:	cmp    BYTE PTR [edi],dl
  406bd1:	jnp    0x406b5e
  406bd3:	call   0x9669:0x2ae72aeb
  406bda:	(bad)  
  406bdb:	addr16 popa 
  406bdd:	in     eax,0x4b
  406bdf:	sub    eax,0xda05bec0
  406be4:	hlt    
  406be5:	adc    BYTE PTR [edi+0x8],dh
  406be8:	stos   BYTE PTR es:[edi],al
  406be9:	(bad)  
  406bea:	dec    ebp
  406beb:	push   0x57
  406bed:	je     0x406bc9
  406bef:	jb     0x406c43
  406bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bf2:	jg     0x406b9f
  406bf4:	aam    0x7
  406bf6:	loop   0x406b96
  406bf8:	xrelease mov DWORD PTR [eax+0x7c2c5821],edx
  406bff:	inc    ecx
  406c00:	push   ebx
  406c01:	xor    BYTE PTR [esp+ebx*4],0x98
  406c05:	xor    bl,BYTE PTR [esi]
  406c07:	cmp    ch,cl
  406c09:	test   BYTE PTR [edx+0x41],0xb1
  406c0d:	jnp    0x406b93
  406c0f:	cld    
  406c10:	aas    
  406c11:	je     0x406be5
  406c13:	cdq    
  406c14:	test   eax,0x787b338b
  406c19:	test   DWORD PTR [esi-0x35],eax
  406c1c:	cdq    
  406c1d:	push   0xa1e1d527
  406c22:	and    al,0x91
  406c24:	adc    DWORD PTR [esp+edi*1-0x5d8e6ca],esi
  406c2b:	jge    0x406c8d
  406c2d:	not    DWORD PTR [edi+0x34734d0a]
  406c33:	mov    gs,WORD PTR [esi+0x6149bfa8]
  406c39:	mov    esi,0x7f406a3c
  406c3e:	test   edx,esi
  406c40:	push   es
  406c41:	and    dl,dl
  406c43:	add    esp,ecx
  406c45:	mov    dh,0xeb
  406c47:	and    ebp,DWORD PTR [esi-0x76]
  406c4a:	pop    edx
  406c4b:	jno    0x406c84
  406c4d:	push   ds
  406c4e:	or     BYTE PTR [esi+0x1],bh
  406c51:	sbb    BYTE PTR [edi-0x42a7fe08],bl
  406c57:	fisubr DWORD PTR [eax+0x6f]
  406c5a:	and    BYTE PTR ds:0x91c0744,bl
  406c60:	test   al,0xa
  406c62:	inc    ebx
  406c63:	inc    esi
  406c64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c65:	fcmovb st,st(3)
  406c67:	pop    ebp
  406c68:	imul   esi,DWORD PTR [ebx],0xd5cea4f0
  406c6e:	pop    esi
  406c6f:	or     bh,BYTE PTR [ebx-0x3]
  406c72:	jno    0x406c4b
  406c74:	out    dx,eax
  406c75:	jno    0x406c81
  406c77:	mov    al,0x9f
  406c79:	(bad)  
  406c7a:	les    ebp,FWORD PTR [ecx-0x6e]
  406c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c7e:	fist   WORD PTR [ecx]
  406c80:	inc    edx
  406c81:	cs inc ebp
  406c83:	mov    bl,0xf9
  406c85:	(bad)  
  406c86:	cld    
  406c87:	dec    ebx
  406c88:	test   DWORD PTR [eax+0x7d],edi
  406c8b:	popa   
  406c8c:	sub    DWORD PTR [ebp+ebx*8+0x30257215],0xffffffc9
  406c94:	jno    0x406c83
  406c96:	push   ss
  406c97:	icebp  
  406c98:	loopne 0x406c98
  406c9a:	dec    ecx
  406c9b:	int    0xd9
  406c9d:	pop    edi
  406c9e:	mov    ebx,0xd449f0a7
  406ca3:	add    eax,0x781bbd02
  406ca8:	pop    sp
  406caa:	call   0x982420ac
  406caf:	pusha  
  406cb0:	sub    al,0x60
  406cb2:	mov    ds:0xba64f776,al
  406cb7:	and    BYTE PTR [ebp+0x6c6f17bc],bh
  406cbd:	mov    BYTE PTR [edi-0x4b],al
  406cc0:	aad    0x17
  406cc2:	adc    edx,DWORD PTR [edi]
  406cc4:	ja     0x406c52
  406cc6:	xor    al,0xbd
  406cc8:	stc    
  406cc9:	jnp    0x406d35
  406ccb:	fwait
  406ccc:	aam    0x64
  406cce:	xor    DWORD PTR [esi-0x7],0x6b62016d
  406cd5:	jle    0x406cd7
  406cd7:	dec    ecx
  406cd8:	repnz mov cl,0x8b
  406cdb:	sbb    al,0x9f
  406cdd:	leave  
  406cde:	add    al,0x23
  406ce0:	inc    edi
  406ce1:	xor    BYTE PTR [edx-0x35726219],ch
  406ce7:	or     BYTE PTR [edi],0xe1
  406cea:	pop    edx
  406ceb:	out    dx,eax
  406cec:	adc    ecx,ecx
  406cee:	or     eax,DWORD PTR [ebp-0xd]
  406cf1:	adc    BYTE PTR [esi-0x35e08dc],dh
  406cf7:	loop   0x406d34
  406cf9:	cmp    ax,0x7879
  406cfd:	mov    WORD PTR [ebp+0x30c246cb],ds
  406d03:	push   edx
  406d04:	adc    DWORD PTR [eax-0x35],eax
  406d07:	sub    DWORD PTR [ecx-0x66],0x2d6c646a
  406d0e:	mov    gs,ecx
  406d10:	and    cl,bh
  406d12:	cli    
  406d13:	imul   ecx,DWORD PTR [edi+0x6],0x9e40a48a
  406d1a:	mov    WORD PTR [ebp-0x6062da01],es
  406d20:	dec    ebx
  406d21:	sahf   
  406d22:	(bad)  
  406d23:	enter  0xe437,0x9f
  406d27:	call   0x340370c4
  406d2c:	xchg   ecx,eax
  406d2d:	mov    esp,0xad0371b
  406d32:	cdq    
  406d33:	scas   al,BYTE PTR es:[edi]
  406d34:	neg    DWORD PTR [edx-0x5f]
  406d37:	xlat   BYTE PTR ds:[ebx]
  406d38:	fs dec ecx
  406d3a:	and    DWORD PTR ss:[eax+0x7],esi
  406d3e:	cs popf 
  406d40:	inc    esp
  406d41:	in     eax,dx
  406d42:	les    eax,FWORD PTR [eax+0x6f]
  406d45:	xchg   ah,ah
  406d47:	ds mov ah,0xcb
  406d4a:	adc    ch,dh
  406d4c:	jae    0x406dc2
  406d4e:	dec    ebp
  406d4f:	popa   
  406d50:	outs   dx,BYTE PTR ds:[esi]
  406d51:	adc    eax,0x320d795f
  406d56:	dec    ebp
  406d57:	xchg   edi,eax
  406d58:	call   0x6a32:0x9a8993b8
  406d5f:	cli    
  406d60:	add    BYTE PTR [esi],dl
  406d62:	bound  ebx,QWORD PTR [esi-0x4]
  406d65:	cmp    DWORD PTR [ecx-0x3e],edi
  406d68:	sbb    al,0x5e
  406d6a:	xor    dh,BYTE PTR [ecx]
  406d6c:	adc    eax,esp
  406d6e:	(bad)  
  406d6f:	pop    edi
  406d70:	out    0x56,eax
  406d72:	pop    ecx
  406d73:	mov    bh,0x95
  406d75:	fnstsw WORD PTR [ebx+0x2bc935fb]
  406d7b:	out    0x9a,al
  406d7d:	neg    DWORD PTR [ecx]
  406d7f:	je     0x406d81
  406d81:	cwde   
  406d82:	xchg   edx,eax
  406d83:	sub    al,0x43
  406d85:	loopne 0x406d32
  406d87:	ror    ecx,0x21
  406d8a:	shl    BYTE PTR [ebx],1
  406d8c:	pop    es
  406d8d:	push   ds
  406d8e:	fwait
  406d8f:	gs out dx,al
  406d91:	mov    esp,0x93df26ad
  406d96:	adc    esp,eax
  406d98:	xchg   ebp,eax
  406d99:	arpl   bx,bp
  406d9b:	mov    edi,DWORD PTR [esi]
  406d9d:	adc    edx,DWORD PTR [esp+edx*2+0x3]
  406da1:	out    0x1e,al
  406da3:	fst    QWORD PTR [esi-0x34c9fd86]
  406da9:	inc    eax
  406daa:	test   al,0x54
  406dac:	addr16 cld 
  406dae:	jmp    0xa62f:0x2f879925
  406db5:	das    
  406db6:	outs   dx,DWORD PTR ds:[si]
  406db8:	or     ch,BYTE PTR [edx]
  406dba:	mov    eax,ds:0xa4ec7263
  406dbf:	fsubp  st(7),st
  406dc1:	aam    0x1e
  406dc3:	or     bh,BYTE PTR [edx-0x46cdd20b]
  406dc9:	push   edx
  406dca:	rcr    dh,0x8f
  406dcd:	stos   BYTE PTR es:[edi],al
  406dce:	add    al,0x19
  406dd0:	std    
  406dd1:	mov    ebp,DWORD PTR [ebp+0x76]
  406dd4:	inc    ecx
  406dd5:	xor    eax,0x100cb439
  406dda:	sbb    eax,0x7c34dc19
  406ddf:	(bad)  
  406de0:	mov    bh,0x90
  406de2:	pop    ebp
  406de3:	repz sahf 
  406de5:	fimul  DWORD PTR [ebx]
  406de7:	dec    esi
  406de8:	mov    edi,edi
  406dea:	ds (bad) 
  406dec:	fild   QWORD PTR [edi]
  406dee:	dec    ebp
  406def:	push   0x4f9c5123
  406df4:	popf   
  406df5:	jb     0x406d80
  406df7:	sbb    ch,BYTE PTR [esi+0x48]
  406dfa:	ret    0xe080
  406dfd:	into   
  406dfe:	fiadd  WORD PTR [ecx]
  406e00:	test   BYTE PTR [eax+ebx*4+0x3ef1b375],cl
  406e07:	popf   
  406e08:	lods   al,BYTE PTR ds:[esi]
  406e09:	mov    cl,0x67
  406e0b:	cmp    ch,bh
  406e0d:	adc    al,0x36
  406e0f:	cli    
  406e10:	pop    esp
  406e11:	sbb    DWORD PTR [ebp+0x2c],edx
  406e14:	mov    dh,0xed
  406e16:	(bad)  
  406e17:	sub    esp,DWORD PTR [edi+esi*4+0x2a]
  406e1b:	dec    dl
  406e1d:	inc    eax
  406e1e:	mov    dl,0x5b
  406e20:	fsub   DWORD PTR [ebx]
  406e22:	pusha  
  406e23:	jo     0x406e93
  406e25:	gs aam 0x49
  406e28:	mov    cl,BYTE PTR [esi+0x31]
  406e2b:	iret   
  406e2c:	(bad)  
  406e2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e2e:	lds    si,DWORD PTR [ebx+0x6d]
  406e32:	call   0x313e6738
  406e37:	neg    dh
  406e39:	dec    edi
  406e3a:	int    0xaf
  406e3c:	adc    eax,0x3a00dff9
  406e41:	iret   
  406e42:	out    dx,al
  406e43:	(bad)  
  406e44:	lods   al,BYTE PTR gs:[esi]
  406e46:	jmp    0x323780e1
  406e4b:	out    dx,al
  406e4c:	adc    cl,BYTE PTR [ecx+0x568b1055]
  406e52:	add    al,0x35
  406e54:	jbe    0x406e0b
  406e56:	jns    0x406e23
  406e58:	mov    DWORD PTR [ebp+0x14],edx
  406e5b:	cmp    eax,DWORD PTR [ebp+0x10]
  406e5e:	jne    0x407653
  406e64:	mov    eax,edx
  406e66:	cmp    DWORD PTR [ebp+0xc],eax
  406e69:	jne    0x407653
  406e6f:	mov    eax,DWORD PTR [esi]
  406e71:	mov    edx,DWORD PTR [esi+0x4]
  406e74:	mov    eax,DWORD PTR [esi]
  406e76:	mov    edx,DWORD PTR [esi+0x4]
  406e79:	mov    edx,eax
  406e7b:	xor    eax,eax
  406e7d:	shl    edx,0x1e
  406e80:	mov    DWORD PTR [ebp+0x10],eax
  406e83:	mov    eax,DWORD PTR [esi]
  406e85:	xor    edx,0x80000000
  406e8b:	mov    DWORD PTR [ebp+0x14],edx
  406e8e:	mov    edx,DWORD PTR [esi+0x4]
  406e91:	xor    eax,0xcb79b577
  406e96:	xor    ecx,edx
  406e98:	shrd   eax,ecx,0x2
  406e9c:	or     eax,DWORD PTR [ebp+0x10]
  406e9f:	shr    ecx,0x2
  406ea2:	mov    DWORD PTR [ebp+0x8],eax
  406ea5:	mov    eax,ecx
  406ea7:	or     eax,DWORD PTR [ebp+0x14]
  406eaa:	mov    ecx,DWORD PTR [ebx]
  406eac:	mov    edx,DWORD PTR [ebx+0x4]
  406eaf:	push   eax
  406eb0:	push   DWORD PTR [ebp+0x8]
  406eb3:	push   edx
  406eb4:	push   ecx
  406eb5:	call   0x41594e
  406eba:	mov    eax,DWORD PTR [esi]
  406ebc:	mov    ecx,DWORD PTR [esi+0x4]
  406ebf:	shrd   eax,ecx,0x2
  406ec3:	shr    ecx,0x2
  406ec6:	shr    edx,0x1e
  406ec9:	xor    ecx,0xe70ae2ba
  406ecf:	push   ecx
  406ed0:	xor    eax,edi
  406ed2:	mov    DWORD PTR [ebp+0x10],edx
  406ed5:	mov    edx,DWORD PTR [ebx]
  406ed7:	mov    edi,DWORD PTR [ebx+0x4]
  406eda:	push   eax
  406edb:	push   edi
  406edc:	push   edx
  406edd:	call   0x41594e
  406ee2:	shld   edx,eax,0x2
  406ee6:	mov    ecx,edx
  406ee8:	xor    edx,edx
  406eea:	or     ecx,edx
  406eec:	mov    edx,DWORD PTR [esi]
  406eee:	mov    edi,DWORD PTR [esi+0x4]
  406ef1:	shl    eax,0x2
  406ef4:	or     eax,DWORD PTR [ebp+0x10]
  406ef7:	jmp    0x407298
  406efc:	test   al,0xc
  406efe:	lea    ebp,[esi]
  406f00:	mov    cl,0xbc
  406f02:	test   al,0x9c
  406f04:	sahf   
  406f05:	cld    
  406f06:	lds    esp,FWORD PTR [ecx+edi*4-0x411c5782]
  406f0d:	dec    ecx
  406f0e:	mov    esi,0xbec4bdbe
  406f13:	mov    esi,0x9260f965
  406f18:	in     eax,0x20
  406f1a:	repz xlat BYTE PTR ds:[ebx]
  406f1c:	loopne 0x406efe
  406f1e:	push   edx
  406f1f:	in     al,dx
  406f20:	mov    al,0x25
  406f22:	and    DWORD PTR [esi+0x7c5dd836],edi
  406f28:	add    esp,DWORD PTR [edx+0x20]
  406f2b:	aaa    
  406f2c:	push   cs
  406f2d:	outs   dx,BYTE PTR ds:[esi]
  406f2e:	test   al,0xc4
  406f30:	mov    DWORD PTR [edx-0x1],ecx
  406f33:	push   cs
  406f34:	imul   ecx,esp,0x9da27216
  406f3a:	mov    ecx,0x42276abf
  406f3f:	mov    eax,0x77a65abf
  406f44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f45:	or     eax,0x98198b9c
  406f4a:	adc    ah,bh
  406f4c:	dec    esi
  406f4d:	(bad)  
  406f4e:	(bad)  ds:0xcb1df32
  406f54:	pop    es
  406f55:	push   eax
  406f56:	push   0xffffffb8
  406f58:	mov    bl,0x6e
  406f5a:	mov    eax,ds:0xeabd3322
  406f5f:	push   esi
  406f60:	daa    
  406f61:	sti    
  406f62:	out    dx,eax
  406f63:	jns    0x406f5f
  406f65:	outs   dx,BYTE PTR ds:[esi]
  406f66:	jmp    0x421194c
  406f6b:	xor    DWORD PTR [ebp+0x60],ecx
  406f6e:	es loope 0x406f1d
  406f71:	mov    ebp,0x76246982
  406f76:	scas   eax,DWORD PTR es:[edi]
  406f77:	and    BYTE PTR [edi+ebx*2-0x4ca2b658],0x98
  406f7f:	rol    DWORD PTR [esi],1
  406f81:	cmp    BYTE PTR [edx+0x761751b1],dh
  406f87:	test   al,0x59
  406f89:	pop    DWORD PTR [eax]
  406f8b:	jns    0x406fc5
  406f8d:	jmp    0x406fad
  406f8f:	nop
  406f90:	retf   
  406f91:	add    ebx,edi
  406f93:	int3   
  406f94:	xor    DWORD PTR [edx],esp
  406f96:	sti    
  406f97:	mov    bl,0x24
  406f99:	dec    edx
  406f9a:	aas    
  406f9b:	sar    DWORD PTR [ecx-0x61],cl
  406f9e:	jnp    0x40701c
  406fa0:	dec    ebp
  406fa1:	arpl   ax,sp
  406fa3:	into   
  406fa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fa5:	sti    
  406fa6:	fisub  DWORD PTR [ecx+eiz*8]
  406fa9:	or     cl,BYTE PTR [eax+0x16c1b33d]
  406faf:	xor    eax,0x18eb34c
  406fb4:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fb6:	(bad)  
  406fb7:	iret   
  406fb8:	inc    ebx
  406fb9:	and    dl,BYTE PTR [ecx-0x24]
  406fbc:	aaa    
  406fbd:	stc    
  406fbe:	dec    edx
  406fbf:	sub    eax,0xde62b105
  406fc4:	lods   eax,DWORD PTR ds:[esi]
  406fc5:	pusha  
  406fc6:	les    eax,FWORD PTR [edx]
  406fc8:	pop    eax
  406fc9:	sahf   
  406fca:	push   ds
  406fcb:	sbb    eax,0xca5b5987
  406fd0:	shl    DWORD PTR [esp+ecx*1-0x49],0x61
  406fd5:	test   BYTE PTR [ebp-0xbed81c6],ch
  406fdb:	outs   dx,BYTE PTR ds:[esi]
  406fdc:	(bad)  
  406fde:	or     ecx,ebp
  406fe0:	stc    
  406fe1:	gs popf 
  406fe3:	cwde   
  406fe4:	int    0x26
  406fe6:	int3   
  406fe7:	add    al,0x71
  406fe9:	test   eax,0xb7f4f9c5
  406fee:	dec    ebx
  406fef:	inc    ebp
  406ff0:	jae    0x406fde
  406ff2:	pop    es
  406ff3:	inc    edx
  406ff4:	add    ebp,DWORD PTR [edi]
  406ff6:	mov    al,0xbc
  406ff8:	test   eax,0x6ce7da7f
  406ffd:	push   cs
  406ffe:	sub    esp,DWORD PTR ds:0x75dbde58
  407004:	push   es
  407005:	std    
  407006:	cmp    DWORD PTR [edi],ebp
  407008:	les    eax,FWORD PTR [edx+0x1b21f610]
  40700e:	ficomp WORD PTR [esi+esi*1-0x59cc636b]
  407015:	rol    BYTE PTR [ebp-0x6db4bdff],0xbe
  40701c:	jnp    0x40703d
  40701e:	(bad)  
  407020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407021:	lock pop ds
  407023:	shr    BYTE PTR [ebx+0x5039c8b7],0x37
  40702a:	xor    eax,0x4a80b498
  40702f:	xor    edx,DWORD PTR [esi+0x4dc84e1e]
  407035:	dec    edx
  407036:	out    dx,al
  407037:	stos   BYTE PTR es:[edi],al
  407038:	xor    eax,esp
  40703a:	cmp    DWORD PTR ds:0xbae09869,edx
  407040:	cmp    al,0xfb
  407042:	push   eax
  407043:	out    0xa8,eax
  407045:	ret    0xcd9
  407048:	test   eax,0x30aca0cf
  40704d:	jno    0x4070b5
  40704f:	imul   eax,DWORD PTR [eax+edi*2],0xffffffdd
  407053:	in     eax,dx
  407054:	shr    DWORD PTR [bp+di-0x565a],0x8d
  40705a:	dec    esi
  40705b:	fsubr  DWORD PTR ds:0x1208433e
  407061:	inc    esi
  407062:	cs mov ebp,0x7640a729
  407068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407069:	xlat   BYTE PTR ds:[ebx]
  40706a:	pop    ecx
  40706b:	xor    DWORD PTR [eax-0x380bfdd6],ebp
  407071:	push   ecx
  407072:	pop    eax
  407073:	cs jecxz 0x40705e
  407076:	adc    eax,0x93f9b233
  40707b:	shl    esp,0xe5
  40707e:	mov    dl,0xa7
  407080:	imul   edi,DWORD PTR [edi-0x6c13cf00],0xffffffa3
  407087:	imul   ebp,DWORD PTR [edx+0x77],0x30
  40708b:	jl     0x40700d
  40708d:	gs xchg edx,eax
  40708f:	sbb    cl,ch
  407091:	ins    BYTE PTR es:[edi],dx
  407092:	retf   0xff23
  407095:	or     BYTE PTR [eax+0x5d045bc1],al
  40709b:	jle    0x407091
  40709d:	les    esp,FWORD PTR [ebp+0x36]
  4070a0:	inc    edi
  4070a1:	popa   
  4070a2:	mov    ebx,0x5c5bf6ea
  4070a7:	and    BYTE PTR [ebx-0x17970163],dh
  4070ad:	ret    
  4070ae:	and    cl,BYTE PTR [ecx+0x6e]
  4070b1:	shl    BYTE PTR [ebx],cl
  4070b3:	fwait
  4070b4:	(bad)  
  4070b5:	jmp    0xcf40:0x9f187d59
  4070bc:	cmp    eax,DWORD PTR [eax-0x1708e7c]
  4070c2:	aam    0x9b
  4070c4:	out    dx,eax
  4070c5:	jge    0x4070f4
  4070c7:	mov    edi,0xe22600a7
  4070cc:	mov    al,0xd0
  4070ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070cf:	ins    DWORD PTR es:[edi],dx
  4070d0:	dec    ebx
  4070d1:	call   0xe9f:0x2c82ca35
  4070d8:	or     eax,0x7d4d1fea
  4070dd:	aad    0x3f
  4070df:	xor    eax,0x4f0eab74
  4070e4:	je     0x4070a3
  4070e6:	push   eax
  4070e7:	ja     0x4070a7
  4070e9:	mov    ah,0x6b
  4070eb:	jae    0x4070ff
  4070ed:	sbb    eax,0x51d231af
  4070f2:	or     BYTE PTR [eax-0x681cf55b],0x75
  4070f9:	loop   0x40710e
  4070fb:	nop
  4070fc:	out    0xd5,eax
  4070fe:	inc    ebp
  4070ff:	(bad)  
  407100:	push   esp
  407101:	cmp    esp,DWORD PTR [eax+0x6355365f]
  407107:	test   al,0xb1
  407109:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40710b:	pop    ds
  40710c:	lahf   
  40710d:	dec    ebp
  40710e:	jae    0x4070f3
  407110:	push   ebp
  407111:	push   ds
  407112:	lds    edx,FWORD PTR [esi-0x22]
  407115:	cmc    
  407116:	out    dx,eax
  407117:	out    dx,al
  407118:	mov    ds:0x707c16ac,eax
  40711d:	lods   al,BYTE PTR ds:[esi]
  40711e:	and    edi,edx
  407120:	test   al,0xde
  407122:	xor    BYTE PTR [edi+eax*2],dl
  407125:	popa   
  407126:	mov    eax,edi
  407128:	pushf  
  407129:	ret    0x78a6
  40712c:	repz leave 
  40712e:	xor    al,BYTE PTR [ebp+0x7b]
  407131:	ins    DWORD PTR es:[edi],dx
  407132:	sub    eax,0xaca347e5
  407137:	out    0x95,al
  407139:	and    ch,cl
  40713b:	sti    
  40713c:	idiv   BYTE PTR [eax]
  40713e:	push   0x66
  407140:	fld    TBYTE PTR [esi-0x4953ae45]
  407146:	aaa    
  407147:	rcr    DWORD PTR [edi],1
  407149:	rol    DWORD PTR [ebp+0x6a7dbcc5],cl
  40714f:	sbb    al,0x4c
  407151:	ret    
  407152:	add    eax,0xaa77a32
  407157:	xor    al,0x9a
  407159:	iret   
  40715a:	repz test eax,0xd7295f87
  407160:	add    ah,BYTE PTR gs:[edi-0x9d27b7e]
  407167:	or     al,BYTE PTR [ebx-0x4a]
  40716a:	mov    ah,0x93
  40716c:	(bad)  
  40716d:	cmp    ebp,DWORD PTR [eax-0x67]
  407170:	in     eax,0x1c
  407172:	pop    ebp
  407173:	dec    esp
  407174:	jg     0x407192
  407176:	ins    BYTE PTR es:[edi],dx
  407177:	test   al,0x9e
  407179:	cmp    esp,DWORD PTR [edx+0x67]
  40717c:	fsubr  st(1),st
  40717e:	cli    
  40717f:	in     eax,0x1a
  407181:	cmp    edx,esi
  407183:	mov    ch,cl
  407185:	into   
  407186:	lea    eax,[edx-0x3e4119d0]
  40718c:	push   es
  40718d:	(bad)  
  40718f:	xor    eax,0xe31eae2
  407194:	fcomp  QWORD PTR [eax]
  407196:	ret    0xe4a3
  407199:	ffreep st(5)
  40719b:	or     dh,0xfd
  40719e:	(bad)  
  40719f:	ins    BYTE PTR es:[edi],dx
  4071a0:	pop    ecx
  4071a1:	adc    DWORD PTR [ebx-0x3793849b],0xea09b02c
  4071ab:	jl     0x4071d6
  4071ad:	inc    edi
  4071ae:	aam    0xeb
  4071b0:	cmp    al,0x4e
  4071b2:	jmp    0x4071de
  4071b4:	and    DWORD PTR [edx+0x763d7dbb],eax
  4071ba:	cli    
  4071bb:	push   cs
  4071bc:	or     eax,0xe62f0a9e
  4071c1:	add    al,0xe3
  4071c3:	and    BYTE PTR ds:0x2f1d8cf,0x1b
  4071ca:	dec    ebp
  4071cb:	les    edx,FWORD PTR [eax+ebx*8+0x6e6b6c58]
  4071d2:	add    dl,BYTE PTR [eax-0x21c739f9]
  4071d8:	adc    eax,0x637446c6
  4071dd:	push   eax
  4071de:	xchg   DWORD PTR ds:0x4afea480,esi
  4071e4:	adc    DWORD PTR ds:0x587d2a25,esi
  4071ea:	cmp    al,0x9a
  4071ec:	stc    
  4071ed:	push   0xffffffb9
  4071ef:	adc    al,0xb0
  4071f1:	or     al,0x78
  4071f4:	jmp    0xc4c934f7
  4071f9:	or     ax,0x453
  4071fd:	imul   eax,DWORD PTR [eax-0x7765a0f7],0xc92d980d
  407207:	sbb    edi,DWORD PTR [eax+0x61]
  40720a:	xor    al,0x4b
  40720c:	mov    bl,0x27
  40720e:	xor    BYTE PTR [edi],cl
  407210:	aas    
  407211:	mov    esi,0x895415e6
  407216:	or     ecx,edi
  407218:	pushf  
  407219:	push   es
  40721a:	dec    eax
  40721b:	xchg   ecx,eax
  40721c:	jmp    0x407279
  40721e:	cli    
  40721f:	push   edi
  407220:	int3   
  407221:	stos   DWORD PTR es:[edi],eax
  407222:	(bad)  
  407223:	mov    bl,0xa3
  407225:	call   0x5977:0x1b40bf96
  40722c:	inc    edi
  40722d:	mov    esp,0xcaa34ae7
  407232:	xchg   BYTE PTR [esi+0x4d582db8],cl
  407238:	add    ch,BYTE PTR [edx]
  40723a:	xor    dh,BYTE PTR [ecx]
  40723c:	mov    DWORD PTR [eax+0x1e0014ec],ebp
  407242:	fwait
  407243:	scas   al,BYTE PTR es:[edi]
  407244:	aad    0x73
  407246:	test   esi,esi
  407248:	mov    BYTE PTR [ebx-0x153d2246],ah
  40724e:	mov    dh,0xb4
  407250:	ins    BYTE PTR es:[edi],dx
  407251:	cmp    ah,cl
  407253:	int    0x6e
  407255:	sar    BYTE PTR [edi+eiz*8+0x71],0xd5
  40725a:	xchg   esi,eax
  40725b:	push   esp
  40725c:	dec    ebp
  40725d:	mov    ebx,0x33e8b09d
  407262:	sub    DWORD PTR [ecx-0x59389604],esi
  407268:	adc    al,dl
  40726a:	ds clc 
  40726c:	call   0x88852b0d
  407271:	inc    edi
  407272:	sub    edi,DWORD PTR [ebx+esi*2+0x218200e]
  407279:	sbb    DWORD PTR [edx+eiz*2-0x4a157a8d],ebp
  407280:	fisttp DWORD PTR [ecx]
  407282:	popf   
  407283:	ds pop eax
  407285:	retf   0x6367
  407288:	and    BYTE PTR [ecx],ah
  40728a:	int3   
  40728b:	add    ah,dl
  40728d:	xchg   al,dl
  40728f:	xor    al,0x83
  407291:	mov    dh,0x93
  407293:	jnp    0x4072ef
  407295:	xor    dl,BYTE PTR [edx]
  407297:	mov    ch,0x33
  407299:	stc    
  40729a:	xor    edx,eax
  40729c:	xor    edx,0xcb79b576
  4072a2:	xor    edi,0x9c2b8ae8
  4072a8:	mov    DWORD PTR [esi],edx
  4072aa:	jmp    0x40764b
  4072af:	mov    bl,0xe6
  4072b1:	ds lahf 
  4072b3:	pushf  
  4072b4:	test   al,0xb4
  4072b6:	stc    
  4072b7:	jo     0x4072e0
  4072b9:	inc    edx
  4072ba:	fnstsw WORD PTR [esi]
  4072bc:	xchg   edi,eax
  4072bd:	jo     0x40729c
  4072bf:	mov    ebp,0xbdbebe4f
  4072c4:	les    edi,FWORD PTR [esi-0x7cf2e942]
  4072ca:	mov    ah,ch
  4072cc:	cld    
  4072cd:	bound  ecx,QWORD PTR [ecx]
  4072cf:	rol    BYTE PTR [ebp-0x6c],0xbf
  4072d3:	outs   dx,BYTE PTR ds:[esi]
  4072d4:	data16 cmp al,0x7
  4072d7:	inc    edx
  4072d8:	ja     0x4072bb
  4072da:	inc    edi
  4072db:	aas    
  4072dc:	aas    
  4072dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072de:	ds adc ecx,ecx
  4072e1:	out    0x96,eax
  4072e3:	inc    eax
  4072e4:	xor    al,0xc4
  4072e6:	lods   eax,DWORD PTR ds:[esi]
  4072e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072e8:	gs es aaa 
  4072eb:	in     al,0x73
  4072ed:	or     eax,DWORD PTR [esi+0x70]
  4072f0:	fs push esi
  4072f2:	add    DWORD PTR [ecx],ebx
  4072f4:	test   eax,0x5c6b40c5
  4072f9:	and    DWORD PTR [ebp+ebx*4+0x15],edx
  4072fd:	inc    esp
  4072fe:	ffree  st(3)
  407300:	bound  edi,QWORD PTR gs:[ecx-0x4e815719]
  407307:	pushf  
  407308:	bound  edi,QWORD PTR [ecx]
  40730a:	pushf  
  40730b:	(bad)  
  40730c:	rcl    DWORD PTR [esi-0x4710cdc0],0x6c
  407313:	add    eax,0x342f19a9
  407318:	xchg   ebp,eax
  407319:	jle    0x40737f
  40731b:	xor    al,0x66
  40731d:	out    0x57,eax
  40731f:	and    eax,0xe8695fa5
  407324:	inc    esp
  407325:	pop    esi
  407326:	jecxz  0x40732d
  407328:	nop    esp
  40732b:	mov    dh,0x64
  40732d:	adc    ah,bh
  40732f:	sub    eax,0x853c1d5f
  407334:	and    al,0x27
  407336:	cmp    edi,DWORD PTR [eax]
  407338:	sub    eax,0xd5bff9b5
  40733d:	or     ch,BYTE PTR [ebx-0x3666b83a]
  407343:	out    0x25,eax
  407345:	inc    eax
  407346:	test   DWORD PTR [edi],0xac990680
  40734c:	imul   edi,DWORD PTR [edi+0x10],0x9c58c0fd
  407353:	sbb    BYTE PTR [eax+0x3f54fa04],bh
  407359:	dec    edx
  40735a:	mov    cs,WORD PTR [ebx-0x75]
  40735d:	imul   ebp,edi,0xfd03bb22
  407363:	(bad)  es:[edx+0x581e7191]
  40736a:	inc    ebp
  40736b:	lahf   
  40736c:	jnp    0x407344
  40736e:	call   0xb27ae15b
  407373:	mov    ch,0xe5
  407375:	push   ebx
  407376:	xchg   edx,eax
  407377:	xchg   dh,bl
  407379:	cwde   
  40737a:	pop    ebp
  40737b:	test   eax,0xe8ad282e
  407380:	fmul   DWORD PTR [edx]
  407382:	cli    
  407383:	das    
  407384:	loope  0x407346
  407386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407387:	jo     0x407324
  407389:	lods   eax,DWORD PTR ds:[esi]
  40738a:	mov    cs,WORD PTR [eax-0x18]
  40738d:	hlt    
  40738e:	jbe    0x4073bf
  407390:	repnz xchg ecx,esp
  407393:	fwait
  407394:	mov    al,0xe3
  407396:	pop    es
  407397:	iret   
  407398:	test   DWORD PTR [edx-0x5b],0x6455ee2f
  40739f:	or     al,0x39
  4073a1:	fisttp WORD PTR [eax]
  4073a3:	pop    ebx
  4073a4:	dec    ebx
  4073a5:	jge    0x407381
  4073a7:	(bad)  
  4073a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073aa:	mov    al,0xc2
  4073ac:	xchg   edx,eax
  4073ad:	pop    ebx
  4073ae:	out    dx,eax
  4073af:	add    eax,0xa2ee0cb3
  4073b4:	ins    DWORD PTR es:[edi],dx
  4073b5:	inc    edi
  4073b6:	xor    DWORD PTR [ebx],ebx
  4073b8:	jbe    0x4073a7
  4073ba:	fbld   TBYTE PTR ds:0x2039d386
  4073c0:	std    
  4073c1:	in     al,dx
  4073c2:	and    BYTE PTR [ecx+ecx*2],bh
  4073c5:	push   ds
  4073c6:	or     ah,0x41
  4073c9:	iret   
  4073ca:	fst    QWORD PTR [ebx-0x1588305]
  4073d0:	lods   eax,DWORD PTR ds:[esi]
  4073d1:	pop    ebp
  4073d2:	dec    DWORD PTR [edi-0x3c]
  4073d5:	rcr    BYTE PTR [edi],cl
  4073d7:	hlt    
  4073d8:	push   es
  4073d9:	jle    0x407441
  4073db:	dec    ebp
  4073dc:	sbb    esp,DWORD PTR [ebx+0x7a]
  4073df:	test   al,0x2d
  4073e2:	push   edi
  4073e3:	adc    BYTE PTR [ecx],ah
  4073e5:	scas   eax,DWORD PTR es:[edi]
  4073e6:	mov    ecx,0xd15c5736
  4073eb:	pusha  
  4073ec:	mov    BYTE PTR [ebx],dl
  4073ee:	push   0xffffffb4
  4073f0:	push   esi
  4073f1:	jg     0x407467
  4073f3:	aam    0xa9
  4073f5:	cdq    
  4073f6:	iret   
  4073f7:	mov    al,0xb9
  4073f9:	lea    ebp,[ecx*1-0x4615db2c]
  407400:	push   ds
  407401:	cli    
  407402:	ror    BYTE PTR [edi-0x7504f9fa],0x17
  407409:	jbe    0x4073e4
  40740b:	push   esi
  40740c:	ffreep st(1)
  40740e:	push   ebx
  40740f:	xchg   ebx,eax
  407410:	push   es
  407411:	cmp    bl,BYTE PTR [eax+0x23]
  407414:	stos   BYTE PTR es:[edi],al
  407415:	shl    DWORD PTR [eax-0x17],cl
  407418:	aad    0xf6
  40741a:	xchg   ebx,eax
  40741b:	dec    esp
  40741c:	lods   al,BYTE PTR ds:[esi]
  40741d:	jae    0x4073f1
  40741f:	es js  0x4073c0
  407422:	dec    edx
  407423:	or     al,0xe1
  407425:	jmp    0x22cf:0x9143af22
  40742c:	push   ds
  40742d:	xor    al,0x6b
  40742f:	cmp    al,0xde
  407431:	ss inc esi
  407433:	and    BYTE PTR [eax],ch
  407435:	addr16 inc ecx
  407437:	adc    ecx,eax
  407439:	pop    edi
  40743a:	mov    dl,0xc
  40743c:	retf   0xfe07
  40743f:	cmc    
  407440:	lods   al,BYTE PTR ds:[esi]
  407441:	(bad)  
  407442:	sub    edi,ebx
  407444:	push   edx
  407445:	xor    al,0x24
  407447:	fs out 0xba,al
  40744a:	push   cs
  40744b:	nop
  40744c:	dec    ebx
  40744d:	(bad)  
  40744e:	xchg   ebp,eax
  40744f:	inc    esi
  407450:	pop    es
  407451:	popf   
  407452:	jns    0x4074c2
  407454:	jb     0x407403
  407456:	pop    edi
  407457:	cwde   
  407458:	inc    ebx
  407459:	lds    esi,FWORD PTR [esi-0x2b96e786]
  40745f:	sbb    eax,0xbcffd088
  407464:	push   eax
  407465:	jno    0x40746c
  407467:	test   eax,0xb400724d
  40746c:	xchg   esi,eax
  40746d:	inc    eax
  40746e:	scas   al,BYTE PTR es:[edi]
  40746f:	push   es
  407470:	cmp    dl,BYTE PTR ss:[edi+edx*8+0x418659a2]
  407478:	add    BYTE PTR [ecx],ah
  40747a:	loopne 0x407430
  40747c:	sub    edi,DWORD PTR ds:0x945a524e
  407482:	jp     0x407462
  407484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407485:	xor    cl,bl
  407487:	mov    al,ds:0x419425d9
  40748c:	call   0xb09448e
  407491:	sub    ebx,DWORD PTR [eax]
  407493:	sbb    al,0x1d
  407495:	icebp  
  407496:	xor    eax,0x10ea2c85
  40749b:	xchg   edi,eax
  40749c:	out    dx,eax
  40749d:	js     0x4074f3
  40749f:	push   es
  4074a0:	xchg   esi,eax
  4074a1:	sti    
  4074a2:	mov    ds:0xdd254b5d,eax
  4074a7:	add    DWORD PTR [edi+0x7bd12f5b],ecx
  4074ad:	sub    DWORD PTR [ebp+esi*2-0x23627141],eax
  4074b4:	test   BYTE PTR ss:[ebx],dh
  4074b7:	cwde   
  4074b8:	popa   
  4074b9:	loopne 0x4074f7
  4074bb:	sar    BYTE PTR [edi-0x7f],cl
  4074be:	fucomip st,st(3)
  4074c0:	sbb    esi,esi
  4074c2:	idiv   DWORD PTR [ebp+0x3021aea2]
  4074c8:	push   eax
  4074c9:	mov    dl,0x92
  4074cb:	gs push ss
  4074cd:	lahf   
  4074ce:	ins    DWORD PTR es:[edi],dx
  4074cf:	jl     0x407487
  4074d1:	ror    esi,cl
  4074d3:	out    dx,al
  4074d4:	ja     0x4074c6
  4074d6:	(bad)  
  4074d7:	xor    al,0xa1
  4074d9:	sbb    eax,0xfcf1171c
  4074de:	inc    esi
  4074e0:	sub    ch,BYTE PTR [ecx]
  4074e2:	mov    edx,0x143022b3
  4074e7:	mov    edx,0x9de1dfbc
  4074ec:	push   eax
  4074ed:	jmp    0x407471
  4074ef:	jbe    0x4074dd
  4074f1:	lock enter 0x911f,0xa1
  4074f6:	or     BYTE PTR [eax],0x7b
  4074f9:	xchg   ebx,eax
  4074fa:	js     0x4074cb
  4074fc:	jmp    0xdafb17e9
  407501:	dec    esp
  407502:	ins    BYTE PTR es:[edi],dx
  407503:	je     0x4074f9
  407505:	jae    0x4074f6
  407507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407508:	ret    
  407509:	data16 (bad) 
  40750b:	xor    BYTE PTR [ebx-0xc],dl
  40750e:	lods   eax,DWORD PTR ds:[esi]
  40750f:	mov    ecx,0x24e10da1
  407514:	pop    ebp
  407515:	data16 xlat BYTE PTR ds:[ebx]
  407517:	test   cl,cl
  407519:	jmp    0x407580
  40751b:	push   esi
  40751c:	mov    ebx,0x458ac1cf
  407521:	inc    esi
  407522:	jmp    0x4074b5
  407524:	icebp  
  407525:	and    ebp,ebx
  407527:	imul   ecx,DWORD PTR ds:0x3a647dab,0xffffffc9
  40752e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40752f:	pop    eax
  407530:	mov    esi,0xcaf00a6d
  407535:	sti    
  407536:	cmp    DWORD PTR [esi],edi
  407538:	add    al,0x6b
  40753a:	rcl    BYTE PTR [edi],0x6c
  40753d:	sti    
  40753e:	jl     0x407559
  407540:	out    dx,eax
  407541:	jmp    0xfccd3e56
  407546:	or     ebp,DWORD PTR [esi-0x540ed544]
  40754c:	or     eax,0x843dfada
  407551:	dec    ecx
  407552:	and    esp,ecx
  407554:	and    BYTE PTR [ebx],cl
  407556:	aam    0xc8
  407558:	adc    BYTE PTR [eax],ah
  40755a:	inc    edi
  40755b:	dec    ecx
  40755c:	push   ds
  40755d:	les    eax,FWORD PTR [ebx+ebx*1]
  407560:	sbb    ebp,DWORD PTR [edx-0x28]
  407563:	jbe    0x407537
  407565:	data16 das 
  407567:	cs pop esi
  407569:	or     ecx,eax
  40756b:	fsqrt  
  40756d:	mov    ebx,0x15b52739
  407572:	xchg   edx,edx
  407574:	and    ebp,DWORD PTR [ecx+0xd942ad3]
  40757a:	mov    eax,0x1d11663
  40757f:	out    dx,eax
  407580:	int3   
  407581:	mov    al,0x6b
  407583:	inc    eax
  407584:	xor    BYTE PTR [esi-0xd38f76c],dh
  40758a:	retf   0x5030
  40758d:	test   DWORD PTR [ebx+0x67cf05c3],esi
  407593:	pop    esp
  407594:	xchg   esi,eax
  407595:	inc    edi
  407596:	push   esp
  407597:	sbb    bh,BYTE PTR [esi-0x7]
  40759a:	dec    edx
  40759b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40759c:	mov    al,0xeb
  40759e:	(bad)  
  4075a0:	mov    eax,fs
  4075a2:	add    ecx,DWORD PTR [ecx-0x6475fe32]
  4075a8:	mov    bh,0x6d
  4075aa:	jae    0x4075a4
  4075ac:	sub    ecx,DWORD PTR [edi-0x361a5ad6]
  4075b2:	xchg   ecx,eax
  4075b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075b4:	fdivrp st(1),st
  4075b6:	xchg   edi,eax
  4075b7:	hlt    
  4075b8:	aaa    
  4075b9:	test   BYTE PTR [edi],cl
  4075bb:	sahf   
  4075bc:	sbb    al,0xa
  4075be:	adc    al,0x95
  4075c0:	sbb    edi,DWORD PTR ds:0xb34bfd82
  4075c6:	dec    ebp
  4075c7:	loopne 0x4075f3
  4075c9:	push   edi
  4075ca:	xor    edx,DWORD PTR [edi+0x54b31176]
  4075d0:	icebp  
  4075d1:	sbb    cl,BYTE PTR [edi]
  4075d3:	shr    ah,1
  4075d5:	pop    ebp
  4075d6:	or     BYTE PTR [eax-0x4a],cl
  4075d9:	or     BYTE PTR cs:[edi],dl
  4075dc:	aam    0x14
  4075de:	jl     0x40757a
  4075e0:	pop    edi
  4075e1:	out    dx,al
  4075e2:	out    0x0,al
  4075e4:	and    eax,0xab233ec8
  4075e9:	pushf  
  4075ea:	std    
  4075eb:	div    ebp
  4075ed:	test   DWORD PTR [edi],edi
  4075ef:	les    eax,FWORD PTR ds:0x320df7b0
  4075f5:	push   cs
  4075f6:	loopne 0x40765a
  4075f8:	pop    ebx
  4075f9:	loope  0x407650
  4075fb:	loope  0x40766c
  4075fd:	and    eax,0x39eefb90
  407602:	retf   
  407603:	cs aas 
  407605:	inc    esp
  407606:	jp     0x4075a1
  407608:	pop    ebp
  407609:	mov    WORD PTR [ebp+0xb],cs
  40760c:	je     0x4075ba
  40760e:	fild   QWORD PTR [ecx+0x7a763e46]
  407614:	sti    
  407615:	inc    edi
  407616:	push   ecx
  407617:	xchg   edx,eax
  407618:	pushf  
  407619:	out    dx,eax
  40761a:	rol    BYTE PTR [edi+0x50],1
  40761d:	rcr    BYTE PTR [edx],1
  40761f:	(bad)  
  407620:	lods   al,BYTE PTR ds:[esi]
  407621:	es cli 
  407623:	shl    esp,1
  407625:	jns    0x40768e
  407627:	das    
  407628:	lds    eax,FWORD PTR [ebp+eax*8-0x355f72ea]
  40762f:	push   ecx
  407630:	cli    
  407631:	loop   0x407691
  407633:	mov    esi,0x23059e0
  407638:	ret    
  407639:	add    cl,dh
  40763b:	mov    ds:0xa31e0a76,al
  407640:	and    eax,0xb85f86e1
  407645:	mov    ch,0xda
  407647:	sub    esi,esi
  407649:	(bad)  
  40764a:	mov    DWORD PTR gs:[esi+0x4],edi
  40764e:	jmp    0x4083e6
  407653:	mov    eax,DWORD PTR [ebp-0x24]
  407656:	add    eax,DWORD PTR [ebp-0x4]
  407659:	mov    DWORD PTR [ebp-0x28],eax
  40765c:	mov    eax,DWORD PTR [ebp-0x28]
  40765f:	mov    eax,DWORD PTR [ebp-0x4]
  407662:	mov    eax,DWORD PTR [ebp-0x28]
  407665:	mov    eax,DWORD PTR [eax+0xc]
  407668:	mov    edx,DWORD PTR [ebp-0x4]
  40766b:	movzx  eax,WORD PTR [edx+eax*1]
  40766f:	cdq    
  407670:	shld   edx,eax,0x2
  407674:	xor    edx,ecx
  407676:	mov    DWORD PTR [ebp+0xc],edx
  407679:	jmp    0x407a1a
  40767e:	sbb    BYTE PTR [edi-0x2f],cl
  407681:	pop    esi
  407682:	call   0x3e77:0x3eb7bc64
  407689:	fucom  st(6)
  40768b:	adc    eax,0x57bed168
  407690:	mov    esi,0xbec4bdbe
  407695:	mov    esi,0xd9611bb6
  40769a:	dec    esi
  40769b:	gs (bad) 
  40769d:	and    al,0xfc
  40769f:	nop
  4076a0:	adc    dh,BYTE PTR [edi+0xc]
  4076a3:	std    
  4076a4:	jne    0x4076ff
  4076a6:	sub    eax,DWORD PTR [ebp+0x26]
  4076a9:	out    0x7c,eax
  4076ab:	pop    esp
  4076ac:	mov    esi,0x63f2829a
  4076b1:	sar    dl,1
  4076b3:	push   ds
  4076b4:	pop    ss
  4076b5:	mov    bl,0xd5
  4076b7:	add    BYTE PTR [ebp+0x3f],ch
  4076ba:	icebp  
  4076bb:	test   DWORD PTR [ebx+0x6a],ecx
  4076be:	or     al,0x4a
  4076c0:	xchg   edx,eax
  4076c1:	jmp    0x407653
  4076c3:	xlat   BYTE PTR ds:[ebx]
  4076c4:	xchg   ecx,eax
  4076c5:	add    ebp,esp
  4076c7:	sbb    al,0xfd
  4076c9:	cs dec edi
  4076cb:	jbe    0x40768f
  4076cd:	(bad)  
  4076ce:	jg     0x40772e
  4076d0:	mov    bh,BYTE PTR [eax-0x31]
  4076d3:	jge    0x407661
  4076d5:	lds    esp,FWORD PTR [edi+0x42]
  4076d8:	jp     0x40771f
  4076da:	adc    ecx,DWORD PTR gs:[ecx+0x71]
  4076de:	dec    esp
  4076df:	sahf   
  4076e0:	sbb    DWORD PTR [esp+eiz*2],ecx
  4076e3:	arpl   dx,dx
  4076e5:	and    eax,0x4e9c4f2f
  4076ea:	sahf   
  4076eb:	nop
  4076ec:	push   edi
  4076ed:	jae    0x4076b7
  4076ef:	stc    
  4076f0:	iret   
  4076f1:	loop   0x4076cf
  4076f3:	adc    eax,0x7019539d
  4076f8:	stc    
  4076f9:	stc    
  4076fa:	add    BYTE PTR es:[esi],dh
  4076fd:	pop    es
  4076fe:	or     DWORD PTR [ecx],ebp
  407700:	xchg   ebx,eax
  407701:	xor    DWORD PTR [edx+0x5b],ebp
  407704:	jb     0x407704
  407706:	push   esp
  407707:	dec    esi
  407708:	pop    DWORD PTR [ebx+esi*8-0x1394ee43]
  40770f:	les    edx,FWORD PTR [ebp+0x43]
  407712:	xchg   edi,eax
  407713:	ins    DWORD PTR es:[edi],dx
  407714:	add    DWORD PTR [esi],edx
  407716:	jbe    0x4076eb
  407718:	push   0xffffff95
  40771a:	(bad)  
  40771b:	pushf  
  40771c:	sti    
  40771d:	fcomip st,st(0)
  40771f:	stos   DWORD PTR es:[edi],eax
  407720:	dec    ecx
  407721:	or     al,0xdf
  407723:	add    eax,0xbab21429
  407728:	xlat   BYTE PTR ds:[ebx]
  407729:	pop    esi
  40772a:	mov    al,ds:0x42678eb0
  40772f:	push   0x57f079f
  407734:	push   esi
  407735:	sbb    DWORD PTR [edx+eax*8+0x56],esi
  407739:	pop    edi
  40773a:	xchg   esp,eax
  40773b:	into   
  40773c:	mov    edi,0x5b258a9d
  407741:	stos   DWORD PTR es:[edi],eax
  407742:	mov    ecx,0xf136e07d
  407747:	mov    ebp,0x82f7079a
  40774c:	cs test al,0x7b
  40774f:	mov    dl,0xc4
  407751:	mov    ds:0xb8ca1c8c,al
  407756:	cmp    edx,DWORD PTR [edi]
  407758:	out    dx,al
  407759:	lock mov WORD PTR [esi+0x246f54b5],ss
  407760:	rcr    BYTE PTR [edx],1
  407762:	hlt    
  407763:	inc    esp
  407764:	leave  
  407765:	pop    ds
  407766:	stc    
  407767:	fsubr  DWORD PTR [ecx+0x68a204b7]
  40776d:	ss sahf 
  40776f:	in     eax,dx
  407770:	lock jp 0x4077df
  407773:	sub    BYTE PTR [ecx+0x60],ah
  407776:	push   cs
  407777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407778:	test   BYTE PTR [ebp-0x1b10c5f],cl
  40777e:	jmp    0x257d:0x76502b2
  407785:	and    bh,BYTE PTR [bp+0x11e8]
  40778a:	lods   al,BYTE PTR ds:[esi]
  40778b:	nop
  40778c:	pmullw mm7,QWORD PTR ds:0xa232dc2e
  407793:	cmp    DWORD PTR [ebx],0xde91b259
  407799:	aad    0x28
  40779b:	xchg   edx,eax
  40779c:	gs test eax,0x8d977be5
  4077a2:	jae    0x4077e6
  4077a4:	push   0x98d8dd7f
  4077a9:	in     al,dx
  4077aa:	xchg   DWORD PTR [eax+0x495edf5b],esi
  4077b0:	pop    esp
  4077b1:	or     esi,DWORD PTR [ecx-0x2d]
  4077b4:	push   cs
  4077b5:	std    
  4077b6:	sbb    al,0xfd
  4077b8:	push   esi
  4077b9:	sti    
  4077ba:	cs xor eax,0xf0b17168
  4077c0:	inc    esp
  4077c1:	and    DWORD PTR [ecx-0x3a],ebx
  4077c4:	in     al,dx
  4077c5:	nop
  4077c6:	xchg   esp,eax
  4077c7:	sub    DWORD PTR [edi+0x60],edx
  4077ca:	mov    ebp,0xda5dbfe6
  4077cf:	mov    WORD PTR [ecx-0x4e674768],cs
  4077d5:	mov    esp,ebp
  4077d7:	ins    DWORD PTR es:[edi],dx
  4077d8:	inc    edx
  4077d9:	retf   0xbcb0
  4077dc:	jmp    FWORD PTR [ecx-0x2d06ccd1]
  4077e2:	int3   
  4077e3:	gs sub esp,esi
  4077e6:	ss mov es,ecx
  4077e9:	mov    edx,0x47a9ec3d
  4077ee:	stos   BYTE PTR es:[edi],al
  4077ef:	dec    esp
  4077f0:	dec    edx
  4077f1:	push   edi
  4077f2:	jecxz  0x40783a
  4077f4:	cs dec ecx
  4077f6:	sub    DWORD PTR [esi+ecx*1],esi
  4077f9:	fistp  DWORD PTR [edi-0x3b]
  4077fc:	adc    cl,ah
  4077fe:	push   ecx
  4077ff:	iret   
  407800:	out    0xb4,al
  407802:	(bad)  
  407804:	add    dh,BYTE PTR [edx-0x28]
  407807:	xchg   ebp,eax
  407808:	in     al,0x64
  40780a:	(bad)  
  40780b:	push   esi
  40780c:	in     al,0xf3
  40780e:	ins    BYTE PTR es:[edi],dx
  40780f:	div    ecx
  407811:	sbb    ah,bh
  407813:	cmp    ebx,DWORD PTR [edx]
  407815:	cmc    
  407816:	pop    esi
  407817:	dec    esi
  407818:	xchg   ebx,eax
  407819:	jl     0x407805
  40781b:	aad    0xb1
  40781d:	jle    0x407817
  40781f:	fst    DWORD PTR [esi-0x67134954]
  407825:	mov    ebp,0xa126d4b3
  40782a:	mov    ds:0x5d0c514d,al
  40782f:	outs   dx,BYTE PTR ds:[esi]
  407830:	shr    DWORD PTR [eax-0x7c5b2a31],1
  407836:	call   0xec02:0xfd0ee53b
  40783d:	mov    eax,0x58a3aef4
  407842:	pop    edx
  407843:	cmp    DWORD PTR [ecx],ebp
  407845:	mov    db5,ebp
  407848:	test   eax,0xe951d5f1
  40784d:	jo     0x4078cb
  40784f:	clc    
  407850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407851:	loop   0x40783b
  407853:	push   0x462c93c5
  407858:	mov    ebx,0xff5d6a30
  40785d:	and    bh,BYTE PTR [edx+ecx*1]
  407860:	pop    ds
  407861:	mov    ds:0xf20c10a4,al
  407866:	sub    BYTE PTR gs:[edx+0x5a],0x6c
  40786b:	dec    ebp
  40786c:	das    
  40786d:	fdiv   st,st(1)
  40786f:	ffreep st(6)
  407871:	cli    
  407872:	in     al,dx
  407873:	push   0xc81f77cd
  407878:	ja     0x407866
  40787a:	and    al,0xa5
  40787c:	addr16 mov bx,0x52fb
  407881:	adc    DWORD PTR [edx+esi*4+0x72],ecx
  407885:	jmp    0xbe68da0c
  40788a:	mov    ebx,0x21b031e6
  40788f:	fdivrp st(3),st
  407891:	adc    eax,0x26d03829
  407896:	scas   eax,DWORD PTR es:[edi]
  407897:	mov    ds:0xe4e971f8,eax
  40789c:	lea    ebx,[esi]
  40789e:	int3   
  40789f:	ret    
  4078a0:	push   ss
  4078a1:	and    dl,BYTE PTR [edx+edi*1+0x4c]
  4078a5:	xor    DWORD PTR [esi+ebx*1-0x72],0xffffff88
  4078aa:	sub    DWORD PTR [edx-0x72121a03],eax
  4078b0:	jge    0x40789c
  4078b2:	dec    ebx
  4078b3:	push   esp
  4078b4:	mov    esi,DWORD PTR [esi+0x3f]
  4078b7:	add    eax,0x2b4109d1
  4078bc:	sbb    dl,ch
  4078be:	or     ah,BYTE PTR [ebx-0x3e]
  4078c1:	js     0x40788f
  4078c3:	adc    esp,DWORD PTR fs:[edi]
  4078c6:	push   ebx
  4078c7:	adc    al,0xa8
  4078c9:	rcr    DWORD PTR [ebp-0x12],1
  4078cc:	mov    dh,0x99
  4078ce:	inc    eax
  4078cf:	hlt    
  4078d0:	call   0x8e235a6c
  4078d5:	aad    0xd2
  4078d7:	jb     0x407876
  4078d9:	pop    ds
  4078da:	and    esi,DWORD PTR [ebp+ebx*8+0x7e]
  4078de:	iret   
  4078df:	xchg   ebx,eax
  4078e0:	mov    cl,BYTE PTR [eax*2+0x54f2ad6e]
  4078e7:	rcl    DWORD PTR [edx-0x5ba022c7],0x7d
  4078ee:	call   0x59a1:0xae9fa5f4
  4078f5:	stos   BYTE PTR es:[edi],al
  4078f6:	hlt    
  4078f7:	ins    BYTE PTR es:[edi],dx
  4078f8:	pop    esi
  4078f9:	pop    ss
  4078fa:	out    dx,eax
  4078fb:	jl     0x4078c7
  4078fd:	neg    BYTE PTR [ecx]
  4078ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407900:	mov    bl,0xb5
  407902:	and    dl,BYTE PTR [esi]
  407904:	hlt    
  407905:	ret    
  407906:	lods   al,BYTE PTR ds:[esi]
  407907:	cs adc eax,0xbbce2744
  40790d:	jge    0x407967
  40790f:	fdivr  DWORD PTR [ecx+0x475f98bb]
  407915:	add    BYTE PTR [eax-0x128dd1b5],0x75
  40791c:	enter  0x8c2f,0x4b
  407920:	pop    es
  407921:	fcmovbe st,st(6)
  407923:	mov    esi,0x1919bd69
  407928:	ja     0x40796f
  40792a:	leave  
  40792b:	enter  0xfc8b,0x98
  40792f:	push   0x22eede03
  407934:	xchg   edi,eax
  407935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407936:	dec    edi
  407937:	aaa    
  407938:	mov    al,ds:0xc60d1e22
  40793d:	sub    eax,0x8e597bdb
  407942:	outs   dx,BYTE PTR ds:[esi]
  407943:	fidiv  WORD PTR [ecx-0x9c2455c]
  407949:	jnp    0x407938
  40794b:	js     0x40797d
  40794d:	cwde   
  40794e:	int3   
  40794f:	rcr    BYTE PTR [edx-0x2a8c38b1],cl
  407955:	hlt    
  407956:	push   ds
  407957:	mov    ebp,0x981d09e2
  40795c:	or     eax,DWORD PTR [edi+0x32]
  40795f:	dec    esp
  407960:	das    
  407961:	push   ecx
  407962:	fmul   DWORD PTR [edx+0x5c16b909]
  407968:	lods   eax,DWORD PTR ds:[esi]
  407969:	aad    0x3c
  40796b:	jb     0x40798e
  40796d:	cmp    dl,ah
  40796f:	in     eax,dx
  407970:	std    
  407971:	jecxz  0x407932
  407973:	sub    bl,BYTE PTR [ecx+ecx*8+0x6897c796]
  40797a:	or     BYTE PTR [edx-0x51],bh
  40797d:	cmp    al,0xd0
  40797f:	cmp    al,0x5
  407981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407982:	enter  0x6187,0x41
  407986:	and    DWORD PTR [edi+0x7b3d7c7b],ebp
  40798c:	and    al,0x4f
  40798e:	xor    eax,0x6ce99202
  407993:	mov    ebp,0x1ecb992e
  407998:	fcmovne st,st(5)
  40799a:	add    bl,BYTE PTR [edi-0x29]
  40799d:	mov    DWORD PTR [bx],edi
  4079a0:	dec    eax
  4079a1:	pop    edi
  4079a2:	xchg   ecx,eax
  4079a3:	(bad)  
  4079a4:	jg     0x407942
  4079a6:	jae    0x407980
  4079a8:	jle    0x407956
  4079aa:	fwait
  4079ab:	scas   eax,DWORD PTR es:[edi]
  4079ac:	cmp    eax,DWORD PTR [ecx+0x31]
  4079af:	enter  0xc5bb,0xde
  4079b3:	out    0xa1,eax
  4079b5:	ror    BYTE PTR [ebx+0xf],1
  4079b8:	mov    dl,0x67
  4079ba:	sbb    al,0xe
  4079bc:	xchg   esi,eax
  4079bd:	dec    BYTE PTR [esi+0x4dc1572a]
  4079c3:	mov    dl,0xf8
  4079c5:	xor    DWORD PTR [ebp+0x7f],0x8764db8
  4079cc:	inc    esp
  4079cd:	shl    edx,1
  4079cf:	neg    DWORD PTR [ecx-0x6450ba9c]
  4079d5:	stos   BYTE PTR es:[edi],al
  4079d6:	std    
  4079d7:	ja     0x4079cc
  4079d9:	xchg   edi,eax
  4079da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079db:	aas    
  4079dc:	pop    ds
  4079dd:	hlt    
  4079de:	pop    esi
  4079df:	mov    ecx,0x441b0fc2
  4079e4:	xor    esi,DWORD PTR [esi-0x3a]
  4079e7:	int3   
  4079e8:	jns    0x4079cd
  4079ea:	repz pop ecx
  4079ec:	inc    ebp
  4079ed:	out    0xef,al
  4079ef:	aas    
  4079f0:	aam    0x35
  4079f2:	repnz loop 0x4079b5
  4079f5:	jo     0x407a11
  4079f7:	add    BYTE PTR [eax],bh
  4079f9:	aaa    
  4079fa:	(bad)  
  4079fb:	aad    0xe5
  4079fd:	fldenv [edx]
  4079ff:	sbb    BYTE PTR [eax-0x74],ah
  407a02:	cmp    DWORD PTR [eax-0x7c],ebx
  407a05:	jns    0x407a6d
  407a07:	inc    ebp
  407a08:	adc    ch,dh
  407a0a:	cmp    DWORD PTR [ecx-0x6c],edx
  407a0d:	aas    
  407a0e:	mov    al,0xda
  407a10:	jo     0x407a3e
  407a12:	add    DWORD PTR [esi+0x37477dcc],eax
  407a18:	(bad)  
  407a19:	mov    esi,0xc1a8558b
  407a1e:	loopne 0x407a22
  407a20:	mov    DWORD PTR [ebp+0x10],edx
  407a23:	mov    edx,DWORD PTR [ebp-0x54]
  407a26:	xor    eax,0xcb79b576
  407a2b:	mov    DWORD PTR [ebp+0x14],edx
  407a2e:	cmp    eax,DWORD PTR [ebp+0x10]
  407a31:	jne    0x408352
  407a37:	mov    eax,edx
  407a39:	cmp    DWORD PTR [ebp+0xc],eax
  407a3c:	jne    0x408352
  407a42:	mov    DWORD PTR [ebp+0x8],0xcb79b576
  407a49:	mov    DWORD PTR [ebp+0xc],ecx
  407a4c:	mov    DWORD PTR [ebp-0x60],0xcb79b572
  407a53:	mov    DWORD PTR [ebp-0x5c],ecx
  407a56:	mov    DWORD PTR [ebp-0x48],0xcb79b57e
  407a5d:	mov    DWORD PTR [ebp-0x44],ecx
  407a60:	mov    DWORD PTR [ebp-0x38],0xcb79b57a
  407a67:	mov    DWORD PTR [ebp-0x34],ecx
  407a6a:	mov    eax,DWORD PTR [ebp+0x8]
  407a6d:	jmp    0x407e0e
  407a72:	cmp    eax,0x2444c2a4
  407a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a78:	inc    eax
  407a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a7a:	ret    0x7a7b
  407a7d:	xchg   edx,eax
  407a7e:	aaa    
  407a7f:	xchg   BYTE PTR [edx],al
  407a81:	fnstsw WORD PTR [ebp-0x424141a3]
  407a87:	les    edi,FWORD PTR [esi-0x28239242]
  407a8d:	mov    WORD PTR [eax],gs
  407a8f:	sub    DWORD PTR [ebp-0x189ae341],eax
  407a95:	pop    ecx
  407a96:	(bad)  
  407a97:	ds and al,0x39
  407a9a:	pop    ds
  407a9b:	sbb    ch,BYTE PTR ss:[edx+0x28b07587]
  407aa2:	pop    eax
  407aa3:	inc    DWORD PTR [eax-0x71]
  407aa6:	dec    edi
  407aa7:	addr16 aam 0xaf
  407aaa:	pop    ecx
  407aab:	dec    ebx
  407aac:	pop    ds
  407aad:	aad    0xef
  407aaf:	push   edi
  407ab0:	mov    DWORD PTR [edx+eax*4],esi
  407ab3:	int3   
  407ab4:	push   ebp
  407ab5:	int3   
  407ab6:	popa   
  407ab7:	cmp    eax,0xd2133f97
  407abc:	push   ss
  407abd:	mov    ds:0xa1850476,eax
  407ac2:	imul   esi
  407ac4:	cwde   
  407ac5:	sub    eax,0x5905ae30
  407aca:	sub    al,0xf1
  407acc:	dec    eax
  407acd:	xchg   BYTE PTR [edi+0x1a65c6cc],dh
  407ad3:	jmp    0x407a9a
  407ad5:	fist   DWORD PTR [edi]
  407ad7:	ins    DWORD PTR es:[edi],dx
  407ad8:	mul    esi
  407ada:	add    eax,0xcdb6b388
  407adf:	mov    eax,ds:0x2c69ecd8
  407ae4:	inc    esi
  407ae5:	mov    ds:0x5a201f0e,al
  407aea:	out    dx,eax
  407aeb:	pop    esi
  407aec:	or     DWORD PTR [edx+edi*2],edi
  407aef:	and    eax,0x65baa0e0
  407af4:	sub    eax,0x8b10ef74
  407af9:	(bad)  
  407afa:	popa   
  407afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407afc:	cwde   
  407afd:	mov    esi,0xb8de21d3
  407b02:	cmc    
  407b03:	in     eax,0xac
  407b05:	push   ss
  407b06:	adc    DWORD PTR [esi-0x2c16e901],esp
  407b0c:	dec    ebx
  407b0d:	sub    bh,dl
  407b0f:	js     0x407b8b
  407b11:	test   al,0xa1
  407b13:	xor    DWORD PTR [ebx+edx*1-0xa],0x84b2a746
  407b1b:	nop
  407b1c:	add    ecx,DWORD PTR [edi+edx*2]
  407b1f:	jmp    0x9266:0xbd338e3d
  407b26:	inc    ebp
  407b27:	call   0x8249:0x92628fb8
  407b2e:	pushf  
  407b2f:	out    0xf0,al
  407b31:	scas   eax,DWORD PTR es:[edi]
  407b32:	push   edi
  407b33:	retf   0x5d7a
  407b36:	jb     0x407b35
  407b38:	popa   
  407b39:	pop    edi
  407b3a:	pop    ebx
  407b3b:	das    
  407b3c:	ins    DWORD PTR es:[edi],dx
  407b3d:	ins    BYTE PTR es:[edi],dx
  407b3e:	push   esp
  407b3f:	stos   DWORD PTR es:[edi],eax
  407b40:	mov    esi,0x27c28b8b
  407b45:	data16 cmp al,0xc4
  407b48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b49:	sbb    DWORD PTR [edi],0xd
  407b4c:	and    DWORD PTR [edx-0x5a],edx
  407b4f:	int    0xc9
  407b51:	retf   
  407b52:	js     0x407ba3
  407b54:	jg     0x407b3f
  407b56:	dec    esp
  407b57:	push   edi
  407b58:	push   ecx
  407b59:	outs   dx,BYTE PTR ds:[esi]
  407b5a:	ror    BYTE PTR [esi-0x2e],cl
  407b5d:	jbe    0x407bd1
  407b5f:	push   edi
  407b60:	in     eax,0xfc
  407b62:	leave  
  407b63:	jl     0x407baa
  407b65:	push   edi
  407b66:	ds loope 0x407b25
  407b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b6a:	mov    dh,0x1
  407b6c:	fstp   TBYTE PTR [ebx+0x49fd9245]
  407b72:	loopne 0x407b5b
  407b74:	dec    edx
  407b75:	fidivr DWORD PTR [eax-0x6fbb586b]
  407b7b:	aam    0xe4
  407b7d:	(bad)  
  407b7e:	mov    bh,0x86
  407b80:	aaa    
  407b81:	cmp    BYTE PTR [ebx-0x4afe6fe0],bh
  407b87:	lds    ecx,FWORD PTR [esi+0x31]
  407b8a:	jno    0x407b99
  407b8c:	sub    BYTE PTR [ecx+0x5b],dh
  407b8f:	loopne 0x407bab
  407b91:	(bad)  
  407b92:	test   al,0xaa
  407b94:	addr16 inc edi
  407b96:	sub    edi,DWORD PTR [edi-0x60d88a50]
  407b9c:	(bad)
  407ba0:	scas   al,BYTE PTR es:[edi]
  407ba1:	outs   dx,BYTE PTR ds:[esi]
  407ba2:	pop    ds
  407ba3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ba4:	sar    BYTE PTR [esi-0x7],cl
  407ba7:	mov    esp,0xf3e2fcd9
  407bac:	sub    ah,BYTE PTR [ebp+0x6b584de7]
  407bb2:	mov    gs,WORD PTR [eax+0x4db1159b]
  407bb8:	mov    bh,0x96
  407bba:	or     al,0xe8
  407bbc:	lahf   
  407bbd:	pop    esi
  407bbe:	inc    ebp
  407bbf:	jb     0x407c2c
  407bc1:	push   edi
  407bc2:	mov    eax,DWORD PTR [ebx]
  407bc4:	in     eax,0x71
  407bc6:	sub    bl,dl
  407bc8:	jae    0x407b8a
  407bca:	jae    0x407bbf
  407bcc:	xor    al,BYTE PTR [edi]
  407bce:	div    BYTE PTR [esi+0x2d]
  407bd1:	dec    edi
  407bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bd3:	and    DWORD PTR [edi+esi*8+0x882e2da],ecx
  407bda:	or     DWORD PTR [esp+edi*1-0x7f],0xffffff88
  407bdf:	sbb    ecx,DWORD PTR [ebx-0x9]
  407be2:	leave  
  407be3:	hlt    
  407be4:	and    BYTE PTR [esi],bh
  407be6:	aam    0x35
  407be8:	cmp    al,0x25
  407bea:	cmp    eax,0xf243764a
  407bef:	jg     0x407b8b
  407bf1:	inc    esp
  407bf2:	pushf  
  407bf3:	dec    esi
  407bf4:	pop    esp
  407bf5:	fs loopne 0x407b9b
  407bf8:	mov    esp,0xa0574cba
  407bfd:	mov    eax,ds:0x2d600720
  407c02:	fcom   QWORD PTR [ecx+esi*2+0x21]
  407c06:	enter  0x14ea,0xb9
  407c0a:	mov    ds:0xc20d5f52,eax
  407c0f:	shr    eax,0xad
  407c12:	pop    ebx
  407c13:	pop    ebx
  407c14:	ins    BYTE PTR es:[edi],dx
  407c15:	out    0x41,al
  407c17:	push   cs
  407c18:	lods   al,BYTE PTR ds:[esi]
  407c19:	push   edx
  407c1a:	test   al,0xd8
  407c1c:	rol    BYTE PTR [ecx+0x6b923ab6],0x67
  407c23:	(bad)  
  407c24:	dec    esp
  407c25:	cmp    esi,DWORD PTR [ebx+0x41]
  407c28:	push   eax
  407c29:	mov    esi,0xb403c85c
  407c2e:	mov    edx,DWORD PTR [edx]
  407c30:	shl    DWORD PTR [edi],1
  407c32:	xchg   ebp,eax
  407c33:	scas   al,BYTE PTR es:[edi]
  407c34:	and    al,0x48
  407c36:	out    dx,al
  407c37:	sbb    DWORD PTR [edi-0x1e],edx
  407c3a:	and    BYTE PTR [edi-0x4ac6075b],al
  407c40:	add    BYTE PTR [eax+0x35],cl
  407c43:	(bad)  
  407c44:	xchg   ecx,eax
  407c45:	and    ah,BYTE PTR [esi+0x7267a951]
  407c4b:	mov    ds,WORD PTR [eax-0x9e2b543]
  407c51:	sub    DWORD PTR [eax],esi
  407c53:	fs push eax
  407c55:	xchg   ebp,eax
  407c56:	mov    edi,0xdb950372
  407c5b:	(bad)  
  407c5c:	std    
  407c5d:	sbb    eax,esi
  407c5f:	js     0x407c0d
  407c61:	loope  0x407c17
  407c63:	test   al,0x4
  407c65:	mov    al,0x8b
  407c67:	stos   DWORD PTR es:[edi],eax
  407c68:	push   cs
  407c69:	ja     0x407c81
  407c6b:	in     eax,0x2e
  407c6d:	gs cmp eax,0xe0a0f2fb
  407c73:	or     eax,0x81ee3a0e
  407c78:	adc    al,0x9a
  407c7a:	add    al,0x23
  407c7c:	dec    edi
  407c7d:	jb     0x407cd1
  407c7f:	push   ss
  407c80:	jg     0x407c5a
  407c82:	loope  0x407c96
  407c84:	outs   dx,BYTE PTR ds:[esi]
  407c85:	mov    BYTE PTR [esi+0x742b536e],ah
  407c8b:	jmp    0x3a75a94
  407c90:	call   0x70ed:0xaf2aea6b
  407c97:	xchg   DWORD PTR [edi-0x75],edx
  407c9a:	cdq    
  407c9b:	mov    ch,0x8d
  407c9d:	cmp    DWORD PTR [ebp-0x17],ecx
  407ca0:	xchg   edx,eax
  407ca1:	stc    
  407ca2:	cmc    
  407ca3:	jle    0x407cf6
  407ca5:	in     al,0x1e
  407ca7:	mov    dh,0x8d
  407ca9:	stos   BYTE PTR es:[edi],al
  407caa:	(bad)  
  407cab:	lock ja 0x407d2d
  407cae:	add    BYTE PTR [ecx-0x3f],dl
  407cb1:	jge    0x407c68
  407cb3:	mov    bh,BYTE PTR [edx+0x2b]
  407cb6:	mov    cl,0x5d
  407cb8:	mov    ds:0xd955f22b,eax
  407cbd:	cwde   
  407cbe:	jmp    0x4ae9e10d
  407cc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cc4:	sbb    BYTE PTR [ebp+0x3a],al
  407cc7:	push   edi
  407cc8:	inc    esi
  407cc9:	add    bl,BYTE PTR [edi-0x2d]
  407ccc:	push   esp
  407ccd:	pop    esp
  407cce:	jp     0x407cd9
  407cd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cd1:	jmp    0x118f:0x9e78fa27
  407cd8:	mov    al,ds:0x26a4a11a
  407cdd:	push   ebx
  407cde:	dec    ecx
  407cdf:	loope  0x407c96
  407ce1:	dec    eax
  407ce2:	cmp    BYTE PTR [edi+0x27],0x29
  407ce6:	scas   eax,DWORD PTR es:[edi]
  407ce7:	loopne 0x407d1e
  407ce9:	jbe    0x407d43
  407ceb:	mov    edx,0xb1648e42
  407cf0:	mov    esp,0xa3931f8b
  407cf5:	call   0x6ede9ace
  407cfa:	push   esp
  407cfb:	sahf   
  407cfc:	(bad)  
  407cfd:	add    DWORD PTR gs:[ecx],esp
  407d00:	and    al,0x5e
  407d02:	dec    ebp
  407d03:	lods   al,BYTE PTR ds:[esi]
  407d04:	sahf   
  407d05:	adc    BYTE PTR [edi],ch
  407d07:	ds mov ch,0x58
  407d0a:	push   0xef808c2b
  407d0f:	loop   0x407ca3
  407d11:	mov    edi,eax
  407d13:	adc    eax,0x12eec867
  407d18:	add    ch,0x23
  407d1b:	pop    esi
  407d1c:	add    DWORD PTR [esi],eax
  407d1e:	adc    BYTE PTR [esi-0x77],ah
  407d21:	sub    al,0x69
  407d23:	dec    edi
  407d24:	lds    esp,FWORD PTR [esi]
  407d26:	ss mov dl,ch
  407d29:	dec    ebp
  407d2a:	and    BYTE PTR [edi+edx*2-0x66],ah
  407d2e:	leave  
  407d2f:	pop    ebp
  407d30:	(bad)  
  407d31:	push   edx
  407d32:	adc    cl,BYTE PTR ds:0x3cfcbf18
  407d38:	mov    al,ds:0xe2972c85
  407d3d:	aaa    
  407d3e:	adc    dl,dl
  407d40:	mov    ecx,0x290c2fcd
  407d45:	push   ebp
  407d46:	ss aaa 
  407d48:	lahf   
  407d49:	dec    edi
  407d4a:	xor    DWORD PTR [eax+0x3a9cb3e],edx
  407d50:	sbb    BYTE PTR [ecx-0x6436297],ch
  407d56:	sub    dl,dh
  407d58:	ds mov edx,0x88f2078c
  407d5e:	lds    ecx,FWORD PTR [ebp-0x3f]
  407d61:	in     eax,0x24
  407d63:	add    BYTE PTR [edx-0x1a543c07],bh
  407d69:	lahf   
  407d6a:	addr16 cwde 
  407d6c:	sub    cl,BYTE PTR [ecx]
  407d6e:	test   al,0x34
  407d70:	add    eax,0x418cd1ee
  407d75:	pop    ss
  407d76:	add    eax,0x247b8389
  407d7b:	xor    cl,al
  407d7d:	jo     0x407db4
  407d7f:	inc    eax
  407d80:	nop
  407d81:	xor    ecx,DWORD PTR [eax-0x341070a1]
  407d87:	cld    
  407d88:	pusha  
  407d89:	lock jmp 0x407dd2
  407d8c:	gs jmp 0x5c0c543f
  407d92:	push   cs
  407d93:	lods   eax,DWORD PTR ds:[si]
  407d95:	or     eax,edx
  407d97:	mov    esi,0x79641e77
  407d9c:	dec    esp
  407d9d:	sub    edi,DWORD PTR [eax+ecx*8]
  407da0:	inc    edx
  407da1:	dec    ecx
  407da2:	ds inc esi
  407da4:	fstp   QWORD PTR [edx]
  407da6:	std    
  407da7:	in     eax,dx
  407da8:	cmp    eax,0x34ab8317
  407dad:	mov    bl,0xc0
  407daf:	or     DWORD PTR [edi-0x6034043b],0x61
  407db6:	in     eax,0xe1
  407db8:	sub    al,0x81
  407dba:	repnz pushf 
  407dbc:	pop    esi
  407dbd:	push   ebp
  407dbe:	push   cs
  407dbf:	fdiv   QWORD PTR [ecx+0x37]
  407dc2:	cmp    dh,BYTE PTR ds:0x5ef92320
  407dc8:	fwait
  407dc9:	sbb    BYTE PTR [edi],0x23
  407dcc:	addr16 xchg edx,eax
  407dce:	dec    edx
  407dcf:	popa   
  407dd0:	add    ch,BYTE PTR [eax+0x34d99f4f]
  407dd6:	xor    BYTE PTR [ebx],al
  407dd8:	call   0xcf50:0x74333df2
  407ddf:	aam    0x28
  407de1:	mov    ds:0x1407010f,eax
  407de6:	inc    edx
  407de7:	mov    dh,0x49
  407de9:	or     dl,BYTE PTR ds:0x7a2274a6
  407def:	sub    esp,DWORD PTR [esi-0x2e46dac4]
  407df5:	add    ah,BYTE PTR [esi+0x6a]
  407df8:	add    bh,BYTE PTR [edi+0xe30805]
  407dfe:	bound  esp,QWORD PTR [ebp-0x78]
  407e01:	dec    ebx
  407e02:	cwde   
  407e03:	push   ecx
  407e04:	jmp    0x407e24
  407e06:	xor    ah,BYTE PTR [ecx-0x71f51ea3]
  407e0c:	adc    al,0x9b
  407e0e:	mov    ecx,DWORD PTR [ebp+0xc]
  407e11:	shrd   eax,ecx,0x2
  407e15:	shr    ecx,0x2
  407e18:	mov    ecx,DWORD PTR [ebp+0x8]
  407e1b:	mov    edx,DWORD PTR [ebp+0xc]
  407e1e:	xor    eax,edi
  407e20:	shl    ecx,0x1e
  407e23:	xor    edx,edx
  407e25:	or     eax,edx
  407e27:	add    eax,DWORD PTR ds:0x422738
  407e2d:	mov    DWORD PTR [ebp+0x14],eax
  407e30:	mov    eax,DWORD PTR [ebp+0x8]
  407e33:	mov    ecx,DWORD PTR [ebp+0xc]
  407e36:	shrd   eax,ecx,0x2
  407e3a:	shr    ecx,0x2
  407e3d:	mov    ecx,DWORD PTR [ebp+0x8]
  407e40:	mov    edx,DWORD PTR [ebp+0xc]
  407e43:	xor    eax,edi
  407e45:	shl    ecx,0x1e
  407e48:	xor    edx,edx
  407e4a:	or     eax,edx
  407e4c:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e50:	mov    eax,DWORD PTR [ebp+0x14]
  407e53:	xor    BYTE PTR [eax],cl
  407e55:	mov    eax,DWORD PTR [ebp-0x60]
  407e58:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e5b:	shrd   eax,ecx,0x2
  407e5f:	shr    ecx,0x2
  407e62:	mov    ecx,DWORD PTR [ebp-0x60]
  407e65:	mov    edx,DWORD PTR [ebp-0x5c]
  407e68:	xor    eax,edi
  407e6a:	shl    ecx,0x1e
  407e6d:	xor    edx,edx
  407e6f:	or     eax,edx
  407e71:	add    eax,DWORD PTR ds:0x422738
  407e77:	mov    DWORD PTR [ebp+0x14],eax
  407e7a:	mov    eax,DWORD PTR [ebp-0x60]
  407e7d:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e80:	shrd   eax,ecx,0x2
  407e84:	shr    ecx,0x2
  407e87:	mov    ecx,DWORD PTR [ebp-0x60]
  407e8a:	mov    edx,DWORD PTR [ebp-0x5c]
  407e8d:	xor    eax,edi
  407e8f:	shl    ecx,0x1e
  407e92:	xor    edx,edx
  407e94:	or     eax,edx
  407e96:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e9a:	mov    eax,DWORD PTR [ebp+0x14]
  407e9d:	or     BYTE PTR [eax],cl
  407e9f:	mov    eax,DWORD PTR [ebp-0x48]
  407ea2:	mov    ecx,DWORD PTR [ebp-0x44]
  407ea5:	shrd   eax,ecx,0x2
  407ea9:	shr    ecx,0x2
  407eac:	mov    ecx,DWORD PTR [ebp-0x48]
  407eaf:	mov    edx,DWORD PTR [ebp-0x44]
  407eb2:	xor    eax,edi
  407eb4:	jmp    0x408255
  407eb9:	out    0x23,al
  407ebb:	pop    ss
  407ebc:	jns    0x407ed9
  407ebe:	jns    0x407e6b
  407ec0:	mov    bl,0xaa
  407ec2:	repz ror edi,0x77
  407ec6:	(bad)  
  407ec7:	int    0x90
  407ec9:	mov    esi,0xbdbebe65
  407ece:	les    edi,FWORD PTR [esi+0x91a70be]
  407ed4:	les    ebx,FWORD PTR [edx]
  407ed6:	adc    ah,BYTE PTR [edi-0x40e1466e]
  407edc:	pop    esi
  407edd:	arpl   si,ax
  407edf:	sub    BYTE PTR [edx],bh
  407ee1:	add    ebp,DWORD PTR [edi]
  407ee3:	fadd   DWORD PTR [edx+0x10]
  407ee6:	push   ecx
  407ee7:	sub    al,0x22
  407ee9:	lds    esi,FWORD PTR [edi-0x36]
  407eec:	lock and al,0xef
  407eef:	pop    ebp
  407ef0:	mov    gs,WORD PTR [edx]
  407ef2:	fcmove st,st(2)
  407ef4:	lahf   
  407ef5:	aas    
  407ef6:	shl    BYTE PTR [ecx],0xbb
  407ef9:	and    eax,0x6682a323
  407efe:	mov    ecx,0xb7067190
  407f03:	(bad)  
  407f04:	xor    DWORD PTR ds:[esp+eax*1-0x36],0x7fc5ea65
  407f0d:	stos   BYTE PTR es:[edi],al
  407f0e:	mov    dl,0x18
  407f10:	push   ebx
  407f11:	jp     0x407eb6
  407f13:	rcr    esp,0xa7
  407f16:	and    esi,0x7faecc4d
  407f1c:	sbb    al,0xc4
  407f1e:	jg     0x407ea9
  407f20:	shl    esp,1
  407f22:	sbb    ebp,ecx
  407f24:	sbb    al,0x13
  407f26:	inc    ebx
  407f27:	sbb    eax,0x9fa42e8e
  407f2c:	jo     0x407f36
  407f2e:	out    dx,eax
  407f2f:	fwait
  407f30:	mov    bh,bl
  407f32:	push   eax
  407f33:	jae    0x407f9b
  407f35:	sbb    BYTE PTR ds:0xe374d1cb,0x2b
  407f3c:	aas    
  407f3d:	dec    esi
  407f3e:	pop    ss
  407f3f:	sub    al,bl
  407f41:	sti    
  407f42:	cdq    
  407f43:	out    0xa,al
  407f45:	add    al,0xc1
  407f47:	iret   
  407f48:	cmp    al,0xdd
  407f4a:	daa    
  407f4b:	push   eax
  407f4c:	add    al,0x2f
  407f4e:	sbb    DWORD PTR [edi-0x7d],ebx
  407f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f52:	or     al,0x5e
  407f54:	inc    di
  407f56:	or     al,0x6b
  407f58:	or     DWORD PTR [edi-0x6],0xb0a6402
  407f5f:	xchg   ecx,eax
  407f60:	fsub   st(4),st
  407f62:	hlt    
  407f63:	sbb    al,0xa8
  407f65:	push   ebx
  407f66:	xor    al,BYTE PTR [eax]
  407f68:	cdq    
  407f69:	xlat   BYTE PTR ds:[ebx]
  407f6a:	and    BYTE PTR [ebx-0x201e2f9d],ch
  407f70:	mov    ebx,0x3460e843
  407f75:	enter  0xd982,0x2d
  407f79:	push   ebx
  407f7a:	test   al,0xa0
  407f7c:	test   DWORD PTR gs:[eax+ebx*8+0x24],0xebbebcff
  407f85:	add    al,0xb2
  407f87:	arpl   di,sp
  407f89:	in     eax,0x2a
  407f8b:	cmp    al,0x70
  407f8d:	(bad)  
  407f8e:	or     BYTE PTR [eax],ch
  407f90:	or     al,BYTE PTR [esi]
  407f92:	sub    ebp,DWORD PTR [ebx]
  407f94:	gs (bad) 
  407f96:	in     eax,dx
  407f97:	push   edi
  407f98:	inc    edi
  407f99:	cmp    DWORD PTR [edi+0x62],esi
  407f9c:	ins    BYTE PTR es:[edi],dx
  407f9d:	adc    ch,BYTE PTR [esi+0x3e]
  407fa0:	or     DWORD PTR [ebx-0x3fabfcc3],edx
  407fa6:	lea    esp,[eax+0x6bac693e]
  407fac:	into   
  407fad:	pushf  
  407fae:	jmp    0xfb51:0xed23850a
  407fb5:	and    al,0x76
  407fb7:	xchg   ebx,eax
  407fb8:	sbb    eax,0x9fd1b5ba
  407fbd:	inc    ebx
  407fbe:	call   DWORD PTR [edx]
  407fc0:	or     al,0xa1
  407fc2:	pop    ebx
  407fc3:	and    eax,0x2a83a281
  407fc8:	es (bad) 
  407fca:	xchg   ebp,eax
  407fcb:	(bad)  
  407fcd:	test   al,0x86
  407fcf:	mov    dl,0x17
  407fd1:	hlt    
  407fd2:	inc    ecx
  407fd3:	aad    0xb1
  407fd5:	stos   DWORD PTR es:[edi],eax
  407fd6:	mov    dh,0xb5
  407fd8:	(bad)  
  407fda:	inc    ebx
  407fdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fdc:	mov    ?,WORD PTR [eax]
  407fde:	outs   dx,BYTE PTR ds:[esi]
  407fdf:	fstp   DWORD PTR [edx-0x39840fdf]
  407fe5:	out    dx,al
  407fe6:	dec    esp
  407fe7:	cdq    
  407fe8:	fstp   QWORD PTR [eax-0x3a]
  407feb:	sub    BYTE PTR [ecx-0x7e],dl
  407fee:	stc    
  407fef:	iret   
  407ff0:	xchg   esi,eax
  407ff1:	sub    ah,BYTE PTR [ecx+0x7f]
  407ff4:	ror    DWORD PTR [ecx+0x6281e4a1],0xbe
  407ffb:	mov    bh,0xa1
  407ffd:	and    DWORD PTR [esi-0x5ef9ebf9],esp
  408003:	dec    esi
  408004:	inc    esi
  408005:	out    0xad,eax
  408007:	mov    dh,0xa9
  408009:	adc    BYTE PTR [esp+eax*2],bl
  40800c:	inc    edi
  40800d:	int3   
  40800e:	(bad)  
  40800f:	mov    ebx,0x9a383742
  408014:	mov    fs,WORD PTR [edi+0x6]
  408017:	ror    DWORD PTR [edx],0x1f
  40801a:	inc    ecx
  40801b:	mov    edx,0x9e8c963a
  408020:	push   edx
  408021:	xlat   BYTE PTR ds:[ebx]
  408022:	mov    esp,0x855c7a97
  408027:	push   ebp
  408028:	aad    0x43
  40802a:	cmp    DWORD PTR [ecx+0x6760cfd2],0x65
  408031:	test   DWORD PTR ds:0x4fde0ec6,0x6d8d34af
  40803b:	out    0x35,al
  40803d:	dec    ecx
  40803e:	mov    edi,0x4aa8b523
  408043:	xor    BYTE PTR [ebx-0xe],cl
  408046:	pop    ss
  408047:	or     ch,BYTE PTR [ebx+edi*2+0x546b51cc]
  40804e:	adc    bl,bh
  408050:	dec    esi
  408051:	pop    ss
  408052:	scas   al,BYTE PTR es:[edi]
  408053:	mov    edi,0x4587e569
  408058:	pop    esp
  408059:	xor    cl,BYTE PTR [edx-0x77]
  40805c:	scas   eax,DWORD PTR es:[edi]
  40805d:	jns    0x40807c
  40805f:	adc    DWORD PTR [edi-0x1ead540a],edi
  408065:	pop    ss
  408066:	stos   BYTE PTR es:[edi],al
  408067:	push   cs
  408068:	(bad)  [ecx+0x2d5eaa4c]
  40806e:	adc    BYTE PTR [eax+0x34],cl
  408071:	add    BYTE PTR [edi-0x3a768ec2],0xb
  408078:	shl    DWORD PTR gs:[ebp+0x10dad90],0xf5
  408080:	aaa    
  408081:	retf   0xba5c
  408084:	mov    dl,0xcf
  408086:	sbb    ah,BYTE PTR [ebx-0x59]
  408089:	retf   
  40808a:	in     al,dx
  40808b:	aas    
  40808c:	adc    BYTE PTR [edi-0x61],bl
  40808f:	xchg   edi,eax
  408090:	push   edi
  408091:	aam    0x3f
  408093:	out    dx,eax
  408094:	and    eax,DWORD PTR [edx-0x3e]
  408097:	sub    dl,BYTE PTR [esp+ecx*8]
  40809a:	sbb    al,0x8b
  40809c:	inc    ebx
  40809d:	adc    eax,0x69a1d913
  4080a2:	jmp    0x53bdb429
  4080a7:	cmp    BYTE PTR [ebp+esi*2+0x35cf57cd],dl
  4080ae:	inc    esp
  4080af:	lea    ecx,[ecx-0x1ac16e9a]
  4080b5:	dec    ebp
  4080b6:	mov    al,ds:0xafe51bac
  4080bb:	aam    0xb5
  4080bd:	jp     0x4080ff
  4080bf:	push   ecx
  4080c0:	push   0x46
  4080c2:	test   BYTE PTR [ecx],0x35
  4080c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080c6:	pop    edi
  4080c7:	adc    al,0x69
  4080c9:	sub    eax,0x4c3d2c27
  4080ce:	mov    eax,ds:0x4a23b906
  4080d3:	pop    ebp
  4080d4:	repz fnstsw ax
  4080d7:	dec    ebx
  4080d8:	outs   dx,BYTE PTR ds:[esi]
  4080d9:	mov    ch,0xbe
  4080db:	mov    cl,0x86
  4080dd:	xchg   ebp,eax
  4080de:	rcr    al,1
  4080e0:	(bad)  
  4080e1:	call   0xee3c7455
  4080e6:	inc    esp
  4080e7:	(bad)  
  4080e9:	or     al,0x2a
  4080eb:	dec    ebp
  4080ec:	call   0xe72eb030
  4080f1:	jne    0x40816a
  4080f3:	hlt    
  4080f4:	mov    ah,0x6c
  4080f6:	mov    bl,ch
  4080f8:	shr    al,cl
  4080fa:	jnp    0x4080ee
  4080fc:	imul   DWORD PTR [ebx+0x72badf60]
  408102:	ret    
  408103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408104:	aaa    
  408105:	dec    edx
  408106:	mov    eax,0xb0dc516f
  40810b:	sub    edx,DWORD PTR [edi-0x63]
  40810e:	cmc    
  40810f:	shr    BYTE PTR [ebx+0x30],1
  408112:	push   edi
  408113:	mov    ebp,0x49960e54
  408118:	dec    ebx
  408119:	sub    DWORD PTR [eax-0x6d],edx
  40811c:	ret    
  40811d:	pop    ebx
  40811e:	jmp    0x917f:0x41966c0b
  408125:	and    eax,0xb99a7b86
  40812a:	adc    al,0xce
  40812c:	test   esp,edi
  40812e:	sbb    dh,BYTE PTR [eax-0x12cdb378]
  408134:	arpl   si,si
  408136:	clc    
  408137:	outs   dx,BYTE PTR ds:[esi]
  408138:	rcl    BYTE PTR [edx],0x49
  40813b:	dec    ecx
  40813c:	and    esp,DWORD PTR gs:[edi-0x7a]
  408140:	xor    BYTE PTR [edi+0x40],0x7d
  408144:	lahf   
  408145:	mov    eax,ds:0xcda25e0c
  40814a:	mov    ebp,0x1f5a7ca3
  40814f:	cmp    eax,0xe8139735
  408154:	int3   
  408155:	push   cs
  408156:	xor    ecx,edx
  408158:	push   0xffffffdd
  40815a:	les    edx,FWORD PTR [ebp+0xa]
  40815d:	ds std 
  40815f:	inc    ecx
  408160:	inc    esi
  408161:	scas   eax,DWORD PTR es:[edi]
  408162:	and    al,0x9b
  408164:	es test al,0x6e
  408167:	iret   
  408168:	rcl    DWORD PTR [ebx-0x15],cl
  40816b:	mov    cl,0x16
  40816d:	lea    edx,[edx-0x6c]
  408170:	pop    es
  408171:	lods   al,BYTE PTR ds:[esi]
  408172:	sub    eax,0xdbd35447
  408177:	jne    0x408188
  408179:	sub    al,0xdc
  40817b:	shr    BYTE PTR [eax],0xa7
  40817e:	test   eax,0x167a50ae
  408183:	(bad)  
  408184:	ss pop ebx
  408186:	ret    0xfff5
  408189:	add    al,0xb5
  40818b:	loopne 0x408133
  40818d:	jmp    0x4b1d377a
  408192:	or     BYTE PTR [edi],bl
  408194:	pushw  cs
  408196:	sub    bh,cl
  408198:	xor    dl,cl
  40819a:	push   esi
  40819b:	ins    DWORD PTR es:[edi],dx
  40819c:	aas    
  40819d:	push   cs
  40819e:	mov    al,ds:0x83265b6c
  4081a3:	push   ss
  4081a4:	sub    DWORD PTR [edi*8-0x6bb837e0],0xb533b4ad
  4081af:	xor    al,0x91
  4081b1:	ffreep st(4)
  4081b3:	xor    al,0x40
  4081b5:	cdq    
  4081b6:	js     0x408226
  4081b8:	cwde   
  4081b9:	rol    BYTE PTR [esi-0x77],1
  4081bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081bd:	xchg   BYTE PTR [edx+0x2a7dead9],cl
  4081c3:	push   ebp
  4081c4:	inc    edi
  4081c5:	out    dx,eax
  4081c6:	pop    ds
  4081c7:	dec    edi
  4081c8:	lods   al,BYTE PTR ds:[esi]
  4081c9:	xchg   esi,eax
  4081ca:	les    edi,FWORD PTR [edx-0x51738c9a]
  4081d0:	dec    edi
  4081d1:	push   ebx
  4081d2:	cdq    
  4081d3:	test   al,0xce
  4081d5:	mov    gs,WORD PTR [edx]
  4081d7:	add    BYTE PTR [esi],cl
  4081d9:	js     0x408241
  4081db:	cvtps2pd xmm5,QWORD PTR [ebx-0xcd10ead]
  4081e2:	jp     0x40825b
  4081e4:	je     0x4081e7
  4081e6:	nop
  4081e7:	mov    bp,0x83de
  4081eb:	mov    edx,DWORD PTR [edx+0x58]
  4081ee:	push   0x1d
  4081f0:	or     DWORD PTR [ecx+0x28e900db],edx
  4081f6:	retf   0x992a
  4081f9:	mov    cl,0xa2
  4081fb:	push   es
  4081fc:	cmp    eax,0x8155836f
  408201:	or     ecx,DWORD PTR [ecx-0x9]
  408204:	(bad)  
  408205:	jmp    0x408269
  408207:	in     eax,dx
  408208:	mov    al,ds:0xa059a096
  40820d:	push   eax
  40820e:	xchg   ebp,eax
  40820f:	loope  0x408257
  408211:	xor    al,0xa4
  408213:	je     0x408199
  408215:	sbb    al,0xc3
  408217:	imul   DWORD PTR [eax+0x38aed3e4]
  40821d:	jg     0x408235
  40821f:	in     eax,0xdf
  408221:	fsubr  st(0),st
  408223:	jle    0x40821c
  408225:	test   al,0x8a
  408227:	scas   al,BYTE PTR es:[edi]
  408228:	mov    esp,0xbb06d8d1
  40822d:	xchg   BYTE PTR [eax+ecx*1],ch
  408230:	lahf   
  408231:	js     0x408200
  408233:	stos   BYTE PTR es:[edi],al
  408234:	int    0xfe
  408236:	out    0x52,al
  408238:	inc    ebx
  408239:	jb     0x408266
  40823b:	jmp    0x298a6c0d
  408240:	adc    DWORD PTR [esi],0xffffffd9
  408243:	and    edx,DWORD PTR [ebx+ebx*2-0x565f70e3]
  40824a:	test   eax,0x662dd23
  40824f:	push   0x7c
  408251:	bound  eax,QWORD PTR [ebp-0x16]
  408254:	dec    edi
  408255:	xor    edx,edx
  408257:	or     eax,edx
  408259:	add    eax,DWORD PTR ds:0x422738
  40825f:	shl    ecx,0x1e
  408262:	mov    DWORD PTR [ebp+0x14],eax
  408265:	mov    eax,DWORD PTR [ebp-0x48]
  408268:	mov    ecx,DWORD PTR [ebp-0x44]
  40826b:	shrd   eax,ecx,0x2
  40826f:	shr    ecx,0x2
  408272:	mov    ecx,DWORD PTR [ebp-0x48]
  408275:	mov    edx,DWORD PTR [ebp-0x44]
  408278:	xor    eax,edi
  40827a:	shl    ecx,0x1e
  40827d:	xor    edx,edx
  40827f:	or     eax,edx
  408281:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  408285:	mov    eax,DWORD PTR [ebp+0x14]
  408288:	add    BYTE PTR [eax],cl
  40828a:	mov    eax,DWORD PTR [ebp-0x38]
  40828d:	mov    ecx,DWORD PTR [ebp-0x34]
  408290:	shrd   eax,ecx,0x2
  408294:	xor    eax,edi
  408296:	shr    ecx,0x2
  408299:	mov    ecx,DWORD PTR [ebp-0x38]
  40829c:	mov    edx,DWORD PTR [ebp-0x34]
  40829f:	shl    ecx,0x1e
  4082a2:	mov    ecx,DWORD PTR [ebp-0x38]
  4082a5:	xor    edx,edx
  4082a7:	or     eax,edx
  4082a9:	mov    edx,DWORD PTR [ebp-0x34]
  4082ac:	add    eax,DWORD PTR ds:0x422738
  4082b2:	shrd   ecx,edx,0x2
  4082b6:	xor    ecx,edi
  4082b8:	shr    edx,0x2
  4082bb:	mov    edx,DWORD PTR [ebp-0x38]
  4082be:	mov    edi,DWORD PTR [ebp-0x34]
  4082c1:	xor    edi,edi
  4082c3:	or     ecx,edi
  4082c5:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  4082c9:	or     BYTE PTR [eax],cl
  4082cb:	mov    eax,DWORD PTR [esi]
  4082cd:	mov    ecx,DWORD PTR [esi+0x4]
  4082d0:	shl    eax,0x1e
  4082d3:	shl    edx,0x1e
  4082d6:	mov    edx,DWORD PTR [esi]
  4082d8:	mov    edi,DWORD PTR [esi+0x4]
  4082db:	xor    edi,0x9c2b8ae8
  4082e1:	xor    eax,0x80000000
  4082e6:	mov    DWORD PTR [ebp+0x14],eax
  4082e9:	mov    eax,0xcb79b577
  4082ee:	xor    edx,eax
  4082f0:	shrd   edx,edi,0x2
  4082f4:	shr    edi,0x2
  4082f7:	or     edi,DWORD PTR [ebp+0x14]
  4082fa:	xor    ecx,ecx
  4082fc:	or     edx,ecx
  4082fe:	mov    ecx,DWORD PTR [ebx]
  408300:	mov    DWORD PTR [ebp-0x64],edi
  408303:	mov    edi,DWORD PTR [ebx+0x4]
  408306:	mov    edi,ecx
  408308:	xor    ecx,ecx
  40830a:	shl    edi,0x1e
  40830d:	xor    edi,0x80000000
  408313:	mov    DWORD PTR [ebp+0x10],ecx
  408316:	mov    ecx,DWORD PTR [ebx]
  408318:	mov    DWORD PTR [ebp+0x14],edi
  40831b:	mov    edi,DWORD PTR [ebx+0x4]
  40831e:	xor    ecx,eax
  408320:	xor    edi,0x9c2b8ae8
  408326:	shrd   ecx,edi,0x2
  40832a:	or     ecx,DWORD PTR [ebp+0x10]
  40832d:	shr    edi,0x2
  408330:	mov    DWORD PTR [ebp-0x70],ecx
  408333:	mov    ecx,edi
  408335:	or     ecx,DWORD PTR [ebp+0x14]
  408338:	mov    DWORD PTR [ebp+0xc],edi
  40833b:	cmp    edx,DWORD PTR [ebp-0x70]
  40833e:	jne    0x408bb3
  408344:	cmp    DWORD PTR [ebp-0x64],ecx
  408347:	jne    0x408bb3
  40834d:	jmp    0x4083eb
  408352:	mov    eax,DWORD PTR [esi]
  408354:	mov    edx,DWORD PTR [esi+0x4]
  408357:	mov    eax,DWORD PTR [esi]
  408359:	mov    edx,DWORD PTR [esi+0x4]
  40835c:	mov    edx,eax
  40835e:	xor    eax,eax
  408360:	shl    edx,0x1e
  408363:	mov    DWORD PTR [ebp+0x10],eax
  408366:	mov    eax,DWORD PTR [esi]
  408368:	xor    edx,0x80000000
  40836e:	mov    DWORD PTR [ebp+0x14],edx
  408371:	mov    edx,DWORD PTR [esi+0x4]
  408374:	xor    eax,0xcb79b577
  408379:	xor    ecx,edx
  40837b:	shrd   eax,ecx,0x2
  40837f:	or     eax,DWORD PTR [ebp+0x10]
  408382:	shr    ecx,0x2
  408385:	mov    DWORD PTR [ebp+0x8],eax
  408388:	mov    eax,ecx
  40838a:	or     eax,DWORD PTR [ebp+0x14]
  40838d:	mov    ecx,DWORD PTR [ebx]
  40838f:	mov    edx,DWORD PTR [ebx+0x4]
  408392:	push   eax
  408393:	push   DWORD PTR [ebp+0x8]
  408396:	push   edx
  408397:	push   ecx
  408398:	call   0x41594e
  40839d:	mov    eax,DWORD PTR [esi]
  40839f:	mov    ecx,DWORD PTR [esi+0x4]
  4083a2:	shrd   eax,ecx,0x2
  4083a6:	shr    ecx,0x2
  4083a9:	shr    edx,0x1e
  4083ac:	xor    ecx,0xe70ae2ba
  4083b2:	push   ecx
  4083b3:	xor    eax,edi
  4083b5:	mov    DWORD PTR [ebp+0x10],edx
  4083b8:	mov    edx,DWORD PTR [ebx]
  4083ba:	mov    edi,DWORD PTR [ebx+0x4]
  4083bd:	push   eax
  4083be:	push   edi
  4083bf:	push   edx
  4083c0:	call   0x41594e
  4083c5:	shld   edx,eax,0x2
  4083c9:	shl    eax,0x2
  4083cc:	mov    ecx,eax
  4083ce:	or     ecx,DWORD PTR [ebp+0x10]
  4083d1:	xor    eax,eax
  4083d3:	or     edx,eax
  4083d5:	xor    ecx,0xcb79b576
  4083db:	xor    edx,0x9c2b8ae8
  4083e1:	mov    DWORD PTR [esi],ecx
  4083e3:	mov    DWORD PTR [esi+0x4],edx
  4083e6:	mov    eax,0xcb79b577
  4083eb:	mov    ecx,DWORD PTR [esi]
  4083ed:	mov    edx,DWORD PTR [esi+0x4]
  4083f0:	mov    edx,ecx
  4083f2:	shl    edx,0x1e
  4083f5:	xor    edx,0x80000000
  4083fb:	mov    DWORD PTR [ebp+0x14],edx
  4083fe:	mov    edx,DWORD PTR [esi]
  408400:	mov    edi,DWORD PTR [esi+0x4]
  408403:	xor    edi,0x9c2b8ae8
  408409:	xor    edx,eax
  40840b:	shrd   edx,edi,0x2
  40840f:	shr    edi,0x2
  408412:	or     edi,DWORD PTR [ebp+0x14]
  408415:	xor    ecx,ecx
  408417:	or     edx,ecx
  408419:	mov    ecx,DWORD PTR [ebx]
  40841b:	mov    DWORD PTR [ebp+0xc],edi
  40841e:	mov    edi,DWORD PTR [ebx+0x4]
  408421:	mov    edi,ecx
  408423:	xor    ecx,ecx
  408425:	shl    edi,0x1e
  408428:	mov    DWORD PTR [ebp+0x10],ecx
  40842b:	mov    ecx,DWORD PTR [ebx]
  40842d:	xor    edi,0x80000000
  408433:	mov    DWORD PTR [ebp+0x14],edi
  408436:	mov    edi,DWORD PTR [ebx+0x4]
  408439:	xor    eax,ecx
  40843b:	jmp    0x4087dc
  408440:	xor    eax,0x7b36559b
  408445:	cmp    al,0xb6
  408447:	pushf  
  408448:	pop    eax
  408449:	out    dx,eax
  40844a:	push   0xffffffd1
  40844c:	es aas 
  40844e:	push   edx
  40844f:	sahf   
  408450:	mov    ebp,0xbdbebe6b
  408455:	les    edi,FWORD PTR [esi+0x1bf0b7be]
  40845b:	mov    ebx,eax
  40845d:	mov    ds:0x9b87be16,eax
  408462:	fst    st(7)
  408464:	adc    eax,0x4381e4f4
  408469:	(bad)  
  40846a:	std    
  40846b:	and    edx,DWORD PTR [edi-0x363e808f]
  408471:	aaa    
  408472:	mov    bl,0x8c
  408474:	jl     0x4084bb
  408476:	(bad)  
  408477:	mov    dl,0x1b
  408479:	inc    ebx
  40847a:	pop    ebp
  40847b:	mov    al,0xba
  40847d:	xchg   BYTE PTR [ebx+0x632559ce],ch
  408483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408484:	xchg   ebx,eax
  408485:	jle    0x408473
  408487:	shl    edi,cl
  408489:	sub    bl,BYTE PTR [ebx]
  40848b:	adc    BYTE PTR [eax],bl
  40848d:	mov    DWORD PTR [esi-0x75],ecx
  408490:	adc    edx,DWORD PTR [edx-0x7ed5c2d6]
  408496:	add    dl,BYTE PTR [esi+0x13]
  408499:	cmp    eax,0x80526737
  40849e:	dec    edi
  40849f:	stc    
  4084a0:	sub    DWORD PTR [edi+0x57],esp
  4084a3:	rcl    DWORD PTR [ecx-0x50],cl
  4084a6:	frstor [edx+edi*1+0x2a]
  4084aa:	sbb    esp,eax
  4084ac:	gs (bad) 
  4084ae:	shl    BYTE PTR [edi+eiz*4+0x4da6b552],cl
  4084b5:	push   ebp
  4084b6:	shl    WORD PTR [edi],1
  4084b9:	push   ds
  4084ba:	push   0xa5089e4c
  4084bf:	add    ecx,ebx
  4084c1:	iret   
  4084c2:	imul   edi,DWORD PTR [esi+0x1a],0xffffffd3
  4084c6:	add    al,0x4c
  4084c8:	lahf   
  4084c9:	fisubr DWORD PTR [edx+ecx*4+0x4a]
  4084cd:	loope  0x4084e4
  4084cf:	sub    eax,0x47b3d28a
  4084d4:	sti    
  4084d5:	add    al,0x28
  4084d7:	into   
  4084d8:	inc    esi
  4084d9:	and    BYTE PTR ds:0xedbaa074,0x9b
  4084e0:	pop    edi
  4084e1:	addr16 jp 0x40850e
  4084e4:	retf   0xcfc1
  4084e7:	jno    0x4084aa
  4084e9:	(bad)  
  4084ea:	fadd   DWORD PTR [edx+0x67]
  4084ed:	sbb    BYTE PTR [edi-0x34],0xa4
  4084f1:	loopne 0x408531
  4084f3:	push   cs
  4084f4:	mov    dl,0x1d
  4084f6:	stc    
  4084f7:	adc    DWORD PTR [esi+0x1f],ecx
  4084fa:	mov    ecx,0xadf34ff5
  4084ff:	aas    
  408500:	dec    esi
  408501:	add    bh,ch
  408503:	ds nop
  408505:	or     BYTE PTR [edx-0x33a7d5de],dh
  40850b:	pusha  
  40850c:	sbb    ebx,DWORD PTR [ebx-0x50]
  40850f:	mov    bh,0x79
  408511:	les    ebp,FWORD PTR ds:0x9900327a
  408517:	cwde   
  408518:	or     eax,0xa927fd4e
  40851d:	jnp    0x408557
  40851f:	jg     0x4084dd
  408521:	ins    BYTE PTR es:[edi],dx
  408522:	les    ebp,FWORD PTR [ecx-0x7ccbd2a0]
  408528:	sub    eax,0xfd44ecc4
  40852d:	xchg   edi,eax
  40852e:	mov    es,WORD PTR [ebx-0x3b]
  408531:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  408533:	scas   eax,DWORD PTR es:[edi]
  408534:	repz fwait
  408536:	xchg   esp,eax
  408537:	lods   al,BYTE PTR ds:[esi]
  408538:	lods   al,BYTE PTR ds:[esi]
  408539:	test   dl,cl
  40853b:	or     DWORD PTR [eax-0x239af8ef],edx
  408541:	adc    BYTE PTR [ecx],al
  408543:	stos   DWORD PTR es:[edi],eax
  408544:	jns    0x4085a9
  408546:	jge    0x408518
  408548:	cli    
  408549:	jecxz  0x408581
  40854b:	data16 (bad) 
  40854d:	ror    BYTE PTR [edi-0x3],1
  408550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408551:	jmp    0xa3b0:0xaa83a622
  408558:	adc    al,0x14
  40855a:	adc    ah,dh
  40855c:	enter  0xaa4a,0x59
  408560:	daa    
  408561:	fimul  WORD PTR [esp+eiz*2+0x41443d90]
  408568:	nop
  408569:	xor    eax,0x207c9cd4
  40856e:	cmp    al,0xb7
  408570:	sbb    dh,BYTE PTR [edx+0x2e]
  408573:	inc    ebp
  408574:	out    0x1a,eax
  408576:	sbb    bl,BYTE PTR [edx]
  408578:	xor    al,0x86
  40857a:	xor    DWORD PTR [eax-0x5],0x38b18089
  408581:	mov    al,0x83
  408583:	sbb    eax,DWORD PTR [ecx-0x2236303f]
  408589:	jmp    0x408538
  40858b:	enter  0x2cad,0x47
  40858f:	jb     0x40856a
  408591:	pop    edx
  408592:	and    eax,0x11e4feed
  408597:	mov    ebx,0x69357cc5
  40859c:	push   edx
  40859d:	sahf   
  40859e:	shl    DWORD PTR [esi-0x4683b7a6],0xaa
  4085a5:	jns    0x408614
  4085a7:	push   es
  4085a8:	je     0x4085c5
  4085aa:	rcl    ebp,cl
  4085ac:	sbb    edx,esi
  4085ae:	imul   eax,DWORD PTR [esi],0x8370141d
  4085b4:	push   0x23
  4085b6:	push   eax
  4085b7:	add    eax,0xf098710f
  4085bc:	jg     0x4085fa
  4085be:	not    BYTE PTR [edi]
  4085c0:	push   esi
  4085c1:	data16 cmp al,BYTE PTR cs:[ebx-0x2bae6275]
  4085c9:	dec    esp
  4085ca:	rol    DWORD PTR [ebx],0x1b
  4085cd:	cmp    edx,DWORD PTR [edi-0x6a]
  4085d0:	loopne 0x408559
  4085d2:	push   ds
  4085d3:	fwait
  4085d4:	retf   0x733
  4085d7:	cmp    eax,0x65b9cf17
  4085dc:	or     ah,BYTE PTR [esi+0x5d]
  4085df:	ret    0xac84
  4085e2:	add    eax,0xd503b024
  4085e7:	dec    esp
  4085e8:	xchg   BYTE PTR [ecx-0x77545e9b],ah
  4085ee:	dec    esp
  4085ef:	adc    BYTE PTR [ebp-0x12],ah
  4085f2:	xchg   ecx,eax
  4085f3:	dec    BYTE PTR [edi-0x7b]
  4085f6:	xchg   ebp,eax
  4085f7:	cmp    eax,0xdb323f2b
  4085fc:	jmp    0xfdbe:0xe3c08054
  408603:	rcl    ebp,0x5a
  408606:	inc    ecx
  408607:	sbb    al,BYTE PTR [ebp-0x7f406cf6]
  40860d:	xchg   esi,eax
  40860e:	addr16 pop ds
  408610:	ins    BYTE PTR es:[edi],dx
  408611:	push   ebp
  408612:	cs daa 
  408614:	pop    edi
  408615:	add    DWORD PTR [ebp*1+0xd5a6b09],0x45
  40861d:	mov    ds:0x2db6645f,eax
  408622:	fs int 0xba
  408625:	cdq    
  408626:	xchg   ebx,eax
  408627:	pop    edi
  408628:	dec    ebx
  408629:	(bad)  
  40862a:	leave  
  40862b:	fcmovnu st,st(3)
  40862d:	leave  
  40862e:	sub    edx,ecx
  408630:	mul    eax
  408632:	mov    cl,0x0
  408634:	outs   dx,BYTE PTR ds:[esi]
  408635:	ja     0x408625
  408637:	adc    BYTE PTR [edi-0x23],al
  40863a:	sub    BYTE PTR [esi+0x162ad927],cl
  408640:	dec    edi
  408641:	add    BYTE PTR [ebx],0x70
  408644:	mov    al,0x41
  408646:	nop
  408647:	jae    0x40860c
  408649:	jle    0x40865c
  40864b:	leave  
  40864c:	pop    ds
  40864d:	or     al,0x7d
  40864f:	in     eax,dx
  408650:	pop    eax
  408651:	add    BYTE PTR [edx],al
  408653:	mov    ch,0x3c
  408655:	js     0x4086ae
  408657:	in     al,0x47
  408659:	test   DWORD PTR [edi+0x18d81d9d],0x914e2bd
  408663:	mov    WORD PTR [ebx+eax*8-0xd095762],?
  40866a:	add    BYTE PTR [edx+0x65ad22be],bh
  408670:	in     eax,dx
  408671:	(bad)  [eax+0x49]
  408674:	mov    esi,0xba02830c
  408679:	mov    eax,0x82709f4d
  40867e:	fs daa 
  408680:	jns    0x4086d6
  408682:	mov    esp,0xbf9d6865
  408687:	jecxz  0x40865d
  408689:	popf   
  40868a:	dec    ebx
  40868b:	mov    edi,0x6486fcad
  408690:	jmp    0xbf348cae
  408695:	rcl    BYTE PTR [ecx-0x65be96b8],cl
  40869b:	and    al,0xb9
  40869d:	mov    al,0x5d
  40869f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086a0:	push   ds
  4086a1:	and    edi,DWORD PTR [ecx]
  4086a3:	cdq    
  4086a4:	sbb    bl,bh
  4086a6:	jnp    0x40862c
  4086a8:	mov    cl,BYTE PTR [ecx+ebx*4]
  4086ab:	cmp    bl,BYTE PTR [edi]
  4086ad:	repz pop es
  4086af:	(bad)  
  4086b1:	rcl    BYTE PTR [ebx],cl
  4086b3:	jne    0x40871f
  4086b5:	lods   al,BYTE PTR ds:[esi]
  4086b6:	pop    ebx
  4086b7:	xor    BYTE PTR [edi],cl
  4086b9:	sbb    al,0xb9
  4086bb:	in     eax,0xa2
  4086bd:	xor    al,0x7a
  4086bf:	xor    dh,BYTE PTR [eax-0x37fa7fe5]
  4086c5:	or     dl,BYTE PTR [edx]
  4086c7:	mov    al,ds:0x816e7cb7
  4086cc:	call   0xaff607b7
  4086d1:	ret    0xe299
  4086d4:	test   eax,0x1a279c6d
  4086d9:	or     DWORD PTR [edi],ebp
  4086db:	dec    ecx
  4086dc:	fsub   QWORD PTR [edi]
  4086de:	push   cs
  4086df:	dec    edx
  4086e0:	xor    bh,BYTE PTR [edx]
  4086e2:	and    al,0xc0
  4086e4:	add    ecx,DWORD PTR [eax+0xe5611c7]
  4086ea:	mov    esi,DWORD PTR [ebp-0x17]
  4086ed:	adc    al,0xd1
  4086ef:	popf   
  4086f0:	loopne 0x408688
  4086f2:	push   edx
  4086f3:	inc    ebp
  4086f4:	mov    edi,0xa84e75cc
  4086f9:	cmp    al,al
  4086fb:	sbb    si,WORD PTR [eax-0x11a23204]
  408702:	popf   
  408703:	cmp    al,0xdf
  408705:	push   ebx
  408706:	les    esp,FWORD PTR [eax-0x66b63439]
  40870c:	int3   
  40870d:	pop    ds
  40870e:	scas   eax,DWORD PTR es:[edi]
  40870f:	mov    edx,0xaabfb635
  408714:	pop    eax
  408715:	fst    QWORD PTR [esi]
  408717:	test   eax,0x4c8e89c2
  40871c:	sti    
  40871d:	jmp    0xc85889f8
  408722:	pop    eax
  408723:	mov    ebx,0xafb027a6
  408728:	out    0x34,eax
  40872a:	sub    BYTE PTR [edx-0x5e],bh
  40872d:	fiadd  DWORD PTR [eax]
  40872f:	inc    esp
  408730:	sahf   
  408731:	stos   BYTE PTR es:[edi],al
  408732:	dec    edi
  408733:	cmp    eax,0x1b7a5b81
  408738:	(bad)  [edx]
  40873a:	push   ds
  40873b:	jle    0x40879e
  40873d:	cmp    dh,BYTE PTR [ebp-0x28]
  408740:	dec    edx
  408741:	loope  0x4086c3
  408743:	sub    DWORD PTR [ebp-0x2c48c952],ecx
  408749:	sub    al,0x31
  40874b:	inc    ebx
  40874c:	(bad)  
  40874e:	adc    ebx,DWORD PTR [eax+0x43]
  408751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408752:	test   BYTE PTR [ebp+0x3671e7df],ch
  408758:	push   eax
  408759:	xchg   DWORD PTR [ecx],esi
  40875b:	sub    ecx,esp
  40875d:	sbb    DWORD PTR ds:0x72410b63,edi
  408763:	adc    esp,DWORD PTR [edi+0x63]
  408766:	xor    cl,BYTE PTR ds:0xade969fb
  40876c:	xchg   esi,eax
  40876d:	wbinvd 
  40876f:	sub    al,0xe0
  408771:	cmp    al,0x99
  408773:	mov    al,0x3
  408775:	sahf   
  408776:	and    cl,al
  408778:	push   ds
  408779:	inc    eax
  40877a:	arpl   di,si
  40877c:	aam    0x23
  40877e:	mov    WORD PTR [edx+0x1c8d5c28],?
  408784:	mov    esi,edi
  408786:	inc    ebx
  408787:	ret    0xaaf0
  40878a:	imul   ebp,DWORD PTR [esp+edx*4+0x45d7aaba],0x953b01f9
  408795:	push   es
  408796:	inc    esi
  408797:	sahf   
  408798:	jge    0x40874c
  40879a:	or     edi,ebx
  40879c:	mov    edi,0x68631f36
  4087a1:	pop    ebp
  4087a2:	mov    esi,DWORD PTR [ebx+ecx*8]
  4087a5:	dec    edx
  4087a6:	pop    esp
  4087a7:	push   0x64002b32
  4087ac:	mov    esp,0x5b2dfdca
  4087b1:	imul   eax,DWORD PTR [ebx+0x4f],0xffffffdd
  4087b5:	les    esi,FWORD PTR [esi+0x1b]
  4087b8:	into   
  4087b9:	fild   QWORD PTR [ecx]
  4087bb:	lahf   
  4087bc:	(bad)  
  4087be:	and    eax,0x96496a80
  4087c3:	cld    
  4087c4:	mov    ch,0x63
  4087c6:	daa    
  4087c7:	ins    DWORD PTR es:[edi],dx
  4087c8:	cs jmp 0x6736:0xbc9259
  4087d0:	and    eax,0x663f2042
  4087d5:	inc    ecx
  4087d6:	pop    ebp
  4087d7:	fistp  DWORD PTR [edx+edx*8-0x87e8199]
  4087de:	call   0x8bdcb36d
  4087e3:	iret   
  4087e4:	shrd   eax,ecx,0x2
  4087e8:	or     eax,DWORD PTR [ebp+0x10]
  4087eb:	shr    ecx,0x2
  4087ee:	or     ecx,DWORD PTR [ebp+0x14]
  4087f1:	jmp    0x408b92
  4087f6:	sbb    cl,cl
  4087f8:	ins    DWORD PTR es:[edi],dx
  4087f9:	xchg   esi,eax
  4087fa:	mov    bl,0xba
  4087fc:	cmp    BYTE PTR [edx+ebp*4-0x21],cl
  408800:	xchg   esp,eax
  408801:	nop
  408802:	pop    edi
  408803:	jg     0x408829
  408805:	sahf   
  408806:	mov    esi,0xbdbebe73
  40880b:	les    edi,FWORD PTR [esi+0x54f190be]
  408811:	mov    ebp,DWORD PTR [esi+0x22a33d16]
  408817:	repnz dec esi
  408819:	dec    ecx
  40881a:	jne    0x408844
  40881c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40881d:	stos   BYTE PTR es:[edi],al
  40881e:	fnsave [esi+ebp*1+0x1b]
  408822:	int    0x2b
  408824:	std    
  408825:	shl    BYTE PTR [edx+0x5e],0xd1
  408829:	mov    edx,0x55fc6819
  40882e:	push   0xffffffa6
  408830:	loop   0x40880c
  408832:	ins    DWORD PTR es:[edi],dx
  408833:	test   al,0xf1
  408835:	xchg   BYTE PTR [ebx+edx*8-0x6],bh
  408839:	ret    0x7ffd
  40883c:	sbb    bh,ch
  40883e:	mov    eax,0xebce517d
  408843:	stos   DWORD PTR es:[edi],eax
  408844:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408846:	push   0xe88529ac
  40884b:	lea    ebp,[eax]
  40884d:	adc    DWORD PTR [ebp-0x3a],ebx
  408850:	shl    DWORD PTR [eax],1
  408852:	xchg   ebp,eax
  408853:	out    0x99,al
  408855:	stos   DWORD PTR es:[edi],eax
  408856:	and    al,0x25
  408858:	cmp    cl,bh
  40885a:	ds stos DWORD PTR es:[edi],eax
  40885c:	and    al,0x77
  40885e:	or     BYTE PTR [ebp-0x17],cl
  408861:	icebp  
  408862:	(bad)  
  408863:	mov    cs,WORD PTR [ecx-0x55]
  408866:	stos   BYTE PTR es:[edi],al
  408867:	sbb    esi,edi
  408869:	add    BYTE PTR [ecx],dl
  40886b:	fdivr  DWORD PTR ds:0x1a617ea4
  408871:	mov    BYTE PTR [esi],bh
  408873:	not    DWORD PTR [ebp-0x53]
  408876:	add    ecx,DWORD PTR [edx]
  408878:	mov    edx,0x2836578d
  40887d:	cs jae 0x40885d
  408880:	mov    ah,0x73
  408882:	push   0x527f91e6
  408887:	je     0x4088f1
  408889:	or     esi,DWORD PTR [ecx+edx*2-0x6c]
  40888d:	push   0x682f60bc
  408892:	pop    edi
  408893:	push   cs
  408894:	xchg   BYTE PTR [ebx],ah
  408896:	fdivrp st(6),st
  408898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408899:	mov    ch,0x30
  40889b:	sbb    bl,BYTE PTR [ecx+0x25]
  40889e:	jns    0x4088f2
  4088a0:	mov    ebx,0x3e7f3e5d
  4088a5:	dec    ebp
  4088a6:	xchg   ebx,eax
  4088a7:	mov    ss,WORD PTR [bx+di-0x40]
  4088ab:	jbe    0x40887d
  4088ad:	adc    eax,esp
  4088af:	adc    al,ah
  4088b1:	mov    WORD PTR [eax+0xd],?
  4088b4:	addr16 (bad) 
  4088b6:	out    dx,eax
  4088b7:	or     eax,0x678ccd1e
  4088bc:	inc    ebp
  4088bd:	xchg   DWORD PTR [eax-0x7ed25d7f],edi
  4088c3:	push   esp
  4088c4:	stos   DWORD PTR es:[edi],eax
  4088c5:	or     eax,0xb3f80fe0
  4088ca:	mov    ds:0x1ab3e5db,eax
  4088cf:	dec    ebx
  4088d0:	addr16 dec ecx
  4088d2:	push   es
  4088d3:	into   
  4088d4:	outs   dx,DWORD PTR ds:[esi]
  4088d5:	adc    bh,bl
  4088d7:	sar    DWORD PTR [esi-0x7f1b23ee],cl
  4088dd:	xchg   esi,eax
  4088de:	hlt    
  4088df:	adc    eax,0xb75f1d81
  4088e4:	jge    0x408895
  4088e6:	mov    eax,ds:0xc257be41
  4088eb:	jnp    0x4088f6
  4088ed:	cwde   
  4088ee:	adc    al,0xad
  4088f0:	in     al,0x6a
  4088f2:	aaa    
  4088f3:	(bad)  
  4088f4:	in     eax,0x97
  4088f6:	dec    ebp
  4088f7:	or     al,0x3d
  4088f9:	cwde   
  4088fa:	xor    esp,DWORD PTR [esi-0x29]
  4088fd:	adc    eax,0xa68b51c6
  408902:	push   ecx
  408903:	(bad)  
  408904:	std    
  408905:	mov    ss,WORD PTR ds:0x9a447cdd
  40890b:	ror    BYTE PTR [ebp-0x7f9b7a91],0x14
  408912:	cld    
  408913:	and    esi,DWORD PTR [esi+0x9]
  408916:	test   al,0x95
  408918:	daa    
  408919:	cmp    ch,BYTE PTR [ebx-0x18fc7476]
  40891f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408920:	std    
  408921:	jp     0x40895c
  408923:	mov    edx,0xa7ec815f
  408928:	mov    es,WORD PTR [edi+0x6]
  40892b:	rcr    DWORD PTR [ebp+0x3b],0xa1
  40892f:	test   eax,0xd0e17ecc
  408934:	pop    esi
  408935:	xlat   BYTE PTR ds:[ebx]
  408936:	sub    eax,0x505c3cf5
  40893b:	aad    0x20
  40893d:	lahf   
  40893e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40893f:	cmp    BYTE PTR [ebx],0x79
  408942:	cld    
  408943:	xchg   edx,eax
  408944:	pop    es
  408945:	pop    ecx
  408946:	lahf   
  408947:	or     eax,0x44f148e
  40894c:	cdq    
  40894d:	(bad)  
  40894e:	and    eax,0xa4f937b2
  408953:	mov    esp,0x328a9041
  408958:	dec    edx
  408959:	jg     0x408924
  40895b:	xor    DWORD PTR [ebp-0x2244a40d],edx
  408961:	mov    ebx,0x42a97c49
  408966:	loope  0x40898d
  408968:	push   ecx
  408969:	inc    esi
  40896a:	cdq    
  40896b:	sbb    al,0x2b
  40896d:	lahf   
  40896e:	pop    edi
  40896f:	psrlq  mm0,QWORD PTR [esi+esi*1-0x2]
  408974:	push   edx
  408975:	iret   
  408976:	(bad)  
  408977:	mov    bh,BYTE PTR [edx+0x27]
  40897a:	jecxz  0x4089d1
  40897c:	mov    ds:0xc098c19d,eax
  408981:	mov    dl,0xa8
  408983:	loop   0x4089ee
  408985:	mov    edi,0x1fe51e74
  40898a:	jb     0x4089c5
  40898c:	fs out 0x13,eax
  40898f:	enter  0x3a6e,0x8c
  408993:	cli    
  408994:	add    DWORD PTR [edx-0x4e],esi
  408997:	(bad)  
  408998:	bound  ebp,QWORD PTR [edx+0x25defceb]
  40899e:	or     DWORD PTR [ecx+0x30],esi
  4089a1:	std    
  4089a2:	inc    esi
  4089a3:	iret   
  4089a4:	xchg   edi,eax
  4089a5:	out    0xd7,al
  4089a7:	sub    cl,bh
  4089a9:	scas   al,BYTE PTR es:[edi]
  4089aa:	ret    0xecab
  4089ad:	test   dh,0xad
  4089b0:	mov    bl,BYTE PTR ds:0xe5de90a5
  4089b6:	inc    edx
  4089b7:	mov    ah,0x9e
  4089b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089ba:	push   cs
  4089bb:	mov    esp,0xd60176db
  4089c0:	lods   eax,DWORD PTR ds:[esi]
  4089c1:	(bad)  
  4089c2:	xchg   edi,eax
  4089c3:	mov    edi,ecx
  4089c5:	sar    cl,cl
  4089c7:	adc    ch,BYTE PTR [ebx]
  4089c9:	retf   0xee36
  4089cc:	bound  ecx,QWORD PTR ds:0xafa131b8
  4089d2:	cvttps2pi mm3,QWORD PTR [ebx+0x6e]
  4089d6:	fcmovnbe st,st(1)
  4089d8:	adc    ebx,DWORD PTR [edx+0x14]
  4089db:	mov    al,ds:0x1732f9d0
  4089e0:	pop    edi
  4089e1:	cwde   
  4089e2:	stos   BYTE PTR es:[edi],al
  4089e3:	jns    0x4089d9
  4089e5:	in     al,0xf1
  4089e7:	ret    
  4089e8:	jno    0x40898f
  4089ea:	jmp    0x8b9:0x2f212e96
  4089f1:	adc    eax,0x3eecd01a
  4089f6:	push   edi
  4089f7:	ds inc eax
  4089f9:	retf   
  4089fa:	cmp    esi,DWORD PTR [eax+0x6578eff2]
  408a00:	jae    0x4089bb
  408a02:	push   eax
  408a03:	test   DWORD PTR [ebp+0x694f25d5],esp
  408a09:	jo     0x4089e6
  408a0b:	popf   
  408a0c:	xor    ah,BYTE PTR [esi-0x2dd420e8]
  408a12:	test   DWORD PTR [ecx-0x57],edi
  408a15:	dec    ebp
  408a16:	push   0x18d30acb
  408a1b:	stc    
  408a1c:	add    al,0x6d
  408a1e:	push   ebx
  408a1f:	into   
  408a20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a21:	mov    edx,0x6cddfd3
  408a26:	push   esi
  408a27:	enter  0x9fa9,0xe3
  408a2b:	xor    eax,0x8e554d76
  408a30:	pop    edx
  408a31:	add    BYTE PTR [esi],ch
  408a33:	dec    esp
  408a34:	add    bl,ah
  408a36:	jmp    0xb19dbec7
  408a3b:	xor    al,0x48
  408a3d:	rcr    DWORD PTR gs:[ebp-0x7],1
  408a41:	ins    BYTE PTR es:[edi],dx
  408a42:	jge    0x408a6e
  408a44:	shl    BYTE PTR [edx],0xb5
  408a47:	je     0x408a1a
  408a49:	sub    ah,BYTE PTR [ebx]
  408a4b:	dec    esp
  408a4c:	pop    es
  408a4d:	cdq    
  408a4e:	aam    0x6
  408a50:	and    ebx,DWORD PTR [esi+ecx*1]
  408a53:	sar    BYTE PTR [eax],1
  408a55:	aam    0xcc
  408a57:	add    dh,ch
  408a59:	cmp    BYTE PTR [ebx],ch
  408a5b:	add    BYTE PTR [eax+0x72],cl
  408a5e:	jbe    0x408a7d
  408a60:	mov    bh,0xd1
  408a62:	lock jge 0x408a83
  408a65:	inc    ecx
  408a66:	enter  0x641a,0xaa
  408a6a:	sbb    eax,DWORD PTR [eax-0x10]
  408a6d:	arpl   WORD PTR [edi-0x2dad511d],sp
  408a73:	dec    esi
  408a74:	lods   eax,DWORD PTR ds:[esi]
  408a75:	add    eax,0x4a510f3e
  408a7a:	push   cs
  408a7b:	mov    esp,0xc5a80ae8
  408a80:	int    0x9c
  408a82:	retf   0x6fc5
  408a85:	std    
  408a86:	clc    
  408a87:	je     0x408ada
  408a89:	mov    ds:0x66b8759d,al
  408a8e:	outs   dx,DWORD PTR ds:[esi]
  408a90:	dec    esi
  408a91:	jl     0x408a4c
  408a93:	or     edx,DWORD PTR [eax-0x42f33ba6]
  408a99:	xor    ebp,DWORD PTR [esi-0x72]
  408a9c:	sub    BYTE PTR [ecx-0x62],cl
  408a9f:	test   ebx,esp
  408aa1:	dec    ebp
  408aa2:	cmp    eax,0x2a43c4dc
  408aa7:	cmp    BYTE PTR [ebx+0x43],bh
  408aaa:	xchg   edi,eax
  408aab:	push   eax
  408aac:	icebp  
  408aad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aaf:	cmp    BYTE PTR [ecx],0xb4
  408ab2:	fistp  QWORD PTR [edi+eax*4-0x27e1cee3]
  408ab9:	test   al,0x50
  408abb:	out    0xd7,al
  408abd:	inc    edi
  408abe:	in     al,dx
  408abf:	fstp   QWORD PTR [edx]
  408ac1:	mov    bh,0x3a
  408ac3:	cmp    al,0xa5
  408ac5:	cwde   
  408ac6:	or     bh,bl
  408ac8:	sub    BYTE PTR [edi+0x72],0x30
  408acc:	adc    edi,esp
  408ace:	pop    esi
  408acf:	dec    ebx
  408ad0:	in     al,0x71
  408ad2:	fucom  st(3)
  408ad4:	out    0x4,eax
  408ad6:	mov    ecx,0x42e23d4a
  408adb:	mov    bl,0x41
  408add:	xchg   edx,eax
  408ade:	jne    0x408b1c
  408ae0:	imul   ebx,DWORD PTR [esi+0x69373624],0x4d
  408ae7:	cwde   
  408ae8:	shl    BYTE PTR [ebp+0x2d208528],cl
  408aee:	push   ebx
  408aef:	lea    eax,[edi+0x57252879]
  408af5:	fs aam 0x2c
  408af8:	scas   al,BYTE PTR es:[edi]
  408af9:	sar    DWORD PTR [ecx+0x76b540b2],0x19
  408b00:	pop    esi
  408b01:	out    dx,al
  408b02:	iret   
  408b03:	pop    ss
  408b04:	sti    
  408b05:	mov    edx,ebp
  408b07:	mov    BYTE PTR [edi-0x133008a0],dh
  408b0d:	pop    edx
  408b0e:	and    eax,DWORD PTR [edi-0x73]
  408b11:	mov    al,ds:0x9b2d7409
  408b16:	inc    esi
  408b17:	loopne 0x408b08
  408b19:	and    al,0x5d
  408b1b:	cli    
  408b1c:	sar    BYTE PTR [ebx],cl
  408b1e:	addr16 test al,0xf3
  408b21:	lock lahf 
  408b23:	cmp    eax,0x3f58611f
  408b28:	sub    BYTE PTR [ebx-0x11],ch
  408b2b:	pop    esi
  408b2c:	push   eax
  408b2d:	int    0x9f
  408b2f:	dec    BYTE PTR [esi+0x65d9f928]
  408b35:	das    
  408b36:	data16 mov ch,0xa2
  408b39:	sahf   
  408b3a:	test   eax,0x25d227ab
  408b3f:	ret    0xcc79
  408b42:	pop    edx
  408b43:	mov    ebx,0x164224a9
  408b48:	xchg   ecx,eax
  408b49:	jmp    0xcf05:0xd0043cb8
  408b50:	xor    bh,BYTE PTR [esi-0x51770183]
  408b56:	fisub  WORD PTR [edi]
  408b58:	aas    
  408b59:	fisubr DWORD PTR [esi]
  408b5b:	in     eax,0xc7
  408b5d:	jge    0x408ae6
  408b5f:	test   al,0x29
  408b61:	hlt    
  408b62:	cmp    eax,0xce78f08d
  408b67:	jo     0x408b05
  408b69:	mov    fs,WORD PTR [ebx-0x893cb64]
  408b6f:	mov    WORD PTR [esi+0x46eee3c0],fs
  408b75:	mov    dl,0x88
  408b77:	push   eax
  408b78:	mov    es,WORD PTR [edx]
  408b7a:	add    ebx,DWORD PTR [edi]
  408b7c:	int3   
  408b7d:	inc    eax
  408b7e:	push   0xf99ca2
  408b83:	sbb    al,0x91
  408b85:	and    bl,BYTE PTR [ebx+ebx*2-0x27]
  408b89:	mov    ah,0x89
  408b8b:	fdivr  QWORD PTR [edx]
  408b8d:	cmc    
  408b8e:	retf   
  408b8f:	stos   DWORD PTR es:[edi],eax
  408b90:	clc    
  408b91:	mov    ebp,0x850fd03b
  408b96:	or     DWORD PTR [eax],eax
  408b98:	add    BYTE PTR [eax],al
  408b9a:	cmp    DWORD PTR [ebp+0xc],ecx
  408b9d:	je     0x408bb3
  408ba3:	push   DWORD PTR [ebp+0x20]
  408ba6:	push   DWORD PTR [ebp+0x1c]
  408ba9:	push   DWORD PTR [ebp+0x18]
  408bac:	push   ebx
  408bad:	push   esi
  408bae:	call   0x411472
  408bb3:	pop    edi
  408bb4:	leave  
  408bb5:	ret    0x1c
  408bb8:	cmp    cl,0x40
  408bbb:	jae    0x408bf8
  408bc1:	cmp    cl,0x20
  408bc4:	mov    DWORD PTR ds:0x42833d,0x1ce5
  408bce:	jae    0x408be4
  408bd4:	xor    DWORD PTR ds:0x428501,0x6917
  408bde:	shrd   eax,edx,cl
  408be1:	shr    edx,cl
  408be3:	ret    
  408be4:	mov    eax,edx
  408be6:	xor    edx,edx
  408be8:	and    cl,0x1f
  408beb:	mov    DWORD PTR ds:0x428559,0x321d
  408bf5:	shr    eax,cl
  408bf7:	ret    
  408bf8:	xor    eax,eax
  408bfa:	xor    edx,edx
  408bfc:	ret    
  408bfd:	push   ebp
  408bfe:	mov    ebp,esp
  408c00:	jmp    0x408e7f
  408c05:	addr16 hlt 
  408c07:	js     0x408c4d
  408c09:	jl     0x408c57
  408c0b:	jnp    0x408c09
  408c0d:	dec    edx
  408c0e:	xlat   BYTE PTR ds:[ebx]
  408c0f:	pop    esi
  408c10:	sahf   
  408c11:	sahf   
  408c12:	retf   0xcfee
  408c15:	mov    ebp,0x79bebe79
  408c1a:	ret    0xbebe
  408c1d:	xchg   ebp,eax
  408c1e:	lds    ecx,FWORD PTR [ecx+0xabcd5c3]
  408c24:	ret    
  408c25:	mov    ebx,DWORD PTR [esi]
  408c27:	add    eax,0xad6faf37
  408c2c:	adc    BYTE PTR [ebp+0x5],al
  408c2f:	or     bh,BYTE PTR [ecx-0x4e8cbf7b]
  408c35:	ds mov ebx,0xc603e91b
  408c3b:	mov    esp,0x37621209
  408c40:	or     cl,ch
  408c42:	jp     0x408cab
  408c44:	fdiv   DWORD PTR ds:0x54ffbdc0
  408c4a:	enter  0x6dee,0xc5
  408c4e:	mov    ecx,0x8b65e710
  408c53:	push   esi
  408c54:	es das 
  408c56:	cmp    esp,esi
  408c58:	add    DWORD PTR [ecx+0x55],ebp
  408c5b:	popa   
  408c5c:	inc    eax
  408c5d:	and    dl,BYTE PTR [eax]
  408c5f:	dec    edi
  408c60:	xchg   ecx,eax
  408c61:	xchg   esp,eax
  408c62:	xchg   ebx,eax
  408c63:	jae    0x408c0b
  408c65:	lds    ecx,FWORD PTR [esp+ebx*4]
  408c68:	ds inc edi
  408c6a:	xchg   BYTE PTR [edx+0x372edce3],bh
  408c70:	fcmovnb st,st(0)
  408c72:	push   esp
  408c73:	stos   DWORD PTR es:[edi],eax
  408c74:	(bad)  
  408c75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c76:	jbe    0x408c84
  408c78:	nop
  408c79:	or     dh,dl
  408c7b:	test   BYTE PTR [ebx-0x5a],ah
  408c7e:	push   0x6243f581
  408c83:	cs sub dl,0xc7
  408c87:	pop    ebx
  408c88:	add    DWORD PTR [ebx-0x49526363],eax
  408c8e:	jbe    0x408c4d
  408c90:	mov    DWORD PTR [eax-0x2f77f98],ecx
  408c96:	lods   al,BYTE PTR ds:[esi]
  408c97:	jmp    0x8dab:0xc74c796d
  408c9e:	loop   0x408c8a
  408ca0:	inc    esp
  408ca1:	test   al,0x43
  408ca3:	push   esi
  408ca4:	int    0x36
  408ca6:	popf   
  408ca7:	hlt    
  408ca8:	daa    
  408ca9:	jp     0x408d23
  408cab:	pop    eax
  408cac:	jo     0x408c59
  408cae:	fwait
  408caf:	add    BYTE PTR [edi+0x69],dh
  408cb2:	outs   dx,DWORD PTR ds:[esi]
  408cb3:	push   edi
  408cb4:	(bad)  
  408cb5:	mov    DWORD PTR [edi+0x39],0x765e99b0
  408cbc:	test   eax,0xbf091f9c
  408cc1:	xchg   edi,eax
  408cc2:	and    eax,0x7254cd55
  408cc7:	and    DWORD PTR [ebx-0x3254f0c8],edx
  408ccd:	out    dx,al
  408cce:	add    bh,BYTE PTR [esi+0x63]
  408cd1:	scas   al,BYTE PTR es:[edi]
  408cd2:	icebp  
  408cd3:	jge    0x408c97
  408cd5:	popf   
  408cd6:	or     DWORD PTR [ebp-0x1d51022b],ecx
  408cdc:	mov    dh,0x29
  408cde:	fnstcw WORD PTR [ecx-0x113264b0]
  408ce4:	jmp    0x8dc36f87
  408ce9:	stos   DWORD PTR es:[edi],eax
  408cea:	jmp    0x3e17:0x5a55b751
  408cf1:	mov    ch,0x28
  408cf3:	jnp    0x408cf7
  408cf5:	mov    dh,0x75
  408cf7:	jno    0x408d28
  408cf9:	jp     0x408d17
  408cfb:	arpl   WORD PTR [esi+edx*8],ax
  408cfe:	pop    ecx
  408cff:	sub    BYTE PTR [eax],0x62
  408d02:	leave  
  408d03:	sbb    eax,0xc679cd29
  408d08:	xor    BYTE PTR [edi],bl
  408d0a:	arpl   di,bx
  408d0c:	test   eax,0xdbac968f
  408d11:	mov    cl,0xaf
  408d13:	adc    al,BYTE PTR [esi-0x3977b8ce]
  408d19:	pop    esp
  408d1a:	retf   0x3c8e
  408d1d:	(bad)  
  408d1e:	in     eax,dx
  408d1f:	pop    ebx
  408d20:	push   ss
  408d21:	hlt    
  408d22:	mov    esi,0x8291870e
  408d27:	addr16 pop edi
  408d29:	xor    DWORD PTR ss:[ecx],esp
  408d2c:	(bad)  
  408d2d:	(bad)  
  408d2e:	call   0xfc62ce2a
  408d33:	cmp    ah,ah
  408d35:	xor    eax,0x6920b966
  408d3a:	jmp    0xdd8f5e39
  408d3f:	rcl    DWORD PTR [esi],1
  408d41:	mov    eax,0x89eccc04
  408d46:	retf   0x9c2b
  408d49:	int    0x3c
  408d4b:	les    esp,FWORD PTR [edi]
  408d4d:	pop    ebp
  408d4e:	cmp    DWORD PTR [eax-0x19738074],esp
  408d54:	gs cmp dh,dl
  408d57:	xor    DWORD PTR [eax],0x30
  408d5a:	rcl    DWORD PTR [ecx+ecx*1+0x3ec7b1ed],cl
  408d61:	cmc    
  408d62:	scas   eax,DWORD PTR es:[edi]
  408d63:	dec    esp
  408d64:	icebp  
  408d65:	xlat   BYTE PTR ds:[ebx]
  408d66:	pop    eax
  408d67:	iret   
  408d68:	gs pusha 
  408d6a:	out    0xab,al
  408d6c:	pop    esp
  408d6d:	mov    WORD PTR ds:0x919e08d9,gs
  408d73:	test   BYTE PTR [ecx-0x65],dl
  408d76:	and    bl,dl
  408d78:	aad    0xea
  408d7a:	loope  0x408dcb
  408d7c:	das    
  408d7d:	ds inc edx
  408d7f:	in     eax,0x77
  408d81:	cwde   
  408d82:	pop    ebx
  408d83:	js     0x408d62
  408d85:	add    BYTE PTR [eax],al
  408d87:	in     al,0x6f
  408d89:	repz xor BYTE PTR [edi+0x391b5f74],cl
  408d90:	jmp    0x6bab:0xe9c6cbd7
  408d97:	fcomp  DWORD PTR [edi-0x74165d5e]
  408d9d:	and    al,0xc5
  408d9f:	call   0xdfdf:0x2a638ce7
  408da6:	sub    eax,0x1df2d4d3
  408dab:	adc    DWORD PTR [edi+0x41],edx
  408dae:	pushf  
  408daf:	mov    ecx,0x2ad9e0a
  408db4:	sar    DWORD PTR [edi-0x32],1
  408db7:	fwait
  408db8:	jne    0x408e0c
  408dba:	jae    0x408d6a
  408dbc:	mov    bl,0xe8
  408dbe:	pop    ebx
  408dbf:	gs call 0x6c18:0xf43a31cc
  408dc7:	mul    DWORD PTR [esi]
  408dc9:	ins    DWORD PTR es:[edi],dx
  408dca:	ins    BYTE PTR es:[edi],dx
  408dcb:	ja     0x408d9a
  408dcd:	int    0xd8
  408dcf:	fwait
  408dd0:	stos   BYTE PTR es:[edi],al
  408dd1:	inc    ecx
  408dd2:	mov    ch,0x97
  408dd4:	(bad)  
  408dd5:	dec    ebp
  408dd6:	mov    ah,0x43
  408dd8:	hlt    
  408dd9:	cmp    DWORD PTR [edx],0x4e
  408ddc:	xchg   esp,eax
  408ddd:	inc    edi
  408dde:	jb     0x408e48
  408de0:	sub    DWORD PTR [edi+0x10],eax
  408de3:	push   ecx
  408de4:	aam    0x15
  408de6:	xchg   esp,eax
  408de7:	fs mov esp,0x3eb37d8b
  408ded:	loopne 0x408e6e
  408def:	sub    BYTE PTR [ebx-0x6e7380ff],al
  408df5:	cmc    
  408df6:	sbb    bh,BYTE PTR [eax]
  408df8:	out    0xd1,al
  408dfa:	ja     0x408e56
  408dfc:	lahf   
  408dfd:	mov    edi,0x44d41efd
  408e02:	pop    es
  408e03:	call   0x11230d96
  408e08:	out    0x21,eax
  408e0a:	mov    eax,0x608c5473
  408e0f:	add    al,0xc6
  408e11:	sub    al,0xa1
  408e13:	arpl   WORD PTR [ebx-0x56803058],si
  408e19:	loope  0x408e84
  408e1b:	sub    ebx,ebx
  408e1d:	mov    edi,0xe79ab8a1
  408e22:	cmp    edx,DWORD PTR [ecx]
  408e24:	lock test al,0x15
  408e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e28:	sbb    BYTE PTR gs:[eax],bh
  408e2b:	jb     0x408e1f
  408e2d:	fcomp  DWORD PTR [eax+ebx*2+0x4c5e9f41]
  408e34:	dec    esp
  408e35:	in     al,dx
  408e36:	test   dl,bl
  408e38:	jle    0x408e50
  408e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e3b:	out    0xf8,al
  408e3d:	and    eax,0x5659ccc2
  408e42:	adc    al,BYTE PTR [ebp-0x76]
  408e45:	mov    esi,eax
  408e47:	out    dx,eax
  408e48:	xor    al,0x17
  408e4a:	sar    DWORD PTR [edx],1
  408e4c:	addr16 dec ebp
  408e4e:	mov    esi,0xae08e82a
  408e53:	and    DWORD PTR [ebp-0x1cab5c2e],esp
  408e59:	retf   0xe0a8
  408e5c:	mov    ah,BYTE PTR [esi+0x32]
  408e5f:	in     al,0xc3
  408e61:	(bad)  
  408e63:	imul   ebp,ebx,0x29099952
  408e69:	push   0x73
  408e6b:	sub    al,0xfb
  408e6d:	ror    BYTE PTR [edx],1
  408e6f:	adc    al,BYTE PTR [edi-0x2b]
  408e72:	(bad)  
  408e73:	push   cs
  408e74:	cmp    al,0x80
  408e76:	add    DWORD PTR [esi+0x65f8e954],ebp
  408e7c:	outs   dx,BYTE PTR ds:[esi]
  408e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e7e:	clc    
  408e7f:	sub    esp,0x30
  408e82:	mov    DWORD PTR [ebp-0x18],0xcb79b576
  408e89:	mov    eax,0x9c2b8ae8
  408e8e:	neg    ecx
  408e90:	mov    DWORD PTR [ebp-0x14],eax
  408e93:	adc    DWORD PTR ds:0x428449,0x14e
  408e9d:	jmp    0x40911c
  408ea2:	outs   dx,DWORD PTR ds:[esi]
  408ea3:	in     eax,0x49
  408ea5:	rcr    BYTE PTR [esp+esi*2+0x7b],1
  408ea9:	retw   
  408eab:	dec    ebx
  408eac:	jo     0x408e8b
  408eae:	add    DWORD PTR [eax],0x7d7acff0
  408eb4:	mov    esi,0xbec279be
  408eb9:	mov    esi,0xc37df105
  408ebe:	retf   
  408ebf:	loope  0x408ec9
  408ec1:	test   dl,cl
  408ec3:	add    BYTE PTR [eax+0x61],cl
  408ec6:	push   0xc00031f1
  408ecb:	test   eax,0xa0db9d5f
  408ed0:	pop    es
  408ed1:	mov    edx,0x52e1061d
  408ed6:	mov    gs,WORD PTR [ebx]
  408ed8:	lods   al,BYTE PTR ds:[esi]
  408ed9:	cdq    
  408eda:	inc    ebx
  408edb:	mov    ebp,0xf1e598d0
  408ee0:	push   ds
  408ee1:	pop    esp
  408ee2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ee3:	popf   
  408ee4:	add    ah,bl
  408ee6:	jl     0x408e81
  408ee8:	pop    ss
  408ee9:	sbb    edi,ebp
  408eeb:	cld    
  408eec:	push   cs
  408eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eee:	repnz xchg esi,eax
  408ef0:	(bad)  
  408ef2:	cmp    edx,DWORD PTR [eax-0x2d5a8442]
  408ef8:	pop    ss
  408ef9:	xchg   ebp,eax
  408efa:	or     DWORD PTR [ebx-0x755e6896],ebx
  408f00:	outs   dx,BYTE PTR ds:[esi]
  408f01:	mov    fs,edi
  408f03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f04:	or     al,0xb7
  408f06:	pop    ss
  408f07:	jae    0x408f6a
  408f09:	popf   
  408f0a:	mov    ds:0xc43b0f8c,al
  408f0f:	shl    BYTE PTR [esi-0x479223c5],1
  408f15:	je     0x408f16
  408f17:	pop    es
  408f18:	in     al,0x2b
  408f1a:	cdq    
  408f1b:	push   cs
  408f1c:	or     eax,0x50d5a101
  408f21:	jae    0x408f73
  408f23:	inc    cl
  408f25:	add    DWORD PTR [edx],edi
  408f27:	push   0xffffffc0
  408f29:	fisttp DWORD PTR [eax+0x1a65577b]
  408f2f:	mov    ch,BYTE PTR ds:0x1518df3e
  408f35:	cld    
  408f36:	mov    dh,al
  408f38:	into   
  408f39:	mov    fs,WORD PTR [eax-0x22]
  408f3c:	inc    edx
  408f3d:	inc    esp
  408f3e:	jg     0x408f55
  408f40:	ins    DWORD PTR es:[edi],dx
  408f41:	shl    DWORD PTR [eax+0x6a79ea58],cl
  408f47:	das    
  408f48:	fldcw  WORD PTR [edx-0x20]
  408f4b:	inc    edi
  408f4c:	(bad)  
  408f4d:	jmp    0x23ceb7eb
  408f52:	mov    ds:0xc8aa8d49,al
  408f57:	xor    DWORD PTR [edi-0x33638793],ebx
  408f5d:	push   ds
  408f5e:	out    0x4c,al
  408f60:	inc    esi
  408f61:	inc    ecx
  408f62:	fmul   DWORD PTR ds:0xd1734fa
  408f68:	test   al,0x4d
  408f6a:	adc    al,0x1b
  408f6c:	push   ebx
  408f6d:	aas    
  408f6e:	js     0x408fed
  408f70:	test   al,0xdc
  408f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f73:	es inc esp
  408f75:	rcl    BYTE PTR [edx],cl
  408f77:	or     eax,DWORD PTR [esi-0x32461876]
  408f7d:	and    eax,0x67b86733
  408f82:	(bad)  
  408f83:	push   0x74
  408f85:	adc    DWORD PTR [ebx-0x5b],esi
  408f88:	push   ecx
  408f89:	dec    eax
  408f8a:	or     bh,0xdb
  408f8d:	adc    dh,0x71
  408f90:	push   eax
  408f91:	cmp    esi,esp
  408f93:	neg    BYTE PTR [eax-0x4beb895c]
  408f99:	dec    edi
  408f9a:	pop    edi
  408f9b:	icebp  
  408f9c:	ret    0xf167
  408f9f:	pushf  
  408fa0:	jmp    FWORD PTR [esp+ebp*2]
  408fa3:	cmp    ah,bl
  408fa5:	push   cs
  408fa6:	mov    fs,WORD PTR [esi+0x2e]
  408fa9:	and    al,0xd9
  408fab:	nop
  408fac:	push   ecx
  408fad:	mov    bl,BYTE PTR [eax]
  408faf:	add    BYTE PTR [ebp+0x3bb09ccd],bl
  408fb5:	les    esp,FWORD PTR ds:0x7e891c2e
  408fbb:	sub    al,0xa0
  408fbd:	dec    edi
  408fbe:	and    al,0x96
  408fc0:	or     al,0x42
  408fc2:	mov    ds:0xaa0689ce,eax
  408fc7:	lea    esi,[ecx-0x20]
  408fca:	(bad)  
  408fcb:	push   ebp
  408fcc:	outs   dx,DWORD PTR ds:[esi]
  408fcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fce:	fadd   DWORD PTR [eax]
  408fd0:	inc    eax
  408fd1:	stos   DWORD PTR es:[edi],eax
  408fd2:	jecxz  0x409052
  408fd4:	and    eax,0x728d7ef9
  408fd9:	sub    ebx,DWORD PTR [esi-0xbd46964]
  408fdf:	and    al,0xef
  408fe1:	mov    ebx,0x3540bb17
  408fe6:	mov    WORD PTR [ecx],?
  408fe8:	add    edi,DWORD PTR [ecx+0x72512f79]
  408fee:	ja     0x40901b
  408ff0:	test   DWORD PTR [ebx-0x51],eax
  408ff3:	je     0x408fad
  408ff5:	dec    ebx
  408ff6:	int    0xa5
  408ff8:	dec    esi
  408ff9:	imul   edx,DWORD PTR fs:[ecx],0xfce46bf4
  409000:	sbb    DWORD PTR [ebx],0xa179f424
  409006:	scas   eax,DWORD PTR es:[edi]
  409007:	int3   
  409008:	jae    0x40907c
  40900a:	sar    DWORD PTR [ebx-0x745af80],1
  409010:	mov    cl,BYTE PTR [esi-0x60]
  409013:	pop    ebx
  409014:	lock in eax,dx
  409016:	data16 add BYTE PTR [edi+ecx*2],al
  40901a:	push   cs
  40901b:	jae    0x409057
  40901d:	rcl    DWORD PTR [esi+0x7b],1
  409020:	aam    0x65
  409022:	add    edi,DWORD PTR [edi+0x20bf6c54]
  409028:	inc    esi
  409029:	push   0x2d5aa88f
  40902e:	cmp    ah,BYTE PTR [ecx+0x27a02dc5]
  409034:	mov    eax,0x35b1983f
  409039:	ins    BYTE PTR es:[edi],dx
  40903a:	mov    edx,0xc989b12a
  40903f:	stos   BYTE PTR es:[edi],al
  409040:	xlat   BYTE PTR ds:[ebx]
  409041:	push   ss
  409042:	daa    
  409043:	daa    
  409044:	(bad)  
  409045:	pop    esi
  409046:	fidivr DWORD PTR [esi+0x61]
  409049:	aad    0x93
  40904b:	leave  
  40904c:	dec    esp
  40904d:	mov    al,ds:0x54a4d422
  409052:	mov    edx,0x3f1f873f
  409057:	pop    ds
  409058:	add    BYTE PTR [ecx+0x13],0xa
  40905c:	enter  0x17e5,0xe0
  409060:	push   esi
  409061:	test   DWORD PTR [esi-0x62],0x3ab9eb43
  409068:	mov    esi,0xde39b562
  40906d:	loope  0x409083
  40906f:	(bad)  
  409070:	cmp    eax,DWORD PTR [edi-0x6f8de2a5]
  409076:	mov    ebp,0x2fca1621
  40907b:	sub    edx,DWORD PTR [ebx+ebx*4-0x663a7224]
  409082:	out    0xe9,al
  409084:	dec    eax
  409085:	stc    
  409086:	push   ss
  409087:	sub    BYTE PTR [edi],ah
  409089:	pop    edi
  40908a:	inc    ebx
  40908b:	pop    esp
  40908c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40908d:	cmp    eax,0xc1af6e75
  409092:	mov    al,0x1b
  409094:	adc    al,0xe4
  409096:	jmp    0xbc86f90f
  40909b:	mov    esi,0x23256299
  4090a0:	lahf   
  4090a1:	shl    BYTE PTR [esi-0x2f1e6e22],cl
  4090a7:	out    dx,al
  4090a8:	mov    edx,edx
  4090aa:	loope  0x40904d
  4090ac:	sub    edx,DWORD PTR [edx]
  4090ae:	out    0xcc,al
  4090b0:	imul   ecx,eax,0x41
  4090b3:	cmp    dl,BYTE PTR [esi+0x4a9ddde2]
  4090b9:	xchg   esp,eax
  4090ba:	sub    BYTE PTR ds:0x648bfa66,dh
  4090c0:	mov    esp,DWORD PTR [ebp+0x3c743a69]
  4090c6:	xchg   edi,eax
  4090c7:	mov    DWORD PTR [ebx+eiz*4+0x2962382b],eax
  4090ce:	xchg   ebx,eax
  4090cf:	jl     0x409137
  4090d1:	adc    eax,0x609ce3b1
  4090d6:	scas   al,BYTE PTR es:[edi]
  4090d7:	cmp    al,0x19
  4090d9:	pop    ebp
  4090da:	fdivr  QWORD PTR [ecx-0x37]
  4090dd:	arpl   WORD PTR ds:0xf6bb7afc,bp
  4090e3:	mov    ds:0x57846111,al
  4090e8:	sub    edi,DWORD PTR [eax]
  4090ea:	add    bl,BYTE PTR [edi]
  4090ec:	in     eax,dx
  4090ed:	lahf   
  4090ee:	sbb    al,0x82
  4090f0:	and    edx,DWORD PTR [ebx]
  4090f2:	pop    edx
  4090f3:	mov    BYTE PTR [edi+0x29ce1336],cl
  4090f9:	pop    edx
  4090fa:	add    BYTE PTR [edx],bl
  4090fc:	fsubp  st(6),st
  4090fe:	test   BYTE PTR [eax+0x3132f60c],0x38
  409105:	push   eax
  409106:	pop    ecx
  409107:	sub    ah,bl
  409109:	test   DWORD PTR ds:0x168020bc,edi
  40910f:	sub    BYTE PTR [ecx+eax*4+0x23],dl
  409113:	push   ebp
  409114:	jb     0x409171
  409116:	daa    
  409117:	and    al,0x8a
  409119:	pop    ebp
  40911a:	xor    esp,DWORD PTR [edx+0x72d045c7]
  409120:	mov    ch,0x79
  409122:	retf   
  409123:	mov    DWORD PTR [ebp-0x2c],eax
  409126:	cmp    DWORD PTR ds:0x428571,0x0
  40912d:	mov    DWORD PTR ds:0x42856d,0x24a6
  409137:	mov    DWORD PTR ds:0x428421,0x40da
  409141:	jmp    0x4091a4
  409146:	not    eax
  409148:	mov    DWORD PTR ds:0x4284c5,0x7db9
  409152:	cmp    DWORD PTR ds:0x428571,0x0
  409159:	jae    0x409182
  40915f:	push   0x1999
  409164:	push   0x428147
  409169:	push   0x4282f3
  40916e:	call   DWORD PTR ds:0x42e0c8
  409174:	sub    ecx,DWORD PTR ds:0x428369
  40917a:	and    ecx,ecx
  40917c:	adc    DWORD PTR ds:0x428409,ebx
  409182:	mov    ecx,DWORD PTR ds:0x428471
  409188:	add    DWORD PTR ds:0x428341,ecx
  40918e:	neg    DWORD PTR ds:0x428335
  409194:	xor    DWORD PTR ds:0x4284f5,ebx
  40919a:	or     DWORD PTR ds:0x428429,0x673
  4091a4:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  4091ab:	mov    DWORD PTR [ebp-0x24],0x29bd2
  4091b2:	mov    DWORD PTR [ebp-0x20],0x6ec3
  4091b9:	sbb    eax,ecx
  4091bb:	push   esi
  4091bc:	mov    DWORD PTR [ebp-0x1c],0x2a74
  4091c3:	xor    ecx,ecx
  4091c5:	xor    ecx,DWORD PTR ds:0x4283b9
  4091cb:	mov    eax,ds:0x42852d
  4091d0:	sub    ecx,eax
  4091d2:	or     ecx,DWORD PTR [ecx+eax*1]
  4091d5:	mov    DWORD PTR [ebp-0x10],0x2e2c
  4091dc:	push   0x5285
  4091e1:	or     DWORD PTR ds:0x428341,ecx
  4091e7:	mov    DWORD PTR [ebp-0xc],0x3d0a
  4091ee:	and    ecx,ecx
  4091f0:	mov    eax,DWORD PTR [ebp-0x10]
  4091f3:	and    ecx,DWORD PTR ds:0x4284f1
  4091f9:	mov    ecx,DWORD PTR [ebp-0xc]
  4091fc:	sub    DWORD PTR ds:0x4284f1,0x428579
  409206:	push   0x712c
  40920b:	or     DWORD PTR ds:0x4284fd,0x428419
  409215:	push   ecx
  409216:	sbb    DWORD PTR ds:0x4284ed,0x3312
  409220:	push   eax
  409221:	call   0x41594e
  409226:	and    DWORD PTR ds:0x4284ed,edi
  40922c:	mov    ecx,DWORD PTR [ebp-0x20]
  40922f:	mov    esi,DWORD PTR [ebp-0x1c]
  409232:	and    DWORD PTR ds:0x4284f9,0x428411
  40923c:	push   0x5f43
  409241:	and    DWORD PTR ds:0x428441,0x42855d
  40924b:	or     edx,0x69b4
  409251:	push   0x1657
  409256:	or     eax,0x528b
  40925b:	xor    edx,esi
  40925d:	xor    eax,ecx
  40925f:	xor    DWORD PTR ds:0x428425,0x4284c9
  409269:	push   edx
  40926a:	push   eax
  40926b:	or     DWORD PTR ds:0x428369,0x42c0
  409275:	call   0x41594e
  40927a:	mov    esi,DWORD PTR ds:0x42842d
  409280:	xor    esi,DWORD PTR ds:0x428465
  409286:	mov    DWORD PTR ds:0x42842d,esi
  40928c:	mov    ecx,DWORD PTR [ebp-0x28]
  40928f:	and    esi,DWORD PTR ds:0x428569
  409295:	jmp    0x409514
  40929a:	aam    0x9e
  40929c:	jp     0x409286
  40929e:	mov    esp,0xba543b
  4092a3:	ret    0x923c
  4092a6:	adc    eax,0x35cfb227
  4092ab:	cmp    DWORD PTR [esi-0x413d8642],0xffffffbe
  4092b2:	cmc    
  4092b3:	push   ebx
  4092b4:	call   0x2d6a:0x9bc045c1
  4092bb:	cwde   
  4092bc:	popf   
  4092bd:	xor    ebx,ebp
  4092bf:	mov    WORD PTR [eax+0x9],ds
  4092c2:	(bad)  
  4092c3:	push   0xede31d4a
  4092c8:	pusha  
  4092c9:	sahf   
  4092ca:	push   edx
  4092cb:	pop    ecx
  4092cc:	dec    esi
  4092cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092ce:	xor    BYTE PTR [ebp+0x75a24ef2],ch
  4092d4:	adc    esi,esi
  4092d6:	sbb    BYTE PTR ds:0xf6729bf3,bh
  4092dc:	rcl    DWORD PTR [esi+0x4b],cl
  4092df:	dec    esi
  4092e0:	pop    ecx
  4092e1:	aam    0xbf
  4092e3:	shr    BYTE PTR [ebx],cl
  4092e5:	int3   
  4092e6:	xor    al,0x7a
  4092e8:	and    DWORD PTR ds:[edi-0x260ffe5a],edx
  4092ef:	mov    esp,0xe9a9d9ec
  4092f4:	iret   
  4092f5:	inc    edi
  4092f6:	loopne 0x409354
  4092f8:	clc    
  4092f9:	xchg   esi,eax
  4092fa:	imul   esi,DWORD PTR [esi+0x54],0x7fe8999b
  409301:	pop    esi
  409302:	bound  ebp,QWORD PTR [edx+0xbbaa691]
  409308:	add    cl,BYTE PTR [ebp+0x28]
  40930b:	or     al,0x5
  40930d:	mov    ebx,0x1b96b0
  409312:	cmp    al,0xae
  409314:	xchg   ebx,eax
  409315:	pop    edx
  409316:	pop    eax
  409317:	sbb    al,0x74
  409319:	(bad)  
  40931a:	push   ecx
  40931b:	addr16 adc eax,0x9768bebd
  409321:	hlt    
  409322:	pop    ecx
  409323:	ss inc eax
  409325:	addr16 js 0x4093a0
  409328:	sahf   
  409329:	pop    esi
  40932a:	push   ebx
  40932b:	mov    ebp,0x45ba1d67
  409330:	sub    eax,0xaa1f55d7
  409335:	sbb    BYTE PTR [esi+0x2905fbfd],0x2f
  40933c:	dec    eax
  40933d:	test   eax,0x942f2e5c
  409342:	xchg   esi,eax
  409343:	pop    esp
  409344:	mov    ebx,0xa78215bb
  409349:	push   0xad656795
  40934e:	adc    DWORD PTR [ecx+0xf],0x4945abb
  409355:	jno    0x4092f9
  409357:	(bad)  
  409358:	sbb    BYTE PTR [ebp+0x18075889],ah
  40935e:	call   0x6165:0x2e7970e5
  409365:	jp     0x409347
  409367:	cmp    dl,BYTE PTR [ecx+0x17f0f616]
  40936d:	ins    BYTE PTR es:[edi],dx
  40936e:	push   edi
  40936f:	hlt    
  409370:	push   cs
  409371:	out    dx,eax
  409372:	and    al,0xc6
  409374:	data16 mov dl,0x38
  409377:	jbe    0x40935e
  409379:	inc    esi
  40937a:	cdq    
  40937b:	cli    
  40937c:	or     al,0xb2
  40937e:	mov    cl,0x31
  409380:	cmp    DWORD PTR [ebx],0x20
  409383:	adc    DWORD PTR [eax+0x43],ebp
  409386:	xchg   esp,eax
  409387:	mov    esp,0xa4614ea4
  40938c:	dec    esi
  40938d:	add    DWORD PTR [edi+edx*1-0xd],edi
  409391:	shr    ah,0x59
  409394:	das    
  409395:	ficom  WORD PTR [eax-0x421b11ed]
  40939b:	sbb    al,0xfa
  40939d:	sub    eax,0xab23c34e
  4093a2:	sbb    eax,0x346f9edd
  4093a7:	inc    esp
  4093a8:	fucomi st,st(7)
  4093aa:	shl    BYTE PTR [edx+edx*2],0x2d
  4093ae:	xchg   ecx,eax
  4093af:	adc    dh,BYTE PTR [eax+0x25]
  4093b2:	imul   ecx,DWORD PTR [ecx-0x47],0x9ca60169
  4093b9:	dec    ecx
  4093ba:	fucom  st(3)
  4093bc:	lods   al,BYTE PTR gs:[esi]
  4093be:	jo     0x40935c
  4093c0:	ficom  WORD PTR [ecx]
  4093c2:	popa   
  4093c3:	mov    esp,0x4dc4baf2
  4093c8:	mov    eax,ds:0x6643150
  4093cd:	mov    al,0xf3
  4093cf:	test   BYTE PTR [ebp-0x80cc24],0xa7
  4093d6:	mov    bh,0x45
  4093d8:	hlt    
  4093d9:	xchg   DWORD PTR ds:[ecx],ebp
  4093dc:	and    bh,BYTE PTR [eax-0x404bfc18]
  4093e2:	scas   al,BYTE PTR es:[edi]
  4093e3:	mov    bh,0x13
  4093e5:	xchg   ebx,eax
  4093e6:	or     ebp,esi
  4093e8:	push   esi
  4093e9:	jae    0x40936b
  4093eb:	xor    BYTE PTR [eax+0xa7b2c7e],bl
  4093f1:	lds    ebp,FWORD PTR [eax+0x66cfd443]
  4093f7:	jae    0x4093d6
  4093f9:	test   al,0x60
  4093fb:	repnz xor eax,0x43b8462d
  409401:	fsub   QWORD PTR [edx+esi*8+0x47]
  409405:	cmp    DWORD PTR [edi+0x68e95bb9],ecx
  40940b:	(bad)  
  40940c:	push   es
  40940d:	mov    dl,BYTE PTR [esi]
  40940f:	or     al,0x32
  409411:	jo     0x409409
  409413:	test   DWORD PTR [ebx-0x43da4cb6],ecx
  409419:	push   ds
  40941a:	push   ss
  40941b:	sub    al,0xf4
  40941d:	xor    dl,dl
  40941f:	aaa    
  409420:	inc    esp
  409421:	inc    esi
  409422:	call   0x197c37cd
  409427:	pop    edi
  409428:	scas   al,BYTE PTR es:[edi]
  409429:	add    edi,DWORD PTR [edi+0x7]
  40942c:	scas   eax,DWORD PTR es:[edi]
  40942d:	shr    bl,1
  40942f:	fimul  WORD PTR [ebx+edi*4]
  409432:	mov    ah,0x87
  409434:	jmp    0x193803a3
  409439:	in     al,dx
  40943a:	pop    edi
  40943b:	std    
  40943c:	sbb    al,0xee
  40943e:	jae    0x409441
  409440:	sahf   
  409441:	ds pop esp
  409443:	add    esp,eax
  409445:	rol    BYTE PTR [esi],1
  409447:	dec    eax
  409448:	or     al,0x34
  40944a:	inc    esp
  40944b:	inc    esp
  40944c:	stos   BYTE PTR es:[edi],al
  40944d:	mov    bh,0x9d
  40944f:	jl     0x4094c2
  409451:	pop    es
  409452:	adc    al,0xa2
  409454:	sti    
  409455:	mov    ch,0xaa
  409457:	out    dx,al
  409458:	jecxz  0x4094d9
  40945a:	inc    esp
  40945b:	repz mov bl,0xf9
  40945e:	mov    ecx,0x5d24618a
  409463:	das    
  409464:	xor    ah,al
  409466:	pop    ebx
  409467:	xor    eax,0x84172a80
  40946c:	mov    BYTE PTR [esi+0x14],dl
  40946f:	jmp    0x4094ba
  409471:	in     al,dx
  409472:	sub    al,0x72
  409474:	pop    edx
  409475:	daa    
  409476:	push   esp
  409477:	(bad)  
  409478:	call   DWORD PTR [esi]
  40947a:	lock ss xchg edx,eax
  40947d:	cli    
  40947e:	mov    ah,0x63
  409480:	jb     0x409491
  409482:	in     al,dx
  409483:	add    dl,BYTE PTR [esi]
  409485:	mov    eax,0x5fc6e389
  40948a:	imul   eax,DWORD PTR [ecx-0x31478bfe],0x52
  409491:	push   cs
  409492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409493:	inc    edi
  409494:	mov    ch,BYTE PTR [edx]
  409496:	stos   DWORD PTR es:[edi],eax
  409497:	int3   
  409498:	dec    ebx
  409499:	pushf  
  40949a:	mov    al,0xb5
  40949c:	sar    DWORD PTR [esp+eiz*8],cl
  40949f:	mov    eax,0x760aa99f
  4094a4:	mov    ebx,DWORD PTR [ebp-0x5381bda8]
  4094aa:	and    dl,ch
  4094ac:	adc    esp,eax
  4094ae:	jp     0x409514
  4094b0:	jnp    0x409486
  4094b2:	mov    al,ds:0x4ef31e0c
  4094b7:	das    
  4094b8:	or     eax,0x78fe416a
  4094bd:	mov    ebx,0x9b1e2d25
  4094c2:	adc    eax,0xc5bbca9a
  4094c7:	scas   al,BYTE PTR es:[edi]
  4094c8:	sub    BYTE PTR [esi+0xa7d3839],ch
  4094ce:	adc    edi,DWORD PTR [ecx]
  4094d0:	shr    DWORD PTR [edx+0xa92fc10],cl
  4094d6:	ret    0x54b6
  4094d9:	fwait
  4094da:	cmp    ah,ch
  4094dc:	(bad)  
  4094dd:	fdivr  QWORD PTR [esi-0x3a]
  4094e0:	lock aas 
  4094e2:	(bad)  
  4094e4:	add    cl,al
  4094e6:	mov    ebx,0x5ae6bd44
  4094eb:	push   es
  4094ec:	call   0x5057e518
  4094f1:	dec    edi
  4094f2:	add    ebp,DWORD PTR [edi]
  4094f4:	and    al,0x76
  4094f6:	xchg   BYTE PTR [esi+edi*8+0x5a],al
  4094fa:	mov    edx,0xc349820d
  4094ff:	mov    BYTE PTR [ebx+0x33a65d00],bl
  409505:	(bad)  
  409506:	inc    ebx
  409507:	(bad)  
  409508:	icebp  
  409509:	iret   
  40950a:	ins    DWORD PTR es:[edi],dx
  40950b:	mov    DWORD PTR [esi+0x2b],esi
  40950e:	sbb    DWORD PTR [ebp-0x16],ebp
  409511:	or     ebx,0xdc758b6c
  409517:	adc    DWORD PTR ds:0x42834d,0x61cb
  409521:	push   esi
  409522:	dec    DWORD PTR ds:0x428341
  409528:	push   ecx
  409529:	not    DWORD PTR ds:0x428551
  40952f:	push   edx
  409530:	adc    DWORD PTR ds:0x428451,0x42846d
  40953a:	push   eax
  40953b:	sbb    DWORD PTR ds:0x428345,0x42834d
  409545:	call   0x42227d
  40954a:	mov    DWORD PTR [ebp-0x30],eax
  40954d:	cmp    DWORD PTR ds:0x428439,0x0
  409554:	mov    ecx,0x19e0
  409559:	mov    DWORD PTR ds:0x428549,0x71a7
  409563:	mov    ecx,0x1714
  409568:	jmp    0x4095c4
  40956d:	movzx  eax,BYTE PTR ds:0x428435
  409574:	mov    eax,0x70fc
  409579:	cmp    DWORD PTR ds:0x428439,0x0
  409580:	jb     0x4095ac
  409586:	push   0x428451
  40958b:	push   0x4282f3
  409590:	call   DWORD PTR ds:0x42e24c
  409596:	and    DWORD PTR ds:0x42855d,0x600c
  4095a0:	add    ecx,DWORD PTR ds:0x42844d
  4095a6:	or     ecx,DWORD PTR ds:0x428465
  4095ac:	adc    ecx,esi
  4095ae:	sbb    DWORD PTR ds:0x4284ed,edx
  4095b4:	sbb    DWORD PTR ds:0x428441,0x1a7e
  4095be:	add    esi,0x6267
  4095c4:	mov    DWORD PTR [ebp-0x2c],edx
  4095c7:	mov    DWORD PTR [ebp-0x10],0x5fa8
  4095ce:	mov    DWORD PTR [ebp-0xc],0x1751
  4095d5:	or     DWORD PTR ds:0x428465,0x428581
  4095df:	mov    DWORD PTR [ebp-0x20],0x5e90
  4095e6:	sub    DWORD PTR ds:0x428415,ecx
  4095ec:	mov    DWORD PTR [ebp-0x1c],0xfc1
  4095f3:	mov    edx,DWORD PTR ds:0x4283e9
  4095f9:	mov    edx,DWORD PTR [edx]
  4095fb:	adc    DWORD PTR ds:0x42835d,edx
  409601:	mov    DWORD PTR [ebp-0x28],0x7044
  409608:	or     DWORD PTR ds:0x42842d,0x3ffc
  409612:	mov    DWORD PTR [ebp-0x24],0x7bf
  409619:	mov    eax,DWORD PTR [ebp-0x28]
  40961c:	adc    ecx,0x6b26
  409622:	mov    ecx,DWORD PTR [ebp-0x24]
  409625:	add    DWORD PTR ds:0x428571,edi
  40962b:	mov    edx,DWORD PTR [ebp-0x20]
  40962e:	cmp    DWORD PTR ds:0x428435,0x0
  409635:	mov    DWORD PTR ds:0x42843d,edi
  40963b:	mov    DWORD PTR ds:0x428405,ecx
  409641:	mov    DWORD PTR ds:0x428445,0x2db2
  40964b:	jmp    0x409715
  409650:	mov    esi,DWORD PTR ds:0x428441
  409656:	mov    DWORD PTR ds:0x4284d9,ebx
  40965c:	cmp    DWORD PTR ds:0x428435,0x0
  409663:	jg     0x409686
  409669:	push   0x3d0d
  40966e:	call   DWORD PTR ds:0x42e000
  409674:	xor    DWORD PTR ds:0x428439,ecx
  40967a:	sbb    DWORD PTR ds:0x428435,edi
  409680:	dec    DWORD PTR ds:0x428349
  409686:	mov    esi,DWORD PTR ds:0x428335
  40968c:	xor    DWORD PTR ds:0x4284dd,esi
  409692:	and    DWORD PTR ds:0x4284e5,ecx
  409698:	dec    esi
  409699:	cmp    DWORD PTR ds:0x4284e9,0x0
  4096a0:	mov    DWORD PTR ds:0x4284f1,0x1a91
  4096aa:	movzx  esi,BYTE PTR ds:0x428341
  4096b1:	mov    esi,0x63fe
  4096b6:	jmp    0x409715
  4096bb:	mov    DWORD PTR ds:0x42842d,0x20e7
  4096c5:	cmp    DWORD PTR ds:0x4284e9,0x0
  4096cc:	jae    0x4096f5
  4096d2:	push   DWORD PTR [ebp-0x20]
  4096d5:	push   0x278f
  4096da:	push   DWORD PTR [ebp-0x1c]
  4096dd:	call   DWORD PTR ds:0x42e004
  4096e3:	or     esi,DWORD PTR ds:0x4284d1
  4096e9:	sbb    esi,DWORD PTR ds:0x4284c5
  4096ef:	and    DWORD PTR ds:0x42832d,edx
  4096f5:	dec    DWORD PTR ds:0x428569
  4096fb:	or     esi,0x67c0
  409701:	add    DWORD PTR ds:0x428415,0x146d
  40970b:	sbb    DWORD PTR ds:0x428565,0xdcf
  409715:	mov    esi,DWORD PTR [ebp-0x1c]
  409718:	add    eax,0x355c
  40971d:	mov    DWORD PTR ds:0x42836d,0x28d
  409727:	adc    ecx,0x819
  40972d:	xor    DWORD PTR ds:0x428331,0x49ee
  409737:	or     eax,edx
  409739:	mov    DWORD PTR ds:0x428365,0x383a
  409743:	mov    edx,DWORD PTR [ebp-0x10]
  409746:	or     ecx,esi
  409748:	sub    DWORD PTR ds:0x428359,0x6778
  409752:	mov    esi,DWORD PTR [ebp-0xc]
  409755:	or     eax,edx
  409757:	movzx  edx,BYTE PTR ds:0x42854d
  40975e:	xor    edx,DWORD PTR ds:0x428465
  409764:	mov    DWORD PTR ds:0x42854d,edx
  40976a:	mov    edx,DWORD PTR [ebp-0x30]
  40976d:	or     ecx,esi
  40976f:	mov    esi,DWORD PTR [ebp-0x2c]
  409772:	or     eax,0xf34
  409777:	neg    DWORD PTR ds:0x428469
  40977d:	or     ecx,0x6c90
  409783:	mov    DWORD PTR ds:0x42845d,0x7584
  40978d:	cmp    edx,eax
  40978f:	mov    DWORD PTR ds:0x428441,0x7ecb
  409799:	jne    0x4097bb
  40979f:	mov    DWORD PTR ds:0x42840d,0x4655
  4097a9:	cmp    esi,ecx
  4097ab:	mov    DWORD PTR ds:0x42840d,0x7ff3
  4097b5:	je     0x40a10f
  4097bb:	xor    esi,esi
  4097bd:	or     esi,DWORD PTR ds:0x42855d
  4097c3:	adc    DWORD PTR ds:0x4284e5,esi
  4097c9:	mov    DWORD PTR [ebp-0x30],0x5ddc
  4097d0:	mov    DWORD PTR [ebp-0x2c],0x7433
  4097d7:	mov    eax,DWORD PTR [ebp-0x30]
  4097da:	mov    ecx,DWORD PTR [ebp-0x2c]
  4097dd:	xor    ecx,0xfffffd1f
  4097e3:	xor    eax,0xffff9fff
  4097e8:	and    ecx,0x6e0
  4097ee:	and    eax,0x6244
  4097f3:	mov    DWORD PTR [ebp-0x10],eax
  4097f6:	mov    DWORD PTR [ebp-0xc],ecx
  4097f9:	mov    DWORD PTR [ebp-0x20],0x4a50
  409800:	mov    DWORD PTR [ebp-0x1c],0x2079
  409807:	mov    DWORD PTR [ebp-0x28],0x792e
  40980e:	mov    DWORD PTR [ebp-0x24],0x10e8
  409815:	mov    DWORD PTR [ebp-0x30],0x22b3
  40981c:	mov    DWORD PTR [ebp-0x2c],0x2293
  409823:	mov    eax,DWORD PTR [ebp-0x30]
  409826:	mov    ecx,DWORD PTR [ebp-0x2c]
  409829:	mov    edx,DWORD PTR [ebp-0x28]
  40982c:	mov    esi,DWORD PTR [ebp-0x24]
  40982f:	add    eax,edx
  409831:	mov    edx,DWORD PTR [ebp-0x20]
  409834:	adc    ecx,esi
  409836:	mov    esi,DWORD PTR [ebp-0x1c]
  409839:	add    eax,0x3e60
  40983e:	adc    ecx,0xd49e
  409844:	xor    eax,0x14ce
  409849:	xor    ecx,0x354f
  40984f:	add    eax,edx
  409851:	mov    edx,DWORD PTR [ebp-0x10]
  409854:	adc    ecx,esi
  409856:	mov    esi,DWORD PTR [ebp-0xc]
  409859:	cmp    edx,eax
  40985b:	jne    0x409869
  409861:	cmp    esi,ecx
  409863:	je     0x40a10f
  409869:	mov    DWORD PTR [ebp-0x28],0x4db
  409870:	mov    DWORD PTR [ebp-0x24],0x233b
  409877:	mov    DWORD PTR [ebp-0x30],0x2c94
  40987e:	push   0x6b33
  409883:	mov    DWORD PTR [ebp-0x2c],0x647f
  40988a:	jmp    0x409b09
  40988f:	and    BYTE PTR [ebx-0x53bd1443],ah
  409895:	sub    al,0xab
  409897:	dec    edi
  409898:	test   al,0xc
  40989a:	xchg   edx,eax
  40989b:	xchg   edi,eax
  40989c:	mov    edi,0x87f2e3d9
  4098a1:	mov    esi,0xbec279be
  4098a6:	mov    esi,0x9435f2ed
  4098ab:	mov    bl,0xf1
  4098ad:	add    dh,BYTE PTR [ecx+0x6354c4f7]
  4098b3:	dec    edi
  4098b4:	xchg   ecx,eax
  4098b5:	aaa    
  4098b6:	ds xchg esi,eax
  4098b8:	cli    
  4098b9:	stos   BYTE PTR es:[edi],al
  4098ba:	outs   dx,DWORD PTR ds:[esi]
  4098bb:	sbb    esp,DWORD PTR [ebx+0x11]
  4098be:	nop
  4098bf:	in     al,dx
  4098c0:	jo     0x40988a
  4098c2:	xor    al,0x71
  4098c4:	adc    DWORD PTR [ebx-0x4a],ebp
  4098c7:	mov    esi,0x9f74e285
  4098cc:	jmp    0x40988a
  4098ce:	dec    esp
  4098cf:	xor    eax,DWORD PTR [esi-0x73ac978a]
  4098d5:	sbb    eax,0x1ea9b6b8
  4098da:	dec    ecx
  4098db:	mov    ebx,0x5be0d1c
  4098e0:	cmp    eax,0x9c2cf50f
  4098e5:	xchg   al,dh
  4098e7:	lock xchg edi,eax
  4098e9:	push   cs
  4098ea:	adc    ebp,esp
  4098ec:	adc    al,BYTE PTR [edi-0x78451486]
  4098f2:	and    DWORD PTR [edx+0x25],0xfedd94b8
  4098f9:	push   0xffffff8b
  4098fb:	sbb    ebx,DWORD PTR [eax]
  4098fd:	jne    0x409899
  4098ff:	arpl   WORD PTR [ebp-0xa33d520],cx
  409905:	out    dx,eax
  409906:	shr    ebx,1
  409908:	fdivr  st(5),st
  40990a:	sub    eax,0x6d2ff16a
  40990f:	das    
  409910:	xchg   esi,eax
  409911:	ja     0x40991e
  409913:	sbb    BYTE PTR [ebx+eiz*4-0x3e],ch
  409917:	add    ebp,esp
  409919:	fmulp  st(6),st
  40991b:	inc    edx
  40991c:	pop    eax
  40991d:	popf   
  40991e:	pop    ebx
  40991f:	out    0x47,eax
  409921:	xor    bh,BYTE PTR [esi+0x15f58601]
  409927:	dec    dh
  409929:	inc    esp
  40992a:	pop    esp
  40992b:	or     BYTE PTR [eax-0x4b646db2],dl
  409931:	xor    eax,0xff156cc5
  409936:	jecxz  0x409949
  409938:	mov    edi,0xd6c8c619
  40993d:	daa    
  40993e:	mov    WORD PTR [eax+ecx*2+0xa],ss
  409942:	inc    eax
  409943:	push   ss
  409944:	daa    
  409945:	cmp    esp,ebp
  409947:	add    al,0x2b
  409949:	inc    edx
  40994a:	mov    BYTE PTR [edx+ecx*1+0x3c],ch
  40994e:	popa   
  40994f:	mov    ah,0x94
  409951:	sbb    BYTE PTR [esi+0x23],dl
  409954:	daa    
  409955:	dec    esi
  409956:	repnz sub esi,DWORD PTR [edx-0x47]
  40995a:	ficom  DWORD PTR [bx+si-0x73]
  40995e:	stos   BYTE PTR es:[edi],al
  40995f:	lahf   
  409960:	fdivr  QWORD PTR [edx]
  409962:	jo     0x40991b
  409964:	mov    dh,BYTE PTR [ecx]
  409966:	test   DWORD PTR [esi-0x6c953c2f],ebx
  40996c:	std    
  40996d:	xor    edx,DWORD PTR [ecx]
  40996f:	mov    ah,0x8f
  409971:	jecxz  0x409948
  409973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409974:	sbb    al,0x9f
  409976:	inc    ecx
  409977:	xchg   ebp,eax
  409978:	repz sub DWORD PTR [edx-0x19f4df85],ecx
  40997f:	out    dx,eax
  409980:	sbb    eax,0x8e40a5d2
  409985:	call   0xc73f:0x14dfa649
  40998c:	pop    ds
  40998d:	popa   
  40998e:	arpl   WORD PTR [ebp-0x42],dx
  409991:	fisub  WORD PTR [edi]
  409993:	push   edi
  409994:	test   DWORD PTR [eax],esi
  409996:	das    
  409997:	dec    esp
  409998:	xchg   edx,eax
  409999:	dec    ebx
  40999a:	mov    bl,0x3a
  40999c:	mov    ds:0x974a112b,al
  4099a1:	jl     0x409961
  4099a3:	pop    edx
  4099a4:	shl    DWORD PTR [edi+0x4f3c9da1],0x84
  4099ab:	jl     0x409995
  4099ad:	sbb    edx,DWORD PTR [esi+0x4c]
  4099b0:	xor    ah,BYTE PTR [esp+ebx*8]
  4099b3:	test   DWORD PTR [ebx+0x220eae10],0xb90a31be
  4099bd:	fbld   TBYTE PTR [eax-0x29066112]
  4099c3:	jo     0x409a31
  4099c5:	ins    DWORD PTR es:[edi],dx
  4099c6:	enter  0x3fb2,0x50
  4099ca:	pop    es
  4099cb:	pop    ds
  4099cc:	sub    eax,0xcb9f623
  4099d1:	shr    DWORD PTR [esi-0x5e96ac4],0xf
  4099d8:	ins    BYTE PTR es:[edi],dx
  4099d9:	mov    ebp,0x98b2e9e9
  4099de:	pop    ds
  4099df:	retf   0xe0b4
  4099e2:	add    ah,BYTE PTR cs:[ebx+ebx*4-0x706604c]
  4099ea:	popa   
  4099eb:	dec    edx
  4099ec:	ja     0x409982
  4099ee:	mov    BYTE PTR [edx],dl
  4099f0:	or     eax,0x5f702c32
  4099f5:	or     DWORD PTR [bx+di],esi
  4099f8:	xchg   esp,eax
  4099f9:	mov    esp,0xf3efd07
  4099fe:	loope  0x409990
  409a00:	sub    bl,al
  409a02:	adc    BYTE PTR [ebp-0x7ac92e97],dh
  409a08:	pop    ds
  409a09:	fwait
  409a0a:	ins    BYTE PTR es:[edi],dx
  409a0b:	retf   
  409a0c:	xor    BYTE PTR [edi-0x5e31b518],dh
  409a12:	add    al,0x24
  409a14:	mov    cl,0xb7
  409a16:	or     BYTE PTR [esi-0xce46f1b],ch
  409a1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a1d:	add    esi,ecx
  409a1f:	ja     0x4099a6
  409a21:	jne    0x409a4f
  409a23:	out    dx,al
  409a24:	lock ja 0x409a83
  409a27:	repz bound edx,QWORD PTR [ebx-0x74e00b60]
  409a2e:	jo     0x4099d6
  409a30:	pop    edx
  409a31:	rcl    DWORD PTR [ebx+0x47ab9368],0xe5
  409a38:	(bad)  
  409a39:	pop    esp
  409a3a:	dec    eax
  409a3b:	mov    edi,0x5eaa4492
  409a40:	mov    ds:0x5a70f6ef,al
  409a45:	ret    0x10c8
  409a48:	adc    ecx,ebp
  409a4a:	fldcw  WORD PTR [ebx-0x4841794e]
  409a50:	shl    DWORD PTR [ebx+0x377451bb],1
  409a56:	rcl    DWORD PTR [edx-0x32],cl
  409a59:	adc    ebx,ebx
  409a5b:	xchg   ch,dl
  409a5d:	inc    ecx
  409a5e:	mov    bh,0x5a
  409a60:	imul   ebx,DWORD PTR [ecx+ebx*2],0xffffffcc
  409a64:	test   al,0x1b
  409a66:	jb     0x409a80
  409a68:	push   ebx
  409a69:	mov    ds:0xd51657c7,eax
  409a6e:	enter  0xfee8,0xe5
  409a72:	xchg   edi,eax
  409a73:	out    0xc,eax
  409a75:	mov    al,0xe0
  409a77:	xor    dh,cl
  409a79:	push   esp
  409a7a:	pop    edi
  409a7b:	mov    cl,0x30
  409a7d:	fsubr  QWORD PTR [ebx-0x31]
  409a80:	or     BYTE PTR [edx],0xf3
  409a83:	loopne 0x409af3
  409a85:	fwait
  409a86:	mov    BYTE PTR [eax-0x65],ch
  409a89:	jmp    0x83fd5894
  409a8e:	call   0x77:0x68dc0018
  409a95:	imul   ebx,eax,0x843eec44
  409a9b:	sbb    DWORD PTR ds:0x12917bad,ebp
  409aa1:	pop    ds
  409aa2:	aaa    
  409aa3:	dec    eax
  409aa4:	adc    DWORD PTR [eax],ebp
  409aa6:	or     eax,0x91da1af9
  409aab:	jae    0x409ad0
  409aad:	hlt    
  409aae:	sub    edi,DWORD PTR [ebp-0x71]
  409ab1:	jo     0x409a3a
  409ab3:	es push es
  409ab5:	xor    ah,BYTE PTR [ecx]
  409ab7:	jae    0x409b37
  409ab9:	sbb    BYTE PTR [eax+0x1a],ch
  409abc:	mov    eax,0x855bffd3
  409ac2:	sbb    eax,0x45f4cf86
  409ac7:	mov    cl,0x69
  409ac9:	sahf   
  409aca:	add    BYTE PTR [ebp+ecx*2-0x1],0x26
  409acf:	dec    eax
  409ad0:	xlat   BYTE PTR ds:[ebx]
  409ad1:	scas   eax,DWORD PTR es:[edi]
  409ad2:	cmp    eax,0x73ccf73f
  409ad7:	into   
  409ad8:	adc    BYTE PTR [edi+0x1b45b9],al
  409ade:	std    
  409adf:	and    DWORD PTR [ebp+0x5a],esp
  409ae2:	pop    ebx
  409ae3:	xor    DWORD PTR [edx+0x3c],ebx
  409ae6:	jl     0x409a7f
  409ae8:	jns    0x409b35
  409aea:	and    al,0x52
  409aec:	cmp    DWORD PTR [ebp+0x2c],ecx
  409aef:	cmc    
  409af0:	pop    ss
  409af1:	jae    0x409b4e
  409af3:	and    eax,0xfa9ada32
  409af8:	test   eax,0x1699a666
  409afd:	hlt    
  409afe:	test   eax,0x9471b618
  409b03:	in     al,dx
  409b04:	dec    ecx
  409b05:	sbb    edx,DWORD PTR [edx+0x30]
  409b08:	test   DWORD PTR [ebx+0x4d8bd045],ecx
  409b0e:	aam    0x68
  409b10:	(bad)  
  409b11:	jl     0x409b13
  409b13:	add    BYTE PTR [ecx+0x50],dl
  409b16:	call   0x41594e
  409b1b:	mov    ecx,DWORD PTR [ebp-0x28]
  409b1e:	mov    esi,DWORD PTR [ebp-0x24]
  409b21:	push   0x4e1a18a
  409b26:	push   0x283cdcc
  409b2b:	and    edx,esi
  409b2d:	and    eax,ecx
  409b2f:	push   edx
  409b30:	push   eax
  409b31:	call   0x41594e
  409b36:	xor    eax,0x687b
  409b3b:	xor    edx,0x18d4
  409b41:	mov    DWORD PTR [ebp-0x30],eax
  409b44:	mov    DWORD PTR [ebp-0x2c],edx
  409b47:	mov    eax,ds:0x42291c
  409b4c:	cmp    eax,0x7cd80819
  409b51:	jne    0x40a10f
  409b57:	mov    eax,DWORD PTR [ebp-0x18]
  409b5a:	mov    ecx,DWORD PTR [ebp-0x14]
  409b5d:	mov    edx,DWORD PTR [ebp-0x18]
  409b60:	mov    esi,DWORD PTR [ebp-0x14]
  409b63:	shrd   eax,ecx,0x2
  409b67:	shl    edx,0x1e
  409b6a:	mov    edx,DWORD PTR ds:0x422708
  409b70:	mov    edx,DWORD PTR [edx+0x1a8]
  409b76:	shr    ecx,0x2
  409b79:	xor    esi,esi
  409b7b:	mov    ecx,0x32de6d5d
  409b80:	xor    eax,ecx
  409b82:	or     eax,esi
  409b84:	mov    DWORD PTR [edx],eax
  409b86:	mov    eax,DWORD PTR [ebp-0x18]
  409b89:	mov    edx,DWORD PTR [ebp-0x14]
  409b8c:	shrd   eax,edx,0x2
  409b90:	shr    edx,0x2
  409b93:	mov    edx,DWORD PTR [ebp-0x18]
  409b96:	mov    esi,DWORD PTR [ebp-0x14]
  409b99:	xor    eax,ecx
  409b9b:	xor    esi,esi
  409b9d:	or     eax,esi
  409b9f:	mov    ds:0x42291c,eax
  409ba4:	mov    BYTE PTR [ebp-0x2],0x4f
  409ba8:	mov    BYTE PTR [ebp-0x1],0xf9
  409bac:	movzx  eax,BYTE PTR [ebp-0x1]
  409bb0:	shl    edx,0x1e
  409bb3:	mov    dl,BYTE PTR [ebp-0x2]
  409bb6:	xor    al,0x42
  409bb8:	add    al,dl
  409bba:	jmp    0x409e39
  409bbf:	mov    ah,0x7e
  409bc1:	mov    ch,0xd4
  409bc3:	mov    ebx,0x3e9ebcfc
  409bc8:	mov    cl,0x9a
  409bca:	jecxz  0x409bdb
  409bcc:	popa   
  409bcd:	jle    0x409b9e
  409bcf:	scas   al,BYTE PTR es:[edi]
  409bd0:	mov    edi,DWORD PTR [esi-0x413d8642]
  409bd6:	mov    esi,0xc1cb6cce
  409bdb:	cmp    cl,BYTE PTR [esp+eax*2+0x77]
  409bdf:	adc    al,0x91
  409be1:	push   edi
  409be2:	lods   al,BYTE PTR ds:[esi]
  409be3:	les    edx,FWORD PTR [eax]
  409be5:	ficomp WORD PTR [edx]
  409be7:	fsub   DWORD PTR [edx-0x2602a166]
  409bed:	xor    BYTE PTR [edi],dh
  409bef:	arpl   WORD PTR [ecx+esi*1-0x337430e9],ax
  409bf6:	aad    0x93
  409bf8:	and    al,0x9d
  409bfa:	(bad)  
  409bfb:	not    DWORD PTR [eax]
  409bfd:	cmc    
  409bfe:	fistp  QWORD PTR [edi+0x2226ca91]
  409c04:	dec    ebx
  409c05:	(bad)  
  409c06:	jb     0x409c44
  409c08:	(bad)  
  409c09:	(bad)  
  409c0a:	mov    dh,0x33
  409c0c:	mov    ds:0x59874b7d,al
  409c11:	push   0x1f
  409c13:	jb     0x409c3b
  409c15:	(bad)  
  409c16:	es mov ecx,0x836e2811
  409c1c:	add    eax,0xd91d2936
  409c21:	or     edi,DWORD PTR [eax]
  409c23:	xchg   ecx,eax
  409c24:	rcr    BYTE PTR [ebx-0x60],1
  409c27:	jge    0x409c2e
  409c29:	cmp    bh,BYTE PTR [edi+eiz*4-0x9b9b570]
  409c30:	jbe    0x409ca8
  409c32:	dec    esi
  409c33:	(bad)  
  409c34:	xor    al,0xd7
  409c36:	sub    al,0xce
  409c38:	xchg   esp,eax
  409c39:	xchg   edx,eax
  409c3a:	add    edx,ecx
  409c3c:	aam    0xbb
  409c3e:	fsub   st(5),st
  409c40:	ret    
  409c41:	add    eax,0xfa88d36f
  409c46:	mov    BYTE PTR [esi-0x7],al
  409c49:	jp     0x409bcc
  409c4b:	xor    dh,ah
  409c4d:	ja     0x409bff
  409c4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c50:	xchg   ebx,eax
  409c51:	sbb    BYTE PTR [edi+esi*8+0x5],dl
  409c55:	xor    al,0xa4
  409c57:	pop    ecx
  409c58:	aad    0x31
  409c5a:	xor    edi,edx
  409c5c:	or     eax,0x23ae1bb8
  409c61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c62:	ja     0x409caa
  409c64:	retf   0x361b
  409c67:	pop    ebp
  409c68:	mov    esp,0x3f81712b
  409c6d:	pop    ebp
  409c6e:	pop    edx
  409c6f:	inc    ch
  409c71:	popf   
  409c72:	sub    DWORD PTR [edx],ecx
  409c74:	add    edx,DWORD PTR [ebx]
  409c76:	clc    
  409c77:	sbb    dh,BYTE PTR [edx+ebp*2]
  409c7a:	cmp    edi,DWORD PTR [ebx-0x7d5c7046]
  409c80:	mov    dl,0x64
  409c82:	sbb    edx,esp
  409c84:	hlt    
  409c85:	xchg   esi,eax
  409c86:	xchg   edi,eax
  409c87:	add    al,0xe
  409c89:	jmp    0x91236ff9
  409c8e:	adc    al,0xf5
  409c90:	sti    
  409c91:	fisttp WORD PTR [eax+0x1f13937b]
  409c97:	xchg   dh,bl
  409c99:	rol    BYTE PTR [esi-0x6f],1
  409c9c:	adc    dh,cl
  409c9e:	out    dx,eax
  409c9f:	xchg   DWORD PTR [esi+ebx*1+0x607313f6],edx
  409ca6:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  409ca8:	push   0x1a
  409caa:	sahf   
  409cab:	dec    ebx
  409cac:	cmp    esp,DWORD PTR [eax]
  409cae:	clc    
  409caf:	mov    edx,0x122af0e0
  409cb4:	xchg   al,dh
  409cb6:	pop    esi
  409cb7:	stos   DWORD PTR es:[edi],eax
  409cb8:	xor    eax,0x82601507
  409cbd:	fidiv  WORD PTR [ebp+0x26]
  409cc0:	test   al,0x43
  409cc2:	hlt    
  409cc3:	pop    esi
  409cc4:	mov    ds:0x10cccc72,eax
  409cc9:	mov    WORD PTR [ebp-0x1e],cs
  409ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ccd:	(bad)  
  409cce:	cmp    ebp,eax
  409cd0:	pop    esi
  409cd1:	icebp  
  409cd2:	inc    ebp
  409cd3:	dec    ebx
  409cd4:	mov    esi,0x9ac1b939
  409cd9:	into   
  409cda:	or     al,0x56
  409cdc:	add    al,0x8
  409cde:	xchg   ebx,eax
  409cdf:	mov    ebx,0x262e2dd0
  409ce4:	and    eax,DWORD PTR [ebp-0x15]
  409ce7:	fmul   DWORD PTR [di]
  409cea:	adc    DWORD PTR ds:0xe3b8e527,edx
  409cf0:	mov    ebp,0xb7bf4c58
  409cf5:	ss pop edx
  409cf7:	clc    
  409cf8:	in     eax,0x6e
  409cfa:	in     eax,0xc4
  409cfc:	push   es
  409cfd:	mov    esi,0x4971c9cf
  409d02:	call   0x5178:0x662a449
  409d09:	dec    ebp
  409d0a:	pushf  
  409d0b:	int3   
  409d0c:	mov    bl,0x99
  409d0e:	mov    eax,ds:0xa5bdca36
  409d13:	inc    edx
  409d14:	clc    
  409d15:	fwait
  409d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d17:	leave  
  409d18:	mov    al,ds:0xfbccf2e5
  409d1d:	dec    ecx
  409d1e:	(bad)  [edx-0x22]
  409d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d22:	xor    DWORD PTR [ecx+0x4c],ecx
  409d25:	sbb    ecx,DWORD PTR [edx]
  409d27:	out    0xfd,al
  409d29:	inc    ebx
  409d2a:	int3   
  409d2b:	outs   dx,BYTE PTR ds:[esi]
  409d2c:	cdq    
  409d2d:	inc    edx
  409d2e:	fisttp WORD PTR [edx]
  409d30:	or     eax,0x599a2828
  409d35:	mov    ch,0xfd
  409d37:	sahf   
  409d38:	jg     0x409cfb
  409d3a:	push   ebx
  409d3b:	mov    bh,0x1
  409d3d:	jl     0x409d55
  409d3f:	xchg   BYTE PTR [ecx],ch
  409d41:	sub    BYTE PTR fs:[esi+0x4a],bh
  409d45:	clc    
  409d46:	fadd   QWORD PTR [ebx]
  409d48:	stos   DWORD PTR es:[edi],eax
  409d49:	fwait
  409d4a:	stos   BYTE PTR es:[edi],al
  409d4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d4c:	mov    dl,0xf8
  409d4e:	mov    edi,0xfd63ed91
  409d53:	add    DWORD PTR [ebx+0x3adab97a],0x94c1f9e
  409d5d:	out    dx,al
  409d5e:	(bad)  
  409d5f:	cli    
  409d60:	cmp    ebx,DWORD PTR [edi]
  409d62:	or     DWORD PTR [esi],edi
  409d64:	mov    gs,WORD PTR [ebx-0x36]
  409d67:	sbb    DWORD PTR [ecx],esi
  409d69:	les    esi,FWORD PTR [esi+0x3b]
  409d6c:	jl     0x409d77
  409d6e:	push   ebp
  409d6f:	jnp    0x409d53
  409d71:	in     al,dx
  409d72:	jmp    0xac93:0xa292bf1e
  409d79:	mov    esi,0x5c62a26b
  409d7e:	or     BYTE PTR [ecx],al
  409d80:	jge    0x409ddf
  409d82:	sbb    cl,BYTE PTR [esi+0x65c91e88]
  409d88:	sbb    eax,0xa1ef0a86
  409d8d:	mov    eax,ds:0x5bdc97ff
  409d92:	pop    esp
  409d93:	adc    BYTE PTR [edi-0x78],bh
  409d96:	push   esi
  409d97:	xor    esp,ecx
  409d99:	ins    BYTE PTR es:[edi],dx
  409d9a:	cdq    
  409d9b:	mov    edi,DWORD PTR [eax]
  409d9d:	mov    ah,0x87
  409d9f:	jne    0x409dd8
  409da1:	(bad)  
  409da2:	ficom  DWORD PTR [ecx]
  409da4:	and    al,0xc4
  409da6:	mov    ebp,0xa179ad2
  409dab:	sbb    DWORD PTR [eax+0x672a66cf],esi
  409db1:	dec    edx
  409db2:	cmp    edx,esp
  409db4:	outs   dx,BYTE PTR ds:[esi]
  409db5:	push   esi
  409db6:	and    ecx,DWORD PTR [ebp-0x4c]
  409db9:	cmp    DWORD PTR [edx+0x26],0xe45f55ff
  409dc0:	ds iret 
  409dc2:	out    dx,al
  409dc3:	cli    
  409dc4:	js     0x409e28
  409dc6:	mov    esi,0x2fe5205a
  409dcb:	loope  0x409d76
  409dcd:	sbb    esi,eax
  409dcf:	and    DWORD PTR [ebx],eax
  409dd1:	out    0xdd,eax
  409dd3:	or     esp,esp
  409dd5:	mov    eax,ds:0xc945497a
  409dda:	inc    esi
  409ddb:	sub    BYTE PTR [ebx-0x21],0x50
  409ddf:	or     DWORD PTR [ebx-0x3d2e113c],esi
  409de5:	inc    ebx
  409de6:	jge    0x409e10
  409de8:	push   0x9c90622a
  409ded:	cmp    DWORD PTR [ebx+0x2],esi
  409df0:	bound  edx,QWORD PTR [esi-0x1f900b21]
  409df6:	adc    al,0x5a
  409df8:	or     BYTE PTR [edi],dh
  409dfa:	nop
  409dfb:	in     eax,dx
  409dfc:	call   0x7db12c39
  409e01:	data16 lahf 
  409e03:	pop    ebp
  409e04:	mov    ds:0xcc52d91d,eax
  409e09:	xchg   edx,eax
  409e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e0b:	imul   ebp,DWORD PTR [eax-0x725f75d4],0x27
  409e12:	(bad)  
  409e14:	sub    DWORD PTR [ebx],esp
  409e16:	xor    eax,0xb587d81e
  409e1b:	fmulp  st(6),st
  409e1d:	mov    bl,0x50
  409e1f:	add    BYTE PTR [ebx-0x5760c563],al
  409e25:	and    DWORD PTR ds:0x5b0d274e,0xffffffb2
  409e2c:	mov    ecx,DWORD PTR [edi]
  409e2e:	jbe    0x409e46
  409e30:	ins    BYTE PTR es:[edi],dx
  409e31:	mov    bh,0x6e
  409e33:	or     BYTE PTR [edi-0x252b96e1],dh
  409e39:	push   0x6
  409e3b:	add    eax,0xfa
  409e40:	mov    BYTE PTR [ebp-0x4],al
  409e43:	mov    BYTE PTR [ebp-0x3],0x67
  409e47:	pop    eax
  409e48:	mov    BYTE PTR [ebp-0x1],al
  409e4b:	mov    BYTE PTR [ebp-0x2],0x3
  409e4f:	mov    dl,BYTE PTR [ebp-0x2]
  409e52:	movzx  esi,dl
  409e55:	cdq    
  409e56:	idiv   esi
  409e58:	mov    dl,BYTE PTR [ebp-0x1]
  409e5b:	add    al,dl
  409e5d:	mov    dl,BYTE PTR [ebp-0x3]
  409e60:	or     al,dl
  409e62:	mov    dl,BYTE PTR [ebp-0x4]
  409e65:	add    al,0x3a
  409e67:	cmp    dl,al
  409e69:	jae    0x40a10f
  409e6f:	mov    eax,DWORD PTR [ebp-0x18]
  409e72:	jmp    0x40a0f1
  409e77:	popa   
  409e78:	nop
  409e79:	popf   
  409e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e7b:	mov    ah,0xb8
  409e7d:	imul   ebx,DWORD PTR [eax+edi*1-0x515b79d4],0x3e
  409e85:	outs   dx,BYTE PTR ds:[esi]
  409e86:	(bad)  [ecx-0x6f]
  409e89:	mov    esi,0xbec279be
  409e8e:	mov    esi,0x8a87f655
  409e93:	dec    esi
  409e94:	adc    al,0x57
  409e96:	shl    DWORD PTR [ecx-0x5f],1
  409e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e9a:	popa   
  409e9b:	jl     0x409f08
  409e9d:	bts    DWORD PTR [ebx+ecx*4],edx
  409ea1:	sub    DWORD PTR [eax-0x67],esp
  409ea4:	jl     0x409f0e
  409ea6:	mov    gs,WORD PTR [ebx+eax*1]
  409ea9:	mov    al,ds:0x41443ac3
  409eae:	jle    0x409e79
  409eb0:	loop   0x409e4a
  409eb2:	xchg   bl,ah
  409eb4:	fcom   DWORD PTR [eax]
  409eb6:	jo     0x409e89
  409eb8:	hlt    
  409eb9:	shr    DWORD PTR [ebx],1
  409ebb:	jae    0x409e68
  409ebd:	shl    DWORD PTR [ebx*8-0x50c54bcb],1
  409ec4:	inc    edi
  409ec5:	jle    0x409ecf
  409ec7:	popf   
  409ec8:	(bad)  
  409ec9:	push   ebx
  409eca:	add    al,0xab
  409ecc:	mov    bh,0x18
  409ece:	out    0x43,al
  409ed0:	dec    eax
  409ed1:	mov    dh,0x57
  409ed3:	cmp    eax,esi
  409ed5:	sbb    bh,BYTE PTR [edi]
  409ed7:	sbb    DWORD PTR [ecx+0x51],ecx
  409eda:	add    dh,BYTE PTR [ebx+eax*4+0x6b]
  409ede:	stos   DWORD PTR es:[edi],eax
  409edf:	inc    esp
  409ee0:	or     BYTE PTR [edi+edi*4-0x5e],bh
  409ee4:	(bad)  
  409ee5:	das    
  409ee6:	pop    ds
  409ee7:	in     al,dx
  409ee8:	mov    dl,0xc5
  409eea:	leave  
  409eeb:	mov    al,0xa7
  409eed:	retf   
  409eee:	mov    dl,BYTE PTR ds:0x409e0358
  409ef4:	fbstp  TBYTE PTR [ebx]
  409ef6:	push   es
  409ef7:	ins    DWORD PTR es:[edi],dx
  409ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ef9:	pusha  
  409efa:	mov    ch,0x8b
  409efc:	ds inc edx
  409efe:	add    al,0x87
  409f00:	int    0xbf
  409f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f03:	dec    esp
  409f04:	adc    ecx,esi
  409f06:	add    esp,ecx
  409f08:	out    dx,eax
  409f09:	fbld   TBYTE PTR [edi-0x6efcfad3]
  409f0f:	bound  edx,QWORD PTR [eax]
  409f11:	cmp    bh,bh
  409f13:	ss xchg edi,eax
  409f15:	inc    edi
  409f16:	push   edx
  409f17:	mov    ch,0x8
  409f19:	rol    DWORD PTR [ecx],0x67
  409f1c:	stc    
  409f1d:	jmp    0xe0388e29
  409f22:	jmp    0x2ea4:0x688b4e1a
  409f29:	arpl   WORD PTR [edi-0x6b],di
  409f2c:	fistp  WORD PTR [edx]
  409f2e:	in     eax,dx
  409f2f:	gs mov dl,0x2
  409f32:	scas   al,BYTE PTR es:[edi]
  409f33:	icebp  
  409f34:	and    eax,0xdf2d78e2
  409f39:	push   cs
  409f3a:	xchg   ebp,eax
  409f3b:	pop    ds
  409f3c:	loopne 0x409faf
  409f3e:	sbb    al,0xbe
  409f40:	adc    ecx,esi
  409f42:	loopne 0x409f3f
  409f44:	scas   eax,DWORD PTR es:[edi]
  409f45:	std    
  409f46:	inc    esi
  409f47:	cmp    al,0xcd
  409f49:	mov    eax,ds:0x5b533b66
  409f4e:	xchg   esi,eax
  409f4f:	add    DWORD PTR [ebp+0x52bd39de],eax
  409f55:	mov    edi,0x8ba01518
  409f5a:	(bad)  
  409f5c:	xor    esp,DWORD PTR [eax+0x2aa4fe99]
  409f62:	lea    esi,[edi+0x51037489]
  409f68:	xlat   BYTE PTR ds:[ebx]
  409f69:	test   al,0xe8
  409f6b:	rcl    BYTE PTR [ebp+0x50da38aa],1
  409f71:	stos   BYTE PTR es:[edi],al
  409f72:	sub    dh,0xef
  409f75:	aaa    
  409f76:	mov    dl,0x92
  409f78:	pop    ecx
  409f79:	jmp    0x409fd8
  409f7b:	fdiv   QWORD PTR [edx+0x3f0ebf5a]
  409f81:	(bad)  [ebp-0x7c]
  409f84:	fnstcw WORD PTR [ebx-0x1f]
  409f87:	out    dx,eax
  409f88:	in     al,0xac
  409f8a:	add    DWORD PTR [ecx+0x28d374e7],edx
  409f90:	adc    al,0x27
  409f92:	xchg   esi,eax
  409f93:	test   BYTE PTR [edx],al
  409f95:	xor    BYTE PTR ds:0xc29ee68f,dh
  409f9b:	imul   esi,DWORD PTR [ecx+eax*8-0x302462d],0xfffffff8
  409fa3:	mov    BYTE PTR [ecx+0x9],bh
  409fa6:	push   ebx
  409fa7:	mov    ch,0x23
  409faa:	pop    edi
  409fab:	pop    ebp
  409fac:	mov    bl,0x7a
  409fae:	mov    eax,0xe75bfb6d
  409fb3:	dec    esp
  409fb4:	jmp    0x7d049bfc
  409fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fba:	jmp    0x409f97
  409fbc:	clc    
  409fbd:	into   
  409fbe:	sub    DWORD PTR [esp+eax*8],edx
  409fc1:	ret    0x6695
  409fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fc5:	(bad)  
  409fc6:	int    0x2d
  409fc8:	out    0x9d,al
  409fca:	test   DWORD PTR [eax+0x303aa682],0x3fbd1424
  409fd4:	push   es
  409fd5:	inc    edi
  409fd6:	cmp    BYTE PTR [esi],al
  409fd8:	or     cl,al
  409fda:	mov    ds:0x6feed040,eax
  409fdf:	push   ds
  409fe0:	shr    DWORD PTR [eax],1
  409fe2:	xchg   edx,eax
  409fe3:	mov    al,ds:0x355a6596
  409fe8:	xchg   ebp,eax
  409fe9:	add    al,0xd3
  409feb:	cmp    BYTE PTR [ebp+0x29fbbc0b],dl
  409ff1:	sbb    BYTE PTR [eax],al
  409ff3:	dec    eax
  409ff4:	(bad)  
  409ff5:	mov    ds:0x1f0a5088,eax
  409ffa:	fs in  eax,dx
  409ffc:	call   0xdb4e:0x96d0904a
  40a003:	jmp    0x1f48a215
  40a008:	rol    BYTE PTR [ecx+0x3172d9ef],cl
  40a00e:	push   ss
  40a00f:	out    dx,al
  40a010:	lods   eax,DWORD PTR ds:[esi]
  40a011:	(bad)  
  40a012:	ins    DWORD PTR es:[edi],dx
  40a013:	hlt    
  40a014:	cmc    
  40a015:	mov    ebx,0xe2c07052
  40a01a:	cmp    eax,0x240a6c82
  40a01f:	pusha  
  40a020:	mul    BYTE PTR [eax+ebp*8]
  40a023:	mov    ch,0xde
  40a025:	lea    ebx,[edi+0x1f]
  40a028:	test   al,0xee
  40a02a:	ror    BYTE PTR [edi+0x16],cl
  40a02d:	pop    ss
  40a02e:	xchg   esp,eax
  40a02f:	bt     DWORD PTR [edx],edi
  40a032:	ja     0x40a074
  40a034:	inc    ebp
  40a035:	imul   esp,DWORD PTR [edi-0x3271eca9],0x25202de1
  40a03f:	jbe    0x40a06f
  40a041:	int    0x15
  40a043:	popf   
  40a044:	mov    cs,WORD PTR [eax]
  40a046:	add    eax,0xf81c8d23
  40a04b:	mov    esp,0xed341bb5
  40a050:	sub    al,0x6
  40a052:	rol    BYTE PTR [edx+0x70],cl
  40a055:	and    ebx,ecx
  40a057:	xor    edi,esp
  40a059:	push   es
  40a05a:	lods   eax,DWORD PTR ds:[esi]
  40a05b:	sbb    BYTE PTR [ebx-0x20],cl
  40a05e:	mov    edi,0xed2f915f
  40a063:	push   edx
  40a064:	pop    ss
  40a065:	xor    DWORD PTR [ebp-0x7f],esp
  40a068:	xchg   edi,eax
  40a069:	loop   0x40a053
  40a06b:	ror    dl,1
  40a06d:	xor    ah,cl
  40a06f:	mov    bl,dh
  40a071:	push   0xffffffd8
  40a073:	or     al,ch
  40a075:	repnz push si
  40a078:	pop    ebp
  40a079:	dec    ebp
  40a07a:	js     0x40a0c1
  40a07c:	mov    dh,0x2f
  40a07e:	cmp    al,0xe5
  40a080:	std    
  40a081:	mov    ?,edi
  40a083:	in     al,dx
  40a084:	cmp    al,0xdd
  40a086:	mov    DWORD PTR [ecx+0x6598c614],esi
  40a08c:	retf   0xab96
  40a08f:	jo     0x40a030
  40a091:	mov    esi,0xf486aecb
  40a096:	(bad)  [esi+0x46]
  40a099:	or     edx,DWORD PTR [esi+0x4f4bd1a9]
  40a09f:	xor    DWORD PTR [ebp+0x75],eax
  40a0a2:	push   eax
  40a0a3:	sub    ebp,ecx
  40a0a5:	or     DWORD PTR [ebp+0xb33d230],esi
  40a0ab:	add    al,0xee
  40a0ad:	mov    WORD PTR [ecx+0x3a7b03c3],gs
  40a0b3:	mov    eax,0xa883e754
  40a0b8:	mov    esp,DWORD PTR ds:0x6345141
  40a0be:	fwait
  40a0bf:	mov    ecx,edx
  40a0c1:	ds xchg BYTE PTR ss:[edx+eiz*1+0x79],dl
  40a0c7:	and    esp,DWORD PTR [edx-0x9d91262]
  40a0cd:	mov    esp,0x54e7b7db
  40a0d2:	mov    BYTE PTR [ecx-0x31],ah
  40a0d5:	sar    esi,1
  40a0d7:	or     BYTE PTR [edx-0x70],dl
  40a0da:	and    DWORD PTR [edx],esi
  40a0dc:	dec    edi
  40a0dd:	daa    
  40a0de:	les    esp,FWORD PTR [edx+0x46a93222]
  40a0e4:	push   esi
  40a0e5:	(bad)  
  40a0e6:	lods   al,BYTE PTR ds:[esi]
  40a0e7:	xchg   DWORD PTR [ebx+0x3c6f8cd0],ecx
  40a0ed:	inc    ebp
  40a0ee:	scas   al,BYTE PTR es:[edi]
  40a0ef:	jne    0x40a109
  40a0f1:	mov    edx,DWORD PTR [ebp-0x14]
  40a0f4:	shrd   eax,edx,0x2
  40a0f8:	xor    eax,ecx
  40a0fa:	mov    ecx,DWORD PTR [ebp-0x18]
  40a0fd:	shr    edx,0x2
  40a100:	mov    edx,DWORD PTR [ebp-0x14]
  40a103:	xor    edx,edx
  40a105:	shl    ecx,0x1e
  40a108:	or     eax,edx
  40a10a:	mov    ds:0x422810,eax
  40a10f:	pop    esi
  40a110:	leave  
  40a111:	ret    
  40a112:	push   ebp
  40a113:	mov    ebp,esp
  40a115:	sub    esp,0x28
  40a118:	push   ebx
  40a119:	push   esi
  40a11a:	push   edi
  40a11b:	mov    DWORD PTR [ebp-0x10],0x67e2
  40a122:	jmp    0x40a3b9
  40a127:	mov    al,ds:0xfc9cf9a5
  40a12c:	pushf  
  40a12d:	mov    al,ds:0xd54f94b9
  40a132:	jecxz  0x40a0ef
  40a134:	sbb    edi,DWORD PTR [edx]
  40a136:	xchg   edx,eax
  40a137:	es xchg ebp,eax
  40a139:	mov    esi,0xbec2a9be
  40a13e:	mov    esi,0xdcba015f
  40a143:	and    eax,0x5ae09bbe
  40a148:	push   ebx
  40a149:	enter  0x4df7,0x5c
  40a14d:	in     al,dx
  40a14e:	mov    esi,0x8feab14f
  40a153:	mov    ebx,0x1e08f91b
  40a158:	aad    0xda
  40a15a:	aas    
  40a15b:	cli    
  40a15c:	lods   al,BYTE PTR ds:[esi]
  40a15d:	adc    dl,BYTE PTR [ecx]
  40a15f:	dec    ebx
  40a160:	jae    0x40a1ab
  40a162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a163:	sbb    ah,BYTE PTR [ecx]
  40a165:	aaa    
  40a166:	sub    al,0xbb
  40a168:	push   esi
  40a169:	push   DWORD PTR [edi+0x1c]
  40a16c:	pusha  
  40a16d:	add    esi,DWORD PTR [ecx]
  40a16f:	loop   0x40a1e6
  40a171:	lods   eax,DWORD PTR fs:[esi]
  40a173:	repnz mov esi,0xa951a491
  40a17a:	and    edi,0x51
  40a17d:	pop    ebp
  40a17e:	push   eax
  40a17f:	call   0x9581d582
  40a184:	xchg   al,cl
  40a186:	outs   dx,DWORD PTR ds:[esi]
  40a187:	les    ecx,FWORD PTR [eax]
  40a189:	xlat   BYTE PTR ds:[ebx]
  40a18a:	repz xchg ebp,eax
  40a18c:	jp     0x40a14c
  40a18e:	aaa    
  40a18f:	fsub   QWORD PTR [edx+eax*4+0x139aa86b]
  40a196:	mul    DWORD PTR [eax-0x60]
  40a199:	bnd jbe 0x40a19d
  40a19c:	sbb    eax,0xdf17446b
  40a1a1:	shr    DWORD PTR [bx+di],0x4
  40a1a5:	dec    esi
  40a1a6:	(bad)  
  40a1a7:	mov    BYTE PTR [ecx],al
  40a1a9:	(bad)  
  40a1aa:	pop    ebx
  40a1ab:	icebp  
  40a1ac:	cdq    
  40a1ad:	jmp    0x58aa:0x62e0905a
  40a1b4:	(bad)  
  40a1b5:	mov    esi,0x2c47da14
  40a1ba:	inc    ebx
  40a1bb:	jl     0x40a1e7
  40a1bd:	lea    ecx,[eax+0x37]
  40a1c0:	sub    ch,ch
  40a1c2:	mov    eax,0x201aab17
  40a1c7:	int3   
  40a1c8:	add    eax,0x745e8ab6
  40a1cd:	call   0x7523fc14
  40a1d2:	out    dx,al
  40a1d3:	push   ecx
  40a1d4:	add    eax,0x7612ad4d
  40a1d9:	fstp   TBYTE PTR [esi+0x3b3075d0]
  40a1df:	(bad)
  40a1e4:	mov    ebx,0xcfa70ed8
  40a1e9:	scas   eax,DWORD PTR es:[edi]
  40a1ea:	mov    cl,0x55
  40a1ec:	dec    edx
  40a1ed:	scas   al,BYTE PTR es:[edi]
  40a1ee:	and    DWORD PTR [ebp-0x77bf02a9],ebp
  40a1f4:	ins    DWORD PTR es:[edi],dx
  40a1f5:	dec    ecx
  40a1f6:	add    eax,0xb1f3fa17
  40a1fb:	test   al,0xa9
  40a1fd:	lds    ecx,FWORD PTR [edi+0x274cf6e7]
  40a203:	(bad)
  40a207:	mov    dh,ch
  40a209:	stc    
  40a20a:	sar    BYTE PTR [edi+0x7b],cl
  40a20d:	push   ecx
  40a20e:	mov    al,ds:0xa871e704
  40a213:	dec    esi
  40a214:	js     0x40a241
  40a216:	adc    al,0xe8
  40a218:	and    ecx,DWORD PTR [edi-0x33]
  40a21b:	cmp    al,0x53
  40a21d:	sub    DWORD PTR [eax],ebp
  40a21f:	pop    ds
  40a220:	or     eax,0xe51727d2
  40a225:	mov    ebx,0x6802414b
  40a22a:	jmp    0xa9d59e78
  40a22f:	push   eax
  40a230:	push   cs
  40a231:	aad    0xba
  40a233:	push   ecx
  40a234:	sbb    DWORD PTR [edi],esi
  40a236:	aad    0x62
  40a238:	in     eax,dx
  40a239:	scas   eax,DWORD PTR es:[edi]
  40a23a:	push   0x23666cec
  40a23f:	mov    ebx,ds
  40a241:	jl     0x40a239
  40a243:	or     esp,ebp
  40a245:	pop    ebp
  40a246:	push   esi
  40a247:	and    BYTE PTR [ebx],cl
  40a249:	imul   DWORD PTR [esi]
  40a24b:	es dec edx
  40a24d:	cmp    BYTE PTR [ebp-0x422c31f5],al
  40a253:	pop    esi
  40a254:	adc    ecx,DWORD PTR [ebx]
  40a256:	stos   DWORD PTR es:[edi],eax
  40a257:	sbb    ah,ah
  40a259:	inc    ecx
  40a25a:	ja     0x40a210
  40a25c:	(bad)  
  40a25d:	cmp    ch,BYTE PTR [edi]
  40a25f:	pop    ebx
  40a260:	push   ebp
  40a261:	aad    0x5a
  40a263:	ror    BYTE PTR [ecx-0x7e57cec],1
  40a269:	test   DWORD PTR [ecx-0x4a],ebp
  40a26c:	xchg   ebp,eax
  40a26d:	pop    ss
  40a26e:	lock jno 0x40a22f
  40a271:	jns    0x40a256
  40a273:	sub    esp,DWORD PTR [ebp+ebp*1+0x343b244b]
  40a27a:	loopne 0x40a2f1
  40a27c:	hlt    
  40a27d:	in     al,dx
  40a27e:	mov    bh,0x57
  40a280:	sub    al,BYTE PTR [ebx]
  40a282:	push   ecx
  40a283:	not    DWORD PTR [ecx-0xc]
  40a286:	xchg   edx,eax
  40a287:	stos   DWORD PTR es:[edi],eax
  40a288:	ror    DWORD PTR [ebx+0x4d],1
  40a28b:	imul   ecx,DWORD PTR [eax-0x58],0x1e
  40a28f:	sub    DWORD PTR [esi+0x49],edi
  40a292:	fcomp  QWORD PTR [eax-0x6f405bc0]
  40a298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a299:	lods   al,BYTE PTR ds:[esi]
  40a29a:	cmp    al,al
  40a29c:	arpl   WORD PTR [ebx-0x795682ed],sp
  40a2a2:	push   edi
  40a2a3:	aam    0xc0
  40a2a5:	or     BYTE PTR [ecx-0x13e7ffbf],dl
  40a2ab:	add    al,0x6f
  40a2ad:	pop    edi
  40a2ae:	inc    ebp
  40a2af:	iret   
  40a2b0:	sub    bh,0xa8
  40a2b3:	shl    BYTE PTR [ebx-0x48],1
  40a2b6:	cmp    eax,0x4948a77d
  40a2bb:	inc    ecx
  40a2bc:	sbb    al,0x50
  40a2be:	mov    esp,0xd4adf0ae
  40a2c3:	daa    
  40a2c4:	aam    0x0
  40a2c6:	in     eax,dx
  40a2c7:	cmp    bl,BYTE PTR [ebp+0x30]
  40a2ca:	pusha  
  40a2cb:	rcl    DWORD PTR [edi+edx*2+0x47cc7abe],1
  40a2d2:	(bad)  
  40a2d3:	pop    ss
  40a2d4:	dec    ecx
  40a2d5:	xchg   ecx,eax
  40a2d6:	xchg   BYTE PTR [ecx],cl
  40a2d8:	addr16 adc bh,ah
  40a2db:	enter  0x9b16,0x80
  40a2df:	cmp    ebx,esp
  40a2e1:	nop
  40a2e2:	je     0x40a345
  40a2e4:	add    eax,0x2ccb15fd
  40a2e9:	xchg   edx,eax
  40a2ea:	das    
  40a2eb:	jmp    DWORD PTR [esp+ecx*1+0x13]
  40a2ef:	adc    cl,bl
  40a2f1:	arpl   di,cx
  40a2f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2f4:	dec    esi
  40a2f5:	lea    ebx,[eax-0x46]
  40a2f8:	mov    bl,0x9
  40a2fa:	(bad)  
  40a2fb:	mov    DWORD PTR [ebx-0x6a],esi
  40a2fe:	inc    esi
  40a2ff:	(bad)  
  40a300:	(bad)  
  40a302:	inc    ebx
  40a303:	shr    BYTE PTR ds:0x9abbf2d0,0xa4
  40a30a:	mov    edx,0xc43dcba5
  40a30f:	sahf   
  40a310:	sbb    bl,cl
  40a312:	jl     0x40a2c2
  40a314:	dec    ecx
  40a315:	cdq    
  40a316:	mov    bl,0xf3
  40a318:	sbb    eax,0xe8ad4b01
  40a31d:	pop    esi
  40a31e:	aas    
  40a31f:	lods   al,BYTE PTR ds:[esi]
  40a320:	mov    ecx,0x8b08661c
  40a325:	aam    0x5c
  40a327:	lea    ebp,[ecx-0x4a]
  40a32a:	in     eax,0x65
  40a32c:	rcr    BYTE PTR [ebx+0x216aa304],cl
  40a332:	leave  
  40a333:	jl     0x40a2bc
  40a335:	mov    esp,0x55c09724
  40a33a:	cmp    al,0xc0
  40a33c:	aam    0x6d
  40a33e:	or     eax,0x65ad7227
  40a343:	enter  0xe608,0x3b
  40a347:	les    ebx,FWORD PTR [eax+0x6318a132]
  40a34d:	shl    DWORD PTR [edi-0x2596c26a],0x39
  40a354:	shl    al,cl
  40a356:	pop    ebx
  40a357:	iret   
  40a358:	cli    
  40a359:	cmp    al,0x37
  40a35b:	mov    bl,cl
  40a35d:	and    DWORD PTR [ecx+0x4b43c157],ebp
  40a363:	loope  0x40a3df
  40a365:	xchg   ebx,eax
  40a366:	or     eax,0xd418da7e
  40a36b:	les    esi,FWORD PTR [esi]
  40a36d:	mov    esi,0xd9699345
  40a372:	jg     0x40a386
  40a374:	fidiv  WORD PTR [ebx]
  40a376:	dec    ebp
  40a377:	mov    DWORD PTR [ebp+0xb0351d7],esp
  40a37d:	pushf  
  40a37e:	mov    bh,BYTE PTR ds:0x1704d8b1
  40a384:	sub    eax,esi
  40a386:	add    al,0xe3
  40a388:	xchg   ebp,eax
  40a389:	rcr    BYTE PTR ds:0x766dd3ab,cl
  40a38f:	call   DWORD PTR [esi+0x3c]
  40a392:	and    esi,esi
  40a394:	shl    DWORD PTR [edi],1
  40a396:	fdiv   DWORD PTR [ebp-0x7f]
  40a399:	pop    es
  40a39a:	sub    ebx,DWORD PTR [ebp+0x4b4600c7]
  40a3a0:	in     eax,dx
  40a3a1:	(bad)  
  40a3a2:	pushf  
  40a3a3:	sub    ebx,DWORD PTR [eax+0x6a]
  40a3a6:	push   0x60
  40a3a8:	rcr    BYTE PTR [ecx+0x58],0xa4
  40a3ac:	sbb    al,0xfc
  40a3ae:	mov    ch,0x49
  40a3b0:	xchg   esp,eax
  40a3b1:	mov    edx,0x5d522044
  40a3b6:	and    ch,al
  40a3b8:	adc    eax,edi
  40a3ba:	inc    ebp
  40a3bb:	cld    
  40a3bc:	es inc edi
  40a3be:	add    BYTE PTR [eax],al
  40a3c0:	mov    DWORD PTR [ebp-0x8],0x580
  40a3c7:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40a3ce:	mov    DWORD PTR [ebp-0x28],0x3294
  40a3d5:	mov    DWORD PTR [ebp-0x24],0x643
  40a3dc:	mov    DWORD PTR [ebp-0x20],0x2545
  40a3e3:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40a3ea:	xor    ebx,ebx
  40a3ec:	inc    ebx
  40a3ed:	jmp    0x40a684
  40a3f2:	ins    DWORD PTR es:[edi],dx
  40a3f3:	shr    ebx,0x9a
  40a3f6:	jl     0x40a3b4
  40a3f8:	scas   eax,DWORD PTR es:[edi]
  40a3f9:	sub    bl,BYTE PTR [ebx+ebp*1-0x7a]
  40a3fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3fe:	cmp    eax,0x11cfb2f5
  40a403:	fwait
  40a404:	mov    esi,0xbec2a9be
  40a409:	mov    esi,0xc19a9a16
  40a40e:	and    eax,0x64dc16da
  40a413:	adc    eax,0x8056247f
  40a418:	jle    0x40a3f1
  40a41a:	dec    esi
  40a41b:	and    al,0x78
  40a41d:	out    dx,al
  40a41e:	clc    
  40a41f:	inc    edx
  40a420:	mov    esi,0x9df261ba
  40a425:	or     edi,DWORD PTR [edi+0x2e]
  40a428:	inc    ebx
  40a429:	cmp    esi,DWORD PTR [eax-0x66]
  40a42c:	outs   dx,BYTE PTR ds:[esi]
  40a42d:	mov    ebp,0xc0682723
  40a432:	mov    al,ds:0xc2b54047
  40a437:	pop    eax
  40a438:	lods   al,BYTE PTR ds:[esi]
  40a439:	jecxz  0x40a4b2
  40a43b:	lahf   
  40a43c:	mov    eax,ds:0xfd60acd1
  40a441:	jg     0x40a41e
  40a443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a444:	mov    esi,esp
  40a446:	dec    edi
  40a447:	cmp    ecx,DWORD PTR [eax]
  40a449:	sar    bl,0x7b
  40a44c:	dec    edx
  40a44d:	pop    ss
  40a44e:	mov    ds:0xbbf8d62a,al
  40a454:	sti    
  40a455:	cwde   
  40a456:	popf   
  40a457:	add    ecx,edi
  40a459:	stos   BYTE PTR es:[edi],al
  40a45a:	(bad)  
  40a45b:	retf   
  40a45c:	ret    
  40a45d:	daa    
  40a45e:	push   ds
  40a45f:	pop    ebp
  40a460:	fistp  QWORD PTR [eax+0x3f22b2e8]
  40a466:	mov    ds:0x93e85e71,eax
  40a46b:	(bad)  
  40a46c:	fidiv  DWORD PTR [esi]
  40a46e:	ret    
  40a46f:	push   0x46faec94
  40a474:	xchg   ecx,eax
  40a475:	sbb    eax,0xfb3bc859
  40a47a:	stos   BYTE PTR es:[edi],al
  40a47b:	sub    al,BYTE PTR [ebx-0x22f74166]
  40a481:	cmp    eax,DWORD PTR [ecx+0x5293d7a5]
  40a487:	push   ss
  40a488:	mov    al,ds:0x16a8826e
  40a48d:	into   
  40a48e:	jle    0x40a43e
  40a490:	jle    0x40a438
  40a492:	pmulhuw mm3,QWORD PTR [edi+0x6137c66b]
  40a499:	sbb    BYTE PTR [esi],al
  40a49b:	cmp    eax,0x372826aa
  40a4a0:	into   
  40a4a1:	fld1   
  40a4a3:	lea    ebp,[esi-0x62a388bd]
  40a4a9:	adc    eax,0xb93ed08b
  40a4ae:	mov    esi,0xea3e7183
  40a4b3:	test   DWORD PTR [ecx+0x35],ebx
  40a4b6:	sub    WORD PTR [ebp+edi*8-0x9440237],bp
  40a4be:	sub    BYTE PTR gs:[esi-0x8],ah
  40a4c2:	cli    
  40a4c3:	loop   0x40a52a
  40a4c5:	sub    eax,0x11d1f287
  40a4ca:	mov    ebp,0x953a128e
  40a4cf:	push   ecx
  40a4d0:	inc    eax
  40a4d1:	retf   
  40a4d2:	mov    cl,0xdc
  40a4d4:	sbb    DWORD PTR [esi-0x63],esp
  40a4d7:	imul   esi,edi,0xffffff9e
  40a4da:	or     al,al
  40a4dc:	stos   BYTE PTR es:[edi],al
  40a4dd:	out    0x1a,al
  40a4df:	scas   eax,DWORD PTR es:[edi]
  40a4e0:	push   esp
  40a4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4e2:	jg     0x40a4a3
  40a4e4:	(bad)  
  40a4e5:	mov    esi,0x64abc042
  40a4ea:	inc    edx
  40a4eb:	clc    
  40a4ec:	add    dl,BYTE PTR [esi-0x4]
  40a4ef:	ins    BYTE PTR es:[edi],dx
  40a4f0:	(bad)
  40a4f3:	(bad)  
  40a4f4:	frstor [edi-0x65]
  40a4f7:	or     bl,BYTE PTR [esi-0x38]
  40a4fa:	xchg   ecx,eax
  40a4fb:	ret    
  40a4fc:	gs std 
  40a4fe:	pop    ecx
  40a4ff:	sub    bl,BYTE PTR [edx-0x22]
  40a502:	inc    ecx
  40a503:	adc    DWORD PTR [eax+0x3802a123],edx
  40a509:	mov    eax,ds:0xf1a65bb
  40a50e:	dec    ecx
  40a50f:	in     al,0xeb
  40a511:	push   ss
  40a512:	in     al,0xf8
  40a514:	je     0x40a4d6
  40a516:	push   ecx
  40a517:	mov    eax,0xb57478bf
  40a51c:	push   eax
  40a51d:	fmul   QWORD PTR [ebx+0x14c9383f]
  40a523:	cmp    eax,0x3dd7f3a6
  40a528:	das    
  40a529:	push   esi
  40a52a:	stos   BYTE PTR es:[edi],al
  40a52b:	adc    eax,0x8c9e83a0
  40a530:	jne    0x40a4f3
  40a532:	fs aaa 
  40a534:	in     eax,dx
  40a535:	ret    
  40a536:	rcl    ecx,cl
  40a538:	sbb    esp,ebp
  40a53a:	mov    ebx,0x9d09ae9d
  40a53f:	arpl   WORD PTR [ecx+0x3b],sp
  40a542:	fwait
  40a543:	sub    bl,ah
  40a545:	out    dx,eax
  40a546:	xchg   esi,eax
  40a547:	cmp    ebp,DWORD PTR fs:[eax]
  40a54a:	lahf   
  40a54b:	(bad)  
  40a54c:	mov    esi,0xcb471809
  40a551:	sub    al,0xf8
  40a553:	inc    eax
  40a554:	xchg   esi,eax
  40a555:	mov    ch,0x51
  40a557:	mov    ebx,0x8c13345
  40a55c:	pop    ebp
  40a55d:	pop    edi
  40a55e:	int    0xdc
  40a560:	xchg   bl,dh
  40a562:	out    0x53,al
  40a564:	cmp    BYTE PTR [edi+eax*1+0x4],ah
  40a568:	aad    0x25
  40a56a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a56b:	jle    0x40a526
  40a56d:	pop    ebp
  40a56e:	mov    ch,BYTE PTR [ebx+ebp*8]
  40a571:	mov    esp,0xccde9987
  40a576:	adc    al,dh
  40a578:	addr16 pusha 
  40a57a:	dec    ebp
  40a57b:	adc    esi,DWORD PTR [edx+ecx*8-0x6586d0d9]
  40a582:	bound  ebp,QWORD PTR [ebp+0x66]
  40a585:	inc    esp
  40a586:	out    dx,al
  40a587:	gs in  eax,dx
  40a589:	cmp    BYTE PTR [edx+ecx*1],dl
  40a58c:	pop    edx
  40a58d:	sbb    DWORD PTR [ecx-0x67],0xcd0e5916
  40a594:	push   eax
  40a595:	jns    0x40a528
  40a597:	into   
  40a598:	sar    DWORD PTR [ebx+ebx*2+0x52515301],cl
  40a59f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5a0:	push   0x353117f8
  40a5a5:	sub    edx,DWORD PTR [ecx]
  40a5a7:	adc    eax,0xd9c0fb93
  40a5ac:	les    eax,FWORD PTR [edi+ebx*4+0x1de75551]
  40a5b3:	or     ecx,DWORD PTR [esi+0x1e16d457]
  40a5b9:	pusha  
  40a5ba:	lea    esi,[edx+0x39747ba6]
  40a5c0:	into   
  40a5c1:	inc    edx
  40a5c2:	push   cs
  40a5c3:	fwait
  40a5c4:	outs   dx,DWORD PTR ds:[esi]
  40a5c5:	ja     0x40a60c
  40a5c7:	cmp    eax,0xadc22d3f
  40a5cc:	pop    ebp
  40a5cd:	scas   eax,DWORD PTR es:[edi]
  40a5ce:	inc    esp
  40a5cf:	or     ch,BYTE PTR [eax+edx*2-0x73db23ae]
  40a5d6:	sub    DWORD PTR [esi-0x4f],0x7b2f8e33
  40a5dd:	jp     0x40a629
  40a5df:	jmp    0x8f1b78f3
  40a5e4:	sub    DWORD PTR [edi+0x50],ebp
  40a5e7:	fisubr DWORD PTR ds:0xa2084b83
  40a5ed:	fdiv   st(0),st
  40a5ef:	inc    ebx
  40a5f0:	pop    eax
  40a5f1:	fbld   TBYTE PTR [edi+0x1f]
  40a5f4:	stc    
  40a5f5:	adc    ch,BYTE PTR [eax+0x13]
  40a5f8:	aas    
  40a5f9:	xchg   edx,eax
  40a5fa:	fbstp  TBYTE PTR [eax-0x64]
  40a5fd:	mov    ds:0x4878d6ec,al
  40a602:	jb     0x40a61f
  40a604:	sti    
  40a605:	les    eax,FWORD PTR [edx-0x2a]
  40a608:	sub    eax,0x53d52c7
  40a60d:	cmp    esi,eax
  40a60f:	add    DWORD PTR [edx-0x38],esp
  40a612:	adc    dh,BYTE PTR [esi-0x21]
  40a615:	scas   al,BYTE PTR es:[edi]
  40a616:	jmp    0x9ec6b3b9
  40a61b:	mov    ah,0xf4
  40a61d:	das    
  40a61e:	sar    DWORD PTR [ebx-0x74e41c7c],1
  40a624:	sbb    eax,0xcacd2420
  40a629:	and    dh,BYTE PTR [edx+0x1b]
  40a62c:	dec    esi
  40a62d:	shr    DWORD PTR [edx*1-0x7d0f32cb],0x38
  40a635:	jbe    0x40a610
  40a637:	pop    ebx
  40a638:	jecxz  0x40a668
  40a63a:	in     eax,dx
  40a63b:	mov    DWORD PTR [esi+edi*8],esp
  40a63e:	adc    ch,al
  40a640:	xchg   esp,eax
  40a641:	push   edi
  40a642:	fmul   DWORD PTR [edx]
  40a644:	std    
  40a645:	lods   eax,DWORD PTR ds:[esi]
  40a646:	jne    0x40a5f0
  40a648:	push   ss
  40a649:	push   ecx
  40a64a:	xchg   edi,eax
  40a64b:	(bad)  
  40a64c:	sub    eax,0xcc24b722
  40a651:	push   0xa10e159b
  40a656:	out    0x28,eax
  40a658:	add    al,0x23
  40a65a:	push   0xffffffe7
  40a65c:	repz clc 
  40a65e:	adc    eax,0x2a4da209
  40a663:	popf   
  40a664:	adc    eax,0xf582ddfb
  40a669:	cmp    eax,0xf05571e8
  40a66e:	push   cs
  40a66f:	push   es
  40a670:	test   eax,0xbbb273db
  40a675:	push   ebp
  40a676:	(bad)  
  40a677:	hlt    
  40a678:	stc    
  40a679:	dec    ebx
  40a67a:	mov    bl,ch
  40a67c:	xor    BYTE PTR [ebx+eax*1],0x66
  40a680:	aam    0x66
  40a682:	xor    al,bh
  40a684:	mov    DWORD PTR [ebp-0x18],ebx
  40a687:	mov    DWORD PTR [ebp-0x14],0x76b1
  40a68e:	mov    ecx,DWORD PTR [ebp-0x8]
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	sub    ecx,eax
  40a696:	add    ecx,DWORD PTR [ebp-0xc]
  40a699:	add    ecx,DWORD PTR [ebp-0x10]
  40a69c:	imul   ecx,ecx,0x1f80
  40a6a2:	add    ecx,0x727e
  40a6a8:	xor    ecx,0x106c92f2
  40a6ae:	mov    DWORD PTR [ebp-0x8],0x113c
  40a6b5:	mov    DWORD PTR [ebp-0xc],0x3d61
  40a6bc:	mov    DWORD PTR [ebp-0x10],0x16e9
  40a6c3:	mov    DWORD PTR [ebp-0x4],0x21aa
  40a6ca:	mov    eax,DWORD PTR [ebp-0x10]
  40a6cd:	or     eax,0x3611
  40a6d2:	add    eax,DWORD PTR [ebp-0xc]
  40a6d5:	mov    edx,DWORD PTR [ebp-0x8]
  40a6d8:	and    eax,edx
  40a6da:	mov    edx,ecx
  40a6dc:	sub    edx,eax
  40a6de:	mov    eax,DWORD PTR [ebp-0x4]
  40a6e1:	mov    esi,DWORD PTR ds:0x422708
  40a6e7:	mov    esi,DWORD PTR [esi+0x1cc]
  40a6ed:	add    eax,0x6772
  40a6f2:	or     eax,0x1f24
  40a6f7:	sub    eax,0x7046
  40a6fc:	xor    eax,0x497a
  40a701:	sub    esi,eax
  40a703:	mov    eax,DWORD PTR [ebp+0x8]
  40a706:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40a70d:	mov    BYTE PTR [esi+ecx*1],al
  40a710:	mov    eax,DWORD PTR [ebp-0x14]
  40a713:	mov    esi,DWORD PTR [ebp-0x18]
  40a716:	and    eax,0x2389
  40a71b:	xor    eax,0x695
  40a720:	xor    edx,edx
  40a722:	div    esi
  40a724:	lea    ecx,[ecx+eax*1-0x2413]
  40a72b:	mov    eax,DWORD PTR [ebp-0x1c]
  40a72e:	add    eax,DWORD PTR [ebp-0x20]
  40a731:	mov    edx,DWORD PTR [ebp-0x24]
  40a734:	and    eax,edx
  40a736:	mov    edx,DWORD PTR [ebp-0x28]
  40a739:	imul   eax,edx
  40a73c:	mov    edx,0xd0c8f
  40a741:	sub    edx,eax
  40a743:	cmp    ecx,edx
  40a745:	jbe    0x40a6ae
  40a74b:	push   0x2
  40a74d:	pop    eax
  40a74e:	mov    DWORD PTR [ebp-0x1c],eax
  40a751:	mov    DWORD PTR [ebp-0x20],ebx
  40a754:	mov    DWORD PTR [ebp-0x24],0x5
  40a75b:	mov    DWORD PTR [ebp-0x28],0x6686
  40a762:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40a769:	mov    DWORD PTR [ebp-0x4],eax
  40a76c:	mov    DWORD PTR [ebp+0x8],0x739a
  40a773:	mov    DWORD PTR [ebp-0xc],0xf3a
  40a77a:	xor    edx,edx
  40a77c:	mov    DWORD PTR [ebp-0x10],0x429
  40a783:	mov    eax,DWORD PTR [ebp-0x28]
  40a786:	mov    ecx,DWORD PTR [ebp-0x24]
  40a789:	sub    eax,0x175c
  40a78e:	div    ecx
  40a790:	mov    ecx,DWORD PTR [ebp-0x20]
  40a793:	xor    edx,edx
  40a795:	mov    edi,0x4db5
  40a79a:	div    ecx
  40a79c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a79f:	xor    edx,edx
  40a7a1:	div    ecx
  40a7a3:	xor    edx,edx
  40a7a5:	mov    ecx,eax
  40a7a7:	mov    eax,DWORD PTR [ebp+0x8]
  40a7aa:	imul   ecx,ecx,0x2e01
  40a7b0:	mov    esi,DWORD PTR [ebp-0x4]
  40a7b3:	add    eax,edi
  40a7b5:	div    esi
  40a7b7:	mov    edx,DWORD PTR [ebp-0x8]
  40a7ba:	mov    esi,0x940a7
  40a7bf:	sub    ecx,0x16bea86
  40a7c5:	jmp    0x40aa5c
  40a7ca:	lds    ecx,FWORD PTR [ebp+0x709870ff]
  40a7d0:	mov    dh,0xb7
  40a7d2:	and    dh,BYTE PTR [esi+ecx*1]
  40a7d5:	sahf   
  40a7d6:	mov    ds:0xfe9e2000,al
  40a7db:	lahf   
  40a7dc:	mov    esi,0xbec2a9be
  40a7e1:	mov    esi,0x8b3eed87
  40a7e6:	and    al,dh
  40a7e8:	add    dh,BYTE PTR [eax+0x70b0d78]
  40a7ee:	cdq    
  40a7ef:	imul   ebp,DWORD PTR [edi],0x65afa0cd
  40a7f5:	es out 0x6e,al
  40a7f8:	leave  
  40a7f9:	jns    0x40a841
  40a7fb:	in     eax,0x55
  40a7fd:	(bad)  
  40a7fe:	cld    
  40a7ff:	stos   BYTE PTR es:[edi],al
  40a800:	retf   0x38f
  40a803:	aam    0xa
  40a805:	lahf   
  40a806:	cmp    DWORD PTR [ebx],ecx
  40a808:	int    0x3b
  40a80a:	pop    ds
  40a80b:	lahf   
  40a80c:	ins    DWORD PTR es:[edi],dx
  40a80d:	arpl   WORD PTR [eax+0x8],bx
  40a810:	jp     0x40a7af
  40a812:	jmp    0xd70f0974
  40a817:	je     0x40a7b9
  40a819:	and    DWORD PTR ds:0x324b3e6a,ebx
  40a81f:	inc    esi
  40a820:	xlat   BYTE PTR ds:[ebx]
  40a821:	xchg   edx,eax
  40a822:	and    eax,0xa1b56ed6
  40a827:	div    BYTE PTR [ecx-0x406e0daf]
  40a82d:	pop    esi
  40a82e:	dec    edi
  40a82f:	loopne 0x40a83d
  40a831:	ja     0x40a8a0
  40a833:	push   ebx
  40a834:	xor    BYTE PTR [esi+0x3a],dl
  40a837:	jb     0x40a801
  40a839:	add    bl,BYTE PTR [edi+0x1894806e]
  40a83f:	xor    ebx,DWORD PTR [esp+edi*8-0x1a]
  40a843:	inc    edx
  40a844:	cmp    esi,DWORD PTR [ebx+0x70c0e84c]
  40a84a:	jbe    0x40a84a
  40a84c:	(bad)  
  40a84e:	in     eax,0x99
  40a850:	jnp    0x40a7dd
  40a852:	adc    eax,0x5b949515
  40a857:	or     BYTE PTR [esi+0x4ab3e7f4],cl
  40a85d:	rcl    DWORD PTR [ebp-0x6fd7930c],cl
  40a863:	jl     0x40a891
  40a865:	xchg   edi,eax
  40a866:	jo     0x40a8a1
  40a868:	add    al,0x5f
  40a86a:	xchg   esp,eax
  40a86b:	pop    ebx
  40a86c:	push   0xffffffc2
  40a86e:	test   al,0x88
  40a870:	(bad)
  40a874:	jg     0x40a823
  40a876:	xchg   BYTE PTR [eax+0x233fbe13],al
  40a87c:	ja     0x40a854
  40a87e:	outs   dx,DWORD PTR ds:[esi]
  40a87f:	test   DWORD PTR [esi+edx*4+0x31],eax
  40a883:	stc    
  40a884:	push   cs
  40a885:	xor    eax,0x7778db0a
  40a88a:	jnp    0x40a892
  40a88c:	jmp    0x40a862
  40a88e:	xchg   ebx,eax
  40a88f:	jbe    0x40a83a
  40a891:	ror    DWORD PTR [esp+ecx*2+0x42e0759f],cl
  40a898:	shl    BYTE PTR [ebx],cl
  40a89a:	shl    DWORD PTR [ebx],0x49
  40a89d:	or     DWORD PTR [eax-0x65],0x22
  40a8a1:	jb     0x40a8d8
  40a8a3:	ret    
  40a8a4:	mov    al,ds:0x539d3367
  40a8a9:	jne    0x40a891
  40a8ab:	push   cs
  40a8ac:	xor    al,0xb3
  40a8ae:	ins    BYTE PTR es:[edi],dx
  40a8af:	pushf  
  40a8b0:	xor    bh,al
  40a8b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8b3:	ror    DWORD PTR [ebp+0x419f5c2],cl
  40a8b9:	int    0x8f
  40a8bb:	add    al,0xab
  40a8bd:	scas   al,BYTE PTR es:[edi]
  40a8be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8bf:	sub    ecx,DWORD PTR [edx+0x66]
  40a8c2:	mov    ebp,0x11e2e375
  40a8c7:	jge    0x40a8ff
  40a8c9:	sbb    esi,edx
  40a8cb:	ds js  0x40a8d7
  40a8ce:	pop    ebx
  40a8cf:	hlt    
  40a8d0:	enter  0x999e,0xdb
  40a8d4:	jmp    0x82501f67
  40a8d9:	gs xchg ebp,eax
  40a8db:	sub    esi,DWORD PTR [ecx+0x23]
  40a8de:	adc    DWORD PTR gs:[edx],0xffffffc5
  40a8e2:	mov    esp,0xf8d6f4ec
  40a8e7:	lahf   
  40a8e8:	or     DWORD PTR [ecx+0x5f9fbbd8],ecx
  40a8ee:	jb     0x40a922
  40a8f0:	mov    eax,DWORD PTR [eax]
  40a8f2:	jnp    0x40a8f6
  40a8f4:	pop    ebx
  40a8f5:	scas   al,BYTE PTR es:[edi]
  40a8f6:	and    bh,BYTE PTR [esi+0x63]
  40a8f9:	xchg   esi,eax
  40a8fa:	or     bh,BYTE PTR [edi+0x69]
  40a8fd:	pop    ecx
  40a8fe:	adc    DWORD PTR [esi+0x17],esi
  40a901:	inc    eax
  40a902:	and    eax,0xb2c38195
  40a907:	fwait
  40a908:	shl    DWORD PTR gs:[ebx+0x305f40cf],0xc6
  40a910:	sti    
  40a911:	shr    BYTE PTR [edx-0x524b3214],1
  40a917:	mov    BYTE PTR [esp+esi*4+0x139536a8],dh
  40a91e:	xlat   BYTE PTR ds:[ebx]
  40a91f:	pop    edi
  40a920:	jp     0x40a948
  40a922:	push   esi
  40a923:	pmuludq mm2,QWORD PTR [ebp-0x73]
  40a927:	cmp    eax,0x720e0513
  40a92c:	jle    0x40a9a4
  40a92e:	jmp    0x40a921
  40a930:	cmp    dl,BYTE PTR [ebp-0x11]
  40a933:	or     ah,ch
  40a935:	push   edi
  40a936:	adc    BYTE PTR [edx-0x40],dh
  40a939:	sar    edx,1
  40a93b:	push   eax
  40a93c:	mov    fs,WORD PTR ds:0x312a7332
  40a942:	sub    esp,DWORD PTR [ebx+esi*8+0x31]
  40a946:	mov    ebp,DWORD PTR [ebp-0x5]
  40a949:	mov    ch,0x62
  40a94b:	sbb    eax,0x1d10639e
  40a950:	out    0x56,eax
  40a952:	cmp    al,0x6b
  40a954:	jecxz  0x40a8ef
  40a956:	fidiv  DWORD PTR [esi]
  40a958:	push   edx
  40a959:	mov    ds:0x4f124a65,eax
  40a95e:	push   0x4c93917d
  40a963:	mov    DWORD PTR [edi],eax
  40a965:	adc    BYTE PTR [edi+0x27],dl
  40a968:	shl    DWORD PTR [ebp-0x41759571],1
  40a96e:	dec    eax
  40a96f:	(bad)  
  40a971:	and    al,BYTE PTR [edi+ebx*4-0x7e48851d]
  40a978:	inc    ebx
  40a979:	xor    bh,BYTE PTR [ecx-0x5]
  40a97c:	stc    
  40a97d:	ja     0x40a979
  40a97f:	inc    edx
  40a980:	mov    ch,0x87
  40a982:	xchg   edx,eax
  40a983:	sub    al,BYTE PTR [eax+0x6889c26b]
  40a989:	call   0x4b00:0x6500d2e8
  40a990:	(bad)  
  40a991:	adc    al,0x22
  40a993:	mul    DWORD PTR [ecx-0x30]
  40a996:	adc    eax,0x1a81037b
  40a99b:	dec    esi
  40a99c:	rol    DWORD PTR [ebx-0x57],0xe3
  40a9a0:	sti    
  40a9a1:	sbb    eax,0x1eff36b
  40a9a6:	push   cs
  40a9a7:	push   cs
  40a9a8:	stos   BYTE PTR es:[edi],al
  40a9a9:	leave  
  40a9aa:	fisubr DWORD PTR [edx+0x5f]
  40a9ad:	xchg   ebx,eax
  40a9ae:	xchg   ecx,eax
  40a9af:	dec    ecx
  40a9b0:	jle    0x40a9fd
  40a9b2:	mov    esp,0x359c2d91
  40a9b7:	arpl   WORD PTR [ebp+0x1c],cx
  40a9ba:	ins    BYTE PTR es:[edi],dx
  40a9bb:	addr16 dec esp
  40a9bd:	pop    ebp
  40a9be:	mov    al,ds:0x2df46a6
  40a9c3:	or     ah,ch
  40a9c5:	xlat   BYTE PTR ds:[ebx]
  40a9c6:	out    0xf4,al
  40a9c8:	imul   ebx,esi,0xffffffe5
  40a9cb:	push   cs
  40a9cc:	sub    DWORD PTR [ebx+eax*1],esp
  40a9cf:	mov    al,BYTE PTR [eax*1+0x14d21263]
  40a9d6:	scas   eax,DWORD PTR es:[edi]
  40a9d7:	stos   DWORD PTR es:[edi],eax
  40a9d8:	and    bh,bh
  40a9da:	push   ecx
  40a9db:	push   ebp
  40a9dc:	es pop ss
  40a9de:	inc    esi
  40a9df:	ret    0xb6a
  40a9e2:	or     al,0x16
  40a9e4:	xor    al,0xff
  40a9e6:	jne    0x40a9fd
  40a9e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9e9:	test   al,0xb0
  40a9eb:	push   edi
  40a9ec:	test   DWORD PTR [ecx-0x46a3d16f],0xac8fc479
  40a9f6:	cmp    BYTE PTR [ecx+eax*2],ch
  40a9f9:	loope  0x40a994
  40a9fb:	dec    ebp
  40a9fc:	out    dx,al
  40a9fd:	fcomp  DWORD PTR [ebx+eiz*4-0x4]
  40aa01:	in     eax,0xb0
  40aa03:	mov    esp,DWORD PTR [esi-0x3e]
  40aa06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa07:	xor    al,0xf9
  40aa09:	sbb    eax,0x50fbb748
  40aa0e:	int3   
  40aa0f:	jno    0x40a9a5
  40aa11:	(bad)  
  40aa12:	neg    dh
  40aa14:	mov    ebx,0x82e9adb
  40aa19:	jno    0x40aa10
  40aa1b:	pusha  
  40aa1c:	pop    ecx
  40aa1d:	sti    
  40aa1e:	dec    edx
  40aa1f:	jbe    0x40aa6d
  40aa21:	in     al,dx
  40aa22:	mov    bh,0x5f
  40aa24:	xchg   BYTE PTR [ecx+0x56],ah
  40aa27:	loope  0x40aa16
  40aa29:	imul   ecx,DWORD PTR [eax],0x6a
  40aa2c:	dec    esp
  40aa2d:	push   ecx
  40aa2e:	jae    0x40aaa6
  40aa30:	dec    edx
  40aa31:	aaa    
  40aa32:	mov    ah,0xed
  40aa34:	push   es
  40aa35:	mov    DWORD PTR [ebx+eiz*2-0x65],ebp
  40aa39:	mov    bh,0xa8
  40aa3b:	dec    esi
  40aa3c:	mov    esi,0xae5ec56c
  40aa41:	pop    ds
  40aa42:	and    bh,BYTE PTR [esi+0x3d963deb]
  40aa48:	sahf   
  40aa49:	dec    ecx
  40aa4a:	pop    ds
  40aa4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa4c:	into   
  40aa4d:	out    0x54,eax
  40aa4f:	jle    0x40a9f3
  40aa51:	sbb    BYTE PTR [edi+0x23],dl
  40aa54:	adc    BYTE PTR [ebp+0x20e26ddd],bh
  40aa5a:	jbe    0x40a9de
  40aa5c:	sub    eax,edx
  40aa5e:	xor    edx,edx
  40aa60:	div    esi
  40aa62:	mov    esi,0xdbd
  40aa67:	add    eax,esi
  40aa69:	cmp    ecx,eax
  40aa6b:	jae    0x40b05a
  40aa71:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40aa78:	mov    DWORD PTR [ebp-0x20],0x383e
  40aa7f:	mov    DWORD PTR [ebp-0x24],0x3a3a
  40aa86:	mov    DWORD PTR [ebp-0x14],0x13cd
  40aa8d:	jmp    0x40ad24
  40aa92:	popa   
  40aa93:	clc    
  40aa94:	jnp    0x40aae9
  40aa96:	jl     0x40aaec
  40aa98:	imul   edi,eax,0x9e64741c
  40aa9e:	lahf   
  40aa9f:	les    edx,FWORD PTR [esi-0x415a151d]
  40aaa5:	mov    esi,0xbebec2a9
  40aaaa:	(bad)  
  40aaab:	loope  0x40aad7
  40aaad:	xchg   edx,eax
  40aaae:	icebp  
  40aaaf:	mov    edi,0xf90b8a8
  40aab4:	rcr    DWORD PTR [ecx+0x1e],1
  40aab7:	stos   BYTE PTR es:[edi],al
  40aab8:	add    ebx,edi
  40aaba:	in     eax,0xdd
  40aabc:	pop    esi
  40aabd:	mov    dh,0xf4
  40aabf:	enter  0x24e1,0xf5
  40aac3:	sbb    DWORD PTR [ebx],esi
  40aac5:	pop    esp
  40aac6:	xchg   ebp,eax
  40aac7:	std    
  40aac8:	push   cs
  40aac9:	fdivr  DWORD PTR [esi+0x19]
  40aacc:	adc    al,0xd3
  40aace:	rcl    ch,cl
  40aad0:	pop    ebp
  40aad1:	dec    esp
  40aad2:	inc    ecx
  40aad3:	mov    al,ds:0x8b360dc3
  40aad8:	outs   dx,BYTE PTR ds:[esi]
  40aad9:	aad    0x1f
  40aadb:	int3   
  40aadc:	stos   DWORD PTR es:[edi],eax
  40aadd:	in     al,0xc4
  40aadf:	lds    esp,FWORD PTR [edi+ebx*1]
  40aae2:	mov    dh,0xb9
  40aae4:	cmp    eax,0xfabed516
  40aae9:	push   es
  40aaea:	mov    ss,ebx
  40aaec:	sti    
  40aaed:	mov    edi,0x7fbbef6f
  40aaf2:	mov    edx,0x6c608af9
  40aaf7:	outs   dx,BYTE PTR ds:[esi]
  40aaf8:	(bad)  
  40aaf9:	lods   al,BYTE PTR ds:[esi]
  40aafa:	jno    0x40aaf6
  40aafc:	iret   
  40aafd:	aas    
  40aafe:	inc    ebp
  40aaff:	mov    bh,0x89
  40ab01:	add    BYTE PTR ds:0x58277a3b,cl
  40ab07:	pop    edx
  40ab08:	sub    eax,0x62d94649
  40ab0d:	mov    ah,0x9f
  40ab0f:	test   DWORD PTR [ebx+0xf],eax
  40ab12:	jns    0x40aad5
  40ab14:	xchg   esi,eax
  40ab15:	xchg   DWORD PTR [ebp-0x41],eax
  40ab18:	xchg   DWORD PTR [esi+0x20],ecx
  40ab1b:	push   ecx
  40ab1c:	out    0x71,al
  40ab1e:	jge    0x40ab55
  40ab20:	xchg   ecx,eax
  40ab21:	jmp    0x40ab54
  40ab23:	test   al,0x9c
  40ab25:	(bad)  
  40ab26:	mov    ch,0x8
  40ab28:	mov    ecx,0xf46f5bc4
  40ab2d:	aaa    
  40ab2e:	mov    ch,0xe9
  40ab30:	xor    eax,0xc00622c4
  40ab35:	fwait
  40ab36:	adc    ecx,DWORD PTR [eax-0x15]
  40ab39:	int    0x24
  40ab3b:	ficomp WORD PTR [edx+0x4e2c31bb]
  40ab41:	and    eax,DWORD PTR [ebp+edi*8-0x793a9a55]
  40ab48:	adc    ebx,DWORD PTR [esi+0x1a]
  40ab4b:	jmp    FWORD PTR [ebp+0x68]
  40ab4e:	xor    ebp,DWORD PTR [edi+0x2c]
  40ab51:	test   bl,ah
  40ab53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab54:	xor    BYTE PTR [ecx],ah
  40ab56:	loop   0x40ab00
  40ab58:	or     BYTE PTR [ecx],al
  40ab5a:	pop    esp
  40ab5b:	clc    
  40ab5c:	int    0x11
  40ab5e:	jmp    0x8fad13d4
  40ab63:	fdivp  st(6),st
  40ab65:	and    al,0xc6
  40ab67:	dec    ebx
  40ab68:	pop    edi
  40ab69:	pop    edx
  40ab6a:	das    
  40ab6b:	or     al,0x3
  40ab6d:	xor    edx,DWORD PTR [ebp-0x4a9f4095]
  40ab73:	je     0x40abe4
  40ab75:	xchg   esi,eax
  40ab76:	sbb    BYTE PTR [edi-0x3ba777dc],0xe0
  40ab7d:	inc    eax
  40ab7e:	loopne 0x40ab69
  40ab80:	imul   esi,DWORD PTR [esi-0x1a],0x8ad3c6ce
  40ab87:	test   DWORD PTR [ecx],ecx
  40ab89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab8a:	sub    eax,0xc580a586
  40ab8f:	mov    bh,0x68
  40ab91:	pusha  
  40ab92:	fwait
  40ab93:	xchg   edx,eax
  40ab94:	icebp  
  40ab95:	iret   
  40ab96:	lods   al,BYTE PTR ds:[esi]
  40ab97:	das    
  40ab98:	cld    
  40ab99:	or     al,0xb4
  40ab9b:	shl    DWORD PTR gs:[esi+0x45028c66],cl
  40aba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aba3:	leave  
  40aba4:	aaa    
  40aba5:	in     al,0x76
  40aba7:	or     al,BYTE PTR [edi-0x1e]
  40abaa:	push   esp
  40abab:	add    esp,DWORD PTR [eax+0x5a]
  40abae:	cmp    DWORD PTR [edx+0x19],0xc68d8abe
  40abb5:	pop    edi
  40abb6:	push   0x7e
  40abb8:	cmp    ebp,DWORD PTR [esi+0x1]
  40abbb:	jp     0x40abff
  40abbd:	jne    0x40ab7d
  40abbf:	and    bh,BYTE PTR [ebp+0x3e]
  40abc2:	cli    
  40abc3:	jne    0x40abaf
  40abc5:	data16 mov WORD PTR [esi-0x59],ss
  40abc9:	adc    eax,0xb0c9ea95
  40abce:	lock aaa 
  40abd0:	mov    dh,0x9c
  40abd2:	inc    ecx
  40abd3:	dec    edx
  40abd4:	das    
  40abd5:	(bad)  
  40abd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abd7:	popa   
  40abd8:	push   ss
  40abd9:	and    eax,0x14880144
  40abde:	pop    esp
  40abdf:	fwait
  40abe0:	out    0x3b,eax
  40abe2:	dec    cl
  40abe4:	in     eax,dx
  40abe5:	lods   al,BYTE PTR ds:[esi]
  40abe6:	es xchg ebx,eax
  40abe8:	mov    al,ds:0x5c8b4d25
  40abed:	cmp    cl,ah
  40abef:	pop    esp
  40abf0:	jb     0x40ac16
  40abf2:	mov    eax,ds:0xdce1ec3a
  40abf7:	(bad)  
  40abf9:	aaa    
  40abfa:	test   eax,0x5786c331
  40abff:	xlat   BYTE PTR ds:[ebx]
  40ac00:	fldcw  WORD PTR [eax+0x5]
  40ac03:	sub    eax,0x6073afcf
  40ac08:	bnd gs jp 0x40ab9a
  40ac0c:	out    dx,eax
  40ac0d:	mov    eax,0xa2f3c256
  40ac12:	inc    edx
  40ac13:	nop
  40ac14:	xchg   ebx,eax
  40ac15:	ficom  WORD PTR [ecx-0x4f]
  40ac18:	loope  0x40abc1
  40ac1a:	cmp    eax,0x390eb87c
  40ac1f:	dec    esi
  40ac20:	pop    dx
  40ac22:	xor    al,0xf8
  40ac24:	hlt    
  40ac25:	dec    esp
  40ac26:	push   0x56
  40ac28:	std    
  40ac29:	shr    DWORD PTR [eax-0x43b4c513],cl
  40ac2f:	xchg   ecx,eax
  40ac30:	jle    0x40ac92
  40ac32:	or     BYTE PTR [edi],0xed
  40ac35:	out    0xa0,al
  40ac37:	jo     0x40acb1
  40ac39:	daa    
  40ac3a:	mov    cs,esi
  40ac3c:	(bad)
  40ac40:	fcom   QWORD PTR [esi+0x71]
  40ac43:	mov    ss,ebx
  40ac45:	jne    0x40ac86
  40ac47:	cmp    al,0x8f
  40ac49:	xor    BYTE PTR [edi-0x1efd2d6f],0x7f
  40ac50:	lock jo 0x40ac63
  40ac53:	jle    0x40ac76
  40ac55:	cwde   
  40ac56:	aad    0xf5
  40ac58:	push   ebx
  40ac59:	mov    bl,0xa
  40ac5b:	aam    0xba
  40ac5d:	out    dx,al
  40ac5e:	xchg   esi,eax
  40ac5f:	add    ch,BYTE PTR [ebp-0x1d]
  40ac62:	inc    ebp
  40ac63:	pop    ebp
  40ac64:	cmp    DWORD PTR [edi+0x7e1acdc2],ebx
  40ac6a:	in     al,dx
  40ac6b:	sahf   
  40ac6c:	out    dx,al
  40ac6d:	fldcw  WORD PTR [esi+0x6d0d809]
  40ac73:	add    al,0x5d
  40ac75:	sub    BYTE PTR [ebp-0x7fb517a],0x7f
  40ac7c:	mov    al,ds:0x2bbdaf76
  40ac81:	jne    0x40ac9c
  40ac83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac84:	dec    ecx
  40ac85:	mov    ds:0xeaea519b,eax
  40ac8a:	test   eax,0x726f6ea8
  40ac8f:	mov    edx,0x6655bd88
  40ac94:	dec    ecx
  40ac95:	cli    
  40ac96:	retf   
  40ac97:	add    BYTE PTR [ebx-0x67],al
  40ac9a:	and    ecx,DWORD PTR [eax+0x5273fc98]
  40aca0:	xchg   ch,dh
  40aca2:	icebp  
  40aca3:	jmp    esp
  40aca5:	add    DWORD PTR [esi],0xffffffe3
  40aca8:	sahf   
  40aca9:	and    ecx,DWORD PTR [edx+eiz*4+0x72]
  40acad:	mov    cs,WORD PTR [ebp-0x38]
  40acb0:	inc    ebp
  40acb1:	adc    al,0x84
  40acb3:	scas   eax,DWORD PTR es:[edi]
  40acb4:	push   cs
  40acb5:	stos   DWORD PTR es:[edi],eax
  40acb6:	sbb    eax,0xdd466b6a
  40acbb:	mov    cl,0x39
  40acbd:	adc    dl,BYTE PTR ds:0x58f485e0
  40acc3:	adc    esi,esi
  40acc5:	jle    0x40ad1a
  40acc7:	shl    DWORD PTR [esi],1
  40acc9:	or     al,0xb8
  40accb:	pop    ecx
  40accc:	mov    al,ds:0x634cd83d
  40acd1:	sbb    dl,al
  40acd3:	jno    0x40ad1e
  40acd5:	iret   
  40acd6:	mov    eax,ds:0xd7825eaf
  40acdb:	xchg   ebx,eax
  40acdc:	fistp  WORD PTR [edx+ebp*1-0x24b2b258]
  40ace3:	ins    DWORD PTR es:[edi],dx
  40ace4:	lock (bad) 
  40ace6:	xchg   esp,eax
  40ace7:	push   ebx
  40ace8:	and    eax,0xfa7a332b
  40aced:	mov    dl,0xd
  40acef:	in     al,0x8
  40acf1:	mov    edx,0xcee40915
  40acf6:	call   0x64484376
  40acfb:	mov    bh,0x63
  40acfd:	call   0xc72633ab
  40ad02:	rcl    BYTE PTR [edi-0x1760f117],0xe3
  40ad09:	dec    ebp
  40ad0a:	jle    0x40ad14
  40ad0c:	dec    ecx
  40ad0d:	push   edx
  40ad0e:	adc    BYTE PTR [edx-0x5f6d0734],0xed
  40ad15:	adc    BYTE PTR [ebx-0x3867e80e],cl
  40ad1b:	imul   DWORD PTR [edi]
  40ad1d:	mov    esi,0x763d297a
  40ad22:	or     DWORD PTR [eax+0x45c7d233],esi
  40ad28:	call   0x40aeb4
  40ad2d:	mov    DWORD PTR [ebp-0x28],0x3224
  40ad34:	mov    eax,DWORD PTR [ebp-0x28]
  40ad37:	push   0x6
  40ad39:	pop    ebx
  40ad3a:	div    ebx
  40ad3c:	mov    edx,eax
  40ad3e:	mov    eax,ds:0x422708
  40ad43:	mov    eax,DWORD PTR [eax+0x1d0]
  40ad49:	sub    eax,edx
  40ad4b:	mov    edx,DWORD PTR [ebp-0x24]
  40ad4e:	jmp    0x40afe5
  40ad53:	dec    esp
  40ad54:	sub    BYTE PTR [ebp-0x49],ah
  40ad57:	test   eax,0xb93c9cb8
  40ad5c:	and    BYTE PTR [esi+0x38a45490],bl
  40ad62:	xchg   edx,eax
  40ad63:	aad    0xa9
  40ad65:	mov    esi,0xbec2a9be
  40ad6a:	mov    esi,0xdca05dbf
  40ad6f:	pop    ebx
  40ad70:	inc    edx
  40ad71:	ror    BYTE PTR ds:0x29e51fb5,cl
  40ad77:	xchg   ebx,eax
  40ad78:	xlat   BYTE PTR ds:[ebx]
  40ad79:	pop    ecx
  40ad7a:	xchg   esi,eax
  40ad7b:	sub    BYTE PTR [edx+eiz*2+0x19dc036d],bh
  40ad82:	jne    0x40ad0b
  40ad84:	popa   
  40ad85:	mul    BYTE PTR [ebx+edi*4-0x50a25675]
  40ad8c:	and    BYTE PTR [edi+0x7b7493d9],dl
  40ad92:	sub    edi,edx
  40ad94:	shl    esp,1
  40ad96:	int    0xb0
  40ad98:	rcr    BYTE PTR [ecx+0x5f9d5185],cl
  40ad9e:	adc    ch,BYTE PTR [esi]
  40ada0:	test   bl,bl
  40ada2:	rcl    bl,0x52
  40ada5:	mov    edx,0x4f2741fd
  40adaa:	icebp  
  40adab:	pop    eax
  40adac:	jg     0x40ad34
  40adae:	fnstenv [edx+0x1]
  40adb1:	xchg   esp,edx
  40adb3:	jl     0x40adff
  40adb5:	iret   
  40adb6:	jmp    0x4d95:0x43878d23
  40adbd:	dec    eax
  40adbe:	inc    eax
  40adbf:	gs clc 
  40adc1:	adc    eax,0x59801e89
  40adc6:	test   DWORD PTR [edi-0x59],ecx
  40adc9:	cmp    DWORD PTR [eax+esi*4],ebp
  40adcc:	mov    ah,BYTE PTR [ecx]
  40adce:	sbb    BYTE PTR [edi],bh
  40add0:	pop    eax
  40add1:	lods   eax,DWORD PTR ds:[esi]
  40add2:	xor    al,0xa8
  40add4:	jge    0x40add3
  40add6:	div    BYTE PTR [esi-0x79237d7e]
  40addc:	jno    0x40ae05
  40adde:	adc    ah,dl
  40ade0:	ds xor al,0x4a
  40ade3:	bound  esp,QWORD PTR [esi+ebx*8+0x3a405d9]
  40adea:	and    eax,0x3efc50a1
  40adef:	fcomp  QWORD PTR [ebx]
  40adf1:	jno    0x40adc8
  40adf3:	sbb    DWORD PTR [edx+0x401ea98f],esi
  40adf9:	cmp    ebp,DWORD PTR [edi]
  40adfb:	jge    0x40ada0
  40adfd:	adc    al,0x4
  40adff:	mov    ebx,0x9d696041
  40ae04:	not    BYTE PTR [eax]
  40ae06:	push   cs
  40ae07:	mov    BYTE PTR [ebp+ecx*1-0x6af82d48],dh
  40ae0e:	dec    eax
  40ae0f:	dec    edi
  40ae10:	or     edx,ecx
  40ae12:	mov    cl,0xee
  40ae14:	jbe    0x40ae93
  40ae16:	add    al,0x1d
  40ae18:	dec    esp
  40ae19:	pop    es
  40ae1a:	or     DWORD PTR [ebx-0xaabc68a],eax
  40ae20:	mov    al,ds:0x1ecdace1
  40ae25:	div    ebp
  40ae27:	(bad)
  40ae2b:	dec    edx
  40ae2c:	dec    edi
  40ae2d:	ret    
  40ae2e:	or     eax,0x5d10922e
  40ae33:	jl     0x40ae44
  40ae35:	inc    esp
  40ae36:	mov    ecx,0xc5fc32e
  40ae3b:	jg     0x40adeb
  40ae3d:	std    
  40ae3e:	dec    edx
  40ae3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae40:	add    BYTE PTR [eax],bh
  40ae42:	jb     0x40ae1d
  40ae44:	imul   ebp,DWORD PTR [ebp-0x626f5311],0xea1bed89
  40ae4e:	shr    DWORD PTR [edx+edi*8],1
  40ae51:	and    BYTE PTR [ecx],0xca
  40ae54:	icebp  
  40ae55:	cdq    
  40ae56:	xchg   edi,eax
  40ae57:	pushw  cs
  40ae59:	inc    ecx
  40ae5a:	cmp    ecx,ebx
  40ae5c:	mov    dl,0x26
  40ae5e:	test   BYTE PTR ds:0x5ec52e18,bh
  40ae64:	fisttp DWORD PTR [esi]
  40ae66:	mov    al,0xed
  40ae68:	mov    bh,BYTE PTR [ebp-0x33]
  40ae6b:	loope  0x40ae4e
  40ae6d:	clc    
  40ae6e:	or     al,0x7b
  40ae70:	jle    0x40ae02
  40ae72:	dec    edx
  40ae73:	in     al,dx
  40ae74:	imul   BYTE PTR [ebx-0x7a53df68]
  40ae7a:	int3   
  40ae7b:	in     eax,dx
  40ae7c:	and    ah,cl
  40ae7e:	mov    esp,DWORD PTR [eax]
  40ae80:	call   0x3752:0x29976d73
  40ae87:	pop    eax
  40ae88:	mov    ecx,gs
  40ae8a:	mov    cl,0x7c
  40ae8c:	mov    WORD PTR [edi+0xd5b3374],cs
  40ae92:	adc    bl,BYTE PTR [ecx-0x5777d7b1]
  40ae98:	pop    ecx
  40ae99:	xchg   esi,eax
  40ae9a:	test   DWORD PTR [ecx],0x1ba1fbfd
  40aea0:	pusha  
  40aea1:	arpl   WORD PTR [eax-0xc10076c],di
  40aea7:	scas   al,BYTE PTR es:[di]
  40aea9:	mov    bh,0x62
  40aeab:	add    DWORD PTR [esi-0x41],0x64
  40aeaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aeb0:	fmul   DWORD PTR cs:[eax-0x47]
  40aeb4:	jbe    0x40ae83
  40aeb6:	outs   dx,DWORD PTR ds:[esi]
  40aeb7:	pusha  
  40aeb8:	push   0x0
  40aeba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aebb:	arpl   bp,dx
  40aebd:	test   al,0x37
  40aebf:	mov    edx,DWORD PTR [eax-0x38]
  40aec2:	and    ecx,edi
  40aec4:	cmp    eax,0x954416c1
  40aec9:	test   DWORD PTR [eax+0x46666e88],ecx
  40aecf:	push   ss
  40aed0:	outs   dx,DWORD PTR ds:[esi]
  40aed1:	sbb    BYTE PTR [edi],bh
  40aed3:	bound  ebp,QWORD PTR [ebx+0x1b76136a]
  40aed9:	xchg   BYTE PTR [edi],al
  40aedb:	test   DWORD PTR [edi+0x6649a442],0x878a3989
  40aee5:	mov    dl,0x80
  40aee7:	mov    eax,ds:0x72a7d71b
  40aeec:	adc    DWORD PTR [edx+0xa],0x1a
  40aef0:	das    
  40aef1:	add    al,dh
  40aef3:	dec    eax
  40aef4:	sbb    ch,dl
  40aef6:	sbb    al,0x2d
  40aef8:	lods   al,BYTE PTR ds:[esi]
  40aef9:	cmp    ah,BYTE PTR [eax+edx*2-0x4d]
  40aefd:	and    al,0x7d
  40aeff:	mov    ah,0x2d
  40af01:	jnp    0x40aef7
  40af03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af04:	out    0x4b,al
  40af06:	or     ebx,DWORD PTR [ecx+0x19]
  40af09:	(bad)  
  40af0a:	retf   0xd01a
  40af0d:	ficom  DWORD PTR [esi+0x6e8c226]
  40af13:	pop    ecx
  40af14:	and    ebx,DWORD PTR [ecx]
  40af16:	fimul  DWORD PTR ds:0x70023cc3
  40af1c:	mov    eax,0x1ed9079f
  40af21:	std    
  40af22:	or     al,0x34
  40af24:	ins    DWORD PTR es:[edi],dx
  40af25:	inc    esp
  40af26:	test   eax,0x1530b5f5
  40af2b:	aad    0xfc
  40af2d:	(bad)  
  40af2e:	ffreep st(0)
  40af30:	dec    ebx
  40af31:	shl    DWORD PTR [ecx-0x18],1
  40af34:	jl     0x40af90
  40af36:	jnp    0x40aef1
  40af38:	jb     0x40aeeb
  40af3a:	mov    eax,ds:0x61e7de3e
  40af3f:	scas   eax,DWORD PTR es:[edi]
  40af40:	sbb    al,0xcd
  40af42:	add    DWORD PTR [edx+0x4c],esp
  40af45:	jns    0x40af09
  40af47:	das    
  40af48:	and    eax,DWORD PTR [esi-0x62a297ee]
  40af4e:	popa   
  40af4f:	ins    BYTE PTR es:[edi],dx
  40af50:	or     DWORD PTR [ecx+0x5e],eax
  40af53:	xchg   BYTE PTR [ebx],dl
  40af55:	sub    al,0x8e
  40af57:	push   esi
  40af58:	sti    
  40af59:	fcomp  DWORD PTR [edi-0x55]
  40af5c:	jecxz  0x40af65
  40af5e:	pop    es
  40af5f:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40af61:	sbb    eax,0xf2cf0a9c
  40af66:	add    ebp,ebp
  40af68:	lock ds (bad) 
  40af6b:	stos   DWORD PTR es:[edi],eax
  40af6c:	cmc    
  40af6d:	inc    edi
  40af6e:	sahf   
  40af6f:	std    
  40af70:	dec    al
  40af72:	inc    edi
  40af73:	mov    ebx,esp
  40af75:	sbb    al,0x66
  40af77:	pop    ss
  40af78:	xor    eax,0xda885319
  40af7d:	arpl   WORD PTR [ebp+0x18e92364],si
  40af83:	ja     0x40af5e
  40af85:	test   DWORD PTR [esi+0x5efffb09],0xdcff8331
  40af8f:	popf   
  40af90:	dec    edx
  40af91:	pop    ecx
  40af92:	test   DWORD PTR [ebx+0x14019716],ebp
  40af98:	cdq    
  40af99:	cmp    DWORD PTR [edi+0x1152d4e6],0xffffff81
  40afa0:	lock aas 
  40afa2:	adc    BYTE PTR [edi+esi*1],0x98
  40afa6:	or     cl,BYTE PTR [ecx-0x4e16f7dc]
  40afac:	les    ebp,FWORD PTR [edi-0x3b5b808]
  40afb2:	push   0x45
  40afb4:	lahf   
  40afb5:	mov    al,0xa4
  40afb7:	push   0xfffffff9
  40afb9:	sti    
  40afba:	shl    BYTE PTR [edi+0x2acc5580],cl
  40afc0:	jmp    0x40afb9
  40afc2:	(bad)  
  40afc3:	sbb    ax,WORD PTR [edi-0x727419d9]
  40afca:	into   
  40afcb:	xchg   DWORD PTR [eax+0x22b12fb4],esi
  40afd1:	inc    esi
  40afd2:	das    
  40afd3:	in     eax,0xb1
  40afd5:	call   0xe02322fe
  40afda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afdb:	ficomp WORD PTR [ecx]
  40afdd:	sub    BYTE PTR [esi+edx*4-0x6ff8f5fe],ch
  40afe4:	dec    esp
  40afe5:	mov    ebx,DWORD PTR [ebp-0x20]
  40afe8:	imul   edx,ebx
  40afeb:	mov    ebx,DWORD PTR [ebp-0x1c]
  40afee:	xor    edx,ebx
  40aff0:	sub    edx,0x26bd
  40aff6:	add    eax,ecx
  40aff8:	and    edx,0x7126
  40affe:	mov    ebx,ecx
  40b000:	sub    ebx,edx
  40b002:	mov    edx,DWORD PTR [ebp-0x18]
  40b005:	sub    eax,edx
  40b007:	mov    edx,DWORD PTR [ebp-0x14]
  40b00a:	sub    eax,edx
  40b00c:	mov    edx,DWORD PTR [ebp+0xc]
  40b00f:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40b016:	mov    BYTE PTR [eax-0xbb5],dl
  40b01c:	mov    eax,DWORD PTR [ebp-0x10]
  40b01f:	xor    eax,0xffffe1ce
  40b024:	add    eax,DWORD PTR [ebp-0xc]
  40b027:	xor    edx,edx
  40b029:	and    eax,0x6d33
  40b02e:	lea    ecx,[ecx+eax*1-0x6520]
  40b035:	mov    eax,DWORD PTR [ebp+0x8]
  40b038:	mov    ebx,DWORD PTR [ebp-0x4]
  40b03b:	add    eax,edi
  40b03d:	div    ebx
  40b03f:	mov    edx,DWORD PTR [ebp-0x8]
  40b042:	mov    ebx,0x940a7
  40b047:	sub    eax,edx
  40b049:	xor    edx,edx
  40b04b:	div    ebx
  40b04d:	add    eax,esi
  40b04f:	cmp    ecx,eax
  40b051:	jb     0x40aa71
  40b057:	xor    ebx,ebx
  40b059:	inc    ebx
  40b05a:	mov    DWORD PTR [ebp+0xc],0x77bd
  40b061:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40b068:	mov    DWORD PTR [ebp-0x8],0x4738
  40b06f:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40b076:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40b07d:	mov    DWORD PTR [ebp-0x14],0x64ec
  40b084:	mov    DWORD PTR [ebp-0x18],0x1984
  40b08b:	mov    DWORD PTR [ebp-0x1c],0x293
  40b092:	mov    eax,DWORD PTR [ebp+0x8]
  40b095:	mov    ecx,DWORD PTR [ebp+0xc]
  40b098:	add    eax,0x1ef2
  40b09d:	and    eax,ecx
  40b09f:	xor    eax,0x7240
  40b0a4:	mov    ecx,0x7aaa
  40b0a9:	sub    ecx,eax
  40b0ab:	mov    DWORD PTR [ebp+0xc],0x8d3
  40b0b2:	mov    DWORD PTR [ebp+0x8],0x2392
  40b0b9:	mov    DWORD PTR [ebp-0x20],ebx
  40b0bc:	mov    DWORD PTR [ebp-0x24],0x338f
  40b0c3:	mov    DWORD PTR [ebp-0x28],0x61c9
  40b0ca:	mov    eax,DWORD PTR [ebp+0x8]
  40b0cd:	mov    edx,DWORD PTR [ebp+0xc]
  40b0d0:	imul   eax,edx
  40b0d3:	xor    eax,0x40a0
  40b0d8:	or     eax,0x1a48
  40b0dd:	xor    eax,0x139ddb0
  40b0e2:	mov    esi,ecx
  40b0e4:	jmp    0x40b37b
  40b0e9:	stos   BYTE PTR es:[edi],al
  40b0ea:	(bad)  
  40b0eb:	mov    ss,WORD PTR [esi-0x355674c]
  40b0f1:	sub    BYTE PTR [edx],dh
  40b0f3:	inc    eax
  40b0f4:	fld    QWORD PTR [ebx]
  40b0f6:	lock rcl DWORD PTR [eax-0x4141503e],cl
  40b0fd:	test   eax,0xffbebec2
  40b102:	mov    ah,0xd
  40b104:	les    esi,FWORD PTR [ebp-0x7e]
  40b107:	outs   dx,BYTE PTR ds:[esi]
  40b108:	mov    dh,0x4
  40b10a:	mov    al,ds:0x31511ab4
  40b10f:	dec    esp
  40b110:	jmp    0x8c71:0x26eb410b
  40b117:	add    eax,0x3f983bb7
  40b11c:	xchg   esp,eax
  40b11d:	push   cs
  40b11e:	mov    esi,0x57b359f
  40b123:	pop    eax
  40b124:	or     ebp,edi
  40b126:	scas   eax,DWORD PTR es:[edi]
  40b127:	pop    ebp
  40b128:	bound  esi,QWORD PTR [ebp+0x32]
  40b12b:	jb     0x40b11d
  40b12d:	jnp    0x40b186
  40b12f:	xchg   esp,eax
  40b130:	mov    WORD PTR [ecx],ds
  40b132:	mov    ebx,0xa0c8d1be
  40b137:	lahf   
  40b138:	fwait
  40b139:	adc    DWORD PTR [eax-0x489cdc92],ebx
  40b13f:	inc    si
  40b141:	or     eax,0xb0a96704
  40b146:	popa   
  40b147:	cmc    
  40b148:	xchg   ebp,ecx
  40b14a:	sti    
  40b14b:	shl    DWORD PTR [ebx],cl
  40b14d:	stos   BYTE PTR es:[edi],al
  40b14e:	jl     0x40b198
  40b150:	and    dl,BYTE PTR [ebp+eax*2+0x44]
  40b154:	and    BYTE PTR [ebx-0x6a0097b7],dh
  40b15a:	sub    DWORD PTR [ebx-0x53],0x28
  40b15e:	(bad)  
  40b15f:	test   al,0x6
  40b161:	pusha  
  40b162:	sub    BYTE PTR [esi],dl
  40b164:	add    edx,ecx
  40b166:	or     BYTE PTR [edi+0x6],dh
  40b169:	adc    eax,0x9bcd52a2
  40b16e:	mov    ecx,0xbfac2b81
  40b173:	loopne 0x40b165
  40b175:	fwait
  40b176:	pop    eax
  40b177:	in     al,dx
  40b178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b179:	jmp    0x5690b1b6
  40b17e:	sub    ah,BYTE PTR [esi-0x477ace8e]
  40b184:	mov    al,0xd8
  40b186:	je     0x40b179
  40b188:	lods   eax,DWORD PTR ds:[esi]
  40b189:	inc    esi
  40b18a:	inc    DWORD PTR [edi-0x26]
  40b18d:	out    dx,al
  40b18e:	jg     0x40b1e3
  40b190:	fwait
  40b191:	imul   esi,DWORD PTR [eax],0xca293137
  40b197:	out    dx,eax
  40b198:	scas   al,BYTE PTR es:[edi]
  40b199:	or     BYTE PTR [eax],0xbb
  40b19c:	mov    bl,0x30
  40b19e:	inc    edx
  40b19f:	cli    
  40b1a0:	jl     0x40b1f3
  40b1a2:	fmul   QWORD PTR [edi-0x2fdb19aa]
  40b1a8:	data16 mov WORD PTR [ecx],fs
  40b1ab:	int3   
  40b1ac:	dec    ebp
  40b1ad:	mov    ebx,0x8a7d9c8f
  40b1b2:	mov    dl,0x76
  40b1b4:	inc    esi
  40b1b5:	les    ebp,FWORD PTR es:[edx+ecx*8]
  40b1b9:	push   es
  40b1ba:	mov    al,ds:0x622e44ee
  40b1bf:	imul   eax,DWORD PTR [ebx+0x21],0x9be5a25
  40b1c6:	popa   
  40b1c7:	shl    BYTE PTR [esp],1
  40b1ca:	ffreep st(4)
  40b1cc:	aaa    
  40b1cd:	dec    eax
  40b1ce:	call   0xa8714046
  40b1d3:	dec    ebx
  40b1d4:	mov    DWORD PTR [edx+0x66],ecx
  40b1d7:	jmp    0xae066697
  40b1dc:	xchg   edi,eax
  40b1dd:	inc    ebx
  40b1de:	inc    ecx
  40b1df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1e0:	shr    DWORD PTR [ecx],1
  40b1e2:	jmp    0x7b5f:0xde7ce936
  40b1e9:	push   edi
  40b1ea:	lods   eax,DWORD PTR ds:[esi]
  40b1eb:	xor    dl,bl
  40b1ed:	push   ecx
  40b1ee:	mov    eax,ds:0x1442b141
  40b1f3:	mov    dh,0x4c
  40b1f5:	xor    dl,BYTE PTR ds:0x3886f268
  40b1fb:	inc    ebp
  40b1fc:	arpl   di,ax
  40b1fe:	call   0x67835803
  40b203:	rcr    ebp,0xb0
  40b206:	fld    st(2)
  40b208:	test   BYTE PTR [ebp+0x61],ah
  40b20b:	dec    esp
  40b20c:	sub    al,0xa2
  40b20e:	push   es
  40b20f:	std    
  40b210:	jg     0x40b1c1
  40b212:	loope  0x40b204
  40b214:	fdivr  st(1),st
  40b216:	mov    ch,dh
  40b218:	push   0xe1890824
  40b21d:	dec    ecx
  40b21e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b21f:	jb     0x40b244
  40b221:	out    0xd2,al
  40b223:	loopne 0x40b251
  40b225:	ss in  eax,dx
  40b227:	mov    al,BYTE PTR [ebp-0x1d]
  40b22a:	ret    
  40b22b:	sahf   
  40b22c:	nop
  40b22d:	inc    edi
  40b22e:	in     al,0xe9
  40b230:	cmp    dh,dh
  40b232:	fisub  DWORD PTR [edx+0x1c]
  40b235:	push   ebp
  40b236:	adc    esp,DWORD PTR [eax+0x1abb953e]
  40b23c:	test   eax,0xb8ed70bb
  40b241:	add    DWORD PTR [ecx+0x4f],edi
  40b244:	pop    edi
  40b245:	mov    dl,0xb7
  40b247:	xchg   DWORD PTR [ebp-0x28ac200e],esi
  40b24d:	mov    esi,0xa59f3a8f
  40b252:	inc    esi
  40b253:	push   es
  40b254:	pop    edi
  40b255:	add    ebx,ebx
  40b257:	pop    ss
  40b258:	or     eax,edi
  40b25a:	(bad)  
  40b25b:	sbb    BYTE PTR [eax+0x5e],al
  40b25e:	and    ch,BYTE PTR [edx+0x7e]
  40b261:	shl    DWORD PTR [ecx],cl
  40b263:	dec    esi
  40b264:	xchg   DWORD PTR [ecx-0x23],esp
  40b267:	in     eax,0xd9
  40b269:	hlt    
  40b26a:	test   bl,ah
  40b26c:	(bad)  
  40b26d:	int3   
  40b26e:	sub    BYTE PTR [eax],dh
  40b270:	mov    ebx,0xf3050aee
  40b275:	call   0x4bb5b676
  40b27a:	xchg   edx,eax
  40b27b:	push   0xffffffe2
  40b27d:	jmp    0xff03:0x5a6b2a3a
  40b284:	mov    al,BYTE PTR [ebp+0x4527e7a0]
  40b28a:	inc    ebx
  40b28b:	out    0x8c,eax
  40b28d:	and    bh,BYTE PTR [ebx+0x6b6fc0cf]
  40b293:	aad    0x33
  40b295:	pop    ds
  40b296:	add    eax,0x3fb379f1
  40b29b:	out    dx,eax
  40b29c:	out    dx,al
  40b29d:	in     al,0x51
  40b29f:	hlt    
  40b2a0:	jg     0x40b254
  40b2a2:	sbb    eax,esp
  40b2a4:	loop   0x40b270
  40b2a6:	jmp    0xb29d:0x2d9db6dc
  40b2ad:	xchg   esp,eax
  40b2ae:	lea    esi,[edi]
  40b2b0:	and    esp,ecx
  40b2b2:	xor    eax,0x35db2ac2
  40b2b7:	push   esi
  40b2b8:	ds (bad) 
  40b2ba:	push   edx
  40b2bb:	ret    
  40b2bc:	int    0x3d
  40b2be:	pop    ds
  40b2bf:	or     DWORD PTR [edi+0x7490bb56],eax
  40b2c5:	add    DWORD PTR [ebx-0x1],esi
  40b2c8:	shl    DWORD PTR [ebx+0x32b3b8a],cl
  40b2ce:	test   eax,0xc6431d12
  40b2d3:	mov    ecx,0x7368c8c8
  40b2d8:	mov    ch,BYTE PTR [ebx]
  40b2da:	xor    esi,ebx
  40b2dc:	int    0x4d
  40b2de:	cmc    
  40b2df:	cmp    eax,0xcfe4e964
  40b2e4:	mov    ?,ecx
  40b2e6:	add    al,0x14
  40b2e8:	xor    bh,0xcd
  40b2eb:	cmp    ch,bh
  40b2ed:	aas    
  40b2ee:	int    0x56
  40b2f0:	aad    0x64
  40b2f2:	iret   
  40b2f3:	push   cs
  40b2f4:	clc    
  40b2f5:	shl    BYTE PTR [edx+ebp*2-0x360100ba],cl
  40b2fc:	cmp    BYTE PTR [edx-0x5bab7aea],bl
  40b302:	cmp    eax,0xca4321f7
  40b307:	push   0xffffffb9
  40b309:	mov    al,ds:0xa98d3a14
  40b30e:	hlt    
  40b30f:	sub    al,0xa2
  40b311:	add    eax,ebp
  40b313:	fld    TBYTE PTR [eax]
  40b315:	sub    bh,BYTE PTR [edi-0x3e]
  40b318:	adc    al,0x35
  40b31a:	jae    0x40b2ec
  40b31c:	stos   BYTE PTR es:[edi],al
  40b31d:	lds    ebp,FWORD PTR [ebx+0x1]
  40b320:	sbb    al,0xcc
  40b322:	(bad)  
  40b323:	adc    eax,0x44a8d90c
  40b328:	fisttp WORD PTR [edi+0x58]
  40b32b:	xor    al,0x6c
  40b32d:	stos   DWORD PTR es:[edi],eax
  40b32e:	jmp    0x8b02:0x417cab44
  40b335:	popf   
  40b336:	iret   
  40b337:	adc    eax,0xca35e1a8
  40b33c:	sub    BYTE PTR [edx+ecx*2+0x1b],bh
  40b340:	jae    0x40b308
  40b342:	aaa    
  40b343:	fisttp WORD PTR [ebx-0x12676ea7]
  40b349:	mov    al,0x87
  40b34b:	sahf   
  40b34c:	sbb    eax,0x31ef283b
  40b351:	inc    esp
  40b352:	stc    
  40b353:	adc    ecx,DWORD PTR [esi-0x6733f509]
  40b359:	dec    ecx
  40b35a:	leave  
  40b35b:	lahf   
  40b35c:	sub    esp,DWORD PTR [eax-0x34]
  40b35f:	arpl   WORD PTR [ecx-0x7],cx
  40b362:	daa    
  40b363:	aam    0x8a
  40b365:	in     eax,0xb3
  40b367:	xor    eax,DWORD PTR [edx-0x3dbb72ec]
  40b36d:	in     eax,0x4e
  40b36f:	or     al,0x7c
  40b371:	pop    edx
  40b372:	mov    ebx,0x890e2a86
  40b377:	mov    dl,ch
  40b379:	mov    bl,0xeb
  40b37b:	sub    esi,eax
  40b37d:	mov    eax,DWORD PTR [ebp-0x28]
  40b380:	mov    edx,DWORD PTR [ebp-0x24]
  40b383:	mov    edi,DWORD PTR [ebp-0x20]
  40b386:	or     eax,0x1cc2
  40b38b:	sub    eax,edx
  40b38d:	xor    edx,edx
  40b38f:	div    edi
  40b391:	mov    edx,DWORD PTR ds:0x422708
  40b397:	mov    edx,DWORD PTR [edx+0x1d4]
  40b39d:	sub    edx,eax
  40b39f:	mov    eax,DWORD PTR [ebp+0x10]
  40b3a2:	mov    al,BYTE PTR [esi+eax*1]
  40b3a5:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40b3ac:	mov    eax,DWORD PTR [ebp-0x1c]
  40b3af:	mov    edx,DWORD PTR [ebp-0x18]
  40b3b2:	imul   eax,edx
  40b3b5:	mov    edx,DWORD PTR [ebp-0x14]
  40b3b8:	imul   eax,eax,0x262b
  40b3be:	or     eax,edx
  40b3c0:	jmp    0x40b657
  40b3c5:	dec    ecx
  40b3c6:	mov    bl,0x7d
  40b3c8:	push   esp
  40b3c9:	mov    bh,0x74
  40b3cb:	pushf  
  40b3cc:	mov    esp,0xe3db5995
  40b3d1:	and    al,0xaa
  40b3d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3d4:	nop
  40b3d5:	lods   eax,DWORD PTR ds:[esi]
  40b3d6:	mov    bl,0xbe
  40b3d8:	mov    esi,0xbebec2a9
  40b3dd:	jg     0x40b426
  40b3df:	push   eax
  40b3e0:	ret    0x45bd
  40b3e3:	cmp    bl,bl
  40b3e5:	loop   0x40b398
  40b3e7:	sahf   
  40b3e8:	outs   dx,BYTE PTR ds:[esi]
  40b3e9:	imul   ebp,DWORD PTR [edx],0x57bd4f3
  40b3ef:	scas   al,BYTE PTR es:[edi]
  40b3f0:	test   BYTE PTR [eax],cl
  40b3f2:	mov    ah,0xf
  40b3f4:	lahf   
  40b3f5:	mov    ah,0xfa
  40b3f7:	adc    ebx,DWORD PTR [eax]
  40b3f9:	lock cs inc ebp
  40b3fc:	mov    ebp,0x99585bf2
  40b401:	sar    BYTE PTR [ecx-0x46d71654],1
  40b407:	hlt    
  40b408:	inc    edx
  40b409:	cmp    eax,0xf9a6e6cb
  40b40e:	rcl    BYTE PTR ds:0x2964de88,1
  40b414:	aam    0xce
  40b416:	int    0x5f
  40b418:	(bad)  
  40b419:	psrlw  mm6,mm4
  40b41c:	psllq  mm5,0xf3
  40b420:	ja     0x40b3ae
  40b422:	out    0x15,eax
  40b424:	push   0xa2d1dc1c
  40b429:	rol    BYTE PTR [edi+edi*2-0x67],1
  40b42d:	and    al,0x9a
  40b42f:	lods   al,BYTE PTR ds:[esi]
  40b430:	or     BYTE PTR [ebx-0x5c57c66c],dh
  40b436:	cdq    
  40b437:	jle    0x40b3e6
  40b439:	push   0x3b
  40b43b:	sub    ebp,eax
  40b43d:	in     al,dx
  40b43e:	xchg   bl,dl
  40b440:	enter  0x423a,0x3f
  40b444:	inc    edx
  40b445:	ficom  WORD PTR [eax]
  40b447:	arpl   WORD PTR [edx+ebx*4-0x60],cx
  40b44b:	jmp    0xe138:0x340e3eac
  40b452:	lea    esi,[ebx+0x1e24edbf]
  40b458:	in     eax,dx
  40b459:	ins    BYTE PTR es:[edi],dx
  40b45a:	xchg   ebx,eax
  40b45b:	cwde   
  40b45c:	out    0x8,al
  40b45e:	fimul  DWORD PTR [ebx]
  40b460:	nop
  40b461:	push   esp
  40b462:	ret    
  40b463:	les    esi,FWORD PTR [ebx+0x7a]
  40b466:	xchg   edi,eax
  40b467:	and    al,0x6e
  40b469:	sbb    BYTE PTR [ecx],al
  40b46b:	int    0x3
  40b46d:	mov    bh,0x94
  40b46f:	jecxz  0x40b4cb
  40b471:	jecxz  0x40b455
  40b473:	push   0x14
  40b475:	and    bl,ch
  40b477:	jle    0x40b4c3
  40b479:	push   ebx
  40b47a:	inc    ecx
  40b47b:	dec    DWORD PTR [eax-0x6b]
  40b47e:	jno    0x40b4b8
  40b480:	mov    ds:0xc9ea7f3d,al
  40b485:	xchg   edx,eax
  40b486:	mov    ch,0x1
  40b488:	mov    ch,0xff
  40b48a:	adc    DWORD PTR ds:0xfef9944a,esi
  40b490:	adc    al,0xb8
  40b492:	jbe    0x40b50f
  40b494:	jmp    DWORD PTR [ebp+eiz*4+0x6c]
  40b498:	fxch   st(6)
  40b49a:	or     dh,BYTE PTR [edx+ebx*2]
  40b49d:	push   es
  40b49e:	clc    
  40b49f:	imul   eax,DWORD PTR [esi-0x59b70795],0x322bc9e
  40b4a9:	lahf   
  40b4aa:	inc    edi
  40b4ab:	jne    0x40b50f
  40b4ad:	js     0x40b4dd
  40b4af:	dec    ch
  40b4b1:	and    BYTE PTR [eax-0x1d],dl
  40b4b4:	rcl    BYTE PTR [edi],1
  40b4b6:	pop    ss
  40b4b7:	test   bl,ah
  40b4b9:	test   BYTE PTR [ebx+0x6b4a5cd1],bh
  40b4bf:	ficomp WORD PTR [edi-0x35]
  40b4c2:	xlat   BYTE PTR ds:[ebx]
  40b4c3:	loope  0x40b479
  40b4c5:	sbb    edi,DWORD PTR [edi-0x1a]
  40b4c8:	adc    al,0x92
  40b4cb:	and    BYTE PTR [ecx+0x40],al
  40b4ce:	(bad)  
  40b4cf:	dec    ebp
  40b4d0:	jmp    0xeeed:0x8903eac3
  40b4d7:	mov    dh,0xe7
  40b4d9:	mov    ebp,0xe8e71604
  40b4de:	mov    ecx,0xc1354b9e
  40b4e3:	icebp  
  40b4e4:	mov    ecx,0x37bad0fc
  40b4e9:	xchg   esp,eax
  40b4ea:	push   ss
  40b4eb:	mov    DWORD PTR [edx],eax
  40b4ed:	scas   al,BYTE PTR es:[edi]
  40b4ee:	je     0x40b522
  40b4f0:	jbe    0x40b54b
  40b4f2:	cdq    
  40b4f3:	adc    DWORD PTR [esi+0x60e06b6d],0xffffffdf
  40b4fa:	cdq    
  40b4fb:	adc    ebp,DWORD PTR ds:0x541363ad
  40b501:	fidiv  DWORD PTR [ebx+0x2ba092f7]
  40b507:	scas   al,BYTE PTR es:[edi]
  40b508:	lds    eax,FWORD PTR [edx-0x7e553d7d]
  40b50e:	adc    DWORD PTR [esi-0x17c23898],ecx
  40b514:	in     eax,0x56
  40b516:	test   al,0x33
  40b518:	jb     0x40b4f3
  40b51a:	rol    ecx,cl
  40b51c:	retf   
  40b51d:	mov    eax,ds:0x1d63cab5
  40b522:	adc    al,BYTE PTR [ebx+0x55ae5c73]
  40b528:	std    
  40b529:	dec    esi
  40b52a:	test   eax,0x72e84c01
  40b52f:	fdiv   st,st(3)
  40b531:	test   DWORD PTR [edx+edi*2+0x55df858d],esi
  40b538:	stc    
  40b539:	(bad)  
  40b53a:	mov    dl,0x13
  40b53c:	shl    DWORD PTR [esi+0x3b2883dc],cl
  40b542:	sbb    BYTE PTR [ebx+edi*8],ah
  40b545:	test   eax,0xe3f66a59
  40b54a:	ins    BYTE PTR es:[edi],dx
  40b54b:	pop    ecx
  40b54c:	(bad)  
  40b54d:	int3   
  40b54e:	repz fs pop esi
  40b551:	jl     0x40b5a0
  40b553:	xor    BYTE PTR [esi],dl
  40b555:	cmp    bl,dh
  40b557:	adc    BYTE PTR [edi-0x17],0x60
  40b55b:	and    dl,BYTE PTR [edx+0x23]
  40b55e:	loope  0x40b59d
  40b560:	xor    eax,0x35eb4936
  40b565:	pop    ebx
  40b566:	jne    0x40b550
  40b568:	sbb    DWORD PTR [eax+0x36],0x7e
  40b56c:	das    
  40b56d:	sbb    al,0x8b
  40b56f:	sub    DWORD PTR [eax],0xffffffee
  40b572:	fs push ebx
  40b574:	adc    BYTE PTR [ebx],ah
  40b576:	test   BYTE PTR [edi],al
  40b578:	push   DWORD PTR [esi+0x82c3e43]
  40b57e:	ins    BYTE PTR es:[edi],dx
  40b57f:	or     al,0x2d
  40b581:	and    ecx,DWORD PTR [edx-0x7e7459de]
  40b587:	pop    ds
  40b588:	out    0xf4,al
  40b58a:	cmc    
  40b58b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b58c:	(bad)
  40b590:	sti    
  40b591:	jno    0x40b5aa
  40b593:	cmp    ebp,DWORD PTR [edx-0x55416caa]
  40b599:	xchg   ebp,esp
  40b59b:	sub    al,BYTE PTR [ebx-0x56973f18]
  40b5a1:	imul   ecx,DWORD PTR [eax+esi*2],0xffffff88
  40b5a5:	fild   QWORD PTR [edx]
  40b5a7:	arpl   WORD PTR [ecx],dx
  40b5a9:	adc    BYTE PTR [ebp+eax*8-0x6322f6fe],bh
  40b5b0:	mov    ah,0x1e
  40b5b2:	mov    WORD PTR [edi+esi*1-0x58],?
  40b5b6:	aad    0xfe
  40b5b8:	push   esi
  40b5b9:	fistp  QWORD PTR [eax-0x7a67bf1c]
  40b5bf:	cmp    ebp,DWORD PTR [edi+0x66]
  40b5c2:	mov    bl,0x61
  40b5c4:	das    
  40b5c5:	out    dx,al
  40b5c6:	in     al,0x46
  40b5c8:	pushf  
  40b5c9:	cmp    al,0xaf
  40b5cb:	addr16 ret 0xf1a1
  40b5cf:	mov    esp,0xc0e6de1b
  40b5d4:	sbb    al,0xa3
  40b5d6:	xor    al,0x91
  40b5d8:	call   FWORD PTR [ebp+0x4e]
  40b5db:	sbb    BYTE PTR [ebp-0x16],dh
  40b5de:	fdivr  DWORD PTR [esi]
  40b5e0:	mov    ecx,0x2c925f34
  40b5e5:	push   cs
  40b5e6:	xchg   BYTE PTR [ebp-0x6],cl
  40b5e9:	test   BYTE PTR [edx],0xc7
  40b5ec:	es push esi
  40b5ee:	xor    esp,ebp
  40b5f0:	hlt    
  40b5f1:	add    eax,0xbf6fbec
  40b5f6:	sbb    ebx,eax
  40b5f8:	loope  0x40b582
  40b5fa:	sar    BYTE PTR [ebx-0x14c17c25],0xb5
  40b601:	and    eax,0x68a17f87
  40b606:	push   0x70ccf25d
  40b60b:	xchg   edx,eax
  40b60c:	cmp    esp,DWORD PTR [esi]
  40b60e:	icebp  
  40b60f:	test   eax,0xeb02ee2d
  40b614:	sub    eax,0x7c19b0be
  40b619:	loopne 0x40b648
  40b61b:	dec    ecx
  40b61c:	ja     0x40b67b
  40b61e:	pop    ss
  40b61f:	push   DWORD PTR [esi+ebx*4+0x79]
  40b623:	or     ch,BYTE PTR [edi+0x3b]
  40b626:	pop    ss
  40b627:	mov    eax,ds:0xf8e70b60
  40b62c:	ror    DWORD PTR [ecx-0x5],cl
  40b62f:	sbb    eax,0x6c27dec7
  40b634:	jne    0x40b614
  40b636:	jbe    0x40b61d
  40b638:	scas   eax,DWORD PTR es:[edi]
  40b639:	inc    ah
  40b63b:	repz cmp dl,ah
  40b63e:	test   al,0x46
  40b640:	pop    esi
  40b641:	ret    
  40b642:	fs mov al,0xaf
  40b645:	cdq    
  40b646:	cmp    esp,ecx
  40b648:	jp     0x40b6a3
  40b64a:	sbb    al,BYTE PTR [ebx-0x1dbe0bd1]
  40b650:	jno    0x40b60f
  40b652:	ja     0x40b6b4
  40b654:	xor    BYTE PTR [edx+0x14],dl
  40b657:	mov    edx,DWORD PTR [ebp-0x10]
  40b65a:	or     eax,edx
  40b65c:	xor    eax,0x59f6
  40b661:	lea    ecx,[ecx+eax*1+0x350559e6]
  40b668:	mov    eax,DWORD PTR [ebp-0xc]
  40b66b:	and    eax,0xddc
  40b670:	add    eax,DWORD PTR [ebp-0x8]
  40b673:	xor    eax,0x46e3
  40b678:	add    eax,0x50eb
  40b67d:	cmp    ecx,eax
  40b67f:	jne    0x40b0ab
  40b685:	pop    edi
  40b686:	pop    esi
  40b687:	pop    ebx
  40b688:	leave  
  40b689:	ret    0xc
  40b68c:	push   ebp
  40b68d:	mov    ebp,esp
  40b68f:	sub    esp,0xec
  40b695:	push   ebx
  40b696:	push   esi
  40b697:	mov    DWORD PTR [ebp-0x8],0x548e
  40b69e:	jmp    0x40baa9
  40b6a3:	or     DWORD PTR [edx],ebx
  40b6a5:	or     eax,DWORD PTR [edi]
  40b6a7:	sbb    al,0x18
  40b6a9:	or     DWORD PTR [eax+ebp*4],ebx
  40b6ac:	mov    ds:0x9b29e60,eax
  40b6b1:	in     eax,0xe3
  40b6b3:	call   0xbec4:0x92bebeb7
  40b6ba:	mov    esi,0x9469c645
  40b6bf:	inc    edx
  40b6c0:	cwde   
  40b6c1:	push   ebx
  40b6c2:	(bad)  
  40b6c3:	xchg   edx,eax
  40b6c4:	enter  0x30bb,0xa8
  40b6c8:	dec    ecx
  40b6c9:	icebp  
  40b6ca:	and    al,0xeb
  40b6cc:	(bad)  
  40b6cd:	test   ecx,0x6d186d46
  40b6d3:	xor    al,0xd7
  40b6d5:	or     edx,edx
  40b6d7:	cmp    DWORD PTR [esi+0x29],ecx
  40b6da:	adc    ch,BYTE PTR [ebx]
  40b6dc:	les    ebp,FWORD PTR [edi+0x18]
  40b6df:	pop    ebx
  40b6e0:	repnz not DWORD PTR [edi]
  40b6e3:	neg    DWORD PTR [edx*2+0x55279ff4]
  40b6ea:	mov    ecx,0xa71cc42
  40b6ef:	mov    esi,0x41b968f1
  40b6f4:	imul   DWORD PTR [ebp-0x7cfd1f94]
  40b6fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6fb:	fwait
  40b6fc:	xchg   esp,edx
  40b6fe:	fs pop ebp
  40b700:	xchg   esp,eax
  40b701:	jmp    0x40b6ba
  40b703:	push   eax
  40b704:	jle    0x40b785
  40b706:	ins    DWORD PTR es:[edi],dx
  40b707:	lock adc al,0xfb
  40b70a:	push   edx
  40b70b:	mov    ch,0x10
  40b70d:	add    DWORD PTR ds:0x1859a29f,0x65
  40b714:	dec    ebp
  40b715:	retf   
  40b716:	cdq    
  40b717:	sub    BYTE PTR ds:0xc5f8e06c,0xf5
  40b71e:	loop   0x40b6ae
  40b720:	xor    al,0x77
  40b722:	push   ebp
  40b723:	fstp   DWORD PTR [esi-0x7d200c8c]
  40b729:	pusha  
  40b72a:	push   es
  40b72b:	push   ebx
  40b72c:	ret    
  40b72d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b72e:	jmp    0x3debee1b
  40b733:	sub    ah,BYTE PTR [ebx]
  40b735:	pop    ebp
  40b736:	icebp  
  40b737:	lock stos DWORD PTR es:[edi],eax
  40b739:	out    dx,eax
  40b73a:	imul   edx,DWORD PTR [ecx],0x3cad2a04
  40b740:	outs   dx,DWORD PTR ds:[esi]
  40b741:	jne    0x40b79f
  40b743:	push   es
  40b744:	(bad)  
  40b745:	sahf   
  40b746:	add    al,0xfd
  40b748:	mov    eax,ds:0xfaf6a4ab
  40b74d:	sbb    bl,BYTE PTR [esi]
  40b74f:	push   edx
  40b750:	or     DWORD PTR [eax+0x57b2cf4d],ecx
  40b756:	xor    al,0x99
  40b758:	ffreep st(1)
  40b75a:	scas   al,BYTE PTR es:[edi]
  40b75b:	out    dx,al
  40b75c:	mov    dh,0x4f
  40b75e:	ficom  DWORD PTR [ebx]
  40b760:	xlat   BYTE PTR ds:[ebx]
  40b761:	dec    ebp
  40b762:	shl    DWORD PTR [ebp-0x4],0x5a
  40b766:	loopne 0x40b7d7
  40b768:	or     eax,0xca99a724
  40b76d:	inc    edi
  40b76e:	ins    BYTE PTR es:[edi],dx
  40b76f:	pop    esi
  40b770:	xor    al,0x11
  40b772:	lahf   
  40b773:	cmp    eax,0xda60e0cb
  40b778:	pop    es
  40b779:	loopne 0x40b717
  40b77b:	(bad)  
  40b77c:	jle    0x40b716
  40b77e:	jmp    0x3bac3c10
  40b783:	mov    ecx,0xc0c87bb7
  40b788:	adc    ebx,DWORD PTR [esi-0x7b946657]
  40b78e:	jno    0x40b807
  40b790:	sub    eax,0x46738576
  40b795:	jl     0x40b7ce
  40b797:	xchg   BYTE PTR [esi-0x7],bl
  40b79a:	(bad)  
  40b79b:	in     al,dx
  40b79c:	lock inc ecx
  40b79e:	jne    0x40b754
  40b7a0:	outs   dx,DWORD PTR ds:[esi]
  40b7a1:	fist   DWORD PTR [ecx+0x6b]
  40b7a4:	pushf  
  40b7a5:	jns    0x40b79d
  40b7a7:	jecxz  0x40b73d
  40b7a9:	jb     0x40b742
  40b7ab:	xor    DWORD PTR [ebx+0x6869ccbd],ebx
  40b7b1:	xchg   edi,eax
  40b7b2:	or     esp,DWORD PTR [edx-0x40]
  40b7b5:	in     al,0xc8
  40b7b7:	pop    edx
  40b7b8:	dec    edx
  40b7b9:	data16 xor al,0xcb
  40b7bc:	imul   esp,DWORD PTR [edi],0x3a6c3559
  40b7c2:	ds jo  0x40b7fd
  40b7c5:	mov    bh,0xe3
  40b7c7:	xor    al,0xd5
  40b7c9:	inc    eax
  40b7ca:	in     al,dx
  40b7cb:	adc    eax,DWORD PTR [esp+edx*8+0x18d2f275]
  40b7d2:	push   es
  40b7d3:	mov    ds:0x29bb6c40,eax
  40b7d8:	add    eax,0x87580a6
  40b7dd:	mov    ss,WORD PTR [eax+esi*4]
  40b7e0:	sub    DWORD PTR [edi-0x13],esi
  40b7e3:	(bad)  
  40b7e5:	repz cmp ah,BYTE PTR [edi]
  40b7e8:	arpl   WORD PTR [ebx],di
  40b7ea:	mov    dl,0xd7
  40b7ec:	(bad)  
  40b7ed:	dec    ebp
  40b7ee:	icebp  
  40b7ef:	addr16 xchg edi,eax
  40b7f1:	xor    al,0x49
  40b7f3:	mov    eax,ds:0xe4d9f071
  40b7f8:	mov    ch,BYTE PTR [ecx-0x211924fd]
  40b7fe:	int3   
  40b7ff:	sti    
  40b800:	(bad)  
  40b801:	(bad)  
  40b802:	xchg   edi,eax
  40b803:	dec    ebp
  40b804:	lods   al,BYTE PTR ds:[esi]
  40b805:	mov    DWORD PTR [ebx-0x678932e2],edx
  40b80b:	cmp    dh,cl
  40b80d:	ds call 0x249e:0x4985d89
  40b815:	icebp  
  40b816:	test   bl,bh
  40b818:	test   BYTE PTR [esi+0x65],0xb8
  40b81c:	pop    ebx
  40b81d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b81e:	sub    al,0x39
  40b820:	mov    eax,0x9f56d6f8
  40b825:	icebp  
  40b826:	ds dec BYTE PTR es:[edx-0x15]
  40b82b:	imul   ebp,DWORD PTR [eax-0x29a68968],0x4deeb109
  40b835:	pushf  
  40b836:	mov    edx,0x7d75103
  40b83b:	jns    0x40b890
  40b83d:	and    DWORD PTR [ebp-0x19],esi
  40b840:	inc    esp
  40b841:	jae    0x40b80e
  40b843:	(bad)  
  40b844:	or     eax,0x36eca4fb
  40b849:	jne    0x40b85d
  40b84b:	fwait
  40b84c:	jns    0x40b8af
  40b84e:	ret    
  40b84f:	inc    esi
  40b850:	inc    ecx
  40b851:	pop    ecx
  40b852:	xchg   cx,ax
  40b854:	iret   
  40b855:	adc    eax,0xcc72f349
  40b85a:	rol    DWORD PTR [ebp-0x6d04dbee],1
  40b860:	and    DWORD PTR [ecx+edx*8],esi
  40b863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b864:	push   esp
  40b865:	daa    
  40b866:	jmp    0x40b8c0
  40b868:	mov    cl,dl
  40b86a:	mov    bh,0x74
  40b86c:	clc    
  40b86d:	loope  0x40b83e
  40b86f:	jno    0x40b8cf
  40b871:	mov    edx,0x8743442
  40b876:	dec    ecx
  40b877:	rol    BYTE PTR [esi+0x1267dd97],1
  40b87d:	push   0xffffff91
  40b87f:	xor    BYTE PTR [esi-0x66baead3],ah
  40b885:	je     0x40b8b6
  40b887:	cdq    
  40b888:	iret   
  40b889:	cmp    eax,0x3218aae5
  40b88e:	fild   DWORD PTR [edx+edx*1]
  40b891:	aam    0x9c
  40b893:	(bad)  
  40b894:	lahf   
  40b895:	jnp    0x40b8ea
  40b897:	icebp  
  40b898:	mov    ecx,0xb854d3a
  40b89d:	(bad)
  40b8a1:	mov    dl,0x70
  40b8a3:	or     esi,ebp
  40b8a5:	imul   eax,DWORD PTR [ebx+0x758a9dd9],0x9c2cc075
  40b8af:	sub    al,BYTE PTR [edi-0x402619cd]
  40b8b5:	xchg   ecx,eax
  40b8b6:	push   ebp
  40b8b7:	(bad)  
  40b8b8:	push   0x7d
  40b8ba:	stos   BYTE PTR es:[edi],al
  40b8bb:	lahf   
  40b8bc:	mov    BYTE PTR [ecx],0x8d
  40b8bf:	adc    DWORD PTR [edi],ebx
  40b8c1:	data16 jbe 0x40b914
  40b8c4:	pop    ebp
  40b8c5:	imul   ecx,DWORD PTR [ecx+0x2fed27b5],0x65
  40b8cc:	repz into 
  40b8ce:	sub    al,0x9f
  40b8d0:	int3   
  40b8d1:	aam    0x57
  40b8d3:	mov    bl,0xa1
  40b8d5:	lds    esp,FWORD PTR [ecx+0x1e2f2c14]
  40b8db:	int3   
  40b8dc:	ret    
  40b8dd:	shl    esp,1
  40b8df:	xchg   ebx,eax
  40b8e0:	scas   eax,DWORD PTR es:[edi]
  40b8e1:	mov    ds:0x2f0d198f,al
  40b8e6:	mov    eax,ds:0x8415a5e8
  40b8eb:	lock int3 
  40b8ed:	inc    ebx
  40b8ee:	ss and eax,0x8b68e4d2
  40b8f4:	ja     0x40b8e1
  40b8f6:	mov    esi,0x2b922714
  40b8fb:	push   0xffffffd5
  40b8fd:	aam    0x31
  40b8ff:	imul   esp,DWORD PTR [ebp-0x3cef6f30],0xb5c02375
  40b909:	outs   dx,BYTE PTR ds:[esi]
  40b90a:	or     ch,0x88
  40b90d:	lea    edx,[eax-0x638f1fa1]
  40b913:	sbb    BYTE PTR [esi],0x4c
  40b916:	mov    bh,0x69
  40b918:	push   es
  40b919:	cmp    eax,0x6092285a
  40b91e:	ja     0x40b918
  40b920:	(bad)
  40b924:	inc    esp
  40b925:	mov    esi,0x6f6c0ee0
  40b92a:	add    eax,0x42f1c431
  40b92f:	jecxz  0x40b900
  40b931:	sahf   
  40b932:	dec    edx
  40b933:	(bad)  [esp+ebp*4-0x7f3a22c8]
  40b93a:	sbb    cl,ch
  40b93c:	in     al,0x94
  40b93e:	(bad)  
  40b93f:	cwde   
  40b940:	push   ebp
  40b941:	mov    cl,0xc5
  40b943:	dec    ecx
  40b944:	ss ins BYTE PTR es:[edi],dx
  40b946:	(bad)  
  40b947:	sti    
  40b948:	call   0x3bbcfdad
  40b94d:	or     al,0xb6
  40b94f:	xchg   DWORD PTR [ecx],edi
  40b951:	pop    ebx
  40b952:	dec    esp
  40b953:	jbe    0x40b939
  40b955:	std    
  40b956:	dec    edx
  40b957:	shl    esi,1
  40b959:	mov    cl,0x1b
  40b95b:	xchg   edi,eax
  40b95c:	and    esi,DWORD PTR [ebp-0x50fe26e9]
  40b962:	jns    0x40b931
  40b964:	outs   dx,BYTE PTR ds:[esi]
  40b965:	bound  edi,QWORD PTR [ecx+eax*4+0x40f4fd7a]
  40b96c:	out    0xec,al
  40b96e:	inc    ecx
  40b96f:	xlat   BYTE PTR ds:[ebx]
  40b970:	push   eax
  40b971:	xchg   ebx,eax
  40b972:	jo     0x40b9a6
  40b974:	jae    0x40b9e6
  40b976:	mov    esp,0x1fa3c05b
  40b97b:	jmp    0x8b09e9d6
  40b980:	and    BYTE PTR [ecx+0x655b1277],bl
  40b986:	ja     0x40b9be
  40b988:	bound  eax,QWORD PTR [edx+0x7be72226]
  40b98e:	ficomp WORD PTR [ebp+0x9a9c71b]
  40b994:	inc    ebp
  40b995:	adc    DWORD PTR [edi-0x71],edi
  40b998:	in     al,0x70
  40b99a:	vpunpckhdq xmm3,xmm5,XMMWORD PTR [edx+0x2b37fe2e]
  40b9a2:	das    
  40b9a3:	fcmovnu st,st(3)
  40b9a5:	ss repnz xchg esi,eax
  40b9a8:	mov    ds:0x5272a9b5,al
  40b9ad:	xor    DWORD PTR [ecx+0x7c],0xffffffdb
  40b9b1:	ins    DWORD PTR es:[edi],dx
  40b9b2:	inc    edi
  40b9b3:	jge    0x40ba31
  40b9b5:	(bad)  
  40b9b6:	pop    edx
  40b9b7:	adc    ebx,DWORD PTR [ebx+0x47]
  40b9ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9bb:	push   eax
  40b9bc:	push   0x1b
  40b9be:	inc    eax
  40b9bf:	mov    al,ds:0x24db53f0
  40b9c4:	pushf  
  40b9c5:	jge    0x40b98c
  40b9c7:	pop    ebp
  40b9c8:	mov    ebx,0x2ebf1671
  40b9cd:	mov    cl,0xb7
  40b9cf:	or     eax,0x7bf33e04
  40b9d4:	das    
  40b9d5:	mov    eax,0xb74807ad
  40b9da:	repnz out dx,eax
  40b9dc:	jmp    0x5e6846bb
  40b9e1:	cmp    BYTE PTR [edi+eax*1],bl
  40b9e4:	cmp    ch,BYTE PTR [edx-0x63d7539d]
  40b9ea:	pop    edx
  40b9eb:	aaa    
  40b9ec:	jbe    0x40b9b2
  40b9ee:	in     al,0x4b
  40b9f0:	test   al,0xf7
  40b9f2:	(bad)  
  40b9f3:	ficomp WORD PTR [esi]
  40b9f5:	pop    esp
  40b9f6:	fst    QWORD PTR [ecx+0x51]
  40b9f9:	and    al,0xb4
  40b9fb:	call   0x976f:0x390effb7
  40ba02:	repz jo 0x40ba77
  40ba05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba06:	sbb    eax,0xccf649f1
  40ba0b:	adc    bh,ah
  40ba0d:	inc    ecx
  40ba0e:	and    DWORD PTR [ebx-0x65c696dd],esp
  40ba14:	fwait
  40ba15:	imul   esp,DWORD PTR [ebx],0x629a73d2
  40ba1b:	popa   
  40ba1c:	lahf   
  40ba1d:	loope  0x40ba37
  40ba1f:	mov    esp,0x949f4a48
  40ba24:	jmp    0xc206826f
  40ba29:	xor    al,0x32
  40ba2b:	xchg   ebp,eax
  40ba2c:	add    al,0xc7
  40ba2e:	push   0x960776fe
  40ba33:	and    dl,BYTE PTR [edx-0x48]
  40ba36:	or     BYTE PTR [ebp+0x3b],cl
  40ba39:	adc    BYTE PTR [ebx+0x61ca7748],0x5f
  40ba40:	(bad)  
  40ba41:	int3   
  40ba42:	xchg   DWORD PTR [ebp+0xc5d3bb5],eax
  40ba48:	lock sbb BYTE PTR [edi+0x5340b1e5],ch
  40ba4f:	lock cwde 
  40ba51:	fsub   QWORD PTR [esp+ebx*2-0x34]
  40ba55:	sbb    esp,edx
  40ba57:	loope  0x40ba55
  40ba59:	pushf  
  40ba5a:	add    cl,BYTE PTR [eax-0x5254916c]
  40ba60:	sbb    ch,BYTE PTR [ecx+eax*4+0x57bd8902]
  40ba67:	or     eax,0x2a8da709
  40ba6c:	bound  esp,QWORD PTR [ecx+0x53]
  40ba6f:	xor    edx,esp
  40ba71:	xor    BYTE PTR [edi+0x8],0xdb
  40ba75:	out    dx,al
  40ba76:	inc    esi
  40ba77:	or     eax,0x29efa044
  40ba7c:	add    ebx,DWORD PTR [edi+ecx*8]
  40ba7f:	mov    dl,0xe7
  40ba81:	xor    al,0xb7
  40ba83:	pop    ebx
  40ba84:	dec    ecx
  40ba85:	cld    
  40ba86:	sbb    BYTE PTR [ecx+0x28a8865e],dh
  40ba8c:	lods   eax,DWORD PTR ds:[esi]
  40ba8d:	arpl   WORD PTR ds:0x6b6fb15f,bp
  40ba93:	rcr    DWORD PTR [esi-0x68],cl
  40ba96:	dec    edx
  40ba97:	sbb    ah,BYTE PTR [ecx-0x4a]
  40ba9a:	xor    al,0x15
  40ba9c:	ret    
  40ba9d:	push   edx
  40ba9e:	test   BYTE PTR [ebx+0x2c934417],cl
  40baa4:	repnz xor bl,BYTE PTR [esi+0x45c7de19]
  40baab:	cld    
  40baac:	ret    0x61
  40baaf:	add    BYTE PTR [ebx+0x4d8bfc45],cl
  40bab5:	clc    
  40bab6:	add    eax,0x1ca5
  40babb:	or     eax,ecx
  40babd:	mov    ecx,DWORD PTR ds:0x422708
  40bac3:	lea    eax,[eax+ecx*1-0x7eef]
  40baca:	mov    DWORD PTR [ebp-0x5c],eax
  40bacd:	mov    DWORD PTR [ebp-0x4],0x8ea
  40bad4:	mov    DWORD PTR [ebp-0x8],0x5759
  40badb:	mov    eax,DWORD PTR [ebp-0x8]
  40bade:	mov    ecx,DWORD PTR [ebp-0x4]
  40bae1:	and    eax,0x27f6
  40bae6:	xor    eax,ecx
  40bae8:	mov    ecx,DWORD PTR ds:0x42283c
  40baee:	imul   eax,eax,0x18
  40baf1:	xor    eax,0x17970
  40baf6:	lea    eax,[ebp+eax*1-0x54]
  40bafa:	mov    DWORD PTR [eax],ecx
  40bafc:	jmp    0x40bf07
  40bb01:	retf   0xf4e7
  40bb04:	leave  
  40bb05:	hlt    
  40bb06:	fsincos 
  40bb08:	out    0xad,eax
  40bb0a:	and    dl,BYTE PTR [edx-0x62]
  40bb0d:	sub    al,0xb2
  40bb0f:	or     dl,BYTE PTR [edx-0x41414092]
  40bb15:	xchg   edx,eax
  40bb16:	les    edi,FWORD PTR [esi-0x7586042]
  40bb1c:	fcomp  QWORD PTR [ebp-0x6]
  40bb1f:	aas    
  40bb20:	xor    esp,DWORD PTR [ecx-0x13ead34]
  40bb26:	dec    ebx
  40bb27:	fs cmp al,0x69
  40bb2a:	outs   dx,DWORD PTR ds:[esi]
  40bb2b:	fs or  al,0x92
  40bb2e:	clc    
  40bb2f:	loope  0x40bb35
  40bb31:	add    esp,DWORD PTR [esi-0x7]
  40bb34:	rcr    DWORD PTR [ecx*1-0x5951f5cf],cl
  40bb3b:	xchg   ebp,eax
  40bb3c:	ja     0x40bb5e
  40bb3e:	fdivr  DWORD PTR [ebx]
  40bb40:	std    
  40bb41:	mov    ch,0xd5
  40bb43:	leave  
  40bb44:	imul   esp,ebp,0xfcfa5954
  40bb4a:	push   ebx
  40bb4b:	ins    BYTE PTR es:[edi],dx
  40bb4c:	fadd   st(2),st
  40bb4e:	leave  
  40bb4f:	pop    eax
  40bb50:	mov    ds:0x961aef4c,eax
  40bb55:	jmp    0xaad3:0x242ae16b
  40bb5c:	in     al,0x8a
  40bb5e:	pop    DWORD PTR [eax]
  40bb60:	leave  
  40bb61:	sbb    al,0x88
  40bb63:	add    ebp,0x87a98a5e
  40bb69:	jno    0x40bbc3
  40bb6b:	loop   0x40bbe7
  40bb6d:	popf   
  40bb6e:	and    bl,BYTE PTR [eax+edi*8-0x11]
  40bb72:	loopne 0x40bb2c
  40bb74:	mov    dh,0xfb
  40bb76:	or     dl,BYTE PTR [ebp+0x3a]
  40bb79:	push   ecx
  40bb7a:	sti    
  40bb7b:	push   eax
  40bb7c:	sbb    edi,edx
  40bb7e:	gs mov edx,0x5d1ac203
  40bb84:	mov    ecx,0xc56b81f
  40bb89:	push   eax
  40bb8a:	sti    
  40bb8b:	or     bh,BYTE PTR [edx-0x5e4c475b]
  40bb91:	neg    BYTE PTR [edx]
  40bb93:	push   edi
  40bb94:	and    ebp,ecx
  40bb96:	pop    ebx
  40bb97:	and    DWORD PTR [edx-0x6b],eax
  40bb9a:	cmp    eax,0xe39728a
  40bb9f:	mov    dl,0xaa
  40bba1:	lods   eax,DWORD PTR ds:[esi]
  40bba2:	cdq    
  40bba3:	pop    ss
  40bba4:	pop    es
  40bba5:	fbstp  TBYTE PTR [ebp-0x2f]
  40bba8:	dec    ecx
  40bba9:	mov    al,ah
  40bbab:	and    dl,BYTE PTR [edx+0x541e07fa]
  40bbb1:	call   0x17c:0x1855331e
  40bbb8:	rcr    DWORD PTR [eax-0x42],0x48
  40bbbc:	stos   BYTE PTR es:[edi],al
  40bbbd:	int3   
  40bbbe:	ds inc esp
  40bbc0:	xor    bl,dl
  40bbc2:	sub    DWORD PTR [esi+0x1e],edx
  40bbc5:	xor    ch,bh
  40bbc7:	mov    DWORD PTR [edi],0xac1c7552
  40bbcd:	stos   DWORD PTR es:[edi],eax
  40bbce:	es ret 
  40bbd0:	nop
  40bbd1:	mov    bh,ah
  40bbd3:	rcr    DWORD PTR [edx-0x49ef4d7],0xd5
  40bbda:	sub    dl,BYTE PTR [esi]
  40bbdc:	outs   dx,DWORD PTR ds:[esi]
  40bbdd:	cmp    eax,0xdc671ed9
  40bbe2:	and    al,0x30
  40bbe4:	and    eax,0xf470af72
  40bbe9:	imul   eax,DWORD PTR [ebp-0x7fae7888],0x14210e87
  40bbf3:	sub    ch,BYTE PTR [eax+0x46]
  40bbf6:	lea    ebp,[ebp-0x50]
  40bbf9:	jb     0x40bbe6
  40bbfb:	lahf   
  40bbfc:	test   cl,al
  40bbfe:	shl    esi,0x4b
  40bc01:	cmp    al,0x52
  40bc03:	rol    DWORD PTR [ecx+ebx*2+0x17],0x37
  40bc08:	jnp    0x40bc39
  40bc0a:	stos   DWORD PTR es:[edi],eax
  40bc0b:	mov    bh,0xb5
  40bc0d:	mov    BYTE PTR [eax+eax*4-0x15ae6e82],dl
  40bc14:	fcomp  DWORD PTR [eax]
  40bc16:	push   cs
  40bc17:	and    edi,ebx
  40bc19:	adc    BYTE PTR [ebx],al
  40bc1b:	mov    fs,edx
  40bc1d:	stos   DWORD PTR es:[edi],eax
  40bc1e:	shl    DWORD PTR [ecx],1
  40bc20:	inc    esp
  40bc21:	stos   DWORD PTR es:[edi],eax
  40bc22:	je     0x40bbb2
  40bc24:	(bad)  
  40bc25:	fnstsw WORD PTR [edi+eiz*8]
  40bc28:	sbb    ch,cl
  40bc2a:	retf   
  40bc2b:	shr    BYTE PTR ds:[edi-0x27],cl
  40bc2f:	adc    dl,BYTE PTR [ebp+0x6]
  40bc32:	inc    ebp
  40bc33:	nop
  40bc34:	into   
  40bc35:	xor    BYTE PTR [edx],cl
  40bc37:	dec    eax
  40bc38:	push   0xffffffee
  40bc3a:	mov    DWORD PTR [ebx],esi
  40bc3c:	pusha  
  40bc3d:	inc    ecx
  40bc3e:	popf   
  40bc3f:	xor    BYTE PTR [esi],cl
  40bc41:	fwait
  40bc42:	pop    eax
  40bc43:	jp     0x40bc60
  40bc45:	popa   
  40bc46:	jno    0x40bc4e
  40bc48:	jno    0x40bc34
  40bc4a:	pop    ebx
  40bc4b:	xchg   edx,eax
  40bc4c:	popa   
  40bc4d:	ja     0x40bbef
  40bc4f:	or     al,0x4e
  40bc51:	mov    dl,ch
  40bc53:	pop    ebx
  40bc54:	push   esp
  40bc55:	inc    edx
  40bc56:	test   DWORD PTR [esp+ebp*4+0x39],edx
  40bc5a:	add    BYTE PTR [eax+0x3bd074df],al
  40bc60:	cmc    
  40bc61:	es popa 
  40bc63:	(bad)  
  40bc64:	scas   eax,DWORD PTR es:[edi]
  40bc65:	add    BYTE PTR [ebx+0x69],dl
  40bc68:	aaa    
  40bc69:	dec    esi
  40bc6a:	pop    ebp
  40bc6b:	adc    DWORD PTR ds:0x2e306020,ebp
  40bc71:	sub    al,0x94
  40bc73:	popa   
  40bc74:	aad    0xb6
  40bc76:	sub    cl,BYTE PTR ds:0x718ae81
  40bc7c:	mov    dl,0xf4
  40bc7e:	mov    ds:0x1e869c7f,al
  40bc83:	(bad)  
  40bc84:	les    edx,FWORD PTR [esi+0x3876c577]
  40bc8a:	sar    DWORD PTR [eax+0xebe0f37],cl
  40bc90:	nop
  40bc91:	loopne 0x40bd12
  40bc93:	push   0xffffff80
  40bc95:	js     0x40bcaf
  40bc97:	push   esi
  40bc98:	es jo  0x40bc9d
  40bc9b:	cmp    eax,DWORD PTR [eax+0x588aaf79]
  40bca1:	scas   eax,DWORD PTR es:[edi]
  40bca2:	pop    ebp
  40bca3:	mul    BYTE PTR [edx-0x1a258b32]
  40bca9:	out    dx,eax
  40bcaa:	jbe    0x40bd1b
  40bcac:	outs   dx,BYTE PTR ds:[esi]
  40bcad:	push   ds
  40bcae:	rcr    esp,1
  40bcb0:	push   0x12bee951
  40bcb5:	fist   DWORD PTR [eax+0x5bdb2741]
  40bcbb:	sbb    ecx,DWORD PTR [ebp+0x50194235]
  40bcc1:	sub    BYTE PTR [esi+0x63],0xb4
  40bcc5:	fbstp  TBYTE PTR [eax]
  40bcc7:	out    0xa,eax
  40bcc9:	sbb    ebx,DWORD PTR [esi+0x2c]
  40bccc:	sahf   
  40bccd:	pop    es
  40bcce:	add    ecx,DWORD PTR [ecx]
  40bcd0:	test   dh,al
  40bcd2:	mov    ?,edx
  40bcd4:	add    esi,DWORD PTR [esi+0x7a7d5c6b]
  40bcda:	out    dx,al
  40bcdb:	dec    esp
  40bcdc:	fistp  WORD PTR [ecx]
  40bcde:	loopne 0x40bd57
  40bce0:	rcl    DWORD PTR [edi],0xbb
  40bce3:	mov    ds:0xaf8eadd0,al
  40bce8:	fs dec edx
  40bcea:	xchg   DWORD PTR [ebx],ecx
  40bcec:	leave  
  40bced:	pop    eax
  40bcee:	(bad)  
  40bcef:	imul   DWORD PTR [esi+0x78]
  40bcf2:	push   eax
  40bcf3:	or     eax,0xe8f983dc
  40bcf8:	cmc    
  40bcf9:	sub    edx,DWORD PTR [ecx-0x11]
  40bcfc:	bound  ebx,QWORD PTR [edx-0x4d19753f]
  40bd02:	xor    ch,0x1
  40bd05:	pusha  
  40bd06:	sub    al,0x7e
  40bd08:	inc    esp
  40bd09:	and    eax,0xc73af33d
  40bd0e:	cli    
  40bd0f:	popf   
  40bd10:	pop    ecx
  40bd11:	mov    WORD PTR [ebx],?
  40bd13:	push   0xb749f01c
  40bd18:	outs   dx,DWORD PTR ds:[esi]
  40bd19:	jl     0x40bcb9
  40bd1b:	rcr    DWORD PTR [edx+0x643dc46],0x24
  40bd22:	xor    eax,0x14e473c0
  40bd27:	dec    edi
  40bd28:	inc    eax
  40bd29:	push   edi
  40bd2a:	into   
  40bd2b:	add    al,BYTE PTR [ebx+0x7c46d53a]
  40bd31:	adc    al,0xe3
  40bd33:	(bad)  [eax+eiz*8-0x5c4a384c]
  40bd3a:	fld    TBYTE PTR [esi-0x360687c8]
  40bd40:	ret    
  40bd41:	test   al,0x92
  40bd43:	fld    DWORD PTR ds:0x2c411877
  40bd49:	jg     0x40bdab
  40bd4b:	dec    edx
  40bd4c:	sbb    eax,0xf171a6e4
  40bd51:	sbb    ebp,DWORD PTR [ebx]
  40bd53:	cli    
  40bd54:	mov    ebp,0x78e50fe8
  40bd59:	cmp    ch,bl
  40bd5b:	addr16 mov esp,0xbe4b99cb
  40bd61:	add    cl,0xbd
  40bd64:	xchg   ecx,eax
  40bd65:	(bad)  
  40bd66:	(bad)
  40bd69:	mov    esp,ss
  40bd6b:	ds sbb ch,ch
  40bd6e:	or     eax,0xd6e4b65b
  40bd73:	jae    0x40bdd5
  40bd75:	sbb    edx,DWORD PTR [eax-0x47c2bc88]
  40bd7b:	lods   al,BYTE PTR ds:[esi]
  40bd7c:	cmc    
  40bd7d:	xor    eax,DWORD PTR [ebx-0x6fea09c8]
  40bd83:	or     BYTE PTR [edi+0x1],bh
  40bd86:	cdq    
  40bd87:	jb     0x40bd4a
  40bd89:	adc    BYTE PTR [ebx-0x4f],bh
  40bd8c:	mov    WORD PTR [ebx+eiz*2],ds
  40bd8f:	inc    edi
  40bd90:	inc    edi
  40bd91:	test   DWORD PTR ds:0xe22b7e9,edx
  40bd97:	pusha  
  40bd98:	xchg   edx,eax
  40bd99:	out    dx,al
  40bd9a:	jns    0x40bd46
  40bd9c:	sbb    ah,ch
  40bd9e:	pop    ecx
  40bd9f:	lds    ecx,FWORD PTR [ecx-0x3b141651]
  40bda5:	repz or eax,0x8db0d130
  40bdab:	enter  0x41a1,0x1
  40bdaf:	mov    edi,0x61227bcc
  40bdb4:	cmp    ebx,DWORD PTR [edi+0x6696243b]
  40bdba:	pop    eax
  40bdbb:	clc    
  40bdbc:	sbb    al,0x19
  40bdbe:	cmc    
  40bdbf:	dec    ebp
  40bdc0:	inc    BYTE PTR [edx+ebp*8-0x3b4870c2]
  40bdc7:	sub    esp,DWORD PTR [edx]
  40bdc9:	sub    BYTE PTR [edi-0x3d1b391a],dl
  40bdcf:	test   BYTE PTR [ecx-0x3993ec96],bl
  40bdd5:	sti    
  40bdd6:	jl     0x40bd87
  40bdd8:	outs   dx,BYTE PTR ds:[esi]
  40bdd9:	dec    eax
  40bdda:	mov    edx,DWORD PTR [ecx-0x28]
  40bddd:	sbb    al,0xd0
  40bddf:	mov    cs,WORD PTR [edi+ebx*1-0x51]
  40bde3:	xchg   edi,eax
  40bde4:	(bad)  
  40bde5:	clc    
  40bde6:	cmp    al,0xf9
  40bde8:	push   0xffffff86
  40bdea:	lea    ecx,[edi+0x35]
  40bded:	mov    edi,DWORD PTR [eax-0x78]
  40bdf0:	mov    bl,0xc0
  40bdf2:	push   esp
  40bdf3:	out    0x2a,al
  40bdf5:	mov    esp,0x3a9fb68c
  40bdfa:	push   esi
  40bdfb:	push   esp
  40bdfc:	sub    al,0x4e
  40bdfe:	lods   eax,DWORD PTR ds:[esi]
  40bdff:	cmp    al,0x16
  40be01:	shr    dh,cl
  40be03:	lds    edi,FWORD PTR [edi-0x1bfc7df7]
  40be09:	push   esi
  40be0a:	sar    BYTE PTR [edx-0x60],cl
  40be0d:	cmc    
  40be0e:	sbb    DWORD PTR [edx],ebp
  40be10:	popf   
  40be11:	ja     0x40be34
  40be13:	mov    esp,0x78d900f7
  40be18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be19:	and    BYTE PTR [eax],al
  40be1b:	mov    bl,0x9b
  40be1d:	repz clc 
  40be1f:	xor    DWORD PTR [esi],edx
  40be21:	mov    ebp,0xafe68ec4
  40be26:	mov    al,ds:0xc272631e
  40be2b:	inc    edx
  40be2c:	push   esi
  40be2d:	push   0xffffffa4
  40be2f:	sbb    DWORD PTR [ebx+0x6b],ebx
  40be32:	js     0x40be2d
  40be34:	imul   DWORD PTR [eax+0x6f]
  40be37:	arpl   WORD PTR ds:0x1d9eb8e4,di
  40be3d:	sti    
  40be3e:	sbb    ebx,DWORD PTR ds:0xf55a287a
  40be44:	pop    ss
  40be45:	(bad)  
  40be46:	sbb    BYTE PTR [ebp-0x798a1838],dh
  40be4c:	(bad)  
  40be4d:	adc    DWORD PTR cs:[eax],ebp
  40be50:	icebp  
  40be51:	sub    dl,bl
  40be53:	mov    al,ds:0xb89fb1d9
  40be58:	fcom   DWORD PTR [edi+0x61]
  40be5b:	aam    0x6e
  40be5d:	out    0xe4,eax
  40be5f:	test   BYTE PTR [ecx],0xe4
  40be62:	push   cs
  40be63:	mov    ebx,ds
  40be65:	lea    eax,es:[eax-0x3759e14c]
  40be6c:	inc    ecx
  40be6d:	std    
  40be6e:	popa   
  40be6f:	repz adc eax,0x3d8a169f
  40be75:	mov    esp,DWORD PTR [ebx]
  40be77:	out    0x14,al
  40be79:	dec    edx
  40be7a:	addr16 out 0xe,eax
  40be7d:	pop    edx
  40be7e:	icebp  
  40be7f:	into   
  40be80:	ins    DWORD PTR es:[edi],dx
  40be81:	push   ebp
  40be82:	prefetch (bad)
  40be83:	or     eax,0x4dd343dc
  40be88:	mov    esp,0x9c6ffe97
  40be8d:	or     DWORD PTR [ebx-0x6d],0x20fd86f4
  40be94:	add    DWORD PTR [eax-0x4],0xffffffbe
  40be98:	pop    ss
  40be99:	stc    
  40be9a:	gs add ah,ah
  40be9d:	mov    ah,0xff
  40be9f:	mov    ebp,0x730e87ce
  40bea4:	inc    edx
  40bea5:	pop    eax
  40bea6:	int3   
  40bea7:	in     al,dx
  40bea8:	scas   al,BYTE PTR es:[edi]
  40bea9:	push   esp
  40beaa:	sub    al,0x59
  40beac:	jge    0x40be39
  40beae:	gs ds (bad) 
  40beb1:	loopne 0x40be62
  40beb3:	adc    dh,ah
  40beb5:	mov    esp,0x3d1de912
  40beba:	in     al,dx
  40bebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bebc:	aad    0xb3
  40bebe:	mov    dl,0x43
  40bec0:	clc    
  40bec1:	add    eax,0xff7a313b
  40bec6:	loope  0x40be54
  40bec8:	ss sub ah,bl
  40becb:	xor    DWORD PTR [edi-0x4c],edi
  40bece:	lds    ebx,FWORD PTR [ecx+edx*2-0x47]
  40bed2:	sub    al,0xc3
  40bed4:	mov    ebp,0x5740a70
  40bed9:	call   0x9f1e24ab
  40bede:	add    ah,bh
  40bee0:	jp     0x40befa
  40bee2:	xor    al,0xa9
  40bee4:	(bad)  
  40bee5:	dec    ecx
  40bee6:	push   ecx
  40bee7:	inc    ebp
  40bee8:	outs   dx,BYTE PTR ds:[esi]
  40bee9:	sub    BYTE PTR [edi+0x19b49111],ch
  40beef:	pop    edx
  40bef0:	pusha  
  40bef1:	mov    eax,ds:0xb71b1145
  40bef6:	xchg   ebp,eax
  40bef7:	jnp    0x40be7c
  40bef9:	xor    DWORD PTR [eax],ecx
  40befb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40befc:	jns    0x40bf65
  40befe:	ror    BYTE PTR [edx+0x5ea3b67e],0x94
  40bf05:	sbb    bh,BYTE PTR [ebx]
  40bf07:	mov    DWORD PTR [ebp-0x4],0x7584
  40bf0e:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40bf15:	mov    eax,DWORD PTR [ebp-0x8]
  40bf18:	xor    edx,edx
  40bf1a:	push   0x3
  40bf1c:	pop    ecx
  40bf1d:	div    ecx
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf22:	xor    edx,edx
  40bf24:	push   0x2
  40bf26:	add    eax,0x14d3
  40bf2b:	and    eax,ecx
  40bf2d:	mov    ecx,0x6404
  40bf32:	sub    ecx,eax
  40bf34:	mov    DWORD PTR [ebp-0x74],ecx
  40bf37:	mov    DWORD PTR [ebp-0xc],0x13b5
  40bf3e:	mov    DWORD PTR [ebp-0x8],0x2e54
  40bf45:	mov    DWORD PTR [ebp-0x4],0x2f11
  40bf4c:	mov    eax,DWORD PTR [ebp-0x8]
  40bf4f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf52:	jmp    0x40c35d
  40bf57:	std    
  40bf58:	jno    0x40bf52
  40bf5a:	dec    ecx
  40bf5b:	mov    esp,0x32b9b44c
  40bf60:	rcr    DWORD PTR [esi-0x3aa53670],1
  40bf66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf67:	inc    edx
  40bf68:	(bad)  
  40bf69:	mov    esi,0xbec492be
  40bf6e:	mov    esi,0x93e80828
  40bf73:	das    
  40bf74:	(bad)  
  40bf75:	adc    DWORD PTR [eax],ebx
  40bf77:	out    dx,eax
  40bf78:	xchg   ebp,eax
  40bf79:	sbb    BYTE PTR [edx+0x284ee247],0x8d
  40bf80:	cmp    esi,ebp
  40bf82:	mov    edx,0xec43ca1f
  40bf87:	xchg   ebp,eax
  40bf88:	inc    esp
  40bf89:	jne    0x40bfca
  40bf8b:	adc    eax,0x7750f400
  40bf90:	pop    ebp
  40bf91:	push   0xffffff95
  40bf93:	mov    al,ds:0x96663300
  40bf98:	xor    eax,eax
  40bf9a:	add    al,BYTE PTR [edi-0x58]
  40bf9d:	mov    edx,0x2f949041
  40bfa2:	add    BYTE PTR [ecx],0x64
  40bfa5:	sbb    esp,ebx
  40bfa7:	cld    
  40bfa8:	test   eax,0x3149c85f
  40bfad:	bound  esi,QWORD PTR [eax]
  40bfaf:	leave  
  40bfb0:	cmp    edx,DWORD PTR [ebx+0x63]
  40bfb3:	jns    0x40bfb6
  40bfb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfb6:	aad    0x32
  40bfb8:	add    eax,edi
  40bfba:	cmp    DWORD PTR [ecx+0x59effaa6],ebp
  40bfc0:	lods   eax,DWORD PTR ds:[esi]
  40bfc1:	cmp    al,0x3e
  40bfc3:	and    eax,0x30833266
  40bfc8:	inc    DWORD PTR [esi]
  40bfca:	sub    al,0xb3
  40bfcc:	repz mov ch,0xd1
  40bfcf:	push   0xffffff94
  40bfd1:	mov    al,0x85
  40bfd3:	sub    eax,0x3f56af05
  40bfd8:	into   
  40bfd9:	imul   edi,DWORD PTR [edx-0x24],0xffffffff
  40bfdd:	jae    0x40c02c
  40bfdf:	(bad)  
  40bfe1:	out    0x0,eax
  40bfe3:	xchg   edx,eax
  40bfe4:	mov    esp,0xe5fbc9e1
  40bfe9:	lods   al,BYTE PTR ds:[esi]
  40bfea:	push   ecx
  40bfeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfed:	dec    esp
  40bfee:	fbld   TBYTE PTR [edx-0x3d4fec6b]
  40bff4:	xor    esi,DWORD PTR [edx-0x3]
  40bff7:	stc    
  40bff8:	test   DWORD PTR [ecx-0x2a],ebp
  40bffb:	xlat   BYTE PTR ds:[ebx]
  40bffc:	icebp  
  40bffd:	pop    eax
  40bffe:	mov    esp,0x3325b962
  40c003:	stos   DWORD PTR es:[edi],eax
  40c004:	push   ss
  40c005:	pop    ds
  40c006:	jnp    0x40bfa1
  40c008:	mov    WORD PTR [edx-0x1e99644f],ds
  40c00e:	sti    
  40c00f:	fcomp  DWORD PTR [ecx]
  40c011:	rcl    esi,1
  40c013:	mov    esi,DWORD PTR [ebx+ecx*2-0x73]
  40c017:	hlt    
  40c018:	arpl   si,ax
  40c01a:	lods   al,BYTE PTR ds:[esi]
  40c01b:	and    al,0x9c
  40c01d:	data16 out dx,al
  40c01f:	mov    ch,BYTE PTR [eax]
  40c021:	jns    0x40bfa8
  40c023:	in     eax,dx
  40c024:	mov    edx,0x6a10747c
  40c029:	sbb    al,0x61
  40c02b:	dec    esp
  40c02c:	mov    eax,0xb77d32ba
  40c031:	scas   al,BYTE PTR es:[edi]
  40c032:	xor    esp,DWORD PTR [ebp-0x1904732b]
  40c038:	cmp    DWORD PTR ds:0xc9933148,eax
  40c03e:	dec    edx
  40c03f:	jecxz  0x40c035
  40c041:	pop    edi
  40c042:	in     al,dx
  40c043:	adc    eax,0x860f1552
  40c048:	cs pop es
  40c04a:	pextrw eax,(bad),0xc5
  40c04c:	test   DWORD PTR [ebx],edi
  40c04e:	and    esi,ecx
  40c050:	fadd   QWORD PTR [ebx]
  40c052:	outs   dx,DWORD PTR ds:[esi]
  40c053:	xor    ah,BYTE PTR [ebp-0x34]
  40c056:	pop    ds
  40c057:	mov    ecx,0x8ef81c56
  40c05c:	aaa    
  40c05d:	dec    ecx
  40c05e:	fstp   TBYTE PTR [eax+edi*1-0x39]
  40c062:	shl    ch,1
  40c064:	add    esi,DWORD PTR [esp+eax*1+0x46]
  40c068:	mov    ebx,0x480e5631
  40c06d:	addr16 clc 
  40c06f:	fwait
  40c070:	cs and eax,esp
  40c073:	or     DWORD PTR [ebx-0x31],ecx
  40c076:	jae    0x40bffb
  40c078:	adc    eax,0xcf746770
  40c07d:	aad    0x88
  40c07f:	xchg   DWORD PTR [ebx*8+0x526dca9d],ebx
  40c086:	scas   eax,DWORD PTR es:[edi]
  40c087:	aad    0x1e
  40c089:	xchg   ebx,eax
  40c08a:	add    ecx,DWORD PTR [esi]
  40c08c:	imul   BYTE PTR [edx]
  40c08e:	push   ecx
  40c08f:	jmp    0x5b222531
  40c094:	bswap  eax
  40c096:	mov    WORD PTR [ebx],gs
  40c098:	imul   esp,DWORD PTR [edi+0x7b],0x87538509
  40c09f:	sub    BYTE PTR [edx],bl
  40c0a1:	mov    dh,0xa2
  40c0a4:	iret   
  40c0a5:	lods   eax,DWORD PTR ds:[esi]
  40c0a6:	aaa    
  40c0a7:	cmp    BYTE PTR [edi+0x7a3087f],0xe3
  40c0ae:	and    dl,BYTE PTR [ebx+0x6c318cce]
  40c0b4:	mov    al,bh
  40c0b6:	adc    ch,bh
  40c0b8:	jp     0x40c11a
  40c0ba:	inc    ah
  40c0bc:	mov    bh,0xd5
  40c0be:	mov    dl,0x52
  40c0c0:	adc    ch,ch
  40c0c2:	mov    esp,0xce901c41
  40c0c7:	aam    0xfd
  40c0c9:	outs   dx,DWORD PTR ds:[esi]
  40c0ca:	xchg   edx,eax
  40c0cb:	jecxz  0x40c0f6
  40c0cd:	jbe    0x40c101
  40c0cf:	sbb    dh,ah
  40c0d1:	loop   0x40c0ba
  40c0d3:	pop    ebx
  40c0d4:	mov    dh,0x55
  40c0d6:	retf   
  40c0d7:	test   DWORD PTR [ebx],esp
  40c0d9:	push   ebx
  40c0da:	and    DWORD PTR [edi+ecx*8+0x31],edx
  40c0de:	adc    BYTE PTR [ebp+0x799d9921],ch
  40c0e4:	mov    esi,0xa9059656
  40c0e9:	std    
  40c0ea:	leave  
  40c0eb:	inc    ecx
  40c0ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0ed:	outs   dx,DWORD PTR ds:[esi]
  40c0ee:	(bad)  
  40c0ef:	arpl   cx,di
  40c0f1:	sub    DWORD PTR [ebx-0x7f],esp
  40c0f4:	mov    ah,0xc8
  40c0f6:	xchg   ebp,eax
  40c0f7:	jns    0x40c0e5
  40c0f9:	popa   
  40c0fa:	stos   DWORD PTR es:[edi],eax
  40c0fb:	and    ah,BYTE PTR [ebx-0x5c33efaa]
  40c101:	sahf   
  40c102:	or     al,0xce
  40c104:	inc    esi
  40c105:	pop    edx
  40c106:	pop    edx
  40c107:	ret    
  40c108:	out    dx,eax
  40c109:	mov    edx,0x56a1cbdf
  40c10e:	(bad)  
  40c10f:	xchg   esp,eax
  40c110:	jle    0x40c0f4
  40c112:	pop    ebp
  40c113:	adc    esi,DWORD PTR [ebp-0x4d3be7ef]
  40c119:	shl    BYTE PTR [ecx-0x51],0x10
  40c11d:	cmp    al,0x5f
  40c11f:	ffreep st(6)
  40c121:	dec    edx
  40c122:	(bad)  
  40c123:	scas   al,BYTE PTR es:[edi]
  40c124:	or     ecx,DWORD PTR [esi]
  40c126:	xor    eax,0xb327049e
  40c12b:	ins    BYTE PTR es:[edi],dx
  40c12c:	pushf  
  40c12d:	inc    esi
  40c12e:	pop    ss
  40c12f:	mul    DWORD PTR [ebx+0x49c7da73]
  40c135:	pop    ebx
  40c136:	jmp    0xd96f:0x74dfc959
  40c13d:	out    dx,al
  40c13e:	pop    ss
  40c13f:	inc    ebp
  40c140:	pop    ss
  40c141:	mov    WORD PTR [ebx+0x17f1055b],cs
  40c147:	pushf  
  40c148:	xchg   BYTE PTR [edi-0x27],ch
  40c14b:	sti    
  40c14c:	nop
  40c14d:	nop
  40c14e:	push   ds
  40c14f:	sar    DWORD PTR [edx],1
  40c151:	mov    bl,0x9e
  40c153:	fdivr  st(0),st
  40c155:	shr    esp,cl
  40c157:	out    0x33,al
  40c159:	adc    DWORD PTR [ebx-0x5b],edi
  40c15c:	fs stc 
  40c15e:	push   edx
  40c15f:	dec    esp
  40c160:	mov    eax,ds:0x58bf56cf
  40c165:	jmp    0x5956:0x24814e4a
  40c16c:	mov    al,ds:0xb6a0ab08
  40c171:	mov    cl,bh
  40c173:	dec    edi
  40c174:	ror    DWORD PTR ds:0x4b87277a,1
  40c17a:	add    eax,esp
  40c17c:	mov    al,BYTE PTR [edx-0x53]
  40c17f:	push   edi
  40c180:	jns    0x40c11d
  40c182:	daa    
  40c183:	shl    dl,1
  40c185:	sar    BYTE PTR ds:0x9ed713f8,cl
  40c18b:	dec    esi
  40c18c:	icebp  
  40c18d:	jmp    0xac23d0ac
  40c192:	lods   eax,DWORD PTR ds:[esi]
  40c193:	dec    esi
  40c194:	jmp    0xb694b0e6
  40c199:	push   edx
  40c19a:	or     dh,BYTE PTR [ecx]
  40c19c:	dec    edx
  40c19d:	inc    eax
  40c19e:	cmp    edx,eax
  40c1a0:	setns  BYTE PTR [ecx+0x1b75f490]
  40c1a7:	fisttp WORD PTR [ebp+0x9]
  40c1aa:	icebp  
  40c1ab:	xchg   bl,ch
  40c1ad:	and    BYTE PTR [esi+0x58],0x5
  40c1b1:	xor    bh,BYTE PTR [edi+0x219b88d7]
  40c1b7:	xchg   ebp,eax
  40c1b8:	lock pop es
  40c1ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1bb:	mov    eax,ds:0xa889db2a
  40c1c0:	gs retf 
  40c1c2:	push   0xf6e17e
  40c1c7:	and    DWORD PTR [edi],edi
  40c1c9:	daa    
  40c1ca:	mov    esi,0xb1ecab85
  40c1cf:	dec    ebx
  40c1d0:	xor    al,0x8
  40c1d2:	popf   
  40c1d3:	in     eax,0x5a
  40c1d5:	in     eax,0x99
  40c1d7:	jne    0x40c187
  40c1d9:	jecxz  0x40c258
  40c1db:	mov    dl,0xd1
  40c1dd:	ds pop edi
  40c1df:	cmp    al,0xaa
  40c1e1:	les    edx,FWORD PTR [ebx]
  40c1e3:	les    ebp,FWORD PTR [edi+0x61f0bab]
  40c1e9:	pop    esp
  40c1ea:	mov    ds:0xb55bd38d,eax
  40c1ef:	and    esi,DWORD PTR [edi-0x18]
  40c1f2:	test   BYTE PTR [ecx],cl
  40c1f4:	data16 es cmp dh,bl
  40c1f8:	fldenv [eax]
  40c1fa:	in     al,0x76
  40c1fc:	in     eax,0xf9
  40c1fe:	lods   al,BYTE PTR ds:[esi]
  40c1ff:	stos   BYTE PTR es:[edi],al
  40c200:	outs   dx,BYTE PTR ds:[esi]
  40c201:	mov    bh,0xbb
  40c203:	sub    cl,dh
  40c205:	imul   eax,DWORD PTR [edi],0x37
  40c208:	push   cs
  40c209:	daa    
  40c20a:	push   0xb
  40c20c:	fwait
  40c20d:	add    eax,0x500a9ada
  40c212:	sub    BYTE PTR [edi-0x13],cl
  40c215:	fmul   st,st(2)
  40c217:	inc    edx
  40c218:	test   al,0x2e
  40c21a:	mov    esi,0xd525ce9d
  40c21f:	mov    esi,0xf2c8adcd
  40c224:	mov    edx,DWORD PTR [edx]
  40c226:	dec    ecx
  40c227:	loope  0x40c253
  40c229:	jo     0x40c222
  40c22b:	or     DWORD PTR [ecx+0x55],ecx
  40c22e:	adc    eax,0x16c97ad6
  40c233:	stos   BYTE PTR es:[edi],al
  40c234:	mov    ds:0xab9e7914,al
  40c239:	(bad)  
  40c23a:	cdq    
  40c23b:	inc    esi
  40c23c:	ret    
  40c23d:	sbb    BYTE PTR [ebx-0x65],bh
  40c240:	pop    edx
  40c241:	dec    edx
  40c242:	inc    esi
  40c243:	scas   al,BYTE PTR es:[edi]
  40c244:	add    eax,DWORD PTR cs:[ebx+edx*4-0x6ad3e765]
  40c24c:	mov    bh,0xfc
  40c24e:	or     DWORD PTR [esi-0x15],esp
  40c251:	enter  0x9cbc,0x49
  40c255:	adc    BYTE PTR [ebp-0x73],0xfe
  40c259:	popf   
  40c25a:	lods   eax,DWORD PTR ds:[esi]
  40c25b:	fld    DWORD PTR [eax]
  40c25d:	adc    al,0x13
  40c25f:	fcmove st,st(3)
  40c261:	xchg   DWORD PTR [ebp+ebp*8-0x2c],ebp
  40c265:	nop
  40c266:	popa   
  40c267:	fcom   DWORD PTR [edi-0x43]
  40c26a:	inc    ebp
  40c26b:	mov    ds:0xe74d1ae9,eax
  40c270:	lods   al,BYTE PTR ds:[esi]
  40c271:	dec    ecx
  40c272:	mov    eax,0x269d4922
  40c277:	mov    edx,0x7965426c
  40c27c:	jbe    0x40c253
  40c27e:	cmc    
  40c27f:	xor    BYTE PTR [edx+0xf],bh
  40c282:	outs   dx,DWORD PTR ds:[esi]
  40c283:	jno    0x40c25c
  40c285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c286:	pushf  
  40c287:	push   ds
  40c288:	rol    BYTE PTR [ebx],1
  40c28a:	dec    ebp
  40c28b:	div    DWORD PTR [edx+0x28]
  40c28e:	jne    0x40c296
  40c290:	and    eax,0x3a6a6f77
  40c295:	(bad)  
  40c296:	test   DWORD PTR [ecx+0x6c8c34c3],0xc9568314
  40c2a0:	or     BYTE PTR [ebp+eax*4-0x30420b8a],ah
  40c2a7:	pop    esi
  40c2a8:	rol    BYTE PTR [ebp-0x2e955db7],1
  40c2ae:	dec    ebx
  40c2af:	and    BYTE PTR [esi],cl
  40c2b1:	(bad)  
  40c2b2:	je     0x40c2fc
  40c2b4:	out    dx,al
  40c2b5:	inc    esi
  40c2b6:	lods   eax,DWORD PTR ds:[esi]
  40c2b7:	sbb    al,0x77
  40c2b9:	aaa    
  40c2ba:	or     eax,0x1cbdb79
  40c2bf:	ror    al,0x4c
  40c2c2:	aaa    
  40c2c3:	sub    al,0xff
  40c2c5:	jge    0x40c293
  40c2c7:	mov    bh,0x2f
  40c2c9:	sub    dl,BYTE PTR [ebp-0x52]
  40c2cc:	sti    
  40c2cd:	fld    TBYTE PTR [ebp+0x6b7f6338]
  40c2d3:	push   ss
  40c2d4:	add    BYTE PTR ds:0x55a90a9,cl
  40c2da:	mov    DWORD PTR [eax+0x12],ebp
  40c2dd:	(bad)  
  40c2de:	jnp    0x40c26b
  40c2e0:	mov    ebx,0x810d6e74
  40c2e5:	imul   ebp,DWORD PTR [eax+0x5fa3edaf],0xb64870f0
  40c2ef:	push   ebp
  40c2f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2f1:	and    eax,0x577eed9d
  40c2f6:	ret    0x4fa6
  40c2f9:	inc    eax
  40c2fa:	out    0x5d,eax
  40c2fc:	mov    esi,0x9dfb4281
  40c301:	loopne 0x40c2ef
  40c303:	js     0x40c384
  40c305:	jl     0x40c2c5
  40c307:	test   edi,0xc8bd2a76
  40c30d:	lock (bad) 
  40c30f:	int    0x7c
  40c311:	imul   ecx,ebx,0xffffff8c
  40c314:	push   ss
  40c315:	pop    ebx
  40c316:	cmp    ebx,DWORD PTR [edi+0x3185e103]
  40c31c:	(bad)  
  40c31d:	(bad)  
  40c31e:	xor    ebp,DWORD PTR ds:0xb3281d10
  40c324:	aad    0x94
  40c326:	mov    al,BYTE PTR [ebp+0x3ee5fc76]
  40c32c:	mov    ch,0x7e
  40c32e:	mov    ds:0xb32b275c,al
  40c333:	cs cld 
  40c335:	add    edx,DWORD PTR [edx+0x5c]
  40c338:	jp     0x40c2d6
  40c33a:	(bad)
  40c33d:	add    ah,cl
  40c33f:	data16 daa 
  40c341:	add    DWORD PTR [edx-0x5ddd26fd],0x63
  40c348:	scas   eax,DWORD PTR es:[edi]
  40c349:	stos   DWORD PTR es:[edi],eax
  40c34a:	lods   al,BYTE PTR ds:[esi]
  40c34b:	loope  0x40c318
  40c34d:	mov    es,WORD PTR ds:0x1201fb59
  40c353:	xor    al,0x9
  40c355:	jo     0x40c355
  40c357:	sti    
  40c358:	xchg   esp,eax
  40c359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c35a:	daa    
  40c35b:	rcl    BYTE PTR [edi+0x1401848d],0x9a
  40c362:	(bad)  
  40c363:	(bad)  
  40c364:	mov    ecx,0x5e208
  40c369:	div    ecx
  40c36b:	mov    ecx,DWORD PTR [ebp-0xc]
  40c36e:	lea    eax,[eax+ecx*1+0x40c7]
  40c375:	mov    DWORD PTR [ebp-0x24],eax
  40c378:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40c37f:	mov    DWORD PTR [ebp-0x8],0x16ac
  40c386:	mov    DWORD PTR [ebp-0xc],0x2185
  40c38d:	mov    eax,DWORD PTR [ebp-0xc]
  40c390:	mov    ecx,DWORD PTR [ebp-0x8]
  40c393:	xor    eax,0x1f75
  40c398:	sub    eax,ecx
  40c39a:	mov    ecx,DWORD PTR [ebp-0x4]
  40c39d:	sub    eax,ecx
  40c39f:	xor    eax,0xc3e
  40c3a4:	mov    DWORD PTR [ebp-0x58],eax
  40c3a7:	mov    DWORD PTR [ebp-0x14],0x66bd
  40c3ae:	pop    ecx
  40c3af:	mov    DWORD PTR [ebp-0x4],ecx
  40c3b2:	mov    DWORD PTR [ebp-0x8],0x3374
  40c3b9:	mov    DWORD PTR [ebp-0xc],0x3c31
  40c3c0:	mov    eax,DWORD PTR [ebp-0xc]
  40c3c3:	mov    edx,DWORD PTR [ebp-0x8]
  40c3c6:	mov    esi,DWORD PTR [ebp-0x4]
  40c3c9:	xor    eax,edx
  40c3cb:	xor    edx,edx
  40c3cd:	div    esi
  40c3cf:	mov    edx,DWORD PTR [ebp-0x14]
  40c3d2:	and    eax,edx
  40c3d4:	sub    eax,0x680
  40c3d9:	mov    DWORD PTR [ebp-0x24],eax
  40c3dc:	mov    DWORD PTR [ebp-0x30],0x5f68
  40c3e3:	mov    DWORD PTR [ebp-0x2c],0x398b
  40c3ea:	mov    DWORD PTR [ebp-0x4],0x5034
  40c3f1:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40c3f8:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40c3ff:	mov    DWORD PTR [ebp-0x14],0xee2
  40c406:	mov    eax,DWORD PTR [ebp-0x14]
  40c409:	add    eax,DWORD PTR [ebp-0xc]
  40c40c:	mov    edx,DWORD PTR [ebp-0x8]
  40c40f:	xor    eax,edx
  40c411:	mov    edx,DWORD PTR [ebp-0x4]
  40c414:	or     eax,edx
  40c416:	mov    edx,DWORD PTR [ebp-0x2c]
  40c419:	or     eax,edx
  40c41b:	mov    edx,DWORD PTR [ebp-0x30]
  40c41e:	and    eax,edx
  40c420:	mov    edx,0x5b68
  40c425:	sub    edx,eax
  40c427:	mov    DWORD PTR [ebp-0x24],edx
  40c42a:	mov    DWORD PTR [ebp-0x48],0x3308
  40c431:	mov    DWORD PTR [ebp-0x44],0x59a4
  40c438:	mov    DWORD PTR [ebp-0x38],0x2775
  40c43f:	mov    DWORD PTR [ebp-0x34],0x4da
  40c446:	mov    DWORD PTR [ebp-0x40],0x49d8
  40c44d:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40c454:	mov    DWORD PTR [ebp-0x28],0x338c
  40c45b:	mov    DWORD PTR [ebp-0x24],0x68ed
  40c462:	jmp    0x40c86d
  40c467:	inc    esi
  40c468:	outs   dx,DWORD PTR ds:[esi]
  40c469:	mov    ebx,0x8abcbc70
  40c46e:	ja     0x40c492
  40c470:	or     DWORD PTR [esi+0x28d929cf],ebp
  40c476:	rcl    DWORD PTR [esi],1
  40c478:	iret   
  40c479:	mov    esi,0xbec492be
  40c47e:	mov    esi,0xdb5e0ca5
  40c483:	in     eax,dx
  40c484:	aas    
  40c485:	call   0x5b8cc906
  40c48a:	xor    esi,ebp
  40c48c:	ret    
  40c48d:	and    al,0x44
  40c48f:	imul   ebx,ebx,0x4cbc116
  40c495:	pop    edx
  40c496:	scas   al,BYTE PTR es:[edi]
  40c497:	adc    eax,esp
  40c499:	js     0x40c43a
  40c49b:	cmp    DWORD PTR [edx-0x31],esi
  40c49e:	and    ebp,0xffffffdc
  40c4a1:	jnp    0x40c49c
  40c4a3:	dec    esp
  40c4a4:	ret    0xb674
  40c4a7:	add    eax,0x44c860d
  40c4ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4ad:	xlat   BYTE PTR ds:[ebx]
  40c4ae:	and    DWORD PTR ds:0x520acb77,0xfffffff3
  40c4b5:	jecxz  0x40c485
  40c4b7:	xchg   esi,eax
  40c4b8:	push   0x2f7a9d5b
  40c4bd:	cli    
  40c4be:	mov    eax,0xdf9aad49
  40c4c3:	cmp    al,0xfe
  40c4c5:	jg     0x40c4f2
  40c4c7:	out    0x17,al
  40c4c9:	mov    ?,WORD PTR [eax+0x2437a067]
  40c4cf:	add    al,0x23
  40c4d1:	pop    edi
  40c4d2:	push   ecx
  40c4d3:	sub    eax,0xcce2caf9
  40c4d8:	shl    BYTE PTR [edx+esi*1],cl
  40c4db:	sub    esi,DWORD PTR [ecx+0x21]
  40c4de:	pop    ebp
  40c4df:	sub    bh,dh
  40c4e1:	clc    
  40c4e2:	loop   0x40c46f
  40c4e4:	mov    eax,0xe7a13c91
  40c4e9:	push   esp
  40c4ea:	in     eax,dx
  40c4eb:	cmp    dh,cl
  40c4ed:	daa    
  40c4ee:	jg     0x40c53b
  40c4f0:	dec    ecx
  40c4f1:	push   es
  40c4f2:	mov    al,0x2
  40c4f4:	or     eax,0x268a7780
  40c4f9:	in     eax,dx
  40c4fa:	fidiv  WORD PTR ds:0x21a5c666
  40c500:	in     al,0x26
  40c502:	add    ah,BYTE PTR [edi+0x5c]
  40c505:	sub    eax,DWORD PTR [ebx-0x10d49431]
  40c50b:	cmp    eax,0x318c8bed
  40c510:	icebp  
  40c511:	mov    al,0xbb
  40c513:	sbb    cl,bh
  40c515:	cmp    DWORD PTR [edi+edx*4],ebx
  40c518:	lods   eax,DWORD PTR ds:[esi]
  40c519:	jae    0x40c586
  40c51b:	ret    0xde43
  40c51e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c51f:	cdq    
  40c520:	ins    DWORD PTR es:[edi],dx
  40c521:	out    dx,eax
  40c522:	ror    DWORD PTR [esi],1
  40c524:	dec    ecx
  40c525:	push   ss
  40c526:	pop    ebp
  40c527:	minps  xmm2,XMMWORD PTR [edi-0x527f67be]
  40c52e:	pop    esi
  40c52f:	out    dx,eax
  40c530:	xor    edi,esp
  40c532:	add    edx,ecx
  40c534:	js     0x40c575
  40c536:	jns    0x40c502
  40c538:	and    dl,BYTE PTR [edi+edi*2+0x1583035]
  40c53f:	stc    
  40c540:	and    bl,BYTE PTR [ebp-0x7a]
  40c543:	jl     0x40c542
  40c545:	pop    ss
  40c546:	push   0x73
  40c548:	lahf   
  40c549:	mov    ebx,0x569dec21
  40c54e:	jb     0x40c4f1
  40c550:	adc    eax,edx
  40c552:	sbb    BYTE PTR [eax-0x65],0xa1
  40c556:	mov    WORD PTR [ecx-0x7bc668ce],cs
  40c55c:	lock xor al,0x4a
  40c55f:	xor    DWORD PTR [edx],0xfffffffd
  40c562:	jns    0x40c572
  40c564:	(bad)  
  40c565:	(bad)
  40c569:	cmp    esi,DWORD PTR [ebp+0x5d]
  40c56c:	out    dx,al
  40c56d:	lds    eax,FWORD PTR [ebx-0x58]
  40c570:	pop    eax
  40c571:	cmp    dh,BYTE PTR [edi]
  40c573:	stc    
  40c574:	in     eax,0xf0
  40c576:	xor    eax,0x2b643360
  40c57b:	cld    
  40c57c:	push   ds
  40c57d:	aam    0x7a
  40c57f:	loop   0x40c5f2
  40c581:	push   edx
  40c582:	xchg   ecx,eax
  40c583:	cmp    BYTE PTR [ecx+ebp*2],ch
  40c586:	cmc    
  40c587:	jmp    0x8dfd:0x8f632964
  40c58e:	adc    DWORD PTR [ecx],0x692aa1db
  40c594:	es scas al,BYTE PTR es:[edi]
  40c596:	inc    ebp
  40c597:	call   0x6da7:0x6fc57a87
  40c59e:	sbb    al,0xae
  40c5a0:	xchg   BYTE PTR [edx+ebp*8-0x64],dh
  40c5a4:	mov    dl,0x9d
  40c5a6:	repz int3 
  40c5a8:	mov    edx,DWORD PTR [edi+edi*2-0x8]
  40c5ac:	call   FWORD PTR [eax+eiz*4-0x51]
  40c5b0:	add    DWORD PTR [ecx],edi
  40c5b2:	adc    BYTE PTR [ecx],al
  40c5b4:	push   edx
  40c5b5:	jl     0x40c57e
  40c5b7:	repnz or BYTE PTR [esi-0x2c0519ef],ah
  40c5be:	jne    0x40c576
  40c5c0:	aam    0x27
  40c5c2:	sbb    eax,0xe8c433e
  40c5c7:	aam    0xba
  40c5c9:	inc    esp
  40c5ca:	clc    
  40c5cb:	dec    esi
  40c5cc:	push   0xffffffda
  40c5ce:	mov    edx,0x17a9aadf
  40c5d3:	sub    eax,0x964e5e2
  40c5d8:	dec    esp
  40c5d9:	pushf  
  40c5da:	mul    BYTE PTR [ebp-0x5e]
  40c5dd:	mov    al,ds:0x1eeb7c85
  40c5e2:	out    0xa0,al
  40c5e4:	loopne 0x40c57b
  40c5e6:	push   esi
  40c5e7:	jns    0x40c605
  40c5e9:	or     eax,0xd67fc1ad
  40c5ee:	mov    WORD PTR [eax-0x39fde8c5],?
  40c5f4:	xor    ebx,eax
  40c5f6:	cmp    al,0x3a
  40c5f8:	rcr    DWORD PTR [ecx],cl
  40c5fa:	and    eax,0xd3709671
  40c5ff:	test   BYTE PTR [eax],0x1c
  40c602:	jp     0x40c5aa
  40c604:	ret    0x31a4
  40c607:	inc    esp
  40c608:	inc    ecx
  40c609:	lock xlat BYTE PTR ds:[ebx]
  40c60b:	ins    BYTE PTR es:[edi],dx
  40c60c:	retf   
  40c60d:	out    0xf5,al
  40c60f:	sub    DWORD PTR [edi-0x36],edx
  40c612:	mov    ds:0x315547d2,eax
  40c617:	ret    0x40f2
  40c61a:	call   0x849:0xfe0797dc
  40c621:	test   DWORD PTR [edx+0x30de57d3],ebp
  40c627:	imul   BYTE PTR [ebp-0x3a8d2cf3]
  40c62d:	sbb    al,0x6d
  40c630:	call   0xf4fc:0x27cb1811
  40c637:	outs   dx,BYTE PTR ds:[esi]
  40c638:	jmp    0x40c690
  40c63a:	cs pop ecx
  40c63c:	pusha  
  40c63d:	add    esi,DWORD PTR [ecx+0x73]
  40c640:	in     al,dx
  40c641:	and    eax,0xb1090c07
  40c646:	jmp    0x2f1:0x7aab5f83
  40c64d:	shl    dh,cl
  40c64f:	int3   
  40c650:	out    0xa5,eax
  40c652:	dec    ebx
  40c653:	pop    es
  40c654:	leave  
  40c655:	ja     0x40c6cc
  40c657:	push   esi
  40c658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c659:	and    BYTE PTR [eax+0x413898bd],dl
  40c65f:	push   ss
  40c660:	add    al,0x6d
  40c663:	or     DWORD PTR ds:0x9a5a4133,ebp
  40c669:	push   0x2a32f884
  40c66e:	pop    ecx
  40c66f:	outs   dx,BYTE PTR ds:[esi]
  40c670:	xchg   ecx,eax
  40c671:	jnp    0x40c657
  40c673:	push   ebp
  40c674:	test   BYTE PTR ds:[ebp-0x13],0xc7
  40c679:	push   ecx
  40c67a:	xchg   ebp,eax
  40c67b:	push   ebx
  40c67c:	adc    esp,DWORD PTR gs:[eax+0x63]
  40c680:	lods   al,BYTE PTR ds:[esi]
  40c681:	ins    DWORD PTR es:[edi],dx
  40c682:	and    ch,dl
  40c684:	pop    esp
  40c685:	push   edi
  40c686:	imul   ebx,esi,0xf0904c
  40c68c:	cmp    al,0x70
  40c68e:	stos   DWORD PTR es:[edi],eax
  40c68f:	test   DWORD PTR [eax],eax
  40c691:	push   esp
  40c692:	push   cs
  40c693:	cld    
  40c694:	fs inc esi
  40c696:	sahf   
  40c697:	lock into 
  40c699:	sub    esi,edi
  40c69b:	push   es
  40c69c:	dec    ebx
  40c69d:	(bad)
  40c6a0:	fwait
  40c6a1:	xor    edi,eax
  40c6a3:	mov    al,ds:0x6c8a1e6b
  40c6a8:	dec    ebx
  40c6a9:	sahf   
  40c6aa:	ret    
  40c6ab:	xor    esi,DWORD PTR [edi-0x7c]
  40c6ae:	dec    BYTE PTR [ebx-0x2f]
  40c6b1:	arpl   WORD PTR [ebp+0x21175f0e],dx
  40c6b7:	cmp    DWORD PTR [eax],edi
  40c6b9:	nop
  40c6ba:	and    ebp,DWORD PTR [eax-0x6]
  40c6bd:	ret    0xc40b
  40c6c0:	addr16 dec edx
  40c6c2:	mov    eax,0x96b29878
  40c6c7:	cmc    
  40c6c8:	fstp   DWORD PTR gs:[edx]
  40c6cb:	mul    DWORD PTR [edx-0x2e]
  40c6ce:	imul   ecx,ebx,0x9
  40c6d1:	pop    edi
  40c6d2:	push   ebp
  40c6d3:	xlat   BYTE PTR ds:[ebx]
  40c6d4:	push   es
  40c6d5:	mov    bl,0x8d
  40c6d7:	into   
  40c6d8:	fucom  st(0)
  40c6da:	jge    0x40c736
  40c6dc:	cmp    eax,0x236a077d
  40c6e1:	fisubr WORD PTR [edx+0x7ed0101b]
  40c6e7:	xor    bh,dh
  40c6e9:	push   0x13
  40c6eb:	sbb    bl,BYTE PTR [ebp-0x2c929605]
  40c6f1:	dec    ecx
  40c6f2:	js     0x40c69d
  40c6f4:	xchg   edi,eax
  40c6f5:	push   ecx
  40c6f6:	xchg   DWORD PTR [edi+0xa637775],eax
  40c6fc:	cmc    
  40c6fd:	add    bh,BYTE PTR [eax-0x6a1a8fd2]
  40c703:	cli    
  40c704:	repz sbb eax,0x76bde644
  40c70a:	push   0xffffffa2
  40c70c:	rcr    DWORD PTR [edx],cl
  40c70e:	fcomi  st,st(0)
  40c710:	pop    esi
  40c711:	inc    edx
  40c712:	xor    DWORD PTR [ecx-0x47],ebp
  40c715:	int3   
  40c716:	dec    BYTE PTR [ebx-0xe61eaf9]
  40c71c:	xchg   ebp,eax
  40c71d:	mov    bh,0x0
  40c71f:	jmp    0xa0a2:0x3c445994
  40c726:	sbb    BYTE PTR [ebx+0xf1b58c2],dl
  40c72c:	pop    eax
  40c72d:	cmp    DWORD PTR [ebx],esi
  40c72f:	mov    ecx,esi
  40c731:	adc    al,0x7
  40c733:	mov    ds:0xbaade714,al
  40c738:	push   0x21e63f8f
  40c73d:	mov    ebx,0x6b3a0838
  40c742:	xchg   ebx,eax
  40c743:	outs   dx,DWORD PTR ds:[esi]
  40c744:	adc    al,bl
  40c746:	lea    esi,[ecx+0x5723c56a]
  40c74c:	addr16 pushf 
  40c74e:	add    BYTE PTR [ebx-0x7f],cl
  40c751:	aad    0x6
  40c753:	jo     0x40c7b0
  40c755:	jo     0x40c741
  40c757:	inc    ebx
  40c758:	dec    esp
  40c759:	inc    esp
  40c75a:	inc    edi
  40c75b:	(bad)  [ecx]
  40c75d:	inc    edx
  40c75e:	dec    esp
  40c75f:	dec    edi
  40c760:	inc    ecx
  40c761:	push   ebp
  40c762:	mov    al,ds:0x9e136770
  40c767:	aam    0x9e
  40c769:	cdq    
  40c76a:	(bad)  
  40c76c:	shl    DWORD PTR [ecx+edi*8-0x32],0xab
  40c771:	sahf   
  40c772:	dec    edx
  40c773:	push   esi
  40c774:	pusha  
  40c775:	mov    bl,0x6f
  40c777:	into   
  40c778:	add    DWORD PTR [ecx+0xa],0x52
  40c77c:	mov    dl,0xd7
  40c77e:	or     BYTE PTR [edx+0x23a7df89],dh
  40c784:	push   cs
  40c785:	dec    esi
  40c787:	jecxz  0x40c754
  40c789:	cmc    
  40c78a:	sbb    BYTE PTR [esi],ch
  40c78c:	rcr    BYTE PTR [ebp+0x2],0x84
  40c790:	imul   edi,DWORD PTR [ecx],0x9f7360d4
  40c796:	in     al,0xbc
  40c798:	mov    esp,0x2b555e22
  40c79d:	pop    ebp
  40c79e:	fnstenv [eax+0x600803ac]
  40c7a4:	jl     0x40c757
  40c7a6:	ja     0x40c7fb
  40c7a8:	pop    edi
  40c7a9:	xchg   esp,eax
  40c7aa:	lods   eax,DWORD PTR ds:[esi]
  40c7ab:	sub    ecx,DWORD PTR [ebx+ebx*2]
  40c7ae:	aam    0xb
  40c7b0:	mov    ebp,0xc7a85818
  40c7b5:	(bad)
  40c7b8:	inc    eax
  40c7b9:	xchg   ebp,eax
  40c7ba:	stos   DWORD PTR es:[edi],eax
  40c7bb:	add    esp,DWORD PTR ds:0x44a05001
  40c7c2:	xor    esp,DWORD PTR [eax-0x1275d53e]
  40c7c8:	aam    0x90
  40c7ca:	fimul  DWORD PTR [esi+ecx*4]
  40c7cd:	sub    eax,0x9fbe8c75
  40c7d2:	stc    
  40c7d3:	aaa    
  40c7d4:	retf   0x6548
  40c7d7:	sti    
  40c7d8:	jno    0x40c792
  40c7da:	jp     0x40c7cc
  40c7dc:	jae    0x40c828
  40c7de:	inc    edx
  40c7df:	mov    dh,0x87
  40c7e1:	jae    0x40c77d
  40c7e3:	or     DWORD PTR [esi+0x20],0xffffffc3
  40c7e7:	gs jae 0x40c828
  40c7ea:	jmp    0x40c7e3
  40c7ec:	lods   eax,DWORD PTR ds:[esi]
  40c7ed:	in     eax,0xaa
  40c7ef:	(bad)  
  40c7f0:	xor    DWORD PTR [eax+ebp*1+0x26c5d98c],esi
  40c7f7:	push   es
  40c7f8:	mov    ds,WORD PTR [eax+0x5787517d]
  40c7fe:	mov    dh,0x65
  40c800:	fisubr DWORD PTR [ebp+0x3201e2f6]
  40c806:	xchg   ebp,eax
  40c807:	jbe    0x40c868
  40c809:	dec    ebp
  40c80a:	jge    0x40c7c8
  40c80c:	xchg   edi,eax
  40c80d:	cmp    esi,DWORD PTR [ecx]
  40c80f:	sahf   
  40c810:	int    0xea
  40c812:	das    
  40c813:	xor    al,0x9e
  40c815:	mov    fs,WORD PTR fs:[edi]
  40c818:	jmp    0x413faa10
  40c81d:	popf   
  40c81e:	sub    bh,BYTE PTR [edi-0x798586fb]
  40c824:	inc    ecx
  40c825:	dec    ebx
  40c826:	push   es
  40c827:	fdivr  QWORD PTR [esi+0x3d3250fb]
  40c82d:	jne    0x40c875
  40c82f:	xor    DWORD PTR [ecx],ebx
  40c831:	push   esi
  40c832:	mov    bl,0x18
  40c834:	xor    dh,BYTE PTR [ecx-0x49437fbf]
  40c83a:	cmp    edi,eax
  40c83c:	test   BYTE PTR [edi+0x60],bl
  40c83f:	adc    ebx,DWORD PTR [edx+0x237f88d0]
  40c845:	dec    eax
  40c846:	lds    ebx,FWORD PTR ds:0x1b9947be
  40c84c:	das    
  40c84d:	or     DWORD PTR [ecx-0x38374304],ebx
  40c853:	adc    eax,0x61a64c10
  40c858:	std    
  40c859:	cld    
  40c85a:	mov    DWORD PTR [ecx+0x18b48f45],0x521287d6
  40c864:	lea    eax,[eax+ebx*2+0xc]
  40c868:	dec    ebx
  40c869:	repz push ebx
  40c86b:	outs   dx,BYTE PTR ds:[esi]
  40c86c:	mov    DWORD PTR gs:[ebp-0x20],0x2a7b
  40c874:	mov    DWORD PTR [ebp-0x1c],0x718f
  40c87b:	mov    eax,DWORD PTR [ebp-0x20]
  40c87e:	jmp    0x40cc89
  40c883:	(bad)  
  40c884:	fisubr DWORD PTR [edx+0x36]
  40c887:	mov    esp,0x55fc93b6
  40c88c:	or     eax,0xb530e3ac
  40c891:	sub    al,0xd1
  40c893:	jmp    0x92ff876f
  40c898:	les    edi,FWORD PTR [esi+0x74974dbe]
  40c89e:	fistp  DWORD PTR [ebx+0x4d]
  40c8a1:	dec    ecx
  40c8a2:	std    
  40c8a3:	inc    eax
  40c8a4:	lods   eax,DWORD PTR ds:[esi]
  40c8a5:	jl     0x40c879
  40c8a7:	xchg   DWORD PTR [edi+0x6aac1eea],esi
  40c8ad:	outs   dx,DWORD PTR ds:[esi]
  40c8ae:	cmp    DWORD PTR [edx],eax
  40c8b0:	std    
  40c8b1:	adc    eax,ecx
  40c8b3:	mov    bh,0xb8
  40c8b5:	and    edi,DWORD PTR [ebx+0x5b]
  40c8b8:	sub    DWORD PTR [ecx+0x37deecdc],esi
  40c8be:	ins    DWORD PTR es:[edi],dx
  40c8bf:	paddd  mm5,QWORD PTR [edi-0x2f1e9be2]
  40c8c6:	ror    DWORD PTR [ebx+eax*8+0x4f],0xa6
  40c8cb:	arpl   cx,si
  40c8cd:	imul   esp,ebp,0x52
  40c8d0:	sbb    bl,al
  40c8d2:	adc    DWORD PTR [edi],edi
  40c8d4:	dec    eax
  40c8d5:	mov    BYTE PTR [edx-0x2c],bl
  40c8d8:	les    ebx,FWORD PTR [ebx+eiz*1]
  40c8db:	xchg   esp,eax
  40c8dc:	(bad)  
  40c8de:	mov    bl,0x85
  40c8e0:	push   ds
  40c8e1:	mov    ds:0x209d1e88,al
  40c8e6:	push   0xfffffffb
  40c8e8:	adc    bl,bl
  40c8ea:	or     ebp,DWORD PTR [ecx+0x3993b7d7]
  40c8f0:	outs   dx,BYTE PTR ds:[esi]
  40c8f1:	pop    edx
  40c8f2:	mov    ecx,0x4a1afd7c
  40c8f7:	mov    bh,0xa1
  40c8f9:	jg     0x40c96e
  40c8fb:	cmp    ebx,edx
  40c8fd:	push   ebx
  40c8fe:	int3   
  40c8ff:	daa    
  40c900:	xchg   edx,eax
  40c901:	mov    bl,0xcd
  40c903:	push   cs
  40c904:	mov    eax,ds:0xc57a9a12
  40c909:	scas   eax,DWORD PTR es:[edi]
  40c90a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c90b:	outs   dx,DWORD PTR ds:[esi]
  40c90c:	adc    DWORD PTR [edi],0xffffffe1
  40c90f:	mov    eax,0x7c5c1a3b
  40c914:	in     eax,dx
  40c915:	ja     0x40c8f0
  40c917:	adc    ebp,DWORD PTR [edi-0x70]
  40c91a:	and    bl,BYTE PTR [edi-0x61]
  40c91d:	icebp  
  40c91e:	and    BYTE PTR es:[ebx],0xc3
  40c922:	mov    ecx,0x52dcf640
  40c927:	in     eax,dx
  40c928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c929:	cld    
  40c92a:	in     al,dx
  40c92b:	rcr    BYTE PTR [edi-0x4fda2f9e],cl
  40c931:	mov    esi,0x2ea056a6
  40c936:	sbb    BYTE PTR [ecx],bl
  40c938:	test   eax,0x13409670
  40c93d:	leave  
  40c93e:	cmp    BYTE PTR [ecx+edx*8-0x6d],0x45
  40c943:	test   BYTE PTR [edi+0x38],dh
  40c946:	mov    ?,WORD PTR [edi-0x37]
  40c949:	adc    bl,cl
  40c94b:	add    cl,al
  40c94d:	retf   0xd826
  40c950:	adc    bl,BYTE PTR [ebp-0x1]
  40c953:	cmp    DWORD PTR [eax],eax
  40c955:	lods   al,BYTE PTR ds:[esi]
  40c956:	xchg   esi,eax
  40c957:	dec    eax
  40c958:	loop   0x40c9bd
  40c95a:	pop    ss
  40c95b:	cmp    BYTE PTR [edx-0x2a],cl
  40c95e:	jle    0x40c960
  40c960:	call   0x843b:0x38ee12d5
  40c967:	push   esp
  40c968:	iret   
  40c969:	or     BYTE PTR [ebp+0x6],cl
  40c96c:	add    eax,0x9aa8b773
  40c971:	mov    bh,0x92
  40c973:	outs   dx,BYTE PTR ds:[esi]
  40c974:	arpl   cx,bx
  40c976:	inc    eax
  40c977:	mov    eax,0xfe7fae67
  40c97c:	fbld   TBYTE PTR [esi+0x6f978e09]
  40c982:	pop    esi
  40c983:	xchg   DWORD PTR [eax],esp
  40c985:	inc    esp
  40c986:	bound  ecx,QWORD PTR [ecx-0x6607919]
  40c98c:	jnp    0x40c9ae
  40c98e:	mov    ah,0x65
  40c990:	inc    edi
  40c991:	mov    eax,0xb521b39f
  40c996:	sub    eax,0xccf7b945
  40c99b:	cli    
  40c99c:	pop    esp
  40c99d:	adc    eax,0x2fffdde6
  40c9a2:	hlt    
  40c9a3:	inc    edx
  40c9a4:	or     bh,BYTE PTR [ecx+0xbf77131]
  40c9aa:	call   0x4bc0eab3
  40c9af:	inc    esi
  40c9b0:	cmp    edx,DWORD PTR [edi+eiz*8-0x4c]
  40c9b4:	pop    ecx
  40c9b5:	sub    eax,DWORD PTR [ecx+ebp*4]
  40c9b8:	mov    al,ds:0x72024196
  40c9bd:	pop    ebx
  40c9be:	cmp    DWORD PTR [eax-0x69],esp
  40c9c1:	and    DWORD PTR [edi+edi*2],0x90a3b955
  40c9c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9c9:	xchg   edi,eax
  40c9ca:	sbb    DWORD PTR [ebp-0xc],esi
  40c9cd:	imul   ebx,DWORD PTR [eax-0x5b4d8376],0xcf68ac8a
  40c9d7:	sbb    eax,0xacd43aed
  40c9dc:	lock push eax
  40c9de:	stos   BYTE PTR es:[edi],al
  40c9df:	retf   0x3815
  40c9e2:	cli    
  40c9e3:	leave  
  40c9e4:	in     al,0x40
  40c9e6:	sti    
  40c9e7:	icebp  
  40c9e8:	sbb    DWORD PTR [edx],0x613ecf8a
  40c9ee:	and    eax,0xef3df18
  40c9f3:	fmul   QWORD PTR [ebx]
  40c9f5:	xor    al,0xdd
  40c9f7:	mov    ebx,0xad7a7e15
  40c9fc:	cdq    
  40c9fd:	fwait
  40c9fe:	push   ecx
  40c9ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca00:	cmp    eax,0x63b626b7
  40ca05:	inc    edi
  40ca06:	adc    al,0xa9
  40ca08:	add    al,0x42
  40ca0a:	adc    eax,0x1382605d
  40ca0f:	jecxz  0x40ca17
  40ca11:	jno    0x40c995
  40ca13:	or     edx,ebx
  40ca15:	int    0x81
  40ca17:	mov    ah,ah
  40ca19:	sahf   
  40ca1a:	jae    0x40ca05
  40ca1c:	mov    dl,0x8c
  40ca1e:	inc    ecx
  40ca1f:	dec    ecx
  40ca20:	repnz xor DWORD PTR [esi+eax*4+0x48b64fdb],0x38
  40ca29:	sub    al,0xf
  40ca2b:	mov    al,BYTE PTR [edi+0x5a28c2f2]
  40ca31:	jno    0x40c9eb
  40ca33:	push   cs
  40ca34:	adc    cl,ch
  40ca36:	cmp    DWORD PTR [ebp-0x59e3e61a],ebp
  40ca3c:	ins    DWORD PTR es:[edi],dx
  40ca3d:	and    eax,0x7a19707a
  40ca42:	sti    
  40ca43:	pop    es
  40ca44:	(bad)  
  40ca45:	xor    esi,DWORD PTR [eax]
  40ca47:	in     al,0xb1
  40ca49:	retf   
  40ca4a:	out    0x83,eax
  40ca4c:	jns    0x40cac5
  40ca4e:	sub    al,0x8e
  40ca50:	rol    ah,1
  40ca52:	imul   edx,DWORD PTR [esi+0x32],0xe8f94722
  40ca59:	sub    BYTE PTR [esi],ch
  40ca5b:	fs call 0xae72:0xb7b07ff1
  40ca63:	mov    al,BYTE PTR [eax+0x32]
  40ca66:	jle    0x40caa0
  40ca68:	imul   ebx,DWORD PTR [ecx-0x6d],0x2d
  40ca6c:	cmp    DWORD PTR ds:0x25bedadf,ebx
  40ca72:	push   ebp
  40ca73:	xchg   ecx,eax
  40ca74:	mov    dh,0x8d
  40ca76:	pop    ss
  40ca77:	adc    eax,0x7768a219
  40ca7c:	jg     0x40ca90
  40ca7e:	xchg   edx,eax
  40ca7f:	arpl   WORD PTR [edx+0x72],di
  40ca82:	xor    al,0x6d
  40ca84:	jecxz  0x40ca9a
  40ca86:	push   eax
  40ca87:	lods   eax,DWORD PTR ds:[esi]
  40ca88:	dec    eax
  40ca89:	fdivrp st(6),st
  40ca8b:	push   esp
  40ca8c:	in     eax,0x1e
  40ca8e:	jns    0x40caf7
  40ca90:	sti    
  40ca91:	mov    ecx,0x3039685a
  40ca96:	pop    esi
  40ca97:	or     DWORD PTR [edx+0x3530c99e],edx
  40ca9d:	pop    ds
  40ca9e:	or     DWORD PTR [edi-0x6f],esp
  40caa1:	test   eax,0xa00f486e
  40caa6:	loop   0x40ca8f
  40caa8:	jg     0x40ca55
  40caaa:	aas    
  40caab:	dec    edx
  40caac:	push   0x8
  40caae:	mov    ebp,0x77dffcd0
  40cab3:	jp     0x40caa9
  40cab5:	add    al,0x3
  40cab7:	mov    bh,0x33
  40cab9:	out    dx,eax
  40caba:	dec    ebp
  40cabb:	dec    ecx
  40cabc:	add    ecx,DWORD PTR [esi+0x7f]
  40cabf:	shl    esp,1
  40cac1:	lods   eax,DWORD PTR ds:[esi]
  40cac2:	xor    eax,0x742d5b29
  40cac7:	(bad)  
  40cac8:	jns    0x40cb22
  40caca:	xchg   ecx,eax
  40cacb:	into   
  40cacc:	mov    al,ds:0x5e84915d
  40cad1:	in     al,dx
  40cad2:	ins    BYTE PTR es:[edi],dx
  40cad3:	pop    esi
  40cad4:	mov    eax,0x3118bdb6
  40cad9:	sub    eax,0x92ad5aed
  40cade:	pop    ebx
  40cadf:	loopne 0x40cb10
  40cae1:	mov    ah,0x6f
  40cae3:	xlat   BYTE PTR ds:[ebx]
  40cae4:	push   ebx
  40cae5:	into   
  40cae6:	cmc    
  40cae7:	adc    ecx,esi
  40cae9:	pop    edi
  40caea:	pop    ebp
  40caeb:	and    al,0x83
  40caed:	dec    ebx
  40caee:	or     al,0x40
  40caf0:	mov    WORD PTR [ecx+0x56ae5107],ds
  40caf6:	out    0xc9,al
  40caf8:	sbb    DWORD PTR [ebp-0x28],eax
  40cafb:	cmp    DWORD PTR [edx-0x5f],0xffffffef
  40caff:	pop    edx
  40cb00:	hlt    
  40cb01:	cmp    bh,BYTE PTR [edx-0x5b]
  40cb04:	push   esi
  40cb05:	ret    0x286e
  40cb08:	push   esi
  40cb09:	mov    gs,WORD PTR ds:0xc27132c3
  40cb0f:	xor    BYTE PTR [ebx+0x40a9c2e7],dh
  40cb15:	ror    al,0x8c
  40cb18:	mov    ds:0xa8d1d900,al
  40cb1d:	fnstsw WORD PTR [eax]
  40cb1f:	jge    0x40cb20
  40cb21:	ja     0x40cac6
  40cb23:	gs (bad) 
  40cb25:	fnstsw WORD PTR [ecx+edi*2+0x42a63dfa]
  40cb2c:	cwde   
  40cb2d:	dec    esp
  40cb2e:	xchg   esp,eax
  40cb2f:	jae    0x40cb29
  40cb31:	mov    esi,0xec8964e0
  40cb36:	ffreep st(5)
  40cb38:	add    BYTE PTR ds:0x5af516e1,cl
  40cb3e:	inc    esi
  40cb3f:	das    
  40cb40:	mov    ds:0x9ed9905a,eax
  40cb45:	push   edi
  40cb46:	pop    esp
  40cb47:	inc    esi
  40cb48:	push   ecx
  40cb49:	sub    ebp,DWORD PTR [ebp-0x43]
  40cb4c:	pop    edi
  40cb4d:	pop    ecx
  40cb4e:	shl    BYTE PTR [edi+eiz*8-0x23],cl
  40cb52:	arpl   WORD PTR [edx+0x106a0501],si
  40cb58:	pusha  
  40cb59:	cmp    al,0xa5
  40cb5b:	(bad)  
  40cb5c:	cs mov dh,0xdb
  40cb5f:	mov    esp,0xac7e60ab
  40cb64:	add    bh,BYTE PTR [esi]
  40cb66:	retf   0xcf04
  40cb69:	inc    esi
  40cb6a:	inc    eax
  40cb6b:	jae    0x40cb90
  40cb6d:	or     DWORD PTR [eax+0x42],esi
  40cb70:	call   FWORD PTR [edi]
  40cb72:	call   0x810ba7f
  40cb77:	cwde   
  40cb78:	loop   0x40cb6b
  40cb7a:	fsubr  st(4),st
  40cb7c:	inc    edi
  40cb7d:	xor    BYTE PTR [esi],cl
  40cb7f:	ror    DWORD PTR [esi],0xd0
  40cb82:	mov    dh,0x2c
  40cb84:	push   esi
  40cb85:	cmp    DWORD PTR [esp+esi*8],esp
  40cb88:	xchg   esp,eax
  40cb89:	jo     0x40cbd5
  40cb8b:	(bad)  
  40cb8c:	lods   al,BYTE PTR ds:[esi]
  40cb8d:	in     eax,dx
  40cb8e:	ret    
  40cb8f:	mov    dl,0xee
  40cb91:	cmp    eax,0xbdccb431
  40cb96:	sahf   
  40cb97:	xchg   ebp,eax
  40cb98:	je     0x40cb70
  40cb9a:	add    al,BYTE PTR [ecx+0x6ea694a1]
  40cba0:	das    
  40cba1:	dec    esp
  40cba2:	sbb    al,0x25
  40cba4:	pop    edi
  40cba5:	ds inc edx
  40cba7:	inc    eax
  40cba8:	push   eax
  40cba9:	inc    edi
  40cbaa:	push   esi
  40cbab:	(bad)  
  40cbac:	mov    bh,0xfe
  40cbae:	pop    esp
  40cbaf:	test   eax,0xff79a4ec
  40cbb4:	(bad)  
  40cbb5:	jnp    0x40cbea
  40cbb7:	in     eax,dx
  40cbb8:	pop    ecx
  40cbb9:	lea    ecx,[ebx+0x6d]
  40cbbc:	add    DWORD PTR [ebx-0x28e8ce50],ebx
  40cbc2:	cmp    DWORD PTR [ebx-0x7f],ebp
  40cbc5:	bound  esp,QWORD PTR [edi-0x54465195]
  40cbcb:	sub    dh,ah
  40cbcd:	xor    ebx,DWORD PTR [eax-0x722d8d51]
  40cbd3:	or     bl,al
  40cbd5:	or     BYTE PTR [edx-0x61ddade0],cl
  40cbdb:	sub    DWORD PTR [ecx],esi
  40cbdd:	cmp    ebp,DWORD PTR [ebx]
  40cbdf:	aad    0xf1
  40cbe1:	jecxz  0x40cc44
  40cbe3:	jle    0x40cc1b
  40cbe5:	cs (bad) 
  40cbe7:	retf   0x1cb3
  40cbea:	shl    dl,0x46
  40cbed:	pop    ecx
  40cbee:	aad    0x80
  40cbf0:	xchg   esp,eax
  40cbf1:	retf   0x520d
  40cbf4:	mov    es,WORD PTR [esi+0x5e43d720]
  40cbfa:	cli    
  40cbfb:	xor    ah,BYTE PTR [esi*2+0x7f664e00]
  40cc02:	xlat   BYTE PTR ds:[ebx]
  40cc03:	lahf   
  40cc04:	(bad)  
  40cc05:	test   al,0x32
  40cc07:	mov    ah,0x64
  40cc09:	aas    
  40cc0a:	into   
  40cc0b:	out    0x1e,eax
  40cc0d:	push   esi
  40cc0e:	out    dx,eax
  40cc0f:	sub    BYTE PTR [ecx],cl
  40cc11:	jmp    0x6c7a:0x36496546
  40cc18:	sub    eax,0xa20a1b2a
  40cc1d:	rcr    bh,0xe1
  40cc20:	cmp    edx,ecx
  40cc22:	daa    
  40cc23:	and    al,0x37
  40cc25:	rcl    BYTE PTR [esi],1
  40cc27:	add    al,ch
  40cc29:	mov    ebx,0x6688624b
  40cc2e:	dec    ecx
  40cc2f:	adc    BYTE PTR [ecx],dl
  40cc31:	mov    bl,0x51
  40cc33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc34:	rcl    BYTE PTR [ecx],cl
  40cc36:	pushf  
  40cc37:	(bad)  ds:0xb7a66a2d
  40cc3d:	out    0x19,al
  40cc3f:	and    al,0x33
  40cc41:	mov    BYTE PTR [eax],dl
  40cc43:	add    edi,DWORD PTR [esi+0xa149dc3]
  40cc49:	inc    ebx
  40cc4a:	xor    ax,0xe05b
  40cc4e:	sahf   
  40cc4f:	test   DWORD PTR [ecx-0x27],ecx
  40cc52:	xor    eax,0xb6605e98
  40cc57:	in     al,dx
  40cc58:	mov    bh,0x32
  40cc5a:	mov    cl,0x39
  40cc5c:	pop    ebx
  40cc5d:	lods   eax,DWORD PTR ds:[esi]
  40cc5e:	mov    ebp,0x412510e3
  40cc63:	cld    
  40cc64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc65:	jb     0x40cc8e
  40cc67:	dec    esi
  40cc68:	sub    dl,BYTE PTR [edx-0x15]
  40cc6b:	add    ah,BYTE PTR [ecx+0x707c8355]
  40cc71:	and    dh,BYTE PTR [eax+edx*4+0x7d]
  40cc75:	or     eax,0x98035c8e
  40cc7a:	xchg   esi,eax
  40cc7b:	jg     0x40cc9d
  40cc7d:	pop    eax
  40cc7e:	jl     0x40cc55
  40cc80:	jbe    0x40ccb4
  40cc82:	pop    ss
  40cc83:	pop    ebx
  40cc84:	fnstenv [ebx]
  40cc86:	dec    esi
  40cc87:	adc    DWORD PTR [ebx-0x741baa75],ebp
  40cc8d:	jne    0x40cc67
  40cc8f:	mov    ebx,DWORD PTR [ebp-0x24]
  40cc92:	add    eax,0xffffc948
  40cc97:	adc    edx,0xffff87b0
  40cc9d:	or     eax,esi
  40cc9f:	mov    esi,DWORD PTR [ebp-0x40]
  40cca2:	or     eax,esi
  40cca4:	or     edx,ebx
  40cca6:	mov    ebx,DWORD PTR [ebp-0x3c]
  40cca9:	mov    esi,DWORD PTR [ebp-0x38]
  40ccac:	or     edx,ebx
  40ccae:	mov    ebx,DWORD PTR [ebp-0x34]
  40ccb1:	sub    eax,esi
  40ccb3:	mov    esi,DWORD PTR [ebp-0x48]
  40ccb6:	sbb    edx,ebx
  40ccb8:	mov    ebx,DWORD PTR [ebp-0x44]
  40ccbb:	or     eax,esi
  40ccbd:	or     edx,ebx
  40ccbf:	add    eax,0x89b
  40ccc4:	jmp    0x40d0cf
  40ccc9:	popf   
  40ccca:	call   0xbabc:0x1b7c1940
  40ccd1:	pop    eax
  40ccd2:	out    0xe9,eax
  40ccd4:	jecxz  0x40ccaa
  40ccd6:	adc    BYTE PTR [ebx+eiz*8-0x41412043],ch
  40ccdd:	xchg   edx,eax
  40ccde:	les    edi,FWORD PTR [esi+0x6e33bdbe]
  40cce4:	xchg   edx,eax
  40cce5:	ficom  DWORD PTR [edi-0x1d]
  40cce8:	mov    eax,0x8d9947b6
  40cced:	imul   edx,DWORD PTR [esi-0x59],0x32
  40ccf1:	cmp    al,0xb1
  40ccf3:	sti    
  40ccf4:	or     eax,0xef95b78d
  40ccf9:	xchg   BYTE PTR [edx+0x78],ch
  40ccfc:	ss clc 
  40ccfe:	push   ebx
  40ccff:	pop    ss
  40cd00:	scas   eax,DWORD PTR es:[edi]
  40cd01:	dec    eax
  40cd02:	das    
  40cd03:	adc    BYTE PTR [eax+0x77],ah
  40cd06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd07:	ins    BYTE PTR es:[edi],dx
  40cd08:	pop    edx
  40cd09:	cs dec esp
  40cd0b:	push   edi
  40cd0c:	mov    bl,0x3
  40cd0e:	outs   dx,BYTE PTR ds:[esi]
  40cd0f:	push   edx
  40cd10:	cmp    bh,BYTE PTR [edi]
  40cd12:	ds jns 0x40cd10
  40cd15:	and    esp,DWORD PTR [ebx-0x7c4d6f6b]
  40cd1b:	jns    0x40cd5f
  40cd1d:	mov    dl,0x55
  40cd1f:	lds    ebp,FWORD PTR [edi-0x3d1d1f55]
  40cd25:	jge    0x40cd91
  40cd27:	sbb    BYTE PTR [eax+0x7640dd27],dh
  40cd2d:	out    dx,eax
  40cd2e:	(bad)  
  40cd2f:	push   ecx
  40cd30:	int3   
  40cd31:	pop    ebp
  40cd32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd33:	pop    ss
  40cd34:	pop    es
  40cd35:	stos   BYTE PTR es:[edi],al
  40cd36:	nop
  40cd37:	jecxz  0x40ccc1
  40cd39:	(bad)  
  40cd3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd3b:	dec    esp
  40cd3c:	mov    dl,0xed
  40cd3e:	sti    
  40cd3f:	(bad)  
  40cd40:	cmp    eax,0x54c265bb
  40cd45:	or     eax,DWORD PTR [edi+0x1c]
  40cd48:	cli    
  40cd49:	(bad)  
  40cd4a:	cmp    BYTE PTR [eax+edx*2+0x49],bl
  40cd4e:	mov    cl,0x1c
  40cd50:	add    eax,0xe2996c21
  40cd55:	add    BYTE PTR [esp+edx*2+0x4c],dl
  40cd59:	cmp    ebp,DWORD PTR [esi+0x66802b40]
  40cd5f:	jecxz  0x40cd93
  40cd61:	sahf   
  40cd62:	pushf  
  40cd63:	add    eax,0x2331154a
  40cd68:	lods   al,BYTE PTR ds:[esi]
  40cd69:	arpl   WORD PTR [esi-0x3b],di
  40cd6c:	xor    DWORD PTR [ebx+ebx*1],ebp
  40cd6f:	or     ah,BYTE PTR [edi]
  40cd71:	jge    0x40ccfe
  40cd73:	and    edx,ebp
  40cd75:	jecxz  0x40cd53
  40cd77:	pop    ecx
  40cd78:	ins    BYTE PTR es:[edi],dx
  40cd79:	mov    esp,esp
  40cd7b:	mov    al,0x3c
  40cd7d:	addr16 push edx
  40cd7f:	(bad)
  40cd82:	sahf   
  40cd83:	push   esi
  40cd84:	pop    eax
  40cd85:	xor    BYTE PTR [ebx+ebx*1+0x12d1f9a5],ch
  40cd8c:	cli    
  40cd8d:	loopne 0x40cde1
  40cd8f:	mov    DWORD PTR [ecx+ecx*4+0x41],ecx
  40cd93:	call   0x801a:0xcf758771
  40cd9a:	ret    
  40cd9b:	pcmpgtw mm3,QWORD PTR [ebp-0x4c06e701]
  40cda2:	mov    edi,0x696c438b
  40cda7:	icebp  
  40cda8:	cdq    
  40cda9:	cmovb  ebx,DWORD PTR [ebp+0xeb8547]
  40cdb0:	ret    0xa4d
  40cdb3:	xchg   ecx,eax
  40cdb4:	imul   edx,ecx,0x3
  40cdb7:	mov    dl,0xfc
  40cdb9:	hlt    
  40cdba:	xchg   esi,eax
  40cdbb:	mov    esp,0xab66af61
  40cdc0:	cmovns esp,DWORD PTR [edx+0x4b804f26]
  40cdc7:	shl    DWORD PTR [ebp+0x78],cl
  40cdca:	xor    bh,bl
  40cdcc:	inc    ebp
  40cdcd:	or     eax,0x7db9430f
  40cdd2:	mov    ah,0x2e
  40cdd4:	lds    esp,FWORD PTR [edx]
  40cdd6:	fwait
  40cdd7:	and    ecx,DWORD PTR [ebp-0x72]
  40cdda:	and    al,0x8e
  40cddc:	(bad)  
  40cddd:	loope  0x40cd61
  40cddf:	sti    
  40cde0:	mov    ah,0xe2
  40cde2:	and    eax,DWORD PTR [edx]
  40cde4:	popf   
  40cde5:	mov    ch,0xeb
  40cde7:	call   0x209ea999
  40cdec:	jl     0x40ce20
  40cdee:	inc    edi
  40cdef:	add    DWORD PTR [ebx+0x55b53215],esi
  40cdf5:	or     bh,BYTE PTR [edx+0x12970bfc]
  40cdfb:	and    dl,BYTE PTR [ecx]
  40cdfd:	fnstenv [eax+0x13c1c02]
  40ce03:	push   ebp
  40ce04:	push   ecx
  40ce05:	sbb    eax,DWORD PTR [ecx-0x41c9f8bf]
  40ce0b:	div    BYTE PTR [edi]
  40ce0d:	mov    al,ds:0xfb630ad6
  40ce12:	xchg   edi,eax
  40ce13:	cmp    BYTE PTR [esi],ah
  40ce15:	test   al,0x4d
  40ce17:	daa    
  40ce18:	aad    0xee
  40ce1a:	mov    ebx,0x6673e6a4
  40ce1f:	push   ecx
  40ce20:	add    BYTE PTR [ecx+0x20],dl
  40ce23:	cmpps  xmm4,XMMWORD PTR [ebp-0xd],0xf4
  40ce28:	shl    DWORD PTR [edi-0x6124f4ea],0xce
  40ce2f:	push   eax
  40ce30:	mov    BYTE PTR [edx-0x6c427514],bh
  40ce36:	add    al,0x33
  40ce38:	xchg   ebx,eax
  40ce39:	in     eax,dx
  40ce3a:	and    esi,eax
  40ce3c:	fstp   TBYTE PTR [ebp+0x48e337f8]
  40ce42:	xchg   DWORD PTR [edx+0x77],ebx
  40ce45:	push   edi
  40ce46:	pop    edx
  40ce47:	bound  eax,QWORD PTR [eax]
  40ce49:	cmp    edx,DWORD PTR ds:0xaef7eaa7
  40ce4f:	push   cs
  40ce50:	outs   dx,DWORD PTR ds:[esi]
  40ce51:	push   edx
  40ce52:	xchg   edx,eax
  40ce53:	xor    al,0x40
  40ce55:	adc    al,0x24
  40ce57:	inc    ecx
  40ce58:	jmp    0x67d718e4
  40ce5d:	fucomp st(5)
  40ce5f:	das    
  40ce60:	or     ebp,DWORD PTR [ebx-0x6fab73b8]
  40ce66:	xor    DWORD PTR [ecx-0x7f],0xfffffff2
  40ce6a:	mov    ds:0x4e2b3bbb,eax
  40ce6f:	call   0x36ae4c6e
  40ce74:	pop    edi
  40ce75:	sub    eax,0x54532c11
  40ce7a:	loope  0x40ce73
  40ce7c:	addr16 jge 0x40ce59
  40ce7f:	xor    ah,bl
  40ce81:	lds    ecx,FWORD PTR [edi]
  40ce83:	mov    eax,0x47ef69ef
  40ce88:	call   0xea1842e5
  40ce8d:	call   0xbcb698a3
  40ce92:	bound  eax,QWORD PTR [edi]
  40ce94:	dec    ecx
  40ce95:	xor    eax,0xc226e4aa
  40ce9a:	or     DWORD PTR [ecx+0x6f],edx
  40ce9d:	fnstenv [esi-0x38]
  40cea0:	les    ecx,FWORD PTR [edi-0xfca8de4]
  40cea6:	mov    bh,0xe4
  40cea8:	aas    
  40cea9:	and    ch,BYTE PTR [esi-0x78149419]
  40ceaf:	add    eax,0xedd48213
  40ceb4:	xor    al,0x78
  40ceb6:	or     al,BYTE PTR [edx]
  40ceb8:	jae    0x40cf00
  40ceba:	jbe    0x40cf1e
  40cebc:	cmp    al,0x1
  40cebe:	add    DWORD PTR [ebx-0x4],eax
  40cec1:	dec    eax
  40cec2:	popf   
  40cec3:	or     ebx,0xf50f0d38
  40cec9:	call   0x844c:0xa4873928
  40ced0:	ret    
  40ced1:	(bad)  
  40ced2:	fisubr DWORD PTR [edi+0x20c0a341]
  40ced8:	jmp    0x1d8fe2a5
  40cedd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cede:	mov    ecx,0x2e1f871
  40cee3:	jno    0x40cf33
  40cee5:	jbe    0x40cf18
  40cee7:	cld    
  40cee8:	mov    eax,0xaad9e73d
  40ceed:	pop    edx
  40ceee:	dec    edx
  40ceef:	push   esp
  40cef0:	scas   eax,DWORD PTR es:[edi]
  40cef1:	lods   eax,DWORD PTR ds:[esi]
  40cef3:	ins    DWORD PTR es:[edi],dx
  40cef4:	loope  0x40ceb7
  40cef6:	fadd   DWORD PTR [esi]
  40cef8:	dec    ebx
  40cef9:	dec    esi
  40cefa:	inc    edx
  40cefb:	pop    esi
  40cefc:	inc    esi
  40cefd:	mov    ds:0x52512ff8,eax
  40cf02:	sub    bl,BYTE PTR [ecx]
  40cf04:	sbb    al,0xce
  40cf06:	sub    ebp,DWORD PTR [ebx+0x765a270b]
  40cf0c:	pop    es
  40cf0d:	pop    esi
  40cf0e:	jne    0x40cea9
  40cf10:	xchg   edi,eax
  40cf11:	inc    esi
  40cf12:	cwde   
  40cf13:	pop    ecx
  40cf14:	in     eax,0x3d
  40cf16:	retf   
  40cf17:	jne    0x40cf35
  40cf19:	xor    DWORD PTR [edx-0x4c],eax
  40cf1c:	mov    al,0xf9
  40cf1e:	sub    BYTE PTR [ecx],ah
  40cf20:	(bad)  
  40cf21:	js     0x40ceeb
  40cf23:	mov    ch,0x46
  40cf25:	mov    ch,0x3e
  40cf27:	dec    ebp
  40cf28:	test   dh,bl
  40cf2a:	jmp    0x40cf16
  40cf2c:	xchg   esp,eax
  40cf2d:	dec    ebp
  40cf2e:	pop    es
  40cf2f:	or     edx,DWORD PTR [ecx+edx*2-0xe]
  40cf33:	aas    
  40cf34:	loop   0x40cede
  40cf36:	xchg   edx,eax
  40cf37:	sub    eax,0x86c06e6a
  40cf3c:	xchg   edi,eax
  40cf3d:	xor    eax,0xc3c78858
  40cf42:	sbb    DWORD PTR [eax+ebx*8-0x80],edi
  40cf46:	jp     0x40cfac
  40cf48:	push   esp
  40cf49:	(bad)  
  40cf4a:	retf   0x5a72
  40cf4d:	test   DWORD PTR [ebp+0x4f],ecx
  40cf50:	and    dl,dh
  40cf52:	inc    esi
  40cf53:	ins    DWORD PTR es:[edi],dx
  40cf54:	(bad)  
  40cf55:	xchg   ebp,eax
  40cf56:	mov    gs,WORD PTR [ebp-0x27]
  40cf59:	mov    eax,ds:0x6a81bc13
  40cf5e:	xchg   esi,eax
  40cf5f:	call   0xe42a:0x6b37e01b
  40cf66:	repz mov ds:0x385c3598,eax
  40cf6c:	jge    0x40cfd7
  40cf6e:	icebp  
  40cf6f:	scas   eax,DWORD PTR es:[edi]
  40cf70:	mov    ebx,0x680ba4dc
  40cf75:	cwde   
  40cf76:	dec    ecx
  40cf77:	fidiv  DWORD PTR [eax-0x1650ca5f]
  40cf7e:	xor    esp,DWORD PTR [ebp-0x26]
  40cf81:	scas   al,BYTE PTR es:[edi]
  40cf82:	dec    esp
  40cf83:	mov    edi,0x54da033c
  40cf88:	bnd jb 0x40cf90
  40cf8b:	popa   
  40cf8c:	and    bl,0x6
  40cf8f:	popa   
  40cf90:	lock push esi
  40cf92:	or     DWORD PTR [esi],ebp
  40cf94:	imul   ebx,DWORD PTR [eax],0x46e96466
  40cf9a:	sbb    bl,BYTE PTR [eax-0x7887e28d]
  40cfa0:	rcr    DWORD PTR [ecx+0x75],1
  40cfa3:	mov    cl,0xc5
  40cfa5:	add    esp,DWORD PTR [edx+0x11]
  40cfa8:	xor    al,0xee
  40cfaa:	cmp    esi,DWORD PTR [ecx]
  40cfac:	(bad)  
  40cfad:	in     eax,dx
  40cfae:	and    al,0xa
  40cfb0:	je     0x40cf75
  40cfb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfb3:	bound  esi,QWORD PTR [edx+0x53]
  40cfb6:	rol    bh,0xa8
  40cfb9:	mov    BYTE PTR [esi],bh
  40cfbb:	int    0x29
  40cfbd:	in     eax,0x67
  40cfbf:	mov    ch,0x16
  40cfc1:	stos   BYTE PTR es:[edi],al
  40cfc2:	mov    dl,0x38
  40cfc4:	fcomip st,st(3)
  40cfc6:	push   0x73dd2799
  40cfcb:	or     eax,0x4e15795a
  40cfd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfd1:	(bad)  
  40cfd2:	mov    ds:0x996dc3d8,al
  40cfd7:	push   ds
  40cfd8:	mov    al,ds:0xaaa2ef1d
  40cfdd:	pusha  
  40cfde:	pop    ecx
  40cfdf:	push   eax
  40cfe0:	popa   
  40cfe1:	pop    eax
  40cfe2:	xor    al,0xa9
  40cfe4:	lods   eax,DWORD PTR ds:[esi]
  40cfe5:	std    
  40cfe6:	loope  0x40cfbc
  40cfe8:	adc    al,0x87
  40cfea:	push   eax
  40cfeb:	pop    edx
  40cfec:	aam    0x9e
  40cfee:	mov    dh,0x8c
  40cff0:	push   edi
  40cff1:	xor    eax,0xe0d85b0e
  40cff6:	mov    DWORD PTR [ebx+edi*4],esp
  40cff9:	push   esp
  40cffa:	loop   0x40d048
  40cffc:	mov    edx,ebx
  40cffe:	in     eax,dx
  40cfff:	sbb    al,0x1b
  40d001:	sbb    al,0x1a
  40d003:	sub    DWORD PTR [edi-0x16],ebp
  40d006:	inc    edi
  40d007:	es dec esp
  40d009:	xchg   edx,eax
  40d00a:	sar    DWORD PTR [esi-0x5ea57cea],1
  40d010:	daa    
  40d011:	mov    ebx,0xfd31fb86
  40d016:	int3   
  40d017:	inc    esp
  40d018:	repz mov dl,0x17
  40d01b:	rcr    eax,0xc0
  40d01e:	xor    al,0xe4
  40d020:	dec    eax
  40d021:	push   eax
  40d022:	push   0xffffffbf
  40d024:	cmp    eax,DWORD PTR [eax+0x26985380]
  40d02a:	nop
  40d02b:	add    DWORD PTR [ecx+0x4c],ecx
  40d02e:	mov    esi,0xba777df4
  40d033:	lea    ebx,[esi+0x4a59633c]
  40d039:	and    edx,DWORD PTR [esi-0x6586124f]
  40d03f:	loop   0x40d09b
  40d041:	(bad)  
  40d042:	rcl    DWORD PTR [eax],1
  40d044:	and    ch,dl
  40d046:	adc    BYTE PTR [ecx-0x5f],bh
  40d049:	mov    bh,bl
  40d04b:	add    BYTE PTR [edi+0x15],bl
  40d04e:	call   0x44e7:0xe0d19979
  40d055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d056:	push   0xabcba724
  40d05b:	jo     0x40d05b
  40d05d:	fstp   DWORD PTR [edi]
  40d05f:	and    BYTE PTR [esi],cl
  40d061:	jo     0x40d0df
  40d063:	cmp    cl,BYTE PTR [edi+0x2d]
  40d066:	test   eax,0x437bea92
  40d06b:	shl    DWORD PTR [edi],cl
  40d06d:	mov    ebp,0xac9c05d8
  40d072:	daa    
  40d073:	sub    BYTE PTR es:[ebp-0x403a7fb3],al
  40d07a:	cmp    eax,0x6ecaade2
  40d07f:	dec    edx
  40d080:	scas   eax,DWORD PTR es:[edi]
  40d081:	push   esi
  40d082:	xchg   ebp,eax
  40d083:	fs and al,0x9
  40d086:	cmp    dl,BYTE PTR [ecx]
  40d088:	and    al,dh
  40d08a:	pop    esp
  40d08b:	inc    edi
  40d08c:	fcom   DWORD PTR [esi]
  40d08e:	aad    0xe0
  40d090:	jl     0x40d102
  40d092:	lahf   
  40d093:	ror    DWORD PTR [ebx+eax*2],0xcb
  40d097:	in     eax,dx
  40d098:	out    0x5a,eax
  40d09a:	lock inc ecx
  40d09c:	pop    edi
  40d09d:	lods   al,BYTE PTR ds:[esi]
  40d09e:	in     eax,0xc4
  40d0a0:	dec    eax
  40d0a1:	pop    ss
  40d0a2:	add    eax,0x9209d2d5
  40d0a7:	add    ebp,esi
  40d0a9:	rcr    DWORD PTR [esi-0x7e],1
  40d0ac:	and    DWORD PTR [eax+0x9],edx
  40d0af:	fiadd  DWORD PTR [eax+0x7f]
  40d0b2:	shl    BYTE PTR [eax-0x5e],1
  40d0b5:	and    al,0x14
  40d0b7:	xchg   edx,eax
  40d0b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0b9:	jnp    0x40d0c6
  40d0bb:	call   0x837c3016
  40d0c0:	xor    BYTE PTR [ebx-0x26],cl
  40d0c3:	icebp  
  40d0c4:	dec    edx
  40d0c5:	(bad)  
  40d0c6:	ds hlt 
  40d0c8:	(bad)  
  40d0ca:	ret    0xbdfc
  40d0cd:	lock aad 0x89
  40d0d0:	inc    ebp
  40d0d1:	loopne 0x40d056
  40d0d3:	rcr    BYTE PTR [edx-0x77],cl
  40d0d6:	push   ebp
  40d0d7:	in     al,0xc7
  40d0d9:	inc    ebp
  40d0da:	and    BYTE PTR [edi+ecx*1+0x45c70000],0x90
  40d0e2:	mov    fs,WORD PTR [ecx+0x0]
  40d0e5:	add    bh,al
  40d0e7:	inc    ebp
  40d0e8:	xchg   esp,eax
  40d0e9:	adc    DWORD PTR [eax],ecx
  40d0eb:	add    BYTE PTR [eax],al
  40d0ed:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40d0f7:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40d101:	mov    DWORD PTR [ebp-0x88],0x58ff
  40d10b:	mov    DWORD PTR [ebp-0x84],0x7394
  40d115:	xor    eax,eax
  40d117:	inc    eax
  40d118:	mov    DWORD PTR [ebp-0x64],eax
  40d11b:	mov    DWORD PTR [ebp-0x8],0x5f59
  40d122:	mov    DWORD PTR [ebp-0x4],0x652b
  40d129:	mov    DWORD PTR [ebp-0xc],0xf43
  40d130:	mov    DWORD PTR [ebp-0x14],0x22dc
  40d137:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40d13e:	mov    DWORD PTR [ebp-0x30],0x28e1
  40d145:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40d14c:	mov    DWORD PTR [ebp-0x50],0x3910
  40d153:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40d15a:	mov    DWORD PTR [ebp-0x24],0x6111
  40d161:	mov    DWORD PTR [ebp-0x78],ecx
  40d164:	mov    DWORD PTR [ebp-0x34],ecx
  40d167:	mov    DWORD PTR [ebp-0x44],0x207a
  40d16e:	mov    DWORD PTR [ebp-0x60],eax
  40d171:	mov    DWORD PTR [ebp-0x8c],0x7840
  40d17b:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40d182:	mov    eax,DWORD PTR [ebp-0x30]
  40d185:	or     eax,0x70c5
  40d18a:	add    eax,DWORD PTR [ebp-0x2c]
  40d18d:	mov    ecx,DWORD PTR [ebp-0x14]
  40d190:	or     eax,ecx
  40d192:	mov    ecx,0xce40
  40d197:	sub    ecx,eax
  40d199:	jmp    0x40d5a4
  40d19e:	imul   eax,ebx,0xb67c365b
  40d1a4:	lods   al,BYTE PTR ds:[esi]
  40d1a5:	xchg   esp,eax
  40d1a6:	adc    dl,0x9e
  40d1a9:	nop
  40d1aa:	cmp    edi,DWORD PTR [esi]
  40d1ac:	loope  0x40d13e
  40d1ae:	xchg   ecx,eax
  40d1af:	out    0xbe,eax
  40d1b1:	mov    esi,0xbebec492
  40d1b6:	pop    edi
  40d1b7:	cld    
  40d1b8:	push   edi
  40d1b9:	les    eax,FWORD PTR [ecx]
  40d1bb:	push   cs
  40d1bc:	int    0x67
  40d1be:	popf   
  40d1bf:	dec    esp
  40d1c0:	jbe    0x40d1dd
  40d1c2:	mov    dh,0x1e
  40d1c4:	mov    ds:0x8a7d3444,al
  40d1c9:	add    esi,esp
  40d1cb:	inc    esi
  40d1cc:	sbb    eax,0x3c51d7bf
  40d1d1:	mov    esi,0x541cdb5e
  40d1d6:	test   BYTE PTR [ebp+0x5c],dl
  40d1d9:	cmp    dh,BYTE PTR [edx+0x6]
  40d1dc:	lds    edx,FWORD PTR [eax-0x56]
  40d1df:	sbb    ebp,DWORD PTR [esi-0x1e]
  40d1e2:	cld    
  40d1e3:	cdq    
  40d1e4:	loopne 0x40d18a
  40d1e6:	imul   esp,DWORD PTR [ecx-0x4c],0x561a5dc9
  40d1ed:	push   ebp
  40d1ee:	add    ah,ch
  40d1f0:	ins    DWORD PTR es:[edi],dx
  40d1f1:	psadbw mm7,QWORD PTR [edx+0x76744732]
  40d1f8:	loopne 0x40d275
  40d1fa:	mov    bl,0x4a
  40d1fc:	push   ebx
  40d1fd:	imul   edi,DWORD PTR [esi-0x4e],0x75d11107
  40d204:	mov    ds:0xddfb529b,eax
  40d209:	jns    0x40d198
  40d20b:	mov    ecx,0x1ddb0192
  40d210:	push   ecx
  40d211:	(bad)  
  40d212:	lods   al,BYTE PTR ds:[esi]
  40d213:	jecxz  0x40d1dd
  40d215:	or     al,BYTE PTR [ebx]
  40d217:	fs (bad) 
  40d219:	retf   
  40d21a:	mov    dl,0xc
  40d21c:	dec    eax
  40d21d:	push   ss
  40d21e:	xor    ebp,DWORD PTR ds:0x6ad27dde
  40d224:	mov    dh,BYTE PTR [edi]
  40d226:	int    0x22
  40d228:	retf   
  40d229:	je     0x40d1e9
  40d22b:	or     cl,BYTE PTR [ebp+0x75]
  40d22e:	or     cl,cl
  40d230:	jmp    0xc5ca:0xe1325d0
  40d237:	cmp    BYTE PTR [edi-0x62123baa],dh
  40d23d:	mov    ch,0xb
  40d23f:	push   0xafafbda6
  40d244:	and    al,0xeb
  40d246:	test   al,0xde
  40d248:	xchg   edi,eax
  40d249:	aas    
  40d24a:	in     eax,dx
  40d24b:	loope  0x40d2bc
  40d24d:	jge    0x40d26c
  40d24f:	mov    dl,0x57
  40d251:	sub    bl,BYTE PTR [ecx-0x34db8e37]
  40d257:	xchg   ebp,eax
  40d258:	inc    ebp
  40d259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d25a:	bsr    edi,DWORD PTR [edx]
  40d25d:	push   ecx
  40d25e:	jo     0x40d244
  40d260:	leave  
  40d261:	(bad)
  40d265:	mov    edx,0x59568eaf
  40d26a:	call   0x3392ca8f
  40d26f:	je     0x40d1ff
  40d271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d272:	stc    
  40d273:	dec    ebx
  40d274:	or     ch,dl
  40d276:	es add eax,0x6a948ba4
  40d27c:	xchg   edi,eax
  40d27d:	xlat   BYTE PTR ds:[ebx]
  40d27e:	into   
  40d27f:	jno    0x40d228
  40d281:	dec    edi
  40d282:	and    eax,DWORD PTR [edx-0x7]
  40d285:	jmp    0xfec68b12
  40d28a:	pop    esi
  40d28b:	push   cs
  40d28c:	outs   dx,BYTE PTR ds:[esi]
  40d28d:	xchg   DWORD PTR [edi+0x1a],ebx
  40d290:	pusha  
  40d291:	lods   al,BYTE PTR ds:[esi]
  40d292:	dec    eax
  40d293:	imul   ebp,DWORD PTR [esi-0x76],0xfde9a222
  40d29a:	push   esi
  40d29b:	adc    al,0x1c
  40d29d:	rol    DWORD PTR [ebp-0x6a],1
  40d2a0:	repnz cs cld 
  40d2a3:	mov    bl,0x45
  40d2a5:	sub    eax,0x9252f624
  40d2aa:	adc    eax,0x4d709a5e
  40d2af:	xchg   esi,eax
  40d2b0:	xor    dl,BYTE PTR cs:[edi+0x15]
  40d2b4:	and    al,0xcf
  40d2b6:	xor    al,0x4d
  40d2b8:	frstor [ebp+0x13]
  40d2bb:	jecxz  0x40d2f0
  40d2bd:	add    eax,0xbd5bb169
  40d2c2:	xchg   ecx,eax
  40d2c3:	push   0xedc9b808
  40d2c8:	test   BYTE PTR [edx+0x1661654f],0xf0
  40d2cf:	test   eax,0x7af434fd
  40d2d4:	dec    ebp
  40d2d5:	mov    ah,0xdf
  40d2d7:	cmp    ebp,DWORD PTR [edx+edx*8-0x66]
  40d2db:	adc    ebp,DWORD PTR [ebx]
  40d2dd:	test   al,0xad
  40d2df:	jmp    0x40d35c
  40d2e1:	mov    esp,0x7985aeec
  40d2e6:	clc    
  40d2e7:	jge    0x40d2d1
  40d2e9:	(bad)  
  40d2ea:	jge    0x40d29e
  40d2ec:	retf   
  40d2ed:	arpl   WORD PTR [ecx],bp
  40d2ef:	inc    edx
  40d2f0:	mov    eax,ds:0xc7f3099e
  40d2f5:	mov    eax,0x6a4ef9ad
  40d2fa:	rol    DWORD PTR [esi+edx*4-0x3870736e],cl
  40d301:	imul   edx,DWORD PTR [ebx-0x20d349c6],0x5e46a6dd
  40d30b:	sbb    bl,BYTE PTR [eax]
  40d30d:	out    dx,al
  40d30e:	sub    BYTE PTR [ebp+0x54],ch
  40d311:	adc    al,ch
  40d313:	xchg   ebx,eax
  40d314:	jecxz  0x40d378
  40d316:	pop    ss
  40d317:	mov    cl,0x36
  40d319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d31a:	jbe    0x40d33c
  40d31c:	ror    BYTE PTR [edx-0x6c],cl
  40d31f:	cmp    cl,BYTE PTR [ebx+0x20841b26]
  40d325:	call   0x218f:0x85d5516f
  40d32c:	retf   0x718c
  40d32f:	jne    0x40d3ac
  40d331:	call   0x8e7d:0xba2badb1
  40d338:	gs sbb esp,edi
  40d33b:	clc    
  40d33c:	stc    
  40d33d:	push   es
  40d33e:	ror    BYTE PTR [eax-0x5b],0x12
  40d342:	or     BYTE PTR [esi-0x51d3d25f],dh
  40d348:	dec    esp
  40d349:	and    BYTE PTR [ebp-0x5a],ch
  40d34c:	nop
  40d34d:	pop    es
  40d34e:	not    BYTE PTR [eax-0x11e6a2ef]
  40d354:	popa   
  40d355:	not    DWORD PTR [ecx-0x55908553]
  40d35b:	mov    WORD PTR [edi+0x7d212ffa],ss
  40d361:	and    cl,cl
  40d363:	ins    DWORD PTR es:[edi],dx
  40d364:	loope  0x40d37b
  40d366:	and    DWORD PTR [ebx],eax
  40d368:	adc    eax,DWORD PTR [esp+ecx*2-0x56b3c8b3]
  40d36f:	push   ss
  40d370:	leave  
  40d371:	fcmovb st,st(1)
  40d373:	xchg   esp,eax
  40d374:	xchg   DWORD PTR [ebp+ecx*8-0xfb44eb4],edx
  40d37b:	pop    edi
  40d37c:	sub    esp,esi
  40d37e:	xchg   edx,eax
  40d380:	xchg   edx,eax
  40d381:	xchg   ebp,eax
  40d382:	add    ecx,edx
  40d384:	mov    dh,0xea
  40d386:	pop    ebp
  40d387:	mov    al,0x7d
  40d389:	cwde   
  40d38a:	retf   
  40d38b:	rcr    BYTE PTR [ecx-0x57],0x18
  40d38f:	mov    ax,0x1951
  40d393:	xchg   esp,eax
  40d394:	aam    0xdd
  40d396:	mov    WORD PTR [edi+0x7f],es
  40d399:	jle    0x40d3ec
  40d39b:	sub    eax,DWORD PTR [ebx+eax*8]
  40d39e:	cld    
  40d39f:	inc    eax
  40d3a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3a1:	pop    eax
  40d3a2:	inc    ecx
  40d3a3:	arpl   WORD PTR [ebx-0xf],di
  40d3a6:	neg    DWORD PTR [edx]
  40d3a8:	outs   dx,BYTE PTR ds:[esi]
  40d3a9:	dec    ebp
  40d3aa:	retf   
  40d3ab:	xor    bl,dl
  40d3ad:	bound  ebx,QWORD PTR ds:0xca6c01be
  40d3b3:	push   eax
  40d3b4:	xor    DWORD PTR [esp+eiz*2+0x76],esi
  40d3b8:	push   esp
  40d3b9:	dec    eax
  40d3ba:	mov    bl,0x2e
  40d3bc:	pop    ds
  40d3bd:	xor    eax,0xfb4b1199
  40d3c2:	outs   dx,DWORD PTR ds:[esi]
  40d3c3:	(bad)  
  40d3c4:	mov    ecx,0x928edc87
  40d3c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3ca:	les    edx,FWORD PTR [edi+esi*2+0x0]
  40d3ce:	add    DWORD PTR [eax-0x37c8d7b4],ebx
  40d3d4:	xor    al,BYTE PTR [eax+edx*8+0x5d9f217e]
  40d3db:	sti    
  40d3dc:	xor    DWORD PTR [edi],0xffffff94
  40d3df:	adc    bh,ah
  40d3e1:	in     al,dx
  40d3e2:	pop    esp
  40d3e3:	or     al,0x45
  40d3e5:	xor    DWORD PTR [edx],ecx
  40d3e7:	jns    0x40d422
  40d3e9:	pop    ebp
  40d3ea:	jl     0x40d42f
  40d3ec:	xor    al,0x70
  40d3ee:	js     0x40d402
  40d3f0:	je     0x40d3b3
  40d3f2:	mov    BYTE PTR [edx+0x4b],al
  40d3f5:	cmp    al,0x99
  40d3f7:	ins    DWORD PTR es:[edi],dx
  40d3f8:	or     ebx,0x47
  40d3fb:	out    dx,al
  40d3fc:	std    
  40d3fd:	shr    al,cl
  40d3ff:	push   ecx
  40d400:	pop    edi
  40d401:	inc    ebp
  40d402:	lods   eax,DWORD PTR ds:[esi]
  40d403:	leave  
  40d404:	enter  0xe18,0xf3
  40d408:	or     cl,BYTE PTR [ebx+0x73fc37ba]
  40d40e:	cmp    BYTE PTR [eax+0x53139e0c],bl
  40d414:	addr16 sub eax,0x979d9a79
  40d41a:	adc    bh,BYTE PTR [ebx-0x7d]
  40d41d:	int    0x9b
  40d41f:	fldenv [edx]
  40d421:	std    
  40d422:	and    eax,0xb372ebb3
  40d427:	and    DWORD PTR [ebx],esp
  40d429:	mov    eax,0xd4280d35
  40d42e:	and    BYTE PTR [edi-0x45],ch
  40d431:	idiv   BYTE PTR [esi+0x41]
  40d434:	sbb    BYTE PTR [ecx-0x55],bl
  40d437:	dec    esi
  40d438:	cmp    DWORD PTR [esi-0x62],0x3
  40d43c:	nop    ebx
  40d43f:	daa    
  40d440:	or     al,0x30
  40d442:	cmp    dh,BYTE PTR [esi-0x32]
  40d445:	das    
  40d446:	cdq    
  40d447:	(bad)  
  40d448:	sbb    al,0xd8
  40d44a:	push   ebx
  40d44b:	add    BYTE PTR [edi],cl
  40d44d:	test   BYTE PTR [eax+0x53b865ee],0x2d
  40d454:	test   eax,0xe05089fe
  40d459:	test   eax,0x180a0c9f
  40d45e:	stc    
  40d45f:	cwde   
  40d460:	cmp    DWORD PTR [ebx-0x14879077],ecx
  40d466:	retf   0x96b7
  40d469:	jae    0x40d4d4
  40d46b:	out    0x78,eax
  40d46d:	mov    ds:0x31956059,eax
  40d472:	iret   
  40d473:	test   eax,0x3012ca04
  40d478:	je     0x40d427
  40d47a:	js     0x40d4cc
  40d47c:	in     al,0xd
  40d47e:	cmp    BYTE PTR [ecx],ah
  40d480:	lahf   
  40d481:	iret   
  40d482:	push   ds
  40d483:	mov    cl,0xfd
  40d485:	lahf   
  40d486:	ja     0x40d4db
  40d488:	out    dx,al
  40d489:	fidiv  DWORD PTR [ebp+0xe243109]
  40d48f:	lahf   
  40d490:	cmp    edi,DWORD PTR [edi+ebp*1+0xabd583e]
  40d497:	sub    DWORD PTR [ebx+ebp*1],esi
  40d49a:	rcr    DWORD PTR [ebx+0x59f7675c],cl
  40d4a0:	ret    0xc82d
  40d4a3:	mov    esi,0x3698139a
  40d4a8:	mov    bh,0x60
  40d4aa:	int    0x6c
  40d4ac:	stos   DWORD PTR es:[edi],eax
  40d4ad:	jl     0x40d4b1
  40d4af:	cmp    BYTE PTR [ebp-0x1e74668d],bh
  40d4b5:	jmp    0x40d474
  40d4b7:	in     al,dx
  40d4b8:	sbb    ecx,0x74
  40d4bb:	mul    eax
  40d4bd:	xor    DWORD PTR [eax],esi
  40d4bf:	mov    al,ds:0xfa47eb2b
  40d4c4:	cmp    BYTE PTR [esi+0x427ae602],ch
  40d4ca:	test   eax,0x2fe52166
  40d4cf:	pop    eax
  40d4d0:	jle    0x40d546
  40d4d2:	jae    0x40d4df
  40d4d4:	inc    esp
  40d4d5:	sub    DWORD PTR [ebx-0x29],ebp
  40d4d8:	or     al,0x60
  40d4da:	inc    eax
  40d4db:	bswap  esi
  40d4dd:	fs dec edx
  40d4e0:	or     al,0x1b
  40d4e2:	add    ebp,esp
  40d4e4:	xchg   edi,eax
  40d4e5:	or     edx,DWORD PTR [esi-0x3a09d315]
  40d4eb:	das    
  40d4ec:	test   al,0x87
  40d4ee:	pop    es
  40d4ef:	das    
  40d4f0:	xchg   ecx,ebx
  40d4f2:	sti    
  40d4f3:	pop    esi
  40d4f4:	fwait
  40d4f5:	mov    dh,0xff
  40d4f7:	test   eax,0x70681fa6
  40d4fc:	sbb    bh,BYTE PTR [esi]
  40d4fe:	mov    edx,DWORD PTR [ebp+0x29]
  40d501:	jne    0x40d49f
  40d503:	pop    edx
  40d504:	in     al,dx
  40d505:	loop   0x40d4cb
  40d507:	push   ecx
  40d508:	repz es push 0x1018b804
  40d50f:	cs inc edx
  40d511:	adc    DWORD PTR [eax],ebx
  40d513:	daa    
  40d514:	jno    0x40d50a
  40d516:	loope  0x40d51e
  40d518:	jne    0x40d4ef
  40d51a:	fdiv   DWORD PTR [ebx-0x21]
  40d51d:	sub    ebx,ebx
  40d51f:	jnp    0x40d513
  40d521:	inc    edx
  40d522:	mov    bh,0x78
  40d524:	sub    BYTE PTR [edi-0x77],cl
  40d527:	icebp  
  40d528:	je     0x40d525
  40d52a:	mov    dh,0x60
  40d52c:	repz push edi
  40d52e:	fidivr DWORD PTR [ebx+eax*4]
  40d531:	hlt    
  40d532:	push   ss
  40d533:	rol    BYTE PTR [edi+0x4ae14ded],0x23
  40d53a:	outs   dx,BYTE PTR ds:[esi]
  40d53b:	ss addr16 mov ds:0x2dad,al
  40d541:	jb     0x40d5c1
  40d543:	pusha  
  40d544:	pop    esi
  40d545:	push   esi
  40d546:	cmp    edx,DWORD PTR [ebp+ecx*1-0x1a]
  40d54a:	adc    ecx,edx
  40d54c:	xchg   esi,eax
  40d54d:	sbb    al,0x75
  40d54f:	(bad)  
  40d550:	ja     0x40d4f6
  40d552:	mov    ds:0x4e2b66e0,al
  40d557:	add    al,0xad
  40d559:	jnp    0x40d556
  40d55b:	dec    ebp
  40d55c:	add    ebx,DWORD PTR [edx]
  40d55e:	fdivr  st,st(5)
  40d560:	adc    dh,BYTE PTR [edi-0x41018b9a]
  40d566:	and    esi,DWORD PTR [esi]
  40d568:	shr    BYTE PTR [edx-0x79],cl
  40d56b:	gs mov ebx,?
  40d56e:	add    eax,0x431dfc48
  40d573:	push   0x42a1c012
  40d578:	jg     0x40d559
  40d57a:	test   eax,0x3b8cdc6c
  40d57f:	pop    eax
  40d580:	in     eax,dx
  40d581:	sub    ebp,DWORD PTR [ebx+0xcef78e1]
  40d587:	xor    BYTE PTR [edi-0x4c8edafa],ah
  40d58d:	or     cl,BYTE PTR [esi-0x33135195]
  40d593:	dec    edx
  40d594:	les    ecx,FWORD PTR [esi]
  40d596:	mov    ds:0x8321d24e,eax
  40d59b:	jmp    0x25b5b022
  40d5a0:	pop    edx
  40d5a1:	mov    WORD PTR [ebx-0x16],es
  40d5a4:	mov    eax,DWORD PTR [ebp-0xc]
  40d5a7:	sub    ecx,eax
  40d5a9:	imul   ecx,ecx,0x7480
  40d5af:	add    ecx,DWORD PTR [ebp-0x58]
  40d5b2:	mov    eax,DWORD PTR [ebp-0x8]
  40d5b5:	push   ecx
  40d5b6:	mov    ecx,DWORD PTR [ebp-0x4]
  40d5b9:	lea    eax,[ecx+eax*1-0x1e6d]
  40d5c0:	mov    ecx,DWORD PTR [ebp-0x64]
  40d5c3:	xor    edx,edx
  40d5c5:	div    ecx
  40d5c7:	mov    ecx,DWORD PTR [ebp-0x74]
  40d5ca:	lea    eax,[eax+ecx*1-0xa617]
  40d5d1:	push   eax
  40d5d2:	mov    eax,DWORD PTR [ebp-0x88]
  40d5d8:	mov    ecx,DWORD PTR [ebp-0x84]
  40d5de:	push   0x770a
  40d5e3:	push   0x2a0c
  40d5e8:	push   ecx
  40d5e9:	push   eax
  40d5ea:	call   0x41594e
  40d5ef:	mov    ecx,DWORD PTR [ebp-0x98]
  40d5f5:	mov    esi,DWORD PTR [ebp-0x94]
  40d5fb:	push   esi
  40d5fc:	push   ecx
  40d5fd:	or     edx,0x615d
  40d603:	or     eax,0x455c
  40d608:	push   edx
  40d609:	push   eax
  40d60a:	call   0x42227d
  40d60f:	mov    ecx,DWORD PTR [ebp-0x70]
  40d612:	mov    edx,DWORD PTR [ebp-0x6c]
  40d615:	xor    eax,ecx
  40d617:	mov    ecx,DWORD PTR [ebp-0x20]
  40d61a:	mov    edx,DWORD PTR [ebp-0x1c]
  40d61d:	mov    esi,DWORD PTR [ebp-0x80]
  40d620:	and    eax,0xb49
  40d625:	add    esi,0x629b
  40d62b:	lea    eax,[eax+ecx*1-0xfd]
  40d632:	xor    esi,0x4994
  40d638:	push   eax
  40d639:	lea    esi,[ebp+esi*1-0x3c93]
  40d640:	call   0x40dbf7
  40d645:	mov    ecx,eax
  40d647:	mov    eax,DWORD PTR [ebp-0x50]
  40d64a:	mov    edx,DWORD PTR [ebp-0x7c]
  40d64d:	sub    eax,0x161
  40d652:	xor    eax,edx
  40d654:	imul   eax,eax,0x5151
  40d65a:	add    eax,0x3901
  40d65f:	xor    eax,0x40c2
  40d664:	xor    edx,edx
  40d666:	mov    esi,0x218f6c45
  40d66b:	div    esi
  40d66d:	cmp    ecx,eax
  40d66f:	jne    0x40d7dc
  40d675:	mov    ecx,DWORD PTR [ebp-0x78]
  40d678:	xor    edx,edx
  40d67a:	mov    eax,0x209c
  40d67f:	div    ecx
  40d681:	mov    ecx,DWORD PTR ds:0x422708
  40d687:	mov    ecx,DWORD PTR [ecx+0x1a8]
  40d68d:	xor    edx,edx
  40d68f:	sub    ecx,eax
  40d691:	mov    eax,DWORD PTR [ebp-0x4c]
  40d694:	xor    eax,0x3daa
  40d699:	sub    eax,0x3375
  40d69e:	or     eax,0x6931
  40d6a3:	lea    eax,[ebp+eax*1-0x6c25]
  40d6aa:	push   eax
  40d6ab:	mov    eax,DWORD PTR [ebp-0x8c]
  40d6b1:	push   0x18
  40d6b3:	pop    esi
  40d6b4:	div    esi
  40d6b6:	mov    esi,DWORD PTR [ebp-0x60]
  40d6b9:	xor    edx,edx
  40d6bb:	div    esi
  40d6bd:	mov    edx,DWORD PTR [ebp-0x44]
  40d6c0:	mov    esi,DWORD PTR [ebp-0x34]
  40d6c3:	xor    eax,edx
  40d6c5:	xor    edx,edx
  40d6c7:	div    esi
  40d6c9:	imul   eax,eax,0x7d2a
  40d6cf:	sub    eax,0x928ded7
  40d6d4:	push   eax
  40d6d5:	mov    eax,ds:0x422708
  40d6da:	add    eax,0xaa
  40d6df:	push   eax
  40d6e0:	mov    eax,DWORD PTR [ebp-0x3c]
  40d6e3:	sub    ecx,eax
  40d6e5:	mov    eax,DWORD PTR [ebp-0x24]
  40d6e8:	push   DWORD PTR [ecx+eax*1+0xbd4]
  40d6ef:	call   0x41b447
  40d6f4:	mov    DWORD PTR [ebp-0x4],eax
  40d6f7:	mov    ecx,DWORD PTR ds:0x422810
  40d6fd:	lea    eax,[ebp+0x4]
  40d700:	mov    DWORD PTR [ecx*4+0x422808],eax
  40d707:	inc    DWORD PTR ds:0x422810
  40d70d:	mov    eax,DWORD PTR [ebp-0x4]
  40d710:	mov    eax,DWORD PTR [ebp-0x4]
  40d713:	xor    edx,edx
  40d715:	shld   edx,eax,0x2
  40d719:	shl    eax,0x2
  40d71c:	mov    ecx,0xcb79b576
  40d721:	mov    esi,0x9c2b8ae8
  40d726:	xor    eax,ecx
  40d728:	xor    edx,esi
  40d72a:	cmp    eax,ecx
  40d72c:	jne    0x40d746
  40d732:	cmp    edx,esi
  40d734:	jne    0x40d746
  40d73a:	mov    eax,0xcb79b572
  40d73f:	mov    edx,esi
  40d741:	jmp    0x40dbf1
  40d746:	lea    eax,[ebp-0x10]
  40d749:	mov    DWORD PTR [ebp-0x9c],eax
  40d74f:	mov    eax,DWORD PTR [ebp-0x54]
  40d752:	mov    DWORD PTR [ebp-0x10],eax
  40d755:	mov    eax,DWORD PTR [ebp-0x10]
  40d758:	mov    ecx,DWORD PTR [ebp-0x4]
  40d75b:	sub    eax,ecx
  40d75d:	mov    DWORD PTR [ebp-0x10],eax
  40d760:	mov    eax,DWORD PTR [ebp-0x20]
  40d763:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d766:	sub    DWORD PTR [ebp-0x10],eax
  40d769:	mov    eax,DWORD PTR [ebp-0x4]
  40d76c:	mov    DWORD PTR [eax],0x658776e9
  40d772:	mov    DWORD PTR [eax+0x4],0xab756547
  40d779:	mov    eax,DWORD PTR [ebp-0x10]
  40d77c:	mov    ecx,DWORD PTR [ebp-0x4]
  40d77f:	mov    DWORD PTR [ecx+0x1],eax
  40d782:	mov    eax,ds:0x422584
  40d787:	push   DWORD PTR [eax]
  40d789:	push   DWORD PTR ds:0x4227f8
  40d78f:	push   DWORD PTR ds:0x42258c
  40d795:	push   DWORD PTR ds:0x4227d8
  40d79b:	push   DWORD PTR ds:0x42284c
  40d7a1:	push   0xa5069baa
  40d7a6:	push   0xa5069bae
  40d7ab:	push   DWORD PTR [ebp-0x5c]
  40d7ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d7b1:	call   eax
  40d7b3:	mov    eax,DWORD PTR [edi]
  40d7b5:	mov    eax,DWORD PTR [ebp+0x8]
  40d7b8:	push   DWORD PTR [eax]
  40d7ba:	call   0x40e823
  40d7bf:	mov    eax,ds:0x422708
  40d7c4:	push   0x4
  40d7c6:	add    eax,0x1dc
  40d7cb:	push   eax
  40d7cc:	push   edi
  40d7cd:	call   0x411c08
  40d7d2:	mov    eax,0xcb79b57e
  40d7d7:	jmp    0x40d73f
  40d7dc:	mov    eax,0xcb79b576
  40d7e1:	mov    edx,0x9c2b8ae8
  40d7e6:	jmp    0x40dbf1
  40d7eb:	hlt    
  40d7ec:	scas   eax,DWORD PTR es:[edi]
  40d7ed:	je     0x40d848
  40d7ef:	mov    ah,0x9a
  40d7f1:	cld    
  40d7f2:	mov    eax,0x90d1c6c0
  40d7f7:	sahf   
  40d7f8:	(bad)  
  40d7f9:	hlt    
  40d7fa:	iret   
  40d7fb:	gs lock mov esi,0xbec492be
  40d802:	mov    esi,0xc391dd95
  40d807:	arpl   WORD PTR [ecx],ax
  40d809:	mov    ds:0x86143454,eax
  40d80e:	inc    esp
  40d80f:	(bad)  
  40d810:	out    dx,al
  40d811:	xchg   bl,al
  40d813:	in     al,0x0
  40d815:	push   esp
  40d816:	mov    eax,ds:0x7da6f0f4
  40d81b:	pop    esi
  40d81c:	pop    ds
  40d81d:	push   edi
  40d81e:	or     DWORD PTR [edx+0x0],ecx
  40d821:	hlt    
  40d822:	neg    DWORD PTR [ebx+0x1b073807]
  40d828:	aam    0x17
  40d82a:	(bad)  
  40d82b:	mov    bl,0xd6
  40d82d:	in     al,0x16
  40d82f:	xchg   ebx,eax
  40d830:	retf   0x50b4
  40d833:	and    ecx,DWORD PTR [edi]
  40d835:	or     cl,ah
  40d837:	push   0xc59f34a8
  40d83c:	test   al,0x68
  40d83e:	test   BYTE PTR [ebx+0x42],ch
  40d841:	imul   ebp,DWORD PTR [esi],0xffffffe9
  40d844:	cmp    al,0xc4
  40d846:	dec    ebp
  40d847:	lock sub bl,BYTE PTR [edi-0x283a9eda]
  40d84e:	aam    0x12
  40d850:	push   edi
  40d851:	jmp    FWORD PTR [edi]
  40d853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d854:	push   ss
  40d855:	ret    
  40d856:	pop    ebp
  40d857:	mov    ebp,eax
  40d859:	mov    dh,0x82
  40d85b:	mov    fs,esi
  40d85d:	data16 (bad) 
  40d85f:	or     al,0x72
  40d861:	jno    0x40d8b4
  40d863:	jne    0x40d84a
  40d865:	mov    eax,ds:0xcd6959a4
  40d86a:	call   0x3053:0xa81fa62
  40d871:	mov    ds:0x14f576af,eax
  40d876:	adc    al,BYTE PTR cs:[ebx+0x3c]
  40d87a:	imul   ebp,esi,0xa708c15b
  40d880:	xlat   BYTE PTR ds:[ebx]
  40d881:	hlt    
  40d882:	mov    ds:0x5ad1b203,eax
  40d887:	add    al,0x8b
  40d889:	mov    edi,DWORD PTR [edx+0xaeb4bd5]
  40d88f:	sub    edx,DWORD PTR [eax+0x2b]
  40d892:	xchg   ecx,eax
  40d893:	aad    0x4e
  40d895:	out    dx,al
  40d896:	push   ds
  40d897:	mov    bl,0xb1
  40d899:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40d89b:	jg     0x40d8d2
  40d89d:	adc    eax,0x88fb5b60
  40d8a2:	mov    ecx,cs
  40d8a4:	mov    al,0x64
  40d8a6:	lahf   
  40d8a7:	sub    ah,ch
  40d8a9:	fidivr WORD PTR ds:0xd48546fb
  40d8af:	mov    esi,0xbaf6c9bf
  40d8b4:	pop    edi
  40d8b5:	inc    ecx
  40d8b6:	push   ds
  40d8b7:	pop    edi
  40d8b8:	mov    ds:0xacd407e6,al
  40d8bd:	jmp    DWORD PTR [eax]
  40d8bf:	sub    BYTE PTR [ebx-0x6dcce7a],ah
  40d8c5:	test   eax,0xa2b56a09
  40d8ca:	pop    es
  40d8cb:	f2xm1  
  40d8cd:	call   FWORD PTR [eax+eiz*2]
  40d8d0:	push   ebx
  40d8d1:	lea    edx,[eax]
  40d8d3:	mov    bh,BYTE PTR [edx]
  40d8d5:	dec    ebp
  40d8d6:	(bad)  
  40d8d7:	hlt    
  40d8d8:	lea    edx,[ebp-0xeb3906f]
  40d8de:	adc    al,0x32
  40d8e0:	xchg   DWORD PTR [ebp+0x5d],esp
  40d8e3:	iret   
  40d8e4:	inc    eax
  40d8e5:	cmp    ebx,0x53
  40d8e8:	jecxz  0x40d8d4
  40d8ea:	push   ebx
  40d8eb:	mov    ds:0xc7e49234,al
  40d8f0:	out    dx,al
  40d8f1:	xchg   ah,cl
  40d8f3:	stos   BYTE PTR es:[edi],al
  40d8f4:	in     al,dx
  40d8f5:	jp     0x40d96e
  40d8f7:	cmc    
  40d8f8:	or     al,0xf7
  40d8fa:	mov    edx,0xca55cab8
  40d8ff:	mov    al,ds:0x87bb8a7f
  40d904:	adc    dh,BYTE PTR ds:0x157836b0
  40d90a:	fwait
  40d90b:	popf   
  40d90c:	sahf   
  40d90d:	les    eax,FWORD PTR [ebx+edx*8]
  40d910:	adc    edx,ebx
  40d912:	mov    ebx,0xa92c579f
  40d917:	call   0xdfaf23c7
  40d91c:	(bad)  
  40d91d:	xlat   BYTE PTR ds:[ebx]
  40d91e:	int3   
  40d91f:	outs   dx,BYTE PTR ds:[esi]
  40d920:	dec    edi
  40d921:	sub    eax,DWORD PTR [ecx+0x30]
  40d924:	dec    eax
  40d925:	cmc    
  40d926:	out    dx,al
  40d927:	adc    eax,DWORD PTR [ecx]
  40d929:	imul   ecx,DWORD PTR [edx],0x98c8a1d1
  40d92f:	sbb    BYTE PTR [ebx],ch
  40d931:	adc    ecx,DWORD PTR [edx+edi*4]
  40d934:	add    eax,0x1b7f4d92
  40d939:	xchg   ebp,eax
  40d93a:	push   ebp
  40d93b:	shl    bh,0xcc
  40d93e:	int3   
  40d93f:	and    al,0x12
  40d941:	test   al,0xf5
  40d943:	jae    0x40d8d2
  40d945:	pop    ebx
  40d946:	repnz in al,0xf0
  40d949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d94a:	ret    
  40d94b:	stc    
  40d94c:	sti    
  40d94d:	or     ebx,DWORD PTR [edi+0x37]
  40d950:	(bad)  [edi-0x365b73e8]
  40d956:	inc    ebx
  40d957:	push   esp
  40d958:	push   edi
  40d959:	pop    ebx
  40d95a:	cld    
  40d95b:	and    al,BYTE PTR [edx+0x40]
  40d95e:	jnp    0x40d8eb
  40d960:	retf   0xb358
  40d963:	sub    ebx,DWORD PTR [esi]
  40d965:	(bad)  
  40d967:	xchg   esi,eax
  40d968:	mov    esp,0xc426619e
  40d96d:	fs mov bl,0x73
  40d970:	mov    BYTE PTR [edx-0x7b],bl
  40d973:	cdq    
  40d974:	push   eax
  40d975:	inc    BYTE PTR [ecx+0x37]
  40d978:	mov    ?,ebp
  40d97a:	pop    ebx
  40d97b:	mov    dh,0x9d
  40d97d:	cdq    
  40d97e:	enter  0xeac4,0x92
  40d982:	mov    ds:0x2ca731d3,eax
  40d987:	fwait
  40d988:	inc    ecx
  40d989:	mov    esi,0xbf6e56cb
  40d98e:	mov    al,ds:0xab4129d8
  40d993:	imul   esp,DWORD PTR [eax+ebp*1-0x2b],0xffffffd1
  40d998:	fwait
  40d999:	in     al,0xfa
  40d99b:	rcl    ah,1
  40d99d:	ret    
  40d99e:	shl    DWORD PTR [eax+0x358f6dc3],cl
  40d9a4:	add    DWORD PTR [ebp-0x69],ebx
  40d9a7:	adc    DWORD PTR ds:0xbcedfb2c,esp
  40d9ad:	pop    ss
  40d9ae:	push   ebx
  40d9af:	dec    ebp
  40d9b0:	sub    ebx,DWORD PTR [ebx-0xdd7ea0f]
  40d9b6:	(bad)  
  40d9b7:	cmp    BYTE PTR [ebx],bh
  40d9b9:	in     eax,0x24
  40d9bb:	in     eax,0xf6
  40d9bd:	ds dec ebx
  40d9bf:	leave  
  40d9c0:	mul    DWORD PTR gs:[esi]
  40d9c3:	dec    ebx
  40d9c4:	pop    ds
  40d9c5:	repnz cmp al,0x78
  40d9c8:	fmul   DWORD PTR ds:0x88b54dd9
  40d9ce:	les    edi,FWORD PTR [ebp+0x7a]
  40d9d1:	inc    edi
  40d9d2:	out    0xc1,eax
  40d9d4:	mov    bl,0xae
  40d9d6:	pop    edx
  40d9d7:	lock jnp 0x40d997
  40d9da:	(bad)  
  40d9db:	cmc    
  40d9dc:	add    eax,0xad867841
  40d9e1:	(bad)  [edx+eax*8-0x15]
  40d9e5:	sti    
  40d9e6:	sahf   
  40d9e7:	cmp    eax,DWORD PTR [eax-0x5e]
  40d9ea:	add    esp,DWORD PTR [edx+eiz*1]
  40d9ed:	ins    DWORD PTR es:[edi],dx
  40d9ee:	fisttp DWORD PTR [ecx+0x19d843fc]
  40d9f4:	push   ebp
  40d9f5:	retf   
  40d9f6:	hlt    
  40d9f7:	xor    bl,BYTE PTR [ecx+0x41]
  40d9fa:	or     BYTE PTR [ecx-0x1e],0xcd
  40d9fe:	fwait
  40d9ff:	mov    bl,0x9c
  40da01:	mov    ecx,0xd86425a1
  40da06:	out    0x1c,eax
  40da08:	rcr    DWORD PTR [esi+edi*4+0x78],1
  40da0c:	cli    
  40da0d:	outs   dx,BYTE PTR ds:[esi]
  40da0e:	das    
  40da0f:	jecxz  0x40d9d6
  40da11:	hlt    
  40da12:	ja     0x40d9a8
  40da14:	push   ecx
  40da15:	jg     0x40d9bd
  40da17:	adc    DWORD PTR [eax+0x5c],edx
  40da1a:	sub    dh,bh
  40da1c:	cli    
  40da1d:	mov    ch,BYTE PTR [edx+0x68a3e084]
  40da23:	stc    
  40da24:	loop   0x40d9e5
  40da26:	push   cs
  40da27:	sahf   
  40da28:	pop    edi
  40da29:	and    ch,BYTE PTR [eax+0x18]
  40da2c:	test   BYTE PTR [ebp-0x17e5f51e],dl
  40da32:	lds    esi,FWORD PTR [eax+0x40]
  40da35:	out    dx,al
  40da36:	(bad)  
  40da37:	ins    DWORD PTR es:[edi],dx
  40da38:	sbb    ebx,DWORD PTR [edx+0x28114688]
  40da3e:	mov    eax,0x119b0efa
  40da43:	pop    edi
  40da44:	push   0x40a402aa
  40da49:	jmp    0xe2f67f56
  40da4e:	(bad)  
  40da4f:	data16 stc 
  40da51:	out    0xd1,eax
  40da53:	mov    ds:0x25915329,al
  40da58:	aas    
  40da59:	hlt    
  40da5a:	aaa    
  40da5b:	add    al,0x71
  40da5d:	mov    dh,BYTE PTR [esi+0x2e]
  40da60:	pop    ecx
  40da61:	pushf  
  40da62:	sub    ch,BYTE PTR [ecx+0x4a]
  40da65:	aaa    
  40da66:	pop    ebp
  40da67:	out    dx,eax
  40da68:	cmc    
  40da69:	add    edi,edi
  40da6b:	inc    eax
  40da6c:	(bad)  
  40da6d:	jl     0x40da9d
  40da6f:	mov    ecx,0x19596217
  40da74:	ds je  0x40dac1
  40da77:	div    BYTE PTR [eax+eax*2]
  40da7a:	cmp    esi,DWORD PTR [ecx]
  40da7c:	xor    al,0x67
  40da7e:	xchg   ebx,eax
  40da7f:	dec    edi
  40da80:	imul   edi,ebx,0xba9522e7
  40da86:	xor    ebp,DWORD PTR [ebp+0xfd60501]
  40da8c:	fimul  WORD PTR [esi-0x613abe73]
  40da92:	add    bh,bl
  40da94:	test   DWORD PTR [edi+0x9b8e435],0xa9908ad6
  40da9e:	cwde   
  40da9f:	xor    eax,0xf5fc58a
  40daa4:	mov    dh,0x74
  40daa6:	push   ss
  40daa7:	mov    ebp,0x3b662dd9
  40daac:	mov    ebp,0x745e31c9
  40dab1:	add    DWORD PTR [eax-0x11b031c1],ebx
  40dab7:	loope  0x40da75
  40dab9:	(bad)  
  40daba:	icebp  
  40dabb:	inc    esp
  40dabc:	lods   al,BYTE PTR ds:[esi]
  40dabd:	or     BYTE PTR [edi+esi*2-0x15],ah
  40dac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dac2:	mov    eax,0xf034493f
  40dac7:	fistp  QWORD PTR [ecx-0x43a473ce]
  40dacd:	lock inc eax
  40dacf:	jp     0x40da98
  40dad1:	(bad)  
  40dad2:	ficom  DWORD PTR [ebx+eax*2-0x60]
  40dad6:	xchg   edx,eax
  40dad7:	mov    BYTE PTR ss:[edi],cl
  40dada:	shl    ch,0x13
  40dadd:	inc    ebp
  40dade:	dec    ebx
  40dadf:	call   0xdc57:0xbb71ffe8
  40dae6:	xchg   DWORD PTR [esi+eax*4-0x554176f7],edx
  40daed:	cmp    eax,0x517c160a
  40daf2:	lods   al,BYTE PTR ds:[esi]
  40daf3:	lahf   
  40daf4:	ror    DWORD PTR [ebp+ebp*8-0x757ea703],0x7d
  40dafc:	cmc    
  40dafd:	ss fwait
  40daff:	nop
  40db00:	xor    dh,al
  40db02:	out    0x1a,al
  40db04:	sti    
  40db05:	mov    edi,0xbee71198
  40db0a:	and    BYTE PTR [edx+edi*4],dl
  40db0d:	xchg   edi,eax
  40db0e:	fsub   QWORD PTR [edx]
  40db10:	sbb    al,0xea
  40db12:	mov    ecx,0xdb601f88
  40db17:	dec    ebx
  40db18:	push   ds
  40db19:	cmc    
  40db1a:	sub    DWORD PTR [ebx],edi
  40db1c:	adc    eax,esp
  40db1e:	inc    ebp
  40db1f:	mov    ecx,0x6bd1da4a
  40db24:	rol    DWORD PTR [ebx+eax*1],1
  40db27:	push   ebp
  40db28:	sti    
  40db29:	mov    ds:0xf9676b5f,al
  40db2e:	ss popf 
  40db30:	fadd   st,st(2)
  40db32:	int    0x1f
  40db34:	scas   al,BYTE PTR es:[edi]
  40db35:	stos   BYTE PTR es:[edi],al
  40db36:	jg     0x40dafd
  40db38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db39:	and    al,dl
  40db3b:	jnp    0x40db86
  40db3d:	mov    edx,0x9135f7cb
  40db42:	push   ss
  40db43:	xor    eax,0x52fb7c33
  40db48:	stc    
  40db49:	adc    BYTE PTR ds:0xf0b2ba59,bh
  40db4f:	cmp    BYTE PTR [edx-0x13],0xef
  40db53:	ins    DWORD PTR es:[edi],dx
  40db54:	jmp    0xbc8f:0x23a5bc0d
  40db5b:	pop    edx
  40db5c:	inc    ebx
  40db5d:	icebp  
  40db5e:	cmp    DWORD PTR ds:0x9fe0bb99,0x4949baff
  40db68:	pop    ecx
  40db69:	mov    bh,0xba
  40db6b:	xor    BYTE PTR [ebp+0x46],dh
  40db6e:	cmc    
  40db6f:	hlt    
  40db70:	xor    ebx,DWORD PTR [ebx+edi*1]
  40db73:	adc    BYTE PTR [eax-0x661b6565],dl
  40db79:	sub    eax,0xb8a117f8
  40db7e:	(bad)  
  40db7f:	and    BYTE PTR [ebx-0x1eb592ef],cl
  40db85:	mov    ch,al
  40db87:	cmp    BYTE PTR [edi],ah
  40db89:	pushf  
  40db8a:	rcl    DWORD PTR [edx*1+0x148a21fd],0x10
  40db92:	fild   WORD PTR [eax+0x34bd0a5]
  40db98:	sar    cl,0x37
  40db9b:	pop    ebx
  40db9c:	iret   
  40db9d:	icebp  
  40db9e:	call   0xf321:0x62d867c4
  40dba5:	jae    0x40dba9
  40dba7:	int    0x28
  40dba9:	inc    esi
  40dbaa:	sub    BYTE PTR [esi+0x5b],bh
  40dbad:	xlat   BYTE PTR ds:[ebx]
  40dbae:	dec    ecx
  40dbaf:	fcom   QWORD PTR [edi+ebx*4+0x20f25b36]
  40dbb6:	jne    0x40dbde
  40dbb8:	mov    edx,0x2822d317
  40dbbd:	fwait
  40dbbe:	and    al,0x1c
  40dbc0:	mov    esi,0xbc0d02b5
  40dbc5:	out    dx,eax
  40dbc6:	shl    BYTE PTR [esi+0x68],1
  40dbc9:	and    esp,DWORD PTR [ebx]
  40dbcb:	mov    eax,DWORD PTR [ebx+0x36]
  40dbce:	xchg   BYTE PTR [ebx],ch
  40dbd0:	sub    BYTE PTR [edx],dl
  40dbd2:	stos   DWORD PTR es:[edi],eax
  40dbd3:	push   edi
  40dbd4:	(bad)
  40dbd8:	mov    BYTE PTR [edx],cl
  40dbda:	(bad)  
  40dbdc:	cli    
  40dbdd:	test   esp,0x1fda78f7
  40dbe3:	sbb    edx,DWORD PTR [eax]
  40dbe5:	jl     0x40dc06
  40dbe7:	pop    es
  40dbe8:	rcl    BYTE PTR [ebx],0x24
  40dbeb:	std    
  40dbec:	fadd   QWORD PTR [ecx]
  40dbee:	ja     0x40dc3c
  40dbf0:	and    bl,BYTE PTR [esi+0x5b]
  40dbf3:	leave  
  40dbf4:	ret    0x4
  40dbf7:	push   ebp
  40dbf8:	mov    ebp,esp
  40dbfa:	sub    esp,0x20
  40dbfd:	push   ebx
  40dbfe:	push   edi
  40dbff:	mov    DWORD PTR [ebp-0x8],0x522e
  40dc06:	mov    DWORD PTR [ebp-0x4],0x3dbd
  40dc0d:	mov    DWORD PTR [ebp-0x10],0x53f1
  40dc14:	mov    DWORD PTR [ebp-0xc],0x631b
  40dc1b:	jmp    0x40deaa
  40dc20:	dec    ebx
  40dc21:	pop    esi
  40dc22:	xchg   ebp,eax
  40dc23:	idiv   DWORD PTR [eax+edi*1-0x2a408d55]
  40dc2a:	push   ss
  40dc2b:	rcr    DWORD PTR [ecx+0x39d1684a],1
  40dc31:	clc    
  40dc32:	mov    esi,0xbec299be
  40dc37:	mov    esi,0xd95fc9e6
  40dc3c:	dec    ebp
  40dc3d:	dec    ebx
  40dc3e:	cmp    BYTE PTR ds:0x83601cf5,dl
  40dc44:	sbb    BYTE PTR [edx+0x1d],bh
  40dc47:	std    
  40dc48:	inc    edi
  40dc49:	mov    bl,0x14
  40dc4b:	pop    ebp
  40dc4c:	fdiv   DWORD PTR [ebp+0x3b6bd77e]
  40dc52:	loopne 0x40dc53
  40dc54:	cs gs aad 0xeb
  40dc58:	js     0x40dc84
  40dc5a:	aad    0xaa
  40dc5c:	cmp    edx,DWORD PTR [eax+0x1e]
  40dc5f:	push   eax
  40dc60:	(bad)  [edx-0x9242e81]
  40dc66:	retf   
  40dc67:	js     0x40dbfb
  40dc69:	push   edx
  40dc6a:	clc    
  40dc6b:	scas   al,BYTE PTR es:[edi]
  40dc6c:	xchg   esi,eax
  40dc6d:	inc    ecx
  40dc6e:	inc    esp
  40dc6f:	enter  0xe68,0xdc
  40dc73:	sbb    BYTE PTR [edx-0xf6cf0f1],ah
  40dc79:	jo     0x40dcfa
  40dc7b:	jp     0x40dc80
  40dc7d:	add    DWORD PTR [ebp+0x59],esi
  40dc80:	push   cs
  40dc81:	mov    bh,0x4c
  40dc83:	xor    edx,esi
  40dc85:	sub    al,0x47
  40dc87:	push   0x6d4907fc
  40dc8c:	push   ebx
  40dc8d:	mov    dl,0x43
  40dc8f:	nop
  40dc90:	sbb    al,0x1f
  40dc92:	jmp    0xde9a:0x7b4275ad
  40dc99:	sbb    edx,DWORD PTR [edx+0x7dbf91ae]
  40dc9f:	lock je 0x40dd1f
  40dca2:	add    BYTE PTR [ecx-0x28],0x14
  40dca6:	dec    ecx
  40dca7:	shl    DWORD PTR [edi-0x50705c43],cl
  40dcad:	xor    eax,0xc68602e8
  40dcb2:	mov    al,0x4d
  40dcb4:	push   0x8c80d161
  40dcb9:	dec    edi
  40dcba:	xor    eax,0x28094860
  40dcbf:	test   eax,0x519002cb
  40dcc4:	ds pop esp
  40dcc6:	xchg   esp,eax
  40dcc7:	fdivr  QWORD PTR [edx+0x50]
  40dcca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dccb:	push   edx
  40dccc:	call   0x7ba7:0x2d1fb1cb
  40dcd3:	bound  edi,QWORD PTR [esi]
  40dcd5:	fsub   QWORD PTR [eax+0x426ac4c]
  40dcdb:	test   BYTE PTR [ebp-0x6e],dh
  40dcde:	into   
  40dcdf:	inc    eax
  40dce0:	and    al,0xc9
  40dce2:	aas    
  40dce3:	mov    BYTE PTR [edx],bh
  40dce5:	fistp  WORD PTR [ecx-0x3e70fcb2]
  40dceb:	ret    
  40dcec:	ins    BYTE PTR es:[edi],dx
  40dced:	add    edx,DWORD PTR [ebx+0x33]
  40dcf0:	xor    al,0x42
  40dcf2:	push   cs
  40dcf3:	fs cdq 
  40dcf5:	sub    dh,bl
  40dcf7:	cmp    dl,al
  40dcf9:	iret   
  40dcfa:	sbb    al,0xe
  40dcfc:	xor    DWORD PTR [edx+0x49],ecx
  40dcff:	cmp    al,0x8c
  40dd01:	push   esi
  40dd02:	push   0x4a14b5e2
  40dd07:	aaa    
  40dd08:	push   ecx
  40dd09:	int3   
  40dd0a:	cli    
  40dd0b:	jb     0x40dd81
  40dd0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd0e:	and    edi,DWORD PTR [edx+0x7e]
  40dd11:	xor    al,0xc6
  40dd13:	loopne 0x40dcbc
  40dd15:	and    BYTE PTR [eax-0x59],dh
  40dd18:	add    DWORD PTR [ebx-0xc],esi
  40dd1b:	jmp    DWORD PTR [ecx+0x30]
  40dd1e:	and    edi,DWORD PTR [edi+ebx*1]
  40dd21:	daa    
  40dd22:	push   cs
  40dd23:	dec    ebp
  40dd24:	add    BYTE PTR [ebx],dl
  40dd26:	xor    al,0xf1
  40dd28:	fist   WORD PTR [esi]
  40dd2a:	ds clc 
  40dd2c:	les    esi,FWORD PTR [ecx]
  40dd2e:	ss ins DWORD PTR es:[edi],dx
  40dd30:	je     0x40dcfb
  40dd32:	xor    BYTE PTR [edi-0x5c54bf59],dh
  40dd38:	nop
  40dd39:	mov    bl,0xca
  40dd3b:	in     eax,dx
  40dd3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd3d:	sti    
  40dd3e:	adc    ecx,ebx
  40dd40:	cdq    
  40dd41:	stos   DWORD PTR es:[edi],eax
  40dd42:	loop   0x40dd7b
  40dd44:	hlt    
  40dd45:	mov    dh,al
  40dd47:	xchg   ebx,eax
  40dd48:	mov    bh,0x55
  40dd4a:	push   cs
  40dd4b:	out    0x87,eax
  40dd4d:	or     BYTE PTR [esi-0x5949af12],dl
  40dd53:	pop    ebp
  40dd54:	clc    
  40dd55:	add    DWORD PTR [edx+ecx*4-0x2d],ecx
  40dd59:	outs   dx,BYTE PTR ds:[esi]
  40dd5a:	mov    bh,0x55
  40dd5c:	gs dec esp
  40dd5e:	dec    bh
  40dd60:	dec    ecx
  40dd61:	cmp    eax,0x76076483
  40dd66:	inc    esi
  40dd67:	(bad)  
  40dd68:	fist   WORD PTR [ebp+0x4e3368]
  40dd6e:	call   0x9abfb5dc
  40dd73:	push   ecx
  40dd74:	or     al,0x16
  40dd76:	xor    al,BYTE PTR [ebp+eax*2+0x63]
  40dd7a:	cmp    BYTE PTR [edi-0x67cb5883],0x3b
  40dd81:	xchg   ecx,eax
  40dd82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd83:	sbb    al,0xcf
  40dd85:	xor    BYTE PTR [ebp+0x54],0xc6
  40dd89:	dec    esp
  40dd8a:	aam    0xf0
  40dd8c:	popf   
  40dd8d:	imul   BYTE PTR [ebx-0x650fc4ab]
  40dd93:	enter  0xa81f,0xf7
  40dd97:	xchg   dl,ch
  40dd99:	cmp    esp,DWORD PTR gs:[esp+edi*1+0x44]
  40dd9e:	mov    eax,DWORD PTR [edi]
  40dda0:	mov    bl,0xed
  40dda2:	iret   
  40dda3:	push   ss
  40dda4:	neg    DWORD PTR ss:[edi-0x6572dcb]
  40ddab:	cwde   
  40ddac:	mov    bh,0x29
  40ddae:	mov    dl,0x52
  40ddb0:	(bad)  
  40ddb1:	push   edx
  40ddb2:	into   
  40ddb3:	mov    ds:0x76d63fc9,eax
  40ddb8:	mov    edx,0xa4c31be1
  40ddbd:	hlt    
  40ddbe:	sahf   
  40ddbf:	ins    BYTE PTR es:[edi],dx
  40ddc0:	push   ds
  40ddc1:	cmp    ebp,edi
  40ddc3:	pushf  
  40ddc4:	xor    eax,ebx
  40ddc6:	jle    0x40de18
  40ddc8:	mov    al,ds:0x41f577a3
  40ddcd:	or     esp,DWORD PTR [ebp-0x79]
  40ddd0:	xchg   ecx,eax
  40ddd1:	pop    ss
  40ddd2:	nop
  40ddd3:	inc    esp
  40ddd4:	mov    dl,0x56
  40ddd6:	jmp    0x513:0xa495568a
  40dddd:	inc    ebp
  40ddde:	inc    edx
  40dddf:	stos   BYTE PTR es:[edi],al
  40dde0:	les    edi,FWORD PTR [edx]
  40dde2:	and    ch,BYTE PTR [edx+eiz*1-0x7895e259]
  40dde9:	(bad)
  40ddee:	clc    
  40ddef:	les    ecx,FWORD PTR [edi-0x4e93891d]
  40ddf5:	fist   DWORD PTR [ebx-0x4652726f]
  40ddfb:	call   0x34667d4f
  40de00:	ret    
  40de01:	loopne 0x40dd88
  40de03:	sub    BYTE PTR ds:0xc9fb56e5,cl
  40de09:	xor    eax,0x88551ece
  40de0e:	outs   dx,DWORD PTR ds:[esi]
  40de0f:	in     al,0xa7
  40de11:	dec    esp
  40de12:	(bad)  
  40de13:	sub    eax,0x6382d2e9
  40de18:	repz call 0xe5a974b0
  40de1e:	sbb    al,0xdf
  40de20:	test   BYTE PTR [eax],0x46
  40de23:	sub    bl,ch
  40de25:	fcmovnbe st,st(4)
  40de27:	jns    0x40de1b
  40de29:	ror    DWORD PTR [eax-0x2b],0x9b
  40de2d:	fisubr WORD PTR [esi-0x3d]
  40de30:	rol    DWORD PTR [ecx],1
  40de32:	enter  0x78d9,0xad
  40de36:	mov    ebp,0x161376ee
  40de3b:	icebp  
  40de3c:	inc    eax
  40de3d:	add    bh,BYTE PTR [ebx]
  40de3f:	pushf  
  40de40:	ds shr al,cl
  40de43:	fmul   st(3),st
  40de45:	pop    edi
  40de46:	cld    
  40de47:	xor    eax,0xb020807e
  40de4c:	pusha  
  40de4d:	jb     0x40dec0
  40de4f:	aam    0x6f
  40de51:	shl    DWORD PTR [ebp-0x59fca824],0xc7
  40de58:	loop   0x40deb6
  40de5a:	and    ch,0xd4
  40de5d:	xlat   BYTE PTR ds:[ebx]
  40de5e:	adc    eax,0x80c72ccd
  40de63:	and    eax,0x41cd779c
  40de68:	add    BYTE PTR [eax],bh
  40de6a:	(bad)  
  40de6b:	mov    ah,0x8
  40de6d:	stos   BYTE PTR es:[edi],al
  40de6e:	repnz push eax
  40de70:	cdq    
  40de71:	cmp    dh,al
  40de73:	sbb    ah,BYTE PTR [eax+ebp*4-0x52c94013]
  40de7a:	mov    BYTE PTR [edx],dh
  40de7c:	hlt    
  40de7d:	dec    ecx
  40de7e:	jno    0x40de76
  40de80:	repz int 0x81
  40de83:	mov    esp,0x22a0922d
  40de88:	mov    DWORD PTR [ebx],eax
  40de8a:	(bad)  
  40de8b:	adc    esi,DWORD PTR [esi]
  40de8d:	(bad)  
  40de8e:	mov    eax,0xb5d6a844
  40de93:	neg    al
  40de95:	push   edx
  40de96:	mov    ch,0x76
  40de98:	cwde   
  40de99:	xchg   ebp,eax
  40de9a:	mov    cl,0xc
  40de9c:	bswap  esi
  40de9e:	dec    esp
  40de9f:	add    al,0xa9
  40dea1:	outs   dx,DWORD PTR ds:[esi]
  40dea2:	outs   dx,DWORD PTR ds:[esi]
  40dea3:	cld    
  40dea4:	jns    0x40deca
  40dea6:	popa   
  40dea7:	fisub  DWORD PTR [ebx-0x17ba3867]
  40dead:	dec    ebp
  40deae:	push   edx
  40deaf:	add    BYTE PTR [eax],al
  40deb1:	mov    DWORD PTR [ebp-0x14],0x1600
  40deb8:	mov    eax,DWORD PTR [ebp-0x18]
  40debb:	mov    ecx,DWORD PTR [ebp-0x14]
  40debe:	mov    edx,DWORD PTR [ebp-0x10]
  40dec1:	mov    edi,DWORD PTR [ebp-0xc]
  40dec4:	push   edi
  40dec5:	push   edx
  40dec6:	push   ecx
  40dec7:	push   eax
  40dec8:	call   0x41594e
  40decd:	mov    ecx,DWORD PTR [ebp-0x8]
  40ded0:	mov    edi,DWORD PTR [ebp-0x4]
  40ded3:	add    eax,0x1dc8
  40ded8:	adc    edx,0x6fbf
  40dede:	and    edx,edi
  40dee0:	push   0x1061
  40dee5:	and    eax,ecx
  40dee7:	or     edx,0x23ff
  40deed:	push   0x4000022f
  40def2:	or     eax,0x58c4
  40def7:	xor    edx,0x7a7a
  40defd:	xor    eax,0x5278
  40df02:	push   edx
  40df03:	push   eax
  40df04:	call   0x42227d
  40df09:	jmp    0x40e198
  40df0e:	and    eax,0x8c7544dd
  40df13:	jnp    0x40df51
  40df15:	scas   al,BYTE PTR es:[edi]
  40df16:	fs aam 0x9e
  40df19:	nop
  40df1a:	aas    
  40df1b:	mov    ds:0xfc16dd04,al
  40df20:	mov    esi,0xbec299be
  40df25:	mov    esi,0x8ccf690e
  40df2a:	cmp    edi,DWORD PTR [edi-0x6bb133e2]
  40df30:	dec    eax
  40df31:	fst    st(2)
  40df33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df34:	shr    eax,cl
  40df36:	jle    0x40decb
  40df38:	mov    eax,ds:0x3a5aa896
  40df3d:	inc    ebp
  40df3e:	(bad)
  40df42:	xchg   ebx,eax
  40df43:	push   ebx
  40df44:	mov    edx,0x40e9864
  40df49:	push   edi
  40df4a:	mov    dh,0xe8
  40df4c:	int    0x77
  40df4e:	imul   edi,DWORD PTR [eax],0xffffffaa
  40df51:	data16 stc 
  40df53:	ins    BYTE PTR es:[edi],dx
  40df54:	push   0xffffff9f
  40df56:	sbb    edi,esi
  40df58:	push   esi
  40df59:	jbe    0x40def0
  40df5b:	fdiv   DWORD PTR [esi+0x6b33abe5]
  40df61:	jae    0x40dfbf
  40df63:	push   ss
  40df64:	mov    ecx,0xd7b6ada9
  40df69:	sub    eax,0x1e63e92c
  40df6e:	cmp    dh,BYTE PTR [ecx+0x5f49fda3]
  40df74:	cdq    
  40df75:	fdiv   st,st(6)
  40df77:	iret   
  40df78:	adc    DWORD PTR [ecx+ebx*4],edi
  40df7b:	add    dh,BYTE PTR gs:[edx-0x7dbca9a8]
  40df82:	imul   edx,esp,0xb3ddb91
  40df88:	sub    BYTE PTR [esi+0x63],dh
  40df8b:	jge    0x40df2e
  40df8d:	xor    al,0x6a
  40df8f:	mov    ebp,0x9c90eba4
  40df94:	jno    0x40df44
  40df96:	sbb    al,0xa
  40df98:	ret    
  40df99:	pop    ebx
  40df9a:	(bad)  
  40df9c:	mov    ebp,0xf2161dc0
  40dfa1:	or     ah,BYTE PTR [eax+0xa]
  40dfa4:	pop    ebp
  40dfa5:	mov    eax,ds:0xaea9dcaf
  40dfaa:	sbb    ah,bh
  40dfac:	add    bl,BYTE PTR [esi]
  40dfae:	cmp    DWORD PTR [eax],edi
  40dfb0:	inc    BYTE PTR [ecx-0x1]
  40dfb3:	mov    ah,0x46
  40dfb5:	sti    
  40dfb6:	push   eax
  40dfb7:	mov    DWORD PTR [edx+ebx*8],ebp
  40dfba:	mov    al,ds:0xbdd63fba
  40dfbf:	repz cmp BYTE PTR [eax-0x282f4e5c],ch
  40dfc6:	and    al,0xf6
  40dfc8:	jno    0x40df61
  40dfca:	and    ebp,edi
  40dfcc:	(bad)
  40dfd1:	mov    ebx,0x941559c4
  40dfd6:	push   ds
  40dfd7:	cwde   
  40dfd8:	in     eax,0xf0
  40dfda:	xor    ah,bh
  40dfdc:	mov    BYTE PTR [esi],cl
  40dfde:	or     BYTE PTR [ebp+0xe],0x87
  40dfe2:	arpl   WORD PTR [eax-0x6643e24f],si
  40dfe8:	and    al,ah
  40dfea:	shl    ebp,0x66
  40dfed:	fnsave [ebx+0x7a]
  40dff0:	std    
  40dff1:	jo     0x40df99
  40dff3:	sar    DWORD PTR es:[ecx],cl
  40dff6:	dec    ebp
  40dff7:	cmp    dl,dl
  40dff9:	(bad)  
  40dffa:	push   eax
  40dffb:	leave  
  40dffc:	mov    edx,0xab404543
  40e001:	dec    esi
  40e002:	add    dl,BYTE PTR [eax+0x1097e57f]
  40e008:	data16 rcr BYTE PTR ss:[ebx-0xa48ae6],cl
  40e010:	aam    0xa0
  40e012:	jecxz  0x40e008
  40e014:	pop    ebx
  40e015:	out    0xce,eax
  40e017:	xlat   BYTE PTR ds:[ebx]
  40e018:	jo     0x40e073
  40e01a:	outs   dx,BYTE PTR ds:[esi]
  40e01b:	or     esp,DWORD PTR [edx-0x24ed987e]
  40e021:	leave  
  40e022:	iret   
  40e023:	inc    ebp
  40e024:	stos   DWORD PTR es:[edi],eax
  40e025:	shr    BYTE PTR [ebp+0x716481e9],1
  40e02b:	clc    
  40e02c:	cmp    ch,BYTE PTR [esi]
  40e02e:	sub    DWORD PTR [edi],ecx
  40e030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e031:	jo     0x40e0a3
  40e033:	or     ebx,DWORD PTR [ecx]
  40e035:	sub    DWORD PTR [ebp+eiz*8-0x45],eax
  40e039:	fiadd  DWORD PTR es:[edx+ecx*8+0x3b]
  40e03e:	jae    0x40e0a3
  40e040:	outs   dx,BYTE PTR ds:[esi]
  40e041:	push   0xffffffef
  40e043:	out    0xc9,al
  40e045:	xchg   ecx,eax
  40e046:	loope  0x40e0ae
  40e048:	add    ecx,DWORD PTR [ebx]
  40e04a:	push   esp
  40e04b:	jo     0x40e061
  40e04d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e04e:	inc    ebp
  40e04f:	push   ebx
  40e050:	(bad)  
  40e051:	adc    eax,0xe3762e1d
  40e056:	adc    dh,BYTE PTR [ecx-0xd]
  40e059:	and    ebx,ebx
  40e05b:	adc    al,0x6b
  40e05d:	adc    BYTE PTR [esp+ebx*4+0x7216bbb3],0xec
  40e065:	ins    BYTE PTR es:[edi],dx
  40e066:	call   0x163345b
  40e06b:	inc    eax
  40e06c:	imul   ebp,DWORD PTR [ebp-0xd77157a],0x1
  40e073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e074:	inc    ebp
  40e075:	stos   BYTE PTR es:[edi],al
  40e076:	cdq    
  40e077:	fidiv  WORD PTR [edx+0x3d]
  40e07a:	dec    ecx
  40e07b:	retf   
  40e07c:	xor    eax,0xd4973d2d
  40e081:	and    cl,ah
  40e083:	xchg   esp,eax
  40e084:	add    eax,0x600405b
  40e089:	shr    ebp,1
  40e08b:	add    eax,0xb7eb6676
  40e090:	bound  eax,QWORD PTR [esi-0x502f2c82]
  40e096:	jg     0x40e0f1
  40e098:	(bad)  
  40e099:	push   ecx
  40e09a:	dec    esi
  40e09b:	mov    esp,0x3eaddff8
  40e0a0:	dec    eax
  40e0a1:	sub    DWORD PTR [esi-0x70b9ded8],0xffffffe6
  40e0a8:	retf   0x1514
  40e0ab:	jg     0x40e10b
  40e0ad:	into   
  40e0ae:	add    bh,BYTE PTR [ebx]
  40e0b0:	and    eax,0x76a45ead
  40e0b5:	mov    ch,0x0
  40e0b7:	iret   
  40e0b8:	pop    ds
  40e0b9:	jl     0x40e0de
  40e0bb:	adc    BYTE PTR [ebx+edx*2-0x8192c72],0xb1
  40e0c3:	adc    DWORD PTR [edx],eax
  40e0c5:	in     al,dx
  40e0c6:	arpl   WORD PTR [esi-0x3f],ax
  40e0c9:	jne    0x40e087
  40e0cb:	add    BYTE PTR ds:0x457ae504,0xa2
  40e0d2:	jle    0x40e0c6
  40e0d4:	jmp    0xc594fe19
  40e0d9:	ret    0xa3bd
  40e0dc:	cmp    DWORD PTR [esi],esp
  40e0de:	jge    0x40e10f
  40e0e0:	cmp    eax,0x8111cd14
  40e0e5:	pop    ss
  40e0e6:	into   
  40e0e7:	mov    eax,0x74b51647
  40e0ec:	shl    BYTE PTR [edx+0x7d180fc1],cl
  40e0f2:	xchg   bl,ch
  40e0f4:	rol    DWORD PTR [esi+ebx*8-0x51cfab70],0x68
  40e0fc:	nop
  40e0fd:	adc    dl,BYTE PTR [edi]
  40e0ff:	mul    DWORD PTR [esi]
  40e101:	fs mov ch,0x7f
  40e104:	imul   ecx,ecx,0x77a21ae
  40e10a:	out    0x71,al
  40e10c:	repz add BYTE PTR [ebx+0x5f3dd7ad],dh
  40e113:	call   0x48b0d011
  40e118:	push   cs
  40e119:	mov    ebx,0x681f1db9
  40e11e:	mov    cl,0xf4
  40e120:	sbb    eax,0x65052a45
  40e125:	stos   BYTE PTR es:[edi],al
  40e126:	sub    bh,bl
  40e128:	inc    ecx
  40e129:	inc    ebp
  40e12a:	xor    BYTE PTR [ecx+0x15],bl
  40e12d:	in     eax,dx
  40e12e:	adc    ch,ch
  40e130:	and    edx,DWORD PTR [ebx+ebx*8-0xddb3f7]
  40e137:	ins    DWORD PTR es:[edi],dx
  40e138:	out    dx,eax
  40e139:	cmc    
  40e13a:	retf   0xc44
  40e13d:	dec    ecx
  40e13e:	sub    DWORD PTR [esi+0x72],0x3f7b30da
  40e145:	push   eax
  40e146:	xor    DWORD PTR [edi-0x41622b2a],eax
  40e14c:	mov    ds:0x9c8f6e5c,eax
  40e151:	leave  
  40e152:	pop    esi
  40e153:	mov    bh,0x72
  40e155:	xchg   edi,eax
  40e156:	inc    ebx
  40e157:	in     al,dx
  40e158:	mov    edi,0xd5217b6e
  40e15d:	(bad)  
  40e15e:	sbb    esi,DWORD PTR [edi]
  40e160:	add    BYTE PTR [eax],0x3
  40e163:	rcr    esi,1
  40e165:	cli    
  40e166:	test   al,0xd4
  40e168:	xchg   esi,eax
  40e169:	or     al,0xe6
  40e16b:	pop    ds
  40e16c:	inc    esp
  40e16d:	or     eax,0xeeca7514
  40e172:	(bad)  
  40e173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e174:	pusha  
  40e175:	mov    WORD PTR [edx+eax*8-0x3959cb1a],ss
  40e17c:	pop    ecx
  40e17d:	xchg   edi,eax
  40e17e:	pop    esp
  40e17f:	ja     0x40e123
  40e181:	call   0xa436:0xce822374
  40e188:	loop   0x40e17a
  40e18a:	lods   eax,DWORD PTR ds:[esi]
  40e18b:	call   0x64e1821b
  40e190:	add    BYTE PTR [eax-0x5e75b908],bl
  40e196:	sar    BYTE PTR [eax],0x89
  40e199:	push   es
  40e19a:	mov    DWORD PTR [ebp-0x20],0x3354
  40e1a1:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  40e1a8:	mov    DWORD PTR [ebp-0x18],0x3d36
  40e1af:	mov    DWORD PTR [ebp-0x14],0x51ef
  40e1b6:	xor    edi,edi
  40e1b8:	mov    DWORD PTR [ebp-0xc],0x3358
  40e1bf:	push   0xc9f
  40e1c4:	jmp    0x40e453
  40e1c9:	jecxz  0x40e232
  40e1cb:	fscale 
  40e1cd:	pop    edx
  40e1ce:	mov    ah,0x3c
  40e1d0:	lods   al,BYTE PTR ds:[esi]
  40e1d1:	je     0x40e1fd
  40e1d3:	push   eax
  40e1d4:	sahf   
  40e1d5:	aaa    
  40e1d6:	mov    eax,0x2f1dd30
  40e1db:	mov    esi,0xbec299be
  40e1e0:	mov    esi,0x8c80936d
  40e1e5:	push   ecx
  40e1e6:	(bad)  
  40e1e7:	sbb    edx,DWORD PTR [eax+0x6e]
  40e1ea:	pop    es
  40e1eb:	(bad)  
  40e1ec:	mov    ebp,0x23bf0c13
  40e1f1:	dec    ebx
  40e1f2:	jg     0x40e228
  40e1f4:	mov    ah,0xd2
  40e1f6:	push   edx
  40e1f7:	mov    al,0x48
  40e1f9:	fstp   QWORD PTR [eax+0x1d81373e]
  40e1ff:	test   BYTE PTR [edx-0x3d86d624],dl
  40e205:	push   esi
  40e206:	imul   edx,ebx,0x84e39e8
  40e20c:	pop    ecx
  40e20d:	shl    DWORD PTR [edi+0x7de4f07],cl
  40e213:	int    0xc2
  40e215:	in     al,dx
  40e216:	xor    cl,BYTE PTR [ebx-0x3f4c778d]
  40e21c:	xor    ebx,edx
  40e21e:	mov    ds:0x14bc5436,al
  40e223:	fcmovnbe st,st(5)
  40e225:	test   eax,ecx
  40e227:	les    ebp,FWORD PTR [esi-0x63]
  40e22a:	cld    
  40e22b:	loopne 0x40e1ef
  40e22d:	or     al,0x74
  40e230:	loope  0x40e21e
  40e232:	es das 
  40e234:	jae    0x40e1d3
  40e236:	sar    DWORD PTR [ebp+0x59],0x30
  40e23a:	mov    ch,0x99
  40e23c:	push   esp
  40e23d:	pushf  
  40e23e:	xor    BYTE PTR [edi+0x6f],bl
  40e241:	sbb    BYTE PTR [esi],dh
  40e243:	test   DWORD PTR [esi],0xdfd6e354
  40e249:	ja     0x40e2c1
  40e24b:	adc    eax,0x6fe2542f
  40e250:	scas   al,BYTE PTR es:[edi]
  40e251:	jno    0x40e240
  40e253:	push   ds
  40e254:	(bad)  
  40e255:	icebp  
  40e256:	sbb    edx,DWORD PTR [esi+0x22]
  40e259:	jge    0x40e1fd
  40e25b:	sti    
  40e25c:	jg     0x40e254
  40e25e:	popa   
  40e25f:	mov    edi,0x3567d0a
  40e264:	ds sub ch,dh
  40e267:	sub    al,0xd6
  40e269:	das    
  40e26a:	jnp    0x40e230
  40e26c:	fs xchg esp,eax
  40e26e:	pop    ebp
  40e26f:	mov    esp,0x6f478078
  40e274:	pop    edi
  40e275:	daa    
  40e276:	jno    0x40e1fc
  40e278:	fimul  DWORD PTR [esi]
  40e27a:	mov    ebp,edx
  40e27c:	rol    esi,cl
  40e27e:	xchg   ebp,eax
  40e27f:	in     eax,dx
  40e280:	leave  
  40e281:	js     0x40e2c0
  40e283:	out    0xac,al
  40e285:	mov    ebx,0xd5188e05
  40e28a:	fild   QWORD PTR [eax+eiz*2+0x6c]
  40e28e:	repz dec esp
  40e290:	repnz adc DWORD PTR [ecx],esp
  40e293:	xor    bl,dh
  40e295:	cmp    BYTE PTR gs:[bx+di-0xd],0x93
  40e29b:	loope  0x40e26a
  40e29d:	mov    bl,0xa1
  40e29f:	loope  0x40e2c6
  40e2a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2a2:	and    al,0xcc
  40e2a4:	mov    al,ds:0x28161f3b
  40e2a9:	adc    ah,0xfb
  40e2ac:	das    
  40e2ad:	je     0x40e311
  40e2af:	ret    
  40e2b0:	or     al,0x18
  40e2b2:	std    
  40e2b3:	pusha  
  40e2b4:	mov    BYTE PTR [edi+edi*1],bh
  40e2b7:	jmp    0xf6c3:0xb4010e54
  40e2be:	pop    edi
  40e2bf:	test   BYTE PTR [ebx],dh
  40e2c1:	rcr    BYTE PTR [ebp-0x7d1223b9],cl
  40e2c7:	mov    ds:0x765aa882,eax
  40e2cc:	jle    0x40e251
  40e2ce:	sbb    DWORD PTR [edi-0x1d],esp
  40e2d1:	xchg   DWORD PTR [ecx+0x3efe6a5e],ebp
  40e2d7:	and    dh,BYTE PTR [eax]
  40e2d9:	dec    ebp
  40e2da:	sbb    esp,DWORD PTR [esi]
  40e2dc:	ss push cs
  40e2de:	mov    eax,ds:0xb8af51c8
  40e2e3:	jle    0x40e2af
  40e2e5:	mov    dh,0xb
  40e2e7:	out    0x64,al
  40e2e9:	or     esp,edi
  40e2eb:	outs   dx,BYTE PTR ds:[esi]
  40e2ec:	xchg   edx,eax
  40e2ed:	sub    al,0x3b
  40e2ef:	cmp    esi,DWORD PTR [ecx]
  40e2f1:	lods   al,BYTE PTR ds:[esi]
  40e2f2:	push   ds
  40e2f3:	das    
  40e2f4:	inc    edi
  40e2f5:	(bad)  
  40e2f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2f7:	shr    BYTE PTR [edi-0x2f],1
  40e2fa:	test   eax,0xc4c0e7e1
  40e2ff:	rep ins DWORD PTR es:[edi],dx
  40e301:	in     eax,0x68
  40e303:	leave  
  40e304:	(bad)  
  40e305:	lds    edx,FWORD PTR [ebx]
  40e307:	fimul  DWORD PTR [edx+0x333b9bd]
  40e30d:	jno    0x40e2bc
  40e30f:	push   ebx
  40e310:	aad    0x30
  40e312:	dec    eax
  40e313:	out    dx,eax
  40e314:	mov    cl,0x93
  40e316:	jae    0x40e2d6
  40e318:	or     dl,BYTE PTR [esi-0x4b719bed]
  40e31e:	mov    eax,0xdd607cbd
  40e323:	nop
  40e324:	pop    ecx
  40e325:	ret    
  40e326:	adc    al,0xca
  40e328:	not    DWORD PTR [esi-0x3]
  40e32b:	mov    al,ds:0xfc8ea24
  40e330:	gs js  0x40e3b0
  40e333:	mov    bl,0x80
  40e335:	dec    eax
  40e336:	je     0x40e398
  40e338:	imul   eax,DWORD PTR [edi-0x63],0x6c
  40e33c:	inc    ebp
  40e33d:	es in  al,dx
  40e33f:	and    ebx,DWORD PTR [esi+ebp*4-0x40a6f6d6]
  40e346:	push   es
  40e347:	cld    
  40e348:	mov    ch,bl
  40e34a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e34b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e34c:	mov    dl,ch
  40e34e:	cmp    dh,bl
  40e350:	push   eax
  40e351:	fisttp DWORD PTR [ecx-0x2a74cca0]
  40e357:	outs   dx,DWORD PTR ds:[esi]
  40e358:	and    eax,0x70d44995
  40e35d:	jg     0x40e33f
  40e35f:	push   edi
  40e360:	sub    BYTE PTR [edx+0xf],dl
  40e363:	sbb    DWORD PTR [edi+edi*8],ebx
  40e366:	push   ecx
  40e367:	iret   
  40e368:	imul   ebp,ecx,0xffffff9d
  40e36b:	add    dh,dh
  40e36d:	loope  0x40e337
  40e36f:	sbb    al,0x5d
  40e371:	shr    ebx,0xf0
  40e374:	jbe    0x40e3a2
  40e376:	or     ebp,ebx
  40e378:	pop    ecx
  40e379:	(bad)  
  40e37a:	sub    ebp,DWORD PTR [edi-0x8]
  40e37d:	xor    al,0xa3
  40e37f:	jmp    0x926c91f1
  40e384:	popa   
  40e385:	hlt    
  40e386:	xchg   ecx,eax
  40e387:	fist   DWORD PTR [eax]
  40e389:	adc    ecx,DWORD PTR [ebx+edi*4]
  40e38c:	add    edi,DWORD PTR [ebp-0x56]
  40e38f:	mov    ds:0x5cae319d,al
  40e394:	adc    DWORD PTR [ebx+0x6e],0xffffffee
  40e398:	fcom   st(1)
  40e39a:	in     al,dx
  40e39b:	imul   edx,DWORD PTR [edi+ebp*8+0x78b2c886],0x31
  40e3a3:	int3   
  40e3a4:	push   ebp
  40e3a5:	int3   
  40e3a6:	aas    
  40e3a7:	xchg   esp,eax
  40e3a8:	out    dx,al
  40e3a9:	icebp  
  40e3aa:	aam    0xd7
  40e3ac:	scas   al,BYTE PTR es:[edi]
  40e3ad:	das    
  40e3ae:	ja     0x40e393
  40e3b0:	leave  
  40e3b1:	or     ah,bl
  40e3b3:	lods   eax,DWORD PTR ds:[esi]
  40e3b4:	xor    bl,BYTE PTR [edx]
  40e3b6:	lahf   
  40e3b7:	sar    BYTE PTR [edx+esi*8],1
  40e3ba:	shr    esp,cl
  40e3bc:	imul   ebx,DWORD PTR [ebp+ebx*2+0x56],0x6e
  40e3c1:	loope  0x40e395
  40e3c3:	sub    al,0xd6
  40e3c5:	xor    ah,BYTE PTR [edi+0x1]
  40e3c8:	or     DWORD PTR [esi+ecx*4+0x4f],ebp
  40e3cc:	leave  
  40e3cd:	sti    
  40e3ce:	mov    ch,0x37
  40e3d0:	pop    ebp
  40e3d1:	adc    eax,0xd48d9da0
  40e3d6:	gs sbb eax,0x4af2e705
  40e3dc:	retf   
  40e3dd:	pop    ecx
  40e3de:	mov    dl,0xfa
  40e3e0:	shl    DWORD PTR [edx+edi*8-0x27],1
  40e3e4:	mov    al,0x53
  40e3e6:	outs   dx,BYTE PTR ds:[esi]
  40e3e7:	scas   eax,DWORD PTR es:[edi]
  40e3e8:	sbb    edi,DWORD PTR [edi]
  40e3ea:	addr16 das 
  40e3ec:	or     eax,0x5afb682b
  40e3f1:	push   ss
  40e3f2:	and    eax,0x2d0e4cf1
  40e3f7:	sbb    al,0x7
  40e3f9:	jno    0x40e456
  40e3fb:	add    esp,esp
  40e3fd:	dec    edx
  40e3fe:	cli    
  40e3ff:	(bad)  
  40e400:	jp     0x40e472
  40e402:	in     eax,dx
  40e403:	push   0x4096a5e6
  40e408:	xor    cl,ah
  40e40a:	cmc    
  40e40b:	(bad)  
  40e40c:	jl     0x40e448
  40e40e:	jne    0x40e431
  40e410:	adc    al,0x3
  40e412:	or     DWORD PTR [edx+0x642cbba4],edx
  40e418:	in     al,dx
  40e419:	call   0xf348988
  40e41e:	stos   DWORD PTR es:[edi],eax
  40e41f:	loope  0x40e464
  40e421:	dec    esi
  40e422:	and    al,0xb8
  40e424:	aad    0x30
  40e426:	mov    al,ds:0xb2203434
  40e42b:	mov    al,0x63
  40e42d:	cmc    
  40e42e:	sbb    DWORD PTR [edx],edi
  40e430:	inc    ecx
  40e431:	enter  0x7577,0xda
  40e435:	adc    ah,bh
  40e437:	hlt    
  40e438:	(bad)  
  40e439:	shl    BYTE PTR ds:0x7e29931f,0xc4
  40e440:	push   edi
  40e441:	pop    ss
  40e442:	cld    
  40e443:	(bad)  
  40e444:	lahf   
  40e445:	adc    ecx,DWORD PTR [ecx+0x625838e7]
  40e44b:	cmc    
  40e44c:	and    eax,0xb84696c4
  40e451:	shl    BYTE PTR [ecx+0x47],1
  40e454:	mov    DWORD PTR [ebp-0x4],edi
  40e457:	mov    eax,DWORD PTR [ebp-0x18]
  40e45a:	mov    ecx,DWORD PTR [ebp-0x14]
  40e45d:	push   0x1c19
  40e462:	push   ecx
  40e463:	push   eax
  40e464:	call   0x41594e
  40e469:	mov    ecx,DWORD PTR [ebp-0x20]
  40e46c:	mov    ebx,DWORD PTR [ebp-0x1c]
  40e46f:	or     eax,ecx
  40e471:	or     edx,ebx
  40e473:	push   0x20fa
  40e478:	add    eax,0x7fac
  40e47d:	push   0x1cd48ab
  40e482:	adc    edx,0x133b
  40e488:	push   edx
  40e489:	push   eax
  40e48a:	call   0x42227d
  40e48f:	mov    ebx,DWORD PTR [ebp-0x4]
  40e492:	lea    ecx,[eax-0x5d40]
  40e498:	xor    edx,edx
  40e49a:	mov    eax,0x16c2
  40e49f:	div    ebx
  40e4a1:	mov    edx,DWORD PTR [ebp-0xc]
  40e4a4:	sub    eax,edx
  40e4a6:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  40e4ad:	mov    DWORD PTR [ebp-0x14],0x6af0
  40e4b4:	mov    DWORD PTR [ebp-0x4],edi
  40e4b7:	mov    DWORD PTR [ebp-0xc],0x2c8a
  40e4be:	mov    ecx,DWORD PTR [ebp-0xc]
  40e4c1:	mov    eax,0x4401
  40e4c6:	sub    eax,ecx
  40e4c8:	mov    ecx,DWORD PTR [ebp-0x4]
  40e4cb:	xor    edx,edx
  40e4cd:	div    ecx
  40e4cf:	mov    ecx,DWORD PTR [ebp-0x14]
  40e4d2:	xor    eax,0xa80
  40e4d7:	or     eax,0x343b
  40e4dc:	or     eax,ecx
  40e4de:	mov    ecx,DWORD PTR [ebp+0x8]
  40e4e1:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  40e4e8:	mov    DWORD PTR [ebp-0xc],0x327f
  40e4ef:	mov    DWORD PTR [ebp-0x14],0x5215
  40e4f6:	mov    DWORD PTR [ebp+0x8],0x2502
  40e4fd:	mov    eax,DWORD PTR [ebp+0x8]
  40e500:	add    eax,DWORD PTR [ebp-0x14]
  40e503:	mov    ecx,DWORD PTR [ebp-0xc]
  40e506:	and    eax,0x2bab
  40e50b:	lea    eax,[eax+ecx*1-0x557f]
  40e512:	mov    ecx,DWORD PTR [ebp+0xc]
  40e515:	mov    DWORD PTR [esi+eax*4],ecx
  40e518:	mov    DWORD PTR [ebp-0xc],edi
  40e51b:	mov    DWORD PTR [ebp+0x8],0x5f40
  40e522:	mov    DWORD PTR [ebp-0x14],0x6ba4
  40e529:	mov    DWORD PTR [ebp+0xc],0x7b17
  40e530:	mov    ecx,DWORD PTR [ebp+0x8]
  40e533:	jmp    0x40e7c2
  40e538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e539:	jno    0x40e4dc
  40e53b:	into   
  40e53c:	mov    ecx,0xb6b9b90d
  40e541:	jb     0x40e5b1
  40e543:	frstor [ecx-0x43]
  40e546:	js     0x40e4da
  40e548:	int    0x6
  40e54a:	mov    esi,0xbec299be
  40e54f:	mov    esi,0xda9dfa88
  40e554:	leave  
  40e555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e556:	outs   dx,DWORD PTR ds:[esi]
  40e557:	xor    eax,0xd4ba0d2d
  40e55c:	mov    edi,0x15dbc5f0
  40e561:	or     BYTE PTR [ebx+0x65e8dc2b],ch
  40e567:	fldcw  WORD PTR [eax-0x63]
  40e56a:	add    BYTE PTR [eax+ecx*4-0x3de1866f],0xb5
  40e572:	sti    
  40e573:	add    edi,DWORD PTR [ecx+0x22929902]
  40e579:	dec    edi
  40e57a:	ret    0xe551
  40e57d:	jmp    0xcabf:0xa7e7c745
  40e584:	loop   0x40e56b
  40e586:	inc    ecx
  40e587:	bound  esp,QWORD PTR [eax+edx*1+0x1af26b41]
  40e58e:	sahf   
  40e58f:	aaa    
  40e590:	xchg   cl,al
  40e592:	fist   DWORD PTR [ebx-0x2646709f]
  40e598:	sar    BYTE PTR [esi+edx*8+0x18e00149],0xa7
  40e5a0:	inc    ebp
  40e5a1:	pushf  
  40e5a2:	pop    ds
  40e5a3:	push   ecx
  40e5a4:	add    eax,0xf0c05d12
  40e5a9:	cmp    DWORD PTR [ebx-0x28],esi
  40e5ac:	xchg   DWORD PTR [ecx-0x37],ebp
  40e5af:	xchg   edx,eax
  40e5b0:	or     eax,0xcf0868dc
  40e5b5:	sbb    DWORD PTR [ecx+0x30c68ed4],0xd35b2858
  40e5bf:	cmp    al,0x2e
  40e5c1:	int3   
  40e5c2:	mov    gs,WORD PTR [esi+0x7845cc19]
  40e5c8:	or     esi,DWORD PTR [edi]
  40e5ca:	dec    esi
  40e5cb:	imul   edi,edx,0xe9be4e13
  40e5d1:	sub    al,0xf0
  40e5d3:	lods   al,BYTE PTR ds:[esi]
  40e5d4:	xchg   edx,eax
  40e5d5:	stc    
  40e5d6:	push   ebx
  40e5d7:	fdivr  QWORD PTR [edi+eiz*8+0x0]
  40e5db:	mov    ?,WORD PTR [ebx]
  40e5dd:	pop    edx
  40e5de:	jp     0x40e5a8
  40e5e0:	scas   eax,DWORD PTR es:[edi]
  40e5e1:	inc    ebx
  40e5e2:	mov    ch,0x87
  40e5e4:	push   0xfffffff5
  40e5e6:	cmp    al,0x84
  40e5e8:	lahf   
  40e5e9:	inc    edx
  40e5ea:	(bad)  
  40e5ec:	pop    es
  40e5ed:	aad    0x75
  40e5ef:	aas    
  40e5f0:	push   ss
  40e5f1:	mov    edx,ss
  40e5f3:	sbb    eax,0x6c277589
  40e5f8:	jmp    0x40e629
  40e5fa:	sbb    esp,DWORD PTR [esi+0x7c]
  40e5fd:	or     DWORD PTR [edi-0x5f],edi
  40e600:	fnstsw WORD PTR [ecx+0x47]
  40e603:	dec    esi
  40e604:	mov    esp,0x9bae79b8
  40e609:	leave  
  40e60a:	mov    ecx,0x3edc11ee
  40e60f:	scas   al,BYTE PTR es:[di]
  40e611:	sar    bl,cl
  40e613:	dec    ebp
  40e614:	(bad)  
  40e615:	pop    edi
  40e616:	out    dx,eax
  40e617:	pop    ecx
  40e618:	push   ds
  40e619:	inc    ecx
  40e61a:	lods   al,BYTE PTR ds:[esi]
  40e61b:	inc    esp
  40e61c:	scas   al,BYTE PTR es:[edi]
  40e61d:	aaa    
  40e61e:	neg    DWORD PTR [edi]
  40e620:	lods   eax,DWORD PTR ds:[esi]
  40e621:	aam    0xc2
  40e623:	sar    DWORD PTR [edi],cl
  40e625:	(bad)  
  40e626:	js     0x40e622
  40e628:	ss or  bh,dl
  40e62b:	jecxz  0x40e63e
  40e62d:	adc    eax,0x6644ab2a
  40e632:	adc    dh,bh
  40e634:	mov    dh,0x3a
  40e636:	inc    bp
  40e638:	inc    esp
  40e639:	cwde   
  40e63a:	cwde   
  40e63b:	or     edi,0x31
  40e63e:	call   0x6a7:0x4dc47c76
  40e645:	adc    cl,dl
  40e647:	inc    ebp
  40e648:	adc    BYTE PTR [ebp-0x3b],ch
  40e64b:	call   0x1e47:0xad3a1104
  40e652:	sbb    ecx,eax
  40e654:	xor    eax,eax
  40e656:	leave  
  40e657:	cmp    al,0x6d
  40e659:	not    BYTE PTR [ebx+0x16d44e4b]
  40e65f:	inc    edi
  40e660:	sub    esp,edx
  40e662:	mov    bh,0x3f
  40e664:	(bad)  
  40e665:	xchg   esp,eax
  40e666:	xchg   DWORD PTR [edi],edx
  40e668:	cmp    ebx,DWORD PTR [eax+eiz*2-0x6e7c79b1]
  40e66f:	pushf  
  40e670:	aaa    
  40e671:	xchg   ebx,eax
  40e672:	outs   dx,DWORD PTR ds:[esi]
  40e673:	xor    bl,BYTE PTR [edi+0x7d]
  40e676:	and    dh,BYTE PTR [esi+0x7c]
  40e679:	jle    0x40e69d
  40e67b:	in     al,0xe9
  40e67d:	icebp  
  40e67e:	test   BYTE PTR [edx],bl
  40e680:	mov    bl,0x79
  40e682:	out    dx,eax
  40e683:	icebp  
  40e684:	stos   DWORD PTR es:[edi],eax
  40e685:	mov    edi,0x9279ca1e
  40e68a:	sbb    eax,0xa0ffd003
  40e68f:	pop    ds
  40e690:	sbb    al,0x4d
  40e692:	jge    0x40e640
  40e694:	sbb    dh,dl
  40e696:	daa    
  40e697:	push   ds
  40e698:	fnstenv [edi+esi*1]
  40e69b:	out    dx,al
  40e69c:	mov    eax,ds:0xfd1adf68
  40e6a1:	repnz xor DWORD PTR [edi-0xd],ebx
  40e6a5:	(bad)  
  40e6a6:	in     al,dx
  40e6a7:	je     0x40e6e7
  40e6a9:	cli    
  40e6aa:	xchg   DWORD PTR [eax-0x690b0947],edi
  40e6b0:	int    0x97
  40e6b2:	les    esp,FWORD PTR [esi+edx*4-0x51]
  40e6b6:	gs lock data16 scas al,BYTE PTR es:[di]
  40e6bb:	mov    dl,0x8b
  40e6bd:	dec    esp
  40e6be:	dec    ebx
  40e6bf:	xchg   edi,eax
  40e6c0:	cmp    ebp,DWORD PTR ds:0x7c9e5e14
  40e6c6:	enter  0xf01d,0x18
  40e6ca:	xlat   BYTE PTR ds:[ebx]
  40e6cb:	xor    DWORD PTR [eax+0x53],ecx
  40e6ce:	xor    bh,ah
  40e6d0:	icebp  
  40e6d1:	xchg   ecx,eax
  40e6d2:	xor    ecx,DWORD PTR [edx+0x7674152e]
  40e6d8:	hlt    
  40e6d9:	nop
  40e6da:	dec    esi
  40e6db:	repz iret 
  40e6dd:	inc    esp
  40e6de:	xor    edi,ecx
  40e6e0:	and    BYTE PTR [esp+edi*1+0x4c],0x72
  40e6e5:	rol    DWORD PTR [ecx-0xb2da978],0xd2
  40e6ec:	jecxz  0x40e6e1
  40e6ee:	stos   BYTE PTR es:[edi],al
  40e6ef:	xchg   ebp,eax
  40e6f0:	xchg   BYTE PTR [ebx+0x74],cl
  40e6f3:	pop    eax
  40e6f4:	mov    BYTE PTR [ebx],al
  40e6f6:	pop    edx
  40e6f7:	sub    al,0x30
  40e6f9:	clc    
  40e6fa:	ficomp DWORD PTR [eax-0x4d]
  40e6fd:	inc    esi
  40e6fe:	imul   eax,DWORD PTR [eax+0x63f43852],0xffffffff
  40e705:	pop    edx
  40e706:	or     dh,BYTE PTR [ecx+0x269f8d9f]
  40e70c:	push   ss
  40e70d:	mov    DWORD PTR [ebx+0x2d],ecx
  40e710:	fistp  WORD PTR [ebx+ebx*8]
  40e713:	xchg   DWORD PTR [ecx-0x2f],edx
  40e716:	outs   dx,DWORD PTR ds:[esi]
  40e717:	aaa    
  40e718:	bnd js 0x40e745
  40e71b:	scas   al,BYTE PTR es:[edi]
  40e71c:	mov    gs,WORD PTR [edi-0x6c]
  40e71f:	ror    BYTE PTR [ebx+ebx*8-0xc5a4c64],cl
  40e726:	ja     0x40e701
  40e728:	not    BYTE PTR [edx-0x3b]
  40e72b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e72c:	test   eax,0xb81f78c4
  40e731:	mov    ch,0xdb
  40e733:	push   ecx
  40e734:	sub    cx,WORD PTR [edi-0x650e2ada]
  40e73b:	in     eax,0xe8
  40e73d:	dec    eax
  40e73e:	pop    ebp
  40e73f:	sub    eax,0x85234ba3
  40e744:	adc    BYTE PTR [ecx+0x26c3f771],al
  40e74a:	add    BYTE PTR ds:0xf3c6173c,ah
  40e750:	cli    
  40e751:	inc    edx
  40e752:	push   ecx
  40e753:	mov    ebx,eax
  40e755:	sub    al,0x8b
  40e757:	fcmovnu st,st(4)
  40e759:	sub    BYTE PTR [edx-0x28367f12],cl
  40e75f:	cmp    esi,DWORD PTR [esi+0x66]
  40e762:	adc    bl,BYTE PTR [edx-0x36]
  40e765:	or     ebp,DWORD PTR [ebx-0x3bb0df65]
  40e76b:	div    BYTE PTR [edi-0x49]
  40e76e:	mov    WORD PTR [edi],gs
  40e770:	popf   
  40e771:	mov    esi,0x96600cf1
  40e776:	sbb    eax,ebx
  40e778:	xor    eax,0x314101c7
  40e77d:	inc    edi
  40e77e:	cmc    
  40e77f:	or     cl,ah
  40e781:	repz ss mov esp,0xa6fa0b26
  40e788:	mov    bl,0xf1
  40e78a:	fdiv   DWORD PTR [ebx-0x5]
  40e78d:	mov    ds:0x7d6452b3,al
  40e792:	clc    
  40e793:	in     eax,dx
  40e794:	sub    esp,edi
  40e796:	jmp    0x40e79c
  40e798:	das    
  40e799:	in     eax,0xdb
  40e79b:	jne    0x40e7f4
  40e79d:	mov    ebp,0xf9d0efd
  40e7a2:	pop    es
  40e7a3:	inc    ebp
  40e7a4:	push   edx
  40e7a5:	or     DWORD PTR [edx-0x33],esp
  40e7a8:	and    DWORD PTR [ecx+0x56],0xebf86896
  40e7af:	push   0xffffffe5
  40e7b1:	jl     0x40e798
  40e7b3:	dec    ebx
  40e7b4:	pop    esp
  40e7b5:	shr    cl,cl
  40e7b7:	cli    
  40e7b8:	add    dh,bl
  40e7ba:	lahf   
  40e7bb:	and    bh,BYTE PTR [edx]
  40e7bd:	stos   DWORD PTR es:[edi],eax
  40e7be:	(bad)  
  40e7bf:	add    al,0x2f
  40e7c1:	xchg   edi,eax
  40e7c2:	mov    eax,0x43d2
  40e7c7:	sub    eax,ecx
  40e7c9:	add    eax,DWORD PTR [ebp+0xc]
  40e7cc:	xor    edx,edx
  40e7ce:	add    eax,DWORD PTR [ebp-0x14]
  40e7d1:	mov    ecx,DWORD PTR [ebp-0xc]
  40e7d4:	div    ecx
  40e7d6:	mov    ecx,DWORD PTR [ebp+0x10]
  40e7d9:	xor    edx,edx
  40e7db:	pop    edi
  40e7dc:	pop    ebx
  40e7dd:	or     eax,0x67ad
  40e7e2:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  40e7e9:	mov    DWORD PTR [ebp+0x10],0x517b
  40e7f0:	mov    DWORD PTR [ebp+0xc],0x5d62
  40e7f7:	mov    DWORD PTR [ebp+0x8],0x41b0
  40e7fe:	mov    ecx,DWORD PTR [ebp+0x8]
  40e801:	mov    eax,DWORD PTR [ebp+0xc]
  40e804:	and    ecx,0x68c1
  40e80a:	sub    ecx,0x6fd3
  40e810:	or     ecx,eax
  40e812:	mov    eax,DWORD PTR [ebp+0x10]
  40e815:	imul   ecx,eax
  40e818:	mov    eax,0xf52840d5
  40e81d:	div    ecx
  40e81f:	leave  
  40e820:	ret    0xc
  40e823:	push   ebp
  40e824:	mov    ebp,esp
  40e826:	sub    esp,0xc0
  40e82c:	push   esi
  40e82d:	mov    DWORD PTR [ebp-0x80],0x2f93
  40e834:	mov    DWORD PTR [ebp-0x7c],0x3321
  40e83b:	mov    DWORD PTR [ebp-0x70],0x7d00
  40e842:	mov    DWORD PTR [ebp-0x6c],0xd87
  40e849:	jmp    0x40eb8c
  40e84e:	xor    dl,BYTE PTR [ecx]
  40e850:	sub    al,0x76
  40e852:	sub    al,0x78
  40e854:	mov    ah,0x99
  40e856:	sahf   
  40e857:	mov    ?,WORD PTR [eax-0x2e55f931]
  40e85d:	nop
  40e85e:	stos   BYTE PTR es:[edi],al
  40e85f:	or     bh,BYTE PTR [esi-0x413bfe42]
  40e865:	mov    esi,0xc4174737
  40e86a:	nop
  40e86b:	inc    ecx
  40e86c:	adc    BYTE PTR [esi],0x75
  40e86f:	outs   dx,DWORD PTR ds:[esi]
  40e870:	inc    esi
  40e871:	dec    ecx
  40e872:	inc    ebx
  40e873:	pop    es
  40e874:	call   0xe3a752fd
  40e879:	cmp    al,0x32
  40e87b:	mov    bh,0x18
  40e87d:	(bad)  
  40e87e:	test   al,0x7b
  40e880:	dec    ecx
  40e881:	fistp  WORD PTR [ecx]
  40e883:	cmp    al,0x36
  40e885:	loop   0x40e86f
  40e887:	mov    ebx,0xb9f022fa
  40e88c:	add    DWORD PTR [eax],esi
  40e88e:	and    DWORD PTR [esi],0x6f2e19eb
  40e894:	jbe    0x40e89b
  40e896:	je     0x40e8e9
  40e898:	mov    eax,0x4a03d744
  40e89d:	outs   dx,BYTE PTR es:[esi]
  40e89f:	mov    DWORD PTR ds:0xd0101d12,esi
  40e8a5:	fiadd  WORD PTR [esp+ecx*1+0x75a775d8]
  40e8ac:	pop    edx
  40e8ad:	push   eax
  40e8ae:	arpl   WORD PTR [esi+0x40],sp
  40e8b1:	(bad)  
  40e8b2:	loop   0x40e8fb
  40e8b4:	aam    0x49
  40e8b6:	fldcw  WORD PTR [si]
  40e8b9:	cmp    dh,BYTE PTR [eax-0x75333397]
  40e8bf:	mov    ds:0xb7cca09a,al
  40e8c4:	sbb    DWORD PTR [esi-0x68],0xffffff82
  40e8c8:	jle    0x40e88f
  40e8ca:	jae    0x40e89e
  40e8cc:	daa    
  40e8cd:	xchg   esp,eax
  40e8ce:	push   ss
  40e8cf:	in     al,dx
  40e8d0:	call   0xf43fbf97
  40e8d5:	jnp    0x40e90a
  40e8d7:	and    DWORD PTR [ebp-0xc],0x19
  40e8db:	jl     0x40e878
  40e8dd:	call   0x1e32b08
  40e8e2:	lea    edi,[ebp-0x2f]
  40e8e5:	out    0x1c,al
  40e8e7:	les    ebx,FWORD PTR [ebx+0x49073b9c]
  40e8ed:	adc    eax,0x68612e03
  40e8f2:	cmc    
  40e8f3:	inc    edx
  40e8f4:	push   esp
  40e8f5:	pop    ebx
  40e8f6:	adc    eax,0x6314dbf4
  40e8fb:	mov    ch,0x6c
  40e8fd:	cmp    eax,edi
  40e8ff:	sub    dh,BYTE PTR [ecx-0x6e8cbcd7]
  40e905:	add    BYTE PTR [ecx+0x5c],0x54
  40e909:	jno    0x40e8eb
  40e90b:	add    DWORD PTR [ebx-0x3501b6d],0x7a
  40e912:	hlt    
  40e913:	and    DWORD PTR [ecx+0x1c8cec87],edx
  40e919:	aad    0x2c
  40e91b:	inc    ebx
  40e91c:	scas   al,BYTE PTR es:[edi]
  40e91d:	jge    0x40e8b6
  40e91f:	es and al,0x8d
  40e923:	add    al,0x5a
  40e925:	add    DWORD PTR [edx-0x52],esp
  40e928:	mov    esi,0x5f609313
  40e92d:	shr    ch,cl
  40e92f:	xchg   esp,eax
  40e930:	push   0xc6409c89
  40e935:	push   esi
  40e936:	test   eax,0x1bdb3148
  40e93b:	test   DWORD PTR [ecx],esp
  40e93d:	aaa    
  40e93e:	push   ds
  40e93f:	retf   
  40e940:	and    eax,0xe1c6826c
  40e945:	ins    DWORD PTR es:[edi],dx
  40e946:	jo     0x40e9c4
  40e948:	sub    ebx,DWORD PTR [ecx]
  40e94a:	clc    
  40e94b:	imul   ecx,DWORD PTR [edi+0x736097e8],0xb2431d02
  40e955:	inc    ebx
  40e956:	fmul   st,st(7)
  40e958:	(bad)  [ebx+0x2b]
  40e95b:	adc    ecx,DWORD PTR [eax]
  40e95d:	inc    esi
  40e95e:	aad    0x5b
  40e960:	pop    esp
  40e961:	lods   al,BYTE PTR ds:[esi]
  40e962:	cs jmp 0x6672:0xb5645d19
  40e96a:	lods   eax,DWORD PTR ds:[esi]
  40e96b:	(bad)  
  40e96c:	(bad)  
  40e96d:	gs loope 0x40e9e6
  40e970:	test   eax,0xbdb08327
  40e975:	sub    ecx,DWORD PTR [edx]
  40e977:	call   0xc01f:0xd50147be
  40e97e:	outs   dx,DWORD PTR ds:[esi]
  40e97f:	cmp    bl,ah
  40e981:	outs   dx,BYTE PTR ds:[esi]
  40e982:	pop    es
  40e983:	xchg   ecx,eax
  40e984:	xchg   BYTE PTR [ebx],dh
  40e986:	adc    BYTE PTR [ebx+ecx*1-0x78],cl
  40e98a:	pop    ss
  40e98b:	shl    ebp,cl
  40e98d:	or     al,0x64
  40e98f:	sbb    al,0x16
  40e991:	fs mov ebp,0x32e47a04
  40e997:	imul   ebx,ebx,0x44673fc2
  40e99d:	and    eax,0xe80122f9
  40e9a2:	cli    
  40e9a3:	or     BYTE PTR [ebx+0x13],0x37
  40e9a7:	pop    edi
  40e9a8:	out    dx,al
  40e9a9:	ret    
  40e9aa:	mov    cl,0x4c
  40e9ac:	push   eax
  40e9ad:	push   ss
  40e9ae:	jae    0x40e957
  40e9b0:	mov    DWORD PTR [ebp-0xe76baa],edi
  40e9b6:	in     al,dx
  40e9b7:	sub    al,BYTE PTR [eax]
  40e9b9:	xchg   BYTE PTR [esi],dl
  40e9bb:	xor    eax,0x4b37d236
  40e9c0:	or     eax,0xcb32df12
  40e9c5:	pusha  
  40e9c6:	ss das 
  40e9c8:	fisubr DWORD PTR [edi-0x73]
  40e9cb:	pop    ss
  40e9cc:	push   esp
  40e9cd:	test   BYTE PTR [ebp+esi*4-0x61],ch
  40e9d1:	mov    dh,0x91
  40e9d3:	outs   dx,BYTE PTR ds:[esi]
  40e9d4:	nop
  40e9d5:	stos   DWORD PTR es:[edi],eax
  40e9d6:	adc    dh,dl
  40e9d8:	xchg   BYTE PTR [edi],cl
  40e9da:	add    eax,0x3f143d6b
  40e9df:	mov    bh,0x6e
  40e9e1:	and    edx,ebp
  40e9e3:	xor    esi,esp
  40e9e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9e6:	xor    dh,dl
  40e9e8:	push   edi
  40e9e9:	repz enter 0xbaad,0xcd
  40e9ee:	or     DWORD PTR [edx-0x2799ac90],esi
  40e9f4:	xchg   edx,eax
  40e9f5:	sub    eax,0x61613d82
  40e9fa:	clc    
  40e9fb:	mov    ds:0x69c326d1,al
  40ea00:	shl    BYTE PTR [eax-0x6a],0x7a
  40ea04:	add    edx,0xab3c4e36
  40ea0a:	mov    edi,0x1a180ef4
  40ea0f:	pop    edi
  40ea10:	shr    BYTE PTR [edx],1
  40ea12:	dec    esi
  40ea13:	adc    al,0x74
  40ea15:	mov    bh,0xa
  40ea17:	jbe    0x40e9bc
  40ea19:	jmp    0xbf98bf8d
  40ea1e:	sbb    BYTE PTR [edi+0x3b4f6cdc],ch
  40ea24:	fstp   TBYTE PTR [eax+0x1e]
  40ea27:	or     BYTE PTR [ebp-0x3df49f4d],dl
  40ea2d:	pop    ds
  40ea2e:	pop    ebp
  40ea2f:	add    al,0x8c
  40ea31:	xor    al,0xaf
  40ea33:	js     0x40ea88
  40ea35:	inc    ebx
  40ea36:	fcom   st(6)
  40ea38:	mov    cs,WORD PTR [edi-0x504fbb14]
  40ea3e:	hlt    
  40ea3f:	jle    0x40ea68
  40ea41:	inc    ebx
  40ea42:	pop    eax
  40ea43:	daa    
  40ea44:	adc    BYTE PTR [edi],bl
  40ea46:	cmp    dh,bl
  40ea48:	push   ds
  40ea49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea4a:	cmp    ah,BYTE PTR [edx]
  40ea4c:	or     eax,0x84e54312
  40ea51:	int    0xea
  40ea53:	call   0x8982a64c
  40ea58:	icebp  
  40ea59:	popa   
  40ea5a:	jbe    0x40eaca
  40ea5c:	gs pop ss
  40ea5e:	sti    
  40ea5f:	lahf   
  40ea60:	cmp    eax,0xa1f4fe73
  40ea65:	scas   al,BYTE PTR es:[edi]
  40ea66:	sbb    eax,0x9172d2bd
  40ea6b:	leave  
  40ea6c:	xor    BYTE PTR [ebp+0x69545f4f],cl
  40ea72:	dec    ebx
  40ea73:	jl     0x40eac3
  40ea75:	jb     0x40ea8c
  40ea77:	add    BYTE PTR [esi],0x6f
  40ea7a:	mov    WORD PTR [edi+0x16],?
  40ea7d:	add    BYTE PTR [ebx-0x4db3f90c],dl
  40ea83:	fstp   DWORD PTR [ebx]
  40ea85:	xor    al,0x56
  40ea87:	inc    eax
  40ea88:	jle    0x40ead7
  40ea8a:	add    DWORD PTR [edi-0x34b5411],ebp
  40ea90:	aaa    
  40ea91:	add    BYTE PTR [ecx+0x71],bh
  40ea94:	push   es
  40ea95:	movhps QWORD PTR [eax+eax*1],xmm7
  40ea99:	ins    DWORD PTR es:[edi],dx
  40ea9a:	pop    ebx
  40ea9b:	xchg   edi,eax
  40ea9c:	mov    ebx,0x2bc2c57f
  40eaa1:	jae    0x40ea7f
  40eaa3:	ror    eax,0x45
  40eaa6:	cmp    BYTE PTR [edx+0x5b],dl
  40eaa9:	int3   
  40eaaa:	inc    ebx
  40eaab:	and    DWORD PTR ss:[eax+0x6f31067e],ecx
  40eab2:	mov    edi,0xc56ff46d
  40eab7:	dec    esi
  40eab8:	rcl    BYTE PTR [esi+esi*1+0x2f79431c],1
  40eabf:	retf   
  40eac0:	stos   BYTE PTR es:[edi],al
  40eac1:	pop    esi
  40eac2:	jecxz  0x40eaeb
  40eac4:	repnz pop edx
  40eac6:	pop    ds
  40eac7:	out    0x92,al
  40eac9:	pusha  
  40eaca:	retf   0x36cd
  40eacd:	lods   eax,DWORD PTR ds:[esi]
  40eace:	sbb    dh,ah
  40ead0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ead1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ead2:	loopne 0x40eb45
  40ead4:	inc    eax
  40ead5:	pop    es
  40ead6:	bound  ecx,QWORD PTR [ebp+0x19476e9f]
  40eadc:	xor    edi,ecx
  40eade:	aad    0xc2
  40eae0:	add    eax,0x170dba52
  40eae5:	retf   0x8acc
  40eae8:	cdq    
  40eae9:	or     BYTE PTR [edx+0x35],bl
  40eaec:	pop    edi
  40eaed:	dec    ebp
  40eaee:	dec    esp
  40eaef:	mov    bl,0xbc
  40eaf1:	test   al,0x1
  40eaf3:	xchg   ecx,esi
  40eaf5:	movlps QWORD PTR [esi-0x64],xmm5
  40eaf9:	fistp  QWORD PTR [ebp-0x71]
  40eafc:	stos   BYTE PTR es:[edi],al
  40eafd:	mov    al,0xd4
  40eaff:	les    eax,FWORD PTR [edi+0x1a0a82cc]
  40eb05:	lock or eax,0xbc7142ee
  40eb0b:	fild   WORD PTR [eax]
  40eb0d:	jno    0x40eb7e
  40eb0f:	push   edx
  40eb10:	dec    ecx
  40eb11:	daa    
  40eb12:	aad    0x7e
  40eb14:	pop    ecx
  40eb15:	xchg   DWORD PTR [eax],edx
  40eb17:	pop    ss
  40eb18:	adc    BYTE PTR [ebp-0x23],al
  40eb1b:	push   esi
  40eb1c:	xor    BYTE PTR [edi-0x64],dh
  40eb1f:	sub    eax,0x9a0b7912
  40eb24:	xchg   BYTE PTR [esi-0x69fad4f2],ch
  40eb2a:	add    ebp,esi
  40eb2c:	sahf   
  40eb2d:	inc    esi
  40eb2e:	in     eax,dx
  40eb2f:	jle    0x40ebac
  40eb31:	and    ebp,DWORD PTR [ebp+0x5247e697]
  40eb37:	stos   DWORD PTR es:[edi],eax
  40eb38:	call   0xcde1a13b
  40eb3d:	dec    edi
  40eb3e:	and    BYTE PTR [edx+0x12],ah
  40eb41:	push   0xffffffd9
  40eb43:	lods   al,BYTE PTR ds:[esi]
  40eb44:	push   ecx
  40eb45:	outs   dx,DWORD PTR ds:[esi]
  40eb46:	xchg   esi,eax
  40eb47:	jl     0x40ebbe
  40eb49:	inc    eax
  40eb4a:	stc    
  40eb4b:	add    DWORD PTR [eax-0x33],ebx
  40eb4e:	lock repz imul ebp,DWORD PTR [edi-0x7d],0x76
  40eb54:	inc    eax
  40eb55:	(bad)  
  40eb56:	retf   0x18a9
  40eb59:	scas   eax,DWORD PTR es:[edi]
  40eb5a:	aaa    
  40eb5b:	and    DWORD PTR ss:[ebx-0x7e],ecx
  40eb5f:	rol    DWORD PTR [ebp+0x66c7f7e9],1
  40eb65:	mov    bh,0xc
  40eb67:	mov    esi,0x59cf4c7d
  40eb6c:	pop    eax
  40eb6d:	adc    edx,DWORD PTR [esp]
  40eb70:	inc    ebp
  40eb71:	fdivr  QWORD PTR [eax-0x6ed05b9d]
  40eb77:	scas   eax,DWORD PTR es:[edi]
  40eb78:	push   ebx
  40eb79:	and    BYTE PTR [ecx],cl
  40eb7b:	sub    dl,BYTE PTR [ecx-0x4f78d45f]
  40eb81:	ins    DWORD PTR es:[edi],dx
  40eb82:	fwait
  40eb83:	retf   0xaa5b
  40eb86:	jne    0x40eba5
  40eb88:	ror    BYTE PTR [ebp+0x45c7c54d],0xa0
  40eb8f:	xchg   edi,eax
  40eb90:	inc    ecx
  40eb91:	add    BYTE PTR [eax],al
  40eb93:	mov    DWORD PTR [ebp-0x5c],0xa7d
  40eb9a:	mov    DWORD PTR [ebp-0x50],0x772d
  40eba1:	mov    DWORD PTR [ebp-0x4c],0x37d8
  40eba8:	mov    DWORD PTR [ebp-0x40],0x414a
  40ebaf:	mov    DWORD PTR [ebp-0x3c],0x55ef
  40ebb6:	mov    DWORD PTR [ebp-0x30],0x136b
  40ebbd:	mov    DWORD PTR [ebp-0x2c],0x53e4
  40ebc4:	mov    DWORD PTR [ebp-0x20],0x32d8
  40ebcb:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  40ebd2:	mov    DWORD PTR [ebp-0xc],0x3956
  40ebd9:	mov    DWORD PTR [ebp-0xa4],0x4e57
  40ebe3:	mov    DWORD PTR [ebp-0x94],0x1
  40ebed:	mov    DWORD PTR [ebp-0x14],0x17ab
  40ebf4:	mov    DWORD PTR [ebp-0x64],0x7a3d
  40ebfb:	mov    DWORD PTR [ebp-0x54],0x378a
  40ec02:	mov    DWORD PTR [ebp-0x74],0x5a00
  40ec09:	mov    DWORD PTR [ebp-0x24],0x1f3a
  40ec10:	mov    DWORD PTR [ebp-0x84],0x9a225
  40ec1a:	mov    DWORD PTR [ebp-0x44],0x31f8
  40ec21:	mov    DWORD PTR [ebp-0x34],0x3663
  40ec28:	mov    DWORD PTR [ebp-0xb4],0x3165
  40ec32:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  40ec3c:	mov    DWORD PTR [ebp-0xbc],0x43cc
  40ec46:	mov    DWORD PTR [ebp-0xb0],0x7564
  40ec50:	mov    DWORD PTR [ebp-0xac],0x18cf
  40ec5a:	mov    DWORD PTR [ebp-0xa0],0x3135
  40ec64:	mov    DWORD PTR [ebp-0x9c],0x568d
  40ec6e:	mov    DWORD PTR [ebp-0x90],0x11f2
  40ec78:	mov    DWORD PTR [ebp-0x8c],0x63ea
  40ec82:	mov    DWORD PTR [ebp-0x10],0x3066
  40ec89:	mov    DWORD PTR [ebp-0x8],0x6ed2
  40ec90:	push   0x7e1d
  40ec95:	mov    DWORD PTR [ebp-0x4],0x30f4
  40ec9c:	mov    eax,DWORD PTR [ebp-0x20]
  40ec9f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40eca2:	push   0x5380
  40eca7:	push   ecx
  40eca8:	push   eax
  40eca9:	call   0x41594e
  40ecae:	mov    ecx,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x30]
  40ecb3:	xor    ecx,eax
  40ecb5:	mov    esi,edx
  40ecb7:	mov    edx,DWORD PTR [ebp-0x2c]
  40ecba:	mov    eax,DWORD PTR [ebp-0x40]
  40ecbd:	xor    esi,edx
  40ecbf:	mov    edx,DWORD PTR [ebp-0x3c]
  40ecc2:	xor    ecx,0xf3a
  40ecc8:	or     ecx,eax
  40ecca:	mov    eax,ds:0x422708
  40eccf:	mov    eax,DWORD PTR [eax+0x1d8]
  40ecd5:	mov    eax,DWORD PTR [eax]
  40ecd7:	xor    esi,0x6665
  40ecdd:	or     esi,edx
  40ecdf:	add    ecx,0xef6a96a5
  40ece5:	cdq    
  40ece6:	adc    esi,0xc8b6a000
  40ecec:	cmp    eax,ecx
  40ecee:	jne    0x40ecfc
  40ecf4:	cmp    edx,esi
  40ecf6:	je     0x40ed5b
  40ecfc:	mov    eax,DWORD PTR [ebp-0x50]
  40ecff:	mov    ecx,DWORD PTR [ebp-0x4c]
  40ed02:	mov    edx,DWORD PTR [ebp-0x60]
  40ed05:	mov    esi,DWORD PTR [ebp-0x5c]
  40ed08:	add    eax,0x7818
  40ed0d:	adc    ecx,0x87
  40ed13:	or     eax,edx
  40ed15:	mov    edx,DWORD PTR [ebp-0x70]
  40ed18:	or     ecx,esi
  40ed1a:	mov    esi,DWORD PTR [ebp-0x6c]
  40ed1d:	push   esi
  40ed1e:	push   edx
  40ed1f:	push   ecx
  40ed20:	push   eax
  40ed21:	call   0x41594e
  40ed26:	mov    ecx,DWORD PTR [ebp-0x80]
  40ed29:	mov    esi,DWORD PTR [ebp-0x7c]
  40ed2c:	and    eax,ecx
  40ed2e:	mov    ecx,DWORD PTR ds:0x422708
  40ed34:	mov    ecx,DWORD PTR [ecx+0x1d0]
  40ed3a:	mov    ecx,DWORD PTR [ecx]
  40ed3c:	and    edx,esi
  40ed3e:	xor    eax,0x2b01
  40ed43:	xor    edx,0x2021
  40ed49:	xor    esi,esi
  40ed4b:	cmp    ecx,eax
  40ed4d:	jne    0x40f1dc
  40ed53:	cmp    esi,edx
  40ed55:	jne    0x40f1dc
  40ed5b:	mov    eax,DWORD PTR [ebp-0xa4]
  40ed61:	mov    ecx,DWORD PTR [ebp-0xc]
  40ed64:	add    eax,0x80ca
  40ed69:	or     eax,ecx
  40ed6b:	mov    ecx,DWORD PTR ds:0x4227a4
  40ed71:	or     eax,0x686
  40ed76:	xor    eax,0x3eec
  40ed7b:	lea    eax,[eax+ecx*1-0xc11b]
  40ed82:	xor    DWORD PTR ds:0x42279c,eax
  40ed88:	mov    eax,DWORD PTR [ebp-0x64]
  40ed8b:	and    eax,0x4dff
  40ed90:	add    eax,DWORD PTR [ebp-0x14]
  40ed93:	mov    ecx,DWORD PTR [ebp-0x94]
  40ed99:	xor    eax,0x676c
  40ed9e:	xor    edx,edx
  40eda0:	div    ecx
  40eda2:	mov    ecx,DWORD PTR [ebp-0x24]
  40eda5:	mov    edx,DWORD PTR [ebp-0x74]
  40eda8:	xor    ecx,0x6e1e
  40edae:	imul   ecx,edx
  40edb1:	mov    edx,DWORD PTR [ebp+0x8]
  40edb4:	push   0x4
  40edb6:	push   0xe4c37b20
  40edbb:	xor    eax,0x3884
  40edc0:	mov    eax,DWORD PTR [eax+edx*1]
  40edc3:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  40edca:	mov    eax,DWORD PTR [ebp-0x34]
  40edcd:	mov    edx,DWORD PTR [ebp-0xb4]
  40edd3:	lea    eax,[edx+eax*1-0x76d2]
  40edda:	mov    edx,DWORD PTR [ebp-0x44]
  40eddd:	mov    esi,DWORD PTR [ebp-0x84]
  40ede3:	or     eax,edx
  40ede5:	xor    edx,edx
  40ede7:	div    esi
  40ede9:	mov    edx,DWORD PTR [ebp-0x54]
  40edec:	add    eax,0x43d7
  40edf1:	xor    eax,0x5e6a
  40edf6:	add    eax,DWORD PTR [edx+ecx*1]
  40edf9:	mov    ecx,DWORD PTR ds:0x42279c
  40edff:	add    DWORD PTR [eax],ecx
  40ee01:	mov    eax,DWORD PTR [ebp-0x90]
  40ee07:	mov    ecx,DWORD PTR [ebp-0x8c]
  40ee0d:	mov    edx,DWORD PTR [ebp-0xa0]
  40ee13:	mov    esi,DWORD PTR [ebp-0x9c]
  40ee19:	sub    edx,eax
  40ee1b:	mov    eax,DWORD PTR [ebp-0xb0]
  40ee21:	sbb    esi,ecx
  40ee23:	mov    ecx,DWORD PTR [ebp-0xac]
  40ee29:	xor    edx,eax
  40ee2b:	mov    eax,DWORD PTR [ebp-0xc0]
  40ee31:	xor    esi,ecx
  40ee33:	mov    ecx,DWORD PTR [ebp-0xbc]
  40ee39:	add    edx,eax
  40ee3b:	adc    esi,ecx
  40ee3d:	add    edx,0x2313
  40ee43:	adc    esi,0x2a00
  40ee49:	push   esi
  40ee4a:	push   edx
  40ee4b:	call   0x42227d
  40ee50:	mov    ecx,0x1207
  40ee55:	sub    ecx,eax
  40ee57:	push   0x0
  40ee59:	pop    eax
  40ee5a:	sbb    eax,edx
  40ee5c:	mov    edx,DWORD PTR ds:0x42279c
  40ee62:	xor    esi,esi
  40ee64:	jmp    0x40f1a7
  40ee69:	mov    bh,0x51
  40ee6b:	lods   eax,DWORD PTR ds:[esi]
  40ee6c:	xchg   edi,eax
  40ee6d:	mov    ebx,0x8571b7bb
  40ee72:	pop    ecx
  40ee73:	xor    ch,bl
  40ee75:	js     0x40ee93
  40ee77:	leave  
  40ee78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee79:	in     eax,dx
  40ee7a:	adc    bh,BYTE PTR [esi-0x413bfe42]
  40ee80:	mov    esi,0x93f5fd70
  40ee85:	fst    QWORD PTR [edx+0x75]
  40ee88:	jp     0x40ee29
  40ee8a:	dec    ebx
  40ee8b:	lods   eax,DWORD PTR ds:[esi]
  40ee8c:	lahf   
  40ee8d:	sub    ch,BYTE PTR [eax+0x2c81318f]
  40ee93:	(bad)  
  40ee94:	adc    cl,BYTE PTR [edi]
  40ee96:	pop    eax
  40ee97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee98:	rol    esi,0x5
  40ee9b:	mov    ax,WORD PTR [ecx+0x7ee7ade2]
  40eea2:	pop    edx
  40eea3:	ins    BYTE PTR es:[edi],dx
  40eea4:	xchg   DWORD PTR [edx],edx
  40eea6:	sar    DWORD PTR [edx],1
  40eea8:	jmp    0x40ee50
  40eeaa:	jl     0x40ef03
  40eeac:	xchg   DWORD PTR [ecx+0x3],eax
  40eeaf:	aaa    
  40eeb0:	pop    edx
  40eeb1:	jle    0x40ee8b
  40eeb3:	aam    0xd5
  40eeb5:	aad    0x8a
  40eeb7:	jo     0x40ee3b
  40eeb9:	rcr    BYTE PTR [edx+esi*2],1
  40eebc:	dec    eax
  40eebd:	xchg   edx,ebp
  40eebf:	mov    WORD PTR [ebp+0x11],es
  40eec2:	nop
  40eec3:	sbb    BYTE PTR [eax],dh
  40eec5:	int3   
  40eec6:	aam    0x62
  40eec8:	imul   ecx,edi,0x65
  40eecb:	stos   DWORD PTR es:[edi],eax
  40eecc:	aam    0x75
  40eece:	mov    al,0x4e
  40eed0:	hlt    
  40eed1:	iret   
  40eed2:	push   ss
  40eed3:	mov    bh,0x51
  40eed5:	sahf   
  40eed6:	sbb    eax,0x256b3162
  40eedb:	test   eax,0x981567b
  40eee0:	add    ch,bl
  40eee2:	gs mov bl,0x77
  40eee5:	and    edx,DWORD PTR [edx-0x5b]
  40eee8:	dec    ebx
  40eee9:	sbb    al,0xbc
  40eeeb:	or     dh,BYTE PTR [eax-0x1a]
  40eeee:	jne    0x40ef45
  40eef0:	mov    DWORD PTR ds:0x71432d4a,esi
  40eef6:	pop    esi
  40eef7:	sub    esp,DWORD PTR [eax]
  40eef9:	sahf   
  40eefa:	jnp    0x40eecf
  40eefc:	mov    fs,ebx
  40eefe:	adc    eax,0xddc5ba13
  40ef03:	fld    st(2)
  40ef05:	sbb    BYTE PTR [eax+0x1833518b],0xe1
  40ef0c:	rcr    BYTE PTR [edx+eax*2+0x5c566a41],cl
  40ef13:	sub    eax,0x463b8561
  40ef18:	je     0x40ef27
  40ef1a:	(bad)  
  40ef1b:	loope  0x40ef81
  40ef1d:	mov    ds,WORD PTR [eax]
  40ef1f:	outs   dx,DWORD PTR ds:[esi]
  40ef20:	push   es
  40ef21:	mov    eax,ds:0x80ec5b35
  40ef26:	dec    ebp
  40ef27:	sahf   
  40ef28:	and    al,0xd6
  40ef2a:	lds    ebx,FWORD PTR [edi-0x673ec501]
  40ef30:	rol    bh,0xe1
  40ef33:	imul   eax,DWORD PTR [edi-0x362ffb7e],0xaf17493d
  40ef3d:	cdq    
  40ef3e:	inc    esp
  40ef3f:	jae    0x40ef5e
  40ef41:	inc    edi
  40ef42:	xchg   ecx,eax
  40ef43:	or     eax,0x62e57968
  40ef48:	adc    al,0xc
  40ef4a:	sbb    al,BYTE PTR [eax]
  40ef4c:	out    dx,al
  40ef4d:	xor    ch,BYTE PTR [ebx]
  40ef4f:	jns    0x40eedf
  40ef51:	je     0x40eee6
  40ef53:	daa    
  40ef54:	mov    bl,0x9c
  40ef56:	in     al,dx
  40ef57:	mov    es,WORD PTR [esi+0x739bde21]
  40ef5d:	or     ebx,ebp
  40ef5f:	jne    0x40ef8a
  40ef61:	int    0xf1
  40ef63:	(bad)  
  40ef64:	inc    esi
  40ef65:	mov    ah,0x7f
  40ef67:	inc    edi
  40ef68:	mov    cl,BYTE PTR [ebp-0x1e9fa8b3]
  40ef6e:	push   esp
  40ef6f:	test   BYTE PTR [edx],dh
  40ef71:	sbb    eax,0x9ad843f4
  40ef76:	ret    0xdc19
  40ef79:	xor    eax,0x77d0e74c
  40ef7e:	clc    
  40ef7f:	jo     0x40ef94
  40ef81:	mov    ds:0x71469453,al
  40ef86:	lds    eax,FWORD PTR [ecx]
  40ef88:	imul   ebp,DWORD PTR [eax+eiz*8-0x167bc348],0xdffd9df8
  40ef93:	xchg   eax,edx
  40ef95:	mov    bh,0x1a
  40ef97:	dec    ebp
  40ef98:	xlat   BYTE PTR ds:[ebx]
  40ef99:	pop    ds
  40ef9a:	fs popa 
  40ef9c:	mov    WORD PTR [ecx+ebx*4+0x3d],ss
  40efa0:	int3   
  40efa1:	dec    eax
  40efa2:	xor    DWORD PTR [esi],esp
  40efa4:	je     0x40efbe
  40efa6:	or     cl,ah
  40efa8:	push   0xffffffde
  40efaa:	ret    0x8389
  40efad:	ror    DWORD PTR [esp+eiz*2-0x3195b451],0xc9
  40efb5:	(bad)  
  40efb6:	lds    ebx,FWORD PTR [ebx+ebp*2+0x4188a875]
  40efbd:	mov    ah,0xaa
  40efbf:	data16 aad 0x51
  40efc2:	add    al,0x39
  40efc4:	dec    eax
  40efc5:	ror    DWORD PTR [eax-0x16],1
  40efc8:	add    al,0xb3
  40efca:	popf   
  40efcb:	or     eax,0xd3bef249
  40efd0:	ss lock iret 
  40efd3:	ret    
  40efd4:	mov    bl,0x5b
  40efd6:	jg     0x40efcd
  40efd8:	out    0x4f,al
  40efda:	out    0x27,al
  40efdc:	jp     0x40ef97
  40efde:	js     0x40eff8
  40efe0:	outs   dx,BYTE PTR ds:[esi]
  40efe1:	imul   esp,DWORD PTR [ecx+0x6854e8a7],0x8fe938ba
  40efeb:	stc    
  40efec:	mov    bh,0xaf
  40efee:	jns    0x40efc1
  40eff0:	popf   
  40eff1:	imul   eax,DWORD PTR [edi+0x61],0xfa8f414f
  40eff8:	jecxz  0x40efd1
  40effa:	scas   eax,DWORD PTR es:[edi]
  40effb:	pop    ebp
  40effc:	idiv   esp
  40effe:	imul   ebp,DWORD PTR [ebx+ebp*1-0x38],0xc
  40f003:	push   edx
  40f004:	jmp    0x40efdb
  40f006:	push   0xffffffc5
  40f008:	add    eax,0xc33f3281
  40f00d:	fwait
  40f00e:	sbb    eax,0xfb4f5ed3
  40f013:	xchg   esi,eax
  40f014:	rcr    BYTE PTR [eax],1
  40f016:	fsubr  QWORD PTR [esi]
  40f018:	popf   
  40f019:	mov    ecx,0xaf1cc0d7
  40f01e:	add    dh,BYTE PTR [edi+0xa]
  40f021:	out    dx,eax
  40f022:	cmp    ebp,DWORD PTR [ecx-0x5ee2d080]
  40f028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f029:	loopne 0x40efef
  40f02b:	mov    cl,0x1e
  40f02d:	stos   DWORD PTR es:[edi],eax
  40f02e:	xchg   ebx,eax
  40f02f:	or     DWORD PTR [ebp+0x58],0x17eb494a
  40f036:	push   ebx
  40f037:	xchg   edi,eax
  40f038:	idiv   esi
  40f03a:	fbstp  TBYTE PTR [ecx+0x221852d]
  40f040:	xor    DWORD PTR [esi+0x2],esp
  40f043:	fdivr  DWORD PTR [edx+0x3aa01f50]
  40f049:	jmp    0x846b:0x282e7925
  40f050:	push   ebx
  40f051:	out    0xa9,eax
  40f053:	test   DWORD PTR [ecx+0x6],ebp
  40f056:	xchg   al,al
  40f058:	lods   al,BYTE PTR ds:[esi]
  40f059:	scas   al,BYTE PTR es:[edi]
  40f05a:	aas    
  40f05b:	xchg   ecx,eax
  40f05c:	imul   esp,DWORD PTR [eax+0x29],0xa26bb506
  40f063:	or     BYTE PTR [ecx],bl
  40f065:	stc    
  40f066:	mov    ds:0xb198d145,al
  40f06b:	mov    ch,0xb6
  40f06d:	adc    edx,DWORD PTR [eax-0x4fc524bf]
  40f073:	in     eax,0x8
  40f075:	mov    dl,0x71
  40f077:	push   0xffffff92
  40f079:	and    al,0xde
  40f07b:	jecxz  0x40f093
  40f07d:	dec    ebp
  40f07e:	adc    BYTE PTR ds:0xd3ca381d,al
  40f084:	sahf   
  40f085:	(bad)  
  40f086:	retf   
  40f087:	xchg   ebx,eax
  40f088:	xor    eax,0x2747a666
  40f08d:	fsubr  QWORD PTR [ecx]
  40f08f:	ss pop ecx
  40f091:	dec    edx
  40f092:	(bad)  
  40f093:	call   0x91eafd21
  40f098:	scas   eax,DWORD PTR es:[edi]
  40f099:	mov    edx,0x898ef4e5
  40f09e:	outs   dx,DWORD PTR ds:[esi]
  40f09f:	and    BYTE PTR [ecx],cl
  40f0a1:	test   DWORD PTR [edx-0x3f22220e],0x8cc8b834
  40f0ab:	xchg   edi,eax
  40f0ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0ad:	lods   al,BYTE PTR ds:[esi]
  40f0ae:	sar    BYTE PTR [edi-0x3b52abcb],cl
  40f0b4:	jbe    0x40f0b7
  40f0b6:	repnz sbb dh,BYTE PTR [ecx]
  40f0b9:	stc    
  40f0ba:	and    DWORD PTR [ebx],edi
  40f0bc:	jns    0x40f134
  40f0be:	ret    0xaafd
  40f0c1:	push   ebx
  40f0c2:	xchg   ecx,eax
  40f0c3:	jnp    0x40f12a
  40f0c5:	cmp    DWORD PTR ss:[esi],eax
  40f0c8:	into   
  40f0c9:	mov    cl,0x19
  40f0cb:	rcl    BYTE PTR ds:0x2c069de0,1
  40f0d1:	dec    ebx
  40f0d2:	and    DWORD PTR [esi+0x5a],ebp
  40f0d5:	cmovb  edi,DWORD PTR [edx+ebx*2-0x5bda2524]
  40f0dd:	lock repnz dec esi
  40f0e0:	mov    bh,0xd8
  40f0e2:	ds and eax,0xc30eac15
  40f0e8:	sbb    eax,0xabf87740
  40f0ed:	jo     0x40f0de
  40f0ef:	inc    ebp
  40f0f0:	gs (bad) 
  40f0f2:	les    esi,FWORD PTR [esi+0x41b5dc23]
  40f0f8:	cmp    BYTE PTR [eax+0x35],dl
  40f0fb:	clc    
  40f0fc:	mov    BYTE PTR [edi],ah
  40f0fe:	pop    eax
  40f0ff:	fnsave [edx]
  40f101:	aaa    
  40f102:	mov    al,ds:0xa68d75f
  40f107:	jbe    0x40f0b4
  40f109:	cmp    edi,DWORD PTR [edi]
  40f10b:	xor    BYTE PTR [ebx+0x280b1411],0xea
  40f112:	or     ebx,DWORD PTR [esi+0x15]
  40f115:	out    dx,eax
  40f116:	and    DWORD PTR [eax+0x7b],esi
  40f119:	push   esi
  40f11a:	ins    BYTE PTR es:[edi],dx
  40f11b:	sub    BYTE PTR [esi],0x2
  40f11e:	test   al,0xf3
  40f120:	fwait
  40f121:	rol    DWORD PTR [ecx+0x734b585],0xb5
  40f128:	adc    DWORD PTR [esi-0x5c86751c],ebx
  40f12e:	aam    0x48
  40f130:	jae    0x40f112
  40f132:	fadd   QWORD PTR [eax+eiz*2+0x58]
  40f136:	cmp    esi,DWORD PTR [esi]
  40f138:	icebp  
  40f139:	jmp    FWORD PTR [edx-0x6bb62eaf]
  40f13f:	adc    eax,0x1912b89a
  40f144:	mov    dl,0xb4
  40f146:	xchg   ebp,eax
  40f147:	in     eax,dx
  40f148:	pop    edi
  40f149:	or     bh,BYTE PTR [esi+0x6fa6e1f7]
  40f14f:	push   ecx
  40f150:	imul   ecx,DWORD PTR [eax+0x32ebcd76],0x29
  40f157:	inc    edx
  40f158:	ret    0xeb96
  40f15b:	cdq    
  40f15c:	sbb    DWORD PTR [eax],ecx
  40f15e:	dec    ebx
  40f15f:	lds    ebx,FWORD PTR [ecx+0x5a806a80]
  40f165:	sbb    BYTE PTR [eax],0x50
  40f168:	out    dx,al
  40f169:	cmp    cl,dh
  40f16b:	retf   
  40f16c:	(bad)  
  40f16d:	(bad)  
  40f16e:	dec    ecx
  40f16f:	imul   edi,eax,0x4e
  40f172:	retf   
  40f173:	jb     0x40f11b
  40f175:	dec    ecx
  40f176:	sub    al,0x12
  40f178:	lds    esi,FWORD PTR [ecx]
  40f17a:	push   eax
  40f17b:	pop    edx
  40f17c:	ds imul dh
  40f17f:	clc    
  40f180:	loope  0x40f122
  40f182:	sbb    DWORD PTR [ecx],ecx
  40f184:	sub    eax,0xd40be35f
  40f189:	push   0x94b9d130
  40f18e:	cld    
  40f18f:	mov    edx,0xfe1db4f9
  40f194:	(bad)  
  40f195:	ins    BYTE PTR es:[edi],dx
  40f196:	inc    BYTE PTR [edx+0x5]
  40f199:	fild   QWORD PTR [eax+0x10621a00]
  40f19f:	fs enter 0x5fd3,0xf
  40f1a4:	jge    0x40f1fb
  40f1a6:	imul   edi,DWORD PTR [ebx],0xffffffd1
  40f1a9:	jne    0x40f1dc
  40f1af:	cmp    esi,eax
  40f1b1:	jne    0x40f1dc
  40f1b7:	mov    eax,DWORD PTR [ebp-0x4]
  40f1ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f1bd:	add    eax,0x4296
  40f1c2:	shr    eax,0x2
  40f1c5:	or     eax,ecx
  40f1c7:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1ca:	xor    eax,ecx
  40f1cc:	xor    eax,0x4e94
  40f1d1:	add    eax,DWORD PTR ds:0x42279c
  40f1d7:	mov    ds:0x4227a4,eax
  40f1dc:	pop    esi
  40f1dd:	leave  
  40f1de:	ret    0x4
  40f1e1:	push   ebp
  40f1e2:	mov    ebp,esp
  40f1e4:	sub    esp,0x58
  40f1e7:	push   ebx
  40f1e8:	push   esi
  40f1e9:	jmp    0x40f59d
  40f1ee:	jne    0x40f25e
  40f1f0:	mov    ds:0xb73caafc,al
  40f1f5:	je     0x40f1e5
  40f1f7:	fsubr  QWORD PTR [ecx+edx*8-0x2c]
  40f1fb:	ss push esi
  40f1fd:	shl    DWORD PTR [ecx],1
  40f1ff:	sbb    BYTE PTR [esi-0x413b1c42],bh
  40f205:	mov    esi,0xd9259bbd
  40f20a:	and    BYTE PTR [ebp+0x55],ah
  40f20d:	sahf   
  40f20e:	jmp    0x40f25c
  40f210:	mov    BYTE PTR [esi],cl
  40f212:	xlat   BYTE PTR ds:[ebx]
  40f213:	xor    al,BYTE PTR [edx+ecx*8]
  40f216:	(bad)  
  40f217:	stos   BYTE PTR es:[edi],al
  40f218:	sub    al,0x4e
  40f21a:	cmp    BYTE PTR [esi],bl
  40f21c:	push   esi
  40f21d:	dec    edx
  40f21e:	(bad)  
  40f21f:	cld    
  40f220:	shl    bh,1
  40f222:	xlat   BYTE PTR ds:[ebx]
  40f223:	in     eax,dx
  40f224:	jp     0x40f258
  40f226:	xchg   ebx,eax
  40f227:	jg     0x40f254
  40f229:	call   0xdc602739
  40f22e:	inc    edx
  40f22f:	mov    ch,0x26
  40f231:	adc    esi,eax
  40f233:	xor    al,0x89
  40f235:	jns    0x40f26c
  40f237:	xchg   esp,eax
  40f238:	aam    0x20
  40f23a:	jmp    0xaca9:0xc53f75
  40f241:	and    ebp,DWORD PTR [edi+edx*4+0x2c]
  40f245:	imul   eax,DWORD PTR [ebp+0x7a882a2c],0xbd325457
  40f24f:	cmp    eax,0x8469fd09
  40f254:	pop    edx
  40f255:	jo     0x40f2a4
  40f257:	mov    bl,0x43
  40f259:	jb     0x40f21f
  40f25b:	pop    esp
  40f25c:	aad    0xc7
  40f25e:	in     eax,0xf
  40f260:	fwait
  40f261:	loopne 0x40f2ac
  40f263:	out    dx,al
  40f264:	es scas eax,DWORD PTR es:[edi]
  40f266:	adc    al,0x76
  40f268:	pop    ebx
  40f269:	js     0x40f28f
  40f26b:	fs sahf 
  40f26d:	push   ds
  40f26e:	loop   0x40f2c5
  40f270:	jmp    0x40f1f2
  40f272:	(bad)  
  40f273:	pop    esp
  40f274:	imul   edx,DWORD PTR [edi+0x1b],0x68
  40f278:	jae    0x40f234
  40f27a:	pop    ecx
  40f27b:	sub    DWORD PTR [edi],esp
  40f27d:	(bad)  
  40f27e:	mov    ds:0x3d90bff7,al
  40f283:	out    dx,eax
  40f284:	lods   eax,DWORD PTR ds:[esi]
  40f285:	add    eax,0xd4b867f5
  40f28a:	jb     0x40f2fc
  40f28c:	aaa    
  40f28d:	and    BYTE PTR [ebp+0x1b],dh
  40f290:	push   esi
  40f291:	mov    ch,0x15
  40f293:	ret    
  40f294:	js     0x40f240
  40f296:	sub    al,0x44
  40f298:	out    0x77,eax
  40f29a:	mov    eax,0x1d25e323
  40f29f:	and    ebx,DWORD PTR [ebx]
  40f2a1:	adc    BYTE PTR [ebp-0x39c6ef18],dl
  40f2a7:	in     al,0x10
  40f2a9:	pop    ds
  40f2aa:	sub    eax,0xe3fe879f
  40f2af:	mov    al,0xa2
  40f2b1:	xchg   esp,eax
  40f2b2:	gs inc eax
  40f2b4:	mov    edx,0xa2ffba91
  40f2b9:	cmp    DWORD PTR [edx],ebx
  40f2bb:	pop    ecx
  40f2bc:	push   ds
  40f2bd:	mov    ebp,0x5b7a4125
  40f2c2:	or     eax,0x85742930
  40f2c7:	and    al,0x87
  40f2c9:	leave  
  40f2ca:	xchg   ebx,eax
  40f2cb:	and    eax,0x72ac24fd
  40f2d0:	js     0x40f2e6
  40f2d2:	ret    0x4598
  40f2d5:	call   DWORD PTR [ecx+0x5c5416d2]
  40f2db:	adc    eax,0xa931259b
  40f2e0:	jnp    0x40f2e1
  40f2e2:	inc    edx
  40f2e3:	imul   ebx,edi,0x2283d78e
  40f2e9:	mov    bl,0x24
  40f2eb:	les    esi,FWORD PTR [esi-0x28]
  40f2ee:	mov    dh,BYTE PTR [edx+0x41]
  40f2f1:	jl     0x40f290
  40f2f3:	mov    ds:0xaecd1d76,al
  40f2f8:	pop    edi
  40f2f9:	jns    0x40f282
  40f2fb:	outs   dx,DWORD PTR ds:[esi]
  40f2fc:	pop    ebx
  40f2fd:	push   eax
  40f2fe:	call   DWORD PTR [ebx+0x59bb03a0]
  40f304:	mov    esp,?
  40f306:	popa   
  40f307:	mov    bl,dh
  40f309:	ret    0xe618
  40f30c:	iret   
  40f30d:	and    DWORD PTR [ecx],ebp
  40f30f:	jmp    0x40f2ea
  40f311:	jo     0x40f2da
  40f313:	jb     0x40f29d
  40f315:	dec    ebx
  40f316:	mov    edi,ecx
  40f318:	test   eax,0xfb3308de
  40f31d:	or     BYTE PTR [edx+0x7e],0x53
  40f321:	mov    ebp,0x1a19c027
  40f326:	and    ebp,DWORD PTR [edi+0x19]
  40f329:	fsub   QWORD PTR [edx]
  40f32b:	mov    WORD PTR [edi+0x6095a3c1],ds
  40f331:	nop
  40f332:	callw  0xe723
  40f336:	sub    BYTE PTR [edi+0x59],ch
  40f339:	add    al,0x6c
  40f33b:	call   0x4bd2:0x64a92fc
  40f342:	fwait
  40f343:	arpl   WORD PTR [edx],ax
  40f345:	xchg   esp,eax
  40f346:	or     ch,dl
  40f348:	cmp    ebx,esi
  40f34a:	out    0xda,eax
  40f34c:	out    0xfc,al
  40f34e:	mov    ebx,0xc5708fb1
  40f353:	or     eax,0xbb378dcf
  40f358:	ins    BYTE PTR es:[edi],dx
  40f359:	sbb    DWORD PTR [edi-0x588c0250],eax
  40f35f:	or     eax,0x32c46508
  40f364:	shl    DWORD PTR [eax+0x37],cl
  40f367:	pop    ds
  40f368:	push   esp
  40f369:	das    
  40f36a:	adc    ah,BYTE PTR [ebx+0x675be06a]
  40f370:	clc    
  40f371:	jbe    0x40f31b
  40f373:	inc    edx
  40f374:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40f376:	sbb    DWORD PTR [edx+0x4],0x36
  40f37a:	cmc    
  40f37b:	push   ds
  40f37c:	outs   dx,BYTE PTR ds:[esi]
  40f37d:	add    eax,0x41cd542c
  40f382:	aam    0x9e
  40f384:	jns    0x40f3ab
  40f386:	dec    edx
  40f387:	mov    ecx,0xc3d824e4
  40f38c:	pop    eax
  40f38d:	js     0x40f3b8
  40f38f:	mov    eax,ds:0x173700c
  40f394:	leave  
  40f395:	adc    al,0xb4
  40f397:	or     ch,BYTE PTR [eax-0x27c4abbb]
  40f39d:	sbb    al,0x3e
  40f39f:	fcmovnu st,st(5)
  40f3a1:	nop
  40f3a2:	pop    ebp
  40f3a3:	adc    esp,DWORD PTR [esp+ebp*8-0x7b4ab4d2]
  40f3aa:	pop    es
  40f3ab:	xor    edi,DWORD PTR [edi]
  40f3ad:	mov    cl,0x2
  40f3af:	cmc    
  40f3b0:	inc    eax
  40f3b1:	adc    ah,BYTE PTR fs:[ecx+0x27797d5a]
  40f3b8:	pop    es
  40f3b9:	in     al,0xe1
  40f3bb:	inc    edx
  40f3bc:	test   DWORD PTR [ebx],0x1722f563
  40f3c2:	mov    dl,0x5c
  40f3c4:	sub    BYTE PTR [ebx+eiz*8+0x3067694],0xf5
  40f3cc:	fs jp  0x40f398
  40f3cf:	ficom  WORD PTR [eax-0x57]
  40f3d2:	adc    esi,DWORD PTR [ebx+0x7928663]
  40f3d8:	xchg   edx,eax
  40f3d9:	pusha  
  40f3da:	or     al,0x90
  40f3dc:	cld    
  40f3dd:	xchg   ecx,eax
  40f3de:	inc    esp
  40f3df:	xchg   edi,eax
  40f3e0:	or     eax,0xb1a9feb8
  40f3e5:	scas   al,BYTE PTR es:[edi]
  40f3e6:	jnp    0x40f397
  40f3e8:	jne    0x40f455
  40f3ea:	mov    cl,0x39
  40f3ec:	lock pop edi
  40f3ee:	xor    al,ah
  40f3f0:	mov    al,ds:0xb4949f21
  40f3f5:	pop    eax
  40f3f6:	cmp    eax,0x172bc630
  40f3fb:	and    al,0x2b
  40f3fd:	ss scas al,BYTE PTR es:[edi]
  40f3ff:	push   esp
  40f400:	mov    ecx,0x2be2dc1c
  40f405:	push   edx
  40f406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f407:	inc    eax
  40f408:	mov    eax,ds:0xbb547972
  40f40d:	push   esp
  40f40e:	cmp    dl,BYTE PTR [eax-0x1a562aaf]
  40f414:	mov    bh,0xd3
  40f416:	clc    
  40f417:	retf   
  40f418:	dec    ebp
  40f419:	or     al,0xe8
  40f41b:	inc    edx
  40f41c:	cmc    
  40f41d:	push   eax
  40f41e:	mov    ecx,0x6c4606de
  40f423:	sbb    DWORD PTR [ebp-0x69],edx
  40f426:	cmp    al,BYTE PTR [ebp-0x40]
  40f429:	adc    ebp,edi
  40f42b:	inc    edx
  40f42c:	mov    eax,ds:0x86bd516a
  40f431:	outs   dx,BYTE PTR ds:[esi]
  40f432:	xor    eax,0x6e110498
  40f437:	stos   BYTE PTR es:[edi],al
  40f438:	xchg   edi,eax
  40f439:	cmp    dh,BYTE PTR ds:0xaea8956e
  40f43f:	mov    ebx,0xe59079e3
  40f444:	xchg   DWORD PTR [ecx+0x2db9882c],ecx
  40f44a:	sbb    eax,0x5708f964
  40f44f:	pop    eax
  40f450:	mov    al,0xf1
  40f452:	sti    
  40f453:	jne    0x40f476
  40f455:	adc    DWORD PTR [edx-0x35],0xffffffe8
  40f459:	int3   
  40f45a:	lods   al,BYTE PTR ds:[esi]
  40f45b:	sbb    eax,0xf3caab10
  40f460:	shl    BYTE PTR [esi],0x7e
  40f463:	(bad)  [eax-0x62]
  40f466:	inc    edi
  40f467:	loopne 0x40f44f
  40f469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f46a:	test   al,0xd1
  40f46c:	mov    eax,ds:0xba5b409b
  40f471:	test   al,0x64
  40f473:	mov    esi,0x519915ac
  40f478:	and    eax,0x42f4563a
  40f47d:	xor    esi,ebp
  40f47f:	jnp    0x40f439
  40f481:	je     0x40f4e8
  40f483:	mov    eax,0xc0b1fda5
  40f488:	sti    
  40f489:	and    al,0xce
  40f48b:	fwait
  40f48c:	sbb    eax,0x9398516a
  40f491:	js     0x40f507
  40f493:	das    
  40f494:	retf   
  40f495:	dec    esi
  40f496:	imul   ecx,DWORD PTR [edi],0x37468656
  40f49c:	and    edx,DWORD PTR [eax-0x59971d5c]
  40f4a2:	into   
  40f4a3:	add    eax,0xa95f0492
  40f4a8:	push   cs
  40f4a9:	dec    edi
  40f4aa:	xor    al,0x6c
  40f4ac:	mov    cl,0x80
  40f4ae:	and    ch,BYTE PTR [eax-0x75]
  40f4b1:	(bad)  
  40f4b2:	jge    0x40f4b8
  40f4b4:	inc    ecx
  40f4b5:	xor    eax,0x107f99e1
  40f4ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4bb:	lods   al,BYTE PTR ds:[esi]
  40f4bc:	jmp    0xc014e068
  40f4c1:	adc    eax,0x9370be3b
  40f4c6:	fisubr WORD PTR [edi+0x63]
  40f4c9:	jecxz  0x40f46d
  40f4cb:	iret   
  40f4cc:	push   ss
  40f4cd:	inc    edx
  40f4ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4cf:	fcom   st(3)
  40f4d1:	cmp    DWORD PTR [edi-0x66],0x8c8ad323
  40f4d8:	out    0x61,al
  40f4da:	xchg   ecx,eax
  40f4db:	inc    eax
  40f4dc:	bound  edi,QWORD PTR [ebp+ebp*8+0x3474e47f]
  40f4e3:	shl    al,1
  40f4e5:	rcr    DWORD PTR [esi+edi*2+0x42f566aa],1
  40f4ec:	sbb    cl,cl
  40f4ee:	fldenv [edi+edx*8+0x6a242e72]
  40f4f5:	fidiv  DWORD PTR [esi+0x2e]
  40f4f8:	pop    ebp
  40f4f9:	mov    BYTE PTR [ebx+0x6b],al
  40f4fc:	out    dx,al
  40f4fd:	fisubr WORD PTR [ebp+0x61469019]
  40f503:	iret   
  40f504:	scas   eax,DWORD PTR es:[edi]
  40f505:	ins    DWORD PTR es:[edi],dx
  40f506:	cs mov dh,0x96
  40f509:	loop   0x40f57c
  40f50b:	imul   ebp,edi,0xffffffe2
  40f50e:	int3   
  40f50f:	(bad)  
  40f510:	test   al,0x5
  40f512:	inc    esi
  40f513:	ret    
  40f514:	sub    ch,bl
  40f516:	or     ebp,DWORD PTR [edi+0x633c9f9c]
  40f51c:	and    al,0xee
  40f51e:	pop    esp
  40f51f:	mov    edx,0x5b7a4d46
  40f524:	(bad)  
  40f525:	bound  eax,QWORD PTR [edi-0x70]
  40f528:	pop    edx
  40f529:	and    ah,BYTE PTR [eax-0x607f18c4]
  40f52f:	aad    0xed
  40f531:	hlt    
  40f532:	test   DWORD PTR [ecx],edx
  40f534:	std    
  40f535:	imul   ebp,esi,0xffffffc1
  40f538:	add    DWORD PTR [eax+eiz*4],ecx
  40f53b:	xor    eax,0xbf8c1026
  40f540:	adc    DWORD PTR [esi-0x28],ebp
  40f543:	hlt    
  40f544:	inc    edi
  40f545:	pop    eax
  40f546:	xchg   esi,eax
  40f547:	int    0x62
  40f549:	scas   eax,DWORD PTR es:[edi]
  40f54a:	leave  
  40f54b:	cmp    ebp,DWORD PTR ds:0xf77251ec
  40f551:	jmp    0xabb5:0xbe949cb9
  40f558:	lea    esp,[esi+0x4e]
  40f55b:	mov    dl,0x9c
  40f55d:	cmp    BYTE PTR ds:0x157f5c92,0x40
  40f564:	pop    ecx
  40f565:	mov    WORD PTR [ebx+edi*4],ds
  40f568:	adc    DWORD PTR [ecx-0x2e8fa8f8],ecx
  40f56e:	jg     0x40f4f3
  40f570:	push   ss
  40f571:	push   0xfffffff0
  40f573:	pop    ebp
  40f574:	fcomp  QWORD PTR [edx]
  40f576:	in     al,0xd9
  40f578:	mov    ah,0xcb
  40f57a:	idiv   DWORD PTR [eax-0x425fcde8]
  40f580:	sub    cl,BYTE PTR [ebx+0x39c96651]
  40f586:	pop    ds
  40f587:	mov    cl,0x6e
  40f589:	leave  
  40f58a:	xor    BYTE PTR [edi],bl
  40f58c:	mov    cl,BYTE PTR [edx-0x78]
  40f58f:	pop    esp
  40f590:	jmp    0x40f587
  40f592:	test   ebp,ebx
  40f594:	jecxz  0x40f615
  40f596:	sbb    ebp,DWORD PTR [esp+edi*2-0x7264128c]
  40f59d:	push   edi
  40f59e:	mov    DWORD PTR [ebp-0x58],0x3082
  40f5a5:	mov    DWORD PTR [ebp-0x54],0x37a2
  40f5ac:	mov    DWORD PTR [ebp-0x50],0x49d6
  40f5b3:	mov    DWORD PTR [ebp-0x4c],0x6390
  40f5ba:	mov    DWORD PTR [ebp-0x48],0x40f2
  40f5c1:	mov    DWORD PTR [ebp-0x44],0x21d4
  40f5c8:	mov    DWORD PTR [ebp-0x28],0x4726
  40f5cf:	mov    DWORD PTR [ebp-0x24],0x221a
  40f5d6:	mov    DWORD PTR [ebp-0x30],0x768c
  40f5dd:	mov    DWORD PTR [ebp-0x2c],0x29e8
  40f5e4:	mov    DWORD PTR [ebp-0x40],0x6cf6
  40f5eb:	mov    DWORD PTR [ebp-0x3c],0x94c
  40f5f2:	mov    DWORD PTR [ebp-0x38],0x4797
  40f5f9:	mov    DWORD PTR [ebp-0x34],0x4439
  40f600:	mov    DWORD PTR [ebp-0x20],0x2531
  40f607:	mov    esi,0x5a3e
  40f60c:	mov    DWORD PTR [ebp-0x1c],esi
  40f60f:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  40f616:	mov    DWORD PTR [ebp-0x14],0x7
  40f61d:	mov    DWORD PTR [ebp-0x10],0xe3a
  40f624:	mov    DWORD PTR [ebp-0xc],0x6a6e
  40f62b:	mov    DWORD PTR [ebp-0x8],0x6b99
  40f632:	mov    DWORD PTR [ebp-0x4],0x2acd
  40f639:	mov    eax,DWORD PTR [ebp-0x10]
  40f63c:	mov    ecx,DWORD PTR [ebp-0xc]
  40f63f:	mov    eax,DWORD PTR [ebp-0x8]
  40f642:	mov    ecx,DWORD PTR [ebp-0x4]
  40f645:	mov    eax,DWORD PTR [ebp-0x18]
  40f648:	mov    ecx,DWORD PTR [ebp-0x14]
  40f64b:	mov    eax,DWORD PTR [ebp-0x8]
  40f64e:	jmp    0x40fa02
  40f653:	pusha  
  40f654:	and    cl,BYTE PTR [esi]
  40f656:	push   ebp
  40f657:	xchg   esp,eax
  40f658:	jns    0x40f602
  40f65a:	cmp    al,0x86
  40f65c:	aas    
  40f65d:	(bad)  
  40f65f:	aas    
  40f660:	(bad)  
  40f661:	or     BYTE PTR [edx-0x4141e1a8],dl
  40f667:	jecxz  0x40f62d
  40f669:	mov    esi,0xddd110be
  40f66e:	fadd   st(3),st
  40f670:	mov    eax,0x3c37b3a1
  40f675:	push   edi
  40f676:	xchg   esi,eax
  40f677:	pop    es
  40f678:	(bad)  
  40f679:	jl     0x40f612
  40f67b:	xor    eax,0x366a0ea1
  40f680:	aad    0xec
  40f682:	scas   eax,DWORD PTR es:[edi]
  40f683:	div    DWORD PTR [ecx+0x55]
  40f686:	outs   dx,BYTE PTR ds:[esi]
  40f687:	scas   eax,DWORD PTR es:[edi]
  40f688:	push   cs
  40f689:	xchg   ebp,eax
  40f68a:	outs   dx,BYTE PTR ds:[esi]
  40f68b:	mov    eax,cr6
  40f68e:	cdq    
  40f68f:	stos   BYTE PTR es:[edi],al
  40f690:	and    eax,ecx
  40f692:	inc    esi
  40f693:	mov    al,ds:0x9377948
  40f698:	je     0x40f6b8
  40f69a:	fisub  DWORD PTR [ecx+0x75]
  40f69d:	mov    ds:0x3e9166f1,eax
  40f6a2:	jge    0x40f6b0
  40f6a4:	mov    edi,DWORD PTR [esi+0x20abe56d]
  40f6aa:	jmp    DWORD PTR [ebx+esi*4+0x329ba40b]
  40f6b1:	xchg   ebp,eax
  40f6b2:	xchg   ecx,eax
  40f6b3:	shl    DWORD PTR gs:[edx+0x1707f166],1
  40f6ba:	mov    WORD PTR [edx],ss
  40f6bc:	mov    cs,WORD PTR [ebp+0x1c2a0413]
  40f6c2:	out    dx,al
  40f6c3:	sbb    dl,0x91
  40f6c6:	(bad)  
  40f6c7:	(bad)  
  40f6c8:	mov    bh,0x48
  40f6ca:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40f6cc:	out    dx,eax
  40f6cd:	call   FWORD PTR ds:0x467f04ad
  40f6d3:	cmp    eax,0xe8c3ce9d
  40f6d8:	pop    esp
  40f6d9:	push   0x52
  40f6db:	lahf   
  40f6dc:	push   0xffffffc6
  40f6de:	add    eax,0x9e80c5dd
  40f6e3:	sbb    esp,eax
  40f6e5:	pop    ebp
  40f6e6:	cli    
  40f6e7:	push   ecx
  40f6e8:	fwait
  40f6e9:	sbb    esi,DWORD PTR [esp+esi*4]
  40f6ec:	mov    bl,0x74
  40f6ee:	(bad)  
  40f6ef:	lock jne 0x40f69f
  40f6f2:	push   edx
  40f6f3:	mov    ch,0x9b
  40f6f5:	clc    
  40f6f6:	sub    cl,BYTE PTR [ecx+ebp*8+0x6c]
  40f6fa:	aam    0x2
  40f6fc:	jmp    0x54cf09a9
  40f701:	and    ebx,ebx
  40f703:	cli    
  40f704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f705:	inc    esp
  40f706:	mov    cl,0xd9
  40f708:	cmp    dl,BYTE PTR [ebp-0x5070a714]
  40f70e:	mov    bl,0x65
  40f710:	out    0x57,al
  40f712:	int    0x24
  40f714:	mov    al,0x9b
  40f716:	xchg   esp,eax
  40f717:	jo     0x40f70a
  40f719:	clc    
  40f71a:	repnz cmc 
  40f71c:	or     edi,DWORD PTR [ebx-0x78]
  40f71f:	(bad)  
  40f720:	fsub   QWORD PTR [ebx-0x39d93207]
  40f726:	pop    ebx
  40f727:	sbb    eax,DWORD PTR [esi+ebp*2]
  40f72a:	xchg   edx,eax
  40f72b:	cmp    edx,eax
  40f72d:	sub    al,0x83
  40f72f:	int    0xfa
  40f731:	mov    ss,WORD PTR [edi+eiz*2]
  40f734:	int    0xc5
  40f736:	and    al,0x7b
  40f738:	icebp  
  40f739:	mov    DWORD PTR [edi],ebx
  40f73b:	mov    esi,0xa00afe65
  40f740:	pop    es
  40f741:	jg     0x40f757
  40f743:	inc    edx
  40f744:	mov    ds:0xf638e842,al
  40f749:	pushf  
  40f74a:	les    esp,FWORD PTR [edx-0x3412c4a7]
  40f750:	ins    DWORD PTR es:[edi],dx
  40f751:	xchg   ebp,eax
  40f752:	or     DWORD PTR [ebx],ebp
  40f754:	fisttp QWORD PTR [ecx]
  40f756:	(bad)  
  40f757:	mov    esp,0x672f546b
  40f75c:	aam    0x1f
  40f75e:	pusha  
  40f75f:	jmp    0xd975eff7
  40f764:	pop    ebp
  40f765:	out    0x25,eax
  40f767:	aad    0xf0
  40f769:	stos   BYTE PTR es:[edi],al
  40f76a:	mov    ch,BYTE PTR [ebx]
  40f76c:	or     DWORD PTR [eax-0x5211e2b2],ecx
  40f772:	shl    BYTE PTR [edx+0xc0c8302],1
  40f778:	mov    ds:0x7ac33d4a,al
  40f77d:	sbb    ah,ah
  40f77f:	das    
  40f780:	aad    0x8d
  40f782:	mov    ebx,0x1467361
  40f787:	loope  0x40f797
  40f789:	adc    dh,BYTE PTR [ecx-0x72]
  40f78c:	das    
  40f78d:	adc    dh,BYTE PTR [esi-0x3f]
  40f790:	inc    eax
  40f791:	loope  0x40f7b4
  40f793:	inc    eax
  40f794:	addps  xmm6,XMMWORD PTR [esi-0x6]
  40f798:	pop    eax
  40f799:	cmp    DWORD PTR [esp+edi*8+0x1e2a138d],esp
  40f7a0:	jmp    0x39e35438
  40f7a5:	push   es
  40f7a6:	ins    BYTE PTR es:[edi],dx
  40f7a7:	mov    dl,0xcd
  40f7a9:	dec    esi
  40f7aa:	stc    
  40f7ab:	arpl   WORD PTR [eax-0x60d1a012],di
  40f7b1:	(bad)  
  40f7b2:	out    0xa3,al
  40f7b4:	jmp    0xdf7a406e
  40f7b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7ba:	outs   dx,BYTE PTR ds:[esi]
  40f7bb:	ror    DWORD PTR [edx-0x454f7288],cl
  40f7c1:	outs   dx,BYTE PTR ds:[esi]
  40f7c2:	sbb    ecx,DWORD PTR [edi]
  40f7c4:	pop    esi
  40f7c5:	inc    eax
  40f7c6:	aaa    
  40f7c7:	repnz xchg esi,eax
  40f7c9:	clc    
  40f7ca:	pop    ecx
  40f7cb:	cmp    bh,ah
  40f7cd:	aas    
  40f7ce:	dec    ebp
  40f7cf:	push   ss
  40f7d0:	jnp    0x40f825
  40f7d2:	jne    0x40f757
  40f7d4:	cdq    
  40f7d5:	pop    edi
  40f7d6:	or     edi,DWORD PTR [esi+0x737766b8]
  40f7dc:	out    dx,eax
  40f7dd:	push   ebp
  40f7de:	popf   
  40f7df:	dec    ebp
  40f7e0:	outs   dx,BYTE PTR ds:[esi]
  40f7e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7e2:	aam    0xca
  40f7e4:	call   0x3ff0:0x71bd2343
  40f7eb:	repnz pop es
  40f7ed:	mov    esi,0x633e95b
  40f7f2:	jnp    0x40f797
  40f7f4:	shl    BYTE PTR ds:0xd7f27733,0x94
  40f7fb:	rol    DWORD PTR [esi],1
  40f7fd:	(bad)  
  40f7fe:	lock dec esp
  40f800:	add    ch,dh
  40f802:	lock sub BYTE PTR [ebp+edx*4-0x30c6865e],0x6
  40f80b:	push   ecx
  40f80c:	mov    es,WORD PTR [edx-0x32]
  40f80f:	fisttp WORD PTR [ebx+0x1608ea3b]
  40f815:	out    dx,eax
  40f816:	aaa    
  40f817:	xchg   ecx,eax
  40f818:	out    dx,eax
  40f819:	mov    bl,BYTE PTR [ecx+edx*4]
  40f81c:	je     0x40f7fb
  40f81e:	sub    BYTE PTR [ebp+0x49],dh
  40f821:	add    DWORD PTR [ecx],edi
  40f823:	shl    DWORD PTR [ebx-0x6b],cl
  40f826:	jne    0x40f82c
  40f828:	or     BYTE PTR ds:0x26c2eeb9,0x7
  40f82f:	push   ds
  40f830:	out    0xe6,eax
  40f832:	xchg   edi,eax
  40f833:	(bad)  [edx+0x4c15ec21]
  40f839:	cli    
  40f83a:	push   0xffffff8f
  40f83c:	fsubr  st(3),st
  40f83e:	aam    0x4b
  40f840:	add    al,0x2
  40f842:	dec    edi
  40f843:	test   DWORD PTR ds:0xfcd775b1,0x3089b5fc
  40f84d:	and    ah,BYTE PTR [ecx-0x1fdbd8a2]
  40f853:	(bad)  
  40f854:	mov    esp,0x207398a0
  40f859:	in     eax,0x4e
  40f85b:	test   eax,0xefbaaac3
  40f860:	mov    ebp,0x1a8546ff
  40f865:	jno    0x40f857
  40f867:	push   ds
  40f868:	icebp  
  40f869:	cld    
  40f86a:	mov    cl,BYTE PTR [edx+0x7458c761]
  40f870:	add    BYTE PTR [edx+0x79b41eb2],cl
  40f876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f877:	rol    DWORD PTR [eiz*1+0x5eef9b3b],1
  40f87e:	mov    fs,WORD PTR [eax]
  40f880:	sub    DWORD PTR [ebx+0x747a0b12],eax
  40f886:	inc    edx
  40f887:	imul   ebx,DWORD PTR [eax+eiz*1],0x6b
  40f88b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f88c:	xlat   BYTE PTR ds:[ebx]
  40f88d:	int3   
  40f88e:	inc    ebx
  40f88f:	test   BYTE PTR [edi-0x4c],bl
  40f892:	sub    bh,BYTE PTR [ebp-0x58cc5c35]
  40f898:	fild   QWORD PTR [ebx+0x3b]
  40f89b:	pop    ss
  40f89c:	aaa    
  40f89d:	sbb    ebp,DWORD PTR [ebx]
  40f89f:	adc    al,0xae
  40f8a1:	lea    edx,[ecx+esi*1-0x3789dabe]
  40f8a8:	aas    
  40f8a9:	test   eax,0xbaf62952
  40f8ae:	retf   
  40f8af:	aad    0x93
  40f8b1:	inc    ebx
  40f8b2:	dec    esi
  40f8b3:	xor    ebx,esi
  40f8b5:	js     0x40f8cb
  40f8b7:	in     eax,0xe4
  40f8b9:	jb     0x40f8ee
  40f8bb:	and    DWORD PTR [edx-0x73],ecx
  40f8be:	and    eax,DWORD PTR [esi-0x3f0a49ec]
  40f8c4:	test   eax,0xb80793db
  40f8c9:	push   edi
  40f8ca:	cdq    
  40f8cb:	rol    BYTE PTR [edi-0x25d45691],1
  40f8d1:	dec    ebx
  40f8d2:	data16 in al,0xf
  40f8d5:	ss jg  0x40f8a2
  40f8d8:	cwde   
  40f8d9:	arpl   WORD PTR [ebx-0x4add7685],bx
  40f8df:	popa   
  40f8e0:	push   edi
  40f8e1:	and    eax,0x944daf74
  40f8e6:	mov    WORD PTR ds:0xb02af7fb,?
  40f8ec:	outs   dx,BYTE PTR ds:[esi]
  40f8ed:	in     eax,dx
  40f8ee:	sbb    dl,BYTE PTR [ebx]
  40f8f0:	popf   
  40f8f1:	jmp    0x40f94e
  40f8f3:	push   0x68
  40f8f5:	pop    edi
  40f8f6:	or     BYTE PTR [esi],dh
  40f8f8:	iret   
  40f8f9:	ror    DWORD PTR [eax-0x1f09e6],1
  40f8ff:	cdq    
  40f900:	repz ror edx,1
  40f903:	or     BYTE PTR [esi+0x27],0x5b
  40f907:	jecxz  0x40f898
  40f909:	loopne 0x40f943
  40f90b:	add    BYTE PTR [ebp+0x5ac05083],0xa2
  40f912:	nop
  40f913:	ins    BYTE PTR es:[edi],dx
  40f914:	cwde   
  40f915:	cmp    ebx,ebx
  40f917:	out    0x6c,al
  40f919:	xchg   edi,eax
  40f91a:	popa   
  40f91b:	sub    BYTE PTR cs:[esi+0x7f],al
  40f91f:	and    DWORD PTR [ecx-0x52],eax
  40f922:	pop    edi
  40f923:	idiv   DWORD PTR [eax-0x4c]
  40f926:	shl    BYTE PTR [edx-0x7fdeba85],cl
  40f92c:	(bad)  
  40f92d:	adc    bl,bh
  40f92f:	pop    ds
  40f930:	clc    
  40f931:	push   es
  40f932:	mov    dl,0x41
  40f934:	cmp    eax,0x9af94648
  40f93a:	aad    0xf1
  40f93c:	fisub  WORD PTR [ebp+0x49]
  40f93f:	js     0x40f8e5
  40f941:	adc    al,0xaf
  40f943:	dec    esi
  40f944:	pushf  
  40f945:	push   ebx
  40f946:	gs stos BYTE PTR es:[edi],al
  40f948:	cmp    dl,BYTE PTR [edx]
  40f94a:	xor    eax,0x53dd1244
  40f94f:	cld    
  40f950:	mov    esi,edx
  40f952:	imul   ebx,DWORD PTR [edi],0xffffffcc
  40f955:	cmp    cl,BYTE PTR es:[edx-0x6a]
  40f959:	lahf   
  40f95a:	sti    
  40f95b:	ja     0x40f8df
  40f95d:	adc    edi,DWORD PTR [edx+0x20]
  40f960:	lods   eax,DWORD PTR ds:[esi]
  40f961:	push   ebp
  40f962:	cld    
  40f963:	sbb    al,0x38
  40f965:	mov    bh,0xd
  40f967:	fwait
  40f968:	shl    DWORD PTR [ecx+0x7ffa89b2],0x65
  40f96f:	out    dx,eax
  40f970:	xchg   esp,eax
  40f971:	stos   DWORD PTR es:[edi],eax
  40f972:	xchg   esp,eax
  40f973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f974:	out    dx,eax
  40f975:	ret    0x682f
  40f978:	mov    ebp,0x4a8f0ca3
  40f97d:	adc    al,0xba
  40f97f:	into   
  40f980:	in     eax,0x91
  40f982:	xor    eax,0x3945801a
  40f987:	mov    ah,0x27
  40f989:	push   ebp
  40f98a:	sar    cl,1
  40f98c:	clc    
  40f98d:	imul   BYTE PTR [ebp-0x6b]
  40f990:	dec    ebp
  40f991:	jb     0x40f9d2
  40f993:	shl    BYTE PTR [ecx+0x1c],0x5e
  40f997:	(bad)  
  40f999:	adc    ebx,ebx
  40f99b:	rcr    DWORD PTR [ecx+0x784d745a],cl
  40f9a1:	je     0x40f935
  40f9a3:	mov    bl,0xe
  40f9a5:	loope  0x40f9bf
  40f9a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9a8:	add    al,0x8c
  40f9aa:	enter  0xc9aa,0x65
  40f9ae:	loop   0x40f9b7
  40f9b0:	push   ebx
  40f9b1:	cli    
  40f9b2:	scas   al,BYTE PTR es:[edi]
  40f9b3:	dec    esp
  40f9b4:	jl     0x40f944
  40f9b6:	dec    edx
  40f9b7:	int3   
  40f9b8:	nop
  40f9b9:	jmp    0x40fa0c
  40f9bb:	ds es jo 0x40f993
  40f9bf:	sbb    cl,BYTE PTR [eax-0x20]
  40f9c2:	mov    dh,0xdb
  40f9c4:	and    esi,DWORD PTR [ebp+eiz*8+0x7eac5a9f]
  40f9cb:	and    BYTE PTR [ebx-0x30acad62],dh
  40f9d1:	xor    eax,0xe3c55272
  40f9d6:	dec    edi
  40f9d7:	pushf  
  40f9d8:	stc    
  40f9d9:	rcl    esi,cl
  40f9db:	pop    ss
  40f9dc:	imul   eax,ebx,0xffffff9a
  40f9df:	test   BYTE PTR [eax+ebx*8-0x79abc12f],dh
  40f9e6:	scas   al,BYTE PTR es:[edi]
  40f9e7:	rcl    DWORD PTR [edi-0x74ee16bb],0x3f
  40f9ee:	xlat   BYTE PTR ds:[ebx]
  40f9ef:	xchg   esi,eax
  40f9f0:	xlat   BYTE PTR ds:[ebx]
  40f9f1:	out    dx,eax
  40f9f2:	int    0xce
  40f9f4:	idiv   DWORD PTR [edi]
  40f9f6:	mov    ds:0x8667e0a6,eax
  40f9fb:	mov    eax,ds:0xabcc45c8
  40fa00:	in     al,0x1d
  40fa02:	mov    ecx,DWORD PTR [ebp-0x4]
  40fa05:	mov    edx,DWORD PTR [ebp-0x10]
  40fa08:	mov    edi,DWORD PTR [ebp-0xc]
  40fa0b:	add    eax,edx
  40fa0d:	mov    edx,DWORD PTR [ebp-0x18]
  40fa10:	adc    ecx,edi
  40fa12:	mov    edi,DWORD PTR [ebp-0x14]
  40fa15:	push   edi
  40fa16:	push   edx
  40fa17:	or     ecx,0x6833
  40fa1d:	or     eax,0x6b80
  40fa22:	push   ecx
  40fa23:	push   eax
  40fa24:	call   0x42227d
  40fa29:	mov    ecx,DWORD PTR [ebp-0x20]
  40fa2c:	mov    edi,DWORD PTR [ebp-0x1c]
  40fa2f:	and    eax,0x25cb
  40fa34:	jmp    0x40fde8
  40fa39:	js     0x40fa83
  40fa3b:	cld    
  40fa3c:	(bad)  
  40fa3e:	jb     0x40fabc
  40fa40:	pop    eax
  40fa41:	dec    eax
  40fa42:	lods   eax,DWORD PTR ds:[esi]
  40fa43:	push   cs
  40fa44:	sahf   
  40fa45:	fwait
  40fa46:	rcr    ch,cl
  40fa48:	nop
  40fa49:	jge    0x40fa71
  40fa4b:	mov    esi,0xbec4e3be
  40fa50:	mov    esi,0xc4492ae0
  40fa55:	stc    
  40fa56:	out    dx,eax
  40fa57:	sbb    ch,BYTE PTR [esp+eiz*8]
  40fa5a:	test   bl,dh
  40fa5c:	pop    ebp
  40fa5d:	(bad)  
  40fa5e:	jne    0x40faa7
  40fa60:	repz or al,0xb3
  40fa63:	dec    ebx
  40fa64:	or     al,0x19
  40fa66:	sub    eax,0xa7c4ec94
  40fa6b:	mov    WORD PTR [ecx+0x79bbf8c5],gs
  40fa71:	mov    edi,DWORD PTR ds:0x962b8f28
  40fa77:	cmp    esi,DWORD PTR [eax+0x6d]
  40fa7a:	icebp  
  40fa7b:	mov    ds:0x6f9420fb,al
  40fa80:	sbb    al,BYTE PTR [ecx]
  40fa82:	(bad)  
  40fa84:	push   ebx
  40fa85:	pop    ebp
  40fa86:	es pop edi
  40fa88:	inc    edi
  40fa89:	fiadd  WORD PTR [ebp+0x5c865f5f]
  40fa8f:	fwait
  40fa90:	addr16 push esp
  40fa92:	js     0x40fa1a
  40fa94:	cli    
  40fa95:	pop    ss
  40fa96:	adc    al,0xac
  40fa98:	inc    esi
  40fa99:	test   esp,edi
  40fa9b:	and    DWORD PTR [ecx+0x5f249742],0x9f9bd766
  40faa5:	adc    al,cl
  40faa7:	cdq    
  40faa8:	arpl   WORD PTR [ecx+ecx*8],bp
  40faab:	ficom  DWORD PTR [esi-0x57]
  40faae:	leave  
  40faaf:	ret    
  40fab0:	push   cs
  40fab1:	adc    ebp,DWORD PTR [ecx]
  40fab3:	(bad)  
  40fab4:	sbb    DWORD PTR [eax+0x773e9961],edi
  40faba:	pop    esi
  40fabb:	push   esi
  40fabc:	pop    edi
  40fabd:	fst    st(7)
  40fabf:	pop    esi
  40fac0:	cmp    eax,0xd227ac28
  40fac5:	mov    ecx,0xf90790ff
  40faca:	bound  edx,QWORD PTR [ecx-0x458eb5e8]
  40fad0:	lods   eax,DWORD PTR ds:[esi]
  40fad1:	leave  
  40fad2:	jge    0x40fab6
  40fad4:	and    BYTE PTR [ebx+0x2d722a4c],dh
  40fada:	stc    
  40fadb:	cmp    DWORD PTR [ebp+0x3b41f756],0xffffffc0
  40fae2:	sar    esp,1
  40fae4:	dec    edx
  40fae5:	stc    
  40fae6:	mov    ebx,0x65b01808
  40faeb:	mov    fs,WORD PTR [edx]
  40faed:	push   0x5c
  40faef:	jbe    0x40fabf
  40faf1:	mov    dl,0xa9
  40faf3:	test   DWORD PTR [edx-0x49ebc373],ebp
  40faf9:	and    ebx,DWORD PTR [ebx-0x442a9de2]
  40faff:	fsubr  DWORD PTR [edx-0x5be277e1]
  40fb05:	outs   dx,BYTE PTR ds:[esi]
  40fb06:	pop    ecx
  40fb07:	xor    dh,BYTE PTR [ebx+0x63208440]
  40fb0d:	or     al,0xb7
  40fb0f:	push   ss
  40fb10:	sti    
  40fb11:	or     ebp,DWORD PTR [edi-0x26]
  40fb14:	ins    DWORD PTR es:[edi],dx
  40fb15:	dec    ebx
  40fb16:	(bad)  
  40fb17:	and    DWORD PTR ss:[ebx-0x73],ecx
  40fb1b:	push   esi
  40fb1c:	fcomp  QWORD PTR [eax+0x3a]
  40fb1f:	enter  0xe0f9,0x98
  40fb23:	ret    0x9689
  40fb26:	and    al,0x91
  40fb28:	(bad)  
  40fb29:	xlat   BYTE PTR ds:[ebx]
  40fb2a:	push   ebx
  40fb2b:	sub    ah,dl
  40fb2d:	btc    esi,edi
  40fb30:	repnz aas 
  40fb32:	int    0x61
  40fb34:	lahf   
  40fb35:	in     eax,0xae
  40fb37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb38:	ins    DWORD PTR es:[edi],dx
  40fb39:	stos   DWORD PTR es:[edi],eax
  40fb3a:	call   0xca4b9cc5
  40fb3f:	call   0x4891:0x1f4177ab
  40fb46:	cmc    
  40fb47:	inc    ebx
  40fb48:	fwait
  40fb49:	sub    BYTE PTR [eax],dh
  40fb4b:	xor    eax,0x9d86c33d
  40fb50:	outs   dx,DWORD PTR ds:[esi]
  40fb51:	popa   
  40fb52:	adc    BYTE PTR ds:0x95f83685,cl
  40fb58:	daa    
  40fb59:	cmp    ch,bl
  40fb5b:	and    ch,bl
  40fb5d:	rcl    BYTE PTR [edi+esi*8],0xc1
  40fb61:	lock inc ebx
  40fb63:	mov    ecx,eax
  40fb65:	ins    DWORD PTR es:[edi],dx
  40fb66:	out    dx,eax
  40fb67:	or     BYTE PTR [edi-0x31],cl
  40fb6a:	xchg   edx,eax
  40fb6b:	sti    
  40fb6c:	or     DWORD PTR ds:0x1cac1257,esi
  40fb72:	cwde   
  40fb73:	push   ecx
  40fb74:	rcl    DWORD PTR [ebp-0x45],cl
  40fb77:	popa   
  40fb78:	xor    bl,cl
  40fb7a:	mov    WORD PTR [esi],?
  40fb7c:	adc    al,0xca
  40fb7e:	in     eax,0xbe
  40fb80:	sub    edx,DWORD PTR [esi+0x74]
  40fb83:	xor    DWORD PTR [ebx+edx*2-0x7617c9cf],ebp
  40fb8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb8b:	xchg   edi,eax
  40fb8c:	lahf   
  40fb8d:	pop    ebx
  40fb8e:	pusha  
  40fb8f:	(bad)  
  40fb90:	cmovns ecx,DWORD PTR [edi]
  40fb93:	jne    0x40fb70
  40fb95:	add    esp,DWORD PTR [ebp-0x6b]
  40fb98:	push   esp
  40fb99:	adc    BYTE PTR [ebx+esi*1-0x4540fbb5],al
  40fba0:	test   DWORD PTR [esi],edi
  40fba2:	dec    ecx
  40fba3:	xlat   BYTE PTR ds:[ebx]
  40fba4:	sbb    esp,edi
  40fba6:	mov    ebp,DWORD PTR ds:[edi-0x78deaf28]
  40fbad:	popa   
  40fbae:	leave  
  40fbaf:	pop    ds
  40fbb0:	xchg   DWORD PTR [edx+0x25cba98b],edi
  40fbb6:	fwait
  40fbb7:	mov    edx,0x830e9efc
  40fbbc:	fld    TBYTE PTR [edi]
  40fbbe:	out    0x57,al
  40fbc0:	push   edx
  40fbc1:	inc    eax
  40fbc2:	inc    ebp
  40fbc3:	repz (bad) 
  40fbc5:	and    dh,cl
  40fbc7:	cwde   
  40fbc8:	pop    ebx
  40fbc9:	sbb    DWORD PTR [ebx],ebx
  40fbcb:	dec    ecx
  40fbcc:	mov    BYTE PTR [ebp-0x17],ch
  40fbcf:	pushf  
  40fbd0:	es xchg edi,eax
  40fbd2:	push   ebx
  40fbd3:	lods   al,BYTE PTR ds:[esi]
  40fbd4:	xchg   esp,eax
  40fbd5:	xlat   BYTE PTR ds:[ebx]
  40fbd6:	les    edi,FWORD PTR [ebp+0x47]
  40fbd9:	push   cs
  40fbda:	aaa    
  40fbdb:	sbb    al,0xec
  40fbdd:	xrelease xchg BYTE PTR [ecx+0x14],al
  40fbe1:	push   ecx
  40fbe2:	push   ecx
  40fbe3:	sub    BYTE PTR [ebp+0x28309a0c],dh
  40fbe9:	popa   
  40fbea:	in     al,dx
  40fbeb:	sub    eax,0x1c8a0925
  40fbf0:	xor    esi,edi
  40fbf2:	std    
  40fbf3:	jg     0x40fbf3
  40fbf5:	dec    esi
  40fbf6:	popa   
  40fbf7:	mov    es,WORD PTR [edi+eax*1]
  40fbfa:	scas   eax,DWORD PTR es:[edi]
  40fbfb:	iret   
  40fbfc:	or     bl,BYTE PTR [ebp+ecx*1+0x786d3232]
  40fc03:	in     al,dx
  40fc04:	es dec ebx
  40fc06:	jg     0x40fc3f
  40fc08:	push   esi
  40fc09:	mov    ch,0x9
  40fc0b:	jne    0x40fc13
  40fc0d:	push   0xffffffe6
  40fc0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc10:	adc    eax,0x89eda398
  40fc15:	cld    
  40fc16:	mov    esi,ecx
  40fc18:	jmp    0x40fbff
  40fc1a:	mov    ch,0xd5
  40fc1c:	fcomp  DWORD PTR [esi]
  40fc1e:	mov    BYTE PTR [edi-0x58],ah
  40fc21:	add    eax,0xa9c94300
  40fc26:	push   eax
  40fc27:	retf   0x3cef
  40fc2a:	lea    ecx,[ecx]
  40fc2c:	data16 or dh,BYTE PTR [eax]
  40fc2f:	les    ebx,FWORD PTR [edi+ebp*2]
  40fc32:	ins    BYTE PTR es:[edi],dx
  40fc33:	mov    edx,0x6d12c3ae
  40fc38:	jg     0x40fc27
  40fc3a:	popa   
  40fc3b:	jp     0x40fc05
  40fc3d:	adc    al,0xe5
  40fc3f:	push   edi
  40fc40:	and    eax,0xfdf327d7
  40fc45:	mov    es,WORD PTR [esi-0x1c0379d5]
  40fc4b:	pop    ecx
  40fc4c:	push   edx
  40fc4d:	fld    TBYTE PTR [ebp-0x11]
  40fc50:	inc    ecx
  40fc51:	cs (bad) 
  40fc53:	aas    
  40fc54:	fstp   DWORD PTR [esi]
  40fc56:	jb     0x40fbe7
  40fc58:	cwde   
  40fc59:	xor    BYTE PTR [esi+eiz*2+0x9],0x88
  40fc5e:	xchg   ebp,eax
  40fc5f:	push   0xf5a39e13
  40fc64:	loope  0x40fcdc
  40fc66:	adc    eax,0xe2d72b0e
  40fc6b:	fisttp WORD PTR [esi+eax*4]
  40fc6e:	rcr    BYTE PTR [edx-0x422704e9],1
  40fc74:	mov    WORD PTR [ecx+0x75755da9],cs
  40fc7a:	inc    ecx
  40fc7b:	mov    es,esp
  40fc7d:	push   edx
  40fc7e:	test   DWORD PTR [ecx+0x3c2cee8e],edi
  40fc84:	or     BYTE PTR [ecx-0x388ce3ed],ch
  40fc8a:	pop    ss
  40fc8b:	repz xchg ecx,eax
  40fc8d:	adc    bh,BYTE PTR [ebp+0x67650ae9]
  40fc93:	adc    eax,0x68e18921
  40fc98:	in     eax,0xe6
  40fc9a:	fisttp WORD PTR [eax-0x4a]
  40fc9d:	add    dh,BYTE PTR [esi+eax*8+0x5bfa7f62]
  40fca4:	mov    edx,0xf41512a
  40fca9:	push   ecx
  40fcaa:	pop    ecx
  40fcab:	or     ebx,ebx
  40fcad:	push   0x354b90a0
  40fcb2:	adc    eax,0x8f9e2c08
  40fcb7:	jecxz  0x40fc56
  40fcb9:	nop
  40fcba:	pop    edi
  40fcbb:	mov    ch,0x35
  40fcbd:	repnz popa 
  40fcbf:	pop    esp
  40fcc0:	mov    gs,WORD PTR [ecx+0xd2ffd00]
  40fcc6:	add    ebp,DWORD PTR [ebp-0x53edfafc]
  40fccc:	test   al,0x71
  40fcce:	in     eax,0x46
  40fcd0:	out    0xd1,al
  40fcd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcd3:	mov    fs,WORD PTR [ebx+0x5bf3fba2]
  40fcd9:	dec    edi
  40fcda:	shl    DWORD PTR [edx],0x1a
  40fcdd:	stos   DWORD PTR es:[edi],eax
  40fcde:	jmp    0x40fcbc
  40fce0:	fdivrp st(1),st
  40fce2:	setp   bh
  40fce5:	ss push ebx
  40fce7:	(bad)  
  40fce9:	jle    0x40fd67
  40fceb:	mov    DWORD PTR [edi],eax
  40fced:	or     DWORD PTR [ecx-0x14],0x17
  40fcf1:	xchg   edi,eax
  40fcf2:	fild   QWORD PTR [ebx]
  40fcf4:	lea    edi,[esp+edi*2+0x35765ca3]
  40fcfb:	pop    eax
  40fcfc:	xlat   BYTE PTR ds:[ebx]
  40fcfd:	cmp    esi,0x6354353f
  40fd03:	push   ss
  40fd04:	scas   eax,DWORD PTR es:[edi]
  40fd05:	shl    BYTE PTR [ecx+edx*1-0x9d06105],0xc6
  40fd0d:	dec    ebp
  40fd0e:	push   ecx
  40fd0f:	into   
  40fd10:	addr16 pop edx
  40fd12:	cdq    
  40fd13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd14:	mov    al,ds:0x4bd09134
  40fd19:	(bad)  
  40fd1a:	jecxz  0x40fd03
  40fd1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd1d:	jno    0x40fd73
  40fd1f:	xchg   BYTE PTR [ecx+0x52],al
  40fd22:	call   0x4383c020
  40fd27:	fistp  WORD PTR [esi]
  40fd29:	push   eax
  40fd2a:	adc    DWORD PTR [esi+ecx*1+0x7284e5e0],ebp
  40fd31:	lods   eax,DWORD PTR ds:[esi]
  40fd32:	sub    BYTE PTR [eax+0x1478f5],0xfd
  40fd39:	aas    
  40fd3a:	lods   al,BYTE PTR ds:[esi]
  40fd3b:	into   
  40fd3c:	mov    eax,ds:0x42037d7a
  40fd41:	out    0xe1,eax
  40fd43:	or     DWORD PTR [edi],0xbafe20cf
  40fd49:	test   eax,0x8fde54c0
  40fd4e:	retf   0x2b5d
  40fd51:	daa    
  40fd52:	ds jle 0x40fce2
  40fd55:	jp     0x40fcda
  40fd57:	or     eax,0x8affc06a
  40fd5c:	rcr    DWORD PTR [eax],cl
  40fd5e:	repz enter 0xc8cd,0xa3
  40fd63:	aas    
  40fd64:	in     eax,dx
  40fd65:	test   BYTE PTR [ecx+0x33],bh
  40fd68:	imul   edx,ebx,0x2f
  40fd6b:	mov    ah,0xef
  40fd6d:	repnz push edi
  40fd6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd71:	xchg   ecx,eax
  40fd72:	aas    
  40fd73:	mov    ch,0xd3
  40fd75:	mov    ebx,0xbaad3832
  40fd7a:	push   0x321ee030
  40fd7f:	fstp   TBYTE PTR [esi-0x280ebbf4]
  40fd85:	xchg   esi,eax
  40fd86:	xor    DWORD PTR [ecx-0x182b00d5],0xa2ec85c3
  40fd90:	push   ss
  40fd91:	xchg   ebp,eax
  40fd92:	addr16 add al,al
  40fd95:	push   0xf29183d0
  40fd9a:	int    0x76
  40fd9c:	idiv   esp
  40fd9e:	mov    esi,0xa721970
  40fda3:	cs or  eax,0xaa609b5a
  40fda9:	sub    eax,0x2f61b99e
  40fdae:	js     0x40fdc6
  40fdb0:	add    BYTE PTR [ecx],ch
  40fdb2:	push   esp
  40fdb3:	fs retf 
  40fdb5:	add    DWORD PTR [ecx],edx
  40fdb7:	ins    BYTE PTR es:[edi],dx
  40fdb8:	mov    edx,0xecd3c953
  40fdbd:	out    0x43,eax
  40fdbf:	adc    al,0x91
  40fdc1:	fsub   DWORD PTR [esp+edx*1-0x3b38e29a]
  40fdc8:	mov    edx,0xe2185b08
  40fdcd:	cmp    BYTE PTR [ecx],0xb7
  40fdd0:	out    dx,al
  40fdd1:	push   ebx
  40fdd2:	inc    DWORD PTR [ecx+0x7650b1c2]
  40fdd8:	push   eax
  40fdd9:	out    dx,al
  40fdda:	or     edx,esi
  40fddc:	xchg   bx,ax
  40fdde:	lahf   
  40fddf:	retf   
  40fde0:	xchg   edi,eax
  40fde1:	imul   esi,ecx,0xbf7a5202
  40fde7:	clc    
  40fde8:	or     eax,ecx
  40fdea:	mov    ecx,DWORD PTR [ebp-0x20]
  40fded:	mov    ecx,DWORD PTR [ebp-0x1c]
  40fdf0:	and    edx,0x76f2
  40fdf6:	or     edx,edi
  40fdf8:	xor    edx,esi
  40fdfa:	xor    eax,0x253b
  40fdff:	shld   edx,eax,0x2
  40fe03:	shl    eax,0x2
  40fe06:	shr    ecx,0x1e
  40fe09:	xor    esi,esi
  40fe0b:	or     eax,ecx
  40fe0d:	or     edx,esi
  40fe0f:	xor    eax,0xcb79b576
  40fe14:	mov    DWORD PTR [ebp-0x20],eax
  40fe17:	mov    esi,0x9c2b8ae8
  40fe1c:	xor    edx,esi
  40fe1e:	mov    DWORD PTR [ebp-0x1c],edx
  40fe21:	mov    eax,DWORD PTR [ebp-0x38]
  40fe24:	mov    ecx,DWORD PTR [ebp-0x34]
  40fe27:	mov    edx,DWORD PTR [ebp-0x40]
  40fe2a:	mov    edi,DWORD PTR [ebp-0x3c]
  40fe2d:	push   edi
  40fe2e:	push   edx
  40fe2f:	push   ecx
  40fe30:	push   eax
  40fe31:	call   0x41594e
  40fe36:	add    eax,0x536a
  40fe3b:	adc    edx,0x9573
  40fe41:	push   0x12613
  40fe46:	push   0xae21daec
  40fe4b:	push   edx
  40fe4c:	push   eax
  40fe4d:	call   0x42227d
  40fe52:	mov    ecx,eax
  40fe54:	mov    eax,DWORD PTR [ebp-0x20]
  40fe57:	mov    ebx,DWORD PTR [ebp-0x1c]
  40fe5a:	xor    ecx,0x1b8b
  40fe60:	xor    edi,edi
  40fe62:	xor    edx,edi
  40fe64:	add    ecx,eax
  40fe66:	mov    eax,DWORD PTR [ebp+0xc]
  40fe69:	adc    edx,ebx
  40fe6b:	mov    DWORD PTR [eax],ecx
  40fe6d:	mov    DWORD PTR [eax+0x4],edx
  40fe70:	mov    eax,DWORD PTR [ebp-0x30]
  40fe73:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fe76:	mov    edx,0xbdb2
  40fe7b:	sub    edx,eax
  40fe7d:	jmp    0x410231
  40fe82:	(bad)  
  40fe83:	out    dx,eax
  40fe84:	ins    BYTE PTR es:[edi],dx
  40fe85:	and    BYTE PTR [esp+edi*4+0x3f7f08b],bh
  40fe8c:	or     bh,0xfd
  40fe8f:	add    al,0xf0
  40fe91:	iret   
  40fe92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe93:	sub    al,0xbe
  40fe95:	mov    esi,0xbebec4e3
  40fe9a:	adc    eax,0x25c37de4
  40fe9f:	(bad)  
  40fea0:	iret   
  40fea1:	cli    
  40fea2:	stc    
  40fea3:	retf   0x768f
  40fea6:	dec    edx
  40fea7:	fld    QWORD PTR [ecx]
  40fea9:	cbw    
  40feab:	shl    edi,0xcd
  40feae:	int    0xc3
  40feb0:	lock jg 0x40ff27
  40feb3:	xor    ebp,DWORD PTR [esi-0x5aacd601]
  40feb9:	xchg   BYTE PTR [esi+0x262a55b9],ch
  40febf:	add    ebp,DWORD PTR [edi]
  40fec1:	mov    BYTE PTR [edx+0x156500a5],ch
  40fec7:	dec    eax
  40fec8:	lock cmp ebp,DWORD PTR [edi+eiz*2+0x44f6a79d]
  40fed0:	mov    dh,0xbe
  40fed2:	dec    ebp
  40fed3:	and    ecx,esi
  40fed5:	push   ecx
  40fed6:	jmp    0xb6d8d795
  40fedb:	xchg   ebx,eax
  40fedc:	or     ah,BYTE PTR [ebp-0x7e]
  40fedf:	inc    ebp
  40fee0:	adc    DWORD PTR [ebx],0xffffff82
  40fee3:	push   edi
  40fee4:	les    edx,FWORD PTR [edx]
  40fee6:	sbb    ecx,DWORD PTR [ecx+0x5b]
  40fee9:	jecxz  0x40ff4d
  40feeb:	mov    bl,0x9d
  40feed:	pop    edx
  40feee:	mov    bl,0x79
  40fef0:	fucomip st,st(2)
  40fef2:	pop    ds
  40fef3:	pop    esp
  40fef4:	mov    bh,0x69
  40fef6:	out    0x95,eax
  40fef8:	xor    DWORD PTR [ebx+eiz*1],0xffffff9e
  40fefc:	mov    esp,0x8e38a936
  40ff01:	push   esi
  40ff02:	push   cs
  40ff03:	sub    ebp,DWORD PTR [edi+0xd]
  40ff06:	inc    eax
  40ff07:	sub    ch,BYTE PTR [ecx-0x4c]
  40ff0a:	jne    0x40ff7e
  40ff0c:	fsub   st(2),st
  40ff0e:	cmp    DWORD PTR [ebx-0x2d5b9ce9],0x1d9c316
  40ff18:	add    al,0xea
  40ff1a:	pop    es
  40ff1b:	cwde   
  40ff1c:	rol    DWORD PTR [ebx],0x41
  40ff1f:	push   ss
  40ff20:	push   ebp
  40ff21:	mov    ds:0x6b53d518,al
  40ff26:	dec    esp
  40ff27:	jo     0x40fec5
  40ff29:	mov    DWORD PTR [edx+0x8],ebp
  40ff2c:	mov    ecx,esp
  40ff2e:	hlt    
  40ff2f:	arpl   cx,di
  40ff31:	mov    ds:0x5934f9f9,al
  40ff36:	pop    esp
  40ff37:	in     eax,0x13
  40ff39:	mov    cl,0x3f
  40ff3b:	ins    BYTE PTR es:[edi],dx
  40ff3c:	in     eax,0xf6
  40ff3e:	push   edx
  40ff3f:	fmul   QWORD PTR [ecx]
  40ff41:	push   ds
  40ff42:	inc    BYTE PTR [edx-0x5801a4d3]
  40ff48:	sbb    al,0x9c
  40ff4a:	mov    ah,0xa5
  40ff4c:	fcmovnbe st,st(0)
  40ff4e:	push   0x6f
  40ff50:	mov    ecx,0x2f9a3256
  40ff55:	nop
  40ff56:	dec    edx
  40ff57:	pop    edx
  40ff58:	ds repz cmp edi,0x85c1ff1a
  40ff60:	dec    ebx
  40ff61:	jle    0x40ff60
  40ff63:	cmp    al,0x5d
  40ff65:	imul   ebp,DWORD PTR [eax+0x25],0x1b
  40ff69:	lods   al,BYTE PTR ds:[esi]
  40ff6a:	mov    esi,edx
  40ff6c:	push   ds
  40ff6d:	pop    ecx
  40ff6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff6f:	(bad)  
  40ff70:	outs   dx,DWORD PTR ds:[esi]
  40ff71:	loopne 0x40fefb
  40ff73:	retf   0x2b21
  40ff76:	inc    ebp
  40ff77:	push   edi
  40ff78:	shl    BYTE PTR [ecx-0x58fd0f0d],1
  40ff7e:	dec    esi
  40ff7f:	mov    esi,0xe39d571e
  40ff84:	in     al,0x82
  40ff86:	cdq    
  40ff87:	dec    esi
  40ff88:	pushf  
  40ff89:	add    BYTE PTR ds:0xb453f91e,0x1a
  40ff90:	ins    WORD PTR es:[edi],dx
  40ff92:	dec    edx
  40ff93:	adc    eax,0xd3e3d997
  40ff98:	xchg   si,ax
  40ff9a:	in     al,dx
  40ff9b:	(bad)
  40ff9e:	push   edx
  40ff9f:	jo     0x40ff27
  40ffa1:	mov    ecx,0xa3e6e5ec
  40ffa6:	lock xchg edx,eax
  40ffa8:	jno    0x40ff84
  40ffaa:	mov    esi,0x8ceca424
  40ffaf:	scas   eax,DWORD PTR es:[edi]
  40ffb0:	aas    
  40ffb1:	test   DWORD PTR [ebx-0x3e94b2ae],eax
  40ffb7:	pusha  
  40ffb8:	into   
  40ffb9:	mov    esi,0xbb367b0e
  40ffbe:	jae    0x41003b
  40ffc0:	ins    DWORD PTR es:[edi],dx
  40ffc1:	xor    al,0x64
  40ffc3:	lods   al,BYTE PTR ds:[esi]
  40ffc4:	cmp    DWORD PTR [eax+0x66],ebp
  40ffc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffc8:	scas   al,BYTE PTR es:[edi]
  40ffc9:	cli    
  40ffca:	pusha  
  40ffcb:	mov    dl,0xfe
  40ffcd:	adc    esi,DWORD PTR [ebx-0x723437ab]
  40ffd3:	adc    bh,BYTE PTR [eax]
  40ffd5:	and    bh,al
  40ffd7:	pop    edi
  40ffd8:	das    
  40ffd9:	pop    esp
  40ffda:	retf   0x4c75
  40ffdd:	dec    esi
  40ffde:	dec    esp
  40ffdf:	mov    esi,0x783d6963
  40ffe4:	rol    DWORD PTR [esi],1
  40ffe6:	xchg   edx,eax
  40ffe7:	out    dx,eax
  40ffe8:	mov    edi,0x4a77a923
  40ffed:	ins    BYTE PTR es:[edi],dx
  40ffee:	repz jne 0x40ff7a
  40fff1:	(bad)  
  40fff2:	mov    ds:0x6eb18ba7,al
  40fff7:	mov    cl,0x33
  40fff9:	scas   eax,DWORD PTR es:[edi]
  40fffa:	sub    dl,al
  40fffc:	dec    edx
  40fffd:	push   0xffffffd3
  40ffff:	mov    cl,0x8a
  410001:	js     0x41006c
  410003:	mov    eax,ds:0xc10409b7
  410008:	mov    BYTE PTR [eax],al
  41000a:	aam    0x5c
  41000c:	pop    esp
  41000d:	mov    ah,0x87
  41000f:	mov    bl,0xcb
  410011:	mov    ds:0x6c21d24c,al
  410016:	jmp    0xb48c3c7e
  41001b:	clc    
  41001c:	lods   eax,DWORD PTR ds:[esi]
  41001d:	arpl   WORD PTR [eax],ax
  41001f:	xor    al,BYTE PTR [edx+esi*2+0x657af31d]
  410026:	xchg   ebp,eax
  410027:	repz mov eax,cs:0x2d88def2
  41002e:	jns    0x410040
  410030:	jnp    0x41004a
  410032:	dec    esi
  410033:	mov    ah,0x98
  410035:	dec    ebx
  410036:	test   al,0x65
  410038:	stos   DWORD PTR es:[edi],eax
  410039:	sub    eax,0x7648012f
  41003e:	out    0x2f,eax
  410040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410041:	jg     0x40ffea
  410043:	add    dh,BYTE PTR [ebx]
  410045:	jmp    0x8114d6b6
  41004a:	push   ebx
  41004b:	sbb    ebp,edi
  41004d:	push   es
  41004e:	push   0x2
  410050:	outs   dx,DWORD PTR ds:[esi]
  410051:	cmp    BYTE PTR [ebx-0x21],cl
  410054:	mov    esi,ds
  410056:	inc    ebp
  410057:	or     ebp,DWORD PTR [eax+0x55825a57]
  41005d:	into   
  41005e:	retf   0x22e4
  410061:	fdiv   st,st(5)
  410063:	pop    ebp
  410064:	pop    ebx
  410065:	xlat   BYTE PTR ds:[ebx]
  410066:	cdq    
  410067:	fstp   TBYTE PTR [esi]
  410069:	bnd jns 0x410022
  41006c:	jo     0x4100e1
  41006e:	or     al,0xc9
  410070:	call   DWORD PTR [esi+0x29681440]
  410076:	mov    eax,0x6dd55fe
  41007b:	das    
  41007c:	xor    esp,DWORD PTR [edx-0x17833ad2]
  410082:	adc    BYTE PTR [esi-0x18],dl
  410085:	lds    eax,FWORD PTR [eax-0x7a92cd8c]
  41008b:	and    BYTE PTR [ebx+0x1a],bl
  41008e:	xor    al,0xa3
  410090:	or     ch,BYTE PTR [edx]
  410092:	lahf   
  410093:	ja     0x41008a
  410095:	jnp    0x410039
  410097:	enter  0x4f3f,0x4f
  41009b:	sub    eax,0xda17251c
  4100a0:	in     al,0xe5
  4100a2:	and    ebp,DWORD PTR [edx]
  4100a4:	jne    0x4100e9
  4100a6:	ds push 0xda267b00
  4100ac:	xchg   ebp,eax
  4100ad:	imul   edx,DWORD PTR [edx+0x72],0xffffffc0
  4100b1:	push   ebp
  4100b2:	test   DWORD PTR [ebx+ecx*4+0x26d22c09],ecx
  4100b9:	std    
  4100ba:	add    cl,BYTE PTR [ebx]
  4100bc:	pop    ebp
  4100bd:	stos   BYTE PTR es:[edi],al
  4100be:	push   ds
  4100bf:	mov    eax,0x5ede8743
  4100c4:	cli    
  4100c5:	xchg   edi,eax
  4100c6:	dec    eax
  4100c7:	xor    ch,bh
  4100c9:	jno    0x410092
  4100cb:	repnz loopne 0x4100a3
  4100ce:	or     ch,BYTE PTR [edx-0x6]
  4100d1:	inc    ebp
  4100d2:	push   eax
  4100d3:	xchg   ecx,eax
  4100d4:	jb     0x41009e
  4100d6:	and    BYTE PTR [edx+0x73],ch
  4100d9:	data16 jecxz 0x410148
  4100dc:	fidiv  WORD PTR [edi+0x47e31364]
  4100e2:	xor    al,BYTE PTR [esi]
  4100e4:	fbld   TBYTE PTR [edi-0x5798a266]
  4100ea:	sub    eax,0x1510ce41
  4100ef:	je     0x4100f7
  4100f1:	aas    
  4100f2:	nop
  4100f3:	ins    DWORD PTR es:[edi],dx
  4100f4:	adc    bl,BYTE PTR [ebx+0x31f0df2d]
  4100fa:	push   edi
  4100fb:	ret    0x1059
  4100fe:	dec    esp
  4100ff:	gs ror al,1
  410102:	rcl    BYTE PTR [ecx],1
  410104:	xor    eax,0xf29df0c6
  410109:	sub    BYTE PTR cs:[esi+0x8],0xe
  41010e:	jge    0x410131
  410110:	jle    0x410118
  410112:	inc    ebx
  410113:	push   esp
  410114:	sub    dh,BYTE PTR [edx]
  410116:	stos   DWORD PTR es:[edi],eax
  410117:	xor    al,0xe2
  410119:	(bad)  
  41011a:	mov    ecx,0xea9c0869
  41011f:	mov    ecx,0x4987570
  410124:	xchg   ebp,eax
  410125:	fistp  DWORD PTR [esi+0x44ec6a74]
  41012b:	jle    0x4100c3
  41012d:	es mov ah,0x3
  410130:	repnz cli 
  410132:	add    esi,DWORD PTR [edx+ebp*4+0x62]
  410136:	fsub   DWORD PTR [esp+ebx*8]
  410139:	pop    ds
  41013a:	cmp    BYTE PTR [esi-0x51ed6908],bh
  410140:	loop   0x4100fb
  410142:	push   cs
  410143:	and    BYTE PTR [ecx],0x87
  410146:	push   esp
  410147:	(bad)  
  410148:	fadd   DWORD PTR [edx+0x34]
  41014b:	ds push edx
  41014d:	pop    ss
  41014e:	scas   al,BYTE PTR es:[edi]
  41014f:	cmp    al,0xb2
  410151:	push   ecx
  410152:	leave  
  410153:	push   edx
  410154:	cdq    
  410155:	push   esp
  410156:	xlat   BYTE PTR ds:[ebx]
  410157:	xchg   DWORD PTR [eax],esp
  410159:	inc    ebp
  41015a:	and    eax,0xfb1676a0
  41015f:	xor    bl,BYTE PTR [ecx-0x1f916e64]
  410165:	xor    eax,DWORD PTR [ebx+0x3d4c0d03]
  41016b:	int    0x91
  41016d:	iret   
  41016e:	pop    esp
  41016f:	jecxz  0x4101dc
  410171:	jge    0x41019d
  410173:	inc    esi
  410174:	sahf   
  410175:	jg     0x41011d
  410177:	jmp    0xa9410190
  41017c:	jmp    0x41013f
  41017e:	sti    
  41017f:	addr16 mov esi,0x40021968
  410185:	pop    eax
  410186:	cmp    BYTE PTR [ebp+0x3286559e],bh
  41018c:	cdq    
  41018d:	fidiv  WORD PTR [ecx]
  41018f:	jns    0x410114
  410191:	loope  0x4101cb
  410193:	sbb    ah,al
  410195:	nop
  410196:	stos   BYTE PTR es:[edi],al
  410197:	std    
  410198:	mov    ah,0x49
  41019a:	xor    al,0xd6
  41019c:	aad    0x14
  41019e:	xchg   ebx,eax
  41019f:	mov    ?,WORD PTR [edx+0x5e]
  4101a2:	fisubr WORD PTR [eax]
  4101a4:	les    ebp,FWORD PTR [edx-0x48]
  4101a7:	neg    DWORD PTR [ebp-0x7]
  4101aa:	or     ch,dl
  4101ac:	nop
  4101ad:	or     al,0x2c
  4101af:	or     dh,BYTE PTR [edx+ecx*1-0x5eb27928]
  4101b6:	xor    bl,BYTE PTR [edx+edi*1+0x4d9ea425]
  4101bd:	add    al,cl
  4101bf:	pop    ebp
  4101c0:	popf   
  4101c1:	push   edi
  4101c2:	or     eax,ecx
  4101c4:	leave  
  4101c5:	cmp    DWORD PTR [edi+eiz*8],esp
  4101c8:	add    eax,0xa106b1a6
  4101cd:	fcom   DWORD PTR [ecx]
  4101cf:	push   eax
  4101d0:	(bad)  
  4101d1:	xchg   ebp,eax
  4101d2:	mov    dl,0xd8
  4101d4:	addr16 pop eax
  4101d6:	aad    0xbb
  4101d8:	lods   eax,DWORD PTR ds:[esi]
  4101d9:	adc    DWORD PTR [esi+0x7dbc9b5c],esi
  4101df:	fcmovnu st,st(7)
  4101e1:	popa   
  4101e2:	pop    edx
  4101e3:	add    al,0xaf
  4101e5:	(bad)
  4101e9:	call   0x4aa1:0x73d5565f
  4101f0:	pop    es
  4101f1:	call   0x659b:0xeb5b2b6e
  4101f8:	and    bh,bl
  4101fa:	retf   0x8b6a
  4101fd:	aam    0x68
  4101ff:	sub    eax,0x298aa84a
  410204:	push   ebp
  410205:	test   eax,0xf1dcc560
  41020a:	and    DWORD PTR [esi-0x38],esp
  41020d:	mov    al,0x40
  41020f:	lea    edi,[edi]
  410211:	inc    edx
  410212:	stos   BYTE PTR es:[edi],al
  410213:	xchg   ebx,eax
  410214:	pop    ecx
  410215:	and    BYTE PTR [ebx+0x39],al
  410218:	push   0xffffffa8
  41021a:	mov    al,ds:0xa5ec8e6d
  41021f:	push   ebp
  410220:	jno    0x41022c
  410222:	inc    ecx
  410223:	sahf   
  410224:	int    0x54
  410226:	inc    ecx
  410227:	mov    al,ds:0x42e06613
  41022c:	jns    0x4101bf
  41022e:	retf   
  41022f:	adc    al,0xd8
  410231:	mov    eax,DWORD PTR [ebp-0x28]
  410234:	mov    ebx,0x4c02
  410239:	sbb    ebx,ecx
  41023b:	mov    ecx,DWORD PTR [ebp-0x24]
  41023e:	sub    edx,eax
  410240:	mov    eax,DWORD PTR [ebp+0xc]
  410243:	sbb    ebx,ecx
  410245:	add    edx,DWORD PTR [eax]
  410247:	mov    ecx,DWORD PTR [ebp-0x28]
  41024a:	adc    ebx,DWORD PTR [eax+0x4]
  41024d:	push   0x2
  41024f:	xor    ebx,esi
  410251:	mov    esi,DWORD PTR [ebp-0x24]
  410254:	pop    esi
  410255:	sub    esi,ecx
  410257:	mov    ecx,DWORD PTR [ebp-0x30]
  41025a:	sub    esi,ecx
  41025c:	mov    eax,ebx
  41025e:	jmp    0x410612
  410263:	sub    DWORD PTR [esi-0x65853526],eax
  410269:	cmp    DWORD PTR [esi-0x6df308e8],esp
  41026f:	jp     0x4102b4
  410271:	cmp    BYTE PTR [edx-0x4141cb37],dl
  410277:	jecxz  0x41023d
  410279:	mov    esi,0xa4dd68be
  41027e:	fmul   st(5),st
  410280:	rol    BYTE PTR [esi],cl
  410282:	leave  
  410283:	mov    cl,0x8f
  410285:	xchg   edi,eax
  410286:	or     eax,0x9fdd9b7f
  41028b:	push   esp
  41028c:	cld    
  41028d:	test   DWORD PTR [ebx+0x6113dd21],eax
  410293:	inc    ebx
  410294:	adc    BYTE PTR [eax+0xcfa6c26],ch
  41029a:	shr    BYTE PTR [ebp+0x48],cl
  41029d:	mov    edi,0x38d715a1
  4102a2:	clc    
  4102a3:	sub    DWORD PTR [esi+0x26c06555],ebp
  4102a9:	pop    ecx
  4102aa:	cmp    BYTE PTR [edx+0x3593340e],cl
  4102b0:	nop
  4102b1:	jno    0x410279
  4102b3:	sbb    al,0x2d
  4102b5:	inc    ebp
  4102b6:	int    0x12
  4102b8:	mov    eax,0x6f1f92c3
  4102bd:	push   edi
  4102be:	or     eax,0x10680b94
  4102c3:	daa    
  4102c4:	loopne 0x4102a6
  4102c6:	dec    ebp
  4102c7:	mov    ebx,0xb9bb2083
  4102cc:	gs sbb eax,0x62
  4102d0:	sar    dh,cl
  4102d2:	cmc    
  4102d3:	inc    eax
  4102d4:	push   ebp
  4102d5:	mov    ebp,DWORD PTR [esp+edx*2-0x59]
  4102d9:	enter  0x65d6,0x5a
  4102dd:	inc    esp
  4102de:	mov    ebp,DWORD PTR [eax-0x7d4be58d]
  4102e4:	xor    BYTE PTR [eax-0x62],al
  4102e7:	out    0x98,eax
  4102e9:	rcr    DWORD PTR [edx],cl
  4102eb:	jne    0x4102a8
  4102ed:	in     al,0x2f
  4102ef:	(bad)  
  4102f0:	mov    bl,BYTE PTR [ebx+0xf]
  4102f3:	cmp    DWORD PTR [ebp+0xd94c556],ebp
  4102f9:	sub    eax,0x216881b0
  4102fe:	int3   
  4102ff:	adc    DWORD PTR [eax+esi*1-0x38],0x54
  410304:	dec    ebp
  410305:	push   eax
  410306:	mov    ch,0xbe
  410308:	dec    esp
  410309:	jge    0x410318
  41030b:	jmp    0x3634:0xba741407
  410312:	lea    ebx,[edi-0x2091c51a]
  410318:	das    
  410319:	xor    al,0x2a
  41031b:	mov    ecx,edi
  41031d:	sbb    bh,BYTE PTR [edi-0x548c31bf]
  410323:	stc    
  410324:	xchg   ebx,eax
  410325:	jmp    0x1c7edd15
  41032a:	add    DWORD PTR [edx-0x62e4d480],esp
  410330:	sub    al,0xe3
  410332:	xor    ecx,edi
  410334:	push   ebx
  410335:	mov    eax,ds:0xd3904e13
  41033a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41033b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41033c:	push   esi
  41033d:	jo     0x41030c
  41033f:	xor    esi,esi
  410341:	mov    ds:0x2c17015,eax
  410346:	ja     0x410392
  410348:	test   DWORD PTR [eax],edx
  41034a:	mov    ?,WORD PTR [edi+0x7a421a27]
  410350:	xor    eax,0xb858fa83
  410355:	nop
  410356:	and    ah,bl
  410358:	xchg   ebx,eax
  410359:	dec    ebx
  41035a:	icebp  
  41035b:	ror    BYTE PTR [esp+esi*8+0x74],1
  41035f:	sbb    eax,0x50f6da9c
  410364:	push   0xffffffb5
  410366:	xlat   BYTE PTR ds:[ebx]
  410367:	mov    edi,DWORD PTR [esi-0x2dfc9e3c]
  41036d:	jnp    0x41033d
  41036f:	sbb    edx,DWORD PTR [ecx+0x5c]
  410372:	mov    edx,0xb7ee1cf8
  410377:	pop    ss
  410378:	ja     0x41034a
  41037a:	scas   eax,DWORD PTR es:[edi]
  41037b:	adc    al,0xd1
  41037d:	scas   al,BYTE PTR es:[edi]
  41037e:	cdq    
  41037f:	jno    0x41031a
  410381:	fist   DWORD PTR [di-0x18]
  410385:	aam    0x3f
  410387:	dec    ebp
  410388:	mov    es,WORD PTR [eax+0xe8f55a0]
  41038e:	fst    DWORD PTR [ebp-0x7431ff35]
  410394:	push   ebp
  410395:	dec    edi
  410396:	add    eax,0xec738ff8
  41039b:	mov    ch,0x29
  41039d:	or     eax,0x95fb016c
  4103a2:	aad    0x26
  4103a4:	in     al,dx
  4103a5:	jb     0x410352
  4103a7:	and    eax,0xdfba90c4
  4103ac:	stc    
  4103ad:	dec    eax
  4103ae:	jno    0x4103f3
  4103b0:	add    dh,dh
  4103b2:	mov    gs,ebp
  4103b4:	enter  0x4c1d,0x72
  4103b8:	pop    ebx
  4103b9:	ror    dl,0xda
  4103bc:	dec    edi
  4103be:	and    BYTE PTR [eax-0x2b],bh
  4103c1:	pop    ebp
  4103c2:	pop    esi
  4103c3:	outs   dx,DWORD PTR ds:[esi]
  4103c4:	sbb    edi,DWORD PTR [edx+0x49]
  4103c7:	sub    BYTE PTR [edi+0x31],ah
  4103ca:	add    al,0x13
  4103cc:	ret    0xd2f4
  4103cf:	mov    bl,0xd4
  4103d1:	jecxz  0x41037f
  4103d3:	and    DWORD PTR [edx+edx*4],ecx
  4103d6:	jne    0x410365
  4103d8:	cmp    BYTE PTR [edi-0x31],0x9a
  4103dc:	in     eax,dx
  4103dd:	int3   
  4103de:	cmp    bl,BYTE PTR [edi+0x66776dd1]
  4103e4:	sbb    bl,ch
  4103e6:	add    DWORD PTR [edx],ebx
  4103e8:	jge    0x410376
  4103ea:	cli    
  4103eb:	mov    ds:0xf132cee4,eax
  4103f0:	dec    ebp
  4103f1:	or     ch,BYTE PTR [edi]
  4103f3:	adc    BYTE PTR [edx],dh
  4103f5:	pop    ss
  4103f6:	mov    ah,0xa2
  4103f8:	sbb    edi,DWORD PTR [ebx+0x1af2ae3d]
  4103fe:	neg    esi
  410400:	call   0xcdbe:0x11896f98
  410407:	xor    al,0x21
  410409:	add    eax,DWORD PTR [ecx]
  41040b:	mov    ebp,fs
  41040d:	xchg   ebx,eax
  41040e:	outs   dx,DWORD PTR ds:[esi]
  41040f:	(bad)  
  410410:	mov    ch,0x13
  410412:	stc    
  410413:	push   ebx
  410414:	pop    ebx
  410415:	clc    
  410416:	nop
  410417:	xor    ebx,esp
  410419:	dec    edx
  41041a:	mov    eax,ds:0x590ca911
  41041f:	sub    cl,BYTE PTR ds:0x8b5645cd
  410425:	imul   esi,DWORD PTR [ecx-0x4829e895],0x77
  41042c:	mov    al,ds:0xad65135e
  410431:	outs   dx,DWORD PTR ds:[esi]
  410432:	popa   
  410433:	(bad)
  410436:	jecxz  0x410406
  410438:	pop    ds
  410439:	xor    cl,BYTE PTR [ebp*8-0x5a186492]
  410440:	inc    eax
  410441:	ret    
  410442:	mov    ecx,0x74b6983b
  410447:	inc    edx
  410448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410449:	inc    edx
  41044a:	push   ecx
  41044b:	xor    dl,al
  41044d:	xor    DWORD PTR [edx+0x0],esi
  410450:	mov    al,0xbf
  410452:	push   ebx
  410453:	rep movs BYTE PTR es:[di],BYTE PTR ds:[si]
  410456:	xchg   ebp,eax
  410457:	adc    bh,dh
  410459:	cmc    
  41045a:	adc    eax,0xcb9b818
  41045f:	mov    al,ds:0x439c3dfc
  410464:	or     eax,0x10dc0f6f
  410469:	pop    edi
  41046a:	xchg   esi,eax
  41046b:	inc    ebp
  41046c:	icebp  
  41046d:	sub    BYTE PTR [edi-0x5c],dh
  410470:	lds    edi,FWORD PTR [eax-0x1b6507d1]
  410476:	rcr    ebp,1
  410478:	push   esp
  410479:	add    al,0xf4
  41047b:	mov    eax,0x64c70806
  410480:	sbb    esp,DWORD PTR [ebp-0x52]
  410483:	es (bad) 
  410485:	adc    DWORD PTR [edi-0x47],esi
  410488:	jo     0x4104a0
  41048a:	bound  ebp,QWORD PTR [ecx+0x46b0e0a5]
  410490:	jl     0x4104ec
  410492:	sub    eax,DWORD PTR [edi-0x1a516235]
  410498:	(bad)  
  41049a:	shl    BYTE PTR [edx-0x7cde37d0],cl
  4104a0:	jmp    0x78a7:0x4e15263b
  4104a7:	test   esi,0xb94142ae
  4104ad:	mov    edi,0xb195498d
  4104b2:	pop    esi
  4104b3:	enter  0xcfa4,0xf
  4104b7:	iret   
  4104b8:	pop    eax
  4104b9:	pop    esp
  4104ba:	jg     0x410464
  4104bc:	in     al,dx
  4104bd:	add    bl,BYTE PTR ds:0xdd5a3fa0
  4104c3:	cmp    BYTE PTR [esi+0x3b],cl
  4104c6:	test   dl,al
  4104c8:	jecxz  0x410452
  4104ca:	test   DWORD PTR [eax-0x3a],eax
  4104cd:	ret    
  4104ce:	std    
  4104cf:	and    al,0xd1
  4104d1:	add    BYTE PTR [ebx],dl
  4104d3:	push   cs
  4104d4:	popa   
  4104d5:	pop    ecx
  4104d6:	push   eax
  4104d7:	cmp    ecx,edi
  4104d9:	or     DWORD PTR [ebp+0x6f],0x5344fc6
  4104e0:	dec    eax
  4104e1:	add    DWORD PTR [ecx+0x4d4847e9],ecx
  4104e7:	iret   
  4104e8:	ins    DWORD PTR es:[edi],dx
  4104e9:	scas   eax,DWORD PTR es:[edi]
  4104ea:	xchg   ebx,eax
  4104eb:	adc    eax,0xe27a511b
  4104f0:	rcr    DWORD PTR [ecx-0x61],0xb7
  4104f4:	(bad)  
  4104f5:	in     al,dx
  4104f6:	mov    bl,0x82
  4104f8:	stos   DWORD PTR es:[edi],eax
  4104f9:	sahf   
  4104fa:	xchg   edx,eax
  4104fb:	jl     0x410544
  4104fd:	popf   
  4104fe:	outs   dx,DWORD PTR ds:[esi]
  4104ff:	adc    ebp,edi
  410501:	mov    eax,0xcc4d8ac8
  410506:	out    0x8c,al
  410508:	aas    
  410509:	out    dx,eax
  41050a:	mov    eax,0x8d2458ba
  41050f:	push   ecx
  410510:	pop    es
  410511:	fild   DWORD PTR [ebx+edx*4-0x3cc41ca0]
  410518:	ins    DWORD PTR es:[edi],dx
  410519:	push   cs
  41051a:	scas   eax,DWORD PTR es:[edi]
  41051b:	xor    BYTE PTR [ebp+0x29d5a0f3],dl
  410521:	fsub   DWORD PTR [esi]
  410523:	cmp    eax,0xb1ef766
  410528:	and    eax,0x672e294d
  41052d:	mov    eax,0x6e7547b0
  410532:	cmp    ebx,edi
  410534:	push   0x3
  410536:	mov    dh,0x89
  410538:	dec    ebp
  410539:	xor    dl,BYTE PTR [ebp+0x2d48f734]
  41053f:	stc    
  410540:	sar    BYTE PTR [ebx+0x4515f41a],1
  410546:	add    BYTE PTR [edx-0x48],0xe9
  41054a:	in     al,dx
  41054b:	push   ebx
  41054c:	bound  ebp,QWORD PTR [edx-0xd42d217]
  410552:	in     eax,dx
  410553:	or     al,0xc8
  410555:	and    DWORD PTR [ecx],ecx
  410557:	push   eax
  410558:	leave  
  410559:	not    ecx
  41055b:	jp     0x410524
  41055d:	jmp    0xbdd71904
  410562:	cmp    DWORD PTR [esi-0x65],esi
  410565:	lea    ebp,[ebx]
  410567:	lock or edi,esi
  41056a:	sbb    eax,0x54988b53
  41056f:	jl     0x410550
  410571:	enter  0x65e4,0x6d
  410575:	fiadd  DWORD PTR [ebx-0x37]
  410578:	lods   eax,DWORD PTR ds:[esi]
  410579:	sbb    eax,eax
  41057b:	rcl    DWORD PTR [edi],0x2a
  41057e:	in     eax,dx
  41057f:	jmp    0x12835cbe
  410584:	jns    0x4105fe
  410586:	push   ecx
  410587:	push   eax
  410588:	inc    bl
  41058a:	sub    edi,edi
  41058c:	pop    ss
  41058d:	mov    ecx,0x161e8e5d
  410592:	sbb    ecx,eax
  410594:	ja     0x4105d2
  410596:	push   esi
  410597:	mov    al,ds:0x138d4c7e
  41059c:	adc    al,BYTE PTR [esp+edi*2]
  41059f:	pop    ebx
  4105a0:	dec    esi
  4105a1:	xor    al,0x7
  4105a3:	xor    BYTE PTR [edi-0xf],dl
  4105a6:	push   cs
  4105a7:	sbb    DWORD PTR [ecx+ebx*1],0xffffff80
  4105ab:	pop    es
  4105ac:	sti    
  4105ad:	adc    cl,bh
  4105af:	stos   DWORD PTR es:[edi],eax
  4105b0:	mov    eax,0xfd795f1b
  4105b5:	xlat   BYTE PTR ds:[ebx]
  4105b6:	fldlg2 
  4105b8:	pop    ebx
  4105b9:	dec    ebp
  4105ba:	and    al,0x59
  4105bc:	lahf   
  4105bd:	mov    eax,ds
  4105bf:	(bad)  
  4105c0:	int    0x76
  4105c2:	cdq    
  4105c3:	mov    edx,0x5cfe8a68
  4105c8:	out    dx,al
  4105c9:	clc    
  4105ca:	pop    ebx
  4105cb:	fidivr DWORD PTR [ebp*2-0x98acc75]
  4105d2:	dec    eax
  4105d3:	jne    0x410639
  4105d5:	pop    edx
  4105d6:	mov    ebp,0x3684ebae
  4105db:	ret    0xbbc5
  4105de:	adc    eax,0x9543831f
  4105e3:	mov    ds:0x7d3f4bf7,eax
  4105e8:	pop    edx
  4105e9:	lods   eax,DWORD PTR ds:[esi]
  4105ea:	stos   DWORD PTR es:[edi],eax
  4105eb:	sub    edx,edi
  4105ed:	call   0x92c3fc4a
  4105f2:	push   edx
  4105f3:	ret    
  4105f4:	inc    eax
  4105f5:	nop
  4105f6:	and    al,0xf8
  4105f8:	dec    edx
  4105f9:	jno    0x4105af
  4105fb:	jnp    0x41059f
  4105fd:	ins    BYTE PTR es:[edi],dx
  4105fe:	and    BYTE PTR [ebp-0x60b61eba],bl
  410604:	push   es
  410605:	pop    ebp
  410606:	push   esi
  410607:	sub    bl,BYTE PTR [edi+eax*1+0x1e]
  41060b:	repz mov ah,0x2b
  41060e:	int    0x20
  410610:	push   edi
  410611:	call   0x8c1563a1
  410616:	dec    ebp
  410617:	or     al,0x3
  410619:	xor    DWORD PTR [ecx+0x79b577f2],eax
  41061f:	retf   
  410620:	shrd   edx,eax,0x2
  410624:	xor    ecx,ecx
  410626:	shl    esi,0x1e
  410629:	xor    ecx,edi
  41062b:	shr    eax,0x2
  41062e:	or     ecx,edx
  410630:	xor    esi,0x80000000
  410636:	or     esi,eax
  410638:	mov    DWORD PTR [ebp-0x40],ecx
  41063b:	push   edi
  41063c:	mov    DWORD PTR [ebp-0x3c],esi
  41063f:	mov    eax,DWORD PTR [ebp-0x48]
  410642:	mov    ecx,DWORD PTR [ebp-0x44]
  410645:	push   0xae0404d3
  41064a:	push   ecx
  41064b:	push   eax
  41064c:	call   0x42227d
  410651:	mov    ecx,eax
  410653:	mov    eax,DWORD PTR [ebp-0x50]
  410656:	mov    esi,DWORD PTR [ebp-0x4c]
  410659:	or     ecx,eax
  41065b:	mov    eax,DWORD PTR [ebp-0x40]
  41065e:	or     edx,esi
  410660:	jmp    0x410a14
  410665:	pop    ebx
  410666:	icebp  
  410667:	lds    esp,FWORD PTR [eax+0x3abbbc68]
  41066d:	ror    ecx,0xfe
  410670:	(bad)  [ebp-0x106d8515]
  410676:	cmp    al,0xbe
  410678:	mov    esi,0xbebec4e3
  41067d:	push   edi
  41067e:	inc    edx
  41067f:	mov    ch,0xda
  410681:	jb     0x410674
  410683:	sbb    dh,BYTE PTR [esi+ebp*1-0x48aa0596]
  41068a:	lods   eax,DWORD PTR ds:[esi]
  41068b:	pop    esi
  41068c:	jg     0x41064d
  41068e:	mov    ah,0x4b
  410690:	sbb    DWORD PTR [edx],edi
  410692:	sub    dl,BYTE PTR fs:[edx+eiz*1+0x5cca9338]
  41069a:	jle    0x41062c
  41069c:	in     al,dx
  41069d:	pop    edi
  41069e:	inc    ebp
  41069f:	sbb    BYTE PTR [edx],bh
  4106a1:	fwait
  4106a2:	jl     0x4106fb
  4106a4:	or     dl,BYTE PTR gs:[edi+0x5b3505fe]
  4106ab:	scas   al,BYTE PTR es:[edi]
  4106ac:	inc    edi
  4106ad:	test   ecx,edx
  4106af:	push   esi
  4106b0:	clc    
  4106b1:	popa   
  4106b2:	sub    al,0x22
  4106b4:	pcmpeqd mm5,mm4
  4106b7:	xchg   ebx,eax
  4106b8:	jecxz  0x4106ab
  4106ba:	fadd   QWORD PTR [esi+0x6af1e9f]
  4106c0:	retf   0x37cf
  4106c3:	and    eax,0x8b4efc01
  4106c8:	mov    ecx,0x252bafc2
  4106cd:	sub    DWORD PTR [ebx],0x4b
  4106d0:	mov    dl,0x93
  4106d2:	sub    eax,0xb15b1e37
  4106d7:	jns    0x4106ea
  4106d9:	xchg   esi,eax
  4106da:	inc    ecx
  4106db:	out    0xc1,eax
  4106dd:	add    dh,al
  4106df:	xchg   ebx,eax
  4106e0:	cdq    
  4106e1:	shl    DWORD PTR [eax+0x11f6f8ab],1
  4106e7:	fstp   QWORD PTR [edx+edi*8]
  4106ea:	or     al,BYTE PTR [ebx]
  4106ec:	ins    BYTE PTR es:[edi],dx
  4106ed:	adc    eax,DWORD PTR [edx]
  4106ef:	push   ebx
  4106f0:	pop    ss
  4106f1:	popf   
  4106f2:	mov    ebx,0xf8f9c430
  4106f7:	mov    dl,0x40
  4106f9:	mov    gs:0x7c931761,eax
  4106ff:	mov    dh,BYTE PTR [ebx-0x37]
  410702:	ret    0x38c5
  410705:	imul   ecx,ebx,0xc1f3f2ce
  41070b:	rcl    DWORD PTR [eax+0x60],cl
  41070e:	xchg   esi,eax
  41070f:	ins    BYTE PTR es:[edi],dx
  410710:	mov    dh,BYTE PTR [esi+0x34fa1aa6]
  410716:	nop
  410717:	or     bl,BYTE PTR [ebp+0x2585feac]
  41071d:	cli    
  41071e:	loop   0x410726
  410720:	mov    esp,0x72b1155e
  410725:	and    dh,bh
  410727:	or     dl,BYTE PTR [ebx]
  410729:	mov    dl,0x30
  41072b:	imul   ecx,DWORD PTR [eax+0x51],0x41bb13d1
  410732:	mov    esp,0x46211be0
  410737:	sbb    DWORD PTR [ebx+0x414f52f],0x4f
  41073e:	or     ebx,DWORD PTR [eax-0x26]
  410741:	xchg   esi,eax
  410742:	retf   0x6ae4
  410745:	jnp    0x4107ad
  410747:	fwait
  410748:	imul   eax,DWORD PTR gs:[esp+eiz*4+0x1d],0x49
  41074e:	cmp    BYTE PTR [ebx-0x5f],dl
  410751:	adc    DWORD PTR [ebp+ebx*1+0x68],ebx
  410755:	pop    eax
  410756:	sub    eax,0x8164a514
  41075b:	pop    es
  41075c:	ins    DWORD PTR es:[edi],dx
  41075d:	dec    esi
  41075e:	jge    0x410713
  410760:	es stos DWORD PTR es:[edi],eax
  410762:	sub    eax,0x2e8d351d
  410767:	pop    eax
  410768:	shr    BYTE PTR [edi-0x200840d],1
  41076e:	cdq    
  41076f:	sbb    ebp,0xca963da0
  410775:	(bad)  
  410776:	sahf   
  410777:	clc    
  410778:	and    ecx,ebx
  41077a:	push   0x72
  41077c:	in     eax,dx
  41077d:	xchg   ecx,eax
  41077e:	out    0x1e,al
  410780:	xor    ah,dl
  410782:	mov    cs,WORD PTR [ecx+0x57b01ae5]
  410788:	mov    eax,0x79137ac4
  41078d:	mov    ds:0x569e0c38,al
  410792:	fiadd  WORD PTR [edx+0x71]
  410795:	xor    eax,0x6b357150
  41079a:	xchg   edx,eax
  41079b:	je     0x410786
  41079d:	cmp    ah,BYTE PTR [ebx-0x2caef3c]
  4107a3:	pusha  
  4107a4:	test   DWORD PTR [edi],ecx
  4107a6:	inc    esi
  4107a7:	fistp  DWORD PTR [ecx]
  4107a9:	sahf   
  4107aa:	pop    ecx
  4107ab:	enter  0xd464,0x9c
  4107af:	mov    edx,DWORD PTR [ebp+0x7bd05686]
  4107b5:	jp     0x4107a7
  4107b7:	and    BYTE PTR [edi+0x4c],al
  4107ba:	in     eax,0xb8
  4107bc:	mov    DWORD PTR [edx+ebp*4],ecx
  4107bf:	das    
  4107c0:	push   0xfffffff9
  4107c2:	sub    al,0xc6
  4107c4:	mov    ebp,0x28b268c
  4107c9:	(bad)  
  4107ca:	jmp    0x9e76:0x97032d83
  4107d1:	mov    al,0x48
  4107d3:	dec    esp
  4107d4:	mov    esp,0xfbbb608a
  4107d9:	jbe    0x4107a0
  4107db:	dec    esi
  4107dc:	push   eax
  4107dd:	aam    0x87
  4107df:	in     eax,dx
  4107e0:	mov    ds:0x5dd54542,eax
  4107e5:	cmp    eax,0x500c7f66
  4107ea:	xchg   ebx,eax
  4107eb:	popa   
  4107ec:	sti    
  4107ed:	add    BYTE PTR [ecx+esi*4-0x833d952],al
  4107f4:	into   
  4107f5:	rcr    BYTE PTR ds:0xfdbc7c1d,1
  4107fb:	call   0xf8d7f3ad
  410800:	adc    bh,dl
  410802:	or     al,0x31
  410804:	mov    esi,0x551f6525
  410809:	stc    
  41080a:	loopne 0x41088a
  41080c:	in     al,dx
  41080d:	vmread DWORD PTR [ebx],esp
  410810:	js     0x4107ae
  410812:	jmp    0x4107ad
  410814:	mov    ebx,0x71c40ec0
  410819:	jns    0x4107f8
  41081b:	mov    ebp,0x1fcc0304
  410820:	(bad)  
  410821:	mov    edi,0x5902c647
  410826:	xor    esi,DWORD PTR [ecx+ecx*4+0x53]
  41082a:	and    BYTE PTR [esi],ah
  41082c:	xchg   esp,eax
  41082d:	or     cl,BYTE PTR [esi+0xd]
  410830:	icebp  
  410831:	fwait
  410832:	mov    bl,0x1b
  410834:	cmp    bl,cl
  410836:	shl    dl,cl
  410838:	aas    
  410839:	dec    esp
  41083a:	adc    eax,0x8fcaf049
  41083f:	ins    BYTE PTR es:[edi],dx
  410840:	mov    bl,0x38
  410842:	lds    edi,FWORD PTR [ecx-0x4e]
  410845:	push   cs
  410846:	add    BYTE PTR [edi+0x7a],0x13
  41084a:	bound  ecx,QWORD PTR [edx-0x7e]
  41084d:	pushf  
  41084e:	jmp    0x4108a2
  410850:	rcl    BYTE PTR [esp+eax*2+0x7b],1
  410854:	fnstcw WORD PTR [edx-0x7c]
  410857:	mov    bh,0x71
  410859:	imul   ecx,DWORD PTR [esi-0x42],0x6736fe34
  410860:	mov    esp,0x1ef23ef1
  410865:	retf   
  410866:	aaa    
  410867:	into   
  410868:	xchg   edi,eax
  410869:	cdq    
  41086a:	pop    esi
  41086b:	sbb    BYTE PTR [ebx+0x487428fd],ah
  410871:	sbb    dl,BYTE PTR [ecx-0x199f7377]
  410877:	jo     0x4108a8
  410879:	fisub  WORD PTR [eax+0x6f]
  41087c:	xchg   edx,eax
  41087d:	dec    edx
  41087e:	push   cs
  41087f:	mov    dl,BYTE PTR ds:0xa5f95485
  410885:	call   0x44c4d7cb
  41088a:	mov    eax,0x6fbdb1d5
  41088f:	daa    
  410890:	jmp    0xed92:0xf195135d
  410897:	ds mov dl,0xdb
  41089a:	cmp    DWORD PTR [eax-0x55],0xbb25221d
  4108a1:	mov    ds:0x5150fd1f,eax
  4108a6:	pop    ds
  4108a7:	cdq    
  4108a8:	mov    esi,0xf2c280ab
  4108ad:	std    
  4108ae:	clc    
  4108af:	fwait
  4108b0:	aam    0x7d
  4108b2:	mov    ecx,0x960a57b3
  4108b7:	test   DWORD PTR ds:0x2c39a6f6,esp
  4108bd:	jmp    0x4610:0x78a32489
  4108c4:	lods   al,BYTE PTR ds:[esi]
  4108c5:	sahf   
  4108c6:	bound  ebp,QWORD PTR [esi+0x6445381a]
  4108cc:	add    eax,0xd354557c
  4108d1:	mov    BYTE PTR [edi-0x7d5b35a5],0x4e
  4108d8:	out    dx,al
  4108d9:	cs dec ecx
  4108db:	pop    DWORD PTR [esi-0x10]
  4108de:	add    al,0x5f
  4108e0:	dec    edi
  4108e1:	inc    DWORD PTR [eax]
  4108e3:	(bad)  
  4108e4:	jp     0x4108cc
  4108e6:	test   eax,ebp
  4108e8:	(bad)  
  4108e9:	push   esi
  4108ea:	pop    esi
  4108eb:	adc    eax,0x62169a9
  4108f0:	scas   al,BYTE PTR es:[edi]
  4108f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108f2:	push   esi
  4108f3:	xor    edx,esi
  4108f5:	jle    0x410912
  4108f7:	in     eax,dx
  4108f8:	mov    ch,0x72
  4108fa:	adc    eax,0x20ee30a5
  4108ff:	int3   
  410900:	daa    
  410901:	dec    ecx
  410902:	fcom   st(4)
  410904:	and    eax,0x9dad9715
  410909:	dec    ebx
  41090a:	cli    
  41090b:	push   0x4e
  41090d:	bound  ebp,QWORD PTR [ebx+ebx*8+0x0]
  410911:	mov    bl,0x27
  410913:	cmp    cl,BYTE PTR [edi+eax*1]
  410916:	(bad)  
  410918:	stos   BYTE PTR es:[edi],al
  410919:	jns    0x410970
  41091b:	or     DWORD PTR [edi+eiz*2],esi
  41091e:	cmp    DWORD PTR [eax+0x2e17fda5],esi
  410924:	dec    esi
  410925:	push   0xffffffb2
  410927:	adc    al,0xd8
  410929:	fstp   st(0)
  41092b:	in     al,dx
  41092c:	or     eax,0x2b4093fd
  410931:	arpl   WORD PTR [esi],di
  410933:	call   0x2f55:0x4c74367f
  41093a:	aam    0x81
  41093c:	mov    DWORD PTR ds:0x7323bf8b,ebp
  410942:	loop   0x410936
  410944:	rcl    bh,0x8f
  410947:	xchg   ebp,eax
  410948:	aam    0x9b
  41094a:	pop    ss
  41094b:	pop    esi
  41094c:	xchg   esi,eax
  41094d:	cmp    eax,DWORD PTR [eax+0x7f1654ef]
  410953:	(bad)  
  410955:	(bad)  
  410956:	rol    BYTE PTR [ecx],cl
  410958:	(bad)  
  410959:	js     0x410909
  41095b:	and    bh,ch
  41095d:	jno    0x4109ac
  41095f:	sub    DWORD PTR [ecx],0xffffff84
  410962:	clc    
  410963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410964:	rcr    DWORD PTR [ecx+ecx*8],0x26
  410968:	mov    ebx,0x5a1a4a49
  41096d:	xchg   edx,eax
  41096e:	and    BYTE PTR [eax-0x58],dh
  410971:	sub    DWORD PTR [esi+0x53],esi
  410974:	in     eax,dx
  410975:	sub    bl,BYTE PTR [ebx-0x79c2bfbd]
  41097b:	or     al,0xb0
  41097d:	or     al,0x3d
  41097f:	jno    0x410961
  410981:	mov    bh,0x6f
  410983:	dec    esp
  410984:	fdivrp st(5),st
  410986:	adc    edx,DWORD PTR [ecx]
  410988:	test   bl,dh
  41098a:	mov    DWORD PTR [edx+0xd],eax
  41098d:	test   al,0x46
  41098f:	fisubr DWORD PTR ds:0x71f8d3b5
  410995:	mov    ebp,0x3158e69b
  41099a:	loop   0x41098b
  41099c:	gs jb  0x4109ba
  41099f:	xlat   BYTE PTR ds:[ebx]
  4109a0:	mov    DWORD PTR [edi],esi
  4109a2:	mov    es,esi
  4109a4:	fimul  WORD PTR [eax*1-0x2126aef]
  4109ab:	jg     0x410a15
  4109ad:	sub    al,0x45
  4109b0:	jo     0x4109ea
  4109b2:	jl     0x410a0e
  4109b4:	shrd   DWORD PTR [ecx+0x13],ebp,0x6b
  4109b9:	pop    edx
  4109ba:	ror    DWORD PTR [ebp-0x10],0xcd
  4109be:	mov    eax,es
  4109c0:	enter  0x6cf4,0x94
  4109c4:	push   esp
  4109c5:	out    dx,al
  4109c6:	cmp    eax,0xebae6311
  4109cb:	mov    eax,0x792b0c0
  4109d0:	popa   
  4109d1:	mov    bl,0x9
  4109d3:	push   es
  4109d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109d5:	es fwait
  4109d7:	pop    ebx
  4109d8:	bound  eax,QWORD PTR [ebp-0x73]
  4109db:	sbb    BYTE PTR [eax-0x8],0x83
  4109df:	xor    DWORD PTR [eax+0x743eb9b7],esi
  4109e5:	xchg   ebx,eax
  4109e6:	leave  
  4109e7:	fs dec ecx
  4109e9:	push   ss
  4109ea:	pop    edx
  4109eb:	in     eax,dx
  4109ec:	sub    cl,BYTE PTR [esi-0x17]
  4109ef:	arpl   WORD PTR [edi],bp
  4109f1:	addr16 add al,0x7f
  4109f4:	xor    esi,DWORD PTR [ebx]
  4109f6:	sbb    eax,0x136684b3
  4109fb:	push   ebp
  4109fc:	shr    DWORD PTR [ebp+0x41],1
  4109ff:	or     cl,bh
  410a01:	push   ss
  410a02:	add    ebx,DWORD PTR [edi-0x57]
  410a05:	leave  
  410a06:	repnz sbb ebx,DWORD PTR fs:[ecx-0x2225c0fe]
  410a0e:	retf   0x8a5e
  410a11:	pop    es
  410a12:	imul   edi,DWORD PTR [edx-0x75],0x75
  410a16:	les    eax,FWORD PTR [ebx]
  410a18:	enter  0x458b,0xa8
  410a1c:	adc    edx,esi
  410a1e:	mov    esi,DWORD PTR [ebp-0x54]
  410a21:	add    ecx,eax
  410a23:	mov    eax,DWORD PTR [ebp+0x8]
  410a26:	adc    edx,esi
  410a28:	add    ecx,0xffff55a8
  410a2e:	pop    edi
  410a2f:	adc    edx,0xffff64cd
  410a35:	pop    esi
  410a36:	mov    DWORD PTR [eax],ecx
  410a38:	jmp    0x410dec
  410a3d:	pop    esi
  410a3e:	sub    al,0xdf
  410a40:	shr    BYTE PTR [ebx+ebx*1+0x359fbc6e],1
  410a47:	mov    esp,0x60cf39a4
  410a4c:	sahf   
  410a4d:	push   ss
  410a4e:	inc    edx
  410a4f:	mov    esi,0xbec4e3be
  410a54:	mov    esi,0x893d3467
  410a59:	pop    esi
  410a5a:	repnz push ds
  410a5c:	xchg   esp,eax
  410a5d:	gs cs addr16 inc ebx
  410a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a62:	sbb    eax,0x55c29011
  410a67:	imul   ebp,ebp,0xfffffff3
  410a6a:	ja     0x410a0a
  410a6c:	push   0x5e
  410a6e:	jbe    0x410a80
  410a70:	lahf   
  410a71:	xchg   ecx,eax
  410a72:	jnp    0x410ab5
  410a74:	mov    dl,0xc4
  410a76:	call   FWORD PTR [esi]
  410a78:	jge    0x410a24
  410a7a:	mov    esi,0xf7665f14
  410a7f:	sub    al,0x23
  410a81:	inc    ebp
  410a82:	fsub   st,st(5)
  410a84:	jno    0x410ad5
  410a86:	and    BYTE PTR [edi-0x5d],0xc6
  410a8a:	jmp    esp
  410a8c:	pop    ebp
  410a8d:	dec    ebx
  410a8e:	cmp    edx,edx
  410a90:	and    ah,BYTE PTR [ebp-0x2d]
  410a93:	inc    esi
  410a95:	push   edx
  410a96:	mov    ah,BYTE PTR ds:0xb77bbcd7
  410a9c:	aas    
  410a9d:	ja     0x410a57
  410a9f:	push   ss
  410aa0:	aad    0xfa
  410aa2:	out    dx,al
  410aa3:	dec    esp
  410aa4:	mov    al,ds:0xe726eea1
  410aa9:	bound  esi,QWORD PTR [ebp-0xa]
  410aac:	inc    edi
  410aad:	push   esp
  410aae:	stos   BYTE PTR es:[edi],al
  410aaf:	add    BYTE PTR [ecx],bl
  410ab1:	adc    DWORD PTR [edi+0x3a],edx
  410ab4:	cs pop ds
  410ab6:	aam    0x93
  410ab8:	test   eax,0x3f9ee9df
  410abd:	cmc    
  410abe:	test   eax,0x325b134d
  410ac3:	(bad)  
  410ac4:	pop    ss
  410ac5:	or     bl,bl
  410ac7:	in     al,dx
  410ac8:	fimul  WORD PTR [ecx]
  410aca:	jo     0x410a5e
  410acc:	sbb    al,0xac
  410ace:	icebp  
  410acf:	inc    eax
  410ad0:	dec    ecx
  410ad1:	test   DWORD PTR [ebp+0x53],esp
  410ad4:	pusha  
  410ad5:	cmp    eax,0xb51da3dc
  410ada:	aaa    
  410adb:	and    DWORD PTR [ecx+0x257aab0c],esi
  410ae1:	imul   BYTE PTR [edi]
  410ae3:	jmp    0xdd51f388
  410ae8:	adc    dl,dl
  410aea:	out    0x8d,eax
  410aec:	mov    ds:0x509affe5,al
  410af1:	shl    BYTE PTR [esi+0x207de15b],1
  410af7:	sub    al,0xc1
  410af9:	repz adc BYTE PTR [eax+0x8],0xfc
  410afe:	(bad)  
  410aff:	leave  
  410b00:	stos   DWORD PTR es:[edi],eax
  410b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b02:	jae    0x410ab8
  410b04:	dec    ebx
  410b05:	das    
  410b06:	pop    ecx
  410b07:	int3   
  410b08:	shl    ch,1
  410b0a:	sbb    cl,bh
  410b0c:	mov    bl,0xf1
  410b0e:	xor    eax,0x9396c5e3
  410b13:	mov    al,ds:0xf4c6a0ca
  410b18:	icebp  
  410b19:	adc    BYTE PTR [eax+0x1f28b591],ah
  410b1f:	adc    dh,BYTE PTR [esi]
  410b21:	xchg   ebx,eax
  410b22:	xchg   ebp,eax
  410b23:	xlat   BYTE PTR ds:[ebx]
  410b24:	scas   eax,DWORD PTR es:[edi]
  410b25:	or     BYTE PTR [ecx],cl
  410b27:	xlat   BYTE PTR ds:[ebx]
  410b28:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  410b2a:	mov    gs,WORD PTR [edx+0x3e]
  410b2d:	mov    bh,0xa0
  410b2f:	imul   esp,DWORD PTR es:[esi+ebp*8],0x19
  410b34:	ins    BYTE PTR es:[edi],dx
  410b35:	popa   
  410b36:	or     bl,BYTE PTR [ecx-0x23]
  410b39:	gs ins BYTE PTR es:[edi],dx
  410b3b:	out    0x6e,eax
  410b3d:	jno    0x410b3f
  410b3f:	dec    ebp
  410b40:	(bad)  
  410b41:	mov    esi,0xd8b51950
  410b46:	or     DWORD PTR [edx+0x57],esp
  410b49:	pop    esp
  410b4a:	cmp    dh,BYTE PTR [ebx-0xde1bdd7]
  410b50:	sti    
  410b51:	pushf  
  410b52:	lea    edi,[esi-0x23bf8429]
  410b58:	fdivr  st(4),st
  410b5a:	(bad)  
  410b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b5c:	xchg   esi,eax
  410b5d:	retf   
  410b5e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  410b60:	iret   
  410b61:	mov    ebx,0x7aed058a
  410b66:	add    al,al
  410b68:	add    eax,0xc0d695b1
  410b6d:	jae    0x410ba7
  410b6f:	xor    al,0xd5
  410b71:	cdq    
  410b72:	cmp    al,0x8d
  410b74:	jne    0x410bbf
  410b76:	dec    ecx
  410b77:	mov    dh,0xdc
  410b79:	cs add esi,edx
  410b7c:	lds    edi,FWORD PTR [edi]
  410b7e:	fmul   DWORD PTR [esi-0x45d0347f]
  410b84:	div    BYTE PTR [edi-0xf]
  410b87:	lock popa 
  410b89:	aas    
  410b8a:	cli    
  410b8b:	mov    edx,fs
  410b8d:	xchg   edi,eax
  410b8e:	adc    ch,cl
  410b90:	sbb    BYTE PTR [ebx-0x51],al
  410b93:	sub    BYTE PTR [ebx],al
  410b95:	and    BYTE PTR [edx-0x6b8e769],dl
  410b9b:	outs   dx,DWORD PTR ds:[esi]
  410b9c:	cwde   
  410b9d:	repnz sub ebx,DWORD PTR [eax]
  410ba0:	es stos BYTE PTR es:[edi],al
  410ba2:	add    edi,eax
  410ba4:	xor    ebp,edi
  410ba6:	imul   esp,ebx,0x55
  410ba9:	repnz pop eax
  410bab:	and    BYTE PTR [edi+eiz*1],cl
  410bae:	cmp    al,0x4c
  410bb0:	cli    
  410bb1:	fwait
  410bb2:	retf   0x6b76
  410bb5:	cmp    al,BYTE PTR [esi]
  410bb7:	je     0x410c02
  410bb9:	mov    edx,0xa1f19b64
  410bbe:	xchg   esp,ebx
  410bc0:	test   al,0xad
  410bc2:	cmp    cl,bl
  410bc4:	and    cl,BYTE PTR [esi+esi*2]
  410bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bc8:	jmp    0x86c2:0x5cda2fde
  410bcf:	pop    edx
  410bd0:	pop    edi
  410bd1:	push   cs
  410bd2:	out    0x9a,eax
  410bd4:	outs   dx,DWORD PTR ds:[esi]
  410bd5:	outs   dx,BYTE PTR ds:[esi]
  410bd6:	lea    esp,[eax+0x328c784a]
  410bdc:	mov    ch,0xad
  410bde:	mov    cl,0xf5
  410be0:	(bad)  
  410be1:	test   al,0x84
  410be3:	mov    ebp,0x9a42e9ef
  410be8:	pop    ebx
  410be9:	(bad)  
  410bea:	adc    DWORD PTR [edx+0x64ed5cf4],esi
  410bf0:	pop    esi
  410bf1:	dec    esi
  410bf2:	xchg   ecx,eax
  410bf3:	or     edx,0x394b48c4
  410bf9:	or     eax,DWORD PTR [esi]
  410bfb:	mov    eax,ds:0x36ad5e0c
  410c00:	fs mov ah,0x97
  410c03:	mov    ebx,0xe175df8e
  410c08:	addr16 int 0x21
  410c0b:	push   ecx
  410c0c:	outs   dx,DWORD PTR ds:[esi]
  410c0d:	int    0xa3
  410c0f:	jns    0x410bf3
  410c11:	or     eax,0xffffffdb
  410c14:	aad    0x8c
  410c16:	jmp    0x75d37639
  410c1b:	repnz mov ah,0x72
  410c1e:	push   esi
  410c1f:	mov    edi,0x7a25161e
  410c24:	shl    DWORD PTR [ebx-0x7f],1
  410c27:	ins    BYTE PTR es:[edi],dx
  410c28:	mov    WORD PTR [edx+eiz*8-0x1a],?
  410c2c:	xor    BYTE PTR [ebx+ecx*1+0x5a4713b1],bh
  410c33:	push   esp
  410c34:	or     dh,dh
  410c36:	in     eax,dx
  410c37:	icebp  
  410c38:	xor    esi,DWORD PTR ds:0xd3198fa0
  410c3e:	or     eax,0x5f184f65
  410c43:	sbb    eax,0xda7f763d
  410c48:	push   esp
  410c49:	push   edi
  410c4a:	sbb    edx,edi
  410c4c:	cmp    al,0x7e
  410c4e:	inc    edi
  410c4f:	sub    bl,BYTE PTR [esi]
  410c51:	jo     0x410bdb
  410c53:	push   ebp
  410c54:	xchg   ecx,eax
  410c55:	xchg   ebx,eax
  410c56:	test   eax,0x96d2ab3e
  410c5b:	mov    ebp,ebx
  410c5d:	fs xchg esp,eax
  410c5f:	mov    esp,0x4b85e365
  410c64:	out    0x81,eax
  410c66:	xrelease xchg BYTE PTR [ebp-0x58],bl
  410c6a:	fiadd  WORD PTR [edi]
  410c6c:	aaa    
  410c6d:	daa    
  410c6e:	cwde   
  410c6f:	ss push edx
  410c71:	shl    BYTE PTR [ecx+0x41],1
  410c74:	xchg   ebp,eax
  410c75:	ja     0x410c4c
  410c77:	adc    ch,BYTE PTR [eax-0x7c]
  410c7a:	jae    0x410c7c
  410c7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c7d:	arpl   WORD PTR [ebx+ebp*1],sp
  410c80:	test   eax,0x717f7f60
  410c85:	out    0x17,eax
  410c87:	lods   eax,DWORD PTR ds:[esi]
  410c88:	(bad)  
  410c89:	cwde   
  410c8a:	(bad)  
  410c8b:	rcr    DWORD PTR [edi+0x5f],cl
  410c8e:	jns    0x410d03
  410c90:	inc    edx
  410c91:	mov    ecx,0x4d4b5eab
  410c96:	popf   
  410c97:	xchg   ebp,eax
  410c98:	push   edx
  410c99:	mov    ecx,0xeb47c814
  410c9e:	ret    
  410c9f:	fwait
  410ca0:	add    DWORD PTR [ecx+0x52666c72],edi
  410ca6:	test   ebp,0xe0171161
  410cac:	pop    es
  410cad:	adc    al,0x17
  410caf:	into   
  410cb0:	mov    ch,0x41
  410cb2:	dec    esi
  410cb3:	or     al,0x9b
  410cb5:	xchg   DWORD PTR [edi-0x3dff6007],esi
  410cbb:	xor    al,0x7c
  410cbd:	jp     0x410c6b
  410cbf:	cwde   
  410cc0:	test   eax,0x9b26f6a9
  410cc5:	pop    ds
  410cc6:	add    DWORD PTR [ecx+0x43978256],ebx
  410ccc:	(bad)  [ebx]
  410cce:	shr    BYTE PTR [ebx+0x11a379a3],0xf7
  410cd5:	jl     0x410c89
  410cd7:	and    edx,DWORD PTR [ecx+0x3bf90e1b]
  410cdd:	jnp    0x410c74
  410cdf:	sub    BYTE PTR [ebx],bh
  410ce1:	pop    ebx
  410ce2:	push   ss
  410ce3:	out    0x6f,eax
  410ce5:	das    
  410ce6:	push   cs
  410ce7:	bndstx [ecx-0x3d],(bad)
  410ceb:	loop   0x410d41
  410ced:	inc    edi
  410cee:	xor    edi,esi
  410cf0:	mov    ebp,0x33aee230
  410cf5:	push   ds
  410cf6:	jg     0x410c87
  410cf8:	je     0x410d0c
  410cfa:	inc    ebp
  410cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cfc:	aas    
  410cfd:	je     0x410d2e
  410cff:	retf   
  410d00:	retf   0x28a5
  410d03:	loop   0x410cc5
  410d05:	dec    edi
  410d06:	shr    BYTE PTR [ebx-0x417b864b],cl
  410d0c:	ror    BYTE PTR [ebp+0x2565cb16],0x30
  410d13:	lsl    esp,WORD PTR [edx-0x7b30006f]
  410d1a:	sbb    dh,BYTE PTR [edi+0x478e8ef5]
  410d20:	or     eax,0xcb172327
  410d25:	add    DWORD PTR [ecx],ebx
  410d27:	push   ebx
  410d28:	ins    BYTE PTR es:[edi],dx
  410d29:	and    BYTE PTR [ebx-0x61a885d7],al
  410d2f:	push   0x54ab3baa
  410d34:	add    BYTE PTR [esi+ecx*8-0x41bf8696],ah
  410d3b:	mov    dh,0xd3
  410d3d:	jns    0x410d82
  410d3f:	rol    BYTE PTR [ecx+0x31],0xb2
  410d43:	data16 xstore-rng (bad)
  410d45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d46:	test   bh,ch
  410d48:	gs inc eax
  410d4a:	adc    edx,DWORD PTR [edi+0x54]
  410d4d:	std    
  410d4e:	xor    DWORD PTR [edi-0x1942896e],ecx
  410d54:	pop    ss
  410d55:	lea    esi,[esi+0x7280143c]
  410d5b:	mov    edx,0xf29cd8f4
  410d60:	retf   
  410d61:	xchg   ebp,eax
  410d62:	mov    esi,0xbd6035d5
  410d67:	pop    edx
  410d68:	mov    ebx,0x587bdf97
  410d6d:	jns    0x410dc6
  410d6f:	sub    al,0x8f
  410d71:	bound  dx,DWORD PTR [eax]
  410d74:	push   ss
  410d75:	sbb    DWORD PTR [ebx-0x41f235ae],eax
  410d7b:	test   BYTE PTR [ebp+0x27950adb],0xbb
  410d82:	mov    ah,0x45
  410d84:	into   
  410d85:	sbb    DWORD PTR [edi],esi
  410d87:	push   0xf35f6197
  410d8c:	jbe    0x410dcc
  410d8e:	push   ebx
  410d8f:	retf   0xabb
  410d92:	rcl    BYTE PTR [edx-0x1ce72712],0x8b
  410d99:	jbe    0x410d40
  410d9b:	inc    eax
  410d9c:	mov    al,ds:0xeefe5af
  410da1:	pop    esp
  410da2:	jno    0x410d64
  410da4:	push   eax
  410da5:	xor    dh,ah
  410da7:	iret   
  410da8:	js     0x410d4c
  410daa:	jmp    0x410d8f
  410dac:	nop
  410dad:	mov    ds:0x4aac011b,eax
  410db2:	mov    bl,0x5a
  410db4:	sub    eax,0x24f90955
  410db9:	repnz inc eax
  410dbb:	mov    ch,BYTE PTR [ecx+0xee1b03a]
  410dc1:	je     0x410d64
  410dc3:	push   esp
  410dc4:	(bad)  
  410dc5:	aaa    
  410dc6:	or     dh,bl
  410dc8:	(bad)  
  410dc9:	adc    al,0xc6
  410dcb:	enter  0xe523,0xdf
  410dcf:	icebp  
  410dd0:	popf   
  410dd1:	rcr    DWORD PTR [ebx+0x5e],cl
  410dd4:	stos   DWORD PTR es:[edi],eax
  410dd5:	mov    dl,0x7f
  410dd7:	fld    TBYTE PTR [esi+0x3e]
  410dda:	sub    eax,0x2fd98e73
  410ddf:	cld    
  410de0:	sub    DWORD PTR [esi+0xd],ebx
  410de3:	sub    ecx,DWORD PTR [ecx+eax*1-0x2ec4d039]
  410dea:	mov    eax,ds:0x45089d3
  410def:	pop    ebx
  410df0:	leave  
  410df1:	ret    0x8
  410df4:	push   ebp
  410df5:	mov    ebp,esp
  410df7:	sub    esp,0x3c
  410dfa:	mov    DWORD PTR [ebp-0x20],0x3510
  410e01:	mov    DWORD PTR [ebp-0x1c],0x2104
  410e08:	mov    DWORD PTR [ebp-0x18],0x5d15
  410e0f:	mov    DWORD PTR [ebp-0x14],0x30cd
  410e16:	mov    DWORD PTR [ebp-0x10],0x1709
  410e1d:	mov    DWORD PTR [ebp-0xc],0x260b
  410e24:	jmp    0x4110ab
  410e29:	jo     0x410db5
  410e2b:	fldl2e 
  410e2d:	cmp    al,0xb9
  410e2f:	jo     0x410dcd
  410e31:	out    0x46,eax
  410e33:	mov    ah,BYTE PTR [eax+eax*1+0x3be3e505]
  410e3a:	dec    edx
  410e3b:	mov    esi,0xbec289be
  410e40:	mov    esi,0x9469d80d
  410e45:	xchg   BYTE PTR [esp+edi*4-0x62],al
  410e49:	or     BYTE PTR [eax-0x38],cl
  410e4c:	(bad)  
  410e4d:	bound  esi,QWORD PTR [ebx]
  410e4f:	test   esi,ebp
  410e51:	test   dh,bl
  410e53:	dec    esi
  410e54:	scas   al,BYTE PTR es:[edi]
  410e55:	(bad)  
  410e56:	in     eax,dx
  410e57:	hlt    
  410e58:	add    eax,0xf98803f1
  410e5d:	mov    ebx,0x425cd36b
  410e62:	mov    edi,0xb5579925
  410e67:	xchg   BYTE PTR [esi+ebx*4-0x76],dh
  410e6b:	sahf   
  410e6c:	outs   dx,DWORD PTR ds:[esi]
  410e6d:	jle    0x410e08
  410e6f:	push   edi
  410e70:	cmp    BYTE PTR [ebx],bh
  410e72:	retf   
  410e73:	int3   
  410e74:	adc    eax,0x9ffc7c13
  410e79:	fist   DWORD PTR [edi]
  410e7b:	cmc    
  410e7c:	xor    eax,0x2ea5b891
  410e81:	jp     0x410ec8
  410e83:	add    al,0x8f
  410e85:	jecxz  0x410e71
  410e87:	xor    esp,edi
  410e89:	push   edi
  410e8a:	xchg   esp,eax
  410e8b:	pop    ecx
  410e8c:	jmp    0xf20d:0x7ea1d46f
  410e93:	xor    dl,ch
  410e95:	mov    al,0x88
  410e97:	jle    0x410e55
  410e99:	shl    BYTE PTR [eax],cl
  410e9b:	hlt    
  410e9c:	fiadd  WORD PTR [esi-0x78a3a1f0]
  410ea2:	push   ebx
  410ea3:	xlat   BYTE PTR ds:[ebx]
  410ea4:	and    al,0x33
  410ea6:	push   0x8
  410ea8:	or     eax,0x378dd5f7
  410ead:	mov    cl,0x2e
  410eaf:	lea    esi,[eax+esi*1]
  410eb2:	and    al,0x86
  410eb4:	push   ebx
  410eb5:	jge    0x410ee7
  410eb7:	lods   al,BYTE PTR ds:[esi]
  410eb8:	sbb    eax,0xb586c36a
  410ebd:	mov    al,0xe2
  410ebf:	cmp    BYTE PTR [edi-0x275653c5],dl
  410ec5:	sti    
  410ec6:	dec    edx
  410ec7:	test   al,0xa4
  410ec9:	pop    es
  410eca:	and    esp,DWORD PTR [ecx+0x7501c53b]
  410ed0:	mov    ds:0x93068c27,al
  410ed5:	mov    ebp,0xa4593bc5
  410eda:	push   esp
  410edb:	dec    edi
  410edc:	mov    ds:0x4023944b,eax
  410ee1:	sti    
  410ee2:	jmp    0x304c62fc
  410ee7:	pop    ebp
  410ee8:	xor    BYTE PTR [ebx],cl
  410eea:	jae    0x410eb9
  410eec:	loope  0x410eae
  410eee:	mov    ah,0x9a
  410ef0:	arpl   WORD PTR [ebx+0x4fb4ef14],bp
  410ef6:	push   eax
  410ef7:	pop    es
  410ef8:	mul    BYTE PTR [ebp+ebp*1+0x0]
  410efc:	push   edi
  410efd:	or     eax,0x9ff5adb6
  410f02:	scas   al,BYTE PTR es:[edi]
  410f03:	or     esp,DWORD PTR [ecx-0xe]
  410f06:	add    al,BYTE PTR [edx+0x3a9166d]
  410f0c:	or     bh,BYTE PTR [edi-0x65]
  410f0f:	cs push ebx
  410f11:	mov    ds:0x7f72e778,al
  410f16:	mov    dl,0x7f
  410f18:	scas   al,BYTE PTR es:[edi]
  410f19:	addr16 iret 
  410f1b:	fist   WORD PTR [ecx+ebx*8]
  410f1e:	push   ebx
  410f1f:	sub    eax,0x41308bf9
  410f24:	inc    ebp
  410f25:	pop    edx
  410f26:	pop    edx
  410f27:	push   0x6b
  410f29:	pop    ebp
  410f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f2b:	mov    al,ds:0x103f766e
  410f30:	mov    WORD PTR [esp+eiz*4+0x4],fs
  410f34:	sbb    dh,BYTE PTR [esi-0x2f]
  410f37:	sbb    eax,0x9b627448
  410f3c:	frndint 
  410f3e:	push   0x46e71707
  410f43:	(bad)
  410f46:	xlat   BYTE PTR ds:[ebx]
  410f47:	jnp    0x410ee3
  410f49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f4a:	cmc    
  410f4b:	icebp  
  410f4c:	stos   DWORD PTR es:[edi],eax
  410f4d:	shl    ebx,1
  410f4f:	aad    0xa0
  410f51:	(bad)  
  410f52:	int3   
  410f53:	int3   
  410f54:	jns    0x410fb1
  410f56:	or     DWORD PTR [ebp-0x341c48d2],ecx
  410f5c:	(bad)  
  410f5d:	fdivr  st,st(3)
  410f5f:	int3   
  410f60:	mov    cl,0xcc
  410f62:	loope  0x410f7c
  410f64:	push   ds
  410f65:	repz mov al,ds:0x880bf223
  410f6b:	inc    ecx
  410f6c:	scas   al,BYTE PTR es:[edi]
  410f6d:	rol    BYTE PTR [edi],cl
  410f6f:	and    BYTE PTR [ebp+eax*8-0x48],dh
  410f73:	pop    ss
  410f74:	push   edx
  410f75:	xor    al,cl
  410f77:	inc    ecx
  410f78:	aam    0x33
  410f7a:	mov    ebx,0x9587b9c6
  410f7f:	inc    edi
  410f80:	mov    bl,0xee
  410f82:	jnp    0x410f0d
  410f84:	div    BYTE PTR [ecx+0x533e2f67]
  410f8a:	xor    esi,esi
  410f8c:	adc    ah,BYTE PTR [edi]
  410f8e:	cld    
  410f8f:	cmp    bh,BYTE PTR [ebx-0x20]
  410f92:	push   cs
  410f93:	(bad)  
  410f94:	lods   al,BYTE PTR ds:[esi]
  410f95:	mov    WORD PTR [edx],gs
  410f97:	pop    esi
  410f98:	out    0x79,eax
  410f9a:	jl     0x410fe2
  410f9c:	mov    al,0xa3
  410f9e:	inc    DWORD PTR [edi+0x5f]
  410fa1:	mov    ah,bh
  410fa3:	push   esi
  410fa4:	nop
  410fa5:	mov    DWORD PTR [eax],eax
  410fa7:	jg     0x410ffb
  410fa9:	mov    esi,esi
  410fab:	add    DWORD PTR [edx-0x28257adc],edi
  410fb1:	call   0x1467:0xe4227ac6
  410fb8:	or     dl,BYTE PTR [eax+0x3c]
  410fbb:	push   edi
  410fbc:	push   esp
  410fbd:	mov    edx,DWORD PTR [edx+0x2f]
  410fc0:	cdq    
  410fc1:	fstp   st(4)
  410fc3:	inc    ebx
  410fc4:	mov    ds:0xc809d2cf,al
  410fc9:	mov    edx,DWORD PTR [ebp+0x36]
  410fcc:	lods   eax,DWORD PTR ds:[esi]
  410fcd:	test   eax,0xa3a0be12
  410fd2:	inc    ecx
  410fd3:	push   cs
  410fd4:	nop
  410fd5:	cli    
  410fd6:	ins    BYTE PTR es:[edi],dx
  410fd7:	out    dx,al
  410fd8:	jns    0x526964b9
  410fde:	inc    eax
  410fdf:	es fsubp st(7),st
  410fe2:	mov    bh,0x6e
  410fe4:	lds    ebp,FWORD PTR [edx]
  410fe6:	push   cs
  410fe7:	mov    bh,0x23
  410fe9:	lods   al,BYTE PTR ds:[esi]
  410fea:	cdq    
  410feb:	sbb    dh,BYTE PTR [ebp+0x59]
  410fee:	mov    BYTE PTR [edi],bh
  410ff0:	in     al,0x94
  410ff2:	add    eax,0x6e8e43b1
  410ff7:	push   0x560922fc
  410ffc:	mov    eax,0x3eae65b5
  411001:	cmc    
  411002:	out    dx,eax
  411003:	fwait
  411004:	pop    es
  411005:	push   esi
  411006:	push   esi
  411007:	or     al,bl
  411009:	xor    al,0x95
  41100b:	push   es
  41100c:	xor    ah,BYTE PTR [eax-0x46984ae5]
  411012:	inc    eax
  411013:	cmp    eax,0x220e8a20
  411018:	sub    cl,BYTE PTR [esi+0x7c5c80fc]
  41101e:	sbb    al,0x40
  411020:	jnp    0x411055
  411022:	push   ds
  411023:	jns    0x411019
  411025:	sti    
  411026:	aas    
  411027:	sub    BYTE PTR [ecx],dl
  411029:	inc    edi
  41102a:	xor    al,BYTE PTR gs:[esi+eiz*1-0x6b04aa65]
  411032:	fcom   DWORD PTR [ecx+ebx*1+0x58]
  411036:	or     bl,BYTE PTR [esi]
  411038:	and    DWORD PTR [esi],edi
  41103a:	sub    ebx,DWORD PTR [esi]
  41103c:	adc    al,0xe4
  41103e:	int3   
  41103f:	clc    
  411040:	sbb    al,0x56
  411042:	test   al,0x78
  411044:	dec    ecx
  411045:	mov    cl,0x8a
  411047:	jne    0x4110ba
  411049:	retf   0x7bd1
  41104c:	or     bl,BYTE PTR [ebp-0x5d73060a]
  411052:	or     BYTE PTR [ecx],ah
  411054:	rcr    DWORD PTR [edx-0x3f],cl
  411057:	aad    0x93
  411059:	ret    
  41105a:	aad    0x69
  41105c:	out    dx,eax
  41105d:	push   ebp
  41105e:	enter  0x9b0d,0x36
  411062:	aad    0x3a
  411064:	pop    ds
  411065:	or     DWORD PTR [edx+0x6d],0x6557f852
  41106c:	jno    0x41102c
  41106e:	sbb    DWORD PTR [edx+esi*8],esi
  411071:	jmp    0xb258c1e9
  411076:	jmp    0x411037
  411078:	gs mov cl,0xac
  41107b:	retf   
  41107c:	mov    edx,DWORD PTR [edi]
  41107e:	mov    DWORD PTR [ebx],edi
  411080:	aad    0x6b
  411082:	adc    eax,edi
  411084:	mul    BYTE PTR [edx]
  411086:	(bad)  
  411087:	jmp    0x405f:0x8ac13c15
  41108e:	out    dx,al
  41108f:	ins    BYTE PTR es:[edi],dx
  411090:	aam    0x61
  411092:	loopne 0x411015
  411094:	arpl   bx,cx
  411096:	pop    edx
  411097:	sub    eax,0xa746e9f
  41109c:	mov    al,es:0x41395eeb
  4110a2:	test   esi,esi
  4110a4:	or     DWORD PTR [eax-0x207fcb17],0x7d
  4110ab:	mov    DWORD PTR [ebp-0x8],0x3204
  4110b2:	mov    DWORD PTR [ebp-0x4],0x62ea
  4110b9:	mov    DWORD PTR [ebp-0x38],0x58e9
  4110c0:	jmp    0x411347
  4110c5:	pop    edx
  4110c6:	daa    
  4110c7:	fcomp  QWORD PTR [eax-0x44]
  4110ca:	mov    esp,0xf3ba2b5a
  4110cf:	aad    0xe3
  4110d1:	mov    esp,DWORD PTR [edx+eiz*4-0x70]
  4110d5:	or     BYTE PTR [esi-0x42],cl
  4110d8:	mov    esi,0xbebec289
  4110dd:	pop    ds
  4110de:	bound  ebx,QWORD PTR [eax-0x3e]
  4110e1:	or     BYTE PTR [ebx+edi*4-0x2f],bh
  4110e5:	dec    eax
  4110e6:	xor    al,0x39
  4110e8:	out    0xd3,al
  4110ea:	inc    eax
  4110eb:	std    
  4110ec:	aas    
  4110ed:	inc    ebp
  4110ee:	adc    DWORD PTR [ebx+0x72],esp
  4110f1:	inc    esi
  4110f2:	stos   BYTE PTR es:[edi],al
  4110f3:	(bad)  
  4110f4:	jmp    DWORD PTR [edi-0x4d454fcb]
  4110fa:	cmp    ebx,DWORD PTR [ebp-0x94da864]
  411100:	jae    0x411105
  411102:	cdq    
  411103:	repnz push es
  411105:	add    al,0x78
  411107:	xor    DWORD PTR [edi],edx
  411109:	fwait
  41110a:	jle    0xa5414cf1
  411110:	dec    esi
  411111:	inc    edx
  411112:	pop    ebx
  411113:	adc    eax,0x21d1407
  411118:	js     0x4110ef
  41111a:	mov    cl,0xe8
  41111c:	fidivr DWORD PTR [edi]
  41111e:	daa    
  41111f:	sbb    ebx,DWORD PTR [eax]
  411121:	loop   0x4110b9
  411123:	pop    ebx
  411124:	rol    BYTE PTR [edx+0x70],cl
  411127:	cmp    al,0xee
  411129:	inc    edx
  41112a:	cmp    BYTE PTR [ecx+0x17],al
  41112d:	mov    esp,0x74a47f55
  411132:	cld    
  411133:	mov    eax,ds:0x760ca656
  411138:	fmul   QWORD PTR [edi]
  41113a:	pop    esp
  41113b:	inc    eax
  41113c:	pop    ds
  41113d:	enter  0x29f,0xa0
  411141:	jb     0x41115a
  411143:	daa    
  411144:	rcr    DWORD PTR [edi+0x4f],0x11
  411148:	xor    BYTE PTR [esi+0x6a],dh
  41114b:	pop    edx
  41114c:	es inc eax
  41114e:	(bad)  
  41114f:	das    
  411150:	cmp    ecx,DWORD PTR [eax-0x45]
  411153:	xchg   edx,eax
  411154:	les    edx,FWORD PTR ss:[ebp-0x4f]
  411158:	(bad)  
  411159:	int3   
  41115a:	mov    eax,ds:0xff1b6e06
  41115f:	mov    ah,0x56
  411161:	sbb    al,0xb4
  411163:	sbb    DWORD PTR es:[edi],ecx
  411166:	(bad)  
  411167:	shl    DWORD PTR [edx],cl
  411169:	lods   eax,DWORD PTR ds:[esi]
  41116a:	cmp    ecx,DWORD PTR [ebp-0x7c]
  41116d:	in     al,dx
  41116e:	xchg   ecx,eax
  41116f:	imul   eax
  411171:	rol    DWORD PTR [edx*1+0x23fda1bd],0xe1
  411179:	iret   
  41117a:	pop    esp
  41117b:	push   0x4f
  41117d:	hlt    
  41117e:	mov    ds:0x8e7585aa,al
  411183:	imul   eax,ebx,0x17ee5b85
  411189:	add    BYTE PTR [ebp-0x5eba18f9],cl
  41118f:	and    BYTE PTR [esi-0x1],dh
  411192:	fnstenv [esi-0x3c4012e2]
  411198:	cwde   
  411199:	fcom   DWORD PTR [edi*8+0x28dc689c]
  4111a0:	xchg   DWORD PTR [ebp+ecx*4+0x7bf06d1d],esi
  4111a7:	out    0x3f,eax
  4111a9:	inc    esp
  4111aa:	inc    ebp
  4111ab:	push   esi
  4111ac:	scas   eax,DWORD PTR es:[edi]
  4111ad:	mov    bl,0x85
  4111af:	scas   eax,DWORD PTR es:[edi]
  4111b0:	adc    eax,0xc5f6f297
  4111b5:	aam    0xc7
  4111b7:	xor    bl,bh
  4111b9:	xchg   ebp,eax
  4111ba:	out    0x86,eax
  4111bc:	pop    ecx
  4111bd:	ficomp DWORD PTR [esi-0x21]
  4111c0:	nop
  4111c1:	and    BYTE PTR [edi+0x51],al
  4111c4:	cmc    
  4111c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111c6:	sbb    al,0x5d
  4111c8:	fistp  QWORD PTR [esi-0x13]
  4111cb:	sbb    eax,0x4412e732
  4111d0:	rcr    DWORD PTR [edi+0x3acb4480],1
  4111d6:	pop    es
  4111d7:	pop    esp
  4111d8:	shr    DWORD PTR [ecx-0x3ce1ec5],cl
  4111de:	das    
  4111df:	dec    edi
  4111e0:	and    al,0x87
  4111e2:	icebp  
  4111e3:	test   WORD PTR [eax+0x5b],di
  4111e7:	rcl    al,1
  4111e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111ea:	(bad)
  4111ee:	sti    
  4111ef:	into   
  4111f0:	mov    dl,0x0
  4111f2:	dec    ebp
  4111f3:	push   ss
  4111f4:	cmp    eax,0x37b0bb6f
  4111f9:	sub    eax,0x60910882
  4111fe:	es dec ebp
  411200:	inc    edx
  411201:	inc    edi
  411202:	pop    es
  411203:	je     0x41122d
  411205:	cmc    
  411206:	pop    ds
  411207:	pop    edi
  411208:	aad    0xd5
  41120a:	(bad)  
  41120b:	cmp    DWORD PTR [ebx+eax*2-0x6],ecx
  41120f:	fwait
  411210:	xchg   esi,eax
  411211:	cmp    al,0x66
  411213:	ss dec edx
  411215:	pop    DWORD PTR [ebx-0x21]
  411218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411219:	inc    ecx
  41121a:	adc    DWORD PTR [ebx-0x75],ecx
  41121d:	add    BYTE PTR [eax+eax*1+0x2b3c241],0xd8
  411225:	scas   al,BYTE PTR es:[edi]
  411226:	cmp    DWORD PTR [ebp-0x5d389bb6],0xe3ad3ef0
  411230:	ficom  DWORD PTR [edi-0x11]
  411233:	xor    al,0x1
  411235:	mov    edx,0x8575d0b9
  41123a:	sbb    DWORD PTR [edx-0x40],ebp
  41123d:	nop
  41123e:	leave  
  41123f:	add    esp,edi
  411241:	pop    edi
  411242:	mov    bl,0x64
  411244:	out    dx,eax
  411245:	jmp    0xe8d46d94
  41124a:	data16 stc 
  41124c:	cmp    DWORD PTR [edx],0x5e751af0
  411252:	(bad)  
  411253:	int3   
  411254:	xor    eax,0x6a44e27b
  411259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41125a:	inc    ecx
  41125b:	jmp    0x2955b0b4
  411260:	pop    DWORD PTR [esi+edx*1]
  411263:	sbb    DWORD PTR [esi],0xc8f25bce
  411269:	cdq    
  41126a:	and    BYTE PTR [eax+0x67],ah
  41126d:	and    eax,0x653d1cde
  411272:	push   0xffffffb9
  411274:	pop    esi
  411275:	neg    ch
  411277:	xchg   ebx,eax
  411278:	in     eax,dx
  411279:	popf   
  41127a:	lock adc cl,dl
  41127d:	lea    ecx,[ecx-0x77]
  411280:	inc    esp
  411281:	adc    cl,BYTE PTR [esi]
  411283:	sub    BYTE PTR [ebx+0x1afc3cca],dh
  411289:	(bad)  
  41128a:	aaa    
  41128b:	sub    ebx,esi
  41128d:	ins    BYTE PTR es:[edi],dx
  41128e:	pop    edx
  41128f:	pop    ebx
  411290:	cmp    cl,al
  411292:	aad    0xbb
  411294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411295:	out    dx,al
  411296:	add    dh,dh
  411298:	cmp    ecx,eax
  41129a:	jno    0x411235
  41129c:	or     al,0x49
  41129e:	(bad)  
  41129f:	xchg   esp,eax
  4112a0:	mov    edi,0x51e88cfd
  4112a5:	outs   dx,DWORD PTR ds:[esi]
  4112a6:	push   ds
  4112a7:	push   ebx
  4112a8:	sbb    DWORD PTR ds:0x95ffdfcc,esp
  4112ae:	sbb    ebp,DWORD PTR [eax]
  4112b0:	mov    esi,0x4b3ba84b
  4112b5:	rcr    DWORD PTR [ecx-0x35],1
  4112b8:	sbb    ebx,edi
  4112ba:	pusha  
  4112bb:	ret    
  4112bc:	imul   esp,edx,0xffffff80
  4112bf:	mov    ds:0xddae273d,eax
  4112c4:	mov    bh,dh
  4112c6:	sub    eax,DWORD PTR [edi-0x3277f170]
  4112cc:	pop    esi
  4112cd:	xor    DWORD PTR [ebp-0x64c3195d],esi
  4112d3:	cld    
  4112d4:	inc    ebx
  4112d5:	(bad)  
  4112d6:	jge    0x4112e3
  4112d8:	pop    edi
  4112d9:	mov    ecx,DWORD PTR [edi]
  4112db:	cli    
  4112dc:	mov    cl,0x88
  4112de:	enter  0x5cbc,0x4e
  4112e2:	jmp    0x5f36:0x93b34bd
  4112e9:	pop    esp
  4112ea:	not    BYTE PTR [ecx+eiz*1]
  4112ed:	jle    0x41131f
  4112ef:	sbb    dh,ah
  4112f1:	outs   dx,DWORD PTR ds:[esi]
  4112f2:	mov    dl,0x21
  4112f4:	(bad)  
  4112f5:	fcomp  QWORD PTR [ebp-0x76]
  4112f8:	bound  esi,QWORD PTR [ebx+0x6]
  4112fb:	mov    edx,0x8e4b20ee
  411300:	sub    DWORD PTR [esi-0xe],edx
  411303:	dec    edi
  411304:	cmp    BYTE PTR es:[ecx+0x3c],ch
  411308:	or     DWORD PTR [ebx-0x1e067bbc],eax
  41130e:	pop    esp
  41130f:	int    0xc0
  411311:	pop    ds
  411312:	mov    WORD PTR [eax+0x6b],es
  411315:	loope  0x411297
  411317:	sub    eax,DWORD PTR [ebx]
  411319:	mov    esp,0xc3af555a
  41131e:	outs   dx,BYTE PTR ds:[esi]
  41131f:	add    al,0xd6
  411321:	mov    ah,0x39
  411323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411324:	aaa    
  411325:	test   DWORD PTR [edx-0x3],edx
  411328:	pop    ss
  411329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41132a:	mov    ah,0x22
  41132c:	xchg   ebx,eax
  41132d:	call   0xc3b3:0xa35361ea
  411334:	dec    edi
  411335:	test   DWORD PTR ds:0x39c1b835,0x6bfa55e9
  41133f:	pusha  
  411340:	imul   ecx,ebx,0x1db627a7
  411346:	mov    DWORD PTR [di-0x34],0x7f89
  41134e:	mov    DWORD PTR [ebp-0x30],0x7fda
  411355:	mov    DWORD PTR [ebp-0x2c],0x2889
  41135c:	mov    DWORD PTR [ebp-0x28],0xf0f
  411363:	mov    DWORD PTR [ebp-0x24],0x58e1
  41136a:	mov    DWORD PTR [ebp-0x3c],0x69c
  411371:	mov    eax,DWORD PTR [ebp-0x10]
  411374:	mov    ecx,DWORD PTR [ebp-0x14]
  411377:	and    al,0xb9
  411379:	add    al,cl
  41137b:	mov    ecx,DWORD PTR [ebp-0x18]
  41137e:	and    al,cl
  411380:	mov    ecx,DWORD PTR [ebp-0x1c]
  411383:	sub    al,0x11
  411385:	and    al,cl
  411387:	mov    ecx,DWORD PTR [ebp-0x20]
  41138a:	mov    edx,DWORD PTR [ebp+0x8]
  41138d:	imul   ecx,ecx,0x6008
  411393:	add    ecx,0x1759dd6e
  411399:	add    al,0x4d
  41139b:	xor    ecx,0x2b4185ee
  4113a1:	cmp    BYTE PTR [ecx+edx*1],al
  4113a4:	jne    0x41143e
  4113aa:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ad:	mov    eax,0xffffeff8
  4113b2:	mov    edx,eax
  4113b4:	sub    edx,ecx
  4113b6:	add    edx,DWORD PTR [ebp-0x8]
  4113b9:	mov    ecx,DWORD PTR [ebp-0xc]
  4113bc:	or     edx,ecx
  4113be:	mov    ecx,DWORD PTR [ebp-0x4]
  4113c1:	imul   edx,edx,0x85300
  4113c7:	sub    eax,ecx
  4113c9:	add    eax,DWORD PTR [ebp-0x8]
  4113cc:	mov    ecx,DWORD PTR [ebp-0xc]
  4113cf:	or     eax,ecx
  4113d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4113d4:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  4113db:	add    eax,0x40e5
  4113e0:	imul   eax,eax,0x214c
  4113e6:	add    eax,ecx
  4113e8:	mov    ecx,DWORD PTR [ebp+0x8]
  4113eb:	add    ecx,eax
  4113ed:	mov    DWORD PTR [ebp+0x8],ecx
  4113f0:	mov    eax,DWORD PTR [ebp-0x24]
  4113f3:	mov    ecx,DWORD PTR [ebp-0x28]
  4113f6:	and    eax,ecx
  4113f8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4113fb:	and    eax,ecx
  4113fd:	mov    ecx,DWORD PTR [ebp-0x30]
  411400:	imul   eax,ecx
  411403:	mov    ecx,DWORD PTR [ebp-0x34]
  411406:	or     eax,ecx
  411408:	mov    ecx,DWORD PTR [ebp-0x38]
  41140b:	imul   eax,ecx
  41140e:	mov    ecx,DWORD PTR [ebp+0x8]
  411411:	sub    eax,0x777ea653
  411416:	cmp    DWORD PTR [ecx+0x54],eax
  411419:	je     0x411427
  41141f:	mov    eax,DWORD PTR [ebp+0x8]
  411422:	jmp    0x41146e
  411427:	mov    eax,DWORD PTR [ebp-0x3c]
  41142a:	sub    eax,0x5258
  41142f:	xor    eax,0x49e9
  411434:	add    eax,0x253
  411439:	jmp    0x41146e
  41143e:	mov    DWORD PTR [ebp-0x3c],0x4177
  411445:	mov    DWORD PTR [ebp+0x8],0x1405
  41144c:	mov    eax,DWORD PTR [ebp+0x8]
  41144f:	mov    ecx,DWORD PTR [ebp-0x3c]
  411452:	imul   eax,eax,0x58cc
  411458:	add    eax,0x3f39
  41145d:	and    eax,ecx
  41145f:	add    eax,0x3b90
  411464:	or     eax,0x4b1c
  411469:	sub    eax,0x7fdd
  41146e:	leave  
  41146f:	ret    0x4
  411472:	push   ebp
  411473:	mov    ebp,esp
  411475:	and    esp,0xfffffff8
  411478:	sub    esp,0x20
  41147b:	push   ebx
  41147c:	push   esi
  41147d:	lea    eax,[esp+0x10]
  411481:	mov    DWORD PTR [esp+0xc],eax
  411485:	mov    eax,DWORD PTR [esp+0xc]
  411489:	mov    ecx,DWORD PTR [esp+0x10]
  41148d:	mov    edx,DWORD PTR [esp+0x14]
  411491:	sub    DWORD PTR [eax],ecx
  411493:	sbb    DWORD PTR [eax+0x4],edx
  411496:	mov    eax,DWORD PTR [esp+0xc]
  41149a:	or     DWORD PTR [eax],0xcb7db576
  4114a0:	or     DWORD PTR [eax+0x4],0x9c2b8ae8
  4114a7:	lea    eax,[esp+0x18]
  4114ab:	jmp    0x41183a
  4114b0:	test   al,0x7c
  4114b2:	or     BYTE PTR [esp+ebx*1-0x44],ch
  4114b6:	lods   al,BYTE PTR ds:[esi]
  4114b7:	mov    esp,0x92465201
  4114bc:	add    eax,0xd490a407
  4114c1:	push   esp
  4114c2:	mov    esi,0xbec499be
  4114c7:	mov    esi,0xc252d437
  4114cc:	push   edi
  4114cd:	or     eax,0x564c0938
  4114d2:	jmp    0x41152c
  4114d4:	stc    
  4114d5:	mov    bl,0xde
  4114d7:	int3   
  4114d8:	or     cl,BYTE PTR [eax]
  4114da:	call   0xd8ababd1
  4114df:	and    eax,0xe97f6724
  4114e4:	add    DWORD PTR [ebx-0x70e1e578],0xfaa509de
  4114ee:	out    0xbf,eax
  4114f0:	test   BYTE PTR [esi+0x48],0xa4
  4114f4:	xor    cl,BYTE PTR [eax+ecx*1-0x56]
  4114f8:	push   ecx
  4114f9:	mov    cl,0x6e
  4114fb:	rol    BYTE PTR [esi],0x95
  4114fe:	xchg   ecx,eax
  4114ff:	push   esp
  411500:	lds    edx,FWORD PTR gs:[eax+ebx*1]
  411504:	ds jge 0x411510
  411507:	fwait
  411508:	lahf   
  411509:	pusha  
  41150a:	in     al,0x7d
  41150c:	fcomp  DWORD PTR [edx+0x2142ebe3]
  411512:	mov    ds:0x960a92c0,al
  411517:	aad    0x70
  411519:	ret    
  41151a:	mov    dh,0x7a
  41151c:	call   0xdde7:0x985d416
  411523:	xor    ah,bl
  411525:	adc    al,0xb8
  411527:	mov    dl,0xc4
  411529:	pop    es
  41152a:	xor    bh,bl
  41152c:	sbb    bh,BYTE PTR [edi+0x51b2f2ba]
  411532:	pop    esp
  411533:	pop    ds
  411534:	cld    
  411535:	out    dx,al
  411536:	cmp    BYTE PTR [ebx-0x4f064b47],dl
  41153c:	cld    
  41153d:	enter  0xef81,0x25
  411541:	jmp    0xf8bf:0x6a19474c
  411548:	cmp    al,0xce
  41154a:	inc    ecx
  41154b:	dec    edi
  41154c:	imul   esp,DWORD PTR [edx-0x46],0xc32aa6fc
  411553:	and    BYTE PTR [ebp-0x5ec89adf],ah
  411559:	adc    DWORD PTR [eax-0x5152995a],0x28f6702c
  411563:	inc    esp
  411564:	mov    esp,DWORD PTR [ebp+0x3c]
  411567:	inc    esp
  411568:	inc    eax
  411569:	je     0x41156e
  41156b:	adc    edx,ecx
  41156d:	enter  0xbc26,0x81
  411571:	sub    ah,BYTE PTR [esi-0x427e3ec4]
  411577:	js     0x41156a
  411579:	dec    esi
  41157a:	adc    al,0x50
  41157c:	(bad)  
  41157d:	fst    QWORD PTR [ecx]
  41157f:	(bad)  
  411580:	lock test DWORD PTR [ecx],ebx
  411583:	jp     0x41150d
  411585:	push   ebp
  411586:	pop    ebx
  411587:	or     eax,0x737e8d0e
  41158c:	int    0xb
  41158e:	jmp    0xa41d8c45
  411593:	add    DWORD PTR [esi+0x38b6508b],edi
  411599:	shr    BYTE PTR [esi+0x67376946],cl
  41159f:	mov    bl,0xfc
  4115a1:	mov    bl,0xd0
  4115a3:	add    esp,ebp
  4115a5:	not    BYTE PTR [ebx-0x788ce4fa]
  4115ab:	mov    ds:0xf4b6bfb8,al
  4115b0:	lods   al,BYTE PTR ds:[esi]
  4115b1:	mov    dh,BYTE PTR [eax+0x5f469f5a]
  4115b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115b8:	add    dl,al
  4115ba:	(bad)
  4115be:	jg     0x4115ad
  4115c0:	add    dh,BYTE PTR [eax]
  4115c2:	(bad)  
  4115c3:	xor    DWORD PTR [edx],ebp
  4115c5:	xchg   edx,eax
  4115c6:	(bad)  
  4115c7:	jmp    0x411639
  4115c9:	sub    BYTE PTR [ebx],ah
  4115cb:	xlat   BYTE PTR ds:[ebx]
  4115cc:	loop   0x411550
  4115ce:	push   ecx
  4115cf:	(bad)  
  4115d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115d1:	test   DWORD PTR [ebp+0x17],ecx
  4115d4:	xor    DWORD PTR [edi+eax*8+0x36],0xffffffb2
  4115d9:	(bad)  
  4115db:	sbb    ah,BYTE PTR [ebp+0x57e3f9ed]
  4115e1:	add    al,0x82
  4115e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115e4:	jno    0x411579
  4115e6:	xchg   cl,bl
  4115e8:	ret    0x7e94
  4115eb:	test   BYTE PTR [ebx],al
  4115ed:	mov    bh,dl
  4115ef:	xchg   edi,eax
  4115f0:	ja     0x411619
  4115f2:	xchg   esp,eax
  4115f3:	mov    ebp,0x7d49114c
  4115f8:	jmp    0x4115e0
  4115fa:	jecxz  0x411666
  4115fc:	push   esi
  4115fd:	xlat   BYTE PTR ds:[ebx]
  4115fe:	cmp    al,0xc2
  411600:	push   edx
  411601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411602:	es jp  0x411633
  411605:	inc    edx
  411606:	xchg   esi,eax
  411607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411608:	dec    ebp
  411609:	outs   dx,DWORD PTR ds:[esi]
  41160a:	xchg   ebx,eax
  41160b:	loop   0x4115c4
  41160d:	lods   al,BYTE PTR ds:[esi]
  41160e:	dec    BYTE PTR [ecx]
  411610:	or     DWORD PTR [edx+0x669086c],ecx
  411616:	sub    eax,0x5968d92d
  41161b:	out    0x27,eax
  41161d:	lods   al,BYTE PTR cs:[esi]
  41161f:	push   esi
  411620:	sub    eax,0x565f17cb
  411625:	in     eax,0xfa
  411627:	lods   al,BYTE PTR ds:[esi]
  411628:	xchg   edx,ecx
  41162a:	xlat   BYTE PTR ds:[ebx]
  41162b:	mov    ch,0xc9
  41162d:	pop    edi
  41162e:	mov    bl,0x0
  411630:	xchg   edi,eax
  411631:	push   ecx
  411632:	imul   edi,DWORD PTR cs:[ebp-0x61c43171],0x227630f0
  41163d:	in     al,0x58
  41163f:	or     al,0x72
  411641:	pop    ds
  411642:	cmp    esi,DWORD PTR [edx+0x6f49fb4d]
  411648:	push   ebp
  411649:	pop    eax
  41164a:	add    edx,DWORD PTR [esp+eax*2-0x51718963]
  411651:	bound  edx,QWORD PTR [ebp-0x27b8be9d]
  411657:	sti    
  411658:	mov    bh,0x61
  41165a:	mov    ecx,0x90c6ec1b
  41165f:	(bad)  
  411660:	mov    ebp,0x2215d7ec
  411665:	cmp    eax,0x63b157f0
  41166a:	nop
  41166b:	add    al,0xcb
  41166d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41166e:	push   ebx
  41166f:	jp     0x4115f5
  411671:	aad    0x86
  411673:	stc    
  411674:	push   eax
  411675:	sub    esp,DWORD PTR [ebp+edi*8-0x4ee7720a]
  41167c:	push   0x6a
  41167e:	inc    ebp
  41167f:	sub    al,0x3f
  411681:	mov    esp,0x5eba4bcf
  411686:	cmp    al,0xaa
  411688:	mov    ecx,0x43229e5f
  41168d:	jne    0x4116cc
  41168f:	in     eax,0x5f
  411691:	(bad)  
  411692:	push   esp
  411693:	jge    0x4116ef
  411695:	push   es
  411696:	out    dx,al
  411697:	add    edi,esp
  411699:	sahf   
  41169a:	out    dx,eax
  41169b:	sub    BYTE PTR [edx+edx*4-0x5ec5c776],ah
  4116a2:	cdq    
  4116a3:	or     ebp,DWORD PTR [esi-0x6558215]
  4116a9:	mov    bh,BYTE PTR [esi+ebx*4]
  4116ac:	fcmovbe st,st(7)
  4116ae:	mov    eax,ds:0xbc058874
  4116b3:	xlat   BYTE PTR ds:[ebx]
  4116b4:	push   esi
  4116b5:	mov    edx,DWORD PTR [edx]
  4116b7:	xor    ebp,DWORD PTR [esp+eiz*2-0x40a4de55]
  4116be:	and    bl,BYTE PTR [esi]
  4116c0:	pop    ecx
  4116c1:	pop    ebx
  4116c2:	cmc    
  4116c3:	cli    
  4116c4:	out    dx,eax
  4116c5:	mov    edx,0x93997148
  4116ca:	cmp    ebx,DWORD PTR [ebx+eiz*1+0x56]
  4116ce:	jmp    0x4116a8
  4116d0:	pop    ebp
  4116d1:	or     eax,0xc9b08a81
  4116d6:	loope  0x411705
  4116d8:	mov    ecx,0xa939780a
  4116dd:	jmp    0x4116e4
  4116df:	inc    esp
  4116e0:	sub    eax,0xd32809fb
  4116e5:	aam    0xdf
  4116e7:	loopne 0x411756
  4116e9:	rol    DWORD PTR [ebx],cl
  4116eb:	jle    0x411730
  4116ed:	out    dx,al
  4116ee:	and    eax,0x7bf0d23c
  4116f3:	fist   WORD PTR [ebp+edi*1+0x6e]
  4116f7:	sar    BYTE PTR [esi],cl
  4116f9:	lea    esp,[edi]
  4116fb:	jp     0x41174c
  4116fd:	enter  0x3d2c,0x1c
  411701:	inc    eax
  411702:	pusha  
  411703:	add    BYTE PTR [ecx-0x18cdca47],al
  411709:	or     ah,BYTE PTR [ebx]
  41170b:	sbb    BYTE PTR [esi+ebp*2-0x17],cl
  41170f:	int3   
  411710:	icebp  
  411711:	dec    esp
  411712:	xchg   edx,eax
  411713:	mov    ds,esi
  411715:	cmp    eax,0x8915b91
  41171a:	lods   al,BYTE PTR ds:[esi]
  41171b:	push   ebx
  41171c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41171d:	dec    ecx
  41171e:	sbb    eax,0x5b1f45
  411723:	inc    edi
  411724:	pop    es
  411725:	pop    esi
  411726:	jg     0x411737
  411728:	or     al,0xe7
  41172a:	dec    esp
  41172b:	in     al,0x4c
  41172d:	jmp    0xaff1:0xcb7fcce4
  411734:	scas   eax,DWORD PTR es:[edi]
  411735:	outs   dx,BYTE PTR ds:[esi]
  411736:	hlt    
  411737:	cmp    eax,0x9893e334
  41173c:	pop    ebx
  41173d:	les    ebp,FWORD PTR [edx-0xd]
  411740:	inc    ebp
  411741:	push   ebx
  411742:	inc    ebx
  411743:	ror    edi,0x75
  411746:	lods   eax,DWORD PTR ds:[esi]
  411747:	xor    BYTE PTR [ebx-0x4a],al
  41174a:	pushf  
  41174b:	mov    WORD PTR [esi+edi*2],cs
  41174e:	jecxz  0x41170d
  411750:	add    edx,DWORD PTR [esi+0x55]
  411753:	and    BYTE PTR [eax],0x21
  411756:	out    0x28,eax
  411758:	arpl   WORD PTR [edx],bp
  41175a:	sahf   
  41175b:	sbb    al,BYTE PTR [eax+0x4aa1b804]
  411761:	rcr    eax,0x61
  411764:	adc    esp,ebp
  411766:	stos   DWORD PTR es:[edi],eax
  411767:	imul   ecx,DWORD PTR [ebp-0x34b94131],0x7e
  41176e:	lods   eax,DWORD PTR ds:[esi]
  41176f:	hlt    
  411770:	mov    eax,ds:0x77df45b2
  411775:	pminsw mm6,mm6
  411778:	jp     0x41176d
  41177a:	or     esp,DWORD PTR ds:0xa309e660
  411780:	aad    0x47
  411782:	fiadd  DWORD PTR [ecx+0x16]
  411785:	and    esp,ecx
  411787:	inc    ecx
  411788:	add    BYTE PTR [ecx],ah
  41178a:	es jae 0x4117bc
  41178d:	popf   
  41178e:	mov    bl,0x99
  411790:	ins    BYTE PTR es:[edi],dx
  411791:	cdq    
  411792:	mov    ds:0x35a46b29,al
  411797:	fsub   QWORD PTR [edx-0x28]
  41179a:	pop    ds
  41179b:	data16 sub al,0x9e
  41179e:	add    ebp,DWORD PTR [ecx+0x2792866]
  4117a4:	call   0xfa17:0x38341f4b
  4117ab:	shr    DWORD PTR [edx+0x3f],cl
  4117ae:	and    eax,0xda5b1c9b
  4117b3:	or     al,0x71
  4117b5:	push   ecx
  4117b6:	xchg   esi,eax
  4117b7:	test   DWORD PTR ds:0xa9b85c35,eax
  4117bd:	dec    ecx
  4117be:	push   edx
  4117bf:	adc    al,al
  4117c1:	lds    eax,FWORD PTR fs:[eax-0x7d]
  4117c5:	mov    esi,0xc91656f5
  4117ca:	fst    QWORD PTR [esi]
  4117cc:	repnz fsubr QWORD PTR [esi]
  4117cf:	pop    es
  4117d0:	(bad)  
  4117d1:	mov    dl,0xb
  4117d3:	pop    ebx
  4117d4:	fs es icebp 
  4117d7:	or     esi,DWORD PTR [esi]
  4117d9:	lods   al,BYTE PTR ds:[esi]
  4117da:	enter  0x650d,0xf6
  4117de:	dec    ebx
  4117df:	rcr    BYTE PTR [esi],cl
  4117e1:	sbb    BYTE PTR ds:0xa1607902,ch
  4117e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117e8:	daa    
  4117e9:	pusha  
  4117ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117eb:	add    esp,ebx
  4117ed:	jae    0x411845
  4117ef:	mov    WORD PTR [edi+0x2a],?
  4117f2:	lods   al,BYTE PTR ds:[esi]
  4117f3:	push   ds
  4117f4:	mov    ebx,0xa9085f88
  4117f9:	or     DWORD PTR [ebx-0x7741d192],esi
  4117ff:	jg     0x41178e
  411801:	pop    ds
  411802:	dec    ebp
  411803:	and    DWORD PTR [ecx],ebp
  411805:	mov    ss,ebx
  411807:	xchg   edi,eax
  411808:	outs   dx,BYTE PTR ds:[esi]
  411809:	ins    BYTE PTR es:[edi],dx
  41180a:	mov    cl,0x24
  41180c:	shl    DWORD PTR [esi],0x5a
  41180f:	pop    ecx
  411810:	ja     0x411833
  411812:	dec    edi
  411813:	and    al,0x86
  411815:	mov    dl,0x3d
  411817:	inc    DWORD PTR [edi+0x43c10c98]
  41181d:	sbb    bl,BYTE PTR [eax+edi*1-0x23]
  411821:	and    BYTE PTR [eax],bl
  411823:	dec    esp
  411824:	mov    ch,BYTE PTR [ebx-0x29aa421]
  41182a:	cld    
  41182b:	lahf   
  41182c:	sbb    al,0x53
  41182e:	dec    edi
  41182f:	out    dx,al
  411830:	xor    BYTE PTR [esi+0x3ef24527],bl
  411836:	rcl    DWORD PTR [edx+0x77],cl
  411839:	push   esp
  41183a:	push   eax
  41183b:	jmp    0x411bca
  411840:	xlat   BYTE PTR ds:[ebx]
  411841:	xchg   ebx,eax
  411842:	push   edx
  411843:	call   FWORD PTR [edx-0x30636400]
  411849:	fist   WORD PTR [eax+0x46728790]
  41184f:	xchg   edx,eax
  411850:	scas   eax,DWORD PTR es:[edi]
  411851:	pop    edx
  411852:	mov    esi,0xbec499be
  411857:	mov    esi,0xdae8aa2f
  41185c:	idiv   DWORD PTR [ebx-0x638f638c]
  411862:	cwde   
  411863:	ds nop
  411865:	in     eax,0x6f
  411867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411868:	jge    0x411856
  41186a:	jno    0x4118c5
  41186c:	sub    eax,0x9c64fa9e
  411871:	loop   0x4118ee
  411873:	bound  esi,QWORD PTR [eax+0xcadb01a]
  411879:	loop   0x4117fe
  41187b:	retf   0xb4c7
  41187e:	mov    esi,DWORD PTR [ebp+ecx*1+0x5a38f8b9]
  411885:	and    al,0x7f
  411887:	mov    ch,BYTE PTR [eax]
  411889:	test   eax,0xa2b1c6e0
  41188e:	push   ds
  41188f:	pop    edx
  411890:	int3   
  411891:	call   0xbd3b:0xba7ad3ae
  411898:	xor    edx,DWORD PTR [edi+0x43]
  41189b:	fadd   QWORD PTR [ecx-0x6237286c]
  4118a1:	add    bl,0xfa
  4118a4:	and    al,0x3
  4118a6:	scas   eax,DWORD PTR es:[edi]
  4118a7:	xor    al,0x14
  4118a9:	push   es
  4118aa:	mov    esi,0xcad1c3f1
  4118af:	and    eax,0xd2eb767
  4118b4:	jnp    0x41186d
  4118b6:	enter  0xe2f7,0xf9
  4118ba:	mov    ch,0xbe
  4118bc:	mov    edx,edi
  4118be:	and    ebx,ecx
  4118c0:	dec    esp
  4118c1:	pop    ecx
  4118c2:	adc    DWORD PTR [ebx],ebx
  4118c4:	dec    edx
  4118c5:	(bad)  
  4118c6:	pop    edx
  4118c7:	adc    al,0x5d
  4118ca:	pop    esp
  4118cb:	stos   DWORD PTR es:[edi],eax
  4118cc:	pop    esp
  4118cd:	test   BYTE PTR [edx-0x3901594c],al
  4118d3:	sub    BYTE PTR [ecx-0x6],dh
  4118d6:	into   
  4118d7:	jne    0x4118f1
  4118d9:	leave  
  4118da:	in     al,dx
  4118db:	push   edx
  4118dc:	out    0xce,eax
  4118de:	test   eax,0x39a29c01
  4118e3:	aam    0x36
  4118e5:	jnp    0x4118df
  4118e7:	jne    0x4118d7
  4118e9:	cld    
  4118ea:	inc    edi
  4118eb:	es pop es
  4118ed:	mov    bl,0x79
  4118ef:	mov    dh,0x52
  4118f1:	shl    edx,cl
  4118f3:	int3   
  4118f4:	xor    BYTE PTR [esi+edx*2-0x67],dl
  4118f8:	jns    0x41193a
  4118fa:	addr16 pop ss
  4118fc:	mov    ch,0xa2
  4118fe:	int3   
  4118ff:	int3   
  411900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411901:	xchg   ebp,eax
  411902:	push   ecx
  411903:	fisubr DWORD PTR [edx+esi*4+0x52]
  411907:	outs   dx,BYTE PTR ds:[esi]
  411908:	cmc    
  411909:	dec    ecx
  41190a:	lahf   
  41190b:	outs   dx,DWORD PTR ds:[esi]
  41190c:	call   0xebba:0xcd58c44d
  411913:	or     al,0xae
  411915:	jp     0x411933
  411917:	les    edx,FWORD PTR [edx+0x79]
  41191a:	dec    ecx
  41191b:	xchg   DWORD PTR [ebx+esi*8-0x7f8431ef],edx
  411922:	pop    esp
  411923:	cli    
  411924:	sbb    DWORD PTR [ebx-0x45],eax
  411927:	sbb    ecx,ebx
  411929:	mov    esi,0x70a6cb1
  41192e:	mov    edx,0x50d98dd3
  411933:	ss in  eax,dx
  411935:	clc    
  411936:	(bad)  
  411937:	pop    edx
  411938:	out    dx,eax
  411939:	repz xor DWORD PTR [esi+0x76964aa1],edx
  411940:	inc    edx
  411941:	mov    dh,dh
  411943:	loop   0x4119a4
  411945:	mov    edi,0x65c680b0
  41194a:	cmc    
  41194b:	mov    es,WORD PTR [esi]
  41194d:	push   esi
  41194e:	cmp    eax,0xf8b7ed6
  411953:	inc    esp
  411954:	ins    DWORD PTR es:[edi],dx
  411955:	scas   al,BYTE PTR es:[edi]
  411956:	cli    
  411957:	gs (bad) 
  411959:	pop    ecx
  41195a:	loop   0x411913
  41195c:	mov    esp,0x18291b0c
  411961:	dec    edx
  411962:	xor    edi,eax
  411964:	jmp    0x41195a
  411966:	push   edi
  411967:	cmp    dh,BYTE PTR [edx+0x6e7aebf4]
  41196d:	stc    
  41196e:	jl     0x411902
  411970:	shl    ecx,1
  411972:	dec    ebx
  411973:	pop    ss
  411974:	jge    0x411961
  411976:	mov    eax,0xb1e7220
  41197b:	inc    ebp
  41197c:	icebp  
  41197d:	aad    0xdc
  41197f:	sub    DWORD PTR [ecx+0xbeb1182],eax
  411985:	out    0x7b,al
  411987:	les    ecx,FWORD PTR [eax+0x7c05f075]
  41198d:	div    BYTE PTR [esi+0x67]
  411990:	push   ebx
  411991:	sar    BYTE PTR [ebp-0x43],0x2e
  411995:	xchg   edx,eax
  411996:	xlat   BYTE PTR ds:[ebx]
  411997:	mov    DWORD PTR [ebx+0xef29583],ebp
  41199d:	scas   al,BYTE PTR es:[edi]
  41199e:	shr    BYTE PTR [edx],0x6e
  4119a1:	jno    0x411a19
  4119a3:	add    BYTE PTR ds:[ebp+ecx*4-0x7053c4da],bl
  4119ab:	pop    ss
  4119ac:	xchg   edi,eax
  4119ad:	sub    edx,DWORD PTR [edx+0x73eaedc4]
  4119b3:	sbb    eax,0xa5c6f873
  4119b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119b9:	scas   al,BYTE PTR es:[edi]
  4119ba:	push   ds
  4119bb:	(bad)  
  4119bc:	setnp  BYTE PTR [edi]
  4119bf:	popf   
  4119c0:	jns    0x411989
  4119c2:	mov    al,0x23
  4119c4:	in     eax,dx
  4119c5:	shl    DWORD PTR [edx-0x311b4cbe],cl
  4119cb:	bound  ebx,QWORD PTR fs:[edx+0x2]
  4119cf:	lea    edx,[ecx+esi*1]
  4119d2:	fwait
  4119d3:	jle    0x4119e1
  4119d5:	jmp    0x59b9:0x848d4b62
  4119dc:	test   bh,ah
  4119de:	mov    eax,0x7aefe139
  4119e3:	sbb    eax,0x15b0464e
  4119e8:	dec    eax
  4119e9:	pusha  
  4119ea:	and    DWORD PTR [ecx],esp
  4119ec:	and    al,0xf8
  4119ee:	xchg   DWORD PTR [ebx-0x7b],ebp
  4119f1:	lds    ebp,FWORD PTR ds:0xc8088343
  4119f7:	inc    edi
  4119f8:	mov    bl,0x62
  4119fa:	cmp    dh,bh
  4119fc:	sbb    BYTE PTR [eax+ecx*4+0x3bbdd967],al
  411a03:	nop
  411a04:	pop    ebx
  411a05:	inc    esi
  411a06:	rol    BYTE PTR [edi],0xd0
  411a09:	mov    ds:0xbf461de4,eax
  411a0e:	ret    0x7ce2
  411a11:	addr16 int3 
  411a13:	dec    ebx
  411a14:	repnz shr BYTE PTR [edi+0x40b145de],cl
  411a1b:	dec    ebx
  411a1c:	mov    esp,0x74089056
  411a21:	and    bl,BYTE PTR [eax+0xa]
  411a24:	out    dx,al
  411a25:	sub    al,0xca
  411a27:	int3   
  411a28:	stos   DWORD PTR es:[edi],eax
  411a29:	sub    edx,ebx
  411a2b:	scas   al,BYTE PTR es:[edi]
  411a2c:	pushf  
  411a2d:	ret    0xc7d6
  411a30:	std    
  411a31:	xor    BYTE PTR [ebx+0x3b1a2b5d],al
  411a37:	and    ch,BYTE PTR [esi-0x34]
  411a3a:	neg    DWORD PTR [edi+0x65]
  411a3d:	or     esi,edx
  411a3f:	jg     0x411aba
  411a41:	fidiv  WORD PTR [ebx]
  411a43:	jg     0x411a3a
  411a45:	sbb    DWORD PTR [esi+0x4ee082fb],edi
  411a4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a4c:	xchg   esi,eax
  411a4d:	(bad)  
  411a4e:	fsubr  DWORD PTR ds:0x35f1ed48
  411a54:	int3   
  411a55:	lds    esp,FWORD PTR [ebx+0xc0b36cd]
  411a5b:	into   
  411a5c:	xchg   esp,eax
  411a5d:	out    dx,al
  411a5e:	jns    0x4119f9
  411a60:	push   ebx
  411a61:	adc    DWORD PTR [ebx+esi*2],ebx
  411a64:	jp     0x411a9b
  411a66:	mov    edi,0xed8250ea
  411a6b:	or     eax,0xcc3572cf
  411a70:	xchg   edi,eax
  411a71:	sub    bl,BYTE PTR [esi]
  411a73:	xchg   ebp,eax
  411a74:	xor    eax,0xf6a0cf75
  411a79:	lds    ecx,FWORD PTR [esi+0x37]
  411a7c:	gs pop ebx
  411a7e:	arpl   WORD PTR [ecx-0x584dbbe3],si
  411a84:	and    eax,0x9da10398
  411a89:	pop    edx
  411a8a:	inc    esi
  411a8b:	mov    edi,DWORD PTR [edx]
  411a8d:	sbb    eax,0x90427bd8
  411a92:	rol    BYTE PTR [ecx],0x17
  411a95:	imul   edi,DWORD PTR [ebx],0xffffffbb
  411a98:	into   
  411a99:	push   0x60cfbf1e
  411a9e:	call   0x369b:0x752c0524
  411aa5:	out    0x2c,eax
  411aa7:	iret   
  411aa8:	ins    DWORD PTR es:[edi],dx
  411aa9:	and    ebx,DWORD PTR [edi-0x27]
  411aac:	sbb    BYTE PTR [esi+0x6bd031b5],ah
  411ab2:	xchg   edi,eax
  411ab3:	repz inc edx
  411ab5:	into   
  411ab6:	imul   esi,DWORD PTR [eax-0x1],0x37b241e2
  411abd:	and    al,0x5b
  411abf:	ret    
  411ac0:	pop    edx
  411ac1:	mov    ss,ebx
  411ac3:	jl     0x411a82
  411ac5:	or     eax,0x526d235
  411aca:	xchg   esp,eax
  411acb:	xchg   BYTE PTR [edi-0x6c],bl
  411ace:	sub    bl,ch
  411ad0:	xor    ebp,esi
  411ad2:	test   DWORD PTR [ebp+0x58],eax
  411ad5:	cmc    
  411ad6:	scas   eax,DWORD PTR es:[edi]
  411ad7:	sbb    al,0x1a
  411ad9:	hlt    
  411ada:	lods   al,BYTE PTR ds:[esi]
  411adb:	or     eax,0x77949826
  411ae0:	jne    0x411b0e
  411ae2:	xchg   esp,eax
  411ae3:	sbb    eax,0x3631f690
  411ae8:	mov    BYTE PTR [edx-0x32],dh
  411aeb:	mul    ah
  411aed:	stos   DWORD PTR es:[edi],eax
  411aee:	cmp    ebp,DWORD PTR [ebp+0x1f]
  411af1:	cmc    
  411af2:	dec    esp
  411af3:	lods   eax,DWORD PTR ds:[esi]
  411af4:	push   ss
  411af5:	aam    0xd7
  411af7:	xor    BYTE PTR [eax-0x56],bh
  411afa:	das    
  411afb:	mov    dl,0xe3
  411afd:	inc    ecx
  411afe:	mov    cl,0xf2
  411b00:	ss dec ebx
  411b02:	not    DWORD PTR [esi+0x3a433888]
  411b08:	das    
  411b09:	test   dh,0xa2
  411b0c:	push   edx
  411b0d:	out    0xb7,eax
  411b0f:	(bad)  
  411b10:	std    
  411b11:	jnp    0x411b55
  411b13:	jbe    0x411b2e
  411b15:	mov    DWORD PTR [esi],eax
  411b17:	add    al,0x4a
  411b19:	sbb    BYTE PTR [edi-0x41],dl
  411b1c:	(bad)  
  411b1d:	xor    al,0xf8
  411b1f:	enter  0xf0d8,0xde
  411b23:	jge    0x411b2e
  411b25:	hlt    
  411b26:	pop    esi
  411b27:	call   0xec59057a
  411b2c:	lods   eax,DWORD PTR ds:[esi]
  411b2d:	and    esp,esp
  411b2f:	dec    ebx
  411b30:	scas   al,BYTE PTR es:[edi]
  411b31:	lods   al,BYTE PTR ds:[esi]
  411b32:	daa    
  411b33:	xchg   ebx,eax
  411b34:	jnp    0x411baf
  411b36:	stos   DWORD PTR es:[edi],eax
  411b37:	fisubr DWORD PTR [esi+0x7c]
  411b3a:	sbb    bl,bh
  411b3c:	add    DWORD PTR [ebx],0xffffff99
  411b3f:	icebp  
  411b40:	int    0x4d
  411b42:	fld    DWORD PTR [edi]
  411b44:	inc    ebx
  411b45:	xor    DWORD PTR fs:[edi-0x2c023d6d],esp
  411b4c:	pop    ebp
  411b4d:	and    DWORD PTR [edi-0x73f6ede],eax
  411b53:	mov    esp,0x9a5c946f
  411b58:	xlat   BYTE PTR ds:[ebx]
  411b59:	outs   dx,BYTE PTR ds:[esi]
  411b5a:	adc    DWORD PTR [ebp-0x2f],eax
  411b5d:	scas   al,BYTE PTR es:[edi]
  411b5e:	or     esi,esp
  411b60:	inc    edi
  411b61:	mov    al,0x97
  411b63:	and    BYTE PTR [edi+0x3f],bl
  411b66:	dec    edx
  411b67:	add    eax,0xde1d31e1
  411b6c:	out    dx,al
  411b6d:	push   0x5a
  411b6f:	adc    esi,DWORD PTR [ecx+eax*2+0x7aae42c8]
  411b76:	xchg   edi,eax
  411b77:	xor    eax,0xcabdfe4
  411b7c:	fst    QWORD PTR [esi]
  411b7e:	cwde   
  411b7f:	addr16 mov ecx,0x42e04a61
  411b85:	sbb    ecx,DWORD PTR [ebx+0x16042a91]
  411b8b:	jg     0x411bf8
  411b8d:	ins    DWORD PTR es:[edi],dx
  411b8e:	inc    esi
  411b8f:	pushf  
  411b90:	dec    ebp
  411b91:	test   ecx,edi
  411b93:	shr    DWORD PTR [ebx+0x2af31c9d],cl
  411b99:	jb     0x411ba9
  411b9b:	adc    BYTE PTR [ebx-0x27c30ef],ah
  411ba1:	fsub   DWORD PTR [ebp-0x54]
  411ba4:	vpsubusb ymm6,ymm3,ymm6
  411ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ba9:	mov    ebp,0x8343ce72
  411bae:	push   esi
  411baf:	fidiv  DWORD PTR [edx]
  411bb1:	mov    WORD PTR [esi],?
  411bb3:	xor    BYTE PTR [ebp+ecx*4-0x25],bh
  411bb7:	cmp    ah,bl
  411bb9:	sub    cl,ch
  411bbb:	sbb    cl,0x41
  411bbe:	mov    esp,0xbbd7016f
  411bc3:	jmp    0x479781a4
  411bc8:	adc    DWORD PTR [ebp+ecx*4+0x44],esp
  411bcc:	and    al,0x24
  411bce:	push   eax
  411bcf:	call   0x40f1e1
  411bd4:	mov    eax,DWORD PTR [esp+0x18]
  411bd8:	mov    ecx,DWORD PTR [esp+0x1c]
  411bdc:	push   DWORD PTR [ebp+0x18]
  411bdf:	mov    ebx,DWORD PTR [ebp+0xc]
  411be2:	push   DWORD PTR [ebp+0x14]
  411be5:	mov    esi,DWORD PTR [ebp+0x8]
  411be8:	push   DWORD PTR [ebp+0x10]
  411beb:	push   DWORD PTR [esp+0x20]
  411bef:	push   DWORD PTR [esp+0x20]
  411bf3:	push   DWORD PTR [esp+0x38]
  411bf7:	push   DWORD PTR [esp+0x38]
  411bfb:	call   0x401000
  411c00:	pop    esi
  411c01:	pop    ebx
  411c02:	mov    esp,ebp
  411c04:	pop    ebp
  411c05:	ret    0x14
  411c08:	push   ebp
  411c09:	mov    ebp,esp
  411c0b:	sub    esp,0x30
  411c0e:	mov    DWORD PTR [ebp-0x24],0x7c16
  411c15:	mov    DWORD PTR [ebp-0x20],0x53bd
  411c1c:	mov    DWORD PTR [ebp-0x18],0x3bd5
  411c23:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  411c2a:	mov    DWORD PTR [ebp-0xc],0x4b9d
  411c31:	mov    DWORD PTR [ebp-0x8],0x7e48
  411c38:	mov    DWORD PTR [ebp-0x4],0x604b
  411c3f:	mov    DWORD PTR [ebp-0x30],0x5b69
  411c46:	mov    DWORD PTR [ebp-0x2c],0x4521
  411c4d:	mov    DWORD PTR [ebp-0x28],0x2979
  411c54:	mov    DWORD PTR [ebp-0x14],0x9e8
  411c5b:	mov    DWORD PTR [ebp-0x10],0x40e5
  411c62:	mov    ecx,DWORD PTR [ebp-0x4]
  411c65:	mov    eax,DWORD PTR [ebp-0x8]
  411c68:	add    ecx,0x1d04
  411c6e:	xor    ecx,eax
  411c70:	mov    eax,DWORD PTR [ebp-0xc]
  411c73:	and    ecx,0x6f79
  411c79:	imul   ecx,eax
  411c7c:	xor    ecx,0xe33ab1
  411c82:	push   esi
  411c83:	mov    DWORD PTR [ebp-0x4],0x5989
  411c8a:	mov    DWORD PTR [ebp-0x8],0x402c1
  411c91:	mov    DWORD PTR [ebp-0xc],0x4114
  411c98:	mov    eax,DWORD PTR [ebp-0xc]
  411c9b:	mov    esi,DWORD PTR [ebp-0x8]
  411c9e:	xor    edx,edx
  411ca0:	sub    eax,0x6cb6
  411ca5:	div    esi
  411ca7:	mov    edx,DWORD PTR [ebp-0x4]
  411caa:	mov    esi,DWORD PTR [ebp+0xc]
  411cad:	or     eax,edx
  411caf:	xor    eax,0x67f1
  411cb4:	mov    edx,ecx
  411cb6:	sub    edx,eax
  411cb8:	mov    DWORD PTR [ebp-0x4],edx
  411cbb:	mov    eax,DWORD PTR [ebp-0x4]
  411cbe:	mov    edx,DWORD PTR [ebp-0x4]
  411cc1:	mov    dl,BYTE PTR [edx+esi*1]
  411cc4:	mov    esi,DWORD PTR [ebp+0x8]
  411cc7:	mov    BYTE PTR [eax+esi*1],dl
  411cca:	mov    eax,DWORD PTR [ebp-0x10]
  411ccd:	mov    edx,DWORD PTR [ebp-0x14]
  411cd0:	jmp    0x411fd9
  411cd5:	xchg   esi,eax
  411cd6:	mov    dh,0x33
  411cd8:	push   edx
  411cd9:	xor    ebx,DWORD PTR [eax+edi*4-0x46]
  411cdd:	push   eax
  411cde:	ret    0x923c
  411ce1:	push   ebx
  411ce2:	in     eax,0xee
  411ce4:	iret   
  411ce5:	mov    WORD PTR [eax-0x42],fs
  411ce8:	mov    esi,0xbebec28e
  411ced:	mov    ebp,0xa0c3855a
  411cf2:	push   0x3f3ba8ac
  411cf7:	or     DWORD PTR [ebp+0x74],ecx
  411cfa:	cmp    al,0xe9
  411cfc:	mov    esi,0xe245c0f2
  411d01:	fwait
  411d02:	shr    ch,cl
  411d04:	cli    
  411d05:	push   edx
  411d06:	fs (bad) 
  411d08:	out    dx,eax
  411d09:	lea    ecx,[edx+0x7c4abeca]
  411d0f:	sbb    DWORD PTR [esi],esp
  411d11:	les    esp,FWORD PTR [edx+0x37]
  411d14:	dec    esp
  411d15:	dec    ecx
  411d16:	adc    ebx,DWORD PTR [ebp+0x213f123f]
  411d1c:	addr16 cmc 
  411d1e:	jno    0x411cbf
  411d20:	or     al,0xb
  411d22:	adc    al,0xbc
  411d24:	and    BYTE PTR [edi+0x4aa0c79f],bh
  411d2a:	sbb    DWORD PTR [ebp+0x3e],edx
  411d2d:	pop    ecx
  411d2e:	test   al,0x56
  411d30:	jecxz  0x411d23
  411d32:	pop    esp
  411d33:	inc    edx
  411d34:	and    DWORD PTR [esi+0x27],edi
  411d37:	xor    eax,eax
  411d39:	out    dx,eax
  411d3a:	xlat   BYTE PTR ds:[ebx]
  411d3b:	mov    bl,0x5a
  411d3d:	fcomp  QWORD PTR [esi-0x72671c8]
  411d43:	dec    esp
  411d44:	pop    ebx
  411d45:	adc    ah,BYTE PTR [ebx+0x5a]
  411d48:	mov    esi,esi
  411d4a:	lds    esi,FWORD PTR [edi+eax*8+0x52]
  411d4e:	cmp    esi,DWORD PTR [ecx+edi*8+0x5c]
  411d52:	add    DWORD PTR [edx-0x36],edi
  411d55:	mov    al,ds:0xab1fa10a
  411d5a:	fcomp  QWORD PTR [edx]
  411d5c:	stc    
  411d5d:	and    ah,cl
  411d5f:	xchg   DWORD PTR [edi],esi
  411d61:	ret    
  411d62:	es dec edi
  411d64:	outs   dx,BYTE PTR ds:[esi]
  411d65:	imul   BYTE PTR [ebx+0x874dcb4]
  411d6b:	mov    ch,0x3b
  411d6d:	fdiv   DWORD PTR [edi+0x765bdc7]
  411d73:	mov    cl,0x22
  411d75:	mov    ebp,0x1db4dcf5
  411d7a:	pop    esp
  411d7b:	dec    eax
  411d7c:	mov    eax,0x64178e67
  411d81:	mov    edi,0x984dbc24
  411d86:	pop    ecx
  411d87:	mov    al,ds:0x42a15f28
  411d8c:	icebp  
  411d8d:	inc    ecx
  411d8e:	adc    dl,BYTE PTR [ebx+0x2ec2cd3b]
  411d94:	cmc    
  411d95:	add    DWORD PTR [ebx],edi
  411d97:	popa   
  411d98:	shl    DWORD PTR [eax],0xc0
  411d9b:	xchg   ecx,eax
  411d9c:	xor    eax,0x45ab13d
  411da1:	mov    esi,fs
  411da3:	inc    ebx
  411da4:	pop    ecx
  411da5:	adc    DWORD PTR [ebp+0x189ab8ae],ebp
  411dab:	pop    edi
  411dac:	jns    0x411d36
  411dae:	mov    ds:0xb5623b9e,eax
  411db3:	adc    eax,0xa3b3879e
  411db8:	and    esp,DWORD PTR [ebp+0x7e]
  411dbb:	or     al,0x51
  411dbd:	push   ss
  411dbe:	add    edi,0x691d67d5
  411dc4:	and    BYTE PTR [ecx+0x4336b53a],0xf9
  411dcb:	mov    eax,ds:0xa7068eb7
  411dd0:	jno    0x411dfc
  411dd2:	lahf   
  411dd3:	add    ebx,DWORD PTR [edi-0x5]
  411dd6:	and    eax,0xacf29245
  411ddb:	lock ins DWORD PTR es:[edi],dx
  411ddd:	jns    0x411ded
  411ddf:	pop    edx
  411de0:	mov    dh,0x38
  411de2:	fsub   QWORD PTR [eax+0x4b]
  411de5:	pop    esi
  411de6:	and    cl,dh
  411de8:	neg    BYTE PTR [ecx-0x43]
  411deb:	jg     0x411e4d
  411ded:	dec    esp
  411def:	aas    
  411df0:	jb     0x411dd6
  411df2:	lock push edi
  411df4:	push   es
  411df5:	inc    ebx
  411df6:	inc    edx
  411df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411df8:	mov    WORD PTR [ecx+0x67],cs
  411dfb:	push   eax
  411dfc:	push   edi
  411dfd:	push   ecx
  411dfe:	(bad)  
  411dff:	stc    
  411e00:	push   esp
  411e01:	das    
  411e02:	xchg   ebx,eax
  411e03:	push   eax
  411e04:	inc    ebx
  411e05:	ficom  WORD PTR [ebx-0x45980d1]
  411e0b:	push   0x6980c3d9
  411e10:	fcmovne st,st(1)
  411e12:	repnz es test al,ah
  411e16:	loope  0x411da9
  411e18:	clc    
  411e19:	outs   dx,DWORD PTR ds:[esi]
  411e1a:	jb     0x411e6e
  411e1c:	stos   BYTE PTR es:[edi],al
  411e1d:	mov    DWORD PTR [ebx+0x24ab9bf5],edx
  411e23:	fs dec esp
  411e25:	adc    al,0x2e
  411e27:	inc    esp
  411e28:	(bad)  
  411e29:	pop    ebx
  411e2a:	xor    al,0xcb
  411e2c:	repnz sub BYTE PTR ds:0xbf767cb2,bh
  411e33:	mov    ebx,0x18c24ee9
  411e38:	cmp    edi,eax
  411e3a:	retf   
  411e3b:	jmp    0x411dca
  411e3d:	call   0x1bb96bd7
  411e42:	dec    ebp
  411e43:	rcl    BYTE PTR [eax],cl
  411e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e46:	push   ss
  411e47:	jmp    0x64e188fb
  411e4c:	push   0xffffff82
  411e4e:	mov    DWORD PTR [esi+ebp*4],edi
  411e51:	mov    eax,0xbe7f0e88
  411e56:	push   ss
  411e57:	out    0x85,eax
  411e59:	pop    fs
  411e5b:	mov    bh,0x73
  411e5d:	mov    al,ds:0xb2dbf875
  411e62:	mov    ebp,0xfe15c20e
  411e67:	xor    ecx,DWORD PTR [eax-0x1]
  411e6a:	leave  
  411e6b:	xchg   esp,eax
  411e6c:	mov    dh,0x38
  411e6e:	repz or al,BYTE PTR [edx]
  411e71:	jbe    0x411eea
  411e73:	mov    eax,ds:0xe2a1dcbd
  411e78:	adc    al,0x35
  411e7b:	dec    edx
  411e7c:	lds    esi,FWORD PTR [esi-0x11]
  411e7f:	les    ecx,FWORD PTR ss:[edx]
  411e82:	fdiv   st,st(4)
  411e84:	stos   DWORD PTR es:[edi],eax
  411e85:	xor    BYTE PTR [esi-0x75],cl
  411e88:	data16 mov bl,0x97
  411e8b:	cmp    al,0x9e
  411e8d:	push   cs
  411e8e:	es mov bh,0xea
  411e91:	and    DWORD PTR [edi],esi
  411e93:	mov    ds:0xd6a18965,eax
  411e98:	mov    eax,ds:0xcdf266e5
  411e9d:	jb     0x411e88
  411e9f:	xor    eax,0x2423ecdd
  411ea4:	cmp    al,0xd8
  411ea6:	jmp    0x280:0xe4219281
  411ead:	push   ds
  411eae:	aad    0xe4
  411eb0:	jne    0x411e42
  411eb2:	lods   eax,DWORD PTR ds:[esi]
  411eb3:	outs   dx,BYTE PTR ds:[esi]
  411eb4:	inc    ebp
  411eb5:	fs jle 0x411e6d
  411eb8:	sbb    BYTE PTR ds:0xf3d221d6,dl
  411ebe:	pop    es
  411ebf:	push   ds
  411ec0:	fstp   QWORD PTR [eax-0x4ea17e2a]
  411ec6:	and    ch,BYTE PTR [edx]
  411ec8:	ins    BYTE PTR es:[edi],dx
  411ec9:	and    al,0xd5
  411ecb:	rcl    BYTE PTR [eax+0x50],1
  411ece:	int3   
  411ecf:	or     eax,0x7bb4d2bc
  411ed4:	ins    DWORD PTR es:[edi],dx
  411ed5:	inc    edx
  411ed6:	jnp    0x411f28
  411ed8:	mov    esi,0xf03e561
  411edd:	outs   dx,DWORD PTR ds:[esi]
  411ede:	mov    edi,0x7d311c77
  411ee3:	pusha  
  411ee4:	test   al,0x2a
  411ee6:	mov    edx,0xdd59593b
  411eeb:	xchg   ebx,eax
  411eec:	or     al,0x1e
  411eee:	test   al,0x81
  411ef0:	mov    esp,0x38ec01eb
  411ef5:	ja     0x411ecd
  411ef7:	cli    
  411ef8:	jno    0x411eac
  411efa:	xchg   ebx,eax
  411efb:	mov    eax,0xff8ee80e
  411f00:	mov    al,ah
  411f02:	sub    edi,esp
  411f04:	dec    ebx
  411f05:	imul   DWORD PTR [ebx+0x7a8131ac]
  411f0b:	lds    eax,FWORD PTR [edx+0x78]
  411f0e:	enter  0xd3ab,0x39
  411f12:	sub    eax,0xe2119f7f
  411f17:	and    al,0xa0
  411f19:	mov    cl,0x58
  411f1b:	aas    
  411f1c:	clc    
  411f1d:	jb     0x411f65
  411f1f:	add    cl,dh
  411f21:	lahf   
  411f22:	sub    bl,bh
  411f24:	mov    bh,0x8d
  411f26:	in     eax,dx
  411f27:	sub    bl,BYTE PTR [edx+0x70]
  411f2a:	(bad)  
  411f2b:	in     eax,dx
  411f2c:	or     eax,0xfd2025c1
  411f31:	inc    esp
  411f32:	push   esi
  411f33:	xchg   esp,eax
  411f34:	mov    DWORD PTR ds:0xe49b768a,edx
  411f3a:	mov    esi,0x197fa422
  411f3f:	sahf   
  411f40:	fmul   DWORD PTR [edi+ebp*4]
  411f43:	pop    ebp
  411f44:	cmp    eax,0xdc41784a
  411f49:	sti    
  411f4a:	and    BYTE PTR ds:0x9aff47ac,bl
  411f50:	and    DWORD PTR [ebx+ecx*8-0x1c],eax
  411f54:	addr16 jmp 0x411fb8
  411f57:	pop    es
  411f58:	xchg   esp,eax
  411f59:	fistp  WORD PTR [edx+0x75bfa187]
  411f5f:	push   esi
  411f60:	stos   BYTE PTR es:[edi],al
  411f61:	(bad)  
  411f62:	fisub  WORD PTR [edx+0x4652579d]
  411f68:	imul   eax,DWORD PTR ds:0x95d445e2,0x1e39d9c7
  411f72:	inc    ebx
  411f73:	aaa    
  411f74:	imul   edi,DWORD PTR [ebx+ebp*4],0x224d7539
  411f7b:	jg     0x411fee
  411f7d:	das    
  411f7e:	out    dx,eax
  411f7f:	xlat   BYTE PTR ds:[ebx]
  411f80:	jns    0x411f88
  411f82:	pop    eax
  411f83:	inc    ecx
  411f84:	xor    DWORD PTR [eax-0x37],ebx
  411f87:	adc    al,0x70
  411f89:	mov    BYTE PTR [ecx],ch
  411f8b:	mov    ss,WORD PTR [edx-0x589e6719]
  411f91:	cs pop es
  411f93:	stc    
  411f94:	cmp    edi,edx
  411f96:	aas    
  411f97:	int    0x87
  411f99:	das    
  411f9a:	mov    ds:0xb3f3a27b,al
  411f9f:	xchg   BYTE PTR [esi-0xa1308aa],dh
  411fa5:	xchg   BYTE PTR [edi+0x1ccfb0b3],bl
  411fab:	push   0x58
  411fad:	add    bh,ch
  411faf:	jbe    0x412027
  411fb1:	sbb    DWORD PTR [esi+0x7935314c],ebp
  411fb7:	add    BYTE PTR [edx-0x277c69b7],0xbe
  411fbe:	dec    ebx
  411fbf:	mov    cl,0x9b
  411fc1:	add    eax,0x7cc502d4
  411fc6:	pop    esp
  411fc7:	add    bh,BYTE PTR [esi+0x13]
  411fca:	out    dx,eax
  411fcb:	xchg   edx,eax
  411fcc:	sbb    al,0x65
  411fce:	ror    bl,0x4d
  411fd1:	scas   eax,DWORD PTR es:[edi]
  411fd2:	mov    esp,0xdfd6780
  411fd7:	mov    eax,0x90c069fb
  411fdc:	sar    BYTE PTR [ebx],cl
  411fde:	add    al,0x23
  411fe0:	ret    0x400d
  411fe3:	sbb    al,BYTE PTR [eax]
  411fe5:	add    BYTE PTR ds:0x1ac1,dh
  411feb:	add    ecx,eax
  411fed:	mov    eax,DWORD PTR [ebp-0x18]
  411ff0:	mov    edx,0x7380
  411ff5:	sub    edx,eax
  411ff7:	add    edx,DWORD PTR [ebp-0x1c]
  411ffa:	mov    eax,DWORD PTR [ebp-0x20]
  411ffd:	xor    edx,eax
  411fff:	mov    eax,DWORD PTR [ebp-0x24]
  412002:	and    edx,eax
  412004:	mov    eax,DWORD PTR [ebp+0x10]
  412007:	jmp    0x412310
  41200c:	icebp  
  41200d:	or     DWORD PTR [ebp+0x7c3cad28],0xcf30669c
  412017:	nop
  412018:	xor    esi,DWORD PTR [ebp+0x28]
  41201b:	rcr    DWORD PTR [esi+eiz*2-0x42],1
  41201f:	mov    esi,0xbebec28e
  412024:	cmp    eax,0x70db649c
  412029:	pushf  
  41202a:	lds    ecx,FWORD PTR [edi+0x54dd7da]
  412030:	scas   al,BYTE PTR es:[edi]
  412031:	inc    ebp
  412032:	fcom   DWORD PTR [esi]
  412034:	pop    ss
  412035:	data16 (bad) 
  412037:	fld    DWORD PTR [ebx+0x380920a0]
  41203d:	call   0xca40:0x6797506
  412044:	ins    DWORD PTR es:[edi],dx
  412045:	inc    edi
  412046:	or     eax,0x10361729
  41204b:	cwde   
  41204c:	int    0x39
  41204e:	pop    ss
  41204f:	jge    0x4120a2
  412051:	push   ecx
  412052:	lods   eax,DWORD PTR ds:[esi]
  412053:	dec    edx
  412054:	ja     0x41200a
  412056:	sbb    DWORD PTR [ecx],0xffffffab
  412059:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41205a:	adc    eax,0x44f2c34f
  41205f:	scas   al,BYTE PTR es:[edi]
  412060:	retf   
  412061:	ret    
  412062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412063:	xchg   ebp,eax
  412064:	push   eax
  412065:	or     BYTE PTR [esi-0x2378371b],ah
  41206b:	data16 xor al,0x35
  41206e:	inc    ebx
  41206f:	jmp    0x41208e
  412071:	push   ds
  412072:	jge    0x41207b
  412074:	ja     0x412060
  412076:	or     eax,0x291a963e
  41207b:	cs inc esp
  41207d:	mov    bl,0x8b
  41207f:	fcmovnu st,st(6)
  412081:	fild   WORD PTR [ebp+edx*8+0x3fbe3653]
  412088:	jmp    0x8301a457
  41208d:	xchg   ebp,eax
  41208e:	imul   ebp,DWORD PTR [edi-0x42],0xffffff9d
  412092:	in     al,dx
  412093:	mov    dh,BYTE PTR [esi]
  412095:	pop    eax
  412096:	pop    esi
  412097:	mov    ebp,cs
  412099:	sub    al,0xb7
  41209b:	mov    eax,ds:0x93daa9a5
  4120a0:	mov    edx,0x86cb364c
  4120a5:	add    cl,BYTE PTR [esi]
  4120a7:	mov    ebx,0x2a82260b
  4120ac:	xchg   edi,eax
  4120ad:	mov    ds,WORD PTR [ecx-0x28]
  4120b0:	mov    edi,DWORD PTR [eax+0x1563a511]
  4120b6:	xlat   BYTE PTR ds:[ebx]
  4120b7:	xchg   ecx,eax
  4120b8:	xor    BYTE PTR [esi],al
  4120ba:	rcr    BYTE PTR [edx+ecx*1-0x50],0x4f
  4120bf:	fistp  QWORD PTR [edi-0x4f8beacf]
  4120c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120c6:	jns    0x4120a4
  4120c8:	pop    edx
  4120c9:	ds dec edx
  4120cb:	jne    0x4120d7
  4120cd:	fidiv  DWORD PTR [ebx+eiz*4+0x14]
  4120d1:	mov    ebx,0x236230a5
  4120d6:	jmp    DWORD PTR [ecx+0x76e0d14a]
  4120dc:	sahf   
  4120dd:	add    eax,0xaf933570
  4120e2:	mov    bh,0xa9
  4120e4:	jae    0x412106
  4120e6:	mov    al,ds:0xe5a05df6
  4120eb:	or     DWORD PTR [edi+0xa],0x8ee392
  4120f2:	dec    esi
  4120f3:	loopne 0x4120af
  4120f5:	push   ebx
  4120f6:	jno    0x41212e
  4120f8:	and    al,dl
  4120fa:	sbb    cl,BYTE PTR [esi-0x31]
  4120fd:	xchg   esi,eax
  4120fe:	in     eax,dx
  4120ff:	sbb    eax,0x9396c48e
  412104:	sub    DWORD PTR [ecx+edi*8+0x3a0a832a],0x1a517216
  41210f:	dec    ebp
  412110:	pop    ds
  412111:	(bad)  
  412112:	stc    
  412113:	pop    edx
  412114:	call   0x77a1:0xfb287084
  41211b:	push   0xffffffef
  41211d:	mov    cl,0xa
  41211f:	lods   eax,DWORD PTR ds:[esi]
  412120:	push   ds
  412121:	es mov al,0x37
  412124:	mov    cl,0xd6
  412126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412127:	mov    esp,fs
  412129:	push   0x32a59778
  41212e:	loope  0x412107
  412130:	cmp    DWORD PTR [ecx+0x767b436c],edi
  412136:	in     al,dx
  412137:	repnz mov ecx,0xa4c5b59a
  41213d:	sub    al,BYTE PTR [ebx-0x5d4a5268]
  412143:	lea    ebx,[eax+0x2f]
  412146:	cmp    DWORD PTR ds:0x1b3e7cf9,0x79
  41214d:	mov    WORD PTR [edx+ebp*4+0x218bb251],ss
  412154:	sahf   
  412155:	push   esi
  412156:	push   ds
  412157:	sub    DWORD PTR ds:0xd9f6fc0a,edi
  41215d:	mul    DWORD PTR [edi+0x7c]
  412160:	fwait
  412161:	std    
  412162:	daa    
  412163:	adc    dl,dh
  412165:	cmp    eax,0x68c77df9
  41216a:	ret    0x5216
  41216d:	dec    esi
  41216e:	inc    esp
  41216f:	xor    eax,0xbc89ab70
  412174:	mov    ebx,0xeec3663c
  412179:	rcl    DWORD PTR [ebp+0x629b4961],1
  41217f:	daa    
  412180:	mov    ah,0x83
  412182:	or     al,0x12
  412184:	test   BYTE PTR [eax],dl
  412186:	sbb    edi,eax
  412188:	pop    edx
  412189:	or     esp,DWORD PTR ds:0x7150
  41218e:	dec    edx
  41218f:	inc    ecx
  412190:	gs pop edi
  412192:	addr16 loopne 0x412162
  412195:	arpl   WORD PTR [eax],cx
  412197:	gs inc esi
  412199:	dec    ebx
  41219a:	add    al,dh
  41219c:	xor    bl,al
  41219e:	popa   
  41219f:	call   0xe1bf572c
  4121a4:	jl     0x4121ec
  4121a6:	pop    eax
  4121a7:	inc    ebx
  4121a8:	cmp    DWORD PTR [edi+0x1c],eax
  4121ab:	icebp  
  4121ac:	cwde   
  4121ad:	push   esi
  4121ae:	inc    edx
  4121af:	jno    0x412224
  4121b1:	sahf   
  4121b2:	xlat   BYTE PTR ds:[ebx]
  4121b3:	inc    edi
  4121b4:	fisttp DWORD PTR [eax-0x5fb99a08]
  4121ba:	pop    eax
  4121bb:	arpl   WORD PTR [esi],cx
  4121bd:	xchg   edx,eax
  4121be:	(bad)  [edx]
  4121c0:	inc    ebx
  4121c1:	push   eax
  4121c2:	cmc    
  4121c3:	mov    dh,0x36
  4121c5:	push   edi
  4121c6:	xchg   DWORD PTR [ecx],eax
  4121c8:	cmp    ecx,0xffffff9c
  4121cb:	call   0x97cbf0d4
  4121d0:	add    al,0x50
  4121d2:	shr    DWORD PTR [edx],0x43
  4121d5:	mov    cl,0x96
  4121d7:	es bswap ebp
  4121da:	cmp    BYTE PTR [ebx],dh
  4121dc:	aad    0x7a
  4121de:	fcom   DWORD PTR [edi-0x2ae5433d]
  4121e4:	mov    ah,BYTE PTR [ebp+0x16]
  4121e7:	mov    al,0x9d
  4121ea:	cli    
  4121eb:	xor    DWORD PTR [eax],ebp
  4121ed:	lods   al,BYTE PTR ds:[esi]
  4121ee:	fs add BYTE PTR gs:[eax+ebp*1+0x77],dh
  4121f4:	jmp    FWORD PTR [edx+edx*8]
  4121f7:	mov    al,0xdd
  4121f9:	inc    ecx
  4121fa:	ret    
  4121fb:	cmp    bl,BYTE PTR [ecx]
  4121fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121fe:	retf   
  4121ff:	sub    DWORD PTR ds:0x70357724,eax
  412205:	jne    0x4121f5
  412207:	imul   eax,DWORD PTR [esi],0xffffffb8
  41220a:	loope  0x412259
  41220c:	loopne 0x412207
  41220e:	enter  0xaafc,0xa8
  412212:	std    
  412213:	jne    0x412204
  412215:	mov    eax,ds:0x736eea8e
  41221a:	mov    dh,0x2f
  41221c:	div    DWORD PTR [esi+esi*1]
  41221f:	sub    ch,0x60
  412222:	mov    eax,ds:0xd4b0e38a
  412227:	mov    ah,0xf3
  412229:	xchg   ecx,eax
  41222a:	ins    DWORD PTR es:[edi],dx
  41222b:	adc    al,0x5d
  41222d:	xchg   ebp,eax
  41222e:	clc    
  41222f:	rol    al,1
  412231:	std    
  412232:	lods   eax,DWORD PTR ds:[esi]
  412233:	out    0xe6,eax
  412235:	xchg   DWORD PTR [ebp-0xf63680e],ebx
  41223b:	mov    cl,0x9f
  41223d:	in     al,dx
  41223e:	mov    bh,0xbd
  412240:	mov    edx,0x9e833a6f
  412245:	cli    
  412246:	aam    0x11
  412248:	call   0x6b34:0xe03b5625
  41224f:	retf   0x5f13
  412252:	xchg   DWORD PTR [ecx-0x29566b8a],edi
  412258:	lea    esi,[edi]
  41225a:	fidiv  DWORD PTR [edi-0x28]
  41225d:	out    dx,al
  41225e:	push   ss
  41225f:	or     ebp,DWORD PTR [ebp+0x10]
  412262:	mov    DWORD PTR [ebx],eax
  412264:	dec    ebx
  412265:	mov    eax,ds:0xeb4ce3d3
  41226a:	sbb    eax,0x5f250cfb
  41226f:	js     0x41228f
  412271:	push   ds
  412272:	ds xor dl,ah
  412275:	jmp    0xd76f9863
  41227a:	xor    esi,DWORD PTR [edx+eiz*1]
  41227d:	in     al,dx
  41227e:	out    0xe0,eax
  412280:	sub    al,0x14
  412282:	mov    esi,0x4d040258
  412287:	cmp    DWORD PTR [ebx-0x3308c971],0xffffffa7
  41228e:	aam    0x2e
  412290:	cld    
  412291:	xchg   ebx,eax
  412292:	or     al,0x54
  412294:	clc    
  412295:	arpl   WORD PTR [edi+0x2648deba],bp
  41229b:	fwait
  41229c:	retf   
  41229d:	arpl   si,sp
  41229f:	mov    ch,0x3d
  4122a1:	and    eax,0xc76e009d
  4122a6:	sbb    al,0xb9
  4122a9:	iret   
  4122aa:	int    0x71
  4122ac:	xchg   edi,eax
  4122ad:	mov    cl,0xc9
  4122af:	lea    edx,[ebx+0xf]
  4122b2:	adc    ah,BYTE PTR [esi+0x61]
  4122b5:	push   ecx
  4122b6:	dec    ecx
  4122b7:	les    esp,FWORD PTR [ebp-0x74]
  4122ba:	aad    0x19
  4122bc:	cs fwait
  4122be:	mov    BYTE PTR [eax-0x69],0x6c
  4122c2:	push   es
  4122c3:	mov    edi,0x89a58bba
  4122c8:	pushf  
  4122c9:	rol    BYTE PTR [eax+0x404465f9],cl
  4122cf:	pop    ebx
  4122d0:	dec    ecx
  4122d1:	jge    0x4122c3
  4122d3:	or     bh,BYTE PTR [esi-0x125d96ba]
  4122d9:	js     0x41233c
  4122db:	mov    ah,0x37
  4122dd:	jmp    0x2e98f902
  4122e2:	pop    DWORD PTR [esi+edx*1-0x16]
  4122e6:	cmp    BYTE PTR [edi-0x27],dh
  4122e9:	or     ax,0x6260
  4122ed:	pop    esi
  4122ee:	ds or  al,0x8d
  4122f1:	pop    edx
  4122f2:	retf   0xe95b
  4122f5:	push   edx
  4122f6:	xor    edx,0xff49eeea
  4122fc:	jno    0x412324
  4122fe:	pop    ds
  4122ff:	xchg   edx,eax
  412300:	dec    ecx
  412301:	lahf   
  412302:	inc    ecx
  412303:	jecxz  0x41230f
  412305:	push   esp
  412306:	imul   edi,eax,0x4a
  412309:	inc    ecx
  41230a:	cmp    BYTE PTR [esi-0x7d],0x30
  41230e:	add    eax,eax
  412310:	xor    edx,0x7015
  412316:	sub    eax,edx
  412318:	mov    edx,DWORD PTR [ebp-0x28]
  41231b:	mov    esi,DWORD PTR [ebp-0x2c]
  41231e:	and    edx,0x2a7b
  412324:	lea    edx,[edx+esi*1-0x3571]
  41232b:	mov    esi,DWORD PTR [ebp-0x30]
  41232e:	shr    edx,1
  412330:	or     edx,esi
  412332:	mov    esi,ecx
  412334:	sub    esi,edx
  412336:	add    esi,0x4751
  41233c:	cmp    esi,eax
  41233e:	jbe    0x411c83
  412344:	pop    esi
  412345:	leave  
  412346:	ret    0xc
  412349:	push   ebp
  41234a:	mov    ebp,esp
  41234c:	sub    esp,0x80
  412352:	push   ebx
  412353:	jmp    0x41268c
  412358:	push   0xffffffd2
  41235a:	jnp    0x4122dc
  41235c:	jl     0x412306
  41235e:	mov    edx,0xa0fab73b
  412363:	nop
  412364:	pop    edx
  412365:	data16 mov ss,WORD PTR [eax-0x414193d4]
  41236c:	in     eax,dx
  41236d:	les    edi,FWORD PTR [esi+0x856e7be]
  412373:	ret    0xf97d
  412376:	shl    BYTE PTR [ecx-0x46ac4381],0x2a
  41237d:	js     0x41238e
  41237f:	push   ds
  412380:	ret    0xc17
  412383:	out    dx,eax
  412384:	cmp    bl,BYTE PTR [edx+0x67]
  412387:	test   ebx,0x5541f681
  41238d:	cmp    DWORD PTR [eax],esi
  41238f:	inc    esi
  412390:	add    ecx,edx
  412392:	(bad)  
  412393:	push   0xffffff90
  412395:	ror    edx,0x2d
  412398:	int    0xd6
  41239a:	and    esp,edi
  41239c:	pop    esp
  41239d:	pushf  
  41239e:	mov    esp,0x1395aa4e
  4123a3:	push   0xffffff97
  4123a5:	mov    ch,bh
  4123a7:	add    al,0x63
  4123a9:	out    dx,eax
  4123aa:	inc    ebx
  4123ab:	mov    ebp,0x1b7d169b
  4123b0:	lahf   
  4123b1:	inc    esi
  4123b2:	cmp    bh,ah
  4123b4:	in     eax,0x92
  4123b6:	cld    
  4123b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123b8:	sub    al,0x12
  4123ba:	(bad)  
  4123bb:	mov    cl,0x8e
  4123bd:	scas   eax,DWORD PTR es:[edi]
  4123be:	jecxz  0x4123da
  4123c0:	pop    esp
  4123c1:	or     al,0x8e
  4123c3:	mov    ah,0x93
  4123c5:	out    0xdd,al
  4123c7:	or     BYTE PTR [esi],dh
  4123c9:	dec    esp
  4123ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123cb:	jne    0x412424
  4123cd:	push   esi
  4123ce:	cmp    DWORD PTR [ebx],esi
  4123d0:	ror    DWORD PTR [ebp+esi*8+0x3352e10c],0x8d
  4123d8:	jae    0x412459
  4123da:	mov    cl,0x6b
  4123dc:	sub    ch,cl
  4123de:	adc    edi,DWORD PTR [esi]
  4123e0:	fidivr DWORD PTR [edx]
  4123e2:	pop    eax
  4123e3:	sbb    DWORD PTR [edi+esi*8-0x471be02b],eax
  4123ea:	test   DWORD PTR [edi+edi*2-0x610af194],ecx
  4123f1:	xchg   edi,eax
  4123f2:	neg    DWORD PTR [ebp+0x39c5f0b2]
  4123f8:	mov    dh,0x61
  4123fa:	mov    BYTE PTR [esi+ecx*2],bl
  4123fd:	std    
  4123fe:	outs   dx,BYTE PTR ds:[esi]
  4123ff:	xor    ecx,0x18c314cb
  412405:	sub    al,0x4b
  412407:	nop
  412408:	cs or  eax,0x2ad0eda2
  41240e:	inc    esp
  41240f:	std    
  412410:	push   edx
  412411:	call   0x57b9:0xac9880bf
  412418:	push   es
  412419:	sbb    eax,0x7d4f627f
  41241e:	jmp    0x412462
  412420:	or     edx,eax
  412422:	retf   
  412423:	pop    es
  412424:	fnstenv [ecx+eax*8-0x5f]
  412428:	sub    al,0x95
  41242a:	pop    edx
  41242b:	outs   dx,BYTE PTR ds:[esi]
  41242c:	repnz xor al,0xe1
  41242f:	aas    
  412430:	lahf   
  412431:	xchg   ebx,eax
  412432:	push   0x5b
  412434:	jbe    0x4123f4
  412436:	js     0x4123f6
  412438:	repnz add al,0xf6
  41243b:	mov    ecx,0x48b30b08
  412440:	sub    al,BYTE PTR [edi+0x55d21081]
  412446:	sbb    DWORD PTR [esi-0xc737faf],0x38f9d9ae
  412450:	icebp  
  412451:	enter  0x8c76,0x82
  412455:	cmp    BYTE PTR [ebx+0x6b9aa84a],bh
  41245b:	push   esi
  41245c:	sbb    eax,0x6b23f9e3
  412461:	mov    ds:0xbcb2714d,eax
  412466:	std    
  412467:	gs add al,0x1d
  41246a:	clc    
  41246b:	push   ecx
  41246c:	pop    esi
  41246d:	push   eax
  41246e:	and    BYTE PTR [eax],bl
  412470:	sbb    eax,DWORD PTR [edx]
  412472:	push   ds
  412473:	pop    esi
  412474:	in     eax,0xf
  412476:	jo     0x412476
  412478:	outs   dx,DWORD PTR ds:[esi]
  412479:	je     0x4124f6
  41247b:	push   0x42
  41247d:	cdq    
  41247e:	jecxz  0x4124e7
  412480:	mov    cs,WORD PTR [edi+0x54]
  412483:	mov    cl,0x9c
  412485:	mov    al,ds:0x2ae2a265
  41248a:	ins    BYTE PTR es:[edi],dx
  41248b:	cli    
  41248c:	and    DWORD PTR [ebp+0x68d9a232],ebp
  412492:	or     esp,0xffffff81
  412495:	out    dx,eax
  412496:	mov    ah,0xbb
  412498:	sbb    al,0x4c
  41249a:	push   ebp
  41249b:	cdq    
  41249c:	xor    bl,0xd5
  41249f:	leave  
  4124a0:	rdpmc  
  4124a2:	iret   
  4124a3:	mov    DWORD PTR [ecx+edi*4-0x58],eax
  4124a7:	add    esp,ebx
  4124a9:	sbb    ah,BYTE PTR [ebx+eiz*8-0x43]
  4124ad:	test   DWORD PTR [ecx+0x73],edi
  4124b0:	out    0xef,al
  4124b2:	test   al,0xc9
  4124b4:	mov    bh,BYTE PTR [ebx]
  4124b6:	cmp    eax,0x7c8f615
  4124bb:	sti    
  4124bc:	cmp    ebp,0xd
  4124bf:	dec    esi
  4124c0:	sub    eax,0x9960b072
  4124c5:	outs   dx,DWORD PTR ds:[esi]
  4124c6:	pushf  
  4124c7:	ret    0xa698
  4124ca:	add    BYTE PTR [eax+0x7419ca9f],al
  4124d0:	sub    eax,DWORD PTR [edx+0x4d]
  4124d3:	call   0xa91e:0x1946f7a6
  4124da:	or     al,0xef
  4124dc:	in     al,dx
  4124dd:	lea    ebp,[esi+0x74fadc36]
  4124e3:	jne    0x412498
  4124e5:	in     al,dx
  4124e6:	aad    0xad
  4124e8:	add    ebp,eax
  4124ea:	int3   
  4124eb:	jne    0x412506
  4124ed:	rcl    BYTE PTR [edx-0x1],0xfd
  4124f1:	ins    BYTE PTR es:[edi],dx
  4124f2:	out    dx,al
  4124f3:	outs   dx,BYTE PTR ds:[esi]
  4124f4:	cdq    
  4124f5:	(bad)  
  4124f6:	mov    ch,0xa
  4124f8:	std    
  4124f9:	sub    al,0xdf
  4124fb:	(bad)  
  4124fc:	jmp    0x7eb98c30
  412501:	inc    eax
  412502:	jne    0x412537
  412504:	mov    al,0x85
  412506:	xlat   BYTE PTR ds:[ebx]
  412507:	jbe    0x412502
  412509:	(bad)  
  41250a:	das    
  41250b:	repz push es
  41250d:	jno    0x41254a
  41250f:	mov    DWORD PTR [eax+eax*8],esi
  412512:	test   al,0x85
  412514:	repz lds edx,FWORD PTR [edi+0x76]
  412518:	dec    edi
  412519:	jne    0x41253f
  41251b:	and    ebp,DWORD PTR [ebp+0x66]
  41251e:	ja     0x4124e6
  412520:	adc    ch,BYTE PTR ds:0x88d8fdd
  412526:	push   es
  412527:	sar    BYTE PTR [ecx+0x1e1233ed],0x53
  41252e:	inc    edx
  41252f:	ds push ebx
  412531:	fwait
  412532:	pop    ds
  412533:	push   esi
  412534:	push   ds
  412535:	dec    ebp
  412536:	ins    DWORD PTR es:[edi],dx
  412537:	add    eax,0xca86d832
  41253c:	xchg   esi,eax
  41253d:	mov    edi,0xa75f4c7f
  412542:	xor    DWORD PTR [ebx+0x1525ac61],ecx
  412548:	int3   
  412549:	(bad)  
  41254a:	imul   esi,DWORD PTR [edi-0x3620f8c7],0xf8b8301f
  412554:	cmp    bl,bh
  412556:	cmp    al,bl
  412558:	cwde   
  412559:	lock mov ds:0x7a25af0c,al
  41255f:	xchg   edx,eax
  412560:	and    cl,BYTE PTR [esi-0x13]
  412563:	inc    eax
  412564:	add    al,0x9e
  412566:	data16 aad 0x34
  412569:	loopne 0x4125c1
  41256b:	or     al,0xd9
  41256d:	inc    ebx
  41256e:	mov    ch,0x80
  412570:	in     al,0x9a
  412572:	pop    DWORD PTR [edi]
  412574:	in     eax,0x9c
  412576:	lahf   
  412577:	shr    BYTE PTR [edi+0x3a154da3],0x5a
  41257e:	inc    edx
  41257f:	xchg   DWORD PTR [edx],ebp
  412581:	fdiv   DWORD PTR [ebx-0x2137998a]
  412587:	push   ebp
  412588:	sar    BYTE PTR [ecx-0x3c],cl
  41258b:	dec    edi
  41258c:	bound  ebx,QWORD PTR [edi]
  41258e:	adc    ah,BYTE PTR [ecx]
  412590:	cmp    eax,0x99971bb4
  412595:	add    esp,ecx
  412597:	fs popf 
  412599:	xchg   esp,eax
  41259a:	aas    
  41259b:	mov    ecx,0x2f6b4ca
  4125a0:	pop    ss
  4125a1:	pop    ebx
  4125a2:	or     ah,0x12
  4125a5:	jmp    0x1885d81c
  4125aa:	sub    DWORD PTR [ebx-0x7653c415],0xf3f77c76
  4125b4:	ins    BYTE PTR es:[edi],dx
  4125b5:	out    0x4b,eax
  4125b7:	xchg   edx,eax
  4125b8:	arpl   sp,di
  4125ba:	jno    0x41254d
  4125bc:	pop    edx
  4125bd:	jmp    0xe32a:0x85956e0b
  4125c4:	xor    BYTE PTR [ebp+0x62],cl
  4125c7:	pop    esi
  4125c8:	pushf  
  4125c9:	fwait
  4125ca:	ds dec edx
  4125cc:	sub    eax,0x5ff58982
  4125d1:	mov    esi,0x728543f8
  4125d6:	mov    WORD PTR [edi],?
  4125d8:	inc    ecx
  4125d9:	inc    edi
  4125da:	and    DWORD PTR [esi],ecx
  4125dc:	pop    es
  4125dd:	popa   
  4125de:	dec    ebp
  4125df:	push   ecx
  4125e0:	out    0xd7,eax
  4125e2:	inc    ebx
  4125e3:	jmp    ebp
  4125e5:	push   ds
  4125e6:	test   cl,0x4b
  4125e9:	jns    0x412642
  4125eb:	in     al,0x85
  4125ed:	xor    DWORD PTR [ebx-0x66],0xffffffdd
  4125f1:	xor    ah,bh
  4125f3:	inc    edx
  4125f4:	inc    esp
  4125f5:	inc    eax
  4125f6:	mov    esi,DWORD PTR [ecx-0x6a]
  4125f9:	std    
  4125fa:	mov    ebx,0xdfea7ebd
  4125ff:	mov    edi,0xde4f8248
  412604:	sbb    esp,esi
  412606:	outs   dx,BYTE PTR ds:[esi]
  412607:	mov    eax,gs
  412609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41260a:	clc    
  41260b:	out    dx,al
  41260c:	and    BYTE PTR [eax-0x77],al
  41260f:	shl    DWORD PTR [ecx+0x42],0x4b
  412613:	lds    ebx,FWORD PTR [eax-0x6047f380]
  412619:	sahf   
  41261a:	cmp    BYTE PTR [ecx-0x41],ch
  41261d:	aad    0x9c
  41261f:	adc    al,0xe1
  412621:	pusha  
  412622:	xlat   BYTE PTR ds:[ebx]
  412623:	ss mov bh,0x8d
  412626:	inc    ecx
  412627:	cmp    al,0x4d
  412629:	push   esp
  41262a:	xchg   ecx,eax
  41262b:	mov    al,0x46
  41262d:	cmp    eax,0x4ced03
  412632:	mov    ch,0xf5
  412634:	test   al,0x5d
  412636:	popa   
  412637:	push   ds
  412638:	rcr    DWORD PTR [ebp+0x7a],0x70
  41263c:	fimul  WORD PTR [esp+esi*8+0x7b]
  412640:	adc    eax,0xf9a7599f
  412645:	test   eax,0x4b468b92
  41264a:	rcr    DWORD PTR [ebx],cl
  41264c:	inc    esi
  41264d:	cmp    al,0x88
  41264f:	push   ebx
  412650:	pop    ss
  412651:	pop    eax
  412652:	lods   eax,DWORD PTR ds:[esi]
  412653:	inc    edx
  412654:	jmp    0x412620
  412656:	xor    al,bh
  412658:	inc    esi
  412659:	jmp    0xac8d4ecc
  41265e:	test   cl,0x9
  412661:	adc    BYTE PTR [ecx+0xb],dl
  412664:	in     al,dx
  412665:	cld    
  412666:	sbb    al,0x4
  412668:	jle    0x4126a3
  41266a:	adc    BYTE PTR [ebp+0x5969b0b8],al
  412670:	pushf  
  412671:	inc    esp
  412672:	ins    BYTE PTR es:[edi],dx
  412673:	sbb    ecx,esi
  412675:	jns    0x4126ac
  412677:	mov    ds:0x623ef08e,eax
  41267c:	in     eax,0x8a
  41267e:	(bad)  [ebp+0x26]
  412681:	cld    
  412682:	ret    0x2be6
  412685:	not    BYTE PTR [edx+0x523a11dd]
  41268b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41268c:	push   esi
  41268d:	push   edi
  41268e:	xor    DWORD PTR ds:0x428555,edx
  412694:	mov    eax,DWORD PTR [ebp+0x8]
  412697:	add    ebx,DWORD PTR ds:0x428351
  41269d:	mov    ecx,DWORD PTR [ebp+0xc]
  4126a0:	and    ebx,DWORD PTR ds:0x428549
  4126a6:	shrd   eax,ecx,0x2
  4126aa:	xor    esi,DWORD PTR ds:0x428565
  4126b0:	shr    ecx,0x2
  4126b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4126b6:	cmp    DWORD PTR ds:0x4284cd,0x0
  4126bd:	not    ebx
  4126bf:	mov    edi,0x75d4
  4126c4:	mov    DWORD PTR ds:0x42855d,0x68f
  4126ce:	mov    DWORD PTR ds:0x428569,0x72ee
  4126d8:	jmp    0x412740
  4126dd:	mov    esi,DWORD PTR ds:0x428419
  4126e3:	mov    DWORD PTR ds:0x428369,0x6012
  4126ed:	cmp    DWORD PTR ds:0x4284cd,0x0
  4126f4:	jg     0x41272a
  4126fa:	push   0x1b53
  4126ff:	push   0x62ef
  412704:	call   DWORD PTR ds:0x42e008
  41270a:	and    edi,0x6509
  412710:	xor    edx,edx
  412712:	add    edx,DWORD PTR ds:0x428561
  412718:	and    edx,DWORD PTR ds:0x428501
  41271e:	mov    DWORD PTR ds:0x428561,edx
  412724:	and    edi,DWORD PTR ds:0x428351
  41272a:	adc    DWORD PTR ds:0x428339,edi
  412730:	add    DWORD PTR ds:0x428571,edi
  412736:	mov    DWORD PTR ds:0x428469,0x7a33
  412740:	mov    edx,DWORD PTR [ebp+0xc]
  412743:	cmp    DWORD PTR ds:0x428449,0x0
  41274a:	mov    DWORD PTR ds:0x428331,0x5b58
  412754:	not    ebx
  412756:	mov    DWORD PTR ds:0x42845d,0x50a2
  412760:	mov    DWORD PTR ds:0x428431,edx
  412766:	jmp    0x4127b4
  41276b:	mov    DWORD PTR ds:0x428569,0x3c96
  412775:	cmp    DWORD PTR ds:0x428449,0x0
  41277c:	jne    0x41279e
  412782:	push   0x4282b5
  412787:	push   DWORD PTR [ebp-0x1c]
  41278a:	call   DWORD PTR ds:0x42e0cc
  412790:	and    DWORD PTR ds:0x428431,edi
  412796:	neg    DWORD PTR ds:0x428345
  41279c:	not    edi
  41279e:	sbb    DWORD PTR ds:0x42836d,edx
  4127a4:	sub    edi,ebx
  4127a6:	or     DWORD PTR ds:0x428449,ebx
  4127ac:	xor    esi,esi
  4127ae:	or     DWORD PTR ds:0x428335,ecx
  4127b4:	xor    edx,edx
  4127b6:	mov    esi,0x32de6d5d
  4127bb:	sub    DWORD PTR ds:0x42835d,ecx
  4127c1:	xor    eax,esi
  4127c3:	or     eax,edx
  4127c5:	mov    DWORD PTR [ebp-0x34],eax
  4127c8:	cmp    DWORD PTR ds:0x428449,0x0
  4127cf:	not    ebx
  4127d1:	mov    edx,0x6453
  4127d6:	mov    ebx,DWORD PTR ds:0x42846d
  4127dc:	mov    edi,DWORD PTR ds:0x42835d
  4127e2:	jmp    0x412823
  4127e7:	mov    edi,0x4ae9
  4127ec:	cmp    DWORD PTR ds:0x428449,0x0
  4127f3:	jbe    0x41280b
  4127f9:	push   0x428369
  4127fe:	call   DWORD PTR ds:0x42e254
  412804:	and    ebx,DWORD PTR ds:0x428425
  41280a:	inc    edx
  41280b:	adc    edx,0x18bc
  412811:	mov    ebx,DWORD PTR ds:0x4284e9
  412817:	or     ebx,DWORD PTR ds:0x428441
  41281d:	mov    DWORD PTR ds:0x4284e9,ebx
  412823:	mov    eax,DWORD PTR [ebp+0x8]
  412826:	shl    ecx,0x1e
  412829:	mov    ecx,DWORD PTR [ebp+0xc]
  41282c:	shrd   eax,ecx,0x2
  412830:	xor    eax,esi
  412832:	add    DWORD PTR ds:0x428439,0x71c1
  41283c:	shr    ecx,0x2
  41283f:	cmp    DWORD PTR ds:0x4284f9,0x0
  412846:	mov    DWORD PTR ds:0x428421,0x17f6
  412850:	mov    DWORD PTR ds:0x428425,ecx
  412856:	jmp    0x41291d
  41285b:	movzx  ecx,WORD PTR ds:0x4284dd
  412862:	cmp    DWORD PTR ds:0x4284f9,0x0
  412869:	jl     0x412892
  41286f:	push   DWORD PTR [ebp-0x10]
  412872:	call   DWORD PTR ds:0x42e0d0
  412878:	sub    DWORD PTR ds:0x42841d,edi
  41287e:	xor    edx,edx
  412880:	or     edx,DWORD PTR ds:0x4283c5
  412886:	mov    edi,DWORD PTR ds:0x428525
  41288c:	sub    edx,edi
  41288e:	sub    edx,DWORD PTR [edx+edi*1]
  412891:	inc    edx
  412892:	inc    edx
  412893:	or     DWORD PTR ds:0x4284c5,0x781a
  41289d:	adc    edi,DWORD PTR ds:0x428555
  4128a3:	sbb    ebx,DWORD PTR ds:0x428565
  4128a9:	cmp    DWORD PTR ds:0x428469,0x0
  4128b0:	mov    DWORD PTR ds:0x4284f5,0x3519
  4128ba:	mov    DWORD PTR ds:0x42856d,edx
  4128c0:	jmp    0x41291d
  4128c5:	mov    edi,DWORD PTR ds:0x428445
  4128cb:	mov    DWORD PTR ds:0x428361,0x6a8c
  4128d5:	cmp    DWORD PTR ds:0x428469,0x0
  4128dc:	jae    0x412909
  4128e2:	push   0x74d4
  4128e7:	push   DWORD PTR [ebp-0x24]
  4128ea:	call   DWORD PTR ds:0x42e00c
  4128f0:	xor    ecx,ecx
  4128f2:	or     ecx,DWORD PTR ds:0x4284b1
  4128f8:	mov    edi,DWORD PTR ds:0x4285bd
  4128fe:	sub    ecx,edi
  412900:	add    ecx,DWORD PTR [ecx+edi*1]
  412903:	xor    DWORD PTR ds:0x428549,ebx
  412909:	add    DWORD PTR ds:0x42855d,edx
  41290f:	sub    edi,DWORD PTR ds:0x4284f9
  412915:	neg    edx
  412917:	sub    ecx,DWORD PTR ds:0x428559
  41291d:	mov    ecx,DWORD PTR [ebp+0x8]
  412920:	cmp    DWORD PTR ds:0x428561,0x0
  412927:	movzx  edx,BYTE PTR ds:0x428411
  41292e:	mov    edi,DWORD PTR ds:0x428451
  412934:	jmp    0x41298c
  412939:	mov    DWORD PTR ds:0x4284ed,0x3a54
  412943:	mov    DWORD PTR ds:0x428345,0x35a1
  41294d:	cmp    DWORD PTR ds:0x428561,0x0
  412954:	jbe    0x412981
  41295a:	push   0x731e
  41295f:	push   DWORD PTR [ebp-0x1c]
  412962:	push   0x5d33
  412967:	push   DWORD PTR [ebp-0x28]
  41296a:	push   DWORD PTR [ebp-0x20]
  41296d:	call   DWORD PTR ds:0x42e0d4
  412973:	and    edx,edi
  412975:	and    DWORD PTR ds:0x4284e5,ebx
  41297b:	sbb    edi,0x47ca
  412981:	inc    edx
  412982:	add    DWORD PTR ds:0x428345,0x615e
  41298c:	mov    edx,DWORD PTR [ebp+0xc]
  41298f:	xor    ebx,ebx
  412991:	add    ebx,DWORD PTR ds:0x428391
  412997:	mov    edi,DWORD PTR ds:0x42858d
  41299d:	sub    edi,ebx
  41299f:	or     ebx,DWORD PTR [ebx+edi*1]
  4129a2:	xor    edx,edx
  4129a4:	xor    DWORD PTR ds:0x428469,ebx
  4129aa:	or     eax,edx
  4129ac:	adc    edx,0x4918
  4129b2:	mov    DWORD PTR [ebp-0x34],eax
  4129b5:	sub    ebx,edx
  4129b7:	mov    eax,ds:0x422588
  4129bc:	mov    eax,DWORD PTR [eax]
  4129be:	mov    DWORD PTR [ebp-0x28],eax
  4129c1:	mov    eax,ds:0x4227a8
  4129c6:	mov    eax,DWORD PTR [eax]
  4129c8:	xor    edx,edx
  4129ca:	mov    DWORD PTR [ebp-0x20],eax
  4129cd:	mov    ebx,DWORD PTR ds:0x42849d
  4129d3:	mov    ebx,DWORD PTR [ebx]
  4129d5:	sub    DWORD PTR ds:0x4284dd,ebx
  4129db:	mov    eax,DWORD PTR [ebp-0x28]
  4129de:	mov    eax,DWORD PTR [ebp-0x28]
  4129e1:	xor    edx,edx
  4129e3:	mov    ebx,DWORD PTR [ebp+0x8]
  4129e6:	movzx  edx,BYTE PTR ds:0x4284d5
  4129ed:	sbb    DWORD PTR ds:0x428361,edx
  4129f3:	shl    ecx,0x1e
  4129f6:	mov    edi,DWORD PTR ds:0x42833d
  4129fc:	adc    DWORD PTR ds:0x428375,edi
  412a02:	xor    ecx,ecx
  412a04:	and    DWORD PTR ds:0x428335,ecx
  412a0a:	shld   ecx,eax,0x2
  412a0e:	jmp    0x412d47
  412a13:	scas   eax,DWORD PTR es:[edi]
  412a14:	cdq    
  412a15:	and    esp,ecx
  412a17:	sub    edi,DWORD PTR [eax+esi*4-0x64]
  412a1b:	push   ecx
  412a1c:	mov    edx,0xfa6190d1
  412a21:	repnz iret 
  412a23:	pop    esp
  412a24:	jb     0x4129e4
  412a26:	mov    esi,0xbebec4ed
  412a2b:	xchg   BYTE PTR [edx-0x120c3c6b],cl
  412a31:	stos   DWORD PTR es:[edi],eax
  412a32:	data16 daa 
  412a34:	pop    edx
  412a35:	dec    edx
  412a36:	push   es
  412a37:	nop    DWORD PTR [eax+0x57]
  412a3b:	dec    edi
  412a3c:	adc    BYTE PTR [ebx+0x35],bh
  412a3f:	das    
  412a40:	mov    bl,0xb6
  412a42:	xor    edx,esp
  412a44:	pop    ss
  412a45:	inc    edx
  412a46:	stos   BYTE PTR es:[edi],al
  412a47:	and    BYTE PTR ds:[edx],bh
  412a4a:	jl     0x412a33
  412a4c:	add    eax,0x8c7367ba
  412a51:	pop    ebx
  412a52:	ret    0x63ed
  412a55:	(bad)  
  412a56:	icebp  
  412a57:	sar    BYTE PTR [edx],1
  412a59:	clc    
  412a5a:	ret    
  412a5b:	sub    edi,DWORD PTR [eax+0x55]
  412a5e:	and    ecx,0x3339ed07
  412a64:	xor    ecx,ebx
  412a66:	adc    esp,DWORD PTR [esi]
  412a68:	frstor [eax]
  412a6a:	mov    edx,0xf6b3e77c
  412a6f:	cmp    eax,0x8456f11f
  412a74:	adc    al,ch
  412a76:	daa    
  412a77:	repz pushw ds
  412a7a:	add    DWORD PTR [edx+0x4ef8656c],edi
  412a80:	or     DWORD PTR [edi],esi
  412a82:	mov    WORD PTR [eax-0x72d9d373],cs
  412a88:	shl    DWORD PTR [eax],1
  412a8a:	xor    eax,0xe5201a78
  412a8f:	mov    dl,0x95
  412a91:	bnd call 0xb212ddc
  412a97:	xor    esp,eax
  412a99:	mov    WORD PTR [ebp-0x7f2764f6],es
  412a9f:	pop    esi
  412aa0:	sub    DWORD PTR [edx+0x40a0d905],0xc9249bc9
  412aaa:	mov    dl,0x90
  412aac:	pop    ebp
  412aad:	jmp    0x84cb:0xbca8c449
  412ab4:	daa    
  412ab5:	rol    al,1
  412ab7:	add    DWORD PTR [esi],ebp
  412ab9:	push   es
  412aba:	popf   
  412abb:	pop    ss
  412abc:	cmp    DWORD PTR [esi],esp
  412abe:	imul   esp,DWORD PTR [esi-0x6fa679da],0xf97950dd
  412ac8:	out    0x6c,eax
  412aca:	rcl    cl,1
  412acc:	(bad)  
  412acd:	xor    dl,dh
  412acf:	(bad)  
  412ad0:	lock cmp ah,BYTE PTR [ecx+edi*8]
  412ad4:	push   esi
  412ad5:	inc    eax
  412ad6:	mov    ecx,0x866b2cd6
  412adb:	retf   
  412adc:	nop
  412add:	pop    ebp
  412ade:	inc    ebp
  412adf:	es mov esp,0xe9b5570f
  412ae5:	into   
  412ae6:	clc    
  412ae7:	jle    0x412ab0
  412ae9:	push   edx
  412aea:	sub    al,0x1e
  412aec:	ds fs nop
  412aef:	dec    BYTE PTR [esi+ebp*2-0x1f]
  412af3:	push   edx
  412af4:	ret    0x3913
  412af7:	inc    edx
  412af8:	mov    cl,0x21
  412afa:	or     bh,BYTE PTR [ebx+edx*2]
  412afd:	mov    fs,WORD PTR [edi+ecx*8-0x7de21978]
  412b04:	enter  0xd47f,0xe2
  412b08:	cmp    bh,BYTE PTR [ebp+0x46452215]
  412b0e:	out    0x15,eax
  412b10:	in     eax,dx
  412b11:	mov    edx,DWORD PTR [edx+0x6f]
  412b14:	mov    ah,0xba
  412b16:	dec    edx
  412b17:	xchg   edx,eax
  412b18:	in     eax,dx
  412b19:	mov    ds:0xad4418c,eax
  412b1e:	retf   
  412b1f:	sbb    eax,0x79e1fe4f
  412b24:	pop    es
  412b25:	or     ecx,DWORD PTR [ebp-0x4beca279]
  412b2b:	loope  0x412af2
  412b2d:	or     dh,BYTE PTR [ebx]
  412b2f:	lock lea eax,[ebx]
  412b32:	in     al,0xc6
  412b34:	out    dx,al
  412b35:	(bad)  
  412b36:	cmp    BYTE PTR [esi-0x37bbf06e],dl
  412b3c:	into   
  412b3d:	sub    al,0x66
  412b3f:	fsubr  DWORD PTR [eax]
  412b41:	leave  
  412b42:	(bad)  
  412b43:	bound  esp,QWORD PTR [ebp+0x4b]
  412b46:	jmp    0x412adc
  412b48:	pop    DWORD PTR [ebx]
  412b4a:	jne    0x412bb5
  412b4c:	(bad)  
  412b4e:	scas   eax,DWORD PTR es:[edi]
  412b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b50:	shl    BYTE PTR [edi-0x2bfd4a3d],0xd7
  412b57:	mov    ebx,0xebe1637
  412b5c:	jg     0x412bcd
  412b5e:	xchg   edi,eax
  412b5f:	call   edi
  412b61:	test   al,0x59
  412b63:	push   eax
  412b64:	loope  0x412b01
  412b66:	push   esi
  412b67:	stos   BYTE PTR es:[edi],al
  412b68:	mov    ecx,0x4a837ca4
  412b6d:	(bad)  ds:0x98e45da3
  412b73:	in     al,dx
  412b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b75:	mov    bl,0x77
  412b77:	out    0x36,eax
  412b79:	jnp    0x412b96
  412b7b:	mov    bh,0xec
  412b7d:	push   ds
  412b7e:	cli    
  412b7f:	dec    esp
  412b80:	cs pop ebp
  412b82:	dec    ebx
  412b83:	push   0x6c74f125
  412b88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b89:	cmp    ecx,edi
  412b8b:	stc    
  412b8c:	in     eax,dx
  412b8d:	jecxz  0x412b6f
  412b8f:	lods   eax,DWORD PTR ds:[esi]
  412b90:	lds    ebx,FWORD PTR [edi]
  412b92:	add    eax,0x740890c8
  412b97:	sbb    eax,0x65b8cfb0
  412b9c:	ret    
  412b9d:	or     al,0xc
  412b9f:	(bad)  
  412ba0:	shl    BYTE PTR [edi],cl
  412ba2:	bound  edi,QWORD PTR [edi+0x41]
  412ba5:	inc    ebx
  412ba6:	repz std 
  412ba8:	pop    es
  412ba9:	mov    esi,0xe66ef20
  412bae:	xchg   esp,eax
  412baf:	scas   al,BYTE PTR es:[edi]
  412bb0:	lea    edi,cs:[eax]
  412bb3:	out    dx,eax
  412bb4:	call   0x1353:0x3b27e94d
  412bbb:	jecxz  0x412bab
  412bbd:	dec    ebx
  412bbe:	push   0x19
  412bc0:	adc    eax,0xb0524dee
  412bc5:	nop
  412bc6:	cmp    al,0x34
  412bc8:	in     al,dx
  412bc9:	stc    
  412bca:	jecxz  0x412c1a
  412bcc:	xor    al,0x93
  412bce:	arpl   WORD PTR [esi+ebp*8+0x33],si
  412bd2:	fs and eax,0x30e7a031
  412bd8:	pop    ds
  412bd9:	in     al,dx
  412bda:	nop
  412bdb:	out    dx,al
  412bdc:	jnp    0x412b66
  412bde:	mov    BYTE PTR [eax+0x68bb1b4a],ah
  412be4:	sub    DWORD PTR [eax+0x53],0x90147683
  412beb:	gs or  eax,0x126c2633
  412bf1:	xchg   eax,edi
  412bf3:	sbb    eax,0x261bac2c
  412bf8:	imul   ebp,DWORD PTR [esi+0x73],0x2b
  412bfc:	push   edi
  412bfd:	lock loopne 0x412c48
  412c00:	jmp    0x5e82:0xe4d64b4f
  412c07:	push   esp
  412c08:	nop
  412c09:	xchg   ecx,eax
  412c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c0b:	cmp    dh,BYTE PTR [edx+0x29473156]
  412c11:	add    ch,bh
  412c13:	fnstenv [edi+0x41025fa3]
  412c19:	push   ebp
  412c1a:	push   ebp
  412c1b:	fsub   DWORD PTR [ebx+0x39]
  412c1e:	sysexit 
  412c20:	sub    bl,bh
  412c22:	out    0x91,eax
  412c24:	and    edi,DWORD PTR [ecx+0x12]
  412c27:	daa    
  412c28:	iret   
  412c29:	ss retf 0xefe4
  412c2d:	fcmovnbe st,st(4)
  412c2f:	pop    esp
  412c30:	mov    esp,0xe99e8d95
  412c35:	es ds sahf 
  412c38:	sahf   
  412c39:	add    DWORD PTR [eax+0x5e5befea],esi
  412c3f:	ja     0x412bee
  412c41:	outs   dx,DWORD PTR ds:[esi]
  412c42:	jl     0x412c60
  412c44:	dec    edx
  412c45:	mov    bl,0x60
  412c47:	in     al,0x9a
  412c49:	pop    edx
  412c4a:	je     0x412bdb
  412c4c:	out    dx,al
  412c4d:	loopne 0x412bdc
  412c4f:	pushf  
  412c50:	jp     0x412bda
  412c52:	sbb    eax,0x4e245dab
  412c57:	cmp    eax,0x2b2c0dc5
  412c5c:	adc    bl,cl
  412c5e:	lods   eax,DWORD PTR ds:[esi]
  412c5f:	fistp  QWORD PTR [edx]
  412c61:	(bad)  
  412c62:	fucomi st,st(3)
  412c64:	xlat   BYTE PTR ds:[ebx]
  412c65:	xchg   ebp,eax
  412c66:	push   ss
  412c67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c68:	sbb    edx,DWORD PTR [ebx]
  412c6a:	xor    DWORD PTR [edi-0x18ea809e],esp
  412c70:	jmp    0xc1b8:0x224eda7f
  412c77:	push   ss
  412c78:	mov    ds:0xed0e532f,eax
  412c7d:	(bad)  
  412c7e:	lahf   
  412c7f:	call   0x89123d38
  412c84:	fidiv  WORD PTR [ebp-0x5babb89e]
  412c8a:	pop    ebx
  412c8b:	xor    bl,BYTE PTR [esi+0x578ef660]
  412c91:	inc    eax
  412c92:	xchg   esp,eax
  412c93:	mov    ah,0x26
  412c95:	inc    esp
  412c96:	adc    al,0x75
  412c98:	pop    es
  412c99:	std    
  412c9a:	dec    ecx
  412c9b:	mov    ecx,0xbf5d0563
  412ca0:	jne    0x412ce0
  412ca2:	fcmovnb st,st(6)
  412ca4:	mov    ds:0x40b7cbe0,eax
  412ca9:	cmp    BYTE PTR [ecx+edi*8+0x2e],ch
  412cad:	pop    es
  412cae:	jns    0x412d1e
  412cb0:	xor    DWORD PTR [eax+ecx*2+0xec346fd],0xce98e97e
  412cbb:	xor    BYTE PTR [ebp-0x1e],dh
  412cbe:	push   ecx
  412cbf:	je     0x412d25
  412cc1:	pusha  
  412cc2:	jns    0x412c83
  412cc4:	cmc    
  412cc5:	add    dh,bl
  412cc7:	pop    ecx
  412cc8:	pop    esi
  412cc9:	jne    0x412c8b
  412ccb:	mov    edi,0x8395dcb
  412cd0:	sahf   
  412cd1:	js     0x412d47
  412cd3:	mov    ebx,DWORD PTR [ecx]
  412cd5:	mov    edx,0xf4bca46d
  412cda:	dec    ecx
  412cdb:	jb     0x412cf3
  412cdd:	mov    bh,0x63
  412cdf:	jle    0x412cf9
  412ce1:	rol    ch,cl
  412ce3:	pop    edx
  412ce4:	fld    QWORD PTR [edi-0x73378355]
  412cea:	imul   ebx,DWORD PTR [ebx+edx*1-0xe],0x7edbdd6f
  412cf2:	adc    al,0xd5
  412cf4:	pop    ds
  412cf5:	xchg   DWORD PTR [eax+ebp*2-0x2b],esi
  412cf9:	push   es
  412cfa:	imul   esi,DWORD PTR [ecx+0x2e9d84a6],0xffffffb8
  412d01:	push   esi
  412d02:	cmp    esi,eax
  412d04:	jne    0x412c8b
  412d06:	je     0x412d1d
  412d08:	not    BYTE PTR [ebx+0x39]
  412d0b:	jo     0x412d5e
  412d0d:	mov    WORD PTR [edi-0x2eb36dbe],ds
  412d13:	and    BYTE PTR [eax+0x69],0x81
  412d17:	add    ecx,ecx
  412d19:	into   
  412d1a:	xor    edi,DWORD PTR [eax-0x22a4b893]
  412d20:	icebp  
  412d21:	fs pop es
  412d23:	loopne 0x412cc2
  412d25:	jne    0x412cbc
  412d27:	mov    ?,WORD PTR [ebx]
  412d29:	inc    esp
  412d2a:	rep stos BYTE PTR es:[edi],al
  412d2c:	ret    
  412d2d:	rcl    BYTE PTR [ecx-0x17],0xbe
  412d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d32:	inc    edi
  412d33:	xor    esp,DWORD PTR [ebx]
  412d35:	mov    al,0x4a
  412d37:	pop    esp
  412d38:	daa    
  412d39:	xchg   ecx,edx
  412d3b:	cmp    BYTE PTR [esp+ebp*8],0x42
  412d3f:	push   eax
  412d40:	xor    dl,BYTE PTR [eax]
  412d42:	scas   eax,DWORD PTR es:[edi]
  412d43:	pop    esi
  412d44:	jl     0x412d17
  412d46:	adc    eax,0x2302e0c1
  412d4b:	(bad)  
  412d4c:	mov    edi,0xcb79b576
  412d51:	mov    edx,0x9c2b8ae8
  412d56:	mov    DWORD PTR [ebp-0x10],ebx
  412d59:	mov    DWORD PTR ds:0x428465,0xc27
  412d63:	mov    ebx,DWORD PTR [ebp+0xc]
  412d66:	xor    eax,edi
  412d68:	xor    DWORD PTR ds:0x42842d,0x622f
  412d72:	xor    ecx,edx
  412d74:	mov    DWORD PTR ds:0x428465,0x97b
  412d7e:	mov    DWORD PTR [ebp-0x18],0xa5069aae
  412d85:	mov    DWORD PTR ds:0x42857d,0x75c6
  412d8f:	mov    DWORD PTR [ebp-0x1c],0xa50693ae
  412d96:	mov    DWORD PTR [ebp-0xc],ebx
  412d99:	mov    DWORD PTR ds:0x428559,0x6dfc
  412da3:	cmp    eax,DWORD PTR [ebp-0x10]
  412da6:	jne    0x412db4
  412dac:	cmp    ecx,ebx
  412dae:	je     0x414af6
  412db4:	mov    eax,DWORD PTR [ebp-0x20]
  412db7:	sub    eax,0x3b59
  412dbc:	mov    eax,DWORD PTR [ebp-0x20]
  412dbf:	xor    ecx,ecx
  412dc1:	shld   ecx,eax,0x2
  412dc5:	xor    DWORD PTR ds:0x428411,0x4284e9
  412dcf:	shl    eax,0x2
  412dd2:	add    DWORD PTR ds:0x428449,0x4284e1
  412ddc:	xor    ecx,edx
  412dde:	cmp    DWORD PTR ds:0x4284e1,0x0
  412de5:	not    edx
  412de7:	not    edx
  412de9:	jmp    0x412e3e
  412dee:	mov    DWORD PTR ds:0x42855d,edx
  412df4:	not    edx
  412df6:	cmp    DWORD PTR ds:0x4284e1,0x0
  412dfd:	je     0x412e29
  412e03:	push   0x8204
  412e08:	push   DWORD PTR [ebp-0x28]
  412e0b:	call   DWORD PTR ds:0x42e010
  412e11:	mov    edx,DWORD PTR ds:0x428429
  412e17:	xor    DWORD PTR ds:0x428559,edx
  412e1d:	mov    edx,DWORD PTR ds:0x428579
  412e23:	sub    DWORD PTR ds:0x428575,edx
  412e29:	inc    edx
  412e2a:	adc    edx,DWORD PTR ds:0x428575
  412e30:	xor    edx,edx
  412e32:	xor    edx,DWORD PTR ds:0x428471
  412e38:	adc    DWORD PTR ds:0x428569,edx
  412e3e:	mov    edx,DWORD PTR [ebp+0x8]
  412e41:	xor    eax,edi
  412e43:	mov    edi,DWORD PTR [ebp+0xc]
  412e46:	mov    DWORD PTR ds:0x428361,0x757
  412e50:	cmp    eax,edx
  412e52:	mov    DWORD PTR ds:0x428331,0x1fab
  412e5c:	jne    0x412e74
  412e62:	cmp    ecx,edi
  412e64:	mov    DWORD PTR ds:0x428375,0x4385
  412e6e:	je     0x414af6
  412e74:	add    eax,DWORD PTR ds:0x428431
  412e7a:	mov    eax,DWORD PTR [ebp-0x1c]
  412e7d:	neg    DWORD PTR ds:0x428339
  412e83:	mov    ecx,DWORD PTR [ebp-0x1c]
  412e86:	push   0xfffffffe
  412e88:	and    DWORD PTR ds:0x428371,edx
  412e8e:	pop    ebx
  412e8f:	or     DWORD PTR ds:0x42857d,edx
  412e95:	jmp    0x4131ce
  412e9a:	imul   ebx,DWORD PTR [edi+0x1cbccb74],0xf12aa079
  412ea4:	and    BYTE PTR [esi-0x6dc9aa2d],bl
  412eaa:	mov    WORD PTR [eax-0x42],?
  412ead:	mov    esi,0xbebec4ed
  412eb2:	mov    edi,0xd3dcac18
  412eb7:	and    ecx,DWORD PTR [esi]
  412eb9:	xchg   ecx,eax
  412eba:	mov    ah,0x55
  412ebc:	neg    DWORD PTR [ecx]
  412ebe:	or     al,0x8b
  412ec0:	mov    esi,0xf8b9943f
  412ec5:	cmp    eax,0x6688988c
  412eca:	mov    dh,0x37
  412ecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ecd:	mov    ch,0xb4
  412ecf:	out    0xb5,eax
  412ed1:	pop    esi
  412ed2:	ins    BYTE PTR es:[edi],dx
  412ed3:	cmp    esi,edi
  412ed5:	inc    ebp
  412ed6:	fst    QWORD PTR [esi-0x7d]
  412ed9:	mov    ds:0xe53ba8b3,eax
  412ede:	scas   eax,DWORD PTR es:[edi]
  412edf:	inc    esi
  412ee0:	out    0x6b,al
  412ee2:	xlat   BYTE PTR ds:[ebx]
  412ee3:	inc    ebp
  412ee4:	cmc    
  412ee5:	dec    ecx
  412ee6:	inc    edi
  412ee7:	sub    bh,BYTE PTR [ecx+0x639edd2a]
  412eed:	retfw  
  412eef:	sar    BYTE PTR ds:0xad4205c0,cl
  412ef5:	scas   al,BYTE PTR es:[edi]
  412ef6:	cmp    eax,DWORD PTR [eax]
  412ef8:	pop    es
  412ef9:	sub    esi,DWORD PTR [eax+0x2b192ea4]
  412eff:	inc    ebp
  412f00:	add    DWORD PTR [ecx+0x351b419b],eax
  412f06:	cwde   
  412f07:	sbb    ecx,DWORD PTR [edi+0x56693a41]
  412f0d:	add    DWORD PTR [esi],ebp
  412f0f:	xor    eax,0xea0880ab
  412f14:	adc    edi,DWORD PTR [edi]
  412f16:	inc    eax
  412f17:	fidivr WORD PTR [ecx+ebx*2]
  412f1a:	aas    
  412f1b:	sub    cl,dh
  412f1d:	jnp    0x412f16
  412f1f:	sub    eax,0x4d6972f6
  412f24:	push   0xffffffc2
  412f26:	add    ch,BYTE PTR [edx]
  412f28:	mov    DWORD PTR [edx],esi
  412f2a:	push   ss
  412f2b:	inc    eax
  412f2c:	dec    ecx
  412f2d:	inc    edi
  412f2e:	pop    ds
  412f2f:	jmp    0xe48c6a6
  412f34:	pop    edx
  412f35:	popf   
  412f36:	xor    dl,BYTE PTR [edi+0x39cbd0a8]
  412f3c:	in     al,0xc7
  412f3e:	xchg   ecx,eax
  412f3f:	lods   al,BYTE PTR ds:[esi]
  412f40:	and    eax,0xdf92a31a
  412f45:	loopne 0x412f13
  412f47:	jge    0x412fc3
  412f49:	adc    ch,ch
  412f4b:	adc    bl,BYTE PTR [edx+eax*4]
  412f4e:	popa   
  412f4f:	adc    ebp,DWORD PTR [eax-0x3e]
  412f52:	iret   
  412f53:	rcr    eax,cl
  412f55:	xchg   edx,eax
  412f56:	push   es
  412f57:	outs   dx,DWORD PTR ds:[si]
  412f59:	fist   DWORD PTR [edx-0x725bcedb]
  412f5f:	aaa    
  412f60:	pop    ss
  412f61:	inc    esp
  412f62:	and    dl,BYTE PTR [ecx+ebp*8-0x2e]
  412f66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f67:	lea    ax,[ebx-0x1a874eda]
  412f6e:	lds    edi,FWORD PTR [ebx+0x36efe79d]
  412f74:	mov    WORD PTR [esi],ss
  412f76:	jno    0x412fe0
  412f78:	mov    ebp,0x3c96ebca
  412f7d:	lds    esi,FWORD PTR [ebx-0x56]
  412f80:	push   eax
  412f81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f82:	(bad)  
  412f83:	sahf   
  412f84:	outs   dx,DWORD PTR ds:[esi]
  412f85:	push   edi
  412f86:	mov    DWORD PTR [eax-0xcaf05a6],edx
  412f8c:	jns    0x7745be88
  412f92:	pusha  
  412f93:	push   0x24
  412f95:	push   ebp
  412f96:	ins    DWORD PTR es:[edi],dx
  412f97:	ficom  WORD PTR [ebx+0x23]
  412f9a:	cdq    
  412f9b:	fwait
  412f9c:	mov    ds:0x9557ce9d,al
  412fa1:	fsubr  QWORD PTR [ebp+0x5902d60c]
  412fa7:	xor    cl,dh
  412fa9:	adc    DWORD PTR [ecx],0xffffff87
  412fac:	or     al,0xb8
  412fae:	mov    DWORD PTR [ebp+0x1a],edx
  412fb1:	cs lahf 
  412fb3:	xchg   esi,eax
  412fb4:	clc    
  412fb5:	outs   dx,BYTE PTR ds:[esi]
  412fb6:	scas   eax,DWORD PTR es:[edi]
  412fb7:	adc    al,0xf2
  412fb9:	dec    ebp
  412fba:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fbc:	or     esp,DWORD PTR [ebp+0x45ea36c]
  412fc2:	xchg   esp,edi
  412fc4:	mov    WORD PTR [edx+0x3a4595f6],?
  412fca:	pop    ebp
  412fcb:	idiv   DWORD PTR [eax+eiz*1+0x43]
  412fcf:	xchg   edi,eax
  412fd0:	rcr    BYTE PTR [ebp-0xec4f8fe],0xda
  412fd7:	out    0xfc,eax
  412fd9:	mov    ?,WORD PTR [esi]
  412fdb:	in     eax,dx
  412fdc:	push   ebp
  412fdd:	pop    esi
  412fde:	push   ss
  412fdf:	xor    DWORD PTR [edi],ebx
  412fe1:	mov    al,0xa2
  412fe3:	and    eax,0x8
  412fe6:	fxch   st(2)
  412fe8:	mov    ds:0x621cb5eb,eax
  412fed:	nop
  412fee:	xchg   edx,ebp
  412ff0:	call   0x4002:0xa9947bd2
  412ff7:	pop    ecx
  412ff8:	outs   dx,BYTE PTR ds:[esi]
  412ff9:	pop    ss
  412ffa:	or     esi,DWORD PTR [eax-0x34319a86]
  413000:	push   edx
  413001:	fst    QWORD PTR [ebx+0x4e643c37]
  413007:	lods   al,BYTE PTR ss:[esi]
  413009:	call   FWORD PTR [esi]
  41300b:	(bad)  
  41300c:	jle    0x413062
  41300e:	push   0x30
  413010:	cmp    edx,ebx
  413012:	jmp    0x7f9b:0x55d5c839
  413019:	fldcw  WORD PTR [ecx+0x3a81e8dd]
  41301f:	cmc    
  413020:	cdq    
  413021:	push   esi
  413022:	test   DWORD PTR [esp+eiz*2-0x242dc98a],esi
  413029:	push   sp
  41302b:	inc    edx
  41302c:	xor    eax,ecx
  41302e:	es mov esi,0x9a75bc71
  413034:	hlt    
  413035:	mov    dl,0xbb
  413037:	push   ss
  413038:	outs   dx,DWORD PTR ds:[esi]
  413039:	push   es
  41303a:	sbb    eax,0x217a2ce4
  41303f:	xor    al,0xa8
  413041:	or     al,0x44
  413043:	rcr    DWORD PTR [edx+0x60],1
  413046:	lods   eax,DWORD PTR ds:[esi]
  413047:	mov    dh,0x37
  413049:	retf   0xbbaa
  41304c:	jne    0x413066
  41304e:	gs out dx,al
  413050:	sbb    al,0xb7
  413052:	inc    ecx
  413053:	add    al,BYTE PTR [edi]
  413055:	xchg   ebx,eax
  413056:	ins    DWORD PTR es:[edi],dx
  413057:	mov    dl,0xa1
  413059:	jno    0x412fe7
  41305b:	or     eax,0x7b309c30
  413060:	sti    
  413061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413062:	jbe    0x413068
  413064:	adc    edx,DWORD PTR [edx+0x7d]
  413067:	cdq    
  413068:	and    al,0x2a
  41306a:	mov    esp,0xab2f95e0
  41306f:	into   
  413070:	repnz mov ds:0xa06980ea,eax
  413076:	xor    DWORD PTR [ebp+0x6dd0a763],esp
  41307c:	sub    BYTE PTR [ecx+ecx*4],bh
  41307f:	mov    dh,ch
  413081:	mov    dl,BYTE PTR [ebp+ebp*2-0x1e96a481]
  413088:	adc    al,dl
  41308a:	in     al,0x40
  41308c:	imul   esi,DWORD PTR [ebp+0x35],0x8afd504c
  413093:	in     eax,0x7d
  413095:	sbb    BYTE PTR [ecx],0x4a
  413098:	and    DWORD PTR [eax],ebx
  41309a:	mov    ecx,0x9b39c20e
  41309f:	jle    0x413033
  4130a1:	fld    TBYTE PTR [ebx+0x26]
  4130a4:	xchg   ebx,eax
  4130a5:	rcr    cl,cl
  4130a7:	mov    ebx,0x6973610a
  4130ac:	ficomp WORD PTR [edi+0x1ae2a209]
  4130b2:	stos   BYTE PTR es:[edi],al
  4130b3:	inc    esp
  4130b4:	sub    ecx,DWORD PTR [ebx+0x2d]
  4130b7:	dec    edx
  4130b8:	loope  0x413048
  4130ba:	adc    ah,BYTE PTR [eax]
  4130bc:	adc    eax,0xef26540a
  4130c1:	mov    al,0x79
  4130c3:	out    0xd7,al
  4130c5:	jl     0x4130c0
  4130c7:	dec    eax
  4130c8:	iret   
  4130c9:	lds    edi,FWORD PTR [ebx+0x3d]
  4130cc:	push   ss
  4130cd:	imul   eax,DWORD PTR [eax+0x47963fe],0x20
  4130d4:	fs inc edi
  4130d6:	push   dx
  4130d8:	mov    al,ds:0x4dc5090e
  4130dd:	add    BYTE PTR [ebp-0x790fd3f0],ah
  4130e3:	neg    dl
  4130e5:	and    DWORD PTR [edx+0x1eea22e],esi
  4130eb:	(bad)  
  4130ec:	(bad)  
  4130ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130ee:	mov    ds:0xeb8370e3,al
  4130f3:	dec    edi
  4130f4:	jns    0x41311c
  4130f6:	call   FWORD PTR [ecx+0x9]
  4130f9:	scas   eax,DWORD PTR es:[edi]
  4130fa:	mov    edx,0x111a32a4
  4130ff:	imul   edx,eax,0xffffff92
  413102:	add    eax,0x424d4fbe
  413107:	(bad)  
  413108:	or     al,BYTE PTR [eax]
  41310a:	call   0xcfccd974
  41310f:	fs int 0x59
  413112:	ja     0x413192
  413114:	pusha  
  413115:	in     al,0xed
  413117:	cwde   
  413118:	jno    0x4130c5
  41311a:	clc    
  41311b:	(bad)  
  41311c:	neg    DWORD PTR [edi+0x3f]
  41311f:	daa    
  413120:	mov    DWORD PTR [eax],ebx
  413122:	sbb    DWORD PTR [ecx-0x59],0x635347b2
  413129:	fcom   DWORD PTR [ecx+0x6a]
  41312c:	(bad)  
  41312d:	jo     0x4130be
  41312f:	mov    ds:0x1932ef31,al
  413134:	mov    ds:0x54f319b5,eax
  413139:	xchg   edi,eax
  41313a:	cmp    DWORD PTR [edx-0x6603deaa],edx
  413140:	xchg   BYTE PTR [eax-0x2d],ch
  413143:	xlat   BYTE PTR ds:[ebx]
  413144:	out    dx,al
  413145:	jg     0x413138
  413147:	sar    BYTE PTR [eax+0x496d1f91],cl
  41314d:	xor    edi,ebp
  41314f:	adc    eax,0x59237b5c
  413154:	jno    0x413164
  413156:	fucomip st,st(7)
  413158:	mov    gs,WORD PTR [edi]
  41315a:	fs stos BYTE PTR es:[edi],al
  41315c:	and    edx,DWORD PTR [edx+eax*8]
  41315f:	mov    bh,BYTE PTR [esi]
  413161:	mov    al,ds:0x79e1dee7
  413166:	mov    edi,0xaba62cb8
  41316b:	or     cl,BYTE PTR [edx+0x3972e6ed]
  413171:	dec    edx
  413172:	pop    ebx
  413173:	xchg   esi,eax
  413174:	(bad)  
  413175:	cmp    ah,ch
  413177:	test   eax,0xa4a9b17f
  41317c:	adc    eax,0x332b5002
  413181:	lods   al,BYTE PTR ds:[esi]
  413182:	mul    ah
  413184:	or     edi,edx
  413186:	sub    al,0xe5
  413188:	sub    eax,0xd696d03c
  41318d:	mov    ch,0x3f
  41318f:	std    
  413190:	cmc    
  413191:	ror    BYTE PTR [edx],0xce
  413194:	dec    edi
  413195:	inc    ecx
  413196:	and    eax,0x659ab4f2
  41319b:	mov    esi,0xb9a0bdf7
  4131a0:	les    ecx,FWORD PTR [bp+di+0x2ac5]
  4131a5:	ret    0x2a1f
  4131a8:	aad    0x2f
  4131aa:	ret    
  4131ab:	inc    ebp
  4131ac:	iret   
  4131ad:	cmp    esi,DWORD PTR [eax]
  4131af:	jmp    0x4d8f4d2
  4131b4:	inc    ebp
  4131b5:	cmc    
  4131b6:	out    0xf7,al
  4131b8:	mov    WORD PTR [edi],gs
  4131ba:	add    eax,0x3db4f4b8
  4131bf:	cwde   
  4131c0:	mov    bl,0x16
  4131c2:	xor    DWORD PTR es:[ecx],0x3ee2b052
  4131c9:	addr16 jl 0x413225
  4131cc:	cs mov dl,0x33
  4131cf:	retf   
  4131d0:	xor    edi,edi
  4131d2:	add    edi,DWORD PTR ds:0x428435
  4131d8:	sub    DWORD PTR ds:0x428415,edi
  4131de:	shl    ecx,0x1e
  4131e1:	xor    DWORD PTR ds:0x428365,0x3d84
  4131eb:	mov    edi,0xa5069baf
  4131f0:	xor    eax,edi
  4131f2:	shr    eax,0x2
  4131f5:	jmp    0x41352e
  4131fa:	jmp    0x8a913c60
  4131ff:	mov    eax,0x40087bbc
  413204:	push   0xffffffd1
  413206:	dec    ebp
  413207:	aad    0xc5
  413209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41320a:	mov    esp,0xedbebe7e
  41320f:	les    edi,FWORD PTR [esi-0x19e52842]
  413215:	xchg   ebx,eax
  413216:	fsub   DWORD PTR [edi]
  413218:	inc    ecx
  413219:	jecxz  0x4131e8
  41321b:	mov    eax,0xac7580c9
  413220:	pop    ebp
  413221:	xor    BYTE PTR [ebx+0x53b80605],ch
  413227:	mov    edi,0xe4f769f2
  41322c:	loopne 0x413277
  41322e:	call   0x5c3952d5
  413233:	jnp    0x41329a
  413235:	push   0xffffffee
  413237:	push   edi
  413238:	mov    ebx,ebx
  41323a:	cmp    al,BYTE PTR [ecx-0x71]
  41323d:	test   eax,0xcddae9dd
  413242:	lods   al,BYTE PTR ds:[esi]
  413243:	int    0xbf
  413245:	sub    DWORD PTR [ebx],ebx
  413247:	mov    DWORD PTR [ecx-0xa],esi
  41324a:	rcr    DWORD PTR [eax+0x60161a0f],0xb6
  413251:	shr    DWORD PTR [esi],cl
  413253:	outs   dx,BYTE PTR ds:[esi]
  413254:	je     0x4131e5
  413256:	aad    0xed
  413258:	push   edi
  413259:	popa   
  41325a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41325b:	mov    DWORD PTR [eax],esi
  41325d:	mov    ds:0xc2e0762a,eax
  413262:	inc    ebp
  413263:	dec    ebx
  413264:	jo     0x4132d5
  413266:	shl    edi,cl
  413268:	push   esi
  413269:	and    ecx,0xcad84faf
  41326f:	mov    ebp,edi
  413271:	out    0xdc,al
  413273:	sub    eax,0xf01a2169
  413278:	adc    bh,BYTE PTR [ebx]
  41327a:	or     eax,0x7975563e
  41327f:	out    dx,al
  413280:	cwde   
  413281:	add    ah,ch
  413283:	aaa    
  413284:	shr    DWORD PTR [eax+0x20],cl
  413287:	jge    0x4132d1
  413289:	je     0x41329b
  41328b:	jge    0x41323a
  41328d:	dec    eax
  41328e:	retf   
  41328f:	push   ebp
  413290:	xor    DWORD PTR [edi+0x246788a7],ebp
  413296:	xor    BYTE PTR [esi+0x16fa28cd],0x52
  41329d:	xchg   edi,eax
  41329e:	shl    bl,1
  4132a0:	push   esp
  4132a1:	sub    eax,0x80349431
  4132a6:	xchg   ebp,eax
  4132a7:	dec    eax
  4132a8:	ins    BYTE PTR es:[edi],dx
  4132a9:	mov    ds:0xd036dccf,eax
  4132ae:	sbb    al,0x82
  4132b1:	and    al,0x5c
  4132b3:	into   
  4132b4:	pop    es
  4132b5:	or     eax,0xd43b7c6
  4132ba:	inc    ebx
  4132bb:	cli    
  4132bc:	fs dec ecx
  4132be:	sub    bh,BYTE PTR [edi+0x510ae2ec]
  4132c4:	pushf  
  4132c5:	jbe    0x4132ca
  4132c7:	in     eax,dx
  4132c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132c9:	push   es
  4132ca:	addr16 inc eax
  4132cc:	inc    ebx
  4132cd:	outs   dx,BYTE PTR ds:[esi]
  4132ce:	out    dx,al
  4132cf:	jl     0x413327
  4132d1:	(bad)  
  4132d2:	aad    0x4b
  4132d4:	jns    0x4132f2
  4132d6:	cmp    al,0x96
  4132d8:	dec    ecx
  4132d9:	aad    0x8b
  4132db:	inc    edx
  4132dc:	sbb    al,0xb8
  4132de:	aad    0x42
  4132e0:	mov    bh,0x96
  4132e2:	jmp    0x1f6499de
  4132e7:	cli    
  4132e8:	fadd   st(5),st
  4132ea:	jae    0x4132dd
  4132ec:	imul   ebx
  4132ee:	out    dx,eax
  4132ef:	rcr    DWORD PTR [eax+ebp*2],cl
  4132f2:	mov    WORD PTR [esi*1+0x7a7f1905],fs
  4132f9:	and    BYTE PTR [ebp+0x590db60a],al
  4132ff:	cmp    DWORD PTR [ebp+0x68b8260f],eax
  413305:	mov    dl,0x20
  413307:	retf   0xa0b6
  41330a:	lods   eax,DWORD PTR es:[esi]
  41330c:	inc    esp
  41330d:	ret    
  41330e:	push   ebx
  41330f:	scas   al,BYTE PTR es:[edi]
  413310:	add    esi,DWORD PTR [esi]
  413312:	rcl    DWORD PTR [ecx-0x2],0xd3
  413316:	jg     0x4132a8
  413318:	mov    esi,0xab30f1c2
  41331d:	sbb    edx,DWORD PTR [ebx]
  41331f:	push   ss
  413320:	outs   dx,DWORD PTR ds:[esi]
  413321:	push   esi
  413322:	jo     0x413304
  413324:	or     ebx,DWORD PTR [esi+0x7d4885ff]
  41332a:	jno    0x413341
  41332c:	inc    edi
  41332d:	sbb    eax,0xb70e7a02
  413332:	jne    0x41339c
  413334:	add    BYTE PTR [ebx],cl
  413336:	cmc    
  413337:	out    dx,eax
  413338:	jle    0x4132bf
  41333a:	push   ecx
  41333b:	cs mov ebp,0x4ed47070
  413341:	test   BYTE PTR [ebp-0x48],ch
  413344:	arpl   WORD PTR [eax+0x57c0696a],bx
  41334a:	cmp    al,0x86
  41334c:	fstp   st(6)
  41334e:	and    eax,0xc559d260
  413353:	or     eax,0x352b7e7d
  413359:	dec    esp
  41335a:	iret   
  41335b:	pop    esi
  41335c:	push   esp
  41335d:	bound  ecx,QWORD PTR [ebx+0x64]
  413360:	jae    0x4133bc
  413362:	je     0x413395
  413364:	add    eax,0xf5f61a77
  413369:	aas    
  41336a:	arpl   WORD PTR [ebx],bp
  41336c:	arpl   WORD PTR [esi-0x34],di
  41336f:	adc    DWORD PTR [ecx-0x6c],ebp
  413372:	imul   ebp,DWORD PTR [ecx+0x71],0x19
  413376:	xor    dl,ah
  413378:	and    bh,BYTE PTR [ecx]
  41337a:	mov    ds:0x8f7449a6,eax
  41337f:	rcl    DWORD PTR [ecx+0xcc5d6e1],cl
  413385:	adc    cl,BYTE PTR [esp+esi*1]
  413388:	pop    eax
  413389:	sahf   
  41338a:	pop    ebp
  41338b:	cmp    al,0x96
  41338d:	sbb    ecx,0xffffff99
  413390:	pop    eax
  413391:	mov    WORD PTR [edi],fs
  413393:	add    esp,DWORD PTR [ebx+0x20ee305c]
  413399:	mov    ebp,0x434795e8
  41339e:	cmp    eax,0x31842bb5
  4133a3:	daa    
  4133a4:	adc    DWORD PTR [edx+0x60bb33e8],ebp
  4133aa:	js     0x4133c1
  4133ac:	lock xor dl,BYTE PTR [ebp+edx*4+0x3d]
  4133b1:	sbb    DWORD PTR [esi],edi
  4133b3:	hlt    
  4133b4:	(bad)  
  4133b5:	in     al,dx
  4133b6:	adc    al,0x15
  4133b8:	jne    0x4133fa
  4133ba:	cli    
  4133bb:	jno    0x4133d5
  4133bd:	out    dx,eax
  4133be:	jae    0x413352
  4133c0:	xor    eax,0x2910a6ec
  4133c5:	leave  
  4133c6:	jbe    0x413391
  4133c8:	xor    eax,0xe8b43d80
  4133cd:	lock sub BYTE PTR [ecx+0x65],al
  4133d1:	jnp    0x413420
  4133d3:	mov    ecx,0x71aa8c2b
  4133d8:	dec    ebx
  4133d9:	int    0xb3
  4133db:	push   0x1509c15c
  4133e0:	push   edx
  4133e1:	call   0x5dac38ba
  4133e6:	loop   0x413448
  4133e8:	jno    0x413467
  4133ea:	in     al,0x5
  4133ec:	ss jno 0x413445
  4133ef:	add    al,0x9
  4133f1:	iret   
  4133f2:	mov    esp,0x2fb9adb
  4133f7:	pop    esp
  4133f8:	dec    esp
  4133f9:	push   esp
  4133fa:	push   es
  4133fb:	dec    ebx
  4133fc:	dec    ebp
  4133fd:	loopne 0x4133b7
  4133ff:	adc    al,0x8f
  413401:	mov    eax,0xb6e3f2e0
  413406:	sbb    DWORD PTR [eax-0x20438850],esp
  41340c:	popa   
  41340d:	xchg   ebx,eax
  41340e:	jo     0x413430
  413410:	ret    
  413411:	mov    ebp,0x1077d90c
  413416:	jmp    0x2c4b:0xb546b5b0
  41341d:	aaa    
  41341e:	mov    edi,0xcefce3f9
  413423:	mov    ds,esp
  413425:	mov    ebx,edx
  413427:	or     eax,0x69b7bfd2
  41342c:	push   ebx
  41342d:	in     eax,dx
  41342e:	sub    edi,esi
  413430:	arpl   WORD PTR [edi+0x48],bx
  413433:	out    0xab,eax
  413435:	mov    bh,0x3d
  413437:	push   ds
  413438:	or     eax,DWORD PTR [eax+0x42ba76a3]
  41343e:	aad    0x5c
  413440:	dec    ebp
  413441:	sub    DWORD PTR [esp+ecx*4],ebx
  413444:	loope  0x41341c
  413446:	(bad)  
  413447:	(bad)  
  413449:	stc    
  41344a:	mov    eax,0x9593fa6e
  41344f:	pop    esi
  413450:	leave  
  413451:	adc    ebx,DWORD PTR [edx]
  413453:	sahf   
  413454:	add    ah,BYTE PTR [esi+0x107164f0]
  41345a:	aaa    
  41345b:	shl    DWORD PTR [ecx-0x48f1a368],cl
  413461:	std    
  413462:	xchg   ecx,eax
  413463:	cld    
  413464:	lods   al,BYTE PTR ds:[esi]
  413465:	in     eax,0x34
  413467:	push   es
  413468:	xchg   DWORD PTR [ebx+0x703f6493],ebx
  41346e:	mov    ds,WORD PTR [edi+0x38]
  413471:	xor    ebp,DWORD PTR [edi-0x5da0bd53]
  413477:	mov    ecx,0x62673fe9
  41347c:	pusha  
  41347d:	mov    al,0xcd
  41347f:	dec    ecx
  413480:	dec    esi
  413481:	cmp    BYTE PTR [edx+ebp*1-0x5e7cda5a],bl
  413488:	sbb    cl,BYTE PTR [ecx-0xae656a8]
  41348e:	sahf   
  41348f:	mov    ebp,DWORD PTR [edi]
  413491:	mov    ecx,0x416fefa8
  413496:	mov    ds:0xd87bf377,al
  41349b:	cmp    al,0x92
  41349d:	mov    bh,BYTE PTR [ecx]
  41349f:	lahf   
  4134a0:	ins    DWORD PTR es:[edi],dx
  4134a1:	cld    
  4134a2:	in     al,dx
  4134a3:	fiadd  WORD PTR [edx]
  4134a5:	and    ch,ch
  4134a7:	jecxz  0x4134f0
  4134a9:	popf   
  4134aa:	rol    BYTE PTR fs:[edx+0x1f],cl
  4134ae:	xchg   esp,eax
  4134af:	and    eax,eax
  4134b1:	xchg   ebx,eax
  4134b2:	(bad)  
  4134b3:	cmc    
  4134b4:	or     cl,ah
  4134b6:	into   
  4134b7:	mov    bh,0xdb
  4134b9:	mov    dh,0x7e
  4134bb:	push   0x7f
  4134bd:	test   eax,0xfcec2078
  4134c2:	lods   al,BYTE PTR ds:[esi]
  4134c3:	(bad)  
  4134c4:	daa    
  4134c5:	sub    DWORD PTR [edi],0xffffffe3
  4134c8:	mov    edx,0x407078e0
  4134cd:	dec    esp
  4134cf:	pop    esp
  4134d0:	or     ch,BYTE PTR [ebx-0x57a6f32e]
  4134d6:	add    al,0x3
  4134d8:	push   es
  4134d9:	aaa    
  4134da:	sbb    edx,edx
  4134dc:	pop    ecx
  4134dd:	mov    ah,al
  4134df:	popa   
  4134e0:	mov    eax,0xa84c6d2a
  4134e5:	mov    BYTE PTR [ecx-0x7e10426],0x33
  4134ec:	iret   
  4134ed:	cmp    eax,0xb378b4ce
  4134f2:	lds    ebp,FWORD PTR [edx-0x69]
  4134f5:	add    ecx,DWORD PTR [ebx-0x4f]
  4134f8:	not    DWORD PTR [eax+0x1c]
  4134fb:	and    al,0x41
  4134fd:	mov    eax,0x35145af4
  413502:	cmp    bh,bl
  413504:	stos   DWORD PTR es:[edi],eax
  413505:	es jne 0x413504
  413508:	in     eax,0xd1
  41350a:	pop    esp
  41350b:	inc    DWORD PTR [esi+0x607aca94]
  413511:	call   0x1347:0x2f524d85
  413518:	aam    0x21
  41351a:	push   eax
  41351b:	mov    dl,0xe1
  41351d:	jns    0x4134e3
  41351f:	pusha  
  413520:	inc    eax
  413521:	ud1    esi,DWORD PTR [eax-0x44]
  413525:	and    eax,0xcd881551
  41352a:	mov    bl,0xec
  41352c:	mov    dh,0xc0
  41352e:	or     eax,ecx
  413530:	cmp    DWORD PTR ds:0x428331,0x0
  413537:	mov    DWORD PTR ds:0x428441,0x5b09
  413541:	movzx  ecx,WORD PTR ds:0x428359
  413548:	jmp    0x413626
  41354d:	mov    DWORD PTR ds:0x42836d,0x463b
  413557:	cmp    DWORD PTR ds:0x428331,0x0
  41355e:	ja     0x413594
  413564:	push   0x1092
  413569:	push   0x34c2
  41356e:	push   DWORD PTR [ebp-0x10]
  413571:	push   0x63e1
  413576:	push   0x428295
  41357b:	push   DWORD PTR [ebp-0x24]
  41357e:	call   DWORD PTR ds:0x42e0d8
  413584:	adc    DWORD PTR ds:0x4284f9,0x3ae5
  41358e:	or     ecx,DWORD PTR ds:0x428549
  413594:	mov    ecx,DWORD PTR ds:0x4284d9
  41359a:	xor    DWORD PTR ds:0x428565,ecx
  4135a0:	add    DWORD PTR ds:0x4284c5,0x73c1
  4135aa:	xor    DWORD PTR ds:0x4284d1,0x45f8
  4135b4:	cmp    DWORD PTR ds:0x4284fd,0x0
  4135bb:	mov    ecx,0x9c7
  4135c0:	mov    DWORD PTR ds:0x42834d,0x5708
  4135ca:	mov    DWORD PTR ds:0x4284d1,0x67de
  4135d4:	jmp    0x413626
  4135d9:	mov    ecx,DWORD PTR ds:0x42834d
  4135df:	cmp    DWORD PTR ds:0x4284fd,0x0
  4135e6:	jl     0x413613
  4135ec:	push   DWORD PTR [ebp-0x14]
  4135ef:	push   DWORD PTR [ebp-0x10]
  4135f2:	push   DWORD PTR [ebp-0x28]
  4135f5:	call   DWORD PTR ds:0x42e0dc
  4135fb:	adc    DWORD PTR ds:0x42842d,edx
  413601:	mov    ecx,DWORD PTR ds:0x428341
  413607:	and    DWORD PTR ds:0x42854d,ecx
  41360d:	and    DWORD PTR ds:0x428355,edx
  413613:	mov    ecx,DWORD PTR ds:0x428421
  413619:	xor    ecx,DWORD PTR ds:0x428451
  41361f:	mov    DWORD PTR ds:0x428421,ecx
  413625:	dec    ecx
  413626:	mov    DWORD PTR [ebp-0xc],eax
  413629:	cmp    DWORD PTR ds:0x428449,0x0
  413630:	mov    DWORD PTR ds:0x428425,0x7db5
  41363a:	mov    DWORD PTR ds:0x42845d,edi
  413640:	jmp    0x4136bd
  413645:	mov    ecx,DWORD PTR ds:0x428335
  41364b:	mov    eax,ds:0x42843d
  413650:	cmp    DWORD PTR ds:0x428449,0x0
  413657:	je     0x4136a7
  41365d:	push   DWORD PTR [ebp-0x20]
  413660:	push   DWORD PTR [ebp-0x28]
  413663:	push   DWORD PTR [ebp-0x28]
  413666:	push   DWORD PTR [ebp-0xc]
  413669:	push   DWORD PTR [ebp-0x18]
  41366c:	push   DWORD PTR [ebp-0xc]
  41366f:	push   DWORD PTR [ebp-0x14]
  413672:	push   DWORD PTR [ebp-0x1c]
  413675:	push   DWORD PTR [ebp-0x20]
  413678:	push   DWORD PTR [ebp-0x14]
  41367b:	push   0x6fca
  413680:	push   DWORD PTR [ebp-0x14]
  413683:	push   0x1843
  413688:	call   DWORD PTR ds:0x42e014
  41368e:	movzx  ecx,BYTE PTR ds:0x42842d
  413695:	and    DWORD PTR ds:0x428549,ecx
  41369b:	sbb    ecx,0x7147
  4136a1:	and    DWORD PTR ds:0x4284c5,ebx
  4136a7:	mov    ecx,DWORD PTR ds:0x428475
  4136ad:	add    DWORD PTR ds:0x42841d,ecx
  4136b3:	and    DWORD PTR ds:0x42836d,0x5196
  4136bd:	mov    eax,ds:0x422708
  4136c2:	adc    DWORD PTR ds:0x428425,0x635d
  4136cc:	mov    DWORD PTR [ebp-0xc],eax
  4136cf:	cmp    DWORD PTR ds:0x4284d1,0x0
  4136d6:	mov    DWORD PTR ds:0x428345,0x6dcc
  4136e0:	mov    ecx,DWORD PTR ds:0x428441
  4136e6:	jmp    0x413753
  4136eb:	mov    DWORD PTR ds:0x4284dd,0x2cf
  4136f5:	mov    DWORD PTR ds:0x428581,0x621d
  4136ff:	cmp    DWORD PTR ds:0x4284d1,0x0
  413706:	jbe    0x41373d
  41370c:	push   0x4284d1
  413711:	push   0x428405
  413716:	push   0x2216
  41371b:	call   DWORD PTR ds:0x42e258
  413721:	and    ecx,ecx
  413723:	mov    ecx,DWORD PTR ds:0x4283ad
  413729:	mov    ecx,DWORD PTR [ecx]
  41372b:	add    DWORD PTR ds:0x42836d,ecx
  413731:	or     ecx,ecx
  413733:	sbb    DWORD PTR ds:0x4284ed,0x6873
  41373d:	sbb    DWORD PTR ds:0x4284f5,ecx
  413743:	adc    DWORD PTR ds:0x428471,0x1149
  41374d:	or     DWORD PTR ds:0x4284f1,edx
  413753:	mov    eax,DWORD PTR [ebp-0x28]
  413756:	cmp    DWORD PTR ds:0x428455,0x0
  41375d:	mov    ecx,0xa9f
  413762:	mov    DWORD PTR ds:0x42841d,0x1875
  41376c:	mov    DWORD PTR ds:0x4284f1,0x319d
  413776:	jmp    0x41383a
  41377b:	mov    DWORD PTR ds:0x4284e1,0x86c
  413785:	cmp    DWORD PTR ds:0x428455,0x0
  41378c:	jle    0x4137bf
  413792:	push   0x50b5
  413797:	call   DWORD PTR ds:0x42e25c
  41379d:	add    DWORD PTR ds:0x428365,0x737d
  4137a7:	sub    ecx,DWORD PTR ds:0x4284f1
  4137ad:	mov    ecx,DWORD PTR ds:0x428565
  4137b3:	xor    ecx,DWORD PTR ds:0x428431
  4137b9:	mov    DWORD PTR ds:0x428565,ecx
  4137bf:	inc    ecx
  4137c0:	movzx  ecx,BYTE PTR ds:0x428365
  4137c7:	sub    ecx,DWORD PTR ds:0x4284d1
  4137cd:	mov    DWORD PTR ds:0x428365,ecx
  4137d3:	cmp    DWORD PTR ds:0x42844d,0x0
  4137da:	not    ecx
  4137dc:	mov    DWORD PTR ds:0x42840d,0x5561
  4137e6:	jmp    0x41383a
  4137eb:	mov    DWORD PTR ds:0x428581,0x2772
  4137f5:	cmp    DWORD PTR ds:0x42844d,0x0
  4137fc:	jle    0x41381e
  413802:	push   0x5196
  413807:	push   0x42820f
  41380c:	call   DWORD PTR ds:0x42e260
  413812:	sbb    DWORD PTR ds:0x428369,ecx
  413818:	xor    ecx,DWORD PTR ds:0x42857d
  41381e:	and    DWORD PTR ds:0x42843d,edi
  413824:	inc    DWORD PTR ds:0x428451
  41382a:	add    DWORD PTR ds:0x428359,0x3293
  413834:	or     DWORD PTR ds:0x428425,ecx
  41383a:	mov    DWORD PTR [ebp-0x24],eax
  41383d:	mov    ecx,DWORD PTR [ebp-0x24]
  413840:	push   0x4
  413842:	sub    DWORD PTR ds:0x4284dd,0x4aeb
  41384c:	pop    eax
  41384d:	sbb    DWORD PTR ds:0x42855d,0x428359
  413857:	sub    eax,ecx
  413859:	cmp    DWORD PTR ds:0x428371,0x0
  413860:	mov    ecx,DWORD PTR ds:0x4284f1
  413866:	not    ecx
  413868:	movzx  ecx,BYTE PTR ds:0x428349
  41386f:	mov    ecx,DWORD PTR ds:0x428465
  413875:	jmp    0x4138c3
  41387a:	mov    DWORD PTR ds:0x4284e1,0x61cd
  413884:	cmp    DWORD PTR ds:0x428371,0x0
  41388b:	je     0x4138b5
  413891:	push   0x4284e5
  413896:	push   0x4282df
  41389b:	call   DWORD PTR ds:0x42e264
  4138a1:	or     DWORD PTR ds:0x428461,0x428425
  4138ab:	mov    DWORD PTR ds:0x428421,0x2055
  4138b5:	sub    ecx,DWORD PTR ds:0x42845d
  4138bb:	or     ecx,DWORD PTR ds:0x42840d
  4138c1:	neg    ecx
  4138c3:	mov    ecx,DWORD PTR [ebp-0x20]
  4138c6:	add    ecx,eax
  4138c8:	mov    DWORD PTR [ebp-0x30],ecx
  4138cb:	lea    eax,[ebp-0x3c]
  4138ce:	mov    DWORD PTR [ebp-0x38],eax
  4138d1:	mov    eax,DWORD PTR [ebp-0x18]
  4138d4:	mov    ecx,DWORD PTR [ebp-0x18]
  4138d7:	xor    eax,edi
  4138d9:	xor    ecx,ebx
  4138db:	shr    eax,0x2
  4138de:	shl    ecx,0x1e
  4138e1:	or     eax,ecx
  4138e3:	mov    DWORD PTR [ebp-0x2c],eax
  4138e6:	mov    DWORD PTR [ebp-0x8],0xa5069bbe
  4138ed:	mov    eax,DWORD PTR [ebp-0x8]
  4138f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4138f3:	xor    eax,edi
  4138f5:	xor    ecx,ebx
  4138f7:	shr    eax,0x2
  4138fa:	shl    ecx,0x1e
  4138fd:	or     ecx,eax
  4138ff:	push   ecx
  413900:	lea    eax,[ebp-0x8]
  413903:	push   eax
  413904:	lea    eax,[ebp-0x80]
  413907:	push   eax
  413908:	call   0x411c08
  41390d:	mov    eax,DWORD PTR [ebp-0x8]
  413910:	mov    ecx,DWORD PTR [ebp-0x8]
  413913:	xor    eax,edi
  413915:	xor    ecx,ebx
  413917:	shr    eax,0x2
  41391a:	shl    ecx,0x1e
  41391d:	or     ecx,eax
  41391f:	push   ecx
  413920:	lea    eax,[ebp-0x24]
  413923:	push   eax
  413924:	mov    eax,DWORD PTR [ebp+0x8]
  413927:	mov    ecx,DWORD PTR [ebp+0xc]
  41392a:	shrd   eax,ecx,0x2
  41392e:	shr    ecx,0x2
  413931:	mov    ecx,DWORD PTR [ebp+0x8]
  413934:	mov    edx,DWORD PTR [ebp+0xc]
  413937:	xor    eax,esi
  413939:	xor    edx,edx
  41393b:	or     eax,edx
  41393d:	lea    eax,[ebp+eax*4-0x7c]
  413941:	push   eax
  413942:	shl    ecx,0x1e
  413945:	call   0x411c08
  41394a:	mov    eax,DWORD PTR [ebp-0x8]
  41394d:	mov    ecx,DWORD PTR [ebp-0x8]
  413950:	xor    eax,edi
  413952:	xor    ecx,ebx
  413954:	shr    eax,0x2
  413957:	shl    ecx,0x1e
  41395a:	or     ecx,eax
  41395c:	push   ecx
  41395d:	lea    eax,[ebp-0x30]
  413960:	push   eax
  413961:	jmp    0x413c9a
  413966:	in     eax,dx
  413967:	dec    edi
  413968:	ret    
  413969:	in     al,dx
  41396a:	fs jl  0x413963
  41396d:	pop    ebx
  41396e:	push   0x6ee3e744
  413973:	jnp    0x413981
  413975:	xchg   edx,eax
  413976:	in     al,dx
  413977:	xchg   BYTE PTR [esi-0x413b1242],bh
  41397d:	mov    esi,0xdcf47e58
  413982:	aas    
  413983:	mul    ch
  413985:	cmp    BYTE PTR [edi+0x2209f5dd],dh
  41398b:	push   edx
  41398c:	jecxz  0x41394c
  41398e:	fadd   QWORD PTR [esi]
  413990:	mov    WORD PTR [ebx],?
  413992:	call   DWORD PTR ss:[ebp-0x3ebe2657]
  413999:	add    ebp,ebx
  41399b:	mov    edx,0x3946a699
  4139a0:	push   ebp
  4139a1:	(bad)  
  4139a2:	in     al,dx
  4139a3:	in     eax,dx
  4139a4:	out    dx,al
  4139a5:	push   edi
  4139a6:	mov    DWORD PTR [ebp-0x38632b13],eax
  4139ac:	test   WORD PTR [ecx-0x78],cx
  4139b0:	and    DWORD PTR [eax-0x7f],edx
  4139b3:	adc    bl,dl
  4139b5:	add    bh,BYTE PTR [edi]
  4139b7:	sti    
  4139b8:	mov    bl,0x56
  4139ba:	lds    eax,FWORD PTR [edi]
  4139bc:	pushf  
  4139bd:	sbb    bh,BYTE PTR ds:0x407d3055
  4139c3:	push   ecx
  4139c4:	jecxz  0x4139ad
  4139c6:	ret    0xd42b
  4139c9:	push   eax
  4139ca:	les    esp,FWORD PTR [edi]
  4139cc:	mul    DWORD PTR [ebp-0x21]
  4139cf:	sub    al,0xf6
  4139d1:	lahf   
  4139d2:	out    0xa0,al
  4139d4:	call   0xde9f:0xa3cea919
  4139db:	ret    
  4139dc:	add    DWORD PTR [ebp+0x6e],ebx
  4139df:	mov    dl,0x8
  4139e1:	jg     0x4139b3
  4139e3:	mov    edi,0x4e51d828
  4139e8:	xor    DWORD PTR [ebp+0x17],esp
  4139eb:	fstp   TBYTE PTR [esi]
  4139ed:	dec    ebx
  4139ee:	dec    edx
  4139ef:	add    DWORD PTR [ebx],ebx
  4139f1:	cmp    BYTE PTR [esp+edi*2],cl
  4139f4:	mov    ebx,DWORD PTR [ebp-0x1b5a48be]
  4139fa:	in     al,0x2b
  4139fc:	sub    bl,ch
  4139fe:	ss push ds
  413a00:	jp     0x413a47
  413a02:	xchg   esp,eax
  413a03:	lods   eax,DWORD PTR ds:[esi]
  413a04:	jp     0x413a04
  413a06:	mov    bl,0xcc
  413a08:	data16 mov dh,0xc3
  413a0b:	hlt    
  413a0c:	cmp    BYTE PTR [ebx+0x64],bh
  413a0f:	adc    al,0xad
  413a11:	xchg   ebp,eax
  413a12:	dec    eax
  413a13:	sbb    dl,BYTE PTR [ecx+0x1d]
  413a16:	es sbb al,0xa
  413a19:	jnp    0x413a46
  413a1b:	repnz into 
  413a1d:	fstp   TBYTE PTR [edx+0x27fa1bfd]
  413a23:	int    0xe4
  413a25:	cmc    
  413a26:	test   al,0xf
  413a28:	pop    esi
  413a29:	ret    0x74a7
  413a2c:	int3   
  413a2d:	sbb    ebx,esi
  413a2f:	in     al,0xaa
  413a31:	call   0x64bb:0x521d2aeb
  413a38:	adc    al,0x70
  413a3a:	or     eax,0x2b80ecc0
  413a3f:	adc    eax,0xbb18eb6f
  413a44:	mov    al,0xb
  413a46:	aad    0xaf
  413a48:	inc    ecx
  413a49:	(bad)  
  413a4b:	or     eax,0x6020a539
  413a50:	cmp    al,0xe1
  413a52:	(bad)  
  413a53:	and    al,BYTE PTR [ebx]
  413a55:	and    ebp,DWORD PTR [eax]
  413a57:	jle    0x4139dd
  413a59:	and    DWORD PTR [ecx+0x2b1c7864],edx
  413a5f:	fwait
  413a60:	push   edx
  413a61:	out    dx,al
  413a62:	(bad)  [ecx-0x5d]
  413a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a66:	loopne 0x413ac9
  413a68:	push   edx
  413a69:	jp     0x413a84
  413a6b:	mov    edx,0x7bff11e5
  413a70:	lock mov ds,WORD PTR ds:0xb41ec4e0
  413a77:	push   es
  413a78:	mov    ah,BYTE PTR [ecx]
  413a7a:	mul    BYTE PTR [ebp+0x4b]
  413a7d:	scas   eax,DWORD PTR es:[edi]
  413a7e:	and    al,0xe1
  413a80:	sbb    edi,edi
  413a82:	pop    ebx
  413a83:	jp     0x413ad7
  413a85:	rcl    edi,1
  413a87:	mov    edx,0xe5cbbc5e
  413a8c:	cld    
  413a8d:	jo     0x413a4d
  413a8f:	xchg   ecx,eax
  413a90:	pop    es
  413a91:	out    dx,eax
  413a92:	jno    0x413ae5
  413a94:	sbb    cl,BYTE PTR [edi-0x6c]
  413a97:	clc    
  413a98:	push   ss
  413a99:	mov    cl,0x38
  413a9b:	sbb    eax,0x5e768322
  413aa0:	pop    edx
  413aa1:	push   ss
  413aa2:	mov    ecx,0x76352454
  413aa7:	inc    eax
  413aa8:	mov    al,ds:0x5fbd073e
  413aad:	jl     0x413ab5
  413aaf:	xchg   ecx,eax
  413ab0:	int3   
  413ab1:	xor    al,0xd8
  413ab3:	push   eax
  413ab4:	push   0x35
  413ab6:	sbb    dh,ch
  413ab8:	int    0xd4
  413aba:	call   0xb8ad489a
  413abf:	mov    ebp,0xf1e6d9ff
  413ac4:	rol    DWORD PTR [ebp-0x43],cl
  413ac7:	mov    edx,0x264da2cb
  413acc:	jp     0x413aab
  413ace:	(bad)  
  413acf:	(bad)  
  413ad0:	jp     0x413ab4
  413ad2:	inc    esp
  413ad3:	addps  xmm3,XMMWORD PTR [esp+esi*8-0x21]
  413ad8:	jmp    0x2ad5:0x1581be3e
  413adf:	and    BYTE PTR ds:0x4f202f03,ch
  413ae5:	ret    
  413ae6:	xchg   DWORD PTR [ecx+0x12],esi
  413ae9:	mov    cl,0xdb
  413aeb:	std    
  413aec:	dec    eax
  413aed:	fistp  WORD PTR [edi+0x4316c93e]
  413af3:	icebp  
  413af4:	ins    DWORD PTR es:[edi],dx
  413af5:	inc    ecx
  413af6:	daa    
  413af7:	(bad)  
  413af8:	minps  xmm3,XMMWORD PTR [ebp-0x6f]
  413afc:	repz dec eax
  413afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413aff:	xchg   esi,eax
  413b00:	aam    0x63
  413b02:	mov    ch,0x5d
  413b04:	dec    ebp
  413b05:	arpl   ax,sp
  413b07:	aaa    
  413b08:	cmp    al,0xe6
  413b0a:	push   ds
  413b0b:	and    esp,ebp
  413b0d:	aaa    
  413b0e:	stc    
  413b0f:	xlat   BYTE PTR ds:[ebx]
  413b10:	mov    edx,0xb03746c6
  413b15:	sti    
  413b16:	or     DWORD PTR [ecx],ecx
  413b18:	mov    al,0x86
  413b1a:	popf   
  413b1b:	inc    ebx
  413b1c:	xor    al,ah
  413b1e:	push   ebp
  413b1f:	xor    al,0x1e
  413b21:	mov    eax,0x1595a861
  413b26:	out    dx,al
  413b27:	xchg   DWORD PTR [ebx+0xd],ecx
  413b2a:	mov    ebx,0x727b78c3
  413b2f:	repz cmp esp,DWORD PTR cs:[eax-0x11]
  413b34:	pop    edi
  413b35:	cli    
  413b36:	xor    BYTE PTR [edx-0x4],0x62
  413b3a:	iret   
  413b3b:	pop    ecx
  413b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b3d:	lock pushf 
  413b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b40:	iret   
  413b41:	push   ebp
  413b42:	fdivr  DWORD PTR [ebp-0x3c20d5]
  413b48:	mov    ch,0xf4
  413b4a:	mov    cl,0xe
  413b4c:	mov    ebx,0xc5d68410
  413b51:	jb     0x413ade
  413b53:	(bad)  
  413b54:	pop    ss
  413b55:	into   
  413b56:	mov    ebp,0x69f611d8
  413b5b:	(bad)  
  413b5c:	daa    
  413b5d:	js     0x413b02
  413b5f:	mov    dl,bl
  413b61:	push   eax
  413b62:	cmp    ah,ch
  413b64:	mov    al,ds:0x7476734c
  413b69:	in     eax,dx
  413b6a:	cmp    al,0x58
  413b6c:	xor    DWORD PTR [ecx-0x65],ebx
  413b6f:	inc    edx
  413b70:	out    dx,eax
  413b71:	mov    esi,DWORD PTR [eax]
  413b73:	(bad)
  413b78:	jns    0x413beb
  413b7a:	repz (bad) 
  413b7c:	(bad)  [eax+0x40]
  413b7f:	sbb    al,0x32
  413b82:	sbb    al,0x66
  413b84:	jl     0x413b19
  413b86:	mov    cs,WORD PTR [eax-0x4f]
  413b89:	mov    BYTE PTR [edx+eiz*1+0x4b8c9f1],0xfb
  413b91:	fcomi  st,st(2)
  413b93:	pop    es
  413b94:	imul   ebp,DWORD PTR fs:[ecx],0xffffff96
  413b98:	ret    0x3d16
  413b9b:	enter  0x9bb1,0x1c
  413b9f:	pop    eax
  413ba0:	mov    dh,0x1c
  413ba2:	lds    esi,FWORD PTR [edi-0x3cad1ad3]
  413ba8:	inc    eax
  413ba9:	mov    ds,edi
  413bab:	mov    eax,ds:0xeffde92b
  413bb0:	pusha  
  413bb1:	stos   BYTE PTR es:[edi],al
  413bb2:	outs   dx,BYTE PTR ds:[esi]
  413bb3:	push   esi
  413bb4:	xor    esp,esi
  413bb6:	push   ds
  413bb7:	dec    esi
  413bb8:	cmp    al,bl
  413bba:	in     eax,dx
  413bbb:	shr    BYTE PTR [ecx+0x6a58acdf],1
  413bc1:	or     BYTE PTR [esi+0xf],0xd6
  413bc5:	test   BYTE PTR [eax+0x5d],ch
  413bc8:	std    
  413bc9:	jecxz  0x413c32
  413bcb:	mov    esp,0x50420923
  413bd0:	cli    
  413bd1:	jg     0x413bb7
  413bd3:	push   esi
  413bd4:	xor    eax,0x6641536
  413bd9:	scas   al,BYTE PTR es:[edi]
  413bda:	bound  ebx,QWORD PTR [eax-0x5048019d]
  413be0:	idiv   BYTE PTR [eax-0x14]
  413be3:	push   cs
  413be4:	(bad)  
  413be5:	adc    DWORD PTR [eax],ecx
  413be7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413be8:	lds    edi,FWORD PTR [eax+ebx*4]
  413beb:	xlat   BYTE PTR ds:[ebx]
  413bec:	loopne 0x413be0
  413bee:	mov    WORD PTR [edi],es
  413bf0:	add    eax,0x1239829b
  413bf5:	pop    ebp
  413bf6:	cmp    BYTE PTR [esi],cl
  413bf8:	jl     0x413b8a
  413bfa:	fwait
  413bfb:	dec    edx
  413bfc:	cld    
  413bfd:	dec    ebp
  413bfe:	fwait
  413bff:	jb     0x413bd4
  413c01:	inc    esp
  413c02:	inc    ebp
  413c03:	fdivr  DWORD PTR [eax]
  413c05:	sahf   
  413c06:	push   0x47
  413c08:	push   cs
  413c09:	push   ebp
  413c0a:	lea    eax,[edx-0x1fb7d8bc]
  413c10:	inc    esi
  413c11:	xchg   esp,eax
  413c12:	jne    0x413c46
  413c14:	sti    
  413c15:	pop    ecx
  413c16:	mov    ds:0xc5b268fc,eax
  413c1b:	push   ebp
  413c1c:	cli    
  413c1d:	push   si
  413c1f:	les    edi,FWORD PTR [esi]
  413c21:	sahf   
  413c22:	rcl    DWORD PTR [ebx+0x3a],cl
  413c25:	mov    al,0xf1
  413c27:	adc    eax,DWORD PTR ds:0xbc6a6bb9
  413c2e:	(bad)  
  413c2f:	(bad)  
  413c31:	or     DWORD PTR [edi+eax*8-0x6dbabdc2],ebp
  413c38:	stc    
  413c39:	lahf   
  413c3a:	mov    esp,0x3a8033b7
  413c3f:	inc    edi
  413c40:	adc    ebx,DWORD PTR [eax-0x7]
  413c43:	fmulp  st(2),st
  413c45:	or     ah,BYTE PTR [ebx-0x78]
  413c48:	vpsubusw xmm7,xmm1,XMMWORD PTR [ecx]
  413c4c:	fnstenv [edx+0x3b]
  413c4f:	shl    BYTE PTR [bx-0x4303],cl
  413c54:	outs   dx,BYTE PTR ds:[esi]
  413c55:	inc    esi
  413c56:	inc    esp
  413c57:	inc    eax
  413c58:	mov    bl,BYTE PTR [eax+0x2f]
  413c5b:	int    0xcc
  413c5d:	xchg   ebp,eax
  413c5e:	dec    ebx
  413c5f:	test   eax,0xf543050c
  413c64:	pop    eax
  413c65:	sub    DWORD PTR [ecx-0xf3d3d7d],ecx
  413c6b:	fadd   DWORD PTR [edx]
  413c6d:	dec    ebx
  413c6e:	inc    ecx
  413c6f:	enter  0x4c60,0x60
  413c73:	dec    ecx
  413c74:	out    0x20,al
  413c76:	jg     0x413cf3
  413c78:	addr16 mov eax,ds:0x1a37
  413c7c:	jne    0x413cbc
  413c7e:	gs xchg edx,eax
  413c80:	scas   eax,DWORD PTR es:[edi]
  413c81:	loope  0x413ca4
  413c83:	cdq    
  413c84:	sub    DWORD PTR ss:[ebx+0x710082d6],ebx
  413c8b:	push   ecx
  413c8c:	mov    edx,0xe0555fd8
  413c91:	popf   
  413c92:	imul   ecx,edx,0x9a97e124
  413c98:	iret   
  413c99:	in     eax,dx
  413c9a:	mov    eax,DWORD PTR [ebp+0x10]
  413c9d:	mov    ecx,DWORD PTR [ebp+0x14]
  413ca0:	shrd   eax,ecx,0x2
  413ca4:	shr    ecx,0x2
  413ca7:	mov    ecx,DWORD PTR [ebp+0x10]
  413caa:	mov    edx,DWORD PTR [ebp+0x14]
  413cad:	xor    eax,esi
  413caf:	xor    edx,edx
  413cb1:	or     eax,edx
  413cb3:	lea    eax,[ebp+eax*4-0x7c]
  413cb7:	push   eax
  413cb8:	shl    ecx,0x1e
  413cbb:	call   0x411c08
  413cc0:	mov    eax,DWORD PTR [ebp-0x8]
  413cc3:	mov    ecx,DWORD PTR [ebp-0x8]
  413cc6:	xor    ecx,ebx
  413cc8:	xor    eax,edi
  413cca:	shl    ecx,0x1e
  413ccd:	shr    eax,0x2
  413cd0:	or     ecx,eax
  413cd2:	push   ecx
  413cd3:	lea    eax,[ebp-0x2c]
  413cd6:	push   eax
  413cd7:	mov    eax,DWORD PTR [ebp+0x10]
  413cda:	mov    ecx,DWORD PTR [ebp+0x14]
  413cdd:	shrd   eax,ecx,0x2
  413ce1:	shr    ecx,0x2
  413ce4:	mov    ecx,DWORD PTR [ebp+0x10]
  413ce7:	mov    edx,DWORD PTR [ebp+0x14]
  413cea:	xor    edx,edx
  413cec:	xor    eax,esi
  413cee:	or     eax,edx
  413cf0:	shl    ecx,0x1e
  413cf3:	mov    ecx,DWORD PTR [ebp+0x10]
  413cf6:	mov    edx,DWORD PTR [ebp+0x14]
  413cf9:	shrd   ecx,edx,0x2
  413cfd:	shr    edx,0x2
  413d00:	mov    edx,DWORD PTR [ebp+0x10]
  413d03:	mov    ebx,DWORD PTR [ebp+0x14]
  413d06:	xor    ecx,esi
  413d08:	xor    ebx,ebx
  413d0a:	or     ecx,ebx
  413d0c:	add    eax,ecx
  413d0e:	lea    eax,[ebp+eax*4-0x7c]
  413d12:	push   eax
  413d13:	shl    edx,0x1e
  413d16:	call   0x411c08
  413d1b:	mov    eax,DWORD PTR [ebp-0x8]
  413d1e:	mov    ecx,DWORD PTR [ebp-0x8]
  413d21:	xor    ecx,0xfffffffe
  413d24:	shl    ecx,0x1e
  413d27:	xor    eax,edi
  413d29:	shr    eax,0x2
  413d2c:	or     ecx,eax
  413d2e:	push   ecx
  413d2f:	lea    eax,[ebp-0x38]
  413d32:	push   eax
  413d33:	mov    eax,DWORD PTR [ebp+0x10]
  413d36:	mov    ecx,DWORD PTR [ebp+0x14]
  413d39:	shrd   eax,ecx,0x2
  413d3d:	shr    ecx,0x2
  413d40:	jmp    0x414079
  413d45:	lock aad 0x95
  413d48:	dec    ecx
  413d49:	mov    bh,0x8a
  413d4b:	xor    al,0x7c
  413d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d4e:	cmp    eax,0xf357dd72
  413d53:	dec    esi
  413d54:	sahf   
  413d55:	sbb    ecx,DWORD PTR [esi+edi*4-0x413b1242]
  413d5c:	mov    esi,0x8909a2f0
  413d61:	pusha  
  413d62:	mov    ebx,0x831336e5
  413d67:	mov    dh,0xe8
  413d69:	inc    esi
  413d6a:	push   cs
  413d6b:	and    DWORD PTR [ebx],eax
  413d6d:	add    dl,BYTE PTR [edi-0x47f0176c]
  413d73:	setl   ch
  413d76:	shl    BYTE PTR ds:0x8b0db452,1
  413d7c:	mov    BYTE PTR [esi],ah
  413d7e:	aaa    
  413d7f:	shl    DWORD PTR [esi+edi*1],1
  413d82:	aaa    
  413d83:	sub    cl,BYTE PTR es:[edx+edi*8]
  413d87:	mov    dl,0x65
  413d89:	dec    eax
  413d8a:	enter  0x2348,0x43
  413d8e:	mov    bh,0xd5
  413d90:	ds loopne 0x413d1e
  413d93:	inc    edi
  413d94:	pusha  
  413d95:	ret    0x6cf9
  413d98:	vhaddpd ymm6,ymm0,YMMWORD PTR [ecx]
  413d9c:	xchg   esp,eax
  413d9d:	mov    ebp,0x9c225c42
  413da2:	jmp    0xd89d2518
  413da7:	jmp    0x413dd3
  413da9:	push   esp
  413daa:	add    al,0xfa
  413dac:	push   ss
  413dad:	cmp    eax,0xd36f45d4
  413db2:	mov    esp,0x88c8fcbd
  413db7:	imul   ecx,DWORD PTR [ebx-0x35512c20],0xffffffe4
  413dbe:	lahf   
  413dbf:	inc    esp
  413dc0:	xchg   esi,eax
  413dc1:	and    bh,BYTE PTR [ebx-0x6141d500]
  413dc7:	add    eax,0xa64beb10
  413dcc:	xchg   edx,ebp
  413dce:	cli    
  413dcf:	retf   0x3ba3
  413dd2:	add    DWORD PTR [eax+0x4],eax
  413dd5:	adc    eax,0xc1f46248
  413dda:	out    dx,eax
  413ddb:	inc    ecx
  413ddc:	mov    dl,0xac
  413dde:	(bad)
  413de2:	in     eax,dx
  413de3:	xchg   esp,eax
  413de4:	or     ebp,DWORD PTR [ecx-0x5c]
  413de7:	jae    0x413dcd
  413de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dea:	and    al,0x90
  413dec:	xor    al,0xb0
  413dee:	mov    esi,0x13adc737
  413df3:	fsubr  QWORD PTR [edx]
  413df5:	loop   0x413dd7
  413df7:	(bad)  
  413df8:	cmp    esp,DWORD PTR [eax]
  413dfa:	ret    0xebaa
  413dfd:	push   ebp
  413dfe:	mov    ah,0x8c
  413e00:	inc    esi
  413e01:	push   esp
  413e02:	push   0xff14a1c6
  413e07:	stc    
  413e08:	fwait
  413e09:	mov    dl,BYTE PTR [ecx+0x6a]
  413e0c:	mov    bl,0xf0
  413e0e:	pop    esp
  413e0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e10:	xchg   ebp,eax
  413e11:	shl    al,1
  413e13:	aad    0x2b
  413e15:	test   eax,0x1c3639ba
  413e1a:	pop    esp
  413e1b:	inc    ebx
  413e1c:	call   0x1fdf:0x72b9e8f1
  413e23:	dec    ebp
  413e24:	(bad)  
  413e25:	mov    ebp,fs
  413e27:	int    0x2d
  413e29:	and    edx,esp
  413e2b:	pop    ecx
  413e2c:	pop    es
  413e2d:	test   al,0x79
  413e2f:	es jno 0x413db4
  413e32:	rcl    edx,0x34
  413e35:	fisub  WORD PTR [edi]
  413e37:	push   edx
  413e38:	jl     0x413eb1
  413e3a:	mov    bl,0x2e
  413e3c:	adc    cl,ch
  413e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e3f:	xchg   ebx,eax
  413e40:	xchg   ecx,eax
  413e41:	dec    edi
  413e42:	aaa    
  413e43:	ror    BYTE PTR [ecx-0x3aa85ef5],cl
  413e49:	dec    ebx
  413e4a:	ds jmp 0x413e0b
  413e4d:	or     BYTE PTR [esi+0xae230c9],ch
  413e53:	sub    BYTE PTR [eax+0x3d62e12e],dl
  413e59:	mov    ah,BYTE PTR [ebx-0x6a]
  413e5c:	mov    esp,0x2b488dde
  413e61:	jbe    0x413e01
  413e63:	push   ebp
  413e64:	out    dx,eax
  413e65:	dec    edx
  413e66:	sahf   
  413e67:	dec    ebp
  413e68:	ss call 0x14b354f7
  413e6e:	shl    DWORD PTR [eax],1
  413e70:	in     al,0xa5
  413e72:	(bad)  
  413e74:	retf   
  413e75:	addr16 mov dh,0x43
  413e78:	lods   eax,DWORD PTR ds:[esi]
  413e79:	inc    edi
  413e7a:	dec    esi
  413e7b:	mov    ecx,0xc03dd63e
  413e80:	(bad)  
  413e81:	loop   0x413ee4
  413e83:	aaa    
  413e84:	sbb    eax,0xd7db8cd9
  413e89:	jl     0x413e87
  413e8b:	xor    eax,0x2e0b3e02
  413e90:	dec    ebp
  413e91:	mov    cl,BYTE PTR [ebp+0x6b62b475]
  413e97:	cmp    al,0x76
  413e99:	cmp    ax,0x13c3
  413e9d:	jge    0x413e6c
  413e9f:	pop    ds
  413ea0:	sbb    eax,0x675de6ba
  413ea5:	sbb    al,0x54
  413ea7:	push   ss
  413ea8:	push   ebp
  413ea9:	outs   dx,DWORD PTR ds:[esi]
  413eaa:	adc    dl,BYTE PTR [edi+edi*2-0x24]
  413eae:	or     edi,DWORD PTR [eax]
  413eb0:	mov    al,0xd9
  413eb2:	pop    ss
  413eb3:	shl    BYTE PTR [esp+edi*8-0x5f],cl
  413eb7:	call   0xa3908a2a
  413ebc:	jno    0x413ea9
  413ebe:	mov    ebp,0xd18238bb
  413ec3:	jp     0x413f39
  413ec5:	in     eax,0xad
  413ec7:	inc    ebp
  413ec8:	repz push edi
  413eca:	cmp    eax,0x43f7b389
  413ecf:	mov    bl,0xa9
  413ed1:	mov    ds:0xa61b7bb0,al
  413ed6:	fisttp WORD PTR [edx]
  413ed8:	rcl    BYTE PTR [edi+ebp*1+0xa24cad2],1
  413edf:	pusha  
  413ee0:	aaa    
  413ee1:	sti    
  413ee2:	(bad)  [edi-0x31]
  413ee5:	or     dl,BYTE PTR [eax-0x54fe13f0]
  413eeb:	or     BYTE PTR [esi+0x3f82fcb7],ch
  413ef1:	(bad)  
  413ef2:	nop    DWORD PTR [edx-0x5e]
  413ef6:	ja     0x413f4a
  413ef8:	sar    DWORD PTR [eax+0x57b67f9d],0xf2
  413eff:	mov    edx,0xe56e150e
  413f04:	lods   eax,DWORD PTR ds:[esi]
  413f05:	fsub   QWORD PTR [edx]
  413f07:	add    BYTE PTR [edx+0x47c48ccc],dl
  413f0d:	pop    es
  413f0e:	ret    
  413f0f:	pushf  
  413f10:	jg     0x413eb7
  413f12:	jne    0x413f8a
  413f14:	out    0xc7,eax
  413f16:	jns    0x413f0f
  413f18:	adc    DWORD PTR [bx+si-0x3f2b],edi
  413f1d:	sbb    BYTE PTR [esi],0x5d
  413f20:	ror    BYTE PTR [esp+ecx*8-0x78],0x94
  413f25:	jl     0x413ee9
  413f27:	xor    al,0x77
  413f29:	call   0xee44a3f0
  413f2e:	out    0x48,al
  413f30:	inc    ebp
  413f31:	adc    ah,cl
  413f33:	fstp   QWORD PTR [edx+0x18c8d338]
  413f39:	or     BYTE PTR [esi+0x32],dh
  413f3c:	shr    ecx,1
  413f3e:	sbb    BYTE PTR [edi-0x55],cl
  413f41:	dec    edx
  413f42:	sahf   
  413f43:	mov    ch,0x5a
  413f45:	xchg   edi,eax
  413f46:	or     dh,BYTE PTR [ebx+0x1600cb16]
  413f4c:	mov    eax,ds:0x273425c1
  413f51:	xchg   edi,eax
  413f52:	sub    DWORD PTR [esi+0x3be09390],esp
  413f58:	and    al,ch
  413f5a:	and    DWORD PTR [edx-0x174b52d7],eax
  413f60:	cmp    eax,0x65790ffc
  413f65:	cwde   
  413f66:	shr    al,cl
  413f68:	inc    edx
  413f69:	adc    eax,0x3b730557
  413f6e:	or     al,0xa3
  413f70:	bound  ecx,QWORD PTR [ecx+0x42]
  413f73:	adc    BYTE PTR fs:[ecx],bh
  413f76:	std    
  413f77:	in     eax,0x82
  413f79:	dec    ecx
  413f7a:	mov    cl,0x2e
  413f7c:	xor    eax,0x82708bf5
  413f81:	(bad)  
  413f82:	sbb    DWORD PTR [ebx+ebx*8+0x20],ebx
  413f86:	push   ebp
  413f87:	jl     0x413f64
  413f89:	cld    
  413f8a:	call   FWORD PTR [ecx+ebx*8-0x522dab9f]
  413f91:	pop    ebx
  413f92:	push   ecx
  413f93:	add    dh,BYTE PTR [ebp+ebp*1+0x597b0a31]
  413f9a:	cwde   
  413f9b:	and    bh,BYTE PTR gs:[edx*4+0x5e94b35d]
  413fa3:	jns    0x413fb2
  413fa5:	fild   WORD PTR [ebx-0xcad0148]
  413fab:	pop    eax
  413fac:	icebp  
  413fad:	dec    ebp
  413fae:	loop   0x413f7d
  413fb0:	popa   
  413fb1:	fldcw  WORD PTR [ecx+0x50b25a69]
  413fb7:	sub    dl,0x6a
  413fba:	icebp  
  413fbb:	bound  ecx,QWORD PTR es:[ebx+0x3b374f2d]
  413fc2:	in     al,0x96
  413fc4:	xchg   ebp,eax
  413fc5:	sub    bh,BYTE PTR [edx-0x12]
  413fc8:	scas   al,BYTE PTR es:[edi]
  413fc9:	push   edx
  413fca:	jae    0x41400c
  413fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fcd:	pop    es
  413fce:	arpl   WORD PTR [eax-0x7b3b86df],ax
  413fd4:	icebp  
  413fd5:	pop    esi
  413fd6:	imul   ebp,DWORD PTR [ecx-0x7c],0x7b72a3d6
  413fdd:	in     al,0xa6
  413fdf:	fidivr DWORD PTR [edi+eax*1]
  413fe2:	fiadd  WORD PTR [esi+ecx*8]
  413fe5:	jnp    0x413fd0
  413fe7:	jnp    0x413f8a
  413fe9:	(bad)  
  413fea:	or     bl,BYTE PTR [ecx+eiz*4-0x4bd122d7]
  413ff1:	jo     0x414029
  413ff3:	call   0xa134:0xc4cd218a
  413ffa:	add    BYTE PTR [eax],0x4a
  413ffd:	das    
  413ffe:	data16 test al,0xde
  414001:	add    eax,DWORD PTR ds:0x61e88844
  414007:	xor    DWORD PTR [edx-0x2542d9b8],esi
  41400d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41400e:	xor    BYTE PTR [ebx+0x781c426],ah
  414014:	mov    dh,0xcc
  414016:	ins    BYTE PTR es:[edi],dx
  414017:	inc    edi
  414018:	adc    BYTE PTR [esi],ch
  41401a:	jae    0x414023
  41401c:	or     al,BYTE PTR [ecx+0x20]
  41401f:	and    al,0x72
  414021:	cmp    BYTE PTR cs:[edx+0x50],0x47
  414026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414027:	push   esp
  414028:	jmp    0x4862:0x2e2a143e
  41402f:	xchg   ebp,eax
  414030:	fcmovb st,st(5)
  414032:	lea    edi,[ebx]
  414034:	icebp  
  414035:	jp     0x4140a4
  414037:	fidivr WORD PTR [ecx-0x41]
  41403a:	inc    esp
  41403b:	data16 es or al,dl
  41403f:	jnp    0x413ff5
  414041:	push   ecx
  414042:	leave  
  414043:	ins    DWORD PTR es:[edi],dx
  414044:	and    al,0x84
  414046:	out    dx,al
  414047:	in     eax,dx
  414048:	pop    edi
  414049:	rcl    BYTE PTR [eax+edx*1],1
  41404c:	out    dx,al
  41404d:	xchg   edx,eax
  41404e:	ror    BYTE PTR [ecx-0x5827c471],cl
  414054:	mov    esp,0xcbe3b68c
  414059:	cmp    bl,BYTE PTR [esi-0x3452dd7b]
  41405f:	in     eax,0x7b
  414061:	adc    dl,bl
  414063:	sbb    eax,0x1b7535d
  414068:	mov    ebp,0xb190fae4
  41406d:	inc    esp
  41406e:	iret   
  41406f:	stos   BYTE PTR es:[edi],al
  414070:	inc    edi
  414071:	or     bl,0x6f
  414074:	ss and eax,0x8ba50db8
  41407a:	dec    ebp
  41407b:	adc    BYTE PTR [ebx-0x2dccebab],cl
  414081:	shl    ecx,0x1e
  414084:	mov    ecx,DWORD PTR [ebp+0x10]
  414087:	xor    eax,esi
  414089:	or     eax,edx
  41408b:	mov    edx,DWORD PTR [ebp+0x14]
  41408e:	shrd   ecx,edx,0x2
  414092:	shr    edx,0x2
  414095:	mov    edx,DWORD PTR [ebp+0x10]
  414098:	mov    ebx,DWORD PTR [ebp+0x14]
  41409b:	xor    ecx,esi
  41409d:	xor    ebx,ebx
  41409f:	or     ecx,ebx
  4140a1:	shl    edx,0x1e
  4140a4:	jmp    0x4143dd
  4140a9:	pop    eax
  4140aa:	add    eax,0xb29872c6
  4140af:	jl     0x4140dc
  4140b1:	fisttp DWORD PTR [ecx+0x1765a486]
  4140b7:	push   esi
  4140b8:	ror    DWORD PTR [ebx-0x6e],1
  4140bb:	mov    esi,0xbec4edbe
  4140c0:	mov    esi,0xd92911b6
  4140c5:	dec    edx
  4140c6:	lods   eax,DWORD PTR ds:[esi]
  4140c7:	push   0x4c
  4140c9:	popf   
  4140ca:	sbb    al,0x3e
  4140cc:	cdq    
  4140cd:	icebp  
  4140ce:	xchg   esp,eax
  4140cf:	xor    DWORD PTR [edx-0x59d58801],esp
  4140d5:	aas    
  4140d6:	lds    eax,FWORD PTR [esi+ebx*4-0x61]
  4140da:	outs   dx,BYTE PTR ds:[esi]
  4140db:	pop    eax
  4140dc:	ret    
  4140dd:	lods   al,BYTE PTR ds:[esi]
  4140de:	mov    ah,0x46
  4140e0:	mov    edx,0x8f65d0f7
  4140e5:	in     al,dx
  4140e6:	push   ebp
  4140e7:	cmp    DWORD PTR [esi+0x4c],eax
  4140ea:	ja     0x414152
  4140ec:	add    DWORD PTR [ebx+0x6c],eax
  4140ef:	frstor [edi+0x11]
  4140f2:	adc    al,0x2a
  4140f4:	pop    es
  4140f5:	inc    esp
  4140f6:	imul   esp,DWORD PTR [di],0xfabb8cc3
  4140fd:	leave  
  4140fe:	jmp    0x2943be6b
  414103:	popa   
  414104:	mov    esp,DWORD PTR [ebx+0x67e2c3bd]
  41410a:	ja     0x4140d2
  41410c:	aas    
  41410d:	(bad)  
  41410e:	int3   
  41410f:	popf   
  414110:	pop    edi
  414111:	mov    ds:0x7a15613e,eax
  414116:	xchg   esp,eax
  414117:	jl     0x4140a9
  414119:	and    eax,0x439679dd
  41411e:	(bad)  
  41411f:	repz or bl,BYTE PTR [eax+0x54469992]
  414126:	out    dx,al
  414127:	adc    BYTE PTR [esi],bl
  414129:	out    0x65,al
  41412b:	jae    0x4140e2
  41412d:	stos   BYTE PTR es:[edi],al
  41412e:	in     eax,dx
  41412f:	mov    dh,0x68
  414131:	cmp    BYTE PTR [esi],bl
  414133:	sub    al,0xde
  414135:	xor    DWORD PTR [ecx-0x379c4d20],edx
  41413b:	sti    
  41413c:	fisub  DWORD PTR [ebx-0x7f]
  41413f:	dec    ecx
  414140:	inc    ebp
  414141:	mov    esp,0x750237f4
  414146:	(bad)  
  414149:	cmp    al,0xb8
  41414b:	push   esi
  41414c:	xor    edi,esp
  41414e:	mov    fs,eax
  414150:	mov    cl,0xb
  414152:	dec    edx
  414153:	cmp    esp,0x4f36b08f
  414159:	out    0xdc,eax
  41415b:	sbb    DWORD PTR [ebp+0x1a],edx
  41415e:	dec    edi
  41415f:	call   0x5eb69bf8
  414164:	popa   
  414165:	xchg   ecx,eax
  414166:	adc    DWORD PTR [esi-0x2b0faeda],ebx
  41416c:	mov    es,ecx
  41416e:	xchg   ebp,eax
  41416f:	test   BYTE PTR [eax-0x57],dh
  414172:	aad    0x3e
  414174:	fimul  WORD PTR [ebp-0x24]
  414177:	lods   al,BYTE PTR ds:[esi]
  414178:	xor    BYTE PTR [ebp-0x46af22f2],0x32
  41417f:	mov    eax,0xa028d661
  414184:	cmp    al,0xc4
  414186:	mov    DWORD PTR [ebx+0x2720d08f],ebx
  41418c:	fiadd  WORD PTR [edx]
  41418e:	adc    DWORD PTR [eax+0x8],esp
  414191:	rcl    DWORD PTR [ebp-0x1a],1
  414194:	dec    eax
  414195:	in     al,0x8f
  414197:	arpl   WORD PTR [eax],ax
  414199:	aas    
  41419a:	aad    0x67
  41419c:	xchg   ebp,eax
  41419d:	pop    ebp
  41419e:	fdiv   QWORD PTR [esi]
  4141a0:	aas    
  4141a1:	or     bh,BYTE PTR [eax]
  4141a3:	push   0xa383afb4
  4141a8:	(bad)  
  4141a9:	(bad)  
  4141aa:	rcr    DWORD PTR ds:0xde5b5c59,0x4b
  4141b2:	inc    BYTE PTR [ebp-0x468641ca]
  4141b8:	fs retf 0x7969
  4141bc:	sbb    DWORD PTR [esi],edi
  4141be:	aas    
  4141bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141c0:	jbe    0x414142
  4141c2:	mov    eax,0xfb2b32c3
  4141c7:	out    0xce,eax
  4141c9:	enter  0x1297,0x6e
  4141cd:	or     al,0x7d
  4141cf:	and    esp,ecx
  4141d1:	stc    
  4141d2:	lea    esi,[edi-0x3c]
  4141d5:	adc    eax,0x8b0d689c
  4141da:	ins    BYTE PTR es:[edi],dx
  4141db:	sar    bl,cl
  4141dd:	push   ecx
  4141de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141df:	mov    esp,0xae86faf4
  4141e4:	fild   DWORD PTR ds:0x6daa14e
  4141ea:	xchg   DWORD PTR [eax],esi
  4141ec:	sub    ah,al
  4141ee:	mov    esp,0x68b2719c
  4141f3:	mov    eax,0x68cd9172
  4141f8:	in     al,0x77
  4141fa:	lock sub DWORD PTR [edi-0x282833f5],ecx
  414201:	pop    eax
  414202:	xchg   esi,eax
  414203:	mov    cl,BYTE PTR [eax-0x6e]
  414206:	bound  ebp,QWORD PTR [edx+0x68]
  414209:	daa    
  41420a:	leave  
  41420b:	popf   
  41420c:	adc    DWORD PTR [eax],esp
  41420e:	sub    dh,dh
  414210:	jno    0x414225
  414212:	outs   dx,DWORD PTR ds:[esi]
  414213:	fnstcw WORD PTR [ecx+0x580e58f6]
  414219:	jmp    0xe111688c
  41421e:	out    0x97,eax
  414220:	outs   dx,DWORD PTR ds:[esi]
  414221:	xlat   BYTE PTR ds:[ebx]
  414222:	imul   edx,DWORD PTR [eax-0x7b845df6],0xffffffe5
  414229:	adc    eax,0xc86bbc51
  41422e:	mov    edi,0xce8e2478
  414233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414234:	jb     0x41425c
  414236:	and    ebx,0x2ba38901
  41423c:	aam    0x61
  41423e:	adc    DWORD PTR [ecx-0x7544166b],ecx
  414244:	call   0x7771e0db
  414249:	xchg   BYTE PTR [esp+ebp*2+0x79],bh
  41424d:	mov    al,0xaa
  41424f:	jg     0x4141fa
  414251:	push   esp
  414252:	xchg   ebx,eax
  414253:	popa   
  414254:	or     cl,BYTE PTR [esi+0x62]
  414257:	dec    edx
  414258:	ins    DWORD PTR es:[edi],dx
  414259:	mov    ecx,0x5e08a72d
  41425e:	and    BYTE PTR [esi+0x40],ah
  414261:	push   edx
  414262:	pop    ss
  414263:	in     al,0xa6
  414265:	or     al,0x2f
  414267:	scas   al,BYTE PTR es:[edi]
  414268:	xchg   esi,eax
  414269:	add    al,0x35
  41426b:	jb     0x4142cb
  41426d:	pop    edx
  41426e:	sub    DWORD PTR [ebx-0x2ae13100],ebx
  414274:	nop
  414275:	popf   
  414276:	adc    cl,BYTE PTR ds:0x9d3c63b7
  41427c:	xor    DWORD PTR [edi+0x7b3abfdb],ebp
  414282:	mov    BYTE PTR [eax+ebp*1+0x2f],ah
  414286:	outs   dx,BYTE PTR ds:[esi]
  414287:	xchg   edx,eax
  414288:	repz fs jns 0x414275
  41428c:	inc    esp
  41428d:	sub    eax,0xe5313d0e
  414292:	dec    eax
  414293:	(bad)  
  414294:	push   ds
  414295:	retf   0xecdf
  414298:	mov    WORD PTR [ecx],gs
  41429a:	pop    ebx
  41429b:	inc    esi
  41429c:	in     eax,0x5a
  41429e:	adc    BYTE PTR [edi+0x72],dh
  4142a1:	mov    ds:0x9ed0857f,al
  4142a6:	popa   
  4142a7:	add    DWORD PTR [edx-0x71],edi
  4142aa:	in     eax,0xee
  4142ac:	cmp    al,0xe9
  4142ae:	mov    BYTE PTR ds:0x6d4f0400,ch
  4142b4:	mov    ebp,0xc15d10c8
  4142b9:	je     0x4142d3
  4142bb:	fdiv   st,st(3)
  4142bd:	jae    0x4142bc
  4142bf:	test   DWORD PTR [esi],0x5e5271be
  4142c5:	pusha  
  4142c6:	pop    ebp
  4142c7:	aam    0xfc
  4142c9:	(bad)  
  4142ca:	popf   
  4142cb:	and    ebp,edi
  4142cd:	push   ebp
  4142ce:	jnp    0x414284
  4142d0:	and    BYTE PTR [ebp-0x6e],cl
  4142d3:	mov    dh,0x38
  4142d5:	or     edx,edx
  4142d7:	add    BYTE PTR ds:0x576fd89,dh
  4142dd:	retf   0xf934
  4142e0:	xor    eax,0x34cdde0e
  4142e5:	jb     0x414288
  4142e7:	lahf   
  4142e8:	mov    BYTE PTR [edx-0xa],dl
  4142eb:	aas    
  4142ec:	(bad)  
  4142ed:	push   ecx
  4142ee:	and    BYTE PTR [eax+0x6ce3309b],ah
  4142f4:	dec    eax
  4142f5:	ret    0x5878
  4142f8:	xchg   DWORD PTR [edx],esp
  4142fa:	cdq    
  4142fb:	sbb    ecx,ebp
  4142fd:	stos   DWORD PTR es:[edi],eax
  4142fe:	aad    0xe0
  414300:	sub    BYTE PTR ds:0xcd928383,al
  414306:	dec    edx
  414307:	push   eax
  414308:	js     0x4142b3
  41430a:	mov    ah,0x61
  41430c:	push   ss
  41430d:	inc    ebx
  41430e:	aam    0x50
  414310:	and    edi,DWORD PTR [edi]
  414312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414313:	mov    WORD PTR [eax-0x35],fs
  414316:	push   esi
  414317:	lds    ecx,FWORD PTR [edi+0x7d0e2e1]
  41431d:	es fcomp st(6)
  414320:	loop   0x414387
  414322:	ret    
  414323:	shl    DWORD PTR [ebx+edx*1],1
  414326:	mov    esi,0xdef2ece0
  41432b:	popf   
  41432c:	lock jno 0x41433d
  41432f:	jp     0x4142ce
  414331:	or     bh,BYTE PTR [esi]
  414333:	mov    cl,0x3c
  414335:	(bad)  
  414337:	out    0x89,al
  414339:	ja     0x4143ae
  41433b:	call   ebx
  41433d:	add    eax,0x2b71a1c3
  414342:	push   cs
  414343:	call   0xe7f:0xe65fdf98
  41434a:	jb     0x4142f6
  41434c:	push   edx
  41434d:	repnz adc al,0x57
  414350:	cwde   
  414351:	call   0x50f254e1
  414356:	dec    edx
  414357:	inc    esp
  414358:	das    
  414359:	mov    al,0x24
  41435b:	std    
  41435c:	push   edi
  41435d:	jl     0x4142f3
  41435f:	and    eax,0xd8b5b635
  414364:	rcr    BYTE PTR [ecx+eiz*4],1
  414367:	xchg   DWORD PTR [eax+eiz*4+0x1],edi
  41436b:	mov    ebx,0x2b6b2d2
  414370:	repz in al,0x1b
  414373:	push   ds
  414374:	xchg   edi,eax
  414375:	adc    eax,DWORD PTR [esi+0x3f]
  414378:	xchg   DWORD PTR [esi],ebp
  41437a:	popa   
  41437b:	popf   
  41437c:	mov    ah,0x29
  41437e:	jge    0x61e6b597
  414384:	mov    WORD PTR [ebx-0x5bd90d8d],fs
  41438a:	fcom   st(3)
  41438c:	fwait
  41438d:	enter  0x1fca,0xd1
  414391:	js     0x4143ca
  414393:	dec    esi
  414394:	jae    0x414360
  414396:	test   al,al
  414398:	cmp    DWORD PTR [ecx],esp
  41439a:	xchg   edx,eax
  41439b:	inc    ebx
  41439c:	mov    dl,0x1b
  41439e:	xchg   DWORD PTR [ebx],ecx
  4143a0:	pop    edx
  4143a1:	pop    ecx
  4143a2:	push   esp
  4143a3:	push   ebp
  4143a4:	xor    BYTE PTR [ebp-0x3c516888],dl
  4143aa:	pushf  
  4143ab:	cmp    ebx,DWORD PTR [ebx]
  4143ad:	jle    0x4143cc
  4143af:	pop    ebp
  4143b0:	sti    
  4143b1:	xchg   DWORD PTR [edx+edi*4-0x3009df65],edi
  4143b8:	adc    edi,DWORD PTR [ebx]
  4143ba:	cmc    
  4143bb:	ficom  WORD PTR [ebx+ecx*2+0x7a]
  4143bf:	ficom  WORD PTR [edi]
  4143c1:	push   ecx
  4143c2:	sbb    eax,0x55659f5
  4143c7:	pushf  
  4143c8:	mov    DWORD PTR [ebx-0x7587f3e3],esi
  4143ce:	push   edi
  4143cf:	push   cs
  4143d0:	jae    0x414362
  4143d2:	add    al,0xe2
  4143d4:	popf   
  4143d5:	adc    eax,0xf11f0708
  4143da:	or     BYTE PTR [esi],0x8e
  4143dd:	add    eax,ecx
  4143df:	mov    ecx,DWORD PTR [ebp+0x10]
  4143e2:	mov    edx,DWORD PTR [ebp+0x14]
  4143e5:	shrd   ecx,edx,0x2
  4143e9:	shr    edx,0x2
  4143ec:	xor    ecx,esi
  4143ee:	jmp    0x414727
  4143f3:	cmp    eax,0xb8c710f5
  4143f8:	sub    BYTE PTR [ebp+0x76acc878],dl
  4143fe:	xchg   edx,eax
  4143ff:	jbe    0x4143d1
  414401:	fnstsw WORD PTR cs:[ebx-0x68]
  414405:	mov    esi,0xbec4edbe
  41440a:	mov    esi,0x8c8a2e76
  41440f:	xor    edx,DWORD PTR ds:0x5c85b2ab
  414415:	sbb    ch,BYTE PTR [edx-0x75]
  414418:	shr    BYTE PTR [ebx],0x24
  41441b:	lds    edx,FWORD PTR [eax+0xe514437]
  414421:	ss add al,0x63
  414424:	adc    ebp,DWORD PTR [eax]
  414426:	imul   eax,DWORD PTR [eax+0x6cde0c72],0x395094e6
  414430:	mov    ch,BYTE PTR [ecx]
  414432:	inc    ebx
  414433:	push   0x2b
  414435:	pushf  
  414436:	mov    edx,0x7ead0221
  41443b:	lahf   
  41443c:	sbb    al,0xf9
  41443e:	jmp    0x5c21:0xa006b838
  414445:	mov    bl,0x48
  414447:	push   ss
  414448:	xchg   ebx,eax
  414449:	dec    esi
  41444b:	adc    DWORD PTR [edx-0x27cf631b],0x27
  414452:	icebp  
  414453:	jmp    0x2a18:0x409e2681
  41445a:	std    
  41445b:	icebp  
  41445c:	pop    edx
  41445d:	pop    edx
  41445e:	cmp    eax,0x835bc8cd
  414463:	cdq    
  414464:	push   edx
  414465:	shr    DWORD PTR [edx-0x6ee52df],1
  41446b:	lods   al,BYTE PTR ds:[esi]
  41446c:	cmc    
  41446d:	je     0x4144cb
  41446f:	and    DWORD PTR [ecx],edi
  414471:	pop    ds
  414472:	inc    edi
  414473:	lds    edi,FWORD PTR [edx]
  414475:	popa   
  414476:	xchg   ecx,eax
  414477:	mov    ecx,0xe0fb1406
  41447c:	pop    edi
  41447d:	xchg   ebp,eax
  41447e:	popf   
  41447f:	dec    ebp
  414480:	(bad)  
  414481:	mov    ch,0x9c
  414483:	leave  
  414484:	push   ecx
  414485:	mov    ch,ch
  414487:	sub    eax,0xf4e205b7
  41448c:	inc    esp
  41448d:	and    eax,0xb4230878
  414492:	lock sahf 
  414494:	fcmovnb st,st(1)
  414496:	shl    DWORD PTR [esi+0x65],0xd6
  41449a:	das    
  41449b:	mov    ebp,0x8e600a31
  4144a0:	sbb    edi,eax
  4144a2:	jae    0x41443c
  4144a4:	or     BYTE PTR [eax-0x57],0xaa
  4144a8:	mov    bh,0x89
  4144aa:	and    bl,ah
  4144ac:	lahf   
  4144ad:	adc    DWORD PTR [ebp-0x31],esi
  4144b0:	or     eax,0xac9b6835
  4144b5:	mov    bh,bh
  4144b7:	mov    ebx,0x81d9795c
  4144bc:	enter  0x196e,0xe6
  4144c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144c1:	push   ss
  4144c2:	push   es
  4144c3:	aaa    
  4144c4:	pop    edx
  4144c5:	(bad)  
  4144c6:	mov    bl,0x27
  4144c8:	sub    DWORD PTR [ebp+0x36],ecx
  4144cb:	sub    al,0x75
  4144cd:	jge    0x414456
  4144cf:	jg     0x414460
  4144d1:	mov    ch,0xd4
  4144d3:	retf   
  4144d4:	call   0xe2f31fc7
  4144d9:	adc    eax,0x15268428
  4144de:	ret    0x66ba
  4144e1:	push   ebx
  4144e2:	fimul  DWORD PTR [eax]
  4144e4:	push   cs
  4144e5:	or     al,0xe5
  4144e7:	sbb    eax,0x94084ad4
  4144ec:	shl    DWORD PTR [ebp-0x187483c1],cl
  4144f2:	jge    0x414528
  4144f4:	sub    ch,BYTE PTR [edi]
  4144f6:	dec    edx
  4144f7:	out    0x6c,eax
  4144f9:	retf   
  4144fa:	test   al,0x53
  4144fc:	(bad)  
  4144fd:	icebp  
  4144fe:	jnp    0x414526
  414500:	rcr    BYTE PTR [edi],0x53
  414503:	out    0x68,eax
  414505:	in     eax,0xf2
  414507:	cmp    ch,BYTE PTR [edx+0x188d0a3f]
  41450d:	mov    ds:0x21ee484f,eax
  414512:	in     eax,0xc5
  414514:	push   ebx
  414515:	clc    
  414516:	mov    al,0xd1
  414518:	nop
  414519:	cmp    esi,esi
  41451b:	mov    dh,0x6f
  41451d:	mov    cl,0x9
  41451f:	pop    ebx
  414520:	dec    esi
  414521:	loope  0x414507
  414523:	pop    ebp
  414524:	mov    ch,0x98
  414526:	sti    
  414527:	xchg   ecx,eax
  414528:	cmp    eax,0x6e0d3b84
  41452d:	cmp    al,0x85
  41452f:	mov    ch,0x94
  414531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414532:	popa   
  414533:	mov    eax,0xe39573e8
  414538:	inc    edi
  414539:	inc    ebx
  41453a:	data16 lahf 
  41453c:	fwait
  41453d:	cwde   
  41453e:	dec    eax
  41453f:	call   0xd7c2:0xe4e19b3f
  414546:	pop    ebx
  414547:	xchg   edi,eax
  414548:	push   esp
  414549:	and    al,0xa3
  41454b:	cmp    bh,cl
  41454d:	pop    ds
  41454e:	xor    BYTE PTR [edi-0xdf8a981],0xbe
  414555:	das    
  414556:	mul    DWORD PTR [edi+0x7ede720a]
  41455c:	jmp    0x4145bb
  41455e:	lds    edi,FWORD PTR es:[eax]
  414561:	mov    al,ds:0x37672330
  414566:	stc    
  414567:	pop    eax
  414568:	fimul  WORD PTR [edi+ebp*4+0x19d81a4b]
  41456f:	add    DWORD PTR [ebx-0xa],ecx
  414572:	fwait
  414573:	test   al,0x54
  414575:	mov    ebx,0x723f8acc
  41457a:	(bad)  
  41457b:	stc    
  41457c:	shl    BYTE PTR [ebx],1
  41457e:	out    0x94,al
  414580:	stos   DWORD PTR es:[edi],eax
  414581:	cmp    al,0xc0
  414583:	xchg   edi,eax
  414584:	jp     0x4145e3
  414586:	sahf   
  414587:	sub    edx,ebp
  414589:	and    bh,ah
  41458b:	push   ds
  41458c:	inc    edi
  41458d:	mov    eax,ds:0x2366d4b6
  414592:	cli    
  414593:	call   0x8d00:0x17c16bd1
  41459a:	cmc    
  41459b:	push   0xffffffcf
  41459d:	fidivr DWORD PTR [ebp+0x6a]
  4145a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145a1:	loop   0x414549
  4145a3:	pop    edi
  4145a4:	xchg   edx,eax
  4145a5:	xor    dh,BYTE PTR [ebp-0x23]
  4145a8:	cdq    
  4145a9:	xchg   esi,eax
  4145aa:	mov    cl,0x61
  4145ac:	inc    eax
  4145ad:	cdq    
  4145ae:	adc    DWORD PTR [esi+0x7959c78],esi
  4145b4:	mov    esp,0x901e3a6b
  4145b9:	imul   esp,DWORD PTR [ebx],0x90f26d94
  4145bf:	jge    0x414605
  4145c1:	icebp  
  4145c2:	sbb    ch,dh
  4145c4:	out    dx,eax
  4145c5:	cs sbb eax,0x89aecd29
  4145cb:	imul   esi,DWORD PTR [eax+0x3d],0x4603d836
  4145d2:	shl    BYTE PTR [edx],1
  4145d4:	cmp    DWORD PTR ds:[edi],0x6a
  4145d8:	pop    ebx
  4145d9:	jecxz  0x4145b7
  4145db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145dc:	arpl   sp,bp
  4145de:	jmp    0x6887:0x2b66a6cc
  4145e5:	xchg   edx,eax
  4145e6:	sub    al,0x9b
  4145e8:	ror    DWORD PTR ds:0xed50c827,1
  4145ee:	ins    BYTE PTR es:[edi],dx
  4145ef:	sub    al,0xd4
  4145f1:	imul   ecx,DWORD PTR [esp+esi*4+0x9],0xffffffbe
  4145f6:	(bad)  
  4145f7:	test   ebx,0xf1d441d7
  4145fd:	fs jle 0x4145ee
  414600:	in     al,dx
  414601:	add    BYTE PTR [edx-0x2dd02090],dh
  414607:	or     BYTE PTR [edi-0xb],ah
  41460a:	ja     0x4145d4
  41460c:	xor    eax,0xabdd4fcb
  414611:	cli    
  414612:	pop    ebp
  414613:	(bad)  
  414615:	jb     0x4145e8
  414617:	mov    DWORD PTR [ebp+0x550826ea],ecx
  41461d:	push   esi
  41461e:	mov    dl,0xcf
  414620:	dec    edi
  414621:	add    DWORD PTR [ebp-0x70],ecx
  414624:	out    dx,al
  414625:	jb     0x414692
  414627:	(bad)
  41462b:	cmp    ah,BYTE PTR [ebx-0x71]
  41462e:	or     BYTE PTR [edx-0x1d83ebbc],dl
  414634:	data16 in al,0xc4
  414637:	push   es
  414638:	adc    al,0xf6
  41463a:	pop    esi
  41463b:	dec    esp
  41463c:	test   BYTE PTR ds:0xb2c83131,bh
  414642:	imul   edi,DWORD PTR [ebx-0x3a2ba44],0xffffffbe
  414649:	adc    al,0xb6
  41464b:	hlt    
  41464c:	adc    DWORD PTR [ebx-0x67],edi
  41464f:	jle    0x41462e
  414651:	pop    ecx
  414652:	mov    dl,0x6f
  414654:	pop    esp
  414656:	xchg   edi,eax
  414657:	(bad)  
  414658:	cmp    al,0xf
  41465a:	xchg   edx,eax
  41465b:	add    al,0x16
  41465d:	js     0x4146a2
  41465f:	addr16 xor dl,al
  414662:	call   0xda69:0x74a293e3
  414669:	jno    0x414619
  41466b:	(bad)
  41466e:	iret   
  41466f:	popa   
  414670:	cmp    DWORD PTR [edx+0x60],ebp
  414673:	xchg   DWORD PTR [ecx+0x4b],ebp
  414676:	cmp    DWORD PTR [eax+0x646c097b],0xdacf0aa3
  414680:	loop   0x414624
  414682:	push   esp
  414683:	and    DWORD PTR [edx],0xffffffe1
  414686:	push   edi
  414687:	retf   
  414688:	movzx  esi,BYTE PTR ds:0xf585426e
  41468f:	das    
  414690:	add    eax,0xcce3081f
  414695:	or     eax,0x24b4a3ae
  41469a:	sub    DWORD PTR [esi-0xb],esi
  41469d:	sbb    al,0x63
  41469f:	or     BYTE PTR [ebp+0x25],bh
  4146a2:	fcomp  QWORD PTR [ebx-0x14]
  4146a5:	enter  0x50dd,0xf5
  4146a9:	dec    esi
  4146aa:	mov    dl,0x41
  4146ac:	pusha  
  4146ad:	pop    edi
  4146ae:	inc    esi
  4146af:	inc    ecx
  4146b0:	ja     0x4146f1
  4146b2:	ror    DWORD PTR [eax+eax*2-0xaf7432],0x8f
  4146ba:	jmp    0x6c2b:0x29d87ccc
  4146c1:	push   ss
  4146c2:	jne    0x41466d
  4146c4:	shr    esp,1
  4146c6:	jnp    0x41473a
  4146c8:	mov    ebp,0x11ecad02
  4146cd:	leave  
  4146ce:	iret   
  4146cf:	call   0xe70f:0xdb351d42
  4146d6:	inc    esp
  4146d7:	sub    dh,cl
  4146d9:	adc    eax,0x174fedf7
  4146de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146df:	or     ecx,esp
  4146e1:	and    al,BYTE PTR [edi+0x2]
  4146e4:	add    DWORD PTR [ecx-0x10],esi
  4146e7:	mov    esp,0x91a3a054
  4146ec:	ret    
  4146ed:	mov    bl,0xbe
  4146ef:	shl    BYTE PTR [ebx+0x55f7978b],cl
  4146f5:	pushf  
  4146f6:	aad    0x4d
  4146f8:	add    bh,dh
  4146fa:	mov    ds:0x9ef2eef2,eax
  4146ff:	jno    0x41475e
  414701:	pop    esp
  414702:	ret    0x1246
  414705:	cmp    ax,0x5fea
  414709:	lods   al,BYTE PTR ds:[esi]
  41470a:	das    
  41470b:	ins    DWORD PTR es:[edi],dx
  41470c:	mov    esp,0xff9cc0ea
  414711:	xchg   BYTE PTR [edi],ah
  414713:	mov    esi,0xdc778c2f
  414718:	add    ecx,ebp
  41471a:	gs cmp eax,0x528ddd0f
  414720:	test   dh,bl
  414722:	adc    al,0xab
  414724:	jno    0x414762
  414726:	test   al,0x8b
  414728:	push   ebp
  414729:	adc    BYTE PTR [ebx-0x24cceba3],cl
  41472f:	or     ecx,ebx
  414731:	add    eax,ecx
  414733:	lea    eax,[ebp+eax*4-0x7c]
  414737:	push   eax
  414738:	shl    edx,0x1e
  41473b:	call   0x411c08
  414740:	mov    eax,DWORD PTR [ebp-0x80]
  414743:	mov    ecx,DWORD PTR [ebp-0x80]
  414746:	xor    eax,edi
  414748:	xor    ecx,0xfffffffe
  41474b:	shr    eax,0x2
  41474e:	shl    ecx,0x1e
  414751:	or     ecx,eax
  414753:	mov    DWORD PTR [ebp-0x80],ecx
  414756:	lea    eax,[ebp-0x80]
  414759:	push   eax
  41475a:	mov    eax,DWORD PTR [ebp+0x10]
  41475d:	mov    ecx,DWORD PTR [ebp+0x14]
  414760:	shrd   eax,ecx,0x2
  414764:	shr    ecx,0x2
  414767:	mov    ecx,DWORD PTR [ebp+0x10]
  41476a:	mov    edx,DWORD PTR [ebp+0x14]
  41476d:	xor    eax,esi
  41476f:	xor    edx,edx
  414771:	or     eax,edx
  414773:	push   eax
  414774:	mov    eax,ds:0x422738
  414779:	mov    edi,0x42267e
  41477e:	push   edi
  41477f:	push   DWORD PTR [eax]
  414781:	shl    ecx,0x1e
  414784:	call   0x41b447
  414789:	lea    eax,[ebp-0x80]
  41478c:	push   eax
  41478d:	mov    eax,DWORD PTR [ebp+0x10]
  414790:	jmp    0x414ac9
  414795:	pop    ds
  414796:	cmp    eax,0xaf9fd01d
  41479b:	das    
  41479c:	lods   eax,DWORD PTR ds:[esi]
  41479d:	sbb    DWORD PTR [esi-0x6ab15b39],edi
  4147a3:	mov    ss,WORD PTR [eax-0x41416155]
  4147a9:	in     eax,dx
  4147aa:	les    edi,FWORD PTR [esi+0xc15d7be]
  4147b0:	ret    0x5574
  4147b3:	scas   al,BYTE PTR es:[edi]
  4147b4:	and    ebp,0xffffffad
  4147b7:	call   0xc4b1badb
  4147bc:	jno    0x414821
  4147be:	ret    
  4147bf:	fidiv  DWORD PTR [edx-0x615ad275]
  4147c5:	cwde   
  4147c6:	lods   al,BYTE PTR ds:[esi]
  4147c7:	jb     0x41475d
  4147c9:	push   ds
  4147ca:	mov    cl,0x41
  4147cc:	retf   
  4147cd:	pop    esi
  4147ce:	cmp    eax,esi
  4147d0:	das    
  4147d1:	(bad)  
  4147d2:	cmp    al,0x7b
  4147d4:	mov    esp,0x8731a979
  4147d9:	lock mov bl,0xec
  4147dc:	bnd jno 0x4147aa
  4147df:	or     al,0xd2
  4147e1:	pop    esi
  4147e2:	out    0x8c,eax
  4147e4:	js     0x4147a1
  4147e6:	xchg   DWORD PTR [ecx+0x4f68fb0],ecx
  4147ec:	lds    esp,FWORD PTR [esi-0x21]
  4147ef:	push   edi
  4147f0:	leave  
  4147f1:	inc    esp
  4147f2:	(bad)  [ecx+eiz*4]
  4147f5:	arpl   si,sp
  4147f7:	or     DWORD PTR [edx+0x376bb01d],ebp
  4147fd:	dec    edi
  4147fe:	aad    0x6b
  414800:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414802:	mov    eax,ds:0xef7954b3
  414807:	jae    0x4147bc
  414809:	stos   DWORD PTR es:[edi],eax
  41480a:	out    0xae,eax
  41480c:	and    ah,bl
  41480e:	test   DWORD PTR [ebx+0xd],eax
  414811:	imul   eax,DWORD PTR [esi],0x8de1bb7a
  414817:	icebp  
  414818:	retf   
  414819:	push   ss
  41481a:	imul   edi,ebx,0x3d
  41481d:	fadd   DWORD PTR [esi]
  41481f:	test   BYTE PTR [ecx+eiz*2-0x740474ee],bl
  414826:	cmp    BYTE PTR [edi+ebx*4+0x33a214f4],bl
  41482d:	jns    0x414877
  41482f:	pop    ecx
  414830:	repz dec eax
  414832:	lahf   
  414833:	xor    al,0xbd
  414835:	mov    esi,0xf95e7f84
  41483a:	push   ds
  41483b:	cld    
  41483c:	xchg   DWORD PTR [eax+0x24],esp
  41483f:	loope  0x414894
  414841:	and    al,0x18
  414843:	push   cs
  414844:	fbstp  TBYTE PTR [edx-0x5b]
  414847:	fld    DWORD PTR [esi-0x3f47b6e7]
  41484d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41484e:	adc    BYTE PTR [ebx-0x5813893f],dl
  414854:	(bad)  
  414855:	call   0x8ce56fdf
  41485a:	mov    bh,0xe2
  41485c:	mov    eax,0x9f2b9e9
  414861:	add    eax,0xffffffeb
  414864:	mov    ebx,0x142b1426
  414869:	or     eax,0x2394d1d7
  41486e:	inc    edx
  41486f:	push   ds
  414870:	mov    edx,0xa5a75860
  414875:	test   al,0xf8
  414877:	int    0x9a
  414879:	push   0x493c16d1
  41487e:	jo     0x414884
  414880:	pop    eax
  414881:	sbb    DWORD PTR [ecx-0x19],eax
  414884:	xsha1  (bad)
  414885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414886:	mov    DWORD PTR [ebp+0x2d],esp
  414889:	mov    eax,ds:0xf11672c6
  41488e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41488f:	(bad)  
  414890:	aad    0xd
  414892:	jecxz  0x4148fd
  414894:	sar    esi,1
  414896:	jecxz  0x414843
  414898:	repnz arpl WORD PTR [esi],dx
  41489b:	enter  0x1329,0x9b
  41489f:	cmp    BYTE PTR [eax-0x51],bl
  4148a2:	jp     0x414866
  4148a4:	add    cl,ch
  4148a6:	or     al,0x68
  4148a8:	int    0xda
  4148aa:	fsub   DWORD PTR [ebp+ecx*8-0x2e061c65]
  4148b1:	adc    eax,0x483d4cb1
  4148b6:	cmp    BYTE PTR [edx+ebp*1],0x54
  4148ba:	xlat   BYTE PTR ds:[ebx]
  4148bb:	sub    eax,0xf981ebae
  4148c0:	push   ecx
  4148c1:	add    BYTE PTR [ebx],bh
  4148c3:	(bad)  
  4148c4:	arpl   WORD PTR [ebx+0x2b],ax
  4148c7:	pop    esp
  4148c8:	pop    es
  4148c9:	retf   
  4148ca:	lods   al,BYTE PTR ds:[esi]
  4148cb:	fdivr  DWORD PTR [ebp+0x1c]
  4148ce:	dec    esi
  4148cf:	ret    
  4148d0:	dec    edi
  4148d1:	adc    ah,ah
  4148d3:	xlat   BYTE PTR ds:[ebx]
  4148d4:	cdq    
  4148d5:	inc    eax
  4148d6:	ins    DWORD PTR es:[edi],dx
  4148d7:	pop    ds
  4148d8:	movd   DWORD PTR [ecx-0x339d5660],mm3
  4148df:	xchg   BYTE PTR [ebx+0x2dff03aa],bh
  4148e5:	iret   
  4148e6:	and    eax,0x5fcacfe0
  4148eb:	(bad)  
  4148ec:	fldenv [esi-0x73db8ccf]
  4148f2:	push   0xfffffff6
  4148f4:	pop    es
  4148f5:	mov    ch,0xe1
  4148f7:	fld    TBYTE PTR [eax]
  4148f9:	adc    eax,0xc3470309
  4148fe:	arpl   WORD PTR [edi+0x6cca0ed8],ax
  414904:	pop    es
  414905:	add    ch,BYTE PTR [edi]
  414907:	xor    DWORD PTR [eax+eiz*2],ebx
  41490a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41490b:	call   0x33cfa7ea
  414910:	xchg   esi,eax
  414911:	push   cs
  414912:	in     eax,dx
  414913:	test   eax,0x100cbba0
  414918:	popa   
  414919:	test   BYTE PTR [ecx-0x383c520e],cl
  41491f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414920:	sar    DWORD PTR [edx-0x1d],0x37
  414924:	rol    ebp,cl
  414926:	jb     0x4148b8
  414928:	xchg   ecx,eax
  414929:	(bad)  
  41492a:	shr    BYTE PTR [ebx],1
  41492c:	or     al,0xac
  41492e:	clc    
  41492f:	js     0x4148e1
  414931:	jnp    0x4148e4
  414933:	lods   eax,DWORD PTR ds:[esi]
  414934:	je     0x414959
  414936:	xor    cl,dh
  414938:	outs   dx,DWORD PTR ds:[esi]
  414939:	or     DWORD PTR [esi],ebx
  41493b:	div    BYTE PTR ds:0xe3dd401b
  414941:	xchg   esp,eax
  414942:	outs   dx,BYTE PTR ds:[esi]
  414943:	mov    ebx,0xb768eccc
  414948:	ret    
  414949:	sbb    eax,0x7e0cddb
  41494e:	fistp  DWORD PTR [ebx-0x56]
  414951:	sahf   
  414952:	cmp    BYTE PTR ds:0x5d3df35b,cl
  414958:	(bad)  
  414959:	std    
  41495a:	(bad)  
  41495b:	or     BYTE PTR [eax+0x76a0588f],dl
  414961:	cld    
  414962:	outs   dx,DWORD PTR fs:[esi]
  414964:	push   esp
  414965:	test   BYTE PTR [esp+eax*4-0x8],cl
  414969:	pop    ds
  41496a:	mov    ecx,0x39f6e9b4
  41496f:	pop    es
  414970:	rcr    BYTE PTR [edi+ebp*1+0x32],1
  414974:	and    bh,BYTE PTR [eax+0x20]
  414977:	or     ecx,edi
  414979:	adc    BYTE PTR [edi],ah
  41497b:	adc    BYTE PTR [ecx],0x1f
  41497e:	ins    DWORD PTR es:[edi],dx
  41497f:	mov    eax,0x2c2ce30e
  414984:	js     0x4149fc
  414986:	icebp  
  414987:	push   DWORD PTR [ebp+eax*8-0x27]
  41498b:	adc    BYTE PTR [ecx],al
  41498d:	cs pop ebp
  41498f:	fisub  WORD PTR [eax]
  414991:	and    al,0x96
  414993:	stc    
  414994:	xchg   edx,eax
  414995:	and    esi,DWORD PTR [esi+0x78]
  414998:	xor    al,0x7c
  41499a:	leave  
  41499b:	test   dl,ah
  41499d:	je     0x41498b
  41499f:	outs   dx,DWORD PTR ds:[esi]
  4149a0:	lahf   
  4149a1:	mov    dl,0x4f
  4149a3:	(bad)  
  4149a4:	sbb    DWORD PTR [ecx],esp
  4149a6:	mov    ds:0x5c60e75b,al
  4149ab:	cs mov es,edx
  4149ae:	dec    ecx
  4149af:	nop
  4149b0:	test   esi,edx
  4149b2:	xchg   ecx,eax
  4149b3:	scas   al,BYTE PTR es:[edi]
  4149b4:	or     DWORD PTR [ebp-0x6b],esi
  4149b7:	ins    DWORD PTR es:[edi],dx
  4149b8:	xor    BYTE PTR [ebx],al
  4149ba:	sahf   
  4149bb:	mov    cl,BYTE PTR [ecx+eax*8-0x46]
  4149bf:	xchg   DWORD PTR [ecx+0x6c],esp
  4149c2:	test   BYTE PTR [ecx+eax*2-0x3244e90b],ah
  4149c9:	or     eax,0x22bb958d
  4149ce:	push   edx
  4149cf:	dec    ecx
  4149d0:	xchg   edx,eax
  4149d1:	daa    
  4149d2:	fstp   QWORD PTR [edx+edx*2+0x3f]
  4149d6:	fwait
  4149d7:	add    eax,0x988152dd
  4149dc:	icebp  
  4149dd:	sbb    al,0x49
  4149df:	addr16 add ecx,edi
  4149e2:	lock sbb al,0xb1
  4149e5:	js     0x414a4e
  4149e7:	icebp  
  4149e8:	push   edx
  4149e9:	aaa    
  4149ea:	mov    eax,ds:0x8b367007
  4149ef:	(bad)  
  4149f0:	cdq    
  4149f1:	sar    BYTE PTR [ecx],1
  4149f3:	dec    esp
  4149f4:	push   0x59
  4149f6:	xchg   ch,ch
  4149f8:	xlat   BYTE PTR ds:[ebx]
  4149f9:	xchg   ebp,eax
  4149fa:	cmp    BYTE PTR [ebx],bl
  4149fc:	into   
  4149fd:	jbe    0x943875b0
  414a03:	xor    BYTE PTR [edx],cl
  414a05:	fcomp  QWORD PTR [ecx+edx*2+0x42d815c6]
  414a0c:	lds    edi,FWORD PTR [ecx+0x104afbdb]
  414a12:	jbe    0x414a43
  414a14:	(bad)  
  414a15:	fs ret 0xf4b3
  414a19:	and    esi,DWORD PTR [esi-0x55fbd821]
  414a1f:	inc    eax
  414a20:	pop    ds
  414a21:	sbb    BYTE PTR [eax-0x5],bl
  414a24:	outs   dx,BYTE PTR ds:[esi]
  414a25:	aas    
  414a26:	ja     0x414a99
  414a28:	pop    edi
  414a29:	test   DWORD PTR [ecx],eax
  414a2b:	test   eax,0x2556278
  414a30:	xor    al,0x3e
  414a32:	ret    0x4125
  414a35:	cmp    eax,0x6db73481
  414a3a:	popf   
  414a3b:	repz je 0x414a65
  414a3e:	mov    bh,0x2f
  414a40:	(bad)  [ecx*4-0x2bf2b52c]
  414a47:	cmp    ah,BYTE PTR [ebx+0x4d]
  414a4a:	jne    0x414a48
  414a4c:	fcomp  DWORD PTR [ebp+0x74]
  414a4f:	mov    al,0xbd
  414a51:	inc    esi
  414a52:	push   ecx
  414a53:	inc    esp
  414a54:	add    BYTE PTR [edi+0x5ca7d7e0],ch
  414a5a:	mov    bl,0xe7
  414a5d:	les    ebx,FWORD PTR [ebx]
  414a5f:	or     BYTE PTR [ebx-0xf8096b1],0x55
  414a66:	pop    ebp
  414a67:	mov    ebx,DWORD PTR [ebp-0xa]
  414a6a:	add    cl,BYTE PTR [esi-0x55971438]
  414a70:	xchg   edx,eax
  414a71:	dec    ebp
  414a72:	int    0xe4
  414a74:	pop    ebx
  414a75:	(bad)  
  414a76:	and    eax,0x4c559715
  414a7b:	pop    ecx
  414a7c:	jmp    0x414a60
  414a7e:	es add al,bl
  414a81:	mov    ebp,edi
  414a83:	jmp    0xfc0f7b22
  414a88:	xor    edi,ecx
  414a8a:	or     eax,0x58fa2c4c
  414a8f:	js     0x414a92
  414a91:	stc    
  414a92:	je     0x414aa1
  414a94:	sub    DWORD PTR [eax-0x66],edx
  414a97:	xchg   ecx,eax
  414a98:	adc    DWORD PTR [esi+ebx*8],esi
  414a9b:	scas   eax,DWORD PTR es:[edi]
  414a9c:	jbe    0x414a41
  414a9e:	jo     0x414acd
  414aa0:	sbb    esi,DWORD PTR [ecx+0x32953299]
  414aa6:	dec    edi
  414aa7:	add    cl,BYTE PTR [ebp-0x3bac2611]
  414aad:	cdq    
  414aae:	std    
  414aaf:	jp     0x414ab1
  414ab1:	imul   ebx,DWORD PTR [eax-0x1f3a3f31],0xffffffff
  414ab8:	mov    edx,0x37513317
  414abd:	or     ebx,ebp
  414abf:	xor    al,0xae
  414ac1:	or     eax,0xa810a4bd
  414ac6:	xor    esp,eax
  414ac8:	fisttp QWORD PTR [ebx-0x53f0ebb3]
  414ace:	enter  0xc102,0xe9
  414ad2:	add    cl,BYTE PTR [ebx+0x558b104d]
  414ad8:	adc    al,0x33
  414ada:	(bad)  
  414adb:	xor    edx,edx
  414add:	or     eax,edx
  414adf:	push   eax
  414ae0:	mov    eax,ds:0x422738
  414ae5:	push   edi
  414ae6:	push   DWORD PTR [eax]
  414ae8:	shl    ecx,0x1e
  414aeb:	call   0x41b447
  414af0:	mov    eax,DWORD PTR [ebp-0x3c]
  414af3:	mov    eax,DWORD PTR [ebp-0x2c]
  414af6:	mov    edi,DWORD PTR [ebp-0x24]
  414af9:	mov    eax,DWORD PTR [ebp-0x30]
  414afc:	mov    ecx,edi
  414afe:	mov    DWORD PTR [ebp-0x1c],eax
  414b01:	rol    ecx,0x2
  414b04:	mov    eax,0xa5069bae
  414b09:	xor    ecx,eax
  414b0b:	jmp    0x414e44
  414b10:	fisttp WORD PTR [eax+0x5aac5a8c]
  414b16:	xor    BYTE PTR [esp+edx*1-0x6b61eb44],bh
  414b1d:	in     al,dx
  414b1e:	jo     0x414afd
  414b20:	(bad)  [esi+edi*4-0x413b1242]
  414b27:	mov    esi,0x8a813ebe
  414b2c:	enter  0x356,0xea
  414b30:	fadd   DWORD PTR [esi+0x7b]
  414b33:	jmp    0x414b2e
  414b35:	xchg   esi,eax
  414b36:	dec    esi
  414b37:	dec    ebp
  414b38:	mov    ds:0x38f174dc,al
  414b3d:	(bad)  
  414b3f:	cmp    BYTE PTR [ebx],dh
  414b41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b42:	jg     0x414afe
  414b44:	loop   0x414b34
  414b46:	cmp    dl,0x38
  414b49:	jnp    0x414b22
  414b4b:	cmc    
  414b4c:	call   0xd667039e
  414b51:	adc    BYTE PTR [ebp+0x38],dl
  414b54:	dec    eax
  414b55:	inc    eax
  414b56:	dec    ecx
  414b57:	addr16 jns 0x414b4f
  414b5a:	inc    edi
  414b5b:	stos   DWORD PTR es:[edi],eax
  414b5c:	lea    ebp,[edi+ecx*1]
  414b5f:	aas    
  414b60:	call   DWORD PTR [edi+0x67]
  414b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b64:	aad    0x41
  414b66:	mov    eax,DWORD PTR [ecx-0x60da0f60]
  414b6c:	fs (bad) 
  414b6e:	and    bl,dh
  414b70:	fsubp  st(2),st
  414b72:	adc    DWORD PTR [ebx-0x38477cf3],esp
  414b78:	sub    DWORD PTR [ecx+0x5b],esi
  414b7b:	xchg   esi,eax
  414b7c:	dec    ecx
  414b7d:	sbb    eax,0x7995512b
  414b82:	inc    esp
  414b83:	cmp    DWORD PTR [edi+edx*1],ebp
  414b86:	or     eax,0xdeb9fc2b
  414b8b:	ins    BYTE PTR es:[edi],dx
  414b8c:	mov    bh,ch
  414b8e:	jb     0x414bef
  414b90:	mov    edi,DWORD PTR [esi+0x4]
  414b93:	retf   0x89b9
  414b96:	test   al,0x28
  414b98:	adc    eax,DWORD PTR [ebx+0x5bff5560]
  414b9e:	fst    QWORD PTR [eax+0x29]
  414ba1:	or     BYTE PTR [edx+ebp*4+0x46],0x46
  414ba6:	xor    eax,0x3b7cc224
  414bab:	add    eax,0xdc1007d9
  414bb0:	jae    0x414bca
  414bb2:	and    BYTE PTR [ebx+0x6a8556a7],cl
  414bb8:	adc    eax,0xeb2bdb31
  414bbd:	ret    
  414bbe:	ficomp DWORD PTR [esi+eiz*8-0x34f6577a]
  414bc5:	sbb    DWORD PTR [edi],ecx
  414bc7:	adc    bl,BYTE PTR [ebx+0xacc7ed8]
  414bcd:	mov    DWORD PTR [esi+ebp*4],eax
  414bd0:	or     dl,BYTE PTR [edx]
  414bd2:	test   eax,0x574bb99a
  414bd7:	push   ebx
  414bd8:	cwde   
  414bd9:	jmp    0xed0ceb2e
  414bde:	mov    ecx,0x64e1c60b
  414be3:	scas   eax,DWORD PTR es:[edi]
  414be4:	out    dx,al
  414be5:	fs fwait
  414be7:	dec    ebx
  414be8:	lahf   
  414be9:	add    BYTE PTR [eax+edx*1],bl
  414bec:	loopne 0x414b9e
  414bee:	push   0x34883fe1
  414bf3:	loop   0x414b89
  414bf5:	ss leave 
  414bf7:	gs test eax,0xdca84eb4
  414bfd:	sub    eax,0x7088a187
  414c02:	sti    
  414c03:	outs   dx,DWORD PTR ds:[esi]
  414c04:	jg     0x414c7e
  414c06:	loop   0x414c1c
  414c08:	and    ebp,edi
  414c0a:	loop   0x414c0c
  414c0c:	lock sti 
  414c0e:	sub    al,0xc5
  414c10:	sub    al,0x25
  414c12:	pusha  
  414c13:	mov    es,WORD PTR [ecx]
  414c15:	out    dx,eax
  414c16:	pop    ebx
  414c17:	fwait
  414c18:	pop    edi
  414c19:	and    ch,BYTE PTR [esi-0xc]
  414c1c:	sbb    dl,BYTE PTR [ecx+edx*8-0x71732bc0]
  414c23:	inc    esp
  414c24:	jmp    0x8ac9:0xcb0c47a9
  414c2b:	push   esp
  414c2c:	ins    BYTE PTR es:[edi],dx
  414c2d:	mov    dh,0x3f
  414c2f:	jp     0x414c5c
  414c31:	enter  0x120c,0x48
  414c35:	jnp    0x414bf4
  414c37:	push   edx
  414c38:	pop    edx
  414c39:	mov    ds:0x2955cf3b,eax
  414c3e:	push   ss
  414c3f:	sbb    BYTE PTR [edi+0x1ffccf78],bl
  414c45:	nop
  414c46:	mov    ds:0x746d4a08,al
  414c4b:	mov    ecx,DWORD PTR [esi-0x4fc8eba9]
  414c51:	xchg   BYTE PTR [ebp+0x15e2c13c],dh
  414c57:	mov    bh,0x2c
  414c59:	xchg   esi,eax
  414c5a:	jne    0x414bfb
  414c5c:	(bad)  
  414c5d:	lahf   
  414c5e:	imul   edi,DWORD PTR [edx+edx*4+0x69],0x13
  414c63:	sbb    edi,ebp
  414c65:	sbb    DWORD PTR [ebx+0x37],0xffffffcf
  414c69:	aam    0xc3
  414c6b:	mov    ebx,0xf08fc4fd
  414c70:	push   edx
  414c71:	mov    ecx,DWORD PTR [edi]
  414c73:	retf   0x294c
  414c76:	add    ebp,DWORD PTR [ebp-0x5cd6241b]
  414c7c:	(bad)  
  414c7d:	jae    0x414cc7
  414c7f:	lods   al,BYTE PTR ds:[esi]
  414c80:	mov    ds:0xa5afaf5a,al
  414c85:	ins    DWORD PTR es:[edi],dx
  414c86:	pop    es
  414c87:	lods   eax,DWORD PTR ds:[esi]
  414c88:	add    al,0x1d
  414c8a:	cld    
  414c8b:	jle    0x414c8f
  414c8d:	sti    
  414c8e:	pop    eax
  414c8f:	lahf   
  414c90:	daa    
  414c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c92:	xchg   esi,eax
  414c93:	fcmovbe st,st(7)
  414c95:	mov    WORD PTR [ebx+eiz*2+0x4e],es
  414c99:	fmul   st(5),st
  414c9b:	xchg   ebx,eax
  414c9c:	ret    
  414c9d:	retf   0x41d
  414ca0:	icebp  
  414ca1:	jle    0x414d08
  414ca3:	mov    eax,0x632a1719
  414ca8:	ds mov edx,0x38f637ce
  414cae:	es in  eax,dx
  414cb0:	rcl    BYTE PTR [esi],1
  414cb2:	add    esp,DWORD PTR [ecx]
  414cb4:	gs adc al,0xc8
  414cb7:	inc    ecx
  414cb8:	push   esi
  414cb9:	cs mov edx,0xfdd39195
  414cbf:	inc    ecx
  414cc0:	pop    es
  414cc1:	jge    0x414cdd
  414cc3:	jne    0x414c69
  414cc5:	test   eax,0x1e7a914d
  414cca:	bswap  ebp
  414ccc:	fimul  WORD PTR [ebx]
  414cce:	pushf  
  414ccf:	xchg   esp,eax
  414cd0:	jmp    FWORD PTR [ebx+ebp*1-0x5aeb8d4a]
  414cd7:	int    0x73
  414cd9:	repz mov dl,0xd3
  414cdc:	mov    bh,al
  414cde:	mov    ch,0xde
  414ce0:	push   ebp
  414ce1:	jle    0x414d1d
  414ce3:	pop    ss
  414ce4:	push   es
  414ce5:	mov    ah,0x6c
  414ce7:	aad    0x74
  414ce9:	call   0x2903:0xe3ccc012
  414cf0:	fld    TBYTE PTR [esi-0x70f6a33a]
  414cf6:	xchg   edi,eax
  414cf7:	xor    DWORD PTR [ecx],esp
  414cf9:	ins    BYTE PTR es:[edi],dx
  414cfa:	adc    eax,0x12a9b254
  414cff:	in     al,dx
  414d00:	inc    eax
  414d01:	aaa    
  414d02:	cdq    
  414d03:	push   edi
  414d04:	xchg   ebx,eax
  414d05:	dec    ebx
  414d06:	or     esi,DWORD PTR [edx+0x11]
  414d09:	push   esp
  414d0a:	adc    dh,dh
  414d0c:	out    dx,eax
  414d0d:	in     al,0x78
  414d0f:	jne    0x414cc6
  414d11:	fdiv   QWORD PTR [edi]
  414d13:	out    dx,eax
  414d14:	icebp  
  414d15:	sti    
  414d16:	pop    es
  414d17:	jmp    0x2bde:0x9dd77da1
  414d1e:	sti    
  414d1f:	or     ch,BYTE PTR [ebx-0x68]
  414d22:	cmc    
  414d23:	pop    esp
  414d24:	mov    ah,BYTE PTR [edi+0x5e041c99]
  414d2a:	add    esp,DWORD PTR [edi+0xc6ccd77]
  414d30:	div    BYTE PTR [ebp-0x1fc9c198]
  414d36:	aam    0x6
  414d38:	lds    ecx,FWORD PTR [ecx-0x52]
  414d3b:	ins    DWORD PTR es:[edi],dx
  414d3c:	repz repz mov ecx,0x47f3b7e6
  414d43:	add    BYTE PTR [eax+0x4f],bh
  414d46:	jnp    0x414d17
  414d48:	push   esp
  414d49:	mov    ah,0xf
  414d4b:	cdq    
  414d4c:	mov    ah,0x4e
  414d4e:	or     ecx,ebp
  414d50:	ja     0x414d67
  414d52:	mov    WORD PTR [ecx+esi*8],ss
  414d55:	stc    
  414d56:	push   ebx
  414d57:	lahf   
  414d58:	and    al,0x3f
  414d5a:	dec    ebp
  414d5b:	pop    ecx
  414d5c:	cmp    al,BYTE PTR [ecx+0x41ea9b11]
  414d62:	in     eax,dx
  414d63:	push   esi
  414d64:	pop    esp
  414d65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d66:	jg     0x414d90
  414d68:	push   ds
  414d69:	mov    eax,ds:0x7de2f3a1
  414d6e:	aad    0xef
  414d70:	les    edi,FWORD PTR [esi+0x1ef54349]
  414d76:	mov    al,0xd0
  414d78:	pop    ss
  414d79:	mov    edi,0x2c0e73b8
  414d7e:	xchg   ebx,eax
  414d7f:	adc    bl,BYTE PTR [edx]
  414d81:	das    
  414d82:	icebp  
  414d83:	push   eax
  414d84:	mov    ?,WORD PTR [ecx+0x355abb25]
  414d8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d8b:	lahf   
  414d8c:	jp     0x414d37
  414d8e:	jne    0x414dd6
  414d90:	or     bh,ch
  414d92:	outs   dx,DWORD PTR ds:[esi]
  414d93:	cli    
  414d94:	fistp  WORD PTR [edx+ebx*4+0x0]
  414d98:	adc    edi,DWORD PTR [ebp-0x16]
  414d9b:	mov    edx,0xb8bef370
  414da0:	push   ds
  414da1:	ins    BYTE PTR es:[edi],dx
  414da2:	cmc    
  414da3:	out    dx,eax
  414da4:	jecxz  0x414d4b
  414da6:	mov    edi,0xc225aac0
  414dab:	out    0x7c,al
  414dad:	push   eax
  414dae:	popa   
  414daf:	ins    BYTE PTR es:[edi],dx
  414db0:	mov    bl,0xf
  414db2:	inc    edi
  414db3:	mov    ds:0x9ad14cd,al
  414db8:	(bad)  
  414db9:	scas   al,BYTE PTR es:[edi]
  414dba:	repnz cmp BYTE PTR [ebx],dh
  414dbd:	test   BYTE PTR [esi-0x6],0x5f
  414dc1:	xor    BYTE PTR [ecx-0x71],ah
  414dc4:	mov    eax,ds:0x5bab29fc
  414dc9:	neg    DWORD PTR [ecx-0x190c8301]
  414dcf:	(bad)  
  414dd0:	mov    ecx,0xa6f87141
  414dd5:	(bad)  
  414dd6:	cmp    DWORD PTR [edi+eiz*1-0x7acc4a40],ecx
  414ddd:	cli    
  414dde:	pop    DWORD PTR [eax-0x38]
  414de1:	stc    
  414de2:	call   0x219fd6d9
  414de7:	xor    eax,0x80911d0b
  414dec:	enter  0x3651,0xa1
  414df0:	mov    eax,0x54226b56
  414df5:	dec    ebp
  414df6:	fs cld 
  414df8:	loope  0x414dad
  414dfa:	sub    DWORD PTR [ebp+0x772c917],ecx
  414e00:	cmp    DWORD PTR [ebx-0x4c8c3d33],0xfffffffe
  414e07:	cli    
  414e08:	int3   
  414e09:	or     ebp,DWORD PTR [eax-0x5f]
  414e0c:	xchg   edi,ecx
  414e0e:	push   ebp
  414e0f:	sbb    al,0x8a
  414e11:	xchg   edi,eax
  414e12:	imul   ecx,DWORD PTR [esi+0x51],0xd37bbc12
  414e19:	jae    0x414da9
  414e1b:	jae    0x414e19
  414e1d:	and    ebp,DWORD PTR [edi+ebx*4-0x41da4f99]
  414e24:	cdq    
  414e25:	cwde   
  414e26:	xchg   ecx,eax
  414e27:	stos   DWORD PTR es:[edi],eax
  414e28:	lock adc edx,DWORD PTR [ecx]
  414e2b:	push   ecx
  414e2c:	(bad)  
  414e2d:	push   esp
  414e2e:	xchg   esi,eax
  414e2f:	jbe    0x414e16
  414e31:	push   ebx
  414e32:	adc    eax,0x61832553
  414e37:	sbb    BYTE PTR cs:[esi-0x3e21ae83],0x2c
  414e3f:	xchg   edx,eax
  414e40:	mov    ebp,0x3be1d50b
  414e45:	enter  0x34e9,0x3
  414e49:	add    BYTE PTR [eax],al
  414e4b:	call   0xa44dd255
  414e50:	mov    WORD PTR [edi+0x2a],fs
  414e53:	mov    eax,0xa69e22a6
  414e58:	xchg   edi,eax
  414e59:	fisttp QWORD PTR ds:[edx+ebp*4]
  414e5d:	mov    esi,0xbec4edbe
  414e62:	mov    esi,0x8acc0db5
  414e67:	adc    ah,al
  414e69:	(bad)  
  414e6a:	mov    edx,0x71adcbeb
  414e6f:	inc    esp
  414e70:	inc    ebp
  414e71:	jge    0x414ea7
  414e73:	or     bh,dh
  414e75:	mov    cl,dl
  414e77:	push   ebp
  414e78:	cmc    
  414e79:	add    DWORD PTR [eax+0x22],ecx
  414e7c:	(bad)  
  414e7d:	cmp    bl,dl
  414e7f:	jb     0x414e72
  414e81:	xchg   BYTE PTR [edi-0x60],dh
  414e84:	ins    BYTE PTR es:[edi],dx
  414e85:	rol    cl,0x7d
  414e88:	ds sahf 
  414e8a:	dec    eax
  414e8b:	mov    al,ds:0x9e6f7568
  414e90:	pop    edx
  414e91:	mov    dh,0x34
  414e93:	jmp    0x8b9e:0xc52b5bee
  414e9a:	pushf  
  414e9b:	dec    ecx
  414e9c:	mov    al,ds:0xa64a38a2
  414ea1:	int    0xfd
  414ea3:	inc    eax
  414ea4:	outs   dx,DWORD PTR ds:[esi]
  414ea5:	cmp    al,0x50
  414ea7:	or     BYTE PTR [esi+eax*1+0x5b6f017b],ah
  414eae:	mov    ebx,0x286f402e
  414eb3:	push   ss
  414eb4:	fisttp DWORD PTR [esi-0x57]
  414eb7:	out    dx,al
  414eb8:	and    DWORD PTR ds:0x482e0eca,ecx
  414ebe:	bound  edx,QWORD PTR [ebp+0x651d0248]
  414ec4:	cmc    
  414ec5:	mov    al,0xc4
  414ec7:	mov    DWORD PTR [ebx],ebp
  414ec9:	jge    0x414f23
  414ecb:	jle    0x414edf
  414ecd:	mov    eax,0xa98b7acc
  414ed2:	cli    
  414ed3:	xor    BYTE PTR [edx+0x65e30f2e],al
  414ed9:	test   eax,0x6824f963
  414ede:	adc    al,0x9e
  414ee0:	sub    ebp,DWORD PTR [eax*2+0x5ef9e5c3]
  414ee7:	sub    DWORD PTR ds:0xa49fad29,ebp
  414eed:	sti    
  414eee:	jmp    0x1f673ddb
  414ef3:	loopne 0x414eb0
  414ef5:	sbb    DWORD PTR [eax+eiz*2-0x6e],edx
  414ef9:	aaa    
  414efa:	ret    
  414efb:	icebp  
  414efc:	retf   
  414efd:	sbb    ebx,esp
  414eff:	mov    esi,0x60670e88
  414f04:	mov    ah,0x2
  414f06:	pop    ecx
  414f07:	xchg   edi,eax
  414f08:	out    0xcb,eax
  414f0a:	loopne 0x414f71
  414f0c:	dec    ebx
  414f0d:	sub    BYTE PTR [edx+0x45],0xb9
  414f11:	inc    ebp
  414f12:	sbb    al,0x1b
  414f14:	nop
  414f15:	adc    DWORD PTR [ecx-0x3451456c],0xffffffeb
  414f1c:	cmp    edx,edi
  414f1e:	cmp    dl,BYTE PTR [esp+eax*2-0x55]
  414f22:	add    al,0x74
  414f24:	xor    eax,0xe20fd6c0
  414f29:	(bad)  
  414f2a:	fidivr WORD PTR [ecx+0x55ceec51]
  414f30:	mov    bh,0x70
  414f32:	fucomp st(6)
  414f34:	xchg   ebp,eax
  414f35:	push   eax
  414f36:	adc    eax,0xd0e6dd06
  414f3b:	sahf   
  414f3c:	popf   
  414f3d:	mov    ebx,0xe9c1acd7
  414f42:	lds    ebx,FWORD PTR [ebx-0x5b]
  414f45:	push   edx
  414f46:	xor    al,0xa7
  414f48:	lock std 
  414f4a:	retf   0x3416
  414f4d:	and    eax,0xaaab5d77
  414f52:	push   eax
  414f53:	in     eax,dx
  414f54:	scas   eax,DWORD PTR es:[edi]
  414f55:	inc    esp
  414f56:	jg     0x414f55
  414f58:	loope  0x414f7c
  414f5a:	ficomp DWORD PTR [ecx-0x8]
  414f5d:	pop    ecx
  414f5e:	jp     0x414f42
  414f60:	xchg   BYTE PTR [edi+ebp*2-0xc73fb6e],ch
  414f67:	or     eax,0x6ecbc830
  414f6c:	xchg   esp,eax
  414f6d:	sub    cl,bl
  414f6f:	mov    bh,0xe
  414f71:	clc    
  414f72:	inc    edx
  414f73:	and    BYTE PTR [ebx+0x48],0x85
  414f77:	jae    0x414f80
  414f79:	fnstsw WORD PTR [esi-0x17]
  414f7c:	or     ecx,DWORD PTR [edi]
  414f7e:	into   
  414f7f:	push   cs
  414f80:	mov    al,0xe5
  414f82:	int3   
  414f83:	sub    BYTE PTR [edi],ah
  414f85:	dec    ecx
  414f86:	pop    ss
  414f87:	mov    cl,0x1a
  414f89:	mov    eax,0x86d6916a
  414f8e:	mov    ch,0xe8
  414f90:	neg    BYTE PTR [edi-0x1c]
  414f93:	mov    bh,0xd0
  414f95:	jmp    0x414f7f
  414f97:	or     DWORD PTR [eax+eiz*2-0x7b0a27d3],ebp
  414f9e:	jmp    0x414fef
  414fa0:	pop    esp
  414fa1:	fimul  DWORD PTR [eax]
  414fa3:	icebp  
  414fa4:	push   es
  414fa5:	sbb    ebx,DWORD PTR [edi+0x28]
  414fa8:	xchg   ecx,eax
  414fa9:	ins    DWORD PTR es:[edi],dx
  414faa:	dec    esi
  414fab:	mov    edx,0x98389b15
  414fb0:	and    al,0x8c
  414fb2:	pop    es
  414fb3:	sbb    eax,0xa83b75c6
  414fb8:	iret   
  414fb9:	jno    0x414f60
  414fbb:	test   BYTE PTR [edi],al
  414fbd:	call   0xae99:0x621c53ef
  414fc4:	adc    edx,DWORD PTR [ecx+0xf92eb21]
  414fca:	cli    
  414fcb:	jle    0x414f97
  414fcd:	call   FWORD PTR [ebx+ebx*2+0x1c]
  414fd1:	retf   0xa185
  414fd4:	mov    cl,0xa4
  414fd6:	stos   DWORD PTR es:[edi],eax
  414fd7:	push   ds
  414fd8:	scas   eax,DWORD PTR es:[edi]
  414fd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fda:	ins    DWORD PTR es:[edi],dx
  414fdb:	pop    edx
  414fdc:	mov    ebp,0x5f2046db
  414fe1:	pusha  
  414fe2:	add    al,0xa4
  414fe4:	and    DWORD PTR [ebx],0x700c32a8
  414fea:	aam    0xed
  414fec:	loope  0x41500e
  414fee:	cmp    DWORD PTR [esi],esp
  414ff0:	(bad)  
  414ff2:	popa   
  414ff3:	or     bh,BYTE PTR [ecx]
  414ff5:	pop    esi
  414ff6:	pop    esp
  414ff7:	jo     0x414fbc
  414ff9:	popf   
  414ffa:	in     eax,0xbe
  414ffc:	xlat   BYTE PTR ds:[ebx]
  414ffd:	fs popf 
  414fff:	mov    ?,WORD PTR ds:0x383d9a7d
  415005:	iret   
  415006:	xchg   dh,ch
  415008:	push   eax
  415009:	jge    0x414fea
  41500b:	pushf  
  41500c:	in     al,dx
  41500d:	fsubr  DWORD PTR [ecx-0x72]
  415010:	mov    edx,0x5092b504
  415015:	xor    eax,ebx
  415017:	addr16 aam 0xa9
  41501a:	xor    eax,DWORD PTR [ebp+edx*2+0x3a]
  41501e:	pushf  
  41501f:	and    eax,0xa67e5e65
  415024:	xchg   esi,eax
  415025:	in     eax,dx
  415026:	lods   eax,DWORD PTR ds:[esi]
  415027:	jg     0x414ff6
  415029:	pop    edi
  41502a:	mov    cs,WORD PTR [edi-0x68ce1b73]
  415030:	mov    esi,0x2a6aa0a9
  415035:	mov    bl,0x8e
  415037:	xor    DWORD PTR [ebx-0x35],esi
  41503a:	ja     0x415068
  41503c:	bound  ebx,QWORD PTR [esi+0x36]
  41503f:	sbb    al,0x49
  415041:	xchg   ecx,eax
  415042:	fs scas al,BYTE PTR es:[edi]
  415044:	fnsave [esi+0x49]
  415047:	dec    edx
  415048:	pop    ebp
  415049:	popa   
  41504a:	sub    DWORD PTR [ebx-0x1e7fdc7],ebp
  415050:	jbe    0x41506e
  415052:	push   0xb4d55047
  415057:	in     eax,0x5a
  415059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41505a:	xor    al,0xba
  41505c:	inc    ebx
  41505d:	xor    al,0xf0
  41505f:	or     esp,DWORD PTR [edi-0x42f1da89]
  415065:	jne    0x41506a
  415067:	inc    ebp
  415068:	popa   
  415069:	pop    ss
  41506a:	daa    
  41506b:	dec    esp
  41506c:	aas    
  41506d:	das    
  41506e:	inc    esi
  41506f:	(bad)  
  415070:	mov    ebp,DWORD PTR [ebx]
  415072:	mov    edx,0xc5aa9f46
  415077:	jbe    0x415034
  415079:	adc    eax,0xa6962e79
  41507e:	cli    
  41507f:	mov    ecx,0xa9a4031f
  415084:	mov    esp,DWORD PTR [ebx-0x14]
  415087:	jno    0x415044
  415089:	jne    0x41504a
  41508b:	sub    ebx,DWORD PTR [edx-0x364b350d]
  415091:	cmc    
  415092:	test   eax,0x96ca3d27
  415097:	(bad)  
  415098:	sbb    cl,bh
  41509a:	sub    DWORD PTR cs:[ebx],ecx
  41509d:	or     cl,BYTE PTR [ecx-0x6f]
  4150a0:	add    al,0x26
  4150a2:	jmp    0x119b:0x2478
  4150a8:	mov    eax,0xbbf7e61b
  4150ad:	xchg   ecx,eax
  4150ae:	mov    ebx,0x36abd1f5
  4150b3:	sbb    al,0xd7
  4150b5:	sub    BYTE PTR [edx],dl
  4150b7:	sub    dl,BYTE PTR [eax]
  4150b9:	shl    BYTE PTR [ecx-0xa],0x50
  4150bd:	enter  0x22af,0xf4
  4150c1:	cmp    ecx,DWORD PTR [edx-0x13f1f7ec]
  4150c7:	and    ebx,DWORD PTR ds:0x27f2c99b
  4150cd:	mov    ebp,0x7170a9fe
  4150d2:	leave  
  4150d3:	pop    ecx
  4150d4:	lahf   
  4150d5:	enter  0x479c,0x9d
  4150d9:	jne    0x415079
  4150db:	jle    0x415110
  4150dd:	lods   eax,DWORD PTR ds:[esi]
  4150de:	pop    ss
  4150df:	lods   al,BYTE PTR ds:[esi]
  4150e0:	jp     0x4150b2
  4150e2:	pop    ebp
  4150e3:	pop    ebp
  4150e4:	sahf   
  4150e5:	data16 xor BYTE PTR [edx],bl
  4150e8:	cmp    eax,0x7ebaf5d8
  4150ed:	jbe    0x4150cf
  4150ef:	or     ebp,esp
  4150f1:	(bad)  
  4150f2:	aaa    
  4150f3:	rol    DWORD PTR ds:0xc62e0dea,1
  4150f9:	dec    esi
  4150fa:	lock add dh,0xde
  4150fe:	mov    ah,0x43
  415100:	test   ecx,esi
  415102:	sub    eax,0xe082419e
  415107:	in     al,dx
  415108:	sbb    BYTE PTR [esi+eax*8-0x5340aa5f],cl
  41510f:	lea    ebp,[edi]
  415111:	sub    al,0xc6
  415113:	and    DWORD PTR [edi-0x63e5dce2],esi
  415119:	mov    bl,0xfb
  41511b:	xlat   BYTE PTR ds:[ebx]
  41511c:	jo     0x4150f4
  41511e:	or     edi,edi
  415120:	iret   
  415121:	idiv   BYTE PTR [edi]
  415123:	cmp    esp,ecx
  415125:	cmp    edi,DWORD PTR [ebp+0x20]
  415128:	ins    DWORD PTR es:[edi],dx
  415129:	xchg   ecx,eax
  41512a:	ds mov ebp,0x454b0842
  415130:	and    eax,0xc8055c81
  415135:	inc    edx
  415136:	fs push 0xe
  415139:	inc    edx
  41513a:	pop    ebp
  41513b:	iret   
  41513c:	mov    ah,BYTE PTR [eax]
  41513e:	and    bl,cl
  415140:	test   BYTE PTR [eax+0x49969281],ch
  415146:	call   0xfda2:0x5e620067
  41514d:	ror    BYTE PTR [esi+0x0],cl
  415150:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415151:	fadd   st(7),st
  415153:	jmp    0x9270:0x824bed5f
  41515a:	or     eax,0xd9c676e4
  41515f:	jns    0x41511c
  415161:	outs   dx,BYTE PTR ds:[esi]
  415162:	bound  esp,QWORD PTR [ecx+0x76]
  415165:	mov    edi,DWORD PTR [ecx-0x2a0891dd]
  41516b:	mov    edi,ds
  41516d:	repnz mov ch,0x89
  415170:	int3   
  415171:	sti    
  415172:	in     eax,dx
  415173:	mov    WORD PTR [ebx],ss
  415175:	push   esp
  415176:	je     0x41516b
  415178:	icebp  
  415179:	dec    eax
  41517a:	pusha  
  41517b:	dec    ebx
  41517c:	in     eax,dx
  41517d:	xor    al,BYTE PTR ds:0x7a6840f
  415183:	add    BYTE PTR [eax],al
  415185:	mov    DWORD PTR [ebp-0x18],0x1001
  41518c:	mov    edx,DWORD PTR [ebp-0x1c]
  41518f:	xor    ecx,ecx
  415191:	test   edx,edx
  415193:	jmp    0x4154cc
  415198:	jno    0x4151dd
  41519a:	mov    edx,0xb9bcbc52
  41519f:	fs inc eax
  4151a1:	sub    BYTE PTR [edx],bh
  4151a3:	xchg   edx,eax
  4151a4:	ds mov edi,0xb03cdd6e
  4151aa:	mov    esi,0xbec4edbe
  4151af:	mov    esi,0x8a85ee16
  4151b4:	pop    eax
  4151b5:	outs   dx,BYTE PTR ds:[esi]
  4151b6:	(bad)  
  4151b7:	in     al,dx
  4151b8:	imul   edx
  4151ba:	int3   
  4151bb:	push   esi
  4151bc:	bswap  ebx
  4151be:	push   0x3a
  4151c0:	fidiv  WORD PTR [edx+0x2f73c2c7]
  4151c6:	xor    eax,edx
  4151c8:	repnz push edi
  4151ca:	pusha  
  4151cb:	mov    ch,0xd9
  4151cd:	push   0xef65b8e
  4151d2:	inc    ebx
  4151d3:	xchg   ebx,eax
  4151d4:	xchg   esi,eax
  4151d5:	xchg   ebx,eax
  4151d6:	xchg   BYTE PTR [ebx+0x3ccf7daf],bl
  4151dc:	sub    DWORD PTR [edx],ebp
  4151de:	jb     0x4151de
  4151e0:	jb     0x41521e
  4151e2:	mov    cl,0x80
  4151e4:	jne    0x415228
  4151e6:	gs pop ss
  4151e8:	push   esi
  4151e9:	scas   eax,DWORD PTR es:[edi]
  4151ea:	jb     0x4151ed
  4151ec:	ud1    ebp,DWORD PTR [edi]
  4151ef:	add    al,0x3d
  4151f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151f2:	fstp   QWORD PTR gs:[eax+eiz*1]
  4151f6:	cmp    BYTE PTR [edx],dh
  4151f8:	inc    ebx
  4151f9:	retf   0x635a
  4151fc:	outs   dx,DWORD PTR ds:[esi]
  4151fd:	out    dx,al
  4151fe:	cmp    BYTE PTR [ebp-0x11baef02],al
  415204:	sbb    al,0x65
  415206:	cmp    ecx,eax
  415208:	sbb    DWORD PTR [edx],esp
  41520a:	sub    eax,0xffda9735
  41520f:	lea    edi,[ecx]
  415211:	inc    ebp
  415212:	sub    esi,DWORD PTR [esi]
  415214:	arpl   WORD PTR [ecx],cx
  415216:	sar    BYTE PTR [ebx],cl
  415218:	enter  0x2cf3,0x9b
  41521c:	mov    dh,0x6a
  41521e:	xor    dl,bh
  415220:	add    eax,0xf35282cf
  415225:	xor    ecx,DWORD PTR [edi-0x34]
  415228:	inc    esp
  415229:	cld    
  41522a:	jge    0x4151f6
  41522c:	leave  
  41522d:	sbb    DWORD PTR [ecx],eax
  41522f:	sub    DWORD PTR [edi-0x45],ecx
  415232:	iret   
  415233:	inc    ebx
  415234:	add    al,0x38
  415236:	sbb    DWORD PTR [esi-0x29e4ca26],eax
  41523c:	xchg   esp,eax
  41523d:	sbb    esi,esp
  41523f:	sub    al,dh
  415241:	fnstsw WORD PTR [edx+0x41e80bf7]
  415247:	mov    dh,0xee
  415249:	hlt    
  41524a:	imul   edi,esp,0x75
  41524d:	mov    ecx,0x535f4712
  415252:	std    
  415253:	inc    ecx
  415254:	fimul  WORD PTR [eax+0x27642f8c]
  41525a:	or     eax,0xad717a30
  41525f:	or     bl,BYTE PTR [edx-0x57f991b1]
  415265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415266:	push   ds
  415267:	add    al,0x14
  415269:	ret    
  41526a:	(bad)  
  41526c:	fld    QWORD PTR [esi+0x56]
  41526f:	mov    ah,0xda
  415271:	jp     0x4152a0
  415273:	xchg   dl,bh
  415275:	lock adc ah,BYTE PTR [edx+ebp*1+0x2a]
  41527a:	sbb    al,dh
  41527c:	sub    eax,0xaa28b760
  415281:	xchg   DWORD PTR [ecx+edx*2+0x54d30305],eax
  415288:	sub    DWORD PTR ds:0x40b76c80,esp
  41528e:	in     eax,dx
  41528f:	or     ebx,DWORD PTR [edx]
  415291:	retf   0x70fc
  415294:	fsubr  QWORD PTR [edx]
  415296:	cli    
  415297:	addr16 mov ecx,0xd0c66628
  41529d:	mov    edx,DWORD PTR [edi]
  41529f:	popf   
  4152a0:	pop    esi
  4152a1:	aaa    
  4152a2:	mov    BYTE PTR [ebp+0x5e82ed75],0x82
  4152a9:	sbb    DWORD PTR [edx-0x6d],ebp
  4152ac:	add    eax,0x5ed49915
  4152b1:	and    al,0x31
  4152b3:	call   0x885c8e6e
  4152b8:	int    0x5f
  4152ba:	pop    esp
  4152bb:	inc    esp
  4152bc:	push   edi
  4152bd:	minps  xmm7,xmm0
  4152c0:	fimul  DWORD PTR [eax]
  4152c2:	lahf   
  4152c3:	add    al,0x8
  4152c5:	in     eax,0x89
  4152c7:	cld    
  4152c8:	fldcw  WORD PTR [ecx]
  4152ca:	mov    fs,ebp
  4152cc:	dec    esi
  4152cd:	pop    ebp
  4152ce:	push   cs
  4152cf:	sub    edi,DWORD PTR [ebx+0x7ba80e4d]
  4152d5:	push   ebp
  4152d6:	fisub  WORD PTR [eax]
  4152d8:	sub    ecx,DWORD PTR [bx-0x2848]
  4152dd:	shl    DWORD PTR [ecx-0xb33dab6],0xa6
  4152e4:	scas   al,BYTE PTR es:[edi]
  4152e5:	repz mov bh,BYTE PTR cs:[ecx]
  4152e9:	sbb    bl,dh
  4152eb:	js     0x4152c0
  4152ed:	shl    DWORD PTR [ecx+0x6b8c11e4],1
  4152f3:	dec    ecx
  4152f4:	dec    eax
  4152f5:	pop    edx
  4152f6:	addr16 rcl dh,1
  4152f9:	inc    edx
  4152fa:	cld    
  4152fb:	sar    BYTE PTR [ebp-0x213b69bd],1
  415301:	pop    edi
  415302:	outs   dx,DWORD PTR ds:[esi]
  415303:	call   0x1d22:0x2cdcbcf5
  41530a:	xchg   ebp,eax
  41530b:	outs   dx,DWORD PTR ds:[esi]
  41530c:	gs es jbe 0x4152c5
  415310:	adc    eax,DWORD PTR [ebx]
  415312:	inc    edx
  415313:	inc    edi
  415314:	shl    BYTE PTR [ebp+0x68],0x85
  415318:	or     esp,ebx
  41531a:	dec    esp
  41531b:	mov    bl,0x4c
  41531d:	mov    al,0x95
  41531f:	leave  
  415320:	jmp    DWORD PTR [ecx-0x2e]
  415323:	into   
  415324:	push   0xe675c4d5
  415329:	dec    ebx
  41532a:	mov    ecx,0x8cbe2cbf
  41532f:	cmp    esp,esp
  415331:	sbb    DWORD PTR [esi*1+0x56e30d85],esp
  415338:	aas    
  415339:	cwde   
  41533a:	aas    
  41533b:	lods   al,BYTE PTR ds:[esi]
  41533c:	or     ecx,DWORD PTR [ebp-0x46]
  41533f:	shr    BYTE PTR [ecx],cl
  415341:	not    edx
  415343:	popa   
  415344:	sbb    DWORD PTR [ebx-0x4],esp
  415347:	inc    eax
  415348:	rcr    DWORD PTR [edx-0x2c],1
  41534b:	pop    es
  41534c:	xchg   edi,eax
  41534d:	push   ebp
  41534e:	pushf  
  41534f:	in     al,0x7d
  415351:	jle    0x41532d
  415353:	scas   eax,DWORD PTR es:[edi]
  415354:	fs (bad) 
  415356:	out    0xa8,eax
  415358:	inc    edx
  415359:	test   BYTE PTR [ebp+edi*4-0x77],dl
  41535d:	aam    0xee
  41535f:	fmul   QWORD PTR [edx-0x13b05ef0]
  415365:	(bad)  
  415366:	retf   
  415367:	and    BYTE PTR [eax+0x29],ch
  41536a:	xchg   ebp,eax
  41536b:	adc    al,0x8c
  41536d:	inc    ecx
  41536e:	fadd   st,st(2)
  415370:	(bad)  
  415371:	scas   eax,DWORD PTR es:[edi]
  415372:	or     edx,DWORD PTR [ebx-0x2efe045e]
  415378:	push   ebx
  415379:	(bad)  
  41537a:	ds jecxz 0x4153a2
  41537d:	sub    al,0x11
  41537f:	xor    eax,0x63691806
  415384:	mov    edx,0xe52594ff
  415389:	ja     0x41535c
  41538b:	idiv   BYTE PTR [ebx+0x654114c2]
  415391:	stos   BYTE PTR es:[edi],al
  415392:	out    0xe3,eax
  415394:	pusha  
  415395:	call   0x319f:0x473c33af
  41539c:	push   ebp
  41539d:	es add ebx,edx
  4153a0:	mov    esp,0xcd0ab667
  4153a5:	xor    BYTE PTR [edi],bl
  4153a7:	lea    ecx,[esi+0x375cca3b]
  4153ad:	sub    ebp,ebx
  4153af:	and    dl,BYTE PTR [esi+0x6f1bcb77]
  4153b5:	out    0x49,al
  4153b7:	enter  0x7f10,0xc4
  4153bb:	xlat   BYTE PTR ds:[ebx]
  4153bc:	aam    0x41
  4153be:	es dec ebp
  4153c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153c1:	push   0xef382b6f
  4153c6:	daa    
  4153c7:	push   0x1f80b890
  4153cc:	in     al,0x2d
  4153ce:	dec    edi
  4153cf:	adc    eax,DWORD PTR [eax-0x7dae7820]
  4153d5:	ds ins BYTE PTR es:[edi],dx
  4153d7:	outs   dx,BYTE PTR ds:[esi]
  4153d8:	or     ecx,esp
  4153da:	enter  0x86fe,0x6
  4153de:	nop
  4153df:	stc    
  4153e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153e1:	or     edx,DWORD PTR [edx-0x21]
  4153e4:	adc    BYTE PTR [esi],al
  4153e6:	push   ds
  4153e7:	cmp    DWORD PTR [edi],0x7bcc946d
  4153ed:	push   ss
  4153ee:	cmp    DWORD PTR [ebp+0x454fcd68],edi
  4153f4:	data16 ja 0x415389
  4153f7:	inc    ebx
  4153f8:	push   esi
  4153f9:	pop    ds
  4153fa:	jo     0x415466
  4153fc:	adc    ch,BYTE PTR [eax]
  4153fe:	xor    DWORD PTR [edi],esp
  415400:	add    BYTE PTR [ebp+ecx*2-0x47],ah
  415404:	fcmovu st,st(7)
  415406:	mov    ah,0x27
  415408:	loopne 0x41541c
  41540a:	jne    0x4153f3
  41540c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41540d:	push   cs
  41540e:	arpl   WORD PTR [ecx+0x3a],bp
  415411:	mov    dh,0x33
  415413:	dec    esp
  415414:	jmp    0x415466
  415416:	mov    cl,0x99
  415418:	shl    DWORD PTR [edi+0x6b],0xfa
  41541c:	mov    ds:0xf91b764b,al
  415421:	xchg   esi,eax
  415422:	in     al,dx
  415423:	(bad)  
  415424:	fild   QWORD PTR [edi+edi*4+0x7b]
  415428:	mov    ebx,DWORD PTR [edi]
  41542a:	pop    ecx
  41542b:	jge    0x4153bb
  41542d:	rol    DWORD PTR ds:0xc3fd9075,1
  415433:	int3   
  415434:	sbb    al,0xef
  415436:	xor    cl,BYTE PTR [esi+edi*8]
  415439:	push   ebx
  41543a:	out    dx,eax
  41543b:	sub    dh,BYTE PTR [edi]
  41543d:	jne    0x415491
  41543f:	jns    0x4154a4
  415441:	jp     0x415463
  415443:	cmp    BYTE PTR [ecx+0xf844738],cl
  415449:	mov    ebx,0x8357e9
  41544e:	xor    BYTE PTR [esp+esi*8],0x54
  415452:	inc    esp
  415453:	fwait
  415454:	add    esi,eax
  415456:	and    eax,edx
  415458:	ins    DWORD PTR es:[edi],dx
  415459:	and    al,0x83
  41545b:	rcr    DWORD PTR [eax+0x6478993d],cl
  415461:	or     BYTE PTR [eax],dh
  415463:	xchg   esp,eax
  415464:	ja     0x4154cb
  415466:	xchg   ebx,eax
  415467:	test   eax,0xc624195e
  41546c:	adc    dl,BYTE PTR [edx+0x46da725c]
  415472:	fdiv   DWORD PTR [ecx*2-0x59263759]
  415479:	jae    0x4154ca
  41547b:	idiv   DWORD PTR [eax]
  41547d:	jmp    0x3179:0x8e19bd1c
  415484:	sti    
  415485:	xchg   esi,eax
  415486:	rcl    DWORD PTR [ebp-0x3cc5ced],0xfa
  41548d:	fdivr  QWORD PTR [edx+edi*8]
  415490:	shl    esi,0x86
  415493:	sub    eax,0xc7bdc288
  415498:	and    edx,DWORD PTR [ecx-0x63008e21]
  41549e:	mov    ecx,0xa2956f45
  4154a3:	add    eax,0x33774264
  4154a8:	into   
  4154a9:	jb     0x41548a
  4154ab:	daa    
  4154ac:	nop
  4154ad:	in     al,dx
  4154ae:	sub    al,0xfa
  4154b0:	mov    esi,0x962587aa
  4154b5:	sub    DWORD PTR [ecx-0x27],0x4b873343
  4154bc:	scas   al,BYTE PTR es:[edi]
  4154bd:	(bad)  
  4154be:	std    
  4154bf:	jecxz  0x415533
  4154c1:	sbb    eax,0x3bb3750f
  4154c6:	jmp    0xffc:0x6e503c80
  4154cd:	test   BYTE PTR [esi+0x0],bh
  4154d0:	add    BYTE PTR [eax],al
  4154d2:	mov    al,BYTE PTR [ecx+edi*1]
  4154d5:	mov    BYTE PTR [ebp-0x1],al
  4154d8:	mov    BYTE PTR [ebp-0x3],0x74
  4154dc:	mov    BYTE PTR [ebp-0x2],0x16
  4154e0:	mov    BYTE PTR [ebp-0x4],0x62
  4154e4:	movzx  eax,BYTE PTR [ebp-0x4]
  4154e8:	movzx  ebx,BYTE PTR [ebp-0x2]
  4154ec:	or     eax,0xd4
  4154f1:	and    eax,ebx
  4154f3:	movzx  ebx,BYTE PTR [ebp-0x3]
  4154f7:	and    eax,ebx
  4154f9:	mov    BYTE PTR [ebp-0x12],al
  4154fc:	mov    BYTE PTR [ebp-0x11],0xfe
  415500:	mov    BYTE PTR [ebp-0x14],0x32
  415504:	mov    BYTE PTR [ebp-0x4],0xc7
  415508:	mov    BYTE PTR [ebp-0x2],0x73
  41550c:	mov    BYTE PTR [ebp-0x3],0xb3
  415510:	mov    al,BYTE PTR [ebp-0x3]
  415513:	mov    bl,BYTE PTR [ebp-0x2]
  415516:	or     al,bl
  415518:	mov    bl,BYTE PTR [ebp-0x4]
  41551b:	sub    al,bl
  41551d:	mov    bl,BYTE PTR [ebp-0x14]
  415520:	imul   bl
  415522:	mov    bl,BYTE PTR [ebp-0x11]
  415525:	sub    al,bl
  415527:	mov    bl,BYTE PTR [ebp-0x12]
  41552a:	cmp    bl,al
  41552c:	ja     0x415541
  415532:	movzx  eax,BYTE PTR [ebp-0x1]
  415536:	sub    eax,0xed
  41553b:	mov    BYTE PTR [ebp-0x1],al
  41553e:	ror    BYTE PTR [ebp-0x1],1
  415541:	mov    al,BYTE PTR [ebp-0x1]
  415544:	mov    BYTE PTR [ecx+edi*1],al
  415547:	inc    ecx
  415548:	cmp    ecx,edx
  41554a:	jb     0x4154d2
  415550:	dec    DWORD PTR [ebp-0x18]
  415553:	jne    0x41518c
  415559:	mov    eax,DWORD PTR [ebp+0x8]
  41555c:	mov    ecx,DWORD PTR [ebp+0xc]
  41555f:	shrd   eax,ecx,0x2
  415563:	shr    ecx,0x2
  415566:	mov    ecx,DWORD PTR [ebp+0x8]
  415569:	mov    edx,DWORD PTR [ebp+0xc]
  41556c:	xor    eax,esi
  41556e:	xor    edx,edx
  415570:	jmp    0x4158a9
  415575:	cmp    dl,BYTE PTR [ebx]
  415577:	inc    esi
  415578:	mov    WORD PTR [eax-0x64],gs
  41557b:	cmp    al,0xb3
  41557d:	mov    ch,0xd8
  41557f:	(bad)  
  415580:	fld    QWORD PTR [edx]
  415582:	sub    ah,bl
  415584:	nop
  415585:	ins    BYTE PTR es:[edi],dx
  415586:	mov    dh,0xbe
  415588:	mov    esi,0xbebec4ed
  41558d:	pop    es
  41558e:	inc    edi
  41558f:	dec    ebp
  415590:	les    esp,FWORD PTR [esi]
  415592:	loop   0x4155b9
  415594:	fwait
  415595:	add    eax,0x289c88e8
  41559a:	ret    
  41559b:	gs add al,0xa3
  41559e:	add    cl,BYTE PTR [eax-0x4ffdfc86]
  4155a4:	mov    cs,WORD PTR [eax]
  4155a6:	rcl    BYTE PTR [ebp-0x2dc71878],cl
  4155ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155ad:	sbb    bh,BYTE PTR [ecx-0x144ede94]
  4155b3:	push   esp
  4155b4:	leave  
  4155b5:	ret    0x778b
  4155b8:	cmp    ebp,DWORD PTR [esi]
  4155ba:	add    ecx,DWORD PTR fs:[edx+0x3f]
  4155be:	mov    bl,0x99
  4155c0:	push   esp
  4155c1:	(bad)  
  4155c2:	jmp    0x5eb00979
  4155c7:	mov    cl,0x81
  4155c9:	dec    ebx
  4155ca:	sub    al,0xf0
  4155cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155cd:	push   ebx
  4155ce:	ins    DWORD PTR es:[edi],dx
  4155cf:	mov    bl,0x96
  4155d1:	test   BYTE PTR [esi],0xa1
  4155d4:	or     ch,BYTE PTR [eax+0x2ae81935]
  4155da:	cmp    dh,BYTE PTR [eax-0x50]
  4155dd:	int    0x1d
  4155df:	ja     0x41562c
  4155e1:	test   BYTE PTR [ebx],0x42
  4155e4:	imul   ecx,DWORD PTR [edi],0xffffffd4
  4155e7:	and    BYTE PTR [esi+0xd],bl
  4155ea:	mov    bl,0x48
  4155ec:	jle    0x415610
  4155ee:	jb     0x415647
  4155f0:	cmp    eax,0xc6eca7c9
  4155f5:	and    eax,DWORD PTR [ecx+eiz*1-0x4c]
  4155f9:	retf   
  4155fa:	(bad)  
  4155fc:	loopne 0x4155a2
  4155fe:	fdivr  DWORD PTR [eax]
  415600:	mov    eax,ebx
  415602:	xor    BYTE PTR [ebx+0x32],al
  415605:	inc    ecx
  415606:	sub    eax,DWORD PTR [ebx-0x5d6a4468]
  41560c:	(bad)  
  41560d:	sbb    DWORD PTR ds:0xbd1bd547,ebx
  415613:	push   ss
  415614:	add    ch,BYTE PTR [eax]
  415616:	aas    
  415617:	stos   DWORD PTR es:[edi],eax
  415618:	(bad)  
  415619:	mov    edx,0xa96e2078
  41561e:	mov    ch,0x22
  415620:	(bad)  
  415621:	retf   
  415622:	xchg   ebp,eax
  415623:	cmp    cl,BYTE PTR [eax-0xd]
  415626:	sub    al,0x5c
  415628:	das    
  415629:	or     DWORD PTR [edi+eax*2],esp
  41562c:	inc    edi
  41562d:	adc    ebp,DWORD PTR [eax]
  41562f:	mov    ds:0xb103907d,eax
  415634:	jg     0x415636
  415636:	dec    eax
  415637:	push   ecx
  415638:	cmp    bl,BYTE PTR [esi+0x1e91af83]
  41563e:	nop
  41563f:	int3   
  415640:	or     BYTE PTR [bx+si+0x58],cl
  415644:	jg     0x415669
  415646:	mov    dh,0xa8
  415648:	sbb    DWORD PTR [ecx-0x46],0xffffff86
  41564c:	xchg   esp,eax
  41564d:	mov    edx,0x7271c0ee
  415652:	jg     0x41568e
  415654:	jle    0x41564b
  415656:	jmp    0x43f7:0x5ab95e1b
  41565d:	in     al,0xa6
  41565f:	xchg   edx,eax
  415660:	leave  
  415661:	or     DWORD PTR [ecx],edi
  415663:	push   esi
  415664:	dec    ecx
  415665:	push   edx
  415666:	mov    ah,0x5f
  415668:	pop    ebp
  415669:	mov    ch,bl
  41566b:	or     ebp,0x57a22e
  415671:	retf   0x9337
  415674:	or     esi,DWORD PTR [ecx+ebx*1]
  415677:	sub    ch,BYTE PTR [ebp+0x36]
  41567a:	in     al,dx
  41567b:	shl    DWORD PTR [edi],cl
  41567d:	dec    edx
  41567e:	(bad)  
  415680:	jmp    0xefc90cf4
  415685:	icebp  
  415686:	mov    bx,0xd935
  41568a:	repnz scas eax,DWORD PTR es:[edi]
  41568c:	mov    esp,0x251d0825
  415691:	fs jmp 0x25bf0484
  415697:	outs   dx,DWORD PTR ds:[esi]
  415698:	jl     0x4156e4
  41569a:	int3   
  41569b:	aaa    
  41569c:	jns    0x4156b6
  41569e:	jg     0x4156d2
  4156a0:	out    dx,al
  4156a1:	jo     0x4156cb
  4156a3:	scas   eax,DWORD PTR es:[edi]
  4156a4:	mov    eax,0x611517
  4156a9:	les    ebp,FWORD PTR [edx-0x3e6004df]
  4156af:	cmp    ah,bh
  4156b1:	pop    edi
  4156b2:	lahf   
  4156b3:	imul   esp,edi,0xffffff96
  4156b6:	pushf  
  4156b7:	cmp    BYTE PTR [esp+ecx*2],al
  4156ba:	fmul   QWORD PTR [eax+ebp*1-0x52]
  4156be:	cmp    eax,DWORD PTR [ebx+0x42]
  4156c1:	xchg   ecx,eax
  4156c2:	mov    ds:0x5c2af687,eax
  4156c7:	test   al,0xcd
  4156c9:	jmp    DWORD PTR [eax-0x27f6b322]
  4156cf:	ret    0x91a1
  4156d2:	inc    edi
  4156d3:	mov    WORD PTR [ecx+0x7109f239],?
  4156d9:	and    DWORD PTR [ebx-0x5a4921fc],edi
  4156df:	xor    eax,DWORD PTR [edi+ebx*1]
  4156e2:	aad    0x24
  4156e4:	pop    ecx
  4156e5:	mov    ecx,0xb8eb0f1d
  4156ea:	jbe    0x4156ba
  4156ec:	jb     0x4156a3
  4156ee:	adc    ebp,edi
  4156f0:	mov    ah,0xbc
  4156f2:	xor    eax,esi
  4156f4:	pop    edx
  4156f5:	mov    eax,es
  4156f7:	mov    bh,0xc6
  4156f9:	dec    edi
  4156fa:	and    DWORD PTR [ebx+0x58],eax
  4156fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156fe:	push   0x2c3ea8c3
  415703:	rcr    BYTE PTR [ecx+0x75],0xfc
  415707:	imul   ebx,DWORD PTR [esi-0x79],0x7b367b5f
  41570e:	sub    BYTE PTR [eax],0x8c
  415711:	xchg   esp,eax
  415712:	test   DWORD PTR [ecx],ebx
  415714:	sahf   
  415715:	mov    eax,0x6c92e442
  41571a:	icebp  
  41571b:	lahf   
  41571c:	jle    0x41577c
  41571e:	in     al,dx
  41571f:	adc    DWORD PTR [esp+esi*4],ebx
  415722:	mov    al,ds:0x83978763
  415727:	ss xchg ebx,eax
  415729:	fidiv  DWORD PTR [eax-0x79]
  41572c:	lea    esp,[esi-0x19]
  41572f:	mov    esp,0xfc0b16e2
  415734:	sub    ecx,DWORD PTR [edi-0x6c]
  415737:	mov    al,ds:0xe05716dd
  41573c:	sbb    al,0xe8
  41573e:	pop    eax
  41573f:	dec    ebp
  415740:	pushf  
  415741:	cmc    
  415742:	fstp   QWORD PTR [ebx-0x306331bd]
  415748:	xchg   edx,eax
  415749:	pop    ds
  41574a:	mov    gs,WORD PTR [ebx+0x41]
  41574d:	mov    al,ds:0xd7991b2c
  415752:	mov    eax,ds:0xf66bf987
  415757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415758:	push   esi
  415759:	pushf  
  41575a:	push   ds
  41575b:	ret    0xa8b2
  41575e:	neg    esi
  415760:	data16 out 0x58,al
  415763:	add    BYTE PTR [edx-0x3a],al
  415766:	inc    ebx
  415767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415768:	mov    DWORD PTR [ebp-0x28],eax
  41576b:	mov    esi,0xd762ed2d
  415770:	sub    ebp,DWORD PTR [eax-0x7c]
  415773:	rcr    BYTE PTR [ebx+0x7f],cl
  415776:	xor    DWORD PTR [eax+0x57],ebx
  415779:	sub    DWORD PTR [edi-0x45],edi
  41577c:	and    al,0x47
  41577e:	out    0xe2,al
  415780:	ja     0x4157ef
  415782:	or     al,al
  415784:	push   0x1729cef7
  415789:	inc    ecx
  41578a:	or     al,dh
  41578c:	lock add DWORD PTR [eax-0x39],esi
  415790:	call   0x6d734bab
  415795:	pushf  
  415796:	add    BYTE PTR [edi+0x35],ch
  415799:	(bad)  [edi+eax*8+0x53]
  41579d:	nop
  41579e:	mov    dl,0x70
  4157a0:	xor    DWORD PTR [ecx],edx
  4157a2:	sub    eax,0x16616e58
  4157a7:	inc    esp
  4157a8:	jle    0x4157d3
  4157aa:	xchg   esp,eax
  4157ab:	out    dx,al
  4157ac:	aad    0x2a
  4157ae:	fistp  WORD PTR [ebx-0x68]
  4157b1:	pop    edx
  4157b2:	add    cl,BYTE PTR [eax+ecx*8+0x65b77987]
  4157b9:	cmp    esp,esp
  4157bb:	xchg   ebp,eax
  4157bc:	mov    eax,ds:0x898ce340
  4157c1:	sub    DWORD PTR [ecx+0x4b],esp
  4157c4:	ficom  WORD PTR [ebx-0x6916fd4d]
  4157ca:	cmc    
  4157cb:	stos   DWORD PTR es:[edi],eax
  4157cc:	das    
  4157cd:	sbb    eax,0x2aaed1b7
  4157d2:	jge    0x415785
  4157d4:	add    BYTE PTR [edx+0x1cbf13d],bl
  4157da:	icebp  
  4157db:	adc    BYTE PTR [ebx],dl
  4157dd:	ror    BYTE PTR [esi+0x4778bd8b],cl
  4157e3:	sub    eax,0xd03377cc
  4157e8:	jge    0x4157ec
  4157ea:	push   cs
  4157eb:	dec    ebp
  4157ec:	test   eax,0x15c7ce84
  4157f1:	data16 in al,0x30
  4157f4:	cmp    ch,BYTE PTR [esi+0x8]
  4157f7:	sahf   
  4157f8:	jp     0x41578f
  4157fa:	mov    edi,esi
  4157fc:	aas    
  4157fd:	xlat   BYTE PTR ds:[ebx]
  4157fe:	inc    edi
  4157ff:	jns    0x4157bc
  415801:	and    cl,BYTE PTR [edx]
  415803:	das    
  415804:	fisubr DWORD PTR [ecx+0x6b2915a8]
  41580a:	cld    
  41580b:	gs out 0xdf,eax
  41580e:	jecxz  0x4157a4
  415810:	jb     0x415867
  415812:	call   0x10c942bd
  415817:	jle    0x41579d
  415819:	dec    ecx
  41581a:	ins    BYTE PTR es:[edi],dx
  41581b:	sub    DWORD PTR [edi+0x298894d3],0xffffff95
  415822:	mov    ds:0xec832987,al
  415827:	inc    esp
  415828:	sbb    eax,0xdb380f76
  41582d:	es cmp eax,0x4c449dff
  415833:	lock push ss
  415835:	cmp    esp,DWORD PTR [eax-0x24]
  415838:	adc    BYTE PTR [edi-0x9a31c18],dl
  41583e:	stos   BYTE PTR es:[edi],al
  41583f:	push   0x28
  415841:	mov    esp,0x4981da8
  415846:	jno    0x41585e
  415848:	xchg   ecx,eax
  415849:	outs   dx,BYTE PTR ds:[esi]
  41584a:	(bad)  
  41584b:	fadd   DWORD PTR ds:0x6464a0de
  415851:	cmp    eax,0x70552438
  415856:	add    al,BYTE PTR [eax+0x7418697a]
  41585c:	add    cl,BYTE PTR [edx-0x76]
  41585f:	lea    ebx,[ecx]
  415861:	pop    ds
  415862:	bound  eax,QWORD PTR [ecx+0x51595ee0]
  415868:	ror    dl,0x13
  41586b:	jae    0x41586d
  41586d:	dec    dh
  41586f:	retf   
  415870:	add    ah,BYTE PTR [ebx+ebx*1-0x63]
  415874:	es jg  0x41583a
  415877:	jbe    0x415833
  415879:	mov    ecx,0x241463f7
  41587e:	popa   
  41587f:	call   0xf227273c
  415884:	test   ah,al
  415886:	cli    
  415887:	sar    DWORD PTR [esi+ebp*1+0x3245d7fe],0x1f
  41588f:	(bad)  
  415890:	push   cs
  415891:	push   ds
  415892:	out    dx,eax
  415893:	ror    DWORD PTR [edi],cl
  415895:	test   al,0x92
  415897:	mov    edx,DWORD PTR [ebp+0x23]
  41589a:	dec    ebp
  41589b:	push   edx
  41589c:	fwait
  41589d:	push   cs
  41589e:	shufps xmm7,XMMWORD PTR [esi],0x79
  4158a2:	ja     0x4158ea
  4158a4:	add    DWORD PTR [edi+esi*8],edi
  4158a7:	test   DWORD PTR [eax+0xb],ebp
  4158aa:	ret    0x16a
  4158ad:	add    eax,edi
  4158af:	push   eax
  4158b0:	lea    eax,[ebp-0x13]
  4158b3:	push   eax
  4158b4:	shl    ecx,0x1e
  4158b7:	call   0x411c08
  4158bc:	mov    eax,DWORD PTR [ebp+0x10]
  4158bf:	mov    ecx,DWORD PTR [ebp+0x14]
  4158c2:	shrd   eax,ecx,0x2
  4158c6:	shr    ecx,0x2
  4158c9:	mov    ecx,DWORD PTR [ebp+0x10]
  4158cc:	mov    edx,DWORD PTR [ebp+0x14]
  4158cf:	xor    eax,esi
  4158d1:	xor    edx,edx
  4158d3:	or     eax,edx
  4158d5:	add    eax,edi
  4158d7:	push   0x1
  4158d9:	push   eax
  4158da:	mov    eax,DWORD PTR [ebp+0x8]
  4158dd:	shl    ecx,0x1e
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	shrd   eax,ecx,0x2
  4158e7:	shr    ecx,0x2
  4158ea:	mov    ecx,DWORD PTR [ebp+0x8]
  4158ed:	mov    edx,DWORD PTR [ebp+0xc]
  4158f0:	xor    eax,esi
  4158f2:	xor    edx,edx
  4158f4:	or     eax,edx
  4158f6:	add    eax,edi
  4158f8:	push   eax
  4158f9:	shl    ecx,0x1e
  4158fc:	call   0x411c08
  415901:	push   0x1
  415903:	lea    eax,[ebp-0x13]
  415906:	push   eax
  415907:	mov    eax,DWORD PTR [ebp+0x10]
  41590a:	mov    ecx,DWORD PTR [ebp+0x14]
  41590d:	shrd   eax,ecx,0x2
  415911:	shr    ecx,0x2
  415914:	mov    ecx,DWORD PTR [ebp+0x10]
  415917:	mov    edx,DWORD PTR [ebp+0x14]
  41591a:	xor    eax,esi
  41591c:	xor    edx,edx
  41591e:	or     eax,edx
  415920:	add    eax,edi
  415922:	push   eax
  415923:	shl    ecx,0x1e
  415926:	call   0x411c08
  41592b:	mov    eax,DWORD PTR [ebp+0x10]
  41592e:	mov    ecx,DWORD PTR [ebp+0x14]
  415931:	shrd   eax,ecx,0x2
  415935:	shr    ecx,0x2
  415938:	mov    ecx,DWORD PTR [ebp+0x10]
  41593b:	mov    edx,DWORD PTR [ebp+0x14]
  41593e:	pop    edi
  41593f:	xor    eax,esi
  415941:	xor    edx,edx
  415943:	pop    esi
  415944:	shl    ecx,0x1e
  415947:	or     eax,edx
  415949:	pop    ebx
  41594a:	leave  
  41594b:	ret    0x10
  41594e:	mov    eax,DWORD PTR [esp+0x8]
  415952:	or     DWORD PTR ds:0x4284c5,0x7249
  41595c:	mov    ecx,DWORD PTR [esp+0x10]
  415960:	or     ecx,eax
  415962:	mov    DWORD PTR ds:0x428561,0x6956
  41596c:	mov    ecx,DWORD PTR [esp+0xc]
  415970:	jne    0x4159ee
  415976:	cmp    DWORD PTR ds:0x428435,0x0
  41597d:	mov    DWORD PTR ds:0x428555,0x1bde
  415987:	mov    DWORD PTR ds:0x428479,0x1ea7
  415991:	jmp    0x4159e5
  415996:	mov    eax,0x417c
  41599b:	mov    DWORD PTR ds:0x428581,ebx
  4159a1:	cmp    DWORD PTR ds:0x428435,0x0
  4159a8:	jne    0x4159d1
  4159ae:	push   DWORD PTR [ebp-0x28]
  4159b1:	call   DWORD PTR ds:0x42e0e0
  4159b7:	adc    DWORD PTR ds:0x4284c5,0x428409
  4159c1:	sub    DWORD PTR ds:0x42843d,0x4284f9
  4159cb:	and    DWORD PTR ds:0x428455,edi
  4159d1:	mov    DWORD PTR ds:0x42846d,0x6bfe
  4159db:	adc    DWORD PTR ds:0x4284dd,0x437a
  4159e5:	mov    eax,DWORD PTR [esp+0x4]
  4159e9:	mul    ecx
  4159eb:	ret    0x10
  4159ee:	push   ebx
  4159ef:	mul    ecx
  4159f1:	mov    ebx,eax
  4159f3:	mov    eax,DWORD PTR [esp+0x8]
  4159f7:	mul    DWORD PTR [esp+0x14]
  4159fb:	add    ebx,eax
  4159fd:	mov    eax,DWORD PTR [esp+0x8]
  415a01:	mul    ecx
  415a03:	add    edx,ebx
  415a05:	pop    ebx
  415a06:	ret    0x10
  415a09:	push   ebp
  415a0a:	mov    ebp,esp
  415a0c:	sub    esp,0x44
  415a0f:	push   ebx
  415a10:	push   esi
  415a11:	push   edi
  415a12:	mov    DWORD PTR [ebp-0x18],0x2
  415a19:	mov    DWORD PTR [ebp-0x14],0x29f0
  415a20:	mov    DWORD PTR [ebp-0x10],0x3716
  415a27:	mov    DWORD PTR [ebp-0x2c],0x4e09
  415a2e:	mov    DWORD PTR [ebp-0x28],0x4497
  415a35:	mov    DWORD PTR [ebp-0x24],0x5
  415a3c:	mov    DWORD PTR [ebp-0x20],0x2a0a
  415a43:	mov    DWORD PTR [ebp-0x1c],0x1
  415a4a:	mov    DWORD PTR [ebp-0xc],0xce6
  415a51:	mov    DWORD PTR [ebp-0x8],0x12b3
  415a58:	mov    DWORD PTR [ebp-0x4],0xb09
  415a5f:	mov    DWORD PTR [ebp-0x44],0x7617
  415a66:	mov    DWORD PTR [ebp-0x40],0x721a
  415a6d:	mov    DWORD PTR [ebp-0x3c],0x5151
  415a74:	mov    DWORD PTR [ebp-0x38],0x14aa
  415a7b:	mov    DWORD PTR [ebp-0x34],0x5a28
  415a82:	mov    DWORD PTR [ebp-0x30],0x19a8
  415a89:	mov    ecx,DWORD PTR [ebp-0x1c]
  415a8c:	mov    eax,DWORD PTR [ebp-0x20]
  415a8f:	xor    edx,edx
  415a91:	div    ecx
  415a93:	mov    ecx,DWORD PTR [ebp-0x24]
  415a96:	xor    edx,edx
  415a98:	mov    esi,0x1ac5
  415a9d:	push   0x20
  415a9f:	div    ecx
  415aa1:	mov    ecx,DWORD PTR [ebp-0x28]
  415aa4:	xor    edx,edx
  415aa6:	xor    eax,0x60dc
  415aab:	sub    eax,ecx
  415aad:	mov    ecx,DWORD PTR [ebp-0x2c]
  415ab0:	lea    edi,[eax+ecx*1-0x6300]
  415ab7:	mov    eax,DWORD PTR [ebp-0x4]
  415aba:	mov    ecx,DWORD PTR [ebp-0x8]
  415abd:	sub    eax,0x7721
  415ac2:	xor    eax,ecx
  415ac4:	mov    ecx,DWORD PTR [ebp-0xc]
  415ac7:	xor    eax,ecx
  415ac9:	or     eax,0x7bc9
  415ace:	xor    eax,0xfffff0db
  415ad3:	mov    ebx,edi
  415ad5:	sub    ebx,eax
  415ad7:	mov    eax,DWORD PTR [ebp-0x10]
  415ada:	mov    ecx,DWORD PTR [ebp-0x14]
  415add:	xor    eax,ecx
  415adf:	mov    ecx,DWORD PTR [ebp-0x18]
  415ae2:	sub    eax,esi
  415ae4:	div    ecx
  415ae6:	mov    ecx,0x211
  415aeb:	pop    edx
  415aec:	xor    eax,ecx
  415aee:	jmp    0x415ef7
  415af3:	push   ds
  415af4:	inc    ecx
  415af5:	cmp    edi,esi
  415af7:	mov    edx,0x9f9c24b7
  415afc:	push   ecx
  415afd:	mov    ebp,0xdf26ebcf
  415b02:	nop
  415b03:	pushf  
  415b04:	mov    esp,0xc48ebebe
  415b09:	mov    esi,0x3d57a0be
  415b0e:	les    edi,FWORD PTR [edx+0x61]
  415b11:	inc    ecx
  415b12:	loope  0x415aa7
  415b14:	int3   
  415b15:	ins    DWORD PTR es:[edi],dx
  415b16:	js     0x415b93
  415b18:	push   eax
  415b19:	lahf   
  415b1a:	leave  
  415b1b:	add    al,0xb2
  415b1d:	push   0x4c
  415b1f:	push   esi
  415b20:	lods   al,BYTE PTR ds:[esi]
  415b21:	je     0x415b46
  415b23:	lods   al,BYTE PTR ds:[esi]
  415b24:	push   esp
  415b25:	add    dh,BYTE PTR [esi+eax*2+0x7d]
  415b29:	out    dx,eax
  415b2a:	pop    esi
  415b2b:	repz shr DWORD PTR [esp+ebx*4+0x53],1
  415b30:	ficom  WORD PTR [ecx+0x2e]
  415b33:	ret    0x3095
  415b36:	enter  0x6c77,0x2a
  415b3a:	pop    es
  415b3b:	(bad)
  415b3f:	jp     0x415ba0
  415b41:	push   0xd985ea8c
  415b46:	sahf   
  415b47:	adc    al,0x54
  415b49:	pop    es
  415b4a:	xor    ch,BYTE PTR [edi+ecx*2-0x76cb4eba]
  415b51:	lahf   
  415b52:	aam    0x9a
  415b54:	imul   eax,DWORD PTR [ecx-0x120453e9],0x38
  415b5b:	inc    ebx
  415b5c:	ins    DWORD PTR es:[edi],dx
  415b5d:	push   ecx
  415b5e:	mov    BYTE PTR ds:0x30204875,dl
  415b64:	icebp  
  415b65:	js     0x415b81
  415b67:	shl    BYTE PTR [ecx-0x7bf39997],cl
  415b6d:	scas   eax,DWORD PTR es:[edi]
  415b6e:	pop    ss
  415b6f:	jecxz  0x415afa
  415b71:	daa    
  415b72:	pushf  
  415b73:	inc    edx
  415b74:	in     eax,dx
  415b75:	sbb    eax,0x8b9ea378
  415b7a:	cwde   
  415b7b:	popa   
  415b7c:	mov    ch,0x48
  415b7e:	mov    al,0x62
  415b80:	cmp    ah,BYTE PTR [eax]
  415b82:	pop    es
  415b83:	btc    DWORD PTR [edi+ebx*4],esp
  415b87:	(bad)
  415b8a:	cmp    al,0x22
  415b8c:	out    0xff,eax
  415b8e:	adc    al,0x72
  415b90:	push   0xe3a3d737
  415b95:	add    eax,0x1826529a
  415b9a:	pop    ebx
  415b9b:	push   cs
  415b9c:	scas   al,BYTE PTR es:[edi]
  415b9d:	cs mov ch,0xdb
  415ba0:	jge    0x415b54
  415ba2:	rcl    dl,0x84
  415ba5:	leave  
  415ba6:	jo     0x415bd7
  415ba8:	adc    al,0xd9
  415baa:	pop    DWORD PTR [ebx]
  415bac:	add    al,0x6d
  415bae:	cmp    ah,dl
  415bb0:	enter  0x439c,0x70
  415bb4:	shr    edi,cl
  415bb6:	jb     0x415c1c
  415bb8:	dec    ecx
  415bb9:	outs   dx,BYTE PTR ds:[esi]
  415bba:	xchg   ecx,eax
  415bbb:	push   esp
  415bbc:	iret   
  415bbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bbe:	add    BYTE PTR [ecx],dl
  415bc0:	lahf   
  415bc1:	arpl   WORD PTR [edx],di
  415bc3:	mov    ecx,0x3bc9433d
  415bc8:	aam    0x53
  415bca:	jbe    0x415b68
  415bcc:	into   
  415bcd:	jge    0x415b9f
  415bcf:	popf   
  415bd0:	jecxz  0x415c30
  415bd2:	popf   
  415bd3:	inc    esp
  415bd4:	xor    eax,0xb6b42b8b
  415bd9:	gs xor DWORD PTR fs:[ebx-0x25],0xffffff80
  415bdf:	adc    DWORD PTR [ebx+0x2f832ccd],edx
  415be5:	and    al,0x1e
  415be7:	mov    ds:0xefae411a,al
  415bec:	adc    al,0x91
  415bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bef:	data16 ins BYTE PTR es:[edi],dx
  415bf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bf3:	outs   dx,BYTE PTR ds:[esi]
  415bf4:	add    eax,0x63c7fad5
  415bf9:	xor    ebp,DWORD PTR ds:0x2bf3eeb1
  415bff:	jmp    0xde30:0x9e759a0a
  415c06:	dec    edi
  415c07:	xchg   ecx,eax
  415c08:	xchg   esp,eax
  415c09:	(bad)  
  415c0a:	das    
  415c0b:	push   ss
  415c0c:	aas    
  415c0d:	dec    edi
  415c0e:	mov    DWORD PTR [ecx],esi
  415c10:	(bad)  [eax+0x36b16502]
  415c16:	js     0x415bbb
  415c18:	cwde   
  415c19:	ror    al,0x6d
  415c1c:	stos   BYTE PTR es:[edi],al
  415c1d:	jecxz  0x415c7c
  415c1f:	aam    0x81
  415c21:	(bad)  
  415c23:	dec    edx
  415c24:	mov    eax,ds:0x92bc839c
  415c29:	test   al,0x44
  415c2b:	jmp    0xf558b794
  415c30:	aad    0x81
  415c32:	lahf   
  415c33:	or     DWORD PTR [ebp*4+0x75656e3a],ebp
  415c3a:	mov    esi,0x4fd0421e
  415c3f:	(bad)  
  415c40:	pushaw 
  415c42:	or     al,0x84
  415c44:	jbe    0x415c3f
  415c46:	sub    al,0x71
  415c48:	sbb    eax,0xf1d4e6cd
  415c4d:	mov    ebx,0xd8c7827
  415c52:	(bad)  
  415c53:	dec    ebx
  415c54:	pop    edi
  415c55:	lods   eax,DWORD PTR ds:[esi]
  415c56:	jecxz  0x415c21
  415c58:	mov    cl,0x9
  415c5a:	aad    0x20
  415c5c:	or     ecx,ebx
  415c5e:	hlt    
  415c5f:	retf   
  415c60:	jbe    0x415c46
  415c62:	int3   
  415c63:	(bad)  
  415c64:	ds stc 
  415c66:	jge    0x415c45
  415c68:	out    dx,eax
  415c69:	lahf   
  415c6a:	stc    
  415c6b:	cmp    DWORD PTR [eax+0x1f],esp
  415c6e:	fs js  0x415c7e
  415c71:	cmp    bh,dh
  415c73:	cld    
  415c74:	int    0xdd
  415c76:	(bad)  
  415c77:	or     BYTE PTR ds:0xa75e71f2,ah
  415c7d:	cmc    
  415c7e:	sbb    edi,eax
  415c80:	test   BYTE PTR [edi],ah
  415c82:	call   0x91aa:0x3a7a7a39
  415c89:	das    
  415c8a:	(bad)  
  415c8b:	jb     0x415ce2
  415c8d:	ja     0x415c18
  415c8f:	push   ebx
  415c90:	call   0xb212:0x115721c2
  415c97:	hlt    
  415c98:	push   es
  415c99:	loopne 0x415c67
  415c9b:	pop    esp
  415c9c:	mov    ebp,0xec3f8402
  415ca1:	out    0xf9,eax
  415ca3:	pop    edx
  415ca4:	leave  
  415ca5:	push   ecx
  415ca6:	push   0x5f92efbf
  415cab:	popf   
  415cac:	pop    ebx
  415cad:	(bad)  
  415cae:	mov    eax,ds:0x9006ec7f
  415cb3:	jle    0x415cae
  415cb5:	ror    DWORD PTR [ecx-0x5a],0xc
  415cb9:	or     bl,BYTE PTR [esi]
  415cbb:	fs in  eax,0xa6
  415cbe:	jbe    0x415cb6
  415cc0:	inc    ebp
  415cc1:	push   esp
  415cc2:	mov    ds:0x4b52187,eax
  415cc7:	sbb    esp,DWORD PTR [esi+0x7d]
  415cca:	fstp   TBYTE PTR [edi]
  415ccc:	(bad)  
  415ccd:	call   0x4830:0x83d1debc
  415cd4:	add    DWORD PTR [ebx],0xffffff9d
  415cd7:	xor    al,0x6a
  415cd9:	out    0x6c,eax
  415cdb:	jbe    0x415c8b
  415cdd:	pop    DWORD PTR [edx-0x474b5408]
  415ce3:	pop    ebp
  415ce4:	mov    ds,WORD PTR [edi+0x5cbd9452]
  415cea:	xor    al,0x17
  415cec:	mov    bl,0x16
  415cee:	jmp    0x628c81db
  415cf3:	adc    ecx,DWORD PTR [ebx+0x646b323f]
  415cf9:	in     al,dx
  415cfa:	mov    ecx,0x5393e749
  415cff:	into   
  415d00:	inc    edx
  415d02:	xor    bh,ch
  415d04:	test   DWORD PTR [edi],eax
  415d06:	scas   eax,DWORD PTR es:[edi]
  415d07:	imul   ebx,DWORD PTR [eax],0x6ad78373
  415d0d:	popf   
  415d0e:	sub    esp,DWORD PTR [edx+0x311f63e5]
  415d14:	push   cs
  415d15:	inc    edx
  415d16:	retf   0xaf37
  415d19:	cwde   
  415d1a:	shr    ah,1
  415d1c:	cmp    BYTE PTR [ebp-0x193e948c],dl
  415d22:	js     0x415cd9
  415d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d25:	adc    DWORD PTR [edi-0x76],esi
  415d28:	sub    BYTE PTR [edx-0x41],bh
  415d2b:	jecxz  0x415cda
  415d2d:	sti    
  415d2e:	push   es
  415d2f:	or     al,0x96
  415d31:	xchg   edi,eax
  415d32:	xchg   edx,eax
  415d33:	fsubr  QWORD PTR [edx-0x3b5a691c]
  415d39:	jl     0x415d5c
  415d3b:	cmp    eax,0xa0df4c61
  415d40:	mov    DWORD PTR [edi-0x76c49131],ebx
  415d46:	scas   eax,DWORD PTR es:[edi]
  415d47:	jmp    0x63ade3f8
  415d4c:	or     dh,BYTE PTR [edi-0x3]
  415d4f:	fucomip st,st(6)
  415d51:	fisttp QWORD PTR [ebp-0x4a]
  415d54:	mov    ch,0xb9
  415d56:	sub    eax,0x2b020a77
  415d5b:	xchg   ecx,eax
  415d5c:	pop    eax
  415d5d:	inc    esi
  415d5e:	ficom  WORD PTR [eax]
  415d60:	pop    esi
  415d61:	fiadd  WORD PTR ds:0xa2480bb7
  415d67:	gs ror ecx,0xdb
  415d6b:	push   esi
  415d6c:	outs   dx,BYTE PTR ds:[esi]
  415d6d:	sbb    edi,DWORD PTR [edi-0x44]
  415d70:	sub    BYTE PTR [ecx+0x37],ah
  415d73:	fwait
  415d74:	jp     0x415d31
  415d76:	mov    dl,0x95
  415d78:	push   cs
  415d79:	and    al,0xb3
  415d7b:	icebp  
  415d7c:	xchg   ebx,eax
  415d7d:	sub    DWORD PTR ds:0x209bb33a,0xffffffa1
  415d84:	aas    
  415d85:	gs pop eax
  415d87:	out    dx,al
  415d88:	push   eax
  415d89:	dec    ebp
  415d8a:	call   0xbb13cdbb
  415d8f:	fcmovu st,st(7)
  415d91:	into   
  415d92:	jne    0x415dff
  415d94:	cmp    BYTE PTR [ebp+0x2d],0x93
  415d98:	inc    esp
  415d99:	bound  esi,QWORD PTR [esi]
  415d9b:	scas   al,BYTE PTR es:[edi]
  415d9c:	test   eax,0x10437451
  415da1:	mov    bh,0x34
  415da3:	jne    0x415dcc
  415da5:	mov    ecx,DWORD PTR [eax-0x7859d583]
  415dab:	data16 gs or al,0xb1
  415daf:	scas   al,BYTE PTR es:[edi]
  415db0:	ret    
  415db1:	(bad)  
  415db2:	sbb    bh,al
  415db4:	lods   eax,DWORD PTR ds:[esi]
  415db5:	js     0x415dee
  415db7:	daa    
  415db8:	mov    ebp,0x1e807b39
  415dbd:	aas    
  415dbe:	loop   0x415e39
  415dc0:	loopne 0x415e30
  415dc2:	ins    BYTE PTR es:[edi],dx
  415dc3:	popf   
  415dc4:	mov    esp,0x86dc6a9b
  415dc9:	and    DWORD PTR [edx+0x41],esp
  415dcc:	shl    ebx,1
  415dce:	mov    bl,0x18
  415dd0:	imul   esp,ecx,0xffffffbe
  415dd3:	adc    bl,dl
  415dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dd6:	shl    BYTE PTR [ebx-0x24],cl
  415dd9:	mov    bl,0x3
  415ddb:	sbb    BYTE PTR [edi-0x2b],bl
  415dde:	out    0x6b,eax
  415de0:	fcomp  QWORD PTR [edi-0x5a]
  415de3:	push   edi
  415de4:	int    0xc0
  415de6:	(bad)  [ebp-0x32462adb]
  415dec:	cli    
  415ded:	in     al,dx
  415dee:	mov    ebp,0x3983b031
  415df3:	pop    ebx
  415df4:	mov    ds,WORD PTR [ebp-0x31451479]
  415dfa:	je     0x415e35
  415dfc:	push   es
  415dfd:	pop    ebx
  415dfe:	ins    DWORD PTR es:[edi],dx
  415dff:	push   cs
  415e00:	rol    BYTE PTR [eax-0x59],cl
  415e03:	test   al,0xff
  415e05:	jmp    0xa486c01b
  415e0a:	in     al,0xb9
  415e0c:	test   BYTE PTR [edx],cl
  415e0e:	mov    edx,DWORD PTR [esi]
  415e10:	xor    eax,0xe5a514d1
  415e15:	ror    ah,cl
  415e17:	cmp    bl,BYTE PTR [eax]
  415e19:	movntq QWORD PTR [ecx+edi*2-0x2f61369a],mm2
  415e21:	add    cl,al
  415e23:	push   ecx
  415e24:	leave  
  415e25:	cmp    eax,0x4f95b48e
  415e2a:	outs   dx,BYTE PTR ds:[esi]
  415e2b:	test   DWORD PTR [ebx-0x62e4583],esi
  415e31:	inc    BYTE PTR [esi+0x52]
  415e34:	mov    edx,0x729b52fc
  415e39:	and    ecx,DWORD PTR [ecx+0x22fbb866]
  415e3f:	(bad)  
  415e41:	dec    edx
  415e42:	dec    ebx
  415e43:	pop    esp
  415e44:	lock in eax,0xc7
  415e47:	repnz xlat BYTE PTR ds:[ebx]
  415e49:	shr    BYTE PTR [edi-0x361d2813],1
  415e4f:	add    eax,0x107a4ddb
  415e54:	inc    eax
  415e55:	mov    ebx,0x5e6f0924
  415e5a:	pop    ds
  415e5b:	push   edi
  415e5c:	jns    0x415e8e
  415e5e:	test   DWORD PTR [ecx],0xd8c31bea
  415e64:	ror    BYTE PTR [edx+0x1c4590cf],cl
  415e6a:	cmp    al,0x8f
  415e6c:	cmp    dl,BYTE PTR [ecx-0x73c3f2ee]
  415e72:	xchg   ebx,eax
  415e73:	cmp    esi,edx
  415e75:	pusha  
  415e76:	(bad)  
  415e77:	loopne 0x415e3d
  415e79:	sbb    al,0x85
  415e7b:	retf   0xa22
  415e7e:	out    dx,al
  415e7f:	call   0x6ccdb628
  415e84:	out    dx,al
  415e85:	and    al,0x8a
  415e87:	fild   QWORD PTR [edi+edi*2]
  415e8a:	and    ebp,DWORD PTR [esi-0x5d]
  415e8d:	xchg   edx,eax
  415e8e:	stos   DWORD PTR es:[edi],eax
  415e8f:	loopne 0x415ef3
  415e91:	jbe    0x415ea9
  415e93:	sbb    ebx,ebx
  415e95:	imul   esp,DWORD PTR [edi+edi*1],0x29
  415e99:	call   0x3242:0x299fa5b2
  415ea0:	arpl   WORD PTR [ecx],ax
  415ea2:	shr    ch,1
  415ea4:	fwait
  415ea5:	inc    esi
  415ea6:	push   cs
  415ea7:	ret    0xff6a
  415eaa:	cmp    eax,esp
  415eac:	push   ds
  415ead:	cmp    BYTE PTR [eax],dh
  415eaf:	mov    DWORD PTR [ebx],edx
  415eb1:	(bad)  
  415eb3:	pop    eax
  415eb4:	loopne 0x415eeb
  415eb6:	fdiv   st,st(1)
  415eb8:	sub    bl,BYTE PTR [edi-0x76]
  415ebb:	dec    BYTE PTR [eax]
  415ebd:	dec    esp
  415ebe:	out    dx,al
  415ebf:	ins    BYTE PTR es:[edi],dx
  415ec0:	mov    BYTE PTR [eax+0x7d],cl
  415ec3:	mov    BYTE PTR [eax],dh
  415ec5:	adc    dh,BYTE PTR [edi+ebp*2-0x3eeec237]
  415ecc:	cmp    dh,BYTE PTR [esi]
  415ece:	arpl   si,dx
  415ed0:	xor    eax,0xb9c04401
  415ed5:	mov    edx,0x48acc949
  415eda:	(bad)  
  415edb:	out    dx,eax
  415edc:	out    0xf4,eax
  415ede:	mov    eax,0x3637f0a
  415ee3:	ror    DWORD PTR [edi+0x5c],1
  415ee6:	and    eax,0xeafadc76
  415eeb:	enter  0x8a55,0x25
  415eef:	into   
  415ef0:	pop    eax
  415ef1:	call   0x838b135c
  415ef6:	dec    ebx
  415ef7:	sub    edx,eax
  415ef9:	cmp    ebx,edx
  415efb:	ja     0x4167d7
  415f01:	jmp    0x415f09
  415f06:	mov    edi,DWORD PTR [ebp-0x2c]
  415f09:	mov    DWORD PTR [ebp-0x20],0x1aa3
  415f10:	mov    DWORD PTR [ebp-0x24],0x52d
  415f17:	mov    DWORD PTR [ebp-0x28],0x226c
  415f1e:	jmp    0x416327
  415f23:	dec    eax
  415f24:	pop    edi
  415f25:	xor    ch,BYTE PTR [esi-0x48b34bc6]
  415f2b:	inc    edx
  415f2c:	imul   edx,edi,0x7cf203e3
  415f32:	xchg   edx,eax
  415f33:	ins    BYTE PTR es:[edi],dx
  415f34:	(bad)  
  415f35:	sar    BYTE PTR [esi-0x41413b72],0xff
  415f3c:	lods   al,BYTE PTR ds:[esi]
  415f3d:	lods   eax,DWORD PTR ds:[esi]
  415f3e:	fiadd  DWORD PTR [edx-0x5c]
  415f41:	mov    al,0xce
  415f43:	add    BYTE PTR [edi-0x4e],cl
  415f46:	adc    eax,0xdc87beda
  415f4b:	outs   dx,BYTE PTR ds:[esi]
  415f4c:	mov    edx,0x6647cf11
  415f51:	outs   dx,BYTE PTR ds:[esi]
  415f52:	icebp  
  415f53:	mov    gs,WORD PTR [esi-0x24]
  415f56:	out    0xb0,eax
  415f58:	cwde   
  415f59:	(bad)  
  415f5a:	xchg   BYTE PTR [esi-0x6e],dh
  415f5d:	push   edx
  415f5e:	in     al,dx
  415f5f:	push   eax
  415f60:	stos   BYTE PTR es:[edi],al
  415f61:	(bad)  
  415f62:	ftst   
  415f64:	inc    esi
  415f65:	jb     0x415f73
  415f67:	fstp   TBYTE PTR [ecx]
  415f69:	add    DWORD PTR [eax-0x28],0xdf295026
  415f70:	fnstenv [edi-0x9]
  415f73:	cmp    dl,bh
  415f75:	(bad)  [ebx+0x32]
  415f78:	xor    al,0xbc
  415f7a:	or     ah,BYTE PTR [eax-0x16]
  415f7d:	mov    dl,ch
  415f7f:	ret    
  415f80:	mov    esp,0x8934af3a
  415f85:	pop    edi
  415f86:	inc    ecx
  415f87:	lods   eax,DWORD PTR ds:[esi]
  415f88:	jnp    0x415fba
  415f8a:	int    0x53
  415f8c:	sahf   
  415f8d:	sbb    al,0x3e
  415f8f:	or     BYTE PTR [ebp+edx*2+0x1c],ch
  415f93:	fbld   TBYTE PTR [ebp+ebp*4+0x2d8a2e3c]
  415f9a:	out    dx,eax
  415f9b:	mov    ebp,?
  415f9d:	xchg   esi,eax
  415f9e:	retf   0x89f7
  415fa1:	sti    
  415fa2:	or     eax,0x9f58c0cf
  415fa7:	scas   eax,DWORD PTR es:[edi]
  415fa8:	loope  0x415f3d
  415faa:	repz sbb al,BYTE PTR [esi]
  415fad:	enter  0x5807,0x56
  415fb1:	enter  0x9d60,0x83
  415fb5:	add    ch,cl
  415fb7:	jbe    0x415f5a
  415fb9:	sub    eax,0x8a77951e
  415fbe:	jp     0x415fcd
  415fc0:	fild   DWORD PTR [ebx+0xd021566]
  415fc6:	ds js  0x415fa5
  415fc9:	inc    eax
  415fca:	or     al,0x44
  415fcc:	lds    edx,FWORD PTR [eax-0x79913c5e]
  415fd2:	jecxz  0x415ff3
  415fd4:	inc    edi
  415fd5:	icebp  
  415fd6:	out    0x1d,eax
  415fd8:	push   edx
  415fd9:	sbb    ebx,DWORD PTR [esi-0xc8480a]
  415fdf:	stos   BYTE PTR es:[edi],al
  415fe0:	xchg   ebp,eax
  415fe1:	jno    0x41600f
  415fe3:	test   DWORD PTR [ebx+ebp*2+0x7b],0x7e342efd
  415feb:	cmp    DWORD PTR [esp+edi*4-0x2f],ebp
  415fef:	mov    eax,0x591c174e
  415ff4:	aam    0xac
  415ff6:	mov    edx,0xea004704
  415ffb:	in     eax,0xfb
  415ffd:	aam    0x4e
  415fff:	ja     0x415fa9
  416001:	fisttp WORD PTR [ebx+0x43]
  416004:	scas   eax,DWORD PTR es:[edi]
  416005:	add    BYTE PTR [edx],al
  416007:	push   esi
  416008:	sub    eax,0xde4526e2
  41600d:	xor    BYTE PTR [edx-0x3b],bh
  416010:	stos   DWORD PTR es:[edi],eax
  416011:	pop    eax
  416012:	and    ch,dh
  416014:	cmp    eax,DWORD PTR ds:0xda00fbc4
  41601a:	xchg   BYTE PTR [edx-0x1f],bh
  41601d:	adc    DWORD PTR [edx+0x19b8e30a],edi
  416023:	xchg   edi,eax
  416024:	shl    ch,cl
  416026:	les    sp,DWORD PTR [ebp-0x28659ada]
  41602d:	pop    edx
  41602e:	sub    al,0x43
  416030:	mov    ebp,0xd5b0f182
  416035:	ins    DWORD PTR es:[edi],dx
  416036:	call   0x22ed:0x5dfcd52
  41603d:	cwde   
  41603e:	sbb    edx,0xbea5ee28
  416044:	push   cs
  416045:	retf   0xde03
  416048:	xor    DWORD PTR [ecx+edx*2-0x2cb5986],ebx
  41604f:	out    0x95,al
  416051:	test   DWORD PTR [ebp-0x62],ebp
  416054:	push   ebx
  416055:	or     eax,0x5f44b275
  41605a:	ja     0x416012
  41605c:	in     al,0xac
  41605e:	cs push es
  416060:	mov    edx,0x33ec8e19
  416065:	inc    esp
  416066:	inc    ecx
  416067:	rol    eax,cl
  416069:	xchg   BYTE PTR [ebx+0x3991ea7],cl
  41606f:	mov    dl,0x47
  416071:	scas   eax,DWORD PTR es:[edi]
  416072:	xor    bl,BYTE PTR [ebp+0x533c120c]
  416078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416079:	fimul  WORD PTR [esp+ebp*1-0x3c8f0245]
  416080:	xchg   ebp,eax
  416081:	and    esp,DWORD PTR [edx]
  416083:	imul   ebp,DWORD PTR [eax+0x40493602],0x65952717
  41608d:	inc    eax
  41608e:	fisub  WORD PTR [eax+edi*2]
  416091:	pop    ss
  416092:	ds jle 0x4160ff
  416095:	(bad)  
  416096:	jmp    0x416103
  416098:	adc    ah,BYTE PTR [eax+0x36eb5423]
  41609e:	shl    bl,1
  4160a0:	imul   esp,DWORD PTR [ebp+0x55],0x6eef38ae
  4160a7:	add    al,0x27
  4160a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160aa:	mov    ss,WORD PTR [esi]
  4160ac:	push   0x60
  4160ae:	test   al,0x78
  4160b0:	rcl    BYTE PTR [ebx],1
  4160b2:	(bad)  
  4160b3:	and    BYTE PTR [bp+si-0x4642],bl
  4160b8:	xor    bh,BYTE PTR ds:0xbcfecd08
  4160be:	add    al,dh
  4160c0:	add    dh,BYTE PTR [ebp+0x3cb79c6a]
  4160c6:	jbe    0x416115
  4160c8:	imul   ebp,DWORD PTR [edx+esi*1],0x34
  4160cc:	or     BYTE PTR [ebx+ebp*1],cl
  4160cf:	sbb    eax,0x7254889a
  4160d4:	fmul   DWORD PTR [edi+eiz*2]
  4160d7:	test   DWORD PTR [edi],ebp
  4160d9:	mov    esp,0x80bf35a9
  4160de:	inc    ebp
  4160df:	dec    ebp
  4160e0:	jl     0x41610d
  4160e2:	fldenv ds:0x43f0a68a
  4160e8:	iret   
  4160e9:	mov    WORD PTR [eax+0x3a],ds
  4160ec:	bound  ecx,QWORD PTR [edx-0x71]
  4160ef:	mov    esi,0x5967f0fe
  4160f4:	stos   DWORD PTR es:[edi],eax
  4160f5:	popf   
  4160f6:	adc    eax,0xa6a2e4c2
  4160fb:	in     eax,0xf8
  4160fd:	aad    0x6d
  4160ff:	jnp    0x416090
  416101:	inc    DWORD PTR [edi-0x77]
  416104:	mov    esp,0x92abc17a
  416109:	call   0xc5043e3c
  41610e:	cmp    al,BYTE PTR [ebx]
  416110:	push   esp
  416111:	pop    es
  416112:	and    edi,DWORD PTR [esi+eiz*4-0x47129508]
  416119:	sub    BYTE PTR [ebp+0x60],ah
  41611c:	mov    ah,0xf9
  41611e:	shl    BYTE PTR [ecx*4+0x5bda6e47],cl
  416125:	jo     0x416135
  416127:	and    eax,DWORD PTR [ebx]
  416129:	repnz arpl WORD PTR [ebx-0x43ae5adc],di
  416130:	dec    esp
  416131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416132:	adc    eax,0xb4062286
  416137:	jne    0x4160ee
  416139:	inc    edi
  41613a:	xor    eax,0x9a9eceb6
  41613f:	je     0x416128
  416141:	dec    eax
  416142:	push   edi
  416143:	pop    ebp
  416144:	add    eax,0x43d9fa61
  416149:	inc    BYTE PTR [esi-0xd669582]
  41614f:	push   ebx
  416150:	sti    
  416151:	jmp    0x416153
  416153:	loopne 0x416176
  416155:	mov    al,ds:0x62199157
  41615a:	add    eax,edx
  41615c:	icebp  
  41615d:	jmp    0xdd184ae7
  416162:	jp     0x416186
  416164:	sub    bl,BYTE PTR [ebp+0x68e145c8]
  41616a:	jg     0x4161a1
  41616c:	int3   
  41616d:	out    0xb9,eax
  41616f:	jmp    0x41617e
  416171:	mov    fs,WORD PTR [ebp-0x6df33209]
  416177:	ins    DWORD PTR es:[edi],dx
  416178:	push   es
  416179:	pop    esp
  41617a:	sub    DWORD PTR [ebx],esi
  41617c:	(bad)  
  41617d:	(bad)  
  41617f:	mov    bl,0x76
  416181:	call   0xd1d4:0x87e21a55
  416188:	ret    0x6941
  41618b:	mov    ds:0x4f448963,al
  416190:	inc    edx
  416191:	mov    ch,BYTE PTR [ecx]
  416193:	fs push 0x2d
  416196:	retf   
  416197:	ror    BYTE PTR [ebp+0x5f1c2a35],cl
  41619d:	push   esp
  41619e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41619f:	ds mov ebx,0x920a283
  4161a5:	lahf   
  4161a6:	out    0x5e,al
  4161a8:	std    
  4161a9:	adc    al,0xe3
  4161ab:	cwde   
  4161ac:	shl    BYTE PTR [eax+0x2],cl
  4161af:	frstor [ebx]
  4161b1:	mov    ebp,0x3ace5bb0
  4161b6:	ja     0x416185
  4161b8:	cwde   
  4161b9:	jns    0x4161d8
  4161bb:	pop    ss
  4161bc:	and    eax,0x210e20a6
  4161c1:	add    edx,ebp
  4161c3:	inc    ebx
  4161c4:	push   cs
  4161c5:	add    ecx,DWORD PTR [edi+0x27]
  4161c8:	lods   al,BYTE PTR ds:[esi]
  4161c9:	jo     0x416194
  4161cb:	lods   eax,DWORD PTR ds:[esi]
  4161cc:	dec    eax
  4161cd:	add    ch,BYTE PTR [esi+esi*8+0x2a]
  4161d1:	in     al,0xf8
  4161d3:	or     cl,dh
  4161d5:	ins    DWORD PTR es:[edi],dx
  4161d6:	xchg   bh,bl
  4161d8:	call   0x9ef0:0x80e694a0
  4161df:	cmc    
  4161e0:	lea    esp,es:[edx+0x16]
  4161e4:	push   ebx
  4161e5:	daa    
  4161e6:	nop
  4161e7:	mov    ebx,0x818bb29c
  4161ec:	cmp    BYTE PTR [edx+0x3d],0x63
  4161f0:	xchg   edx,eax
  4161f1:	test   al,0xc2
  4161f3:	(bad)  
  4161f4:	push   ebx
  4161f5:	aas    
  4161f6:	div    DWORD PTR [ebp+0x43]
  4161f9:	fild   WORD PTR [esp+ebx*1]
  4161fc:	mov    ds:0x7a3283ea,eax
  416201:	pop    edi
  416202:	push   es
  416203:	sub    ch,al
  416205:	imul   ebp,DWORD PTR [ebx],0x77
  416208:	cld    
  416209:	xchg   esi,eax
  41620a:	gs add al,0xe7
  41620d:	inc    esi
  41620e:	das    
  41620f:	push   0x2278c709
  416214:	mov    esi,0x5778ea68
  416219:	cmc    
  41621a:	and    esp,DWORD PTR [ebx]
  41621c:	cmp    al,0xb1
  41621e:	call   0x8c58da54
  416223:	xor    BYTE PTR [edi+0x64],cl
  416226:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416227:	fstp   QWORD PTR [edx+0x29]
  41622a:	in     al,dx
  41622b:	xor    edi,edx
  41622d:	add    DWORD PTR [eax-0x4b7f6539],eax
  416233:	jg     0x41621e
  416235:	(bad)  
  416236:	dec    ebx
  416237:	cmp    edx,DWORD PTR [edi+0x6d]
  41623a:	xor    al,ch
  41623c:	cli    
  41623d:	(bad)  
  41623e:	in     al,dx
  41623f:	imul   BYTE PTR [edi-0x662e4695]
  416245:	aam    0xa9
  416247:	xchg   ecx,eax
  416248:	cld    
  416249:	adc    bh,BYTE PTR ds:0x2603f32d
  41624f:	xor    al,0xb6
  416251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416252:	das    
  416253:	add    BYTE PTR [eax+0x5d],ch
  416256:	mov    esi,0xe0baa7f6
  41625b:	aam    0x8a
  41625d:	adc    edi,DWORD PTR [ebx+edi*8]
  416260:	sbb    al,0xc9
  416262:	arpl   WORD PTR [edi+0x596dc8e2],dx
  416268:	inc    ebp
  416269:	scas   al,BYTE PTR es:[edi]
  41626a:	and    eax,edi
  41626c:	scas   al,BYTE PTR es:[edi]
  41626d:	mov    dh,BYTE PTR [edx]
  41626f:	scas   al,BYTE PTR es:[edi]
  416270:	int    0x39
  416272:	sbb    al,0xd0
  416274:	test   eax,0x9f4a578
  416279:	arpl   WORD PTR [ebp-0x28],ax
  41627c:	popf   
  41627d:	inc    esi
  41627e:	jae    0x416280
  416280:	scas   eax,DWORD PTR es:[edi]
  416281:	mov    esi,0x6370058
  416286:	leave  
  416287:	add    BYTE PTR [ebp+0xa5d9830],cl
  41628d:	or     ah,BYTE PTR [esi+0x7a]
  416290:	sub    eax,0x27123ec9
  416295:	cdq    
  416296:	sub    eax,0xdefc559f
  41629b:	inc    esp
  41629c:	jmp    FWORD PTR ds:0x36e6ccfe
  4162a2:	mov    BYTE PTR [edi+0x31],ch
  4162a5:	push   eax
  4162a6:	(bad)  
  4162a7:	jmp    0xdf70:0x69ef7e35
  4162ae:	mov    eax,0xa2fcb111
  4162b3:	mov    ds:0x810a123d,eax
  4162b8:	mov    dl,0x87
  4162ba:	daa    
  4162bb:	bound  ebx,QWORD PTR [eax]
  4162bd:	fwait
  4162be:	dec    edi
  4162bf:	push   0x20
  4162c1:	js     0x4162b6
  4162c3:	sub    BYTE PTR [eax+0x47],dh
  4162c6:	cld    
  4162c7:	imul   ebx,DWORD PTR [ecx-0x19e6a998],0xeaf0107a
  4162d1:	hlt    
  4162d2:	pop    esi
  4162d3:	idiv   DWORD PTR [ebx+0x34]
  4162d6:	(bad)  
  4162d7:	iret   
  4162d8:	jmp    DWORD PTR [ebx+0x77033a6f]
  4162de:	push   eax
  4162df:	push   ecx
  4162e0:	jb     0x4162fd
  4162e2:	dec    ecx
  4162e3:	mov    dl,0x76
  4162e5:	stc    
  4162e6:	push   0x59
  4162e8:	add    al,0x62
  4162ea:	daa    
  4162eb:	in     al,0x6e
  4162ed:	mov    esi,0x3e3fcd63
  4162f2:	sub    DWORD PTR [edi-0x6f],ebp
  4162f5:	es dec esp
  4162f7:	jne    0x416296
  4162f9:	cs pushf 
  4162fb:	mov    dh,0x51
  4162fd:	pop    esi
  4162fe:	pop    ebx
  4162ff:	or     eax,0x5871c43e
  416304:	aaa    
  416305:	dec    ecx
  416306:	jge    0x41629a
  416308:	aam    0xc8
  41630a:	cs inc ebp
  41630c:	pushf  
  41630d:	xchg   BYTE PTR [edi-0x4f],ch
  416310:	sbb    eax,0x18188ddc
  416315:	mov    dl,BYTE PTR [edx-0x1f]
  416318:	rcl    BYTE PTR [edi+0x5c],0x4a
  41631c:	and    al,0xe1
  41631e:	ins    BYTE PTR es:[edi],dx
  41631f:	mov    al,0xc
  416321:	xor    DWORD PTR [edi+ebp*1],edi
  416324:	fsub   st,st(6)
  416326:	iret   
  416327:	mov    DWORD PTR [ebp-0x2c],0x347d
  41632e:	mov    eax,DWORD PTR [ebp-0x2c]
  416331:	mov    edx,DWORD PTR [ebp-0x28]
  416334:	mov    ebx,DWORD PTR [ebp-0x24]
  416337:	sub    eax,0x24b3
  41633c:	imul   eax,edx
  41633f:	xor    eax,0x74ef
  416344:	xor    edx,edx
  416346:	div    ebx
  416348:	mov    edx,DWORD PTR [ebp-0x20]
  41634b:	mov    ebx,DWORD PTR [ebp+0x8]
  41634e:	push   0x20
  416350:	and    eax,edx
  416352:	mov    edx,edi
  416354:	sub    edx,eax
  416356:	sub    edx,0x683
  41635c:	mov    DWORD PTR [ebp-0x2c],edx
  41635f:	mov    eax,DWORD PTR [ebp-0x30]
  416362:	mov    edx,DWORD PTR [ebp-0x34]
  416365:	xor    al,dl
  416367:	mov    edx,DWORD PTR [ebp-0x2c]
  41636a:	xor    al,0x58
  41636c:	and    al,0xd8
  41636e:	add    al,BYTE PTR [ebp+0xc]
  416371:	add    al,0x28
  416373:	jmp    0x41677c
  416378:	mov    ebx,0x41d6c237
  41637d:	cmp    edi,DWORD PTR [ebx-0x6192d245]
  416383:	nop
  416384:	sahf   
  416385:	xchg   ebp,eax
  416386:	push   0xc0cc3cd1
  41638b:	mov    esi,0xbebec48e
  416390:	xchg   ebp,eax
  416391:	adc    eax,0x49a6d963
  416396:	mov    WORD PTR [edi+0x58],?
  416399:	stc    
  41639a:	mov    eax,DWORD PTR [ebx+ebp*8]
  41639d:	inc    edx
  41639e:	jmp    0x416330
  4163a0:	aaa    
  4163a1:	dec    eax
  4163a2:	and    DWORD PTR [esi+0x3b],esi
  4163a5:	(bad)  
  4163a6:	addr16 aaa 
  4163a8:	in     al,0xfb
  4163aa:	gs jg  0x416385
  4163ad:	jne    0x4163d0
  4163af:	fs adc al,ah
  4163b2:	sub    eax,0x1ee31485
  4163b7:	jnp    0x416414
  4163b9:	test   DWORD PTR [eax+ebp*4],ecx
  4163bc:	jmp    0x41635c
  4163be:	pop    edx
  4163bf:	push   esp
  4163c0:	dec    eax
  4163c1:	ins    BYTE PTR es:[edi],dx
  4163c2:	fnstenv [esi+edi*8]
  4163c5:	test   BYTE PTR [edi-0xa],bh
  4163c8:	cli    
  4163c9:	das    
  4163ca:	push   esi
  4163cb:	adc    DWORD PTR [ecx],edi
  4163cd:	inc    edi
  4163ce:	outs   dx,DWORD PTR ds:[esi]
  4163cf:	or     ebp,esp
  4163d1:	xchg   ebp,eax
  4163d2:	inc    esp
  4163d3:	mov    al,0xbc
  4163d5:	mov    bh,0xa6
  4163d7:	mov    cl,0x12
  4163d9:	jp     0x416413
  4163db:	sar    DWORD PTR [ebp+edi*1+0x4b],cl
  4163df:	mov    cl,0x69
  4163e1:	xor    eax,0xbd2481f1
  4163e6:	push   esp
  4163e7:	jno    0x41637c
  4163e9:	shl    BYTE PTR [eax+0x2befc688],cl
  4163ef:	ds popa 
  4163f1:	retf   
  4163f2:	mov    al,0x2f
  4163f4:	adc    al,0xdd
  4163f6:	pop    edi
  4163f7:	in     eax,0x1b
  4163f9:	out    0x2f,al
  4163fb:	mov    gs,WORD PTR [ebp+0x51282b0e]
  416401:	xchg   ebx,eax
  416402:	fiadd  DWORD PTR [edi-0x7f2754a]
  416408:	cmp    al,0xf6
  41640a:	retf   0x7737
  41640d:	icebp  
  41640e:	in     al,dx
  41640f:	mov    ds:0x53f71ea,eax
  416414:	imul   eax,DWORD PTR [edx],0xffffff99
  416417:	int3   
  416418:	not    DWORD PTR [edi+edx*2]
  41641b:	sbb    ah,BYTE PTR [esi]
  41641d:	ja     0x41648e
  41641f:	or     BYTE PTR [ebx+0x4c],ah
  416422:	cmp    BYTE PTR [eax-0x68],ah
  416425:	dec    ecx
  416426:	mov    ebp,0xe3e1dbe3
  41642b:	imul   esp
  41642d:	xor    edx,ecx
  41642f:	arpl   WORD PTR [edx+0x74],dx
  416432:	and    eax,0x857b3d85
  416437:	in     eax,0xbc
  416439:	sub    BYTE PTR [esi-0x34],dh
  41643c:	jns    0x4164ad
  41643e:	mov    ebx,0x207f2173
  416443:	jg     0x416489
  416445:	iret   
  416446:	in     al,dx
  416447:	lds    edx,FWORD PTR [ebx]
  416449:	aaa    
  41644a:	cmp    al,BYTE PTR [edx]
  41644c:	or     ebp,eax
  41644e:	jnp    0x416448
  416450:	sbb    dl,ch
  416452:	or     DWORD PTR [ecx-0x2949e8c0],0x6a
  416459:	aad    0x40
  41645b:	jecxz  0x416402
  41645d:	scas   eax,DWORD PTR es:[edi]
  41645e:	in     al,0x78
  416460:	dec    esp
  416461:	je     0x4164d4
  416463:	enter  0x867b,0xbe
  416467:	pop    ds
  416468:	lods   eax,DWORD PTR ds:[esi]
  416469:	aad    0x6a
  41646b:	jbe    0x4164cb
  41646d:	lea    esi,[edx+0x63]
  416470:	pop    eax
  416471:	pusha  
  416472:	mov    ebx,0xa1056461
  416477:	jnp    0x416442
  416479:	xor    al,0x71
  41647b:	push   esp
  41647c:	shr    DWORD PTR [ecx],0xcb
  41647f:	addr16 pop esp
  416481:	(bad)  
  416482:	cmp    DWORD PTR [ebx+eax*4],ebx
  416485:	pusha  
  416486:	xor    bl,BYTE PTR ds:0x440f492c
  41648c:	cmp    ebx,DWORD PTR [bx+di-0x74]
  416490:	test   al,0xf5
  416492:	(bad)  
  416493:	(bad)  
  416494:	ins    DWORD PTR es:[edi],dx
  416495:	fld    QWORD PTR [edx+0x44]
  416498:	stos   DWORD PTR es:[edi],eax
  416499:	loope  0x41649b
  41649b:	aad    0xd1
  41649d:	cs stc 
  41649f:	aam    0x83
  4164a1:	jb     0x416452
  4164a3:	ss pushf 
  4164a5:	pop    edx
  4164a6:	leave  
  4164a7:	daa    
  4164a8:	inc    ebp
  4164a9:	and    al,0x85
  4164ab:	and    BYTE PTR [esi-0x4e],dl
  4164ae:	call   0x4bf8526f
  4164b3:	jp     0x4164f7
  4164b5:	scas   al,BYTE PTR es:[edi]
  4164b6:	dec    ecx
  4164b7:	cdq    
  4164b8:	ret    
  4164b9:	sub    eax,ebp
  4164bb:	jle    0x416535
  4164bd:	arpl   bp,di
  4164bf:	je     0x4164ee
  4164c1:	dec    edx
  4164c2:	adc    BYTE PTR [esi+0x41],bh
  4164c5:	and    DWORD PTR [ebx+0x72],edi
  4164c8:	cwde   
  4164c9:	mov    eax,0x3c0348bb
  4164ce:	push   DWORD PTR [ebx+edi*2-0x39]
  4164d2:	icebp  
  4164d3:	out    dx,al
  4164d4:	test   DWORD PTR ss:[esi],ebp
  4164d7:	cld    
  4164d8:	shr    BYTE PTR [ebp-0x370c52e5],1
  4164de:	arpl   WORD PTR [edi+0x2a7a72b5],sp
  4164e4:	daa    
  4164e5:	inc    eax
  4164e6:	out    0xea,al
  4164e8:	adc    ecx,DWORD PTR [ecx+0x5acc21c9]
  4164ee:	xor    dh,0xb
  4164f1:	ret    
  4164f2:	iret   
  4164f3:	sar    DWORD PTR [ebx*4+0x69595989],cl
  4164fa:	mov    cl,0xec
  4164fc:	add    esp,DWORD PTR [edx+esi*8-0x69b42b38]
  416503:	xor    BYTE PTR [edi+0x4f],al
  416506:	popa   
  416507:	push   eax
  416508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416509:	in     al,dx
  41650a:	or     eax,0x3a402ab9
  41650f:	push   ss
  416510:	cmp    al,0xdb
  416512:	fwait
  416513:	and    DWORD PTR [edi+edx*2-0x2c],eax
  416517:	pop    ss
  416518:	popa   
  416519:	jge    0x4164de
  41651b:	and    eax,0xb2b0b719
  416520:	mov    DWORD PTR [ebx+0x53],ecx
  416523:	inc    eax
  416524:	call   0xb0633ab0
  416529:	pop    edx
  41652a:	xlat   BYTE PTR ds:[ebx]
  41652b:	add    edx,esi
  41652d:	int    0x1e
  41652f:	xchg   esi,eax
  416530:	dec    esp
  416531:	adc    cl,BYTE PTR [edx+0x6c]
  416534:	dec    edx
  416535:	gs mov ch,0x6f
  416538:	or     eax,0x76f4e0de
  41653d:	shr    BYTE PTR [esi+ebx*8+0x55],cl
  416541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416542:	addr16 sbb al,bl
  416545:	cs cmc 
  416547:	nop
  416548:	jo     0x4164d6
  41654a:	jne    0x416590
  41654c:	dec    ecx
  41654d:	int3   
  41654e:	adc    DWORD PTR [eax-0xa],ebp
  416551:	jp     0x416592
  416553:	xor    edx,ebp
  416555:	lds    edi,FWORD PTR [esi]
  416557:	jo     0x4164e2
  416559:	jb     0x4165c3
  41655b:	stos   BYTE PTR es:[edi],al
  41655c:	mov    esi,0x7493f536
  416561:	icebp  
  416562:	mov    ss,WORD PTR [ebx+0xf]
  416565:	mov    edi,0x8f2fc00c
  41656a:	xchg   ecx,eax
  41656b:	aad    0xa8
  41656d:	mov    al,ds:0x4e915b3a
  416572:	fcom   QWORD PTR [edi+0x3e]
  416575:	cmp    al,0xf0
  416577:	xor    edi,ebx
  416579:	(bad)  
  41657a:	ja     0x4165b4
  41657c:	stos   BYTE PTR es:[edi],al
  41657d:	aas    
  41657e:	add    DWORD PTR [ebx],ecx
  416580:	mov    ah,0x7e
  416582:	loope  0x41659c
  416584:	and    eax,0x8c76a9d9
  416589:	push   edi
  41658a:	mov    eax,0x9516c3b4
  41658f:	inc    esi
  416590:	fst    QWORD PTR [ebx+0x70]
  416593:	mov    eax,ds:0xf5183c49
  416598:	dec    eax
  416599:	stos   DWORD PTR es:[edi],eax
  41659a:	mov    eax,0x1621e5fa
  41659f:	jmp    0x30db:0xb868c3f2
  4165a6:	and    eax,0xa92cc876
  4165ab:	jmp    0x416530
  4165ad:	loopne 0x416581
  4165af:	les    edx,FWORD PTR [edx+0x4c]
  4165b2:	lahf   
  4165b3:	cwde   
  4165b4:	cmp    DWORD PTR [ecx],esi
  4165b6:	jmp    0x4a23:0x7b1c4f30
  4165bd:	das    
  4165be:	arpl   WORD PTR [ebx+0x1dda90d2],cx
  4165c4:	or     eax,ecx
  4165c6:	imul   edx,DWORD PTR ds:0x9df335ac,0x5632e7a2
  4165d0:	xor    al,0x28
  4165d2:	or     al,0x27
  4165d4:	push   edi
  4165d5:	add    DWORD PTR [eax],0xffffff8e
  4165d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165d9:	sahf   
  4165da:	aaa    
  4165db:	aam    0x67
  4165dd:	xor    BYTE PTR [edx-0x5facb20a],cl
  4165e3:	and    eax,DWORD PTR [eax]
  4165e5:	mov    ds:0x91f46289,al
  4165ea:	out    0x31,eax
  4165ec:	adc    eax,0x9123cb50
  4165f1:	es int 0xb8
  4165f4:	mov    ds:0xb91612c9,al
  4165f9:	pop    esp
  4165fa:	xor    DWORD PTR [edi+ebp*2],esp
  4165fd:	repnz mov eax,0xe8450569
  416603:	and    ah,BYTE PTR [eax+eiz*4-0x65]
  416607:	mov    BYTE PTR [ebx+0x45],ch
  41660a:	sbb    al,0x3d
  41660c:	jg     0x416635
  41660e:	add    eax,0x63c870f9
  416613:	push   0xcc381bdf
  416618:	push   ss
  416619:	jno    0x41663d
  41661b:	scas   eax,DWORD PTR es:[edi]
  41661c:	clc    
  41661d:	sti    
  41661e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41661f:	mov    eax,0x25777e17
  416624:	add    al,BYTE PTR [ecx+0x47658e66]
  41662a:	arpl   WORD PTR [edi],ax
  41662c:	mov    eax,ds:0x2febe018
  416631:	adc    BYTE PTR [edi+0xb9a3e3f],0x4d
  416638:	jle    0x416662
  41663a:	dec    esp
  41663b:	push   ebp
  41663c:	xor    esi,edi
  41663e:	nop
  41663f:	fdiv   DWORD PTR [ecx-0x6e]
  416642:	push   eax
  416643:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416645:	xchg   DWORD PTR [ebx-0x4e879390],ebx
  41664b:	dec    ecx
  41664c:	pop    esp
  41664d:	xchg   edi,eax
  41664e:	(bad)  
  41664f:	std    
  416650:	jb     0x416615
  416652:	sbb    DWORD PTR [ecx+0x77eab36e],esp
  416658:	adc    DWORD PTR [eax-0x104989ff],ecx
  41665e:	mov    bh,0x4c
  416660:	ins    BYTE PTR es:[edi],dx
  416661:	arpl   WORD PTR [ebp+0x3d],sp
  416664:	adc    ch,ch
  416666:	xor    bl,BYTE PTR [eax]
  416668:	fnstcw WORD PTR [ecx+0x4f2a7ba8]
  41666e:	fchs   
  416670:	lods   eax,DWORD PTR ds:[esi]
  416671:	inc    edx
  416672:	rcl    BYTE PTR [edx+0x4e],cl
  416675:	pop    eax
  416676:	xchg   ecx,eax
  416677:	into   
  416678:	adc    dl,dl
  41667a:	(bad)  
  41667d:	inc    ebp
  41667e:	call   0x5460:0x71abaeb2
  416685:	fmul   DWORD PTR [eax+edi*4-0x4a]
  416689:	inc    edx
  41668a:	push   ecx
  41668b:	(bad)  
  41668c:	xor    BYTE PTR [ebx+eax*4],al
  41668f:	ja     0x416673
  416691:	pop    esp
  416692:	call   0xab441d10
  416697:	jo     0x4166a4
  416699:	pop    edx
  41669a:	outs   dx,BYTE PTR ds:[esi]
  41669b:	pop    ecx
  41669c:	mov    cl,0x8c
  41669e:	retf   
  41669f:	ss push ecx
  4166a1:	dec    ecx
  4166a2:	(bad)  
  4166a3:	in     eax,0xbb
  4166a5:	test   al,0xe
  4166a7:	fisub  DWORD PTR [eax]
  4166a9:	xor    dl,BYTE PTR [ebx]
  4166ab:	fs jnp 0x4166c3
  4166ae:	sub    bh,al
  4166b0:	dec    esp
  4166b1:	or     dl,cl
  4166b3:	pusha  
  4166b4:	inc    esp
  4166b5:	jb     0x416638
  4166b7:	fisttp WORD PTR [bx+si+0x2e0b]
  4166bc:	jg     0x416684
  4166be:	mov    BYTE PTR [eax-0x650a3cf6],dh
  4166c4:	mov    al,ds:0xfc5abd4c
  4166c9:	add    eax,0x665f6c63
  4166ce:	sub    al,0x70
  4166d0:	or     edx,DWORD PTR cs:[esi]
  4166d3:	mov    esp,0xfede510a
  4166d8:	mov    eax,ds:0xd7b4fdcb
  4166dd:	stc    
  4166de:	xchg   esi,eax
  4166df:	mov    ecx,ecx
  4166e1:	leave  
  4166e2:	xor    DWORD PTR [ebx+ebp*4+0x2004f564],ebp
  4166e9:	js     0x416681
  4166eb:	stc    
  4166ec:	lock imul esi,eax,0xe
  4166f0:	sahf   
  4166f1:	jmp    0x4129b804
  4166f6:	ror    BYTE PTR [edi-0x692bac59],1
  4166fc:	push   es
  4166fd:	sti    
  4166fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166ff:	cdq    
  416700:	imul   eax
  416702:	inc    ebx
  416703:	mov    ebx,0x1c5f386f
  416708:	fistp  QWORD PTR [ecx+ebp*2+0x77]
  41670c:	inc    edi
  41670d:	into   
  41670e:	loop   0x4166d3
  416710:	mov    ebx,0xcc0ccdfa
  416715:	jle    0x416713
  416717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416718:	pop    ss
  416719:	sub    eax,0x2fe4c49d
  41671e:	fidiv  WORD PTR [eax]
  416720:	sbb    ebx,DWORD PTR [ecx-0x58]
  416723:	jbe    0x416714
  416725:	ficom  WORD PTR [edx+0x5d2591cb]
  41672b:	cli    
  41672c:	retf   0x6bfd
  41672f:	xor    BYTE PTR [esi+0xf9c43f9],bh
  416735:	(bad)  
  416736:	iret   
  416737:	aaa    
  416738:	aas    
  416739:	(bad)  
  41673a:	lods   al,BYTE PTR ds:[esi]
  41673b:	cmp    ebp,DWORD PTR [edx-0x77375b49]
  416741:	xor    BYTE PTR [esp+ebx*1-0x7d],0xe0
  416746:	adc    cl,dh
  416748:	rcr    DWORD PTR ds:0x1f9b98f,1
  41674e:	mov    ecx,0x34fcff5d
  416753:	scas   eax,DWORD PTR es:[edi]
  416754:	dec    edi
  416755:	sbb    ebp,eax
  416757:	call   0x1025:0x85431498
  41675e:	cli    
  41675f:	push   esp
  416760:	mov    ecx,0x26019206
  416765:	dec    ebp
  416766:	cmp    BYTE PTR [ebp+0x4b],dh
  416769:	fisttp WORD PTR [ebx+0x5cdb7cd8]
  41676f:	cld    
  416770:	xor    edx,ecx
  416772:	pop    ss
  416773:	jecxz  0x416720
  416775:	pop    es
  416776:	idiv   DWORD PTR [ecx-0x40]
  416779:	bound  ebx,QWORD PTR [esi+0x1a048816]
  41677f:	mov    eax,DWORD PTR [ebp-0x38]
  416782:	add    eax,DWORD PTR [ebp-0x3c]
  416785:	mov    edx,DWORD PTR [ebp-0x40]
  416788:	xor    eax,edx
  41678a:	mov    edx,DWORD PTR [ebp-0x44]
  41678d:	xor    eax,edx
  41678f:	mov    edx,0x61f7
  416794:	sub    edx,eax
  416796:	mov    eax,DWORD PTR [ebp-0x4]
  416799:	add    edi,edx
  41679b:	mov    edx,DWORD PTR [ebp-0x8]
  41679e:	sub    eax,0x7721
  4167a3:	xor    eax,edx
  4167a5:	mov    edx,DWORD PTR [ebp-0xc]
  4167a8:	xor    eax,edx
  4167aa:	or     eax,0x7bc9
  4167af:	xor    eax,0xfffff0db
  4167b4:	mov    DWORD PTR [ebp-0x2c],edi
  4167b7:	sub    edi,eax
  4167b9:	mov    eax,DWORD PTR [ebp-0x10]
  4167bc:	mov    edx,DWORD PTR [ebp-0x14]
  4167bf:	mov    ebx,DWORD PTR [ebp-0x18]
  4167c2:	xor    eax,edx
  4167c4:	xor    edx,edx
  4167c6:	sub    eax,esi
  4167c8:	div    ebx
  4167ca:	pop    edx
  4167cb:	xor    eax,ecx
  4167cd:	sub    edx,eax
  4167cf:	cmp    edi,edx
  4167d1:	jbe    0x415f06
  4167d7:	pop    edi
  4167d8:	pop    esi
  4167d9:	pop    ebx
  4167da:	leave  
  4167db:	ret    0x8
  4167de:	push   ebp
  4167df:	mov    ebp,esp
  4167e1:	and    esp,0xfffffff8
  4167e4:	sub    esp,0x9c
  4167ea:	push   ebx
  4167eb:	push   esi
  4167ec:	push   edi
  4167ed:	push   DWORD PTR ds:0x422574
  4167f3:	lea    eax,[esp+0xa4]
  4167fa:	push   eax
  4167fb:	call   DWORD PTR ds:0x42dfe0
  416801:	push   DWORD PTR [esp+0xa4]
  416808:	push   DWORD PTR ds:0x422560
  41680e:	call   DWORD PTR ds:0x42e250
  416814:	push   eax
  416815:	call   DWORD PTR ds:0x42e2b0
  41681b:	cmp    DWORD PTR ds:0x428555,0x0
  416822:	mov    ecx,0x19be
  416827:	mov    ecx,0x6729
  41682c:	not    ecx
  41682e:	mov    DWORD PTR ds:0x428569,0x315f
  416838:	jmp    0x416882
  41683d:	mov    DWORD PTR ds:0x4284d5,0x96c
  416847:	cmp    DWORD PTR ds:0x428555,0x0
  41684e:	jbe    0x416866
  416854:	push   0x428147
  416859:	call   DWORD PTR ds:0x42e268
  41685f:	inc    ecx
  416860:	adc    ecx,DWORD PTR ds:0x428565
  416866:	and    DWORD PTR ds:0x4284c9,0x5e58
  416870:	mov    ecx,DWORD PTR ds:0x428429
  416876:	sub    ecx,DWORD PTR ds:0x428501
  41687c:	mov    DWORD PTR ds:0x428429,ecx
  416882:	mov    ecx,DWORD PTR ds:0x422928
  416888:	and    DWORD PTR ds:0x428375,0x41d
  416892:	push   0x0
  416894:	and    DWORD PTR ds:0x428565,0x4284d9
  41689e:	push   DWORD PTR [ecx]
  4168a0:	and    DWORD PTR ds:0x42845d,0x7a21
  4168aa:	call   eax
  4168ac:	mov    esi,0x1ff
  4168b1:	xor    DWORD PTR ds:0x428349,ebx
  4168b7:	mov    DWORD PTR [esp+0x24],0x3992
  4168bf:	mov    DWORD PTR [esp+0xc],0x79a2
  4168c7:	cmp    DWORD PTR ds:0x42841d,0x0
  4168ce:	mov    ecx,0x6401
  4168d3:	mov    DWORD PTR ds:0x428355,0x3a8d
  4168dd:	mov    DWORD PTR ds:0x42845d,0x1a46
  4168e7:	mov    DWORD PTR ds:0x42847d,edx
  4168ed:	jmp    0x416927
  4168f2:	movzx  eax,BYTE PTR ds:0x42841d
  4168f9:	movzx  eax,WORD PTR ds:0x428479
  416900:	cmp    DWORD PTR ds:0x42841d,0x0
  416907:	jge    0x41691f
  41690d:	push   DWORD PTR [ebp-0xc]
  416910:	push   0x3a70
  416915:	call   DWORD PTR ds:0x42e0e4
  41691b:	not    ecx
  41691d:	adc    ecx,ecx
  41691f:	xor    ecx,DWORD PTR ds:0x428579
  416925:	or     ecx,ecx
  416927:	mov    eax,DWORD PTR [esp+0xc]
  41692b:	mov    ecx,DWORD PTR [esp+0x24]
  41692f:	or     DWORD PTR ds:0x428335,0x42841d
  416939:	xor    eax,0x1d22
  41693e:	and    DWORD PTR ds:0x428365,0x1749
  416948:	imul   eax,eax,0xffffdeb4
  41694e:	or     DWORD PTR ds:0x42854d,0x428569
  416958:	and    eax,0x43eb
  41695d:	sub    eax,ecx
  41695f:	or     DWORD PTR ds:0x428411,ebx
  416965:	mov    DWORD PTR [esp+0x3c],eax
  416969:	dec    eax
  41696a:	mov    DWORD PTR [esp+0x38],0x3b18
  416972:	mov    DWORD PTR [esp+0x2c],0x6c93
  41697a:	or     eax,DWORD PTR ds:0x428475
  416980:	mov    DWORD PTR [esp+0x24],0x418e
  416988:	xor    ecx,ecx
  41698a:	mov    DWORD PTR [esp+0xc],0x5ac3
  416992:	mov    eax,DWORD PTR [esp+0xc]
  416996:	sub    ecx,DWORD PTR ds:0x42845d
  41699c:	mov    ecx,DWORD PTR [esp+0x24]
  4169a0:	sub    ecx,eax
  4169a2:	xor    eax,0x684c
  4169a7:	mov    eax,DWORD PTR [esp+0x2c]
  4169ab:	or     DWORD PTR ds:0x428561,0x4866
  4169b5:	and    ecx,eax
  4169b7:	or     DWORD PTR ds:0x42840d,0x3518
  4169c1:	mov    eax,DWORD PTR [esp+0x38]
  4169c5:	xor    ecx,0x10d6
  4169cb:	sub    ecx,0x782c
  4169d1:	add    DWORD PTR ds:0x428445,0x3d80
  4169db:	imul   ecx,eax
  4169de:	mov    eax,DWORD PTR [esp+0x3c]
  4169e2:	mov    DWORD PTR ds:0x42835d,0x7bdf
  4169ec:	cmp    eax,ecx
  4169ee:	mov    DWORD PTR ds:0x42832d,0x6991
  4169f8:	jne    0x41701a
  4169fe:	mov    DWORD PTR [esp+0x10],0x1
  416a06:	sbb    eax,DWORD PTR ds:0x428351
  416a0c:	mov    DWORD PTR [esp+0x30],0x2f16
  416a14:	mov    DWORD PTR [esp+0x48],0x16f
  416a1c:	jmp    0x416c79
  416a21:	and    DWORD PTR [esp+ebp*1+0x3bb6ac2e],eax
  416a28:	xchg   esp,eax
  416a29:	jmp    0x4169d2
  416a2b:	int    0x90
  416a2d:	mov    eax,ds:0xc9e6091
  416a32:	aam    0xc0
  416a34:	mov    esi,0xbebec235
  416a39:	xchg   DWORD PTR [ecx],ebp
  416a3b:	inc    ebx
  416a3c:	mov    DWORD PTR [esi+esi*2+0x4a167d8d],esi
  416a43:	iret   
  416a44:	dec    ebx
  416a45:	out    dx,al
  416a46:	out    0x15,eax
  416a48:	sub    eax,DWORD PTR [ebx]
  416a4a:	in     eax,0x34
  416a4c:	test   ch,al
  416a4e:	push   0x358965e0
  416a53:	aaa    
  416a54:	sbb    ebp,esp
  416a56:	out    0x64,al
  416a58:	jb     0x416ad5
  416a5a:	xchg   DWORD PTR [ecx],edx
  416a5c:	stc    
  416a5d:	mov    ebx,0x2841f175
  416a62:	jp     0x416ac4
  416a64:	pop    ss
  416a65:	shr    DWORD PTR [ecx],0x84
  416a68:	imul   ebx,DWORD PTR [edx+0x7d41dddd],0x726d2f44
  416a72:	cmp    al,0x5b
  416a74:	mov    ecx,0xd0e34ef2
  416a79:	out    0x67,eax
  416a7b:	mov    BYTE PTR [ebx+ebp*4-0x7e279b7b],bl
  416a82:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  416a84:	push   esp
  416a85:	mov    ds:0x55f474b5,al
  416a8a:	int    0x8b
  416a8c:	sar    BYTE PTR [edi+ebx*1+0x13af3aad],0xb1
  416a94:	fs sti 
  416a96:	sbb    DWORD PTR ds:0x73bd7e91,edx
  416a9c:	pop    esi
  416a9d:	stc    
  416a9e:	mov    eax,0x1454f82f
  416aa3:	sub    eax,0xc1fcd3d0
  416aa8:	xchg   ebx,eax
  416aa9:	aas    
  416aaa:	lods   al,BYTE PTR ds:[esi]
  416aab:	(bad)  
  416aac:	je     0x416b01
  416aae:	gs inc ecx
  416ab0:	mov    dl,0xe5
  416ab2:	cmp    DWORD PTR [ebx+esi*2-0x1b],edi
  416ab6:	repnz pop edx
  416ab8:	mov    edi,ds
  416aba:	jbe    0x416b29
  416abc:	into   
  416abd:	inc    ebp
  416abe:	out    0x10,al
  416ac0:	sbb    al,0xce
  416ac2:	adc    al,BYTE PTR ds:[edx+edi*4+0x33]
  416ac7:	mov    ecx,0x59a7493c
  416acc:	imul   eax,DWORD PTR [eax-0x36],0x3c79ea0a
  416ad3:	and    eax,0x4ddd7ab3
  416ad8:	lahf   
  416ad9:	cmp    cl,al
  416adb:	adc    BYTE PTR [edx+ebx*8],dl
  416ade:	jge    0x416b3c
  416ae0:	fld    TBYTE PTR [esi]
  416ae2:	stos   BYTE PTR es:[edi],al
  416ae3:	jbe    0x416b26
  416ae5:	inc    esi
  416ae6:	adc    ah,BYTE PTR [ebx]
  416ae8:	jmp    0x416ab8
  416aea:	(bad)  
  416aeb:	(bad)  
  416aec:	in     eax,dx
  416aed:	(bad)  
  416aee:	ds test al,0xab
  416af1:	xor    esp,DWORD PTR [eax+0x2b]
  416af4:	clc    
  416af5:	and    DWORD PTR [esp+ebx*4-0x1b],esp
  416af9:	(bad)  
  416afa:	cwde   
  416afb:	es sbb al,0x82
  416afe:	mov    ds:0xe62dd57e,al
  416b03:	loope  0x416b6e
  416b05:	mov    al,0x6
  416b07:	jle    0x416b60
  416b09:	fld    TBYTE PTR ds:0x5318b2c9
  416b0f:	mov    bh,BYTE PTR [eax]
  416b11:	(bad)  
  416b12:	fmul   st,st(1)
  416b14:	lods   al,BYTE PTR ds:[esi]
  416b15:	inc    edx
  416b16:	pop    edx
  416b17:	je     0x416ac0
  416b19:	push   eax
  416b1a:	xor    BYTE PTR [esi],ch
  416b1c:	jmp    0xb3dc4217
  416b21:	enter  0x97d5,0x0
  416b25:	fchs   
  416b27:	test   bh,0x9a
  416b2a:	gs data16 jge 0x416ac2
  416b2e:	imul   ebx,DWORD PTR ds:0x5d71469e,0x70
  416b35:	mov    ds,edx
  416b37:	cmp    esi,esp
  416b39:	pop    ebx
  416b3a:	fs aam 0xac
  416b3d:	and    al,0xb3
  416b3f:	js     0x416adc
  416b41:	mov    ah,0x24
  416b43:	dec    ecx
  416b44:	pop    es
  416b45:	push   ss
  416b46:	adc    esi,DWORD PTR [ebp+eiz*8+0x6c5364b]
  416b4d:	jns    0x416ba3
  416b4f:	inc    esi
  416b50:	add    al,BYTE PTR [ebx-0x5e]
  416b53:	lea    edi,[edi+edi*8+0x543c7b39]
  416b5a:	stos   DWORD PTR es:[edi],eax
  416b5b:	mov    ebx,0x3c7e6c7
  416b60:	loop   0x416b4f
  416b62:	mov    DWORD PTR [edx+0x6c0149d8],edi
  416b68:	loope  0x416bd3
  416b6a:	xor    bl,ch
  416b6c:	push   eax
  416b6d:	int3   
  416b6e:	mov    dl,0x8
  416b70:	iret   
  416b71:	dec    ebx
  416b72:	push   ebp
  416b73:	ins    DWORD PTR es:[edi],dx
  416b74:	mov    ds:0xf88b4981,eax
  416b79:	adc    al,0xab
  416b7b:	fidiv  DWORD PTR cs:[ecx]
  416b7e:	sahf   
  416b7f:	jns    0x416bd4
  416b81:	cmp    eax,0xd8abb6d8
  416b86:	adc    al,0xf9
  416b88:	push   es
  416b89:	mov    bh,0xe8
  416b8b:	ins    DWORD PTR es:[edi],dx
  416b8c:	cdq    
  416b8d:	adc    al,0x1c
  416b8f:	cli    
  416b90:	sub    DWORD PTR [edx+ebx*2+0x261f9316],eax
  416b97:	push   ebx
  416b98:	jbe    0x416b9b
  416b9a:	cmp    al,0xa2
  416b9c:	jns    0x416b61
  416b9e:	ja     0x416c16
  416ba0:	dec    al
  416ba2:	iret   
  416ba3:	push   esp
  416ba4:	sub    eax,DWORD PTR [edx*8+0x188fcd45]
  416bab:	repnz popa 
  416bad:	lea    esi,[eax-0x47]
  416bb0:	inc    ecx
  416bb1:	pop    ebx
  416bb2:	sub    BYTE PTR [esi-0x75],dl
  416bb5:	jns    0x416bce
  416bb7:	pop    eax
  416bb8:	sbb    bl,ah
  416bba:	inc    ecx
  416bbb:	pop    ecx
  416bbc:	add    DWORD PTR [ebx],esp
  416bbe:	(bad)
  416bc1:	add    ah,BYTE PTR [ecx+eiz*4+0x75]
  416bc5:	fst    QWORD PTR [ecx+ebp*1+0x5edd7d66]
  416bcc:	pop    esi
  416bcd:	mov    BYTE PTR [eax+0x6043f2c],cl
  416bd3:	adc    ch,ah
  416bd5:	or     si,WORD PTR [ecx]
  416bd8:	mov    cl,0x86
  416bda:	jmp    0x162b164
  416bdf:	and    al,0xfe
  416be1:	dec    eax
  416be2:	stc    
  416be3:	jbe    0x416bad
  416be5:	jp     0x416c30
  416be7:	dec    ebx
  416be8:	mov    esp,0xd7e37c4d
  416bed:	jmp    0x416b7e
  416bef:	not    BYTE PTR [ecx-0x4d90526e]
  416bf5:	je     0x416be0
  416bf7:	ficomp WORD PTR [esp+edx*8]
  416bfa:	inc    edi
  416bfb:	add    BYTE PTR [esi+0x40e7fb1],dh
  416c01:	xchg   esi,eax
  416c02:	pop    esp
  416c03:	lock cmp al,0x2b
  416c06:	ror    BYTE PTR [ecx],cl
  416c08:	xor    BYTE PTR [edx+0x4f093afe],dh
  416c0e:	xor    edx,eax
  416c10:	nop
  416c11:	test   eax,0x8590f149
  416c16:	lock or BYTE PTR [ecx],dl
  416c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c1a:	inc    edi
  416c1b:	inc    ecx
  416c1c:	cwde   
  416c1d:	rol    dh,cl
  416c1f:	push   esp
  416c20:	mov    al,ds:0x2c2ed6cd
  416c25:	xchg   ebp,eax
  416c26:	inc    ecx
  416c27:	or     eax,eax
  416c29:	jne    0x416c14
  416c2b:	ins    BYTE PTR es:[edi],dx
  416c2c:	(bad)  
  416c2d:	(bad)  
  416c2e:	fwait
  416c2f:	cmp    BYTE PTR [ebx+0x3c],0xd1
  416c33:	push   0xe55f6133
  416c38:	bound  ebx,QWORD PTR [esi+0x6d8f96e4]
  416c3e:	jnp    0x416c50
  416c40:	fist   WORD PTR [edi-0x605ad0ad]
  416c46:	cs jle 0x416be2
  416c49:	mov    edx,edi
  416c4b:	push   cs
  416c4c:	fdivrp st(0),st
  416c4e:	icebp  
  416c4f:	aam    0xf3
  416c51:	adc    BYTE PTR [ecx+0x33],0x15
  416c55:	inc    edi
  416c56:	add    BYTE PTR [eax],0x72
  416c59:	loopne 0x416c21
  416c5b:	xchg   esi,eax
  416c5c:	and    DWORD PTR [eax+0x2b],ecx
  416c5f:	inc    edi
  416c60:	mov    dl,0xb8
  416c62:	test   DWORD PTR [ebx-0x38],edi
  416c65:	iret   
  416c66:	xchg   DWORD PTR [ebp+0x38],edx
  416c69:	imul   edx,DWORD PTR [edx-0x69],0x45
  416c6d:	dec    esi
  416c6e:	in     eax,dx
  416c6f:	xchg   ecx,eax
  416c70:	(bad)  
  416c71:	push   0xb7c430a7
  416c76:	pop    es
  416c77:	in     al,0xf2
  416c79:	mov    DWORD PTR [esp+0x50],0x30c5
  416c81:	or     ecx,ecx
  416c83:	push   DWORD PTR ds:0xe5bfd6f1
  416c89:	not    eax
  416c8b:	mov    DWORD PTR [esp+0x8c],0x4ebc
  416c96:	mov    DWORD PTR [esp+0x98],0x76
  416ca1:	adc    ecx,DWORD PTR ds:0x428431
  416ca7:	mov    DWORD PTR [esp+0x40],0x556d
  416caf:	mov    DWORD PTR [esp+0x3c],0x63d5
  416cb7:	dec    eax
  416cb8:	mov    DWORD PTR [esp+0x30],0x169
  416cc0:	inc    ecx
  416cc1:	mov    DWORD PTR [esp+0x28],0x101b
  416cc9:	mov    DWORD PTR [esp+0x10],0x6bec
  416cd1:	mov    eax,DWORD PTR [esp+0x10]
  416cd5:	mov    ecx,DWORD PTR [esp+0x28]
  416cd9:	sbb    DWORD PTR ds:0x428439,0x35b0
  416ce3:	imul   eax,ecx
  416ce6:	sub    DWORD PTR ds:0x4284f1,edx
  416cec:	or     eax,0x7f7d
  416cf1:	xor    eax,0xcf336131
  416cf6:	mov    DWORD PTR ds:0x4284d5,0x5640
  416d00:	push   DWORD PTR [eax]
  416d02:	cmp    DWORD PTR ds:0x428359,0x0
  416d09:	mov    DWORD PTR ds:0x428341,edi
  416d0f:	mov    DWORD PTR ds:0x428445,0x594e
  416d19:	mov    ecx,0x35fb
  416d1e:	mov    DWORD PTR ds:0x4284fd,0x3932
  416d28:	jmp    0x416e08
  416d2d:	mov    DWORD PTR ds:0x428419,0xa9d
  416d37:	cmp    DWORD PTR ds:0x428359,0x0
  416d3e:	jg     0x416d5d
  416d44:	push   0x46ad
  416d49:	call   DWORD PTR ds:0x42e26c
  416d4f:	and    DWORD PTR ds:0x428561,0x42836d
  416d59:	adc    ecx,ecx
  416d5b:	xor    ecx,ecx
  416d5d:	and    ecx,0x3418
  416d63:	and    ecx,0x2934
  416d69:	or     ecx,ecx
  416d6b:	movzx  ecx,BYTE PTR ds:0x428365
  416d72:	adc    DWORD PTR ds:0x428439,ecx
  416d78:	cmp    DWORD PTR ds:0x428555,0x0
  416d7f:	mov    DWORD PTR ds:0x428579,edi
  416d85:	mov    DWORD PTR ds:0x428579,ebx
  416d8b:	mov    DWORD PTR ds:0x42840d,0x662b
  416d95:	mov    DWORD PTR ds:0x428561,0x653a
  416d9f:	jmp    0x416e08
  416da4:	mov    DWORD PTR ds:0x428355,ebx
  416daa:	cmp    DWORD PTR ds:0x428555,0x0
  416db1:	jg     0x416ded
  416db7:	push   0x2fcf
  416dbc:	push   0x4281db
  416dc1:	call   DWORD PTR ds:0x42e270
  416dc7:	mov    ecx,DWORD PTR ds:0x428531
  416dcd:	mov    ecx,DWORD PTR [ecx]
  416dcf:	adc    DWORD PTR ds:0x42856d,ecx
  416dd5:	sbb    ecx,0x197c
  416ddb:	mov    ecx,DWORD PTR ds:0x428551
  416de1:	and    DWORD PTR ds:0x428461,ecx
  416de7:	sub    ecx,0x1b1e
  416ded:	sub    ecx,DWORD PTR ds:0x428359
  416df3:	add    DWORD PTR ds:0x42833d,0x6bb0
  416dfd:	add    DWORD PTR ds:0x428369,edi
  416e03:	adc    eax,0x3de3
  416e08:	mov    eax,DWORD PTR [esp+0x34]
  416e0c:	add    eax,0x75d9
  416e11:	push   0xd
  416e13:	add    DWORD PTR ds:0x428481,ebx
  416e19:	pop    ecx
  416e1a:	xor    edx,edx
  416e1c:	div    ecx
  416e1e:	mov    ecx,DWORD PTR [esp+0x40]
  416e22:	xor    edx,edx
  416e24:	or     eax,ecx
  416e26:	sbb    DWORD PTR ds:0x428351,edi
  416e2c:	mov    ecx,DWORD PTR [esp+0x44]
  416e30:	inc    DWORD PTR ds:0x428431
  416e36:	or     eax,ecx
  416e38:	or     ecx,0x12fe
  416e3e:	mov    ecx,DWORD PTR [esp+0x9c]
  416e45:	div    ecx
  416e47:	xor    edx,edx
  416e49:	cmp    DWORD PTR ds:0x42854d,0x0
  416e50:	movzx  ecx,WORD PTR ds:0x428545
  416e57:	mov    ecx,DWORD PTR ds:0x428481
  416e5d:	jmp    0x416ec3
  416e62:	mov    DWORD PTR ds:0x428451,0x6ae9
  416e6c:	cmp    DWORD PTR ds:0x42854d,0x0
  416e73:	jg     0x416ea3
  416e79:	push   0x1
  416e7b:	call   DWORD PTR ds:0x42e0e8
  416e81:	xor    DWORD PTR ds:0x428411,edi
  416e87:	and    DWORD PTR ds:0x428371,0x7db2
  416e91:	mov    ecx,DWORD PTR ds:0x428441
  416e97:	or     DWORD PTR ds:0x428575,ecx
  416e9d:	add    DWORD PTR ds:0x4284e1,ebx
  416ea3:	or     DWORD PTR ds:0x4284d1,0xb88
  416ead:	adc    ecx,DWORD PTR ds:0x428365
  416eb3:	sub    DWORD PTR ds:0x4284c9,0x13f0
  416ebd:	sbb    DWORD PTR ds:0x428375,edx
  416ec3:	xor    eax,0x680da048
  416ec8:	cmp    DWORD PTR ds:0x42840d,0x0
  416ecf:	mov    DWORD PTR ds:0x428331,0x5921
  416ed9:	mov    DWORD PTR ds:0x4284e1,edi
  416edf:	jmp    0x416f57
  416ee4:	mov    ecx,0x423c
  416ee9:	cmp    DWORD PTR ds:0x42840d,0x0
  416ef0:	jne    0x416f33
  416ef6:	push   0x145c
  416efb:	push   0x428351
  416f00:	call   DWORD PTR ds:0x42e274
  416f06:	adc    DWORD PTR ds:0x4284d1,0x2a49
  416f10:	and    DWORD PTR ds:0x428561,0x95c
  416f1a:	movzx  ecx,BYTE PTR ds:0x42845d
  416f21:	adc    DWORD PTR ds:0x428475,ecx
  416f27:	mov    ecx,DWORD PTR ds:0x428545
  416f2d:	adc    DWORD PTR ds:0x428421,ecx
  416f33:	or     DWORD PTR ds:0x428361,0x75b4
  416f3d:	adc    DWORD PTR ds:0x4284c5,edx
  416f43:	or     DWORD PTR ds:0x4284fd,0x469c
  416f4d:	or     DWORD PTR ds:0x428459,0x5212
  416f57:	push   DWORD PTR [eax]
  416f59:	adc    DWORD PTR ds:0x428461,0x3264
  416f63:	mov    eax,DWORD PTR [esp+0x94]
  416f6a:	mov    ecx,DWORD PTR ds:0x428421
  416f70:	or     ecx,DWORD PTR ds:0x428501
  416f76:	mov    DWORD PTR ds:0x428421,ecx
  416f7c:	mov    ecx,DWORD PTR [esp+0x5c]
  416f80:	push   DWORD PTR ds:0x4facd31
  416f86:	sbb    DWORD PTR ds:0x428555,0x428551
  416f90:	add    eax,0xb4a
  416f95:	push   DWORD PTR ds:0x1e6ebff7
  416f9b:	imul   eax,ecx
  416f9e:	push   DWORD PTR [eax-0x3f17647c]
  416fa4:	add    DWORD PTR ds:0x428375,0x6df5
  416fae:	mov    eax,DWORD PTR [esp+0x60]
  416fb2:	mov    ecx,DWORD PTR [esp+0x48]
  416fb6:	sub    DWORD PTR ds:0x428405,0x428445
  416fc0:	xor    eax,ecx
  416fc2:	sub    DWORD PTR ds:0x428551,0x5fb7
  416fcc:	mov    ecx,DWORD PTR [esp+0x28]
  416fd0:	or     DWORD PTR ds:0x428349,0x42832d
  416fda:	div    ecx
  416fdc:	sbb    DWORD PTR ds:0x42832d,0x428365
  416fe6:	and    eax,0x100
  416feb:	xor    DWORD PTR ds:0x428459,0x79f1
  416ff5:	or     eax,0x290
  416ffa:	add    DWORD PTR ds:0x42836d,0x42832d
  417004:	push   DWORD PTR [eax-0x494a7887]
  41700a:	xor    DWORD PTR ds:0x428425,0x4284f5
  417014:	call   DWORD PTR ds:0x42e124
  41701a:	or     DWORD PTR ds:0x4284d1,0x74bf
  417024:	dec    esi
  417025:	mov    DWORD PTR ds:0x428451,0x5180
  41702f:	jne    0x4168b1
  417035:	mov    DWORD PTR [esp+0x18],0xcb79b576
  41703d:	cmp    DWORD PTR ds:0x4284d5,0x0
  417044:	not    DWORD PTR ds:0x428419
  41704a:	mov    DWORD PTR ds:0x4284dd,0x4717
  417054:	jmp    0x4170cc
  417059:	movzx  esi,BYTE PTR ds:0x42835d
  417060:	cmp    DWORD PTR ds:0x4284d5,0x0
  417067:	jae    0x41709b
  41706d:	push   0x4281b5
  417072:	push   0x6423
  417077:	push   DWORD PTR [ebp-0xc]
  41707a:	push   DWORD PTR [ebp-0x1c]
  41707d:	push   DWORD PTR [ebp-0x28]
  417080:	push   0x1c3a
  417085:	call   DWORD PTR ds:0x42e278
  41708b:	or     DWORD PTR ds:0x428339,edi
  417091:	xor    DWORD PTR ds:0x428459,0x58f
  41709b:	sbb    DWORD PTR ds:0x42846d,ecx
  4170a1:	sub    DWORD PTR ds:0x428561,0x607b
  4170ab:	mov    esi,DWORD PTR ds:0x4283dd
  4170b1:	mov    esi,DWORD PTR [esi]
  4170b3:	or     DWORD PTR ds:0x428581,esi
  4170b9:	movzx  esi,BYTE PTR ds:0x428461
  4170c0:	add    esi,DWORD PTR ds:0x428501
  4170c6:	mov    DWORD PTR ds:0x428461,esi
  4170cc:	mov    esi,0x9c2b8ae8
  4170d1:	sub    DWORD PTR ds:0x42836d,0x428441
  4170db:	mov    DWORD PTR [esp+0x1c],esi
  4170df:	mov    DWORD PTR [esp+0x70],0xcb79b572
  4170e7:	mov    DWORD PTR [esp+0x74],esi
  4170eb:	call   0x408bfd
  4170f0:	sbb    edi,edx
  4170f2:	jmp    0x41734f
  4170f7:	add    edi,DWORD PTR [esi]
  4170f9:	popf   
  4170fa:	jmp    0x4170a0
  4170fc:	sub    al,0x8c
  4170fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170ff:	scas   eax,DWORD PTR es:[di]
  417101:	xchg   esi,eax
  417102:	jecxz  0x41715e
  417104:	and    eax,0xd8849276
  417109:	sar    BYTE PTR [esi-0x41413dcb],0xe7
  417110:	push   ebp
  417111:	test   eax,0x806449da
  417116:	xor    eax,DWORD PTR [edi]
  417118:	neg    DWORD PTR [ecx]
  41711a:	add    ch,BYTE PTR [eax]
  41711c:	cmp    eax,ecx
  41711e:	xchg   edx,eax
  41711f:	jae    0x4171a0
  417121:	test   BYTE PTR [eax],ch
  417123:	stc    
  417124:	xchg   ebx,eax
  417125:	aas    
  417126:	mov    bh,0xe5
  417128:	cld    
  417129:	mov    edx,0xf7e0ab86
  41712e:	test   BYTE PTR [edi+0x54a4d13],cl
  417134:	inc    ebx
  417135:	xchg   ebp,eax
  417136:	scas   al,BYTE PTR es:[edi]
  417137:	and    al,0xd6
  417139:	stos   DWORD PTR es:[edi],eax
  41713a:	imul   edx,DWORD PTR [ecx+0x2c],0x27
  41713e:	push   0xffffffc3
  417140:	popf   
  417141:	loop   0x4170cb
  417143:	push   edi
  417144:	jmp    0x4170e2
  417146:	sbb    al,0x6f
  417148:	xor    edx,esp
  41714a:	mov    ecx,0x931e88f
  41714f:	call   0xeffb:0xccdc7ee4
  417156:	imul   edx,esp,0xffffff8e
  417159:	dec    edx
  41715a:	sbb    eax,0x8aaeb098
  41715f:	es push ds
  417161:	xor    BYTE PTR [eax-0x70cbbba9],al
  417167:	pop    edx
  417168:	out    dx,al
  417169:	xor    al,0xb4
  41716b:	in     al,0xd0
  41716d:	popa   
  41716e:	mov    eax,ds:0x2624ad5e
  417173:	lock shl BYTE PTR [ecx],0x7c
  417177:	cs (bad) 
  417179:	out    dx,al
  41717a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41717b:	sbb    DWORD PTR [edx],ebx
  41717d:	pop    es
  41717e:	loop   0x417155
  417180:	jl     0x4171ad
  417182:	(bad)  
  417183:	jmp    0x4171f3
  417185:	jmp    0x3586:0x47721fc8
  41718c:	in     al,dx
  41718d:	data16 loop 0x417184
  417190:	dec    esp
  417191:	lods   al,BYTE PTR ds:[esi]
  417192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417193:	aam    0x9d
  417195:	es cmp ah,dh
  417198:	xchg   DWORD PTR [ebp-0x199ff1b1],edx
  41719e:	das    
  41719f:	cmp    edx,esp
  4171a1:	xlat   BYTE PTR ds:[ebx]
  4171a2:	jmp    FWORD PTR [ebx+0x6c]
  4171a5:	mov    DWORD PTR [ebp+0x5c2a1469],edx
  4171ab:	and    BYTE PTR es:[edx],ah
  4171ae:	or     al,0x6e
  4171b0:	rcr    BYTE PTR [ebx],1
  4171b2:	mov    BYTE PTR [edi+esi*1+0x5f8aa09b],dl
  4171b9:	(bad)
  4171bd:	add    al,0x4
  4171bf:	mov    ch,0xec
  4171c1:	push   esp
  4171c2:	push   edx
  4171c3:	not    dh
  4171c5:	mov    edx,0xcd3daeda
  4171ca:	test   DWORD PTR [eax-0x6f84ad66],eax
  4171d0:	scas   al,BYTE PTR es:[edi]
  4171d1:	addr16 iret 
  4171d3:	leave  
  4171d4:	and    DWORD PTR [esi],0x5b04611c
  4171da:	aad    0x6b
  4171dc:	vpcmpgtw ymm4,ymm5,YMMWORD PTR [edx]
  4171e0:	jecxz  0x417215
  4171e2:	popa   
  4171e3:	stc    
  4171e4:	sub    eax,0x60709308
  4171e9:	mov    DWORD PTR [ebp+0x2728c315],esi
  4171ef:	jmp    0x4171a7
  4171f1:	js     0x417218
  4171f3:	(bad)  
  4171f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171f5:	add    DWORD PTR [ebx+ecx*1],0x3258d2bd
  4171fc:	cmc    
  4171fd:	hlt    
  4171fe:	and    bh,ch
  417200:	icebp  
  417201:	push   ds
  417202:	mov    WORD PTR [edi],0xe717
  417207:	call   0xde288466
  41720c:	inc    ecx
  41720d:	enter  0x7236,0xab
  417211:	sub    al,0x42
  417213:	lds    ecx,FWORD PTR [edx]
  417215:	addr16 in eax,0x5b
  417218:	shl    DWORD PTR [ecx-0x5c],1
  41721b:	mov    bh,0x43
  41721d:	clc    
  41721e:	jecxz  0x41721b
  417220:	sbb    BYTE PTR [ebx-0x31be9194],bh
  417226:	cs mov ecx,0x65ce5a6c
  41722c:	cmc    
  41722d:	mov    eax,ds:0x58a6960b
  417232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417233:	add    al,0x12
  417235:	std    
  417236:	and    al,0x5e
  417239:	aam    0xc2
  41723b:	xor    cl,al
  41723d:	and    bl,BYTE PTR [ecx+0x3f]
  417240:	pop    eax
  417241:	mov    edi,0x2f4346b7
  417246:	out    0xfb,eax
  417248:	mov    ds:0x9ac73d9f,eax
  41724d:	or     DWORD PTR [eax],0xb869e7a5
  417253:	(bad)  [ebp+ecx*1-0x4a18cfee]
  41725a:	mov    dh,0x2d
  41725c:	push   ebp
  41725d:	pop    ebx
  41725e:	pop    edx
  41725f:	jmp    0x41726f
  417261:	add    al,0x84
  417263:	and    al,0x92
  417265:	sbb    esp,ebx
  417267:	jne    0x41723c
  417269:	ins    DWORD PTR es:[edi],dx
  41726a:	add    al,0x82
  41726c:	xlat   BYTE PTR ds:[ebx]
  41726d:	cmp    ch,BYTE PTR [edi+0x37eb3078]
  417273:	adc    edi,DWORD PTR [edi-0xd]
  417276:	mov    esp,0xb8f7efb2
  41727b:	ja     0x41723f
  41727d:	xchg   edx,eax
  41727e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41727f:	xlat   BYTE PTR ds:[ebx]
  417280:	ss jp  0x417240
  417283:	mov    BYTE PTR [edi+0x1d],dl
  417286:	adc    BYTE PTR [esi+0x59],bh
  417289:	mov    al,0xb4
  41728b:	push   es
  41728c:	mov    bl,0x4f
  41728e:	cmp    ebx,DWORD PTR [esi-0x3edc0d09]
  417294:	outs   dx,DWORD PTR ds:[esi]
  417295:	lods   al,BYTE PTR ds:[esi]
  417296:	push   esp
  417297:	inc    edx
  417298:	out    dx,al
  417299:	retf   0x8d99
  41729c:	mov    BYTE PTR cs:[ebp+0x2e],cl
  4172a0:	mov    ds:0x6ceb9896,eax
  4172a5:	pop    eax
  4172a6:	inc    ebp
  4172a7:	or     dl,BYTE PTR [eax+eiz*2-0x6a]
  4172ab:	bnd jp 0x4172e8
  4172ae:	cmp    BYTE PTR [ecx],0xfc
  4172b1:	in     al,dx
  4172b2:	js     0x4172dd
  4172b4:	daa    
  4172b5:	pop    ds
  4172b6:	loope  0x4172d7
  4172b8:	push   ecx
  4172b9:	pop    ebx
  4172ba:	shr    BYTE PTR [ebx+0x67],cl
  4172bd:	cmp    DWORD PTR [ebx+0xb],ebx
  4172c0:	sti    
  4172c1:	cs sub eax,0x5a42a0
  4172c7:	mov    dh,0x39
  4172c9:	out    dx,eax
  4172ca:	xor    al,al
  4172cc:	and    BYTE PTR [esp+ebp*2-0x799d315b],cl
  4172d3:	jp     0x417313
  4172d5:	cli    
  4172d6:	pop    ebp
  4172d7:	push   0x3b51073a
  4172dc:	cdq    
  4172dd:	sar    DWORD PTR [esi-0x44],cl
  4172e0:	lods   eax,DWORD PTR ds:[esi]
  4172e1:	adc    BYTE PTR [ebp+eax*4-0x2391fd1],cl
  4172e8:	hlt    
  4172e9:	enter  0xa7ad,0xb
  4172ed:	loop   0x4172db
  4172ef:	mov    esp,es
  4172f1:	lahf   
  4172f2:	icebp  
  4172f3:	xchg   ebx,eax
  4172f4:	mov    ah,0x2f
  4172f6:	inc    esi
  4172f7:	sbb    DWORD PTR [edi-0x2c306c85],ebp
  4172fd:	jle    0x41733c
  4172ff:	xor    al,0x45
  417301:	iret   
  417302:	stc    
  417303:	cmp    al,0x38
  417305:	ret    0x6a52
  417308:	push   0xffffffbf
  41730a:	mov    eax,ds:0x382dbf6b
  41730f:	(bad)  
  417310:	cmp    al,0x3
  417312:	fld    TBYTE PTR [edi+ebx*4]
  417315:	push   ebp
  417316:	call   0xd8b5:0xab74558a
  41731d:	(bad)  
  41731e:	and    DWORD PTR [ebp+0xa879494],esi
  417324:	or     BYTE PTR [esi+esi*2],0x52
  417328:	or     DWORD PTR es:[eax+eiz*2+0x7e879bcf],esp
  417330:	clc    
  417331:	mov    ds:0xfc5a69c0,eax
  417336:	push   esp
  417337:	jg     0x41730f
  417339:	rcr    BYTE PTR [eax-0x13f0556c],0xfc
  417340:	dec    ebx
  417341:	lock jp 0x4173ae
  417344:	test   edi,0xc089cfd7
  41734a:	push   eax
  41734b:	xchg   ebx,eax
  41734c:	ret    
  41734d:	(bad)  
  41734e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41734f:	lea    eax,[esp+0x44]
  417353:	mov    DWORD PTR [esp+0xc],eax
  417357:	cmp    DWORD PTR ds:0x42832d,0x0
  41735e:	mov    DWORD PTR ds:0x428471,edi
  417364:	mov    ecx,0x653d
  417369:	jmp    0x417446
  41736e:	mov    DWORD PTR ds:0x428415,0x6fab
  417378:	mov    DWORD PTR ds:0x428409,0x3325
  417382:	cmp    DWORD PTR ds:0x42832d,0x0
  417389:	jl     0x4173a7
  41738f:	push   DWORD PTR [ebp-0x20]
  417392:	push   DWORD PTR [ebp-0xc]
  417395:	call   DWORD PTR ds:0x42e0ec
  41739b:	xor    edi,0x628b
  4173a1:	or     edi,0x2ad9
  4173a7:	and    DWORD PTR ds:0x42855d,edx
  4173ad:	and    ecx,DWORD PTR ds:0x428579
  4173b3:	xor    edi,edi
  4173b5:	add    edi,DWORD PTR ds:0x4284ad
  4173bb:	mov    edx,DWORD PTR ds:0x4285a5
  4173c1:	sub    edi,edx
  4173c3:	or     edi,DWORD PTR [edi+edx*1]
  4173c6:	inc    edx
  4173c7:	cmp    DWORD PTR ds:0x428355,0x0
  4173ce:	mov    DWORD PTR ds:0x428479,0x322b
  4173d8:	mov    DWORD PTR ds:0x428375,0x622c
  4173e2:	mov    edx,DWORD PTR ds:0x428345
  4173e8:	mov    DWORD PTR ds:0x4284cd,0x673b
  4173f2:	jmp    0x417446
  4173f7:	mov    DWORD PTR ds:0x42834d,edx
  4173fd:	cmp    DWORD PTR ds:0x428355,0x0
  417404:	jl     0x41742c
  41740a:	push   DWORD PTR [ebp-0x24]
  41740d:	push   0x428243
  417412:	call   DWORD PTR ds:0x42e27c
  417418:	sbb    DWORD PTR ds:0x428351,0x4806
  417422:	add    DWORD PTR ds:0x4284e1,0x48d6
  41742c:	add    edi,0x263
  417432:	xor    DWORD PTR ds:0x428359,0x2f2b
  41743c:	add    DWORD PTR ds:0x428581,0x7768
  417446:	lea    eax,[esp+0x60]
  41744a:	xor    ecx,ecx
  41744c:	or     ecx,DWORD PTR ds:0x42833d
  417452:	xor    DWORD PTR ds:0x428359,ecx
  417458:	mov    DWORD PTR [esp+0x10],eax
  41745c:	sub    edi,DWORD PTR ds:0x4284fd
  417462:	mov    eax,ds:0x422708
  417467:	sbb    DWORD PTR ds:0x428479,edx
  41746d:	mov    eax,DWORD PTR [eax+0x1d8]
  417473:	cmp    DWORD PTR ds:0x42847d,0x0
  41747a:	mov    edi,0x142d
  41747f:	mov    DWORD PTR ds:0x42836d,edi
  417485:	jmp    0x4174dd
  41748a:	not    ecx
  41748c:	cmp    DWORD PTR ds:0x42847d,0x0
  417493:	jg     0x4174bb
  417499:	push   DWORD PTR [ebp-0x1c]
  41749c:	push   0x483b
  4174a1:	call   DWORD PTR ds:0x42e0f0
  4174a7:	and    DWORD PTR ds:0x4284ed,0x19ab
  4174b1:	xor    DWORD PTR ds:0x428341,0x742c
  4174bb:	add    edx,DWORD PTR ds:0x428559
  4174c1:	sub    DWORD PTR ds:0x428469,0x7d91
  4174cb:	mov    edx,DWORD PTR ds:0x42841d
  4174d1:	or     DWORD PTR ds:0x4284e5,edx
  4174d7:	adc    DWORD PTR ds:0x4284f1,ecx
  4174dd:	mov    eax,DWORD PTR [eax]
  4174df:	mov    edi,DWORD PTR ds:0x428515
  4174e5:	mov    ecx,DWORD PTR ds:0x428591
  4174eb:	sub    ecx,edi
  4174ed:	or     edi,DWORD PTR [edi+ecx*1]
  4174f0:	mov    ecx,eax
  4174f2:	xor    ecx,0xa5069baf
  4174f8:	xor    edx,edx
  4174fa:	or     edx,DWORD PTR ds:0x428449
  417500:	sub    edx,DWORD PTR ds:0x42846d
  417506:	mov    DWORD PTR ds:0x428449,edx
  41750c:	xor    eax,0xfffffffe
  41750f:	shl    eax,0x1e
  417512:	and    DWORD PTR ds:0x428339,edi
  417518:	shr    ecx,0x2
  41751b:	or     ecx,eax
  41751d:	mov    eax,DWORD PTR [esp+0x10]
  417521:	inc    edx
  417522:	mov    DWORD PTR [eax],ecx
  417524:	xor    edx,edi
  417526:	mov    edi,0xcb79b566
  41752b:	mov    DWORD PTR [esp+0x80],edi
  417532:	mov    DWORD PTR [esp+0x84],esi
  417539:	cmp    DWORD PTR ds:0x428415,0x0
  417540:	movzx  ecx,WORD PTR ds:0x428345
  417547:	movzx  ecx,BYTE PTR ds:0x428439
  41754e:	jmp    0x4175bc
  417553:	not    edx
  417555:	cmp    DWORD PTR ds:0x428415,0x0
  41755c:	jb     0x4175ae
  417562:	push   DWORD PTR [ebp-0x20]
  417565:	push   0x1e74
  41756a:	push   0x10b8
  41756f:	push   0x6d55
  417574:	push   DWORD PTR [ebp-0x18]
  417577:	push   DWORD PTR [ebp-0x1c]
  41757a:	call   DWORD PTR ds:0x42e0f4
  417580:	movzx  edx,BYTE PTR ds:0x428581
  417587:	add    edx,DWORD PTR ds:0x4284e9
  41758d:	mov    DWORD PTR ds:0x428581,edx
  417593:	xor    ecx,ecx
  417595:	xor    ecx,DWORD PTR ds:0x4283b9
  41759b:	xor    edx,edx
  41759d:	xor    edx,DWORD PTR ds:0x428531
  4175a3:	sub    ecx,edx
  4175a5:	sub    ecx,DWORD PTR [ecx+edx*1]
  4175a8:	add    DWORD PTR ds:0x42836d,edx
  4175ae:	xor    DWORD PTR ds:0x428569,ebx
  4175b4:	sbb    DWORD PTR ds:0x428405,edx
  4175ba:	adc    edx,ecx
  4175bc:	mov    eax,DWORD PTR [esp+0x80]
  4175c3:	or     edx,edx
  4175c5:	mov    ecx,DWORD PTR [esp+0x84]
  4175cc:	cmp    DWORD PTR ds:0x428479,0x0
  4175d3:	mov    edx,DWORD PTR ds:0x42847d
  4175d9:	mov    DWORD PTR ds:0x428349,0x64c4
  4175e3:	mov    edx,DWORD PTR ds:0x42840d
  4175e9:	jmp    0x417644
  4175ee:	mov    DWORD PTR ds:0x428431,0x1a08
  4175f8:	cmp    DWORD PTR ds:0x428479,0x0
  4175ff:	ja     0x417624
  417605:	push   DWORD PTR [ebp-0x1c]
  417608:	call   DWORD PTR ds:0x42e280
  41760e:	sbb    edx,DWORD PTR ds:0x428351
  417614:	adc    DWORD PTR ds:0x42841d,0x1011
  41761e:	sbb    DWORD PTR ds:0x4284d5,ebx
  417624:	xor    edx,edx
  417626:	or     edx,DWORD PTR ds:0x428405
  41762c:	xor    DWORD PTR ds:0x42854d,edx
  417632:	add    DWORD PTR ds:0x42840d,ebx
  417638:	add    edx,0x156e
  41763e:	sub    edx,0x437f
  417644:	shrd   eax,ecx,0x2
  417648:	cmp    DWORD PTR ds:0x428501,0x0
  41764f:	mov    edx,0x364f
  417654:	mov    DWORD PTR ds:0x4284f5,0x205c
  41765e:	mov    edx,0xb6f
  417663:	jmp    0x4176bb
  417668:	mov    edx,DWORD PTR ds:0x428545
  41766e:	mov    DWORD PTR ds:0x428371,edi
  417674:	cmp    DWORD PTR ds:0x428501,0x0
  41767b:	jae    0x4176a7
  417681:	push   DWORD PTR [ebp-0x18]
  417684:	call   DWORD PTR ds:0x42e0f8
  41768a:	sub    DWORD PTR ds:0x428449,0x4a16
  417694:	mov    edx,DWORD PTR ds:0x428581
  41769a:	or     DWORD PTR ds:0x428565,edx
  4176a0:	sub    DWORD PTR ds:0x42854d,ecx
  4176a6:	dec    edx
  4176a7:	dec    edx
  4176a8:	not    DWORD PTR ds:0x428331
  4176ae:	movzx  edx,WORD PTR ds:0x428545
  4176b5:	sub    DWORD PTR ds:0x4284fd,edx
  4176bb:	shr    ecx,0x2
  4176be:	mov    ecx,DWORD PTR [esp+0x80]
  4176c5:	mov    edx,DWORD PTR [esp+0x84]
  4176cc:	add    DWORD PTR ds:0x428335,0x428361
  4176d6:	xor    eax,0x32de6d5d
  4176db:	adc    DWORD PTR ds:0x428365,0x4c3b
  4176e5:	xor    edx,edx
  4176e7:	or     DWORD PTR ds:0x4284dd,0x428351
  4176f1:	or     edx,eax
  4176f3:	mov    eax,ds:0x428465
  4176f8:	adc    DWORD PTR ds:0x428571,eax
  4176fe:	mov    eax,ds:0x422708
  417703:	or     DWORD PTR ds:0x42840d,0x428441
  41770d:	push   edx
  41770e:	or     DWORD PTR ds:0x428425,0x3421
  417718:	push   DWORD PTR [eax+0x19c]
  41771e:	lea    eax,[esp+0x80]
  417725:	push   eax
  417726:	sbb    DWORD PTR ds:0x428351,0x428465
  417730:	shl    ecx,0x1e
  417733:	call   0x411c08
  417738:	or     DWORD PTR ds:0x42840d,0x889
  417742:	lea    eax,[ebp+0x10]
  417745:	add    DWORD PTR ds:0x428435,0x428371
  41774f:	push   eax
  417750:	or     DWORD PTR ds:0x428411,0x378
  41775a:	mov    DWORD PTR [esp+0x14],edi
  41775e:	mov    DWORD PTR [esp+0x18],esi
  417762:	add    DWORD PTR ds:0x42856d,0x1c44
  41776c:	lea    eax,[ebp+0xc]
  41776f:	sbb    DWORD PTR ds:0x428565,0x6a60
  417779:	push   eax
  41777a:	adc    DWORD PTR ds:0x428481,0x65f7
  417784:	mov    DWORD PTR [esp+0x18],edi
  417788:	lea    eax,[ebp+0x8]
  41778b:	mov    DWORD PTR [esp+0x1c],esi
  41778f:	sub    DWORD PTR ds:0x428479,0x37c8
  417799:	jmp    0x4179f6
  41779e:	cmp    edx,eax
  4177a0:	retf   
  4177a1:	mov    esp,0x44b9bc3c
  4177a6:	out    0x8d,eax
  4177a8:	push   es
  4177a9:	xchg   edx,eax
  4177aa:	mov    eax,ds:0xfb9e64c4
  4177af:	faddp  st(0),st
  4177b1:	mov    esi,0xbebec235
  4177b6:	xchg   ecx,esp
  4177b8:	push   ecx
  4177b9:	mov    DWORD PTR ds:0x7bd41994,ebp
  4177bf:	imul   ebp,DWORD PTR [edi-0x6759ab00],0xffffffda
  4177c6:	add    DWORD PTR [ebp-0x2],esp
  4177c9:	loope  0x417765
  4177cb:	outs   dx,BYTE PTR ds:[esi]
  4177cc:	add    esi,DWORD PTR [esi+0xc408061]
  4177d2:	cmp    edx,ebx
  4177d4:	cmovbe edi,DWORD PTR [ecx-0x5c]
  4177d8:	jo     0x4177ac
  4177da:	push   0xffffffbc
  4177dc:	ss rcr al,1
  4177df:	sub    DWORD PTR [ecx-0x1954f2a7],edi
  4177e5:	in     eax,0x9f
  4177e7:	push   ds
  4177e8:	xor    dl,BYTE PTR [edx-0x636fec12]
  4177ee:	sti    
  4177ef:	ins    BYTE PTR es:[edi],dx
  4177f0:	mov    edx,0x981c8632
  4177f5:	fisub  DWORD PTR [edi]
  4177f7:	stos   BYTE PTR es:[edi],al
  4177f8:	xchg   ebp,eax
  4177f9:	int    0x2d
  4177fb:	cwde   
  4177fc:	aaa    
  4177fd:	int    0xa2
  4177ff:	mov    esp,0x513d7d7e
  417804:	ja     0x4177ca
  417806:	jmp    0x6892:0x907fa513
  41780d:	sbb    al,0xb4
  41780f:	outs   dx,BYTE PTR ds:[esi]
  417810:	test   DWORD PTR [esi+0x30],eax
  417813:	adc    ch,BYTE PTR [eax-0x37f424ea]
  417819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41781a:	inc    eax
  41781b:	mov    eax,0xd57b328c
  417820:	fstp   TBYTE PTR [ecx]
  417822:	int3   
  417823:	cmc    
  417824:	mov    al,bl
  417826:	inc    ecx
  417827:	hlt    
  417828:	mov    bl,0x8c
  41782a:	stc    
  41782b:	inc    eax
  41782c:	mov    al,0x4e
  41782e:	fdivr  DWORD PTR [eax]
  417830:	fiadd  WORD PTR [ebx+0x4ed457a6]
  417836:	jmp    0x41787d
  417838:	xlat   BYTE PTR ds:[ebx]
  417839:	fdivr  st,st(5)
  41783b:	(bad)  
  41783d:	xchg   ebp,ecx
  41783f:	scas   eax,DWORD PTR es:[edi]
  417840:	(bad)  
  417841:	in     eax,0x32
  417843:	bound  edi,QWORD PTR [esi]
  417845:	mov    esi,0xe2fa4beb
  41784a:	sahf   
  41784b:	sub    DWORD PTR ds:0xd24ff53e,eax
  417851:	not    BYTE PTR [eax+0x33]
  417854:	jecxz  0x41784d
  417856:	jns    0x4178c3
  417858:	ss add al,0xc8
  41785b:	mov    ebx,edx
  41785d:	xchg   DWORD PTR [edi-0x2270b9c8],ebp
  417863:	pop    ecx
  417864:	test   eax,0x1e779fb2
  417869:	mov    esi,0x16392a3f
  41786e:	push   edx
  41786f:	add    bl,cl
  417871:	push   ss
  417872:	in     eax,0x1d
  417874:	imul   esp,DWORD PTR [ebx-0x14],0xce471a92
  41787b:	jmp    0xa25a:0x430065f1
  417882:	jmp    0x536066a
  417887:	xor    eax,0xbf938a79
  41788c:	fcmovnb st,st(3)
  41788e:	fnclex 
  417890:	scas   eax,DWORD PTR es:[edi]
  417891:	aad    0x55
  417893:	enter  0xadec,0xed
  417897:	mov    edi,0x94468154
  41789c:	mov    eax,0xa21456a9
  4178a1:	sbb    ebx,ebp
  4178a3:	lods   eax,DWORD PTR ds:[esi]
  4178a4:	dec    edi
  4178a5:	add    edx,DWORD PTR [eax-0x22]
  4178a8:	xchg   esi,eax
  4178a9:	out    dx,al
  4178aa:	cmp    DWORD PTR [ecx+0x46],0xf23e3a92
  4178b1:	cmp    bl,0x7
  4178b4:	aam    0x93
  4178b6:	xor    eax,0xd5cd4fa3
  4178bb:	in     eax,dx
  4178bc:	retf   
  4178bd:	push   0x2a
  4178bf:	cmp    al,ch
  4178c1:	xlat   BYTE PTR ds:[ebx]
  4178c2:	mov    WORD PTR [edi],?
  4178c4:	add    BYTE PTR [edx+eiz*2+0x54e7aae8],0x79
  4178cc:	jl     0x417945
  4178ce:	arpl   WORD PTR [edx],si
  4178d0:	mov    esi,DWORD PTR [ebx]
  4178d2:	shl    DWORD PTR [esi-0x1b75fc6e],0x25
  4178d9:	stos   DWORD PTR es:[edi],eax
  4178da:	pop    ss
  4178db:	xor    al,0x62
  4178dd:	dec    ecx
  4178de:	mov    dl,0x50
  4178e0:	dec    esi
  4178e1:	test   ch,0xcc
  4178e4:	sbb    DWORD PTR ss:[ebp+0x70dd3c53],esi
  4178eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178ec:	fwait
  4178ed:	mov    ds:0xcdf662c7,eax
  4178f2:	pop    edi
  4178f3:	les    ebp,FWORD PTR [ebp-0x2e]
  4178f6:	or     edx,DWORD PTR [edi+0x2e611aee]
  4178fc:	lea    eax,[ecx+0x3295e965]
  417902:	mov    eax,ds:0x7be1fccd
  417907:	nop
  417908:	(bad)  
  417909:	cmp    DWORD PTR [esi],esi
  41790b:	cs push es
  41790d:	das    
  41790e:	xor    eax,0x42cd4f60
  417913:	xchg   ecx,eax
  417914:	mov    ecx,0x195e04e8
  417919:	mov    edx,0xc9346f2e
  41791e:	mov    DWORD PTR [ebx],esp
  417920:	outs   dx,BYTE PTR ds:[esi]
  417921:	jnp    0x417974
  417923:	sbb    dl,BYTE PTR [esi+0x7f0179d4]
  417929:	(bad)  [ebp+0x44bb9d82]
  41792f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417930:	jle    0x417988
  417932:	jbe    0x417993
  417934:	mov    bl,0xdc
  417936:	push   ss
  417937:	pop    edx
  417938:	push   ds
  417939:	xchg   ebp,eax
  41793a:	outs   dx,BYTE PTR ds:[esi]
  41793b:	xchg   DWORD PTR [ebx],esi
  41793d:	loop   0x4179be
  41793f:	sub    DWORD PTR [esi-0x6f07817f],ebp
  417945:	int3   
  417946:	loopne 0x4178e6
  417948:	and    al,0x63
  41794a:	add    al,0xdc
  41794c:	push   cs
  41794d:	repz jo 0x41797e
  417950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417951:	(bad)  
  417952:	fld    QWORD PTR [esp+eax*1]
  417955:	imul   ebx,DWORD PTR [edi+0x16],0xffffff99
  417959:	cld    
  41795a:	add    eax,0x217fc5ae
  41795f:	sub    al,0xaf
  417961:	mov    al,0xd8
  417963:	out    0xc6,eax
  417965:	jno    0x417928
  417967:	xchg   BYTE PTR [eax-0x29598ba8],ch
  41796d:	(bad)  
  41796e:	mov    esi,0x32d638ef
  417973:	ja     0x4179b5
  417975:	xor    al,0x21
  417977:	push   ds
  417978:	mov    al,0x49
  41797a:	cld    
  41797b:	push   edi
  41797c:	ret    
  41797d:	int3   
  41797e:	repz adc ecx,DWORD PTR ds:0xec421925
  417985:	adc    eax,0x662657cd
  41798a:	out    0x34,eax
  41798c:	daa    
  41798d:	fst    QWORD PTR [edi]
  41798f:	ds pop ds
  417991:	repnz repnz shl DWORD PTR [esi+0x71],cl
  417996:	adc    BYTE PTR [esp+esi*2-0x3739e9c2],ah
  41799d:	outs   dx,DWORD PTR ds:[esi]
  41799e:	(bad)  
  4179a0:	sub    dl,BYTE PTR [ebp-0x4f5c09d2]
  4179a6:	cmp    eax,0x80c8ebef
  4179ab:	fwait
  4179ac:	xor    ch,BYTE PTR [esi-0x78]
  4179af:	xchg   ebp,eax
  4179b0:	stos   BYTE PTR es:[edi],al
  4179b1:	mov    esp,0xfb77e1b1
  4179b6:	addr16 push cs
  4179b8:	jle    0x4179eb
  4179ba:	out    dx,eax
  4179bb:	gs mov bh,0x52
  4179be:	lock (bad) 
  4179c0:	iret   
  4179c1:	mov    edi,0x36ce89df
  4179c6:	clc    
  4179c7:	inc    esi
  4179c8:	dec    edi
  4179c9:	push   edx
  4179ca:	mov    ah,0xe0
  4179cc:	xorps  xmm0,xmm6
  4179cf:	outs   dx,DWORD PTR ds:[esi]
  4179d0:	ds or  al,0xc6
  4179d3:	test   DWORD PTR [esi+0x65f0b975],esp
  4179d9:	and    edi,DWORD PTR [ecx]
  4179db:	mov    ch,0x51
  4179dd:	iret   
  4179de:	aad    0xb4
  4179e0:	fs ins BYTE PTR es:[edi],dx
  4179e2:	jns    0x4179b3
  4179e4:	cmp    bl,0xe3
  4179e7:	fdiv   DWORD PTR [eax]
  4179e9:	bound  edx,QWORD PTR [edi-0x5242588e]
  4179ef:	pop    ebp
  4179f0:	jo     0x4179d1
  4179f2:	sbb    dh,BYTE PTR [eax+0x30]
  4179f5:	ror    BYTE PTR [ecx-0x7ee7db84],1
  4179fb:	adc    eax,0x4284d9
  417a00:	ins    DWORD PTR es:[edi],dx
  417a01:	add    DWORD PTR [edx+0x0],0xffffffe9
  417a05:	pop    eax
  417a06:	add    al,BYTE PTR [eax]
  417a08:	add    BYTE PTR [eax],ah
  417a0a:	add    ebp,ebx
  417a0c:	xchg   ecx,eax
  417a0d:	jecxz  0x4179c1
  417a0f:	mov    ah,0xb4
  417a11:	jb     0x417a54
  417a13:	sahf   
  417a14:	nop
  417a15:	mov    edi,0x73909296
  417a1a:	loop   0x4179dc
  417a1c:	mov    esi,0xbebec235
  417a21:	adc    BYTE PTR [edi],dl
  417a23:	sbb    dl,al
  417a25:	or     eax,0x6d42a9e7
  417a2a:	shl    BYTE PTR [ebx],1
  417a2c:	sti    
  417a2d:	rol    edi,0x20
  417a30:	adc    eax,0xda5c635f
  417a35:	xchg   esp,eax
  417a36:	inc    ebp
  417a37:	repz bound edi,QWORD PTR [eax-0x7e]
  417a3b:	xchg   esi,eax
  417a3c:	adc    DWORD PTR [esi],0xffffffaa
  417a3f:	je     0x4179f1
  417a41:	sahf   
  417a42:	(bad)  
  417a43:	mov    ?,WORD PTR [edx]
  417a45:	dec    edi
  417a46:	mov    eax,0xad491918
  417a4b:	cs push esi
  417a4d:	test   BYTE PTR [eax+0x22d9cfc7],bh
  417a53:	xchg   edi,eax
  417a54:	loopne 0x417a7b
  417a56:	mov    ch,BYTE PTR [ebx]
  417a58:	cmp    DWORD PTR cs:[edx-0x1b168b19],0xffffff9b
  417a60:	pop    es
  417a61:	adc    al,0xda
  417a63:	(bad)  
  417a64:	test   DWORD PTR [ebx-0x14],ecx
  417a67:	push   0xffffffcc
  417a69:	mov    ecx,0xb9afc1fd
  417a6e:	xor    BYTE PTR [edx],0xf2
  417a71:	enter  0x8b7d,0xa0
  417a75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a76:	cmp    cl,BYTE PTR [ebx+ebp*4+0x9f9959e]
  417a7d:	or     esi,DWORD PTR [eax+0x3]
  417a80:	inc    edi
  417a81:	pop    eax
  417a82:	cli    
  417a83:	dec    ecx
  417a84:	and    DWORD PTR [edx],ecx
  417a86:	dec    DWORD PTR [edx-0x5c]
  417a89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a8a:	push   ebp
  417a8b:	add    BYTE PTR [ebp-0x3a4825a6],dh
  417a91:	mov    cl,0x9b
  417a93:	fs sbb dh,bh
  417a96:	out    dx,al
  417a97:	aam    0xcc
  417a99:	mov    ah,0xe4
  417a9b:	mov    ah,0xf8
  417a9d:	jnp    0x417a72
  417a9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aa0:	or     al,0x5f
  417aa2:	xor    al,BYTE PTR [ecx-0x7ecaa292]
  417aa8:	mov    al,0x5b
  417aaa:	mov    ch,0xdd
  417aac:	mov    esp,0x1cd96bd9
  417ab1:	out    dx,al
  417ab2:	inc    eax
  417ab3:	(bad)  
  417ab4:	pop    esp
  417ab5:	(bad)  [esi+0x51]
  417ab8:	mov    cl,0x2f
  417aba:	test   BYTE PTR [ebx-0x8],0x5e
  417abe:	rol    BYTE PTR [esp+edx*4+0x4d5e100e],1
  417ac5:	fwait
  417ac6:	dec    ecx
  417ac7:	sar    BYTE PTR [edx],cl
  417ac9:	lock stos DWORD PTR es:[edi],eax
  417acb:	push   ss
  417acc:	sub    DWORD PTR [edi],edx
  417ace:	call   FWORD PTR [eax+0x20]
  417ad1:	outs   dx,DWORD PTR ds:[esi]
  417ad2:	int    0x8a
  417ad4:	add    DWORD PTR [ebp-0x2],ebx
  417ad7:	xor    al,0x4b
  417ad9:	imul   ebx,DWORD PTR [ebx+0x2a],0xd
  417add:	dec    eax
  417ade:	mov    bh,0xe2
  417ae0:	sub    cl,bh
  417ae2:	repz ror BYTE PTR [ecx-0x5],cl
  417ae6:	or     al,0x89
  417ae8:	xlat   BYTE PTR ds:[ebx]
  417ae9:	or     ebp,DWORD PTR [eax]
  417aeb:	dec    ebx
  417aec:	cs adc al,0x33
  417aef:	add    eax,0x268fb07a
  417af4:	daa    
  417af5:	stos   BYTE PTR es:[edi],al
  417af6:	es push esi
  417af8:	outs   dx,DWORD PTR ds:[esi]
  417af9:	das    
  417afa:	imul   ebx,DWORD PTR [edi],0x634b2edd
  417b00:	jne    0x417ac0
  417b02:	xor    al,dl
  417b04:	and    DWORD PTR [ebp+0x5f],esi
  417b07:	ins    BYTE PTR es:[edi],dx
  417b08:	push   es
  417b09:	mov    ds:0x4064ef44,al
  417b0e:	shl    eax,cl
  417b10:	cmp    eax,0xf830fc2c
  417b15:	mov    esp,0x2e1be00c
  417b1a:	mov    dh,0x1a
  417b1c:	neg    DWORD PTR [ebp-0x4518901a]
  417b22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b23:	sbb    esi,ebp
  417b25:	xchg   edi,esp
  417b27:	stos   DWORD PTR es:[edi],eax
  417b28:	mov    eax,ds:0xcc4b834d
  417b2d:	inc    edx
  417b2e:	mov    BYTE PTR [ebx-0x73a54fdc],ch
  417b34:	lock adc ebp,esp
  417b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b38:	mov    ch,0x38
  417b3a:	pop    ebp
  417b3b:	xor    DWORD PTR [eax-0x4c],edx
  417b3e:	(bad)  
  417b3f:	shr    BYTE PTR [eax+0x77408d0d],cl
  417b45:	jmp    0x69175ae4
  417b4a:	adc    esp,DWORD PTR [ecx+0x57]
  417b4d:	inc    ecx
  417b4e:	mov    gs:0x61b6b211,al
  417b54:	gs f2xm1 
  417b57:	outs   dx,BYTE PTR ds:[esi]
  417b58:	aam    0x2c
  417b5a:	test   BYTE PTR [eax+0x12],0x9c
  417b5e:	add    eax,0x8160652f
  417b63:	call   0xfc85:0x3f41fcd2
  417b6a:	repnz clc 
  417b6c:	add    dh,BYTE PTR [eax+eax*8-0x2c]
  417b70:	xlat   BYTE PTR ds:[ebx]
  417b71:	and    esp,DWORD PTR [eax+0x3f]
  417b74:	stc    
  417b75:	xor    ecx,ebp
  417b77:	bound  ebp,QWORD PTR [ecx+eiz*2+0x63d4d5bc]
  417b7e:	bound  eax,QWORD PTR [esi-0x7e84c03f]
  417b84:	(bad)  [edi+eiz*4]
  417b87:	cmp    dl,dh
  417b89:	dec    edx
  417b8a:	mov    cl,0x37
  417b8c:	sub    bh,BYTE PTR [edi]
  417b8e:	sub    DWORD PTR ds:[edi-0x64],ecx
  417b92:	xchg   edi,eax
  417b93:	in     al,dx
  417b94:	jl     0x417b38
  417b96:	ins    DWORD PTR es:[edi],dx
  417b97:	stc    
  417b98:	xor    BYTE PTR [eax-0x67],bh
  417b9b:	add    DWORD PTR [edi+0x5],ebp
  417b9e:	(bad)  
  417b9f:	fadd   DWORD PTR [edi]
  417ba1:	cdq    
  417ba2:	pmuludq mm7,QWORD PTR [edx]
  417ba5:	sub    dh,ah
  417ba7:	fist   DWORD PTR [edi+0x38]
  417baa:	test   BYTE PTR [ebx-0x7fc3dca0],cl
  417bb0:	sbb    DWORD PTR [edx+0x29eda2ea],edx
  417bb6:	jecxz  0x417baa
  417bb8:	cli    
  417bb9:	xchg   bl,ah
  417bbb:	pop    es
  417bbc:	repnz in al,dx
  417bbe:	inc    ecx
  417bbf:	sbb    al,0x9e
  417bc1:	pop    ecx
  417bc2:	inc    ebx
  417bc3:	and    cl,ch
  417bc5:	or     cl,BYTE PTR [esi]
  417bc7:	push   eax
  417bc8:	repz call 0x3965:0xa0b64103
  417bd0:	add    DWORD PTR [edi],edi
  417bd2:	sbb    eax,0x6aea4ebf
  417bd7:	or     ebp,DWORD PTR [ebp+0x262b3925]
  417bdd:	xor    al,0x2
  417bdf:	imul   esp,DWORD PTR [eax],0xffffffd3
  417be2:	fistp  QWORD PTR gs:[eax]
  417be5:	inc    eax
  417be6:	dec    edi
  417be7:	addr16 (bad) 
  417be9:	stc    
  417bea:	or     DWORD PTR [ebx],edx
  417bec:	xchg   esp,eax
  417bed:	ret    
  417bee:	cld    
  417bef:	sub    al,0x16
  417bf1:	fdivr  st,st(7)
  417bf3:	fs xor al,0x29
  417bf6:	fiadd  WORD PTR [ecx+ecx*4]
  417bf9:	daa    
  417bfa:	sbb    ebx,eax
  417bfc:	addr16 fsubrp st(0),st
  417bff:	leave  
  417c00:	sub    DWORD PTR [ebx],0xbba8b827
  417c06:	sahf   
  417c07:	jge    0x417c46
  417c09:	sub    al,0x67
  417c0b:	in     al,dx
  417c0c:	ret    
  417c0d:	xchg   ebx,eax
  417c0e:	xor    BYTE PTR [ecx],al
  417c10:	(bad)  
  417c11:	and    edx,DWORD PTR [esp+ecx*2+0x37]
  417c15:	daa    
  417c16:	xor    eax,0x39d5df99
  417c1b:	mov    ebx,DWORD PTR [ecx-0x53]
  417c1e:	popf   
  417c1f:	inc    ecx
  417c20:	rcr    DWORD PTR [ebx-0x7e],0x8f
  417c24:	mov    al,0xa6
  417c26:	sbb    bh,BYTE PTR [eax-0x58]
  417c29:	jle    0x417c1d
  417c2b:	mov    esi,ecx
  417c2d:	inc    ecx
  417c2e:	(bad)  
  417c2f:	ror    dh,0x5
  417c32:	scas   eax,DWORD PTR es:[edi]
  417c33:	inc    esi
  417c34:	int3   
  417c35:	retf   
  417c36:	push   edx
  417c37:	mov    al,ch
  417c39:	test   DWORD PTR [eax+0x65],0xac502a0
  417c40:	scas   al,BYTE PTR es:[edi]
  417c41:	test   al,0x93
  417c43:	punpckhdq mm1,mm2
  417c46:	inc    ebx
  417c47:	out    0xe2,al
  417c49:	test   DWORD PTR [ecx+0x29],ebp
  417c4c:	xchg   BYTE PTR [ebx-0x1350c99],cl
  417c52:	int    0xfe
  417c54:	pop    esi
  417c55:	xor    cl,BYTE PTR [edx+esi*8-0xb]
  417c59:	jne    0x417c05
  417c5b:	jge    0x417ccb
  417c5d:	jge    0x417c3c
  417c5f:	ffree  st(1)
  417c61:	mov    DWORD PTR [esp+0x1c],esi
  417c65:	add    DWORD PTR ds:0x428435,0x4dd4
  417c6f:	push   eax
  417c70:	and    DWORD PTR ds:0x42857d,0x2c3a
  417c7a:	call   0x40a112
  417c7f:	and    DWORD PTR ds:0x42843d,0x42847d
  417c89:	push   0x4
  417c8b:	push   0x42258c
  417c90:	push   DWORD PTR [esp+0x14]
  417c94:	call   0x411c08
  417c99:	mov    eax,DWORD PTR [esp+0xc]
  417c9d:	mov    ecx,DWORD PTR [esp+0xc]
  417ca1:	xor    DWORD PTR ds:0x42844d,ecx
  417ca7:	mov    eax,DWORD PTR [eax]
  417ca9:	mov    ecx,DWORD PTR [ecx]
  417cab:	cmp    DWORD PTR ds:0x4284dd,0x0
  417cb2:	mov    DWORD PTR ds:0x428571,0x49de
  417cbc:	mov    ebx,0x75ce
  417cc1:	not    edx
  417cc3:	mov    edx,0x562b
  417cc8:	jmp    0x417d30
  417ccd:	mov    DWORD PTR ds:0x42844d,0x3679
  417cd7:	cmp    DWORD PTR ds:0x4284dd,0x0
  417cde:	jle    0x417d16
  417ce4:	push   0x3f3a
  417ce9:	push   0x4284f5
  417cee:	push   DWORD PTR [ebp-0x20]
  417cf1:	push   DWORD PTR [ebp-0x14]
  417cf4:	call   DWORD PTR ds:0x42e284
  417cfa:	xor    edx,DWORD PTR ds:0x42854d
  417d00:	and    DWORD PTR ds:0x42835d,0x535f
  417d0a:	mov    ebx,DWORD PTR ds:0x42833d
  417d10:	and    DWORD PTR ds:0x42832d,ebx
  417d16:	adc    ebx,ebx
  417d18:	neg    DWORD PTR ds:0x428421
  417d1e:	mov    edx,DWORD PTR ds:0x428495
  417d24:	mov    ebx,DWORD PTR ds:0x428511
  417d2a:	sub    ebx,edx
  417d2c:	imul   edx,DWORD PTR [edx+ebx*1]
  417d30:	shr    eax,0x1e
  417d33:	shl    ecx,0x2
  417d36:	cmp    DWORD PTR ds:0x428335,0x0
  417d3d:	mov    edx,0x88a
  417d42:	mov    DWORD PTR ds:0x4284cd,0x5f12
  417d4c:	mov    DWORD PTR ds:0x428359,0x1abe
  417d56:	jmp    0x417da7
  417d5b:	mov    DWORD PTR ds:0x42844d,edi
  417d61:	cmp    DWORD PTR ds:0x428335,0x0
  417d68:	ja     0x417d87
  417d6e:	push   DWORD PTR [ebp-0x20]
  417d71:	push   0x428351
  417d76:	push   DWORD PTR [ebp-0x18]
  417d79:	call   DWORD PTR ds:0x42e0fc
  417d7f:	sbb    ebx,ebx
  417d81:	or     DWORD PTR ds:0x428465,ecx
  417d87:	mov    DWORD PTR ds:0x4284f1,0x1aca
  417d91:	and    ebx,DWORD PTR ds:0x428569
  417d97:	adc    DWORD PTR ds:0x4284f9,0x890
  417da1:	xor    DWORD PTR ds:0x428365,edi
  417da7:	or     eax,ecx
  417da9:	and    ecx,0x4e3
  417daf:	mov    ecx,DWORD PTR [esp+0xc]
  417db3:	xor    eax,0xa5069bae
  417db8:	and    ebx,ebx
  417dba:	mov    DWORD PTR [ecx],eax
  417dbc:	lea    eax,[esp+0x40]
  417dc0:	sbb    ecx,DWORD PTR ds:0x42832d
  417dc6:	mov    DWORD PTR [esp+0x98],eax
  417dcd:	jmp    0x41802a
  417dd2:	or     eax,0xb0eeb0bf
  417dd7:	scas   al,BYTE PTR es:[edi]
  417dd8:	(bad)  
  417dd9:	and    BYTE PTR [ebx],al
  417ddb:	inc    esp
  417ddc:	lods   al,BYTE PTR ds:[esi]
  417ddd:	jecxz  0x417d72
  417ddf:	sbb    BYTE PTR [ecx+edx*8-0x15],ch
  417de3:	out    0xc0,al
  417de5:	mov    esi,0xbebec235
  417dea:	mov    esi,0x5fd96d11
  417def:	mov    bh,0xb4
  417df1:	mov    ebp,0x6a4f8a15
  417df6:	add    dl,ah
  417df8:	(bad)  
  417df9:	adc    BYTE PTR [ebx],bh
  417dfb:	jmp    0xfa10e03b
  417e00:	xor    DWORD PTR [ecx+ecx*4],edi
  417e03:	call   0xc230d70
  417e08:	inc    edx
  417e09:	xor    ebx,DWORD PTR [ebp-0x7f]
  417e0c:	xchg   ebp,esi
  417e0e:	daa    
  417e0f:	mov    eax,ds:0xa646ef5e
  417e14:	xor    al,0xf
  417e16:	cmp    al,0xe5
  417e18:	(bad)  
  417e19:	enter  0x1ce,0xf7
  417e1d:	lahf   
  417e1e:	(bad)  
  417e20:	xor    dl,BYTE PTR [ebp-0x6e]
  417e23:	push   ecx
  417e24:	(bad)  
  417e25:	mov    ecx,0xec382d69
  417e2a:	and    eax,0x13600bd1
  417e2f:	in     eax,0xb9
  417e31:	(bad)  
  417e32:	sahf   
  417e33:	rol    DWORD PTR [eax],1
  417e35:	xor    ah,al
  417e37:	mov    eax,0x57dc44c7
  417e3c:	cmp    dl,cl
  417e3e:	sub    al,BYTE PTR [edi]
  417e40:	or     ebp,ebx
  417e42:	mov    ecx,0x394c0fca
  417e47:	je     0x417eb6
  417e49:	fsubr  DWORD PTR [edx+0x2a4a5c1c]
  417e4f:	dec    esi
  417e50:	inc    esp
  417e51:	mov    bl,0x6c
  417e53:	inc    esi
  417e54:	sbb    BYTE PTR [eax-0xba9922d],ch
  417e5a:	cmp    eax,0x9a2fafbc
  417e5f:	gs jecxz 0x417e9d
  417e62:	adc    al,0xe0
  417e64:	inc    esi
  417e65:	scas   al,BYTE PTR es:[edi]
  417e66:	cmp    dh,dl
  417e68:	jne    0x417eb4
  417e6a:	rol    DWORD PTR [edx],1
  417e6c:	push   eax
  417e6d:	mov    ecx,0xe0455711
  417e72:	sbb    ch,bl
  417e74:	mov    edx,0x3f890970
  417e79:	sub    al,BYTE PTR [ebx-0x40]
  417e7c:	xchg   al,dh
  417e7e:	sahf   
  417e7f:	or     al,0x36
  417e81:	mov    cl,0x52
  417e83:	sub    al,0x5
  417e85:	push   ds
  417e86:	sub    BYTE PTR [ebx-0x2f],0x7c
  417e8a:	push   esi
  417e8b:	inc    edi
  417e8c:	xor    al,0x69
  417e8e:	push   0x5f
  417e90:	ret    0xe4c9
  417e93:	(bad)  
  417e94:	pop    eax
  417e95:	(bad)  
  417e96:	mov    ch,0x9c
  417e98:	adc    ah,al
  417e9a:	add    eax,0x704ffe8d
  417e9f:	add    al,0x97
  417ea1:	mov    esp,0x5d0842c1
  417ea6:	sub    eax,ecx
  417ea8:	and    esp,DWORD PTR [eax-0x651b8d2c]
  417eae:	adc    edi,DWORD PTR [ebx-0x5a0e07f3]
  417eb4:	pusha  
  417eb5:	cmp    ah,BYTE PTR [ecx-0x548927a4]
  417ebb:	ret    
  417ebc:	jae    0x417e9b
  417ebe:	cmp    ebx,DWORD PTR [edx]
  417ec0:	ins    BYTE PTR es:[edi],dx
  417ec1:	leave  
  417ec2:	cs int3 
  417ec4:	into   
  417ec5:	test   BYTE PTR [ebp-0x3cae9118],ah
  417ecb:	push   cs
  417ecc:	in     al,dx
  417ecd:	lahf   
  417ece:	scas   al,BYTE PTR es:[edi]
  417ecf:	mov    ds:0x5d4cefb8,al
  417ed4:	or     al,0xc2
  417ed6:	add    al,0xe2
  417ed8:	ja     0x417eba
  417eda:	xor    ecx,DWORD PTR [esi+0x27]
  417edd:	xchg   esi,eax
  417ede:	(bad)  
  417edf:	dec    eax
  417ee0:	cmp    DWORD PTR [ecx],esi
  417ee2:	test   BYTE PTR [edi],0x1d
  417ee5:	push   cs
  417ee6:	cmp    eax,0x2f4239cf
  417eeb:	ret    0x6fdd
  417eee:	stc    
  417eef:	pop    ecx
  417ef0:	cwde   
  417ef1:	fcom   DWORD PTR [ebx]
  417ef3:	sahf   
  417ef4:	es popa 
  417ef6:	dec    ebx
  417ef7:	pop    ss
  417ef8:	test   eax,0xc5fa3db
  417efd:	in     al,dx
  417efe:	mov    dh,0x1a
  417f00:	in     eax,dx
  417f01:	ror    DWORD PTR [ebp-0x74],1
  417f04:	sub    al,BYTE PTR [eax+0x50b0763d]
  417f0a:	call   FWORD PTR [eax]
  417f0c:	imul   edi,DWORD PTR [ebx-0x45d3da5d],0x3a
  417f13:	out    dx,eax
  417f14:	jo     0x417f45
  417f16:	pop    eax
  417f17:	inc    esi
  417f18:	int    0x80
  417f1a:	les    ebp,FWORD PTR [ebx-0x52]
  417f1d:	inc    ecx
  417f1e:	in     al,dx
  417f1f:	sar    DWORD PTR [ecx-0x1f],0x48
  417f23:	pop    ecx
  417f24:	xchg   ebx,eax
  417f25:	stc    
  417f26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f27:	mov    eax,0x67f38be0
  417f2c:	cwde   
  417f2d:	iret   
  417f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f2f:	aaa    
  417f30:	repz call 0x4d30b0c8
  417f36:	dec    ebp
  417f37:	into   
  417f38:	pop    edi
  417f39:	cmp    edx,DWORD PTR [esi-0x5e]
  417f3c:	adc    DWORD PTR [ebx-0x15],ecx
  417f3f:	jno    0x417f9e
  417f41:	sbb    al,0x9
  417f43:	and    ebx,DWORD PTR [ebp+0x3d]
  417f46:	lock test eax,0xb44be1ec
  417f4c:	out    dx,al
  417f4d:	push   cs
  417f4e:	mov    ds:0x1c28071b,al
  417f53:	dec    ecx
  417f54:	xchg   ecx,eax
  417f55:	push   esp
  417f56:	fidiv  WORD PTR ds:0xce435e47
  417f5c:	xlat   BYTE PTR ds:[ebx]
  417f5d:	sbb    DWORD PTR [ecx],0x86489333
  417f63:	pop    ds
  417f64:	inc    esi
  417f65:	push   eax
  417f66:	lahf   
  417f67:	or     DWORD PTR [esi+0x11],esp
  417f6a:	test   al,0x40
  417f6c:	jmp    DWORD PTR [esi+0x32b52ff]
  417f72:	inc    esi
  417f73:	outs   dx,DWORD PTR gs:[esi]
  417f75:	xchg   DWORD PTR [eax+0x413d38c6],ebp
  417f7b:	cld    
  417f7c:	jnp    0x417f0d
  417f7e:	scas   eax,DWORD PTR es:[edi]
  417f7f:	scas   al,BYTE PTR es:[edi]
  417f80:	mov    al,0x59
  417f82:	add    eax,DWORD PTR [ebx+0x21dab810]
  417f88:	adc    al,0xe2
  417f8a:	into   
  417f8b:	fdiv   DWORD PTR [ebp+0x37]
  417f8e:	fldcw  WORD PTR [ebx+0x34]
  417f91:	push   edi
  417f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f93:	outs   dx,BYTE PTR ds:[esi]
  417f94:	inc    edi
  417f95:	cmp    DWORD PTR [ebx+0x40],edx
  417f98:	and    DWORD PTR [ecx],ebx
  417f9a:	sar    DWORD PTR [edx],cl
  417f9c:	and    eax,0x5de44ecb
  417fa1:	cld    
  417fa2:	lahf   
  417fa3:	xchg   ecx,eax
  417fa4:	or     al,0xb
  417fa6:	inc    ecx
  417fa7:	sti    
  417fa8:	adc    ch,bh
  417faa:	jmp    0x417ff0
  417fac:	mov    bh,0x22
  417fae:	mov    esi,0x3371d0cd
  417fb3:	lock in al,dx
  417fb5:	outs   dx,DWORD PTR ds:[esi]
  417fb6:	in     eax,dx
  417fb7:	mov    ebp,0x64275251
  417fbc:	add    ebp,eax
  417fbe:	inc    edi
  417fbf:	(bad)  
  417fc0:	icebp  
  417fc1:	xchg   ecx,eax
  417fc2:	js     0x417f8c
  417fc4:	es push edi
  417fc6:	inc    edx
  417fc7:	cmp    ebp,DWORD PTR [esi+esi*2-0x2d]
  417fcb:	sbb    BYTE PTR [eax+0x61],ah
  417fce:	adc    DWORD PTR [eax+0x5],eax
  417fd1:	mov    esi,DWORD PTR [edi+0x44]
  417fd4:	sbb    ebp,DWORD PTR [edx+eax*2+0x429aa464]
  417fdb:	xchg   ebp,eax
  417fdc:	out    0xcf,al
  417fde:	iret   
  417fdf:	pop    ebp
  417fe0:	popf   
  417fe1:	test   al,0x6a
  417fe3:	cmp    eax,0xe718a4
  417fe8:	aas    
  417fe9:	sbb    al,0x15
  417feb:	inc    ebp
  417fec:	call   FWORD PTR [ecx]
  417fee:	dec    eax
  417fef:	shl    BYTE PTR [edi+0x47],cl
  417ff2:	and    DWORD PTR es:[ebx+eiz*4],esp
  417ff6:	popa   
  417ff7:	pop    edi
  417ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ff9:	retf   
  417ffa:	(bad)  
  417ffb:	jb     0x418016
  417ffd:	mov    WORD PTR [ebx+esi*1+0xc17d246],cs
  418004:	cdq    
  418005:	int3   
  418006:	lods   eax,DWORD PTR ds:[esi]
  418007:	xchg   esi,eax
  418008:	int    0x62
  41800a:	push   es
  41800b:	fdivr  QWORD PTR [ebx]
  41800d:	add    bl,0x51
  418010:	mov    eax,DWORD PTR [edi+0x5e917f98]
  418016:	cmp    al,0x89
  418018:	into   
  418019:	scas   al,BYTE PTR es:[edi]
  41801a:	ror    BYTE PTR [eax-0x47],0x41
  41801e:	rcl    DWORD PTR [edx+0x41],1
  418021:	dec    esp
  418022:	inc    esi
  418023:	jb     0x418064
  418025:	or     al,0xd0
  418027:	popa   
  418028:	imul   eax,DWORD PTR [ecx-0x67db7b73],0x83000000
  418032:	cmp    eax,0x42845d
  418037:	add    bh,al
  418039:	add    eax,0x428335
  41803e:	push   ecx
  41803f:	adc    eax,0x5c70000
  418044:	inc    ebp
  418045:	test   DWORD PTR [edx+0x0],eax
  418048:	push   cs
  418049:	js     0x41804b
  41804b:	add    bh,al
  41804d:	add    eax,0x428339
  418052:	adc    al,0x4b
  418054:	add    BYTE PTR [eax],al
  418056:	jmp    0x418149
  41805b:	mov    DWORD PTR ds:0x428341,edx
  418061:	mov    DWORD PTR ds:0x42833d,0x4140
  41806b:	cmp    DWORD PTR ds:0x42845d,0x0
  418072:	je     0x4180ae
  418078:	push   0x4281f1
  41807d:	push   0x428157
  418082:	call   DWORD PTR ds:0x42e288
  418088:	mov    ecx,DWORD PTR ds:0x428495
  41808e:	xor    ebx,ebx
  418090:	or     ebx,DWORD PTR ds:0x42853d
  418096:	sub    ebx,ecx
  418098:	and    ecx,DWORD PTR [ecx+ebx*1]
  41809b:	mov    ecx,DWORD PTR ds:0x428405
  4180a1:	adc    DWORD PTR ds:0x428501,ecx
  4180a7:	inc    edx
  4180a8:	and    DWORD PTR ds:0x42844d,edi
  4180ae:	adc    DWORD PTR ds:0x4284d9,edx
  4180b4:	xor    ebx,ebx
  4180b6:	or     ebx,DWORD PTR ds:0x4283b1
  4180bc:	mov    ebx,DWORD PTR [ebx]
  4180be:	sub    DWORD PTR ds:0x428425,ebx
  4180c4:	xor    DWORD PTR ds:0x4284e9,0x2cb6
  4180ce:	cmp    DWORD PTR ds:0x428465,0x0
  4180d5:	mov    DWORD PTR ds:0x42844d,edx
  4180db:	mov    edx,DWORD PTR ds:0x4284dd
  4180e1:	jmp    0x418149
  4180e6:	mov    DWORD PTR ds:0x42857d,ebx
  4180ec:	cmp    DWORD PTR ds:0x428465,0x0
  4180f3:	jg     0x41811b
  4180f9:	push   0x428411
  4180fe:	push   0x1e32
  418103:	call   DWORD PTR ds:0x42e28c
  418109:	or     DWORD PTR ds:0x428369,ecx
  41810f:	adc    DWORD PTR ds:0x428549,0x3832
  418119:	not    ecx
  41811b:	sub    edx,DWORD PTR ds:0x428475
  418121:	mov    edx,DWORD PTR ds:0x428389
  418127:	mov    ebx,DWORD PTR ds:0x428511
  41812d:	sub    ebx,edx
  41812f:	sub    edx,DWORD PTR [edx+ebx*1]
  418132:	or     ecx,DWORD PTR ds:0x428549
  418138:	mov    ebx,DWORD PTR ds:0x4283b9
  41813e:	mov    ecx,DWORD PTR ds:0x4285b9
  418144:	sub    ecx,ebx
  418146:	or     ebx,DWORD PTR [ebx+ecx*1]
  418149:	mov    DWORD PTR [esp+0x9c],eax
  418150:	and    DWORD PTR ds:0x428451,ebx
  418156:	mov    eax,DWORD PTR [esp+0x40]
  41815a:	sub    DWORD PTR [esp+0x40],eax
  41815e:	mov    edx,DWORD PTR ds:0x42857d
  418164:	sub    DWORD PTR ds:0x42845d,edx
  41816a:	lea    eax,[ebp+0x4]
  41816d:	cmp    DWORD PTR ds:0x428575,0x0
  418174:	mov    DWORD PTR ds:0x4284dd,0x1e13
  41817e:	mov    ecx,0x65ab
  418183:	jmp    0x4181f4
  418188:	mov    ecx,0x6be4
  41818d:	mov    edx,0x487
  418192:	cmp    DWORD PTR ds:0x428575,0x0
  418199:	jge    0x4181bd
  41819f:	push   DWORD PTR [ebp-0x1c]
  4181a2:	push   0x28cd
  4181a7:	call   DWORD PTR ds:0x42e100
  4181ad:	sub    DWORD PTR ds:0x428475,ebx
  4181b3:	add    DWORD PTR ds:0x428579,0x428441
  4181bd:	mov    ebx,DWORD PTR ds:0x428561
  4181c3:	sbb    ebx,DWORD PTR ds:0x428409
  4181c9:	mov    DWORD PTR ds:0x428561,ebx
  4181cf:	mov    edx,DWORD PTR ds:0x4283ad
  4181d5:	mov    ebx,DWORD PTR ds:0x428529
  4181db:	sub    edx,ebx
  4181dd:	add    edx,DWORD PTR [edx+ebx*1]
  4181e0:	mov    ebx,DWORD PTR ds:0x42832d
  4181e6:	and    ebx,DWORD PTR ds:0x428429
  4181ec:	mov    DWORD PTR ds:0x42832d,ebx
  4181f2:	not    edx
  4181f4:	xor    DWORD PTR [esp+0x40],eax
  4181f8:	mov    DWORD PTR [esp+0x30],0x5b3d
  418200:	cmp    DWORD PTR ds:0x42855d,0x0
  418207:	mov    DWORD PTR ds:0x4284e5,0x564a
  418211:	mov    DWORD PTR ds:0x428465,ecx
  418217:	jmp    0x4184c9
  41821c:	mov    eax,0x378f
  418221:	cmp    DWORD PTR ds:0x42855d,0x0
  418228:	ja     0x41824a
  41822e:	push   0x77e8
  418233:	push   0x361b
  418238:	call   DWORD PTR ds:0x42e104
  41823e:	and    ebx,0x2889
  418244:	not    ebx
  418246:	or     edx,ecx
  418248:	sbb    ecx,ecx
  41824a:	xor    ecx,ecx
  41824c:	xor    ecx,DWORD PTR ds:0x428459
  418252:	adc    DWORD PTR ds:0x42856d,ecx
  418258:	xor    DWORD PTR ds:0x428345,0x4309
  418262:	sub    DWORD PTR ds:0x428375,0x3ee2
  41826c:	jmp    0x4184c9
  418271:	inc    esp
  418272:	inc    edx
  418273:	in     al,dx
  418274:	xor    ah,ch
  418276:	mov    eax,0x8987b29c
  41827b:	test   bh,cl
  41827d:	xor    eax,0x64e3a833
  418282:	jmp    0xbebe:0xc235bec0
  418289:	jne    0x41822e
  41828b:	bound  edx,QWORD PTR [edx-0x1d3ddf29]
  418291:	add    DWORD PTR [eax-0x755ada8],esp
  418297:	cmp    bl,BYTE PTR [esi]
  418299:	daa    
  41829a:	sti    
  41829b:	aas    
  41829c:	jl     0x41829c
  41829e:	lahf   
  41829f:	adc    edi,DWORD PTR [esi-0x4c]
  4182a2:	outs   dx,BYTE PTR ds:[esi]
  4182a3:	dec    ebp
  4182a4:	jnp    0x41825a
  4182a6:	push   esi
  4182a7:	lods   al,BYTE PTR ds:[esi]
  4182a8:	add    BYTE PTR [ecx],bh
  4182aa:	repnz (bad) 
  4182ac:	cmp    eax,0x7cbeffab
  4182b1:	adc    BYTE PTR [eax],dh
  4182b3:	sti    
  4182b4:	jns    0x4182d8
  4182b6:	jne    0x4182c7
  4182b8:	pusha  
  4182b9:	cmp    DWORD PTR [eax-0x225f0b11],0xa9897f17
  4182c3:	pusha  
  4182c4:	loop   0x41824d
  4182c6:	push   edx
  4182c7:	pop    edi
  4182c8:	push   ss
  4182c9:	into   
  4182ca:	(bad)
  4182cd:	push   ebp
  4182ce:	loopne 0x418322
  4182d0:	cmp    esi,DWORD PTR [eax]
  4182d2:	pop    ebp
  4182d3:	mov    esi,DWORD PTR [ebp+esi*8-0x9]
  4182d7:	mov    esp,0x966e942e
  4182dc:	in     al,0x4
  4182de:	jb     0x418348
  4182e0:	pop    ebp
  4182e1:	cld    
  4182e2:	adc    al,0x39
  4182e4:	in     eax,0xd6
  4182e6:	dec    edx
  4182e7:	call   FWORD PTR [ebp-0x20]
  4182ea:	add    cl,bh
  4182ec:	fild   DWORD PTR [esi]
  4182ee:	sti    
  4182ef:	pop    edi
  4182f0:	or     bl,BYTE PTR [ebx-0x3218ba34]
  4182f6:	adc    edi,DWORD PTR [edx-0xb]
  4182f9:	cli    
  4182fa:	in     eax,0x70
  4182fc:	imul   ebp,DWORD PTR [ebx],0x9d2dc3c
  418302:	mov    ebx,ebx
  418304:	push   0x10
  418306:	test   BYTE PTR [eax+0x12717a0b],bl
  41830c:	mov    DWORD PTR ds:0xbc93accf,esp
  418312:	je     0x418369
  418314:	cmp    edx,DWORD PTR [esi]
  418316:	or     al,BYTE PTR [ecx]
  418318:	dec    esi
  418319:	sub    eax,0xda0a70ee
  41831e:	cli    
  41831f:	mov    edx,gs
  418321:	fadd   QWORD PTR [ebp+0x34]
  418324:	aaa    
  418325:	pop    esi
  418326:	or     ebx,DWORD PTR [ebp-0x7b793c86]
  41832c:	aad    0x43
  41832e:	aam    0x1e
  418330:	addr16 mov ds:0x39a7,eax
  418334:	fwait
  418335:	cwde   
  418336:	rol    BYTE PTR [edx-0x6c],1
  418339:	das    
  41833a:	xor    esp,DWORD PTR [edx]
  41833c:	xchg   ebx,eax
  41833d:	pop    ss
  41833e:	fidivr WORD PTR [ecx]
  418340:	jbe    0x41830c
  418342:	mov    ebx,0x9e10a191
  418347:	ja     0x4183ab
  418349:	sbb    edi,esi
  41834b:	js     0x41834a
  41834d:	les    ebp,FWORD PTR [eax]
  41834f:	push   0x80dc6adb
  418354:	sbb    al,0x63
  418356:	lds    ebp,FWORD PTR [esi+0x56]
  418359:	aam    0x8c
  41835b:	stc    
  41835c:	fidivr WORD PTR [edx]
  41835e:	in     eax,dx
  41835f:	mov    al,ds:0x466c8c0
  418364:	mov    eax,0xc89ad0cb
  41836a:	rol    BYTE PTR [esi+0x38107ce3],0x2c
  418371:	(bad)  
  418372:	pop    edx
  418373:	loopne 0x418330
  418375:	inc    edi
  418376:	mov    cl,0x4c
  418378:	mov    esp,0x625b4dd1
  41837d:	push   cs
  41837e:	std    
  41837f:	adc    al,0x34
  418381:	adc    DWORD PTR [esi],edx
  418383:	test   eax,0x9a51d737
  418388:	push   ds
  418389:	mov    eax,ds:0x22949bb1
  41838e:	ss pop esp
  418390:	fistp  QWORD PTR [ecx+0x389b4d21]
  418396:	jl     0x418345
  418398:	iret   
  418399:	inc    eax
  41839a:	push   ecx
  41839b:	clc    
  41839c:	scas   al,BYTE PTR es:[edi]
  41839d:	lds    ebx,FWORD PTR [edi+0x59]
  4183a0:	stos   DWORD PTR es:[edi],eax
  4183a1:	cmp    DWORD PTR [edi],edx
  4183a3:	jl     0x41839f
  4183a5:	stos   BYTE PTR es:[edi],al
  4183a6:	or     eax,0x2042ce56
  4183ab:	jb     0x418386
  4183ad:	lea    eax,[eax-0x7d]
  4183b0:	loopne 0x418360
  4183b2:	aas    
  4183b3:	aaa    
  4183b4:	js     0x41835c
  4183b6:	jbe    0x41842d
  4183b8:	cmp    DWORD PTR ds:0x9ef42ab5,ebx
  4183be:	ds push ds
  4183c0:	jmp    0xe4b7:0xe1abb4e8
  4183c7:	fs adc ch,dh
  4183ca:	inc    ebx
  4183cb:	adc    edi,DWORD PTR [esi+0x27]
  4183ce:	adc    BYTE PTR [edx-0x62b80dbb],dh
  4183d4:	shl    DWORD PTR ss:[ecx],0x43
  4183d8:	jno    0x418409
  4183da:	cld    
  4183db:	sbb    al,0x13
  4183dd:	sbb    al,0x24
  4183df:	add    ebx,ecx
  4183e1:	jno    0x4183d2
  4183e3:	jae    0x418425
  4183e5:	daa    
  4183e6:	xchg   esp,eax
  4183e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183e8:	sahf   
  4183e9:	mov    ah,0x77
  4183eb:	dec    ebp
  4183ec:	pusha  
  4183ed:	inc    ecx
  4183ee:	pop    ecx
  4183ef:	sbb    al,0x77
  4183f1:	xchg   edx,eax
  4183f2:	das    
  4183f3:	into   
  4183f4:	and    BYTE PTR [edx],bl
  4183f6:	rsm    
  4183f8:	pop    edx
  4183f9:	adc    DWORD PTR [ecx+edi*2-0x7c],0x7f
  4183fe:	xchg   BYTE PTR [edx],bl
  418400:	or     ecx,esp
  418402:	std    
  418403:	mov    edx,0x56b47262
  418408:	lods   al,BYTE PTR ds:[esi]
  418409:	dec    edx
  41840a:	jno    0x418472
  41840c:	sub    edi,edx
  41840e:	add    eax,0xf7a8a426
  418413:	xlat   BYTE PTR ds:[ebx]
  418414:	arpl   WORD PTR ds:0xdee24110,cx
  41841a:	push   0xfffffffd
  41841c:	and    eax,DWORD PTR [ebp-0x13]
  41841f:	and    edx,DWORD PTR [ebp*8-0x491adec3]
  418426:	sub    ecx,DWORD PTR [ebx-0x6849d61f]
  41842c:	sbb    ebp,DWORD PTR [esi]
  41842e:	test   BYTE PTR [edx],dl
  418430:	sub    esi,ecx
  418432:	or     eax,0x6cc1ad04
  418437:	xor    dh,bh
  418439:	loop   0x418468
  41843b:	cdq    
  41843c:	mov    ecx,0xe683d4e0
  418441:	xchg   ebp,eax
  418442:	out    dx,eax
  418443:	dec    ecx
  418444:	sub    esi,DWORD PTR [esi+ebx*4-0x1024a8e9]
  41844b:	sub    al,0x39
  41844d:	push   eax
  41844e:	push   ss
  41844f:	iret   
  418450:	dec    ebp
  418451:	xor    al,0xac
  418453:	(bad)  
  418454:	cli    
  418455:	in     al,dx
  418456:	pusha  
  418457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418458:	rcr    DWORD PTR [esi+0x69],1
  41845b:	jmp    0x4184b9
  41845d:	fwait
  41845e:	adc    ebx,DWORD PTR [ebp+0x5e]
  418461:	add    BYTE PTR [edx+0x5401e8b7],al
  418467:	mov    ebp,0xd065500f
  41846c:	loop   0x418494
  41846e:	jnp    0x418486
  418470:	xor    cl,ah
  418472:	enter  0x7a21,0x43
  418476:	push   edx
  418477:	sbb    BYTE PTR [ebx],bl
  418479:	test   DWORD PTR [esi],ebp
  41847b:	jecxz  0x418402
  41847d:	ja     0x4184ef
  41847f:	pop    ss
  418480:	(bad)
  418483:	lods   al,BYTE PTR ds:[esi]
  418484:	mov    dh,0x4e
  418486:	pop    edi
  418487:	jae    0x4184dd
  418489:	into   
  41848a:	or     al,0x95
  41848c:	(bad)  
  41848d:	and    al,0x25
  41848f:	xor    BYTE PTR [ebx],ch
  418491:	es sub bh,ch
  418494:	fldcw  WORD PTR [edi-0x607d67ef]
  41849a:	(bad)  
  41849b:	aad    0xf2
  41849d:	inc    esi
  41849e:	je     0x4184b7
  4184a0:	iret   
  4184a1:	cmp    al,0xa0
  4184a3:	retf   
  4184a4:	into   
  4184a5:	retf   0x8dcd
  4184a8:	lock push ebx
  4184aa:	adc    BYTE PTR fs:[esi+0x1d64db01],dl
  4184b1:	push   esi
  4184b2:	loop   0x418511
  4184b4:	sub    DWORD PTR [eax-0x686dc259],edi
  4184ba:	mov    DWORD PTR [ebx+0x4a],0x9378c4c6
  4184c1:	(bad)  
  4184c2:	in     al,0xbe
  4184c4:	jmp    FWORD PTR [edx]
  4184c6:	lahf   
  4184c7:	add    dl,ch
  4184c9:	mov    DWORD PTR [esp+0x34],0x4445
  4184d1:	mov    DWORD PTR [esp+0x10],0xa52
  4184d9:	mov    DWORD PTR [esp+0x14],0x1c69
  4184e1:	mov    eax,DWORD PTR [esp+0x10]
  4184e5:	mov    ecx,DWORD PTR [esp+0x14]
  4184e9:	mov    edx,DWORD PTR [esp+0x30]
  4184ed:	mov    ebx,DWORD PTR [esp+0x34]
  4184f1:	add    eax,0xffffd1a5
  4184f6:	adc    ecx,0xffffedf0
  4184fc:	xor    eax,edx
  4184fe:	xor    ecx,ebx
  418500:	and    eax,0x325d
  418505:	mov    DWORD PTR [esp+0x50],eax
  418509:	and    ecx,0x3544
  41850f:	mov    DWORD PTR [esp+0x54],ecx
  418513:	mov    DWORD PTR [esp+0x48],0x1704
  41851b:	mov    DWORD PTR [esp+0x4c],0x4a75
  418523:	mov    DWORD PTR [esp+0x30],0x985
  41852b:	mov    DWORD PTR [esp+0x34],0x341
  418533:	mov    DWORD PTR [esp+0x10],0x5aa9
  41853b:	mov    DWORD PTR [esp+0x14],0x221a
  418543:	mov    eax,DWORD PTR [esp+0x10]
  418547:	mov    ecx,DWORD PTR [esp+0x14]
  41854b:	mov    edx,DWORD PTR [esp+0x30]
  41854f:	mov    ebx,DWORD PTR [esp+0x34]
  418553:	push   ebx
  418554:	push   edx
  418555:	or     ecx,0xc32
  41855b:	or     eax,0x502a
  418560:	push   ecx
  418561:	push   eax
  418562:	call   0x41594e
  418567:	mov    ecx,DWORD PTR [esp+0x48]
  41856b:	mov    ebx,DWORD PTR [esp+0x4c]
  41856f:	sub    eax,ecx
  418571:	mov    ecx,DWORD PTR [esp+0x50]
  418575:	sbb    edx,ebx
  418577:	mov    ebx,DWORD PTR [esp+0x54]
  41857b:	cmp    ecx,eax
  41857d:	jne    0x41858b
  418583:	cmp    ebx,edx
  418585:	je     0x41a937
  41858b:	mov    DWORD PTR [esp+0x30],0x71ba
  418593:	mov    DWORD PTR [esp+0x34],0x5f78
  41859b:	mov    DWORD PTR [esp+0x10],0x7b9c
  4185a3:	mov    DWORD PTR [esp+0x14],0x5622
  4185ab:	mov    eax,DWORD PTR [esp+0x10]
  4185af:	mov    ecx,DWORD PTR [esp+0x14]
  4185b3:	mov    edx,DWORD PTR [esp+0x30]
  4185b7:	mov    ebx,DWORD PTR [esp+0x34]
  4185bb:	jmp    0x418818
  4185c0:	inc    edi
  4185c1:	pop    ebp
  4185c2:	sti    
  4185c3:	daa    
  4185c4:	sti    
  4185c5:	mov    ebx,0x271b9d9b
  4185ca:	mov    esp,0x38df6ea4
  4185cf:	xchg   edx,eax
  4185d0:	fsub   st(7),st
  4185d2:	sar    BYTE PTR [esi-0x41413dcb],0x58
  4185d9:	outs   dx,BYTE PTR ds:[esi]
  4185da:	sahf   
  4185db:	fdivr  QWORD PTR [ecx-0x41fbad3e]
  4185e1:	repnz add BYTE PTR [eax-0x3e4e910d],ch
  4185e8:	sub    al,0x8
  4185ea:	inc    esp
  4185eb:	test   eax,0x83563d5e
  4185f0:	or     BYTE PTR [ebx],bl
  4185f2:	pop    ss
  4185f3:	push   ds
  4185f4:	inc    esp
  4185f5:	xchg   DWORD PTR [edi-0x4c6c6eb9],edx
  4185fb:	jmp    0xa9edd7e3
  418600:	and    cl,bl
  418602:	inc    edx
  418603:	lahf   
  418604:	dec    ecx
  418605:	mov    edi,0x9d2ed71a
  41860a:	es out dx,eax
  41860c:	out    0xbf,al
  41860e:	and    al,0x2f
  418610:	les    ebx,FWORD PTR [esi+ecx*1]
  418613:	les    eax,FWORD PTR [edi-0x6f]
  418616:	xchg   DWORD PTR [edi],esp
  418618:	bound  ebx,QWORD PTR cs:[edi+0x70]
  41861c:	dec    ebx
  41861d:	fsubr  DWORD PTR [eax-0x53]
  418620:	(bad)  
  418621:	mov    ecx,0xaf1ddfce
  418626:	jl     0x4185d1
  418628:	dec    eax
  418629:	loopne 0x4185ce
  41862b:	pusha  
  41862c:	hlt    
  41862d:	dec    edi
  41862e:	aad    0xb7
  418630:	mov    edx,0xb8f94e4f
  418635:	adc    BYTE PTR [ecx],dl
  418637:	cmp    DWORD PTR [eax],edx
  418639:	in     eax,0x26
  41863b:	or     BYTE PTR [ebx],0xb7
  41863e:	mov    edx,0xd09d7d3c
  418643:	mov    bl,0x93
  418645:	add    eax,0xc0f5f756
  41864a:	pop    ds
  41864b:	scas   eax,DWORD PTR es:[edi]
  41864c:	xchg   esi,eax
  41864d:	sahf   
  41864e:	ret    0xedd
  418651:	fbld   TBYTE PTR [esp+edx*1]
  418654:	lea    edi,[edx+0x2b516bc8]
  41865a:	jmp    0x43fc:0x66554c24
  418661:	adc    ch,BYTE PTR [eax+0x7f]
  418664:	and    DWORD PTR [edx],0xa13d1511
  41866a:	sbb    eax,0x2c5d886e
  41866f:	out    0x85,al
  418671:	jno    0x41864b
  418673:	mov    ebp,DWORD PTR [eax+0x3383b03b]
  418679:	push   eax
  41867a:	pop    ss
  41867b:	add    al,0x66
  41867d:	cmp    cl,bl
  41867f:	pop    ebp
  418680:	loope  0x4186c8
  418682:	enter  0x8f22,0xa6
  418686:	mov    al,0xd7
  418688:	cmp    eax,0x2e790962
  41868d:	xchg   edi,eax
  41868e:	in     al,0x8c
  418690:	sbb    DWORD PTR [edx-0x4f00fd49],ebx
  418696:	fadd   st,st(5)
  418698:	or     al,0x8
  41869a:	ins    BYTE PTR es:[edi],dx
  41869b:	fisttp QWORD PTR [ebp+0x54b965b8]
  4186a1:	mov    bh,0xd3
  4186a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186a4:	mul    DWORD PTR [edi]
  4186a6:	test   DWORD PTR [ecx-0x51363cfb],0x6ed3b215
  4186b0:	repnz cwde 
  4186b2:	xchg   DWORD PTR [esi],esp
  4186b4:	ins    BYTE PTR es:[edi],dx
  4186b5:	push   ecx
  4186b6:	push   ss
  4186b7:	mov    dl,0x3e
  4186b9:	mov    eax,0x78df55cf
  4186be:	shl    DWORD PTR [ebx-0x6ee60d1d],1
  4186c4:	pop    esi
  4186c5:	ror    DWORD PTR [ebp+edi*1-0x33],0xeb
  4186ca:	mul    BYTE PTR [edx]
  4186cc:	test   DWORD PTR [edx-0x26],ecx
  4186cf:	jge    0x41872a
  4186d1:	pusha  
  4186d2:	hlt    
  4186d3:	inc    ecx
  4186d4:	fucom  st(0)
  4186d6:	(bad)  
  4186d7:	hlt    
  4186d8:	pusha  
  4186d9:	and    ebx,DWORD PTR [ecx]
  4186db:	retf   
  4186dc:	sub    ah,BYTE PTR [edi-0x2933edc]
  4186e2:	rol    ebx,1
  4186e4:	sub    BYTE PTR [ecx],al
  4186e6:	xchg   ecx,eax
  4186e7:	test   al,0x12
  4186e9:	mov    DWORD PTR [ebx-0x2b],ecx
  4186ec:	mov    ecx,0xde76fb03
  4186f1:	inc    ecx
  4186f2:	retf   0xc1cf
  4186f5:	mov    ecx,0x1a4f26b7
  4186fa:	(bad)  
  4186fb:	push   ds
  4186fc:	mov    DWORD PTR [eax-0x41fd6127],eax
  418702:	pop    ebx
  418703:	stc    
  418704:	lds    ebp,FWORD PTR [edx]
  418706:	mov    dh,0xed
  418708:	out    dx,al
  418709:	aas    
  41870a:	xor    BYTE PTR [ecx-0x27],dh
  41870d:	iret   
  41870e:	enter  0xd77e,0xc
  418712:	fsubr  QWORD PTR [ecx+0x31]
  418715:	xor    bl,BYTE PTR [ebp+eiz*2-0x58]
  418719:	imul   ebp,DWORD PTR [bx+di],0x4f98027b
  418720:	pop    eax
  418721:	mov    ch,0x77
  418723:	pop    ecx
  418724:	test   eax,0x4dfc9b42
  418729:	push   DWORD PTR [edi]
  41872b:	mov    ds:0x59f6cc3a,eax
  418730:	inc    ebp
  418731:	ret    
  418732:	cwde   
  418733:	stc    
  418734:	fstp   DWORD PTR [edx-0x53]
  418737:	shl    DWORD PTR [eax+ecx*4],1
  41873a:	mov    ds:0x1545c4ea,eax
  41873f:	or     al,0x87
  418741:	push   eax
  418742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418743:	xchg   ecx,eax
  418744:	jmp    0xd335:0x4a1c8822
  41874b:	inc    esp
  41874c:	fbstp  TBYTE PTR [esi+0x33c95741]
  418752:	sub    al,BYTE PTR [edx-0x5a6ceba6]
  418758:	mov    ebp,0x304d0908
  41875d:	dec    ebp
  41875e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41875f:	dec    edi
  418760:	repz push ecx
  418762:	push   esi
  418763:	jp     0x4187bb
  418765:	pop    ecx
  418766:	fst    DWORD PTR [esp+edi*1+0x2c]
  41876a:	outs   dx,BYTE PTR ds:[esi]
  41876b:	in     al,dx
  41876c:	pushf  
  41876d:	ret    
  41876e:	cld    
  41876f:	ins    DWORD PTR es:[edi],dx
  418770:	(bad)  
  418771:	daa    
  418772:	adc    BYTE PTR [esi],bl
  418774:	adc    edx,DWORD PTR [ecx-0x7b]
  418777:	mov    dl,0x3a
  418779:	stc    
  41877a:	(bad)  
  41877b:	repnz ins BYTE PTR es:[edi],dx
  41877d:	test   BYTE PTR [edx],bh
  41877f:	mov    eax,0x11f34cfd
  418784:	jecxz  0x4187b7
  418786:	add    esp,DWORD PTR [eax]
  418788:	inc    edx
  418789:	dec    esi
  41878a:	and    BYTE PTR [ebx+0x7c],dl
  41878d:	mov    edi,0x5e889c58
  418792:	ds call 0x7821de47
  418798:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41879a:	pop    esi
  41879b:	outs   dx,DWORD PTR ds:[esi]
  41879c:	icebp  
  41879d:	lock fcom QWORD PTR [eax+0x2353b7f3]
  4187a4:	jne    0x4187e3
  4187a6:	stos   DWORD PTR es:[edi],eax
  4187a7:	cmp    DWORD PTR [edi],edi
  4187a9:	clc    
  4187aa:	call   0x7e13dc51
  4187af:	xchg   DWORD PTR [eax+0x24],edx
  4187b2:	or     ebx,eax
  4187b4:	xchg   ebp,eax
  4187b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187b6:	out    0xcf,al
  4187b8:	(bad)  
  4187b9:	jmp    0xe5c09b1f
  4187be:	popa   
  4187bf:	cmp    eax,0xaacc1d60
  4187c4:	mov    dl,0xf9
  4187c6:	sbb    BYTE PTR [esi+0xb6a6ef8],ah
  4187cc:	push   esi
  4187cd:	ja     0x41876d
  4187cf:	bound  edx,QWORD PTR [ebp-0x76]
  4187d2:	cmp    ebp,DWORD PTR [edi+eiz*4-0x6ec50a2d]
  4187d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187da:	repz mov al,ss:0xa6e5821b
  4187e1:	mov    DWORD PTR [edx],eax
  4187e3:	ja     0x4187e0
  4187e5:	ss jmp 0x9891:0x421277e3
  4187ed:	ror    BYTE PTR [edi],1
  4187ef:	cmp    BYTE PTR [ecx],ch
  4187f1:	mov    cl,0xe1
  4187f3:	push   ecx
  4187f4:	aaa    
  4187f5:	add    cl,BYTE PTR ds:0x28919558
  4187fb:	mov    cl,0x46
  4187fd:	loopne 0x418856
  4187ff:	scas   eax,DWORD PTR es:[edi]
  418800:	mov    bl,0x95
  418802:	sub    ah,BYTE PTR ds:0xef1e794c
  418808:	ret    
  418809:	sbb    eax,0xa028db34
  41880e:	xor    ah,BYTE PTR [edi+0x72de480e]
  418814:	sbb    edx,DWORD PTR [ecx]
  418816:	rcl    BYTE PTR [edi+0x364605],0x0
  41881d:	adc    ecx,0x7ace
  418823:	xor    eax,0x3e2e
  418828:	xor    ecx,0x4b71
  41882e:	and    eax,edx
  418830:	mov    DWORD PTR [esp+0x88],eax
  418837:	and    ecx,ebx
  418839:	mov    DWORD PTR [esp+0x8c],ecx
  418840:	mov    DWORD PTR [esp+0x50],0x18d6
  418848:	mov    DWORD PTR [esp+0x54],0x2bb4
  418850:	mov    DWORD PTR [esp+0x48],0x14
  418858:	mov    DWORD PTR [esp+0x4c],0x0
  418860:	mov    DWORD PTR [esp+0x30],0x1
  418868:	mov    DWORD PTR [esp+0x34],0x0
  418870:	mov    DWORD PTR [esp+0x10],0xa87
  418878:	mov    DWORD PTR [esp+0x14],0x7fd9
  418880:	jmp    0x418add
  418885:	mov    dh,0xe5
  418887:	jmp    0x836c:0xb814b913
  41888e:	adc    DWORD PTR [esi+0x5accf990],ebx
  418894:	rcl    DWORD PTR [ebx-0xd],1
  418897:	sar    BYTE PTR [esi-0x41413dcb],0x66
  41889e:	ret    
  41889f:	cmp    ecx,ebx
  4188a1:	std    
  4188a2:	test   eax,0x7ad573a1
  4188a7:	jne    0x41890d
  4188a9:	adc    al,0x75
  4188ab:	push   eax
  4188ac:	xchg   edx,eax
  4188ad:	repz lahf 
  4188af:	mov    eax,ds:0xeddaf781
  4188b4:	xchg   ebp,eax
  4188b5:	call   0x4a330b76
  4188ba:	xchg   esi,eax
  4188bb:	adc    BYTE PTR [edi],dl
  4188bd:	add    eax,0xc4e505d2
  4188c2:	mov    esi,cr6
  4188c5:	mov    cl,0xe3
  4188c7:	push   edi
  4188c8:	pop    esi
  4188c9:	je     0x418932
  4188cb:	dec    ebp
  4188cc:	jge    0x4188fc
  4188ce:	mov    eax,0x3a0a27f5
  4188d3:	xchg   DWORD PTR [eax+0x6739d659],edi
  4188d9:	inc    esp
  4188da:	mov    cl,0xd6
  4188dc:	pushf  
  4188dd:	retf   
  4188de:	mov    ds:0x17ba5cf1,eax
  4188e3:	push   ebp
  4188e4:	mov    esi,0x2051f183
  4188e9:	mov    esi,0x4cbc024b
  4188ee:	rol    DWORD PTR [ebx+0x791a2178],1
  4188f4:	ret    0xdbad
  4188f7:	or     eax,0x5831f830
  4188fc:	shr    DWORD PTR [edi],0x7d
  4188ff:	xor    al,0xa7
  418901:	rcl    BYTE PTR [esi-0x1],0xe2
  418905:	push   cs
  418906:	call   0x7e41d236
  41890b:	rol    DWORD PTR [ecx-0xf],1
  41890e:	lds    edx,FWORD PTR [edi+0x24]
  418911:	xchg   esi,eax
  418912:	retf   0x5195
  418915:	xchg   esp,eax
  418916:	pusha  
  418917:	pop    ebx
  418918:	jae    0x4188a3
  41891a:	scas   al,BYTE PTR es:[edi]
  41891b:	call   0xdef54be7
  418920:	adc    al,0x96
  418922:	mov    edx,0xc34de938
  418927:	sbb    eax,DWORD PTR [edx-0x64b66208]
  41892d:	pop    ebx
  41892e:	xor    BYTE PTR [edx-0x53],cl
  418931:	aas    
  418932:	dec    ebx
  418933:	mov    dh,0xfc
  418935:	add    ax,0x28c8
  418939:	stc    
  41893a:	nop
  41893b:	pop    eax
  41893c:	ins    BYTE PTR es:[edi],dx
  41893d:	dec    ecx
  41893e:	dec    ecx
  41893f:	out    0x34,al
  418941:	pop    ebx
  418942:	cmp    bl,ch
  418944:	imul   ebx,DWORD PTR [ecx+0x1b],0x941647b2
  41894b:	mov    cl,0x4b
  41894d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41894e:	mov    ebp,0xe3ce3bf1
  418953:	and    eax,0xba011c11
  418958:	jmp    0x8db:0x797f378f
  41895f:	fs push es
  418961:	frstor [ebp+0x96838a6]
  418967:	mov    ch,0x7
  418969:	sbb    edi,0xd326b5c8
  41896f:	lods   al,BYTE PTR ds:[esi]
  418970:	mov    ebp,0xbc8b2085
  418975:	cmp    DWORD PTR [ebx-0x204370d5],0xffffffef
  41897c:	sbb    al,0x57
  41897e:	dec    ebx
  41897f:	pusha  
  418980:	je     0x4189c4
  418982:	stos   DWORD PTR es:[edi],eax
  418983:	outs   dx,BYTE PTR ds:[esi]
  418984:	(bad)  
  418985:	scas   eax,DWORD PTR es:[edi]
  418986:	das    
  418987:	in     eax,0xd0
  418989:	mov    bh,0xd2
  41898b:	mov    eax,ds:0x4b5ce1c4
  418990:	inc    ebx
  418991:	js     0x418974
  418993:	mov    ds:0x698022c2,al
  418998:	imul   BYTE PTR [esi]
  41899a:	mov    eax,0x9e9d4a38
  41899f:	adc    al,0xe2
  4189a1:	les    esp,FWORD PTR [edi+0x48932a68]
  4189a7:	and    esp,DWORD PTR [ebx+0x5f02344d]
  4189ad:	xchg   esp,eax
  4189ae:	jbe    0x418988
  4189b0:	test   al,0x28
  4189b2:	dec    eax
  4189b3:	cld    
  4189b4:	push   cs
  4189b5:	mov    DWORD PTR [esi-0x4d953e31],0xb382c5ad
  4189bf:	addr16 aad 0x62
  4189c2:	les    eax,FWORD PTR [ebp+0x758b3d0e]
  4189c8:	daa    
  4189c9:	dec    eax
  4189ca:	push   ebx
  4189cb:	inc    edi
  4189cc:	sbb    edx,DWORD PTR [ecx+0x6e]
  4189cf:	sbb    ebx,DWORD PTR es:[esi-0x5a277382]
  4189d6:	add    BYTE PTR [ebp+0x5b1df8c6],0x25
  4189dd:	xchg   esp,eax
  4189de:	lock and al,0x48
  4189e1:	or     BYTE PTR [edi+0x72a2b61c],ch
  4189e7:	mov    ds:0xfa809933,eax
  4189ec:	stc    
  4189ed:	mov    dh,0x48
  4189ef:	sbb    bh,ch
  4189f1:	dec    ebp
  4189f2:	adc    esp,esp
  4189f4:	stos   DWORD PTR es:[edi],eax
  4189f5:	cmc    
  4189f6:	sub    DWORD PTR [ebx+0x14],esp
  4189f9:	stc    
  4189fa:	cli    
  4189fb:	stc    
  4189fc:	sub    al,0x3a
  4189fe:	inc    esp
  4189ff:	inc    esp
  418a00:	mov    DWORD PTR [esi+0x25],ecx
  418a03:	and    al,0xdd
  418a05:	pop    ss
  418a06:	gs dec ebp
  418a08:	iret   
  418a09:	mov    dh,0x6c
  418a0b:	cwde   
  418a0c:	add    eax,0x566b139a
  418a11:	fstp   QWORD PTR [esi+0x1caab9f1]
  418a17:	sub    ch,bl
  418a19:	jmp    0x1c32c066
  418a1e:	mov    eax,ds:0x77edb5e7
  418a23:	add    esp,DWORD PTR [ebx-0x31]
  418a26:	aad    0x7a
  418a28:	call   0x819c094c
  418a2d:	iret   
  418a2e:	ror    BYTE PTR [esi-0x6dc58e5e],1
  418a34:	mov    esp,0x7a0133c9
  418a39:	ds inc eax
  418a3b:	add    DWORD PTR [ecx+0x3e],0x460ce55a
  418a42:	or     eax,0x40b1b642
  418a47:	retf   
  418a48:	adc    ah,ch
  418a4a:	les    esp,FWORD PTR [esi-0x7c]
  418a4d:	fs mov dh,0x34
  418a50:	gs (bad) 
  418a52:	das    
  418a53:	lods   al,BYTE PTR ds:[esi]
  418a54:	jg     0x418a69
  418a56:	inc    edx
  418a57:	push   cs
  418a58:	out    dx,al
  418a59:	arpl   WORD PTR [esi],sp
  418a5b:	lds    esp,FWORD PTR [ebp+0x2a46138f]
  418a61:	inc    eax
  418a62:	mov    ebp,0x5e096ae2
  418a67:	retf   
  418a68:	cmp    al,0x4e
  418a6a:	call   0xb34:0xe70548fd
  418a71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a72:	add    BYTE PTR [edx-0x75],dl
  418a75:	mov    gs,WORD PTR [eax+0x34ef705d]
  418a7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a7c:	repnz mov al,ds:0xdbbea1f0
  418a82:	lods   eax,DWORD PTR ds:[esi]
  418a83:	repz rcl DWORD PTR [esi-0x1a],cl
  418a87:	jnp    0x418aac
  418a89:	pop    es
  418a8a:	test   al,0x32
  418a8c:	lock push ss
  418a8e:	cmc    
  418a8f:	(bad)  
  418a90:	mov    ebp,DWORD PTR [esi]
  418a92:	sbb    eax,0xfabe66d3
  418a97:	lods   eax,DWORD PTR ds:[esi]
  418a98:	xlat   BYTE PTR ds:[ebx]
  418a99:	jnp    0x418a93
  418a9b:	xchg   ebx,eax
  418a9c:	cmp    BYTE PTR [ebx-0x7071ba1b],ah
  418aa2:	aad    0xc8
  418aa4:	ror    BYTE PTR [edi],0xbf
  418aa7:	sbb    DWORD PTR ds:[esi+ecx*1],edi
  418aab:	jb     0x418a3e
  418aad:	dec    esi
  418aae:	push   eax
  418aaf:	and    eax,0xf62d5873
  418ab4:	cli    
  418ab5:	pop    eax
  418ab6:	out    0xb8,eax
  418ab8:	push   ebx
  418ab9:	mov    al,0x30
  418abb:	not    BYTE PTR [eax-0x5b]
  418abe:	cmp    ch,BYTE PTR [eax]
  418ac0:	sub    eax,0x114edc2f
  418ac5:	fwait
  418ac6:	test   DWORD PTR [esi-0x6a9cf34b],ebx
  418acc:	ret    0x6c30
  418acf:	(bad)  
  418ad0:	mov    esi,0x92da1c11
  418ad5:	cld    
  418ad6:	lea    ecx,[eax-0x1370d81c]
  418adc:	xchg   edx,eax
  418add:	mov    eax,DWORD PTR [esp+0x10]
  418ae1:	mov    ecx,DWORD PTR [esp+0x14]
  418ae5:	push   0x2
  418ae7:	push   0x7f349462
  418aec:	xor    ecx,0x3601
  418af2:	xor    eax,0x5491
  418af7:	push   ecx
  418af8:	push   eax
  418af9:	call   0x42227d
  418afe:	mov    ecx,DWORD PTR [esp+0x30]
  418b02:	mov    ebx,DWORD PTR [esp+0x34]
  418b06:	push   ebx
  418b07:	push   ecx
  418b08:	push   edx
  418b09:	push   eax
  418b0a:	call   0x42227d
  418b0f:	mov    ecx,DWORD PTR [esp+0x48]
  418b13:	mov    ebx,DWORD PTR [esp+0x4c]
  418b17:	jmp    0x418d74
  418b1c:	jp     0x418ac4
  418b1e:	cld    
  418b1f:	dec    eax
  418b20:	cmp    al,0x9c
  418b22:	jp     0x418ae0
  418b24:	js     0x418b9b
  418b26:	push   esp
  418b27:	sahf   
  418b28:	dec    ecx
  418b29:	add    cl,bh
  418b2b:	nop
  418b2c:	retf   
  418b2d:	test   eax,0xbec235be
  418b33:	mov    esi,0xc4fdea28
  418b38:	or     DWORD PTR [ecx+0x27],esi
  418b3b:	pop    esi
  418b3c:	mov    dl,0x5f
  418b3e:	aaa    
  418b3f:	fst    DWORD PTR [ebx+0x4e]
  418b42:	out    dx,al
  418b43:	push   edx
  418b44:	jb     0x418aec
  418b46:	jp     0x418b95
  418b48:	lds    edi,FWORD PTR [ebp-0x67]
  418b4b:	xchg   ecx,eax
  418b4d:	sar    DWORD PTR [ecx+0x5acaa708],cl
  418b53:	sbb    eax,0xfcd9f36
  418b58:	aas    
  418b59:	mov    ebp,0x7c40779b
  418b5e:	(bad)  
  418b5f:	call   0x23996c71
  418b64:	mov    bh,0x16
  418b66:	push   0xeb4a60d4
  418b6b:	xchg   ecx,edx
  418b6d:	fwait
  418b6e:	jmp    0x418b58
  418b70:	xchg   esi,eax
  418b71:	je     0x418ba4
  418b73:	push   esp
  418b74:	mov    bh,0xaf
  418b76:	jne    0x418bf1
  418b78:	dec    ecx
  418b79:	aaa    
  418b7a:	je     0x418b05
  418b7c:	jg     0x418bd3
  418b7e:	pushf  
  418b7f:	or     al,BYTE PTR [ecx+0x3b2a27ee]
  418b85:	daa    
  418b86:	les    ecx,FWORD PTR gs:[edi+0x31837f2c]
  418b8d:	lods   al,BYTE PTR ds:[esi]
  418b8e:	or     al,BYTE PTR [esi+0x544d1794]
  418b94:	adc    dh,ah
  418b96:	lods   eax,DWORD PTR ds:[esi]
  418b97:	out    dx,eax
  418b98:	lock cli 
  418b9a:	and    BYTE PTR [esi],al
  418b9c:	test   DWORD PTR [ebx-0x479ede20],esi
  418ba2:	jns    0x418b8f
  418ba4:	mov    BYTE PTR [esi],dh
  418ba6:	cld    
  418ba7:	je     0x418b97
  418ba9:	outs   dx,BYTE PTR ds:[esi]
  418baa:	outs   dx,DWORD PTR ds:[esi]
  418bab:	popf   
  418bac:	pushf  
  418bad:	push   ecx
  418bae:	mov    esi,0xdf668d6
  418bb3:	and    BYTE PTR [ebx+0x2042e628],0x40
  418bba:	cmp    BYTE PTR [esp+ebx*1-0x66],ch
  418bbe:	into   
  418bbf:	sbb    al,0xc5
  418bc1:	cmp    DWORD PTR [ebp+0x2494fdc3],esi
  418bc7:	aam    0xf0
  418bc9:	neg    esp
  418bcb:	retf   0xa74
  418bce:	adc    DWORD PTR ds:0x7bb230c,eax
  418bd4:	(bad)
  418bd7:	mov    ebx,0x6f453dd0
  418bdc:	fimul  WORD PTR [eax+0x36e7d40c]
  418be2:	push   esp
  418be3:	enter  0xe6db,0xb0
  418be7:	sbb    BYTE PTR [edi-0x25189fae],al
  418bed:	dec    esi
  418bee:	icebp  
  418bef:	sbb    DWORD PTR [eax-0x158b4a2b],ecx
  418bf5:	mov    eax,0x6e7b0d12
  418bfa:	out    dx,al
  418bfb:	mov    ebx,0x31a46269
  418c00:	stos   BYTE PTR es:[edi],al
  418c01:	out    dx,al
  418c02:	gs jnp 0x418c45
  418c05:	out    dx,eax
  418c06:	lods   al,BYTE PTR ds:[esi]
  418c07:	dec    ebp
  418c08:	mov    eax,0xf7f11b72
  418c0d:	sbb    esp,DWORD PTR [edi-0x4d257af8]
  418c13:	xchg   esp,eax
  418c14:	jns    0x418c88
  418c16:	inc    esp
  418c17:	cmp    al,0xe6
  418c19:	stos   BYTE PTR es:[edi],al
  418c1a:	les    eax,FWORD PTR [edx-0x5f1d7454]
  418c20:	cmp    al,0xa7
  418c22:	mov    ah,BYTE PTR [edi-0x1cb76faa]
  418c28:	sbb    bl,BYTE PTR [ebp+0x6d]
  418c2b:	and    DWORD PTR [edx-0x62dfc825],edi
  418c31:	sar    BYTE PTR [edi+0x18],1
  418c34:	mov    edx,0x802a309c
  418c39:	mov    cl,0x4c
  418c3b:	add    BYTE PTR [edi+0xd],dh
  418c3e:	jge    0x418bc9
  418c40:	xchg   ecx,eax
  418c41:	cmp    al,0x74
  418c43:	sub    DWORD PTR [eax-0x39abf76c],ecx
  418c49:	popa   
  418c4a:	imul   eax,edi,0x47ff36a0
  418c50:	imul   esp,DWORD PTR [ebp+0xe913aec],0xffffffb8
  418c57:	scas   al,BYTE PTR es:[edi]
  418c58:	fnstsw WORD PTR [edx+0x23]
  418c5b:	xchg   esi,eax
  418c5c:	mov    al,ds:0x75da4bc6
  418c61:	cmp    al,0x2c
  418c63:	data16 mov bl,0x52
  418c66:	jns    0x418c64
  418c68:	sub    ah,BYTE PTR [ecx+0x40]
  418c6b:	aas    
  418c6c:	fs ss aaa 
  418c6f:	and    ebx,DWORD PTR [ebx-0x20]
  418c72:	xchg   edi,eax
  418c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c74:	in     eax,0x85
  418c76:	inc    esp
  418c77:	sbb    al,0x3d
  418c79:	add    dl,BYTE PTR [ebp-0x31c98f14]
  418c7f:	xchg   esp,eax
  418c80:	sub    DWORD PTR [esi],0x5d
  418c83:	ins    BYTE PTR es:[edi],dx
  418c84:	mov    ebp,0xcffb9536
  418c89:	and    ah,ch
  418c8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c8c:	adc    ch,cl
  418c8e:	jb     0x418cc2
  418c90:	sbb    bh,BYTE PTR [esi-0x6d71188b]
  418c96:	or     dh,BYTE PTR [esi+0x4685a9ba]
  418c9c:	retf   
  418c9d:	push   0xd553e268
  418ca2:	and    BYTE PTR [edx],0xa8
  418ca5:	mov    ebp,0x4c43b026
  418caa:	add    eax,0xadbc2696
  418caf:	pop    ss
  418cb0:	push   eax
  418cb1:	dec    ebx
  418cb2:	lahf   
  418cb3:	cmp    eax,0x78c1d7d8
  418cb8:	mov    ds:0x60e49800,eax
  418cbd:	pop    eax
  418cbe:	push   edi
  418cbf:	xchg   edx,eax
  418cc0:	pop    ds
  418cc1:	fwait
  418cc2:	scas   al,BYTE PTR es:[edi]
  418cc3:	pop    eax
  418cc4:	sub    cl,BYTE PTR [edx+0x49]
  418cc7:	int    0xc0
  418cc9:	retf   
  418cca:	sub    DWORD PTR [edi+0x28],ecx
  418ccd:	sub    BYTE PTR [eax-0x6f8e3319],cl
  418cd3:	mov    bh,0x21
  418cd5:	inc    eax
  418cd6:	lahf   
  418cd7:	sub    bh,ch
  418cd9:	jae    0x418cd9
  418cdb:	shl    edx,cl
  418cdd:	or     al,BYTE PTR [ebp+0x2bbf1d16]
  418ce3:	or     eax,0x5a970c28
  418ce8:	mov    al,ds:0xb157d6e6
  418ced:	lds    edi,FWORD PTR [edx-0x6beb1df]
  418cf3:	mov    ebx,0x724fc5da
  418cf8:	mov    ah,0x70
  418cfa:	ret    
  418cfb:	mov    ecx,0x49a252e8
  418d00:	push   edx
  418d01:	sub    eax,ebx
  418d03:	jae    0x418cc5
  418d05:	jae    0x418d0f
  418d07:	inc    esi
  418d08:	add    eax,0x724e31e8
  418d0d:	jmp    0x418d46
  418d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d10:	cld    
  418d11:	push   esi
  418d12:	mov    edx,DWORD PTR [eax+0x40]
  418d15:	xchg   ebp,eax
  418d16:	stos   BYTE PTR es:[edi],al
  418d17:	repz stc 
  418d19:	les    edx,FWORD PTR [esi+esi*1]
  418d1c:	xchg   DWORD PTR [eax+ebp*4-0x70],ebp
  418d20:	mov    ecx,0xb08fa5c5
  418d25:	dec    ebx
  418d26:	jge    0x418d10
  418d28:	fisttp QWORD PTR [esi]
  418d2a:	dec    esp
  418d2b:	add    al,0x8f
  418d2d:	xchg   ecx,eax
  418d2e:	push   edi
  418d2f:	xchg   ecx,eax
  418d30:	cmp    ah,al
  418d32:	fsub   DWORD PTR [esi]
  418d34:	pusha  
  418d35:	cdq    
  418d36:	f2xm1  
  418d38:	cmp    DWORD PTR [edx+0x1],edi
  418d3b:	(bad)  [ebx+edx*1]
  418d3e:	push   0x95515836
  418d43:	pushf  
  418d44:	adc    al,0x7c
  418d46:	test   edx,eax
  418d48:	cld    
  418d49:	cdq    
  418d4a:	or     al,0xfa
  418d4c:	mov    DWORD PTR [ecx+edx*2-0x12],eax
  418d50:	int    0x45
  418d52:	inc    ebx
  418d53:	int    0xbe
  418d55:	or     eax,0x486cea8f
  418d5a:	xchg   esi,eax
  418d5b:	shl    DWORD PTR [edx+0x34],0x6e
  418d5f:	stc    
  418d60:	ds mov ebx,0x224ca431
  418d66:	push   esp
  418d67:	call   0xe901:0x93f32c3a
  418d6e:	daa    
  418d6f:	lock mov ebx,0x5319762f
  418d75:	push   ecx
  418d76:	push   edx
  418d77:	push   eax
  418d78:	call   0x42227d
  418d7d:	mov    ecx,DWORD PTR [esp+0x50]
  418d81:	mov    ebx,DWORD PTR [esp+0x54]
  418d85:	add    eax,ecx
  418d87:	mov    ecx,DWORD PTR [esp+0x88]
  418d8e:	adc    edx,ebx
  418d90:	jmp    0x418fed
  418d95:	jmp    0x6c98:0xba87068d
  418d9c:	mov    bl,0x37
  418d9e:	cmc    
  418d9f:	mov    esp,0x4cbbcba4
  418da4:	xchg   edx,eax
  418da5:	inc    esp
  418da6:	sti    
  418da7:	sar    BYTE PTR [esi-0x41413dcb],0x20
  418dae:	jg     0x418da3
  418db0:	fimul  DWORD PTR [ebp-0x4a]
  418db3:	(bad)  
  418db4:	js     0x418db0
  418db6:	sbb    al,0x6e
  418db8:	icebp  
  418db9:	adc    edx,0x5d
  418dbc:	xchg   edi,eax
  418dbd:	push   esp
  418dbe:	es inc eax
  418dc0:	call   0x7c8fad3a
  418dc5:	fwait
  418dc6:	sub    ebx,DWORD PTR [ecx-0x5d18a965]
  418dcc:	dec    ebx
  418dcd:	or     DWORD PTR [ecx+eiz*2+0x40115698],edx
  418dd4:	(bad)  
  418dd5:	and    eax,0xce3c9885
  418dda:	int3   
  418ddb:	cli    
  418ddc:	mov    bh,BYTE PTR ds:[esi]
  418ddf:	shl    DWORD PTR [edx+0x56566eae],cl
  418de5:	pushf  
  418de6:	jl     0x418e50
  418de8:	leave  
  418de9:	pop    eax
  418dea:	out    0xdd,al
  418dec:	addr16 pop edi
  418dee:	mov    dh,0x8a
  418df0:	push   cs
  418df1:	pop    ebx
  418df2:	data16 int 0x71
  418df5:	bound  esp,QWORD PTR [eax]
  418df7:	jno    0x418e40
  418df9:	repnz int3 
  418dfb:	add    esp,DWORD PTR [edi-0x6d]
  418dfe:	add    ch,ah
  418e00:	outs   dx,DWORD PTR ds:[esi]
  418e01:	pop    ds
  418e02:	jmp    0x828202d6
  418e07:	aad    0x33
  418e09:	jns    0x418e2c
  418e0b:	sub    ecx,DWORD PTR [edi-0x8]
  418e0e:	fisubr WORD PTR [edx+edx*8+0x70]
  418e12:	mov    eax,ds:0x31ccfdf3
  418e17:	fs add al,0xfc
  418e1a:	(bad)  
  418e1c:	or     esp,DWORD PTR [ecx]
  418e1e:	mov    BYTE PTR [edx-0x4547772d],bh
  418e24:	and    edx,ebx
  418e26:	inc    eax
  418e27:	jle    0x418dee
  418e29:	pusha  
  418e2a:	enter  0x62a4,0xcb
  418e2e:	push   ebx
  418e2f:	sub    al,0xdd
  418e31:	sub    eax,0x804bea45
  418e36:	mov    ds:0x7e98682,eax
  418e3b:	repnz cs push esp
  418e3e:	push   es
  418e3f:	dec    ebp
  418e40:	jae    0x418e1a
  418e42:	sub    eax,0x6c744b4
  418e47:	jo     0x418e36
  418e49:	push   esi
  418e4a:	call   0x5f62:0x262544b5
  418e51:	and    dh,BYTE PTR [ecx+0x1e]
  418e54:	outs   dx,BYTE PTR ds:[esi]
  418e55:	inc    eax
  418e56:	jns    0x418ec4
  418e58:	jl     0x418dea
  418e5a:	jmp    0xf96781ec
  418e5f:	repz jge 0x418ebe
  418e62:	fdivr  QWORD PTR [ecx+eiz*8]
  418e65:	cld    
  418e66:	push   edx
  418e67:	loopne 0x418e16
  418e69:	leave  
  418e6a:	fistp  QWORD PTR [edi]
  418e6c:	mov    ds:0xa1fb029d,eax
  418e71:	test   al,0x1e
  418e73:	out    0x3f,eax
  418e75:	pop    edx
  418e76:	lahf   
  418e77:	and    al,0x7a
  418e79:	stos   DWORD PTR es:[edi],eax
  418e7a:	lods   al,BYTE PTR ds:[esi]
  418e7b:	cmp    edx,esp
  418e7d:	adc    esp,DWORD PTR [ecx]
  418e7f:	inc    esp
  418e80:	mov    ah,0xae
  418e82:	ds popf 
  418e84:	(bad)  
  418e85:	cmp    ch,ah
  418e87:	adc    BYTE PTR [edx+0x40],ah
  418e8a:	shl    DWORD PTR [edx-0x64124836],cl
  418e90:	dec    edx
  418e91:	gs daa 
  418e93:	ds xchg esp,eax
  418e95:	mov    bl,0xea
  418e97:	sbb    eax,0x4574deea
  418e9c:	pop    eax
  418e9d:	mov    BYTE PTR [edi+0x77],ah
  418ea0:	call   0x2f5b:0xbdea7b1e
  418ea7:	mov    ecx,0x9e291a3e
  418eac:	or     ah,BYTE PTR [eax-0x68de3120]
  418eb2:	icebp  
  418eb3:	and    edx,DWORD PTR [edi]
  418eb5:	and    eax,ebp
  418eb7:	xor    ah,BYTE PTR [esi]
  418eb9:	stos   BYTE PTR es:[edi],al
  418eba:	retf   0x98b6
  418ebd:	int    0x51
  418ebf:	mov    cs,WORD PTR [ebp+0x3db28f9e]
  418ec5:	xor    bl,bh
  418ec7:	inc    eax
  418ec8:	push   0xffffffe9
  418eca:	pusha  
  418ecb:	cwde   
  418ecc:	lods   al,BYTE PTR ds:[esi]
  418ecd:	pop    ss
  418ece:	inc    edx
  418ecf:	lods   eax,DWORD PTR ds:[esi]
  418ed0:	enter  0x6a,0xd9
  418ed4:	jmp    0x418f51
  418ed6:	jnp    0x418f29
  418ed8:	imul   edi,DWORD PTR [edx+0x59a9c31a],0x2a
  418edf:	test   al,0x7b
  418ee1:	retf   0xa839
  418ee4:	and    DWORD PTR [edx+0x50],ebx
  418ee7:	push   esi
  418ee8:	ins    BYTE PTR es:[edi],dx
  418ee9:	dec    ebp
  418eea:	push   0x7d3afc27
  418eef:	imul   esi
  418ef1:	inc    esi
  418ef2:	or     BYTE PTR ds:0xe2d4a9c9,ah
  418ef8:	xchg   ebp,eax
  418ef9:	std    
  418efa:	and    al,0x94
  418efc:	dec    ecx
  418efd:	pushf  
  418efe:	test   al,0xd0
  418f00:	jnp    0x418eea
  418f02:	rol    BYTE PTR [eax+0x31],cl
  418f05:	stos   DWORD PTR es:[edi],eax
  418f06:	adc    al,BYTE PTR [ecx+eiz*8+0x41]
  418f0a:	xor    al,cl
  418f0c:	jmp    0x418f32
  418f0e:	sbb    edi,ebp
  418f10:	enter  0xd809,0xd8
  418f14:	fdivr  DWORD PTR [esi]
  418f16:	sbb    DWORD PTR ds:0xd3dd35f4,edx
  418f1c:	sahf   
  418f1d:	mov    ?,WORD PTR [ebx-0x37]
  418f20:	rol    BYTE PTR [edx],1
  418f22:	sbb    eax,0x31ebc08c
  418f27:	stc    
  418f28:	test   al,0x5d
  418f2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f2b:	mov    dl,0xf6
  418f2d:	cdq    
  418f2e:	dec    edx
  418f2f:	sub    cl,ah
  418f31:	add    edi,DWORD PTR [edi-0x643570a]
  418f37:	icebp  
  418f38:	sbb    DWORD PTR [edi-0x48],ebx
  418f3b:	rcr    DWORD PTR [ecx+0x73f86af5],cl
  418f41:	pop    ecx
  418f42:	fist   WORD PTR [edx-0x4aaa63b3]
  418f48:	imul   ebp,edi,0x74
  418f4b:	cld    
  418f4c:	ret    0x6eb6
  418f4f:	(bad)  
  418f50:	div    ch
  418f52:	lods   al,BYTE PTR ds:[esi]
  418f53:	sub    edx,DWORD PTR [ecx+0x15]
  418f56:	cdq    
  418f57:	outs   dx,DWORD PTR ds:[esi]
  418f58:	jmp    0xbe4d:0xfb7760b3
  418f5f:	mov    dl,0x52
  418f61:	dec    edx
  418f62:	mov    dh,0x8c
  418f64:	cdq    
  418f65:	lock mov ebp,0xb054b47e
  418f6b:	das    
  418f6c:	cli    
  418f6d:	retf   
  418f6e:	xor    BYTE PTR [esp+eiz*4+0x30],cl
  418f72:	sub    al,0x90
  418f74:	hlt    
  418f75:	jno    0x418f54
  418f77:	fs daa 
  418f79:	mov    cl,0x13
  418f7b:	or     al,0x64
  418f7d:	mov    esi,0x9020ec03
  418f82:	adc    DWORD PTR [edi-0xe],0x5c
  418f86:	in     al,dx
  418f87:	xor    eax,0xd2e6e116
  418f8c:	add    eax,0x8cfcec9f
  418f91:	loopne 0x418f94
  418f93:	daa    
  418f94:	mov    edi,0xd1354611
  418f99:	jnp    0x418fc8
  418f9b:	imul   esp,DWORD PTR [edi-0x6d],0x1c
  418f9f:	and    eax,0xf32dfac7
  418fa4:	call   0xe884:0x2de9181c
  418fab:	shr    DWORD PTR [ebp+ebx*8-0x19],cl
  418faf:	sahf   
  418fb0:	jp     0x418f64
  418fb2:	pop    ebx
  418fb3:	sbb    esp,DWORD PTR [eax+eax*4]
  418fb6:	loopne 0x418f49
  418fb8:	sbb    cl,al
  418fba:	data16 std 
  418fbc:	pop    edx
  418fbd:	cs icebp 
  418fbf:	ins    DWORD PTR es:[edi],dx
  418fc0:	dec    edx
  418fc1:	jecxz  0x418ff4
  418fc3:	leave  
  418fc4:	retf   
  418fc5:	or     eax,0x7d24fe66
  418fca:	std    
  418fcb:	rol    BYTE PTR [ebx+0x381b5375],1
  418fd1:	mov    DWORD PTR [edx-0x688afd3c],ebp
  418fd7:	adc    ebp,DWORD PTR [ebx+0x735abe13]
  418fdd:	sbb    al,0x9c
  418fdf:	shl    BYTE PTR [ecx-0x15],0xac
  418fe3:	lods   al,BYTE PTR ds:[esi]
  418fe4:	inc    esi
  418fe5:	cwde   
  418fe6:	push   esp
  418fe7:	sbb    DWORD PTR [ebp+0x3f1553c5],0xffffff8b
  418fee:	pushf  
  418fef:	and    al,0x8c
  418ff1:	add    BYTE PTR [eax],al
  418ff3:	add    BYTE PTR [ebx],bh
  418ff5:	enter  0x850f,0x8
  418ff9:	add    BYTE PTR [eax],al
  418ffb:	add    BYTE PTR [ebx],bh
  418ffd:	fimul  DWORD PTR [edi]
  418fff:	test   BYTE PTR [ebx],dh
  419001:	sbb    DWORD PTR [eax],eax
  419003:	add    BYTE PTR [ebx-0x74bfdbbc],cl
  419009:	push   esp
  41900a:	and    al,0x18
  41900c:	xor    ecx,ecx
  41900e:	shld   ecx,eax,0x2
  419012:	jmp    0x41926f
  419017:	retf   0xad14
  41901a:	repnz mov eax,0x983c8a74
  419020:	xchg   edx,eax
  419021:	xor    bl,ch
  419023:	mov    eax,ds:0xbcdd4020
  419028:	inc    eax
  41902a:	mov    esi,0xbebec235
  41902f:	test   DWORD PTR [ecx-0x42],esi
  419032:	mov    ch,BYTE PTR [ebp-0x7a31e563]
  419038:	sbb    al,0x8a
  41903a:	and    BYTE PTR [ebx+0x3146700b],bh
  419040:	and    bh,BYTE PTR [eax+0x25d1e2d1]
  419046:	sub    cl,cl
  419048:	adc    eax,0x229f8f45
  41904d:	test   ah,0xd3
  419050:	hlt    
  419051:	jmp    0x11f60b21
  419056:	shr    DWORD PTR [ecx-0xd],cl
  419059:	mov    dh,0xe4
  41905b:	adc    al,0x7e
  41905d:	and    esi,DWORD PTR [esi-0x24de06e]
  419063:	push   ecx
  419064:	sbb    DWORD PTR [edi+0xe06348e],esp
  41906a:	fsub   DWORD PTR [eax+0x1517b00a]
  419070:	mov    ch,0xe8
  419072:	cmp    ebp,0xffffff9f
  419075:	mov    edi,0x90cd3386
  41907a:	push   eax
  41907b:	sub    eax,0xcb2e6d0
  419080:	mov    eax,DWORD PTR [ebx]
  419082:	daa    
  419083:	ins    DWORD PTR es:[edi],dx
  419084:	stc    
  419085:	or     dh,BYTE PTR [ebp+0x32]
  419088:	repnz sbb DWORD PTR [ebp-0x13],edi
  41908c:	iret   
  41908d:	std    
  41908e:	push   es
  41908f:	imul   BYTE PTR [ecx-0x1b754ba4]
  419095:	mov    dl,0x13
  419097:	xchg   DWORD PTR [esi+0x6a44dedf],eax
  41909d:	imul   edx,DWORD PTR [edx],0xffffffd0
  4190a0:	jmp    0xd298:0x5f6f4f3
  4190a7:	cmp    al,0x75
  4190a9:	dec    ebp
  4190aa:	sbb    eax,0xda48bf31
  4190af:	imul   edx,DWORD PTR [eax+0x105773fd],0x51c41977
  4190b9:	mov    dh,0xd2
  4190bb:	aam    0x3f
  4190bd:	inc    esi
  4190be:	loop   0x419128
  4190c0:	out    dx,al
  4190c1:	(bad)  
  4190c2:	or     al,0x1b
  4190c4:	add    al,0xd2
  4190c6:	cmp    ebx,ebx
  4190c8:	adc    al,0xbc
  4190ca:	ficomp DWORD PTR [esi-0x79]
  4190cd:	loope  0x419136
  4190cf:	mov    dh,0x75
  4190d1:	pop    ds
  4190d2:	xor    bh,cl
  4190d4:	and    DWORD PTR [edx-0x36],0x87ad543d
  4190db:	mov    ah,BYTE PTR [ebx]
  4190dd:	mov    ebp,0xc23aa6fd
  4190e2:	sub    esp,ebp
  4190e4:	sub    edi,eax
  4190e6:	mov    WORD PTR [esi+ebp*2+0x12bc957a],es
  4190ed:	popf   
  4190ee:	adc    al,0x85
  4190f0:	dec    esp
  4190f1:	sbb    eax,0xf9e042a5
  4190f6:	push   edi
  4190f7:	sbb    dl,BYTE PTR [ecx+0x10024581]
  4190fd:	jg     0x41914e
  4190ff:	inc    ebx
  419100:	cs cwde 
  419102:	jnp    0x4190fc
  419104:	shl    DWORD PTR [edx-0x253d0d15],cl
  41910a:	xlat   BYTE PTR ds:[ebx]
  41910b:	ins    BYTE PTR es:[edi],dx
  41910c:	jecxz  0x41917e
  41910e:	test   eax,0x3266ecd7
  419113:	(bad)  
  419114:	cmp    ch,bh
  419116:	jne    0x419181
  419118:	dec    ebp
  419119:	pop    ecx
  41911a:	sti    
  41911b:	in     eax,0x5c
  41911d:	push   edi
  41911e:	mov    edx,0x592f2f4c
  419123:	ret    
  419124:	inc    edx
  419125:	sbb    ch,bl
  419127:	jle    0x4190ad
  419129:	pop    esp
  41912a:	jb     0x419144
  41912c:	pop    es
  41912d:	xchg   ebp,eax
  41912e:	cmp    dl,BYTE PTR [esi]
  419130:	out    0xb7,al
  419132:	pop    eax
  419133:	inc    esi
  419134:	push   cs
  419135:	xor    BYTE PTR cs:[ecx+edi*2+0x741f88c7],bh
  41913d:	repnz imul esp,DWORD PTR [di],0x61
  419142:	int    0x1f
  419144:	(bad)  
  419145:	imul   edx
  419147:	fisub  WORD PTR [ecx+0x51]
  41914a:	or     al,0xdc
  41914c:	das    
  41914d:	mov    bh,0x63
  41914f:	into   
  419150:	pop    ds
  419151:	nop
  419152:	mov    edx,0xe4b8cd6b
  419157:	or     cl,BYTE PTR [edi]
  419159:	adc    eax,0x8932831b
  41915e:	jbe    0x419113
  419160:	and    bh,ah
  419162:	ret    
  419163:	mov    edi,0x1d25fa5
  419168:	pop    esp
  419169:	lods   eax,DWORD PTR ds:[esi]
  41916a:	sub    cl,bl
  41916c:	push   es
  41916d:	paddusb mm4,mm2
  419170:	out    dx,al
  419171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419172:	inc    esi
  419173:	fstp   TBYTE PTR [ebx-0x66]
  419176:	jb     0x419196
  419178:	out    dx,eax
  419179:	ins    DWORD PTR es:[edi],dx
  41917a:	gs (bad) 
  41917c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41917d:	jb     0x419156
  41917f:	retf   0x6e45
  419182:	mov    cs,edx
  419184:	test   al,0x5b
  419186:	push   ds
  419187:	int3   
  419188:	in     al,0x76
  41918a:	push   es
  41918b:	push   eax
  41918c:	or     DWORD PTR [ebp+0x1790470a],esp
  419192:	push   cs
  419193:	and    DWORD PTR [ebp+0x7a],ebx
  419196:	cmp    DWORD PTR [edx+0x65dc0078],ebp
  41919c:	fnstcw WORD PTR [ecx-0x6a73fedf]
  4191a2:	add    al,0xff
  4191a4:	inc    esp
  4191a5:	xor    eax,0xad106982
  4191aa:	aad    0x94
  4191ac:	mov    eax,eax
  4191ae:	jecxz  0x419147
  4191b0:	dec    edi
  4191b1:	and    DWORD PTR [edi+0x47],0x595eb98d
  4191b8:	lahf   
  4191b9:	(bad)  
  4191ba:	mov    al,0xcb
  4191bc:	in     al,dx
  4191bd:	repz das 
  4191bf:	(bad)  
  4191c0:	mov    eax,ds:0x6191fae8
  4191c5:	retf   
  4191c6:	lds    edx,FWORD PTR [edi]
  4191c8:	bound  eax,QWORD PTR [edx-0x77c31c48]
  4191ce:	cli    
  4191cf:	xlat   BYTE PTR ds:[ebx]
  4191d0:	ds inc ebx
  4191d2:	mov    ch,0xee
  4191d4:	cmp    BYTE PTR [ebx-0x3d],0x11
  4191d8:	stos   DWORD PTR es:[edi],eax
  4191d9:	add    cl,BYTE PTR [edi]
  4191db:	push   ecx
  4191dc:	mov    cl,0xb0
  4191de:	std    
  4191df:	push   esp
  4191e0:	shr    ebx,1
  4191e2:	xchg   edi,eax
  4191e3:	sbb    DWORD PTR [edx+edi*2],ecx
  4191e6:	xchg   ebp,eax
  4191e7:	cwde   
  4191e8:	pop    ecx
  4191e9:	jbe    0x419186
  4191eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191ec:	jle    0x419180
  4191ee:	adc    DWORD PTR fs:[ebp-0x6c],esp
  4191f2:	mov    ds:0xda98d0ba,al
  4191f7:	cmp    BYTE PTR [ecx+0x69b72213],bh
  4191fd:	lods   al,BYTE PTR ds:[esi]
  4191fe:	in     eax,0x6c
  419200:	cmp    ebp,DWORD PTR [edx+0x46]
  419203:	retf   
  419204:	jmp    0x702c:0x27bc301f
  41920b:	cmp    al,cl
  41920d:	inc    ebp
  41920e:	pop    es
  41920f:	inc    ebx
  419210:	mov    esp,0xec4433be
  419215:	stos   BYTE PTR es:[edi],al
  419216:	xchg   esi,eax
  419217:	xor    DWORD PTR [eax-0x366c8408],esp
  41921d:	scas   al,BYTE PTR es:[edi]
  41921e:	fdiv   QWORD PTR [ebp-0x16]
  419221:	or     BYTE PTR [ecx-0x41],0xcb
  419225:	and    DWORD PTR [edx-0x68eec8f0],ecx
  41922b:	gs dec ebp
  41922d:	mov    es,edx
  41922f:	inc    ecx
  419230:	cmp    edx,DWORD PTR [ebx+eiz*8]
  419233:	pop    eax
  419234:	jg     0x4191ec
  419236:	(bad)  
  419237:	dec    ebx
  419238:	dec    esp
  419239:	push   ebp
  41923a:	jge    0x4191c6
  41923c:	push   edi
  41923d:	pslld  mm3,QWORD PTR [eax-0x2f]
  419241:	mov    esi,0x16f6ff63
  419246:	or     DWORD PTR [esp+ecx*2],edx
  419249:	sbb    BYTE PTR [edx-0x69],bh
  41924c:	jmp    0x42a09d4d
  419251:	pop    ecx
  419252:	(bad)  
  419253:	pop    edx
  419254:	addr16 popf 
  419256:	aas    
  419257:	cld    
  419258:	cli    
  419259:	and    al,0x80
  41925b:	dec    ebp
  41925c:	sbb    BYTE PTR [ecx-0xb42b4bc],bl
  419262:	and    ch,BYTE PTR [ecx]
  419264:	dec    esi
  419265:	xchg   edi,eax
  419266:	sub    edi,DWORD PTR [ebp+ebp*1+0x5]
  41926a:	xchg   edx,ecx
  41926c:	xchg   edi,eax
  41926d:	icebp  
  41926e:	mov    ds:0xbb02e0c1,al
  419273:	jbe    0x41922a
  419275:	jns    0x419242
  419277:	mov    DWORD PTR [esp+0x10],edx
  41927b:	mov    edx,DWORD PTR [esp+0x1c]
  41927f:	xor    eax,ebx
  419281:	xor    ecx,esi
  419283:	mov    DWORD PTR [esp+0x14],edx
  419287:	cmp    eax,DWORD PTR [esp+0x10]
  41928b:	jne    0x419299
  419291:	cmp    ecx,edx
  419293:	je     0x41a93c
  419299:	mov    eax,DWORD PTR [esp+0x44]
  41929d:	cmp    eax,0xa5069baa
  4192a2:	je     0x4192f6
  4192a8:	mov    edx,DWORD PTR [esp+0x18]
  4192ac:	mov    eax,DWORD PTR [esp+0x1c]
  4192b0:	xor    eax,esi
  4192b2:	xor    edx,0xcb79b577
  4192b8:	shrd   edx,eax,0x2
  4192bc:	shr    eax,0x2
  4192bf:	mov    DWORD PTR [esp+0x34],eax
  4192c3:	mov    eax,DWORD PTR [esp+0x18]
  4192c7:	mov    ecx,DWORD PTR [esp+0x1c]
  4192cb:	shl    eax,0x1e
  4192ce:	xor    eax,0x80000000
  4192d3:	or     eax,DWORD PTR [esp+0x34]
  4192d7:	xor    ecx,ecx
  4192d9:	mov    DWORD PTR [esp+0x14],eax
  4192dd:	mov    eax,DWORD PTR [esp+0x60]
  4192e1:	or     ecx,edx
  4192e3:	cdq    
  4192e4:	cmp    ecx,eax
  4192e6:	jne    0x41a93c
  4192ec:	cmp    DWORD PTR [esp+0x14],edx
  4192f0:	jne    0x41a93c
  4192f6:	mov    DWORD PTR [esp+0x5c],0x4227a4
  4192fe:	mov    DWORD PTR [esp+0x68],0x42279c
  419306:	mov    eax,DWORD PTR [esp+0x78]
  41930a:	mov    eax,DWORD PTR [esp+0x78]
  41930e:	mov    edx,DWORD PTR [esp+0x18]
  419312:	xor    ecx,ecx
  419314:	shld   ecx,eax,0x2
  419318:	shl    eax,0x2
  41931b:	mov    DWORD PTR [esp+0x10],edx
  41931f:	mov    edx,DWORD PTR [esp+0x1c]
  419323:	xor    eax,ebx
  419325:	xor    ecx,esi
  419327:	mov    DWORD PTR [esp+0x14],edx
  41932b:	cmp    DWORD PTR [esp+0x10],eax
  41932f:	jne    0x41a5e3
  419335:	cmp    edx,ecx
  419337:	jne    0x41a5e3
  41933d:	mov    DWORD PTR [esp+0x30],0x42272c
  419345:	mov    eax,DWORD PTR [esp+0x18]
  419349:	mov    ecx,DWORD PTR [esp+0x1c]
  41934d:	shrd   eax,ecx,0x2
  419351:	shr    ecx,0x2
  419354:	mov    ecx,DWORD PTR [esp+0x18]
  419358:	mov    edx,DWORD PTR [esp+0x1c]
  41935c:	mov    edx,DWORD PTR [esp+0x30]
  419360:	mov    edx,DWORD PTR [edx+0xc]
  419363:	mov    DWORD PTR [esp+0xc],eax
  419367:	shl    ecx,0x1e
  41936a:	mov    eax,0x32de6d5d
  41936f:	xor    DWORD PTR [esp+0xc],eax
  419373:	xor    ecx,ecx
  419375:	or     ecx,DWORD PTR [esp+0xc]
  419379:	cmp    ecx,DWORD PTR [edx]
  41937b:	jne    0x41a320
  419381:	mov    ecx,0x65c7
  419386:	mov    WORD PTR [esp+0x2c],cx
  41938b:	mov    ecx,0x6062
  419390:	mov    WORD PTR [esp+0x24],cx
  419395:	mov    ecx,0x125d
  41939a:	mov    WORD PTR [esp+0xc],cx
  41939f:	movzx  ecx,WORD PTR [esp+0xc]
  4193a4:	mov    edx,0x2d0f
  4193a9:	and    cx,dx
  4193ac:	mov    dx,WORD PTR [esp+0x24]
  4193b1:	or     cx,dx
  4193b4:	mov    dx,WORD PTR [esp+0x2c]
  4193b9:	add    cx,dx
  4193bc:	or     ecx,0x3b22
  4193c2:	mov    WORD PTR [esp+0x3c],cx
  4193c7:	mov    ecx,0x57d4
  4193cc:	mov    WORD PTR [esp+0x2c],cx
  4193d1:	mov    ecx,0x3b21
  4193d6:	mov    WORD PTR [esp+0x38],cx
  4193db:	mov    ecx,0x52fd
  4193e0:	mov    WORD PTR [esp+0x24],cx
  4193e5:	mov    ecx,0x2ce0
  4193ea:	mov    WORD PTR [esp+0xc],cx
  4193ef:	mov    cx,WORD PTR [esp+0xc]
  4193f4:	mov    dx,WORD PTR [esp+0x24]
  4193f9:	jmp    0x419656
  4193fe:	gs pop ss
  419400:	dec    BYTE PTR [eax+esi*4]
  419403:	sbb    al,0x6b
  419405:	mov    esp,0xd16889ea
  41940a:	popa   
  41940b:	ret    0xe39a
  41940e:	xor    eax,DWORD PTR ds:0xc235bec0
  419414:	mov    esi,0x3ae986be
  419419:	xchg   edx,eax
  41941a:	cmp    BYTE PTR [ebx-0x32],0x3c
  41941e:	pop    edx
  41941f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419420:	into   
  419421:	pop    esp
  419422:	push   ds
  419423:	jo     0x41946b
  419425:	xchg   esp,eax
  419426:	out    0xc7,eax
  419428:	cmp    BYTE PTR [ecx+0x5227ba1b],dh
  41942e:	push   edi
  41942f:	xchg   ecx,eax
  419430:	jge    0x4194a3
  419432:	cmp    eax,0xcb683e8e
  419437:	mov    ecx,0x5a745287
  41943c:	mov    bh,0x84
  41943e:	lods   eax,DWORD PTR ds:[esi]
  41943f:	mov    al,0x73
  419441:	test   ch,bl
  419443:	sub    eax,0x82e483db
  419448:	bound  edx,QWORD PTR [edx-0x41]
  41944b:	dec    edx
  41944c:	sub    BYTE PTR [esi+0x7a2862d1],0x76
  419453:	je     0x4194ce
  419455:	in     al,dx
  419456:	sbb    BYTE PTR [edi+0x2e811a54],bh
  41945c:	aaa    
  41945d:	xor    DWORD PTR [edi+0x7c85865d],esi
  419463:	xor    cl,BYTE PTR [ecx+0x5c]
  419466:	outs   dx,DWORD PTR ds:[esi]
  419467:	fdiv   QWORD PTR [eax]
  419469:	sbb    al,0x15
  41946b:	in     al,0x80
  41946d:	mov    ds:0x1f36c6de,eax
  419472:	jns    0x419495
  419474:	mov    ebx,0x8b60c6c0
  419479:	popf   
  41947a:	dec    esp
  41947b:	movaps XMMWORD PTR [ebx],xmm6
  41947e:	pusha  
  41947f:	imul   edi,DWORD PTR [ecx],0x44
  419482:	pusha  
  419483:	enter  0x4f5e,0xcf
  419487:	cmp    BYTE PTR [eax],0xc2
  41948a:	rcr    DWORD PTR [ebx+0x5026b4c2],1
  419490:	adc    al,0x77
  419492:	xor    esi,DWORD PTR [eax+0x54f48a04]
  419498:	dec    ebx
  419499:	das    
  41949a:	cmc    
  41949b:	in     eax,0xa
  41949d:	push   0x3e93834d
  4194a2:	add    DWORD PTR [ecx-0x2f],0x8c6da76f
  4194a9:	ret    0x6d31
  4194ac:	out    dx,eax
  4194ad:	test   DWORD PTR [edx-0x22472f73],edi
  4194b3:	cmp    al,0xae
  4194b5:	mov    bl,0x6d
  4194b7:	pop    ss
  4194b8:	ss jb  0x4194f0
  4194bb:	stos   BYTE PTR es:[edi],al
  4194bc:	sub    BYTE PTR [eax-0x4187c9c5],0xc8
  4194c3:	popa   
  4194c4:	cs (bad) 
  4194c6:	mov    bh,0x55
  4194c8:	cs sub al,0x95
  4194cb:	mov    cl,0xae
  4194cd:	inc    ebp
  4194ce:	rcl    DWORD PTR [ebp+0x7e],cl
  4194d1:	outs   dx,DWORD PTR ds:[si]
  4194d3:	(bad)  
  4194d5:	inc    esi
  4194d6:	inc    BYTE PTR [eax]
  4194d8:	stos   DWORD PTR es:[edi],eax
  4194d9:	cs pop edx
  4194db:	sbb    esi,eax
  4194dd:	data16 jo 0x419523
  4194e0:	icebp  
  4194e1:	push   0xe391ca3a
  4194e6:	inc    ebx
  4194e7:	cld    
  4194e8:	jle    0x419562
  4194ea:	scas   eax,DWORD PTR es:[edi]
  4194eb:	fdiv   QWORD PTR [ebx]
  4194ed:	jbe    0x419541
  4194ef:	dec    ebp
  4194f0:	jmp    0x48fda97e
  4194f5:	loop   0x419536
  4194f7:	sysret 
  4194f9:	pop    esp
  4194fa:	fwait
  4194fb:	or     BYTE PTR [eax+ecx*2+0x197f7d4f],cl
  419502:	xchg   ecx,ebp
  419504:	mov    ebp,DWORD PTR [ecx]
  419506:	push   cs
  419507:	fcomp  QWORD PTR [edi]
  419509:	cwde   
  41950a:	cmp    eax,0xf730f5c
  41950f:	addr16 fwait
  419511:	mov    al,0xa0
  419513:	add    eax,0x6340f273
  419518:	retf   0xaec2
  41951b:	clc    
  41951c:	in     al,0xee
  41951e:	mov    WORD PTR [ebx-0x7b687348],es
  419524:	imul   eax,ebp,0x9dd83288
  41952a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41952b:	aam    0x18
  41952d:	sbb    al,0xf8
  41952f:	mov    eax,0xd03f1e45
  419534:	dec    esi
  419535:	leave  
  419536:	xchg   esp,eax
  419537:	mov    esi,0xb1163614
  41953c:	bound  esi,QWORD PTR [esi+0x30917ccd]
  419542:	pushf  
  419543:	lock jg 0x4194f9
  419546:	mov    ebp,0xa9e786db
  41954b:	(bad)  
  41954c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41954d:	je     0x419500
  41954f:	adc    esp,DWORD PTR [eax-0x6798270c]
  419555:	dec    ecx
  419556:	enter  0xe7d4,0xf
  41955a:	pop    eax
  41955b:	ss cdq 
  41955d:	dec    edx
  41955e:	pop    esi
  41955f:	jbe    0x4195bb
  419561:	test   BYTE PTR [ebx+0x42],dl
  419564:	jb     0x419500
  419566:	test   eax,0x318cd072
  41956b:	xchg   edi,eax
  41956c:	pushf  
  41956d:	dec    ebp
  41956e:	jg     0x419541
  419570:	test   eax,0x329e8e41
  419575:	mov    ah,0x5d
  419577:	cmp    eax,0xb5462d81
  41957c:	pop    ecx
  41957d:	(bad)  
  41957e:	jae    0x419571
  419580:	fwait
  419581:	sub    DWORD PTR [edx],edi
  419583:	jl     0x4195d7
  419585:	call   0xa272:0x52010d68
  41958c:	(bad)  
  41958d:	jnp    0x419606
  41958f:	jecxz  0x41958f
  419591:	shr    DWORD PTR [edx+0x2b66a6b0],1
  419597:	std    
  419598:	sub    DWORD PTR [esi+esi*1-0x711c0f77],edx
  41959f:	ja     0x4195f7
  4195a1:	ret    
  4195a2:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4195a4:	sub    al,0xc3
  4195a6:	sbb    eax,DWORD PTR [ecx-0x415152e8]
  4195ac:	ror    DWORD PTR [ebp+0x78eec8ad],1
  4195b2:	cli    
  4195b3:	pop    edx
  4195b4:	test   DWORD PTR [ebx+0x130b63f4],ebx
  4195ba:	sbb    eax,0xb8226bd1
  4195bf:	mov    edx,0xc272e613
  4195c4:	dec    edi
  4195c5:	inc    esi
  4195c6:	pop    ecx
  4195c7:	dec    dl
  4195c9:	rcr    BYTE PTR [edi+0x6ed8db26],0xae
  4195d0:	fcomp  QWORD PTR [ebx-0x27]
  4195d3:	aaa    
  4195d4:	das    
  4195d5:	xor    DWORD PTR [esi-0x15],ecx
  4195d8:	jl     0x41958f
  4195da:	adc    BYTE PTR [eax+ebx*8+0x27b599f4],0xfa
  4195e2:	jae    0x4195e6
  4195e4:	inc    edx
  4195e5:	psubq  mm5,QWORD PTR [ecx]
  4195e8:	xchg   esp,eax
  4195e9:	sbb    DWORD PTR [ebp-0x1a],ebp
  4195ec:	test   dl,bl
  4195ee:	cld    
  4195ef:	xchg   ebx,eax
  4195f0:	in     al,dx
  4195f1:	push   edi
  4195f2:	std    
  4195f3:	ror    DWORD PTR [ecx-0x28],1
  4195f6:	mov    dh,0x30
  4195f8:	retf   0x5a59
  4195fb:	out    0xbf,al
  4195fd:	add    ch,BYTE PTR [edx-0x7e78232d]
  419603:	mov    esi,0xebdc43a3
  419608:	(bad)  
  419609:	mov    ch,0xc7
  41960b:	fistp  DWORD PTR [ebp+0x1f79ac78]
  419611:	push   esp
  419612:	fcomp  QWORD PTR [eax-0x49]
  419615:	pop    ebp
  419616:	das    
  419617:	or     ebp,DWORD PTR [edx-0x6b]
  41961a:	inc    ebp
  41961b:	xchg   ebx,eax
  41961c:	dec    eax
  41961d:	and    cl,ah
  41961f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419620:	int    0xc2
  419622:	mov    al,0x7b
  419624:	and    BYTE PTR [ecx+0x38],al
  419627:	jecxz  0x4195b6
  419629:	push   eax
  41962a:	(bad)  
  41962b:	(bad)  
  41962c:	repnz dec edx
  41962e:	rcl    bl,cl
  419630:	aaa    
  419631:	add    al,0x57
  419633:	mul    DWORD PTR [ebp+0x6f17943a]
  419639:	enter  0xad53,0xae
  41963d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41963e:	xchg   edx,eax
  41963f:	enter  0x60e3,0x2
  419643:	lds    ecx,FWORD PTR [ebx-0x7c]
  419646:	test   DWORD PTR [edi-0x5],ebp
  419649:	push   cs
  41964a:	xchg   ecx,eax
  41964b:	xor    eax,0x9f08f5f4
  419650:	jg     0x41963c
  419652:	hlt    
  419653:	xor    ch,al
  419655:	iret   
  419656:	or     cx,dx
  419659:	mov    edx,0x21a4
  41965e:	or     cx,dx
  419661:	mov    dx,WORD PTR [esp+0x2c]
  419666:	sub    cx,dx
  419669:	mov    dx,WORD PTR [esp+0x38]
  41966e:	sub    cx,dx
  419671:	mov    dx,WORD PTR [esp+0x3c]
  419676:	cmp    dx,cx
  419679:	jbe    0x41a320
  41967f:	mov    ecx,0x5008
  419684:	jmp    0x4198e1
  419689:	xchg   ebx,eax
  41968a:	sub    al,0x3f
  41968c:	jae    0x419706
  41968e:	mov    esp,0x77bf2cb3
  419693:	jo     0x419672
  419695:	pop    esi
  419696:	mov    WORD PTR [ecx+edx*8-0x55],gs
  41969a:	or     eax,eax
  41969c:	mov    esi,0xbebec235
  4196a1:	xchg   esi,eax
  4196a2:	mov    esi,0xa843d96f
  4196a7:	dec    edi
  4196a8:	adc    esi,0xffffff93
  4196ab:	lahf   
  4196ac:	sbb    al,0x77
  4196ae:	mov    bh,0xa8
  4196b0:	xchg   ecx,eax
  4196b1:	xchg   esi,eax
  4196b2:	iret   
  4196b3:	addr16 clc 
  4196b5:	sbb    dl,BYTE PTR [ebp+edi*8+0x50]
  4196b9:	cmc    
  4196ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196bb:	repnz sub al,0x30
  4196be:	(bad)  
  4196bf:	pop    esp
  4196c0:	mov    ebx,ebx
  4196c2:	adc    eax,DWORD PTR [ebx]
  4196c4:	scas   al,BYTE PTR es:[edi]
  4196c5:	mov    bl,0xe6
  4196c7:	cwde   
  4196c8:	(bad)  
  4196c9:	pop    esi
  4196ca:	mov    dh,0x5c
  4196cc:	jp     0x4196fe
  4196ce:	pop    ss
  4196cf:	retf   0xca29
  4196d2:	sub    ebp,esi
  4196d4:	and    ebp,edx
  4196d6:	std    
  4196d7:	rol    ch,cl
  4196d9:	sbb    al,0x9a
  4196db:	fwait
  4196dc:	(bad)  
  4196dd:	mov    ah,0x9d
  4196df:	sbb    al,0xa
  4196e1:	das    
  4196e2:	jne    0x419725
  4196e4:	adc    al,0xf9
  4196e6:	addr16 mov cl,0xe
  4196e9:	xchg   edx,eax
  4196ea:	loop   0x4196a7
  4196ec:	push   eax
  4196ed:	jmp    0x2977:0xef333286
  4196f4:	in     eax,dx
  4196f5:	jne    0x419767
  4196f7:	add    al,0x94
  4196f9:	cs push esp
  4196fb:	pop    ss
  4196fc:	fst    QWORD PTR [edx+ecx*4-0x1ba188dc]
  419703:	mov    esi,0xd0cf1e5a
  419708:	and    al,0xf2
  41970a:	inc    eax
  41970b:	sbb    bh,BYTE PTR [ecx]
  41970d:	(bad)  
  41970e:	mov    esp,0x3fbb76af
  419713:	fsubr  DWORD PTR [esi]
  419715:	mov    eax,ds:0x9102862b
  41971a:	adc    edi,0xffffffca
  41971d:	jp     0x419777
  41971f:	xchg   ebp,eax
  419720:	sbb    ch,BYTE PTR [esi]
  419722:	(bad)  
  419723:	jmp    0x13d3:0x3daf55c2
  41972a:	jne    0x4196e5
  41972c:	repnz icebp 
  41972e:	and    edi,DWORD PTR [ecx]
  419730:	fisub  DWORD PTR [ecx-0x6146c871]
  419736:	push   DWORD PTR [ebx-0x25]
  419739:	outs   dx,BYTE PTR ds:[esi]
  41973a:	cdq    
  41973b:	jo     0x4196d6
  41973d:	ss mov gs,esp
  419740:	out    dx,al
  419741:	call   DWORD PTR [eax]
  419743:	shl    esp,1
  419745:	push   0xcf7d996a
  41974a:	jb     0x419723
  41974c:	scas   al,BYTE PTR es:[edi]
  41974d:	rol    edi,cl
  41974f:	lods   al,BYTE PTR ds:[esi]
  419750:	adc    eax,ebp
  419752:	pop    ebp
  419753:	pop    ebp
  419754:	imul   edx,DWORD PTR [eax-0x21],0x21e8fb16
  41975b:	mov    ds:0xc7490c74,eax
  419760:	add    eax,0x69d5b9a1
  419765:	mov    al,0x1a
  419767:	fistp  WORD PTR [eax-0x49]
  41976a:	pusha  
  41976b:	mov    dl,al
  41976d:	xchg   edx,eax
  41976e:	stc    
  41976f:	xor    ecx,DWORD PTR [eax]
  419771:	sub    edi,ebx
  419773:	pop    eax
  419774:	hlt    
  419775:	arpl   WORD PTR [ebx],cx
  419777:	clc    
  419778:	int    0x9f
  41977a:	dec    esp
  41977b:	jmp    0xae7bf76e
  419780:	mov    edi,0xd0d770fe
  419785:	sbb    BYTE PTR [esi+0x3d],0xec
  419789:	xchg   esp,eax
  41978a:	adc    al,0x5b
  41978c:	adc    eax,ebx
  41978e:	stc    
  41978f:	sub    eax,0xb11cc63
  419794:	iret   
  419795:	ja     0x419720
  419797:	mov    esi,cs
  419799:	pop    edi
  41979a:	or     al,0x64
  41979c:	(bad)  
  41979e:	ja     0x4197e8
  4197a0:	cs adc ax,0x5477
  4197a5:	xor    edi,esi
  4197a7:	jle    0x4197c5
  4197a9:	jmp    0x4197ba
  4197ab:	mov    al,BYTE PTR gs:[edx+0x1452e15f]
  4197b2:	fidiv  WORD PTR [ebx+0x4c8fb668]
  4197b8:	sub    eax,0x9500480b
  4197bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197be:	cmp    dh,BYTE PTR [ebx-0x4be3a591]
  4197c4:	cwde   
  4197c5:	jb     0x419777
  4197c7:	fild   DWORD PTR [ebp-0x5476a6b2]
  4197cd:	add    esi,DWORD PTR ds:[esi+0x6ad68723]
  4197d4:	mov    ecx,0xc77e329
  4197d9:	(bad)
  4197dd:	sbb    eax,0x821de810
  4197e2:	arpl   WORD PTR [ebx+eiz*8],di
  4197e5:	(bad)  
  4197e6:	sub    edx,DWORD PTR [edx-0x2c]
  4197e9:	adc    ah,BYTE PTR [edx]
  4197eb:	cs cmc 
  4197ed:	sub    edx,ebp
  4197ef:	sbb    esi,DWORD PTR fs:[edi-0x5338f558]
  4197f6:	jg     0x4197e6
  4197f8:	gs popf 
  4197fa:	int    0xa1
  4197fc:	jno    0x419786
  4197fe:	jmp    0x4197d3
  419800:	js     0x419813
  419802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419803:	cdq    
  419804:	in     al,0xcd
  419806:	mov    eax,ds:0x4f9869c8
  41980b:	call   0x951e:0xc015350
  419812:	mov    edi,0x36ddc714
  419817:	shl    DWORD PTR [ebx+0x29],0x9f
  41981b:	mov    bh,0x14
  41981d:	xchg   ebp,eax
  41981e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41981f:	shr    DWORD PTR [eax+0x79],0x7f
  419823:	in     eax,dx
  419824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419825:	ds test ebp,eax
  419828:	lds    ecx,FWORD PTR [esi+0x54fb142e]
  41982e:	adc    DWORD PTR [ecx+0x4273e3e8],ebx
  419834:	sbb    al,0x22
  419836:	xcrypt-cfb (bad)
  419837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419838:	mov    ds:0x3d9b0d94,al
  41983d:	clc    
  41983e:	sub    edi,DWORD PTR [ebx+0x16]
  419841:	and    bl,cl
  419843:	(bad)  
  419844:	cld    
  419845:	scas   al,BYTE PTR es:[edi]
  419846:	xchg   edi,eax
  419847:	bound  eax,QWORD PTR ds:0xd5b
  41984c:	int    0x5b
  41984e:	mov    eax,ds:0x6a475078
  419853:	xchg   edi,eax
  419854:	mov    ecx,0x9fc95ece
  419859:	xor    DWORD PTR [ebx+0x4e0c4398],ebp
  41985f:	inc    ecx
  419860:	pop    ecx
  419861:	pop    ebx
  419862:	sbb    bh,BYTE PTR [ebp+0x3b]
  419865:	fmulp  st(7),st
  419867:	gs or  eax,0x5e5c82e
  41986d:	enter  0xb9ec,0xb1
  419871:	xlat   BYTE PTR ds:[ebx]
  419872:	xchg   esi,eax
  419873:	shl    edx,cl
  419875:	fmul   QWORD PTR [eax-0x42094201]
  41987b:	ds pop edx
  41987d:	pusha  
  41987e:	repz mov ds,WORD PTR [esi]
  419881:	jmp    0xd630:0x841d23e6
  419888:	cs sti 
  41988a:	fidiv  DWORD PTR [edi]
  41988c:	xor    al,0xa6
  41988e:	jmp    0x97e5:0xa350a8dc
  419895:	scas   eax,DWORD PTR es:[edi]
  419896:	jmp    0x4198a0
  419898:	clc    
  419899:	sub    DWORD PTR [ebx+0x4d],0x38
  41989d:	(bad)  [ecx+0x45]
  4198a0:	jge    0x419825
  4198a2:	push   cs
  4198a3:	sar    BYTE PTR [edx+0x20],cl
  4198a6:	mov    ds:0xcf7597b,al
  4198ab:	adc    esp,DWORD PTR [edx]
  4198ad:	and    cl,BYTE PTR [ecx-0x44c6a937]
  4198b3:	mov    esp,0x2d308402
  4198b8:	repz retf 0xb2b7
  4198bc:	pop    ds
  4198bd:	adc    bl,ch
  4198bf:	xchg   ebx,eax
  4198c0:	or     DWORD PTR [edx-0x7b],ebx
  4198c3:	ret    
  4198c4:	pusha  
  4198c5:	std    
  4198c6:	test   al,0x40
  4198c8:	sub    DWORD PTR [esp+eiz*4+0x48338175],edi
  4198cf:	mov    ds:0x77f46a83,al
  4198d4:	mov    WORD PTR [edi-0x58],?
  4198d7:	mov    edi,0xc1a98032
  4198dc:	push   esp
  4198dd:	outs   dx,BYTE PTR ds:[esi]
  4198de:	je     0x4198be
  4198e0:	jo     0x419948
  4198e2:	mov    DWORD PTR [esp+0x24],ecx
  4198e6:	mov    ecx,0x60ce
  4198eb:	mov    WORD PTR [esp+0xc],cx
  4198f0:	movzx  ecx,WORD PTR [esp+0xc]
  4198f5:	mov    edx,0x2095
  4198fa:	or     cx,dx
  4198fd:	mov    dx,WORD PTR [esp+0x24]
  419902:	sub    cx,dx
  419905:	jmp    0x419b62
  41990a:	loop   0x419959
  41990c:	push   eax
  41990d:	xchg   ebx,eax
  41990e:	je     0x4198a4
  419910:	and    ch,BYTE PTR [edi-0x307dfe70]
  419916:	or     al,BYTE PTR [eax+esi*4]
  419919:	iret   
  41991a:	and    al,0xd
  41991c:	sar    BYTE PTR [esi-0x41413dcb],0x25
  419923:	loopne 0x4199a3
  419925:	rcl    ecx,0xfc
  419928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419929:	scas   al,BYTE PTR es:[edi]
  41992a:	into   
  41992b:	and    BYTE PTR [ebp-0x2b625588],dh
  419931:	int    0xfc
  419933:	ja     0x419941
  419935:	mov    ch,0x78
  419937:	mov    ebp,0x2d023e0
  41993c:	adc    cl,BYTE PTR [eax-0x70]
  41993f:	lods   eax,DWORD PTR ds:[esi]
  419940:	dec    esi
  419941:	dec    esi
  419942:	aam    0xfd
  419944:	push   ebx
  419945:	aaa    
  419946:	test   eax,0xe0b80ea3
  41994b:	add    DWORD PTR [edi-0x50],eax
  41994e:	jl     0x4199ce
  419950:	mov    eax,ds:0x86e1e244
  419955:	xchg   edi,eax
  419956:	xchg   ecx,eax
  419957:	imul   ebp,DWORD PTR [edi+ebp*2],0x1803eaf
  41995e:	(bad)  
  41995f:	scas   al,BYTE PTR es:[edi]
  419960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419961:	jle    0x419989
  419963:	mov    WORD PTR [esi-0x6bd42e12],gs
  419969:	mov    ch,0x56
  41996b:	ja     0x4199d3
  41996d:	aam    0x94
  41996f:	mov    ebp,0xa449b3fa
  419974:	les    esp,FWORD PTR [edx+0x16]
  419977:	xlat   BYTE PTR ds:[ebx]
  419978:	daa    
  419979:	xchg   edx,eax
  41997a:	pop    es
  41997b:	enter  0x9e39,0xfc
  41997f:	les    edx,FWORD PTR [esi+0x36]
  419982:	xchg   esp,eax
  419983:	pop    esi
  419984:	sti    
  419985:	mov    WORD PTR [eax+0x20],fs
  419988:	jbe    0x419919
  41998a:	ret    0x2d6
  41998d:	pop    edi
  41998e:	test   eax,0x664b12c8
  419993:	in     al,0x8e
  419995:	mov    bh,0x31
  419997:	adc    BYTE PTR ds:0x610c442d,ch
  41999d:	imul   edx,esp,0xfffffff1
  4199a0:	sti    
  4199a1:	rcr    BYTE PTR [edx+0x955da5f],0x73
  4199a8:	xchg   ebp,eax
  4199a9:	xor    edx,esp
  4199ab:	neg    DWORD PTR [ebx]
  4199ad:	(bad)  
  4199ae:	pop    edi
  4199af:	xchg   edx,ecx
  4199b1:	cmp    DWORD PTR [ebp-0x4d],ebp
  4199b4:	cli    
  4199b5:	sub    ebp,DWORD PTR [ebx-0x57]
  4199b8:	in     al,0x3d
  4199ba:	push   es
  4199bb:	push   esi
  4199bc:	jbe    0x419a3b
  4199be:	loop   0x4199d5
  4199c0:	lahf   
  4199c1:	push   edx
  4199c2:	lods   al,BYTE PTR ds:[esi]
  4199c3:	stc    
  4199c4:	cmc    
  4199c5:	push   ss
  4199c6:	and    DWORD PTR [eax-0x5a],eax
  4199c9:	les    esp,FWORD PTR [edi-0x44]
  4199cc:	fstp   QWORD PTR [ebx]
  4199ce:	inc    ecx
  4199cf:	pop    ds
  4199d0:	(bad)  
  4199d1:	cdq    
  4199d2:	int    0x11
  4199d4:	and    dh,BYTE PTR [ebx]
  4199d6:	sub    eax,0x78031f1c
  4199db:	outs   dx,BYTE PTR ds:[esi]
  4199dc:	out    0x35,al
  4199de:	mov    ds:0x1f637dd8,eax
  4199e3:	leave  
  4199e4:	xchg   edx,eax
  4199e5:	data16 xor dl,ah
  4199e8:	leave  
  4199e9:	sub    al,0xe3
  4199eb:	lea    edx,[esi+0x7b4cc168]
  4199f1:	mov    ch,BYTE PTR [ecx]
  4199f3:	sbb    BYTE PTR [edi+ebx*1-0x59],dh
  4199f7:	inc    esi
  4199f8:	ja     0x419a28
  4199fa:	push   0xffffffb5
  4199fc:	mov    BYTE PTR [eax-0x61],0x23
  419a00:	fimul  DWORD PTR [edx+ebx*4-0x4c]
  419a04:	data16 jbe 0x419a76
  419a07:	out    0x8c,al
  419a09:	jmp    0xa3674bae
  419a0e:	leave  
  419a0f:	mov    ecx,0xed1d28e8
  419a14:	scas   al,BYTE PTR es:[edi]
  419a15:	adc    BYTE PTR [ebp+edx*2-0x4f],ah
  419a19:	pop    esp
  419a1a:	hlt    
  419a1b:	cmp    ecx,DWORD PTR [eax-0x305b7648]
  419a21:	mov    al,ds:0x90ad6088
  419a26:	jmp    0x419a05
  419a28:	mov    ebx,0x7527341b
  419a2d:	pop    ebx
  419a2e:	push   es
  419a2f:	sub    eax,0xf816e193
  419a34:	es es repz jns 0x419a14
  419a39:	pop    edi
  419a3a:	sub    BYTE PTR [eax-0x4a5a6ce6],bl
  419a40:	or     eax,0x56f15461
  419a45:	mov    ch,0x8f
  419a47:	add    DWORD PTR [ebp-0x533765d],esi
  419a4d:	xor    eax,0x83f1b430
  419a52:	jae    0x4199dd
  419a54:	xchg   ebx,eax
  419a55:	mov    DWORD PTR [ebp-0x7d75b727],esi
  419a5b:	pushf  
  419a5c:	ins    BYTE PTR es:[edi],dx
  419a5d:	add    al,0xb6
  419a5f:	jp     0x419aaa
  419a61:	scas   al,BYTE PTR es:[edi]
  419a62:	(bad)  
  419a63:	retf   
  419a64:	fstp   QWORD PTR [edi]
  419a66:	xchg   DWORD PTR [ecx+0x38],edx
  419a69:	and    al,BYTE PTR [eax-0x5d3b9859]
  419a6f:	push   cs
  419a70:	add    ebp,DWORD PTR [edx]
  419a72:	es jmp 0x419a3b
  419a75:	test   al,0x27
  419a77:	fld    QWORD PTR ss:[esi+edx*1+0x70]
  419a7c:	inc    esi
  419a7d:	sti    
  419a7e:	inc    ecx
  419a7f:	and    eax,0x296312b1
  419a84:	js     0x419ad6
  419a86:	mov    WORD PTR [edx],cs
  419a88:	shl    BYTE PTR [ebp+0x55],0xcb
  419a8c:	and    cl,BYTE PTR [edi+0xc9a2356]
  419a92:	lock test BYTE PTR [edi-0x7e],ch
  419a96:	ss inc ebp
  419a98:	add    BYTE PTR [ebx+0x47751d60],dh
  419a9e:	les    eax,FWORD PTR [eax*1+0x4b2b2ced]
  419aa5:	loop   0x419a37
  419aa7:	mov    dh,0x67
  419aa9:	mov    ch,0x2c
  419aab:	(bad)  
  419aac:	jl     0x419a8f
  419aae:	cmc    
  419aaf:	push   edi
  419ab0:	jmp    0x1797dc29
  419ab5:	jbe    0x419aa9
  419ab7:	nop
  419ab8:	pop    eax
  419ab9:	sub    al,0x48
  419abb:	mov    al,ds:0x8bb16026
  419ac0:	jno    0x419a81
  419ac2:	int    0xe4
  419ac4:	out    0x6a,al
  419ac6:	inc    ebp
  419ac7:	push   ebx
  419ac8:	daa    
  419ac9:	sbb    BYTE PTR [edi+0x70d7e271],cl
  419acf:	mov    al,0x6e
  419ad1:	outs   dx,DWORD PTR ds:[esi]
  419ad2:	js     0x419b3e
  419ad4:	inc    edi
  419ad5:	cmc    
  419ad6:	mov    ds:0x1c42d5e,al
  419adb:	iret   
  419adc:	and    DWORD PTR [ebp+ebp*8-0x38],edi
  419ae0:	push   edx
  419ae1:	retf   
  419ae2:	inc    eax
  419ae3:	aas    
  419ae4:	xor    al,0x5f
  419ae6:	xchg   edx,eax
  419ae7:	jmp    0x419af2
  419ae9:	ins    BYTE PTR es:[edi],dx
  419aea:	js     0x419a8b
  419aec:	test   DWORD PTR [ecx+0x36cffcd7],edx
  419af2:	ds and eax,0x29f4299e
  419af8:	xchg   BYTE PTR ds:0xbd03bf5a,dl
  419afe:	mov    ebx,0x7ec1388f
  419b03:	mov    BYTE PTR [eax+0x73],bl
  419b06:	sub    DWORD PTR [edi+eiz*1-0x1908eb55],eax
  419b0d:	ins    DWORD PTR es:[edi],dx
  419b0e:	xchg   DWORD PTR [esi],edi
  419b10:	fldcw  WORD PTR ds:0x8ba64aa8
  419b16:	mov    ds:0x632a23e3,al
  419b1b:	cmp    BYTE PTR [ebp+0x52],cl
  419b1e:	mov    WORD PTR gs:[ebp-0x20],?
  419b22:	ret    0xbbce
  419b25:	pop    es
  419b26:	xor    edi,DWORD PTR [esi+0x104b5ad9]
  419b2c:	mov    eax,0x51144c35
  419b31:	sub    DWORD PTR ds:[si],edx
  419b35:	push   eax
  419b36:	push   ecx
  419b37:	lahf   
  419b38:	jmp    0x419ac7
  419b3a:	mov    esi,0x1deceb8c
  419b3f:	in     eax,0xed
  419b41:	imul   eax,DWORD PTR [ebx-0x5],0x54da04e2
  419b48:	ds out dx,eax
  419b4a:	test   bh,dl
  419b4c:	or     DWORD PTR [ebx+0x3c],esp
  419b4f:	loopne 0x419ad9
  419b51:	dec    esp
  419b52:	call   0x6d565d26
  419b57:	inc    ecx
  419b58:	inc    ebx
  419b59:	sbb    al,0x14
  419b5b:	mov    bh,0xcd
  419b5d:	xchg   esi,eax
  419b5e:	in     eax,0x2d
  419b60:	retf   0xba87
  419b63:	ficom  WORD PTR [eax]
  419b65:	add    BYTE PTR [eax],al
  419b67:	or     ecx,0x742f
  419b6d:	imul   ecx,ecx,0x30b2
  419b73:	mov    WORD PTR [esp+0x3c],cx
  419b78:	mov    ecx,0x6143
  419b7d:	mov    WORD PTR [esp+0x38],cx
  419b82:	mov    ecx,0x679f
  419b87:	mov    WORD PTR [esp+0x2c],cx
  419b8c:	mov    ecx,0x1210
  419b91:	mov    WORD PTR [esp+0x24],cx
  419b96:	mov    ecx,0x3308
  419b9b:	mov    WORD PTR [esp+0xc],cx
  419ba0:	mov    cx,WORD PTR [esp+0xc]
  419ba5:	sub    cx,dx
  419ba8:	jmp    0x419e05
  419bad:	jge    0x419b6c
  419baf:	into   
  419bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb1:	mov    ?,WORD PTR [esp+esi*4-0x51b6fd1d]
  419bb8:	iret   
  419bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bba:	lds    eax,FWORD PTR [edx]
  419bbc:	fstp   QWORD PTR [ecx+edx*1-0x3dca4140]
  419bc3:	mov    esi,0xd5d9b5be
  419bc8:	mov    WORD PTR [ebx],cs
  419bca:	pop    esp
  419bcb:	cs popa 
  419bcd:	scas   eax,DWORD PTR es:[edi]
  419bce:	jmp    0x419bab
  419bd0:	dec    esi
  419bd1:	sbb    eax,0xcb6d6c15
  419bd6:	cld    
  419bd7:	push   ecx
  419bd8:	adc    eax,0xc0c5d7cd
  419bdd:	jns    0x419c39
  419bdf:	aad    0xe0
  419be1:	mov    esp,DWORD PTR [esi-0x8]
  419be4:	or     DWORD PTR [edi],eax
  419be6:	pop    ecx
  419be7:	jmp    0xef01:0x819d0d48
  419bee:	jmp    0xfea9:0x82b75f1e
  419bf5:	shr    DWORD PTR [eax+0x24],1
  419bf8:	test   DWORD PTR [edi+0x583ea33f],0xe9f04a5c
  419c02:	jge    0x419b8b
  419c04:	and    al,0x2d
  419c06:	xchg   dh,ah
  419c08:	aaa    
  419c09:	mov    ?,WORD PTR [ebx+0x3a842c29]
  419c0f:	js     0x419bb9
  419c11:	popa   
  419c12:	stos   BYTE PTR es:[edi],al
  419c13:	ins    BYTE PTR es:[edi],dx
  419c14:	addr16 ret 
  419c16:	sbb    DWORD PTR [ecx+0x45],0x34
  419c1a:	dec    bl
  419c1c:	pop    ebx
  419c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c1e:	fisttp QWORD PTR [ebx+ebp*4-0x3a4c7b69]
  419c25:	adc    edi,DWORD PTR [ebp-0x72]
  419c28:	push   ecx
  419c29:	imul   esp,DWORD PTR [ebx-0x20be5d00],0x1f
  419c30:	mov    eax,es
  419c32:	push   cs
  419c33:	jmp    0xfdf0:0x50d267ec
  419c3a:	aaa    
  419c3b:	shr    bh,1
  419c3d:	mov    dl,0x43
  419c3f:	loope  0x419bfc
  419c41:	xchg   edi,eax
  419c42:	xchg   esp,eax
  419c43:	shl    bh,1
  419c45:	aaa    
  419c46:	push   ecx
  419c47:	cli    
  419c48:	mov    esp,DWORD PTR cs:[ecx*2-0x55b05634]
  419c50:	outs   dx,DWORD PTR ds:[esi]
  419c51:	jnp    0x419c45
  419c53:	clc    
  419c54:	push   ebp
  419c55:	cld    
  419c56:	xlat   BYTE PTR ds:[ebx]
  419c57:	inc    eax
  419c58:	and    DWORD PTR [ecx-0x423cdeb7],ecx
  419c5e:	adc    dh,bh
  419c60:	inc    edi
  419c61:	mov    ah,0x57
  419c63:	sahf   
  419c64:	stos   BYTE PTR es:[edi],al
  419c65:	shr    BYTE PTR [ebp+0x1000ebdb],0x5e
  419c6c:	aaa    
  419c6d:	sahf   
  419c6e:	jns    0x419c07
  419c70:	xchg   edi,eax
  419c71:	adc    DWORD PTR [eax+0x1a],edx
  419c74:	dec    eax
  419c75:	shr    al,0x94
  419c78:	inc    edi
  419c79:	sbb    eax,0xfdbffb45
  419c7e:	sbb    esp,DWORD PTR [eax+0x78]
  419c81:	test   bl,dh
  419c83:	xchg   ecx,eax
  419c84:	jecxz  0x419c38
  419c86:	mov    ecx,0x60536892
  419c8b:	xor    BYTE PTR [ebx-0x64],0x69
  419c8f:	add    al,0x65
  419c91:	stc    
  419c92:	push   ecx
  419c93:	pop    edi
  419c94:	dec    edi
  419c95:	shr    ah,cl
  419c97:	push   0x704a04f6
  419c9c:	jne    0x419ce2
  419c9e:	mov    al,0xbd
  419ca0:	nop
  419ca1:	ffree  st(1)
  419ca3:	(bad)  
  419ca4:	enter  0x6b77,0x7c
  419ca8:	test   DWORD PTR [edx+0x64e1ee6],eax
  419cae:	lods   eax,DWORD PTR ds:[esi]
  419caf:	mov    ecx,0xd7b67fa5
  419cb4:	cmp    ebx,DWORD PTR [ebp-0x42b60eac]
  419cba:	pusha  
  419cbb:	push   ecx
  419cbc:	sub    BYTE PTR [eax+0x36],dl
  419cbf:	adc    eax,0xf24894a5
  419cc4:	xor    DWORD PTR [ecx-0x21cd8f8a],esp
  419cca:	pop    es
  419ccb:	pop    ebp
  419ccc:	mov    edx,0xc03c821f
  419cd1:	sub    eax,0x5da3ef89
  419cd6:	xor    eax,0xa9487ef0
  419cdb:	pop    ss
  419cdc:	dec    edx
  419cdd:	xor    ecx,DWORD PTR [eax]
  419cdf:	sub    bl,dl
  419ce1:	int3   
  419ce2:	test   eax,0xa90f3c4d
  419ce7:	pop    edx
  419ce8:	pop    esi
  419ce9:	jge    0x419c6d
  419ceb:	cmp    al,0x82
  419ced:	inc    ecx
  419cee:	retf   0x5993
  419cf1:	cmp    eax,0x4e6f9317
  419cf6:	mov    al,ds:0x57dbc9ee
  419cfb:	sbb    ah,bl
  419cfd:	js     0x419cc5
  419cff:	adc    DWORD PTR [esi+0xb8d05e9],edx
  419d05:	mov    ebp,0xc41c979b
  419d0a:	push   0x6d
  419d0c:	hlt    
  419d0d:	mov    cl,BYTE PTR [ebp+0x7ff328e3]
  419d13:	mov    bh,0xf0
  419d15:	cmp    eax,edi
  419d17:	retf   0x522e
  419d1a:	outs   dx,BYTE PTR ds:[esi]
  419d1b:	jno    0x419d60
  419d1d:	and    ebp,DWORD PTR [eax]
  419d1f:	scas   al,BYTE PTR es:[edi]
  419d20:	sub    al,0x6e
  419d22:	loope  0x419d50
  419d24:	retf   
  419d25:	mov    edi,0x5726157c
  419d2a:	xor    al,BYTE PTR [ebx]
  419d2c:	cmc    
  419d2d:	jbe    0x419d43
  419d2f:	sub    edi,eax
  419d31:	lods   al,BYTE PTR ds:[esi]
  419d32:	aas    
  419d33:	xor    dh,ah
  419d35:	ss out 0xae,al
  419d38:	das    
  419d39:	repz (bad) 
  419d3b:	mov    ?,WORD PTR [edx+0x71]
  419d3e:	mov    bl,0x26
  419d40:	mov    dl,0xe6
  419d42:	ret    0x87
  419d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d46:	fs jns 0x419d4f
  419d49:	(bad)  
  419d4a:	dec    ecx
  419d4b:	mov    ch,0x12
  419d4d:	ja     0x419ce4
  419d4f:	lods   al,BYTE PTR ds:[esi]
  419d50:	icebp  
  419d51:	jl     0x419d33
  419d53:	popf   
  419d54:	sbb    ecx,0xbd8e1b9a
  419d5a:	stos   BYTE PTR es:[edi],al
  419d5b:	test   ecx,esp
  419d5d:	daa    
  419d5e:	movhps xmm1,QWORD PTR [edi]
  419d61:	loop   0x419d09
  419d63:	mov    ebx,0x1eb9c59c
  419d68:	out    0x77,eax
  419d6a:	mov    dl,ah
  419d6c:	add    al,0x15
  419d6e:	(bad)  
  419d70:	nop
  419d71:	adc    al,0x91
  419d73:	or     al,BYTE PTR ss:[edi+0x226ed072]
  419d7a:	and    edx,DWORD PTR [edi]
  419d7c:	pusha  
  419d7d:	adc    al,0x50
  419d7f:	xchg   ecx,eax
  419d80:	push   ebp
  419d81:	dec    edx
  419d82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d83:	inc    ecx
  419d84:	test   BYTE PTR [ecx-0x10],ah
  419d87:	mov    bh,0x4d
  419d89:	dec    ebx
  419d8a:	test   DWORD PTR [esp+edi*8],esp
  419d8d:	sbb    eax,DWORD PTR [ecx]
  419d8f:	enter  0xce3a,0xe2
  419d93:	push   ds
  419d94:	inc    DWORD PTR [ebp+0x3c]
  419d97:	sub    ah,bl
  419d99:	sub    eax,0xf7dae4dd
  419d9e:	xchg   ecx,eax
  419d9f:	mov    WORD PTR ds:0xec02ec84,?
  419da5:	lods   al,BYTE PTR ds:[esi]
  419da6:	jnp    0x419dde
  419da8:	loopne 0x419d66
  419daa:	push   ebx
  419dab:	sub    dl,BYTE PTR [eax]
  419dad:	out    0x7,al
  419daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419db0:	mov    BYTE PTR [eax-0x30],0x39
  419db4:	dec    ebp
  419db5:	sbb    esi,esp
  419db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419db8:	out    0x64,al
  419dba:	loope  0x419e38
  419dbc:	adc    BYTE PTR [edx+0x40],bl
  419dbf:	out    dx,al
  419dc0:	in     eax,dx
  419dc1:	test   DWORD PTR [ebp+0x11],0xd1b69b84
  419dc8:	fwait
  419dc9:	sbb    BYTE PTR [ebp+0x68],dh
  419dcc:	lahf   
  419dcd:	mov    ebp,0x2218f56e
  419dd2:	jbe    0x419daa
  419dd4:	loope  0x419dd3
  419dd6:	pushf  
  419dd7:	pop    ss
  419dd8:	or     DWORD PTR [ebp-0x6400eae2],0x2ea5fdd1
  419de2:	or     bh,ah
  419de4:	ds dec edx
  419de6:	out    dx,eax
  419de7:	fimul  DWORD PTR [edi+ebx*1-0x9]
  419deb:	icebp  
  419dec:	and    bh,BYTE PTR [ebx-0x3a463494]
  419df2:	pusha  
  419df3:	(bad)  
  419df4:	pop    edx
  419df5:	add    DWORD PTR [esi+0x6e],ecx
  419df8:	and    edx,DWORD PTR [ecx-0x6878b60f]
  419dfe:	out    0x80,eax
  419e00:	js     0x419dd9
  419e02:	cli    
  419e03:	mov    al,ds:0x548b66a5
  419e08:	and    al,0x24
  419e0a:	xor    cx,dx
  419e0d:	mov    dx,WORD PTR [esp+0x2c]
  419e12:	imul   cx,dx
  419e16:	mov    dx,WORD PTR [esp+0x38]
  419e1b:	and    cx,dx
  419e1e:	mov    edx,0x694c
  419e23:	and    cx,dx
  419e26:	mov    dx,WORD PTR [esp+0x3c]
  419e2b:	cmp    dx,cx
  419e2e:	ja     0x41a320
  419e34:	mov    ecx,DWORD PTR [esp+0x18]
  419e38:	mov    edx,DWORD PTR [esp+0x1c]
  419e3c:	jmp    0x41a099
  419e41:	add    edi,DWORD PTR [edx-0x6d83ed16]
  419e47:	cmp    al,0xbc
  419e49:	loopne 0x419e57
  419e4b:	inc    edx
  419e4c:	fld    QWORD PTR [eax]
  419e4e:	push   gs
  419e50:	jecxz  0x419e65
  419e52:	pop    ss
  419e53:	sar    BYTE PTR [esi-0x41413dcb],0xd
  419e5a:	das    
  419e5b:	bound  edx,QWORD PTR [edx-0x3d97b7d1]
  419e61:	test   al,0xff
  419e63:	aaa    
  419e64:	addr16 jb 0x419ee1
  419e67:	mov    edi,0xf633c64
  419e6c:	retf   
  419e6d:	into   
  419e6e:	jne    0x419e8c
  419e70:	jmp    0x6d9b:0x816aba28
  419e77:	sub    eax,DWORD PTR [edx+edx*8-0x24]
  419e7b:	js     0x419ea6
  419e7d:	pusha  
  419e7e:	stc    
  419e7f:	xchg   esp,eax
  419e80:	and    BYTE PTR [eax],dl
  419e82:	adc    DWORD PTR ds:0x39ffd579,ebp
  419e88:	leave  
  419e89:	mov    edx,DWORD PTR [esi+0x5991b89e]
  419e8f:	inc    esp
  419e90:	pop    ebp
  419e91:	test   eax,0x5301349b
  419e96:	jmp    0x67fa:0x5440275a
  419e9d:	stos   BYTE PTR es:[edi],al
  419e9e:	xchg   esp,eax
  419e9f:	pop    esp
  419ea0:	xor    dl,BYTE PTR [eax-0x7a]
  419ea3:	imul   ebx,DWORD PTR [edi-0x789bbd06],0xffffff90
  419eaa:	xor    BYTE PTR [ecx+0x69],bh
  419ead:	out    dx,al
  419eae:	imul   esp,DWORD PTR [ecx+edx*2+0x43],0x59a29a05
  419eb6:	test   eax,0xed649b7
  419ebb:	sbb    DWORD PTR [ebp+0xc],eax
  419ebe:	add    dl,BYTE PTR [edi+0x3b99b6cf]
  419ec4:	cld    
  419ec5:	mov    esi,0x3552c120
  419eca:	frstor [eax]
  419ecc:	es in  eax,0xc1
  419ecf:	test   DWORD PTR [edx+0x56a34de6],edi
  419ed5:	lahf   
  419ed6:	push   ebp
  419ed7:	inc    ebx
  419ed8:	gs test al,0xc0
  419edb:	js     0x419f22
  419edd:	add    BYTE PTR [esi-0xe],0xad
  419ee1:	push   0x5a
  419ee3:	retf   
  419ee4:	and    DWORD PTR [ebx],ebx
  419ee6:	pop    edx
  419ee7:	ins    DWORD PTR es:[edi],dx
  419ee8:	out    0xca,al
  419eea:	xor    al,0x39
  419eec:	repnz cmp eax,0xf8943042
  419ef2:	pop    ecx
  419ef3:	pop    ss
  419ef4:	dec    edi
  419ef5:	inc    edx
  419ef6:	aaa    
  419ef7:	add    ecx,DWORD PTR [edi-0x604f6b8b]
  419efd:	jne    0x419ebc
  419eff:	adc    eax,0x1315ab00
  419f04:	fnstsw WORD PTR [edx+0x4b]
  419f07:	repnz xlat BYTE PTR ds:[ebx]
  419f09:	adc    al,0xf0
  419f0b:	mov    cl,0x12
  419f0d:	scas   al,BYTE PTR es:[edi]
  419f0e:	stos   DWORD PTR es:[edi],eax
  419f0f:	hlt    
  419f10:	jecxz  0x419ec1
  419f12:	jbe    0x419f74
  419f14:	fcomp  DWORD PTR [edx+0x36]
  419f17:	sub    BYTE PTR [edx+0x86ab1aa],dl
  419f1d:	push   eax
  419f1e:	ss push ebp
  419f20:	repnz lods al,BYTE PTR ds:[esi]
  419f22:	test   al,0x61
  419f24:	adc    BYTE PTR [edi+0x42f95745],dl
  419f2a:	lds    esp,FWORD PTR [edx-0x284a5f80]
  419f30:	dec    esi
  419f31:	aam    0xcf
  419f33:	gs sub eax,0x90869d6c
  419f39:	mov    esi,0x98173e1e
  419f3e:	ins    BYTE PTR es:[edi],dx
  419f3f:	mov    esi,0xf86530c9
  419f44:	cs push es
  419f46:	xor    BYTE PTR ds:0x54103370,0x1e
  419f4d:	aad    0x3a
  419f4f:	inc    ecx
  419f50:	pop    ds
  419f51:	mov    dh,0xe3
  419f53:	xchg   esp,eax
  419f54:	enter  0x5ef,0x41
  419f58:	jecxz  0x419f44
  419f5a:	es or  esp,esp
  419f5d:	and    ebx,edx
  419f5f:	dec    esp
  419f60:	cli    
  419f61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f62:	xor    eax,0x259c484b
  419f67:	push   eax
  419f68:	push   ebx
  419f69:	fcomip st,st(6)
  419f6b:	cld    
  419f6c:	xchg   esi,eax
  419f6d:	sub    eax,0xef34aa78
  419f72:	cmp    ah,BYTE PTR [edi-0x8e7c81c]
  419f78:	jne    0x419fb4
  419f7a:	sbb    BYTE PTR [eax],ah
  419f7c:	mov    al,0xe4
  419f7e:	pop    ebx
  419f7f:	mov    ch,0xfc
  419f81:	popa   
  419f82:	cwde   
  419f83:	inc    ebp
  419f84:	mov    cl,0x8d
  419f86:	inc    ecx
  419f87:	mov    dh,0x6d
  419f89:	into   
  419f8a:	adc    al,0xc8
  419f8c:	push   cs
  419f8d:	daa    
  419f8e:	dec    edx
  419f8f:	lea    edx,[eax+0x33]
  419f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f93:	dec    ebp
  419f94:	lds    eax,FWORD PTR [esi]
  419f96:	(bad)  
  419f97:	adc    BYTE PTR [edi+0x8],ch
  419f9a:	and    BYTE PTR [edi+esi*1-0x6711fe27],al
  419fa1:	inc    esp
  419fa2:	pop    edx
  419fa3:	je     0x419f4b
  419fa5:	mov    al,ds:0x4f6b9d96
  419faa:	cmp    DWORD PTR [ecx+0x2a22e2e1],eax
  419fb0:	or     al,0xa0
  419fb2:	aas    
  419fb3:	stos   BYTE PTR es:[edi],al
  419fb4:	fxch   st(6)
  419fb6:	inc    ebx
  419fb7:	lahf   
  419fb8:	jle    0x41a01a
  419fba:	shl    esp,1
  419fbc:	or     DWORD PTR [ecx],0xffffffcb
  419fbf:	aam    0x84
  419fc1:	sub    ecx,esi
  419fc3:	fwait
  419fc4:	add    eax,0xf71bd106
  419fc9:	cdq    
  419fca:	dec    eax
  419fcb:	pop    ss
  419fcc:	push   es
  419fcd:	iret   
  419fce:	jmp    0x419f79
  419fd0:	jle    0x41a01a
  419fd2:	ss pop es
  419fd4:	(bad)  
  419fd5:	aas    
  419fd6:	mov    ax,0xf8ec
  419fda:	fpatan 
  419fdc:	sahf   
  419fdd:	lods   eax,DWORD PTR ds:[esi]
  419fde:	lahf   
  419fdf:	cmp    dl,ch
  419fe1:	jmp    0x419f92
  419fe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fe4:	sub    esi,DWORD PTR [eax+edx*8+0x38]
  419fe8:	xchg   BYTE PTR [esi-0x5d],al
  419feb:	out    dx,eax
  419fec:	xchg   esp,eax
  419fed:	xor    BYTE PTR [ebx],ch
  419fef:	dec    eax
  419ff0:	sub    eax,0xace18c71
  419ff5:	xchg   DWORD PTR [edi],esi
  419ff7:	push   DWORD PTR [ebx+0x9]
  419ffa:	lds    edx,FWORD PTR ds:[ecx+0x72548697]
  41a001:	repnz mov ebx,0x3dbb12d6
  41a007:	pushf  
  41a008:	clc    
  41a009:	sbb    ecx,DWORD PTR [esi+ebp*4-0x71]
  41a00d:	mov    ah,0x57
  41a00f:	fst    DWORD PTR [edx]
  41a011:	sub    eax,0xf6db59c0
  41a016:	mov    esp,0x44456344
  41a01b:	loopne 0x41a06c
  41a01d:	mov    dh,0x16
  41a01f:	fcom   DWORD PTR [edi+0xb]
  41a022:	pusha  
  41a023:	test   al,0x71
  41a025:	int3   
  41a026:	(bad)
  41a02a:	inc    eax
  41a02b:	loope  0x419ffc
  41a02d:	and    BYTE PTR [esi-0x3e0899e8],ah
  41a033:	jg     0x41a02a
  41a035:	sbb    eax,edi
  41a037:	sub    dh,BYTE PTR [esi-0x2b36b7cf]
  41a03d:	cmp    al,0x86
  41a03f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a040:	cmp    DWORD PTR [ebx+0x29],edi
  41a043:	in     al,dx
  41a044:	(bad)  
  41a045:	push   edi
  41a046:	call   0x4fe3:0x841ac60e
  41a04d:	xchg   ebx,edx
  41a04f:	xchg   ebx,eax
  41a050:	add    esp,DWORD PTR [edi-0x7e]
  41a053:	mov    esp,0xf5d0205a
  41a058:	jl     0x41a0b6
  41a05a:	push   ss
  41a05b:	mov    eax,0x41239489
  41a060:	or     eax,edx
  41a062:	adc    edx,edi
  41a064:	inc    esp
  41a065:	dec    esp
  41a066:	xlat   BYTE PTR ds:[ebx]
  41a067:	or     ch,al
  41a069:	jo     0x41a07b
  41a06b:	sbb    dh,dl
  41a06d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a06e:	sub    dh,BYTE PTR [edx+0x33]
  41a071:	out    dx,eax
  41a072:	adc    edx,DWORD PTR [ecx]
  41a074:	mov    ebp,0x773db897
  41a079:	shl    BYTE PTR [edx-0x24],1
  41a07c:	or     al,0xd9
  41a07e:	mov    BYTE PTR [ebx-0x295f3792],bh
  41a084:	icebp  
  41a085:	jae    0x41a0b7
  41a087:	add    dl,BYTE PTR [ebx-0x4c2a9afa]
  41a08d:	test   eax,0x757f4848
  41a092:	pop    eax
  41a093:	lds    ebx,FWORD PTR [eax-0x3c26fdda]
  41a099:	shrd   ecx,edx,0x2
  41a09d:	xor    ecx,eax
  41a09f:	mov    eax,DWORD PTR [esp+0x18]
  41a0a3:	shr    edx,0x2
  41a0a6:	mov    edx,DWORD PTR [esp+0x1c]
  41a0aa:	xor    edx,edx
  41a0ac:	jmp    0x41a309
  41a0b1:	scas   ax,WORD PTR es:[edi]
  41a0b3:	xchg   ebx,eax
  41a0b4:	mov    dh,0x9c
  41a0b6:	mov    edx,0x94c4af6c
  41a0bb:	pop    esp
  41a0bc:	ror    DWORD PTR [edx-0x742e950e],1
  41a0c2:	sbb    eax,eax
  41a0c4:	mov    esi,0xbebec235
  41a0c9:	and    eax,0x41d975a6
  41a0ce:	pop    ebx
  41a0cf:	fld    DWORD PTR [ebp-0x57]
  41a0d2:	sti    
  41a0d3:	in     eax,dx
  41a0d4:	jb     0x41a0ef
  41a0d6:	pop    ebx
  41a0d7:	dec    edx
  41a0d8:	jecxz  0x41a117
  41a0da:	sub    eax,0x734d06e8
  41a0df:	jecxz  0x41a08f
  41a0e1:	cmp    al,0xff
  41a0e3:	into   
  41a0e4:	nop
  41a0e5:	rcl    BYTE PTR ss:[edx+0x56fe044c],cl
  41a0ec:	mov    bh,0x8b
  41a0ee:	lds    edi,FWORD PTR [esi-0xce2c6d7]
  41a0f4:	xchg   ecx,eax
  41a0f5:	sub    BYTE PTR [esi],bh
  41a0f7:	test   DWORD PTR [ecx],ebx
  41a0f9:	enter  0x7a2f,0x9c
  41a0fd:	inc    di
  41a0ff:	jmp    0x7e55:0x5ce77604
  41a106:	fnstsw WORD PTR [ecx]
  41a108:	mov    edx,0x1e8c1678
  41a10d:	shr    DWORD PTR [edi+0x3b6f3788],cl
  41a113:	mov    ch,0x96
  41a115:	adc    ah,cl
  41a117:	shl    DWORD PTR [esi+eiz*8+0x4c],0x68
  41a11c:	pop    edx
  41a11d:	inc    esi
  41a11e:	popf   
  41a11f:	mov    gs:0x886b869a,eax
  41a125:	cld    
  41a126:	inc    edx
  41a127:	stc    
  41a128:	cmp    al,0x59
  41a12a:	and    esp,esp
  41a12c:	sbb    dh,BYTE PTR [edx]
  41a12e:	sbb    ebp,eax
  41a130:	and    eax,DWORD PTR [eax+0x7a]
  41a133:	leave  
  41a134:	push   esi
  41a135:	jnp    0x41a18a
  41a137:	xchg   ebx,eax
  41a138:	aas    
  41a139:	cdq    
  41a13a:	or     BYTE PTR [ecx],0x4f
  41a13d:	mov    ecx,0x487258de
  41a142:	and    eax,0x38dd499d
  41a147:	mov    ecx,0x25f7cb75
  41a14c:	jle    0x41a0f5
  41a14e:	stos   BYTE PTR es:[edi],al
  41a14f:	xlat   BYTE PTR ds:[ebx]
  41a150:	and    DWORD PTR [ebp-0x48],eax
  41a153:	pop    edx
  41a154:	dec    edx
  41a155:	adc    dl,ch
  41a157:	inc    ecx
  41a158:	mov    bh,0xd2
  41a15a:	sbb    esp,DWORD PTR [ebx+0x2146160c]
  41a160:	imul   ebp,DWORD PTR [ebp+edi*1-0x42cad21e],0xdb7925c8
  41a16b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a16c:	jl     0x41a1ad
  41a16e:	fimul  DWORD PTR [eax]
  41a170:	cwde   
  41a171:	ins    BYTE PTR es:[edi],dx
  41a172:	pop    es
  41a173:	push   ebp
  41a174:	lea    eax,[ecx+ebx*1+0x6ce9efed]
  41a17b:	sbb    ecx,eax
  41a17d:	and    esp,DWORD PTR [ebx+0x39]
  41a180:	fsubp  st(5),st
  41a182:	push   es
  41a183:	mov    esi,0xd0eecbfd
  41a188:	xchg   edx,eax
  41a189:	sub    esi,DWORD PTR [edi-0x3053e6e8]
  41a18f:	idiv   DWORD PTR ds:0xedbb3807
  41a195:	adc    BYTE PTR [eax+0x50],dl
  41a198:	ret    0x298a
  41a19b:	adc    BYTE PTR [ebx-0x30],al
  41a19e:	mov    ds:0xd0f657e9,eax
  41a1a3:	mov    ch,0xa9
  41a1a5:	lds    ebx,FWORD PTR [eax+0x7]
  41a1a8:	sub    DWORD PTR [ecx-0x4d],ebp
  41a1ab:	popf   
  41a1ac:	daa    
  41a1ad:	jg     0x41a185
  41a1af:	cmp    esp,ebp
  41a1b1:	mov    esi,DWORD PTR [ebp-0x10]
  41a1b4:	sub    BYTE PTR [edx+edx*2-0x1],bh
  41a1b8:	fild   DWORD PTR [ecx]
  41a1ba:	in     eax,0x8b
  41a1bc:	not    BYTE PTR [ebx+0x6101c5aa]
  41a1c2:	pop    ds
  41a1c3:	mov    dh,0xdf
  41a1c5:	pushf  
  41a1c6:	pushf  
  41a1c7:	inc    ebx
  41a1c8:	iret   
  41a1c9:	inc    eax
  41a1ca:	iret   
  41a1cb:	mov    ds,edx
  41a1cd:	jp     0x41a1ca
  41a1cf:	(bad)  
  41a1d0:	daa    
  41a1d1:	mov    esi,ebp
  41a1d3:	repz rcl DWORD PTR [eax],0x59
  41a1d7:	jmp    0x7763fd1f
  41a1dc:	adc    DWORD PTR [eax+0x7b],0xa04e35b5
  41a1e3:	imul   edi
  41a1e5:	outs   dx,BYTE PTR cs:[esi]
  41a1e7:	shl    DWORD PTR [esi-0x79],0xf8
  41a1eb:	or     DWORD PTR [eax-0x3da81953],ebx
  41a1f1:	lds    esp,FWORD PTR [esi+0x2273449d]
  41a1f7:	sbb    eax,0x8f0e8a35
  41a1fc:	mov    esp,0x9539d9d6
  41a201:	mov    edi,0x180fe1f2
  41a206:	xor    ebp,ecx
  41a208:	rol    DWORD PTR [edi+0x70de1533],1
  41a20e:	imul   ebp,DWORD PTR [edx-0x55],0x28b30633
  41a215:	sub    al,0x5
  41a217:	lods   eax,DWORD PTR ds:[esi]
  41a218:	popf   
  41a219:	mov    al,ds:0xfb7cc7b6
  41a21e:	(bad)  
  41a220:	and    al,bh
  41a222:	jmp    0x41a1eb
  41a224:	pop    edx
  41a225:	push   eax
  41a226:	loopne 0x41a283
  41a228:	push   DWORD PTR ds:0xb223d526
  41a22e:	ins    DWORD PTR es:[edi],dx
  41a22f:	icebp  
  41a230:	ins    DWORD PTR es:[edi],dx
  41a231:	lods   al,BYTE PTR ds:[esi]
  41a232:	inc    ebx
  41a233:	push   ss
  41a234:	mov    cl,0x7f
  41a236:	add    al,BYTE PTR [eax-0x20]
  41a239:	and    BYTE PTR ds:0x41f069af,bl
  41a23f:	jmp    0x2674733e
  41a244:	out    0x8d,al
  41a246:	mov    BYTE PTR [edi-0x1bf1c538],cl
  41a24c:	frstor [ecx]
  41a24e:	into   
  41a24f:	pop    ecx
  41a250:	fmul   QWORD PTR [ebx]
  41a252:	cwde   
  41a253:	mov    ds:0xde34f57c,eax
  41a258:	push   ebp
  41a259:	enter  0x1df6,0x3d
  41a25d:	imul   ebp,DWORD PTR [esi],0xfffffff1
  41a260:	loop   0x41a24b
  41a262:	popf   
  41a263:	dec    ecx
  41a264:	test   al,0xa0
  41a266:	inc    edx
  41a267:	push   0x11
  41a269:	sbb    eax,0x526506f5
  41a26e:	sub    BYTE PTR [ebx-0x22],0xc1
  41a272:	retf   
  41a273:	icebp  
  41a274:	loopne 0x41a2dc
  41a276:	popf   
  41a277:	inc    ebx
  41a278:	jecxz  0x41a272
  41a27a:	ds push edx
  41a27c:	sub    edx,DWORD PTR [ebp-0x380869ee]
  41a282:	addr16 addr16 pusha 
  41a285:	leave  
  41a286:	adc    bl,ch
  41a288:	push   ss
  41a289:	clc    
  41a28a:	dec    esp
  41a28b:	scas   al,BYTE PTR es:[edi]
  41a28c:	mov    ?,WORD PTR [edx]
  41a28e:	add    BYTE PTR [edx-0x48e514c1],dl
  41a294:	andnps xmm1,XMMWORD PTR ds:0xb2a7d6c1
  41a29b:	popa   
  41a29c:	call   0x7a52:0x9e7c00b0
  41a2a3:	scas   al,BYTE PTR es:[edi]
  41a2a4:	add    dh,BYTE PTR [eax+0x2c0b9f71]
  41a2aa:	div    DWORD PTR [esi+0x15fa3b49]
  41a2b0:	into   
  41a2b1:	and    al,0xcf
  41a2b3:	aaa    
  41a2b4:	add    BYTE PTR [edi+0x66],dh
  41a2b7:	fisubr DWORD PTR [eax]
  41a2b9:	fwait
  41a2ba:	pop    esi
  41a2bb:	mov    ah,BYTE PTR [esi]
  41a2bd:	mov    ds:0x64f3db22,eax
  41a2c2:	sbb    eax,0x16a3e37e
  41a2c7:	push   esp
  41a2c8:	add    ecx,0xc1f891ad
  41a2ce:	xor    al,0x2a
  41a2d0:	out    0xe9,eax
  41a2d2:	in     eax,0x99
  41a2d4:	or     DWORD PTR [edx],esp
  41a2d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2d7:	jle    0x41a308
  41a2d9:	xor    esi,DWORD PTR ds:0xa9414e47
  41a2df:	or     DWORD PTR [edx+0x701fbb28],eax
  41a2e5:	push   ebx
  41a2e6:	loope  0x41a2ea
  41a2e8:	cmp    al,0xdd
  41a2eb:	mov    dl,0xb
  41a2ed:	(bad)  
  41a2ef:	sbb    al,0xbf
  41a2f1:	shl    DWORD PTR [ecx+0x6421d4d6],cl
  41a2f7:	repnz cmp BYTE PTR [eax+0x48],0x1
  41a2fc:	repnz mov BYTE PTR [ecx],ah
  41a2ff:	fdiv   QWORD PTR [eax]
  41a301:	outs   dx,DWORD PTR ds:[esi]
  41a302:	sbb    eax,0xab287cd1
  41a307:	jnp    0x41a2f3
  41a309:	or     edx,ecx
  41a30b:	push   edx
  41a30c:	push   esi
  41a30d:	shl    eax,0x1e
  41a310:	push   edi
  41a311:	lea    eax,[esp+0x7c]
  41a315:	push   eax
  41a316:	lea    eax,[esp+0x28]
  41a31a:	push   eax
  41a31b:	call   0x411472
  41a320:	push   DWORD PTR [esp+0x74]
  41a324:	push   DWORD PTR [esp+0x74]
  41a328:	push   DWORD PTR [esp+0x24]
  41a32c:	push   DWORD PTR [esp+0x24]
  41a330:	call   0x412349
  41a335:	mov    edx,DWORD PTR [esp+0x18]
  41a339:	mov    eax,DWORD PTR [esp+0x1c]
  41a33d:	mov    ecx,DWORD PTR [esp+0x18]
  41a341:	mov    edi,DWORD PTR [esp+0x1c]
  41a345:	shrd   edx,eax,0x2
  41a349:	shr    eax,0x2
  41a34c:	shl    ecx,0x1e
  41a34f:	xor    ecx,ecx
  41a351:	mov    eax,0x32de6d5d
  41a356:	xor    edx,eax
  41a358:	or     ecx,edx
  41a35a:	mov    edx,DWORD PTR [esp+0x5c]
  41a35e:	mov    DWORD PTR [edx],ecx
  41a360:	mov    ecx,DWORD PTR [esp+0x18]
  41a364:	jmp    0x41a5c1
  41a369:	repz sub cl,0x71
  41a36d:	mov    edx,0x20807cbb
  41a372:	shl    al,cl
  41a374:	iret   
  41a375:	js     0x41a33e
  41a377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a378:	jecxz  0x41a37e
  41a37a:	pop    ds
  41a37b:	sar    BYTE PTR [esi-0x41413dcb],0x6e
  41a382:	int    0x66
  41a384:	xchg   edx,eax
  41a385:	add    BYTE PTR [eax-0x26],0xd8
  41a389:	mov    dh,BYTE PTR [ecx-0x7]
  41a38c:	or     BYTE PTR ds:[esi+0x32b07bb3],dl
  41a393:	repz xor eax,edx
  41a396:	mov    bl,0xad
  41a398:	lea    ebx,[edi+0x32]
  41a39b:	mov    dl,0xf
  41a39d:	int3   
  41a39e:	cmp    DWORD PTR [ebx-0x4011139c],ebp
  41a3a4:	xor    ebx,DWORD PTR [ecx]
  41a3a6:	addr16 xchg ebx,eax
  41a3a8:	inc    edx
  41a3a9:	push   ebx
  41a3aa:	(bad)  
  41a3ab:	stc    
  41a3ac:	int    0x66
  41a3ae:	jnp    0x41a34f
  41a3b0:	mov    bl,0x6f
  41a3b2:	mov    ss,WORD PTR [ebx-0x6afc6b4b]
  41a3b8:	sub    ebp,edx
  41a3ba:	in     eax,dx
  41a3bb:	mov    esp,edx
  41a3bd:	ins    BYTE PTR es:[edi],dx
  41a3be:	fld    st(5)
  41a3c0:	cwde   
  41a3c1:	gs jns 0x41a3d6
  41a3c4:	es jecxz 0x41a38b
  41a3c7:	push   edx
  41a3c8:	mov    ebp,0xcd4fff42
  41a3cd:	cmp    DWORD PTR [eax-0x7],ebp
  41a3d0:	mov    ah,0xd7
  41a3d2:	or     al,0x43
  41a3d4:	add    DWORD PTR [ebp+0x20aeacaf],ecx
  41a3da:	push   edi
  41a3db:	jbe    0x41a35d
  41a3dd:	sbb    BYTE PTR [ebx],cl
  41a3df:	xchg   ecx,eax
  41a3e0:	jo     0x41a406
  41a3e2:	ror    DWORD PTR [eax+0x5c26d565],1
  41a3e8:	aas    
  41a3e9:	add    dh,bh
  41a3eb:	cmp    eax,0xc4cb4e9
  41a3f0:	rcr    DWORD PTR [ecx],1
  41a3f2:	add    eax,edi
  41a3f4:	sbb    esp,0x58
  41a3f7:	push   0xce9a32e0
  41a3fc:	popa   
  41a3fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3fe:	cmp    eax,0x80af1d8a
  41a403:	dec    ebx
  41a404:	adc    al,0x48
  41a406:	(bad)  
  41a408:	(bad)  
  41a409:	sub    esi,DWORD PTR [eax-0x57]
  41a40c:	add    esi,esi
  41a40e:	je     0x41a468
  41a410:	retf   0x59ef
  41a413:	or     ebp,edx
  41a415:	inc    eax
  41a416:	cwde   
  41a417:	sub    DWORD PTR [eax-0x60],ebx
  41a41a:	push   ecx
  41a41b:	xchg   edi,eax
  41a41c:	cmp    DWORD PTR gs:[ebp+0x71],edx
  41a420:	xchg   ebx,eax
  41a421:	fbstp  TBYTE PTR [edi]
  41a423:	call   0xc0eb:0xe9ae24d2
  41a42a:	inc    edx
  41a42b:	fwait
  41a42c:	add    BYTE PTR [esi+0x715f5e06],ch
  41a432:	xchg   ebp,eax
  41a433:	mov    bh,0xd2
  41a435:	jp     0x41a414
  41a437:	mov    dl,0x5f
  41a439:	ror    BYTE PTR [eax],0xe9
  41a43c:	lea    edi,[ebp-0x63]
  41a43f:	fs (bad) 
  41a441:	out    dx,eax
  41a442:	out    dx,eax
  41a443:	push   ss
  41a444:	je     0x41a3c9
  41a446:	cmp    esp,ebp
  41a448:	mov    al,0xae
  41a44a:	and    eax,0x83deceb4
  41a44f:	sbb    al,0x1c
  41a451:	inc    edx
  41a452:	inc    esi
  41a453:	sub    BYTE PTR [eax*4+0x7aaf9c0b],bh
  41a45a:	sar    BYTE PTR [ecx-0x79],0xfc
  41a45e:	retf   
  41a45f:	loopne 0x41a467
  41a461:	inc    ebp
  41a462:	test   BYTE PTR [eax-0x4c],ah
  41a465:	call   0xdc8a:0x2ace5642
  41a46c:	sbb    eax,0x98d001cc
  41a471:	push   ss
  41a472:	fisttp QWORD PTR [edi+ecx*2+0x5b543776]
  41a479:	add    ah,BYTE PTR [ebp-0x7b6c9953]
  41a47f:	and    al,0x82
  41a481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a482:	shl    BYTE PTR [ebp-0x196de7a3],0xdc
  41a489:	jo     0x41a4e1
  41a48b:	lahf   
  41a48c:	push   ecx
  41a48d:	push   ebx
  41a48e:	xor    eax,0xb0941250
  41a493:	popa   
  41a494:	cmp    al,0x8
  41a496:	adc    eax,0xbab6270f
  41a49b:	mov    esp,gs
  41a49d:	out    0x67,eax
  41a49f:	cmp    esi,DWORD PTR [edi+0x2f]
  41a4a2:	adc    al,0x0
  41a4a4:	add    DWORD PTR [ebx+0x39],ebx
  41a4a7:	pop    ds
  41a4a8:	add    BYTE PTR [eax],0xd9
  41a4ab:	pop    esp
  41a4ac:	inc    edi
  41a4ad:	sub    BYTE PTR [ecx],bl
  41a4af:	sub    DWORD PTR [ecx-0x9b56dfc],ecx
  41a4b5:	es jmp 0xe5d2:0x7e257a3f
  41a4bd:	jno    0x41a465
  41a4bf:	lock inc esi
  41a4c1:	mov    ecx,0x7e37c50
  41a4c6:	je     0x41a50c
  41a4c8:	loope  0x41a513
  41a4ca:	and    DWORD PTR [ebx-0x68],ecx
  41a4cd:	jns    0x41a4bf
  41a4cf:	shr    DWORD PTR [ebx],1
  41a4d1:	xor    bl,dh
  41a4d3:	pusha  
  41a4d4:	and    BYTE PTR [edi+0x56],ah
  41a4d7:	rcl    bh,1
  41a4d9:	aaa    
  41a4da:	dec    ebx
  41a4db:	sub    BYTE PTR [eax],ah
  41a4dd:	jbe    0x41a547
  41a4df:	in     eax,dx
  41a4e0:	sbb    dl,BYTE PTR [ebx+0x448dba10]
  41a4e6:	mov    edi,0x754d0708
  41a4eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4ec:	std    
  41a4ed:	out    0x98,al
  41a4ef:	outs   dx,BYTE PTR ds:[esi]
  41a4f0:	xor    DWORD PTR [eax-0x6f],ebp
  41a4f3:	call   DWORD PTR [edx]
  41a4f5:	push   0xffffffcf
  41a4f7:	mov    esp,0xde050bc6
  41a4fc:	arpl   ax,bp
  41a4fe:	in     al,0x82
  41a500:	in     eax,dx
  41a501:	ja     0x41a51f
  41a503:	fdiv   st(5),st
  41a505:	push   cs
  41a506:	mov    ecx,0x8f12dc0f
  41a50b:	leave  
  41a50c:	jno    0x41a527
  41a50e:	push   0x43
  41a510:	cs das 
  41a512:	imul   esi,ecx,0xffffffbd
  41a515:	adc    DWORD PTR [edx+0x41],edi
  41a518:	retf   
  41a519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a51a:	pop    es
  41a51b:	mov    edx,0xa1b78e60
  41a520:	pop    edx
  41a521:	adc    al,0xeb
  41a523:	pop    DWORD PTR [edx+0x301d21ed]
  41a529:	xchg   esi,eax
  41a52a:	pop    edi
  41a52b:	push   edx
  41a52c:	in     al,dx
  41a52d:	cs push ds
  41a52f:	pop    esp
  41a530:	out    0x77,eax
  41a532:	scas   eax,DWORD PTR es:[edi]
  41a533:	fcomp  DWORD PTR [ecx-0x4de38a9f]
  41a539:	lock pop ebx
  41a53b:	gs sti 
  41a53d:	or     eax,0xefb2c8ef
  41a542:	dec    ecx
  41a543:	icebp  
  41a544:	pop    es
  41a545:	sub    BYTE PTR [edx-0x731700b0],0x1b
  41a54c:	shl    dh,1
  41a54e:	dec    eax
  41a54f:	adc    ebp,DWORD PTR [edx+ebp*1]
  41a552:	push   ss
  41a553:	jle    0x41a550
  41a555:	(bad)  
  41a556:	(bad)  
  41a557:	aam    0x58
  41a559:	arpl   WORD PTR [ebx-0x55],cx
  41a55c:	jg     0x41a570
  41a55e:	mov    ah,0xd2
  41a560:	es je  0x41a503
  41a563:	loopne 0x41a53a
  41a565:	mov    al,0xe1
  41a567:	sub    al,0xe
  41a569:	imul   eax,edi,0xb375425f
  41a56f:	inc    edi
  41a570:	xchg   ebp,eax
  41a571:	xchg   edx,eax
  41a573:	mov    dh,0xc9
  41a575:	call   0x9d5bdc4
  41a57a:	ins    BYTE PTR es:[edi],dx
  41a57b:	or     BYTE PTR [ecx],bh
  41a57d:	inc    eax
  41a57e:	xchg   esi,eax
  41a57f:	pop    edx
  41a580:	cli    
  41a581:	cmp    cl,cl
  41a583:	les    ecx,FWORD PTR [ecx-0x547fdb1c]
  41a589:	xlat   BYTE PTR ds:[ebx]
  41a58a:	popf   
  41a58b:	aam    0x37
  41a58d:	shr    DWORD PTR [ebx],1
  41a58f:	and    ecx,ecx
  41a591:	or     al,0xfa
  41a593:	dec    ecx
  41a594:	outs   dx,BYTE PTR ds:[esi]
  41a595:	push   ebp
  41a596:	xor    DWORD PTR fs:[ebx],esi
  41a599:	leave  
  41a59a:	sub    BYTE PTR [edi],ch
  41a59c:	in     eax,dx
  41a59d:	fisttp QWORD PTR [edi+0x14]
  41a5a0:	inc    edx
  41a5a1:	sbb    DWORD PTR [edi],0xb4d68a00
  41a5a7:	stc    
  41a5a8:	add    BYTE PTR [ecx],dl
  41a5aa:	mov    al,0xac
  41a5ac:	push   ecx
  41a5ad:	jns    0x41a551
  41a5af:	(bad)  
  41a5b0:	or     ch,BYTE PTR [esi-0xe]
  41a5b3:	dec    edi
  41a5b4:	mov    al,ds:0x136d78c4
  41a5b9:	call   0x4afd:0xf320b593
  41a5c0:	adc    ecx,DWORD PTR [ebx+0xf1c2454]
  41a5c6:	lods   al,BYTE PTR ds:[esi]
  41a5c7:	rol    DWORD PTR [edx],1
  41a5c9:	xor    ecx,eax
  41a5cb:	mov    eax,DWORD PTR [esp+0x18]
  41a5cf:	shl    eax,0x1e
  41a5d2:	shr    edx,0x2
  41a5d5:	mov    edx,DWORD PTR [esp+0x1c]
  41a5d9:	xor    eax,eax
  41a5db:	or     eax,ecx
  41a5dd:	mov    ecx,DWORD PTR [esp+0x68]
  41a5e1:	mov    DWORD PTR [ecx],eax
  41a5e3:	mov    eax,DWORD PTR [esp+0x68]
  41a5e7:	mov    ecx,DWORD PTR [esp+0x68]
  41a5eb:	mov    eax,DWORD PTR [eax]
  41a5ed:	cmp    eax,DWORD PTR [ecx]
  41a5ef:	jne    0x41a916
  41a5f5:	mov    eax,DWORD PTR [esp+0x5c]
  41a5f9:	mov    ecx,DWORD PTR [esp+0x5c]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	cmp    eax,DWORD PTR [ecx]
  41a601:	jne    0x41a916
  41a607:	mov    BYTE PTR [esp+0x2c],0x20
  41a60c:	mov    BYTE PTR [esp+0x38],0x3
  41a611:	jmp    0x41a86e
  41a616:	cs lock pop ebp
  41a619:	jne    0x41a5ba
  41a61b:	js     0x41a653
  41a61d:	mov    eax,0x90d3c3ca
  41a622:	aaa    
  41a623:	mov    dh,BYTE PTR [esi-0x6e]
  41a626:	jl     0x41a64b
  41a628:	sar    BYTE PTR [esi-0x41413dcb],0x6f
  41a62f:	int3   
  41a630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a631:	fiadd  DWORD PTR [edx-0x4c]
  41a634:	jle    0x41a63e
  41a636:	dec    edi
  41a637:	scas   eax,DWORD PTR es:[edi]
  41a638:	add    ch,BYTE PTR [edx+0x17ec558f]
  41a63e:	or     esp,DWORD PTR cs:[edx-0x52]
  41a642:	mov    al,0xda
  41a644:	mov    BYTE PTR [edx+0x66f81af0],ah
  41a64a:	out    dx,eax
  41a64b:	fistp  QWORD PTR [ecx]
  41a64d:	xor    al,0x3
  41a64f:	arpl   WORD PTR [edx],bp
  41a651:	nop
  41a652:	jbe    0x41a63e
  41a654:	(bad)  
  41a656:	xchg   ebp,eax
  41a657:	sub    DWORD PTR [ecx+ebx*4-0x3c],0xb59db18e
  41a65f:	(bad)  
  41a660:	and    edx,DWORD PTR [edi-0x6b]
  41a663:	cmp    ecx,ebx
  41a665:	push   esp
  41a666:	hlt    
  41a667:	pop    edx
  41a668:	push   edi
  41a669:	mov    ch,0x88
  41a66b:	xchg   edi,eax
  41a66c:	rol    DWORD PTR [eax+0x6c963186],cl
  41a672:	xchg   esi,eax
  41a673:	(bad)  
  41a674:	loope  0x41a646
  41a676:	test   eax,0xd1c57dc8
  41a67b:	scas   eax,DWORD PTR es:[edi]
  41a67c:	mov    bh,0x45
  41a67e:	pop    ebx
  41a67f:	pop    ds
  41a680:	out    dx,al
  41a681:	jmp    0x6a83:0x82df95c6
  41a688:	scas   eax,DWORD PTR es:[edi]
  41a689:	inc    edi
  41a68a:	mov    cs,WORD PTR ds:0x336e3a0
  41a690:	test   ch,dl
  41a692:	je     0x41a61d
  41a694:	mov    dl,0x7c
  41a696:	pushf  
  41a697:	mov    dl,0x6
  41a699:	sub    eax,0x2e4f36cc
  41a69e:	jne    0x41a665
  41a6a0:	mov    ds:0xca5bf6f7,eax
  41a6a5:	leave  
  41a6a6:	mov    ds:0xaadcd536,al
  41a6ab:	mov    al,ds:0xacf89c8f
  41a6b0:	pop    ebx
  41a6b1:	and    ecx,DWORD PTR [edx+0x5f9ba4da]
  41a6b7:	xor    dl,BYTE PTR [eax-0x7c]
  41a6ba:	(bad)  
  41a6bb:	aam    0x73
  41a6bd:	push   edx
  41a6be:	daa    
  41a6bf:	mov    esi,0x46eab3c1
  41a6c4:	test   al,0x73
  41a6c6:	jns    0x41a746
  41a6c8:	pop    edi
  41a6c9:	jae    0x41a6ae
  41a6cb:	pop    ecx
  41a6cc:	imul   ecx,DWORD PTR [eax+0x6],0x1d
  41a6d0:	cli    
  41a6d1:	in     eax,dx
  41a6d2:	or     edx,DWORD PTR [edi+0x6be25405]
  41a6d8:	pusha  
  41a6d9:	push   esi
  41a6da:	vsqrtsd xmm4,xmm6,QWORD PTR [esi-0x47]
  41a6e0:	fmul   DWORD PTR [edx-0x4]
  41a6e3:	shr    BYTE PTR [edx],0x75
  41a6e6:	cwde   
  41a6e7:	lock dec edi
  41a6e9:	push   0x38
  41a6eb:	lds    eax,FWORD PTR [ecx+0x2e98c6d5]
  41a6f1:	sbb    eax,0x4dd5667b
  41a6f6:	aam    0xa5
  41a6f8:	mov    bl,0x3b
  41a6fa:	add    eax,0xa9d107d4
  41a6ff:	pusha  
  41a700:	mov    cl,0x68
  41a702:	adc    BYTE PTR [ecx+0x50],cl
  41a705:	repnz xor eax,0x6c8b6c34
  41a70b:	xchg   DWORD PTR [edi+0x978fdab],eax
  41a711:	mov    esi,DWORD PTR [ebx]
  41a713:	and    ebp,DWORD PTR [ebx+0x5f72032b]
  41a719:	mov    ecx,0xfd42d6a5
  41a71e:	and    al,0x66
  41a720:	sbb    eax,0x8f4b30a0
  41a725:	lahf   
  41a726:	adc    ebp,DWORD PTR [edx+0x19c87c69]
  41a72c:	shl    DWORD PTR [esi-0x16cf1f13],cl
  41a732:	addr16 sbb ch,ah
  41a735:	jb     0x41a763
  41a737:	add    bh,BYTE PTR [ebx-0x40]
  41a73a:	mov    dh,0xbc
  41a73c:	jecxz  0x41a787
  41a73e:	dec    esi
  41a73f:	pop    eax
  41a740:	mov    DWORD PTR [ebx+0x566b1099],ebx
  41a746:	xor    ecx,edx
  41a748:	mov    ds,WORD PTR [eax+0x28]
  41a74b:	dec    esp
  41a74c:	inc    ecx
  41a74d:	popf   
  41a74e:	push   eax
  41a74f:	dec    ecx
  41a750:	jne    0x41a75b
  41a752:	or     al,BYTE PTR [eax+0x1f]
  41a755:	mov    dh,0xb5
  41a757:	sti    
  41a758:	popa   
  41a759:	pusha  
  41a75a:	jnp    0x41a750
  41a75c:	jnp    0x41a743
  41a75e:	jae    0x41a772
  41a760:	or     BYTE PTR [edx+0x65],al
  41a763:	jl     0x41a71e
  41a765:	loop   0x41a73d
  41a767:	xlat   BYTE PTR ds:[ebx]
  41a768:	jmp    0x41a760
  41a76a:	leave  
  41a76b:	daa    
  41a76c:	ds loop 0x41a7b1
  41a76f:	test   al,0xae
  41a771:	pop    ebx
  41a772:	dec    edx
  41a773:	push   es
  41a774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a775:	xchg   edi,eax
  41a776:	and    bl,BYTE PTR [eax-0x26]
  41a779:	popf   
  41a77a:	fs jg  0x41a7c5
  41a77d:	and    eax,0xe9220f48
  41a782:	jge    0x41a78b
  41a784:	ja     0x41a73d
  41a786:	mov    eax,0x7f15dee9
  41a78b:	or     al,0x44
  41a78d:	sub    al,0x5c
  41a78f:	inc    esp
  41a790:	dec    esp
  41a791:	xchg   cl,ch
  41a793:	jnp    0x41a753
  41a795:	jo     0x41a743
  41a797:	sbb    dh,cl
  41a799:	inc    esp
  41a79a:	sub    ch,ah
  41a79c:	(bad)  
  41a79d:	es jb  0x41a784
  41a7a0:	(bad)  [ecx+0x6725eb26]
  41a7a6:	mov    ss,ebx
  41a7a8:	std    
  41a7a9:	pop    ds
  41a7aa:	inc    ebx
  41a7ab:	dec    esi
  41a7ac:	mov    eax,ds:0xe9f189aa
  41a7b1:	rcl    DWORD PTR ds:0xbe41479,0xd8
  41a7b8:	ins    BYTE PTR es:[edi],dx
  41a7b9:	stos   DWORD PTR es:[edi],eax
  41a7ba:	cmp    DWORD PTR [edi],esp
  41a7bc:	(bad)  
  41a7bd:	std    
  41a7be:	in     eax,0x29
  41a7c0:	mov    ebx,0x8de64df7
  41a7c5:	loopne 0x41a7c8
  41a7c7:	dec    esi
  41a7c8:	hlt    
  41a7c9:	pop    ebp
  41a7ca:	test   ecx,0xc6babed6
  41a7d0:	cwde   
  41a7d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7d2:	inc    esi
  41a7d3:	and    eax,0xba8bbf1c
  41a7d8:	mul    BYTE PTR cs:[ecx]
  41a7db:	arpl   WORD PTR [ecx+0x134cc1a5],sp
  41a7e1:	js     0x41a840
  41a7e3:	push   esp
  41a7e4:	add    DWORD PTR [eax-0x4b9f670d],ecx
  41a7ea:	adc    dh,BYTE PTR [ebx+0x53]
  41a7ed:	jmp    0x10f1204c
  41a7f2:	dec    ebx
  41a7f3:	pusha  
  41a7f4:	mov    dh,0xe3
  41a7f6:	jle    0x41a7bc
  41a7f8:	inc    ecx
  41a7f9:	out    0x25,eax
  41a7fb:	add    BYTE PTR ds:0x17abce40,bl
  41a801:	out    dx,al
  41a802:	ins    DWORD PTR es:[edi],dx
  41a803:	push   0x22672f81
  41a808:	in     al,0xb9
  41a80a:	lds    eax,FWORD PTR [eax-0x2]
  41a80d:	xchg   ebx,eax
  41a80e:	sar    BYTE PTR [esi+ecx*1],1
  41a811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a812:	push   ecx
  41a813:	(bad)  
  41a814:	fdiv   QWORD PTR [eax]
  41a816:	push   esi
  41a817:	aaa    
  41a818:	mov    ah,0x6a
  41a81a:	test   DWORD PTR [edx-0x31336b40],ebp
  41a820:	mov    cl,0x22
  41a822:	ds inc esi
  41a824:	in     eax,0x5f
  41a826:	inc    edi
  41a827:	clc    
  41a828:	mov    ecx,0xdf562d23
  41a82d:	or     BYTE PTR [ebx-0x1],dh
  41a830:	sub    ecx,edx
  41a832:	je     0x41a84e
  41a834:	push   0xffffffba
  41a836:	jp     0x41a7ba
  41a838:	adc    edi,DWORD PTR [ebx+0x2a]
  41a83b:	stos   DWORD PTR es:[edi],eax
  41a83c:	or     al,0xac
  41a83e:	aaa    
  41a83f:	mov    DWORD PTR [ecx],esp
  41a841:	xchg   esp,eax
  41a842:	sub    ecx,ecx
  41a844:	shl    BYTE PTR [ebx-0x32],0x7f
  41a848:	retf   0xb4c3
  41a84b:	(bad)  
  41a84c:	fs in  eax,dx
  41a84e:	or     BYTE PTR [ecx],0xc1
  41a851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a852:	outs   dx,BYTE PTR ds:[esi]
  41a853:	dec    ebp
  41a854:	mov    edi,0x5eaaf3ef
  41a859:	cmp    ebp,DWORD PTR [edx-0x6fe0ef9d]
  41a85f:	cs inc ebx
  41a861:	in     al,dx
  41a862:	out    0x10,eax
  41a864:	or     esp,esp
  41a866:	mov    esi,0x12fd7480
  41a86b:	mov    ah,0xe2
  41a86d:	add    esi,0x44
  41a870:	and    al,0x3c
  41a872:	ins    DWORD PTR es:[edi],dx
  41a873:	mov    BYTE PTR [esp+0x2b],0x90
  41a878:	mov    al,BYTE PTR [esp+0x2b]
  41a87c:	mov    cl,BYTE PTR [esp+0x3c]
  41a880:	or     al,0xdc
  41a882:	sub    al,cl
  41a884:	mov    cl,BYTE PTR [esp+0x38]
  41a888:	sub    al,0x56
  41a88a:	movzx  eax,al
  41a88d:	movzx  ecx,cl
  41a890:	cdq    
  41a891:	idiv   ecx
  41a893:	movzx  ecx,BYTE PTR [esp+0x2c]
  41a898:	or     eax,ecx
  41a89a:	mov    BYTE PTR [esp+0xc],al
  41a89e:	mov    BYTE PTR [esp+0x24],0x1
  41a8a3:	mov    BYTE PTR [esp+0x2b],0xcf
  41a8a8:	mov    BYTE PTR [esp+0x3c],0x6
  41a8ad:	mov    BYTE PTR [esp+0x38],0x25
  41a8b2:	mov    BYTE PTR [esp+0x2c],0xf8
  41a8b7:	mov    al,BYTE PTR [esp+0x2c]
  41a8bb:	mov    cl,BYTE PTR [esp+0x38]
  41a8bf:	or     al,0xc4
  41a8c1:	and    al,cl
  41a8c3:	mov    cl,BYTE PTR [esp+0x3c]
  41a8c7:	imul   cl
  41a8c9:	mov    cl,BYTE PTR [esp+0x2b]
  41a8cd:	movzx  ecx,cl
  41a8d0:	movzx  eax,al
  41a8d3:	and    eax,ecx
  41a8d5:	mov    cl,BYTE PTR [esp+0x24]
  41a8d9:	movzx  ecx,cl
  41a8dc:	cdq    
  41a8dd:	idiv   ecx
  41a8df:	mov    cl,BYTE PTR [esp+0xc]
  41a8e3:	cmp    cl,al
  41a8e5:	je     0x41a93c
  41a8eb:	lea    eax,[esp+0x9c]
  41a8f2:	push   eax
  41a8f3:	lea    edi,[esp+0x80]
  41a8fa:	call   0x40b68c
  41a8ff:	cmp    eax,ebx
  41a901:	jne    0x41a93c
  41a907:	cmp    edx,esi
  41a909:	jne    0x41a93c
  41a90f:	xor    eax,eax
  41a911:	jmp    0x41b43e
  41a916:	mov    eax,DWORD PTR [esp+0x70]
  41a91a:	mov    ecx,DWORD PTR [esp+0x74]
  41a91e:	mov    edx,DWORD PTR [esp+0x18]
  41a922:	mov    edi,DWORD PTR [esp+0x1c]
  41a926:	add    eax,edx
  41a928:	adc    ecx,edi
  41a92a:	mov    DWORD PTR [esp+0x18],eax
  41a92e:	mov    DWORD PTR [esp+0x1c],ecx
  41a932:	jmp    0x41a93c
  41a937:	mov    ebx,0xcb79b576
  41a93c:	push   0x4
  41a93e:	push   0x422708
  41a943:	lea    eax,[esp+0x6c]
  41a947:	push   eax
  41a948:	call   0x411c08
  41a94d:	mov    eax,DWORD PTR [esp+0x64]
  41a951:	push   0x4
  41a953:	push   DWORD PTR [eax+0x1a4]
  41a959:	lea    eax,[esp+0x74]
  41a95d:	push   eax
  41a95e:	call   0x411c08
  41a963:	mov    eax,DWORD PTR [esp+0x64]
  41a967:	mov    eax,DWORD PTR [eax+0x1a4]
  41a96d:	mov    eax,DWORD PTR [eax]
  41a96f:	mov    ecx,DWORD PTR [esp+0x64]
  41a973:	mov    eax,DWORD PTR [eax+0x3c]
  41a976:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41a97c:	mov    ecx,DWORD PTR [ecx]
  41a97e:	lea    eax,[ecx+eax*1+0x28]
  41a982:	mov    eax,DWORD PTR [eax]
  41a984:	add    DWORD PTR [esp+0x6c],eax
  41a988:	mov    DWORD PTR [esp+0x30],0x127
  41a990:	mov    DWORD PTR [esp+0x10],0x421a
  41a998:	mov    eax,DWORD PTR [esp+0x10]
  41a99c:	jmp    0x41abf9
  41a9a1:	add    BYTE PTR [edx-0x4b9c4ca1],al
  41a9a7:	adc    al,0xb2
  41a9a9:	sub    eax,0x56d15a28
  41a9ae:	daa    
  41a9af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9b0:	nop
  41a9b1:	repz sub eax,eax
  41a9b4:	mov    esi,0xbebec235
  41a9b9:	clc    
  41a9ba:	dec    ebp
  41a9bb:	push   edx
  41a9bc:	ret    0x15ad
  41a9bf:	jg     0x41a9c2
  41a9c1:	nop
  41a9c2:	sub    esi,DWORD PTR [edx+0x37]
  41a9c5:	ficomp WORD PTR [esi+0xa]
  41a9c8:	jmp    0x41aa11
  41a9ca:	bound  ecx,QWORD PTR [eax-0x4105d5d1]
  41a9d0:	daa    
  41a9d1:	mov    WORD PTR [ecx],?
  41a9d3:	sahf   
  41a9d4:	add    esi,DWORD PTR [ecx+0x44]
  41a9d7:	xor    DWORD PTR ds:0x59ab2164,0x1d
  41a9de:	enter  0xbe7c,0xbe
  41a9e2:	sti    
  41a9e3:	cli    
  41a9e4:	aam    0xcf
  41a9e6:	jae    0x41a9d2
  41a9e8:	ret    0xd214
  41a9eb:	xchg   ecx,eax
  41a9ec:	xlat   BYTE PTR ds:[ebx]
  41a9ed:	stos   DWORD PTR es:[edi],eax
  41a9ee:	in     al,dx
  41a9ef:	push   ds
  41a9f0:	lods   al,BYTE PTR ds:[esi]
  41a9f1:	sbb    eax,0x4019d6ec
  41a9f6:	lahf   
  41a9f7:	mov    cl,0x3a
  41a9f9:	mov    bl,0x93
  41a9fb:	pop    ss
  41a9fc:	aad    0x58
  41a9fe:	int    0xe9
  41aa00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa01:	ins    BYTE PTR es:[edi],dx
  41aa02:	imul   eax,DWORD PTR [ebp+esi*2-0x347b23f5],0x1d48802d
  41aa0d:	(bad)  
  41aa0e:	in     al,0x46
  41aa10:	or     al,0x36
  41aa12:	jle    0x41aa49
  41aa14:	pushf  
  41aa15:	mov    dh,0x31
  41aa17:	cdq    
  41aa18:	daa    
  41aa19:	inc    esp
  41aa1a:	out    dx,al
  41aa1b:	out    dx,eax
  41aa1c:	fadd   st,st(7)
  41aa1e:	inc    edi
  41aa1f:	mov    dl,bh
  41aa21:	bound  esp,QWORD PTR [edi-0x2e019f7d]
  41aa27:	in     al,0x59
  41aa29:	mov    dl,ch
  41aa2b:	pop    ds
  41aa2c:	jecxz  0x41a9b6
  41aa2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa2f:	aas    
  41aa30:	mov    ecx,0xe000200f
  41aa35:	std    
  41aa36:	push   es
  41aa37:	sub    al,0x95
  41aa39:	jnp    0x41a9e4
  41aa3b:	jo     0x41aa00
  41aa3d:	out    0xcc,al
  41aa3f:	mov    ah,BYTE PTR [eax+0x7c]
  41aa42:	lock pop ebx
  41aa44:	xchg   DWORD PTR [edx+0x4d],esi
  41aa47:	mov    ch,0xdc
  41aa49:	es retf 0xe3a6
  41aa4d:	(bad)  
  41aa4f:	pop    ds
  41aa50:	pushf  
  41aa51:	cli    
  41aa52:	cmc    
  41aa53:	xchg   BYTE PTR [edx],bh
  41aa55:	ret    
  41aa56:	or     eax,0x1a8b9a95
  41aa5b:	jecxz  0x41aa6f
  41aa5d:	xor    BYTE PTR [esi-0x6b],cl
  41aa60:	push   es
  41aa61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa62:	jnp    0x41aa80
  41aa64:	sub    edx,DWORD PTR [edx]
  41aa66:	xor    al,0x3
  41aa68:	mov    ecx,0x59846b56
  41aa6d:	(bad)  
  41aa6e:	jmp    DWORD PTR [esi-0x6]
  41aa71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa72:	push   ebp
  41aa73:	mov    al,ds:0x72825021
  41aa78:	adc    eax,0x6be4fec4
  41aa7d:	pop    edx
  41aa7e:	jns    0x41aaf5
  41aa80:	retf   
  41aa81:	add    esi,DWORD PTR [ecx+ecx*2+0x60]
  41aa85:	je     0x41aa6c
  41aa87:	jno    0x41aa40
  41aa89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa8a:	ins    DWORD PTR es:[edi],dx
  41aa8b:	dec    ebp
  41aa8c:	in     eax,dx
  41aa8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa8e:	(bad)  
  41aa8f:	neg    DWORD PTR [edx-0x7b]
  41aa92:	les    edi,FWORD PTR [esi-0x65]
  41aa95:	scas   al,BYTE PTR es:[edi]
  41aa96:	sbb    eax,DWORD PTR [ebp+0x7b]
  41aa99:	sbb    ecx,DWORD PTR [ebx+0x3ab79f39]
  41aa9f:	sub    al,0xf3
  41aaa1:	call   0xd68ff63d
  41aaa6:	repnz adc BYTE PTR [eax],bl
  41aaa9:	ja     0x41aaf4
  41aaab:	mov    esi,0xa1b74b9d
  41aab0:	aam    0x35
  41aab2:	xor    eax,0x70371053
  41aab7:	mov    ds:0x46b4e80d,al
  41aabc:	sub    al,0x76
  41aabe:	jl     0x41aa60
  41aac0:	stc    
  41aac1:	cmp    edi,DWORD PTR [ebp+0x40]
  41aac4:	(bad)  
  41aac5:	das    
  41aac6:	xchg   ecx,eax
  41aac7:	mov    eax,0xe8a1d4ea
  41aacc:	cmp    al,BYTE PTR [eax]
  41aace:	test   BYTE PTR [eax-0x35],ch
  41aad1:	xlat   BYTE PTR ds:[ebx]
  41aad2:	mov    eax,ds:0x37cb7bf5
  41aad7:	aaa    
  41aad8:	ins    BYTE PTR es:[edi],dx
  41aad9:	or     BYTE PTR [ecx+0x5b],al
  41aadc:	mov    ah,0x7c
  41aade:	out    dx,eax
  41aadf:	leave  
  41aae0:	add    al,0x29
  41aae2:	dec    ebp
  41aae3:	daa    
  41aae4:	add    BYTE PTR [ebp-0x4df78a1e],ah
  41aaea:	addr16 sub eax,0xff41514e
  41aaf0:	pop    ds
  41aaf1:	test   DWORD PTR [eax+0x6f],0x1eb51487
  41aaf8:	daa    
  41aaf9:	aas    
  41aafa:	and    al,BYTE PTR ds:0xed19ed80
  41ab00:	cli    
  41ab01:	test   dl,ah
  41ab03:	sahf   
  41ab04:	add    DWORD PTR [ecx-0x64e7534c],esp
  41ab0a:	xchg   esi,eax
  41ab0b:	cld    
  41ab0c:	mov    ch,0x1f
  41ab0e:	cld    
  41ab0f:	jp     0x41ab88
  41ab11:	or     DWORD PTR [eax-0x55],ebx
  41ab14:	adc    ah,BYTE PTR [eax+esi*4]
  41ab17:	pusha  
  41ab18:	mov    bl,BYTE PTR [edi-0x4686834b]
  41ab1e:	and    DWORD PTR [ecx+eax*8+0x93534c1],ecx
  41ab25:	stos   DWORD PTR es:[edi],eax
  41ab26:	add    al,0xd5
  41ab28:	pop    esp
  41ab29:	xor    ah,BYTE PTR [ecx-0x77]
  41ab2c:	and    BYTE PTR [esi-0x38],0x11
  41ab30:	mov    dl,BYTE PTR [ecx+edx*4-0x64957100]
  41ab37:	rcr    DWORD PTR [ebx+0x68],1
  41ab3a:	retf   
  41ab3b:	scas   eax,DWORD PTR es:[edi]
  41ab3c:	sub    edx,DWORD PTR [edx+0x2f3c22ff]
  41ab42:	pusha  
  41ab43:	out    0xf1,al
  41ab45:	outs   dx,BYTE PTR ds:[esi]
  41ab46:	or     DWORD PTR [eax-0x477171c2],ecx
  41ab4c:	add    al,0xc1
  41ab4e:	or     eax,0x993717b2
  41ab53:	test   DWORD PTR [ebp+0x2c],edi
  41ab56:	adc    eax,0x254ea3c0
  41ab5b:	mov    ecx,0x58cb1e10
  41ab60:	inc    ecx
  41ab61:	out    dx,al
  41ab62:	push   esi
  41ab63:	and    eax,0xca810b77
  41ab68:	mov    eax,0x974491b1
  41ab6d:	jecxz  0x41ab37
  41ab6f:	fiadd  DWORD PTR [ecx-0x27542a55]
  41ab75:	pushaw 
  41ab77:	add    eax,0x266e920c
  41ab7c:	sbb    al,0x8
  41ab7e:	arpl   WORD PTR [ebx+0x6a63feb8],di
  41ab84:	jbe    0x41ab7b
  41ab86:	pop    esp
  41ab87:	cmp    BYTE PTR [esp+edi*8],ch
  41ab8a:	mov    bh,0x2b
  41ab8c:	sti    
  41ab8d:	dec    esp
  41ab8e:	or     DWORD PTR [edx+ebp*2-0x2449a10a],eax
  41ab95:	into   
  41ab96:	imul   eax,DWORD PTR [esi],0xffffffb3
  41ab99:	or     al,dl
  41ab9b:	xchg   edi,eax
  41ab9c:	inc    ecx
  41ab9d:	es mov cl,0xa6
  41aba0:	pop    edx
  41aba1:	sbb    esi,esp
  41aba3:	imul   edi,DWORD PTR [esi],0x35
  41aba6:	mov    ds:0xb8b6b8a6,eax
  41abab:	nop
  41abac:	(bad)  
  41abad:	fcom   QWORD PTR [ebx]
  41abaf:	shl    DWORD PTR [ebx],0x32
  41abb2:	or     BYTE PTR [edx+0x58],ch
  41abb5:	(bad)  
  41abb7:	xor    BYTE PTR [ebx+esi*2+0x2b9bcee4],al
  41abbe:	out    0x37,eax
  41abc0:	xor    bl,0xb3
  41abc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abc4:	dec    esi
  41abc5:	cmc    
  41abc6:	fistp  DWORD PTR [ecx+0x3e]
  41abc9:	gs xchg ah,bh
  41abcc:	adc    eax,0x827cc795
  41abd1:	lea    edi,[ebx]
  41abd3:	mov    bh,0x2
  41abd5:	xchg   edx,eax
  41abd6:	aad    0x75
  41abd8:	push   ds
  41abd9:	ss mov bl,0x9d
  41abdc:	mov    dh,0x7e
  41abde:	shl    eax,0x85
  41abe1:	in     eax,0xba
  41abe3:	adc    BYTE PTR [eax+0x9],0x8c
  41abe7:	cmp    edx,0x2c
  41abea:	imul   ecx,DWORD PTR [ebx-0x79bf0eba],0xacb5f253
  41abf4:	imul   ebx,DWORD PTR ds:0x2582c76a,0x44
  41abfb:	ret    0xffff
  41abfe:	add    eax,DWORD PTR [esp+0x30]
  41ac02:	and    eax,0xfffffe5a
  41ac07:	jmp    0x41ae64
  41ac0c:	xor    DWORD PTR [edi-0x1f],ebp
  41ac0f:	frstor [esp+esi*2+0x1832b431]
  41ac16:	test   bh,cl
  41ac18:	das    
  41ac19:	mov    eax,ds:0x2d6be3ac
  41ac1e:	sar    BYTE PTR [esi-0x41413dcb],0x4d
  41ac25:	imul   esi,DWORD PTR [edx+edx*4+0x28],0xf
  41ac2a:	test   al,0xca
  41ac2c:	sub    eax,0x23d86765
  41ac31:	js     0x41abfc
  41ac33:	push   esi
  41ac34:	push   eax
  41ac35:	adc    DWORD PTR [edx-0x1858c732],ecx
  41ac3b:	push   edi
  41ac3c:	pop    ebx
  41ac3d:	sbb    eax,0xf83b104b
  41ac42:	daa    
  41ac43:	pop    ss
  41ac44:	push   ss
  41ac45:	stos   DWORD PTR es:[edi],eax
  41ac46:	mov    dh,cl
  41ac48:	and    BYTE PTR [ebp-0xd],dh
  41ac4b:	and    DWORD PTR [esi-0x257910a6],0xb99bfd1d
  41ac55:	sub    DWORD PTR [edx+0x172b13e1],0xdc9639b8
  41ac5f:	adc    BYTE PTR [edi-0x42f8ed8d],ah
  41ac65:	or     al,0x86
  41ac67:	dec    ebp
  41ac68:	(bad)  
  41ac69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac6a:	mov    al,ds:0x75e6e1f3
  41ac6f:	call   0xa112:0x36bfbb25
  41ac76:	or     BYTE PTR [ebx+0x6b0d7873],0xe7
  41ac7d:	jp     0x41ac5e
  41ac7f:	jnp    0x41ac66
  41ac81:	dec    edx
  41ac82:	cmc    
  41ac83:	mov    al,0xd5
  41ac85:	js     0x41ac29
  41ac87:	adc    ch,al
  41ac89:	push   eax
  41ac8a:	cmp    eax,DWORD PTR [esi+0x1717f5ed]
  41ac90:	sahf   
  41ac91:	push   0xffffffd8
  41ac93:	out    0xe1,al
  41ac95:	fs mov al,0x3d
  41ac98:	mov    DWORD PTR [edi],esi
  41ac9a:	mov    ds:0x940d1203,al
  41ac9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aca0:	aaa    
  41aca1:	outs   dx,BYTE PTR ds:[esi]
  41aca2:	inc    ebp
  41aca3:	pop    esi
  41aca4:	(bad)  
  41aca5:	aaa    
  41aca6:	call   0xf625:0x64da81a5
  41acad:	sbb    al,BYTE PTR cs:[edx+0x848d09b]
  41acb4:	jmp    FWORD PTR [edx-0x2999529]
  41acba:	rcl    dh,1
  41acbc:	in     al,dx
  41acbd:	popf   
  41acbe:	jmp    0x41ac4b
  41acc0:	xor    al,0x9d
  41acc2:	addr16 test al,0x3f
  41acc5:	imul   edi,esp,0x6e
  41acc8:	sbb    dl,cl
  41acca:	(bad)  
  41accb:	mov    WORD PTR [ebp+0x5a8de67e],?
  41acd1:	lods   al,BYTE PTR ds:[esi]
  41acd2:	push   esp
  41acd3:	jp     0x41ad38
  41acd5:	jb     0x41acba
  41acd7:	dec    esi
  41acd8:	inc    edx
  41acd9:	int    0x69
  41acdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acdc:	push   edx
  41acdd:	sbb    BYTE PTR [edi+ebx*2+0x2604d93b],dh
  41ace4:	test   DWORD PTR ds:0x84e3eeb7,ebp
  41acea:	stos   BYTE PTR es:[edi],al
  41aceb:	repz shrd eax,esp,0x5
  41acf0:	fisubr WORD PTR [edi+ebx*2+0x2c5f6571]
  41acf7:	(bad)  
  41acf8:	mov    bl,0x75
  41acfa:	xor    DWORD PTR [edi+0x4ba6e958],edi
  41ad00:	(bad)  [edx-0x58]
  41ad03:	scas   al,BYTE PTR es:[edi]
  41ad04:	fsub   QWORD PTR ds:0xf53b9317
  41ad0a:	lahf   
  41ad0b:	aaa    
  41ad0c:	dec    edi
  41ad0d:	stos   DWORD PTR es:[edi],eax
  41ad0e:	mov    ds:0x1acc511c,al
  41ad13:	call   0x4ffe:0xcf722658
  41ad1a:	push   0xff9dc9e4
  41ad1f:	pop    ebx
  41ad20:	out    dx,al
  41ad21:	popf   
  41ad22:	test   al,0x3d
  41ad24:	loopne 0x41ad25
  41ad26:	sar    DWORD PTR [eax-0x4854e3e9],1
  41ad2c:	push   0x69
  41ad2e:	shl    ebx,0xa0
  41ad31:	jne    0x41adb1
  41ad33:	cmp    edi,DWORD PTR [ecx+0xf]
  41ad36:	xchg   esp,eax
  41ad37:	and    al,0x54
  41ad39:	or     ebp,DWORD PTR [edi]
  41ad3b:	popa   
  41ad3c:	setne  BYTE PTR [eax]
  41ad3f:	mov    WORD PTR [di+0x23],ss
  41ad43:	jae    0x41ad43
  41ad45:	sbb    DWORD PTR [ebx+ebp*8],esp
  41ad48:	loop   0x41ad3b
  41ad4a:	xor    al,0xd2
  41ad4c:	fcmovnu st,st(4)
  41ad4e:	int3   
  41ad4f:	pop    edi
  41ad50:	mov    ecx,edi
  41ad52:	mov    cl,cl
  41ad54:	sar    DWORD PTR [edx+0x8],0x3
  41ad58:	call   0xb9e9b33f
  41ad5d:	mov    bl,0x1b
  41ad5f:	(bad)  [eax]
  41ad61:	push   ebx
  41ad62:	es jp  0x41ad61
  41ad65:	icebp  
  41ad66:	js     0x41adba
  41ad68:	jg     0x41acea
  41ad6a:	sub    DWORD PTR [esp+edx*4],esi
  41ad6d:	ror    edx,0x3f
  41ad70:	and    eax,0xad7ec42e
  41ad75:	lahf   
  41ad76:	outs   dx,DWORD PTR ds:[esi]
  41ad77:	add    dh,0xc2
  41ad7a:	adc    ebx,ebx
  41ad7c:	push   esi
  41ad7d:	push   edi
  41ad7e:	sub    BYTE PTR [edx-0x32],ah
  41ad81:	je     0x41add7
  41ad83:	mov    ebp,0x32eb89ab
  41ad88:	jne    0x41adb3
  41ad8a:	lahf   
  41ad8b:	push   es
  41ad8c:	gs bnd call 0xdb2c1f58
  41ad93:	sahf   
  41ad94:	push   0x15
  41ad96:	js     0x41ad5c
  41ad98:	or     DWORD PTR [ecx+edi*2-0x5b4757ef],0x27
  41ada0:	mov    ds:0xccc9d7b9,al
  41ada5:	out    dx,al
  41ada6:	jo     0x41adf4
  41ada8:	std    
  41ada9:	and    eax,edi
  41adab:	out    dx,eax
  41adac:	arpl   WORD PTR [edi+0x6c0eac57],cx
  41adb2:	sti    
  41adb3:	push   ebp
  41adb4:	xchg   ecx,eax
  41adb5:	mov    ds:0xdb204fe1,eax
  41adba:	frstor [eax-0x71]
  41adbd:	jbe    0x41add8
  41adbf:	dec    edx
  41adc0:	mov    gs,WORD PTR [esi]
  41adc2:	mov    eax,ds:0x3e3df459
  41adc7:	sti    
  41adc8:	mov    al,0xf2
  41adca:	call   0x5d03:0x9299e2d9
  41add1:	inc    ebx
  41add2:	aad    0xdf
  41add4:	std    
  41add5:	add    DWORD PTR [ebp+0x745bd4d],0xdc1aaac0
  41addf:	mov    dh,0x3b
  41ade1:	pop    ebp
  41ade2:	and    al,0x54
  41ade4:	sbb    BYTE PTR [ebp-0x22],cl
  41ade7:	or     BYTE PTR [ecx+0x60],0xf5
  41adeb:	jbe    0x41adb9
  41aded:	loopne 0x41ae5f
  41adef:	sub    al,0x5f
  41adf1:	mov    ecx,0x318bebbc
  41adf6:	addr16 pop edi
  41adf8:	ins    BYTE PTR es:[edi],dx
  41adf9:	int3   
  41adfa:	pop    edi
  41adfb:	fbld   TBYTE PTR [edi]
  41adfd:	test   eax,0xf3325faf
  41ae02:	sbb    BYTE PTR [ebx-0x78ee584f],dl
  41ae08:	fwait
  41ae09:	mov    ecx,0x5ab0fde1
  41ae0e:	sti    
  41ae0f:	push   eax
  41ae10:	xchg   edi,eax
  41ae11:	push   0x3075c9b7
  41ae16:	std    
  41ae17:	scas   eax,DWORD PTR es:[edi]
  41ae18:	fbstp  TBYTE PTR [ebx+0x5f]
  41ae1b:	(bad)  
  41ae1c:	push   ebx
  41ae1d:	fcomi  st,st(7)
  41ae1f:	or     eax,0x72584442
  41ae24:	adc    al,bl
  41ae26:	pop    es
  41ae27:	push   esp
  41ae28:	mov    al,ds:0x1cce7d93
  41ae2d:	push   ecx
  41ae2e:	int    0x1e
  41ae30:	aad    0x3f
  41ae32:	shl    BYTE PTR [ebx],0xb
  41ae35:	pop    esi
  41ae36:	push   esi
  41ae37:	mov    WORD PTR [ebx+0xd],gs
  41ae3a:	sub    ebx,esi
  41ae3c:	and    ch,BYTE PTR [eax]
  41ae3e:	sar    DWORD PTR [esi+edi*1+0x25],cl
  41ae42:	inc    bp
  41ae44:	sbb    ah,BYTE PTR [ebp+0x430e35a3]
  41ae4a:	mov    bh,0xcc
  41ae4c:	(bad)  
  41ae4d:	sti    
  41ae4e:	loop   0x41ae4f
  41ae50:	ins    BYTE PTR es:[edi],dx
  41ae51:	push   ecx
  41ae52:	cld    
  41ae53:	into   
  41ae54:	cwde   
  41ae55:	and    cl,BYTE PTR [eax-0x277ab66c]
  41ae5b:	lods   al,BYTE PTR ds:[esi]
  41ae5c:	add    BYTE PTR [edx],0x14
  41ae5f:	inc    ecx
  41ae60:	mov    dl,0x95
  41ae62:	or     al,0xa8
  41ae64:	sub    eax,0x2ae1
  41ae69:	and    eax,0x6f90
  41ae6e:	mov    DWORD PTR [esp+0x30],eax
  41ae72:	mov    DWORD PTR [esp+0x10],0x1515
  41ae7a:	mov    eax,DWORD PTR [esp+0x10]
  41ae7e:	jmp    0x41b0db
  41ae83:	sub    al,0xff
  41ae85:	jmp    0xe1b3:0xbcbce956
  41ae8c:	in     al,0x38
  41ae8e:	xchg   edx,eax
  41ae8f:	xchg   edx,eax
  41ae90:	mov    bh,BYTE PTR [esp+eiz*4-0x413fce1d]
  41ae97:	xor    eax,0xc8bebec2
  41ae9c:	(bad)  
  41ae9d:	mov    al,0x91
  41ae9f:	mov    fs,WORD PTR [esi+0x3a]
  41aea2:	jns    0x41ae61
  41aea4:	int3   
  41aea5:	ss sub eax,0xeff07bee
  41aeab:	pop    esi
  41aeac:	add    eax,0x25852e34
  41aeb1:	xor    bl,BYTE PTR [ebx]
  41aeb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aeb4:	sub    al,0xb5
  41aeb6:	add    DWORD PTR [ecx],ebx
  41aeb8:	add    DWORD PTR [ebx],esi
  41aeba:	mov    dl,0x3e
  41aebc:	xor    BYTE PTR [ebx+ebx*4+0x4fe774b0],bl
  41aec3:	inc    DWORD PTR [ecx+0x3b]
  41aec6:	cli    
  41aec7:	sbb    dl,BYTE PTR [eax-0x3fb7cc5a]
  41aecd:	scas   al,BYTE PTR es:[edi]
  41aece:	add    DWORD PTR [ebp-0x787c3ded],ebx
  41aed4:	jmp    0x10c37f3b
  41aed9:	aad    0x3f
  41aedb:	add    DWORD PTR [eax],esi
  41aedd:	add    bl,dl
  41aedf:	rol    DWORD PTR [esi],cl
  41aee1:	test   eax,0x5a3b3e55
  41aee6:	dec    edx
  41aee7:	push   cs
  41aee8:	inc    esp
  41aee9:	into   
  41aeea:	and    cl,al
  41aeec:	fcomp  QWORD PTR ds:[esi+0x33]
  41aef0:	loopne 0x41aeaf
  41aef2:	pop    ebp
  41aef3:	cld    
  41aef4:	in     al,dx
  41aef5:	int    0xc9
  41aef7:	pop    edi
  41aef8:	sbb    edx,edx
  41aefa:	push   eax
  41aefb:	inc    eax
  41aefc:	nop
  41aefd:	push   ebp
  41aefe:	xchg   esi,eax
  41aeff:	imul   ecx,DWORD PTR [edi],0x4e886d30
  41af05:	sti    
  41af06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af07:	dec    eax
  41af08:	add    eax,0xfdec6e9c
  41af0d:	cmc    
  41af0e:	(bad)  
  41af0f:	iret   
  41af10:	mov    al,0x75
  41af12:	scas   eax,DWORD PTR es:[edi]
  41af13:	jne    0x41af47
  41af15:	std    
  41af16:	mov    bl,0x52
  41af18:	xor    esp,DWORD PTR [ebx-0xca533bf]
  41af1e:	scas   al,BYTE PTR es:[edi]
  41af1f:	jp     0x41af19
  41af21:	and    dl,BYTE PTR [edx-0x35]
  41af24:	sbb    eax,0x7472ee37
  41af29:	retf   
  41af2a:	call   0x31c:0x5b9fd296
  41af31:	mov    dl,ch
  41af33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af34:	pop    ebp
  41af35:	aad    0x90
  41af37:	push   ebx
  41af38:	mov    esp,0xd0c2d18b
  41af3d:	retf   0xefa7
  41af40:	dec    edi
  41af41:	mov    ebp,0x6d0b5b20
  41af46:	test   DWORD PTR [ebp+0x21542806],ebx
  41af4c:	dec    esp
  41af4d:	scas   eax,DWORD PTR es:[edi]
  41af4e:	(bad)  
  41af4f:	cli    
  41af50:	add    ch,BYTE PTR [ebp-0x10d978f6]
  41af56:	mov    esi,0x41b4a08e
  41af5b:	sbb    DWORD PTR [edi+0x10403a02],eax
  41af61:	test   eax,0xa3b9178a
  41af66:	aas    
  41af67:	and    eax,0x5c23c6f7
  41af6c:	or     esi,DWORD PTR [ebp-0x18104746]
  41af72:	dec    esi
  41af73:	adc    eax,0x81041ee3
  41af78:	sbb    eax,0xdf2b74d1
  41af7d:	repz push eax
  41af7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af80:	lahf   
  41af81:	test   eax,0xff6fa543
  41af86:	mov    ebx,0x552a0fb1
  41af8b:	(bad)  
  41af8c:	xor    ecx,DWORD PTR [edx]
  41af8e:	js     0x41af61
  41af90:	xchg   edx,eax
  41af91:	int3   
  41af92:	mov    esi,0x4513691
  41af97:	lods   eax,DWORD PTR ds:[esi]
  41af98:	pop    edx
  41af99:	dec    ebp
  41af9a:	mov    ds:0x2383a5ef,eax
  41af9f:	fidiv  WORD PTR [ebx-0x6fcc5d5c]
  41afa5:	cmc    
  41afa6:	aam    0xb5
  41afa8:	mov    dl,0xfa
  41afaa:	lahf   
  41afab:	sti    
  41afac:	inc    esp
  41afad:	cmp    dl,BYTE PTR [esp+ebp*1]
  41afb0:	imul   ebp,ecx,0x5
  41afb3:	xchg   esi,eax
  41afb4:	add    BYTE PTR [edx+0x5c2c835c],al
  41afba:	sub    esi,DWORD PTR [edx+0x57]
  41afbd:	mov    ah,0xd4
  41afbf:	xor    DWORD PTR ds:0x6b86bc32,esi
  41afc5:	jne    0x41af5f
  41afc7:	xor    BYTE PTR [edi],ah
  41afc9:	or     DWORD PTR [eax-0x2d550092],ecx
  41afcf:	je     0x41b00d
  41afd1:	rcr    DWORD PTR [edx+0x59631ef3],1
  41afd7:	mov    DWORD PTR [eax+ebp*2+0x30],ebx
  41afdb:	mov    edi,0xdeb309f3
  41afe0:	jb     0x41afc7
  41afe2:	pop    eax
  41afe3:	jmp    0xa29ef3a9
  41afe8:	fisubr DWORD PTR [edi+0x6ec5e326]
  41afee:	mov    ah,0x40
  41aff0:	push   ebx
  41aff1:	enter  0xfdec,0xf6
  41aff5:	dec    eax
  41aff6:	fwait
  41aff7:	jae    0x41af95
  41aff9:	ret    0x7585
  41affc:	mov    eax,ds:0x2d26ed99
  41b001:	mov    al,ds:0xcc996736
  41b006:	outs   dx,DWORD PTR ds:[esi]
  41b007:	in     al,dx
  41b008:	in     al,dx
  41b009:	data16 mov dl,0x64
  41b00c:	(bad)  
  41b00d:	fiadd  WORD PTR [esi-0x287e2de1]
  41b013:	test   BYTE PTR [edi+0xe],dh
  41b016:	adc    al,0x55
  41b018:	inc    ebx
  41b019:	mov    bh,0xe5
  41b01b:	outs   dx,DWORD PTR ds:[esi]
  41b01c:	into   
  41b01d:	mov    bh,0x82
  41b01f:	mov    ds:0x315519de,eax
  41b024:	(bad)  
  41b025:	jnp    0x41afa7
  41b027:	sbb    ch,0x86
  41b02a:	mov    gs,esi
  41b02c:	pop    esi
  41b02d:	int3   
  41b02e:	mov    eax,ds:0x3d8b374
  41b033:	jl     0x41b0b2
  41b035:	add    al,0x97
  41b037:	in     al,dx
  41b038:	jmp    DWORD PTR [edi]
  41b03a:	sub    dl,ch
  41b03c:	int3   
  41b03d:	imul   esp,esp,0x623a2b7
  41b043:	pop    ss
  41b044:	pop    edi
  41b045:	hlt    
  41b046:	sub    eax,0x67bba535
  41b04b:	pop    ebp
  41b04c:	mov    ah,0xf6
  41b04e:	push   ecx
  41b04f:	inc    ecx
  41b050:	push   edx
  41b051:	in     eax,dx
  41b052:	sbb    al,0x41
  41b054:	mov    esi,0x6f16646c
  41b059:	aad    0x58
  41b05b:	xor    eax,0xa1d77332
  41b060:	or     eax,0xa264a8be
  41b065:	out    0xa2,eax
  41b067:	or     bl,dl
  41b069:	mov    al,0x99
  41b06b:	ret    0xd572
  41b06e:	add    eax,0xe04f86ea
  41b073:	and    al,0xf5
  41b075:	stos   BYTE PTR es:[edi],al
  41b076:	mov    esp,0xb371414b
  41b07b:	xor    eax,0x930e5ad0
  41b080:	adc    ecx,DWORD PTR [edi]
  41b082:	push   eax
  41b083:	(bad)  
  41b084:	(bad)  
  41b085:	fs pop eax
  41b087:	adc    BYTE PTR [ecx+ebp*2-0x194795d5],dh
  41b08e:	mov    edx,0x17232c46
  41b093:	std    
  41b094:	jmp    0xd5a4:0x2a656272
  41b09b:	sub    ch,BYTE PTR [ecx]
  41b09d:	xor    BYTE PTR [eax+0x5a],cl
  41b0a0:	push   edi
  41b0a1:	sbb    BYTE PTR [ebx+edx*2],ch
  41b0a4:	jecxz  0x41b0dd
  41b0a6:	ror    BYTE PTR [ebx+ebx*4-0x58966a58],cl
  41b0ad:	xor    ebx,edx
  41b0af:	fsubr  QWORD PTR [eax]
  41b0b1:	std    
  41b0b2:	add    eax,0x59f60acf
  41b0b7:	adc    DWORD PTR es:[ebp+eiz*1+0x21],esi
  41b0bc:	in     eax,dx
  41b0bd:	cmp    DWORD PTR ds:0xae54f2f6,0xffffff9f
  41b0c4:	pop    esi
  41b0c5:	mov    ebx,0x8f8239c5
  41b0ca:	imul   ebp,DWORD PTR [eax+eiz*8-0x7cb350c3],0x8b7ae740
  41b0d5:	repnz std 
  41b0d7:	cmp    BYTE PTR [edx+0x4c8ba7f6],bh
  41b0dd:	and    al,0x30
  41b0df:	or     eax,0x7113
  41b0e4:	add    eax,0x3d6a
  41b0e9:	cmp    ecx,eax
  41b0eb:	je     0x41b438
  41b0f1:	mov    eax,DWORD PTR [esp+0x40]
  41b0f5:	mov    edx,DWORD PTR [esp+0x18]
  41b0f9:	mov    edi,DWORD PTR [esp+0x1c]
  41b0fd:	xor    ecx,ecx
  41b0ff:	shld   ecx,eax,0x2
  41b103:	shl    eax,0x2
  41b106:	xor    eax,ebx
  41b108:	xor    ecx,esi
  41b10a:	cmp    eax,edx
  41b10c:	jne    0x41b11a
  41b112:	cmp    ecx,edi
  41b114:	je     0x41b3f1
  41b11a:	mov    eax,DWORD PTR [esp+0x44]
  41b11e:	mov    eax,DWORD PTR [esp+0x44]
  41b122:	mov    eax,DWORD PTR [esp+0x44]
  41b126:	mov    ecx,DWORD PTR [esp+0x44]
  41b12a:	jmp    0x41b387
  41b12f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b131:	lea    ecx,[ecx-0x67]
  41b134:	jnp    0x41b171
  41b136:	mov    bh,0x0
  41b138:	lods   al,BYTE PTR ds:[esi]
  41b139:	dec    esp
  41b13a:	xchg   edx,eax
  41b13b:	xchg   edx,eax
  41b13c:	adc    eax,0x355ccfee
  41b141:	sar    BYTE PTR [esi-0x41413dcb],0xc6
  41b148:	adc    eax,0x1c63c389
  41b14d:	pop    ss
  41b14e:	cdq    
  41b14f:	jge    0x41b19a
  41b151:	icebp  
  41b152:	jae    0x41b17a
  41b154:	dec    edi
  41b155:	push   esi
  41b156:	dec    esi
  41b157:	xor    dl,bl
  41b159:	sub    ah,BYTE PTR [edx-0x874b11e]
  41b15f:	xchg   cl,ah
  41b161:	cwde   
  41b162:	fwait
  41b163:	cmp    esi,0xffffffaa
  41b166:	in     eax,dx
  41b167:	xor    BYTE PTR [ebx],cl
  41b169:	test   DWORD PTR [ebx-0x2dace8fc],edx
  41b16f:	scas   eax,DWORD PTR es:[edi]
  41b170:	fisubr DWORD PTR [eax+0x77]
  41b173:	mov    eax,0x234cd023
  41b178:	lods   eax,DWORD PTR ds:[esi]
  41b179:	mov    edx,0x9eb24f32
  41b17e:	dec    ebp
  41b17f:	jg     0x41b17b
  41b181:	push   ss
  41b182:	pop    ebp
  41b183:	jno    0x41b16b
  41b185:	and    BYTE PTR [ecx],0xc1
  41b188:	les    edx,FWORD PTR [eax+0x26800279]
  41b18e:	jo     0x41b1d6
  41b190:	cmp    edx,eax
  41b192:	inc    edx
  41b193:	in     eax,dx
  41b194:	hlt    
  41b195:	shl    DWORD PTR [edx+0x2f8b732c],1
  41b19b:	xor    eax,0xa8e62bfb
  41b1a0:	loop   0x41b13f
  41b1a2:	inc    esp
  41b1a3:	sub    ch,BYTE PTR [esp+esi*4]
  41b1a6:	xor    edi,eax
  41b1a8:	adc    eax,0x362ff877
  41b1ad:	xchg   DWORD PTR [edi-0x7a],esi
  41b1b0:	mov    bp,0x831c
  41b1b4:	jmp    0x1dd7611c
  41b1b9:	dec    eax
  41b1ba:	mov    DWORD PTR [ebp+0x46],esp
  41b1bd:	icebp  
  41b1be:	test   BYTE PTR [ebp-0x10609550],0x13
  41b1c5:	dec    ecx
  41b1c6:	jl     0x41b16e
  41b1c8:	stos   BYTE PTR es:[edi],al
  41b1c9:	bound  edx,QWORD PTR [ecx+0x117eddb9]
  41b1cf:	dec    ecx
  41b1d0:	jne    0x41b19b
  41b1d2:	jo     0x41b1d4
  41b1d4:	add    dl,al
  41b1d6:	pop    esi
  41b1d7:	popf   
  41b1d8:	dec    ebx
  41b1d9:	(bad)  
  41b1da:	loop   0x41b1ef
  41b1dc:	push   cs
  41b1dd:	or     DWORD PTR [esi],esi
  41b1df:	jmp    0x41b177
  41b1e1:	repnz fstp DWORD PTR [edx-0x2e]
  41b1e5:	sbb    ah,dh
  41b1e7:	xchg   esi,eax
  41b1e8:	xor    BYTE PTR [edi],ah
  41b1ea:	and    cl,al
  41b1ec:	inc    edi
  41b1ed:	rdtsc  
  41b1ef:	popf   
  41b1f0:	test   BYTE PTR ds:0xef051252,dh
  41b1f6:	stos   BYTE PTR es:[edi],al
  41b1f7:	popa   
  41b1f8:	aaa    
  41b1f9:	scas   al,BYTE PTR es:[edi]
  41b1fa:	xchg   DWORD PTR [ecx-0x7d5422f3],eax
  41b200:	out    dx,al
  41b201:	mov    ds:0xda7640de,eax
  41b206:	es aad 0x73
  41b209:	icebp  
  41b20a:	mov    bl,0xb2
  41b20c:	push   edi
  41b20d:	fcmovnb st,st(2)
  41b20f:	mov    ds:0xe79d734c,eax
  41b214:	inc    ebx
  41b215:	js     0x41b216
  41b217:	(bad)  
  41b218:	in     eax,dx
  41b219:	test   al,0x4e
  41b21b:	mov    ah,al
  41b21d:	adc    dl,BYTE PTR [edi-0x2]
  41b220:	sbb    DWORD PTR [ebp+0x5f],esi
  41b223:	imul   edi,DWORD PTR [ecx+ebp*8+0x3d],0x5
  41b228:	aad    0x27
  41b22a:	cs jb  0x41b212
  41b22d:	xchg   esi,eax
  41b22e:	and    BYTE PTR [eax-0x48f8f45],bh
  41b234:	test   eax,0x187dae51
  41b239:	jns    0x41b1ea
  41b23b:	shr    esp,cl
  41b23d:	ud0    edi,DWORD PTR [esi]
  41b240:	pushf  
  41b241:	bound  esp,QWORD PTR [ebx]
  41b243:	sbb    al,0x9a
  41b245:	xor    bh,al
  41b247:	or     ah,BYTE PTR [esi+0x3c]
  41b24a:	dec    esi
  41b24b:	cwde   
  41b24c:	outs   dx,BYTE PTR ds:[esi]
  41b24d:	jmp    0x41b1f7
  41b24f:	add    cl,BYTE PTR [esi+0x3686c2c6]
  41b255:	lods   al,BYTE PTR ds:[esi]
  41b256:	dec    edi
  41b257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b258:	jae    0x41b21d
  41b25a:	(bad)  
  41b25b:	dec    ecx
  41b25c:	cmp    al,0xcc
  41b25e:	push   es
  41b25f:	inc    edx
  41b260:	dec    ebp
  41b261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b262:	mov    ch,0x38
  41b264:	clc    
  41b265:	aaa    
  41b266:	in     al,dx
  41b267:	dec    ecx
  41b268:	inc    esi
  41b269:	shl    DWORD PTR [edx-0x2c],1
  41b26c:	add    esp,DWORD PTR [eax+0x56313fb1]
  41b272:	shr    edi,1
  41b274:	push   esp
  41b275:	cli    
  41b276:	push   esp
  41b277:	dec    ebx
  41b278:	pop    fs
  41b27a:	retf   
  41b27b:	jnp    0x41b28a
  41b27d:	pop    ecx
  41b27e:	dec    ebp
  41b27f:	or     al,BYTE PTR [ebx]
  41b281:	jne    0x41b2e6
  41b283:	jno    0x41b303
  41b285:	adc    ebp,DWORD PTR ds:0x8f82a112
  41b28b:	add    BYTE PTR [ecx+0x59f54c0a],0xf4
  41b292:	mov    ds:0xc68fbd9f,eax
  41b297:	mov    cl,0x15
  41b29a:	retf   
  41b29b:	fnstcw WORD PTR [edx-0x8]
  41b29e:	pop    edx
  41b29f:	je     0x41b300
  41b2a1:	xchg   edx,eax
  41b2a2:	out    0x6,eax
  41b2a4:	jae    0x41b301
  41b2a6:	scas   al,BYTE PTR es:[edi]
  41b2a7:	(bad)
  41b2ab:	sti    
  41b2ac:	add    BYTE PTR [esp+esi*8+0x3c7dfc9e],dl
  41b2b3:	gs sub eax,0x27c60130
  41b2b9:	push   ecx
  41b2ba:	jecxz  0x41b31c
  41b2bc:	call   0xdc253dd5
  41b2c1:	cmp    eax,DWORD PTR [eax+0x2407afa7]
  41b2c7:	cmp    al,0x72
  41b2c9:	push   0x4d
  41b2cb:	dec    esi
  41b2cc:	fwait
  41b2cd:	pop    edx
  41b2ce:	jns    0x41b2b7
  41b2d0:	inc    ebp
  41b2d1:	rcr    BYTE PTR [edi-0x56],cl
  41b2d4:	cmc    
  41b2d5:	das    
  41b2d6:	test   BYTE PTR [ebp-0x17],0xd6
  41b2da:	cwde   
  41b2db:	jnp    0x41b296
  41b2dd:	mov    dh,0x1f
  41b2df:	adc    eax,0x213994da
  41b2e4:	inc    ecx
  41b2e5:	fdivr  DWORD PTR [ebx-0x54]
  41b2e8:	fwait
  41b2e9:	ror    esp,1
  41b2eb:	xor    BYTE PTR [ecx],bh
  41b2ed:	jne    0x41b279
  41b2ef:	rol    BYTE PTR [ecx+0x59],0xde
  41b2f3:	push   edi
  41b2f4:	test   BYTE PTR [esi+0x4],ch
  41b2f7:	ret    
  41b2f8:	fdiv   QWORD PTR ds:0x19ed137f
  41b2fe:	mov    ebp,0xaeb1e023
  41b303:	or     eax,0xad3d46d1
  41b308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b309:	jmp    0x41b37a
  41b30b:	fisub  WORD PTR [ebp+0x78e42966]
  41b311:	dec    esi
  41b312:	pop    edx
  41b313:	fldenv [ecx+0x4166ed0d]
  41b319:	jecxz  0x41b2f5
  41b31b:	stos   BYTE PTR es:[edi],al
  41b31c:	mov    es,edi
  41b31e:	pop    edx
  41b31f:	aaa    
  41b320:	mov    DWORD PTR [ebx],eax
  41b322:	or     eax,0xbab18422
  41b327:	enter  0xf09d,0xe4
  41b32b:	inc    esi
  41b32c:	clc    
  41b32d:	aas    
  41b32e:	pop    es
  41b32f:	(bad)  
  41b330:	imul   edi,edx,0x64
  41b333:	nop
  41b334:	aam    0x23
  41b336:	scas   eax,DWORD PTR es:[edi]
  41b337:	clc    
  41b338:	mov    ebx,0x5abbf8c2
  41b33d:	cdq    
  41b33e:	add    bh,ch
  41b340:	cmp    dl,BYTE PTR [esi]
  41b342:	cmp    al,0x18
  41b344:	popa   
  41b345:	ret    
  41b346:	lahf   
  41b347:	repnz push 0x19
  41b34a:	iret   
  41b34b:	xchg   DWORD PTR [eax-0x14],eax
  41b34e:	je     0x41b34d
  41b350:	out    dx,al
  41b351:	fild   QWORD PTR [eax-0x5]
  41b354:	call   0x45cd:0xbae2c9f0
  41b35b:	pusha  
  41b35c:	push   ds
  41b35d:	sbb    al,0xe1
  41b35f:	xlat   BYTE PTR ds:[ebx]
  41b360:	or     edx,DWORD PTR gs:[edi]
  41b363:	jl     0x41b345
  41b365:	push   ebx
  41b366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b367:	aaa    
  41b368:	pop    esi
  41b369:	sbb    ecx,DWORD PTR [ecx+ebp*8-0x69]
  41b36d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b36e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b36f:	push   edx
  41b370:	int    0x7b
  41b372:	nop
  41b373:	dec    edi
  41b374:	mov    cl,BYTE PTR [ecx+0x5]
  41b377:	sahf   
  41b378:	cmp    edx,DWORD PTR [ebx-0x17]
  41b37b:	out    0x9d,al
  41b37d:	aad    0xbf
  41b37f:	or     BYTE PTR [ebx+0x36],0x1c
  41b383:	sub    eax,0x353595c8
  41b388:	scas   eax,DWORD PTR es:[edi]
  41b389:	fwait
  41b38a:	push   es
  41b38b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b38c:	xor    ecx,0xfffffffe
  41b38f:	shr    eax,0x2
  41b392:	shl    ecx,0x1e
  41b395:	or     eax,ecx
  41b397:	xor    ecx,ecx
  41b399:	shld   ecx,eax,0x2
  41b39d:	shl    eax,0x2
  41b3a0:	xor    eax,ebx
  41b3a2:	xor    ecx,esi
  41b3a4:	cmp    eax,0xcb79b572
  41b3a9:	jne    0x41b3b7
  41b3af:	cmp    ecx,esi
  41b3b1:	je     0x41b438
  41b3b7:	mov    eax,DWORD PTR [esp+0x60]
  41b3bb:	cdq    
  41b3bc:	mov    eax,DWORD PTR [esp+0x60]
  41b3c0:	mov    ecx,edx
  41b3c2:	cdq    
  41b3c3:	shld   edx,eax,0x2
  41b3c7:	shr    ecx,0x1e
  41b3ca:	xor    edi,edi
  41b3cc:	shl    eax,0x2
  41b3cf:	or     eax,ecx
  41b3d1:	or     edx,edi
  41b3d3:	mov    ecx,edx
  41b3d5:	mov    edx,DWORD PTR [esp+0x18]
  41b3d9:	xor    eax,ebx
  41b3db:	xor    ecx,esi
  41b3dd:	mov    esi,DWORD PTR [esp+0x1c]
  41b3e1:	cmp    edx,eax
  41b3e3:	jne    0x41b3f1
  41b3e9:	cmp    esi,ecx
  41b3eb:	je     0x41b438
  41b3f1:	push   DWORD PTR ds:0x4227f8
  41b3f7:	push   DWORD PTR ds:0x42258c
  41b3fd:	mov    eax,ds:0x422708
  41b402:	mov    eax,DWORD PTR [eax+0x1a4]
  41b408:	push   DWORD PTR [eax]
  41b40a:	mov    eax,DWORD PTR [esp+0x78]
  41b40e:	call   eax
  41b410:	mov    ecx,DWORD PTR ds:0x422708
  41b416:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41b41c:	mov    DWORD PTR [ecx],eax
  41b41e:	mov    eax,ds:0x422708
  41b423:	push   0x4
  41b425:	add    eax,0x1dc
  41b42a:	push   eax
  41b42b:	lea    eax,[esp+0x84]
  41b432:	push   eax
  41b433:	call   0x411c08
  41b438:	mov    eax,DWORD PTR [esp+0x7c]
  41b43c:	mov    eax,DWORD PTR [eax]
  41b43e:	pop    edi
  41b43f:	pop    esi
  41b440:	pop    ebx
  41b441:	mov    esp,ebp
  41b443:	pop    ebp
  41b444:	ret    0xc
  41b447:	push   ebp
  41b448:	mov    ebp,esp
  41b44a:	sub    esp,0x23c
  41b450:	push   ebx
  41b451:	cmp    DWORD PTR ds:0x428565,0x0
  41b458:	mov    DWORD PTR ds:0x42834d,0x2d97
  41b462:	mov    ecx,DWORD PTR ds:0x428465
  41b468:	mov    ecx,DWORD PTR ds:0x428439
  41b46e:	not    ecx
  41b470:	jmp    0x41b4da
  41b475:	mov    eax,ds:0x428481
  41b47a:	cmp    DWORD PTR ds:0x428565,0x0
  41b481:	jge    0x41b4c9
  41b487:	push   0x73dd
  41b48c:	push   DWORD PTR [ebp-0x18]
  41b48f:	push   0x4282f3
  41b494:	push   DWORD PTR [ebp-0x10]
  41b497:	push   DWORD PTR [ebp-0x14]
  41b49a:	call   DWORD PTR ds:0x42e108
  41b4a0:	neg    ecx
  41b4a2:	movzx  ecx,WORD PTR ds:0x428361
  41b4a9:	sbb    ecx,DWORD PTR ds:0x428451
  41b4af:	mov    DWORD PTR ds:0x428361,ecx
  41b4b5:	and    ecx,DWORD PTR ds:0x428571
  41b4bb:	xor    ecx,ecx
  41b4bd:	or     ecx,DWORD PTR ds:0x428471
  41b4c3:	or     DWORD PTR ds:0x4284e5,ecx
  41b4c9:	adc    ecx,ecx
  41b4cb:	xor    ecx,ecx
  41b4cd:	movzx  ecx,BYTE PTR ds:0x428411
  41b4d4:	or     DWORD PTR ds:0x428419,ecx
  41b4da:	push   esi
  41b4db:	push   edi
  41b4dc:	cmp    DWORD PTR ds:0x42857d,0x0
  41b4e3:	mov    ecx,0x4e26
  41b4e8:	mov    DWORD PTR ds:0x428571,ebx
  41b4ee:	mov    DWORD PTR ds:0x42841d,ecx
  41b4f4:	mov    DWORD PTR ds:0x4284ed,edx
  41b4fa:	jmp    0x41b569
  41b4ff:	mov    DWORD PTR ds:0x428371,0x7065
  41b509:	cmp    DWORD PTR ds:0x42857d,0x0
  41b510:	jae    0x41b54d
  41b516:	push   0x1ec2
  41b51b:	push   DWORD PTR [ebp-0x10]
  41b51e:	push   DWORD PTR [ebp-0x10]
  41b521:	push   0x8dff
  41b526:	push   DWORD PTR [ebp-0x18]
  41b529:	push   0x428575
  41b52e:	call   DWORD PTR ds:0x42e290
  41b534:	xor    ecx,0x4175
  41b53a:	movzx  ecx,BYTE PTR ds:0x428469
  41b541:	or     ecx,DWORD PTR ds:0x42842d
  41b547:	mov    DWORD PTR ds:0x428469,ecx
  41b54d:	add    DWORD PTR ds:0x428409,edx
  41b553:	adc    ecx,0x68aa
  41b559:	add    DWORD PTR ds:0x428351,0x591d
  41b563:	dec    DWORD PTR ds:0x428481
  41b569:	mov    DWORD PTR [ebp-0x50],0x1
  41b570:	cmp    DWORD PTR ds:0x42857d,0x0
  41b577:	not    ecx
  41b579:	mov    DWORD PTR ds:0x428361,0x24a
  41b583:	jmp    0x41b5df
  41b588:	mov    DWORD PTR ds:0x428369,0x4cf4
  41b592:	mov    eax,0x7057
  41b597:	cmp    DWORD PTR ds:0x42857d,0x0
  41b59e:	jl     0x41b5c3
  41b5a4:	push   DWORD PTR [ebp-0xc]
  41b5a7:	call   DWORD PTR ds:0x42e10c
  41b5ad:	adc    ecx,DWORD PTR ds:0x42842d
  41b5b3:	sbb    DWORD PTR ds:0x428451,0x4277
  41b5bd:	and    DWORD PTR ds:0x4284d5,ecx
  41b5c3:	and    ecx,ecx
  41b5c5:	or     DWORD PTR ds:0x428475,0x5b0f
  41b5cf:	sbb    ecx,0x33b5
  41b5d5:	sub    DWORD PTR ds:0x42844d,0xb05
  41b5df:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41b5e9:	xor    DWORD PTR ds:0x428369,0x1f8b
  41b5f3:	mov    DWORD PTR [ebp-0xb8],0x1
  41b5fd:	mov    ecx,DWORD PTR [ebp-0xb8]
  41b603:	mov    eax,0x584
  41b608:	xor    edx,edx
  41b60a:	div    ecx
  41b60c:	cmp    DWORD PTR ds:0x428501,0x0
  41b613:	mov    DWORD PTR ds:0x428365,0x2b7a
  41b61d:	mov    DWORD PTR ds:0x42854d,0x6434
  41b627:	mov    DWORD PTR ds:0x4284d5,0x53bf
  41b631:	jmp    0x41b6a4
  41b636:	mov    DWORD PTR ds:0x428445,edi
  41b63c:	movzx  ecx,WORD PTR ds:0x428361
  41b643:	cmp    DWORD PTR ds:0x428501,0x0
  41b64a:	jle    0x41b684
  41b650:	push   0x42842d
  41b655:	push   0x428469
  41b65a:	push   0x428405
  41b65f:	call   DWORD PTR ds:0x42e294
  41b665:	xor    DWORD PTR ds:0x4284e5,edi
  41b66b:	movzx  ecx,BYTE PTR ds:0x428341
  41b672:	sub    ecx,DWORD PTR ds:0x428449
  41b678:	mov    DWORD PTR ds:0x428341,ecx
  41b67e:	adc    DWORD PTR ds:0x428441,ecx
  41b684:	adc    ecx,0x4862
  41b68a:	and    ecx,DWORD PTR ds:0x428441
  41b690:	or     DWORD PTR ds:0x4284e5,ecx
  41b696:	mov    ecx,DWORD PTR ds:0x4284c1
  41b69c:	mov    ecx,DWORD PTR [ecx]
  41b69e:	sub    DWORD PTR ds:0x428469,ecx
  41b6a4:	imul   eax,eax,0x51d4
  41b6aa:	sub    ecx,0x11f6
  41b6b0:	mov    ecx,DWORD PTR [ebp-0xbc]
  41b6b6:	add    DWORD PTR ds:0x42842d,0x5690
  41b6c0:	xor    eax,ecx
  41b6c2:	adc    DWORD PTR ds:0x428565,edi
  41b6c8:	and    eax,0x4c09
  41b6cd:	sbb    ecx,0x3053
  41b6d3:	mov    ecx,DWORD PTR [ebp-0x50]
  41b6d6:	sub    DWORD PTR ds:0x428429,0x428479
  41b6e0:	xor    edx,edx
  41b6e2:	div    ecx
  41b6e4:	sbb    ecx,DWORD PTR ds:0x428425
  41b6ea:	sub    eax,0x401
  41b6ef:	mov    ecx,DWORD PTR ds:0x428501
  41b6f5:	sub    DWORD PTR ds:0x428571,ecx
  41b6fb:	mov    DWORD PTR [ebp-0x90],eax
  41b701:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41b70b:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41b712:	cmp    DWORD PTR ds:0x428475,0x0
  41b719:	mov    DWORD PTR ds:0x428359,0x12e0
  41b723:	movzx  edx,WORD PTR ds:0x428439
  41b72a:	jmp    0x41b78a
  41b72f:	not    eax
  41b731:	mov    DWORD PTR ds:0x4284d5,edi
  41b737:	cmp    DWORD PTR ds:0x428475,0x0
  41b73e:	jne    0x41b768
  41b744:	push   0x428157
  41b749:	call   DWORD PTR ds:0x42e298
  41b74f:	movzx  edx,WORD PTR ds:0x42834d
  41b756:	xor    DWORD PTR ds:0x428331,edx
  41b75c:	and    ecx,0x442f
  41b762:	sub    edx,0x55c5
  41b768:	mov    ecx,DWORD PTR ds:0x4284dd
  41b76e:	xor    ecx,DWORD PTR ds:0x4284e5
  41b774:	mov    DWORD PTR ds:0x4284dd,ecx
  41b77a:	and    DWORD PTR ds:0x42835d,0x34b7
  41b784:	adc    DWORD PTR ds:0x428501,ebx
  41b78a:	mov    DWORD PTR [ebp-0xb4],0x3842
  41b794:	adc    ecx,edx
  41b796:	mov    eax,DWORD PTR [ebp-0x4c]
  41b799:	and    ecx,edx
  41b79b:	add    eax,DWORD PTR [ebp-0xb4]
  41b7a1:	xor    eax,0x2e02
  41b7a6:	add    ecx,ecx
  41b7a8:	xor    eax,0x7294
  41b7ad:	add    ecx,ecx
  41b7af:	imul   eax,eax,0x68f3
  41b7b5:	mov    ecx,DWORD PTR [ebp-0x8c]
  41b7bb:	cmp    DWORD PTR ds:0x428361,0x0
  41b7c2:	mov    DWORD PTR ds:0x428469,ebx
  41b7c8:	mov    edx,DWORD PTR ds:0x42857d
  41b7ce:	jmp    0x41b822
  41b7d3:	mov    DWORD PTR ds:0x428355,edx
  41b7d9:	cmp    DWORD PTR ds:0x428361,0x0
  41b7e0:	ja     0x41b810
  41b7e6:	push   DWORD PTR [ebp-0x1c]
  41b7e9:	push   0x2a61
  41b7ee:	push   0x6c90
  41b7f3:	push   0x2be6
  41b7f8:	push   0x2810
  41b7fd:	call   DWORD PTR ds:0x42e054
  41b803:	inc    edx
  41b804:	mov    edx,DWORD PTR ds:0x428351
  41b80a:	sbb    DWORD PTR ds:0x428459,edx
  41b810:	or     edx,DWORD PTR ds:0x428371
  41b816:	and    edx,DWORD PTR ds:0x4284d5
  41b81c:	sub    edx,DWORD PTR ds:0x428569
  41b822:	and    eax,ecx
  41b824:	adc    DWORD PTR ds:0x42846d,0x2bc9
  41b82e:	sub    eax,0x2818
  41b833:	mov    edx,DWORD PTR ds:0x42851d
  41b839:	mov    ecx,DWORD PTR ds:0x428529
  41b83f:	sub    ecx,edx
  41b841:	add    edx,DWORD PTR [edx+ecx*1]
  41b844:	mov    DWORD PTR [ebp-0xe8],eax
  41b84a:	mov    DWORD PTR [ebp-0x70],0x6f89
  41b851:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41b85b:	mov    DWORD PTR [ebp-0x120],0x3c77
  41b865:	sbb    DWORD PTR ds:0x428429,edx
  41b86b:	mov    DWORD PTR [ebp-0x2c],0x2129
  41b872:	cmp    DWORD PTR ds:0x428481,0x0
  41b879:	mov    DWORD PTR ds:0x428375,0x25cb
  41b883:	mov    edx,0x2db2
  41b888:	mov    DWORD PTR ds:0x428501,0x75fd
  41b892:	jmp    0x41b8de
  41b897:	mov    eax,0x420d
  41b89c:	mov    DWORD PTR ds:0x4284dd,0x38f0
  41b8a6:	cmp    DWORD PTR ds:0x428481,0x0
  41b8ad:	jge    0x41b8c8
  41b8b3:	push   DWORD PTR [ebp-0xc]
  41b8b6:	call   DWORD PTR ds:0x42e058
  41b8bc:	adc    DWORD PTR ds:0x42854d,edx
  41b8c2:	add    DWORD PTR ds:0x428571,edx
  41b8c8:	sbb    edx,DWORD PTR ds:0x428565
  41b8ce:	and    DWORD PTR ds:0x4284cd,0x10d1
  41b8d8:	and    ecx,0x7be2
  41b8de:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8e1:	imul   eax,eax,0x1ada
  41b8e7:	xor    DWORD PTR ds:0x428469,ebx
  41b8ed:	mov    ecx,DWORD PTR [ebp-0x120]
  41b8f3:	mov    edx,DWORD PTR ds:0x428415
  41b8f9:	or     edx,DWORD PTR ds:0x428461
  41b8ff:	mov    DWORD PTR ds:0x428415,edx
  41b905:	imul   ecx,ecx,0x53ae
  41b90b:	xor    DWORD PTR ds:0x4284d5,0x220b
  41b915:	imul   ecx,ecx,0x7447
  41b91b:	mov    edx,DWORD PTR [ebp-0xd0]
  41b921:	and    ecx,edx
  41b923:	or     ecx,0x2a20
  41b929:	or     DWORD PTR ds:0x4284d5,0x6762
  41b933:	mov    edx,DWORD PTR [ebp-0x70]
  41b936:	xor    ecx,edx
  41b938:	and    DWORD PTR ds:0x42833d,0x71f
  41b942:	mov    edx,DWORD PTR [ebp+0x14]
  41b945:	or     DWORD PTR ds:0x428451,0x17f4
  41b94f:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41b956:	or     DWORD PTR ds:0x4284f1,0x428481
  41b960:	lea    eax,[ecx+eax*1-0x45a1]
  41b967:	mov    DWORD PTR [ebp-0xb0],eax
  41b96d:	add    ecx,eax
  41b96f:	mov    DWORD PTR [ebp-0x11c],0x303f
  41b979:	mov    DWORD PTR [ebp-0x98],0x51a9
  41b983:	sub    ecx,eax
  41b985:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41b98f:	cmp    DWORD PTR ds:0x428375,0x0
  41b996:	mov    DWORD PTR ds:0x428359,0x245f
  41b9a0:	mov    ecx,DWORD PTR ds:0x42842d
  41b9a6:	mov    ecx,0x273f
  41b9ab:	jmp    0x41ba0f
  41b9b0:	mov    DWORD PTR ds:0x428469,ebx
  41b9b6:	mov    DWORD PTR ds:0x428439,0x963
  41b9c0:	cmp    DWORD PTR ds:0x428375,0x0
  41b9c7:	jle    0x41b9ee
  41b9cd:	push   DWORD PTR [ebp-0x28]
  41b9d0:	push   0x4284cd
  41b9d5:	push   0x4281b5
  41b9da:	call   DWORD PTR ds:0x42e29c
  41b9e0:	sub    DWORD PTR ds:0x42855d,ebx
  41b9e6:	xor    ecx,ecx
  41b9e8:	sbb    DWORD PTR ds:0x4284e5,ebx
  41b9ee:	movzx  ecx,BYTE PTR ds:0x42835d
  41b9f5:	adc    DWORD PTR ds:0x428449,ecx
  41b9fb:	add    DWORD PTR ds:0x428351,0x7cea
  41ba05:	sbb    DWORD PTR ds:0x428355,0x6b1e
  41ba0f:	mov    eax,DWORD PTR [ebp-0xcc]
  41ba15:	xor    eax,0x6f65
  41ba1a:	cmp    DWORD PTR ds:0x42834d,0x0
  41ba21:	mov    DWORD PTR ds:0x428445,edx
  41ba27:	mov    ecx,0x51b5
  41ba2c:	jmp    0x41baa2
  41ba31:	mov    DWORD PTR ds:0x42844d,0xb0f
  41ba3b:	cmp    DWORD PTR ds:0x42834d,0x0
  41ba42:	jl     0x41ba7a
  41ba48:	push   0x200e
  41ba4d:	push   0x21c1
  41ba52:	push   DWORD PTR [ebp-0x14]
  41ba55:	push   DWORD PTR [ebp-0x14]
  41ba58:	call   DWORD PTR ds:0x42e110
  41ba5e:	sub    DWORD PTR ds:0x428419,ecx
  41ba64:	sub    ecx,DWORD PTR ds:0x428545
  41ba6a:	sbb    DWORD PTR ds:0x428421,0x4284fd
  41ba74:	sub    ecx,0x1dd7
  41ba7a:	mov    ecx,DWORD PTR ds:0x428465
  41ba80:	adc    ecx,DWORD PTR ds:0x428579
  41ba86:	mov    DWORD PTR ds:0x428465,ecx
  41ba8c:	adc    DWORD PTR ds:0x428569,0x3dd1
  41ba96:	mov    DWORD PTR ds:0x428369,0x5b91
  41baa0:	neg    ecx
  41baa2:	mov    ecx,DWORD PTR [ebp-0x98]
  41baa8:	add    DWORD PTR ds:0x428575,0x72a
  41bab2:	or     eax,ecx
  41bab4:	xor    DWORD PTR ds:0x428469,ebx
  41baba:	add    eax,0x161e
  41babf:	sub    ecx,0x1ef7
  41bac5:	mov    ecx,DWORD PTR [ebp-0x11c]
  41bacb:	or     eax,ecx
  41bacd:	cmp    DWORD PTR ds:0x428419,0x0
  41bad4:	mov    ecx,DWORD PTR ds:0x428431
  41bada:	mov    DWORD PTR ds:0x428455,0x4d
  41bae4:	jmp    0x41bbad
  41bae9:	mov    DWORD PTR ds:0x428455,0x133b
  41baf3:	cmp    DWORD PTR ds:0x428419,0x0
  41bafa:	jne    0x41bb25
  41bb00:	push   0x428561
  41bb05:	push   0x8a51
  41bb0a:	push   0x81dc
  41bb0f:	call   DWORD PTR ds:0x42e05c
  41bb15:	and    DWORD PTR ds:0x42842d,0x4030
  41bb1f:	sub    DWORD PTR ds:0x4284d9,edx
  41bb25:	add    ecx,0x753f
  41bb2b:	mov    ecx,DWORD PTR ds:0x428415
  41bb31:	xor    DWORD PTR ds:0x428411,ecx
  41bb37:	sbb    DWORD PTR ds:0x42855d,edx
  41bb3d:	cmp    DWORD PTR ds:0x428571,0x0
  41bb44:	mov    ecx,DWORD PTR ds:0x428575
  41bb4a:	mov    ecx,DWORD PTR ds:0x4284f1
  41bb50:	mov    DWORD PTR ds:0x42846d,edx
  41bb56:	mov    DWORD PTR ds:0x428425,edi
  41bb5c:	jmp    0x41bbad
  41bb61:	not    ecx
  41bb63:	cmp    DWORD PTR ds:0x428571,0x0
  41bb6a:	jne    0x41bb96
  41bb70:	push   0x6108
  41bb75:	push   0x2ee0
  41bb7a:	push   0x428295
  41bb7f:	push   0x1382
  41bb84:	call   DWORD PTR ds:0x42e060
  41bb8a:	or     DWORD PTR ds:0x4284c9,edi
  41bb90:	neg    DWORD PTR ds:0x428355
  41bb96:	movzx  ecx,WORD PTR ds:0x428559
  41bb9d:	sbb    DWORD PTR ds:0x428471,ecx
  41bba3:	or     DWORD PTR ds:0x428445,0x428451
  41bbad:	add    eax,0x1cca
  41bbb2:	cmp    DWORD PTR ds:0x428351,0x0
  41bbb9:	mov    DWORD PTR ds:0x428451,0x3c56
  41bbc3:	mov    ecx,0x7f6d
  41bbc8:	mov    ecx,DWORD PTR ds:0x42844d
  41bbce:	jmp    0x41bc28
  41bbd3:	not    ecx
  41bbd5:	cmp    DWORD PTR ds:0x428351,0x0
  41bbdc:	jbe    0x41bc10
  41bbe2:	push   0x5de5
  41bbe7:	push   0x42827f
  41bbec:	push   0x27d6
  41bbf1:	call   DWORD PTR ds:0x42e114
  41bbf7:	movzx  ecx,BYTE PTR ds:0x428371
  41bbfe:	adc    DWORD PTR ds:0x428365,ecx
  41bc04:	sbb    ecx,0x4cc7
  41bc0a:	sbb    ecx,DWORD PTR ds:0x42844d
  41bc10:	adc    DWORD PTR ds:0x428579,ebx
  41bc16:	mov    ecx,DWORD PTR ds:0x42833d
  41bc1c:	sub    DWORD PTR ds:0x428581,ecx
  41bc22:	add    ecx,0x5653
  41bc28:	xor    eax,0x96c9
  41bc2d:	sbb    DWORD PTR ds:0x428579,0x433e
  41bc37:	mov    DWORD PTR [ebp-0x38],eax
  41bc3a:	mov    DWORD PTR [ebp-0x118],0x6083
  41bc44:	sub    DWORD PTR ds:0x42832d,0x67a3
  41bc4e:	mov    DWORD PTR [ebp-0x88],0x556
  41bc58:	or     ecx,eax
  41bc5a:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41bc64:	cmp    DWORD PTR ds:0x4284d1,0x0
  41bc6b:	mov    ecx,0x31c9
  41bc70:	mov    DWORD PTR ds:0x428579,0x1996
  41bc7a:	jmp    0x41bccd
  41bc7f:	mov    DWORD PTR ds:0x4284cd,edi
  41bc85:	cmp    DWORD PTR ds:0x4284d1,0x0
  41bc8c:	jb     0x41bcb3
  41bc92:	push   0x4282f3
  41bc97:	push   DWORD PTR [ebp-0x14]
  41bc9a:	call   DWORD PTR ds:0x42e118
  41bca0:	add    ecx,DWORD PTR ds:0x428455
  41bca6:	movzx  ecx,BYTE PTR ds:0x428479
  41bcad:	add    DWORD PTR ds:0x428365,ecx
  41bcb3:	sub    DWORD PTR ds:0x4284d5,ecx
  41bcb9:	xor    ecx,ecx
  41bcbb:	add    ecx,DWORD PTR ds:0x428409
  41bcc1:	or     DWORD PTR ds:0x428549,ecx
  41bcc7:	add    DWORD PTR ds:0x428411,ebx
  41bccd:	mov    eax,DWORD PTR [ebp-0x140]
  41bcd3:	add    eax,0x5af8
  41bcd8:	sbb    ecx,0x75c4
  41bcde:	mov    ecx,DWORD PTR [ebp-0x88]
  41bce4:	sub    eax,ecx
  41bce6:	mov    ecx,DWORD PTR [ebp-0x118]
  41bcec:	xor    DWORD PTR ds:0x428565,0x6d4
  41bcf6:	lea    eax,[eax+ecx*1+0x68dc]
  41bcfd:	or     eax,0x52f6
  41bd02:	cmp    DWORD PTR ds:0x428459,0x0
  41bd09:	mov    DWORD PTR ds:0x428545,0x1421
  41bd13:	mov    DWORD PTR ds:0x428481,0x487c
  41bd1d:	mov    ecx,DWORD PTR ds:0x428435
  41bd23:	jmp    0x41bd91
  41bd28:	mov    DWORD PTR ds:0x42844d,0x10ed
  41bd32:	not    ecx
  41bd34:	cmp    DWORD PTR ds:0x428459,0x0
  41bd3b:	jbe    0x41bd77
  41bd41:	push   0x8eb3
  41bd46:	call   DWORD PTR ds:0x42e11c
  41bd4c:	mov    ecx,DWORD PTR ds:0x4284d5
  41bd52:	sub    DWORD PTR ds:0x428361,ecx
  41bd58:	mov    ecx,DWORD PTR ds:0x428431
  41bd5e:	sbb    ecx,DWORD PTR ds:0x428461
  41bd64:	mov    DWORD PTR ds:0x428431,ecx
  41bd6a:	movzx  ecx,BYTE PTR ds:0x42834d
  41bd71:	or     DWORD PTR ds:0x4284c5,ecx
  41bd77:	sbb    DWORD PTR ds:0x428345,ebx
  41bd7d:	neg    ecx
  41bd7f:	mov    ecx,DWORD PTR ds:0x428355
  41bd85:	xor    ecx,DWORD PTR ds:0x428409
  41bd8b:	mov    DWORD PTR ds:0x428355,ecx
  41bd91:	sub    eax,0x1dbfe
  41bd96:	sbb    DWORD PTR ds:0x4284e9,ecx
  41bd9c:	mov    DWORD PTR [ebp-0xac],eax
  41bda2:	xor    DWORD PTR ds:0x42842d,ebx
  41bda8:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41bdaf:	mov    DWORD PTR [ebp-0x100],0x49f7
  41bdb9:	inc    ecx
  41bdba:	mov    eax,DWORD PTR [ebp-0x100]
  41bdc0:	movzx  ecx,BYTE PTR ds:0x428555
  41bdc7:	sub    ecx,DWORD PTR ds:0x4284c9
  41bdcd:	mov    DWORD PTR ds:0x428555,ecx
  41bdd3:	add    eax,0x7b60
  41bdd8:	sbb    ecx,0x7111
  41bdde:	imul   eax,eax,0x5ea
  41bde4:	add    DWORD PTR ds:0x428475,ecx
  41bdea:	mov    ecx,DWORD PTR [ebp-0x6c]
  41bded:	imul   eax,ecx
  41bdf0:	xor    edx,edx
  41bdf2:	adc    DWORD PTR ds:0x428411,0x2190
  41bdfc:	mov    ecx,0x3218d
  41be01:	div    ecx
  41be03:	sub    eax,0x24c1
  41be08:	sbb    ecx,0x10cc
  41be0e:	mov    DWORD PTR [ebp-0xa8],eax
  41be14:	xor    eax,eax
  41be16:	add    eax,DWORD PTR ds:0x4284dd
  41be1c:	sbb    eax,DWORD PTR ds:0x428475
  41be22:	mov    ds:0x4284dd,eax
  41be27:	mov    DWORD PTR [ebp-0x84],0x2c40
  41be31:	xor    ecx,ecx
  41be33:	or     ecx,DWORD PTR ds:0x428411
  41be39:	xor    ecx,DWORD PTR ds:0x428471
  41be3f:	mov    DWORD PTR ds:0x428411,ecx
  41be45:	mov    DWORD PTR [ebp-0x18],0x6013
  41be4c:	or     DWORD PTR ds:0x428559,ecx
  41be52:	mov    DWORD PTR [ebp-0x80],0xc
  41be59:	and    eax,eax
  41be5b:	mov    eax,DWORD PTR [ebp-0x18]
  41be5e:	and    DWORD PTR ds:0x4284c5,edi
  41be64:	mov    ecx,DWORD PTR [ebp-0x80]
  41be67:	xor    edx,edx
  41be69:	add    DWORD PTR ds:0x42836d,0x428361
  41be73:	div    ecx
  41be75:	imul   eax,eax,0x4312
  41be7b:	cmp    DWORD PTR ds:0x4284e1,0x0
  41be82:	mov    DWORD PTR ds:0x428411,0x6e4f
  41be8c:	movzx  ecx,WORD PTR ds:0x428579
  41be93:	mov    DWORD PTR ds:0x428555,edi
  41be99:	jmp    0x41befc
  41be9e:	mov    DWORD PTR ds:0x42833d,0x5f09
  41bea8:	cmp    DWORD PTR ds:0x4284e1,0x0
  41beaf:	jge    0x41bed8
  41beb5:	push   DWORD PTR [ebp-0x28]
  41beb8:	call   DWORD PTR ds:0x42e064
  41bebe:	sbb    ecx,DWORD PTR ds:0x4284cd
  41bec4:	xor    ecx,ecx
  41bec6:	xor    ecx,DWORD PTR ds:0x428431
  41becc:	sub    DWORD PTR ds:0x428365,ecx
  41bed2:	and    DWORD PTR ds:0x428439,edi
  41bed8:	xor    ecx,ecx
  41beda:	xor    ecx,DWORD PTR ds:0x428569
  41bee0:	xor    DWORD PTR ds:0x428405,ecx
  41bee6:	or     DWORD PTR ds:0x428445,0x15e9
  41bef0:	xor    ecx,0x6843
  41bef6:	adc    ecx,DWORD PTR ds:0x428449
  41befc:	add    eax,0x5abe
  41bf01:	mov    ecx,DWORD PTR [ebp-0x84]
  41bf07:	add    DWORD PTR ds:0x4284e1,0x428579
  41bf11:	xor    eax,ecx
  41bf13:	mov    ecx,DWORD PTR ds:0x428359
  41bf19:	and    ecx,DWORD PTR ds:0x42855d
  41bf1f:	mov    DWORD PTR ds:0x428359,ecx
  41bf25:	xor    edx,edx
  41bf27:	not    DWORD PTR ds:0x428369
  41bf2d:	mov    ecx,0x5ae
  41bf32:	div    ecx
  41bf34:	jmp    0x41c31b
  41bf39:	xchg   DWORD PTR [edi],esp
  41bf3b:	dec    eax
  41bf3c:	in     al,0x68
  41bf3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf3f:	lods   al,BYTE PTR ds:[esi]
  41bf40:	stos   DWORD PTR es:[edi],eax
  41bf41:	test   BYTE PTR [ebx+eax*8-0x383eec31],bh
  41bf48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf49:	aam    0x3b
  41bf4b:	sar    BYTE PTR [esi-0x41413bb6],0xc0
  41bf52:	jmp    0x41bf32
  41bf54:	xchg   ebx,eax
  41bf55:	sbb    eax,0xb5a03c74
  41bf5a:	push   ss
  41bf5b:	and    eax,0x24bbbd4b
  41bf60:	and    BYTE PTR [edi+0x465ddb0],dl
  41bf66:	cld    
  41bf67:	ret    0xd65d
  41bf6a:	sbb    DWORD PTR [eax-0x33],0xa1dd9cb5
  41bf71:	mov    bl,0xe8
  41bf73:	xchg   edi,eax
  41bf74:	rol    DWORD PTR [edi-0x6a],1
  41bf77:	pop    eax
  41bf78:	sbb    al,0xa3
  41bf7a:	push   ebx
  41bf7b:	std    
  41bf7c:	mov    al,0x88
  41bf7e:	and    BYTE PTR [ebx],0x7f
  41bf81:	mov    bh,BYTE PTR [edi-0x47afc65c]
  41bf87:	div    DWORD PTR [edx]
  41bf89:	cmc    
  41bf8a:	mov    cl,0xb4
  41bf8c:	sub    cl,BYTE PTR [ebx]
  41bf8e:	mov    ecx,0x299ffecf
  41bf93:	xor    DWORD PTR [edx-0x55db1c66],0x4f80b9bd
  41bf9d:	xchg   ecx,eax
  41bf9e:	daa    
  41bf9f:	xor    BYTE PTR [edi+ebp*2-0x5],dh
  41bfa3:	inc    WORD PTR [edx]
  41bfa6:	pop    ds
  41bfa7:	imul   ebp,DWORD PTR [esi+0x20f0f867],0xd64c3a7b
  41bfb1:	cs cmc 
  41bfb3:	in     al,0xb0
  41bfb5:	sub    eax,0xee0259ba
  41bfba:	mov    al,0xb1
  41bfbc:	xchg   dh,ch
  41bfbe:	jns    0x41c024
  41bfc0:	dec    ebp
  41bfc1:	jg     0x41c037
  41bfc3:	inc    edx
  41bfc4:	int    0x47
  41bfc6:	shr    DWORD PTR ds:0xb34a1371,1
  41bfcc:	pusha  
  41bfcd:	pop    ebp
  41bfce:	mov    edx,0x37e71d92
  41bfd3:	jbe    0x41c020
  41bfd5:	aad    0x2e
  41bfd7:	ret    0xe280
  41bfda:	xchg   ebx,eax
  41bfdb:	iret   
  41bfdc:	add    esp,DWORD PTR [edi+ebp*1-0x46dc656f]
  41bfe3:	push   0xffffffd3
  41bfe5:	cs jg  0x41bfc5
  41bfe8:	jge    0x41bfe0
  41bfea:	je     0x41bf77
  41bfec:	mov    ecx,0x977b41e1
  41bff1:	jmp    0xeb12:0xfed14daa
  41bff8:	mov    bh,dl
  41bffa:	xor    eax,0x50902c75
  41bfff:	xor    BYTE PTR [edi+0x3d],bl
  41c002:	sub    DWORD PTR [edx+0x60],esi
  41c005:	mov    ds:0x547e4ec,al
  41c00a:	mov    DWORD PTR [esi],ecx
  41c00c:	push   ebx
  41c00d:	inc    edi
  41c00e:	leave  
  41c00f:	mov    ds,WORD PTR [eax+0x27]
  41c012:	or     eax,0x9a475b93
  41c017:	sbb    dl,BYTE PTR [ecx-0xebb6bf3]
  41c01d:	loop   0x41c09a
  41c01f:	inc    esp
  41c020:	test   eax,0x66535486
  41c025:	(bad)  
  41c026:	shl    BYTE PTR [ecx+0x28],cl
  41c029:	inc    esi
  41c02a:	jp     0x41c018
  41c02c:	out    dx,al
  41c02d:	addr16 retf 
  41c02f:	add    dl,bl
  41c031:	cld    
  41c032:	test   DWORD PTR [esi-0x51],0xa31f7568
  41c039:	sub    BYTE PTR [edi+0x2d],bl
  41c03c:	mov    ecx,0xd1e1598f
  41c041:	sbb    dh,BYTE PTR [eax-0x19]
  41c044:	fild   WORD PTR [ebx]
  41c046:	test   DWORD PTR [eax+0x4fd5fcac],ebp
  41c04c:	lea    ebx,[ebx-0x428b1693]
  41c052:	cwde   
  41c053:	jno    0x41bffe
  41c055:	and    al,0xd1
  41c057:	add    DWORD PTR [ebp+eiz*8+0x5f],ebp
  41c05b:	shl    BYTE PTR [ecx-0x1946dfea],1
  41c061:	push   0x5bbe0f2b
  41c066:	dec    edx
  41c067:	data16 sub al,BYTE PTR ss:[esi-0x387352b4]
  41c06f:	mov    al,0x59
  41c071:	retf   
  41c072:	mov    esi,0xbc3c0ede
  41c077:	jle    0x41c0aa
  41c079:	push   ebp
  41c07a:	imul   ecx,DWORD PTR [ebx+0x26],0x25282d53
  41c081:	mov    cl,0x66
  41c083:	test   BYTE PTR [ebx+0x9],cl
  41c086:	or     dh,BYTE PTR ds:0xa78be3a0
  41c08c:	xchg   edi,eax
  41c08d:	jb     0x41c0a2
  41c08f:	icebp  
  41c090:	pop    ecx
  41c091:	xchg   ebx,eax
  41c092:	(bad)  
  41c093:	int    0x9b
  41c095:	inc    ecx
  41c096:	or     BYTE PTR [ecx],ah
  41c098:	mov    esi,0xc6ea2eb6
  41c09d:	imul   esp,DWORD PTR [ecx],0xffffffe2
  41c0a0:	mov    DWORD PTR [edi+0x32277f7e],esi
  41c0a6:	pop    esi
  41c0a7:	loopne 0x41c02b
  41c0a9:	dec    ebx
  41c0aa:	cs aaa 
  41c0ac:	mov    cl,0xdd
  41c0ae:	push   esp
  41c0af:	out    0xfc,eax
  41c0b1:	(bad)  
  41c0b2:	aas    
  41c0b3:	mov    ch,0x82
  41c0b5:	nop
  41c0b6:	pop    es
  41c0b7:	cmp    DWORD PTR [edx+0x24],eax
  41c0ba:	mov    DWORD PTR [ebx+0x5bf46068],edx
  41c0c0:	imul   ebx,ecx,0x8dd105ab
  41c0c6:	cmp    DWORD PTR [eax+0x470eef3e],ebx
  41c0cc:	add    ebx,esp
  41c0ce:	hlt    
  41c0cf:	adc    bh,BYTE PTR [eax+0x5f7ea15d]
  41c0d5:	inc    ecx
  41c0d6:	xchg   esp,eax
  41c0d7:	lds    esi,FWORD PTR [ebp+0x4a]
  41c0da:	inc    ebp
  41c0db:	pop    ds
  41c0dc:	and    cl,ah
  41c0de:	in     al,0xa3
  41c0e0:	jbe    0x41c0bf
  41c0e2:	dec    edx
  41c0e3:	inc    edi
  41c0e4:	sub    bl,BYTE PTR [edi-0x61]
  41c0e7:	fs lock sti 
  41c0ea:	fnstcw WORD PTR [ebx+ebp*8-0xb]
  41c0ee:	imul   edx,DWORD PTR [ebx],0xffffffd9
  41c0f1:	pushf  
  41c0f2:	loop   0x41c14c
  41c0f4:	xor    ah,BYTE PTR [esi-0x58b49686]
  41c0fa:	stc    
  41c0fb:	sbb    eax,0x3935704d
  41c100:	cld    
  41c101:	mov    eax,0x24ff0460
  41c106:	dec    ebp
  41c107:	inc    eax
  41c108:	mov    al,0x5
  41c10a:	ret    
  41c10b:	in     eax,0x98
  41c10d:	and    BYTE PTR [esi],bh
  41c10f:	dec    ecx
  41c110:	push   esp
  41c111:	sub    edi,DWORD PTR [ecx-0xac31ec]
  41c117:	in     al,0x3c
  41c119:	cmp    eax,0x1f02b5ae
  41c11e:	push   edx
  41c11f:	xadd   BYTE PTR [ebp-0x14989f00],ch
  41c126:	jmp    0xe9ba:0xa496c08e
  41c12d:	jo     0x41c181
  41c12f:	or     BYTE PTR [eax+edx*1+0x4f],al
  41c133:	cmp    DWORD PTR [edi+esi*4+0x3541c59a],0xffffffb9
  41c13b:	pop    eax
  41c13c:	mov    cl,0x54
  41c13e:	inc    edi
  41c13f:	or     bl,BYTE PTR [ecx-0x6dea0cc8]
  41c145:	cmc    
  41c146:	sub    ah,BYTE PTR [eax+0x4]
  41c149:	test   al,0x2d
  41c14b:	popa   
  41c14c:	mov    cl,0x7b
  41c14e:	loop   0x41c113
  41c150:	and    eax,DWORD PTR [edi+0x6f]
  41c153:	jns    0x41c1c7
  41c155:	hlt    
  41c156:	push   ebx
  41c157:	ja     0x41c1b4
  41c159:	and    eax,0x4609fb94
  41c15e:	fisttp WORD PTR [eax-0x3d]
  41c161:	cld    
  41c162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c163:	les    eax,FWORD PTR ss:[ecx-0x621cd5d8]
  41c16a:	mov    eax,0xfbf75674
  41c16f:	cmp    DWORD PTR [ecx-0x403acf42],esi
  41c175:	das    
  41c176:	scas   al,BYTE PTR es:[edi]
  41c177:	daa    
  41c178:	or     bh,BYTE PTR [ebp+edx*4+0x6b82131]
  41c17f:	pop    esi
  41c180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c181:	or     al,0x71
  41c183:	jle    0x41c184
  41c185:	adc    BYTE PTR [ebp+0x28],0x58
  41c189:	sbb    BYTE PTR [eax],al
  41c18b:	in     al,dx
  41c18c:	push   ss
  41c18d:	popf   
  41c18e:	jmp    0x81852174
  41c193:	sahf   
  41c194:	test   DWORD PTR [esi-0x673c6606],edi
  41c19a:	mov    ds:0x27c1e756,al
  41c19f:	ror    DWORD PTR [eax+eax*8+0x29],cl
  41c1a3:	imul   esi,DWORD PTR [eax],0xae9e5736
  41c1a9:	fmul   DWORD PTR [eax-0x3e]
  41c1ac:	dec    ebp
  41c1ad:	jle    0x41c1aa
  41c1af:	mov    BYTE PTR [edi],dh
  41c1b1:	pop    ss
  41c1b2:	mov    bh,0xd8
  41c1b4:	xor    al,0x4a
  41c1b6:	mov    dh,0x7
  41c1b8:	(bad)  
  41c1b9:	fsub   st(7),st
  41c1bb:	aas    
  41c1bc:	push   ecx
  41c1bd:	xchg   esi,eax
  41c1be:	in     eax,dx
  41c1bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1c0:	cwde   
  41c1c1:	jmp    0x41c23b
  41c1c3:	push   esi
  41c1c4:	lods   eax,DWORD PTR ds:[esi]
  41c1c5:	xor    al,0xfe
  41c1c7:	shl    BYTE PTR ds:0x7c8891d6,1
  41c1cd:	icebp  
  41c1ce:	aam    0x8d
  41c1d0:	dec    esi
  41c1d1:	push   ecx
  41c1d2:	dec    esp
  41c1d3:	mov    dl,0x21
  41c1d5:	fsubr  QWORD PTR [ecx+0x4d1e758]
  41c1db:	mul    DWORD PTR [eax]
  41c1dd:	cli    
  41c1de:	(bad)  
  41c1df:	pusha  
  41c1e0:	push   esi
  41c1e1:	dec    edx
  41c1e2:	stos   DWORD PTR es:[edi],eax
  41c1e3:	mov    ds:0x18b7793f,al
  41c1e8:	icebp  
  41c1e9:	repnz pop es
  41c1eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1ec:	mov    ebx,DWORD PTR [esi]
  41c1ee:	in     al,0x35
  41c1f0:	mov    ebp,0xacb52d41
  41c1f5:	sbb    BYTE PTR gs:[ebp+ebx*4-0x4c],0x26
  41c1fb:	cmc    
  41c1fc:	pushf  
  41c1fd:	icebp  
  41c1fe:	arpl   WORD PTR ds:0xd2603b22,bp
  41c204:	adc    DWORD PTR [eax],esi
  41c206:	test   BYTE PTR [edx+ecx*2-0x58f134bd],ch
  41c20d:	icebp  
  41c20e:	cmp    al,0x2
  41c210:	pop    es
  41c211:	adc    dl,dh
  41c213:	jg     0x41c1c9
  41c215:	clc    
  41c216:	mov    ds:0xa8740bb7,eax
  41c21b:	call   0x8690:0x4878cfbf
  41c222:	or     DWORD PTR [ecx+0x18],ebx
  41c225:	cmp    eax,0x19be6baa
  41c22a:	hlt    
  41c22b:	in     eax,dx
  41c22c:	mov    bh,0x28
  41c22e:	mov    al,BYTE PTR [edx]
  41c230:	inc    ecx
  41c231:	push   edx
  41c232:	push   esp
  41c233:	ret    0x5b40
  41c236:	call   0xb8be:0x58521b6e
  41c23d:	mov    esi,0xddb0bfb8
  41c242:	pushf  
  41c243:	rcl    BYTE PTR [edx+0x7be7f597],1
  41c249:	mov    DWORD PTR [ebx-0x190be444],eax
  41c24f:	aas    
  41c250:	stc    
  41c251:	icebp  
  41c252:	sub    esi,DWORD PTR [esp+esi*4+0x1a97f5b7]
  41c259:	fisttp QWORD PTR ds:0x6ae392c0
  41c25f:	push   ss
  41c260:	and    edi,DWORD PTR [ecx-0x7d]
  41c263:	aam    0xa0
  41c265:	(bad)  
  41c266:	js     0x41c21c
  41c268:	pop    edx
  41c269:	fldcw  WORD PTR [esi]
  41c26b:	cmp    ebp,DWORD PTR [edx-0x1c]
  41c26e:	inc    ecx
  41c26f:	jecxz  0x41c292
  41c271:	cli    
  41c272:	ss jmp 0x85e1f985
  41c278:	in     eax,dx
  41c279:	sahf   
  41c27a:	sbb    eax,0x4725f988
  41c27f:	xor    al,0x9c
  41c281:	jne    0x41c243
  41c283:	ins    BYTE PTR es:[edi],dx
  41c284:	out    0x71,eax
  41c286:	dec    esp
  41c287:	mov    bh,0x3
  41c289:	ins    DWORD PTR es:[edi],dx
  41c28a:	push   ss
  41c28b:	loope  0x41c2b5
  41c28d:	push   edx
  41c28e:	ret    
  41c28f:	sbb    ah,BYTE PTR [edx+0x2fcfedb2]
  41c295:	hlt    
  41c296:	xchg   ecx,eax
  41c297:	aad    0xa6
  41c299:	(bad)  
  41c29a:	das    
  41c29b:	mov    esi,0x60d9610d
  41c2a0:	imul   edx,DWORD PTR [edi-0x13],0x30658177
  41c2a7:	or     dh,dl
  41c2a9:	leave  
  41c2aa:	add    BYTE PTR [edi+0x7647839e],bl
  41c2b0:	icebp  
  41c2b1:	inc    edi
  41c2b2:	pop    edi
  41c2b3:	in     al,0x64
  41c2b5:	arpl   WORD PTR [edx-0x61055208],si
  41c2bb:	out    dx,al
  41c2bc:	dec    ebx
  41c2bd:	in     al,0x4e
  41c2bf:	jmp    0x41c2bc
  41c2c1:	push   ecx
  41c2c2:	lock inc eax
  41c2c4:	add    BYTE PTR [ebx],al
  41c2c6:	jmp    0xeac6c3af
  41c2cb:	mov    dl,0x3d
  41c2cd:	stc    
  41c2ce:	sbb    BYTE PTR [edx-0x67154d12],dh
  41c2d4:	push   es
  41c2d5:	std    
  41c2d6:	pop    esi
  41c2d7:	(bad)  
  41c2d8:	adc    al,0x32
  41c2da:	cmc    
  41c2db:	scas   al,BYTE PTR es:[edi]
  41c2dc:	(bad)  
  41c2dd:	icebp  
  41c2de:	idiv   ebx
  41c2e0:	or     edi,DWORD PTR [edx]
  41c2e2:	pop    ds
  41c2e3:	leave  
  41c2e4:	cmp    esp,DWORD PTR [esp+ecx*1+0x1732e35f]
  41c2eb:	fcomp  QWORD PTR [ecx+0x66]
  41c2ee:	dec    ebp
  41c2ef:	or     esi,DWORD PTR [eax+0x1b]
  41c2f2:	popa   
  41c2f3:	or     al,0xd4
  41c2f5:	sub    eax,0x137bc0c9
  41c2fa:	pop    ebp
  41c2fb:	retf   
  41c2fc:	mov    bh,BYTE PTR [edi-0x71aaa06]
  41c302:	ins    BYTE PTR es:[edi],dx
  41c303:	jo     0x41c379
  41c305:	push   ds
  41c306:	xchg   ebx,eax
  41c307:	aaa    
  41c308:	jnp    0x41c295
  41c30a:	pop    esp
  41c30b:	mov    eax,0x7153a628
  41c310:	lahf   
  41c311:	stos   DWORD PTR es:[edi],eax
  41c312:	push   0x50592f18
  41c317:	lock mov ecx,0x8c35e40b
  41c31d:	pop    esi
  41c31e:	add    BYTE PTR [eax],al
  41c320:	mov    DWORD PTR [ebp-0x48],eax
  41c323:	sbb    DWORD PTR ds:0x4284e5,edi
  41c329:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41c333:	mov    DWORD PTR [ebp-0x138],0x1169
  41c33d:	mov    DWORD PTR [ebp-0x12c],0x1379
  41c347:	sbb    DWORD PTR ds:0x428555,ecx
  41c34d:	mov    eax,DWORD PTR [ebp-0x12c]
  41c353:	adc    DWORD PTR ds:0x4284c9,0x44e5
  41c35d:	mov    ecx,0x5856
  41c362:	sub    ecx,eax
  41c364:	and    DWORD PTR ds:0x428425,ecx
  41c36a:	shr    ecx,0x2
  41c36d:	cmp    DWORD PTR ds:0x42856d,0x0
  41c374:	mov    DWORD PTR ds:0x428419,0x1c8e
  41c37e:	mov    DWORD PTR ds:0x4284f9,0x3a72
  41c388:	mov    DWORD PTR ds:0x42833d,0x2994
  41c392:	jmp    0x41c475
  41c397:	mov    eax,ds:0x4284dd
  41c39c:	cmp    DWORD PTR ds:0x42856d,0x0
  41c3a3:	jge    0x41c3d2
  41c3a9:	push   DWORD PTR [ebp-0x20]
  41c3ac:	push   DWORD PTR [ebp-0x24]
  41c3af:	push   DWORD PTR [ebp-0x1c]
  41c3b2:	call   DWORD PTR ds:0x42e120
  41c3b8:	and    DWORD PTR ds:0x428409,edx
  41c3be:	sub    DWORD PTR ds:0x428369,0x53c2
  41c3c8:	and    DWORD PTR ds:0x42836d,0x428579
  41c3d2:	or     DWORD PTR ds:0x428549,edi
  41c3d8:	sbb    DWORD PTR ds:0x428365,0x428555
  41c3e2:	cmp    DWORD PTR ds:0x428471,0x0
  41c3e9:	mov    DWORD PTR ds:0x428441,0x3b49
  41c3f3:	mov    DWORD PTR ds:0x428451,0x7933
  41c3fd:	mov    DWORD PTR ds:0x428465,0x897
  41c407:	mov    DWORD PTR ds:0x428359,0x5a92
  41c411:	jmp    0x41c475
  41c416:	mov    eax,0x55e0
  41c41b:	movzx  eax,WORD PTR ds:0x4284cd
  41c422:	cmp    DWORD PTR ds:0x428471,0x0
  41c429:	ja     0x41c45f
  41c42f:	push   DWORD PTR [ebp-0x18]
  41c432:	push   DWORD PTR [ebp-0x18]
  41c435:	push   DWORD PTR [ebp-0x18]
  41c438:	push   DWORD PTR [ebp-0x20]
  41c43b:	push   0x8c53
  41c440:	push   DWORD PTR [ebp-0x14]
  41c443:	call   DWORD PTR ds:0x42e068
  41c449:	add    DWORD PTR ds:0x428405,ecx
  41c44f:	not    DWORD PTR ds:0x4284d9
  41c455:	adc    DWORD PTR ds:0x428449,0x2c56
  41c45f:	add    DWORD PTR ds:0x4284f5,0x42842d
  41c469:	add    DWORD PTR ds:0x42840d,edi
  41c46f:	sub    DWORD PTR ds:0x42847d,edx
  41c475:	sub    ecx,0x5be6
  41c47b:	mov    eax,DWORD PTR [ebp-0x138]
  41c481:	xor    DWORD PTR ds:0x428435,0x2de
  41c48b:	imul   ecx,eax
  41c48e:	mov    eax,ds:0x428465
  41c493:	add    DWORD PTR ds:0x42857d,eax
  41c499:	mov    eax,DWORD PTR [ebp-0x13c]
  41c49f:	and    ecx,eax
  41c4a1:	cmp    DWORD PTR ds:0x428579,0x0
  41c4a8:	mov    DWORD PTR ds:0x42845d,0x420b
  41c4b2:	mov    DWORD PTR ds:0x4284d9,0x3ab4
  41c4bc:	mov    DWORD PTR ds:0x428479,0x3618
  41c4c6:	jmp    0x41c90c
  41c4cb:	mov    DWORD PTR ds:0x428419,0xf37
  41c4d5:	not    eax
  41c4d7:	cmp    DWORD PTR ds:0x428579,0x0
  41c4de:	jg     0x41c505
  41c4e4:	push   0x2612
  41c4e9:	push   DWORD PTR [ebp-0x1c]
  41c4ec:	push   DWORD PTR [ebp-0x14]
  41c4ef:	call   DWORD PTR ds:0x42e06c
  41c4f5:	and    DWORD PTR ds:0x428459,0x4284e9
  41c4ff:	add    DWORD PTR ds:0x42834d,edi
  41c505:	xor    DWORD PTR ds:0x42841d,edx
  41c50b:	sbb    DWORD PTR ds:0x428465,0x428455
  41c515:	mov    DWORD PTR ds:0x428479,0x491d
  41c51f:	add    DWORD PTR ds:0x428351,ebx
  41c525:	jmp    0x41c90c
  41c52a:	sub    ch,BYTE PTR [esi-0x62]
  41c52d:	sbb    DWORD PTR [edx-0x7c9145e7],edi
  41c533:	pop    ebp
  41c534:	and    al,0x9e
  41c536:	imul   ebx,DWORD PTR [esp+edx*2],0xffffff9e
  41c53a:	pusha  
  41c53b:	inc    ecx
  41c53c:	sar    BYTE PTR [esi-0x41413bb6],0xa0
  41c543:	add    DWORD PTR ds:0x69a0fd89,ecx
  41c549:	sti    
  41c54a:	adc    eax,0x13c4bac8
  41c54f:	sub    esp,DWORD PTR [ebx+0x69a64d42]
  41c555:	outs   dx,DWORD PTR ds:[esi]
  41c556:	dec    edx
  41c557:	jp     0x41c577
  41c559:	cli    
  41c55a:	sbb    ah,BYTE PTR [ecx-0x1a7885f4]
  41c560:	adc    bh,BYTE PTR [ecx]
  41c562:	or     al,0xd1
  41c564:	mov    dl,0xa
  41c566:	push   ecx
  41c567:	sti    
  41c568:	jg     0x41c512
  41c56a:	sub    al,0xd7
  41c56c:	faddp  st(6),st
  41c56e:	mov    edi,0x5c92f7d9
  41c573:	sbb    al,0xf
  41c575:	sub    dh,BYTE PTR [eax]
  41c577:	mul    dl
  41c579:	int3   
  41c57a:	lahf   
  41c57b:	loopne 0x41c500
  41c57d:	add    eax,0x38f5174d
  41c582:	ins    BYTE PTR es:[edi],dx
  41c583:	adc    eax,0x248d60f2
  41c588:	out    dx,eax
  41c589:	cmp    bl,BYTE PTR [ebx-0x34]
  41c58c:	pop    ebp
  41c58d:	mov    bh,0xc9
  41c58f:	sub    DWORD PTR [ecx-0x57],0xa7b8ede6
  41c596:	xchg   ebx,eax
  41c597:	outs   dx,BYTE PTR ds:[esi]
  41c598:	push   0x5a
  41c59a:	push   0xfc690f39
  41c59f:	xchg   ebx,eax
  41c5a0:	(bad)  
  41c5a1:	jno    0x41c61f
  41c5a3:	icebp  
  41c5a4:	xor    ecx,DWORD PTR [ebx-0x3250e907]
  41c5aa:	mov    dl,0xf1
  41c5ac:	aas    
  41c5ad:	lods   eax,DWORD PTR ds:[esi]
  41c5ae:	jmp    0xb43:0x8fa61dbc
  41c5b5:	sub    BYTE PTR ds:0xe1898baf,dl
  41c5bb:	fmul   DWORD PTR [ecx+eax*1+0x54]
  41c5bf:	outs   dx,BYTE PTR ds:[esi]
  41c5c0:	retf   
  41c5c1:	jo     0x41c5ee
  41c5c3:	push   0xee83ae77
  41c5c8:	mov    al,0xd
  41c5ca:	jge    0x41c5e6
  41c5cc:	dec    ecx
  41c5cd:	popa   
  41c5ce:	jbe    0x41c5e8
  41c5d0:	lds    edx,FWORD PTR [ecx+0x33438594]
  41c5d6:	stos   DWORD PTR es:[edi],eax
  41c5d7:	jae    0x41c650
  41c5d9:	push   ebp
  41c5da:	sub    DWORD PTR [eax+ebp*4+0x7ba757d2],ecx
  41c5e1:	add    ecx,DWORD PTR [ecx+ecx*8]
  41c5e4:	add    edi,DWORD PTR [ebp-0x16]
  41c5e7:	retf   
  41c5e8:	dec    edx
  41c5e9:	sub    al,0x7a
  41c5eb:	sbb    DWORD PTR [edx+0x47],0x2b
  41c5ef:	mov    esp,0x20cfbbb6
  41c5f4:	jb     0x41c5c3
  41c5f6:	xchg   edx,eax
  41c5f7:	cmp    DWORD PTR ds:0x48a826b8,eax
  41c5fd:	pop    ss
  41c5fe:	and    cl,BYTE PTR [eax+esi*2-0x7dd5ed70]
  41c605:	push   eax
  41c606:	pop    edi
  41c607:	xchg   edx,eax
  41c608:	loope  0x41c5ea
  41c60a:	mov    bh,0x39
  41c60c:	jg     0x41c688
  41c60e:	jno    0x41c67c
  41c610:	outs   dx,DWORD PTR ds:[esi]
  41c611:	add    DWORD PTR [eax-0x10],edi
  41c614:	xor    al,0x4d
  41c616:	mov    esp,0xc501a872
  41c61b:	sbb    esp,esp
  41c61d:	loopne 0x41c669
  41c61f:	push   eax
  41c620:	fst    DWORD PTR [ebx+0x6e]
  41c623:	xor    edi,ebp
  41c625:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41c627:	jo     0x41c63c
  41c629:	add    eax,0xa2c43568
  41c62e:	sub    cl,BYTE PTR [edx+edx*4-0x59]
  41c632:	jbe    0x6ee1e4d
  41c638:	push   edx
  41c639:	lods   eax,DWORD PTR ds:[esi]
  41c63a:	and    cl,ch
  41c63c:	dec    esi
  41c63d:	out    0x21,al
  41c63f:	add    eax,0x5341bbe3
  41c644:	pushf  
  41c645:	xor    eax,0x73a41e5
  41c64a:	pop    ebx
  41c64b:	stos   DWORD PTR es:[edi],eax
  41c64c:	mov    esp,es
  41c64e:	sub    BYTE PTR [ecx+0x137b3679],ah
  41c654:	adc    BYTE PTR [edx+0x7c118a22],cl
  41c65a:	stos   DWORD PTR es:[edi],eax
  41c65b:	(bad)  
  41c65c:	int3   
  41c65d:	ja     0x41c605
  41c65f:	mov    bh,0x6d
  41c661:	xchg   edx,ecx
  41c663:	dec    ecx
  41c664:	jno    0x41c625
  41c666:	retf   
  41c667:	jmp    0xf02d:0x830d4816
  41c66e:	mov    edi,0xce8a7ae9
  41c673:	retf   
  41c674:	and    BYTE PTR [edi-0x1a5ef1e0],bl
  41c67a:	mov    cl,0x9
  41c67c:	push   esi
  41c67d:	aam    0xd3
  41c67f:	inc    ebx
  41c680:	mov    eax,ds:0xfa632134
  41c685:	sub    al,0xdf
  41c687:	ret    
  41c688:	ds (bad) 
  41c68a:	sub    ah,BYTE PTR [ebx+0x7bd3df19]
  41c690:	loope  0x41c70b
  41c692:	pop    edx
  41c693:	retf   
  41c694:	lahf   
  41c695:	bound  ebx,QWORD PTR [edx+0x7d]
  41c698:	cs jo  0x41c680
  41c69b:	xchg   esi,eax
  41c69c:	ins    DWORD PTR es:[edi],dx
  41c69d:	mov    al,0x8c
  41c69f:	call   0xd4466474
  41c6a4:	das    
  41c6a5:	mov    esi,0xea1bafcd
  41c6aa:	xor    esp,DWORD PTR [ebp-0x4afdfa0]
  41c6b0:	aas    
  41c6b1:	retf   
  41c6b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6b3:	and    eax,0xbf923b3
  41c6b8:	cmovl  edx,DWORD PTR ds:0xf61fc352
  41c6bf:	sar    DWORD PTR [eax-0x1c],0x41
  41c6c3:	dec    esp
  41c6c4:	loopne 0x41c66f
  41c6c6:	in     eax,dx
  41c6c7:	es aaa 
  41c6c9:	xor    ecx,ebx
  41c6cb:	push   DWORD PTR [ecx]
  41c6cd:	jmp    0x41c741
  41c6cf:	jl     0x41c74a
  41c6d1:	xchg   edi,eax
  41c6d2:	and    DWORD PTR [edi-0x29],eax
  41c6d5:	and    ah,BYTE PTR [eax-0x418fe20a]
  41c6db:	mov    edx,0x9bf40ba1
  41c6e0:	dec    ebx
  41c6e1:	adc    al,0xa8
  41c6e3:	add    BYTE PTR [ebp+ebp*1+0x5ec57cb5],ah
  41c6ea:	cmp    dl,BYTE PTR [ecx]
  41c6ec:	loop   0x41c724
  41c6ee:	and    edi,DWORD PTR [esi-0x421db49a]
  41c6f4:	cmp    dl,BYTE PTR [ebp+0x65]
  41c6f7:	(bad)  
  41c6f8:	pop    edx
  41c6f9:	cmp    cl,BYTE PTR ds:0x8909cded
  41c6ff:	sbb    bh,BYTE PTR [ebx]
  41c701:	je     0x41c75c
  41c703:	das    
  41c704:	popa   
  41c705:	mov    ds:0xce27e76e,eax
  41c70a:	pop    esi
  41c70b:	cmp    edi,DWORD PTR [esi+0x510f57fa]
  41c711:	adc    BYTE PTR [edi-0x3],dl
  41c714:	pusha  
  41c715:	jae    0x41c713
  41c717:	mov    ah,0x27
  41c719:	cmp    bh,ah
  41c71b:	mov    WORD PTR [eax],?
  41c71d:	mov    WORD PTR [ecx+0x30],?
  41c720:	mov    ds:0x86d2ac2,eax
  41c725:	stos   DWORD PTR es:[edi],eax
  41c726:	ret    
  41c727:	add    eax,0x90871f8d
  41c72c:	lods   eax,DWORD PTR ds:[esi]
  41c72d:	adc    ecx,DWORD PTR [ecx]
  41c72f:	cs jecxz 0x41c6e2
  41c732:	in     eax,dx
  41c733:	mov    WORD PTR [esi-0x69],?
  41c736:	scas   eax,DWORD PTR es:[edi]
  41c737:	fwait
  41c738:	adc    DWORD PTR [edx+0x0],ebp
  41c73b:	out    0x7b,eax
  41c73d:	icebp  
  41c73e:	jge    0x41c7b6
  41c740:	and    ebx,edi
  41c742:	stos   BYTE PTR es:[edi],al
  41c743:	ins    BYTE PTR es:[edi],dx
  41c744:	das    
  41c745:	mov    eax,0x946d9493
  41c74a:	and    al,0xe4
  41c74c:	and    DWORD PTR [eax],esp
  41c74e:	(bad)  
  41c74f:	iret   
  41c750:	pop    eax
  41c751:	xor    al,dh
  41c753:	cmp    ebx,DWORD PTR [edi]
  41c755:	sub    bl,dh
  41c757:	leave  
  41c758:	add    al,0xde
  41c75a:	xchg   esp,eax
  41c75b:	js     0x41c6fd
  41c75d:	mov    eax,0x402da201
  41c762:	and    BYTE PTR [ebx+0x78025702],ch
  41c768:	jmp    0x9d69:0xf439f87f
  41c76f:	aas    
  41c770:	sahf   
  41c771:	imul   esi,DWORD PTR [ecx],0xffffffd5
  41c774:	add    eax,0xd2ec0e47
  41c779:	fild   DWORD PTR [esi]
  41c77b:	clc    
  41c77c:	ret    
  41c77d:	outs   dx,DWORD PTR ds:[esi]
  41c77e:	mov    eax,0xcf79a68a
  41c783:	inc    edi
  41c784:	add    BYTE PTR [esi+0x28],bh
  41c787:	adc    DWORD PTR [esi],0xb
  41c78a:	les    ebx,FWORD PTR [edi-0x64]
  41c78d:	rcr    DWORD PTR [ebx-0x25174c37],1
  41c793:	mov    al,0xec
  41c795:	pop    ds
  41c796:	pop    es
  41c797:	mov    ebx,0xf90a7f3f
  41c79c:	std    
  41c79d:	dec    ebx
  41c79e:	sbb    al,0x92
  41c7a0:	mov    fs,WORD PTR [edx-0x73137257]
  41c7a6:	daa    
  41c7a7:	sbb    DWORD PTR [ebx+0xe697ce7],0x812f15ba
  41c7b1:	jmp    0xb379:0xa6494fb6
  41c7b8:	jno    0x41c74a
  41c7ba:	ds mov ebp,0x5d548162
  41c7c0:	rol    BYTE PTR [ebp+0x74],1
  41c7c3:	push   cs
  41c7c4:	and    al,0x7b
  41c7c6:	push   esp
  41c7c7:	stc    
  41c7c8:	test   eax,0x5c2191d
  41c7cd:	xor    al,0xfb
  41c7cf:	add    DWORD PTR [esi+0x2e890ca8],ebx
  41c7d5:	test   BYTE PTR [edi],0xac
  41c7d8:	pop    eax
  41c7d9:	add    edx,DWORD PTR [ecx+0x58fed866]
  41c7df:	out    dx,al
  41c7e0:	push   edi
  41c7e1:	daa    
  41c7e2:	sub    ecx,DWORD PTR [ebx+0xa6e8a3b]
  41c7e8:	xchg   edi,eax
  41c7e9:	mov    ds:0x32c5b219,eax
  41c7ee:	jns    0x41c7e8
  41c7f0:	aaa    
  41c7f1:	popa   
  41c7f2:	dec    edx
  41c7f3:	mov    edi,0x6cb9ad23
  41c7f8:	mov    ecx,0xd97df95a
  41c7fd:	aaa    
  41c7fe:	push   edi
  41c7ff:	xchg   esp,eax
  41c800:	mov    ds:0x372932f0,eax
  41c805:	pop    esi
  41c806:	je     0x41c87b
  41c808:	sbb    al,0xfa
  41c80a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c80b:	pop    ds
  41c80c:	aam    0xd9
  41c80e:	pop    ecx
  41c80f:	inc    eax
  41c810:	gs loop 0x41c7dd
  41c813:	test   esp,esi
  41c815:	les    edi,FWORD PTR ds:0x1954672b
  41c81b:	js     0x41c868
  41c81d:	cdq    
  41c81e:	rol    esp,0xe
  41c821:	rcl    bl,0xde
  41c824:	or     al,0xdb
  41c826:	xchg   BYTE PTR [eax+eax*8-0x2],bh
  41c82a:	js     0x41c8a2
  41c82c:	mov    ds:0xa0867bbc,eax
  41c831:	ss mov edx,0xfe7c870a
  41c837:	xor    ah,BYTE PTR [ebp+0x54]
  41c83a:	inc    esi
  41c83b:	push   ss
  41c83c:	xchg   cl,ch
  41c83e:	dec    ebp
  41c83f:	jnp    0x41c847
  41c841:	and    eax,0xf1c041bd
  41c846:	dec    ebx
  41c847:	daa    
  41c848:	mov    al,ds:0xcbf75d86
  41c84d:	std    
  41c84e:	mov    gs,WORD PTR [edx]
  41c850:	outs   dx,BYTE PTR ds:[esi]
  41c851:	adc    BYTE PTR [ebx],al
  41c853:	jecxz  0x41c8a3
  41c855:	ja     0x41c81c
  41c857:	xchg   esi,eax
  41c858:	add    DWORD PTR [ecx],ebx
  41c85a:	aam    0x4e
  41c85c:	int    0x41
  41c85e:	lods   eax,DWORD PTR ds:[esi]
  41c85f:	sahf   
  41c860:	jmp    0xbfae:0xa7e051b4
  41c867:	mov    dh,ah
  41c869:	mov    esi,0xa56ccf6d
  41c86e:	aam    0x5a
  41c870:	fadd   DWORD PTR [edi-0x2b]
  41c873:	test   BYTE PTR [ebp+0x2c],0xa4
  41c877:	mov    esp,0x263d4628
  41c87c:	int3   
  41c87d:	test   DWORD PTR ds:0xa77b522,edi
  41c883:	pop    edx
  41c884:	hlt    
  41c885:	or     dl,BYTE PTR [ebx]
  41c887:	fcomp  DWORD PTR [edi-0x7ac2d372]
  41c88d:	add    eax,0x32529a3b
  41c892:	and    eax,0x117344d
  41c897:	fwait
  41c898:	mul    BYTE PTR [eax]
  41c89a:	inc    eax
  41c89b:	add    eax,0xf3f37463
  41c8a0:	sub    ah,dl
  41c8a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8a3:	mov    BYTE PTR [esi],dl
  41c8a5:	stc    
  41c8a6:	push   esp
  41c8a7:	inc    ecx
  41c8a8:	add    eax,0x8f80632
  41c8ad:	sbb    ah,ch
  41c8af:	add    al,0x64
  41c8b1:	mov    esp,0x132b356d
  41c8b6:	push   ebx
  41c8b7:	or     ebx,DWORD PTR ds:0x788941a1
  41c8bd:	loop   0x41c92b
  41c8bf:	and    eax,0xfc28d8b
  41c8c4:	shl    BYTE PTR [eax-0x1421ad28],1
  41c8ca:	push   ecx
  41c8cb:	inc    ebp
  41c8cc:	jnp    0x41c90e
  41c8ce:	imul   eax,DWORD PTR [eax-0x4e160d03],0x14
  41c8d5:	jecxz  0x41c8b0
  41c8d7:	int    0xb4
  41c8d9:	shl    BYTE PTR [edi-0x3b563275],cl
  41c8df:	add    ecx,DWORD PTR [ebx+edx*8-0x17]
  41c8e3:	gs xor eax,0x1559ebb6
  41c8e9:	xor    al,dh
  41c8eb:	repz pusha 
  41c8ed:	pusha  
  41c8ee:	mov    esp,0x959c0087
  41c8f3:	jno    0x41c8b6
  41c8f5:	push   eax
  41c8f6:	cmp    edi,DWORD PTR ds:0x95fa9831
  41c8fc:	dec    esi
  41c8fd:	inc    eax
  41c8fe:	inc    ecx
  41c8ff:	push   cs
  41c900:	cwde   
  41c901:	inc    ecx
  41c902:	adc    bl,BYTE PTR [ebx]
  41c904:	cs cmp bh,dl
  41c907:	rcl    BYTE PTR [esi-0x4778f414],cl
  41c90d:	sbb    BYTE PTR [ebx],bh
  41c90f:	add    BYTE PTR [eax],al
  41c911:	or     DWORD PTR ds:0x42857d,0x428415
  41c91b:	sub    eax,ecx
  41c91d:	mov    ecx,DWORD PTR ds:0x42847d
  41c923:	sbb    ecx,DWORD PTR ds:0x4284d9
  41c929:	mov    DWORD PTR ds:0x42847d,ecx
  41c92f:	mov    DWORD PTR [ebp-0xfc],eax
  41c935:	movzx  eax,BYTE PTR ds:0x428359
  41c93c:	sub    eax,DWORD PTR ds:0x428339
  41c942:	mov    ds:0x428359,eax
  41c947:	mov    DWORD PTR [ebp-0x28],0x16d7
  41c94e:	mov    DWORD PTR [ebp-0x134],0x6b4
  41c958:	mov    eax,DWORD PTR [ebp-0x134]
  41c95e:	cmp    DWORD PTR ds:0x42857d,0x0
  41c965:	mov    ecx,0x4723
  41c96a:	mov    DWORD PTR ds:0x428341,0x48a0
  41c974:	jmp    0x41c9c9
  41c979:	mov    ecx,0x5cee
  41c97e:	cmp    DWORD PTR ds:0x42857d,0x0
  41c985:	jl     0x41c9b9
  41c98b:	push   0x8e3c
  41c990:	call   DWORD PTR ds:0x42e070
  41c996:	movzx  ecx,BYTE PTR ds:0x42847d
  41c99d:	sbb    DWORD PTR ds:0x428469,ecx
  41c9a3:	xor    DWORD PTR ds:0x42856d,edx
  41c9a9:	mov    DWORD PTR ds:0x4284e1,0x54fa
  41c9b3:	adc    DWORD PTR ds:0x428455,ebx
  41c9b9:	xor    ecx,DWORD PTR ds:0x428565
  41c9bf:	sub    DWORD PTR ds:0x428431,0x73c7
  41c9c9:	or     eax,0x4f70
  41c9ce:	cmp    DWORD PTR ds:0x42842d,0x0
  41c9d5:	mov    ecx,0x6758
  41c9da:	mov    ecx,0x329e
  41c9df:	mov    DWORD PTR ds:0x4284c5,ecx
  41c9e5:	mov    DWORD PTR ds:0x428469,edi
  41c9eb:	jmp    0x41ca37
  41c9f0:	mov    DWORD PTR ds:0x428365,0x5f4d
  41c9fa:	cmp    DWORD PTR ds:0x42842d,0x0
  41ca01:	jae    0x41ca29
  41ca07:	push   0x67b2
  41ca0c:	push   0x4f13
  41ca11:	call   DWORD PTR ds:0x42e074
  41ca17:	add    ecx,0x3ae9
  41ca1d:	sub    ecx,DWORD PTR ds:0x428359
  41ca23:	xor    ecx,DWORD PTR ds:0x42842d
  41ca29:	adc    DWORD PTR ds:0x42832d,ecx
  41ca2f:	adc    ecx,DWORD PTR ds:0x42842d
  41ca35:	not    ecx
  41ca37:	mov    ecx,DWORD PTR [ebp-0x28]
  41ca3a:	or     DWORD PTR ds:0x42847d,0x428461
  41ca44:	or     eax,ecx
  41ca46:	xor    ecx,ecx
  41ca48:	xor    ecx,DWORD PTR ds:0x428361
  41ca4e:	xor    DWORD PTR ds:0x428551,ecx
  41ca54:	sub    eax,0x5ff7
  41ca59:	mov    ecx,DWORD PTR ds:0x428359
  41ca5f:	sub    ecx,DWORD PTR ds:0x4284e9
  41ca65:	mov    DWORD PTR ds:0x428359,ecx
  41ca6b:	mov    DWORD PTR [ebp-0xc8],eax
  41ca71:	sub    DWORD PTR ds:0x428501,0xac
  41ca7b:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41ca85:	cmp    DWORD PTR ds:0x428445,0x0
  41ca8c:	mov    DWORD PTR ds:0x428351,edi
  41ca92:	mov    DWORD PTR ds:0x42841d,edx
  41ca98:	jmp    0x41cafc
  41ca9d:	mov    DWORD PTR ds:0x428429,edx
  41caa3:	mov    DWORD PTR ds:0x4284f9,ebx
  41caa9:	cmp    DWORD PTR ds:0x428445,0x0
  41cab0:	jbe    0x41cad5
  41cab6:	push   DWORD PTR [ebp-0x1c]
  41cab9:	call   DWORD PTR ds:0x42e128
  41cabf:	sub    DWORD PTR ds:0x428501,edi
  41cac5:	xor    ecx,ecx
  41cac7:	add    ecx,DWORD PTR ds:0x428591
  41cacd:	mov    ecx,DWORD PTR [ecx]
  41cacf:	adc    DWORD PTR ds:0x42845d,ecx
  41cad5:	and    ecx,DWORD PTR ds:0x428551
  41cadb:	sub    ecx,ecx
  41cadd:	xor    ecx,ecx
  41cadf:	or     ecx,DWORD PTR ds:0x428559
  41cae5:	and    ecx,DWORD PTR ds:0x428461
  41caeb:	mov    DWORD PTR ds:0x428559,ecx
  41caf1:	adc    ecx,DWORD PTR ds:0x428409
  41caf7:	or     eax,0x53d3
  41cafc:	mov    DWORD PTR [ebp-0xc4],0x6236
  41cb06:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41cb0d:	jmp    0x41cef4
  41cb12:	pop    ebx
  41cb13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb14:	jmp    0x31aa:0x7b9c3cd8
  41cb1b:	add    al,0x9a
  41cb1d:	jecxz  0x41cb0f
  41cb1f:	jae    0x41cab7
  41cb21:	jecxz  0x41cb0e
  41cb23:	dec    ecx
  41cb24:	sar    BYTE PTR [esi-0x41413bb6],0x4e
  41cb2b:	mov    al,ds:0xb4ff922c
  41cb30:	retf   
  41cb31:	xor    DWORD PTR [ecx+0x1e31aaa6],edx
  41cb37:	lea    ebp,[ebx-0x3e]
  41cb3a:	repz in eax,dx
  41cb3c:	dec    edi
  41cb3d:	jp     0x41cadf
  41cb3f:	mov    ebx,0x44cb759f
  41cb44:	xchg   BYTE PTR [ecx-0x43],bl
  41cb47:	cmp    edi,ebx
  41cb49:	mov    ecx,0x3edc3759
  41cb4e:	sbb    BYTE PTR [ebx+0x58],bh
  41cb51:	add    DWORD PTR [eax-0xcfdd580],0x15049ec1
  41cb5b:	out    dx,eax
  41cb5c:	sub    BYTE PTR ds:0xe48cb068,bl
  41cb62:	add    eax,0xc521375f
  41cb67:	cmp    eax,0x76ab152
  41cb6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb6d:	xor    eax,0x7c1cb496
  41cb72:	mov    esp,0x89b8b4af
  41cb77:	mov    al,ds:0xa52c7358
  41cb7c:	add    BYTE PTR [ebx+edi*1],dl
  41cb7f:	add    al,dl
  41cb81:	ss js  0x41cbcb
  41cb84:	sub    BYTE PTR [ebp-0x4d5ec5b],0xb5
  41cb8b:	mov    ah,0x55
  41cb8d:	xlat   BYTE PTR ds:[ebx]
  41cb8e:	add    eax,0x746ac144
  41cb93:	jmp    0xdacf8876
  41cb98:	push   0x5f671244
  41cb9d:	xchg   edi,eax
  41cb9e:	arpl   sp,sp
  41cba0:	into   
  41cba1:	shl    DWORD PTR [ebx],cl
  41cba3:	mov    eax,ds:0x752d3f9e
  41cba8:	pop    esp
  41cba9:	mov    ds:0xde3af441,eax
  41cbae:	jl     0x41cc20
  41cbb0:	loop   0x41cc07
  41cbb2:	jl     0x41cb5c
  41cbb4:	aas    
  41cbb5:	push   ecx
  41cbb6:	jo     0x41cbe7
  41cbb8:	fdivr  QWORD PTR [edi]
  41cbba:	out    0xc2,al
  41cbbc:	inc    ecx
  41cbbd:	iret   
  41cbbe:	push   0x5798df57
  41cbc3:	jmp    DWORD PTR [ecx-0x7]
  41cbc6:	rcl    BYTE PTR [ebp+esi*8-0x69],cl
  41cbca:	cmp    edi,DWORD PTR [edi-0x436151b5]
  41cbd0:	in     ax,dx
  41cbd2:	xor    eax,0x68cbed0b
  41cbd7:	or     ebx,DWORD PTR [eax+0x72]
  41cbda:	inc    edi
  41cbdb:	in     eax,dx
  41cbdc:	(bad)  [ecx-0x54]
  41cbdf:	popa   
  41cbe0:	das    
  41cbe1:	jp     0x41cbb0
  41cbe3:	dec    edx
  41cbe4:	std    
  41cbe5:	ds or  esp,ecx
  41cbe8:	aam    0xcf
  41cbea:	jb     0x41cc55
  41cbec:	sbb    DWORD PTR [edi],ebp
  41cbee:	add    al,0xca
  41cbf0:	mov    ebx,0x6417d894
  41cbf5:	mov    bh,0xf2
  41cbf7:	or     al,0xed
  41cbf9:	js     0x41cc4c
  41cbfb:	jns    0x41cc4b
  41cbfd:	and    eax,0x5e534e2f
  41cc02:	in     eax,dx
  41cc03:	pop    ds
  41cc04:	pop    eax
  41cc05:	mov    ebp,0xfe6896b1
  41cc0a:	xchg   ebx,eax
  41cc0b:	ins    BYTE PTR es:[edi],dx
  41cc0c:	or     ch,BYTE PTR [ecx-0x4c]
  41cc0f:	jmp    0x41cc78
  41cc11:	and    al,0x96
  41cc13:	sub    esp,DWORD PTR [esi]
  41cc15:	lea    esi,[edi+0x4d]
  41cc18:	enter  0xac2f,0x7a
  41cc1c:	mov    ebp,0xdc0f063f
  41cc21:	fs dec eax
  41cc23:	call   0x5d272232
  41cc28:	lds    ebp,FWORD PTR [esi+0x37d57fb]
  41cc2e:	out    dx,eax
  41cc2f:	xor    ah,bl
  41cc31:	loope  0x41cc02
  41cc33:	or     al,BYTE PTR [esi+0x54579e86]
  41cc39:	pop    es
  41cc3a:	push   es
  41cc3b:	mov    ecx,0x6343acab
  41cc40:	sub    eax,DWORD PTR [esi]
  41cc42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc43:	cmp    ecx,esp
  41cc45:	mov    ch,0xe6
  41cc47:	imul   eax,DWORD PTR [edi],0xffffffcd
  41cc4a:	add    ch,0xaa
  41cc4d:	repz push 0x68
  41cc50:	jmp    0xb495:0xd34e8109
  41cc57:	push   0x832f7c1
  41cc5c:	inc    esi
  41cc5d:	or     BYTE PTR [edi],0x6
  41cc60:	stos   DWORD PTR es:[edi],eax
  41cc61:	xor    ch,BYTE PTR [eax+ecx*2+0xe316c8b]
  41cc68:	mov    esp,0x990bf2b4
  41cc6d:	imul   ebp,DWORD PTR [eax-0x3b],0x7e
  41cc71:	scas   al,BYTE PTR es:[edi]
  41cc72:	cmp    dl,BYTE PTR [edx]
  41cc74:	cmp    al,0xe7
  41cc76:	aas    
  41cc77:	jecxz  0x41cc8d
  41cc79:	sub    dl,bh
  41cc7b:	out    dx,al
  41cc7c:	jo     0x41cc19
  41cc7e:	iret   
  41cc7f:	out    dx,eax
  41cc80:	sbb    BYTE PTR [eax+edx*1+0x452c1ae4],cl
  41cc87:	rdpmc  
  41cc89:	aam    0xbf
  41cc8b:	inc    esi
  41cc8c:	add    eax,DWORD PTR [ebx-0x6556ae90]
  41cc92:	in     al,dx
  41cc93:	rcr    BYTE PTR [ebp-0x4],1
  41cc96:	sub    ecx,edx
  41cc98:	sbb    ebx,DWORD PTR [ebp+ebp*8+0x4c]
  41cc9c:	arpl   WORD PTR [esi-0x5d],dx
  41cc9f:	mov    ds:0xe41a9e57,al
  41cca4:	rcl    DWORD PTR [edi],1
  41cca6:	pop    eax
  41cca7:	mov    ecx,0x830b975
  41ccac:	fisub  DWORD PTR [ecx+eiz*4]
  41ccaf:	jnp    0x41ccd7
  41ccb1:	add    al,0x67
  41ccb3:	stos   BYTE PTR es:[edi],al
  41ccb4:	scas   al,BYTE PTR es:[edi]
  41ccb5:	push   edx
  41ccb6:	test   eax,0x8954b1ba
  41ccbb:	nop
  41ccbc:	or     eax,0xa67eac62
  41ccc1:	or     eax,0x8f328cc3
  41ccc6:	sar    BYTE PTR [edi+0xc9565c6],cl
  41cccc:	aad    0xf8
  41ccce:	cmp    ebx,DWORD PTR [edi-0x66b08955]
  41ccd4:	pusha  
  41ccd5:	div    cl
  41ccd7:	cmp    bl,bl
  41ccd9:	cmc    
  41ccda:	bound  esp,QWORD PTR [edi]
  41ccdc:	cmp    ch,BYTE PTR [eax+0x35]
  41ccdf:	jns    0x41cd05
  41cce1:	test   BYTE PTR [ebx-0x47651bc7],bl
  41cce7:	push   edi
  41cce8:	mov    dh,0xf9
  41ccea:	mov    eax,ds:0x32066b6e
  41ccef:	imul   edx,DWORD PTR [eax+esi*2],0x92f4e3be
  41ccf6:	lods   al,BYTE PTR ds:[esi]
  41ccf7:	jge    0x41ccb2
  41ccf9:	leave  
  41ccfa:	jbe    0x41cd47
  41ccfc:	push   0x33
  41ccfe:	mov    ebx,DWORD PTR [eax]
  41cd00:	clc    
  41cd01:	in     al,dx
  41cd02:	ja     0x41cd4c
  41cd04:	lods   eax,DWORD PTR ds:[esi]
  41cd05:	fldcw  WORD PTR ss:[ebp-0x42]
  41cd09:	push   0x7a
  41cd0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd0c:	and    BYTE PTR [ecx+0x4a],cl
  41cd0f:	rol    DWORD PTR [edx-0x64ec17a2],0x62
  41cd16:	lods   al,BYTE PTR ds:[esi]
  41cd17:	xchg   esp,eax
  41cd18:	xchg   edx,eax
  41cd19:	sub    bh,BYTE PTR [edx]
  41cd1b:	push   eax
  41cd1c:	jbe    0x41cd44
  41cd1e:	dec    edx
  41cd1f:	push   0xffffffba
  41cd21:	sub    BYTE PTR [ebp+0x5d],bl
  41cd24:	dec    esi
  41cd25:	inc    esi
  41cd26:	dec    ebp
  41cd27:	pop    es
  41cd28:	in     eax,dx
  41cd29:	jle    0x41ccbd
  41cd2b:	mov    eax,0xfbfb3a20
  41cd30:	push   esp
  41cd32:	pop    edi
  41cd33:	ret    
  41cd34:	jmp    0xa907:0xb5847422
  41cd3b:	mov    dh,bl
  41cd3d:	mov    al,ds:0x99f176d0
  41cd42:	mov    DWORD PTR [edi],edi
  41cd44:	mov    bh,0xe5
  41cd46:	jl     0x41cd7f
  41cd48:	inc    esi
  41cd49:	lea    ebp,[edi+0x7c]
  41cd4c:	mov    fs,WORD PTR [esi-0x13a700a3]
  41cd52:	mov    dh,0x8a
  41cd54:	push   ebp
  41cd55:	push   ecx
  41cd56:	adc    DWORD PTR [ecx+eax*1],ebx
  41cd59:	adc    al,0x11
  41cd5b:	adc    BYTE PTR [esi+edx*8+0x9a29f9e],cl
  41cd62:	jle    0x41cd61
  41cd64:	pop    es
  41cd65:	dec    DWORD PTR [ebp-0x61]
  41cd68:	cli    
  41cd69:	sbb    edx,DWORD PTR [ecx+0x16]
  41cd6c:	sahf   
  41cd6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd6e:	push   0xffffffbb
  41cd70:	stos   BYTE PTR es:[edi],al
  41cd71:	inc    ecx
  41cd72:	xchg   ebp,eax
  41cd73:	dec    ecx
  41cd74:	cmp    esi,DWORD PTR [eax]
  41cd76:	cmp    BYTE PTR [esi],ch
  41cd78:	dec    ebp
  41cd79:	popa   
  41cd7a:	xchg   BYTE PTR [edi-0x30],bl
  41cd7d:	mov    BYTE PTR [ecx+0x13de9c05],ch
  41cd83:	clc    
  41cd84:	mov    esp,0x36f5427c
  41cd89:	jmp    0x47ca:0xdbb25f16
  41cd90:	pop    es
  41cd91:	shl    DWORD PTR [esi-0x46a7b4d6],0xbe
  41cd98:	setnp  BYTE PTR [edx-0x10f70fdc]
  41cd9f:	sub    al,0xf
  41cda1:	push   eax
  41cda2:	fwait
  41cda3:	jmp    0x41cd67
  41cda5:	jb     0x41cdbf
  41cda7:	int3   
  41cda8:	retf   
  41cda9:	pop    ebp
  41cdaa:	popa   
  41cdab:	ins    BYTE PTR es:[edi],dx
  41cdac:	imul   edx,esp,0xdc759b37
  41cdb2:	jg     0x41cda4
  41cdb4:	imul   ecx,esi,0x7b
  41cdb7:	mov    fs,ebx
  41cdb9:	inc    edx
  41cdba:	mov    cl,0xb1
  41cdbc:	push   ds
  41cdbd:	and    DWORD PTR [ebp-0x66],esi
  41cdc0:	pop    ebx
  41cdc1:	inc    eax
  41cdc2:	aaa    
  41cdc3:	adc    BYTE PTR [ebx+ebp*4+0x4b],dh
  41cdc7:	cli    
  41cdc8:	outs   dx,BYTE PTR ds:[esi]
  41cdc9:	not    bl
  41cdcb:	cmp    eax,esp
  41cdcd:	mov    dl,0x23
  41cdcf:	cmp    DWORD PTR [esi+0x41],edi
  41cdd2:	pop    es
  41cdd3:	bound  ebx,QWORD PTR [ebx-0x6b29aa9a]
  41cdd9:	xor    eax,0xedd96f68
  41cdde:	fwait
  41cddf:	sar    ebp,1
  41cde1:	mov    BYTE PTR [ebp+0x104cda5d],0x7c
  41cde8:	imul   ebx,DWORD PTR [ebx-0x7754418b],0xffffffb9
  41cdef:	xchg   edi,eax
  41cdf0:	jb     0x41ce34
  41cdf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdf3:	shl    DWORD PTR [eax+edx*8],0x7c
  41cdf7:	and    edx,ebp
  41cdf9:	(bad)  
  41cdfa:	mov    ebx,0xf006ea8e
  41cdff:	pop    esp
  41ce00:	dec    edi
  41ce01:	in     eax,0x6d
  41ce03:	jns    0x41cde0
  41ce05:	xor    al,0xc0
  41ce07:	ret    
  41ce08:	sbb    edi,edi
  41ce0a:	adc    al,0xac
  41ce0c:	nop
  41ce0d:	ds gs adc eax,0x94f09035
  41ce14:	mov    al,ds:0xe60ddd28
  41ce19:	fist   DWORD PTR [ebp+0x65]
  41ce1c:	ds add cl,dl
  41ce1f:	adc    DWORD PTR es:[eax+0x70bc380b],edi
  41ce26:	fistp  QWORD PTR [edi-0x23a8ea50]
  41ce2c:	dec    edx
  41ce2d:	push   ds
  41ce2e:	cld    
  41ce2f:	inc    esi
  41ce30:	xchg   bl,bh
  41ce32:	mul    BYTE PTR [ecx]
  41ce34:	push   ebx
  41ce35:	jmp    0x41cea0
  41ce37:	mov    ebx,0xbe8ed381
  41ce3c:	jecxz  0x41cdee
  41ce3e:	push   ss
  41ce3f:	lahf   
  41ce40:	adc    DWORD PTR [edi],0xaff2a3f0
  41ce46:	xchg   edx,eax
  41ce47:	inc    esp
  41ce48:	jne    0x41cec2
  41ce4a:	dec    eax
  41ce4b:	cmp    DWORD PTR [ebx-0x290add88],esi
  41ce51:	popf   
  41ce52:	mov    al,0x21
  41ce54:	push   ds
  41ce55:	and    al,0x99
  41ce57:	jb     0x41ce0f
  41ce59:	fidivr DWORD PTR [eax]
  41ce5b:	call   0xd50e1aa4
  41ce60:	sbb    cl,ah
  41ce62:	inc    ebp
  41ce63:	lds    esi,FWORD PTR [edx+edx*2+0xd896a52]
  41ce6a:	sub    BYTE PTR [eax],0x81
  41ce6d:	cmp    DWORD PTR [esi],esp
  41ce6f:	shr    DWORD PTR [esi],1
  41ce71:	or     DWORD PTR [ecx],ecx
  41ce73:	xchg   ebp,eax
  41ce74:	pop    esp
  41ce75:	shr    BYTE PTR [ebx-0x65],1
  41ce78:	pop    edi
  41ce79:	ret    0x8d96
  41ce7c:	fsub   DWORD PTR [ecx+ebp*2-0x5e322870]
  41ce83:	xor    al,0xd9
  41ce85:	test   WORD PTR [edx-0x7],0xda10
  41ce8b:	loop   0x41ce73
  41ce8d:	sahf   
  41ce8e:	xchg   edi,eax
  41ce8f:	xchg   esi,eax
  41ce90:	and    esp,DWORD PTR [ecx+0x7cb2d809]
  41ce96:	pop    ebp
  41ce97:	pop    ebx
  41ce98:	and    bh,dl
  41ce9a:	sub    edi,DWORD PTR [eax-0xf]
  41ce9d:	mov    ebp,DWORD PTR [ebx+0x38]
  41cea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cea1:	std    
  41cea2:	ret    
  41cea3:	jnp    0x41cf24
  41cea5:	stos   DWORD PTR es:[edi],eax
  41cea6:	shl    DWORD PTR [ebp-0xd6b72d3],0xca
  41cead:	idiv   BYTE PTR [ecx+edx*1-0x43]
  41ceb1:	(bad)  
  41ceb2:	icebp  
  41ceb3:	pop    eax
  41ceb4:	adc    DWORD PTR [edx-0x49baa38d],edi
  41ceba:	and    BYTE PTR es:[ebx],cl
  41cebd:	addr16 nop
  41cebf:	les    ebx,FWORD PTR [eax]
  41cec1:	mov    al,ch
  41cec3:	xchg   edi,eax
  41cec4:	cmp    BYTE PTR [edi+eiz*2],bl
  41cec7:	cmc    
  41cec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cec9:	xlat   BYTE PTR ds:[ebx]
  41ceca:	sub    al,0xbc
  41cecc:	ss xchg ebp,eax
  41cece:	js     0x41cef0
  41ced0:	pop    ebp
  41ced1:	outs   dx,BYTE PTR ds:[esi]
  41ced2:	jge    0x41ce56
  41ced4:	fsubr  QWORD PTR [eax+esi*2+0x39]
  41ced8:	es inc ecx
  41ceda:	fist   WORD PTR [ebx+0x6c7fe392]
  41cee0:	into   
  41cee1:	inc    ebp
  41cee2:	cmp    ebp,edi
  41cee4:	xor    esp,ebp
  41cee6:	pop    ebx
  41cee7:	out    0xef,eax
  41cee9:	add    eax,0x25cdb4f8
  41ceee:	mov    ebx,DWORD PTR [edi+0x1f]
  41cef1:	dec    ecx
  41cef2:	inc    ecx
  41cef3:	das    
  41cef4:	mov    DWORD PTR [ebp-0x128],0x7537
  41cefe:	xor    DWORD PTR ds:0x428479,edx
  41cf04:	mov    DWORD PTR [ebp-0x114],0x6985
  41cf0e:	and    DWORD PTR ds:0x4284e9,ebx
  41cf14:	mov    DWORD PTR [ebp-0x14],0x5627
  41cf1b:	or     DWORD PTR ds:0x428451,0x428555
  41cf25:	mov    DWORD PTR [ebp-0x64],0x72e7
  41cf2c:	mov    eax,DWORD PTR [ebp-0x14]
  41cf2f:	and    DWORD PTR ds:0x428551,ebx
  41cf35:	add    eax,DWORD PTR [ebp-0x64]
  41cf38:	mov    ecx,DWORD PTR [ebp-0x114]
  41cf3e:	sbb    DWORD PTR ds:0x4284d5,0x42833d
  41cf48:	sub    eax,ecx
  41cf4a:	xor    DWORD PTR ds:0x428371,edi
  41cf50:	mov    ecx,DWORD PTR [ebp-0x128]
  41cf56:	imul   eax,ecx
  41cf59:	cmp    DWORD PTR ds:0x428565,0x0
  41cf60:	mov    DWORD PTR ds:0x428501,0x44b
  41cf6a:	mov    ecx,DWORD PTR ds:0x428481
  41cf70:	mov    ecx,DWORD PTR ds:0x42847d
  41cf76:	mov    ecx,0x4ae9
  41cf7b:	jmp    0x41cfe3
  41cf80:	mov    ecx,DWORD PTR ds:0x4284f9
  41cf86:	mov    DWORD PTR ds:0x42834d,0x5810
  41cf90:	cmp    DWORD PTR ds:0x428565,0x0
  41cf97:	ja     0x41cfcd
  41cf9d:	push   0x42855d
  41cfa2:	push   0x16d1
  41cfa7:	push   DWORD PTR [ebp-0x20]
  41cfaa:	push   0x7e78
  41cfaf:	call   DWORD PTR ds:0x42e078
  41cfb5:	mov    ecx,DWORD PTR ds:0x42833d
  41cfbb:	sbb    DWORD PTR ds:0x42857d,ecx
  41cfc1:	sub    DWORD PTR ds:0x42843d,ecx
  41cfc7:	not    DWORD PTR ds:0x4284f9
  41cfcd:	xor    DWORD PTR ds:0x4284f5,edi
  41cfd3:	mov    DWORD PTR ds:0x428435,0x4e0f
  41cfdd:	xor    ecx,DWORD PTR ds:0x428551
  41cfe3:	imul   eax,eax,0xe4e
  41cfe9:	mov    ecx,DWORD PTR [ebp-0x7c]
  41cfec:	or     eax,ecx
  41cfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41cff1:	adc    DWORD PTR ds:0x428571,0xad
  41cffb:	lea    eax,[ecx+eax*1+0x46210209]
  41d002:	add    DWORD PTR ds:0x428449,0x55ef
  41d00c:	push   eax
  41d00d:	call   0x410df4
  41d012:	mov    ecx,eax
  41d014:	cmp    DWORD PTR ds:0x42833d,0x0
  41d01b:	mov    esi,DWORD PTR ds:0x428575
  41d021:	mov    DWORD PTR ds:0x428441,0x25c4
  41d02b:	jmp    0x41d0fd
  41d030:	mov    DWORD PTR ds:0x42846d,0x7eed
  41d03a:	mov    DWORD PTR ds:0x42855d,edx
  41d040:	cmp    DWORD PTR ds:0x42833d,0x0
  41d047:	jbe    0x41d070
  41d04d:	push   0x428371
  41d052:	call   DWORD PTR ds:0x42e2a0
  41d058:	and    esi,esi
  41d05a:	and    esi,DWORD PTR ds:0x4284d9
  41d060:	mov    esi,DWORD PTR ds:0x428511
  41d066:	mov    esi,DWORD PTR [esi]
  41d068:	xor    DWORD PTR ds:0x4284e9,esi
  41d06e:	xor    esi,esi
  41d070:	add    DWORD PTR ds:0x428355,ebx
  41d076:	movzx  esi,BYTE PTR ds:0x428561
  41d07d:	sbb    DWORD PTR ds:0x428465,esi
  41d083:	sbb    DWORD PTR ds:0x428569,0x428419
  41d08d:	or     esi,esi
  41d08f:	cmp    DWORD PTR ds:0x42836d,0x0
  41d096:	mov    DWORD PTR ds:0x4284f1,0x3cb6
  41d0a0:	mov    esi,0x65ca
  41d0a5:	mov    DWORD PTR ds:0x428501,edi
  41d0ab:	jmp    0x41d0fd
  41d0b0:	mov    DWORD PTR ds:0x42855d,edi
  41d0b6:	mov    eax,0x6c7b
  41d0bb:	cmp    DWORD PTR ds:0x42836d,0x0
  41d0c2:	jg     0x41d0eb
  41d0c8:	push   0x1a0a
  41d0cd:	push   DWORD PTR [ebp-0x24]
  41d0d0:	push   DWORD PTR [ebp-0xc]
  41d0d3:	call   DWORD PTR ds:0x42e12c
  41d0d9:	and    DWORD PTR ds:0x42854d,edx
  41d0df:	xor    DWORD PTR ds:0x428359,ebx
  41d0e5:	sub    esi,0x4c5f
  41d0eb:	sbb    DWORD PTR ds:0x428331,0x56b4
  41d0f5:	sbb    esi,esi
  41d0f7:	add    DWORD PTR ds:0x428449,ebx
  41d0fd:	mov    eax,DWORD PTR [ebp-0xc4]
  41d103:	imul   eax,eax,0x21b3
  41d109:	cmp    DWORD PTR ds:0x428355,0x0
  41d110:	mov    esi,0x3999
  41d115:	movzx  esi,BYTE PTR ds:0x428561
  41d11c:	mov    esi,0x5e4b
  41d121:	mov    esi,DWORD PTR ds:0x428339
  41d127:	jmp    0x41d1a8
  41d12c:	mov    DWORD PTR ds:0x4284ed,0x7a2a
  41d136:	not    esi
  41d138:	cmp    DWORD PTR ds:0x428355,0x0
  41d13f:	jb     0x41d183
  41d145:	push   0x5450
  41d14a:	push   0x3c7c
  41d14f:	call   DWORD PTR ds:0x42e07c
  41d155:	mov    esi,DWORD PTR ds:0x428549
  41d15b:	add    esi,DWORD PTR ds:0x42846d
  41d161:	mov    DWORD PTR ds:0x428549,esi
  41d167:	mov    esi,DWORD PTR ds:0x428411
  41d16d:	and    esi,DWORD PTR ds:0x428439
  41d173:	mov    DWORD PTR ds:0x428411,esi
  41d179:	sbb    DWORD PTR ds:0x428481,0x6b94
  41d183:	mov    esi,DWORD PTR ds:0x42844d
  41d189:	add    DWORD PTR ds:0x4284d5,esi
  41d18f:	movzx  esi,WORD PTR ds:0x428449
  41d196:	adc    esi,DWORD PTR ds:0x428365
  41d19c:	mov    DWORD PTR ds:0x428449,esi
  41d1a2:	xor    DWORD PTR ds:0x428339,edi
  41d1a8:	add    eax,DWORD PTR [ebp-0xe4]
  41d1ae:	and    eax,0xd5c
  41d1b3:	sub    eax,0x2e81
  41d1b8:	xor    edx,edx
  41d1ba:	sbb    DWORD PTR ds:0x42835d,ebx
  41d1c0:	mov    esi,0x2f1dc
  41d1c5:	or     DWORD PTR ds:0x428345,0x1bf3
  41d1cf:	div    esi
  41d1d1:	cmp    DWORD PTR ds:0x42845d,0x0
  41d1d8:	mov    DWORD PTR ds:0x428551,0x7c0f
  41d1e2:	mov    DWORD PTR ds:0x428479,0x21cd
  41d1ec:	mov    esi,DWORD PTR ds:0x428331
  41d1f2:	jmp    0x41d24d
  41d1f7:	mov    DWORD PTR ds:0x42857d,0x7012
  41d201:	mov    esi,0x5ebc
  41d206:	cmp    DWORD PTR ds:0x42845d,0x0
  41d20d:	jne    0x41d239
  41d213:	push   0x389e
  41d218:	push   0x768e
  41d21d:	push   0x6d0b
  41d222:	push   0x8403
  41d227:	call   DWORD PTR ds:0x42e130
  41d22d:	sbb    edx,DWORD PTR ds:0x428475
  41d233:	add    edx,0x16c4
  41d239:	movzx  esi,WORD PTR ds:0x428405
  41d240:	adc    DWORD PTR ds:0x4284d5,esi
  41d246:	sub    DWORD PTR ds:0x4284e9,edx
  41d24c:	inc    esi
  41d24d:	xor    eax,0x56ef
  41d252:	add    DWORD PTR ds:0x428561,0x7098
  41d25c:	add    ecx,eax
  41d25e:	cmp    DWORD PTR ds:0x428439,0x0
  41d265:	mov    DWORD PTR ds:0x42835d,0x1f02
  41d26f:	mov    esi,0x4128
  41d274:	mov    esi,DWORD PTR ds:0x4284cd
  41d27a:	jmp    0x41d2f7
  41d27f:	mov    DWORD PTR ds:0x42854d,ebx
  41d285:	movzx  eax,WORD PTR ds:0x42841d
  41d28c:	cmp    DWORD PTR ds:0x428439,0x0
  41d293:	jb     0x41d2d0
  41d299:	push   0x4840
  41d29e:	push   DWORD PTR [ebp-0x14]
  41d2a1:	push   0x75a6
  41d2a6:	push   DWORD PTR [ebp-0xc]
  41d2a9:	push   0x428243
  41d2ae:	push   DWORD PTR [ebp-0x28]
  41d2b1:	call   DWORD PTR ds:0x42e134
  41d2b7:	movzx  esi,BYTE PTR ds:0x428549
  41d2be:	xor    DWORD PTR ds:0x4284e5,esi
  41d2c4:	xor    esi,edx
  41d2c6:	or     DWORD PTR ds:0x428471,0x2eb3
  41d2d0:	xor    DWORD PTR ds:0x42855d,ebx
  41d2d6:	adc    edx,DWORD PTR ds:0x428571
  41d2dc:	add    DWORD PTR ds:0x42834d,0x1b5f
  41d2e6:	mov    esi,DWORD PTR ds:0x428519
  41d2ec:	mov    edx,DWORD PTR ds:0x4285b1
  41d2f2:	sub    edx,esi
  41d2f4:	sub    esi,DWORD PTR [esi+edx*1]
  41d2f7:	mov    DWORD PTR [ebp-0x90],ecx
  41d2fd:	mov    DWORD PTR [ebp-0xe0],0x7a31
  41d307:	mov    DWORD PTR ds:0x42843d,0x52c8
  41d311:	mov    DWORD PTR [ebp-0x44],0x2514
  41d318:	mov    DWORD PTR [ebp-0xdc],0x699c
  41d322:	cmp    DWORD PTR ds:0x4284d9,0x0
  41d329:	mov    DWORD PTR ds:0x428501,0x628e
  41d333:	movzx  ecx,BYTE PTR ds:0x428351
  41d33a:	mov    ecx,DWORD PTR ds:0x428431
  41d340:	jmp    0x41d3bd
  41d345:	mov    DWORD PTR ds:0x42840d,0x21ce
  41d34f:	mov    DWORD PTR ds:0x428369,edi
  41d355:	cmp    DWORD PTR ds:0x4284d9,0x0
  41d35c:	jge    0x41d39a
  41d362:	push   DWORD PTR [ebp-0x20]
  41d365:	push   DWORD PTR [ebp-0xc]
  41d368:	push   DWORD PTR [ebp-0x18]
  41d36b:	call   DWORD PTR ds:0x42e138
  41d371:	mov    ecx,DWORD PTR ds:0x428395
  41d377:	mov    edx,DWORD PTR ds:0x4285b9
  41d37d:	sub    ecx,edx
  41d37f:	sub    ecx,DWORD PTR [ecx+edx*1]
  41d382:	sub    ecx,0x1d69
  41d388:	mov    ecx,DWORD PTR ds:0x4284b5
  41d38e:	mov    edx,DWORD PTR ds:0x4285ad
  41d394:	sub    ecx,edx
  41d396:	imul   ecx,DWORD PTR [ecx+edx*1]
  41d39a:	sbb    DWORD PTR ds:0x4284f1,0x4f1
  41d3a4:	sub    esi,DWORD PTR ds:0x42857d
  41d3aa:	xor    esi,esi
  41d3ac:	add    esi,DWORD PTR ds:0x4283d9
  41d3b2:	mov    edx,DWORD PTR ds:0x42848d
  41d3b8:	sub    edx,esi
  41d3ba:	add    esi,DWORD PTR [esi+edx*1]
  41d3bd:	mov    DWORD PTR [ebp-0xd8],0x1
  41d3c7:	mov    DWORD PTR [ebp-0x24],0x7901
  41d3ce:	mov    esi,DWORD PTR ds:0x4283a5
  41d3d4:	xor    ecx,ecx
  41d3d6:	or     ecx,DWORD PTR ds:0x4283b1
  41d3dc:	sub    esi,ecx
  41d3de:	sub    esi,DWORD PTR [esi+ecx*1]
  41d3e1:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  41d3eb:	mov    DWORD PTR [ebp-0x78],0x37f2
  41d3f2:	add    edx,eax
  41d3f4:	mov    DWORD PTR [ebp-0x10],0x62ba
  41d3fb:	mov    DWORD PTR [ebp-0x94],0x561c
  41d405:	mov    DWORD PTR [ebp-0x34],0x58bc
  41d40c:	mov    ecx,DWORD PTR ds:0x428409
  41d412:	xor    DWORD PTR ds:0x4284d5,ecx
  41d418:	mov    DWORD PTR [ebp-0x60],0x24c7
  41d41f:	mov    DWORD PTR [ebp-0x5c],0x7a45
  41d426:	adc    eax,eax
  41d428:	mov    eax,DWORD PTR [ebp-0x34]
  41d42b:	add    edx,esi
  41d42d:	mov    ecx,DWORD PTR [ebp-0x60]
  41d430:	adc    DWORD PTR ds:0x42857d,0x428339
  41d43a:	mov    edx,DWORD PTR [ebp-0x5c]
  41d43d:	neg    esi
  41d43f:	and    edx,0x160e
  41d445:	and    DWORD PTR ds:0x428569,0x7809
  41d44f:	sub    edx,ecx
  41d451:	sub    edx,0x29ad
  41d457:	cmp    DWORD PTR ds:0x428429,0x0
  41d45e:	mov    DWORD PTR ds:0x42854d,0x177e
  41d468:	mov    DWORD PTR ds:0x4284c9,0x4211
  41d472:	mov    esi,0x2b55
  41d477:	mov    ecx,DWORD PTR ds:0x4284d9
  41d47d:	jmp    0x41d4d7
  41d482:	mov    DWORD PTR ds:0x428371,edx
  41d488:	cmp    DWORD PTR ds:0x428429,0x0
  41d48f:	jbe    0x41d4cb
  41d495:	push   0x428571
  41d49a:	push   0x428165
  41d49f:	push   0x5caf
  41d4a4:	push   DWORD PTR [ebp-0x28]
  41d4a7:	push   0x7d55
  41d4ac:	call   DWORD PTR ds:0x42e080
  41d4b2:	or     DWORD PTR ds:0x428545,ebx
  41d4b8:	xor    ecx,ecx
  41d4ba:	add    ecx,DWORD PTR ds:0x428389
  41d4c0:	mov    esi,DWORD PTR ds:0x4283e5
  41d4c6:	sub    esi,ecx
  41d4c8:	and    ecx,DWORD PTR [ecx+esi*1]
  41d4cb:	or     DWORD PTR ds:0x428571,0x760f
  41d4d5:	xor    ecx,ecx
  41d4d7:	imul   edx,eax
  41d4da:	sbb    DWORD PTR ds:0x428575,edi
  41d4e0:	mov    eax,DWORD PTR [ebp-0x90]
  41d4e6:	lea    eax,[eax+edx*1+0x14f2e240]
  41d4ed:	add    edx,ecx
  41d4ef:	mov    DWORD PTR [ebp-0x174],eax
  41d4f5:	mov    eax,DWORD PTR [ebp-0x24]
  41d4f8:	mov    ecx,DWORD PTR [ebp-0x94]
  41d4fe:	mov    edx,DWORD PTR [ebp-0x10]
  41d501:	or     DWORD PTR ds:0x42836d,ecx
  41d507:	xor    edx,ecx
  41d509:	add    edx,DWORD PTR [ebp-0x78]
  41d50c:	not    ecx
  41d50e:	mov    ecx,DWORD PTR [ebp-0xc0]
  41d514:	lea    ecx,[edx+ecx*1+0x6ac1]
  41d51b:	and    ecx,eax
  41d51d:	add    esi,esi
  41d51f:	mov    eax,0x1101
  41d524:	or     esi,DWORD PTR ds:0x42857d
  41d52a:	sub    eax,ecx
  41d52c:	adc    DWORD PTR ds:0x428375,ebx
  41d532:	add    eax,DWORD PTR [ebp+0x8]
  41d535:	cmp    DWORD PTR ds:0x428561,0x0
  41d53c:	mov    DWORD PTR ds:0x428465,0x5bb
  41d546:	mov    edx,0x635
  41d54b:	mov    DWORD PTR ds:0x428465,0x7e26
  41d555:	jmp    0x41d5d0
  41d55a:	mov    DWORD PTR ds:0x428375,0x7d12
  41d564:	cmp    DWORD PTR ds:0x428561,0x0
  41d56b:	jae    0x41d5af
  41d571:	push   DWORD PTR [ebp-0x24]
  41d574:	push   0x16b6
  41d579:	push   DWORD PTR [ebp-0x10]
  41d57c:	push   0x5f53
  41d581:	push   DWORD PTR [ebp-0x1c]
  41d584:	push   DWORD PTR [ebp-0x18]
  41d587:	push   DWORD PTR [ebp-0x28]
  41d58a:	push   0x42827f
  41d58f:	call   DWORD PTR ds:0x42e2a4
  41d595:	adc    DWORD PTR ds:0x428339,0x7656
  41d59f:	sbb    DWORD PTR ds:0x428501,edx
  41d5a5:	xor    DWORD PTR ds:0x428349,0x32fd
  41d5af:	mov    edx,DWORD PTR ds:0x428439
  41d5b5:	add    edx,DWORD PTR ds:0x4284dd
  41d5bb:	mov    DWORD PTR ds:0x428439,edx
  41d5c1:	sub    esi,esi
  41d5c3:	movzx  edx,BYTE PTR ds:0x428339
  41d5ca:	add    DWORD PTR ds:0x4284f5,edx
  41d5d0:	mov    DWORD PTR [ebp-0x170],eax
  41d5d6:	mov    DWORD PTR [ebp-0x15c],0xcb79b576
  41d5e0:	mov    DWORD PTR [ebp-0x158],0x9c2b8ae8
  41d5ea:	mov    DWORD PTR [ebp-0x154],0xcb79b572
  41d5f4:	mov    DWORD PTR [ebp-0x150],0x9c2b8ae8
  41d5fe:	mov    esi,DWORD PTR [ebp-0x174]
  41d604:	mov    eax,DWORD PTR [ebp-0x154]
  41d60a:	mov    edx,DWORD PTR [ebp-0x150]
  41d610:	xor    eax,0xcb79b576
  41d615:	xor    edx,0x9c2b8ae8
  41d61b:	mov    cl,0x2
  41d61d:	call   0x408bb8
  41d622:	mov    edi,eax
  41d624:	mov    ebx,edx
  41d626:	mov    eax,DWORD PTR [ebp-0x154]
  41d62c:	jmp    0x41da13
  41d631:	out    dx,al
  41d632:	sbb    DWORD PTR [edi],eax
  41d634:	mov    dh,0x2c
  41d636:	mov    esp,0xfc579970
  41d63b:	bound  ebx,QWORD PTR [esi-0x5b070794]
  41d641:	ja     0x41d694
  41d643:	sar    BYTE PTR [esi-0x41413bb6],0xa0
  41d64a:	mov    ds,WORD PTR [ebp-0x3165e36d]
  41d650:	xchg   edi,eax
  41d651:	mov    ch,0x1e
  41d653:	mov    al,0xcb
  41d655:	clc    
  41d656:	pusha  
  41d657:	in     eax,0xe0
  41d659:	outs   dx,BYTE PTR ds:[esi]
  41d65a:	lods   al,BYTE PTR ds:[esi]
  41d65b:	or     edx,DWORD PTR [ebx]
  41d65d:	sbb    esp,DWORD PTR [esi+0x647edf6]
  41d663:	push   0x522ade8d
  41d668:	sub    cl,ch
  41d66a:	lock xchg DWORD PTR [edx+0x68],edi
  41d66e:	push   esi
  41d66f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d670:	mov    al,0x90
  41d672:	into   
  41d673:	jecxz  0x41d60b
  41d675:	ins    BYTE PTR es:[edi],dx
  41d676:	cmc    
  41d677:	imul   ebx,DWORD PTR [ebp+0x6a781efa],0x62d78b8c
  41d681:	aad    0x9f
  41d683:	fidiv  DWORD PTR [ebx]
  41d685:	test   eax,0x5da034d
  41d68a:	ja     0x41d625
  41d68c:	mov    edi,0x3b5a32fe
  41d691:	fwait
  41d692:	mov    ds:0x76171fd4,eax
  41d697:	sbb    dl,bl
  41d699:	enter  0x3e0f,0x8b
  41d69d:	rol    DWORD PTR ds:0xe4060637,cl
  41d6a3:	aas    
  41d6a4:	sub    eax,0xbef65c4a
  41d6a9:	xor    dh,BYTE PTR [esp+edx*4+0x7e973a1b]
  41d6b0:	ror    DWORD PTR [edi-0x3ad2678d],cl
  41d6b6:	cmp    BYTE PTR [ecx-0x62],cl
  41d6b9:	pop    edx
  41d6ba:	das    
  41d6bb:	xchg   esi,eax
  41d6bc:	push   cs
  41d6bd:	sub    al,BYTE PTR ds:0xb34a7ec0
  41d6c3:	scas   al,BYTE PTR es:[edi]
  41d6c4:	sbb    al,0xf1
  41d6c6:	mov    ebx,0xc3100d92
  41d6cb:	xchg   ebx,eax
  41d6cc:	mov    ds:0x1b6032b2,eax
  41d6d1:	mov    dl,0xf7
  41d6d3:	pop    ebp
  41d6d4:	push   ss
  41d6d5:	into   
  41d6d6:	ins    BYTE PTR es:[edi],dx
  41d6d7:	test   al,0x1b
  41d6d9:	xor    eax,0x55b68b9b
  41d6de:	and    al,0x73
  41d6e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6e1:	iret   
  41d6e2:	mov    eax,0x46ea9859
  41d6e7:	out    dx,eax
  41d6e8:	cwde   
  41d6e9:	sub    ah,BYTE PTR [edi+0x2b]
  41d6ec:	lds    edi,FWORD PTR [edx-0x7f]
  41d6ef:	inc    eax
  41d6f0:	(bad)  
  41d6f1:	fiadd  DWORD PTR [ebx-0x6d]
  41d6f4:	xchg   ebp,eax
  41d6f5:	mov    DWORD PTR [edx+edx*4+0x5],ebx
  41d6f9:	inc    ebp
  41d6fa:	push   esi
  41d6fb:	sbb    edi,DWORD PTR [ebx-0x7fda74a8]
  41d701:	xchg   BYTE PTR ds:0x3dc49135,dl
  41d707:	xchg   ecx,eax
  41d708:	(bad)  [ebp+0x32e8176b]
  41d70e:	push   ecx
  41d70f:	xchg   esi,eax
  41d710:	adc    ch,al
  41d712:	dec    ebx
  41d713:	push   esp
  41d714:	daa    
  41d715:	mov    ds:0xb02524b4,al
  41d71a:	stc    
  41d71b:	(bad)  
  41d71c:	repnz cmp ecx,DWORD PTR [ecx]
  41d71f:	xor    edx,DWORD PTR [edi+edi*2]
  41d722:	add    BYTE PTR [edi+0x4a],bh
  41d725:	std    
  41d726:	lahf   
  41d727:	lahf   
  41d728:	retf   0xbb0
  41d72b:	ret    
  41d72c:	int    0x30
  41d72e:	sub    BYTE PTR [edx-0x57aedfeb],ch
  41d734:	ins    BYTE PTR es:[edi],dx
  41d735:	jno    0x41d753
  41d737:	jbe    0x41d73b
  41d739:	loopne 0x41d79d
  41d73b:	mov    dh,0x2c
  41d73d:	cdq    
  41d73e:	pop    ds
  41d73f:	outs   dx,DWORD PTR ds:[esi]
  41d740:	in     al,dx
  41d741:	mov    ah,0x3b
  41d743:	mov    esp,0x1f95d0db
  41d748:	test   al,0xb9
  41d74a:	ss cmc 
  41d74c:	iret   
  41d74d:	cmp    ecx,DWORD PTR [ecx]
  41d74f:	shl    BYTE PTR ds:0x17459f34,0x33
  41d756:	xor    bl,0x21
  41d759:	(bad)  
  41d75a:	std    
  41d75b:	mov    al,ds:0xef771fed
  41d760:	pop    ds
  41d761:	shl    DWORD PTR [ebp+0x70],cl
  41d764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d765:	xor    al,BYTE PTR [edi]
  41d767:	int    0xc0
  41d769:	test   cl,ch
  41d76b:	sbb    eax,0x4e07a527
  41d770:	mov    ds:0x4f77375b,eax
  41d775:	mov    esi,DWORD PTR [eax]
  41d777:	jae    0x41d7ed
  41d779:	jmp    0xefb36e4a
  41d77e:	rcl    DWORD PTR [esi+0x72],cl
  41d781:	bound  ecx,QWORD PTR [esi+0x1a]
  41d784:	ja     0x41d778
  41d786:	pop    esi
  41d787:	ja     0x41d70c
  41d789:	es pop esi
  41d78b:	and    ecx,edi
  41d78d:	ret    
  41d78e:	lods   al,BYTE PTR ds:[esi]
  41d78f:	(bad)  
  41d790:	out    0xc5,al
  41d792:	adc    DWORD PTR [ecx],edi
  41d794:	es das 
  41d796:	jg     0x41d79d
  41d798:	xor    DWORD PTR [eax],ecx
  41d79a:	cmp    al,0x94
  41d79c:	hlt    
  41d79d:	loopne 0x41d777
  41d79f:	xchg   esi,eax
  41d7a0:	in     eax,0x6a
  41d7a2:	cmova  eax,edi
  41d7a5:	imul   edx,DWORD PTR [eax+0x6ce0947e],0xf959f73f
  41d7af:	mov    dl,0x42
  41d7b1:	or     edi,DWORD PTR [eax-0x5d]
  41d7b4:	xchg   ebp,eax
  41d7b5:	aad    0xbf
  41d7b7:	repz inc ecx
  41d7b9:	push   ds
  41d7ba:	xlat   BYTE PTR ds:[ebx]
  41d7bb:	aam    0xe8
  41d7bd:	add    esp,esi
  41d7bf:	jns    0x41d7c4
  41d7c1:	cwde   
  41d7c2:	xchg   edx,eax
  41d7c3:	pop    edx
  41d7c4:	in     al,0xfb
  41d7c6:	cmc    
  41d7c7:	xor    DWORD PTR [edi-0x10],esp
  41d7ca:	xlat   BYTE PTR ds:[ebx]
  41d7cb:	inc    esp
  41d7cc:	stos   DWORD PTR es:[edi],eax
  41d7cd:	jae    0x41d7ac
  41d7cf:	push   0xfffffff8
  41d7d1:	in     al,0x6b
  41d7d3:	sub    BYTE PTR [esi],0x2d
  41d7d6:	outs   dx,DWORD PTR ds:[esi]
  41d7d7:	mov    ebx,0x7c236c3c
  41d7dc:	and    esp,DWORD PTR [edi+eiz*1]
  41d7df:	jne    0x41d7fa
  41d7e1:	push   ebp
  41d7e2:	add    edx,eax
  41d7e4:	ds ja  0x41d824
  41d7e7:	or     eax,0xb3de1224
  41d7ec:	gs inc esp
  41d7ee:	xor    eax,0x54e349b4
  41d7f3:	jb     0x41d79e
  41d7f5:	mov    ebx,DWORD PTR [esi-0x46]
  41d7f8:	inc    ebp
  41d7f9:	push   cs
  41d7fa:	push   ecx
  41d7fb:	cdq    
  41d7fc:	addr16 enter 0x630e,0xb2
  41d801:	je     0x41d7e5
  41d803:	mov    es,eax
  41d805:	xor    DWORD PTR [ebx],0x4
  41d808:	jb     0x41d7fe
  41d80a:	ins    DWORD PTR es:[edi],dx
  41d80b:	arpl   WORD PTR [edi],bp
  41d80d:	std    
  41d80e:	mov    al,ch
  41d810:	hlt    
  41d811:	mov    edx,0xc1a9c535
  41d816:	stc    
  41d817:	sti    
  41d818:	dec    esi
  41d819:	sub    al,0xf1
  41d81b:	jo     0x41d888
  41d81d:	inc    eax
  41d81e:	aam    0x26
  41d820:	sub    esi,esi
  41d822:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41d824:	repz aad 0x65
  41d827:	push   ebx
  41d828:	and    al,BYTE PTR [ebp+0x25]
  41d82b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d82c:	pop    esi
  41d82d:	(bad)  
  41d82e:	jno    0x41d7bb
  41d830:	retf   
  41d831:	call   0xb76a:0x4caf4fe
  41d838:	mov    ecx,DWORD PTR [ebp+0x95715df]
  41d83e:	xchg   esi,eax
  41d83f:	(bad)  
  41d840:	icebp  
  41d841:	lods   al,BYTE PTR ds:[esi]
  41d842:	(bad)  
  41d843:	push   edi
  41d844:	mov    ch,0xac
  41d846:	cld    
  41d847:	mov    dh,0x42
  41d849:	jp     0x41d879
  41d84b:	out    0xf7,al
  41d84d:	xchg   edi,eax
  41d84e:	test   dl,ah
  41d850:	stc    
  41d851:	ja     0x41d8aa
  41d853:	inc    dx
  41d855:	mov    dh,cl
  41d857:	jbe    0x41d84c
  41d859:	out    dx,eax
  41d85a:	ret    0x2f32
  41d85d:	jl     0x41d803
  41d85f:	sbb    BYTE PTR [eax+0x83bf575],cl
  41d865:	inc    ebx
  41d866:	cmp    DWORD PTR [esi+edx*2],eax
  41d869:	retf   0x59c3
  41d86c:	or     DWORD PTR [ebx-0x6f3e6068],edi
  41d872:	sub    edi,DWORD PTR [ebx+esi*2-0x736cf345]
  41d879:	pop    edi
  41d87a:	xchg   esp,eax
  41d87b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d87c:	out    dx,eax
  41d87d:	or     eax,0x945ba634
  41d882:	mov    esp,0xfb122434
  41d887:	shr    BYTE PTR [edi],cl
  41d889:	pop    edi
  41d88a:	out    0x47,al
  41d88c:	inc    esi
  41d88d:	call   0xa75e:0xe532b4d6
  41d894:	or     BYTE PTR [edx],al
  41d896:	std    
  41d897:	popa   
  41d898:	fs push eax
  41d89a:	cmp    BYTE PTR [eax],al
  41d89c:	sbb    DWORD PTR [ebx+0x127b67f9],ebp
  41d8a2:	fcomp  QWORD PTR [ebx]
  41d8a4:	push   0x49
  41d8a6:	imul   ecx,DWORD PTR [esi+0x5d38e207],0x6964a9f5
  41d8b0:	adc    eax,0x200184b
  41d8b5:	and    ah,bl
  41d8b7:	fst    DWORD PTR [ebx+edi*4-0x38a00134]
  41d8be:	mov    dl,0xb7
  41d8c0:	push   0x27
  41d8c2:	out    0x4f,al
  41d8c4:	mov    dl,0x5e
  41d8c6:	dec    eax
  41d8c7:	jo     0x41d84a
  41d8c9:	adc    bl,bh
  41d8cb:	rcr    BYTE PTR [bp+di],cl
  41d8ce:	cmc    
  41d8cf:	xchg   esp,eax
  41d8d0:	cs push esp
  41d8d2:	xor    al,0x9
  41d8d4:	dec    ecx
  41d8d5:	rcl    BYTE PTR [ebx+0x55],1
  41d8d8:	push   eax
  41d8d9:	loopne 0x41d95a
  41d8db:	neg    BYTE PTR [esi-0x6eb430b0]
  41d8e1:	push   es
  41d8e2:	popa   
  41d8e3:	xchg   ecx,eax
  41d8e4:	lods   eax,DWORD PTR ds:[esi]
  41d8e5:	inc    edi
  41d8e6:	xchg   edx,eax
  41d8e7:	loop   0x41d95b
  41d8e9:	inc    ebx
  41d8ea:	aam    0x96
  41d8ec:	add    ch,BYTE PTR [eax]
  41d8ee:	fwait
  41d8ef:	cmp    DWORD PTR [ebx-0x75c6bc4d],ebx
  41d8f5:	jg     0x41d965
  41d8f7:	or     eax,0x6355c669
  41d8fc:	xor    al,0x17
  41d8fe:	inc    ecx
  41d8ff:	jmp    0x41d930
  41d901:	loope  0x41d8bb
  41d903:	lock push ebp
  41d905:	dec    ebx
  41d906:	pop    edi
  41d907:	mov    eax,0x16e7939c
  41d90c:	pop    ds
  41d90d:	jb     0x41d915
  41d90f:	not    DWORD PTR [esi+eiz*4+0x26eb4269]
  41d916:	xchg   DWORD PTR [eax+eax*4],eax
  41d919:	call   0x6a98:0xd97db85a
  41d920:	and    DWORD PTR [esi+eiz*2],edi
  41d923:	test   DWORD PTR [edx+0x71a75dff],0x9964d6e7
  41d92d:	call   0xe33b26fb
  41d932:	and    al,0xa7
  41d934:	outs   dx,DWORD PTR ds:[esi]
  41d935:	out    dx,eax
  41d936:	(bad)  
  41d937:	jmp    0xcd5d3b62
  41d93c:	xor    DWORD PTR [ebp+0x33ce43d],edi
  41d942:	xor    BYTE PTR [esi-0x5cd65c5c],dl
  41d948:	je     0x41d8e7
  41d94a:	jecxz  0x41d920
  41d94c:	xor    BYTE PTR [edx-0x12],al
  41d94f:	sub    eax,0x41b648b
  41d954:	imul   ecx,DWORD PTR [esi+0x1e],0x6
  41d958:	gs jns 0x41d9c4
  41d95b:	in     eax,dx
  41d95c:	adc    ch,BYTE PTR [eax+0x7b]
  41d95f:	out    0x8a,al
  41d961:	pop    ss
  41d962:	and    eax,0x7647740d
  41d967:	sahf   
  41d968:	inc    esi
  41d969:	in     eax,0x45
  41d96b:	cmp    DWORD PTR [edi],0xffffffb5
  41d96e:	dec    ecx
  41d96f:	loop   0x41d969
  41d971:	xchg   ecx,eax
  41d972:	nop
  41d973:	cmp    eax,0xd836ba95
  41d978:	sub    bh,dl
  41d97a:	add    eax,0x27bcde4a
  41d97f:	out    dx,al
  41d980:	mov    ebx,0x57a9f47b
  41d985:	int    0xc7
  41d987:	inc    esp
  41d988:	jl     0x41d9b3
  41d98a:	stc    
  41d98b:	(bad)  
  41d98c:	and    eax,0xefbe4ac
  41d991:	pushf  
  41d992:	dec    ebx
  41d994:	(bad)  
  41d997:	retf   0x8e53
  41d99a:	jns    0x41d934
  41d99c:	daa    
  41d99d:	and    DWORD PTR [esi+0x1dff4546],esp
  41d9a3:	add    BYTE PTR [edi+0x274eb6cd],al
  41d9a9:	lea    ecx,[edi]
  41d9ab:	dec    eax
  41d9ac:	cmp    dh,dh
  41d9ae:	and    dh,BYTE PTR [edx+0xbef585b]
  41d9b4:	inc    cx
  41d9b6:	xor    al,0x17
  41d9b8:	mov    BYTE PTR ds:0xc0a8e9bf,cl
  41d9be:	(bad)  
  41d9bf:	ja     0x41da35
  41d9c1:	int    0x88
  41d9c3:	mov    al,0x2a
  41d9c5:	loope  0x41d9d3
  41d9c7:	mov    eax,0x74e3300a
  41d9cc:	sub    BYTE PTR [edx+0x42f3ec28],dh
  41d9d2:	std    
  41d9d3:	xor    dh,0x94
  41d9d6:	shr    DWORD PTR [edi+0x3c73c38d],cl
  41d9dc:	mov    esi,0x5f89032f
  41d9e1:	mov    ebx,0x5bdcfa17
  41d9e6:	or     DWORD PTR ds:[eax+0x3d39ee1e],0xc926b0b5
  41d9f1:	pop    edi
  41d9f2:	cli    
  41d9f3:	adc    esp,DWORD PTR [esp+edi*1-0x22]
  41d9f7:	leave  
  41d9f8:	pop    eax
  41d9f9:	lahf   
  41d9fa:	jne    0x41d991
  41d9fc:	loopne 0x41d9f6
  41d9fe:	cld    
  41d9ff:	les    ecx,FWORD PTR [ebp-0x51]
  41da02:	loop   0x41da02
  41da04:	mul    BYTE PTR [esp+ebx*4]
  41da07:	lahf   
  41da08:	ins    DWORD PTR es:[edi],dx
  41da09:	aam    0x13
  41da0b:	aam    0x1b
  41da0d:	mov    bh,0xa1
  41da0f:	ins    BYTE PTR es:[edi],dx
  41da10:	rcl    al,cl
  41da12:	jmp    0xfef26fa2
  41da17:	(bad)  
  41da18:	push   DWORD PTR ds:0xcb79b576
  41da1e:	xor    edx,0x9c2b8ae8
  41da24:	mov    cl,0x3e
  41da26:	call   0x4223f1
  41da2b:	or     edi,eax
  41da2d:	or     ebx,edx
  41da2f:	mov    eax,DWORD PTR [ebp-0x15c]
  41da35:	mov    edx,DWORD PTR [ebp-0x158]
  41da3b:	jmp    0x41de22
  41da40:	outs   dx,BYTE PTR ds:[esi]
  41da41:	cdq    
  41da42:	bound  ebp,QWORD PTR fs:[esp+edi*4+0x63179970]
  41da4a:	xor    bl,ch
  41da4c:	sbb    DWORD PTR [esi],esp
  41da4e:	cmp    dl,BYTE PTR [edx-0x413fa6fd]
  41da54:	dec    edx
  41da55:	les    edi,FWORD PTR [esi-0x49a41742]
  41da5b:	fdivr  QWORD PTR [edx+0x61]
  41da5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da5f:	push   ebp
  41da60:	into   
  41da61:	cs loope 0x41da47
  41da64:	cld    
  41da65:	dec    BYTE PTR [ebx+0x48c63a62]
  41da6b:	aas    
  41da6c:	or     edx,ebx
  41da6e:	push   es
  41da6f:	mov    ebp,0xf6cb0f2f
  41da74:	fstp   QWORD PTR [edi]
  41da76:	sub    dh,BYTE PTR [esi+0xbc3885e]
  41da7c:	sbb    esi,DWORD PTR [esi-0xf]
  41da7f:	aas    
  41da80:	cld    
  41da81:	xchg   DWORD PTR [edx],edx
  41da83:	mov    ebp,0xec71420b
  41da88:	sbb    ecx,edx
  41da8a:	adc    ebx,esp
  41da8c:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41da8e:	lods   al,BYTE PTR ds:[esi]
  41da8f:	push   es
  41da90:	adc    ch,ah
  41da92:	mov    ebx,0x28dc9e7a
  41da97:	xor    BYTE PTR [ebp+0x4f0444a5],0xee
  41da9e:	popf   
  41da9f:	das    
  41daa0:	cdq    
  41daa1:	mov    al,ds:0xc1ccf50c
  41daa6:	call   0x3acf:0xd85f8740
  41daad:	fst    QWORD PTR [ebx+ecx*8]
  41dab0:	hlt    
  41dab1:	fsub   st(1),st
  41dab3:	lods   al,BYTE PTR ds:[esi]
  41dab4:	mov    al,0x22
  41dab6:	arpl   WORD PTR [ebx+0x75],si
  41dab9:	sub    eax,ebx
  41dabb:	int    0xfa
  41dabd:	scas   al,BYTE PTR es:[edi]
  41dabe:	fistp  DWORD PTR [eax]
  41dac0:	jno    0x41db24
  41dac2:	dec    esi
  41dac3:	sbb    eax,0x747ab948
  41dac8:	ret    0xec7b
  41dacb:	(bad)  
  41dacc:	mov    eax,0xbabc39af
  41dad1:	rol    eax,cl
  41dad3:	jecxz  0x41dad6
  41dad5:	retf   
  41dad6:	cmp    al,0xc5
  41dad8:	or     ah,ah
  41dada:	xchg   ecx,eax
  41dadb:	loop   0x41da5f
  41dadd:	mov    dx,0xae1
  41dae1:	sbb    ah,bh
  41dae3:	mov    eax,ds:0x9479cd37
  41dae8:	ja     0x41daa0
  41daea:	jmp    0x5f2e:0xef4f6179
  41daf1:	lock xchg edx,eax
  41daf3:	sbb    BYTE PTR [edi],bl
  41daf5:	std    
  41daf6:	jae    0x41dad4
  41daf8:	sbb    eax,0xc3c3759b
  41dafd:	hlt    
  41dafe:	jp     0x41dadd
  41db00:	push   0xaa29e3a6
  41db05:	(bad)  
  41db06:	ror    cl,1
  41db08:	sub    ecx,DWORD PTR [ebx]
  41db0a:	out    0xee,al
  41db0c:	inc    esp
  41db0d:	dec    DWORD PTR [esi]
  41db0f:	retf   
  41db10:	jg     0x41db67
  41db12:	xor    eax,eax
  41db14:	sub    DWORD PTR [ebx+0x4ad4ba11],0x25989edd
  41db1e:	pop    esp
  41db1f:	ds pop eax
  41db21:	dec    edi
  41db22:	sbb    al,0x9d
  41db24:	add    ebp,DWORD PTR [edx-0x2f5d9618]
  41db2a:	jns    0x41dada
  41db2c:	stos   DWORD PTR es:[edi],eax
  41db2d:	mov    ah,0x48
  41db2f:	stos   BYTE PTR es:[edi],al
  41db30:	call   0x43d0a379
  41db35:	test   si,ax
  41db38:	jb     0x41db78
  41db3a:	pop    es
  41db3b:	mov    ecx,0xc6ce86f6
  41db40:	fidiv  DWORD PTR [eax+0x39ef5dd]
  41db46:	out    0xb1,al
  41db48:	sbb    dl,BYTE PTR [edx-0x59]
  41db4b:	xchg   ebp,eax
  41db4c:	sub    BYTE PTR [eax+esi*4-0x4b],ch
  41db50:	xor    bl,BYTE PTR [edx+ebp*4+0x411a8544]
  41db57:	es jbe 0x41db31
  41db5a:	xor    eax,0x7a2b9317
  41db5f:	mov    esi,0xc247c24
  41db64:	xlat   BYTE PTR ds:[ebx]
  41db65:	add    dh,BYTE PTR [edx+0xb]
  41db68:	(bad)  
  41db69:	dec    esp
  41db6a:	pop    edi
  41db6b:	add    DWORD PTR [ecx+ebp*4+0x7],edx
  41db6f:	in     al,0xb1
  41db71:	add    bl,BYTE PTR [edi-0x18fb156a]
  41db77:	ss shl edi,0x3e
  41db7b:	jle    0x41db30
  41db7d:	ins    BYTE PTR es:[edi],dx
  41db7e:	adc    ebp,edi
  41db80:	fcomip st,st(6)
  41db82:	sub    BYTE PTR [esi-0x2e],dh
  41db85:	mov    DWORD PTR [esi-0x7a],edx
  41db88:	sbb    cl,BYTE PTR [ebp+0x6fce6e60]
  41db8e:	mov    dh,0x93
  41db90:	adc    eax,0x9b9021da
  41db95:	sbb    al,0x8f
  41db97:	mov    ebx,0x92568a0f
  41db9c:	pop    esi
  41db9d:	inc    ah
  41db9f:	and    al,0xd2
  41dba1:	repnz xor BYTE PTR [ecx-0x47],dl
  41dba5:	aaa    
  41dba6:	xchg   ebp,eax
  41dba7:	adc    eax,0xd714ffdc
  41dbac:	cmp    DWORD PTR [edx-0x12661efd],ecx
  41dbb2:	cmp    eax,0x211e8fd4
  41dbb7:	add    eax,0x4f73c374
  41dbbc:	test   ch,0xdd
  41dbbf:	push   edi
  41dbc0:	dec    esi
  41dbc1:	inc    eax
  41dbc2:	call   0xb155ed55
  41dbc7:	cmp    dl,bh
  41dbc9:	jmp    0x41dc03
  41dbcb:	xor    cl,ah
  41dbcd:	pop    edx
  41dbce:	(bad)  
  41dbcf:	in     eax,dx
  41dbd0:	or     ah,dh
  41dbd2:	outs   dx,BYTE PTR ds:[esi]
  41dbd3:	outs   dx,DWORD PTR ds:[esi]
  41dbd4:	imul   esp,DWORD PTR fs:[esi],0xe33c55c1
  41dbdb:	fld    DWORD PTR [ebx+ebx*2]
  41dbde:	xor    al,0x91
  41dbe0:	push   0xc811fd8d
  41dbe5:	adc    eax,0xba339e67
  41dbea:	loopne 0x41dbe1
  41dbec:	std    
  41dbed:	push   cs
  41dbee:	(bad)  
  41dbef:	xor    al,al
  41dbf1:	cmpxchg BYTE PTR [edi+0x76657a16],cl
  41dbf8:	pushf  
  41dbf9:	jl     0x41dc08
  41dbfb:	inc    ebp
  41dbfc:	shr    bl,1
  41dbfe:	fwait
  41dbff:	mov    ds:0x5a55aa84,eax
  41dc04:	sbb    al,bh
  41dc06:	mov    ch,dh
  41dc08:	(bad)  
  41dc09:	sbb    bl,BYTE PTR [eax+0x4063c1ba]
  41dc0f:	pop    edx
  41dc10:	std    
  41dc11:	out    0xe,al
  41dc13:	inc    ecx
  41dc15:	stos   DWORD PTR es:[edi],eax
  41dc16:	xchg   esi,eax
  41dc17:	(bad)  
  41dc18:	enter  0xf5a6,0xe6
  41dc1c:	arpl   WORD PTR [eax],si
  41dc1e:	hlt    
  41dc1f:	add    DWORD PTR [eax],edx
  41dc21:	ja     0x41dbc2
  41dc23:	in     al,dx
  41dc24:	mov    esi,0x9541bca4
  41dc29:	in     eax,0x5d
  41dc2b:	inc    esp
  41dc2c:	cmp    al,0x2b
  41dc2e:	std    
  41dc2f:	add    bl,BYTE PTR ds:0x4de183b9
  41dc35:	fbld   TBYTE PTR [esi-0x3e003b39]
  41dc3b:	push   esi
  41dc3c:	xchg   DWORD PTR [esi+0x42],ecx
  41dc3f:	punpcklbw mm2,mm6
  41dc42:	loop   0x41dc3a
  41dc44:	and    al,0x66
  41dc46:	and    BYTE PTR [edi-0x28],dh
  41dc49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc4a:	imul   ebp,DWORD PTR [ebp-0x266db5d8],0x3d2657e4
  41dc54:	test   al,0xd1
  41dc56:	ror    BYTE PTR [ecx+0x25cc46fa],1
  41dc5c:	dec    edx
  41dc5d:	xchg   ebp,eax
  41dc5e:	(bad)  
  41dc5f:	in     al,0xe
  41dc61:	pop    es
  41dc62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc63:	push   ds
  41dc64:	mov    esp,0x9af73d99
  41dc69:	sar    BYTE PTR es:[ebx],0xd6
  41dc6d:	mov    dh,0x90
  41dc6f:	fsubr  st(7),st
  41dc71:	adc    eax,0x70316763
  41dc76:	add    eax,0x150bac1d
  41dc7b:	es mov dl,0xef
  41dc7e:	pop    ss
  41dc7f:	cs pop edx
  41dc81:	pop    esi
  41dc82:	jb     0x41dc4b
  41dc84:	fidiv  DWORD PTR [ebp-0x4040feb6]
  41dc8a:	iret   
  41dc8b:	fld    st(5)
  41dc8d:	mov    esp,0xee3f3c09
  41dc92:	(bad)  
  41dc94:	into   
  41dc95:	daa    
  41dc96:	and    dh,BYTE PTR [edx+edx*8+0x5]
  41dc9a:	std    
  41dc9b:	mov    ds,WORD PTR [esi-0x7e]
  41dc9e:	retf   
  41dc9f:	jl     0x41dc51
  41dca1:	mov    al,0xbd
  41dca3:	mov    ebp,0x44ed7682
  41dca8:	jmp    DWORD PTR [edx+0x3f]
  41dcab:	jmp    0x3c95:0xe4b2c59c
  41dcb2:	xor    al,0xf6
  41dcb4:	jbe    0x41dc54
  41dcb6:	pushf  
  41dcb7:	pop    ebp
  41dcb8:	mov    dl,0x83
  41dcba:	popa   
  41dcbb:	sbb    esi,DWORD PTR [ebx]
  41dcbd:	ror    DWORD PTR [esi-0x2245015],cl
  41dcc3:	or     eax,0x7d400d6
  41dcc8:	xor    ah,BYTE PTR [ecx]
  41dcca:	out    dx,al
  41dccb:	ins    BYTE PTR es:[edi],dx
  41dccc:	fst    QWORD PTR [ecx]
  41dcce:	int3   
  41dccf:	das    
  41dcd0:	xor    al,0x60
  41dcd2:	lods   al,BYTE PTR ds:[esi]
  41dcd3:	repnz add eax,0x1ba0bb05
  41dcd9:	add    BYTE PTR [ecx],ah
  41dcdb:	and    DWORD PTR [eax+0x4ff1afbe],edx
  41dce1:	xchg   edi,eax
  41dce2:	in     eax,0xc1
  41dce4:	push   ss
  41dce5:	pop    ss
  41dce6:	aas    
  41dce7:	inc    edi
  41dce8:	pop    ss
  41dce9:	mov    al,ds:0xc11b0202
  41dcee:	xchg   ebp,eax
  41dcef:	push   0xfffffff1
  41dcf1:	addr16 aas 
  41dcf3:	cs and al,0xf9
  41dcf6:	idiv   BYTE PTR [edx]
  41dcf8:	in     eax,dx
  41dcf9:	inc    esp
  41dcfa:	in     al,dx
  41dcfb:	mov    al,ds:0xc73d5032
  41dd00:	ficomp WORD PTR cs:[edi+0x61e6e3ac]
  41dd07:	inc    esp
  41dd08:	and    esp,DWORD PTR [esi]
  41dd0a:	lock shl ecx,1
  41dd0d:	xor    bl,BYTE PTR [esi]
  41dd0f:	pop    edi
  41dd10:	pusha  
  41dd11:	push   ss
  41dd12:	idiv   ch
  41dd14:	gs push esp
  41dd16:	mov    WORD PTR [eax-0x32],gs
  41dd19:	cmp    eax,0xc98b20b8
  41dd1e:	(bad)  
  41dd1f:	sbb    ecx,DWORD PTR [esi-0x27238f1d]
  41dd25:	sub    dh,BYTE PTR [ebp+0x0]
  41dd28:	mov    esi,0xaf485e25
  41dd2d:	dec    edx
  41dd2e:	xor    eax,DWORD PTR [eax]
  41dd30:	inc    esi
  41dd31:	hlt    
  41dd32:	jmp    0x4a87:0x9d32503f
  41dd39:	inc    ebx
  41dd3a:	mov    bl,0x22
  41dd3c:	fst    DWORD PTR [edx+ecx*4]
  41dd3f:	test   al,0x7e
  41dd41:	and    esi,DWORD PTR [ebx+0x60f2b3fe]
  41dd47:	(bad)  
  41dd48:	retf   0x307a
  41dd4b:	mov    cl,0x2d
  41dd4d:	mov    bl,al
  41dd4f:	in     al,0x26
  41dd51:	or     eax,0x75e78e85
  41dd56:	in     eax,dx
  41dd57:	xchg   BYTE PTR [ecx],dh
  41dd59:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41dd5b:	inc    eax
  41dd5c:	sub    edi,ecx
  41dd5e:	mov    bh,0x83
  41dd60:	mov    eax,0xc2f1eaa9
  41dd66:	sbb    DWORD PTR [eax+ebx*8+0x7c],esp
  41dd6a:	and    al,0x9b
  41dd6c:	hlt    
  41dd6d:	cwde   
  41dd6e:	out    0xed,eax
  41dd70:	mov    cl,0x67
  41dd72:	xchg   BYTE PTR [edi],ah
  41dd74:	dec    edi
  41dd75:	sub    dh,BYTE PTR [eax-0x22]
  41dd78:	push   ecx
  41dd79:	mov    bl,0x28
  41dd7b:	rol    BYTE PTR [ebp+0x647c897c],cl
  41dd81:	scas   eax,DWORD PTR es:[edi]
  41dd82:	jns    0x41dd57
  41dd84:	mov    ebx,0xb3a1f659
  41dd89:	int3   
  41dd8a:	lods   al,BYTE PTR ds:[esi]
  41dd8b:	or     DWORD PTR [esi-0xe],ebx
  41dd8e:	add    dl,BYTE PTR [ebx+0x4fe97210]
  41dd94:	dec    ebp
  41dd95:	shr    BYTE PTR [esi-0x16],0x93
  41dd99:	repnz ror BYTE PTR [edx-0x62],1
  41dd9d:	ret    0x45b7
  41dda0:	les    ecx,FWORD PTR [edx]
  41dda2:	pop    ecx
  41dda3:	rcr    BYTE PTR [edx-0x259be7c6],0x5b
  41ddaa:	push   esi
  41ddab:	sti    
  41ddac:	scas   eax,DWORD PTR es:[edi]
  41ddad:	add    cl,BYTE PTR [ebp-0x79]
  41ddb0:	push   ebx
  41ddb1:	out    0xbc,eax
  41ddb3:	adc    BYTE PTR [ebx-0x56],ch
  41ddb6:	fadd   DWORD PTR ds:[edx+0x2aa11aa0]
  41ddbd:	xchg   edx,eax
  41ddbe:	aaa    
  41ddbf:	dec    ecx
  41ddc0:	push   0x1fa65287
  41ddc5:	fcmovbe st,st(0)
  41ddc7:	ss sub eax,0xf0c8d052
  41ddcd:	sbb    ebx,DWORD PTR [edx]
  41ddcf:	add    DWORD PTR [ecx-0x29f9258a],eax
  41ddd5:	dec    ecx
  41ddd6:	lea    edx,[edi]
  41ddd8:	dec    eax
  41ddd9:	add    cl,bh
  41dddb:	das    
  41dddc:	sahf   
  41dddd:	sbb    eax,0xd0c7c1da
  41dde2:	mov    ebx,0x58b73f1f
  41dde7:	sbb    esp,DWORD PTR [edi-0x12aac8a9]
  41dded:	jns    0x41ddf8
  41ddef:	setp   dl
  41ddf2:	fnstenv [edi+edi*8]
  41ddf5:	ficom  WORD PTR [edi]
  41ddf7:	repnz pop edx
  41ddf9:	fld    QWORD PTR [esi+0x7fc2f38a]
  41ddff:	mov    ebp,fs
  41de01:	inc    edx
  41de02:	in     eax,dx
  41de03:	retf   0x188a
  41de06:	and    eax,0x9a2aea40
  41de0b:	std    
  41de0c:	es in  al,0xd
  41de0f:	mov    esi,0xcca79f64
  41de14:	out    dx,eax
  41de15:	ror    BYTE PTR [esi+esi*4-0x4c],cl
  41de19:	pushf  
  41de1a:	pop    esi
  41de1b:	shl    BYTE PTR [ebx-0x58],1
  41de1e:	imul   ebp,DWORD PTR [edi],0xffffffe2
  41de21:	push   ebx
  41de22:	xor    eax,0xcb79b576
  41de27:	xor    edx,0x9c2b8ae8
  41de2d:	mov    cl,0x2
  41de2f:	call   0x408bb8
  41de34:	mov    ecx,edx
  41de36:	mov    edx,DWORD PTR [ebp-0x15c]
  41de3c:	mov    DWORD PTR [ebp-0x218],esi
  41de42:	mov    esi,DWORD PTR [ebp-0x158]
  41de48:	xor    edx,0xcb79b576
  41de4e:	xor    esi,0x9c2b8ae8
  41de54:	mov    DWORD PTR [ebp-0x21c],eax
  41de5a:	mov    eax,edx
  41de5c:	mov    edx,esi
  41de5e:	mov    DWORD PTR [ebp-0x220],ecx
  41de64:	mov    cl,0x3e
  41de66:	call   0x4223f1
  41de6b:	mov    esi,DWORD PTR [ebp-0x21c]
  41de71:	or     esi,eax
  41de73:	mov    eax,DWORD PTR [ebp-0x220]
  41de79:	or     eax,edx
  41de7b:	push   eax
  41de7c:	push   esi
  41de7d:	push   ebx
  41de7e:	push   edi
  41de7f:	call   0x41594e
  41de84:	mov    esi,DWORD PTR [ebp-0x218]
  41de8a:	cmp    esi,eax
  41de8c:	jne    0x41df42
  41de92:	mov    eax,DWORD PTR [ebp-0x154]
  41de98:	mov    edx,DWORD PTR [ebp-0x150]
  41de9e:	xor    eax,0xcb79b576
  41dea3:	xor    edx,0x9c2b8ae8
  41dea9:	mov    cl,0x2
  41deab:	call   0x408bb8
  41deb0:	mov    esi,eax
  41deb2:	mov    edi,edx
  41deb4:	mov    eax,DWORD PTR [ebp-0x154]
  41deba:	mov    edx,DWORD PTR [ebp-0x150]
  41dec0:	xor    eax,0xcb79b576
  41dec5:	xor    edx,0x9c2b8ae8
  41decb:	mov    cl,0x3e
  41decd:	call   0x4223f1
  41ded2:	or     esi,eax
  41ded4:	or     edi,edx
  41ded6:	mov    eax,DWORD PTR [ebp-0x15c]
  41dedc:	mov    edx,DWORD PTR [ebp-0x158]
  41dee2:	xor    eax,0xcb79b576
  41dee7:	xor    edx,0x9c2b8ae8
  41deed:	mov    cl,0x2
  41deef:	call   0x408bb8
  41def4:	mov    ebx,eax
  41def6:	mov    eax,edx
  41def8:	mov    ecx,DWORD PTR [ebp-0x15c]
  41defe:	mov    edx,DWORD PTR [ebp-0x158]
  41df04:	xor    ecx,0xcb79b576
  41df0a:	xor    edx,0x9c2b8ae8
  41df10:	mov    DWORD PTR [ebp-0x224],eax
  41df16:	mov    eax,ecx
  41df18:	mov    cl,0x3e
  41df1a:	call   0x4223f1
  41df1f:	or     ebx,eax
  41df21:	mov    eax,DWORD PTR [ebp-0x224]
  41df27:	or     eax,edx
  41df29:	push   eax
  41df2a:	push   ebx
  41df2b:	push   edi
  41df2c:	push   esi
  41df2d:	call   0x41594e
  41df32:	mov    DWORD PTR [ebp-0x178],eax
  41df38:	jmp    0x41f19e
  41df3d:	jmp    0x41f154
  41df42:	lea    eax,[ebp-0x168]
  41df48:	mov    DWORD PTR [ebp-0x164],eax
  41df4e:	mov    eax,DWORD PTR [ebp-0x164]
  41df54:	mov    DWORD PTR [eax],0xa5069bae
  41df5a:	mov    eax,DWORD PTR [ebp-0x168]
  41df60:	xor    eax,0xa5069bae
  41df65:	shr    eax,0x2
  41df68:	mov    ecx,DWORD PTR [ebp-0x168]
  41df6e:	xor    ecx,0xa5069bae
  41df74:	shl    ecx,0x1e
  41df77:	or     eax,ecx
  41df79:	mov    ecx,DWORD PTR [ebp-0x174]
  41df7f:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  41df83:	mov    DWORD PTR [ebp-0x160],eax
  41df89:	mov    esi,DWORD PTR [ebp-0x160]
  41df8f:	mov    eax,DWORD PTR [ebp-0x154]
  41df95:	mov    edx,DWORD PTR [ebp-0x150]
  41df9b:	xor    eax,0xcb79b576
  41dfa0:	xor    edx,0x9c2b8ae8
  41dfa6:	mov    cl,0x2
  41dfa8:	call   0x408bb8
  41dfad:	mov    edi,eax
  41dfaf:	mov    ebx,edx
  41dfb1:	mov    eax,DWORD PTR [ebp-0x154]
  41dfb7:	jmp    0x41e39e
  41dfbc:	mov    bl,0xa1
  41dfbe:	mov    eax,ds:0xbba5b3a5
  41dfc3:	mov    ebx,0xd1567b79
  41dfc8:	les    ecx,FWORD PTR [esi+eax*4-0x3fa06f5c]
  41dfcf:	mov    esi,0xbebec44a
  41dfd4:	add    ah,al
  41dfd6:	out    0x91,eax
  41dfd8:	add    eax,0x22b597b4
  41dfdd:	loope  0x41dfb2
  41dfdf:	lods   al,BYTE PTR ds:[esi]
  41dfe0:	or     eax,0xb2db229d
  41dfe5:	pop    ecx
  41dfe6:	cmc    
  41dfe7:	int3   
  41dfe8:	mov    eax,eax
  41dfea:	out    dx,eax
  41dfeb:	push   eax
  41dfec:	jb     0x41e02d
  41dfee:	mov    ebx,0x50bb7f23
  41dff3:	int    0x7f
  41dff5:	cmp    dl,ah
  41dff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dff8:	pop    es
  41dff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dffa:	retf   0x69cd
  41dffd:	xchg   DWORD PTR [ecx+0x16],eax
  41e000:	cmc    
  41e001:	pop    ecx
  41e002:	fisttp WORD PTR ds:0xecdc027a
  41e008:	pop    es
  41e009:	inc    esp
  41e00a:	jb     0x41e070
  41e00c:	jo     0x41e035
  41e00e:	iret   
  41e00f:	outs   dx,DWORD PTR ds:[esi]
  41e010:	and    eax,0x912be0b2
  41e015:	sbb    ebx,DWORD PTR [ecx+0x4e]
  41e018:	inc    esp
  41e019:	daa    
  41e01a:	inc    esp
  41e01b:	iret   
  41e01c:	mov    edi,esi
  41e01e:	jmp    0x41e04a
  41e020:	cmp    eax,DWORD PTR [edx]
  41e022:	inc    ebx
  41e023:	mov    esi,0xa5a3ae3f
  41e028:	cmc    
  41e029:	ja     0x41dfad
  41e02b:	je     0x41e0aa
  41e02d:	jmp    0x41e018
  41e02f:	dec    esi
  41e030:	test   dh,0x7e
  41e033:	or     DWORD PTR [ebp+0x30],ebp
  41e036:	mov    al,0x28
  41e038:	or     BYTE PTR [esi],cl
  41e03a:	lock xchg bh,bh
  41e03d:	(bad)  
  41e03e:	lods   al,BYTE PTR ds:[esi]
  41e03f:	fs ret 0x26f8
  41e043:	sar    BYTE PTR [eax+eiz*8-0x1d],0xae
  41e048:	mov    ebx,ebx
  41e04a:	ror    DWORD PTR [ebp+edx*8-0x53],cl
  41e04e:	pop    ss
  41e04f:	repnz addr16 aaa 
  41e052:	sub    DWORD PTR [eax+0x4145c15d],0x39ad41ba
  41e05c:	mov    dl,0xbf
  41e05e:	adc    ch,bh
  41e060:	xchg   BYTE PTR [ebp-0x39e14c4],al
  41e066:	data16 ja 0x41e093
  41e069:	fwait
  41e06a:	imul   ebx,DWORD PTR [edx],0x21
  41e06d:	add    bh,al
  41e06f:	adc    DWORD PTR [edi],edi
  41e071:	mov    ch,0x5
  41e073:	cld    
  41e074:	aad    0xc
  41e076:	jae    0x41e079
  41e078:	retf   0x662b
  41e07b:	loop   0x41e074
  41e07d:	dec    ebp
  41e07e:	mov    bl,0x42
  41e080:	mov    dl,0xec
  41e082:	mov    eax,0x5164c3a1
  41e087:	fwait
  41e088:	test   DWORD PTR [edi],0xc0e0c156
  41e08e:	xchg   edx,eax
  41e08f:	cli    
  41e090:	popf   
  41e091:	daa    
  41e092:	push   eax
  41e093:	test   BYTE PTR [ebx-0x38f92430],bl
  41e099:	xchg   dh,bh
  41e09b:	inc    esi
  41e09c:	xor    esp,DWORD PTR [ebp+0x77]
  41e09f:	xchg   BYTE PTR [eax],ah
  41e0a1:	mov    WORD PTR [ebx+0x42f5fa17],cs
  41e0a7:	mov    ?,WORD PTR [ecx+0x5f]
  41e0aa:	push   edi
  41e0ab:	jns    0x41e0d1
  41e0ad:	pop    ecx
  41e0ae:	sub    DWORD PTR [ebx+edi*2-0x44],ebp
  41e0b2:	popf   
  41e0b3:	jle    0x41e04e
  41e0b5:	leave  
  41e0b6:	pop    esp
  41e0b7:	xchg   eax,esp
  41e0b9:	out    0x95,eax
  41e0bb:	mov    dl,0x60
  41e0bd:	inc    eax
  41e0be:	jg     0x41e0b9
  41e0c0:	push   esp
  41e0c1:	mov    BYTE PTR [esi-0x434e5d3d],dh
  41e0c7:	sub    al,BYTE PTR [edi+0x58e4aa91]
  41e0cd:	pop    esi
  41e0ce:	xor    esp,edx
  41e0d0:	add    BYTE PTR [ebp-0x4d],al
  41e0d3:	xor    DWORD PTR [eax+edi*8+0x24],ebx
  41e0d7:	or     BYTE PTR [eax+0x56],bl
  41e0da:	xor    BYTE PTR [esp-0xca626b8],bh
  41e0e1:	icebp  
  41e0e2:	dec    esi
  41e0e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0e4:	call   0x616f:0x2eac101d
  41e0eb:	mov    dh,BYTE PTR [eax+0x26]
  41e0ee:	cmp    eax,0xe34aa75e
  41e0f3:	test   DWORD PTR [edi-0x3e],0x97f3db3e
  41e0fa:	jp     0x41e0f2
  41e0fc:	lea    edi,[edi+0x126aa4f2]
  41e102:	mov    al,ds:0x3afee0d
  41e107:	cwde   
  41e108:	and    edi,DWORD PTR [edi+eiz*1]
  41e10b:	mov    ebx,0xfe973705
  41e110:	sub    edx,DWORD PTR [ecx+ebx*1-0x80]
  41e114:	adc    DWORD PTR [edi-0x3e583e06],ecx
  41e11a:	int3   
  41e11b:	(bad)  
  41e11d:	xchg   cl,ah
  41e11f:	jg     0x41e121
  41e121:	test   ebp,edi
  41e123:	and    BYTE PTR [esi],dh
  41e125:	dec    sp
  41e127:	dec    esi
  41e128:	and    al,ch
  41e12a:	jae    0x41e123
  41e12c:	mov    eax,ds:0x321ceb7c
  41e131:	or     ch,BYTE PTR [esi+0x59]
  41e134:	pop    eax
  41e135:	pusha  
  41e136:	mov    eax,ds:0x161e92c4
  41e13b:	aas    
  41e13c:	sub    BYTE PTR [eax+ecx*8+0x66d8defc],ch
  41e143:	dec    edi
  41e144:	daa    
  41e145:	js     0x41e17d
  41e147:	das    
  41e148:	xor    edx,DWORD PTR [esi+0x5d280f6f]
  41e14e:	adc    eax,0x1b56b79f
  41e153:	pop    eax
  41e154:	inc    ebp
  41e155:	mov    dh,0x13
  41e157:	rol    DWORD PTR [ecx-0x17],cl
  41e15a:	jle    0x41e1b6
  41e15c:	sbb    esi,DWORD PTR [eax-0x3f]
  41e15f:	or     eax,0xdddca2db
  41e164:	mov    dl,0xff
  41e166:	scas   al,BYTE PTR es:[edi]
  41e167:	add    eax,0x237c5163
  41e16c:	adc    DWORD PTR [eax],ebp
  41e16e:	rcr    DWORD PTR ds:0x9355a3de,0xa
  41e175:	mov    al,0xab
  41e177:	bound  edx,QWORD PTR [eax]
  41e179:	sbb    al,0xb0
  41e17b:	sub    al,0x7d
  41e17d:	mov    ebp,0xccb59190
  41e182:	push   es
  41e183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e184:	shl    dl,cl
  41e186:	jle    0x41e12e
  41e188:	cs or  ch,ah
  41e18b:	lea    eax,[edi+0x34b8b243]
  41e191:	jne    0x41e18f
  41e193:	pop    ds
  41e194:	mov    bh,0x87
  41e196:	outs   dx,DWORD PTR ds:[esi]
  41e197:	pop    edi
  41e198:	retf   
  41e199:	xor    BYTE PTR [ebx-0x27],dl
  41e19c:	std    
  41e19d:	retf   0x24c6
  41e1a0:	add    esp,DWORD PTR [edi+ebp*8+0x3f25cace]
  41e1a7:	fwait
  41e1a8:	cmp    DWORD PTR [eax+0x4b],eax
  41e1ab:	add    bl,BYTE PTR [ecx+0x254656d8]
  41e1b1:	xchg   ebx,eax
  41e1b2:	test   dh,bh
  41e1b4:	test   cl,dh
  41e1b6:	les    edi,FWORD PTR [esi-0x6f]
  41e1b9:	mov    ebp,0xeeabfd3f
  41e1be:	(bad)  
  41e1bf:	jp     0x41e174
  41e1c1:	and    ch,bl
  41e1c3:	xchg   ecx,eax
  41e1c4:	ja     0x41e1f2
  41e1c6:	aad    0xd
  41e1c8:	bswap  ebp
  41e1ca:	(bad)  
  41e1cb:	repz loope 0x41e22e
  41e1ce:	adc    DWORD PTR [edi-0x67],ecx
  41e1d1:	mov    cl,0xb9
  41e1d3:	out    dx,al
  41e1d4:	retf   
  41e1d5:	repz inc edx
  41e1d7:	iret   
  41e1d8:	loop   0x41e17f
  41e1da:	adc    al,0x50
  41e1dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1dd:	push   ecx
  41e1de:	xor    eax,0x76e5a619
  41e1e3:	in     al,0x3b
  41e1e5:	pop    eax
  41e1e6:	dec    edx
  41e1e7:	stc    
  41e1e8:	cwde   
  41e1e9:	fstp   DWORD PTR [eax]
  41e1eb:	inc    edi
  41e1ec:	jb     0x41e20a
  41e1ee:	jnp    0x41e202
  41e1f0:	retf   0x74ec
  41e1f3:	dec    ebx
  41e1f4:	push   eax
  41e1f5:	jle    0x41e1bb
  41e1f7:	mov    WORD PTR [edx-0x4f],?
  41e1fa:	mov    WORD PTR [ebp-0x6a7eac47],?
  41e200:	cmp    eax,0xe2c47456
  41e205:	and    al,0x5
  41e207:	cmp    bh,ch
  41e209:	sub    cl,ah
  41e20b:	aad    0x20
  41e20d:	cmp    al,0xb4
  41e20f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e210:	inc    ecx
  41e211:	add    dh,BYTE PTR [edx+0x3b]
  41e214:	test   BYTE PTR [edx],dh
  41e216:	in     al,0xbb
  41e218:	inc    esi
  41e219:	mov    BYTE PTR [eax+0x70f91d22],al
  41e21f:	fmulp  st(6),st
  41e221:	jo     0x41e251
  41e223:	inc    esp
  41e224:	out    0xfe,eax
  41e226:	in     eax,0x86
  41e228:	(bad)  
  41e229:	jle    0x41e2aa
  41e22b:	mov    edi,0x33555c6
  41e230:	ficom  DWORD PTR [edx-0x5c]
  41e233:	dec    ebp
  41e234:	jb     0x41e289
  41e236:	ret    
  41e237:	inc    esi
  41e238:	mul    BYTE PTR [edx+edx*8+0x59]
  41e23c:	pop    esi
  41e23d:	fs inc edx
  41e23f:	push   eax
  41e240:	dec    eax
  41e241:	xlat   BYTE PTR ds:[ebx]
  41e242:	pop    edx
  41e243:	sub    edi,DWORD PTR [ebx+0x254eb2b2]
  41e249:	pushw  0xff83
  41e24c:	ficomp DWORD PTR [esi+eax*8+0x6d73f114]
  41e253:	jb     0x41e2b4
  41e255:	inc    ecx
  41e256:	jns    0x41e1fa
  41e258:	and    al,0x4a
  41e25a:	and    DWORD PTR [edi],esi
  41e25c:	adc    DWORD PTR [esi+esi*2+0xe],esi
  41e260:	cmp    eax,DWORD PTR [eax]
  41e262:	and    BYTE PTR [edi+0x37628abe],dh
  41e268:	in     eax,0x67
  41e26a:	mov    dl,0xbd
  41e26c:	(bad)  
  41e26d:	pop    ebx
  41e26e:	call   DWORD PTR ds:0x538b1e63
  41e274:	jg     0x41e249
  41e276:	sub    DWORD PTR [eax+0x33],edx
  41e279:	sbb    BYTE PTR [ebx],dl
  41e27b:	dec    ecx
  41e27c:	jp     0x41e24d
  41e27e:	jg     0x41e202
  41e280:	imul   ch
  41e282:	clc    
  41e283:	jae    0x41e288
  41e285:	cmp    eax,0x3f82900c
  41e28a:	and    bl,bl
  41e28c:	and    ah,dl
  41e28e:	and    BYTE PTR [ebx+eax*2+0x73],bl
  41e292:	jae    0x41e2ca
  41e294:	mov    ds:0x9d162767,eax
  41e299:	sti    
  41e29a:	loop   0x41e2d5
  41e29c:	xor    DWORD PTR ds:0xa17a21e6,esp
  41e2a2:	add    cl,bl
  41e2a4:	rcr    DWORD PTR [edi],cl
  41e2a6:	sbb    al,0xc7
  41e2a8:	xchg   esp,eax
  41e2a9:	outs   dx,DWORD PTR ds:[esi]
  41e2aa:	aam    0xdd
  41e2ac:	stos   BYTE PTR es:[edi],al
  41e2ad:	enter  0xc32e,0xae
  41e2b1:	dec    edi
  41e2b2:	cmp    BYTE PTR [edi],dh
  41e2b4:	leave  
  41e2b5:	pop    esp
  41e2b6:	fwait
  41e2b7:	out    dx,eax
  41e2b8:	jmp    0x13dc:0x311d8257
  41e2bf:	ret    0x4e26
  41e2c2:	inc    edx
  41e2c3:	dec    ebx
  41e2c4:	test   DWORD PTR [esi+0x68],esi
  41e2c7:	sahf   
  41e2c8:	cmp    esp,0x1d
  41e2cb:	or     dh,BYTE PTR [edi]
  41e2cd:	rcr    DWORD PTR [esi+0x70],cl
  41e2d0:	add    bl,cl
  41e2d2:	std    
  41e2d3:	add    dh,BYTE PTR [edi]
  41e2d5:	in     al,0x87
  41e2d7:	xchg   edx,eax
  41e2d8:	mov    ch,0x6f
  41e2da:	test   eax,0xfd56a571
  41e2df:	pop    edx
  41e2e0:	leave  
  41e2e1:	cmc    
  41e2e2:	pop    ss
  41e2e3:	mov    al,ds:0x1a25d7e
  41e2e8:	aaa    
  41e2e9:	lock jbe 0x41e2f5
  41e2ec:	pusha  
  41e2ed:	mov    ebp,0x13bc03f1
  41e2f2:	lds    ebp,FWORD PTR [eax-0x74]
  41e2f5:	and    eax,eax
  41e2f7:	hlt    
  41e2f8:	call   0x1eeb742a
  41e2fd:	lea    ecx,[eax+eiz*4]
  41e300:	xlat   BYTE PTR ds:[ebx]
  41e301:	jae    0x41e310
  41e303:	and    bh,BYTE PTR [esi+0x27]
  41e306:	fldenv [esi]
  41e308:	xchg   esi,esp
  41e30a:	or     BYTE PTR [eax-0x15],dl
  41e30d:	or     al,0xa5
  41e30f:	jb     0x41e2b0
  41e311:	inc    edx
  41e312:	int    0xf0
  41e314:	test   DWORD PTR [ebx],eax
  41e316:	and    BYTE PTR [esi-0x529715f7],dl
  41e31c:	or     eax,DWORD PTR [eax+esi*8]
  41e31f:	js     0x41e30f
  41e321:	scas   eax,DWORD PTR es:[edi]
  41e322:	sub    eax,0xcf5d75fc
  41e327:	jecxz  0x41e2e8
  41e329:	(bad)  
  41e32a:	mov    ds,eax
  41e32c:	aaa    
  41e32d:	mov    bl,0xad
  41e32f:	call   0xa3f8:0x4d4ae5ec
  41e336:	fucomi st,st(3)
  41e338:	and    al,0xf4
  41e33a:	sub    eax,0x6423ef52
  41e33f:	sti    
  41e340:	cmp    ebp,DWORD PTR [eax]
  41e342:	enter  0x3bb4,0x94
  41e346:	popa   
  41e347:	push   ecx
  41e348:	mov    WORD PTR [ebx-0x5eb6d2d7],ss
  41e34e:	adc    al,0x1c
  41e350:	mov    WORD PTR [eax-0x628bef42],gs
  41e356:	push   ebx
  41e357:	stc    
  41e358:	and    BYTE PTR [edi],dl
  41e35a:	pop    ss
  41e35b:	arpl   WORD PTR [ebx+0x202d2de],sp
  41e361:	mov    ds:0x40893bb5,eax
  41e366:	dec    ebp
  41e367:	and    ecx,DWORD PTR [ecx+0x7ab22406]
  41e36d:	sub    eax,0x35b7b61c
  41e372:	dec    ecx
  41e373:	mov    esp,0xc5ee8388
  41e378:	xchg   esi,eax
  41e379:	and    ebp,0x1a9fd418
  41e37f:	mov    bl,0x9e
  41e381:	mov    al,0xea
  41e383:	les    eax,FWORD PTR [eax]
  41e385:	mov    dh,0x7f
  41e387:	mov    esi,0x64b92f15
  41e38c:	jmp    0x2936:0x78e2a6e6
  41e393:	stc    
  41e394:	and    DWORD PTR ds:0xc00a3686,0x2f
  41e39b:	mov    es,WORD PTR [esi]
  41e39d:	mov    edx,DWORD PTR [di-0x150]
  41e3a2:	(bad)  
  41e3a3:	push   DWORD PTR ds:0xcb79b576
  41e3a9:	xor    edx,0x9c2b8ae8
  41e3af:	mov    cl,0x3e
  41e3b1:	call   0x4223f1
  41e3b6:	or     edi,eax
  41e3b8:	or     ebx,edx
  41e3ba:	mov    eax,DWORD PTR [ebp-0x15c]
  41e3c0:	mov    edx,DWORD PTR [ebp-0x158]
  41e3c6:	xor    eax,0xcb79b576
  41e3cb:	xor    edx,0x9c2b8ae8
  41e3d1:	mov    cl,0x2
  41e3d3:	call   0x408bb8
  41e3d8:	mov    ecx,edx
  41e3da:	mov    edx,DWORD PTR [ebp-0x15c]
  41e3e0:	mov    DWORD PTR [ebp-0x228],esi
  41e3e6:	mov    esi,DWORD PTR [ebp-0x158]
  41e3ec:	xor    edx,0xcb79b576
  41e3f2:	xor    esi,0x9c2b8ae8
  41e3f8:	mov    DWORD PTR [ebp-0x22c],eax
  41e3fe:	mov    eax,edx
  41e400:	mov    edx,esi
  41e402:	mov    DWORD PTR [ebp-0x230],ecx
  41e408:	mov    cl,0x3e
  41e40a:	call   0x4223f1
  41e40f:	mov    esi,DWORD PTR [ebp-0x22c]
  41e415:	or     esi,eax
  41e417:	mov    eax,DWORD PTR [ebp-0x230]
  41e41d:	or     eax,edx
  41e41f:	push   eax
  41e420:	push   esi
  41e421:	jmp    0x41e808
  41e426:	rcl    BYTE PTR [ebp+0x47],cl
  41e429:	cmp    ecx,DWORD PTR [ebx+0x3b]
  41e42c:	mov    cl,0xb7
  41e42e:	scas   eax,DWORD PTR es:[edi]
  41e42f:	xor    ebx,DWORD PTR [ecx+edx*8]
  41e432:	sub    esi,esp
  41e434:	add    bl,ch
  41e436:	sbb    al,0x67
  41e438:	sar    BYTE PTR [esi-0x41413bb6],0xa5
  41e43f:	pop    esp
  41e440:	(bad)  [edi+eiz*4+0x27cd69d1]
  41e447:	jl     0x41e47b
  41e449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e44a:	dec    ebx
  41e44b:	mov    ah,0x6a
  41e44d:	and    al,0x8c
  41e44f:	(bad)  
  41e450:	jmp    0x684f17f
  41e455:	retf   
  41e456:	jns    0x41e4d0
  41e458:	inc    ebp
  41e459:	stos   BYTE PTR es:[edi],al
  41e45a:	cmp    BYTE PTR [ebp+0x6688e347],bl
  41e460:	mov    al,0xc4
  41e462:	adc    eax,0xbba7418
  41e467:	aam    0x9f
  41e469:	pop    ebx
  41e46a:	mov    bh,0x10
  41e46c:	dec    ebx
  41e46d:	jg     0x41e432
  41e46f:	push   ss
  41e470:	pop    ebp
  41e471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e472:	dec    eax
  41e473:	mov    ds:0xc5682efe,eax
  41e478:	retf   
  41e479:	arpl   di,dx
  41e47b:	pushf  
  41e47c:	mov    edx,0x437bba81
  41e481:	sub    ah,BYTE PTR [esi]
  41e483:	(bad)  
  41e484:	imul   ecx,DWORD PTR [edx],0xffffffee
  41e487:	aaa    
  41e488:	std    
  41e489:	inc    esp
  41e48a:	xor    DWORD PTR [ecx-0x61fda47c],ecx
  41e490:	and    eax,0xfbcb1b5
  41e495:	dec    esp
  41e496:	fidivr DWORD PTR [edx-0x38b08d93]
  41e49c:	ins    DWORD PTR es:[edi],dx
  41e49d:	test   ecx,edi
  41e49f:	and    eax,0x101e8e6a
  41e4a4:	dec    esp
  41e4a5:	xor    al,0x77
  41e4a7:	imul   esp,DWORD PTR [esi],0x1a
  41e4aa:	scas   al,BYTE PTR es:[edi]
  41e4ab:	add    al,0x1d
  41e4ad:	xor    DWORD PTR [edi-0x22acb5ec],esi
  41e4b3:	retf   0xbd22
  41e4b6:	push   esi
  41e4b7:	leave  
  41e4b8:	je     0x41e44a
  41e4ba:	push   ss
  41e4bb:	das    
  41e4bc:	pop    ds
  41e4bd:	jle    0x41e515
  41e4bf:	(bad)  
  41e4c0:	hlt    
  41e4c1:	not    BYTE PTR [ebp-0x28a8cc66]
  41e4c7:	js     0x41e4d7
  41e4c9:	pop    edi
  41e4ca:	imul   eax,DWORD PTR [esi],0x74323fa2
  41e4d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4d1:	jo     0x41e54b
  41e4d3:	mov    cl,0xf3
  41e4d5:	fistp  WORD PTR [ecx]
  41e4d7:	mov    edi,DWORD PTR [esi-0x2d]
  41e4da:	dec    ecx
  41e4db:	jne    0x41e45e
  41e4dd:	adc    DWORD PTR [edx-0x79e38e07],eax
  41e4e3:	fadd   DWORD PTR ds:0xe9b74867
  41e4e9:	sub    bl,BYTE PTR [edi+0x22]
  41e4ec:	mov    cl,0xf7
  41e4ee:	cmp    dl,BYTE PTR [esi]
  41e4f0:	xchg   ebp,eax
  41e4f1:	dec    ecx
  41e4f2:	aas    
  41e4f3:	ror    ebx,1
  41e4f5:	inc    ebp
  41e4f6:	pushf  
  41e4f7:	add    al,0xf6
  41e4f9:	adc    al,0xba
  41e4fb:	imul   ecx,DWORD PTR [esi],0x7c
  41e4fe:	(bad)  
  41e4ff:	(bad)  
  41e500:	jns    0x41e56b
  41e502:	jbe    0x41e4dc
  41e504:	xor    bl,BYTE PTR [edx-0x21e37dfb]
  41e50a:	call   0x43559421
  41e50f:	xor    eax,0x4128a1ef
  41e514:	stc    
  41e515:	cdq    
  41e516:	dec    esi
  41e517:	xor    ebx,DWORD PTR [eax]
  41e519:	xchg   esi,eax
  41e51a:	fwait
  41e51b:	xchg   edi,eax
  41e51c:	stos   BYTE PTR es:[edi],al
  41e51d:	lock test ah,dh
  41e520:	add    BYTE PTR [edx+0x76],0x94
  41e524:	xlat   BYTE PTR ds:[ebx]
  41e525:	jp     0x41e4ab
  41e527:	push   ebp
  41e528:	sub    BYTE PTR [ebx+edx*4],ah
  41e52b:	dec    esp
  41e52c:	and    ah,al
  41e52e:	pusha  
  41e52f:	mov    cl,BYTE PTR [ebx-0x38]
  41e532:	adc    ch,BYTE PTR [ebp+0x125d3a17]
  41e538:	sbb    eax,0x51cc2378
  41e53d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e53e:	lahf   
  41e53f:	shr    DWORD PTR [eax],cl
  41e541:	pop    eax
  41e542:	mov    ds:0x2150df13,al
  41e547:	jno    0x41e4fb
  41e549:	nop
  41e54a:	add    DWORD PTR [edi-0x6d],edi
  41e54d:	das    
  41e54e:	ins    BYTE PTR es:[edi],dx
  41e54f:	clc    
  41e550:	pop    esi
  41e551:	in     al,dx
  41e552:	lock jmp 0x41e51e
  41e555:	or     ebx,DWORD PTR [eax+esi*4+0x5c]
  41e559:	add    ebx,DWORD PTR [edx-0x38]
  41e55c:	jb     0x41e51f
  41e55e:	push   ss
  41e55f:	int3   
  41e560:	out    0x4,eax
  41e562:	pop    ds
  41e563:	jg     0x41e588
  41e565:	and    eax,0x1182eabc
  41e56a:	inc    esi
  41e56b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e56c:	jns    0x41e55f
  41e56e:	mov    dl,0x47
  41e570:	outs   dx,BYTE PTR ds:[esi]
  41e571:	mov    eax,ds:0x582ca9bb
  41e576:	cmp    DWORD PTR [eax+0x7118cfe2],ebx
  41e57c:	loop   0x41e582
  41e57e:	xchg   ebp,eax
  41e57f:	lods   eax,DWORD PTR ds:[esi]
  41e580:	jno    0x41e5e8
  41e582:	ja     0x41e55a
  41e584:	stos   BYTE PTR es:[edi],al
  41e585:	inc    ebx
  41e586:	add    DWORD PTR [edi-0x1b],esp
  41e589:	jae    0x41e5fb
  41e58b:	adc    ch,cl
  41e58d:	xlat   BYTE PTR ds:[ebx]
  41e58e:	out    0x38,eax
  41e590:	ds cwde 
  41e592:	jmp    0x830fb239
  41e597:	inc    ebx
  41e598:	std    
  41e599:	pop    ebx
  41e59a:	sub    edi,DWORD PTR [eax+0xa435dd1]
  41e5a0:	or     BYTE PTR [esi],ah
  41e5a2:	hlt    
  41e5a3:	or     al,al
  41e5a5:	imul   edx,DWORD PTR [eax-0x1e9d6f22],0x3b0432ca
  41e5af:	popf   
  41e5b0:	inc    edx
  41e5b1:	ror    DWORD PTR [edi+0x146a8bf7],1
  41e5b7:	push   0x5
  41e5b9:	es or  al,0x7c
  41e5bc:	into   
  41e5bd:	cmp    al,al
  41e5bf:	cwde   
  41e5c0:	mov    esp,edi
  41e5c2:	xor    ebx,edx
  41e5c4:	mov    esp,0x67f8cedf
  41e5c9:	pop    esi
  41e5ca:	jmp    0x69ad:0x77aa7e77
  41e5d1:	lock sbb eax,0xbf144e41
  41e5d7:	sbb    edx,DWORD PTR [esi+0x1d1a2b9a]
  41e5dd:	sbb    DWORD PTR [esi-0x56],eax
  41e5e0:	add    cl,BYTE PTR [eax]
  41e5e2:	ins    BYTE PTR es:[edi],dx
  41e5e3:	out    0x12,eax
  41e5e5:	jmp    0x7f70:0xa208291c
  41e5ec:	adc    BYTE PTR [esi],bh
  41e5ee:	xor    ebx,DWORD PTR [ebx*2-0x187114cd]
  41e5f5:	(bad)  
  41e5f6:	rcr    ecx,1
  41e5f8:	cmp    al,0x6b
  41e5fa:	fcom   st(7)
  41e5fc:	test   esi,0x24a94fad
  41e602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e603:	(bad)  
  41e604:	push   edi
  41e605:	ins    DWORD PTR es:[edi],dx
  41e606:	stos   BYTE PTR es:[edi],al
  41e607:	or     eax,0x959be883
  41e60c:	test   DWORD PTR [esi-0x5c9138fd],ecx
  41e612:	cmc    
  41e613:	(bad)  
  41e614:	mov    ch,0xf4
  41e616:	test   eax,esi
  41e618:	cmp    eax,0xd57ecd2d
  41e61d:	jmp    0xfcfb:0x12a462bb
  41e624:	mov    edi,0x3ed0aae6
  41e629:	add    BYTE PTR [edi-0x10],bl
  41e62c:	pop    ds
  41e62d:	adc    DWORD PTR [ebx+0x59],eax
  41e630:	sub    eax,0x3386c106
  41e635:	cs xchg ebx,eax
  41e637:	lods   al,BYTE PTR ds:[esi]
  41e638:	jmp    0xcf6a:0xf888ce75
  41e63f:	xchg   ebx,eax
  41e640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e641:	into   
  41e642:	jae    0x41e65d
  41e644:	js     0x41e68d
  41e646:	inc    ecx
  41e647:	inc    edi
  41e648:	sub    cl,BYTE PTR [edi+0x11]
  41e64b:	mov    ch,0xd4
  41e64d:	fbstp  TBYTE PTR [edx+0x7df3b6cb]
  41e653:	pop    ds
  41e654:	cs xchg edx,eax
  41e656:	sub    edx,DWORD PTR [eax-0x34]
  41e659:	cmp    DWORD PTR [ebx+0x33],edx
  41e65c:	(bad)  
  41e65d:	mov    esi,0x6de2e0fb
  41e662:	and    eax,0x1dfbf6b0
  41e667:	pop    esp
  41e668:	jecxz  0x41e6ca
  41e66a:	mov    ebx,0xc1c5b15a
  41e66f:	fldenv [ebx-0x7f813b12]
  41e675:	mov    es,WORD PTR [ebx-0x4c]
  41e678:	sub    eax,0xca1ed565
  41e67d:	sbb    al,0x32
  41e67f:	clc    
  41e680:	imul   BYTE PTR [ebx+0x38]
  41e683:	inc    edi
  41e684:	repz xor BYTE PTR [ebp+esi*8+0x22530567],0x81
  41e68d:	lock aam 0x24
  41e690:	sub    DWORD PTR [edi+0x71d6e90d],esp
  41e696:	jbe    0x41e65a
  41e698:	lahf   
  41e699:	pop    eax
  41e69a:	ja     0x41e6d3
  41e69c:	ins    DWORD PTR es:[edi],dx
  41e69d:	(bad)
  41e6a1:	(bad)  
  41e6a2:	in     eax,0x46
  41e6a4:	and    al,0x84
  41e6a6:	jp     0x41e708
  41e6a8:	rol    BYTE PTR [eax-0x774da77e],1
  41e6ae:	mov    esp,0xb49c1e4b
  41e6b3:	out    dx,eax
  41e6b4:	cmp    al,0xd3
  41e6b6:	shr    BYTE PTR ds:0x937b0362,0xe
  41e6bd:	mov    BYTE PTR [ecx],ch
  41e6bf:	xor    DWORD PTR [ecx+esi*1+0x2b9e01],edi
  41e6c6:	lods   eax,DWORD PTR ds:[esi]
  41e6c7:	mov    ds:0xb13919ed,eax
  41e6cc:	sbb    DWORD PTR [esi+edi*1],edx
  41e6cf:	sub    cl,BYTE PTR [esi]
  41e6d1:	push   ebp
  41e6d2:	mov    dh,0x7
  41e6d4:	fldenv [esi+edx*4]
  41e6d7:	in     eax,dx
  41e6d8:	mov    al,0xb7
  41e6da:	jmp    0xab5ffa53
  41e6df:	add    al,0x82
  41e6e1:	jo     0x41e735
  41e6e3:	out    0x69,eax
  41e6e5:	add    esi,ecx
  41e6e7:	mov    ebp,edx
  41e6e9:	(bad)  
  41e6ea:	sub    BYTE PTR ds:0xcc4181fa,dl
  41e6f0:	pop    esp
  41e6f1:	cmp    ebp,DWORD PTR [esi+0x4f1cff05]
  41e6f7:	mov    cl,0x47
  41e6f9:	enter  0x1e7,0xff
  41e6fd:	pop    ebp
  41e6fe:	add    ebx,DWORD PTR [esi+edx*4]
  41e701:	sbb    BYTE PTR ds:0xb09a6f2b,cl
  41e707:	mov    edx,0x252cf35f
  41e70c:	outs   dx,DWORD PTR ds:[esi]
  41e70d:	ret    
  41e70e:	sbb    ah,BYTE PTR [ebx]
  41e710:	pusha  
  41e711:	xchg   edx,eax
  41e712:	ins    BYTE PTR es:[edi],dx
  41e713:	add    dl,BYTE PTR [edi+0x5b7cc2b0]
  41e719:	lods   al,BYTE PTR ds:[esi]
  41e71a:	je     0x41e731
  41e71c:	add    DWORD PTR [edx-0x876b603],ebp
  41e722:	mov    edx,0x5fdbefff
  41e727:	jbe    0x41e774
  41e729:	xchg   DWORD PTR [edx-0x59a50dd9],ecx
  41e72f:	add    al,0x9f
  41e731:	call   0x249addee
  41e736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e737:	test   BYTE PTR [eax-0x6a],bl
  41e73a:	test   ebp,eax
  41e73c:	and    eax,0x52cd7fb4
  41e741:	xor    eax,0x75a302cf
  41e746:	outs   dx,DWORD PTR ds:[esi]
  41e747:	adc    dh,BYTE PTR [esp+edx*1]
  41e74a:	hlt    
  41e74b:	or     al,BYTE PTR [esi+0x6fd4e8c8]
  41e751:	cli    
  41e752:	push   ebp
  41e753:	xor    al,0x63
  41e755:	lods   eax,DWORD PTR ds:[esi]
  41e756:	out    dx,eax
  41e757:	or     DWORD PTR [edi],0x837d0905
  41e75d:	cmp    edx,DWORD PTR [ebx+0x5c]
  41e760:	addr16 pop ds
  41e762:	xor    eax,0x1a1e3054
  41e767:	shl    BYTE PTR [ecx+0x5772e462],cl
  41e76d:	or     eax,0xc15f8080
  41e772:	retf   
  41e773:	ret    0xa454
  41e776:	sub    edx,DWORD PTR [esi]
  41e778:	daa    
  41e779:	dec    DWORD PTR [edi-0x32]
  41e77c:	cli    
  41e77d:	imul   bl
  41e77f:	stos   BYTE PTR es:[edi],al
  41e780:	mov    ch,0x5b
  41e782:	stos   BYTE PTR es:[edi],al
  41e783:	and    BYTE PTR [esi],ah
  41e785:	aad    0x10
  41e787:	je     0x41e7c4
  41e789:	push   es
  41e78a:	aaa    
  41e78b:	xchg   DWORD PTR [edx+0x3489a8d9],eax
  41e791:	clc    
  41e792:	xchg   edx,eax
  41e793:	pop    edi
  41e794:	div    BYTE PTR [ebx]
  41e796:	sahf   
  41e797:	mov    esi,0xdc5c74d9
  41e79c:	push   0x32d04539
  41e7a1:	jb     0x41e72f
  41e7a3:	cmp    esp,esi
  41e7a5:	adc    al,0xbe
  41e7a7:	aad    0x5f
  41e7a9:	sub    al,0xfc
  41e7ab:	mov    ch,0x55
  41e7ad:	cmc    
  41e7ae:	ret    0x9592
  41e7b1:	pop    edx
  41e7b2:	es cmp ebx,edx
  41e7b5:	into   
  41e7b6:	or     al,0x82
  41e7b8:	mov    ch,0xbe
  41e7ba:	hlt    
  41e7bb:	js     0x41e7fd
  41e7bd:	push   ecx
  41e7be:	inc    esp
  41e7bf:	add    dl,BYTE PTR [ebp+0x6c]
  41e7c2:	dec    esp
  41e7c3:	mov    esi,0xe8ee777c
  41e7c8:	out    dx,al
  41e7c9:	scas   eax,DWORD PTR es:[edi]
  41e7ca:	leave  
  41e7cb:	mov    dh,0x93
  41e7cd:	xor    al,0xb8
  41e7cf:	call   0xc9b6ffad
  41e7d4:	push   0xfffffffc
  41e7d6:	sbb    BYTE PTR [ebp+0x56],0x15
  41e7da:	sbb    eax,0x59c1de77
  41e7df:	rcr    BYTE PTR ds:0xe2826615,cl
  41e7e5:	fbstp  TBYTE PTR [ebp-0x6647005b]
  41e7eb:	mov    DWORD PTR ds:0xc33a5515,eax
  41e7f1:	fisubr DWORD PTR [ecx+0x62f37517]
  41e7f7:	not    dl
  41e7f9:	shr    BYTE PTR [eax+0x561baa0a],cl
  41e7ff:	(bad)  
  41e800:	mov    edi,0xed541b03
  41e805:	and    BYTE PTR [eax+ebx*8+0x3fe85753],dl
  41e80c:	jno    0x41e80d
  41e80e:	dec    DWORD PTR [ebx-0x2274b]
  41e814:	(bad)  
  41e815:	cmp    esi,eax
  41e817:	jmp    0x41ebfe
  41e81c:	mov    dh,0x8
  41e81e:	xor    al,0xa5
  41e820:	mov    ah,0xb9
  41e822:	mov    esp,0xddc4c918
  41e827:	nop
  41e828:	sbb    DWORD PTR [esi+0x6fa7e3eb],ebx
  41e82e:	sar    BYTE PTR [esi-0x41413bb6],0xe6
  41e835:	jnp    0x41e8a6
  41e837:	xchg   esp,eax
  41e838:	stos   DWORD PTR es:[edi],eax
  41e839:	sbb    DWORD PTR [edi],edi
  41e83b:	scas   al,BYTE PTR es:[edi]
  41e83c:	outs   dx,DWORD PTR ds:[esi]
  41e83d:	xor    eax,0x4e8b47ed
  41e842:	dec    ebx
  41e843:	leave  
  41e844:	addr16 mov ds:0x9cb6,eax
  41e848:	sub    eax,0x66c62200
  41e84d:	inc    esi
  41e84e:	dec    eax
  41e84f:	aas    
  41e850:	scas   al,BYTE PTR es:[edi]
  41e851:	(bad)
  41e854:	pop    edi
  41e855:	sbb    al,0x6
  41e857:	jne    0x41e7ee
  41e859:	push   ds
  41e85a:	xchg   bh,ah
  41e85c:	xchg   ebx,eax
  41e85d:	cli    
  41e85e:	sub    cl,BYTE PTR [ebx]
  41e860:	outs   dx,BYTE PTR ds:[esi]
  41e861:	js     0x41e8c7
  41e863:	in     al,0xbe
  41e865:	popa   
  41e866:	repnz inc DWORD PTR [ebx]
  41e869:	adc    dh,dl
  41e86b:	push   esi
  41e86c:	mov    dl,BYTE PTR [ebx+0x3a90c3c4]
  41e872:	frstor ds:0x706d7798
  41e878:	ins    DWORD PTR es:[edi],dx
  41e879:	out    dx,al
  41e87a:	mov    ecx,0xd50222ed
  41e87f:	scas   eax,DWORD PTR es:[edi]
  41e880:	dec    edx
  41e881:	stc    
  41e882:	or     ecx,DWORD PTR [edx+0x6f]
  41e885:	push   ebp
  41e886:	mov    ds:0xa54a874e,al
  41e88b:	pop    ss
  41e88c:	jecxz  0x41e83b
  41e88e:	xor    eax,0x463c3ecd
  41e893:	fmul   st,st(3)
  41e895:	sbb    al,0xd0
  41e897:	(bad)  
  41e898:	sub    ebx,DWORD PTR [ebx]
  41e89a:	dec    esp
  41e89b:	aaa    
  41e89c:	rcl    DWORD PTR [esi],0x67
  41e89f:	retf   0x50b2
  41e8a2:	adc    DWORD PTR [ecx],edi
  41e8a4:	es lahf 
  41e8a6:	cli    
  41e8a7:	fwait
  41e8a8:	mov    ?,WORD PTR [ebp+0x45d38073]
  41e8ae:	retf   0xb69f
  41e8b1:	scas   eax,DWORD PTR es:[edi]
  41e8b2:	mov    dh,0xd3
  41e8b4:	fsub   DWORD PTR [esi+edx*8]
  41e8b7:	ss push esp
  41e8b9:	jg     0x41e8c2
  41e8bb:	jp     0x41e86d
  41e8bd:	cmp    BYTE PTR [ebx+0x574c85de],dl
  41e8c3:	stc    
  41e8c4:	or     BYTE PTR [ebx+0x7a],al
  41e8c7:	mov    dh,0x30
  41e8c9:	adc    esp,DWORD PTR [edi+0x32bf0e1d]
  41e8cf:	mov    al,ds:0xa1949070
  41e8d4:	mov    esp,0x6b322779
  41e8d9:	jmp    0x26c643af
  41e8de:	cs cld 
  41e8e0:	mov    ch,0xe4
  41e8e2:	fild   WORD PTR [edx-0x67378bd9]
  41e8e8:	xor    BYTE PTR [ecx+0x2bb190d4],dl
  41e8ee:	les    esi,FWORD PTR [ecx-0x2ca69c3]
  41e8f4:	push   0x38
  41e8f6:	dec    edi
  41e8f7:	add    edi,DWORD PTR [ecx+0x3bbe1777]
  41e8fd:	sbb    edi,DWORD PTR [ecx+0x71]
  41e900:	or     dh,BYTE PTR [edi-0x2095587c]
  41e906:	jmp    0x41e88d
  41e908:	push   0xabf6e856
  41e90d:	lds    esp,FWORD PTR [edi+0x48]
  41e910:	and    ah,BYTE PTR [esi+0x47dc482]
  41e916:	fstp   TBYTE PTR [ebp-0x29]
  41e919:	sti    
  41e91a:	fimul  WORD PTR [esi+eiz*1-0x16e620ca]
  41e921:	sbb    BYTE PTR [ebp+eax*4+0x10],ah
  41e925:	ret    
  41e926:	les    esi,FWORD PTR [edi+edx*8]
  41e929:	fmul   DWORD PTR [edx+0x3cf75b5d]
  41e92f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e930:	(bad)  
  41e931:	jecxz  0x41e94d
  41e933:	mov    bh,0xd1
  41e935:	inc    ecx
  41e936:	jnp    0x41e9b0
  41e938:	push   0xfec8d2c2
  41e93d:	rcl    BYTE PTR [ecx+0x565b6da],1
  41e943:	push   ds
  41e944:	sub    al,0xea
  41e946:	mov    DWORD PTR ds:0xa0aa3bbe,ebp
  41e94c:	fild   DWORD PTR [esi+0x481efb8e]
  41e952:	and    ah,ah
  41e954:	sbb    DWORD PTR [esi+0x36],ebp
  41e957:	lock and DWORD PTR [edi],ebx
  41e95a:	add    al,0x5f
  41e95c:	fcom   DWORD PTR [edi-0x6c8790c8]
  41e962:	out    0x7,eax
  41e964:	jp     0x41e990
  41e966:	outs   dx,DWORD PTR ds:[esi]
  41e967:	cmpxchg DWORD PTR [ebx-0x5bbf7266],ebp
  41e96e:	imul   esp,DWORD PTR [ebx],0xffffffdd
  41e971:	lahf   
  41e972:	xor    ecx,DWORD PTR [esi+0x48]
  41e975:	fs into 
  41e977:	jns    0x41e95b
  41e979:	jge    0x41e96a
  41e97b:	cmp    cl,cl
  41e97d:	fcomp  DWORD PTR [eax+0x29]
  41e980:	mov    dh,0x9e
  41e982:	xchg   edx,eax
  41e983:	mov    ah,0xe8
  41e985:	xor    DWORD PTR [edx-0x2397b9f2],ecx
  41e98b:	fdivr  DWORD PTR [edi]
  41e98d:	dec    esp
  41e98e:	sub    edx,DWORD PTR [edi]
  41e990:	pop    ebx
  41e991:	push   ecx
  41e992:	pop    ds
  41e993:	scas   eax,DWORD PTR es:[edi]
  41e994:	inc    esi
  41e995:	jo     0x41e984
  41e997:	sbb    esi,DWORD PTR [esp]
  41e99a:	push   es
  41e99b:	inc    ebp
  41e99c:	nop
  41e99d:	sub    DWORD PTR [ebx+ecx*8],0x7ec0220c
  41e9a4:	(bad)  
  41e9a5:	xor    BYTE PTR [esi],bh
  41e9a7:	ins    DWORD PTR es:[edi],dx
  41e9a8:	and    BYTE PTR [ebp-0x14ebca8e],al
  41e9ae:	mov    BYTE PTR [ecx+0x53],bh
  41e9b1:	and    DWORD PTR [eax-0x5ad96340],esp
  41e9b7:	sahf   
  41e9b8:	xchg   ecx,eax
  41e9b9:	jnp    0x41e986
  41e9bb:	add    eax,0xfe060303
  41e9c0:	sub    al,0xe7
  41e9c2:	int    0xcc
  41e9c4:	inc    edx
  41e9c5:	inc    esi
  41e9c6:	sbb    BYTE PTR [ebx+0x4d5fe001],cl
  41e9cc:	dec    ebp
  41e9cd:	mov    cl,0xb
  41e9cf:	mov    bh,0x4e
  41e9d1:	or     BYTE PTR [esi],cl
  41e9d3:	fdivr  DWORD PTR [ebx]
  41e9d5:	jns    0x41e9f5
  41e9d7:	xlat   BYTE PTR ds:[bx]
  41e9d9:	ds add bh,cl
  41e9dc:	mov    ah,0xeb
  41e9de:	je     0x41ea0c
  41e9e0:	shl    esi,cl
  41e9e2:	adc    DWORD PTR [edx],esp
  41e9e4:	jo     0x41e9d1
  41e9e6:	repnz sahf 
  41e9e8:	mov    esi,0x39b282a4
  41e9ed:	cdq    
  41e9ee:	bswap  esi
  41e9f0:	ror    ch,0xe0
  41e9f3:	call   DWORD PTR [esi+0x2b25da08]
  41e9f9:	repz dec ebp
  41e9fb:	mov    al,ds:0x3fb18549
  41ea00:	push   esi
  41ea01:	or     edi,ecx
  41ea03:	dec    esp
  41ea04:	mov    edx,0xba1f40d2
  41ea09:	mov    esi,0xdc30eb3a
  41ea0e:	imul   BYTE PTR [edx]
  41ea10:	or     DWORD PTR [esi-0x1],ebp
  41ea13:	fs push 0xffffff8d
  41ea16:	mov    esi,0x6ca454ec
  41ea1b:	sub    DWORD PTR [edx+0x70],0xffffffe6
  41ea1f:	xchg   DWORD PTR [edi+edi*2+0x16a6fe96],esp
  41ea26:	and    DWORD PTR [edi+ecx*2-0x367f8768],esp
  41ea2d:	les    edi,FWORD PTR [ebx+0x25]
  41ea30:	out    0xca,eax
  41ea32:	fld    DWORD PTR [ebp+0x3a860839]
  41ea38:	adc    al,0xba
  41ea3a:	mov    ds:0xa166e77b,al
  41ea3f:	xchg   DWORD PTR [edi+eax*2-0x22fac3a2],ebx
  41ea46:	mov    dh,0xd
  41ea48:	inc    eax
  41ea49:	push   eax
  41ea4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea4b:	icebp  
  41ea4c:	inc    esp
  41ea4d:	mov    ss,WORD PTR [esi+0x39a6760c]
  41ea53:	xchg   esp,eax
  41ea54:	and    ebp,DWORD PTR [esi-0x49b0d7d0]
  41ea5a:	fild   WORD PTR [ecx-0x2580514c]
  41ea60:	push   cs
  41ea61:	xchg   edx,eax
  41ea62:	xchg   esi,eax
  41ea63:	push   0xffffffb5
  41ea65:	lock mov ebp,0xfb1cfa3f
  41ea6b:	push   edi
  41ea6c:	fcomp  QWORD PTR [edx-0xa39f5c0]
  41ea72:	jg     0x41eab5
  41ea74:	mov    ebp,0x33659b66
  41ea79:	out    0x95,al
  41ea7b:	std    
  41ea7c:	(bad)  
  41ea7e:	xchg   ebx,eax
  41ea7f:	popa   
  41ea80:	cwde   
  41ea81:	shl    DWORD PTR [ecx],0x6b
  41ea84:	leave  
  41ea85:	inc    esp
  41ea86:	div    DWORD PTR [edx-0x3e]
  41ea89:	out    dx,eax
  41ea8a:	push   eax
  41ea8b:	imul   ebx,DWORD PTR [ebx-0x7c878625],0xfffffff9
  41ea92:	aas    
  41ea93:	daa    
  41ea94:	ja     0x41eb00
  41ea96:	sub    DWORD PTR [ecx-0x42],eax
  41ea99:	add    edx,DWORD PTR [edi]
  41ea9b:	and    ah,bh
  41ea9d:	cmp    BYTE PTR [edx],cl
  41ea9f:	jg     0x41ea4d
  41eaa1:	ds iret 
  41eaa3:	and    edi,DWORD PTR [esi-0x6b]
  41eaa6:	clc    
  41eaa7:	hlt    
  41eaa8:	jge    0x41eacd
  41eaaa:	fcom   QWORD PTR ds:0x96ddf9c9
  41eab0:	push   0xffffffcd
  41eab2:	test   al,0x97
  41eab4:	dec    ecx
  41eab5:	mov    dl,0xc5
  41eab7:	fdiv   QWORD PTR [esi-0x70]
  41eaba:	inc    DWORD PTR [eax]
  41eabc:	cmp    edi,DWORD PTR [edx+0x60]
  41eabf:	call   0xe01:0xc3a7e8c2
  41eac6:	loop   0x41ea96
  41eac8:	lods   al,BYTE PTR ds:[esi]
  41eaca:	idiv   dh
  41eacc:	xor    ebx,DWORD PTR [edi-0x4]
  41eacf:	adc    DWORD PTR [esp+ebx*2-0x56],edx
  41ead3:	or     eax,0x1fac663f
  41ead8:	lods   al,BYTE PTR ds:[esi]
  41ead9:	shl    esi,1
  41eadb:	cmp    BYTE PTR [edx],cl
  41eadd:	or     al,0x82
  41eadf:	jnp    0x41eb4c
  41eae1:	test   al,0xd1
  41eae3:	mov    ds:0x69928664,al
  41eae8:	outs   dx,BYTE PTR ds:[esi]
  41eae9:	inc    eax
  41eaea:	cmp    bl,BYTE PTR [ecx+0x7a]
  41eaed:	(bad)  
  41eaee:	mov    dh,0xf7
  41eaf0:	js     0x41eb36
  41eaf2:	add    ch,BYTE PTR [edx]
  41eaf4:	mov    al,0x5
  41eaf6:	fnstenv [esi-0x2168360c]
  41eafc:	ret    
  41eafd:	lock jp 0x41ea89
  41eb00:	push   es
  41eb01:	and    esi,ebp
  41eb03:	mov    ch,0x8f
  41eb05:	cmp    ah,BYTE PTR [ebp-0x708c1b3d]
  41eb0b:	adc    al,0x5f
  41eb0d:	push   edx
  41eb0e:	cdq    
  41eb0f:	dec    ebx
  41eb10:	fwait
  41eb11:	mov    al,ds:0x4a29615
  41eb16:	aaa    
  41eb17:	dec    ebx
  41eb18:	push   ebp
  41eb19:	inc    ecx
  41eb1a:	jne    0x41eb00
  41eb1c:	sub    ebp,DWORD PTR [edi]
  41eb1e:	push   ecx
  41eb1f:	adc    eax,0x66168272
  41eb24:	shr    BYTE PTR [esp+ebp*4-0x576256ee],1
  41eb2b:	les    esp,FWORD PTR [ecx-0x5e]
  41eb2e:	mov    esi,esi
  41eb30:	sahf   
  41eb31:	retf   
  41eb32:	xor    al,BYTE PTR [ebx-0x2c4e8553]
  41eb38:	push   esp
  41eb39:	xor    BYTE PTR [ebx-0x300d5571],ch
  41eb3f:	sbb    eax,0x23d1eafb
  41eb44:	mov    esi,0xe4e62868
  41eb49:	(bad)  
  41eb4b:	push   ebx
  41eb4c:	sbb    DWORD PTR [edi+0x5b44ceae],ebp
  41eb52:	out    0x4e,al
  41eb54:	mov    ebx,0xe738b7d1
  41eb59:	jle    0x41eb84
  41eb5b:	mov    dh,0xdc
  41eb5d:	xchg   ecx,eax
  41eb5e:	test   eax,0x2df30ff6
  41eb63:	jmp    0x41ebc0
  41eb65:	out    0x5c,al
  41eb67:	inc    ebx
  41eb68:	cmc    
  41eb69:	xlat   BYTE PTR ds:[ebx]
  41eb6a:	push   es
  41eb6b:	sqrtps xmm1,XMMWORD PTR [edi+0x7c]
  41eb6f:	jb     0x41eb37
  41eb71:	sbb    bl,0xc5
  41eb74:	imul   edi,DWORD PTR [ebx-0x7a5c2332],0xffffff8e
  41eb7b:	or     eax,0xcf7bf1e8
  41eb80:	and    DWORD PTR [ebp-0x27033660],esi
  41eb86:	mov    DWORD PTR [ecx+0x48],0xffacead6
  41eb8d:	jge    0x41ebd6
  41eb8f:	dec    cl
  41eb91:	mov    ah,0x57
  41eb93:	mov    cl,0xb3
  41eb95:	jge    0x41eb2f
  41eb97:	cmp    esi,DWORD PTR [edi]
  41eb99:	cmp    eax,0xd0e51cce
  41eb9e:	mov    bh,0x65
  41eba0:	mov    bl,0xb2
  41eba2:	(bad)  
  41eba3:	jle    0x41eb28
  41eba5:	pushf  
  41eba6:	xor    DWORD PTR [esi-0x7b01df8e],esi
  41ebac:	jmp    0x364d:0xe77ff2ac
  41ebb3:	sbb    DWORD PTR [esi+eax*4-0x4e3dc889],0xffffff92
  41ebbb:	fsub   QWORD PTR [esi+0x48]
  41ebbe:	inc    esi
  41ebbf:	jns    0x41ec00
  41ebc1:	dec    eax
  41ebc2:	loop   0x41eb7e
  41ebc4:	dec    esi
  41ebc5:	dec    edx
  41ebc6:	int    0xba
  41ebc8:	mov    ax,0x8591
  41ebcc:	das    
  41ebcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebce:	loope  0x41eb54
  41ebd0:	push   ebx
  41ebd1:	dec    esi
  41ebd2:	push   ebp
  41ebd3:	in     eax,dx
  41ebd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebd5:	xor    eax,0xff134bee
  41ebda:	sub    BYTE PTR [eax+0x575429d9],cl
  41ebe0:	mov    eax,ds:0xc5acb126
  41ebe5:	jg     0x41ebc4
  41ebe7:	and    BYTE PTR [ebx-0x8b277ec],cl
  41ebed:	es call 0xbae4:0x4e504350
  41ebf5:	xchg   BYTE PTR [edi+0x11],bl
  41ebf8:	mov    bh,BYTE PTR [ebx]
  41ebfa:	dec    edx
  41ebfb:	out    0x18,eax
  41ebfd:	lea    ecx,[edi]
  41ebff:	test   BYTE PTR [esi+0x4],dl
  41ec02:	add    BYTE PTR [eax],al
  41ec04:	mov    eax,DWORD PTR [ebp-0x154]
  41ec0a:	jmp    0x41eff1
  41ec0f:	cld    
  41ec10:	sbb    eax,0x6c1c4604
  41ec15:	mov    esp,0x10e976b3
  41ec1a:	sahf   
  41ec1b:	push   edi
  41ec1c:	test   eax,0x773390a0
  41ec21:	sar    BYTE PTR [esi-0x41413bb6],0xf0
  41ec28:	dec    ecx
  41ec29:	inc    esp
  41ec2a:	ret    0x7a3a
  41ec2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec2e:	or     ebx,esp
  41ec30:	(bad)  
  41ec31:	imul   ebx,DWORD PTR [ebx-0x43b72f9d],0x2e
  41ec38:	jg     0x41ebca
  41ec3a:	push   ecx
  41ec3b:	sub    eax,0xf07c5d19
  41ec40:	mov    cl,0x83
  41ec42:	bound  ecx,QWORD PTR [ebp+0x7f244133]
  41ec48:	es xchg ecx,eax
  41ec4a:	jge    0x41ec33
  41ec4c:	xchg   BYTE PTR [edx-0x53],dh
  41ec4f:	cmp    BYTE PTR [eax-0x72],ah
  41ec52:	jl     0x41ec37
  41ec54:	cwde   
  41ec55:	hlt    
  41ec56:	cwde   
  41ec57:	jge    0x41ec0f
  41ec59:	(bad)  
  41ec5a:	xor    DWORD PTR [ebx+0x7f30c54f],edi
  41ec60:	jl     0x41ec07
  41ec62:	dec    esp
  41ec63:	cmp    eax,0x4d8d60c0
  41ec68:	and    cl,BYTE PTR [ebx+0x65]
  41ec6b:	xor    eax,0xf1297ab9
  41ec70:	cmp    ch,BYTE PTR [ebx]
  41ec72:	mov    ds:0xce9c6380,eax
  41ec77:	dec    ebp
  41ec78:	push   0x5e9c43d3
  41ec7d:	pop    edx
  41ec7e:	in     eax,dx
  41ec7f:	pop    ebp
  41ec80:	mov    dh,0xb3
  41ec82:	mov    es,WORD PTR [ebx+ebx*1]
  41ec85:	xrelease xchg DWORD PTR ds:0x5f31b3b5,edx
  41ec8c:	dec    ecx
  41ec8d:	add    eax,0x75852307
  41ec92:	xor    al,0x50
  41ec94:	shr    DWORD PTR [eax],1
  41ec96:	mov    ebx,0xe02f2454
  41ec9b:	inc    edi
  41ec9c:	ins    BYTE PTR es:[edi],dx
  41ec9d:	aaa    
  41ec9e:	sub    al,0xa6
  41eca0:	sbb    al,0xef
  41eca2:	ds std 
  41eca4:	cdq    
  41eca5:	add    al,0x9e
  41eca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eca8:	adc    al,0x7c
  41ecaa:	mov    esi,0x26f6a91f
  41ecaf:	mov    ch,ch
  41ecb1:	mov    esp,0x2062880e
  41ecb6:	mov    ds:0xf62dfe78,eax
  41ecbb:	sbb    al,0xcb
  41ecbd:	xor    al,0x62
  41ecbf:	jle    0x41ecfe
  41ecc1:	loope  0x41ec78
  41ecc3:	dec    esp
  41ecc4:	gs leave 
  41ecc6:	in     eax,dx
  41ecc7:	not    BYTE PTR [edx+0x73]
  41ecca:	addr16 (bad) 
  41eccc:	cld    
  41eccd:	add    BYTE PTR [edi-0x3e2e92ed],cl
  41ecd3:	pop    ebp
  41ecd4:	pop    esi
  41ecd5:	(bad)  ss:[ebp+0x521cc64]
  41ecdc:	lock dec ecx
  41ecde:	(bad)  
  41ece0:	cmovbe ebp,DWORD PTR [ecx-0x40]
  41ece4:	sub    eax,0xfea3d8e2
  41ece9:	push   es
  41ecea:	sti    
  41eceb:	cmp    DWORD PTR [eax-0x126450d4],esi
  41ecf1:	pop    eax
  41ecf2:	jmp    0xd1046bbc
  41ecf7:	and    eax,0xedac6d9b
  41ecfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecfd:	retf   
  41ecfe:	sbb    al,0x5c
  41ed00:	sub    ebp,DWORD PTR [edx+0x63]
  41ed03:	sub    ebp,DWORD PTR [edx-0x77]
  41ed06:	xchg   ebx,eax
  41ed07:	jp     0x41ed65
  41ed09:	test   eax,0x50f179c2
  41ed0e:	(bad)  
  41ed10:	mov    eax,ds:0x442df2f2
  41ed15:	xchg   ebp,eax
  41ed16:	aad    0xdd
  41ed18:	out    0xa2,al
  41ed1a:	mov    dl,0xa8
  41ed1c:	push   0xffffff8b
  41ed1e:	jle    0x41ed7f
  41ed20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed21:	mov    eax,ds:0xffe09c41
  41ed26:	hlt    
  41ed27:	or     eax,0x5df8465c
  41ed2c:	das    
  41ed2d:	icebp  
  41ed2e:	jmp    0x9121:0xa31c512b
  41ed35:	fiadd  WORD PTR [ecx-0x77815e65]
  41ed3b:	shr    DWORD PTR [esi],0xfb
  41ed3e:	jle    0x41ed4a
  41ed40:	mov    BYTE PTR [eax-0x5778174b],bl
  41ed46:	jno    0x41edbc
  41ed48:	cs call 0xe8a976a9
  41ed4e:	mov    DWORD PTR [edx],ebx
  41ed50:	aaa    
  41ed51:	sub    eax,0xb0968817
  41ed56:	(bad)  
  41ed58:	push   ds
  41ed59:	scas   al,BYTE PTR es:[edi]
  41ed5a:	out    dx,eax
  41ed5b:	(bad)  
  41ed5c:	dec    DWORD PTR [edi]
  41ed5e:	inc    edi
  41ed5f:	xor    ebp,DWORD PTR [esi+ecx*1]
  41ed62:	out    dx,eax
  41ed63:	jmp    0xb36:0xa1a05ca
  41ed6a:	jbe    0x41edc3
  41ed6c:	mov    DWORD PTR [ecx+0x6],ebp
  41ed6f:	jg     0x41eddf
  41ed71:	push   ebx
  41ed72:	jne    0x41ed12
  41ed74:	push   ecx
  41ed75:	rcr    edx,1
  41ed77:	pusha  
  41ed78:	jg     0x41edae
  41ed7a:	cmp    DWORD PTR [edx+0x6030e7e7],eax
  41ed80:	aas    
  41ed81:	outs   dx,BYTE PTR ds:[esi]
  41ed82:	push   cs
  41ed83:	cmp    ecx,DWORD PTR [esi+0x62]
  41ed86:	imul   ebp,DWORD PTR [esp+ebp*2],0xc857e6b4
  41ed8d:	mov    dh,0x3f
  41ed8f:	loop   0x41ed16
  41ed91:	hlt    
  41ed92:	jo     0x41ed8e
  41ed94:	inc    eax
  41ed95:	mov    ds,ebp
  41ed97:	pop    esp
  41ed98:	mov    fs,WORD PTR [esi-0x13]
  41ed9b:	lock call 0xd794:0xeb9e9e22
  41eda3:	mov    DWORD PTR [ecx+ecx*2-0x7462680f],0xa4797731
  41edae:	xchg   edi,eax
  41edaf:	lods   eax,DWORD PTR ds:[esi]
  41edb0:	fdiv   DWORD PTR [edx+0x1bff00d9]
  41edb6:	push   es
  41edb7:	nop
  41edb8:	outs   dx,DWORD PTR ds:[esi]
  41edb9:	(bad)  
  41edba:	and    DWORD PTR ss:[eax],ebx
  41edbd:	dec    eax
  41edbe:	(bad)  
  41edc0:	push   ecx
  41edc1:	fdiv   QWORD PTR [ebx-0x55]
  41edc4:	cmp    BYTE PTR [esi-0x13],bl
  41edc7:	push   ebx
  41edc8:	cli    
  41edc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edca:	sub    dl,BYTE PTR [ecx+esi*1+0x138b122c]
  41edd1:	int    0xed
  41edd3:	fld    st(1)
  41edd5:	stc    
  41edd6:	mov    ebp,0x1732f5a2
  41eddb:	jl     0x41edc0
  41eddd:	inc    esp
  41edde:	xchg   esp,eax
  41eddf:	mov    cl,0x62
  41ede1:	mov    al,ds:0x220b0b0f
  41ede6:	push   esp
  41ede7:	mov    ch,0xdc
  41ede9:	cmp    eax,0xcab91cba
  41edee:	cmovne ebx,DWORD PTR [ebp-0x3aabb23f]
  41edf5:	adc    dh,bh
  41edf7:	pshufw mm1,QWORD PTR [esi],0x1d
  41edfb:	adc    esi,DWORD PTR [eax+0x6f]
  41edfe:	xchg   BYTE PTR [ebp-0x6f5a5708],dl
  41ee04:	xchg   BYTE PTR [eax-0x72],dh
  41ee07:	mov    BYTE PTR [ebx+0x6983d3d1],ah
  41ee0d:	or     ebx,edx
  41ee0f:	xchg   ecx,eax
  41ee10:	int    0xd7
  41ee12:	adc    ecx,ebp
  41ee14:	inc    esi
  41ee15:	je     0x41eda9
  41ee17:	sbb    ebp,DWORD PTR [eax]
  41ee19:	jne    0x41ee21
  41ee1b:	sahf   
  41ee1c:	repz pop edi
  41ee1e:	jge    0x41ede2
  41ee20:	gs sub cl,ch
  41ee23:	xor    bh,cl
  41ee25:	sbb    eax,DWORD PTR ds:0x6f523e25
  41ee2b:	xchg   ecx,eax
  41ee2c:	xchg   esp,eax
  41ee2d:	jmp    0xfb09:0xea3eb4e3
  41ee34:	push   cs
  41ee35:	test   eax,0xd53a33fd
  41ee3a:	or     esi,DWORD PTR [ecx]
  41ee3c:	test   al,0xf8
  41ee3e:	sub    al,0xc8
  41ee40:	or     BYTE PTR [edx],cl
  41ee42:	cmp    ecx,0xffffff9e
  41ee45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee46:	mov    ch,0x1
  41ee48:	xchg   esi,eax
  41ee49:	push   0x1e7ab857
  41ee4e:	sbb    esp,edi
  41ee50:	jge    0x41ee9b
  41ee52:	ins    DWORD PTR es:[edi],dx
  41ee53:	and    eax,esp
  41ee55:	idiv   DWORD PTR [edi-0x7]
  41ee58:	dec    edx
  41ee59:	sahf   
  41ee5a:	mov    ebp,edi
  41ee5c:	rcr    BYTE PTR [ebx+eax*1+0x37],cl
  41ee60:	inc    esi
  41ee61:	add    WORD PTR [edi+0x14],bx
  41ee65:	in     al,dx
  41ee66:	and    eax,0xe5bfad0f
  41ee6b:	pop    esp
  41ee6c:	jp     0x41eec9
  41ee6e:	jae    0x41eec2
  41ee70:	sbb    dl,BYTE PTR [esi-0x3]
  41ee73:	xor    eax,0x768a8afb
  41ee78:	push   ecx
  41ee79:	jmp    0x6b35785b
  41ee7e:	jb     0x41ee56
  41ee80:	cs and eax,0x3d491901
  41ee86:	xor    DWORD PTR [eax],edx
  41ee88:	inc    esp
  41ee89:	and    DWORD PTR [edi+0x9],edx
  41ee8c:	inc    ebx
  41ee8d:	in     al,dx
  41ee8e:	int    0xac
  41ee90:	push   ebx
  41ee91:	adc    DWORD PTR [ebx],esi
  41ee93:	mov    ebx,DWORD PTR [edx]
  41ee95:	bnd ret 
  41ee97:	inc    ecx
  41ee98:	(bad)  
  41ee99:	push   cs
  41ee9a:	pop    ebp
  41ee9b:	addr16 pushf 
  41ee9d:	xor    dh,dh
  41ee9f:	mov    eax,0xf3cc0f18
  41eea4:	and    BYTE PTR [ebx-0x56],0xba
  41eea8:	mov    eax,ds:0xe23d3626
  41eead:	stos   BYTE PTR es:[edi],al
  41eeae:	sub    eax,0x6c5ae4dc
  41eeb3:	xchg   BYTE PTR [ecx],ah
  41eeb5:	popa   
  41eeb6:	mul    DWORD PTR es:[ecx]
  41eeb9:	mov    eax,ds:0xd4be5b01
  41eebe:	xchg   ebp,eax
  41eebf:	or     DWORD PTR [edi-0x30],esi
  41eec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eec3:	and    edx,edx
  41eec5:	outs   dx,BYTE PTR ds:[esi]
  41eec6:	mov    si,0xae8e
  41eeca:	dec    esi
  41eecb:	adc    BYTE PTR [ebx-0x66],ah
  41eece:	fistp  WORD PTR [ecx]
  41eed0:	rcl    DWORD PTR [edi],cl
  41eed2:	xor    eax,0x21e300f6
  41eed7:	adc    bl,bh
  41eed9:	pop    ecx
  41eeda:	push   edx
  41eedb:	push   ss
  41eedc:	jb     0x41ef0e
  41eede:	push   eax
  41eedf:	pop    es
  41eee0:	pminsw mm3,QWORD PTR [ebp+0x6d]
  41eee4:	loop   0x41ee6c
  41eee6:	sahf   
  41eee7:	fldenv ds:0x9af76b5b
  41eeed:	sub    DWORD PTR [esi-0x70a4fa9a],ebx
  41eef3:	das    
  41eef4:	cs add eax,0x34508e55
  41eefa:	daa    
  41eefb:	stc    
  41eefc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eefd:	lods   al,BYTE PTR ds:[esi]
  41eefe:	add    BYTE PTR [eax+eiz*4],ch
  41ef01:	pop    ecx
  41ef02:	daa    
  41ef03:	das    
  41ef04:	mov    ecx,db4
  41ef07:	ins    BYTE PTR es:[edi],dx
  41ef08:	ror    BYTE PTR [ebx],cl
  41ef0a:	pop    edx
  41ef0b:	lods   eax,DWORD PTR ds:[esi]
  41ef0c:	mov    ds:0xf69e29f5,eax
  41ef11:	xor    BYTE PTR [edx-0x62],0xa9
  41ef15:	lods   al,BYTE PTR ds:[esi]
  41ef16:	retf   
  41ef17:	sub    BYTE PTR [edi+0xe],bl
  41ef1a:	cli    
  41ef1b:	xchg   ecx,eax
  41ef1c:	into   
  41ef1d:	mov    ds:0x3c8ef4b8,eax
  41ef22:	into   
  41ef23:	mov    edx,0x8070ef2e
  41ef28:	shl    BYTE PTR [esi+0xff383bf],1
  41ef2e:	dec    esi
  41ef2f:	mov    edi,0x8dae8e5f
  41ef34:	lods   eax,DWORD PTR ds:[esi]
  41ef35:	jns    0x41eeb9
  41ef37:	jb     0x41ef3e
  41ef39:	pop    ds
  41ef3a:	pusha  
  41ef3b:	test   DWORD PTR [ecx+0x70],esi
  41ef3e:	imul   edx,DWORD PTR [edx-0x6dc4c44d],0xffffff84
  41ef45:	inc    edx
  41ef46:	ins    BYTE PTR es:[edi],dx
  41ef47:	sar    dh,0x7f
  41ef4a:	sub    al,0xc1
  41ef4c:	je     0x41ef92
  41ef4e:	mov    dl,0x1f
  41ef50:	sub    BYTE PTR [edi-0x57],0x62
  41ef54:	mov    ch,0xe7
  41ef56:	outs   dx,BYTE PTR ds:[esi]
  41ef57:	mov    ds:0xf12f10e7,al
  41ef5c:	sbb    DWORD PTR [edx+0x67d68a77],ebp
  41ef62:	inc    ebp
  41ef63:	js     0x41eefc
  41ef65:	repz arpl WORD PTR [esi],ax
  41ef68:	add    DWORD PTR ds:0xf9614ce8,0xffffffbe
  41ef6f:	xchg   ecx,eax
  41ef70:	push   ss
  41ef71:	or     edx,DWORD PTR [edi]
  41ef73:	inc    ebx
  41ef74:	mov    al,ds:0xe760a008
  41ef79:	mov    ebp,0x82a79d96
  41ef7e:	ret    0x78e6
  41ef81:	mov    ah,0x18
  41ef83:	shl    DWORD PTR [ebx+ecx*4+0x65bca904],0x32
  41ef8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef8c:	mov    cl,0x17
  41ef8e:	dec    ebp
  41ef8f:	es sbb eax,0x7a7e8
  41ef95:	sar    esi,cl
  41ef97:	pushf  
  41ef98:	mov    ebp,0xeb8f55c6
  41ef9d:	jns    0x41effd
  41ef9f:	jmp    0x44cf:0x865cf475
  41efa6:	push   ss
  41efa7:	and    DWORD PTR [edx],0x5d
  41efaa:	pusha  
  41efab:	mov    ch,0x7f
  41efad:	jb     0x41efd3
  41efaf:	mov    ?,WORD PTR [ecx-0x777e28ba]
  41efb5:	mov    ds:0xf1ac3541,al
  41efba:	(bad)  [ebx-0x27]
  41efbd:	jns    0x41ef5b
  41efbf:	hlt    
  41efc0:	pusha  
  41efc1:	in     eax,0xb7
  41efc3:	cmp    eax,DWORD PTR [edi+0x179c8881]
  41efc9:	jbe    0x41efa5
  41efcb:	ret    
  41efcc:	adc    ah,BYTE PTR [eax-0x7cc6cda4]
  41efd2:	cdq    
  41efd3:	and    edx,DWORD PTR [edi-0x47c57a86]
  41efd9:	push   0xffffffc0
  41efdb:	push   edi
  41efdc:	sti    
  41efdd:	mov    BYTE PTR [ecx-0x4c467985],ah
  41efe3:	sar    DWORD PTR [esi],cl
  41efe5:	loope  0x41ef9f
  41efe7:	jmp    0xc6f40f73
  41efec:	or     ebp,DWORD PTR [ecx-0x74c0e7a5]
  41eff2:	xchg   ebp,eax
  41eff3:	mov    al,0xfe
  41eff5:	(bad)  
  41eff6:	push   DWORD PTR ds:0xcb79b576
  41effc:	xor    edx,0x9c2b8ae8
  41f002:	mov    cl,0x2
  41f004:	call   0x408bb8
  41f009:	mov    esi,eax
  41f00b:	mov    edi,edx
  41f00d:	mov    eax,DWORD PTR [ebp-0x154]
  41f013:	mov    edx,DWORD PTR [ebp-0x150]
  41f019:	xor    eax,0xcb79b576
  41f01e:	xor    edx,0x9c2b8ae8
  41f024:	mov    cl,0x3e
  41f026:	call   0x4223f1
  41f02b:	or     esi,eax
  41f02d:	or     edi,edx
  41f02f:	mov    eax,DWORD PTR [ebp-0x160]
  41f035:	imul   esi,eax
  41f038:	add    esi,DWORD PTR [ebp-0x170]
  41f03e:	mov    DWORD PTR [ebp-0x16c],esi
  41f044:	mov    eax,DWORD PTR [ebp-0x16c]
  41f04a:	mov    DWORD PTR [ebp-0x178],eax
  41f050:	jmp    0x41f19e
  41f055:	jmp    0x41f105
  41f05a:	mov    eax,DWORD PTR [ebp-0x154]
  41f060:	mov    edx,DWORD PTR [ebp-0x150]
  41f066:	xor    eax,0xcb79b576
  41f06b:	xor    edx,0x9c2b8ae8
  41f071:	mov    cl,0x2
  41f073:	call   0x408bb8
  41f078:	mov    esi,eax
  41f07a:	mov    edi,edx
  41f07c:	mov    eax,DWORD PTR [ebp-0x154]
  41f082:	mov    edx,DWORD PTR [ebp-0x150]
  41f088:	xor    eax,0xcb79b576
  41f08d:	xor    edx,0x9c2b8ae8
  41f093:	mov    cl,0x3e
  41f095:	call   0x4223f1
  41f09a:	or     esi,eax
  41f09c:	or     edi,edx
  41f09e:	mov    eax,DWORD PTR [ebp-0x15c]
  41f0a4:	mov    edx,DWORD PTR [ebp-0x158]
  41f0aa:	xor    eax,0xcb79b576
  41f0af:	xor    edx,0x9c2b8ae8
  41f0b5:	mov    cl,0x2
  41f0b7:	call   0x408bb8
  41f0bc:	mov    ebx,eax
  41f0be:	mov    eax,edx
  41f0c0:	mov    ecx,DWORD PTR [ebp-0x15c]
  41f0c6:	mov    edx,DWORD PTR [ebp-0x158]
  41f0cc:	xor    ecx,0xcb79b576
  41f0d2:	xor    edx,0x9c2b8ae8
  41f0d8:	mov    DWORD PTR [ebp-0x234],eax
  41f0de:	mov    eax,ecx
  41f0e0:	mov    cl,0x3e
  41f0e2:	call   0x4223f1
  41f0e7:	or     ebx,eax
  41f0e9:	mov    eax,DWORD PTR [ebp-0x234]
  41f0ef:	or     eax,edx
  41f0f1:	push   eax
  41f0f2:	push   ebx
  41f0f3:	push   edi
  41f0f4:	push   esi
  41f0f5:	call   0x41594e
  41f0fa:	mov    DWORD PTR [ebp-0x178],eax
  41f100:	jmp    0x41f19e
  41f105:	mov    eax,DWORD PTR [ebp-0x15c]
  41f10b:	mov    edx,DWORD PTR [ebp-0x158]
  41f111:	xor    eax,0xcb79b576
  41f116:	xor    edx,0x9c2b8ae8
  41f11c:	mov    cl,0x2
  41f11e:	call   0x408bb8
  41f123:	mov    esi,eax
  41f125:	mov    edi,edx
  41f127:	mov    eax,DWORD PTR [ebp-0x15c]
  41f12d:	mov    edx,DWORD PTR [ebp-0x158]
  41f133:	xor    eax,0xcb79b576
  41f138:	xor    edx,0x9c2b8ae8
  41f13e:	mov    cl,0x3e
  41f140:	call   0x4223f1
  41f145:	or     esi,eax
  41f147:	or     edi,edx
  41f149:	mov    DWORD PTR [ebp-0x178],esi
  41f14f:	jmp    0x41f19e
  41f154:	mov    eax,DWORD PTR [ebp-0x15c]
  41f15a:	mov    edx,DWORD PTR [ebp-0x158]
  41f160:	xor    eax,0xcb79b576
  41f165:	xor    edx,0x9c2b8ae8
  41f16b:	mov    cl,0x2
  41f16d:	call   0x408bb8
  41f172:	mov    esi,eax
  41f174:	mov    edi,edx
  41f176:	mov    eax,DWORD PTR [ebp-0x15c]
  41f17c:	mov    edx,DWORD PTR [ebp-0x158]
  41f182:	xor    eax,0xcb79b576
  41f187:	xor    edx,0x9c2b8ae8
  41f18d:	mov    cl,0x3e
  41f18f:	call   0x4223f1
  41f194:	or     esi,eax
  41f196:	or     edi,edx
  41f198:	mov    DWORD PTR [ebp-0x178],esi
  41f19e:	mov    ecx,DWORD PTR [ebp-0xd8]
  41f1a4:	mov    eax,0x459a
  41f1a9:	xor    edx,edx
  41f1ab:	div    ecx
  41f1ad:	jmp    0x41f594
  41f1b2:	push   edx
  41f1b3:	inc    ebx
  41f1b4:	sbb    eax,0xbcab304b
  41f1b9:	pop    esp
  41f1ba:	or     edi,DWORD PTR [edx]
  41f1bc:	cld    
  41f1bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1be:	shr    DWORD PTR [eax],1
  41f1c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1c1:	jecxz  0x41f183
  41f1c3:	jg     0x41f185
  41f1c5:	mov    esi,0xbebec44a
  41f1ca:	lds    ecx,FWORD PTR [edi+0x66]
  41f1cd:	xchg   edx,eax
  41f1ce:	fstp   TBYTE PTR [edx]
  41f1d0:	test   eax,0x9cb7485c
  41f1d5:	jmp    0xb330:0xa0e1bd73
  41f1dc:	dec    esp
  41f1dd:	aaa    
  41f1de:	pop    ebx
  41f1df:	add    dl,ch
  41f1e1:	les    esp,FWORD PTR [eax]
  41f1e3:	or     BYTE PTR [ecx],0xa7
  41f1e6:	adc    esp,DWORD PTR [ebp-0x27]
  41f1e9:	test   al,0x35
  41f1eb:	dec    ebx
  41f1ec:	jmp    0xfefc:0xf1ac07ec
  41f1f3:	sahf   
  41f1f4:	lods   al,BYTE PTR ds:[esi]
  41f1f5:	fisttp WORD PTR [edi]
  41f1f7:	lock dec edx
  41f1f9:	scas   al,BYTE PTR es:[edi]
  41f1fa:	(bad)  
  41f1fc:	xchg   ecx,eax
  41f1fd:	shl    BYTE PTR [esi],cl
  41f1ff:	or     BYTE PTR ds:0x889806d8,ah
  41f205:	enter  0x543c,0xa5
  41f209:	xchg   ebx,eax
  41f20a:	in     al,0x95
  41f20c:	into   
  41f20d:	mov    bh,0xf3
  41f20f:	pop    edi
  41f210:	pop    esp
  41f211:	and    dl,al
  41f213:	and    BYTE PTR [edx+0x276085ba],ch
  41f219:	into   
  41f21a:	(bad)  
  41f21b:	push   esp
  41f21c:	outs   dx,BYTE PTR ds:[esi]
  41f21d:	pop    ss
  41f21e:	pop    ecx
  41f21f:	aad    0xb6
  41f221:	dec    ebp
  41f222:	scas   al,BYTE PTR es:[edi]
  41f223:	outs   dx,BYTE PTR ds:[esi]
  41f224:	inc    ebx
  41f225:	push   es
  41f226:	pop    eax
  41f227:	lea    eax,[edx+0x187c1245]
  41f22d:	not    eax
  41f22f:	and    dl,BYTE PTR [esi-0x16]
  41f232:	sbb    al,0xa8
  41f234:	repz mov ebp,0xc86c949
  41f23a:	lods   al,BYTE PTR ds:[esi]
  41f23b:	sbb    edi,edi
  41f23d:	ds pop ebp
  41f23f:	push   0xf
  41f241:	push   edx
  41f242:	inc    BYTE PTR ds:0xd6861367
  41f248:	(bad)  
  41f249:	test   BYTE PTR gs:[ecx+0x51],ch
  41f24d:	push   ecx
  41f24e:	outs   dx,BYTE PTR ds:[esi]
  41f24f:	addr16 pop ebp
  41f251:	xor    dh,BYTE PTR [ecx+0x7360e5f]
  41f257:	mov    ah,0x46
  41f259:	into   
  41f25a:	pop    esp
  41f25b:	cmp    dx,cx
  41f25e:	(bad)  
  41f25f:	push   esp
  41f260:	cli    
  41f261:	jl     0x41f227
  41f263:	jns    0x41f233
  41f265:	(bad)  
  41f266:	aas    
  41f267:	mov    eax,ds:0xe154e5d9
  41f26c:	mov    dl,0xe
  41f26e:	ret    
  41f26f:	das    
  41f270:	fnstsw WORD PTR [edx-0x36523078]
  41f276:	enter  0x69a7,0x22
  41f27a:	stos   BYTE PTR es:[edi],al
  41f27b:	ficomp DWORD PTR [esi-0xb4d2ab3]
  41f281:	jl     0x41f27a
  41f283:	sbb    BYTE PTR [ebx+0x231b625f],ah
  41f289:	cmp    eax,0x6d4b6469
  41f28e:	repnz mov esi,0x49b3fea3
  41f294:	shl    DWORD PTR [edx+0x30],1
  41f297:	enter  0x1ac3,0xa4
  41f29b:	lods   al,BYTE PTR ds:[esi]
  41f29c:	outs   dx,DWORD PTR ds:[esi]
  41f29d:	test   dl,0xcf
  41f2a0:	sub    esp,edi
  41f2a2:	jmp    0x41f2d5
  41f2a4:	lea    esp,[edx*8-0x18c24356]
  41f2ab:	es enter 0xdb0d,0x5a
  41f2b0:	ins    BYTE PTR es:[edi],dx
  41f2b1:	fisubr DWORD PTR [eax]
  41f2b3:	push   eax
  41f2b4:	jmp    0x41f290
  41f2b6:	jp     0x41f314
  41f2b8:	add    edi,0x58
  41f2bb:	adc    BYTE PTR [ecx+ecx*4],0xb2
  41f2bf:	sub    DWORD PTR [ecx-0x47],edx
  41f2c2:	fisub  DWORD PTR [eax-0x8]
  41f2c5:	dec    ebp
  41f2c6:	retf   0x7469
  41f2c9:	add    DWORD PTR [edi+0x513eb51a],edx
  41f2cf:	or     dl,bh
  41f2d1:	dec    esp
  41f2d2:	ins    BYTE PTR es:[edi],dx
  41f2d3:	xchg   BYTE PTR [edx],dl
  41f2d5:	fimul  DWORD PTR [esi+0x2e]
  41f2d8:	popa   
  41f2d9:	mov    ebx,0x1cb6f9b6
  41f2de:	pop    eax
  41f2df:	das    
  41f2e0:	lods   al,BYTE PTR ds:[esi]
  41f2e1:	test   DWORD PTR [ebp+edi*1+0x1d1d3847],0x2adee865
  41f2ec:	test   BYTE PTR [ecx-0x3f9dd4cb],cl
  41f2f2:	test   dl,al
  41f2f4:	pop    ebx
  41f2f5:	aaa    
  41f2f6:	cmp    dl,0x35
  41f2f9:	clc    
  41f2fa:	push   ds
  41f2fb:	inc    esi
  41f2fc:	mov    bl,0x45
  41f2fe:	mov    ds:0x97b08fca,eax
  41f303:	pop    edx
  41f304:	loopne 0x41f2fd
  41f306:	test   edi,eax
  41f308:	push   edi
  41f309:	pusha  
  41f30a:	cmp    ebx,edi
  41f30c:	int    0x32
  41f30e:	clc    
  41f30f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f310:	popa   
  41f311:	enter  0x9202,0x8b
  41f315:	int    0xe
  41f317:	jmp    DWORD PTR [edi+edx*4]
  41f31a:	rcr    BYTE PTR [ecx],1
  41f31c:	test   DWORD PTR [ebp+0x3f],esi
  41f31f:	xchg   ebx,eax
  41f320:	push   ss
  41f321:	push   ecx
  41f322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f323:	fnsave [ebx+0x6b56a25]
  41f329:	pop    ebx
  41f32a:	xchg   esi,eax
  41f32b:	pop    ecx
  41f32c:	mov    edx,0xe24520a1
  41f331:	jmp    0x41f327
  41f333:	retf   
  41f334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f335:	js     0x41f330
  41f337:	inc    edx
  41f338:	(bad)  
  41f339:	sti    
  41f33a:	or     BYTE PTR [edx-0x69f21b52],0xd1
  41f341:	pop    ds
  41f342:	sbb    eax,0x76dcd854
  41f347:	hlt    
  41f348:	pop    esp
  41f349:	mov    ecx,0xada26ec4
  41f34e:	test   eax,0x6176533c
  41f353:	mov    ebx,0x54275877
  41f358:	fsubr  QWORD PTR [ecx+0x7b]
  41f35b:	mov    ebx,0xd8a46fa3
  41f360:	and    DWORD PTR [esi],edi
  41f362:	dec    esi
  41f363:	sub    eax,0x13295f85
  41f368:	loopne 0x41f3b6
  41f36a:	out    0x4c,eax
  41f36c:	sub    eax,0x781755f0
  41f371:	mov    ah,0xd6
  41f373:	les    ecx,FWORD PTR [ebx+0x79]
  41f376:	iret   
  41f377:	not    BYTE PTR [esp+ebx*4+0x74]
  41f37b:	add    DWORD PTR [edi-0x4d],0xfffffffd
  41f37f:	sbb    bl,ah
  41f381:	jle    0x41f3a1
  41f383:	ret    0x9f21
  41f386:	fld    DWORD PTR [edx-0x762e415d]
  41f38c:	jae    0x41f3f4
  41f38e:	sub    dh,BYTE PTR [edx+eax*1+0x1cd48814]
  41f395:	and    al,0x78
  41f397:	icebp  
  41f398:	jne    0x41f3a5
  41f39a:	xchg   ebx,eax
  41f39b:	(bad)  
  41f39d:	das    
  41f39e:	pop    ds
  41f39f:	iret   
  41f3a0:	stos   BYTE PTR es:[edi],al
  41f3a1:	sub    eax,0x4d79a9eb
  41f3a6:	jmp    0x41f372
  41f3a8:	mov    eax,ds:0x23b91a6f
  41f3ad:	mov    dl,0x5
  41f3af:	inc    esi
  41f3b0:	cld    
  41f3b1:	fmul   st,st(5)
  41f3b3:	jno    0x41f3a8
  41f3b5:	leave  
  41f3b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3b7:	jbe    0x41f3f8
  41f3b9:	ins    BYTE PTR es:[edi],dx
  41f3ba:	mov    dh,0xd8
  41f3bc:	fmul   DWORD PTR [ecx+0x56]
  41f3bf:	sbb    ch,BYTE PTR [edx-0x6e8896fa]
  41f3c5:	mov    DWORD PTR [ecx+0x15],ecx
  41f3c8:	jnp    0x41f3b1
  41f3ca:	jmp    FWORD PTR [eax-0x5a]
  41f3cd:	jle    0x41f407
  41f3cf:	clc    
  41f3d0:	loope  0x41f435
  41f3d2:	and    eax,0x814de3b6
  41f3d7:	(bad)  
  41f3d8:	into   
  41f3d9:	(bad)  
  41f3db:	call   0xa356:0xfd00c1c2
  41f3e2:	mov    dh,BYTE PTR ss:[ebp-0x5c626bf]
  41f3e9:	xlat   BYTE PTR ds:[ebx]
  41f3ea:	dec    edi
  41f3eb:	sbb    al,0xcc
  41f3ed:	adc    BYTE PTR [ecx+0x30cb9b16],bl
  41f3f3:	aam    0x37
  41f3f5:	hlt    
  41f3f6:	mov    al,0xd3
  41f3f8:	cld    
  41f3f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3fa:	bound  edx,QWORD PTR [edi+0x7bf3d84f]
  41f400:	push   es
  41f401:	(bad)  
  41f402:	sub    ah,ch
  41f404:	push   ecx
  41f405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f406:	fimul  DWORD PTR [edi+0x72]
  41f409:	aas    
  41f40a:	mov    esi,0x8ddcf980
  41f40f:	das    
  41f410:	push   ds
  41f411:	(bad)  
  41f412:	jl     0x41f46e
  41f414:	in     al,0xe2
  41f416:	adc    al,0x88
  41f418:	les    ebx,FWORD PTR [ebx]
  41f41a:	mov    DWORD PTR [esi+0x2e],ebp
  41f41d:	mov    BYTE PTR [esi],dh
  41f41f:	or     BYTE PTR [esi-0x44d1acbc],0x33
  41f426:	pop    ebp
  41f427:	jecxz  0x41f455
  41f429:	mov    dh,BYTE PTR [esi-0x1b]
  41f42c:	push   ss
  41f42d:	jp     0x41f3dd
  41f42f:	iret   
  41f430:	out    dx,eax
  41f431:	xchg   edx,eax
  41f432:	jb     0x41f3e2
  41f434:	inc    ecx
  41f435:	sub    al,0x50
  41f437:	loope  0x41f47a
  41f439:	inc    edx
  41f43a:	std    
  41f43b:	push   esi
  41f43c:	fisttp QWORD PTR [ebp+0x1]
  41f43f:	in     eax,dx
  41f440:	and    eax,0x46aa47cb
  41f445:	pop    esp
  41f446:	pop    ss
  41f447:	and    DWORD PTR [edi+0x76],ecx
  41f44a:	fdivrp st(1),st
  41f44c:	sbb    ecx,ebx
  41f44e:	popf   
  41f44f:	xor    ebp,ebx
  41f451:	lods   al,BYTE PTR ds:[esi]
  41f452:	ret    0x8408
  41f455:	rcl    DWORD PTR ds:0x8f2381c3,cl
  41f45b:	ins    BYTE PTR es:[edi],dx
  41f45c:	hlt    
  41f45d:	int    0x8f
  41f45f:	inc    esp
  41f460:	stos   BYTE PTR es:[edi],al
  41f461:	jno    0x41f438
  41f463:	cmp    DWORD PTR [eax-0x7],0x18efaca3
  41f46a:	ds dec esp
  41f46c:	int    0xa9
  41f46e:	xlat   BYTE PTR ds:[ebx]
  41f46f:	cmc    
  41f470:	pop    edi
  41f471:	scas   eax,DWORD PTR es:[edi]
  41f472:	gs jmp 0x28739d5
  41f478:	loopne 0x41f4c9
  41f47a:	xchg   esi,eax
  41f47b:	test   BYTE PTR [ebx+ebp*8+0x42],dl
  41f47f:	rol    BYTE PTR [edx-0x23fb40e2],cl
  41f485:	loopne 0x41f4de
  41f487:	mov    al,BYTE PTR [esi+0x11c04044]
  41f48d:	pop    ebx
  41f48e:	pop    edx
  41f48f:	pop    edi
  41f490:	adc    al,0x8c
  41f492:	xor    al,0x39
  41f494:	jno    0x41f507
  41f496:	stos   DWORD PTR es:[edi],eax
  41f497:	aam    0x61
  41f499:	adc    DWORD PTR [esi-0x24],esi
  41f49c:	mov    BYTE PTR [ecx],bl
  41f49e:	push   ds
  41f49f:	mov    ah,0x9c
  41f4a1:	push   esp
  41f4a2:	xor    DWORD PTR [esi+0x2c],esi
  41f4a5:	push   ds
  41f4a6:	ret    0xd3e4
  41f4a9:	or     edi,ebp
  41f4ab:	xchg   esp,eax
  41f4ac:	xchg   ebx,eax
  41f4ad:	dec    ebx
  41f4ae:	mov    al,0x18
  41f4b0:	mov    eax,0xd02018b3
  41f4b5:	popa   
  41f4b6:	int3   
  41f4b7:	lods   al,BYTE PTR ds:[esi]
  41f4b8:	push   ss
  41f4b9:	cs and BYTE PTR ss:[ecx],0xcb
  41f4be:	dec    ebp
  41f4bf:	xlat   BYTE PTR ds:[ebx]
  41f4c0:	mov    WORD PTR [esp+eax*8-0x73188151],ds
  41f4c7:	test   DWORD PTR [ebx],esp
  41f4c9:	sub    ebp,DWORD PTR [ebp-0x67]
  41f4cc:	dec    edx
  41f4cd:	inc    edi
  41f4ce:	sub    DWORD PTR [ebx],esi
  41f4d0:	stos   BYTE PTR es:[edi],al
  41f4d1:	xor    DWORD PTR [ebp-0x43],esi
  41f4d4:	mov    bh,0xc1
  41f4d6:	adc    al,0xab
  41f4d8:	aas    
  41f4d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4da:	push   eax
  41f4db:	mov    ebx,0x71c1c3a9
  41f4e0:	xchg   ecx,eax
  41f4e1:	cmp    bl,BYTE PTR [edx]
  41f4e3:	mov    cl,0xd7
  41f4e5:	xor    ch,bl
  41f4e7:	or     DWORD PTR [edx-0x50c0a300],ebp
  41f4ed:	outs   dx,DWORD PTR ds:[esi]
  41f4ee:	adc    eax,0xfdfafda
  41f4f3:	jbe    0x41f494
  41f4f5:	retf   
  41f4f6:	les    ebp,FWORD PTR ds:0x73ca6786
  41f4fc:	dec    eax
  41f4fd:	cmp    eax,0xce82268e
  41f502:	pusha  
  41f503:	cmp    DWORD PTR [ecx-0x77],ebp
  41f506:	std    
  41f507:	lahf   
  41f508:	es and al,0xa3
  41f50b:	stos   DWORD PTR es:[edi],eax
  41f50c:	or     BYTE PTR [esi+0x6c97531],ch
  41f512:	dec    ebp
  41f513:	jne    0x41f4e5
  41f515:	jmp    0x41f49a
  41f517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f518:	xchg   edi,eax
  41f519:	pop    ecx
  41f51a:	and    ch,BYTE PTR [esi-0x2c]
  41f51d:	div    BYTE PTR [ecx]
  41f51f:	das    
  41f520:	sub    eax,0x3c21cef
  41f525:	sub    ah,BYTE PTR [ecx-0x52]
  41f528:	pop    ss
  41f529:	xchg   ebx,eax
  41f52a:	adc    DWORD PTR [ecx+0x2f342d2],ecx
  41f530:	sbb    BYTE PTR [eax-0x60cbae86],bh
  41f536:	aaa    
  41f537:	add    al,0x6
  41f539:	loopne 0x41f54f
  41f53b:	in     eax,0x98
  41f53d:	outs   dx,DWORD PTR ds:[esi]
  41f53e:	or     eax,0x4240885d
  41f543:	jle    0x41f4f3
  41f545:	and    al,0xcb
  41f547:	pop    ebp
  41f548:	or     eax,0x2458d129
  41f54d:	xchg   DWORD PTR [esi-0x33],edx
  41f550:	adc    eax,0x47b2f528
  41f555:	adc    esi,esp
  41f557:	pop    ss
  41f558:	out    dx,eax
  41f559:	mov    ebx,0xe6df6147
  41f55e:	push   cs
  41f55f:	cdq    
  41f560:	mov    esp,ebp
  41f562:	mov    cl,0x7a
  41f564:	cmp    eax,0x7705d2ca
  41f569:	mov    al,ds:0x4c18f9e8
  41f56e:	enter  0x1ea1,0x7
  41f572:	mov    eax,edx
  41f574:	(bad)  
  41f575:	enter  0x921a,0x6e
  41f579:	test   al,0xcf
  41f57b:	push   ss
  41f57c:	or     BYTE PTR [esi],cl
  41f57e:	add    BYTE PTR [eax+0x70],dh
  41f581:	pushf  
  41f582:	cmc    
  41f583:	test   al,0x18
  41f585:	adc    BYTE PTR ds:0xe4492c0,cl
  41f58b:	cwde   
  41f58c:	add    BYTE PTR [eax+edx*1-0x400bfa99],bh
  41f593:	cmp    ecx,DWORD PTR [ebx-0xdb73]
  41f599:	jmp    DWORD PTR [ebx]
  41f59b:	rol    DWORD PTR [ebx],0x45
  41f59e:	mov    esp,0xff208d8b
  41f5a3:	(bad)  
  41f5a4:	dec    DWORD PTR [ebp+0x272f0884]
  41f5aa:	add    BYTE PTR [eax],al
  41f5ac:	xor    eax,0x1080c
  41f5b1:	add    eax,DWORD PTR [ebp-0x178]
  41f5b7:	mov    DWORD PTR [ebp-0xe8],eax
  41f5bd:	mov    DWORD PTR [ebp-0xc],0x5950
  41f5c4:	mov    DWORD PTR [ebp-0xf8],0x4964
  41f5ce:	mov    DWORD PTR [ebp-0x130],0x3
  41f5d8:	mov    DWORD PTR [ebp-0x20],0x2df9
  41f5df:	mov    DWORD PTR [ebp-0x8],0x4524
  41f5e6:	mov    DWORD PTR [ebp-0xd4],0x637e
  41f5f0:	mov    DWORD PTR [ebp-0x110],0x38c8
  41f5fa:	mov    DWORD PTR [ebp-0xa4],0x7118
  41f604:	mov    DWORD PTR [ebp-0xa0],0xaf6
  41f60e:	mov    DWORD PTR [ebp-0x10c],0x3315
  41f618:	mov    eax,DWORD PTR [ebp-0xf8]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x130]
  41f624:	xor    edx,edx
  41f626:	div    ecx
  41f628:	add    eax,0x454e
  41f62d:	mov    ecx,DWORD PTR [ebp-0xc]
  41f630:	and    eax,ecx
  41f632:	xor    eax,0x5940
  41f637:	add    eax,DWORD PTR [ebp+0x8]
  41f63a:	mov    ecx,DWORD PTR [ebp-0x110]
  41f640:	mov    edx,DWORD PTR [ebp-0xa4]
  41f646:	sub    ecx,edx
  41f648:	mov    edx,DWORD PTR [ebp-0xd4]
  41f64e:	or     ecx,edx
  41f650:	mov    edx,DWORD PTR [ebp-0x8]
  41f653:	and    ecx,edx
  41f655:	jmp    0x41fa3c
  41f65a:	cmp    DWORD PTR [ebx-0x6397a419],esi
  41f660:	mov    edx,0x50f9fab3
  41f665:	sahf   
  41f666:	sub    dl,BYTE PTR [edx]
  41f668:	pop    eax
  41f669:	ror    DWORD PTR [ebp+eax*4-0x40],1
  41f66d:	mov    esi,0xbebec44a
  41f672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f673:	daa    
  41f674:	sbb    eax,0x3b1acd9
  41f679:	popa   
  41f67a:	call   0x9672:0xa89940e4
  41f681:	pusha  
  41f682:	push   edx
  41f683:	inc    BYTE PTR [ebx]
  41f685:	sbb    al,0x45
  41f687:	nop
  41f688:	cmp    al,0x62
  41f68a:	fcom   st(5)
  41f68c:	pusha  
  41f68d:	stc    
  41f68e:	fisub  DWORD PTR [ebx+0x367de8b0]
  41f694:	arpl   WORD PTR [ecx+0x6c],ax
  41f697:	xor    dh,0xa9
  41f69a:	loop   0x41f646
  41f69c:	mov    edx,0x29467f65
  41f6a1:	pop    edi
  41f6a2:	fmul   st(5),st
  41f6a4:	cmp    eax,0xd1a40c57
  41f6a9:	mov    esi,0xcd70914
  41f6ae:	pop    ebp
  41f6af:	cmp    al,0x3e
  41f6b1:	mov    edi,0x161a2594
  41f6b6:	jo     0x41f647
  41f6b8:	into   
  41f6b9:	das    
  41f6ba:	push   ebx
  41f6bb:	out    0xc9,al
  41f6bd:	bnd cs jae 0x41f72b
  41f6c1:	clc    
  41f6c2:	cmp    dl,BYTE PTR [ebx+ebp*1+0x4cbc86d5]
  41f6c9:	or     DWORD PTR [ebp+0x7dbb9dc5],ecx
  41f6cf:	jb     0x41f6a9
  41f6d1:	aaa    
  41f6d2:	mov    al,0xf4
  41f6d4:	repz cld 
  41f6d6:	pop    ebp
  41f6d7:	xchg   ebp,eax
  41f6d8:	push   es
  41f6d9:	sbb    DWORD PTR [edi-0x3f],0xffffffe7
  41f6dd:	hlt    
  41f6de:	pop    ecx
  41f6df:	leave  
  41f6e0:	enter  0xb591,0xd1
  41f6e4:	xchg   ebx,eax
  41f6e5:	popf   
  41f6e6:	xchg   ecx,eax
  41f6e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6e8:	fcmovnb st,st(4)
  41f6ea:	dec    BYTE PTR [esi+eax*8+0x2aa7bdb3]
  41f6f1:	jl     0x41f74d
  41f6f3:	ja     0x41f6ec
  41f6f5:	cwde   
  41f6f6:	ret    
  41f6f7:	inc    ebp
  41f6f8:	mov    esi,0x6c60e680
  41f6fd:	dec    ecx
  41f6fe:	push   ss
  41f6ff:	push   ebx
  41f700:	mov    eax,esi
  41f702:	pop    ecx
  41f703:	push   ecx
  41f704:	ror    bl,cl
  41f706:	mov    esi,0xe8fa3554
  41f70b:	xchg   edi,eax
  41f70c:	ror    DWORD PTR [ebx],1
  41f70e:	fistp  DWORD PTR [edi]
  41f710:	aad    0x98
  41f712:	mov    ah,0x92
  41f714:	push   edi
  41f715:	ins    DWORD PTR es:[edi],dx
  41f716:	cmp    eax,DWORD PTR [ecx+0x423bbe73]
  41f71c:	cmp    eax,0xdc9c2c73
  41f721:	xor    eax,0xafa09c27
  41f726:	mov    WORD PTR [ebp+ecx*2-0x70],fs
  41f72a:	mov    ecx,0x9bbbdf28
  41f72f:	repz inc ecx
  41f731:	aad    0x98
  41f733:	xchg   ecx,eax
  41f734:	or     al,0xd3
  41f736:	fild   WORD PTR [eax]
  41f738:	mov    ?,WORD PTR [eax+0xc]
  41f73b:	(bad)  
  41f73c:	push   ebx
  41f73d:	repnz pop ebx
  41f73f:	add    dl,BYTE PTR ds:0xfa8be013
  41f745:	fadd   DWORD PTR [eax-0x71]
  41f748:	popa   
  41f749:	adc    bl,ch
  41f74b:	xchg   esi,eax
  41f74c:	add    DWORD PTR [ecx+0x42538a9f],edx
  41f752:	cmp    DWORD PTR [edi+0xf],0xffffff8c
  41f756:	mov    eax,0xf5b2a2b6
  41f75b:	stos   DWORD PTR es:[edi],eax
  41f75c:	cdq    
  41f75d:	test   bl,cl
  41f75f:	(bad)  
  41f760:	bsf    edi,DWORD PTR [ebx+0x4b4a114b]
  41f767:	test   eax,0x81f84f6a
  41f76c:	cmp    ebp,DWORD PTR [esi-0x2c067ff5]
  41f772:	jge    0x41f79b
  41f774:	cmp    esi,ebp
  41f776:	ja     0x41f71f
  41f778:	xor    BYTE PTR [edi-0x2b],dl
  41f77b:	jbe    0x41f708
  41f77d:	imul   esi,edi,0x7e
  41f780:	pop    edx
  41f781:	sub    eax,0xd6a3dbe4
  41f786:	sub    DWORD PTR [esi+eiz*8-0x1f],ebp
  41f78a:	(bad)  
  41f78b:	(bad)
  41f78f:	and    BYTE PTR [edx],al
  41f791:	add    ecx,DWORD PTR [esi+0x4c]
  41f794:	jns    0x41f73c
  41f796:	inc    ebp
  41f797:	data16 add al,0x9
  41f79a:	mov    dl,0x16
  41f79c:	(bad)  
  41f79d:	das    
  41f79e:	xchg   edi,eax
  41f79f:	popf   
  41f7a0:	sbb    edx,DWORD PTR [edi-0x3]
  41f7a3:	addr16 dec ecx
  41f7a5:	adc    al,0xbb
  41f7a7:	mov    bh,BYTE PTR [ebx+0xa]
  41f7aa:	call   0xd9d0:0xb2e9e81f
  41f7b1:	enter  0xbd4c,0xa9
  41f7b5:	mov    ah,0xa9
  41f7b7:	das    
  41f7b8:	fstp   st(6)
  41f7ba:	(bad)  
  41f7bb:	aad    0xd1
  41f7bd:	lahf   
  41f7be:	add    bh,BYTE PTR [edi]
  41f7c0:	in     eax,0xad
  41f7c2:	mov    al,ds:0x1bc4df71
  41f7c7:	(bad)  
  41f7c8:	(bad)  ds:0x7bc
  41f7cd:	fwait
  41f7ce:	add    eax,0x9474e79f
  41f7d3:	loopne 0x41f7c9
  41f7d5:	sub    eax,DWORD PTR [esi]
  41f7d7:	push   edi
  41f7d8:	sbb    eax,0x4a282e93
  41f7dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7de:	aaa    
  41f7df:	jmp    0x83cf:0xd551a74c
  41f7e6:	mov    edi,0x9dee90c7
  41f7eb:	pushf  
  41f7ec:	(bad)  
  41f7ed:	loop   0x41f7cd
  41f7ef:	stc    
  41f7f0:	jge    0x41f77d
  41f7f2:	mov    ch,0x65
  41f7f4:	add    DWORD PTR [ebp-0x179513c7],eax
  41f7fa:	mov    dh,0x35
  41f7fc:	lea    eax,[esi]
  41f7fe:	or     edx,DWORD PTR [edi-0x60]
  41f801:	push   esi
  41f802:	jns    0x41f849
  41f804:	pop    esp
  41f805:	adc    edx,esp
  41f807:	xor    edi,0xb10387b3
  41f80d:	lods   eax,DWORD PTR ds:[esi]
  41f80e:	mov    ebx,0x30318f92
  41f813:	outs   dx,DWORD PTR ds:[esi]
  41f814:	pop    esi
  41f815:	and    esi,esi
  41f817:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f818:	mov    WORD PTR [ecx+0x1c2522a9],ss
  41f81e:	bound  ecx,QWORD PTR [esi-0x7e05fef2]
  41f824:	inc    eax
  41f825:	pop    ecx
  41f826:	pop    edx
  41f827:	scas   eax,DWORD PTR es:[edi]
  41f828:	mov    eax,0x6a7a7ee7
  41f82d:	fxch   st(2)
  41f82f:	jb     0x41f86f
  41f831:	mov    ch,0x23
  41f833:	in     al,dx
  41f834:	pop    ss
  41f835:	lock dec ebp
  41f837:	xchg   ebx,eax
  41f838:	inc    esp
  41f839:	retf   
  41f83a:	cli    
  41f83b:	jg     0x41f83f
  41f83d:	arpl   WORD PTR [esi+ebp*1+0x44],di
  41f841:	in     eax,0xd7
  41f843:	je     0x41f88a
  41f845:	push   ss
  41f846:	call   0xc4a0ff3f
  41f84b:	xchg   DWORD PTR [ebp+0x55],eax
  41f84e:	xor    eax,0x7de4d98b
  41f853:	icebp  
  41f854:	pop    edi
  41f855:	loop   0x41f812
  41f857:	xor    esi,ebp
  41f859:	xor    dh,BYTE PTR [eax]
  41f85b:	(bad)  
  41f85c:	push   DWORD PTR [eax-0x26]
  41f85f:	rol    dl,1
  41f861:	fucomi st,st(1)
  41f863:	aas    
  41f864:	jle    0x41f7f1
  41f866:	xor    ah,bl
  41f868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f869:	push   0xd5bf5e6d
  41f86e:	pop    ecx
  41f86f:	xchg   ebx,eax
  41f870:	xchg   esi,eax
  41f871:	jns    0x41f815
  41f873:	xor    DWORD PTR [esi],ebx
  41f875:	stos   DWORD PTR es:[edi],eax
  41f876:	jle    0x41f84f
  41f878:	xlat   BYTE PTR ds:[ebx]
  41f879:	retf   0x1751
  41f87c:	mov    ebp,0xabb2c79d
  41f881:	sub    eax,0x39da05cf
  41f886:	mov    ecx,0x146e0fe7
  41f88b:	push   es
  41f88c:	mov    esi,0x5900afc2
  41f891:	int    0x11
  41f893:	adc    al,0x1f
  41f895:	sti    
  41f896:	dec    edx
  41f897:	lock lods eax,DWORD PTR ds:[esi]
  41f899:	test   bh,ch
  41f89b:	aad    0xa2
  41f89d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f89e:	mov    eax,0xcd4d280e
  41f8a3:	jmp    0xc41c:0x664de14d
  41f8aa:	bound  ecx,QWORD PTR [eax]
  41f8ac:	fsub   st(1),st
  41f8ae:	sub    DWORD PTR [eax-0x5b],esi
  41f8b1:	sub    BYTE PTR [esi-0x65],bh
  41f8b4:	xchg   edi,eax
  41f8b5:	test   BYTE PTR [ebp+0x4e],dl
  41f8b8:	jne    0x41f8ae
  41f8ba:	dec    edi
  41f8bb:	dec    edi
  41f8bc:	jmp    0x41f8de
  41f8be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8bf:	outs   dx,BYTE PTR ds:[esi]
  41f8c0:	dec    ebp
  41f8c1:	xchg   esi,eax
  41f8c2:	popa   
  41f8c3:	mov    fs,WORD PTR [ebx]
  41f8c5:	call   0xa508:0xbe3e46c4
  41f8cc:	mov    bl,0x75
  41f8ce:	sar    BYTE PTR [eiz*4+0x4a8cc72a],1
  41f8d5:	push   ebp
  41f8d6:	fcom   DWORD PTR [edx+0x60]
  41f8d9:	sub    eax,0xb773f149
  41f8de:	ins    DWORD PTR es:[edi],dx
  41f8df:	add    al,0x12
  41f8e1:	popf   
  41f8e2:	xchg   BYTE PTR [edx+0x57282bac],bh
  41f8e8:	loopne 0x41f8f3
  41f8ea:	sub    ch,BYTE PTR [edi+0x67]
  41f8ed:	inc    ecx
  41f8ee:	add    ch,BYTE PTR [edx]
  41f8f0:	or     BYTE PTR [edx+0x29fa7a85],al
  41f8f6:	jnp    0x41f96e
  41f8f8:	or     eax,0xb23c1eee
  41f8fd:	mov    ecx,0x1f7a340a
  41f902:	pop    ebx
  41f903:	pusha  
  41f904:	mov    al,0x12
  41f906:	xchg   esi,eax
  41f907:	ret    0xe992
  41f90a:	xor    al,dl
  41f90c:	jae    0x41f960
  41f90e:	das    
  41f90f:	jp     0x41f927
  41f911:	popf   
  41f912:	sub    DWORD PTR [edi+0x5f],0xf04ff4d9
  41f919:	fs out 0xf5,al
  41f91c:	jecxz  0x41f8b4
  41f91e:	pop    ebp
  41f91f:	(bad)  
  41f920:	jae    0x41f976
  41f922:	fninit 
  41f924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f925:	out    dx,al
  41f926:	and    al,0xbc
  41f928:	push   ecx
  41f929:	cmp    al,0xaa
  41f92b:	jmp    0x46d56b72
  41f930:	call   0xebc0:0xb9ce5571
  41f937:	pop    esp
  41f938:	cmp    eax,0x894920ef
  41f93d:	lods   al,BYTE PTR cs:[esi]
  41f93f:	adc    al,0x6e
  41f941:	sub    bl,bl
  41f943:	xor    BYTE PTR ds:[eax+ecx*2+0x12b2e4c0],cl
  41f94b:	push   cs
  41f94c:	push   edx
  41f94d:	retf   0x625f
  41f950:	jp     0x41f92c
  41f952:	and    DWORD PTR [eax+esi*8-0x69fe17cf],0xc027d33
  41f95d:	fimul  DWORD PTR [ebp-0x758bdfdd]
  41f963:	retf   0xa759
  41f966:	retf   
  41f967:	stos   BYTE PTR es:[edi],al
  41f968:	inc    ebx
  41f969:	add    BYTE PTR [eax-0x1c],0xea
  41f96d:	inc    edx
  41f96e:	leave  
  41f96f:	push   eax
  41f970:	xchg   DWORD PTR gs:[esi+0x4daee442],edi
  41f977:	xor    eax,0x643c0761
  41f97c:	es cmp dh,bh
  41f97f:	mov    esp,0x3329392e
  41f984:	add    BYTE PTR [edi+edi*1],ch
  41f987:	xchg   ebx,eax
  41f988:	inc    eax
  41f989:	bound  esi,QWORD PTR [edx-0x4f]
  41f98c:	fcmovu st,st(3)
  41f98e:	mov    eax,0x5ef3a061
  41f993:	sti    
  41f994:	scas   al,BYTE PTR es:[edi]
  41f995:	jnp    0x41f9e7
  41f997:	lods   al,BYTE PTR ds:[esi]
  41f998:	stos   BYTE PTR es:[edi],al
  41f999:	push   es
  41f99a:	xchg   ebp,eax
  41f99b:	xlat   BYTE PTR ds:[ebx]
  41f99c:	xchg   edx,eax
  41f99d:	jb     0x41f943
  41f99f:	(bad)  
  41f9a0:	dec    ecx
  41f9a1:	test   BYTE PTR [edi+0x65088a81],bh
  41f9a7:	lods   al,BYTE PTR ds:[esi]
  41f9a8:	lods   eax,DWORD PTR ds:[esi]
  41f9a9:	mov    cl,0x25
  41f9ab:	push   ds
  41f9ac:	sbb    ebp,edi
  41f9ae:	sbb    BYTE PTR [edx+eax*8],ch
  41f9b1:	cmp    BYTE PTR [ebp-0x66],dh
  41f9b4:	cld    
  41f9b5:	neg    DWORD PTR [ebp+eax*2+0x138cc2e6]
  41f9bc:	dec    ebx
  41f9bd:	pushf  
  41f9be:	aad    0x55
  41f9c0:	jecxz  0x41f995
  41f9c2:	cmp    DWORD PTR [eax-0x24df4c63],esi
  41f9c8:	mov    eax,0x724d323e
  41f9cd:	scas   al,BYTE PTR es:[edi]
  41f9ce:	aad    0xbb
  41f9d0:	icebp  
  41f9d1:	sahf   
  41f9d2:	push   ebp
  41f9d3:	lock xlat BYTE PTR ds:[ebx]
  41f9d5:	enter  0xa161,0xd2
  41f9d9:	fistp  WORD PTR [ebx+0x1]
  41f9dc:	adc    DWORD PTR [eax+eax*8],0xa58654cc
  41f9e3:	popf   
  41f9e4:	repz lds eax,FWORD PTR [eax+0x8]
  41f9e8:	or     BYTE PTR [eax-0x20ae96b1],0x1c
  41f9ef:	(bad)  
  41f9f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9f1:	nop
  41f9f2:	sbb    DWORD PTR [eax],ecx
  41f9f4:	pushf  
  41f9f5:	and    eax,0x79f9acf2
  41f9fa:	repz ret 
  41f9fc:	xchg   ebp,eax
  41f9fd:	adc    dl,bh
  41f9ff:	and    DWORD PTR [ebx-0x67],ebp
  41fa02:	cmp    BYTE PTR [esi+eax*8+0x5576537d],al
  41fa09:	pop    esi
  41fa0a:	mov    ds:0x2910b08c,al
  41fa0f:	mov    al,0x4b
  41fa11:	or     DWORD PTR [ebx+ecx*8],ebx
  41fa14:	sub    DWORD PTR [edi],edx
  41fa16:	adc    ebp,DWORD PTR [edi+esi*2+0x17070939]
  41fa1d:	jmp    0x23df27a7
  41fa22:	cmp    DWORD PTR [edx+edx*8+0x209a4efb],ebx
  41fa29:	fcomp  DWORD PTR [edx+eax*4]
  41fa2c:	xor    eax,0x57e6e37e
  41fa31:	jmp    0x1b51:0xbf12e63a
  41fa38:	sbb    DWORD PTR [ecx+0x558b1b4f],ebx
  41fa3e:	loopne 0x41fa73
  41fa40:	retf   0x958b
  41fa43:	hlt    
  41fa44:	(bad)  
  41fa45:	(bad)  
  41fa46:	(bad)  
  41fa47:	mov    esi,0x180f
  41fa4c:	sub    esi,edx
  41fa4e:	mov    edx,DWORD PTR [ebp-0xa0]
  41fa54:	imul   esi,edx
  41fa57:	xor    esi,0x402b
  41fa5d:	xor    esi,0xfed78c17
  41fa63:	mov    edx,DWORD PTR [ebp-0xe8]
  41fa69:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  41fa70:	add    ecx,eax
  41fa72:	add    esi,ecx
  41fa74:	mov    DWORD PTR [ebp-0x38],esi
  41fa77:	mov    DWORD PTR [ebp-0x4],0x59a8
  41fa7e:	mov    DWORD PTR [ebp-0x30],0x7021
  41fa85:	mov    DWORD PTR [ebp-0xf4],0x6210
  41fa8f:	mov    DWORD PTR [ebp-0x58],0x73d5
  41fa96:	mov    DWORD PTR [ebp-0x124],0x1e7d
  41faa0:	mov    DWORD PTR [ebp-0x3c],0x3144
  41faa7:	mov    eax,DWORD PTR [ebp-0x30]
  41faaa:	xor    eax,0x75cb
  41faaf:	mov    ecx,DWORD PTR [ebp-0x4]
  41fab2:	imul   eax,ecx
  41fab5:	mov    ecx,DWORD PTR [ebp+0x8]
  41fab8:	lea    ecx,[ecx+eax*1-0x2123b90]
  41fabf:	mov    eax,DWORD PTR [ebp-0xf4]
  41fac5:	and    eax,0x6b34
  41faca:	and    eax,0x658d
  41facf:	xor    edx,edx
  41fad1:	push   0x6
  41fad3:	pop    esi
  41fad4:	div    esi
  41fad6:	imul   eax,eax,0x3fb9
  41fadc:	mov    edx,DWORD PTR [ebp-0x3c]
  41fadf:	and    edx,0x58c7
  41fae5:	mov    esi,DWORD PTR [ebp-0x124]
  41faeb:	or     edx,esi
  41faed:	add    edx,0x7a25
  41faf3:	imul   edx,edx,0x28d2
  41faf9:	mov    esi,DWORD PTR [ebp-0x58]
  41fafc:	xor    edx,esi
  41fafe:	xor    edx,0x1856f731
  41fb04:	mov    esi,DWORD PTR [ebp-0xe8]
  41fb0a:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  41fb11:	add    eax,ecx
  41fb13:	add    edx,eax
  41fb15:	mov    DWORD PTR [ebp-0xac],edx
  41fb1b:	mov    DWORD PTR [ebp-0x54],0x1
  41fb22:	mov    DWORD PTR [ebp-0x40],0x1ee8
  41fb29:	mov    DWORD PTR [ebp-0x1c],0x64d8
  41fb30:	mov    DWORD PTR [ebp-0xf0],0x5a06
  41fb3a:	mov    DWORD PTR [ebp-0x108],0x2eeb
  41fb44:	mov    DWORD PTR [ebp-0x104],0x2108
  41fb4e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fb51:	jmp    0x41ff38
  41fb56:	cwde   
  41fb57:	push   ebx
  41fb58:	popa   
  41fb59:	pop    edx
  41fb5a:	stos   BYTE PTR es:[edi],al
  41fb5b:	jl     0x41fb15
  41fb5d:	xchg   ebx,eax
  41fb5e:	mov    dl,0x3a
  41fb60:	repnz iret 
  41fb62:	repz fidivr WORD PTR [esi-0x31]
  41fb66:	xlat   BYTE PTR ds:[ebx]
  41fb67:	(bad)  
  41fb68:	sar    BYTE PTR [esi-0x41413bb6],0x3e
  41fb6f:	jl     0x41fb3a
  41fb71:	rcl    DWORD PTR [eax+0x6d],0xf3
  41fb75:	int3   
  41fb76:	push   ds
  41fb77:	cmp    ecx,0xfd28b801
  41fb7d:	jmp    0x41fb85
  41fb7f:	push   0x1c7c87a7
  41fb84:	int3   
  41fb85:	repnz scas al,BYTE PTR es:[edi]
  41fb87:	out    0x63,eax
  41fb89:	mov    dl,0xc3
  41fb8b:	(bad)  
  41fb8c:	fcom   st(4)
  41fb8e:	inc    edi
  41fb8f:	data16 stos BYTE PTR es:[edi],al
  41fb91:	or     DWORD PTR [ecx-0x1c],edx
  41fb94:	and    eax,0x64542a1e
  41fb99:	shl    BYTE PTR [edx+0x51],cl
  41fb9c:	popf   
  41fb9d:	mov    DWORD PTR [edi-0x974f40],edi
  41fba3:	rep lods ax,WORD PTR ds:[esi]
  41fba6:	test   DWORD PTR [eax+0x6268358],esi
  41fbac:	dec    ebx
  41fbad:	sbb    al,0x48
  41fbaf:	mov    BYTE PTR [ebx+0x1a],cl
  41fbb2:	std    
  41fbb3:	add    dl,ah
  41fbb5:	cmc    
  41fbb6:	mov    dl,0x65
  41fbb8:	lods   eax,DWORD PTR ds:[esi]
  41fbb9:	pushf  
  41fbba:	add    eax,0x397f6b7d
  41fbbf:	adc    edi,DWORD PTR [ebp+0x12]
  41fbc2:	(bad)  
  41fbc3:	push   esp
  41fbc4:	pop    esp
  41fbc5:	or     bh,BYTE PTR [edx]
  41fbc7:	test   ah,bh
  41fbc9:	(bad)  
  41fbca:	iret   
  41fbcb:	vandnps ymm2,ymm1,YMMWORD PTR [edx]
  41fbcf:	push   cs
  41fbd0:	aam    0x81
  41fbd2:	pushf  
  41fbd3:	push   edi
  41fbd4:	and    ah,BYTE PTR [edi+esi*8+0x59]
  41fbd8:	out    0xd8,al
  41fbda:	enter  0x9df5,0x6d
  41fbde:	pop    es
  41fbdf:	in     eax,dx
  41fbe0:	(bad)  [ebx+0x17d5c61f]
  41fbe6:	retf   0xd6fa
  41fbe9:	pop    ds
  41fbea:	add    al,0x94
  41fbec:	test   eax,0xf5f68ac3
  41fbf1:	outs   dx,BYTE PTR ds:[esi]
  41fbf2:	retf   
  41fbf3:	xchg   esp,eax
  41fbf4:	jo     0x41fbae
  41fbf6:	mov    ebp,0xcfc4275b
  41fbfb:	cdq    
  41fbfc:	pop    DWORD PTR [ebp+0x7b]
  41fbff:	hlt    
  41fc00:	test   al,0xc4
  41fc02:	xchg   ebx,eax
  41fc03:	inc    ecx
  41fc04:	inc    esi
  41fc05:	mov    DWORD PTR [eax-0x2a],eax
  41fc08:	xchg   esi,eax
  41fc09:	rcr    DWORD PTR [esi],1
  41fc0b:	sbb    eax,0x4e05a11b
  41fc10:	out    dx,al
  41fc11:	or     al,BYTE PTR [ebx+0x1f]
  41fc14:	jle    0x41fc07
  41fc16:	js     0x41fc02
  41fc18:	or     BYTE PTR [ebx-0x3b9f573e],0xc2
  41fc1f:	out    dx,eax
  41fc20:	cmp    al,bl
  41fc22:	retf   
  41fc23:	and    al,0xbe
  41fc25:	ins    DWORD PTR es:[edi],dx
  41fc26:	xchg   esp,eax
  41fc27:	sahf   
  41fc28:	cmp    ecx,ebp
  41fc2a:	nop
  41fc2b:	fidiv  DWORD PTR [ebp-0x168aca53]
  41fc31:	xchg   ecx,eax
  41fc32:	mov    al,fs:0xa152c2a6
  41fc38:	sub    eax,0x8339f7b4
  41fc3d:	xchg   edi,eax
  41fc3e:	in     al,0xc1
  41fc40:	adc    DWORD PTR ds:0xca7603d3,edi
  41fc46:	hlt    
  41fc47:	pop    ebp
  41fc48:	push   ebp
  41fc49:	mov    fs,ebp
  41fc4b:	icebp  
  41fc4c:	dec    esp
  41fc4d:	in     eax,0xfb
  41fc4f:	add    al,0x49
  41fc51:	mov    ds:0xa2bd401e,eax
  41fc56:	cwde   
  41fc57:	stc    
  41fc58:	push   cs
  41fc59:	push   0x88ae486
  41fc5e:	dec    ebp
  41fc5f:	aaa    
  41fc60:	push   ecx
  41fc61:	lods   eax,DWORD PTR ds:[esi]
  41fc62:	jmp    0x4946:0x48c0a120
  41fc69:	scas   al,BYTE PTR es:[edi]
  41fc6a:	popf   
  41fc6b:	stc    
  41fc6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc6d:	es call 0x88d0ba3c
  41fc73:	cdq    
  41fc74:	dec    eax
  41fc75:	pushf  
  41fc76:	jecxz  0x41fcbf
  41fc78:	div    BYTE PTR [esi]
  41fc7a:	pop    ss
  41fc7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc7c:	addr16 popa 
  41fc7e:	add    ah,cl
  41fc80:	call   0xe946e90
  41fc85:	and    BYTE PTR [edi-0x3],dl
  41fc88:	(bad)  
  41fc89:	and    al,0x46
  41fc8b:	push   cs
  41fc8c:	xor    eax,0xf2de6cbc
  41fc91:	fdivr  DWORD PTR [esi]
  41fc93:	(bad)  
  41fc94:	dec    eax
  41fc95:	or     eax,0x8ad9b2f2
  41fc9a:	push   cs
  41fc9b:	stos   DWORD PTR es:[edi],eax
  41fc9c:	inc    esp
  41fc9d:	lock xchg ebx,eax
  41fc9f:	stos   DWORD PTR es:[edi],eax
  41fca0:	idiv   WORD PTR [ebx-0x36]
  41fca4:	or     DWORD PTR [ecx+ebp*4-0x4f50961c],eax
  41fcab:	inc    ebp
  41fcac:	jnp    0x41fcc0
  41fcae:	mov    DWORD PTR [ecx-0x350db83c],ebx
  41fcb4:	and    cl,ch
  41fcb6:	push   ds
  41fcb7:	mov    ds:0x2fd1e5a6,al
  41fcbc:	or     BYTE PTR ds:0x9dcc9f8,0xe
  41fcc3:	out    0x10,al
  41fcc5:	es cmp eax,0xc36d24d9
  41fccb:	ja     0x41fcc9
  41fccd:	rep movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41fcd0:	mov    cl,0xde
  41fcd2:	jno    0x41fd3c
  41fcd4:	adc    al,0x34
  41fcd6:	cmp    edx,DWORD PTR [edi]
  41fcd8:	lods   eax,DWORD PTR ds:[esi]
  41fcd9:	loope  0x41fcc2
  41fcdb:	scas   al,BYTE PTR es:[di]
  41fcdd:	jno    0x41fc8d
  41fcdf:	int    0x97
  41fce1:	fiadd  DWORD PTR [esi-0x1b]
  41fce4:	push   edx
  41fce5:	add    al,0x66
  41fce7:	jp     0x41fd31
  41fce9:	outs   dx,BYTE PTR ds:[esi]
  41fcea:	scas   al,BYTE PTR es:[edi]
  41fceb:	cmp    eax,0x33ab5e86
  41fcf0:	retf   
  41fcf1:	nop
  41fcf2:	mov    ?,WORD PTR [ecx]
  41fcf4:	mov    ebp,0xd12c583e
  41fcf9:	sbb    BYTE PTR ds:0xd63bfd73,0xf
  41fd00:	mov    BYTE PTR [edx+0x427d88e0],0x51
  41fd07:	sbb    al,0x20
  41fd09:	lea    ebp,[esi+0x6ae5c963]
  41fd0f:	mov    ebp,DWORD PTR [edx*2-0x3a40a5e]
  41fd16:	shl    BYTE PTR [eax-0x17],cl
  41fd19:	adc    dl,BYTE PTR [eax-0x1b4a864c]
  41fd1f:	fld    TBYTE PTR [ebp-0x6]
  41fd22:	mov    dl,0x75
  41fd24:	push   esi
  41fd25:	imul   esp,DWORD PTR [esi],0xf1da6147
  41fd2b:	xchg   BYTE PTR [edx],cl
  41fd2d:	push   ebx
  41fd2e:	dec    ebp
  41fd2f:	push   cs
  41fd30:	and    BYTE PTR [ebp+0x31fa825d],bh
  41fd36:	jne    0x41fd1f
  41fd38:	rol    DWORD PTR [edi+0x13ff0f16],cl
  41fd3e:	fxam   
  41fd40:	or     DWORD PTR [ebx+0x7a49c5fb],esp
  41fd46:	jle    0x41fd77
  41fd48:	push   edi
  41fd49:	pop    ecx
  41fd4a:	lods   eax,DWORD PTR ds:[esi]
  41fd4b:	std    
  41fd4c:	out    dx,al
  41fd4d:	mov    edi,0x88a4b0c2
  41fd52:	pusha  
  41fd53:	fild   DWORD PTR [edi]
  41fd55:	gs mov al,0xee
  41fd58:	mov    dh,0x6
  41fd5a:	push   es
  41fd5b:	les    ebp,FWORD PTR [edx+0x1e]
  41fd5e:	jle    0x41fd2d
  41fd60:	sub    ch,BYTE PTR [ebp+0x428f8395]
  41fd66:	out    0xf2,eax
  41fd68:	inc    esi
  41fd69:	clc    
  41fd6a:	jmp    0x9cc5ef68
  41fd6f:	or     bh,0x76
  41fd72:	or     DWORD PTR [edx-0x14567b89],ebx
  41fd78:	push   edx
  41fd79:	in     al,dx
  41fd7a:	sti    
  41fd7b:	aas    
  41fd7c:	xor    al,BYTE PTR [edi]
  41fd7e:	inc    ebx
  41fd7f:	iret   
  41fd80:	outs   dx,DWORD PTR ds:[esi]
  41fd81:	(bad)  
  41fd82:	nop
  41fd83:	mov    ah,0x68
  41fd85:	push   ecx
  41fd86:	ins    BYTE PTR es:[edi],dx
  41fd87:	std    
  41fd88:	sbb    esi,DWORD PTR [edx]
  41fd8a:	pushf  
  41fd8b:	fbstp  TBYTE PTR [ebx]
  41fd8d:	gs dec eax
  41fd8f:	jmp    0x41fd4c
  41fd91:	outs   dx,DWORD PTR ds:[esi]
  41fd92:	cli    
  41fd93:	add    ch,bl
  41fd95:	mov    edi,ebx
  41fd97:	loope  0x41fdff
  41fd99:	push   esp
  41fd9a:	stc    
  41fd9b:	push   edx
  41fd9c:	sbb    ch,bh
  41fd9e:	call   0xeb2e:0x226d8789
  41fda5:	(bad)  
  41fda6:	and    DWORD PTR [esi+0x555e38c2],ebx
  41fdac:	xor    DWORD PTR [esi],edx
  41fdae:	scas   eax,DWORD PTR es:[edi]
  41fdaf:	pop    ebx
  41fdb0:	rcl    ecx,1
  41fdb2:	xchg   ecx,eax
  41fdb3:	outs   dx,BYTE PTR ds:[esi]
  41fdb4:	mov    ah,0xca
  41fdb6:	inc    esp
  41fdb7:	aam    0x20
  41fdb9:	rol    bl,1
  41fdbb:	sub    edi,DWORD PTR [edx+0x16]
  41fdbe:	push   edi
  41fdbf:	(bad)  
  41fdc0:	mov    dl,0xf9
  41fdc2:	aad    0xe
  41fdc4:	inc    edx
  41fdc5:	mov    ah,dl
  41fdc7:	ficom  WORD PTR [esi+0x15]
  41fdca:	mov    dl,0x72
  41fdcc:	xchg   BYTE PTR [eax],al
  41fdce:	mov    ebx,0xc59c338b
  41fdd3:	dec    ebx
  41fdd4:	clc    
  41fdd5:	pop    edi
  41fdd6:	mov    esp,0x1ac6d949
  41fddb:	jle    0x41fd8a
  41fddd:	jecxz  0x41fdb6
  41fddf:	push   0x8858066
  41fde4:	iret   
  41fde5:	out    dx,eax
  41fde6:	rol    al,cl
  41fde8:	ret    
  41fde9:	xor    BYTE PTR gs:[edi],al
  41fdec:	ret    0xa2c1
  41fdef:	std    
  41fdf0:	hlt    
  41fdf1:	fwait
  41fdf2:	mov    cl,0x4e
  41fdf4:	mov    DWORD PTR [eiz*2+0x742c6790],esi
  41fdfb:	jnp    0x41fe76
  41fdfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdfe:	daa    
  41fdff:	pusha  
  41fe00:	into   
  41fe01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe02:	fisub  DWORD PTR [ebp+0x6a]
  41fe05:	xor    DWORD PTR [ebx],edi
  41fe07:	mov    al,ds:0xd09913b8
  41fe0c:	sar    BYTE PTR [ecx+0x44],cl
  41fe0f:	dec    edi
  41fe10:	mov    eax,ds:0x6f796ca2
  41fe15:	fidiv  WORD PTR [ebx]
  41fe17:	push   0x4f
  41fe19:	imul   ebp,ecx,0xffffff8f
  41fe1c:	arpl   WORD PTR [eax+0x56],ax
  41fe1f:	or     edx,DWORD PTR [edx+0x6911739e]
  41fe25:	cs or  eax,0x3a590f72
  41fe2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe2c:	repz arpl WORD PTR [esi-0x67],cx
  41fe30:	outs   dx,BYTE PTR ds:[esi]
  41fe31:	(bad)  
  41fe32:	es xor al,al
  41fe35:	dec    esi
  41fe36:	(bad)  
  41fe37:	dec    ebp
  41fe38:	pop    edx
  41fe39:	push   esi
  41fe3a:	push   ds
  41fe3b:	scas   al,BYTE PTR es:[edi]
  41fe3c:	inc    esi
  41fe3d:	cmp    BYTE PTR [ebx+0x4d],0xf6
  41fe41:	and    bh,ah
  41fe43:	adc    eax,0x511de10c
  41fe48:	cwde   
  41fe49:	cli    
  41fe4a:	xlat   BYTE PTR ds:[ebx]
  41fe4b:	ds mov esi,0x9a3b2818
  41fe51:	mov    eax,ds:0xfc76f1b0
  41fe56:	ins    DWORD PTR es:[edi],dx
  41fe57:	or     ecx,ebp
  41fe59:	sub    BYTE PTR [edi+ebp*2-0x71],dh
  41fe5d:	dec    eax
  41fe5e:	in     al,dx
  41fe5f:	shl    DWORD PTR [esi+0x71c69bf],1
  41fe65:	jg     0x41fe2c
  41fe67:	adc    eax,0x392bebd8
  41fe6c:	inc    esi
  41fe6d:	(bad)  [eax-0x6ac68e59]
  41fe73:	test   DWORD PTR fs:[esp+eax*4-0x3ba9e010],ebx
  41fe7b:	nop
  41fe7c:	adc    ebp,eax
  41fe7e:	arpl   WORD PTR [ebp+0x7b],bp
  41fe81:	mov    ds,WORD PTR [ebx+0x750a1031]
  41fe87:	dec    ebx
  41fe88:	cdq    
  41fe89:	je     0x41fee3
  41fe8b:	pop    ss
  41fe8c:	lahf   
  41fe8d:	inc    esi
  41fe8e:	inc    edi
  41fe8f:	shl    DWORD PTR [ebp-0x1e],1
  41fe92:	dec    ebp
  41fe93:	(bad)  
  41fe94:	sbb    dh,dl
  41fe96:	(bad)  
  41fe97:	or     eax,0xb452d4bd
  41fe9c:	pop    eax
  41fe9d:	sbb    DWORD PTR [edx+0x2df99583],eax
  41fea3:	daa    
  41fea4:	data16 es fs es aad 0x5
  41feaa:	adc    eax,0x807ec69d
  41feaf:	or     al,0x67
  41feb1:	test   esp,ebp
  41feb3:	dec    ebp
  41feb4:	add    ebp,esi
  41feb6:	xchg   edi,eax
  41feb7:	out    dx,al
  41feb8:	cmc    
  41feb9:	mov    WORD PTR [ebp+0x40],?
  41febc:	dec    edi
  41febd:	jbe    0x41fe42
  41febf:	inc    edi
  41fec0:	cld    
  41fec1:	jnp    0x41ff39
  41fec3:	xchg   DWORD PTR [eax],eax
  41fec5:	xchg   BYTE PTR [esi],cl
  41fec7:	imul   edi,ecx,0x3b
  41feca:	mov    DWORD PTR [edx+ebx*2+0x2b],esp
  41fece:	push   0x47052b2c
  41fed3:	fsubr  st(3),st
  41fed5:	dec    edx
  41fed6:	or     eax,0x24222d82
  41fedb:	mov    esi,0xd48ad5e2
  41fee0:	xor    eax,0x569c684e
  41fee5:	add    BYTE PTR [edx-0x2e],dh
  41fee8:	lea    esp,[ecx+0x58]
  41feeb:	inc    edx
  41feec:	lds    ebp,FWORD PTR [ebx+0x68e3088]
  41fef2:	sbb    cl,BYTE PTR [edi]
  41fef4:	sbb    eax,0xe216380a
  41fef9:	mov    al,0xe7
  41fefb:	aas    
  41fefc:	fld    DWORD PTR [esi-0x2]
  41feff:	jbe    0x41fed1
  41ff01:	rcr    bl,cl
  41ff03:	out    dx,al
  41ff04:	in     al,0x52
  41ff06:	lea    edi,[esi]
  41ff08:	xchg   edi,eax
  41ff09:	(bad)  
  41ff0a:	out    dx,al
  41ff0b:	int    0xd8
  41ff0d:	dec    edi
  41ff0e:	jmp    0x1537:0xf9713040
  41ff15:	xor    al,al
  41ff17:	sub    al,0xaf
  41ff19:	jo     0x41fef0
  41ff1b:	xlat   BYTE PTR ds:[ebx]
  41ff1c:	sahf   
  41ff1d:	jo     0x41fec2
  41ff1f:	(bad)  
  41ff20:	push   ecx
  41ff21:	test   eax,0xca7aa60e
  41ff26:	mov    esp,0x4dc4957c
  41ff2b:	ins    BYTE PTR es:[edi],dx
  41ff2c:	mov    ecx,0x2f3a53f1
  41ff31:	xchg   edx,eax
  41ff32:	(bad)  
  41ff34:	addr16 and eax,0xd233bafd
  41ff3a:	push   0x3
  41ff3c:	pop    ecx
  41ff3d:	div    ecx
  41ff3f:	mov    ecx,DWORD PTR [ebp-0x40]
  41ff42:	or     eax,ecx
  41ff44:	mov    ecx,DWORD PTR [ebp-0x54]
  41ff47:	xor    edx,edx
  41ff49:	div    ecx
  41ff4b:	imul   eax,eax,0x7d53
  41ff51:	jmp    0x420338
  41ff56:	xor    DWORD PTR [ebx],edx
  41ff58:	(bad)  
  41ff59:	in     al,dx
  41ff5a:	scas   eax,DWORD PTR es:[edi]
  41ff5b:	imul   edi,DWORD PTR [ebx-0x57113e5],0xffffffa4
  41ff62:	into   
  41ff63:	enter  0xa4b8,0x63
  41ff67:	xchg   ebp,eax
  41ff68:	sar    BYTE PTR [esi-0x41413bb6],0xd7
  41ff6f:	shl    DWORD PTR [edx+0x49e50d91],cl
  41ff75:	xor    BYTE PTR [edx-0x756af59],bh
  41ff7b:	xchg   ebx,eax
  41ff7c:	jmp    0xdbb9317d
  41ff81:	sbb    bh,BYTE PTR [edi+0x4a]
  41ff84:	dec    ebx
  41ff85:	inc    edi
  41ff86:	(bad)  
  41ff87:	div    DWORD PTR [ebx]
  41ff89:	gs ds mov cl,ah
  41ff8d:	mov    WORD PTR [edi],ss
  41ff8f:	mov    bh,0xf3
  41ff91:	retf   
  41ff92:	les    edx,FWORD PTR [edx+0x31]
  41ff95:	clc    
  41ff96:	xor    eax,0xe56cb9b4
  41ff9b:	pop    esp
  41ff9c:	pop    eax
  41ff9d:	out    0x78,al
  41ff9f:	in     al,0x21
  41ffa1:	sub    edi,DWORD PTR [edx]
  41ffa3:	lods   al,BYTE PTR ds:[esi]
  41ffa4:	add    BYTE PTR [ecx-0x4c95ea79],cl
  41ffaa:	jl     0x41ff88
  41ffac:	xchg   ecx,edi
  41ffae:	jecxz  0x41ff4d
  41ffb0:	imul   BYTE PTR [ebx]
  41ffb2:	sahf   
  41ffb3:	fistp  DWORD PTR [ecx]
  41ffb5:	pop    ecx
  41ffb6:	call   0x87c19158
  41ffbb:	fs dec eax
  41ffbd:	sub    ebp,ebp
  41ffbf:	nop
  41ffc0:	jg     0x41ff7d
  41ffc2:	sub    eax,0x645ad6d2
  41ffc7:	inc    ecx
  41ffc8:	mov    edx,0xd76d7ef8
  41ffcd:	je     0x41ffb7
  41ffcf:	or     eax,0x7e9cca10
  41ffd4:	test   BYTE PTR [ecx+0x5947bdee],dl
  41ffda:	pop    ecx
  41ffdb:	push   es
  41ffdc:	xchg   DWORD PTR [eax],esp
  41ffde:	pushf  
  41ffdf:	adc    al,0x6a
  41ffe1:	fnstcw WORD PTR [edi-0x7703c228]
  41ffe7:	lds    edi,FWORD PTR [ecx+0x5]
  41ffea:	aaa    
  41ffeb:	mov    ds:0x7f9d6616,eax
  41fff0:	dec    edx
  41fff1:	jmp    0x41ff74
  41fff3:	mov    BYTE PTR [eax+esi*1+0x66762e19],ah
  41fffa:	test   esi,edx
  41fffc:	popa   
  41fffd:	sbb    esp,DWORD PTR [ebx-0x1e]
  420000:	mov    ?,WORD PTR [esp+eax*4-0x23]
  420004:	imul   ebx,ebp,0xffffff83
  420007:	xchg   BYTE PTR [ebp+0x7e],ah
  42000a:	dec    edx
  42000b:	cmp    BYTE PTR [esi],0xb5
  42000e:	mov    edx,0x69ea1ec3
  420013:	rol    BYTE PTR [ebp+ecx*8+0x8],0xd6
  420018:	inc    ebp
  420019:	jge    0x41ffd7
  42001b:	sub    ch,BYTE PTR [edi-0x14]
  42001e:	mov    bl,0x12
  420020:	mov    BYTE PTR [esi+0x20bedbd0],bl
  420026:	mov    ch,0xd6
  420028:	xor    bh,cl
  42002a:	mov    dl,0x77
  42002c:	repnz sub al,0x43
  42002f:	xor    al,0xf6
  420031:	push   0x53
  420033:	imul   esi,DWORD PTR [eax],0xffffffe1
  420036:	cmp    al,0x71
  420038:	push   es
  420039:	dec    edx
  42003a:	loopne 0x420099
  42003c:	xor    al,0x3d
  42003e:	shr    BYTE PTR [ecx],0x20
  420041:	test   eax,0xc842fd20
  420046:	xchg   edi,eax
  420047:	push   0xec23af90
  42004c:	daa    
  42004d:	fild   DWORD PTR [edx-0x48]
  420050:	adc    ebp,DWORD PTR [ebp+0x3dbf1326]
  420056:	imul   edi,esi,0xffffffeb
  420059:	cli    
  42005a:	jnp    0x4200cf
  42005c:	mov    ecx,0x2c45c0ba
  420061:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420062:	sti    
  420063:	xor    DWORD PTR [edx],ebp
  420065:	loop   0x420018
  420067:	dec    ebx
  420068:	aas    
  420069:	xchg   bl,dl
  42006b:	pop    edx
  42006c:	or     DWORD PTR [edx+0x2f6251c3],0xe2d1689e
  420076:	jmp    0x4200a6
  420078:	add    al,ah
  42007a:	call   0x9a96:0xd099e459
  420081:	fs out dx,eax
  420083:	call   DWORD PTR [edi-0x5e6adc37]
  420089:	xlat   BYTE PTR ds:[ebx]
  42008a:	and    dl,bh
  42008c:	inc    edi
  42008d:	data16 fdiv DWORD PTR [ecx]
  420090:	or     BYTE PTR [ebx+0x72],dh
  420093:	cdq    
  420094:	jge    0x4200f3
  420096:	jbe    0x420074
  420098:	stos   BYTE PTR es:[edi],al
  420099:	and    al,0xd3
  42009b:	jle    0x42001f
  42009d:	test   DWORD PTR [eax+0x5954408d],esi
  4200a3:	cwde   
  4200a4:	mov    dl,0x8b
  4200a6:	push   ebx
  4200a7:	mov    gs,edx
  4200a9:	jno    0x420057
  4200ab:	mov    esi,0x89f865f6
  4200b0:	mov    cl,BYTE PTR [eax]
  4200b2:	push   ebx
  4200b3:	sahf   
  4200b4:	adc    eax,0xda73be51
  4200b9:	xchg   edi,eax
  4200ba:	(bad)  
  4200bb:	mov    esp,0xfcd1e5e0
  4200c0:	fwait
  4200c1:	neg    BYTE PTR [esp+ecx*1-0x55]
  4200c5:	adc    bl,ch
  4200c7:	and    al,0x6
  4200c9:	call   0x78b:0x75ffd9ff
  4200d0:	push   0x9cf3dc7c
  4200d5:	nop
  4200d6:	cmp    dh,0xa5
  4200d9:	sti    
  4200da:	dec    esp
  4200db:	inc    eax
  4200dc:	imul   ecx,DWORD PTR ds:0xd5965cf4,0xfffffffd
  4200e3:	outs   dx,BYTE PTR gs:[esi]
  4200e5:	push   esi
  4200e6:	mov    cl,0x95
  4200e8:	jp     0x420118
  4200ea:	sbb    dh,bh
  4200ec:	add    eax,DWORD PTR [ebp-0x5aaf5a29]
  4200f2:	mov    eax,ds:0x931f0581
  4200f7:	mov    cl,0x2b
  4200f9:	out    0xb8,eax
  4200fb:	test   BYTE PTR [ebx-0x7d],bh
  4200fe:	mov    cl,0x4a
  420100:	jmp    0xdf22:0x63bd5942
  420107:	clc    
  420108:	mov    ebp,DWORD PTR ds:0x726d44da
  42010e:	in     al,dx
  42010f:	jnp    0x4200b2
  420111:	rcr    ecx,cl
  420113:	push   edx
  420114:	pop    ebp
  420115:	mov    WORD PTR [ebx-0x45],fs
  420118:	push   ds
  420119:	cmp    BYTE PTR ds:[edx-0x42],dh
  42011d:	mov    edx,0x36db34a1
  420122:	stc    
  420123:	jne    0x420146
  420125:	mov    ecx,DWORD PTR [eax+0x31]
  420128:	inc    ebp
  420129:	mov    bh,0xf1
  42012b:	push   eax
  42012c:	js     0x4201a2
  42012e:	cld    
  42012f:	sub    DWORD PTR [esi],eax
  420131:	out    dx,al
  420132:	mov    ebx,0x6b7fa530
  420137:	mov    dh,0xa3
  420139:	cs pop ebp
  42013b:	rcr    dl,cl
  42013d:	inc    edi
  42013e:	inc    ebp
  42013f:	aaa    
  420140:	pop    ebp
  420141:	sub    al,0x34
  420143:	cli    
  420144:	sub    al,0x75
  420146:	aaa    
  420147:	cmp    eax,DWORD PTR [edx+edi*8]
  42014a:	lea    eax,[eax+0x13]
  42014d:	out    dx,al
  42014e:	fcom   QWORD PTR [ebx+0x61]
  420151:	sub    dl,BYTE PTR [edi]
  420153:	rol    BYTE PTR [eax+esi*1-0x6],cl
  420157:	addr16 mov eax,0x22564d0a
  42015d:	mov    eax,ds:0x6a6d2b49
  420162:	jp     0x4201a4
  420164:	sahf   
  420165:	retf   0x6d20
  420168:	inc    DWORD PTR [eax]
  42016a:	shr    BYTE PTR [edx+ebp*2-0x1],0x14
  42016f:	imul   edi,DWORD PTR [eax],0x564f706b
  420175:	scas   al,BYTE PTR es:[edi]
  420176:	and    edx,esi
  420178:	aam    0x9b
  42017a:	ret    
  42017b:	cmp    edx,esp
  42017d:	cmp    BYTE PTR [edi],dh
  42017f:	jno    0x420159
  420181:	dec    esi
  420182:	push   ss
  420183:	mov    bh,0x6e
  420185:	aad    0xfb
  420187:	push   esi
  420188:	repnz or BYTE PTR [edx+0x8],ah
  42018c:	das    
  42018d:	and    dl,bl
  42018f:	retf   0xd87c
  420192:	dec    ebx
  420193:	or     dh,BYTE PTR [edi]
  420195:	or     al,0x27
  420197:	inc    esp
  420198:	cwde   
  420199:	mov    WORD PTR [ebp-0x77],?
  42019c:	cmp    BYTE PTR [esp+ebx*1+0x28eba677],ch
  4201a3:	xor    ch,BYTE PTR [eax+0x34]
  4201a6:	cmp    esi,esp
  4201a8:	xchg   edx,eax
  4201a9:	mov    ebx,0x25a7ae9c
  4201ae:	inc    DWORD PTR [ebx+0x6ad46d2]
  4201b4:	inc    esi
  4201b5:	pusha  
  4201b6:	out    0x76,al
  4201b8:	adc    BYTE PTR [esp+ecx*2],al
  4201bb:	je     0x420163
  4201bd:	xchg   edi,eax
  4201be:	xlat   BYTE PTR ds:[ebx]
  4201bf:	cld    
  4201c0:	dec    esi
  4201c1:	xchg   BYTE PTR [ebx+0x634c7dc],cl
  4201c7:	mov    cl,0xdf
  4201c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201ca:	jp     0x420185
  4201cc:	xchg   esi,eax
  4201cd:	adc    eax,0x90bb6e42
  4201d2:	or     eax,0x302d97cf
  4201d7:	push   ebp
  4201d8:	retf   0x5981
  4201db:	dec    edx
  4201dc:	sub    eax,0x4ee838c2
  4201e1:	out    dx,al
  4201e2:	inc    ebp
  4201e3:	sbb    BYTE PTR [esi+0x3c],ch
  4201e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201e7:	and    al,0xee
  4201e9:	pop    esi
  4201ea:	jne    0x4201ca
  4201ec:	inc    ecx
  4201ed:	inc    esp
  4201ee:	fisub  WORD PTR [edi-0x7a]
  4201f1:	shl    BYTE PTR [ebx-0x78],1
  4201f4:	sbb    al,0xc4
  4201f6:	pop    es
  4201f7:	mov    ecx,0xbc4e2baf
  4201fc:	push   esi
  4201fd:	lds    ebp,FWORD PTR [ebx-0x5caa9e95]
  420203:	xlat   BYTE PTR ds:[ebx]
  420204:	inc    esp
  420205:	cmp    BYTE PTR [esi+0x51],0x46
  420209:	pop    esp
  42020a:	(bad)  
  42020b:	jnp    0x420218
  42020d:	(bad)
  420211:	iret   
  420212:	jmp    0x7a70:0xe47a2303
  420219:	test   ebx,eax
  42021b:	mov    esi,ss
  42021d:	mov    bl,0xf1
  42021f:	adc    ah,BYTE PTR [eax+0x58]
  420222:	outs   dx,DWORD PTR ds:[esi]
  420223:	pop    edi
  420224:	mov    bh,0xe5
  420226:	sbb    eax,0xb952052b
  42022b:	jp     0x4201e5
  42022d:	mov    al,ds:0xc8267825
  420232:	mov    dh,BYTE PTR [ebp-0x2e]
  420235:	call   0x391e:0x699262be
  42023c:	jle    0x420282
  42023e:	arpl   WORD PTR [edx],di
  420240:	inc    esi
  420241:	fprem  
  420243:	out    dx,eax
  420244:	sti    
  420245:	ret    
  420246:	out    0x20,al
  420248:	mov    ds:0x4f4a490b,eax
  42024d:	push   esi
  42024e:	dec    edx
  42024f:	adc    DWORD PTR [ecx+0x719191ca],ebp
  420255:	cmp    bl,BYTE PTR [edi-0xc15786a]
  42025b:	das    
  42025c:	cmp    esi,DWORD PTR [ebx+0x70e1fe03]
  420262:	sub    bh,BYTE PTR [edx]
  420264:	and    bh,cl
  420266:	pop    ebp
  420267:	loope  0x4202d6
  420269:	cli    
  42026a:	lahf   
  42026b:	aad    0x6c
  42026d:	and    ah,bh
  42026f:	sbb    al,0x20
  420271:	push   0x973a5708
  420276:	jo     0x4202df
  420278:	push   ss
  420279:	out    0x7c,al
  42027b:	loope  0x4202f3
  42027d:	mov    edx,0x27383998
  420282:	xor    al,0x30
  420284:	cmp    eax,0x6334431e
  420289:	pop    esp
  42028a:	cdq    
  42028b:	inc    ebx
  42028c:	lods   al,BYTE PTR ds:[esi]
  42028d:	mov    ebx,0xc3002db4
  420292:	pop    ds
  420293:	int3   
  420294:	adc    al,0x7a
  420296:	hlt    
  420297:	inc    eax
  420298:	sti    
  420299:	cld    
  42029a:	test   DWORD PTR [esp+eax*4+0x765573fd],esi
  4202a1:	mov    eax,0x358c68d3
  4202a6:	sbb    al,0xcb
  4202a8:	out    dx,al
  4202a9:	mov    eax,ds:0x3b2d579b
  4202ae:	sti    
  4202af:	test   BYTE PTR [ebp+ecx*8-0x64],dh
  4202b3:	jmp    0x4202a6
  4202b5:	test   al,0x32
  4202b7:	xor    ch,BYTE PTR [eax+0x615219cb]
  4202bd:	cmp    dh,bh
  4202bf:	stos   DWORD PTR es:[edi],eax
  4202c0:	push   ss
  4202c1:	stos   DWORD PTR es:[edi],eax
  4202c2:	jl     0x420293
  4202c4:	mov    edx,DWORD PTR [eax]
  4202c6:	xchg   ebp,eax
  4202c7:	repz xor DWORD PTR [edx+0x6c],ebp
  4202cb:	sbb    eax,0x6f00c375
  4202d0:	arpl   WORD PTR [edx],di
  4202d2:	inc    ax
  4202d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202d5:	xor    DWORD PTR [edi-0x9],ebp
  4202d8:	stos   BYTE PTR es:[edi],al
  4202d9:	mov    edi,0x3ef34eeb
  4202de:	mov    ah,0x33
  4202e0:	repnz hlt 
  4202e2:	jbe    0x4202d4
  4202e4:	ds and al,0x4f
  4202e8:	lods   al,BYTE PTR ds:[esi]
  4202e9:	(bad)  
  4202ea:	mul    BYTE PTR [ebx-0x6d]
  4202ed:	fiadd  DWORD PTR [ecx]
  4202ef:	lds    ebx,FWORD PTR [eax-0x4e]
  4202f2:	sub    BYTE PTR [edx],0xb1
  4202f5:	or     eax,DWORD PTR [edi-0x74]
  4202f8:	xlat   BYTE PTR ds:[ebx]
  4202f9:	or     BYTE PTR [eax+edx*2-0x3],dh
  4202fd:	jmp    0x28d5cd30
  420302:	out    0x86,eax
  420304:	dec    ebx
  420305:	mov    al,0x83
  420307:	jmp    0xf80a2541
  42030c:	aad    0x9e
  42030e:	and    esi,DWORD PTR [ebx-0x15]
  420311:	sbb    BYTE PTR [ebp-0xf9726d8],0xe
  420318:	repz int3 
  42031a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42031b:	sahf   
  42031c:	fistp  DWORD PTR [esi+0x13]
  42031f:	je     0x420353
  420321:	sbb    DWORD PTR [ebx+ebp*2],ecx
  420324:	and    BYTE PTR [edi+0x75],ch
  420327:	in     al,dx
  420328:	test   eax,0xfab5de41
  42032d:	fnstenv [edi+0x57]
  420330:	fmul   QWORD PTR [ebx]
  420332:	(bad)  
  420333:	lods   al,BYTE PTR ds:[esi]
  420334:	and    BYTE PTR [edi+0x60],0xe8
  420338:	mov    ecx,DWORD PTR [ebp+0x8]
  42033b:	lea    eax,[ecx+eax*1-0x1f534807]
  420342:	mov    ecx,DWORD PTR [ebp-0xf0]
  420348:	and    ecx,0x4108
  42034e:	and    ecx,0x40e7
  420354:	sub    ecx,0x1a54
  42035a:	xor    ecx,0x25ac
  420360:	mov    edx,DWORD PTR [ebp-0x104]
  420366:	jmp    0x42074d
  42036b:	pop    eax
  42036c:	dec    ecx
  42036d:	xchg   esi,eax
  42036e:	jmp    0x42030c
  420370:	cmp    al,0xbc
  420372:	jns    0x4203a4
  420374:	inc    edx
  420375:	aad    0xe3
  420377:	(bad)  
  420378:	mov    cl,0x60
  42037a:	sahf   
  42037b:	out    dx,eax
  42037c:	popf   
  42037d:	sar    BYTE PTR [esi-0x41413bb6],0x38
  420384:	stos   DWORD PTR es:[edi],eax
  420385:	inc    ebx
  420386:	mov    DWORD PTR [esi-0x6a],edi
  420389:	js     0x420349
  42038b:	test   eax,0x78eeaeff
  420390:	sub    DWORD PTR [esi+ebx*8-0x4922e4be],eax
  420397:	leave  
  420398:	addr16 mov esp,ebx
  42039b:	jo     0x42036a
  42039d:	push   ecx
  42039e:	retf   0xfa12
  4203a1:	cmc    
  4203a2:	test   BYTE PTR [eax+0x1e],dl
  4203a5:	cmp    eax,DWORD PTR [edx+0x7ef68696]
  4203ab:	adc    al,0xd1
  4203ad:	stos   BYTE PTR es:[edi],al
  4203ae:	push   0xc73839c2
  4203b3:	mov    ds:0xa570783d,al
  4203b8:	out    dx,eax
  4203b9:	mov    ch,0x8f
  4203bb:	je     0x4203d1
  4203bd:	xor    eax,0x9f070788
  4203c2:	mov    BYTE PTR [ebp-0x81dca64],cl
  4203c8:	inc    al
  4203ca:	repz scas eax,DWORD PTR es:[edi]
  4203cc:	(bad)  
  4203cd:	(bad)  
  4203ce:	das    
  4203cf:	clc    
  4203d0:	loopne 0x42043b
  4203d2:	hlt    
  4203d3:	test   DWORD PTR [ebp-0x5059b78b],edx
  4203d9:	lahf   
  4203da:	pushf  
  4203db:	xchg   BYTE PTR [eax],bh
  4203dd:	sub    al,0x53
  4203df:	ficom  DWORD PTR [ebx-0x34]
  4203e2:	mov    WORD PTR [esi-0x7aa4f2a2],?
  4203e8:	and    ebx,ecx
  4203ea:	pop    ebp
  4203eb:	rol    BYTE PTR [ebx+0xa],cl
  4203ee:	rcr    DWORD PTR [esi],0xe3
  4203f1:	ret    
  4203f2:	outs   dx,DWORD PTR ds:[esi]
  4203f3:	cmp    eax,0x894d833d
  4203f8:	ins    DWORD PTR es:[edi],dx
  4203f9:	(bad)  
  4203fa:	cld    
  4203fb:	and    dl,ah
  4203fd:	pop    edx
  4203fe:	test   eax,0xc9896712
  420403:	and    edi,DWORD PTR [ebx]
  420405:	jno    0x420421
  420407:	dec    ecx
  420408:	es dec esp
  42040a:	adc    DWORD PTR [ebx],ecx
  42040c:	clc    
  42040d:	mov    ds:0x244d7159,eax
  420412:	shl    DWORD PTR [ecx-0x1f94ff95],1
  420418:	mov    ebp,DWORD PTR [ebx+0x45]
  42041b:	stos   BYTE PTR es:[edi],al
  42041c:	mov    bl,0x94
  42041e:	jnp    0x42049a
  420420:	mov    ss,WORD PTR [edi+ebx*1+0x16d4913d]
  420427:	push   eax
  420428:	xchg   edx,eax
  420429:	jg     0x42043b
  42042b:	inc    ecx
  42042c:	repnz repz or al,0xe1
  420430:	fwait
  420431:	jns    0x420475
  420433:	dec    esp
  420434:	fdivr  st,st(1)
  420436:	rep outs dx,DWORD PTR ds:[esi]
  420438:	ins    DWORD PTR es:[edi],dx
  420439:	ins    DWORD PTR es:[edi],dx
  42043a:	and    ch,BYTE PTR ds:0x623de16c
  420440:	setp   BYTE PTR [eax]
  420443:	pushf  
  420444:	adc    al,bl
  420446:	and    eax,0x9cfc45e0
  42044b:	int3   
  42044c:	dec    edx
  42044d:	or     BYTE PTR [eax*4-0x6cbe74b9],cl
  420454:	stc    
  420455:	addr16 jne 0x42048b
  420458:	in     al,0xa1
  42045a:	in     eax,0xf5
  42045c:	out    dx,eax
  42045d:	jecxz  0x420471
  42045f:	jnp    0x4204a3
  420461:	test   cl,bl
  420463:	mov    WORD PTR [edi-0x60aeb6ba],?
  420469:	mov    ds:0xe5183155,al
  42046e:	sub    ecx,edx
  420470:	jne    0x420441
  420472:	in     al,dx
  420473:	push   edi
  420474:	or     eax,0x27f614
  420479:	cmp    al,0xc4
  42047b:	mov    bl,0x74
  42047d:	lods   al,BYTE PTR ds:[esi]
  42047e:	sub    eax,0x82ee5e3e
  420483:	inc    ecx
  420484:	pop    ebp
  420485:	xchg   edi,eax
  420486:	sub    ebp,ebx
  420488:	aad    0xa3
  42048a:	sbb    DWORD PTR ds:0xfe1256d9,ecx
  420490:	dec    ecx
  420491:	rol    BYTE PTR ss:[esi],cl
  420494:	add    eax,DWORD PTR [eax+0x2c]
  420497:	xchg   ebx,eax
  420498:	add    ecx,DWORD PTR [edi-0xd]
  42049b:	mov    dh,0x22
  42049d:	aam    0xa9
  42049f:	and    al,0xc9
  4204a1:	sub    ah,BYTE PTR [ebp+0x37]
  4204a4:	leave  
  4204a5:	into   
  4204a6:	aaa    
  4204a7:	inc    esi
  4204a8:	fisub  DWORD PTR [eax+0x24c33e8c]
  4204ae:	or     ah,BYTE PTR [ebp+0x376c6d24]
  4204b4:	pop    esi
  4204b5:	add    eax,0xfb84a142
  4204ba:	test   eax,0x2661daa0
  4204bf:	mov    ds:0x2181790f,eax
  4204c4:	mov    ds:0x1331d471,eax
  4204c9:	test   al,0x9
  4204cb:	out    0xc7,eax
  4204cd:	stos   DWORD PTR es:[edi],eax
  4204ce:	call   0x9a7e:0x6923ad17
  4204d5:	inc    ebx
  4204d6:	imul   ebp,DWORD PTR [ecx-0x1],0x4f
  4204da:	dec    edx
  4204db:	in     eax,0xea
  4204dd:	mov    bh,dh
  4204df:	xchg   DWORD PTR [esi],esi
  4204e1:	inc    esp
  4204e2:	out    0xc1,eax
  4204e4:	jmp    0xe08c:0x86a8ac0e
  4204eb:	imul   edi,DWORD PTR [ebp+0x4c],0x63
  4204ef:	test   dh,dh
  4204f1:	stos   DWORD PTR es:[edi],eax
  4204f2:	mov    esp,0x2aee208
  4204f7:	pop    ss
  4204f8:	jns    0x420570
  4204fa:	es mov ebp,0xc2da8e4a
  420500:	stos   DWORD PTR es:[edi],eax
  420501:	cs cdq 
  420503:	out    0xb4,eax
  420505:	dec    eax
  420506:	sub    eax,0x71b160a1
  42050b:	dec    esi
  42050c:	idiv   BYTE PTR [esi-0x4f653bfb]
  420512:	sub    eax,0xa8fa29c1
  420517:	lds    ecx,FWORD PTR [ebx+0x4a7bb545]
  42051d:	or     BYTE PTR cs:[edi-0x7a],ah
  420521:	add    DWORD PTR [ebx+0x62b53280],edx
  420527:	idiv   BYTE PTR [ebx]
  420529:	jae    0x4204dd
  42052b:	push   0xffffffe4
  42052d:	(bad)  
  42052e:	sti    
  42052f:	lahf   
  420530:	je     0x420567
  420532:	or     al,0xab
  420534:	std    
  420535:	int3   
  420536:	and    eax,0xb2c223af
  42053b:	sub    BYTE PTR [edi],ch
  42053d:	jmp    0xdddf:0xd5bb1396
  420544:	call   0x9bf8:0x7b09cf28
  42054b:	xor    ebx,DWORD PTR es:[eax+0x3fef2b43]
  420552:	sub    ebp,DWORD PTR [ebx-0x47]
  420555:	sub    BYTE PTR [ebp-0xc71b9a3],bl
  42055b:	push   esp
  42055c:	ins    BYTE PTR es:[edi],dx
  42055d:	pop    esp
  42055e:	dec    edx
  42055f:	push   ecx
  420560:	xchg   BYTE PTR [edx],dl
  420562:	std    
  420563:	dec    esi
  420564:	or     BYTE PTR [edi+0x12],al
  420567:	push   ss
  420568:	dec    ecx
  420569:	out    0x4,al
  42056b:	add    ch,BYTE PTR [ebp+ecx*4+0x6043cfda]
  420572:	ror    BYTE PTR [esp+ecx*2-0x13],1
  420576:	mov    al,0x3
  420578:	xchg   BYTE PTR [esi+0x73db78eb],ch
  42057e:	fisttp WORD PTR [edx]
  420580:	jo     0x42057c
  420582:	pop    esi
  420583:	xor    al,0x56
  420585:	and    al,0xc4
  420587:	push   edx
  420588:	ret    0x53b
  42058b:	mov    ds:0x63c132b2,al
  420590:	pop    edi
  420591:	rcr    BYTE PTR [esi],cl
  420593:	fcom   QWORD PTR [esi]
  420595:	(bad)  
  420597:	mov    eax,0xed3298f9
  42059c:	pop    esi
  42059d:	pop    edx
  42059e:	mov    ecx,0x2bd0af22
  4205a3:	inc    eax
  4205a4:	cmp    al,0x3c
  4205a6:	pop    esp
  4205a7:	mov    WORD PTR [esi+0x15],?
  4205aa:	out    0x8d,al
  4205ac:	or     ch,dh
  4205ae:	cmp    DWORD PTR [ebx],ebx
  4205b0:	iret   
  4205b1:	jl     0x420561
  4205b3:	inc    edi
  4205b4:	mov    ah,0x3a
  4205b6:	arpl   WORD PTR [edi],si
  4205b8:	shl    DWORD PTR [ebp-0x9],1
  4205bb:	mov    esp,DWORD PTR [ebx+0x9]
  4205be:	fmul   QWORD PTR [edi]
  4205c0:	sbb    al,0x5d
  4205c2:	add    dl,BYTE PTR [ebp-0xe0dc7e0]
  4205c8:	xchg   edi,eax
  4205c9:	xchg   esp,eax
  4205ca:	adc    edi,DWORD PTR [ecx+0x5c]
  4205cd:	push   ebp
  4205ce:	js     0x420550
  4205d0:	ret    0x8fc7
  4205d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205d4:	xchg   edi,eax
  4205d5:	mov    ah,al
  4205d7:	adc    BYTE PTR [edi],0x9d
  4205da:	pop    ds
  4205db:	mov    edx,0x80b37e4c
  4205e0:	pop    esp
  4205e1:	push   cs
  4205e2:	adc    eax,0x942b74c3
  4205e7:	xchg   ah,al
  4205e9:	inc    esi
  4205ea:	popa   
  4205eb:	daa    
  4205ec:	bound  esp,QWORD PTR [eax]
  4205ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205ef:	and    bh,BYTE PTR [edi+0x55]
  4205f2:	ja     0x42061c
  4205f4:	call   0x96fe39fd
  4205f9:	sub    bl,bh
  4205fb:	xchg   edi,eax
  4205fc:	jno    0x420673
  4205fe:	out    dx,eax
  4205ff:	iret   
  420600:	sub    BYTE PTR [eax],0x9d
  420603:	leave  
  420604:	(bad)  
  420605:	js     0x42062c
  420607:	(bad)  
  420608:	cmp    BYTE PTR [edx],dh
  42060a:	aam    0x24
  42060c:	aad    0xea
  42060e:	jns    0x420602
  420610:	dec    edx
  420611:	inc    eax
  420612:	push   es
  420613:	mov    bl,0x6f
  420615:	mov    dl,BYTE PTR [ecx]
  420617:	into   
  420618:	mov    ds:0x504acd41,eax
  42061d:	xor    eax,0x8640ca49
  420622:	scas   al,BYTE PTR es:[edi]
  420623:	jno    0x4205dd
  420625:	pop    edx
  420626:	mov    dh,0x7e
  420628:	jae    0x420678
  42062a:	retf   0x1957
  42062d:	mov    BYTE PTR [ebp-0x4d],bh
  420630:	fld    QWORD PTR [edx]
  420632:	dec    ebp
  420633:	leave  
  420634:	fwait
  420635:	or     edi,edi
  420637:	stos   DWORD PTR es:[edi],eax
  420638:	inc    esp
  420639:	(bad)  
  42063b:	jmp    0x5e91:0x9d007e9d
  420642:	jno    0x420615
  420644:	nop
  420645:	loopne 0x4205ed
  420647:	scas   al,BYTE PTR es:[edi]
  420648:	shl    BYTE PTR [ecx],0xee
  42064b:	ins    DWORD PTR es:[edi],dx
  42064c:	dec    ebx
  42064d:	test   al,0x61
  42064f:	sub    DWORD PTR [edx],0xffffffd4
  420652:	pop    ss
  420653:	mov    bl,0x91
  420655:	inc    ebx
  420656:	jmp    0x165b:0x737b4877
  42065d:	push   0x6ea9db73
  420662:	sub    DWORD PTR [edi+edi*4],edi
  420665:	aam    0xdc
  420667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420668:	xchg   ebp,eax
  420669:	cld    
  42066a:	pop    edx
  42066b:	popa   
  42066c:	dec    esi
  42066d:	jns    0x42061d
  42066f:	cmp    eax,0xa36704b
  420674:	fld    QWORD PTR [edi]
  420676:	adc    eax,0x7b9d482f
  42067b:	sub    al,0x12
  42067d:	repz sub dl,ah
  420680:	mov    edi,0xdaea0b1c
  420685:	and    eax,0xdabf1563
  42068a:	push   es
  42068b:	and    dl,BYTE PTR [ebx+edx*1]
  42068e:	test   al,0x4d
  420690:	and    bl,cl
  420692:	xchg   esi,eax
  420693:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  420695:	xor    eax,0x7b5e8966
  42069a:	mov    edi,0x2c6efb6b
  42069f:	loope  0x4206a9
  4206a1:	add    esi,edi
  4206a3:	mov    ecx,0xb5d164b
  4206a8:	cmp    BYTE PTR [esi+0x1a18bddf],cl
  4206ae:	mov    edi,ebp
  4206b0:	popf   
  4206b1:	and    al,0x28
  4206b3:	leave  
  4206b4:	int3   
  4206b5:	jns    0x420719
  4206b7:	cmc    
  4206b8:	icebp  
  4206b9:	and    BYTE PTR [ebp-0x54fbc989],bl
  4206bf:	repz out 0xf4,al
  4206c2:	jmp    0x420669
  4206c4:	add    WORD PTR [esi-0x62d4936],di
  4206cb:	dec    edi
  4206cc:	mov    esi,0x52fbcf01
  4206d1:	xor    eax,0x6a42239b
  4206d6:	jae    0x4206e6
  4206d8:	inc    edi
  4206d9:	pop    es
  4206da:	dec    esi
  4206db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206dc:	push   0x2c41b982
  4206e1:	outs   dx,DWORD PTR ds:[esi]
  4206e2:	sub    al,0x78
  4206e4:	scas   al,BYTE PTR es:[edi]
  4206e5:	mov    ds:0x9cbdb56d,al
  4206ea:	jo     0x4206c0
  4206ec:	pop    edx
  4206ed:	(bad)  
  4206ee:	push   esp
  4206ef:	xchg   esi,eax
  4206f0:	mov    esi,?
  4206f2:	xchg   bh,bl
  4206f4:	pop    edi
  4206f5:	sub    BYTE PTR [ebx+0x41],cl
  4206f8:	mov    ds:0x35fdac33,al
  4206fd:	out    dx,al
  4206fe:	das    
  4206ff:	adc    eax,0x586c3c40
  420704:	xchg   edi,eax
  420705:	or     bl,BYTE PTR [esp+ebp*4-0x49]
  420709:	lods   eax,DWORD PTR ds:[esi]
  42070a:	dec    esp
  42070b:	and    al,0xf7
  42070d:	jns    0x4206a6
  42070f:	ja     0x4206a5
  420711:	mov    WORD PTR [ebx],?
  420713:	arpl   ax,cx
  420715:	inc    esi
  420716:	cld    
  420717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420718:	shl    BYTE PTR [edx+0x5c202e27],cl
  42071e:	ins    BYTE PTR es:[edi],dx
  42071f:	nop
  420720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420721:	jmp    0x9c5b:0x8e013aba
  420728:	sbb    BYTE PTR [ecx+0x695d73e4],bh
  42072e:	mov    al,ds:0xb4c9bdac
  420733:	adc    BYTE PTR [ebx+0xb],dl
  420736:	push   edx
  420737:	popa   
  420738:	cmp    ebx,DWORD PTR [esi-0x25]
  42073b:	cmp    bl,BYTE PTR [edx-0x5aae640c]
  420741:	scas   al,BYTE PTR es:[edi]
  420742:	fst    DWORD PTR [ebp-0x41]
  420745:	xchg   ecx,eax
  420746:	xchg   DWORD PTR [edx-0x71bfd25e],esp
  42074c:	ss xor edx,0x6dda
  420753:	mov    esi,DWORD PTR [ebp-0x108]
  420759:	and    edx,esi
  42075b:	and    edx,0xe0c
  420761:	or     edx,0x5b
  420764:	mov    esi,DWORD PTR [ebp-0xe8]
  42076a:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  42076e:	add    ecx,eax
  420770:	lea    eax,[edx+ecx*1-0xc5b]
  420777:	mov    DWORD PTR [ebp-0xa8],eax
  42077d:	and    DWORD PTR [ebp-0x144],0x0
  420784:	jmp    0x420b7d
  420789:	mov    eax,DWORD PTR [ebp-0x144]
  42078f:	inc    eax
  420790:	mov    DWORD PTR [ebp-0x144],eax
  420796:	jmp    0x420b7d
  42079b:	daa    
  42079c:	cmp    eax,0x75b775ce
  4207a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207a2:	(bad)  
  4207a3:	xchg   ecx,eax
  4207a4:	(bad)  
  4207a5:	dec    esi
  4207a6:	sahf   
  4207a7:	mov    dh,0xda
  4207a9:	xchg   BYTE PTR [esp+edi*2+0x4abec0a3],ah
  4207b0:	les    edi,FWORD PTR [esi-0x16f98842]
  4207b6:	xchg   ecx,eax
  4207b7:	popa   
  4207b8:	mov    edx,0x7b23ce23
  4207bd:	test   DWORD PTR [ebx+eiz*1-0x4327793e],edx
  4207c4:	push   0x5
  4207c6:	and    DWORD PTR [ecx],0x5e9e7a5
  4207cc:	bnd jnp 0x420806
  4207cf:	in     al,0xe9
  4207d1:	repz xchg ebp,eax
  4207d3:	mov    edx,cs
  4207d5:	sbb    eax,0x384e3afd
  4207da:	(bad)  [ecx]
  4207dc:	lods   al,BYTE PTR ds:[esi]
  4207dd:	push   ecx
  4207de:	add    al,0xc0
  4207e0:	inc    esi
  4207e1:	adc    eax,DWORD PTR [ebx]
  4207e3:	cmp    BYTE PTR [ebx-0x75],ah
  4207e6:	ja     0x42082d
  4207e8:	inc    ecx
  4207e9:	inc    eax
  4207ea:	adc    BYTE PTR [esi-0x47f5933a],bl
  4207f0:	pop    ecx
  4207f1:	lea    ebx,[ecx+0x1313cf8]
  4207f7:	xchg   ebp,eax
  4207f8:	ins    DWORD PTR es:[edi],dx
  4207f9:	repz mov edi,es
  4207fc:	mov    BYTE PTR [edi+0x77],dh
  4207ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420800:	outs   dx,DWORD PTR es:[esi]
  420802:	mov    ebx,0xb2f2f0ee
  420807:	cmp    ch,BYTE PTR [edx]
  420809:	and    al,0x18
  42080b:	push   0x76
  42080d:	push   esp
  42080e:	int    0x62
  420810:	dec    ebx
  420811:	sub    ebp,DWORD PTR [esi]
  420813:	cmp    edx,edx
  420815:	add    eax,0x6315e97a
  42081a:	cs pop edi
  42081c:	inc    ebp
  42081d:	icebp  
  42081e:	test   eax,0x2424f98a
  420823:	sub    al,0xf6
  420825:	lods   al,BYTE PTR fs:[esi]
  420827:	add    DWORD PTR [eax],ebp
  420829:	scas   al,BYTE PTR es:[edi]
  42082a:	in     eax,0xd2
  42082c:	xchg   esp,eax
  42082d:	sti    
  42082e:	es jb  0x420847
  420831:	rcr    DWORD PTR [edx+0x7789e5cd],0xb8
  420838:	jecxz  0x4208b1
  42083a:	ja     0x420817
  42083c:	xor    esi,ebx
  42083e:	pop    esp
  42083f:	imul   BYTE PTR ds:0x72d0e085
  420845:	fbstp  TBYTE PTR [eax]
  420847:	mov    edx,0xa96b098c
  42084c:	outs   dx,BYTE PTR gs:[esi]
  42084e:	mov    ch,0x1f
  420850:	cs inc ebp
  420852:	xor    dl,BYTE PTR [edi+ecx*1-0x52df6d0d]
  420859:	out    0x90,eax
  42085b:	mov    ds:0xf1cd696f,eax
  420860:	hlt    
  420861:	cwde   
  420862:	(bad)  
  420863:	fld    st(5)
  420865:	imul   esp,DWORD PTR [edi-0x1d],0xffffffac
  420869:	pop    esi
  42086a:	out    0x39,eax
  42086c:	lods   al,BYTE PTR ds:[esi]
  42086d:	loope  0x42084d
  42086f:	std    
  420870:	jmp    0x91f1:0x3c5a7d21
  420877:	and    DWORD PTR [edx-0x7e],esi
  42087a:	mov    esp,0x83ab727d
  42087f:	test   DWORD PTR [ebx],esi
  420881:	mov    ah,0xdc
  420883:	and    ebp,DWORD PTR [esi-0x4e7ecb92]
  420889:	push   cs
  42088a:	push   0x81333add
  42088f:	mov    eax,0x58cf24ad
  420894:	jnp    0x42082e
  420896:	cli    
  420897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420898:	int3   
  420899:	mov    bl,0x37
  42089b:	jg     0x420824
  42089d:	mov    cl,BYTE PTR [esi-0x1e4b764a]
  4208a3:	push   cs
  4208a4:	es hlt 
  4208a6:	or     bl,BYTE PTR [esi]
  4208a8:	xchg   ecx,eax
  4208a9:	sub    al,0x30
  4208ab:	mov    ch,0xa3
  4208ad:	loop   0x420840
  4208af:	stc    
  4208b0:	(bad)  
  4208b1:	shr    dh,cl
  4208b3:	clc    
  4208b4:	xchg   DWORD PTR [ebp-0x75],edx
  4208b7:	dec    esi
  4208b8:	jecxz  0x420844
  4208ba:	push   ecx
  4208bb:	das    
  4208bc:	push   ebp
  4208bd:	stc    
  4208be:	(bad)  
  4208c0:	gs pusha 
  4208c2:	pop    ebp
  4208c3:	fdivr  QWORD PTR [esi+0x8ff44d4]
  4208c9:	int    0x88
  4208cb:	mov    BYTE PTR [edi*1+0x12a73258],bl
  4208d2:	stos   BYTE PTR es:[edi],al
  4208d3:	fimul  DWORD PTR [edi+0x22]
  4208d6:	cwde   
  4208d7:	es nop
  4208d9:	jmp    0x420891
  4208db:	sub    eax,DWORD PTR [edi]
  4208dd:	sbb    al,BYTE PTR [edi-0x30bc3db7]
  4208e3:	daa    
  4208e4:	repz mov dh,0xe7
  4208e7:	gs jmp 0x65cf:0x200cf4cf
  4208ef:	sbb    esp,DWORD PTR [eax-0x7ff30a18]
  4208f5:	mov    esi,0x16479ab5
  4208fa:	xor    ecx,DWORD PTR [ecx+0x21fb08e5]
  420900:	nop
  420901:	push   es
  420902:	push   esi
  420903:	aaa    
  420904:	push   edi
  420905:	or     eax,0xb8fc1390
  42090a:	sub    eax,0xc5227341
  42090f:	inc    eax
  420910:	call   0x4199b1e2
  420915:	ins    DWORD PTR es:[edi],dx
  420916:	mov    al,0x4e
  420918:	jbe    0x420927
  42091a:	or     DWORD PTR [esi],ecx
  42091c:	push   esp
  42091d:	mov    cl,0x41
  42091f:	push   es
  420920:	or     al,bh
  420922:	ret    0x3671
  420925:	loope  0x420919
  420927:	test   DWORD PTR [edi],eax
  420929:	and    al,0x4
  42092b:	push   ecx
  42092c:	addr16 in ax,0x7d
  420930:	popf   
  420931:	push   esp
  420932:	mov    edi,0xbf61fbaa
  420937:	inc    eax
  420938:	(bad)  [eax]
  42093a:	frstor [ecx+0x785075f4]
  420940:	sub    DWORD PTR [ebp+0x74],edx
  420943:	sub    ebp,DWORD PTR [edx-0x42]
  420946:	and    BYTE PTR [esi-0x29298ffc],ah
  42094c:	stos   BYTE PTR es:[edi],al
  42094d:	sbb    esp,DWORD PTR cs:[esi+0x54f7b43e]
  420954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420955:	psubsb mm6,QWORD PTR [ebx]
  420958:	(bad)  
  420959:	cmp    al,0xc1
  42095b:	dec    ebx
  42095c:	inc    ebp
  42095d:	inc    ebx
  42095e:	xchg   edx,eax
  42095f:	lahf   
  420960:	clc    
  420961:	loop   0x420906
  420963:	mov    edx,0x4e890ea1
  420968:	mov    cl,BYTE PTR [edi]
  42096a:	outs   dx,DWORD PTR ds:[esi]
  42096b:	add    al,0xf7
  42096d:	mov    edi,0x2f1d1ff0
  420972:	gs sub ecx,esp
  420975:	(bad)  
  420976:	jmp    0x420925
  420978:	pop    ds
  420979:	jno    0x42092e
  42097b:	push   esp
  42097c:	in     eax,0xa8
  42097e:	dec    ebp
  42097f:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  420981:	push   ebx
  420982:	jno    0x42097b
  420984:	lea    ebp,[eax]
  420986:	cld    
  420987:	xor    ch,BYTE PTR [esi+0x2d]
  42098a:	cmc    
  42098b:	das    
  42098c:	pop    cx
  42098e:	pop    ds
  42098f:	xchg   edx,eax
  420990:	jbe    0x420a0c
  420992:	adc    ebx,edi
  420994:	cld    
  420995:	cs dec edi
  420997:	dec    edx
  420998:	sbb    DWORD PTR ds:0xb7bbbc8e,esi
  42099e:	sti    
  42099f:	push   edx
  4209a0:	lods   eax,DWORD PTR ds:[esi]
  4209a1:	call   0x557299f0
  4209a6:	xor    eax,0xefed63d7
  4209ab:	adc    eax,0xe3a46e16
  4209b0:	loop   0x420a27
  4209b2:	xchg   BYTE PTR [esi-0x66],dl
  4209b5:	cli    
  4209b6:	adc    DWORD PTR [ecx-0x70b579a7],0xffffffc9
  4209bd:	ss push ebp
  4209bf:	aam    0xc5
  4209c1:	adc    BYTE PTR [ebx],dl
  4209c3:	mov    esi,0x4a36622c
  4209c8:	shr    BYTE PTR [ebp+0x56445a89],cl
  4209ce:	xchg   DWORD PTR ds:0x156f9986,ebp
  4209d4:	mov    ch,0x5e
  4209d6:	mov    eax,esi
  4209d8:	mov    esp,0x8082d57a
  4209dd:	lock pop ecx
  4209df:	imul   ebp,DWORD PTR [ebx+0x281fd670],0x874d74e6
  4209e9:	(bad)  
  4209ea:	xchg   ecx,eax
  4209eb:	cmp    al,0xd4
  4209ed:	cmp    bh,BYTE PTR [eax-0x63a68ec8]
  4209f3:	jl     0x4209da
  4209f5:	lods   eax,DWORD PTR ds:[esi]
  4209f6:	inc    edi
  4209f7:	sbb    bl,BYTE PTR [eax]
  4209f9:	adc    bh,bh
  4209fb:	add    eax,0x25758743
  420a00:	pushf  
  420a01:	bound  esi,QWORD PTR [esi-0x1bff3ad3]
  420a07:	cmp    eax,0x95f153dd
  420a0c:	punpcklbw mm3,mm6
  420a0f:	pop    ebp
  420a10:	push   esi
  420a11:	popf   
  420a12:	xchg   edi,eax
  420a13:	jmp    0x420a58
  420a15:	std    
  420a16:	outs   dx,DWORD PTR ds:[esi]
  420a17:	jnp    0x420a88
  420a19:	leave  
  420a1a:	jns    0x4209d7
  420a1c:	add    esp,DWORD PTR [esi+0x206b9320]
  420a22:	xor    eax,0xcefe47a3
  420a27:	push   cs
  420a28:	mov    ch,0x58
  420a2a:	std    
  420a2b:	gs (bad) 
  420a2e:	cld    
  420a2f:	pop    ss
  420a30:	mov    ebx,0x70a900fa
  420a35:	cmp    eax,0xcc53702a
  420a3a:	mov    BYTE PTR [edi],bl
  420a3c:	push   ebp
  420a3d:	fwait
  420a3e:	shl    BYTE PTR [edx+0x2b66b16e],1
  420a44:	mov    al,ds:0xb3550886
  420a49:	mov    edi,0x9d2593a4
  420a4e:	ins    BYTE PTR es:[edi],dx
  420a4f:	xor    edx,DWORD PTR [esi-0x14a442cc]
  420a55:	jne    0x420a90
  420a57:	dec    ebp
  420a58:	hlt    
  420a59:	mov    esi,ecx
  420a5b:	xchg   edi,eax
  420a5c:	int    0x19
  420a5e:	jge    0x420ade
  420a60:	cmp    al,0x16
  420a62:	nop
  420a63:	jnp    0x420a55
  420a65:	stos   DWORD PTR es:[edi],eax
  420a66:	mov    edi,0x9c8b252b
  420a6b:	ins    DWORD PTR es:[edi],dx
  420a6c:	sbb    BYTE PTR [ebx+ebp*8+0x68ea08e],0x89
  420a74:	loope  0x420a6c
  420a76:	mov    ch,0x9e
  420a78:	pop    ds
  420a79:	and    BYTE PTR [edi-0x6d20aa75],0x69
  420a80:	mov    ds:0xa9a5c1a1,al
  420a85:	rcl    ah,0x75
  420a88:	outs   dx,BYTE PTR ds:[esi]
  420a89:	call   0xabca:0x4c4cee75
  420a90:	addr16 ret 
  420a92:	rcl    DWORD PTR [esi],0xcb
  420a95:	aas    
  420a96:	pop    esp
  420a97:	mov    esp,0x41478011
  420a9c:	enter  0xa59d,0xe6
  420aa0:	or     ebx,esi
  420aa2:	pop    esi
  420aa3:	out    0x6f,eax
  420aa5:	dec    edx
  420aa6:	xchg   ecx,eax
  420aa7:	ja     0x420a8f
  420aa9:	popa   
  420aaa:	xor    BYTE PTR [edi+0x4f],dh
  420aad:	test   DWORD PTR [eax-0x51313ea4],ebp
  420ab3:	dec    esp
  420ab4:	adc    dh,BYTE PTR [esi-0x5e6c63d0]
  420aba:	shl    BYTE PTR [edx*1+0x7e78841d],0x63
  420ac2:	pop    ebp
  420ac3:	sbb    eax,0x4cfbc47f
  420ac8:	stos   DWORD PTR es:[edi],eax
  420ac9:	mov    al,ds:0x109e9cef
  420ace:	stos   BYTE PTR es:[edi],al
  420acf:	inc    ebp
  420ad1:	inc    ebx
  420ad2:	bound  edx,QWORD PTR [ecx-0x5f6642de]
  420ad8:	popa   
  420ad9:	test   DWORD PTR [esi],ecx
  420adb:	ror    dh,1
  420add:	jnp    0x420adf
  420adf:	and    ebx,DWORD PTR [edi+ebp*4-0x18091094]
  420ae6:	jmp    0xb6a0:0x9c926adf
  420aed:	stos   DWORD PTR es:[edi],eax
  420aee:	jno    0x420a87
  420af0:	ins    DWORD PTR es:[edi],dx
  420af1:	mov    DWORD PTR [edi+0x46],eax
  420af4:	or     ecx,DWORD PTR [ecx-0x73]
  420af7:	push   esi
  420af8:	or     DWORD PTR [esi],esp
  420afa:	(bad)  
  420afc:	xor    ebx,edx
  420afe:	adc    edx,DWORD PTR ds:0x19a970a7
  420b04:	shl    DWORD PTR [ebx+0x65567eb2],1
  420b0a:	cmp    al,0x5f
  420b0c:	xchg   ebp,eax
  420b0d:	in     eax,dx
  420b0e:	sub    BYTE PTR [eax-0x1c],ch
  420b11:	call   0xe7e5:0x584e6dde
  420b18:	aad    0x8b
  420b1a:	adc    esp,DWORD PTR [ecx]
  420b1c:	push   es
  420b1d:	stos   DWORD PTR es:[edi],eax
  420b1e:	sbb    bh,bh
  420b20:	adc    DWORD PTR [ebx-0x77],0x19
  420b24:	mov    ebp,0x8cceb086
  420b29:	jbe    0x420af2
  420b2b:	push   edi
  420b2c:	dec    edi
  420b2d:	add    BYTE PTR [eax+0x76],0x45
  420b31:	nop
  420b32:	adc    edi,ebx
  420b34:	xchg   ecx,eax
  420b35:	sub    cl,ch
  420b37:	outs   dx,BYTE PTR ds:[esi]
  420b38:	add    BYTE PTR [ebp+0x14ab2e96],0xc6
  420b3f:	imul   ecx,DWORD PTR [esp+ebx*2-0x7e],0xffffffb3
  420b44:	mov    ds:0x399f29a7,eax
  420b49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b4a:	jae    0x420aff
  420b4c:	jnp    0x420b5b
  420b4e:	mov    ecx,0xe98c13f4
  420b53:	sbb    al,0xa2
  420b55:	jno    0x420baa
  420b57:	dec    ecx
  420b58:	sub    al,0xf8
  420b5a:	or     DWORD PTR [edx-0x941d8],edx
  420b60:	jecxz  0x420bc1
  420b62:	sub    bl,BYTE PTR [eax+0x5b9005d2]
  420b68:	shr    BYTE PTR [edi+0x4a53a8f4],cl
  420b6e:	jecxz  0x420bc3
  420b70:	adc    BYTE PTR [esi],ah
  420b72:	pop    esp
  420b73:	xor    DWORD PTR [eax+0x640a06d3],ecx
  420b79:	aas    
  420b7a:	pop    eax
  420b7b:	mov    edi,0x18858b7a
  420b80:	(bad)  
  420b81:	(bad)  
  420b82:	dec    DWORD PTR [ebx-0x14373]
  420b88:	(bad)  
  420b89:	jmp    0x420f70
  420b8e:	jo     0x420be5
  420b90:	mov    es,WORD PTR [eax+edi*4-0x74]
  420b94:	mov    ah,0x79
  420b96:	rcl    ah,cl
  420b98:	mov    WORD PTR [esi+eiz*2+0x89e1222],fs
  420b9f:	stos   DWORD PTR es:[edi],eax
  420ba0:	sar    BYTE PTR [esi-0x41413bb6],0xb8
  420ba7:	gs push ss
  420ba9:	mov    esp,DWORD PTR [edi+0x32]
  420bac:	fwait
  420bad:	xor    ah,ch
  420baf:	jle    0x420c23
  420bb1:	shl    DWORD PTR [edx-0xd],1
  420bb4:	ins    DWORD PTR es:[edi],dx
  420bb5:	(bad)  
  420bb6:	or     ebx,DWORD PTR [edx+ebp*2]
  420bb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bba:	push   esp
  420bbb:	add    edx,edx
  420bbd:	jb     0x420c13
  420bbf:	loopne 0x420b70
  420bc1:	adc    dl,ah
  420bc3:	add    eax,0xe8300ab7
  420bc8:	mov    al,0x36
  420bca:	call   ecx
  420bcc:	push   ss
  420bcd:	xchg   esi,eax
  420bce:	push   cs
  420bcf:	mov    ch,0x5e
  420bd1:	sub    esi,DWORD PTR [eax+0x731a9bbe]
  420bd7:	je     0x420b91
  420bd9:	arpl   di,dx
  420bdb:	out    0x75,eax
  420bdd:	(bad)  
  420bde:	push   eax
  420bdf:	dec    edi
  420be0:	push   ds
  420be1:	in     eax,dx
  420be2:	sar    BYTE PTR [ebx+0x6adf26a8],cl
  420be8:	ins    DWORD PTR es:[edi],dx
  420be9:	test   al,0x7c
  420beb:	fcmovb st,st(1)
  420bed:	sbb    DWORD PTR [esi],ebp
  420bef:	lahf   
  420bf0:	jae    0x420b97
  420bf2:	iret   
  420bf3:	sbb    dl,bh
  420bf5:	in     eax,0xb4
  420bf7:	cmp    al,0xff
  420bf9:	ret    
  420bfa:	outs   dx,DWORD PTR ds:[esi]
  420bfb:	sar    cl,0x4c
  420bfe:	jno    0x420c47
  420c00:	push   esp
  420c01:	inc    BYTE PTR [ebx+ecx*1+0x42]
  420c05:	xchg   esp,eax
  420c06:	(bad)  
  420c07:	stc    
  420c08:	(bad)  
  420c09:	mov    ebp,0xddc8b51d
  420c0e:	xchg   cl,dh
  420c10:	gs pop esp
  420c12:	sti    
  420c13:	push   ecx
  420c14:	ror    al,1
  420c16:	inc    esp
  420c17:	mov    esi,ecx
  420c19:	pop    DWORD PTR [edx]
  420c1b:	cmp    DWORD PTR [edi-0x3723081a],0xc1bacc02
  420c25:	mov    ah,0xc5
  420c27:	jge    0x420c9e
  420c29:	dec    edx
  420c2a:	(bad)  
  420c2b:	push   ecx
  420c2c:	je     0x420c34
  420c2e:	xor    edx,DWORD PTR [edi-0x5b502c29]
  420c34:	out    dx,al
  420c35:	js     0x420c30
  420c37:	or     al,0xa
  420c39:	fld    TBYTE PTR [ebx]
  420c3b:	fnstsw WORD PTR [ebx]
  420c3d:	sbb    al,0x8
  420c3f:	bound  ebx,QWORD PTR [esi-0x1]
  420c42:	jecxz  0x420c39
  420c44:	enter  0xc86b,0x73
  420c48:	imul   esp,ebp,0xc9e581e1
  420c4e:	adc    eax,0x5946d2b1
  420c53:	mov    dh,BYTE PTR [edi]
  420c55:	cwde   
  420c56:	push   ebx
  420c57:	mov    bh,0x1d
  420c59:	and    eax,0xba5d1898
  420c5e:	icebp  
  420c5f:	inc    edx
  420c60:	das    
  420c61:	lahf   
  420c62:	ja     0x420c86
  420c64:	mov    ds:0x34c6d315,al
  420c69:	dec    eax
  420c6a:	fcomp  QWORD PTR [edx-0x2dde2cbd]
  420c70:	ss cmp bl,dh
  420c73:	xchg   ebp,eax
  420c74:	or     BYTE PTR [ecx-0x6b69fea3],cl
  420c7a:	push   ebx
  420c7b:	leave  
  420c7c:	mov    ebx,0x26adf32a
  420c81:	or     BYTE PTR [ebx],ah
  420c83:	test   eax,0xbcbd2771
  420c88:	loope  0x420c58
  420c8a:	mov    ecx,0x9e05822e
  420c8f:	out    0x98,eax
  420c91:	cmp    al,0x93
  420c93:	clc    
  420c94:	cdq    
  420c95:	push   0xffffffc6
  420c97:	fild   QWORD PTR [esi-0x27694709]
  420c9d:	xor    DWORD PTR [ecx-0x78],ebp
  420ca0:	mov    eax,0x20df3bc6
  420ca5:	dec    edx
  420ca6:	dec    ebp
  420ca7:	std    
  420ca8:	jns    0x420cec
  420caa:	ins    BYTE PTR es:[edi],dx
  420cab:	mov    DWORD PTR [esi-0x29],esp
  420cae:	(bad)  
  420caf:	xchg   esi,eax
  420cb0:	xchg   edx,eax
  420cb1:	loopne 0x420c67
  420cb3:	cs hlt 
  420cb5:	push   0x1cb21190
  420cba:	pop    ds
  420cbb:	cmp    DWORD PTR [edi-0x65e6c1a],edx
  420cc1:	dec    esi
  420cc2:	sbb    eax,0xf42a6e3a
  420cc7:	loop   0x420c57
  420cc9:	xor    eax,DWORD PTR [esp+ecx*8]
  420ccc:	cmp    bl,BYTE PTR [edi+0x4b1e25f3]
  420cd2:	sub    DWORD PTR [ebp+0x1625eb49],0xffffffde
  420cd9:	mov    al,0xae
  420cdb:	sbb    al,0x43
  420cdd:	mov    cl,0x61
  420cdf:	fcom   QWORD PTR [esi+0x5a]
  420ce2:	or     DWORD PTR [eax+0x5c262367],ecx
  420ce8:	out    dx,al
  420ce9:	jne    0x420c73
  420ceb:	cmp    ah,BYTE PTR [edi]
  420ced:	mov    dh,0x14
  420cef:	or     BYTE PTR [eax+0x44],dh
  420cf2:	dec    esp
  420cf3:	(bad)  
  420cf4:	imul   DWORD PTR [ebp+0x18b4c495]
  420cfa:	push   ebx
  420cfb:	mov    dh,0xbc
  420cfd:	xlat   BYTE PTR ds:[ebx]
  420cfe:	jl     0x420d7d
  420d00:	cli    
  420d01:	test   eax,0x3e509b42
  420d06:	test   BYTE PTR ds:0x6bac4d4e,dl
  420d0c:	xchg   edx,eax
  420d0d:	mov    ch,0x41
  420d0f:	mov    al,0x5d
  420d11:	mov    al,ds:0x3b3dd298
  420d16:	sub    eax,0xfa8eeae9
  420d1b:	dec    eax
  420d1c:	inc    ebx
  420d1d:	aas    
  420d1e:	inc    ebp
  420d1f:	adc    bh,BYTE PTR [esi-0x331c4fd4]
  420d25:	xor    BYTE PTR [ebx],ch
  420d27:	mov    BYTE PTR [ebx-0x616aef82],bl
  420d2d:	scas   al,BYTE PTR es:[edi]
  420d2e:	pop    ebx
  420d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d30:	adc    bl,dh
  420d32:	dec    edx
  420d33:	loope  0x420d97
  420d35:	aam    0x9c
  420d37:	inc    edi
  420d38:	inc    ebx
  420d39:	fwait
  420d3a:	dec    ebx
  420d3b:	iret   
  420d3c:	push   eax
  420d3d:	xchg   ebx,eax
  420d3e:	or     eax,0x8b312f89
  420d43:	fadd   DWORD PTR [edx]
  420d45:	std    
  420d46:	add    BYTE PTR ds:0xb8d69001,al
  420d4c:	scas   eax,DWORD PTR es:[edi]
  420d4d:	and    al,BYTE PTR [esi]
  420d4f:	fdivr  st(2),st
  420d51:	arpl   WORD PTR ds:0x8678fc78,dx
  420d57:	sub    ch,BYTE PTR [ebx+0x68418828]
  420d5d:	test   BYTE PTR [ebx-0x78],dh
  420d60:	inc    edi
  420d61:	out    dx,eax
  420d62:	out    dx,al
  420d63:	out    dx,eax
  420d64:	push   eax
  420d65:	sbb    eax,0xdefe381e
  420d6a:	jp     0x420deb
  420d6c:	fdivr  DWORD PTR [eax-0x46]
  420d6f:	mov    eax,0x28cac449
  420d74:	fs not ah
  420d77:	mov    DWORD PTR [ebp+0x17139d3c],ebp
  420d7d:	mov    ch,0xb5
  420d7f:	retf   0xd5f5
  420d82:	mov    dl,0xa8
  420d84:	ret    
  420d85:	(bad)  
  420d87:	xor    BYTE PTR [ecx-0x1b3cb202],0x30
  420d8e:	sub    ah,BYTE PTR ds:0xd0df029f
  420d94:	cld    
  420d95:	(bad)  [ebx+0x5e]
  420d98:	loope  0x420d81
  420d9a:	ins    DWORD PTR es:[edi],dx
  420d9b:	xor    esi,DWORD PTR [ecx-0x5ff0b139]
  420da1:	mov    bh,0x25
  420da3:	cmp    ah,BYTE PTR [esi-0xea686df]
  420da9:	xchg   esp,eax
  420daa:	cmp    DWORD PTR [edx+0x78aafbba],esi
  420db0:	add    sp,ax
  420db3:	and    BYTE PTR [esi+0x28],0xa2
  420db7:	cmp    BYTE PTR ds:0xf43d1bb1,0x85
  420dbe:	ins    DWORD PTR es:[edi],dx
  420dbf:	cmp    BYTE PTR [edi+eax*2+0x671b156c],0xa2
  420dc7:	and    DWORD PTR [edx+0x7a1b11d7],ebx
  420dcd:	call   0x6fe77769
  420dd2:	lahf   
  420dd3:	adc    ch,ah
  420dd5:	clc    
  420dd6:	or     DWORD PTR [edi-0x1333f433],edx
  420ddc:	push   esi
  420ddd:	xor    eax,0x1c666c4c
  420de2:	mov    dh,0x15
  420de4:	fnstenv [edi]
  420de6:	mov    ds:0xb44fb0f3,al
  420deb:	sbb    dh,BYTE PTR [edi]
  420ded:	(bad)  
  420dee:	(bad)  
  420def:	jbe    0x420db3
  420df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420df2:	mov    esi,0x379bd6fd
  420df7:	jmp    0x8f50c1f1
  420dfc:	leave  
  420dfd:	ret    0x6f12
  420e00:	loope  0x420e75
  420e02:	sbb    esp,DWORD PTR [eax+edi*2-0xcd60864]
  420e09:	stos   DWORD PTR es:[edi],eax
  420e0a:	aam    0xe1
  420e0c:	sbb    cl,al
  420e0e:	pop    edi
  420e0f:	pop    esi
  420e10:	xchg   DWORD PTR [ebp-0x4f],ebp
  420e13:	leave  
  420e14:	les    ebp,FWORD PTR [ecx-0x70]
  420e17:	pop    ecx
  420e18:	das    
  420e19:	popa   
  420e1a:	push   ds
  420e1b:	shr    BYTE PTR [edx],1
  420e1d:	call   0xadc6f607
  420e22:	mov    dl,0x85
  420e24:	ret    0xec1b
  420e27:	(bad)  [eax+eax*1]
  420e2a:	jmp    0x420e8c
  420e2c:	daa    
  420e2d:	lahf   
  420e2e:	call   0x939e30b0
  420e33:	scas   eax,DWORD PTR es:[edi]
  420e34:	gs es push 0xe9bc04a2
  420e3b:	fsubr  DWORD PTR [ebx-0x66]
  420e3e:	mov    bh,0x54
  420e40:	cli    
  420e41:	jae    0x420ea3
  420e43:	fistp  QWORD PTR [eax+ebx*2-0x75c8451a]
  420e4a:	mov    ebp,DWORD PTR [ebp+0x63cedd43]
  420e50:	mov    ds:0xa9945f83,al
  420e55:	iret   
  420e56:	xchg   ecx,eax
  420e57:	call   0x9109:0x1592340d
  420e5e:	pusha  
  420e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e60:	push   ebp
  420e61:	stc    
  420e62:	nop
  420e63:	test   BYTE PTR [edi-0x433ce9b8],0x7
  420e6a:	es nop
  420e6c:	imul   ecx,esp,0x6a
  420e6f:	(bad)  
  420e70:	cmp    eax,0x429abb08
  420e75:	leave  
  420e76:	lods   al,BYTE PTR ds:[esi]
  420e77:	jp     0x420e5f
  420e79:	jne    0x420ee3
  420e7b:	and    al,0x75
  420e7d:	fsub   DWORD PTR [eax+0x2c177c0f]
  420e83:	push   esi
  420e84:	fdivr  QWORD PTR [ebx+0x53]
  420e87:	xor    bh,BYTE PTR [esi]
  420e89:	push   eax
  420e8a:	jmp    FWORD PTR [esp+edx*4+0x26]
  420e8e:	aaa    
  420e8f:	adc    DWORD PTR [ebx+esi*4+0x7845643f],ebx
  420e96:	dec    eax
  420e97:	loopne 0x420e8c
  420e99:	cmc    
  420e9a:	sar    DWORD PTR [edi+0x18],cl
  420e9d:	in     eax,dx
  420e9e:	adc    eax,0xd95d15ae
  420ea3:	iret   
  420ea4:	jle    0x420e80
  420ea6:	dec    esi
  420ea7:	out    0x60,al
  420ea9:	xchg   edi,eax
  420eaa:	pop    edx
  420eab:	jle    0x420f15
  420ead:	jo     0x420f13
  420eaf:	das    
  420eb0:	outs   dx,BYTE PTR ds:[esi]
  420eb1:	push   es
  420eb2:	pop    es
  420eb3:	cmp    BYTE PTR [ebx+0x517eabf1],0xc7
  420eba:	sbb    eax,0xa2b171cc
  420ebf:	sar    bh,1
  420ec1:	push   esp
  420ec2:	ss add al,0xf8
  420ec5:	test   DWORD PTR [edx+0x18],esp
  420ec8:	mov    ebp,0xba9d454d
  420ecd:	test   eax,ecx
  420ecf:	mov    ds:0x63c16d94,al
  420ed4:	daa    
  420ed5:	push   edi
  420ed6:	std    
  420ed7:	out    0x77,eax
  420ed9:	adc    BYTE PTR [ebx-0x4a],bh
  420edc:	fadd   QWORD PTR [esi]
  420ede:	retf   0xf807
  420ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ee2:	cmp    edi,DWORD PTR [ebx-0x58ec7791]
  420ee8:	xchg   ebx,edi
  420eea:	hlt    
  420eeb:	imul   edx,DWORD PTR [esi-0x53],0x415f10f
  420ef2:	fbstp  TBYTE PTR [ecx]
  420ef4:	mov    ecx,0xfdd38c5a
  420ef9:	(bad)  
  420efa:	int    0x38
  420efc:	ret    
  420efd:	cmp    ebx,edi
  420eff:	repnz xor DWORD PTR [ebx],ebp
  420f02:	pop    ebp
  420f03:	jne    0x420ea4
  420f05:	ins    BYTE PTR es:[edi],dx
  420f06:	inc    esp
  420f07:	sbb    al,0x2f
  420f09:	inc    edx
  420f0a:	jg     0x420f55
  420f0c:	mov    ecx,0xc783b49b
  420f11:	jle    0x420f18
  420f13:	and    DWORD PTR [esi],edx
  420f15:	pop    ebp
  420f16:	push   ecx
  420f17:	fisub  DWORD PTR [edi+ecx*4-0x345f4e93]
  420f1e:	repz jo 0x420f27
  420f21:	repnz lods al,BYTE PTR ds:[esi]
  420f23:	xor    BYTE PTR [edi-0x36],ah
  420f26:	jne    0x420f95
  420f28:	push   eax
  420f29:	sbb    dl,ah
  420f2b:	mov    ch,0x4b
  420f2d:	mov    ah,0xa9
  420f2f:	xchg   edi,eax
  420f30:	inc    eax
  420f31:	int    0xc1
  420f33:	pusha  
  420f34:	mov    ecx,0xe5c9df6f
  420f39:	(bad)  
  420f3a:	push   ecx
  420f3b:	cs cdq 
  420f3d:	jns    0x420f66
  420f3f:	dec    ebp
  420f40:	mov    al,ds:0x7b931442
  420f45:	clc    
  420f46:	or     bl,ch
  420f48:	pop    es
  420f49:	pop    ecx
  420f4a:	mov    ah,0xa9
  420f4c:	mov    ecx,0x7e9c2854
  420f51:	sub    al,0xae
  420f53:	in     eax,dx
  420f54:	fsub   st,st(2)
  420f56:	push   cs
  420f57:	shl    ah,0x58
  420f5a:	les    edx,FWORD PTR ds:0x23be2b85
  420f60:	pop    eax
  420f61:	mov    ah,0xbf
  420f63:	call   0x6597b143
  420f68:	cmc    
  420f69:	leave  
  420f6a:	fild   QWORD PTR [eax]
  420f6c:	gs mov edx,0x483b1b92
  420f72:	sbb    BYTE PTR [edi],cl
  420f74:	test   BYTE PTR [ebx],bh
  420f76:	adc    al,BYTE PTR [eax]
  420f78:	add    BYTE PTR [ebx-0x1437b],cl
  420f7e:	dec    DWORD PTR [ebx+0x558bc84d]
  420f84:	or     BYTE PTR [ebx],al
  420f86:	adc    al,0x81
  420f88:	mov    DWORD PTR [ebp-0x48],edx
  420f8b:	mov    eax,DWORD PTR [ebp-0x48]
  420f8e:	mov    DWORD PTR [ebp-0x210],eax
  420f94:	mov    eax,DWORD PTR [ebp+0xc]
  420f97:	mov    DWORD PTR [ebp-0x20c],eax
  420f9d:	mov    DWORD PTR [ebp-0x1f0],0xcb79b576
  420fa7:	mov    DWORD PTR [ebp-0x1ec],0x9c2b8ae8
  420fb1:	mov    DWORD PTR [ebp-0x1e0],0xcb79b572
  420fbb:	mov    DWORD PTR [ebp-0x1dc],0x9c2b8ae8
  420fc5:	lea    eax,[ebp-0x1e8]
  420fcb:	mov    DWORD PTR [ebp-0x1f4],eax
  420fd1:	mov    eax,DWORD PTR [ebp-0x20c]
  420fd7:	movzx  eax,WORD PTR [eax+0x20]
  420fdb:	xor    eax,0xa59b
  420fe0:	movzx  eax,ax
  420fe3:	sar    eax,1
  420fe5:	mov    ecx,DWORD PTR [ebp-0x20c]
  420feb:	movzx  ecx,WORD PTR [ecx+0x20]
  420fef:	xor    ecx,0xa59b
  420ff5:	movzx  ecx,cx
  420ff8:	shl    ecx,0xf
  420ffb:	or     eax,ecx
  420ffd:	movzx  eax,ax
  421000:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421006:	mov    DWORD PTR [ecx],eax
  421008:	mov    eax,DWORD PTR [ebp-0x1e0]
  42100e:	mov    edx,DWORD PTR [ebp-0x1dc]
  421014:	xor    eax,0xcb79b576
  421019:	xor    edx,0x9c2b8ae8
  42101f:	mov    cl,0x2
  421021:	call   0x408bb8
  421026:	mov    ebx,eax
  421028:	mov    esi,edx
  42102a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421030:	mov    edx,DWORD PTR [ebp-0x1dc]
  421036:	xor    eax,0xcb79b576
  42103b:	jmp    0x421422
  421040:	xchg   ebp,eax
  421041:	or     ebp,DWORD PTR ds:0x9a3cb322
  421047:	mov    esp,0x90cf9e52
  42104c:	int    0xcb
  42104e:	mov    al,ds:0xc0b39390
  421053:	mov    esi,0xbebec44a
  421058:	xlat   BYTE PTR ds:[ebx]
  421059:	mov    edi,0x2063c23e
  42105e:	mov    cl,0xa5
  421060:	jle    0x420feb
  421062:	inc    esi
  421063:	jecxz  0x4210c9
  421065:	jmp    0x421004
  421067:	add    bh,BYTE PTR [eax]
  421069:	xchg   ebp,eax
  42106a:	mov    edx,0xc52b37d3
  42106f:	mov    ds:0x2e9215e8,eax
  421074:	mov    bh,0x89
  421076:	aaa    
  421077:	cmp    BYTE PTR [edx+0x53],0x0
  42107b:	(bad)  
  42107c:	jg     0x421032
  42107e:	lds    edx,FWORD PTR es:[edi]
  421081:	jmp    0x4210f5
  421083:	xlat   BYTE PTR ds:[ebx]
  421084:	ret    
  421085:	test   al,0x80
  421087:	lds    esi,FWORD PTR [esi-0x6ea7880a]
  42108d:	js     0x4210e9
  42108f:	push   edi
  421090:	xchg   bl,dh
  421092:	mov    cl,0x19
  421094:	inc    esi
  421095:	sti    
  421096:	outs   dx,DWORD PTR ds:[esi]
  421097:	jecxz  0x421047
  421099:	push   ss
  42109a:	lea    ebx,[esi]
  42109c:	xor    eax,0xb95fb527
  4210a1:	fwait
  4210a2:	call   0xa6a9:0x12157721
  4210a9:	dec    esi
  4210aa:	fild   WORD PTR [edi]
  4210ac:	stos   BYTE PTR es:[edi],al
  4210ad:	idiv   BYTE PTR [esi+0x67]
  4210b0:	lock sbb DWORD PTR [edi+0x52],0xffffff8f
  4210b5:	or     BYTE PTR [ecx+ebx*1+0x6e3b7b80],dl
  4210bc:	iret   
  4210bd:	cdq    
  4210be:	mov    dl,0x75
  4210c0:	(bad)  
  4210c1:	out    dx,eax
  4210c2:	push   esp
  4210c3:	pop    edx
  4210c4:	jbe    0x421110
  4210c6:	daa    
  4210c7:	mov    ebp,0xed0d650b
  4210cc:	add    al,0x7d
  4210ce:	cmp    bh,BYTE PTR [ebx]
  4210d0:	repnz xchg ebx,eax
  4210d2:	mov    esi,0xc776c085
  4210d7:	push   esp
  4210d8:	sub    DWORD PTR [esi+eiz*8],esp
  4210db:	mov    bh,0xfc
  4210dd:	mov    al,0xf
  4210df:	jp     0x4210c5
  4210e1:	and    eax,0x8a181acc
  4210e6:	adc    al,0xef
  4210e8:	cdq    
  4210e9:	mov    al,ds:0x4a2c6b73
  4210ee:	mov    ss,ecx
  4210f0:	xlat   BYTE PTR ds:[ebx]
  4210f1:	lods   eax,DWORD PTR ds:[esi]
  4210f2:	mov    gs,WORD PTR [ebp-0xe]
  4210f5:	sub    BYTE PTR [ebp+0x49],bl
  4210f8:	and    DWORD PTR [esp+edx*2+0x58e92974],ebp
  4210ff:	pmaddwd mm5,QWORD PTR [ebx]
  421102:	push   edi
  421103:	sar    DWORD PTR [esi+0x78e9a77c],0x5d
  42110a:	div    DWORD PTR [esi]
  42110c:	out    0x24,eax
  42110e:	(bad)  
  42110f:	cld    
  421110:	sbb    al,0xfe
  421112:	ja     0x42115b
  421114:	in     eax,dx
  421115:	(bad)  
  421116:	push   0x49
  421118:	push   ecx
  421119:	adc    BYTE PTR [edx-0x532628a],ch
  42111f:	clc    
  421120:	and    DWORD PTR [esi+esi*8-0x7f],eax
  421124:	mov    al,0xa5
  421126:	(bad)  
  421127:	leave  
  421128:	adc    al,BYTE PTR [ecx-0x41]
  42112b:	loop   0x4211a3
  42112d:	and    ebx,ebp
  42112f:	cmc    
  421130:	inc    edx
  421131:	rcr    BYTE PTR [edi+0x42],0x9e
  421135:	mov    eax,ds:0x446ab0eb
  42113a:	add    BYTE PTR [esi],ah
  42113c:	cli    
  42113d:	push   ebx
  42113e:	aaa    
  42113f:	adc    esi,eax
  421141:	and    ebp,esp
  421143:	xor    BYTE PTR [esi+0x52],bl
  421146:	sbb    BYTE PTR [ecx+0x53],cl
  421149:	or     BYTE PTR [ebx],dh
  42114b:	mov    dh,0x1f
  42114d:	cmp    eax,0xe5741b48
  421152:	mov    di,0x64ab
  421156:	mov    eax,0xe92392da
  42115b:	jae    0x4211c8
  42115d:	dec    edx
  42115e:	popf   
  42115f:	in     eax,0xab
  421161:	push   esi
  421162:	cs pop esi
  421164:	lods   al,BYTE PTR ds:[esi]
  421165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421166:	adc    edi,DWORD PTR [edi]
  421168:	inc    esi
  421169:	inc    ecx
  42116a:	xchg   esi,eax
  42116b:	push   ebp
  42116c:	jl     0x42118c
  42116e:	jecxz  0x421163
  421170:	leave  
  421171:	jns    0x42118e
  421173:	lock xor al,bh
  421176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421177:	sti    
  421178:	or     DWORD PTR [edi-0x5514aabb],edx
  42117e:	sahf   
  42117f:	div    ebp
  421181:	dec    ecx
  421182:	sbb    ah,BYTE PTR [edx-0x5a4891a9]
  421188:	cli    
  421189:	lods   eax,DWORD PTR ds:[esi]
  42118a:	and    eax,0xdf49c936
  42118f:	data16 fst DWORD PTR [edx-0x347eccd7]
  421196:	xlat   BYTE PTR ds:[ebx]
  421197:	sbb    al,0xae
  421199:	push   edi
  42119a:	add    al,0x5b
  42119c:	fld    TBYTE PTR [eax-0x12cd4885]
  4211a2:	lar    ecx,WORD PTR [ebx+0x76]
  4211a6:	in     al,dx
  4211a7:	(bad)  
  4211a8:	and    DWORD PTR [ecx],ebx
  4211aa:	push   ebx
  4211ab:	jmp    0x4211cb
  4211ad:	rcr    BYTE PTR [eax+0x75],1
  4211b0:	imul   esp,DWORD PTR es:[ebx+0x1524631c],0xea90ff15
  4211bb:	test   DWORD PTR cs:[edx+0x53],0xb5993d50
  4211c3:	xor    eax,0x503aa786
  4211c8:	jae    0x4211c5
  4211ca:	mov    ebp,?
  4211cc:	int3   
  4211cd:	jge    0x4211af
  4211cf:	(bad)  
  4211d0:	push   ebx
  4211d1:	mov    ah,BYTE PTR [edi+0x64c803c0]
  4211d7:	mov    dh,0x55
  4211d9:	(bad)  
  4211da:	mov    ebx,0x7ef9c636
  4211df:	cmp    eax,0xc64f6e79
  4211e4:	cdq    
  4211e5:	cdq    
  4211e6:	fdivr  DWORD PTR [edx+ecx*1+0x41efdc9f]
  4211ed:	push   ss
  4211ee:	cdq    
  4211ef:	fwait
  4211f0:	mov    esp,0x5bc52e2f
  4211f5:	cmc    
  4211f6:	mov    ds:0xd21b8aeb,eax
  4211fb:	sti    
  4211fc:	cmc    
  4211fd:	and    al,0x33
  4211ff:	mov    edi,DWORD PTR [ebp+0x61]
  421202:	rol    ebx,0x77
  421205:	fldenv [ebx-0x5bea08db]
  42120b:	cmp    al,0x11
  42120d:	sbb    DWORD PTR [edi-0x7fd7c7c1],ecx
  421213:	popf   
  421214:	mov    al,0xbe
  421216:	sub    esi,ebp
  421218:	cmp    ecx,DWORD PTR [ebp-0x164e2b4e]
  42121e:	add    al,0x7c
  421220:	js     0x421242
  421222:	xchg   ecx,eax
  421223:	mov    edx,0xcfb15fbf
  421228:	xor    BYTE PTR [edx+0x45],0xd7
  42122c:	adc    BYTE PTR [ecx],dh
  42122e:	cdq    
  42122f:	sbb    eax,0x3d734abe
  421234:	add    al,0x34
  421236:	jo     0x421248
  421238:	mov    dl,0xac
  42123a:	int3   
  42123b:	xchg   edx,eax
  42123c:	inc    eax
  42123d:	fprem1 
  42123f:	out    0x3e,eax
  421241:	mov    cl,0xa6
  421243:	dec    edi
  421244:	adc    BYTE PTR [ebx+ecx*8],0x94
  421248:	pop    edi
  421249:	or     al,BYTE PTR [ecx-0x2d8635c6]
  42124f:	out    0x60,eax
  421251:	ins    BYTE PTR es:[edi],dx
  421252:	(bad)  [edx-0x5f]
  421255:	sbb    eax,0x5074dd09
  42125a:	fstp   QWORD PTR [eax+0x53]
  42125d:	fistp  QWORD PTR [ebp+eiz*8-0x74]
  421261:	lock js 0x4212e3
  421264:	xchg   BYTE PTR [eax-0x32c56dbf],dh
  42126a:	out    0x53,eax
  42126c:	fimul  WORD PTR [ebx+0x7b7639aa]
  421272:	jno    0x421260
  421274:	(bad)  
  421275:	js     0x4211f9
  421277:	add    eax,0xc8c4c4e7
  42127c:	add    DWORD PTR [edx],edx
  42127e:	xchg   ecx,eax
  42127f:	jnp    0x4212e9
  421281:	fbstp  TBYTE PTR [edx]
  421283:	dec    ebp
  421284:	inc    edx
  421285:	jle    0x42127b
  421287:	test   eax,0x2f3829c5
  42128c:	arpl   WORD PTR [ebx+0x22aacf54],sp
  421292:	das    
  421293:	inc    ebp
  421294:	add    ch,BYTE PTR [ecx]
  421296:	es dec ebp
  421298:	mov    eax,0x435647f6
  42129d:	xor    ecx,DWORD PTR [edi+0x4c]
  4212a0:	mov    ds:0x51b9aa1a,eax
  4212a5:	mov    eax,0x577cf0a
  4212aa:	mov    eax,ds:0xc371883e
  4212af:	(bad)  [esp+edx*8+0x38]
  4212b3:	in     eax,dx
  4212b4:	dec    ecx
  4212b5:	in     al,0x40
  4212b7:	rcr    BYTE PTR [ebp+0x42],1
  4212ba:	loopne 0x42130b
  4212bc:	aam    0xaa
  4212be:	inc    esi
  4212bf:	mov    al,0xce
  4212c1:	adc    ecx,DWORD PTR [ebx-0x7cc9aa7f]
  4212c7:	stc    
  4212c8:	std    
  4212c9:	cmc    
  4212ca:	sub    ebp,ebp
  4212cc:	jb     0x4212df
  4212ce:	fisttp QWORD PTR [ebx]
  4212d0:	test   dh,bh
  4212d2:	and    bl,dl
  4212d4:	inc    edi
  4212d5:	retf   
  4212d6:	sub    BYTE PTR [edx+0x2f1f0b82],bh
  4212dc:	sub    ebx,esi
  4212de:	cmp    eax,0x8dad200b
  4212e3:	sbb    BYTE PTR [edi-0x1e604d0a],ch
  4212e9:	arpl   WORD PTR [edi],si
  4212eb:	imul   ecx,DWORD PTR [esi-0x1c],0xf
  4212ef:	mov    ebx,0xb24208cc
  4212f4:	test   DWORD PTR [eax],0xc7c88c8d
  4212fa:	bound  ebp,QWORD PTR ds:0x4cfd2617
  421300:	fmul   QWORD PTR [ebp-0x59bdec65]
  421306:	push   edx
  421307:	ins    DWORD PTR es:[edi],dx
  421308:	lea    ebx,[edi-0x220210bd]
  42130e:	adc    ebp,DWORD PTR [edi+0x73]
  421311:	sti    
  421312:	pop    ecx
  421313:	gs adc al,0xf7
  421316:	jb     0x421355
  421318:	inc    esi
  421319:	clc    
  42131a:	cmp    DWORD PTR [edi],0x1bd4b9df
  421320:	xchg   bl,dh
  421322:	lea    eax,[eax]
  421324:	lock xchg esp,eax
  421326:	outs   dx,DWORD PTR ds:[esi]
  421327:	in     al,dx
  421328:	sbb    DWORD PTR [eax-0x16c42262],edx
  42132e:	popa   
  42132f:	push   ecx
  421330:	xchg   ebp,eax
  421331:	fild   WORD PTR [esi+0x5df7483]
  421337:	xor    al,0x83
  421339:	pop    ecx
  42133a:	ror    BYTE PTR [edx+0x61],cl
  42133d:	mov    cl,0x9c
  42133f:	sbb    DWORD PTR ds:0xfdd4fc5,ebx
  421345:	add    DWORD PTR [ecx],0x3b
  421348:	fstp   DWORD PTR [esi]
  42134a:	popf   
  42134b:	push   ebx
  42134c:	push   es
  42134d:	xchg   edx,eax
  42134e:	sub    DWORD PTR [esi+0x2923c2e3],ebx
  421354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421355:	scas   al,BYTE PTR es:[edi]
  421356:	cmp    BYTE PTR [edi-0x74534732],0x80
  42135d:	jbe    0x42138e
  42135f:	mov    edx,0x9cd063b
  421364:	or     BYTE PTR [edi*2+0x2e518c7a],bl
  42136b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42136c:	and    DWORD PTR [esi+0x6647c2db],eax
  421372:	mov    esi,0xb4a665b8
  421377:	sbb    DWORD PTR [ebx+0xb],eax
  42137a:	pop    ds
  42137b:	call   FWORD PTR [ebp+ebx*4+0x53]
  42137f:	or     al,0x33
  421381:	adc    DWORD PTR [ecx+eiz*4],edx
  421384:	lea    ecx,[ebx-0x75]
  421387:	jns    0x421369
  421389:	repz ficom DWORD PTR [edx]
  42138c:	aad    0x43
  42138e:	mov    edx,0x33d03422
  421393:	cdq    
  421394:	xor    BYTE PTR [esi+0xaae970b],0xab
  42139b:	sbb    esp,DWORD PTR [eax]
  42139d:	pop    esi
  42139e:	mov    cl,0x28
  4213a0:	push   ebx
  4213a1:	repz jg 0x4213c0
  4213a4:	pushf  
  4213a5:	jno    0x42141a
  4213a7:	cdq    
  4213a8:	lahf   
  4213a9:	inc    edx
  4213aa:	cmp    ch,dh
  4213ac:	popa   
  4213ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213ae:	(bad)  
  4213af:	cmp    BYTE PTR [edx+0x5c],bl
  4213b2:	mov    ch,bl
  4213b4:	jl     0x4213fa
  4213b6:	sub    esp,DWORD PTR [edx]
  4213b8:	adc    eax,0x9e289805
  4213bd:	and    BYTE PTR [esi-0x5b050fe8],0x50
  4213c4:	fs push esp
  4213c6:	mov    ds:0x76dec8ec,eax
  4213cb:	rep outs dx,DWORD PTR ds:[esi]
  4213cd:	aad    0x29
  4213cf:	in     al,dx
  4213d0:	cdq    
  4213d1:	lods   al,BYTE PTR ds:[esi]
  4213d2:	gs jbe 0x4213aa
  4213d5:	retf   0x5495
  4213d8:	stos   BYTE PTR es:[edi],al
  4213d9:	cmp    ecx,ebx
  4213db:	jnp    0x4213ab
  4213dd:	in     eax,dx
  4213de:	jp     0x421375
  4213e0:	add    eax,0x7cf5fadc
  4213e5:	ins    BYTE PTR es:[edi],dx
  4213e6:	xchg   ecx,ecx
  4213e8:	das    
  4213e9:	mov    bl,0x15
  4213eb:	addr16 inc edx
  4213ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213ee:	push   ecx
  4213ef:	add    ebp,DWORD PTR [edx-0x5e]
  4213f2:	outs   dx,BYTE PTR ds:[esi]
  4213f3:	imul   edx,DWORD PTR [ebp+0x4bbd5550],0xb120fec
  4213fd:	add    DWORD PTR [eax-0x21],edi
  421400:	xchg   ebp,eax
  421401:	xor    DWORD PTR [ebx],ebx
  421403:	push   ebp
  421404:	mov    ebp,0xa266a78a
  421409:	or     ch,BYTE PTR [ebx-0x34]
  42140c:	mov    eax,ds:0x91d6e65d
  421411:	push   eax
  421412:	add    BYTE PTR [eax],ah
  421414:	pop    DWORD PTR [ecx-0xa]
  421417:	mov    ds:0x29883212,eax
  42141c:	fidivr WORD PTR [esi-0x2bc971ae]
  421422:	xor    edx,0x9c2b8ae8
  421428:	mov    cl,0x3e
  42142a:	call   0x4223f1
  42142f:	or     ebx,eax
  421431:	or     esi,edx
  421433:	movzx  eax,bl
  421436:	push   eax
  421437:	lea    eax,[ebp-0x198]
  42143d:	push   eax
  42143e:	call   0x415a09
  421443:	mov    eax,DWORD PTR [ebp-0x1f0]
  421449:	mov    edx,DWORD PTR [ebp-0x1ec]
  42144f:	xor    eax,0xcb79b576
  421454:	xor    edx,0x9c2b8ae8
  42145a:	mov    cl,0x2
  42145c:	call   0x408bb8
  421461:	mov    esi,eax
  421463:	mov    edi,edx
  421465:	mov    eax,DWORD PTR [ebp-0x1f0]
  42146b:	jmp    0x421852
  421470:	out    0xc8,eax
  421472:	push   esi
  421473:	sub    esi,DWORD PTR [esi-0x44]
  421476:	mov    esp,0xfcb5630c
  42147b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42147c:	adc    al,BYTE PTR [edi-0x44e022be]
  421482:	sar    BYTE PTR [esi-0x41413bb6],0xc6
  421489:	rcr    ah,1
  42148b:	mov    al,al
  42148d:	out    0x26,al
  42148f:	fbstp  TBYTE PTR ds:0x94fe6747
  421495:	mov    ebx,DWORD PTR [eax]
  421497:	jno    0x421444
  421499:	push   ebx
  42149a:	adc    DWORD PTR [eax],edx
  42149c:	psllq  mm5,QWORD PTR [ebx]
  42149f:	jecxz  0x4214aa
  4214a1:	dec    eax
  4214a2:	xchg   edi,eax
  4214a3:	xlat   BYTE PTR ds:[ebx]
  4214a4:	ret    
  4214a5:	sbb    BYTE PTR [edi+edi*2-0x7ba0b518],ah
  4214ac:	ins    DWORD PTR es:[edi],dx
  4214ad:	pop    ds
  4214ae:	add    BYTE PTR [ebx],ah
  4214b0:	mov    eax,0x2ac105c2
  4214b5:	outs   dx,BYTE PTR ds:[esi]
  4214b6:	mov    esp,0x388c6fdf
  4214bb:	std    
  4214bc:	jb     0x42153a
  4214be:	cld    
  4214bf:	add    ebp,DWORD PTR [edx-0x6bc45c5f]
  4214c5:	(bad)  [ebp+0x30]
  4214c8:	mov    bh,0xc1
  4214ca:	xchg   esp,eax
  4214cb:	ins    DWORD PTR es:[edi],dx
  4214cc:	fiadd  DWORD PTR [esi]
  4214ce:	mov    ds:0xe20c0e64,eax
  4214d3:	inc    ebx
  4214d4:	pusha  
  4214d5:	iret   
  4214d6:	push   es
  4214d7:	repnz inc ebx
  4214d9:	stos   DWORD PTR es:[edi],eax
  4214da:	cmc    
  4214db:	out    0xc7,eax
  4214dd:	lahf   
  4214de:	test   al,0x5a
  4214e0:	call   0xcab4:0x5e3b6761
  4214e7:	pop    ebx
  4214e8:	outs   dx,BYTE PTR ds:[esi]
  4214e9:	xor    cl,BYTE PTR [esi-0x6c6c5049]
  4214ef:	(bad)  
  4214f1:	into   
  4214f2:	bound  edx,QWORD PTR [esi]
  4214f4:	adc    edx,esi
  4214f6:	imul   ebx,eax,0xdb0e7656
  4214fc:	adc    eax,0xe9541ac9
  421501:	jne    0x421510
  421503:	scas   eax,DWORD PTR es:[edi]
  421504:	inc    esp
  421505:	std    
  421506:	jge    0x4214c3
  421508:	mov    bh,bl
  42150a:	cs sbb al,0x5f
  42150d:	mov    ah,0xfd
  42150f:	ins    BYTE PTR es:[edi],dx
  421510:	sbb    DWORD PTR [esi-0x25],esp
  421513:	popf   
  421514:	sub    DWORD PTR [edx],eax
  421516:	jnp    0x4214f0
  421518:	mov    ch,0x3c
  42151a:	and    edi,0xbf08e14c
  421520:	daa    
  421521:	push   esp
  421522:	fisub  DWORD PTR [edi+0x4ed7e468]
  421528:	xchg   ecx,eax
  421529:	pushf  
  42152a:	out    dx,eax
  42152b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42152c:	int    0xc8
  42152e:	fcom   DWORD PTR [edx]
  421530:	mov    ds,WORD PTR [edi]
  421532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421533:	add    ch,ch
  421535:	enter  0xba07,0x55
  421539:	lock mov bh,0xe2
  42153c:	pop    es
  42153d:	icebp  
  42153e:	pop    ds
  42153f:	ins    BYTE PTR es:[edi],dx
  421540:	outs   dx,BYTE PTR ds:[esi]
  421541:	dec    ecx
  421542:	fiadd  WORD PTR [edx+0x3b]
  421545:	mov    ds:0x4cb8476b,eax
  42154a:	add    eax,0x63ba13fd
  42154f:	aam    0x56
  421551:	add    edi,ecx
  421553:	scas   al,BYTE PTR es:[edi]
  421554:	scas   al,BYTE PTR es:[edi]
  421555:	xchg   esp,eax
  421556:	push   eax
  421557:	ds mov edi,0x8e7b4a50
  42155d:	adc    bh,BYTE PTR ds:0x17106444
  421563:	pop    ecx
  421564:	push   ebp
  421565:	sahf   
  421566:	imul   ebx,DWORD PTR [ebx+eiz*4-0x694b293c],0xffffffa7
  42156e:	jae    0x421573
  421570:	mov    ebx,0x111a7051
  421575:	add    al,0xd0
  421577:	jmp    0xda9af060
  42157c:	mov    ds:0xf9a767a3,al
  421581:	fiadd  DWORD PTR [edx+eax*8]
  421584:	fadd   QWORD PTR [ecx]
  421586:	cmp    al,0x19
  421588:	xor    dh,BYTE PTR [ecx-0x43]
  42158b:	enter  0xcfb4,0x5e
  42158f:	js     0x42153f
  421591:	add    bh,BYTE PTR [esp+eax*1+0x30e0ff4e]
  421598:	aam    0xb2
  42159a:	jg     0x421522
  42159c:	jge    0x42159b
  42159e:	jmp    0x7412d431
  4215a3:	inc    ebp
  4215a4:	in     al,dx
  4215a5:	scas   al,BYTE PTR es:[edi]
  4215a6:	push   edx
  4215a7:	cmovno ebp,DWORD PTR [edx]
  4215aa:	repnz cs xor al,0xd8
  4215ae:	fldcw  WORD PTR [ecx+0x16]
  4215b1:	test   BYTE PTR [edx+0x72],bh
  4215b4:	ins    DWORD PTR es:[edi],dx
  4215b5:	adc    DWORD PTR [edi+0x77],ebp
  4215b8:	jo     0x421596
  4215ba:	outs   dx,DWORD PTR ds:[esi]
  4215bb:	popa   
  4215bc:	xor    BYTE PTR [edx+0x51],0x46
  4215c0:	scas   al,BYTE PTR es:[edi]
  4215c1:	mov    bh,0x43
  4215c3:	inc    eax
  4215c4:	test   BYTE PTR [ebp-0x7a51bccd],dh
  4215ca:	push   ebp
  4215cb:	push   esi
  4215cc:	ss xchg edx,eax
  4215ce:	and    eax,0x40592119
  4215d3:	ins    DWORD PTR es:[edi],dx
  4215d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215d5:	pop    ebx
  4215d6:	mov    ds:0x523aa606,eax
  4215db:	data16 jb 0x421598
  4215de:	push   eax
  4215df:	loop   0x421639
  4215e1:	cmp    eax,0xa2e53359
  4215e6:	pop    esp
  4215e7:	lods   eax,DWORD PTR ds:[esi]
  4215e8:	push   ebx
  4215e9:	in     eax,dx
  4215ea:	sub    eax,0x9be32403
  4215ef:	adc    al,0x67
  4215f1:	jmp    FWORD PTR [ecx]
  4215f3:	sbb    edi,edx
  4215f5:	leave  
  4215f6:	es stos DWORD PTR es:[edi],eax
  4215f8:	adc    al,0x45
  4215fa:	sbb    dl,BYTE PTR [ecx+0x6]
  4215fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215fe:	std    
  4215ff:	(bad)  
  421601:	pop    eax
  421602:	pop    es
  421603:	cld    
  421604:	sbb    DWORD PTR [esi+ecx*1-0xd],esi
  421608:	inc    BYTE PTR [esi]
  42160a:	adc    al,0x3d
  42160c:	xchg   esi,eax
  42160d:	loopne 0x421629
  42160f:	cmp    BYTE PTR [ebp-0x48],bl
  421612:	mov    al,ds:0xbdbca0ea
  421617:	or     DWORD PTR [ebx+eiz*8],ecx
  42161a:	pop    ds
  42161b:	push   ecx
  42161c:	jle    0x421627
  42161e:	popa   
  42161f:	mov    edx,0xbab45c27
  421624:	and    cl,BYTE PTR [esi+0x76]
  421627:	popa   
  421628:	popf   
  421629:	sbb    edi,DWORD PTR [ebx+0x76]
  42162c:	mov    edi,0x3b4aa096
  421631:	jmp    0x8513604f
  421636:	push   0xffffff82
  421638:	into   
  421639:	and    al,0x4c
  42163b:	jg     0x421644
  42163d:	mov    ebx,0xf35d3639
  421642:	jo     0x421684
  421644:	mov    WORD PTR [esi+edx*1],?
  421647:	xchg   edi,eax
  421648:	xchg   esp,eax
  421649:	jo     0x421682
  42164b:	cs pop eax
  42164d:	bound  edi,QWORD PTR [esi-0x528635a9]
  421653:	dec    ebp
  421654:	sub    BYTE PTR [esi],dh
  421656:	ficom  WORD PTR [edi]
  421658:	push   eax
  421659:	jae    0x4215e0
  42165b:	loopne 0x4216ad
  42165d:	add    ebp,DWORD PTR [edx]
  42165f:	sar    dh,0x1b
  421662:	cld    
  421663:	fdivr  QWORD PTR [ebp-0x4dee9965]
  421669:	pop    ebp
  42166a:	clc    
  42166b:	in     eax,dx
  42166c:	push   ss
  42166d:	adc    DWORD PTR [edx],ecx
  42166f:	shl    BYTE PTR [edi],cl
  421671:	out    dx,al
  421672:	or     al,0xca
  421674:	data16 (bad) 
  421676:	mov    eax,ds:0x8ab8b3cf
  42167b:	aas    
  42167c:	ins    BYTE PTR es:[edi],dx
  42167d:	aaa    
  42167e:	mov    edx,0xaa34e2da
  421683:	ss jp  0x421627
  421686:	sbb    DWORD PTR [edi-0x20],edx
  421689:	loope  0x421694
  42168b:	(bad)  
  42168c:	out    0x59,al
  42168e:	ds mov ah,0xc0
  421691:	hlt    
  421692:	mov    ch,0xfd
  421694:	push   esp
  421695:	inc    ecx
  421696:	add    DWORD PTR [ecx],esi
  421698:	mov    ebx,0xd66785f3
  42169d:	mov    ah,0x18
  42169f:	fcom   QWORD PTR [ebx+0x77f061a4]
  4216a5:	out    0x94,eax
  4216a7:	mov    bh,0x82
  4216a9:	rol    dl,cl
  4216ab:	xchg   edi,eax
  4216ac:	jne    0x421689
  4216ae:	mov    edi,0x96efd8
  4216b3:	(bad)  
  4216b4:	jecxz  0x421676
  4216b6:	jb     0x4216b5
  4216b8:	push   edx
  4216b9:	xchg   BYTE PTR [edx+0x68],dl
  4216bc:	pop    ss
  4216bd:	push   cs
  4216be:	mov    eax,DWORD PTR [edx+eax*2+0x54]
  4216c2:	lods   al,BYTE PTR ds:[esi]
  4216c3:	cwde   
  4216c4:	stos   DWORD PTR es:[edi],eax
  4216c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216c6:	mov    ah,0x9c
  4216c8:	js     0x421740
  4216ca:	fnstcw WORD PTR [eax+eiz*2]
  4216cd:	push   ebp
  4216ce:	(bad)  
  4216cf:	jg     0x42170a
  4216d1:	or     cl,cl
  4216d3:	mov    bl,0x26
  4216d5:	int    0xfd
  4216d7:	nop
  4216d8:	test   bl,0x77
  4216db:	add    eax,0x1643f1a6
  4216e0:	icebp  
  4216e1:	xchg   edi,eax
  4216e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216e3:	dec    ebp
  4216e4:	fsubr  DWORD PTR [esi]
  4216e6:	pop    esp
  4216e7:	aam    0x6c
  4216e9:	addr16 inc ebp
  4216eb:	push   esp
  4216ec:	repnz test DWORD PTR [ecx],esp
  4216ef:	out    0xa8,al
  4216f1:	movups XMMWORD PTR [ecx],xmm7
  4216f4:	gs pop ebp
  4216f6:	or     esp,ebx
  4216f8:	rol    bl,1
  4216fa:	mov    edi,DWORD PTR [esi+ecx*4-0x55]
  4216fe:	jg     0x421756
  421700:	sbb    BYTE PTR [ecx+0x785334f5],ah
  421706:	div    BYTE PTR [ecx+0x59]
  421709:	inc    edi
  42170a:	mov    DWORD PTR [ecx+0x3974f88f],eax
  421710:	dec    ebp
  421711:	pop    eax
  421712:	inc    DWORD PTR [esi-0x48956eb7]
  421718:	clc    
  421719:	test   al,0x25
  42171b:	in     al,dx
  42171c:	lods   al,BYTE PTR ds:[esi]
  42171d:	lahf   
  42171e:	xchg   ebx,eax
  42171f:	fcomp  QWORD PTR [eax+0x31]
  421722:	sbb    ebp,DWORD PTR [edx+0x2d]
  421725:	push   0x5b8567b9
  42172a:	jle    0x4216ee
  42172c:	pop    es
  42172d:	jmp    0x4217a6
  42172f:	call   DWORD PTR [ecx]
  421731:	(bad)  
  421733:	(bad)  
  421734:	ja     0x4217a8
  421736:	cld    
  421737:	jno    0x421766
  421739:	aas    
  42173a:	or     ebp,edx
  42173c:	aas    
  42173d:	pusha  
  42173e:	scas   eax,DWORD PTR es:[edi]
  42173f:	jge    0x421776
  421741:	dec    ecx
  421742:	sub    eax,DWORD PTR [edx+0x94351a7]
  421748:	hlt    
  421749:	inc    ebp
  42174a:	imul   esp,DWORD PTR [ebp-0x3d],0xf
  42174e:	mov    cl,BYTE PTR ss:[edx]
  421751:	and    eax,ecx
  421753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421754:	out    dx,al
  421755:	outs   dx,BYTE PTR ds:[esi]
  421756:	mov    edi,esp
  421758:	(bad)  
  421759:	push   esi
  42175a:	loope  0x42171b
  42175c:	loope  0x421789
  42175e:	ds ins BYTE PTR es:[edi],dx
  421760:	xchg   edi,eax
  421761:	jle    0x4217af
  421763:	mov    al,0x28
  421765:	or     BYTE PTR [eax+0x6a3c704c],cl
  42176b:	ret    
  42176c:	inc    ecx
  42176d:	stos   BYTE PTR es:[edi],al
  42176e:	mov    ebx,ecx
  421770:	or     eax,0x90c66db4
  421775:	add    DWORD PTR [eax+0x45],esi
  421778:	adc    al,0xb0
  42177a:	mov    BYTE PTR [ecx],dl
  42177c:	ja     0x4217ec
  42177e:	jb     0x421761
  421780:	pop    ss
  421781:	outs   dx,BYTE PTR ds:[esi]
  421782:	rcr    BYTE PTR [esi],cl
  421784:	mov    ecx,0x67cd2e63
  421789:	jmp    0x2188:0xd8586785
  421790:	sub    al,0xb6
  421792:	mov    ebx,0xd83024f1
  421797:	push   esi
  421798:	ror    cl,0x52
  42179b:	mov    ah,0x9
  42179d:	jbe    0x421797
  42179f:	dec    ebx
  4217a0:	jae    0x421792
  4217a2:	(bad)  
  4217a4:	dec    esp
  4217a5:	xlat   BYTE PTR ds:[ebx]
  4217a6:	push   es
  4217a7:	sti    
  4217a8:	or     al,0xa2
  4217aa:	in     eax,0xa
  4217ac:	lods   eax,DWORD PTR ds:[esi]
  4217ad:	test   al,0x9
  4217af:	ror    DWORD PTR [esi],cl
  4217b1:	(bad)  
  4217b2:	std    
  4217b3:	aas    
  4217b4:	sahf   
  4217b5:	lds    eax,FWORD PTR [esi+0x60e7151]
  4217bb:	cmp    al,0xd
  4217bd:	xchg   BYTE PTR [ebp+0x72288f4a],ch
  4217c3:	push   cs
  4217c4:	xchg   ebx,eax
  4217c5:	scas   eax,DWORD PTR es:[edi]
  4217c6:	repz add DWORD PTR [edi],ecx
  4217c9:	leave  
  4217ca:	(bad)  
  4217cb:	xchg   ebx,eax
  4217cc:	sbb    dh,BYTE PTR [ebx+0x5c8d73f9]
  4217d2:	stc    
  4217d3:	loope  0x421837
  4217d5:	mov    cl,0x63
  4217d7:	(bad)  
  4217d8:	xlat   BYTE PTR ds:[ebx]
  4217d9:	push   cs
  4217da:	(bad)  
  4217db:	mov    WORD PTR [ecx-0x58],?
  4217de:	cdq    
  4217df:	retf   0x365e
  4217e2:	adc    esi,edi
  4217e4:	sub    DWORD PTR [esi-0x55],0x15
  4217e8:	push   eax
  4217e9:	test   DWORD PTR [eax+ebx*1+0x7e14d648],edx
  4217f0:	and    BYTE PTR [eax+0x52],ch
  4217f3:	lock xchg esi,eax
  4217f5:	pop    es
  4217f6:	aad    0xa8
  4217f8:	push   ebp
  4217f9:	stos   BYTE PTR es:[edi],al
  4217fa:	(bad)  
  4217fb:	icebp  
  4217fc:	adc    al,0xe8
  4217fe:	inc    eax
  4217ff:	ss iret 
  421801:	sti    
  421802:	push   edi
  421803:	lods   eax,DWORD PTR ds:[esi]
  421804:	push   esi
  421805:	pusha  
  421806:	sub    eax,esi
  421808:	push   ds
  421809:	inc    edi
  42180a:	fsub   st,st(2)
  42180c:	xor    al,0xd
  42180e:	out    0x7d,eax
  421810:	dec    edx
  421811:	push   0x9d5d0fe1
  421816:	pop    ecx
  421817:	jne    0x4217fb
  421819:	xchg   ecx,eax
  42181a:	(bad)  
  42181b:	retf   
  42181c:	xchg   esp,eax
  42181d:	dec    ebp
  42181e:	popf   
  42181f:	pop    ecx
  421820:	pop    DWORD PTR [esi]
  421822:	clc    
  421823:	sahf   
  421824:	fnsave [ebx+ebx*2]
  421827:	jmp    0x421802
  421829:	push   edx
  42182a:	or     eax,0xa5723e1e
  42182f:	sahf   
  421830:	das    
  421831:	xor    eax,0x2166a726
  421836:	call   0xa042:0xb40f20f3
  42183d:	loope  0x421855
  42183f:	(bad)  
  421840:	btc    DWORD PTR [eax-0x1a9aa1bc],eax
  421847:	sbb    BYTE PTR [edi-0x4c315d24],0xa7
  42184e:	cwde   
  42184f:	dec    esp
  421850:	pop    eax
  421851:	add    eax,0xfe14958b
  421856:	(bad)  
  421857:	push   DWORD PTR ds:0xcb79b576
  42185d:	xor    edx,0x9c2b8ae8
  421863:	mov    cl,0x3e
  421865:	call   0x4223f1
  42186a:	or     esi,eax
  42186c:	or     edi,edx
  42186e:	mov    DWORD PTR [ebp-0x1f8],esi
  421874:	jmp    0x421cb0
  421879:	mov    eax,DWORD PTR [ebp-0x1e0]
  42187f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421885:	xor    eax,0xcb79b576
  42188a:	xor    edx,0x9c2b8ae8
  421890:	mov    cl,0x2
  421892:	call   0x408bb8
  421897:	mov    esi,eax
  421899:	mov    edi,edx
  42189b:	mov    eax,DWORD PTR [ebp-0x1e0]
  4218a1:	mov    edx,DWORD PTR [ebp-0x1dc]
  4218a7:	xor    eax,0xcb79b576
  4218ac:	xor    edx,0x9c2b8ae8
  4218b2:	mov    cl,0x3e
  4218b4:	call   0x4223f1
  4218b9:	or     esi,eax
  4218bb:	or     edi,edx
  4218bd:	jmp    0x421ca4
  4218c2:	sbb    bh,BYTE PTR [esi]
  4218c4:	shr    DWORD PTR [edx+0x6ebaba9a],1
  4218ca:	daa    
  4218cb:	xchg   DWORD PTR [eax-0x2f],ebp
  4218ce:	pop    ecx
  4218cf:	ficom  WORD PTR [edx-0x62]
  4218d2:	lods   al,BYTE PTR ds:[esi]
  4218d3:	rol    eax,0xbe
  4218d6:	dec    edx
  4218d7:	les    edi,FWORD PTR [esi+0x197ae7be]
  4218dd:	mov    DWORD PTR [ecx+0x7f20abf2],esi
  4218e3:	add    eax,0x42774ef5
  4218e8:	pop    esp
  4218e9:	mov    WORD PTR [esi],?
  4218eb:	jecxz  0x4218c2
  4218ed:	out    dx,eax
  4218ee:	jb     0x42196c
  4218f0:	mov    edi,eax
  4218f2:	mov    ds:0x64f6c9f,al
  4218f7:	addr16 lock xchg ebx,eax
  4218fa:	mov    bl,BYTE PTR ds:0xe6f2c33e
  421900:	cwde   
  421901:	gs pop ebp
  421903:	ret    
  421904:	push   eax
  421905:	push   ss
  421906:	stos   DWORD PTR es:[edi],eax
  421907:	and    bh,BYTE PTR [esi+ebp*4-0x3d]
  42190b:	ins    DWORD PTR es:[edi],dx
  42190c:	pop    ebp
  42190d:	(bad)  
  42190e:	push   ss
  42190f:	sub    al,0x23
  421911:	les    ebx,FWORD PTR [ebp+0x121ae406]
  421917:	dec    esi
  421918:	and    eax,DWORD PTR [ebx-0x1f84894c]
  42191e:	sub    ecx,eax
  421920:	mov    ebp,DWORD PTR [esp+eiz*2]
  421923:	xor    eax,0x1c033540
  421928:	aaa    
  421929:	gs inc esi
  42192b:	sbb    eax,0x2dff1acd
  421930:	sub    al,0x7e
  421932:	xchg   ebx,eax
  421933:	test   BYTE PTR [esi],dh
  421935:	or     ch,BYTE PTR [ecx+0x1]
  421938:	sub    al,0x65
  42193a:	jecxz  0x4219b8
  42193c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42193d:	arpl   WORD PTR [ebp-0x337c2a3a],bp
  421943:	sbb    eax,0x2c515e58
  421948:	xchg   BYTE PTR [edx+0x4],dh
  42194b:	push   cs
  42194c:	push   ecx
  42194d:	mov    al,ds:0xb8000585
  421952:	inc    esp
  421953:	shr    DWORD PTR [esi],0xa9
  421956:	imul   ebp,DWORD PTR [edi],0xf6e5e288
  42195c:	cs je  0x421902
  42195f:	pusha  
  421960:	clc    
  421961:	out    dx,al
  421962:	dec    eax
  421963:	or     al,0xc8
  421965:	jnp    0x42193f
  421967:	or     edi,DWORD PTR [edx-0x3d63350b]
  42196d:	das    
  42196e:	dec    edx
  42196f:	mov    eax,ds:0x3be689b2
  421974:	push   eax
  421975:	aad    0xd4
  421977:	or     edi,DWORD PTR [eax+0x6c6f7a7b]
  42197d:	das    
  42197e:	add    ch,ch
  421980:	jno    0x42196a
  421982:	stos   DWORD PTR es:[edi],eax
  421983:	push   ss
  421984:	mov    WORD PTR [edx],gs
  421986:	dec    ebp
  421987:	adc    bh,BYTE PTR [edx-0x2c32e347]
  42198d:	test   BYTE PTR [eax],ah
  42198f:	mov    cl,BYTE PTR [ecx+0xcfc0e7e]
  421995:	push   esi
  421996:	push   0xea3d4910
  42199b:	push   cs
  42199c:	jne    0x421a05
  42199e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42199f:	mov    edx,0x38e7761e
  4219a4:	xlat   BYTE PTR ds:[ebx]
  4219a5:	ja     0x421998
  4219a7:	das    
  4219a8:	sbb    bh,bl
  4219aa:	jns    0x42193d
  4219ac:	push   ebp
  4219ad:	pop    edx
  4219ae:	push   eax
  4219af:	xchg   edx,eax
  4219b0:	addr16 push 0x1ee905ca
  4219b6:	mov    eax,ds:0xc909a0a3
  4219bb:	push   esi
  4219bc:	pop    es
  4219bd:	mov    ebx,0x24b421b4
  4219c2:	aam    0xba
  4219c4:	cdq    
  4219c5:	push   0x12
  4219c7:	sub    DWORD PTR [edi-0x3108f9f7],edx
  4219cd:	mov    eax,ds:0x9a4627a0
  4219d2:	cwde   
  4219d3:	dec    eax
  4219d4:	jmp    0x4219d6
  4219d6:	sahf   
  4219d7:	popa   
  4219d8:	cmp    eax,0x21730ec5
  4219dd:	xor    DWORD PTR es:[esi-0x54a971e8],esp
  4219e4:	iret   
  4219e5:	mov    bh,0xb4
  4219e7:	cdq    
  4219e8:	pop    esp
  4219e9:	add    esi,ecx
  4219eb:	xchg   edi,eax
  4219ec:	sar    DWORD PTR [ecx-0x3],1
  4219ef:	cmp    edx,esi
  4219f1:	sahf   
  4219f2:	pop    ecx
  4219f3:	in     eax,dx
  4219f4:	xlat   BYTE PTR ds:[ebx]
  4219f5:	adc    ebp,DWORD PTR [edi-0x2d825398]
  4219fb:	inc    ecx
  4219fc:	stos   BYTE PTR es:[edi],al
  4219fd:	mov    ah,0xac
  4219ff:	sbb    bh,BYTE PTR [edx+ecx*1-0x51]
  421a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a04:	into   
  421a05:	mov    cl,0x1c
  421a07:	jo     0x421a6d
  421a09:	xchg   esp,eax
  421a0a:	fnsetpm(287 only) 
  421a0c:	add    ebx,edi
  421a0e:	lea    esi,[eax+0x5f7c3428]
  421a14:	loop   0x421a65
  421a16:	inc    edi
  421a17:	inc    edi
  421a18:	fwait
  421a19:	ret    0x65ec
  421a1c:	add    ah,ch
  421a1e:	daa    
  421a1f:	bound  edi,QWORD PTR [edi]
  421a21:	repz add al,0xb5
  421a24:	out    0x8d,al
  421a26:	nop
  421a27:	popa   
  421a28:	add    bl,BYTE PTR [edx]
  421a2a:	es jl  0x421a40
  421a2d:	out    0xc3,al
  421a2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a30:	adc    bh,BYTE PTR [edx+0x1aab3164]
  421a36:	call   0x9dafe5d5
  421a3b:	cld    
  421a3c:	cmp    dh,BYTE PTR [ebx+eiz*2+0x9a784f5]
  421a43:	dec    esp
  421a44:	dec    ecx
  421a45:	jne    0x421a1b
  421a47:	push   0x28
  421a49:	sar    BYTE PTR [eax+0x29],cl
  421a4c:	mov    ah,0x61
  421a4e:	and    al,0xd
  421a50:	dec    ebx
  421a51:	sbb    BYTE PTR [edx-0x34],ah
  421a54:	sub    bh,BYTE PTR [ebx+0x62ecd121]
  421a5a:	outs   dx,BYTE PTR ds:[esi]
  421a5b:	add    al,0xa2
  421a5d:	outs   dx,DWORD PTR ds:[esi]
  421a5e:	into   
  421a5f:	ret    0x7089
  421a62:	mov    edx,0xb38a4a31
  421a67:	outs   dx,DWORD PTR ds:[esi]
  421a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a69:	dec    ecx
  421a6a:	ja     0x421a1c
  421a6c:	out    dx,eax
  421a6d:	scas   eax,DWORD PTR es:[edi]
  421a6e:	imul   eax,ebp,0x466817a5
  421a74:	xor    DWORD PTR [eax+0x3464f8c0],ebx
  421a7a:	test   cl,bl
  421a7c:	pop    edx
  421a7d:	and    eax,0xf3a93367
  421a82:	aad    0xd4
  421a84:	int    0x61
  421a86:	and    ecx,DWORD PTR [ecx-0x8c65900]
  421a8c:	or     esp,DWORD PTR [edx+0x3]
  421a8f:	dec    ebx
  421a90:	mov    al,0x67
  421a92:	add    edx,0xffffffb7
  421a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a96:	mov    ds:0x691bb04b,al
  421a9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a9c:	test   BYTE PTR [ebp+0x1d],ah
  421a9f:	and    al,0x67
  421aa1:	cmp    al,0x48
  421aa3:	sub    al,0xf4
  421aa5:	cmp    edx,ebp
  421aa7:	into   
  421aa8:	and    BYTE PTR fs:[ebp+0x3e],bh
  421aac:	ja     0x421a41
  421aae:	arpl   sp,ax
  421ab0:	inc    esi
  421ab1:	fwait
  421ab2:	pop    ebp
  421ab3:	sub    DWORD PTR [edx],edx
  421ab5:	(bad)  
  421ab6:	fs mov bl,cl
  421ab9:	pop    edi
  421aba:	sub    ebp,DWORD PTR [ebp-0x5e2ed73b]
  421ac0:	cmp    BYTE PTR [esi-0x1d795e3c],al
  421ac6:	aas    
  421ac7:	mov    esi,0xa5b7463e
  421acc:	jp     0x421b49
  421ace:	push   0xcb0b1233
  421ad3:	push   esp
  421ad4:	cmp    ah,BYTE PTR [eax-0x3052ce69]
  421ada:	and    eax,0x5df50898
  421adf:	inc    edx
  421ae0:	sbb    al,0x36
  421ae2:	cmp    al,0x2a
  421ae4:	xor    cl,ah
  421ae6:	mov    eax,ds:0xa48e1f5d
  421aeb:	(bad)  [ecx]
  421aed:	pop    ss
  421aee:	lds    esp,FWORD PTR [eax]
  421af0:	mov    ebx,0xf2121744
  421af5:	arpl   WORD PTR [edx],ax
  421af7:	dec    ebp
  421af8:	mov    bh,dh
  421afa:	daa    
  421afb:	bound  ebp,QWORD PTR [eax]
  421afd:	ins    DWORD PTR es:[edi],dx
  421afe:	cmp    DWORD PTR [ebp+0x1e81061f],eax
  421b04:	pop    esp
  421b05:	add    bl,dh
  421b07:	or     BYTE PTR [ecx],dh
  421b09:	outs   dx,DWORD PTR ds:[esi]
  421b0a:	sbb    ecx,esp
  421b0c:	in     al,dx
  421b0d:	mov    ebx,edi
  421b0f:	(bad)  
  421b11:	mov    ebx,0xae0cf17f
  421b16:	ret    0xb460
  421b19:	push   eax
  421b1a:	das    
  421b1b:	xchg   ecx,eax
  421b1c:	ficom  DWORD PTR [ebp-0x42d19868]
  421b22:	cmp    cl,ah
  421b24:	jno    0x421ac7
  421b26:	lods   eax,DWORD PTR ds:[esi]
  421b27:	inc    ebx
  421b28:	lods   al,BYTE PTR ds:[esi]
  421b29:	fld    DWORD PTR [ebp+ebx*4-0x7c241e04]
  421b30:	sahf   
  421b31:	ret    
  421b32:	sub    DWORD PTR [ebp-0x21],0xeb62df61
  421b39:	inc    ebx
  421b3a:	loop   0x421b65
  421b3c:	mov    edx,0x350cb361
  421b41:	(bad)  
  421b42:	sub    eax,0xd241b14d
  421b47:	inc    ebx
  421b48:	dec    esi
  421b49:	sub    BYTE PTR [ebp+0x9202c3],dh
  421b4f:	ins    DWORD PTR es:[edi],dx
  421b50:	cwde   
  421b51:	shr    DWORD PTR [edx+0x43],cl
  421b54:	adc    DWORD PTR [esi+0x53],ecx
  421b57:	retf   
  421b58:	adc    eax,0xc38203ae
  421b5d:	and    al,0xb6
  421b5f:	cdq    
  421b60:	mov    ds:0xd64c1efa,al
  421b65:	cmp    dh,bl
  421b67:	gs lahf 
  421b69:	jnp    0x421b44
  421b6b:	jp     0x421b57
  421b6d:	sub    DWORD PTR [edi-0x511a7871],0xc01da29a
  421b77:	repnz mov cl,0x39
  421b7a:	jge    0x421b07
  421b7c:	adc    eax,esi
  421b7e:	(bad)  
  421b7f:	neg    ebp
  421b81:	xor    DWORD PTR [ebp+esi*4-0xa],eax
  421b85:	xor    BYTE PTR [esi-0x7ad8d1f4],bh
  421b8b:	imul   esp,DWORD PTR [esi+0x10],0x57
  421b8f:	(bad)  
  421b90:	fnsave [edi+0xadc7ddf]
  421b96:	lahf   
  421b97:	dec    eax
  421b98:	add    DWORD PTR [ecx-0x7f],esi
  421b9b:	lods   al,BYTE PTR ds:[esi]
  421b9c:	jl     0x421b59
  421b9e:	fcmovu st,st(2)
  421ba0:	lock cmp dl,BYTE PTR [edi+0x6a]
  421ba4:	mov    esi,0x6effc4ac
  421ba9:	jbe    0xcc472b40
  421baf:	cmp    ah,BYTE PTR [ecx]
  421bb1:	test   DWORD PTR [esi-0x65],ecx
  421bb4:	popf   
  421bb5:	push   es
  421bb6:	inc    esp
  421bb7:	test   eax,0xc2095f0e
  421bbc:	in     al,0x5c
  421bbe:	push   ebp
  421bbf:	adc    al,0xa2
  421bc1:	xchg   ecx,eax
  421bc2:	into   
  421bc3:	pop    edi
  421bc4:	sbb    dh,BYTE PTR [edx+0x6c]
  421bc7:	and    BYTE PTR [ebx],dl
  421bc9:	xor    DWORD PTR ds:0x24a6dd5d,eax
  421bcf:	mov    ebx,0xb8afbe66
  421bd4:	fild   WORD PTR [edx]
  421bd6:	mov    ebx,0x8ff4be3e
  421bdb:	arpl   WORD PTR [esi+0x5bed737c],sp
  421be1:	in     eax,0xc2
  421be3:	jg     0x421c00
  421be5:	stc    
  421be6:	xor    bl,BYTE PTR [edx]
  421be8:	inc    edi
  421be9:	hlt    
  421bea:	in     eax,dx
  421beb:	xchg   ebx,eax
  421bec:	fs faddp st(1),st
  421bef:	pop    esp
  421bf0:	inc    edi
  421bf1:	ds jmp 0xed870de0
  421bf7:	push   ebp
  421bf8:	int    0x52
  421bfa:	mov    ebx,0x71f53905
  421bff:	rcl    DWORD PTR [edx-0x68],cl
  421c02:	sbb    BYTE PTR [ebp+0x78],cl
  421c05:	(bad)  
  421c06:	lahf   
  421c07:	bound  ecx,QWORD PTR [esi]
  421c09:	jbe    0x421bab
  421c0b:	sub    al,0x62
  421c0d:	jmp    0x421bbf
  421c0f:	fs mov edi,ebp
  421c12:	(bad)  
  421c13:	mov    ch,0xf1
  421c15:	push   ebp
  421c16:	shl    DWORD PTR [ebx],0xd8
  421c19:	pop    es
  421c1a:	in     al,0x36
  421c1c:	ficomp WORD PTR [ebp+0x35]
  421c1f:	stos   BYTE PTR es:[edi],al
  421c20:	gs data16 js 0x421c9c
  421c24:	pop    ecx
  421c25:	iret   
  421c26:	ins    DWORD PTR es:[edi],dx
  421c27:	dec    edx
  421c28:	fucom  st(6)
  421c2a:	ins    BYTE PTR es:[edi],dx
  421c2b:	int    0xfe
  421c2d:	iret   
  421c2e:	pop    esp
  421c2f:	inc    edx
  421c30:	mov    eax,ds:0x82a560f4
  421c35:	inc    eax
  421c36:	push   0xad56d13d
  421c3b:	(bad)  
  421c3c:	cli    
  421c3d:	adc    DWORD PTR [ebp-0x13e1f01],eax
  421c43:	ror    edi,cl
  421c45:	cmp    al,0x41
  421c47:	mov    edi,0x43879fd5
  421c4c:	in     eax,0x91
  421c4e:	in     eax,dx
  421c4f:	fimul  DWORD PTR [ebp-0x52]
  421c52:	out    dx,eax
  421c53:	and    al,0x1a
  421c55:	(bad)  
  421c56:	(bad)  
  421c57:	sahf   
  421c58:	pop    eax
  421c59:	test   DWORD PTR [ecx],eax
  421c5b:	mov    bh,0x6d
  421c5d:	fwait
  421c5e:	das    
  421c5f:	or     esp,DWORD PTR [ebx-0x5d]
  421c62:	scas   eax,DWORD PTR es:[edi]
  421c63:	cmc    
  421c64:	inc    ebx
  421c65:	adc    eax,0x73834803
  421c6a:	mov    ecx,0xd97489d8
  421c6f:	mov    DWORD PTR [edi+eiz*8],ebx
  421c72:	lock sub edi,DWORD PTR [esi-0x21]
  421c76:	sahf   
  421c77:	adc    ebx,DWORD PTR [eax-0x4d]
  421c7a:	add    BYTE PTR ds:[edx+edx*4+0x74],0x75
  421c80:	scas   al,BYTE PTR es:[edi]
  421c81:	loopne 0x421c1f
  421c83:	pop    ebp
  421c84:	lds    esi,FWORD PTR [esi+esi*4-0x46]
  421c88:	jp     0x421c4b
  421c8a:	sti    
  421c8b:	or     al,0x3f
  421c8d:	sbb    ebp,DWORD PTR ds:0x2474af76
  421c93:	push   ebp
  421c94:	jno    0x421c4c
  421c96:	push   ds
  421c97:	jmp    0x421c30
  421c99:	xor    BYTE PTR [edx],bl
  421c9b:	ror    al,0xe1
  421c9e:	mov    BYTE PTR [ebp-0x33],ah
  421ca1:	iret   
  421ca2:	(bad)  
  421ca3:	adc    al,0x3
  421ca5:	mov    ch,0x8
  421ca7:	(bad)  
  421ca8:	(bad)  
  421ca9:	dec    DWORD PTR [ecx-0x1f74b]
  421caf:	dec    DWORD PTR [ebx-0x1e77b]
  421cb5:	(bad)  
  421cb6:	cmp    DWORD PTR [ebp-0x1f8],eax
  421cbc:	je     0x421e22
  421cc2:	mov    eax,DWORD PTR [ebp-0x1f8]
  421cc8:	mov    ecx,DWORD PTR [ebp-0x20c]
  421cce:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421cd3:	xor    eax,0xa59b
  421cd8:	movzx  eax,ax
  421cdb:	sar    eax,1
  421cdd:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421ce3:	mov    edx,DWORD PTR [ebp-0x20c]
  421ce9:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421cee:	xor    ecx,0xa59b
  421cf4:	movzx  ecx,cx
  421cf7:	shl    ecx,0xf
  421cfa:	or     eax,ecx
  421cfc:	movzx  eax,ax
  421cff:	mov    DWORD PTR [ebp-0x1fc],eax
  421d05:	jmp    0x421dd8
  421d0a:	jg     0x421cee
  421d0c:	sbb    BYTE PTR [edx-0x144c4344],ch
  421d12:	outs   dx,BYTE PTR ds:[esi]
  421d13:	mov    esp,0xc8b490cd
  421d18:	mov    al,ds:0xc0c93890
  421d1d:	mov    esi,0xbebebe22
  421d22:	aas    
  421d23:	int    0x42
  421d25:	ret    0x7461
  421d28:	je     0x421cfd
  421d2a:	out    dx,eax
  421d2b:	aaa    
  421d2c:	xchg   esp,eax
  421d2d:	sub    esp,0x3a
  421d30:	jge    0x421d76
  421d32:	je     0x421ce9
  421d34:	addr16 (bad) 
  421d36:	xor    dl,BYTE PTR [esi+eax*8]
  421d39:	and    edi,DWORD PTR [eax+0x45]
  421d3c:	mov    esi,0xacd91b0a
  421d41:	repz mov ds,WORD PTR [ebx+0x29]
  421d45:	sbb    al,0xe5
  421d47:	ret    
  421d48:	je     0x421d66
  421d4a:	pop    esi
  421d4b:	imul   edx,DWORD PTR [ecx-0x20],0x25
  421d4f:	xchg   esi,eax
  421d50:	gs inc ebp
  421d52:	rol    WORD PTR [esi+0x1a],0x7
  421d57:	fbld   TBYTE PTR ds:[edx-0x9]
  421d5b:	stos   BYTE PTR es:[edi],al
  421d5c:	sub    al,0x89
  421d5e:	sub    eax,0x9f647aea
  421d63:	jae    0x421dcd
  421d65:	inc    edi
  421d66:	mov    ds:0xe7634412,eax
  421d6b:	inc    edx
  421d6c:	cmp    bh,BYTE PTR [eax+0x74]
  421d6f:	pop    edx
  421d70:	push   ss
  421d71:	sub    al,0x79
  421d73:	mov    bh,cl
  421d75:	adc    DWORD PTR [esi-0x6e9ec5a3],ebx
  421d7b:	xchg   esp,eax
  421d7c:	inc    edx
  421d7d:	mov    DWORD PTR ds:0xb1fe0158,eax
  421d83:	enter  0x8114,0x6f
  421d87:	push   eax
  421d88:	(bad)
  421d8b:	or     eax,0xece1d8e3
  421d90:	loopne 0x421d94
  421d92:	mov    al,bl
  421d94:	dec    edi
  421d95:	add    BYTE PTR [eax],bl
  421d97:	cli    
  421d98:	fcomp  DWORD PTR [esi-0x2d8fa977]
  421d9e:	popa   
  421d9f:	inc    esp
  421da0:	xchg   esi,eax
  421da1:	in     eax,0x15
  421da3:	inc    edx
  421da4:	jmp    0x39ee:0x99449fba
  421dab:	push   ecx
  421dac:	mov    al,0xac
  421dae:	jne    0x421ddf
  421db0:	add    esi,ebp
  421db2:	repz push edi
  421db4:	movd   edi,mm0
  421db7:	mov    ah,0xf4
  421db9:	(bad)  
  421dba:	xor    DWORD PTR [ecx-0x23],eax
  421dbd:	ror    DWORD PTR [edx+0x2c570027],1
  421dc3:	sub    BYTE PTR [esi-0x3fa100f6],dh
  421dc9:	xor    BYTE PTR [ecx-0x7],dh
  421dcc:	jp     0x421e20
  421dce:	stos   BYTE PTR es:[edi],al
  421dcf:	jg     0x421e42
  421dd1:	adc    dl,BYTE PTR [ecx+esi*1]
  421dd4:	push   ss
  421dd5:	mov    al,ds:0x858b4635
  421dda:	or     dh,bh
  421ddc:	(bad)  
  421ddd:	dec    DWORD PTR [ebx-0x20b73]
  421de3:	dec    DWORD PTR [edi]
  421de5:	mov    bh,0x4
  421de7:	xor    DWORD PTR ds:0xa59b,0xd1c0b70f
  421df1:	clc    
  421df2:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421df8:	mov    edx,DWORD PTR [ebp-0x20c]
  421dfe:	movzx  ecx,WORD PTR [edx+ecx*4]
  421e02:	xor    ecx,0xa59b
  421e08:	movzx  ecx,cx
  421e0b:	shl    ecx,0xf
  421e0e:	or     eax,ecx
  421e10:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421e16:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421e1d:	jmp    0x421879
  421e22:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e28:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e2e:	xor    eax,0xcb79b576
  421e33:	xor    edx,0x9c2b8ae8
  421e39:	mov    cl,0x2
  421e3b:	call   0x408bb8
  421e40:	mov    esi,eax
  421e42:	mov    edi,edx
  421e44:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e4a:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e50:	xor    eax,0xcb79b576
  421e55:	xor    edx,0x9c2b8ae8
  421e5b:	mov    cl,0x3e
  421e5d:	call   0x4223f1
  421e62:	or     esi,eax
  421e64:	or     edi,edx
  421e66:	mov    DWORD PTR [ebp-0x1e4],esi
  421e6c:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e72:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e78:	xor    eax,0xcb79b576
  421e7d:	xor    edx,0x9c2b8ae8
  421e83:	mov    cl,0x2
  421e85:	call   0x408bb8
  421e8a:	mov    esi,eax
  421e8c:	mov    edi,edx
  421e8e:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e94:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e9a:	xor    eax,0xcb79b576
  421e9f:	xor    edx,0x9c2b8ae8
  421ea5:	mov    cl,0x3e
  421ea7:	call   0x4223f1
  421eac:	or     esi,eax
  421eae:	or     edi,edx
  421eb0:	mov    DWORD PTR [ebp-0x23c],esi
  421eb6:	mov    DWORD PTR [ebp-0x238],edi
  421ebc:	mov    eax,DWORD PTR [ebp-0x23c]
  421ec2:	or     eax,DWORD PTR [ebp-0x238]
  421ec8:	je     0x422128
  421ece:	lea    eax,[ebp-0x204]
  421ed4:	mov    DWORD PTR [ebp-0x208],eax
  421eda:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ee0:	xor    edx,edx
  421ee2:	mov    cl,0x2
  421ee4:	call   0x4223f1
  421ee9:	mov    esi,eax
  421eeb:	mov    edi,edx
  421eed:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ef3:	xor    edx,edx
  421ef5:	mov    cl,0x3e
  421ef7:	call   0x408bb8
  421efc:	or     esi,eax
  421efe:	or     edi,edx
  421f00:	xor    esi,0xcb79b576
  421f06:	xor    edi,0x9c2b8ae8
  421f0c:	mov    eax,DWORD PTR [ebp-0x208]
  421f12:	mov    DWORD PTR [eax],esi
  421f14:	mov    DWORD PTR [eax+0x4],edi
  421f17:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f1d:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421f25:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f2b:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f31:	xor    eax,0xcb79b576
  421f36:	xor    edx,0x9c2b8ae8
  421f3c:	mov    cl,0x2
  421f3e:	call   0x408bb8
  421f43:	mov    ebx,eax
  421f45:	mov    edi,edx
  421f47:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f4d:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f53:	xor    eax,0xcb79b576
  421f58:	xor    edx,0x9c2b8ae8
  421f5e:	mov    cl,0x3e
  421f60:	call   0x4223f1
  421f65:	or     ebx,eax
  421f67:	or     edi,edx
  421f69:	movsx  eax,bl
  421f6c:	cmp    esi,eax
  421f6e:	je     0x4220ce
  421f74:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f7a:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421f82:	mov    eax,DWORD PTR [ebp-0x204]
  421f88:	mov    edx,DWORD PTR [ebp-0x200]
  421f8e:	xor    eax,0xcb79b576
  421f93:	xor    edx,0x9c2b8ae8
  421f99:	mov    cl,0x2
  421f9b:	call   0x408bb8
  421fa0:	mov    edi,eax
  421fa2:	mov    ebx,edx
  421fa4:	mov    eax,DWORD PTR [ebp-0x204]
  421faa:	mov    edx,DWORD PTR [ebp-0x200]
  421fb0:	xor    eax,0xcb79b576
  421fb5:	xor    edx,0x9c2b8ae8
  421fbb:	mov    cl,0x3e
  421fbd:	call   0x4223f1
  421fc2:	or     edi,eax
  421fc4:	or     ebx,edx
  421fc6:	mov    eax,DWORD PTR [ebp-0x210]
  421fcc:	movsx  eax,BYTE PTR [eax+edi*1]
  421fd0:	cmp    esi,eax
  421fd2:	je     0x421fe2
  421fd8:	jmp    0x422128
  421fdd:	jmp    0x4220ce
  421fe2:	mov    eax,DWORD PTR [ebp-0x204]
  421fe8:	mov    edx,DWORD PTR [ebp-0x200]
  421fee:	xor    eax,0xcb79b576
  421ff3:	xor    edx,0x9c2b8ae8
  421ff9:	mov    cl,0x2
  421ffb:	call   0x408bb8
  422000:	mov    esi,eax
  422002:	mov    edi,edx
  422004:	mov    eax,DWORD PTR [ebp-0x204]
  42200a:	mov    edx,DWORD PTR [ebp-0x200]
  422010:	xor    eax,0xcb79b576
  422015:	xor    edx,0x9c2b8ae8
  42201b:	mov    cl,0x3e
  42201d:	call   0x4223f1
  422022:	or     esi,eax
  422024:	or     edi,edx
  422026:	mov    eax,DWORD PTR [ebp-0x210]
  42202c:	movsx  esi,BYTE PTR [eax+esi*1]
  422030:	mov    eax,DWORD PTR [ebp-0x1f0]
  422036:	mov    edx,DWORD PTR [ebp-0x1ec]
  42203c:	xor    eax,0xcb79b576
  422041:	xor    edx,0x9c2b8ae8
  422047:	mov    cl,0x2
  422049:	call   0x408bb8
  42204e:	mov    ebx,eax
  422050:	mov    edi,edx
  422052:	mov    eax,DWORD PTR [ebp-0x1f0]
  422058:	mov    edx,DWORD PTR [ebp-0x1ec]
  42205e:	xor    eax,0xcb79b576
  422063:	xor    edx,0x9c2b8ae8
  422069:	mov    cl,0x3e
  42206b:	call   0x4223f1
  422070:	or     ebx,eax
  422072:	or     edi,edx
  422074:	movsx  eax,bl
  422077:	cmp    esi,eax
  422079:	jne    0x4220ce
  42207f:	mov    eax,DWORD PTR [ebp-0x1e0]
  422085:	mov    edx,DWORD PTR [ebp-0x1dc]
  42208b:	xor    eax,0xcb79b576
  422090:	xor    edx,0x9c2b8ae8
  422096:	mov    cl,0x2
  422098:	call   0x408bb8
  42209d:	mov    esi,eax
  42209f:	mov    edi,edx
  4220a1:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220a7:	mov    edx,DWORD PTR [ebp-0x1dc]
  4220ad:	xor    eax,0xcb79b576
  4220b2:	xor    edx,0x9c2b8ae8
  4220b8:	mov    cl,0x3e
  4220ba:	call   0x4223f1
  4220bf:	or     esi,eax
  4220c1:	or     edi,edx
  4220c3:	mov    DWORD PTR [ebp-0x214],esi
  4220c9:	jmp    0x422172
  4220ce:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220d4:	mov    edx,DWORD PTR [ebp-0x1dc]
  4220da:	xor    eax,0xcb79b576
  4220df:	xor    edx,0x9c2b8ae8
  4220e5:	mov    cl,0x2
  4220e7:	call   0x408bb8
  4220ec:	mov    esi,eax
  4220ee:	mov    edi,edx
  4220f0:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220f6:	mov    edx,DWORD PTR [ebp-0x1dc]
  4220fc:	xor    eax,0xcb79b576
  422101:	xor    edx,0x9c2b8ae8
  422107:	mov    cl,0x3e
  422109:	call   0x4223f1
  42210e:	or     esi,eax
  422110:	or     edi,edx
  422112:	add    esi,DWORD PTR [ebp-0x1e4]
  422118:	mov    DWORD PTR [ebp-0x1e4],esi
  42211e:	jmp    0x421e6c
  422123:	jmp    0x421e6c
  422128:	mov    eax,DWORD PTR [ebp-0x1f0]
  42212e:	mov    edx,DWORD PTR [ebp-0x1ec]
  422134:	xor    eax,0xcb79b576
  422139:	xor    edx,0x9c2b8ae8
  42213f:	mov    cl,0x2
  422141:	call   0x408bb8
  422146:	mov    esi,eax
  422148:	mov    edi,edx
  42214a:	mov    eax,DWORD PTR [ebp-0x1f0]
  422150:	mov    edx,DWORD PTR [ebp-0x1ec]
  422156:	xor    eax,0xcb79b576
  42215b:	xor    edx,0x9c2b8ae8
  422161:	mov    cl,0x3e
  422163:	call   0x4223f1
  422168:	or     esi,eax
  42216a:	or     edi,edx
  42216c:	mov    DWORD PTR [ebp-0x214],esi
  422172:	mov    eax,DWORD PTR [ebp-0x214]
  422178:	mov    DWORD PTR [ebp-0xc8],eax
  42217e:	cmp    DWORD PTR [ebp-0xc8],0x0
  422185:	je     0x4221af
  42218b:	mov    eax,DWORD PTR [ebp-0x144]
  422191:	mov    ecx,DWORD PTR [ebp-0xac]
  422197:	movzx  eax,WORD PTR [ecx+eax*2]
  42219b:	mov    ecx,DWORD PTR [ebp-0xa8]
  4221a1:	mov    eax,DWORD PTR [ecx+eax*4]
  4221a4:	mov    DWORD PTR [ebp-0xfc],eax
  4221aa:	jmp    0x4221b4
  4221af:	jmp    0x420789
  4221b4:	cmp    DWORD PTR [ebp-0xfc],0x0
  4221bb:	jne    0x4221c8
  4221c1:	xor    eax,eax
  4221c3:	jmp    0x4223ea
  4221c8:	mov    eax,DWORD PTR [ebp+0x8]
  4221cb:	add    eax,DWORD PTR [ebp-0xfc]
  4221d1:	mov    DWORD PTR [ebp-0xec],eax
  4221d7:	mov    DWORD PTR [ebp-0x74],0x0
  4221de:	cmp    DWORD PTR [ebp-0xb0],0x0
  4221e5:	je     0x422261
  4221eb:	cmp    DWORD PTR [ebp-0xb0],0x0
  4221f2:	je     0x422261
  4221f8:	mov    eax,DWORD PTR [ebp-0xb0]
  4221fe:	shl    eax,0x2
  422201:	mov    DWORD PTR [ebp-0x74],eax
  422204:	mov    DWORD PTR [ebp-0x14c],0x0
  42220e:	sub    esp,DWORD PTR [ebp-0x74]
  422211:	mov    DWORD PTR [ebp-0x14c],esp
  422217:	mov    DWORD PTR [ebp-0x148],0x0
  422221:	mov    eax,DWORD PTR [ebp-0x148]
  422227:	cmp    eax,DWORD PTR [ebp-0xb0]
  42222d:	je     0x422261
  422233:	mov    eax,DWORD PTR [ebp-0x148]
  422239:	mov    ecx,DWORD PTR [ebp-0x14c]
  42223f:	mov    edx,DWORD PTR [ebp-0x148]
  422245:	mov    esi,DWORD PTR [ebp+0x14]
  422248:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  42224c:	mov    DWORD PTR [ecx+eax*4],edx
  42224f:	mov    eax,DWORD PTR [ebp-0x148]
  422255:	inc    eax
  422256:	mov    DWORD PTR [ebp-0x148],eax
  42225c:	jmp    0x422221
  422261:	mov    DWORD PTR [ebp-0x9c],0x0
  42226b:	push   0x4223a3
  422270:	jmp    DWORD PTR [ebp-0xec]
  422276:	mov    eax,eax
  422278:	mov    ecx,esp
  42227a:	ret    0x8
  42227d:	cmp    DWORD PTR ds:0x428405,0x0
  422284:	not    DWORD PTR ds:0x428405
  42228a:	mov    DWORD PTR ds:0x42841d,0x5307
  422294:	mov    DWORD PTR ds:0x428575,0x4819
  42229e:	jmp    0x4222e0
  4222a3:	not    eax
  4222a5:	cmp    DWORD PTR ds:0x428405,0x0
  4222ac:	jl     0x4222ce
  4222b2:	push   0x0
  4222b4:	call   DWORD PTR ds:0x42e13c
  4222ba:	add    DWORD PTR ds:0x4284f5,0x4c21
  4222c4:	and    DWORD PTR ds:0x4284dd,0x73e0
  4222ce:	sub    DWORD PTR ds:0x428449,edx
  4222d4:	or     DWORD PTR ds:0x428351,ecx
  4222da:	sub    DWORD PTR ds:0x4284ed,ebx
  4222e0:	push   ebx
  4222e1:	dec    eax
  4222e2:	push   esi
  4222e3:	mov    eax,DWORD PTR [esp+0x18]
  4222e7:	or     eax,eax
  4222e9:	mov    DWORD PTR ds:0x42840d,0x72ef
  4222f3:	jne    0x42232f
  4222f9:	mov    ecx,DWORD PTR [esp+0x14]
  4222fd:	mov    eax,DWORD PTR [esp+0x10]
  422301:	xor    edx,edx
  422303:	inc    ebx
  422304:	div    ecx
  422306:	sbb    ebx,DWORD PTR ds:0x428559
  42230c:	mov    ebx,eax
  42230e:	mov    eax,DWORD PTR [esp+0xc]
  422312:	adc    DWORD PTR ds:0x4284dd,0x42846d
  42231c:	div    ecx
  42231e:	mov    DWORD PTR ds:0x428405,0x3a7e
  422328:	mov    edx,ebx
  42232a:	jmp    0x42239e
  42232f:	mov    ecx,eax
  422331:	mov    ebx,DWORD PTR [esp+0x14]
  422335:	xor    eax,DWORD PTR ds:0x428579
  42233b:	mov    edx,DWORD PTR [esp+0x10]
  42233f:	mov    eax,DWORD PTR [esp+0xc]
  422343:	mov    DWORD PTR ds:0x428475,0x7dde
  42234d:	shr    ecx,1
  42234f:	mov    DWORD PTR ds:0x428565,0x121c
  422359:	rcr    ebx,1
  42235b:	shr    edx,1
  42235d:	rcr    eax,1
  42235f:	or     ecx,ecx
  422361:	jne    0x422343
  422367:	div    ebx
  422369:	mov    esi,eax
  42236b:	mul    DWORD PTR [esp+0x18]
  42236f:	mov    ecx,eax
  422371:	mov    eax,DWORD PTR [esp+0x14]
  422375:	mul    esi
  422377:	add    edx,ecx
  422379:	jb     0x422399
  42237f:	cmp    edx,DWORD PTR [esp+0x10]
  422383:	ja     0x422399
  422389:	jb     0x42239a
  42238f:	cmp    eax,DWORD PTR [esp+0xc]
  422393:	jbe    0x42239a
  422399:	dec    esi
  42239a:	xor    edx,edx
  42239c:	mov    eax,esi
  42239e:	pop    esi
  42239f:	pop    ebx
  4223a0:	ret    0x10
  4223a3:	sub    DWORD PTR [ebp+0x10],0x1
  4223a7:	mov    DWORD PTR ds:0x4284e1,0x3767
  4223b1:	cmp    DWORD PTR [ebp+0x10],0x0
  4223b5:	mov    DWORD PTR ds:0x428569,0xcef
  4223bf:	je     0x4223d4
  4223c5:	mov    esi,DWORD PTR ds:0x4284f9
  4223cb:	sbb    DWORD PTR ds:0x428565,esi
  4223d1:	add    esp,DWORD PTR [ebp-0x74]
  4223d4:	mov    DWORD PTR [ebp-0x9c],eax
  4223da:	mov    eax,DWORD PTR [ebp-0x9c]
  4223e0:	mov    DWORD PTR ds:0x428431,0x5e8f
  4223ea:	pop    edi
  4223eb:	pop    esi
  4223ec:	pop    ebx
  4223ed:	leave  
  4223ee:	ret    0x10
  4223f1:	cmp    cl,0x40
  4223f4:	mov    DWORD PTR ds:0x428435,0x7c93
  4223fe:	jae    0x42243e
  422404:	cmp    cl,0x20
  422407:	mov    DWORD PTR ds:0x428371,0x440e
  422411:	jae    0x42241d
  422417:	shld   edx,eax,cl
  42241a:	shl    eax,cl
  42241c:	ret    
  42241d:	movzx  edx,WORD PTR ds:0x4284c5
  422424:	add    DWORD PTR ds:0x428475,edx
  42242a:	mov    edx,eax
  42242c:	xor    eax,eax
  42242e:	mov    DWORD PTR ds:0x428361,0x5f4f
  422438:	and    cl,0x1f
  42243b:	shl    edx,cl
  42243d:	ret    
  42243e:	xor    eax,eax
  422440:	xor    edx,edx
  422442:	ret    
	...
  42244f:	add    BYTE PTR [ebx+esi*2],al
  422452:	xchg   ecx,ebp
  422454:	push   ebx
  422455:	into   
  422456:	jns    0x4224b9
  422458:	push   0x98626f72
  42245d:	xor    eax,0x74b9d761
  422462:	jne    0x4224d2
  422464:	and    dl,bl
  422466:	mov    ch,0xed
  422468:	popf   
  422469:	bnd ret 0xa4
  42246d:	add    BYTE PTR [eax],al
  42246f:	add    BYTE PTR [edi+0x72],ah
  422472:	gs popa 
  422474:	je     0x4224dd
  422476:	jb     0x4224dd
  422478:	popa   
  422479:	je     0x4224e2
  42247b:	jb     0x4224e2
  42247d:	popa   
  42247e:	je     0x4224e7
  422480:	jb     0x4224e7
  422482:	popa   
  422483:	je     0x4224ec
  422485:	jb     0x4224ec
  422487:	popa   
  422488:	je     0x4224f1
  42248a:	jb     0x4224f1
  42248c:	popa   
  42248d:	je     0x4224f6
  42248f:	jb     0x4224f6
  422491:	popa   
  422492:	je     0x4224fb
  422494:	jb     0x4224fb
  422496:	popa   
  422497:	je     0x422500
  422499:	jb     0x422500
  42249b:	popa   
  42249c:	je     0x422505
  42249e:	jb     0x422505
  4224a0:	popa   
  4224a1:	je     0x4224a3
  4224a3:	add    BYTE PTR [eax+0x65],ch
  4224a6:	ins    BYTE PTR es:[edi],dx
  4224a7:	ins    BYTE PTR es:[edi],dx
  4224a8:	push   0x686c6c65
  4224ad:	gs ins BYTE PTR es:[edi],dx
  4224af:	ins    BYTE PTR es:[edi],dx
  4224b0:	push   0x686c6c65
  4224b5:	gs ins BYTE PTR es:[edi],dx
  4224b7:	ins    BYTE PTR es:[edi],dx
  4224b8:	push   0x686c6c65
  4224bd:	gs ins BYTE PTR es:[edi],dx
  4224bf:	ins    BYTE PTR es:[edi],dx
  4224c0:	push   0x686c6c65
  4224c5:	gs ins BYTE PTR es:[edi],dx
  4224c7:	ins    BYTE PTR es:[edi],dx
  4224c8:	push   0x686c6c65
  4224cd:	gs ins BYTE PTR es:[edi],dx
  4224cf:	ins    BYTE PTR es:[edi],dx
  4224d0:	push   0x686c6c65
  4224d5:	gs ins BYTE PTR es:[edi],dx
  4224d7:	ins    BYTE PTR es:[edi],dx
  4224d8:	add    BYTE PTR [eax],al
  4224da:	add    BYTE PTR [eax],al
  4224dc:	outs   dx,DWORD PTR ds:[esi]
  4224dd:	add    BYTE PTR [eax+eax*1+0x65],ch
  4224e1:	add    BYTE PTR [ecx+0x0],ah
  4224e4:	jne    0x4224e6
  4224e6:	je     0x4224e8
  4224e8:	xor    eax,DWORD PTR [eax]
  4224ea:	xor    al,BYTE PTR [eax]
  4224ec:	add    BYTE PTR [eax],al
  4224ee:	add    BYTE PTR [eax],al
  4224f0:	push   0x61006500
  4224f5:	add    BYTE PTR [esi+0x0],dh
  4224f8:	add    BYTE PTR gs:[esi+0x0],ch
  4224fc:	push   0x61006500
  422501:	add    BYTE PTR [esi+0x0],dh
  422504:	add    BYTE PTR gs:[esi+0x0],ch
  422508:	push   0x61006500
  42250d:	add    BYTE PTR [esi+0x0],dh
  422510:	add    BYTE PTR gs:[esi+0x0],ch
  422514:	push   0x61006500
  422519:	add    BYTE PTR [esi+0x0],dh
  42251c:	add    BYTE PTR gs:[esi+0x0],ch
  422520:	push   0x61006500
  422525:	add    BYTE PTR [esi+0x0],dh
  422528:	add    BYTE PTR gs:[esi+0x0],ch
  42252c:	push   0x61006500
  422531:	add    BYTE PTR [esi+0x0],dh
  422534:	add    BYTE PTR gs:[esi+0x0],ch
  422538:	push   0x61006500
  42253d:	add    BYTE PTR [esi+0x0],dh
  422540:	add    BYTE PTR gs:[esi+0x0],ch
  422544:	push   0x61006500
  422549:	add    BYTE PTR [esi+0x0],dh
  42254c:	add    BYTE PTR gs:[esi+0x0],ch
  422550:	push   0x61006500
  422555:	add    BYTE PTR [esi+0x0],dh
  422558:	add    BYTE PTR gs:[esi+0x0],ch
  42255c:	add    BYTE PTR [eax],al
  42255e:	add    BYTE PTR [eax],al
  422560:	fsub   QWORD PTR [edx+eax*2]
  422563:	add    BYTE PTR [edi+0x6c],cl
  422566:	gs dec ecx
  422568:	arpl   WORD PTR [edi+0x6e],bp
  42256b:	push   esp
  42256c:	outs   dx,DWORD PTR ds:[esi]
  42256d:	inc    ebx
  42256e:	jne    0x4225e2
  422570:	jae    0x4225e1
  422572:	jb     0x422574
  422574:	fs and eax,0x42
  42257a:	add    BYTE PTR [eax],al
  42257c:	add    BYTE PTR [eax],al
  42257e:	add    BYTE PTR [eax],al
  422580:	and    BYTE PTR [ecx],ch
  422582:	inc    edx
  422583:	add    BYTE PTR [eax],ch
  422585:	sub    DWORD PTR [edx+0x0],eax
  422588:	loopne 0x4225b1
  42258a:	inc    edx
  42258b:	add    dl,dh
  42258d:	inc    edx
  42258e:	push   ebx
  42258f:	lea    edx,ds:0x1a59ba5
  422595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422596:	popf   
  422597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422598:	jno    0x42253f
  42259a:	xchg   edi,eax
  42259b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42259c:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  4225a2:	and    DWORD PTR [ebp-0x5a7a5ae7],0xffffff9b
  4225a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225aa:	mov    ebx,0xd183d3a5
  4225af:	lea    edx,[ebp-0x645aea5b]
  4225b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225b6:	add    DWORD PTR [ebp-0x5a8e5a63],esp
  4225bc:	xchg   edi,eax
  4225bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225be:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  4225c4:	and    DWORD PTR [ebp-0x5a7a5acb],0xffffff9b
  4225cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225cc:	mov    ebx,0xd1e3d3a5
  4225d1:	in     eax,dx
  4225d2:	xchg   ebp,eax
  4225d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225d4:	adc    eax,0x3ba59ba5
  4225d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225da:	popf   
  4225db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225dc:	sbb    DWORD PTR [ebp-0x5a805a6b],esp
  4225e2:	(bad)  
  4225e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225e4:	fwait
  4225e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225e6:	xchg   DWORD PTR [ebp-0x322e3c2d],esp
  4225ec:	icebp  
  4225ed:	sub    eax,0xf172ff7
  4225f2:	adc    eax,0x3a59109
  4225f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225f8:	fwait
  4225f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225fa:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  422600:	xchg   ebp,eax
  422601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422602:	sbb    DWORD PTR [ebp-0x5a645a73],esp
  422608:	and    DWORD PTR [ebp+0x2dd123d3],0xfffffff1
  42260f:	or     eax,0x6f170ff7
  422614:	adc    eax,0x3a59169
  422619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42261a:	fwait
  42261b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42261c:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  422622:	xchg   ebp,eax
  422623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422624:	xor    eax,0x9ba58da5
  422629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42262a:	and    DWORD PTR [ebp+0xdd103d3],0xfffffff1
  422631:	ins    DWORD PTR es:[edi],dx
  422632:	imul   DWORD PTR [edi+0x17]
  422635:	dec    edi
  422636:	adc    eax,0x37a59149
  42263b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263c:	fwait
  42263d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263e:	jae    0x4225e5
  422640:	popf   
  422641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422642:	sbb    DWORD PTR [ebp-0x5aba5a6b],esp
  422648:	(bad)  
  422649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42264a:	fwait
  42264b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42264c:	and    DWORD PTR [ebp+0x6dd163d3],0xfffffff1
  422653:	dec    ebp
  422654:	test   DWORD PTR [edi+0x16],0x91a914af
  42265b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42265c:	aaa    
  42265d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42265e:	fwait
  42265f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422660:	jae    0x422607
  422662:	popf   
  422663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422664:	pop    ss
  422665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422666:	xchg   ebp,eax
  422667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422668:	push   ecx
  422669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42266a:	mov    DWORD PTR [ebp-0x5a725a65],esp
  422670:	rol    DWORD PTR [ebx-0x2f],cl
  422673:	dec    ebp
  422674:	lock lods eax,DWORD PTR ds:[esi]
  422676:	imul   BYTE PTR [edi-0x76eb70ea]
  42267c:	xchg   ecx,eax
  42267d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42267e:	aaa    
  42267f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422680:	fwait
  422681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422682:	jae    0x422629
  422684:	popf   
  422685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422686:	cmp    esp,DWORD PTR [ebp-0x5a8c5a6b]
  42268c:	(bad)  
  42268d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42268e:	fwait
  42268f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422690:	xchg   DWORD PTR [ebp-0x522f5c2e],esp
  422696:	lock (bad) 
  422698:	test   BYTE PTR [edi-0x16eb10ea],0x91
  42269f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a0:	aaa    
  4226a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a2:	fwait
  4226a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a4:	jae    0x42264b
  4226a6:	popf   
  4226a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a8:	cmp    DWORD PTR [ebp-0x5a805a6b],esp
  4226ae:	(bad)  
  4226af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b0:	fwait
  4226b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b2:	and    DWORD PTR [ebp-0x722f7c2e],0xfffffff0
  4226b9:	in     eax,dx
  4226ba:	imul   bh
  4226bc:	push   ss
  4226bd:	iret   
  4226be:	adc    al,0xc9
  4226c0:	xchg   ecx,eax
  4226c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c2:	cmp    eax,0x51a59ba5
  4226c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c8:	popf   
  4226c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ca:	jnp    0x422671
  4226cc:	xchg   ebx,eax
  4226cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ce:	fwait
  4226cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d0:	xchg   ecx,eax
  4226d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d2:	shl    bl,cl
  4226d4:	shr    ch,1
  4226d6:	lock int 0xf6
  4226d9:	iret   
  4226da:	push   ss
  4226db:	das    
  4226dc:	adc    al,0x29
  4226de:	push   ss
  4226df:	unpcklps xmm1,XMMWORD PTR [ecx]
  4226e2:	xchg   ebx,eax
  4226e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226e4:	adc    DWORD PTR [ebp-0x5ab65a65],esp
  4226ea:	lahf   
  4226eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ec:	cmp    esp,DWORD PTR [ebp-0x5a825a6d]
  4226f2:	mov    DWORD PTR [ebp-0x5a725a65],esp
  4226f8:	shl    BYTE PTR [ebx],cl
  4226fa:	shr    BYTE PTR ds:0xff60df0,1
  422700:	push   ss
  422701:	outs   dx,DWORD PTR ds:[esi]
  422702:	adc    al,0x69
  422704:	xchg   ecx,eax
  422705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422706:	add    BYTE PTR [eax],al
  422708:	nop
  422709:	and    eax,0x279c0042
  42270e:	inc    edx
  42270f:	add    BYTE PTR [edi+eiz*1+0x292c0042],ah
  422716:	inc    edx
  422717:	add    BYTE PTR [eax-0x57ffbddb],cl
  42271d:	daa    
  42271e:	inc    edx
  42271f:	add    dh,cl
  422721:	jle    0x422765
  422723:	add    BYTE PTR [esi-0x7f],al
  422726:	inc    edx
  422727:	add    BYTE PTR [eax+0x1c004228],bl
  42272d:	sub    DWORD PTR [edx+0x0],eax
  422730:	test   BYTE PTR [edi],ah
  422732:	inc    edx
  422733:	add    BYTE PTR [eax+0x18004227],cl
  422739:	sub    DWORD PTR [edx+0x0],eax
  42273c:	in     al,dx
  42273d:	daa    
  42273e:	inc    edx
  42273f:	add    BYTE PTR [edx-0x36],cl
  422742:	push   es
  422743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422744:	scas   al,BYTE PTR es:[edi]
  422745:	or     eax,0x27a0a506
  42274a:	inc    edx
  42274b:	add    BYTE PTR [eax+0x28],dl
  42274e:	inc    edx
  42274f:	add    BYTE PTR [eax+ebp*1+0x42],ah
  422753:	add    BYTE PTR [eax+0x28],dh
  422756:	inc    edx
  422757:	add    BYTE PTR [eax-0x27ffbdd8],al
  42275d:	daa    
  42275e:	inc    edx
  42275f:	add    BYTE PTR [ebp+eiz*1+0x27f80042],cl
  422766:	inc    edx
  422767:	add    al,ch
  422769:	daa    
  42276a:	inc    edx
  42276b:	add    BYTE PTR [eax],dh
  42276d:	sub    DWORD PTR [edx+0x0],eax
  422770:	scas   al,BYTE PTR es:[edi]
  422771:	fwait
  422772:	push   es
  422773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422774:	cmp    BYTE PTR [edx-0x19],al
  422777:	mov    esp,0x422808
  42277c:	adc    BYTE PTR [eax],ch
  42277e:	inc    edx
  42277f:	add    BYTE PTR [edi+eiz*1-0x79dbffbe],ch
  422786:	loopne 0x422744
  422788:	jbe    0x422804
  42278a:	pop    ds
  42278b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42278c:	add    BYTE PTR [eax],al
  42278e:	inc    eax
  42278f:	add    cl,dh
  422791:	retf   
  422792:	arpl   WORD PTR [eax+0x43],bx
  422795:	add    DWORD PTR [edx+0x0],0x6ae878a8
  42279c:	ja     0x4227ac
  42279e:	pop    ebx
  42279f:	xor    BYTE PTR [esi-0x6],dh
  4227a2:	(bad)  
  4227a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227a4:	mov    dl,0xd
  4227a6:	xchg   ebx,eax
  4227a7:	test   eax,0x422794
  4227ac:	stos   BYTE PTR es:[edi],al
  4227ad:	fild   DWORD PTR [esi]
  4227af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b0:	stos   BYTE PTR es:[edi],al
  4227b1:	fild   WORD PTR [esi]
  4227b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227b5:	fild   DWORD PTR [esi]
  4227b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b8:	mov    ds:0xbea506db,al
  4227bd:	fild   DWORD PTR [esi]
  4227bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c0:	mov    edx,0xb6a506db
  4227c5:	fild   DWORD PTR [esi]
  4227c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c8:	mov    dl,0xdb
  4227ca:	push   es
  4227cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227cc:	mov    ds,ebx
  4227ce:	push   es
  4227cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d0:	mov    bl,bl
  4227d2:	push   es
  4227d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d4:	out    dx,al
  4227d5:	fild   DWORD PTR [esi]
  4227d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d8:	dec    DWORD PTR [edx]
  4227da:	adc    edi,DWORD PTR [ebx]
  4227dc:	test   BYTE PTR ds:0x2a750042,ah
  4227e2:	inc    edx
  4227e3:	add    BYTE PTR [ecx+0x73],ah
  4227e6:	push   0x69bae79
  4227eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227ec:	cmp    cl,dl
  4227ee:	xlat   BYTE PTR ds:[ebx]
  4227ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227f0:	dec    sp
  4227f2:	add    BYTE PTR [eax],al
  4227f4:	and    BYTE PTR ds:0x42220042,0x1b
  4227fb:	add    DWORD PTR [eax],0x0
	...
  422806:	add    BYTE PTR [eax],al
  422808:	hlt    
  422809:	stc    
  42280a:	sar    BYTE PTR [edi+edi*4+0x2b309341],cl
  422811:	inc    esi
  422812:	pop    ds
  422813:	jg     0x422815
	...
  422839:	add    BYTE PTR [eax],al
  42283b:	add    dh,cl
  42283d:	jle    0x422881
	...
  42284b:	add    BYTE PTR [edi-0x4c],al
  42284e:	inc    ecx
  42284f:	add    BYTE PTR [ebp-0x5b],cl
  422852:	push   ecx
  422853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422854:	jg     0x4227fb
  422856:	inc    edi
  422857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422858:	push   ecx
  422859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42285a:	inc    ebx
  42285b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42285c:	std    
  42285d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42285e:	jmp    DWORD PTR [ebp+0xa59b]
  422864:	push   ebp
  422865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422866:	push   ebx
  422867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422868:	dec    ecx
  422869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42286a:	std    
  42286b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42286c:	jmp    DWORD PTR [ebp-0x5a8e5a65]
  422872:	jge    0x422819
  422874:	push   ecx
  422875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422876:	jg     0x42281d
  422878:	std    
  422879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42287a:	jmp    DWORD PTR [ebp+0xa59b]
  422880:	jge    0x422827
  422882:	dec    ebx
  422883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422884:	inc    ebx
  422885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422886:	jne    0x42282d
  422888:	pop    ecx
  422889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42288a:	jnp    0x422831
  42288c:	dec    ecx
  42288d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42288e:	fwait
  42288f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  422898:	xor    eax,ecx
  42289a:	xor    esp,DWORD PTR [ecx]
  42289c:	xor    eax,DWORD PTR [ecx]
  42289e:	xor    esp,DWORD PTR [ecx+0x33]
  4228a1:	inc    ecx
  4228a2:	xor    ah,BYTE PTR [ecx-0x1ecd7ece]
  4228a8:	xor    al,cl
  4228aa:	xor    ah,BYTE PTR [ecx]
  4228ac:	xor    al,BYTE PTR [ecx]
  4228ae:	xor    ah,BYTE PTR [ecx+0x32]
  4228b1:	inc    ecx
  4228b2:	xor    eax,DWORD PTR [ecx-0x3ccc1ecd]
  4228b8:	xor    ecx,ebp
  4228ba:	xor    ecx,edi
  4228bc:	xor    ecx,ecx
  4228be:	xor    ecx,ebx
  4228c0:	xor    edx,ebp
  4228c2:	xor    edx,edi
  4228c4:	xor    edx,ecx
  4228c6:	xor    edx,ebx
  4228c8:	xor    ebx,ebp
  4228ca:	xor    ebx,edi
  4228cc:	xor    ebx,ecx
  4228ce:	xor    ebx,ebx
  4228d0:	xor    eax,edi
  4228d2:	push   ebx
  4228d3:	shl    DWORD PTR [ebx-0x3f],0x93
  4228d7:	rcl    BYTE PTR [esi-0x55],0x15
  4228db:	iret   
  4228dc:	xchg   ebp,eax
  4228dd:	dec    eax
  4228de:	xor    ecx,ebp
  4228e0:	sbb    eax,0x50aaaae3
  4228e5:	imul   ebx,DWORD PTR [esi],0x2f
  4228e8:	je     0x4228ff
  4228ea:	mov    DWORD PTR [edx+0x556ad694],ecx
  4228f0:	imul   edi,ebx,0xffffffd5
  4228f3:	enter  0x4927,0xef
  4228f7:	popf   
  4228f8:	mov    dh,0xde
  4228fa:	dec    esi
  4228fb:	xchg   esp,eax
  4228fc:	lock xor BYTE PTR [esi-0x6b],ch
  422900:	inc    ebp
  422901:	or     al,0x76
  422903:	or     DWORD PTR [edi-0x40],eax
  422906:	js     0x4228c2
  422908:	popa   
  422909:	pop    eax
  42290a:	jecxz  0x422976
  42290c:	mov    BYTE PTR [ebx-0x56],0x4
  422910:	cs leave 
  422912:	inc    esi
  422913:	stos   DWORD PTR es:[edi],eax
  422914:	inc    esp
  422915:	ds inc ebp
  422917:	enter  0x82f6,0x93
  42291b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42291c:	sbb    DWORD PTR [eax],ecx
  42291e:	fdivr  DWORD PTR [esp+ebp*1-0x1e]
  422922:	inc    edx
  422923:	add    cl,dl
  422925:	ja     0x422996
  422927:	mov    WORD PTR gs:[edi],fs
  42292a:	inc    edx
  42292b:	add    al,dh
  42292d:	daa    
  42292e:	inc    edx
  42292f:	add    BYTE PTR [esi-0x6],dh
  422932:	fbld   TBYTE PTR [eax+eax*1+0x0]
  422939:	add    BYTE PTR [eax],al
  42293b:	add    BYTE PTR [eax],al
  42293d:	add    BYTE PTR [eax],al
  42293f:	add    BYTE PTR [eax-0x15],bl
  422942:	push   ss
  422943:	cmp    eax,0x65646543
  422948:	push   esi
  422949:	imul   ebp,DWORD PTR gs:[esi+0x6f],0x616f7377
  422951:	jb     0x4229c7
  422953:	gs bound esp,QWORD PTR gs:[ecx+0x6c]
  422958:	jecxz  0x422921
  42295a:	shr    DWORD PTR [ebx+edx*8-0x3f],0xa3
  42295f:	cmp    al,BYTE PTR [esi-0x2d]
  422962:	jno    0x4229de
  422964:	outs   dx,DWORD PTR ds:[esi]
  422965:	jae    0x4229d7
  422967:	popa   
  422968:	je     0x4229d2
  42296a:	bound  esp,QWORD PTR [ecx+0x73]
  42296d:	je     0x4229de
  42296f:	outs   dx,DWORD PTR ds:[esi]
  422970:	test   eax,0xde3655f5
  422975:	in     al,0x6c
  422977:	jne    0x4229e1
  422979:	bound  esp,QWORD PTR [ebp+0x4b]
  42297c:	popa   
  42297d:	jbe    0x4229e0
  42297f:	outs   dx,WORD PTR ds:[esi]
  422981:	jns    0x4229f2
  422983:	imul   edi,DWORD PTR [eax],0x2c054cf4
  422989:	pusha  
  42298a:	and    BYTE PTR [edi+0x79],dh
  42298d:	gs jo  0x4229ff
  422990:	ins    DWORD PTR es:[edi],dx
  422991:	ja     0x422a0c
  422993:	gs inc ebp
  422995:	jns    0x4229fc
  422997:	jb     0x422999
	...
  4229a9:	add    BYTE PTR [eax],al
  4229ab:	add    BYTE PTR [esi-0x4e],dl
  4229ae:	and    dl,BYTE PTR [ecx]
  4229b0:	imul   esp,DWORD PTR [ebx+0x75],0x74
  4229b4:	imul   ebp,DWORD PTR [di+0x70],0xd71e3755
  4229bc:	fldcw  WORD PTR [eax+edx*2]
  4229bf:	fimul  WORD PTR [ebx]
  4229c1:	cmp    esi,DWORD PTR [esp+eax*4-0x66]
  4229c5:	fldcw  WORD PTR [eax+0x69]
  4229c8:	lods   al,BYTE PTR ds:[esi]
  4229c9:	repnz retf 0xe41c
  4229cd:	inc    ebx
  4229ce:	outs   dx,DWORD PTR ds:[esi]
  4229cf:	je     0x422a44
  4229d1:	dec    esp
  4229d2:	popa   
  4229d3:	jp     0x422a4e
  4229d5:	push   ebx
  4229d6:	imul   esp,DWORD PTR [ecx+0x73],0x73
  4229da:	push   0xc3066a00
  4229df:	lds    eax,FWORD PTR [eax+0x6569646f]
  4229e5:	add    al,bl
  4229e7:	mov    ebp,0x2ee9d1e4
  4229ec:	jle    0x4229a0
  4229ee:	data16 gs ja 0x422a65
  4229f2:	jne    0x422a56
  4229f4:	add    BYTE PTR [eax],al
  4229f6:	add    DWORD PTR [edx+0x51cf72f8],edi
  4229fc:	fstp   DWORD PTR [eax+0x74]
  4229ff:	popa   
  422a00:	jae    0x422a74
  422a02:	popa   
  422a03:	js     0x422a6d
  422a05:	outs   dx,DWORD PTR ds:[esi]
  422a06:	add    BYTE PTR [eax],al
  422a08:	mov    esi,0x4d270df8
  422a0d:	popa   
  422a0e:	ins    BYTE PTR es:[edi],dx
  422a0f:	je     0x422a5d
  422a11:	jne    0x422a85
  422a13:	imul   eax,DWORD PTR [eax],0x0
  422a16:	dec    edx
  422a17:	loope  0x422a27
  422a19:	out    0xd3,al
  422a1b:	test   al,0x57
  422a1d:	popa   
  422a1e:	jb     0x422a8b
  422a20:	jne    0x422a96
  422a22:	outs   dx,DWORD PTR fs:[esi]
  422a24:	bound  ebp,QWORD PTR [edi+0x0]
  422a27:	add    BYTE PTR [ebp+eax*1+0x62cfc27],dl
  422a2e:	jne    0x422a9d
  422a30:	outs   dx,DWORD PTR ds:[esi]
  422a31:	js     0x422a33
  422a33:	add    BYTE PTR [ecx+edx*8+0x58],ch
  422a37:	or     bh,BYTE PTR [ecx+ebx*2]
  422a3a:	add    al,0xd6
  422a3c:	gs ins DWORD PTR es:[edi],dx
  422a3e:	jns    0x422aaf
  422a40:	jo     0x422ab7
  422a42:	je     0x422a97
  422a44:	push   0x6170676f
  422a49:	jns    0x422ab5
  422a4b:	outs   dx,DWORD PTR ds:[esi]
  422a4c:	popa   
  422a4d:	jns    0x422a09
  422a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a50:	scas   al,BYTE PTR es:[edi]
  422a51:	or     al,0xaf
  422a53:	adc    al,0x63
  422a55:	popa   
  422a56:	jns    0x422a9f
  422a58:	jne    0x422ad0
  422a5a:	jae    0x422ad0
  422a5c:	imul   esp,DWORD PTR [ebx+0x73],0x61636f6e
  422a63:	jb     0x422aca
  422a65:	imul   ebp,DWORD PTR [ecx+0x25],0xffffffda
  422a69:	(bad)  
  422a6a:	out    dx,al
  422a6b:	push   ebx
  422a6c:	popa   
  422a6d:	arpl   WORD PTR [ebx+0x66],si
  422a70:	imul   esp,DWORD PTR [edx+0x64],0x9780006f
  422a77:	xchg   DWORD PTR [esi-0x7488fe6a],edx
  422a7d:	push   eax
  422a7e:	ja     0x422a0a
  422a80:	cdq    
  422a81:	adc    bh,0x8a
  422a84:	pop    esi
  422a85:	fldenv [ecx+0x6f5038a6]
  422a8b:	adc    bh,0x8b
  422a8e:	arpl   WORD PTR [edx],si
  422a90:	test   eax,0x92fcefd7
  422a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a96:	xchg   ah,bh
  422a98:	fsubr  st,st(7)
  422a9a:	arpl   sp,di
  422a9c:	fsub   DWORD PTR [esi+0xc92fc86]
  422aa2:	cdq    
  422aa3:	jo     0x422b19
  422aa5:	xchg   edi,eax
  422aa6:	add    BYTE PTR [edi+0x77019696],0x8b
  422aad:	push   eax
  422aae:	ja     0x422a3a
  422ab0:	adc    BYTE PTR [edi-0x2703a176],0x5b
  422ab7:	cmp    BYTE PTR [eax+0xc],dl
  422aba:	adc    BYTE PTR [edi-0x28089c75],0x9
  422ac1:	xor    BYTE PTR [edi-0x11],0xfc
  422ac5:	xchg   edx,eax
  422ac6:	xor    BYTE PTR [ebp+0x138c6dfc],ah
  422acc:	cld    
  422acd:	xchg   edx,eax
  422ace:	outs   dx,DWORD PTR ds:[esi]
  422acf:	mov    ds:0x31ec92fc,eax
  422ad4:	jo     0x422ad1
  422ad6:	out    dx,al
  422ad7:	lea    edx,[edi-0x69697880]
  422add:	add    DWORD PTR [edi-0x75],esi
  422ae0:	push   eax
  422ae1:	ja     0x422a6d
  422ae3:	adc    BYTE PTR [edi-0x2326a176],0x1c
  422aea:	hlt    
  422aeb:	push   eax
  422aec:	or     al,0x80
  422aee:	xchg   edi,eax
  422aef:	mov    esp,DWORD PTR [ebx-0x9]
  422af2:	xlat   BYTE PTR ds:[ebx]
  422af3:	out    dx,al
  422af4:	cld    
  422af5:	xchg   edx,eax
  422af6:	mov    WORD PTR [ebx],ss
  422af8:	xor    BYTE PTR [edi-0x11],0xfc
  422afc:	xchg   edx,eax
  422afd:	cmp    dl,BYTE PTR [esi+0x65306dfc]
  422b03:	jo     0x422b00
  422b05:	out    dx,al
  422b06:	lea    edx,[edi-0x69697880]
  422b0c:	add    DWORD PTR [edi-0x75],esi
  422b0f:	push   eax
  422b10:	ja     0x422a9c
  422b12:	cdq    
  422b13:	adc    bh,0x8a
  422b16:	pop    esi
  422b17:	fsubrp st(7),st
  422b19:	xor    edi,DWORD PTR [eax+edx*2]
  422b1c:	outs   dx,DWORD PTR ds:[esi]
  422b1d:	adc    bh,0x8b
  422b20:	arpl   WORD PTR [edx],si
  422b22:	test   eax,0xd8fca6d7
  422b27:	out    dx,al
  422b28:	fwait
  422b29:	mov    ecx,0x31ec927c
  422b2e:	fwait
  422b2f:	cld    
  422b30:	or     al,0x43
  422b32:	jo     0x422ba8
  422b34:	xchg   edi,eax
  422b35:	add    BYTE PTR [edi+0x77019696],0x8b
  422b3c:	push   eax
  422b3d:	ja     0x422ac9
  422b3f:	adc    BYTE PTR [edi-0x6d1fa176],0x3b
  422b46:	cmp    BYTE PTR [eax+0xc],dl
  422b49:	adc    BYTE PTR [edi-0x28089c75],0xff
  422b50:	xor    BYTE PTR [edi-0x11],0xfc
  422b54:	xchg   edx,eax
  422b55:	out    dx,eax
  422b56:	mov    ds:0x963a6dfc,eax
  422b5b:	cld    
  422b5c:	xchg   edx,eax
  422b5d:	das    
  422b5e:	stos   DWORD PTR es:[edi],eax
  422b5f:	jo     0x422b5c
  422b61:	out    dx,al
  422b62:	lea    ebx,[ebx-0x7f686c67]
  422b68:	xchg   DWORD PTR [eax+0x773a3577],eax
  422b6e:	cmp    eax,0xd7808a0a
  422b73:	sbb    eax,0x9925d73a
  422b78:	adc    bh,0x15
  422b7b:	dec    eax
  422b7c:	shr    DWORD PTR [edx-0x12f24e71],1
  422b82:	std    
  422b83:	dec    ebp
  422b84:	xchg   esp,eax
  422b85:	test   BYTE PTR [ebx-0x9],cl
  422b88:	or     cl,BYTE PTR [edi+0x4dfded51]
  422b8e:	xchg   esp,eax
  422b8f:	test   BYTE PTR [ebx-0x9],cl
  422b92:	or     cl,BYTE PTR [esi+edi*8]
  422b95:	or     BYTE PTR ds:0x432187ed,0x6a
  422b9c:	ins    DWORD PTR es:[edi],dx
  422b9d:	or     cl,BYTE PTR [edx]
  422b9f:	or     cl,BYTE PTR [edx]
  422ba1:	or     bl,BYTE PTR [ebx-0x1266f4bd]
  422ba7:	adc    DWORD PTR [ebp+0x5e],ecx
  422baa:	(bad)  
  422bab:	in     al,dx
  422bac:	lea    ecx,[ebp+0x10018494]
  422bb2:	pop    ecx
  422bb3:	mov    WORD PTR [ebp-0x1172a173],cs
  422bb9:	(bad)  
  422bba:	out    dx,al
  422bbb:	mov    dh,0xbe
  422bbd:	mov    BYTE PTR [edx+eiz*8+0x2f],0x9f
  422bc2:	xchg   BYTE PTR [ecx+0xc],ah
  422bc5:	lea    ecx,[ebp+0x5901cbf8]
  422bcb:	add    DWORD PTR [ebx-0x80],ebp
  422bce:	out    0x8a,eax
  422bd0:	xor    BYTE PTR [edi+0x32],0x43
  422bd4:	out    0x35,eax
  422bd6:	xor    edi,DWORD PTR [eax+edx*2+0x77]
  422bda:	xchg   BYTE PTR [edx-0x73],ah
  422bdd:	xchg   BYTE PTR [edi+0x98d8d0c],al
  422be3:	dec    edi
  422be4:	repnz lea ecx,[ebp-0x370f7073]
  422beb:	xor    esp,edi
  422bed:	xchg   DWORD PTR [esp+edi*4+0xbefbecd],edx
  422bf4:	mov    al,ds:0xec9d8894
  422bf9:	or     eax,0xeb6501a9
  422bfe:	mov    dl,0xbc
  422c00:	out    dx,eax
  422c01:	mov    WORD PTR gs:[esi-0x3a17beff],gs
  422c08:	mov    eax,ds:0x99968d8d
  422c0d:	cli    
  422c0e:	lea    edi,[edx]
  422c10:	lea    ecx,[ebp-0x1bc59df6]
  422c16:	push   ebp
  422c17:	and    bh,0x8a
  422c1a:	inc    ebx
  422c1b:	out    0x83,eax
  422c1d:	or     eax,esp
  422c1f:	imul   eax,DWORD PTR [eax-0x43495039],0xffffff80
  422c26:	push   ecx
  422c27:	xor    ecx,DWORD PTR [ebx-0x14]
  422c2a:	push   ecx
  422c2b:	add    ebp,eax
  422c2d:	lock lea eax,[esi-0x7272f3a0]
  422c34:	cmp    ch,0xb2
  422c37:	mov    bh,ch
  422c39:	in     eax,dx
  422c3a:	mov    edx,0xfa05633a
  422c3f:	lea    edi,[edx]
  422c41:	lea    ecx,[ebp-0x39c5e29]
  422c47:	in     al,0x9c
  422c49:	les    esp,FWORD PTR [edi]
  422c4b:	add    bh,0xaf
  422c4e:	xchg   cl,ch
  422c50:	or     al,0x8d
  422c52:	(bad)  
  422c53:	loop   0x422c8f
  422c55:	scas   al,BYTE PTR es:[edi]
  422c56:	in     al,dx
  422c57:	sti    
  422c58:	in     al,dx
  422c59:	ret    0x86ed
  422c5c:	cmp    ch,ch
  422c5e:	mov    BYTE PTR [edx],bh
  422c60:	sub    BYTE PTR [edx+0x63],0xfc
  422c64:	sub    BYTE PTR [edx-0x1c],0xb4
  422c68:	scas   al,BYTE PTR es:[edi]
  422c69:	fsubr  st,st(5)
  422c6b:	test   DWORD PTR [edi],ebp
  422c6d:	fiadd  DWORD PTR [eax-0x27f61b02]
  422c73:	in     eax,dx
  422c74:	test   edi,edi
  422c76:	fimul  DWORD PTR [esi-0x1b8ff212]
  422c7c:	out    dx,al
  422c7d:	mov    cs,WORD PTR [ebp+ecx*1-0x5549bc90]
  422c84:	(bad)  
  422c85:	leave  
  422c86:	bound  esi,QWORD PTR [edx-0x367902f3]
  422c8c:	or     al,0x8d
  422c8e:	(bad)  
  422c8f:	xlat   BYTE PTR ds:[ebx]
  422c90:	adc    eax,0x9faeab9d
  422c95:	scas   al,BYTE PTR es:[edi]
  422c96:	lahf   
  422c97:	dec    ebp
  422c98:	push   ebp
  422c99:	xor    eax,0xb5f1aa96
  422c9e:	outs   dx,DWORD PTR ds:[esi]
  422c9f:	lea    ecx,[ebp-0x2c3b7272]
  422ca5:	bound  edx,QWORD PTR [ecx-0x7e7902f3]
  422cab:	or     al,0x8d
  422cad:	(bad)  
  422cae:	xlat   BYTE PTR ds:[ebx]
  422caf:	dec    ecx
  422cb0:	bound  eax,QWORD PTR ds:0x1786fd0d
  422cb6:	or     al,0x8d
  422cb8:	(bad)  
  422cb9:	xlat   BYTE PTR ds:[ebx]
  422cba:	xchg   ebx,eax
  422cbb:	popf   
  422cbc:	mov    WORD PTR gs:[edx+0x30],fs
  422cc0:	in     al,0xc
  422cc2:	(bad)  
  422cc3:	dec    DWORD PTR [edx]
  422cc5:	adc    bh,0x8a
  422cc8:	inc    ebx
  422cc9:	xlat   BYTE PTR ds:[ebx]
  422cca:	and    DWORD PTR [ebx-0x29],0x35
  422cce:	or     edx,ebp
  422cd0:	mov    dh,0x3a
  422cd2:	lea    ecx,[ebp-0x75187fba]
  422cd8:	cmc    
  422cd9:	mov    esi,0x8d8d3adc
  422cde:	bound  eax,QWORD PTR [edx-0x72c5347a]
  422ce4:	lea    eax,[eax+0x23d582d7]
  422cea:	(bad)  
  422ceb:	stc    
  422cec:	xchg   BYTE PTR [eax],cl
  422cee:	cmp    cl,BYTE PTR [ebp+0x7ad7808d]
  422cf4:	aad    0x30
  422cf6:	adc    bh,0xf7
  422cf9:	xor    al,0x7a
  422cfc:	push   eax
  422cfd:	lock test DWORD PTR [eax-0xfaf7d10],0x83f0807a
  422d08:	push   eax
  422d09:	lock adc BYTE PTR [eax-0x29],0x83
  422d0e:	popf   
  422d0f:	stos   DWORD PTR es:[edi],eax
  422d10:	lahf   
  422d11:	icebp  
  422d12:	mov    ebp,0x8e8d8da6
  422d17:	out    dx,eax
  422d18:	in     al,dx
  422d19:	pushf  
  422d1a:	stos   BYTE PTR es:[edi],al
  422d1b:	fwait
  422d1c:	mov    WORD PTR gs:[edi-0x11f31b4e],cs
  422d23:	in     al,dx
  422d24:	or     al,BYTE PTR [eax-0x5795039]
  422d2a:	cmp    cl,BYTE PTR [ebp-0x7fea2873]
  422d30:	ja     0x422cb8
  422d32:	and    bh,0xaf
  422d35:	mov    dl,0x84
  422d37:	in     al,dx
  422d38:	inc    ebx
  422d39:	jo     0x422d1d
  422d3b:	out    dx,eax
  422d3c:	test   eax,0xee7be501
  422d41:	les    edx,FWORD PTR [edi-0x80]
  422d44:	(bad)  
  422d45:	scas   eax,DWORD PTR es:[edi]
  422d46:	in     eax,dx
  422d47:	js     0x422d55
  422d49:	xchg   BYTE PTR [eax],ch
  422d4b:	cmp    cl,BYTE PTR [ebp-0x7fe22873]
  422d51:	ja     0x422cd9
  422d53:	and    bh,0xaf
  422d56:	mov    dl,0x84
  422d58:	in     al,dx
  422d59:	loop   0x422d4a
  422d5b:	lahf   
  422d5c:	loop   0x422d4d
  422d5e:	test   eax,0xee7b6601
  422d63:	cmp    cl,BYTE PTR [ebp+0x6c71c48d]
  422d69:	out    dx,al
  422d6a:	or     al,0x8d
  422d6c:	(bad)  
  422d6d:	in     al,dx
  422d6e:	out    0xaf,eax
  422d70:	loop   0x422de3
  422d72:	lahf   
  422d73:	cli    
  422d74:	lea    edi,[edx]
  422d76:	lea    ecx,[ebp+0x43f9f050]
  422d7c:	push   0x6d
  422d7e:	and    BYTE PTR [ecx-0x7a],0xbd
  422d82:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422d88:	push   ecx
  422d89:	in     al,0xc6
  422d8b:	cmp    dh,al
  422d8d:	stc    
  422d8e:	in     eax,dx
  422d8f:	out    0x76,eax
  422d91:	out    dx,al
  422d92:	or     ebp,ebp
  422d94:	bound  ecx,QWORD PTR [ebp+0x77ed8d8d]
  422d9a:	jbe    0x422d28
  422d9c:	xor    al,0xf9
  422d9f:	in     eax,dx
  422da0:	retf   
  422da1:	out    dx,al
  422da2:	in     al,0xec
  422da4:	loop   0x422d92
  422da6:	lahf   
  422da7:	and    bh,0xfd
  422daa:	mov    dl,0xba
  422dac:	outs   dx,DWORD PTR ds:[esi]
  422dad:	inc    ebx
  422dae:	push   0x6d
  422db0:	loop   0x422e1f
  422db2:	test   eax,0xadc96601
  422db7:	in     al,dx
  422db8:	lea    ecx,[ebp+0x45866180]
  422dbe:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422dc4:	push   ecx
  422dc5:	in     al,0xc6
  422dc7:	push   eax
  422dc8:	lock xchg BYTE PTR [eax-0x10],dl
  422dcc:	sub    ebp,0xffffffcb
  422dcf:	out    dx,al
  422dd0:	in     al,0xd3
  422dd2:	add    BYTE PTR ds:0x3a83b7ed,0xb6
  422dd9:	mov    ch,ch
  422ddb:	lock or DWORD PTR [ecx+esi*4],0xffffffed
  422de0:	retf   
  422de1:	mov    eax,ds:0x225e1fd3
  422de6:	or     al,0x8d
  422de8:	lea    eax,[ebx-0x4e]
  422deb:	adc    BYTE PTR [ecx+0x72],0xb7
  422def:	sub    esp,0x77
  422df2:	xor    DWORD PTR [esi-0x288137c],0x50
  422df9:	ja     0x422daa
  422dfb:	les    eax,FWORD PTR [edi-0x13]
  422dfe:	mov    dh,ch
  422e00:	xchg   BYTE PTR [eax],bh
  422e02:	lea    ecx,[ebp-0x493b4973]
  422e08:	mov    bh,0x83
  422e0a:	pop    edi
  422e0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e0c:	test   ah,ah
  422e0e:	outs   dx,DWORD PTR ds:[esi]
  422e0f:	dec    ebp
  422e10:	ja     0x422d95
  422e12:	aas    
  422e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e14:	test   BYTE PTR [ecx+0x755e86d7],dh
  422e1a:	outs   dx,DWORD PTR ds:[esi]
  422e1b:	lea    ecx,[ebp+0x50fd77ec]
  422e21:	ja     0x422dd2
  422e23:	mov    dl,0xb7
  422e25:	sub    esi,0xffffffe2
  422e28:	out    dx,al
  422e29:	test   eax,0x807b4d43
  422e2e:	jl     0x422db0
  422e30:	(bad)  
  422e31:	scas   eax,DWORD PTR es:[edi]
  422e32:	xchg   al,ah
  422e34:	lea    ecx,[ebp-0x2ac5c173]
  422e3a:	in     al,dx
  422e3b:	xor    bh,ah
  422e3d:	xor    DWORD PTR [esi-0x78284e44],0xffffffc4
  422e44:	lea    ecx,[ebp+0x77]
  422e47:	add    DWORD PTR [eax-0x4d120610],0xc
  422e4e:	and    bh,0x8a
  422e51:	cmp    BYTE PTR [ebx+eax*2+0x77],0x35
  422e56:	pop    edi
  422e57:	ja     0x422ddc
  422e59:	fcmovnu st,st(2)
  422e5b:	or     BYTE PTR [ebx+0x43],0xd7
  422e5f:	add    DWORD PTR [eax-0xab9c269],0x63
  422e66:	test   ebx,edx
  422e68:	in     al,dx
  422e69:	jg     0x422e42
  422e6b:	dec    ebx
  422e6c:	push   eax
  422e6d:	out    0x8a,eax
  422e6f:	or     eax,esp
  422e71:	xor    ah,BYTE PTR [ebx-0x19]
  422e74:	cmp    eax,0xccaaea09
  422e79:	dec    ebp
  422e7a:	dec    ebp
  422e7b:	xchg   dl,dl
  422e7d:	lea    ecx,[ebp+0x16a438d]
  422e83:	lds    esi,FWORD PTR ds:0x2d978065
  422e89:	adc    bh,0x8b
  422e8c:	inc    ebx
  422e8d:	xlat   BYTE PTR ds:[ebx]
  422e8e:	sbb    eax,0x9780d450
  422e93:	inc    ebp
  422e94:	and    bh,0x8a
  422e97:	inc    ebx
  422e98:	out    0x35,eax
  422e9a:	push   eax
  422e9b:	(bad)  
  422e9c:	jo     0x422e41
  422e9e:	test   eax,0x8d25fbab
  422ea3:	test   eax,0x6d6a439d
  422ea8:	les    eax,FWORD PTR [edx-0x7272f95e]
  422eae:	lea    edi,[edx]
  422eb0:	in     al,0x3a
  422eb2:	je     0x422e66
  422eb4:	mov    ah,0xef
  422eb6:	cdq    
  422eb7:	adc    bh,0x8b
  422eba:	arpl   di,dx
  422ebc:	and    eax,0x7780f9d3
  422ec1:	test   BYTE PTR [edx+0x5046ef84],dh
  422ec7:	ja     0x422e4d
  422ec9:	push   eax
  422eca:	xlat   BYTE PTR ds:[ebx]
  422ecb:	mov    ebp,DWORD PTR [ecx+0x76f08074]
  422ed1:	or     eax,esp
  422ed3:	push   0xffffffb2
  422ed5:	mov    edx,0x8677ecee
  422eda:	in     al,dx
  422edb:	mov    dl,0xc4
  422edd:	outs   dx,DWORD PTR ds:[esi]
  422ede:	or     eax,esp
  422ee0:	push   0xffffffec
  422ee2:	ja     0x422f5a
  422ee4:	add    bh,0xfd
  422ee7:	add    ebp,eax
  422ee9:	ja     0x422e78
  422eeb:	inc    ebx
  422eec:	push   0x1
  422eee:	lds    esi,FWORD PTR [edi-0x73]
  422ef1:	mov    ds:0x8d8d8d06,al
  422ef6:	cmp    dl,bl
  422ef8:	and    eax,0x5d353180
  422efd:	mov    dl,0xb5
  422eff:	xor    eax,0x3163ef2d
  422f04:	xor    eax,0x8f26d3a5
  422f09:	push   cs
  422f0a:	dec    ebp
  422f0b:	jne    0x422f42
  422f0d:	pop    ebp
  422f0e:	mov    dl,0xb4
  422f10:	out    dx,eax
  422f11:	adc    BYTE PTR [ebp+0x11802d35],dl
  422f17:	or     DWORD PTR [edi+edx*4-0x73],ebx
  422f1b:	mov    dl,0xbe
  422f1d:	dec    DWORD PTR [ecx]
  422f1f:	and    bh,dh
  422f21:	pop    edi
  422f22:	xor    DWORD PTR ds:0x801bd32d,esi
  422f28:	mov    al,ds:0x8def8d60
  422f2d:	lea    eax,[ebx-0x2]
  422f30:	mov    dl,0xbe
  422f32:	das    
  422f33:	mov    ecx,0xec8df03a
  422f38:	push   0x1
  422f3a:	lds    esi,FWORD PTR ds:0x7b2746d
  422f40:	das    
  422f41:	aas    
  422f42:	xor    DWORD PTR ds:0xb9a0432d,esi
  422f48:	aas    
  422f49:	xchg   edi,eax
  422f4a:	(bad)  
  422f4b:	in     al,dx
  422f4c:	push   0xffffffed
  422f4e:	push   0x3a
  422f50:	add    ebp,eax
  422f52:	xor    eax,0x8099746d
  422f57:	sub    al,BYTE PTR [esi+0x4d4d069c]
  422f5d:	sbb    BYTE PTR [eax+eax*4+0x6ffc51],0x86
  422f65:	repnz push es
  422f67:	dec    ebp
  422f68:	dec    ebp
  422f69:	cdq    
  422f6a:	sub    BYTE PTR [edx],0xfc
  422f6d:	jns    0x422f9e
  422f6f:	stos   DWORD PTR es:[edi],eax
  422f70:	xchg   BYTE PTR [ebx-0x66b2b2fa],dh
  422f76:	cld    
  422f77:	jns    0x422fe8
  422f79:	mov    ds:0x4d063986,eax
  422f7e:	dec    ebp
  422f7f:	cld    
  422f80:	jns    0x422f8e
  422f82:	cdq    
  422f83:	cmp    BYTE PTR [esi-0x42],0xc4
  422f87:	test   DWORD PTR [ebp+0x4d],ecx
  422f8a:	xchg   edi,eax
  422f8b:	add    BYTE PTR [edi+0x3a4587a2],0x8d
  422f92:	lea    edi,[edi+esi*2-0x75]
  422f96:	mul    BYTE PTR [edi+ebp*2]
  422f99:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  422f9d:	cmc    
  422f9e:	and    al,0x6f
  422fa0:	cmp    BYTE PTR [eax+0x7750ef77],al
  422fa6:	out    dx,eax
  422fa7:	xor    BYTE PTR [edi-0x75],0x80
  422fab:	xchg   edi,eax
  422fac:	mov    edx,DWORD PTR [ebx+0xde29b99]
  422fb2:	lahf   
  422fb3:	push   ebx
  422fb4:	mov    dh,0xb2
  422fb6:	clc    
  422fb7:	sub    DWORD PTR [edx+eiz*1+0x24],esp
  422fbb:	outs   dx,DWORD PTR ds:[esi]
  422fbc:	cmp    BYTE PTR [ebx+0x74],dl
  422fbf:	mov    dl,0x86
  422fc1:	or     al,0xff
  422fc3:	sti    
  422fc4:	push   eax
  422fc5:	ja     0x42303d
  422fc7:	xor    BYTE PTR [edi-0x75],0x80
  422fcb:	xchg   edi,eax
  422fcc:	mov    edx,DWORD PTR [ebx+0x74]
  422fcf:	mov    dl,0x86
  422fd1:	or     al,0x53
  422fd3:	mov    dh,0xb2
  422fd5:	clc    
  422fd6:	sub    edi,edi
  422fd8:	sti    
  422fd9:	push   eax
  422fda:	ja     0x422f66
  422fdc:	xor    BYTE PTR [edi-0x75],0x80
  422fe0:	xchg   edi,eax
  422fe1:	mov    edx,DWORD PTR [ebx+0x74]
  422fe4:	mov    dl,0x86
  422fe6:	or     al,0x53
  422fe8:	mov    dh,0xb2
  422fea:	clc    
  422feb:	sub    edi,edi
  422fed:	sti    
  422fee:	push   eax
  422fef:	ja     0x423053
  422ff1:	xor    BYTE PTR [edi-0x75],0x80
  422ff5:	xchg   edi,eax
  422ff6:	mov    edx,DWORD PTR [ebx+0x74]
  422ff9:	mov    dl,0x86
  422ffb:	or     al,0x53
  422ffd:	mov    dh,0xb2
  422fff:	clc    
  423000:	sub    edi,edi
  423002:	sti    
  423003:	push   eax
  423004:	ja     0x422f8c
  423006:	jl     0x42307f
  423008:	mul    BYTE PTR cs:[esi+ebp*8]
  42300c:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  423010:	mul    BYTE PTR [ebx+0x777c386f]
  423016:	es cli 
  423018:	and    al,0x6f
  42301a:	cmp    dl,ah
  42301c:	cmp    eax,0x6277509d
  423021:	push   eax
  423022:	ja     0x423086
  423024:	loop   0x422fe3
  423026:	popf   
  423027:	push   eax
  423028:	ja     0x42308c
  42302a:	push   eax
  42302b:	ja     0x42308f
  42302d:	jl     0x4230a6
  42302f:	bound  ecx,QWORD PTR [edx]
  423031:	lea    ecx,[ebp+0x62777c8d]
  423037:	jns    0x422fc6
  423039:	lea    ecx,[ebp-0x7f748880]
  42303f:	xchg   edi,eax
  423040:	mov    edx,DWORD PTR [ebx+0x74]
  423043:	push   ebx
  423044:	mov    dh,0xb2
  423046:	xchg   BYTE PTR [edx+esi*4],cl
  423049:	clc    
  42304a:	sub    edi,edi
  42304c:	sti    
  42304d:	push   eax
  42304e:	ja     0x4230b2
  423050:	xor    BYTE PTR [edi-0x75],0x80
  423054:	xchg   edi,eax
  423055:	mov    edx,DWORD PTR [ebx+0x74]
  423058:	push   ebx
  423059:	mov    dh,0xb2
  42305b:	xchg   BYTE PTR [edx+esi*4],cl
  42305e:	clc    
  42305f:	sub    edi,edi
  423061:	sti    
  423062:	push   eax
  423063:	ja     0x4230c7
  423065:	jl     0x4230de
  423067:	jp     0x42300c
  423069:	or     al,0x8d
  42306b:	lea    edi,[edi+esi*2-0x7c]
  42306f:	pop    edi
  423070:	lea    ecx,[ebp-0x50888373]
  423076:	out    0x8d,eax
  423078:	lea    ecx,[ebp+0xdc86801]
  42307e:	dec    ebp
  42307f:	dec    ebp
  423080:	add    DWORD PTR [eax+0x7a],ebx
  423083:	or     eax,0xfe864d4d
  423088:	or     eax,0xf04d4d4d
  42308d:	scas   eax,DWORD PTR es:[edi]
  42308e:	xlat   BYTE PTR ds:[ebx]
  42308f:	pop    es
  423090:	dec    ebp
  423091:	lock test bh,dl
  423094:	add    al,0x4d
  423096:	lock jp 0x423070
  423099:	jb     0x423117
  42309b:	ja     0x423021
  42309d:	mov    eax,ds:0x808d8d6d
  4230a2:	ja     0x42302f
  4230a4:	xor    al,0x8b
  4230a7:	push   ebx
  4230a8:	je     0x42305c
  4230aa:	xchg   BYTE PTR [edx+eiz*8],cl
  4230ad:	or     eax,0xb25153a9
  4230b2:	mov    edx,0x50b2ff29
  4230b7:	ja     0x423123
  4230b9:	xor    BYTE PTR [edi-0x75],0x80
  4230bd:	lock mov ebp,ebp
  4230c0:	mov    bh,0xc8
  4230c2:	lea    edx,[ebx+0x74]
  4230c5:	mov    dl,0x86
  4230c7:	or     al,0x53
  4230c9:	push   ecx
  4230ca:	mov    dl,0xba
  4230cc:	sub    edi,edi
  4230ce:	mov    dl,0x50
  4230d0:	ja     0x42314c
  4230d2:	mov    ch,0x4a
  4230d4:	sbb    eax,0x508d8d8d
  4230d9:	ja     0x4230a3
  4230db:	sub    BYTE PTR [ebp-0x7f],0x50
  4230df:	ja     0x423068
  4230e1:	sub    BYTE PTR [ebp+0x21],0x50
  4230e5:	ja     0x423119
  4230e7:	xor    BYTE PTR [edi-0x11],0x1
  4230eb:	lock enter 0x1050,0x62
  4230f0:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  4230f6:	add    eax,esi
  4230f8:	xchg   DWORD PTR [eax+0x10],edx
  4230fb:	push   esi
  4230fc:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  423102:	dec    ebp
  423103:	xlat   BYTE PTR ds:[ebx]
  423104:	out    dx,eax
  423105:	add    eax,esi
  423107:	xor    dl,BYTE PTR [eax+0x10]
  42310a:	pop    esi
  42310b:	cmp    cl,BYTE PTR [ebp+0x3fba868d]
  423111:	lea    ecx,[ebp-0x7f740f80]
  423117:	xchg   edi,eax
  423118:	mov    edx,DWORD PTR [ebx+0x11]
  42311b:	push   ebx
  42311c:	jle    0x4230d0
  42311e:	mov    esi,0x29f8b20c
  423123:	(bad)  
  423124:	(bad)  
  423125:	arpl   bp,di
  423127:	or     DWORD PTR [edi],ecx
  423129:	(bad)  
  42312a:	in     al,dx
  42312b:	lea    ecx,[ebp-0x7f108880]
  423131:	int    0x36
  423133:	cmp    cl,BYTE PTR [ebp-0x7f107f73]
  423139:	ja     0x42312a
  42313b:	or     ch,0x36
  42313e:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  423144:	xchg   edx,eax
  423145:	gs xor al,0xef
  423149:	adc    BYTE PTR [eax+0x32],0x3a
  42314d:	lea    ecx,[ebp+0x4d151801]
  423153:	dec    ebp
  423154:	dec    ebp
  423155:	stos   BYTE PTR es:[edi],al
  423156:	adc    BYTE PTR [edi+0x26d180ef],0x3a
  42315d:	lea    ecx,[ebp+0x5aec9080]
  423163:	adc    BYTE PTR [ebp-0x111d7273],cl
  423169:	dec    ebp
  42316a:	bound  eax,QWORD PTR [ecx-0x73]
  42316d:	lea    ecx,[ebp+0x25964daa]
  423173:	push   ebx
  423174:	push   0x7c
  423176:	dec    edi
  423177:	push   ebp
  423178:	dec    ebp
  423179:	dec    ebp
  42317a:	dec    ebp
  42317b:	outs   dx,BYTE PTR ds:[esi]
  42317c:	mov    ds:0x4f7c0a43,eax
  423181:	pop    ebp
  423182:	dec    ebp
  423183:	dec    ebp
  423184:	dec    ebp
  423185:	jg     0x423135
  423187:	push   ebp
  423188:	fwait
  423189:	jl     0x4231da
  42318b:	gs dec ebp
  42318d:	dec    ebp
  42318e:	dec    ebp
  42318f:	stos   DWORD PTR es:[edi],eax
  423190:	lock scas al,BYTE PTR es:[edi]
  423192:	aas    
  423193:	cld    
  423194:	dec    edi
  423195:	ins    DWORD PTR es:[edi],dx
  423196:	dec    ebp
  423197:	dec    ebp
  423198:	dec    ebp
  423199:	xchg   BYTE PTR [ecx],al
  42319b:	push   0x4d4d4d92
  4231a0:	inc    esp
  4231a1:	mov    ecx,0x6a53f544
  4231a6:	jl     0x4231f7
  4231a8:	sub    eax,0x6e4d4d4d
  4231ad:	mov    ds:0x4f7c0a43,eax
  4231b2:	xor    eax,0x7f4d4d4d
  4231b7:	scas   al,BYTE PTR es:[edi]
  4231b8:	push   ebp
  4231b9:	fwait
  4231ba:	jl     0x42320b
  4231bc:	cmp    eax,0xab4d4d4d
  4231c1:	lock scas al,BYTE PTR es:[edi]
  4231c3:	imul   edi,esp,0x4f
  4231c6:	inc    ebp
  4231c7:	dec    ebp
  4231c8:	dec    ebp
  4231c9:	dec    ebp
  4231ca:	xchg   BYTE PTR [ecx],al
  4231cc:	push   0x4d4d4d47
  4231d1:	inc    esp
  4231d2:	mov    ecx,0x7780f544
  4231d7:	out    dx,eax
  4231d8:	or     ch,0x32
  4231db:	cmp    cl,BYTE PTR [ebp-0x10187f73]
  4231e1:	in     eax,dx
  4231e2:	push   0x71
  4231e4:	push   eax
  4231e5:	ja     0x42321d
  4231e7:	xor    BYTE PTR [edi-0x11],0x80
  4231eb:	int    0xfd
  4231ed:	cmp    cl,BYTE PTR [ebp-0x32888373]
  4231f3:	xchg   ebp,eax
  4231f4:	mov    ds:0x777caea5,eax
  4231f9:	lldt   WORD PTR [edi+0x7cb9969d]
  423200:	ja     0x423212
  423202:	aas    
  423203:	xchg   BYTE PTR [edi+ecx*2-0x3b],bh
  423207:	dec    ebp
  423208:	dec    ebp
  423209:	dec    ebp
  42320a:	outs   dx,BYTE PTR ds:[esi]
  42320b:	mov    ds:0x4f7c0a43,eax
  423210:	push   edx
  423211:	dec    ebp
  423212:	dec    ebp
  423213:	dec    ebp
  423214:	jg     0x4231c4
  423216:	aas    
  423217:	xchg   ebp,eax
  423218:	jl     0x423269
  42321a:	aad    0x4d
  42321c:	dec    ebp
  42321d:	dec    ebp
  42321e:	popf   
  42321f:	or     bh,BYTE PTR [edi+0x59]
  423222:	jl     0x423273
  423224:	fisttp QWORD PTR [ebp+0x4d]
  423227:	dec    ebp
  423228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423229:	xchg   edi,eax
  42322a:	lock scas al,BYTE PTR es:[edi]
  42322c:	jl     0x42327d
  42322e:	in     eax,0x4d
  423230:	dec    ebp
  423231:	dec    ebp
  423232:	xchg   esi,eax
  423233:	add    BYTE PTR [edi],bh
  423235:	xchg   BYTE PTR [edi+ecx*2-0x63],bh
  423239:	dec    ebp
  42323a:	dec    ebp
  42323b:	dec    ebp
  42323c:	outs   dx,BYTE PTR ds:[esi]
  42323d:	mov    ds:0x4f7c0a43,eax
  423242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423243:	dec    ebp
  423244:	dec    ebp
  423245:	dec    ebp
  423246:	jg     0x4231f6
  423248:	aas    
  423249:	xchg   ebp,eax
  42324a:	jl     0x42329b
  42324c:	lods   eax,DWORD PTR ds:[esi]
  42324d:	dec    ebp
  42324e:	dec    ebp
  42324f:	dec    ebp
  423250:	popf   
  423251:	or     bh,BYTE PTR [edi+0x59]
  423254:	jl     0x4232a5
  423256:	mov    ch,0x4d
  423258:	dec    ebp
  423259:	dec    ebp
  42325a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42325b:	xchg   edi,eax
  42325c:	lock scas al,BYTE PTR es:[edi]
  42325e:	jl     0x4232af
  423260:	mov    ebp,0x964d4d4d
  423265:	add    BYTE PTR [ebx-0x7a],ch
  423268:	xchg   BYTE PTR [edx+0x3d],ah
  42326b:	lea    ecx,[ebp+0x3677800a]
  423271:	dec    ebp
  423272:	jno    0x4231f4
  423274:	ja     0x423201
  423276:	xor    al,0x8b
  423279:	push   ebx
  42327a:	je     0x4232cf
  42327c:	push   ecx
  42327d:	mov    dl,0xba
  42327f:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423285:	xor    al,0x84
  423288:	arpl   WORD PTR [edx+0x3aca0f09],si
  42328e:	lea    ecx,[ebp-0x7f068880]
  423294:	lock stc 
  423296:	push   ebx
  423297:	je     0x4232ec
  423299:	push   ecx
  42329a:	mov    dl,0xba
  42329c:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4232a2:	xor    al,0x84
  4232a5:	inc    ebx
  4232a6:	std    
  4232a7:	xor    BYTE PTR [edi+0x6a],0x63
  4232ab:	mov    dl,0x9
  4232ad:	into   
  4232ae:	xchg   esp,eax
  4232af:	cmp    cl,BYTE PTR [ebp+0x3e777c8d]
  4232b5:	lea    ecx,[ebp+0x77808d8d]
  4232bb:	out    dx,eax
  4232bc:	and    BYTE PTR [edx+0x32],0x3a
  4232c0:	lea    ecx,[ebp-0x7f101880]
  4232c6:	ja     0x4232b7
  4232c8:	or     ch,0x76
  4232cb:	cmp    cl,BYTE PTR [ebp+0x3dda868d]
  4232d1:	lea    ecx,[ebp+0x71994d0a]
  4232d7:	xor    al,0xef
  4232da:	adc    BYTE PTR [eax+0x46],0x3a
  4232de:	lea    ecx,[ebp+0x77803a50]
  4232e4:	out    dx,eax
  4232e5:	sbb    BYTE PTR [esi+0x32],0x3a
  4232e9:	lea    ecx,[ebp+0x53efd780]
  4232ef:	push   0x1
  4232f1:	sbb    BYTE PTR [ebp-0x79b2b2b3],bl
  4232f7:	fwait
  4232f8:	cmp    eax,0x800a8d8d
  4232fd:	ja     0x4232ee
  4232ff:	or     ch,0x46
  423302:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  423308:	fwait
  423309:	out    dx,eax
  42330a:	push   eax
  42330b:	ja     0x423323
  42330d:	xor    BYTE PTR [edi-0x11],0x80
  423311:	pop    esi
  423312:	xor    bh,BYTE PTR [edx]
  423314:	lea    ecx,[ebp+0x53efd780]
  42331a:	push   0x1
  42331c:	sbb    ch,al
  42331e:	dec    ebp
  42331f:	dec    ebp
  423320:	dec    ebp
  423321:	xchg   BYTE PTR [ebp+0x3d],al
  423324:	lea    ecx,[ebp-0x10887ff6]
  42332a:	or     ch,0x46
  42332d:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  423333:	fwait
  423334:	out    dx,eax
  423335:	xor    BYTE PTR [edi-0x11],0x80
  423339:	pop    esi
  42333a:	xor    bh,BYTE PTR [edx]
  42333c:	lea    ecx,[ebp+0x53efd780]
  423342:	push   0x1
  423344:	sbb    BYTE PTR [ebp+0x4d],dl
  423347:	dec    ebp
  423348:	dec    ebp
  423349:	xchg   dh,ch
  42334b:	cmp    eax,0x800a8d8d
  423350:	ja     0x423341
  423352:	or     ch,0x46
  423355:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  42335b:	fwait
  42335c:	out    dx,eax
  42335d:	in     eax,dx
  42335e:	mov    bh,0x5e
  423360:	lea    edx,[eax+0x77]
  423363:	xor    BYTE PTR ss:[edi+0x5e],0xe2
  423368:	pop    ds
  423369:	push   ebx
  42336a:	jb     0x42330b
  42336c:	dec    ebx
  42336d:	add    eax,0x992fbcd
  423372:	loopne 0x42336f
  423374:	or     cl,BYTE PTR [ebp-0x69]
  423377:	ss dec edi
  423379:	push   0xffffffd7
  42337b:	arpl   WORD PTR [eax-0x7b12a189],ax
  423381:	mov    ebp,gs
  423383:	push   0x6e
  423385:	or     cl,BYTE PTR [ebp-0x69]
  423388:	push   ss
  423389:	dec    edi
  42338a:	push   0xffffffd5
  42338c:	rol    BYTE PTR [eax+0x5e80ef77],cl
  423392:	xor    bh,BYTE PTR [edx]
  423394:	lea    ecx,[ebp+0x53efd780]
  42339a:	push   0x1
  42339c:	xchg   edi,eax
  42339d:	int    0x86
  42339f:	and    bh,BYTE PTR [ebx]
  4233a1:	lea    ecx,[ebp-0x10887ff6]
  4233a7:	or     ch,0x3e
  4233aa:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4233b0:	fwait
  4233b1:	out    dx,eax
  4233b2:	push   eax
  4233b3:	ja     0x423364
  4233b5:	(bad)  
  4233b6:	out    dx,al
  4233b7:	in     eax,dx
  4233b8:	mov    bh,0xaf
  4233ba:	lea    ecx,[ebp+0x77]
  4233bd:	pop    esi
  4233be:	in     eax,dx
  4233bf:	out    0x5e,eax
  4233c1:	sub    eax,0x77802ee4
  4233c6:	stc    
  4233c7:	xor    al,0xf9
  4233ca:	adc    bh,0xef
  4233cd:	loop   0x4233dc
  4233cf:	stos   DWORD PTR es:[edi],eax
  4233d0:	push   ebx
  4233d1:	je     0x423426
  4233d3:	sub    dh,BYTE PTR [edx-0x454df37a]
  4233d9:	sub    edi,edi
  4233db:	mov    dl,0x1
  4233dd:	sbb    al,cl
  4233df:	or     eax,0xc3864d4d
  4233e4:	cmp    ecx,DWORD PTR [ebp+0x77800a8d]
  4233ea:	mov    eax,DWORD PTR [eax-0x287f7410]
  4233f0:	out    dx,eax
  4233f1:	push   ebx
  4233f2:	je     0x423447
  4233f4:	sub    dh,BYTE PTR [edx-0x454df37a]
  4233fa:	sub    edi,edi
  4233fc:	mov    dl,0x1
  4233fe:	sbb    BYTE PTR [edx+0xd],bh
  423401:	dec    ebp
  423402:	dec    ebp
  423403:	xchg   dl,bl
  423405:	cmp    ecx,DWORD PTR [ebp-0x68b2f573]
  42340b:	scas   eax,DWORD PTR es:[edi]
  42340c:	xor    al,0x8b
  42340f:	adc    BYTE PTR [edi+0x5311538b],0x9c
  423416:	mov    dl,0xbe
  423418:	or     al,0xb2
  42341a:	clc    
  42341b:	sub    edi,edi
  42341d:	(bad)  
  42341e:	arpl   bp,di
  423420:	xlat   BYTE PTR ds:[ebx]
  423421:	mov    WORD PTR [edi+esi*2+0x3e],?
  423425:	cmp    cl,BYTE PTR [ebp+0x77808d8d]
  42342b:	stc    
  42342c:	xor    al,0xf9
  42342f:	push   ebx
  423430:	je     0x4233e4
  423432:	xchg   BYTE PTR [ebx+edx*2],cl
  423435:	sub    dh,BYTE PTR [edx-0x4d00d646]
  42343b:	in     al,dx
  42343c:	ja     0x4234a8
  42343e:	push   eax
  42343f:	ja     0x4234ab
  423441:	xor    BYTE PTR [edi+0x3e],0x4f
  423445:	push   0xffffffd5
  423447:	sbb    eax,0x80f97780
  42344c:	lock stc 
  42344e:	push   ebx
  42344f:	je     0x4234a4
  423451:	sub    dh,BYTE PTR [edx-0x454df37a]
  423457:	sub    edi,edi
  423459:	mov    dl,0xec
  42345b:	ja     0x4234d7
  42345d:	push   eax
  42345e:	ja     0x4234da
  423460:	xor    BYTE PTR [edi-0x7],0x80
  423464:	lock stc 
  423466:	push   ebx
  423467:	je     0x4234bc
  423469:	sub    dh,BYTE PTR [edx-0x794dd646]
  42346f:	or     al,0xff
  423471:	mov    dl,0x80
  423473:	lock test BYTE PTR [ebx-0x3],al
  423477:	xor    BYTE PTR [edi+0x6a],0x63
  42347b:	mov    dl,0x9
  42347d:	dec    esp
  42347e:	or     DWORD PTR ds:0xde24d4d,0x7a7780a9
  423488:	xor    al,0x6a
  42348b:	arpl   bp,di
  42348d:	xlat   BYTE PTR ds:[ebx]
  42348e:	push   cs
  42348f:	dec    ebp
  423490:	xlat   BYTE PTR ds:[ebx]
  423491:	out    dx,eax
  423492:	add    DWORD PTR [edi-0x76],esi
  423495:	or     al,BYTE PTR [esi-0x7272809a]
  42349b:	push   eax
  42349c:	ja     0x423514
  42349e:	les    ebx,FWORD PTR [ebx]
  4234a0:	xor    BYTE PTR [edi+0x76],0x80
  4234a4:	lock stc 
  4234a6:	adc    BYTE PTR [edi+0x531153f9],0x7e
  4234ad:	mov    dl,0xbe
  4234af:	or     al,0xb2
  4234b1:	clc    
  4234b2:	sub    edi,edi
  4234b4:	(bad)  
  4234b5:	outs   dx,BYTE PTR ds:[esi]
  4234b6:	out    dx,eax
  4234b7:	xor    BYTE PTR [edi-0x75],0x80
  4234bb:	lock mov edx,DWORD PTR [ebx+0x74]
  4234bf:	push   ebx
  4234c0:	push   ecx
  4234c1:	mov    dl,0xba
  4234c3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4234c9:	xor    al,0x76
  4234cc:	arpl   WORD PTR [edx-0x33f0f7],si
  4234d2:	lea    ecx,[ebp-0x7f748880]
  4234d8:	lock mov edx,DWORD PTR [ebx+0x74]
  4234dc:	push   ebx
  4234dd:	push   ecx
  4234de:	mov    dl,0xba
  4234e0:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4234e6:	xor    al,0x8a
  4234e9:	arpl   WORD PTR [edx-0x7bf0f7],si
  4234ef:	lea    ecx,[ebp-0x7f748880]
  4234f5:	lock mov edx,DWORD PTR [ebx+0x74]
  4234f9:	push   ebx
  4234fa:	push   ecx
  4234fb:	mov    dl,0x86
  4234fd:	or     al,0xb2
  4234ff:	mov    edx,0xc4b2ff29
  423504:	adc    eax,0x80f9f080
  423509:	xchg   edi,eax
  42350a:	stc    
  42350b:	push   ebx
  42350c:	adc    DWORD PTR [ebx+0x7e],edx
  42350f:	mov    dl,0xbe
  423511:	or     al,0xb2
  423513:	clc    
  423514:	sub    edi,edi
  423516:	(bad)  
  423517:	in     al,dx
  423518:	mov    dl,0x80
  42351a:	lock mov ah,BYTE PTR [ebx-0x4e]
  42351e:	in     al,0xb8
  423520:	xor    BYTE PTR [edi-0x76],0x50
  423524:	ja     0x4234aa
  423526:	xor    BYTE PTR [edi+0x76],0x50
  42352a:	ja     0x42358e
  42352c:	ins    BYTE PTR es:[edi],dx
  42352d:	mul    BYTE PTR [edi+ebp*2]
  423530:	cmp    BYTE PTR [eax-0x19],dl
  423533:	inc    esi
  423534:	jl     0x4235ad
  423536:	xor    ch,0x24
  423539:	outs   dx,DWORD PTR ds:[esi]
  42353a:	cmp    BYTE PTR [eax-0xf7fb989],al
  423540:	inc    esi
  423541:	push   ebx
  423542:	je     0x423597
  423544:	push   ecx
  423545:	mov    dl,0x86
  423547:	or     al,0xb2
  423549:	mov    edx,0x50b2ff29
  42354e:	ja     0x4235a6
  423550:	xor    BYTE PTR [edi+0x46],0x80
  423554:	lock inc esi
  423556:	push   ebx
  423557:	je     0x4235ac
  423559:	push   ecx
  42355a:	mov    dl,0x86
  42355c:	or     al,0xb2
  42355e:	mov    edx,0x50b2ff29
  423563:	ja     0x4235df
  423565:	jl     0x4235de
  423567:	ds dec ecx
  423569:	and    al,0x6f
  42356b:	cmp    BYTE PTR [edi+esi*2+0x1e],bh
  42356f:	fisub  WORD PTR [edi+ebp*2]
  423572:	cmp    BYTE PTR [eax-0xf7fb989],al
  423578:	inc    esi
  423579:	push   ebx
  42357a:	je     0x4235cf
  42357c:	push   ecx
  42357d:	mov    dl,0xba
  42357f:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423585:	xor    al,0x84
  423588:	arpl   bp,di
  42358a:	or     DWORD PTR [edi],ecx
  42358c:	pop    ss
  42358d:	in     al,dx
  42358e:	lea    ecx,[ebp-0x72f35f42]
  423594:	lea    eax,[eax+0x77803ef0]
  42359a:	adc    BYTE PTR ds:[edi+0x53fc5356],0x11
  4235a2:	mov    dl,0x84
  4235a4:	sub    DWORD PTR [edx-0x200f342],esi
  4235aa:	xor    BYTE PTR [edi-0x7c],0x43
  4235ae:	sti    
  4235af:	push   ebx
  4235b0:	jb     0x4235fd
  4235b2:	add    eax,0x807a7750
  4235b7:	ja     0x4235d7
  4235b9:	xor    al,0x1e
  4235bc:	push   ebx
  4235bd:	je     0x423612
  4235bf:	push   ecx
  4235c0:	mov    dl,0xba
  4235c2:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4235c8:	xor    al,0x7a
  4235cb:	arpl   bp,di
  4235cd:	fst    DWORD PTR [edi]
  4235cf:	xor    BYTE PTR [edi+0x1e],0x80
  4235d3:	lock push ds
  4235d5:	push   ebx
  4235d6:	je     0x42362b
  4235d8:	push   ecx
  4235d9:	mov    dl,0x86
  4235db:	or     al,0xb2
  4235dd:	mov    edx,0x50b2ff29
  4235e2:	ja     0x42365e
  4235e4:	xor    BYTE PTR [edi+0x3e],0x80
  4235e8:	lock ds push ebx
  4235eb:	je     0x423640
  4235ed:	push   ecx
  4235ee:	mov    dl,0x86
  4235f0:	or     al,0xb2
  4235f2:	mov    edx,0x80b2ff29
  4235f7:	lock jp 0x423603
  4235fa:	and    dh,BYTE PTR [edx-0x7f8588b0]
  423600:	ja     0x423648
  423602:	xor    al,0x46
  423605:	push   ebx
  423606:	je     0x42365b
  423608:	push   ecx
  423609:	mov    dl,0xba
  42360b:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423611:	xor    al,0x7a
  423614:	arpl   bp,di
  423616:	or     DWORD PTR [edi],ecx
  423618:	(bad)  
  423619:	or     al,0x8d
  42361b:	lea    eax,[eax+0x77507a77]
  423621:	scas   eax,DWORD PTR es:[edi]
  423622:	xor    BYTE PTR [edi+0x56],0xec
  423626:	ja     0x42368a
  423628:	push   eax
  423629:	out    0x7a,eax
  42362b:	push   eax
  42362c:	ja     0x423698
  42362e:	pop    esi
  42362f:	cmc    
  423630:	and    al,0x6f
  423632:	cmp    BYTE PTR [eax+0x77],dl
  423635:	pop    esi
  423636:	jl     0x4236af
  423638:	push   ss
  423639:	hlt    
  42363a:	and    al,0x6f
  42363c:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  423640:	repz and al,0x6f
  423643:	cmp    BYTE PTR [eax+0x77],dl
  423646:	test   DWORD PTR [eax-0xf7f8589],0x5374537a
  423650:	push   ecx
  423651:	mov    dl,0x86
  423653:	or     al,0xb2
  423655:	mov    edx,0x50b2ff29
  42365a:	ja     0x423659
  42365c:	sub    BYTE PTR [edx-0x42],0x4f
  423660:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423666:	dec    edi
  423667:	or     cl,BYTE PTR [ebp+0x4d]
  42366a:	dec    ebp
  42366b:	jmp    0x7c6a:0x80386f24
  423672:	dec    edi
  423673:	xchg   ebp,eax
  423674:	dec    ebp
  423675:	dec    ebp
  423676:	dec    ebp
  423677:	or     esp,DWORD PTR [edi+ebp*2]
  42367a:	cmp    BYTE PTR [eax-0x7f957f96],al
  423680:	ja     0x423679
  423682:	xor    al,0xf7
  423685:	push   ebx
  423686:	je     0x4236db
  423688:	push   ecx
  423689:	mov    dl,0x86
  42368b:	or     al,0xb2
  42368d:	mov    edx,0x80b2ff29
  423692:	lock std 
  423694:	or     DWORD PTR [edx],esp
  423696:	mov    dl,0x80
  423698:	lock push 0xffffff8f
  42369b:	out    dx,al
  42369c:	out    dx,eax
  42369d:	adc    BYTE PTR [edi+0x4],dh
  4236a0:	sub    BYTE PTR [edx-0x80],0x77
  4236a4:	test   DWORD PTR [eax+0x5153f7f0],0xbab27453
  4236ae:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4236b4:	xor    al,0xfd
  4236b7:	or     DWORD PTR [edx],esp
  4236b9:	mov    dl,0x80
  4236bb:	lock push ss
  4236bd:	adc    BYTE PTR [edi+0x53115316],0x7e
  4236c4:	mov    dl,0xbe
  4236c6:	or     al,0xb2
  4236c8:	clc    
  4236c9:	sub    edi,edi
  4236cb:	(bad)  
  4236cc:	in     al,dx
  4236cd:	mov    dl,0x80
  4236cf:	lock push 0x9
  4236d2:	loopne 0x4236f5
  4236d4:	out    dx,eax
  4236d5:	or     BYTE PTR [edi+0xa],0x4d
  4236d9:	dec    ebp
  4236da:	dec    ebp
  4236db:	sbb    BYTE PTR [eax],0xa
  4236de:	dec    ebp
  4236df:	dec    ebp
  4236e0:	dec    ebp
  4236e1:	push   ebx
  4236e2:	je     0x423737
  4236e4:	jle    0x423698
  4236e6:	xchg   BYTE PTR [edx+esi*4],cl
  4236e9:	clc    
  4236ea:	sub    edi,edi
  4236ec:	sti    
  4236ed:	in     al,dx
  4236ee:	mov    dl,0x9
  4236f0:	loopne 0x4236e2
  4236f2:	add    al,0x53
  4236f4:	std    
  4236f5:	adc    al,dh
  4236f7:	add    al,0x80
  4236f9:	push   0xffffff8f
  4236fb:	ja     0x423701
  4236fd:	xor    al,0xf7
  423700:	adc    BYTE PTR [edi+0x531153f7],0x7e
  423707:	mov    dl,0xf8
  423709:	sub    DWORD PTR [edx-0x100f342],esi
  42370f:	adc    BYTE PTR [edi-0x1ddf603],0x80
  423716:	xchg   edi,eax
  423717:	push   0x10
  423719:	out    dx,al
  42371a:	push   cs
  42371b:	sub    BYTE PTR [edx-0x80],0x77
  42371f:	test   DWORD PTR [eax+0x7453f7f0],0x86b25153
  423729:	or     al,0xb2
  42372b:	mov    edx,0x80b2ff29
  423730:	lock std 
  423732:	or     DWORD PTR [edx],esp
  423734:	mov    dl,0x80
  423736:	lock push 0xffffff8f
  423739:	out    dx,al
  42373a:	out    dx,eax
  42373b:	adc    BYTE PTR [edi+0x4],dh
  42373e:	sub    BYTE PTR [edx-0x80],0x77
  423742:	test   DWORD PTR [eax+0x7453f7f0],0x530c86b2
  42374c:	push   ecx
  42374d:	mov    dl,0xba
  42374f:	sub    edi,edi
  423751:	mov    dl,0x80
  423753:	lock std 
  423755:	or     DWORD PTR [edx],esp
  423757:	mov    dl,0x80
  423759:	lock pop esi
  42375b:	adc    BYTE PTR [edi+0x5311535e],0x7e
  423762:	mov    dl,0xbe
  423764:	or     al,0xb2
  423766:	clc    
  423767:	sub    edi,edi
  423769:	(bad)  
  42376a:	in     al,dx
  42376b:	mov    dl,0x80
  42376d:	lock push 0x9
  423770:	loopne 0x423793
  423772:	out    dx,eax
  423773:	or     BYTE PTR [edi-0x6b],0x4d
  423777:	dec    ebp
  423778:	dec    ebp
  423779:	sbb    BYTE PTR [eax],0x95
  42377c:	dec    ebp
  42377d:	dec    ebp
  42377e:	dec    ebp
  42377f:	push   ebx
  423780:	je     0x4237d5
  423782:	jle    0x423736
  423784:	xchg   BYTE PTR [edx+esi*4],cl
  423787:	clc    
  423788:	sub    edi,edi
  42378a:	sti    
  42378b:	in     al,dx
  42378c:	mov    dl,0x9
  42378e:	loopne 0x423780
  423790:	add    al,0x53
  423792:	std    
  423793:	adc    al,dh
  423795:	add    al,0x80
  423797:	push   0xffffff8f
  423799:	ja     0x42379f
  42379b:	xor    al,0xf7
  42379e:	adc    BYTE PTR [edi+0x531153f7],0x7e
  4237a5:	mov    dl,0xf8
  4237a7:	sub    DWORD PTR [edx-0x100f342],esi
  4237ad:	adc    BYTE PTR [edi-0x1ddf603],0x80
  4237b4:	xchg   edi,eax
  4237b5:	push   0x10
  4237b7:	out    dx,al
  4237b8:	push   cs
  4237b9:	sub    BYTE PTR [edx-0x80],0x77
  4237bd:	ss xor al,0x36
  4237c1:	push   ebx
  4237c2:	push   ecx
  4237c3:	push   ebx
  4237c4:	je     0x423778
  4237c6:	mov    edx,0xc86b229
  4237cb:	push   DWORD PTR [edx-0x7fa10f80]
  4237d1:	xchg   edi,eax
  4237d2:	pop    esi
  4237d3:	push   ebx
  4237d4:	adc    DWORD PTR [ebx+0x7e],edx
  4237d7:	mov    dl,0xbe
  4237d9:	or     al,0xb2
  4237db:	clc    
  4237dc:	sub    edi,edi
  4237de:	dec    BYTE PTR [ecx]
  4237e0:	and    dh,BYTE PTR [edx+0x50fd77ec]
  4237e6:	ja     0x4237e5
  4237e8:	xor    BYTE PTR [edi-0x3],0x80
  4237ec:	lock scas eax,DWORD PTR es:[edi]
  4237ee:	arpl   bp,di
  4237f0:	or     edx,ebp
  4237f2:	(bad)  
  4237f3:	or     eax,0x77804d4d
  4237f8:	pop    esi
  4237f9:	xor    al,0x5e
  4237fc:	push   ebx
  4237fd:	push   ecx
  4237fe:	mov    dl,0xba
  423800:	sub    DWORD PTR [ebx+0x74],edx
  423803:	mov    dl,0x86
  423805:	or     al,0xff
  423807:	mov    dl,0x80
  423809:	lock scas eax,DWORD PTR es:[edi]
  42380b:	or     DWORD PTR [edx],esp
  42380d:	mov    dl,0x80
  42380f:	lock jp 0x423865
  423812:	adc    DWORD PTR [edx-0x4d00f342],esi
  423818:	xor    al,0x7a
  42381b:	push   ebx
  42381c:	push   ecx
  42381d:	mov    dl,0xba
  42381f:	sub    edi,edi
  423821:	mov    dl,0x50
  423823:	ja     0x42385b
  423825:	xor    BYTE PTR [edi-0x7e],0x80
  423829:	lock adc BYTE PTR [ebx+0x51],0xb2
  42382e:	mov    edx,0xb2745329
  423833:	xchg   BYTE PTR [edi+edi*8],cl
  423836:	mov    dl,0x80
  423838:	lock add BYTE PTR [eax+0x11538297],0xb2
  423840:	mov    esi,0xb27e530c
  423845:	clc    
  423846:	sub    edi,edi
  423848:	(bad)  
  423849:	in     al,dx
  42384a:	lock ss in al,dx
  42384d:	std    
  42384e:	in     al,dx
  42384f:	lock push esi
  423851:	push   eax
  423852:	lock push esi
  423854:	les    ebx,FWORD PTR ds:0x80827780
  42385a:	lock adc BYTE PTR [ebx+0x74],0x53
  42385f:	push   ecx
  423860:	mov    dl,0x86
  423862:	or     al,0xb2
  423864:	mov    edx,0xecb2ff29
  423869:	ja     0x4238c1
  42386b:	push   eax
  42386c:	ja     0x4238c4
  42386e:	xor    BYTE PTR [edi-0x7e],0x80
  423872:	lock adc BYTE PTR [ebx+0x74],0xb2
  423877:	xchg   BYTE PTR [ebx+edx*2],cl
  42387a:	push   ecx
  42387b:	mov    dl,0xba
  42387d:	sub    edi,edi
  42387f:	mov    dl,0x80
  423881:	lock test BYTE PTR [ebx-0x3],al
  423885:	xor    BYTE PTR [edi-0x7e],0x80
  423889:	xchg   edi,eax
  42388a:	adc    BYTE PTR [ebx+0x74],0x53
  42388e:	jle    0x423842
  423890:	clc    
  423891:	sub    DWORD PTR [edx-0x400f37a],esi
  423897:	adc    BYTE PTR [edi-0x4ddf6aa],0x63
  42389e:	mov    dl,0x9
  4238a0:	dec    esp
  4238a1:	xor    cl,BYTE PTR [edx+0x77804d4d]
  4238a7:	mov    eax,DWORD PTR [eax+0x77808b77]
  4238ad:	mov    dl,BYTE PTR [eax+0x77]
  4238b0:	xor    BYTE PTR ss:[edi-0x11],0x80
  4238b5:	lock adc BYTE PTR es:[edi-0x4deeacda],0xbe
  4238be:	or     al,0x53
  4238c0:	jle    0x423842
  4238c2:	int    0x32
  4238c4:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  4238ca:	(bad)  
  4238cb:	(bad)  
  4238cc:	xchg   esi,eax
  4238cd:	xor    al,0x66
  4238d0:	adc    BYTE PTR [edi+0x53115366],0x7e
  4238d7:	mov    dl,0xbe
  4238d9:	or     al,0xb2
  4238db:	clc    
  4238dc:	sub    edi,edi
  4238de:	(bad)  
  4238df:	xchg   esi,eax
  4238e0:	xor    al,0x8b
  4238e3:	adc    BYTE PTR [edi+0x36d74d8b],0x53
  4238ea:	adc    DWORD PTR [ebx+0x7e],edx
  4238ed:	mov    dl,0xbe
  4238ef:	or     al,0xb2
  4238f1:	clc    
  4238f2:	sub    edi,edi
  4238f4:	(bad)  
  4238f5:	xchg   esi,eax
  4238f6:	dec    ebp
  4238f7:	or     dl,BYTE PTR ds:0x808bf080
  4238fd:	xchg   edi,eax
  4238fe:	mov    edx,DWORD PTR [ebx+0x11]
  423901:	push   ebx
  423902:	jle    0x4238b6
  423904:	mov    esi,0x29f8b20c
  423909:	(bad)  
  42390a:	(bad)  
  42390b:	push   eax
  42390c:	ja     0x423974
  42390e:	arpl   bp,di
  423910:	or     DWORD PTR [edi],ecx
  423912:	cmp    al,0x8d
  423914:	lea    ecx,[ebp-0x3b748880]
  42391a:	lock adc BYTE PTR [edi-0x7b88af9a],0x6e
  423922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423923:	test   BYTE PTR [eax-0x414d7b10],al
  423929:	or     al,0x53
  42392b:	cld    
  42392c:	mov    dl,0x84
  42392e:	sub    edi,edi
  423930:	mov    dl,0x80
  423932:	lock jbe 0x4238c4
  423935:	and    DWORD PTR [edx],edi
  423937:	adc    BYTE PTR [ecx],ah
  423939:	jno    0x4238bb
  42393b:	lock stc 
  42393d:	xor    al,0xf9
  423940:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423947:	mov    dl,0xf8
  423949:	sub    DWORD PTR [edx-0x100f342],esi
  42394f:	adc    BYTE PTR [edi-0x7f021307],0x77
  423956:	test   BYTE PTR [ebx-0x6c],dl
  423959:	in     eax,dx
  42395a:	test   BYTE PTR [edx-0x4d750713],cl
  423960:	mov    esi,0xfffbec29
  423965:	mov    dl,0x53
  423967:	jl     0x4238e9
  423969:	lock mov al,BYTE PTR [eax-0x74d7569]
  423970:	or     al,0xb2
  423972:	mov    esi,0x53b6ff29
  423977:	pushf  
  423978:	arpl   bx,di
  42397a:	xlat   BYTE PTR ds:[ebx]
  42397b:	sub    al,0x80
  42397d:	ja     0x42396e
  42397f:	xor    al,0x2e
  423982:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  423989:	lea    ecx,[ebp+0x7e531153]
  42398f:	mov    dl,0xbe
  423991:	or     al,0xb2
  423993:	clc    
  423994:	sub    edi,edi
  423996:	(bad)  
  423997:	xchg   esi,eax
  423998:	xor    al,0x8b
  42399b:	adc    BYTE PTR [edi+0x5311538b],0x7e
  4239a2:	mov    dl,0xbe
  4239a4:	or     al,0xb2
  4239a6:	clc    
  4239a7:	sub    edi,edi
  4239a9:	(bad)  
  4239aa:	xchg   esi,eax
  4239ab:	dec    ebp
  4239ac:	xlat   BYTE PTR ds:[ebx]
  4239ad:	jbe    0x4239fc
  4239af:	or     bl,BYTE PTR ds:0x50667780
  4239b5:	ja     0x423a2d
  4239b7:	xor    BYTE PTR [edi+0x36],0x50
  4239bb:	ja     0x423947
  4239bd:	xor    BYTE PTR [edi-0x76],0x53
  4239c1:	jo     0x4239b0
  4239c3:	xchg   dh,ch
  4239c5:	aad    0x43
  4239c7:	xor    BYTE PTR [edi+0x76],0x80
  4239cb:	adc    eax,0x767780ef
  4239d0:	sub    dh,0xef
  4239d3:	push   ebx
  4239d4:	cld    
  4239d5:	push   ebx
  4239d6:	xchg   esp,eax
  4239d7:	mov    dl,0x84
  4239d9:	sub    DWORD PTR [edx-0x400f3f9],esi
  4239df:	adc    BYTE PTR [edi-0x5911af8a],0x80
  4239e6:	ja     0x423972
  4239e8:	in     eax,dx
  4239e9:	mov    dl,0xee
  4239eb:	in     eax,dx
  4239ec:	xchg   dh,ch
  4239ee:	arpl   bp,di
  4239f0:	in     al,0x98
  4239f2:	xor    BYTE PTR [edi-0x76],0x53
  4239f6:	jo     0x4239e5
  4239f8:	xchg   dh,ch
  4239fa:	aad    0x43
  4239fc:	xor    BYTE PTR [edi+0x76],0x80
  423a00:	adc    eax,0x767780ef
  423a05:	sub    dh,0xef
  423a08:	push   ebx
  423a09:	cld    
  423a0a:	push   ebx
  423a0b:	xchg   esp,eax
  423a0c:	mov    dl,0x84
  423a0e:	sub    DWORD PTR [edx-0x400f3f9],esi
  423a14:	adc    BYTE PTR [edi-0x5911af8a],0x80
  423a1b:	ja     0x4239a7
  423a1d:	in     eax,dx
  423a1e:	mov    dl,0xee
  423a20:	in     eax,dx
  423a21:	xchg   dh,ch
  423a23:	arpl   bp,di
  423a25:	in     al,0x98
  423a27:	xor    BYTE PTR [edi+0x76],0x80
  423a2b:	lock stc 
  423a2d:	push   eax
  423a2e:	ja     0x4239df
  423a30:	xor    BYTE PTR [edi-0x7],0x53
  423a34:	adc    DWORD PTR [ebx-0x4],edx
  423a37:	mov    dl,0x84
  423a39:	sub    DWORD PTR [edx-0x200f342],esi
  423a3f:	xor    BYTE PTR [edi-0x75],0x50
  423a43:	lock es jl 0x423abe
  423a47:	inc    ecx
  423a48:	ins    DWORD PTR es:[edi],dx
  423a49:	pop    ebp
  423a4a:	ins    DWORD PTR es:[edi],dx
  423a4b:	aas    
  423a4c:	jl     0x423ac5
  423a4e:	pop    edx
  423a4f:	ins    DWORD PTR es:[edi],dx
  423a50:	inc    ebx
  423a51:	ins    DWORD PTR es:[edi],dx
  423a52:	push   ebx
  423a53:	push   eax
  423a54:	ja     0x423abc
  423a56:	fsub   QWORD PTR [si]
  423a59:	outs   dx,DWORD PTR ds:[esi]
  423a5a:	cmp    BYTE PTR [ecx],cl
  423a5c:	jg     0x80cfc7ef
  423a62:	xchg   edi,eax
  423a63:	scas   eax,DWORD PTR es:[edi]
  423a64:	cmp    ch,0x53
  423a67:	adc    DWORD PTR [eax-0x10],edx
  423a6a:	test   BYTE PTR [edx+0x530c84c7],dh
  423a70:	cld    
  423a71:	mov    dl,0x84
  423a73:	sub    edi,edi
  423a75:	ja     0x4239fb
  423a77:	push   eax
  423a78:	lock bound ecx,QWORD PTR [edi+0x9412f31]
  423a7f:	cli    
  423a80:	out    dx,al
  423a81:	jno    0x423a50
  423a83:	add    eax,0xbdbecdcd
  423a88:	or     eax,esp
  423a8a:	jo     0x423aef
  423a8c:	mov    dl,0xd7
  423a8e:	fiadd  DWORD PTR [eax-0xf7f0689]
  423a94:	stc    
  423a95:	xor    BYTE PTR [edi-0x7],0x80
  423a99:	xchg   edi,eax
  423a9a:	stc    
  423a9b:	push   ebx
  423a9c:	cld    
  423a9d:	push   ebx
  423a9e:	adc    DWORD PTR [edx-0x414dd67c],esi
  423aa4:	or     al,0xff
  423aa6:	std    
  423aa7:	xor    BYTE PTR [edi+0x66],0x53
  423aab:	cld    
  423aac:	mov    dl,0x84
  423aae:	sub    edi,edi
  423ab0:	ja     0x423a36
  423ab2:	push   ebx
  423ab3:	xchg   esp,eax
  423ab4:	in     al,dx
  423ab5:	std    
  423ab6:	xor    BYTE PTR [edi+0x62],0xed
  423aba:	test   BYTE PTR [edx-0x4d750713],cl
  423ac0:	mov    esi,0xfff7ec29
  423ac5:	(bad)  
  423ac6:	push   ebx
  423ac7:	sub    al,BYTE PTR [eax+0x66f050b2]
  423acd:	fsub   QWORD PTR [si]
  423ad0:	outs   dx,DWORD PTR ds:[esi]
  423ad1:	cmp    bh,dl
  423ad3:	add    DWORD PTR [eax-0x6f3bd910],eax
  423ad9:	xor    al,0x8b
  423adc:	xor    BYTE PTR [edi-0x75],0x53
  423ae0:	adc    DWORD PTR [ebx-0x4],edx
  423ae3:	mov    dl,0xbe
  423ae5:	or     al,0xb2
  423ae7:	test   BYTE PTR [ecx],ch
  423ae9:	(bad)  
  423aea:	std    
  423aeb:	xor    BYTE PTR [edi-0x75],0x80
  423aef:	xchg   edi,eax
  423af0:	mov    edx,DWORD PTR [ebx+0x74]
  423af3:	push   ebx
  423af4:	jle    0x423aa8
  423af6:	xchg   BYTE PTR [edx+esi*4],cl
  423af9:	clc    
  423afa:	sub    edi,edi
  423afc:	sti    
  423afd:	arpl   WORD PTR [edx+0xc230f09],si
  423b03:	lea    ecx,[ebp-0x7f508880]
  423b09:	ins    DWORD PTR es:[edi],dx
  423b0a:	out    dx,eax
  423b0b:	push   eax
  423b0c:	out    0xf9,eax
  423b0e:	jl     0x423b87
  423b10:	es repz and al,0x6f
  423b14:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  423b18:	hlt    
  423b19:	and    al,0x6f
  423b1b:	cmp    BYTE PTR [edi+esi*2+0x7a],bh
  423b1f:	mul    BYTE PTR [ebx+0x777c386f]
  423b25:	test   dl,bh
  423b27:	and    al,0x6f
  423b29:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  423b2d:	nop
  423b2e:	shr    BYTE PTR [edi+0x38],1
  423b31:	push   eax
  423b32:	ja     0x423b72
  423b34:	xor    BYTE PTR [edi-0x11],0x80
  423b38:	lock test BYTE PTR [eax+0x11538497],al
  423b3f:	mov    dl,0xbe
  423b41:	or     al,0x53
  423b43:	jle    0x423af7
  423b45:	clc    
  423b46:	sub    edi,edi
  423b48:	(bad)  
  423b49:	xchg   esi,eax
  423b4a:	xor    al,0x7a
  423b4d:	adc    BYTE PTR [edi-0x4deeac86],0xbe
  423b54:	or     al,0x53
  423b56:	jle    0x423ad8
  423b58:	int    0x32
  423b5a:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423b60:	(bad)  
  423b61:	(bad)  
  423b62:	xchg   esi,eax
  423b63:	xor    al,0x66
  423b66:	adc    BYTE PTR [edi+0x53115366],0x7e
  423b6d:	mov    dl,0xbe
  423b6f:	or     al,0xb2
  423b71:	clc    
  423b72:	sub    edi,edi
  423b74:	(bad)  
  423b75:	xchg   esi,eax
  423b76:	xor    al,0xf9
  423b79:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423b80:	mov    dl,0xbe
  423b82:	or     al,0xb2
  423b84:	clc    
  423b85:	sub    edi,edi
  423b87:	(bad)  
  423b88:	xchg   esi,eax
  423b89:	dec    ebp
  423b8a:	or     dl,BYTE PTR ds:0x80667750
  423b90:	ja     0x423b81
  423b92:	xor    al,0x84
  423b95:	adc    BYTE PTR [edi-0x4deeac7c],0xbe
  423b9c:	or     al,0x53
  423b9e:	jle    0x423b20
  423ba0:	int    0x32
  423ba2:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423ba8:	(bad)  
  423ba9:	(bad)  
  423baa:	xchg   esi,eax
  423bab:	xor    al,0x7a
  423bae:	adc    BYTE PTR [edi+0x5311537a],0x7e
  423bb5:	mov    dl,0xbe
  423bb7:	or     al,0xb2
  423bb9:	clc    
  423bba:	sub    edi,edi
  423bbc:	(bad)  
  423bbd:	xchg   esi,eax
  423bbe:	xor    al,0xf9
  423bc1:	adc    BYTE PTR [edi+0x3ed74df9],0x53
  423bc8:	adc    DWORD PTR [ebx+0x7e],edx
  423bcb:	mov    dl,0xbe
  423bcd:	or     al,0xb2
  423bcf:	clc    
  423bd0:	sub    edi,edi
  423bd2:	(bad)  
  423bd3:	xchg   esi,eax
  423bd4:	dec    ebp
  423bd5:	or     dl,BYTE PTR ds:0x50f9f080
  423bdb:	ja     0x423b61
  423bdd:	xor    BYTE PTR [edi-0x7],0x53
  423be1:	adc    DWORD PTR [ebx-0x4],edx
  423be4:	mov    dl,0xbe
  423be6:	or     al,0xb2
  423be8:	test   BYTE PTR [ecx],ch
  423bea:	(bad)  
  423beb:	std    
  423bec:	xor    BYTE PTR [edi+0x66],0x63
  423bf0:	std    
  423bf1:	or     DWORD PTR [edi],ecx
  423bf3:	cmp    eax,0x808d8d2f
  423bf8:	lock stc 
  423bfa:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423c01:	mov    dl,0xbe
  423c03:	or     al,0xb2
  423c05:	clc    
  423c06:	sub    edi,edi
  423c08:	(bad)  
  423c09:	arpl   ax,si
  423c0b:	test   BYTE PTR [ecx],cl
  423c0d:	bswap  edi
  423c0f:	das    
  423c10:	lea    ecx,[ebp-0x7fd90f80]
  423c16:	lock es mov dl,0xbe
  423c1a:	or     al,0xcd
  423c1c:	add    eax,0x80ef10c4
  423c21:	lock stc 
  423c23:	xor    al,0xf9
  423c26:	mov    dl,0xbe
  423c28:	or     al,0xcd
  423c2a:	add    eax,0x3a7d10c4
  423c2f:	xor    al,0x36
  423c32:	xor    al,0x36
  423c35:	mov    dl,0xbe
  423c37:	or     al,0xcd
  423c39:	add    eax,0xc7d10c4
  423c3e:	in     eax,dx
  423c3f:	cmp    BYTE PTR ds:0x8d4d4d4d,bl
  423c45:	in     eax,dx
  423c46:	cmp    BYTE PTR ds:0x8d4d4d4d,ah
  423c4c:	add    DWORD PTR [ecx],eax
  423c4e:	and    eax,0x964d4d4d
  423c53:	dec    ebp
  423c54:	xlat   BYTE PTR ds:[ebx]
  423c55:	add    DWORD PTR ds:[ecx],eax
  423c58:	sbb    eax,0x4d4d4d4d
  423c5d:	xlat   BYTE PTR ds:[ebx]
  423c5e:	test   BYTE PTR [esi+0x4daff080],dl
  423c64:	sahf   
  423c65:	and    DWORD PTR [eax-0x4d128910],eax
  423c6b:	jno    0x423c03
  423c6d:	or     al,BYTE PTR [esi+0x4d4d8832]
  423c73:	push   eax
  423c74:	ja     0x423cd8
  423c76:	xor    BYTE PTR [edi-0x11],0x80
  423c7a:	lock adc BYTE PTR cs:[edi+0x32cd802e],0x3a
  423c83:	lea    ecx,[ebp+0x7e531153]
  423c89:	mov    dl,0xbe
  423c8b:	or     al,0xb2
  423c8d:	clc    
  423c8e:	sub    edi,edi
  423c90:	(bad)  
  423c91:	xchg   esi,eax
  423c92:	xor    al,0xf9
  423c95:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423c9c:	mov    dl,0xbe
  423c9e:	or     al,0xb2
  423ca0:	clc    
  423ca1:	sub    edi,edi
  423ca3:	(bad)  
  423ca4:	xchg   esi,eax
  423ca5:	dec    ebp
  423ca6:	xlat   BYTE PTR ds:[ebx]
  423ca7:	dec    bp
  423ca9:	or     bl,BYTE PTR ds:0xb2627780
  423caf:	push   0xc
  423cb1:	push   ebx
  423cb2:	jl     0x423d17
  423cb4:	jl     0x423c36
  423cb6:	ja     0x423ca7
  423cb8:	xor    al,0x2e
  423cbb:	or     ch,0x32
  423cbe:	cmp    cl,BYTE PTR [ebp+0x2e97808d]
  423cc4:	xlat   BYTE PTR ds:[ebx]
  423cc5:	push   ebp
  423cc6:	push   ebx
  423cc7:	adc    DWORD PTR [ebx+0x7e],edx
  423cca:	mov    dl,0xbe
  423ccc:	or     al,0xb2
  423cce:	clc    
  423ccf:	sub    edi,edi
  423cd1:	(bad)  
  423cd2:	xchg   esi,eax
  423cd3:	xor    al,0xf9
  423cd6:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423cdd:	mov    dl,0xbe
  423cdf:	or     al,0xb2
  423ce1:	clc    
  423ce2:	sub    edi,edi
  423ce4:	(bad)  
  423ce5:	xchg   esi,eax
  423ce6:	dec    ebp
  423ce7:	xlat   BYTE PTR ds:[ebx]
  423ce8:	jbe    0x423d37
  423cea:	or     bl,BYTE PTR ds:0x50847780
  423cf0:	ja     0x423d68
  423cf2:	xor    BYTE PTR [edi+0x3e],0x50
  423cf6:	ja     0x423c82
  423cf8:	les    edi,FWORD PTR [ecx]
  423cfa:	push   ebx
  423cfb:	adc    DWORD PTR [ebx+0x7e],edx
  423cfe:	mov    dl,0xbe
  423d00:	or     al,0xb2
  423d02:	clc    
  423d03:	sub    edi,edi
  423d05:	(bad)  
  423d06:	xchg   esi,eax
  423d07:	xor    al,0xf9
  423d0a:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423d11:	mov    dl,0xbe
  423d13:	or     al,0xb2
  423d15:	clc    
  423d16:	sub    edi,edi
  423d18:	(bad)  
  423d19:	xchg   esi,eax
  423d1a:	dec    ebp
  423d1b:	xlat   BYTE PTR ds:[ebx]
  423d1c:	test   BYTE PTR [ebp+0xa],cl
  423d1f:	sbb    eax,0x508a7780
  423d24:	ja     0x423d44
  423d26:	xor    BYTE PTR [edi+0x76],0x50
  423d2a:	out    0x56,eax
  423d2c:	push   eax
  423d2d:	ja     0x423d91
  423d2f:	jl     0x423da8
  423d31:	xor    ch,0x24
  423d34:	outs   dx,DWORD PTR ds:[esi]
  423d35:	cmp    BYTE PTR [eax-0xf7fa989],al
  423d3b:	push   esi
  423d3c:	push   ebx
  423d3d:	cld    
  423d3e:	push   ebx
  423d3f:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d45:	or     al,0xff
  423d47:	mov    dl,0x50
  423d49:	ja     0x423d91
  423d4b:	xor    BYTE PTR [edi+0x56],0x80
  423d4f:	lock push esi
  423d51:	push   ebx
  423d52:	cld    
  423d53:	push   ebx
  423d54:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d5a:	or     al,0xff
  423d5c:	mov    dl,0x50
  423d5e:	ja     0x423d0f
  423d60:	jl     0x423dd9
  423d62:	jp     0x423dad
  423d64:	and    al,0x6f
  423d66:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  423d6a:	fisub  WORD PTR [edi+ebp*2]
  423d6d:	cmp    BYTE PTR [eax-0xf7fa989],al
  423d73:	push   esi
  423d74:	push   ebx
  423d75:	cld    
  423d76:	push   ebx
  423d77:	adc    DWORD PTR [edx-0x7b4df342],esi
  423d7d:	sub    edi,edi
  423d7f:	mov    dl,0x80
  423d81:	lock push ds
  423d83:	arpl   bp,di
  423d85:	or     DWORD PTR [edi],ecx
  423d87:	pop    ss
  423d88:	in     al,dx
  423d89:	lea    ecx,[ebp-0x72f35f42]
  423d8f:	lea    eax,[eax+0x77807af0]
  423d95:	jp     0x423d17
  423d97:	xchg   edi,eax
  423d98:	inc    esi
  423d99:	push   ebx
  423d9a:	je     0x423def
  423d9c:	push   ecx
  423d9d:	mov    dl,0x86
  423d9f:	or     al,0xb2
  423da1:	mov    edx,0x80fdff29
  423da6:	ja     0x423dc6
  423da8:	inc    ebx
  423da9:	sti    
  423daa:	push   ebx
  423dab:	jb     0x423df8
  423dad:	add    eax,0x80af7750
  423db2:	ja     0x423d38
  423db4:	xor    al,0x84
  423db7:	push   ebx
  423db8:	cld    
  423db9:	push   ebx
  423dba:	adc    DWORD PTR [edx-0x7b4df342],esi
  423dc0:	sub    edi,edi
  423dc2:	mov    dl,0x80
  423dc4:	lock scas eax,DWORD PTR es:[edi]
  423dc6:	arpl   bp,di
  423dc8:	fst    DWORD PTR [edi]
  423dca:	xor    BYTE PTR [edi-0x7c],0x80
  423dce:	lock test BYTE PTR [ebx-0x4],dl
  423dd2:	push   ebx
  423dd3:	adc    DWORD PTR [edx-0x414dd67c],esi
  423dd9:	or     al,0xff
  423ddb:	mov    dl,0x50
  423ddd:	ja     0x423d8e
  423ddf:	xor    BYTE PTR [edi+0x7a],0x80
  423de3:	lock jp 0x423e39
  423de6:	cld    
  423de7:	push   ebx
  423de8:	adc    DWORD PTR [edx-0x414dd67c],esi
  423dee:	or     al,0xff
  423df0:	mov    dl,0x80
  423df2:	lock scas eax,DWORD PTR es:[edi]
  423df4:	or     DWORD PTR [edx],esp
  423df6:	mov    dl,0x50
  423df8:	ja     0x423da9
  423dfa:	xor    BYTE PTR [edi+0x56],0x80
  423dfe:	lock push esi
  423e00:	push   ebx
  423e01:	cld    
  423e02:	push   ebx
  423e03:	adc    DWORD PTR [edx-0x7b4df342],esi
  423e09:	sub    edi,edi
  423e0b:	mov    dl,0x80
  423e0d:	lock scas eax,DWORD PTR es:[edi]
  423e0f:	arpl   bp,di
  423e11:	or     DWORD PTR [edi],ecx
  423e13:	(bad)  
  423e14:	or     al,0x8d
  423e16:	lea    eax,[eax+0x7750af77]
  423e1c:	scas   eax,DWORD PTR es:[edi]
  423e1d:	xor    BYTE PTR [edi+0x46],0xec
  423e21:	ja     0x423e85
  423e23:	push   eax
  423e24:	out    0x3e,eax
  423e26:	push   eax
  423e27:	ja     0x423e87
  423e29:	pop    esi
  423e2a:	cmc    
  423e2b:	and    al,0x6f
  423e2d:	cmp    BYTE PTR [eax+0x77],dl
  423e30:	push   0x7c
  423e32:	ja     0x423e9a
  423e34:	hlt    
  423e35:	and    al,0x6f
  423e37:	cmp    BYTE PTR [edi+esi*2+0x26],bh
  423e3b:	repz and al,0x6f
  423e3e:	cmp    BYTE PTR [eax+0x77],dl
  423e41:	test   DWORD PTR [eax-0xf7fc189],0x53fc533e
  423e4b:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e51:	or     al,0xff
  423e53:	mov    dl,0x50
  423e55:	ja     0x423e54
  423e57:	sub    BYTE PTR [edx-0x42],0x4f
  423e5b:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423e61:	dec    edi
  423e62:	xor    DWORD PTR [ebp+0x4d],ecx
  423e65:	dec    ebp
  423e66:	jmp    0x7c6a:0x80386f24
  423e6d:	dec    edi
  423e6e:	jge    0x423ebd
  423e70:	dec    ebp
  423e71:	dec    ebp
  423e72:	or     esp,DWORD PTR [edi+ebp*2]
  423e75:	cmp    BYTE PTR [eax-0x7f957f96],al
  423e7b:	ja     0x423e74
  423e7d:	xor    al,0xf7
  423e80:	push   ebx
  423e81:	cld    
  423e82:	push   ebx
  423e83:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e89:	or     al,0xff
  423e8b:	mov    dl,0x80
  423e8d:	lock std 
  423e8f:	or     DWORD PTR [edx],esp
  423e91:	mov    dl,0x80
  423e93:	lock pop esi
  423e95:	(bad)  
  423e96:	out    dx,al
  423e97:	out    dx,eax
  423e98:	adc    BYTE PTR [edi-0x54],dh
  423e9b:	sub    BYTE PTR [edx-0x80],0x77
  423e9f:	test   DWORD PTR [eax+0x1153f7f0],0xbeb2fc53
  423ea9:	or     al,0xb2
  423eab:	test   BYTE PTR [ecx],ch
  423ead:	push   DWORD PTR [edx+0x9fdf080]
  423eb3:	and    dh,BYTE PTR [edx-0x7f990f80]
  423eb9:	xchg   edi,eax
  423eba:	push   bx
  423ebc:	push   ecx
  423ebd:	push   ebx
  423ebe:	xchg   esp,eax
  423ebf:	mov    dl,0xba
  423ec1:	sub    DWORD PTR [edx-0x100f3f9],esi
  423ec7:	in     al,dx
  423ec8:	mov    dl,0x80
  423eca:	lock pop esi
  423ecc:	or     eax,esp
  423ece:	and    edi,ebp
  423ed0:	or     BYTE PTR [edi+0x31],0x4d
  423ed4:	dec    ebp
  423ed5:	dec    ebp
  423ed6:	sbb    BYTE PTR [eax],0x31
  423ed9:	dec    ebp
  423eda:	dec    ebp
  423edb:	dec    ebp
  423edc:	push   ebx
  423edd:	cld    
  423ede:	push   ebx
  423edf:	xchg   esp,eax
  423ee0:	mov    dl,0x84
  423ee2:	sub    DWORD PTR [edx-0x400f3f9],esi
  423ee8:	in     al,dx
  423ee9:	mov    dl,0x9
  423eeb:	loopne 0x423edd
  423eed:	lods   al,BYTE PTR ds:[esi]
  423eee:	push   ebx
  423eef:	std    
  423ef0:	adc    al,dh
  423ef2:	lods   al,BYTE PTR ds:[esi]
  423ef3:	sub    BYTE PTR [edx-0x71],0x77
  423ef7:	lods   al,BYTE PTR ds:[esi]
  423ef8:	xor    al,0xf7
  423efb:	adc    BYTE PTR [edi+0x535153f7],0x94
  423f02:	mov    dl,0x7
  423f04:	or     al,0xb2
  423f06:	mov    edx,0x80feff29
  423f0b:	xchg   edi,eax
  423f0c:	std    
  423f0d:	or     DWORD PTR [edx],esp
  423f0f:	inc    BYTE PTR [eax-0x11efa169]
  423f15:	push   cs
  423f16:	sub    BYTE PTR [edx-0x80],0x77
  423f1a:	test   DWORD PTR [eax-0x3ac0810],0x84b21153
  423f24:	sub    DWORD PTR [edx-0x4d00f342],esi
  423f2a:	xor    al,0xfd
  423f2d:	or     DWORD PTR [edx],esp
  423f2f:	mov    dl,0x80
  423f31:	lock pop esi
  423f33:	(bad)  
  423f34:	out    dx,al
  423f35:	out    dx,eax
  423f36:	adc    BYTE PTR [edi-0x54],dh
  423f39:	sub    BYTE PTR [edx-0x80],0x77
  423f3d:	test   DWORD PTR [eax-0x3ac0810],0x532984b2
  423f47:	adc    DWORD PTR [edx-0x4d00f342],esi
  423f4d:	xor    al,0xfd
  423f50:	or     DWORD PTR [edx],esp
  423f52:	mov    dl,0x80
  423f54:	lock push 0xffffff80
  423f57:	xchg   edi,eax
  423f58:	push   0x53
  423f5a:	push   ecx
  423f5b:	push   ebx
  423f5c:	xchg   esp,eax
  423f5d:	mov    dl,0xba
  423f5f:	sub    DWORD PTR [edx-0x100f3f9],esi
  423f65:	in     al,dx
  423f66:	mov    dl,0x80
  423f68:	lock pop esi
  423f6a:	or     eax,esp
  423f6c:	and    edi,ebp
  423f6e:	or     BYTE PTR [edi+0x7d],0x4d
  423f72:	dec    ebp
  423f73:	dec    ebp
  423f74:	sbb    BYTE PTR [eax],0x7d
  423f77:	dec    ebp
  423f78:	dec    ebp
  423f79:	dec    ebp
  423f7a:	push   ebx
  423f7b:	cld    
  423f7c:	push   ebx
  423f7d:	xchg   esp,eax
  423f7e:	mov    dl,0x84
  423f80:	sub    DWORD PTR [edx-0x400f3f9],esi
  423f86:	in     al,dx
  423f87:	mov    dl,0x9
  423f89:	loopne 0x423f7b
  423f8b:	lods   al,BYTE PTR ds:[esi]
  423f8c:	push   ebx
  423f8d:	std    
  423f8e:	adc    al,dh
  423f90:	lods   al,BYTE PTR ds:[esi]
  423f91:	sub    BYTE PTR [edx-0x71],0x77
  423f95:	lods   al,BYTE PTR ds:[esi]
  423f96:	xor    al,0xf7
  423f99:	adc    BYTE PTR [edi+0x535153f7],0x94
  423fa0:	mov    dl,0x7
  423fa2:	or     al,0xb2
  423fa4:	mov    edx,0x80feff29
  423fa9:	xchg   edi,eax
  423faa:	std    
  423fab:	or     DWORD PTR [edx],esp
  423fad:	inc    BYTE PTR [eax-0x11efa169]
  423fb3:	push   cs
  423fb4:	sub    BYTE PTR [edx-0x80],0x77
  423fb8:	es xor al,0x26
  423fbc:	push   ebx
  423fbd:	adc    DWORD PTR [ebx-0x4],edx
  423fc0:	mov    dl,0xbe
  423fc2:	or     al,0xb2
  423fc4:	test   BYTE PTR [ecx],ch
  423fc6:	push   DWORD PTR [edx-0x7f950f80]
  423fcc:	xchg   edi,eax
  423fcd:	push   0x53
  423fcf:	push   ecx
  423fd0:	push   ebx
  423fd1:	xchg   esp,eax
  423fd2:	mov    dl,0xba
  423fd4:	sub    DWORD PTR [edx-0x100f3f9],esi
  423fda:	or     DWORD PTR [edx],esp
  423fdc:	mov    dl,0xec
  423fde:	ja     0x423fdd
  423fe0:	push   eax
  423fe1:	ja     0x423fe0
  423fe3:	xor    BYTE PTR [edi-0x3],0x80
  423fe7:	lock scas eax,DWORD PTR es:[edi]
  423fe9:	arpl   bp,di
  423feb:	or     edx,ebp
  423fed:	(bad)  
  423fee:	or     eax,0x77804d4d
  423ff3:	push   0xffffff80
  423ff5:	lock push 0x53
  423ff8:	adc    DWORD PTR [edx-0x3acf342],esi
  423ffe:	mov    dl,0x84
  424000:	sub    edi,edi
  424002:	mov    dl,0x80
  424004:	lock scas eax,DWORD PTR es:[edi]
  424006:	or     DWORD PTR [edx],esp
  424008:	mov    dl,0x80
  42400a:	lock ds push ebx
  42400d:	push   ecx
  42400e:	mov    dl,0xba
  424010:	sub    edi,edi
  424012:	mov    dl,0x80
  424014:	lock ds push ebx
  424017:	adc    DWORD PTR [edx-0x4d00f342],esi
  42401d:	push   eax
  42401e:	ja     0x424086
  424020:	xor    BYTE PTR [edi-0x7e],0x80
  424024:	lock adc BYTE PTR [ebx+0x11],0xb2
  424029:	mov    esi,0xb2fc530c
  42402e:	test   BYTE PTR [ecx],ch
  424030:	push   DWORD PTR [edx-0x7f7d0f80]
  424036:	xchg   edi,eax
  424037:	adc    BYTE PTR [ebx+0x51],0xb2
  42403b:	mov    edx,0xb2945329
  424040:	pop    es
  424041:	or     al,0xff
  424043:	(bad)  
  424044:	in     al,dx
  424045:	lock data16 in al,dx
  424048:	std    
  424049:	in     al,dx
  42404a:	lock inc esi
  42404c:	push   eax
  42404d:	lock inc esi
  42404f:	les    ebx,FWORD PTR ds:0x80827780
  424055:	lock adc BYTE PTR [ebx-0x4],0x53
  42405a:	adc    DWORD PTR [edx-0x414dd67c],esi
  424060:	or     al,0xff
  424062:	mov    dl,0xec
  424064:	ja     0x4240ac
  424066:	push   eax
  424067:	ja     0x4240af
  424069:	xor    BYTE PTR [edi-0x7e],0x80
  42406d:	lock adc BYTE PTR [ebx-0x4],0xb2
  424072:	test   BYTE PTR [ecx],ch
  424074:	push   ebx
  424075:	adc    DWORD PTR [edx-0x4d00f342],esi
  42407b:	xor    al,0x1e
  42407e:	inc    ebx
  42407f:	std    
  424080:	xor    BYTE PTR [edi-0x7e],0x80
  424084:	xchg   edi,eax
  424085:	adc    BYTE PTR [ebx-0x4],0x53
  424089:	xchg   esp,eax
  42408a:	mov    dl,0x7
  42408c:	or     al,0xb2
  42408e:	test   BYTE PTR [ecx],ch
  424090:	(bad)  
  424091:	sti    
  424092:	adc    BYTE PTR [edi-0x4ddf6ba],0x63
  424099:	mov    dl,0x9
  42409b:	dec    esp
  42409c:	xor    cl,BYTE PTR [edx+0x77804d4d]
  4240a2:	out    dx,eax
  4240a3:	dec    ebp
  4240a4:	xlat   BYTE PTR ds:[ebx]
  4240a5:	and    DWORD PTR [ecx],eax
  4240a7:	ja     0x42402f
  4240a9:	dec    ebp
  4240aa:	xlat   BYTE PTR ds:[ebx]
  4240ab:	out    dx,eax
  4240ac:	or     al,BYTE PTR [eax-0x327f1089]
  4240b2:	jp     0x4240ee
  4240b4:	lea    ecx,[ebp+0x7780814d]
  4240ba:	out    dx,eax
  4240bb:	or     ch,0xf7
  4240be:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4240c4:	xlat   BYTE PTR ds:[ebx]
  4240c5:	mov    cl,BYTE PTR [ebp-0x29]
  4240c8:	jbe    0x424050
  4240ca:	test   eax,0x508d8def
  4240cf:	ja     0x424133
  4240d1:	xor    BYTE PTR [edi-0x75],0x80
  4240d5:	lock mov edx,DWORD PTR [ebx+0x74]
  4240d9:	push   ebx
  4240da:	push   ecx
  4240db:	mov    dl,0xba
  4240dd:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4240e3:	xor    al,0x76
  4240e6:	arpl   WORD PTR [edx+0x778057d5],si
  4240ec:	out    dx,eax
  4240ed:	xor    al,0x2e
  4240f0:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  4240f7:	lea    ecx,[ebp+0x7e531153]
  4240fd:	mov    dl,0xbe
  4240ff:	or     al,0xb2
  424101:	clc    
  424102:	sub    edi,edi
  424104:	(bad)  
  424105:	xchg   esi,eax
  424106:	xor    al,0x8b
  424109:	adc    BYTE PTR [edi+0x5311538b],0x7e
  424110:	mov    dl,0xbe
  424112:	or     al,0xb2
  424114:	clc    
  424115:	sub    edi,edi
  424117:	(bad)  
  424118:	xchg   esi,eax
  424119:	dec    ebp
  42411a:	xlat   BYTE PTR ds:[ebx]
  42411b:	jbe    0x42416a
  42411d:	or     bl,BYTE PTR ds:0x70a3a9ab
  424123:	sti    
  424124:	out    dx,eax
  424125:	lea    edx,[edi-0x78127880]
  42412b:	and    eax,0x80328099
  424130:	mov    ds:0x8d8d3a2e,al
  424135:	in     eax,dx
  424136:	pop    ebp
  424137:	lea    ecx,[ecx]
  424139:	(bad)  
  42413b:	cmp    cl,BYTE PTR [ebp+0x9724f8d]
  424141:	(bad)  
  424143:	cmp    cl,BYTE PTR [ebp+0x90b4f8d]
  424149:	jne    0x80cfcedc
  42414f:	dec    esp
  424150:	adc    BYTE PTR [ebp+0x6a4f8d8d],cl
  424156:	or     DWORD PTR [edi],ecx
  424158:	mov    esp,0xed8d8d8d
  42415d:	cli    
  42415e:	inc    ecx
  42415f:	lea    ecx,[ebp+0xf09718d]
  424165:	add    ecx,DWORD PTR [ebp-0x66a07273]
  42416b:	push   ebp
  42416c:	or     DWORD PTR [edi],ecx
  42416e:	mov    dh,0x8d
  424170:	lea    ecx,[ebp+0x3a268e80]
  424176:	lea    ecx,[ebp-0x72cd4813]
  42417c:	cmp    dh,0x43
  42417f:	mov    eax,ds:0x5c09fbec
  424184:	or     ah,BYTE PTR [ecx]
  424186:	push   eax
  424187:	lock stc 
  424189:	or     DWORD PTR [ebp+edi*2-0x5f],ebx
  42418d:	in     al,dx
  42418e:	dec    BYTE PTR [ecx]
  424190:	psadbw mm1,QWORD PTR [ebp+0x7d018d8d]
  424197:	adc    eax,0x86f05093
  42419c:	cli    
  42419d:	dec    ebp
  42419e:	dec    ebp
  42419f:	dec    ebp
  4241a0:	jmp    0x42413d
  4241a2:	dec    edi
  4241a3:	outs   dx,BYTE PTR ds:[esi]
  4241a4:	aad    0xeb
  4241a6:	or     BYTE PTR [esi],0xed
  4241a9:	mov    bh,0xc8
  4241ab:	lea    esi,[ebx]
  4241ad:	jle    0x42419b
  4241af:	test   DWORD PTR [ecx],0x9a1e65c
  4241b5:	pop    esp
  4241b6:	scas   al,BYTE PTR es:[edi]
  4241b7:	and    esp,ebp
  4241b9:	push   es
  4241ba:	aad    0xbf
  4241bc:	add    edx,ebx
  4241be:	adc    eax,0x4f87f050
  4241c3:	outs   dx,BYTE PTR ds:[esi]
  4241c4:	aad    0x92
  4241c6:	xor    BYTE PTR [eax],0xed
  4241c9:	mov    bh,0x8b
  4241cb:	lea    esi,[ebx]
  4241cd:	push   ecx
  4241ce:	in     al,dx
  4241cf:	std    
  4241d0:	or     DWORD PTR [edi+ebx*8-0x5f],ebx
  4241d4:	or     DWORD PTR [edi+ebx*4+0x21],ebx
  4241d8:	in     al,dx
  4241d9:	push   es
  4241da:	aad    0x43
  4241dc:	add    edi,ebx
  4241de:	adc    eax,0x808ae750
  4241e3:	out    0x8a,eax
  4241e5:	sub    BYTE PTR [ebx+0x4f],0x4d
  4241e9:	aad    0x6f
  4241eb:	and    BYTE PTR [edi-0x73dac507],0x9
  4241f2:	pop    esp
  4241f3:	fbld   TBYTE PTR [ecx+0x219f5c09]
  4241f9:	dec    ebp
  4241fa:	ja     0x424187
  4241fc:	in     eax,dx
  4241fd:	ja     0x424189
  4241ff:	out    dx,eax
  424200:	in     al,dx
  424201:	push   es
  424202:	pop    edi
  424203:	out    0x8b,eax
  424205:	in     al,0xa4
  424207:	or     DWORD PTR [esi+eiz*8-0x5f],ebx
  42420b:	or     DWORD PTR [esi+ebp*4+0x21],ebx
  42420f:	xor    al,0x87
  424212:	dec    ebp
  424213:	ja     0x4241dd
  424215:	in     eax,dx
  424216:	mov    dl,0xef
  424218:	in     al,dx
  424219:	push   es
  42421a:	push   eax
  42421b:	lock xchg DWORD PTR [edi-0x19],ebx
  42421f:	enter  0x2ee4,0x80
  424223:	lock xchg BYTE PTR [ecx],cl
  424226:	pop    esp
  424227:	or     ah,BYTE PTR [ecx+0x21dd5c09]
  42422d:	dec    ebp
  42422e:	ja     0x424262
  424230:	in     eax,dx
  424231:	mov    dl,0xef
  424233:	in     al,dx
  424234:	pushf  
  424235:	push   eax
  424236:	lock xchg BYTE PTR [edi-0x69],bl
  42423a:	xor    cl,BYTE PTR [ecx]
  42423c:	jmp    0xa3ab:0x4d4d4d9a
  424243:	push   ebx
  424244:	push   0x6d
  424246:	les    ecx,FWORD PTR [ebx+edx*2]
  424249:	push   0xffffffa9
  42424b:	jo     0x4242c1
  42424d:	xchg   edi,eax
  42424e:	add    BYTE PTR [edi+0x3a2e5080],0x8d
  424255:	lea    eax,[eax-0x7812de89]
  42425b:	jno    0x4241f0
  42425d:	push   ebx
  42425e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42425f:	cdq    
  424260:	fwait
  424261:	pop    edi
  424262:	pop    ds
  424263:	or     DWORD PTR [edi],ecx
  424265:	jmp    0xd574:0x638d8d8d
  42426c:	call   0xd81fdfd0
  424271:	das    
  424272:	push   ebx
  424273:	push   0x6d
  424275:	(bad)  
  424276:	fld    DWORD PTR [eax+0x77ecdd6d]
  42427c:	out    dx,eax
  42427d:	cmp    BYTE PTR [ebp+0x25],0x80
  424281:	or     dh,BYTE PTR ds:0x80155280
  424287:	fstp   QWORD PTR ds:0xeceff0ec
  42428d:	xchg   edi,eax
  42428e:	out    dx,eax
  42428f:	push   eax
  424290:	xlat   BYTE PTR ds:[ebx]
  424291:	mov    ah,BYTE PTR [ebx+0x4b]
  424294:	fucomi st,st(4)
  424296:	push   eax
  424297:	out    0x8a,eax
  424299:	push   eax
  42429a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42429b:	mov    ebx,DWORD PTR [edi-0x59]
  42429e:	mov    bl,cl
  4242a0:	mov    dh,0x63
  4242a2:	popf   
  4242a3:	adc    eax,0x5c096fd3
  4242a8:	push   ebp
  4242a9:	scas   al,BYTE PTR es:[edi]
  4242aa:	les    ecx,FWORD PTR [eax+eax*4]
  4242ad:	mov    BYTE PTR [ecx],0x55
  4242b0:	mov    es,WORD PTR [eax-0x2ab2b097]
  4242b6:	aas    
  4242b7:	in     al,dx
  4242b8:	out    0xef,eax
  4242ba:	push   eax
  4242bb:	out    0x32,eax
  4242bd:	arpl   WORD PTR [ebx-0x587f8e27],cx
  4242c3:	and    DWORD PTR [eax-0x7d131a5d],eax
  4242c9:	arpl   WORD PTR [esi],ax
  4242cb:	shr    esi,cl
  4242cd:	sbb    BYTE PTR [ecx-0x3c],0xef
  4242d1:	inc    ebx
  4242d2:	out    0xef,eax
  4242d4:	push   eax
  4242d5:	imul   eax,DWORD PTR [eax+0xb4f32d7],0xa780a1d5
  4242df:	mov    esi,DWORD PTR [ebx+0x50]
  4242e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242e3:	mov    esp,DWORD PTR [ebx-0x59]
  4242e6:	mov    ah,ah
  4242e8:	pop    esi
  4242e9:	(bad)  
  4242ea:	into   
  4242eb:	push   ebx
  4242ec:	push   0xffffffab
  4242ee:	test   eax,0xeffb70a3
  4242f3:	lea    edx,[edi-0x78127880]
  4242f9:	adc    DWORD PTR [ebx+0x24f65e99],0x7750386f
  424303:	mov    bh,BYTE PTR [edi+esi*2-0x75]
  424307:	cmc    
  424308:	and    al,0x6f
  42430a:	cmp    BYTE PTR [eax-0x587f7510],al
  424310:	mov    bl,BYTE PTR [ebx+0x52010de2]
  424316:	cmp    dl,BYTE PTR [ebx+0x51]
  424319:	mov    dl,0xbe
  42431b:	or     al,0xab
  42431d:	push   ebx
  42431e:	lods   al,BYTE PTR ds:[esi]
  42431f:	mov    dl,0xb4
  424321:	sub    edi,edi
  424323:	adc    DWORD PTR [eax-0x10],edx
  424326:	xchg   BYTE PTR [eax-0xf7f7510],al
  42432c:	mov    al,BYTE PTR [eax-0xf7f7510]
  424332:	mov    al,BYTE PTR [eax-0xf7f7510]
  424338:	mov    al,BYTE PTR [eax-0xf7f7510]
  42433e:	mov    al,BYTE PTR [eax-0xf7f7510]
  424344:	mov    bh,BYTE PTR [edi+esi*2+0x32]
  424348:	fsincos 
  42434a:	lods   al,BYTE PTR ds:[esi]
  42434b:	pop    eax
  42434c:	xor    al,0x8a
  42434f:	and    BYTE PTR [edi+0x53ac538a],0x51
  424356:	mov    dl,0xb4
  424358:	sub    DWORD PTR [edx+0x11ff0cbe],esi
  42435e:	and    BYTE PTR [edi+0x2e248021],0x3a
  424365:	lea    ecx,[ebp+0xf09ff63]
  42436b:	sbb    ah,ch
  42436d:	lea    ecx,[ebp-0x7f750f80]
  424373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424374:	mov    dl,BYTE PTR [ebx+0x51]
  424377:	push   ebx
  424378:	lods   al,BYTE PTR ds:[esi]
  424379:	mov    dl,0xbe
  42437b:	or     al,0xb2
  42437d:	mov    ah,0x29
  42437f:	call   DWORD PTR [ecx]
  424381:	arpl   si,di
  424383:	or     DWORD PTR [edi],ecx
  424385:	jecxz  0x424373
  424387:	lea    ecx,[ebp-0x72327080]
  42438d:	lea    ecx,[ebp-0x7f756880]
  424393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424394:	mov    dl,BYTE PTR [ebx+0x7e]
  424397:	push   ebx
  424398:	lods   al,BYTE PTR ds:[esi]
  424399:	mov    dl,0x7
  42439b:	or     al,0xb2
  42439d:	mov    ah,0x29
  42439f:	call   DWORD PTR [ebx+eiz*2-0x6cf0f602]
  4243a6:	in     al,dx
  4243a7:	lea    ecx,[ebp+0x50eff0ec]
  4243ad:	lock test DWORD PTR [eax-0x7f81ac09],0xb2ac5382
  4243b8:	pop    es
  4243b9:	or     al,0xb2
  4243bb:	mov    ah,0x29
  4243bd:	call   DWORD PTR [eax+edx*2-0x687fcd69]
  4243c4:	xor    ah,BYTE PTR [ebx-0x9]
  4243c7:	aad    0x27
  4243c9:	xor    BYTE PTR [edi-0x76],0x80
  4243cd:	xchg   edi,eax
  4243ce:	mov    dl,BYTE PTR [ebx-0x64]
  4243d1:	push   ebx
  4243d2:	cld    
  4243d3:	mov    dl,0xf8
  4243d5:	sub    DWORD PTR [edx-0x400f37a],esi
  4243db:	adc    BYTE PTR [edi+0x1572c332],0x5f
  4243e2:	out    dx,al
  4243e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243e4:	xlat   BYTE PTR ds:[ebx]
  4243e5:	rol    BYTE PTR [eax-0x687f7589],0x8a
  4243ec:	push   ebx
  4243ed:	pushf  
  4243ee:	push   ebx
  4243ef:	cld    
  4243f0:	mov    dl,0xf8
  4243f2:	sub    DWORD PTR [edx-0x400f37a],esi
  4243f8:	adc    BYTE PTR [edi+0x1572c332],0x5f
  4243ff:	jne    0x4243a7
  424401:	jno    0x42440c
  424403:	push   gs
  424405:	or     al,0x8d
  424407:	lea    eax,[eax+0x77808a77]
  42440d:	mov    al,BYTE PTR [eax+0x77808aa7]
  424413:	mov    dl,BYTE PTR [ebx+0x7c]
  424416:	push   ebx
  424417:	add    al,0xb2
  424419:	test   BYTE PTR [ecx],ch
  42441b:	mov    dl,0xc4
  42441d:	or     al,0xff
  42441f:	add    BYTE PTR [eax+0x6ac33277],0x15
  424426:	in     al,dx
  424427:	mov    dl,0x80
  424429:	jge    0x42449c
  42442b:	in     al,dx
  42442c:	lock out dx,eax
  42442e:	push   eax
  42442f:	lock test BYTE PTR [eax-0x687f7510],al
  424436:	mov    dl,BYTE PTR [ebx+0x51]
  424439:	push   ebx
  42443a:	pushf  
  42443b:	mov    dl,0xbe
  42443d:	or     al,0xb2
  42443f:	clc    
  424440:	sub    edi,edi
  424442:	inc    BYTE PTR [eax-0xfaf7569]
  424448:	jp     0x4243ca
  42444a:	out    dx,eax
  42444b:	push   eax
  42444c:	lock stc 
  42444e:	xor    al,0x8a
  424451:	push   ebx
  424452:	jle    0x4244a7
  424454:	sub    dh,BYTE PTR [edx+0x7b229ba]
  42445a:	or     al,0xff
  42445c:	mov    dh,0x80
  42445e:	lock stc 
  424460:	arpl   si,di
  424462:	aad    0x6f
  424464:	in     al,dx
  424465:	lock out dx,eax
  424467:	push   eax
  424468:	lock jp 0x4243eb
  42446b:	lock mov al,BYTE PTR [eax+0x51538a97]
  424472:	push   ebx
  424473:	pushf  
  424474:	mov    dl,0xbe
  424476:	or     al,0xb2
  424478:	clc    
  424479:	sub    edi,edi
  42447b:	(bad)  
  42447c:	in     al,dx
  42447d:	jge    0x4244a0
  42447f:	jl     0x4244f8
  424481:	xor    cl,0x24
  424484:	outs   dx,DWORD PTR ds:[esi]
  424485:	cmp    ah,ch
  424487:	lock out dx,eax
  424489:	push   eax
  42448a:	lock xchg esp,eax
  42448d:	in     al,dx
  42448e:	xor    al,0x87
  424491:	xor    BYTE PTR [edi+0x21],0x80
  424495:	int    0x32
  424497:	cmp    cl,BYTE PTR [ebp+0x714d968d]
  42449d:	xor    BYTE PTR [edi+0x21],0x4d
  4244a1:	xlat   BYTE PTR ds:[ebx]
  4244a2:	xchg   DWORD PTR [eax-0x72c5cd33],eax
  4244a8:	lea    ecx,[ebp+0xa]
  4244ab:	and    DWORD PTR [edi+esi*2-0x7d],edi
  4244af:	add    dl,ch
  4244b1:	cs jne 0x424530
  4244b4:	ja     0x424439
  4244b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244b7:	push   ss
  4244b8:	outs   dx,DWORD PTR ds:[esi]
  4244b9:	cmp    BYTE PTR [eax-0x687f7510],al
  4244bf:	mov    dl,BYTE PTR [ebx+0x51]
  4244c2:	push   ebx
  4244c3:	pushf  
  4244c4:	mov    dl,0xbe
  4244c6:	or     al,0xb2
  4244c8:	clc    
  4244c9:	sub    edi,edi
  4244cb:	(bad)  
  4244cc:	push   eax
  4244cd:	ja     0x4244c8
  4244cf:	arpl   bp,di
  4244d1:	xlat   BYTE PTR ds:[ebx]
  4244d2:	pop    ecx
  4244d3:	xor    BYTE PTR [edi-0x75],0x80
  4244d7:	lock mov edx,DWORD PTR [ebx-0x4]
  4244db:	push   ebx
  4244dc:	sub    dh,BYTE PTR [edx-0x794dd646]
  4244e2:	or     al,0xff
  4244e4:	mov    dl,0x80
  4244e6:	lock add DWORD PTR [eax-0x63ac7c69],0x53
  4244ee:	push   ecx
  4244ef:	mov    dl,0xf8
  4244f1:	sub    esp,ebp
  4244f3:	add    BYTE PTR [eax-0x327fde89],0x32
  4244fa:	cmp    cl,BYTE PTR [ebp+0xcbeb28d]
  424500:	push   DWORD PTR [esi-0x556bddf7]
  424506:	dec    ebp
  424507:	or     dh,BYTE PTR ds:0x808a7780
  42450d:	lock mov dl,BYTE PTR [ebx-0x4]
  424511:	push   ebx
  424512:	sub    dh,BYTE PTR [edx-0x454df37a]
  424518:	sub    edi,edi
  42451a:	mov    dl,0x63
  42451c:	ja     0x424517
  42451e:	xlat   BYTE PTR ds:[ebx]
  42451f:	mov    al,0x80
  424521:	ja     0x4244a5
  424523:	xor    al,0x82
  424526:	push   ebx
  424527:	sub    dl,BYTE PTR [ebx-0x4]
  42452a:	mov    dl,0x86
  42452c:	or     al,0xb2
  42452e:	mov    edx,0x63fdff29
  424533:	mov    al,ds:0x4d954c09
  424538:	dec    ebp
  424539:	dec    ebp
  42453a:	xor    BYTE PTR [edi-0x76],0x80
  42453e:	lock mov dl,BYTE PTR [ebx-0x4]
  424542:	push   ebx
  424543:	sub    dh,BYTE PTR [edx-0x454df37a]
  424549:	sub    edi,edi
  42454b:	mov    dl,0x63
  42454d:	ja     0x424548
  42454f:	xlat   BYTE PTR ds:[ebx]
  424550:	mov    al,0x80
  424552:	ja     0x4244df
  424554:	xor    al,0x8b
  424557:	push   ebx
  424558:	cld    
  424559:	push   ebx
  42455a:	sub    dh,BYTE PTR [edx-0x454df37a]
  424560:	sub    edi,edi
  424562:	mov    dl,0x3a
  424564:	ja     0x4244ec
  424566:	mov    esi,0x8d8d3aae
  42456b:	jl     0x4245e4
  42456d:	xchg   DWORD PTR [ecx+0x7c66f7ea],esi
  424573:	ja     0x42453d
  424575:	fld    DWORD PTR [ebp-0x587f12e3]
  42457b:	mov    al,BYTE PTR [eax+0x4538a77]
  424581:	push   ebx
  424582:	jl     0x424536
  424584:	les    ecx,FWORD PTR [edx+esi*4]
  424587:	test   BYTE PTR [ecx],ch
  424589:	inc    DWORD PTR [edx-0x72c5e442]
  42458f:	lea    eax,[eax-0xf7f7589]
  424595:	mov    dl,BYTE PTR [ebx-0x4]
  424598:	push   ebx
  424599:	sub    dh,BYTE PTR [edx-0x454df37a]
  42459f:	sub    edi,edi
  4245a1:	mov    dl,0x50
  4245a3:	ja     0x42452c
  4245a5:	xor    BYTE PTR [edi-0x76],0x80
  4245a9:	lock mov dl,BYTE PTR [ebx-0x4]
  4245ad:	push   ebx
  4245ae:	sub    dh,BYTE PTR [edx-0x454df37a]
  4245b4:	sub    edi,edi
  4245b6:	mov    dl,0x50
  4245b8:	ja     0x424582
  4245ba:	xor    al,0x8a
  4245bd:	xor    BYTE PTR [edi-0x76],0x53
  4245c1:	push   ecx
  4245c2:	push   ebx
  4245c3:	jl     0x424577
  4245c5:	test   BYTE PTR [ecx],ch
  4245c7:	mov    dl,0xbe
  4245c9:	or     al,0xff
  4245cb:	std    
  4245cc:	xor    BYTE PTR [edi+0x7a],0x63
  4245d0:	std    
  4245d1:	aad    0x6f
  4245d3:	sub    dh,0x1e
  4245d6:	push   eax
  4245d7:	ja     0x424560
  4245d9:	xor    BYTE PTR [edi-0x7c],0x80
  4245dd:	out    dx,al
  4245de:	push   ds
  4245df:	push   eax
  4245e0:	ja     0x4245aa
  4245e2:	xor    BYTE PTR [edi-0x76],0x80
  4245e6:	lock mov dl,BYTE PTR [ebx-0x4]
  4245ea:	push   ebx
  4245eb:	sub    dh,BYTE PTR [edx-0x794dd646]
  4245f1:	or     al,0xff
  4245f3:	mov    dl,0x80
  4245f5:	lock xchg DWORD PTR [ebx-0x4e],esp
  4245f9:	aad    0x55
  4245fb:	xor    BYTE PTR [edi-0x76],0x80
  4245ff:	lock mov dl,BYTE PTR [ebx+0x2a]
  424603:	push   ebx
  424604:	cld    
  424605:	mov    dl,0xba
  424607:	sub    DWORD PTR [edx-0x4d00f37a],esi
  42460d:	xor    al,0x87
  424610:	mov    dl,0xbe
  424612:	sub    esp,DWORD PTR [ebx-0x4e]
  424615:	aad    0x1d
  424617:	xor    al,0x87
  42461a:	xor    BYTE PTR [edi+0x21],0x80
  42461e:	int    0x32
  424620:	cmp    cl,BYTE PTR [ebp+0x705c098d]
  424626:	xchg   esi,eax
  424627:	dec    ebp
  424628:	xlat   BYTE PTR ds:[ebx]
  424629:	stc    
  42462a:	dec    ebp
  42462b:	or     ch,bh
  42462d:	les    ebx,FWORD PTR [edi]
  42462f:	xor    BYTE PTR [edi-0x38],0xec
  424633:	ja     0x424624
  424635:	xor    al,0x21
  424638:	adc    BYTE PTR [eax+0x32],0x3a
  42463c:	lea    ecx,[ebp+0xa0c6aed]
  424642:	dec    ebp
  424643:	xlat   BYTE PTR ds:[ebx]
  424644:	stc    
  424645:	dec    ebp
  424646:	xchg   esi,eax
  424647:	out    dx,eax
  424648:	push   eax
  424649:	ja     0x424613
  42464b:	xor    BYTE PTR [edi-0x76],0x80
  42464f:	lock mov dl,BYTE PTR [ebx-0x4]
  424653:	push   ebx
  424654:	sub    dh,BYTE PTR [edx-0x794dd646]
  42465a:	or     al,0xff
  42465c:	mov    dl,0x80
  42465e:	lock enter 0xb263,0x80
  424663:	ja     0x4245f0
  424665:	xor    al,0x8b
  424668:	xlat   BYTE PTR ds:[ebx]
  424669:	push   cs
  42466a:	push   ebx
  42466b:	cld    
  42466c:	push   ebx
  42466d:	sub    dh,BYTE PTR [edx-0x454df37a]
  424673:	sub    edi,edi
  424675:	mov    dl,0x3a
  424677:	ja     0x4245ff
  424679:	les    ebx,FWORD PTR ds:0xfc532a53
  42467f:	mov    dl,0xba
  424681:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424687:	xor    al,0xc8
  42468a:	or     DWORD PTR [edx],esp
  42468c:	mov    dl,0x80
  42468e:	lock test BYTE PTR [eax-0x12],dl
  424692:	and    BYTE PTR [eax-0xf7f7489],al
  424698:	mov    edx,DWORD PTR [ebx-0x4]
  42469b:	push   ebx
  42469c:	sub    dh,BYTE PTR [edx-0x454df37a]
  4246a2:	sub    edi,edi
  4246a4:	mov    dl,0xec
  4246a6:	add    BYTE PTR [eax-0xf7f7589],0x8a
  4246ad:	push   ebx
  4246ae:	sub    dl,BYTE PTR [ebx-0x4]
  4246b1:	mov    dl,0xba
  4246b3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4246b9:	xor    al,0x84
  4246bc:	pop    edi
  4246bd:	out    dx,al
  4246be:	and    BYTE PTR [ecx],cl
  4246c0:	dec    edi
  4246c1:	adc    DWORD PTR ds:0x77804d4d,ecx
  4246c7:	xor    al,BYTE PTR [eax-0x4d92cd10]
  4246cd:	xchg   BYTE PTR [ecx],ch
  4246cf:	add    DWORD PTR [ecx],esp
  4246d1:	add    esi,ebp
  4246d3:	lea    ecx,[ebp-0x7f4d0073]
  4246d9:	lock not DWORD PTR [edi-0xa]
  4246dd:	and    al,0x6f
  4246df:	cmp    BYTE PTR [esi+0x4d4d8afe],bh
  4246e5:	xor    BYTE PTR [edi-0x76],0x80
  4246e9:	lock mov dl,BYTE PTR [ebx-0x4]
  4246ed:	push   ebx
  4246ee:	sub    dh,BYTE PTR [edx-0x454df37a]
  4246f4:	sub    edi,edi
  4246f6:	mov    dl,0x5f
  4246f8:	ja     0x424680
  4246fa:	xlat   BYTE PTR ds:[ebx]
  4246fb:	out    dx,eax
  4246fc:	xor    BYTE PTR [edi-0x75],0x80
  424700:	lock mov eax,esp
  424703:	outs   dx,DWORD PTR ds:[esi]
  424704:	xor    BYTE PTR [edi-0x76],0x80
  424708:	lock mov dl,BYTE PTR [ebx+0x2a]
  42470c:	push   ebx
  42470d:	cld    
  42470e:	stos   DWORD PTR es:[edi],eax
  42470f:	mov    dl,0xba
  424711:	sub    DWORD PTR [edx-0x56f37a],esi
  424717:	mov    dl,0xa3
  424719:	jo     0x424716
  42471b:	out    dx,eax
  42471c:	lea    edx,[edi-0x78127880]
  424722:	xor    eax,0xf68a777c
  424727:	and    al,0x6f
  424729:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  42472d:	cmc    
  42472e:	and    al,0x6f
  424730:	cmp    BYTE PTR [eax+0x77502177],al
  424736:	and    DWORD PTR [ecx+0x77806a80],ebx
  42473c:	mov    al,BYTE PTR [eax+0xde28a97]
  424742:	pusha  
  424743:	and    ah,BYTE PTR [edi+ebp*2]
  424746:	cmp    BYTE PTR [ebx-0x4e],dl
  424749:	test   eax,0xf8b27e53
  42474e:	sub    DWORD PTR [edx-0x400f37a],esi
  424754:	adc    BYTE PTR [edi+0x9f763ef],0xf
  42475b:	loopne 0x424797
  42475d:	lea    ecx,[ebp-0x7f108880]
  424763:	xchg   edi,eax
  424764:	out    dx,eax
  424765:	in     al,dx
  424766:	or     ah,BYTE PTR [ebp-0x65]
  424769:	push   eax
  42476a:	xchg   edi,eax
  42476b:	enter  0x777c,0x8b
  42476f:	icebp  
  424770:	and    al,0x6f
  424772:	cmp    BYTE PTR [eax-0x687f7489],al
  424778:	mov    edx,DWORD PTR [ebx+0x7e]
  42477b:	mov    dl,0xf8
  42477d:	sub    DWORD PTR [ebx-0x4e],edx
  424780:	mov    dl,0x86
  424782:	or     al,0xff
  424784:	sti    
  424785:	adc    BYTE PTR [edi-0x75187f76],0x53
  42478c:	mov    dh,0x53
  42478e:	or     eax,0xb229bcb2
  424793:	pop    es
  424794:	or     al,0xff
  424796:	pushf  
  424797:	and    bh,0xc8
  42479a:	pop    edi
  42479b:	xchg   ebp,eax
  42479c:	jl     0x42477b
  42479e:	or     DWORD PTR [edi],ecx
  4247a0:	mov    bl,0x3a
  4247a2:	lea    ecx,[ebp-0x7f376880]
  4247a8:	ja     0x424799
  4247aa:	in     al,dx
  4247ab:	jmp    0x9780:0x8d8d8d2e
  4247b2:	out    dx,eax
  4247b3:	and    bh,0xc8
  4247b6:	inc    ebx
  4247b7:	fwait
  4247b8:	push   ebp
  4247b9:	and    bh,0x8a
  4247bc:	xchg   ebx,eax
  4247bd:	and    BYTE PTR [edi+0x53cb538a],0x4
  4247c4:	mov    dl,0x61
  4247c6:	or     al,0xb2
  4247c8:	mov    ah,0x29
  4247ca:	inc    DWORD PTR [esi]
  4247cc:	push   eax
  4247cd:	xchg   edi,eax
  4247ce:	and    DWORD PTR [ebx-0x64],0x9
  4247d2:	jns    0x80cfd512
  4247d8:	xchg   edi,eax
  4247d9:	mov    al,BYTE PTR [eax-0x49ac7519]
  4247df:	push   ebx
  4247e0:	or     eax,0xb20c07b2
  4247e5:	mov    esp,0x509cff29
  4247ea:	xchg   edi,eax
  4247eb:	xor    bh,BYTE PTR [edi+esi*2+0x21]
  4247ef:	repz and al,0x6f
  4247f2:	cmp    BYTE PTR [eax-0x187f7569],al
  4247f8:	mov    dl,BYTE PTR [ebx-0x4a]
  4247fb:	push   ebx
  4247fc:	or     eax,0xb20c07b2
  424801:	mov    esp,0xbe9cff29
  424806:	add    eax,0x808d8d8d
  42480b:	xchg   edi,eax
  42480c:	mov    al,BYTE PTR [eax+0xbed8ad7]
  424812:	or     eax,0x2b2b653
  424817:	sub    DWORD PTR [edx+0x7eff0c07],esi
  42481d:	add    ebx,edx
  42481f:	mov    esi,DWORD PTR [esi+0x97e6388]
  424825:	in     eax,dx
  424826:	jmp    0x43cfd5b8
  42482b:	ret    0xe501
  42482e:	or     ch,bh
  424830:	push   eax
  424831:	xlat   BYTE PTR ds:[ebx]
  424832:	stc    
  424833:	or     DWORD PTR [ebx+ebx*1-0x5e],ebx
  424837:	clc    
  424838:	dec    ebp
  424839:	or     DWORD PTR [ebp-0x7868af73],ecx
  42483f:	adc    BYTE PTR [edi-0x7f8e1379],0xd7
  424846:	xchg   esp,ebp
  424848:	xor    DWORD PTR [edx+0x2b22907],0x9c2ff0c
  424852:	pop    esp
  424853:	sbb    esi,DWORD PTR [edx+0xba22107]
  424859:	mul    BYTE PTR [edi+ebp*2]
  42485c:	cmp    BYTE PTR [eax-0x29],dl
  42485f:	xchg   DWORD PTR [eax-0x69],edx
  424862:	xchg   BYTE PTR [eax-0x287f7869],al
  424868:	xchg   DWORD PTR [ebx-0x4a],edx
  42486b:	in     eax,dx
  42486c:	or     ecx,DWORD PTR ds:0xb20c07b2
  424872:	add    ch,BYTE PTR [ecx]
  424874:	(bad)  
  424875:	jle    0x424863
  424877:	xchg   edi,eax
  424878:	out    dx,eax
  424879:	push   eax
  42487a:	xchg   edi,eax
  42487b:	xchg   DWORD PTR [eax-0x287fde69],eax
  424881:	and    DWORD PTR [ebx-0x4a],edx
  424884:	in     eax,dx
  424885:	or     ecx,DWORD PTR ds:0xb22902b2
  42488b:	pop    es
  42488c:	or     al,0xff
  42488e:	jle    0x424810
  424890:	xlat   BYTE PTR ds:[ebx]
  424891:	xchg   BYTE PTR [ebx-0x3e],ah
  424894:	xlat   BYTE PTR ds:[ebx]
  424895:	rol    BYTE PTR [eax-0x287fde69],0x21
  42489c:	push   ebx
  42489d:	mov    dh,0xed
  42489f:	or     ecx,DWORD PTR ds:0xb22902b2
  4248a5:	pop    es
  4248a6:	or     al,0xff
  4248a8:	jle    0x42482a
  4248aa:	xlat   BYTE PTR ds:[ebx]
  4248ab:	xchg   BYTE PTR [ebx-0x3e],ah
  4248ae:	xlat   BYTE PTR ds:[ebx]
  4248af:	out    dx,eax
  4248b0:	adc    BYTE PTR [edi-0x7c287f79],0x3a
  4248b7:	aam    0xed
  4248b9:	jl     0x4248c7
  4248bb:	dec    ebp
  4248bc:	lock stc 
  4248be:	or     DWORD PTR [edi+0x12],ecx
  4248c1:	dec    ebp
  4248c2:	dec    ebp
  4248c3:	dec    ebp
  4248c4:	cmp    ah,BYTE PTR [edi-0x74687fce]
  4248ca:	adc    bh,0x8b
  4248cd:	push   ebx
  4248ce:	mov    dh,0xed
  4248d0:	or     ecx,DWORD PTR ds:0xb22902b2
  4248d6:	pop    es
  4248d7:	or     al,0xff
  4248d9:	jle    0x42485b
  4248db:	xlat   BYTE PTR ds:[ebx]
  4248dc:	xor    al,BYTE PTR [eax-0x2a9c3719]
  4248e2:	pushf  
  4248e3:	in     eax,0xd3
  4248e5:	sub    eax,0x808a9780
  4248ea:	xlat   BYTE PTR ds:[ebx]
  4248eb:	mov    dl,BYTE PTR [ebx-0x4a]
  4248ee:	in     eax,dx
  4248ef:	or     ecx,DWORD PTR ds:0xb20c07b2
  4248f5:	add    ch,BYTE PTR [ecx]
  4248f7:	in     al,dx
  4248f8:	je     0x4248f9
  4248fa:	jle    0x42487c
  4248fc:	popf   
  4248fd:	out    dx,al
  4248fe:	arpl   WORD PTR [ebx],ax
  424900:	or     DWORD PTR [edi-0x12],ecx
  424903:	dec    ebp
  424904:	dec    ebp
  424905:	dec    ebp
  424906:	mov    ds:0x53847780,eax
  42490b:	mov    dl,0x80
  42490d:	lock test ch,ch
  424910:	add    eax,0xa6c4ab0d
  424915:	xor    BYTE PTR [edi-0x76],0x53
  424919:	mov    dl,0x80
  42491b:	lock mov dl,BYTE PTR [ebx+0x51]
  42491f:	mov    dl,0xba
  424921:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424927:	test   eax,0x8deffb70
  42492c:	xchg   edi,eax
  42492d:	add    BYTE PTR [edi-0x7285785e],0x8d
  424934:	lea    edi,[edi+esi*2-0x76]
  424938:	mul    BYTE PTR [edi+ebp*2]
  42493b:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  42493f:	cmc    
  424940:	and    al,0x6f
  424942:	cmp    BYTE PTR [eax-0xf7f7589],al
  424948:	mov    bl,BYTE PTR [ecx-0x5f21d65]
  42494e:	and    ah,BYTE PTR [edi+ebp*2]
  424951:	cmp    BYTE PTR [ebx-0x4],dl
  424954:	mov    dl,0x86
  424956:	or     al,0xae
  424958:	push   ebx
  424959:	(bad)  
  42495a:	mov    dl,0xba
  42495c:	sub    edi,edi
  42495e:	mov    dl,0x50
  424960:	ja     0x4248e6
  424962:	xor    BYTE PTR [edi-0x76],0x80
  424966:	lock mov dl,BYTE PTR [ebx-0x4]
  42496a:	mov    dl,0x86
  42496c:	or     al,0x53
  42496e:	(bad)  
  42496f:	mov    dl,0xba
  424971:	sub    edi,edi
  424973:	mov    dl,0x50
  424975:	ja     0x42496e
  424977:	and    bh,0x25
  42497a:	xor    BYTE PTR [edi-0x79],0x80
  42497e:	lock xchg DWORD PTR [ebx-0x4e],edx
  424982:	push   eax
  424983:	ja     0x42490c
  424985:	mov    ds:0xa3f68777,al
  42498a:	outs   dx,DWORD PTR ds:[esi]
  42498b:	cmp    BYTE PTR [eax-0xf7f3789],al
  424991:	enter  0xb253,0x50
  424995:	ja     0x42495f
  424997:	mov    ds:0xe9f6c877,al
  42499c:	outs   dx,DWORD PTR ds:[esi]
  42499d:	cmp    BYTE PTR [eax-0xf7fcd89],al
  4249a3:	xor    dl,BYTE PTR [ebx-0x4e]
  4249a6:	push   eax
  4249a7:	ja     0x4249db
  4249a9:	mov    ds:0x24fa3277,al
  4249ae:	outs   dx,DWORD PTR ds:[esi]
  4249af:	cmp    BYTE PTR [eax-0xf7f0689],al
  4249b5:	stc    
  4249b6:	push   ebx
  4249b7:	mov    dl,0x50
  4249b9:	ja     0x4249b4
  4249bb:	mov    ds:0x24f6f977,al
  4249c0:	out    dx,al
  4249c1:	cmp    BYTE PTR [edi+esi*2+0x25],bh
  4249c5:	jmp    0x807ad68c
  4249ca:	ja     0x4249bb
  4249cc:	dec    edi
  4249cd:	push   0x9
  4249cf:	movd   mm5,DWORD PTR [edi]
  4249d2:	lea    ecx,[ebp+0x4f217780]
  4249d8:	push   0x9
  4249da:	(bad)  
  4249dc:	das    
  4249dd:	lea    ecx,[ebp+0x4f1d7780]
  4249e3:	push   0x9
  4249e5:	mov    db5,edi
  4249e8:	lea    ecx,[ebp-0x7fda8880]
  4249ee:	ja     0x424a15
  4249f0:	xor    al,0xef
  4249f3:	mov    dl,0x86
  4249f5:	or     al,0x57
  4249f7:	(bad)  
  4249f8:	hlt    
  4249f9:	lea    ecx,[ebp+0x93a5fb9]
  4249ff:	dec    edi
  424a00:	cmp    ch,BYTE PTR [edi]
  424a02:	lea    ecx,[ebp-0x7f758880]
  424a08:	lock mov dl,BYTE PTR [ebx-0x4]
  424a0c:	mov    dl,0x86
  424a0e:	or     al,0x53
  424a10:	(bad)  
  424a11:	mov    dl,0xba
  424a13:	sub    edi,edi
  424a15:	mov    dl,0x50
  424a17:	ja     0x424a10
  424a19:	xor    BYTE PTR [edi-0x76],0x80
  424a1d:	ja     0x4249a9
  424a1f:	xor    BYTE PTR [edi-0x11],0x80
  424a23:	lock out dx,eax
  424a25:	in     al,dx
  424a26:	jge    0x424a8d
  424a28:	adc    BYTE PTR [edx+0x25f0500a],0x4f
  424a2f:	push   0x9
  424a31:	cvtpi2ps xmm5,mm6
  424a34:	lea    ecx,[ebp-0x9858884]
  424a3a:	and    al,0x79
  424a3c:	cmp    BYTE PTR [eax-0x7f6c8589],al
  424a42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a43:	jp     0x424a98
  424a45:	cld    
  424a46:	push   ebx
  424a47:	add    esi,DWORD PTR [edx-0x4b4df37a]
  424a4d:	sub    edi,edi
  424a4f:	adc    BYTE PTR [eax-0x59],0x7a
  424a53:	xor    BYTE PTR [edi-0x76],0x80
  424a57:	ja     0x4249e3
  424a59:	or     dh,0x2e
  424a5c:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  424a62:	stos   BYTE PTR es:[edi],al
  424a63:	gs in  al,dx
  424a65:	jno    0x4249e7
  424a67:	ja     0x4249f3
  424a69:	xor    BYTE PTR [edi-0x76],0x80
  424a6d:	into   
  424a6e:	cmp    cl,BYTE PTR es:[ebp+0x501d808d]
  424a75:	xchg   edi,eax
  424a76:	and    DWORD PTR [ebx-0x5c],esp
  424a79:	xlat   BYTE PTR ds:[ebx]
  424a7a:	imul   eax,DWORD PTR [eax-0x317f3710],0x32
  424a81:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424a87:	stos   BYTE PTR es:[edi],al
  424a88:	adc    BYTE PTR [edi-0x12aeac38],0xc2
  424a8f:	or     eax,0xb20cbeb2
  424a94:	clc    
  424a95:	sub    edi,edi
  424a97:	mov    dh,0x80
  424a99:	lock and DWORD PTR [edx-0x6cf561b3],ebp
  424aa0:	dec    ebp
  424aa1:	or     ah,BYTE PTR ds:0x8021f080
  424aa7:	xchg   edx,eax
  424aa8:	xchg   ebp,eax
  424aa9:	cmp    BYTE PTR [edi+0xa],0x43
  424aad:	std    
  424aae:	xchg   esi,eax
  424aaf:	in     al,dx
  424ab0:	je     0x424abc
  424ab2:	xchg   BYTE PTR [ecx-0x7f727291],ah
  424ab8:	lock and eax,0x3a36ce80
  424abe:	lea    ecx,[ebp-0x61b2e2b0]
  424ac4:	xchg   ebp,eax
  424ac5:	dec    ebp
  424ac6:	xlat   BYTE PTR ds:[ebx]
  424ac7:	out    dx,eax
  424ac8:	xchg   ebx,eax
  424ac9:	xchg   BYTE PTR [edi-0x7f727212],ch
  424acf:	xchg   ebx,eax
  424ad0:	gs in  al,dx
  424ad2:	xchg   esp,eax
  424ad3:	or     DWORD PTR [eax+ebx*8+0x15],ebx
  424ad7:	add    DWORD PTR [ebp+0x71],esi
  424ada:	sbb    eax,0x801d7750
  424adf:	ja     0x424a6b
  424ae1:	xor    al,0x8a
  424ae4:	push   ebx
  424ae5:	cld    
  424ae6:	in     eax,dx
  424ae7:	add    eax,0x29bab20d
  424aec:	mov    dl,0x86
  424aee:	or     al,0xff
  424af0:	mov    dl,0x9
  424af2:	pop    esp
  424af3:	fisubr DWORD PTR [edi+0x50]
  424af6:	xchg   edi,eax
  424af7:	and    eax,0xf09fd63
  424afc:	mov    esp,0x808d8d8d
  424b01:	ja     0x424a8d
  424b03:	xor    al,0x8a
  424b06:	push   ebx
  424b07:	cld    
  424b08:	in     eax,dx
  424b09:	add    eax,0x29bab20d
  424b0e:	mov    dl,0x86
  424b10:	or     al,0xff
  424b12:	mov    dl,0x50
  424b14:	ja     0x424a99
  424b16:	xor    BYTE PTR [edi-0x75],0x80
  424b1a:	lock mov ebp,ebp
  424b1d:	add    eax,0xb2fc530d
  424b22:	mov    edx,0xc86b229
  424b27:	push   DWORD PTR [edx+0x6fda5c09]
  424b2d:	inc    ebx
  424b2e:	std    
  424b2f:	pop    edi
  424b30:	lock or DWORD PTR [ecx],0xffffffce
  424b34:	and    cl,BYTE PTR [ebp-0xf7f7273]
  424b3a:	sbb    eax,0x50efb2ed
  424b3f:	lock sbb eax,0xf080ecc4
  424b45:	sbb    eax,0x805dd880
  424b4a:	push   cs
  424b4b:	push   eax
  424b4c:	ja     0x424ad0
  424b4e:	jge    0x424b9f
  424b50:	not    ebp
  424b52:	xor    BYTE PTR [ebx-0x9],cl
  424b55:	xor    edi,ebx
  424b57:	in     al,dx
  424b58:	ja     0x424adc
  424b5a:	les    ecx,FWORD PTR [eax+eax*4]
  424b5d:	sti    
  424b5e:	or     al,BYTE PTR [eax+0x74ecee92]
  424b64:	or     al,BYTE PTR [esi-0x7272d05d]
  424b6a:	xor    BYTE PTR [edi+0x1d],0x80
  424b6e:	jge    0x424b5f
  424b70:	push   eax
  424b71:	lock add BYTE PTR [eax-0x687f7510],0x8a
  424b79:	push   ebx
  424b7a:	push   ecx
  424b7b:	in     eax,dx
  424b7c:	ret    0xb20d
  424b7f:	mov    esi,0x29f8b20c
  424b84:	(bad)  
  424b85:	(bad)  
  424b86:	pop    edi
  424b87:	lock adc ch,0x1d
  424b8b:	xor    al,0xef
  424b8e:	in     al,dx
  424b8f:	jge    0x424bb2
  424b91:	dec    ebp
  424b92:	xlat   BYTE PTR ds:[ebx]
  424b93:	add    BYTE PTR [eax-0x13691193],0x74
  424b9a:	or     al,BYTE PTR [esi-0x7272137b]
  424ba0:	xor    BYTE PTR [edi+0x1d],0x80
  424ba4:	lock mov eax,DWORD PTR [eax+0x51538b97]
  424bab:	mov    dl,0xbe
  424bad:	or     al,0xed
  424baf:	ret    0xed0d
  424bb2:	push   0x3d
  424bb4:	mov    dl,0xf8
  424bb6:	sub    edi,edi
  424bb8:	(bad)  
  424bb9:	cmp    dh,al
  424bbb:	add    DWORD PTR [eax+0x77502597],0x1d
  424bc2:	xor    BYTE PTR [edi-0x75],0x80
  424bc6:	lock mov ebp,ebp
  424bc9:	add    eax,0xb2fc530d
  424bce:	mov    edx,0xc86b229
  424bd3:	push   DWORD PTR [edx+0x925f080]
  424bd9:	pop    esp
  424bda:	jg     0x424c4b
  424bdc:	inc    ebx
  424bdd:	std    
  424bde:	pop    edi
  424bdf:	lock or DWORD PTR [ecx],0x4c
  424be3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424be4:	dec    ebp
  424be5:	dec    ebp
  424be6:	dec    ebp
  424be7:	or     dh,0x26
  424bea:	cmp    cl,BYTE PTR [ebp-0x28e29c73]
  424bf0:	push   ebx
  424bf1:	xor    al,0x32
  424bf4:	or     dh,0x32
  424bf7:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424bfd:	stos   BYTE PTR es:[edi],al
  424bfe:	adc    BYTE PTR [edi-0x12aeacce],0xc2
  424c05:	or     eax,0xb20cbeb2
  424c0a:	clc    
  424c0b:	sub    edi,edi
  424c0d:	mov    dh,0x80
  424c0f:	lock and DWORD PTR [edx-0x6c6a61b3],ebp
  424c16:	dec    ebp
  424c17:	or     ah,BYTE PTR ds:0xf096a4f
  424c1d:	pushf  
  424c1e:	or     al,0x8d
  424c20:	lea    eax,[eax-0x317fda69]
  424c26:	cmp    BYTE PTR [edx],0x8d
  424c29:	lea    eax,[eax+0x53fd808d]
  424c2f:	push   ecx
  424c30:	in     eax,dx
  424c31:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424c37:	test   BYTE PTR [ecx],ch
  424c39:	(bad)  
  424c3a:	std    
  424c3b:	or     DWORD PTR [edi],ecx
  424c3d:	jb     0x424c79
  424c3f:	lea    ecx,[ebp-0x7f758880]
  424c45:	lock mov dl,BYTE PTR [ebx-0x4]
  424c49:	in     eax,dx
  424c4a:	add    eax,0xc86b20d
  424c4f:	mov    dl,0xba
  424c51:	sub    edi,edi
  424c53:	mov    dl,0x50
  424c55:	ja     0x424bdd
  424c57:	pop    esi
  424c58:	imul   ebp,ecx,0x7d01386f
  424c5e:	test   BYTE PTR [eax-0x10],dl
  424c61:	pop    esi
  424c62:	push   eax
  424c63:	lock data16 jl 0x424cde
  424c67:	inc    esi
  424c68:	sbb    ecx,ebp
  424c6a:	outs   dx,DWORD PTR ds:[esi]
  424c6b:	cmp    BYTE PTR [edi+esi*2+0x62],bh
  424c6f:	call   0x507abc5d
  424c74:	ja     0x424ccc
  424c76:	jl     0x424cef
  424c78:	push   0xfffffff6
  424c7a:	and    al,0x6f
  424c7c:	cmp    BYTE PTR [ebx+0x70],dl
  424c7f:	adc    BYTE PTR [ebp+0x7b24601],0xc
  424c86:	mov    ds:0x8df4c4c2,al
  424c8b:	lea    edi,[ecx+0x75f01650]
  424c91:	dec    ebp
  424c92:	dec    ebp
  424c93:	dec    ebp
  424c94:	xchg   edx,eax
  424c95:	in     eax,dx
  424c96:	retf   
  424c97:	outs   dx,DWORD PTR ds:[esi]
  424c98:	in     al,0xb8
  424c9a:	pusha  
  424c9b:	mov    ecx,0x50386fe9
  424ca0:	dec    edi
  424ca1:	xchg   ebp,eax
  424ca2:	dec    ebp
  424ca3:	dec    ebp
  424ca4:	dec    ebp
  424ca5:	push   eax
  424ca6:	dec    edi
  424ca7:	mov    ebp,0x504d4d4d
  424cac:	ja     0x424d08
  424cae:	push   eax
  424caf:	ja     0x424cc7
  424cb1:	add    DWORD PTR [edx+0xa96018a],edx
  424cb7:	push   eax
  424cb8:	ja     0x424ce8
  424cba:	push   eax
  424cbb:	ja     0x424cf3
  424cbd:	jl     0x424d0e
  424cbf:	or     cl,BYTE PTR [ebp+0x4d]
  424cc2:	dec    ebp
  424cc3:	bnd jmp 0x1928538
  424cc9:	popf   
  424cca:	dec    ebp
  424ccb:	dec    ebp
  424ccc:	dec    ebp
  424ccd:	push   eax
  424cce:	sbb    BYTE PTR [ebp+0x7c4d4d4d],ah
  424cd4:	dec    edi
  424cd5:	lods   eax,DWORD PTR ds:[esi]
  424cd6:	dec    ebp
  424cd7:	dec    ebp
  424cd8:	dec    ebp
  424cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424cda:	jmp    0x4fbe854e
  424cdf:	mov    ch,0x4d
  424ce1:	dec    ebp
  424ce2:	dec    ebp
  424ce3:	sbb    ecx,ebp
  424ce5:	outs   dx,DWORD PTR ds:[esi]
  424ce6:	cmp    BYTE PTR [edi+ecx*2-0x3b],bh
  424cea:	dec    ebp
  424ceb:	dec    ebp
  424cec:	dec    ebp
  424ced:	icebp  
  424cee:	jmp    0x4fbe8562
  424cf3:	push   edx
  424cf4:	dec    ebp
  424cf5:	dec    ebp
  424cf6:	dec    ebp
  424cf7:	sbb    ecx,ebp
  424cf9:	outs   dx,DWORD PTR ds:[esi]
  424cfa:	cmp    BYTE PTR [edi+ecx*2-0x2b],bh
  424cfe:	dec    ebp
  424cff:	dec    ebp
  424d00:	dec    ebp
  424d01:	call   0x507abcef
  424d06:	add    ebp,ebx
  424d08:	dec    ebp
  424d09:	dec    ebp
  424d0a:	dec    ebp
  424d0b:	jl     0x424d5c
  424d0d:	in     eax,0x4d
  424d0f:	dec    ebp
  424d10:	dec    ebp
  424d11:	fucompp 
  424d13:	outs   dx,DWORD PTR ds:[esi]
  424d14:	cmp    BYTE PTR [eax-0x69],dl
  424d17:	int    0x7c
  424d19:	ja     0x424d2a
  424d1b:	nop
  424d1c:	jmp    0xf0928590
  424d21:	adc    BYTE PTR [edi+esi*2+0x41],bh
  424d25:	cmc    
  424d26:	jmp    0xf092859a
  424d2b:	push   ds
  424d2c:	jl     0x424da5
  424d2e:	es (bad) 
  424d30:	jmp    0x77be85a4
  424d35:	mul    BYTE PTR ds:[edi+ebp*2]
  424d39:	cmp    BYTE PTR [ebx+0x6a],dl
  424d3c:	add    BYTE PTR [ecx+0x4f],0xa
  424d40:	dec    ebp
  424d41:	dec    ebp
  424d42:	dec    ebp
  424d43:	mov    dl,0xbe
  424d45:	or     al,0xcd
  424d47:	add    eax,0x2f4110c4
  424d4c:	inc    ebp
  424d4d:	dec    ebp
  424d4e:	dec    ebp
  424d4f:	dec    ebp
  424d50:	ins    DWORD PTR es:[edi],dx
  424d51:	in     eax,dx
  424d52:	mov    ebx,DWORD PTR [ebx]
  424d54:	in     al,0x2
  424d56:	or     dh,0x32
  424d59:	cmp    cl,BYTE PTR [ebp+0x7501018d]
  424d5f:	dec    ebp
  424d60:	dec    ebp
  424d61:	dec    ebp
  424d62:	xchg   esi,eax
  424d63:	dec    ebp
  424d64:	or     ch,dh
  424d66:	sbb    BYTE PTR [edx],0x32
  424d69:	cmp    cl,BYTE PTR [ebp+0x4518018d]
  424d6f:	dec    ebp
  424d70:	dec    ebp
  424d71:	dec    ebp
  424d72:	stos   BYTE PTR es:[edi],al
  424d73:	or     cl,BYTE PTR [ebp-0x6a]
  424d76:	out    dx,eax
  424d77:	push   eax
  424d78:	ja     0x424d77
  424d7a:	add    DWORD PTR [edi-0x7a],esi
  424d7d:	or     al,BYTE PTR [eax-0x72c5d932]
  424d83:	lea    ecx,[ebp-0x7f]
  424d86:	xor    BYTE PTR [edi-0x3],0x4d
  424d8a:	test   DWORD PTR [eax-0xf7f7589],0xedfc538a
  424d94:	add    eax,0xc86b20d
  424d99:	mov    dl,0xba
  424d9b:	sub    edi,edi
  424d9d:	mov    dl,0x50
  424d9f:	ja     0x424d50
  424da1:	xor    al,0x8a
  424da4:	xor    BYTE PTR [edi-0x76],0x53
  424da8:	push   ecx
  424da9:	in     eax,dx
  424daa:	xor    cl,BYTE PTR ds:0xb22984b2
  424db0:	mov    esi,0x80fdff0c
  424db5:	ja     0x424d3d
  424db7:	arpl   WORD PTR [edx+0x775097d5],si
  424dbd:	jbe    0x424d83
  424dbf:	or     DWORD PTR [eax+0x76f0808d],eax
  424dc5:	push   eax
  424dc6:	ja     0x424d4e
  424dc8:	xor    BYTE PTR [edi-0x7a],0x63
  424dcc:	mov    dl,0xd5
  424dce:	iret   
  424dcf:	or     BYTE PTR [edx],0x1d
  424dd2:	sbb    BYTE PTR [edx],0x26
  424dd5:	cmp    cl,BYTE PTR [ebp-0x28f19c73]
  424ddb:	stc    
  424ddc:	sbb    BYTE PTR [edx],0x26
  424ddf:	cmp    cl,BYTE PTR [ebp+0x1d0a808d]
  424de5:	arpl   WORD PTR [esi],cx
  424de7:	xlat   BYTE PTR ds:[ebx]
  424de8:	cmp    eax,DWORD PTR [eax-0x72c5d1e6]
  424dee:	lea    eax,[eax-0x557fde69]
  424df4:	cmp    eax,0xa500eec
  424df9:	and    eax,0x808b7780
  424dfe:	lock mov edx,DWORD PTR [ebx-0x4]
  424e02:	in     eax,dx
  424e03:	add    eax,0xc86b20d
  424e08:	mov    dl,0xba
  424e0a:	sub    edi,edi
  424e0c:	mov    dl,0x50
  424e0e:	ja     0x424dbf
  424e10:	adc    BYTE PTR [edi-0x796c64db],0x3
  424e17:	enter  0x4d4d,0x4f
  424e1b:	push   0x9
  424e1d:	movd   DWORD PTR [ebp-0x28b27273],mm1
  424e24:	and    eax,0x86932a80
  424e29:	sub    eax,0x4f4d4dc8
  424e2e:	push   0x9
  424e30:	pcmpeqb mm1,QWORD PTR [ebp+0x77808d8d]
  424e37:	and    eax,0x94802a80
  424e3c:	xchg   BYTE PTR [eax+0x4f4d4dc2],bh
  424e42:	push   0x9
  424e44:	mov    cr1,ebp
  424e47:	lea    ecx,[ebp-0x6e796c65]
  424e4d:	mov    ecx,DWORD PTR [ebp+0x4d]
  424e50:	dec    edi
  424e51:	push   0x9
  424e53:	ucomiss xmm1,DWORD PTR [ebp-0x317f7273]
  424e5a:	cmp    cl,BYTE PTR es:[ebp-0x28e29c73]
  424e61:	sbb    eax,DWORD PTR [eax-0x72c5cd32]
  424e67:	lea    eax,[ecx]
  424e69:	lock test BYTE PTR [esi-0x7f7b28b3],dl
  424e70:	lock and DWORD PTR [ebp-0x62],ecx
  424e74:	xchg   ebp,eax
  424e75:	xchg   ebx,eax
  424e76:	dec    ebp
  424e77:	or     ah,BYTE PTR ds:0x3a82ce80
  424e7d:	lea    ecx,[ebp-0x27f7280]
  424e83:	push   ebx
  424e84:	push   ecx
  424e85:	in     eax,dx
  424e86:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424e8c:	test   BYTE PTR [ecx],ch
  424e8e:	(bad)  
  424e8f:	std    
  424e90:	aad    0x0
  424e92:	jl     0x424f0b
  424e94:	out    dx,eax
  424e95:	mul    BYTE PTR [ebx]
  424e97:	outs   dx,DWORD PTR ds:[esi]
  424e98:	cmp    BYTE PTR [eax-0xf7f1089],al
  424e9e:	out    dx,eax
  424e9f:	xor    BYTE PTR [edi+0x25],0xb2
  424ea3:	mov    esi,0xc405a20c
  424ea8:	hlt    
  424ea9:	lea    ecx,[ebp+0x197d30b9]
  424eaf:	sub    BYTE PTR [ebp+0x3d],0x80
  424eb3:	lock sub eax,0x925074ec
  424eb9:	adc    eax,0x7c2d7780
  424ebe:	(bad)  
  424ebf:	in     al,dx
  424ec0:	lea    ecx,[ebp+0x2d77808d]
  424ec6:	push   eax
  424ec7:	popf   
  424ec8:	out    dx,al
  424ec9:	xor    BYTE PTR [edi+0x71],0x80
  424ecd:	lock sub eax,0x80ef9250
  424ed3:	ja     0x424eea
  424ed5:	xor    al,0x2d
  424ed8:	push   eax
  424ed9:	xchg   edx,eax
  424eda:	and    esp,eax
  424edc:	adc    eax,0x80257780
  424ee1:	ins    DWORD PTR es:[edi],dx
  424ee2:	cmp    eax,0xec2df080
  424ee7:	je     0x424f39
  424ee9:	xchg   edx,eax
  424eea:	adc    eax,0xed2d7780
  424eef:	sub    eax,0xf7777c8d
  424ef4:	cmp    cl,BYTE PTR [ebp-0x18127273]
  424efa:	test   DWORD PTR [ebp-0x5bacf329],0xc4a37480
  424f04:	or     al,0x53
  424f06:	push   0xffffffab
  424f08:	test   eax,0x8d25fb70
  424f0d:	xchg   edi,eax
  424f0e:	add    BYTE PTR [edi+0x5c099696],0x92
  424f15:	adc    eax,0x1def7501
  424f1a:	or     DWORD PTR [edi+edi*2+0x6f],ebx
  424f1e:	xchg   ebx,eax
  424f1f:	fwait
  424f20:	jl     0x424f99
  424f22:	mov    dh,dh
  424f24:	and    al,0x6f
  424f26:	cmp    BYTE PTR [eax-0x10],dl
  424f29:	mov    ecx,DWORD PTR [edi+0x70]
  424f2c:	aad    0xb5
  424f2e:	icebp  
  424f2f:	and    ah,BYTE PTR [edi+ebp*2]
  424f32:	cmp    BYTE PTR [eax-0x187fde83],al
  424f38:	out    dx,eax
  424f39:	in     al,dx
  424f3a:	retf   
  424f3b:	pop    edi
  424f3c:	out    0x21,eax
  424f3e:	in     al,0xcf
  424f40:	sbb    ch,0xef
  424f43:	in     al,dx
  424f44:	retf   
  424f45:	in     al,dx
  424f46:	out    0xef,eax
  424f48:	pop    edi
  424f49:	out    0x21,eax
  424f4b:	in     al,0x7b
  424f4d:	xor    al,0x8a
  424f50:	and    bh,0x8a
  424f53:	push   ebx
  424f54:	(bad)  
  424f55:	in     eax,dx
  424f56:	dec    ebx
  424f57:	or     eax,0x8029bcb2
  424f5c:	mov    al,ds:0xff0cc4b2
  424f61:	push   es
  424f62:	in     eax,dx
  424f63:	mov    edx,0xeeb2ed8a
  424f68:	in     eax,dx
  424f69:	push   0x3d
  424f6b:	jnp    0x424f1f
  424f6d:	popa   
  424f6e:	sub    edi,edi
  424f70:	retf   
  424f71:	mov    ds:0x6f24f64b,al
  424f76:	cmp    BYTE PTR [edx],bh
  424f78:	out    0x8a,eax
  424f7a:	xor    al,0x8a
  424f7d:	and    bh,0x8a
  424f80:	push   ebx
  424f81:	(bad)  
  424f82:	in     eax,dx
  424f83:	dec    ebx
  424f84:	or     eax,0xb20cbeb2
  424f89:	mov    esp,0x632aff29
  424f8e:	lock mov esp,esp
  424f91:	dec    edx
  424f92:	push   ebx
  424f93:	push   0xffffffab
  424f95:	mov    ds:0x8deffb70,eax
  424f9a:	xchg   edi,eax
  424f9b:	add    BYTE PTR [edi+0x7c8187ed],0x77
  424fa2:	cmp    DWORD PTR [ebx+0x7c8d8dad],0x77
  424fa9:	stc    
  424faa:	in     al,dx
  424fab:	ror    DWORD PTR [ebp-0x7b888373],0x14
  424fb2:	ror    BYTE PTR [ebp-0x74888373],cl
  424fb8:	call   0x8a77:0x7c8dee71
  424fbf:	stc    
  424fc0:	lods   eax,DWORD PTR ds:[esi]
  424fc1:	lea    ecx,[ebp-0x5088884]
  424fc7:	dec    DWORD PTR [ebp+0x7a777c8d]
  424fcd:	dec    ebx
  424fce:	aam    0x8d
  424fd0:	lea    edi,[edi+esi*2-0x7e]
  424fd4:	in     al,dx
  424fd5:	lea    ecx,[ebp-0x79888373]
  424fdb:	mov    dl,0xb9
  424fdd:	lea    ecx,[ebp-0x7f788884]
  424fe3:	xchg   esi,eax
  424fe4:	lea    ecx,[ebp+0x332777c]
  424fea:	mov    bh,0x8d
  424fec:	lea    eax,[eax-0x73a17510]
  424ff2:	fimul  DWORD PTR [ebp-0x7f4dbc73]
  424ff8:	lock mov edx,DWORD PTR [ebx+0x72]
  424ffc:	dec    ebx
  424ffd:	add    eax,0xfd809b99
  425002:	mov    ds:0x8d90f1ba,al
  425007:	lea    esp,[edx-0x7238d090]
  42500d:	lea    esp,[edx-0x725a2bfb]
  425013:	lea    esp,[edx-0x72c2204e]
  425019:	lea    edi,[edi+esi*2-0x38]
  42501d:	div    eax
  42501f:	lea    ecx,[ebp-0x24758884]
  425025:	aad    0x8d
  425027:	lea    edi,[edi+esi*2-0x75]
  42502b:	sbb    DWORD PTR [ecx-0x73],esi
  42502e:	lea    eax,[eax-0x687f7489]
  425034:	mov    dh,BYTE PTR [edi]
  425036:	dec    ecx
  425037:	popf   
  425038:	lea    ecx,[ebp+0x77ecfb53]
  42503e:	enter  0xb680,0x57
  425042:	jnp    0x425051
  425044:	lea    ecx,[ebp-0x68af08bd]
  42504a:	mov    al,BYTE PTR [eax+0x77ec8a77]
  425050:	out    dx,eax
  425051:	adc    BYTE PTR [edi+0x2197ec8a],0x8f
  425058:	nop
  425059:	adc    BYTE PTR [ecx-0x80],dh
  42505c:	ja     0x425090
  42505e:	adc    BYTE PTR [edi-0x76e6c879],0x8d
  425065:	lea    edx,[ebx-0x5]
  425068:	adc    BYTE PTR [edi-0xe04007a],0x3
  42506f:	(bad)  [ebp-0x7f08bc73]
  425075:	ja     0x425070
  425077:	in     al,dx
  425078:	(bad)  
  425079:	icebp  
  42507a:	test   al,0x55
  42507c:	lea    ecx,[ebp-0x681308bd]
  425082:	test   BYTE PTR [eax-0x287f7c89],al
  425088:	jno    0x42500a
  42508a:	out    0x82,eax
  42508c:	mov    ds:0x8d9630c2,al
  425091:	lea    esi,[ebx]
  425093:	test   DWORD PTR [eax-0x3d5d8589],0x8d8d2db7
  42509d:	inc    ebx
  42509e:	ret    0x7253
  4250a1:	dec    ebx
  4250a2:	dec    ebx
  4250a3:	adc    BYTE PTR [edi+0x1fe757f7],0x8d
  4250aa:	lea    esi,[ebx]
  4250ac:	sti    
  4250ad:	xor    BYTE PTR [esi+0x7a2f743],0x4c
  4250b4:	fmul   DWORD PTR [ebp+0x97e638d]
  4250ba:	dec    esp
  4250bb:	mov    ds:0xab4d4d4d,eax
  4250c0:	test   eax,0x8d21fb70
  4250c5:	xchg   edi,eax
  4250c6:	add    BYTE PTR [edi-0x6c8a7813],0x99
  4250cd:	fwait
  4250ce:	jl     0x425147
  4250d0:	xchg   DWORD PTR [ebx+eiz*2+0x777c8d8d],ebx
  4250d7:	xor    dl,al
  4250d9:	jg     0x425068
  4250db:	lea    edi,[edi+esi*2-0x38]
  4250df:	pusha  
  4250e0:	xchg   esi,eax
  4250e1:	lea    ecx,[ebp-0x15748884]
  4250e7:	xchg   esi,eax
  4250e8:	lea    ecx,[ebp-0xd758884]
  4250ee:	sub    eax,0x777c8d8d
  4250f3:	sbb    ecx,0x59
  4250f6:	lea    ecx,[ebp+0x7784777c]
  4250fc:	out    dx,al
  4250fd:	lea    ecx,[ebp+0x6df9777c]
  425103:	xor    DWORD PTR [ebp-0x79888373],ecx
  425109:	sbb    ebx,DWORD PTR [edi-0x73]
  42510c:	lea    edi,[edi+esi*2+0x66]
  425110:	pop    esp
  425111:	leave  
  425112:	lea    ecx,[ebp-0x59958884]
  425118:	lea    ecx,[ebp+0x76777c8d]
  42511e:	iret   
  42511f:	cmp    DWORD PTR [ebp-0x2888373],ecx
  425125:	and    BYTE PTR [ecx],ch
  425127:	lea    ecx,[ebp+0x5caf777c]
  42512d:	iret   
  42512e:	lea    ecx,[ebp-0x1a088884]
  425134:	sbb    eax,0x77808d8d
  425139:	test   BYTE PTR [eax-0x55307c10],al
  42513f:	xor    ecx,DWORD PTR [ebp-0x58c1b873]
  425145:	lea    ecx,[ebp-0x72dcdf31]
  42514b:	lea    ecx,[ecx]
  42514d:	and    dh,BYTE PTR [edx+0x7f549e60]
  425153:	mov    eax,DWORD PTR [ebx-0x3]
  425156:	xor    BYTE PTR [edi-0x76],0x80
  42515a:	xchg   edi,eax
  42515b:	mov    esi,DWORD PTR [ebx]
  42515d:	sti    
  42515e:	adc    BYTE PTR [edi-0x36b73038],0x8d
  425165:	lea    eax,[ebx-0x5]
  425168:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  42516f:	xchg   edi,edi
  425171:	sti    
  425172:	push   ebx
  425173:	jb     0x42516f
  425175:	pushf  
  425176:	ins    BYTE PTR es:[edi],dx
  425177:	dec    ebp
  425178:	dec    ebp
  425179:	dec    ebx
  42517a:	or     eax,DWORD PTR [eax-0x2f93de69]
  425180:	pop    ds
  425181:	lea    ecx,[ebp+0x7780f743]
  425187:	xchg   BYTE PTR [eax+0x7c43f9d7],al
  42518d:	or     DWORD PTR [edx],esp
  42518f:	cld    
  425190:	cli    
  425191:	mov    al,ds:0xbe309e50
  425196:	icebp  
  425197:	lea    ecx,[ebp+0x7a777c8d]
  42519d:	sbb    al,0x55
  42519f:	lea    ecx,[ebp+0x2e82777c]
  4251a5:	leave  
  4251a6:	lea    ecx,[ebp-0x327b8884]
  4251ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251ad:	lea    ecx,[ebp+0x3a83777c]
  4251b3:	lea    ecx,[ebp-0x7c587f73]
  4251b9:	push   ebx
  4251ba:	jb     0x42521a
  4251bc:	fwait
  4251bd:	leave  
  4251be:	lea    ecx,[ebp-0x687f39b5]
  4251c4:	test   BYTE PTR [eax-0x4001059],al
  4251ca:	adc    BYTE PTR [edi-0x7f04bc7e],0x97
  4251d1:	jp     0x42520a
  4251d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251d4:	or     DWORD PTR [ebp-0x4ddf673],0x59ef0f01
  4251de:	sub    eax,0x77508ade
  4251e3:	jp     0x425165
  4251e5:	ja     0x4251de
  4251e7:	adc    BYTE PTR [edi+0xbc835af],0x7
  4251ee:	adc    BYTE PTR [edi+0x4523357a],0x2f
  4251f5:	and    DWORD PTR [esi+ebp*8-0x4f11efb9],edx
  4251fc:	xor    BYTE PTR [edi-0x3],0xcf
  425200:	mov    es,edi
  425202:	lea    ecx,[ebp-0x7f898814]
  425208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425209:	push   0x53
  42520b:	jb     0x425258
  42520d:	mov    BYTE PTR [eax-0x639b9969],0x6c
  425214:	dec    ebp
  425215:	dec    ebp
  425216:	aaa    
  425217:	cmp    BYTE PTR [edi-0x73],dl
  42521a:	lea    eax,[ebx-0x5]
  42521d:	push   edi
  42521e:	adc    DWORD PTR [edx+0x4d],ebp
  425221:	dec    ebp
  425222:	in     al,dx
  425223:	std    
  425224:	xor    BYTE PTR [edi-0x76],0x80
  425228:	xchg   edi,eax
  425229:	mov    esi,DWORD PTR [ebx]
  42522b:	sti    
  42522c:	adc    BYTE PTR [edi-0x36b73038],0x8d
  425233:	lea    eax,[ebx-0x5]
  425236:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  42523d:	xchg   edi,edi
  42523f:	sti    
  425240:	push   ebx
  425241:	jb     0x42528e
  425243:	mov    BYTE PTR [eax-0x8bcde69],0x80
  42524a:	ja     0x4251d2
  42524c:	and    BYTE PTR [edi+0x97c43f9],0x22
  425253:	je     0x4251d5
  425255:	mov    al,ds:0x4ec8243
  42525a:	arpl   WORD PTR [ebx],ax
  42525c:	or     DWORD PTR [ebp+ebx*2+0x4d],ecx
  425260:	dec    ebp
  425261:	dec    ebp
  425262:	stos   DWORD PTR es:[edi],eax
  425263:	test   eax,0xeffb70a3
  425268:	lea    edx,[edi-0x78127880]
  42526e:	or     bh,BYTE PTR [edi+esi*2+0x62]
  425272:	in     al,0x58
  425274:	fist   WORD PTR [ecx]
  425276:	pop    esi
  425277:	xchg   BYTE PTR [edi+0x77502643],cl
  42527d:	push   esi
  42527e:	jl     0x4252f7
  425280:	pop    esi
  425281:	loop   0x4252db
  425283:	fist   WORD PTR [ecx]
  425285:	push   eax
  425286:	ja     0x4252ee
  425288:	jl     0x425301
  42528a:	push   0xffffffe6
  42528c:	pop    eax
  42528d:	fist   WORD PTR [ecx]
  42528f:	push   eax
  425290:	ja     0x425308
  425292:	xchg   ebx,eax
  425293:	jl     0x42530c
  425295:	std    
  425296:	rcr    BYTE PTR [eax-0x21],1
  425299:	adc    DWORD PTR [eax+0x77],edx
  42529c:	scas   eax,DWORD PTR es:[edi]
  42529d:	cdq    
  42529e:	fwait
  42529f:	jl     0x425318
  4252a1:	neg    DWORD PTR [ecx+0x5011df58]
  4252a7:	ja     0x425323
  4252a9:	push   ebx
  4252aa:	jb     0x4252ff
  4252ac:	dec    ebp
  4252ad:	pusha  
  4252ae:	mul    BYTE PTR [edi+ebp*2]
  4252b1:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  4252b5:	call   0x7b543212
  4252ba:	push   eax
  4252bb:	ja     0x425240
  4252bd:	xor    BYTE PTR [edx+0x50879750],0xe7
  4252c4:	stc    
  4252c5:	add    DWORD PTR [esi+0xd32ed3a],ebx
  4252cb:	mov    dl,0x84
  4252cd:	sub    edi,edi
  4252cf:	sti    
  4252d0:	add    DWORD PTR [ebp+0x78],esi
  4252d3:	bound  eax,QWORD PTR [eax-0x11627f8f]
  4252d9:	or     DWORD PTR [esi+0x3],eax
  4252dc:	or     al,0xb2
  4252de:	les    ecx,FWORD PTR [eax+eax*4]
  4252e1:	sbb    eax,0x53ee6d80
  4252e6:	push   0xffffffa2
  4252e8:	ret    0xc7a7
  4252eb:	add    al,0xd4
  4252ed:	push   edi
  4252ef:	push   eax
  4252f0:	xchg   edi,eax
  4252f1:	mov    eax,DWORD PTR [eax+0x6aec8b77]
  4252f7:	mov    dl,0xb4
  4252f9:	sub    DWORD PTR [ebx+0x77],esp
  4252fc:	and    DWORD PTR [ecx],ecx
  4252fe:	into   
  4252ff:	lea    ecx,fs:[ebp-0x74887f73]
  425306:	in     eax,dx
  425307:	mov    bh,0x86
  425309:	lea    edx,[eax-0x19]
  42530c:	xor    al,BYTE PTR [eax+0x6a4f8b77]
  425312:	aad    0xb7
  425314:	push   ebx
  425315:	push   0x50
  425317:	out    0xc8,eax
  425319:	adc    BYTE PTR [edi-0x10587f7a],0x1
  425320:	gs jno 0x4252a3
  425323:	xchg   edi,eax
  425324:	out    dx,eax
  425325:	in     al,dx
  425326:	pushf  
  425327:	push   eax
  425328:	xchg   edi,eax
  425329:	test   BYTE PTR [edi+0x4d971090],cl
  42532f:	adc    BYTE PTR [edi-0x70631375],0x15
  425336:	mov    al,0x80
  425338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425339:	test   BYTE PTR [eax],dl
  42533b:	adc    ecx,DWORD PTR [edi-0x587fb269]
  425341:	mov    ebp,esp
  425343:	lods   al,BYTE PTR ds:[esi]
  425344:	and    bh,0xef
  425347:	adc    BYTE PTR ds:0xc8978063,dl
  42534d:	ins    DWORD PTR es:[edi],dx
  42534e:	in     eax,dx
  42534f:	clc    
  425350:	mov    dh,BYTE PTR [edx-0x412d67a]
  425356:	out    dx,al
  425357:	(bad)  
  425358:	sti    
  425359:	push   ebx
  42535a:	mov    dl,0x50
  42535c:	ja     0x425326
  42535e:	outs   dx,BYTE PTR ds:[esi]
  42535f:	xlat   BYTE PTR ds:[ebx]
  425360:	enter  0x9780,0xc8
  425364:	in     eax,dx
  425365:	xor    cl,BYTE PTR ds:0xb20c07b2
  42536b:	test   BYTE PTR [ecx],ch
  42536d:	(bad)  
  42536e:	sti    
  42536f:	adc    BYTE PTR [edi-0x1b049c75],0x34
  425376:	push   ebx
  425377:	dec    ebp
  425378:	jnp    0x4252fa
  42537a:	ja     0x4253ae
  42537c:	adc    BYTE PTR [edi-0x79587f75],0xed
  425383:	test   BYTE PTR [edx-0x7f0811ff],cl
  425389:	xchg   edi,eax
  42538a:	mov    eax,DWORD PTR [ecx]
  42538c:	adc    eax,0x21a78093
  425391:	mov    dl,0x7
  425393:	sub    edi,edi
  425395:	sti    
  425396:	push   ebx
  425397:	mov    dl,0x50
  425399:	ja     0x4253cd
  42539b:	outs   dx,BYTE PTR ds:[esi]
  42539c:	xlat   BYTE PTR ds:[ebx]
  42539d:	xor    al,BYTE PTR [eax+0x32ed3297]
  4253a3:	or     eax,0xb20c07b2
  4253a8:	test   BYTE PTR [ecx],ch
  4253aa:	(bad)  
  4253ab:	sti    
  4253ac:	adc    BYTE PTR [edi+0x4372ec8b],0x3
  4253b3:	push   eax
  4253b4:	ja     0x42533c
  4253b6:	arpl   WORD PTR [ecx+ecx*1+0x4c],si
  4253ba:	leave  
  4253bb:	dec    ebp
  4253bc:	dec    ebp
  4253bd:	dec    ebp
  4253be:	xor    BYTE PTR [edi-0x79],0x80
  4253c2:	xchg   edi,eax
  4253c3:	stc    
  4253c4:	in     eax,dx
  4253c5:	clc    
  4253c6:	mov    ch,BYTE PTR [ebp-0x13]
  4253c9:	sti    
  4253ca:	out    dx,al
  4253cb:	mov    dl,0x86
  4253cd:	sub    edi,edi
  4253cf:	sti    
  4253d0:	push   ebx
  4253d1:	mov    dl,0x80
  4253d3:	add    BYTE PTR [eax-0x1281ac09],0xc6
  4253da:	or     eax,0x5029b4b2
  4253df:	xchg   edi,eax
  4253e0:	stc    
  4253e1:	mov    dl,0x7
  4253e3:	or     al,0x50
  4253e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253e6:	xchg   DWORD PTR [eax],esi
  4253e8:	xchg   edi,eax
  4253e9:	xchg   ebp,ebp
  4253eb:	out    0x87,eax
  4253ed:	outs   dx,DWORD PTR ds:[esi]
  4253ee:	or     edx,ebp
  4253f0:	jp     0x4253ff
  4253f2:	dec    ebp
  4253f3:	dec    ebp
  4253f4:	stos   DWORD PTR es:[edi],eax
  4253f5:	test   eax,0xeffb70a3
  4253fa:	lea    edx,[edi-0x78127880]
  425400:	adc    eax,0x7cef7780
  425405:	ja     0x425439
  425407:	mul    BYTE PTR [edi+ebp*2]
  42540a:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  42540e:	cmc    
  42540f:	and    al,0x6f
  425411:	cmp    BYTE PTR [eax+0x5099938d],al
  425417:	ja     0x4253a4
  425419:	jl     0x425492
  42541b:	enter  0x24dc,0x6f
  42541f:	cmp    BYTE PTR [ebx+0x4787777c],bl
  425425:	sbb    al,0xf9
  425427:	adc    eax,DWORD PTR [eax-0xf7f7529]
  42542d:	mov    ah,dl
  42542f:	or     eax,0x6f24225e
  425434:	cmp    BYTE PTR [ebx-0x454dd5ad],ch
  42543a:	sub    DWORD PTR [ebx+0x32],edx
  42543d:	mov    dl,0x88
  42543f:	or     al,0xff
  425441:	add    eax,0x8032f080
  425446:	xchg   edi,eax
  425447:	xor    dl,BYTE PTR [ebx-0x3]
  42544a:	push   ebx
  42544b:	pushf  
  42544c:	mov    dl,0xbe
  42544e:	or     al,0xb2
  425450:	clc    
  425451:	sub    edi,edi
  425453:	dec    BYTE PTR [ecx]
  425455:	and    al,BYTE PTR ds:0x8d8d24be
  42545b:	lea    eax,[eax-0x687f7410]
  425461:	mov    edx,DWORD PTR [ebx-0x64]
  425464:	mov    dl,0xf8
  425466:	sub    DWORD PTR [ebx-0x3],edx
  425469:	mov    dl,0xbe
  42546b:	or     al,0xff
  42546d:	inc    BYTE PTR [eax-0x587f7569]
  425473:	mov    dl,BYTE PTR [ebx-0x9]
  425476:	push   ebx
  425477:	lods   al,BYTE PTR ds:[esi]
  425478:	mov    dl,0x7
  42547a:	or     al,0xb2
  42547c:	mov    ah,0x29
  42547e:	call   DWORD PTR [edi+ecx*2-0x74687f02]
  425485:	xor    al,0x8b
  425488:	aad    0x59
  42548a:	push   ebx
  42548b:	sub    dh,BYTE PTR [edx-0x8acd646]
  425491:	mov    dl,0x7
  425493:	or     al,0xff
  425495:	mov    dh,0x80
  425497:	lock mov al,BYTE PTR [eax-0x2ac7559]
  42549e:	push   ebx
  42549f:	lods   al,BYTE PTR ds:[esi]
  4254a0:	mov    dl,0xbe
  4254a2:	or     al,0xb2
  4254a4:	mov    ah,0x29
  4254a6:	call   DWORD PTR [ecx]
  4254a8:	xchg   esp,eax
  4254a9:	pop    es
  4254aa:	xor    al,0x87
  4254ad:	and    BYTE PTR [edi+0x53fd5387],0xac
  4254b4:	mov    dl,0xbe
  4254b6:	or     al,0xb2
  4254b8:	mov    ah,0x29
  4254ba:	call   DWORD PTR [ecx]
  4254bc:	push   ebx
  4254bd:	mov    dh,0xc4
  4254bf:	sub    eax,0xbab22a53
  4254c4:	sub    DWORD PTR [ebx-0x9],edx
  4254c7:	mov    dl,0x7
  4254c9:	or     al,0xff
  4254cb:	mov    dh,0x80
  4254cd:	lock mov al,BYTE PTR [eax-0x2ac7559]
  4254d4:	push   ebx
  4254d5:	lods   al,BYTE PTR ds:[esi]
  4254d6:	mov    dl,0xbe
  4254d8:	or     al,0xb2
  4254da:	mov    ah,0x29
  4254dc:	call   DWORD PTR [ecx]
  4254de:	xchg   esp,eax
  4254df:	pop    es
  4254e0:	push   eax
  4254e1:	xchg   edi,eax
  4254e2:	mov    eax,DWORD PTR [eax-0x687f7510]
  4254e8:	mov    dl,BYTE PTR [ebx-0x3]
  4254eb:	push   ebx
  4254ec:	pushf  
  4254ed:	mov    dl,0xbe
  4254ef:	or     al,0xb2
  4254f1:	clc    
  4254f2:	sub    edi,edi
  4254f4:	(bad)  
  4254f5:	in     al,dx
  4254f6:	add    eax,0x80c8f080
  4254fb:	xchg   edi,eax
  4254fc:	enter  0x9c53,0x53
  425500:	std    
  425501:	mov    dl,0xf8
  425503:	sub    DWORD PTR [edx-0x100f342],esi
  425509:	adc    BYTE PTR [edi-0x75587f76],0x53
  425510:	not    DWORD PTR [ebx-0x54]
  425513:	mov    dl,0xb4
  425515:	sub    DWORD PTR [edx-0x6b00f3f9],esi
  42551b:	inc    ebx
  42551c:	(bad)  
  42551d:	arpl   WORD PTR ds:0x4d5b4c09,ax
  425523:	dec    ebp
  425524:	dec    ebp
  425525:	xor    BYTE PTR [edi-0x75],0x80
  425529:	lock out dx,eax
  42552b:	stos   DWORD PTR es:[edi],eax
  42552c:	test   eax,0x77803a50
  425531:	mov    esp,DWORD PTR [ebx-0x72110490]
  425537:	xchg   edi,eax
  425538:	add    BYTE PTR [edi+0x70539696],0x5f
  42553f:	lock and ebp,edx
  425542:	in     eax,0x5f
  425544:	lock out dx,eax
  425546:	(bad)  
  425548:	(bad)  
  425549:	out    dx,al
  42554a:	outs   dx,BYTE PTR ds:[esi]
  42554b:	adc    BYTE PTR [edi+0x9],dh
  42554e:	cld    
  42554f:	ja     0x42551d
  425551:	aad    0xfc
  425553:	ja     0x425562
  425555:	sbb    esp,edi
  425557:	ja     0x4255a6
  425559:	ror    BYTE PTR [ecx],1
  42555b:	loopne 0x4255d4
  42555d:	dec    ebp
  42555e:	or     eax,esp
  425560:	xchg   edi,eax
  425561:	or     eax,0x8d8d7acf
  425566:	lea    esi,[ebx]
  425568:	sti    
  425569:	or     eax,esp
  42556b:	xchg   edi,eax
  42556c:	int3   
  42556d:	xor    edi,ebx
  42556f:	adc    BYTE PTR [edi-0x7b],dh
  425572:	cld    
  425573:	ja     0x42557b
  425575:	or     eax,0xd48a77fc
  42557a:	cld    
  42557b:	ja     0x4255ca
  42557d:	jl     0x42557b
  42557f:	ja     0x42558e
  425581:	sar    esp,cl
  425583:	ja     0x425551
  425585:	push   esp
  425586:	(bad)  
  425587:	ja     0x425555
  425589:	(bad)  
  42558a:	xchg   edi,eax
  42558b:	or     eax,0x978ffba6
  425590:	dec    ebp
  425591:	sar    bl,cl
  425593:	(bad)  
  425594:	xchg   edi,eax
  425595:	mov    cl,BYTE PTR [ebx]
  425597:	pop    es
  425598:	(bad)  
  425599:	xchg   edi,eax
  42559a:	push   es
  42559b:	sar    bl,cl
  42559d:	(bad)  
  42559e:	xchg   edi,eax
  42559f:	test   esi,edx
  4255a1:	neg    ebx
  4255a3:	or     DWORD PTR [ecx],ecx
  4255a5:	loopne 0x42561e
  4255a7:	or     DWORD PTR [edi+0x8],eax
  4255aa:	lea    ecx,[ebp+0x977108d]
  4255b0:	div    eax
  4255b2:	or     DWORD PTR [edi-0x11eff689],ecx
  4255b8:	outs   dx,BYTE PTR ds:[esi]
  4255b9:	xchg   edx,eax
  4255ba:	arpl   ax,si
  4255bc:	out    dx,eax
  4255bd:	in     al,0x50
  4255bf:	dec    ebp
  4255c0:	xlat   BYTE PTR ds:[ebx]
  4255c1:	out    dx,eax
  4255c2:	cdq    
  4255c3:	xchg   BYTE PTR [edx-0x76],cl
  4255c6:	dec    ebp
  4255c7:	dec    ebp
  4255c8:	jo     0x4255c5
  4255ca:	out    dx,eax
  4255cb:	lea    edx,[edi-0x785d7880]
  4255d1:	cmp    eax,0x938d8dee
  4255d6:	cdq    
  4255d7:	mul    BYTE PTR fs:[edi+ebp*2]
  4255db:	cmp    BYTE PTR [eax-0x59],dl
  4255de:	xor    bh,BYTE PTR [edi+esi*2-0x76]
  4255e2:	cmc    
  4255e3:	and    al,0x6f
  4255e5:	cmp    BYTE PTR [edi+esi*2-0x79],bh
  4255e9:	imul   BYTE PTR [edi+ebp*2]
  4255ec:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  4255f0:	xchg   esi,eax
  4255f1:	mov    ch,0xcb
  4255f3:	scas   al,BYTE PTR es:[edi]
  4255f4:	xor    BYTE PTR [edi+0x32],0x80
  4255f8:	lock xor bl,BYTE PTR [ebx-0x2cfef21e]
  4255ff:	cmp    ch,BYTE PTR [ebx+0x2a53fc53]
  425605:	mov    dl,0x86
  425607:	or     al,0xb2
  425609:	mov    edx,0x50b2ff29
  42560e:	ja     0x42559b
  425610:	jl     0x425689
  425612:	sbb    esp,0x24
  425615:	outs   dx,DWORD PTR ds:[esi]
  425616:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  42561a:	inc    edi
  42561b:	sbb    al,0xf9
  42561d:	adc    edi,DWORD PTR [edi+esi*2-0x7c]
  425621:	out    dx,eax
  425622:	lea    ecx,[ebp-0x7f8f7f73]
  425628:	ja     0x4255b4
  42562a:	xor    al,0x8a
  42562d:	push   ebx
  42562e:	sub    dh,BYTE PTR [edx-0x3acd646]
  425634:	mov    dl,0x86
  425636:	or     al,0xff
  425638:	mov    dl,0x80
  42563a:	lock xor al,BYTE PTR [eax+0x51533297]
  425641:	push   ebx
  425642:	pushf  
  425643:	mov    dl,0xbe
  425645:	or     al,0xb2
  425647:	clc    
  425648:	sub    edi,edi
  42564a:	dec    BYTE PTR [ecx]
  42564c:	and    dh,BYTE PTR [edx+0x778092c4]
  425652:	enter  0xf080,0xc8
  425656:	mov    dl,0x86
  425658:	sub    DWORD PTR [edx-0x4d00f346],esi
  42565e:	push   ebx
  42565f:	je     0x4256b1
  425661:	ja     0x4255ee
  425663:	add    DWORD PTR [edi-0x75],esi
  425666:	or     al,BYTE PTR [esi+0x4d4dcc1a]
  42566c:	push   eax
  42566d:	ja     0x4255fa
  42566f:	xor    BYTE PTR [edi-0x75],0x80
  425673:	lock enter 0xf50,0x1
  425678:	add    BYTE PTR [esi],0x4d
  42567b:	dec    ebp
  42567c:	xor    BYTE PTR [edi-0x76],0x80
  425680:	lock mov dl,BYTE PTR [ebx-0x4]
  425684:	push   ebx
  425685:	sub    dh,BYTE PTR [edx-0x454df37a]
  42568b:	sub    edi,edi
  42568d:	mov    dl,0xec
  42568f:	ja     0x425659
  425691:	push   eax
  425692:	ja     0x42565c
  425694:	xor    BYTE PTR [edi-0x79],0x80
  425698:	lock xchg DWORD PTR [ebx+0x2a],edx
  42569c:	mov    dl,0xba
  42569e:	sub    DWORD PTR [ebx-0x4],edx
  4256a1:	mov    dl,0x86
  4256a3:	or     al,0xff
  4256a5:	mov    dl,0x80
  4256a7:	lock mov al,BYTE PTR [eax+0x51538a97]
  4256ae:	push   ebx
  4256af:	pushf  
  4256b0:	mov    dl,0xbe
  4256b2:	or     al,0xb2
  4256b4:	clc    
  4256b5:	sub    edi,edi
  4256b7:	inc    BYTE PTR [ebx-0x4e]
  4256ba:	xor    al,0xc8
  4256bd:	arpl   bp,di
  4256bf:	fstp   DWORD PTR [edx]
  4256c1:	xor    BYTE PTR [edi-0x7],0x80
  4256c5:	lock stc 
  4256c7:	push   ebx
  4256c8:	cld    
  4256c9:	push   ebx
  4256ca:	sub    dh,BYTE PTR [edx-0x454df37a]
  4256d0:	sub    edi,edi
  4256d2:	mov    dl,0x50
  4256d4:	ja     0x425661
  4256d6:	jl     0x42574f
  4256d8:	xchg   DWORD PTR [edx-0x7fc790e2],ebp
  4256de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256df:	mov    esi,0x8d8d8dcd
  4256e4:	xor    al,0x83
  4256e7:	xor    BYTE PTR [edi-0x7d],0x53
  4256eb:	jl     0x42569f
  4256ed:	test   BYTE PTR [ecx],ch
  4256ef:	push   ebx
  4256f0:	push   ecx
  4256f1:	mov    dl,0xbe
  4256f3:	or     al,0xff
  4256f5:	std    
  4256f6:	xor    BYTE PTR [edi-0x75],0x94
  4256fa:	xchg   BYTE PTR [eax+0x77],dl
  4256fd:	add    BYTE PTR [eax-0x72701089],0x10
  425704:	ja     0x4256ca
  425706:	(bad)  
  425707:	ja     0x4256cd
  425709:	xor    al,0x8b
  42570c:	or     eax,esp
  42570e:	push   0x53
  425710:	mov    dl,0x50
  425712:	ja     0x4256dc
  425714:	xor    BYTE PTR [edi-0x79],0x80
  425718:	lock xchg DWORD PTR [ebx-0x4],edx
  42571c:	mov    dl,0x86
  42571e:	or     al,0x53
  425720:	sub    dh,BYTE PTR [edx-0x4d00d646]
  425726:	xor    al,0xc8
  425729:	xor    esi,DWORD PTR [edx-0x7db0f080]
  42572f:	push   es
  425730:	dec    ebp
  425731:	dec    ebp
  425732:	xor    al,0x82
  425735:	push   ebx
  425736:	mov    dl,0x50
  425738:	ja     0x4256c5
  42573a:	xor    BYTE PTR [edi-0x76],0x80
  42573e:	lock mov dl,BYTE PTR [ebx-0x4]
  425742:	push   ebx
  425743:	sub    dh,BYTE PTR [edx-0x454df37a]
  425749:	sub    edi,edi
  42574b:	mov    dl,0x3a
  42574d:	ja     0x42573e
  42574f:	xor    BYTE PTR [edi-0x76],0x80
  425753:	lock mov dl,BYTE PTR [ebx-0x4]
  425757:	push   ebx
  425758:	sub    dh,BYTE PTR [edx-0x454df37a]
  42575e:	sub    edi,edi
  425760:	mov    dl,0x3f
  425762:	ja     0x4256e8
  425764:	xor    BYTE PTR [edi+0x32],0x80
  425768:	lock xor dl,BYTE PTR [ebx+0x2a]
  42576c:	push   ebx
  42576d:	cld    
  42576e:	mov    dl,0xba
  425770:	sub    DWORD PTR [edx-0x4d00f37a],esi
  425776:	xor    al,0x84
  425779:	arpl   bp,di
  42577b:	or     DWORD PTR [edi-0x4d],ecx
  42577e:	dec    ebp
  42577f:	dec    ebp
  425780:	dec    ebp
  425781:	xor    BYTE PTR [edi-0x7],0x80
  425785:	lock stc 
  425787:	push   ebx
  425788:	cld    
  425789:	push   ebx
  42578a:	sub    dh,BYTE PTR [edx-0x794dd646]
  425790:	or     al,0xab
  425792:	push   DWORD PTR [edx-0x56740f80]
  425798:	push   ebx
  425799:	mov    dl,0xa3
  42579b:	jo     0x425798
  42579d:	out    dx,al
  42579e:	lea    edx,[edi-0x78127880]
  4257a4:	jno    0x4257f9
  4257a6:	jo     0x42573b
  4257a8:	fwait
  4257a9:	pop    edi
  4257aa:	lock out dx,eax
  4257ac:	or     DWORD PTR [edi],ecx
  4257ae:	pop    esp
  4257af:	lea    ecx,[ebp+0x905638d]
  4257b5:	mov    cr1,ebp
  4257b8:	lea    ecx,[ebp+0x2d995c09]
  4257be:	pop    esi
  4257bf:	and    al,0x38
  4257c1:	lea    ecx,[ebp+0x508af050]
  4257c7:	lock xor dl,BYTE PTR [ebx-0x9]
  4257cb:	push   eax
  4257cc:	lock mov edi,DWORD PTR [ecx-0x49460180]
  4257d3:	jo     0x425828
  4257d5:	dec    ebp
  4257d6:	jl     0x42584f
  4257d8:	enter  0x4d07,0x4d
  4257dc:	dec    ebp
  4257dd:	mov    ecx,0xc5d3cb63
  4257e2:	mov    ecx,0xb98ae780
  4257e7:	mov    dh,0x7c
  4257e9:	mov    ecx,0x5c098b53
  4257ee:	lock mov eax,DWORD PTR [ecx]
  4257f1:	and    esp,ebx
  4257f3:	mov    ecx,0xd70cdf5f
  4257f8:	pop    ebx
  4257f9:	or     DWORD PTR [eax+esi*1+0x50],ebx
  4257fd:	lock enter 0x63b9,0xfd
  425802:	xlat   BYTE PTR ds:[ebx]
  425803:	iret   
  425804:	or     DWORD PTR [eax+esi*8-0x76],ebx
  425808:	and    BYTE PTR [edi+0x1f65cdef],0x8d
  42580f:	aad    0x53
  425811:	or     DWORD PTR [eax+esi*8-0x76],ebx
  425815:	and    BYTE PTR [edi-0x5f64611],0x21
  42581c:	pop    ds
  42581d:	mov    ecx,0x53b9b2b6
  425822:	std    
  425823:	mov    ecx,0xd5c8f05f
  425828:	and    edi,DWORD PTR [edi+esi*2-0x38]
  42582c:	xchg   BYTE PTR [ebp+0x4d],cl
  42582f:	dec    ebp
  425830:	dec    ebp
  425831:	ja     0x4257be
  425833:	cmp    ch,0xb9
  425836:	push   ebx
  425837:	mov    cl,0x2d
  425839:	mov    ecx,0x5fb970b6
  42583e:	lock mov esp,esp
  425841:	cmc    
  425842:	les    esp,FWORD PTR [esi+0x7c32774d]
  425848:	ja     0x425812
  42584a:	mov    esi,0x94d4d4d
  42584f:	pop    esp
  425850:	out    0x8a,eax
  425852:	and    BYTE PTR [edi+0x5d7053ef],0x21
  425859:	sub    edx,ebp
  42585b:	pop    ss
  42585c:	dec    ebp
  42585d:	ja     0x4257e9
  42585f:	in     eax,dx
  425860:	out    0xc8,eax
  425862:	xchg   BYTE PTR [ecx],cl
  425864:	dec    edi
  425865:	ror    BYTE PTR [ebp+0x4d],1
  425868:	dec    ebp
  425869:	push   ebx
  42586a:	push   0xffffffab
  42586c:	mov    ds:0x8deefb70,eax
  425871:	xor    al,0x32
  425874:	mov    ecx,0x53b9b2b6
  425879:	std    
  42587a:	push   ebx
  42587b:	push   0xffffffb9
  42587d:	arpl   WORD PTR [ecx+0x6a16092d],si
  425883:	les    eax,FWORD PTR [edx]
  425885:	xchg   edi,eax
  425886:	add    BYTE PTR [edi-0x6c427813],0x99
  42588d:	fwait
  42588e:	loop   0x4258d5
  425890:	dec    ebp
  425891:	xlat   BYTE PTR ds:[ebx]
  425892:	out    dx,eax
  425893:	xor    BYTE PTR [edx],0x86
  425896:	inc    ebx
  425897:	mov    ecx,DWORD PTR [ebp+0x4d]
  42589a:	add    DWORD PTR [ecx-0x40],edi
  42589d:	push   eax
  42589e:	ja     0x4258c6
  4258a0:	add    DWORD PTR [ecx+0x75],edi
  4258a3:	push   eax
  4258a4:	ja     0x4258d4
  4258a6:	add    DWORD PTR [ecx-0x47],edi
  4258a9:	push   eax
  4258aa:	ja     0x4258e2
  4258ac:	add    DWORD PTR [eax+edx*1-0x73],ecx
  4258b0:	lea    ecx,[ebp+0x13e7750]
  4258b6:	dec    esp
  4258b7:	cmc    
  4258b8:	lea    ecx,[ebp+0x4677508d]
  4258be:	add    DWORD PTR [edi+ebp*4-0x73],ecx
  4258c2:	lea    ecx,[ebp+0x1627750]
  4258c8:	dec    esp
  4258c9:	mov    BYTE PTR [ebp+0x77508d8d],cl
  4258cf:	push   esi
  4258d0:	add    DWORD PTR [ecx+esi*2+0x3a],ecx
  4258d4:	lea    ecx,[ebp+0x15e7750]
  4258da:	dec    esp
  4258db:	aam    0x3a
  4258dd:	lea    ecx,[ebp+0x50667750]
  4258e3:	xlat   BYTE PTR ds:[ebx]
  4258e4:	push   ds
  4258e5:	add    DWORD PTR [ebp+edx*4+0x3a],ecx
  4258e9:	lea    ecx,[ebp-0x7f9588b0]
  4258ef:	dec    esp
  4258f0:	cmp    cl,BYTE PTR ds:[ebp+0x5381808d]
  4258f7:	jb     0x425949
  4258f9:	xchg   edi,eax
  4258fa:	not    DWORD PTR [eax-0x69]
  4258fd:	jp     0x42594f
  4258ff:	xchg   edi,eax
  425900:	adc    BYTE PTR [eax-0x69],0x83
  425904:	jl     0x42597d
  425906:	std    
  425907:	(bad)  [esi-0x79a1ee21]
  42590d:	pop    DWORD PTR [ebx+0x26]
  425910:	push   eax
  425911:	ja     0x4258c2
  425913:	xor    al,0xfd
  425916:	and    bh,0xaf
  425919:	push   ebx
  42591a:	mov    esp,DWORD PTR [edx-0x20a724fb]
  425920:	adc    DWORD PTR [ecx],ecx
  425922:	inc    esi
  425923:	retf   
  425924:	or     al,0xb2
  425926:	popa   
  425927:	or     al,0x50
  425929:	out    0xf9,eax
  42592b:	and    bh,0xfd
  42592e:	and    BYTE PTR [edi+0x53ac80af],0x4d
  425935:	push   ebx
  425936:	test   DWORD PTR [edx+0x2aff29b4],esi
  42593c:	and    bh,0xf9
  42593f:	icebp  
  425940:	lea    ecx,[ebp+0x353cd8d]
  425946:	inc    DWORD PTR [esi]
  425948:	jmp    FWORD PTR [edx]
  42594a:	push   eax
  42594b:	xlat   BYTE PTR ds:[ebx]
  42594c:	mov    ecx,DWORD PTR [ecx]
  42594e:	(bad)  
  425950:	lea    ecx,[ebp-0x8885d73]
  425956:	rcr    ebp,0x86
  425959:	outs   dx,DWORD PTR ds:[esi]
  42595a:	pusha  
  42595b:	mov    esi,0xe26438f
  425960:	lock jp 0x425905
  425963:	ja     0x4258e7
  425965:	rcr    ebp,0x52
  425968:	or     al,0xe
  42596a:	lock add DWORD PTR [eax-0x287f0210],0xffffffaf
  425972:	and    bh,0xfd
  425975:	and    BYTE PTR [edi-0x5dcdac51],0x5
  42597c:	fistp  DWORD PTR [eax-0x21]
  42597f:	adc    DWORD PTR [ecx],ecx
  425981:	inc    esi
  425982:	add    eax,0x29bcb20c
  425987:	mov    dl,0x88
  425989:	or     al,0x53
  42598b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42598c:	push   ebx
  42598d:	test   edi,edi
  42598f:	adc    edi,edi
  425991:	dec    ebx
  425992:	in     eax,dx
  425993:	mov    dl,0x4d
  425995:	in     eax,dx
  425996:	jle    0x4259e5
  425998:	push   eax
  425999:	lock std 
  42599b:	push   eax
  42599c:	xlat   BYTE PTR ds:[ebx]
  42599d:	scas   eax,DWORD PTR es:[edi]
  42599e:	xor    al,0xf7
  4259a1:	push   eax
  4259a3:	jp     0x42597a
  4259a5:	and    esp,DWORD PTR [edx+0x36ff777]
  4259ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259ac:	retf   
  4259ad:	pusha  
  4259ae:	sbb    edi,edx
  4259b0:	jp     0x425965
  4259b2:	push   cs
  4259b3:	lock jp 0x425958
  4259b6:	ja     0x42593a
  4259b8:	sti    
  4259b9:	jl     0x425997
  4259bb:	int3   
  4259bc:	push   cs
  4259bd:	lock add esp,0x1d
  4259c1:	mov    ds:0xddc1f7f0,al
  4259c6:	xchg   BYTE PTR [ecx+0x30],bh
  4259c9:	ja     0x425a45
  4259cb:	mov    ds:0xddc182b7,al
  4259d0:	push   edx
  4259d1:	jmp    0x438f:0xbe83b7a2
  4259d8:	es xor al,0xfd
  4259dc:	xor    al,0xaf
  4259df:	and    bh,0xfd
  4259e2:	and    BYTE PTR [edi+0x63609af],0xc
  4259e9:	mov    dl,0xbe
  4259eb:	sub    DWORD PTR [ebx+0xb],edx
  4259ee:	inc    esi
  4259f0:	mov    dl,0xbc
  4259f2:	or     al,0xff
  4259f4:	sub    ah,BYTE PTR [edx-0x20a726fb]
  4259fa:	adc    DWORD PTR [eax-0x10],edx
  4259fd:	std    
  4259fe:	push   ebx
  4259ff:	xor    dl,BYTE PTR [eax-0x29]
  425a02:	scas   eax,DWORD PTR es:[edi]
  425a03:	xor    al,0xfd
  425a06:	adc    bh,0xaf
  425a09:	and    bh,0xfd
  425a0c:	and    BYTE PTR [edi-0x5dcdac51],0x5
  425a13:	fistp  DWORD PTR [eax-0x21]
  425a16:	adc    DWORD PTR [ecx],ecx
  425a18:	inc    esi
  425a19:	add    eax,0x29bcb20c
  425a1e:	mov    dl,0x88
  425a20:	or     al,0x53
  425a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a23:	push   ebx
  425a24:	test   edi,edi
  425a26:	adc    edi,edi
  425a28:	dec    ebx
  425a29:	call   DWORD PTR [ecx+0x9]
  425a2c:	dec    edi
  425a2d:	ror    BYTE PTR [ebp+0x4d],0x4d
  425a31:	adc    bh,0x8b
  425a34:	dec    edi
  425a35:	or     ecx,DWORD PTR [ecx]
  425a37:	mov    cr1,ebp
  425a3a:	lea    ecx,[ebp-0x7f9a8680]
  425a40:	in     eax,0x81
  425a42:	fucomp st(4)
  425a44:	or     eax,0x80359b80
  425a49:	leave  
  425a4a:	and    eax,0x802d7b80
  425a4f:	stos   DWORD PTR es:[edi],eax
  425a50:	sbb    eax,0x97507eec
  425a55:	scas   eax,DWORD PTR es:[edi]
  425a56:	sbb    BYTE PTR [ebx-0x13ae13eb],0xfc
  425a5d:	push   eax
  425a5e:	lock xchg DWORD PTR [eax+0x77],edx
  425a62:	jp     0x425ab4
  425a64:	xchg   edi,eax
  425a65:	enter  0x9463,0xdb
  425a69:	in     al,dx
  425a6a:	push   eax
  425a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a6c:	enter  0x7253,0x50
  425a70:	xchg   edi,eax
  425a71:	sbb    DWORD PTR [edi-0x69],0xffffffc8
  425a75:	(bad)  
  425a77:	(bad)  
  425a78:	in     al,dx
  425a79:	xor    BYTE PTR [edi+0x7a],0x80
  425a7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a7e:	scas   eax,DWORD PTR es:[edi]
  425a7f:	or     DWORD PTR [ebp+eiz*1-0x6d],ebx
  425a83:	arpl   WORD PTR [ebx+0x63b3d31d],bx
  425a89:	stos   DWORD PTR es:[edi],eax
  425a8a:	adc    eax,0xee80a9d3
  425a8f:	pop    edx
  425a90:	adc    BYTE PTR [edi+0x202580ef],0x50
  425a97:	xchg   edi,eax
  425a98:	mov    ch,ah
  425a9a:	cld    
  425a9b:	add    DWORD PTR [edi+0x4304ec1e],edx
  425aa1:	xchg   edi,eax
  425aa2:	out    dx,eax
  425aa3:	push   eax
  425aa4:	ja     0x425ad8
  425aa6:	push   eax
  425aa7:	xchg   edi,eax
  425aa8:	jbe    0x425b26
  425aaa:	ja     0x425aa5
  425aac:	dec    DWORD PTR [ebp-0x687f7273]
  425ab2:	mov    ch,ch
  425ab4:	(bad)  
  425ab5:	(bad)  
  425ab6:	xlat   BYTE PTR ds:[ebx]
  425ab7:	sub    DWORD PTR [edx],ecx
  425ab9:	xor    BYTE PTR [edi+0x76],0x80
  425abd:	push   ebp
  425abe:	jno    0x425a46
  425ac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ac1:	mov    cl,BYTE PTR [ebp+0x4d]
  425ac4:	adc    bh,0x8b
  425ac7:	xor    al,0x87
  425aca:	dec    edi
  425acb:	push   0xffffffd5
  425acd:	das    
  425ace:	xor    BYTE PTR [edi-0x76],0x50
  425ad2:	sbb    eax,0xed327780
  425ad7:	ja     0x425a63
  425ad9:	out    dx,al
  425ada:	dec    ebp
  425adb:	lock stc 
  425add:	xlat   BYTE PTR ds:[ebx]
  425ade:	mov    dh,0x80
  425ae0:	xchg   edi,eax
  425ae1:	sbb    eax,0x50
  425ae4:	xchg   edi,eax
  425ae5:	and    DWORD PTR [ebx-0x69],0xffffffc8
  425ae9:	in     al,0xdc
  425aeb:	stos   DWORD PTR es:[edi],eax
  425aec:	cmp    ah,0xa9
  425aef:	mov    ds:0x8deefb70,eax
  425af4:	xchg   edi,eax
  425af5:	add    BYTE PTR [edi-0x10287f67],0x4d
  425afc:	loopne 0x425b30
  425afe:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  425b04:	xchg   ch,ah
  425b06:	int3   
  425b07:	dec    ebp
  425b08:	dec    ebp
  425b09:	or     BYTE PTR [esi+edi*1+0x3a],0x8d
  425b0e:	lea    edx,[ebx+0x70]
  425b11:	pop    edi
  425b12:	out    dx,eax
  425b13:	test   eax,0x80b21809
  425b18:	mov    dl,0xa7
  425b1a:	sti    
  425b1b:	out    dx,al
  425b1c:	lea    eax,[eax-0x72c5e1e4]
  425b22:	lea    edx,[ebx+0x5e328099]
  425b28:	and    al,0x38
  425b2a:	lea    ecx,[ebp-0x2ac5e3c]
  425b30:	mov    ecx,0x50b970b6
  425b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b36:	in     eax,dx
  425b37:	sti    
  425b38:	or     al,0xed
  425b3a:	cld    
  425b3b:	or     al,0x9
  425b3d:	pop    esp
  425b3e:	mov    eax,ds:0xd7fd63b9
  425b43:	pop    es
  425b44:	push   ebx
  425b45:	push   0xffffffa9
  425b47:	mov    ecx,0xce800c50
  425b4c:	push   ds
  425b4d:	cmp    cl,BYTE PTR [ebp-0x648b5c73]
  425b53:	or     BYTE PTR [ebx+0x3a1e4c80],0x8d
  425b5a:	lea    esi,[edx+0x7cec6fbc]
  425b60:	les    esp,FWORD PTR [esi-0x3232fa33]
  425b66:	mov    esi,0x6def10bd
  425b6b:	fmul   DWORD PTR [edi-0x7934325a]
  425b71:	xlat   BYTE PTR ds:[ebx]
  425b72:	popa   
  425b73:	cld    
  425b74:	lea    ecx,[ebp+0x3a1e4c80]
  425b7a:	lea    ecx,[ebp+0x74ab7cec]
  425b80:	xchg   edi,eax
  425b81:	add    BYTE PTR [edi-0x72a5785e],0x8d
  425b88:	lea    edx,[ebx+0x438f8660]
  425b8e:	es cdq 
  425b90:	fwait
  425b91:	jl     0x425c0a
  425b93:	enter  0x58e4,0xdf
  425b97:	adc    DWORD PTR [eax-0x10],edx
  425b9a:	mov    edi,DWORD PTR [edi+esi*2-0x79]
  425b9e:	fstp   DWORD PTR [eax-0x21]
  425ba1:	adc    DWORD PTR [eax-0x10],edx
  425ba4:	xor    dl,BYTE PTR [ebx+0x6a]
  425ba7:	jl     0x425c20
  425ba9:	xchg   dh,dh
  425bab:	and    al,0x6f
  425bad:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  425bb1:	cmc    
  425bb2:	and    al,0x6f
  425bb4:	cmp    BYTE PTR [edi+esi*2-0x9],bh
  425bb8:	call   0x50543b15
  425bbd:	lock jp 0x425c3c
  425bc0:	ja     0x425c20
  425bc2:	out    0x58,al
  425bc4:	fist   WORD PTR [ecx]
  425bc6:	push   eax
  425bc7:	lock data16 xor BYTE PTR [edi-0x79],0x80
  425bcd:	xchg   edi,eax
  425bce:	xor    cl,BYTE PTR [ecx]
  425bd0:	inc    esi
  425bd1:	test   DWORD PTR [edx+esi*4],0x97800c07
  425bd8:	xchg   DWORD PTR [eax-0x74dcd29],eax
  425bde:	sub    DWORD PTR [edi+eiz*4-0x39],ebp
  425be2:	add    al,0xd4
  425be4:	push   ebx
  425be5:	jl     0x425c3a
  425be7:	or     edi,edi
  425be9:	cld    
  425bea:	push   eax
  425beb:	ja     0x425b70
  425bed:	add    DWORD PTR [edi-0x7c],esi
  425bf0:	push   eax
  425bf1:	ja     0x425ba2
  425bf3:	xor    BYTE PTR [edi-0x51],0xfa
  425bf7:	and    ah,BYTE PTR [edi+ebp*2]
  425bfa:	cmp    BYTE PTR [ebp+ecx*4-0x47],bh
  425bfe:	pop    eax
  425bff:	fist   WORD PTR [ecx]
  425c01:	push   eax
  425c02:	jge    0x425bf2
  425c04:	xor    al,0x8a
  425c07:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  425c0e:	or     al,0xe2
  425c10:	or     eax,0xb2f7539d
  425c15:	clc    
  425c16:	sub    edi,edi
  425c18:	inc    BYTE PTR [eax-0x587f7569]
  425c1e:	mov    dl,BYTE PTR [ebx+0x7e]
  425c21:	mov    dl,0x7
  425c23:	or     al,0x53
  425c25:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c2c:	inc    BYTE PTR [eax-0x587f7569]
  425c32:	mov    dl,BYTE PTR [ebx+0x7e]
  425c35:	mov    dl,0x7
  425c37:	or     al,0x53
  425c39:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c40:	inc    BYTE PTR [eax-0x587f7569]
  425c46:	mov    dl,BYTE PTR [ebx+0x7e]
  425c49:	mov    dl,0x7
  425c4b:	or     al,0x53
  425c4d:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c54:	(bad)  
  425c55:	push   eax
  425c56:	add    DWORD PTR [edx+0x4d],edx
  425c59:	dec    ebp
  425c5a:	dec    ebp
  425c5b:	xor    al,0x86
  425c5e:	adc    BYTE PTR [edi+0x53f75386],0x51
  425c65:	mov    dl,0xf8
  425c67:	sub    DWORD PTR [edx-0x100f342],esi
  425c6d:	adc    BYTE PTR [edi-0x79587f7a],0x53
  425c74:	jle    0x425cc9
  425c76:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  425c7d:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425c84:	dec    ebp
  425c85:	dec    ebp
  425c86:	xor    al,0x21
  425c89:	xor    BYTE PTR [eax],0x80
  425c8c:	xchg   edi,eax
  425c8d:	mov    al,BYTE PTR [eax+0x7f808aa7]
  425c93:	or     dl,BYTE PTR [ebx-0x7e]
  425c96:	push   ebx
  425c97:	jle    0x425c4b
  425c99:	pop    es
  425c9a:	or     al,0xb2
  425c9c:	mov    ah,0x29
  425c9e:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425ca5:	dec    ebp
  425ca6:	dec    ebp
  425ca7:	xor    al,0x71
  425caa:	adc    BYTE PTR [edi+0x53f75371],0x51
  425cb1:	mov    dl,0xf8
  425cb3:	sub    DWORD PTR [edx-0x100f342],esi
  425cb9:	adc    BYTE PTR [edi-0x75587f76],0x53
  425cc0:	add    BYTE PTR [eax+0x7e538a77],0xb2
  425cc7:	pop    es
  425cc8:	or     al,0xb2
  425cca:	mov    ah,0x29
  425ccc:	call   DWORD PTR [eax+eax*4-0x3ac7559]
  425cd3:	mov    dl,0x86
  425cd5:	or     al,0xed
  425cd7:	(bad)  
  425cd8:	or     eax,0xff29b4b2
  425cdd:	je     0x425ccb
  425cdf:	test   DWORD PTR [eax+0x41501577],0x4d4dd518
  425ce9:	dec    ebp
  425cea:	xor    al,0x15
  425ced:	in     eax,dx
  425cee:	add    eax,0x29bab20d
  425cf3:	push   ebx
  425cf4:	cld    
  425cf5:	mov    dl,0x86
  425cf7:	or     al,0xff
  425cf9:	mov    dl,0x80
  425cfb:	lock mov al,BYTE PTR [eax-0x3d127569]
  425d02:	or     eax,0xf8b25153
  425d07:	sub    DWORD PTR [edx-0x100f342],esi
  425d0d:	adc    BYTE PTR [edi-0x75587f76],0x53
  425d14:	jle    0x425d03
  425d16:	(bad)  
  425d17:	or     eax,0xb20c07b2
  425d1c:	mov    ah,0x29
  425d1e:	call   DWORD PTR [esp+ebp*8-0x75687f02]
  425d25:	and    BYTE PTR [edi-0x1281ac76],0xc6
  425d2c:	or     eax,0xb229b4b2
  425d31:	pop    es
  425d32:	or     al,0xff
  425d34:	xchg   esp,eax
  425d35:	in     al,dx
  425d36:	(bad)  
  425d37:	push   eax
  425d38:	xend   
  425d3b:	dec    ebp
  425d3c:	dec    ebp
  425d3d:	dec    ebp
  425d3e:	add    DWORD PTR [edi+0x52],ecx
  425d41:	dec    ebp
  425d42:	dec    ebp
  425d43:	dec    ebp
  425d44:	or     al,BYTE PTR [eax-0xf7f7589]
  425d4a:	mov    ah,dl
  425d4c:	or     eax,0x53fc53a3
  425d51:	adc    DWORD PTR [edx-0x454df37a],esi
  425d57:	sub    edi,edi
  425d59:	mov    dl,0xa
  425d5b:	xor    BYTE PTR [edi+0x2d],0x1
  425d5f:	adc    ch,dh
  425d61:	lea    ecx,[ebp-0x327f6973]
  425d67:	cmp    cl,BYTE PTR ds:[ebp+0x4d814d8d]
  425d6e:	xchg   edi,eax
  425d6f:	and    eax,0x5055f080
  425d74:	cmp    al,BYTE PTR [eax-0xf7f7b89]
  425d7a:	stc    
  425d7b:	or     DWORD PTR [esi-0x3],eax
  425d7e:	or     al,0xb2
  425d80:	mov    esi,0x84f0800c
  425d85:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425d8c:	push   edi
  425d8e:	stos   BYTE PTR es:[edi],al
  425d8f:	dec    ebp
  425d90:	xlat   BYTE PTR ds:[ebx]
  425d91:	xor    eax,0x4d29bab2
  425d96:	xlat   BYTE PTR ds:[ebx]
  425d97:	inc    ebp
  425d98:	xchg   ah,cl
  425d9a:	add    eax,0x77804d4d
  425d9f:	test   BYTE PTR [eax+0x4609f9f0],al
  425da5:	std    
  425da6:	or     al,0xb2
  425da8:	mov    esi,0x84f0800c
  425dad:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425db4:	push   edi
  425db6:	stos   BYTE PTR es:[edi],al
  425db7:	dec    ebp
  425db8:	xlat   BYTE PTR ds:[ebx]
  425db9:	push   ebp
  425dba:	mov    dl,0xba
  425dbc:	sub    DWORD PTR [ebp-0x29],ecx
  425dbf:	cmp    eax,0x4d059886
  425dc4:	dec    ebp
  425dc5:	xor    BYTE PTR [edi-0x76],0x80
  425dc9:	lock mov dl,BYTE PTR [ebx+0x11]
  425dcd:	mov    dl,0xba
  425dcf:	sub    DWORD PTR [ebx-0x4],edx
  425dd2:	mov    dl,0x86
  425dd4:	or     al,0xff
  425dd6:	mov    dl,0x80
  425dd8:	lock mov al,BYTE PTR [eax+0x51538a97]
  425ddf:	mov    dl,0xbe
  425de1:	or     al,0x53
  425de3:	xchg   esp,eax
  425de4:	mov    dl,0xf8
  425de6:	sub    edi,edi
  425de8:	(bad)  
  425de9:	in     al,dx
  425dea:	mov    dl,0x80
  425dec:	lock mov al,BYTE PTR [eax+0x51538a97]
  425df3:	mov    dl,0xbe
  425df5:	or     al,0x53
  425df7:	xchg   esp,eax
  425df8:	mov    dl,0xf8
  425dfa:	sub    edi,edi
  425dfc:	(bad)  
  425dfd:	in     al,dx
  425dfe:	mov    dl,0x80
  425e00:	lock mov al,BYTE PTR [eax+0x51538a97]
  425e07:	mov    dl,0xbe
  425e09:	or     al,0x53
  425e0b:	xchg   esp,eax
  425e0c:	mov    dl,0xf8
  425e0e:	sub    edi,edi
  425e10:	(bad)  
  425e11:	in     al,dx
  425e12:	mov    dl,0x50
  425e14:	dec    edi
  425e15:	push   edx
  425e16:	dec    ebp
  425e17:	dec    ebp
  425e18:	dec    ebp
  425e19:	xor    BYTE PTR [edi+0x55],0x80
  425e1d:	lea    eax,[eax-0x687f7910]
  425e23:	xchg   BYTE PTR [ebx+0x51],dl
  425e26:	push   ebx
  425e27:	xchg   esp,eax
  425e28:	mov    dl,0xbe
  425e2a:	or     al,0xb2
  425e2c:	clc    
  425e2d:	sub    edi,edi
  425e2f:	(bad)  
  425e30:	push   eax
  425e31:	xend   
  425e34:	dec    ebp
  425e35:	dec    ebp
  425e36:	dec    ebp
  425e37:	xor    BYTE PTR [edi+0x21],0x80
  425e3b:	lea    eax,[eax-0x687f7510]
  425e41:	mov    dl,BYTE PTR [ebx+0x51]
  425e44:	mov    dl,0xbe
  425e46:	or     al,0x80
  425e48:	ins    DWORD PTR es:[edi],dx
  425e49:	or     dl,BYTE PTR [ebx-0x6c]
  425e4c:	mov    dl,0xf8
  425e4e:	sub    edi,edi
  425e50:	(bad)  
  425e51:	push   eax
  425e52:	xend   
  425e55:	dec    ebp
  425e56:	dec    ebp
  425e57:	dec    ebp
  425e58:	xor    BYTE PTR [edi+0x1d],0x80
  425e5c:	lock sbb eax,0xbab21153
  425e62:	sub    DWORD PTR [ebx-0x4],edx
  425e65:	mov    dl,0x86
  425e67:	or     al,0xff
  425e69:	mov    dl,0x80
  425e6b:	lock mov al,BYTE PTR [eax-0x6bac7569]
  425e72:	push   ebx
  425e73:	push   ecx
  425e74:	mov    dl,0xf8
  425e76:	sub    DWORD PTR [edx-0x100f342],esi
  425e7c:	adc    BYTE PTR [edi-0x75587f76],0x53
  425e83:	jle    0x425e37
  425e85:	pop    es
  425e86:	or     al,0xed
  425e88:	(bad)  
  425e89:	or     eax,0xff29b4b2
  425e8e:	xchg   esp,eax
  425e8f:	in     al,dx
  425e90:	(bad)  
  425e91:	push   eax
  425e92:	xend   
  425e95:	dec    ebp
  425e96:	dec    ebp
  425e97:	dec    ebp
  425e98:	xor    BYTE PTR [edi-0x76],0x80
  425e9c:	lock mov ch,ch
  425e9f:	add    eax,0x29bab20d
  425ea4:	push   ebx
  425ea5:	cld    
  425ea6:	mov    dl,0x86
  425ea8:	or     al,0xff
  425eaa:	mov    dl,0x80
  425eac:	lock mov al,BYTE PTR [eax-0x3d127569]
  425eb3:	or     eax,0xf8b25153
  425eb8:	sub    DWORD PTR [edx-0x100f342],esi
  425ebe:	in     al,dx
  425ebf:	mov    dl,0x80
  425ec1:	lock mov al,BYTE PTR [eax-0x3d127569]
  425ec8:	or     eax,0xf8b25153
  425ecd:	sub    DWORD PTR [edx-0x100f342],esi
  425ed3:	add    DWORD PTR [eax],ebx
  425ed5:	push   edx
  425ed6:	dec    ebp
  425ed7:	dec    ebp
  425ed8:	dec    ebp
  425ed9:	stos   BYTE PTR es:[edi],al
  425eda:	adc    BYTE PTR [edi-0x75587f76],0xec
  425ee1:	mov    dl,0x53
  425ee3:	jle    0x425ee6
  425ee5:	lock adc DWORD PTR [eax+0x41],0x4f
  425eea:	aad    0x4d
  425eec:	dec    ebp
  425eed:	dec    ebp
  425eee:	xor    BYTE PTR [edi+0x2d],0xed
  425ef2:	(bad)  
  425ef3:	or     eax,0xb20c07b2
  425ef8:	mov    ah,0x29
  425efa:	call   DWORD PTR [ecx+eax*1-0x727277f0]
  425f01:	lea    eax,[eax-0x72c5c133]
  425f07:	lea    ebp,[edx+0x4d814d96]
  425f0d:	xchg   edi,eax
  425f0e:	and    eax,0xbdd56a4f
  425f13:	xor    BYTE PTR [edi-0x79],0x80
  425f17:	lock xor cl,BYTE PTR [ecx]
  425f1a:	inc    esi
  425f1b:	std    
  425f1c:	or     al,0xb2
  425f1e:	mov    esi,0x80b6800c
  425f23:	std    
  425f24:	xor    BYTE PTR [edi-0x79],0x80
  425f28:	xchg   edi,eax
  425f29:	xor    dl,BYTE PTR [ebx+0x72]
  425f2c:	push   ebx
  425f2d:	sub    dh,BYTE PTR [edx+0x77802984]
  425f33:	and    edi,edi
  425f35:	inc    BYTE PTR [eax+0xada6371]
  425f3b:	adc    BYTE PTR [edi-0x7faa3bab],0xc
  425f42:	and    BYTE PTR [edi-0xda707f],0x10
  425f49:	and    eax,0xc87780ef
  425f4e:	xor    al,0x8b
  425f51:	or     DWORD PTR [esi-0x3],eax
  425f54:	or     al,0xb2
  425f56:	mov    esi,0xc8f0800c
  425f5b:	and    BYTE PTR [edi+0x537c538b],0xa4
  425f62:	mov    dl,0xba
  425f64:	sub    DWORD PTR [eax+0x74ff71f0],eax
  425f6a:	in     al,dx
  425f6b:	std    
  425f6c:	xor    BYTE PTR [edi+0x21],0x80
  425f70:	sbb    eax,0x500a0063
  425f75:	lock jno 0x425f5c
  425f78:	jl     0x425f3e
  425f7a:	outs   dx,DWORD PTR ds:[esi]
  425f7b:	adc    BYTE PTR [edi+0x21778055],0x80
  425f82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f83:	xor    BYTE PTR [eax+0x50659fec],0x1d
  425f8a:	sbb    BYTE PTR ds:0x80eca680,0x2e
  425f91:	lea    ecx,[ebp+0x71f0508d]
  425f97:	and    BYTE PTR [esi+0x4381a780],0x11
  425f9e:	and    BYTE PTR [edi-0x7f00af11],0x8d
  425fa5:	and    BYTE PTR [esi-0x7fc28214],0x77
  425fac:	xchg   DWORD PTR [eax-0x10],edx
  425faf:	scas   eax,DWORD PTR es:[edi]
  425fb0:	xor    al,0x32
  425fb3:	or     DWORD PTR [esi-0x3],eax
  425fb6:	or     al,0xb2
  425fb8:	mov    esi,0x87f0800c
  425fbd:	and    BYTE PTR [edi+0x537c5332],0xa4
  425fc4:	mov    dl,0xba
  425fc6:	sub    edi,edi
  425fc8:	je     0x42601a
  425fca:	ja     0x426011
  425fcc:	xor    BYTE PTR [edi+0x71],0xbe
  425fd0:	lds    edi,FWORD PTR [edx]
  425fd2:	lea    ecx,[ebp-0x7f788880]
  425fd8:	lock xor cl,BYTE PTR [ecx]
  425fdb:	inc    esi
  425fdc:	std    
  425fdd:	or     al,0xb2
  425fdf:	mov    esi,0x87f0800c
  425fe4:	and    BYTE PTR [edi+0x29bab232],0x80
  425feb:	lock adc eax,0xa4537c53
  425ff1:	in     eax,dx
  425ff2:	mov    dl,0x8b
  425ff4:	push   DWORD PTR [esi+esi*4-0x42]
  425ff8:	arpl   WORD PTR [edx-0x72f412f7],si
  425ffe:	lea    ecx,[ebp+0x171a780]
  426004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426005:	jae    0x425ff6
  426007:	inc    ebx
  426008:	std    
  426009:	push   eax
  42600a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42600b:	xor    eax,0x803df050
  426010:	lock test DWORD PTR [eax+0x46097a77],0x86b20cb2
  42601b:	or     al,0x80
  42601d:	ja     0x426016
  42601f:	and    BYTE PTR [edi+0x2984b27a],0x80
  426026:	ja     0x425ff0
  426028:	push   ebx
  426029:	sub    dl,BYTE PTR [ebx-0x5c]
  42602c:	call   DWORD PTR [ecx]
  42602e:	and    BYTE PTR [edi-0x7db9f675],0xc
  426035:	push   eax
  426036:	ja     0x42608d
  426038:	xor    BYTE PTR [edi-0x38],0x6e
  42603c:	out    0x55,eax
  42603e:	in     eax,dx
  42603f:	mov    dl,0xa6
  426041:	mov    dl,0xc4
  426043:	or     al,0x80
  426045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426046:	mov    edx,DWORD PTR [ebx-0x5c]
  426049:	xor    BYTE PTR [edi+0x55b79455],ah
  42604f:	and    BYTE PTR [edi-0x740f7f38],0x9
  426056:	inc    esi
  426057:	adc    DWORD PTR [edx+esi*4],ecx
  42605a:	test   BYTE PTR [ecx],ch
  42605c:	xor    BYTE PTR [edi-0x38],0xb2
  426060:	mov    esi,0x8bf0800c
  426065:	push   ebx
  426066:	jo     0x42601a
  426068:	test   BYTE PTR [ecx],ch
  42606a:	xor    BYTE PTR [edi+0x55],0x53
  42606e:	lods   al,BYTE PTR ds:[esi]
  42606f:	jmp    DWORD PTR [eax+0x935f080]
  426075:	pop    esp
  426076:	xor    BYTE PTR [ebx+0x74],al
  426079:	xor    esi,DWORD PTR [edx+0x50f7f080]
  42607f:	ja     0x4260d6
  426081:	xor    BYTE PTR [edi+0x7a],0x9
  426085:	inc    esi
  426086:	mov    dl,0xc
  426088:	mov    dl,0x86
  42608a:	or     al,0x80
  42608c:	ja     0x426085
  42608e:	and    BYTE PTR [edi+0x2984b27a],0x80
  426095:	ja     0x4260cc
  426097:	or     DWORD PTR [ebp+ecx*4-0x33],ebx
  42609b:	add    eax,0xa6a453a7
  4260a0:	adc    ebp,ecx
  4260a2:	mov    dl,0xa6
  4260a4:	xchg   esp,eax
  4260a5:	xchg   BYTE PTR [ebx+0x70],dl
  4260a8:	xchg   BYTE PTR fs:[edi+0x36092643],cl
  4260af:	mov    dl,0xc
  4260b1:	mov    dl,0x84
  4260b3:	or     al,0x57
  4260b5:	fstp   DWORD PTR [eax-0x21]
  4260b8:	adc    DWORD PTR [ebx+0x11],edx
  4260bb:	addr16 out 0x58,al
  4260be:	fist   WORD PTR [ecx]
  4260c0:	xlat   BYTE PTR ds:[ebx]
  4260c1:	aaa    
  4260c2:	arpl   WORD PTR [ecx],dx
  4260c4:	xlat   BYTE PTR ds:[ebx]
  4260c5:	dec    esi
  4260c6:	or     BYTE PTR [eax+eax*4],0xf0
  4260ca:	jno    0x4260b8
  4260cc:	cmp    al,BYTE PTR [eax+0x65ed55f0]
  4260d2:	out    dx,eax
  4260d3:	(bad)  
  4260d4:	aad    0xe
  4260d6:	or     BYTE PTR [eax+eax*4],0xf0
  4260da:	jno    0x4260c8
  4260dc:	cmp    al,BYTE PTR [eax+0x77eceff0]
  4260e2:	push   ebp
  4260e3:	xor    BYTE PTR [eax],0x3a
  4260e6:	out    dx,eax
  4260e7:	in     eax,dx
  4260e8:	ja     0x42611f
  4260ea:	or     al,0x4d
  4260ec:	lock cmp eax,0x4d234f09
  4260f2:	dec    ebp
  4260f3:	dec    ebp
  4260f4:	les    ebp,FWORD PTR [edi]
  4260f6:	xchg   BYTE PTR fs:[edi+0x77802643],cl
  4260fd:	adc    eax,0x7c45773a
  426102:	ja     0x42616e
  426104:	rcr    BYTE PTR [eax-0x21],1
  426107:	adc    DWORD PTR [eax-0x59],edx
  42610a:	jbe    0x42608c
  42610c:	ja     0x426178
  42610e:	xor    al,0x76
  426111:	or     DWORD PTR [esi-0x3],eax
  426114:	or     al,0xb2
  426116:	mov    esi,0x6af0800c
  42611b:	and    BYTE PTR [edi+0x29bab276],0x80
  426122:	lock and DWORD PTR [eax+0x537c5330],eax
  426129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42612a:	push   DWORD PTR [ecx+eax*1+0x75]
  42612e:	mov    dl,0xe5
  426130:	xor    al,0x45
  426133:	arpl   di,bp
  426135:	rcl    DWORD PTR [ebp-0x80],cl
  426138:	ja     0x4261ab
  42613a:	in     al,dx
  42613b:	ja     0x426152
  42613d:	push   eax
  42613e:	ja     0x4261b1
  426140:	sub    BYTE PTR [ebp-0x12],0x50
  426144:	ja     0x42615b
  426146:	xor    BYTE PTR [edi-0x79],0x80
  42614a:	lock xor cl,BYTE PTR [ecx]
  42614d:	inc    esi
  42614e:	std    
  42614f:	or     al,0xb2
  426151:	mov    esi,0x87f0800c
  426156:	and    BYTE PTR [edi+0x53a45332],0x7c
  42615d:	push   DWORD PTR [edx+esi*4-0x46]
  426161:	sub    DWORD PTR [edi+0x77],ebx
  426164:	adc    eax,0xdbf4f09
  426169:	dec    ebp
  42616a:	dec    ebp
  42616b:	xor    al,0x8a
  42616e:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  426175:	or     al,0xe2
  426177:	or     eax,0xb2f7539d
  42617c:	clc    
  42617d:	sub    edi,edi
  42617f:	inc    BYTE PTR [eax-0x587f7569]
  426185:	mov    dl,BYTE PTR [ebx+0x7e]
  426188:	mov    dl,0x7
  42618a:	or     al,0x53
  42618c:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426193:	inc    BYTE PTR [eax-0x587f7569]
  426199:	mov    dl,BYTE PTR [ebx+0x7e]
  42619c:	mov    dl,0x7
  42619e:	or     al,0x53
  4261a0:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  4261a7:	inc    BYTE PTR [eax-0x587f7569]
  4261ad:	mov    dl,BYTE PTR [ebx+0x7e]
  4261b0:	push   ebx
  4261b1:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261b8:	call   DWORD PTR [esp+ebp*8+0x520150fe]
  4261bf:	dec    ebp
  4261c0:	dec    ebp
  4261c1:	dec    ebp
  4261c2:	xor    al,0x81
  4261c5:	adc    BYTE PTR [edi-0x79587f7a],0x53
  4261cc:	jle    0x426221
  4261ce:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261d5:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  4261dc:	dec    ebp
  4261dd:	dec    ebp
  4261de:	xor    al,0x21
  4261e1:	xor    BYTE PTR [eax],0x80
  4261e4:	xchg   edi,eax
  4261e5:	mov    al,BYTE PTR [eax+0x7f808aa7]
  4261eb:	or     dl,BYTE PTR [ebx+0x7e]
  4261ee:	push   ebx
  4261ef:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261f6:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  4261fd:	dec    ebp
  4261fe:	dec    ebp
  4261ff:	xor    al,0x1d
  426202:	adc    BYTE PTR [edi-0x4d08ace3],0xf8
  426209:	sub    DWORD PTR [ebx+0x51],edx
  42620c:	mov    dl,0xbe
  42620e:	or     al,0xff
  426210:	inc    BYTE PTR [eax-0x587f7569]
  426216:	mov    dl,BYTE PTR [ebx-0x7e]
  426219:	xor    BYTE PTR [edi-0x76],0x53
  42621d:	jle    0x4261d1
  42621f:	mov    ah,0x29
  426221:	mov    dl,0x7
  426223:	or     al,0xff
  426225:	xchg   esp,eax
  426226:	and    BYTE PTR [edi-0x1203ac76],0xc6
  42622d:	or     eax,0xb20c86b2
  426232:	mov    ah,0x29
  426234:	push   DWORD PTR [esp+ebp*8-0x9]
  426238:	push   eax
  426239:	inc    ecx
  42623a:	sbb    ch,dl
  42623c:	dec    ebp
  42623d:	dec    ebp
  42623e:	dec    ebp
  42623f:	xor    al,0x8a
  426242:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  426249:	or     al,0xe2
  42624b:	or     eax,0xb2f7539d
  426250:	clc    
  426251:	sub    edi,edi
  426253:	inc    BYTE PTR [eax-0x587f7569]
  426259:	mov    dl,BYTE PTR [ebx+0x7e]
  42625c:	mov    dl,0x7
  42625e:	or     al,0x53
  426260:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426267:	inc    BYTE PTR [eax-0x587f7569]
  42626d:	mov    dl,BYTE PTR [ebx+0x7e]
  426270:	mov    dl,0x7
  426272:	or     al,0x53
  426274:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  42627b:	inc    BYTE PTR [ecx]
  42627d:	xchg   edi,eax
  42627e:	adc    DWORD PTR [eax+0x16],0x1
  426282:	aad    0x4d
  426284:	dec    ebp
  426285:	dec    ebp
  426286:	add    DWORD PTR [ecx],eax
  426288:	push   edx
  426289:	dec    ebp
  42628a:	dec    ebp
  42628b:	dec    ebp
  42628c:	xchg   esi,eax
  42628d:	xor    al,0x8a
  426290:	adc    BYTE PTR [edi-0x7faeac76],0xd7
  426297:	sub    eax,0xbeb2f753
  42629c:	or     al,0xb2
  42629e:	clc    
  42629f:	sub    edi,edi
  4262a1:	(bad)  
  4262a2:	xchg   esi,eax
  4262a3:	add    DWORD PTR [eax+ecx*4-0x73],ecx
  4262a7:	lea    ecx,[ebp+0x3e4c800a]
  4262ad:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4262b3:	xchg   edi,eax
  4262b4:	and    eax,0x3acd4c80
  4262b9:	lea    ecx,[ebp-0x7fde88b0]
  4262bf:	ja     0x4262b0
  4262c1:	sub    bh,0xec
  4262c4:	lock and DWORD PTR [eax-0x10],edx
  4262c8:	and    DWORD PTR [eax-0x687f3710],eax
  4262ce:	mov    ecx,DWORD PTR [ecx]
  4262d0:	inc    esi
  4262d1:	mov    dh,0xc
  4262d3:	mov    dl,0x7
  4262d5:	or     al,0x80
  4262d7:	xchg   edi,eax
  4262d8:	enter  0xd780,0x8b
  4262dc:	push   ebx
  4262dd:	or     esi,DWORD PTR [edx-0x687fd608]
  4262e3:	enter  0x2a53,0xff
  4262e7:	push   ecx
  4262e8:	adc    bh,0x8b
  4262eb:	or     DWORD PTR [esi-0x3e],eax
  4262ee:	or     al,0xb2
  4262f0:	mov    BYTE PTR [eax+eax*4],cl
  4262f3:	xlat   BYTE PTR ds:[ebx]
  4262f4:	enter  0xa780,0x8b
  4262f8:	push   ebx
  4262f9:	pushf  
  4262fa:	push   ebx
  4262fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262fc:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  426303:	mov    dl,0x2
  426305:	sub    DWORD PTR [eax+0x46098bd7],eax
  42630b:	ret    0xb20c
  42630e:	mov    BYTE PTR [eax+eax*4],cl
  426311:	xlat   BYTE PTR ds:[ebx]
  426312:	enter  0xa780,0x8b
  426316:	push   ebx
  426317:	pushf  
  426318:	push   ebx
  426319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42631a:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  426321:	mov    dl,0x2
  426323:	sub    DWORD PTR [eax+0x46098bd7],eax
  426329:	ret    0xb20c
  42632c:	mov    BYTE PTR [eax+eax*4],cl
  42632f:	xlat   BYTE PTR ds:[ebx]
  426330:	enter  0x9c53,0x80
  426334:	out    0x8b,eax
  426336:	push   ebx
  426337:	dec    ebp
  426338:	call   FWORD PTR [esp+ebp*8+0x4d0a96fe]
  42633f:	xlat   BYTE PTR ds:[ebx]
  426340:	and    DWORD PTR [edx-0x6979d6fe],esi
  426346:	xchg   DWORD PTR [ebp+0x4d],ecx
  426349:	xor    BYTE PTR [edi-0x51],0xab
  42634d:	test   eax,0x81fb70a3
  426352:	lea    edx,[edi-0x78127880]
  426358:	inc    ebp
  426359:	xchg   ebx,eax
  42635a:	cdq    
  42635b:	fwait
  42635c:	push   ebx
  42635d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42635e:	push   ebx
  42635f:	jo     0x4263dd
  426361:	ja     0x4262e5
  426363:	fstp   DWORD PTR [eax-0x21]
  426366:	adc    DWORD PTR [esi-0x7a],ebx
  426369:	pop    DWORD PTR [ebx+0x26]
  42636c:	push   eax
  42636d:	ja     0x4262f2
  42636f:	jl     0x4263e8
  426371:	xchg   ah,ah
  426373:	pop    eax
  426374:	fist   WORD PTR [ecx]
  426376:	push   eax
  426377:	ja     0x426300
  426379:	jl     0x4263f2
  42637b:	xchg   esi,esi
  42637d:	mov    ds:0x777c386f,eax
  426382:	enter  0xe9f6,0x6f
  426386:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  42638a:	cli    
  42638b:	and    al,0x6f
  42638d:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  426391:	hlt    
  426392:	and    al,0x6f
  426394:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  426398:	mul    BYTE PTR [esi+ebp*8]
  42639b:	cmp    BYTE PTR [ecx],al
  42639d:	ja     0x42638d
  42639f:	push   eax
  4263a0:	ja     0x42632d
  4263a2:	xor    BYTE PTR [edi+0x1d],0x80
  4263a6:	bound  esi,QWORD PTR [esi]
  4263a8:	cmp    cl,BYTE PTR [ebp+0x1d77808d]
  4263ae:	xor    al,0x1d
  4263b1:	or     ch,0x2e
  4263b4:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  4263ba:	pop    ebp
  4263bb:	in     al,dx
  4263bc:	out    0x65,al
  4263be:	adc    BYTE PTR [edi+0x26508082],0x3a
  4263c5:	lea    ecx,[ebp-0x7f0618b0]
  4263cb:	out    0x83,eax
  4263cd:	or     DWORD PTR [esi-0x7b],eax
  4263d0:	or     al,0xb2
  4263d2:	popa   
  4263d3:	or     al,0x80
  4263d5:	out    0x82,eax
  4263d7:	and    BYTE PTR [edi-0x583d5d7d],0xc7
  4263de:	add    al,0xd4
  4263e0:	push   ebx
  4263e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263e2:	mov    dl,0xbc
  4263e4:	sub    DWORD PTR [eax+0x6394ff5f],eax
  4263ea:	pushf  
  4263eb:	xlat   BYTE PTR ds:[ebx]
  4263ec:	push   edx
  4263ed:	sbb    BYTE PTR [ecx],0x50
  4263f0:	xchg   edi,eax
  4263f1:	mov    eax,DWORD PTR [eax-0x687fea69]
  4263f7:	jno    0x426379
  4263f9:	xchg   edi,eax
  4263fa:	and    DWORD PTR [ecx],eax
  4263fc:	xchg   edi,eax
  4263fd:	test   BYTE PTR [edx-0x697428b3],ch
  426403:	or     bl,BYTE PTR [ecx+0x11dd74d]
  426409:	ja     0x426404
  42640b:	dec    ebp
  42640c:	xlat   BYTE PTR ds:[ebx]
  42640d:	out    dx,eax
  42640e:	dec    ebp
  42640f:	xlat   BYTE PTR ds:[ebx]
  426410:	enter  0xd74d,0x32
  426414:	dec    ebp
  426415:	xlat   BYTE PTR ds:[ebx]
  426416:	xchg   DWORD PTR [edx],ecx
  426418:	add    DWORD PTR [edi-0x76],esi
  42641b:	or     al,BYTE PTR [esi+0x4d4d4bab]
  426421:	push   eax
  426422:	ja     0x426441
  426424:	xor    BYTE PTR [edi+0x1d],0x80
  426428:	lock and eax,0x80159250
  42642e:	ja     0x426455
  426430:	jl     0x4263bf
  426432:	in     al,dx
  426433:	lea    ecx,[ebp-0x7b887f73]
  426439:	xor    al,0x25
  42643c:	push   eax
  42643d:	xchg   edx,eax
  42643e:	out    dx,al
  42643f:	xor    BYTE PTR [edi+0x71],0x80
  426443:	lock and eax,0x80ef9250
  426449:	ja     0x426460
  42644b:	xor    al,0x25
  42644e:	push   eax
  42644f:	xchg   edx,eax
  426450:	and    DWORD PTR [eax+0x6d7c2577],eax
  426456:	and    eax,0x8d8d8d3a
  42645b:	les    ebx,FWORD PTR [edi]
  42645d:	xor    BYTE PTR [edi+0x1d],0x80
  426461:	lock sbb eax,0x3a2ecd80
  426467:	lea    ecx,[ebp+0x3a265080]
  42646d:	lea    ecx,[ebp+0x3a438d80]
  426473:	push   eax
  426474:	ja     0x426400
  426476:	xor    BYTE PTR [edi-0x76],0xab
  42647a:	test   eax,0x1dfb70a3
  42647f:	lea    edx,[edi+0x77808780]
  426485:	and    DWORD PTR [edx-0x72c5c179],esp
  42648b:	lea    edx,[ebx-0x9986467]
  426491:	and    al,0x6f
  426493:	cmp    BYTE PTR [ecx],cl
  426495:	dec    edi
  426496:	mov    esi,0x808d8da6
  42649b:	ja     0x42650e
  42649d:	addr16 cmc 
  42649f:	and    al,0x6f
  4264a1:	cmp    BYTE PTR [ecx],cl
  4264a3:	dec    edi
  4264a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264a6:	lea    ecx,[ebp-0x26788884]
  4264ac:	pop    eax
  4264ad:	fist   WORD PTR [ecx]
  4264af:	pop    esi
  4264b0:	xchg   BYTE PTR [edi+0x77502643],cl
  4264b6:	xor    bh,BYTE PTR [edi+esi*2-0x7]
  4264ba:	in     al,0x58
  4264bc:	fist   WORD PTR [ecx]
  4264be:	push   eax
  4264bf:	ja     0x426447
  4264c1:	xor    BYTE PTR [edi-0x11],0x50
  4264c5:	ja     0x42648f
  4264c7:	xor    BYTE PTR [edi-0x38],0x80
  4264cb:	int    0x86
  4264cd:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  4264d3:	lea    edx,[eax+0x77]
  4264d6:	mov    esp,DWORD PTR [eax+0x7f]
  4264d9:	cmp    BYTE PTR [ebp+0x38975e8d],cl
  4264df:	lea    ecx,[ebp+0x5a7750b9]
  4264e5:	in     eax,dx
  4264e6:	push   0xd
  4264e8:	mov    ecx,0x80d17750
  4264ed:	mov    dl,0xb9
  4264ef:	push   eax
  4264f0:	ja     0x426508
  4264f2:	pop    esi
  4264f3:	int3   
  4264f4:	cmp    BYTE PTR [ebp-0x46087f73],cl
  4264fa:	push   eax
  4264fb:	xchg   edi,eax
  4264fc:	loope  0x4264ff
  4264fe:	push   edx
  4264ff:	or     al,0x1
  426501:	lahf   
  426502:	stos   BYTE PTR es:[edi],al
  426503:	cmp    BYTE PTR [esi-0x47],0x50
  426507:	xchg   edi,eax
  426508:	push   ds
  426509:	adc    BYTE PTR [ecx+edi*4-0x121668b0],0xfb
  426511:	jle    0x4264cc
  426513:	push   eax
  426514:	xchg   edi,eax
  426515:	int    0x1
  426517:	xchg   esi,eax
  426518:	push   ebp
  426519:	add    BYTE PTR [ebp-0x1518af47],0xed
  426520:	jl     0x42659c
  426522:	mov    ecx,0x10fe750
  426527:	fistp  WORD PTR [ecx-0x47]
  42652a:	push   eax
  42652b:	out    0x4c,eax
  42652d:	mov    ecx,0xb9107750
  426532:	push   eax
  426533:	xlat   BYTE PTR ds:[ebx]
  426534:	pop    DWORD PTR [eax+0x7750b974]
  42653a:	inc    ecx
  42653b:	mov    ecx,0x4d6d1850
  426540:	dec    ebp
  426541:	dec    ebp
  426542:	in     eax,dx
  426543:	push   0x62
  426545:	mov    ecx,0x4dd84f50
  42654a:	dec    ebp
  42654b:	dec    ebp
  42654c:	add    DWORD PTR [edx+0x4f50b985],edx
  426552:	jne    0x4265a1
  426554:	dec    ebp
  426555:	dec    ebp
  426556:	in     eax,dx
  426557:	push   0xffffffd4
  426559:	mov    ecx,0x4d794f50
  42655e:	dec    ebp
  42655f:	dec    ebp
  426560:	add    DWORD PTR [edx+0x4f50b971],edx
  426566:	jge    0x4265b5
  426568:	dec    ebp
  426569:	dec    ebp
  42656a:	in     eax,dx
  42656b:	push   0xffffffc0
  42656d:	mov    ecx,0x4dda4f50
  426572:	dec    ebp
  426573:	dec    ebp
  426574:	mov    ecx,0x4d310150
  426579:	dec    ebp
  42657a:	dec    ebp
  42657b:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  426580:	mov    cl,0x4d
  426582:	dec    ebp
  426583:	dec    ebp
  426584:	xor    BYTE PTR [edi-0x79],0x80
  426588:	lock xor cl,BYTE PTR [ecx]
  42658b:	inc    esi
  42658c:	std    
  42658d:	or     al,0xb2
  42658f:	mov    esi,0x87f0800c
  426594:	adc    BYTE PTR [edi-0x385893ce],0x4
  42659b:	aam    0x53
  42659d:	jl     0x4265f2
  42659f:	jb     0x426553
  4265a1:	mov    edx,0xc4fbff29
  4265a6:	xchg   edx,eax
  4265a7:	add    ebp,edx
  4265a9:	ja     0x426605
  4265ab:	mov    ecx,0x5c09a180
  4265b0:	sbb    DWORD PTR [ecx],ecx
  4265b2:	pop    esp
  4265b3:	jo     0x426608
  4265b5:	adc    DWORD PTR [edx-0x72c7163e],esp
  4265bb:	lea    esi,[esi+0x9bab207]
  4265c1:	(bad)  
  4265c2:	(bad)  
  4265c3:	adc    BYTE PTR [ecx+0x2f],al
  4265c6:	or     DWORD PTR ds:0xf0804d4d,0xfffffff9
  4265cd:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  4265d4:	mov    dl,0x7
  4265d6:	or     al,0x80
  4265d8:	xchg   edi,eax
  4265d9:	stc    
  4265da:	adc    bh,0x86
  4265dd:	push   ebx
  4265de:	sub    dl,BYTE PTR [ebx+0xb]
  4265e1:	call   DWORD PTR [ecx-0x4e]
  4265e4:	clc    
  4265e5:	sub    esp,ebp
  4265e7:	mov    dl,0xed
  4265e9:	mov    ebp,DWORD PTR [edi-0x29]
  4265ec:	icebp  
  4265ed:	xor    BYTE PTR [edi-0x79],0x80
  4265f1:	lock xor cl,BYTE PTR [ecx]
  4265f4:	inc    esi
  4265f5:	std    
  4265f6:	or     al,0xb2
  4265f8:	mov    esi,0x87f0800c
  4265fd:	adc    BYTE PTR [edi+0x537c5332],0x72
  426604:	mov    dl,0xba
  426606:	sub    edi,edi
  426608:	sti    
  426609:	les    edx,FWORD PTR [edx-0x32882aff]
  42660f:	mov    ecx,0x5c09a180
  426614:	sbb    DWORD PTR [ecx],ecx
  426616:	pop    esp
  426617:	jo     0x42666c
  426619:	adc    DWORD PTR [edx-0x72c7163e],esp
  42661f:	lea    esi,[esi+0x9bab207]
  426625:	(bad)  
  426626:	(bad)  
  426627:	adc    BYTE PTR [ecx+0x2f],al
  42662a:	inc    ecx
  42662b:	or     eax,0xf0804d4d
  426630:	stc    
  426631:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  426638:	mov    dl,0x7
  42663a:	or     al,0x80
  42663c:	xchg   edi,eax
  42663d:	stc    
  42663e:	adc    bh,0x86
  426641:	push   ebx
  426642:	sub    dl,BYTE PTR [ebx+0xb]
  426645:	call   DWORD PTR [ecx-0x4e]
  426648:	clc    
  426649:	sub    esp,ebp
  42664b:	mov    dl,0xed
  42664d:	mov    ecx,DWORD PTR [edi+edx*8-0x78887f0f]
  426654:	xor    al,0x32
  426657:	or     DWORD PTR [esi-0x3],eax
  42665a:	or     al,0xb2
  42665c:	mov    esi,0x87f0800c
  426661:	adc    BYTE PTR [edi+0x537c5332],0x72
  426668:	mov    dl,0xba
  42666a:	sub    edi,edi
  42666c:	sti    
  42666d:	les    esi,FWORD PTR [ebp+0x1]
  426670:	push   esi
  426671:	ja     0x4266e0
  426673:	dec    ebp
  426674:	dec    ebp
  426675:	dec    ebp
  426676:	mov    ecx,0x5c09a180
  42667b:	sbb    DWORD PTR [ecx],ecx
  42667d:	pop    esp
  42667e:	jo     0x4266d3
  426680:	adc    DWORD PTR [edx-0x72c7163e],esp
  426686:	lea    esi,[esi+0x9bab207]
  42668c:	(bad)  
  42668d:	(bad)  
  42668e:	adc    BYTE PTR [ecx+0x2f],al
  426691:	prefetchw BYTE PTR [ebp+0x4d]
  426695:	xor    al,0xf9
  426698:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  42669f:	mov    dl,0x7
  4266a1:	or     al,0x80
  4266a3:	xchg   edi,eax
  4266a4:	stc    
  4266a5:	adc    bh,0x86
  4266a8:	push   ebx
  4266a9:	sub    dl,BYTE PTR [ebx+0xb]
  4266ac:	call   DWORD PTR [ecx-0x4e]
  4266af:	clc    
  4266b0:	sub    esp,ebp
  4266b2:	mov    dl,0xed
  4266b4:	mov    ebp,edi
  4266b6:	xlat   BYTE PTR ds:[ebx]
  4266b7:	pop    esp
  4266b8:	add    DWORD PTR [edi-0x7],ecx
  4266bb:	or     eax,0x77504d4d
  4266c0:	mov    eax,DWORD PTR [eax+0x49608b77]
  4266c6:	cmp    eax,0xef50d146
  4266cb:	icebp  
  4266cc:	outs   dx,BYTE PTR ds:[esi]
  4266cd:	sub    ecx,DWORD PTR [ebx]
  4266cf:	sub    BYTE PTR [eax+0xa],dl
  4266d2:	out    dx,al
  4266d3:	or     BYTE PTR [edi-0x7],0xd
  4266d7:	dec    ebp
  4266d8:	dec    ebp
  4266d9:	sbb    BYTE PTR [eax-0x7a],0xd
  4266dd:	dec    ebp
  4266de:	dec    ebp
  4266df:	push   eax
  4266e0:	xlat   BYTE PTR ds:[ebx]
  4266e1:	xchg   dl,bh
  4266e3:	and    ah,BYTE PTR [edi+ebp*2]
  4266e6:	cmp    BYTE PTR [ebx-0x4e],ah
  4266e9:	or     DWORD PTR [edi-0x2a],ecx
  4266ec:	cmp    cl,BYTE PTR [ebp-0x7968a073]
  4266f2:	or     DWORD PTR [edi+0x6e],ecx
  4266f5:	cmp    cl,BYTE PTR [ebp+0x38305e8d]
  4266fb:	lea    ecx,[ebp-0x74b0af47]
  426701:	or     eax,0x74804d4d
  426706:	mov    ecx,0xd854f50
  42670b:	dec    ebp
  42670c:	dec    ebp
  42670d:	pop    esi
  42670e:	daa    
  42670f:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426715:	mov    cl,BYTE PTR ds:0x2c5e4d4d
  42671b:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426721:	or     eax,0x5e4d4d0d
  426726:	pop    ds
  426727:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  42672d:	lea    ecx,[ebp+0x4d]
  426730:	dec    ebp
  426731:	in     eax,dx
  426732:	push   0xffffffe8
  426734:	cmp    ch,0xb9
  426737:	push   eax
  426738:	add    DWORD PTR [ecx*2+0x77804d4d],ecx
  42673f:	jno    0x4267a1
  426741:	jae    0x42677b
  426743:	lea    ecx,[ebp-0x11feaf47]
  426749:	dec    ebp
  42674a:	dec    ebp
  42674b:	dec    ebp
  42674c:	in     eax,dx
  42674d:	mov    dl,0xaa
  42674f:	mov    ecx,0x4d6f0150
  426754:	dec    ebp
  426755:	dec    ebp
  426756:	pusha  
  426757:	push   edi
  426758:	cmp    BYTE PTR [ebp+0x150b98d],cl
  42675e:	out    dx,eax
  42675f:	dec    ebp
  426760:	dec    ebp
  426761:	dec    ebp
  426762:	in     eax,dx
  426763:	mov    dl,0x9d
  426765:	mov    ecx,0x4da60150
  42676a:	dec    ebp
  42676b:	dec    ebp
  42676c:	adc    BYTE PTR [ecx],0xb9
  42676f:	push   eax
  426770:	add    DWORD PTR [ecx],esp
  426772:	dec    ebp
  426773:	dec    ebp
  426774:	dec    ebp
  426775:	pusha  
  426776:	in     eax,dx
  426777:	cmp    BYTE PTR [ebp+0x150b98d],cl
  42677d:	mov    eax,ds:0x534d4d4d
  426782:	cld    
  426783:	pusha  
  426784:	xor    ch,BYTE PTR [esi-0x73]
  426787:	lea    edi,[ecx+0x4d710150]
  42678d:	dec    ebp
  42678e:	dec    ebp
  42678f:	mov    dl,0x86
  426791:	or     al,0x60
  426793:	sbb    ebx,DWORD PTR [eax]
  426795:	lea    ecx,[ebp-0x6ffeaf47]
  42679b:	dec    ebp
  42679c:	dec    ebp
  42679d:	dec    ebp
  42679e:	pusha  
  42679f:	fwait
  4267a0:	xchg   BYTE PTR [ebp+0x150b98d],cl
  4267a6:	adc    eax,0x804d4d4d
  4267ab:	lock jno 0x42679b
  4267ae:	add    eax,0x29bab20d
  4267b3:	push   DWORD PTR [edx+0xd164f50]
  4267b9:	dec    ebp
  4267ba:	dec    ebp
  4267bb:	xor    BYTE PTR [edi+0x21],0x80
  4267bf:	lock and DWORD PTR [ebx-0x4],edx
  4267c3:	mov    dl,0x86
  4267c5:	or     al,0xed
  4267c7:	add    eax,0x29bab20d
  4267cc:	push   DWORD PTR [edx+0x1e4f0f7c]
  4267d2:	or     eax,0x4d4d4d4d
  4267d7:	lea    ecx,[ebp+0xd164f01]
  4267dd:	dec    ebp
  4267de:	dec    ebp
  4267df:	or     al,BYTE PTR [eax-0xf7f8e89]
  4267e5:	jno    0x42683a
  4267e7:	cld    
  4267e8:	mov    dl,0x86
  4267ea:	or     al,0xed
  4267ec:	add    eax,0x29bab20d
  4267f1:	push   DWORD PTR [edx-0x74b0fef6]
  4267f7:	or     eax,0x800a4d4d
  4267fc:	ja     0x4267c6
  4267fe:	or     ch,0x3e
  426801:	cmp    cl,BYTE PTR [ebp+0x194f7c8d]
  426807:	dec    ebp
  426808:	dec    ebp
  426809:	dec    ebp
  42680a:	sar    ch,cl
  42680c:	sbb    al,0x38
  42680e:	dec    ebp
  42680f:	add    DWORD PTR [eax-0x8b2ea89],0x808b7750
  426819:	ja     0x4267a6
  42681b:	dec    edi
  42681c:	push   0xffffffd5
  42681e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42681f:	mov    ds:0x1d4c6957,al
  426824:	in     eax,dx
  426825:	fstp   st(0)
  426827:	mov    esp,0x21f08076
  42682c:	adc    BYTE PTR [edi+0x530de221],0x51
  426833:	popf   
  426834:	push   ebx
  426835:	div    DWORD PTR [edx-0x414dd608]
  42683b:	or     al,0xff
  42683d:	inc    BYTE PTR [eax-0x2e7f3769]
  426843:	cmp    cl,BYTE PTR es:[ebp+0x9a65f8d]
  42684a:	dec    edi
  42684b:	push   0x808d8d2f
  426850:	lock and DWORD PTR [eax+0x51532197],eax
  426857:	mov    dl,0xbe
  426859:	or     al,0x53
  42685b:	div    DWORD PTR [edx-0x100d608]
  426861:	adc    BYTE PTR [edi-0x1a2e7f38],0x3a
  426868:	lea    ecx,[ebp-0xf7f59b0]
  42686e:	and    DWORD PTR [eax+0x51532197],eax
  426874:	mov    dl,0xbe
  426876:	or     al,0x53
  426878:	div    DWORD PTR [edx-0x100d608]
  42687e:	adc    BYTE PTR [edi-0x322e7f38],0x3a
  426885:	lea    ecx,[ebp+0x6760a650]
  42688b:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426891:	and    eax,0x804d4d4d
  426896:	adc    DWORD PTR [ecx+0x4d290150],edi
  42689c:	dec    ebp
  42689d:	dec    ebp
  42689e:	pusha  
  42689f:	daa    
  4268a0:	cmp    BYTE PTR [ebp+0x150b98d],cl
  4268a6:	sub    eax,0x604d4d4d
  4268ab:	sub    BYTE PTR [eax],bh
  4268ad:	lea    ecx,[ebp-0x3ffeaf47]
  4268b3:	dec    ebp
  4268b4:	dec    ebp
  4268b5:	dec    ebp
  4268b6:	in     eax,dx
  4268b7:	mov    dl,0x4
  4268b9:	mov    ecx,0x4d350150
  4268be:	dec    ebp
  4268bf:	dec    ebp
  4268c0:	pusha  
  4268c1:	adc    al,0x38
  4268c3:	lea    ecx,[ebp+0x390150b9]
  4268c9:	dec    ebp
  4268ca:	dec    ebp
  4268cb:	dec    ebp
  4268cc:	in     eax,dx
  4268cd:	mov    dl,0xf3
  4268cf:	mov    ecx,0x4d3d0150
  4268d4:	dec    ebp
  4268d5:	dec    ebp
  4268d6:	pusha  
  4268d7:	sbb    al,0x38
  4268d9:	lea    ecx,[ebp-0x2dfeaf47]
  4268df:	dec    ebp
  4268e0:	dec    ebp
  4268e1:	dec    ebp
  4268e2:	adc    BYTE PTR [ecx],0xb9
  4268e5:	push   eax
  4268e6:	add    DWORD PTR [ebp+0x4d],eax
  4268e9:	dec    ebp
  4268ea:	dec    ebp
  4268eb:	pusha  
  4268ec:	sbb    BYTE PTR [eax],bh
  4268ee:	lea    ecx,[ebp+0x490150b9]
  4268f4:	dec    ebp
  4268f5:	dec    ebp
  4268f6:	dec    ebp
  4268f7:	pusha  
  4268f8:	daa    
  4268f9:	pop    ebp
  4268fa:	lea    ecx,[ebp-0x7efeaf47]
  426900:	dec    ebp
  426901:	dec    ebp
  426902:	dec    ebp
  426903:	pusha  
  426904:	push   ebx
  426905:	xor    ecx,DWORD PTR [ebp+0x150b98d]
  42690b:	aam    0x4d
  42690d:	dec    ebp
  42690e:	dec    ebp
  42690f:	cld    
  426910:	ja     0x426895
  426912:	mov    ds:0x8d185d60,eax
  426917:	lea    edi,[ecx+0x4d550150]
  42691d:	dec    ebp
  42691e:	dec    ebp
  42691f:	in     eax,dx
  426920:	mov    dl,0x5d
  426922:	mov    ecx,0x4d590150
  426927:	dec    ebp
  426928:	dec    ebp
  426929:	cld    
  42692a:	ja     0x4268d4
  42692c:	or     bh,ah
  42692e:	ja     0x426934
  426930:	xchg   ebp,eax
  426931:	cld    
  426932:	ja     0x4268e0
  426934:	stos   DWORD PTR es:[edi],eax
  426935:	pusha  
  426936:	(bad)  
  426938:	lea    ecx,[ebp+0x5d0150b9]
  42693e:	dec    ebp
  42693f:	dec    ebp
  426940:	dec    ebp
  426941:	cld    
  426942:	ja     0x4268c8
  426944:	jg     0x4269a6
  426946:	fistp  DWORD PTR [eax-0x73]
  426949:	lea    edi,[ecx+0x4dd60150]
  42694f:	dec    ebp
  426950:	dec    ebp
  426951:	cld    
  426952:	ja     0x42690e
  426954:	popf   
  426955:	cld    
  426956:	ja     0x426950
  426958:	xchg   esi,eax
  426959:	pusha  
  42695a:	inc    edx
  42695b:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426961:	gs dec ebp
  426963:	dec    ebp
  426964:	dec    ebp
  426965:	cld    
  426966:	ja     0x42691c
  426968:	xchg   BYTE PTR [eax-0x687f8e10],al
  42696e:	jno    0x4269c3
  426970:	push   ecx
  426971:	push   ebx
  426972:	div    DWORD PTR [edx-0x74df342]
  426978:	sub    edi,edi
  42697a:	inc    ah
  42697c:	fwait
  42697d:	adc    BYTE PTR [edi+0x71e78071],0x53
  426984:	jle    0x426938
  426986:	pop    es
  426987:	or     al,0x53
  426989:	mov    esi,DWORD PTR [edx-0x6300d644]
  42698f:	inc    ebx
  426990:	dec    BYTE PTR [ecx]
  426992:	loopne 0x4269c5
  426994:	iret   
  426995:	add    DWORD PTR [eax-0x187f8e69],0x71
  42699c:	push   ebx
  42699d:	jle    0x426951
  42699f:	pop    es
  4269a0:	or     al,0x53
  4269a2:	mov    esi,DWORD PTR [edx-0x6300d644]
  4269a8:	and    bh,0x8b
  4269ab:	mov    ds:0x8d8dcd05,al
  4269b0:	lea    esp,[edx-0x7272e14e]
  4269b6:	lea    eax,[ebx-0x7b]
  4269b9:	adc    BYTE PTR [ecx],dh
  4269bb:	add    DWORD PTR [bx+si+0x7197],0xffffff80
  4269c1:	lock jno 0x426a17
  4269c4:	jle    0x426a19
  4269c6:	std    
  4269c7:	mov    dl,0xba
  4269c9:	sub    DWORD PTR [edx-0x4900f3f9],esi
  4269cf:	xor    al,0x8b
  4269d2:	in     al,dx
  4269d3:	inc    BYTE PTR [eax-0x187f8e69]
  4269d9:	jno    0x426a2e
  4269db:	jle    0x426a30
  4269dd:	mov    esi,DWORD PTR [edx-0x434df3f9]
  4269e3:	sub    edi,edi
  4269e5:	pushf  
  4269e6:	in     eax,dx
  4269e7:	sti    
  4269e8:	out    dx,eax
  4269e9:	push   eax
  4269ea:	lock mov esp,DWORD PTR [ebx-0x2]
  4269ee:	in     al,0x1
  4269f0:	xor    al,0x71
  4269f3:	adc    BYTE PTR [edi+0x53515371],0xf7
  4269fa:	mov    dl,0xbe
  4269fc:	or     al,0xb2
  4269fe:	clc    
  4269ff:	sub    edi,edi
  426a01:	(bad)  
  426a02:	push   eax
  426a03:	add    DWORD PTR [esi],edx
  426a05:	or     eax,0xf0804d4d
  426a0a:	and    DWORD PTR [eax+0x51532197],eax
  426a10:	push   ebx
  426a11:	div    DWORD PTR [edx-0x414dd608]
  426a17:	or     al,0xff
  426a19:	inc    BYTE PTR [ecx]
  426a1b:	xchg   edi,eax
  426a1c:	adc    DWORD PTR [eax+0x16],0x1
  426a20:	push   ds
  426a21:	or     eax,0xb3f14d4d
  426a26:	cmp    BYTE PTR [ebp-0x46017f73],cl
  426a2c:	push   eax
  426a2d:	lock es in eax,dx
  426a30:	mov    dl,0xfb
  426a32:	or     bl,0xb9
  426a35:	push   eax
  426a36:	out    0xf2,eax
  426a38:	add    esi,esp
  426a3a:	add    al,0xb9
  426a3c:	push   eax
  426a3d:	out    0x2e,eax
  426a3f:	in     eax,dx
  426a40:	jl     0x426a30
  426a42:	mov    ecx,0x1f3e750
  426a47:	out    0x15,al
  426a49:	mov    ecx,0xed36e750
  426a4e:	jl     0x426a53
  426a50:	mov    ecx,0x80f4e750
  426a55:	retf   
  426a56:	mov    ecx,0x803ee750
  426a5b:	test   DWORD PTR [ecx-0x7f0a18b0],edi
  426a61:	push   es
  426a62:	mov    ecx,0x8046e750
  426a67:	test   DWORD PTR [ecx-0x7f9d18b0],edi
  426a6d:	retf   
  426a6e:	mov    ecx,0x1dee750
  426a73:	out    0xf2,al
  426a75:	mov    ecx,0xed56e750
  426a7a:	jl     0x426a6a
  426a7c:	mov    ecx,0x1e0e750
  426a81:	out    0x7a,al
  426a83:	mov    ecx,0xed5ee750
  426a88:	jl     0x426a8d
  426a8a:	mov    ecx,0xb9f1e750
  426a8f:	push   eax
  426a90:	lock mov cx,0x9750
  426a95:	cli    
  426a96:	adc    BYTE PTR [ecx],0xb9
  426a99:	push   eax
  426a9a:	lock push 0xffffff80
  426a9d:	lock and DWORD PTR [eax-0x8acde69],eax
  426aa4:	push   ebx
  426aa5:	push   ecx
  426aa6:	mov    dl,0xf8
  426aa8:	sub    DWORD PTR [edx-0x100f342],esi
  426aae:	adc    BYTE PTR [edi+0x21e78021],0x53
  426ab5:	jle    0x426a69
  426ab7:	pop    es
  426ab8:	or     al,0x1
  426aba:	xor    eax,esi
  426abc:	bound  edx,QWORD PTR [ebx-0x75]
  426abf:	mov    dl,0xbc
  426ac1:	sub    edi,edi
  426ac3:	pushf  
  426ac4:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426ac8:	pushf  
  426ac9:	mov    ecx,0xf0800e50
  426ace:	and    DWORD PTR [eax+0x51532197],eax
  426ad4:	push   ebx
  426ad5:	div    DWORD PTR [edx-0x74df342]
  426adb:	sub    edi,edi
  426add:	inc    BYTE PTR [eax+0x31012197]
  426ae3:	lock es push ebx
  426ae6:	jle    0x426a68
  426ae8:	out    0x21,eax
  426aea:	mov    dl,0x7
  426aec:	or     al,0x53
  426aee:	mov    esi,DWORD PTR [edx-0x6300d644]
  426af4:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426af8:	pushf  
  426af9:	mov    ecx,0xf0800e50
  426afe:	and    DWORD PTR [eax-0x8acde69],eax
  426b04:	mov    dl,0xf8
  426b06:	sub    DWORD PTR [ebx+0x51],edx
  426b09:	mov    dl,0xbe
  426b0b:	or     al,0xff
  426b0d:	inc    BYTE PTR [eax-0x187fde69]
  426b13:	and    DWORD PTR [ebx+0x7e],edx
  426b16:	mov    dl,0x7
  426b18:	or     al,0x53
  426b1a:	mov    esi,DWORD PTR [edx-0x6300d644]
  426b20:	mov    ecx,0x52974150
  426b25:	or     eax,0xf0804d4d
  426b2a:	and    DWORD PTR [eax-0x8acde69],eax
  426b30:	mov    dl,0xf8
  426b32:	sub    DWORD PTR [ebx+0x51],edx
  426b35:	mov    dl,0xbe
  426b37:	or     al,0xff
  426b39:	inc    BYTE PTR [eax-0x187fde69]
  426b3f:	and    DWORD PTR [ebx+0x7e],edx
  426b42:	mov    dl,0x7
  426b44:	or     al,0x53
  426b46:	mov    esi,DWORD PTR [edx-0x6300d644]
  426b4c:	mov    ecx,0xa5974150
  426b51:	or     eax,0xf0804d4d
  426b56:	jno    0x426ad8
  426b58:	xchg   edi,eax
  426b59:	jno    0x426bae
  426b5b:	not    DWORD PTR [ebx+0x51]
  426b5e:	mov    dl,0xf8
  426b60:	sub    DWORD PTR [edx-0x100f342],esi
  426b66:	adc    BYTE PTR [edi+0x71e78071],0x53
  426b6d:	jle    0x426bc2
  426b6f:	mov    esi,DWORD PTR [edx-0x434df3f9]
  426b75:	sub    edi,edi
  426b77:	pushf  
  426b78:	in     al,dx
  426b79:	(bad)  
  426b7a:	push   eax
  426b7b:	add    DWORD PTR [esi],edx
  426b7d:	or     eax,0xf0804d4d
  426b82:	and    DWORD PTR [eax-0x187fde69],eax
  426b88:	out    dx,eax
  426b89:	push   ebx
  426b8a:	not    DWORD PTR [ebx+0x51]
  426b8d:	mov    dl,0xbe
  426b8f:	or     al,0xb2
  426b91:	clc    
  426b92:	sub    edi,edi
  426b94:	inc    BYTE PTR [ecx]
  426b96:	dec    edi
  426b97:	push   edx
  426b98:	or     eax,0xf504d4d
  426b9d:	add    DWORD PTR [esi],ebx
  426b9f:	or     eax,0x77014d4d
  426ba4:	bound  eax,QWORD PTR [esi+0x4d4d61d3]
  426baa:	xor    al,0x71
  426bad:	adc    BYTE PTR [edi+0x530de271],0x51
  426bb4:	stos   DWORD PTR es:[edi],eax
  426bb5:	push   ebx
  426bb6:	pushf  
  426bb7:	mov    dl,0xbe
  426bb9:	or     al,0xb2
  426bbb:	clc    
  426bbc:	sub    edi,edi
  426bbe:	(bad)  
  426bbf:	push   eax
  426bc0:	lidtd  [esi]
  426bc3:	or     eax,0x77804d4d
  426bc8:	and    DWORD PTR [eax-0x3acde10],eax
  426bce:	mov    dl,0x86
  426bd0:	or     al,0x53
  426bd2:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426bd8:	aad    0x3d
  426bda:	add    DWORD PTR [edi+0x16],ecx
  426bdd:	or     eax,0x800a4d4d
  426be2:	ja     0x426c55
  426be4:	xor    al,0x71
  426be7:	push   ebx
  426be8:	cld    
  426be9:	mov    dl,0x86
  426beb:	or     al,0x53
  426bed:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426bf3:	or     al,BYTE PTR [ecx]
  426bf5:	dec    edi
  426bf6:	and    eax,0xa4d4d4d
  426bfb:	xor    BYTE PTR [edi+0x15],0xe2
  426bff:	lea    ecx,[ebp-0x9]
  426c02:	xor    BYTE PTR [edi+0x21],0x80
  426c06:	lock and DWORD PTR [ebx-0x4],edx
  426c0a:	push   ebx
  426c0b:	sub    al,BYTE PTR [eax-0x794d1019]
  426c11:	or     al,0xb2
  426c13:	mov    edx,0x1b2ff29
  426c18:	add    DWORD PTR [ebp+0x504d4d0d],esp
  426c1e:	inc    ecx
  426c1f:	dec    edi
  426c20:	push   ds
  426c21:	or     eax,0x77014d4d
  426c26:	xchg   BYTE PTR es:0x804d4d88,al
  426c2d:	lock jno 0x426bb0
  426c30:	xchg   edi,eax
  426c31:	jno    0x426c86
  426c33:	push   ecx
  426c34:	mov    dl,0xbe
  426c36:	or     al,0xed
  426c38:	ret    0xb20d
  426c3b:	clc    
  426c3c:	sub    edi,edi
  426c3e:	(bad)  
  426c3f:	push   eax
  426c40:	lidtd  [esi]
  426c43:	or     eax,0x33f14d4d
  426c48:	cmp    BYTE PTR [ebp+0x386b5e8d],cl
  426c4e:	lea    ecx,[ebp+0xa4f50b9]
  426c54:	dec    ebp
  426c55:	dec    ebp
  426c56:	dec    ebp
  426c57:	add    edx,ebx
  426c59:	jno    0x426c14
  426c5b:	push   eax
  426c5c:	add    DWORD PTR [ebp+0x5e4d4d4d],esi
  426c62:	popa   
  426c63:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426c69:	stos   BYTE PTR es:[edi],al
  426c6a:	dec    ebp
  426c6b:	dec    ebp
  426c6c:	dec    ebp
  426c6d:	cmp    bl,0xb9
  426c70:	push   eax
  426c71:	dec    edi
  426c72:	xchg   ebp,eax
  426c73:	dec    ebp
  426c74:	dec    ebp
  426c75:	dec    ebp
  426c76:	xor    BYTE PTR [edx-0x66b0af47],0x4d
  426c7d:	dec    ebp
  426c7e:	dec    ebp
  426c7f:	in     eax,dx
  426c80:	push   0x29
  426c82:	cmp    ch,0xb9
  426c85:	push   eax
  426c86:	add    DWORD PTR [ecx+0x14d4d4d],edi
  426c8c:	fisubr DWORD PTR [ecx]
  426c8e:	mov    ecx,0x4dbd0150
  426c93:	dec    ebp
  426c94:	dec    ebp
  426c95:	in     eax,dx
  426c96:	mov    dl,0xd6
  426c98:	mov    ecx,0x4de20150
  426c9d:	dec    ebp
  426c9e:	dec    ebp
  426c9f:	add    edx,ebx
  426ca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ca2:	mov    ecx,0x4dc50150
  426ca7:	dec    ebp
  426ca8:	dec    ebp
  426ca9:	or     BYTE PTR [ebx-0x6297af47],0x4d
  426cb0:	dec    ebp
  426cb1:	dec    ebp
  426cb2:	add    esi,esp
  426cb4:	scas   al,BYTE PTR es:[edi]
  426cb5:	pusha  
  426cb6:	dec    ebp
  426cb7:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426cbd:	ror    DWORD PTR [ebp+0x4d],0x4d
  426cc1:	add    edx,ebx
  426cc3:	or     eax,0x520150b9
  426cc8:	dec    ebp
  426cc9:	dec    ebp
  426cca:	dec    ebp
  426ccb:	mov    ecx,0x4dae6850
  426cd0:	dec    ebp
  426cd1:	dec    ebp
  426cd2:	in     eax,dx
  426cd3:	jl     0x426c60
  426cd5:	mov    ecx,0x4da56850
  426cda:	dec    ebp
  426cdb:	dec    ebp
  426cdc:	or     BYTE PTR [ebx-0x72c783a0],0x8d
  426ce3:	mov    ecx,0x4de40150
  426ce8:	dec    ebp
  426ce9:	dec    ebp
  426cea:	cmp    ch,0xb9
  426ced:	push   eax
  426cee:	add    ebp,edx
  426cf0:	dec    ebp
  426cf1:	dec    ebp
  426cf2:	dec    ebp
  426cf3:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  426cf8:	out    0x4d,al
  426cfa:	dec    ebp
  426cfb:	dec    ebp
  426cfc:	push   ebx
  426cfd:	push   0xffffffb9
  426cff:	push   eax
  426d00:	push   0x4d4d4da9
  426d05:	add    DWORD PTR [eax-0x1b],ebp
  426d08:	dec    ebp
  426d09:	dec    ebp
  426d0a:	dec    ebp
  426d0b:	jl     0x426d5c
  426d0d:	lods   eax,DWORD PTR ds:[esi]
  426d0e:	dec    ebp
  426d0f:	dec    ebp
  426d10:	dec    ebp
  426d11:	out    0x38,eax
  426d13:	xor    edi,DWORD PTR [eax]
  426d15:	jl     0x426d66
  426d17:	(bad)  [ebp+0x4d]
  426d1a:	dec    ebp
  426d1b:	ret    
  426d1c:	cmp    BYTE PTR [esi-0x7fbb46c8],dl
  426d22:	ja     0x426d95
  426d24:	xor    al,0x71
  426d27:	adc    BYTE PTR [edi+0xd05ed71],0xb2
  426d2e:	mov    edx,0xb2fc5329
  426d33:	xchg   BYTE PTR [edi+edi*8],cl
  426d36:	mov    dl,0x80
  426d38:	lock jno 0x426d28
  426d3b:	add    eax,0xb27e530d
  426d40:	mov    edx,0xc07b229
  426d45:	push   DWORD PTR [esi-0x4128fad]
  426d4b:	sbb    edx,DWORD PTR [ebx]
  426d4d:	jo     0x426da2
  426d4f:	dec    ebp
  426d50:	arpl   bx,cx
  426d52:	or     esi,ecx
  426d54:	and    cl,BYTE PTR [ebp-0x101b7273]
  426d5a:	arpl   bx,di
  426d5c:	or     ebp,ebp
  426d5e:	cmp    BYTE PTR [ebp-0xf7f7273],cl
  426d64:	jno    0x426ce6
  426d66:	xchg   edi,eax
  426d67:	jno    0x426dbc
  426d69:	push   ecx
  426d6a:	mov    dl,0xbe
  426d6c:	or     al,0xed
  426d6e:	ret    0xb20d
  426d71:	clc    
  426d72:	sub    edi,edi
  426d74:	(bad)  
  426d75:	in     al,dx
  426d76:	std    
  426d77:	adc    BYTE PTR [ecx+edi*4+0xaf01653],0x4d
  426d7f:	dec    ebp
  426d80:	dec    ebp
  426d81:	xor    al,0x71
  426d84:	and    bh,0x71
  426d87:	push   ebx
  426d88:	push   ecx
  426d89:	mov    dl,0xbe
  426d8b:	or     al,0xed
  426d8d:	dec    ebx
  426d8e:	or     eax,0xff29bcb2
  426d93:	sub    ch,ah
  426d95:	std    
  426d96:	mov    ecx,0xaf04180
  426d9b:	dec    ebp
  426d9c:	dec    ebp
  426d9d:	dec    ebp
  426d9e:	mov    ecx,0xb2b9b64b
  426da3:	mov    edx,0x7b6b909
  426da8:	mov    ecx,0xf080b6ff
  426dad:	jno    0x426d2f
  426daf:	out    0x71,eax
  426db1:	push   ebx
  426db2:	push   ecx
  426db3:	mov    dl,0xbe
  426db5:	or     al,0xed
  426db7:	dec    ebx
  426db8:	or     eax,0xff29bcb2
  426dbd:	sub    ch,ah
  426dbf:	std    
  426dc0:	mov    ecx,0xaf01650
  426dc5:	dec    ebp
  426dc6:	dec    ebp
  426dc7:	dec    ebp
  426dc8:	xor    al,0x71
  426dcb:	adc    BYTE PTR [edi-0x12aeac8f],0xc2
  426dd2:	or     eax,0xb20cbeb2
  426dd7:	clc    
  426dd8:	sub    edi,edi
  426dda:	inc    BYTE PTR [eax-0x4d138e69]
  426de0:	xor    al,0x71
  426de3:	in     eax,dx
  426de4:	add    eax,0xb27e530d
  426de9:	mov    edx,0xc07b229
  426dee:	push   DWORD PTR [esi-0x4128fad]
  426df4:	sbb    edx,DWORD PTR [ebx]
  426df6:	jo     0x426e4b
  426df8:	dec    ebp
  426df9:	arpl   bx,cx
  426dfb:	or     edx,ebp
  426dfd:	call   0x934c:0x94d4d4d
  426e04:	dec    ebp
  426e05:	dec    ebp
  426e06:	dec    ebp
  426e07:	ins    BYTE PTR es:[edi],dx
  426e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e09:	mov    DWORD PTR [esp+edx*8],0x50767701
  426e10:	ja     0x426e01
  426e12:	xor    BYTE PTR [edi-0x11],0x64
  426e16:	mov    ecx,0x5011df58
  426e1b:	sbb    eax,0x86ee6d7c
  426e20:	pop    DWORD PTR [ebx+0x26]
  426e23:	xor    BYTE PTR [edi+0x76],0x80
  426e27:	lock std 
  426e29:	or     DWORD PTR [esi-0x3],eax
  426e2c:	or     al,0xb2
  426e2e:	mov    esi,0x76f0800c
  426e33:	adc    BYTE PTR [edi+0x537c53fd],0x72
  426e3a:	push   edi
  426e3c:	xor    BYTE PTR [edi-0x38],0xaa
  426e40:	das    
  426e41:	cmp    cl,BYTE PTR es:[ebp+0x4f010a8d]
  426e48:	enter  0x4d0d,0x4d
  426e4c:	or     dh,BYTE PTR [edx+0x778629ba]
  426e52:	mov    edx,0x77804d4d
  426e57:	xchg   DWORD PTR [eax+0x460932f0],eax
  426e5d:	std    
  426e5e:	or     al,0xb2
  426e60:	mov    esi,0x87f0800c
  426e65:	adc    BYTE PTR [edi+0x29bab232],0x80
  426e6c:	add    eax,ecx
  426e6e:	or     eax,0x30804d4d
  426e73:	push   ebx
  426e74:	jl     0x426ec9
  426e76:	jb     0x426e77
  426e78:	sti    
  426e79:	arpl   bp,di
  426e7b:	or     DWORD PTR [edi+0x56],ecx
  426e7e:	lea    ecx,[ebp-0x37287f73]
  426e84:	jl     0x426efd
  426e86:	scas   eax,DWORD PTR es:[edi]
  426e87:	fst    DWORD PTR [edi-0x21]
  426e8a:	adc    DWORD PTR [esi-0x7a],ebx
  426e8d:	pop    DWORD PTR [ebx+0x26]
  426e90:	push   eax
  426e91:	ja     0x426e8a
  426e93:	push   eax
  426e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e95:	jp     0x426ee7
  426e97:	ja     0x426e1b
  426e99:	xor    BYTE PTR [edi+0x7a],0x80
  426e9d:	lock or BYTE PTR [ecx],0x46
  426ea1:	std    
  426ea2:	or     al,0xb2
  426ea4:	mov    esi,0x7af0800c
  426ea9:	adc    BYTE PTR [edi+0x537c5382],0x72
  426eb0:	push   edi
  426eb2:	stos   BYTE PTR es:[edi],al
  426eb3:	dec    ebp
  426eb4:	xlat   BYTE PTR ds:[ebx]
  426eb5:	xor    eax,0x4d29bab2
  426eba:	loopne 0x426ef2
  426ebc:	cmp    cl,BYTE PTR [ebp-0x7b817973]
  426ec2:	dec    ebp
  426ec3:	dec    ebp
  426ec4:	xor    BYTE PTR [edi+0x7a],0x80
  426ec8:	lock or BYTE PTR [ecx],0x46
  426ecc:	std    
  426ecd:	or     al,0xb2
  426ecf:	mov    esi,0x7af0800c
  426ed4:	adc    BYTE PTR [edi+0x537c5382],0x72
  426edb:	push   edi
  426edd:	stos   BYTE PTR es:[edi],al
  426ede:	dec    ebp
  426edf:	loopne 0x426f17
  426ee1:	cmp    cl,BYTE PTR [ebp+0x29bab28d]
  426ee7:	dec    ebp
  426ee8:	loopne 0x426f18
  426eea:	cmp    cl,BYTE PTR [ebp-0x7bc17973]
  426ef0:	dec    ebp
  426ef1:	dec    ebp
  426ef2:	or     BYTE PTR [esi+esi*1+0x3a],0x8d
  426ef7:	lea    eax,[eax+0x657f80ef]
  426efd:	in     al,dx
  426efe:	out    dx,eax
  426eff:	push   eax
  426f00:	lock out dx,eax
  426f02:	xor    al,0xaf
  426f05:	xor    BYTE PTR [edi-0x9],0x9
  426f09:	inc    esi
  426f0a:	mov    dl,0xc
  426f0c:	mov    dl,0x86
  426f0e:	or     al,0x80
  426f10:	ja     0x426ec1
  426f12:	adc    BYTE PTR [edi-0x4dd5ac09],0x84
  426f19:	sub    DWORD PTR [ebx+0x6a],edx
  426f1c:	push   DWORD PTR [edx+0x9eff080]
  426f22:	pop    esp
  426f23:	jg     0x426f3e
  426f25:	dec    edi
  426f26:	std    
  426f27:	aad    0x21
  426f29:	or     BYTE PTR [edx+eax*4+0x3a],0x8d
  426f2e:	lea    edi,[ebp+ecx*4-0xb]
  426f32:	and    al,0x6f
  426f34:	cmp    BYTE PTR [eax+0x77802177],al
  426f3a:	jno    0x426f89
  426f3c:	xlat   BYTE PTR ds:[ebx]
  426f3d:	cmp    eax,0x4dc8d74d
  426f42:	xlat   BYTE PTR ds:[ebx]
  426f43:	sub    eax,0x4d25d74d
  426f48:	xlat   BYTE PTR ds:[ebx]
  426f49:	sbb    eax,0x8615d74d
  426f4e:	cmp    cl,al
  426f50:	dec    ebp
  426f51:	dec    ebp
  426f52:	push   eax
  426f53:	dec    edi
  426f54:	xor    cl,BYTE PTR ds:0x77804d4d
  426f5a:	cmp    eax,0x8d15dded
  426f5f:	aad    0x1b
  426f61:	xor    BYTE PTR [edi+0x3d],0xed
  426f65:	frstor ds:0x80a1d58d
  426f6b:	dec    edi
  426f6c:	xor    cl,BYTE PTR ds:0xf0804d4d
  426f72:	cmp    eax,0xc41d9250
  426f77:	dec    DWORD PTR [ebp-0x29]
  426f7a:	cmp    eax,0x86c8d74d
  426f7f:	mov    WORD PTR [edx+0x4d],gs
  426f82:	dec    ebp
  426f83:	stos   DWORD PTR es:[edi],eax
  426f84:	test   eax,0x35fb70a3
  426f89:	lea    edx,[edi-0x78127880]
  426f8f:	and    DWORD PTR [ecx-0x9748884],ebx
  426f95:	and    al,0x6f
  426f97:	cmp    BYTE PTR [edi+esi*2-0x38],bh
  426f9b:	cmc    
  426f9c:	and    al,0x6f
  426f9e:	cmp    BYTE PTR [eax-0x287f7489],al
  426fa4:	mov    esp,edx
  426fa6:	or     eax,0x6f242260
  426fab:	cmp    BYTE PTR [ebx-0x4e],dl
  426fae:	scas   al,BYTE PTR es:[edi]
  426faf:	push   ebx
  426fb0:	ret    0x86b2
  426fb3:	or     al,0xb2
  426fb5:	add    ch,BYTE PTR [ecx]
  426fb7:	(bad)  
  426fb8:	cld    
  426fb9:	adc    bh,0xef
  426fbc:	arpl   WORD PTR [edx],si
  426fbe:	xor    BYTE PTR [edi-0x75],0x9
  426fc2:	sete   BYTE PTR [ebp-0x287f7273]
  426fc9:	mov    edx,DWORD PTR [ebx-0x4e]
  426fcc:	push   ebx
  426fcd:	ret    0x2b2
  426fd0:	sub    DWORD PTR [edx-0x300f37a],esi
  426fd6:	adc    bh,0x21
  426fd9:	arpl   WORD PTR [edx],si
  426fdb:	or     DWORD PTR [edi],ecx
  426fdd:	loopne 0x426f6c
  426fdf:	lea    ecx,[ebp-0x7f8e8880]
  426fe5:	xchg   edi,eax
  426fe6:	and    DWORD PTR [eax+0x539befd7],eax
  426fec:	dec    ebp
  426fed:	push   eax
  426fee:	ja     0x426f7b
  426ff0:	dec    edi
  426ff1:	jb     0x426ffc
  426ff3:	cmovb  ecx,DWORD PTR [ebp-0x706c7273]
  426ffa:	out    dx,al
  426ffb:	pop    ebx
  426ffc:	adc    BYTE PTR [edi+0x9],dh
  426fff:	cld    
  427000:	ja     0x42704f
  427002:	aad    0xfc
  427004:	ja     0x427019
  427006:	sbb    esp,edi
  427008:	ja     0x427009
  42700a:	ror    BYTE PTR [ecx],1
  42700c:	loopne 0x427085
  42700e:	dec    DWORD PTR [ecx]
  427010:	loopne 0x426fb9
  427012:	adc    ecx,edi
  427014:	jp     0x426fa3
  427016:	lea    ecx,[ebp-0x1ff68bcd]
  42701c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42701d:	dec    ebp
  42701e:	xor    esi,DWORD PTR [eax+edx*1+0x77]
  427022:	mov    bh,ah
  427024:	ja     0x426ff2
  427026:	or     eax,0xd40d77fc
  42702b:	cld    
  42702c:	ja     0x42707b
  42702e:	jl     0x42702c
  427030:	ja     0x427045
  427032:	sar    esp,cl
  427034:	ja     0x427035
  427036:	push   esp
  427037:	(bad)  
  427038:	ja     0x427039
  42703a:	(bad)  
  42703b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42703c:	adc    esp,DWORD PTR [esi+0x4da78f74]
  427042:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  427046:	or     eax,0xa78fc40b
  42704b:	int3   
  42704c:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  427050:	mov    dl,dh
  427052:	sbb    bl,0x35
  427055:	in     eax,dx
  427056:	out    0x8b,eax
  427058:	lea    ecx,[ecx]
  42705a:	loopne 0x4270d3
  42705c:	or     edi,edx
  42705e:	or     DWORD PTR [edi-0x33],edx
  427061:	lea    ecx,[ebp-0x72e1d073]
  427067:	lea    ecx,[ebp-0x3bf688f0]
  42706d:	inc    DWORD PTR [edi+0x8]
  427070:	lea    ecx,[ebp+0x977108d]
  427076:	div    eax
  427078:	or     DWORD PTR [edi-0x11eff689],ecx
  42707e:	pop    ebx
  42707f:	jnp    0x4270e4
  427081:	test   DWORD PTR [ecx],ecx
  427083:	jmp    0x80a3:0x4d4d4d9e
  42708a:	ja     0x427054
  42708c:	push   ebx
  42708d:	mov    dl,0x80
  42708f:	lock enter 0x5ed,0xd
  427094:	stos   DWORD PTR es:[edi],eax
  427095:	les    esp,FWORD PTR [esi+0x538b7780]
  42709b:	mov    dl,0x80
  42709d:	lock mov edx,DWORD PTR [ebx-0x2]
  4270a1:	mov    dl,0xba
  4270a3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4270a9:	test   eax,0x8d21fb70
  4270ae:	xchg   edi,eax
  4270af:	add    BYTE PTR [edi+0x7cc587ed],0x77
  4270b6:	mov    dh,dh
  4270b8:	and    al,0x6f
  4270ba:	cmp    cl,dh
  4270bc:	cmc    
  4270bd:	and    al,0x6f
  4270bf:	cmp    BYTE PTR [eax-0x69],dl
  4270c2:	mov    eax,DWORD PTR [eax+0x77501577]
  4270c8:	adc    eax,0x80157780
  4270cd:	int    0x2e
  4270cf:	cmp    cl,BYTE PTR [ebp+0x15f0808d]
  4270d5:	or     BYTE PTR [ebp+0x3a2e5080],0x8d
  4270dc:	lea    eax,[eax+0x657dec30]
  4270e2:	xchg   ebx,eax
  4270e3:	push   eax
  4270e4:	lock stc 
  4270e6:	xor    BYTE PTR [edi-0x76],0x80
  4270ea:	lock mov bl,BYTE PTR [ecx+0x10de29b]
  4270f1:	out    0x2f,al
  4270f3:	push   ebx
  4270f4:	jl     0x4270a8
  4270f6:	xchg   BYTE PTR [ebx+eiz*4],cl
  4270f9:	push   ebx
  4270fa:	adc    DWORD PTR [edx-0x4d00d646],esi
  427100:	push   eax
  427101:	ja     0x427085
  427103:	xor    BYTE PTR [edi-0x76],0x80
  427107:	lock mov dl,BYTE PTR [ebx+0x7c]
  42710b:	mov    dl,0x86
  42710d:	or     al,0x53
  42710f:	adc    DWORD PTR [edx-0x4d00d646],esi
  427115:	push   eax
  427116:	ja     0x42709c
  427118:	xor    BYTE PTR [edi-0x7],0x80
  42711c:	ins    DWORD PTR es:[edi],dx
  42711d:	or     ch,ch
  42711f:	xchg   BYTE PTR [ecx],ah
  427121:	push   eax
  427122:	ja     0x42711b
  427124:	xor    BYTE PTR [edi-0x7],0x80
  427128:	ins    DWORD PTR es:[edi],dx
  427129:	pop    ebp
  42712a:	xor    al,0xf9
  42712d:	jge    0x42717e
  42712f:	xchg   edx,eax
  427130:	xchg   ebp,eax
  427131:	xor    BYTE PTR [edi-0x7],0xd5
  427135:	sbb    eax,0x805d6d80
  42713a:	lock stc 
  42713c:	cmp    BYTE PTR [edi-0x6b],0x7d
  427140:	dec    ebx
  427141:	div    DWORD PTR [ebx]
  427143:	std    
  427144:	xor    BYTE PTR [edi-0x7],0x80
  427148:	ins    DWORD PTR es:[edi],dx
  427149:	pop    ebp
  42714a:	in     al,dx
  42714b:	mov    dl,0xc4
  42714d:	in     al,dx
  42714e:	sub    BYTE PTR [ebp-0x6b],0x50
  427152:	ja     0x4270da
  427154:	xor    BYTE PTR [edi-0x76],0x80
  427158:	lock mov dl,BYTE PTR [ebx+0x7c]
  42715c:	push   ebx
  42715d:	adc    DWORD PTR [edx-0x454df37a],esi
  427163:	sub    edi,edi
  427165:	mov    dl,0x50
  427167:	ja     0x42717e
  427169:	xor    BYTE PTR [edi-0x76],0x80
  42716d:	lock mov dl,BYTE PTR [ebx+0x7c]
  427171:	push   ebx
  427172:	adc    DWORD PTR [edx-0x794dd646],esi
  427178:	or     al,0xff
  42717a:	mov    dl,0x50
  42717c:	ja     0x427193
  42717e:	xor    BYTE PTR [edi-0x76],0x80
  427182:	lock mov dl,BYTE PTR [ebx+0x11]
  427186:	push   ebx
  427187:	jl     0x42713b
  427189:	mov    edx,0xc86b229
  42718e:	push   DWORD PTR [edx+0x5071f080]
  427194:	cmp    dl,BYTE PTR [eax-0x69]
  427197:	adc    eax,0xf415777c
  42719c:	and    al,0x6f
  42719e:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  4271a2:	repz and al,0x6f
  4271a5:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  4271a9:	cli    
  4271aa:	and    al,0x6f
  4271ac:	cmp    BYTE PTR [esi-0x727290c9],bh
  4271b2:	xor    BYTE PTR [edi-0x76],0x80
  4271b6:	lock mov dl,BYTE PTR [ebx+0x7c]
  4271ba:	push   ebx
  4271bb:	adc    DWORD PTR [edx-0x454df37a],esi
  4271c1:	sub    edi,edi
  4271c3:	mov    dl,0x50
  4271c5:	ja     0x42714b
  4271c7:	xor    BYTE PTR [edi-0x7a],0xec
  4271cb:	ja     0x4271ee
  4271cd:	push   eax
  4271ce:	ja     0x427152
  4271d0:	dec    ebp
  4271d1:	xlat   BYTE PTR ds:[ebx]
  4271d2:	or     BYTE PTR [ebp-0x29],0x21
  4271d6:	xor    al,0xf9
  4271d9:	xchg   BYTE PTR [ecx+0x504d4da8],cl
  4271df:	ja     0x4271f6
  4271e1:	xor    BYTE PTR [edi+0x15],0x4f
  4271e5:	push   0xffffffd5
  4271e7:	(bad)  
  4271e8:	xor    BYTE PTR [edi-0x7e],0x50
  4271ec:	ja     0x427171
  4271ee:	xor    BYTE PTR [edi-0x7d],0x80
  4271f2:	lock and DWORD PTR [ebx-0x4e],eax
  4271f6:	push   eax
  4271f7:	ja     0x42717c
  4271f9:	xor    BYTE PTR [edi+0x15],0x80
  4271fd:	lock adc eax,0xec716d80
  427203:	xchg   edx,eax
  427204:	and    DWORD PTR [eax-0x29c7c10],eax
  42720a:	in     al,0x19
  42720c:	xor    BYTE PTR [edi+0x15],0x80
  427210:	ins    DWORD PTR es:[edi],dx
  427211:	and    DWORD PTR [eax-0x6d13ea10],eax
  427217:	out    dx,eax
  427218:	xor    al,0x83
  42721b:	inc    ebx
  42721c:	mov    dl,0xbe
  42721e:	and    ch,BYTE PTR [edi]
  427220:	lea    ecx,[ebp+0x6f24f6fa]
  427226:	cmp    BYTE PTR [eax-0x29],dl
  427229:	scas   eax,DWORD PTR es:[edi]
  42722a:	jl     0x4272a3
  42722c:	std    
  42722d:	cmc    
  42722e:	and    al,0x6f
  427230:	cmp    BYTE PTR [edi+esi*2+0x76],bh
  427234:	hlt    
  427235:	and    al,0x6f
  427237:	cmp    BYTE PTR [edi+esi*2+0x6a],bh
  42723b:	repz and al,0x6f
  42723e:	cmp    BYTE PTR [ecx],al
  427240:	ja     0x4271f1
  427242:	push   eax
  427243:	ja     0x42720d
  427245:	add    DWORD PTR [edi-0x3],esi
  427248:	push   eax
  427249:	ja     0x42727d
  42724b:	add    DWORD PTR [edi+0x76],esi
  42724e:	push   eax
  42724f:	ja     0x427266
  427251:	add    DWORD PTR [edi+0x6a],esi
  427254:	push   eax
  427255:	ja     0x4271de
  427257:	xor    BYTE PTR [edi-0x76],0x80
  42725b:	lock mov dl,BYTE PTR [ebx+0x7c]
  42725f:	push   ebx
  427260:	adc    DWORD PTR [edx-0x454df37a],esi
  427266:	sub    edi,edi
  427268:	mov    dl,0x50
  42726a:	ja     0x4271ef
  42726c:	mov    esi,0x8d8decfe
  427271:	mov    ds:0x6f24f30d,al
  427276:	cmp    BYTE PTR [ecx],cl
  427278:	shld   esp,ebp,0x8d
  42727c:	(bad)  
  42727d:	loop   0x4272a0
  42727f:	dec    ebp
  427280:	xlat   BYTE PTR ds:[ebx]
  427281:	add    BYTE PTR [ecx],0x77
  427284:	bound  ecx,QWORD PTR [edx]
  427286:	xchg   BYTE PTR [ecx],cl
  427288:	test   al,0x4d
  42728a:	dec    ebp
  42728b:	xor    BYTE PTR [edi-0x75],0x80
  42728f:	lock mov edx,DWORD PTR [ebx+0x7c]
  427293:	push   ebx
  427294:	adc    DWORD PTR [edx-0x794dd646],esi
  42729a:	or     al,0xff
  42729c:	mov    dl,0x50
  42729e:	ja     0x427224
  4272a0:	push   eax
  4272a1:	xlat   BYTE PTR ds:[ebx]
  4272a2:	jp     0x427312
  4272a4:	out    0x7a,eax
  4272a6:	xor    BYTE PTR [edi+0x7a],0xb2
  4272aa:	xchg   BYTE PTR [ebx+edx*2],cl
  4272ad:	(bad)  
  4272ae:	mov    dl,0x2
  4272b0:	sub    edi,edi
  4272b2:	xor    dl,BYTE PTR [eax-0x29]
  4272b5:	add    DWORD PTR [eax-0xf7f7489],0xffffff8b
  4272bc:	push   ebx
  4272bd:	adc    DWORD PTR [edx+0x7c5329ba],esi
  4272c3:	mov    dl,0x86
  4272c5:	or     al,0xff
  4272c7:	mov    dl,0x80
  4272c9:	lock mov eax,DWORD PTR [eax+0x2a538b97]
  4272d0:	push   ebx
  4272d1:	xchg   esp,eax
  4272d2:	mov    dl,0xbe
  4272d4:	or     al,0xb2
  4272d6:	clc    
  4272d7:	sub    edi,edi
  4272d9:	(bad)  
  4272da:	in     al,dx
  4272db:	mov    dl,0x80
  4272dd:	lock adc DWORD PTR [eax-0x29],0x66
  4272e2:	arpl   bp,di
  4272e4:	xlat   BYTE PTR ds:[ebx]
  4272e5:	sub    DWORD PTR [eax-0xf7f7489],eax
  4272eb:	mov    edx,DWORD PTR [ebx+0x7c]
  4272ee:	push   ebx
  4272ef:	adc    DWORD PTR [edx-0x454df37a],esi
  4272f5:	sub    edi,edi
  4272f7:	mov    dl,0xa
  4272f9:	loop   0x42731c
  4272fb:	add    DWORD PTR [edi+0x62],esi
  4272fe:	or     al,BYTE PTR [esi+0x4d4d8a4c]
  427304:	xor    BYTE PTR [edi-0x76],0x80
  427308:	lock mov dl,BYTE PTR [ebx+0x7c]
  42730c:	push   ebx
  42730d:	adc    DWORD PTR [edx-0x794dd646],esi
  427313:	or     al,0xff
  427315:	mov    dl,0x80
  427317:	lock and DWORD PTR [ebx-0x3],0xffffffd5
  42731c:	sub    DWORD PTR [eax-0xf7f7589],eax
  427322:	mov    dl,BYTE PTR [ebx+0x7c]
  427325:	push   ebx
  427326:	adc    DWORD PTR [edx-0x454df37a],esi
  42732c:	sub    edi,edi
  42732e:	mov    dl,0xa
  427330:	loop   0x427353
  427332:	add    DWORD PTR [edi+0x62],esi
  427335:	or     al,BYTE PTR [esi+0x4d4d8ac9]
  42733b:	xor    BYTE PTR [edi-0x38],0x80
  42733f:	lock enter 0x3080,0x80
  427344:	lea    edx,[ebx+0x11]
  427347:	push   ebx
  427348:	jl     0x4272fc
  42734a:	mov    edx,0xc86b229
  42734f:	push   DWORD PTR [edx+0x622f758f]
  427355:	xor    al,0x8a
  427358:	adc    BYTE PTR [edi+0x532a538a],0x94
  42735f:	mov    dl,0xbe
  427361:	or     al,0xb2
  427363:	clc    
  427364:	sub    DWORD PTR [ecx],ecx
  427366:	loopne 0x4273d2
  427368:	(bad)  
  427369:	(bad)  
  42736a:	arpl   WORD PTR [edx+0xca20f09],si
  427370:	lea    ecx,[ebp-0x7fcd8880]
  427376:	lock xor al,BYTE PTR [eax+0x538d8030]
  42737d:	adc    DWORD PTR [ebx+0x7c],edx
  427380:	mov    dl,0xba
  427382:	sub    DWORD PTR [edx-0x4d00f37a],esi
  427388:	(bad)  
  427389:	jne    0x4273ba
  42738b:	bound  eax,QWORD PTR [eax-0x687f7510]
  427391:	mov    dl,BYTE PTR [ebx+0x2a]
  427394:	push   ebx
  427395:	xchg   esp,eax
  427396:	mov    dl,0xbe
  427398:	or     al,0xb2
  42739a:	clc    
  42739b:	sub    DWORD PTR [ecx],ecx
  42739d:	loopne 0x427409
  42739f:	(bad)  
  4273a0:	(bad)  
  4273a1:	arpl   WORD PTR [edx+0xcda0f09],si
  4273a7:	lea    ecx,[ebp-0x7fea8880]
  4273ad:	lock adc eax,0x8d803080
  4273b3:	push   ebx
  4273b4:	adc    DWORD PTR [ebx+0x7c],edx
  4273b7:	mov    dl,0xba
  4273b9:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4273bf:	(bad)  
  4273c0:	jne    0x4273f1
  4273c2:	bound  eax,QWORD PTR [eax-0x687f7510]
  4273c8:	mov    dl,BYTE PTR [ebx+0x2a]
  4273cb:	push   ebx
  4273cc:	xchg   esp,eax
  4273cd:	mov    dl,0xbe
  4273cf:	or     al,0xb2
  4273d1:	clc    
  4273d2:	sub    DWORD PTR [ecx],ecx
  4273d4:	loopne 0x427440
  4273d6:	(bad)  
  4273d7:	(bad)  
  4273d8:	arpl   WORD PTR [edx+0xc130f09],si
  4273de:	lea    ecx,[ebp-0x7f788880]
  4273e4:	lock xchg DWORD PTR [eax+0x538d8030],eax
  4273eb:	adc    DWORD PTR [ebx+0x7c],edx
  4273ee:	mov    dl,0xba
  4273f0:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4273f6:	(bad)  
  4273f7:	jne    0x427428
  4273f9:	bound  eax,QWORD PTR [eax-0x687f7510]
  4273ff:	mov    dl,BYTE PTR [ebx+0x2a]
  427402:	push   ebx
  427403:	xchg   esp,eax
  427404:	mov    dl,0xbe
  427406:	or     al,0xb2
  427408:	clc    
  427409:	sub    DWORD PTR [ecx],ecx
  42740b:	loopne 0x427477
  42740d:	(bad)  
  42740e:	(bad)  
  42740f:	arpl   WORD PTR [edx+0x3a830f09],si
  427415:	lea    ecx,[ebp-0x7fcd8880]
  42741b:	lock xor al,BYTE PTR [eax+0x538d8030]
  427422:	adc    DWORD PTR [edx+0x7c5329ba],esi
  427428:	mov    dl,0x86
  42742a:	or     al,0xff
  42742c:	mov    dl,0x8f
  42742e:	jne    0x42745f
  427430:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  427436:	adc    BYTE PTR [edi+0x539080c8],0x2a
  42743d:	mov    dl,0xbe
  42743f:	or     al,0x53
  427441:	xchg   esp,eax
  427442:	mov    dl,0xf8
  427444:	sub    edi,edi
  427446:	dec    BYTE PTR [edi-0x2b9d30cf]
  42744c:	mov    dl,0x80
  42744e:	lock adc eax,0x97803080
  427454:	adc    eax,0x2a539080
  427459:	mov    dl,0xbe
  42745b:	or     al,0x53
  42745d:	xchg   esp,eax
  42745e:	mov    dl,0xf8
  427460:	sub    edi,edi
  427462:	dec    BYTE PTR [edi-0x599d30cf]
  427468:	mov    dl,0x80
  42746a:	lock enter 0x3080,0x80
  42746f:	xchg   edi,eax
  427470:	enter  0x9080,0x53
  427474:	sub    dl,BYTE PTR [ebx-0x6c]
  427477:	mov    dl,0xbe
  427479:	or     al,0xb2
  42747b:	clc    
  42747c:	sub    edi,edi
  42747e:	dec    BYTE PTR [edi-0x29a930cf]
  427484:	std    
  427485:	or     DWORD PTR [edi-0x43],ecx
  427488:	cmp    cl,BYTE PTR [ebp+0x1577808d]
  42748e:	xor    al,0x15
  427491:	xor    BYTE PTR [eax],0x80
  427494:	lea    edx,[ebx+0x11]
  427497:	mov    dl,0xba
  427499:	sub    DWORD PTR [ebx+0x7c],edx
  42749c:	mov    dl,0x86
  42749e:	or     al,0xff
  4274a0:	mov    dl,0x8f
  4274a2:	jne    0x4274d3
  4274a4:	bound  eax,QWORD PTR [eax+0x308032f0]
  4274aa:	adc    BYTE PTR [edi+0x53908032],0x2a
  4274b1:	mov    dl,0xbe
  4274b3:	or     al,0x53
  4274b5:	xchg   esp,eax
  4274b6:	mov    dl,0xf8
  4274b8:	sub    edi,edi
  4274ba:	dec    BYTE PTR [edi-0x2b9d30cf]
  4274c0:	mov    dl,0x80
  4274c2:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  4274c9:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  4274d0:	push   ebx
  4274d1:	xchg   esp,eax
  4274d2:	mov    dl,0xf8
  4274d4:	sub    edi,edi
  4274d6:	dec    BYTE PTR [edi-0x599d30cf]
  4274dc:	mov    dl,0x80
  4274de:	lock xor al,BYTE PTR [eax+0x32978030]
  4274e5:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  4274ec:	mov    esi,0x29f8b20c
  4274f1:	(bad)  
  4274f2:	dec    BYTE PTR [edi-0x29a930cf]
  4274f8:	std    
  4274f9:	or     DWORD PTR [edi-0x38],ecx
  4274fc:	lea    ecx,[ebp-0x78887f73]
  427502:	xor    al,0x87
  427505:	xor    BYTE PTR [eax],0x80
  427508:	lea    edx,[ebx+0x11]
  42750b:	mov    dl,0xba
  42750d:	sub    DWORD PTR [ebx+0x7c],edx
  427510:	mov    dl,0x86
  427512:	or     al,0xff
  427514:	mov    dl,0x8f
  427516:	jne    0x427547
  427518:	bound  eax,QWORD PTR [eax+0x308015f0]
  42751e:	adc    BYTE PTR [edi+0x53908015],0x2a
  427525:	mov    dl,0xbe
  427527:	or     al,0x53
  427529:	xchg   esp,eax
  42752a:	mov    dl,0xf8
  42752c:	sub    edi,edi
  42752e:	dec    BYTE PTR [edi-0x2b9d30cf]
  427534:	mov    dl,0x80
  427536:	lock enter 0x3080,0x80
  42753b:	xchg   edi,eax
  42753c:	enter  0x9080,0x53
  427540:	sub    dh,BYTE PTR [edx-0x6bacf342]
  427546:	mov    dl,0xf8
  427548:	sub    edi,edi
  42754a:	dec    BYTE PTR [edi-0x599d30cf]
  427550:	mov    dl,0x80
  427552:	lock adc eax,0x97803080
  427558:	adc    eax,0x2a539080
  42755d:	push   ebx
  42755e:	xchg   esp,eax
  42755f:	mov    dl,0xbe
  427561:	or     al,0xb2
  427563:	clc    
  427564:	sub    edi,edi
  427566:	dec    BYTE PTR [edi-0x29a930cf]
  42756c:	std    
  42756d:	or     DWORD PTR [edi-0x33],ecx
  427570:	lea    ecx,[ebp-0x78887f73]
  427576:	xor    al,0x87
  427579:	xor    BYTE PTR [eax],0x80
  42757c:	lea    edx,[ebx+0x11]
  42757f:	mov    dl,0xba
  427581:	sub    DWORD PTR [ebx+0x7c],edx
  427584:	mov    dl,0x86
  427586:	or     al,0xff
  427588:	mov    dl,0x8f
  42758a:	jne    0x4275bb
  42758c:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  427592:	adc    BYTE PTR [edi+0x539080c8],0x2a
  427599:	mov    dl,0xbe
  42759b:	or     al,0x53
  42759d:	xchg   esp,eax
  42759e:	mov    dl,0xf8
  4275a0:	sub    edi,edi
  4275a2:	dec    BYTE PTR [edi-0x2b9d30cf]
  4275a8:	mov    dl,0x80
  4275aa:	lock xor al,BYTE PTR [eax+0x32978030]
  4275b1:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  4275b8:	push   ebx
  4275b9:	xchg   esp,eax
  4275ba:	mov    dl,0xf8
  4275bc:	sub    edi,edi
  4275be:	dec    BYTE PTR [edi-0x599d30cf]
  4275c4:	mov    dl,0x80
  4275c6:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  4275cd:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  4275d4:	mov    esi,0x29f8b20c
  4275d9:	(bad)  
  4275da:	dec    BYTE PTR [edi-0x29a930cf]
  4275e0:	std    
  4275e1:	xlat   BYTE PTR ds:[ebx]
  4275e2:	jno    0x4275e5
  4275e4:	ja     0x427648
  4275e6:	or     al,BYTE PTR [esi+0x4d4dac84]
  4275ec:	xor    al,0x5e
  4275ef:	arpl   WORD PTR [edx+0x778017d5],si
  4275f5:	mov    al,BYTE PTR [eax+0x11538af0]
  4275fb:	push   ebx
  4275fc:	jl     0x4275b0
  4275fe:	mov    edx,0xc86b229
  427603:	push   DWORD PTR [edx-0x7f7b88b0]
  427609:	ja     0x427596
  42760b:	adc    bh,0x8b
  42760e:	xor    BYTE PTR [edi-0x75],0x80
  427612:	lock mov edx,DWORD PTR [ebx+0x4b]
  427616:	push   ebx
  427617:	je     0x4275cb
  427619:	mov    BYTE PTR [edx+esi*4],cl
  42761c:	test   BYTE PTR [ecx],ch
  42761e:	push   DWORD PTR [edx]
  427620:	in     al,dx
  427621:	xlat   BYTE PTR ds:[ebx]
  427622:	data16 xor BYTE PTR [edi+0x7a],0x53
  427627:	sub    ch,ch
  427629:	mov    edx,0x8a84ed8a
  42762e:	mov    dl,0x88
  427630:	sub    esp,ebp
  427632:	std    
  427633:	inc    DWORD PTR ds:0x24f60ba2
  427639:	outs   dx,DWORD PTR ds:[esi]
  42763a:	cmp    BYTE PTR [eax-0xf7f7589],al
  427640:	mov    dl,BYTE PTR [ebx+0x11]
  427643:	push   ebx
  427644:	jl     0x4275f8
  427646:	mov    edx,0xc86b229
  42764b:	push   DWORD PTR [edx+0x6384f080]
  427651:	std    
  427652:	or     DWORD PTR [edi],ecx
  427654:	pop    ds
  427655:	mov    cl,BYTE PTR [ebp+0x4d]
  427658:	xor    BYTE PTR [edi-0x76],0x80
  42765c:	lock mov dl,BYTE PTR [ebx+0x7c]
  427660:	push   ebx
  427661:	adc    DWORD PTR [edx-0x794dd646],esi
  427667:	or     al,0xff
  427669:	mov    dl,0x80
  42766b:	lock test BYTE PTR [ebx-0x3],ah
  42766f:	xlat   BYTE PTR ds:[ebx]
  427670:	sbb    eax,DWORD PTR [eax-0xf7f7489]
  427676:	mov    edx,DWORD PTR [ebx+0x7c]
  427679:	push   ebx
  42767a:	adc    DWORD PTR [edx-0x454df37a],esi
  427680:	sub    edi,edi
  427682:	mov    dl,0xbe
  427684:	jg     0x4276c0
  427686:	lea    ecx,[ebp-0x6656da1e]
  42768c:	dec    ebp
  42768d:	xlat   BYTE PTR ds:[ebx]
  42768e:	add    BYTE PTR [ecx],0x77
  427691:	push   ss
  427692:	or     al,BYTE PTR [esi+0x4d4da00c]
  427698:	xor    BYTE PTR [edi-0x76],0x80
  42769c:	lock mov dl,BYTE PTR [ebx+0x7c]
  4276a0:	push   ebx
  4276a1:	adc    DWORD PTR [edx-0x794dd646],esi
  4276a7:	or     al,0xff
  4276a9:	mov    dl,0x80
  4276ab:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276b0:	xchg   ebx,eax
  4276b1:	xor    BYTE PTR [edi-0x75],0x80
  4276b5:	lock mov edx,DWORD PTR [ebx+0x7c]
  4276b9:	push   ebx
  4276ba:	adc    DWORD PTR [edx-0x794dd646],esi
  4276c0:	or     al,0xff
  4276c2:	mov    dl,0x80
  4276c4:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276c9:	daa    
  4276ca:	xor    BYTE PTR [edi-0x75],0x80
  4276ce:	lock mov edx,DWORD PTR [ebx+0x7c]
  4276d2:	push   ebx
  4276d3:	adc    DWORD PTR [edx-0x454df37a],esi
  4276d9:	sub    edi,edi
  4276db:	mov    dl,0xa
  4276dd:	cdq    
  4276de:	add    DWORD PTR [edi+0x16],esi
  4276e1:	or     al,BYTE PTR [esi+0x4d4d8b34]
  4276e7:	xor    BYTE PTR [edi-0x76],0x80
  4276eb:	lock mov dl,BYTE PTR [ebx+0x7c]
  4276ef:	push   ebx
  4276f0:	adc    DWORD PTR [edx-0x454df37a],esi
  4276f6:	sub    edi,edi
  4276f8:	mov    dl,0xa
  4276fa:	cdq    
  4276fb:	add    DWORD PTR [edi+0x16],esi
  4276fe:	or     al,BYTE PTR [esi+0x4d4d8b4c]
  427704:	xor    BYTE PTR [edi-0x7e],0xec
  427708:	cld    
  427709:	push   eax
  42770a:	ja     0x427721
  42770c:	dec    ebp
  42770d:	xlat   BYTE PTR ds:[ebx]
  42770e:	ds dec ebp
  427710:	xlat   BYTE PTR ds:[ebx]
  427711:	adc    eax,0xec367780
  427716:	ja     0x427707
  427718:	or     al,BYTE PTR [esi+0x4d4d82e5]
  42771e:	xor    BYTE PTR [edi-0x76],0x80
  427722:	lock mov dl,BYTE PTR [ebx+0x7c]
  427726:	push   ebx
  427727:	adc    DWORD PTR [edx-0x794dd646],esi
  42772d:	or     al,0xff
  42772f:	mov    dl,0x80
  427731:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  427736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427737:	xor    BYTE PTR [edi-0x75],0x80
  42773b:	lock mov edx,DWORD PTR [ebx+0x7c]
  42773f:	push   ebx
  427740:	adc    DWORD PTR [edx-0x794dd646],esi
  427746:	or     al,0xff
  427748:	mov    dl,0x80
  42774a:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  42774f:	rol    BYTE PTR [eax-0xf7f7489],0x8b
  427756:	push   ebx
  427757:	jl     0x42770b
  427759:	xchg   BYTE PTR [ebx+edx*2],cl
  42775c:	adc    DWORD PTR [edx-0x4d00d646],esi
  427762:	or     cl,BYTE PTR [ebp-0x29]
  427765:	xor    BYTE PTR ds:[edi+0x36],0xec
  42776a:	ja     0x42775b
  42776c:	or     al,BYTE PTR [esi+0x4d4d8b1d]
  427772:	xor    BYTE PTR [edi-0x76],0x80
  427776:	lock mov dl,BYTE PTR [ebx+0x7c]
  42777a:	mov    dl,0x86
  42777c:	or     al,0x53
  42777e:	adc    DWORD PTR [edx-0x4d00d646],esi
  427784:	or     cl,BYTE PTR [ebp-0x29]
  427787:	xor    BYTE PTR ds:[edi+0x36],0xec
  42778c:	ja     0x42777d
  42778e:	or     al,BYTE PTR [esi+0x4d4d4b0b]
  427794:	xor    al,0x46
  427797:	xor    BYTE PTR [edi+0x46],0x53
  42779b:	je     0x4277f0
  42779d:	sub    dh,BYTE PTR [edx-0x7b4df342]
  4277a3:	sub    edi,edi
  4277a5:	mov    dl,0x80
  4277a7:	lock cs push ebx
  4277aa:	mov    dl,0x40
  4277ac:	lea    edi,[edx]
  4277ae:	lea    ecx,[ebp-0x72c8ea2b]
  4277b4:	int    0x8d
  4277b6:	lea    ecx,[edx]
  4277b8:	dec    ebp
  4277b9:	xlat   BYTE PTR ds:[ebx]
  4277ba:	ds adc bh,0x36
  4277be:	in     al,dx
  4277bf:	xlat   BYTE PTR ds:[ebx]
  4277c0:	out    dx,eax
  4277c1:	xchg   BYTE PTR [esi-0x7fb2b258],bl
  4277c7:	ja     0x42783a
  4277c9:	xor    al,0x3e
  4277cc:	cmp    ch,bh
  4277ce:	xor    BYTE PTR [edi+0x3e],0xec
  4277d2:	ja     0x42775a
  4277d4:	push   eax
  4277d5:	ja     0x42775d
  4277d7:	xor    BYTE PTR [edi-0x75],0x80
  4277db:	lock mov edx,DWORD PTR [ebx+0x11]
  4277df:	mov    dl,0xba
  4277e1:	sub    DWORD PTR [ebx+0x7c],edx
  4277e4:	mov    dl,0x86
  4277e6:	or     al,0xff
  4277e8:	mov    dl,0x80
  4277ea:	lock xchg BYTE PTR [ecx],cl
  4277ed:	and    dh,BYTE PTR [edx-0x7f750f80]
  4277f3:	xchg   edi,eax
  4277f4:	mov    dl,BYTE PTR [ebx+0x2a]
  4277f7:	push   ebx
  4277f8:	xchg   esp,eax
  4277f9:	mov    dl,0xbe
  4277fb:	or     al,0xb2
  4277fd:	clc    
  4277fe:	sub    edi,edi
  427800:	(bad)  
  427801:	in     al,dx
  427802:	lock mul DWORD PTR [ebx-0x4e]
  427806:	or     edx,ebp
  427808:	hlt    
  427809:	retf   
  42780a:	dec    ebp
  42780b:	dec    ebp
  42780c:	xor    BYTE PTR [edi-0x11],0xab
  427810:	test   eax,0x71fb70a3
  427815:	lea    edx,[edi-0x78127880]
  42781b:	adc    eax,0x539b9993
  427820:	push   0xffffff80
  427822:	ja     0x427859
  427824:	or     ch,0x2e
  427827:	cmp    cl,BYTE PTR [ebp-0x10687f73]
  42782d:	or     BYTE PTR [ebp-0x7fde2880],0xe7
  427834:	out    dx,eax
  427835:	and    BYTE PTR [edi-0x7588afdf],0x60
  42783c:	fistp  DWORD PTR [eax-0x21]
  42783f:	adc    DWORD PTR [ebx-0x4a],edx
  427842:	pop    esi
  427843:	xchg   BYTE PTR [edi+0x32532643],cl
  427849:	or     DWORD PTR [esi-0x3e],eax
  42784c:	or     al,0xb2
  42784e:	mov    esp,0x8d4ba229
  427853:	lea    ecx,[ebp+0xc88b2cd]
  427859:	push   ebx
  42785a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42785b:	dec    DWORD PTR [ebx-0x80]
  42785e:	out    0x1d,eax
  427860:	call   DWORD PTR [ebx+eiz*2+0x6313d79c]
  427867:	(bad)  
  427868:	xlat   BYTE PTR ds:[ebx]
  427869:	or     DWORD PTR [edx-0x54881f31],esp
  42786f:	push   esi
  427870:	sar    ebx,cl
  427872:	adc    al,0x62
  427874:	mov    esi,0x8d8d3a9c
  427879:	adc    BYTE PTR [edi+0x15d78071],0x80
  427880:	xchg   edi,eax
  427881:	out    dx,eax
  427882:	adc    bh,0x21
  427885:	adc    BYTE PTR [edi+0x21d780ef],0x80
  42788c:	out    0xef,eax
  42788e:	and    BYTE PTR [edi+0x53325321],0xb6
  427895:	or     DWORD PTR [esi-0x3e],eax
  427898:	or     al,0xb2
  42789a:	mov    esp,0x8d4ba229
  42789f:	lea    ecx,[ebp-0x5bac33]
  4278a5:	xchg   esp,eax
  4278a6:	mov    dl,0x88
  4278a8:	or     al,0xff
  4278aa:	dec    ebx
  4278ab:	and    bh,0x71
  4278ae:	and    BYTE PTR [edi-0x7f7daceb],0x77
  4278b5:	jno    0x42790a
  4278b7:	retf   
  4278b8:	xor    al,0x15
  4278bb:	or     DWORD PTR [esi-0x54],eax
  4278be:	or     al,0xb2
  4278c0:	test   BYTE PTR [ecx],ch
  4278c2:	push   ebx
  4278c3:	jo     0x4278c4
  4278c5:	retf   
  4278c6:	push   edi
  4278c7:	lea    ecx,[ebp-0x3b4d3273]
  4278cd:	or     al,0xff
  4278cf:	add    BYTE PTR [eax-0x63131089],0x13
  4278d6:	mov    BYTE PTR [eax+0x21d78051],0x80
  4278dd:	out    0x71,eax
  4278df:	and    BYTE PTR [edi-0x757b12eb],0xed
  4278e6:	mov    esp,0x29beb28a
  4278eb:	push   ebx
  4278ec:	jb     0x427945
  4278ee:	aad    0x58
  4278f0:	fist   WORD PTR [ecx]
  4278f2:	mov    ds:0x438f860b,al
  4278f7:	mov    es:0xdf58d54b,al
  4278fd:	adc    DWORD PTR [edx+0x438f86c6],esp
  427903:	es in  al,dx
  427905:	jl     0x42791a
  427907:	(bad)  
  427908:	(bad)  
  427909:	std    
  42790a:	(bad)  
  42790b:	jle    0x42796b
  42790d:	xchg   BYTE PTR [edi+0x5a22643],cl
  427913:	fstp   DWORD PTR [eax-0x21]
  427916:	adc    DWORD PTR [ebx-0x9],edx
  427919:	mov    ds:0xdf58e8cb,al
  42791e:	adc    edi,edx
  427920:	adc    esp,DWORD PTR [ebx-0x9]
  427923:	xlat   BYTE PTR ds:[ebx]
  427924:	or     DWORD PTR [edx+0x3ca10d57],esp
  42792a:	(bad)  
  42792c:	loope  0x427942
  42792e:	enter  0x25be,0x3a
  427932:	lea    ecx,[ebp-0x7f106880]
  427938:	xlat   BYTE PTR ds:[ebx]
  427939:	and    DWORD PTR [eax-0x187f1059],eax
  42793f:	and    DWORD PTR [ebx+0x32],edx
  427942:	pusha  
  427943:	fistp  DWORD PTR [eax-0x21]
  427946:	adc    DWORD PTR [ebx-0x4a],edx
  427949:	or     DWORD PTR [esi-0x3e],eax
  42794c:	or     al,0xb2
  42794e:	mov    BYTE PTR [ebx+edx*2],cl
  427951:	dec    ebp
  427952:	mov    dl,0xb4
  427954:	sub    DWORD PTR [eax-0x29],edx
  427957:	enter  0x9cff,0x80
  42795b:	out    0xc8,eax
  42795d:	cli    
  42795e:	lea    ecx,[ebp+0x453cd8d]
  427964:	inc    DWORD PTR [esi]
  427966:	and    BYTE PTR [edi+0x50238025],0xa7
  42796d:	xor    ah,BYTE PTR [ebx+0x3]
  427970:	xlat   BYTE PTR ds:[ebx]
  427971:	outs   dx,DWORD PTR ds:[esi]
  427972:	push   ebx
  427973:	jb     0x4279d8
  427975:	pushf  
  427976:	aad    0xb0
  427978:	dec    ebp
  427979:	xlat   BYTE PTR ds:[ebx]
  42797a:	xor    eax,0x4d25d780
  42797f:	xlat   BYTE PTR ds:[ebx]
  427980:	sub    eax,0x4d8ad74d
  427985:	pop    ecx
  427986:	xchg   BYTE PTR [ebx],dh
  427988:	dec    ebx
  427989:	dec    ebp
  42798a:	dec    ebp
  42798b:	push   eax
  42798c:	outs   dx,DWORD PTR ds:[esi]
  42798d:	mov    esi,0x8d8d8dfa
  427992:	adc    BYTE PTR [edi+0x21e780ef],0x53
  427999:	mov    edx,DWORD PTR [ebx-0x4a]
  42799c:	or     DWORD PTR [esi-0x7b],eax
  42799f:	or     al,0xb2
  4279a1:	popa   
  4279a2:	or     al,0x50
  4279a4:	out    0xc8,eax
  4279a6:	and    bh,0xef
  4279a9:	and    BYTE PTR [edi+0x29bcb221],0x53
  4279b0:	or     eax,0x53c8d780
  4279b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279b6:	dec    DWORD PTR [ebx-0x80]
  4279b9:	out    0x71,eax
  4279bb:	push   ebx
  4279bc:	retf   
  4279bd:	call   DWORD PTR [eax+eax*4-0x7dacea59]
  4279c4:	cmp    BYTE PTR [eax+eax*4-0x19],0x71
  4279c9:	adc    BYTE PTR [ecx],0x80
  4279cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279cd:	adc    eax,0xcfd4609
  4279d2:	mov    dl,0xbc
  4279d4:	sub    DWORD PTR [ebx-0x5c],edx
  4279d7:	mov    dl,0xbe
  4279d9:	or     al,0xa2
  4279db:	dec    ebx
  4279dc:	lea    ecx,[ebp+0x74ffcd8d]
  4279e2:	jmp    FWORD PTR [edx]
  4279e4:	arpl   di,si
  4279e6:	xlat   BYTE PTR ds:[ebx]
  4279e7:	sbb    DWORD PTR [ebx+0x5],esp
  4279ea:	xlat   BYTE PTR ds:[ebx]
  4279eb:	nop
  4279ec:	dec    edx
  4279ed:	push   ebx
  4279ee:	test   DWORD PTR [esi],ebx
  4279f0:	jne    0x4279b1
  4279f2:	push   0xffffffc8
  4279f4:	outs   dx,DWORD PTR ds:[esi]
  4279f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279f6:	jbe    0x427a2c
  4279f8:	push   ebx
  4279f9:	test   DWORD PTR [esi],ebx
  4279fb:	jne    0x4279c1
  4279fd:	stos   BYTE PTR es:[edi],al
  4279fe:	xor    BYTE PTR [edi-0x11],0x80
  427a02:	lock and DWORD PTR [eax-0x287f1069],eax
  427a09:	and    DWORD PTR [edx+0x438f8605],esp
  427a0f:	es push edi
  427a11:	fistp  DWORD PTR [eax-0x21]
  427a14:	adc    DWORD PTR [ecx],ecx
  427a16:	inc    esi
  427a17:	std    
  427a18:	or     al,0x80
  427a1a:	ret    0x4d53
  427a1d:	push   ebx
  427a1e:	jb     0x4279d2
  427a20:	add    ch,BYTE PTR [ecx]
  427a22:	push   ebx
  427a23:	test   DWORD PTR [edx+0xba20cbe],esi
  427a29:	lea    ecx,[ebp+0x7cffcd8d]
  427a2f:	call   DWORD PTR [ecx+0x5f]
  427a32:	ja     0x4279be
  427a34:	xlat   BYTE PTR ds:[ebx]
  427a35:	out    dx,al
  427a36:	arpl   WORD PTR [esi+0x47a221d5],si
  427a3c:	fisubr WORD PTR [eax+0x2d]
  427a3f:	mov    ds:0xe3bb390a,al
  427a44:	les    esp,FWORD PTR [esi-0x5e2bc85e]
  427a4a:	adc    edx,ebp
  427a4c:	pop    esp
  427a4d:	js     0x427a73
  427a4f:	xor    ch,BYTE PTR [ebx-0x48f5c57]
  427a55:	sub    eax,0x8780978d
  427a5a:	in     eax,dx
  427a5b:	xchg   DWORD PTR [ecx],esp
  427a5d:	xor    BYTE PTR [edi-0x11],0x80
  427a61:	lock and DWORD PTR [ecx],ecx
  427a64:	inc    esi
  427a65:	std    
  427a66:	or     al,0xb2
  427a68:	mov    esi,0xeff0800c
  427a6d:	adc    BYTE PTR [edi-0x454d66df],0x29
  427a74:	xor    al,0x1d
  427a77:	cli    
  427a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a79:	mov    DWORD PTR [esp+edx*8],0x7253fc53
  427a80:	(bad)  
  427a81:	sti    
  427a82:	push   eax
  427a83:	cmp    al,BYTE PTR [eax-0x327fda89]
  427a89:	cmp    cl,BYTE PTR ss:[ebp-0x7f107f73]
  427a90:	ja     0x427ab7
  427a92:	or     ch,0x36
  427a95:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  427a9b:	xchg   edx,eax
  427a9c:	gs xor al,0x25
  427aa0:	adc    BYTE PTR [eax+0x32],0x3a
  427aa4:	lea    ecx,[ebp-0x1dea8080]
  427aaa:	out    dx,al
  427aab:	mov    ebp,0x8d8d818d
  427ab0:	dec    ebp
  427ab1:	push   edx
  427ab2:	or     ch,BYTE PTR [edx-0x73af49b3]
  427ab8:	xor    BYTE PTR [edi-0x11],0x80
  427abc:	lock and DWORD PTR [ecx],ecx
  427abf:	inc    esi
  427ac0:	std    
  427ac1:	or     al,0xb2
  427ac3:	mov    esi,0xeff0800c
  427ac8:	adc    BYTE PTR [edi+0x25d74d21],0x53
  427acf:	cld    
  427ad0:	push   ebx
  427ad1:	jb     0x427ad2
  427ad3:	sti    
  427ad4:	push   eax
  427ad5:	ja     0x427a61
  427ad7:	add    DWORD PTR [edi-0x76],esi
  427ada:	or     bl,BYTE PTR [ebx-0x4de228b3]
  427ae0:	mov    edx,0x15d74d29
  427ae5:	dec    ebp
  427ae6:	xlat   BYTE PTR ds:[ebx]
  427ae7:	jno    0x427b36
  427ae9:	xlat   BYTE PTR ds:[ebx]
  427aea:	and    DWORD PTR [ebp-0x29],ecx
  427aed:	out    dx,eax
  427aee:	xchg   BYTE PTR [ebx],dh
  427af0:	int3   
  427af1:	dec    ebp
  427af2:	dec    ebp
  427af3:	xor    BYTE PTR [edi-0x11],0x80
  427af7:	lock and DWORD PTR [ecx],ecx
  427afa:	inc    esi
  427afb:	std    
  427afc:	or     al,0xb2
  427afe:	mov    esi,0xeff0800c
  427b03:	adc    BYTE PTR [edi+0x53fc5321],0x72
  427b0a:	mov    dl,0xba
  427b0c:	sub    DWORD PTR [eax+0x63fbff09],eax
  427b12:	std    
  427b13:	aad    0x37
  427b15:	xor    BYTE PTR [edi+0x71],0x80
  427b19:	lock adc eax,0xcfd4609
  427b1f:	mov    dl,0xbe
  427b21:	or     al,0x80
  427b23:	lock jno 0x427aa6
  427b26:	xchg   edi,eax
  427b27:	adc    eax,0x7253fc53
  427b2c:	mov    dl,0xba
  427b2e:	sub    DWORD PTR [eax-0x400e210],eax
  427b34:	or     DWORD PTR [edx],esp
  427b36:	ja     0x427ac2
  427b38:	push   eax
  427b39:	cmp    ch,BYTE PTR [ecx-0x72e20490]
  427b3f:	xchg   edi,eax
  427b40:	add    BYTE PTR [edi-0x64666c6a],0x53
  427b47:	push   0xffffff80
  427b49:	xlat   BYTE PTR ds:[ebx]
  427b4a:	cmp    eax,0x80459780
  427b4f:	out    0x25,eax
  427b51:	pop    esi
  427b52:	xchg   BYTE PTR [edi-0x249fd9bd],cl
  427b58:	pop    eax
  427b59:	fist   WORD PTR [ecx]
  427b5b:	arpl   di,si
  427b5d:	or     esi,ecx
  427b5f:	dec    esp
  427b60:	lea    ecx,[ebp-0x3960fe73]
  427b66:	in     al,0xee
  427b68:	arpl   si,ax
  427b6a:	(bad)  
  427b6c:	arpl   si,ax
  427b6e:	xlat   BYTE PTR ds:[ebx]
  427b6f:	out    dx,eax
  427b70:	arpl   di,si
  427b72:	or     DWORD PTR [edi],ecx
  427b74:	pop    ss
  427b75:	or     al,0x8d
  427b77:	lea    esp,[edx-0x20a755f3]
  427b7d:	adc    edi,edx
  427b7f:	out    dx,eax
  427b80:	arpl   di,si
  427b82:	or     DWORD PTR [edi],ecx
  427b84:	das    
  427b85:	or     al,0x8d
  427b87:	lea    esp,[edx-0x20a766f3]
  427b8d:	adc    edi,edx
  427b8f:	out    dx,eax
  427b90:	arpl   di,si
  427b92:	or     DWORD PTR [edi],ecx
  427b94:	dec    ebx
  427b95:	lea    ecx,[ebp-0x56f25d73]
  427b9b:	pop    eax
  427b9c:	fist   WORD PTR [ecx]
  427b9e:	xlat   BYTE PTR ds:[ebx]
  427b9f:	out    dx,al
  427ba0:	arpl   di,si
  427ba2:	aad    0x3f
  427ba4:	mov    ds:0xdf58d00d,al
  427ba9:	adc    edi,edx
  427bab:	out    dx,eax
  427bac:	arpl   di,si
  427bae:	or     DWORD PTR [edi],ecx
  427bb0:	mov    al,ds:0xa28d8d3a
  427bb5:	or     eax,0x11df58b9
  427bba:	or     DWORD PTR [edi-0x24],ecx
  427bbd:	cmp    cl,BYTE PTR [ebp+0x9f7638d]
  427bc3:	(bad)  
  427bc5:	lea    ecx,[ebp+0x3aa2be8d]
  427bcb:	lea    ecx,[ebp+0x4d1dd74d]
  427bd1:	xlat   BYTE PTR ds:[ebx]
  427bd2:	sub    eax,0x4d15d74d
  427bd7:	xlat   BYTE PTR ds:[ebx]
  427bd8:	jno    0x427c27
  427bda:	xlat   BYTE PTR ds:[ebx]
  427bdb:	and    DWORD PTR [ebp-0x29],ecx
  427bde:	out    dx,eax
  427bdf:	xchg   bl,dl
  427be1:	or     eax,0xb7be4d4d
  427be6:	cmp    cl,BYTE PTR [ebp-0x3ef25d73]
  427bec:	pop    eax
  427bed:	fist   WORD PTR [ecx]
  427bef:	xlat   BYTE PTR ds:[ebx]
  427bf0:	out    dx,eax
  427bf1:	arpl   di,si
  427bf3:	or     DWORD PTR [edi],ecx
  427bf5:	loope  0x427b84
  427bf7:	lea    ecx,[ebp+0x58e40da2]
  427bfd:	fist   WORD PTR [ecx]
  427bff:	xlat   BYTE PTR ds:[ebx]
  427c00:	out    dx,eax
  427c01:	arpl   di,si
  427c03:	or     DWORD PTR [edi],ecx
  427c05:	mov    cl,0x3a
  427c07:	lea    ecx,[ebp+0x58d90da2]
  427c0d:	fist   WORD PTR [ecx]
  427c0f:	xlat   BYTE PTR ds:[ebx]
  427c10:	out    dx,al
  427c11:	arpl   di,si
  427c13:	aad    0x1d
  427c15:	mov    ds:0xdf58e60d,al
  427c1a:	adc    edi,edx
  427c1c:	out    dx,eax
  427c1d:	arpl   di,si
  427c1f:	or     DWORD PTR [edi],ecx
  427c21:	aam    0x3a
  427c23:	lea    ecx,[ebp+0x58e80da2]
  427c29:	fist   WORD PTR [ecx]
  427c2b:	les    eax,FWORD PTR [ecx]
  427c2d:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427c34:	out    0xef,eax
  427c36:	and    BYTE PTR [edi+0x53325321],0xb6
  427c3d:	or     DWORD PTR [esi-0x3e],eax
  427c40:	or     al,0xb2
  427c42:	mov    esp,0x8d4ba229
  427c47:	lea    ecx,[ebp+0xc88b2cd]
  427c4d:	push   ebx
  427c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c4f:	dec    DWORD PTR [ebx-0x80]
  427c52:	out    0xef,eax
  427c54:	call   DWORD PTR [eax+eax*4-0x6313de59]
  427c5b:	adc    eax,esi
  427c5d:	push   eax
  427c5e:	xchg   edi,eax
  427c5f:	out    dx,eax
  427c60:	push   eax
  427c61:	xlat   BYTE PTR ds:[ebx]
  427c62:	and    DWORD PTR [eax-0x287f1069],eax
  427c68:	and    DWORD PTR [eax-0x587f1019],eax
  427c6e:	and    DWORD PTR [ebx+0x32],edx
  427c71:	push   ebx
  427c72:	mov    dh,0x9
  427c74:	inc    esi
  427c75:	ret    0xb20c
  427c78:	mov    esp,0xb2a45329
  427c7d:	mov    BYTE PTR [edx+eiz*4],cl
  427c80:	dec    ebx
  427c81:	lea    ecx,[ebp-0x6b003273]
  427c87:	dec    DWORD PTR [ebx+0x3f]
  427c8a:	xchg   edi,eax
  427c8b:	jno    0x427cac
  427c8d:	xlat   BYTE PTR ds:[ebx]
  427c8e:	adc    eax,0x803d9780
  427c93:	xlat   BYTE PTR ds:[ebx]
  427c94:	inc    ebp
  427c95:	adc    BYTE PTR [edi+0x15d78071],0x80
  427c9c:	xchg   edi,eax
  427c9d:	jno    0x427c1f
  427c9f:	xlat   BYTE PTR ds:[ebx]
  427ca0:	adc    eax,0x8071e780
  427ca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ca6:	adc    eax,0xb6533253
  427cab:	or     DWORD PTR [esi-0x3e],eax
  427cae:	or     al,0xb2
  427cb0:	mov    esp,0xa2a45329
  427cb5:	dec    ebx
  427cb6:	lea    ecx,[ebp-0x774d3273]
  427cbc:	or     al,0xff
  427cbe:	dec    ebx
  427cbf:	and    bh,0x3d
  427cc2:	call   DWORD PTR [eax+eax*4-0x34acba59]
  427cc9:	push   ebx
  427cca:	add    BYTE PTR [eax-0xf7fc289],0x45
  427cd1:	or     DWORD PTR [esi-0x54],eax
  427cd4:	or     al,0x53
  427cd6:	jo     0x427c8a
  427cd8:	test   BYTE PTR [ecx],ch
  427cda:	push   edi
  427cdb:	lea    ecx,[ebp-0x34003273]
  427ce1:	xor    al,0x71
  427ce4:	mov    dl,0xc4
  427ce6:	or     al,0xff
  427ce8:	sub    ah,0x9c
  427ceb:	adc    BYTE PTR [edi-0x1239eceb],0xba
  427cf2:	mov    dh,BYTE PTR [edx+0x6a532988]
  427cf8:	mov    ds:0xdf58d505,al
  427cfd:	adc    DWORD PTR [edx+0x438f86c2],esp
  427d03:	es and bh,0x3d
  427d07:	and    BYTE PTR [edi-0x754312bb],0xa2
  427d0e:	dec    ebx
  427d0f:	aad    0x58
  427d11:	fist   WORD PTR [ecx]
  427d13:	mov    ds:0x438f86c6,al
  427d18:	es in  al,dx
  427d1a:	sub    al,BYTE PTR [eax-0x6becda19]
  427d20:	(bad)  
  427d21:	sti    
  427d22:	push   edi
  427d23:	xchg   BYTE PTR [edi-0xf5d9bd],cl
  427d29:	add    eax,0x58d90ba2
  427d2e:	fist   WORD PTR [ecx]
  427d30:	cdq    
  427d31:	dec    ebp
  427d32:	xlat   BYTE PTR ds:[ebx]
  427d33:	xor    eax,0x9b2dd74d
  427d38:	dec    ebp
  427d39:	xlat   BYTE PTR ds:[ebx]
  427d3a:	sbb    eax,0x4d15d74d
  427d3f:	xlat   BYTE PTR ds:[ebx]
  427d40:	jno    0x427d8f
  427d42:	xlat   BYTE PTR ds:[ebx]
  427d43:	and    DWORD PTR [ebp-0x29],ecx
  427d46:	out    dx,eax
  427d47:	xchg   dh,al
  427d49:	int3   
  427d4a:	dec    ebp
  427d4b:	dec    ebp
  427d4c:	push   eax
  427d4d:	mov    WORD PTR [eax-0x5c565474],es
  427d53:	jo     0x427d50
  427d55:	cmp    eax,0xef97808d
  427d5a:	adc    bh,0x21
  427d5d:	and    bh,0xef
  427d60:	and    BYTE PTR [edi+0x53b65321],0x32
  427d67:	or     DWORD PTR [esi-0x3e],eax
  427d6a:	or     al,0xb2
  427d6c:	mov    esp,0x8d4ba229
  427d71:	lea    ecx,[ebp+0xc88b2cd]
  427d77:	push   ebx
  427d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d79:	call   DWORD PTR [edi+edi*8+0x71e7804b]
  427d80:	and    BYTE PTR [edi-0x6300eb],0xc6
  427d87:	push   eax
  427d88:	xchg   edi,eax
  427d89:	jno    0x427ddb
  427d8b:	xlat   BYTE PTR ds:[ebx]
  427d8c:	adc    eax,0x803d9780
  427d91:	xlat   BYTE PTR ds:[ebx]
  427d92:	inc    ebp
  427d93:	adc    BYTE PTR [edi+0x15d78071],0x80
  427d9a:	xchg   edi,eax
  427d9b:	out    dx,eax
  427d9c:	adc    bh,0x21
  427d9f:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427da6:	out    0xef,eax
  427da8:	and    BYTE PTR [edi+0x53b65321],0x32
  427daf:	or     DWORD PTR [esi-0x3e],eax
  427db2:	or     al,0xb2
  427db4:	mov    esp,0x8d4ba229
  427db9:	lea    ecx,[ebp-0x5bac33]
  427dbf:	xchg   esp,eax
  427dc0:	mov    dl,0x88
  427dc2:	or     al,0xff
  427dc4:	dec    ebx
  427dc5:	and    bh,0x71
  427dc8:	and    BYTE PTR [edi+0x53cb5315],0x82
  427dcf:	xor    BYTE PTR [edi+0x71],0x80
  427dd3:	lock adc eax,0xcac4609
  427dd9:	push   ebx
  427dda:	jo     0x427ddb
  427ddc:	retf   
  427ddd:	mov    dl,0x84
  427ddf:	sub    DWORD PTR [edi-0x73],edx
  427de2:	lea    ecx,[ebp+0xcc4b2cd]
  427de8:	inc    DWORD PTR [edx-0x7fc28880]
  427dee:	lock inc ebp
  427df0:	in     al,dx
  427df1:	pushf  
  427df2:	and    bh,0x3d
  427df5:	adc    eax,esi
  427df7:	and    BYTE PTR [edi-0x79fa5dbb],0x8f
  427dfe:	inc    ebx
  427dff:	es push edi
  427e01:	fistp  DWORD PTR [eax-0x21]
  427e04:	adc    DWORD PTR [ecx],ecx
  427e06:	inc    esi
  427e07:	std    
  427e08:	or     al,0xb2
  427e0a:	mov    esp,0xcbeb229
  427e0f:	push   ebx
  427e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e11:	mov    ds:0x8d8d8d4b,al
  427e16:	int    0xff
  427e18:	sub    bh,bh
  427e1a:	je     0x427e08
  427e1c:	not    DWORD PTR [ebx]
  427e1e:	add    eax,0x80eff080
  427e23:	xchg   edi,eax
  427e24:	and    DWORD PTR [eax-0x587f8e19],eax
  427e2a:	adc    eax,0xed8abaed
  427e2f:	mov    esp,0xd505a28a
  427e34:	pop    eax
  427e35:	fist   WORD PTR [ecx]
  427e37:	mov    ds:0xdf58d54b,al
  427e3c:	adc    DWORD PTR [edx+0x6a532988],esi
  427e42:	mov    ds:0x438f86c2,al
  427e47:	mov    es:0x438f86c6,al
  427e4d:	es in  al,dx
  427e4f:	sub    dl,BYTE PTR [ebx]
  427e51:	xchg   esp,eax
  427e52:	mov    esi,0x4d4d0d48
  427e57:	xchg   edi,eax
  427e58:	add    BYTE PTR [edi-0x66e27813],0x60
  427e5f:	fstp   DWORD PTR [eax-0x21]
  427e62:	adc    DWORD PTR [eax-0x10],edx
  427e65:	xor    bl,BYTE PTR [esi-0x7a]
  427e68:	pop    DWORD PTR [ebx+0x26]
  427e6b:	push   eax
  427e6c:	ja     0x427e36
  427e6e:	jl     0x427ee7
  427e70:	xchg   ah,ah
  427e72:	pop    eax
  427e73:	fist   WORD PTR [ecx]
  427e75:	push   eax
  427e76:	ja     0x427dff
  427e78:	adc    BYTE PTR [edi-0x37287fce],0x9b
  427e7f:	or     DWORD PTR [esi-0x3e],eax
  427e82:	or     al,0xb2
  427e84:	mov    BYTE PTR [eax+eax*4],cl
  427e87:	xlat   BYTE PTR ds:[ebx]
  427e88:	xor    al,BYTE PTR [eax-0x5df53719]
  427e8e:	ret    0xc7a7
  427e91:	add    al,0xd4
  427e93:	push   ebx
  427e94:	dec    ebp
  427e95:	xchg   esi,eax
  427e96:	call   FWORD PTR [eax+edx*2-0x687f7569]
  427e9d:	and    DWORD PTR [eax-0x69],edx
  427ea0:	and    DWORD PTR [ebp-0x29],ecx
  427ea3:	and    DWORD PTR [ecx],eax
  427ea5:	ja     0x427e31
  427ea7:	dec    ebp
  427ea8:	xlat   BYTE PTR ds:[ebx]
  427ea9:	out    dx,eax
  427eaa:	mov    dl,0x2
  427eac:	sub    DWORD PTR [edx],ecx
  427eae:	dec    ebp
  427eaf:	xlat   BYTE PTR ds:[ebx]
  427eb0:	and    DWORD PTR [ebp-0x29],ecx
  427eb3:	xchg   DWORD PTR [ebp-0x29],ecx
  427eb6:	xchg   BYTE PTR [ebp-0x29],cl
  427eb9:	enter  0xd74d,0x32
  427ebd:	xchg   bh,ah
  427ebf:	mov    cl,BYTE PTR [ebp+0x4d]
  427ec2:	stos   DWORD PTR es:[edi],eax
  427ec3:	push   eax
  427ec4:	ja     0x427e50
  427ec6:	xor    BYTE PTR [edi-0x76],0xa9
  427eca:	jo     0x427ec7
  427ecc:	out    dx,eax
  427ecd:	lea    edx,[edi-0x6127880]
  427ed3:	mov    ebp,ebp
  427ed5:	xchg   DWORD PTR [ebp-0x67],eax
  427ed8:	jl     0x427f4f
  427eda:	xor    eax,0x8d8d8d35
  427edf:	lea    edi,[ebp+esi*2+0x35]
  427ee3:	inc    ebp
  427ee4:	lea    ecx,[ebp+0x75018d8d]
  427eea:	xor    eax,0xd74d0a71
  427eef:	xor    eax,0x4d2dd74d
  427ef4:	xlat   BYTE PTR ds:[ebx]
  427ef5:	and    eax,0x4d1dd74d
  427efa:	xlat   BYTE PTR ds:[ebx]
  427efb:	adc    eax,0x4d71d74d
  427f00:	xlat   BYTE PTR ds:[ebx]
  427f01:	and    DWORD PTR [ebp-0x29],ecx
  427f04:	out    dx,eax
  427f05:	xchg   cl,bl
  427f07:	mov    eax,0x77804d4d
  427f0c:	out    dx,eax
  427f0d:	push   eax
  427f0e:	jne    0x427f45
  427f10:	out    dx,al
  427f11:	xor    BYTE PTR [ebp+0x35],0x35
  427f15:	dec    edi
  427f16:	push   0x9
  427f18:	prefetcht0 BYTE PTR [ebp+0x75808d8d]
  427f1f:	xor    eax,0x96a4f45
  427f24:	(bad)  
  427f26:	lea    ecx,[ebp+0x35d54d8d]
  427f2c:	and    eax,0x2535d54d
  427f31:	dec    ebp
  427f32:	aad    0x35
  427f34:	and    eax,0x81357580
  427f39:	dec    ebp
  427f3a:	test   DWORD PTR [eax-0x7f11ca8b],0x80ee3575
  427f44:	jne    0x427f7b
  427f46:	out    dx,al
  427f47:	add    DWORD PTR [edi-0x12],esi
  427f4a:	push   eax
  427f4b:	jne    0x427f82
  427f4d:	out    dx,eax
  427f4e:	xor    BYTE PTR [ebp+0x35],0x3d
  427f52:	in     al,dx
  427f53:	jne    0x427f8a
  427f55:	out    dx,al
  427f56:	push   eax
  427f57:	jne    0x427f8e
  427f59:	out    dx,al
  427f5a:	xor    BYTE PTR [ebp+0x35],0xee
  427f5e:	xor    BYTE PTR [ebp+0x35],0xee
  427f62:	xor    BYTE PTR [ecx],0x35
  427f65:	out    dx,al
  427f66:	adc    BYTE PTR [eax+0x26],0x3a
  427f6a:	lea    ecx,[ebp-0x2a7ff180]
  427f70:	xor    eax,0x2ecd80ef
  427f75:	cmp    cl,BYTE PTR [ebp+0x9195f8d]
  427f7b:	jmp    0x7180:0x8d8d3a16
  427f82:	add    BYTE PTR [ecx+0x165aa80],0x95
  427f89:	sbb    DWORD PTR [edx],ecx
  427f8b:	sub    BYTE PTR [esi-0x80],0x90
  427f8f:	in     al,dx
  427f90:	jle    0x427f12
  427f92:	aad    0x35
  427f94:	out    dx,eax
  427f95:	pop    edi
  427f96:	sbb    DWORD PTR [ecx],ecx
  427f98:	in     eax,dx
  427f99:	fstp   TBYTE PTR [edx]
  427f9b:	lea    ecx,[ebp-0x10ca6a80]
  427fa1:	sub    BYTE PTR [esi-0x80],0xa6
  427fa5:	or     BYTE PTR [ebp-0x4d13aebd],0x50
  427fac:	or     al,0xbe
  427fae:	sar    BYTE PTR [edx],1
  427fb0:	lea    ecx,[ebp+0x45357580]
  427fb6:	dec    edi
  427fb7:	push   0x9
  427fb9:	dec    edi
  427fba:	cdq    
  427fbb:	cmp    cl,BYTE PTR [ebp+0x3575808d]
  427fc1:	out    dx,al
  427fc2:	or     ch,0x2e
  427fc5:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  427fcb:	jne    0x428002
  427fcd:	and    DWORD PTR [eax-0x7f11ca8b],eax
  427fd3:	int    0x26
  427fd5:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  427fdb:	jne    0x428012
  427fdd:	and    DWORD PTR [eax-0x7f11ca8b],eax
  427fe3:	int    0x10
  427fe5:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  427feb:	lea    edx,[eax+0x75]
  427fee:	xor    eax,0x35758021
  427ff3:	out    dx,al
  427ff4:	or     ch,0x41
  427ff7:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  427ffd:	lea    edx,[eax+0x75]
  428000:	xor    eax,0x35758021
  428005:	out    dx,al
  428006:	xor    BYTE PTR [ecx],0x35
  428009:	out    dx,al
  42800a:	or     ch,0x82
  42800d:	cmp    cl,BYTE PTR [ebp-0x7daf7f73]
  428013:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  428019:	xor    dl,bh
  42801b:	and    ah,BYTE PTR [edi+ebp*2]
  42801e:	cmp    BYTE PTR [ebx-0x4],dl
  428021:	in     eax,dx
  428022:	add    eax,0xc86b20d
  428027:	mov    dl,0xba
  428029:	sub    edi,edi
  42802b:	std    
  42802c:	push   eax
  42802d:	xor    DWORD PTR ds:0x35757c21,esi
  428033:	out    dx,eax
  428034:	lea    ecx,[ebp+0x75808d8d]
  42803a:	xor    eax,0xd56a4f35
  42803f:	ret    
  428040:	xor    BYTE PTR [ebp+0x35],0x71
  428044:	in     eax,dx
  428045:	xchg   BYTE PTR [ebp-0x2a82272b],cl
  42804b:	push   ebx
  42804c:	jge    0x4280cb
  42804e:	aad    0x23
  428050:	jge    0x428029
  428052:	fmul   DWORD PTR [ebp-0x2b]
  428055:	xor    eax,0x35d54d2d
  42805a:	sub    eax,0x2d35d54d
  42805f:	dec    ebp
  428060:	aad    0x35
  428062:	sub    eax,0x55357580
  428067:	dec    ebp
  428068:	test   esp,0x35d54d39
  42806e:	and    eax,0x2535d54d
  428073:	dec    ebp
  428074:	aad    0x35
  428076:	and    eax,0x81357580
  42807b:	dec    ebp
  42807c:	test   esp,0x35d54d90
  428082:	adc    eax,0x3d357580
  428087:	dec    ebp
  428088:	test   esp,0x3575806f
  42808e:	xor    eax,0x7550f74d
  428093:	xor    eax,0x357580ef
  428098:	and    DWORD PTR [edi+0x6a],ecx
  42809b:	aad    0xa1
  42809d:	xor    BYTE PTR [ebp+0x35],0xee
  4280a1:	jl     0x428070
  4280a3:	test   BYTE PTR [edx],bh
  4280a5:	lea    ecx,[ebp+0x386f24f5]
  4280ab:	xor    BYTE PTR [ebp+0x35],0xef
  4280af:	xor    BYTE PTR [ecx],0x35
  4280b2:	out    dx,al
  4280b3:	adc    BYTE PTR [eax-0x7d],0x3a
  4280b7:	lea    ecx,[ebp+0x757c3a50]
  4280bd:	xor    eax,0x6f24f6ef
  4280c2:	cmp    BYTE PTR [eax-0x7f10ca8b],al
  4280c8:	xor    DWORD PTR ds:0xedfc53ef,esi
  4280ce:	add    eax,0x29bab20d
  4280d3:	mov    dl,0x86
  4280d5:	or     al,0xff
  4280d7:	mov    dl,0x80
  4280d9:	xor    DWORD PTR ds:0xd7b26321,esi
  4280df:	and    eax,DWORD PTR [eax-0x7f11ca8b]
  4280e5:	xor    DWORD PTR ds:0x835080ee,esi
  4280eb:	cmp    cl,BYTE PTR [ebp-0x7f91b273]
  4280f1:	int    0x32
  4280f3:	cmp    cl,BYTE PTR [ebp+0x3d0a4d8d]
  4280f9:	les    ebx,FWORD PTR [edi]
  4280fb:	add    DWORD PTR [edi-0x12],esi
  4280fe:	push   eax
  4280ff:	jne    0x428136
  428101:	and    DWORD PTR [eax-0x7fdeca8b],eax
  428107:	xor    DWORD PTR ds:0xe55080ee,esi
  42810d:	cmp    cl,BYTE PTR [ebp+0x3a30808d]
  428113:	out    dx,eax
  428114:	xor    BYTE PTR [ebp+0x35],0xee
  428118:	or     ch,0x87
  42811b:	cmp    cl,BYTE PTR [ebp-0x7f10b273]
  428121:	xor    DWORD PTR ds:0x865080ee,esi
  428127:	cmp    cl,BYTE PTR [ebp+0x18d808d]
  42812d:	out    dx,al
  42812e:	mov    ds:0xee353180,al
  428133:	adc    BYTE PTR [eax-0x1b],0x3a
  428137:	lea    ecx,[ebp+0x30808d80]
  42813d:	cmp    ch,bh
  42813f:	test   eax,0xfba7b880
  428144:	sub    eax,0x614c748d
  428149:	imul   edi,DWORD PTR [ecx+0x62],0x69
  42814d:	popa   
  42814e:	push   0x6c656548
  428153:	ins    BYTE PTR es:[edi],dx
  428154:	outs   dx,DWORD PTR ds:[esi]
  428155:	ja     0x428157
  428157:	popa   
  428158:	ins    DWORD PTR es:[edi],dx
  428159:	imul   edi,DWORD PTR [edx+0x65],0x676f6e70
  428160:	push   ebp
  428161:	outs   dx,BYTE PTR ds:[esi]
  428162:	bound  esp,QWORD PTR [ebp+0x0]
  428165:	push   0x6572576d
  42816a:	outs   dx,BYTE PTR ds:[esi]
  42816b:	jne    0x4281d1
  42816d:	outs   dx,DWORD PTR ds:[esi]
  42816e:	popa   
  42816f:	push   0x6b637573
  428174:	add    BYTE PTR [ebp+0x6f],cl
  428177:	ins    DWORD PTR es:[edi],dx
  428178:	imul   ecx,DWORD PTR [ebp+0x75],0x6c617367
  42817f:	jo     0x4281e6
  428181:	je     0x428183
  428183:	dec    edx
  428184:	gs jae 0x4281fa
  428187:	ins    BYTE PTR es:[edi],dx
  428188:	outs   dx,DWORD PTR ds:[esi]
  428189:	dec    edi
  42818a:	js     0x4281f1
  42818c:	outs   dx,BYTE PTR ds:[esi]
  42818d:	outs   dx,DWORD PTR ds:[esi]
  42818e:	jb     0x4281f1
  428190:	add    BYTE PTR [edi+0x6f],al
  428193:	ja     0x4281f9
  428195:	dec    ebp
  428196:	imul   esi,DWORD PTR [ebx+0x6f],0x706179
  42819d:	imul   esi,DWORD PTR fs:[eax+0x6f],0x6d6f6d72
  4281a5:	imul   esp,DWORD PTR [ebx+0x6b],0x6c6c4900
  4281ac:	jae    0x42821b
  4281ae:	popa   
  4281af:	fs jns 0x428221
  4281b2:	imul   ebp,DWORD PTR [ecx+0x0],0x6b
  4281b6:	imul   esi,DWORD PTR [edx+0x7a],0x64756261
  4281bd:	bound  esi,QWORD PTR [ebp+0x6d]
  4281c0:	add    BYTE PTR [ebp+0x72],al
  4281c3:	outs   dx,DWORD PTR ds:[si]
  4281c5:	jo     0x428228
  4281c7:	jns    0x42822f
  4281c9:	imul   edi,DWORD PTR [eax+0x0],0x6d736e6f
  4281d0:	jne    0x42823f
  4281d2:	popa   
  4281d3:	gs fs jo 0x42823c
  4281d7:	imul   esi,DWORD PTR [esi+0x79],0x67756800
  4281de:	dec    esp
  4281df:	outs   dx,DWORD PTR ds:[esi]
  4281e0:	jne    0x428246
  4281e2:	push   0x6d6d7069
  4281e7:	add    BYTE PTR [edi+0x6c],al
  4281ea:	outs   dx,DWORD PTR ds:[esi]
  4281eb:	jo     0x428240
  4281ed:	ja     0x42825e
  4281ef:	bound  eax,QWORD PTR [eax]
  4281f1:	jns    0x428262
  4281f3:	pop    ecx
  4281f4:	gs ins BYTE PTR es:[edi],dx
  4281f6:	jo     0x428251
  4281f8:	jne    0x428266
  4281fa:	gs gs jae 0x42825f
  4281fe:	popa   
  4281ff:	add    BYTE PTR [ecx+0x77],ah
  428202:	popa   
  428203:	inc    esi
  428204:	imul   ebp,DWORD PTR [esi+0x65],0x4f706173
  42820b:	outs   dx,BYTE PTR ds:[esi]
  42820c:	je     0x42827d
  42820e:	add    BYTE PTR [ebp+0x73],ah
  428211:	dec    esp
  428212:	imul   ebp,DWORD PTR [esi+0x67],0x68737574
  428219:	ins    BYTE PTR es:[edi],dx
  42821a:	outs   dx,DWORD PTR ds:[esi]
  42821b:	bound  esp,QWORD PTR [ebp+0x0]
  42821e:	push   0x617a6761
  428223:	bound  ebp,QWORD PTR [edi+0x75]
  428226:	jo     0x428228
  428228:	inc    edx
  428229:	outs   dx,DWORD PTR ds:[esi]
  42822a:	jb     0x4282a0
  42822c:	popa   
  42822d:	js     0x42829e
  42822f:	data16 jo 0x428297
  428232:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x776f0077
  42823a:	fs gs popa 
  42823d:	outs   dx,DWORD PTR fs:[esi]
  42823f:	jae    0x4282b9
  428241:	jne    0x428243
  428243:	inc    edi
  428244:	add    BYTE PTR [edi+0x0],ch
  428247:	add    BYTE PTR gs:[ebx+0x0],dh
  42824b:	dec    edx
  42824c:	add    BYTE PTR [ecx+0x0],ah
  42824f:	jbe    0x428251
  428251:	popa   
  428252:	add    BYTE PTR [eax],al
  428254:	add    BYTE PTR [edx+0x0],al
  428257:	popa   
  428258:	add    BYTE PTR [edx+0x0],ah
  42825b:	jne    0x42825d
  42825d:	outs   dx,DWORD PTR ds:[esi]
  42825e:	add    BYTE PTR [ebp+0x0],ch
  428261:	push   0x6d00
  428266:	add    BYTE PTR [edx+0x0],dh
  428269:	popa   
  42826a:	add    BYTE PTR [eax+eax*1+0x74],dh
  42826e:	add    BYTE PTR [ecx+0x0],ah
  428271:	ins    DWORD PTR es:[edi],dx
  428272:	add    BYTE PTR [edi+0x0],ah
  428275:	popa   
  428276:	add    BYTE PTR [ecx+0x0],bh
  428279:	js     0x42827b
  42827b:	imul   eax,DWORD PTR [eax],0x610000
  428281:	ins    DWORD PTR es:[edi],dx
  428282:	add    BYTE PTR [ecx+0x0],ah
  428285:	ins    BYTE PTR es:[edi],dx
  428286:	add    BYTE PTR [edx+0x0],ah
  428289:	outs   dx,DWORD PTR ds:[esi]
  42828a:	add    BYTE PTR [edi+0x0],ch
  42828d:	popa   
  42828e:	add    BYTE PTR [eax+0x0],dh
  428291:	jo     0x428293
  428293:	add    BYTE PTR [eax],al
  428295:	popa   
  428296:	add    BYTE PTR [esi+0x0],dh
  428299:	popa   
  42829a:	add    BYTE PTR [edi+0x0],ah
  42829d:	outs   dx,DWORD PTR ds:[esi]
  42829e:	add    BYTE PTR [ebx+0x0],dh
  4282a1:	push   0x77006f00
  4282a6:	add    BYTE PTR [eax+eax*1+0x65],ch
  4282aa:	add    BYTE PTR [ebp+0x0],dh
  4282ad:	add    BYTE PTR fs:[ebp+0x0],ah
  4282b1:	add    BYTE PTR fs:[eax],al
  4282b4:	add    BYTE PTR [eax+0x0],cl
  4282b7:	popa   
  4282b8:	add    BYTE PTR [edx+0x0],dh
  4282bb:	add    BYTE PTR gs:[edx+0x0],al
  4282bf:	imul   eax,DWORD PTR [eax],0x6b0072
  4282c5:	arpl   WORD PTR [eax],ax
  4282c7:	popa   
  4282c8:	add    BYTE PTR [ebp+0x0],ch
  4282cb:	add    BYTE PTR [eax],al
  4282cd:	imul   eax,DWORD PTR [eax],0x61
  4282d0:	add    BYTE PTR [edi+0x0],dh
  4282d3:	popa   
  4282d4:	add    BYTE PTR [eax+0x0],bh
  4282d7:	outs   dx,DWORD PTR ds:[esi]
  4282d8:	add    BYTE PTR [edi+0x0],ch
  4282db:	je     0x4282dd
  4282dd:	add    BYTE PTR [eax],al
  4282df:	jb     0x4282e1
  4282e1:	jne    0x4282e3
  4282e3:	add    BYTE PTR gs:[ecx+0x0],ah
  4282e7:	ins    BYTE PTR es:[edi],dx
  4282e8:	add    BYTE PTR [eax+eax*1+0x68],ch
  4282ec:	add    BYTE PTR [ebp+0x0],ch
  4282ef:	ins    DWORD PTR es:[edi],dx
  4282f0:	add    BYTE PTR [eax],al
  4282f2:	add    BYTE PTR [edi+0x0],ch
  4282f5:	add    BYTE PTR gs:[eax+0x0],bh
  4282f9:	imul   eax,DWORD PTR [eax],0x650072
  4282ff:	ja     0x428301
  428301:	outs   dx,DWORD PTR ds:[esi]
  428302:	add    BYTE PTR [ebp+0x0],ah
  428305:	popa   
  428306:	add    BYTE PTR [edx+0x0],ah
  428309:	ins    BYTE PTR es:[edi],dx
  42830a:	add    BYTE PTR [ecx+0x0],ch
  42830d:	add    BYTE PTR [eax],al
  42830f:	jne    0x428311
  428311:	ins    DWORD PTR es:[edi],dx
  428312:	add    BYTE PTR [esi+0x0],ch
  428315:	outs   dx,DWORD PTR ds:[esi]
  428316:	add    BYTE PTR [edi+0x0],ah
  428319:	bound  eax,QWORD PTR [eax]
  42831b:	popa   
  42831c:	add    BYTE PTR [esi+0x0],dh
  42831f:	outs   dx,DWORD PTR ds:[esi]
  428320:	add    BYTE PTR [edi+0x0],dh
  428323:	bound  eax,QWORD PTR [eax]
  428325:	add    BYTE PTR gs:[eax+eax*1+0x0],ch
  42832a:	add    BYTE PTR [eax],al
  42832c:	add    bh,dh
  42832e:	sub    al,0x10
  428330:	add    BYTE PTR [esi],bl
  428332:	aaa    
  428333:	adc    BYTE PTR [eax],al
  428335:	and    al,0x42
  428337:	adc    BYTE PTR [eax],al
  428339:	rol    BYTE PTR [eax+edx*1],cl
  42833c:	add    ch,dh
  42833e:	xor    BYTE PTR [eax],dl
  428340:	add    BYTE PTR [esi-0x1affefcf],dh
  428346:	cmp    dl,BYTE PTR [eax]
  428348:	add    BYTE PTR [ebx],dh
  42834a:	ins    BYTE PTR es:[edi],dx
  42834b:	adc    BYTE PTR [eax],al
  42834d:	sub    DWORD PTR [eax+edx*1+0x0],esp
  428351:	push   ecx
  428352:	inc    ecx
  428353:	adc    BYTE PTR [eax],al
  428355:	mov    cl,0x60
  428357:	adc    BYTE PTR [eax],al
  428359:	aas    
  42835a:	or     al,0x10
  42835c:	add    al,bh
  42835e:	and    DWORD PTR [eax],edx
  428360:	add    BYTE PTR [edx+0x37],dl
  428363:	adc    BYTE PTR [eax],al
  428365:	test   eax,0xa3001054
  42836a:	add    DWORD PTR [eax],edx
  42836c:	add    BYTE PTR [edi],ah
  42836e:	push   esp
  42836f:	adc    BYTE PTR [eax],al
  428371:	cmc    
  428372:	push   esi
  428373:	adc    BYTE PTR [eax],al
  428375:	imul   ecx,DWORD PTR [ebx],0x10
  428378:	add    BYTE PTR ds:0x31004283,ch
  42837e:	add    DWORD PTR [edx+0x0],0x35
  428382:	add    DWORD PTR [edx+0x0],0x39
  428386:	add    DWORD PTR [edx+0x0],0x3d
  42838a:	add    DWORD PTR [edx+0x0],0x41
  42838e:	add    DWORD PTR [edx+0x0],0x45
  428392:	add    DWORD PTR [edx+0x0],0x49
  428396:	add    DWORD PTR [edx+0x0],0x4d
  42839a:	add    DWORD PTR [edx+0x0],0x51
  42839e:	add    DWORD PTR [edx+0x0],0x55
  4283a2:	add    DWORD PTR [edx+0x0],0x59
  4283a6:	add    DWORD PTR [edx+0x0],0x5d
  4283aa:	add    DWORD PTR [edx+0x0],0x61
  4283ae:	add    DWORD PTR [edx+0x0],0x65
  4283b2:	add    DWORD PTR [edx+0x0],0x69
  4283b6:	add    DWORD PTR [edx+0x0],0x6d
  4283ba:	add    DWORD PTR [edx+0x0],0x71
  4283be:	add    DWORD PTR [edx+0x0],0x75
  4283c2:	add    DWORD PTR [edx+0x0],0x5
  4283c6:	test   BYTE PTR [edx+0x0],al
  4283c9:	or     DWORD PTR [edx+eax*2+0x42840d00],eax
  4283d0:	add    BYTE PTR [ecx],dl
  4283d2:	test   BYTE PTR [edx+0x0],al
  4283d5:	adc    eax,0x19004284
  4283da:	test   BYTE PTR [edx+0x0],al
  4283dd:	sbb    eax,0x21004284
  4283e2:	test   BYTE PTR [edx+0x0],al
  4283e5:	and    eax,0x29004284
  4283ea:	test   BYTE PTR [edx+0x0],al
  4283ed:	sub    eax,0x31004284
  4283f2:	test   BYTE PTR [edx+0x0],al
  4283f5:	xor    eax,0x39004284
  4283fa:	test   BYTE PTR [edx+0x0],al
  4283fd:	cmp    eax,0x41004284
  428402:	test   BYTE PTR [edx+0x0],al
  428405:	arpl   WORD PTR [eax],si
  428407:	adc    BYTE PTR [eax],al
  428409:	push   ecx
  42840a:	xor    DWORD PTR [eax],edx
  42840c:	add    BYTE PTR [edi+ebx*2+0x10],ch
  428410:	add    BYTE PTR [ebx-0x5ffefc3],bl
  428416:	aaa    
  428417:	adc    BYTE PTR [eax],al
  428419:	(bad)  
  42841a:	pop    esi
  42841b:	adc    BYTE PTR [eax],al
  42841d:	call   0x1040:0xa400106a
  428424:	add    BYTE PTR [esi+0x23],ah
  428427:	adc    BYTE PTR [eax],al
  428429:	xor    DWORD PTR [eax],ebx
  42842b:	adc    BYTE PTR [eax],al
  42842d:	mov    edi,DWORD PTR [edi]
  42842f:	adc    BYTE PTR [eax],al
  428431:	and    BYTE PTR [ecx+0x10],0x0
  428435:	clc    
  428436:	ja     0x428448
  428438:	add    BYTE PTR [eax],dh
  42843a:	xor    dl,BYTE PTR [eax]
  42843c:	add    BYTE PTR [edx+esi*2+0x6bfb0010],ch
  428443:	adc    BYTE PTR [eax],al
  428445:	mov    fs,WORD PTR [ebx+0x10]
  428448:	add    BYTE PTR [ecx+0x6200107e],bl
  42844e:	daa    
  42844f:	adc    BYTE PTR [eax],al
  428451:	mov    edi,0x2e001069
  428456:	sub    eax,0x413c0010
  42845b:	adc    BYTE PTR [eax],al
  42845d:	xor    BYTE PTR [eax],dh
  42845f:	adc    BYTE PTR [eax],al
  428461:	outs   dx,BYTE PTR ds:[esi]
  428462:	dec    edi
  428463:	adc    BYTE PTR [eax],al
  428465:	adc    eax,0xeb001025
  42846a:	bound  edx,QWORD PTR [eax]
  42846c:	add    BYTE PTR [edi],dh
  42846e:	and    dl,BYTE PTR [eax]
  428470:	add    BYTE PTR [ebx+0x1a],bl
  428473:	adc    BYTE PTR [eax],al
  428475:	mov    BYTE PTR [esi+0x10],ch
  428478:	add    BYTE PTR [esi],ah
  42847a:	pusha  
  42847b:	adc    BYTE PTR [eax],al
  42847d:	pop    es
  42847e:	adc    eax,0x1ca50010
  428483:	adc    BYTE PTR [eax],al
  428485:	inc    ebp
  428486:	test   BYTE PTR [edx+0x0],al
  428489:	dec    ecx
  42848a:	test   BYTE PTR [edx+0x0],al
  42848d:	dec    ebp
  42848e:	test   BYTE PTR [edx+0x0],al
  428491:	push   ecx
  428492:	test   BYTE PTR [edx+0x0],al
  428495:	push   ebp
  428496:	test   BYTE PTR [edx+0x0],al
  428499:	pop    ecx
  42849a:	test   BYTE PTR [edx+0x0],al
  42849d:	pop    ebp
  42849e:	test   BYTE PTR [edx+0x0],al
  4284a1:	popa   
  4284a2:	test   BYTE PTR [edx+0x0],al
  4284a5:	test   BYTE PTR gs:[edx+0x0],al
  4284a9:	imul   eax,DWORD PTR [edx+eax*2+0x42846d00],0x42847100
  4284b4:	add    BYTE PTR [ebp-0x7c],dh
  4284b7:	inc    edx
  4284b8:	add    BYTE PTR [ecx-0x7c],bh
  4284bb:	inc    edx
  4284bc:	add    BYTE PTR [ebp-0x7c],bh
  4284bf:	inc    edx
  4284c0:	add    BYTE PTR [ecx-0x5affbd7c],al
  4284c6:	das    
  4284c7:	adc    BYTE PTR [eax],al
  4284c9:	add    bh,BYTE PTR [esi+0x10]
  4284cc:	add    BYTE PTR [ebx],ch
  4284ce:	adc    al,0x10
  4284d0:	add    BYTE PTR ds:0x4b001060,ah
  4284d6:	pop    edx
  4284d7:	adc    BYTE PTR [eax],al
  4284d9:	dec    ecx
  4284da:	jne    0x4284ec
  4284dc:	add    dh,ch
  4284de:	pop    esp
  4284df:	adc    BYTE PTR [eax],al
  4284e1:	push   edx
  4284e2:	cmp    eax,0x529b0010
  4284e7:	adc    BYTE PTR [eax],al
  4284e9:	pop    ss
  4284ea:	cmp    dl,BYTE PTR [eax]
  4284ec:	add    BYTE PTR [ebp-0x64ffef93],cl
  4284f2:	xor    eax,0x158d0010
  4284f7:	adc    BYTE PTR [eax],al
  4284f9:	adc    DWORD PTR [edi+0x10],ebp
  4284fc:	add    BYTE PTR [ecx+0x51],ch
  4284ff:	adc    BYTE PTR [eax],al
  428501:	jmp    0x42850f
  428503:	adc    BYTE PTR [eax],al
  428505:	lds    eax,FWORD PTR [edx+eax*2+0x4284c900]
  42850c:	add    ch,cl
  42850e:	test   BYTE PTR [edx+0x0],al
  428511:	rol    DWORD PTR [edx+eax*2+0x4284d500],1
  428518:	add    cl,bl
  42851a:	test   BYTE PTR [edx+0x0],al
  42851d:	fld    QWORD PTR [edx+eax*2+0x4284e100]
  428524:	add    ch,ah
  428526:	test   BYTE PTR [edx+0x0],al
  428529:	jmp    0xed42c7b2
  42852e:	test   BYTE PTR [edx+0x0],al
  428531:	icebp  
  428532:	test   BYTE PTR [edx+0x0],al
  428535:	cmc    
  428536:	test   BYTE PTR [edx+0x0],al
  428539:	stc    
  42853a:	test   BYTE PTR [edx+0x0],al
  42853d:	std    
  42853e:	test   BYTE PTR [edx+0x0],al
  428541:	add    DWORD PTR [ebp+0x45d70042],eax
  428547:	adc    BYTE PTR [eax],al
  428549:	xlat   BYTE PTR ds:[ebx]
  42854a:	pusha  
  42854b:	adc    BYTE PTR [eax],al
  42854d:	lea    ebp,[eax+edx*1+0x0]
  428551:	hlt    
  428552:	add    BYTE PTR [eax],dl
  428554:	add    BYTE PTR [esp+esi*2],dl
  428557:	adc    BYTE PTR [eax],al
  428559:	out    0x44,al
  42855b:	adc    BYTE PTR [eax],al
  42855d:	dec    esi
  42855e:	bound  edx,QWORD PTR [eax]
  428560:	add    BYTE PTR [edi+ebp*2],ch
  428563:	adc    BYTE PTR [eax],al
  428565:	cmp    ebx,DWORD PTR [ebx]
  428567:	adc    BYTE PTR [eax],al
  428569:	inc    ebp
  42856a:	pop    ecx
  42856b:	adc    BYTE PTR [eax],al
  42856d:	imul   BYTE PTR [ecx+0x10]
  428570:	add    BYTE PTR [esi],ah
  428572:	arpl   WORD PTR [eax],dx
  428574:	add    BYTE PTR [ebp-0x4fffefee],bh
  42857a:	sbb    edx,DWORD PTR [eax]
  42857c:	add    BYTE PTR [ebx],ah
  42857e:	adc    BYTE PTR ds:[eax],al
  428581:	xchg   ebx,eax
  428582:	push   ecx
  428583:	adc    BYTE PTR [eax],al
  428585:	inc    ebp
  428586:	test   DWORD PTR [edx+0x0],eax
  428589:	dec    ecx
  42858a:	test   DWORD PTR [edx+0x0],eax
  42858d:	dec    ebp
  42858e:	test   DWORD PTR [edx+0x0],eax
  428591:	push   ecx
  428592:	test   DWORD PTR [edx+0x0],eax
  428595:	push   ebp
  428596:	test   DWORD PTR [edx+0x0],eax
  428599:	pop    ecx
  42859a:	test   DWORD PTR [edx+0x0],eax
  42859d:	pop    ebp
  42859e:	test   DWORD PTR [edx+0x0],eax
  4285a1:	popa   
  4285a2:	test   DWORD PTR [edx+0x0],eax
  4285a5:	test   DWORD PTR gs:[edx+0x0],eax
  4285a9:	imul   eax,DWORD PTR [ebp-0x7a92ffbe],0x85710042
  4285b3:	inc    edx
  4285b4:	add    BYTE PTR [ebp-0x7b],dh
  4285b7:	inc    edx
  4285b8:	add    BYTE PTR [ecx-0x7b],bh
  4285bb:	inc    edx
  4285bc:	add    BYTE PTR [ebp-0x7b],bh
  4285bf:	inc    edx
  4285c0:	add    BYTE PTR [ecx+0x4285],al
	...
  4285d2:	add    BYTE PTR [eax],al
  4285d4:	sub    ch,dl
  4285d6:	mov    dh,0x4f
  4285d8:	add    BYTE PTR [eax],al
  4285da:	add    BYTE PTR [eax],al
  4285dc:	inc    eax
  4285dd:	xchg   esi,eax
  4285de:	add    al,BYTE PTR [eax]
  4285e0:	add    DWORD PTR [eax],eax
  4285e2:	add    BYTE PTR [eax],al
  4285e4:	add    DWORD PTR [eax],eax
  4285e6:	add    BYTE PTR [eax],al
  4285e8:	add    DWORD PTR [eax],eax
  4285ea:	add    BYTE PTR [eax],al
  4285ec:	adc    BYTE PTR [esi-0x69cffffe],dl
  4285f2:	add    al,BYTE PTR [eax]
  4285f4:	and    BYTE PTR [esi+0x2],dl
  4285fa:	add    BYTE PTR [eax],al
  4285fc:	add    BYTE PTR [eax],al
  4285fe:	add    BYTE PTR [eax],al
  428600:	adc    BYTE PTR [ecx+0x2],cl
  428606:	add    BYTE PTR [eax],al
  428608:	mov    DWORD PTR cs:[edx],eax
  42860b:	add    BYTE PTR [edx-0x77],al
  42860e:	add    al,BYTE PTR [eax]
  428610:	pop    eax
  428611:	mov    DWORD PTR [edx],eax
  428613:	add    BYTE PTR [eax-0x77],ch
  428616:	add    al,BYTE PTR [eax]
  428618:	jbe    0x4285a3
  42861a:	add    al,BYTE PTR [eax]
  42861c:	mov    cs,WORD PTR [ecx-0x7665fffe]
  428622:	add    al,BYTE PTR [eax]
  428624:	mov    al,0x89
  428626:	add    al,BYTE PTR [eax]
  428628:	mov    esp,0xce000289
  42862d:	mov    DWORD PTR [edx],eax
  42862f:	add    dl,bl
  428631:	mov    DWORD PTR [edx],eax
  428633:	add    dl,ch
  428635:	mov    DWORD PTR [edx],eax
  428637:	add    dl,bh
  428639:	mov    DWORD PTR [edx],eax
  42863b:	add    BYTE PTR [esi],al
  42863d:	mov    al,BYTE PTR [edx]
  42863f:	add    BYTE PTR [edx+ecx*4],dl
  428642:	add    al,BYTE PTR [eax]
  428644:	and    BYTE PTR [edx-0x75d3fffe],cl
  42864a:	add    al,BYTE PTR [eax]
  42864c:	mov    al,BYTE PTR ss:[edx]
  42864f:	add    BYTE PTR [edx-0x76],cl
  428652:	add    al,BYTE PTR [eax]
  428654:	pop    esp
  428655:	mov    al,BYTE PTR [edx]
  428657:	add    BYTE PTR [esi-0x76],ah
  42865a:	add    al,BYTE PTR [eax]
  42865c:	jo     0x4285e8
  42865e:	add    al,BYTE PTR [eax]
  428660:	or     BYTE PTR [edx-0x756ffffe],0x2
  428667:	add    BYTE PTR [edx-0x4dfffd76],ah
  42866d:	mov    al,BYTE PTR [edx]
  42866f:	add    al,al
  428671:	mov    al,BYTE PTR [edx]
  428673:	add    ah,cl
  428675:	mov    al,BYTE PTR [edx]
  428677:	add    dl,bl
  428679:	mov    al,BYTE PTR [edx]
  42867b:	add    dl,ch
  42867d:	mov    al,BYTE PTR [edx]
  42867f:	add    dl,bh
  428681:	mov    al,BYTE PTR [edx]
  428683:	add    BYTE PTR [eax],cl
  428685:	mov    eax,DWORD PTR [edx]
  428687:	add    BYTE PTR [eax],ah
  428689:	mov    eax,DWORD PTR [edx]
  42868b:	add    BYTE PTR [edx],ch
  42868d:	mov    eax,DWORD PTR [edx]
  42868f:	add    BYTE PTR [edx],bh
  428691:	mov    eax,DWORD PTR [edx]
  428693:	add    BYTE PTR [edx-0x75],dl
  428696:	add    al,BYTE PTR [eax]
  428698:	mov    eax,DWORD PTR fs:[edx]
  42869b:	add    BYTE PTR [ebx+ecx*4+0x2],dh
  42869f:	add    BYTE PTR [ebx+ecx*4-0x7471fffe],al
  4286a6:	add    al,BYTE PTR [eax]
  4286a8:	pushf  
  4286a9:	mov    eax,DWORD PTR [edx]
  4286ab:	add    BYTE PTR [ebx+ecx*4-0x7447fffe],ch
  4286b2:	add    al,BYTE PTR [eax]
	...
  4286bc:	loop   0x428649
  4286be:	add    al,BYTE PTR [eax]
  4286c0:	lock mov eax,DWORD PTR [edx]
  4286c3:	add    BYTE PTR [esp+ecx*4],al
  4286c6:	add    al,BYTE PTR [eax]
  4286c8:	adc    cl,BYTE PTR [edx+eax*1+0x28c2800]
  4286cf:	add    BYTE PTR [edx],dh
  4286d1:	mov    WORD PTR [edx],es
  4286d3:	add    BYTE PTR [esi],bh
  4286d5:	mov    WORD PTR [edx],es
  4286d7:	add    BYTE PTR [esi-0x74],cl
  4286da:	add    al,BYTE PTR [eax]
  4286dc:	pusha  
  4286dd:	mov    WORD PTR [edx],es
  4286df:	add    BYTE PTR [esi-0x74],bh
  4286e2:	add    al,BYTE PTR [eax]
  4286e4:	nop
  4286e5:	mov    WORD PTR [edx],es
  4286e7:	add    BYTE PTR [esi-0x53fffd74],bl
  4286ed:	mov    WORD PTR [edx],es
  4286ef:	add    al,al
  4286f1:	mov    WORD PTR [edx],es
  4286f3:	add    ah,dl
  4286f5:	mov    WORD PTR [edx],es
  4286f7:	add    ah,ah
  4286f9:	mov    WORD PTR [edx],es
  4286fb:	add    dl,dh
  4286fd:	mov    WORD PTR [edx],es
  4286ff:	add    BYTE PTR [eax],al
  428701:	lea    eax,[edx]
  428703:	add    BYTE PTR [edx],dl
  428705:	lea    eax,[edx]
  428707:	add    BYTE PTR [ecx*4-0x72cbfffe],ah
  42870e:	add    al,BYTE PTR [eax]
  428710:	inc    esi
  428711:	lea    eax,[edx]
  428713:	add    BYTE PTR [edx-0x73],dl
  428716:	add    al,BYTE PTR [eax]
  428718:	lea    ax,[edx]
  42871b:	add    BYTE PTR [edx-0x73],bh
  42871e:	add    al,BYTE PTR [eax]
  428720:	mov    cl,BYTE PTR [ebp-0x7269fffe]
  428726:	add    al,BYTE PTR [eax]
  428728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428729:	lea    eax,[edx]
  42872b:	add    BYTE PTR [edx-0x3dfffd73],dh
  428731:	lea    eax,[edx]
  428733:	add    al,bl
  428735:	lea    eax,[edx]
  428737:	add    ah,ah
  428739:	lea    eax,[edx]
  42873b:	add    al,dh
  42873d:	lea    eax,[edx]
  42873f:	add    ah,bh
  428741:	lea    eax,[edx]
  428743:	add    BYTE PTR [edx],dl
  428745:	mov    es,WORD PTR [edx]
  428747:	add    BYTE PTR [esi+ecx*4],ah
  42874a:	add    al,BYTE PTR [eax]
  42874c:	xor    al,0x8e
  42874e:	add    al,BYTE PTR [eax]
  428750:	inc    edx
  428751:	mov    es,WORD PTR [edx]
  428753:	add    BYTE PTR [esi-0x72],dl
  428756:	add    al,BYTE PTR [eax]
  428758:	mov    es,WORD PTR fs:[edx]
  42875b:	add    BYTE PTR [eax-0x72],bh
  42875e:	add    al,BYTE PTR [eax]
  428760:	mov    cl,BYTE PTR [esi-0x7167fffe]
  428766:	add    al,BYTE PTR [eax]
  428768:	mov    ah,0x8e
  42876a:	add    al,BYTE PTR [eax]
  42876c:	(bad)  
  42876d:	mov    es,WORD PTR [edx]
  42876f:	add    dh,dl
  428771:	mov    es,WORD PTR [edx]
  428773:	add    al,dh
  428775:	mov    es,WORD PTR [edx]
  428777:	add    BYTE PTR [esi],al
  428779:	pop    DWORD PTR [edx]
  42877b:	add    BYTE PTR [edi+ecx*4],dl
  42877e:	add    al,BYTE PTR [eax]
  428780:	and    cl,BYTE PTR [edi-0x70c7fffe]
  428786:	add    al,BYTE PTR [eax]
  428788:	push   esp
  428789:	pop    DWORD PTR [edx]
  42878b:	add    BYTE PTR [edx-0x71],ah
  42878e:	add    al,BYTE PTR [eax]
  428790:	je     0x428721
  428792:	add    al,BYTE PTR [eax]
  428794:	mov    BYTE PTR [edi-0x7061fffe],cl
  42879a:	add    al,BYTE PTR [eax]
  42879c:	mov    ah,0x8f
  42879e:	add    al,BYTE PTR [eax]
  4287a0:	retf   0x28f
  4287a3:	add    al,bl
  4287a5:	pop    DWORD PTR [edx]
  4287a7:	add    ah,ch
  4287a9:	pop    DWORD PTR [edx]
  4287ab:	add    ah,bh
  4287ad:	pop    DWORD PTR [edx]
  4287af:	add    BYTE PTR [eax],cl
  4287b1:	nop
  4287b2:	add    al,BYTE PTR [eax]
  4287b4:	sbb    dl,BYTE PTR [eax-0x6fd5fffe]
  4287ba:	add    al,BYTE PTR [eax]
  4287bc:	cmp    al,0x90
  4287be:	add    al,BYTE PTR [eax]
  4287c0:	dec    edx
  4287c1:	nop
  4287c2:	add    al,BYTE PTR [eax]
  4287c4:	pop    esp
  4287c5:	nop
  4287c6:	add    al,BYTE PTR [eax]
  4287c8:	jb     0x42875a
  4287ca:	add    al,BYTE PTR [eax]
  4287cc:	mov    ss,WORD PTR [eax-0x6f5bfffe]
  4287d2:	add    al,BYTE PTR [eax]
  4287d4:	mov    dh,0x90
  4287d6:	add    al,BYTE PTR [eax]
  4287d8:	enter  0x290,0x0
  4287dc:	ficom  DWORD PTR [eax-0x6f11fffe]
  4287e2:	add    al,BYTE PTR [eax]
  4287e4:	cld    
  4287e5:	nop
  4287e6:	add    al,BYTE PTR [eax]
  4287e8:	or     al,0x91
  4287ea:	add    al,BYTE PTR [eax]
  4287ec:	sbb    BYTE PTR [ecx-0x6ed9fffe],dl
  4287f2:	add    al,BYTE PTR [eax]
  4287f4:	ds xchg ecx,eax
  4287f6:	add    al,BYTE PTR [eax]
  4287f8:	dec    esi
  4287f9:	xchg   ecx,eax
  4287fa:	add    al,BYTE PTR [eax]
  4287fc:	pop    esp
  4287fd:	xchg   ecx,eax
  4287fe:	add    al,BYTE PTR [eax]
  428800:	jo     0x428793
  428802:	add    al,BYTE PTR [eax]
  428804:	jle    0x428797
  428806:	add    al,BYTE PTR [eax]
  428808:	mov    dl,BYTE PTR [ecx-0x6e63fffe]
  42880e:	add    al,BYTE PTR [eax]
  428810:	scas   al,BYTE PTR es:[edi]
  428811:	xchg   ecx,eax
  428812:	add    al,BYTE PTR [eax]
  428814:	rcl    BYTE PTR [ecx-0x6e29fffe],0x2
  42881b:	add    dl,ah
  42881d:	xchg   ecx,eax
  42881e:	add    al,BYTE PTR [eax]
  428820:	lock xchg ecx,eax
  428822:	add    al,BYTE PTR [eax]
  428824:	cld    
  428825:	xchg   ecx,eax
  428826:	add    al,BYTE PTR [eax]
  428828:	or     dl,BYTE PTR [edx-0x6de1fffe]
  42882e:	add    al,BYTE PTR [eax]
  428830:	sub    dl,BYTE PTR [edx-0x6dc1fffe]
  428836:	add    al,BYTE PTR [eax]
  428838:	dec    edx
  428839:	xchg   edx,eax
  42883a:	add    al,BYTE PTR [eax]
  42883c:	pop    edx
  42883d:	xchg   edx,eax
  42883e:	add    al,BYTE PTR [eax]
  428840:	push   0x7e000292
  428845:	xchg   edx,eax
  428846:	add    al,BYTE PTR [eax]
  428848:	add    BYTE PTR [eax],al
  42884a:	add    BYTE PTR [eax],al
  42884c:	xchg   esi,eax
  42884d:	xchg   edx,eax
  42884e:	add    al,BYTE PTR [eax]
  428850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428851:	xchg   edx,eax
  428852:	add    al,BYTE PTR [eax]
  428854:	mov    dh,0x92
  428856:	add    al,BYTE PTR [eax]
  428858:	into   
  428859:	xchg   edx,eax
  42885a:	add    al,BYTE PTR [eax]
  42885c:	loopne 0x4287f0
  42885e:	add    al,BYTE PTR [eax]
  428860:	repnz xchg edx,eax
  428862:	add    al,BYTE PTR [eax]
  428864:	or     al,0x93
  428866:	add    al,BYTE PTR [eax]
  428868:	sbb    al,0x93
  42886a:	add    al,BYTE PTR [eax]
  42886c:	es xchg ebx,eax
  42886e:	add    al,BYTE PTR [eax]
  428870:	cmp    BYTE PTR [ebx-0x6cb7fffe],dl
  428876:	add    al,BYTE PTR [eax]
  428878:	pusha  
  428879:	xchg   ebx,eax
  42887a:	add    al,BYTE PTR [eax]
  42887c:	jo     0x428811
  42887e:	add    al,BYTE PTR [eax]
  428880:	adc    BYTE PTR [ebx-0x6c6dfffe],0x2
  428887:	add    BYTE PTR [ebx+edx*4-0x6c4ffffe],ah
  42888e:	add    al,BYTE PTR [eax]
  428890:	mov    esp,0xd2000293
  428895:	xchg   ebx,eax
  428896:	add    al,BYTE PTR [eax]
  428898:	out    0x93,al
  42889a:	add    al,BYTE PTR [eax]
  42889c:	cld    
  42889d:	xchg   ebx,eax
  42889e:	add    al,BYTE PTR [eax]
  4288a0:	adc    BYTE PTR [edx+eax*1+0x2942600],dl
  4288a7:	add    BYTE PTR [eax],bh
  4288a9:	xchg   esp,eax
  4288aa:	add    al,BYTE PTR [eax]
  4288ac:	inc    esp
  4288ad:	xchg   esp,eax
  4288ae:	add    al,BYTE PTR [eax]
  4288b0:	push   esp
  4288b1:	xchg   esp,eax
  4288b2:	add    al,BYTE PTR [eax]
  4288b4:	jb     0x42884a
  4288b6:	add    al,BYTE PTR [eax]
  4288b8:	mov    WORD PTR [edx+eax*1+0x2949a00],ss
  4288bf:	add    BYTE PTR [esi-0x39fffd6c],ch
  4288c5:	xchg   esp,eax
  4288c6:	add    al,BYTE PTR [eax]
  4288c8:	ficom  DWORD PTR [edx+eax*1+0x294ea00]
  4288cf:	add    BYTE PTR [eax],al
  4288d1:	xchg   ebp,eax
  4288d2:	add    al,BYTE PTR [eax]
  4288d4:	adc    dl,BYTE PTR [ebp-0x6adffffe]
  4288da:	add    al,BYTE PTR [eax]
  4288dc:	xor    dl,BYTE PTR [ebp-0x6abffffe]
  4288e2:	add    al,BYTE PTR [eax]
  4288e4:	push   eax
  4288e5:	xchg   ebp,eax
  4288e6:	add    al,BYTE PTR [eax]
  4288e8:	xchg   bp,ax
  4288ea:	add    al,BYTE PTR [eax]
  4288ec:	jl     0x428883
  4288ee:	add    al,BYTE PTR [eax]
  4288f0:	mov    WORD PTR [ebp-0x6a5dfffe],ss
  4288f6:	add    al,BYTE PTR [eax]
  4288f8:	lods   al,BYTE PTR ds:[esi]
  4288f9:	xchg   ebp,eax
  4288fa:	add    al,BYTE PTR [eax]
  4288fc:	mov    esi,0xce000295
  428901:	xchg   ebp,eax
  428902:	add    al,BYTE PTR [eax]
  428904:	fcom   QWORD PTR [ebp-0x6a0dfffe]
  42890a:	add    al,BYTE PTR [eax]
  42890c:	add    BYTE PTR [eax],al
  42890e:	add    BYTE PTR [eax],al
  428910:	xchg   edx,eax
  428911:	add    edx,DWORD PTR [edx+0x74]
  428914:	ins    BYTE PTR es:[edi],dx
  428915:	dec    ecx
  428916:	outs   dx,BYTE PTR ds:[esi]
  428917:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  42891f:	jb     0x42898a
  428921:	outs   dx,BYTE PTR ds:[esi]
  428922:	add    BYTE PTR [bp+0x74],ch
  428926:	fs ins BYTE PTR es:[edi],dx
  428928:	ins    BYTE PTR es:[edi],dx
  428929:	cs fs ins BYTE PTR es:[edi],dx
  42892c:	ins    BYTE PTR es:[edi],dx
  42892d:	add    BYTE PTR [ecx+0x74654701],dl
  428933:	push   esi
  428934:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  42893b:	dec    edi
  42893c:	jb     0x4289a5
  42893e:	inc    ebp
  42893f:	js     0x428941
  428941:	add    BYTE PTR [edx+0x74654701],cl
  428947:	push   esp
  428948:	gs js  0x4289bf
  42894b:	inc    ebp
  42894c:	js     0x4289c2
  42894e:	outs   dx,BYTE PTR gs:[esi]
  428950:	je     0x4289a2
  428952:	outs   dx,DWORD PTR ds:[esi]
  428953:	imul   ebp,DWORD PTR [esi+0x74],0x1fb0057
  42895a:	push   ebx
  42895b:	gs je  0x4289b2
  42895e:	gs js  0x4289d5
  428961:	inc    ecx
  428962:	ins    BYTE PTR es:[edi],dx
  428963:	imul   esp,DWORD PTR [edi+0x6e],0xd50000
  42896a:	inc    ebp
  42896b:	js     0x4289e1
  42896d:	push   esp
  42896e:	gs js  0x4289e5
  428971:	dec    edi
  428972:	jne    0x4289e8
  428974:	push   edi
  428975:	add    BYTE PTR [eax],dl
  428977:	add    dl,BYTE PTR [edx+esi*2+0x61]
  42897b:	outs   dx,BYTE PTR ds:[esi]
  42897c:	jae    0x4289ea
  42897e:	popa   
  42897f:	je     0x4289e6
  428981:	inc    ebx
  428982:	push   0x65737261
  428987:	je     0x4289d2
  428989:	outs   dx,BYTE PTR ds:[esi]
  42898a:	outs   dx,WORD PTR ds:[esi]
  42898c:	add    BYTE PTR [eax],al
  42898e:	pop    ss
  42898f:	add    dl,BYTE PTR [edi+0x69]
  428992:	fs outs dx,BYTE PTR gs:[esi]
  428995:	push   eax
  428996:	popa   
  428997:	je     0x428a01
  428999:	add    BYTE PTR [ebp+0x65724300],cl
  42899f:	popa   
  4289a0:	je     0x428a07
  4289a2:	inc    ebx
  4289a3:	outs   dx,DWORD PTR ds:[esi]
  4289a4:	ins    DWORD PTR es:[edi],dx
  4289a5:	jo     0x428a08
  4289a7:	je     0x428a12
  4289a9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x44]
  4289ad:	inc    ebx
  4289ae:	add    BYTE PTR [eax],al
  4289b0:	mov    bh,0x1
  4289b2:	push   eax
  4289b3:	outs   dx,DWORD PTR ds:[esi]
  4289b4:	ins    BYTE PTR es:[edi],dx
  4289b5:	jns    0x428a23
  4289b7:	imul   ebp,DWORD PTR [esi+0x65],0x1940000
  4289be:	inc    edi
  4289bf:	gs je  0x428a19
  4289c2:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4289c9:	addr16 inc ebp
  4289cb:	js     0x4289cd
  4289cd:	add    cl,ch
  4289cf:	add    DWORD PTR [ebx+0x65],edx
  4289d2:	je     0x428a20
  4289d4:	popa   
  4289d5:	jns    0x428a46
  4289d7:	jne    0x428a4d
  4289d9:	add    bl,dl
  4289db:	add    DWORD PTR [ebx+0x65],edx
  4289de:	je     0x428a21
  4289e0:	bound  ebp,QWORD PTR [edi+0x72]
  4289e3:	je     0x428a35
  4289e5:	jb     0x428a56
  4289e7:	arpl   WORD PTR [eax],ax
  4289e9:	add    BYTE PTR [edx],cl
  4289eb:	add    dl,BYTE PTR [ebx+0x74]
  4289ee:	jb     0x428a55
  4289f0:	je     0x428a55
  4289f2:	push   0x69424944
  4289f7:	je     0x428a6c
  4289f9:	add    BYTE PTR [ebx+0x1],al
  4289fc:	inc    edi
  4289fd:	gs je  0x428a44
  428a00:	dec    ecx
  428a01:	inc    edx
  428a02:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x655301eb
  428a0a:	je     0x428a59
  428a0c:	popa   
  428a0d:	jo     0x428a5c
  428a0f:	outs   dx,DWORD PTR ds:[esi]
  428a10:	fs add BYTE PTR gs:[eax],al
  428a14:	daa    
  428a15:	add    DWORD PTR [edi+0x65],eax
  428a18:	je     0x428a5c
  428a1a:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  428a1e:	add    BYTE PTR gs:[ebx+0x66664f01],ah
  428a25:	jae    0x428a8c
  428a27:	je     0x428a7b
  428a29:	outs   dx,BYTE PTR ds:[si]
  428a2b:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  428a32:	jo     0x428aa7
  428a34:	gs add ah,cl
  428a37:	add    DWORD PTR [ebx+0x63],edx
  428a3a:	popa   
  428a3b:	ins    BYTE PTR es:[edi],dx
  428a3c:	gs push edi
  428a3e:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428a45:	je     0x428a8c
  428a47:	js     0x428a49
  428a49:	add    BYTE PTR [edx+0x1],bh
  428a4c:	inc    edi
  428a4d:	gs je  0x428aa3
  428a50:	je     0x428ac1
  428a52:	arpl   WORD PTR [ebx+0x4f],bp
  428a55:	bound  ebp,QWORD PTR [edx+0x65]
  428a58:	arpl   WORD PTR [eax+eax*1+0x0],si
  428a5c:	call   0x5465:0x6e694c01
  428a63:	outs   dx,DWORD PTR ds:[esi]
  428a64:	add    BYTE PTR [eax],al
  428a66:	mov    dh,0x1
  428a68:	push   eax
  428a69:	outs   dx,DWORD PTR ds:[esi]
  428a6a:	ins    BYTE PTR es:[edi],dx
  428a6b:	jns    0x428ad4
  428a6d:	outs   dx,DWORD PTR ds:[esi]
  428a6e:	outs   dx,BYTE PTR ds:[esi]
  428a6f:	add    BYTE PTR [esi+0x1],bh
  428a72:	inc    edi
  428a73:	gs je  0x428aca
  428a76:	gs js  0x428aed
  428a79:	inc    ecx
  428a7a:	ins    BYTE PTR es:[edi],dx
  428a7b:	imul   esp,DWORD PTR [edi+0x6e],0x18c0000
  428a82:	inc    edi
  428a83:	gs je  0x428ada
  428a86:	gs js  0x428afd
  428a89:	inc    esi
  428a8a:	popa   
  428a8b:	arpl   WORD PTR [ebp+0x57],sp
  428a8e:	add    BYTE PTR [eax],al
  428a90:	mov    ebx,0x61655201
  428a95:	ins    BYTE PTR es:[edi],dx
  428a96:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428a9d:	je     0x428b13
  428a9f:	add    BYTE PTR gs:[eax],al
  428aa2:	mov    DWORD PTR [ecx],0x69736552
  428aa8:	jp     0x428b0f
  428aaa:	push   eax
  428aab:	popa   
  428aac:	ins    BYTE PTR es:[edi],dx
  428aad:	gs je  0x428b24
  428ab0:	add    BYTE PTR gs:[ecx+0x6d6f4300],al
  428ab7:	bound  ebp,QWORD PTR [ecx+0x6e]
  428aba:	gs push edx
  428abc:	outs   dx,BYTE PTR ds:[si]
  428abe:	add    BYTE PTR [eax],al
  428ac0:	push   cs
  428ac1:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  428ac5:	je     0x428b16
  428ac7:	jne    0x428b3d
  428ac9:	inc    ecx
  428aca:	add    BYTE PTR [eax],al
  428acc:	test   DWORD PTR [ecx],0x52746553
  428ad2:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428ad7:	outs   dx,BYTE PTR ds:[esi]
  428ad8:	add    BYTE PTR [eax],al
  428ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428adb:	add    BYTE PTR [ebx+0x72],al
  428ade:	gs popa 
  428ae0:	je     0x428b47
  428ae2:	push   eax
  428ae3:	popa   
  428ae4:	ins    BYTE PTR es:[edi],dx
  428ae5:	gs je  0x428b5c
  428ae8:	add    BYTE PTR gs:[ecx+eax*1],ah
  428aec:	inc    edi
  428aed:	gs je  0x428b32
  428af0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428af8:	jae    0x428afa
  428afa:	mov    DWORD PTR [eax],0x6d756e45
  428b00:	inc    esi
  428b01:	outs   dx,DWORD PTR ds:[esi]
  428b02:	outs   dx,BYTE PTR ds:[esi]
  428b03:	je     0x428b78
  428b05:	push   edi
  428b06:	add    BYTE PTR [eax],al
  428b08:	lods   al,BYTE PTR ds:[esi]
  428b09:	add    BYTE PTR [ebx+0x72],al
  428b0c:	gs popa 
  428b0e:	je     0x428b75
  428b10:	push   edx
  428b11:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428b16:	outs   dx,BYTE PTR ds:[esi]
  428b17:	dec    ecx
  428b18:	outs   dx,BYTE PTR ds:[esi]
  428b19:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  428b21:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428b25:	gs inc esp
  428b27:	inc    esp
  428b28:	inc    ecx
  428b29:	add    ch,dl
  428b2b:	add    DWORD PTR [ebx+0x65],edx
  428b2e:	je     0x428b72
  428b30:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428b38:	jae    0x428b3a
  428b3a:	mov    BYTE PTR [eax],al
  428b3c:	inc    ebx
  428b3d:	jb     0x428ba4
  428b3f:	popa   
  428b40:	je     0x428ba7
  428b42:	inc    edx
  428b43:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  428b4b:	imul   esi,DWORD PTR [edx+0x65],0x7463
  428b52:	mov    es,WORD PTR [ecx]
  428b54:	inc    edi
  428b55:	gs je  0x428bac
  428b58:	gs js  0x428bcf
  428b5b:	dec    ebp
  428b5c:	gs je  0x428bd1
  428b5f:	imul   esp,DWORD PTR [ebx+0x73],0x1da0057
  428b66:	push   ebx
  428b67:	gs je  0x428bac
  428b6a:	jb     0x428be1
  428b6c:	jae    0x428bd6
  428b6e:	dec    edi
  428b6f:	jb     0x428bd8
  428b71:	inc    ebp
  428b72:	js     0x428b74
  428b74:	mov    esp,0x63655201
  428b79:	je     0x428bc4
  428b7b:	outs   dx,BYTE PTR ds:[esi]
  428b7c:	push   edx
  428b7d:	imul   ebp,DWORD PTR gs:[bx+0x6e],0xcd0000
  428b86:	inc    ebp
  428b87:	jae    0x428bec
  428b89:	popa   
  428b8a:	jo     0x428bf1
  428b8c:	add    BYTE PTR [eax],al
  428b8e:	scas   eax,DWORD PTR es:[edi]
  428b8f:	add    DWORD PTR [eax+0x6f],edx
  428b92:	ins    BYTE PTR es:[edi],dx
  428b93:	jns    0x428bd7
  428b95:	gs jp  0x428c01
  428b98:	gs jb  0x428b9b
  428b9b:	add    BYTE PTR [ebx+0x65724300],ch
  428ba1:	popa   
  428ba2:	je     0x428c09
  428ba4:	push   edx
  428ba5:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428baa:	outs   dx,BYTE PTR ds:[esi]
  428bab:	add    BYTE PTR [edi+0x65724300],cl
  428bb1:	popa   
  428bb2:	je     0x428c19
  428bb4:	inc    esp
  428bb5:	inc    ebx
  428bb6:	push   edi
  428bb7:	add    BYTE PTR ds:0x74654701,bh
  428bbd:	inc    ebx
  428bbe:	jne    0x428c32
  428bc0:	jb     0x428c27
  428bc2:	outs   dx,BYTE PTR ds:[esi]
  428bc3:	je     0x428c14
  428bc5:	bound  ebp,QWORD PTR [edx+0x65]
  428bc8:	arpl   WORD PTR [eax+eax*1+0x0],si
  428bcc:	inc    edi
  428bcd:	inc    esp
  428bce:	dec    ecx
  428bcf:	xor    esi,DWORD PTR [edx]
  428bd1:	cs fs ins BYTE PTR es:[edi],dx
  428bd4:	ins    BYTE PTR es:[edi],dx
  428bd5:	add    BYTE PTR [ebx+0x6f],ah
  428bd8:	outs   dx,BYTE PTR ds:[esi]
  428bd9:	jae    0x428c4a
  428bdb:	ins    BYTE PTR es:[edi],dx
  428bdc:	gs cs fs ins BYTE PTR es:[edi],dx
  428be0:	ins    BYTE PTR es:[edi],dx
  428be1:	add    BYTE PTR [ecx],bh
  428be3:	add    BYTE PTR [ebx+0x68],al
  428be6:	popa   
  428be7:	jb     0x428c3e
  428be9:	jo     0x428c5b
  428beb:	gs jb  0x428c45
  428bee:	add    BYTE PTR [eax],al
  428bf0:	dec    esi
  428bf1:	add    dl,BYTE PTR [ebx+0x65]
  428bf4:	je     0x428c43
  428bf6:	outs   dx,BYTE PTR gs:[esi]
  428bf8:	jne    0x428c43
  428bfa:	je     0x428c61
  428bfc:	ins    DWORD PTR es:[edi],dx
  428bfd:	dec    ecx
  428bfe:	outs   dx,BYTE PTR ds:[esi]
  428bff:	outs   dx,WORD PTR ds:[esi]
  428c01:	push   edi
  428c02:	add    BYTE PTR [eax],al
  428c04:	scas   al,BYTE PTR es:[edi]
  428c05:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428c09:	fs inc ebx
  428c0b:	jne    0x428c7f
  428c0d:	jae    0x428c7e
  428c0f:	jb     0x428c68
  428c11:	add    BYTE PTR [eax+0x0],bl
  428c14:	inc    ebx
  428c15:	jb     0x428c7c
  428c17:	popa   
  428c18:	je     0x428c7f
  428c1a:	inc    esp
  428c1b:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  428c22:	jb     0x428c85
  428c24:	ins    DWORD PTR es:[edi],dx
  428c25:	inc    ecx
  428c26:	add    BYTE PTR [eax],al
  428c28:	popf   
  428c29:	add    DWORD PTR [ecx+0x73],ecx
  428c2c:	dec    ebp
  428c2d:	outs   dx,BYTE PTR gs:[esi]
  428c2f:	jne    0x428c31
  428c31:	add    BYTE PTR [eax+0x1],ch
  428c34:	inc    edi
  428c35:	gs je  0x428c8f
  428c38:	imul   ebp,DWORD PTR [esi+0x64],0x6200776f
  428c3f:	add    DWORD PTR [edi+0x65],eax
  428c42:	je     0x428c98
  428c44:	outs   dx,DWORD PTR ds:[esi]
  428c45:	jo     0x428c9e
  428c47:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428c4e:	mov    ds:0x57734901,eax
  428c53:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  428c5a:	jae    0x428cc5
  428c5c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  428c60:	sub    eax,0x74654701
  428c65:	dec    ebp
  428c66:	outs   dx,BYTE PTR gs:[esi]
  428c68:	jne    0x428cad
  428c6a:	push   0x4d6b6365
  428c6f:	popa   
  428c70:	jb     0x428cdd
  428c72:	inc    esp
  428c73:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  428c7a:	outs   dx,BYTE PTR ds:[esi]
  428c7b:	jae    0x428c7d
  428c7d:	add    BYTE PTR [edx],bl
  428c7f:	add    BYTE PTR [ebx+0x61],al
  428c82:	ins    BYTE PTR es:[edi],dx
  428c83:	ins    BYTE PTR es:[edi],dx
  428c84:	push   edi
  428c85:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428c8c:	outs   dx,DWORD PTR ds:[esi]
  428c8d:	arpl   WORD PTR [ecx+0x0],ax
  428c90:	repz add BYTE PTR [edi+0x65],al
  428c94:	je     0x428cd9
  428c96:	popa   
  428c97:	jb     0x428cfe
  428c99:	je     0x428ceb
  428c9b:	outs   dx,DWORD PTR ds:[esi]
  428c9c:	jae    0x428c9e
  428c9e:	ret    0x7702
  428ca1:	jbe    0x428d16
  428ca3:	jo     0x428d17
  428ca5:	imul   ebp,DWORD PTR [esi+0x74],0x5766
  428cac:	test   al,0x1
  428cae:	dec    esp
  428caf:	outs   dx,DWORD PTR ds:[esi]
  428cb0:	popa   
  428cb1:	fs inc ecx
  428cb3:	arpl   WORD PTR [ebx+0x65],sp
  428cb6:	ins    BYTE PTR es:[edi],dx
  428cb7:	gs jb  0x428d1b
  428cba:	je     0x428d2b
  428cbc:	jb     0x428d31
  428cbe:	push   edi
  428cbf:	add    BYTE PTR [edi],cl
  428cc1:	add    BYTE PTR [edx+0x72],al
  428cc4:	imul   ebp,DWORD PTR [esi+0x67],0x646e6957
  428ccb:	outs   dx,DWORD PTR ds:[esi]
  428ccc:	ja     0x428d22
  428cce:	outs   dx,DWORD PTR ds:[esi]
  428ccf:	push   esp
  428cd0:	outs   dx,DWORD PTR ds:[esi]
  428cd1:	jo     0x428cd3
  428cd3:	add    BYTE PTR [ecx+0x66654400],cl
  428cd9:	inc    esi
  428cda:	jb     0x428d3d
  428cdc:	ins    DWORD PTR es:[edi],dx
  428cdd:	gs push eax
  428cdf:	jb     0x428d50
  428ce1:	arpl   WORD PTR [ecx+0x0],ax
  428ce4:	mov    ebx,0x61724400
  428ce9:	ja     0x428d3f
  428ceb:	gs js  0x428d62
  428cee:	inc    ebp
  428cef:	js     0x428d48
  428cf1:	add    BYTE PTR [edx+0x666e4901],al
  428cf7:	ins    BYTE PTR es:[edi],dx
  428cf8:	popa   
  428cf9:	je     0x428d60
  428cfb:	push   edx
  428cfc:	arpl   WORD PTR gs:[eax+eax*1+0x5],si
  428d01:	add    dl,BYTE PTR [edx+0x65]
  428d04:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  428d0c:	popa   
  428d0d:	jae    0x428d82
  428d0f:	push   edi
  428d10:	add    BYTE PTR [eax],al
  428d12:	inc    ebp
  428d13:	add    dl,BYTE PTR [ebx+0x65]
  428d16:	je     0x428d64
  428d18:	popa   
  428d19:	jae    0x428d8f
  428d1b:	inc    ebp
  428d1c:	jb     0x428d90
  428d1e:	outs   dx,DWORD PTR ds:[esi]
  428d1f:	jb     0x428d66
  428d21:	js     0x428d23
  428d23:	add    BYTE PTR [edx+0x43734901],dl
  428d29:	push   0x70557261
  428d2e:	jo     0x428d95
  428d30:	jb     0x428d73
  428d32:	add    BYTE PTR [eax],al
  428d34:	inc    ebx
  428d35:	add    BYTE PTR [ebx+0x6c],al
  428d38:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  428d3f:	arpl   WORD PTR [edx+0x65],si
  428d42:	outs   dx,BYTE PTR gs:[esi]
  428d44:	add    BYTE PTR [eax],al
  428d46:	push   ecx
  428d47:	add    dl,BYTE PTR [ebx+0x65]
  428d4a:	je     0x428d9c
  428d4c:	popa   
  428d4d:	jb     0x428db4
  428d4f:	outs   dx,BYTE PTR ds:[esi]
  428d50:	je     0x428d52
  428d52:	xchg   ecx,eax
  428d53:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428d57:	arpl   WORD PTR [ebx+0x50],bp
  428d5a:	outs   dx,DWORD PTR ds:[esi]
  428d5b:	jo     0x428dd2
  428d5d:	jo     0x428dac
  428d5f:	outs   dx,BYTE PTR gs:[esi]
  428d61:	jne    0x428da8
  428d63:	js     0x428d65
  428d65:	add    BYTE PTR [edx],ah
  428d67:	add    DWORD PTR [edi+0x65],eax
  428d6a:	je     0x428db7
  428d6c:	gs jns 0x428dd1
  428d6f:	outs   dx,DWORD PTR ds:[esi]
  428d70:	popa   
  428d71:	jb     0x428dd7
  428d73:	dec    esp
  428d74:	popa   
  428d75:	jns    0x428de6
  428d77:	jne    0x428ded
  428d79:	add    bl,bh
  428d7b:	add    BYTE PTR [edi+0x65],al
  428d7e:	je     0x428dc3
  428d80:	ins    BYTE PTR es:[edi],dx
  428d81:	popa   
  428d82:	jae    0x428df7
  428d84:	dec    esi
  428d85:	popa   
  428d86:	ins    DWORD PTR es:[edi],dx
  428d87:	gs push edi
  428d89:	add    ch,bl
  428d8b:	add    BYTE PTR [ebp+0x71],al
  428d8e:	jne    0x428df1
  428d90:	ins    BYTE PTR es:[edi],dx
  428d91:	push   edx
  428d92:	arpl   WORD PTR gs:[eax+eax*1+0x32],si
  428d97:	add    dl,BYTE PTR [ebx+0x65]
  428d9a:	je     0x428ddf
  428d9c:	popa   
  428d9d:	jb     0x428e04
  428d9f:	je     0x428df1
  428da1:	outs   dx,DWORD PTR ds:[esi]
  428da2:	jae    0x428da4
  428da4:	and    al,0x0
  428da6:	inc    ebx
  428da7:	push   0x65676e61
  428dac:	dec    ebp
  428dad:	outs   dx,BYTE PTR gs:[esi]
  428daf:	jne    0x428e08
  428db1:	add    BYTE PTR [eax+0x73654400],bl
  428db7:	je     0x428e2b
  428db9:	outs   dx,DWORD PTR ds:[esi]
  428dba:	jns    0x428e13
  428dbc:	imul   ebp,DWORD PTR [esi+0x64],0xf500776f
  428dc3:	add    DWORD PTR [eax+0x6f],edx
  428dc6:	jae    0x428e3c
  428dc8:	push   esp
  428dc9:	push   0x64616572
  428dce:	dec    ebp
  428dcf:	gs jae 0x428e45
  428dd2:	popa   
  428dd3:	addr16 gs push edi
  428dd6:	add    BYTE PTR [eax],al
  428dd8:	push   edi
  428dd9:	add    dl,BYTE PTR [ebx+0x65]
  428ddc:	je     0x428e2e
  428dde:	jb     0x428e4f
  428de0:	jo     0x428e39
  428de2:	add    BYTE PTR [eax],al
  428de4:	mov    al,0x1
  428de6:	dec    esp
  428de7:	outs   dx,DWORD PTR ds:[esi]
  428de8:	popa   
  428de9:	fs dec ecx
  428deb:	arpl   WORD PTR [edi+0x6e],bp
  428dee:	push   edi
  428def:	add    bl,bh
  428df1:	add    DWORD PTR [eax+0x74],edx
  428df4:	dec    ecx
  428df5:	outs   dx,BYTE PTR ds:[esi]
  428df6:	push   edx
  428df7:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428dfc:	dec    edx
  428dfd:	add    dl,BYTE PTR [ebx+0x65]
  428e00:	je     0x428e4f
  428e02:	outs   dx,BYTE PTR gs:[esi]
  428e04:	jne    0x428e4a
  428e06:	gs popaw 
  428e09:	jne    0x428e77
  428e0b:	je     0x428e56
  428e0d:	je     0x428e74
  428e0f:	ins    DWORD PTR es:[edi],dx
  428e10:	add    BYTE PTR [eax],al
  428e12:	sti    
  428e13:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428e17:	arpl   WORD PTR [ebx+0x50],bp
  428e1a:	outs   dx,DWORD PTR ds:[esi]
  428e1b:	jo     0x428e92
  428e1d:	jo     0x428e6c
  428e1f:	outs   dx,BYTE PTR gs:[esi]
  428e21:	jne    0x428e23
  428e23:	add    BYTE PTR [ebp+0x64705502],ah
  428e29:	popa   
  428e2a:	je     0x428e91
  428e2c:	push   edi
  428e2d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428e34:	push   ss
  428e35:	add    dl,BYTE PTR [edx+0x65]
  428e38:	ins    DWORD PTR es:[edi],dx
  428e39:	outs   dx,DWORD PTR ds:[esi]
  428e3a:	jbe    0x428ea1
  428e3c:	dec    ebp
  428e3d:	outs   dx,BYTE PTR gs:[esi]
  428e3f:	jne    0x428e41
  428e41:	add    BYTE PTR [edx+0x61724400],dh
  428e47:	ja     0x428e8f
  428e49:	jb     0x428eac
  428e4b:	ins    DWORD PTR es:[edi],dx
  428e4c:	gs inc ebx
  428e4e:	outs   dx,DWORD PTR ds:[esi]
  428e4f:	outs   dx,BYTE PTR ds:[esi]
  428e50:	je     0x428ec4
  428e52:	outs   dx,DWORD PTR ds:[esi]
  428e53:	ins    BYTE PTR es:[edi],dx
  428e54:	add    BYTE PTR [eax],al
  428e56:	mov    dl,0x1
  428e58:	dec    esp
  428e59:	outs   dx,DWORD PTR ds:[esi]
  428e5a:	popa   
  428e5b:	fs dec ecx
  428e5d:	ins    DWORD PTR es:[edi],dx
  428e5e:	popa   
  428e5f:	addr16 gs push edi
  428e62:	add    BYTE PTR [eax],al
  428e64:	add    al,BYTE PTR [eax]
  428e66:	inc    ecx
  428e67:	fs push 0x75
  428e6a:	jae    0x428ee0
  428e6c:	push   edi
  428e6d:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  428e74:	arpl   WORD PTR [eax+eax*1+0x0],si
  428e78:	add    DWORD PTR [ecx],0x65536e49
  428e7e:	outs   dx,BYTE PTR ds:[esi]
  428e7f:	fs dec ebp
  428e81:	gs jae 0x428ef7
  428e84:	popa   
  428e85:	addr16 gs inc ebp
  428e88:	js     0x428e8a
  428e8a:	xchg   BYTE PTR [ecx],al
  428e8c:	dec    ecx
  428e8d:	outs   dx,BYTE PTR ds:[esi]
  428e8e:	jae    0x428ef5
  428e90:	jb     0x428f06
  428e92:	dec    ebp
  428e93:	outs   dx,BYTE PTR gs:[esi]
  428e95:	jne    0x428eee
  428e97:	add    BYTE PTR ds:0x6c6c4100,al
  428e9d:	outs   dx,DWORD PTR ds:[esi]
  428e9e:	ja     0x428ef3
  428ea0:	gs je  0x428ee9
  428ea3:	outs   dx,DWORD PTR ds:[esi]
  428ea4:	jb     0x428f0b
  428ea6:	addr16 jb 0x428f18
  428ea9:	jne    0x428f19
  428eab:	fs push edi
  428ead:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428eb4:	add    BYTE PTR [edx],0x53
  428eb7:	ja     0x428f1a
  428eb9:	jo     0x428f08
  428ebb:	outs   dx,DWORD PTR ds:[esi]
  428ebc:	jne    0x428f31
  428ebe:	gs inc edx
  428ec0:	jne    0x428f36
  428ec2:	je     0x428f33
  428ec4:	outs   dx,BYTE PTR ds:[esi]
  428ec5:	add    bh,ch
  428ec7:	add    DWORD PTR [eax+0x65],edx
  428eca:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  428ecf:	jae    0x428f32
  428ed1:	addr16 gs push edi
  428ed4:	add    BYTE PTR [eax],al
  428ed6:	cdq    
  428ed7:	add    BYTE PTR [ecx+ebp*2+0x61],al
  428edb:	ins    BYTE PTR es:[edi],dx
  428edc:	outs   dx,DWORD PTR ds:[esi]
  428edd:	addr16 inc edx
  428edf:	outs   dx,DWORD PTR ds:[esi]
  428ee0:	js     0x428f2b
  428ee2:	outs   dx,BYTE PTR ds:[esi]
  428ee3:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  428eeb:	jb     0x428f4e
  428eed:	ins    DWORD PTR es:[edi],dx
  428eee:	inc    ecx
  428eef:	add    BYTE PTR [ebp+0x0],bl
  428ef2:	inc    ebx
  428ef3:	jb     0x428f5a
  428ef5:	popa   
  428ef6:	je     0x428f5d
  428ef8:	dec    ecx
  428ef9:	arpl   WORD PTR [edi+0x6e],bp
  428efc:	dec    ecx
  428efd:	outs   dx,BYTE PTR ds:[esi]
  428efe:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  428f06:	stos   BYTE PTR es:[edi],al
  428f07:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428f0b:	fs inc edx
  428f0d:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb1005770
  428f15:	add    dl,BYTE PTR [esi+0x6b]
  428f18:	dec    ebx
  428f19:	gs jns 0x428f6f
  428f1c:	arpl   WORD PTR [ecx+0x6e],sp
  428f1f:	push   edi
  428f20:	add    BYTE PTR [eax],al
  428f22:	adc    eax,DWORD PTR [ecx]
  428f24:	inc    edi
  428f25:	gs je  0x428f6c
  428f28:	outs   dx,DWORD PTR ds:[esi]
  428f29:	jne    0x428f8d
  428f2b:	ins    BYTE PTR es:[edi],dx
  428f2c:	gs inc ebx
  428f2e:	ins    BYTE PTR es:[edi],dx
  428f2f:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  428f36:	add    BYTE PTR [eax],al
  428f38:	add    WORD PTR [edi+0x65],ax
  428f3c:	je     0x428f93
  428f3e:	jae    0x428fa5
  428f40:	jb     0x428f91
  428f42:	bound  ebp,QWORD PTR [edx+0x65]
  428f45:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428f49:	outs   dx,WORD PTR ds:[esi]
  428f4b:	jb     0x428fba
  428f4d:	popa   
  428f4e:	je     0x428fb9
  428f50:	outs   dx,DWORD PTR ds:[esi]
  428f51:	outs   dx,BYTE PTR ds:[esi]
  428f52:	push   edi
  428f53:	add    BYTE PTR [eax+0x1],bl
  428f56:	inc    edi
  428f57:	gs je  0x428fad
  428f5a:	jne    0x428fbe
  428f5c:	dec    ebp
  428f5d:	outs   dx,BYTE PTR gs:[esi]
  428f5f:	jne    0x428f61
  428f61:	add    dh,dh
  428f63:	add    BYTE PTR [edi+0x65],al
  428f66:	je     0x428fab
  428f68:	ins    BYTE PTR es:[edi],dx
  428f69:	popa   
  428f6a:	jae    0x428fdf
  428f6c:	dec    ecx
  428f6d:	outs   dx,BYTE PTR ds:[esi]
  428f6e:	outs   dx,WORD PTR ds:[esi]
  428f70:	inc    ebp
  428f71:	js     0x428fca
  428f73:	add    BYTE PTR [ecx+eax*1],cl
  428f76:	inc    edi
  428f77:	gs je  0x428fbe
  428f7a:	gs jae 0x428fe8
  428f7d:	je     0x428fee
  428f7f:	jo     0x428fd8
  428f81:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428f88:	sub    eax,0x6e655302
  428f8d:	fs dec esi
  428f8f:	outs   dx,DWORD PTR ds:[esi]
  428f90:	je     0x428ffb
  428f92:	data16 jns 0x428fe2
  428f95:	gs jae 0x42900b
  428f98:	popa   
  428f99:	addr16 gs push edi
  428f9c:	add    BYTE PTR [eax],al
  428f9e:	and    al,BYTE PTR [edx]
  428fa0:	push   ebx
  428fa1:	outs   dx,BYTE PTR gs:[esi]
  428fa3:	fs inc esp
  428fa5:	ins    BYTE PTR es:[edi],dx
  428fa6:	addr16 dec ecx
  428fa8:	je     0x42900f
  428faa:	ins    DWORD PTR es:[edi],dx
  428fab:	dec    ebp
  428fac:	gs jae 0x429022
  428faf:	popa   
  428fb0:	addr16 gs push edi
  428fb3:	add    BYTE PTR [eax],ch
  428fb5:	add    DWORD PTR [edi+0x65],eax
  428fb8:	je     0x429006
  428fba:	popa   
  428fbb:	jae    0x429031
  428fbd:	inc    ecx
  428fbe:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428fc2:	gs push eax
  428fc4:	outs   dx,DWORD PTR ds:[esi]
  428fc5:	jo     0x42903c
  428fc7:	jo     0x428fc9
  428fc9:	add    BYTE PTR [ecx],ch
  428fcb:	add    BYTE PTR [ebx+0x68],al
  428fce:	popa   
  428fcf:	jb     0x42901d
  428fd1:	outs   dx,DWORD PTR ds:[esi]
  428fd2:	ja     0x429039
  428fd4:	jb     0x42902d
  428fd6:	add    BYTE PTR [eax],al
  428fd8:	xor    al,BYTE PTR [ecx]
  428fda:	inc    edi
  428fdb:	gs je  0x42902b
  428fde:	outs   dx,BYTE PTR gs:[esi]
  428fe0:	jne    0x42902b
  428fe2:	je     0x429049
  428fe4:	ins    DWORD PTR es:[edi],dx
  428fe5:	inc    ebx
  428fe6:	outs   dx,DWORD PTR ds:[esi]
  428fe7:	jne    0x429057
  428fe9:	je     0x428feb
  428feb:	add    BYTE PTR ds:0x74655302,bh
  428ff1:	inc    esp
  428ff2:	ins    BYTE PTR es:[edi],dx
  428ff3:	addr16 dec ecx
  428ff5:	je     0x42905c
  428ff7:	ins    DWORD PTR es:[edi],dx
  428ff8:	dec    ecx
  428ff9:	outs   dx,BYTE PTR ds:[esi]
  428ffa:	je     0x428ffc
  428ffc:	mov    al,ds:0x57734901
  429001:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  429008:	mov    ds:0x57734901,al
  42900d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  429014:	imul   esp,DWORD PTR [ebx+0x6f],0xe7006564
  42901b:	add    DWORD PTR [edi+0x70],ecx
  42901e:	outs   dx,BYTE PTR gs:[esi]
  429020:	inc    esp
  429021:	gs jae 0x42908f
  429024:	je     0x429095
  429026:	jo     0x42907f
  429028:	add    BYTE PTR [eax],al
  42902a:	cmp    al,BYTE PTR [eax]
  42902c:	inc    ebx
  42902d:	push   0x446b6365
  429032:	ins    BYTE PTR es:[edi],dx
  429033:	addr16 inc edx
  429035:	jne    0x4290ab
  429037:	je     0x4290a8
  429039:	outs   dx,BYTE PTR ds:[esi]
  42903a:	add    BYTE PTR [eax],al
  42903c:	mov    eax,DWORD PTR [ecx]
  42903e:	dec    ecx
  42903f:	outs   dx,BYTE PTR ds:[esi]
  429040:	jbe    0x4290a7
  429042:	jb     0x4290b8
  429044:	push   edx
  429045:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42904a:	pop    DWORD PTR [eax]
  42904c:	inc    esp
  42904d:	gs push di
  429050:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  429057:	outs   dx,DWORD PTR ds:[esi]
  429058:	arpl   WORD PTR [edi+0x0],dx
  42905b:	add    BYTE PTR ds:0x74654701,cl
  429061:	inc    esp
  429062:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  429069:	jae    0x4290d0
  42906b:	push   ebp
  42906c:	outs   dx,BYTE PTR ds:[esi]
  42906d:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x47016500
  429075:	gs je  0x4290cd
  429078:	jae    0x4290df
  42907a:	jb     0x4290cb
  42907c:	bound  ebp,QWORD PTR [edx+0x65]
  42907f:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  429083:	outs   dx,WORD PTR ds:[esi]
  429085:	jb     0x4290f4
  429087:	popa   
  429088:	je     0x4290f3
  42908a:	outs   dx,DWORD PTR ds:[esi]
  42908b:	outs   dx,BYTE PTR ds:[esi]
  42908c:	inc    ecx
  42908d:	add    BYTE PTR [ecx+0x44734901],bl
  429093:	ins    BYTE PTR es:[edi],dx
  429094:	addr16 inc edx
  429096:	jne    0x42910c
  429098:	je     0x429109
  42909a:	outs   dx,BYTE PTR ds:[esi]
  42909b:	inc    ebx
  42909c:	push   0x656b6365
  4290a1:	add    BYTE PTR fs:[eax],al
  4290a4:	ins    DWORD PTR es:[edi],dx
  4290a5:	add    DWORD PTR [edi+0x65],eax
  4290a8:	je     0x429101
  4290aa:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4290b1:	outs   dx,BYTE PTR ds:[esi]
  4290b2:	addr16 push edi
  4290b4:	add    BYTE PTR [eax],al
  4290b6:	popa   
  4290b7:	add    BYTE PTR [ebx+0x72],al
  4290ba:	gs popa 
  4290bc:	je     0x429123
  4290be:	push   eax
  4290bf:	outs   dx,DWORD PTR ds:[esi]
  4290c0:	jo     0x429137
  4290c2:	jo     0x429111
  4290c4:	outs   dx,BYTE PTR gs:[esi]
  4290c6:	jne    0x4290c8
  4290c8:	sbb    eax,DWORD PTR [eax]
  4290ca:	inc    ebx
  4290cb:	popa   
  4290cc:	ins    BYTE PTR es:[edi],dx
  4290cd:	ins    BYTE PTR es:[edi],dx
  4290ce:	push   edi
  4290cf:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4290d6:	outs   dx,DWORD PTR ds:[esi]
  4290d7:	arpl   WORD PTR [edi+0x0],dx
  4290da:	stos   DWORD PTR es:[edi],eax
  4290db:	add    BYTE PTR [edx+esi*2+0x61],al
  4290df:	ja     0x429122
  4290e1:	outs   dx,BYTE PTR ds:[esi]
  4290e2:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  4290e9:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  4290ee:	sahf   
  4290ef:	add    DWORD PTR [ecx+0x73],ecx
  4290f2:	push   edx
  4290f3:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4290f8:	jo     0x42916e
  4290fa:	jns    0x4290fc
  4290fc:	inc    BYTE PTR [eax]
  4290fe:	inc    edi
  4290ff:	gs je  0x429145
  429102:	ins    BYTE PTR es:[edi],dx
  429103:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  42910a:	jb     0x42910c
  42910c:	lds    eax,FWORD PTR [eax]
  42910e:	inc    ebp
  42910f:	outs   dx,BYTE PTR ds:[esi]
  429110:	fs push eax
  429112:	popa   
  429113:	imul   ebp,DWORD PTR [esi+0x74],0xdc0000
  42911a:	inc    ebp
  42911b:	outs   dx,BYTE PTR ds:[esi]
  42911c:	jne    0x42918b
  42911e:	push   edi
  42911f:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  429126:	xchg   DWORD PTR [ecx],eax
  429128:	dec    ecx
  429129:	outs   dx,BYTE PTR ds:[esi]
  42912a:	je     0x429191
  42912c:	jb     0x42919c
  42912e:	popa   
  42912f:	ins    BYTE PTR es:[edi],dx
  429130:	inc    edi
  429131:	gs je  0x42918b
  429134:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  42913b:	js     0x4291b1
  42913d:	add    BYTE PTR [eax+0x43734901],dl
  429143:	push   0x6f4c7261
  429148:	ja     0x4291af
  42914a:	jb     0x42918d
  42914c:	add    BYTE PTR [eax],al
  42914e:	aad    0x1
  429150:	dec    ebp
  429151:	gs jae 0x4291c7
  429154:	popa   
  429155:	addr16 gs inc edx
  429158:	outs   dx,DWORD PTR ds:[esi]
  429159:	js     0x4291b2
  42915b:	add    BYTE PTR [edi+0x636f4c01],bh
  429161:	imul   edx,DWORD PTR [edi+0x69],0x6e
  429165:	outs   dx,DWORD PTR fs:[esi]
  429167:	ja     0x4291be
  429169:	jo     0x4291cf
  42916b:	popa   
  42916c:	je     0x4291d3
  42916e:	add    BYTE PTR [eax],al
  429170:	add    BYTE PTR es:[ebx+0x68],al
  429174:	popa   
  429175:	jb     0x4291c3
  429177:	outs   dx,DWORD PTR ds:[esi]
  429178:	ja     0x4291df
  42917a:	jb     0x4291bd
  42917c:	add    BYTE PTR [eax],al
  42917e:	call   0x6e6f:0x696e5502
  429185:	push   edx
  429186:	arpl   WORD PTR gs:[eax+eax*1+0x38],si
  42918b:	add    DWORD PTR [edi+0x65],eax
  42918e:	je     0x4291dd
  429190:	outs   dx,BYTE PTR gs:[esi]
  429192:	jne    0x4291e7
  429194:	je     0x429208
  429196:	imul   ebp,DWORD PTR [esi+0x67],0xd9000041
  42919d:	add    DWORD PTR [ebp+0x6f],ecx
  4291a0:	outs   dx,BYTE PTR ds:[esi]
  4291a1:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  4291a9:	push   edx
  4291aa:	arpl   WORD PTR gs:[eax+eax*1+0x6d],si
  4291af:	add    dl,BYTE PTR [ebx+0x65]
  4291b2:	je     0x42920b
  4291b4:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4291bb:	outs   dx,BYTE PTR ds:[esi]
  4291bc:	addr16 inc ecx
  4291be:	add    BYTE PTR [eax],al
  4291c0:	or     al,0x0
  4291c2:	inc    edx
  4291c3:	imul   ebp,DWORD PTR gs:[bp+0x44],0x72656665
  4291cc:	push   edi
  4291cd:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  4291d4:	jae    0x4291d6
  4291d6:	add    BYTE PTR cs:[ebx+0x68],al
  4291da:	popa   
  4291db:	jb     0x42922d
  4291dd:	jb     0x429244
  4291df:	jbe    0x429222
  4291e1:	add    bl,bl
  4291e3:	add    DWORD PTR [ebp+0x6f],ecx
  4291e6:	jbe    0x42924d
  4291e8:	push   edi
  4291e9:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  4291f0:	mov    dh,0x1
  4291f2:	dec    esp
  4291f3:	outs   dx,DWORD PTR ds:[esi]
  4291f4:	popa   
  4291f5:	fs dec ebp
  4291f7:	outs   dx,BYTE PTR gs:[esi]
  4291f9:	jne    0x42923c
  4291fb:	add    BYTE PTR [ebp+0x79656b02],bh
  429201:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  429205:	jbe    0x42926c
  429207:	outs   dx,BYTE PTR ds:[esi]
  429208:	je     0x42920a
  42920a:	pop    esp
  42920b:	add    DWORD PTR [edi+0x65],eax
  42920e:	je     0x429263
  429210:	jns    0x429285
  429212:	je     0x429279
  429214:	ins    DWORD PTR es:[edi],dx
  429215:	dec    ebp
  429216:	gs je  0x42928b
  429219:	imul   esp,DWORD PTR [ebx+0x73],0x1af0000
  429220:	dec    esp
  429221:	outs   dx,DWORD PTR ds:[esi]
  429222:	popa   
  429223:	fs dec ecx
  429225:	arpl   WORD PTR [edi+0x6e],bp
  429228:	inc    ecx
  429229:	add    BYTE PTR [ebx+0x1],al
  42922c:	inc    edi
  42922d:	gs je  0x42927e
  429230:	gs js  0x4292a7
  429233:	inc    esp
  429234:	ins    BYTE PTR es:[edi],dx
  429235:	addr16 push esp
  429237:	popa   
  429238:	bound  ecx,QWORD PTR [ecx+0x74]
  42923b:	gs ins DWORD PTR es:[edi],dx
  42923d:	add    BYTE PTR [ebx+0x61724400],dh
  429243:	ja     0x42928e
  429245:	arpl   WORD PTR [edi+0x6e],bp
  429248:	add    BYTE PTR [eax],al
  42924a:	std    
  42924b:	add    BYTE PTR [edi+0x65],al
  42924e:	je     0x429293
  429250:	ins    BYTE PTR es:[edi],dx
  429251:	imul   esp,DWORD PTR [ebp+0x6e],0x63655274
  429258:	je     0x42925a
  42925a:	add    DWORD PTR ds:[edi+0x65],eax
  42925e:	je     0x4292ad
  429260:	gs jae 0x4292d6
  429263:	popa   
  429264:	addr16 gs push edi
  429267:	add    BYTE PTR [edx+0x1],al
  42926a:	inc    edi
  42926b:	gs je  0x4292bc
  42926e:	gs js  0x4292e5
  429271:	inc    esp
  429272:	ins    BYTE PTR es:[edi],dx
  429273:	addr16 inc edi
  429275:	jb     0x4292e6
  429277:	jne    0x4292e9
  429279:	dec    ecx
  42927a:	je     0x4292e1
  42927c:	ins    DWORD PTR es:[edi],dx
  42927d:	add    BYTE PTR ds:0x6c655202,dl
  429283:	gs popa 
  429285:	jae    0x4292ec
  429287:	inc    esp
  429288:	inc    ebx
  429289:	add    BYTE PTR [ebp+0x53],dl
  42928c:	inc    ebp
  42928d:	push   edx
  42928e:	xor    esi,DWORD PTR [edx]
  429290:	cs fs ins BYTE PTR es:[edi],dx
  429293:	ins    BYTE PTR es:[edi],dx
  429294:	add    BYTE PTR [eax],al
  429296:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  42929a:	jbe    0x429301
  42929c:	inc    esi
  42929d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x71004178
  4292a5:	add    DWORD PTR [esi+0x69],eax
  4292a8:	outs   dx,BYTE PTR ds:[esi]
  4292a9:	fs push edx
  4292ab:	gs jae 0x42931d
  4292ae:	jne    0x429322
  4292b0:	arpl   WORD PTR [ebp+0x45],sp
  4292b3:	js     0x42930c
  4292b5:	add    BYTE PTR [ebx],dl
  4292b7:	add    al,0x53
  4292b9:	gs je  0x4292ff
  4292bc:	jne    0x429330
  4292be:	jb     0x429325
  4292c0:	outs   dx,BYTE PTR ds:[esi]
  4292c1:	je     0x429307
  4292c3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4292ca:	jns    0x42930d
  4292cc:	add    BYTE PTR [eax],al
  4292ce:	sub    BYTE PTR [ebx+edx*2],al
  4292d1:	gs je  0x42931c
  4292d4:	popa   
  4292d5:	outs   dx,BYTE PTR ds:[esi]
  4292d6:	fs ins BYTE PTR es:[edi],dx
  4292d8:	gs inc ebx
  4292da:	outs   dx,DWORD PTR ds:[esi]
  4292db:	jne    0x42934b
  4292dd:	je     0x4292df
  4292df:	add    BYTE PTR [ebx+0x6d6f4300],dh
  4292e5:	jo     0x429348
  4292e7:	jb     0x42934e
  4292e9:	push   ebx
  4292ea:	je     0x42935e
  4292ec:	imul   ebp,DWORD PTR [esi+0x67],0x52000041
  4292f3:	add    DWORD PTR [esi+0x69],eax
  4292f6:	ins    BYTE PTR es:[edi],dx
  4292f7:	gs push esp
  4292f9:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  429300:	arpl   WORD PTR [ecx+0x6c],sp
  429303:	inc    esi
  429304:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  42930c:	cmp    eax,DWORD PTR [ebx+edx*2]
  42930f:	gs je  0x429365
  429312:	jns    0x429387
  429314:	je     0x42937b
  429316:	ins    DWORD PTR es:[edi],dx
  429317:	push   esp
  429318:	imul   ebp,DWORD PTR [ebp+0x65],0x47018e00
  42931f:	gs je  0x429363
  429322:	inc    ebx
  429323:	push   eax
  429324:	add    BYTE PTR [eax],al
  429326:	arpl   WORD PTR [ecx],ax
  429328:	inc    esi
  429329:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  429330:	je     0x429378
  429332:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x33f0000
  42933a:	dec    esp
  42933b:	outs   dx,DWORD PTR ds:[esi]
  42933c:	popa   
  42933d:	fs dec esp
  42933f:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  429346:	add    BYTE PTR [eax],al
  429348:	push   ss
  429349:	add    DWORD PTR [ebp+0x6e],eax
  42934c:	je     0x4293b3
  42934e:	jb     0x429393
  429350:	jb     0x4293bb
  429352:	je     0x4293bd
  429354:	arpl   WORD PTR [ecx+0x6c],sp
  429357:	push   ebx
  429358:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  42935d:	outs   dx,BYTE PTR ds:[esi]
  42935e:	add    BYTE PTR [eax],al
  429360:	cdq    
  429361:	add    DWORD PTR [edi+0x65],eax
  429364:	je     0x4293a9
  429366:	outs   dx,DWORD PTR ds:[esi]
  429367:	ins    DWORD PTR es:[edi],dx
  429368:	ins    DWORD PTR es:[edi],dx
  429369:	inc    ebx
  42936a:	outs   dx,DWORD PTR ds:[esi]
  42936b:	outs   dx,BYTE PTR ds:[esi]
  42936c:	imul   sp,WORD PTR [edi+0x0],0x188
  429372:	inc    esi
  429373:	jb     0x4293da
  429375:	gs push edx
  429377:	gs jae 0x4293e9
  42937a:	jne    0x4293ee
  42937c:	arpl   WORD PTR [ebp+0x0],sp
  42937f:	add    BYTE PTR [eax+0x1],ah
  429382:	inc    esi
  429383:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  42938a:	je     0x4293d2
  42938c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x1930000
  429394:	inc    edi
  429395:	gs je  0x4293da
  429398:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  42939f:	jo     0x429406
  4293a1:	push   edi
  4293a2:	add    BYTE PTR [eax],al
  4293a4:	fiadd  WORD PTR [esp+ebp*2]
  4293a7:	jae    0x42941d
  4293a9:	jb     0x429417
  4293ab:	outs   dx,BYTE PTR gs:[esi]
  4293ad:	push   edi
  4293ae:	add    BYTE PTR [eax],al
  4293b0:	pop    ds
  4293b1:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4293b5:	popa   
  4293b6:	ins    BYTE PTR es:[edi],dx
  4293b7:	push   ebx
  4293b8:	imul   edi,DWORD PTR [edx+0x65],0x47025700
  4293bf:	gs je  0x429415
  4293c2:	jns    0x429437
  4293c4:	je     0x42942b
  4293c6:	ins    DWORD PTR es:[edi],dx
  4293c7:	inc    esp
  4293c8:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4293cf:	jns    0x429412
  4293d1:	add    BYTE PTR [esi+0x74654701],ah
  4293d7:	inc    ebx
  4293d8:	outs   dx,DWORD PTR ds:[esi]
  4293d9:	ins    DWORD PTR es:[edi],dx
  4293da:	jo     0x429451
  4293dc:	je     0x429443
  4293de:	jb     0x42942e
  4293e0:	popa   
  4293e1:	ins    DWORD PTR es:[edi],dx
  4293e2:	gs push edi
  4293e4:	add    BYTE PTR [eax],al
  4293e6:	rol    BYTE PTR [eax],cl
  4293e8:	inc    ebx
  4293e9:	jb     0x429450
  4293eb:	popa   
  4293ec:	je     0x429453
  4293ee:	inc    esi
  4293ef:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4293f7:	outs   dx,BYTE PTR ds:[esi]
  4293f8:	addr16 inc ecx
  4293fa:	add    BYTE PTR [eax],al
  4293fc:	retf   0x4300
  4293ff:	jb     0x429466
  429401:	popa   
  429402:	je     0x429469
  429404:	inc    esp
  429405:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  42940c:	jns    0x429465
  42940e:	add    BYTE PTR [eax],al
  429410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429411:	add    BYTE PTR [ebx+0x61],al
  429414:	outs   dx,BYTE PTR ds:[esi]
  429415:	arpl   WORD PTR [ebp+0x6c],sp
  429418:	push   edi
  429419:	popa   
  42941a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  429422:	ins    DWORD PTR es:[edi],dx
  429423:	gs jb  0x429426
  429426:	add    al,0x2
  429428:	inc    edi
  429429:	gs je  0x429478
  42942c:	outs   dx,DWORD PTR ds:[esi]
  42942d:	arpl   WORD PTR [ecx+0x6c],sp
  429430:	gs dec ecx
  429432:	outs   dx,BYTE PTR ds:[esi]
  429433:	outs   dx,WORD PTR ds:[esi]
  429435:	inc    ecx
  429436:	add    BYTE PTR [eax],al
  429438:	xor    eax,0x766f4d03
  42943d:	gs inc esi
  42943f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47019d00
  429447:	gs je  0x42948d
  42944a:	outs   dx,DWORD PTR ds:[esi]
  42944b:	ins    DWORD PTR es:[edi],dx
  42944c:	ins    DWORD PTR es:[edi],dx
  42944d:	push   ebx
  42944e:	je     0x4294b1
  429450:	je     0x4294b7
  429452:	add    BYTE PTR [eax],al
  429454:	mov    ah,0x3
  429456:	push   edx
  429457:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x61577265
  429460:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  429468:	ins    BYTE PTR es:[di],dx
  42946a:	gs dec edi
  42946c:	bound  ebp,QWORD PTR [edx+0x65]
  42946f:	arpl   WORD PTR [eax+eax*1+0x5d],si
  429473:	add    al,BYTE PTR [edi+0x65]
  429476:	je     0x4294cb
  429478:	jns    0x4294ed
  42947a:	je     0x4294e1
  42947c:	ins    DWORD PTR es:[edi],dx
  42947d:	push   esp
  42947e:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  429485:	jae    0x4294fb
  429487:	ins    DWORD PTR es:[edi],dx
  429488:	outs   dx,BYTE PTR gs:[esi]
  42948a:	je     0x42948c
  42948c:	add    al,0x1
  42948e:	inc    esp
  42948f:	gs ins BYTE PTR es:[edi],dx
  429491:	gs je  0x4294f9
  429494:	inc    esi
  429495:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47024900
  42949d:	gs je  0x4294f3
  4294a0:	push   0x5074726f
  4294a5:	popa   
  4294a6:	je     0x429510
  4294a8:	dec    esi
  4294a9:	popa   
  4294aa:	ins    DWORD PTR es:[edi],dx
  4294ab:	gs inc ecx
  4294ad:	add    BYTE PTR [edx],al
  4294af:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  4294b3:	gs je  0x42951b
  4294b6:	inc    ebx
  4294b7:	jb     0x429522
  4294b9:	je     0x429524
  4294bb:	arpl   WORD PTR [ecx+0x6c],sp
  4294be:	push   ebx
  4294bf:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4294c4:	outs   dx,BYTE PTR ds:[esi]
  4294c5:	add    bl,ah
  4294c7:	add    BYTE PTR [ebx+0x72],al
  4294ca:	gs popa 
  4294cc:	je     0x429533
  4294ce:	dec    esi
  4294cf:	popa   
  4294d0:	ins    DWORD PTR es:[edi],dx
  4294d1:	gs fs push eax
  4294d4:	imul   esi,DWORD PTR [eax+0x65],0xd4000057
  4294db:	add    cl,BYTE PTR [ecx+0x73]
  4294de:	inc    edx
  4294df:	popa   
  4294e0:	fs push edx
  4294e2:	gs popa 
  4294e4:	fs push eax
  4294e6:	je     0x42955a
  4294e8:	add    BYTE PTR [eax],al
  4294ea:	jnp    0x4294ee
  4294ec:	inc    edi
  4294ed:	gs je  0x429545
  4294f0:	jae    0x429557
  4294f2:	jb     0x429538
  4294f4:	gs popaw 
  4294f7:	jne    0x429565
  4294f9:	je     0x429547
  4294fb:	inc    ebx
  4294fc:	dec    ecx
  4294fd:	inc    esp
  4294fe:	add    BYTE PTR [eax],al
  429500:	inc    ebp
  429501:	add    al,BYTE PTR [edi+0x65]
  429504:	je     0x429556
  429506:	jb     0x429577
  429508:	arpl   WORD PTR [ecx+0x64],ax
  42950b:	fs jb  0x429573
  42950e:	jae    0x429583
  429510:	add    BYTE PTR [eax],al
  429512:	mov    BYTE PTR [ebx],0x52
  429515:	gs jae 0x42957d
  429518:	je     0x42955f
  42951a:	jbe    0x429581
  42951c:	outs   dx,BYTE PTR ds:[esi]
  42951d:	je     0x42951f
  42951f:	add    BYTE PTR [edx+0x656c4300],ch
  429525:	popa   
  429526:	jb     0x42956b
  429528:	outs   dx,DWORD PTR ds:[esi]
  429529:	ins    DWORD PTR es:[edi],dx
  42952a:	ins    DWORD PTR es:[edi],dx
  42952b:	inc    ebp
  42952c:	jb     0x4295a0
  42952e:	outs   dx,DWORD PTR ds:[esi]
  42952f:	jb     0x429531
  429531:	add    BYTE PTR [eax+0x61654802],bh
  429537:	jo     0x42958e
  429539:	outs   dx,BYTE PTR ds:[esi]
  42953a:	ins    BYTE PTR es:[edi],dx
  42953b:	outs   dx,DWORD PTR ds:[esi]
  42953c:	arpl   WORD PTR [ebx+0x0],bp
  42953f:	add    dh,ch
  429541:	add    edx,DWORD PTR [ebx+0x65]
  429544:	je     0x429589
  429546:	outs   dx,DWORD PTR ds:[esi]
  429547:	ins    DWORD PTR es:[edi],dx
  429548:	ins    DWORD PTR es:[edi],dx
  429549:	push   ebx
  42954a:	je     0x4295ad
  42954c:	je     0x4295b3
  42954e:	add    BYTE PTR [eax],al
  429550:	out    dx,eax
  429551:	add    DWORD PTR [edi+0x65],eax
  429554:	je     0x42959c
  429556:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  42955e:	bound  esi,QWORD PTR [ebp+0x74]
  429561:	gs jae 0x4295a5
  429564:	add    BYTE PTR [eax],al
  429566:	sub    al,0x1
  429568:	inc    ebp
  429569:	outs   dx,BYTE PTR ds:[esi]
  42956a:	jne    0x4295d9
  42956c:	push   ebx
  42956d:	jns    0x4295e2
  42956f:	je     0x4295d6
  429571:	ins    DWORD PTR es:[edi],dx
  429572:	dec    esp
  429573:	outs   dx,DWORD PTR ds:[esi]
  429574:	arpl   WORD PTR [ecx+0x6c],sp
  429577:	gs jae 0x4295bb
  42957a:	add    BYTE PTR [eax],al
  42957c:	sub    eax,0x74655304
  429581:	dec    esp
  429582:	outs   dx,DWORD PTR ds:[esi]
  429583:	arpl   WORD PTR [ecx+0x6c],sp
  429586:	push   esp
  429587:	imul   ebp,DWORD PTR [ebp+0x65],0x1240000
  42958e:	inc    ebp
  42958f:	outs   dx,BYTE PTR ds:[esi]
  429590:	jne    0x4295ff
  429592:	push   edx
  429593:	gs jae 0x429605
  429596:	jne    0x42960a
  429598:	arpl   WORD PTR [ebp+0x4e],sp
  42959b:	popa   
  42959c:	ins    DWORD PTR es:[edi],dx
  42959d:	gs jae 0x4295f7
  4295a0:	add    BYTE PTR [eax],al
  4295a2:	imul   eax,DWORD PTR [esp+edx*2],0x7246736c
  4295a9:	gs add BYTE PTR gs:[ebx],ah
  4295ad:	add    al,0x53
  4295af:	gs je  0x4295f8
  4295b2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  4295ba:	gs jb  0x4295bd
  4295bd:	add    BYTE PTR [edi+0x1],ch
  4295c0:	inc    esi
  4295c1:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  4295c8:	jne    0x42963c
  4295ca:	arpl   WORD PTR [ebp+0x41],sp
  4295cd:	add    BYTE PTR ds:0x6c654401,al
  4295d3:	gs je  0x42963b
  4295d6:	inc    esi
  4295d7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x4701a400
  4295df:	gs je  0x429625
  4295e2:	outs   dx,DWORD PTR ds:[esi]
  4295e3:	ins    DWORD PTR es:[edi],dx
  4295e4:	jo     0x42965b
  4295e6:	je     0x42964d
  4295e8:	jb     0x429638
  4295ea:	popa   
  4295eb:	ins    DWORD PTR es:[edi],dx
  4295ec:	gs inc ebp
  4295ee:	js     0x429631
  4295f0:	add    BYTE PTR [eax],al
  4295f2:	cmp    BYTE PTR [ebx],al
  4295f4:	dec    ebp
  4295f5:	outs   dx,DWORD PTR ds:[esi]
  4295f6:	jbe    0x42965d
  4295f8:	inc    esi
  4295f9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52454b00
  429601:	dec    esi
  429602:	inc    ebp
  429603:	dec    esp
  429604:	xor    esi,DWORD PTR [edx]
  429606:	cs fs ins BYTE PTR es:[edi],dx
  429609:	ins    BYTE PTR es:[edi],dx
  42960a:	add    BYTE PTR [eax],al
  42960c:	add    BYTE PTR [eax],al
  42960e:	add    BYTE PTR [eax],al
  429610:	jbe    0x429634
  429612:	add    al,BYTE PTR [eax]
	...
  429630:	dec    ebx
  429631:	xchg   esi,eax
  429632:	add    al,BYTE PTR [eax]
	...
  429640:	imul   esp,DWORD PTR fs:[edx+0x6f],0x632e6661
  429648:	outs   dx,DWORD PTR ds:[esi]
  429649:	ins    DWORD PTR es:[edi],dx
  42964a:	add    BYTE PTR [ebx+0x72],al
  42964d:	je     0x4296a3
  42964f:	push   0x64616572
  429654:	inc    ebp
  429655:	js     0x429698
  429657:	inc    eax
  429658:	cmp    BYTE PTR [eax],al
